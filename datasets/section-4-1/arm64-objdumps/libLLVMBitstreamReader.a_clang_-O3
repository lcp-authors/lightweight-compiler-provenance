In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitstreamReader.a_clang_-O3:

BitstreamReader.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>:
       0:	sub	sp, sp, #0xc0
       4:	stp	x29, x30, [sp, #128]
       8:	stp	x24, x23, [sp, #144]
       c:	stp	x22, x21, [sp, #160]
      10:	stp	x20, x19, [sp, #176]
      14:	add	x29, sp, #0x80
      18:	mov	x19, x8
      1c:	ldp	w8, w9, [x0, #72]
      20:	ldr	w24, [x0, #36]
      24:	mov	x21, x2
      28:	mov	w22, w1
      2c:	mov	x20, x0
      30:	cmp	w8, w9
      34:	add	x23, x0, #0x40
      38:	b.cs	35c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x35c>  // b.hs, b.nlast
      3c:	ldr	x10, [x23]
      40:	mov	w11, w8
      44:	cmp	w8, w9
      48:	add	x9, x10, x11, lsl #5
      4c:	str	w24, [x9]
      50:	stp	xzr, xzr, [x9, #16]
      54:	str	xzr, [x9, #8]
      58:	b.cs	378 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x378>  // b.hs, b.nlast
      5c:	mov	x0, x20
      60:	ldr	q0, [x0, #40]!
      64:	add	w8, w8, #0x1
      68:	add	x9, x10, x8, lsl #5
      6c:	str	w8, [x0, #32]
      70:	stur	q0, [x9, #-24]
      74:	ldr	x8, [x0, #16]
      78:	stur	x8, [x9, #-8]
      7c:	ldr	x9, [x0, #296]
      80:	stp	xzr, xzr, [x0]
      84:	str	xzr, [x0, #16]
      88:	cbz	x9, f4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xf4>
      8c:	ldp	x8, x9, [x9]
      90:	cmp	x8, x9
      94:	b.eq	b8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xb8>  // b.none
      98:	mov	x10, x9
      9c:	ldr	w11, [x10, #-88]!
      a0:	cmp	w11, w22
      a4:	b.ne	b8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xb8>  // b.any
      a8:	ldp	x2, x3, [x10, #8]
      ac:	mov	x1, xzr
      b0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      b4:	b	f4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xf4>
      b8:	sub	x9, x9, x8
      bc:	mov	w10, #0x8ba3                	// #35747
      c0:	lsr	x9, x9, #3
      c4:	movk	w10, #0xba2e, lsl #16
      c8:	mul	w9, w9, w10
      cc:	cbz	w9, f4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xf4>
      d0:	mov	w11, wzr
      d4:	mov	w12, #0x58                  	// #88
      d8:	umaddl	x10, w11, w12, x8
      dc:	ldr	w13, [x10]
      e0:	cmp	w13, w22
      e4:	b.eq	a8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xa8>  // b.none
      e8:	add	w11, w11, #0x1
      ec:	cmp	w9, w11
      f0:	b.ne	d8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xd8>  // b.any
      f4:	mov	x8, sp
      f8:	mov	w1, #0x4                   	// #4
      fc:	mov	x0, x20
     100:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     104:	ldrb	w10, [sp, #8]
     108:	ubfiz	w9, w10, #1, #1
     10c:	and	w8, w10, #0xfffffffd
     110:	orr	w11, w9, w8
     114:	strb	w11, [sp, #8]
     118:	tbnz	w10, #0, 200 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x200>
     11c:	cbnz	w9, 370 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x370>
     120:	ldr	w22, [sp]
     124:	cmp	w22, #0x41
     128:	str	w22, [x20, #36]
     12c:	b.cc	250 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x250>  // b.lo, b.ul, b.last
     130:	bl	0 <_ZNSt3_V216generic_categoryEv>
     134:	sturb	wzr, [x29, #-16]
     138:	mov	w9, #0x1                   	// #1
     13c:	stp	xzr, xzr, [sp, #64]
     140:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
     144:	ldr	x10, [x10]
     148:	str	w22, [sp, #32]
     14c:	str	w9, [sp, #80]
     150:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     154:	ldr	x9, [x9]
     158:	sub	x8, x29, #0x20
     15c:	adrp	x11, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     160:	add	x10, x10, #0x10
     164:	mov	x20, x0
     168:	add	x11, x11, #0x0
     16c:	stp	x10, xzr, [sp, #48]
     170:	mov	w10, #0x40                  	// #64
     174:	str	x8, [sp, #88]
     178:	add	x22, x8, #0x10
     17c:	add	x8, x9, #0x10
     180:	add	x0, sp, #0x30
     184:	add	x1, sp, #0x10
     188:	stp	x22, xzr, [x29, #-32]
     18c:	stp	x8, x11, [sp, #16]
     190:	str	x10, [sp, #40]
     194:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     198:	ldr	x8, [sp, #72]
     19c:	ldr	x9, [sp, #56]
     1a0:	cmp	x8, x9
     1a4:	b.eq	1b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b0>  // b.none
     1a8:	add	x0, sp, #0x30
     1ac:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     1b0:	ldr	x23, [sp, #88]
     1b4:	mov	w0, #0x40                  	// #64
     1b8:	bl	0 <_Znwm>
     1bc:	mov	w8, #0x104                 	// #260
     1c0:	add	x1, sp, #0x10
     1c4:	mov	w2, #0x54                  	// #84
     1c8:	mov	x3, x20
     1cc:	mov	x21, x0
     1d0:	strh	w8, [sp, #32]
     1d4:	stp	x23, xzr, [sp, #16]
     1d8:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
     1dc:	orr	x8, x21, #0x1
     1e0:	add	x0, sp, #0x30
     1e4:	str	x8, [x19]
     1e8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     1ec:	ldur	x0, [x29, #-32]
     1f0:	cmp	x0, x22
     1f4:	b.eq	214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>  // b.none
     1f8:	bl	0 <_ZdlPv>
     1fc:	b	214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
     200:	ldr	x9, [sp]
     204:	strb	w8, [sp, #8]
     208:	str	xzr, [sp]
     20c:	orr	x8, x9, #0x1
     210:	str	x8, [x19]
     214:	ldrb	w8, [sp, #8]
     218:	tbnz	w8, #1, 370 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x370>
     21c:	tbz	w8, #0, 238 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x238>
     220:	ldr	x0, [sp]
     224:	cbz	x0, 234 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x234>
     228:	ldr	x8, [x0]
     22c:	ldr	x8, [x8, #8]
     230:	blr	x8
     234:	str	xzr, [sp]
     238:	ldp	x20, x19, [sp, #176]
     23c:	ldp	x22, x21, [sp, #160]
     240:	ldp	x24, x23, [sp, #144]
     244:	ldp	x29, x30, [sp, #128]
     248:	add	sp, sp, #0xc0
     24c:	ret
     250:	ldr	w8, [x20, #32]
     254:	subs	w8, w8, #0x20
     258:	b.cc	270 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x270>  // b.lo, b.ul, b.last
     25c:	ldr	x9, [x20, #24]
     260:	lsr	x8, x9, x8
     264:	str	x8, [x20, #24]
     268:	mov	w8, #0x20                  	// #32
     26c:	b	274 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x274>
     270:	mov	w8, wzr
     274:	str	w8, [x20, #32]
     278:	add	x8, sp, #0x30
     27c:	mov	w1, #0x20                  	// #32
     280:	mov	x0, x20
     284:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     288:	ldrb	w10, [sp, #56]
     28c:	ubfiz	w9, w10, #1, #1
     290:	and	w8, w10, #0xfffffffd
     294:	orr	w11, w9, w8
     298:	strb	w11, [sp, #56]
     29c:	tbnz	w10, #0, 2e0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2e0>
     2a0:	cbnz	w9, 354 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x354>
     2a4:	cbz	x21, 2b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2b0>
     2a8:	ldr	x8, [sp, #48]
     2ac:	str	w8, [x21]
     2b0:	ldr	w8, [x20, #36]
     2b4:	cbz	w8, 31c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x31c>
     2b8:	ldr	w8, [x20, #32]
     2bc:	cbnz	w8, 2cc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2cc>
     2c0:	ldp	x8, x9, [x20, #8]
     2c4:	cmp	x8, x9
     2c8:	b.ls	330 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x330>  // b.plast
     2cc:	mov	w8, #0x1                   	// #1
     2d0:	str	x8, [x19]
     2d4:	ldrb	w8, [sp, #56]
     2d8:	tbz	w8, #1, 2fc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2fc>
     2dc:	b	354 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x354>
     2e0:	ldr	x9, [sp, #48]
     2e4:	strb	w8, [sp, #56]
     2e8:	str	xzr, [sp, #48]
     2ec:	orr	x8, x9, #0x1
     2f0:	str	x8, [x19]
     2f4:	ldrb	w8, [sp, #56]
     2f8:	tbnz	w8, #1, 354 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x354>
     2fc:	tbz	w8, #0, 214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
     300:	ldr	x0, [sp, #48]
     304:	cbz	x0, 314 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x314>
     308:	ldr	x8, [x0]
     30c:	ldr	x8, [x8, #8]
     310:	blr	x8
     314:	str	xzr, [sp, #48]
     318:	b	214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
     31c:	bl	0 <_ZNSt3_V216generic_categoryEv>
     320:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     324:	mov	x1, x0
     328:	add	x2, x2, #0x0
     32c:	b	340 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>
     330:	bl	0 <_ZNSt3_V216generic_categoryEv>
     334:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     338:	mov	x1, x0
     33c:	add	x2, x2, #0x0
     340:	mov	w0, #0x54                  	// #84
     344:	mov	x8, x19
     348:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     34c:	ldrb	w8, [sp, #56]
     350:	tbz	w8, #1, 2fc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2fc>
     354:	add	x0, sp, #0x30
     358:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     35c:	mov	x0, x23
     360:	mov	x1, xzr
     364:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     368:	ldp	w8, w9, [x20, #72]
     36c:	b	3c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3c>
     370:	mov	x0, sp
     374:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     378:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     37c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     380:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     384:	add	x0, x0, #0x0
     388:	add	x1, x1, #0x0
     38c:	add	x3, x3, #0x0
     390:	mov	w2, #0x43                  	// #67
     394:	bl	0 <__assert_fail>

0000000000000398 <_ZN4llvm15BitstreamCursor10skipRecordEj>:
     398:	sub	sp, sp, #0xa0
     39c:	stp	x29, x30, [sp, #64]
     3a0:	stp	x28, x27, [sp, #80]
     3a4:	stp	x26, x25, [sp, #96]
     3a8:	stp	x24, x23, [sp, #112]
     3ac:	stp	x22, x21, [sp, #128]
     3b0:	stp	x20, x19, [sp, #144]
     3b4:	add	x29, sp, #0x40
     3b8:	mov	x20, x0
     3bc:	cmp	w1, #0x3
     3c0:	mov	x19, x8
     3c4:	b.ne	4f8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x160>  // b.any
     3c8:	sub	x8, x29, #0x10
     3cc:	mov	w1, #0x6                   	// #6
     3d0:	mov	x0, x20
     3d4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     3d8:	ldurb	w10, [x29, #-8]
     3dc:	ubfiz	w9, w10, #1, #1
     3e0:	and	w8, w10, #0xfffffffd
     3e4:	orr	w11, w9, w8
     3e8:	sturb	w11, [x29, #-8]
     3ec:	tbnz	w10, #0, 58c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1f4>
     3f0:	cbnz	w9, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     3f4:	ldur	w21, [x29, #-16]
     3f8:	add	x8, sp, #0x20
     3fc:	mov	w1, #0x6                   	// #6
     400:	mov	x0, x20
     404:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     408:	ldrb	w8, [sp, #40]
     40c:	lsl	w9, w8, #1
     410:	and	w10, w9, #0x2
     414:	and	w11, w8, #0xfffffffd
     418:	orr	w10, w10, w11
     41c:	strb	w10, [sp, #40]
     420:	tbnz	w9, #1, b28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x790>
     424:	tbnz	w8, #0, b40 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7a8>
     428:	ldr	w22, [sp, #32]
     42c:	cbz	w22, 4b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x120>
     430:	add	x8, sp, #0x10
     434:	mov	w1, #0x6                   	// #6
     438:	mov	x0, x20
     43c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     440:	ldrb	w10, [sp, #24]
     444:	ubfiz	w9, w10, #1, #1
     448:	and	w8, w10, #0xfffffffd
     44c:	orr	w9, w9, w8
     450:	strb	w9, [sp, #24]
     454:	tbnz	w10, #0, 464 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcc>
     458:	mov	w23, wzr
     45c:	mov	w8, w9
     460:	b	48c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf4>
     464:	ldrb	w9, [x19, #8]
     468:	ldr	x10, [sp, #16]
     46c:	strb	w8, [sp, #24]
     470:	str	xzr, [sp, #16]
     474:	orr	w11, w9, #0x3
     478:	ands	x9, x10, #0xfffffffffffffffe
     47c:	strb	w11, [x19, #8]
     480:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     484:	mov	w23, #0x1                   	// #1
     488:	str	x9, [x19]
     48c:	tbnz	w8, #1, af8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x760>
     490:	tbz	w8, #0, 4ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x114>
     494:	ldr	x0, [sp, #16]
     498:	cbz	x0, 4a8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x110>
     49c:	ldr	x8, [x0]
     4a0:	ldr	x8, [x8, #8]
     4a4:	blr	x8
     4a8:	str	xzr, [sp, #16]
     4ac:	cbnz	w23, 4cc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x134>
     4b0:	subs	w22, w22, #0x1
     4b4:	b.ne	430 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x98>  // b.any
     4b8:	ldrb	w8, [x19, #8]
     4bc:	str	w21, [x19]
     4c0:	and	w8, w8, #0xfc
     4c4:	orr	w8, w8, #0x2
     4c8:	strb	w8, [x19, #8]
     4cc:	ldrb	w8, [sp, #40]
     4d0:	tbnz	w8, #1, b28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x790>
     4d4:	tbz	w8, #0, 4f0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x158>
     4d8:	ldr	x0, [sp, #32]
     4dc:	cbz	x0, 4ec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x154>
     4e0:	ldr	x8, [x0]
     4e4:	ldr	x8, [x8, #8]
     4e8:	blr	x8
     4ec:	str	xzr, [sp, #32]
     4f0:	ldurb	w8, [x29, #-8]
     4f4:	b	5b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x218>
     4f8:	ldp	x8, x10, [x20, #40]
     4fc:	sub	w9, w1, #0x4
     500:	sub	x10, x10, x8
     504:	cmp	x9, x10, asr #4
     508:	b.cs	b30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x798>  // b.hs, b.nlast
     50c:	lsl	x9, x9, #4
     510:	ldr	x21, [x8, x9]
     514:	ldr	w23, [x21, #8]
     518:	cbz	w23, 9d4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x63c>
     51c:	ldr	x8, [x21]
     520:	ldrb	w3, [x8, #8]
     524:	tbnz	w3, #0, 5d4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x23c>
     528:	ubfx	w9, w3, #1, #3
     52c:	cmp	w9, #0x5
     530:	b.eq	53c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1a4>  // b.none
     534:	cmp	w9, #0x3
     538:	b.ne	9f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x65c>  // b.any
     53c:	bl	0 <_ZNSt3_V216generic_categoryEv>
     540:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     544:	mov	x1, x0
     548:	add	x2, x2, #0x0
     54c:	add	x8, sp, #0x8
     550:	mov	w0, #0x54                  	// #84
     554:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     558:	ldr	x9, [sp, #8]
     55c:	ldrb	w8, [x19, #8]
     560:	tst	x9, #0xfffffffffffffffe
     564:	orr	w10, w8, #0x3
     568:	and	x8, x9, #0xfffffffffffffffe
     56c:	cset	w9, ne  // ne = any
     570:	orr	x9, x8, x9
     574:	strb	w10, [x19, #8]
     578:	str	x9, [sp, #8]
     57c:	cbz	x8, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>
     580:	str	x8, [x19]
     584:	str	xzr, [sp, #8]
     588:	b	a50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     58c:	ldur	x9, [x29, #-16]
     590:	ldrb	w10, [x19, #8]
     594:	sturb	w8, [x29, #-8]
     598:	stur	xzr, [x29, #-16]
     59c:	ands	x9, x9, #0xfffffffffffffffe
     5a0:	orr	w10, w10, #0x3
     5a4:	strb	w10, [x19, #8]
     5a8:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     5ac:	str	x9, [x19]
     5b0:	tbnz	w8, #1, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     5b4:	tbz	w8, #0, a50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     5b8:	ldur	x0, [x29, #-16]
     5bc:	cbz	x0, 5cc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x234>
     5c0:	ldr	x8, [x0]
     5c4:	ldr	x8, [x8, #8]
     5c8:	blr	x8
     5cc:	stur	xzr, [x29, #-16]
     5d0:	b	a50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     5d4:	ldr	x22, [x8]
     5d8:	cmp	w23, #0x2
     5dc:	b.cc	a3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6a4>  // b.lo, b.ul, b.last
     5e0:	mov	w24, #0x1                   	// #1
     5e4:	ldr	x8, [x21]
     5e8:	add	x9, x8, w24, uxtw #4
     5ec:	ldrb	w3, [x9, #8]
     5f0:	tbnz	w3, #0, 9bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x624>
     5f4:	ubfx	w9, w3, #1, #3
     5f8:	cmp	w9, #0x3
     5fc:	b.eq	658 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2c0>  // b.none
     600:	cmp	w9, #0x5
     604:	b.ne	6f8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x360>  // b.any
     608:	sub	x8, x29, #0x10
     60c:	mov	w1, #0x6                   	// #6
     610:	mov	x0, x20
     614:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     618:	ldurb	w11, [x29, #-8]
     61c:	ubfiz	w10, w11, #1, #1
     620:	and	w9, w11, #0xfffffffd
     624:	orr	w8, w10, w9
     628:	sturb	w8, [x29, #-8]
     62c:	tbnz	w11, #0, 734 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x39c>
     630:	cbnz	w10, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     634:	ldr	w10, [x20, #32]
     638:	ldur	w9, [x29, #-16]
     63c:	subs	w10, w10, #0x20
     640:	b.cc	7c4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x42c>  // b.lo, b.ul, b.last
     644:	ldr	x11, [x20, #24]
     648:	lsr	x10, x11, x10
     64c:	str	x10, [x20, #24]
     650:	mov	w10, #0x20                  	// #32
     654:	b	7c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x430>
     658:	sub	x8, x29, #0x10
     65c:	mov	w1, #0x6                   	// #6
     660:	mov	x0, x20
     664:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     668:	ldurb	w10, [x29, #-8]
     66c:	ubfiz	w9, w10, #1, #1
     670:	and	w8, w10, #0xfffffffd
     674:	orr	w11, w9, w8
     678:	sturb	w11, [x29, #-8]
     67c:	tbnz	w10, #0, 760 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3c8>
     680:	cbnz	w9, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     684:	add	w8, w24, #0x2
     688:	cmp	w8, w23
     68c:	b.ne	b60 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7c8>  // b.any
     690:	ldr	w8, [x21, #8]
     694:	add	w24, w24, #0x1
     698:	cmp	w8, w24
     69c:	b.ls	9d4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x63c>  // b.plast
     6a0:	ldr	x8, [x21]
     6a4:	ldur	w25, [x29, #-16]
     6a8:	add	x26, x8, w24, uxtw #4
     6ac:	mov	x27, x26
     6b0:	ldrb	w8, [x27, #8]!
     6b4:	tbnz	w8, #0, b80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7e8>
     6b8:	ubfx	w9, w8, #1, #3
     6bc:	cmp	w9, #0x1
     6c0:	b.eq	8fc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x564>  // b.none
     6c4:	cmp	w9, #0x2
     6c8:	b.eq	844 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4ac>  // b.none
     6cc:	cmp	w9, #0x4
     6d0:	b.ne	ba0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x808>  // b.any
     6d4:	ldr	x8, [x20, #16]
     6d8:	ldr	w9, [x20, #32]
     6dc:	add	w10, w25, w25, lsl #1
     6e0:	lsl	w10, w10, #1
     6e4:	add	x8, x10, x8, lsl #3
     6e8:	sub	x1, x8, x9
     6ec:	add	x8, sp, #0x20
     6f0:	mov	x0, x20
     6f4:	b	928 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x590>
     6f8:	mov	w9, w24
     6fc:	lsl	x9, x9, #4
     700:	ldr	x2, [x8, x9]
     704:	sub	x0, x29, #0x10
     708:	mov	x1, x20
     70c:	bl	bf8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     710:	ldurb	w10, [x29, #-8]
     714:	ubfiz	w9, w10, #1, #1
     718:	and	w8, w10, #0xfffffffd
     71c:	orr	w9, w9, w8
     720:	sturb	w9, [x29, #-8]
     724:	tbnz	w10, #0, 794 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3fc>
     728:	mov	w25, #0x7                   	// #7
     72c:	mov	w8, w9
     730:	b	7bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x424>
     734:	ldrb	w8, [x19, #8]
     738:	ldur	x10, [x29, #-16]
     73c:	sturb	w9, [x29, #-8]
     740:	stur	xzr, [x29, #-16]
     744:	orr	w11, w8, #0x3
     748:	ands	x8, x10, #0xfffffffffffffffe
     74c:	strb	w11, [x19, #8]
     750:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     754:	str	x8, [x19]
     758:	mov	w25, #0x1                   	// #1
     75c:	b	990 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5f8>
     760:	ldrb	w9, [x19, #8]
     764:	ldur	x10, [x29, #-16]
     768:	sturb	w8, [x29, #-8]
     76c:	stur	xzr, [x29, #-16]
     770:	orr	w9, w9, #0x3
     774:	ands	x8, x10, #0xfffffffffffffffe
     778:	strb	w9, [x19, #8]
     77c:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     780:	str	x8, [x19]
     784:	mov	w25, #0x1                   	// #1
     788:	ldurb	w8, [x29, #-8]
     78c:	tbz	w8, #1, 978 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e0>
     790:	b	b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     794:	ldrb	w9, [x19, #8]
     798:	ldur	x10, [x29, #-16]
     79c:	sturb	w8, [x29, #-8]
     7a0:	stur	xzr, [x29, #-16]
     7a4:	orr	w11, w9, #0x3
     7a8:	ands	x9, x10, #0xfffffffffffffffe
     7ac:	strb	w11, [x19, #8]
     7b0:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     7b4:	mov	w25, #0x1                   	// #1
     7b8:	str	x9, [x19]
     7bc:	tbz	w8, #1, 978 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e0>
     7c0:	b	b20 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x788>
     7c4:	mov	w10, wzr
     7c8:	lsl	w12, w9, #3
     7cc:	ldp	x9, x11, [x20, #8]
     7d0:	add	w12, w12, #0x18
     7d4:	and	w12, w12, #0xffffffe0
     7d8:	str	w10, [x20, #32]
     7dc:	lsl	x11, x11, #3
     7e0:	sub	x11, x11, x10
     7e4:	add	x1, x11, x12
     7e8:	cmp	x9, x1, lsr #3
     7ec:	b.cs	800 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x468>  // b.hs, b.nlast
     7f0:	str	x9, [x20, #16]
     7f4:	mov	w25, #0x5                   	// #5
     7f8:	mov	w9, w8
     7fc:	b	990 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5f8>
     800:	add	x8, sp, #0x20
     804:	mov	x0, x20
     808:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     80c:	ldr	x9, [sp, #32]
     810:	tst	x9, #0xfffffffffffffffe
     814:	and	x8, x9, #0xfffffffffffffffe
     818:	cset	w9, ne  // ne = any
     81c:	orr	x9, x8, x9
     820:	str	x9, [sp, #32]
     824:	cbz	x8, 984 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5ec>
     828:	ldrb	w9, [x19, #8]
     82c:	str	x8, [x19]
     830:	str	xzr, [sp, #32]
     834:	mov	w25, #0x1                   	// #1
     838:	orr	w8, w9, #0x3
     83c:	strb	w8, [x19, #8]
     840:	b	98c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5f4>
     844:	ldr	w9, [x26]
     848:	cmp	x9, #0x40
     84c:	b.hi	bb0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x818>  // b.pmore
     850:	cbz	w25, 96c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d4>
     854:	tbnz	w8, #0, ab8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x720>
     858:	ubfx	w8, w8, #1, #3
     85c:	sub	w9, w8, #0x1
     860:	cmp	w9, #0x2
     864:	b.cs	aac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x714>  // b.hs, b.nlast
     868:	ldr	w1, [x26]
     86c:	add	x8, sp, #0x20
     870:	mov	x0, x20
     874:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     878:	ldrb	w10, [sp, #40]
     87c:	ubfiz	w9, w10, #1, #1
     880:	and	w8, w10, #0xfffffffd
     884:	orr	w9, w9, w8
     888:	strb	w9, [sp, #40]
     88c:	tbnz	w10, #0, 89c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x504>
     890:	mov	w28, wzr
     894:	mov	w8, w9
     898:	b	8c4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x52c>
     89c:	ldrb	w9, [x19, #8]
     8a0:	ldr	x10, [sp, #32]
     8a4:	strb	w8, [sp, #40]
     8a8:	str	xzr, [sp, #32]
     8ac:	orr	w11, w9, #0x3
     8b0:	ands	x9, x10, #0xfffffffffffffffe
     8b4:	strb	w11, [x19, #8]
     8b8:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     8bc:	mov	w28, #0x1                   	// #1
     8c0:	str	x9, [x19]
     8c4:	tbnz	w8, #1, b18 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x780>
     8c8:	tbz	w8, #0, 8e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x54c>
     8cc:	ldr	x0, [sp, #32]
     8d0:	cbz	x0, 8e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x548>
     8d4:	ldr	x8, [x0]
     8d8:	ldr	x8, [x8, #8]
     8dc:	blr	x8
     8e0:	str	xzr, [sp, #32]
     8e4:	cbnz	w28, 958 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c0>
     8e8:	sub	w25, w25, #0x1
     8ec:	cbz	w25, 96c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d4>
     8f0:	ldrb	w8, [x27]
     8f4:	tbz	w8, #0, 858 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4c0>
     8f8:	b	ab8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x720>
     8fc:	ldr	x8, [x26]
     900:	and	x9, x8, #0xffffffff
     904:	cmp	x9, #0x41
     908:	b.cs	bd0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x838>  // b.hs, b.nlast
     90c:	ldr	x9, [x20, #16]
     910:	ldr	w10, [x20, #32]
     914:	mov	x0, x20
     918:	lsl	x9, x9, #3
     91c:	sub	x9, x9, x10
     920:	madd	x1, x8, x25, x9
     924:	add	x8, sp, #0x20
     928:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     92c:	ldr	x9, [sp, #32]
     930:	tst	x9, #0xfffffffffffffffe
     934:	and	x8, x9, #0xfffffffffffffffe
     938:	cset	w9, ne  // ne = any
     93c:	orr	x9, x8, x9
     940:	str	x9, [sp, #32]
     944:	cbz	x8, 968 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d0>
     948:	ldrb	w9, [x19, #8]
     94c:	str	x8, [x19]
     950:	orr	w8, w9, #0x3
     954:	strb	w8, [x19, #8]
     958:	mov	w25, #0x1                   	// #1
     95c:	ldurb	w8, [x29, #-8]
     960:	tbz	w8, #1, 978 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e0>
     964:	b	b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     968:	cbnz	x9, bf0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x858>
     96c:	mov	w25, #0x7                   	// #7
     970:	ldurb	w8, [x29, #-8]
     974:	tbnz	w8, #1, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     978:	tbnz	w8, #0, 998 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x600>
     97c:	cbnz	w25, 9b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x61c>
     980:	b	9bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x624>
     984:	cbnz	x9, bf0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x858>
     988:	mov	w25, wzr
     98c:	ldurb	w9, [x29, #-8]
     990:	tbnz	w9, #1, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x768>
     994:	tbz	w9, #0, 97c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e4>
     998:	ldur	x0, [x29, #-16]
     99c:	cbz	x0, 9ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x614>
     9a0:	ldr	x8, [x0]
     9a4:	ldr	x8, [x8, #8]
     9a8:	blr	x8
     9ac:	stur	xzr, [x29, #-16]
     9b0:	cbz	w25, 9bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x624>
     9b4:	cmp	w25, #0x7
     9b8:	b.ne	a34 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>  // b.any
     9bc:	add	w24, w24, #0x1
     9c0:	cmp	w24, w23
     9c4:	b.cs	a3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6a4>  // b.hs, b.nlast
     9c8:	ldr	w8, [x21, #8]
     9cc:	cmp	w8, w24
     9d0:	b.hi	5e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x24c>  // b.pmore
     9d4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9d8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9dc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9e0:	add	x0, x0, #0x0
     9e4:	add	x1, x1, #0x0
     9e8:	add	x3, x3, #0x0
     9ec:	mov	w2, #0x99                  	// #153
     9f0:	bl	0 <__assert_fail>
     9f4:	ldr	x2, [x8]
     9f8:	sub	x0, x29, #0x10
     9fc:	mov	x1, x20
     a00:	bl	bf8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a04:	ldurb	w10, [x29, #-8]
     a08:	ubfiz	w9, w10, #1, #1
     a0c:	and	w8, w10, #0xfffffffd
     a10:	orr	w11, w9, w8
     a14:	sturb	w11, [x29, #-8]
     a18:	tbnz	w10, #0, a70 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6d8>
     a1c:	cbnz	w9, b20 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x788>
     a20:	ldur	x22, [x29, #-16]
     a24:	ldr	w23, [x21, #8]
     a28:	cmp	w23, #0x2
     a2c:	b.cs	5e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x248>  // b.hs, b.nlast
     a30:	b	a3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6a4>
     a34:	cmp	w25, #0x5
     a38:	b.ne	a50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>  // b.any
     a3c:	ldrb	w8, [x19, #8]
     a40:	str	w22, [x19]
     a44:	and	w8, w8, #0xfc
     a48:	orr	w8, w8, #0x2
     a4c:	strb	w8, [x19, #8]
     a50:	ldp	x20, x19, [sp, #144]
     a54:	ldp	x22, x21, [sp, #128]
     a58:	ldp	x24, x23, [sp, #112]
     a5c:	ldp	x26, x25, [sp, #96]
     a60:	ldp	x28, x27, [sp, #80]
     a64:	ldp	x29, x30, [sp, #64]
     a68:	add	sp, sp, #0xa0
     a6c:	ret
     a70:	ldur	x9, [x29, #-16]
     a74:	ldrb	w10, [x19, #8]
     a78:	sturb	w8, [x29, #-8]
     a7c:	stur	xzr, [x29, #-16]
     a80:	ands	x8, x9, #0xfffffffffffffffe
     a84:	orr	w9, w10, #0x3
     a88:	strb	w9, [x19, #8]
     a8c:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x740>  // b.none
     a90:	ldur	x0, [x29, #-16]
     a94:	str	x8, [x19]
     a98:	cbz	x0, a50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     a9c:	ldr	x8, [x0]
     aa0:	ldr	x8, [x8, #8]
     aa4:	blr	x8
     aa8:	b	a50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b8>
     aac:	sub	w8, w8, #0x3
     ab0:	cmp	w8, #0x3
     ab4:	b.cs	b08 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x770>  // b.hs, b.nlast
     ab8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     abc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ac0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ac4:	add	x0, x0, #0x0
     ac8:	add	x1, x1, #0x0
     acc:	add	x3, x3, #0x0
     ad0:	mov	w2, #0x79                  	// #121
     ad4:	bl	0 <__assert_fail>
     ad8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     adc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ae0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ae4:	add	x0, x0, #0x0
     ae8:	add	x1, x1, #0x0
     aec:	add	x3, x3, #0x0
     af0:	mov	w2, #0x1ce                 	// #462
     af4:	bl	0 <__assert_fail>
     af8:	add	x0, sp, #0x10
     afc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b00:	sub	x0, x29, #0x10
     b04:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b08:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b0c:	add	x0, x0, #0x0
     b10:	mov	w1, #0x1                   	// #1
     b14:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     b18:	add	x0, sp, #0x20
     b1c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b20:	sub	x0, x29, #0x10
     b24:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b28:	add	x0, sp, #0x20
     b2c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b30:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b34:	add	x0, x0, #0x0
     b38:	mov	w1, #0x1                   	// #1
     b3c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     b40:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b44:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b48:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b4c:	add	x0, x0, #0x0
     b50:	add	x1, x1, #0x0
     b54:	add	x3, x3, #0x0
     b58:	mov	w2, #0x272                 	// #626
     b5c:	bl	0 <__assert_fail>
     b60:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b64:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b68:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b6c:	add	x0, x0, #0x0
     b70:	add	x1, x1, #0x0
     b74:	add	x3, x3, #0x0
     b78:	mov	w2, #0x95                  	// #149
     b7c:	bl	0 <__assert_fail>
     b80:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b84:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b88:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b8c:	add	x0, x0, #0x0
     b90:	add	x1, x1, #0x0
     b94:	add	x3, x3, #0x0
     b98:	mov	w2, #0x77                  	// #119
     b9c:	bl	0 <__assert_fail>
     ba0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ba4:	add	x0, x0, #0x0
     ba8:	mov	w1, #0x1                   	// #1
     bac:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     bb0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bb4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bb8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bbc:	add	x0, x0, #0x0
     bc0:	add	x1, x1, #0x0
     bc4:	add	x3, x3, #0x0
     bc8:	mov	w2, #0xa4                  	// #164
     bcc:	bl	0 <__assert_fail>
     bd0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bd4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bd8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bdc:	add	x0, x0, #0x0
     be0:	add	x1, x1, #0x0
     be4:	add	x3, x3, #0x0
     be8:	mov	w2, #0x9e                  	// #158
     bec:	bl	0 <__assert_fail>
     bf0:	add	x0, sp, #0x20
     bf4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000bf8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>:
     bf8:	sub	sp, sp, #0x40
     bfc:	stp	x29, x30, [sp, #32]
     c00:	str	x19, [sp, #48]
     c04:	add	x29, sp, #0x20
     c08:	tbnz	w3, #0, d90 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x198>
     c0c:	ubfx	w8, w3, #1, #3
     c10:	sub	w8, w8, #0x1
     c14:	cmp	w8, #0x4
     c18:	b.hi	db0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1b8>  // b.pmore
     c1c:	adrp	x10, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c20:	add	x10, x10, #0x0
     c24:	adr	x11, c3c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x44>
     c28:	ldrb	w12, [x10, x8]
     c2c:	add	x11, x11, x12, lsl #2
     c30:	mov	x9, x1
     c34:	mov	x19, x0
     c38:	br	x11
     c3c:	and	x8, x2, #0xffffffff
     c40:	cmp	x8, #0x41
     c44:	b.cs	dd0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1d8>  // b.hs, b.nlast
     c48:	mov	x8, x19
     c4c:	ldr	x19, [sp, #48]
     c50:	ldp	x29, x30, [sp, #32]
     c54:	mov	x0, x9
     c58:	mov	w1, w2
     c5c:	add	sp, sp, #0x40
     c60:	b	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c64:	and	x8, x2, #0xffffffff
     c68:	cmp	x8, #0x41
     c6c:	b.cs	df0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1f8>  // b.hs, b.nlast
     c70:	mov	x8, x19
     c74:	ldr	x19, [sp, #48]
     c78:	ldp	x29, x30, [sp, #32]
     c7c:	mov	x0, x9
     c80:	mov	w1, w2
     c84:	add	sp, sp, #0x40
     c88:	b	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c8c:	mov	x8, sp
     c90:	mov	w1, #0x6                   	// #6
     c94:	mov	x0, x9
     c98:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c9c:	ldrb	w8, [sp, #8]
     ca0:	mov	w9, #0x2                   	// #2
     ca4:	bfxil	w9, w8, #0, #1
     ca8:	and	w10, w8, #0xfffffffd
     cac:	strb	w9, [sp, #24]
     cb0:	strb	w10, [sp, #8]
     cb4:	tbnz	w8, #0, cc8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xd0>
     cb8:	ldr	x8, [sp]
     cbc:	mov	w9, #0x2                   	// #2
     cc0:	str	w8, [sp, #16]
     cc4:	b	cd4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xdc>
     cc8:	ldr	x8, [sp]
     ccc:	str	xzr, [sp]
     cd0:	str	x8, [sp, #16]
     cd4:	and	w8, w9, #0x1
     cd8:	mov	w10, w8
     cdc:	bfi	w10, w9, #1, #1
     ce0:	strb	w10, [sp, #24]
     ce4:	tbnz	w9, #0, d24 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x12c>
     ce8:	ubfiz	w8, w9, #1, #1
     cec:	cbnz	w8, dc8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1d0>
     cf0:	ldr	w8, [sp, #16]
     cf4:	cmp	w8, #0x40
     cf8:	b.cs	e10 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x218>  // b.hs, b.nlast
     cfc:	ldrb	w9, [x19, #8]
     d00:	adrp	x11, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d04:	add	x11, x11, #0x0
     d08:	ldrb	w8, [x11, x8]
     d0c:	and	w9, w9, #0xfc
     d10:	orr	w9, w9, #0x2
     d14:	strb	w9, [x19, #8]
     d18:	str	x8, [x19]
     d1c:	mov	w8, w10
     d20:	b	d48 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x150>
     d24:	ldr	x9, [sp, #16]
     d28:	ldrb	w10, [x19, #8]
     d2c:	strb	w8, [sp, #24]
     d30:	str	xzr, [sp, #16]
     d34:	ands	x9, x9, #0xfffffffffffffffe
     d38:	orr	w10, w10, #0x3
     d3c:	strb	w10, [x19, #8]
     d40:	b.eq	e30 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x238>  // b.none
     d44:	str	x9, [x19]
     d48:	tbnz	w8, #1, dc8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1d0>
     d4c:	tbz	w8, #0, d68 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x170>
     d50:	ldr	x0, [sp, #16]
     d54:	cbz	x0, d64 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x16c>
     d58:	ldr	x8, [x0]
     d5c:	ldr	x8, [x8, #8]
     d60:	blr	x8
     d64:	str	xzr, [sp, #16]
     d68:	ldr	x19, [sp, #48]
     d6c:	ldp	x29, x30, [sp, #32]
     d70:	add	sp, sp, #0x40
     d74:	ret
     d78:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d7c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d80:	add	x0, x0, #0x0
     d84:	add	x1, x1, #0x0
     d88:	mov	w2, #0x4b                  	// #75
     d8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     d90:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d94:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d98:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d9c:	add	x0, x0, #0x0
     da0:	add	x1, x1, #0x0
     da4:	add	x3, x3, #0x0
     da8:	mov	w2, #0x45                  	// #69
     dac:	bl	0 <__assert_fail>
     db0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     db4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     db8:	add	x0, x0, #0x0
     dbc:	add	x1, x1, #0x0
     dc0:	mov	w2, #0x58                  	// #88
     dc4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     dc8:	add	x0, sp, #0x10
     dcc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dd0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dd4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dd8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ddc:	add	x0, x0, #0x0
     de0:	add	x1, x1, #0x0
     de4:	add	x3, x3, #0x0
     de8:	mov	w2, #0x4d                  	// #77
     dec:	bl	0 <__assert_fail>
     df0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     df4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     df8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dfc:	add	x0, x0, #0x0
     e00:	add	x1, x1, #0x0
     e04:	add	x3, x3, #0x0
     e08:	mov	w2, #0x50                  	// #80
     e0c:	bl	0 <__assert_fail>
     e10:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e14:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e18:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e1c:	add	x0, x0, #0x0
     e20:	add	x1, x1, #0x0
     e24:	add	x3, x3, #0x0
     e28:	mov	w2, #0x9d                  	// #157
     e2c:	bl	0 <__assert_fail>
     e30:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e34:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e38:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e3c:	add	x0, x0, #0x0
     e40:	add	x1, x1, #0x0
     e44:	add	x3, x3, #0x0
     e48:	mov	w2, #0x1ce                 	// #462
     e4c:	bl	0 <__assert_fail>

0000000000000e50 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>:
     e50:	sub	sp, sp, #0xb0
     e54:	stp	x29, x30, [sp, #80]
     e58:	stp	x28, x27, [sp, #96]
     e5c:	stp	x26, x25, [sp, #112]
     e60:	stp	x24, x23, [sp, #128]
     e64:	stp	x22, x21, [sp, #144]
     e68:	stp	x20, x19, [sp, #160]
     e6c:	add	x29, sp, #0x50
     e70:	mov	x20, x2
     e74:	mov	x21, x0
     e78:	cmp	w1, #0x3
     e7c:	mov	x19, x8
     e80:	b.ne	fc4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x174>  // b.any
     e84:	sub	x8, x29, #0x10
     e88:	mov	w1, #0x6                   	// #6
     e8c:	mov	x0, x21
     e90:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e94:	ldurb	w10, [x29, #-8]
     e98:	ubfiz	w9, w10, #1, #1
     e9c:	and	w8, w10, #0xfffffffd
     ea0:	orr	w11, w9, w8
     ea4:	sturb	w11, [x29, #-8]
     ea8:	tbnz	w10, #0, 1050 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x200>
     eac:	cbnz	w9, 1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
     eb0:	ldur	w23, [x29, #-16]
     eb4:	sub	x8, x29, #0x20
     eb8:	mov	w1, #0x6                   	// #6
     ebc:	mov	x0, x21
     ec0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ec4:	ldurb	w10, [x29, #-24]
     ec8:	ubfiz	w9, w10, #1, #1
     ecc:	and	w8, w10, #0xfffffffd
     ed0:	orr	w11, w9, w8
     ed4:	sturb	w11, [x29, #-24]
     ed8:	tbnz	w10, #0, 17bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x96c>
     edc:	cbnz	w9, 1884 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa34>
     ee0:	ldur	w24, [x29, #-32]
     ee4:	cbz	w24, 1868 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa18>
     ee8:	add	x22, x20, #0x10
     eec:	add	x8, sp, #0x20
     ef0:	mov	w1, #0x6                   	// #6
     ef4:	mov	x0, x21
     ef8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     efc:	ldrb	w10, [sp, #40]
     f00:	ubfiz	w9, w10, #1, #1
     f04:	and	w8, w10, #0xfffffffd
     f08:	orr	w11, w9, w8
     f0c:	strb	w11, [sp, #40]
     f10:	tbnz	w10, #0, f50 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x100>
     f14:	cbnz	w9, 1960 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb10>
     f18:	ldp	w8, w9, [x20, #8]
     f1c:	cmp	w8, w9
     f20:	b.cs	fa8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x158>  // b.hs, b.nlast
     f24:	ldr	x9, [x20]
     f28:	ldr	x10, [sp, #32]
     f2c:	str	x10, [x9, w8, uxtw #3]
     f30:	ldp	w8, w9, [x20, #8]
     f34:	cmp	w8, w9
     f38:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
     f3c:	add	w8, w8, #0x1
     f40:	str	w8, [x20, #8]
     f44:	ldrb	w8, [sp, #40]
     f48:	mov	w25, wzr
     f4c:	b	f78 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x128>
     f50:	ldrb	w9, [x19, #8]
     f54:	ldr	x10, [sp, #32]
     f58:	strb	w8, [sp, #40]
     f5c:	str	xzr, [sp, #32]
     f60:	orr	w11, w9, #0x3
     f64:	ands	x9, x10, #0xfffffffffffffffe
     f68:	strb	w11, [x19, #8]
     f6c:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
     f70:	mov	w25, #0x1                   	// #1
     f74:	str	x9, [x19]
     f78:	tbnz	w8, #1, 1960 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb10>
     f7c:	tbz	w8, #0, f98 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x148>
     f80:	ldr	x0, [sp, #32]
     f84:	cbz	x0, f94 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144>
     f88:	ldr	x8, [x0]
     f8c:	ldr	x8, [x8, #8]
     f90:	blr	x8
     f94:	str	xzr, [sp, #32]
     f98:	cbnz	w25, 17e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x990>
     f9c:	subs	w24, w24, #0x1
     fa0:	b.ne	eec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9c>  // b.any
     fa4:	b	1868 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa18>
     fa8:	mov	w3, #0x8                   	// #8
     fac:	mov	x0, x20
     fb0:	mov	x1, x22
     fb4:	mov	x2, xzr
     fb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     fbc:	ldr	w8, [x20, #8]
     fc0:	b	f24 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd4>
     fc4:	ldp	x8, x10, [x21, #40]
     fc8:	sub	w9, w1, #0x4
     fcc:	sub	x10, x10, x8
     fd0:	cmp	x9, x10, asr #4
     fd4:	b.cs	1990 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb40>  // b.hs, b.nlast
     fd8:	lsl	x9, x9, #4
     fdc:	ldr	x24, [x8, x9]
     fe0:	ldr	w26, [x24, #8]
     fe4:	cbz	w26, 19a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb50>
     fe8:	ldr	x8, [x24]
     fec:	mov	x22, x3
     ff0:	ldrb	w3, [x8, #8]
     ff4:	tbnz	w3, #0, 1078 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x228>
     ff8:	ubfx	w9, w3, #1, #3
     ffc:	cmp	w9, #0x5
    1000:	b.eq	19c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb70>  // b.none
    1004:	cmp	w9, #0x3
    1008:	b.eq	19c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb70>  // b.none
    100c:	ldr	x2, [x8]
    1010:	sub	x0, x29, #0x10
    1014:	mov	x1, x21
    1018:	bl	bf8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    101c:	ldurb	w10, [x29, #-8]
    1020:	ubfiz	w9, w10, #1, #1
    1024:	and	w8, w10, #0xfffffffd
    1028:	orr	w11, w9, w8
    102c:	sturb	w11, [x29, #-8]
    1030:	tbnz	w10, #0, 182c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9dc>
    1034:	cbnz	w9, 1968 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb18>
    1038:	ldur	x8, [x29, #-16]
    103c:	stp	x22, x8, [sp, #16]
    1040:	ldr	w26, [x24, #8]
    1044:	cmp	w26, #0x1
    1048:	b.eq	1088 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x238>  // b.none
    104c:	b	10a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x254>
    1050:	ldur	x9, [x29, #-16]
    1054:	ldrb	w10, [x19, #8]
    1058:	sturb	w8, [x29, #-8]
    105c:	stur	xzr, [x29, #-16]
    1060:	ands	x9, x9, #0xfffffffffffffffe
    1064:	orr	w10, w10, #0x3
    1068:	strb	w10, [x19, #8]
    106c:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    1070:	str	x9, [x19]
    1074:	b	1808 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9b8>
    1078:	ldr	x8, [x8]
    107c:	stp	x22, x8, [sp, #16]
    1080:	cmp	w26, #0x1
    1084:	b.ne	10a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x254>  // b.any
    1088:	ldrb	w8, [x19, #8]
    108c:	and	w8, w8, #0xfc
    1090:	orr	w8, w8, #0x2
    1094:	strb	w8, [x19, #8]
    1098:	ldr	x8, [sp, #24]
    109c:	str	w8, [x19]
    10a0:	b	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    10a4:	cbz	w26, 1908 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab8>
    10a8:	add	x8, x20, #0x10
    10ac:	mov	w27, #0x1                   	// #1
    10b0:	str	x8, [sp, #8]
    10b4:	ldr	x8, [x24]
    10b8:	add	x8, x8, w27, uxtw #4
    10bc:	ldrb	w3, [x8, #8]
    10c0:	tbnz	w3, #0, 1128 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2d8>
    10c4:	ubfx	w9, w3, #1, #3
    10c8:	cmp	w9, #0x3
    10cc:	b.eq	1158 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x308>  // b.none
    10d0:	cmp	w9, #0x5
    10d4:	b.ne	12c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x478>  // b.any
    10d8:	sub	x8, x29, #0x10
    10dc:	mov	w1, #0x6                   	// #6
    10e0:	mov	x0, x21
    10e4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    10e8:	ldurb	w10, [x29, #-8]
    10ec:	ubfiz	w9, w10, #1, #1
    10f0:	and	w8, w10, #0xfffffffd
    10f4:	orr	w11, w9, w8
    10f8:	sturb	w11, [x29, #-8]
    10fc:	tbnz	w10, #0, 132c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4dc>
    1100:	cbnz	w9, 1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    1104:	ldr	w8, [x21, #32]
    1108:	ldur	w23, [x29, #-16]
    110c:	subs	w8, w8, #0x20
    1110:	b.cc	13dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x58c>  // b.lo, b.ul, b.last
    1114:	ldr	x9, [x21, #24]
    1118:	lsr	x8, x9, x8
    111c:	str	x8, [x21, #24]
    1120:	mov	w8, #0x20                  	// #32
    1124:	b	13e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x590>
    1128:	ldp	w9, w10, [x20, #8]
    112c:	ldr	x22, [x8]
    1130:	cmp	w9, w10
    1134:	b.cs	1784 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x934>  // b.hs, b.nlast
    1138:	ldr	x8, [x20]
    113c:	str	x22, [x8, w9, uxtw #3]
    1140:	ldp	w8, w9, [x20, #8]
    1144:	cmp	w8, w9
    1148:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
    114c:	add	w8, w8, #0x1
    1150:	str	w8, [x20, #8]
    1154:	b	16e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x894>
    1158:	sub	x8, x29, #0x10
    115c:	mov	w1, #0x6                   	// #6
    1160:	mov	x0, x21
    1164:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1168:	ldurb	w10, [x29, #-8]
    116c:	ubfiz	w9, w10, #1, #1
    1170:	and	w8, w10, #0xfffffffd
    1174:	orr	w11, w9, w8
    1178:	sturb	w11, [x29, #-8]
    117c:	tbnz	w10, #0, 1358 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x508>
    1180:	cbnz	w9, 1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    1184:	add	w8, w27, #0x2
    1188:	cmp	w8, w26
    118c:	b.ne	19d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb80>  // b.any
    1190:	ldr	w8, [x24, #8]
    1194:	add	w27, w27, #0x1
    1198:	cmp	w8, w27
    119c:	b.ls	1908 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab8>  // b.plast
    11a0:	ldr	x8, [x24]
    11a4:	ldur	w23, [x29, #-16]
    11a8:	add	x25, x8, w27, uxtw #4
    11ac:	mov	x28, x25
    11b0:	ldrb	w8, [x28, #8]!
    11b4:	tbnz	w8, #0, 19e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb90>
    11b8:	ubfx	w9, w8, #1, #3
    11bc:	cmp	w9, #0x1
    11c0:	b.eq	156c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x71c>  // b.none
    11c4:	cmp	w9, #0x2
    11c8:	b.eq	1474 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x624>  // b.none
    11cc:	cmp	w9, #0x4
    11d0:	b.ne	19f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xba0>  // b.any
    11d4:	cbz	w23, 1664 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x814>
    11d8:	sub	x8, x29, #0x20
    11dc:	mov	w1, #0x6                   	// #6
    11e0:	mov	x0, x21
    11e4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    11e8:	ldurb	w10, [x29, #-24]
    11ec:	ubfiz	w9, w10, #1, #1
    11f0:	and	w8, w10, #0xfffffffd
    11f4:	orr	w11, w9, w8
    11f8:	sturb	w11, [x29, #-24]
    11fc:	tbnz	w10, #0, 1254 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x404>
    1200:	cbnz	w9, 1900 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    1204:	ldur	x9, [x29, #-32]
    1208:	cmp	w9, #0x40
    120c:	b.cs	1970 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb20>  // b.hs, b.nlast
    1210:	adrp	x11, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1214:	ldp	w8, w10, [x20, #8]
    1218:	and	x9, x9, #0xffffffff
    121c:	add	x11, x11, #0x0
    1220:	ldrb	w22, [x11, x9]
    1224:	cmp	w8, w10
    1228:	b.cs	12ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x45c>  // b.hs, b.nlast
    122c:	ldr	x9, [x20]
    1230:	str	x22, [x9, w8, uxtw #3]
    1234:	ldp	w8, w9, [x20, #8]
    1238:	cmp	w8, w9
    123c:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
    1240:	add	w8, w8, #0x1
    1244:	str	w8, [x20, #8]
    1248:	ldurb	w8, [x29, #-24]
    124c:	mov	w22, wzr
    1250:	b	127c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x42c>
    1254:	ldrb	w9, [x19, #8]
    1258:	ldur	x10, [x29, #-32]
    125c:	sturb	w8, [x29, #-24]
    1260:	stur	xzr, [x29, #-32]
    1264:	orr	w11, w9, #0x3
    1268:	ands	x9, x10, #0xfffffffffffffffe
    126c:	strb	w11, [x19, #8]
    1270:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    1274:	mov	w22, #0x1                   	// #1
    1278:	str	x9, [x19]
    127c:	tbnz	w8, #1, 1900 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    1280:	tbz	w8, #0, 129c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x44c>
    1284:	ldur	x0, [x29, #-32]
    1288:	cbz	x0, 1298 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x448>
    128c:	ldr	x8, [x0]
    1290:	ldr	x8, [x8, #8]
    1294:	blr	x8
    1298:	stur	xzr, [x29, #-32]
    129c:	cbnz	w22, 137c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x52c>
    12a0:	sub	w23, w23, #0x1
    12a4:	cbnz	w23, 11d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x388>
    12a8:	b	1664 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x814>
    12ac:	ldr	x1, [sp, #8]
    12b0:	mov	w3, #0x8                   	// #8
    12b4:	mov	x0, x20
    12b8:	mov	x2, xzr
    12bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    12c0:	ldr	w8, [x20, #8]
    12c4:	b	122c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3dc>
    12c8:	ldr	x2, [x8]
    12cc:	sub	x0, x29, #0x10
    12d0:	mov	x1, x21
    12d4:	bl	bf8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12d8:	ldurb	w10, [x29, #-8]
    12dc:	ubfiz	w9, w10, #1, #1
    12e0:	and	w8, w10, #0xfffffffd
    12e4:	orr	w11, w9, w8
    12e8:	sturb	w11, [x29, #-8]
    12ec:	tbnz	w10, #0, 138c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x53c>
    12f0:	cbnz	w9, 1968 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb18>
    12f4:	ldp	w8, w9, [x20, #8]
    12f8:	cmp	w8, w9
    12fc:	b.cs	17a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x950>  // b.hs, b.nlast
    1300:	ldr	x9, [x20]
    1304:	ldur	x10, [x29, #-16]
    1308:	str	x10, [x9, w8, uxtw #3]
    130c:	ldp	w8, w9, [x20, #8]
    1310:	cmp	w8, w9
    1314:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
    1318:	add	w8, w8, #0x1
    131c:	str	w8, [x20, #8]
    1320:	ldurb	w8, [x29, #-8]
    1324:	mov	w23, wzr
    1328:	b	13b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x564>
    132c:	ldrb	w9, [x19, #8]
    1330:	ldur	x10, [x29, #-16]
    1334:	sturb	w8, [x29, #-8]
    1338:	stur	xzr, [x29, #-16]
    133c:	orr	w9, w9, #0x3
    1340:	ands	x8, x10, #0xfffffffffffffffe
    1344:	strb	w9, [x19, #8]
    1348:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    134c:	str	x8, [x19]
    1350:	mov	w25, #0x1                   	// #1
    1354:	b	16cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x87c>
    1358:	ldrb	w9, [x19, #8]
    135c:	ldur	x10, [x29, #-16]
    1360:	sturb	w8, [x29, #-8]
    1364:	stur	xzr, [x29, #-16]
    1368:	orr	w9, w9, #0x3
    136c:	ands	x8, x10, #0xfffffffffffffffe
    1370:	strb	w9, [x19, #8]
    1374:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    1378:	str	x8, [x19]
    137c:	mov	w25, #0x1                   	// #1
    1380:	ldurb	w8, [x29, #-8]
    1384:	tbz	w8, #1, 1670 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x820>
    1388:	b	1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    138c:	ldrb	w9, [x19, #8]
    1390:	ldur	x10, [x29, #-16]
    1394:	sturb	w8, [x29, #-8]
    1398:	stur	xzr, [x29, #-16]
    139c:	orr	w11, w9, #0x3
    13a0:	ands	x9, x10, #0xfffffffffffffffe
    13a4:	strb	w11, [x19, #8]
    13a8:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    13ac:	mov	w23, #0x1                   	// #1
    13b0:	str	x9, [x19]
    13b4:	tbnz	w8, #1, 1968 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb18>
    13b8:	tbz	w8, #0, 13d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x584>
    13bc:	ldur	x0, [x29, #-16]
    13c0:	cbz	x0, 13d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x580>
    13c4:	ldr	x8, [x0]
    13c8:	ldr	x8, [x8, #8]
    13cc:	blr	x8
    13d0:	stur	xzr, [x29, #-16]
    13d4:	cbz	w23, 16e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x894>
    13d8:	b	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    13dc:	mov	w8, wzr
    13e0:	ldp	x11, x9, [x21, #8]
    13e4:	lsl	w10, w23, #3
    13e8:	add	w10, w10, #0x18
    13ec:	str	w8, [x21, #32]
    13f0:	lsl	x9, x9, #3
    13f4:	sub	x22, x9, x8
    13f8:	and	w9, w10, #0xffffffe0
    13fc:	add	x1, x22, x9
    1400:	cmp	x11, x1, lsr #3
    1404:	b.cs	1434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5e4>  // b.hs, b.nlast
    1408:	ldp	w25, w8, [x20, #8]
    140c:	sub	x9, x8, x25
    1410:	cmp	x9, x23
    1414:	b.cs	1694 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x844>  // b.hs, b.nlast
    1418:	ldr	x1, [sp, #8]
    141c:	add	x2, x25, x23
    1420:	mov	w3, #0x8                   	// #8
    1424:	mov	x0, x20
    1428:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    142c:	ldr	w25, [x20, #8]
    1430:	b	1698 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x848>
    1434:	sub	x8, x29, #0x20
    1438:	mov	x0, x21
    143c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1440:	ldur	x9, [x29, #-32]
    1444:	tst	x9, #0xfffffffffffffffe
    1448:	and	x8, x9, #0xfffffffffffffffe
    144c:	cset	w9, ne  // ne = any
    1450:	orr	x9, x8, x9
    1454:	stur	x9, [x29, #-32]
    1458:	cbz	x8, 1700 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8b0>
    145c:	ldrb	w9, [x19, #8]
    1460:	str	x8, [x19]
    1464:	mov	w25, #0x1                   	// #1
    1468:	orr	w8, w9, #0x3
    146c:	strb	w8, [x19, #8]
    1470:	b	16cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x87c>
    1474:	cbz	w23, 1664 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x814>
    1478:	tbnz	w8, #0, 18c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa70>
    147c:	ubfx	w8, w8, #1, #3
    1480:	sub	w9, w8, #0x1
    1484:	cmp	w9, #0x2
    1488:	b.cs	18b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa64>  // b.hs, b.nlast
    148c:	ldr	w1, [x25]
    1490:	sub	x8, x29, #0x20
    1494:	mov	x0, x21
    1498:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    149c:	ldurb	w10, [x29, #-24]
    14a0:	ubfiz	w9, w10, #1, #1
    14a4:	and	w8, w10, #0xfffffffd
    14a8:	orr	w11, w9, w8
    14ac:	sturb	w11, [x29, #-24]
    14b0:	tbnz	w10, #0, 14f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6a0>
    14b4:	cbnz	w9, 1900 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    14b8:	ldp	w8, w9, [x20, #8]
    14bc:	cmp	w8, w9
    14c0:	b.cs	1550 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x700>  // b.hs, b.nlast
    14c4:	ldr	x9, [x20]
    14c8:	ldur	x10, [x29, #-32]
    14cc:	str	x10, [x9, w8, uxtw #3]
    14d0:	ldp	w8, w9, [x20, #8]
    14d4:	cmp	w8, w9
    14d8:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
    14dc:	add	w8, w8, #0x1
    14e0:	str	w8, [x20, #8]
    14e4:	ldurb	w8, [x29, #-24]
    14e8:	mov	w22, wzr
    14ec:	b	1518 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6c8>
    14f0:	ldrb	w9, [x19, #8]
    14f4:	ldur	x10, [x29, #-32]
    14f8:	sturb	w8, [x29, #-24]
    14fc:	stur	xzr, [x29, #-32]
    1500:	orr	w11, w9, #0x3
    1504:	ands	x9, x10, #0xfffffffffffffffe
    1508:	strb	w11, [x19, #8]
    150c:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    1510:	mov	w22, #0x1                   	// #1
    1514:	str	x9, [x19]
    1518:	tbnz	w8, #1, 1900 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    151c:	tbz	w8, #0, 1538 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6e8>
    1520:	ldur	x0, [x29, #-32]
    1524:	cbz	x0, 1534 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6e4>
    1528:	ldr	x8, [x0]
    152c:	ldr	x8, [x8, #8]
    1530:	blr	x8
    1534:	stur	xzr, [x29, #-32]
    1538:	cbnz	w22, 137c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x52c>
    153c:	sub	w23, w23, #0x1
    1540:	cbz	w23, 1664 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x814>
    1544:	ldrb	w8, [x28]
    1548:	tbz	w8, #0, 147c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x62c>
    154c:	b	18c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa70>
    1550:	ldr	x1, [sp, #8]
    1554:	mov	w3, #0x8                   	// #8
    1558:	mov	x0, x20
    155c:	mov	x2, xzr
    1560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1564:	ldr	w8, [x20, #8]
    1568:	b	14c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x674>
    156c:	cbz	w23, 1664 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x814>
    1570:	tbnz	w8, #0, 18c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa70>
    1574:	ubfx	w8, w8, #1, #3
    1578:	sub	w9, w8, #0x1
    157c:	cmp	w9, #0x2
    1580:	b.cs	18b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa64>  // b.hs, b.nlast
    1584:	ldr	w1, [x25]
    1588:	sub	x8, x29, #0x20
    158c:	mov	x0, x21
    1590:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1594:	ldurb	w10, [x29, #-24]
    1598:	ubfiz	w9, w10, #1, #1
    159c:	and	w8, w10, #0xfffffffd
    15a0:	orr	w11, w9, w8
    15a4:	sturb	w11, [x29, #-24]
    15a8:	tbnz	w10, #0, 15e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x798>
    15ac:	cbnz	w9, 1900 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    15b0:	ldp	w8, w9, [x20, #8]
    15b4:	cmp	w8, w9
    15b8:	b.cs	1648 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7f8>  // b.hs, b.nlast
    15bc:	ldr	x9, [x20]
    15c0:	ldur	x10, [x29, #-32]
    15c4:	str	x10, [x9, w8, uxtw #3]
    15c8:	ldp	w8, w9, [x20, #8]
    15cc:	cmp	w8, w9
    15d0:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
    15d4:	add	w8, w8, #0x1
    15d8:	str	w8, [x20, #8]
    15dc:	ldurb	w8, [x29, #-24]
    15e0:	mov	w22, wzr
    15e4:	b	1610 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7c0>
    15e8:	ldrb	w9, [x19, #8]
    15ec:	ldur	x10, [x29, #-32]
    15f0:	sturb	w8, [x29, #-24]
    15f4:	stur	xzr, [x29, #-32]
    15f8:	orr	w11, w9, #0x3
    15fc:	ands	x9, x10, #0xfffffffffffffffe
    1600:	strb	w11, [x19, #8]
    1604:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    1608:	mov	w22, #0x1                   	// #1
    160c:	str	x9, [x19]
    1610:	tbnz	w8, #1, 1900 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    1614:	tbz	w8, #0, 1630 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7e0>
    1618:	ldur	x0, [x29, #-32]
    161c:	cbz	x0, 162c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7dc>
    1620:	ldr	x8, [x0]
    1624:	ldr	x8, [x8, #8]
    1628:	blr	x8
    162c:	stur	xzr, [x29, #-32]
    1630:	cbnz	w22, 137c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x52c>
    1634:	sub	w23, w23, #0x1
    1638:	cbz	w23, 1664 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x814>
    163c:	ldrb	w8, [x28]
    1640:	tbz	w8, #0, 1574 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x724>
    1644:	b	18c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa70>
    1648:	ldr	x1, [sp, #8]
    164c:	mov	w3, #0x8                   	// #8
    1650:	mov	x0, x20
    1654:	mov	x2, xzr
    1658:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    165c:	ldr	w8, [x20, #8]
    1660:	b	15bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x76c>
    1664:	mov	w25, #0x7                   	// #7
    1668:	ldurb	w8, [x29, #-8]
    166c:	tbnz	w8, #1, 1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    1670:	tbz	w8, #0, 16d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x888>
    1674:	ldur	x0, [x29, #-16]
    1678:	cbz	x0, 1688 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x838>
    167c:	ldr	x8, [x0]
    1680:	ldr	x8, [x8, #8]
    1684:	blr	x8
    1688:	stur	xzr, [x29, #-16]
    168c:	cbnz	w25, 16dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x88c>
    1690:	b	16e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x894>
    1694:	cbz	w23, 16b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x860>
    1698:	ldr	x8, [x20]
    169c:	lsl	x2, x23, #3
    16a0:	mov	w1, wzr
    16a4:	add	x0, x8, x25, lsl #3
    16a8:	bl	0 <memset>
    16ac:	ldr	w8, [x20, #12]
    16b0:	add	x9, x25, x23
    16b4:	cmp	x9, x8
    16b8:	b.hi	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.pmore
    16bc:	str	w9, [x20, #8]
    16c0:	ldr	x8, [x21, #8]
    16c4:	mov	w25, #0x5                   	// #5
    16c8:	str	x8, [x21, #16]
    16cc:	ldurb	w8, [x29, #-8]
    16d0:	tbnz	w8, #1, 1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    16d4:	tbnz	w8, #0, 1674 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x824>
    16d8:	cbz	w25, 16e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x894>
    16dc:	cmp	w25, #0x7
    16e0:	b.ne	188c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>  // b.any
    16e4:	add	w27, w27, #0x1
    16e8:	cmp	w27, w26
    16ec:	b.eq	1088 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x238>  // b.none
    16f0:	ldr	w8, [x24, #8]
    16f4:	cmp	w8, w27
    16f8:	b.hi	10b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x264>  // b.pmore
    16fc:	b	1908 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab8>
    1700:	cbnz	x9, 1a00 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbb0>
    1704:	ldr	x8, [x21]
    1708:	add	x28, x8, x22, lsr #3
    170c:	ldr	x8, [sp, #16]
    1710:	cbz	x8, 1720 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8d0>
    1714:	mov	w25, wzr
    1718:	stp	x28, x23, [x8]
    171c:	b	16cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x87c>
    1720:	cbz	w23, 177c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x92c>
    1724:	ldp	w8, w9, [x20, #8]
    1728:	ldrb	w22, [x28], #1
    172c:	cmp	w8, w9
    1730:	b.cs	1760 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x910>  // b.hs, b.nlast
    1734:	ldr	x9, [x20]
    1738:	str	x22, [x9, w8, uxtw #3]
    173c:	ldp	w8, w9, [x20, #8]
    1740:	cmp	w8, w9
    1744:	b.cs	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa90>  // b.hs, b.nlast
    1748:	mov	w25, wzr
    174c:	add	w8, w8, #0x1
    1750:	subs	w23, w23, #0x1
    1754:	str	w8, [x20, #8]
    1758:	b.ne	1728 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8d8>  // b.any
    175c:	b	16cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x87c>
    1760:	ldr	x1, [sp, #8]
    1764:	mov	w3, #0x8                   	// #8
    1768:	mov	x0, x20
    176c:	mov	x2, xzr
    1770:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1774:	ldr	w8, [x20, #8]
    1778:	b	1734 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8e4>
    177c:	mov	w25, wzr
    1780:	b	16cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x87c>
    1784:	ldr	x1, [sp, #8]
    1788:	mov	w3, #0x8                   	// #8
    178c:	mov	x0, x20
    1790:	mov	x2, xzr
    1794:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1798:	ldr	w9, [x20, #8]
    179c:	b	1138 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2e8>
    17a0:	ldr	x1, [sp, #8]
    17a4:	mov	w3, #0x8                   	// #8
    17a8:	mov	x0, x20
    17ac:	mov	x2, xzr
    17b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    17b4:	ldr	w8, [x20, #8]
    17b8:	b	1300 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4b0>
    17bc:	ldur	x9, [x29, #-32]
    17c0:	ldrb	w10, [x19, #8]
    17c4:	sturb	w8, [x29, #-24]
    17c8:	stur	xzr, [x29, #-32]
    17cc:	ands	x8, x9, #0xfffffffffffffffe
    17d0:	orr	w9, w10, #0x3
    17d4:	strb	w9, [x19, #8]
    17d8:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    17dc:	str	x8, [x19]
    17e0:	ldurb	w8, [x29, #-24]
    17e4:	tbnz	w8, #1, 1884 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa34>
    17e8:	tbz	w8, #0, 1804 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9b4>
    17ec:	ldur	x0, [x29, #-32]
    17f0:	cbz	x0, 1800 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9b0>
    17f4:	ldr	x8, [x0]
    17f8:	ldr	x8, [x8, #8]
    17fc:	blr	x8
    1800:	stur	xzr, [x29, #-32]
    1804:	ldurb	w8, [x29, #-8]
    1808:	tbnz	w8, #1, 1948 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    180c:	tbz	w8, #0, 1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    1810:	ldur	x0, [x29, #-16]
    1814:	cbz	x0, 1824 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9d4>
    1818:	ldr	x8, [x0]
    181c:	ldr	x8, [x8, #8]
    1820:	blr	x8
    1824:	stur	xzr, [x29, #-16]
    1828:	b	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    182c:	ldur	x9, [x29, #-16]
    1830:	ldrb	w10, [x19, #8]
    1834:	sturb	w8, [x29, #-8]
    1838:	stur	xzr, [x29, #-16]
    183c:	ands	x8, x9, #0xfffffffffffffffe
    1840:	orr	w9, w10, #0x3
    1844:	strb	w9, [x19, #8]
    1848:	b.eq	1928 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.none
    184c:	ldur	x0, [x29, #-16]
    1850:	str	x8, [x19]
    1854:	cbz	x0, 1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    1858:	ldr	x8, [x0]
    185c:	ldr	x8, [x8, #8]
    1860:	blr	x8
    1864:	b	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    1868:	ldrb	w8, [x19, #8]
    186c:	str	w23, [x19]
    1870:	and	w8, w8, #0xfc
    1874:	orr	w8, w8, #0x2
    1878:	strb	w8, [x19, #8]
    187c:	ldurb	w8, [x29, #-24]
    1880:	tbz	w8, #1, 17e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x998>
    1884:	sub	x0, x29, #0x20
    1888:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    188c:	cmp	w25, #0x5
    1890:	b.eq	1088 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x238>  // b.none
    1894:	ldp	x20, x19, [sp, #160]
    1898:	ldp	x22, x21, [sp, #144]
    189c:	ldp	x24, x23, [sp, #128]
    18a0:	ldp	x26, x25, [sp, #112]
    18a4:	ldp	x28, x27, [sp, #96]
    18a8:	ldp	x29, x30, [sp, #80]
    18ac:	add	sp, sp, #0xb0
    18b0:	ret
    18b4:	sub	w8, w8, #0x3
    18b8:	cmp	w8, #0x3
    18bc:	b.cs	1950 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb00>  // b.hs, b.nlast
    18c0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18c4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18c8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18cc:	add	x0, x0, #0x0
    18d0:	add	x1, x1, #0x0
    18d4:	add	x3, x3, #0x0
    18d8:	mov	w2, #0x79                  	// #121
    18dc:	bl	0 <__assert_fail>
    18e0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18e4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18e8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18ec:	add	x0, x0, #0x0
    18f0:	add	x1, x1, #0x0
    18f4:	add	x3, x3, #0x0
    18f8:	mov	w2, #0x43                  	// #67
    18fc:	bl	0 <__assert_fail>
    1900:	sub	x0, x29, #0x20
    1904:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1908:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    190c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1910:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1914:	add	x0, x0, #0x0
    1918:	add	x1, x1, #0x0
    191c:	add	x3, x3, #0x0
    1920:	mov	w2, #0x99                  	// #153
    1924:	bl	0 <__assert_fail>
    1928:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    192c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1930:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1934:	add	x0, x0, #0x0
    1938:	add	x1, x1, #0x0
    193c:	add	x3, x3, #0x0
    1940:	mov	w2, #0x1ce                 	// #462
    1944:	bl	0 <__assert_fail>
    1948:	sub	x0, x29, #0x10
    194c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1950:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1954:	add	x0, x0, #0x0
    1958:	mov	w1, #0x1                   	// #1
    195c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1960:	add	x0, sp, #0x20
    1964:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1968:	sub	x0, x29, #0x10
    196c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1970:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1974:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1978:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    197c:	add	x0, x0, #0x0
    1980:	add	x1, x1, #0x0
    1984:	add	x3, x3, #0x0
    1988:	mov	w2, #0x9d                  	// #157
    198c:	bl	0 <__assert_fail>
    1990:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1994:	add	x0, x0, #0x0
    1998:	mov	w1, #0x1                   	// #1
    199c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19a0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19a4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19a8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19ac:	add	x0, x0, #0x0
    19b0:	add	x1, x1, #0x0
    19b4:	add	x3, x3, #0x0
    19b8:	mov	w2, #0xe5                  	// #229
    19bc:	bl	0 <__assert_fail>
    19c0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19c4:	add	x0, x0, #0x0
    19c8:	mov	w1, #0x1                   	// #1
    19cc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19d0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19d4:	add	x0, x0, #0x0
    19d8:	mov	w1, #0x1                   	// #1
    19dc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19e0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19e4:	add	x0, x0, #0x0
    19e8:	mov	w1, #0x1                   	// #1
    19ec:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19f0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19f4:	add	x0, x0, #0x0
    19f8:	mov	w1, #0x1                   	// #1
    19fc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1a00:	sub	x0, x29, #0x20
    1a04:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000001a08 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>:
    1a08:	sub	sp, sp, #0xb0
    1a0c:	stp	x29, x30, [sp, #80]
    1a10:	str	x27, [sp, #96]
    1a14:	stp	x26, x25, [sp, #112]
    1a18:	stp	x24, x23, [sp, #128]
    1a1c:	stp	x22, x21, [sp, #144]
    1a20:	stp	x20, x19, [sp, #160]
    1a24:	add	x29, sp, #0x50
    1a28:	mov	x20, x0
    1a2c:	mov	w0, #0x220                 	// #544
    1a30:	mov	x19, x8
    1a34:	bl	0 <_Znwm>
    1a38:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a3c:	ldr	x8, [x8]
    1a40:	movi	v0.2s, #0x1
    1a44:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a48:	str	d0, [x0, #8]
    1a4c:	ldr	d0, [x9]
    1a50:	movi	v1.2d, #0x0
    1a54:	mov	x9, x0
    1a58:	add	x8, x8, #0x10
    1a5c:	stp	q1, q1, [x0, #48]
    1a60:	stp	q1, q1, [x0, #80]
    1a64:	stp	q1, q1, [x0, #112]
    1a68:	stp	q1, q1, [x0, #144]
    1a6c:	stp	q1, q1, [x0, #176]
    1a70:	stp	q1, q1, [x0, #208]
    1a74:	stp	q1, q1, [x0, #240]
    1a78:	stp	q1, q1, [x0, #272]
    1a7c:	stp	q1, q1, [x0, #304]
    1a80:	stp	q1, q1, [x0, #336]
    1a84:	stp	q1, q1, [x0, #368]
    1a88:	stp	q1, q1, [x0, #400]
    1a8c:	stp	q1, q1, [x0, #432]
    1a90:	stp	q1, q1, [x0, #464]
    1a94:	stp	q1, q1, [x0, #496]
    1a98:	str	x8, [x0]
    1a9c:	str	q1, [x9, #32]!
    1aa0:	mov	x21, x0
    1aa4:	str	q1, [x0, #528]
    1aa8:	str	x9, [x21, #16]!
    1aac:	str	d0, [x0, #24]
    1ab0:	stp	x21, x0, [x29, #-16]
    1ab4:	sub	x8, x29, #0x20
    1ab8:	mov	w1, #0x5                   	// #5
    1abc:	mov	x0, x20
    1ac0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1ac4:	ldurb	w10, [x29, #-24]
    1ac8:	ubfiz	w9, w10, #1, #1
    1acc:	and	w8, w10, #0xfffffffd
    1ad0:	orr	w11, w9, w8
    1ad4:	sturb	w11, [x29, #-24]
    1ad8:	tbnz	w10, #0, 1ec4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4bc>
    1adc:	cbnz	w9, 2014 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x60c>
    1ae0:	ldur	w22, [x29, #-32]
    1ae4:	cbz	w22, 1edc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d4>
    1ae8:	add	x8, sp, #0x20
    1aec:	mov	w1, #0x1                   	// #1
    1af0:	mov	x0, x20
    1af4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1af8:	ldrb	w10, [sp, #40]
    1afc:	ubfiz	w9, w10, #1, #1
    1b00:	and	w8, w10, #0xfffffffd
    1b04:	orr	w11, w9, w8
    1b08:	strb	w11, [sp, #40]
    1b0c:	tbnz	w10, #0, 1ba0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x198>
    1b10:	cbnz	w9, 2004 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5fc>
    1b14:	ldr	x8, [sp, #32]
    1b18:	cbz	x8, 1bbc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1b4>
    1b1c:	add	x8, sp, #0x10
    1b20:	mov	w1, #0x8                   	// #8
    1b24:	mov	x0, x20
    1b28:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1b2c:	ldrb	w10, [sp, #24]
    1b30:	ubfiz	w9, w10, #1, #1
    1b34:	and	w8, w10, #0xfffffffd
    1b38:	orr	w11, w9, w8
    1b3c:	strb	w11, [sp, #24]
    1b40:	tbnz	w10, #0, 1c4c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x244>
    1b44:	cbnz	w9, 200c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1b48:	ldur	x21, [x29, #-16]
    1b4c:	ldr	x27, [sp, #16]
    1b50:	orr	w23, w23, #0x1
    1b54:	ldp	w8, w9, [x21, #8]
    1b58:	cmp	w8, w9
    1b5c:	b.cs	1e3c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x434>  // b.hs, b.nlast
    1b60:	ldr	x9, [x21]
    1b64:	add	x8, x9, w8, uxtw #4
    1b68:	str	x27, [x8]
    1b6c:	strb	w23, [x8, #8]
    1b70:	ldur	w9, [sp, #3]
    1b74:	ldr	w10, [sp]
    1b78:	str	w9, [x8, #12]
    1b7c:	stur	w10, [x8, #9]
    1b80:	ldp	w8, w9, [x21, #8]
    1b84:	cmp	w8, w9
    1b88:	b.cs	201c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1b8c:	add	w8, w8, #0x1
    1b90:	str	w8, [x21, #8]
    1b94:	ldrb	w8, [sp, #24]
    1b98:	mov	w21, #0x4                   	// #4
    1b9c:	b	1c64 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x25c>
    1ba0:	ldr	x9, [sp, #32]
    1ba4:	strb	w8, [sp, #40]
    1ba8:	str	xzr, [sp, #32]
    1bac:	mov	w21, #0x1                   	// #1
    1bb0:	orr	x8, x9, #0x1
    1bb4:	str	x8, [x19]
    1bb8:	b	1ca8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    1bbc:	add	x8, sp, #0x10
    1bc0:	mov	w1, #0x3                   	// #3
    1bc4:	mov	x0, x20
    1bc8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1bcc:	ldrb	w10, [sp, #24]
    1bd0:	ubfiz	w9, w10, #1, #1
    1bd4:	and	w8, w10, #0xfffffffd
    1bd8:	orr	w11, w9, w8
    1bdc:	strb	w11, [sp, #24]
    1be0:	tbnz	w10, #0, 1c6c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    1be4:	cbnz	w9, 200c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1be8:	ldr	x21, [sp, #16]
    1bec:	sub	w8, w21, #0x3
    1bf0:	cmp	w8, #0x3
    1bf4:	b.cs	1ce4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2dc>  // b.hs, b.nlast
    1bf8:	ldur	x8, [x29, #-16]
    1bfc:	and	w24, w24, #0xfffffff0
    1c00:	bfi	w24, w21, #1, #3
    1c04:	ldp	w9, w10, [x8, #8]
    1c08:	cmp	w9, w10
    1c0c:	b.cs	1e58 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x450>  // b.hs, b.nlast
    1c10:	ldr	x10, [x8]
    1c14:	add	x9, x10, w9, uxtw #4
    1c18:	str	xzr, [x9]
    1c1c:	strb	w24, [x9, #8]
    1c20:	ldur	w10, [sp, #3]
    1c24:	ldr	w11, [sp]
    1c28:	str	w10, [x9, #12]
    1c2c:	stur	w11, [x9, #9]
    1c30:	ldp	w9, w10, [x8, #8]
    1c34:	cmp	w9, w10
    1c38:	b.cs	201c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1c3c:	add	w9, w9, #0x1
    1c40:	str	w9, [x8, #8]
    1c44:	mov	w21, wzr
    1c48:	b	1c84 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x27c>
    1c4c:	ldr	x9, [sp, #16]
    1c50:	strb	w8, [sp, #24]
    1c54:	str	xzr, [sp, #16]
    1c58:	mov	w21, #0x1                   	// #1
    1c5c:	orr	x9, x9, #0x1
    1c60:	str	x9, [x19]
    1c64:	tbz	w8, #1, 1c8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x284>
    1c68:	b	200c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1c6c:	ldr	x9, [sp, #16]
    1c70:	strb	w8, [sp, #24]
    1c74:	str	xzr, [sp, #16]
    1c78:	mov	w21, #0x1                   	// #1
    1c7c:	orr	x8, x9, #0x1
    1c80:	str	x8, [x19]
    1c84:	ldrb	w8, [sp, #24]
    1c88:	tbnz	w8, #1, 200c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1c8c:	tbz	w8, #0, 1ca8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    1c90:	ldr	x0, [sp, #16]
    1c94:	cbz	x0, 1ca4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x29c>
    1c98:	ldr	x8, [x0]
    1c9c:	ldr	x8, [x8, #8]
    1ca0:	blr	x8
    1ca4:	str	xzr, [sp, #16]
    1ca8:	ldrb	w8, [sp, #40]
    1cac:	tbnz	w8, #1, 2004 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5fc>
    1cb0:	tbz	w8, #0, 1ccc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2c4>
    1cb4:	ldr	x0, [sp, #32]
    1cb8:	cbz	x0, 1cc8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2c0>
    1cbc:	ldr	x8, [x0]
    1cc0:	ldr	x8, [x8, #8]
    1cc4:	blr	x8
    1cc8:	str	xzr, [sp, #32]
    1ccc:	orr	w8, w21, #0x4
    1cd0:	cmp	w8, #0x4
    1cd4:	b.ne	1f20 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x518>  // b.any
    1cd8:	subs	w22, w22, #0x1
    1cdc:	b.ne	1ae8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xe0>  // b.any
    1ce0:	b	1ed8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d0>
    1ce4:	sub	w27, w21, #0x1
    1ce8:	cmp	w27, #0x2
    1cec:	b.cs	203c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x634>  // b.hs, b.nlast
    1cf0:	mov	x8, sp
    1cf4:	mov	w1, #0x5                   	// #5
    1cf8:	mov	x0, x20
    1cfc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1d00:	ldrb	w10, [sp, #8]
    1d04:	ubfiz	w9, w10, #1, #1
    1d08:	and	w8, w10, #0xfffffffd
    1d0c:	orr	w11, w9, w8
    1d10:	strb	w11, [sp, #8]
    1d14:	tbnz	w10, #0, 1d84 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x37c>
    1d18:	cbnz	w9, 205c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1d1c:	ldr	x8, [sp]
    1d20:	cmp	w27, #0x1
    1d24:	b.hi	1da8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3a0>  // b.pmore
    1d28:	cbnz	x8, 1da8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3a0>
    1d2c:	ldur	x21, [x29, #-16]
    1d30:	orr	w25, w25, #0x1
    1d34:	ldp	w8, w9, [x21, #8]
    1d38:	cmp	w8, w9
    1d3c:	b.cs	1e7c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x474>  // b.hs, b.nlast
    1d40:	ldr	x9, [x21]
    1d44:	add	x8, x9, w8, uxtw #4
    1d48:	str	xzr, [x8]
    1d4c:	strb	w25, [x8, #8]
    1d50:	ldur	w9, [x29, #27]
    1d54:	ldr	w10, [x29, #24]
    1d58:	str	w9, [x8, #12]
    1d5c:	stur	w10, [x8, #9]
    1d60:	ldp	w8, w9, [x21, #8]
    1d64:	cmp	w8, w9
    1d68:	b.cs	201c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1d6c:	add	w8, w8, #0x1
    1d70:	str	w8, [x21, #8]
    1d74:	mov	w21, #0x4                   	// #4
    1d78:	ldrb	w8, [sp, #8]
    1d7c:	tbz	w8, #1, 1e10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x408>
    1d80:	b	205c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1d84:	ldr	x9, [sp]
    1d88:	strb	w8, [sp, #8]
    1d8c:	str	xzr, [sp]
    1d90:	mov	w21, #0x1                   	// #1
    1d94:	orr	x8, x9, #0x1
    1d98:	str	x8, [x19]
    1d9c:	ldrb	w8, [sp, #8]
    1da0:	tbz	w8, #1, 1e10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x408>
    1da4:	b	205c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1da8:	cmp	w27, #0x1
    1dac:	b.hi	1db8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3b0>  // b.pmore
    1db0:	cmp	x8, #0x41
    1db4:	b.cs	204c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x644>  // b.hs, b.nlast
    1db8:	ldur	x9, [x29, #-16]
    1dbc:	and	w26, w26, #0xfffffff0
    1dc0:	bfi	w26, w21, #1, #3
    1dc4:	ldp	w10, w11, [x9, #8]
    1dc8:	cmp	w10, w11
    1dcc:	b.cs	1e98 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x490>  // b.hs, b.nlast
    1dd0:	ldr	x11, [x9]
    1dd4:	add	x10, x11, w10, uxtw #4
    1dd8:	str	x8, [x10]
    1ddc:	strb	w26, [x10, #8]
    1de0:	ldur	w8, [x29, #27]
    1de4:	ldr	w11, [x29, #24]
    1de8:	str	w8, [x10, #12]
    1dec:	stur	w11, [x10, #9]
    1df0:	ldp	w8, w10, [x9, #8]
    1df4:	cmp	w8, w10
    1df8:	b.cs	201c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1dfc:	mov	w21, wzr
    1e00:	add	w8, w8, #0x1
    1e04:	str	w8, [x9, #8]
    1e08:	ldrb	w8, [sp, #8]
    1e0c:	tbnz	w8, #1, 205c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1e10:	tbnz	w8, #0, 1e1c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x414>
    1e14:	cbnz	w21, 1c84 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x27c>
    1e18:	b	1c44 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x23c>
    1e1c:	ldr	x0, [sp]
    1e20:	cbz	x0, 1e30 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x428>
    1e24:	ldr	x8, [x0]
    1e28:	ldr	x8, [x8, #8]
    1e2c:	blr	x8
    1e30:	str	xzr, [sp]
    1e34:	cbnz	w21, 1c84 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x27c>
    1e38:	b	1c44 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x23c>
    1e3c:	add	x1, x21, #0x10
    1e40:	mov	w3, #0x10                  	// #16
    1e44:	mov	x0, x21
    1e48:	mov	x2, xzr
    1e4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e50:	ldr	w8, [x21, #8]
    1e54:	b	1b60 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x158>
    1e58:	add	x1, x8, #0x10
    1e5c:	mov	w3, #0x10                  	// #16
    1e60:	mov	x0, x8
    1e64:	mov	x2, xzr
    1e68:	mov	x21, x8
    1e6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e70:	ldr	w9, [x21, #8]
    1e74:	mov	x8, x21
    1e78:	b	1c10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x208>
    1e7c:	add	x1, x21, #0x10
    1e80:	mov	w3, #0x10                  	// #16
    1e84:	mov	x0, x21
    1e88:	mov	x2, xzr
    1e8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e90:	ldr	w8, [x21, #8]
    1e94:	b	1d40 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    1e98:	add	x1, x9, #0x10
    1e9c:	mov	w3, #0x10                  	// #16
    1ea0:	mov	x0, x9
    1ea4:	mov	x2, xzr
    1ea8:	mov	x21, x9
    1eac:	mov	x27, x8
    1eb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1eb4:	ldr	w10, [x21, #8]
    1eb8:	mov	x8, x27
    1ebc:	mov	x9, x21
    1ec0:	b	1dd0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3c8>
    1ec4:	ldur	x9, [x29, #-32]
    1ec8:	sturb	w8, [x29, #-24]
    1ecc:	stur	xzr, [x29, #-32]
    1ed0:	orr	x8, x9, #0x1
    1ed4:	b	1f1c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x514>
    1ed8:	ldur	x21, [x29, #-16]
    1edc:	ldr	w8, [x21, #8]
    1ee0:	cbz	w8, 2064 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x65c>
    1ee4:	ldp	x1, x8, [x20, #48]
    1ee8:	cmp	x1, x8
    1eec:	b.eq	1f0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x504>  // b.none
    1ef0:	stp	x21, xzr, [x1]
    1ef4:	ldur	x8, [x29, #-8]
    1ef8:	add	x9, x1, #0x10
    1efc:	stp	xzr, xzr, [x29, #-16]
    1f00:	str	x8, [x1, #8]
    1f04:	str	x9, [x20, #48]
    1f08:	b	1f18 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x510>
    1f0c:	add	x0, x20, #0x28
    1f10:	sub	x2, x29, #0x10
    1f14:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1f18:	mov	w8, #0x1                   	// #1
    1f1c:	str	x8, [x19]
    1f20:	ldurb	w8, [x29, #-24]
    1f24:	tbnz	w8, #1, 2014 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x60c>
    1f28:	tbz	w8, #0, 1f44 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x53c>
    1f2c:	ldur	x0, [x29, #-32]
    1f30:	cbz	x0, 1f40 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x538>
    1f34:	ldr	x8, [x0]
    1f38:	ldr	x8, [x8, #8]
    1f3c:	blr	x8
    1f40:	stur	xzr, [x29, #-32]
    1f44:	ldur	x19, [x29, #-8]
    1f48:	cbz	x19, 1fcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>
    1f4c:	adrp	x20, 0 <__pthread_key_create>
    1f50:	ldr	x20, [x20]
    1f54:	add	x8, x19, #0x8
    1f58:	cbz	x20, 1f78 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x570>
    1f5c:	ldaxr	w9, [x8]
    1f60:	sub	w10, w9, #0x1
    1f64:	stlxr	w11, w10, [x8]
    1f68:	cbnz	w11, 1f5c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x554>
    1f6c:	cmp	w9, #0x1
    1f70:	b.eq	1f8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x584>  // b.none
    1f74:	b	1fcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>
    1f78:	ldr	w9, [x8]
    1f7c:	sub	w10, w9, #0x1
    1f80:	str	w10, [x8]
    1f84:	cmp	w9, #0x1
    1f88:	b.ne	1fcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>  // b.any
    1f8c:	mov	x21, x19
    1f90:	ldr	x8, [x21], #12
    1f94:	mov	x0, x19
    1f98:	ldr	x8, [x8, #16]
    1f9c:	blr	x8
    1fa0:	cbz	x20, 1fec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5e4>
    1fa4:	ldaxr	w8, [x21]
    1fa8:	sub	w9, w8, #0x1
    1fac:	stlxr	w10, w9, [x21]
    1fb0:	cbnz	w10, 1fa4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x59c>
    1fb4:	cmp	w8, #0x1
    1fb8:	b.ne	1fcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>  // b.any
    1fbc:	ldr	x8, [x19]
    1fc0:	mov	x0, x19
    1fc4:	ldr	x8, [x8, #24]
    1fc8:	blr	x8
    1fcc:	ldp	x20, x19, [sp, #160]
    1fd0:	ldp	x22, x21, [sp, #144]
    1fd4:	ldp	x24, x23, [sp, #128]
    1fd8:	ldp	x26, x25, [sp, #112]
    1fdc:	ldr	x27, [sp, #96]
    1fe0:	ldp	x29, x30, [sp, #80]
    1fe4:	add	sp, sp, #0xb0
    1fe8:	ret
    1fec:	ldr	w8, [x21]
    1ff0:	sub	w9, w8, #0x1
    1ff4:	str	w9, [x21]
    1ff8:	cmp	w8, #0x1
    1ffc:	b.eq	1fbc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5b4>  // b.none
    2000:	b	1fcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>
    2004:	add	x0, sp, #0x20
    2008:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    200c:	add	x0, sp, #0x10
    2010:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2014:	sub	x0, x29, #0x20
    2018:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    201c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2020:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2024:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2028:	add	x0, x0, #0x0
    202c:	add	x1, x1, #0x0
    2030:	add	x3, x3, #0x0
    2034:	mov	w2, #0x43                  	// #67
    2038:	bl	0 <__assert_fail>
    203c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2040:	add	x0, x0, #0x0
    2044:	mov	w1, #0x1                   	// #1
    2048:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    204c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2050:	add	x0, x0, #0x0
    2054:	mov	w1, #0x1                   	// #1
    2058:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    205c:	mov	x0, sp
    2060:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2064:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2068:	add	x0, x0, #0x0
    206c:	mov	w1, #0x1                   	// #1
    2070:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000002074 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>:
    2074:	stp	x29, x30, [sp, #-96]!
    2078:	stp	x28, x27, [sp, #16]
    207c:	stp	x26, x25, [sp, #32]
    2080:	stp	x24, x23, [sp, #48]
    2084:	stp	x22, x21, [sp, #64]
    2088:	stp	x20, x19, [sp, #80]
    208c:	mov	x29, sp
    2090:	sub	sp, sp, #0x2c0
    2094:	mov	w20, w1
    2098:	mov	x19, x8
    209c:	add	x8, sp, #0x80
    20a0:	mov	w1, wzr
    20a4:	mov	x2, xzr
    20a8:	mov	x21, x0
    20ac:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    20b0:	ldr	x8, [sp, #128]
    20b4:	tst	x8, #0xfffffffffffffffe
    20b8:	and	x10, x8, #0xfffffffffffffffe
    20bc:	cset	w9, ne  // ne = any
    20c0:	orr	x9, x10, x9
    20c4:	str	x9, [sp, #128]
    20c8:	cbz	x10, 20ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x78>
    20cc:	ldrb	w9, [x19, #32]
    20d0:	ands	x8, x8, #0xfffffffffffffffe
    20d4:	str	xzr, [sp, #128]
    20d8:	orr	w9, w9, #0x3
    20dc:	strb	w9, [x19, #32]
    20e0:	b.eq	27e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x770>  // b.none
    20e4:	str	x8, [x19]
    20e8:	b	27bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x748>
    20ec:	cbnz	x9, 2840 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7cc>
    20f0:	stp	xzr, xzr, [x29, #-48]
    20f4:	stur	xzr, [x29, #-32]
    20f8:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    20fc:	adrp	x26, 0 <__pthread_key_create>
    2100:	ldr	d0, [x9]
    2104:	ldr	x26, [x26]
    2108:	add	x8, sp, #0x80
    210c:	add	x10, sp, #0x40
    2110:	add	x11, sp, #0x18
    2114:	mov	x22, xzr
    2118:	add	x8, x8, #0x10
    211c:	add	x9, x10, #0x10
    2120:	add	x28, x11, #0x8
    2124:	add	x27, x11, #0x18
    2128:	add	x25, x11, #0x10
    212c:	str	d0, [sp, #136]
    2130:	str	x9, [sp, #16]
    2134:	str	x8, [sp, #128]
    2138:	b	214c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xd8>
    213c:	str	xzr, [sp, #112]
    2140:	orr	w8, w23, #0x2
    2144:	cmp	w8, #0x2
    2148:	b.ne	2774 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x700>  // b.any
    214c:	add	x8, sp, #0x70
    2150:	mov	w1, #0x2                   	// #2
    2154:	mov	x0, x21
    2158:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    215c:	ldrb	w10, [sp, #120]
    2160:	ubfiz	w9, w10, #1, #1
    2164:	and	w8, w10, #0xfffffffd
    2168:	orr	w11, w9, w8
    216c:	strb	w11, [sp, #120]
    2170:	tbnz	w10, #0, 21ac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x138>
    2174:	cbnz	w9, 27dc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x768>
    2178:	ldr	w8, [sp, #112]
    217c:	cmp	w8, #0x2
    2180:	b.eq	2190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x11c>  // b.none
    2184:	cmp	w8, #0x1
    2188:	b.eq	21f8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x184>  // b.none
    218c:	cbnz	w8, 222c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1b8>
    2190:	ldrb	w8, [x19, #32]
    2194:	strb	wzr, [x19]
    2198:	strb	wzr, [x19, #24]
    219c:	and	w8, w8, #0xfc
    21a0:	orr	w8, w8, #0x2
    21a4:	strb	w8, [x19, #32]
    21a8:	b	21d0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x15c>
    21ac:	ldrb	w9, [x19, #32]
    21b0:	ldr	x10, [sp, #112]
    21b4:	strb	w8, [sp, #120]
    21b8:	str	xzr, [sp, #112]
    21bc:	orr	w9, w9, #0x3
    21c0:	ands	x8, x10, #0xfffffffffffffffe
    21c4:	strb	w9, [x19, #32]
    21c8:	b.eq	27e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x770>  // b.none
    21cc:	str	x8, [x19]
    21d0:	mov	w23, #0x1                   	// #1
    21d4:	ldrb	w8, [sp, #120]
    21d8:	tbnz	w8, #1, 27dc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x768>
    21dc:	tbz	w8, #0, 2140 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    21e0:	ldr	x0, [sp, #112]
    21e4:	cbz	x0, 213c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xc8>
    21e8:	ldr	x8, [x0]
    21ec:	ldr	x8, [x8, #8]
    21f0:	blr	x8
    21f4:	b	213c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xc8>
    21f8:	ldrb	w8, [x19, #32]
    21fc:	ldur	q0, [x29, #-48]
    2200:	ldur	x9, [x29, #-32]
    2204:	mov	w23, #0x1                   	// #1
    2208:	and	w8, w8, #0xfc
    220c:	orr	w8, w8, #0x2
    2210:	stp	xzr, xzr, [x29, #-48]
    2214:	stur	xzr, [x29, #-32]
    2218:	str	q0, [x19]
    221c:	str	x9, [x19, #16]
    2220:	strb	w8, [x19, #32]
    2224:	strb	w23, [x19, #24]
    2228:	b	21d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    222c:	ldr	w1, [sp, #116]
    2230:	cmp	w1, #0x2
    2234:	b.ne	2274 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x200>  // b.any
    2238:	cbz	x22, 2190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x11c>
    223c:	add	x8, sp, #0x18
    2240:	mov	x0, x21
    2244:	bl	1a08 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
    2248:	ldr	x9, [sp, #24]
    224c:	tst	x9, #0xfffffffffffffffe
    2250:	and	x8, x9, #0xfffffffffffffffe
    2254:	cset	w9, ne  // ne = any
    2258:	orr	x9, x8, x9
    225c:	str	x9, [sp, #24]
    2260:	cbz	x8, 2394 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x320>
    2264:	ldrb	w9, [x19, #32]
    2268:	str	x8, [x19]
    226c:	orr	w8, w9, #0x3
    2270:	b	21a4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x130>
    2274:	add	x8, sp, #0x60
    2278:	add	x2, sp, #0x80
    227c:	mov	x0, x21
    2280:	mov	x3, xzr
    2284:	str	wzr, [sp, #136]
    2288:	bl	e50 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    228c:	ldrb	w10, [sp, #104]
    2290:	ubfiz	w9, w10, #1, #1
    2294:	and	w8, w10, #0xfffffffd
    2298:	orr	w11, w9, w8
    229c:	strb	w11, [sp, #104]
    22a0:	tbnz	w10, #0, 2368 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2f4>
    22a4:	cbnz	w9, 2838 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7c4>
    22a8:	ldr	w8, [sp, #96]
    22ac:	cmp	w8, #0x3
    22b0:	b.eq	245c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e8>  // b.none
    22b4:	cmp	w8, #0x2
    22b8:	b.eq	23c8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x354>  // b.none
    22bc:	cmp	w8, #0x1
    22c0:	b.ne	2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.any
    22c4:	ldr	w8, [sp, #136]
    22c8:	cbz	w8, 2504 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x490>
    22cc:	ldr	x9, [sp, #128]
    22d0:	ldp	x8, x1, [x29, #-48]
    22d4:	mov	w10, #0x8ba3                	// #35747
    22d8:	movk	w10, #0xba2e, lsl #16
    22dc:	ldr	w24, [x9]
    22e0:	cmp	x8, x1
    22e4:	b.eq	22f8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x284>  // b.none
    22e8:	mov	x22, x1
    22ec:	ldr	w9, [x22, #-88]!
    22f0:	cmp	w9, w24
    22f4:	b.eq	2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.none
    22f8:	sub	x9, x1, x8
    22fc:	lsr	x9, x9, #3
    2300:	mul	w9, w9, w10
    2304:	cbz	w9, 232c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2b8>
    2308:	mov	w10, wzr
    230c:	mov	w11, #0x58                  	// #88
    2310:	umaddl	x22, w10, w11, x8
    2314:	ldr	w11, [x22]
    2318:	cmp	w11, w24
    231c:	b.eq	2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.none
    2320:	add	w10, w10, #0x1
    2324:	cmp	w9, w10
    2328:	b.ne	230c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x298>  // b.any
    232c:	ldur	x8, [x29, #-32]
    2330:	cmp	x1, x8
    2334:	b.eq	267c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x608>  // b.none
    2338:	movi	v0.2d, #0x0
    233c:	mov	x8, x1
    2340:	stp	q0, q0, [x1, #16]
    2344:	add	x22, x1, #0x58
    2348:	str	q0, [x8, #48]!
    234c:	str	q0, [x1]
    2350:	stp	x8, xzr, [x1, #32]
    2354:	strb	wzr, [x8]
    2358:	stp	xzr, xzr, [x1, #72]
    235c:	str	xzr, [x1, #64]
    2360:	stur	x22, [x29, #-40]
    2364:	b	2688 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x614>
    2368:	ldrb	w9, [x19, #32]
    236c:	ldr	x10, [sp, #96]
    2370:	strb	w8, [sp, #104]
    2374:	str	xzr, [sp, #96]
    2378:	orr	w9, w9, #0x3
    237c:	ands	x8, x10, #0xfffffffffffffffe
    2380:	strb	w9, [x19, #32]
    2384:	b.eq	27e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x770>  // b.none
    2388:	str	x8, [x19]
    238c:	mov	w23, #0x1                   	// #1
    2390:	b	274c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d8>
    2394:	cbnz	x9, 2804 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x790>
    2398:	ldp	x1, x9, [x22, #16]
    239c:	ldr	x8, [x21, #48]
    23a0:	cmp	x1, x9
    23a4:	b.eq	2524 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4b0>  // b.none
    23a8:	str	xzr, [x1, #8]
    23ac:	ldur	q0, [x8, #-16]
    23b0:	add	x9, x1, #0x10
    23b4:	stur	xzr, [x8, #-8]
    23b8:	str	q0, [x1]
    23bc:	stur	xzr, [x8, #-16]
    23c0:	str	x9, [x22, #16]
    23c4:	b	2530 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4bc>
    23c8:	cbz	x22, 2504 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x490>
    23cc:	tbz	w20, #0, 2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>
    23d0:	ldr	w8, [sp, #136]
    23d4:	stp	x28, x27, [sp]
    23d8:	stp	x25, xzr, [sp, #24]
    23dc:	strb	wzr, [sp, #40]
    23e0:	cbz	w8, 25c4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x550>
    23e4:	mov	x24, xzr
    23e8:	sub	x27, x8, #0x1
    23ec:	ldr	x9, [sp, #128]
    23f0:	ldp	x8, x23, [sp, #24]
    23f4:	ldr	x10, [sp, #40]
    23f8:	ldr	x28, [x9, x24, lsl #3]
    23fc:	cmp	x8, x25
    2400:	mov	w9, #0xf                   	// #15
    2404:	add	x26, x23, #0x1
    2408:	csel	x9, x9, x10, eq  // eq = none
    240c:	cmp	x26, x9
    2410:	b.ls	2430 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3bc>  // b.plast
    2414:	add	x0, sp, #0x18
    2418:	mov	w4, #0x1                   	// #1
    241c:	mov	x1, x23
    2420:	mov	x2, xzr
    2424:	mov	x3, xzr
    2428:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    242c:	ldr	x8, [sp, #24]
    2430:	strb	w28, [x8, x23]
    2434:	ldr	x8, [sp, #24]
    2438:	cmp	x27, x24
    243c:	str	x26, [sp, #32]
    2440:	strb	wzr, [x8, x26]
    2444:	b.eq	25c4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x550>  // b.none
    2448:	ldr	w8, [sp, #136]
    244c:	add	x24, x24, #0x1
    2450:	cmp	x24, x8
    2454:	b.cc	23ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x378>  // b.lo, b.ul, b.last
    2458:	b	280c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x798>
    245c:	cbz	x22, 2504 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x490>
    2460:	tbz	w20, #0, 2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>
    2464:	ldr	w24, [sp, #136]
    2468:	ldr	x8, [sp, #16]
    246c:	str	x27, [sp, #8]
    2470:	strb	wzr, [sp, #80]
    2474:	cmp	w24, #0x1
    2478:	stp	x8, xzr, [sp, #64]
    247c:	b.eq	2618 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5a4>  // b.none
    2480:	mov	w8, w24
    2484:	mov	w27, #0x1                   	// #1
    2488:	str	x28, [sp]
    248c:	b	24b0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x43c>
    2490:	strb	w28, [x8, x23]
    2494:	ldr	x8, [sp, #64]
    2498:	str	x26, [sp, #72]
    249c:	add	x27, x27, #0x1
    24a0:	cmp	w24, w27
    24a4:	strb	wzr, [x8, x26]
    24a8:	ldr	w8, [sp, #136]
    24ac:	b.eq	2608 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x594>  // b.none
    24b0:	cmp	x27, w8, uxtw
    24b4:	b.cs	280c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x798>  // b.hs, b.nlast
    24b8:	ldr	x9, [sp, #128]
    24bc:	ldp	x8, x23, [sp, #64]
    24c0:	ldr	x10, [sp, #80]
    24c4:	ldr	x28, [x9, x27, lsl #3]
    24c8:	ldr	x9, [sp, #16]
    24cc:	add	x26, x23, #0x1
    24d0:	cmp	x8, x9
    24d4:	mov	w9, #0xf                   	// #15
    24d8:	csel	x9, x9, x10, eq  // eq = none
    24dc:	cmp	x26, x9
    24e0:	b.ls	2490 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x41c>  // b.plast
    24e4:	add	x0, sp, #0x40
    24e8:	mov	w4, #0x1                   	// #1
    24ec:	mov	x1, x23
    24f0:	mov	x2, xzr
    24f4:	mov	x3, xzr
    24f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    24fc:	ldr	x8, [sp, #64]
    2500:	b	2490 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x41c>
    2504:	ldrb	w8, [x19, #32]
    2508:	strb	wzr, [x19]
    250c:	strb	wzr, [x19, #24]
    2510:	mov	w23, #0x1                   	// #1
    2514:	and	w8, w8, #0xfc
    2518:	orr	w8, w8, #0x2
    251c:	strb	w8, [x19, #32]
    2520:	b	274c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d8>
    2524:	sub	x2, x8, #0x10
    2528:	add	x0, x22, #0x8
    252c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2530:	ldr	x8, [x21, #48]
    2534:	sub	x9, x8, #0x10
    2538:	str	x9, [x21, #48]
    253c:	ldur	x23, [x8, #-8]
    2540:	cbz	x23, 25bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>
    2544:	add	x8, x23, #0x8
    2548:	cbz	x26, 2568 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4f4>
    254c:	ldaxr	w9, [x8]
    2550:	sub	w10, w9, #0x1
    2554:	stlxr	w11, w10, [x8]
    2558:	cbnz	w11, 254c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4d8>
    255c:	cmp	w9, #0x1
    2560:	b.ne	25bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>  // b.any
    2564:	b	257c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x508>
    2568:	ldr	w9, [x8]
    256c:	sub	w10, w9, #0x1
    2570:	str	w10, [x8]
    2574:	cmp	w9, #0x1
    2578:	b.ne	25bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>  // b.any
    257c:	mov	x24, x23
    2580:	ldr	x8, [x24], #12
    2584:	mov	x0, x23
    2588:	ldr	x8, [x8, #16]
    258c:	blr	x8
    2590:	cbz	x26, 25f0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x57c>
    2594:	ldaxr	w8, [x24]
    2598:	sub	w9, w8, #0x1
    259c:	stlxr	w10, w9, [x24]
    25a0:	cbnz	w10, 2594 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x520>
    25a4:	cmp	w8, #0x1
    25a8:	b.ne	25bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>  // b.any
    25ac:	ldr	x8, [x23]
    25b0:	mov	x0, x23
    25b4:	ldr	x8, [x8, #24]
    25b8:	blr	x8
    25bc:	mov	w23, #0x2                   	// #2
    25c0:	b	21d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    25c4:	add	x0, x22, #0x20
    25c8:	add	x1, sp, #0x18
    25cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    25d0:	ldr	x0, [sp, #24]
    25d4:	cmp	x0, x25
    25d8:	b.eq	25e0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x56c>  // b.none
    25dc:	bl	0 <_ZdlPv>
    25e0:	adrp	x26, 0 <__pthread_key_create>
    25e4:	ldr	x26, [x26]
    25e8:	ldp	x28, x27, [sp]
    25ec:	b	2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>
    25f0:	ldr	w8, [x24]
    25f4:	sub	w9, w8, #0x1
    25f8:	str	w9, [x24]
    25fc:	cmp	w8, #0x1
    2600:	b.eq	25ac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x538>  // b.none
    2604:	b	25bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>
    2608:	adrp	x26, 0 <__pthread_key_create>
    260c:	ldr	x26, [x26]
    2610:	ldr	x28, [sp]
    2614:	cbz	w8, 280c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x798>
    2618:	ldr	x8, [sp, #128]
    261c:	ldp	x23, x24, [sp, #64]
    2620:	ldr	x8, [x8]
    2624:	str	w8, [sp, #24]
    2628:	ldr	x8, [sp, #8]
    262c:	str	x8, [sp, #32]
    2630:	cbnz	x23, 2638 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5c4>
    2634:	cbnz	x24, 282c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7b8>
    2638:	ldr	x0, [sp, #8]
    263c:	cmp	x24, #0x10
    2640:	stur	x24, [x29, #-16]
    2644:	b.cc	2664 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5f0>  // b.lo, b.ul, b.last
    2648:	sub	x1, x29, #0x10
    264c:	mov	x0, x28
    2650:	mov	x2, xzr
    2654:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2658:	ldur	x8, [x29, #-16]
    265c:	str	x0, [sp, #32]
    2660:	str	x8, [sp, #48]
    2664:	cbz	x24, 26a0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x62c>
    2668:	cmp	x24, #0x1
    266c:	b.ne	2694 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x620>  // b.any
    2670:	ldrb	w8, [x23]
    2674:	strb	w8, [x0]
    2678:	b	26a0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x62c>
    267c:	sub	x0, x29, #0x30
    2680:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2684:	ldur	x22, [x29, #-40]
    2688:	mov	w23, wzr
    268c:	str	w24, [x22, #-88]!
    2690:	b	274c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d8>
    2694:	mov	x1, x23
    2698:	mov	x2, x24
    269c:	bl	0 <memcpy>
    26a0:	ldur	x8, [x29, #-16]
    26a4:	ldr	x9, [sp, #32]
    26a8:	str	x8, [sp, #40]
    26ac:	strb	wzr, [x9, x8]
    26b0:	ldp	x1, x8, [x22, #72]
    26b4:	cmp	x1, x8
    26b8:	b.eq	26ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x678>  // b.none
    26bc:	ldr	w9, [sp, #24]
    26c0:	add	x8, x1, #0x18
    26c4:	str	x8, [x1, #8]
    26c8:	ldr	x27, [sp, #8]
    26cc:	str	w9, [x1]
    26d0:	ldr	x9, [sp, #32]
    26d4:	cmp	x9, x27
    26d8:	b.eq	2710 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x69c>  // b.none
    26dc:	str	x9, [x1, #8]
    26e0:	ldr	x8, [sp, #48]
    26e4:	str	x8, [x1, #24]
    26e8:	b	2718 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6a4>
    26ec:	add	x0, x22, #0x40
    26f0:	add	x2, sp, #0x18
    26f4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    26f8:	ldr	x0, [sp, #32]
    26fc:	ldr	x27, [sp, #8]
    2700:	cmp	x0, x27
    2704:	b.eq	2734 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c0>  // b.none
    2708:	bl	0 <_ZdlPv>
    270c:	b	2734 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c0>
    2710:	ldr	q0, [x27]
    2714:	str	q0, [x8]
    2718:	ldr	x8, [sp, #40]
    271c:	str	x8, [x1, #16]
    2720:	stp	x27, xzr, [sp, #32]
    2724:	strb	wzr, [sp, #48]
    2728:	ldr	x8, [x22, #72]
    272c:	add	x8, x8, #0x28
    2730:	str	x8, [x22, #72]
    2734:	ldr	x0, [sp, #64]
    2738:	ldr	x8, [sp, #16]
    273c:	cmp	x0, x8
    2740:	b.eq	2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.none
    2744:	bl	0 <_ZdlPv>
    2748:	mov	w23, wzr
    274c:	ldrb	w8, [sp, #104]
    2750:	tbnz	w8, #1, 2838 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7c4>
    2754:	tbz	w8, #0, 21d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    2758:	ldr	x0, [sp, #96]
    275c:	cbz	x0, 276c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6f8>
    2760:	ldr	x8, [x0]
    2764:	ldr	x8, [x8, #8]
    2768:	blr	x8
    276c:	str	xzr, [sp, #96]
    2770:	b	21d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    2774:	ldr	x0, [sp, #128]
    2778:	add	x8, sp, #0x80
    277c:	add	x8, x8, #0x10
    2780:	cmp	x0, x8
    2784:	b.eq	278c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x718>  // b.none
    2788:	bl	0 <free>
    278c:	ldp	x19, x20, [x29, #-48]
    2790:	cmp	x19, x20
    2794:	b.eq	27b0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x73c>  // b.none
    2798:	mov	x0, x19
    279c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27a0:	add	x19, x19, #0x58
    27a4:	cmp	x20, x19
    27a8:	b.ne	2798 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x724>  // b.any
    27ac:	ldur	x19, [x29, #-48]
    27b0:	cbz	x19, 27bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x748>
    27b4:	mov	x0, x19
    27b8:	bl	0 <_ZdlPv>
    27bc:	add	sp, sp, #0x2c0
    27c0:	ldp	x20, x19, [sp, #80]
    27c4:	ldp	x22, x21, [sp, #64]
    27c8:	ldp	x24, x23, [sp, #48]
    27cc:	ldp	x26, x25, [sp, #32]
    27d0:	ldp	x28, x27, [sp, #16]
    27d4:	ldp	x29, x30, [sp], #96
    27d8:	ret
    27dc:	add	x0, sp, #0x70
    27e0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27e4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27e8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27ec:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27f0:	add	x0, x0, #0x0
    27f4:	add	x1, x1, #0x0
    27f8:	add	x3, x3, #0x0
    27fc:	mov	w2, #0x1ce                 	// #462
    2800:	bl	0 <__assert_fail>
    2804:	add	x0, sp, #0x18
    2808:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    280c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2810:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2814:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2818:	add	x0, x0, #0x0
    281c:	add	x1, x1, #0x0
    2820:	add	x3, x3, #0x0
    2824:	mov	w2, #0x95                  	// #149
    2828:	bl	0 <__assert_fail>
    282c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2830:	add	x0, x0, #0x0
    2834:	bl	0 <_ZSt19__throw_logic_errorPKc>
    2838:	add	x0, sp, #0x60
    283c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2840:	add	x0, sp, #0x80
    2844:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor7ReadVBREj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	mov	x19, x8
  20:	add	x8, sp, #0x10
  24:	mov	w20, w1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  30:	ldrb	w8, [sp, #24]
  34:	mov	w9, #0x2                   	// #2
  38:	bfxil	w9, w8, #0, #1
  3c:	and	w10, w8, #0xfffffffd
  40:	sturb	w9, [x29, #-8]
  44:	strb	w10, [sp, #24]
  48:	tbnz	w8, #0, 5c <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x5c>
  4c:	ldr	x8, [sp, #16]
  50:	mov	w9, #0x2                   	// #2
  54:	stur	w8, [x29, #-16]
  58:	b	68 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x68>
  5c:	ldr	x8, [sp, #16]
  60:	str	xzr, [sp, #16]
  64:	stur	x8, [x29, #-16]
  68:	and	w8, w9, #0x1
  6c:	mov	w10, w8
  70:	bfi	w10, w9, #1, #1
  74:	sturb	w10, [x29, #-8]
  78:	tbnz	w9, #0, 198 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x198>
  7c:	ubfiz	w8, w9, #1, #1
  80:	cbnz	w8, 248 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x248>
  84:	ldur	w8, [x29, #-16]
  88:	sub	w22, w20, #0x1
  8c:	mov	w9, #0x1                   	// #1
  90:	lsl	w23, w9, w22
  94:	tst	w8, w23
  98:	b.eq	1c4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1c4>  // b.none
  9c:	sub	w25, w23, #0x1
  a0:	and	w24, w8, w25
  a4:	mov	w26, w22
  a8:	mov	x8, sp
  ac:	mov	x0, x21
  b0:	mov	w1, w20
  b4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  b8:	ldrb	w9, [sp, #24]
  bc:	ldrb	w10, [sp, #8]
  c0:	ldr	x8, [sp]
  c4:	and	w9, w9, #0xfc
  c8:	bfxil	w9, w10, #0, #1
  cc:	and	w11, w10, #0xfffffffd
  d0:	orr	w9, w9, #0x2
  d4:	strb	w9, [sp, #24]
  d8:	strb	w11, [sp, #8]
  dc:	tbnz	w10, #0, e8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xe8>
  e0:	str	w8, [sp, #16]
  e4:	b	f0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xf0>
  e8:	str	xzr, [sp]
  ec:	str	x8, [sp, #16]
  f0:	sub	x0, x29, #0x10
  f4:	add	x1, sp, #0x10
  f8:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  fc:	ldrb	w8, [sp, #24]
 100:	tbnz	w8, #1, 250 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x250>
 104:	tbz	w8, #0, 120 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x120>
 108:	ldr	x0, [sp, #16]
 10c:	cbz	x0, 11c <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x11c>
 110:	ldr	x8, [x0]
 114:	ldr	x8, [x8, #8]
 118:	blr	x8
 11c:	str	xzr, [sp, #16]
 120:	ldrb	w8, [sp, #8]
 124:	tbnz	w8, #1, 258 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x258>
 128:	tbz	w8, #0, 144 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x144>
 12c:	ldr	x0, [sp]
 130:	cbz	x0, 140 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x140>
 134:	ldr	x8, [x0]
 138:	ldr	x8, [x8, #8]
 13c:	blr	x8
 140:	str	xzr, [sp]
 144:	ldurb	w10, [x29, #-8]
 148:	ubfiz	w11, w10, #1, #1
 14c:	and	w9, w10, #0xfffffffd
 150:	orr	w8, w11, w9
 154:	sturb	w8, [x29, #-8]
 158:	tbnz	w10, #0, 218 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x218>
 15c:	cbnz	w11, 248 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x248>
 160:	ldur	w9, [x29, #-16]
 164:	and	w10, w9, w25
 168:	tst	w9, w23
 16c:	lsl	w9, w10, w26
 170:	orr	w24, w9, w24
 174:	add	w26, w26, w22
 178:	b.ne	a8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xa8>  // b.any
 17c:	ldrb	w9, [x19, #8]
 180:	str	w24, [x19]
 184:	and	w9, w9, #0xfc
 188:	orr	w9, w9, #0x2
 18c:	strb	w9, [x19, #8]
 190:	tbz	w8, #1, 1e0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1e0>
 194:	b	248 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x248>
 198:	ldrb	w9, [x19, #8]
 19c:	ldur	x10, [x29, #-16]
 1a0:	sturb	w8, [x29, #-8]
 1a4:	stur	xzr, [x29, #-16]
 1a8:	and	w9, w9, #0xfc
 1ac:	orr	w9, w8, w9
 1b0:	orr	w9, w9, #0x2
 1b4:	strb	w9, [x19, #8]
 1b8:	str	x10, [x19]
 1bc:	tbz	w8, #1, 1e0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1e0>
 1c0:	b	248 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x248>
 1c4:	ldrb	w9, [x19, #8]
 1c8:	str	w8, [x19]
 1cc:	mov	w8, w10
 1d0:	and	w9, w9, #0xfc
 1d4:	orr	w9, w9, #0x2
 1d8:	strb	w9, [x19, #8]
 1dc:	tbnz	w8, #1, 248 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x248>
 1e0:	tbz	w8, #0, 1fc <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1fc>
 1e4:	ldur	x0, [x29, #-16]
 1e8:	cbz	x0, 1f8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1f8>
 1ec:	ldr	x8, [x0]
 1f0:	ldr	x8, [x8, #8]
 1f4:	blr	x8
 1f8:	stur	xzr, [x29, #-16]
 1fc:	ldp	x20, x19, [sp, #112]
 200:	ldp	x22, x21, [sp, #96]
 204:	ldp	x24, x23, [sp, #80]
 208:	ldp	x26, x25, [sp, #64]
 20c:	ldp	x29, x30, [sp, #48]
 210:	add	sp, sp, #0x80
 214:	ret
 218:	and	w8, w10, #0x1
 21c:	ldrb	w10, [x19, #8]
 220:	ldur	x11, [x29, #-16]
 224:	sturb	w9, [x29, #-8]
 228:	stur	xzr, [x29, #-16]
 22c:	and	w10, w10, #0xfc
 230:	orr	w8, w8, w10
 234:	orr	w8, w8, #0x2
 238:	strb	w8, [x19, #8]
 23c:	str	x11, [x19]
 240:	mov	w8, w9
 244:	tbz	w8, #1, 1e0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1e0>
 248:	sub	x0, x29, #0x10
 24c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 250:	add	x0, sp, #0x10
 254:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 258:	mov	x0, sp
 25c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #112]
   8:	stp	x24, x23, [sp, #128]
   c:	stp	x22, x21, [sp, #144]
  10:	stp	x20, x19, [sp, #160]
  14:	add	x29, sp, #0x70
  18:	sub	w9, w1, #0x1
  1c:	cmp	w9, #0x3f
  20:	b.hi	214 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x214>  // b.pmore
  24:	ldr	w22, [x0, #32]
  28:	mov	w21, w1
  2c:	mov	x20, x0
  30:	mov	x19, x8
  34:	cmp	w22, w1
  38:	b.cs	48 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x48>  // b.hs, b.nlast
  3c:	cbz	w22, 80 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x80>
  40:	ldr	x23, [x20, #24]
  44:	b	84 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x84>
  48:	ldr	x8, [x20, #24]
  4c:	sub	w10, w22, w21
  50:	str	w10, [x20, #32]
  54:	neg	w9, w21
  58:	lsr	x10, x8, x21
  5c:	str	x10, [x20, #24]
  60:	ldrb	w10, [x19, #8]
  64:	mov	x11, #0xffffffffffffffff    	// #-1
  68:	lsr	x9, x11, x9
  6c:	and	x8, x8, x9
  70:	and	w9, w10, #0xfc
  74:	orr	w9, w9, #0x2
  78:	strb	w9, [x19, #8]
  7c:	b	c4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xc4>
  80:	mov	x23, xzr
  84:	add	x8, sp, #0x8
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  90:	ldr	x8, [sp, #8]
  94:	tst	x8, #0xfffffffffffffffe
  98:	and	x10, x8, #0xfffffffffffffffe
  9c:	cset	w9, ne  // ne = any
  a0:	orr	x9, x10, x9
  a4:	str	x9, [sp, #8]
  a8:	cbz	x10, e0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xe0>
  ac:	ldrb	w9, [x19, #8]
  b0:	ands	x8, x8, #0xfffffffffffffffe
  b4:	str	xzr, [sp, #8]
  b8:	orr	w9, w9, #0x3
  bc:	strb	w9, [x19, #8]
  c0:	b.eq	1c4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1c4>  // b.none
  c4:	str	x8, [x19]
  c8:	ldp	x20, x19, [sp, #160]
  cc:	ldp	x22, x21, [sp, #144]
  d0:	ldp	x24, x23, [sp, #128]
  d4:	ldp	x29, x30, [sp, #112]
  d8:	add	sp, sp, #0xb0
  dc:	ret
  e0:	cbnz	x9, 234 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x234>
  e4:	ldr	w24, [x20, #32]
  e8:	sub	w21, w21, w22
  ec:	subs	w8, w24, w21
  f0:	b.cs	1e4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1e4>  // b.hs, b.nlast
  f4:	bl	0 <_ZNSt3_V216generic_categoryEv>
  f8:	strb	wzr, [sp, #72]
  fc:	stp	xzr, xzr, [sp, #24]
 100:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 104:	ldr	x10, [x10]
 108:	mov	w9, #0x1                   	// #1
 10c:	str	w9, [sp, #40]
 110:	add	x8, sp, #0x38
 114:	add	x10, x10, #0x10
 118:	stp	x10, xzr, [sp, #8]
 11c:	adrp	x10, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 120:	ldr	x10, [x10]
 124:	adrp	x9, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 128:	mov	x20, x0
 12c:	add	x9, x9, #0x0
 130:	str	x8, [sp, #48]
 134:	add	x22, x8, #0x10
 138:	add	x8, x10, #0x10
 13c:	add	x0, sp, #0x8
 140:	sub	x1, x29, #0x18
 144:	stp	x22, xzr, [sp, #56]
 148:	stp	x8, x9, [x29, #-24]
 14c:	stp	w21, w24, [x29, #-8]
 150:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 154:	ldr	x8, [sp, #32]
 158:	ldr	x9, [sp, #16]
 15c:	cmp	x8, x9
 160:	b.eq	16c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x16c>  // b.none
 164:	add	x0, sp, #0x8
 168:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 16c:	ldr	x23, [sp, #48]
 170:	mov	w0, #0x40                  	// #64
 174:	bl	0 <_Znwm>
 178:	mov	w8, #0x104                 	// #260
 17c:	sub	x1, x29, #0x18
 180:	mov	w2, #0x5                   	// #5
 184:	mov	x3, x20
 188:	mov	x21, x0
 18c:	sturh	w8, [x29, #-8]
 190:	stp	x23, xzr, [x29, #-24]
 194:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 198:	add	x0, sp, #0x8
 19c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 1a0:	ldr	x0, [sp, #56]
 1a4:	cmp	x0, x22
 1a8:	b.eq	1b0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1b0>  // b.none
 1ac:	bl	0 <_ZdlPv>
 1b0:	ldrb	w8, [x19, #8]
 1b4:	orr	w9, w8, #0x3
 1b8:	ands	x8, x21, #0xfffffffffffffffe
 1bc:	strb	w9, [x19, #8]
 1c0:	b.ne	c4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xc4>  // b.any
 1c4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1c8:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1cc:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x1ce                 	// #462
 1e0:	bl	0 <__assert_fail>
 1e4:	ldr	x9, [x20, #24]
 1e8:	neg	w10, w21
 1ec:	mov	x11, #0xffffffffffffffff    	// #-1
 1f0:	str	w8, [x20, #32]
 1f4:	lsr	x8, x11, x10
 1f8:	lsr	x10, x9, x21
 1fc:	str	x10, [x20, #24]
 200:	ldrb	w10, [x19, #8]
 204:	and	x8, x9, x8
 208:	lsl	x8, x8, x22
 20c:	orr	x8, x8, x23
 210:	b	70 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x70>
 214:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 218:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 21c:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 220:	add	x0, x0, #0x0
 224:	add	x1, x1, #0x0
 228:	add	x3, x3, #0x0
 22c:	mov	w2, #0xc1                  	// #193
 230:	bl	0 <__assert_fail>
 234:	add	x0, sp, #0x8
 238:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x26, x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x19, x8
  20:	add	x8, sp, #0x10
  24:	mov	w20, w1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  30:	ldrb	w10, [sp, #24]
  34:	ubfiz	w11, w10, #1, #1
  38:	and	w8, w10, #0xfffffffd
  3c:	orr	w9, w11, w8
  40:	strb	w9, [sp, #24]
  44:	tbnz	w10, #0, 104 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x104>
  48:	cbnz	w11, 1c0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1c0>
  4c:	ldr	x0, [sp, #16]
  50:	sub	w23, w20, #0x1
  54:	mov	w8, #0x1                   	// #1
  58:	lsl	w24, w8, w23
  5c:	tst	w24, w0
  60:	b.eq	168 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x168>  // b.none
  64:	sub	w25, w24, #0x1
  68:	and	w22, w25, w0
  6c:	mov	w26, w23
  70:	mov	x8, sp
  74:	mov	x0, x21
  78:	mov	w1, w20
  7c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  80:	add	x0, sp, #0x10
  84:	mov	x1, sp
  88:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  8c:	ldrb	w8, [sp, #8]
  90:	tbnz	w8, #1, 1c8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1c8>
  94:	tbz	w8, #0, b0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xb0>
  98:	ldr	x0, [sp]
  9c:	cbz	x0, ac <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xac>
  a0:	ldr	x8, [x0]
  a4:	ldr	x8, [x8, #8]
  a8:	blr	x8
  ac:	str	xzr, [sp]
  b0:	ldrb	w10, [sp, #24]
  b4:	ubfiz	w11, w10, #1, #1
  b8:	and	w9, w10, #0xfffffffd
  bc:	orr	w8, w11, w9
  c0:	strb	w8, [sp, #24]
  c4:	tbnz	w10, #0, 18c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x18c>
  c8:	cbnz	w11, 1c0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1c0>
  cc:	ldr	x0, [sp, #16]
  d0:	and	w9, w25, w0
  d4:	lsl	x9, x9, x26
  d8:	tst	w24, w0
  dc:	orr	x22, x9, x22
  e0:	add	w26, w26, w23
  e4:	b.ne	70 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x70>  // b.any
  e8:	ldrb	w9, [x19, #8]
  ec:	and	w9, w9, #0xfc
  f0:	orr	w9, w9, #0x2
  f4:	strb	w9, [x19, #8]
  f8:	str	x22, [x19]
  fc:	tbz	w8, #1, 134 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x134>
 100:	b	1c0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1c0>
 104:	ldrb	w9, [x19, #8]
 108:	and	w10, w10, #0x1
 10c:	ldr	x22, [sp, #16]
 110:	mov	x0, xzr
 114:	and	w9, w9, #0xfc
 118:	orr	w9, w10, w9
 11c:	orr	w9, w9, #0x2
 120:	strb	w8, [sp, #24]
 124:	strb	w9, [x19, #8]
 128:	str	xzr, [sp, #16]
 12c:	str	x22, [x19]
 130:	tbnz	w8, #1, 1c0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1c0>
 134:	tbz	w8, #0, 14c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x14c>
 138:	cbz	x0, 148 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x148>
 13c:	ldr	x8, [x0]
 140:	ldr	x8, [x8, #8]
 144:	blr	x8
 148:	str	xzr, [sp, #16]
 14c:	ldp	x20, x19, [sp, #96]
 150:	ldp	x22, x21, [sp, #80]
 154:	ldp	x24, x23, [sp, #64]
 158:	ldp	x26, x25, [sp, #48]
 15c:	ldp	x29, x30, [sp, #32]
 160:	add	sp, sp, #0x70
 164:	ret
 168:	ldrb	w8, [x19, #8]
 16c:	and	x22, x0, #0xffffffff
 170:	and	w8, w8, #0xfc
 174:	orr	w8, w8, #0x2
 178:	strb	w8, [x19, #8]
 17c:	mov	w8, w9
 180:	str	x22, [x19]
 184:	tbz	w8, #1, 134 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x134>
 188:	b	1c0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1c0>
 18c:	ldrb	w8, [x19, #8]
 190:	and	w10, w10, #0x1
 194:	ldr	x22, [sp, #16]
 198:	mov	x0, xzr
 19c:	and	w8, w8, #0xfc
 1a0:	orr	w8, w10, w8
 1a4:	orr	w8, w8, #0x2
 1a8:	strb	w9, [sp, #24]
 1ac:	strb	w8, [x19, #8]
 1b0:	str	xzr, [sp, #16]
 1b4:	mov	w8, w9
 1b8:	str	x22, [x19]
 1bc:	tbz	w8, #1, 134 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x134>
 1c0:	add	x0, sp, #0x10
 1c4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 1c8:	mov	x0, sp
 1cc:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9JumpToBitEm:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x10, [x0, #8]
  14:	lsr	x9, x1, #3
  18:	and	x9, x9, #0x1ffffffffffffff8
  1c:	cmp	x10, x9
  20:	b.cc	c4 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xc4>  // b.lo, b.ul, b.last
  24:	mov	x19, x8
  28:	and	w1, w1, #0x3f
  2c:	str	x9, [x0, #16]
  30:	str	wzr, [x0, #32]
  34:	cbz	w1, 64 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x64>
  38:	mov	x8, sp
  3c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  40:	ldrb	w10, [sp, #8]
  44:	ubfiz	w8, w10, #1, #1
  48:	and	w9, w10, #0xfffffffd
  4c:	orr	w8, w8, w9
  50:	strb	w8, [sp, #8]
  54:	tbnz	w10, #0, 7c <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x7c>
  58:	mov	w9, #0x1                   	// #1
  5c:	str	x9, [x19]
  60:	b	94 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x94>
  64:	mov	w8, #0x1                   	// #1
  68:	str	x8, [x19]
  6c:	ldr	x19, [sp, #32]
  70:	ldp	x29, x30, [sp, #16]
  74:	add	sp, sp, #0x30
  78:	ret
  7c:	ldr	x8, [sp]
  80:	strb	w9, [sp, #8]
  84:	str	xzr, [sp]
  88:	orr	x8, x8, #0x1
  8c:	str	x8, [x19]
  90:	mov	w8, w9
  94:	tbnz	w8, #1, e4 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xe4>
  98:	tbz	w8, #0, 6c <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x6c>
  9c:	ldr	x0, [sp]
  a0:	cbz	x0, b0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xb0>
  a4:	ldr	x8, [x0]
  a8:	ldr	x8, [x8, #8]
  ac:	blr	x8
  b0:	str	xzr, [sp]
  b4:	ldr	x19, [sp, #32]
  b8:	ldp	x29, x30, [sp, #16]
  bc:	add	sp, sp, #0x30
  c0:	ret
  c4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  c8:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  cc:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x85                  	// #133
  e0:	bl	0 <__assert_fail>
  e4:	mov	x0, sp
  e8:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>

Disassembly of section .text._ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj:

0000000000000000 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	w19, w1
  18:	mov	x20, x0
  1c:	mov	x21, x8
  20:	b	2c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x2c>
  24:	str	xzr, [sp, #16]
  28:	cbnz	w22, 124 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x124>
  2c:	add	x8, sp, #0x10
  30:	mov	x0, x20
  34:	mov	w1, w19
  38:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  3c:	ldrb	w10, [sp, #24]
  40:	ubfiz	w11, w10, #1, #1
  44:	and	w8, w10, #0xfffffffd
  48:	orr	w9, w11, w8
  4c:	strb	w9, [sp, #24]
  50:	tbnz	w10, #0, a8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa8>
  54:	cbnz	w11, 138 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x138>
  58:	ldr	x8, [sp, #16]
  5c:	cmp	w8, #0x2
  60:	b.ne	d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd8>  // b.any
  64:	add	x8, sp, #0x8
  68:	mov	x0, x20
  6c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  70:	ldr	x9, [sp, #8]
  74:	tst	x9, #0xfffffffffffffffe
  78:	and	x8, x9, #0xfffffffffffffffe
  7c:	cset	w9, ne  // ne = any
  80:	orr	x9, x8, x9
  84:	str	x9, [sp, #8]
  88:	cbz	x8, f8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf8>
  8c:	ldrb	w9, [x21, #8]
  90:	str	x8, [x21]
  94:	str	xzr, [sp, #8]
  98:	mov	w22, #0x1                   	// #1
  9c:	orr	w8, w9, #0x3
  a0:	strb	w8, [x21, #8]
  a4:	b	100 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x100>
  a8:	and	w9, w10, #0x1
  ac:	ldrb	w10, [x21, #8]
  b0:	ldr	x11, [sp, #16]
  b4:	strb	w8, [sp, #24]
  b8:	str	xzr, [sp, #16]
  bc:	and	w10, w10, #0xfc
  c0:	orr	w9, w9, w10
  c4:	orr	w9, w9, #0x2
  c8:	str	x11, [x21]
  cc:	strb	w9, [x21, #8]
  d0:	mov	w22, #0x1                   	// #1
  d4:	b	104 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x104>
  d8:	ldrb	w10, [x21, #8]
  dc:	str	x8, [x21]
  e0:	mov	w22, #0x1                   	// #1
  e4:	and	w8, w10, #0xfc
  e8:	orr	w8, w8, #0x2
  ec:	strb	w8, [x21, #8]
  f0:	mov	w8, w9
  f4:	b	104 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x104>
  f8:	cbnz	x9, 140 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x140>
  fc:	mov	w22, wzr
 100:	ldrb	w8, [sp, #24]
 104:	tbnz	w8, #1, 138 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x138>
 108:	tbz	w8, #0, 28 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x28>
 10c:	ldr	x0, [sp, #16]
 110:	cbz	x0, 24 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x24>
 114:	ldr	x8, [x0]
 118:	ldr	x8, [x8, #8]
 11c:	blr	x8
 120:	b	24 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x24>
 124:	ldp	x20, x19, [sp, #64]
 128:	ldp	x22, x21, [sp, #48]
 12c:	ldp	x29, x30, [sp, #32]
 130:	add	sp, sp, #0x50
 134:	ret
 138:	add	x0, sp, #0x10
 13c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 140:	add	x0, sp, #0x8
 144:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, a0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0xa0>
  18:	mov	x20, x1
  1c:	cmp	x19, x1
  20:	b.eq	78 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x78>  // b.none
  24:	tbz	w8, #0, 44 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x44>
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 40 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x40>
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #8]
  38:	blr	x8
  3c:	ldrb	w8, [x19, #8]
  40:	str	xzr, [x19]
  44:	ldrb	w9, [x20, #8]
  48:	and	w8, w8, #0xfc
  4c:	bfxil	w8, w9, #0, #1
  50:	orr	w8, w8, #0x2
  54:	strb	w8, [x19, #8]
  58:	ldrb	w8, [x20, #8]
  5c:	and	w9, w8, #0xfffffffd
  60:	strb	w9, [x20, #8]
  64:	ldrb	w9, [x19, #8]
  68:	tbnz	w9, #0, 84 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x84>
  6c:	tbnz	w8, #0, a8 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0xa8>
  70:	ldr	w8, [x20]
  74:	str	w8, [x19]
  78:	ldp	x20, x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	tbz	w8, #0, c8 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0xc8>
  88:	ldr	x8, [x20]
  8c:	str	xzr, [x20]
  90:	str	x8, [x19]
  94:	ldp	x20, x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	mov	x0, x19
  a4:	bl	0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  a8:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  ac:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  b0:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x272                 	// #626
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  cc:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  d0:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x27c                 	// #636
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor11fillCurWordEv:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #112]
   8:	str	x23, [sp, #128]
   c:	stp	x22, x21, [sp, #144]
  10:	stp	x20, x19, [sp, #160]
  14:	add	x29, sp, #0x70
  18:	ldp	x23, x21, [x0, #8]
  1c:	mov	x19, x8
  20:	subs	x9, x23, x21
  24:	b.ls	78 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x78>  // b.plast
  28:	ldr	x8, [x0]
  2c:	add	x10, x21, #0x8
  30:	cmp	x23, x10
  34:	add	x8, x8, x21
  38:	b.cs	140 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x140>  // b.hs, b.nlast
  3c:	str	xzr, [x0, #24]
  40:	cbz	w9, 14c <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x14c>
  44:	and	x12, x9, #0xffffffff
  48:	mov	x10, xzr
  4c:	mov	x11, xzr
  50:	lsl	x12, x12, #3
  54:	ldrb	w13, [x8], #1
  58:	and	x14, x10, #0xfffffff8
  5c:	add	x10, x10, #0x8
  60:	cmp	x12, x10
  64:	lsl	x13, x13, x14
  68:	orr	x11, x13, x11
  6c:	str	x11, [x0, #24]
  70:	b.ne	54 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x54>  // b.any
  74:	b	14c <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x14c>
  78:	bl	0 <_ZNSt3_V216generic_categoryEv>
  7c:	sturb	wzr, [x29, #-16]
  80:	stp	xzr, xzr, [sp, #48]
  84:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  88:	ldr	x10, [x10]
  8c:	mov	w9, #0x1                   	// #1
  90:	str	w9, [sp, #64]
  94:	sub	x8, x29, #0x20
  98:	add	x10, x10, #0x10
  9c:	stp	x10, xzr, [sp, #32]
  a0:	adrp	x10, 0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
  a4:	ldr	x10, [x10]
  a8:	adrp	x9, 0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
  ac:	mov	x20, x0
  b0:	add	x9, x9, #0x0
  b4:	str	x8, [sp, #72]
  b8:	add	x22, x8, #0x10
  bc:	add	x8, x10, #0x10
  c0:	add	x0, sp, #0x20
  c4:	mov	x1, sp
  c8:	stp	x22, xzr, [x29, #-32]
  cc:	stp	x8, x9, [sp]
  d0:	stp	x23, x21, [sp, #16]
  d4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
  d8:	ldr	x8, [sp, #56]
  dc:	ldr	x9, [sp, #40]
  e0:	cmp	x8, x9
  e4:	b.eq	f0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0xf0>  // b.none
  e8:	add	x0, sp, #0x20
  ec:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  f0:	ldr	x23, [sp, #72]
  f4:	mov	w0, #0x40                  	// #64
  f8:	bl	0 <_Znwm>
  fc:	mov	w8, #0x104                 	// #260
 100:	mov	x1, sp
 104:	mov	w2, #0x5                   	// #5
 108:	mov	x3, x20
 10c:	mov	x21, x0
 110:	strh	w8, [sp, #16]
 114:	stp	x23, xzr, [sp]
 118:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 11c:	orr	x8, x21, #0x1
 120:	add	x0, sp, #0x20
 124:	str	x8, [x19]
 128:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 12c:	ldur	x0, [x29, #-32]
 130:	cmp	x0, x22
 134:	b.eq	164 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x164>  // b.none
 138:	bl	0 <_ZdlPv>
 13c:	b	164 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x164>
 140:	ldr	x8, [x8]
 144:	mov	w9, #0x8                   	// #8
 148:	str	x8, [x0, #24]
 14c:	add	x8, x21, w9, uxtw
 150:	lsl	w9, w9, #3
 154:	mov	w10, #0x1                   	// #1
 158:	str	x8, [x0, #16]
 15c:	str	w9, [x0, #32]
 160:	str	x10, [x19]
 164:	ldp	x20, x19, [sp, #160]
 168:	ldp	x22, x21, [sp, #144]
 16c:	ldr	x23, [sp, #128]
 170:	ldp	x29, x30, [sp, #112]
 174:	add	sp, sp, #0xb0
 178:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldp	x4, x3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldp	w4, w3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 94 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x94>
  18:	mov	x20, x1
  1c:	cmp	x19, x1
  20:	b.eq	88 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x88>  // b.none
  24:	tbz	w8, #0, 44 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x44>
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 40 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x40>
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #8]
  38:	blr	x8
  3c:	ldrb	w8, [x19, #8]
  40:	str	xzr, [x19]
  44:	ldrb	w9, [x20, #8]
  48:	and	w8, w8, #0xfc
  4c:	bfxil	w8, w9, #0, #1
  50:	orr	w8, w8, #0x2
  54:	strb	w8, [x19, #8]
  58:	ldrb	w8, [x20, #8]
  5c:	and	w9, w8, #0xfffffffd
  60:	strb	w9, [x20, #8]
  64:	ldrb	w9, [x19, #8]
  68:	tbnz	w9, #0, 78 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x78>
  6c:	tbnz	w8, #0, 9c <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x9c>
  70:	ldr	x8, [x20]
  74:	b	84 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x84>
  78:	tbz	w8, #0, bc <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0xbc>
  7c:	ldr	x8, [x20]
  80:	str	xzr, [x20]
  84:	str	x8, [x19]
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  9c:	adrp	x0, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  a0:	adrp	x1, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  a4:	adrp	x3, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x272                 	// #626
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  c0:	adrp	x1, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  c4:	adrp	x3, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x27c                 	// #636
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamCursor7advanceEj:

0000000000000000 <_ZN4llvm15BitstreamCursor7advanceEj>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	adrp	x25, 0 <__pthread_key_create>
  24:	ldr	x25, [x25]
  28:	mov	w20, w1
  2c:	mov	x21, x0
  30:	mov	x19, x8
  34:	add	x22, x0, #0x40
  38:	b	48 <_ZN4llvm15BitstreamCursor7advanceEj+0x48>
  3c:	str	xzr, [sp]
  40:	cmp	w23, #0x1
  44:	b.eq	380 <_ZN4llvm15BitstreamCursor7advanceEj+0x380>  // b.none
  48:	ldr	w8, [x21, #32]
  4c:	cbnz	w8, 5c <_ZN4llvm15BitstreamCursor7advanceEj+0x5c>
  50:	ldp	x8, x9, [x21, #8]
  54:	cmp	x8, x9
  58:	b.ls	36c <_ZN4llvm15BitstreamCursor7advanceEj+0x36c>  // b.plast
  5c:	ldr	w1, [x21, #36]
  60:	add	x8, sp, #0x10
  64:	mov	x0, x21
  68:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  6c:	ldrb	w10, [sp, #8]
  70:	ldrb	w9, [sp, #24]
  74:	ldr	x8, [sp, #16]
  78:	and	w10, w10, #0xfffffffc
  7c:	bfxil	w10, w9, #0, #1
  80:	and	w11, w9, #0xfffffffd
  84:	orr	w12, w10, #0x2
  88:	strb	w12, [sp, #8]
  8c:	strb	w11, [sp, #24]
  90:	tbnz	w9, #0, ec <_ZN4llvm15BitstreamCursor7advanceEj+0xec>
  94:	lsl	w9, w9, #1
  98:	and	w11, w9, #0x2
  9c:	orr	w10, w10, w11
  a0:	str	w8, [sp]
  a4:	strb	w10, [sp, #8]
  a8:	tbnz	w9, #1, 3a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3a0>
  ac:	cmp	w8, #0x2
  b0:	b.eq	164 <_ZN4llvm15BitstreamCursor7advanceEj+0x164>  // b.none
  b4:	cmp	w8, #0x1
  b8:	b.eq	110 <_ZN4llvm15BitstreamCursor7advanceEj+0x110>  // b.none
  bc:	cbnz	w8, 1a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x1a0>
  c0:	tbnz	w20, #0, 350 <_ZN4llvm15BitstreamCursor7advanceEj+0x350>
  c4:	ldr	w8, [x21, #72]
  c8:	cbz	w8, 244 <_ZN4llvm15BitstreamCursor7advanceEj+0x244>
  cc:	ldr	w9, [x21, #32]
  d0:	subs	w9, w9, #0x20
  d4:	b.cc	250 <_ZN4llvm15BitstreamCursor7advanceEj+0x250>  // b.lo, b.ul, b.last
  d8:	ldr	x10, [x21, #24]
  dc:	lsr	x9, x10, x9
  e0:	str	x9, [x21, #24]
  e4:	mov	w9, #0x20                  	// #32
  e8:	b	254 <_ZN4llvm15BitstreamCursor7advanceEj+0x254>
  ec:	ldrb	w9, [x19, #8]
  f0:	ands	x8, x8, #0xfffffffffffffffe
  f4:	strb	w10, [sp, #8]
  f8:	str	xzr, [sp]
  fc:	orr	w9, w9, #0x3
 100:	strb	w9, [x19, #8]
 104:	b.eq	3a8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3a8>  // b.none
 108:	str	x8, [x19]
 10c:	b	210 <_ZN4llvm15BitstreamCursor7advanceEj+0x210>
 110:	add	x8, sp, #0x10
 114:	mov	w1, #0x8                   	// #8
 118:	mov	x0, x21
 11c:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 120:	ldrb	w11, [sp, #24]
 124:	ubfiz	w10, w11, #1, #1
 128:	and	w8, w11, #0xfffffffd
 12c:	orr	w9, w10, w8
 130:	strb	w9, [sp, #24]
 134:	tbnz	w11, #0, 1ac <_ZN4llvm15BitstreamCursor7advanceEj+0x1ac>
 138:	cbnz	w10, 3c8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3c8>
 13c:	ldr	w8, [sp, #16]
 140:	ldrb	w10, [x19, #8]
 144:	mov	w11, #0x2                   	// #2
 148:	bfi	x11, x8, #32, #32
 14c:	and	w8, w10, #0xfc
 150:	orr	w8, w8, #0x2
 154:	strb	w8, [x19, #8]
 158:	str	x11, [x19]
 15c:	mov	w8, w9
 160:	b	1d0 <_ZN4llvm15BitstreamCursor7advanceEj+0x1d0>
 164:	tbnz	w20, #1, 1f4 <_ZN4llvm15BitstreamCursor7advanceEj+0x1f4>
 168:	add	x8, sp, #0x10
 16c:	mov	x0, x21
 170:	bl	1a08 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
 174:	ldr	x9, [sp, #16]
 178:	tst	x9, #0xfffffffffffffffe
 17c:	and	x8, x9, #0xfffffffffffffffe
 180:	cset	w9, ne  // ne = any
 184:	orr	x9, x8, x9
 188:	str	x9, [sp, #16]
 18c:	cbz	x8, 238 <_ZN4llvm15BitstreamCursor7advanceEj+0x238>
 190:	ldrb	w9, [x19, #8]
 194:	str	x8, [x19]
 198:	orr	w8, w9, #0x3
 19c:	b	20c <_ZN4llvm15BitstreamCursor7advanceEj+0x20c>
 1a0:	mov	w9, #0x3                   	// #3
 1a4:	bfi	x9, x8, #32, #32
 1a8:	b	1fc <_ZN4llvm15BitstreamCursor7advanceEj+0x1fc>
 1ac:	ldrb	w9, [x19, #8]
 1b0:	ldr	x10, [sp, #16]
 1b4:	strb	w8, [sp, #24]
 1b8:	str	xzr, [sp, #16]
 1bc:	orr	w11, w9, #0x3
 1c0:	ands	x9, x10, #0xfffffffffffffffe
 1c4:	strb	w11, [x19, #8]
 1c8:	b.eq	3a8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3a8>  // b.none
 1cc:	str	x9, [x19]
 1d0:	tbnz	w8, #1, 3c8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3c8>
 1d4:	tbz	w8, #0, 210 <_ZN4llvm15BitstreamCursor7advanceEj+0x210>
 1d8:	ldr	x0, [sp, #16]
 1dc:	cbz	x0, 1ec <_ZN4llvm15BitstreamCursor7advanceEj+0x1ec>
 1e0:	ldr	x8, [x0]
 1e4:	ldr	x8, [x8, #8]
 1e8:	blr	x8
 1ec:	str	xzr, [sp, #16]
 1f0:	b	210 <_ZN4llvm15BitstreamCursor7advanceEj+0x210>
 1f4:	mov	x9, #0x3                   	// #3
 1f8:	movk	x9, #0x2, lsl #32
 1fc:	ldrb	w8, [x19, #8]
 200:	str	x9, [x19]
 204:	and	w8, w8, #0xfc
 208:	orr	w8, w8, #0x2
 20c:	strb	w8, [x19, #8]
 210:	mov	w23, #0x1                   	// #1
 214:	ldrb	w8, [sp, #8]
 218:	tbnz	w8, #1, 3a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3a0>
 21c:	tbz	w8, #0, 40 <_ZN4llvm15BitstreamCursor7advanceEj+0x40>
 220:	ldr	x0, [sp]
 224:	cbz	x0, 3c <_ZN4llvm15BitstreamCursor7advanceEj+0x3c>
 228:	ldr	x8, [x0]
 22c:	ldr	x8, [x8, #8]
 230:	blr	x8
 234:	b	3c <_ZN4llvm15BitstreamCursor7advanceEj+0x3c>
 238:	cbnz	x9, 3d0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3d0>
 23c:	mov	w23, #0x2                   	// #2
 240:	b	214 <_ZN4llvm15BitstreamCursor7advanceEj+0x214>
 244:	ldrb	w8, [x19, #8]
 248:	str	xzr, [x19]
 24c:	b	204 <_ZN4llvm15BitstreamCursor7advanceEj+0x204>
 250:	mov	w9, wzr
 254:	ldr	x10, [x21, #64]
 258:	str	w9, [x21, #32]
 25c:	ldp	x23, x26, [x21, #40]
 260:	add	x8, x10, x8, lsl #5
 264:	ldur	w9, [x8, #-32]
 268:	cmp	x26, x23
 26c:	str	w9, [x21, #36]
 270:	ldur	q0, [x8, #-24]
 274:	stur	q0, [x21, #40]
 278:	ldur	x9, [x8, #-8]
 27c:	str	x9, [x21, #56]
 280:	stp	xzr, xzr, [x8, #-24]
 284:	stur	xzr, [x8, #-8]
 288:	b.eq	33c <_ZN4llvm15BitstreamCursor7advanceEj+0x33c>  // b.none
 28c:	mov	x27, x23
 290:	b	2a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x2a0>
 294:	add	x27, x27, #0x10
 298:	cmp	x27, x26
 29c:	b.eq	33c <_ZN4llvm15BitstreamCursor7advanceEj+0x33c>  // b.none
 2a0:	ldr	x24, [x27, #8]
 2a4:	cbz	x24, 294 <_ZN4llvm15BitstreamCursor7advanceEj+0x294>
 2a8:	add	x8, x24, #0x8
 2ac:	cbz	x25, 2cc <_ZN4llvm15BitstreamCursor7advanceEj+0x2cc>
 2b0:	ldaxr	w9, [x8]
 2b4:	sub	w10, w9, #0x1
 2b8:	stlxr	w11, w10, [x8]
 2bc:	cbnz	w11, 2b0 <_ZN4llvm15BitstreamCursor7advanceEj+0x2b0>
 2c0:	cmp	w9, #0x1
 2c4:	b.ne	294 <_ZN4llvm15BitstreamCursor7advanceEj+0x294>  // b.any
 2c8:	b	2e0 <_ZN4llvm15BitstreamCursor7advanceEj+0x2e0>
 2cc:	ldr	w9, [x8]
 2d0:	sub	w10, w9, #0x1
 2d4:	str	w10, [x8]
 2d8:	cmp	w9, #0x1
 2dc:	b.ne	294 <_ZN4llvm15BitstreamCursor7advanceEj+0x294>  // b.any
 2e0:	mov	x28, x24
 2e4:	ldr	x8, [x28], #12
 2e8:	mov	x0, x24
 2ec:	ldr	x8, [x8, #16]
 2f0:	blr	x8
 2f4:	cbz	x25, 314 <_ZN4llvm15BitstreamCursor7advanceEj+0x314>
 2f8:	ldaxr	w8, [x28]
 2fc:	sub	w9, w8, #0x1
 300:	stlxr	w10, w9, [x28]
 304:	cbnz	w10, 2f8 <_ZN4llvm15BitstreamCursor7advanceEj+0x2f8>
 308:	cmp	w8, #0x1
 30c:	b.ne	294 <_ZN4llvm15BitstreamCursor7advanceEj+0x294>  // b.any
 310:	b	328 <_ZN4llvm15BitstreamCursor7advanceEj+0x328>
 314:	ldr	w8, [x28]
 318:	sub	w9, w8, #0x1
 31c:	str	w9, [x28]
 320:	cmp	w8, #0x1
 324:	b.ne	294 <_ZN4llvm15BitstreamCursor7advanceEj+0x294>  // b.any
 328:	ldr	x8, [x24]
 32c:	mov	x0, x24
 330:	ldr	x8, [x8, #24]
 334:	blr	x8
 338:	b	294 <_ZN4llvm15BitstreamCursor7advanceEj+0x294>
 33c:	cbz	x23, 348 <_ZN4llvm15BitstreamCursor7advanceEj+0x348>
 340:	mov	x0, x23
 344:	bl	0 <_ZdlPv>
 348:	mov	x0, x22
 34c:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 350:	ldrb	w8, [x19, #8]
 354:	mov	w23, #0x1                   	// #1
 358:	str	x23, [x19]
 35c:	and	w8, w8, #0xfc
 360:	orr	w8, w8, #0x2
 364:	strb	w8, [x19, #8]
 368:	b	214 <_ZN4llvm15BitstreamCursor7advanceEj+0x214>
 36c:	ldrb	w8, [x19, #8]
 370:	str	xzr, [x19]
 374:	and	w8, w8, #0xfc
 378:	orr	w8, w8, #0x2
 37c:	strb	w8, [x19, #8]
 380:	ldp	x20, x19, [sp, #112]
 384:	ldp	x22, x21, [sp, #96]
 388:	ldp	x24, x23, [sp, #80]
 38c:	ldp	x26, x25, [sp, #64]
 390:	ldp	x28, x27, [sp, #48]
 394:	ldp	x29, x30, [sp, #32]
 398:	add	sp, sp, #0x80
 39c:	ret
 3a0:	mov	x0, sp
 3a4:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3a8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3ac:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3b0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3b4:	add	x0, x0, #0x0
 3b8:	add	x1, x1, #0x0
 3bc:	add	x3, x3, #0x0
 3c0:	mov	w2, #0x1ce                 	// #462
 3c4:	bl	0 <__assert_fail>
 3c8:	add	x0, sp, #0x10
 3cc:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3d0:	add	x0, sp, #0x10
 3d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm15BitstreamCursor9SkipBlockEv:

0000000000000000 <_ZN4llvm15BitstreamCursor9SkipBlockEv>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #128]
   8:	str	x23, [sp, #144]
   c:	stp	x22, x21, [sp, #160]
  10:	stp	x20, x19, [sp, #176]
  14:	add	x29, sp, #0x80
  18:	mov	x19, x8
  1c:	add	x8, sp, #0x30
  20:	mov	w1, #0x4                   	// #4
  24:	mov	x20, x0
  28:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  2c:	ldrb	w10, [sp, #56]
  30:	ubfiz	w9, w10, #1, #1
  34:	and	w8, w10, #0xfffffffd
  38:	orr	w11, w9, w8
  3c:	strb	w11, [sp, #56]
  40:	tbnz	w10, #0, 68 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x68>
  44:	cbnz	w9, 294 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x294>
  48:	ldr	w8, [x20, #32]
  4c:	subs	w8, w8, #0x20
  50:	b.cc	80 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x80>  // b.lo, b.ul, b.last
  54:	ldr	x9, [x20, #24]
  58:	lsr	x8, x9, x8
  5c:	str	x8, [x20, #24]
  60:	mov	w8, #0x20                  	// #32
  64:	b	84 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x84>
  68:	ldr	x9, [sp, #48]
  6c:	strb	w8, [sp, #56]
  70:	str	xzr, [sp, #48]
  74:	orr	x8, x9, #0x1
  78:	str	x8, [x19]
  7c:	b	15c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x15c>
  80:	mov	w8, wzr
  84:	str	w8, [x20, #32]
  88:	add	x8, sp, #0x30
  8c:	mov	w1, #0x20                  	// #32
  90:	mov	x0, x20
  94:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  98:	ldrb	w9, [sp, #56]
  9c:	mov	w8, #0x2                   	// #2
  a0:	bfxil	w8, w9, #0, #1
  a4:	and	w10, w9, #0xfffffffd
  a8:	strb	w8, [sp, #8]
  ac:	strb	w10, [sp, #56]
  b0:	tbnz	w9, #0, c4 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0xc4>
  b4:	ldr	x8, [sp, #48]
  b8:	str	w8, [sp]
  bc:	mov	w8, #0x2                   	// #2
  c0:	b	d0 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0xd0>
  c4:	ldr	x9, [sp, #48]
  c8:	str	xzr, [sp, #48]
  cc:	str	x9, [sp]
  d0:	and	w9, w8, #0x1
  d4:	mov	w10, w9
  d8:	bfi	w10, w8, #1, #1
  dc:	strb	w10, [sp, #8]
  e0:	tbnz	w8, #0, 124 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x124>
  e4:	ubfiz	w8, w8, #1, #1
  e8:	cbnz	w8, 28c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x28c>
  ec:	ldr	w8, [sp]
  f0:	ldr	w9, [x20, #32]
  f4:	ldp	x10, x11, [x20, #8]
  f8:	cbnz	w9, 174 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x174>
  fc:	cmp	x10, x11
 100:	b.hi	174 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x174>  // b.pmore
 104:	bl	0 <_ZNSt3_V216generic_categoryEv>
 108:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 10c:	mov	x1, x0
 110:	add	x2, x2, #0x0
 114:	mov	w0, #0x54                  	// #84
 118:	mov	x8, x19
 11c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 120:	b	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
 124:	ldr	x8, [sp]
 128:	strb	w9, [sp, #8]
 12c:	str	xzr, [sp]
 130:	orr	x8, x8, #0x1
 134:	str	x8, [x19]
 138:	ldrb	w8, [sp, #8]
 13c:	tbnz	w8, #1, 28c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x28c>
 140:	tbz	w8, #0, 15c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x15c>
 144:	ldr	x0, [sp]
 148:	cbz	x0, 158 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x158>
 14c:	ldr	x8, [x0]
 150:	ldr	x8, [x8, #8]
 154:	blr	x8
 158:	str	xzr, [sp]
 15c:	ldp	x20, x19, [sp, #176]
 160:	ldp	x22, x21, [sp, #160]
 164:	ldr	x23, [sp, #144]
 168:	ldp	x29, x30, [sp, #128]
 16c:	add	sp, sp, #0xc0
 170:	ret
 174:	lsl	x11, x11, #3
 178:	sub	x23, x11, x9
 17c:	add	x21, x23, x8, lsl #5
 180:	cmp	x10, x21, lsr #3
 184:	b.cs	250 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x250>  // b.hs, b.nlast
 188:	bl	0 <_ZNSt3_V216generic_categoryEv>
 18c:	sturb	wzr, [x29, #-16]
 190:	stp	xzr, xzr, [sp, #64]
 194:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 198:	ldr	x10, [x10]
 19c:	mov	w9, #0x1                   	// #1
 1a0:	str	w9, [sp, #80]
 1a4:	sub	x8, x29, #0x20
 1a8:	add	x10, x10, #0x10
 1ac:	stp	x10, xzr, [sp, #48]
 1b0:	adrp	x10, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 1b4:	ldr	x10, [x10]
 1b8:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 1bc:	mov	x20, x0
 1c0:	add	x9, x9, #0x0
 1c4:	str	x8, [sp, #88]
 1c8:	add	x22, x8, #0x10
 1cc:	add	x8, x10, #0x10
 1d0:	add	x0, sp, #0x30
 1d4:	add	x1, sp, #0x10
 1d8:	stp	x22, xzr, [x29, #-32]
 1dc:	stp	x8, x9, [sp, #16]
 1e0:	stp	x23, x21, [sp, #32]
 1e4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1e8:	ldr	x8, [sp, #72]
 1ec:	ldr	x9, [sp, #56]
 1f0:	cmp	x8, x9
 1f4:	b.eq	200 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x200>  // b.none
 1f8:	add	x0, sp, #0x30
 1fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 200:	ldr	x23, [sp, #88]
 204:	mov	w0, #0x40                  	// #64
 208:	bl	0 <_Znwm>
 20c:	mov	w8, #0x104                 	// #260
 210:	add	x1, sp, #0x10
 214:	mov	w2, #0x54                  	// #84
 218:	mov	x3, x20
 21c:	mov	x21, x0
 220:	strh	w8, [sp, #32]
 224:	stp	x23, xzr, [sp, #16]
 228:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 22c:	orr	x8, x21, #0x1
 230:	add	x0, sp, #0x30
 234:	str	x8, [x19]
 238:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 23c:	ldur	x0, [x29, #-32]
 240:	cmp	x0, x22
 244:	b.eq	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>  // b.none
 248:	bl	0 <_ZdlPv>
 24c:	b	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
 250:	mov	x8, x19
 254:	mov	x0, x20
 258:	mov	x1, x21
 25c:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 260:	ldr	x9, [x19]
 264:	tst	x9, #0xfffffffffffffffe
 268:	and	x8, x9, #0xfffffffffffffffe
 26c:	cset	w9, ne  // ne = any
 270:	orr	x9, x8, x9
 274:	str	x9, [x19]
 278:	cbnz	x8, 280 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x280>
 27c:	cbnz	x9, 29c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x29c>
 280:	cbnz	x8, 138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
 284:	mov	w8, #0x1                   	// #1
 288:	b	134 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x134>
 28c:	mov	x0, sp
 290:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 294:	add	x0, sp, #0x30
 298:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 29c:	mov	x0, x19
 2a0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x0, #8]
  18:	sub	x8, x8, #0x1
  1c:	cmp	x8, x9
  20:	b.hi	12c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x12c>  // b.pmore
  24:	ldr	x9, [x0]
  28:	str	w8, [x0, #8]
  2c:	and	x8, x8, #0xffffffff
  30:	add	x21, x9, x8, lsl #5
  34:	ldr	x19, [x21, #8]!
  38:	ldr	x22, [x21, #8]
  3c:	cmp	x19, x22
  40:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xfc>  // b.none
  44:	adrp	x23, 0 <__pthread_key_create>
  48:	ldr	x23, [x23]
  4c:	b	5c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x5c>
  50:	add	x19, x19, #0x10
  54:	cmp	x19, x22
  58:	b.eq	f8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xf8>  // b.none
  5c:	ldr	x20, [x19, #8]
  60:	cbz	x20, 50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>
  64:	add	x8, x20, #0x8
  68:	cbz	x23, 88 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x88>
  6c:	ldaxr	w9, [x8]
  70:	sub	w10, w9, #0x1
  74:	stlxr	w11, w10, [x8]
  78:	cbnz	w11, 6c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x6c>
  7c:	cmp	w9, #0x1
  80:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  84:	b	9c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x9c>
  88:	ldr	w9, [x8]
  8c:	sub	w10, w9, #0x1
  90:	str	w10, [x8]
  94:	cmp	w9, #0x1
  98:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  9c:	mov	x24, x20
  a0:	ldr	x8, [x24], #12
  a4:	mov	x0, x20
  a8:	ldr	x8, [x8, #16]
  ac:	blr	x8
  b0:	cbz	x23, d0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xd0>
  b4:	ldaxr	w8, [x24]
  b8:	sub	w9, w8, #0x1
  bc:	stlxr	w10, w9, [x24]
  c0:	cbnz	w10, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xb4>
  c4:	cmp	w8, #0x1
  c8:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  cc:	b	e4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xe4>
  d0:	ldr	w8, [x24]
  d4:	sub	w9, w8, #0x1
  d8:	str	w9, [x24]
  dc:	cmp	w8, #0x1
  e0:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  e4:	ldr	x8, [x20]
  e8:	mov	x0, x20
  ec:	ldr	x8, [x8, #24]
  f0:	blr	x8
  f4:	b	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>
  f8:	ldr	x19, [x21]
  fc:	cbz	x19, 118 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x118>
 100:	mov	x0, x19
 104:	ldp	x20, x19, [sp, #48]
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x24, x23, [sp, #16]
 110:	ldp	x29, x30, [sp], #64
 114:	b	0 <_ZdlPv>
 118:	ldp	x20, x19, [sp, #48]
 11c:	ldp	x22, x21, [sp, #32]
 120:	ldp	x24, x23, [sp, #16]
 124:	ldp	x29, x30, [sp], #64
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
 130:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
 134:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x43                  	// #67
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x23, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x23, x20
  28:	cmp	x8, x9
  2c:	b.eq	26c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x26c>  // b.none
  30:	mov	x10, #0x8ba3                	// #35747
  34:	movk	x10, #0xba2e, lsl #16
  38:	movk	x10, #0xa2e8, lsl #32
  3c:	asr	x9, x8, #3
  40:	movk	x10, #0x2e8b, lsl #48
  44:	cmp	x8, #0x0
  48:	mov	x8, #0x745d                	// #29789
  4c:	movk	x8, #0x45d1, lsl #16
  50:	mul	x9, x9, x10
  54:	movk	x8, #0x5d17, lsl #32
  58:	csinc	x11, x9, xzr, ne  // ne = any
  5c:	movk	x8, #0x174, lsl #48
  60:	adds	x9, x11, x9
  64:	cset	w11, cs  // cs = hs, nlast
  68:	cmp	x9, x8
  6c:	cset	w12, hi  // hi = pmore
  70:	orr	w11, w11, w12
  74:	sub	x12, x1, x20
  78:	cmp	w11, #0x0
  7c:	csel	x24, x8, x9, ne  // ne = any
  80:	asr	x8, x12, #3
  84:	mov	x19, x0
  88:	mov	x22, x1
  8c:	mul	x25, x8, x10
  90:	cbz	x24, a8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa8>
  94:	mov	w8, #0x58                  	// #88
  98:	mul	x0, x24, x8
  9c:	bl	0 <_Znwm>
  a0:	mov	x21, x0
  a4:	b	ac <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xac>
  a8:	mov	x21, xzr
  ac:	mov	w8, #0x58                  	// #88
  b0:	madd	x8, x25, x8, x21
  b4:	movi	v0.2d, #0x0
  b8:	mov	x9, x8
  bc:	stp	q0, q0, [x8, #16]
  c0:	str	q0, [x9, #48]!
  c4:	cmp	x20, x22
  c8:	str	q0, [x8]
  cc:	stp	x9, xzr, [x8, #32]
  d0:	strb	wzr, [x9]
  d4:	stp	xzr, xzr, [x8, #72]
  d8:	str	xzr, [x8, #64]
  dc:	mov	x8, x21
  e0:	b.eq	188 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x188>  // b.none
  e4:	mov	x9, x21
  e8:	mov	x8, x20
  ec:	b	13c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13c>
  f0:	str	x9, [x25, #32]
  f4:	ldr	x8, [x8, #48]
  f8:	str	x8, [x25, #48]
  fc:	ldur	x8, [x27, #-8]
 100:	sub	x0, x27, #0x30
 104:	str	x8, [x25, #40]
 108:	ldr	q0, [x27, #16]
 10c:	stp	x27, xzr, [x27, #-16]
 110:	strb	wzr, [x27]
 114:	str	q0, [x25, #64]
 118:	ldr	x8, [x27, #32]
 11c:	str	x8, [x25, #80]
 120:	stp	xzr, xzr, [x27, #16]
 124:	str	xzr, [x27, #32]
 128:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 12c:	add	x8, x27, #0x28
 130:	cmp	x8, x22
 134:	add	x9, x26, #0x28
 138:	b.eq	184 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x184>  // b.none
 13c:	ldr	w10, [x8]
 140:	mov	x25, x9
 144:	add	x26, x25, #0x30
 148:	add	x27, x8, #0x30
 14c:	str	w10, [x9]
 150:	ldur	q0, [x8, #8]
 154:	stur	q0, [x9, #8]
 158:	ldr	x9, [x8, #24]
 15c:	str	x9, [x25, #24]
 160:	stp	xzr, xzr, [x8, #8]
 164:	str	xzr, [x8, #24]
 168:	str	x26, [x25, #32]
 16c:	ldr	x9, [x8, #32]
 170:	cmp	x9, x27
 174:	b.ne	f0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.any
 178:	ldr	q0, [x9]
 17c:	str	q0, [x25, #48]
 180:	b	fc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xfc>
 184:	add	x8, x25, #0x58
 188:	cmp	x23, x22
 18c:	add	x26, x8, #0x58
 190:	b.ne	218 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x218>  // b.any
 194:	cbz	x20, 1a0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a0>
 198:	mov	x0, x20
 19c:	bl	0 <_ZdlPv>
 1a0:	mov	w8, #0x58                  	// #88
 1a4:	madd	x8, x24, x8, x21
 1a8:	stp	x21, x26, [x19]
 1ac:	str	x8, [x19, #16]
 1b0:	ldp	x20, x19, [sp, #80]
 1b4:	ldp	x22, x21, [sp, #64]
 1b8:	ldp	x24, x23, [sp, #48]
 1bc:	ldp	x26, x25, [sp, #32]
 1c0:	ldr	x27, [sp, #16]
 1c4:	ldp	x29, x30, [sp], #96
 1c8:	ret
 1cc:	str	x8, [x25, #32]
 1d0:	ldr	x8, [x22, #48]
 1d4:	str	x8, [x25, #48]
 1d8:	ldur	x8, [x27, #-8]
 1dc:	sub	x0, x27, #0x30
 1e0:	str	x8, [x25, #40]
 1e4:	ldr	q0, [x27, #16]
 1e8:	stp	x27, xzr, [x27, #-16]
 1ec:	strb	wzr, [x27]
 1f0:	str	q0, [x25, #64]
 1f4:	ldr	x8, [x27, #32]
 1f8:	str	x8, [x25, #80]
 1fc:	stp	xzr, xzr, [x27, #16]
 200:	str	xzr, [x27, #32]
 204:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 208:	add	x22, x27, #0x28
 20c:	cmp	x22, x23
 210:	add	x26, x26, #0x28
 214:	b.eq	260 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x260>  // b.none
 218:	ldr	w8, [x22]
 21c:	mov	x25, x26
 220:	add	x27, x22, #0x30
 224:	str	w8, [x26]
 228:	ldur	q0, [x22, #8]
 22c:	stur	q0, [x26, #8]
 230:	ldr	x8, [x22, #24]
 234:	add	x26, x26, #0x30
 238:	str	x8, [x25, #24]
 23c:	stp	xzr, xzr, [x22, #8]
 240:	str	xzr, [x22, #24]
 244:	str	x26, [x25, #32]
 248:	ldr	x8, [x22, #32]
 24c:	cmp	x8, x27
 250:	b.ne	1cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1cc>  // b.any
 254:	ldr	q0, [x8]
 258:	str	q0, [x25, #48]
 25c:	b	1d8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1d8>
 260:	add	x26, x25, #0x58
 264:	cbnz	x20, 198 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x198>
 268:	b	1a0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a0>
 26c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 270:	add	x0, x0, #0x0
 274:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev:

0000000000000000 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x20, x21, [x0, #64]
  18:	mov	x19, x0
  1c:	cmp	x20, x21
  20:	b.ne	68 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x68>  // b.any
  24:	cbz	x20, 30 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x30>
  28:	mov	x0, x20
  2c:	bl	0 <_ZdlPv>
  30:	ldr	x0, [x19, #32]
  34:	add	x8, x19, #0x30
  38:	cmp	x0, x8
  3c:	b.eq	44 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x44>  // b.none
  40:	bl	0 <_ZdlPv>
  44:	ldp	x20, x22, [x19, #8]
  48:	cmp	x20, x22
  4c:	b.eq	138 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x138>  // b.none
  50:	adrp	x23, 0 <__pthread_key_create>
  54:	ldr	x23, [x23]
  58:	b	8c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x8c>
  5c:	add	x20, x20, #0x28
  60:	cmp	x21, x20
  64:	b.eq	128 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x128>  // b.none
  68:	ldr	x0, [x20, #8]
  6c:	add	x8, x20, #0x18
  70:	cmp	x8, x0
  74:	b.eq	5c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x5c>  // b.none
  78:	bl	0 <_ZdlPv>
  7c:	b	5c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x5c>
  80:	add	x20, x20, #0x10
  84:	cmp	x20, x22
  88:	b.eq	134 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x134>  // b.none
  8c:	ldr	x21, [x20, #8]
  90:	cbz	x21, 80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>
  94:	add	x8, x21, #0x8
  98:	cbz	x23, b8 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0xb8>
  9c:	ldaxr	w9, [x8]
  a0:	sub	w10, w9, #0x1
  a4:	stlxr	w11, w10, [x8]
  a8:	cbnz	w11, 9c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x9c>
  ac:	cmp	w9, #0x1
  b0:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
  b4:	b	cc <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0xcc>
  b8:	ldr	w9, [x8]
  bc:	sub	w10, w9, #0x1
  c0:	str	w10, [x8]
  c4:	cmp	w9, #0x1
  c8:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
  cc:	mov	x24, x21
  d0:	ldr	x8, [x24], #12
  d4:	mov	x0, x21
  d8:	ldr	x8, [x8, #16]
  dc:	blr	x8
  e0:	cbz	x23, 100 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x100>
  e4:	ldaxr	w8, [x24]
  e8:	sub	w9, w8, #0x1
  ec:	stlxr	w10, w9, [x24]
  f0:	cbnz	w10, e4 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0xe4>
  f4:	cmp	w8, #0x1
  f8:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
  fc:	b	114 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x114>
 100:	ldr	w8, [x24]
 104:	sub	w9, w8, #0x1
 108:	str	w9, [x24]
 10c:	cmp	w8, #0x1
 110:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
 114:	ldr	x8, [x21]
 118:	mov	x0, x21
 11c:	ldr	x8, [x8, #24]
 120:	blr	x8
 124:	b	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>
 128:	ldr	x20, [x19, #64]
 12c:	cbnz	x20, 28 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x28>
 130:	b	30 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x30>
 134:	ldr	x20, [x19, #8]
 138:	cbz	x20, 154 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x154>
 13c:	mov	x0, x20
 140:	ldp	x20, x19, [sp, #48]
 144:	ldp	x22, x21, [sp, #32]
 148:	ldp	x24, x23, [sp, #16]
 14c:	ldp	x29, x30, [sp], #64
 150:	b	0 <_ZdlPv>
 154:	ldp	x20, x19, [sp, #48]
 158:	ldp	x22, x21, [sp, #32]
 15c:	ldp	x24, x23, [sp, #16]
 160:	ldp	x29, x30, [sp], #64
 164:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x24, x8, x9, cc  // cc = lo, ul, last
  74:	lsl	x0, x24, #5
  78:	bl	0 <malloc>
  7c:	mov	x20, x0
  80:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xc0>
  84:	cbz	x24, a0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xa0>
  88:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  8c:	add	x0, x0, #0x0
  90:	mov	w1, #0x1                   	// #1
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	mov	x20, xzr
  9c:	b	c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xc0>
  a0:	mov	w0, #0x1                   	// #1
  a4:	bl	0 <malloc>
  a8:	mov	x20, x0
  ac:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xc0>
  b0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  b4:	add	x0, x0, #0x0
  b8:	mov	w1, #0x1                   	// #1
  bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c0:	ldr	w8, [x19, #8]
  c4:	ldr	x21, [x19]
  c8:	cbz	w8, 204 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x204>
  cc:	add	x8, x21, x8, lsl #5
  d0:	mov	x9, x20
  d4:	ldr	w10, [x21]
  d8:	str	w10, [x9]
  dc:	ldur	q0, [x21, #8]
  e0:	stur	q0, [x9, #8]
  e4:	ldr	x10, [x21, #24]
  e8:	str	x10, [x9, #24]
  ec:	stp	xzr, xzr, [x21, #8]
  f0:	str	xzr, [x21, #24]
  f4:	add	x21, x21, #0x20
  f8:	cmp	x21, x8
  fc:	add	x9, x9, #0x20
 100:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xd4>  // b.any
 104:	ldr	w8, [x19, #8]
 108:	ldr	x21, [x19]
 10c:	cbz	w8, 204 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x204>
 110:	adrp	x26, 0 <__pthread_key_create>
 114:	ldr	x26, [x26]
 118:	add	x25, x21, x8, lsl #5
 11c:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x128>
 120:	cmp	x25, x21
 124:	b.eq	200 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x200>  // b.none
 128:	ldp	x22, x27, [x25, #-24]
 12c:	cmp	x22, x27
 130:	b.ne	14c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x14c>  // b.any
 134:	sub	x25, x25, #0x20
 138:	cbnz	x22, 1f4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1f4>
 13c:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x120>
 140:	add	x22, x22, #0x10
 144:	cmp	x22, x27
 148:	b.eq	1e8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1e8>  // b.none
 14c:	ldr	x23, [x22, #8]
 150:	cbz	x23, 140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>
 154:	add	x8, x23, #0x8
 158:	cbz	x26, 178 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x178>
 15c:	ldaxr	w9, [x8]
 160:	sub	w10, w9, #0x1
 164:	stlxr	w11, w10, [x8]
 168:	cbnz	w11, 15c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x15c>
 16c:	cmp	w9, #0x1
 170:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 174:	b	18c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x18c>
 178:	ldr	w9, [x8]
 17c:	sub	w10, w9, #0x1
 180:	str	w10, [x8]
 184:	cmp	w9, #0x1
 188:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 18c:	mov	x28, x23
 190:	ldr	x8, [x28], #12
 194:	mov	x0, x23
 198:	ldr	x8, [x8, #16]
 19c:	blr	x8
 1a0:	cbz	x26, 1c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1c0>
 1a4:	ldaxr	w8, [x28]
 1a8:	sub	w9, w8, #0x1
 1ac:	stlxr	w10, w9, [x28]
 1b0:	cbnz	w10, 1a4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1a4>
 1b4:	cmp	w8, #0x1
 1b8:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 1bc:	b	1d4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1d4>
 1c0:	ldr	w8, [x28]
 1c4:	sub	w9, w8, #0x1
 1c8:	str	w9, [x28]
 1cc:	cmp	w8, #0x1
 1d0:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 1d4:	ldr	x8, [x23]
 1d8:	mov	x0, x23
 1dc:	ldr	x8, [x8, #24]
 1e0:	blr	x8
 1e4:	b	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>
 1e8:	ldur	x22, [x25, #-24]
 1ec:	sub	x25, x25, #0x20
 1f0:	cbz	x22, 120 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x120>
 1f4:	mov	x0, x22
 1f8:	bl	0 <_ZdlPv>
 1fc:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x120>
 200:	ldr	x21, [x19]
 204:	add	x8, x19, #0x10
 208:	cmp	x21, x8
 20c:	b.eq	218 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x218>  // b.none
 210:	mov	x0, x21
 214:	bl	0 <free>
 218:	str	x20, [x19]
 21c:	str	w24, [x19, #12]
 220:	ldp	x20, x19, [sp, #80]
 224:	ldp	x22, x21, [sp, #64]
 228:	ldp	x24, x23, [sp, #48]
 22c:	ldp	x26, x25, [sp, #32]
 230:	ldp	x28, x27, [sp, #16]
 234:	ldp	x29, x30, [sp], #96
 238:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>  // b.none
  24:	ldp	x22, x9, [x0, #8]
  28:	sub	x24, x3, x2
  2c:	asr	x8, x24, #4
  30:	mov	x23, x3
  34:	sub	x9, x9, x22
  38:	mov	x20, x2
  3c:	mov	x19, x1
  40:	mov	x21, x0
  44:	cmp	x8, x9, asr #4
  48:	b.ls	b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xb4>  // b.plast
  4c:	ldr	x9, [x21]
  50:	sub	x10, x22, x9
  54:	asr	x11, x10, #4
  58:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  5c:	sub	x12, x10, x11
  60:	cmp	x12, x8
  64:	b.cc	79c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x79c>  // b.lo, b.ul, b.last
  68:	cmp	x11, x8
  6c:	csel	x8, x8, x11, cc  // cc = lo, ul, last
  70:	adds	x8, x8, x11
  74:	lsr	x12, x8, #59
  78:	cset	w11, cs  // cs = hs, nlast
  7c:	cmp	x12, #0x0
  80:	cset	w12, ne  // ne = any
  84:	orr	w11, w11, w12
  88:	cmp	w11, #0x0
  8c:	csel	x24, x10, x8, ne  // ne = any
  90:	cbz	x24, 278 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x278>
  94:	lsl	x0, x24, #4
  98:	bl	0 <_Znwm>
  9c:	ldr	x9, [x21]
  a0:	mov	x22, x0
  a4:	cmp	x9, x19
  a8:	mov	x25, x22
  ac:	b.ne	288 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x288>  // b.any
  b0:	b	2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2a8>
  b4:	sub	x9, x22, x19
  b8:	asr	x9, x9, #4
  bc:	subs	x10, x8, x9
  c0:	b.cs	20c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x20c>  // b.hs, b.nlast
  c4:	sub	x23, x22, x8, lsl #4
  c8:	cbz	x24, 5b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5b0>
  cc:	sub	x10, x24, #0x10
  d0:	lsr	x9, x10, #4
  d4:	cbz	x9, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
  d8:	add	x11, x22, #0x8
  dc:	and	x10, x10, #0xfffffffffffffff0
  e0:	mvn	x11, x11
  e4:	cmp	x10, x11
  e8:	b.hi	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>  // b.pmore
  ec:	neg	x12, x8
  f0:	add	x11, x22, x12, lsl #4
  f4:	add	x11, x11, #0x8
  f8:	mvn	x11, x11
  fc:	cmp	x10, x11
 100:	mov	x11, x22
 104:	mov	x10, x23
 108:	b.hi	58c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x58c>  // b.pmore
 10c:	add	x10, x22, x9, lsl #4
 110:	sub	x11, x9, x8
 114:	add	x18, x10, #0x8
 118:	add	x10, x22, x11, lsl #4
 11c:	add	x12, x22, x12, lsl #4
 120:	add	x13, x9, #0x1
 124:	cmp	x22, x10
 128:	add	x0, x12, #0x8
 12c:	sub	x11, x13, x8
 130:	add	x1, x22, x13, lsl #4
 134:	add	x12, x10, #0x8
 138:	cset	w13, cc  // cc = lo, ul, last
 13c:	cmp	x23, x18
 140:	add	x15, x22, x11, lsl #4
 144:	cset	w11, cc  // cc = lo, ul, last
 148:	cmp	x22, x12
 14c:	and	w2, w13, w11
 150:	cset	w13, cc  // cc = lo, ul, last
 154:	cmp	x23, x12
 158:	add	x17, x22, #0x8
 15c:	cset	w12, cc  // cc = lo, ul, last
 160:	cmp	x23, x10
 164:	cset	w14, cc  // cc = lo, ul, last
 168:	cmp	x17, x15
 16c:	cset	w10, cc  // cc = lo, ul, last
 170:	cmp	x0, x18
 174:	cset	w16, cc  // cc = lo, ul, last
 178:	cmp	x17, x1
 17c:	cset	w15, cc  // cc = lo, ul, last
 180:	cmp	x17, x18
 184:	cset	w18, cc  // cc = lo, ul, last
 188:	cmp	x0, x1
 18c:	cset	w17, cc  // cc = lo, ul, last
 190:	tbnz	w2, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 194:	and	w11, w13, w11
 198:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 19c:	and	w11, w12, w14
 1a0:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 1a4:	and	w11, w10, w16
 1a8:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 1ac:	and	w11, w15, w18
 1b0:	tbnz	w11, #0, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 1b4:	and	w12, w17, w10
 1b8:	mov	x11, x22
 1bc:	mov	x10, x23
 1c0:	tbnz	w12, #0, 58c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x58c>
 1c4:	add	x9, x9, #0x1
 1c8:	and	x12, x9, #0x1ffffffffffffffe
 1cc:	lsl	x10, x12, #4
 1d0:	neg	x13, x8, lsl #4
 1d4:	add	x11, x22, x10
 1d8:	add	x10, x23, x10
 1dc:	movi	v0.2d, #0x0
 1e0:	mov	x14, x12
 1e4:	mov	x15, x22
 1e8:	add	x16, x15, x13
 1ec:	ldp	q2, q1, [x16]
 1f0:	subs	x14, x14, #0x2
 1f4:	stp	q2, q1, [x15], #32
 1f8:	stp	q0, q0, [x16]
 1fc:	b.ne	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1e8>  // b.any
 200:	cmp	x9, x12
 204:	b.ne	58c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x58c>  // b.any
 208:	b	5b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5b0>
 20c:	adrp	x24, 0 <__pthread_key_create>
 210:	ldr	x24, [x24]
 214:	add	x9, x20, x9, lsl #4
 218:	cmp	x9, x23
 21c:	mov	x11, x22
 220:	b.eq	438 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x438>  // b.none
 224:	mov	x12, x9
 228:	b	248 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x248>
 22c:	ldr	w14, [x13]
 230:	add	w14, w14, #0x1
 234:	str	w14, [x13]
 238:	add	x12, x12, #0x10
 23c:	cmp	x12, x23
 240:	add	x11, x11, #0x10
 244:	b.eq	434 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x434>  // b.none
 248:	ldr	x13, [x12]
 24c:	str	x13, [x11]
 250:	ldr	x13, [x12, #8]
 254:	str	x13, [x11, #8]
 258:	cbz	x13, 238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x238>
 25c:	add	x13, x13, #0x8
 260:	cbz	x24, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x22c>
 264:	ldaxr	w14, [x13]
 268:	add	w14, w14, #0x1
 26c:	stlxr	w15, w14, [x13]
 270:	cbnz	w15, 264 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x264>
 274:	b	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x238>
 278:	mov	x22, xzr
 27c:	cmp	x9, x19
 280:	mov	x25, x22
 284:	b.eq	2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2a8>  // b.none
 288:	mov	x25, x22
 28c:	str	xzr, [x25, #8]
 290:	ldr	q0, [x9]
 294:	str	xzr, [x9, #8]
 298:	str	q0, [x25], #16
 29c:	str	xzr, [x9], #16
 2a0:	cmp	x9, x19
 2a4:	b.ne	28c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x28c>  // b.any
 2a8:	adrp	x26, 0 <__pthread_key_create>
 2ac:	ldr	x26, [x26]
 2b0:	b	2d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2d0>
 2b4:	ldr	w9, [x8]
 2b8:	add	w9, w9, #0x1
 2bc:	str	w9, [x8]
 2c0:	add	x20, x20, #0x10
 2c4:	cmp	x20, x23
 2c8:	add	x25, x25, #0x10
 2cc:	b.eq	300 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x300>  // b.none
 2d0:	ldr	x8, [x20]
 2d4:	str	x8, [x25]
 2d8:	ldr	x8, [x20, #8]
 2dc:	str	x8, [x25, #8]
 2e0:	cbz	x8, 2c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2c0>
 2e4:	add	x8, x8, #0x8
 2e8:	cbz	x26, 2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>
 2ec:	ldaxr	w9, [x8]
 2f0:	add	w9, w9, #0x1
 2f4:	stlxr	w10, w9, [x8]
 2f8:	cbnz	w10, 2ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2ec>
 2fc:	b	2c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2c0>
 300:	ldr	x20, [x21, #8]
 304:	cmp	x20, x19
 308:	b.eq	340 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x340>  // b.none
 30c:	mov	x8, xzr
 310:	add	x9, x25, x8
 314:	add	x10, x19, x8
 318:	str	xzr, [x9, #8]
 31c:	ldr	q0, [x10]
 320:	add	x11, x10, #0x10
 324:	cmp	x11, x20
 328:	add	x8, x8, #0x10
 32c:	str	xzr, [x10, #8]
 330:	str	q0, [x9]
 334:	str	xzr, [x10]
 338:	b.ne	310 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x310>  // b.any
 33c:	add	x25, x25, x8
 340:	ldr	x23, [x21]
 344:	cmp	x23, x20
 348:	b.ne	38c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x38c>  // b.any
 34c:	cbz	x20, 358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>
 350:	mov	x0, x20
 354:	bl	0 <_ZdlPv>
 358:	add	x8, x22, x24, lsl #4
 35c:	stp	x22, x25, [x21]
 360:	str	x8, [x21, #16]
 364:	ldp	x20, x19, [sp, #80]
 368:	ldp	x22, x21, [sp, #64]
 36c:	ldp	x24, x23, [sp, #48]
 370:	ldp	x26, x25, [sp, #32]
 374:	ldr	x27, [sp, #16]
 378:	ldp	x29, x30, [sp], #96
 37c:	ret
 380:	add	x23, x23, #0x10
 384:	cmp	x23, x20
 388:	b.eq	428 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x428>  // b.none
 38c:	ldr	x19, [x23, #8]
 390:	cbz	x19, 380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>
 394:	add	x8, x19, #0x8
 398:	cbz	x26, 3b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3b8>
 39c:	ldaxr	w9, [x8]
 3a0:	sub	w10, w9, #0x1
 3a4:	stlxr	w11, w10, [x8]
 3a8:	cbnz	w11, 39c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x39c>
 3ac:	cmp	w9, #0x1
 3b0:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>  // b.any
 3b4:	b	3cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3cc>
 3b8:	ldr	w9, [x8]
 3bc:	sub	w10, w9, #0x1
 3c0:	str	w10, [x8]
 3c4:	cmp	w9, #0x1
 3c8:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>  // b.any
 3cc:	mov	x27, x19
 3d0:	ldr	x8, [x27], #12
 3d4:	mov	x0, x19
 3d8:	ldr	x8, [x8, #16]
 3dc:	blr	x8
 3e0:	cbz	x26, 400 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x400>
 3e4:	ldaxr	w8, [x27]
 3e8:	sub	w9, w8, #0x1
 3ec:	stlxr	w10, w9, [x27]
 3f0:	cbnz	w10, 3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3e4>
 3f4:	cmp	w8, #0x1
 3f8:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>  // b.any
 3fc:	b	414 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x414>
 400:	ldr	w8, [x27]
 404:	sub	w9, w8, #0x1
 408:	str	w9, [x27]
 40c:	cmp	w8, #0x1
 410:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>  // b.any
 414:	ldr	x8, [x19]
 418:	mov	x0, x19
 41c:	ldr	x8, [x8, #24]
 420:	blr	x8
 424:	b	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>
 428:	ldr	x20, [x21]
 42c:	cbnz	x20, 350 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x350>
 430:	b	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>
 434:	ldr	x11, [x21, #8]
 438:	add	x10, x11, x10, lsl #4
 43c:	cmp	x22, x19
 440:	str	x10, [x21, #8]
 444:	b.eq	470 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x470>  // b.none
 448:	add	x10, x10, #0x8
 44c:	mov	x12, x19
 450:	str	xzr, [x10]
 454:	ldr	q0, [x12]
 458:	str	xzr, [x12, #8]
 45c:	stur	q0, [x10, #-8]
 460:	str	xzr, [x12], #16
 464:	cmp	x12, x22
 468:	add	x10, x10, #0x10
 46c:	b.ne	450 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x450>  // b.any
 470:	add	x10, x11, x8, lsl #4
 474:	sub	x8, x9, x20
 478:	cmp	x8, #0x1
 47c:	str	x10, [x21, #8]
 480:	b.lt	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>  // b.tstop
 484:	lsr	x22, x8, #4
 488:	b	4a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4a0>
 48c:	str	x23, [x19, #8]
 490:	add	x20, x20, #0x10
 494:	subs	x22, x22, #0x1
 498:	add	x19, x19, #0x10
 49c:	b.le	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>
 4a0:	ldr	x8, [x20]
 4a4:	ldr	x21, [x19, #8]
 4a8:	str	x8, [x19]
 4ac:	ldr	x23, [x20, #8]
 4b0:	cmp	x23, x21
 4b4:	b.eq	490 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x490>  // b.none
 4b8:	cbz	x23, 4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4d8>
 4bc:	add	x8, x23, #0x8
 4c0:	cbz	x24, 4e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4e0>
 4c4:	ldaxr	w9, [x8]
 4c8:	add	w9, w9, #0x1
 4cc:	stlxr	w10, w9, [x8]
 4d0:	cbnz	w10, 4c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4c4>
 4d4:	ldr	x21, [x19, #8]
 4d8:	cbnz	x21, 4f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4f0>
 4dc:	b	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>
 4e0:	ldr	w9, [x8]
 4e4:	add	w9, w9, #0x1
 4e8:	str	w9, [x8]
 4ec:	cbz	x21, 48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>
 4f0:	add	x8, x21, #0x8
 4f4:	cbz	x24, 514 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x514>
 4f8:	ldaxr	w9, [x8]
 4fc:	sub	w10, w9, #0x1
 500:	stlxr	w11, w10, [x8]
 504:	cbnz	w11, 4f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4f8>
 508:	cmp	w9, #0x1
 50c:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>  // b.any
 510:	b	528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x528>
 514:	ldr	w9, [x8]
 518:	sub	w10, w9, #0x1
 51c:	str	w10, [x8]
 520:	cmp	w9, #0x1
 524:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>  // b.any
 528:	mov	x25, x21
 52c:	ldr	x8, [x25], #12
 530:	mov	x0, x21
 534:	ldr	x8, [x8, #16]
 538:	blr	x8
 53c:	cbz	x24, 55c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x55c>
 540:	ldaxr	w8, [x25]
 544:	sub	w9, w8, #0x1
 548:	stlxr	w10, w9, [x25]
 54c:	cbnz	w10, 540 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x540>
 550:	cmp	w8, #0x1
 554:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>  // b.any
 558:	b	570 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x570>
 55c:	ldr	w8, [x25]
 560:	sub	w9, w8, #0x1
 564:	str	w9, [x25]
 568:	cmp	w8, #0x1
 56c:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>  // b.any
 570:	ldr	x8, [x21]
 574:	mov	x0, x21
 578:	ldr	x8, [x8, #24]
 57c:	blr	x8
 580:	b	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x48c>
 584:	mov	x11, x22
 588:	mov	x10, x23
 58c:	add	x9, x11, #0x8
 590:	str	xzr, [x9]
 594:	ldr	q0, [x10]
 598:	str	xzr, [x10, #8]
 59c:	stur	q0, [x9, #-8]
 5a0:	str	xzr, [x10], #16
 5a4:	cmp	x10, x22
 5a8:	add	x9, x9, #0x10
 5ac:	b.ne	590 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x590>  // b.any
 5b0:	add	x9, x22, x8, lsl #4
 5b4:	sub	x8, x23, x19
 5b8:	cmp	x8, #0x1
 5bc:	str	x9, [x21, #8]
 5c0:	b.lt	68c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x68c>  // b.tstop
 5c4:	adrp	x26, 0 <__pthread_key_create>
 5c8:	ldr	x26, [x26]
 5cc:	lsr	x25, x8, #4
 5d0:	b	5dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5dc>
 5d4:	subs	x25, x25, #0x1
 5d8:	b.le	68c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x68c>
 5dc:	ldr	x8, [x23, #-16]!
 5e0:	ldr	x9, [x23, #8]
 5e4:	stp	xzr, xzr, [x23]
 5e8:	str	x8, [x22, #-16]!
 5ec:	ldr	x21, [x22, #8]
 5f0:	str	x9, [x22, #8]
 5f4:	cbz	x21, 5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>
 5f8:	add	x8, x21, #0x8
 5fc:	cbz	x26, 61c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x61c>
 600:	ldaxr	w9, [x8]
 604:	sub	w10, w9, #0x1
 608:	stlxr	w11, w10, [x8]
 60c:	cbnz	w11, 600 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x600>
 610:	cmp	w9, #0x1
 614:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>  // b.any
 618:	b	630 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x630>
 61c:	ldr	w9, [x8]
 620:	sub	w10, w9, #0x1
 624:	str	w10, [x8]
 628:	cmp	w9, #0x1
 62c:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>  // b.any
 630:	mov	x27, x21
 634:	ldr	x8, [x27], #12
 638:	mov	x0, x21
 63c:	ldr	x8, [x8, #16]
 640:	blr	x8
 644:	cbz	x26, 664 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x664>
 648:	ldaxr	w8, [x27]
 64c:	sub	w9, w8, #0x1
 650:	stlxr	w10, w9, [x27]
 654:	cbnz	w10, 648 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x648>
 658:	cmp	w8, #0x1
 65c:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>  // b.any
 660:	b	678 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x678>
 664:	ldr	w8, [x27]
 668:	sub	w9, w8, #0x1
 66c:	str	w9, [x27]
 670:	cmp	w8, #0x1
 674:	b.ne	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>  // b.any
 678:	ldr	x8, [x21]
 67c:	mov	x0, x21
 680:	ldr	x8, [x8, #24]
 684:	blr	x8
 688:	b	5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>
 68c:	cmp	x24, #0x1
 690:	b.lt	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>  // b.tstop
 694:	adrp	x23, 0 <__pthread_key_create>
 698:	ldr	x23, [x23]
 69c:	lsr	x22, x24, #4
 6a0:	b	6b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6b8>
 6a4:	str	x24, [x19, #8]
 6a8:	add	x20, x20, #0x10
 6ac:	subs	x22, x22, #0x1
 6b0:	add	x19, x19, #0x10
 6b4:	b.le	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>
 6b8:	ldr	x8, [x20]
 6bc:	ldr	x21, [x19, #8]
 6c0:	str	x8, [x19]
 6c4:	ldr	x24, [x20, #8]
 6c8:	cmp	x24, x21
 6cc:	b.eq	6a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a8>  // b.none
 6d0:	cbz	x24, 6f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6f0>
 6d4:	add	x8, x24, #0x8
 6d8:	cbz	x23, 6f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6f8>
 6dc:	ldaxr	w9, [x8]
 6e0:	add	w9, w9, #0x1
 6e4:	stlxr	w10, w9, [x8]
 6e8:	cbnz	w10, 6dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6dc>
 6ec:	ldr	x21, [x19, #8]
 6f0:	cbnz	x21, 708 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x708>
 6f4:	b	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>
 6f8:	ldr	w9, [x8]
 6fc:	add	w9, w9, #0x1
 700:	str	w9, [x8]
 704:	cbz	x21, 6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>
 708:	add	x8, x21, #0x8
 70c:	cbz	x23, 72c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x72c>
 710:	ldaxr	w9, [x8]
 714:	sub	w10, w9, #0x1
 718:	stlxr	w11, w10, [x8]
 71c:	cbnz	w11, 710 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x710>
 720:	cmp	w9, #0x1
 724:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>  // b.any
 728:	b	740 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x740>
 72c:	ldr	w9, [x8]
 730:	sub	w10, w9, #0x1
 734:	str	w10, [x8]
 738:	cmp	w9, #0x1
 73c:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>  // b.any
 740:	mov	x25, x21
 744:	ldr	x8, [x25], #12
 748:	mov	x0, x21
 74c:	ldr	x8, [x8, #16]
 750:	blr	x8
 754:	cbz	x23, 774 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x774>
 758:	ldaxr	w8, [x25]
 75c:	sub	w9, w8, #0x1
 760:	stlxr	w10, w9, [x25]
 764:	cbnz	w10, 758 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x758>
 768:	cmp	w8, #0x1
 76c:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>  // b.any
 770:	b	788 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x788>
 774:	ldr	w8, [x25]
 778:	sub	w9, w8, #0x1
 77c:	str	w9, [x25]
 780:	cmp	w8, #0x1
 784:	b.ne	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>  // b.any
 788:	ldr	x8, [x21]
 78c:	mov	x0, x21
 790:	ldr	x8, [x8, #24]
 794:	blr	x8
 798:	b	6a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a4>
 79c:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 7a0:	add	x0, x0, #0x0
 7a4:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm13format_objectIJmjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldr	x3, [x0, #24]
   8:	ldr	w4, [x0, #16]
   c:	mov	w9, w2
  10:	mov	x0, x1
  14:	mov	x1, x9
  18:	mov	x2, x8
  1c:	b	0 <snprintf>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x8, x8, #0x20
   c:	cmp	x0, x8
  10:	b.eq	18 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x18>  // b.none
  14:	b	0 <free>
  18:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	cbz	x0, 8 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv+0x8>
   4:	b	0 <_ZdlPv>
   8:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	cmp	x1, x8
  1c:	b.eq	2c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x2c>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tbz	w0, #0, 3c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x3c>
  2c:	add	x0, x19, #0x10
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x0, xzr
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x20, x24, [x0]
  24:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  28:	sub	x8, x24, x20
  2c:	cmp	x8, x9
  30:	b.eq	290 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x290>  // b.none
  34:	asr	x9, x8, #4
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #59
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x20
  68:	mov	x23, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x25, x8, #4
  78:	str	x9, [sp, #8]
  7c:	cbz	x9, 90 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x90>
  80:	lsl	x0, x9, #4
  84:	bl	0 <_Znwm>
  88:	mov	x22, x0
  8c:	b	94 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>
  90:	mov	x22, xzr
  94:	ldr	q0, [x23]
  98:	stp	xzr, xzr, [x23]
  9c:	adrp	x26, 0 <__pthread_key_create>
  a0:	cmp	x20, x21
  a4:	str	q0, [x22, x25, lsl #4]
  a8:	ldr	x26, [x26]
  ac:	mov	x27, x22
  b0:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  b4:	mov	x27, x22
  b8:	mov	x28, x20
  bc:	b	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>
  c0:	add	x28, x28, #0x10
  c4:	cmp	x28, x21
  c8:	add	x27, x27, #0x10
  cc:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  d0:	str	xzr, [x27, #8]
  d4:	ldr	q0, [x28]
  d8:	str	xzr, [x28, #8]
  dc:	str	q0, [x27]
  e0:	ldr	x25, [x28, #8]
  e4:	str	xzr, [x28]
  e8:	cbz	x25, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
  ec:	add	x8, x25, #0x8
  f0:	cbz	x26, 110 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>
  f4:	ldaxr	w9, [x8]
  f8:	sub	w10, w9, #0x1
  fc:	stlxr	w11, w10, [x8]
 100:	cbnz	w11, f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
 104:	cmp	w9, #0x1
 108:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 10c:	b	124 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x124>
 110:	ldr	w9, [x8]
 114:	sub	w10, w9, #0x1
 118:	str	w10, [x8]
 11c:	cmp	w9, #0x1
 120:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 124:	mov	x23, x25
 128:	ldr	x8, [x23], #12
 12c:	mov	x0, x25
 130:	ldr	x8, [x8, #16]
 134:	blr	x8
 138:	cbz	x26, 158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>
 13c:	ldaxr	w8, [x23]
 140:	sub	w9, w8, #0x1
 144:	stlxr	w10, w9, [x23]
 148:	cbnz	w10, 13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x13c>
 14c:	cmp	w8, #0x1
 150:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 154:	b	16c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x16c>
 158:	ldr	w8, [x23]
 15c:	sub	w9, w8, #0x1
 160:	str	w9, [x23]
 164:	cmp	w8, #0x1
 168:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 16c:	ldr	x8, [x25]
 170:	mov	x0, x25
 174:	ldr	x8, [x8, #24]
 178:	blr	x8
 17c:	b	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
 180:	cmp	x24, x21
 184:	add	x27, x27, #0x10
 188:	b.eq	254 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x254>  // b.none
 18c:	ldr	x28, [sp, #8]
 190:	b	1a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a4>
 194:	add	x21, x21, #0x10
 198:	cmp	x21, x24
 19c:	add	x27, x27, #0x10
 1a0:	b.eq	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x258>  // b.none
 1a4:	str	xzr, [x27, #8]
 1a8:	ldr	q0, [x21]
 1ac:	str	xzr, [x21, #8]
 1b0:	str	q0, [x27]
 1b4:	ldr	x23, [x21, #8]
 1b8:	str	xzr, [x21]
 1bc:	cbz	x23, 194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 1c0:	add	x8, x23, #0x8
 1c4:	cbz	x26, 1e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e4>
 1c8:	ldaxr	w9, [x8]
 1cc:	sub	w10, w9, #0x1
 1d0:	stlxr	w11, w10, [x8]
 1d4:	cbnz	w11, 1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c8>
 1d8:	cmp	w9, #0x1
 1dc:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1e0:	b	1f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f8>
 1e4:	ldr	w9, [x8]
 1e8:	sub	w10, w9, #0x1
 1ec:	str	w10, [x8]
 1f0:	cmp	w9, #0x1
 1f4:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1f8:	mov	x25, x23
 1fc:	ldr	x8, [x25], #12
 200:	mov	x0, x23
 204:	ldr	x8, [x8, #16]
 208:	blr	x8
 20c:	cbz	x26, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x22c>
 210:	ldaxr	w8, [x25]
 214:	sub	w9, w8, #0x1
 218:	stlxr	w10, w9, [x25]
 21c:	cbnz	w10, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x210>
 220:	cmp	w8, #0x1
 224:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 228:	b	240 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x240>
 22c:	ldr	w8, [x25]
 230:	sub	w9, w8, #0x1
 234:	str	w9, [x25]
 238:	cmp	w8, #0x1
 23c:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 240:	ldr	x8, [x23]
 244:	mov	x0, x23
 248:	ldr	x8, [x8, #24]
 24c:	blr	x8
 250:	b	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 254:	ldr	x28, [sp, #8]
 258:	cbz	x20, 264 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x264>
 25c:	mov	x0, x20
 260:	bl	0 <_ZdlPv>
 264:	add	x8, x22, x28, lsl #4
 268:	stp	x22, x27, [x19]
 26c:	str	x8, [x19, #16]
 270:	ldp	x20, x19, [sp, #96]
 274:	ldp	x22, x21, [sp, #80]
 278:	ldp	x24, x23, [sp, #64]
 27c:	ldp	x26, x25, [sp, #48]
 280:	ldp	x28, x27, [sp, #32]
 284:	ldp	x29, x30, [sp, #16]
 288:	add	sp, sp, #0x70
 28c:	ret
 290:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 294:	add	x0, x0, #0x0
 298:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	220 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x220>  // b.none
  30:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  34:	asr	x9, x8, #3
  38:	movk	x10, #0xcccd
  3c:	cmp	x8, #0x0
  40:	mul	x9, x9, x10
  44:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  48:	csinc	x11, x9, xzr, ne  // ne = any
  4c:	movk	x8, #0x333, lsl #48
  50:	adds	x9, x11, x9
  54:	cset	w11, cs  // cs = hs, nlast
  58:	cmp	x9, x8
  5c:	cset	w12, hi  // hi = pmore
  60:	orr	w11, w11, w12
  64:	cmp	w11, #0x0
  68:	csel	x25, x8, x9, ne  // ne = any
  6c:	sub	x27, x1, x20
  70:	add	x8, x25, x25, lsl #2
  74:	mov	x19, x0
  78:	asr	x11, x27, #3
  7c:	lsl	x0, x8, #3
  80:	mov	x23, x2
  84:	mov	x22, x1
  88:	mul	x26, x11, x10
  8c:	bl	0 <_Znwm>
  90:	ldr	w8, [x23]
  94:	add	x10, x0, x27
  98:	mov	x9, x10
  9c:	mov	x21, x0
  a0:	str	w8, [x9], #24
  a4:	str	x9, [x10, #8]!
  a8:	ldr	x11, [x23, #8]
  ac:	add	x8, x23, #0x18
  b0:	cmp	x11, x8
  b4:	b.eq	d0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd0>  // b.none
  b8:	str	x11, [x10]
  bc:	ldr	x9, [x23, #24]
  c0:	mov	w10, #0x28                  	// #40
  c4:	madd	x10, x26, x10, x21
  c8:	str	x9, [x10, #24]
  cc:	b	d8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd8>
  d0:	ldr	q0, [x11]
  d4:	str	q0, [x9]
  d8:	ldr	x9, [x23, #16]
  dc:	mov	w10, #0x28                  	// #40
  e0:	cmp	x20, x22
  e4:	madd	x10, x26, x10, x21
  e8:	str	x9, [x10, #16]
  ec:	stp	x8, xzr, [x23, #8]
  f0:	strb	wzr, [x23, #24]
  f4:	b.eq	174 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x174>  // b.none
  f8:	mov	x9, x21
  fc:	mov	x11, x20
 100:	b	130 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x130>
 104:	str	x12, [x8, #8]
 108:	ldr	x11, [x11, #24]
 10c:	str	x11, [x8, #24]
 110:	ldur	x12, [x10, #-8]
 114:	add	x11, x10, #0x10
 118:	cmp	x11, x22
 11c:	add	x9, x9, #0x10
 120:	str	x12, [x8, #16]
 124:	stp	x10, xzr, [x10, #-16]
 128:	strb	wzr, [x10]
 12c:	b.eq	160 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x160>  // b.none
 130:	ldr	w10, [x11]
 134:	mov	x8, x9
 138:	add	x9, x9, #0x18
 13c:	str	x9, [x8, #8]
 140:	str	w10, [x8]
 144:	ldr	x12, [x11, #8]
 148:	add	x10, x11, #0x18
 14c:	cmp	x12, x10
 150:	b.ne	104 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x104>  // b.any
 154:	ldr	q0, [x12]
 158:	stur	q0, [x8, #24]
 15c:	b	110 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x110>
 160:	add	x8, x8, #0x28
 164:	cmp	x24, x22
 168:	add	x23, x8, #0x28
 16c:	b.ne	1b4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1b4>  // b.any
 170:	b	1e8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1e8>
 174:	mov	x8, x21
 178:	cmp	x24, x22
 17c:	add	x23, x8, #0x28
 180:	b.ne	1b4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1b4>  // b.any
 184:	b	1e8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1e8>
 188:	str	x11, [x8, #8]
 18c:	ldr	x11, [x22, #24]
 190:	str	x11, [x8, #24]
 194:	ldur	x11, [x10, #-8]
 198:	add	x22, x10, #0x10
 19c:	cmp	x22, x24
 1a0:	add	x23, x9, #0x10
 1a4:	str	x11, [x8, #16]
 1a8:	stp	x10, xzr, [x10, #-16]
 1ac:	strb	wzr, [x10]
 1b0:	b.eq	1e4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1e4>  // b.none
 1b4:	ldr	w10, [x22]
 1b8:	add	x9, x23, #0x18
 1bc:	str	x9, [x23, #8]
 1c0:	mov	x8, x23
 1c4:	str	w10, [x23]
 1c8:	ldr	x11, [x22, #8]
 1cc:	add	x10, x22, #0x18
 1d0:	cmp	x11, x10
 1d4:	b.ne	188 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x188>  // b.any
 1d8:	ldr	q0, [x11]
 1dc:	stur	q0, [x8, #24]
 1e0:	b	194 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x194>
 1e4:	add	x23, x8, #0x28
 1e8:	cbz	x20, 1f4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1f4>
 1ec:	mov	x0, x20
 1f0:	bl	0 <_ZdlPv>
 1f4:	mov	w8, #0x28                  	// #40
 1f8:	madd	x8, x25, x8, x21
 1fc:	stp	x21, x23, [x19]
 200:	str	x8, [x19, #16]
 204:	ldp	x20, x19, [sp, #80]
 208:	ldp	x22, x21, [sp, #64]
 20c:	ldp	x24, x23, [sp, #48]
 210:	ldp	x26, x25, [sp, #32]
 214:	ldr	x27, [sp, #16]
 218:	ldp	x29, x30, [sp], #96
 21c:	ret
 220:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
 224:	add	x0, x0, #0x0
 228:	bl	0 <_ZSt20__throw_length_errorPKc>
