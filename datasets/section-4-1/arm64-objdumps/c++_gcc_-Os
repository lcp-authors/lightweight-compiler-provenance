
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//c++_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402c80 <.init>:
  402c80:	stp	x29, x30, [sp, #-16]!
  402c84:	mov	x29, sp
  402c88:	bl	4042dc <ferror@plt+0xd0c>
  402c8c:	ldp	x29, x30, [sp], #16
  402c90:	ret

Disassembly of section .plt:

0000000000402ca0 <_ZGTtnam@plt-0x20>:
  402ca0:	stp	x16, x30, [sp, #-16]!
  402ca4:	adrp	x16, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  402ca8:	ldr	x17, [x16, #4088]
  402cac:	add	x16, x16, #0xff8
  402cb0:	br	x17
  402cb4:	nop
  402cb8:	nop
  402cbc:	nop

0000000000402cc0 <_ZGTtnam@plt>:
  402cc0:	adrp	x16, 4fa000 <_ZGTtnam>
  402cc4:	ldr	x17, [x16]
  402cc8:	add	x16, x16, #0x0
  402ccc:	br	x17

0000000000402cd0 <memcpy@plt>:
  402cd0:	adrp	x16, 4fa000 <_ZGTtnam>
  402cd4:	ldr	x17, [x16, #8]
  402cd8:	add	x16, x16, #0x8
  402cdc:	br	x17

0000000000402ce0 <memmove@plt>:
  402ce0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ce4:	ldr	x17, [x16, #16]
  402ce8:	add	x16, x16, #0x10
  402cec:	br	x17

0000000000402cf0 <ngettext@plt>:
  402cf0:	adrp	x16, 4fa000 <_ZGTtnam>
  402cf4:	ldr	x17, [x16, #24]
  402cf8:	add	x16, x16, #0x18
  402cfc:	br	x17

0000000000402d00 <_exit@plt>:
  402d00:	adrp	x16, 4fa000 <_ZGTtnam>
  402d04:	ldr	x17, [x16, #32]
  402d08:	add	x16, x16, #0x20
  402d0c:	br	x17

0000000000402d10 <mkstemps@plt>:
  402d10:	adrp	x16, 4fa000 <_ZGTtnam>
  402d14:	ldr	x17, [x16, #40]
  402d18:	add	x16, x16, #0x28
  402d1c:	br	x17

0000000000402d20 <strtok@plt>:
  402d20:	adrp	x16, 4fa000 <_ZGTtnam>
  402d24:	ldr	x17, [x16, #48]
  402d28:	add	x16, x16, #0x30
  402d2c:	br	x17

0000000000402d30 <fwrite_unlocked@plt>:
  402d30:	adrp	x16, 4fa000 <_ZGTtnam>
  402d34:	ldr	x17, [x16, #56]
  402d38:	add	x16, x16, #0x38
  402d3c:	br	x17

0000000000402d40 <strtoul@plt>:
  402d40:	adrp	x16, 4fa000 <_ZGTtnam>
  402d44:	ldr	x17, [x16, #64]
  402d48:	add	x16, x16, #0x40
  402d4c:	br	x17

0000000000402d50 <strlen@plt>:
  402d50:	adrp	x16, 4fa000 <_ZGTtnam>
  402d54:	ldr	x17, [x16, #72]
  402d58:	add	x16, x16, #0x48
  402d5c:	br	x17

0000000000402d60 <fputs@plt>:
  402d60:	adrp	x16, 4fa000 <_ZGTtnam>
  402d64:	ldr	x17, [x16, #80]
  402d68:	add	x16, x16, #0x50
  402d6c:	br	x17

0000000000402d70 <mbstowcs@plt>:
  402d70:	adrp	x16, 4fa000 <_ZGTtnam>
  402d74:	ldr	x17, [x16, #88]
  402d78:	add	x16, x16, #0x58
  402d7c:	br	x17

0000000000402d80 <exit@plt>:
  402d80:	adrp	x16, 4fa000 <_ZGTtnam>
  402d84:	ldr	x17, [x16, #96]
  402d88:	add	x16, x16, #0x60
  402d8c:	br	x17

0000000000402d90 <sbrk@plt>:
  402d90:	adrp	x16, 4fa000 <_ZGTtnam>
  402d94:	ldr	x17, [x16, #104]
  402d98:	add	x16, x16, #0x68
  402d9c:	br	x17

0000000000402da0 <strnlen@plt>:
  402da0:	adrp	x16, 4fa000 <_ZGTtnam>
  402da4:	ldr	x17, [x16, #112]
  402da8:	add	x16, x16, #0x70
  402dac:	br	x17

0000000000402db0 <iconv_close@plt>:
  402db0:	adrp	x16, 4fa000 <_ZGTtnam>
  402db4:	ldr	x17, [x16, #120]
  402db8:	add	x16, x16, #0x78
  402dbc:	br	x17

0000000000402dc0 <remove@plt>:
  402dc0:	adrp	x16, 4fa000 <_ZGTtnam>
  402dc4:	ldr	x17, [x16, #128]
  402dc8:	add	x16, x16, #0x80
  402dcc:	br	x17

0000000000402dd0 <setenv@plt>:
  402dd0:	adrp	x16, 4fa000 <_ZGTtnam>
  402dd4:	ldr	x17, [x16, #136]
  402dd8:	add	x16, x16, #0x88
  402ddc:	br	x17

0000000000402de0 <readlink@plt>:
  402de0:	adrp	x16, 4fa000 <_ZGTtnam>
  402de4:	ldr	x17, [x16, #144]
  402de8:	add	x16, x16, #0x90
  402dec:	br	x17

0000000000402df0 <ftell@plt>:
  402df0:	adrp	x16, 4fa000 <_ZGTtnam>
  402df4:	ldr	x17, [x16, #152]
  402df8:	add	x16, x16, #0x98
  402dfc:	br	x17

0000000000402e00 <sprintf@plt>:
  402e00:	adrp	x16, 4fa000 <_ZGTtnam>
  402e04:	ldr	x17, [x16, #160]
  402e08:	add	x16, x16, #0xa0
  402e0c:	br	x17

0000000000402e10 <pipe@plt>:
  402e10:	adrp	x16, 4fa000 <_ZGTtnam>
  402e14:	ldr	x17, [x16, #168]
  402e18:	add	x16, x16, #0xa8
  402e1c:	br	x17

0000000000402e20 <opendir@plt>:
  402e20:	adrp	x16, 4fa000 <_ZGTtnam>
  402e24:	ldr	x17, [x16, #176]
  402e28:	add	x16, x16, #0xb0
  402e2c:	br	x17

0000000000402e30 <__cxa_atexit@plt>:
  402e30:	adrp	x16, 4fa000 <_ZGTtnam>
  402e34:	ldr	x17, [x16, #184]
  402e38:	add	x16, x16, #0xb8
  402e3c:	br	x17

0000000000402e40 <fputc@plt>:
  402e40:	adrp	x16, 4fa000 <_ZGTtnam>
  402e44:	ldr	x17, [x16, #192]
  402e48:	add	x16, x16, #0xc0
  402e4c:	br	x17

0000000000402e50 <setrlimit@plt>:
  402e50:	adrp	x16, 4fa000 <_ZGTtnam>
  402e54:	ldr	x17, [x16, #200]
  402e58:	add	x16, x16, #0xc8
  402e5c:	br	x17

0000000000402e60 <qsort@plt>:
  402e60:	adrp	x16, 4fa000 <_ZGTtnam>
  402e64:	ldr	x17, [x16, #208]
  402e68:	add	x16, x16, #0xd0
  402e6c:	br	x17

0000000000402e70 <kill@plt>:
  402e70:	adrp	x16, 4fa000 <_ZGTtnam>
  402e74:	ldr	x17, [x16, #216]
  402e78:	add	x16, x16, #0xd8
  402e7c:	br	x17

0000000000402e80 <_ITM_RU1@plt>:
  402e80:	adrp	x16, 4fa000 <_ZGTtnam>
  402e84:	ldr	x17, [x16, #224]
  402e88:	add	x16, x16, #0xe0
  402e8c:	br	x17

0000000000402e90 <__ctype_tolower_loc@plt>:
  402e90:	adrp	x16, 4fa000 <_ZGTtnam>
  402e94:	ldr	x17, [x16, #232]
  402e98:	add	x16, x16, #0xe8
  402e9c:	br	x17

0000000000402ea0 <snprintf@plt>:
  402ea0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ea4:	ldr	x17, [x16, #240]
  402ea8:	add	x16, x16, #0xf0
  402eac:	br	x17

0000000000402eb0 <putc_unlocked@plt>:
  402eb0:	adrp	x16, 4fa000 <_ZGTtnam>
  402eb4:	ldr	x17, [x16, #248]
  402eb8:	add	x16, x16, #0xf8
  402ebc:	br	x17

0000000000402ec0 <localtime@plt>:
  402ec0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ec4:	ldr	x17, [x16, #256]
  402ec8:	add	x16, x16, #0x100
  402ecc:	br	x17

0000000000402ed0 <signal@plt>:
  402ed0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ed4:	ldr	x17, [x16, #264]
  402ed8:	add	x16, x16, #0x108
  402edc:	br	x17

0000000000402ee0 <fclose@plt>:
  402ee0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ee4:	ldr	x17, [x16, #272]
  402ee8:	add	x16, x16, #0x110
  402eec:	br	x17

0000000000402ef0 <atoi@plt>:
  402ef0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ef4:	ldr	x17, [x16, #280]
  402ef8:	add	x16, x16, #0x118
  402efc:	br	x17

0000000000402f00 <getpid@plt>:
  402f00:	adrp	x16, 4fa000 <_ZGTtnam>
  402f04:	ldr	x17, [x16, #288]
  402f08:	add	x16, x16, #0x120
  402f0c:	br	x17

0000000000402f10 <nl_langinfo@plt>:
  402f10:	adrp	x16, 4fa000 <_ZGTtnam>
  402f14:	ldr	x17, [x16, #296]
  402f18:	add	x16, x16, #0x128
  402f1c:	br	x17

0000000000402f20 <fopen@plt>:
  402f20:	adrp	x16, 4fa000 <_ZGTtnam>
  402f24:	ldr	x17, [x16, #304]
  402f28:	add	x16, x16, #0x130
  402f2c:	br	x17

0000000000402f30 <time@plt>:
  402f30:	adrp	x16, 4fa000 <_ZGTtnam>
  402f34:	ldr	x17, [x16, #312]
  402f38:	add	x16, x16, #0x138
  402f3c:	br	x17

0000000000402f40 <malloc@plt>:
  402f40:	adrp	x16, 4fa000 <_ZGTtnam>
  402f44:	ldr	x17, [x16, #320]
  402f48:	add	x16, x16, #0x140
  402f4c:	br	x17

0000000000402f50 <open@plt>:
  402f50:	adrp	x16, 4fa000 <_ZGTtnam>
  402f54:	ldr	x17, [x16, #328]
  402f58:	add	x16, x16, #0x148
  402f5c:	br	x17

0000000000402f60 <_ITM_addUserCommitAction@plt>:
  402f60:	adrp	x16, 4fa000 <_ZGTtnam>
  402f64:	ldr	x17, [x16, #336]
  402f68:	add	x16, x16, #0x150
  402f6c:	br	x17

0000000000402f70 <wcswidth@plt>:
  402f70:	adrp	x16, 4fa000 <_ZGTtnam>
  402f74:	ldr	x17, [x16, #344]
  402f78:	add	x16, x16, #0x158
  402f7c:	br	x17

0000000000402f80 <strncmp@plt>:
  402f80:	adrp	x16, 4fa000 <_ZGTtnam>
  402f84:	ldr	x17, [x16, #352]
  402f88:	add	x16, x16, #0x160
  402f8c:	br	x17

0000000000402f90 <bindtextdomain@plt>:
  402f90:	adrp	x16, 4fa000 <_ZGTtnam>
  402f94:	ldr	x17, [x16, #360]
  402f98:	add	x16, x16, #0x168
  402f9c:	br	x17

0000000000402fa0 <fileno_unlocked@plt>:
  402fa0:	adrp	x16, 4fa000 <_ZGTtnam>
  402fa4:	ldr	x17, [x16, #368]
  402fa8:	add	x16, x16, #0x170
  402fac:	br	x17

0000000000402fb0 <_ITM_memcpyRtWn@plt>:
  402fb0:	adrp	x16, 4fa000 <_ZGTtnam>
  402fb4:	ldr	x17, [x16, #376]
  402fb8:	add	x16, x16, #0x178
  402fbc:	br	x17

0000000000402fc0 <__libc_start_main@plt>:
  402fc0:	adrp	x16, 4fa000 <_ZGTtnam>
  402fc4:	ldr	x17, [x16, #384]
  402fc8:	add	x16, x16, #0x180
  402fcc:	br	x17

0000000000402fd0 <strverscmp@plt>:
  402fd0:	adrp	x16, 4fa000 <_ZGTtnam>
  402fd4:	ldr	x17, [x16, #392]
  402fd8:	add	x16, x16, #0x188
  402fdc:	br	x17

0000000000402fe0 <strcat@plt>:
  402fe0:	adrp	x16, 4fa000 <_ZGTtnam>
  402fe4:	ldr	x17, [x16, #400]
  402fe8:	add	x16, x16, #0x190
  402fec:	br	x17

0000000000402ff0 <fgetc@plt>:
  402ff0:	adrp	x16, 4fa000 <_ZGTtnam>
  402ff4:	ldr	x17, [x16, #408]
  402ff8:	add	x16, x16, #0x198
  402ffc:	br	x17

0000000000403000 <memset@plt>:
  403000:	adrp	x16, 4fa000 <_ZGTtnam>
  403004:	ldr	x17, [x16, #416]
  403008:	add	x16, x16, #0x1a0
  40300c:	br	x17

0000000000403010 <fdopen@plt>:
  403010:	adrp	x16, 4fa000 <_ZGTtnam>
  403014:	ldr	x17, [x16, #424]
  403018:	add	x16, x16, #0x1a8
  40301c:	br	x17

0000000000403020 <gettimeofday@plt>:
  403020:	adrp	x16, 4fa000 <_ZGTtnam>
  403024:	ldr	x17, [x16, #432]
  403028:	add	x16, x16, #0x1b0
  40302c:	br	x17

0000000000403030 <vfork@plt>:
  403030:	adrp	x16, 4fa000 <_ZGTtnam>
  403034:	ldr	x17, [x16, #440]
  403038:	add	x16, x16, #0x1b8
  40303c:	br	x17

0000000000403040 <sleep@plt>:
  403040:	adrp	x16, 4fa000 <_ZGTtnam>
  403044:	ldr	x17, [x16, #448]
  403048:	add	x16, x16, #0x1c0
  40304c:	br	x17

0000000000403050 <calloc@plt>:
  403050:	adrp	x16, 4fa000 <_ZGTtnam>
  403054:	ldr	x17, [x16, #456]
  403058:	add	x16, x16, #0x1c8
  40305c:	br	x17

0000000000403060 <bsearch@plt>:
  403060:	adrp	x16, 4fa000 <_ZGTtnam>
  403064:	ldr	x17, [x16, #464]
  403068:	add	x16, x16, #0x1d0
  40306c:	br	x17

0000000000403070 <execv@plt>:
  403070:	adrp	x16, 4fa000 <_ZGTtnam>
  403074:	ldr	x17, [x16, #472]
  403078:	add	x16, x16, #0x1d8
  40307c:	br	x17

0000000000403080 <strcasecmp@plt>:
  403080:	adrp	x16, 4fa000 <_ZGTtnam>
  403084:	ldr	x17, [x16, #480]
  403088:	add	x16, x16, #0x1e0
  40308c:	br	x17

0000000000403090 <gmtime@plt>:
  403090:	adrp	x16, 4fa000 <_ZGTtnam>
  403094:	ldr	x17, [x16, #488]
  403098:	add	x16, x16, #0x1e8
  40309c:	br	x17

00000000004030a0 <readdir@plt>:
  4030a0:	adrp	x16, 4fa000 <_ZGTtnam>
  4030a4:	ldr	x17, [x16, #496]
  4030a8:	add	x16, x16, #0x1f0
  4030ac:	br	x17

00000000004030b0 <realloc@plt>:
  4030b0:	adrp	x16, 4fa000 <_ZGTtnam>
  4030b4:	ldr	x17, [x16, #504]
  4030b8:	add	x16, x16, #0x1f8
  4030bc:	br	x17

00000000004030c0 <getpagesize@plt>:
  4030c0:	adrp	x16, 4fa000 <_ZGTtnam>
  4030c4:	ldr	x17, [x16, #512]
  4030c8:	add	x16, x16, #0x200
  4030cc:	br	x17

00000000004030d0 <putenv@plt>:
  4030d0:	adrp	x16, 4fa000 <_ZGTtnam>
  4030d4:	ldr	x17, [x16, #520]
  4030d8:	add	x16, x16, #0x208
  4030dc:	br	x17

00000000004030e0 <strdup@plt>:
  4030e0:	adrp	x16, 4fa000 <_ZGTtnam>
  4030e4:	ldr	x17, [x16, #528]
  4030e8:	add	x16, x16, #0x210
  4030ec:	br	x17

00000000004030f0 <closedir@plt>:
  4030f0:	adrp	x16, 4fa000 <_ZGTtnam>
  4030f4:	ldr	x17, [x16, #536]
  4030f8:	add	x16, x16, #0x218
  4030fc:	br	x17

0000000000403100 <getc_unlocked@plt>:
  403100:	adrp	x16, 4fa000 <_ZGTtnam>
  403104:	ldr	x17, [x16, #544]
  403108:	add	x16, x16, #0x220
  40310c:	br	x17

0000000000403110 <strerror@plt>:
  403110:	adrp	x16, 4fa000 <_ZGTtnam>
  403114:	ldr	x17, [x16, #552]
  403118:	add	x16, x16, #0x228
  40311c:	br	x17

0000000000403120 <close@plt>:
  403120:	adrp	x16, 4fa000 <_ZGTtnam>
  403124:	ldr	x17, [x16, #560]
  403128:	add	x16, x16, #0x230
  40312c:	br	x17

0000000000403130 <strrchr@plt>:
  403130:	adrp	x16, 4fa000 <_ZGTtnam>
  403134:	ldr	x17, [x16, #568]
  403138:	add	x16, x16, #0x238
  40313c:	br	x17

0000000000403140 <memmem@plt>:
  403140:	adrp	x16, 4fa000 <_ZGTtnam>
  403144:	ldr	x17, [x16, #576]
  403148:	add	x16, x16, #0x240
  40314c:	br	x17

0000000000403150 <__gmon_start__@plt>:
  403150:	adrp	x16, 4fa000 <_ZGTtnam>
  403154:	ldr	x17, [x16, #584]
  403158:	add	x16, x16, #0x248
  40315c:	br	x17

0000000000403160 <write@plt>:
  403160:	adrp	x16, 4fa000 <_ZGTtnam>
  403164:	ldr	x17, [x16, #592]
  403168:	add	x16, x16, #0x250
  40316c:	br	x17

0000000000403170 <fseek@plt>:
  403170:	adrp	x16, 4fa000 <_ZGTtnam>
  403174:	ldr	x17, [x16, #600]
  403178:	add	x16, x16, #0x258
  40317c:	br	x17

0000000000403180 <abort@plt>:
  403180:	adrp	x16, 4fa000 <_ZGTtnam>
  403184:	ldr	x17, [x16, #608]
  403188:	add	x16, x16, #0x260
  40318c:	br	x17

0000000000403190 <access@plt>:
  403190:	adrp	x16, 4fa000 <_ZGTtnam>
  403194:	ldr	x17, [x16, #616]
  403198:	add	x16, x16, #0x268
  40319c:	br	x17

00000000004031a0 <feof@plt>:
  4031a0:	adrp	x16, 4fa000 <_ZGTtnam>
  4031a4:	ldr	x17, [x16, #624]
  4031a8:	add	x16, x16, #0x270
  4031ac:	br	x17

00000000004031b0 <puts@plt>:
  4031b0:	adrp	x16, 4fa000 <_ZGTtnam>
  4031b4:	ldr	x17, [x16, #632]
  4031b8:	add	x16, x16, #0x278
  4031bc:	br	x17

00000000004031c0 <pipe2@plt>:
  4031c0:	adrp	x16, 4fa000 <_ZGTtnam>
  4031c4:	ldr	x17, [x16, #640]
  4031c8:	add	x16, x16, #0x280
  4031cc:	br	x17

00000000004031d0 <fread_unlocked@plt>:
  4031d0:	adrp	x16, 4fa000 <_ZGTtnam>
  4031d4:	ldr	x17, [x16, #648]
  4031d8:	add	x16, x16, #0x288
  4031dc:	br	x17

00000000004031e0 <memcmp@plt>:
  4031e0:	adrp	x16, 4fa000 <_ZGTtnam>
  4031e4:	ldr	x17, [x16, #656]
  4031e8:	add	x16, x16, #0x290
  4031ec:	br	x17

00000000004031f0 <pthread_once@plt>:
  4031f0:	adrp	x16, 4fa000 <_ZGTtnam>
  4031f4:	ldr	x17, [x16, #664]
  4031f8:	add	x16, x16, #0x298
  4031fc:	br	x17

0000000000403200 <textdomain@plt>:
  403200:	adrp	x16, 4fa000 <_ZGTtnam>
  403204:	ldr	x17, [x16, #672]
  403208:	add	x16, x16, #0x2a0
  40320c:	br	x17

0000000000403210 <execvp@plt>:
  403210:	adrp	x16, 4fa000 <_ZGTtnam>
  403214:	ldr	x17, [x16, #680]
  403218:	add	x16, x16, #0x2a8
  40321c:	br	x17

0000000000403220 <strcmp@plt>:
  403220:	adrp	x16, 4fa000 <_ZGTtnam>
  403224:	ldr	x17, [x16, #688]
  403228:	add	x16, x16, #0x2b0
  40322c:	br	x17

0000000000403230 <iconv@plt>:
  403230:	adrp	x16, 4fa000 <_ZGTtnam>
  403234:	ldr	x17, [x16, #696]
  403238:	add	x16, x16, #0x2b8
  40323c:	br	x17

0000000000403240 <__ctype_b_loc@plt>:
  403240:	adrp	x16, 4fa000 <_ZGTtnam>
  403244:	ldr	x17, [x16, #704]
  403248:	add	x16, x16, #0x2c0
  40324c:	br	x17

0000000000403250 <mmap@plt>:
  403250:	adrp	x16, 4fa000 <_ZGTtnam>
  403254:	ldr	x17, [x16, #712]
  403258:	add	x16, x16, #0x2c8
  40325c:	br	x17

0000000000403260 <strtol@plt>:
  403260:	adrp	x16, 4fa000 <_ZGTtnam>
  403264:	ldr	x17, [x16, #720]
  403268:	add	x16, x16, #0x2d0
  40326c:	br	x17

0000000000403270 <fread@plt>:
  403270:	adrp	x16, 4fa000 <_ZGTtnam>
  403274:	ldr	x17, [x16, #728]
  403278:	add	x16, x16, #0x2d8
  40327c:	br	x17

0000000000403280 <dl_iterate_phdr@plt>:
  403280:	adrp	x16, 4fa000 <_ZGTtnam>
  403284:	ldr	x17, [x16, #736]
  403288:	add	x16, x16, #0x2e0
  40328c:	br	x17

0000000000403290 <dgettext@plt>:
  403290:	adrp	x16, 4fa000 <_ZGTtnam>
  403294:	ldr	x17, [x16, #744]
  403298:	add	x16, x16, #0x2e8
  40329c:	br	x17

00000000004032a0 <free@plt>:
  4032a0:	adrp	x16, 4fa000 <_ZGTtnam>
  4032a4:	ldr	x17, [x16, #752]
  4032a8:	add	x16, x16, #0x2f0
  4032ac:	br	x17

00000000004032b0 <ungetc@plt>:
  4032b0:	adrp	x16, 4fa000 <_ZGTtnam>
  4032b4:	ldr	x17, [x16, #760]
  4032b8:	add	x16, x16, #0x2f8
  4032bc:	br	x17

00000000004032c0 <strncasecmp@plt>:
  4032c0:	adrp	x16, 4fa000 <_ZGTtnam>
  4032c4:	ldr	x17, [x16, #768]
  4032c8:	add	x16, x16, #0x300
  4032cc:	br	x17

00000000004032d0 <freopen@plt>:
  4032d0:	adrp	x16, 4fa000 <_ZGTtnam>
  4032d4:	ldr	x17, [x16, #776]
  4032d8:	add	x16, x16, #0x308
  4032dc:	br	x17

00000000004032e0 <wait4@plt>:
  4032e0:	adrp	x16, 4fa000 <_ZGTtnam>
  4032e4:	ldr	x17, [x16, #784]
  4032e8:	add	x16, x16, #0x310
  4032ec:	br	x17

00000000004032f0 <strchr@plt>:
  4032f0:	adrp	x16, 4fa000 <_ZGTtnam>
  4032f4:	ldr	x17, [x16, #792]
  4032f8:	add	x16, x16, #0x318
  4032fc:	br	x17

0000000000403300 <strtoull@plt>:
  403300:	adrp	x16, 4fa000 <_ZGTtnam>
  403304:	ldr	x17, [x16, #800]
  403308:	add	x16, x16, #0x320
  40330c:	br	x17

0000000000403310 <_ITM_RU8@plt>:
  403310:	adrp	x16, 4fa000 <_ZGTtnam>
  403314:	ldr	x17, [x16, #808]
  403318:	add	x16, x16, #0x328
  40331c:	br	x17

0000000000403320 <fwrite@plt>:
  403320:	adrp	x16, 4fa000 <_ZGTtnam>
  403324:	ldr	x17, [x16, #816]
  403328:	add	x16, x16, #0x330
  40332c:	br	x17

0000000000403330 <fcntl@plt>:
  403330:	adrp	x16, 4fa000 <_ZGTtnam>
  403334:	ldr	x17, [x16, #824]
  403338:	add	x16, x16, #0x338
  40333c:	br	x17

0000000000403340 <munmap@plt>:
  403340:	adrp	x16, 4fa000 <_ZGTtnam>
  403344:	ldr	x17, [x16, #832]
  403348:	add	x16, x16, #0x340
  40334c:	br	x17

0000000000403350 <fflush@plt>:
  403350:	adrp	x16, 4fa000 <_ZGTtnam>
  403354:	ldr	x17, [x16, #840]
  403358:	add	x16, x16, #0x348
  40335c:	br	x17

0000000000403360 <strcpy@plt>:
  403360:	adrp	x16, 4fa000 <_ZGTtnam>
  403364:	ldr	x17, [x16, #848]
  403368:	add	x16, x16, #0x350
  40336c:	br	x17

0000000000403370 <getrlimit@plt>:
  403370:	adrp	x16, 4fa000 <_ZGTtnam>
  403374:	ldr	x17, [x16, #856]
  403378:	add	x16, x16, #0x358
  40337c:	br	x17

0000000000403380 <unsetenv@plt>:
  403380:	adrp	x16, 4fa000 <_ZGTtnam>
  403384:	ldr	x17, [x16, #864]
  403388:	add	x16, x16, #0x360
  40338c:	br	x17

0000000000403390 <iconv_open@plt>:
  403390:	adrp	x16, 4fa000 <_ZGTtnam>
  403394:	ldr	x17, [x16, #872]
  403398:	add	x16, x16, #0x368
  40339c:	br	x17

00000000004033a0 <vsprintf@plt>:
  4033a0:	adrp	x16, 4fa000 <_ZGTtnam>
  4033a4:	ldr	x17, [x16, #880]
  4033a8:	add	x16, x16, #0x370
  4033ac:	br	x17

00000000004033b0 <__lxstat@plt>:
  4033b0:	adrp	x16, 4fa000 <_ZGTtnam>
  4033b4:	ldr	x17, [x16, #888]
  4033b8:	add	x16, x16, #0x378
  4033bc:	br	x17

00000000004033c0 <read@plt>:
  4033c0:	adrp	x16, 4fa000 <_ZGTtnam>
  4033c4:	ldr	x17, [x16, #896]
  4033c8:	add	x16, x16, #0x380
  4033cc:	br	x17

00000000004033d0 <memchr@plt>:
  4033d0:	adrp	x16, 4fa000 <_ZGTtnam>
  4033d4:	ldr	x17, [x16, #904]
  4033d8:	add	x16, x16, #0x388
  4033dc:	br	x17

00000000004033e0 <isatty@plt>:
  4033e0:	adrp	x16, 4fa000 <_ZGTtnam>
  4033e4:	ldr	x17, [x16, #912]
  4033e8:	add	x16, x16, #0x390
  4033ec:	br	x17

00000000004033f0 <_ITM_memcpyRnWt@plt>:
  4033f0:	adrp	x16, 4fa000 <_ZGTtnam>
  4033f4:	ldr	x17, [x16, #920]
  4033f8:	add	x16, x16, #0x398
  4033fc:	br	x17

0000000000403400 <asctime@plt>:
  403400:	adrp	x16, 4fa000 <_ZGTtnam>
  403404:	ldr	x17, [x16, #928]
  403408:	add	x16, x16, #0x3a0
  40340c:	br	x17

0000000000403410 <fputc_unlocked@plt>:
  403410:	adrp	x16, 4fa000 <_ZGTtnam>
  403414:	ldr	x17, [x16, #936]
  403418:	add	x16, x16, #0x3a8
  40341c:	br	x17

0000000000403420 <__fxstat@plt>:
  403420:	adrp	x16, 4fa000 <_ZGTtnam>
  403424:	ldr	x17, [x16, #944]
  403428:	add	x16, x16, #0x3b0
  40342c:	br	x17

0000000000403430 <strstr@plt>:
  403430:	adrp	x16, 4fa000 <_ZGTtnam>
  403434:	ldr	x17, [x16, #952]
  403438:	add	x16, x16, #0x3b8
  40343c:	br	x17

0000000000403440 <realpath@plt>:
  403440:	adrp	x16, 4fa000 <_ZGTtnam>
  403444:	ldr	x17, [x16, #960]
  403448:	add	x16, x16, #0x3c0
  40344c:	br	x17

0000000000403450 <__isoc99_sscanf@plt>:
  403450:	adrp	x16, 4fa000 <_ZGTtnam>
  403454:	ldr	x17, [x16, #968]
  403458:	add	x16, x16, #0x3c8
  40345c:	br	x17

0000000000403460 <fputs_unlocked@plt>:
  403460:	adrp	x16, 4fa000 <_ZGTtnam>
  403464:	ldr	x17, [x16, #976]
  403468:	add	x16, x16, #0x3d0
  40346c:	br	x17

0000000000403470 <__fsetlocking@plt>:
  403470:	adrp	x16, 4fa000 <_ZGTtnam>
  403474:	ldr	x17, [x16, #984]
  403478:	add	x16, x16, #0x3d8
  40347c:	br	x17

0000000000403480 <dup2@plt>:
  403480:	adrp	x16, 4fa000 <_ZGTtnam>
  403484:	ldr	x17, [x16, #992]
  403488:	add	x16, x16, #0x3e0
  40348c:	br	x17

0000000000403490 <strncpy@plt>:
  403490:	adrp	x16, 4fa000 <_ZGTtnam>
  403494:	ldr	x17, [x16, #1000]
  403498:	add	x16, x16, #0x3e8
  40349c:	br	x17

00000000004034a0 <strsignal@plt>:
  4034a0:	adrp	x16, 4fa000 <_ZGTtnam>
  4034a4:	ldr	x17, [x16, #1008]
  4034a8:	add	x16, x16, #0x3f0
  4034ac:	br	x17

00000000004034b0 <strcspn@plt>:
  4034b0:	adrp	x16, 4fa000 <_ZGTtnam>
  4034b4:	ldr	x17, [x16, #1016]
  4034b8:	add	x16, x16, #0x3f8
  4034bc:	br	x17

00000000004034c0 <vfprintf@plt>:
  4034c0:	adrp	x16, 4fa000 <_ZGTtnam>
  4034c4:	ldr	x17, [x16, #1024]
  4034c8:	add	x16, x16, #0x400
  4034cc:	br	x17

00000000004034d0 <printf@plt>:
  4034d0:	adrp	x16, 4fa000 <_ZGTtnam>
  4034d4:	ldr	x17, [x16, #1032]
  4034d8:	add	x16, x16, #0x408
  4034dc:	br	x17

00000000004034e0 <__errno_location@plt>:
  4034e0:	adrp	x16, 4fa000 <_ZGTtnam>
  4034e4:	ldr	x17, [x16, #1040]
  4034e8:	add	x16, x16, #0x410
  4034ec:	br	x17

00000000004034f0 <getenv@plt>:
  4034f0:	adrp	x16, 4fa000 <_ZGTtnam>
  4034f4:	ldr	x17, [x16, #1048]
  4034f8:	add	x16, x16, #0x418
  4034fc:	br	x17

0000000000403500 <putchar@plt>:
  403500:	adrp	x16, 4fa000 <_ZGTtnam>
  403504:	ldr	x17, [x16, #1056]
  403508:	add	x16, x16, #0x420
  40350c:	br	x17

0000000000403510 <__xstat@plt>:
  403510:	adrp	x16, 4fa000 <_ZGTtnam>
  403514:	ldr	x17, [x16, #1064]
  403518:	add	x16, x16, #0x428
  40351c:	br	x17

0000000000403520 <_ZGTtdlPv@plt>:
  403520:	adrp	x16, 4fa000 <_ZGTtnam>
  403524:	ldr	x17, [x16, #1072]
  403528:	add	x16, x16, #0x430
  40352c:	br	x17

0000000000403530 <pthread_mutex_lock@plt>:
  403530:	adrp	x16, 4fa000 <_ZGTtnam>
  403534:	ldr	x17, [x16, #1080]
  403538:	add	x16, x16, #0x438
  40353c:	br	x17

0000000000403540 <syscall@plt>:
  403540:	adrp	x16, 4fa000 <_ZGTtnam>
  403544:	ldr	x17, [x16, #1088]
  403548:	add	x16, x16, #0x440
  40354c:	br	x17

0000000000403550 <pthread_mutex_unlock@plt>:
  403550:	adrp	x16, 4fa000 <_ZGTtnam>
  403554:	ldr	x17, [x16, #1096]
  403558:	add	x16, x16, #0x448
  40355c:	br	x17

0000000000403560 <waitpid@plt>:
  403560:	adrp	x16, 4fa000 <_ZGTtnam>
  403564:	ldr	x17, [x16, #1104]
  403568:	add	x16, x16, #0x450
  40356c:	br	x17

0000000000403570 <unlink@plt>:
  403570:	adrp	x16, 4fa000 <_ZGTtnam>
  403574:	ldr	x17, [x16, #1112]
  403578:	add	x16, x16, #0x458
  40357c:	br	x17

0000000000403580 <gettext@plt>:
  403580:	adrp	x16, 4fa000 <_ZGTtnam>
  403584:	ldr	x17, [x16, #1120]
  403588:	add	x16, x16, #0x460
  40358c:	br	x17

0000000000403590 <fprintf@plt>:
  403590:	adrp	x16, 4fa000 <_ZGTtnam>
  403594:	ldr	x17, [x16, #1128]
  403598:	add	x16, x16, #0x468
  40359c:	br	x17

00000000004035a0 <fgets@plt>:
  4035a0:	adrp	x16, 4fa000 <_ZGTtnam>
  4035a4:	ldr	x17, [x16, #1136]
  4035a8:	add	x16, x16, #0x470
  4035ac:	br	x17

00000000004035b0 <ioctl@plt>:
  4035b0:	adrp	x16, 4fa000 <_ZGTtnam>
  4035b4:	ldr	x17, [x16, #1144]
  4035b8:	add	x16, x16, #0x478
  4035bc:	br	x17

00000000004035c0 <setlocale@plt>:
  4035c0:	adrp	x16, 4fa000 <_ZGTtnam>
  4035c4:	ldr	x17, [x16, #1152]
  4035c8:	add	x16, x16, #0x480
  4035cc:	br	x17

00000000004035d0 <ferror@plt>:
  4035d0:	adrp	x16, 4fa000 <_ZGTtnam>
  4035d4:	ldr	x17, [x16, #1160]
  4035d8:	add	x16, x16, #0x488
  4035dc:	br	x17

Disassembly of section .text:

00000000004035e0 <_obstack_begin@@Base-0x58c20>:
  4035e0:	stp	x29, x30, [sp, #-16]!
  4035e4:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4035e8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4035ec:	mov	x29, sp
  4035f0:	add	x2, x2, #0x9f0
  4035f4:	add	x0, x0, #0xa0e
  4035f8:	mov	w1, #0xf7                  	// #247
  4035fc:	bl	403600 <ferror@plt+0x30>
  403600:	mov	w8, w1
  403604:	mov	x7, x2
  403608:	stp	x29, x30, [sp, #-16]!
  40360c:	mov	x29, sp
  403610:	bl	421224 <ferror@plt+0x1dc54>
  403614:	mov	x2, x0
  403618:	mov	w3, w8
  40361c:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  403620:	mov	x1, x7
  403624:	add	x0, x0, #0xfb2
  403628:	bl	4224a4 <ferror@plt+0x1eed4>
  40362c:	stp	x29, x30, [sp, #-16]!
  403630:	mov	x0, #0x8                   	// #8
  403634:	mov	x29, sp
  403638:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  40363c:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403640:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403644:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403648:	ldr	x3, [x3, #3744]
  40364c:	ldr	x2, [x2, #3704]
  403650:	add	x3, x3, #0x10
  403654:	ldr	x1, [x1, #3976]
  403658:	str	x3, [x0]
  40365c:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403660:	stp	x29, x30, [sp, #-16]!
  403664:	mov	x0, #0x8                   	// #8
  403668:	mov	x29, sp
  40366c:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403670:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403674:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403678:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  40367c:	ldr	x3, [x3, #3912]
  403680:	ldr	x2, [x2, #3688]
  403684:	add	x3, x3, #0x10
  403688:	ldr	x1, [x1, #3656]
  40368c:	str	x3, [x0]
  403690:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403694:	stp	x29, x30, [sp, #-16]!
  403698:	mov	x0, #0x8                   	// #8
  40369c:	mov	x29, sp
  4036a0:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  4036a4:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4036a8:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4036ac:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4036b0:	ldr	x3, [x3, #3616]
  4036b4:	ldr	x2, [x2, #3752]
  4036b8:	add	x3, x3, #0x10
  4036bc:	ldr	x1, [x1, #3896]
  4036c0:	str	x3, [x0]
  4036c4:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  4036c8:	stp	x29, x30, [sp, #-16]!
  4036cc:	mov	x0, #0x8                   	// #8
  4036d0:	mov	x29, sp
  4036d4:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  4036d8:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4036dc:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4036e0:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4036e4:	ldr	x3, [x3, #3728]
  4036e8:	ldr	x2, [x2, #3736]
  4036ec:	add	x3, x3, #0x10
  4036f0:	ldr	x1, [x1, #3808]
  4036f4:	str	x3, [x0]
  4036f8:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  4036fc:	stp	x29, x30, [sp, #-32]!
  403700:	mov	x29, sp
  403704:	str	x19, [sp, #16]
  403708:	mov	x19, x0
  40370c:	mov	x0, #0x10                  	// #16
  403710:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403714:	mov	x1, x19
  403718:	mov	x19, x0
  40371c:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  403720:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403724:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403728:	mov	x0, x19
  40372c:	ldr	x2, [x2, #4000]
  403730:	ldr	x1, [x1, #3768]
  403734:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403738:	mov	x1, x0
  40373c:	mov	x0, x19
  403740:	mov	x19, x1
  403744:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  403748:	mov	x0, x19
  40374c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  403750:	stp	x29, x30, [sp, #-32]!
  403754:	mov	x29, sp
  403758:	str	x19, [sp, #16]
  40375c:	mov	x19, x0
  403760:	mov	x0, #0x10                  	// #16
  403764:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403768:	mov	x1, x19
  40376c:	mov	x19, x0
  403770:	bl	4634f0 <_obstack_memory_used@@Base+0x7100>
  403774:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403778:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  40377c:	mov	x0, x19
  403780:	ldr	x2, [x2, #3904]
  403784:	ldr	x1, [x1, #4024]
  403788:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  40378c:	mov	x1, x0
  403790:	mov	x0, x19
  403794:	mov	x19, x1
  403798:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  40379c:	mov	x0, x19
  4037a0:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4037a4:	stp	x29, x30, [sp, #-32]!
  4037a8:	mov	x29, sp
  4037ac:	str	x19, [sp, #16]
  4037b0:	mov	x19, x0
  4037b4:	mov	x0, #0x10                  	// #16
  4037b8:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  4037bc:	mov	x1, x19
  4037c0:	mov	x19, x0
  4037c4:	bl	463520 <_obstack_memory_used@@Base+0x7130>
  4037c8:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4037cc:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4037d0:	mov	x0, x19
  4037d4:	ldr	x2, [x2, #3648]
  4037d8:	ldr	x1, [x1, #4056]
  4037dc:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  4037e0:	mov	x1, x0
  4037e4:	mov	x0, x19
  4037e8:	mov	x19, x1
  4037ec:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  4037f0:	mov	x0, x19
  4037f4:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4037f8:	stp	x29, x30, [sp, #-32]!
  4037fc:	mov	x29, sp
  403800:	str	x19, [sp, #16]
  403804:	mov	x19, x0
  403808:	mov	x0, #0x10                  	// #16
  40380c:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403810:	mov	x1, x19
  403814:	mov	x19, x0
  403818:	bl	463550 <_obstack_memory_used@@Base+0x7160>
  40381c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403820:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403824:	mov	x0, x19
  403828:	ldr	x2, [x2, #3720]
  40382c:	ldr	x1, [x1, #3816]
  403830:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403834:	mov	x1, x0
  403838:	mov	x0, x19
  40383c:	mov	x19, x1
  403840:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  403844:	mov	x0, x19
  403848:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  40384c:	stp	x29, x30, [sp, #-32]!
  403850:	mov	x29, sp
  403854:	str	x19, [sp, #16]
  403858:	mov	x19, x0
  40385c:	mov	x0, #0x10                  	// #16
  403860:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403864:	mov	x1, x19
  403868:	mov	x19, x0
  40386c:	bl	463580 <_obstack_memory_used@@Base+0x7190>
  403870:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403874:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403878:	mov	x0, x19
  40387c:	ldr	x2, [x2, #3632]
  403880:	ldr	x1, [x1, #3664]
  403884:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403888:	mov	x1, x0
  40388c:	mov	x0, x19
  403890:	mov	x19, x1
  403894:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  403898:	mov	x0, x19
  40389c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4038a0:	stp	x29, x30, [sp, #-32]!
  4038a4:	mov	x29, sp
  4038a8:	str	x19, [sp, #16]
  4038ac:	mov	x19, x0
  4038b0:	mov	x0, #0x10                  	// #16
  4038b4:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  4038b8:	mov	x1, x19
  4038bc:	mov	x19, x0
  4038c0:	bl	4635b0 <_obstack_memory_used@@Base+0x71c0>
  4038c4:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4038c8:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4038cc:	mov	x0, x19
  4038d0:	ldr	x2, [x2, #3888]
  4038d4:	ldr	x1, [x1, #3776]
  4038d8:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  4038dc:	mov	x1, x0
  4038e0:	mov	x0, x19
  4038e4:	mov	x19, x1
  4038e8:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  4038ec:	mov	x0, x19
  4038f0:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4038f4:	stp	x29, x30, [sp, #-32]!
  4038f8:	mov	x29, sp
  4038fc:	str	x19, [sp, #16]
  403900:	mov	x19, x0
  403904:	mov	x0, #0x10                  	// #16
  403908:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  40390c:	mov	x1, x19
  403910:	mov	x19, x0
  403914:	bl	463600 <_obstack_memory_used@@Base+0x7210>
  403918:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  40391c:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403920:	mov	x0, x19
  403924:	ldr	x2, [x2, #3960]
  403928:	ldr	x1, [x1, #3624]
  40392c:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403930:	mov	x1, x0
  403934:	mov	x0, x19
  403938:	mov	x19, x1
  40393c:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  403940:	mov	x0, x19
  403944:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  403948:	stp	x29, x30, [sp, #-32]!
  40394c:	mov	x29, sp
  403950:	str	x19, [sp, #16]
  403954:	mov	x19, x0
  403958:	mov	x0, #0x10                  	// #16
  40395c:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403960:	mov	x1, x19
  403964:	mov	x19, x0
  403968:	bl	463630 <_obstack_memory_used@@Base+0x7240>
  40396c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403970:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403974:	mov	x0, x19
  403978:	ldr	x2, [x2, #3968]
  40397c:	ldr	x1, [x1, #3672]
  403980:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403984:	mov	x1, x0
  403988:	mov	x0, x19
  40398c:	mov	x19, x1
  403990:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  403994:	mov	x0, x19
  403998:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  40399c:	stp	x29, x30, [sp, #-32]!
  4039a0:	mov	x29, sp
  4039a4:	str	x19, [sp, #16]
  4039a8:	mov	x19, x0
  4039ac:	mov	x0, #0x10                  	// #16
  4039b0:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  4039b4:	mov	x1, x19
  4039b8:	mov	x19, x0
  4039bc:	bl	463660 <_obstack_memory_used@@Base+0x7270>
  4039c0:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4039c4:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4039c8:	mov	x0, x19
  4039cc:	ldr	x2, [x2, #3840]
  4039d0:	ldr	x1, [x1, #3712]
  4039d4:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  4039d8:	mov	x1, x0
  4039dc:	mov	x0, x19
  4039e0:	mov	x19, x1
  4039e4:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  4039e8:	mov	x0, x19
  4039ec:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4039f0:	stp	x29, x30, [sp, #-16]!
  4039f4:	mov	x0, #0x8                   	// #8
  4039f8:	mov	x29, sp
  4039fc:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  403a00:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403a04:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403a08:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  403a0c:	ldr	x3, [x3, #3936]
  403a10:	ldr	x2, [x2, #4008]
  403a14:	add	x3, x3, #0x10
  403a18:	ldr	x1, [x1, #3696]
  403a1c:	str	x3, [x0]
  403a20:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  403a24:	stp	x29, x30, [sp, #-48]!
  403a28:	mov	x29, sp
  403a2c:	str	w1, [sp, #44]
  403a30:	ldr	x1, [x2]
  403a34:	str	x19, [sp, #16]
  403a38:	mov	x19, x0
  403a3c:	str	x2, [sp, #32]
  403a40:	bl	407fe0 <ferror@plt+0x4a10>
  403a44:	add	x2, sp, #0x20
  403a48:	add	x1, sp, #0x2c
  403a4c:	mov	x0, x19
  403a50:	bl	40802c <ferror@plt+0x4a5c>
  403a54:	ldr	w1, [sp, #44]
  403a58:	mov	x0, x19
  403a5c:	ldr	x2, [sp, #32]
  403a60:	bl	408070 <ferror@plt+0x4aa0>
  403a64:	mov	x0, x19
  403a68:	bl	40c4cc <ferror@plt+0x8efc>
  403a6c:	mov	x0, x19
  403a70:	bl	4080d0 <ferror@plt+0x4b00>
  403a74:	mov	x0, x19
  403a78:	bl	40f454 <ferror@plt+0xbe84>
  403a7c:	ldr	x0, [sp, #32]
  403a80:	ldr	x1, [x0]
  403a84:	mov	x0, x19
  403a88:	bl	40b258 <ferror@plt+0x7c88>
  403a8c:	mov	x0, x19
  403a90:	bl	40b0f4 <ferror@plt+0x7b24>
  403a94:	mov	x0, x19
  403a98:	bl	40b378 <ferror@plt+0x7da8>
  403a9c:	mov	x0, x19
  403aa0:	bl	408428 <ferror@plt+0x4e58>
  403aa4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  403aa8:	ldr	x1, [x0, #2208]
  403aac:	cbz	x1, 403ac8 <ferror@plt+0x4f8>
  403ab0:	add	x0, x19, #0x18
  403ab4:	bl	420734 <ferror@plt+0x1d164>
  403ab8:	mov	w0, #0x0                   	// #0
  403abc:	ldr	x19, [sp, #16]
  403ac0:	ldp	x29, x30, [sp], #48
  403ac4:	ret
  403ac8:	mov	x0, x19
  403acc:	bl	4084cc <ferror@plt+0x4efc>
  403ad0:	cbz	w0, 403abc <ferror@plt+0x4ec>
  403ad4:	mov	x0, x19
  403ad8:	bl	408f0c <ferror@plt+0x593c>
  403adc:	tst	w0, #0xff
  403ae0:	mov	x0, x19
  403ae4:	b.eq	403af0 <ferror@plt+0x520>  // b.none
  403ae8:	bl	40910c <ferror@plt+0x5b3c>
  403aec:	b	403abc <ferror@plt+0x4ec>
  403af0:	bl	40e4b8 <ferror@plt+0xaee8>
  403af4:	ldr	x0, [sp, #32]
  403af8:	ldr	x1, [x0]
  403afc:	mov	x0, x19
  403b00:	bl	40e9e0 <ferror@plt+0xb410>
  403b04:	mov	x0, x19
  403b08:	bl	4090c0 <ferror@plt+0x5af0>
  403b0c:	mov	x0, x19
  403b10:	b	403ae8 <ferror@plt+0x518>
  403b14:	adrp	x1, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  403b18:	add	x1, x1, #0x4a0
  403b1c:	add	x0, x1, #0x8
  403b20:	ldr	x2, [x1, #2304]
  403b24:	str	x2, [x0, #40]
  403b28:	ldr	x2, [x1, #2392]
  403b2c:	str	x2, [x0, #88]
  403b30:	ldr	x2, [x1, #2312]
  403b34:	str	x2, [x0, #136]
  403b38:	ldr	x2, [x1, #2400]
  403b3c:	str	x2, [x0, #184]
  403b40:	ldr	x2, [x1, #2408]
  403b44:	str	x2, [x0, #232]
  403b48:	ldr	x2, [x1, #2320]
  403b4c:	str	x2, [x0, #280]
  403b50:	ldr	x2, [x1, #2416]
  403b54:	str	x2, [x0, #328]
  403b58:	ldr	x2, [x1, #2424]
  403b5c:	str	x2, [x0, #376]
  403b60:	ldr	x2, [x1, #2432]
  403b64:	str	x2, [x0, #424]
  403b68:	ldr	x2, [x1, #2440]
  403b6c:	str	x2, [x0, #472]
  403b70:	ldr	x2, [x1, #2288]
  403b74:	str	x2, [x0, #520]
  403b78:	ldr	x2, [x1, #2448]
  403b7c:	str	x2, [x0, #568]
  403b80:	ldr	x2, [x1, #2296]
  403b84:	str	x2, [x0, #616]
  403b88:	ldr	x2, [x1, #2456]
  403b8c:	str	x2, [x0, #664]
  403b90:	ldr	x2, [x1, #2464]
  403b94:	str	x2, [x0, #712]
  403b98:	ldr	x2, [x1, #2328]
  403b9c:	str	x2, [x0, #760]
  403ba0:	ldr	x2, [x1, #2184]
  403ba4:	str	x2, [x0, #808]
  403ba8:	ldr	x2, [x1, #2336]
  403bac:	str	x2, [x0, #856]
  403bb0:	ldr	x2, [x1, #2472]
  403bb4:	str	x2, [x0, #904]
  403bb8:	ldr	x2, [x1, #2176]
  403bbc:	str	x2, [x0, #952]
  403bc0:	ldr	x2, [x1, #2344]
  403bc4:	str	x2, [x0, #1000]
  403bc8:	ldr	x2, [x1, #2272]
  403bcc:	str	x2, [x0, #1048]
  403bd0:	adrp	x2, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  403bd4:	add	x2, x2, #0x518
  403bd8:	ldr	x3, [x2, #32]
  403bdc:	str	x3, [x0, #1096]
  403be0:	ldr	x3, [x2, #552]
  403be4:	str	x3, [x0, #1144]
  403be8:	ldr	x3, [x2, #584]
  403bec:	str	x3, [x0, #1192]
  403bf0:	ldr	x3, [x1, #2216]
  403bf4:	str	x3, [x0, #1240]
  403bf8:	ldr	x3, [x2, #560]
  403bfc:	str	x3, [x0, #1288]
  403c00:	ldr	x3, [x2, #568]
  403c04:	str	x3, [x0, #1336]
  403c08:	ldr	x2, [x2, #576]
  403c0c:	str	x2, [x0, #1432]
  403c10:	ldr	x2, [x1, #2352]
  403c14:	str	x2, [x0, #1480]
  403c18:	ldr	x3, [x1, #2240]
  403c1c:	str	x3, [x0, #1384]
  403c20:	ldr	x2, [x1, #2360]
  403c24:	str	x2, [x0, #1528]
  403c28:	ldr	x2, [x1, #2280]
  403c2c:	str	x2, [x0, #1576]
  403c30:	ldr	x2, [x1, #2368]
  403c34:	str	x2, [x0, #1624]
  403c38:	ldr	x2, [x1, #2480]
  403c3c:	str	x2, [x0, #1672]
  403c40:	ldr	x2, [x1, #2488]
  403c44:	str	x2, [x0, #1720]
  403c48:	ldr	x2, [x1, #2248]
  403c4c:	str	x2, [x0, #1768]
  403c50:	ldr	x2, [x1, #2256]
  403c54:	str	x2, [x0, #1816]
  403c58:	ldr	x2, [x1, #2264]
  403c5c:	str	x2, [x0, #1864]
  403c60:	ldr	x2, [x1, #2384]
  403c64:	str	x2, [x0, #1912]
  403c68:	ldr	x2, [x1, #2496]
  403c6c:	str	x2, [x0, #1960]
  403c70:	ldr	x2, [x1, #2376]
  403c74:	str	x2, [x0, #2008]
  403c78:	ldr	x2, [x1, #2224]
  403c7c:	str	x2, [x0, #2056]
  403c80:	ldr	x1, [x1, #2504]
  403c84:	str	x1, [x0, #2104]
  403c88:	ret
  403c8c:	stp	x29, x30, [sp, #-64]!
  403c90:	mov	w2, #0x0                   	// #0
  403c94:	mov	x29, sp
  403c98:	stp	x19, x20, [sp, #16]
  403c9c:	mov	w19, w0
  403ca0:	mov	x20, x1
  403ca4:	add	x0, sp, #0x20
  403ca8:	mov	w1, #0x0                   	// #0
  403cac:	bl	407f94 <ferror@plt+0x49c4>
  403cb0:	mov	x2, x20
  403cb4:	mov	w1, w19
  403cb8:	add	x0, sp, #0x20
  403cbc:	bl	403a24 <ferror@plt+0x454>
  403cc0:	mov	w19, w0
  403cc4:	add	x0, sp, #0x20
  403cc8:	bl	407fb0 <ferror@plt+0x49e0>
  403ccc:	mov	w0, w19
  403cd0:	ldp	x19, x20, [sp, #16]
  403cd4:	ldp	x29, x30, [sp], #64
  403cd8:	ret
  403cdc:	stp	x29, x30, [sp, #-96]!
  403ce0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403ce4:	add	x1, x1, #0x59a
  403ce8:	mov	x29, sp
  403cec:	stp	x19, x20, [sp, #16]
  403cf0:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  403cf4:	add	x19, x19, #0x950
  403cf8:	mov	x0, x19
  403cfc:	stp	x21, x22, [sp, #32]
  403d00:	mov	x22, #0xb                   	// #11
  403d04:	stp	x23, x24, [sp, #48]
  403d08:	mov	x20, #0xf                   	// #15
  403d0c:	mov	x24, #0x3                   	// #3
  403d10:	stp	x25, x26, [sp, #64]
  403d14:	mov	x21, #0x2f                  	// #47
  403d18:	mov	w25, #0x1                   	// #1
  403d1c:	str	x27, [sp, #80]
  403d20:	bl	4115e8 <ferror@plt+0xe018>
  403d24:	add	x0, x19, #0x30
  403d28:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403d2c:	add	x1, x1, #0x584
  403d30:	str	wzr, [x19, #32]
  403d34:	str	x22, [x19, #40]
  403d38:	bl	4115e8 <ferror@plt+0xe018>
  403d3c:	add	x0, x19, #0x60
  403d40:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403d44:	add	x1, x1, #0x457
  403d48:	str	wzr, [x19, #80]
  403d4c:	str	x22, [x19, #88]
  403d50:	bl	4115e8 <ferror@plt+0xe018>
  403d54:	add	x0, x19, #0x90
  403d58:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403d5c:	add	x1, x1, #0x462
  403d60:	str	wzr, [x19, #128]
  403d64:	str	x22, [x19, #136]
  403d68:	bl	4115e8 <ferror@plt+0xe018>
  403d6c:	add	x0, x19, #0xc0
  403d70:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403d74:	add	x1, x1, #0x46d
  403d78:	str	wzr, [x19, #176]
  403d7c:	str	x22, [x19, #184]
  403d80:	bl	4115e8 <ferror@plt+0xe018>
  403d84:	add	x0, x19, #0xf0
  403d88:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403d8c:	add	x1, x1, #0x478
  403d90:	str	wzr, [x19, #224]
  403d94:	str	x22, [x19, #232]
  403d98:	bl	4115e8 <ferror@plt+0xe018>
  403d9c:	add	x0, x19, #0x120
  403da0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403da4:	add	x1, x1, #0x481
  403da8:	str	wzr, [x19, #272]
  403dac:	str	x20, [x19, #280]
  403db0:	bl	4115e8 <ferror@plt+0xe018>
  403db4:	add	x0, x19, #0x150
  403db8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403dbc:	add	x1, x1, #0x48f
  403dc0:	str	wzr, [x19, #320]
  403dc4:	str	x20, [x19, #328]
  403dc8:	bl	4115e8 <ferror@plt+0xe018>
  403dcc:	add	x0, x19, #0x180
  403dd0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403dd4:	add	x1, x1, #0x49b
  403dd8:	str	wzr, [x19, #368]
  403ddc:	str	x20, [x19, #376]
  403de0:	bl	4115e8 <ferror@plt+0xe018>
  403de4:	add	x0, x19, #0x1b0
  403de8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403dec:	add	x1, x1, #0x4a4
  403df0:	str	wzr, [x19, #416]
  403df4:	str	x20, [x19, #424]
  403df8:	bl	4115e8 <ferror@plt+0xe018>
  403dfc:	add	x0, x19, #0x1e0
  403e00:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e04:	add	x1, x1, #0x4af
  403e08:	str	wzr, [x19, #464]
  403e0c:	str	x20, [x19, #472]
  403e10:	bl	4115e8 <ferror@plt+0xe018>
  403e14:	add	x0, x19, #0x210
  403e18:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e1c:	add	x1, x1, #0x4ba
  403e20:	str	wzr, [x19, #512]
  403e24:	str	x20, [x19, #520]
  403e28:	bl	4115e8 <ferror@plt+0xe018>
  403e2c:	add	x0, x19, #0x240
  403e30:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e34:	add	x1, x1, #0x4c6
  403e38:	str	wzr, [x19, #560]
  403e3c:	str	x20, [x19, #568]
  403e40:	bl	4115e8 <ferror@plt+0xe018>
  403e44:	add	x0, x19, #0x270
  403e48:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e4c:	add	x1, x1, #0x4d2
  403e50:	str	wzr, [x19, #608]
  403e54:	str	x20, [x19, #616]
  403e58:	bl	4115e8 <ferror@plt+0xe018>
  403e5c:	add	x0, x19, #0x2a0
  403e60:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e64:	add	x1, x1, #0x4d7
  403e68:	str	wzr, [x19, #656]
  403e6c:	str	x20, [x19, #664]
  403e70:	bl	4115e8 <ferror@plt+0xe018>
  403e74:	add	x0, x19, #0x2d0
  403e78:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e7c:	add	x1, x1, #0x4de
  403e80:	str	wzr, [x19, #704]
  403e84:	str	x24, [x19, #712]
  403e88:	bl	4115e8 <ferror@plt+0xe018>
  403e8c:	add	x0, x19, #0x300
  403e90:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403e94:	add	x1, x1, #0x4e5
  403e98:	str	wzr, [x19, #752]
  403e9c:	str	x21, [x19, #760]
  403ea0:	bl	4115e8 <ferror@plt+0xe018>
  403ea4:	add	x0, x19, #0x330
  403ea8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403eac:	add	x1, x1, #0x4ed
  403eb0:	str	wzr, [x19, #800]
  403eb4:	str	x21, [x19, #808]
  403eb8:	bl	4115e8 <ferror@plt+0xe018>
  403ebc:	add	x0, x19, #0x360
  403ec0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403ec4:	add	x1, x1, #0x4f7
  403ec8:	str	wzr, [x19, #848]
  403ecc:	str	x20, [x19, #856]
  403ed0:	bl	4115e8 <ferror@plt+0xe018>
  403ed4:	add	x0, x19, #0x390
  403ed8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403edc:	add	x1, x1, #0x4fe
  403ee0:	str	wzr, [x19, #896]
  403ee4:	str	x20, [x19, #904]
  403ee8:	bl	4115e8 <ferror@plt+0xe018>
  403eec:	mov	x20, #0x7f                  	// #127
  403ef0:	add	x0, x19, #0x3c0
  403ef4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403ef8:	add	x1, x1, #0x50d
  403efc:	str	w25, [x19, #944]
  403f00:	mov	w21, #0x2                   	// #2
  403f04:	str	x20, [x19, #952]
  403f08:	bl	4115e8 <ferror@plt+0xe018>
  403f0c:	add	x0, x19, #0x3f0
  403f10:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403f14:	add	x1, x1, #0x514
  403f18:	str	w25, [x19, #992]
  403f1c:	str	x20, [x19, #1000]
  403f20:	bl	4115e8 <ferror@plt+0xe018>
  403f24:	add	x0, x19, #0x420
  403f28:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403f2c:	add	x1, x1, #0x5c6
  403f30:	str	w25, [x19, #1040]
  403f34:	str	x20, [x19, #1048]
  403f38:	bl	4115e8 <ferror@plt+0xe018>
  403f3c:	mov	x20, #0x337b                	// #13179
  403f40:	add	x0, x19, #0x450
  403f44:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403f48:	add	x1, x1, #0x521
  403f4c:	str	w21, [x19, #1088]
  403f50:	mov	x23, #0x337b                	// #13179
  403f54:	str	x20, [x19, #1096]
  403f58:	bl	4115e8 <ferror@plt+0xe018>
  403f5c:	add	x0, x19, #0x480
  403f60:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403f64:	add	x1, x1, #0x52c
  403f68:	str	w21, [x19, #1136]
  403f6c:	str	x20, [x19, #1144]
  403f70:	bl	4115e8 <ferror@plt+0xe018>
  403f74:	add	x0, x19, #0x4b0
  403f78:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403f7c:	add	x1, x1, #0x537
  403f80:	str	w21, [x19, #1184]
  403f84:	str	x20, [x19, #1192]
  403f88:	bl	4115e8 <ferror@plt+0xe018>
  403f8c:	add	x0, x19, #0x4e0
  403f90:	movk	x23, #0x20, lsl #16
  403f94:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403f98:	add	x1, x1, #0x53c
  403f9c:	str	w21, [x19, #1232]
  403fa0:	mov	w27, #0x4                   	// #4
  403fa4:	str	x23, [x19, #1240]
  403fa8:	bl	4115e8 <ferror@plt+0xe018>
  403fac:	add	x0, x19, #0x510
  403fb0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403fb4:	add	x1, x1, #0x548
  403fb8:	str	w21, [x19, #1280]
  403fbc:	str	x23, [x19, #1288]
  403fc0:	bl	4115e8 <ferror@plt+0xe018>
  403fc4:	mov	x0, #0x337b                	// #13179
  403fc8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403fcc:	movk	x0, #0x400, lsl #16
  403fd0:	add	x1, x1, #0x554
  403fd4:	str	w21, [x19, #1328]
  403fd8:	adrp	x23, 485000 <_obstack_memory_used@@Base+0x28c10>
  403fdc:	str	x0, [x19, #1336]
  403fe0:	add	x0, x19, #0x540
  403fe4:	bl	4115e8 <ferror@plt+0xe018>
  403fe8:	str	w21, [x19, #1376]
  403fec:	mov	x0, #0xc37f                	// #50047
  403ff0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  403ff4:	add	x1, x1, #0x55b
  403ff8:	str	x0, [x19, #1384]
  403ffc:	add	x0, x19, #0x570
  404000:	bl	4115e8 <ferror@plt+0xe018>
  404004:	mov	x0, #0x397f                	// #14719
  404008:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40400c:	movk	x0, #0x19, lsl #16
  404010:	add	x1, x1, #0x563
  404014:	str	w27, [x19, #1424]
  404018:	add	x23, x23, #0x122
  40401c:	str	x0, [x19, #1432]
  404020:	add	x0, x19, #0x5a0
  404024:	bl	4115e8 <ferror@plt+0xe018>
  404028:	str	wzr, [x19, #1472]
  40402c:	add	x0, x19, #0x5d0
  404030:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  404034:	add	x1, x1, #0x579
  404038:	str	x22, [x19, #1480]
  40403c:	bl	4115e8 <ferror@plt+0xe018>
  404040:	str	wzr, [x19, #1520]
  404044:	add	x0, x19, #0x600
  404048:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40404c:	add	x1, x1, #0x58f
  404050:	str	x22, [x19, #1528]
  404054:	bl	4115e8 <ferror@plt+0xe018>
  404058:	str	wzr, [x19, #1568]
  40405c:	add	x0, x19, #0x630
  404060:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  404064:	add	x1, x1, #0x5a5
  404068:	str	x22, [x19, #1576]
  40406c:	bl	4115e8 <ferror@plt+0xe018>
  404070:	str	wzr, [x19, #1616]
  404074:	add	x0, x19, #0x660
  404078:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40407c:	add	x1, x1, #0x5bb
  404080:	str	x22, [x19, #1624]
  404084:	bl	4115e8 <ferror@plt+0xe018>
  404088:	str	w21, [x19, #1664]
  40408c:	add	x0, x19, #0x690
  404090:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  404094:	add	x1, x1, #0x5d1
  404098:	str	x20, [x19, #1672]
  40409c:	bl	4115e8 <ferror@plt+0xe018>
  4040a0:	str	w21, [x19, #1712]
  4040a4:	add	x0, x19, #0x6c0
  4040a8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4040ac:	add	x1, x1, #0x38f
  4040b0:	str	x20, [x19, #1720]
  4040b4:	bl	4115e8 <ferror@plt+0xe018>
  4040b8:	adrp	x22, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4040bc:	mov	x1, x23
  4040c0:	add	x22, x22, #0x498
  4040c4:	add	x0, x19, #0x6f0
  4040c8:	str	wzr, [x19, #1760]
  4040cc:	str	x24, [x19, #1768]
  4040d0:	bl	4115e8 <ferror@plt+0xe018>
  4040d4:	mov	x2, x22
  4040d8:	mov	w26, #0x6                   	// #6
  4040dc:	mov	x1, #0x0                   	// #0
  4040e0:	adrp	x0, 411000 <ferror@plt+0xda30>
  4040e4:	add	x0, x0, #0x1f0
  4040e8:	str	w26, [x19, #1808]
  4040ec:	str	xzr, [x19, #1816]
  4040f0:	bl	402e30 <__cxa_atexit@plt>
  4040f4:	add	x0, x19, #0x728
  4040f8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4040fc:	add	x1, x1, #0x404
  404100:	str	wzr, [x19, #1824]
  404104:	bl	4115e8 <ferror@plt+0xe018>
  404108:	str	x24, [x19, #1864]
  40410c:	add	x0, x19, #0x758
  404110:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  404114:	add	x1, x1, #0x411
  404118:	str	w25, [x19, #1872]
  40411c:	bl	4115e8 <ferror@plt+0xe018>
  404120:	str	w21, [x19, #1920]
  404124:	mov	x0, #0x7b                  	// #123
  404128:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40412c:	add	x1, x1, #0x420
  404130:	str	x0, [x19, #1912]
  404134:	add	x0, x19, #0x788
  404138:	bl	4115e8 <ferror@plt+0xe018>
  40413c:	mov	x0, #0x17b                 	// #379
  404140:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  404144:	add	x1, x1, #0x42f
  404148:	str	x0, [x19, #1960]
  40414c:	add	x0, x19, #0x7b8
  404150:	str	w24, [x19, #1968]
  404154:	bl	4115e8 <ferror@plt+0xe018>
  404158:	str	w27, [x19, #2016]
  40415c:	mov	x0, #0x97b                 	// #2427
  404160:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  404164:	add	x1, x1, #0x43e
  404168:	str	x0, [x19, #2008]
  40416c:	add	x0, x19, #0x7e8
  404170:	bl	4115e8 <ferror@plt+0xe018>
  404174:	mov	x0, #0x297b                	// #10619
  404178:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40417c:	movk	x0, #0x19, lsl #16
  404180:	str	x0, [x19, #2056]
  404184:	mov	w0, #0x5                   	// #5
  404188:	add	x1, x1, #0x44d
  40418c:	str	w0, [x19, #2064]
  404190:	add	x0, x19, #0x818
  404194:	bl	4115e8 <ferror@plt+0xe018>
  404198:	str	w26, [x19, #2112]
  40419c:	mov	x0, #0x297b                	// #10619
  4041a0:	mov	x1, x23
  4041a4:	movk	x0, #0xe59, lsl #16
  4041a8:	str	x0, [x19, #2104]
  4041ac:	add	x0, x19, #0x848
  4041b0:	bl	4115e8 <ferror@plt+0xe018>
  4041b4:	mov	x2, x22
  4041b8:	str	xzr, [x19, #2152]
  4041bc:	ldp	x19, x20, [sp, #16]
  4041c0:	mov	x1, #0x0                   	// #0
  4041c4:	ldp	x21, x22, [sp, #32]
  4041c8:	adrp	x0, 411000 <ferror@plt+0xda30>
  4041cc:	ldp	x23, x24, [sp, #48]
  4041d0:	add	x0, x0, #0x228
  4041d4:	ldp	x25, x26, [sp, #64]
  4041d8:	ldr	x27, [sp, #80]
  4041dc:	ldp	x29, x30, [sp], #96
  4041e0:	b	402e30 <__cxa_atexit@plt>
  4041e4:	stp	x29, x30, [sp, #-32]!
  4041e8:	mov	x29, sp
  4041ec:	str	x19, [sp, #16]
  4041f0:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4041f4:	add	x19, x19, #0x50
  4041f8:	mov	x0, x19
  4041fc:	bl	41eb10 <ferror@plt+0x1b540>
  404200:	mov	x1, x19
  404204:	adrp	x2, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  404208:	ldr	x19, [sp, #16]
  40420c:	add	x2, x2, #0x498
  404210:	ldp	x29, x30, [sp], #32
  404214:	adrp	x0, 41f000 <ferror@plt+0x1ba30>
  404218:	add	x0, x0, #0x1e8
  40421c:	b	402e30 <__cxa_atexit@plt>
  404220:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  404224:	str	xzr, [x0, #592]
  404228:	ret
  40422c:	nop
  404230:	stp	x29, x30, [sp, #-32]!
  404234:	mov	x29, sp
  404238:	stp	x19, x20, [sp, #16]
  40423c:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  404240:	add	x19, x19, #0x4f8
  404244:	mov	x20, #0x1c00                	// #7168
  404248:	movk	x20, #0x1, lsl #16
  40424c:	mov	x0, x20
  404250:	stp	xzr, xzr, [x19]
  404254:	stp	xzr, xzr, [x19, #16]
  404258:	stp	xzr, xzr, [x19, #32]
  40425c:	str	x20, [x19, #64]
  404260:	bl	402f40 <malloc@plt>
  404264:	str	x0, [x19, #56]
  404268:	cbz	x0, 404280 <ferror@plt+0xcb0>
  40426c:	stp	x20, xzr, [x0]
  404270:	str	x0, [x19, #48]
  404274:	ldp	x19, x20, [sp, #16]
  404278:	ldp	x29, x30, [sp], #32
  40427c:	ret
  404280:	str	xzr, [x19, #48]
  404284:	str	xzr, [x19, #64]
  404288:	b	404274 <ferror@plt+0xca4>
  40428c:	mov	x29, #0x0                   	// #0
  404290:	mov	x30, #0x0                   	// #0
  404294:	mov	x5, x0
  404298:	ldr	x1, [sp]
  40429c:	add	x2, sp, #0x8
  4042a0:	mov	x6, sp
  4042a4:	movz	x0, #0x0, lsl #48
  4042a8:	movk	x0, #0x0, lsl #32
  4042ac:	movk	x0, #0x40, lsl #16
  4042b0:	movk	x0, #0x3c8c
  4042b4:	movz	x3, #0x0, lsl #48
  4042b8:	movk	x3, #0x0, lsl #32
  4042bc:	movk	x3, #0x47, lsl #16
  4042c0:	movk	x3, #0x63e0
  4042c4:	movz	x4, #0x0, lsl #48
  4042c8:	movk	x4, #0x0, lsl #32
  4042cc:	movk	x4, #0x47, lsl #16
  4042d0:	movk	x4, #0x6460
  4042d4:	bl	402fc0 <__libc_start_main@plt>
  4042d8:	bl	403180 <abort@plt>
  4042dc:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4042e0:	ldr	x0, [x0, #3800]
  4042e4:	cbz	x0, 4042ec <ferror@plt+0xd1c>
  4042e8:	b	403150 <__gmon_start__@plt>
  4042ec:	ret
  4042f0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4042f4:	add	x0, x0, #0x4f0
  4042f8:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4042fc:	add	x1, x1, #0x4f0
  404300:	cmp	x1, x0
  404304:	b.eq	40431c <ferror@plt+0xd4c>  // b.none
  404308:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40430c:	ldr	x1, [x1, #1224]
  404310:	cbz	x1, 40431c <ferror@plt+0xd4c>
  404314:	mov	x16, x1
  404318:	br	x16
  40431c:	ret
  404320:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404324:	add	x0, x0, #0x4f0
  404328:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40432c:	add	x1, x1, #0x4f0
  404330:	sub	x1, x1, x0
  404334:	lsr	x2, x1, #63
  404338:	add	x1, x2, x1, asr #3
  40433c:	cmp	xzr, x1, asr #1
  404340:	asr	x1, x1, #1
  404344:	b.eq	40435c <ferror@plt+0xd8c>  // b.none
  404348:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  40434c:	ldr	x2, [x2, #1232]
  404350:	cbz	x2, 40435c <ferror@plt+0xd8c>
  404354:	mov	x16, x2
  404358:	br	x16
  40435c:	ret
  404360:	stp	x29, x30, [sp, #-32]!
  404364:	mov	x29, sp
  404368:	str	x19, [sp, #16]
  40436c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404370:	ldrb	w0, [x19, #1296]
  404374:	cbnz	w0, 404384 <ferror@plt+0xdb4>
  404378:	bl	4042f0 <ferror@plt+0xd20>
  40437c:	mov	w0, #0x1                   	// #1
  404380:	strb	w0, [x19, #1296]
  404384:	ldr	x19, [sp, #16]
  404388:	ldp	x29, x30, [sp], #32
  40438c:	ret
  404390:	b	404320 <ferror@plt+0xd50>
  404394:	ldrb	w1, [x0]
  404398:	cmp	w1, #0xa
  40439c:	b.ne	4043c0 <ferror@plt+0xdf0>  // b.any
  4043a0:	ldrb	w1, [x0, #1]
  4043a4:	cmp	w1, #0xa
  4043a8:	b.ne	4043d0 <ferror@plt+0xe00>  // b.any
  4043ac:	ldrb	w1, [x0, #2]
  4043b0:	cmp	w1, #0xa
  4043b4:	b.ne	4043d0 <ferror@plt+0xe00>  // b.any
  4043b8:	add	x0, x0, #0x1
  4043bc:	ret
  4043c0:	cmp	w1, #0x20
  4043c4:	b.eq	4043d0 <ferror@plt+0xe00>  // b.none
  4043c8:	cmp	w1, #0x9
  4043cc:	b.ne	4043d8 <ferror@plt+0xe08>  // b.any
  4043d0:	add	x0, x0, #0x1
  4043d4:	b	404394 <ferror@plt+0xdc4>
  4043d8:	cmp	w1, #0x23
  4043dc:	b.ne	4043bc <ferror@plt+0xdec>  // b.any
  4043e0:	mov	x1, x0
  4043e4:	ldrb	w2, [x0, #1]!
  4043e8:	cmp	w2, #0xa
  4043ec:	b.ne	4043e0 <ferror@plt+0xe10>  // b.any
  4043f0:	add	x0, x1, #0x2
  4043f4:	b	404394 <ferror@plt+0xdc4>
  4043f8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4043fc:	ldr	x1, [x0, #1304]
  404400:	cbz	x1, 404408 <ferror@plt+0xe38>
  404404:	str	wzr, [x1, #4]
  404408:	add	x0, x0, #0x518
  40440c:	ldr	x0, [x0, #8]
  404410:	cbz	x0, 404418 <ferror@plt+0xe48>
  404414:	str	wzr, [x0, #4]
  404418:	ret
  40441c:	stp	x29, x30, [sp, #-48]!
  404420:	mov	x29, sp
  404424:	stp	x19, x20, [sp, #16]
  404428:	mov	x19, x0
  40442c:	ldr	x20, [x0]
  404430:	str	x21, [sp, #32]
  404434:	cbz	x20, 404450 <ferror@plt+0xe80>
  404438:	ldp	x0, x21, [x20]
  40443c:	bl	4032a0 <free@plt>
  404440:	mov	x0, x20
  404444:	mov	x20, x21
  404448:	bl	4032a0 <free@plt>
  40444c:	b	404434 <ferror@plt+0xe64>
  404450:	ldr	x21, [sp, #32]
  404454:	str	xzr, [x19]
  404458:	str	wzr, [x19, #8]
  40445c:	ldp	x19, x20, [sp, #16]
  404460:	ldp	x29, x30, [sp], #48
  404464:	ret
  404468:	stp	x29, x30, [sp, #-48]!
  40446c:	mov	w1, #0x0                   	// #0
  404470:	mov	x29, sp
  404474:	stp	x19, x20, [sp, #16]
  404478:	mov	x19, x0
  40447c:	mov	x0, #0x0                   	// #0
  404480:	str	x21, [sp, #32]
  404484:	ldrb	w2, [x19, x0]
  404488:	mov	w21, w0
  40448c:	cbz	w2, 4044ac <ferror@plt+0xedc>
  404490:	cmp	w2, #0x20
  404494:	b.eq	4044a0 <ferror@plt+0xed0>  // b.none
  404498:	cmp	w2, #0x9
  40449c:	b.ne	4044a4 <ferror@plt+0xed4>  // b.any
  4044a0:	add	w1, w1, #0x1
  4044a4:	add	x0, x0, #0x1
  4044a8:	b	404484 <ferror@plt+0xeb4>
  4044ac:	cbz	w1, 40450c <ferror@plt+0xf3c>
  4044b0:	add	w1, w0, w1
  4044b4:	add	w1, w1, #0x1
  4044b8:	sxtw	x0, w1
  4044bc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4044c0:	mov	x20, x0
  4044c4:	mov	w1, #0x0                   	// #0
  4044c8:	mov	x0, #0x0                   	// #0
  4044cc:	mov	w3, #0x5c                  	// #92
  4044d0:	ldrb	w2, [x19, x0]
  4044d4:	cmp	w2, #0x20
  4044d8:	b.eq	4044e4 <ferror@plt+0xf14>  // b.none
  4044dc:	cmp	w2, #0x9
  4044e0:	b.ne	4044ec <ferror@plt+0xf1c>  // b.any
  4044e4:	strb	w3, [x20, w1, sxtw]
  4044e8:	add	w1, w1, #0x1
  4044ec:	strb	w2, [x20, w1, sxtw]
  4044f0:	add	x0, x0, #0x1
  4044f4:	add	w1, w1, #0x1
  4044f8:	cmp	w21, w0
  4044fc:	b.ge	4044d0 <ferror@plt+0xf00>  // b.tcont
  404500:	mov	x0, x19
  404504:	mov	x19, x20
  404508:	bl	4032a0 <free@plt>
  40450c:	mov	x0, x19
  404510:	ldp	x19, x20, [sp, #16]
  404514:	ldr	x21, [sp, #32]
  404518:	ldp	x29, x30, [sp], #48
  40451c:	ret
  404520:	cmp	w0, #0x1
  404524:	b.ne	404630 <ferror@plt+0x1060>  // b.any
  404528:	stp	x29, x30, [sp, #-32]!
  40452c:	mov	x29, sp
  404530:	str	x19, [sp, #16]
  404534:	ldr	x19, [x1]
  404538:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40453c:	add	x1, x1, #0xeeb
  404540:	mov	x0, x19
  404544:	bl	403220 <strcmp@plt>
  404548:	cbnz	w0, 404570 <ferror@plt+0xfa0>
  40454c:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  404550:	ldr	w1, [x0, #772]
  404554:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  404558:	tst	x1, #0x2
  40455c:	add	x0, x0, #0x122
  404560:	csel	x0, x0, xzr, ne  // ne = any
  404564:	ldr	x19, [sp, #16]
  404568:	ldp	x29, x30, [sp], #32
  40456c:	ret
  404570:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404574:	mov	x0, x19
  404578:	add	x1, x1, #0x4d8
  40457c:	bl	403220 <strcmp@plt>
  404580:	cbnz	w0, 404598 <ferror@plt+0xfc8>
  404584:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  404588:	ldr	w1, [x0, #772]
  40458c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  404590:	tst	x1, #0x4
  404594:	b	40455c <ferror@plt+0xf8c>
  404598:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x25c10>
  40459c:	mov	x0, x19
  4045a0:	add	x1, x1, #0x653
  4045a4:	bl	403220 <strcmp@plt>
  4045a8:	cbnz	w0, 4045c0 <ferror@plt+0xff0>
  4045ac:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4045b0:	ldr	w1, [x0, #772]
  4045b4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4045b8:	tst	x1, #0x8
  4045bc:	b	40455c <ferror@plt+0xf8c>
  4045c0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4045c4:	mov	x0, x19
  4045c8:	add	x1, x1, #0x4e7
  4045cc:	bl	403220 <strcmp@plt>
  4045d0:	cbnz	w0, 404600 <ferror@plt+0x1030>
  4045d4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4045d8:	add	x0, x0, #0x230
  4045dc:	ldr	w1, [x0, #212]
  4045e0:	tst	w1, #0x3ffffe0
  4045e4:	b.eq	404638 <ferror@plt+0x1068>  // b.none
  4045e8:	ldr	w1, [x0, #2908]
  4045ec:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4045f0:	cmp	w1, #0x0
  4045f4:	add	x0, x0, #0x122
  4045f8:	csel	x0, x0, xzr, eq  // eq = none
  4045fc:	b	404564 <ferror@plt+0xf94>
  404600:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404604:	mov	x0, x19
  404608:	add	x1, x1, #0x4f1
  40460c:	bl	403220 <strcmp@plt>
  404610:	cbnz	w0, 404638 <ferror@plt+0x1068>
  404614:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  404618:	ldr	w1, [x0, #772]
  40461c:	mov	w0, #0x19                  	// #25
  404620:	and	w1, w1, w0
  404624:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  404628:	cmp	w1, #0x10
  40462c:	b	4045f4 <ferror@plt+0x1024>
  404630:	mov	x0, #0x0                   	// #0
  404634:	ret
  404638:	mov	x0, #0x0                   	// #0
  40463c:	b	404564 <ferror@plt+0xf94>
  404640:	stp	x29, x30, [sp, #-48]!
  404644:	mov	x29, sp
  404648:	stp	x19, x20, [sp, #16]
  40464c:	sxtw	x19, w1
  404650:	str	x21, [sp, #32]
  404654:	mov	x21, x0
  404658:	add	w0, w19, #0x1
  40465c:	sxtw	x0, w0
  404660:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  404664:	mov	x20, x0
  404668:	mov	x2, x19
  40466c:	mov	x1, x21
  404670:	bl	402cd0 <memcpy@plt>
  404674:	mov	x0, x20
  404678:	strb	wzr, [x20, x19]
  40467c:	ldp	x19, x20, [sp, #16]
  404680:	ldr	x21, [sp, #32]
  404684:	ldp	x29, x30, [sp], #48
  404688:	ret
  40468c:	stp	x29, x30, [sp, #-160]!
  404690:	cmp	w1, #0x1
  404694:	mov	x29, sp
  404698:	stp	x19, x20, [sp, #16]
  40469c:	mov	x20, x0
  4046a0:	mov	w19, w1
  4046a4:	b.ne	4046d4 <ferror@plt+0x1104>  // b.any
  4046a8:	add	x1, sp, #0x20
  4046ac:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  4046b0:	tbnz	w0, #31, 4046c4 <ferror@plt+0x10f4>
  4046b4:	ldr	w0, [sp, #48]
  4046b8:	and	w0, w0, #0xf000
  4046bc:	cmp	w0, #0x4, lsl #12
  4046c0:	b.ne	4046d4 <ferror@plt+0x1104>  // b.any
  4046c4:	mov	w0, #0xffffffff            	// #-1
  4046c8:	ldp	x19, x20, [sp, #16]
  4046cc:	ldp	x29, x30, [sp], #160
  4046d0:	ret
  4046d4:	mov	w1, w19
  4046d8:	mov	x0, x20
  4046dc:	bl	403190 <access@plt>
  4046e0:	b	4046c8 <ferror@plt+0x10f8>
  4046e4:	cmp	w0, #0x2
  4046e8:	b.ne	404730 <ferror@plt+0x1160>  // b.any
  4046ec:	stp	x29, x30, [sp, #-32]!
  4046f0:	mov	x29, sp
  4046f4:	ldr	x0, [x1]
  4046f8:	str	x19, [sp, #16]
  4046fc:	mov	x19, x1
  404700:	ldrb	w1, [x0]
  404704:	cmp	w1, #0x2f
  404708:	b.ne	404728 <ferror@plt+0x1158>  // b.any
  40470c:	mov	w1, #0x4                   	// #4
  404710:	bl	403190 <access@plt>
  404714:	cbnz	w0, 404728 <ferror@plt+0x1158>
  404718:	ldr	x0, [x19]
  40471c:	ldr	x19, [sp, #16]
  404720:	ldp	x29, x30, [sp], #32
  404724:	ret
  404728:	ldr	x0, [x19, #8]
  40472c:	b	40471c <ferror@plt+0x114c>
  404730:	mov	x0, #0x0                   	// #0
  404734:	ret
  404738:	stp	x29, x30, [sp, #-80]!
  40473c:	mov	x29, sp
  404740:	stp	x21, x22, [sp, #32]
  404744:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404748:	add	x21, x21, #0x518
  40474c:	stp	x19, x20, [sp, #16]
  404750:	mov	w19, w0
  404754:	mov	w0, #0x18                  	// #24
  404758:	stp	x23, x24, [sp, #48]
  40475c:	smull	x0, w19, w0
  404760:	ldr	x23, [x21, #16]
  404764:	add	x20, x23, x0
  404768:	ldr	w2, [x20, #16]
  40476c:	str	x25, [sp, #64]
  404770:	cbz	w2, 40479c <ferror@plt+0x11cc>
  404774:	mov	w0, #0xb                   	// #11
  404778:	and	w2, w2, w0
  40477c:	cmp	w2, #0x1
  404780:	cset	w0, eq  // eq = none
  404784:	ldp	x19, x20, [sp, #16]
  404788:	ldp	x21, x22, [sp, #32]
  40478c:	ldp	x23, x24, [sp, #48]
  404790:	ldr	x25, [sp, #64]
  404794:	ldp	x29, x30, [sp], #80
  404798:	ret
  40479c:	cmp	w1, #0x1
  4047a0:	b.ls	40490c <ferror@plt+0x133c>  // b.plast
  4047a4:	ldr	x24, [x23, x0]
  4047a8:	ldrb	w22, [x24]
  4047ac:	cmp	w22, #0x57
  4047b0:	b.eq	4047dc <ferror@plt+0x120c>  // b.none
  4047b4:	b.hi	4047cc <ferror@plt+0x11fc>  // b.pmore
  4047b8:	cmp	w22, #0x4f
  4047bc:	b.eq	40486c <ferror@plt+0x129c>  // b.none
  4047c0:	mov	w0, #0x1                   	// #1
  4047c4:	str	w0, [x20, #16]
  4047c8:	b	404784 <ferror@plt+0x11b4>
  4047cc:	cmp	w22, #0x67
  4047d0:	b.hi	404860 <ferror@plt+0x1290>  // b.pmore
  4047d4:	cmp	w22, #0x65
  4047d8:	b.ls	4047c0 <ferror@plt+0x11f0>  // b.plast
  4047dc:	add	w19, w19, #0x1
  4047e0:	add	x25, x24, #0x1
  4047e4:	mov	x0, x25
  4047e8:	mov	x2, #0x3                   	// #3
  4047ec:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4047f0:	sxtw	x19, w19
  4047f4:	add	x1, x1, #0xd12
  4047f8:	bl	402f80 <strncmp@plt>
  4047fc:	ldr	w21, [x21, #24]
  404800:	cbz	w0, 4048b4 <ferror@plt+0x12e4>
  404804:	mov	x24, #0x18                  	// #24
  404808:	cmp	w21, w19
  40480c:	b.le	4047c0 <ferror@plt+0x11f0>
  404810:	mul	x0, x19, x24
  404814:	ldr	x0, [x23, x0]
  404818:	ldrb	w1, [x0]
  40481c:	cmp	w1, w22
  404820:	b.ne	404858 <ferror@plt+0x1288>  // b.any
  404824:	ldrb	w1, [x0, #1]
  404828:	cmp	w1, #0x6e
  40482c:	b.ne	404858 <ferror@plt+0x1288>  // b.any
  404830:	ldrb	w1, [x0, #2]
  404834:	cmp	w1, #0x6f
  404838:	b.ne	404858 <ferror@plt+0x1288>  // b.any
  40483c:	ldrb	w1, [x0, #3]
  404840:	cmp	w1, #0x2d
  404844:	b.ne	404858 <ferror@plt+0x1288>  // b.any
  404848:	mov	x1, x25
  40484c:	add	x0, x0, #0x4
  404850:	bl	403220 <strcmp@plt>
  404854:	cbz	w0, 4048e8 <ferror@plt+0x1318>
  404858:	add	x19, x19, #0x1
  40485c:	b	404808 <ferror@plt+0x1238>
  404860:	cmp	w22, #0x6d
  404864:	b.eq	4047dc <ferror@plt+0x120c>  // b.none
  404868:	b	4047c0 <ferror@plt+0x11f0>
  40486c:	add	w0, w19, #0x1
  404870:	ldr	w3, [x21, #24]
  404874:	mov	x2, #0x18                  	// #24
  404878:	sxtw	x0, w0
  40487c:	cmp	w3, w0
  404880:	b.le	4047c0 <ferror@plt+0x11f0>
  404884:	mul	x1, x0, x2
  404888:	add	x0, x0, #0x1
  40488c:	ldr	x1, [x23, x1]
  404890:	ldrb	w1, [x1]
  404894:	cmp	w1, #0x4f
  404898:	b.ne	40487c <ferror@plt+0x12ac>  // b.any
  40489c:	mov	w0, #0x1                   	// #1
  4048a0:	strb	w0, [x20, #21]
  4048a4:	mov	w0, #0x2                   	// #2
  4048a8:	str	w0, [x20, #16]
  4048ac:	mov	w0, #0x0                   	// #0
  4048b0:	b	404784 <ferror@plt+0x11b4>
  4048b4:	add	x24, x24, #0x4
  4048b8:	mov	x25, #0x18                  	// #24
  4048bc:	cmp	w21, w19
  4048c0:	b.le	4047c0 <ferror@plt+0x11f0>
  4048c4:	mul	x0, x19, x25
  4048c8:	ldr	x0, [x23, x0]
  4048cc:	ldrb	w1, [x0]
  4048d0:	cmp	w1, w22
  4048d4:	b.ne	404904 <ferror@plt+0x1334>  // b.any
  4048d8:	mov	x1, x24
  4048dc:	add	x0, x0, #0x1
  4048e0:	bl	403220 <strcmp@plt>
  4048e4:	cbnz	w0, 404904 <ferror@plt+0x1334>
  4048e8:	ldrb	w1, [x20, #20]
  4048ec:	cbz	w1, 4048f8 <ferror@plt+0x1328>
  4048f0:	mov	w1, #0x1                   	// #1
  4048f4:	strb	w1, [x20, #21]
  4048f8:	mov	w1, #0x2                   	// #2
  4048fc:	str	w1, [x20, #16]
  404900:	b	404784 <ferror@plt+0x11b4>
  404904:	add	x19, x19, #0x1
  404908:	b	4048bc <ferror@plt+0x12ec>
  40490c:	mov	w0, #0x1                   	// #1
  404910:	b	404784 <ferror@plt+0x11b4>
  404914:	stp	x29, x30, [sp, #-112]!
  404918:	cmp	w2, #0x0
  40491c:	mov	x29, sp
  404920:	stp	x19, x20, [sp, #16]
  404924:	sub	x19, x1, x0
  404928:	mov	x20, x0
  40492c:	stp	x25, x26, [sp, #64]
  404930:	sxtw	x26, w19
  404934:	adrp	x25, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404938:	stp	x21, x22, [sp, #32]
  40493c:	sub	w22, w26, #0x1
  404940:	mov	w21, w2
  404944:	add	x25, x25, #0x518
  404948:	sxtw	x22, w22
  40494c:	stp	x23, x24, [sp, #48]
  404950:	mov	w24, #0xffffffff            	// #-1
  404954:	csel	w0, w19, w24, ne  // ne = any
  404958:	csinc	w24, w24, wzr, eq  // eq = none
  40495c:	mov	x23, #0x0                   	// #0
  404960:	stp	x27, x28, [sp, #80]
  404964:	str	w0, [sp, #100]
  404968:	ldr	w0, [x25, #24]
  40496c:	mov	w27, w23
  404970:	cmp	w0, w23
  404974:	b.le	404a64 <ferror@plt+0x1494>
  404978:	mov	x0, #0x18                  	// #24
  40497c:	mov	x2, x26
  404980:	ldr	x19, [x25, #16]
  404984:	mul	x28, x23, x0
  404988:	mov	x1, x20
  40498c:	ldr	x5, [x19, x28]
  404990:	str	x5, [sp, #104]
  404994:	mov	x0, x5
  404998:	bl	402f80 <strncmp@plt>
  40499c:	ldr	x5, [sp, #104]
  4049a0:	cbz	w0, 4049b8 <ferror@plt+0x13e8>
  4049a4:	add	x0, x19, x28
  4049a8:	ldr	x1, [x0, #8]
  4049ac:	cbnz	x1, 4049f4 <ferror@plt+0x1424>
  4049b0:	add	x23, x23, #0x1
  4049b4:	b	404968 <ferror@plt+0x1398>
  4049b8:	cbnz	w21, 4049c4 <ferror@plt+0x13f4>
  4049bc:	ldrb	w0, [x5, x26]
  4049c0:	cbnz	w0, 4049a4 <ferror@plt+0x13d4>
  4049c4:	ldr	w1, [sp, #100]
  4049c8:	mov	w0, w27
  4049cc:	bl	404738 <ferror@plt+0x1168>
  4049d0:	cbz	w0, 4049a4 <ferror@plt+0x13d4>
  4049d4:	mov	w0, #0x1                   	// #1
  4049d8:	ldp	x19, x20, [sp, #16]
  4049dc:	ldp	x21, x22, [sp, #32]
  4049e0:	ldp	x23, x24, [sp, #48]
  4049e4:	ldp	x25, x26, [sp, #64]
  4049e8:	ldp	x27, x28, [sp, #80]
  4049ec:	ldp	x29, x30, [sp], #112
  4049f0:	ret
  4049f4:	ldr	x3, [x19, x28]
  4049f8:	mov	w2, #0x55                  	// #85
  4049fc:	ldrb	w0, [x3]
  404a00:	cmp	w0, #0x44
  404a04:	ccmp	w0, w2, #0x4, ne  // ne = any
  404a08:	b.ne	4049b0 <ferror@plt+0x13e0>  // b.any
  404a0c:	ldrb	w2, [x20]
  404a10:	cmp	w2, w0
  404a14:	b.ne	4049b0 <ferror@plt+0x13e0>  // b.any
  404a18:	ldr	x28, [x1]
  404a1c:	mov	x2, x22
  404a20:	add	x1, x20, #0x1
  404a24:	str	x3, [sp, #104]
  404a28:	mov	x0, x28
  404a2c:	bl	402f80 <strncmp@plt>
  404a30:	cbnz	w0, 4049b0 <ferror@plt+0x13e0>
  404a34:	cbnz	w21, 404a50 <ferror@plt+0x1480>
  404a38:	ldr	x3, [sp, #104]
  404a3c:	ldrb	w0, [x3, #1]
  404a40:	cbnz	w0, 4049b0 <ferror@plt+0x13e0>
  404a44:	add	x28, x28, x26
  404a48:	ldurb	w0, [x28, #-1]
  404a4c:	cbnz	w0, 4049b0 <ferror@plt+0x13e0>
  404a50:	mov	w1, w24
  404a54:	mov	w0, w27
  404a58:	bl	404738 <ferror@plt+0x1168>
  404a5c:	cbz	w0, 4049b0 <ferror@plt+0x13e0>
  404a60:	b	4049d4 <ferror@plt+0x1404>
  404a64:	mov	w0, #0x0                   	// #0
  404a68:	b	4049d8 <ferror@plt+0x1408>
  404a6c:	stp	x29, x30, [sp, #-48]!
  404a70:	adrp	x1, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  404a74:	mov	x29, sp
  404a78:	ldr	x2, [x1, #1184]
  404a7c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404a80:	add	x1, x1, #0x4f6
  404a84:	stp	x19, x20, [sp, #16]
  404a88:	mov	x19, x0
  404a8c:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  404a90:	add	x20, x20, #0x830
  404a94:	stp	x21, x22, [sp, #32]
  404a98:	bl	421398 <ferror@plt+0x1ddc8>
  404a9c:	mov	x2, x20
  404aa0:	mov	x0, x19
  404aa4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404aa8:	add	x1, x1, #0x502
  404aac:	bl	421398 <ferror@plt+0x1ddc8>
  404ab0:	add	x2, x20, #0x6e
  404ab4:	mov	x0, x19
  404ab8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404abc:	adrp	x20, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  404ac0:	add	x1, x1, #0x517
  404ac4:	add	x20, x20, #0x277
  404ac8:	bl	421398 <ferror@plt+0x1ddc8>
  404acc:	mov	x0, #0x0                   	// #0
  404ad0:	ldrb	w2, [x0, x20]
  404ad4:	sxtw	x21, w0
  404ad8:	mov	w1, #0xdf                  	// #223
  404adc:	add	x0, x0, #0x1
  404ae0:	tst	w2, w1
  404ae4:	b.ne	404ad0 <ferror@plt+0x1500>  // b.any
  404ae8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404aec:	mov	x2, x21
  404af0:	ldr	x22, [x0, #1336]
  404af4:	mov	x0, x20
  404af8:	mov	x1, x22
  404afc:	bl	402f80 <strncmp@plt>
  404b00:	adrp	x3, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  404b04:	add	x3, x3, #0x270
  404b08:	cbnz	w0, 404b34 <ferror@plt+0x1564>
  404b0c:	ldrb	w0, [x22, x21]
  404b10:	cbnz	w0, 404b34 <ferror@plt+0x1564>
  404b14:	mov	x2, x20
  404b18:	mov	x0, x19
  404b1c:	ldp	x19, x20, [sp, #16]
  404b20:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404b24:	ldp	x21, x22, [sp, #32]
  404b28:	add	x1, x1, #0x529
  404b2c:	ldp	x29, x30, [sp], #48
  404b30:	b	421398 <ferror@plt+0x1ddc8>
  404b34:	mov	x4, x22
  404b38:	mov	x2, x20
  404b3c:	mov	x0, x19
  404b40:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  404b44:	ldp	x19, x20, [sp, #16]
  404b48:	add	x1, x1, #0x53c
  404b4c:	ldp	x21, x22, [sp, #32]
  404b50:	ldp	x29, x30, [sp], #48
  404b54:	b	421398 <ferror@plt+0x1ddc8>
  404b58:	stp	x29, x30, [sp, #-128]!
  404b5c:	mov	x29, sp
  404b60:	stp	x19, x20, [sp, #16]
  404b64:	mov	x19, x0
  404b68:	and	w20, w1, #0xff
  404b6c:	stp	x21, x22, [sp, #32]
  404b70:	adrp	x21, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  404b74:	add	x21, x21, #0x228
  404b78:	stp	x25, x26, [sp, #64]
  404b7c:	mov	x25, #0xf                   	// #15
  404b80:	mov	w22, #0x0                   	// #0
  404b84:	movk	x25, #0x24, lsl #16
  404b88:	stp	x23, x24, [sp, #48]
  404b8c:	mov	w23, #0x0                   	// #0
  404b90:	mov	w24, #0x204                 	// #516
  404b94:	stp	x27, x28, [sp, #80]
  404b98:	ldrb	w0, [x19]
  404b9c:	cmp	w0, #0x20
  404ba0:	b.eq	404bac <ferror@plt+0x15dc>  // b.none
  404ba4:	cmp	w0, #0x9
  404ba8:	b.ne	404bb8 <ferror@plt+0x15e8>  // b.any
  404bac:	add	x0, x19, #0x1
  404bb0:	mov	x19, x0
  404bb4:	b	404b98 <ferror@plt+0x15c8>
  404bb8:	cmp	w0, #0x21
  404bbc:	b.ne	404bc4 <ferror@plt+0x15f4>  // b.any
  404bc0:	add	x19, x19, #0x1
  404bc4:	ldrb	w0, [x19]
  404bc8:	cmp	w0, #0x20
  404bcc:	b.eq	404bc0 <ferror@plt+0x15f0>  // b.none
  404bd0:	cmp	w0, #0x9
  404bd4:	b.eq	404bc0 <ferror@plt+0x15f0>  // b.none
  404bd8:	and	w0, w0, #0xfffffffd
  404bdc:	cmp	w0, #0x2c
  404be0:	b.ne	404bec <ferror@plt+0x161c>  // b.any
  404be4:	add	x19, x19, #0x1
  404be8:	mov	w23, #0x1                   	// #1
  404bec:	mov	x2, x19
  404bf0:	ldrb	w0, [x2]
  404bf4:	ldrb	w1, [x2]
  404bf8:	ldrh	w0, [x21, x0, lsl #1]
  404bfc:	tst	w24, w0
  404c00:	b.ne	404c2c <ferror@plt+0x165c>  // b.any
  404c04:	sub	w0, w1, #0x2b
  404c08:	and	w0, w0, #0xff
  404c0c:	cmp	w0, #0x15
  404c10:	b.ls	404c24 <ferror@plt+0x1654>  // b.plast
  404c14:	cmp	w1, #0x2a
  404c18:	b.eq	404c34 <ferror@plt+0x1664>  // b.none
  404c1c:	mov	x27, x2
  404c20:	b	404c3c <ferror@plt+0x166c>
  404c24:	lsr	x0, x25, x0
  404c28:	tbz	w0, #0, 404c1c <ferror@plt+0x164c>
  404c2c:	add	x2, x2, #0x1
  404c30:	b	404bf0 <ferror@plt+0x1620>
  404c34:	add	x27, x2, #0x1
  404c38:	mov	w22, #0x1                   	// #1
  404c3c:	ldrb	w0, [x27]
  404c40:	cmp	w0, #0x20
  404c44:	b.eq	404c50 <ferror@plt+0x1680>  // b.none
  404c48:	cmp	w0, #0x9
  404c4c:	b.ne	404c58 <ferror@plt+0x1688>  // b.any
  404c50:	add	x27, x27, #0x1
  404c54:	b	404c3c <ferror@plt+0x166c>
  404c58:	cbnz	w23, 404cd8 <ferror@plt+0x1708>
  404c5c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404c60:	add	x0, x0, #0x518
  404c64:	sub	x26, x2, x19
  404c68:	mov	w3, #0x0                   	// #0
  404c6c:	mov	w6, #0x1                   	// #1
  404c70:	ldr	w5, [x0, #24]
  404c74:	ldr	x28, [x0, #16]
  404c78:	stp	w5, w3, [sp, #116]
  404c7c:	str	w6, [sp, #124]
  404c80:	cmp	w5, w3
  404c84:	b.le	404cd8 <ferror@plt+0x1708>
  404c88:	ldr	x4, [x28]
  404c8c:	mov	x2, x26
  404c90:	mov	x1, x19
  404c94:	str	x4, [sp, #104]
  404c98:	mov	x0, x4
  404c9c:	bl	402f80 <strncmp@plt>
  404ca0:	ldp	w5, w3, [sp, #116]
  404ca4:	ldr	w6, [sp, #124]
  404ca8:	cbnz	w0, 404ccc <ferror@plt+0x16fc>
  404cac:	cbnz	w22, 404cbc <ferror@plt+0x16ec>
  404cb0:	ldr	x4, [sp, #104]
  404cb4:	ldrb	w0, [x4, x26]
  404cb8:	cbnz	w0, 404ccc <ferror@plt+0x16fc>
  404cbc:	ldrb	w0, [x28, #20]
  404cc0:	cbnz	w0, 404cc8 <ferror@plt+0x16f8>
  404cc4:	cbz	w20, 404ccc <ferror@plt+0x16fc>
  404cc8:	strb	w6, [x28, #21]
  404ccc:	add	w3, w3, #0x1
  404cd0:	add	x28, x28, #0x18
  404cd4:	b	404c78 <ferror@plt+0x16a8>
  404cd8:	ldrb	w1, [x27]
  404cdc:	cbz	w1, 404db0 <ferror@plt+0x17e0>
  404ce0:	ldrb	w2, [x27, #1]
  404ce4:	add	x0, x27, #0x1
  404ce8:	cbz	w2, 404d04 <ferror@plt+0x1734>
  404cec:	cmp	w1, #0x7c
  404cf0:	b.eq	404bb0 <ferror@plt+0x15e0>  // b.none
  404cf4:	cmp	w1, #0x26
  404cf8:	b.eq	404bb0 <ferror@plt+0x15e0>  // b.none
  404cfc:	cmp	w1, #0x3a
  404d00:	b.eq	404d48 <ferror@plt+0x1778>  // b.none
  404d04:	ldp	x19, x20, [sp, #16]
  404d08:	ldp	x21, x22, [sp, #32]
  404d0c:	ldp	x23, x24, [sp, #48]
  404d10:	ldp	x25, x26, [sp, #64]
  404d14:	ldp	x27, x28, [sp, #80]
  404d18:	ldp	x29, x30, [sp], #128
  404d1c:	ret
  404d20:	cmp	w1, #0x57
  404d24:	b.ne	404d40 <ferror@plt+0x1770>  // b.any
  404d28:	ldrb	w1, [x2, #2]
  404d2c:	cmp	w1, #0x7b
  404d30:	b.ne	404d48 <ferror@plt+0x1778>  // b.any
  404d34:	mov	w1, w20
  404d38:	add	x0, x2, #0x3
  404d3c:	b	404d8c <ferror@plt+0x17bc>
  404d40:	cmp	w1, #0x40
  404d44:	b.eq	404d28 <ferror@plt+0x1758>  // b.none
  404d48:	ldrb	w1, [x0]
  404d4c:	mov	x2, x0
  404d50:	cmp	w1, #0x3b
  404d54:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404d58:	b.eq	404d94 <ferror@plt+0x17c4>  // b.none
  404d5c:	add	x0, x0, #0x1
  404d60:	cmp	w1, #0x7d
  404d64:	b.eq	404d98 <ferror@plt+0x17c8>  // b.none
  404d68:	cmp	w1, #0x25
  404d6c:	b.ne	404d48 <ferror@plt+0x1778>  // b.any
  404d70:	ldrb	w1, [x2, #1]
  404d74:	cmp	w1, #0x7b
  404d78:	b.eq	404d84 <ferror@plt+0x17b4>  // b.none
  404d7c:	cmp	w1, #0x3c
  404d80:	b.ne	404d20 <ferror@plt+0x1750>  // b.any
  404d84:	mov	w1, w20
  404d88:	add	x0, x2, #0x2
  404d8c:	bl	404b58 <ferror@plt+0x1588>
  404d90:	b	404d48 <ferror@plt+0x1778>
  404d94:	cbz	w1, 404d04 <ferror@plt+0x1734>
  404d98:	add	x0, x2, #0x1
  404d9c:	ldrb	w2, [x2, #1]
  404da0:	cbz	w2, 404d04 <ferror@plt+0x1734>
  404da4:	cmp	w1, #0x3b
  404da8:	b.eq	404bb0 <ferror@plt+0x15e0>  // b.none
  404dac:	b	404d04 <ferror@plt+0x1734>
  404db0:	mov	x0, x27
  404db4:	b	404d04 <ferror@plt+0x1734>
  404db8:	stp	x29, x30, [sp, #-32]!
  404dbc:	mov	x29, sp
  404dc0:	stp	x19, x20, [sp, #16]
  404dc4:	and	w19, w1, #0xff
  404dc8:	mov	w20, #0x3c                  	// #60
  404dcc:	mov	x1, x0
  404dd0:	ldrb	w2, [x0], #1
  404dd4:	cbz	w2, 404e40 <ferror@plt+0x1870>
  404dd8:	cmp	w2, #0x25
  404ddc:	b.ne	404dcc <ferror@plt+0x17fc>  // b.any
  404de0:	ldrb	w2, [x1, #1]
  404de4:	cmp	w2, #0x7b
  404de8:	ccmp	w2, w20, #0x4, ne  // ne = any
  404dec:	b.eq	404e28 <ferror@plt+0x1858>  // b.none
  404df0:	cmp	w2, #0x57
  404df4:	b.ne	404e08 <ferror@plt+0x1838>  // b.any
  404df8:	add	x0, x1, #0x2
  404dfc:	ldrb	w1, [x1, #2]
  404e00:	cmp	w1, #0x7b
  404e04:	b.eq	404e28 <ferror@plt+0x1858>  // b.none
  404e08:	ldrb	w2, [x0]
  404e0c:	mov	x1, x0
  404e10:	cmp	w2, #0x40
  404e14:	b.ne	404e38 <ferror@plt+0x1868>  // b.any
  404e18:	ldrb	w1, [x1, #1]
  404e1c:	add	x0, x0, #0x1
  404e20:	cmp	w1, #0x7b
  404e24:	b.ne	404e34 <ferror@plt+0x1864>  // b.any
  404e28:	mov	w1, w19
  404e2c:	add	x0, x0, #0x1
  404e30:	bl	404b58 <ferror@plt+0x1588>
  404e34:	mov	x1, x0
  404e38:	mov	x0, x1
  404e3c:	b	404dcc <ferror@plt+0x17fc>
  404e40:	ldp	x19, x20, [sp, #16]
  404e44:	ldp	x29, x30, [sp], #32
  404e48:	ret
  404e4c:	stp	x29, x30, [sp, #-64]!
  404e50:	mov	x29, sp
  404e54:	stp	x23, x24, [sp, #48]
  404e58:	sxtw	x24, w1
  404e5c:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404e60:	add	x1, x1, #0x518
  404e64:	stp	x19, x20, [sp, #16]
  404e68:	mov	x20, x24
  404e6c:	stp	x21, x22, [sp, #32]
  404e70:	mov	x22, x0
  404e74:	ldr	w23, [x1, #40]
  404e78:	ldr	x19, [x1, #48]
  404e7c:	mov	w21, #0x0                   	// #0
  404e80:	cmp	w23, w21
  404e84:	b.le	404eb4 <ferror@plt+0x18e4>
  404e88:	ldr	w0, [x19, #8]
  404e8c:	cmp	w0, w20
  404e90:	b.ne	404ea8 <ferror@plt+0x18d8>  // b.any
  404e94:	ldr	x1, [x19]
  404e98:	mov	x2, x24
  404e9c:	mov	x0, x22
  404ea0:	bl	402f80 <strncmp@plt>
  404ea4:	cbz	w0, 404ecc <ferror@plt+0x18fc>
  404ea8:	add	w21, w21, #0x1
  404eac:	add	x19, x19, #0x10
  404eb0:	b	404e80 <ferror@plt+0x18b0>
  404eb4:	mov	w0, #0x0                   	// #0
  404eb8:	ldp	x19, x20, [sp, #16]
  404ebc:	ldp	x21, x22, [sp, #32]
  404ec0:	ldp	x23, x24, [sp, #48]
  404ec4:	ldp	x29, x30, [sp], #64
  404ec8:	ret
  404ecc:	mov	w0, #0x1                   	// #1
  404ed0:	b	404eb8 <ferror@plt+0x18e8>
  404ed4:	stp	x29, x30, [sp, #-192]!
  404ed8:	tst	w1, #0xff
  404edc:	mov	x29, sp
  404ee0:	stp	x21, x22, [sp, #32]
  404ee4:	adrp	x22, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  404ee8:	add	x22, x22, #0x518
  404eec:	stp	x19, x20, [sp, #16]
  404ef0:	stp	x23, x24, [sp, #48]
  404ef4:	stp	x25, x26, [sp, #64]
  404ef8:	stp	x27, x28, [sp, #80]
  404efc:	stp	x3, x4, [sp, #120]
  404f00:	str	x0, [sp, #152]
  404f04:	add	x0, x2, #0x1
  404f08:	str	x0, [sp, #168]
  404f0c:	ldp	x23, x24, [x22, #56]
  404f10:	b.eq	404fe4 <ferror@plt+0x1a14>  // b.none
  404f14:	ldr	x19, [x22, #72]
  404f18:	cbz	x19, 404f74 <ferror@plt+0x19a4>
  404f1c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  404f20:	mov	x0, x19
  404f24:	add	x1, x1, #0x66b
  404f28:	bl	403220 <strcmp@plt>
  404f2c:	cbz	w0, 405280 <ferror@plt+0x1cb0>
  404f30:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  404f34:	add	x1, x1, #0x830
  404f38:	add	x1, x1, #0x74
  404f3c:	mov	x0, x19
  404f40:	mov	x2, #0x0                   	// #0
  404f44:	bl	45a668 <ferror@plt+0x57098>
  404f48:	mov	x2, #0x0                   	// #0
  404f4c:	mov	x1, x0
  404f50:	mov	x19, x0
  404f54:	mov	x0, x23
  404f58:	bl	45a668 <ferror@plt+0x57098>
  404f5c:	mov	x23, x0
  404f60:	mov	x1, x19
  404f64:	mov	x0, x24
  404f68:	mov	x2, #0x0                   	// #0
  404f6c:	bl	45a668 <ferror@plt+0x57098>
  404f70:	mov	x24, x0
  404f74:	ldr	x20, [x22, #88]
  404f78:	cbz	x20, 404fac <ferror@plt+0x19dc>
  404f7c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  404f80:	mov	x0, x20
  404f84:	add	x1, x1, #0x66b
  404f88:	bl	403220 <strcmp@plt>
  404f8c:	cbz	w0, 404fe8 <ferror@plt+0x1a18>
  404f90:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  404f94:	add	x1, x1, #0x830
  404f98:	mov	x0, x20
  404f9c:	add	x1, x1, #0x74
  404fa0:	mov	x2, #0x0                   	// #0
  404fa4:	bl	45a668 <ferror@plt+0x57098>
  404fa8:	mov	x20, x0
  404fac:	ldr	x25, [x22, #80]
  404fb0:	cbz	x25, 404fd0 <ferror@plt+0x1a00>
  404fb4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  404fb8:	add	x1, x1, #0x830
  404fbc:	mov	x0, x25
  404fc0:	add	x1, x1, #0x74
  404fc4:	mov	x2, #0x0                   	// #0
  404fc8:	bl	45a668 <ferror@plt+0x57098>
  404fcc:	mov	x25, x0
  404fd0:	stp	wzr, wzr, [sp, #136]
  404fd4:	mov	x21, #0x0                   	// #0
  404fd8:	cbnz	x19, 405004 <ferror@plt+0x1a34>
  404fdc:	str	xzr, [sp, #144]
  404fe0:	b	405010 <ferror@plt+0x1a40>
  404fe4:	mov	x19, #0x0                   	// #0
  404fe8:	mov	x20, #0x0                   	// #0
  404fec:	b	404fac <ferror@plt+0x19dc>
  404ff0:	mov	w0, #0x1                   	// #1
  404ff4:	str	w0, [sp, #140]
  404ff8:	mov	x20, #0x0                   	// #0
  404ffc:	mov	x19, #0x0                   	// #0
  405000:	b	404fdc <ferror@plt+0x1a0c>
  405004:	mov	x0, x19
  405008:	bl	402d50 <strlen@plt>
  40500c:	str	x0, [sp, #144]
  405010:	cbz	x20, 4050cc <ferror@plt+0x1afc>
  405014:	mov	x0, x20
  405018:	bl	402d50 <strlen@plt>
  40501c:	str	x0, [sp, #104]
  405020:	cbz	x25, 4050d4 <ferror@plt+0x1b04>
  405024:	mov	x0, x25
  405028:	bl	402d50 <strlen@plt>
  40502c:	str	x0, [sp, #112]
  405030:	mov	x0, x23
  405034:	bl	402d50 <strlen@plt>
  405038:	mov	x28, x0
  40503c:	mov	x0, x24
  405040:	bl	402d50 <strlen@plt>
  405044:	str	x0, [sp, #160]
  405048:	cbnz	x21, 405080 <ferror@plt+0x1ab0>
  40504c:	ldr	x0, [sp, #152]
  405050:	ldr	x1, [sp, #168]
  405054:	ldrsw	x0, [x0, #8]
  405058:	ldr	x2, [sp, #104]
  40505c:	add	x0, x0, x1
  405060:	ldr	x1, [sp, #112]
  405064:	cmp	x1, x28
  405068:	csel	x1, x1, x28, cs  // cs = hs, nlast
  40506c:	cmp	x1, x2
  405070:	csel	x1, x1, x2, cs  // cs = hs, nlast
  405074:	add	x0, x0, x1
  405078:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40507c:	mov	x21, x0
  405080:	ldr	x0, [sp, #152]
  405084:	ldr	x26, [x0]
  405088:	add	x0, x28, #0x1
  40508c:	str	x0, [sp, #176]
  405090:	cbz	x26, 4051dc <ferror@plt+0x1c0c>
  405094:	ldr	x27, [x26]
  405098:	mov	x0, x27
  40509c:	bl	402d50 <strlen@plt>
  4050a0:	mov	x1, x27
  4050a4:	mov	x2, x0
  4050a8:	mov	x28, x0
  4050ac:	mov	x0, x21
  4050b0:	bl	402cd0 <memcpy@plt>
  4050b4:	ldr	w0, [sp, #136]
  4050b8:	cbz	w0, 4050dc <ferror@plt+0x1b0c>
  4050bc:	ldr	w0, [x26, #16]
  4050c0:	cbz	w0, 405264 <ferror@plt+0x1c94>
  4050c4:	ldr	x26, [x26, #8]
  4050c8:	b	405090 <ferror@plt+0x1ac0>
  4050cc:	str	xzr, [sp, #104]
  4050d0:	b	405020 <ferror@plt+0x1a50>
  4050d4:	str	xzr, [sp, #112]
  4050d8:	b	405030 <ferror@plt+0x1a60>
  4050dc:	ldr	x2, [sp, #176]
  4050e0:	add	x4, x21, x28
  4050e4:	mov	x0, x4
  4050e8:	mov	x1, x23
  4050ec:	str	x4, [sp, #184]
  4050f0:	bl	402cd0 <memcpy@plt>
  4050f4:	ldp	x2, x1, [sp, #120]
  4050f8:	mov	x0, x21
  4050fc:	blr	x2
  405100:	mov	x27, x0
  405104:	ldr	x4, [sp, #184]
  405108:	cbz	x0, 405218 <ferror@plt+0x1c48>
  40510c:	cbz	x19, 405128 <ferror@plt+0x1b58>
  405110:	mov	x0, x19
  405114:	bl	4032a0 <free@plt>
  405118:	mov	x0, x23
  40511c:	bl	4032a0 <free@plt>
  405120:	mov	x0, x24
  405124:	bl	4032a0 <free@plt>
  405128:	cbz	x20, 405134 <ferror@plt+0x1b64>
  40512c:	mov	x0, x20
  405130:	bl	4032a0 <free@plt>
  405134:	cmp	x21, x27
  405138:	b.eq	405144 <ferror@plt+0x1b74>  // b.none
  40513c:	mov	x0, x21
  405140:	bl	4032a0 <free@plt>
  405144:	mov	x0, x27
  405148:	ldp	x19, x20, [sp, #16]
  40514c:	ldp	x21, x22, [sp, #32]
  405150:	ldp	x23, x24, [sp, #48]
  405154:	ldp	x25, x26, [sp, #64]
  405158:	ldp	x27, x28, [sp, #80]
  40515c:	ldp	x29, x30, [sp], #192
  405160:	ret
  405164:	ldr	x0, [sp, #112]
  405168:	mov	x1, x25
  40516c:	add	x2, x0, #0x1
  405170:	mov	x0, x4
  405174:	bl	402cd0 <memcpy@plt>
  405178:	ldp	x2, x1, [sp, #120]
  40517c:	mov	x0, x21
  405180:	blr	x2
  405184:	mov	x27, x0
  405188:	cbz	x0, 4050bc <ferror@plt+0x1aec>
  40518c:	b	40510c <ferror@plt+0x1b3c>
  405190:	ldr	w0, [sp, #140]
  405194:	cbnz	w0, 4050c4 <ferror@plt+0x1af4>
  405198:	ldr	x2, [sp, #104]
  40519c:	mov	x1, x20
  4051a0:	add	x0, x21, x28
  4051a4:	cbz	x2, 4051c8 <ferror@plt+0x1bf8>
  4051a8:	add	x2, x2, #0x1
  4051ac:	bl	402cd0 <memcpy@plt>
  4051b0:	ldp	x2, x1, [sp, #120]
  4051b4:	mov	x0, x21
  4051b8:	blr	x2
  4051bc:	mov	x27, x0
  4051c0:	cbz	x0, 4050c4 <ferror@plt+0x1af4>
  4051c4:	b	40510c <ferror@plt+0x1b3c>
  4051c8:	strb	wzr, [x21, x28]
  4051cc:	b	4051b0 <ferror@plt+0x1be0>
  4051d0:	mov	w0, #0x1                   	// #1
  4051d4:	str	w0, [sp, #136]
  4051d8:	b	405208 <ferror@plt+0x1c38>
  4051dc:	orr	x27, x19, x20
  4051e0:	cbz	x27, 40513c <ferror@plt+0x1b6c>
  4051e4:	cbz	x19, 4051d0 <ferror@plt+0x1c00>
  4051e8:	mov	x0, x19
  4051ec:	bl	4032a0 <free@plt>
  4051f0:	mov	x0, x23
  4051f4:	bl	4032a0 <free@plt>
  4051f8:	mov	x0, x24
  4051fc:	ldr	x23, [x22, #56]
  405200:	bl	4032a0 <free@plt>
  405204:	ldr	x24, [x22, #64]
  405208:	cbz	x20, 404ff0 <ferror@plt+0x1a20>
  40520c:	mov	x0, x20
  405210:	bl	4032a0 <free@plt>
  405214:	b	404ff8 <ferror@plt+0x1a28>
  405218:	ldr	w0, [x26, #16]
  40521c:	cmp	w0, #0x2
  405220:	b.ne	405254 <ferror@plt+0x1c84>  // b.any
  405224:	ldr	x0, [sp, #160]
  405228:	mov	x1, x24
  40522c:	str	x4, [sp, #184]
  405230:	add	x2, x0, #0x1
  405234:	mov	x0, x4
  405238:	bl	402cd0 <memcpy@plt>
  40523c:	ldp	x2, x1, [sp, #120]
  405240:	mov	x0, x21
  405244:	blr	x2
  405248:	mov	x27, x0
  40524c:	ldr	x4, [sp, #184]
  405250:	cbnz	x0, 40510c <ferror@plt+0x1b3c>
  405254:	ldr	w0, [x26, #16]
  405258:	cbnz	w0, 4050c4 <ferror@plt+0x1af4>
  40525c:	ldr	x0, [x22, #80]
  405260:	cbnz	x0, 405164 <ferror@plt+0x1b94>
  405264:	ldr	w0, [x26, #24]
  405268:	cbnz	w0, 405190 <ferror@plt+0x1bc0>
  40526c:	ldr	w0, [sp, #136]
  405270:	cbnz	w0, 4050c4 <ferror@plt+0x1af4>
  405274:	mov	x1, x19
  405278:	ldr	x2, [sp, #144]
  40527c:	b	4051a0 <ferror@plt+0x1bd0>
  405280:	mov	x19, #0x0                   	// #0
  405284:	b	404f74 <ferror@plt+0x19a4>
  405288:	stp	x29, x30, [sp, #-48]!
  40528c:	mov	x29, sp
  405290:	stp	x19, x20, [sp, #16]
  405294:	mov	x20, x1
  405298:	mov	x19, x0
  40529c:	stp	x21, x22, [sp, #32]
  4052a0:	bl	402d50 <strlen@plt>
  4052a4:	ldrsw	x2, [x20, #16]
  4052a8:	ldr	x1, [x20]
  4052ac:	mov	x22, x0
  4052b0:	add	x0, x19, x0
  4052b4:	bl	402cd0 <memcpy@plt>
  4052b8:	ldrsw	x21, [x20, #16]
  4052bc:	ldr	w2, [x20, #20]
  4052c0:	add	x21, x21, x22
  4052c4:	add	x21, x19, x21
  4052c8:	cbnz	w2, 4052f8 <ferror@plt+0x1d28>
  4052cc:	strb	wzr, [x21]
  4052d0:	mov	x0, x19
  4052d4:	ldr	w1, [x20, #24]
  4052d8:	bl	40468c <ferror@plt+0x10bc>
  4052dc:	cmp	w0, #0x0
  4052e0:	csel	x19, x19, xzr, eq  // eq = none
  4052e4:	mov	x0, x19
  4052e8:	ldp	x19, x20, [sp, #16]
  4052ec:	ldp	x21, x22, [sp, #32]
  4052f0:	ldp	x29, x30, [sp], #48
  4052f4:	ret
  4052f8:	ldr	x1, [x20, #8]
  4052fc:	add	w2, w2, #0x1
  405300:	mov	x0, x21
  405304:	sxtw	x2, w2
  405308:	bl	402cd0 <memcpy@plt>
  40530c:	ldr	w1, [x20, #24]
  405310:	mov	x0, x19
  405314:	bl	40468c <ferror@plt+0x10bc>
  405318:	cbnz	w0, 4052cc <ferror@plt+0x1cfc>
  40531c:	b	4052e4 <ferror@plt+0x1d14>
  405320:	stp	x29, x30, [sp, #-96]!
  405324:	mov	x29, sp
  405328:	stp	x21, x22, [sp, #32]
  40532c:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  405330:	add	x21, x21, #0xd73
  405334:	mov	x22, x1
  405338:	stp	x19, x20, [sp, #16]
  40533c:	stp	x23, x24, [sp, #48]
  405340:	mov	w23, w0
  405344:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x1bc10>
  405348:	mov	x0, x21
  40534c:	add	x24, x24, #0xb8b
  405350:	stp	x25, x26, [sp, #64]
  405354:	adrp	x25, 476000 <_obstack_memory_used@@Base+0x19c10>
  405358:	add	x25, x25, #0x58b
  40535c:	str	x27, [sp, #80]
  405360:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  405364:	mov	x20, x0
  405368:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x19c10>
  40536c:	mov	w27, #0x0                   	// #0
  405370:	cmp	w27, w23
  405374:	b.ge	4053ac <ferror@plt+0x1ddc>  // b.tcont
  405378:	sbfiz	x0, x27, #3, #32
  40537c:	ldr	x19, [x22, x0]
  405380:	ldrb	w1, [x19]
  405384:	cmp	w1, #0x2d
  405388:	b.ne	405404 <ferror@plt+0x1e34>  // b.any
  40538c:	ldrb	w1, [x19, #1]
  405390:	cmp	w1, #0x6c
  405394:	b.ne	405404 <ferror@plt+0x1e34>  // b.any
  405398:	ldrb	w1, [x19, #2]
  40539c:	cbnz	w1, 4053cc <ferror@plt+0x1dfc>
  4053a0:	add	w27, w27, #0x1
  4053a4:	cmp	w23, w27
  4053a8:	b.gt	40543c <ferror@plt+0x1e6c>
  4053ac:	mov	x0, x20
  4053b0:	ldp	x19, x20, [sp, #16]
  4053b4:	ldp	x21, x22, [sp, #32]
  4053b8:	ldp	x23, x24, [sp, #48]
  4053bc:	ldp	x25, x26, [sp, #64]
  4053c0:	ldr	x27, [sp, #80]
  4053c4:	ldp	x29, x30, [sp], #96
  4053c8:	ret
  4053cc:	add	x2, x19, #0x2
  4053d0:	mov	x3, x21
  4053d4:	add	x1, x26, #0x56e
  4053d8:	mov	x4, #0x0                   	// #0
  4053dc:	mov	x0, x20
  4053e0:	bl	45a668 <ferror@plt+0x57098>
  4053e4:	mov	x19, x0
  4053e8:	cmp	x20, x0
  4053ec:	b.eq	4053f8 <ferror@plt+0x1e28>  // b.none
  4053f0:	mov	x0, x20
  4053f4:	bl	4032a0 <free@plt>
  4053f8:	add	w27, w27, #0x1
  4053fc:	mov	x20, x19
  405400:	b	405370 <ferror@plt+0x1da0>
  405404:	mov	x0, x19
  405408:	bl	402d50 <strlen@plt>
  40540c:	sub	x1, x0, #0x2
  405410:	mov	x0, x24
  405414:	add	x1, x19, x1
  405418:	bl	403220 <strcmp@plt>
  40541c:	cbnz	w0, 405434 <ferror@plt+0x1e64>
  405420:	mov	x3, x21
  405424:	mov	x2, x19
  405428:	mov	x1, x25
  40542c:	mov	x4, #0x0                   	// #0
  405430:	b	4053dc <ferror@plt+0x1e0c>
  405434:	mov	x19, x20
  405438:	b	4053f8 <ferror@plt+0x1e28>
  40543c:	add	x0, x22, x0
  405440:	ldr	x2, [x0, #8]
  405444:	b	4053d0 <ferror@plt+0x1e00>
  405448:	stp	x29, x30, [sp, #-48]!
  40544c:	mov	x29, sp
  405450:	stp	x19, x20, [sp, #16]
  405454:	stp	x21, x22, [sp, #32]
  405458:	cbnz	w0, 405470 <ferror@plt+0x1ea0>
  40545c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405460:	add	x1, x1, #0x5a6
  405464:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  405468:	ldr	w0, [x0, #584]
  40546c:	bl	422d58 <ferror@plt+0x1f788>
  405470:	cmp	w0, #0x1
  405474:	b.eq	405484 <ferror@plt+0x1eb4>  // b.none
  405478:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40547c:	add	x1, x1, #0x5d8
  405480:	b	405464 <ferror@plt+0x1e94>
  405484:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  405488:	add	x20, x20, #0x518
  40548c:	ldr	w0, [x20, #96]
  405490:	tbz	w0, #31, 405538 <ferror@plt+0x1f68>
  405494:	ldr	x22, [x1]
  405498:	mov	x21, x1
  40549c:	mov	x0, x22
  4054a0:	bl	402d50 <strlen@plt>
  4054a4:	mov	x19, x0
  4054a8:	cmp	w0, #0x2
  4054ac:	b.le	4054cc <ferror@plt+0x1efc>
  4054b0:	sxtw	x0, w0
  4054b4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4054b8:	sub	x0, x0, #0x3
  4054bc:	add	x1, x1, #0x644
  4054c0:	add	x0, x22, x0
  4054c4:	bl	403220 <strcmp@plt>
  4054c8:	cbz	w0, 4054d8 <ferror@plt+0x1f08>
  4054cc:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4054d0:	add	x1, x1, #0x60b
  4054d4:	b	405464 <ferror@plt+0x1e94>
  4054d8:	ldr	x20, [x20, #104]
  4054dc:	cbnz	x20, 405524 <ferror@plt+0x1f54>
  4054e0:	sub	w19, w19, #0x3
  4054e4:	sxtw	x19, w19
  4054e8:	add	x0, x19, #0xa
  4054ec:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4054f0:	mov	x20, x0
  4054f4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4054f8:	add	x0, x0, #0x648
  4054fc:	mov	x2, x19
  405500:	add	x19, x20, x19
  405504:	ldr	x1, [x0]
  405508:	str	x1, [x20]
  40550c:	ldr	x1, [x21]
  405510:	ldrb	w0, [x0, #8]
  405514:	strb	w0, [x20, #8]
  405518:	add	x0, x20, #0x9
  40551c:	bl	402cd0 <memcpy@plt>
  405520:	strb	wzr, [x19, #9]
  405524:	mov	x0, x20
  405528:	ldp	x19, x20, [sp, #16]
  40552c:	ldp	x21, x22, [sp, #32]
  405530:	ldp	x29, x30, [sp], #48
  405534:	ret
  405538:	mov	x20, #0x0                   	// #0
  40553c:	b	405524 <ferror@plt+0x1f54>
  405540:	stp	x29, x30, [sp, #-80]!
  405544:	mov	x29, sp
  405548:	stp	x19, x20, [sp, #16]
  40554c:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  405550:	add	x20, x20, #0x518
  405554:	stp	x21, x22, [sp, #32]
  405558:	mov	x21, x1
  40555c:	and	w22, w2, #0xff
  405560:	stp	x23, x24, [sp, #48]
  405564:	mov	x24, x0
  405568:	str	x25, [sp, #64]
  40556c:	bl	402d50 <strlen@plt>
  405570:	ldr	x3, [x20, #112]
  405574:	mov	x23, x0
  405578:	mov	w25, w0
  40557c:	cbnz	x3, 4055b0 <ferror@plt+0x1fe0>
  405580:	adrp	x1, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  405584:	add	x1, x1, #0x4a0
  405588:	add	x0, x1, #0x818
  40558c:	mov	w2, #0x2c                  	// #44
  405590:	mov	x4, x3
  405594:	str	x4, [x0, #24]
  405598:	mov	x3, x0
  40559c:	subs	w2, w2, #0x1
  4055a0:	sub	x0, x0, #0x30
  4055a4:	b.ne	405590 <ferror@plt+0x1fc0>  // b.any
  4055a8:	add	x1, x1, #0x8
  4055ac:	str	x1, [x20, #112]
  4055b0:	ldr	x19, [x20, #112]
  4055b4:	cbz	x19, 4055e8 <ferror@plt+0x2018>
  4055b8:	ldr	w0, [x19, #32]
  4055bc:	cmp	w0, w25
  4055c0:	b.ne	4055d4 <ferror@plt+0x2004>  // b.any
  4055c4:	ldr	x0, [x19]
  4055c8:	mov	x1, x24
  4055cc:	bl	403220 <strcmp@plt>
  4055d0:	cbz	w0, 40562c <ferror@plt+0x205c>
  4055d4:	ldr	x19, [x19, #24]
  4055d8:	b	4055b4 <ferror@plt+0x1fe4>
  4055dc:	mov	x0, x21
  4055e0:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4055e4:	b	405664 <ferror@plt+0x2094>
  4055e8:	mov	x0, #0x30                  	// #48
  4055ec:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4055f0:	mov	x19, x0
  4055f4:	mov	x0, x24
  4055f8:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4055fc:	str	x0, [x19]
  405600:	add	x0, x19, #0x8
  405604:	str	x0, [x19, #16]
  405608:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  40560c:	add	x0, x0, #0x122
  405610:	str	x0, [x19, #8]
  405614:	ldr	x0, [x20, #112]
  405618:	str	x0, [x19, #24]
  40561c:	str	w23, [x19, #32]
  405620:	strb	wzr, [x19, #37]
  405624:	str	xzr, [x19, #40]
  405628:	str	x19, [x20, #112]
  40562c:	ldr	x0, [x19, #16]
  405630:	ldr	x20, [x0]
  405634:	ldrb	w0, [x21]
  405638:	cmp	w0, #0x2b
  40563c:	b.ne	4055dc <ferror@plt+0x200c>  // b.any
  405640:	ldrb	w1, [x21, #1]
  405644:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  405648:	add	x0, x0, #0x228
  40564c:	ldrh	w0, [x0, x1, lsl #1]
  405650:	tbz	w0, #6, 4055dc <ferror@plt+0x200c>
  405654:	add	x1, x21, #0x1
  405658:	mov	x0, x20
  40565c:	mov	x2, #0x0                   	// #0
  405660:	bl	45a668 <ferror@plt+0x57098>
  405664:	ldr	x1, [x19, #16]
  405668:	str	x0, [x1]
  40566c:	cbz	x20, 405680 <ferror@plt+0x20b0>
  405670:	ldrb	w0, [x19, #37]
  405674:	cbz	w0, 405680 <ferror@plt+0x20b0>
  405678:	mov	x0, x20
  40567c:	bl	4032a0 <free@plt>
  405680:	mov	w0, #0x1                   	// #1
  405684:	strb	w22, [x19, #36]
  405688:	strb	w0, [x19, #37]
  40568c:	ldp	x19, x20, [sp, #16]
  405690:	ldp	x21, x22, [sp, #32]
  405694:	ldp	x23, x24, [sp, #48]
  405698:	ldr	x25, [sp, #64]
  40569c:	ldp	x29, x30, [sp], #80
  4056a0:	ret
  4056a4:	stp	x29, x30, [sp, #-80]!
  4056a8:	mov	x29, sp
  4056ac:	stp	x19, x20, [sp, #16]
  4056b0:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4056b4:	add	x19, x19, #0x518
  4056b8:	stp	x23, x24, [sp, #48]
  4056bc:	mov	x23, x0
  4056c0:	mov	w0, #0x1                   	// #1
  4056c4:	and	w24, w3, #0xff
  4056c8:	stp	x21, x22, [sp, #32]
  4056cc:	mov	x22, x1
  4056d0:	add	x21, x19, #0x78
  4056d4:	str	x21, [sp, #64]
  4056d8:	strb	w2, [sp, #72]
  4056dc:	strb	w0, [sp, #73]
  4056e0:	mov	x0, x1
  4056e4:	bl	402d50 <strlen@plt>
  4056e8:	mov	x20, x0
  4056ec:	ldp	x1, x0, [x19, #144]
  4056f0:	sub	x0, x0, x1
  4056f4:	cmp	x20, x0
  4056f8:	b.ls	405708 <ferror@plt+0x2138>  // b.plast
  4056fc:	mov	x1, x20
  405700:	mov	x0, x21
  405704:	bl	45c22c <_obstack_newchunk@@Base>
  405708:	ldr	x0, [x19, #144]
  40570c:	mov	x2, x20
  405710:	mov	x1, x22
  405714:	add	x21, x19, #0x78
  405718:	bl	402cd0 <memcpy@plt>
  40571c:	ldp	x2, x0, [x19, #144]
  405720:	add	x20, x2, x20
  405724:	str	x20, [x19, #144]
  405728:	cmp	x20, x0
  40572c:	b.ne	40573c <ferror@plt+0x216c>  // b.any
  405730:	mov	x0, x21
  405734:	mov	x1, #0x1                   	// #1
  405738:	bl	45c22c <_obstack_newchunk@@Base>
  40573c:	ldr	x0, [x19, #144]
  405740:	add	x4, sp, #0x40
  405744:	adrp	x3, 405000 <ferror@plt+0x1a30>
  405748:	mov	x2, #0x0                   	// #0
  40574c:	add	x1, x0, #0x1
  405750:	str	x1, [x19, #144]
  405754:	mov	w1, #0x3d                  	// #61
  405758:	strb	w1, [x0]
  40575c:	add	x3, x3, #0xaa0
  405760:	mov	w1, w24
  405764:	mov	x0, x23
  405768:	bl	404ed4 <ferror@plt+0x1904>
  40576c:	ldp	x0, x1, [x19, #144]
  405770:	add	x20, x19, #0x78
  405774:	cmp	x1, x0
  405778:	b.ne	405788 <ferror@plt+0x21b8>  // b.any
  40577c:	mov	x0, x20
  405780:	mov	x1, #0x1                   	// #1
  405784:	bl	45c22c <_obstack_newchunk@@Base>
  405788:	ldr	x0, [x19, #144]
  40578c:	add	x1, x0, #0x1
  405790:	str	x1, [x19, #144]
  405794:	strb	wzr, [x0]
  405798:	ldp	x0, x3, [x19, #136]
  40579c:	cmp	x3, x0
  4057a0:	b.ne	4057b0 <ferror@plt+0x21e0>  // b.any
  4057a4:	ldrb	w1, [x19, #200]
  4057a8:	orr	w1, w1, #0x2
  4057ac:	strb	w1, [x19, #200]
  4057b0:	ldr	x1, [x19, #168]
  4057b4:	ldr	x2, [x19, #128]
  4057b8:	add	x3, x3, x1
  4057bc:	bic	x1, x3, x1
  4057c0:	ldr	x3, [x19, #152]
  4057c4:	sub	x4, x1, x2
  4057c8:	ldp	x21, x22, [sp, #32]
  4057cc:	sub	x2, x3, x2
  4057d0:	cmp	x4, x2
  4057d4:	csel	x1, x1, x3, ls  // ls = plast
  4057d8:	stp	x1, x1, [x19, #136]
  4057dc:	ldp	x19, x20, [sp, #16]
  4057e0:	ldp	x23, x24, [sp, #48]
  4057e4:	ldp	x29, x30, [sp], #80
  4057e8:	ret
  4057ec:	stp	x29, x30, [sp, #-80]!
  4057f0:	mov	x29, sp
  4057f4:	stp	x23, x24, [sp, #48]
  4057f8:	adrp	x24, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4057fc:	add	x24, x24, #0x518
  405800:	stp	x25, x26, [sp, #64]
  405804:	mov	x23, x1
  405808:	adrp	x25, 487000 <_obstack_memory_used@@Base+0x2ac10>
  40580c:	ldr	x26, [x24, #208]
  405810:	stp	x21, x22, [sp, #32]
  405814:	ldrsw	x22, [x24, #216]
  405818:	mov	x21, x0
  40581c:	add	x25, x25, #0xd0e
  405820:	stp	x19, x20, [sp, #16]
  405824:	mov	x20, x2
  405828:	add	x22, x26, x22, lsl #5
  40582c:	sub	x22, x22, #0x20
  405830:	cbz	x20, 405900 <ferror@plt+0x2330>
  405834:	ldrb	w0, [x20]
  405838:	cmp	w0, #0x2a
  40583c:	b.eq	4058e0 <ferror@plt+0x2310>  // b.none
  405840:	mov	x19, x22
  405844:	cmp	x26, x19
  405848:	b.hi	4058d0 <ferror@plt+0x2300>  // b.pmore
  40584c:	ldr	x22, [x19]
  405850:	ldrb	w0, [x22]
  405854:	cmp	w0, #0x40
  405858:	b.ne	4058c8 <ferror@plt+0x22f8>  // b.any
  40585c:	mov	x1, x20
  405860:	add	x0, x22, #0x1
  405864:	bl	403220 <strcmp@plt>
  405868:	cbnz	w0, 4058c8 <ferror@plt+0x22f8>
  40586c:	cbz	x21, 4058e4 <ferror@plt+0x2314>
  405870:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  405874:	mov	x0, x21
  405878:	add	x1, x1, #0xd0e
  40587c:	bl	403220 <strcmp@plt>
  405880:	cbnz	w0, 4058e4 <ferror@plt+0x2314>
  405884:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405888:	mov	x0, x22
  40588c:	add	x1, x1, #0x652
  405890:	bl	403220 <strcmp@plt>
  405894:	cbz	w0, 4058ac <ferror@plt+0x22dc>
  405898:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40589c:	mov	x0, x22
  4058a0:	add	x1, x1, #0x65c
  4058a4:	bl	403220 <strcmp@plt>
  4058a8:	cbnz	w0, 4058e4 <ferror@plt+0x2314>
  4058ac:	ldr	w0, [x24, #220]
  4058b0:	cbnz	w0, 4058e4 <ferror@plt+0x2314>
  4058b4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4058b8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4058bc:	add	x1, x1, #0x668
  4058c0:	ldr	w0, [x0, #584]
  4058c4:	bl	422d58 <ferror@plt+0x1f788>
  4058c8:	sub	x19, x19, #0x20
  4058cc:	b	405844 <ferror@plt+0x2274>
  4058d0:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4058d4:	mov	x1, x20
  4058d8:	add	x0, x0, #0x6a4
  4058dc:	bl	4221dc <ferror@plt+0x1ec0c>
  4058e0:	mov	x19, #0x0                   	// #0
  4058e4:	mov	x0, x19
  4058e8:	ldp	x19, x20, [sp, #16]
  4058ec:	ldp	x21, x22, [sp, #32]
  4058f0:	ldp	x23, x24, [sp, #48]
  4058f4:	ldp	x25, x26, [sp, #64]
  4058f8:	ldp	x29, x30, [sp], #80
  4058fc:	ret
  405900:	mov	x19, x22
  405904:	cmp	x26, x19
  405908:	b.hi	4058e0 <ferror@plt+0x2310>  // b.pmore
  40590c:	ldr	x20, [x19]
  405910:	mov	x1, x25
  405914:	mov	x0, x20
  405918:	bl	403220 <strcmp@plt>
  40591c:	cbnz	w0, 405930 <ferror@plt+0x2360>
  405920:	mov	x1, x25
  405924:	mov	x0, x21
  405928:	bl	403220 <strcmp@plt>
  40592c:	cbz	w0, 40595c <ferror@plt+0x238c>
  405930:	mov	x0, x20
  405934:	bl	402d50 <strlen@plt>
  405938:	cmp	x0, x23
  40593c:	b.cs	405954 <ferror@plt+0x2384>  // b.hs, b.nlast
  405940:	sub	x0, x23, x0
  405944:	add	x1, x21, x0
  405948:	mov	x0, x20
  40594c:	bl	403220 <strcmp@plt>
  405950:	cbz	w0, 40595c <ferror@plt+0x238c>
  405954:	sub	x19, x19, #0x20
  405958:	b	405904 <ferror@plt+0x2334>
  40595c:	ldr	x20, [x19, #8]
  405960:	ldrb	w0, [x20]
  405964:	cmp	w0, #0x40
  405968:	b.ne	4058e4 <ferror@plt+0x2314>  // b.any
  40596c:	add	x20, x20, #0x1
  405970:	mov	x21, #0x0                   	// #0
  405974:	mov	x23, #0x0                   	// #0
  405978:	b	405830 <ferror@plt+0x2260>
  40597c:	stp	x29, x30, [sp, #-176]!
  405980:	mov	x29, sp
  405984:	stp	x19, x20, [sp, #16]
  405988:	stp	x21, x22, [sp, #32]
  40598c:	mov	x21, x0
  405990:	and	w22, w1, #0xff
  405994:	bl	402d50 <strlen@plt>
  405998:	add	w1, w0, #0x3
  40599c:	sxtw	x20, w0
  4059a0:	sxtw	x1, w1
  4059a4:	mov	x2, x20
  4059a8:	add	x1, x1, #0xf
  4059ac:	and	x1, x1, #0xfffffffffffffff0
  4059b0:	sub	sp, sp, x1
  4059b4:	mov	x1, x21
  4059b8:	mov	x19, sp
  4059bc:	mov	x0, x19
  4059c0:	bl	402cd0 <memcpy@plt>
  4059c4:	add	x0, x19, x20
  4059c8:	ldurb	w1, [x0, #-1]
  4059cc:	cmp	w1, #0x2f
  4059d0:	b.eq	4059e0 <ferror@plt+0x2410>  // b.none
  4059d4:	add	x0, x0, #0x1
  4059d8:	mov	w1, #0x2f                  	// #47
  4059dc:	strb	w1, [x19, x20]
  4059e0:	mov	w1, #0x2e                  	// #46
  4059e4:	strh	w1, [x0]
  4059e8:	cbnz	w22, 405a14 <ferror@plt+0x2444>
  4059ec:	add	x1, x29, #0x30
  4059f0:	mov	x0, x19
  4059f4:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  4059f8:	tbz	w0, #31, 405a8c <ferror@plt+0x24bc>
  4059fc:	mov	w0, #0x0                   	// #0
  405a00:	mov	sp, x29
  405a04:	ldp	x19, x20, [sp, #16]
  405a08:	ldp	x21, x22, [sp, #32]
  405a0c:	ldp	x29, x30, [sp], #176
  405a10:	ret
  405a14:	ldrb	w1, [x19]
  405a18:	cmp	w1, #0x2f
  405a1c:	b.ne	4059ec <ferror@plt+0x241c>  // b.any
  405a20:	add	x0, x0, #0x1
  405a24:	sub	x0, x0, x19
  405a28:	cmp	x0, #0x6
  405a2c:	b.ne	405a4c <ferror@plt+0x247c>  // b.any
  405a30:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2bc10>
  405a34:	add	x0, x19, #0x1
  405a38:	add	x1, x1, #0x5f9
  405a3c:	mov	x2, #0x3                   	// #3
  405a40:	bl	45a8c0 <ferror@plt+0x572f0>
  405a44:	cbnz	w0, 4059ec <ferror@plt+0x241c>
  405a48:	b	4059fc <ferror@plt+0x242c>
  405a4c:	cmp	x0, #0xa
  405a50:	b.ne	4059ec <ferror@plt+0x241c>  // b.any
  405a54:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  405a58:	add	x0, x19, #0x1
  405a5c:	add	x1, x1, #0x3c2
  405a60:	mov	x2, #0x3                   	// #3
  405a64:	bl	45a8c0 <ferror@plt+0x572f0>
  405a68:	cbnz	w0, 4059ec <ferror@plt+0x241c>
  405a6c:	ldrb	w0, [x19, #4]
  405a70:	cmp	w0, #0x2f
  405a74:	b.ne	4059ec <ferror@plt+0x241c>  // b.any
  405a78:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2bc10>
  405a7c:	add	x0, x19, #0x5
  405a80:	add	x1, x1, #0x5f9
  405a84:	mov	x2, #0x3                   	// #3
  405a88:	b	405a40 <ferror@plt+0x2470>
  405a8c:	ldr	w0, [x29, #64]
  405a90:	and	w0, w0, #0xf000
  405a94:	cmp	w0, #0x4, lsl #12
  405a98:	cset	w0, eq  // eq = none
  405a9c:	b	405a00 <ferror@plt+0x2430>
  405aa0:	stp	x29, x30, [sp, #-48]!
  405aa4:	mov	x29, sp
  405aa8:	stp	x19, x20, [sp, #16]
  405aac:	mov	x19, x1
  405ab0:	ldrb	w1, [x1, #8]
  405ab4:	stp	x21, x22, [sp, #32]
  405ab8:	mov	x22, x0
  405abc:	cbnz	w1, 405b48 <ferror@plt+0x2578>
  405ac0:	ldrb	w0, [x19, #9]
  405ac4:	cbnz	w0, 405af8 <ferror@plt+0x2528>
  405ac8:	ldr	x20, [x19]
  405acc:	ldp	x0, x1, [x20, #24]
  405ad0:	cmp	x1, x0
  405ad4:	b.ne	405ae4 <ferror@plt+0x2514>  // b.any
  405ad8:	mov	x0, x20
  405adc:	mov	x1, #0x1                   	// #1
  405ae0:	bl	45c22c <_obstack_newchunk@@Base>
  405ae4:	ldr	x0, [x20, #24]
  405ae8:	add	x1, x0, #0x1
  405aec:	str	x1, [x20, #24]
  405af0:	mov	w1, #0x3a                  	// #58
  405af4:	strb	w1, [x0]
  405af8:	mov	x0, x22
  405afc:	bl	402d50 <strlen@plt>
  405b00:	ldr	x20, [x19]
  405b04:	mov	x21, x0
  405b08:	ldp	x1, x0, [x20, #24]
  405b0c:	sub	x0, x0, x1
  405b10:	cmp	x21, x0
  405b14:	b.ls	405b24 <ferror@plt+0x2554>  // b.plast
  405b18:	mov	x1, x21
  405b1c:	mov	x0, x20
  405b20:	bl	45c22c <_obstack_newchunk@@Base>
  405b24:	ldr	x0, [x20, #24]
  405b28:	mov	x2, x21
  405b2c:	mov	x1, x22
  405b30:	bl	402cd0 <memcpy@plt>
  405b34:	ldr	x0, [x20, #24]
  405b38:	add	x0, x0, x21
  405b3c:	str	x0, [x20, #24]
  405b40:	strb	wzr, [x19, #9]
  405b44:	b	405b54 <ferror@plt+0x2584>
  405b48:	mov	w1, #0x0                   	// #0
  405b4c:	bl	40597c <ferror@plt+0x23ac>
  405b50:	cbnz	w0, 405ac0 <ferror@plt+0x24f0>
  405b54:	mov	x0, #0x0                   	// #0
  405b58:	ldp	x19, x20, [sp, #16]
  405b5c:	ldp	x21, x22, [sp, #32]
  405b60:	ldp	x29, x30, [sp], #48
  405b64:	ret
  405b68:	stp	x29, x30, [sp, #-32]!
  405b6c:	cmp	w0, #0x2
  405b70:	mov	x29, sp
  405b74:	stp	x19, x20, [sp, #16]
  405b78:	b.eq	405b90 <ferror@plt+0x25c0>  // b.none
  405b7c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  405b80:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405b84:	add	x1, x1, #0x6bf
  405b88:	ldr	w0, [x0, #584]
  405b8c:	bl	422d58 <ferror@plt+0x1f788>
  405b90:	ldr	x0, [x1]
  405b94:	mov	x20, x1
  405b98:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  405b9c:	mov	x19, x0
  405ba0:	bl	402d50 <strlen@plt>
  405ba4:	sub	w2, w0, #0x1
  405ba8:	add	x3, x19, #0x1
  405bac:	sxtw	x2, w2
  405bb0:	tbnz	w2, #31, 405bc4 <ferror@plt+0x25f4>
  405bb4:	sub	x0, x2, #0x1
  405bb8:	ldrb	w1, [x3, x0]
  405bbc:	cmp	w1, #0x2f
  405bc0:	b.ne	405c08 <ferror@plt+0x2638>  // b.any
  405bc4:	add	x2, x2, #0x1
  405bc8:	mov	w1, #0x2e                  	// #46
  405bcc:	add	x0, x19, x2
  405bd0:	bl	403130 <strrchr@plt>
  405bd4:	cbz	x0, 405bdc <ferror@plt+0x260c>
  405bd8:	strb	wzr, [x0]
  405bdc:	ldr	x1, [x20, #8]
  405be0:	mov	x2, #0x0                   	// #0
  405be4:	mov	x0, x19
  405be8:	bl	45a668 <ferror@plt+0x57098>
  405bec:	mov	x20, x0
  405bf0:	mov	x0, x19
  405bf4:	bl	4032a0 <free@plt>
  405bf8:	mov	x0, x20
  405bfc:	ldp	x19, x20, [sp, #16]
  405c00:	ldp	x29, x30, [sp], #32
  405c04:	ret
  405c08:	mov	x2, x0
  405c0c:	b	405bb0 <ferror@plt+0x25e0>
  405c10:	stp	x29, x30, [sp, #-64]!
  405c14:	mov	x29, sp
  405c18:	stp	x19, x20, [sp, #16]
  405c1c:	mov	x19, x0
  405c20:	mov	w20, w3
  405c24:	mov	x0, x1
  405c28:	mov	x1, x2
  405c2c:	ldr	x6, [x19]
  405c30:	stp	x21, x22, [sp, #32]
  405c34:	mov	w22, w5
  405c38:	mov	x21, x19
  405c3c:	stp	x23, x24, [sp, #48]
  405c40:	mov	w23, w4
  405c44:	cbz	x6, 405c60 <ferror@plt+0x2690>
  405c48:	ldr	w2, [x6, #20]
  405c4c:	cmp	w2, w20
  405c50:	b.gt	405c60 <ferror@plt+0x2690>
  405c54:	add	x21, x6, #0x8
  405c58:	ldr	x6, [x6, #8]
  405c5c:	b	405c44 <ferror@plt+0x2674>
  405c60:	bl	411b1c <ferror@plt+0xe54c>
  405c64:	mov	x24, x0
  405c68:	bl	402d50 <strlen@plt>
  405c6c:	ldr	w1, [x19, #8]
  405c70:	cmp	w1, w0
  405c74:	b.ge	405c7c <ferror@plt+0x26ac>  // b.tcont
  405c78:	str	w0, [x19, #8]
  405c7c:	mov	x0, #0x20                  	// #32
  405c80:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  405c84:	ldr	x1, [x21]
  405c88:	stp	x24, x1, [x0]
  405c8c:	stp	w23, w20, [x0, #16]
  405c90:	str	w22, [x0, #24]
  405c94:	ldp	x19, x20, [sp, #16]
  405c98:	ldp	x23, x24, [sp, #48]
  405c9c:	str	x0, [x21]
  405ca0:	ldp	x21, x22, [sp, #32]
  405ca4:	ldp	x29, x30, [sp], #64
  405ca8:	ret
  405cac:	cmp	w0, #0x1
  405cb0:	b.ne	405cd0 <ferror@plt+0x2700>  // b.any
  405cb4:	mov	x0, #0x0                   	// #0
  405cb8:	ret
  405cbc:	mov	x0, #0x0                   	// #0
  405cc0:	ldp	x19, x20, [sp, #16]
  405cc4:	ldp	x21, x22, [sp, #32]
  405cc8:	ldp	x29, x30, [sp], #64
  405ccc:	ret
  405cd0:	stp	x29, x30, [sp, #-64]!
  405cd4:	mov	x29, sp
  405cd8:	stp	x19, x20, [sp, #16]
  405cdc:	stp	x21, x22, [sp, #32]
  405ce0:	b.gt	405cfc <ferror@plt+0x272c>
  405ce4:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405ce8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405cec:	add	x2, x2, #0xc3e
  405cf0:	add	x0, x0, #0x6e9
  405cf4:	mov	w1, #0x26af                	// #9903
  405cf8:	bl	403600 <ferror@plt+0x30>
  405cfc:	sbfiz	x19, x0, #3, #32
  405d00:	mov	x20, x1
  405d04:	sub	x22, x19, #0x10
  405d08:	add	x1, sp, #0x38
  405d0c:	mov	w2, #0xa                   	// #10
  405d10:	ldr	x0, [x20, x22]
  405d14:	bl	403260 <strtol@plt>
  405d18:	mov	x21, x0
  405d1c:	ldr	x1, [x20, x22]
  405d20:	ldr	x0, [sp, #56]
  405d24:	cmp	x1, x0
  405d28:	b.ne	405d44 <ferror@plt+0x2774>  // b.any
  405d2c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405d30:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405d34:	add	x2, x2, #0xc3e
  405d38:	add	x0, x0, #0x6e9
  405d3c:	mov	w1, #0x26b2                	// #9906
  405d40:	bl	403600 <ferror@plt+0x30>
  405d44:	sub	x19, x19, #0x8
  405d48:	add	x1, sp, #0x38
  405d4c:	mov	w2, #0xa                   	// #10
  405d50:	ldr	x0, [x20, x19]
  405d54:	bl	403260 <strtol@plt>
  405d58:	ldr	x2, [x20, x19]
  405d5c:	ldr	x1, [sp, #56]
  405d60:	cmp	x2, x1
  405d64:	b.ne	405d80 <ferror@plt+0x27b0>  // b.any
  405d68:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405d6c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405d70:	add	x2, x2, #0xc3e
  405d74:	add	x0, x0, #0x6e9
  405d78:	mov	w1, #0x26b5                	// #9909
  405d7c:	bl	403600 <ferror@plt+0x30>
  405d80:	cmp	x21, x0
  405d84:	b.le	405cbc <ferror@plt+0x26ec>
  405d88:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  405d8c:	add	x0, x0, #0x122
  405d90:	b	405cc0 <ferror@plt+0x26f0>
  405d94:	stp	x29, x30, [sp, #-16]!
  405d98:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405d9c:	add	x0, x0, #0x6f9
  405da0:	mov	x29, sp
  405da4:	bl	403580 <gettext@plt>
  405da8:	bl	4034d0 <printf@plt>
  405dac:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405db0:	add	x0, x0, #0x71f
  405db4:	bl	403580 <gettext@plt>
  405db8:	bl	4034d0 <printf@plt>
  405dbc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  405dc0:	ldr	x0, [x0, #1272]
  405dc4:	bl	403350 <fflush@plt>
  405dc8:	mov	x0, #0x0                   	// #0
  405dcc:	ldp	x29, x30, [sp], #16
  405dd0:	ret
  405dd4:	stp	x29, x30, [sp, #-96]!
  405dd8:	mov	w2, #0x9                   	// #9
  405ddc:	mov	x29, sp
  405de0:	stp	x19, x20, [sp, #16]
  405de4:	mov	x19, x0
  405de8:	mov	x20, x1
  405dec:	add	x0, sp, #0x20
  405df0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405df4:	add	x1, x1, #0x755
  405df8:	bl	45342c <ferror@plt+0x4fe5c>
  405dfc:	cbz	w0, 405e18 <ferror@plt+0x2848>
  405e00:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405e04:	add	x2, x2, #0x77b
  405e08:	mov	w1, #0x24f1                	// #9457
  405e0c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405e10:	add	x0, x0, #0x6e9
  405e14:	bl	403600 <ferror@plt+0x30>
  405e18:	mov	x1, x19
  405e1c:	add	x0, sp, #0x20
  405e20:	mov	w4, #0x0                   	// #0
  405e24:	mov	x3, #0x0                   	// #0
  405e28:	mov	x2, #0x0                   	// #0
  405e2c:	bl	453588 <ferror@plt+0x4ffb8>
  405e30:	cmp	w0, #0x1
  405e34:	b.ne	405e50 <ferror@plt+0x2880>  // b.any
  405e38:	mov	x2, x19
  405e3c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  405e40:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405e44:	add	x1, x1, #0x793
  405e48:	ldr	w0, [x0, #584]
  405e4c:	bl	422d58 <ferror@plt+0x1f788>
  405e50:	cbz	w0, 405e64 <ferror@plt+0x2894>
  405e54:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405e58:	mov	w1, #0x24f6                	// #9462
  405e5c:	add	x2, x2, #0x77b
  405e60:	b	405e0c <ferror@plt+0x283c>
  405e64:	mov	x1, x20
  405e68:	add	x0, sp, #0x20
  405e6c:	mov	w4, #0x0                   	// #0
  405e70:	mov	x3, #0x0                   	// #0
  405e74:	mov	x2, #0x0                   	// #0
  405e78:	bl	453588 <ferror@plt+0x4ffb8>
  405e7c:	cmp	w0, #0x1
  405e80:	b.ne	405e8c <ferror@plt+0x28bc>  // b.any
  405e84:	mov	x2, x20
  405e88:	b	405e3c <ferror@plt+0x286c>
  405e8c:	cbz	w0, 405ea0 <ferror@plt+0x28d0>
  405e90:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405e94:	mov	w1, #0x24fb                	// #9467
  405e98:	add	x2, x2, #0x77b
  405e9c:	b	405e0c <ferror@plt+0x283c>
  405ea0:	mov	x1, x20
  405ea4:	mov	x0, x19
  405ea8:	bl	402fd0 <strverscmp@plt>
  405eac:	ldp	x19, x20, [sp, #16]
  405eb0:	ldp	x29, x30, [sp], #96
  405eb4:	ret
  405eb8:	stp	x29, x30, [sp, #-96]!
  405ebc:	cmp	w0, #0x2
  405ec0:	mov	x29, sp
  405ec4:	stp	x19, x20, [sp, #16]
  405ec8:	stp	x21, x22, [sp, #32]
  405ecc:	stp	x23, x24, [sp, #48]
  405ed0:	stp	x25, x26, [sp, #64]
  405ed4:	stp	x27, x28, [sp, #80]
  405ed8:	b.gt	405ef0 <ferror@plt+0x2920>
  405edc:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405ee0:	add	x1, x1, #0x7ae
  405ee4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  405ee8:	ldr	w0, [x0, #584]
  405eec:	bl	422d58 <ferror@plt+0x1f788>
  405ef0:	mov	x22, x1
  405ef4:	ldr	x1, [x1]
  405ef8:	ldrb	w2, [x1]
  405efc:	cbnz	w2, 405f18 <ferror@plt+0x2948>
  405f00:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  405f04:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  405f08:	add	x2, x2, #0x7d6
  405f0c:	add	x0, x0, #0x6e9
  405f10:	mov	w1, #0x2526                	// #9510
  405f14:	bl	403600 <ferror@plt+0x30>
  405f18:	ldrb	w1, [x1, #1]
  405f1c:	and	w1, w1, #0xfffffffd
  405f20:	and	w1, w1, #0xff
  405f24:	cmp	w1, #0x3c
  405f28:	b.ne	405f5c <ferror@plt+0x298c>  // b.any
  405f2c:	cmp	w2, #0x21
  405f30:	cset	w23, ne  // ne = any
  405f34:	add	w23, w23, #0x1
  405f38:	cmp	w23, #0x1
  405f3c:	mov	w1, #0x4                   	// #4
  405f40:	mov	w2, #0x5                   	// #5
  405f44:	csel	w1, w1, w2, eq  // eq = none
  405f48:	cmp	w1, w0
  405f4c:	b.eq	405f64 <ferror@plt+0x2994>  // b.none
  405f50:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  405f54:	add	x1, x1, #0x7f4
  405f58:	b	405ee4 <ferror@plt+0x2914>
  405f5c:	mov	w23, #0x1                   	// #1
  405f60:	b	405f38 <ferror@plt+0x2968>
  405f64:	sxtw	x0, w23
  405f68:	adrp	x25, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  405f6c:	add	x0, x0, #0x1
  405f70:	add	x25, x25, #0x518
  405f74:	mov	x19, #0x0                   	// #0
  405f78:	mov	x21, #0x0                   	// #0
  405f7c:	add	x20, x22, x0, lsl #3
  405f80:	mov	x27, #0x18                  	// #24
  405f84:	ldr	x0, [x22, x0, lsl #3]
  405f88:	bl	402d50 <strlen@plt>
  405f8c:	mov	x24, x0
  405f90:	ldr	w0, [x25, #24]
  405f94:	cmp	w0, w19
  405f98:	b.le	405fd8 <ferror@plt+0x2a08>
  405f9c:	mul	x26, x19, x27
  405fa0:	mov	x2, x24
  405fa4:	ldr	x28, [x25, #16]
  405fa8:	ldr	x1, [x20]
  405fac:	ldr	x0, [x28, x26]
  405fb0:	bl	402f80 <strncmp@plt>
  405fb4:	cbnz	w0, 405fd0 <ferror@plt+0x2a00>
  405fb8:	mov	w1, w24
  405fbc:	mov	w0, w19
  405fc0:	bl	404738 <ferror@plt+0x1168>
  405fc4:	cbz	w0, 405fd0 <ferror@plt+0x2a00>
  405fc8:	ldr	x21, [x28, x26]
  405fcc:	add	x21, x21, x24
  405fd0:	add	x19, x19, #0x1
  405fd4:	b	405f90 <ferror@plt+0x29c0>
  405fd8:	cbz	x21, 406058 <ferror@plt+0x2a88>
  405fdc:	ldr	x1, [x22, #8]
  405fe0:	mov	x0, x21
  405fe4:	bl	405dd4 <ferror@plt+0x2804>
  405fe8:	mov	w19, w0
  405fec:	cmp	w23, #0x2
  405ff0:	b.ne	406064 <ferror@plt+0x2a94>  // b.any
  405ff4:	ldr	x1, [x22, #16]
  405ff8:	mov	x0, x21
  405ffc:	bl	405dd4 <ferror@plt+0x2804>
  406000:	ldr	x2, [x22]
  406004:	mov	w3, #0x3c3e                	// #15422
  406008:	ldrh	w1, [x2]
  40600c:	rev16	w1, w1
  406010:	and	w1, w1, #0xffff
  406014:	cmp	w1, w3
  406018:	b.eq	4060d0 <ferror@plt+0x2b00>  // b.none
  40601c:	b.gt	40606c <ferror@plt+0x2a9c>
  406020:	mov	w0, #0x213e                	// #8510
  406024:	cmp	w1, w0
  406028:	b.eq	4060b4 <ferror@plt+0x2ae4>  // b.none
  40602c:	mov	w0, #0x3c00                	// #15360
  406030:	cmp	w1, w0
  406034:	b.eq	406088 <ferror@plt+0x2ab8>  // b.none
  406038:	mov	w0, #0x213c                	// #8508
  40603c:	cmp	w1, w0
  406040:	b.eq	4060b0 <ferror@plt+0x2ae0>  // b.none
  406044:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  406048:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40604c:	add	x1, x1, #0x81d
  406050:	ldr	w0, [x0, #584]
  406054:	bl	422d58 <ferror@plt+0x1f788>
  406058:	mov	w0, #0xffffffff            	// #-1
  40605c:	mov	w19, w0
  406060:	b	406000 <ferror@plt+0x2a30>
  406064:	mov	w0, #0xffffffff            	// #-1
  406068:	b	406000 <ferror@plt+0x2a30>
  40606c:	mov	w3, #0x3e3c                	// #15932
  406070:	mvn	w19, w19
  406074:	cmp	w1, w3
  406078:	b.eq	4060c4 <ferror@plt+0x2af4>  // b.none
  40607c:	mov	w0, #0x3e3d                	// #15933
  406080:	cmp	w1, w0
  406084:	b.ne	406044 <ferror@plt+0x2a74>  // b.any
  406088:	lsr	w19, w19, #31
  40608c:	cbz	w19, 4060dc <ferror@plt+0x2b0c>
  406090:	ldr	x0, [x20, #8]
  406094:	ldp	x19, x20, [sp, #16]
  406098:	ldp	x21, x22, [sp, #32]
  40609c:	ldp	x23, x24, [sp, #48]
  4060a0:	ldp	x25, x26, [sp, #64]
  4060a4:	ldp	x27, x28, [sp, #80]
  4060a8:	ldp	x29, x30, [sp], #96
  4060ac:	ret
  4060b0:	mvn	w19, w19
  4060b4:	cmp	x21, #0x0
  4060b8:	cset	w0, eq  // eq = none
  4060bc:	orr	w19, w0, w19, lsr #31
  4060c0:	b	40608c <ferror@plt+0x2abc>
  4060c4:	lsr	w0, w0, #31
  4060c8:	and	w19, w0, w19, lsr #31
  4060cc:	b	40608c <ferror@plt+0x2abc>
  4060d0:	mvn	w0, w0
  4060d4:	lsr	w0, w0, #31
  4060d8:	b	4060bc <ferror@plt+0x2aec>
  4060dc:	mov	x0, #0x0                   	// #0
  4060e0:	b	406094 <ferror@plt+0x2ac4>
  4060e4:	stp	x29, x30, [sp, #-80]!
  4060e8:	mov	x29, sp
  4060ec:	stp	x19, x20, [sp, #16]
  4060f0:	mov	x19, x0
  4060f4:	stp	x21, x22, [sp, #32]
  4060f8:	mov	x21, x2
  4060fc:	mov	w22, w4
  406100:	stp	x23, x24, [sp, #48]
  406104:	mov	x23, x1
  406108:	cbz	w3, 406138 <ferror@plt+0x2b68>
  40610c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  406110:	add	x1, x1, #0x419
  406114:	mov	x0, x2
  406118:	bl	402f20 <fopen@plt>
  40611c:	mov	x20, x0
  406120:	bl	404a6c <ferror@plt+0x149c>
  406124:	mov	x1, x20
  406128:	mov	w0, #0xa                   	// #10
  40612c:	bl	402e40 <fputc@plt>
  406130:	mov	x0, x20
  406134:	bl	402ee0 <fclose@plt>
  406138:	mov	x24, x19
  40613c:	cmp	w22, #0x0
  406140:	mov	w0, #0x303                 	// #771
  406144:	mov	x2, #0x0                   	// #0
  406148:	mov	w22, #0x3                   	// #3
  40614c:	csel	w22, w22, w0, eq  // eq = none
  406150:	ldr	x1, [x24], #8
  406154:	mov	w0, #0x2                   	// #2
  406158:	bl	45d55c <_obstack_memory_used@@Base+0x116c>
  40615c:	mov	x20, x0
  406160:	ldr	x2, [x19]
  406164:	mov	x5, x21
  406168:	add	x6, sp, #0x4c
  40616c:	mov	x4, x23
  406170:	mov	x3, x24
  406174:	mov	w1, w22
  406178:	bl	45caac <_obstack_memory_used@@Base+0x6bc>
  40617c:	mov	x21, x0
  406180:	cbz	x0, 4061bc <ferror@plt+0x2bec>
  406184:	bl	4034e0 <__errno_location@plt>
  406188:	ldr	w2, [sp, #76]
  40618c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406190:	add	x1, x1, #0x863
  406194:	str	w2, [x0]
  406198:	cmp	w2, #0x0
  40619c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4061a0:	add	x0, x0, #0x848
  4061a4:	mov	x3, x21
  4061a8:	csel	x1, x0, x1, ne  // ne = any
  4061ac:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4061b0:	ldr	x2, [x19]
  4061b4:	ldr	w0, [x0, #584]
  4061b8:	bl	422d58 <ferror@plt+0x1f788>
  4061bc:	add	x2, sp, #0x48
  4061c0:	mov	x0, x20
  4061c4:	mov	w1, #0x1                   	// #1
  4061c8:	bl	45cd68 <_obstack_memory_used@@Base+0x978>
  4061cc:	cbz	w0, 406204 <ferror@plt+0x2c34>
  4061d0:	ldrb	w0, [sp, #73]
  4061d4:	cbz	w0, 40620c <ferror@plt+0x2c3c>
  4061d8:	cmp	w0, #0x4
  4061dc:	cset	w19, eq  // eq = none
  4061e0:	lsl	w19, w19, #1
  4061e4:	mov	x0, x20
  4061e8:	bl	45ce74 <_obstack_memory_used@@Base+0xa84>
  4061ec:	mov	w0, w19
  4061f0:	ldp	x19, x20, [sp, #16]
  4061f4:	ldp	x21, x22, [sp, #32]
  4061f8:	ldp	x23, x24, [sp, #48]
  4061fc:	ldp	x29, x30, [sp], #80
  406200:	ret
  406204:	mov	w19, #0x0                   	// #0
  406208:	b	4061e4 <ferror@plt+0x2c14>
  40620c:	mov	w19, #0x1                   	// #1
  406210:	b	4061e4 <ferror@plt+0x2c14>
  406214:	stp	x29, x30, [sp, #-352]!
  406218:	mov	x29, sp
  40621c:	stp	x19, x20, [sp, #16]
  406220:	mov	x19, x1
  406224:	mov	x20, x0
  406228:	mov	x0, #0x2000                	// #8192
  40622c:	stp	x21, x22, [sp, #32]
  406230:	stp	x23, x24, [sp, #48]
  406234:	stp	x25, x26, [sp, #64]
  406238:	str	x27, [sp, #80]
  40623c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  406240:	mov	w1, #0x0                   	// #0
  406244:	mov	x21, x0
  406248:	mov	x0, x20
  40624c:	bl	402f50 <open@plt>
  406250:	mov	w1, #0x0                   	// #0
  406254:	mov	w20, w0
  406258:	mov	x0, x19
  40625c:	bl	402f50 <open@plt>
  406260:	cmp	w20, #0x0
  406264:	mov	w19, w0
  406268:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  40626c:	b.lt	406340 <ferror@plt+0x2d70>  // b.tstop
  406270:	add	x1, sp, #0x60
  406274:	mov	w0, w20
  406278:	bl	476488 <_obstack_memory_used@@Base+0x1a098>
  40627c:	tbnz	w0, #31, 406340 <ferror@plt+0x2d70>
  406280:	add	x1, sp, #0xe0
  406284:	mov	w0, w19
  406288:	bl	476488 <_obstack_memory_used@@Base+0x1a098>
  40628c:	tbnz	w0, #31, 406340 <ferror@plt+0x2d70>
  406290:	ldr	x22, [sp, #144]
  406294:	ldr	x0, [sp, #272]
  406298:	cmp	x22, x0
  40629c:	b.ne	406340 <ferror@plt+0x2d70>  // b.any
  4062a0:	mov	x27, #0x1000                	// #4096
  4062a4:	add	x25, x21, x27
  4062a8:	mov	w26, #0x1001                	// #4097
  4062ac:	cbz	x22, 406308 <ferror@plt+0x2d38>
  4062b0:	cmp	w22, w26
  4062b4:	mov	x1, x21
  4062b8:	csel	x23, x22, x27, lt  // lt = tstop
  4062bc:	mov	w0, w20
  4062c0:	mov	x2, x23
  4062c4:	bl	4033c0 <read@plt>
  4062c8:	mov	x24, x0
  4062cc:	cmp	x0, w23, sxtw
  4062d0:	b.ne	406340 <ferror@plt+0x2d70>  // b.any
  4062d4:	mov	x2, x23
  4062d8:	mov	x1, x25
  4062dc:	mov	w0, w19
  4062e0:	bl	4033c0 <read@plt>
  4062e4:	cmp	x24, x0
  4062e8:	b.ne	406340 <ferror@plt+0x2d70>  // b.any
  4062ec:	mov	x2, x23
  4062f0:	mov	x1, x25
  4062f4:	mov	x0, x21
  4062f8:	bl	4031e0 <memcmp@plt>
  4062fc:	cbnz	w0, 406340 <ferror@plt+0x2d70>
  406300:	sub	x22, x22, x23
  406304:	b	4062ac <ferror@plt+0x2cdc>
  406308:	mov	x0, x21
  40630c:	bl	4032a0 <free@plt>
  406310:	mov	w0, w20
  406314:	bl	403120 <close@plt>
  406318:	mov	w0, w19
  40631c:	bl	403120 <close@plt>
  406320:	mov	w0, #0x1                   	// #1
  406324:	ldp	x19, x20, [sp, #16]
  406328:	ldp	x21, x22, [sp, #32]
  40632c:	ldp	x23, x24, [sp, #48]
  406330:	ldp	x25, x26, [sp, #64]
  406334:	ldr	x27, [sp, #80]
  406338:	ldp	x29, x30, [sp], #352
  40633c:	ret
  406340:	mov	x0, x21
  406344:	bl	4032a0 <free@plt>
  406348:	mov	w0, w20
  40634c:	bl	403120 <close@plt>
  406350:	mov	w0, w19
  406354:	bl	403120 <close@plt>
  406358:	mov	w0, #0x0                   	// #0
  40635c:	b	406324 <ferror@plt+0x2d54>
  406360:	stp	x29, x30, [sp, #-416]!
  406364:	mov	x29, sp
  406368:	stp	x25, x26, [sp, #64]
  40636c:	mov	x25, x0
  406370:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406374:	stp	x19, x20, [sp, #16]
  406378:	ldr	x0, [x0, #1528]
  40637c:	stp	x21, x22, [sp, #32]
  406380:	stp	x23, x24, [sp, #48]
  406384:	stp	x27, x28, [sp, #80]
  406388:	cbz	x0, 406404 <ferror@plt+0x2e34>
  40638c:	adrp	x22, 487000 <_obstack_memory_used@@Base+0x2ac10>
  406390:	add	x22, x22, #0xd0e
  406394:	mov	x1, x22
  406398:	bl	403220 <strcmp@plt>
  40639c:	cbz	w0, 406404 <ferror@plt+0x2e34>
  4063a0:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x19c10>
  4063a4:	adrp	x27, 476000 <_obstack_memory_used@@Base+0x19c10>
  4063a8:	adrp	x28, 476000 <_obstack_memory_used@@Base+0x19c10>
  4063ac:	add	x26, x26, #0x87a
  4063b0:	add	x27, x27, #0x87d
  4063b4:	add	x28, x28, #0x884
  4063b8:	mov	x20, #0x0                   	// #0
  4063bc:	mov	w19, #0x0                   	// #0
  4063c0:	mov	w21, #0xffffffff            	// #-1
  4063c4:	ldr	x23, [x25, x20, lsl #3]
  4063c8:	mov	w24, w20
  4063cc:	lsl	x3, x20, #3
  4063d0:	cbz	x23, 40645c <ferror@plt+0x2e8c>
  4063d4:	mov	x1, x26
  4063d8:	mov	x0, x23
  4063dc:	bl	403220 <strcmp@plt>
  4063e0:	cbz	w0, 406404 <ferror@plt+0x2e34>
  4063e4:	ldrb	w0, [x23]
  4063e8:	cmp	w0, #0x2d
  4063ec:	b.ne	406424 <ferror@plt+0x2e54>  // b.any
  4063f0:	ldrb	w0, [x23, #1]
  4063f4:	cmp	w0, #0x6f
  4063f8:	b.ne	406424 <ferror@plt+0x2e54>  // b.any
  4063fc:	cmn	w21, #0x1
  406400:	b.eq	40644c <ferror@plt+0x2e7c>  // b.none
  406404:	mov	sp, x29
  406408:	ldp	x19, x20, [sp, #16]
  40640c:	ldp	x21, x22, [sp, #32]
  406410:	ldp	x23, x24, [sp, #48]
  406414:	ldp	x25, x26, [sp, #64]
  406418:	ldp	x27, x28, [sp, #80]
  40641c:	ldp	x29, x30, [sp], #416
  406420:	ret
  406424:	mov	x1, x27
  406428:	mov	x0, x23
  40642c:	bl	403220 <strcmp@plt>
  406430:	cbz	w0, 406454 <ferror@plt+0x2e84>
  406434:	mov	x1, x28
  406438:	mov	x0, x23
  40643c:	bl	403220 <strcmp@plt>
  406440:	cbz	w0, 406404 <ferror@plt+0x2e34>
  406444:	add	x20, x20, #0x1
  406448:	b	4063c4 <ferror@plt+0x2df4>
  40644c:	mov	w21, w20
  406450:	b	406444 <ferror@plt+0x2e74>
  406454:	mov	w19, #0x1                   	// #1
  406458:	b	406444 <ferror@plt+0x2e74>
  40645c:	str	x3, [x29, #104]
  406460:	cmn	w21, #0x1
  406464:	eor	w19, w19, #0x1
  406468:	csinc	w19, w19, wzr, ne  // ne = any
  40646c:	cbnz	w19, 406404 <ferror@plt+0x2e34>
  406470:	add	w20, w20, #0x4
  406474:	mov	x1, x25
  406478:	stp	xzr, xzr, [x29, #112]
  40647c:	add	w24, w24, #0x2
  406480:	sbfiz	x20, x20, #3, #32
  406484:	add	x0, x20, #0xf
  406488:	sub	x23, x20, #0x18
  40648c:	and	x0, x0, #0xfffffffffffffff0
  406490:	mov	x2, x23
  406494:	sub	sp, sp, x0
  406498:	stp	xzr, xzr, [x29, #128]
  40649c:	mov	x19, sp
  4064a0:	mov	x0, x19
  4064a4:	stp	xzr, xzr, [x29, #144]
  4064a8:	bl	402cd0 <memcpy@plt>
  4064ac:	ldr	x3, [x29, #104]
  4064b0:	sub	x28, x20, #0x10
  4064b4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4064b8:	add	x0, x0, #0x892
  4064bc:	sbfiz	x1, x21, #3, #32
  4064c0:	add	x21, x19, w21, sxtw #3
  4064c4:	str	x0, [x19, x3]
  4064c8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4064cc:	add	x0, x0, #0x8a2
  4064d0:	str	x0, [x19, x23]
  4064d4:	str	xzr, [x19, x28]
  4064d8:	ldr	x0, [x19, x1]
  4064dc:	ldrb	w0, [x0, #2]
  4064e0:	cbnz	w0, 406584 <ferror@plt+0x2fb4>
  4064e4:	str	x22, [x21, #8]
  4064e8:	adrp	x26, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  4064ec:	adrp	x25, 476000 <_obstack_memory_used@@Base+0x19c10>
  4064f0:	add	x21, x29, #0x70
  4064f4:	add	x26, x26, #0x457
  4064f8:	add	x25, x25, #0x8b4
  4064fc:	mov	w22, #0x0                   	// #0
  406500:	mov	x0, x26
  406504:	bl	45c0d8 <ferror@plt+0x58b08>
  406508:	mov	x23, x0
  40650c:	str	x23, [x21]
  406510:	mov	x0, x25
  406514:	bl	45c0d8 <ferror@plt+0x58b08>
  406518:	mov	x2, x0
  40651c:	cmp	w22, #0x2
  406520:	str	x2, [x21, #24]
  406524:	cset	w4, eq  // eq = none
  406528:	mov	x1, x23
  40652c:	mov	w3, w4
  406530:	mov	x0, x19
  406534:	bl	4060e4 <ferror@plt+0x2b14>
  406538:	cmp	w0, #0x2
  40653c:	b.eq	406594 <ferror@plt+0x2fc4>  // b.none
  406540:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406544:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406548:	add	x1, x1, #0x8b9
  40654c:	ldr	x0, [x0, #1264]
  406550:	bl	421398 <ferror@plt+0x1ddc8>
  406554:	mov	x19, #0x0                   	// #0
  406558:	add	x0, x29, #0x70
  40655c:	ldr	x20, [x0, x19, lsl #3]
  406560:	cbz	x20, 406574 <ferror@plt+0x2fa4>
  406564:	mov	x0, x20
  406568:	bl	403570 <unlink@plt>
  40656c:	mov	x0, x20
  406570:	bl	4032a0 <free@plt>
  406574:	add	x19, x19, #0x1
  406578:	cmp	x19, #0x6
  40657c:	b.ne	406558 <ferror@plt+0x2f88>  // b.any
  406580:	b	406404 <ferror@plt+0x2e34>
  406584:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  406588:	add	x0, x0, #0x8b0
  40658c:	str	x0, [x19, x1]
  406590:	b	4064e8 <ferror@plt+0x2f18>
  406594:	add	w22, w22, #0x1
  406598:	add	x21, x21, #0x8
  40659c:	cmp	w22, #0x3
  4065a0:	b.ne	406500 <ferror@plt+0x2f30>  // b.any
  4065a4:	ldp	x0, x1, [x29, #112]
  4065a8:	bl	406214 <ferror@plt+0x2c44>
  4065ac:	tst	w0, #0xff
  4065b0:	b.eq	406540 <ferror@plt+0x2f70>  // b.none
  4065b4:	ldp	x0, x1, [x29, #136]
  4065b8:	bl	406214 <ferror@plt+0x2c44>
  4065bc:	ands	w23, w0, #0xff
  4065c0:	b.eq	406540 <ferror@plt+0x2f70>  // b.none
  4065c4:	ldr	x27, [x29, #152]
  4065c8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4065cc:	ldr	x21, [x29, #128]
  4065d0:	add	x1, x1, #0x901
  4065d4:	mov	x0, x27
  4065d8:	bl	402f20 <fopen@plt>
  4065dc:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x19c10>
  4065e0:	mov	x25, x0
  4065e4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4065e8:	mov	x0, x21
  4065ec:	add	x1, x1, #0x904
  4065f0:	add	x26, x26, #0x907
  4065f4:	bl	402f20 <fopen@plt>
  4065f8:	mov	x22, x0
  4065fc:	mov	x2, x25
  406600:	add	x0, x29, #0xa0
  406604:	mov	w1, #0x100                 	// #256
  406608:	bl	4035a0 <fgets@plt>
  40660c:	cbz	x0, 406644 <ferror@plt+0x3074>
  406610:	cbz	w23, 406620 <ferror@plt+0x3050>
  406614:	mov	x1, x22
  406618:	mov	x0, x26
  40661c:	bl	402d60 <fputs@plt>
  406620:	mov	x1, x22
  406624:	add	x0, x29, #0xa0
  406628:	bl	402d60 <fputs@plt>
  40662c:	add	x0, x29, #0xa0
  406630:	mov	w1, #0xa                   	// #10
  406634:	bl	4032f0 <strchr@plt>
  406638:	cmp	x0, #0x0
  40663c:	cset	w23, ne  // ne = any
  406640:	b	4065fc <ferror@plt+0x302c>
  406644:	mov	x0, x25
  406648:	bl	402ee0 <fclose@plt>
  40664c:	mov	x0, x22
  406650:	bl	402ee0 <fclose@plt>
  406654:	mov	x0, x21
  406658:	mov	w1, #0x402                 	// #1026
  40665c:	bl	402f50 <open@plt>
  406660:	mov	w22, w0
  406664:	tbnz	w0, #31, 406554 <ferror@plt+0x2f84>
  406668:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40666c:	add	x25, x25, #0xd73
  406670:	mov	x23, #0x0                   	// #0
  406674:	mov	x2, #0x3                   	// #3
  406678:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40667c:	add	x1, x1, #0x90b
  406680:	bl	403160 <write@plt>
  406684:	mov	x1, x25
  406688:	mov	x2, #0x1                   	// #1
  40668c:	mov	w0, w22
  406690:	bl	403160 <write@plt>
  406694:	ldr	x26, [x19, x23, lsl #3]
  406698:	add	x23, x23, #0x1
  40669c:	mov	x0, x26
  4066a0:	bl	402d50 <strlen@plt>
  4066a4:	mov	x1, x26
  4066a8:	mov	x2, x0
  4066ac:	mov	w0, w22
  4066b0:	bl	403160 <write@plt>
  4066b4:	cmp	w24, w23
  4066b8:	b.gt	406684 <ferror@plt+0x30b4>
  4066bc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4066c0:	add	x1, x1, #0x67
  4066c4:	mov	x2, #0x2                   	// #2
  4066c8:	mov	w0, w22
  4066cc:	add	x20, x19, x20
  4066d0:	bl	403160 <write@plt>
  4066d4:	mov	w0, w22
  4066d8:	bl	403120 <close@plt>
  4066dc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4066e0:	add	x0, x0, #0x87a
  4066e4:	str	x0, [x19, x28]
  4066e8:	mov	x2, x27
  4066ec:	stur	xzr, [x20, #-8]
  4066f0:	mov	x1, x21
  4066f4:	mov	x0, x19
  4066f8:	mov	w4, #0x1                   	// #1
  4066fc:	mov	w3, #0x0                   	// #0
  406700:	bl	4060e4 <ferror@plt+0x2b14>
  406704:	cmp	w0, #0x1
  406708:	b.ne	406554 <ferror@plt+0x2f84>  // b.any
  40670c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406710:	mov	x2, x21
  406714:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406718:	add	x1, x1, #0x90f
  40671c:	ldr	x0, [x0, #1264]
  406720:	bl	421398 <ferror@plt+0x1ddc8>
  406724:	mov	x0, x21
  406728:	bl	4032a0 <free@plt>
  40672c:	str	xzr, [x29, #128]
  406730:	b	406554 <ferror@plt+0x2f84>
  406734:	stp	x29, x30, [sp, #-48]!
  406738:	cmp	w0, #0x1
  40673c:	mov	x29, sp
  406740:	stp	x19, x20, [sp, #16]
  406744:	stp	x21, x22, [sp, #32]
  406748:	b.ne	406794 <ferror@plt+0x31c4>  // b.any
  40674c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406750:	mov	x21, x1
  406754:	add	x19, x19, #0x518
  406758:	mov	x20, #0x0                   	// #0
  40675c:	ldr	w0, [x19, #232]
  406760:	cmp	w0, w20
  406764:	b.le	4067ac <ferror@plt+0x31dc>
  406768:	ldr	x0, [x19, #240]
  40676c:	lsl	x22, x20, #3
  406770:	ldr	x0, [x0, x22]
  406774:	cbz	x0, 40678c <ferror@plt+0x31bc>
  406778:	ldr	x1, [x21]
  40677c:	bl	45a8bc <ferror@plt+0x572ec>
  406780:	cbnz	w0, 40678c <ferror@plt+0x31bc>
  406784:	ldr	x0, [x19, #240]
  406788:	str	xzr, [x0, x22]
  40678c:	add	x20, x20, #0x1
  406790:	b	40675c <ferror@plt+0x318c>
  406794:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  406798:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40679c:	add	x2, x2, #0x95f
  4067a0:	add	x0, x0, #0x6e9
  4067a4:	mov	w1, #0x24db                	// #9435
  4067a8:	bl	403600 <ferror@plt+0x30>
  4067ac:	mov	x0, #0x0                   	// #0
  4067b0:	ldp	x19, x20, [sp, #16]
  4067b4:	ldp	x21, x22, [sp, #32]
  4067b8:	ldp	x29, x30, [sp], #48
  4067bc:	ret
  4067c0:	stp	x29, x30, [sp, #-64]!
  4067c4:	cmp	w0, #0x2
  4067c8:	mov	x29, sp
  4067cc:	stp	x19, x20, [sp, #16]
  4067d0:	stp	x21, x22, [sp, #32]
  4067d4:	str	x23, [sp, #48]
  4067d8:	b.ne	40682c <ferror@plt+0x325c>  // b.any
  4067dc:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4067e0:	mov	x21, x1
  4067e4:	add	x19, x19, #0x518
  4067e8:	mov	x20, #0x0                   	// #0
  4067ec:	ldr	w0, [x19, #232]
  4067f0:	cmp	w0, w20
  4067f4:	b.le	406844 <ferror@plt+0x3274>
  4067f8:	ldr	x0, [x19, #240]
  4067fc:	lsl	x22, x20, #3
  406800:	ldr	x0, [x0, x22]
  406804:	cbz	x0, 406824 <ferror@plt+0x3254>
  406808:	ldr	x1, [x21]
  40680c:	bl	45a8bc <ferror@plt+0x572ec>
  406810:	cbnz	w0, 406824 <ferror@plt+0x3254>
  406814:	ldr	x0, [x21, #8]
  406818:	ldr	x23, [x19, #240]
  40681c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  406820:	str	x0, [x23, x22]
  406824:	add	x20, x20, #0x1
  406828:	b	4067ec <ferror@plt+0x321c>
  40682c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  406830:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  406834:	add	x2, x2, #0x97c
  406838:	add	x0, x0, #0x6e9
  40683c:	mov	w1, #0x24c6                	// #9414
  406840:	bl	403600 <ferror@plt+0x30>
  406844:	mov	x0, #0x0                   	// #0
  406848:	ldp	x19, x20, [sp, #16]
  40684c:	ldp	x21, x22, [sp, #32]
  406850:	ldr	x23, [sp, #48]
  406854:	ldp	x29, x30, [sp], #64
  406858:	ret
  40685c:	stp	x29, x30, [sp, #-32]!
  406860:	mov	x29, sp
  406864:	str	x19, [sp, #16]
  406868:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40686c:	add	x19, x19, #0x518
  406870:	ldr	w1, [x19, #248]
  406874:	cbnz	w1, 406898 <ferror@plt+0x32c8>
  406878:	mov	w0, #0x10                  	// #16
  40687c:	str	w0, [x19, #248]
  406880:	mov	x0, #0x180                 	// #384
  406884:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  406888:	str	x0, [x19, #16]
  40688c:	ldr	x19, [sp, #16]
  406890:	ldp	x29, x30, [sp], #32
  406894:	ret
  406898:	ldr	w0, [x19, #24]
  40689c:	cmp	w1, w0
  4068a0:	b.ne	40688c <ferror@plt+0x32bc>  // b.any
  4068a4:	lsl	w1, w1, #1
  4068a8:	mov	w0, #0x18                  	// #24
  4068ac:	str	w1, [x19, #248]
  4068b0:	smull	x1, w1, w0
  4068b4:	ldr	x0, [x19, #16]
  4068b8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4068bc:	b	406888 <ferror@plt+0x32b8>
  4068c0:	stp	x29, x30, [sp, #-80]!
  4068c4:	mov	x29, sp
  4068c8:	stp	x19, x20, [sp, #16]
  4068cc:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4068d0:	add	x20, x20, #0x518
  4068d4:	mov	x19, x1
  4068d8:	stp	x21, x22, [sp, #32]
  4068dc:	mov	x21, x0
  4068e0:	and	w22, w4, #0xff
  4068e4:	stp	x23, x24, [sp, #48]
  4068e8:	mov	x24, x2
  4068ec:	and	w23, w3, #0xff
  4068f0:	stp	x25, x26, [sp, #64]
  4068f4:	bl	40685c <ferror@plt+0x328c>
  4068f8:	ldr	w0, [x20, #24]
  4068fc:	mov	w25, #0x18                  	// #24
  406900:	ldr	x1, [x20, #16]
  406904:	add	x21, x21, #0x1
  406908:	smull	x0, w0, w25
  40690c:	add	x26, x1, x0
  406910:	str	x21, [x1, x0]
  406914:	cbnz	x19, 40695c <ferror@plt+0x338c>
  406918:	str	xzr, [x26, #8]
  40691c:	ldr	w1, [x20, #24]
  406920:	mov	w0, #0x18                  	// #24
  406924:	ldr	x2, [x20, #16]
  406928:	ldp	x25, x26, [sp, #64]
  40692c:	smaddl	x0, w1, w0, x2
  406930:	add	w1, w1, #0x1
  406934:	str	w1, [x20, #24]
  406938:	ldp	x19, x20, [sp, #16]
  40693c:	strb	w22, [x0, #20]
  406940:	strb	w23, [x0, #21]
  406944:	strb	wzr, [x0, #22]
  406948:	ldp	x21, x22, [sp, #32]
  40694c:	ldp	x23, x24, [sp, #48]
  406950:	str	wzr, [x0, #16]
  406954:	ldp	x29, x30, [sp], #80
  406958:	ret
  40695c:	add	x19, x19, #0x1
  406960:	lsl	x19, x19, #3
  406964:	mov	x0, x19
  406968:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40696c:	ldr	w21, [x20, #24]
  406970:	sub	x19, x19, #0x8
  406974:	str	x0, [x26, #8]
  406978:	mov	x2, x19
  40697c:	ldr	x0, [x20, #16]
  406980:	mov	x1, x24
  406984:	smaddl	x21, w21, w25, x0
  406988:	ldr	x0, [x21, #8]
  40698c:	bl	402cd0 <memcpy@plt>
  406990:	ldr	x0, [x21, #8]
  406994:	str	xzr, [x0, x19]
  406998:	b	40691c <ferror@plt+0x334c>
  40699c:	stp	x29, x30, [sp, #-32]!
  4069a0:	mov	x29, sp
  4069a4:	str	x19, [sp, #16]
  4069a8:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4069ac:	add	x19, x19, #0x518
  4069b0:	ldr	w1, [x19, #252]
  4069b4:	cbnz	w1, 4069d8 <ferror@plt+0x3408>
  4069b8:	mov	w0, #0x10                  	// #16
  4069bc:	str	w0, [x19, #252]
  4069c0:	mov	x0, #0x200                 	// #512
  4069c4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4069c8:	str	x0, [x19, #256]
  4069cc:	ldr	x19, [sp, #16]
  4069d0:	ldp	x29, x30, [sp], #32
  4069d4:	ret
  4069d8:	ldr	w0, [x19, #232]
  4069dc:	cmp	w1, w0
  4069e0:	b.ne	4069cc <ferror@plt+0x33fc>  // b.any
  4069e4:	ldr	x0, [x19, #256]
  4069e8:	lsl	w1, w1, #1
  4069ec:	str	w1, [x19, #252]
  4069f0:	sbfiz	x1, x1, #5, #32
  4069f4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4069f8:	b	4069c8 <ferror@plt+0x33f8>
  4069fc:	stp	x29, x30, [sp, #-32]!
  406a00:	mov	x29, sp
  406a04:	stp	x19, x20, [sp, #16]
  406a08:	mov	x20, x0
  406a0c:	mov	x19, x1
  406a10:	bl	40699c <ferror@plt+0x33cc>
  406a14:	adrp	x2, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406a18:	add	x2, x2, #0x518
  406a1c:	ldr	w3, [x2, #232]
  406a20:	ldr	x1, [x2, #256]
  406a24:	sbfiz	x0, x3, #5, #32
  406a28:	add	w3, w3, #0x1
  406a2c:	add	x4, x1, x0
  406a30:	str	x20, [x1, x0]
  406a34:	str	x19, [x4, #8]
  406a38:	str	w3, [x2, #232]
  406a3c:	ldp	x19, x20, [sp, #16]
  406a40:	ldp	x29, x30, [sp], #32
  406a44:	ret
  406a48:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406a4c:	add	x0, x0, #0x518
  406a50:	ldrb	w1, [x0, #264]
  406a54:	cbz	w1, 406a74 <ferror@plt+0x34a4>
  406a58:	stp	x29, x30, [sp, #-16]!
  406a5c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  406a60:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406a64:	mov	x29, sp
  406a68:	ldr	w0, [x0, #584]
  406a6c:	add	x1, x1, #0x99a
  406a70:	bl	422d58 <ferror@plt+0x1f788>
  406a74:	mov	w1, #0x1                   	// #1
  406a78:	strb	w1, [x0, #264]
  406a7c:	ret
  406a80:	stp	x29, x30, [sp, #-16]!
  406a84:	mov	x29, sp
  406a88:	ldr	x1, [x0, #16]
  406a8c:	ldrb	w2, [x1, #1]
  406a90:	cmp	w2, #0x57
  406a94:	b.ne	406aec <ferror@plt+0x351c>  // b.any
  406a98:	ldrb	w2, [x1, #2]
  406a9c:	cmp	w2, #0x6e
  406aa0:	b.ne	406aec <ferror@plt+0x351c>  // b.any
  406aa4:	ldrb	w2, [x1, #3]
  406aa8:	cmp	w2, #0x6f
  406aac:	b.ne	406aec <ferror@plt+0x351c>  // b.any
  406ab0:	ldrb	w1, [x1, #4]
  406ab4:	cmp	w1, #0x2d
  406ab8:	b.ne	406aec <ferror@plt+0x351c>  // b.any
  406abc:	ldr	w1, [x0, #80]
  406ac0:	tbnz	w1, #6, 406aec <ferror@plt+0x351c>
  406ac4:	ldr	x1, [x0, #64]
  406ac8:	mov	w4, #0x1                   	// #1
  406acc:	add	x2, x0, #0x28
  406ad0:	sub	x1, x1, #0x1
  406ad4:	ldr	x0, [x0, #32]
  406ad8:	mov	w3, #0x0                   	// #0
  406adc:	bl	4068c0 <ferror@plt+0x32f0>
  406ae0:	mov	w0, #0x0                   	// #0
  406ae4:	ldp	x29, x30, [sp], #16
  406ae8:	ret
  406aec:	ldr	x1, [x0]
  406af0:	cmp	x1, #0x596
  406af4:	b.ne	406b04 <ferror@plt+0x3534>  // b.any
  406af8:	mov	w4, #0x0                   	// #0
  406afc:	ldr	x1, [x0, #64]
  406b00:	b	406acc <ferror@plt+0x34fc>
  406b04:	mov	w0, #0x1                   	// #1
  406b08:	b	406ae4 <ferror@plt+0x3514>
  406b0c:	ldr	x1, [x0]
  406b10:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  406b14:	add	x2, x2, #0xfc8
  406b18:	mov	x3, #0x60                  	// #96
  406b1c:	madd	x1, x1, x3, x2
  406b20:	ldrb	w1, [x1, #64]
  406b24:	tbz	w1, #6, 406b38 <ferror@plt+0x3568>
  406b28:	ldr	x1, [x0, #24]
  406b2c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  406b30:	add	x0, x0, #0x9bb
  406b34:	b	4221dc <ferror@plt+0x1ec0c>
  406b38:	add	x2, x0, #0x28
  406b3c:	mov	w4, #0x1                   	// #1
  406b40:	ldr	x1, [x0, #64]
  406b44:	mov	w3, #0x0                   	// #0
  406b48:	ldr	x0, [x0, #32]
  406b4c:	sub	x1, x1, #0x1
  406b50:	b	4068c0 <ferror@plt+0x32f0>
  406b54:	cmp	w0, #0x1
  406b58:	b.eq	406b74 <ferror@plt+0x35a4>  // b.none
  406b5c:	mov	x0, #0x0                   	// #0
  406b60:	ret
  406b64:	mov	x0, #0x0                   	// #0
  406b68:	ldr	x19, [sp, #16]
  406b6c:	ldp	x29, x30, [sp], #32
  406b70:	ret
  406b74:	stp	x29, x30, [sp, #-32]!
  406b78:	mov	x29, sp
  406b7c:	ldr	x0, [x1]
  406b80:	str	x19, [sp, #16]
  406b84:	mov	x19, x1
  406b88:	ldrb	w1, [x0]
  406b8c:	cmp	w1, #0x2f
  406b90:	b.ne	406b64 <ferror@plt+0x3594>  // b.any
  406b94:	mov	w1, #0x4                   	// #4
  406b98:	bl	403190 <access@plt>
  406b9c:	cbnz	w0, 406b64 <ferror@plt+0x3594>
  406ba0:	ldr	x0, [x19]
  406ba4:	b	406b68 <ferror@plt+0x3598>
  406ba8:	stp	x29, x30, [sp, #-80]!
  406bac:	mov	x29, sp
  406bb0:	stp	x19, x20, [sp, #16]
  406bb4:	mov	x19, x1
  406bb8:	mov	w20, w2
  406bbc:	stp	x21, x22, [sp, #32]
  406bc0:	mov	x21, x0
  406bc4:	ldrb	w0, [x1]
  406bc8:	cmp	w0, #0x2f
  406bcc:	b.ne	406bf8 <ferror@plt+0x3628>  // b.any
  406bd0:	mov	w1, w2
  406bd4:	mov	x0, x19
  406bd8:	bl	403190 <access@plt>
  406bdc:	cbnz	w0, 406c38 <ferror@plt+0x3668>
  406be0:	mov	x0, x19
  406be4:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  406be8:	ldp	x19, x20, [sp, #16]
  406bec:	ldp	x21, x22, [sp, #32]
  406bf0:	ldp	x29, x30, [sp], #80
  406bf4:	ret
  406bf8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  406bfc:	add	x0, x0, #0x122
  406c00:	and	w22, w3, #0xff
  406c04:	stp	x1, x0, [sp, #48]
  406c08:	mov	x0, x1
  406c0c:	bl	402d50 <strlen@plt>
  406c10:	sxtw	x2, w0
  406c14:	add	x4, sp, #0x30
  406c18:	mov	w1, w22
  406c1c:	adrp	x3, 405000 <ferror@plt+0x1a30>
  406c20:	add	x3, x3, #0x288
  406c24:	stp	w0, wzr, [sp, #64]
  406c28:	mov	x0, x21
  406c2c:	str	w20, [sp, #72]
  406c30:	bl	404ed4 <ferror@plt+0x1904>
  406c34:	b	406be8 <ferror@plt+0x3618>
  406c38:	mov	x0, #0x0                   	// #0
  406c3c:	b	406be8 <ferror@plt+0x3618>
  406c40:	stp	x29, x30, [sp, #-32]!
  406c44:	mov	x1, x0
  406c48:	mov	w3, #0x1                   	// #1
  406c4c:	mov	x29, sp
  406c50:	str	x19, [sp, #16]
  406c54:	mov	x19, x0
  406c58:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  406c5c:	add	x0, x0, #0x4a0
  406c60:	mov	w2, #0x4                   	// #4
  406c64:	add	x0, x0, #0x848
  406c68:	bl	406ba8 <ferror@plt+0x35d8>
  406c6c:	cmp	x0, #0x0
  406c70:	csel	x0, x0, x19, ne  // ne = any
  406c74:	ldr	x19, [sp, #16]
  406c78:	ldp	x29, x30, [sp], #32
  406c7c:	ret
  406c80:	stp	x29, x30, [sp, #-16]!
  406c84:	mov	x29, sp
  406c88:	cbz	w0, 406ca4 <ferror@plt+0x36d4>
  406c8c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  406c90:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  406c94:	add	x2, x2, #0x9e0
  406c98:	add	x0, x0, #0x6e9
  406c9c:	mov	w1, #0x2588                	// #9608
  406ca0:	bl	403600 <ferror@plt+0x30>
  406ca4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  406ca8:	add	x0, x0, #0x840
  406cac:	bl	406c40 <ferror@plt+0x3670>
  406cb0:	mov	x1, x0
  406cb4:	ldp	x29, x30, [sp], #16
  406cb8:	mov	x2, #0x0                   	// #0
  406cbc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  406cc0:	add	x0, x0, #0x9fd
  406cc4:	b	45a668 <ferror@plt+0x57098>
  406cc8:	stp	x29, x30, [sp, #-256]!
  406ccc:	mov	x29, sp
  406cd0:	stp	x25, x26, [sp, #64]
  406cd4:	adrp	x26, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  406cd8:	add	x26, x26, #0x230
  406cdc:	stp	x23, x24, [sp, #48]
  406ce0:	mov	x23, x0
  406ce4:	and	w0, w1, #0xff
  406ce8:	str	w0, [sp, #120]
  406cec:	and	w25, w2, #0xff
  406cf0:	ldr	w0, [x26, #3816]
  406cf4:	stp	x19, x20, [sp, #16]
  406cf8:	stp	x21, x22, [sp, #32]
  406cfc:	stp	x27, x28, [sp, #80]
  406d00:	cbz	w0, 406d1c <ferror@plt+0x374c>
  406d04:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406d08:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406d0c:	mov	x2, x23
  406d10:	add	x1, x1, #0xa0a
  406d14:	ldr	x0, [x0, #1264]
  406d18:	bl	421398 <ferror@plt+0x1ddc8>
  406d1c:	mov	x0, x23
  406d20:	mov	w2, #0x0                   	// #0
  406d24:	mov	w1, #0x0                   	// #0
  406d28:	bl	402f50 <open@plt>
  406d2c:	mov	w20, w0
  406d30:	tbz	w0, #31, 406d4c <ferror@plt+0x377c>
  406d34:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406d38:	mov	x2, x23
  406d3c:	add	x1, x1, #0xa21
  406d40:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  406d44:	ldr	w0, [x0, #584]
  406d48:	bl	422d58 <ferror@plt+0x1f788>
  406d4c:	add	x1, sp, #0x80
  406d50:	mov	x0, x23
  406d54:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  406d58:	tbnz	w0, #31, 406d34 <ferror@plt+0x3764>
  406d5c:	ldr	x0, [sp, #176]
  406d60:	add	x0, x0, #0x1
  406d64:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  406d68:	ldr	w2, [sp, #176]
  406d6c:	mov	x1, x0
  406d70:	mov	x21, x0
  406d74:	mov	w0, w20
  406d78:	bl	4033c0 <read@plt>
  406d7c:	mov	x19, x0
  406d80:	tbnz	w0, #31, 406d34 <ferror@plt+0x3764>
  406d84:	strb	wzr, [x21, w0, sxtw]
  406d88:	mov	w0, w20
  406d8c:	bl	403120 <close@plt>
  406d90:	add	w0, w19, #0x1
  406d94:	sxtw	x0, w0
  406d98:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  406d9c:	mov	x1, x21
  406da0:	mov	x20, x0
  406da4:	ldrb	w2, [x1]
  406da8:	cbz	w2, 406de4 <ferror@plt+0x3814>
  406dac:	cmp	w2, #0xd
  406db0:	b.ne	406dd8 <ferror@plt+0x3808>  // b.any
  406db4:	cmp	x21, x1
  406db8:	b.cs	406dc8 <ferror@plt+0x37f8>  // b.hs, b.nlast
  406dbc:	ldurb	w2, [x1, #-1]
  406dc0:	cmp	w2, #0xa
  406dc4:	b.eq	406ddc <ferror@plt+0x380c>  // b.none
  406dc8:	ldrb	w2, [x1, #1]
  406dcc:	cmp	w2, #0xa
  406dd0:	b.eq	406ddc <ferror@plt+0x380c>  // b.none
  406dd4:	mov	w2, #0xa                   	// #10
  406dd8:	strb	w2, [x0], #1
  406ddc:	add	x1, x1, #0x1
  406de0:	b	406da4 <ferror@plt+0x37d4>
  406de4:	strb	wzr, [x0]
  406de8:	mov	x0, x21
  406dec:	adrp	x24, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  406df0:	adrp	x22, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406df4:	bl	4032a0 <free@plt>
  406df8:	mov	x21, x20
  406dfc:	add	x0, x24, #0x4a0
  406e00:	add	x22, x22, #0x518
  406e04:	str	x0, [sp, #104]
  406e08:	add	x0, x0, #0x848
  406e0c:	str	x0, [sp, #112]
  406e10:	mov	x0, x21
  406e14:	bl	404394 <ferror@plt+0xdc4>
  406e18:	mov	x19, x0
  406e1c:	ldrb	w0, [x0]
  406e20:	cbz	w0, 407340 <ferror@plt+0x3d70>
  406e24:	cmp	w0, #0x25
  406e28:	b.ne	40718c <ferror@plt+0x3bbc>  // b.any
  406e2c:	ldr	w0, [sp, #120]
  406e30:	mov	x21, x19
  406e34:	cbnz	w0, 407190 <ferror@plt+0x3bc0>
  406e38:	ldrb	w0, [x21]
  406e3c:	mov	x24, x21
  406e40:	add	x21, x21, #0x1
  406e44:	cbz	w0, 406e50 <ferror@plt+0x3880>
  406e48:	cmp	w0, #0xa
  406e4c:	b.ne	406e38 <ferror@plt+0x3868>  // b.any
  406e50:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406e54:	mov	x0, x19
  406e58:	add	x1, x1, #0xa3f
  406e5c:	mov	x2, #0x8                   	// #8
  406e60:	bl	402f80 <strncmp@plt>
  406e64:	cbnz	w0, 406eec <ferror@plt+0x391c>
  406e68:	ldrb	w0, [x19, #8]
  406e6c:	cmp	w0, #0x20
  406e70:	b.eq	406e7c <ferror@plt+0x38ac>  // b.none
  406e74:	cmp	w0, #0x9
  406e78:	b.ne	406eec <ferror@plt+0x391c>  // b.any
  406e7c:	add	x19, x19, #0x9
  406e80:	ldrb	w0, [x19], #1
  406e84:	cmp	w0, #0x20
  406e88:	b.eq	406e80 <ferror@plt+0x38b0>  // b.none
  406e8c:	cmp	w0, #0x9
  406e90:	b.eq	406e80 <ferror@plt+0x38b0>  // b.none
  406e94:	cmp	w0, #0x3c
  406e98:	b.ne	406ed8 <ferror@plt+0x3908>  // b.any
  406e9c:	ldurb	w0, [x24, #-1]
  406ea0:	cmp	w0, #0x3e
  406ea4:	b.ne	406ed8 <ferror@plt+0x3908>  // b.any
  406ea8:	ldr	x0, [sp, #112]
  406eac:	sturb	wzr, [x24, #-1]
  406eb0:	mov	x1, x19
  406eb4:	mov	w2, #0x4                   	// #4
  406eb8:	mov	w3, #0x1                   	// #1
  406ebc:	bl	406ba8 <ferror@plt+0x35d8>
  406ec0:	cmp	x0, #0x0
  406ec4:	mov	w2, w25
  406ec8:	csel	x0, x0, x19, ne  // ne = any
  406ecc:	mov	w1, #0x0                   	// #0
  406ed0:	bl	406cc8 <ferror@plt+0x36f8>
  406ed4:	b	406e10 <ferror@plt+0x3840>
  406ed8:	sub	x2, x19, x20
  406edc:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406ee0:	add	x2, x2, #0x1
  406ee4:	add	x1, x1, #0xa48
  406ee8:	b	406d40 <ferror@plt+0x3770>
  406eec:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406ef0:	mov	x0, x19
  406ef4:	add	x1, x1, #0xa7e
  406ef8:	mov	x2, #0xe                   	// #14
  406efc:	bl	402f80 <strncmp@plt>
  406f00:	cbnz	w0, 406f90 <ferror@plt+0x39c0>
  406f04:	ldrb	w0, [x19, #14]
  406f08:	cmp	w0, #0x20
  406f0c:	b.eq	406f18 <ferror@plt+0x3948>  // b.none
  406f10:	cmp	w0, #0x9
  406f14:	b.ne	406f90 <ferror@plt+0x39c0>  // b.any
  406f18:	add	x19, x19, #0xf
  406f1c:	ldrb	w0, [x19], #1
  406f20:	cmp	w0, #0x20
  406f24:	b.eq	406f1c <ferror@plt+0x394c>  // b.none
  406f28:	cmp	w0, #0x9
  406f2c:	b.eq	406f1c <ferror@plt+0x394c>  // b.none
  406f30:	cmp	w0, #0x3c
  406f34:	b.ne	406ed8 <ferror@plt+0x3908>  // b.any
  406f38:	ldurb	w0, [x24, #-1]
  406f3c:	cmp	w0, #0x3e
  406f40:	b.ne	406ed8 <ferror@plt+0x3908>  // b.any
  406f44:	ldr	x0, [sp, #112]
  406f48:	sturb	wzr, [x24, #-1]
  406f4c:	mov	x1, x19
  406f50:	mov	w3, #0x1                   	// #1
  406f54:	mov	w2, #0x4                   	// #4
  406f58:	bl	406ba8 <ferror@plt+0x35d8>
  406f5c:	cbnz	x0, 406f84 <ferror@plt+0x39b4>
  406f60:	ldr	w0, [x26, #3816]
  406f64:	cbz	w0, 406e10 <ferror@plt+0x3840>
  406f68:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  406f6c:	mov	x2, x19
  406f70:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406f74:	add	x1, x1, #0xa8d
  406f78:	ldr	x0, [x0, #1264]
  406f7c:	bl	421398 <ferror@plt+0x1ddc8>
  406f80:	b	406e10 <ferror@plt+0x3840>
  406f84:	mov	w2, w25
  406f88:	mov	w1, #0x0                   	// #0
  406f8c:	b	406ed0 <ferror@plt+0x3900>
  406f90:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406f94:	mov	x0, x19
  406f98:	add	x1, x1, #0xaab
  406f9c:	mov	x2, #0x7                   	// #7
  406fa0:	bl	402f80 <strncmp@plt>
  406fa4:	cbnz	w0, 40717c <ferror@plt+0x3bac>
  406fa8:	ldrb	w0, [x19, #7]
  406fac:	cmp	w0, #0x20
  406fb0:	b.eq	406fbc <ferror@plt+0x39ec>  // b.none
  406fb4:	cmp	w0, #0x9
  406fb8:	b.ne	40717c <ferror@plt+0x3bac>  // b.any
  406fbc:	add	x19, x19, #0x8
  406fc0:	ldrb	w1, [x19]
  406fc4:	cmp	w1, #0x20
  406fc8:	b.eq	406fd4 <ferror@plt+0x3a04>  // b.none
  406fcc:	cmp	w1, #0x9
  406fd0:	b.ne	406fdc <ferror@plt+0x3a0c>  // b.any
  406fd4:	add	x19, x19, #0x1
  406fd8:	b	406fc0 <ferror@plt+0x39f0>
  406fdc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  406fe0:	add	x0, x0, #0x228
  406fe4:	mov	w2, #0x88                  	// #136
  406fe8:	ldrh	w1, [x0, w1, sxtw #1]
  406fec:	tst	w2, w1
  406ff0:	b.ne	407004 <ferror@plt+0x3a34>  // b.any
  406ff4:	sub	x2, x19, x20
  406ff8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  406ffc:	add	x1, x1, #0xab3
  407000:	b	406d40 <ferror@plt+0x3770>
  407004:	mov	x2, x19
  407008:	ldrb	w1, [x2]
  40700c:	cbz	w1, 407034 <ferror@plt+0x3a64>
  407010:	ldrh	w6, [x0, w1, sxtw #1]
  407014:	add	x4, x2, #0x1
  407018:	tbnz	w6, #6, 407024 <ferror@plt+0x3a54>
  40701c:	mov	x2, x4
  407020:	b	407008 <ferror@plt+0x3a38>
  407024:	cmp	w1, #0x20
  407028:	b.eq	40703c <ferror@plt+0x3a6c>  // b.none
  40702c:	cmp	w1, #0x9
  407030:	b.eq	40703c <ferror@plt+0x3a6c>  // b.none
  407034:	sub	x2, x2, x20
  407038:	b	406ff8 <ferror@plt+0x3a28>
  40703c:	sub	w3, w2, w19
  407040:	mov	x28, x4
  407044:	strb	wzr, [x2]
  407048:	ldrb	w1, [x28]
  40704c:	cmp	w1, #0x20
  407050:	b.eq	40705c <ferror@plt+0x3a8c>  // b.none
  407054:	cmp	w1, #0x9
  407058:	b.ne	407064 <ferror@plt+0x3a94>  // b.any
  40705c:	add	x28, x28, #0x1
  407060:	b	407048 <ferror@plt+0x3a78>
  407064:	ldrh	w1, [x0, w1, sxtw #1]
  407068:	mov	w2, #0x88                  	// #136
  40706c:	tst	w2, w1
  407070:	b.ne	40707c <ferror@plt+0x3aac>  // b.any
  407074:	sub	x2, x28, x20
  407078:	b	406ff8 <ferror@plt+0x3a28>
  40707c:	mov	x2, x28
  407080:	ldrb	w1, [x2]
  407084:	cbz	w1, 407098 <ferror@plt+0x3ac8>
  407088:	ldrh	w1, [x0, w1, sxtw #1]
  40708c:	tbnz	w1, #6, 407098 <ferror@plt+0x3ac8>
  407090:	add	x2, x2, #0x1
  407094:	b	407080 <ferror@plt+0x3ab0>
  407098:	cmp	x24, x2
  40709c:	b.ne	407034 <ferror@plt+0x3a64>  // b.any
  4070a0:	ldr	x27, [x22, #112]
  4070a4:	strb	wzr, [x24]
  4070a8:	mov	x24, x27
  4070ac:	cbz	x24, 407380 <ferror@plt+0x3db0>
  4070b0:	ldr	w0, [x24, #32]
  4070b4:	cmp	w0, w3
  4070b8:	b.ne	4070d4 <ferror@plt+0x3b04>  // b.any
  4070bc:	ldr	x0, [x24]
  4070c0:	mov	x1, x19
  4070c4:	str	w3, [sp, #124]
  4070c8:	bl	403220 <strcmp@plt>
  4070cc:	ldr	w3, [sp, #124]
  4070d0:	cbz	w0, 407390 <ferror@plt+0x3dc0>
  4070d4:	ldr	x24, [x24, #24]
  4070d8:	b	4070ac <ferror@plt+0x3adc>
  4070dc:	ldr	x27, [x27, #24]
  4070e0:	cbz	x27, 407114 <ferror@plt+0x3b44>
  4070e4:	ldr	x0, [x27]
  4070e8:	mov	x1, x28
  4070ec:	bl	403220 <strcmp@plt>
  4070f0:	cbnz	w0, 4070dc <ferror@plt+0x3b0c>
  4070f4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4070f8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4070fc:	mov	x4, x28
  407100:	mov	x3, x19
  407104:	ldr	w0, [x0, #584]
  407108:	mov	x2, x23
  40710c:	add	x1, x1, #0xae8
  407110:	bl	422d58 <ferror@plt+0x1f788>
  407114:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  407118:	ldr	w0, [x0, #280]
  40711c:	cbz	w0, 40713c <ferror@plt+0x3b6c>
  407120:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407124:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407128:	mov	x3, x28
  40712c:	mov	x2, x19
  407130:	ldr	x0, [x0, #1264]
  407134:	add	x1, x1, #0xb23
  407138:	bl	421398 <ferror@plt+0x1ddc8>
  40713c:	ldr	x0, [x24, #16]
  407140:	mov	w2, w25
  407144:	ldr	x1, [x0]
  407148:	mov	x0, x28
  40714c:	bl	405540 <ferror@plt+0x1f70>
  407150:	ldrb	w0, [x24, #37]
  407154:	cbz	w0, 407164 <ferror@plt+0x3b94>
  407158:	ldr	x0, [x24, #16]
  40715c:	ldr	x0, [x0]
  407160:	bl	4032a0 <free@plt>
  407164:	ldr	x1, [x24, #16]
  407168:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  40716c:	add	x0, x0, #0x122
  407170:	str	x0, [x1]
  407174:	strb	wzr, [x24, #37]
  407178:	b	406e10 <ferror@plt+0x3840>
  40717c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407180:	sub	x2, x19, x20
  407184:	add	x1, x1, #0xb39
  407188:	b	406d40 <ferror@plt+0x3770>
  40718c:	mov	x21, x19
  407190:	ldrb	w0, [x21]
  407194:	cmp	w0, #0x3a
  407198:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40719c:	b.eq	4071b0 <ferror@plt+0x3be0>  // b.none
  4071a0:	cmp	w0, #0xa
  4071a4:	b.eq	4071b8 <ferror@plt+0x3be8>  // b.none
  4071a8:	add	x21, x21, #0x1
  4071ac:	b	407190 <ferror@plt+0x3bc0>
  4071b0:	cmp	w0, #0x3a
  4071b4:	b.eq	4071c8 <ferror@plt+0x3bf8>  // b.none
  4071b8:	sub	x2, x21, x20
  4071bc:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4071c0:	add	x1, x1, #0xb67
  4071c4:	b	406d40 <ferror@plt+0x3770>
  4071c8:	mov	x1, x21
  4071cc:	cmp	x1, x20
  4071d0:	b.ls	4071f0 <ferror@plt+0x3c20>  // b.plast
  4071d4:	ldurb	w0, [x1, #-1]
  4071d8:	cmp	w0, #0x20
  4071dc:	b.eq	4071e8 <ferror@plt+0x3c18>  // b.none
  4071e0:	cmp	w0, #0x9
  4071e4:	b.ne	4071f0 <ferror@plt+0x3c20>  // b.any
  4071e8:	sub	x1, x1, #0x1
  4071ec:	b	4071cc <ferror@plt+0x3bfc>
  4071f0:	sub	w1, w1, w19
  4071f4:	mov	x0, x19
  4071f8:	bl	404640 <ferror@plt+0x1070>
  4071fc:	mov	x19, x0
  407200:	add	x0, x21, #0x1
  407204:	bl	404394 <ferror@plt+0xdc4>
  407208:	ldrb	w1, [x0, #1]
  40720c:	cbnz	w1, 407218 <ferror@plt+0x3c48>
  407210:	sub	x2, x0, x20
  407214:	b	4071bc <ferror@plt+0x3bec>
  407218:	mov	x21, x0
  40721c:	ldrb	w2, [x21]
  407220:	cbz	w2, 407244 <ferror@plt+0x3c74>
  407224:	ldrb	w1, [x21, #1]
  407228:	cmp	w2, #0xa
  40722c:	b.ne	40723c <ferror@plt+0x3c6c>  // b.any
  407230:	cmp	w1, #0xa
  407234:	b.eq	407244 <ferror@plt+0x3c74>  // b.none
  407238:	cbz	w1, 407244 <ferror@plt+0x3c74>
  40723c:	add	x21, x21, #0x1
  407240:	b	40721c <ferror@plt+0x3c4c>
  407244:	sub	w1, w21, w0
  407248:	bl	404640 <ferror@plt+0x1070>
  40724c:	mov	x24, x0
  407250:	mov	x1, x0
  407254:	ldrb	w2, [x0]
  407258:	cbz	w2, 4072a4 <ferror@plt+0x3cd4>
  40725c:	cmp	w2, #0x5c
  407260:	b.ne	407278 <ferror@plt+0x3ca8>  // b.any
  407264:	ldrb	w4, [x0, #1]
  407268:	cmp	w4, #0xa
  40726c:	b.ne	407298 <ferror@plt+0x3cc8>  // b.any
  407270:	add	x0, x0, #0x2
  407274:	b	407254 <ferror@plt+0x3c84>
  407278:	cmp	w2, #0x23
  40727c:	b.ne	407298 <ferror@plt+0x3cc8>  // b.any
  407280:	ldrb	w2, [x0]
  407284:	cbz	w2, 407254 <ferror@plt+0x3c84>
  407288:	cmp	w2, #0xa
  40728c:	b.eq	407254 <ferror@plt+0x3c84>  // b.none
  407290:	add	x0, x0, #0x1
  407294:	b	407280 <ferror@plt+0x3cb0>
  407298:	add	x0, x0, #0x1
  40729c:	strb	w2, [x1], #1
  4072a0:	b	407254 <ferror@plt+0x3c84>
  4072a4:	strb	wzr, [x1]
  4072a8:	ldrb	w0, [x19]
  4072ac:	cmp	w0, #0x2a
  4072b0:	b.ne	4072f8 <ferror@plt+0x3d28>  // b.any
  4072b4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4072b8:	mov	x0, x19
  4072bc:	add	x1, x1, #0xb91
  4072c0:	bl	403220 <strcmp@plt>
  4072c4:	cbnz	w0, 4072d4 <ferror@plt+0x3d04>
  4072c8:	ldr	x0, [sp, #104]
  4072cc:	str	x24, [x0, #2144]
  4072d0:	b	406e10 <ferror@plt+0x3840>
  4072d4:	mov	w2, w25
  4072d8:	mov	x1, x24
  4072dc:	add	x0, x19, #0x1
  4072e0:	bl	405540 <ferror@plt+0x1f70>
  4072e4:	mov	x0, x24
  4072e8:	bl	4032a0 <free@plt>
  4072ec:	ldrb	w0, [x19]
  4072f0:	cbz	w0, 4072c8 <ferror@plt+0x3cf8>
  4072f4:	b	406e10 <ferror@plt+0x3840>
  4072f8:	ldr	w1, [x22, #216]
  4072fc:	ldr	x0, [x22, #208]
  407300:	add	w1, w1, #0x2
  407304:	sbfiz	x1, x1, #5, #32
  407308:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  40730c:	str	x0, [x22, #208]
  407310:	ldr	w2, [x22, #216]
  407314:	sbfiz	x1, x2, #5, #32
  407318:	add	w2, w2, #0x1
  40731c:	add	x4, x0, x1
  407320:	str	w2, [x22, #216]
  407324:	str	x19, [x0, x1]
  407328:	add	x1, x1, #0x20
  40732c:	add	x0, x0, x1
  407330:	str	x24, [x4, #8]
  407334:	stp	xzr, xzr, [x0]
  407338:	stp	xzr, xzr, [x0, #16]
  40733c:	b	4072ec <ferror@plt+0x3d1c>
  407340:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  407344:	ldr	x0, [x0, #3328]
  407348:	cbnz	x0, 407360 <ferror@plt+0x3d90>
  40734c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  407350:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407354:	add	x1, x1, #0xb9f
  407358:	ldr	w0, [x0, #584]
  40735c:	bl	422d58 <ferror@plt+0x1f788>
  407360:	mov	x0, x20
  407364:	ldp	x19, x20, [sp, #16]
  407368:	ldp	x21, x22, [sp, #32]
  40736c:	ldp	x23, x24, [sp, #48]
  407370:	ldp	x25, x26, [sp, #64]
  407374:	ldp	x27, x28, [sp, #80]
  407378:	ldp	x29, x30, [sp], #256
  40737c:	b	4032a0 <free@plt>
  407380:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407384:	mov	x2, x19
  407388:	add	x1, x1, #0xbc1
  40738c:	b	406d40 <ferror@plt+0x3770>
  407390:	mov	x1, x28
  407394:	mov	x0, x19
  407398:	bl	403220 <strcmp@plt>
  40739c:	cbz	w0, 406e10 <ferror@plt+0x3840>
  4073a0:	b	4070e0 <ferror@plt+0x3b10>
  4073a4:	cmp	w0, #0x1
  4073a8:	b.eq	4073cc <ferror@plt+0x3dfc>  // b.none
  4073ac:	stp	x29, x30, [sp, #-16]!
  4073b0:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  4073b4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4073b8:	mov	x29, sp
  4073bc:	add	x2, x2, #0xbeb
  4073c0:	add	x0, x0, #0x6e9
  4073c4:	mov	w1, #0x2578                	// #9592
  4073c8:	bl	403600 <ferror@plt+0x30>
  4073cc:	ldr	x0, [x1]
  4073d0:	b	406c40 <ferror@plt+0x3670>
  4073d4:	stp	x29, x30, [sp, #-48]!
  4073d8:	cmp	w0, #0x1
  4073dc:	mov	x29, sp
  4073e0:	str	x19, [sp, #16]
  4073e4:	b.eq	4073fc <ferror@plt+0x3e2c>  // b.none
  4073e8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4073ec:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4073f0:	add	x1, x1, #0xc03
  4073f4:	ldr	w0, [x0, #584]
  4073f8:	bl	422d58 <ferror@plt+0x1f788>
  4073fc:	mov	x19, x1
  407400:	mov	w2, #0xa                   	// #10
  407404:	add	x1, sp, #0x28
  407408:	ldr	x0, [x19]
  40740c:	bl	403260 <strtol@plt>
  407410:	ldr	x2, [x19]
  407414:	ldr	x1, [sp, #40]
  407418:	cmp	x2, x1
  40741c:	b.ne	407438 <ferror@plt+0x3e68>  // b.any
  407420:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  407424:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  407428:	add	x2, x2, #0xc32
  40742c:	add	x0, x0, #0x6e9
  407430:	mov	w1, #0x26ca                	// #9930
  407434:	bl	403600 <ferror@plt+0x30>
  407438:	adrp	x1, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40743c:	ldr	x19, [sp, #16]
  407440:	ldrsw	x2, [x1, #656]
  407444:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  407448:	ldp	x29, x30, [sp], #48
  40744c:	cmp	x2, x0
  407450:	add	x0, x1, #0x122
  407454:	csel	x0, x0, xzr, gt
  407458:	ret
  40745c:	stp	x29, x30, [sp, #-32]!
  407460:	cmp	w0, #0x1
  407464:	mov	x29, sp
  407468:	str	x19, [sp, #16]
  40746c:	b.eq	407488 <ferror@plt+0x3eb8>  // b.none
  407470:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  407474:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  407478:	add	x2, x2, #0xc55
  40747c:	add	x0, x0, #0x6e9
  407480:	mov	w1, #0x2567                	// #9575
  407484:	bl	403600 <ferror@plt+0x30>
  407488:	mov	x19, x1
  40748c:	mov	w3, w0
  407490:	ldr	x1, [x1]
  407494:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  407498:	add	x0, x0, #0x4a0
  40749c:	mov	w2, #0x4                   	// #4
  4074a0:	add	x0, x0, #0x848
  4074a4:	bl	406ba8 <ferror@plt+0x35d8>
  4074a8:	cbnz	x0, 4074b0 <ferror@plt+0x3ee0>
  4074ac:	ldr	x0, [x19]
  4074b0:	mov	w2, #0x0                   	// #0
  4074b4:	mov	w1, #0x0                   	// #0
  4074b8:	bl	406cc8 <ferror@plt+0x36f8>
  4074bc:	mov	x0, #0x0                   	// #0
  4074c0:	ldr	x19, [sp, #16]
  4074c4:	ldp	x29, x30, [sp], #32
  4074c8:	ret
  4074cc:	stp	x29, x30, [sp, #-160]!
  4074d0:	mov	x29, sp
  4074d4:	add	x1, sp, #0x20
  4074d8:	str	x19, [sp, #16]
  4074dc:	mov	x19, x0
  4074e0:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  4074e4:	tbnz	w0, #31, 407520 <ferror@plt+0x3f50>
  4074e8:	ldr	w0, [sp, #48]
  4074ec:	and	w0, w0, #0xf000
  4074f0:	cmp	w0, #0x8, lsl #12
  4074f4:	b.ne	407520 <ferror@plt+0x3f50>  // b.any
  4074f8:	mov	x0, x19
  4074fc:	bl	403570 <unlink@plt>
  407500:	tbz	w0, #31, 407520 <ferror@plt+0x3f50>
  407504:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  407508:	ldr	w0, [x0, #280]
  40750c:	cbz	w0, 407520 <ferror@plt+0x3f50>
  407510:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  407514:	mov	x1, x19
  407518:	add	x0, x0, #0x85c
  40751c:	bl	4221dc <ferror@plt+0x1ec0c>
  407520:	ldr	x19, [sp, #16]
  407524:	ldp	x29, x30, [sp], #160
  407528:	ret
  40752c:	stp	x29, x30, [sp, #-32]!
  407530:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407534:	mov	x29, sp
  407538:	str	x19, [sp, #16]
  40753c:	ldr	x19, [x0, #1576]
  407540:	cbz	x19, 407554 <ferror@plt+0x3f84>
  407544:	ldr	x0, [x19]
  407548:	bl	4074cc <ferror@plt+0x3efc>
  40754c:	ldr	x19, [x19, #8]
  407550:	b	407540 <ferror@plt+0x3f70>
  407554:	ldr	x19, [sp, #16]
  407558:	ldp	x29, x30, [sp], #32
  40755c:	ret
  407560:	stp	x29, x30, [sp, #-32]!
  407564:	mov	x29, sp
  407568:	stp	x19, x20, [sp, #16]
  40756c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407570:	add	x19, x19, #0x518
  407574:	ldr	x20, [x19, #280]
  407578:	cbz	x20, 40758c <ferror@plt+0x3fbc>
  40757c:	ldr	x0, [x20]
  407580:	bl	4074cc <ferror@plt+0x3efc>
  407584:	ldr	x20, [x20, #8]
  407588:	b	407578 <ferror@plt+0x3fa8>
  40758c:	str	xzr, [x19, #280]
  407590:	ldp	x19, x20, [sp, #16]
  407594:	ldp	x29, x30, [sp], #32
  407598:	ret
  40759c:	stp	x29, x30, [sp, #-32]!
  4075a0:	mov	x1, #0x0                   	// #0
  4075a4:	mov	x29, sp
  4075a8:	str	x19, [sp, #16]
  4075ac:	mov	w19, w0
  4075b0:	bl	402ed0 <signal@plt>
  4075b4:	bl	40752c <ferror@plt+0x3f5c>
  4075b8:	bl	407560 <ferror@plt+0x3f90>
  4075bc:	bl	402f00 <getpid@plt>
  4075c0:	mov	w1, w19
  4075c4:	ldr	x19, [sp, #16]
  4075c8:	ldp	x29, x30, [sp], #32
  4075cc:	b	402e70 <kill@plt>
  4075d0:	stp	x29, x30, [sp, #-96]!
  4075d4:	cmp	w0, #0x3
  4075d8:	mov	x29, sp
  4075dc:	stp	x19, x20, [sp, #16]
  4075e0:	stp	x21, x22, [sp, #32]
  4075e4:	str	x23, [sp, #48]
  4075e8:	b.ne	40775c <ferror@plt+0x418c>  // b.any
  4075ec:	mov	x20, x1
  4075f0:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4075f4:	ldr	x1, [x1, #16]
  4075f8:	add	x0, x0, #0xc86
  4075fc:	adrp	x22, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407600:	add	x22, x22, #0x518
  407604:	mov	w5, #0x0                   	// #0
  407608:	mov	w4, #0x0                   	// #0
  40760c:	mov	w3, #0x0                   	// #0
  407610:	mov	x2, #0x0                   	// #0
  407614:	str	xzr, [sp, #72]
  407618:	adrp	x19, 476000 <_obstack_memory_used@@Base+0x19c10>
  40761c:	str	wzr, [sp, #80]
  407620:	add	x19, x19, #0xc6f
  407624:	str	x0, [sp, #88]
  407628:	add	x0, sp, #0x48
  40762c:	bl	405c10 <ferror@plt+0x2640>
  407630:	add	x0, sp, #0x48
  407634:	mov	w5, #0x0                   	// #0
  407638:	mov	w4, #0x0                   	// #0
  40763c:	mov	w3, #0x0                   	// #0
  407640:	mov	x2, #0x0                   	// #0
  407644:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407648:	add	x1, x1, #0xc91
  40764c:	bl	405c10 <ferror@plt+0x2640>
  407650:	ldr	x0, [x22, #288]
  407654:	cbz	x0, 4076b0 <ferror@plt+0x40e0>
  407658:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40765c:	mov	x21, x0
  407660:	ldr	x23, [x22, #288]
  407664:	mov	x0, x23
  407668:	bl	402d50 <strlen@plt>
  40766c:	cbz	x0, 407684 <ferror@plt+0x40b4>
  407670:	sub	x1, x0, #0x1
  407674:	ldrb	w0, [x23, x1]
  407678:	cmp	w0, #0x2f
  40767c:	b.ne	407684 <ferror@plt+0x40b4>  // b.any
  407680:	strb	wzr, [x21, x1]
  407684:	ldr	x1, [x22, #296]
  407688:	cbz	x1, 407720 <ferror@plt+0x4150>
  40768c:	mov	x2, x19
  407690:	mov	x0, x21
  407694:	mov	x3, #0x0                   	// #0
  407698:	bl	45a668 <ferror@plt+0x57098>
  40769c:	mov	x19, x0
  4076a0:	mov	x0, x21
  4076a4:	bl	4032a0 <free@plt>
  4076a8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4076ac:	add	x0, x0, #0xc6b
  4076b0:	mov	x2, x0
  4076b4:	mov	x1, x19
  4076b8:	add	x0, sp, #0x48
  4076bc:	mov	w5, #0x0                   	// #0
  4076c0:	mov	w4, #0x0                   	// #0
  4076c4:	mov	w3, #0x0                   	// #0
  4076c8:	bl	405c10 <ferror@plt+0x2640>
  4076cc:	ldr	x1, [x20, #8]
  4076d0:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4076d4:	add	x0, x0, #0x4a0
  4076d8:	mov	w3, #0x0                   	// #0
  4076dc:	add	x0, x0, #0x868
  4076e0:	mov	w2, #0x4                   	// #4
  4076e4:	bl	406ba8 <ferror@plt+0x35d8>
  4076e8:	mov	x1, x0
  4076ec:	cbz	x0, 407734 <ferror@plt+0x4164>
  4076f0:	mov	x2, #0x0                   	// #0
  4076f4:	ldr	x0, [x20]
  4076f8:	bl	45a668 <ferror@plt+0x57098>
  4076fc:	mov	x19, x0
  407700:	add	x0, sp, #0x48
  407704:	bl	40441c <ferror@plt+0xe4c>
  407708:	mov	x0, x19
  40770c:	ldp	x19, x20, [sp, #16]
  407710:	ldp	x21, x22, [sp, #32]
  407714:	ldr	x23, [sp, #48]
  407718:	ldp	x29, x30, [sp], #96
  40771c:	ret
  407720:	mov	x1, x19
  407724:	mov	x0, x21
  407728:	mov	x2, #0x0                   	// #0
  40772c:	bl	45a668 <ferror@plt+0x57098>
  407730:	b	40769c <ferror@plt+0x40cc>
  407734:	ldr	x1, [x20, #8]
  407738:	add	x0, sp, #0x48
  40773c:	mov	w3, #0x0                   	// #0
  407740:	mov	w2, #0x4                   	// #4
  407744:	bl	406ba8 <ferror@plt+0x35d8>
  407748:	mov	x19, x0
  40774c:	cbz	x0, 407700 <ferror@plt+0x4130>
  407750:	mov	x1, x0
  407754:	mov	x2, #0x0                   	// #0
  407758:	b	4076f4 <ferror@plt+0x4124>
  40775c:	mov	x19, #0x0                   	// #0
  407760:	b	407708 <ferror@plt+0x4138>
  407764:	stp	x29, x30, [sp, #-48]!
  407768:	mov	x29, sp
  40776c:	stp	x19, x20, [sp, #16]
  407770:	mov	x19, x0
  407774:	stp	x21, x22, [sp, #32]
  407778:	ldrb	w0, [x0]
  40777c:	cmp	w0, #0x2f
  407780:	b.eq	40779c <ferror@plt+0x41cc>  // b.none
  407784:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  407788:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40778c:	mov	x2, x19
  407790:	add	x1, x1, #0xcf6
  407794:	ldr	w0, [x0, #584]
  407798:	bl	422d58 <ferror@plt+0x1f788>
  40779c:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4077a0:	add	x21, x21, #0x518
  4077a4:	mov	x2, x1
  4077a8:	ldr	x0, [x21, #288]
  4077ac:	cbz	x0, 407808 <ferror@plt+0x4238>
  4077b0:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4077b4:	mov	x20, x0
  4077b8:	ldr	x22, [x21, #288]
  4077bc:	mov	x0, x22
  4077c0:	bl	402d50 <strlen@plt>
  4077c4:	cbz	x0, 4077dc <ferror@plt+0x420c>
  4077c8:	sub	x1, x0, #0x1
  4077cc:	ldrb	w0, [x22, x1]
  4077d0:	cmp	w0, #0x2f
  4077d4:	b.ne	4077dc <ferror@plt+0x420c>  // b.any
  4077d8:	strb	wzr, [x20, x1]
  4077dc:	ldr	x1, [x21, #304]
  4077e0:	cbz	x1, 407834 <ferror@plt+0x4264>
  4077e4:	mov	x2, x19
  4077e8:	mov	x0, x20
  4077ec:	mov	x3, #0x0                   	// #0
  4077f0:	bl	45a668 <ferror@plt+0x57098>
  4077f4:	mov	x19, x0
  4077f8:	mov	x0, x20
  4077fc:	bl	4032a0 <free@plt>
  407800:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  407804:	add	x2, x2, #0xc6b
  407808:	mov	x1, x19
  40780c:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  407810:	ldp	x19, x20, [sp, #16]
  407814:	add	x0, x0, #0x4a0
  407818:	ldp	x21, x22, [sp, #32]
  40781c:	mov	w5, #0x1                   	// #1
  407820:	ldp	x29, x30, [sp], #48
  407824:	mov	w3, w5
  407828:	add	x0, x0, #0x848
  40782c:	mov	w4, #0x0                   	// #0
  407830:	b	405c10 <ferror@plt+0x2640>
  407834:	mov	x1, x19
  407838:	mov	x0, x20
  40783c:	mov	x2, #0x0                   	// #0
  407840:	bl	45a668 <ferror@plt+0x57098>
  407844:	b	4077f4 <ferror@plt+0x4224>
  407848:	sub	sp, sp, #0x60
  40784c:	mov	x5, x0
  407850:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  407854:	add	x0, x0, #0xafd
  407858:	mov	x3, x1
  40785c:	adrp	x7, 476000 <_obstack_memory_used@@Base+0x19c10>
  407860:	stp	x29, x30, [sp, #48]
  407864:	add	x29, sp, #0x30
  407868:	add	x7, x7, #0xd16
  40786c:	mov	x1, x5
  407870:	adrp	x6, 476000 <_obstack_memory_used@@Base+0x19c10>
  407874:	adrp	x4, 476000 <_obstack_memory_used@@Base+0x19c10>
  407878:	add	x6, x6, #0xd1e
  40787c:	add	x4, x4, #0xd39
  407880:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  407884:	add	x2, x2, #0xd73
  407888:	stp	x5, x0, [sp, #24]
  40788c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  407890:	add	x0, x0, #0xd98
  407894:	str	x7, [sp, #8]
  407898:	str	x0, [sp, #16]
  40789c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4078a0:	add	x0, x0, #0xda4
  4078a4:	str	x0, [sp]
  4078a8:	str	xzr, [sp, #40]
  4078ac:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4078b0:	add	x0, x0, #0xd75
  4078b4:	stp	x19, x20, [sp, #64]
  4078b8:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4078bc:	add	x19, x19, #0x518
  4078c0:	str	x21, [sp, #80]
  4078c4:	bl	45a668 <ferror@plt+0x57098>
  4078c8:	mov	x21, x0
  4078cc:	bl	402d50 <strlen@plt>
  4078d0:	mov	x20, x0
  4078d4:	add	x0, x19, #0x138
  4078d8:	ldp	x2, x1, [x0, #24]
  4078dc:	sub	x1, x1, x2
  4078e0:	cmp	x20, x1
  4078e4:	b.ls	4078f0 <ferror@plt+0x4320>  // b.plast
  4078e8:	mov	x1, x20
  4078ec:	bl	45c22c <_obstack_newchunk@@Base>
  4078f0:	ldr	x0, [x19, #336]
  4078f4:	mov	x2, x20
  4078f8:	mov	x1, x21
  4078fc:	add	x19, x19, #0x138
  407900:	bl	402cd0 <memcpy@plt>
  407904:	ldr	x0, [x19, #24]
  407908:	ldp	x29, x30, [sp, #48]
  40790c:	add	x0, x0, x20
  407910:	str	x0, [x19, #24]
  407914:	mov	x0, x21
  407918:	ldp	x19, x20, [sp, #64]
  40791c:	ldr	x21, [sp, #80]
  407920:	add	sp, sp, #0x60
  407924:	b	4032a0 <free@plt>
  407928:	stp	x29, x30, [sp, #-80]!
  40792c:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  407930:	mov	x29, sp
  407934:	ldr	w0, [x0, #280]
  407938:	stp	x19, x20, [sp, #16]
  40793c:	stp	x21, x22, [sp, #32]
  407940:	stp	x23, x24, [sp, #48]
  407944:	str	x25, [sp, #64]
  407948:	cbz	w0, 407960 <ferror@plt+0x4390>
  40794c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407950:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407954:	add	x1, x1, #0xdc2
  407958:	ldr	x0, [x0, #1264]
  40795c:	bl	421398 <ferror@plt+0x1ddc8>
  407960:	mov	x1, #0x30                  	// #48
  407964:	mov	x0, #0x1                   	// #1
  407968:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  40796c:	adrp	x19, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  407970:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407974:	add	x1, x1, #0xdd9
  407978:	mov	w2, #0xc                   	// #12
  40797c:	add	x19, x19, #0x4a0
  407980:	str	x1, [x0]
  407984:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407988:	add	x1, x1, #0xde6
  40798c:	str	w2, [x0, #32]
  407990:	add	x2, x0, #0x8
  407994:	stp	x1, x2, [x0, #8]
  407998:	mov	w2, #0x2c                  	// #44
  40799c:	str	x1, [x0, #40]
  4079a0:	add	x1, x19, #0x818
  4079a4:	str	xzr, [x0, #24]
  4079a8:	mov	x3, x0
  4079ac:	str	x3, [x1, #24]
  4079b0:	mov	x0, x1
  4079b4:	subs	w2, w2, #0x1
  4079b8:	sub	x1, x1, #0x30
  4079bc:	b.ne	4079a8 <ferror@plt+0x43d8>  // b.any
  4079c0:	adrp	x22, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4079c4:	add	x22, x22, #0x518
  4079c8:	ldr	x21, [x19, #2176]
  4079cc:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x19c10>
  4079d0:	add	x25, x22, #0x138
  4079d4:	add	x23, x23, #0xe24
  4079d8:	mov	w20, #0x1                   	// #1
  4079dc:	ldrb	w0, [x21]
  4079e0:	cbz	w0, 407a9c <ferror@plt+0x44cc>
  4079e4:	cbz	w20, 407a60 <ferror@plt+0x4490>
  4079e8:	cmp	w0, #0x2d
  4079ec:	b.ne	407a28 <ferror@plt+0x4458>  // b.any
  4079f0:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x19c10>
  4079f4:	add	x24, x24, #0xe15
  4079f8:	mov	x1, x24
  4079fc:	mov	x0, x21
  407a00:	mov	x2, #0x5                   	// #5
  407a04:	bl	402f80 <strncmp@plt>
  407a08:	mov	w20, w0
  407a0c:	cbnz	w0, 407a60 <ferror@plt+0x4490>
  407a10:	mov	x0, x24
  407a14:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407a18:	add	x21, x21, #0x5
  407a1c:	add	x1, x1, #0xe1b
  407a20:	bl	407848 <ferror@plt+0x4278>
  407a24:	b	4079dc <ferror@plt+0x440c>
  407a28:	cmp	w0, #0x6c
  407a2c:	b.ne	407a60 <ferror@plt+0x4490>  // b.any
  407a30:	mov	x1, x23
  407a34:	mov	x0, x21
  407a38:	mov	x2, #0xa                   	// #10
  407a3c:	bl	402f80 <strncmp@plt>
  407a40:	mov	w20, w0
  407a44:	cbnz	w0, 407a60 <ferror@plt+0x4490>
  407a48:	mov	x0, x23
  407a4c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407a50:	add	x21, x21, #0xa
  407a54:	add	x1, x1, #0xe2f
  407a58:	bl	407848 <ferror@plt+0x4278>
  407a5c:	b	4079dc <ferror@plt+0x440c>
  407a60:	ldp	x0, x1, [x25, #24]
  407a64:	cmp	x1, x0
  407a68:	b.ne	407a78 <ferror@plt+0x44a8>  // b.any
  407a6c:	mov	x0, x25
  407a70:	mov	x1, #0x1                   	// #1
  407a74:	bl	45c22c <_obstack_newchunk@@Base>
  407a78:	ldr	x0, [x22, #336]
  407a7c:	add	x2, x0, #0x1
  407a80:	str	x2, [x22, #336]
  407a84:	ldrb	w1, [x21]
  407a88:	strb	w1, [x0]
  407a8c:	ldrb	w0, [x21], #1
  407a90:	cmp	w0, #0x20
  407a94:	cset	w20, eq  // eq = none
  407a98:	b	4079dc <ferror@plt+0x440c>
  407a9c:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407aa0:	add	x20, x20, #0x518
  407aa4:	add	x0, x20, #0x138
  407aa8:	ldp	x1, x2, [x0, #24]
  407aac:	cmp	x2, x1
  407ab0:	b.ne	407abc <ferror@plt+0x44ec>  // b.any
  407ab4:	mov	x1, #0x1                   	// #1
  407ab8:	bl	45c22c <_obstack_newchunk@@Base>
  407abc:	ldr	x1, [x20, #336]
  407ac0:	add	x2, x1, #0x1
  407ac4:	str	x2, [x20, #336]
  407ac8:	strb	wzr, [x1]
  407acc:	ldp	x4, x2, [x20, #328]
  407ad0:	cmp	x4, x2
  407ad4:	b.ne	407ae4 <ferror@plt+0x4514>  // b.any
  407ad8:	ldrb	w1, [x20, #392]
  407adc:	orr	w1, w1, #0x2
  407ae0:	strb	w1, [x20, #392]
  407ae4:	ldr	x1, [x20, #360]
  407ae8:	add	x0, x20, #0x138
  407aec:	ldr	x3, [x0, #8]
  407af0:	add	x2, x2, x1
  407af4:	bic	x1, x2, x1
  407af8:	str	x4, [x19, #2176]
  407afc:	ldr	x2, [x0, #32]
  407b00:	sub	x5, x1, x3
  407b04:	sub	x3, x2, x3
  407b08:	cmp	x5, x3
  407b0c:	csel	x1, x1, x2, ls  // ls = plast
  407b10:	stp	x1, x1, [x0, #16]
  407b14:	sub	x1, x2, x1
  407b18:	cmp	x1, #0x24
  407b1c:	b.hi	407b28 <ferror@plt+0x4558>  // b.pmore
  407b20:	mov	x1, #0x25                  	// #37
  407b24:	bl	45c22c <_obstack_newchunk@@Base>
  407b28:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  407b2c:	add	x0, x0, #0xe3d
  407b30:	ldr	x1, [x20, #336]
  407b34:	add	x21, x20, #0x138
  407b38:	ldp	x2, x3, [x0]
  407b3c:	stp	x2, x3, [x1]
  407b40:	ldp	x2, x3, [x0, #16]
  407b44:	stp	x2, x3, [x1, #16]
  407b48:	ldur	x0, [x0, #29]
  407b4c:	stur	x0, [x1, #29]
  407b50:	ldr	x0, [x19, #2184]
  407b54:	ldr	x23, [x20, #336]
  407b58:	add	x23, x23, #0x25
  407b5c:	str	x23, [x20, #336]
  407b60:	bl	402d50 <strlen@plt>
  407b64:	add	x1, x0, #0x1
  407b68:	mov	x22, x0
  407b6c:	ldr	x0, [x20, #344]
  407b70:	sub	x23, x0, x23
  407b74:	cmp	x23, x1
  407b78:	b.cs	407b84 <ferror@plt+0x45b4>  // b.hs, b.nlast
  407b7c:	mov	x0, x21
  407b80:	bl	45c22c <_obstack_newchunk@@Base>
  407b84:	ldr	x0, [x20, #336]
  407b88:	mov	x2, x22
  407b8c:	ldr	x1, [x19, #2184]
  407b90:	bl	402cd0 <memcpy@plt>
  407b94:	ldr	x1, [x20, #336]
  407b98:	add	x0, x1, x22
  407b9c:	add	x0, x0, #0x1
  407ba0:	str	x0, [x20, #336]
  407ba4:	strb	wzr, [x1, x22]
  407ba8:	ldp	x3, x2, [x20, #328]
  407bac:	cmp	x3, x2
  407bb0:	b.ne	407bc0 <ferror@plt+0x45f0>  // b.any
  407bb4:	ldrb	w0, [x20, #392]
  407bb8:	orr	w0, w0, #0x2
  407bbc:	strb	w0, [x20, #392]
  407bc0:	ldr	x0, [x20, #360]
  407bc4:	add	x19, x19, #0x8
  407bc8:	ldr	x4, [x20, #344]
  407bcc:	add	x2, x2, x0
  407bd0:	bic	x0, x2, x0
  407bd4:	ldr	x2, [x20, #320]
  407bd8:	ldp	x21, x22, [sp, #32]
  407bdc:	sub	x5, x0, x2
  407be0:	sub	x2, x4, x2
  407be4:	cmp	x5, x2
  407be8:	csel	x0, x0, x4, ls  // ls = plast
  407bec:	ldp	x23, x24, [sp, #48]
  407bf0:	ldr	x25, [sp, #64]
  407bf4:	stp	x0, x0, [x20, #328]
  407bf8:	str	x3, [x19, #2176]
  407bfc:	str	x19, [x20, #112]
  407c00:	ldp	x19, x20, [sp, #16]
  407c04:	ldp	x29, x30, [sp], #80
  407c08:	ret
  407c0c:	strb	w1, [x0]
  407c10:	strb	w2, [x0, #1]
  407c14:	ret
  407c18:	stp	x29, x30, [sp, #-48]!
  407c1c:	mov	x29, sp
  407c20:	str	x21, [sp, #32]
  407c24:	mov	x21, x0
  407c28:	mov	x0, x1
  407c2c:	stp	x19, x20, [sp, #16]
  407c30:	mov	x20, x1
  407c34:	bl	4034f0 <getenv@plt>
  407c38:	mov	x19, x0
  407c3c:	ldrb	w0, [x21, #1]
  407c40:	cbz	w0, 407c60 <ferror@plt+0x4690>
  407c44:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407c48:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407c4c:	mov	x3, x19
  407c50:	mov	x2, x20
  407c54:	ldr	x0, [x0, #1264]
  407c58:	add	x1, x1, #0xe63
  407c5c:	bl	403590 <fprintf@plt>
  407c60:	mov	x0, x19
  407c64:	ldp	x19, x20, [sp, #16]
  407c68:	ldr	x21, [sp, #32]
  407c6c:	ldp	x29, x30, [sp], #48
  407c70:	ret
  407c74:	stp	x29, x30, [sp, #-48]!
  407c78:	cmp	w0, #0x2
  407c7c:	mov	x29, sp
  407c80:	stp	x19, x20, [sp, #16]
  407c84:	stp	x21, x22, [sp, #32]
  407c88:	b.ne	407d54 <ferror@plt+0x4784>  // b.any
  407c8c:	ldr	x22, [x1]
  407c90:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407c94:	add	x19, x19, #0x518
  407c98:	mov	x21, x1
  407c9c:	add	x0, x19, #0x190
  407ca0:	mov	x1, x22
  407ca4:	bl	407c18 <ferror@plt+0x4648>
  407ca8:	mov	x20, x0
  407cac:	cbnz	x0, 407d08 <ferror@plt+0x4738>
  407cb0:	ldrb	w0, [x19, #416]
  407cb4:	cbz	w0, 407cf0 <ferror@plt+0x4720>
  407cb8:	mov	x0, x22
  407cbc:	bl	402d50 <strlen@plt>
  407cc0:	add	x0, x0, #0x2
  407cc4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  407cc8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407ccc:	mov	x19, x0
  407cd0:	mov	x2, x22
  407cd4:	add	x1, x1, #0xe83
  407cd8:	bl	402e00 <sprintf@plt>
  407cdc:	mov	x0, x19
  407ce0:	ldp	x19, x20, [sp, #16]
  407ce4:	ldp	x21, x22, [sp, #32]
  407ce8:	ldp	x29, x30, [sp], #48
  407cec:	ret
  407cf0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  407cf4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  407cf8:	mov	x2, x22
  407cfc:	add	x1, x1, #0xe87
  407d00:	ldr	w0, [x0, #584]
  407d04:	bl	422d58 <ferror@plt+0x1f788>
  407d08:	bl	402d50 <strlen@plt>
  407d0c:	mov	x19, x0
  407d10:	ldr	x0, [x21, #8]
  407d14:	bl	402d50 <strlen@plt>
  407d18:	add	x0, x0, #0x1
  407d1c:	add	x0, x0, x19, lsl #1
  407d20:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  407d24:	mov	x19, x0
  407d28:	mov	w2, #0x5c                  	// #92
  407d2c:	ldrb	w1, [x20]
  407d30:	cbz	w1, 407d48 <ferror@plt+0x4778>
  407d34:	strb	w2, [x0]
  407d38:	add	x0, x0, #0x2
  407d3c:	ldrb	w1, [x20], #1
  407d40:	sturb	w1, [x0, #-1]
  407d44:	b	407d2c <ferror@plt+0x475c>
  407d48:	ldr	x1, [x21, #8]
  407d4c:	bl	403360 <strcpy@plt>
  407d50:	b	407cdc <ferror@plt+0x470c>
  407d54:	mov	x19, #0x0                   	// #0
  407d58:	b	407cdc <ferror@plt+0x470c>
  407d5c:	stp	x29, x30, [sp, #-64]!
  407d60:	mov	x29, sp
  407d64:	str	x23, [sp, #48]
  407d68:	mov	x23, x0
  407d6c:	ldrb	w0, [x0]
  407d70:	stp	x19, x20, [sp, #16]
  407d74:	stp	x21, x22, [sp, #32]
  407d78:	cbnz	w0, 407d94 <ferror@plt+0x47c4>
  407d7c:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  407d80:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  407d84:	add	x2, x2, #0xeac
  407d88:	add	x0, x0, #0x6e9
  407d8c:	mov	w1, #0x95                  	// #149
  407d90:	bl	403600 <ferror@plt+0x30>
  407d94:	ldr	x0, [x23, #8]
  407d98:	cbz	x0, 407e0c <ferror@plt+0x483c>
  407d9c:	ldr	w19, [x0, #4]
  407da0:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x19c10>
  407da4:	sub	w19, w19, #0x1
  407da8:	add	x22, x22, #0xeb4
  407dac:	ldr	x21, [x23, #8]
  407db0:	cbz	x21, 407e18 <ferror@plt+0x4848>
  407db4:	ldr	w0, [x21, #4]
  407db8:	cmp	w19, w0
  407dbc:	b.cs	407e14 <ferror@plt+0x4844>  // b.hs, b.nlast
  407dc0:	ldrb	w0, [x23, #1]
  407dc4:	mov	w20, w19
  407dc8:	cbz	w0, 407de0 <ferror@plt+0x4810>
  407dcc:	add	x1, x21, x20, lsl #4
  407dd0:	mov	x0, x22
  407dd4:	ldr	x2, [x1, #16]
  407dd8:	ldr	x1, [x1, #8]
  407ddc:	bl	4034d0 <printf@plt>
  407de0:	add	x20, x21, x20, lsl #4
  407de4:	ldp	x0, x1, [x20, #8]
  407de8:	cbz	x1, 407e2c <ferror@plt+0x485c>
  407dec:	mov	w2, #0x1                   	// #1
  407df0:	bl	402dd0 <setenv@plt>
  407df4:	ldr	x0, [x20, #8]
  407df8:	sub	w19, w19, #0x1
  407dfc:	bl	4032a0 <free@plt>
  407e00:	ldr	x0, [x20, #16]
  407e04:	bl	4032a0 <free@plt>
  407e08:	b	407dac <ferror@plt+0x47dc>
  407e0c:	mov	w19, #0x0                   	// #0
  407e10:	b	407da0 <ferror@plt+0x47d0>
  407e14:	str	wzr, [x21, #4]
  407e18:	ldp	x19, x20, [sp, #16]
  407e1c:	ldp	x21, x22, [sp, #32]
  407e20:	ldr	x23, [sp, #48]
  407e24:	ldp	x29, x30, [sp], #64
  407e28:	ret
  407e2c:	bl	403380 <unsetenv@plt>
  407e30:	b	407df4 <ferror@plt+0x4824>
  407e34:	stp	x29, x30, [sp, #-48]!
  407e38:	mov	x29, sp
  407e3c:	stp	x19, x20, [sp, #16]
  407e40:	mov	w20, w1
  407e44:	stp	x21, x22, [sp, #32]
  407e48:	mov	w22, w2
  407e4c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  407e50:	mov	x19, x0
  407e54:	cbz	w20, 407e80 <ferror@plt+0x48b0>
  407e58:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407e5c:	add	x20, x20, #0x518
  407e60:	ldr	x21, [x20, #280]
  407e64:	cbz	x21, 407ec0 <ferror@plt+0x48f0>
  407e68:	ldr	x1, [x21]
  407e6c:	mov	x0, x19
  407e70:	bl	45a8bc <ferror@plt+0x572ec>
  407e74:	cbnz	w0, 407eb8 <ferror@plt+0x48e8>
  407e78:	mov	x0, x19
  407e7c:	bl	4032a0 <free@plt>
  407e80:	cbz	w22, 407ef4 <ferror@plt+0x4924>
  407e84:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407e88:	add	x20, x20, #0x518
  407e8c:	ldr	x21, [x20, #272]
  407e90:	cbz	x21, 407ee0 <ferror@plt+0x4910>
  407e94:	ldr	x1, [x21]
  407e98:	mov	x0, x19
  407e9c:	bl	45a8bc <ferror@plt+0x572ec>
  407ea0:	cbnz	w0, 407ed8 <ferror@plt+0x4908>
  407ea4:	mov	x0, x19
  407ea8:	ldp	x19, x20, [sp, #16]
  407eac:	ldp	x21, x22, [sp, #32]
  407eb0:	ldp	x29, x30, [sp], #48
  407eb4:	b	4032a0 <free@plt>
  407eb8:	ldr	x21, [x21, #8]
  407ebc:	b	407e64 <ferror@plt+0x4894>
  407ec0:	mov	x0, #0x10                  	// #16
  407ec4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  407ec8:	ldr	x1, [x20, #280]
  407ecc:	stp	x19, x1, [x0]
  407ed0:	str	x0, [x20, #280]
  407ed4:	b	407e80 <ferror@plt+0x48b0>
  407ed8:	ldr	x21, [x21, #8]
  407edc:	b	407e90 <ferror@plt+0x48c0>
  407ee0:	mov	x0, #0x10                  	// #16
  407ee4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  407ee8:	ldr	x1, [x20, #272]
  407eec:	stp	x19, x1, [x0]
  407ef0:	str	x0, [x20, #272]
  407ef4:	ldp	x19, x20, [sp, #16]
  407ef8:	ldp	x21, x22, [sp, #32]
  407efc:	ldp	x29, x30, [sp], #48
  407f00:	ret
  407f04:	stp	x29, x30, [sp, #-32]!
  407f08:	mov	x29, sp
  407f0c:	stp	x19, x20, [sp, #16]
  407f10:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407f14:	add	x19, x19, #0x518
  407f18:	mov	x20, x0
  407f1c:	str	x0, [x19, #224]
  407f20:	bl	402d50 <strlen@plt>
  407f24:	str	x0, [x19, #424]
  407f28:	mov	x0, x20
  407f2c:	bl	45b8d0 <ferror@plt+0x58300>
  407f30:	mov	x20, x0
  407f34:	str	x0, [x19, #432]
  407f38:	bl	402d50 <strlen@plt>
  407f3c:	add	x1, x20, w0, sxtw
  407f40:	str	w0, [x19, #440]
  407f44:	str	w0, [x19, #444]
  407f48:	ldrb	w0, [x1]
  407f4c:	cmp	x20, x1
  407f50:	b.eq	407f84 <ferror@plt+0x49b4>  // b.none
  407f54:	cmp	w0, #0x2e
  407f58:	b.eq	407f64 <ferror@plt+0x4994>  // b.none
  407f5c:	sub	x1, x1, #0x1
  407f60:	b	407f48 <ferror@plt+0x4978>
  407f64:	sub	x20, x1, x20
  407f68:	add	x1, x1, #0x1
  407f6c:	str	w20, [x19, #440]
  407f70:	str	x1, [x19, #448]
  407f74:	str	wzr, [x19, #456]
  407f78:	ldp	x19, x20, [sp, #16]
  407f7c:	ldp	x29, x30, [sp], #32
  407f80:	ret
  407f84:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  407f88:	add	x0, x0, #0x122
  407f8c:	str	x0, [x19, #448]
  407f90:	b	407f74 <ferror@plt+0x49a4>
  407f94:	stp	xzr, xzr, [x0]
  407f98:	str	xzr, [x0, #24]
  407f9c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  407fa0:	add	x0, x0, #0x518
  407fa4:	strb	w1, [x0, #400]
  407fa8:	strb	w2, [x0, #401]
  407fac:	ret
  407fb0:	stp	x29, x30, [sp, #-32]!
  407fb4:	mov	x29, sp
  407fb8:	str	x19, [sp, #16]
  407fbc:	mov	x19, x0
  407fc0:	ldr	x0, [x0]
  407fc4:	bl	4032a0 <free@plt>
  407fc8:	ldr	x0, [x19, #8]
  407fcc:	bl	4032a0 <free@plt>
  407fd0:	add	x0, x19, #0x18
  407fd4:	ldr	x19, [sp, #16]
  407fd8:	ldp	x29, x30, [sp], #32
  407fdc:	b	42022c <ferror@plt+0x1cc5c>
  407fe0:	stp	x29, x30, [sp, #-32]!
  407fe4:	mov	x0, x1
  407fe8:	mov	x29, sp
  407fec:	str	x19, [sp, #16]
  407ff0:	mov	x19, x1
  407ff4:	bl	402d50 <strlen@plt>
  407ff8:	add	x0, x19, x0
  407ffc:	cmp	x0, x19
  408000:	b.eq	408018 <ferror@plt+0x4a48>  // b.none
  408004:	ldurb	w1, [x0, #-1]
  408008:	cmp	w1, #0x2f
  40800c:	b.eq	408018 <ferror@plt+0x4a48>  // b.none
  408010:	sub	x0, x0, #0x1
  408014:	b	407ffc <ferror@plt+0x4a2c>
  408018:	ldr	x19, [sp, #16]
  40801c:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  408020:	ldp	x29, x30, [sp], #32
  408024:	str	x0, [x1, #208]
  408028:	b	45d608 <_obstack_memory_used@@Base+0x1218>
  40802c:	stp	x29, x30, [sp, #-32]!
  408030:	mov	x0, x1
  408034:	mov	x1, x2
  408038:	mov	x29, sp
  40803c:	stp	x19, x20, [sp, #16]
  408040:	mov	x19, x2
  408044:	ldr	x20, [x2]
  408048:	bl	45a10c <ferror@plt+0x56b3c>
  40804c:	ldr	x0, [x19]
  408050:	cmp	x0, x20
  408054:	b.eq	408064 <ferror@plt+0x4a94>  // b.none
  408058:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40805c:	mov	w1, #0x1                   	// #1
  408060:	strb	w1, [x0, #1764]
  408064:	ldp	x19, x20, [sp, #16]
  408068:	ldp	x29, x30, [sp], #32
  40806c:	ret
  408070:	stp	x29, x30, [sp, #-48]!
  408074:	mov	x29, sp
  408078:	stp	x19, x20, [sp, #16]
  40807c:	mov	x19, x0
  408080:	mov	w20, w1
  408084:	str	x21, [sp, #32]
  408088:	mov	x21, x2
  40808c:	bl	411e8c <ferror@plt+0xe8bc>
  408090:	bl	411edc <ferror@plt+0xe90c>
  408094:	bl	4136d0 <ferror@plt+0x10100>
  408098:	adrp	x1, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40809c:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4080a0:	add	x1, x1, #0x140
  4080a4:	add	x0, x0, #0x230
  4080a8:	bl	4136f4 <ferror@plt+0x10124>
  4080ac:	add	x4, x19, #0x10
  4080b0:	add	x3, x19, #0x8
  4080b4:	mov	x1, x21
  4080b8:	mov	w0, w20
  4080bc:	ldp	x19, x20, [sp, #16]
  4080c0:	mov	w2, #0x80000               	// #524288
  4080c4:	ldr	x21, [sp, #32]
  4080c8:	ldp	x29, x30, [sp], #48
  4080cc:	b	416ab4 <ferror@plt+0x134e4>
  4080d0:	stp	x29, x30, [sp, #-80]!
  4080d4:	adrp	x4, 42d000 <ferror@plt+0x29a30>
  4080d8:	adrp	x3, 42d000 <ferror@plt+0x29a30>
  4080dc:	mov	x29, sp
  4080e0:	stp	x21, x22, [sp, #32]
  4080e4:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  4080e8:	add	x21, x21, #0x830
  4080ec:	stp	x23, x24, [sp, #48]
  4080f0:	add	x24, x21, #0x78
  4080f4:	add	x4, x4, #0x3e4
  4080f8:	stp	x19, x20, [sp, #16]
  4080fc:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408100:	add	x19, x19, #0x518
  408104:	add	x20, x19, #0x1d0
  408108:	add	x3, x3, #0x3bc
  40810c:	mov	x0, x20
  408110:	mov	x2, #0x0                   	// #0
  408114:	mov	x1, #0x0                   	// #0
  408118:	stp	x25, x26, [sp, #64]
  40811c:	bl	45c200 <_obstack_begin@@Base>
  408120:	ldr	x25, [x24], #8
  408124:	ldp	x26, x23, [x20, #24]
  408128:	cbz	x25, 408170 <ferror@plt+0x4ba0>
  40812c:	sub	x23, x23, x26
  408130:	mov	x0, x25
  408134:	bl	402d50 <strlen@plt>
  408138:	mov	x22, x0
  40813c:	cmp	x0, x23
  408140:	b.ls	408150 <ferror@plt+0x4b80>  // b.plast
  408144:	mov	x1, x0
  408148:	mov	x0, x20
  40814c:	bl	45c22c <_obstack_newchunk@@Base>
  408150:	ldr	x0, [x20, #24]
  408154:	mov	x2, x22
  408158:	mov	x1, x25
  40815c:	bl	402cd0 <memcpy@plt>
  408160:	ldr	x0, [x20, #24]
  408164:	add	x0, x0, x22
  408168:	str	x0, [x20, #24]
  40816c:	b	408120 <ferror@plt+0x4b50>
  408170:	cmp	x23, x26
  408174:	b.ne	408184 <ferror@plt+0x4bb4>  // b.any
  408178:	mov	x0, x20
  40817c:	mov	x1, #0x1                   	// #1
  408180:	bl	45c22c <_obstack_newchunk@@Base>
  408184:	ldr	x0, [x19, #488]
  408188:	add	x2, x0, #0x1
  40818c:	str	x2, [x19, #488]
  408190:	strb	wzr, [x0]
  408194:	ldp	x3, x2, [x19, #480]
  408198:	cmp	x2, x3
  40819c:	b.ne	4081ac <ferror@plt+0x4bdc>  // b.any
  4081a0:	ldrb	w0, [x19, #544]
  4081a4:	orr	w0, w0, #0x2
  4081a8:	strb	w0, [x19, #544]
  4081ac:	ldr	x0, [x19, #512]
  4081b0:	add	x20, x19, #0x1d0
  4081b4:	ldr	x1, [x20, #8]
  4081b8:	add	x2, x2, x0
  4081bc:	bic	x0, x2, x0
  4081c0:	add	x21, x21, #0x90
  4081c4:	ldr	x2, [x20, #32]
  4081c8:	sub	x4, x0, x1
  4081cc:	str	x3, [x19, #552]
  4081d0:	sub	x1, x2, x1
  4081d4:	cmp	x4, x1
  4081d8:	csel	x0, x0, x2, ls  // ls = plast
  4081dc:	stp	x0, x0, [x20, #16]
  4081e0:	ldr	x24, [x21], #8
  4081e4:	ldp	x25, x23, [x20, #24]
  4081e8:	cbz	x24, 408230 <ferror@plt+0x4c60>
  4081ec:	sub	x23, x23, x25
  4081f0:	mov	x0, x24
  4081f4:	bl	402d50 <strlen@plt>
  4081f8:	mov	x22, x0
  4081fc:	cmp	x0, x23
  408200:	b.ls	408210 <ferror@plt+0x4c40>  // b.plast
  408204:	mov	x1, x0
  408208:	mov	x0, x20
  40820c:	bl	45c22c <_obstack_newchunk@@Base>
  408210:	ldr	x0, [x20, #24]
  408214:	mov	x2, x22
  408218:	mov	x1, x24
  40821c:	bl	402cd0 <memcpy@plt>
  408220:	ldr	x0, [x20, #24]
  408224:	add	x0, x0, x22
  408228:	str	x0, [x20, #24]
  40822c:	b	4081e0 <ferror@plt+0x4c10>
  408230:	cmp	x23, x25
  408234:	b.ne	408244 <ferror@plt+0x4c74>  // b.any
  408238:	mov	x0, x20
  40823c:	mov	x1, #0x1                   	// #1
  408240:	bl	45c22c <_obstack_newchunk@@Base>
  408244:	ldr	x1, [x19, #488]
  408248:	add	x2, x1, #0x1
  40824c:	str	x2, [x19, #488]
  408250:	strb	wzr, [x1]
  408254:	ldp	x4, x2, [x19, #480]
  408258:	cmp	x2, x4
  40825c:	b.ne	40826c <ferror@plt+0x4c9c>  // b.any
  408260:	ldrb	w1, [x19, #544]
  408264:	orr	w1, w1, #0x2
  408268:	strb	w1, [x19, #544]
  40826c:	ldr	x1, [x19, #512]
  408270:	add	x0, x19, #0x1d0
  408274:	ldr	x3, [x0, #32]
  408278:	add	x2, x2, x1
  40827c:	bic	x1, x2, x1
  408280:	str	x4, [x19, #560]
  408284:	ldr	x2, [x0, #8]
  408288:	sub	x5, x1, x2
  40828c:	sub	x2, x3, x2
  408290:	cmp	x5, x2
  408294:	csel	x1, x1, x3, ls  // ls = plast
  408298:	stp	x1, x1, [x0, #16]
  40829c:	cmp	x3, x1
  4082a0:	b.ne	4082ac <ferror@plt+0x4cdc>  // b.any
  4082a4:	mov	x1, #0x1                   	// #1
  4082a8:	bl	45c22c <_obstack_newchunk@@Base>
  4082ac:	ldr	x1, [x19, #488]
  4082b0:	add	x2, x1, #0x1
  4082b4:	str	x2, [x19, #488]
  4082b8:	strb	wzr, [x1]
  4082bc:	ldp	x4, x2, [x19, #480]
  4082c0:	cmp	x2, x4
  4082c4:	b.ne	4082d4 <ferror@plt+0x4d04>  // b.any
  4082c8:	ldrb	w1, [x19, #544]
  4082cc:	orr	w1, w1, #0x2
  4082d0:	strb	w1, [x19, #544]
  4082d4:	ldr	x1, [x19, #512]
  4082d8:	add	x0, x19, #0x1d0
  4082dc:	ldr	x3, [x0, #32]
  4082e0:	add	x2, x2, x1
  4082e4:	bic	x1, x2, x1
  4082e8:	str	x4, [x19, #568]
  4082ec:	ldr	x2, [x0, #8]
  4082f0:	sub	x5, x1, x2
  4082f4:	sub	x2, x3, x2
  4082f8:	cmp	x5, x2
  4082fc:	csel	x1, x1, x3, ls  // ls = plast
  408300:	stp	x1, x1, [x0, #16]
  408304:	cmp	x3, x1
  408308:	b.ne	408314 <ferror@plt+0x4d44>  // b.any
  40830c:	mov	x1, #0x1                   	// #1
  408310:	bl	45c22c <_obstack_newchunk@@Base>
  408314:	ldr	x1, [x19, #488]
  408318:	add	x2, x1, #0x1
  40831c:	str	x2, [x19, #488]
  408320:	strb	wzr, [x1]
  408324:	ldp	x4, x2, [x19, #480]
  408328:	cmp	x2, x4
  40832c:	b.ne	40833c <ferror@plt+0x4d6c>  // b.any
  408330:	ldrb	w1, [x19, #544]
  408334:	orr	w1, w1, #0x2
  408338:	strb	w1, [x19, #544]
  40833c:	ldr	x1, [x19, #512]
  408340:	add	x0, x19, #0x1d0
  408344:	ldr	x3, [x0, #8]
  408348:	add	x2, x2, x1
  40834c:	bic	x1, x2, x1
  408350:	str	x4, [x19, #576]
  408354:	ldr	x2, [x0, #32]
  408358:	sub	x5, x1, x3
  40835c:	sub	x3, x2, x3
  408360:	cmp	x5, x3
  408364:	csel	x1, x1, x2, ls  // ls = plast
  408368:	stp	x1, x1, [x0, #16]
  40836c:	sub	x1, x2, x1
  408370:	cmp	x1, #0x8
  408374:	b.hi	408380 <ferror@plt+0x4db0>  // b.pmore
  408378:	mov	x1, #0x9                   	// #9
  40837c:	bl	45c22c <_obstack_newchunk@@Base>
  408380:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  408384:	add	x1, x1, #0xed7
  408388:	ldr	x2, [x19, #488]
  40838c:	add	x0, x19, #0x1d0
  408390:	ldr	x3, [x1]
  408394:	ldrb	w1, [x1, #8]
  408398:	str	x3, [x2]
  40839c:	strb	w1, [x2, #8]
  4083a0:	ldp	x1, x2, [x0, #24]
  4083a4:	add	x1, x1, #0x9
  4083a8:	str	x1, [x0, #24]
  4083ac:	cmp	x1, x2
  4083b0:	b.ne	4083bc <ferror@plt+0x4dec>  // b.any
  4083b4:	mov	x1, #0x1                   	// #1
  4083b8:	bl	45c22c <_obstack_newchunk@@Base>
  4083bc:	ldr	x0, [x19, #488]
  4083c0:	add	x2, x0, #0x1
  4083c4:	str	x2, [x19, #488]
  4083c8:	strb	wzr, [x0]
  4083cc:	ldp	x3, x2, [x19, #480]
  4083d0:	cmp	x2, x3
  4083d4:	b.ne	4083e4 <ferror@plt+0x4e14>  // b.any
  4083d8:	ldrb	w0, [x19, #544]
  4083dc:	orr	w0, w0, #0x2
  4083e0:	strb	w0, [x19, #544]
  4083e4:	ldr	x0, [x19, #512]
  4083e8:	str	x3, [x19, #584]
  4083ec:	ldr	x4, [x19, #496]
  4083f0:	add	x2, x2, x0
  4083f4:	bic	x0, x2, x0
  4083f8:	ldr	x2, [x19, #472]
  4083fc:	ldp	x21, x22, [sp, #32]
  408400:	sub	x5, x0, x2
  408404:	sub	x2, x4, x2
  408408:	cmp	x5, x2
  40840c:	csel	x0, x0, x4, ls  // ls = plast
  408410:	stp	x0, x0, [x19, #480]
  408414:	ldp	x19, x20, [sp, #16]
  408418:	ldp	x23, x24, [sp, #48]
  40841c:	ldp	x25, x26, [sp, #64]
  408420:	ldp	x29, x30, [sp], #80
  408424:	ret
  408428:	stp	x29, x30, [sp, #-64]!
  40842c:	mov	x29, sp
  408430:	stp	x19, x20, [sp, #16]
  408434:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408438:	add	x19, x19, #0x518
  40843c:	stp	x21, x22, [sp, #32]
  408440:	mov	x22, x0
  408444:	mov	x21, #0x0                   	// #0
  408448:	stp	x23, x24, [sp, #48]
  40844c:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x19c10>
  408450:	adrp	x24, 476000 <_obstack_memory_used@@Base+0x19c10>
  408454:	add	x23, x23, #0xf21
  408458:	add	x24, x24, #0xee1
  40845c:	ldr	w0, [x19, #24]
  408460:	cmp	w0, w21
  408464:	b.le	4084b8 <ferror@plt+0x4ee8>
  408468:	mov	x20, #0x18                  	// #24
  40846c:	ldr	x0, [x19, #16]
  408470:	mul	x20, x21, x20
  408474:	add	x1, x0, x20
  408478:	ldrb	w1, [x1, #21]
  40847c:	cbnz	w1, 4084a4 <ferror@plt+0x4ed4>
  408480:	ldr	x1, [x0, x20]
  408484:	add	x0, x22, #0x18
  408488:	bl	4204c8 <ferror@plt+0x1cef8>
  40848c:	mov	x2, x0
  408490:	ldr	x0, [x19, #16]
  408494:	ldr	x1, [x0, x20]
  408498:	cbz	x2, 4084ac <ferror@plt+0x4edc>
  40849c:	mov	x0, x24
  4084a0:	bl	4221dc <ferror@plt+0x1ec0c>
  4084a4:	add	x21, x21, #0x1
  4084a8:	b	40845c <ferror@plt+0x4e8c>
  4084ac:	mov	x0, x23
  4084b0:	bl	4221dc <ferror@plt+0x1ec0c>
  4084b4:	b	4084a4 <ferror@plt+0x4ed4>
  4084b8:	ldp	x19, x20, [sp, #16]
  4084bc:	ldp	x21, x22, [sp, #32]
  4084c0:	ldp	x23, x24, [sp, #48]
  4084c4:	ldp	x29, x30, [sp], #64
  4084c8:	ret
  4084cc:	stp	x29, x30, [sp, #-144]!
  4084d0:	mov	x29, sp
  4084d4:	stp	x21, x22, [sp, #32]
  4084d8:	adrp	x21, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4084dc:	add	x21, x21, #0x230
  4084e0:	stp	x19, x20, [sp, #16]
  4084e4:	ldr	w22, [x21, #3792]
  4084e8:	stp	x23, x24, [sp, #48]
  4084ec:	stp	x25, x26, [sp, #64]
  4084f0:	stp	x27, x28, [sp, #80]
  4084f4:	cbz	w22, 408590 <ferror@plt+0x4fc0>
  4084f8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4084fc:	add	x0, x0, #0xf58
  408500:	bl	403580 <gettext@plt>
  408504:	adrp	x19, 485000 <_obstack_memory_used@@Base+0x28c10>
  408508:	adrp	x2, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40850c:	add	x2, x2, #0x518
  408510:	add	x19, x19, #0x122
  408514:	ldr	x1, [x2, #592]
  408518:	cbz	x1, 408ed4 <ferror@plt+0x5904>
  40851c:	mov	x2, x19
  408520:	bl	4034d0 <printf@plt>
  408524:	adrp	x20, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  408528:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40852c:	add	x0, x0, #0xf67
  408530:	bl	403580 <gettext@plt>
  408534:	add	x20, x20, #0x4a0
  408538:	mov	x1, x19
  40853c:	mov	w3, #0x0                   	// #0
  408540:	mov	w2, #0x0                   	// #0
  408544:	mov	x21, x0
  408548:	add	x0, x20, #0x890
  40854c:	bl	4056a4 <ferror@plt+0x20d4>
  408550:	mov	x1, x0
  408554:	mov	x0, x21
  408558:	bl	4034d0 <printf@plt>
  40855c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  408560:	add	x0, x0, #0xf75
  408564:	bl	403580 <gettext@plt>
  408568:	mov	x21, x0
  40856c:	mov	x1, x19
  408570:	add	x0, x20, #0x848
  408574:	mov	w3, #0x1                   	// #1
  408578:	mov	w2, #0x0                   	// #0
  40857c:	bl	4056a4 <ferror@plt+0x20d4>
  408580:	mov	x1, x0
  408584:	mov	x0, x21
  408588:	bl	4034d0 <printf@plt>
  40858c:	b	408968 <ferror@plt+0x5398>
  408590:	ldr	x0, [x21, #3760]
  408594:	cbz	x0, 4085a4 <ferror@plt+0x4fd4>
  408598:	bl	406c40 <ferror@plt+0x3670>
  40859c:	bl	4031b0 <puts@plt>
  4085a0:	b	408988 <ferror@plt+0x53b8>
  4085a4:	ldr	x19, [x21, #3784]
  4085a8:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4085ac:	add	x20, x20, #0x518
  4085b0:	cbz	x19, 40860c <ferror@plt+0x503c>
  4085b4:	ldr	x20, [x20, #600]
  4085b8:	cbz	x20, 4085e4 <ferror@plt+0x5014>
  4085bc:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4085c0:	mov	x0, x19
  4085c4:	add	x1, x1, #0x8ce
  4085c8:	bl	403220 <strcmp@plt>
  4085cc:	cbnz	w0, 4085e4 <ferror@plt+0x5014>
  4085d0:	mov	x1, x20
  4085d4:	mov	x0, x19
  4085d8:	mov	x2, #0x0                   	// #0
  4085dc:	bl	45a668 <ferror@plt+0x57098>
  4085e0:	str	x0, [x21, #3784]
  4085e4:	ldr	x1, [x21, #3784]
  4085e8:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4085ec:	add	x0, x0, #0x4a0
  4085f0:	mov	w3, #0x0                   	// #0
  4085f4:	add	x0, x0, #0x890
  4085f8:	mov	w2, #0x1                   	// #1
  4085fc:	bl	406ba8 <ferror@plt+0x35d8>
  408600:	cbnz	x0, 40859c <ferror@plt+0x4fcc>
  408604:	ldr	x0, [x21, #3784]
  408608:	b	40859c <ferror@plt+0x4fcc>
  40860c:	ldr	w0, [x21, #3772]
  408610:	cbz	w0, 40894c <ferror@plt+0x537c>
  408614:	ldr	x21, [x20, #552]
  408618:	mov	x28, #0x0                   	// #0
  40861c:	mov	w24, #0x0                   	// #0
  408620:	ldrb	w0, [x21]
  408624:	cbz	w0, 408988 <ferror@plt+0x53b8>
  408628:	cmp	w0, #0xa
  40862c:	b.ne	408638 <ferror@plt+0x5068>  // b.any
  408630:	add	x21, x21, #0x1
  408634:	b	408620 <ferror@plt+0x5050>
  408638:	mov	x19, x21
  40863c:	ldrb	w1, [x19]
  408640:	cmp	w1, #0x20
  408644:	b.eq	40866c <ferror@plt+0x509c>  // b.none
  408648:	cbnz	w1, 408664 <ferror@plt+0x5094>
  40864c:	ldr	x2, [x20, #552]
  408650:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  408654:	add	x1, x1, #0xf84
  408658:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40865c:	ldr	w0, [x0, #584]
  408660:	bl	422d58 <ferror@plt+0x1f788>
  408664:	add	x19, x19, #0x1
  408668:	b	40863c <ferror@plt+0x506c>
  40866c:	cmp	w0, #0x2e
  408670:	b.ne	4086b8 <ferror@plt+0x50e8>  // b.any
  408674:	ldrb	w0, [x21, #1]
  408678:	cmp	w0, #0x3a
  40867c:	b.ne	4086b8 <ferror@plt+0x50e8>  // b.any
  408680:	ldrb	w0, [x21, #2]
  408684:	cmp	w0, #0x3a
  408688:	cset	w23, ne  // ne = any
  40868c:	ldr	x0, [x20, #568]
  408690:	str	x0, [sp, #96]
  408694:	mov	x27, x0
  408698:	add	x0, x19, #0x1
  40869c:	str	x0, [sp, #120]
  4086a0:	ldrb	w0, [x27]
  4086a4:	cbz	w0, 4087dc <ferror@plt+0x520c>
  4086a8:	cmp	w0, #0xa
  4086ac:	b.ne	4086c0 <ferror@plt+0x50f0>  // b.any
  4086b0:	add	x27, x27, #0x1
  4086b4:	b	4086a0 <ferror@plt+0x50d0>
  4086b8:	mov	w23, #0x0                   	// #0
  4086bc:	b	40868c <ferror@plt+0x50bc>
  4086c0:	mov	w26, #0x1                   	// #1
  4086c4:	b	4086d4 <ferror@plt+0x5104>
  4086c8:	cbnz	w26, 4086f4 <ferror@plt+0x5124>
  4086cc:	add	x25, x27, #0x1
  4086d0:	mov	x27, x25
  4086d4:	ldrb	w0, [x27]
  4086d8:	cmp	w0, #0x3b
  4086dc:	b.eq	4087cc <ferror@plt+0x51fc>  // b.none
  4086e0:	cbnz	w0, 4086c8 <ferror@plt+0x50f8>
  4086e4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  4086e8:	add	x1, x1, #0xfa3
  4086ec:	ldr	x2, [sp, #96]
  4086f0:	b	408658 <ferror@plt+0x5088>
  4086f4:	mov	x25, x27
  4086f8:	ldrb	w9, [x25]
  4086fc:	cmp	w9, #0x20
  408700:	b.eq	408718 <ferror@plt+0x5148>  // b.none
  408704:	cmp	w9, #0x3b
  408708:	b.eq	408718 <ferror@plt+0x5148>  // b.none
  40870c:	cbz	w9, 4086e4 <ferror@plt+0x5114>
  408710:	add	x25, x25, #0x1
  408714:	b	4086f8 <ferror@plt+0x5128>
  408718:	sub	x1, x25, x27
  40871c:	str	x1, [sp, #104]
  408720:	ldr	x0, [sp, #120]
  408724:	ldrsw	x1, [sp, #104]
  408728:	str	x1, [sp, #112]
  40872c:	ldrb	w1, [x0]
  408730:	cmp	w1, #0x3b
  408734:	b.eq	4087b8 <ferror@plt+0x51e8>  // b.none
  408738:	cbz	w1, 40864c <ferror@plt+0x507c>
  40873c:	mov	x6, x0
  408740:	ldrb	w7, [x6]
  408744:	cmp	w7, #0x20
  408748:	b.eq	408760 <ferror@plt+0x5190>  // b.none
  40874c:	cmp	w7, #0x3b
  408750:	b.eq	408760 <ferror@plt+0x5190>  // b.none
  408754:	cbz	w7, 40864c <ferror@plt+0x507c>
  408758:	add	x6, x6, #0x1
  40875c:	b	408740 <ferror@plt+0x5170>
  408760:	ldr	x1, [sp, #112]
  408764:	sub	x2, x6, x0
  408768:	str	x6, [sp, #128]
  40876c:	cmp	x2, x1
  408770:	stp	w9, w7, [sp, #136]
  408774:	csel	x2, x2, x1, ge  // ge = tcont
  408778:	mov	x1, x27
  40877c:	bl	402f80 <strncmp@plt>
  408780:	ldr	w9, [sp, #136]
  408784:	cbz	w0, 4087bc <ferror@plt+0x51ec>
  408788:	ldr	w1, [sp, #104]
  40878c:	mov	x0, x27
  408790:	str	w9, [sp, #136]
  408794:	bl	404e4c <ferror@plt+0x187c>
  408798:	ldr	w9, [sp, #136]
  40879c:	cbnz	w0, 4087bc <ferror@plt+0x51ec>
  4087a0:	ldr	w7, [sp, #140]
  4087a4:	ldr	x6, [sp, #128]
  4087a8:	cmp	w7, #0x20
  4087ac:	cset	w0, eq  // eq = none
  4087b0:	add	x0, x6, x0
  4087b4:	b	40872c <ferror@plt+0x515c>
  4087b8:	mov	w26, #0x0                   	// #0
  4087bc:	cmp	w9, #0x20
  4087c0:	b.ne	4086d0 <ferror@plt+0x5100>  // b.any
  4087c4:	add	x25, x25, #0x1
  4087c8:	b	4086d0 <ferror@plt+0x5100>
  4087cc:	cbz	w26, 4086b0 <ferror@plt+0x50e0>
  4087d0:	mov	x21, x28
  4087d4:	mov	w23, w26
  4087d8:	b	408880 <ferror@plt+0x52b0>
  4087dc:	cbnz	w23, 4088d4 <ferror@plt+0x5304>
  4087e0:	sub	x25, x19, x21
  4087e4:	cbz	x28, 40884c <ferror@plt+0x527c>
  4087e8:	cmp	w24, w25
  4087ec:	b.ne	40884c <ferror@plt+0x527c>  // b.any
  4087f0:	mov	w2, w24
  4087f4:	mov	x1, x21
  4087f8:	mov	x0, x28
  4087fc:	bl	45a8c0 <ferror@plt+0x572f0>
  408800:	cmp	w0, #0x0
  408804:	cset	w0, eq  // eq = none
  408808:	mov	w24, w25
  40880c:	add	x25, x19, #0x1
  408810:	cbnz	w0, 4088dc <ferror@plt+0x530c>
  408814:	ldrb	w0, [x25]
  408818:	cmp	w0, #0x3b
  40881c:	b.eq	408854 <ferror@plt+0x5284>  // b.none
  408820:	cbz	w0, 40864c <ferror@plt+0x507c>
  408824:	cmp	w0, #0x21
  408828:	csel	x0, x25, xzr, ne  // ne = any
  40882c:	ldrb	w26, [x25]
  408830:	cmp	w26, #0x20
  408834:	b.eq	408ee4 <ferror@plt+0x5914>  // b.none
  408838:	cmp	w26, #0x3b
  40883c:	b.eq	408f04 <ferror@plt+0x5934>  // b.none
  408840:	cbz	w26, 40864c <ferror@plt+0x507c>
  408844:	add	x25, x25, #0x1
  408848:	b	40882c <ferror@plt+0x525c>
  40884c:	mov	w0, #0x0                   	// #0
  408850:	b	408808 <ferror@plt+0x5238>
  408854:	mov	x25, x21
  408858:	cmp	x19, x25
  40885c:	b.ls	408878 <ferror@plt+0x52a8>  // b.plast
  408860:	ldrb	w0, [x25]
  408864:	cmp	w0, #0x3a
  408868:	b.eq	408878 <ferror@plt+0x52a8>  // b.none
  40886c:	add	x25, x25, #0x1
  408870:	bl	403500 <putchar@plt>
  408874:	b	408858 <ferror@plt+0x5288>
  408878:	mov	w0, #0x3b                  	// #59
  40887c:	bl	403500 <putchar@plt>
  408880:	add	x19, x19, #0x1
  408884:	ldrb	w25, [x19]
  408888:	cmp	w25, #0x3b
  40888c:	b.eq	4088e4 <ferror@plt+0x5314>  // b.none
  408890:	cbz	w25, 40864c <ferror@plt+0x507c>
  408894:	cbnz	w23, 408880 <ferror@plt+0x52b0>
  408898:	cmp	w25, #0x21
  40889c:	b.eq	4088a8 <ferror@plt+0x52d8>  // b.none
  4088a0:	mov	w0, #0x40                  	// #64
  4088a4:	bl	403500 <putchar@plt>
  4088a8:	ldrb	w0, [x19]
  4088ac:	cmp	w0, #0x20
  4088b0:	b.eq	408880 <ferror@plt+0x52b0>  // b.none
  4088b4:	cmp	w0, #0x3b
  4088b8:	b.eq	408884 <ferror@plt+0x52b4>  // b.none
  4088bc:	cbz	w0, 40864c <ferror@plt+0x507c>
  4088c0:	cmp	w25, #0x21
  4088c4:	b.eq	4088cc <ferror@plt+0x52fc>  // b.none
  4088c8:	bl	403500 <putchar@plt>
  4088cc:	add	x19, x19, #0x1
  4088d0:	b	4088a8 <ferror@plt+0x52d8>
  4088d4:	mov	x21, x28
  4088d8:	b	408880 <ferror@plt+0x52b0>
  4088dc:	mov	w23, #0x1                   	// #1
  4088e0:	b	408880 <ferror@plt+0x52b0>
  4088e4:	cbnz	w23, 408940 <ferror@plt+0x5370>
  4088e8:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4088ec:	ldr	x23, [x0, #3400]
  4088f0:	cbz	x23, 408938 <ferror@plt+0x5368>
  4088f4:	ldrb	w0, [x23]
  4088f8:	cbz	w0, 408938 <ferror@plt+0x5368>
  4088fc:	mov	w0, #0x1                   	// #1
  408900:	ldrb	w1, [x23]
  408904:	cbz	w1, 408938 <ferror@plt+0x5368>
  408908:	cmp	w1, #0x20
  40890c:	b.eq	408930 <ferror@plt+0x5360>  // b.none
  408910:	cbz	w0, 40891c <ferror@plt+0x534c>
  408914:	mov	w0, #0x40                  	// #64
  408918:	bl	403500 <putchar@plt>
  40891c:	ldrb	w0, [x23]
  408920:	bl	403500 <putchar@plt>
  408924:	mov	w0, #0x0                   	// #0
  408928:	add	x23, x23, #0x1
  40892c:	b	408900 <ferror@plt+0x5330>
  408930:	mov	w0, #0x1                   	// #1
  408934:	b	408928 <ferror@plt+0x5358>
  408938:	mov	w0, #0xa                   	// #10
  40893c:	bl	403500 <putchar@plt>
  408940:	mov	x28, x21
  408944:	add	x21, x19, #0x1
  408948:	b	408620 <ferror@plt+0x5050>
  40894c:	ldr	w0, [x21, #3768]
  408950:	cbz	w0, 408970 <ferror@plt+0x53a0>
  408954:	ldr	x0, [x20, #72]
  408958:	cbnz	x0, 40859c <ferror@plt+0x4fcc>
  40895c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  408960:	add	x0, x0, #0x66b
  408964:	bl	4031b0 <puts@plt>
  408968:	mov	w22, #0x0                   	// #0
  40896c:	b	408988 <ferror@plt+0x53b8>
  408970:	ldr	w0, [x21, #3780]
  408974:	cbz	w0, 4089a8 <ferror@plt+0x53d8>
  408978:	ldr	x0, [x20, #80]
  40897c:	cbnz	x0, 40859c <ferror@plt+0x4fcc>
  408980:	mov	w0, #0xa                   	// #10
  408984:	bl	403500 <putchar@plt>
  408988:	mov	w0, w22
  40898c:	ldp	x19, x20, [sp, #16]
  408990:	ldp	x21, x22, [sp, #32]
  408994:	ldp	x23, x24, [sp, #48]
  408998:	ldp	x25, x26, [sp, #64]
  40899c:	ldp	x27, x28, [sp, #80]
  4089a0:	ldp	x29, x30, [sp], #144
  4089a4:	ret
  4089a8:	ldr	w0, [x21, #3796]
  4089ac:	cbz	w0, 4089d4 <ferror@plt+0x5404>
  4089b0:	ldr	x0, [x20, #288]
  4089b4:	cbz	x0, 408988 <ferror@plt+0x53b8>
  4089b8:	ldr	x2, [x20, #304]
  4089bc:	cbz	x2, 40859c <ferror@plt+0x4fcc>
  4089c0:	mov	x1, x0
  4089c4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  4089c8:	add	x0, x0, #0xf61
  4089cc:	bl	4034d0 <printf@plt>
  4089d0:	b	408988 <ferror@plt+0x53b8>
  4089d4:	ldr	w0, [x21, #3776]
  4089d8:	cbz	w0, 4089e4 <ferror@plt+0x5414>
  4089dc:	ldr	x0, [x20, #88]
  4089e0:	b	408958 <ferror@plt+0x5388>
  4089e4:	ldr	w0, [x21, #3800]
  4089e8:	cbz	w0, 408a24 <ferror@plt+0x5454>
  4089ec:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4089f0:	ldr	x0, [x0, #3408]
  4089f4:	ldrb	w0, [x0]
  4089f8:	cbz	w0, 408a10 <ferror@plt+0x5440>
  4089fc:	ldr	x0, [x20, #296]
  408a00:	cbnz	x0, 408964 <ferror@plt+0x5394>
  408a04:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  408a08:	add	x0, x0, #0x122
  408a0c:	b	408964 <ferror@plt+0x5394>
  408a10:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  408a14:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  408a18:	add	x1, x1, #0xfc5
  408a1c:	ldr	w0, [x0, #584]
  408a20:	bl	422d58 <ferror@plt+0x1f788>
  408a24:	ldr	w0, [x20, #608]
  408a28:	cbz	w0, 408e28 <ferror@plt+0x5858>
  408a2c:	adrp	x23, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  408a30:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  408a34:	add	x0, x0, #0xff0
  408a38:	bl	403580 <gettext@plt>
  408a3c:	ldr	x1, [x23, #208]
  408a40:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408a44:	bl	4034d0 <printf@plt>
  408a48:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408a4c:	add	x0, x0, #0xd
  408a50:	bl	403580 <gettext@plt>
  408a54:	ldr	x1, [x19, #1272]
  408a58:	bl	402d60 <fputs@plt>
  408a5c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408a60:	add	x0, x0, #0x17
  408a64:	bl	403580 <gettext@plt>
  408a68:	ldr	x1, [x19, #1272]
  408a6c:	bl	402d60 <fputs@plt>
  408a70:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408a74:	add	x0, x0, #0x5e
  408a78:	bl	403580 <gettext@plt>
  408a7c:	ldr	x1, [x19, #1272]
  408a80:	bl	402d60 <fputs@plt>
  408a84:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408a88:	add	x0, x0, #0x94
  408a8c:	bl	403580 <gettext@plt>
  408a90:	ldr	x1, [x19, #1272]
  408a94:	bl	402d60 <fputs@plt>
  408a98:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408a9c:	add	x0, x0, #0xde
  408aa0:	bl	403580 <gettext@plt>
  408aa4:	ldr	x1, [x19, #1272]
  408aa8:	bl	402d60 <fputs@plt>
  408aac:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408ab0:	add	x0, x0, #0x13c
  408ab4:	bl	403580 <gettext@plt>
  408ab8:	ldr	x1, [x19, #1272]
  408abc:	bl	402d60 <fputs@plt>
  408ac0:	ldr	w0, [x21, #3816]
  408ac4:	cbnz	w0, 408adc <ferror@plt+0x550c>
  408ac8:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408acc:	add	x0, x0, #0x188
  408ad0:	bl	403580 <gettext@plt>
  408ad4:	ldr	x1, [x19, #1272]
  408ad8:	bl	402d60 <fputs@plt>
  408adc:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408ae0:	add	x0, x0, #0x1cf
  408ae4:	bl	403580 <gettext@plt>
  408ae8:	ldr	x1, [x19, #1272]
  408aec:	bl	402d60 <fputs@plt>
  408af0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408af4:	add	x0, x0, #0x211
  408af8:	bl	403580 <gettext@plt>
  408afc:	ldr	x1, [x19, #1272]
  408b00:	bl	402d60 <fputs@plt>
  408b04:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b08:	add	x0, x0, #0x257
  408b0c:	bl	403580 <gettext@plt>
  408b10:	ldr	x1, [x19, #1272]
  408b14:	bl	402d60 <fputs@plt>
  408b18:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b1c:	add	x0, x0, #0x298
  408b20:	bl	403580 <gettext@plt>
  408b24:	ldr	x1, [x19, #1272]
  408b28:	bl	402d60 <fputs@plt>
  408b2c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b30:	add	x0, x0, #0x2dd
  408b34:	bl	403580 <gettext@plt>
  408b38:	ldr	x1, [x19, #1272]
  408b3c:	bl	402d60 <fputs@plt>
  408b40:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b44:	add	x0, x0, #0x330
  408b48:	bl	403580 <gettext@plt>
  408b4c:	ldr	x1, [x19, #1272]
  408b50:	bl	402d60 <fputs@plt>
  408b54:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b58:	add	x0, x0, #0x382
  408b5c:	bl	403580 <gettext@plt>
  408b60:	ldr	x1, [x19, #1272]
  408b64:	bl	402d60 <fputs@plt>
  408b68:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b6c:	add	x0, x0, #0x3c6
  408b70:	bl	403580 <gettext@plt>
  408b74:	ldr	x1, [x19, #1272]
  408b78:	bl	402d60 <fputs@plt>
  408b7c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b80:	add	x0, x0, #0x416
  408b84:	bl	403580 <gettext@plt>
  408b88:	ldr	x1, [x19, #1272]
  408b8c:	bl	402d60 <fputs@plt>
  408b90:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408b94:	add	x0, x0, #0x4a3
  408b98:	bl	403580 <gettext@plt>
  408b9c:	ldr	x1, [x19, #1272]
  408ba0:	bl	402d60 <fputs@plt>
  408ba4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408ba8:	add	x0, x0, #0x4f2
  408bac:	bl	403580 <gettext@plt>
  408bb0:	ldr	x1, [x19, #1272]
  408bb4:	bl	402d60 <fputs@plt>
  408bb8:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408bbc:	add	x0, x0, #0x583
  408bc0:	bl	403580 <gettext@plt>
  408bc4:	ldr	x1, [x19, #1272]
  408bc8:	bl	402d60 <fputs@plt>
  408bcc:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408bd0:	add	x0, x0, #0x5cb
  408bd4:	bl	403580 <gettext@plt>
  408bd8:	ldr	x1, [x19, #1272]
  408bdc:	bl	402d60 <fputs@plt>
  408be0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408be4:	add	x0, x0, #0x60f
  408be8:	bl	403580 <gettext@plt>
  408bec:	ldr	x1, [x19, #1272]
  408bf0:	bl	402d60 <fputs@plt>
  408bf4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408bf8:	add	x0, x0, #0x661
  408bfc:	bl	403580 <gettext@plt>
  408c00:	ldr	x1, [x19, #1272]
  408c04:	bl	402d60 <fputs@plt>
  408c08:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c0c:	add	x0, x0, #0x6b1
  408c10:	bl	403580 <gettext@plt>
  408c14:	ldr	x1, [x19, #1272]
  408c18:	bl	402d60 <fputs@plt>
  408c1c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c20:	add	x0, x0, #0x704
  408c24:	bl	403580 <gettext@plt>
  408c28:	ldr	x1, [x19, #1272]
  408c2c:	bl	402d60 <fputs@plt>
  408c30:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c34:	add	x0, x0, #0x751
  408c38:	bl	403580 <gettext@plt>
  408c3c:	ldr	x1, [x19, #1272]
  408c40:	bl	402d60 <fputs@plt>
  408c44:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c48:	add	x0, x0, #0x78d
  408c4c:	bl	403580 <gettext@plt>
  408c50:	ldr	x1, [x19, #1272]
  408c54:	bl	402d60 <fputs@plt>
  408c58:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c5c:	add	x0, x0, #0x7cc
  408c60:	bl	403580 <gettext@plt>
  408c64:	ldr	x1, [x19, #1272]
  408c68:	bl	402d60 <fputs@plt>
  408c6c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c70:	add	x0, x0, #0x805
  408c74:	bl	403580 <gettext@plt>
  408c78:	ldr	x1, [x19, #1272]
  408c7c:	bl	402d60 <fputs@plt>
  408c80:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c84:	add	x0, x0, #0x843
  408c88:	bl	403580 <gettext@plt>
  408c8c:	ldr	x1, [x19, #1272]
  408c90:	bl	402d60 <fputs@plt>
  408c94:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408c98:	add	x0, x0, #0x881
  408c9c:	bl	403580 <gettext@plt>
  408ca0:	ldr	x1, [x19, #1272]
  408ca4:	bl	402d60 <fputs@plt>
  408ca8:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408cac:	add	x0, x0, #0x90b
  408cb0:	bl	403580 <gettext@plt>
  408cb4:	ldr	x1, [x19, #1272]
  408cb8:	bl	402d60 <fputs@plt>
  408cbc:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408cc0:	add	x0, x0, #0x951
  408cc4:	bl	403580 <gettext@plt>
  408cc8:	ldr	x1, [x19, #1272]
  408ccc:	bl	402d60 <fputs@plt>
  408cd0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408cd4:	add	x0, x0, #0x994
  408cd8:	bl	403580 <gettext@plt>
  408cdc:	ldr	x1, [x19, #1272]
  408ce0:	bl	402d60 <fputs@plt>
  408ce4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408ce8:	add	x0, x0, #0x9e5
  408cec:	bl	403580 <gettext@plt>
  408cf0:	ldr	x1, [x19, #1272]
  408cf4:	bl	402d60 <fputs@plt>
  408cf8:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408cfc:	add	x0, x0, #0xa33
  408d00:	bl	403580 <gettext@plt>
  408d04:	ldr	x1, [x19, #1272]
  408d08:	bl	402d60 <fputs@plt>
  408d0c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d10:	add	x0, x0, #0xaab
  408d14:	bl	403580 <gettext@plt>
  408d18:	ldr	x1, [x19, #1272]
  408d1c:	bl	402d60 <fputs@plt>
  408d20:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d24:	add	x0, x0, #0xaf7
  408d28:	bl	403580 <gettext@plt>
  408d2c:	ldr	x1, [x19, #1272]
  408d30:	bl	402d60 <fputs@plt>
  408d34:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d38:	add	x0, x0, #0xb41
  408d3c:	bl	403580 <gettext@plt>
  408d40:	ldr	x1, [x19, #1272]
  408d44:	bl	402d60 <fputs@plt>
  408d48:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d4c:	add	x0, x0, #0xb93
  408d50:	bl	403580 <gettext@plt>
  408d54:	ldr	x1, [x19, #1272]
  408d58:	bl	402d60 <fputs@plt>
  408d5c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d60:	add	x0, x0, #0xbe2
  408d64:	bl	403580 <gettext@plt>
  408d68:	ldr	x1, [x19, #1272]
  408d6c:	bl	402d60 <fputs@plt>
  408d70:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d74:	add	x0, x0, #0xc25
  408d78:	bl	403580 <gettext@plt>
  408d7c:	ldr	x1, [x19, #1272]
  408d80:	bl	402d60 <fputs@plt>
  408d84:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d88:	add	x0, x0, #0xc68
  408d8c:	bl	403580 <gettext@plt>
  408d90:	ldr	x1, [x19, #1272]
  408d94:	bl	402d60 <fputs@plt>
  408d98:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408d9c:	add	x0, x0, #0xca2
  408da0:	bl	403580 <gettext@plt>
  408da4:	ldr	x1, [x19, #1272]
  408da8:	bl	402d60 <fputs@plt>
  408dac:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408db0:	add	x0, x0, #0xd16
  408db4:	bl	403580 <gettext@plt>
  408db8:	ldr	x1, [x19, #1272]
  408dbc:	bl	402d60 <fputs@plt>
  408dc0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408dc4:	add	x0, x0, #0xd4b
  408dc8:	bl	403580 <gettext@plt>
  408dcc:	ldr	x1, [x19, #1272]
  408dd0:	bl	402d60 <fputs@plt>
  408dd4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408dd8:	add	x0, x0, #0xe83
  408ddc:	bl	403580 <gettext@plt>
  408de0:	ldr	x1, [x23, #208]
  408de4:	bl	4034d0 <printf@plt>
  408de8:	ldr	w0, [x21, #3816]
  408dec:	cbnz	w0, 408e14 <ferror@plt+0x5844>
  408df0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408df4:	add	x0, x0, #0xf5f
  408df8:	bl	403580 <gettext@plt>
  408dfc:	bl	4034d0 <printf@plt>
  408e00:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  408e04:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408e08:	add	x1, x1, #0x27d
  408e0c:	add	x0, x0, #0xf8d
  408e10:	b	408588 <ferror@plt+0x4fb8>
  408e14:	ldr	x1, [x19, #1272]
  408e18:	mov	w0, #0xa                   	// #10
  408e1c:	bl	402e40 <fputc@plt>
  408e20:	ldr	x0, [x19, #1272]
  408e24:	bl	403350 <fflush@plt>
  408e28:	ldr	w0, [x20, #612]
  408e2c:	cbz	w0, 408ea8 <ferror@plt+0x58d8>
  408e30:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408e34:	add	x0, x0, #0xf92
  408e38:	bl	403580 <gettext@plt>
  408e3c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408e40:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  408e44:	adrp	x3, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  408e48:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  408e4c:	add	x3, x3, #0x277
  408e50:	ldr	x1, [x1, #208]
  408e54:	add	x2, x2, #0x270
  408e58:	bl	4034d0 <printf@plt>
  408e5c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408e60:	add	x0, x0, #0xf9b
  408e64:	bl	403580 <gettext@plt>
  408e68:	mov	x1, x0
  408e6c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408e70:	add	x0, x0, #0xf9f
  408e74:	bl	4034d0 <printf@plt>
  408e78:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x1ac10>
  408e7c:	add	x0, x0, #0xfd1
  408e80:	bl	403580 <gettext@plt>
  408e84:	ldr	x1, [x19, #1272]
  408e88:	bl	402d60 <fputs@plt>
  408e8c:	ldr	w0, [x21, #3816]
  408e90:	cbz	w0, 408988 <ferror@plt+0x53b8>
  408e94:	ldr	x1, [x19, #1272]
  408e98:	mov	w0, #0xa                   	// #10
  408e9c:	bl	402e40 <fputc@plt>
  408ea0:	ldr	x0, [x19, #1272]
  408ea4:	bl	403350 <fflush@plt>
  408ea8:	ldr	w0, [x21, #3816]
  408eac:	cbz	w0, 408ecc <ferror@plt+0x58fc>
  408eb0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408eb4:	ldr	x0, [x0, #1264]
  408eb8:	bl	404a6c <ferror@plt+0x149c>
  408ebc:	ldr	w0, [x20, #232]
  408ec0:	cmp	w0, #0x0
  408ec4:	cset	w22, ne  // ne = any
  408ec8:	b	408988 <ferror@plt+0x53b8>
  408ecc:	mov	w22, #0x1                   	// #1
  408ed0:	b	408988 <ferror@plt+0x53b8>
  408ed4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  408ed8:	add	x1, x1, #0xf4a
  408edc:	ldr	x2, [x2, #56]
  408ee0:	b	408520 <ferror@plt+0x4f50>
  408ee4:	cbz	x0, 408efc <ferror@plt+0x592c>
  408ee8:	sub	w1, w25, w0
  408eec:	bl	404e4c <ferror@plt+0x187c>
  408ef0:	cbnz	w0, 4088dc <ferror@plt+0x530c>
  408ef4:	cmp	w26, #0x20
  408ef8:	b.ne	408814 <ferror@plt+0x5244>  // b.any
  408efc:	add	x25, x25, #0x1
  408f00:	b	408814 <ferror@plt+0x5244>
  408f04:	cbnz	x0, 408ee8 <ferror@plt+0x5918>
  408f08:	b	408814 <ferror@plt+0x5244>
  408f0c:	stp	x29, x30, [sp, #-80]!
  408f10:	mov	x29, sp
  408f14:	stp	x19, x20, [sp, #16]
  408f18:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408f1c:	add	x19, x19, #0x518
  408f20:	stp	x21, x22, [sp, #32]
  408f24:	ldr	w1, [x19, #232]
  408f28:	stp	x23, x24, [sp, #48]
  408f2c:	mov	x23, x0
  408f30:	ldr	w0, [x19, #616]
  408f34:	stp	x25, x26, [sp, #64]
  408f38:	cmp	w1, w0
  408f3c:	b.ne	408f54 <ferror@plt+0x5984>  // b.any
  408f40:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  408f44:	add	x1, x1, #0x6a
  408f48:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  408f4c:	ldr	w0, [x0, #584]
  408f50:	bl	422d58 <ferror@plt+0x1f788>
  408f54:	bl	421380 <ferror@plt+0x1ddb0>
  408f58:	ands	w0, w0, #0xff
  408f5c:	b.ne	40908c <ferror@plt+0x5abc>  // b.any
  408f60:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  408f64:	ldrsw	x0, [x19, #232]
  408f68:	ldrsw	x2, [x1, #2380]
  408f6c:	mov	x1, #0x8                   	// #8
  408f70:	add	x0, x2, x0
  408f74:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  408f78:	str	x0, [x19, #240]
  408f7c:	ldrsw	x0, [x19, #232]
  408f80:	mov	x1, #0x1                   	// #1
  408f84:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  408f88:	str	x0, [x23]
  408f8c:	ldr	w0, [x19, #620]
  408f90:	cbnz	w0, 40903c <ferror@plt+0x5a6c>
  408f94:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  408f98:	ldr	x0, [x0, #4048]
  408f9c:	cmp	x0, #0x0
  408fa0:	cset	w0, ne  // ne = any
  408fa4:	mov	w21, #0x0                   	// #0
  408fa8:	mov	x20, #0x0                   	// #0
  408fac:	mov	w25, #0x1                   	// #1
  408fb0:	strb	w0, [x19, #624]
  408fb4:	ldr	w0, [x19, #232]
  408fb8:	cmp	w0, w20
  408fbc:	b.le	40905c <ferror@plt+0x5a8c>
  408fc0:	ldr	x0, [x19, #256]
  408fc4:	lsl	x22, x20, #5
  408fc8:	ldr	x24, [x0, x22]
  408fcc:	add	x26, x0, x20, lsl #5
  408fd0:	mov	x0, x24
  408fd4:	bl	402d50 <strlen@plt>
  408fd8:	ldr	x2, [x26, #8]
  408fdc:	mov	x1, x0
  408fe0:	mov	x0, x24
  408fe4:	bl	4057ec <ferror@plt+0x221c>
  408fe8:	cbz	x0, 4090a4 <ferror@plt+0x5ad4>
  408fec:	ldr	w1, [x0, #24]
  408ff0:	cbnz	w1, 408ff8 <ferror@plt+0x5a28>
  408ff4:	strb	wzr, [x19, #624]
  408ff8:	cbz	w21, 409048 <ferror@plt+0x5a78>
  408ffc:	ldr	x1, [x19, #632]
  409000:	cmp	x0, x1
  409004:	b.eq	409044 <ferror@plt+0x5a74>  // b.none
  409008:	ldr	x1, [x19, #256]
  40900c:	add	x1, x1, x22
  409010:	ldr	x2, [x1, #8]
  409014:	cbz	x2, 409044 <ferror@plt+0x5a74>
  409018:	ldrb	w2, [x2]
  40901c:	cmp	w2, #0x2a
  409020:	b.eq	409044 <ferror@plt+0x5a74>  // b.none
  409024:	str	x0, [x1, #16]
  409028:	ldr	x0, [x19, #256]
  40902c:	add	x20, x20, #0x1
  409030:	add	x22, x0, x22
  409034:	strh	wzr, [x22, #24]
  409038:	b	408fb4 <ferror@plt+0x59e4>
  40903c:	mov	w0, #0x1                   	// #1
  409040:	b	408fa4 <ferror@plt+0x59d4>
  409044:	cbz	x0, 4090a8 <ferror@plt+0x5ad8>
  409048:	ldr	x1, [x19, #256]
  40904c:	add	w21, w21, #0x1
  409050:	str	x0, [x19, #632]
  409054:	add	x1, x1, x22
  409058:	b	409024 <ferror@plt+0x5a54>
  40905c:	ldrb	w0, [x19, #624]
  409060:	cbnz	w0, 409088 <ferror@plt+0x5ab8>
  409064:	ldr	w1, [x19, #640]
  409068:	cbz	w1, 40908c <ferror@plt+0x5abc>
  40906c:	ldr	w1, [x19, #620]
  409070:	cbz	w1, 40908c <ferror@plt+0x5abc>
  409074:	cmp	w21, #0x1
  409078:	b.le	40908c <ferror@plt+0x5abc>
  40907c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409080:	add	x1, x1, #0x79
  409084:	b	408f48 <ferror@plt+0x5978>
  409088:	mov	w0, #0x0                   	// #0
  40908c:	ldp	x19, x20, [sp, #16]
  409090:	ldp	x21, x22, [sp, #32]
  409094:	ldp	x23, x24, [sp, #48]
  409098:	ldp	x25, x26, [sp, #64]
  40909c:	ldp	x29, x30, [sp], #80
  4090a0:	ret
  4090a4:	cbnz	w21, 408ffc <ferror@plt+0x5a2c>
  4090a8:	ldr	x0, [x23]
  4090ac:	strb	w25, [x0, x20]
  4090b0:	ldr	x0, [x19, #256]
  4090b4:	add	x0, x0, x22
  4090b8:	str	xzr, [x0, #16]
  4090bc:	b	409028 <ferror@plt+0x5a58>
  4090c0:	stp	x29, x30, [sp, #-16]!
  4090c4:	mov	x29, sp
  4090c8:	bl	421380 <ferror@plt+0x1ddb0>
  4090cc:	tst	w0, #0xff
  4090d0:	b.eq	4090d8 <ferror@plt+0x5b08>  // b.none
  4090d4:	bl	40752c <ferror@plt+0x3f5c>
  4090d8:	bl	407560 <ferror@plt+0x3f90>
  4090dc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4090e0:	ldr	w0, [x0, #1912]
  4090e4:	cbz	w0, 409104 <ferror@plt+0x5b34>
  4090e8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4090ec:	add	x0, x0, #0xc1
  4090f0:	bl	4031b0 <puts@plt>
  4090f4:	ldp	x29, x30, [sp], #16
  4090f8:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4090fc:	add	x0, x0, #0x27d
  409100:	b	4031b0 <puts@plt>
  409104:	ldp	x29, x30, [sp], #16
  409108:	ret
  40910c:	stp	x29, x30, [sp, #-32]!
  409110:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409114:	mov	x29, sp
  409118:	str	x19, [sp, #16]
  40911c:	ldr	w19, [x0, #1948]
  409120:	cbnz	w19, 409154 <ferror@plt+0x5b84>
  409124:	bl	421380 <ferror@plt+0x1ddb0>
  409128:	tst	w0, #0xff
  40912c:	b.eq	409144 <ferror@plt+0x5b74>  // b.none
  409130:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  409134:	ldr	w0, [x0, #208]
  409138:	cbz	w0, 40915c <ferror@plt+0x5b8c>
  40913c:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  409140:	ldr	w19, [x0, #3416]
  409144:	mov	w0, w19
  409148:	ldr	x19, [sp, #16]
  40914c:	ldp	x29, x30, [sp], #32
  409150:	ret
  409154:	mov	w19, #0x2                   	// #2
  409158:	b	409144 <ferror@plt+0x5b74>
  40915c:	mov	w19, #0x1                   	// #1
  409160:	b	409144 <ferror@plt+0x5b74>
  409164:	stp	x29, x30, [sp, #-144]!
  409168:	mov	x29, sp
  40916c:	stp	x19, x20, [sp, #16]
  409170:	mov	x20, x0
  409174:	ldr	x0, [x0]
  409178:	stp	x21, x22, [sp, #32]
  40917c:	mov	w22, w2
  409180:	stp	x23, x24, [sp, #48]
  409184:	stp	x25, x26, [sp, #64]
  409188:	stp	x27, x28, [sp, #80]
  40918c:	str	x1, [x29, #128]
  409190:	cbnz	x0, 4094bc <ferror@plt+0x5eec>
  409194:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409198:	add	x21, x21, #0x518
  40919c:	mov	w19, #0x0                   	// #0
  4091a0:	ldr	x2, [x21, #560]
  4091a4:	mov	x0, x2
  4091a8:	ldrb	w1, [x0]
  4091ac:	cbz	w1, 4091c0 <ferror@plt+0x5bf0>
  4091b0:	cmp	w1, #0x3b
  4091b4:	add	x0, x0, #0x1
  4091b8:	cinc	w19, w19, eq  // eq = none
  4091bc:	b	4091a8 <ferror@plt+0x5bd8>
  4091c0:	mov	w0, #0x18                  	// #24
  4091c4:	smull	x0, w19, w0
  4091c8:	add	x0, x0, #0xf
  4091cc:	and	x0, x0, #0xfffffffffffffff0
  4091d0:	sub	sp, sp, x0
  4091d4:	mov	x0, x2
  4091d8:	mov	x25, sp
  4091dc:	mov	x3, x25
  4091e0:	ldrb	w1, [x0]
  4091e4:	cbz	w1, 40926c <ferror@plt+0x5c9c>
  4091e8:	mov	x4, x0
  4091ec:	str	x0, [x3]
  4091f0:	mov	x1, x4
  4091f4:	ldrb	w5, [x1], #1
  4091f8:	cmp	w5, #0x20
  4091fc:	b.eq	409220 <ferror@plt+0x5c50>  // b.none
  409200:	cbnz	w5, 409218 <ferror@plt+0x5c48>
  409204:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  409208:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40920c:	add	x1, x1, #0xee
  409210:	ldr	w0, [x0, #584]
  409214:	bl	422d58 <ferror@plt+0x1f788>
  409218:	mov	x4, x1
  40921c:	b	4091f0 <ferror@plt+0x5c20>
  409220:	sub	x0, x4, x0
  409224:	str	w0, [x3, #16]
  409228:	mov	x0, x1
  40922c:	str	x1, [x3, #8]
  409230:	ldrb	w4, [x0]
  409234:	cmp	w4, #0x3b
  409238:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40923c:	b.eq	409250 <ferror@plt+0x5c80>  // b.none
  409240:	cmp	w4, #0x20
  409244:	b.eq	409204 <ferror@plt+0x5c34>  // b.none
  409248:	add	x0, x0, #0x1
  40924c:	b	409230 <ferror@plt+0x5c60>
  409250:	sub	x1, x0, x1
  409254:	str	w1, [x3, #20]
  409258:	cmp	w4, #0x3b
  40925c:	b.ne	409264 <ferror@plt+0x5c94>  // b.any
  409260:	add	x0, x0, #0x1
  409264:	add	x3, x3, #0x18
  409268:	b	4091e0 <ferror@plt+0x5c10>
  40926c:	ldr	w0, [x21, #24]
  409270:	mov	w27, #0x18                  	// #24
  409274:	ldr	w1, [x21, #40]
  409278:	mov	w28, #0x0                   	// #0
  40927c:	cmp	w0, #0x0
  409280:	csinc	w0, w0, wzr, ne  // ne = any
  409284:	add	w0, w0, w1
  409288:	smull	x0, w0, w27
  40928c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  409290:	mov	x26, x0
  409294:	ldr	x24, [x21, #16]
  409298:	str	x26, [x20]
  40929c:	ldr	w0, [x21, #24]
  4092a0:	str	w27, [x29, #124]
  4092a4:	str	w0, [x29, #136]
  4092a8:	ldr	w0, [x29, #136]
  4092ac:	cmp	w0, w28
  4092b0:	b.le	409358 <ferror@plt+0x5d88>
  4092b4:	ldr	w0, [x24, #16]
  4092b8:	tbnz	w0, #2, 409340 <ferror@plt+0x5d70>
  4092bc:	ldr	x27, [x24]
  4092c0:	mov	x23, x25
  4092c4:	mov	x0, x27
  4092c8:	bl	402d50 <strlen@plt>
  4092cc:	sxtw	x2, w0
  4092d0:	mov	w6, #0x0                   	// #0
  4092d4:	mov	x4, x2
  4092d8:	cmp	w6, w19
  4092dc:	b.eq	409340 <ferror@plt+0x5d70>  // b.none
  4092e0:	ldr	w0, [x23, #16]
  4092e4:	cmp	w0, w4
  4092e8:	b.ne	40934c <ferror@plt+0x5d7c>  // b.any
  4092ec:	ldr	x1, [x23]
  4092f0:	mov	x0, x27
  4092f4:	str	w4, [x29, #108]
  4092f8:	str	x2, [x29, #112]
  4092fc:	str	w6, [x29, #120]
  409300:	bl	402f80 <strncmp@plt>
  409304:	ldr	w4, [x29, #108]
  409308:	ldr	w6, [x29, #120]
  40930c:	ldr	x2, [x29, #112]
  409310:	cbnz	w0, 40934c <ferror@plt+0x5d7c>
  409314:	ldr	w0, [x20, #8]
  409318:	ldr	w1, [x29, #124]
  40931c:	ldr	x4, [x23, #8]
  409320:	smull	x2, w0, w1
  409324:	add	w0, w0, #0x1
  409328:	str	w0, [x20, #8]
  40932c:	add	x1, x26, x2
  409330:	str	x4, [x26, x2]
  409334:	ldr	w2, [x23, #20]
  409338:	str	xzr, [x1, #8]
  40933c:	stp	w2, wzr, [x1, #16]
  409340:	add	w28, w28, #0x1
  409344:	add	x24, x24, #0x18
  409348:	b	4092a8 <ferror@plt+0x5cd8>
  40934c:	add	w6, w6, #0x1
  409350:	add	x23, x23, #0x18
  409354:	b	4092d8 <ferror@plt+0x5d08>
  409358:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40935c:	add	x25, x25, #0x10b
  409360:	mov	x27, #0x0                   	// #0
  409364:	ldr	w0, [x21, #40]
  409368:	cmp	w0, w27
  40936c:	b.le	4094bc <ferror@plt+0x5eec>
  409370:	ldr	x23, [x21, #48]
  409374:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  409378:	lsl	x26, x27, #4
  40937c:	ldr	x19, [x0, #3424]
  409380:	add	x23, x23, x27, lsl #4
  409384:	ldrb	w0, [x19]
  409388:	cbz	w0, 4094a0 <ferror@plt+0x5ed0>
  40938c:	mov	x24, x19
  409390:	ldrb	w0, [x24]
  409394:	cmp	w0, #0x20
  409398:	b.eq	4093f0 <ferror@plt+0x5e20>  // b.none
  40939c:	ldrsw	x28, [x23, #8]
  4093a0:	mov	x19, x24
  4093a4:	ldr	x0, [x23]
  4093a8:	str	x0, [x29, #136]
  4093ac:	ldr	x1, [x29, #136]
  4093b0:	mov	x2, x28
  4093b4:	mov	x0, x19
  4093b8:	bl	402f80 <strncmp@plt>
  4093bc:	cbnz	w0, 4093d0 <ferror@plt+0x5e00>
  4093c0:	ldrb	w1, [x19, x28]
  4093c4:	mov	x0, x25
  4093c8:	bl	4032f0 <strchr@plt>
  4093cc:	cbnz	x0, 409408 <ferror@plt+0x5e38>
  4093d0:	ldrb	w0, [x19]
  4093d4:	mov	w1, #0x2f                  	// #47
  4093d8:	cmp	w0, #0x20
  4093dc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4093e0:	b.eq	4093f8 <ferror@plt+0x5e28>  // b.none
  4093e4:	cbz	w0, 409408 <ferror@plt+0x5e38>
  4093e8:	add	x19, x19, #0x1
  4093ec:	b	4093d0 <ferror@plt+0x5e00>
  4093f0:	add	x24, x24, #0x1
  4093f4:	b	409390 <ferror@plt+0x5dc0>
  4093f8:	cmp	w0, #0x2f
  4093fc:	b.ne	409408 <ferror@plt+0x5e38>  // b.any
  409400:	add	x19, x19, #0x1
  409404:	b	4093ac <ferror@plt+0x5ddc>
  409408:	ldrb	w0, [x19]
  40940c:	and	w1, w0, #0xffffffdf
  409410:	cbz	w1, 4094b0 <ferror@plt+0x5ee0>
  409414:	add	x23, x21, #0x288
  409418:	ldrb	w1, [x24]
  40941c:	mov	w0, #0xdf                  	// #223
  409420:	tst	w1, w0
  409424:	b.eq	4094a0 <ferror@plt+0x5ed0>  // b.none
  409428:	mov	x19, x24
  40942c:	ldrb	w0, [x19]
  409430:	cmp	w0, #0x2f
  409434:	b.eq	409448 <ferror@plt+0x5e78>  // b.none
  409438:	and	w0, w0, #0xffffffdf
  40943c:	cbz	w0, 409448 <ferror@plt+0x5e78>
  409440:	add	x19, x19, #0x1
  409444:	b	40942c <ferror@plt+0x5e5c>
  409448:	sub	w2, w19, w24
  40944c:	mov	x1, x24
  409450:	mov	x0, x23
  409454:	bl	409164 <ferror@plt+0x5b94>
  409458:	cbnz	w0, 4094a0 <ferror@plt+0x5ed0>
  40945c:	ldrb	w0, [x19]
  409460:	cmp	w0, #0x2f
  409464:	b.eq	4094a8 <ferror@plt+0x5ed8>  // b.none
  409468:	ldr	w0, [x20, #8]
  40946c:	mov	w1, #0x18                  	// #24
  409470:	ldr	x5, [x21, #48]
  409474:	ldr	x3, [x20]
  409478:	smull	x1, w0, w1
  40947c:	add	x6, x5, x26
  409480:	add	w0, w0, #0x1
  409484:	add	x2, x3, x1
  409488:	ldr	x5, [x5, x26]
  40948c:	str	x5, [x3, x1]
  409490:	ldr	w1, [x6, #8]
  409494:	str	xzr, [x2, #8]
  409498:	stp	w1, wzr, [x2, #16]
  40949c:	str	w0, [x20, #8]
  4094a0:	add	x27, x27, #0x1
  4094a4:	b	409364 <ferror@plt+0x5d94>
  4094a8:	add	x24, x19, #0x1
  4094ac:	b	409418 <ferror@plt+0x5e48>
  4094b0:	cbz	w0, 409384 <ferror@plt+0x5db4>
  4094b4:	add	x19, x19, #0x1
  4094b8:	b	409384 <ferror@plt+0x5db4>
  4094bc:	ldr	w21, [x20, #8]
  4094c0:	sxtw	x25, w22
  4094c4:	mov	x19, #0x0                   	// #0
  4094c8:	mov	x23, #0x18                  	// #24
  4094cc:	cmp	w21, w19
  4094d0:	b.le	409508 <ferror@plt+0x5f38>
  4094d4:	ldr	x1, [x20]
  4094d8:	mul	x0, x19, x23
  4094dc:	add	x2, x1, x0
  4094e0:	ldr	w2, [x2, #16]
  4094e4:	cmp	w2, w22
  4094e8:	b.ne	409500 <ferror@plt+0x5f30>  // b.any
  4094ec:	ldr	x1, [x1, x0]
  4094f0:	mov	x2, x25
  4094f4:	ldr	x0, [x29, #128]
  4094f8:	bl	402f80 <strncmp@plt>
  4094fc:	cbz	w0, 40952c <ferror@plt+0x5f5c>
  409500:	add	x19, x19, #0x1
  409504:	b	4094cc <ferror@plt+0x5efc>
  409508:	mov	w0, #0x0                   	// #0
  40950c:	mov	sp, x29
  409510:	ldp	x19, x20, [sp, #16]
  409514:	ldp	x21, x22, [sp, #32]
  409518:	ldp	x23, x24, [sp, #48]
  40951c:	ldp	x25, x26, [sp, #64]
  409520:	ldp	x27, x28, [sp, #80]
  409524:	ldp	x29, x30, [sp], #144
  409528:	ret
  40952c:	mov	w0, #0x1                   	// #1
  409530:	b	40950c <ferror@plt+0x5f3c>
  409534:	stp	x29, x30, [sp, #-32]!
  409538:	mov	x29, sp
  40953c:	str	x19, [sp, #16]
  409540:	mov	x19, x0
  409544:	ldr	x0, [x0]
  409548:	bl	4032a0 <free@plt>
  40954c:	str	xzr, [x19]
  409550:	str	wzr, [x19, #8]
  409554:	ldr	x19, [sp, #16]
  409558:	ldp	x29, x30, [sp], #32
  40955c:	ret
  409560:	stp	x29, x30, [sp, #-64]!
  409564:	mov	x29, sp
  409568:	stp	x19, x20, [sp, #16]
  40956c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409570:	add	x19, x19, #0x518
  409574:	add	x0, x19, #0x190
  409578:	stp	x21, x22, [sp, #32]
  40957c:	mov	x21, #0x880                 	// #2176
  409580:	str	x23, [sp, #48]
  409584:	bl	407d5c <ferror@plt+0x478c>
  409588:	bl	411eec <ferror@plt+0xe91c>
  40958c:	mov	w22, #0x44                  	// #68
  409590:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409594:	ldr	x0, [x0, #784]
  409598:	bl	421498 <ferror@plt+0x1dec8>
  40959c:	stp	xzr, xzr, [x19, #288]
  4095a0:	add	x4, x19, #0x280
  4095a4:	adrp	x1, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4095a8:	add	x20, x1, #0x4a0
  4095ac:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4095b0:	add	x0, x0, #0x10e
  4095b4:	str	x0, [x1, #1184]
  4095b8:	mov	w0, #0x1                   	// #1
  4095bc:	stp	wzr, wzr, [x4, #-32]
  4095c0:	stp	wzr, wzr, [x4, #24]
  4095c4:	str	xzr, [x19, #304]
  4095c8:	strb	wzr, [x19, #460]
  4095cc:	str	xzr, [x19, #600]
  4095d0:	str	wzr, [x19, #672]
  4095d4:	str	xzr, [x19, #680]
  4095d8:	str	wzr, [x19, #688]
  4095dc:	str	wzr, [x19, #692]
  4095e0:	str	xzr, [x19, #696]
  4095e4:	str	xzr, [x19, #704]
  4095e8:	str	w0, [x20, #2232]
  4095ec:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4095f0:	add	x0, x0, #0x230
  4095f4:	bl	4137c8 <ferror@plt+0x101f8>
  4095f8:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  4095fc:	add	x0, x0, #0x140
  409600:	bl	4137c8 <ferror@plt+0x101f8>
  409604:	add	x0, x19, #0x138
  409608:	mov	x1, #0x0                   	// #0
  40960c:	bl	45c37c <_obstack_free@@Base>
  409610:	mov	x1, #0x0                   	// #0
  409614:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  409618:	add	x0, x0, #0x1d8
  40961c:	bl	45c37c <_obstack_free@@Base>
  409620:	add	x0, x19, #0x78
  409624:	mov	x1, #0x0                   	// #0
  409628:	bl	45c37c <_obstack_free@@Base>
  40962c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409630:	add	x0, x0, #0x128
  409634:	mov	x1, #0x0                   	// #0
  409638:	str	x0, [x20, #2144]
  40963c:	add	x0, x19, #0x1d0
  409640:	bl	45c37c <_obstack_free@@Base>
  409644:	str	xzr, [x19, #712]
  409648:	str	xzr, [x19, #720]
  40964c:	ldr	w1, [x19, #216]
  409650:	ldr	x0, [x19, #208]
  409654:	cmp	w1, w22
  409658:	b.le	40967c <ferror@plt+0x60ac>
  40965c:	add	x23, x0, x21
  409660:	add	w22, w22, #0x1
  409664:	ldr	x0, [x0, x21]
  409668:	add	x21, x21, #0x20
  40966c:	bl	4032a0 <free@plt>
  409670:	ldr	x0, [x23, #8]
  409674:	bl	4032a0 <free@plt>
  409678:	b	40964c <ferror@plt+0x607c>
  40967c:	bl	4032a0 <free@plt>
  409680:	str	xzr, [x19, #208]
  409684:	ldr	x0, [x19, #728]
  409688:	str	wzr, [x19, #216]
  40968c:	cbz	x0, 409694 <ferror@plt+0x60c4>
  409690:	str	wzr, [x0, #4]
  409694:	ldr	x0, [x19, #736]
  409698:	cbz	x0, 4096a0 <ferror@plt+0x60d0>
  40969c:	str	wzr, [x0, #4]
  4096a0:	ldr	x0, [x19, #744]
  4096a4:	cbz	x0, 4096ac <ferror@plt+0x60dc>
  4096a8:	str	wzr, [x0, #4]
  4096ac:	add	x0, x20, #0x890
  4096b0:	bl	40441c <ferror@plt+0xe4c>
  4096b4:	add	x0, x20, #0x848
  4096b8:	bl	40441c <ferror@plt+0xe4c>
  4096bc:	add	x0, x20, #0x868
  4096c0:	bl	40441c <ferror@plt+0xe4c>
  4096c4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4096c8:	add	x0, x0, #0x122
  4096cc:	str	x0, [x20, #2248]
  4096d0:	str	x0, [x20, #2256]
  4096d4:	str	x0, [x20, #2264]
  4096d8:	ldr	x0, [x19, #112]
  4096dc:	stp	xzr, xzr, [x19, #56]
  4096e0:	stp	xzr, xzr, [x19, #72]
  4096e4:	str	xzr, [x19, #88]
  4096e8:	str	xzr, [x19, #592]
  4096ec:	str	xzr, [x19, #752]
  4096f0:	cbz	x0, 409724 <ferror@plt+0x6154>
  4096f4:	add	x23, x20, #0x8
  4096f8:	ldr	x21, [x19, #112]
  4096fc:	cmp	x21, x23
  409700:	b.eq	409720 <ferror@plt+0x6150>  // b.none
  409704:	ldr	x0, [x21]
  409708:	ldr	x22, [x21, #24]
  40970c:	bl	4032a0 <free@plt>
  409710:	mov	x0, x21
  409714:	bl	4032a0 <free@plt>
  409718:	str	x22, [x19, #112]
  40971c:	b	4096f8 <ferror@plt+0x6128>
  409720:	str	xzr, [x19, #112]
  409724:	add	x20, x20, #0x8
  409728:	mov	w0, #0x2c                  	// #44
  40972c:	ldrb	w1, [x20, #37]
  409730:	cbz	w1, 409738 <ferror@plt+0x6168>
  409734:	strb	wzr, [x20, #37]
  409738:	ldr	x1, [x20, #16]
  40973c:	subs	w0, w0, #0x1
  409740:	ldr	x2, [x20, #40]
  409744:	add	x20, x20, #0x30
  409748:	str	x2, [x1]
  40974c:	b.ne	40972c <ferror@plt+0x615c>  // b.any
  409750:	str	wzr, [x19, #760]
  409754:	bl	4043f8 <ferror@plt+0xe28>
  409758:	ldr	x0, [x19, #16]
  40975c:	stp	xzr, xzr, [x19, #272]
  409760:	str	wzr, [x19, #620]
  409764:	str	wzr, [x19, #640]
  409768:	str	wzr, [x19, #644]
  40976c:	str	xzr, [x19, #768]
  409770:	str	wzr, [x19, #776]
  409774:	str	xzr, [x19, #784]
  409778:	str	wzr, [x19, #792]
  40977c:	bl	4032a0 <free@plt>
  409780:	ldr	x0, [x19, #256]
  409784:	add	x1, x19, #0x320
  409788:	str	xzr, [x19, #16]
  40978c:	str	wzr, [x19, #24]
  409790:	stp	xzr, xzr, [x1]
  409794:	stp	xzr, xzr, [x1, #16]
  409798:	str	wzr, [x19, #96]
  40979c:	str	wzr, [x19, #248]
  4097a0:	str	wzr, [x19, #796]
  4097a4:	str	xzr, [x19, #832]
  4097a8:	str	xzr, [x19, #840]
  4097ac:	str	xzr, [x19, #848]
  4097b0:	bl	4032a0 <free@plt>
  4097b4:	ldr	x0, [x19, #240]
  4097b8:	str	wzr, [x19, #232]
  4097bc:	str	wzr, [x19, #252]
  4097c0:	str	xzr, [x19, #256]
  4097c4:	str	wzr, [x19, #616]
  4097c8:	strb	wzr, [x19, #624]
  4097cc:	bl	4032a0 <free@plt>
  4097d0:	add	x2, x19, #0x368
  4097d4:	add	x3, x19, #0x378
  4097d8:	ldp	x21, x22, [sp, #32]
  4097dc:	add	x0, x19, #0x288
  4097e0:	ldr	x23, [sp, #48]
  4097e4:	stp	wzr, wzr, [x2, #-8]
  4097e8:	stp	wzr, wzr, [x3, #-8]
  4097ec:	stp	wzr, wzr, [x2]
  4097f0:	stp	wzr, wzr, [x3]
  4097f4:	str	wzr, [x19, #40]
  4097f8:	str	xzr, [x19, #48]
  4097fc:	str	xzr, [x19, #104]
  409800:	str	xzr, [x19, #224]
  409804:	str	xzr, [x19, #240]
  409808:	stp	xzr, xzr, [x19, #424]
  40980c:	str	wzr, [x19, #440]
  409810:	str	wzr, [x19, #444]
  409814:	str	xzr, [x19, #448]
  409818:	str	wzr, [x19, #456]
  40981c:	str	xzr, [x19, #632]
  409820:	str	xzr, [x19, #856]
  409824:	str	xzr, [x19, #896]
  409828:	ldp	x19, x20, [sp, #16]
  40982c:	ldp	x29, x30, [sp], #64
  409830:	b	409534 <ferror@plt+0x5f64>
  409834:	stp	x29, x30, [sp, #-32]!
  409838:	adrp	x4, 42d000 <ferror@plt+0x29a30>
  40983c:	adrp	x3, 42d000 <ferror@plt+0x29a30>
  409840:	mov	x29, sp
  409844:	add	x4, x4, #0x3e4
  409848:	add	x3, x3, #0x3bc
  40984c:	stp	x19, x20, [sp, #16]
  409850:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409854:	add	x19, x19, #0x518
  409858:	mov	x2, #0x0                   	// #0
  40985c:	add	x20, x19, #0x138
  409860:	mov	x1, #0x0                   	// #0
  409864:	mov	x0, x20
  409868:	bl	45c200 <_obstack_begin@@Base>
  40986c:	bl	4136d0 <ferror@plt+0x10100>
  409870:	str	wzr, [x19, #24]
  409874:	mov	x1, #0x0                   	// #0
  409878:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40987c:	add	x0, x0, #0x1d8
  409880:	bl	45c37c <_obstack_free@@Base>
  409884:	mov	x0, x20
  409888:	mov	x1, #0x0                   	// #0
  40988c:	bl	45c37c <_obstack_free@@Base>
  409890:	str	wzr, [x19, #24]
  409894:	ldp	x19, x20, [sp, #16]
  409898:	ldp	x29, x30, [sp], #32
  40989c:	ret
  4098a0:	stp	x29, x30, [sp, #-32]!
  4098a4:	mov	x29, sp
  4098a8:	bl	404640 <ferror@plt+0x1070>
  4098ac:	str	x0, [sp, #24]
  4098b0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4098b4:	add	x0, x0, #0x518
  4098b8:	add	x1, sp, #0x18
  4098bc:	add	x0, x0, #0x2d8
  4098c0:	bl	410060 <ferror@plt+0xca90>
  4098c4:	ldp	x29, x30, [sp], #32
  4098c8:	ret
  4098cc:	stp	x29, x30, [sp, #-32]!
  4098d0:	mov	x29, sp
  4098d4:	bl	404640 <ferror@plt+0x1070>
  4098d8:	str	x0, [sp, #24]
  4098dc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4098e0:	add	x0, x0, #0x518
  4098e4:	add	x1, sp, #0x18
  4098e8:	add	x0, x0, #0x2e8
  4098ec:	bl	410060 <ferror@plt+0xca90>
  4098f0:	ldp	x29, x30, [sp], #32
  4098f4:	ret
  4098f8:	stp	x29, x30, [sp, #-32]!
  4098fc:	mov	x29, sp
  409900:	bl	404640 <ferror@plt+0x1070>
  409904:	str	x0, [sp, #24]
  409908:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40990c:	add	x0, x0, #0x518
  409910:	add	x1, sp, #0x18
  409914:	add	x0, x0, #0x2e0
  409918:	bl	410060 <ferror@plt+0xca90>
  40991c:	ldp	x29, x30, [sp], #32
  409920:	ret
  409924:	stp	x29, x30, [sp, #-144]!
  409928:	mov	x6, x1
  40992c:	mov	x29, sp
  409930:	stp	x19, x20, [sp, #16]
  409934:	ldr	x19, [x2, #16]
  409938:	stp	x21, x22, [sp, #32]
  40993c:	mov	x21, x2
  409940:	stp	x23, x24, [sp, #48]
  409944:	stp	x25, x26, [sp, #64]
  409948:	stp	x27, x28, [sp, #80]
  40994c:	str	x19, [sp, #112]
  409950:	ldr	x3, [x2]
  409954:	ldr	x1, [x2, #72]
  409958:	adrp	x2, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40995c:	add	x2, x2, #0x230
  409960:	cmp	x2, x0
  409964:	b.eq	409980 <ferror@plt+0x63b0>  // b.none
  409968:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40996c:	add	x2, x2, #0xb2d
  409970:	mov	w1, #0xf3b                 	// #3899
  409974:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  409978:	add	x0, x0, #0x6e9
  40997c:	bl	403600 <ferror@plt+0x30>
  409980:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  409984:	add	x0, x0, #0x140
  409988:	cmp	x6, x0
  40998c:	b.eq	4099a0 <ferror@plt+0x63d0>  // b.none
  409990:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409994:	mov	w1, #0xf3c                 	// #3900
  409998:	add	x2, x2, #0xb2d
  40999c:	b	409974 <ferror@plt+0x63a4>
  4099a0:	cbz	w4, 4099b4 <ferror@plt+0x63e4>
  4099a4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4099a8:	mov	w1, #0xf3d                 	// #3901
  4099ac:	add	x2, x2, #0xb2d
  4099b0:	b	409974 <ferror@plt+0x63a4>
  4099b4:	cbz	w5, 4099c8 <ferror@plt+0x63f8>
  4099b8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4099bc:	mov	w1, #0xf3e                 	// #3902
  4099c0:	add	x2, x2, #0xb2d
  4099c4:	b	409974 <ferror@plt+0x63a4>
  4099c8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4099cc:	ldr	x0, [x0, #784]
  4099d0:	cmp	x0, x7
  4099d4:	b.eq	4099e8 <ferror@plt+0x6418>  // b.none
  4099d8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4099dc:	mov	w1, #0xf3f                 	// #3903
  4099e0:	add	x2, x2, #0xb2d
  4099e4:	b	409974 <ferror@plt+0x63a4>
  4099e8:	cmp	x3, #0x1f5
  4099ec:	b.hi	409bb4 <ferror@plt+0x65e4>  // b.pmore
  4099f0:	cmp	x3, #0x1f1
  4099f4:	b.hi	409a5c <ferror@plt+0x648c>  // b.pmore
  4099f8:	cmp	x3, #0x78
  4099fc:	b.hi	409b38 <ferror@plt+0x6568>  // b.pmore
  409a00:	cmp	x3, #0x6c
  409a04:	b.hi	409a88 <ferror@plt+0x64b8>  // b.pmore
  409a08:	cmp	x3, #0x1d
  409a0c:	b.eq	409d84 <ferror@plt+0x67b4>  // b.none
  409a10:	b.hi	409ab4 <ferror@plt+0x64e4>  // b.pmore
  409a14:	cmp	x3, #0x9
  409a18:	b.eq	409d34 <ferror@plt+0x6764>  // b.none
  409a1c:	cmp	x3, #0x1c
  409a20:	b.eq	409d44 <ferror@plt+0x6774>  // b.none
  409a24:	cbz	x3, 40a11c <ferror@plt+0x6b4c>
  409a28:	mov	w3, #0x0                   	// #0
  409a2c:	b	40a034 <ferror@plt+0x6a64>
  409a30:	sub	x3, x3, #0x525
  409a34:	cmp	x3, #0x2b
  409a38:	b.hi	409a28 <ferror@plt+0x6458>  // b.pmore
  409a3c:	cmp	w3, #0x2b
  409a40:	b.hi	409a28 <ferror@plt+0x6458>  // b.pmore
  409a44:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  409a48:	add	x0, x0, #0x698
  409a4c:	ldrh	w0, [x0, w3, uxtw #1]
  409a50:	adr	x1, 409a5c <ferror@plt+0x648c>
  409a54:	add	x0, x1, w0, sxth #2
  409a58:	br	x0
  409a5c:	sub	x3, x3, #0x1f3
  409a60:	cmp	x3, #0x1
  409a64:	b.hi	409d18 <ferror@plt+0x6748>  // b.pmore
  409a68:	cmp	w3, #0x1
  409a6c:	b.hi	409d18 <ferror@plt+0x6748>  // b.pmore
  409a70:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  409a74:	add	x0, x0, #0x6f0
  409a78:	ldrh	w0, [x0, w3, uxtw #1]
  409a7c:	adr	x1, 409a88 <ferror@plt+0x64b8>
  409a80:	add	x0, x1, w0, sxth #2
  409a84:	br	x0
  409a88:	sub	x3, x3, #0x6d
  409a8c:	cmp	x3, #0xb
  409a90:	b.hi	409a28 <ferror@plt+0x6458>  // b.pmore
  409a94:	cmp	w3, #0xb
  409a98:	b.hi	409a28 <ferror@plt+0x6458>  // b.pmore
  409a9c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  409aa0:	add	x0, x0, #0x6f4
  409aa4:	ldrh	w0, [x0, w3, uxtw #1]
  409aa8:	adr	x1, 409ab4 <ferror@plt+0x64e4>
  409aac:	add	x0, x1, w0, sxth #2
  409ab0:	br	x0
  409ab4:	cmp	x3, #0x5f
  409ab8:	b.eq	409d94 <ferror@plt+0x67c4>  // b.none
  409abc:	b.hi	409ae8 <ferror@plt+0x6518>  // b.pmore
  409ac0:	cmp	x3, #0x38
  409ac4:	b.eq	409c6c <ferror@plt+0x669c>  // b.none
  409ac8:	cmp	x3, #0x5e
  409acc:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409ad0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409ad4:	add	x0, x0, #0x518
  409ad8:	mov	w1, #0x1                   	// #1
  409adc:	str	x19, [x0, #288]
  409ae0:	str	w1, [x0, #688]
  409ae4:	b	409c6c <ferror@plt+0x669c>
  409ae8:	cmp	x3, #0x69
  409aec:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409af0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409af4:	add	x0, x0, #0x518
  409af8:	mov	w1, #0x1                   	// #1
  409afc:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409b00:	add	x19, x19, #0xb66
  409b04:	str	w1, [x0, #612]
  409b08:	ldr	w0, [x0, #664]
  409b0c:	cbz	w0, 409b1c <ferror@plt+0x654c>
  409b10:	mov	x0, x19
  409b14:	mov	w1, #0x9                   	// #9
  409b18:	bl	4098cc <ferror@plt+0x62fc>
  409b1c:	mov	w1, #0x9                   	// #9
  409b20:	mov	x0, x19
  409b24:	bl	4098f8 <ferror@plt+0x6328>
  409b28:	mov	w1, #0x9                   	// #9
  409b2c:	mov	x0, x19
  409b30:	bl	4098a0 <ferror@plt+0x62d0>
  409b34:	b	409a28 <ferror@plt+0x6458>
  409b38:	cmp	x3, #0x1de
  409b3c:	b.eq	409fb4 <ferror@plt+0x69e4>  // b.none
  409b40:	b.hi	409b90 <ferror@plt+0x65c0>  // b.pmore
  409b44:	cmp	x3, #0x126
  409b48:	mov	x19, #0x0                   	// #0
  409b4c:	b.eq	409f60 <ferror@plt+0x6990>  // b.none
  409b50:	cmp	x3, #0x15b
  409b54:	b.eq	409f24 <ferror@plt+0x6954>  // b.none
  409b58:	cmp	x3, #0x96
  409b5c:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409b60:	ldr	x0, [sp, #112]
  409b64:	ldrb	w2, [x0, x19]
  409b68:	add	x0, x0, w4, sxtw
  409b6c:	cbz	w2, 409f18 <ferror@plt+0x6948>
  409b70:	add	w20, w19, #0x1
  409b74:	cmp	w2, #0x2c
  409b78:	b.ne	409b88 <ferror@plt+0x65b8>  // b.any
  409b7c:	sub	w1, w19, w4
  409b80:	bl	4098f8 <ferror@plt+0x6328>
  409b84:	mov	w4, w20
  409b88:	add	x19, x19, #0x1
  409b8c:	b	409b60 <ferror@plt+0x6590>
  409b90:	cmp	x3, #0x1e0
  409b94:	b.eq	409fa0 <ferror@plt+0x69d0>  // b.none
  409b98:	cmp	x3, #0x1e1
  409b9c:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409ba0:	mov	x0, x19
  409ba4:	bl	402d50 <strlen@plt>
  409ba8:	mov	w1, w0
  409bac:	mov	x0, x19
  409bb0:	b	409f58 <ferror@plt+0x6988>
  409bb4:	cmp	x3, #0x4f8
  409bb8:	b.eq	409fc8 <ferror@plt+0x69f8>  // b.none
  409bbc:	b.hi	409c54 <ferror@plt+0x6684>  // b.pmore
  409bc0:	cmp	x3, #0x28c
  409bc4:	b.eq	409f10 <ferror@plt+0x6940>  // b.none
  409bc8:	b.hi	409c0c <ferror@plt+0x663c>  // b.pmore
  409bcc:	cmp	x3, #0x258
  409bd0:	b.eq	409e58 <ferror@plt+0x6888>  // b.none
  409bd4:	b.hi	409bf8 <ferror@plt+0x6628>  // b.pmore
  409bd8:	cmp	x3, #0x256
  409bdc:	b.eq	409df4 <ferror@plt+0x6824>  // b.none
  409be0:	cmp	x3, #0x257
  409be4:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409be8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409bec:	mov	w1, #0x1                   	// #1
  409bf0:	str	w1, [x0, #2100]
  409bf4:	b	409a28 <ferror@plt+0x6458>
  409bf8:	cmp	x3, #0x28b
  409bfc:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409c00:	mov	x0, x7
  409c04:	bl	420e50 <ferror@plt+0x1d880>
  409c08:	b	409a28 <ferror@plt+0x6458>
  409c0c:	cmp	x3, #0x4a1
  409c10:	b.eq	409de4 <ferror@plt+0x6814>  // b.none
  409c14:	b.hi	409c3c <ferror@plt+0x666c>  // b.pmore
  409c18:	cmp	x3, #0x38f
  409c1c:	b.eq	40a270 <ferror@plt+0x6ca0>  // b.none
  409c20:	cmp	x3, #0x4a0
  409c24:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409c28:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409c2c:	add	x1, x1, #0xb8e
  409c30:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409c34:	str	x1, [x0, #1904]
  409c38:	b	409a28 <ferror@plt+0x6458>
  409c3c:	cmp	x3, #0x4be
  409c40:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409c44:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  409c48:	add	x0, x0, #0x122
  409c4c:	str	x0, [x2, #3488]
  409c50:	b	409a28 <ferror@plt+0x6458>
  409c54:	cmp	x3, #0x550
  409c58:	b.hi	409c8c <ferror@plt+0x66bc>  // b.pmore
  409c5c:	cmp	x3, #0x524
  409c60:	b.hi	409a30 <ferror@plt+0x6460>  // b.pmore
  409c64:	cmp	x3, #0x51a
  409c68:	b.ne	409a28 <ferror@plt+0x6458>  // b.any
  409c6c:	mov	w0, #0x1                   	// #1
  409c70:	ldp	x19, x20, [sp, #16]
  409c74:	ldp	x21, x22, [sp, #32]
  409c78:	ldp	x23, x24, [sp, #48]
  409c7c:	ldp	x25, x26, [sp, #64]
  409c80:	ldp	x27, x28, [sp, #80]
  409c84:	ldp	x29, x30, [sp], #144
  409c88:	ret
  409c8c:	sub	x3, x3, #0x588
  409c90:	cmp	x3, #0xb
  409c94:	b.hi	409a28 <ferror@plt+0x6458>  // b.pmore
  409c98:	cmp	w3, #0xb
  409c9c:	b.hi	409a28 <ferror@plt+0x6458>  // b.pmore
  409ca0:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  409ca4:	add	x0, x0, #0x70c
  409ca8:	ldrh	w0, [x0, w3, uxtw #1]
  409cac:	adr	x1, 409cb8 <ferror@plt+0x66e8>
  409cb0:	add	x0, x1, w0, sxth #2
  409cb4:	br	x0
  409cb8:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409cbc:	add	x19, x19, #0x518
  409cc0:	ldr	x0, [x19, #112]
  409cc4:	cbnz	x0, 409ccc <ferror@plt+0x66fc>
  409cc8:	bl	407928 <ferror@plt+0x4358>
  409ccc:	ldr	x19, [x19, #112]
  409cd0:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409cd4:	add	x20, x20, #0xb42
  409cd8:	cbz	x19, 409cf8 <ferror@plt+0x6728>
  409cdc:	ldr	x0, [x19, #16]
  409ce0:	ldr	x1, [x19]
  409ce4:	ldr	x2, [x0]
  409ce8:	mov	x0, x20
  409cec:	bl	4034d0 <printf@plt>
  409cf0:	ldr	x19, [x19, #24]
  409cf4:	b	409cd8 <ferror@plt+0x6708>
  409cf8:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  409cfc:	ldr	x1, [x0, #3328]
  409d00:	cbz	x1, 409d10 <ferror@plt+0x6740>
  409d04:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409d08:	add	x0, x0, #0xb4c
  409d0c:	bl	4034d0 <printf@plt>
  409d10:	mov	w0, #0x0                   	// #0
  409d14:	bl	402d80 <exit@plt>
  409d18:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409d1c:	add	x0, x0, #0xb60
  409d20:	bl	4031b0 <puts@plt>
  409d24:	b	409d10 <ferror@plt+0x6740>
  409d28:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  409d2c:	ldr	x0, [x0, #1184]
  409d30:	b	409d20 <ferror@plt+0x6750>
  409d34:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409d38:	str	x19, [x0, #2208]
  409d3c:	mov	w3, #0x1                   	// #1
  409d40:	b	40a034 <ferror@plt+0x6a64>
  409d44:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409d48:	add	x0, x0, #0x518
  409d4c:	mov	w1, #0x1                   	// #1
  409d50:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409d54:	add	x19, x19, #0xb70
  409d58:	str	w1, [x0, #608]
  409d5c:	ldr	w0, [x0, #664]
  409d60:	cbz	w0, 409d70 <ferror@plt+0x67a0>
  409d64:	mov	x0, x19
  409d68:	mov	w1, #0x6                   	// #6
  409d6c:	bl	4098cc <ferror@plt+0x62fc>
  409d70:	mov	w1, #0x6                   	// #6
  409d74:	mov	x0, x19
  409d78:	bl	4098f8 <ferror@plt+0x6328>
  409d7c:	mov	w1, #0x6                   	// #6
  409d80:	b	409b2c <ferror@plt+0x655c>
  409d84:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409d88:	mov	w1, #0x2                   	// #2
  409d8c:	str	w1, [x0, #1976]
  409d90:	b	409a28 <ferror@plt+0x6458>
  409d94:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409d98:	add	x0, x0, #0x518
  409d9c:	mov	w1, #0x1                   	// #1
  409da0:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409da4:	add	x19, x19, #0xb77
  409da8:	str	w1, [x0, #672]
  409dac:	ldr	w0, [x0, #664]
  409db0:	cbz	w0, 409dc0 <ferror@plt+0x67f0>
  409db4:	mov	x0, x19
  409db8:	mov	w1, #0xd                   	// #13
  409dbc:	bl	4098cc <ferror@plt+0x62fc>
  409dc0:	mov	w1, #0xd                   	// #13
  409dc4:	mov	x0, x19
  409dc8:	bl	4098f8 <ferror@plt+0x6328>
  409dcc:	mov	w1, #0xd                   	// #13
  409dd0:	b	409b2c <ferror@plt+0x655c>
  409dd4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409dd8:	add	x0, x0, #0xb85
  409ddc:	str	x0, [x2, #3760]
  409de0:	b	409c6c <ferror@plt+0x669c>
  409de4:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409de8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409dec:	add	x1, x1, #0xb93
  409df0:	b	409c34 <ferror@plt+0x6664>
  409df4:	cbz	w1, 409e10 <ferror@plt+0x6840>
  409df8:	cmp	w1, #0x1
  409dfc:	b.eq	409e40 <ferror@plt+0x6870>  // b.none
  409e00:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409e04:	mov	w1, #0xfb3                 	// #4019
  409e08:	add	x2, x2, #0xb2d
  409e0c:	b	409974 <ferror@plt+0x63a4>
  409e10:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  409e14:	add	x0, x0, #0x122
  409e18:	str	x0, [sp, #112]
  409e1c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409e20:	add	x0, x0, #0xb03
  409e24:	ldr	x3, [x21, #64]
  409e28:	cmp	x3, #0x1
  409e2c:	b.eq	409e60 <ferror@plt+0x6890>  // b.none
  409e30:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409e34:	mov	w1, #0xfba                 	// #4026
  409e38:	add	x2, x2, #0xb2d
  409e3c:	b	409974 <ferror@plt+0x63a4>
  409e40:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409e44:	add	x0, x0, #0xb24
  409e48:	str	x0, [sp, #112]
  409e4c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409e50:	add	x0, x0, #0xb14
  409e54:	b	409e24 <ferror@plt+0x6854>
  409e58:	ldr	x0, [x21, #32]
  409e5c:	b	409e24 <ferror@plt+0x6854>
  409e60:	ldr	x2, [sp, #112]
  409e64:	cbnz	x2, 409e78 <ferror@plt+0x68a8>
  409e68:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409e6c:	mov	w1, #0xfbb                 	// #4027
  409e70:	add	x2, x2, #0xb2d
  409e74:	b	409974 <ferror@plt+0x63a4>
  409e78:	ldrb	w4, [x2]
  409e7c:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  409e80:	add	x1, x1, #0x518
  409e84:	cbnz	w4, 409f00 <ferror@plt+0x6930>
  409e88:	mov	w2, #0xffffffff            	// #-1
  409e8c:	str	w2, [x1, #96]
  409e90:	mov	x2, #0x0                   	// #0
  409e94:	mov	w3, #0x0                   	// #0
  409e98:	mov	w4, #0x1                   	// #1
  409e9c:	str	x2, [x1, #800]
  409ea0:	mov	x2, #0x0                   	// #0
  409ea4:	mov	x1, #0x0                   	// #0
  409ea8:	bl	4068c0 <ferror@plt+0x32f0>
  409eac:	bl	4034e0 <__errno_location@plt>
  409eb0:	mov	x19, x0
  409eb4:	mov	x0, #0x0                   	// #0
  409eb8:	str	wzr, [x19]
  409ebc:	bl	402f30 <time@plt>
  409ec0:	mov	x3, x0
  409ec4:	tbnz	x0, #63, 409f08 <ferror@plt+0x6938>
  409ec8:	ldr	w0, [x19]
  409ecc:	cmp	w0, #0x0
  409ed0:	csel	x3, x3, xzr, eq  // eq = none
  409ed4:	add	x0, sp, #0x78
  409ed8:	mov	x1, #0x15                  	// #21
  409edc:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409ee0:	add	x2, x2, #0xb99
  409ee4:	bl	402ea0 <snprintf@plt>
  409ee8:	add	x1, sp, #0x78
  409eec:	mov	w2, #0x0                   	// #0
  409ef0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409ef4:	add	x0, x0, #0xb9e
  409ef8:	bl	402dd0 <setenv@plt>
  409efc:	b	409c6c <ferror@plt+0x669c>
  409f00:	str	w3, [x1, #96]
  409f04:	b	409e94 <ferror@plt+0x68c4>
  409f08:	mov	x3, #0x0                   	// #0
  409f0c:	b	409ed4 <ferror@plt+0x6904>
  409f10:	bl	42621c <ferror@plt+0x22c4c>
  409f14:	b	409a28 <ferror@plt+0x6458>
  409f18:	sub	w1, w19, w4
  409f1c:	bl	4098f8 <ferror@plt+0x6328>
  409f20:	b	409c6c <ferror@plt+0x669c>
  409f24:	ldr	x0, [sp, #112]
  409f28:	ldrb	w2, [x0, x19]
  409f2c:	add	x0, x0, w4, sxtw
  409f30:	cbz	w2, 409f54 <ferror@plt+0x6984>
  409f34:	add	w20, w19, #0x1
  409f38:	cmp	w2, #0x2c
  409f3c:	b.ne	409f4c <ferror@plt+0x697c>  // b.any
  409f40:	sub	w1, w19, w4
  409f44:	bl	4098cc <ferror@plt+0x62fc>
  409f48:	mov	w4, w20
  409f4c:	add	x19, x19, #0x1
  409f50:	b	409f24 <ferror@plt+0x6954>
  409f54:	sub	w1, w19, w4
  409f58:	bl	4098cc <ferror@plt+0x62fc>
  409f5c:	b	409c6c <ferror@plt+0x669c>
  409f60:	adrp	x20, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  409f64:	add	x20, x20, #0xa15
  409f68:	ldr	x0, [sp, #112]
  409f6c:	ldrb	w2, [x0, x19]
  409f70:	add	x0, x0, w4, sxtw
  409f74:	cbz	w2, 409fdc <ferror@plt+0x6a0c>
  409f78:	add	w21, w19, #0x1
  409f7c:	cmp	w2, #0x2c
  409f80:	b.ne	409f98 <ferror@plt+0x69c8>  // b.any
  409f84:	sub	w1, w19, w4
  409f88:	bl	404640 <ferror@plt+0x1070>
  409f8c:	mov	x1, x20
  409f90:	bl	4069fc <ferror@plt+0x342c>
  409f94:	mov	w4, w21
  409f98:	add	x19, x19, #0x1
  409f9c:	b	409f68 <ferror@plt+0x6998>
  409fa0:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  409fa4:	mov	x0, x19
  409fa8:	add	x1, x1, #0xa15
  409fac:	bl	4069fc <ferror@plt+0x342c>
  409fb0:	b	409c6c <ferror@plt+0x669c>
  409fb4:	mov	x0, x19
  409fb8:	bl	402d50 <strlen@plt>
  409fbc:	mov	w1, w0
  409fc0:	mov	x0, x19
  409fc4:	b	409f1c <ferror@plt+0x694c>
  409fc8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  409fcc:	mov	x1, x19
  409fd0:	add	x0, x0, #0x588
  409fd4:	mov	x2, #0x0                   	// #0
  409fd8:	bl	45a668 <ferror@plt+0x57098>
  409fdc:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  409fe0:	add	x1, x1, #0xa15
  409fe4:	b	409fac <ferror@plt+0x69dc>
  409fe8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  409fec:	mov	x1, x19
  409ff0:	add	x0, x0, #0xbb0
  409ff4:	mov	x2, #0x0                   	// #0
  409ff8:	bl	45a668 <ferror@plt+0x57098>
  409ffc:	mov	w4, #0x1                   	// #1
  40a000:	mov	w3, #0x0                   	// #0
  40a004:	mov	x2, #0x0                   	// #0
  40a008:	mov	x1, #0x0                   	// #0
  40a00c:	bl	4068c0 <ferror@plt+0x32f0>
  40a010:	b	409c6c <ferror@plt+0x669c>
  40a014:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a018:	mov	x1, x19
  40a01c:	add	x0, x0, #0xbb3
  40a020:	mov	x2, #0x0                   	// #0
  40a024:	b	409ff8 <ferror@plt+0x6a28>
  40a028:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a02c:	mov	w3, #0x1                   	// #1
  40a030:	str	w3, [x0, #1996]
  40a034:	ldr	x1, [x21, #64]
  40a038:	add	x2, x21, #0x28
  40a03c:	mov	w4, #0x1                   	// #1
  40a040:	sub	x1, x1, #0x1
  40a044:	ldr	x0, [x21, #32]
  40a048:	b	40a00c <ferror@plt+0x6a3c>
  40a04c:	mov	x0, x19
  40a050:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a054:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a058:	add	x1, x1, #0xbb6
  40a05c:	add	x20, x20, #0x518
  40a060:	bl	403220 <strcmp@plt>
  40a064:	cbnz	w0, 40a074 <ferror@plt+0x6aa4>
  40a068:	mov	w0, #0x1                   	// #1
  40a06c:	str	w0, [x20, #692]
  40a070:	b	409a28 <ferror@plt+0x6458>
  40a074:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a078:	mov	x0, x19
  40a07c:	add	x1, x1, #0xbba
  40a080:	bl	403220 <strcmp@plt>
  40a084:	cbz	w0, 40a09c <ferror@plt+0x6acc>
  40a088:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40a08c:	mov	x0, x19
  40a090:	add	x1, x1, #0xfcb
  40a094:	bl	403220 <strcmp@plt>
  40a098:	cbnz	w0, 40a0a4 <ferror@plt+0x6ad4>
  40a09c:	mov	w0, #0x2                   	// #2
  40a0a0:	b	40a06c <ferror@plt+0x6a9c>
  40a0a4:	ldr	x2, [x21, #24]
  40a0a8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a0ac:	add	x1, x1, #0xbbe
  40a0b0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40a0b4:	ldr	w0, [x0, #584]
  40a0b8:	bl	422d58 <ferror@plt+0x1f788>
  40a0bc:	mov	x0, #0x10                  	// #16
  40a0c0:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40a0c4:	ldr	x1, [sp, #112]
  40a0c8:	stp	xzr, x1, [x0]
  40a0cc:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a0d0:	add	x1, x1, #0x518
  40a0d4:	ldr	x2, [x1, #720]
  40a0d8:	cbz	x2, 40a0e8 <ferror@plt+0x6b18>
  40a0dc:	str	x0, [x2]
  40a0e0:	str	x0, [x1, #720]
  40a0e4:	b	409d3c <ferror@plt+0x676c>
  40a0e8:	str	x0, [x1, #712]
  40a0ec:	b	40a0e0 <ferror@plt+0x6b10>
  40a0f0:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a0f4:	add	x19, x19, #0x518
  40a0f8:	ldr	x0, [x19, #680]
  40a0fc:	cbz	x0, 40a104 <ferror@plt+0x6b34>
  40a100:	bl	402ee0 <fclose@plt>
  40a104:	ldr	x0, [sp, #112]
  40a108:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40a10c:	add	x1, x1, #0x419
  40a110:	bl	402f20 <fopen@plt>
  40a114:	str	x0, [x19, #680]
  40a118:	b	409c6c <ferror@plt+0x669c>
  40a11c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a120:	add	x0, x0, #0x518
  40a124:	ldr	w1, [x0, #668]
  40a128:	add	w1, w1, #0x1
  40a12c:	str	w1, [x0, #668]
  40a130:	mov	w0, #0x1                   	// #1
  40a134:	str	w0, [x2, #3816]
  40a138:	b	409c6c <ferror@plt+0x669c>
  40a13c:	mov	x0, x19
  40a140:	bl	402d50 <strlen@plt>
  40a144:	mov	x20, x0
  40a148:	add	x0, x19, x0
  40a14c:	ldurb	w0, [x0, #-1]
  40a150:	cmp	w0, #0x2f
  40a154:	b.eq	40a190 <ferror@plt+0x6bc0>  // b.none
  40a158:	mov	x0, x19
  40a15c:	mov	w1, #0x0                   	// #0
  40a160:	bl	40597c <ferror@plt+0x23ac>
  40a164:	cbz	w0, 40a190 <ferror@plt+0x6bc0>
  40a168:	add	x0, x20, #0x2
  40a16c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40a170:	ldr	x1, [sp, #112]
  40a174:	mov	x19, x0
  40a178:	bl	403360 <strcpy@plt>
  40a17c:	str	x19, [sp, #112]
  40a180:	mov	w0, #0x2f                  	// #47
  40a184:	strb	w0, [x19, x20]
  40a188:	add	x20, x19, x20
  40a18c:	strb	wzr, [x20, #1]
  40a190:	ldr	x1, [sp, #112]
  40a194:	adrp	x19, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40a198:	add	x19, x19, #0x4a0
  40a19c:	mov	w5, #0x0                   	// #0
  40a1a0:	add	x0, x19, #0x890
  40a1a4:	mov	w4, #0x0                   	// #0
  40a1a8:	mov	w3, #0x0                   	// #0
  40a1ac:	mov	x2, #0x0                   	// #0
  40a1b0:	bl	405c10 <ferror@plt+0x2640>
  40a1b4:	ldr	x1, [sp, #112]
  40a1b8:	add	x0, x19, #0x848
  40a1bc:	mov	w5, #0x0                   	// #0
  40a1c0:	mov	w4, #0x0                   	// #0
  40a1c4:	mov	w3, #0x0                   	// #0
  40a1c8:	mov	x2, #0x0                   	// #0
  40a1cc:	bl	405c10 <ferror@plt+0x2640>
  40a1d0:	ldr	x1, [sp, #112]
  40a1d4:	add	x0, x19, #0x868
  40a1d8:	mov	w5, #0x0                   	// #0
  40a1dc:	mov	w4, #0x0                   	// #0
  40a1e0:	mov	w3, #0x0                   	// #0
  40a1e4:	mov	x2, #0x0                   	// #0
  40a1e8:	bl	405c10 <ferror@plt+0x2640>
  40a1ec:	b	409d3c <ferror@plt+0x676c>
  40a1f0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a1f4:	mov	w1, #0x1                   	// #1
  40a1f8:	str	w1, [x0, #1524]
  40a1fc:	b	409a28 <ferror@plt+0x6458>
  40a200:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a204:	add	x20, x20, #0x518
  40a208:	adrp	x1, 492000 <_obstack_memory_used@@Base+0x35c10>
  40a20c:	mov	x0, x19
  40a210:	add	x1, x1, #0xb12
  40a214:	str	x19, [x20, #856]
  40a218:	bl	403220 <strcmp@plt>
  40a21c:	cbnz	w0, 40a228 <ferror@plt+0x6c58>
  40a220:	str	xzr, [x20, #856]
  40a224:	b	409c6c <ferror@plt+0x669c>
  40a228:	ldr	w0, [x20, #232]
  40a22c:	str	w0, [x20, #864]
  40a230:	b	409c6c <ferror@plt+0x669c>
  40a234:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a238:	add	x20, x20, #0x518
  40a23c:	mov	w21, #0x1                   	// #1
  40a240:	mov	x0, x19
  40a244:	str	w21, [x20, #620]
  40a248:	str	x19, [x20, #912]
  40a24c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40a250:	mov	w4, w21
  40a254:	add	x2, sp, #0x70
  40a258:	mov	w3, #0x0                   	// #0
  40a25c:	mov	x1, #0x1                   	// #1
  40a260:	str	x0, [x20, #696]
  40a264:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a268:	add	x0, x0, #0xbe7
  40a26c:	b	40a00c <ferror@plt+0x6a3c>
  40a270:	ldrb	w0, [x19]
  40a274:	cmp	w0, #0x2d
  40a278:	b.eq	409a28 <ferror@plt+0x6458>  // b.none
  40a27c:	mov	x0, x19
  40a280:	mov	w1, #0x3d                  	// #61
  40a284:	bl	4032f0 <strchr@plt>
  40a288:	mov	x22, x0
  40a28c:	cbnz	x0, 40a29c <ferror@plt+0x6ccc>
  40a290:	mov	x0, x19
  40a294:	bl	402d50 <strlen@plt>
  40a298:	add	x22, x19, x0
  40a29c:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a2a0:	adrp	x24, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a2a4:	add	x25, x25, #0xbea
  40a2a8:	add	x24, x24, #0x518
  40a2ac:	cmp	x19, x22
  40a2b0:	b.cs	409a28 <ferror@plt+0x6458>  // b.hs, b.nlast
  40a2b4:	mov	w1, #0x2c                  	// #44
  40a2b8:	mov	x0, x19
  40a2bc:	bl	4032f0 <strchr@plt>
  40a2c0:	cmp	x0, #0x0
  40a2c4:	csel	x0, x0, x22, ne  // ne = any
  40a2c8:	cmp	x22, x0
  40a2cc:	csel	x20, x22, x0, ls  // ls = plast
  40a2d0:	sub	x27, x20, x19
  40a2d4:	add	x26, x27, #0x1
  40a2d8:	mov	x0, x26
  40a2dc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40a2e0:	mov	x23, x0
  40a2e4:	mov	x2, x27
  40a2e8:	mov	x1, x19
  40a2ec:	bl	402cd0 <memcpy@plt>
  40a2f0:	mov	x1, x25
  40a2f4:	mov	x0, x23
  40a2f8:	strb	wzr, [x23, x27]
  40a2fc:	bl	403220 <strcmp@plt>
  40a300:	cbnz	w0, 40a320 <ferror@plt+0x6d50>
  40a304:	ldr	x0, [x24, #920]
  40a308:	bl	4032a0 <free@plt>
  40a30c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  40a310:	add	x0, x0, #0x122
  40a314:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40a318:	str	x0, [x24, #920]
  40a31c:	b	409a28 <ferror@plt+0x6458>
  40a320:	cbnz	x27, 40a3cc <ferror@plt+0x6dfc>
  40a324:	ldr	x28, [x24, #920]
  40a328:	cbz	x28, 40a3b4 <ferror@plt+0x6de4>
  40a32c:	mov	x27, x28
  40a330:	mov	x0, x27
  40a334:	mov	w1, #0x3a                  	// #58
  40a338:	bl	4032f0 <strchr@plt>
  40a33c:	cbnz	x0, 40a34c <ferror@plt+0x6d7c>
  40a340:	mov	x0, x27
  40a344:	bl	402d50 <strlen@plt>
  40a348:	add	x0, x27, x0
  40a34c:	cmp	x27, x0
  40a350:	b.eq	40a360 <ferror@plt+0x6d90>  // b.none
  40a354:	mov	x27, x0
  40a358:	ldrb	w1, [x27], #1
  40a35c:	cbnz	w1, 40a330 <ferror@plt+0x6d60>
  40a360:	cmp	x0, x27
  40a364:	b.cs	40a3bc <ferror@plt+0x6dec>  // b.hs, b.nlast
  40a368:	mov	x0, x28
  40a36c:	bl	402d50 <strlen@plt>
  40a370:	add	x3, x0, #0x1
  40a374:	mov	x27, x0
  40a378:	add	x1, x20, x3
  40a37c:	mov	x0, x28
  40a380:	sub	x1, x1, x19
  40a384:	str	x3, [sp, #104]
  40a388:	add	x1, x1, #0x1
  40a38c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  40a390:	ldr	x3, [sp, #104]
  40a394:	mov	w1, #0x3a                  	// #58
  40a398:	strb	w1, [x0, x27]
  40a39c:	mov	x2, x26
  40a3a0:	mov	x1, x23
  40a3a4:	str	x0, [x24, #920]
  40a3a8:	add	x0, x0, x3
  40a3ac:	bl	402cd0 <memcpy@plt>
  40a3b0:	b	40a3bc <ferror@plt+0x6dec>
  40a3b4:	str	x23, [x24, #920]
  40a3b8:	mov	x23, #0x0                   	// #0
  40a3bc:	add	x19, x20, #0x1
  40a3c0:	mov	x0, x23
  40a3c4:	bl	4032a0 <free@plt>
  40a3c8:	b	40a2ac <ferror@plt+0x6cdc>
  40a3cc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a3d0:	mov	x2, x23
  40a3d4:	add	x1, x1, #0xbf2
  40a3d8:	b	40a0b0 <ferror@plt+0x6ae0>
  40a3dc:	stp	x29, x30, [sp, #-48]!
  40a3e0:	mov	x29, sp
  40a3e4:	stp	x21, x22, [sp, #32]
  40a3e8:	mov	x21, x0
  40a3ec:	ldrb	w0, [x0, #1]
  40a3f0:	stp	x19, x20, [sp, #16]
  40a3f4:	mov	x20, x1
  40a3f8:	cbz	w0, 40a414 <ferror@plt+0x6e44>
  40a3fc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a400:	mov	x2, x1
  40a404:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a408:	add	x1, x1, #0xc28
  40a40c:	ldr	x0, [x0, #1264]
  40a410:	bl	403590 <fprintf@plt>
  40a414:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40a418:	ldr	w0, [x0, #280]
  40a41c:	cbz	w0, 40a438 <ferror@plt+0x6e68>
  40a420:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a424:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  40a428:	mov	x2, x20
  40a42c:	add	x1, x1, #0x816
  40a430:	ldr	x0, [x0, #1264]
  40a434:	bl	421398 <ferror@plt+0x1ddc8>
  40a438:	ldrb	w0, [x21]
  40a43c:	cbz	w0, 40a4e4 <ferror@plt+0x6f14>
  40a440:	mov	x0, x20
  40a444:	mov	w1, #0x3d                  	// #61
  40a448:	bl	4032f0 <strchr@plt>
  40a44c:	cbnz	x0, 40a468 <ferror@plt+0x6e98>
  40a450:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a454:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40a458:	add	x2, x2, #0xc40
  40a45c:	add	x0, x0, #0x6e9
  40a460:	mov	w1, #0x7d                  	// #125
  40a464:	bl	403600 <ferror@plt+0x30>
  40a468:	sub	x1, x0, x20
  40a46c:	mov	x0, x20
  40a470:	bl	45d858 <_obstack_memory_used@@Base+0x1468>
  40a474:	mov	x22, x0
  40a478:	bl	4034f0 <getenv@plt>
  40a47c:	mov	x19, x0
  40a480:	ldrb	w0, [x21, #1]
  40a484:	cbz	w0, 40a4a0 <ferror@plt+0x6ed0>
  40a488:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a48c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a490:	mov	x2, x19
  40a494:	add	x1, x1, #0xc45
  40a498:	ldr	x0, [x0, #1264]
  40a49c:	bl	403590 <fprintf@plt>
  40a4a0:	cbz	x19, 40a4b0 <ferror@plt+0x6ee0>
  40a4a4:	mov	x0, x19
  40a4a8:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40a4ac:	mov	x19, x0
  40a4b0:	mov	w2, #0x0                   	// #0
  40a4b4:	mov	w1, #0x1                   	// #1
  40a4b8:	add	x0, x21, #0x8
  40a4bc:	bl	410184 <ferror@plt+0xcbb4>
  40a4c0:	ldr	x2, [x21, #8]
  40a4c4:	ldr	w1, [x2, #4]
  40a4c8:	add	w0, w1, #0x1
  40a4cc:	str	w0, [x2, #4]
  40a4d0:	mov	x0, #0x8                   	// #8
  40a4d4:	add	x1, x0, w1, uxtw #4
  40a4d8:	add	x0, x2, x1
  40a4dc:	str	x22, [x2, x1]
  40a4e0:	str	x19, [x0, #8]
  40a4e4:	mov	x0, x20
  40a4e8:	ldp	x19, x20, [sp, #16]
  40a4ec:	ldp	x21, x22, [sp, #32]
  40a4f0:	ldp	x29, x30, [sp], #48
  40a4f4:	b	4030d0 <putenv@plt>
  40a4f8:	stp	x29, x30, [sp, #-208]!
  40a4fc:	mov	x29, sp
  40a500:	stp	x19, x20, [sp, #16]
  40a504:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40a508:	add	x19, x19, #0x518
  40a50c:	str	x1, [x29, #96]
  40a510:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a514:	add	x1, x1, #0xc5b
  40a518:	stp	x21, x22, [sp, #32]
  40a51c:	stp	x23, x24, [sp, #48]
  40a520:	stp	x25, x26, [sp, #64]
  40a524:	stp	x27, x28, [sp, #80]
  40a528:	str	w0, [x29, #108]
  40a52c:	add	x0, x19, #0x190
  40a530:	bl	407c18 <ferror@plt+0x4648>
  40a534:	str	wzr, [x19, #24]
  40a538:	str	wzr, [x19, #232]
  40a53c:	str	x0, [x19, #592]
  40a540:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  40a544:	add	x0, x0, #0x277
  40a548:	str	wzr, [x19, #616]
  40a54c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40a550:	str	x0, [x19, #32]
  40a554:	ldrb	w1, [x0]
  40a558:	cbz	w1, 40a568 <ferror@plt+0x6f98>
  40a55c:	cmp	w1, #0x20
  40a560:	b.ne	40a594 <ferror@plt+0x6fc4>  // b.any
  40a564:	strb	wzr, [x0]
  40a568:	ldr	x3, [x29, #96]
  40a56c:	mov	w0, #0x1                   	// #1
  40a570:	ldr	w2, [x29, #108]
  40a574:	add	x1, x3, #0x58
  40a578:	cmp	w2, w0
  40a57c:	b.ls	40a59c <ferror@plt+0x6fcc>  // b.plast
  40a580:	ldr	x4, [x1], #88
  40a584:	cmp	x4, #0x51a
  40a588:	b.eq	40a7e0 <ferror@plt+0x7210>  // b.none
  40a58c:	add	w0, w0, #0x1
  40a590:	b	40a578 <ferror@plt+0x6fa8>
  40a594:	add	x0, x0, #0x1
  40a598:	b	40a554 <ferror@plt+0x6f84>
  40a59c:	adrp	x20, 45b000 <ferror@plt+0x57a30>
  40a5a0:	add	x20, x20, #0xe70
  40a5a4:	ldr	x0, [x19, #592]
  40a5a8:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a5ac:	add	x21, x21, #0xc6b
  40a5b0:	str	x21, [x19, #752]
  40a5b4:	adrp	x22, 476000 <_obstack_memory_used@@Base+0x19c10>
  40a5b8:	add	x22, x22, #0xf4a
  40a5bc:	cbnz	x0, 40a7ec <ferror@plt+0x721c>
  40a5c0:	ldr	x0, [x3, #16]
  40a5c4:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a5c8:	add	x23, x23, #0xc7d
  40a5cc:	mov	x2, x22
  40a5d0:	mov	x1, x23
  40a5d4:	blr	x20
  40a5d8:	str	x0, [x19, #592]
  40a5dc:	ldr	x0, [x29, #96]
  40a5e0:	mov	x1, x23
  40a5e4:	mov	x2, x21
  40a5e8:	ldr	x0, [x0, #16]
  40a5ec:	blr	x20
  40a5f0:	str	x0, [x19, #752]
  40a5f4:	ldr	x1, [x19, #592]
  40a5f8:	cbz	x1, 40a618 <ferror@plt+0x7048>
  40a5fc:	mov	x2, #0x0                   	// #0
  40a600:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a604:	add	x0, x0, #0xc87
  40a608:	bl	45a668 <ferror@plt+0x57098>
  40a60c:	mov	x1, x0
  40a610:	add	x0, x19, #0x190
  40a614:	bl	40a3dc <ferror@plt+0x6e0c>
  40a618:	add	x2, x19, #0x268
  40a61c:	add	x1, x29, #0x6c
  40a620:	add	x0, x29, #0x60
  40a624:	bl	410420 <ferror@plt+0xce50>
  40a628:	ldr	x23, [x19, #592]
  40a62c:	cbz	x23, 40a704 <ferror@plt+0x7134>
  40a630:	mov	x0, x23
  40a634:	bl	402d50 <strlen@plt>
  40a638:	mov	x20, x0
  40a63c:	mov	w25, w0
  40a640:	cmp	w0, #0x9
  40a644:	b.le	40a6b0 <ferror@plt+0x70e0>
  40a648:	add	x1, x23, w20, sxtw
  40a64c:	sxtw	x0, w0
  40a650:	ldurb	w1, [x1, #-1]
  40a654:	cmp	w1, #0x2f
  40a658:	b.ne	40a6b0 <ferror@plt+0x70e0>  // b.any
  40a65c:	sub	x0, x0, #0x9
  40a660:	add	x24, x23, x0
  40a664:	ldrb	w0, [x23, x0]
  40a668:	cmp	w0, #0x2f
  40a66c:	b.ne	40a6b0 <ferror@plt+0x70e0>  // b.any
  40a670:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2bc10>
  40a674:	add	x0, x24, #0x1
  40a678:	add	x1, x1, #0x5f9
  40a67c:	mov	x2, #0x3                   	// #3
  40a680:	bl	45a8c0 <ferror@plt+0x572f0>
  40a684:	cbnz	w0, 40a6b0 <ferror@plt+0x70e0>
  40a688:	ldrb	w0, [x24, #4]
  40a68c:	cmp	w0, #0x2f
  40a690:	b.ne	40a6b0 <ferror@plt+0x70e0>  // b.any
  40a694:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40a698:	add	x0, x24, #0x5
  40a69c:	add	x1, x1, #0xaa2
  40a6a0:	mov	x2, #0x3                   	// #3
  40a6a4:	bl	45a8c0 <ferror@plt+0x572f0>
  40a6a8:	cbnz	w0, 40a6b0 <ferror@plt+0x70e0>
  40a6ac:	sub	w25, w20, #0x9
  40a6b0:	ldr	x0, [x19, #592]
  40a6b4:	mov	w1, w25
  40a6b8:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x19c10>
  40a6bc:	adrp	x20, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40a6c0:	add	x23, x23, #0xc6b
  40a6c4:	add	x20, x20, #0x4a0
  40a6c8:	bl	411cf4 <ferror@plt+0xe724>
  40a6cc:	ldr	x1, [x19, #752]
  40a6d0:	mov	x2, x23
  40a6d4:	add	x0, x20, #0x890
  40a6d8:	mov	w5, #0x0                   	// #0
  40a6dc:	mov	w4, #0x0                   	// #0
  40a6e0:	mov	w3, #0x1                   	// #1
  40a6e4:	bl	405c10 <ferror@plt+0x2640>
  40a6e8:	ldr	x1, [x19, #592]
  40a6ec:	mov	x2, x23
  40a6f0:	add	x0, x20, #0x848
  40a6f4:	mov	w5, #0x0                   	// #0
  40a6f8:	mov	w4, #0x0                   	// #0
  40a6fc:	mov	w3, #0x1                   	// #1
  40a700:	bl	405c10 <ferror@plt+0x2640>
  40a704:	add	x0, x19, #0x190
  40a708:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a70c:	add	x1, x1, #0xc98
  40a710:	bl	407c18 <ferror@plt+0x4648>
  40a714:	mov	x20, x0
  40a718:	cbz	x0, 40a84c <ferror@plt+0x727c>
  40a71c:	bl	402d50 <strlen@plt>
  40a720:	add	x0, x0, #0x12
  40a724:	and	x0, x0, #0xfffffffffffffff0
  40a728:	adrp	x25, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40a72c:	sub	sp, sp, x0
  40a730:	add	x25, x25, #0x4a0
  40a734:	adrp	x27, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40a738:	mov	x24, sp
  40a73c:	mov	x23, x20
  40a740:	add	x28, x25, #0x890
  40a744:	add	x27, x27, #0x830
  40a748:	ldrb	w0, [x23]
  40a74c:	cmp	w0, #0x3a
  40a750:	b.eq	40a758 <ferror@plt+0x7188>  // b.none
  40a754:	cbnz	w0, 40a7d8 <ferror@plt+0x7208>
  40a758:	sub	x26, x23, x20
  40a75c:	mov	x1, x20
  40a760:	mov	x2, x26
  40a764:	mov	x0, x24
  40a768:	bl	403490 <strncpy@plt>
  40a76c:	cmp	x20, x23
  40a770:	b.ne	40a824 <ferror@plt+0x7254>  // b.any
  40a774:	mov	x2, #0x0                   	// #0
  40a778:	add	x1, x27, #0x74
  40a77c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40a780:	add	x0, x0, #0x66b
  40a784:	bl	45a668 <ferror@plt+0x57098>
  40a788:	mov	x1, x0
  40a78c:	mov	x0, x24
  40a790:	bl	403360 <strcpy@plt>
  40a794:	mov	x1, x24
  40a798:	mov	x0, x28
  40a79c:	mov	w5, #0x0                   	// #0
  40a7a0:	mov	w4, #0x0                   	// #0
  40a7a4:	mov	w3, #0x1                   	// #1
  40a7a8:	mov	x2, #0x0                   	// #0
  40a7ac:	bl	405c10 <ferror@plt+0x2640>
  40a7b0:	add	x0, x25, #0x868
  40a7b4:	mov	x1, x24
  40a7b8:	mov	w5, #0x0                   	// #0
  40a7bc:	mov	w4, #0x0                   	// #0
  40a7c0:	mov	w3, #0x1                   	// #1
  40a7c4:	mov	x2, #0x0                   	// #0
  40a7c8:	bl	405c10 <ferror@plt+0x2640>
  40a7cc:	ldrb	w0, [x23]
  40a7d0:	cbz	w0, 40a84c <ferror@plt+0x727c>
  40a7d4:	add	x20, x23, #0x1
  40a7d8:	add	x23, x23, #0x1
  40a7dc:	b	40a748 <ferror@plt+0x7178>
  40a7e0:	adrp	x20, 45b000 <ferror@plt+0x57a30>
  40a7e4:	add	x20, x20, #0xe78
  40a7e8:	b	40a5a4 <ferror@plt+0x6fd4>
  40a7ec:	mov	x2, #0x0                   	// #0
  40a7f0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40a7f4:	add	x1, x1, #0xaa2
  40a7f8:	bl	45a668 <ferror@plt+0x57098>
  40a7fc:	mov	x2, x21
  40a800:	mov	x23, x0
  40a804:	mov	x1, x22
  40a808:	blr	x20
  40a80c:	cmp	x0, #0x0
  40a810:	csel	x0, x21, x0, eq  // eq = none
  40a814:	str	x0, [x19, #752]
  40a818:	mov	x0, x23
  40a81c:	bl	4032a0 <free@plt>
  40a820:	b	40a618 <ferror@plt+0x7048>
  40a824:	ldurb	w1, [x23, #-1]
  40a828:	add	x0, x24, x26
  40a82c:	cmp	w1, #0x2f
  40a830:	b.eq	40a844 <ferror@plt+0x7274>  // b.none
  40a834:	mov	w1, #0x2f                  	// #47
  40a838:	strb	w1, [x24, x26]
  40a83c:	strb	wzr, [x0, #1]
  40a840:	b	40a794 <ferror@plt+0x71c4>
  40a844:	strb	wzr, [x24, x26]
  40a848:	b	40a794 <ferror@plt+0x71c4>
  40a84c:	add	x0, x19, #0x190
  40a850:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a854:	add	x1, x1, #0xca6
  40a858:	bl	407c18 <ferror@plt+0x4648>
  40a85c:	mov	x20, x0
  40a860:	cbz	x0, 40a948 <ferror@plt+0x7378>
  40a864:	adrp	x26, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40a868:	add	x26, x26, #0x4a0
  40a86c:	ldr	x1, [x26, #2272]
  40a870:	ldrb	w1, [x1]
  40a874:	cmp	w1, #0x30
  40a878:	b.ne	40a948 <ferror@plt+0x7378>  // b.any
  40a87c:	bl	402d50 <strlen@plt>
  40a880:	add	x0, x0, #0x12
  40a884:	and	x0, x0, #0xfffffffffffffff0
  40a888:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40a88c:	sub	sp, sp, x0
  40a890:	add	x25, x25, #0x830
  40a894:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40a898:	mov	x24, sp
  40a89c:	mov	x23, x20
  40a8a0:	add	x25, x25, #0x74
  40a8a4:	add	x28, x28, #0x66b
  40a8a8:	ldrb	w0, [x23]
  40a8ac:	cmp	w0, #0x3a
  40a8b0:	b.eq	40a8b8 <ferror@plt+0x72e8>  // b.none
  40a8b4:	cbnz	w0, 40a918 <ferror@plt+0x7348>
  40a8b8:	sub	x27, x23, x20
  40a8bc:	mov	x1, x20
  40a8c0:	mov	x2, x27
  40a8c4:	mov	x0, x24
  40a8c8:	bl	403490 <strncpy@plt>
  40a8cc:	cmp	x20, x23
  40a8d0:	b.ne	40a920 <ferror@plt+0x7350>  // b.any
  40a8d4:	mov	x2, #0x0                   	// #0
  40a8d8:	mov	x1, x25
  40a8dc:	mov	x0, x28
  40a8e0:	bl	45a668 <ferror@plt+0x57098>
  40a8e4:	mov	x1, x0
  40a8e8:	mov	x0, x24
  40a8ec:	bl	403360 <strcpy@plt>
  40a8f0:	add	x0, x26, #0x848
  40a8f4:	mov	w5, #0x1                   	// #1
  40a8f8:	mov	x1, x24
  40a8fc:	mov	w3, w5
  40a900:	mov	w4, #0x0                   	// #0
  40a904:	mov	x2, #0x0                   	// #0
  40a908:	bl	405c10 <ferror@plt+0x2640>
  40a90c:	ldrb	w0, [x23]
  40a910:	cbz	w0, 40a948 <ferror@plt+0x7378>
  40a914:	add	x20, x23, #0x1
  40a918:	add	x23, x23, #0x1
  40a91c:	b	40a8a8 <ferror@plt+0x72d8>
  40a920:	ldurb	w1, [x23, #-1]
  40a924:	add	x0, x24, x27
  40a928:	cmp	w1, #0x2f
  40a92c:	b.eq	40a940 <ferror@plt+0x7370>  // b.none
  40a930:	mov	w1, #0x2f                  	// #47
  40a934:	strb	w1, [x24, x27]
  40a938:	strb	wzr, [x0, #1]
  40a93c:	b	40a8f0 <ferror@plt+0x7320>
  40a940:	strb	wzr, [x24, x27]
  40a944:	b	40a8f0 <ferror@plt+0x7320>
  40a948:	add	x0, x19, #0x190
  40a94c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40a950:	add	x1, x1, #0xcb3
  40a954:	bl	407c18 <ferror@plt+0x4648>
  40a958:	mov	x20, x0
  40a95c:	cbz	x0, 40aa44 <ferror@plt+0x7474>
  40a960:	adrp	x26, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40a964:	add	x26, x26, #0x4a0
  40a968:	ldr	x1, [x26, #2272]
  40a96c:	ldrb	w1, [x1]
  40a970:	cmp	w1, #0x30
  40a974:	b.ne	40aa44 <ferror@plt+0x7474>  // b.any
  40a978:	bl	402d50 <strlen@plt>
  40a97c:	add	x0, x0, #0x12
  40a980:	and	x0, x0, #0xfffffffffffffff0
  40a984:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40a988:	sub	sp, sp, x0
  40a98c:	add	x25, x25, #0x830
  40a990:	adrp	x28, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40a994:	mov	x24, sp
  40a998:	mov	x23, x20
  40a99c:	add	x25, x25, #0x74
  40a9a0:	add	x28, x28, #0x66b
  40a9a4:	ldrb	w0, [x23]
  40a9a8:	cmp	w0, #0x3a
  40a9ac:	b.eq	40a9b4 <ferror@plt+0x73e4>  // b.none
  40a9b0:	cbnz	w0, 40aa14 <ferror@plt+0x7444>
  40a9b4:	sub	x27, x23, x20
  40a9b8:	mov	x1, x20
  40a9bc:	mov	x2, x27
  40a9c0:	mov	x0, x24
  40a9c4:	bl	403490 <strncpy@plt>
  40a9c8:	cmp	x20, x23
  40a9cc:	b.ne	40aa1c <ferror@plt+0x744c>  // b.any
  40a9d0:	mov	x2, #0x0                   	// #0
  40a9d4:	mov	x1, x25
  40a9d8:	mov	x0, x28
  40a9dc:	bl	45a668 <ferror@plt+0x57098>
  40a9e0:	mov	x1, x0
  40a9e4:	mov	x0, x24
  40a9e8:	bl	403360 <strcpy@plt>
  40a9ec:	add	x0, x26, #0x848
  40a9f0:	mov	w5, #0x1                   	// #1
  40a9f4:	mov	x1, x24
  40a9f8:	mov	w3, w5
  40a9fc:	mov	w4, #0x0                   	// #0
  40aa00:	mov	x2, #0x0                   	// #0
  40aa04:	bl	405c10 <ferror@plt+0x2640>
  40aa08:	ldrb	w0, [x23]
  40aa0c:	cbz	w0, 40aa44 <ferror@plt+0x7474>
  40aa10:	add	x20, x23, #0x1
  40aa14:	add	x23, x23, #0x1
  40aa18:	b	40a9a4 <ferror@plt+0x73d4>
  40aa1c:	ldurb	w1, [x23, #-1]
  40aa20:	add	x0, x24, x27
  40aa24:	cmp	w1, #0x2f
  40aa28:	b.eq	40aa3c <ferror@plt+0x746c>  // b.none
  40aa2c:	mov	w1, #0x2f                  	// #47
  40aa30:	strb	w1, [x24, x27]
  40aa34:	strb	wzr, [x0, #1]
  40aa38:	b	40a9ec <ferror@plt+0x741c>
  40aa3c:	strb	wzr, [x24, x27]
  40aa40:	b	40a9ec <ferror@plt+0x741c>
  40aa44:	mov	w0, #0xffffffff            	// #-1
  40aa48:	str	w0, [x19, #864]
  40aa4c:	adrp	x0, 406000 <ferror@plt+0x2a30>
  40aa50:	add	x0, x0, #0xa80
  40aa54:	str	x0, [x29, #128]
  40aa58:	adrp	x0, 406000 <ferror@plt+0x2a30>
  40aa5c:	add	x0, x0, #0xb0c
  40aa60:	str	x0, [x29, #136]
  40aa64:	mov	x0, #0x3                   	// #3
  40aa68:	str	x0, [x29, #152]
  40aa6c:	adrp	x0, 409000 <ferror@plt+0x5a30>
  40aa70:	add	x0, x0, #0x924
  40aa74:	str	x0, [x29, #160]
  40aa78:	mov	w0, #0x80000               	// #524288
  40aa7c:	str	w0, [x29, #168]
  40aa80:	adrp	x0, 414000 <ferror@plt+0x10a30>
  40aa84:	add	x0, x0, #0xcb0
  40aa88:	str	x0, [x29, #176]
  40aa8c:	ldr	x2, [x29, #96]
  40aa90:	mov	w0, #0x200000              	// #2097152
  40aa94:	ldr	w1, [x19, #640]
  40aa98:	mov	w3, #0x1                   	// #1
  40aa9c:	ldr	w5, [x29, #108]
  40aaa0:	add	x2, x2, #0x58
  40aaa4:	str	w0, [x29, #184]
  40aaa8:	adrp	x0, 413000 <ferror@plt+0xfa30>
  40aaac:	add	x0, x0, #0x674
  40aab0:	str	x0, [x29, #192]
  40aab4:	mov	w0, #0x100000              	// #1048576
  40aab8:	str	w0, [x29, #200]
  40aabc:	mov	w0, #0x0                   	// #0
  40aac0:	cmp	w5, w3
  40aac4:	b.hi	40ab6c <ferror@plt+0x759c>  // b.pmore
  40aac8:	cbz	w0, 40aad0 <ferror@plt+0x7500>
  40aacc:	str	w1, [x19, #640]
  40aad0:	adrp	x26, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40aad4:	adrp	x27, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40aad8:	add	x26, x26, #0x140
  40aadc:	add	x27, x27, #0x230
  40aae0:	mov	w24, #0x1                   	// #1
  40aae4:	ldr	w0, [x29, #108]
  40aae8:	cmp	w0, w24
  40aaec:	b.ls	40ac90 <ferror@plt+0x76c0>  // b.plast
  40aaf0:	mov	w0, #0x58                  	// #88
  40aaf4:	ldr	x1, [x29, #96]
  40aaf8:	umull	x0, w24, w0
  40aafc:	add	x2, x1, x0
  40ab00:	ldr	x0, [x1, x0]
  40ab04:	cmp	x0, #0x59a
  40ab08:	b.ne	40ac6c <ferror@plt+0x769c>  // b.any
  40ab0c:	ldr	x23, [x2, #16]
  40ab10:	mov	w1, #0x40                  	// #64
  40ab14:	adrp	x25, 487000 <_obstack_memory_used@@Base+0x2ac10>
  40ab18:	add	x25, x25, #0xd0e
  40ab1c:	mov	x0, x23
  40ab20:	bl	403130 <strrchr@plt>
  40ab24:	cmp	x0, #0x0
  40ab28:	mov	x28, x0
  40ab2c:	ccmp	x23, x0, #0x4, ne  // ne = any
  40ab30:	b.ne	40aba0 <ferror@plt+0x75d0>  // b.any
  40ab34:	mov	x0, x23
  40ab38:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40ab3c:	mov	x20, x0
  40ab40:	mov	x1, x25
  40ab44:	mov	x0, x20
  40ab48:	bl	403220 <strcmp@plt>
  40ab4c:	cbnz	w0, 40ac20 <ferror@plt+0x7650>
  40ab50:	ldr	x1, [x19, #856]
  40ab54:	mov	x0, x23
  40ab58:	bl	4069fc <ferror@plt+0x342c>
  40ab5c:	mov	x0, x20
  40ab60:	bl	4032a0 <free@plt>
  40ab64:	add	w24, w24, #0x1
  40ab68:	b	40aae4 <ferror@plt+0x7514>
  40ab6c:	ldr	x4, [x2]
  40ab70:	cmp	x4, #0x8c
  40ab74:	b.eq	40ab88 <ferror@plt+0x75b8>  // b.none
  40ab78:	cmp	x4, #0x1e8
  40ab7c:	b.eq	40ab88 <ferror@plt+0x75b8>  // b.none
  40ab80:	cmp	x4, #0x71
  40ab84:	b.ne	40ab90 <ferror@plt+0x75c0>  // b.any
  40ab88:	mov	w0, #0x1                   	// #1
  40ab8c:	mov	w1, w0
  40ab90:	add	x2, x2, #0x58
  40ab94:	cbnz	w1, 40aac8 <ferror@plt+0x74f8>
  40ab98:	add	w3, w3, #0x1
  40ab9c:	b	40aac0 <ferror@plt+0x74f0>
  40aba0:	add	x3, x29, #0x74
  40aba4:	add	x2, x29, #0x78
  40aba8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40abac:	add	x1, x1, #0xcb9
  40abb0:	bl	403450 <__isoc99_sscanf@plt>
  40abb4:	cmp	w0, #0x0
  40abb8:	b.le	40ab34 <ferror@plt+0x7564>
  40abbc:	mov	x0, x28
  40abc0:	bl	402d50 <strlen@plt>
  40abc4:	ldr	w1, [x29, #116]
  40abc8:	cmp	x0, x1
  40abcc:	b.ne	40ab34 <ferror@plt+0x7564>  // b.any
  40abd0:	sub	x28, x28, x23
  40abd4:	add	x0, x28, #0x1
  40abd8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40abdc:	mov	x20, x0
  40abe0:	mov	x2, x28
  40abe4:	mov	x1, x23
  40abe8:	bl	402cd0 <memcpy@plt>
  40abec:	mov	x1, x25
  40abf0:	mov	x0, x20
  40abf4:	strb	wzr, [x20, x28]
  40abf8:	bl	403220 <strcmp@plt>
  40abfc:	cbnz	w0, 40ac0c <ferror@plt+0x763c>
  40ac00:	mov	x0, x20
  40ac04:	bl	4032a0 <free@plt>
  40ac08:	b	40ab34 <ferror@plt+0x7564>
  40ac0c:	mov	x0, x20
  40ac10:	mov	w1, #0x0                   	// #0
  40ac14:	bl	403190 <access@plt>
  40ac18:	tbz	w0, #31, 40ab40 <ferror@plt+0x7570>
  40ac1c:	b	40ac00 <ferror@plt+0x7630>
  40ac20:	mov	x0, x20
  40ac24:	mov	w1, #0x0                   	// #0
  40ac28:	bl	403190 <access@plt>
  40ac2c:	tbz	w0, #31, 40ab50 <ferror@plt+0x7580>
  40ac30:	ldrb	w0, [x20]
  40ac34:	cmp	w0, #0x40
  40ac38:	b.ne	40ac64 <ferror@plt+0x7694>  // b.any
  40ac3c:	add	x0, x20, #0x1
  40ac40:	mov	w1, #0x0                   	// #0
  40ac44:	bl	403190 <access@plt>
  40ac48:	lsr	w0, w0, #31
  40ac4c:	and	x0, x0, #0xff
  40ac50:	add	x1, x20, x0
  40ac54:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40ac58:	add	x0, x0, #0x85c
  40ac5c:	bl	4221dc <ferror@plt+0x1ec0c>
  40ac60:	b	40ab5c <ferror@plt+0x758c>
  40ac64:	mov	w0, #0x0                   	// #0
  40ac68:	b	40ac4c <ferror@plt+0x767c>
  40ac6c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ac70:	add	x5, x29, #0x80
  40ac74:	mov	x1, x26
  40ac78:	mov	w4, #0x80000               	// #524288
  40ac7c:	ldr	x6, [x0, #784]
  40ac80:	mov	w3, #0x0                   	// #0
  40ac84:	mov	x0, x27
  40ac88:	bl	418610 <ferror@plt+0x15040>
  40ac8c:	b	40ab64 <ferror@plt+0x7594>
  40ac90:	ldr	x20, [x19, #912]
  40ac94:	cbz	x20, 40ad20 <ferror@plt+0x7750>
  40ac98:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  40ac9c:	mov	x0, x20
  40aca0:	add	x1, x1, #0xd0e
  40aca4:	bl	403220 <strcmp@plt>
  40aca8:	cbz	w0, 40ad20 <ferror@plt+0x7750>
  40acac:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40acb0:	mov	x0, x20
  40acb4:	add	x1, x1, #0xcc0
  40acb8:	bl	403220 <strcmp@plt>
  40acbc:	cbz	w0, 40ad20 <ferror@plt+0x7750>
  40acc0:	mov	x20, #0x0                   	// #0
  40acc4:	ldr	w0, [x19, #232]
  40acc8:	cmp	w0, w20
  40accc:	b.le	40ad20 <ferror@plt+0x7750>
  40acd0:	ldr	x0, [x19, #256]
  40acd4:	lsl	x2, x20, #5
  40acd8:	add	x1, x0, x20, lsl #5
  40acdc:	ldr	x1, [x1, #8]
  40ace0:	cbz	x1, 40acf8 <ferror@plt+0x7728>
  40ace4:	ldrb	w1, [x1]
  40ace8:	cmp	w1, #0x2a
  40acec:	b.ne	40acf8 <ferror@plt+0x7728>  // b.any
  40acf0:	add	x20, x20, #0x1
  40acf4:	b	40acc4 <ferror@plt+0x76f4>
  40acf8:	ldr	x0, [x0, x2]
  40acfc:	ldr	x1, [x19, #912]
  40ad00:	bl	45a920 <ferror@plt+0x57350>
  40ad04:	cbz	w0, 40acf0 <ferror@plt+0x7720>
  40ad08:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40ad0c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40ad10:	ldr	x2, [x19, #912]
  40ad14:	add	x1, x1, #0xcca
  40ad18:	ldr	w0, [x0, #584]
  40ad1c:	bl	422d58 <ferror@plt+0x1f788>
  40ad20:	ldr	x0, [x19, #912]
  40ad24:	cbz	x0, 40ad44 <ferror@plt+0x7774>
  40ad28:	ldrb	w0, [x0]
  40ad2c:	cbnz	w0, 40ad44 <ferror@plt+0x7774>
  40ad30:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40ad34:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40ad38:	add	x1, x1, #0xcf4
  40ad3c:	ldr	w0, [x0, #584]
  40ad40:	bl	422d58 <ferror@plt+0x1f788>
  40ad44:	ldr	w0, [x19, #692]
  40ad48:	ldr	x20, [x19, #696]
  40ad4c:	cmp	w0, #0x2
  40ad50:	b.ne	40b084 <ferror@plt+0x7ab4>  // b.any
  40ad54:	cbz	x20, 40ad90 <ferror@plt+0x77c0>
  40ad58:	mov	x0, x20
  40ad5c:	bl	402d50 <strlen@plt>
  40ad60:	str	x0, [x19, #704]
  40ad64:	mov	x0, x20
  40ad68:	bl	45b8d0 <ferror@plt+0x58300>
  40ad6c:	mov	w1, #0x2e                  	// #46
  40ad70:	bl	403130 <strrchr@plt>
  40ad74:	cbz	x0, 40ad90 <ferror@plt+0x77c0>
  40ad78:	bl	402d50 <strlen@plt>
  40ad7c:	ldr	x1, [x19, #704]
  40ad80:	sub	x0, x1, x0
  40ad84:	str	x0, [x19, #704]
  40ad88:	ldr	x1, [x19, #696]
  40ad8c:	strb	wzr, [x1, x0]
  40ad90:	ldr	w0, [x19, #692]
  40ad94:	adrp	x24, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40ad98:	add	x24, x24, #0x230
  40ad9c:	cbz	w0, 40adbc <ferror@plt+0x77ec>
  40ada0:	ldr	w0, [x24, #3752]
  40ada4:	cbz	w0, 40adbc <ferror@plt+0x77ec>
  40ada8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40adac:	mov	w0, #0x0                   	// #0
  40adb0:	add	x1, x1, #0xd15
  40adb4:	bl	421ef0 <ferror@plt+0x1e920>
  40adb8:	str	wzr, [x24, #3752]
  40adbc:	ldr	w0, [x19, #96]
  40adc0:	cmp	w0, #0x0
  40adc4:	cbnz	w0, 40b0c4 <ferror@plt+0x7af4>
  40adc8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40adcc:	add	x1, x1, #0xd49
  40add0:	add	x0, x19, #0x190
  40add4:	bl	407c18 <ferror@plt+0x4648>
  40add8:	mov	x1, x0
  40addc:	cbz	x0, 40adf8 <ferror@plt+0x7828>
  40ade0:	ldrb	w2, [x0]
  40ade4:	cmp	w2, #0x2d
  40ade8:	b.ne	40b098 <ferror@plt+0x7ac8>  // b.any
  40adec:	mov	w0, #0x2                   	// #2
  40adf0:	str	w0, [x19, #96]
  40adf4:	str	x1, [x19, #800]
  40adf8:	ldr	x0, [x19, #592]
  40adfc:	adrp	x26, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40ae00:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40ae04:	add	x25, x26, #0x4a0
  40ae08:	add	x23, x23, #0xd6b
  40ae0c:	cbnz	x0, 40ae88 <ferror@plt+0x78b8>
  40ae10:	add	x20, x25, #0x890
  40ae14:	mov	w4, #0x1                   	// #1
  40ae18:	mov	x1, x21
  40ae1c:	mov	w3, w4
  40ae20:	mov	x0, x20
  40ae24:	mov	w5, #0x0                   	// #0
  40ae28:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  40ae2c:	add	x2, x2, #0xc6b
  40ae30:	bl	405c10 <ferror@plt+0x2640>
  40ae34:	mov	x2, x23
  40ae38:	mov	x1, x21
  40ae3c:	mov	x0, x20
  40ae40:	mov	w5, #0x0                   	// #0
  40ae44:	mov	w4, #0x2                   	// #2
  40ae48:	mov	w3, #0x1                   	// #1
  40ae4c:	bl	405c10 <ferror@plt+0x2640>
  40ae50:	mov	x2, x23
  40ae54:	mov	x1, x22
  40ae58:	mov	x0, x20
  40ae5c:	mov	w5, #0x0                   	// #0
  40ae60:	mov	w4, #0x2                   	// #2
  40ae64:	mov	w3, #0x1                   	// #1
  40ae68:	bl	405c10 <ferror@plt+0x2640>
  40ae6c:	mov	w4, #0x1                   	// #1
  40ae70:	mov	x2, x23
  40ae74:	mov	w3, w4
  40ae78:	mov	x1, x22
  40ae7c:	add	x0, x25, #0x848
  40ae80:	mov	w5, #0x0                   	// #0
  40ae84:	bl	405c10 <ferror@plt+0x2640>
  40ae88:	ldr	x1, [x26, #1184]
  40ae8c:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40ae90:	add	x20, x20, #0x830
  40ae94:	mov	x3, #0x0                   	// #0
  40ae98:	add	x20, x20, #0x74
  40ae9c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40aea0:	mov	x2, x20
  40aea4:	add	x0, x0, #0xd74
  40aea8:	bl	45a668 <ferror@plt+0x57098>
  40aeac:	mov	x6, x0
  40aeb0:	mov	x26, x0
  40aeb4:	mov	x5, x20
  40aeb8:	ldr	x0, [x19, #592]
  40aebc:	mov	x2, x20
  40aec0:	adrp	x4, 485000 <_obstack_memory_used@@Base+0x28c10>
  40aec4:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40aec8:	cmp	x0, #0x0
  40aecc:	add	x4, x4, #0x122
  40aed0:	add	x3, x3, #0xb60
  40aed4:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40aed8:	add	x1, x1, #0x10e
  40aedc:	mov	x7, #0x0                   	// #0
  40aee0:	csel	x0, x0, x22, ne  // ne = any
  40aee4:	bl	45a668 <ferror@plt+0x57098>
  40aee8:	mov	x21, x0
  40aeec:	mov	x0, x26
  40aef0:	bl	4032a0 <free@plt>
  40aef4:	mov	x2, x20
  40aef8:	mov	x3, #0x0                   	// #0
  40aefc:	mov	x0, x21
  40af00:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40af04:	add	x1, x1, #0xd81
  40af08:	bl	45a668 <ferror@plt+0x57098>
  40af0c:	mov	w5, #0x0                   	// #0
  40af10:	mov	w4, #0x0                   	// #0
  40af14:	mov	x1, x0
  40af18:	mov	x2, x23
  40af1c:	add	x0, x25, #0x890
  40af20:	mov	w3, #0x1                   	// #1
  40af24:	bl	405c10 <ferror@plt+0x2640>
  40af28:	mov	x2, x20
  40af2c:	mov	x3, #0x0                   	// #0
  40af30:	mov	x0, x21
  40af34:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2bc10>
  40af38:	add	x1, x1, #0x5f9
  40af3c:	bl	45a668 <ferror@plt+0x57098>
  40af40:	mov	w5, #0x1                   	// #1
  40af44:	mov	x1, x0
  40af48:	mov	w3, w5
  40af4c:	mov	x2, x23
  40af50:	mov	w4, #0x0                   	// #0
  40af54:	add	x0, x25, #0x848
  40af58:	bl	405c10 <ferror@plt+0x2640>
  40af5c:	mov	x0, x21
  40af60:	bl	4032a0 <free@plt>
  40af64:	ldr	w1, [x19, #232]
  40af68:	ldr	w0, [x19, #864]
  40af6c:	cmp	w1, w0
  40af70:	b.ne	40af8c <ferror@plt+0x79bc>  // b.any
  40af74:	ldr	x2, [x19, #856]
  40af78:	cbz	x2, 40af8c <ferror@plt+0x79bc>
  40af7c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40af80:	mov	w0, #0x0                   	// #0
  40af84:	add	x1, x1, #0xd85
  40af88:	bl	421ef0 <ferror@plt+0x1e920>
  40af8c:	ldr	w0, [x19, #96]
  40af90:	sub	w0, w0, #0x2
  40af94:	cmp	w0, #0x1
  40af98:	b.hi	40afcc <ferror@plt+0x79fc>  // b.pmore
  40af9c:	ldr	x1, [x19, #800]
  40afa0:	mov	x2, #0x0                   	// #0
  40afa4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40afa8:	add	x0, x0, #0xb03
  40afac:	bl	45a668 <ferror@plt+0x57098>
  40afb0:	mov	w4, #0x1                   	// #1
  40afb4:	mov	w3, #0x0                   	// #0
  40afb8:	mov	x2, #0x0                   	// #0
  40afbc:	mov	x1, #0x0                   	// #0
  40afc0:	bl	4068c0 <ferror@plt+0x32f0>
  40afc4:	mov	w0, #0x1                   	// #1
  40afc8:	str	w0, [x19, #96]
  40afcc:	ldr	w1, [x19, #608]
  40afd0:	ldr	w0, [x19, #672]
  40afd4:	orr	w0, w0, w1
  40afd8:	ldr	w1, [x19, #612]
  40afdc:	orr	w0, w0, w1
  40afe0:	cbz	w0, 40affc <ferror@plt+0x7a2c>
  40afe4:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  40afe8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40afec:	add	x1, x1, #0x4ec
  40aff0:	add	x0, x0, #0xdb3
  40aff4:	str	wzr, [x19, #232]
  40aff8:	bl	4069fc <ferror@plt+0x342c>
  40affc:	ldr	w0, [x19, #612]
  40b000:	ldr	w2, [x24, #3816]
  40b004:	cmp	w0, #0x0
  40b008:	ldr	w0, [x19, #608]
  40b00c:	cset	w1, ne  // ne = any
  40b010:	cmp	w0, #0x0
  40b014:	ldr	w0, [x29, #108]
  40b018:	cinc	w1, w1, ne  // ne = any
  40b01c:	cbz	w2, 40b028 <ferror@plt+0x7a58>
  40b020:	cmp	w0, #0x2
  40b024:	b.eq	40b0ec <ferror@plt+0x7b1c>  // b.none
  40b028:	sub	w0, w0, #0x1
  40b02c:	cmp	w0, w1
  40b030:	cset	w0, eq  // eq = none
  40b034:	strb	w0, [x19, #416]
  40b038:	bl	40685c <ferror@plt+0x328c>
  40b03c:	ldr	w0, [x19, #24]
  40b040:	mov	w1, #0x18                  	// #24
  40b044:	smull	x0, w0, w1
  40b048:	ldr	x1, [x19, #16]
  40b04c:	str	xzr, [x1, x0]
  40b050:	bl	40699c <ferror@plt+0x33cc>
  40b054:	ldrsw	x0, [x19, #232]
  40b058:	ldr	x1, [x19, #256]
  40b05c:	lsl	x0, x0, #5
  40b060:	str	xzr, [x1, x0]
  40b064:	mov	sp, x29
  40b068:	ldp	x19, x20, [sp, #16]
  40b06c:	ldp	x21, x22, [sp, #32]
  40b070:	ldp	x23, x24, [sp, #48]
  40b074:	ldp	x25, x26, [sp, #64]
  40b078:	ldp	x27, x28, [sp, #80]
  40b07c:	ldp	x29, x30, [sp], #208
  40b080:	ret
  40b084:	cbz	x20, 40ad90 <ferror@plt+0x77c0>
  40b088:	mov	x0, x20
  40b08c:	bl	4032a0 <free@plt>
  40b090:	str	xzr, [x19, #696]
  40b094:	b	40ad90 <ferror@plt+0x77c0>
  40b098:	cbz	w2, 40adf8 <ferror@plt+0x7828>
  40b09c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  40b0a0:	add	x1, x1, #0x63
  40b0a4:	bl	403220 <strcmp@plt>
  40b0a8:	cbz	w0, 40adf8 <ferror@plt+0x7828>
  40b0ac:	mov	w0, #0x3                   	// #3
  40b0b0:	str	w0, [x19, #96]
  40b0b4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b0b8:	add	x0, x0, #0xb24
  40b0bc:	str	x0, [x19, #800]
  40b0c0:	b	40adf8 <ferror@plt+0x7828>
  40b0c4:	b.ge	40adf8 <ferror@plt+0x7828>  // b.tcont
  40b0c8:	ldr	x0, [x19, #800]
  40b0cc:	str	wzr, [x19, #96]
  40b0d0:	cbz	x0, 40adf8 <ferror@plt+0x7828>
  40b0d4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b0d8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40b0dc:	add	x2, x2, #0xd5b
  40b0e0:	add	x0, x0, #0x6e9
  40b0e4:	mov	w1, #0x1244                	// #4676
  40b0e8:	bl	403600 <ferror@plt+0x30>
  40b0ec:	mov	w0, #0x1                   	// #1
  40b0f0:	b	40b034 <ferror@plt+0x7a64>
  40b0f4:	stp	x29, x30, [sp, #-64]!
  40b0f8:	mov	x29, sp
  40b0fc:	stp	x19, x20, [sp, #16]
  40b100:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40b104:	add	x19, x19, #0x518
  40b108:	stp	x21, x22, [sp, #32]
  40b10c:	ldr	w0, [x19, #640]
  40b110:	str	x23, [sp, #48]
  40b114:	cbnz	w0, 40b244 <ferror@plt+0x7c74>
  40b118:	adrp	x21, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40b11c:	add	x21, x21, #0x4a0
  40b120:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b124:	add	x0, x21, #0x890
  40b128:	add	x1, x1, #0xdbe
  40b12c:	mov	w3, #0x0                   	// #0
  40b130:	mov	w2, #0x1                   	// #1
  40b134:	bl	406ba8 <ferror@plt+0x35d8>
  40b138:	cbz	x0, 40b244 <ferror@plt+0x7c74>
  40b13c:	bl	404468 <ferror@plt+0xe98>
  40b140:	add	x20, x19, #0x78
  40b144:	mov	x1, #0x0                   	// #0
  40b148:	adrp	x4, 42d000 <ferror@plt+0x29a30>
  40b14c:	adrp	x3, 42d000 <ferror@plt+0x29a30>
  40b150:	add	x4, x4, #0x3e4
  40b154:	add	x3, x3, #0x3bc
  40b158:	mov	x2, #0x0                   	// #0
  40b15c:	str	x0, [x21, #2280]
  40b160:	mov	x0, x20
  40b164:	bl	45c200 <_obstack_begin@@Base>
  40b168:	ldp	x1, x0, [x19, #144]
  40b16c:	sub	x0, x0, x1
  40b170:	cmp	x0, #0x13
  40b174:	b.hi	40b184 <ferror@plt+0x7bb4>  // b.pmore
  40b178:	mov	x0, x20
  40b17c:	mov	x1, #0x14                  	// #20
  40b180:	bl	45c22c <_obstack_newchunk@@Base>
  40b184:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b188:	add	x0, x0, #0xdca
  40b18c:	ldr	x1, [x19, #144]
  40b190:	add	x22, x19, #0x78
  40b194:	ldp	x2, x3, [x0]
  40b198:	ldr	w0, [x0, #16]
  40b19c:	stp	x2, x3, [x1]
  40b1a0:	str	w0, [x1, #16]
  40b1a4:	ldr	x0, [x21, #2280]
  40b1a8:	ldr	x23, [x19, #144]
  40b1ac:	add	x23, x23, #0x14
  40b1b0:	str	x23, [x19, #144]
  40b1b4:	bl	402d50 <strlen@plt>
  40b1b8:	add	x20, x0, #0x1
  40b1bc:	ldr	x0, [x19, #152]
  40b1c0:	sub	x23, x0, x23
  40b1c4:	cmp	x20, x23
  40b1c8:	b.ls	40b1d8 <ferror@plt+0x7c08>  // b.plast
  40b1cc:	mov	x1, x20
  40b1d0:	mov	x0, x22
  40b1d4:	bl	45c22c <_obstack_newchunk@@Base>
  40b1d8:	ldr	x0, [x19, #144]
  40b1dc:	mov	x2, x20
  40b1e0:	ldr	x1, [x21, #2280]
  40b1e4:	bl	402cd0 <memcpy@plt>
  40b1e8:	ldp	x1, x0, [x19, #136]
  40b1ec:	add	x2, x0, x20
  40b1f0:	cmp	x2, x1
  40b1f4:	b.ne	40b204 <ferror@plt+0x7c34>  // b.any
  40b1f8:	ldrb	w0, [x19, #200]
  40b1fc:	orr	w0, w0, #0x2
  40b200:	strb	w0, [x19, #200]
  40b204:	ldr	x0, [x19, #168]
  40b208:	ldr	x4, [x19, #152]
  40b20c:	add	x2, x2, x0
  40b210:	bic	x0, x2, x0
  40b214:	ldr	x2, [x19, #128]
  40b218:	ldp	x21, x22, [sp, #32]
  40b21c:	sub	x5, x0, x2
  40b220:	sub	x2, x4, x2
  40b224:	cmp	x5, x2
  40b228:	csel	x0, x0, x4, ls  // ls = plast
  40b22c:	stp	x0, x0, [x19, #136]
  40b230:	add	x0, x19, #0x190
  40b234:	ldp	x19, x20, [sp, #16]
  40b238:	ldr	x23, [sp, #48]
  40b23c:	ldp	x29, x30, [sp], #64
  40b240:	b	40a3dc <ferror@plt+0x6e0c>
  40b244:	ldp	x19, x20, [sp, #16]
  40b248:	ldp	x21, x22, [sp, #32]
  40b24c:	ldr	x23, [sp, #48]
  40b250:	ldp	x29, x30, [sp], #64
  40b254:	ret
  40b258:	stp	x29, x30, [sp, #-64]!
  40b25c:	adrp	x4, 42d000 <ferror@plt+0x29a30>
  40b260:	adrp	x3, 42d000 <ferror@plt+0x29a30>
  40b264:	mov	x29, sp
  40b268:	stp	x19, x20, [sp, #16]
  40b26c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40b270:	add	x19, x19, #0x518
  40b274:	add	x20, x19, #0x78
  40b278:	add	x4, x4, #0x3e4
  40b27c:	add	x3, x3, #0x3bc
  40b280:	mov	x0, x20
  40b284:	mov	x2, #0x0                   	// #0
  40b288:	stp	x21, x22, [sp, #32]
  40b28c:	mov	x22, x1
  40b290:	mov	x1, #0x0                   	// #0
  40b294:	str	x23, [sp, #48]
  40b298:	bl	45c200 <_obstack_begin@@Base>
  40b29c:	ldp	x1, x0, [x19, #144]
  40b2a0:	sub	x0, x0, x1
  40b2a4:	cmp	x0, #0xb
  40b2a8:	b.hi	40b2b8 <ferror@plt+0x7ce8>  // b.pmore
  40b2ac:	mov	x0, x20
  40b2b0:	mov	x1, #0xc                   	// #12
  40b2b4:	bl	45c22c <_obstack_newchunk@@Base>
  40b2b8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b2bc:	add	x0, x0, #0xddf
  40b2c0:	ldr	x1, [x19, #144]
  40b2c4:	add	x21, x19, #0x78
  40b2c8:	ldr	x2, [x0]
  40b2cc:	ldr	w0, [x0, #8]
  40b2d0:	str	x2, [x1]
  40b2d4:	str	w0, [x1, #8]
  40b2d8:	mov	x0, x22
  40b2dc:	ldr	x23, [x19, #144]
  40b2e0:	add	x23, x23, #0xc
  40b2e4:	str	x23, [x19, #144]
  40b2e8:	bl	402d50 <strlen@plt>
  40b2ec:	add	x20, x0, #0x1
  40b2f0:	ldr	x0, [x19, #152]
  40b2f4:	sub	x23, x0, x23
  40b2f8:	cmp	x20, x23
  40b2fc:	b.ls	40b30c <ferror@plt+0x7d3c>  // b.plast
  40b300:	mov	x1, x20
  40b304:	mov	x0, x21
  40b308:	bl	45c22c <_obstack_newchunk@@Base>
  40b30c:	ldr	x0, [x19, #144]
  40b310:	mov	x2, x20
  40b314:	mov	x1, x22
  40b318:	bl	402cd0 <memcpy@plt>
  40b31c:	ldp	x1, x0, [x19, #136]
  40b320:	add	x2, x0, x20
  40b324:	cmp	x2, x1
  40b328:	b.ne	40b338 <ferror@plt+0x7d68>  // b.any
  40b32c:	ldrb	w0, [x19, #200]
  40b330:	orr	w0, w0, #0x2
  40b334:	strb	w0, [x19, #200]
  40b338:	ldr	x0, [x19, #168]
  40b33c:	ldr	x4, [x19, #152]
  40b340:	add	x2, x2, x0
  40b344:	bic	x0, x2, x0
  40b348:	ldr	x2, [x19, #128]
  40b34c:	ldp	x21, x22, [sp, #32]
  40b350:	sub	x5, x0, x2
  40b354:	sub	x2, x4, x2
  40b358:	cmp	x5, x2
  40b35c:	csel	x0, x0, x4, ls  // ls = plast
  40b360:	stp	x0, x0, [x19, #136]
  40b364:	add	x0, x19, #0x190
  40b368:	ldp	x19, x20, [sp, #16]
  40b36c:	ldr	x23, [sp, #48]
  40b370:	ldp	x29, x30, [sp], #64
  40b374:	b	40a3dc <ferror@plt+0x6e0c>
  40b378:	stp	x29, x30, [sp, #-48]!
  40b37c:	mov	x29, sp
  40b380:	stp	x19, x20, [sp, #16]
  40b384:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40b388:	add	x19, x19, #0x518
  40b38c:	stp	x21, x22, [sp, #32]
  40b390:	ldr	x0, [x19, #920]
  40b394:	cbz	x0, 40b46c <ferror@plt+0x7e9c>
  40b398:	ldrb	w0, [x0]
  40b39c:	cbz	w0, 40b46c <ferror@plt+0x7e9c>
  40b3a0:	add	x0, x19, #0x78
  40b3a4:	ldp	x2, x1, [x0, #24]
  40b3a8:	sub	x1, x1, x2
  40b3ac:	cmp	x1, #0x14
  40b3b0:	b.hi	40b3bc <ferror@plt+0x7dec>  // b.pmore
  40b3b4:	mov	x1, #0x15                  	// #21
  40b3b8:	bl	45c22c <_obstack_newchunk@@Base>
  40b3bc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b3c0:	add	x0, x0, #0xdec
  40b3c4:	ldr	x1, [x19, #144]
  40b3c8:	add	x21, x19, #0x78
  40b3cc:	ldp	x2, x3, [x0]
  40b3d0:	stp	x2, x3, [x1]
  40b3d4:	ldur	x0, [x0, #13]
  40b3d8:	stur	x0, [x1, #13]
  40b3dc:	ldr	x0, [x19, #920]
  40b3e0:	ldr	x22, [x19, #144]
  40b3e4:	add	x22, x22, #0x15
  40b3e8:	str	x22, [x19, #144]
  40b3ec:	bl	402d50 <strlen@plt>
  40b3f0:	add	x20, x0, #0x1
  40b3f4:	ldr	x0, [x19, #152]
  40b3f8:	sub	x22, x0, x22
  40b3fc:	cmp	x20, x22
  40b400:	b.ls	40b410 <ferror@plt+0x7e40>  // b.plast
  40b404:	mov	x1, x20
  40b408:	mov	x0, x21
  40b40c:	bl	45c22c <_obstack_newchunk@@Base>
  40b410:	ldr	x0, [x19, #144]
  40b414:	mov	x2, x20
  40b418:	ldr	x1, [x19, #920]
  40b41c:	bl	402cd0 <memcpy@plt>
  40b420:	ldp	x1, x0, [x19, #136]
  40b424:	add	x2, x0, x20
  40b428:	cmp	x2, x1
  40b42c:	b.ne	40b43c <ferror@plt+0x7e6c>  // b.any
  40b430:	ldrb	w0, [x19, #200]
  40b434:	orr	w0, w0, #0x2
  40b438:	strb	w0, [x19, #200]
  40b43c:	ldr	x0, [x19, #168]
  40b440:	ldr	x4, [x19, #152]
  40b444:	add	x2, x2, x0
  40b448:	bic	x0, x2, x0
  40b44c:	ldr	x2, [x19, #128]
  40b450:	sub	x5, x0, x2
  40b454:	sub	x2, x4, x2
  40b458:	cmp	x5, x2
  40b45c:	csel	x0, x0, x4, ls  // ls = plast
  40b460:	stp	x0, x0, [x19, #136]
  40b464:	add	x0, x19, #0x190
  40b468:	bl	40a3dc <ferror@plt+0x6e0c>
  40b46c:	ldr	x0, [x19, #920]
  40b470:	bl	4032a0 <free@plt>
  40b474:	str	xzr, [x19, #920]
  40b478:	ldp	x19, x20, [sp, #16]
  40b47c:	ldp	x21, x22, [sp, #32]
  40b480:	ldp	x29, x30, [sp], #48
  40b484:	ret
  40b488:	stp	x29, x30, [sp, #-96]!
  40b48c:	mov	x29, sp
  40b490:	stp	x19, x20, [sp, #16]
  40b494:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40b498:	add	x20, x20, #0x518
  40b49c:	add	x0, x20, #0x78
  40b4a0:	stp	x21, x22, [sp, #32]
  40b4a4:	stp	x23, x24, [sp, #48]
  40b4a8:	ldp	x2, x1, [x0, #24]
  40b4ac:	stp	x25, x26, [sp, #64]
  40b4b0:	stp	x27, x28, [sp, #80]
  40b4b4:	sub	x1, x1, x2
  40b4b8:	cmp	x1, #0x13
  40b4bc:	b.hi	40b4c8 <ferror@plt+0x7ef8>  // b.pmore
  40b4c0:	mov	x1, #0x14                  	// #20
  40b4c4:	bl	45c22c <_obstack_newchunk@@Base>
  40b4c8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b4cc:	add	x0, x0, #0xe02
  40b4d0:	ldr	x2, [x20, #144]
  40b4d4:	mov	w24, #0x5c27                	// #23591
  40b4d8:	ldp	x4, x5, [x0]
  40b4dc:	mov	x23, #0x0                   	// #0
  40b4e0:	ldr	w0, [x0, #16]
  40b4e4:	mov	w3, #0x1                   	// #1
  40b4e8:	stp	x4, x5, [x2]
  40b4ec:	movk	w24, #0x2727, lsl #16
  40b4f0:	mov	w25, #0x2720                	// #10016
  40b4f4:	str	w0, [x2, #16]
  40b4f8:	ldr	x0, [x20, #144]
  40b4fc:	add	x0, x0, #0x14
  40b500:	str	x0, [x20, #144]
  40b504:	add	x0, x20, #0x78
  40b508:	ldr	w4, [x20, #24]
  40b50c:	cmp	w4, w23
  40b510:	ldp	x1, x2, [x0, #24]
  40b514:	b.le	40b7f0 <ferror@plt+0x8220>
  40b518:	cbnz	w3, 40b544 <ferror@plt+0x7f74>
  40b51c:	cmp	x2, x1
  40b520:	b.ne	40b52c <ferror@plt+0x7f5c>  // b.any
  40b524:	mov	x1, #0x1                   	// #1
  40b528:	bl	45c22c <_obstack_newchunk@@Base>
  40b52c:	ldr	x1, [x20, #144]
  40b530:	mov	w2, #0x20                  	// #32
  40b534:	strb	w2, [x1]
  40b538:	ldr	x1, [x20, #144]
  40b53c:	add	x1, x1, #0x1
  40b540:	str	x1, [x20, #144]
  40b544:	mov	x26, #0x18                  	// #24
  40b548:	mov	w1, #0x14                  	// #20
  40b54c:	ldr	x0, [x20, #16]
  40b550:	mul	x26, x23, x26
  40b554:	add	x0, x0, x26
  40b558:	ldr	w0, [x0, #16]
  40b55c:	and	w0, w0, w1
  40b560:	cmp	w0, #0x4
  40b564:	b.eq	40b7e4 <ferror@plt+0x8214>  // b.none
  40b568:	add	x0, x20, #0x78
  40b56c:	ldp	x2, x1, [x0, #24]
  40b570:	sub	x1, x1, x2
  40b574:	cmp	x1, #0x1
  40b578:	b.hi	40b584 <ferror@plt+0x7fb4>  // b.pmore
  40b57c:	mov	x1, #0x2                   	// #2
  40b580:	bl	45c22c <_obstack_newchunk@@Base>
  40b584:	ldr	x0, [x20, #144]
  40b588:	mov	w1, #0x2d27                	// #11559
  40b58c:	add	x19, x20, #0x78
  40b590:	strh	w1, [x0]
  40b594:	ldr	x0, [x19, #24]
  40b598:	add	x0, x0, #0x2
  40b59c:	str	x0, [x19, #24]
  40b5a0:	ldr	x0, [x20, #16]
  40b5a4:	ldr	x22, [x0, x26]
  40b5a8:	mov	x0, x22
  40b5ac:	mov	w1, #0x27                  	// #39
  40b5b0:	bl	4032f0 <strchr@plt>
  40b5b4:	mov	x21, x0
  40b5b8:	ldp	x0, x27, [x19, #24]
  40b5bc:	sub	x27, x27, x0
  40b5c0:	cbz	x21, 40b630 <ferror@plt+0x8060>
  40b5c4:	sub	x28, x21, x22
  40b5c8:	cmp	x28, x27
  40b5cc:	b.ls	40b5dc <ferror@plt+0x800c>  // b.plast
  40b5d0:	mov	x1, x28
  40b5d4:	mov	x0, x19
  40b5d8:	bl	45c22c <_obstack_newchunk@@Base>
  40b5dc:	ldr	x0, [x19, #24]
  40b5e0:	mov	x2, x28
  40b5e4:	mov	x1, x22
  40b5e8:	bl	402cd0 <memcpy@plt>
  40b5ec:	ldr	x0, [x19, #24]
  40b5f0:	add	x2, x0, x28
  40b5f4:	str	x2, [x19, #24]
  40b5f8:	ldr	x0, [x19, #32]
  40b5fc:	sub	x2, x0, x2
  40b600:	cmp	x2, #0x3
  40b604:	b.hi	40b614 <ferror@plt+0x8044>  // b.pmore
  40b608:	mov	x0, x19
  40b60c:	mov	x1, #0x4                   	// #4
  40b610:	bl	45c22c <_obstack_newchunk@@Base>
  40b614:	ldr	x0, [x19, #24]
  40b618:	add	x22, x21, #0x1
  40b61c:	str	w24, [x0]
  40b620:	ldr	x0, [x19, #24]
  40b624:	add	x0, x0, #0x4
  40b628:	str	x0, [x19, #24]
  40b62c:	b	40b5a8 <ferror@plt+0x7fd8>
  40b630:	mov	x0, x22
  40b634:	bl	402d50 <strlen@plt>
  40b638:	mov	x21, x0
  40b63c:	cmp	x0, x27
  40b640:	b.ls	40b650 <ferror@plt+0x8080>  // b.plast
  40b644:	mov	x1, x0
  40b648:	mov	x0, x19
  40b64c:	bl	45c22c <_obstack_newchunk@@Base>
  40b650:	ldr	x0, [x20, #144]
  40b654:	mov	x2, x21
  40b658:	mov	x1, x22
  40b65c:	add	x19, x20, #0x78
  40b660:	bl	402cd0 <memcpy@plt>
  40b664:	ldp	x2, x0, [x20, #144]
  40b668:	add	x21, x2, x21
  40b66c:	str	x21, [x20, #144]
  40b670:	cmp	x21, x0
  40b674:	b.ne	40b684 <ferror@plt+0x80b4>  // b.any
  40b678:	mov	x0, x19
  40b67c:	mov	x1, #0x1                   	// #1
  40b680:	bl	45c22c <_obstack_newchunk@@Base>
  40b684:	ldr	x0, [x20, #144]
  40b688:	mov	w1, #0x27                  	// #39
  40b68c:	add	x19, x20, #0x78
  40b690:	strb	w1, [x0]
  40b694:	ldr	x0, [x19, #24]
  40b698:	add	x0, x0, #0x1
  40b69c:	str	x0, [x19, #24]
  40b6a0:	ldr	x0, [x20, #16]
  40b6a4:	add	x26, x0, x26
  40b6a8:	ldr	x26, [x26, #8]
  40b6ac:	ldp	x1, x0, [x19, #24]
  40b6b0:	cbz	x26, 40b7e4 <ferror@plt+0x8214>
  40b6b4:	ldr	x2, [x26]
  40b6b8:	cbz	x2, 40b7e4 <ferror@plt+0x8214>
  40b6bc:	sub	x0, x0, x1
  40b6c0:	cmp	x0, #0x1
  40b6c4:	b.hi	40b6d4 <ferror@plt+0x8104>  // b.pmore
  40b6c8:	mov	x0, x19
  40b6cc:	mov	x1, #0x2                   	// #2
  40b6d0:	bl	45c22c <_obstack_newchunk@@Base>
  40b6d4:	ldr	x0, [x19, #24]
  40b6d8:	strh	w25, [x0]
  40b6dc:	ldr	x0, [x19, #24]
  40b6e0:	add	x0, x0, #0x2
  40b6e4:	str	x0, [x19, #24]
  40b6e8:	ldr	x22, [x26]
  40b6ec:	mov	x0, x22
  40b6f0:	mov	w1, #0x27                  	// #39
  40b6f4:	bl	4032f0 <strchr@plt>
  40b6f8:	mov	x21, x0
  40b6fc:	ldp	x0, x27, [x19, #24]
  40b700:	sub	x27, x27, x0
  40b704:	cbz	x21, 40b774 <ferror@plt+0x81a4>
  40b708:	sub	x28, x21, x22
  40b70c:	cmp	x28, x27
  40b710:	b.ls	40b720 <ferror@plt+0x8150>  // b.plast
  40b714:	mov	x1, x28
  40b718:	mov	x0, x19
  40b71c:	bl	45c22c <_obstack_newchunk@@Base>
  40b720:	ldr	x0, [x19, #24]
  40b724:	mov	x2, x28
  40b728:	mov	x1, x22
  40b72c:	bl	402cd0 <memcpy@plt>
  40b730:	ldr	x0, [x19, #24]
  40b734:	add	x2, x0, x28
  40b738:	str	x2, [x19, #24]
  40b73c:	ldr	x0, [x19, #32]
  40b740:	sub	x2, x0, x2
  40b744:	cmp	x2, #0x3
  40b748:	b.hi	40b758 <ferror@plt+0x8188>  // b.pmore
  40b74c:	mov	x0, x19
  40b750:	mov	x1, #0x4                   	// #4
  40b754:	bl	45c22c <_obstack_newchunk@@Base>
  40b758:	ldr	x0, [x19, #24]
  40b75c:	add	x22, x21, #0x1
  40b760:	str	w24, [x0]
  40b764:	ldr	x0, [x19, #24]
  40b768:	add	x0, x0, #0x4
  40b76c:	str	x0, [x19, #24]
  40b770:	b	40b6ec <ferror@plt+0x811c>
  40b774:	mov	x0, x22
  40b778:	bl	402d50 <strlen@plt>
  40b77c:	mov	x21, x0
  40b780:	cmp	x0, x27
  40b784:	b.ls	40b794 <ferror@plt+0x81c4>  // b.plast
  40b788:	mov	x1, x0
  40b78c:	mov	x0, x19
  40b790:	bl	45c22c <_obstack_newchunk@@Base>
  40b794:	ldr	x0, [x19, #24]
  40b798:	mov	x2, x21
  40b79c:	mov	x1, x22
  40b7a0:	bl	402cd0 <memcpy@plt>
  40b7a4:	ldp	x2, x0, [x19, #24]
  40b7a8:	add	x21, x2, x21
  40b7ac:	str	x21, [x19, #24]
  40b7b0:	cmp	x21, x0
  40b7b4:	b.ne	40b7c4 <ferror@plt+0x81f4>  // b.any
  40b7b8:	mov	x0, x19
  40b7bc:	mov	x1, #0x1                   	// #1
  40b7c0:	bl	45c22c <_obstack_newchunk@@Base>
  40b7c4:	ldr	x0, [x19, #24]
  40b7c8:	mov	w1, #0x27                  	// #39
  40b7cc:	add	x26, x26, #0x8
  40b7d0:	strb	w1, [x0]
  40b7d4:	ldr	x0, [x19, #24]
  40b7d8:	add	x0, x0, #0x1
  40b7dc:	str	x0, [x19, #24]
  40b7e0:	b	40b6ac <ferror@plt+0x80dc>
  40b7e4:	add	x23, x23, #0x1
  40b7e8:	mov	w3, #0x0                   	// #0
  40b7ec:	b	40b504 <ferror@plt+0x7f34>
  40b7f0:	cmp	x2, x1
  40b7f4:	b.ne	40b800 <ferror@plt+0x8230>  // b.any
  40b7f8:	mov	x1, #0x1                   	// #1
  40b7fc:	bl	45c22c <_obstack_newchunk@@Base>
  40b800:	ldr	x1, [x20, #144]
  40b804:	strb	wzr, [x1]
  40b808:	ldp	x1, x2, [x20, #136]
  40b80c:	add	x2, x2, #0x1
  40b810:	cmp	x2, x1
  40b814:	b.ne	40b824 <ferror@plt+0x8254>  // b.any
  40b818:	ldrb	w3, [x20, #200]
  40b81c:	orr	w3, w3, #0x2
  40b820:	strb	w3, [x20, #200]
  40b824:	ldr	x0, [x20, #168]
  40b828:	add	x3, x20, #0x78
  40b82c:	ldr	x4, [x3, #32]
  40b830:	add	x2, x2, x0
  40b834:	bic	x0, x2, x0
  40b838:	ldr	x2, [x3, #8]
  40b83c:	ldp	x21, x22, [sp, #32]
  40b840:	sub	x5, x0, x2
  40b844:	sub	x2, x4, x2
  40b848:	cmp	x5, x2
  40b84c:	csel	x0, x0, x4, ls  // ls = plast
  40b850:	ldp	x23, x24, [sp, #48]
  40b854:	ldp	x25, x26, [sp, #64]
  40b858:	ldp	x27, x28, [sp, #80]
  40b85c:	stp	x0, x0, [x3, #16]
  40b860:	add	x0, x20, #0x190
  40b864:	ldp	x19, x20, [sp, #16]
  40b868:	ldp	x29, x30, [sp], #96
  40b86c:	b	40a3dc <ferror@plt+0x6e0c>
  40b870:	stp	x29, x30, [sp, #-48]!
  40b874:	mov	x29, sp
  40b878:	str	x0, [sp, #40]
  40b87c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40b880:	add	x0, x0, #0x518
  40b884:	stp	x19, x20, [sp, #16]
  40b888:	mov	w19, w1
  40b88c:	mov	w20, w2
  40b890:	ldrb	w1, [x0, #264]
  40b894:	cbz	w1, 40b8ec <ferror@plt+0x831c>
  40b898:	add	x1, sp, #0x28
  40b89c:	add	x0, x0, #0x8
  40b8a0:	bl	410368 <ferror@plt+0xcd98>
  40b8a4:	orr	w0, w19, w20
  40b8a8:	cbz	w0, 40b8e0 <ferror@plt+0x8310>
  40b8ac:	ldr	x0, [sp, #40]
  40b8b0:	ldrb	w1, [x0]
  40b8b4:	cmp	w1, #0x2d
  40b8b8:	b.ne	40b8d0 <ferror@plt+0x8300>  // b.any
  40b8bc:	mov	w1, #0x3d                  	// #61
  40b8c0:	bl	403130 <strrchr@plt>
  40b8c4:	cbz	x0, 40b8d0 <ferror@plt+0x8300>
  40b8c8:	add	x0, x0, #0x1
  40b8cc:	str	x0, [sp, #40]
  40b8d0:	ldr	x0, [sp, #40]
  40b8d4:	mov	w2, w20
  40b8d8:	mov	w1, w19
  40b8dc:	bl	407e34 <ferror@plt+0x4864>
  40b8e0:	ldp	x19, x20, [sp, #16]
  40b8e4:	ldp	x29, x30, [sp], #48
  40b8e8:	ret
  40b8ec:	add	x1, sp, #0x28
  40b8f0:	b	40b8a0 <ferror@plt+0x82d0>
  40b8f4:	stp	x29, x30, [sp, #-64]!
  40b8f8:	mov	x29, sp
  40b8fc:	stp	x19, x20, [sp, #16]
  40b900:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40b904:	add	x20, x20, #0x518
  40b908:	stp	x21, x22, [sp, #32]
  40b90c:	ldrb	w0, [x20, #264]
  40b910:	stp	x23, x24, [sp, #48]
  40b914:	cbnz	w0, 40b92c <ferror@plt+0x835c>
  40b918:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40b91c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b920:	add	x1, x1, #0xe17
  40b924:	ldr	w0, [x0, #584]
  40b928:	bl	422d58 <ferror@plt+0x1f788>
  40b92c:	ldr	x0, [x20, #8]
  40b930:	strb	wzr, [x20, #264]
  40b934:	cbz	x0, 40ba48 <ferror@plt+0x8478>
  40b938:	ldr	w22, [x0, #4]
  40b93c:	cbz	w22, 40ba48 <ferror@plt+0x8478>
  40b940:	add	w0, w22, #0x1
  40b944:	lsl	x0, x0, #3
  40b948:	add	x0, x0, #0xf
  40b94c:	and	x0, x0, #0xffffffff0
  40b950:	sub	sp, sp, x0
  40b954:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  40b958:	add	x0, x0, #0x122
  40b95c:	bl	45c0d8 <ferror@plt+0x58b08>
  40b960:	mov	x2, #0x0                   	// #0
  40b964:	mov	x1, x0
  40b968:	mov	x19, x0
  40b96c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b970:	add	x0, x0, #0xe3e
  40b974:	bl	45a668 <ferror@plt+0x57098>
  40b978:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x40c10>
  40b97c:	mov	x23, x0
  40b980:	add	x1, x1, #0x935
  40b984:	mov	x0, x19
  40b988:	bl	402f20 <fopen@plt>
  40b98c:	mov	x21, x0
  40b990:	ldr	x0, [x20, #8]
  40b994:	mov	x24, sp
  40b998:	mov	x1, #0x0                   	// #0
  40b99c:	add	x3, x0, #0x8
  40b9a0:	cmp	w22, w1
  40b9a4:	b.ls	40b9b8 <ferror@plt+0x83e8>  // b.plast
  40b9a8:	ldr	x2, [x3, x1, lsl #3]
  40b9ac:	str	x2, [x24, x1, lsl #3]
  40b9b0:	add	x1, x1, #0x1
  40b9b4:	b	40b9a0 <ferror@plt+0x83d0>
  40b9b8:	str	xzr, [x24, w22, uxtw #3]
  40b9bc:	cbz	x0, 40b9c4 <ferror@plt+0x83f4>
  40b9c0:	str	wzr, [x0, #4]
  40b9c4:	cbnz	x21, 40b9e0 <ferror@plt+0x8410>
  40b9c8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b9cc:	mov	x2, x19
  40b9d0:	add	x1, x1, #0xe40
  40b9d4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40b9d8:	ldr	w0, [x0, #584]
  40b9dc:	bl	422d58 <ferror@plt+0x1f788>
  40b9e0:	mov	x1, x21
  40b9e4:	mov	x0, x24
  40b9e8:	bl	45a038 <ferror@plt+0x56a68>
  40b9ec:	cbz	w0, 40ba00 <ferror@plt+0x8430>
  40b9f0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40b9f4:	mov	x2, x19
  40b9f8:	add	x1, x1, #0xe6a
  40b9fc:	b	40b9d4 <ferror@plt+0x8404>
  40ba00:	mov	x0, x21
  40ba04:	bl	402ee0 <fclose@plt>
  40ba08:	cmn	w0, #0x1
  40ba0c:	b.ne	40ba20 <ferror@plt+0x8450>  // b.any
  40ba10:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40ba14:	mov	x2, x19
  40ba18:	add	x1, x1, #0xe98
  40ba1c:	b	40b9d4 <ferror@plt+0x8404>
  40ba20:	mov	x0, x23
  40ba24:	mov	w2, #0x0                   	// #0
  40ba28:	mov	w1, #0x0                   	// #0
  40ba2c:	bl	40b870 <ferror@plt+0x82a0>
  40ba30:	ldr	w0, [x20, #692]
  40ba34:	cmp	w0, #0x0
  40ba38:	mov	x0, x19
  40ba3c:	cset	w2, eq  // eq = none
  40ba40:	mov	w1, w2
  40ba44:	bl	407e34 <ferror@plt+0x4864>
  40ba48:	mov	sp, x29
  40ba4c:	ldp	x19, x20, [sp, #16]
  40ba50:	ldp	x21, x22, [sp, #32]
  40ba54:	ldp	x23, x24, [sp, #48]
  40ba58:	ldp	x29, x30, [sp], #64
  40ba5c:	ret
  40ba60:	stp	x29, x30, [sp, #-48]!
  40ba64:	mov	x29, sp
  40ba68:	stp	x19, x20, [sp, #16]
  40ba6c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ba70:	add	x19, x19, #0x518
  40ba74:	str	x21, [sp, #32]
  40ba78:	ldr	w0, [x19, #872]
  40ba7c:	cbz	w0, 40bb84 <ferror@plt+0x85b4>
  40ba80:	add	x0, x19, #0x138
  40ba84:	ldp	x1, x2, [x0, #24]
  40ba88:	cmp	x2, x1
  40ba8c:	b.ne	40ba98 <ferror@plt+0x84c8>  // b.any
  40ba90:	mov	x1, #0x1                   	// #1
  40ba94:	bl	45c22c <_obstack_newchunk@@Base>
  40ba98:	ldr	x0, [x19, #336]
  40ba9c:	add	x2, x0, #0x1
  40baa0:	str	x2, [x19, #336]
  40baa4:	strb	wzr, [x0]
  40baa8:	ldp	x20, x2, [x19, #328]
  40baac:	cmp	x20, x2
  40bab0:	b.ne	40bac0 <ferror@plt+0x84f0>  // b.any
  40bab4:	ldrb	w0, [x19, #392]
  40bab8:	orr	w0, w0, #0x2
  40babc:	strb	w0, [x19, #392]
  40bac0:	ldr	x0, [x19, #360]
  40bac4:	ldr	x3, [x19, #344]
  40bac8:	add	x2, x2, x0
  40bacc:	bic	x0, x2, x0
  40bad0:	ldr	x2, [x19, #320]
  40bad4:	sub	x4, x0, x2
  40bad8:	sub	x2, x3, x2
  40badc:	cmp	x4, x2
  40bae0:	csel	x0, x0, x3, ls  // ls = plast
  40bae4:	stp	x0, x0, [x19, #328]
  40bae8:	ldr	w0, [x19, #884]
  40baec:	cbz	w0, 40bafc <ferror@plt+0x852c>
  40baf0:	mov	x0, x20
  40baf4:	bl	406c40 <ferror@plt+0x3670>
  40baf8:	mov	x20, x0
  40bafc:	ldr	w0, [x19, #888]
  40bb00:	cbz	w0, 40bb5c <ferror@plt+0x858c>
  40bb04:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40bb08:	add	x0, x0, #0x4a0
  40bb0c:	mov	x1, x20
  40bb10:	add	x0, x0, #0x848
  40bb14:	mov	w3, #0x1                   	// #1
  40bb18:	mov	w2, #0x4                   	// #4
  40bb1c:	bl	406ba8 <ferror@plt+0x35d8>
  40bb20:	mov	x21, x0
  40bb24:	cbnz	x0, 40bb44 <ferror@plt+0x8574>
  40bb28:	mov	x1, x20
  40bb2c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bb30:	ldp	x19, x20, [sp, #16]
  40bb34:	add	x0, x0, #0xec3
  40bb38:	ldr	x21, [sp, #32]
  40bb3c:	ldp	x29, x30, [sp], #48
  40bb40:	b	4221dc <ferror@plt+0x1ec0c>
  40bb44:	mov	x20, x21
  40bb48:	mov	w2, #0x0                   	// #0
  40bb4c:	mov	w1, #0x0                   	// #0
  40bb50:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bb54:	add	x0, x0, #0xf0a
  40bb58:	bl	40b870 <ferror@plt+0x82a0>
  40bb5c:	ldr	w1, [x19, #876]
  40bb60:	mov	x0, x20
  40bb64:	ldr	w2, [x19, #880]
  40bb68:	bl	40b870 <ferror@plt+0x82a0>
  40bb6c:	ldr	w0, [x19, #880]
  40bb70:	cbz	w0, 40bb80 <ferror@plt+0x85b0>
  40bb74:	ldrsw	x1, [x19, #868]
  40bb78:	ldr	x0, [x19, #240]
  40bb7c:	str	x20, [x0, x1, lsl #3]
  40bb80:	str	wzr, [x19, #872]
  40bb84:	ldp	x19, x20, [sp, #16]
  40bb88:	ldr	x21, [sp, #32]
  40bb8c:	ldp	x29, x30, [sp], #48
  40bb90:	ret
  40bb94:	stp	x29, x30, [sp, #-160]!
  40bb98:	mov	x29, sp
  40bb9c:	stp	x19, x20, [sp, #16]
  40bba0:	stp	x21, x22, [sp, #32]
  40bba4:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40bba8:	add	x19, x21, #0x518
  40bbac:	stp	x25, x26, [sp, #64]
  40bbb0:	ldr	w26, [x19, #760]
  40bbb4:	stp	x23, x24, [sp, #48]
  40bbb8:	stp	x27, x28, [sp, #80]
  40bbbc:	stp	d8, d9, [sp, #96]
  40bbc0:	str	d10, [sp, #112]
  40bbc4:	cbz	w26, 40bbe0 <ferror@plt+0x8610>
  40bbc8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bbcc:	add	x2, x2, #0xf13
  40bbd0:	mov	w1, #0xbe0                 	// #3040
  40bbd4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40bbd8:	add	x0, x0, #0x6e9
  40bbdc:	bl	403600 <ferror@plt+0x30>
  40bbe0:	adrp	x24, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40bbe4:	add	x24, x24, #0x230
  40bbe8:	ldr	x0, [x24, #3832]
  40bbec:	cbz	x0, 40bcf4 <ferror@plt+0x8724>
  40bbf0:	ldr	x0, [x21, #1304]
  40bbf4:	mov	w3, #0x0                   	// #0
  40bbf8:	mov	w2, #0x1                   	// #1
  40bbfc:	ldr	x1, [x0, #8]
  40bc00:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40bc04:	add	x0, x0, #0x4a0
  40bc08:	add	x0, x0, #0x890
  40bc0c:	bl	406ba8 <ferror@plt+0x35d8>
  40bc10:	cbz	x0, 40bc1c <ferror@plt+0x864c>
  40bc14:	ldr	x1, [x21, #1304]
  40bc18:	str	x0, [x1, #8]
  40bc1c:	ldr	x0, [x24, #3832]
  40bc20:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40bc24:	mov	x20, x0
  40bc28:	ldr	x0, [x21, #1304]
  40bc2c:	cbz	x0, 40bc58 <ferror@plt+0x8688>
  40bc30:	ldr	w25, [x0, #4]
  40bc34:	mov	x0, x20
  40bc38:	mov	w22, #0x0                   	// #0
  40bc3c:	mov	w23, w22
  40bc40:	add	w22, w22, #0x1
  40bc44:	ldrb	w1, [x0]
  40bc48:	cmp	w1, #0x2c
  40bc4c:	b.ne	40bc60 <ferror@plt+0x8690>  // b.any
  40bc50:	add	x0, x0, #0x1
  40bc54:	b	40bc44 <ferror@plt+0x8674>
  40bc58:	mov	w25, #0x0                   	// #0
  40bc5c:	b	40bc34 <ferror@plt+0x8664>
  40bc60:	mov	w1, #0x2c                  	// #44
  40bc64:	bl	4032f0 <strchr@plt>
  40bc68:	cbnz	x0, 40bc3c <ferror@plt+0x866c>
  40bc6c:	mov	w1, w22
  40bc70:	mov	x0, x19
  40bc74:	mov	w2, #0x1                   	// #1
  40bc78:	bl	410274 <ferror@plt+0xcca4>
  40bc7c:	ldr	x1, [x21, #1304]
  40bc80:	add	w27, w22, w25
  40bc84:	cbz	x1, 40bc90 <ferror@plt+0x86c0>
  40bc88:	add	x1, x1, #0x8
  40bc8c:	stur	w27, [x1, #-4]
  40bc90:	ubfiz	x2, x25, #3, #32
  40bc94:	add	x0, x1, w22, sxtw #3
  40bc98:	bl	402ce0 <memmove@plt>
  40bc9c:	mov	w22, #0x0                   	// #0
  40bca0:	ldr	x25, [x21, #1304]
  40bca4:	ldrb	w0, [x20]
  40bca8:	cmp	w0, #0x2c
  40bcac:	b.ne	40bcc0 <ferror@plt+0x86f0>  // b.any
  40bcb0:	strb	wzr, [x20], #1
  40bcb4:	b	40bca4 <ferror@plt+0x86d4>
  40bcb8:	add	w22, w22, #0x1
  40bcbc:	b	40bca4 <ferror@plt+0x86d4>
  40bcc0:	add	x0, x25, w22, uxtw #3
  40bcc4:	mov	w1, #0x2c                  	// #44
  40bcc8:	str	x20, [x0, #8]
  40bccc:	mov	x0, x20
  40bcd0:	bl	4032f0 <strchr@plt>
  40bcd4:	mov	x20, x0
  40bcd8:	cbnz	x0, 40bcb8 <ferror@plt+0x86e8>
  40bcdc:	cmp	w23, w22
  40bce0:	b.eq	40bcf4 <ferror@plt+0x8724>  // b.none
  40bce4:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bce8:	mov	w1, #0x1371                	// #4977
  40bcec:	add	x2, x2, #0xf1b
  40bcf0:	b	40bbd4 <ferror@plt+0x8604>
  40bcf4:	ldr	x23, [x21, #1304]
  40bcf8:	mov	x20, #0x1                   	// #1
  40bcfc:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bd00:	mov	w22, w20
  40bd04:	add	x25, x25, #0xf2f
  40bd08:	cbz	x23, 40bd38 <ferror@plt+0x8768>
  40bd0c:	ldr	w1, [x23, #4]
  40bd10:	sub	w0, w20, #0x1
  40bd14:	cmp	w0, w1
  40bd18:	b.cs	40bd38 <ferror@plt+0x8768>  // b.hs, b.nlast
  40bd1c:	ldr	x0, [x23, x20, lsl #3]
  40bd20:	mov	x1, x25
  40bd24:	add	x20, x20, #0x1
  40bd28:	bl	403220 <strcmp@plt>
  40bd2c:	cmp	w0, #0x0
  40bd30:	cinc	w22, w22, eq  // eq = none
  40bd34:	b	40bd08 <ferror@plt+0x8738>
  40bd38:	sub	sp, sp, w22, sxtw #4
  40bd3c:	add	x1, x29, #0x98
  40bd40:	mov	x0, x19
  40bd44:	str	xzr, [x29, #152]
  40bd48:	bl	410368 <ferror@plt+0xcd98>
  40bd4c:	mov	x20, sp
  40bd50:	ldr	x21, [x21, #1304]
  40bd54:	mov	x0, x21
  40bd58:	ldr	x1, [x0, #8]!
  40bd5c:	stp	x1, x0, [x20]
  40bd60:	ldr	x0, [x24, #3832]
  40bd64:	cbnz	x0, 40bd8c <ferror@plt+0x87bc>
  40bd68:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40bd6c:	add	x0, x0, #0x4a0
  40bd70:	add	x0, x0, #0x890
  40bd74:	mov	w3, #0x0                   	// #0
  40bd78:	mov	w2, #0x1                   	// #1
  40bd7c:	bl	406ba8 <ferror@plt+0x35d8>
  40bd80:	cbnz	x0, 40bd88 <ferror@plt+0x87b8>
  40bd84:	ldr	x0, [x21, #8]
  40bd88:	str	x0, [x21, #8]
  40bd8c:	adrp	x25, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40bd90:	add	x25, x25, #0x4a0
  40bd94:	adrp	x27, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bd98:	add	x25, x25, #0x890
  40bd9c:	add	x27, x27, #0xf2f
  40bda0:	mov	x2, #0x0                   	// #0
  40bda4:	mov	w22, #0x1                   	// #1
  40bda8:	ldr	x23, [x19]
  40bdac:	mov	w28, w2
  40bdb0:	cbz	x23, 40be34 <ferror@plt+0x8864>
  40bdb4:	ldr	w0, [x23, #4]
  40bdb8:	cmp	w0, w2
  40bdbc:	b.ls	40be34 <ferror@plt+0x8864>  // b.plast
  40bdc0:	add	x3, x23, x2, lsl #3
  40bdc4:	str	x3, [x29, #136]
  40bdc8:	add	x21, x2, #0x1
  40bdcc:	ldr	x0, [x3, #8]
  40bdd0:	cbz	x0, 40be2c <ferror@plt+0x885c>
  40bdd4:	mov	x1, x27
  40bdd8:	bl	403220 <strcmp@plt>
  40bddc:	ldr	x3, [x29, #136]
  40bde0:	cbnz	w0, 40be2c <ferror@plt+0x885c>
  40bde4:	add	w28, w28, #0x1
  40bde8:	sbfiz	x0, x22, #4, #32
  40bdec:	str	xzr, [x3, #8]
  40bdf0:	add	x2, x20, w22, sxtw #4
  40bdf4:	add	x28, x23, x28, lsl #3
  40bdf8:	add	x23, x23, #0x8
  40bdfc:	mov	w3, #0x0                   	// #0
  40be00:	ldr	x1, [x28, #8]
  40be04:	str	x1, [x20, x0]
  40be08:	add	x0, x23, x21, lsl #3
  40be0c:	str	x0, [x2, #8]
  40be10:	lsl	x28, x21, #3
  40be14:	mov	x0, x25
  40be18:	mov	w2, #0x1                   	// #1
  40be1c:	bl	406ba8 <ferror@plt+0x35d8>
  40be20:	cbz	x0, 40be28 <ferror@plt+0x8858>
  40be24:	str	x0, [x23, x28]
  40be28:	add	w22, w22, #0x1
  40be2c:	mov	x2, x21
  40be30:	b	40bda8 <ferror@plt+0x87d8>
  40be34:	ldr	w0, [x24, #3816]
  40be38:	cbz	w0, 40bfac <ferror@plt+0x89dc>
  40be3c:	ldr	w0, [x19, #608]
  40be40:	cbz	w0, 40be54 <ferror@plt+0x8884>
  40be44:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40be48:	ldr	x1, [x0, #1264]
  40be4c:	mov	w0, #0xa                   	// #10
  40be50:	bl	402e40 <fputc@plt>
  40be54:	add	x25, x20, #0x8
  40be58:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40be5c:	mov	w23, #0x0                   	// #0
  40be60:	add	x0, x0, #0x228
  40be64:	str	x0, [x29, #136]
  40be68:	ldr	w0, [x19, #668]
  40be6c:	ldr	x21, [x25]
  40be70:	cbnz	w0, 40bec0 <ferror@plt+0x88f0>
  40be74:	adrp	x27, 485000 <_obstack_memory_used@@Base+0x28c10>
  40be78:	adrp	x28, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40be7c:	add	x27, x27, #0x11c
  40be80:	add	x28, x28, #0xf2a
  40be84:	ldr	x2, [x21]
  40be88:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40be8c:	ldr	x0, [x0, #1264]
  40be90:	cbz	x2, 40bf28 <ferror@plt+0x8958>
  40be94:	ldrb	w1, [x2]
  40be98:	cbnz	w1, 40bf1c <ferror@plt+0x894c>
  40be9c:	mov	x1, x0
  40bea0:	mov	x0, x28
  40bea4:	bl	402d60 <fputs@plt>
  40bea8:	add	x21, x21, #0x8
  40beac:	b	40be84 <ferror@plt+0x88b4>
  40beb0:	ldr	x1, [x27, #1264]
  40beb4:	mov	w0, #0x22                  	// #34
  40beb8:	bl	402e40 <fputc@plt>
  40bebc:	add	x21, x21, #0x8
  40bec0:	ldr	x2, [x21]
  40bec4:	cbz	x2, 40bf28 <ferror@plt+0x8958>
  40bec8:	mov	x1, x2
  40becc:	mov	w3, #0x8c                  	// #140
  40bed0:	ldrb	w0, [x1]
  40bed4:	cbz	w0, 40c468 <ferror@plt+0x8e98>
  40bed8:	ldr	x4, [x29, #136]
  40bedc:	ldrh	w4, [x4, w0, sxtw #1]
  40bee0:	tst	w3, w4
  40bee4:	b.ne	40bf00 <ferror@plt+0x8930>  // b.any
  40bee8:	cmp	w0, #0x5f
  40beec:	b.eq	40bf00 <ferror@plt+0x8930>  // b.none
  40bef0:	sub	w0, w0, #0x2d
  40bef4:	and	w0, w0, #0xff
  40bef8:	cmp	w0, #0x2
  40befc:	b.hi	40c3fc <ferror@plt+0x8e2c>  // b.pmore
  40bf00:	add	x1, x1, #0x1
  40bf04:	b	40bed0 <ferror@plt+0x8900>
  40bf08:	mov	x1, x0
  40bf0c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bf10:	add	x0, x0, #0xf2a
  40bf14:	bl	402d60 <fputs@plt>
  40bf18:	b	40bebc <ferror@plt+0x88ec>
  40bf1c:	mov	x1, x27
  40bf20:	bl	403590 <fprintf@plt>
  40bf24:	b	40bea8 <ferror@plt+0x88d8>
  40bf28:	add	w23, w23, #0x1
  40bf2c:	adrp	x27, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40bf30:	cmp	w23, w22
  40bf34:	add	x21, x27, #0x4f0
  40bf38:	b.eq	40bf4c <ferror@plt+0x897c>  // b.none
  40bf3c:	ldr	x1, [x27, #1264]
  40bf40:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40bf44:	add	x0, x0, #0xf2e
  40bf48:	bl	402d60 <fputs@plt>
  40bf4c:	ldr	x1, [x27, #1264]
  40bf50:	mov	w0, #0xa                   	// #10
  40bf54:	add	x25, x25, #0x10
  40bf58:	bl	402e40 <fputc@plt>
  40bf5c:	cmp	w23, w22
  40bf60:	b.ne	40be68 <ferror@plt+0x8898>  // b.any
  40bf64:	ldr	x0, [x21]
  40bf68:	bl	403350 <fflush@plt>
  40bf6c:	ldr	w0, [x19, #668]
  40bf70:	cbz	w0, 40bfac <ferror@plt+0x89dc>
  40bf74:	ldr	w0, [x19, #776]
  40bf78:	add	w0, w0, #0x1
  40bf7c:	str	w0, [x19, #776]
  40bf80:	mov	sp, x29
  40bf84:	mov	w0, w26
  40bf88:	ldp	x19, x20, [sp, #16]
  40bf8c:	ldp	x21, x22, [sp, #32]
  40bf90:	ldp	x23, x24, [sp, #48]
  40bf94:	ldp	x25, x26, [sp, #64]
  40bf98:	ldp	x27, x28, [sp, #80]
  40bf9c:	ldp	d8, d9, [sp, #96]
  40bfa0:	ldr	d10, [sp, #112]
  40bfa4:	ldp	x29, x30, [sp], #160
  40bfa8:	ret
  40bfac:	ldr	w0, [x24, #3808]
  40bfb0:	cbnz	w0, 40c06c <ferror@plt+0x8a9c>
  40bfb4:	ldr	x0, [x19, #680]
  40bfb8:	cmp	x0, #0x0
  40bfbc:	cset	w0, ne  // ne = any
  40bfc0:	add	w0, w0, #0x2
  40bfc4:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40bfc8:	mov	x27, x20
  40bfcc:	ldr	x2, [x19, #784]
  40bfd0:	mov	w21, #0x0                   	// #0
  40bfd4:	ldr	x1, [x1, #208]
  40bfd8:	bl	45d55c <_obstack_memory_used@@Base+0x116c>
  40bfdc:	mov	x25, x0
  40bfe0:	ldp	x7, x3, [x27]
  40bfe4:	mov	w8, w21
  40bfe8:	add	w21, w21, #0x1
  40bfec:	add	x6, x29, #0x98
  40bff0:	cmp	w21, w22
  40bff4:	mov	x5, #0x0                   	// #0
  40bff8:	cset	w0, eq  // eq = none
  40bffc:	mov	x4, #0x0                   	// #0
  40c000:	str	w8, [x29, #128]
  40c004:	ldr	x23, [x3]
  40c008:	str	x7, [x29, #136]
  40c00c:	cmp	x7, x23
  40c010:	mov	x2, x23
  40c014:	cset	w1, eq  // eq = none
  40c018:	orr	w1, w0, w1, lsl #1
  40c01c:	mov	x0, x25
  40c020:	bl	45caac <_obstack_memory_used@@Base+0x6bc>
  40c024:	mov	x28, x0
  40c028:	ldr	w8, [x29, #128]
  40c02c:	ldr	x7, [x29, #136]
  40c030:	cbz	x0, 40c074 <ferror@plt+0x8aa4>
  40c034:	bl	4034e0 <__errno_location@plt>
  40c038:	ldr	w2, [x29, #152]
  40c03c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40c040:	add	x1, x1, #0x863
  40c044:	str	w2, [x0]
  40c048:	cmp	w2, #0x0
  40c04c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40c050:	add	x0, x0, #0x848
  40c054:	mov	x3, x28
  40c058:	csel	x1, x0, x1, ne  // ne = any
  40c05c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40c060:	mov	x2, x23
  40c064:	ldr	w0, [x0, #584]
  40c068:	bl	422d58 <ferror@plt+0x1f788>
  40c06c:	mov	w0, #0x3                   	// #3
  40c070:	b	40bfc4 <ferror@plt+0x89f4>
  40c074:	cbz	w8, 40c088 <ferror@plt+0x8ab8>
  40c078:	cmp	x7, x23
  40c07c:	b.eq	40c088 <ferror@plt+0x8ab8>  // b.none
  40c080:	mov	x0, x23
  40c084:	bl	4032a0 <free@plt>
  40c088:	add	x27, x27, #0x10
  40c08c:	cmp	w21, w22
  40c090:	b.ne	40bfe0 <ferror@plt+0x8a10>  // b.any
  40c094:	ldr	w0, [x19, #776]
  40c098:	mov	w1, w21
  40c09c:	add	w0, w0, #0x1
  40c0a0:	str	w0, [x19, #776]
  40c0a4:	sbfiz	x0, x21, #2, #32
  40c0a8:	add	x0, x0, #0xf
  40c0ac:	and	x0, x0, #0xfffffffffffffff0
  40c0b0:	sub	sp, sp, x0
  40c0b4:	mov	x0, x25
  40c0b8:	mov	x27, sp
  40c0bc:	mov	x2, x27
  40c0c0:	bl	45cd68 <_obstack_memory_used@@Base+0x978>
  40c0c4:	cbnz	w0, 40c0dc <ferror@plt+0x8b0c>
  40c0c8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c0cc:	add	x1, x1, #0xf31
  40c0d0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40c0d4:	ldr	w0, [x0, #584]
  40c0d8:	bl	422d58 <ferror@plt+0x1f788>
  40c0dc:	ldr	w0, [x24, #3808]
  40c0e0:	cbnz	w0, 40c0ec <ferror@plt+0x8b1c>
  40c0e4:	ldr	x23, [x19, #680]
  40c0e8:	cbz	x23, 40c118 <ferror@plt+0x8b48>
  40c0ec:	sbfiz	x0, x22, #5, #32
  40c0f0:	mov	w1, w22
  40c0f4:	sub	sp, sp, x0
  40c0f8:	mov	x0, x25
  40c0fc:	mov	x23, sp
  40c100:	mov	x2, x23
  40c104:	bl	45cde4 <_obstack_memory_used@@Base+0x9f4>
  40c108:	cbnz	w0, 40c118 <ferror@plt+0x8b48>
  40c10c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c110:	add	x1, x1, #0xf4f
  40c114:	b	40c0d0 <ferror@plt+0x8b00>
  40c118:	mov	x0, x25
  40c11c:	bl	45ce74 <_obstack_memory_used@@Base+0xa84>
  40c120:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  40c124:	mov	x21, #0x0                   	// #0
  40c128:	ldr	d10, [x0, #720]
  40c12c:	ldr	w25, [x27, x21, lsl #2]
  40c130:	and	w0, w25, #0x7f
  40c134:	add	w1, w0, #0x1
  40c138:	sbfx	x1, x1, #1, #7
  40c13c:	cmp	w1, #0x0
  40c140:	b.le	40c2c4 <ferror@plt+0x8cf4>
  40c144:	sub	w2, w0, #0x2
  40c148:	cmp	w2, #0xd
  40c14c:	b.hi	40c2a8 <ferror@plt+0x8cd8>  // b.pmore
  40c150:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40c154:	add	x1, x1, #0x724
  40c158:	ldrb	w1, [x1, w2, uxtw]
  40c15c:	adr	x2, 40c168 <ferror@plt+0x8b98>
  40c160:	add	x1, x2, w1, sxtb #2
  40c164:	br	x1
  40c168:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40c16c:	lsl	x21, x21, #4
  40c170:	ldr	w19, [x1, #584]
  40c174:	bl	4034a0 <strsignal@plt>
  40c178:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c17c:	mov	x2, x0
  40c180:	add	x1, x1, #0xf6f
  40c184:	mov	w0, w19
  40c188:	ldr	x3, [x20, x21]
  40c18c:	b	40c068 <ferror@plt+0x8a98>
  40c190:	ldr	w1, [x19, #644]
  40c194:	cbnz	w1, 40c1ac <ferror@plt+0x8bdc>
  40c198:	adrp	x2, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40c19c:	add	x2, x2, #0x4a0
  40c1a0:	ldr	w2, [x2, #2232]
  40c1a4:	cmp	w2, #0x0
  40c1a8:	b.le	40c2a8 <ferror@plt+0x8cd8>
  40c1ac:	add	w1, w1, #0x1
  40c1b0:	str	w1, [x19, #644]
  40c1b4:	mov	w26, #0xffffffff            	// #-1
  40c1b8:	ldr	w0, [x24, #3808]
  40c1bc:	cbnz	w0, 40c1c8 <ferror@plt+0x8bf8>
  40c1c0:	ldr	x1, [x19, #680]
  40c1c4:	cbz	x1, 40c364 <ferror@plt+0x8d94>
  40c1c8:	ldp	d0, d8, [x23]
  40c1cc:	ldp	d1, d9, [x23, #16]
  40c1d0:	ucvtf	d8, d8
  40c1d4:	ucvtf	d0, d0
  40c1d8:	ucvtf	d9, d9
  40c1dc:	ucvtf	d1, d1
  40c1e0:	fdiv	d8, d8, d10
  40c1e4:	fdiv	d9, d9, d10
  40c1e8:	fadd	d8, d8, d0
  40c1ec:	fadd	d9, d9, d1
  40c1f0:	fadd	d0, d8, d9
  40c1f4:	fcmp	d0, #0.0
  40c1f8:	b.eq	40c364 <ferror@plt+0x8d94>  // b.none
  40c1fc:	cbz	w0, 40c224 <ferror@plt+0x8c54>
  40c200:	lsl	x0, x21, #4
  40c204:	fmov	d1, d9
  40c208:	fmov	d0, d8
  40c20c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c210:	add	x1, x1, #0xf93
  40c214:	ldr	x2, [x20, x0]
  40c218:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c21c:	ldr	x0, [x0, #1264]
  40c220:	bl	421398 <ferror@plt+0x1ddc8>
  40c224:	ldr	x0, [x19, #680]
  40c228:	cbz	x0, 40c364 <ferror@plt+0x8d94>
  40c22c:	fmov	d1, d9
  40c230:	fmov	d0, d8
  40c234:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c238:	add	x1, x1, #0xfa3
  40c23c:	add	x28, x20, x21, lsl #4
  40c240:	mov	x25, #0x8                   	// #8
  40c244:	bl	403590 <fprintf@plt>
  40c248:	lsl	x0, x21, #4
  40c24c:	str	x0, [x29, #136]
  40c250:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c254:	add	x0, x0, #0x518
  40c258:	str	x0, [x29, #128]
  40c25c:	ldr	x2, [x28]
  40c260:	cbz	x2, 40c358 <ferror@plt+0x8d88>
  40c264:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40c268:	mov	x1, x2
  40c26c:	add	x4, x4, #0x228
  40c270:	ldrb	w5, [x1]
  40c274:	cbz	w5, 40c38c <ferror@plt+0x8dbc>
  40c278:	sub	w0, w5, #0x22
  40c27c:	and	w0, w0, #0xff
  40c280:	cmp	w0, #0x3a
  40c284:	b.hi	40c298 <ferror@plt+0x8cc8>  // b.pmore
  40c288:	mov	x3, #0x5                   	// #5
  40c28c:	movk	x3, #0x400, lsl #48
  40c290:	lsr	x0, x3, x0
  40c294:	tbnz	w0, #0, 40c3a0 <ferror@plt+0x8dd0>
  40c298:	ldrh	w0, [x4, w5, sxtw #1]
  40c29c:	tbnz	w0, #6, 40c3a0 <ferror@plt+0x8dd0>
  40c2a0:	add	x1, x1, #0x1
  40c2a4:	b	40c270 <ferror@plt+0x8ca0>
  40c2a8:	lsl	x21, x21, #4
  40c2ac:	bl	4034a0 <strsignal@plt>
  40c2b0:	mov	x1, x0
  40c2b4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c2b8:	add	x0, x0, #0xf6f
  40c2bc:	ldr	x2, [x20, x21]
  40c2c0:	bl	422e04 <ferror@plt+0x1f834>
  40c2c4:	cbnz	w0, 40c1b8 <ferror@plt+0x8be8>
  40c2c8:	ubfx	x25, x25, #8, #8
  40c2cc:	cbz	w25, 40c1b8 <ferror@plt+0x8be8>
  40c2d0:	ldr	w0, [x24, #2880]
  40c2d4:	cbz	w0, 40c318 <ferror@plt+0x8d48>
  40c2d8:	cmp	w25, #0x4
  40c2dc:	b.ne	40c318 <ferror@plt+0x8d48>  // b.any
  40c2e0:	cbnz	x21, 40c318 <ferror@plt+0x8d48>
  40c2e4:	ldr	x26, [x20, #8]
  40c2e8:	mov	w1, #0x2f                  	// #47
  40c2ec:	ldr	x0, [x26]
  40c2f0:	bl	403130 <strrchr@plt>
  40c2f4:	cbz	x0, 40c318 <ferror@plt+0x8d48>
  40c2f8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c2fc:	add	x0, x0, #0x1
  40c300:	add	x1, x1, #0xf8f
  40c304:	mov	x2, #0x3                   	// #3
  40c308:	bl	402f80 <strncmp@plt>
  40c30c:	cbnz	w0, 40c318 <ferror@plt+0x8d48>
  40c310:	mov	x0, x26
  40c314:	bl	406360 <ferror@plt+0x2d90>
  40c318:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40c31c:	add	x0, x0, #0x4a0
  40c320:	ldr	w1, [x0, #2232]
  40c324:	cmp	w25, w1
  40c328:	b.le	40c1b4 <ferror@plt+0x8be4>
  40c32c:	str	w25, [x0, #2232]
  40c330:	b	40c1b4 <ferror@plt+0x8be4>
  40c334:	ldr	x1, [x19, #680]
  40c338:	mov	w0, #0x22                  	// #34
  40c33c:	bl	402e40 <fputc@plt>
  40c340:	ldr	x1, [x29, #136]
  40c344:	add	x0, x20, #0x8
  40c348:	ldr	x3, [x0, x1]
  40c34c:	add	x28, x3, x25
  40c350:	add	x25, x25, #0x8
  40c354:	b	40c25c <ferror@plt+0x8c8c>
  40c358:	ldr	x1, [x19, #680]
  40c35c:	mov	w0, #0xa                   	// #10
  40c360:	bl	402e40 <fputc@plt>
  40c364:	add	x21, x21, #0x1
  40c368:	add	x23, x23, #0x20
  40c36c:	cmp	w22, w21
  40c370:	b.gt	40c12c <ferror@plt+0x8b5c>
  40c374:	ldp	x1, x0, [x20]
  40c378:	ldr	x0, [x0]
  40c37c:	cmp	x0, x1
  40c380:	b.eq	40bf80 <ferror@plt+0x89b0>  // b.none
  40c384:	bl	4032a0 <free@plt>
  40c388:	b	40bf80 <ferror@plt+0x89b0>
  40c38c:	ldr	x0, [x19, #680]
  40c390:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  40c394:	add	x1, x1, #0x11c
  40c398:	bl	403590 <fprintf@plt>
  40c39c:	b	40c340 <ferror@plt+0x8d70>
  40c3a0:	ldr	x1, [x19, #680]
  40c3a4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c3a8:	add	x0, x0, #0xfa9
  40c3ac:	bl	402d60 <fputs@plt>
  40c3b0:	ldr	x28, [x28]
  40c3b4:	ldrb	w0, [x28]
  40c3b8:	cbz	w0, 40c334 <ferror@plt+0x8d64>
  40c3bc:	sub	w0, w0, #0x22
  40c3c0:	and	w0, w0, #0xff
  40c3c4:	cmp	w0, #0x3a
  40c3c8:	b.hi	40c3ec <ferror@plt+0x8e1c>  // b.pmore
  40c3cc:	mov	x1, #0x5                   	// #5
  40c3d0:	movk	x1, #0x400, lsl #48
  40c3d4:	lsr	x0, x1, x0
  40c3d8:	tbz	w0, #0, 40c3ec <ferror@plt+0x8e1c>
  40c3dc:	ldr	x0, [x29, #128]
  40c3e0:	ldr	x1, [x0, #680]
  40c3e4:	mov	w0, #0x5c                  	// #92
  40c3e8:	bl	402e40 <fputc@plt>
  40c3ec:	ldrb	w0, [x28], #1
  40c3f0:	ldr	x1, [x19, #680]
  40c3f4:	bl	402e40 <fputc@plt>
  40c3f8:	b	40c3b4 <ferror@plt+0x8de4>
  40c3fc:	adrp	x27, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c400:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c404:	add	x0, x0, #0xfa9
  40c408:	ldr	x1, [x27, #1264]
  40c40c:	bl	402d60 <fputs@plt>
  40c410:	ldr	x28, [x21]
  40c414:	ldrb	w0, [x28]
  40c418:	cbz	w0, 40beb0 <ferror@plt+0x88e0>
  40c41c:	sub	w0, w0, #0x22
  40c420:	and	w0, w0, #0xff
  40c424:	cmp	w0, #0x3a
  40c428:	b.hi	40c450 <ferror@plt+0x8e80>  // b.pmore
  40c42c:	mov	x1, #0x5                   	// #5
  40c430:	movk	x1, #0x400, lsl #48
  40c434:	lsr	x0, x1, x0
  40c438:	tbz	w0, #0, 40c450 <ferror@plt+0x8e80>
  40c43c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c440:	add	x0, x0, #0x4f0
  40c444:	ldr	x1, [x0]
  40c448:	mov	w0, #0x5c                  	// #92
  40c44c:	bl	402e40 <fputc@plt>
  40c450:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c454:	add	x0, x0, #0x4f0
  40c458:	ldr	x1, [x0]
  40c45c:	ldrb	w0, [x28], #1
  40c460:	bl	402e40 <fputc@plt>
  40c464:	b	40c414 <ferror@plt+0x8e44>
  40c468:	ldrb	w1, [x2]
  40c46c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c470:	ldr	x0, [x0, #1264]
  40c474:	cbz	w1, 40bf08 <ferror@plt+0x8938>
  40c478:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  40c47c:	add	x1, x1, #0x11c
  40c480:	bl	403590 <fprintf@plt>
  40c484:	b	40bebc <ferror@plt+0x88ec>
  40c488:	stp	x29, x30, [sp, #-32]!
  40c48c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c490:	mov	w2, #0x1                   	// #1
  40c494:	mov	x29, sp
  40c498:	str	x19, [sp, #16]
  40c49c:	add	x19, x0, #0x518
  40c4a0:	str	xzr, [x0, #1304]
  40c4a4:	mov	w1, #0xa                   	// #10
  40c4a8:	mov	x0, x19
  40c4ac:	bl	410274 <ferror@plt+0xcca4>
  40c4b0:	mov	x0, x19
  40c4b4:	mov	w2, #0x1                   	// #1
  40c4b8:	ldr	x19, [sp, #16]
  40c4bc:	mov	w1, #0xa                   	// #10
  40c4c0:	str	xzr, [x0, #8]!
  40c4c4:	ldp	x29, x30, [sp], #32
  40c4c8:	b	410274 <ferror@plt+0xcca4>
  40c4cc:	stp	x29, x30, [sp, #-32]!
  40c4d0:	mov	x29, sp
  40c4d4:	str	x19, [sp, #16]
  40c4d8:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c4dc:	bl	45a990 <ferror@plt+0x573c0>
  40c4e0:	bl	42ad94 <ferror@plt+0x277c4>
  40c4e4:	ldr	x0, [x19, #784]
  40c4e8:	mov	w1, #0x0                   	// #0
  40c4ec:	bl	420d50 <ferror@plt+0x1d780>
  40c4f0:	ldr	x0, [x19, #784]
  40c4f4:	mov	w1, #0xffffffff            	// #-1
  40c4f8:	bl	420e50 <ferror@plt+0x1d880>
  40c4fc:	adrp	x0, 407000 <ferror@plt+0x3a30>
  40c500:	add	x0, x0, #0x560
  40c504:	bl	476468 <_obstack_memory_used@@Base+0x1a078>
  40c508:	cbz	w0, 40c520 <ferror@plt+0x8f50>
  40c50c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40c510:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c514:	add	x1, x1, #0xfac
  40c518:	ldr	w0, [x0, #584]
  40c51c:	bl	422d58 <ferror@plt+0x1f788>
  40c520:	mov	x1, #0x1                   	// #1
  40c524:	mov	w0, #0x2                   	// #2
  40c528:	bl	402ed0 <signal@plt>
  40c52c:	cmp	x0, #0x1
  40c530:	b.eq	40c544 <ferror@plt+0x8f74>  // b.none
  40c534:	adrp	x1, 407000 <ferror@plt+0x3a30>
  40c538:	mov	w0, #0x2                   	// #2
  40c53c:	add	x1, x1, #0x59c
  40c540:	bl	402ed0 <signal@plt>
  40c544:	mov	x1, #0x1                   	// #1
  40c548:	mov	w0, w1
  40c54c:	bl	402ed0 <signal@plt>
  40c550:	cmp	x0, #0x1
  40c554:	b.eq	40c568 <ferror@plt+0x8f98>  // b.none
  40c558:	adrp	x1, 407000 <ferror@plt+0x3a30>
  40c55c:	mov	w0, #0x1                   	// #1
  40c560:	add	x1, x1, #0x59c
  40c564:	bl	402ed0 <signal@plt>
  40c568:	mov	x1, #0x1                   	// #1
  40c56c:	mov	w0, #0xf                   	// #15
  40c570:	bl	402ed0 <signal@plt>
  40c574:	cmp	x0, #0x1
  40c578:	b.eq	40c58c <ferror@plt+0x8fbc>  // b.none
  40c57c:	adrp	x1, 407000 <ferror@plt+0x3a30>
  40c580:	mov	w0, #0xf                   	// #15
  40c584:	add	x1, x1, #0x59c
  40c588:	bl	402ed0 <signal@plt>
  40c58c:	mov	x1, #0x1                   	// #1
  40c590:	mov	w0, #0xd                   	// #13
  40c594:	bl	402ed0 <signal@plt>
  40c598:	cmp	x0, #0x1
  40c59c:	b.eq	40c5b0 <ferror@plt+0x8fe0>  // b.none
  40c5a0:	adrp	x1, 407000 <ferror@plt+0x3a30>
  40c5a4:	mov	w0, #0xd                   	// #13
  40c5a8:	add	x1, x1, #0x59c
  40c5ac:	bl	402ed0 <signal@plt>
  40c5b0:	mov	x1, #0x0                   	// #0
  40c5b4:	mov	w0, #0x11                  	// #17
  40c5b8:	bl	402ed0 <signal@plt>
  40c5bc:	mov	x0, #0x4000000             	// #67108864
  40c5c0:	bl	45d568 <_obstack_memory_used@@Base+0x1178>
  40c5c4:	bl	40c488 <ferror@plt+0x8eb8>
  40c5c8:	ldr	x19, [sp, #16]
  40c5cc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c5d0:	ldp	x29, x30, [sp], #32
  40c5d4:	add	x0, x0, #0x518
  40c5d8:	add	x0, x0, #0x138
  40c5dc:	adrp	x4, 42d000 <ferror@plt+0x29a30>
  40c5e0:	adrp	x3, 42d000 <ferror@plt+0x29a30>
  40c5e4:	add	x4, x4, #0x3e4
  40c5e8:	add	x3, x3, #0x3bc
  40c5ec:	mov	x2, #0x0                   	// #0
  40c5f0:	mov	x1, #0x0                   	// #0
  40c5f4:	b	45c200 <_obstack_begin@@Base>
  40c5f8:	stp	x29, x30, [sp, #-144]!
  40c5fc:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40c600:	add	x4, x4, #0x228
  40c604:	mov	x29, sp
  40c608:	stp	x19, x20, [sp, #16]
  40c60c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40c610:	mov	w5, #0x8c                  	// #140
  40c614:	stp	x21, x22, [sp, #32]
  40c618:	add	x22, x19, #0x518
  40c61c:	mov	x21, x2
  40c620:	str	x1, [sp, #96]
  40c624:	ldr	w1, [x22, #760]
  40c628:	stp	x23, x24, [sp, #48]
  40c62c:	add	w1, w1, #0x1
  40c630:	str	w1, [x22, #760]
  40c634:	mov	x1, x0
  40c638:	stp	x25, x26, [sp, #64]
  40c63c:	stp	x27, x28, [sp, #80]
  40c640:	ldrb	w2, [x1]
  40c644:	cbz	w2, 40c8e8 <ferror@plt+0x9318>
  40c648:	cmp	w2, #0x28
  40c64c:	add	x23, x1, #0x1
  40c650:	b.eq	40c8f4 <ferror@plt+0x9324>  // b.none
  40c654:	ldrh	w1, [x4, w2, sxtw #1]
  40c658:	tst	w5, w1
  40c65c:	b.ne	40c684 <ferror@plt+0x90b4>  // b.any
  40c660:	cmp	w2, #0x2d
  40c664:	b.eq	40c684 <ferror@plt+0x90b4>  // b.none
  40c668:	cmp	w2, #0x5f
  40c66c:	b.eq	40c684 <ferror@plt+0x90b4>  // b.none
  40c670:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c674:	add	x1, x1, #0xfba
  40c678:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40c67c:	ldr	w0, [x0, #584]
  40c680:	bl	422d58 <ferror@plt+0x1f788>
  40c684:	mov	x1, x23
  40c688:	b	40c640 <ferror@plt+0x9070>
  40c68c:	cmp	w2, #0x28
  40c690:	cinc	w0, w0, eq  // eq = none
  40c694:	b	40c924 <ferror@plt+0x9354>
  40c698:	cmp	x1, x24
  40c69c:	b.ne	40c6ac <ferror@plt+0x90dc>  // b.any
  40c6a0:	ldrb	w4, [x0, #80]
  40c6a4:	orr	w4, w4, #0x2
  40c6a8:	strb	w4, [x0, #80]
  40c6ac:	ldr	x0, [x22, #360]
  40c6b0:	ldr	x5, [x22, #344]
  40c6b4:	add	x1, x1, x0
  40c6b8:	bic	x0, x1, x0
  40c6bc:	ldr	x1, [x22, #320]
  40c6c0:	sub	x6, x0, x1
  40c6c4:	sub	x1, x5, x1
  40c6c8:	cmp	x6, x1
  40c6cc:	csel	x0, x0, x5, ls  // ls = plast
  40c6d0:	stp	x0, x0, [x22, #328]
  40c6d4:	bl	40c488 <ferror@plt+0x8eb8>
  40c6d8:	mov	x1, x21
  40c6dc:	mov	x0, x23
  40c6e0:	bl	40e3cc <ferror@plt+0xadfc>
  40c6e4:	tbz	w0, #31, 40c700 <ferror@plt+0x9130>
  40c6e8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c6ec:	mov	x2, x20
  40c6f0:	add	x1, x1, #0xfd7
  40c6f4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40c6f8:	ldr	w0, [x0, #584]
  40c6fc:	bl	422d58 <ferror@plt+0x1f788>
  40c700:	ldr	x1, [x19, #1304]
  40c704:	ldr	x2, [x28, #8]
  40c708:	cbz	x1, 40c824 <ferror@plt+0x9254>
  40c70c:	ldr	w0, [x1, #4]
  40c710:	add	x1, x1, #0x8
  40c714:	blr	x2
  40c718:	mov	x21, x0
  40c71c:	ldr	x0, [x19, #1304]
  40c720:	cbz	x0, 40c730 <ferror@plt+0x9160>
  40c724:	ldrsb	w1, [x0, #3]
  40c728:	tbz	w1, #31, 40c82c <ferror@plt+0x925c>
  40c72c:	str	wzr, [x0, #4]
  40c730:	ldr	x0, [sp, #104]
  40c734:	str	x0, [x19, #1304]
  40c738:	ldr	w0, [sp, #112]
  40c73c:	cmp	w25, #0x0
  40c740:	str	w0, [x22, #872]
  40c744:	ldr	w0, [sp, #116]
  40c748:	str	w0, [x22, #876]
  40c74c:	ldr	w0, [sp, #120]
  40c750:	str	w0, [x22, #880]
  40c754:	ldr	w0, [sp, #124]
  40c758:	str	w0, [x22, #884]
  40c75c:	ldr	w0, [sp, #128]
  40c760:	str	w0, [x22, #888]
  40c764:	ldr	w0, [sp, #132]
  40c768:	str	w0, [x22, #892]
  40c76c:	ldr	x0, [sp, #136]
  40c770:	str	x0, [x22, #896]
  40c774:	b.le	40c7b4 <ferror@plt+0x91e4>
  40c778:	add	x0, x22, #0x138
  40c77c:	sxtw	x28, w25
  40c780:	ldp	x2, x1, [x0, #24]
  40c784:	sub	x1, x1, x2
  40c788:	cmp	x1, w25, sxtw
  40c78c:	b.cs	40c798 <ferror@plt+0x91c8>  // b.hs, b.nlast
  40c790:	mov	x1, x28
  40c794:	bl	45c22c <_obstack_newchunk@@Base>
  40c798:	ldr	x0, [x22, #336]
  40c79c:	mov	x2, x28
  40c7a0:	mov	x1, x24
  40c7a4:	bl	402cd0 <memcpy@plt>
  40c7a8:	ldr	x0, [x22, #336]
  40c7ac:	add	x0, x0, x28
  40c7b0:	str	x0, [x22, #336]
  40c7b4:	cbz	x21, 40c7d0 <ferror@plt+0x9200>
  40c7b8:	mov	x0, x21
  40c7bc:	mov	x2, #0x0                   	// #0
  40c7c0:	mov	w1, #0x0                   	// #0
  40c7c4:	bl	40d0b0 <ferror@plt+0x9ae0>
  40c7c8:	cmp	w0, #0x0
  40c7cc:	csel	x27, x26, xzr, ge  // ge = tcont
  40c7d0:	ldr	x0, [sp, #96]
  40c7d4:	cbz	x0, 40c7e8 <ferror@plt+0x9218>
  40c7d8:	ldr	x1, [sp, #96]
  40c7dc:	cmp	x21, #0x0
  40c7e0:	cset	w0, ne  // ne = any
  40c7e4:	strb	w0, [x1]
  40c7e8:	mov	x0, x20
  40c7ec:	bl	4032a0 <free@plt>
  40c7f0:	mov	x0, x23
  40c7f4:	bl	4032a0 <free@plt>
  40c7f8:	ldr	w0, [x22, #760]
  40c7fc:	ldp	x19, x20, [sp, #16]
  40c800:	sub	w0, w0, #0x1
  40c804:	str	w0, [x22, #760]
  40c808:	mov	x0, x27
  40c80c:	ldp	x21, x22, [sp, #32]
  40c810:	ldp	x23, x24, [sp, #48]
  40c814:	ldp	x25, x26, [sp, #64]
  40c818:	ldp	x27, x28, [sp, #80]
  40c81c:	ldp	x29, x30, [sp], #144
  40c820:	ret
  40c824:	mov	w0, #0x0                   	// #0
  40c828:	b	40c714 <ferror@plt+0x9144>
  40c82c:	bl	4032a0 <free@plt>
  40c830:	b	40c730 <ferror@plt+0x9160>
  40c834:	ldr	x0, [x19, #1304]
  40c838:	str	x0, [sp, #104]
  40c83c:	ldr	w0, [x22, #872]
  40c840:	str	w0, [sp, #112]
  40c844:	ldr	w0, [x22, #876]
  40c848:	str	w0, [sp, #116]
  40c84c:	ldr	w0, [x22, #880]
  40c850:	str	w0, [sp, #120]
  40c854:	ldr	w0, [x22, #884]
  40c858:	str	w0, [sp, #124]
  40c85c:	ldr	w0, [x22, #888]
  40c860:	str	w0, [sp, #128]
  40c864:	ldr	w0, [x22, #892]
  40c868:	str	w0, [sp, #132]
  40c86c:	ldr	x0, [x22, #896]
  40c870:	str	x0, [sp, #136]
  40c874:	add	x0, x22, #0x138
  40c878:	ldp	x24, x1, [x0, #16]
  40c87c:	sub	x25, x1, x24
  40c880:	cmp	w25, #0x0
  40c884:	b.gt	40c698 <ferror@plt+0x90c8>
  40c888:	mov	x24, #0x0                   	// #0
  40c88c:	b	40c6d4 <ferror@plt+0x9104>
  40c890:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40c894:	mov	x2, x20
  40c898:	add	x1, x1, #0xffa
  40c89c:	b	40c6f4 <ferror@plt+0x9124>
  40c8a0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40c8a4:	add	x1, x1, #0x14
  40c8a8:	b	40c678 <ferror@plt+0x90a8>
  40c8ac:	sub	w1, w1, w23
  40c8b0:	mov	x0, x23
  40c8b4:	bl	404640 <ferror@plt+0x1070>
  40c8b8:	mov	x27, x26
  40c8bc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40c8c0:	add	x2, x2, #0x830
  40c8c4:	mov	x23, x0
  40c8c8:	add	x28, x2, #0xa0
  40c8cc:	ldr	x0, [x28]
  40c8d0:	cbz	x0, 40c890 <ferror@plt+0x92c0>
  40c8d4:	mov	x1, x20
  40c8d8:	bl	403220 <strcmp@plt>
  40c8dc:	cbz	w0, 40c834 <ferror@plt+0x9264>
  40c8e0:	add	x28, x28, #0x10
  40c8e4:	b	40c8cc <ferror@plt+0x92fc>
  40c8e8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40c8ec:	add	x1, x1, #0x36
  40c8f0:	b	40c678 <ferror@plt+0x90a8>
  40c8f4:	sub	w1, w1, w0
  40c8f8:	bl	404640 <ferror@plt+0x1070>
  40c8fc:	mov	x1, x23
  40c900:	mov	x20, x0
  40c904:	mov	w0, #0x0                   	// #0
  40c908:	ldrb	w2, [x1]
  40c90c:	cbz	w2, 40c8a0 <ferror@plt+0x92d0>
  40c910:	cmp	w2, #0x29
  40c914:	add	x26, x1, #0x1
  40c918:	b.ne	40c68c <ferror@plt+0x90bc>  // b.any
  40c91c:	cbz	w0, 40c8ac <ferror@plt+0x92dc>
  40c920:	sub	w0, w0, #0x1
  40c924:	mov	x1, x26
  40c928:	b	40c908 <ferror@plt+0x9338>
  40c92c:	stp	x29, x30, [sp, #-192]!
  40c930:	mov	x29, sp
  40c934:	stp	x19, x20, [sp, #16]
  40c938:	mov	x19, #0x0                   	// #0
  40c93c:	stp	x21, x22, [sp, #32]
  40c940:	mov	w22, #0x1                   	// #1
  40c944:	mov	w21, #0x0                   	// #0
  40c948:	stp	x23, x24, [sp, #48]
  40c94c:	mov	w23, #0x0                   	// #0
  40c950:	mov	w24, #0x0                   	// #0
  40c954:	stp	x25, x26, [sp, #64]
  40c958:	stp	x27, x28, [sp, #80]
  40c95c:	mov	x28, x0
  40c960:	mov	x27, #0x0                   	// #0
  40c964:	str	xzr, [sp, #96]
  40c968:	str	wzr, [sp, #108]
  40c96c:	str	xzr, [sp, #112]
  40c970:	str	wzr, [sp, #120]
  40c974:	str	x0, [sp, #136]
  40c978:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40c97c:	add	x0, x0, #0x228
  40c980:	str	x0, [sp, #168]
  40c984:	strb	wzr, [sp, #191]
  40c988:	ldrb	w0, [x28]
  40c98c:	cmp	w0, #0x20
  40c990:	b.eq	40c99c <ferror@plt+0x93cc>  // b.none
  40c994:	cmp	w0, #0x9
  40c998:	b.ne	40c9a4 <ferror@plt+0x93d4>  // b.any
  40c99c:	add	x28, x28, #0x1
  40c9a0:	b	40c988 <ferror@plt+0x93b8>
  40c9a4:	cmp	w0, #0x21
  40c9a8:	b.ne	40c9d4 <ferror@plt+0x9404>  // b.any
  40c9ac:	add	x28, x28, #0x1
  40c9b0:	mov	w0, #0x1                   	// #1
  40c9b4:	str	w0, [sp, #128]
  40c9b8:	ldrb	w0, [x28]
  40c9bc:	cmp	w0, #0x20
  40c9c0:	b.eq	40c9cc <ferror@plt+0x93fc>  // b.none
  40c9c4:	cmp	w0, #0x9
  40c9c8:	b.ne	40c9dc <ferror@plt+0x940c>  // b.any
  40c9cc:	add	x28, x28, #0x1
  40c9d0:	b	40c9b8 <ferror@plt+0x93e8>
  40c9d4:	str	wzr, [sp, #128]
  40c9d8:	b	40c9b8 <ferror@plt+0x93e8>
  40c9dc:	cmp	w0, #0x25
  40c9e0:	b.ne	40ca34 <ferror@plt+0x9464>  // b.any
  40c9e4:	ldrb	w0, [x28, #1]
  40c9e8:	cmp	w0, #0x3a
  40c9ec:	b.ne	40cb10 <ferror@plt+0x9540>  // b.any
  40c9f0:	add	x1, sp, #0xbf
  40c9f4:	add	x0, x28, #0x2
  40c9f8:	mov	x2, #0x0                   	// #0
  40c9fc:	bl	40c5f8 <ferror@plt+0x9028>
  40ca00:	mov	x26, x0
  40ca04:	mov	w6, #0x0                   	// #0
  40ca08:	mov	w1, #0x0                   	// #0
  40ca0c:	mov	w5, #0x0                   	// #0
  40ca10:	mov	x25, #0x0                   	// #0
  40ca14:	mov	x28, #0x0                   	// #0
  40ca18:	ldrb	w0, [x26]
  40ca1c:	cmp	w0, #0x20
  40ca20:	b.eq	40ca2c <ferror@plt+0x945c>  // b.none
  40ca24:	cmp	w0, #0x9
  40ca28:	b.ne	40cb98 <ferror@plt+0x95c8>  // b.any
  40ca2c:	add	x26, x26, #0x1
  40ca30:	b	40ca18 <ferror@plt+0x9448>
  40ca34:	cmp	w0, #0x2e
  40ca38:	b.ne	40caf8 <ferror@plt+0x9528>  // b.any
  40ca3c:	add	x28, x28, #0x1
  40ca40:	mov	w1, #0x0                   	// #0
  40ca44:	mov	w5, #0x1                   	// #1
  40ca48:	mov	x26, x28
  40ca4c:	mov	w20, #0x0                   	// #0
  40ca50:	mov	w6, #0x204                 	// #516
  40ca54:	ldrb	w2, [x26]
  40ca58:	ldr	x3, [sp, #168]
  40ca5c:	ldrb	w0, [x26]
  40ca60:	ldrh	w2, [x3, x2, lsl #1]
  40ca64:	tst	w6, w2
  40ca68:	b.ne	40cb30 <ferror@plt+0x9560>  // b.any
  40ca6c:	sub	w2, w0, #0x2b
  40ca70:	and	w2, w2, #0xff
  40ca74:	cmp	w2, #0x15
  40ca78:	b.ls	40cb18 <ferror@plt+0x9548>  // b.plast
  40ca7c:	cmp	w0, #0x5c
  40ca80:	b.eq	40cb38 <ferror@plt+0x9568>  // b.none
  40ca84:	cbz	w20, 40cb88 <ferror@plt+0x95b8>
  40ca88:	cmp	x19, #0x0
  40ca8c:	ccmp	x19, x27, #0x4, ne  // ne = any
  40ca90:	b.eq	40caac <ferror@plt+0x94dc>  // b.none
  40ca94:	mov	x0, x19
  40ca98:	str	w1, [sp, #144]
  40ca9c:	str	w5, [sp, #152]
  40caa0:	bl	4032a0 <free@plt>
  40caa4:	ldr	w1, [sp, #144]
  40caa8:	ldr	w5, [sp, #152]
  40caac:	sub	x0, x26, x28
  40cab0:	str	w1, [sp, #144]
  40cab4:	sub	x0, x0, w20, sxtw
  40cab8:	str	w5, [sp, #152]
  40cabc:	add	x0, x0, #0x1
  40cac0:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40cac4:	ldr	w1, [sp, #144]
  40cac8:	mov	x19, x0
  40cacc:	ldr	w5, [sp, #152]
  40cad0:	mov	x25, x0
  40cad4:	cmp	x26, x28
  40cad8:	b.eq	40cb68 <ferror@plt+0x9598>  // b.none
  40cadc:	ldrb	w0, [x28]
  40cae0:	cmp	w0, #0x5c
  40cae4:	b.ne	40caec <ferror@plt+0x951c>  // b.any
  40cae8:	add	x28, x28, #0x1
  40caec:	ldrb	w0, [x28], #1
  40caf0:	strb	w0, [x25], #1
  40caf4:	b	40cad4 <ferror@plt+0x9504>
  40caf8:	cmp	w0, #0x2c
  40cafc:	b.ne	40cb10 <ferror@plt+0x9540>  // b.any
  40cb00:	add	x28, x28, #0x1
  40cb04:	mov	w1, #0x1                   	// #1
  40cb08:	mov	w5, #0x0                   	// #0
  40cb0c:	b	40ca48 <ferror@plt+0x9478>
  40cb10:	mov	w1, #0x0                   	// #0
  40cb14:	b	40cb08 <ferror@plt+0x9538>
  40cb18:	mov	x0, #0xf                   	// #15
  40cb1c:	movk	x0, #0x24, lsl #16
  40cb20:	lsr	x2, x0, x2
  40cb24:	tbz	w2, #0, 40ca84 <ferror@plt+0x94b4>
  40cb28:	add	x26, x26, #0x1
  40cb2c:	b	40ca54 <ferror@plt+0x9484>
  40cb30:	cmp	w0, #0x5c
  40cb34:	b.ne	40cb28 <ferror@plt+0x9558>  // b.any
  40cb38:	ldrb	w2, [x26, #1]
  40cb3c:	add	x0, x26, #0x1
  40cb40:	cbnz	w2, 40cb5c <ferror@plt+0x958c>
  40cb44:	ldr	x2, [sp, #136]
  40cb48:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40cb4c:	add	x1, x1, #0x55
  40cb50:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40cb54:	ldr	w0, [x0, #584]
  40cb58:	bl	422d58 <ferror@plt+0x1f788>
  40cb5c:	add	w20, w20, #0x1
  40cb60:	mov	x26, x0
  40cb64:	b	40cb28 <ferror@plt+0x9558>
  40cb68:	mov	x28, x19
  40cb6c:	strb	wzr, [x25]
  40cb70:	ldrb	w0, [x26]
  40cb74:	cmp	w0, #0x2a
  40cb78:	b.ne	40cb90 <ferror@plt+0x95c0>  // b.any
  40cb7c:	add	x26, x26, #0x1
  40cb80:	mov	w6, #0x1                   	// #1
  40cb84:	b	40ca18 <ferror@plt+0x9448>
  40cb88:	mov	x25, x26
  40cb8c:	b	40cb70 <ferror@plt+0x95a0>
  40cb90:	mov	w6, #0x0                   	// #0
  40cb94:	b	40ca18 <ferror@plt+0x9448>
  40cb98:	cmp	w0, #0x7c
  40cb9c:	b.eq	40ccf0 <ferror@plt+0x9720>  // b.none
  40cba0:	b.hi	40cbd0 <ferror@plt+0x9600>  // b.pmore
  40cba4:	cmp	w0, #0x26
  40cba8:	b.eq	40cbd8 <ferror@plt+0x9608>  // b.none
  40cbac:	cmp	w0, #0x3a
  40cbb0:	b.eq	40ccf0 <ferror@plt+0x9720>  // b.none
  40cbb4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40cbb8:	ldrb	w3, [x26]
  40cbbc:	ldr	x2, [sp, #136]
  40cbc0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40cbc4:	ldr	w0, [x0, #584]
  40cbc8:	add	x1, x1, #0x94
  40cbcc:	bl	422d58 <ferror@plt+0x1f788>
  40cbd0:	cmp	w0, #0x7d
  40cbd4:	b.ne	40cbb4 <ferror@plt+0x95e4>  // b.any
  40cbd8:	cmp	w24, #0x0
  40cbdc:	ccmp	w23, #0x0, #0x0, eq  // eq = none
  40cbe0:	b.ne	40cbb4 <ferror@plt+0x95e4>  // b.any
  40cbe4:	ldr	w0, [sp, #128]
  40cbe8:	cmp	w0, #0x0
  40cbec:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  40cbf0:	b.ne	40cbb4 <ferror@plt+0x95e4>  // b.any
  40cbf4:	cmp	x28, x25
  40cbf8:	csinc	w20, w1, wzr, ne  // ne = any
  40cbfc:	cbnz	w20, 40cbb4 <ferror@plt+0x95e4>
  40cc00:	sub	x2, x25, x28
  40cc04:	cmp	w6, #0x0
  40cc08:	adrp	x5, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40cc0c:	add	x25, x5, #0x518
  40cc10:	sxtw	x23, w2
  40cc14:	csinv	w0, w2, wzr, ne  // ne = any
  40cc18:	mov	x24, #0x0                   	// #0
  40cc1c:	str	w0, [sp, #128]
  40cc20:	ldr	w0, [x25, #24]
  40cc24:	str	w24, [sp, #152]
  40cc28:	str	w6, [sp, #160]
  40cc2c:	cmp	w0, w24
  40cc30:	b.le	40cca8 <ferror@plt+0x96d8>
  40cc34:	mov	x0, #0x18                  	// #24
  40cc38:	ldr	x1, [x25, #16]
  40cc3c:	mul	x0, x24, x0
  40cc40:	add	x2, x1, x0
  40cc44:	str	x2, [sp, #120]
  40cc48:	mov	x2, x23
  40cc4c:	ldr	x8, [x1, x0]
  40cc50:	mov	x1, x28
  40cc54:	str	x8, [sp, #144]
  40cc58:	mov	x0, x8
  40cc5c:	bl	402f80 <strncmp@plt>
  40cc60:	ldr	w6, [sp, #160]
  40cc64:	cbnz	w0, 40cca0 <ferror@plt+0x96d0>
  40cc68:	ldr	w9, [sp, #152]
  40cc6c:	cbnz	w6, 40cc7c <ferror@plt+0x96ac>
  40cc70:	ldr	x8, [sp, #144]
  40cc74:	ldrb	w0, [x8, x23]
  40cc78:	cbnz	w0, 40cca0 <ferror@plt+0x96d0>
  40cc7c:	ldr	w1, [sp, #128]
  40cc80:	mov	w0, w9
  40cc84:	str	w6, [sp, #144]
  40cc88:	bl	404738 <ferror@plt+0x1168>
  40cc8c:	ldr	w6, [sp, #144]
  40cc90:	cbz	w0, 40cca0 <ferror@plt+0x96d0>
  40cc94:	ldr	x0, [sp, #120]
  40cc98:	mov	w1, #0x1                   	// #1
  40cc9c:	strb	w1, [x0, #22]
  40cca0:	add	x24, x24, #0x1
  40cca4:	b	40cc20 <ferror@plt+0x9650>
  40cca8:	ldrb	w0, [x26]
  40ccac:	cmp	w0, #0x7d
  40ccb0:	b.ne	40d09c <ferror@plt+0x9acc>  // b.any
  40ccb4:	mov	x23, #0x0                   	// #0
  40ccb8:	mov	x24, #0x18                  	// #24
  40ccbc:	ldr	w0, [x25, #24]
  40ccc0:	cmp	w0, w23
  40ccc4:	b.le	40d09c <ferror@plt+0x9acc>
  40ccc8:	ldr	x0, [x25, #16]
  40cccc:	madd	x0, x23, x24, x0
  40ccd0:	ldrb	w1, [x0, #22]
  40ccd4:	cbz	w1, 40cce8 <ferror@plt+0x9718>
  40ccd8:	strb	wzr, [x0, #22]
  40ccdc:	mov	w1, #0x0                   	// #0
  40cce0:	mov	w0, w23
  40cce4:	bl	40edb0 <ferror@plt+0xb7e0>
  40cce8:	add	x23, x23, #0x1
  40ccec:	b	40ccbc <ferror@plt+0x96ec>
  40ccf0:	ldr	w2, [sp, #120]
  40ccf4:	cbnz	w2, 40cbb4 <ferror@plt+0x95e4>
  40ccf8:	cmp	x28, #0x0
  40ccfc:	cset	w20, ne  // ne = any
  40cd00:	cmp	x28, x25
  40cd04:	csel	w20, w20, wzr, eq  // eq = none
  40cd08:	cbz	w20, 40cd84 <ferror@plt+0x97b4>
  40cd0c:	eor	w2, w23, #0x1
  40cd10:	orr	w21, w21, w2
  40cd14:	cbnz	w21, 40cbb4 <ferror@plt+0x95e4>
  40cd18:	cmp	w0, #0x7c
  40cd1c:	b.eq	40cbb4 <ferror@plt+0x95e4>  // b.none
  40cd20:	ldr	w0, [sp, #128]
  40cd24:	cmp	w0, #0x0
  40cd28:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  40cd2c:	b.ne	40cbb4 <ferror@plt+0x95e4>  // b.any
  40cd30:	orr	w22, w1, w6
  40cd34:	cbnz	w22, 40cbb4 <ferror@plt+0x95e4>
  40cd38:	ldr	w0, [sp, #108]
  40cd3c:	eor	w21, w0, #0x1
  40cd40:	ldrb	w0, [x26]
  40cd44:	cmp	w0, #0x3a
  40cd48:	b.ne	40d054 <ferror@plt+0x9a84>  // b.any
  40cd4c:	ldr	w1, [sp, #108]
  40cd50:	add	x0, x26, #0x1
  40cd54:	mov	x26, x0
  40cd58:	mov	w25, #0x0                   	// #0
  40cd5c:	eor	w5, w1, #0x1
  40cd60:	mov	w1, #0x1                   	// #1
  40cd64:	and	w5, w21, w5
  40cd68:	mov	w2, w1
  40cd6c:	ldrb	w3, [x26]
  40cd70:	cmp	w3, #0x7b
  40cd74:	b.ne	40ce94 <ferror@plt+0x98c4>  // b.any
  40cd78:	add	w1, w1, #0x1
  40cd7c:	add	x26, x26, #0x1
  40cd80:	b	40cd6c <ferror@plt+0x979c>
  40cd84:	cmp	w5, #0x0
  40cd88:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  40cd8c:	b.eq	40cde4 <ferror@plt+0x9814>  // b.none
  40cd90:	cbnz	w6, 40cbb4 <ferror@plt+0x95e4>
  40cd94:	mov	w22, #0x0                   	// #0
  40cd98:	ldr	w0, [sp, #108]
  40cd9c:	orr	w0, w21, w0
  40cda0:	cbnz	w0, 40cd40 <ferror@plt+0x9770>
  40cda4:	cbz	x28, 40ce4c <ferror@plt+0x987c>
  40cda8:	cbz	w5, 40cdf8 <ferror@plt+0x9828>
  40cdac:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40cdb0:	ldr	x20, [x0, #1752]
  40cdb4:	cbz	x20, 40cdf0 <ferror@plt+0x9820>
  40cdb8:	sub	x21, x25, x28
  40cdbc:	mov	x1, x28
  40cdc0:	mov	x2, x21
  40cdc4:	mov	x0, x20
  40cdc8:	bl	402f80 <strncmp@plt>
  40cdcc:	cbnz	w0, 40cdf0 <ferror@plt+0x9820>
  40cdd0:	ldrb	w0, [x20, x21]
  40cdd4:	cmp	w0, #0x0
  40cdd8:	cset	w0, eq  // eq = none
  40cddc:	strb	w0, [sp, #191]
  40cde0:	b	40ce4c <ferror@plt+0x987c>
  40cde4:	cmp	w6, #0x0
  40cde8:	csel	w22, w22, wzr, ne  // ne = any
  40cdec:	b	40cd98 <ferror@plt+0x97c8>
  40cdf0:	mov	w0, #0x0                   	// #0
  40cdf4:	b	40cddc <ferror@plt+0x980c>
  40cdf8:	cbz	w1, 40ce74 <ferror@plt+0x98a4>
  40cdfc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ce00:	ldr	x0, [x0, #1936]
  40ce04:	cbz	x0, 40ce48 <ferror@plt+0x9878>
  40ce08:	ldr	x20, [x0]
  40ce0c:	cbz	x20, 40ce48 <ferror@plt+0x9878>
  40ce10:	ldrb	w0, [x20]
  40ce14:	cbz	w0, 40ce48 <ferror@plt+0x9878>
  40ce18:	sub	x21, x25, x28
  40ce1c:	mov	x1, x28
  40ce20:	mov	x2, x21
  40ce24:	add	x0, x20, #0x1
  40ce28:	str	w5, [sp, #144]
  40ce2c:	bl	402f80 <strncmp@plt>
  40ce30:	ldr	w5, [sp, #144]
  40ce34:	cbnz	w0, 40ce48 <ferror@plt+0x9878>
  40ce38:	add	x20, x20, x21
  40ce3c:	ldrb	w0, [x20, #1]
  40ce40:	cmp	w0, #0x0
  40ce44:	cset	w5, eq  // eq = none
  40ce48:	strb	w5, [sp, #191]
  40ce4c:	ldrb	w0, [sp, #191]
  40ce50:	ldr	w1, [sp, #128]
  40ce54:	cmp	w0, w1
  40ce58:	b.eq	40ce88 <ferror@plt+0x98b8>  // b.none
  40ce5c:	mov	x27, x19
  40ce60:	mov	w20, #0x0                   	// #0
  40ce64:	mov	w21, #0x1                   	// #1
  40ce68:	str	x28, [sp, #96]
  40ce6c:	str	x25, [sp, #112]
  40ce70:	b	40cd40 <ferror@plt+0x9770>
  40ce74:	mov	w2, w6
  40ce78:	mov	x1, x25
  40ce7c:	mov	x0, x28
  40ce80:	bl	404914 <ferror@plt+0x1344>
  40ce84:	b	40cddc <ferror@plt+0x980c>
  40ce88:	mov	w21, #0x0                   	// #0
  40ce8c:	mov	w20, #0x0                   	// #0
  40ce90:	b	40cd40 <ferror@plt+0x9770>
  40ce94:	cmp	w3, #0x7d
  40ce98:	b.ne	40cec4 <ferror@plt+0x98f4>  // b.any
  40ce9c:	subs	w1, w1, #0x1
  40cea0:	b.ne	40cd7c <ferror@plt+0x97ac>  // b.any
  40cea4:	mov	x1, x26
  40cea8:	ldurb	w2, [x1, #-1]
  40ceac:	cmp	w2, #0x20
  40ceb0:	b.eq	40cebc <ferror@plt+0x98ec>  // b.none
  40ceb4:	cmp	w2, #0x9
  40ceb8:	b.ne	40cf0c <ferror@plt+0x993c>  // b.any
  40cebc:	sub	x1, x1, #0x1
  40cec0:	b	40cea8 <ferror@plt+0x98d8>
  40cec4:	cmp	w3, #0x3b
  40cec8:	b.ne	40ced8 <ferror@plt+0x9908>  // b.any
  40cecc:	cmp	w1, #0x1
  40ced0:	b.ne	40cd7c <ferror@plt+0x97ac>  // b.any
  40ced4:	b	40cea4 <ferror@plt+0x98d4>
  40ced8:	cmp	w3, #0x25
  40cedc:	b.ne	40cef8 <ferror@plt+0x9928>  // b.any
  40cee0:	ldrb	w3, [x26, #1]
  40cee4:	cmp	w3, #0x2a
  40cee8:	b.ne	40cd7c <ferror@plt+0x97ac>  // b.any
  40ceec:	cmp	w1, #0x1
  40cef0:	csel	w25, w25, w2, ne  // ne = any
  40cef4:	b	40cd7c <ferror@plt+0x97ac>
  40cef8:	cbnz	w3, 40cd7c <ferror@plt+0x97ac>
  40cefc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40cf00:	mov	x2, x0
  40cf04:	add	x1, x1, #0x74
  40cf08:	b	40cb50 <ferror@plt+0x9580>
  40cf0c:	eor	w2, w22, #0x1
  40cf10:	and	w2, w25, w2
  40cf14:	ands	w2, w2, #0xff
  40cf18:	str	w2, [sp, #120]
  40cf1c:	b.ne	40cefc <ferror@plt+0x992c>  // b.any
  40cf20:	cbz	w5, 40d048 <ferror@plt+0x9a78>
  40cf24:	sub	w1, w1, w0
  40cf28:	bl	404640 <ferror@plt+0x1070>
  40cf2c:	mov	x24, x0
  40cf30:	cbnz	w25, 40cf90 <ferror@plt+0x99c0>
  40cf34:	mov	x2, #0x0                   	// #0
  40cf38:	mov	w1, #0x0                   	// #0
  40cf3c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40cf40:	tbz	w0, #31, 40d040 <ferror@plt+0x9a70>
  40cf44:	mov	x28, #0x0                   	// #0
  40cf48:	mov	x0, x24
  40cf4c:	bl	4032a0 <free@plt>
  40cf50:	cmp	x27, #0x0
  40cf54:	ccmp	x27, x19, #0x4, ne  // ne = any
  40cf58:	b.eq	40cf64 <ferror@plt+0x9994>  // b.none
  40cf5c:	mov	x0, x27
  40cf60:	bl	4032a0 <free@plt>
  40cf64:	cbz	x19, 40cf70 <ferror@plt+0x99a0>
  40cf68:	mov	x0, x19
  40cf6c:	bl	4032a0 <free@plt>
  40cf70:	mov	x0, x28
  40cf74:	ldp	x19, x20, [sp, #16]
  40cf78:	ldp	x21, x22, [sp, #32]
  40cf7c:	ldp	x23, x24, [sp, #48]
  40cf80:	ldp	x25, x26, [sp, #64]
  40cf84:	ldp	x27, x28, [sp, #80]
  40cf88:	ldp	x29, x30, [sp], #192
  40cf8c:	ret
  40cf90:	ldr	x1, [sp, #96]
  40cf94:	mov	x25, #0x0                   	// #0
  40cf98:	ldr	x0, [sp, #112]
  40cf9c:	sub	x0, x0, x1
  40cfa0:	str	x0, [sp, #160]
  40cfa4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40cfa8:	ldr	w1, [sp, #96]
  40cfac:	add	x28, x0, #0x518
  40cfb0:	ldr	w0, [sp, #112]
  40cfb4:	sub	w0, w0, w1
  40cfb8:	str	x0, [sp, #152]
  40cfbc:	ldr	w0, [x28, #24]
  40cfc0:	cmp	w0, w25
  40cfc4:	b.le	40d040 <ferror@plt+0x9a70>
  40cfc8:	mov	x0, #0x18                  	// #24
  40cfcc:	ldr	x1, [sp, #96]
  40cfd0:	mul	x0, x25, x0
  40cfd4:	str	x0, [sp, #128]
  40cfd8:	ldr	x0, [x28, #16]
  40cfdc:	str	x0, [sp, #144]
  40cfe0:	ldr	x3, [sp, #128]
  40cfe4:	ldr	x2, [sp, #152]
  40cfe8:	ldr	x0, [x0, x3]
  40cfec:	bl	402f80 <strncmp@plt>
  40cff0:	cbnz	w0, 40d038 <ferror@plt+0x9a68>
  40cff4:	ldr	w1, [sp, #160]
  40cff8:	mov	w0, w25
  40cffc:	bl	404738 <ferror@plt+0x1168>
  40d000:	cbz	w0, 40d038 <ferror@plt+0x9a68>
  40d004:	ldr	x1, [sp, #128]
  40d008:	ldr	x0, [sp, #144]
  40d00c:	ldr	x2, [x0, x1]
  40d010:	mov	w1, #0x0                   	// #0
  40d014:	ldr	x0, [sp, #152]
  40d018:	add	x2, x2, x0
  40d01c:	mov	x0, x24
  40d020:	bl	40d0b0 <ferror@plt+0x9ae0>
  40d024:	tbnz	w0, #31, 40cf44 <ferror@plt+0x9974>
  40d028:	mov	w0, w25
  40d02c:	mov	w1, #0x1                   	// #1
  40d030:	bl	40edb0 <ferror@plt+0xb7e0>
  40d034:	str	xzr, [x28, #896]
  40d038:	add	x25, x25, #0x1
  40d03c:	b	40cfbc <ferror@plt+0x99ec>
  40d040:	mov	x0, x24
  40d044:	bl	4032a0 <free@plt>
  40d048:	ldrb	w0, [x26]
  40d04c:	cmp	w0, #0x3b
  40d050:	b.eq	40d05c <ferror@plt+0x9a8c>  // b.none
  40d054:	mov	w24, #0x1                   	// #1
  40d058:	b	40d080 <ferror@plt+0x9ab0>
  40d05c:	ldr	w0, [sp, #108]
  40d060:	mov	w23, #0x1                   	// #1
  40d064:	mov	w22, w23
  40d068:	mov	w24, w23
  40d06c:	orr	w0, w21, w0
  40d070:	mov	w21, #0x0                   	// #0
  40d074:	str	xzr, [sp, #96]
  40d078:	str	w0, [sp, #108]
  40d07c:	str	xzr, [sp, #112]
  40d080:	mov	x28, x26
  40d084:	ldrb	w0, [x28], #1
  40d088:	cmp	w0, #0x7d
  40d08c:	b.eq	40cf50 <ferror@plt+0x9980>  // b.none
  40d090:	cbz	w20, 40c984 <ferror@plt+0x93b4>
  40d094:	mov	x26, x28
  40d098:	b	40cbb4 <ferror@plt+0x95e4>
  40d09c:	mov	w0, #0x1                   	// #1
  40d0a0:	mov	w23, #0x0                   	// #0
  40d0a4:	mov	w24, #0x0                   	// #0
  40d0a8:	str	w0, [sp, #120]
  40d0ac:	b	40d080 <ferror@plt+0x9ab0>
  40d0b0:	stp	x29, x30, [sp, #-272]!
  40d0b4:	mov	x29, sp
  40d0b8:	stp	x19, x20, [sp, #16]
  40d0bc:	stp	x21, x22, [sp, #32]
  40d0c0:	stp	x23, x24, [sp, #48]
  40d0c4:	mov	x24, x0
  40d0c8:	mov	w0, w1
  40d0cc:	stp	x25, x26, [sp, #64]
  40d0d0:	mov	x26, x2
  40d0d4:	stp	x27, x28, [sp, #80]
  40d0d8:	str	w1, [x29, #132]
  40d0dc:	cbz	w0, 40d0f4 <ferror@plt+0x9b24>
  40d0e0:	ldrb	w0, [x24]
  40d0e4:	cbnz	w0, 40d0f4 <ferror@plt+0x9b24>
  40d0e8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d0ec:	mov	w1, #0x1                   	// #1
  40d0f0:	str	w1, [x0, #2176]
  40d0f4:	adrp	x20, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40d0f8:	mov	x21, x24
  40d0fc:	add	x20, x20, #0x4a0
  40d100:	add	x0, x20, #0x868
  40d104:	str	x0, [x29, #112]
  40d108:	mov	x22, x21
  40d10c:	ldrb	w23, [x22], #1
  40d110:	cbz	w23, 40e3b4 <ferror@plt+0xade4>
  40d114:	ldr	w0, [x29, #132]
  40d118:	cbnz	w0, 40d148 <ferror@plt+0x9b78>
  40d11c:	cmp	w23, #0x25
  40d120:	b.eq	40d298 <ferror@plt+0x9cc8>  // b.none
  40d124:	adrp	x25, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d128:	add	x19, x25, #0x518
  40d12c:	b.hi	40d188 <ferror@plt+0x9bb8>  // b.pmore
  40d130:	cmp	w23, #0xa
  40d134:	b.eq	40d1d4 <ferror@plt+0x9c04>  // b.none
  40d138:	cmp	w23, #0x20
  40d13c:	b.eq	40d284 <ferror@plt+0x9cb4>  // b.none
  40d140:	cmp	w23, #0x9
  40d144:	b.eq	40d284 <ferror@plt+0x9cb4>  // b.none
  40d148:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d14c:	add	x19, x19, #0x518
  40d150:	add	x0, x19, #0x138
  40d154:	ldp	x1, x2, [x0, #24]
  40d158:	cmp	x2, x1
  40d15c:	b.ne	40d168 <ferror@plt+0x9b98>  // b.any
  40d160:	mov	x1, #0x1                   	// #1
  40d164:	bl	45c22c <_obstack_newchunk@@Base>
  40d168:	ldr	x0, [x19, #336]
  40d16c:	add	x2, x0, #0x1
  40d170:	str	x2, [x19, #336]
  40d174:	strb	w23, [x0]
  40d178:	b	40d1c8 <ferror@plt+0x9bf8>
  40d17c:	mov	x19, x5
  40d180:	mov	x21, x19
  40d184:	b	40d108 <ferror@plt+0x9b38>
  40d188:	cmp	w23, #0x5c
  40d18c:	b.eq	40e3a8 <ferror@plt+0xadd8>  // b.none
  40d190:	cmp	w23, #0x7c
  40d194:	b.ne	40d148 <ferror@plt+0x9b78>  // b.any
  40d198:	bl	40ba60 <ferror@plt+0x8490>
  40d19c:	add	x0, x19, #0x138
  40d1a0:	ldp	x1, x2, [x0, #24]
  40d1a4:	cmp	x2, x1
  40d1a8:	b.ne	40d1b4 <ferror@plt+0x9be4>  // b.any
  40d1ac:	mov	x1, #0x1                   	// #1
  40d1b0:	bl	45c22c <_obstack_newchunk@@Base>
  40d1b4:	ldr	x0, [x19, #336]
  40d1b8:	mov	w1, #0x7c                  	// #124
  40d1bc:	add	x2, x0, #0x1
  40d1c0:	str	x2, [x19, #336]
  40d1c4:	strb	w1, [x0]
  40d1c8:	mov	w0, #0x1                   	// #1
  40d1cc:	str	w0, [x19, #872]
  40d1d0:	b	40d218 <ferror@plt+0x9c48>
  40d1d4:	bl	40ba60 <ferror@plt+0x8490>
  40d1d8:	ldr	x23, [x25, #1304]
  40d1dc:	cbz	x23, 40d224 <ferror@plt+0x9c54>
  40d1e0:	ldr	w21, [x23, #4]
  40d1e4:	cbz	w21, 40d224 <ferror@plt+0x9c54>
  40d1e8:	sub	w21, w21, #0x1
  40d1ec:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40d1f0:	add	x1, x1, #0xf2f
  40d1f4:	add	x0, x23, w21, uxtw #3
  40d1f8:	ldr	x0, [x0, #8]
  40d1fc:	bl	403220 <strcmp@plt>
  40d200:	cbnz	w0, 40d224 <ferror@plt+0x9c54>
  40d204:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40d208:	ldr	w0, [x0, #216]
  40d20c:	cbz	w0, 40d220 <ferror@plt+0x9c50>
  40d210:	mov	w0, #0x1                   	// #1
  40d214:	str	w0, [x19, #892]
  40d218:	mov	x19, x22
  40d21c:	b	40d180 <ferror@plt+0x9bb0>
  40d220:	str	w21, [x23, #4]
  40d224:	bl	40b488 <ferror@plt+0x7eb8>
  40d228:	ldr	x0, [x25, #1304]
  40d22c:	cbnz	x0, 40d24c <ferror@plt+0x9c7c>
  40d230:	bl	4043f8 <ferror@plt+0xe28>
  40d234:	str	wzr, [x19, #888]
  40d238:	add	x1, x19, #0x370
  40d23c:	str	wzr, [x19, #892]
  40d240:	stp	wzr, wzr, [x1, #-8]
  40d244:	stp	wzr, wzr, [x1]
  40d248:	b	40d218 <ferror@plt+0x9c48>
  40d24c:	ldr	w0, [x0, #4]
  40d250:	cbz	w0, 40d230 <ferror@plt+0x9c60>
  40d254:	bl	40bb94 <ferror@plt+0x85c4>
  40d258:	mov	w21, w0
  40d25c:	cbz	w0, 40d230 <ferror@plt+0x9c60>
  40d260:	mov	sp, x29
  40d264:	mov	w0, w21
  40d268:	ldp	x19, x20, [sp, #16]
  40d26c:	ldp	x21, x22, [sp, #32]
  40d270:	ldp	x23, x24, [sp, #48]
  40d274:	ldp	x25, x26, [sp, #64]
  40d278:	ldp	x27, x28, [sp, #80]
  40d27c:	ldp	x29, x30, [sp], #272
  40d280:	ret
  40d284:	bl	40ba60 <ferror@plt+0x8490>
  40d288:	add	x0, x19, #0x374
  40d28c:	stp	wzr, wzr, [x0, #-8]
  40d290:	stp	wzr, wzr, [x0]
  40d294:	b	40d218 <ferror@plt+0x9c48>
  40d298:	ldrb	w25, [x21, #1]
  40d29c:	add	x19, x21, #0x2
  40d2a0:	cmp	w25, #0x7c
  40d2a4:	b.hi	40e394 <ferror@plt+0xadc4>  // b.pmore
  40d2a8:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40d2ac:	add	x0, x0, #0x734
  40d2b0:	ldrh	w0, [x0, w25, uxtw #1]
  40d2b4:	adr	x1, 40d2c0 <ferror@plt+0x9cf0>
  40d2b8:	add	x0, x1, w0, sxth #2
  40d2bc:	br	x0
  40d2c0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40d2c4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40d2c8:	mov	x2, x24
  40d2cc:	add	x1, x1, #0xb9
  40d2d0:	ldr	w0, [x0, #584]
  40d2d4:	bl	422d58 <ferror@plt+0x1f788>
  40d2d8:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d2dc:	add	x21, x21, #0x518
  40d2e0:	add	x0, x21, #0x138
  40d2e4:	ldr	x22, [x21, #704]
  40d2e8:	ldp	x2, x1, [x0, #24]
  40d2ec:	sub	x1, x1, x2
  40d2f0:	cbz	x22, 40d378 <ferror@plt+0x9da8>
  40d2f4:	cmp	x22, x1
  40d2f8:	b.ls	40d304 <ferror@plt+0x9d34>  // b.plast
  40d2fc:	mov	x1, x22
  40d300:	bl	45c22c <_obstack_newchunk@@Base>
  40d304:	ldr	x1, [x21, #696]
  40d308:	mov	x2, x22
  40d30c:	ldr	x0, [x21, #336]
  40d310:	bl	402cd0 <memcpy@plt>
  40d314:	ldr	x2, [x21, #336]
  40d318:	ldr	w0, [x21, #96]
  40d31c:	add	x2, x2, x22
  40d320:	str	x2, [x21, #336]
  40d324:	tbz	w0, #31, 40d36c <ferror@plt+0x9d9c>
  40d328:	add	x0, x21, #0x138
  40d32c:	ldp	x2, x1, [x0, #24]
  40d330:	sub	x1, x1, x2
  40d334:	cmp	x1, #0x2
  40d338:	b.hi	40d344 <ferror@plt+0x9d74>  // b.pmore
  40d33c:	mov	x1, #0x3                   	// #3
  40d340:	bl	45c22c <_obstack_newchunk@@Base>
  40d344:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40d348:	add	x0, x0, #0x644
  40d34c:	ldr	x2, [x21, #336]
  40d350:	ldrh	w3, [x0]
  40d354:	ldrb	w0, [x0, #2]
  40d358:	strh	w3, [x2]
  40d35c:	strb	w0, [x2, #2]
  40d360:	ldr	x0, [x21, #336]
  40d364:	add	x0, x0, #0x3
  40d368:	str	x0, [x21, #336]
  40d36c:	mov	w0, #0x1                   	// #1
  40d370:	str	w0, [x21, #872]
  40d374:	b	40d180 <ferror@plt+0x9bb0>
  40d378:	ldrsw	x22, [x21, #440]
  40d37c:	cmp	x22, x1
  40d380:	b.ls	40d3b8 <ferror@plt+0x9de8>  // b.plast
  40d384:	mov	x1, x22
  40d388:	bl	45c22c <_obstack_newchunk@@Base>
  40d38c:	b	40d3b8 <ferror@plt+0x9de8>
  40d390:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d394:	add	x21, x21, #0x518
  40d398:	add	x0, x21, #0x138
  40d39c:	ldr	x22, [x21, #704]
  40d3a0:	ldp	x2, x1, [x0, #24]
  40d3a4:	sub	x1, x1, x2
  40d3a8:	cbnz	x22, 40d2f4 <ferror@plt+0x9d24>
  40d3ac:	ldrsw	x22, [x21, #444]
  40d3b0:	cmp	x1, x22
  40d3b4:	b.cc	40d384 <ferror@plt+0x9db4>  // b.lo, b.ul, b.last
  40d3b8:	mov	x2, x22
  40d3bc:	ldr	x1, [x21, #432]
  40d3c0:	b	40d30c <ferror@plt+0x9d3c>
  40d3c4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d3c8:	mov	w1, #0x2                   	// #2
  40d3cc:	str	w1, [x0, #2180]
  40d3d0:	b	40d180 <ferror@plt+0x9bb0>
  40d3d4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40d3d8:	add	x0, x0, #0xbb0
  40d3dc:	adrp	x3, 40e000 <ferror@plt+0xaa30>
  40d3e0:	add	x4, x29, #0x90
  40d3e4:	add	x3, x3, #0xc34
  40d3e8:	str	x0, [x29, #144]
  40d3ec:	add	x0, x20, #0x848
  40d3f0:	mov	x2, #0x0                   	// #0
  40d3f4:	mov	w1, #0x1                   	// #1
  40d3f8:	str	xzr, [x29, #160]
  40d3fc:	strh	wzr, [x29, #168]
  40d400:	bl	404ed4 <ferror@plt+0x1904>
  40d404:	b	40d180 <ferror@plt+0x9bb0>
  40d408:	mov	x2, x19
  40d40c:	ldrb	w0, [x2]
  40d410:	cbz	w0, 40d424 <ferror@plt+0x9e54>
  40d414:	cmp	w0, #0xa
  40d418:	b.eq	40d424 <ferror@plt+0x9e54>  // b.none
  40d41c:	add	x2, x2, #0x1
  40d420:	b	40d40c <ferror@plt+0x9e3c>
  40d424:	sub	x20, x2, x19
  40d428:	mov	x1, x19
  40d42c:	add	x0, x20, #0x10
  40d430:	mov	x2, x20
  40d434:	and	x0, x0, #0xfffffffffffffff0
  40d438:	sub	sp, sp, x0
  40d43c:	mov	x3, sp
  40d440:	mov	x0, x3
  40d444:	bl	403490 <strncpy@plt>
  40d448:	strb	wzr, [x0, x20]
  40d44c:	bl	403580 <gettext@plt>
  40d450:	mov	x1, x0
  40d454:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  40d458:	add	x0, x0, #0x11d
  40d45c:	bl	4221dc <ferror@plt+0x1ec0c>
  40d460:	mov	w21, #0xffffffff            	// #-1
  40d464:	b	40d260 <ferror@plt+0x9c90>
  40d468:	mov	x21, x19
  40d46c:	ldrb	w0, [x21]
  40d470:	mov	x22, x21
  40d474:	add	x21, x21, #0x1
  40d478:	cbz	w0, 40d484 <ferror@plt+0x9eb4>
  40d47c:	cmp	w0, #0xa
  40d480:	b.ne	40d46c <ferror@plt+0x9e9c>  // b.any
  40d484:	sub	x23, x22, x19
  40d488:	mov	x1, x19
  40d48c:	add	x0, x23, #0x10
  40d490:	mov	x2, x23
  40d494:	and	x0, x0, #0xfffffffffffffff0
  40d498:	sub	sp, sp, x0
  40d49c:	mov	x3, sp
  40d4a0:	mov	x0, x3
  40d4a4:	bl	403490 <strncpy@plt>
  40d4a8:	strb	wzr, [x0, x23]
  40d4ac:	bl	403580 <gettext@plt>
  40d4b0:	mov	x2, x0
  40d4b4:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  40d4b8:	mov	w0, #0x0                   	// #0
  40d4bc:	add	x1, x1, #0x11d
  40d4c0:	bl	421e40 <ferror@plt+0x1e870>
  40d4c4:	ldrb	w0, [x22]
  40d4c8:	cmp	w0, #0x0
  40d4cc:	csel	x19, x22, x21, eq  // eq = none
  40d4d0:	b	40d180 <ferror@plt+0x9bb0>
  40d4d4:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d4d8:	add	x21, x21, #0x518
  40d4dc:	ldr	w0, [x21, #692]
  40d4e0:	cbnz	w0, 40d62c <ferror@plt+0xa05c>
  40d4e4:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40d4e8:	add	x22, x22, #0xcc0
  40d4ec:	add	x1, x29, #0x90
  40d4f0:	mov	x0, x22
  40d4f4:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  40d4f8:	cbnz	w0, 40d62c <ferror@plt+0xa05c>
  40d4fc:	ldr	w0, [x29, #160]
  40d500:	and	w0, w0, #0xf000
  40d504:	cmp	w0, #0x4, lsl #12
  40d508:	b.eq	40d62c <ferror@plt+0xa05c>  // b.none
  40d50c:	mov	x0, x22
  40d510:	mov	w1, #0x2                   	// #2
  40d514:	bl	403190 <access@plt>
  40d518:	cbnz	w0, 40d62c <ferror@plt+0xa05c>
  40d51c:	add	x0, x21, #0x138
  40d520:	ldp	x2, x1, [x0, #24]
  40d524:	sub	x1, x1, x2
  40d528:	cmp	x1, #0x8
  40d52c:	b.hi	40d538 <ferror@plt+0x9f68>  // b.pmore
  40d530:	mov	x1, #0x9                   	// #9
  40d534:	bl	45c22c <_obstack_newchunk@@Base>
  40d538:	ldr	x1, [x21, #336]
  40d53c:	str	wzr, [x21, #876]
  40d540:	ldr	x2, [x22]
  40d544:	str	x2, [x1]
  40d548:	ldrb	w2, [x22, #8]
  40d54c:	strb	w2, [x1, #8]
  40d550:	ldr	x1, [x21, #336]
  40d554:	add	x1, x1, #0x9
  40d558:	str	x1, [x21, #336]
  40d55c:	b	40d36c <ferror@plt+0x9d9c>
  40d560:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40d564:	ldr	w0, [x0, #216]
  40d568:	cbz	w0, 40d62c <ferror@plt+0xa05c>
  40d56c:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d570:	add	x21, x21, #0x518
  40d574:	add	x0, x21, #0x138
  40d578:	ldp	x1, x2, [x0, #24]
  40d57c:	cmp	x2, x1
  40d580:	b.ne	40d58c <ferror@plt+0x9fbc>  // b.any
  40d584:	mov	x1, #0x1                   	// #1
  40d588:	bl	45c22c <_obstack_newchunk@@Base>
  40d58c:	ldr	x0, [x21, #336]
  40d590:	mov	w1, #0x2d                  	// #45
  40d594:	str	wzr, [x21, #876]
  40d598:	add	x2, x0, #0x1
  40d59c:	str	x2, [x21, #336]
  40d5a0:	strb	w1, [x0]
  40d5a4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40d5a8:	add	x1, x1, #0x228
  40d5ac:	mov	w0, #0x1                   	// #1
  40d5b0:	mov	w2, #0x8c                  	// #140
  40d5b4:	str	w0, [x21, #872]
  40d5b8:	ldrb	w0, [x19]
  40d5bc:	cmp	w0, #0x2e
  40d5c0:	b.eq	40d5d0 <ferror@plt+0xa000>  // b.none
  40d5c4:	ldrh	w3, [x1, w0, sxtw #1]
  40d5c8:	tst	w2, w3
  40d5cc:	b.eq	40d610 <ferror@plt+0xa040>  // b.none
  40d5d0:	add	x19, x19, #0x1
  40d5d4:	b	40d5b8 <ferror@plt+0x9fe8>
  40d5d8:	adrp	x0, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40d5dc:	ldr	w0, [x0, #216]
  40d5e0:	cbz	w0, 40d62c <ferror@plt+0xa05c>
  40d5e4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40d5e8:	add	x1, x1, #0x228
  40d5ec:	mov	w2, #0x8c                  	// #140
  40d5f0:	ldrb	w0, [x19]
  40d5f4:	cmp	w0, #0x2e
  40d5f8:	b.eq	40d608 <ferror@plt+0xa038>  // b.none
  40d5fc:	ldrh	w3, [x1, w0, sxtw #1]
  40d600:	tst	w2, w3
  40d604:	b.eq	40d610 <ferror@plt+0xa040>  // b.none
  40d608:	add	x19, x19, #0x1
  40d60c:	b	40d5f0 <ferror@plt+0xa020>
  40d610:	cmp	w0, #0x25
  40d614:	b.ne	40d180 <ferror@plt+0x9bb0>  // b.any
  40d618:	ldrb	w0, [x19, #1]
  40d61c:	cmp	w0, #0x4f
  40d620:	b.ne	40d180 <ferror@plt+0x9bb0>  // b.any
  40d624:	add	x19, x19, #0x2
  40d628:	b	40d180 <ferror@plt+0x9bb0>
  40d62c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  40d630:	mov	x22, x19
  40d634:	add	x0, x0, #0x228
  40d638:	mov	w2, #0x8c                  	// #140
  40d63c:	ldrb	w1, [x22]
  40d640:	cmp	w1, #0x2e
  40d644:	b.eq	40d654 <ferror@plt+0xa084>  // b.none
  40d648:	ldrh	w3, [x0, w1, sxtw #1]
  40d64c:	tst	w2, w3
  40d650:	b.eq	40d65c <ferror@plt+0xa08c>  // b.none
  40d654:	add	x22, x22, #0x1
  40d658:	b	40d63c <ferror@plt+0xa06c>
  40d65c:	sub	x28, x22, x19
  40d660:	cmp	w1, #0x25
  40d664:	mov	w21, w28
  40d668:	b.ne	40d7d0 <ferror@plt+0xa200>  // b.any
  40d66c:	ldrb	w1, [x22, #1]
  40d670:	cmp	w1, #0x4f
  40d674:	b.ne	40d7d0 <ferror@plt+0xa200>  // b.any
  40d678:	ldrb	w3, [x22, #2]
  40d67c:	add	x27, x22, #0x2
  40d680:	cmp	w3, #0x2e
  40d684:	b.eq	40d694 <ferror@plt+0xa0c4>  // b.none
  40d688:	ldrh	w0, [x0, w3, sxtw #1]
  40d68c:	tst	w2, w0
  40d690:	b.eq	40d6ac <ferror@plt+0xa0dc>  // b.none
  40d694:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40d698:	mov	x2, x24
  40d69c:	add	x1, x1, #0xca
  40d6a0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40d6a4:	ldr	w0, [x0, #584]
  40d6a8:	bl	422d58 <ferror@plt+0x1f788>
  40d6ac:	adrp	x21, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40d6b0:	add	x21, x21, #0xb6
  40d6b4:	cbz	w28, 40d7c4 <ferror@plt+0xa1f4>
  40d6b8:	sxtw	x22, w28
  40d6bc:	add	x0, x22, #0x3
  40d6c0:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40d6c4:	mov	x2, x22
  40d6c8:	mov	x23, x0
  40d6cc:	mov	x1, x19
  40d6d0:	bl	403490 <strncpy@plt>
  40d6d4:	mov	x1, x21
  40d6d8:	add	x0, x23, x22
  40d6dc:	bl	403360 <strcpy@plt>
  40d6e0:	add	w21, w28, #0x2
  40d6e4:	mov	x22, x27
  40d6e8:	adrp	x3, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40d6ec:	add	x27, x3, #0x518
  40d6f0:	ldr	w0, [x27, #96]
  40d6f4:	tbz	w0, #31, 40d714 <ferror@plt+0xa144>
  40d6f8:	mov	x1, x19
  40d6fc:	mov	x2, #0x0                   	// #0
  40d700:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40d704:	add	w21, w21, #0x3
  40d708:	add	x0, x0, #0x644
  40d70c:	bl	45a668 <ferror@plt+0x57098>
  40d710:	mov	x19, x0
  40d714:	ldr	x28, [x27, #704]
  40d718:	cbz	x28, 40d7d8 <ferror@plt+0xa208>
  40d71c:	add	w25, w21, w28
  40d720:	mov	x2, x28
  40d724:	add	w1, w25, #0x1
  40d728:	str	w1, [x27, #792]
  40d72c:	sxtw	x21, w21
  40d730:	sxtw	x1, w1
  40d734:	add	x1, x1, #0xf
  40d738:	and	x1, x1, #0xfffffffffffffff0
  40d73c:	sub	sp, sp, x1
  40d740:	ldr	x1, [x27, #696]
  40d744:	mov	x23, sp
  40d748:	add	x28, x23, x28
  40d74c:	mov	x0, x23
  40d750:	bl	402cd0 <memcpy@plt>
  40d754:	mov	x1, x19
  40d758:	mov	x2, x21
  40d75c:	mov	x0, x28
  40d760:	bl	402cd0 <memcpy@plt>
  40d764:	mov	w1, w25
  40d768:	mov	x0, x23
  40d76c:	strb	wzr, [x28, x21]
  40d770:	bl	404640 <ferror@plt+0x1070>
  40d774:	str	x0, [x27, #784]
  40d778:	add	x0, x27, #0x138
  40d77c:	ldrsw	x19, [x27, #792]
  40d780:	ldp	x2, x1, [x0, #24]
  40d784:	sub	x1, x1, x2
  40d788:	cmp	x19, x1
  40d78c:	b.ls	40d798 <ferror@plt+0xa1c8>  // b.plast
  40d790:	mov	x1, x19
  40d794:	bl	45c22c <_obstack_newchunk@@Base>
  40d798:	ldr	x0, [x27, #336]
  40d79c:	mov	x2, x19
  40d7a0:	ldr	x1, [x27, #784]
  40d7a4:	bl	402cd0 <memcpy@plt>
  40d7a8:	str	wzr, [x27, #876]
  40d7ac:	ldr	x2, [x27, #336]
  40d7b0:	mov	w0, #0x1                   	// #1
  40d7b4:	str	w0, [x27, #872]
  40d7b8:	add	x2, x2, x19
  40d7bc:	str	x2, [x27, #336]
  40d7c0:	b	40d218 <ferror@plt+0x9c48>
  40d7c4:	mov	x19, x21
  40d7c8:	mov	x23, #0x0                   	// #0
  40d7cc:	b	40d6e0 <ferror@plt+0xa110>
  40d7d0:	mov	x23, #0x0                   	// #0
  40d7d4:	b	40d6e8 <ferror@plt+0xa118>
  40d7d8:	ldr	w0, [x27, #692]
  40d7dc:	cbz	w0, 40d8b4 <ferror@plt+0xa2e4>
  40d7e0:	ldr	w4, [x27, #440]
  40d7e4:	add	w5, w4, w21
  40d7e8:	str	w5, [x29, #120]
  40d7ec:	add	w1, w5, #0x1
  40d7f0:	str	w1, [x27, #792]
  40d7f4:	sxtw	x4, w4
  40d7f8:	str	x4, [x29, #136]
  40d7fc:	sxtw	x1, w1
  40d800:	mov	x2, x4
  40d804:	add	x1, x1, #0xf
  40d808:	and	x1, x1, #0xfffffffffffffff0
  40d80c:	sub	sp, sp, x1
  40d810:	ldr	x1, [x27, #432]
  40d814:	mov	x28, sp
  40d818:	mov	x0, x28
  40d81c:	bl	402cd0 <memcpy@plt>
  40d820:	ldr	x4, [x29, #136]
  40d824:	mov	x1, x19
  40d828:	sxtw	x2, w21
  40d82c:	add	x0, x28, x4
  40d830:	bl	402cd0 <memcpy@plt>
  40d834:	str	x28, [x27, #784]
  40d838:	ldr	w5, [x29, #120]
  40d83c:	mov	x0, x28
  40d840:	ldr	x1, [x27, #224]
  40d844:	strb	wzr, [x28, w5, sxtw]
  40d848:	bl	45a8bc <ferror@plt+0x572ec>
  40d84c:	cbz	w0, 40d8b4 <ferror@plt+0xa2e4>
  40d850:	ldr	w0, [x27, #456]
  40d854:	cbnz	w0, 40d924 <ferror@plt+0xa354>
  40d858:	ldr	x0, [x27, #224]
  40d85c:	add	x1, x27, #0x3a0
  40d860:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  40d864:	tbz	w0, #31, 40d87c <ferror@plt+0xa2ac>
  40d868:	str	w0, [x27, #456]
  40d86c:	ldr	w1, [x27, #792]
  40d870:	ldr	x0, [x27, #784]
  40d874:	sub	w1, w1, #0x1
  40d878:	b	40d770 <ferror@plt+0xa1a0>
  40d87c:	mov	w0, #0x1                   	// #1
  40d880:	str	w0, [x27, #456]
  40d884:	ldr	x0, [x27, #784]
  40d888:	add	x1, x29, #0x90
  40d88c:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  40d890:	tbnz	w0, #31, 40d86c <ferror@plt+0xa29c>
  40d894:	ldr	x1, [x29, #144]
  40d898:	ldr	x2, [x27, #928]
  40d89c:	cmp	x2, x1
  40d8a0:	b.ne	40d86c <ferror@plt+0xa29c>  // b.any
  40d8a4:	ldr	x0, [x29, #152]
  40d8a8:	ldr	x1, [x27, #936]
  40d8ac:	cmp	x1, x0
  40d8b0:	b.ne	40d86c <ferror@plt+0xa29c>  // b.any
  40d8b4:	and	w0, w25, #0xffffffdf
  40d8b8:	cmp	w25, #0x6a
  40d8bc:	and	w1, w0, #0xff
  40d8c0:	str	w1, [x29, #120]
  40d8c4:	cset	w1, eq  // eq = none
  40d8c8:	cmp	w0, #0x55
  40d8cc:	mov	w0, w1
  40d8d0:	sxtw	x2, w21
  40d8d4:	ldr	x28, [x27, #768]
  40d8d8:	csinc	w5, w0, wzr, ne  // ne = any
  40d8dc:	str	w1, [x29, #136]
  40d8e0:	cbz	x28, 40d930 <ferror@plt+0xa360>
  40d8e4:	ldr	w0, [x28, #8]
  40d8e8:	cmp	w0, w21
  40d8ec:	b.ne	40d91c <ferror@plt+0xa34c>  // b.any
  40d8f0:	ldr	x0, [x28]
  40d8f4:	mov	x1, x19
  40d8f8:	str	w5, [x29, #96]
  40d8fc:	str	x2, [x29, #104]
  40d900:	bl	402f80 <strncmp@plt>
  40d904:	ldr	w5, [x29, #96]
  40d908:	ldr	x2, [x29, #104]
  40d90c:	cbnz	w0, 40d91c <ferror@plt+0xa34c>
  40d910:	ldr	w0, [x28, #12]
  40d914:	cmp	w0, w5
  40d918:	b.eq	40d930 <ferror@plt+0xa360>  // b.none
  40d91c:	ldr	x28, [x28, #32]
  40d920:	b	40d8e0 <ferror@plt+0xa310>
  40d924:	cmp	w0, #0x1
  40d928:	b.ne	40d86c <ferror@plt+0xa29c>  // b.any
  40d92c:	b	40d884 <ferror@plt+0xa2b4>
  40d930:	cmp	w25, #0x75
  40d934:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  40d938:	b.eq	40d9e0 <ferror@plt+0xa410>  // b.none
  40d93c:	cmp	w25, #0x6a
  40d940:	b.ne	40d98c <ferror@plt+0xa3bc>  // b.any
  40d944:	str	w21, [x28, #8]
  40d948:	cbz	x23, 40da00 <ferror@plt+0xa430>
  40d94c:	str	x23, [x28]
  40d950:	ldr	w0, [x29, #120]
  40d954:	mov	x23, #0x0                   	// #0
  40d958:	cmp	w0, #0x55
  40d95c:	ldr	w0, [x29, #136]
  40d960:	csinc	w0, w0, wzr, ne  // ne = any
  40d964:	str	w0, [x28, #12]
  40d968:	str	w0, [x29, #136]
  40d96c:	ldr	x0, [x28]
  40d970:	bl	45c0d8 <ferror@plt+0x58b08>
  40d974:	mov	x19, x0
  40d978:	str	x0, [x27, #784]
  40d97c:	bl	402d50 <strlen@plt>
  40d980:	str	x19, [x28, #16]
  40d984:	str	w0, [x28, #24]
  40d988:	str	w0, [x27, #792]
  40d98c:	mov	x0, x23
  40d990:	bl	4032a0 <free@plt>
  40d994:	add	x0, x27, #0x138
  40d998:	ldrsw	x19, [x28, #24]
  40d99c:	ldp	x2, x1, [x0, #24]
  40d9a0:	sub	x1, x1, x2
  40d9a4:	cmp	x19, x1
  40d9a8:	b.ls	40d9b4 <ferror@plt+0xa3e4>  // b.plast
  40d9ac:	mov	x1, x19
  40d9b0:	bl	45c22c <_obstack_newchunk@@Base>
  40d9b4:	ldr	x1, [x28, #16]
  40d9b8:	mov	x2, x19
  40d9bc:	ldr	x0, [x27, #336]
  40d9c0:	bl	402cd0 <memcpy@plt>
  40d9c4:	ldr	x2, [x27, #336]
  40d9c8:	mov	w0, #0x1                   	// #1
  40d9cc:	str	w0, [x27, #872]
  40d9d0:	add	x2, x2, x19
  40d9d4:	str	x2, [x27, #336]
  40d9d8:	str	w0, [x27, #876]
  40d9dc:	b	40d218 <ferror@plt+0x9c48>
  40d9e0:	cbnz	x28, 40d944 <ferror@plt+0xa374>
  40d9e4:	mov	x0, #0x28                  	// #40
  40d9e8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40d9ec:	mov	x28, x0
  40d9f0:	ldr	x0, [x27, #768]
  40d9f4:	str	x28, [x27, #768]
  40d9f8:	str	x0, [x28, #32]
  40d9fc:	b	40d944 <ferror@plt+0xa374>
  40da00:	mov	w1, w21
  40da04:	mov	x0, x19
  40da08:	bl	404640 <ferror@plt+0x1070>
  40da0c:	str	x0, [x28]
  40da10:	b	40d950 <ferror@plt+0xa380>
  40da14:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40da18:	add	x21, x21, #0x518
  40da1c:	ldrb	w0, [x21, #624]
  40da20:	cbz	w0, 40da98 <ferror@plt+0xa4c8>
  40da24:	ldrb	w0, [x21, #460]
  40da28:	cbz	w0, 40da30 <ferror@plt+0xa460>
  40da2c:	bl	406a48 <ferror@plt+0x3478>
  40da30:	mov	x22, #0x0                   	// #0
  40da34:	mov	w25, #0x1                   	// #1
  40da38:	ldr	w0, [x21, #232]
  40da3c:	cmp	w0, w22
  40da40:	b.le	40dd44 <ferror@plt+0xa774>
  40da44:	ldr	x0, [x21, #256]
  40da48:	lsl	x23, x22, #5
  40da4c:	add	x1, x0, x22, lsl #5
  40da50:	ldr	x2, [x1, #8]
  40da54:	cbz	x2, 40da64 <ferror@plt+0xa494>
  40da58:	ldrb	w2, [x2]
  40da5c:	cmp	w2, #0x2a
  40da60:	b.eq	40da90 <ferror@plt+0xa4c0>  // b.none
  40da64:	ldr	x2, [x1, #16]
  40da68:	ldr	x1, [x21, #632]
  40da6c:	cmp	x2, x1
  40da70:	b.ne	40da90 <ferror@plt+0xa4c0>  // b.any
  40da74:	ldr	x0, [x0, x23]
  40da78:	mov	w2, #0x0                   	// #0
  40da7c:	mov	w1, #0x0                   	// #0
  40da80:	bl	40b870 <ferror@plt+0x82a0>
  40da84:	ldr	x0, [x21, #256]
  40da88:	add	x0, x0, x23
  40da8c:	strb	w25, [x0, #24]
  40da90:	add	x22, x22, #0x1
  40da94:	b	40da38 <ferror@plt+0xa468>
  40da98:	add	x0, x21, #0x138
  40da9c:	ldr	x22, [x21, #424]
  40daa0:	ldp	x2, x1, [x0, #24]
  40daa4:	sub	x1, x1, x2
  40daa8:	cmp	x22, x1
  40daac:	b.ls	40dab8 <ferror@plt+0xa4e8>  // b.plast
  40dab0:	mov	x1, x22
  40dab4:	bl	45c22c <_obstack_newchunk@@Base>
  40dab8:	ldr	x1, [x21, #224]
  40dabc:	mov	x2, x22
  40dac0:	ldr	x0, [x21, #336]
  40dac4:	bl	402cd0 <memcpy@plt>
  40dac8:	ldr	x2, [x21, #336]
  40dacc:	add	x2, x2, x22
  40dad0:	str	x2, [x21, #336]
  40dad4:	b	40d36c <ferror@plt+0x9d9c>
  40dad8:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dadc:	add	x21, x21, #0x518
  40dae0:	ldr	x0, [x21, #72]
  40dae4:	cbz	x0, 40db34 <ferror@plt+0xa564>
  40dae8:	mov	x2, #0x0                   	// #0
  40daec:	mov	w1, #0x1                   	// #1
  40daf0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40daf4:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40daf8:	add	x0, x0, #0xe9
  40dafc:	add	x22, x22, #0xd73
  40db00:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db04:	mov	x2, #0x0                   	// #0
  40db08:	mov	w1, #0x0                   	// #0
  40db0c:	mov	x0, x22
  40db10:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db14:	ldr	x0, [x21, #72]
  40db18:	mov	x2, #0x0                   	// #0
  40db1c:	mov	w1, #0x1                   	// #1
  40db20:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db24:	mov	x0, x22
  40db28:	mov	x2, #0x0                   	// #0
  40db2c:	mov	w1, #0x0                   	// #0
  40db30:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db34:	ldr	x0, [x21, #80]
  40db38:	cbz	x0, 40db88 <ferror@plt+0xa5b8>
  40db3c:	mov	x2, #0x0                   	// #0
  40db40:	mov	w1, #0x1                   	// #1
  40db44:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40db48:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40db4c:	add	x0, x0, #0xf4
  40db50:	add	x22, x22, #0xd73
  40db54:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db58:	mov	x2, #0x0                   	// #0
  40db5c:	mov	w1, #0x0                   	// #0
  40db60:	mov	x0, x22
  40db64:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db68:	ldr	x0, [x21, #80]
  40db6c:	mov	x2, #0x0                   	// #0
  40db70:	mov	w1, #0x1                   	// #1
  40db74:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db78:	mov	x0, x22
  40db7c:	mov	x2, #0x0                   	// #0
  40db80:	mov	w1, #0x0                   	// #0
  40db84:	bl	40d0b0 <ferror@plt+0x9ae0>
  40db88:	ldr	x0, [x21, #592]
  40db8c:	cbz	x0, 40dbdc <ferror@plt+0xa60c>
  40db90:	mov	x2, #0x0                   	// #0
  40db94:	mov	w1, #0x1                   	// #1
  40db98:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40db9c:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40dba0:	add	x0, x0, #0x100
  40dba4:	add	x22, x22, #0xd73
  40dba8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dbac:	mov	x2, #0x0                   	// #0
  40dbb0:	mov	w1, #0x0                   	// #0
  40dbb4:	mov	x0, x22
  40dbb8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dbbc:	ldr	x0, [x21, #592]
  40dbc0:	mov	x2, #0x0                   	// #0
  40dbc4:	mov	w1, #0x1                   	// #1
  40dbc8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dbcc:	mov	x0, x22
  40dbd0:	mov	x2, #0x0                   	// #0
  40dbd4:	mov	w1, #0x0                   	// #0
  40dbd8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dbdc:	ldr	w0, [x21, #688]
  40dbe0:	cbnz	w0, 40dbf4 <ferror@plt+0xa624>
  40dbe4:	ldr	x0, [x21, #288]
  40dbe8:	cbz	x0, 40dc54 <ferror@plt+0xa684>
  40dbec:	ldr	x0, [x21, #296]
  40dbf0:	cbz	x0, 40dc54 <ferror@plt+0xa684>
  40dbf4:	mov	x2, #0x0                   	// #0
  40dbf8:	mov	w1, #0x1                   	// #1
  40dbfc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40dc00:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40dc04:	add	x0, x0, #0x109
  40dc08:	add	x22, x22, #0xd73
  40dc0c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dc10:	mov	x2, #0x0                   	// #0
  40dc14:	mov	w1, #0x0                   	// #0
  40dc18:	mov	x0, x22
  40dc1c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dc20:	ldr	x0, [x21, #288]
  40dc24:	mov	x2, #0x0                   	// #0
  40dc28:	mov	w1, #0x1                   	// #1
  40dc2c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dc30:	ldr	x0, [x21, #296]
  40dc34:	cbz	x0, 40dc44 <ferror@plt+0xa674>
  40dc38:	mov	x2, #0x0                   	// #0
  40dc3c:	mov	w1, #0x1                   	// #1
  40dc40:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dc44:	mov	x0, x22
  40dc48:	mov	x2, #0x0                   	// #0
  40dc4c:	mov	w1, #0x0                   	// #0
  40dc50:	bl	40d0b0 <ferror@plt+0x9ae0>
  40dc54:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40dc58:	add	x0, x0, #0x113
  40dc5c:	str	x0, [x29, #144]
  40dc60:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40dc64:	add	x0, x0, #0xa40
  40dc68:	adrp	x22, 40e000 <ferror@plt+0xaa30>
  40dc6c:	add	x22, x22, #0xc34
  40dc70:	str	x0, [x29, #152]
  40dc74:	mov	w0, #0x100                 	// #256
  40dc78:	mov	x2, #0x7                   	// #7
  40dc7c:	mov	w1, #0x0                   	// #0
  40dc80:	add	x4, x29, #0x90
  40dc84:	mov	x3, x22
  40dc88:	str	x2, [x29, #160]
  40dc8c:	strh	w0, [x29, #168]
  40dc90:	add	x0, x20, #0x868
  40dc94:	bl	404ed4 <ferror@plt+0x1904>
  40dc98:	ldr	x1, [x20, #2224]
  40dc9c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40dca0:	add	x0, x0, #0x11c
  40dca4:	str	x0, [x29, #152]
  40dca8:	ldrb	w1, [x1]
  40dcac:	cbz	w1, 40dccc <ferror@plt+0xa6fc>
  40dcb0:	ldr	x2, [x21, #72]
  40dcb4:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40dcb8:	add	x1, x1, #0x830
  40dcbc:	mov	x3, #0x0                   	// #0
  40dcc0:	add	x1, x1, #0x74
  40dcc4:	bl	45a668 <ferror@plt+0x57098>
  40dcc8:	str	x0, [x29, #152]
  40dccc:	ldr	x0, [x29, #152]
  40dcd0:	bl	402d50 <strlen@plt>
  40dcd4:	mov	x2, x0
  40dcd8:	add	x4, x29, #0x90
  40dcdc:	mov	x3, x22
  40dce0:	mov	w1, #0x0                   	// #0
  40dce4:	str	x2, [x29, #160]
  40dce8:	ldr	x0, [x29, #112]
  40dcec:	b	40d400 <ferror@plt+0x9e30>
  40dcf0:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dcf4:	add	x21, x21, #0x518
  40dcf8:	ldrb	w0, [x21, #460]
  40dcfc:	cbz	w0, 40dd04 <ferror@plt+0xa734>
  40dd00:	bl	406a48 <ferror@plt+0x3478>
  40dd04:	adrp	x23, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dd08:	add	x23, x23, #0x94c
  40dd0c:	mov	x22, #0x0                   	// #0
  40dd10:	ldr	w0, [x21, #232]
  40dd14:	ldr	w1, [x23]
  40dd18:	add	w0, w0, w1
  40dd1c:	cmp	w0, w22
  40dd20:	b.le	40dd44 <ferror@plt+0xa774>
  40dd24:	ldr	x0, [x21, #240]
  40dd28:	ldr	x0, [x0, x22, lsl #3]
  40dd2c:	cbz	x0, 40dd3c <ferror@plt+0xa76c>
  40dd30:	mov	w2, #0x0                   	// #0
  40dd34:	mov	w1, #0x0                   	// #0
  40dd38:	bl	40b870 <ferror@plt+0x82a0>
  40dd3c:	add	x22, x22, #0x1
  40dd40:	b	40dd10 <ferror@plt+0xa740>
  40dd44:	ldrb	w0, [x21, #460]
  40dd48:	cbz	w0, 40d180 <ferror@plt+0x9bb0>
  40dd4c:	bl	40b8f4 <ferror@plt+0x8324>
  40dd50:	b	40d180 <ferror@plt+0x9bb0>
  40dd54:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dd58:	add	x21, x21, #0x518
  40dd5c:	add	x0, x21, #0x138
  40dd60:	ldp	x2, x1, [x0, #24]
  40dd64:	sub	x1, x1, x2
  40dd68:	cmp	x1, #0x1
  40dd6c:	b.hi	40dd78 <ferror@plt+0xa7a8>  // b.pmore
  40dd70:	mov	x1, #0x2                   	// #2
  40dd74:	bl	45c22c <_obstack_newchunk@@Base>
  40dd78:	ldr	x1, [x21, #336]
  40dd7c:	mov	w2, #0x6f2e                	// #28462
  40dd80:	strh	w2, [x1]
  40dd84:	ldr	x1, [x21, #336]
  40dd88:	add	x1, x1, #0x2
  40dd8c:	str	x1, [x21, #336]
  40dd90:	b	40d36c <ferror@plt+0x9d9c>
  40dd94:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dd98:	mov	w1, #0x1                   	// #1
  40dd9c:	str	w1, [x0, #2188]
  40dda0:	b	40d180 <ferror@plt+0x9bb0>
  40dda4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dda8:	mov	w1, #0x1                   	// #1
  40ddac:	str	w1, [x0, #2192]
  40ddb0:	b	40d180 <ferror@plt+0x9bb0>
  40ddb4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ddb8:	add	x0, x0, #0x518
  40ddbc:	ldrsw	x1, [x0, #868]
  40ddc0:	ldr	x0, [x0, #240]
  40ddc4:	str	xzr, [x0, x1, lsl #3]
  40ddc8:	b	40d180 <ferror@plt+0x9bb0>
  40ddcc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ddd0:	mov	w1, #0x1                   	// #1
  40ddd4:	str	w1, [x0, #2184]
  40ddd8:	b	40d180 <ferror@plt+0x9bb0>
  40dddc:	adrp	x23, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dde0:	ldr	x0, [x23, #1304]
  40dde4:	cbz	x0, 40de08 <ferror@plt+0xa838>
  40dde8:	ldr	w22, [x0, #4]
  40ddec:	ldrb	w3, [x21, #2]
  40ddf0:	cmp	w3, #0x7b
  40ddf4:	b.eq	40de10 <ferror@plt+0xa840>  // b.none
  40ddf8:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ddfc:	mov	x2, x24
  40de00:	add	x1, x1, #0x12a
  40de04:	b	40d6a0 <ferror@plt+0xa0d0>
  40de08:	mov	w22, #0x0                   	// #0
  40de0c:	b	40ddec <ferror@plt+0xa81c>
  40de10:	add	x0, x21, #0x3
  40de14:	bl	40c92c <ferror@plt+0x935c>
  40de18:	mov	x19, x0
  40de1c:	cbz	x0, 40d460 <ferror@plt+0x9e90>
  40de20:	bl	40ba60 <ferror@plt+0x8490>
  40de24:	ldr	x1, [x23, #1304]
  40de28:	cbz	x1, 40de58 <ferror@plt+0xa888>
  40de2c:	ldr	w0, [x1, #4]
  40de30:	cmp	w22, w0
  40de34:	b.eq	40d180 <ferror@plt+0x9bb0>  // b.none
  40de38:	ldr	w0, [x1, #4]
  40de3c:	mov	w2, #0x1                   	// #1
  40de40:	sub	w0, w0, #0x1
  40de44:	add	x0, x1, x0, lsl #3
  40de48:	mov	w1, #0x0                   	// #0
  40de4c:	ldr	x0, [x0, #8]
  40de50:	bl	407e34 <ferror@plt+0x4864>
  40de54:	b	40d180 <ferror@plt+0x9bb0>
  40de58:	mov	w0, #0x0                   	// #0
  40de5c:	b	40de30 <ferror@plt+0xa860>
  40de60:	ldrb	w3, [x21, #2]
  40de64:	cmp	w3, #0x7b
  40de68:	b.eq	40de7c <ferror@plt+0xa8ac>  // b.none
  40de6c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40de70:	mov	x2, x24
  40de74:	add	x1, x1, #0x149
  40de78:	b	40d6a0 <ferror@plt+0xa0d0>
  40de7c:	adrp	x22, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40de80:	add	x22, x22, #0x518
  40de84:	ldrb	w0, [x22, #460]
  40de88:	cbz	w0, 40de90 <ferror@plt+0xa8c0>
  40de8c:	bl	406a48 <ferror@plt+0x3478>
  40de90:	add	x0, x21, #0x3
  40de94:	bl	40c92c <ferror@plt+0x935c>
  40de98:	mov	x19, x0
  40de9c:	ldrb	w0, [x22, #460]
  40dea0:	cbz	w0, 40dea8 <ferror@plt+0xa8d8>
  40dea4:	bl	40b8f4 <ferror@plt+0x8324>
  40dea8:	cbnz	x19, 40d180 <ferror@plt+0x9bb0>
  40deac:	b	40d460 <ferror@plt+0x9e90>
  40deb0:	ldrb	w3, [x21, #2]
  40deb4:	cmp	w3, #0x7b
  40deb8:	b.eq	40decc <ferror@plt+0xa8fc>  // b.none
  40debc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40dec0:	mov	x2, x24
  40dec4:	add	x1, x1, #0x168
  40dec8:	b	40d6a0 <ferror@plt+0xa0d0>
  40decc:	mov	x22, x19
  40ded0:	ldrb	w0, [x22], #1
  40ded4:	cmp	w0, #0x7d
  40ded8:	b.ne	40ded0 <ferror@plt+0xa900>  // b.any
  40dedc:	sub	x1, x22, x19
  40dee0:	add	x0, x21, #0x3
  40dee4:	sub	w1, w1, #0x2
  40dee8:	bl	404640 <ferror@plt+0x1070>
  40deec:	mov	x19, x0
  40def0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40def4:	mov	w23, #0x0                   	// #0
  40def8:	ldr	x25, [x0, #2032]
  40defc:	cbz	x25, 40df38 <ferror@plt+0xa968>
  40df00:	ldr	w0, [x25, #4]
  40df04:	cmp	w23, w0
  40df08:	b.cs	40df38 <ferror@plt+0xa968>  // b.hs, b.nlast
  40df0c:	add	x0, x25, w23, uxtw #3
  40df10:	ldr	x1, [x0, #8]
  40df14:	mov	x0, x19
  40df18:	bl	403220 <strcmp@plt>
  40df1c:	mov	w21, w0
  40df20:	cbnz	w0, 40df30 <ferror@plt+0xa960>
  40df24:	mov	x0, x19
  40df28:	bl	4032a0 <free@plt>
  40df2c:	b	40d260 <ferror@plt+0x9c90>
  40df30:	add	w23, w23, #0x1
  40df34:	b	40defc <ferror@plt+0xa92c>
  40df38:	mov	x0, x19
  40df3c:	bl	402d50 <strlen@plt>
  40df40:	mov	w1, w0
  40df44:	mov	x0, x19
  40df48:	bl	4098a0 <ferror@plt+0x62d0>
  40df4c:	mov	x0, x19
  40df50:	bl	4032a0 <free@plt>
  40df54:	b	40d218 <ferror@plt+0x9c48>
  40df58:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40df5c:	ldr	x0, [x0, #2032]
  40df60:	bl	40ed44 <ferror@plt+0xb774>
  40df64:	b	40d180 <ferror@plt+0x9bb0>
  40df68:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40df6c:	ldr	x0, [x0, #2040]
  40df70:	b	40df60 <ferror@plt+0xa990>
  40df74:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40df78:	ldr	x0, [x0, #2048]
  40df7c:	b	40df60 <ferror@plt+0xa990>
  40df80:	ldr	x0, [x20, #2288]
  40df84:	mov	x2, #0x0                   	// #0
  40df88:	mov	w1, #0x0                   	// #0
  40df8c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40df90:	mov	w21, w0
  40df94:	cbz	w0, 40d180 <ferror@plt+0x9bb0>
  40df98:	b	40d260 <ferror@plt+0x9c90>
  40df9c:	mov	x2, #0x0                   	// #0
  40dfa0:	mov	w1, #0x0                   	// #0
  40dfa4:	ldr	x0, [x20, #2296]
  40dfa8:	b	40df8c <ferror@plt+0xa9bc>
  40dfac:	mov	x2, #0x0                   	// #0
  40dfb0:	mov	w1, #0x0                   	// #0
  40dfb4:	ldr	x0, [x20, #2304]
  40dfb8:	b	40df8c <ferror@plt+0xa9bc>
  40dfbc:	mov	x2, #0x0                   	// #0
  40dfc0:	mov	w1, #0x0                   	// #0
  40dfc4:	ldr	x0, [x20, #2312]
  40dfc8:	b	40df8c <ferror@plt+0xa9bc>
  40dfcc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40dfd0:	ldr	x0, [x0, #1936]
  40dfd4:	ldr	x0, [x0, #16]
  40dfd8:	cbnz	x0, 40dfe0 <ferror@plt+0xaa10>
  40dfdc:	ldr	x0, [x20, #2320]
  40dfe0:	mov	x2, #0x0                   	// #0
  40dfe4:	mov	w1, #0x0                   	// #0
  40dfe8:	b	40df8c <ferror@plt+0xa9bc>
  40dfec:	mov	x2, #0x0                   	// #0
  40dff0:	mov	w1, #0x0                   	// #0
  40dff4:	ldr	x0, [x20, #2328]
  40dff8:	b	40df8c <ferror@plt+0xa9bc>
  40dffc:	mov	x2, #0x0                   	// #0
  40e000:	mov	w1, #0x0                   	// #0
  40e004:	ldr	x0, [x20, #2184]
  40e008:	b	40df8c <ferror@plt+0xa9bc>
  40e00c:	mov	x2, #0x0                   	// #0
  40e010:	mov	w1, #0x0                   	// #0
  40e014:	ldr	x0, [x20, #2336]
  40e018:	b	40df8c <ferror@plt+0xa9bc>
  40e01c:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e020:	add	x21, x21, #0x518
  40e024:	add	x23, x21, #0x138
  40e028:	ldr	x0, [x21, #88]
  40e02c:	ldp	x28, x25, [x23, #24]
  40e030:	cbnz	x0, 40e060 <ferror@plt+0xaa90>
  40e034:	cmp	x28, x25
  40e038:	b.ne	40e048 <ferror@plt+0xaa78>  // b.any
  40e03c:	mov	x0, x23
  40e040:	mov	x1, #0x1                   	// #1
  40e044:	bl	45c22c <_obstack_newchunk@@Base>
  40e048:	ldr	x0, [x21, #336]
  40e04c:	add	x1, x0, #0x1
  40e050:	str	x1, [x21, #336]
  40e054:	mov	w1, #0x2e                  	// #46
  40e058:	strb	w1, [x0]
  40e05c:	b	40d180 <ferror@plt+0x9bb0>
  40e060:	sub	x25, x25, x28
  40e064:	bl	402d50 <strlen@plt>
  40e068:	mov	x22, x0
  40e06c:	cmp	x0, x25
  40e070:	b.ls	40e080 <ferror@plt+0xaab0>  // b.plast
  40e074:	mov	x1, x0
  40e078:	mov	x0, x23
  40e07c:	bl	45c22c <_obstack_newchunk@@Base>
  40e080:	ldr	x1, [x21, #88]
  40e084:	mov	x2, x22
  40e088:	ldr	x0, [x21, #336]
  40e08c:	bl	402cd0 <memcpy@plt>
  40e090:	ldr	x0, [x21, #336]
  40e094:	add	x0, x0, x22
  40e098:	str	x0, [x21, #336]
  40e09c:	b	40d180 <ferror@plt+0x9bb0>
  40e0a0:	mov	x2, #0x0                   	// #0
  40e0a4:	mov	w1, #0x0                   	// #0
  40e0a8:	ldr	x0, [x20, #2176]
  40e0ac:	b	40df8c <ferror@plt+0xa9bc>
  40e0b0:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e0b4:	add	x21, x21, #0x518
  40e0b8:	ldr	x0, [x21, #288]
  40e0bc:	cbz	x0, 40d180 <ferror@plt+0x9bb0>
  40e0c0:	bl	402d50 <strlen@plt>
  40e0c4:	mov	x22, x0
  40e0c8:	add	x0, x21, #0x138
  40e0cc:	ldp	x2, x1, [x0, #24]
  40e0d0:	sub	x1, x1, x2
  40e0d4:	cmp	x22, x1
  40e0d8:	b.ls	40e0e4 <ferror@plt+0xab14>  // b.plast
  40e0dc:	mov	x1, x22
  40e0e0:	bl	45c22c <_obstack_newchunk@@Base>
  40e0e4:	ldr	x1, [x21, #288]
  40e0e8:	mov	x2, x22
  40e0ec:	ldr	x0, [x21, #336]
  40e0f0:	add	x23, x21, #0x138
  40e0f4:	bl	402cd0 <memcpy@plt>
  40e0f8:	ldr	x25, [x21, #336]
  40e0fc:	ldr	x0, [x21, #304]
  40e100:	add	x25, x25, x22
  40e104:	str	x25, [x21, #336]
  40e108:	cbz	x0, 40d180 <ferror@plt+0x9bb0>
  40e10c:	bl	402d50 <strlen@plt>
  40e110:	mov	x22, x0
  40e114:	ldr	x2, [x21, #344]
  40e118:	sub	x25, x2, x25
  40e11c:	cmp	x0, x25
  40e120:	b.ls	40e130 <ferror@plt+0xab60>  // b.plast
  40e124:	mov	x1, x0
  40e128:	mov	x0, x23
  40e12c:	bl	45c22c <_obstack_newchunk@@Base>
  40e130:	mov	x2, x22
  40e134:	ldr	x1, [x21, #304]
  40e138:	b	40e088 <ferror@plt+0xaab8>
  40e13c:	mov	x2, #0x0                   	// #0
  40e140:	mov	w1, #0x0                   	// #0
  40e144:	ldr	x0, [x20, #2344]
  40e148:	b	40df8c <ferror@plt+0xa9bc>
  40e14c:	mov	x0, x19
  40e150:	bl	40c92c <ferror@plt+0x935c>
  40e154:	mov	x19, x0
  40e158:	b	40dea8 <ferror@plt+0xa8d8>
  40e15c:	mov	x2, x26
  40e160:	mov	x0, x19
  40e164:	mov	x1, #0x0                   	// #0
  40e168:	bl	40c5f8 <ferror@plt+0x9028>
  40e16c:	b	40e154 <ferror@plt+0xab84>
  40e170:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e174:	add	x21, x21, #0x518
  40e178:	add	x0, x21, #0x138
  40e17c:	ldp	x1, x2, [x0, #24]
  40e180:	cmp	x2, x1
  40e184:	b.ne	40e190 <ferror@plt+0xabc0>  // b.any
  40e188:	mov	x1, #0x1                   	// #1
  40e18c:	bl	45c22c <_obstack_newchunk@@Base>
  40e190:	ldr	x0, [x21, #336]
  40e194:	add	x1, x0, #0x1
  40e198:	str	x1, [x21, #336]
  40e19c:	mov	w1, #0x25                  	// #37
  40e1a0:	b	40e058 <ferror@plt+0xaa88>
  40e1a4:	mov	w1, #0x0                   	// #0
  40e1a8:	ldrb	w0, [x19, w1, uxtw]
  40e1ac:	add	x21, x19, w1, uxtw
  40e1b0:	add	w1, w1, #0x1
  40e1b4:	and	w2, w0, #0xffffffdf
  40e1b8:	cbz	w2, 40e1c4 <ferror@plt+0xabf4>
  40e1bc:	cmp	w0, #0x25
  40e1c0:	b.ne	40e1a8 <ferror@plt+0xabd8>  // b.any
  40e1c4:	mov	x0, x22
  40e1c8:	bl	404640 <ferror@plt+0x1070>
  40e1cc:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e1d0:	mov	x19, x21
  40e1d4:	str	x0, [x1, #2200]
  40e1d8:	b	40d180 <ferror@plt+0x9bb0>
  40e1dc:	cmp	w25, #0x3e
  40e1e0:	mov	w0, #0x4                   	// #4
  40e1e4:	mov	w25, #0x14                  	// #20
  40e1e8:	csel	w25, w25, w0, eq  // eq = none
  40e1ec:	mov	w2, #0x0                   	// #0
  40e1f0:	ldrb	w0, [x19, w2, uxtw]
  40e1f4:	mov	w4, w2
  40e1f8:	add	x5, x19, w2, uxtw
  40e1fc:	and	w1, w0, #0xffffffdf
  40e200:	cbz	w1, 40e214 <ferror@plt+0xac44>
  40e204:	cmp	w0, #0x9
  40e208:	b.eq	40e214 <ferror@plt+0xac44>  // b.none
  40e20c:	add	w2, w2, #0x1
  40e210:	b	40e1f0 <ferror@plt+0xac20>
  40e214:	sub	w0, w2, #0x1
  40e218:	mov	w23, #0x0                   	// #0
  40e21c:	mov	w7, #0x1                   	// #1
  40e220:	ldrb	w28, [x19, x0]
  40e224:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e228:	add	x0, x0, #0x518
  40e22c:	cmp	w28, #0x2a
  40e230:	cset	w21, eq  // eq = none
  40e234:	ldr	w6, [x0, #24]
  40e238:	sub	w21, w2, w21
  40e23c:	ldr	x22, [x0, #16]
  40e240:	str	x4, [x29, #96]
  40e244:	str	w6, [x29, #104]
  40e248:	cmp	w6, w23
  40e24c:	str	w7, [x29, #128]
  40e250:	b.le	40d17c <ferror@plt+0x9bac>
  40e254:	ldr	x3, [x22]
  40e258:	mov	x2, x21
  40e25c:	mov	x1, x19
  40e260:	str	x5, [x29, #120]
  40e264:	mov	x0, x3
  40e268:	str	x3, [x29, #136]
  40e26c:	bl	402f80 <strncmp@plt>
  40e270:	ldr	w6, [x29, #104]
  40e274:	ldr	w7, [x29, #128]
  40e278:	ldr	x4, [x29, #96]
  40e27c:	ldr	x5, [x29, #120]
  40e280:	cbnz	w0, 40e2b0 <ferror@plt+0xace0>
  40e284:	cmp	w28, #0x2a
  40e288:	b.eq	40e298 <ferror@plt+0xacc8>  // b.none
  40e28c:	ldr	x3, [x29, #136]
  40e290:	ldrb	w0, [x3, x4]
  40e294:	cbnz	w0, 40e2b0 <ferror@plt+0xace0>
  40e298:	ldr	w0, [x22, #16]
  40e29c:	orr	w0, w0, w25
  40e2a0:	str	w0, [x22, #16]
  40e2a4:	ldrb	w0, [x22, #20]
  40e2a8:	cbz	w0, 40e2b0 <ferror@plt+0xace0>
  40e2ac:	strb	w7, [x22, #21]
  40e2b0:	add	w23, w23, #0x1
  40e2b4:	add	x22, x22, #0x18
  40e2b8:	b	40e240 <ferror@plt+0xac70>
  40e2bc:	cbz	x26, 40e300 <ferror@plt+0xad30>
  40e2c0:	ldrb	w0, [x26]
  40e2c4:	cbz	w0, 40e2d8 <ferror@plt+0xad08>
  40e2c8:	mov	x0, x26
  40e2cc:	mov	x2, #0x0                   	// #0
  40e2d0:	mov	w1, #0x1                   	// #1
  40e2d4:	bl	40d0b0 <ferror@plt+0x9ae0>
  40e2d8:	ldrb	w0, [x21, #2]
  40e2dc:	cbz	w0, 40e2e8 <ferror@plt+0xad18>
  40e2e0:	cmp	w0, #0x7d
  40e2e4:	b.ne	40d180 <ferror@plt+0x9bb0>  // b.any
  40e2e8:	mov	x2, #0x0                   	// #0
  40e2ec:	mov	w1, #0x0                   	// #0
  40e2f0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40e2f4:	add	x0, x0, #0xd73
  40e2f8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40e2fc:	b	40d180 <ferror@plt+0x9bb0>
  40e300:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e304:	add	x0, x0, #0x187
  40e308:	bl	4221dc <ferror@plt+0x1ec0c>
  40e30c:	b	40d180 <ferror@plt+0x9bb0>
  40e310:	mov	x22, x19
  40e314:	ldrb	w0, [x22]
  40e318:	cbz	w0, 40e32c <ferror@plt+0xad5c>
  40e31c:	cmp	w0, #0x29
  40e320:	b.eq	40e32c <ferror@plt+0xad5c>  // b.none
  40e324:	add	x22, x22, #0x1
  40e328:	b	40e314 <ferror@plt+0xad44>
  40e32c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e330:	sub	w23, w22, w19
  40e334:	ldr	x21, [x0, #1416]
  40e338:	sxtw	x25, w23
  40e33c:	cbz	x21, 40e37c <ferror@plt+0xadac>
  40e340:	ldr	w0, [x21, #32]
  40e344:	cmp	w0, w23
  40e348:	b.ne	40e38c <ferror@plt+0xadbc>  // b.any
  40e34c:	ldr	x0, [x21]
  40e350:	mov	x2, x25
  40e354:	mov	x1, x19
  40e358:	bl	402f80 <strncmp@plt>
  40e35c:	cbnz	w0, 40e38c <ferror@plt+0xadbc>
  40e360:	ldr	x0, [x21, #16]
  40e364:	mov	x2, #0x0                   	// #0
  40e368:	mov	w1, #0x0                   	// #0
  40e36c:	ldr	x0, [x0]
  40e370:	bl	40d0b0 <ferror@plt+0x9ae0>
  40e374:	mov	w21, w0
  40e378:	cbnz	w0, 40d260 <ferror@plt+0x9c90>
  40e37c:	ldrb	w0, [x22]
  40e380:	cmp	w0, #0x0
  40e384:	cinc	x19, x22, ne  // ne = any
  40e388:	b	40d180 <ferror@plt+0x9bb0>
  40e38c:	ldr	x21, [x21, #24]
  40e390:	b	40e33c <ferror@plt+0xad6c>
  40e394:	mov	w1, w25
  40e398:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e39c:	add	x0, x0, #0x1c7
  40e3a0:	bl	4221dc <ferror@plt+0x1ec0c>
  40e3a4:	b	40d180 <ferror@plt+0x9bb0>
  40e3a8:	ldrb	w23, [x21, #1]
  40e3ac:	add	x22, x21, #0x2
  40e3b0:	b	40d148 <ferror@plt+0x9b78>
  40e3b4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e3b8:	ldr	w21, [x0, #2064]
  40e3bc:	cbz	w21, 40d260 <ferror@plt+0x9c90>
  40e3c0:	mov	w21, #0x0                   	// #0
  40e3c4:	bl	40ba60 <ferror@plt+0x8490>
  40e3c8:	b	40d260 <ferror@plt+0x9c90>
  40e3cc:	stp	x29, x30, [sp, #-32]!
  40e3d0:	mov	x2, x1
  40e3d4:	mov	x4, x0
  40e3d8:	mov	x29, sp
  40e3dc:	str	x19, [sp, #16]
  40e3e0:	bl	4043f8 <ferror@plt+0xe28>
  40e3e4:	mov	x0, x4
  40e3e8:	adrp	x3, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e3ec:	add	x3, x3, #0x518
  40e3f0:	add	x4, x3, #0x370
  40e3f4:	mov	w1, #0x0                   	// #0
  40e3f8:	str	wzr, [x3, #888]
  40e3fc:	stp	wzr, wzr, [x4, #-8]
  40e400:	stp	wzr, wzr, [x4]
  40e404:	str	wzr, [x3, #892]
  40e408:	str	xzr, [x3, #896]
  40e40c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40e410:	mov	w19, w0
  40e414:	bl	40ba60 <ferror@plt+0x8490>
  40e418:	mov	w0, w19
  40e41c:	ldr	x19, [sp, #16]
  40e420:	ldp	x29, x30, [sp], #32
  40e424:	ret
  40e428:	stp	x29, x30, [sp, #-48]!
  40e42c:	mov	x1, #0x0                   	// #0
  40e430:	mov	x29, sp
  40e434:	stp	x19, x20, [sp, #16]
  40e438:	stp	x21, x22, [sp, #32]
  40e43c:	bl	40e3cc <ferror@plt+0xadfc>
  40e440:	mov	w20, w0
  40e444:	cbnz	w0, 40e4a4 <ferror@plt+0xaed4>
  40e448:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e44c:	mov	x21, x0
  40e450:	ldr	x22, [x0, #1304]
  40e454:	cbz	x22, 40e480 <ferror@plt+0xaeb0>
  40e458:	ldr	w19, [x22, #4]
  40e45c:	cbz	w19, 40e480 <ferror@plt+0xaeb0>
  40e460:	sub	w19, w19, #0x1
  40e464:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40e468:	add	x1, x1, #0xf2f
  40e46c:	add	x0, x22, w19, uxtw #3
  40e470:	ldr	x0, [x0, #8]
  40e474:	bl	403220 <strcmp@plt>
  40e478:	cbnz	w0, 40e480 <ferror@plt+0xaeb0>
  40e47c:	str	w19, [x22, #4]
  40e480:	bl	40b488 <ferror@plt+0x7eb8>
  40e484:	ldr	x0, [x21, #1304]
  40e488:	cbz	x0, 40e4a4 <ferror@plt+0xaed4>
  40e48c:	ldr	w0, [x0, #4]
  40e490:	cbz	w0, 40e4a4 <ferror@plt+0xaed4>
  40e494:	ldp	x19, x20, [sp, #16]
  40e498:	ldp	x21, x22, [sp, #32]
  40e49c:	ldp	x29, x30, [sp], #48
  40e4a0:	b	40bb94 <ferror@plt+0x85c4>
  40e4a4:	mov	w0, w20
  40e4a8:	ldp	x19, x20, [sp, #16]
  40e4ac:	ldp	x21, x22, [sp, #32]
  40e4b0:	ldp	x29, x30, [sp], #48
  40e4b4:	ret
  40e4b8:	stp	x29, x30, [sp, #-240]!
  40e4bc:	mov	x29, sp
  40e4c0:	stp	x19, x20, [sp, #16]
  40e4c4:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e4c8:	add	x19, x19, #0x518
  40e4cc:	stp	x25, x26, [sp, #64]
  40e4d0:	adrp	x25, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40e4d4:	add	x26, x19, #0x338
  40e4d8:	add	x25, x25, #0x230
  40e4dc:	stp	x21, x22, [sp, #32]
  40e4e0:	mov	x22, #0x0                   	// #0
  40e4e4:	stp	x23, x24, [sp, #48]
  40e4e8:	stp	x27, x28, [sp, #80]
  40e4ec:	str	x0, [sp, #96]
  40e4f0:	ldr	w2, [x19, #232]
  40e4f4:	cmp	w2, w22
  40e4f8:	b.le	40e920 <ferror@plt+0xb350>
  40e4fc:	ldr	x0, [x19, #256]
  40e500:	lsl	x21, x22, #5
  40e504:	str	w22, [x19, #868]
  40e508:	ldr	x0, [x0, x21]
  40e50c:	bl	407f04 <ferror@plt+0x4934>
  40e510:	ldr	x0, [x19, #256]
  40e514:	add	x1, x0, x21
  40e518:	ldrb	w2, [x1, #24]
  40e51c:	cbnz	w2, 40e918 <ferror@plt+0xb348>
  40e520:	ldr	x2, [x19, #240]
  40e524:	ldr	x3, [x19, #224]
  40e528:	str	x3, [x2, x22, lsl #3]
  40e52c:	ldr	x0, [x0, x21]
  40e530:	ldr	x2, [x1, #8]
  40e534:	ldr	x1, [x19, #424]
  40e538:	bl	4057ec <ferror@plt+0x221c>
  40e53c:	str	x0, [x19, #632]
  40e540:	mov	x20, x0
  40e544:	cbz	x0, 40e904 <ferror@plt+0xb334>
  40e548:	ldr	x2, [x0, #8]
  40e54c:	ldrb	w0, [x2]
  40e550:	cmp	w0, #0x23
  40e554:	b.ne	40e588 <ferror@plt+0xafb8>  // b.any
  40e558:	ldr	x1, [x19, #224]
  40e55c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e560:	add	x2, x2, #0x1
  40e564:	add	x0, x0, #0x1f2
  40e568:	bl	4221dc <ferror@plt+0x1ec0c>
  40e56c:	bl	40752c <ferror@plt+0x3f5c>
  40e570:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e574:	ldr	x1, [x0, #784]
  40e578:	ldr	w0, [x1, #24]
  40e57c:	add	w0, w0, #0x1
  40e580:	str	w0, [x1, #24]
  40e584:	b	40e914 <ferror@plt+0xb344>
  40e588:	ldr	w0, [x19, #96]
  40e58c:	cbz	w0, 40e5a8 <ferror@plt+0xafd8>
  40e590:	ldr	x0, [x19, #824]
  40e594:	bl	4032a0 <free@plt>
  40e598:	str	xzr, [x19, #824]
  40e59c:	ldr	x0, [x19, #832]
  40e5a0:	bl	4032a0 <free@plt>
  40e5a4:	str	xzr, [x19, #832]
  40e5a8:	ldr	x0, [x20, #8]
  40e5ac:	bl	40e428 <ferror@plt+0xae58>
  40e5b0:	ldr	x1, [x19, #256]
  40e5b4:	add	x21, x1, x21
  40e5b8:	mov	w1, #0x1                   	// #1
  40e5bc:	strb	w1, [x21, #24]
  40e5c0:	tbnz	w0, #31, 40e72c <ferror@plt+0xb15c>
  40e5c4:	ldr	w23, [x19, #96]
  40e5c8:	cbz	w23, 40e82c <ferror@plt+0xb25c>
  40e5cc:	ldr	x0, [x19, #824]
  40e5d0:	cbz	x0, 40e8fc <ferror@plt+0xb32c>
  40e5d4:	ldr	w0, [x25, #3816]
  40e5d8:	cbz	w0, 40e5ec <ferror@plt+0xb01c>
  40e5dc:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e5e0:	mov	w0, #0x0                   	// #0
  40e5e4:	add	x1, x1, #0x21f
  40e5e8:	bl	421e40 <ferror@plt+0x1e870>
  40e5ec:	ldr	w0, [x19, #96]
  40e5f0:	neg	w0, w0
  40e5f4:	str	w0, [x19, #96]
  40e5f8:	ldr	w0, [x19, #844]
  40e5fc:	str	w0, [x19, #24]
  40e600:	ldr	w0, [x19, #852]
  40e604:	str	w0, [x19, #248]
  40e608:	ldr	x0, [x19, #816]
  40e60c:	str	x0, [x19, #16]
  40e610:	ldr	x0, [x19, #632]
  40e614:	ldr	x0, [x0, #8]
  40e618:	bl	40e428 <ferror@plt+0xae58>
  40e61c:	ldr	w1, [x19, #96]
  40e620:	neg	w1, w1
  40e624:	str	w1, [x19, #96]
  40e628:	ldr	w1, [x19, #840]
  40e62c:	str	w1, [x19, #24]
  40e630:	ldr	w1, [x19, #848]
  40e634:	str	w1, [x19, #248]
  40e638:	ldr	x1, [x19, #808]
  40e63c:	str	x1, [x19, #16]
  40e640:	tbz	w0, #31, 40e678 <ferror@plt+0xb0a8>
  40e644:	mov	w23, #0x1                   	// #1
  40e648:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e64c:	add	x0, x0, #0x244
  40e650:	bl	4221dc <ferror@plt+0x1ec0c>
  40e654:	ldr	x1, [x19, #832]
  40e658:	add	x0, x19, #0x400
  40e65c:	cbnz	x1, 40e680 <ferror@plt+0xb0b0>
  40e660:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e664:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40e668:	add	x2, x2, #0x26d
  40e66c:	add	x0, x0, #0x6e9
  40e670:	mov	w1, #0x1ff0                	// #8176
  40e674:	bl	403600 <ferror@plt+0x30>
  40e678:	mov	w23, #0x0                   	// #0
  40e67c:	b	40e654 <ferror@plt+0xb084>
  40e680:	ldur	x0, [x0, #-200]
  40e684:	bl	45a8bc <ferror@plt+0x572ec>
  40e688:	cbz	w0, 40e660 <ferror@plt+0xb090>
  40e68c:	ldr	w0, [x25, #3816]
  40e690:	cbz	w0, 40e6a4 <ferror@plt+0xb0d4>
  40e694:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e698:	mov	w0, #0x0                   	// #0
  40e69c:	add	x1, x1, #0x280
  40e6a0:	bl	421e40 <ferror@plt+0x1e870>
  40e6a4:	ldr	x0, [x19, #824]
  40e6a8:	add	x27, x19, #0x400
  40e6ac:	add	x1, sp, #0x70
  40e6b0:	mov	x20, #0x0                   	// #0
  40e6b4:	mov	x21, #0x0                   	// #0
  40e6b8:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  40e6bc:	tbnz	w0, #31, 40e714 <ferror@plt+0xb144>
  40e6c0:	ldr	w0, [sp, #128]
  40e6c4:	and	w0, w0, #0xf000
  40e6c8:	cmp	w0, #0x8, lsl #12
  40e6cc:	b.ne	40e714 <ferror@plt+0xb144>  // b.any
  40e6d0:	ldur	x0, [x27, #-192]
  40e6d4:	add	x1, sp, #0x70
  40e6d8:	ldr	x24, [sp, #160]
  40e6dc:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  40e6e0:	tbnz	w0, #31, 40e734 <ferror@plt+0xb164>
  40e6e4:	ldr	w0, [sp, #128]
  40e6e8:	and	w0, w0, #0xf000
  40e6ec:	cmp	w0, #0x8, lsl #12
  40e6f0:	b.ne	40e734 <ferror@plt+0xb164>  // b.any
  40e6f4:	ldr	x28, [sp, #160]
  40e6f8:	cmp	x24, x28
  40e6fc:	b.eq	40e73c <ferror@plt+0xb16c>  // b.none
  40e700:	ldr	x1, [x19, #224]
  40e704:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e708:	add	x0, x0, #0x2d4
  40e70c:	bl	4221dc <ferror@plt+0x1ec0c>
  40e710:	b	40e72c <ferror@plt+0xb15c>
  40e714:	mov	x0, x26
  40e718:	ldr	x2, [x0]
  40e71c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e720:	ldr	x1, [x19, #224]
  40e724:	add	x0, x0, #0x29c
  40e728:	bl	4221dc <ferror@plt+0x1ec0c>
  40e72c:	mov	w23, #0x1                   	// #1
  40e730:	b	40e82c <ferror@plt+0xb25c>
  40e734:	add	x0, x19, #0x340
  40e738:	b	40e718 <ferror@plt+0xb148>
  40e73c:	ldur	x0, [x27, #-200]
  40e740:	mov	w1, #0x0                   	// #0
  40e744:	bl	402f50 <open@plt>
  40e748:	mov	w4, w0
  40e74c:	tbnz	w0, #31, 40e854 <ferror@plt+0xb284>
  40e750:	mov	x1, x24
  40e754:	mov	x5, #0x0                   	// #0
  40e758:	mov	w3, #0x2                   	// #2
  40e75c:	mov	w2, #0x1                   	// #1
  40e760:	mov	x0, #0x0                   	// #0
  40e764:	str	w4, [sp, #108]
  40e768:	bl	403250 <mmap@plt>
  40e76c:	mov	x20, x0
  40e770:	ldr	w4, [sp, #108]
  40e774:	mov	w0, w4
  40e778:	bl	403120 <close@plt>
  40e77c:	cmn	x20, #0x1
  40e780:	b.eq	40e894 <ferror@plt+0xb2c4>  // b.none
  40e784:	ldur	x0, [x27, #-192]
  40e788:	mov	w1, #0x0                   	// #0
  40e78c:	bl	402f50 <open@plt>
  40e790:	mov	w27, w0
  40e794:	tbz	w0, #31, 40e85c <ferror@plt+0xb28c>
  40e798:	add	x0, x19, #0x340
  40e79c:	ldr	x2, [x0]
  40e7a0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e7a4:	ldr	x1, [x19, #224]
  40e7a8:	add	x0, x0, #0x2fd
  40e7ac:	bl	4221dc <ferror@plt+0x1ec0c>
  40e7b0:	mov	w27, #0x1                   	// #1
  40e7b4:	cbnz	x20, 40e898 <ferror@plt+0xb2c8>
  40e7b8:	cbz	x21, 40e7c8 <ferror@plt+0xb1f8>
  40e7bc:	mov	x1, x28
  40e7c0:	mov	x0, x21
  40e7c4:	bl	403340 <munmap@plt>
  40e7c8:	cmn	w27, #0x1
  40e7cc:	b.ne	40e828 <ferror@plt+0xb258>  // b.any
  40e7d0:	ldr	x0, [x19, #824]
  40e7d4:	adrp	x21, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  40e7d8:	add	x21, x21, #0xc1a
  40e7dc:	mov	x1, x21
  40e7e0:	bl	402f20 <fopen@plt>
  40e7e4:	mov	x20, x0
  40e7e8:	cbz	x0, 40e8a8 <ferror@plt+0xb2d8>
  40e7ec:	ldr	x0, [x19, #832]
  40e7f0:	mov	x1, x21
  40e7f4:	bl	402f20 <fopen@plt>
  40e7f8:	mov	x21, x0
  40e7fc:	cbnz	x0, 40e8b0 <ferror@plt+0xb2e0>
  40e800:	add	x0, x19, #0x340
  40e804:	ldr	x2, [x0]
  40e808:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e80c:	ldr	x1, [x19, #224]
  40e810:	add	x0, x0, #0x2fd
  40e814:	bl	4221dc <ferror@plt+0x1ec0c>
  40e818:	cbz	x20, 40e72c <ferror@plt+0xb15c>
  40e81c:	mov	w27, #0x1                   	// #1
  40e820:	mov	x0, x20
  40e824:	bl	402ee0 <fclose@plt>
  40e828:	cbnz	w27, 40e72c <ferror@plt+0xb15c>
  40e82c:	ldr	w0, [x19, #96]
  40e830:	cbz	w0, 40e84c <ferror@plt+0xb27c>
  40e834:	ldr	x0, [x19, #824]
  40e838:	bl	4032a0 <free@plt>
  40e83c:	str	xzr, [x19, #824]
  40e840:	ldr	x0, [x19, #832]
  40e844:	bl	4032a0 <free@plt>
  40e848:	str	xzr, [x19, #832]
  40e84c:	cbz	w23, 40e914 <ferror@plt+0xb344>
  40e850:	b	40e56c <ferror@plt+0xaf9c>
  40e854:	mov	x0, x26
  40e858:	b	40e79c <ferror@plt+0xb1cc>
  40e85c:	mov	w4, w0
  40e860:	mov	x1, x24
  40e864:	mov	x5, #0x0                   	// #0
  40e868:	mov	w3, #0x2                   	// #2
  40e86c:	mov	w2, #0x1                   	// #1
  40e870:	mov	x0, #0x0                   	// #0
  40e874:	bl	403250 <mmap@plt>
  40e878:	mov	x21, x0
  40e87c:	mov	w0, w27
  40e880:	bl	403120 <close@plt>
  40e884:	cmn	x21, #0x1
  40e888:	b.ne	40e9b4 <ferror@plt+0xb3e4>  // b.any
  40e88c:	mov	w27, w21
  40e890:	b	40e7b4 <ferror@plt+0xb1e4>
  40e894:	mov	w27, w20
  40e898:	mov	x1, x24
  40e89c:	mov	x0, x20
  40e8a0:	bl	403340 <munmap@plt>
  40e8a4:	b	40e7b8 <ferror@plt+0xb1e8>
  40e8a8:	mov	x0, x26
  40e8ac:	b	40e804 <ferror@plt+0xb234>
  40e8b0:	mov	x0, x20
  40e8b4:	bl	402ff0 <fgetc@plt>
  40e8b8:	mov	w24, w0
  40e8bc:	mov	x0, x21
  40e8c0:	bl	402ff0 <fgetc@plt>
  40e8c4:	cmp	w24, w0
  40e8c8:	b.eq	40e8ec <ferror@plt+0xb31c>  // b.none
  40e8cc:	ldr	x1, [x19, #224]
  40e8d0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e8d4:	mov	w27, #0x1                   	// #1
  40e8d8:	add	x0, x0, #0x326
  40e8dc:	bl	4221dc <ferror@plt+0x1ec0c>
  40e8e0:	mov	x0, x21
  40e8e4:	bl	402ee0 <fclose@plt>
  40e8e8:	b	40e820 <ferror@plt+0xb250>
  40e8ec:	cmn	w24, #0x1
  40e8f0:	b.ne	40e8b0 <ferror@plt+0xb2e0>  // b.any
  40e8f4:	mov	w27, #0x0                   	// #0
  40e8f8:	b	40e8e0 <ferror@plt+0xb310>
  40e8fc:	mov	w23, #0x0                   	// #0
  40e900:	b	40e82c <ferror@plt+0xb25c>
  40e904:	ldr	x0, [sp, #96]
  40e908:	mov	w1, #0x1                   	// #1
  40e90c:	ldr	x0, [x0]
  40e910:	strb	w1, [x0, x22]
  40e914:	str	xzr, [x19, #272]
  40e918:	add	x22, x22, #0x1
  40e91c:	b	40e4f0 <ferror@plt+0xaf20>
  40e920:	cmp	w2, #0x0
  40e924:	b.le	40e954 <ferror@plt+0xb384>
  40e928:	ldr	x0, [x19, #256]
  40e92c:	mov	w1, #0x0                   	// #0
  40e930:	ldr	x3, [x0, #16]
  40e934:	cbnz	x3, 40e94c <ferror@plt+0xb37c>
  40e938:	ldr	x3, [x0, #8]
  40e93c:	cbz	x3, 40e9a0 <ferror@plt+0xb3d0>
  40e940:	ldrb	w3, [x3]
  40e944:	cmp	w3, #0x2a
  40e948:	b.eq	40e9a0 <ferror@plt+0xb3d0>  // b.none
  40e94c:	ldr	x0, [x0]
  40e950:	bl	407f04 <ferror@plt+0x4934>
  40e954:	bl	421380 <ferror@plt+0x1ddb0>
  40e958:	tst	w0, #0xff
  40e95c:	b.ne	40e984 <ferror@plt+0xb3b4>  // b.any
  40e960:	ldr	w0, [x19, #232]
  40e964:	str	w0, [x19, #868]
  40e968:	bl	410c00 <ferror@plt+0xd630>
  40e96c:	cbz	w0, 40e984 <ferror@plt+0xb3b4>
  40e970:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e974:	ldr	x1, [x0, #784]
  40e978:	ldr	w0, [x1, #24]
  40e97c:	add	w0, w0, #0x1
  40e980:	str	w0, [x1, #24]
  40e984:	ldp	x19, x20, [sp, #16]
  40e988:	ldp	x21, x22, [sp, #32]
  40e98c:	ldp	x23, x24, [sp, #48]
  40e990:	ldp	x25, x26, [sp, #64]
  40e994:	ldp	x27, x28, [sp, #80]
  40e998:	ldp	x29, x30, [sp], #240
  40e99c:	ret
  40e9a0:	add	w1, w1, #0x1
  40e9a4:	add	x0, x0, #0x20
  40e9a8:	cmp	w2, w1
  40e9ac:	b.ne	40e930 <ferror@plt+0xb360>  // b.any
  40e9b0:	b	40e954 <ferror@plt+0xb384>
  40e9b4:	mov	x2, x24
  40e9b8:	mov	x1, x21
  40e9bc:	mov	x0, x20
  40e9c0:	bl	4031e0 <memcmp@plt>
  40e9c4:	mov	w27, w0
  40e9c8:	cbz	w0, 40e7b4 <ferror@plt+0xb1e4>
  40e9cc:	ldr	x1, [x19, #224]
  40e9d0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40e9d4:	add	x0, x0, #0x326
  40e9d8:	bl	4221dc <ferror@plt+0x1ec0c>
  40e9dc:	b	40e7b0 <ferror@plt+0xb1e0>
  40e9e0:	stp	x29, x30, [sp, #-64]!
  40e9e4:	mov	x2, #0x0                   	// #0
  40e9e8:	mov	x29, sp
  40e9ec:	stp	x19, x20, [sp, #16]
  40e9f0:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40e9f4:	add	x19, x19, #0x518
  40e9f8:	stp	x23, x24, [sp, #48]
  40e9fc:	mov	x24, x1
  40ea00:	ldr	w1, [x19, #232]
  40ea04:	ldr	x3, [x19, #240]
  40ea08:	stp	x21, x22, [sp, #32]
  40ea0c:	mov	x21, x0
  40ea10:	mov	w0, #0x0                   	// #0
  40ea14:	cmp	w1, w2
  40ea18:	b.le	40ea3c <ferror@plt+0xb46c>
  40ea1c:	ldr	x4, [x21]
  40ea20:	ldrb	w4, [x4, x2]
  40ea24:	cbnz	w4, 40ea30 <ferror@plt+0xb460>
  40ea28:	ldr	x4, [x3, x2, lsl #3]
  40ea2c:	cbz	x4, 40ea34 <ferror@plt+0xb464>
  40ea30:	add	w0, w0, #0x1
  40ea34:	add	x2, x2, #0x1
  40ea38:	b	40ea14 <ferror@plt+0xb444>
  40ea3c:	cbnz	w0, 40eaa8 <ferror@plt+0xb4d8>
  40ea40:	bl	421380 <ferror@plt+0x1ddb0>
  40ea44:	tst	w0, #0xff
  40ea48:	b.ne	40ec20 <ferror@plt+0xb650>  // b.any
  40ea4c:	adrp	x22, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ea50:	add	x22, x22, #0x3f4
  40ea54:	mov	x20, #0x0                   	// #0
  40ea58:	ldr	w0, [x19, #232]
  40ea5c:	cmp	w0, w20
  40ea60:	b.le	40ec20 <ferror@plt+0xb650>
  40ea64:	ldr	x0, [x21]
  40ea68:	ldrb	w0, [x0, x20]
  40ea6c:	cbz	w0, 40eaa0 <ferror@plt+0xb4d0>
  40ea70:	ldr	x0, [x19, #256]
  40ea74:	add	x0, x0, x20, lsl #5
  40ea78:	ldr	x0, [x0, #8]
  40ea7c:	cbz	x0, 40ea8c <ferror@plt+0xb4bc>
  40ea80:	ldrb	w0, [x0]
  40ea84:	cmp	w0, #0x2a
  40ea88:	b.eq	40eaa0 <ferror@plt+0xb4d0>  // b.none
  40ea8c:	ldr	x0, [x19, #240]
  40ea90:	mov	x1, x22
  40ea94:	ldr	x2, [x0, x20, lsl #3]
  40ea98:	mov	w0, #0x0                   	// #0
  40ea9c:	bl	421ef0 <ferror@plt+0x1e920>
  40eaa0:	add	x20, x20, #0x1
  40eaa4:	b	40ea58 <ferror@plt+0xb488>
  40eaa8:	bl	421380 <ferror@plt+0x1ddb0>
  40eaac:	tst	w0, #0xff
  40eab0:	b.ne	40ea40 <ferror@plt+0xb470>  // b.any
  40eab4:	ldr	w0, [x19, #672]
  40eab8:	cmp	w0, #0x1
  40eabc:	b.gt	40ea40 <ferror@plt+0xb470>
  40eac0:	ldr	w0, [x19, #640]
  40eac4:	adrp	x20, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40eac8:	ldr	w23, [x19, #776]
  40eacc:	add	x20, x20, #0x4a0
  40ead0:	cbnz	w0, 40eb74 <ferror@plt+0xb5a4>
  40ead4:	ldr	x0, [x20, #2352]
  40ead8:	adrp	x22, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40eadc:	add	x22, x22, #0x346
  40eae0:	mov	x1, x22
  40eae4:	bl	403220 <strcmp@plt>
  40eae8:	cbnz	w0, 40eb10 <ferror@plt+0xb540>
  40eaec:	mov	x1, x22
  40eaf0:	add	x0, x20, #0x890
  40eaf4:	mov	w3, #0x0                   	// #0
  40eaf8:	mov	w2, #0x1                   	// #1
  40eafc:	bl	406ba8 <ferror@plt+0x35d8>
  40eb00:	cbnz	x0, 40eb10 <ferror@plt+0xb540>
  40eb04:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  40eb08:	add	x0, x0, #0x8ce
  40eb0c:	str	x0, [x20, #2352]
  40eb10:	mov	w2, #0x0                   	// #0
  40eb14:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40eb18:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40eb1c:	add	x1, x1, #0x364
  40eb20:	add	x0, x0, #0x34f
  40eb24:	bl	404914 <ferror@plt+0x1344>
  40eb28:	tst	w0, #0xff
  40eb2c:	b.ne	40eb70 <ferror@plt+0xb5a0>  // b.any
  40eb30:	adrp	x22, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40eb34:	add	x22, x22, #0x365
  40eb38:	mov	x1, x22
  40eb3c:	add	x0, x20, #0x890
  40eb40:	mov	w3, #0x0                   	// #0
  40eb44:	mov	w2, #0x4                   	// #4
  40eb48:	bl	406ba8 <ferror@plt+0x35d8>
  40eb4c:	cbnz	x0, 40eb68 <ferror@plt+0xb598>
  40eb50:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40eb54:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40eb58:	mov	x2, x22
  40eb5c:	add	x1, x1, #0x376
  40eb60:	ldr	w0, [x0, #584]
  40eb64:	bl	422d58 <ferror@plt+0x1f788>
  40eb68:	bl	404468 <ferror@plt+0xe98>
  40eb6c:	str	x0, [x20, #2360]
  40eb70:	str	x24, [x20, #2368]
  40eb74:	mov	w3, #0x0                   	// #0
  40eb78:	mov	w2, #0x1                   	// #1
  40eb7c:	add	x22, x19, #0x190
  40eb80:	add	x0, x20, #0x890
  40eb84:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40eb88:	add	x1, x1, #0xc98
  40eb8c:	bl	4056a4 <ferror@plt+0x20d4>
  40eb90:	mov	x1, x0
  40eb94:	mov	x0, x22
  40eb98:	bl	40a3dc <ferror@plt+0x6e0c>
  40eb9c:	mov	w3, #0x1                   	// #1
  40eba0:	mov	w2, w3
  40eba4:	add	x0, x20, #0x848
  40eba8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40ebac:	add	x1, x1, #0xca6
  40ebb0:	bl	4056a4 <ferror@plt+0x20d4>
  40ebb4:	mov	x1, x0
  40ebb8:	mov	x0, x22
  40ebbc:	bl	40a3dc <ferror@plt+0x6e0c>
  40ebc0:	ldr	w0, [x19, #672]
  40ebc4:	cmp	w0, #0x1
  40ebc8:	b.ne	40ebf8 <ferror@plt+0xb628>  // b.any
  40ebcc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ebd0:	add	x0, x0, #0x3a0
  40ebd4:	bl	403580 <gettext@plt>
  40ebd8:	bl	4034d0 <printf@plt>
  40ebdc:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ebe0:	add	x0, x0, #0x3c1
  40ebe4:	bl	403580 <gettext@plt>
  40ebe8:	bl	4034d0 <printf@plt>
  40ebec:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ebf0:	ldr	x0, [x0, #1272]
  40ebf4:	bl	403350 <fflush@plt>
  40ebf8:	ldr	x0, [x20, #2144]
  40ebfc:	bl	40e428 <ferror@plt+0xae58>
  40ec00:	tbz	w0, #31, 40ec14 <ferror@plt+0xb644>
  40ec04:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ec08:	mov	w1, #0x1                   	// #1
  40ec0c:	ldr	x0, [x0, #784]
  40ec10:	str	w1, [x0, #24]
  40ec14:	ldr	w0, [x19, #776]
  40ec18:	cmp	w0, w23
  40ec1c:	b.eq	40ea40 <ferror@plt+0xb470>  // b.none
  40ec20:	ldp	x19, x20, [sp, #16]
  40ec24:	ldp	x21, x22, [sp, #32]
  40ec28:	ldp	x23, x24, [sp, #48]
  40ec2c:	ldp	x29, x30, [sp], #64
  40ec30:	ret
  40ec34:	stp	x29, x30, [sp, #-64]!
  40ec38:	mov	x29, sp
  40ec3c:	stp	x19, x20, [sp, #16]
  40ec40:	mov	x19, x0
  40ec44:	ldrb	w0, [x1, #24]
  40ec48:	stp	x21, x22, [sp, #32]
  40ec4c:	mov	x20, x1
  40ec50:	str	x23, [sp, #48]
  40ec54:	cbz	w0, 40ec64 <ferror@plt+0xb694>
  40ec58:	ldrb	w0, [x19]
  40ec5c:	cmp	w0, #0x2f
  40ec60:	b.ne	40ed24 <ferror@plt+0xb754>  // b.any
  40ec64:	ldr	x21, [x20, #16]
  40ec68:	cbz	x21, 40ec8c <ferror@plt+0xb6bc>
  40ec6c:	mov	x0, x19
  40ec70:	bl	402d50 <strlen@plt>
  40ec74:	ldr	x1, [x20, #8]
  40ec78:	mov	x22, x0
  40ec7c:	add	x2, x21, #0x1
  40ec80:	add	x0, x19, x0
  40ec84:	mov	x21, x22
  40ec88:	bl	402cd0 <memcpy@plt>
  40ec8c:	mov	x0, x19
  40ec90:	mov	w1, #0x1                   	// #1
  40ec94:	bl	40597c <ferror@plt+0x23ac>
  40ec98:	cbz	w0, 40ed24 <ferror@plt+0xb754>
  40ec9c:	ldr	x0, [x20]
  40eca0:	mov	x2, #0x0                   	// #0
  40eca4:	mov	w1, #0x1                   	// #1
  40eca8:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40ecac:	add	x22, x22, #0xd73
  40ecb0:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ecb4:	ldrb	w0, [x20, #25]
  40ecb8:	cbz	w0, 40eccc <ferror@plt+0xb6fc>
  40ecbc:	mov	x0, x22
  40ecc0:	mov	x2, #0x0                   	// #0
  40ecc4:	mov	w1, #0x0                   	// #0
  40ecc8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40eccc:	ldr	x0, [x20, #16]
  40ecd0:	cbnz	x0, 40ed3c <ferror@plt+0xb76c>
  40ecd4:	mov	x0, x19
  40ecd8:	bl	402d50 <strlen@plt>
  40ecdc:	mov	x21, x0
  40ece0:	sub	x0, x0, #0x1
  40ece4:	ldrb	w23, [x19, x0]
  40ece8:	cmp	w23, #0x2f
  40ecec:	b.ne	40ecf4 <ferror@plt+0xb724>  // b.any
  40ecf0:	strb	wzr, [x19, x0]
  40ecf4:	mov	x2, #0x0                   	// #0
  40ecf8:	mov	w1, #0x1                   	// #1
  40ecfc:	mov	x0, x19
  40ed00:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ed04:	mov	x0, x22
  40ed08:	mov	x2, #0x0                   	// #0
  40ed0c:	mov	w1, #0x0                   	// #0
  40ed10:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ed14:	ldr	x0, [x20, #16]
  40ed18:	cbnz	x0, 40ed24 <ferror@plt+0xb754>
  40ed1c:	add	x19, x19, x21
  40ed20:	sturb	w23, [x19, #-1]
  40ed24:	mov	x0, #0x0                   	// #0
  40ed28:	ldp	x19, x20, [sp, #16]
  40ed2c:	ldp	x21, x22, [sp, #32]
  40ed30:	ldr	x23, [sp, #48]
  40ed34:	ldp	x29, x30, [sp], #64
  40ed38:	ret
  40ed3c:	mov	w23, #0x0                   	// #0
  40ed40:	b	40ecf4 <ferror@plt+0xb724>
  40ed44:	stp	x29, x30, [sp, #-48]!
  40ed48:	mov	x29, sp
  40ed4c:	stp	x19, x20, [sp, #16]
  40ed50:	mov	x19, x0
  40ed54:	mov	w20, #0x0                   	// #0
  40ed58:	str	x21, [sp, #32]
  40ed5c:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40ed60:	add	x21, x21, #0xd73
  40ed64:	cbz	x19, 40eda0 <ferror@plt+0xb7d0>
  40ed68:	ldr	w0, [x19, #4]
  40ed6c:	cmp	w20, w0
  40ed70:	b.cs	40eda0 <ferror@plt+0xb7d0>  // b.hs, b.nlast
  40ed74:	add	x0, x19, w20, uxtw #3
  40ed78:	mov	x2, #0x0                   	// #0
  40ed7c:	mov	w1, #0x1                   	// #1
  40ed80:	add	w20, w20, #0x1
  40ed84:	ldr	x0, [x0, #8]
  40ed88:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ed8c:	mov	x0, x21
  40ed90:	mov	x2, #0x0                   	// #0
  40ed94:	mov	w1, #0x0                   	// #0
  40ed98:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ed9c:	b	40ed64 <ferror@plt+0xb794>
  40eda0:	ldp	x19, x20, [sp, #16]
  40eda4:	ldr	x21, [sp, #32]
  40eda8:	ldp	x29, x30, [sp], #48
  40edac:	ret
  40edb0:	stp	x29, x30, [sp, #-80]!
  40edb4:	mov	w3, #0x18                  	// #24
  40edb8:	mov	x29, sp
  40edbc:	stp	x19, x20, [sp, #16]
  40edc0:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40edc4:	add	x19, x19, #0x518
  40edc8:	stp	x21, x22, [sp, #32]
  40edcc:	smull	x22, w0, w3
  40edd0:	ldr	x0, [x19, #16]
  40edd4:	stp	x23, x24, [sp, #48]
  40edd8:	add	x0, x0, x22
  40eddc:	stp	x25, x26, [sp, #64]
  40ede0:	ldr	w0, [x0, #16]
  40ede4:	tbnz	w0, #2, 40eef4 <ferror@plt+0xb924>
  40ede8:	cbnz	w1, 40ee10 <ferror@plt+0xb840>
  40edec:	mov	x2, #0x0                   	// #0
  40edf0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  40edf4:	add	x0, x0, #0xd0e
  40edf8:	bl	40d0b0 <ferror@plt+0x9ae0>
  40edfc:	ldr	x0, [x19, #16]
  40ee00:	mov	x2, #0x0                   	// #0
  40ee04:	mov	w1, #0x1                   	// #1
  40ee08:	ldr	x0, [x0, x22]
  40ee0c:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ee10:	ldr	x0, [x19, #16]
  40ee14:	adrp	x23, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40ee18:	add	x23, x23, #0xd73
  40ee1c:	add	x0, x0, x22
  40ee20:	ldr	x24, [x0, #8]
  40ee24:	cbz	x24, 40eed4 <ferror@plt+0xb904>
  40ee28:	mov	w26, #0x2e                  	// #46
  40ee2c:	ldr	x21, [x24]
  40ee30:	cbz	x21, 40eed4 <ferror@plt+0xb904>
  40ee34:	mov	x0, x23
  40ee38:	mov	x2, #0x0                   	// #0
  40ee3c:	mov	w1, #0x0                   	// #0
  40ee40:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ee44:	ldr	x0, [x19, #896]
  40ee48:	cbz	x0, 40eec4 <ferror@plt+0xb8f4>
  40ee4c:	mov	x0, x21
  40ee50:	bl	402d50 <strlen@plt>
  40ee54:	sub	w20, w0, #0x1
  40ee58:	cmn	w20, #0x1
  40ee5c:	b.eq	40eebc <ferror@plt+0xb8ec>  // b.none
  40ee60:	ldrb	w0, [x21, w20, uxtw]
  40ee64:	add	x1, x21, w20, uxtw
  40ee68:	cmp	w0, #0x2f
  40ee6c:	b.eq	40eebc <ferror@plt+0xb8ec>  // b.none
  40ee70:	sub	w2, w20, #0x1
  40ee74:	cmp	w0, #0x2e
  40ee78:	b.ne	40eeb4 <ferror@plt+0xb8e4>  // b.any
  40ee7c:	mov	w25, #0x1                   	// #1
  40ee80:	strb	wzr, [x1]
  40ee84:	mov	x0, x21
  40ee88:	mov	x2, #0x0                   	// #0
  40ee8c:	mov	w1, #0x1                   	// #1
  40ee90:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ee94:	cbz	w25, 40ee9c <ferror@plt+0xb8cc>
  40ee98:	strb	w26, [x21, w20, uxtw]
  40ee9c:	ldr	x0, [x19, #896]
  40eea0:	mov	x2, #0x0                   	// #0
  40eea4:	mov	w1, #0x1                   	// #1
  40eea8:	add	x24, x24, #0x8
  40eeac:	bl	40d0b0 <ferror@plt+0x9ae0>
  40eeb0:	b	40ee2c <ferror@plt+0xb85c>
  40eeb4:	mov	w20, w2
  40eeb8:	b	40ee58 <ferror@plt+0xb888>
  40eebc:	mov	w25, #0x0                   	// #0
  40eec0:	b	40ee84 <ferror@plt+0xb8b4>
  40eec4:	mov	x0, x21
  40eec8:	mov	x2, #0x0                   	// #0
  40eecc:	mov	w1, #0x1                   	// #1
  40eed0:	b	40eea8 <ferror@plt+0xb8d8>
  40eed4:	mov	x0, x23
  40eed8:	mov	x2, #0x0                   	// #0
  40eedc:	mov	w1, #0x0                   	// #0
  40eee0:	bl	40d0b0 <ferror@plt+0x9ae0>
  40eee4:	ldr	x0, [x19, #16]
  40eee8:	add	x22, x0, x22
  40eeec:	mov	w0, #0x1                   	// #1
  40eef0:	strb	w0, [x22, #21]
  40eef4:	ldp	x19, x20, [sp, #16]
  40eef8:	ldp	x21, x22, [sp, #32]
  40eefc:	ldp	x23, x24, [sp, #48]
  40ef00:	ldp	x25, x26, [sp, #64]
  40ef04:	ldp	x29, x30, [sp], #80
  40ef08:	ret
  40ef0c:	stp	x29, x30, [sp, #-32]!
  40ef10:	mov	x29, sp
  40ef14:	stp	x19, x20, [sp, #16]
  40ef18:	cbz	w0, 40ef30 <ferror@plt+0xb960>
  40ef1c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40ef20:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ef24:	add	x1, x1, #0x42a
  40ef28:	ldr	w0, [x0, #584]
  40ef2c:	bl	422d58 <ferror@plt+0x1f788>
  40ef30:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40ef34:	add	x19, x20, #0x518
  40ef38:	ldr	w0, [x19, #96]
  40ef3c:	tbz	w0, #31, 40efb8 <ferror@plt+0xb9e8>
  40ef40:	mov	x1, #0x0                   	// #0
  40ef44:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ef48:	add	x0, x0, #0x45a
  40ef4c:	bl	40e3cc <ferror@plt+0xadfc>
  40ef50:	mov	w1, #0x0                   	// #0
  40ef54:	mov	x2, #0x0                   	// #0
  40ef58:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40ef5c:	add	x0, x0, #0xd73
  40ef60:	bl	40d0b0 <ferror@plt+0x9ae0>
  40ef64:	ldr	x1, [x20, #1304]
  40ef68:	cbz	x1, 40efb0 <ferror@plt+0xb9e0>
  40ef6c:	ldr	w0, [x1, #4]
  40ef70:	cbz	w0, 40efb0 <ferror@plt+0xb9e0>
  40ef74:	sub	w0, w0, #0x1
  40ef78:	mov	x2, #0x0                   	// #0
  40ef7c:	add	x0, x1, x0, lsl #3
  40ef80:	ldr	x1, [x0, #8]
  40ef84:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40ef88:	add	x0, x0, #0x46a
  40ef8c:	bl	45a668 <ferror@plt+0x57098>
  40ef90:	str	x0, [x19, #104]
  40ef94:	ldr	x1, [x19, #800]
  40ef98:	mov	x2, #0x0                   	// #0
  40ef9c:	ldp	x19, x20, [sp, #16]
  40efa0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40efa4:	ldp	x29, x30, [sp], #32
  40efa8:	add	x0, x0, #0x47a
  40efac:	b	45a668 <ferror@plt+0x57098>
  40efb0:	str	xzr, [x19, #104]
  40efb4:	b	40ef94 <ferror@plt+0xb9c4>
  40efb8:	mov	x0, #0x0                   	// #0
  40efbc:	ldp	x19, x20, [sp, #16]
  40efc0:	ldp	x29, x30, [sp], #32
  40efc4:	ret
  40efc8:	stp	x29, x30, [sp, #-80]!
  40efcc:	mov	x29, sp
  40efd0:	stp	x19, x20, [sp, #16]
  40efd4:	stp	x21, x22, [sp, #32]
  40efd8:	cbz	w0, 40eff0 <ferror@plt+0xba20>
  40efdc:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40efe0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40efe4:	add	x1, x1, #0x4f9
  40efe8:	ldr	w0, [x0, #584]
  40efec:	bl	422d58 <ferror@plt+0x1f788>
  40eff0:	mov	x19, x1
  40eff4:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40eff8:	mov	x1, #0x0                   	// #0
  40effc:	add	x0, x0, #0x529
  40f000:	adrp	x22, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40f004:	bl	40e3cc <ferror@plt+0xadfc>
  40f008:	add	x22, x22, #0xd73
  40f00c:	mov	w1, #0x0                   	// #0
  40f010:	mov	x0, x22
  40f014:	mov	x2, #0x0                   	// #0
  40f018:	bl	40d0b0 <ferror@plt+0x9ae0>
  40f01c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40f020:	add	x20, x0, #0x518
  40f024:	mov	x21, x0
  40f028:	ldr	x1, [x0, #1304]
  40f02c:	cbz	x1, 40f184 <ferror@plt+0xbbb4>
  40f030:	ldr	w0, [x1, #4]
  40f034:	cbz	w0, 40f184 <ferror@plt+0xbbb4>
  40f038:	sub	w0, w0, #0x1
  40f03c:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40f040:	add	x1, x1, #0x66b
  40f044:	ldr	x19, [x19, x0, lsl #3]
  40f048:	mov	x0, x19
  40f04c:	bl	403220 <strcmp@plt>
  40f050:	cbz	w0, 40f134 <ferror@plt+0xbb64>
  40f054:	ldr	w0, [x20, #96]
  40f058:	cbz	w0, 40f1fc <ferror@plt+0xbc2c>
  40f05c:	mov	x0, x19
  40f060:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40f064:	mov	x21, x0
  40f068:	mov	x19, #0x0                   	// #0
  40f06c:	ldr	w22, [x20, #96]
  40f070:	lsr	w0, w22, #31
  40f074:	add	x0, x20, x0, lsl #3
  40f078:	str	x21, [x0, #824]
  40f07c:	tbnz	w22, #31, 40f0e0 <ferror@plt+0xbb10>
  40f080:	mov	w1, #0x0                   	// #0
  40f084:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f088:	add	x0, x0, #0x5a5
  40f08c:	str	xzr, [sp, #56]
  40f090:	bl	402f50 <open@plt>
  40f094:	mov	w21, w0
  40f098:	tbz	w0, #31, 40f1dc <ferror@plt+0xbc0c>
  40f09c:	mov	x1, #0x0                   	// #0
  40f0a0:	add	x0, sp, #0x40
  40f0a4:	bl	403020 <gettimeofday@plt>
  40f0a8:	ldr	x0, [sp, #72]
  40f0ac:	mov	x2, #0x3e8                 	// #1000
  40f0b0:	sdiv	x1, x0, x2
  40f0b4:	ldr	x0, [sp, #64]
  40f0b8:	madd	x0, x0, x2, x1
  40f0bc:	str	x0, [sp, #56]
  40f0c0:	bl	402f00 <getpid@plt>
  40f0c4:	sxtw	x2, w0
  40f0c8:	ldr	x0, [sp, #56]
  40f0cc:	eor	x2, x2, x0
  40f0d0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f0d4:	add	x0, x20, #0x420
  40f0d8:	add	x1, x1, #0x5b2
  40f0dc:	bl	402e00 <sprintf@plt>
  40f0e0:	ldrb	w0, [x20, #1056]
  40f0e4:	add	x1, x20, #0x420
  40f0e8:	cbz	w0, 40f118 <ferror@plt+0xbb48>
  40f0ec:	mov	x3, x19
  40f0f0:	mov	x4, #0x0                   	// #0
  40f0f4:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f0f8:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f0fc:	add	x2, x2, #0x4f6
  40f100:	add	x0, x0, #0x5b7
  40f104:	bl	45a668 <ferror@plt+0x57098>
  40f108:	mov	x21, x0
  40f10c:	mov	x0, x19
  40f110:	mov	x19, x21
  40f114:	bl	4032a0 <free@plt>
  40f118:	tbz	w22, #31, 40f120 <ferror@plt+0xbb50>
  40f11c:	strb	wzr, [x20, #1056]
  40f120:	mov	x0, x19
  40f124:	ldp	x19, x20, [sp, #16]
  40f128:	ldp	x21, x22, [sp, #32]
  40f12c:	ldp	x29, x30, [sp], #80
  40f130:	ret
  40f134:	adrp	x19, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f138:	add	x19, x19, #0x567
  40f13c:	mov	x1, #0x0                   	// #0
  40f140:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f144:	add	x0, x0, #0x543
  40f148:	bl	40e3cc <ferror@plt+0xadfc>
  40f14c:	mov	w1, #0x0                   	// #0
  40f150:	mov	x0, x22
  40f154:	mov	x2, #0x0                   	// #0
  40f158:	bl	40d0b0 <ferror@plt+0x9ae0>
  40f15c:	ldr	x1, [x21, #1304]
  40f160:	cbz	x1, 40f16c <ferror@plt+0xbb9c>
  40f164:	ldr	w0, [x1, #4]
  40f168:	cbnz	w0, 40f1a4 <ferror@plt+0xbbd4>
  40f16c:	adrp	x2, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f170:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  40f174:	add	x2, x2, #0x56c
  40f178:	add	x0, x0, #0x6e9
  40f17c:	mov	w1, #0x25ee                	// #9710
  40f180:	bl	403600 <ferror@plt+0x30>
  40f184:	ldr	w0, [x20, #96]
  40f188:	cbz	w0, 40f1fc <ferror@plt+0xbc2c>
  40f18c:	mov	x1, #0x0                   	// #0
  40f190:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f194:	mov	x19, #0x0                   	// #0
  40f198:	add	x0, x0, #0x565
  40f19c:	bl	40e3cc <ferror@plt+0xadfc>
  40f1a0:	b	40f14c <ferror@plt+0xbb7c>
  40f1a4:	sub	w0, w0, #0x1
  40f1a8:	mov	x2, #0x0                   	// #0
  40f1ac:	add	x0, x1, x0, lsl #3
  40f1b0:	mov	x1, x19
  40f1b4:	ldr	x0, [x0, #8]
  40f1b8:	bl	45a668 <ferror@plt+0x57098>
  40f1bc:	mov	x1, x0
  40f1c0:	mov	x21, x0
  40f1c4:	mov	x2, #0x0                   	// #0
  40f1c8:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f1cc:	add	x0, x0, #0x591
  40f1d0:	bl	45a668 <ferror@plt+0x57098>
  40f1d4:	mov	x19, x0
  40f1d8:	b	40f06c <ferror@plt+0xba9c>
  40f1dc:	add	x1, sp, #0x38
  40f1e0:	mov	x2, #0x8                   	// #8
  40f1e4:	bl	4033c0 <read@plt>
  40f1e8:	mov	w0, w21
  40f1ec:	bl	403120 <close@plt>
  40f1f0:	ldr	x2, [sp, #56]
  40f1f4:	cbz	x2, 40f09c <ferror@plt+0xbacc>
  40f1f8:	b	40f0d0 <ferror@plt+0xbb00>
  40f1fc:	mov	x19, #0x0                   	// #0
  40f200:	b	40f120 <ferror@plt+0xbb50>
  40f204:	stp	x29, x30, [sp, #-144]!
  40f208:	mov	x1, #0x0                   	// #0
  40f20c:	mov	x29, sp
  40f210:	stp	x19, x20, [sp, #16]
  40f214:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40f218:	stp	x21, x22, [sp, #32]
  40f21c:	add	x21, x20, #0x518
  40f220:	bl	40e3cc <ferror@plt+0xadfc>
  40f224:	mov	x2, #0x0                   	// #0
  40f228:	mov	w1, #0x0                   	// #0
  40f22c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40f230:	add	x0, x0, #0xd73
  40f234:	bl	40d0b0 <ferror@plt+0x9ae0>
  40f238:	ldr	x0, [x21, #16]
  40f23c:	mov	w2, #0x0                   	// #0
  40f240:	ldr	w3, [x21, #24]
  40f244:	add	x0, x0, #0x10
  40f248:	cmp	w3, w2
  40f24c:	b.le	40f26c <ferror@plt+0xbc9c>
  40f250:	ldr	w1, [x0]
  40f254:	tbz	w1, #2, 40f260 <ferror@plt+0xbc90>
  40f258:	orr	w1, w1, #0x8
  40f25c:	str	w1, [x0]
  40f260:	add	w2, w2, #0x1
  40f264:	add	x0, x0, #0x18
  40f268:	b	40f248 <ferror@plt+0xbc78>
  40f26c:	ldr	x0, [x20, #1304]
  40f270:	cbz	x0, 40f444 <ferror@plt+0xbe74>
  40f274:	ldr	w0, [x0, #4]
  40f278:	cbz	w0, 40f444 <ferror@plt+0xbe74>
  40f27c:	add	w0, w0, #0x1
  40f280:	lsl	x0, x0, #3
  40f284:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40f288:	ldr	x20, [x20, #1304]
  40f28c:	mov	x19, x0
  40f290:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  40f294:	add	x1, x1, #0x122
  40f298:	str	x1, [x0], #8
  40f29c:	cbz	x20, 40f3a4 <ferror@plt+0xbdd4>
  40f2a0:	ldr	w2, [x20, #4]
  40f2a4:	add	x1, x20, #0x8
  40f2a8:	ubfiz	x2, x2, #3, #32
  40f2ac:	bl	402cd0 <memcpy@plt>
  40f2b0:	cbz	x20, 40f3b0 <ferror@plt+0xbde0>
  40f2b4:	ldr	w0, [x20, #4]
  40f2b8:	mov	x1, x19
  40f2bc:	add	x4, sp, #0x34
  40f2c0:	add	x3, sp, #0x38
  40f2c4:	mov	w2, #0x80000               	// #524288
  40f2c8:	add	w0, w0, #0x1
  40f2cc:	bl	416ab4 <ferror@plt+0x134e4>
  40f2d0:	mov	x0, x19
  40f2d4:	adrp	x20, 4fd000 <__environ@@GLIBC_2.17+0x1af8>
  40f2d8:	bl	4032a0 <free@plt>
  40f2dc:	adrp	x22, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40f2e0:	adrp	x0, 406000 <ferror@plt+0x2a30>
  40f2e4:	add	x0, x0, #0xa80
  40f2e8:	str	x0, [sp, #64]
  40f2ec:	adrp	x0, 406000 <ferror@plt+0x2a30>
  40f2f0:	add	x0, x0, #0xb0c
  40f2f4:	str	x0, [sp, #72]
  40f2f8:	mov	x0, #0x3                   	// #3
  40f2fc:	str	x0, [sp, #88]
  40f300:	adrp	x0, 409000 <ferror@plt+0x5a30>
  40f304:	add	x0, x0, #0x924
  40f308:	str	x0, [sp, #96]
  40f30c:	mov	w0, #0x80000               	// #524288
  40f310:	str	w0, [sp, #104]
  40f314:	adrp	x0, 414000 <ferror@plt+0x10a30>
  40f318:	add	x0, x0, #0xcb0
  40f31c:	str	x0, [sp, #112]
  40f320:	mov	w0, #0x200000              	// #2097152
  40f324:	add	x20, x20, #0x140
  40f328:	add	x22, x22, #0x230
  40f32c:	str	w0, [sp, #120]
  40f330:	adrp	x0, 413000 <ferror@plt+0xfa30>
  40f334:	add	x0, x0, #0x674
  40f338:	mov	w19, #0x1                   	// #1
  40f33c:	str	x0, [sp, #128]
  40f340:	mov	w0, #0x100000              	// #1048576
  40f344:	str	w0, [sp, #136]
  40f348:	ldr	w1, [sp, #52]
  40f34c:	ldr	x0, [sp, #56]
  40f350:	cmp	w1, w19
  40f354:	b.ls	40f428 <ferror@plt+0xbe58>  // b.plast
  40f358:	mov	w1, #0x58                  	// #88
  40f35c:	umull	x1, w19, w1
  40f360:	add	x7, x0, x1
  40f364:	ldr	x0, [x0, x1]
  40f368:	cmp	x0, #0x525
  40f36c:	b.eq	40f380 <ferror@plt+0xbdb0>  // b.none
  40f370:	b.hi	40f3b8 <ferror@plt+0xbde8>  // b.pmore
  40f374:	sub	x0, x0, #0x256
  40f378:	cmp	x0, #0x2
  40f37c:	b.hi	40f400 <ferror@plt+0xbe30>  // b.pmore
  40f380:	ldr	x0, [x7, #32]
  40f384:	add	x2, x7, #0x28
  40f388:	ldr	x1, [x7, #64]
  40f38c:	mov	w4, #0x1                   	// #1
  40f390:	mov	w3, #0x0                   	// #0
  40f394:	sub	x1, x1, #0x1
  40f398:	bl	4068c0 <ferror@plt+0x32f0>
  40f39c:	add	w19, w19, #0x1
  40f3a0:	b	40f348 <ferror@plt+0xbd78>
  40f3a4:	mov	x1, #0x0                   	// #0
  40f3a8:	mov	w2, #0x0                   	// #0
  40f3ac:	b	40f2a8 <ferror@plt+0xbcd8>
  40f3b0:	mov	w0, #0x0                   	// #0
  40f3b4:	b	40f2b8 <ferror@plt+0xbce8>
  40f3b8:	cmp	x0, #0x59a
  40f3bc:	b.ne	40f400 <ferror@plt+0xbe30>  // b.any
  40f3c0:	ldr	x19, [x7, #16]
  40f3c4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  40f3c8:	add	x1, x1, #0xd0e
  40f3cc:	mov	x0, x19
  40f3d0:	bl	403220 <strcmp@plt>
  40f3d4:	mov	w1, w0
  40f3d8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40f3dc:	ldr	w0, [x0, #584]
  40f3e0:	cbz	w1, 40f3f4 <ferror@plt+0xbe24>
  40f3e4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f3e8:	mov	x2, x19
  40f3ec:	add	x1, x1, #0x5d8
  40f3f0:	bl	422d58 <ferror@plt+0x1f788>
  40f3f4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f3f8:	add	x1, x1, #0x5fd
  40f3fc:	bl	422d58 <ferror@plt+0x1f788>
  40f400:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40f404:	add	x5, sp, #0x40
  40f408:	mov	x2, x7
  40f40c:	mov	x1, x20
  40f410:	ldr	x6, [x0, #784]
  40f414:	mov	w4, #0x80000               	// #524288
  40f418:	mov	x0, x22
  40f41c:	mov	w3, #0x0                   	// #0
  40f420:	bl	418610 <ferror@plt+0x15040>
  40f424:	b	40f39c <ferror@plt+0xbdcc>
  40f428:	bl	4032a0 <free@plt>
  40f42c:	bl	40685c <ferror@plt+0x328c>
  40f430:	ldr	w0, [x21, #24]
  40f434:	mov	w1, #0x18                  	// #24
  40f438:	smull	x0, w0, w1
  40f43c:	ldr	x1, [x21, #16]
  40f440:	str	xzr, [x1, x0]
  40f444:	ldp	x19, x20, [sp, #16]
  40f448:	ldp	x21, x22, [sp, #32]
  40f44c:	ldp	x29, x30, [sp], #144
  40f450:	ret
  40f454:	stp	x29, x30, [sp, #-112]!
  40f458:	mov	x29, sp
  40f45c:	ldr	x1, [x0, #8]
  40f460:	stp	x19, x20, [sp, #16]
  40f464:	ldr	w0, [x0, #16]
  40f468:	stp	x23, x24, [sp, #48]
  40f46c:	adrp	x23, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40f470:	add	x19, x23, #0x518
  40f474:	stp	x21, x22, [sp, #32]
  40f478:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x1ec10>
  40f47c:	add	x21, x21, #0x830
  40f480:	stp	x25, x26, [sp, #64]
  40f484:	adrp	x22, 485000 <_obstack_memory_used@@Base+0x28c10>
  40f488:	add	x26, x21, #0x74
  40f48c:	stp	x27, x28, [sp, #80]
  40f490:	bl	40a4f8 <ferror@plt+0x6f28>
  40f494:	mov	x0, #0x8a0                 	// #2208
  40f498:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40f49c:	str	x0, [x19, #208]
  40f4a0:	add	x1, x21, #0x200
  40f4a4:	mov	x2, #0x8a0                 	// #2208
  40f4a8:	bl	402cd0 <memcpy@plt>
  40f4ac:	add	x22, x22, #0x122
  40f4b0:	mov	w0, #0x44                  	// #68
  40f4b4:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40f4b8:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40f4bc:	add	x25, x25, #0xb60
  40f4c0:	add	x24, x24, #0x10e
  40f4c4:	mov	x3, x22
  40f4c8:	mov	x4, x26
  40f4cc:	mov	x2, x25
  40f4d0:	mov	x1, x26
  40f4d4:	mov	x5, #0x0                   	// #0
  40f4d8:	str	w0, [x19, #216]
  40f4dc:	mov	x0, x24
  40f4e0:	bl	45a668 <ferror@plt+0x57098>
  40f4e4:	str	x0, [x19, #56]
  40f4e8:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  40f4ec:	add	x20, x0, #0x4a0
  40f4f0:	mov	x1, x26
  40f4f4:	mov	x2, #0x0                   	// #0
  40f4f8:	ldr	x0, [x0, #1184]
  40f4fc:	adrp	x28, 488000 <_obstack_memory_used@@Base+0x2bc10>
  40f500:	add	x28, x28, #0x6b4
  40f504:	bl	45a668 <ferror@plt+0x57098>
  40f508:	str	x0, [x19, #64]
  40f50c:	mov	x1, x28
  40f510:	add	x0, x20, #0x848
  40f514:	mov	w3, #0x1                   	// #1
  40f518:	mov	w2, #0x4                   	// #4
  40f51c:	bl	406ba8 <ferror@plt+0x35d8>
  40f520:	cbz	x0, 40f85c <ferror@plt+0xc28c>
  40f524:	mov	x26, x0
  40f528:	mov	x1, x28
  40f52c:	bl	403220 <strcmp@plt>
  40f530:	cbz	w0, 40f85c <ferror@plt+0xc28c>
  40f534:	mov	x0, x26
  40f538:	mov	w2, #0x0                   	// #0
  40f53c:	mov	w1, #0x1                   	// #1
  40f540:	bl	406cc8 <ferror@plt+0x36f8>
  40f544:	ldr	x2, [x19, #64]
  40f548:	str	x2, [x29, #104]
  40f54c:	adrp	x26, 476000 <_obstack_memory_used@@Base+0x19c10>
  40f550:	add	x26, x26, #0xf4a
  40f554:	mov	x0, x2
  40f558:	bl	402d50 <strlen@plt>
  40f55c:	add	x0, x0, #0x22
  40f560:	and	x0, x0, #0xfffffffffffffff0
  40f564:	mov	x1, x26
  40f568:	sub	sp, sp, x0
  40f56c:	mov	x27, sp
  40f570:	mov	x0, x27
  40f574:	bl	403360 <strcpy@plt>
  40f578:	ldr	x2, [x29, #104]
  40f57c:	mov	x0, x27
  40f580:	mov	x1, x2
  40f584:	bl	402fe0 <strcat@plt>
  40f588:	mov	x1, x28
  40f58c:	mov	x0, x27
  40f590:	bl	402fe0 <strcat@plt>
  40f594:	mov	x0, x27
  40f598:	mov	w1, #0x4                   	// #4
  40f59c:	bl	403190 <access@plt>
  40f5a0:	cbnz	w0, 40f5b4 <ferror@plt+0xbfe4>
  40f5a4:	mov	x0, x27
  40f5a8:	mov	w2, #0x0                   	// #0
  40f5ac:	mov	w1, #0x1                   	// #1
  40f5b0:	bl	406cc8 <ferror@plt+0x36f8>
  40f5b4:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f5b8:	add	x0, x0, #0x621
  40f5bc:	bl	40f204 <ferror@plt+0xbc34>
  40f5c0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f5c4:	add	x0, x0, #0x65f
  40f5c8:	bl	40f204 <ferror@plt+0xbc34>
  40f5cc:	mov	x0, x22
  40f5d0:	bl	40f204 <ferror@plt+0xbc34>
  40f5d4:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f5d8:	add	x0, x0, #0x74e
  40f5dc:	bl	40f204 <ferror@plt+0xbc34>
  40f5e0:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f5e4:	add	x0, x0, #0x794
  40f5e8:	bl	40f204 <ferror@plt+0xbc34>
  40f5ec:	ldr	x0, [x20, #2272]
  40f5f0:	ldrb	w0, [x0]
  40f5f4:	cmp	w0, #0x30
  40f5f8:	b.ne	40f624 <ferror@plt+0xc054>  // b.any
  40f5fc:	ldr	x1, [x20, #2248]
  40f600:	ldrb	w0, [x1]
  40f604:	cbz	w0, 40f624 <ferror@plt+0xc054>
  40f608:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x19c10>
  40f60c:	add	x0, x20, #0x890
  40f610:	add	x2, x2, #0xc6b
  40f614:	mov	w5, #0x0                   	// #0
  40f618:	mov	w4, #0x0                   	// #0
  40f61c:	mov	w3, #0x1                   	// #1
  40f620:	bl	405c10 <ferror@plt+0x2640>
  40f624:	ldr	x0, [x20, #2376]
  40f628:	ldrb	w1, [x0]
  40f62c:	cbz	w1, 40f668 <ferror@plt+0xc098>
  40f630:	adrp	x1, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40f634:	ldr	w1, [x1, #812]
  40f638:	cbnz	w1, 40f668 <ferror@plt+0xc098>
  40f63c:	mov	x1, #0x0                   	// #0
  40f640:	bl	40e3cc <ferror@plt+0xadfc>
  40f644:	cbnz	w0, 40f668 <ferror@plt+0xc098>
  40f648:	ldr	x0, [x23, #1304]
  40f64c:	cbz	x0, 40f668 <ferror@plt+0xc098>
  40f650:	ldr	w1, [x0, #4]
  40f654:	cmp	w1, #0x1
  40f658:	b.ls	40f86c <ferror@plt+0xc29c>  // b.plast
  40f65c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f660:	add	x0, x0, #0x7a9
  40f664:	bl	4221dc <ferror@plt+0x1ec0c>
  40f668:	ldr	x0, [x19, #288]
  40f66c:	cbz	x0, 40f754 <ferror@plt+0xc184>
  40f670:	add	x0, x19, #0x138
  40f674:	ldp	x2, x1, [x0, #24]
  40f678:	sub	x1, x1, x2
  40f67c:	cmp	x1, #0xf
  40f680:	b.hi	40f68c <ferror@plt+0xc0bc>  // b.pmore
  40f684:	mov	x1, #0x10                  	// #16
  40f688:	bl	45c22c <_obstack_newchunk@@Base>
  40f68c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f690:	add	x0, x0, #0x7e0
  40f694:	ldr	x1, [x19, #336]
  40f698:	add	x27, x19, #0x138
  40f69c:	ldp	x2, x3, [x0]
  40f6a0:	stp	x2, x3, [x1]
  40f6a4:	ldr	x2, [x19, #336]
  40f6a8:	ldr	x0, [x20, #2184]
  40f6ac:	add	x2, x2, #0x10
  40f6b0:	str	x2, [x29, #104]
  40f6b4:	str	x2, [x19, #336]
  40f6b8:	bl	402d50 <strlen@plt>
  40f6bc:	add	x1, x0, #0x1
  40f6c0:	mov	x28, x0
  40f6c4:	ldr	x2, [x29, #104]
  40f6c8:	ldr	x0, [x19, #344]
  40f6cc:	sub	x2, x0, x2
  40f6d0:	cmp	x1, x2
  40f6d4:	b.ls	40f6e0 <ferror@plt+0xc110>  // b.plast
  40f6d8:	mov	x0, x27
  40f6dc:	bl	45c22c <_obstack_newchunk@@Base>
  40f6e0:	ldr	x0, [x19, #336]
  40f6e4:	mov	x2, x28
  40f6e8:	ldr	x1, [x20, #2184]
  40f6ec:	bl	402cd0 <memcpy@plt>
  40f6f0:	ldr	x1, [x19, #336]
  40f6f4:	add	x0, x1, x28
  40f6f8:	add	x0, x0, #0x1
  40f6fc:	str	x0, [x19, #336]
  40f700:	strb	wzr, [x1, x28]
  40f704:	ldp	x1, x3, [x19, #328]
  40f708:	cmp	x3, x1
  40f70c:	b.ne	40f71c <ferror@plt+0xc14c>  // b.any
  40f710:	ldrb	w0, [x19, #392]
  40f714:	orr	w0, w0, #0x2
  40f718:	strb	w0, [x19, #392]
  40f71c:	ldr	x0, [x19, #360]
  40f720:	mov	w2, #0x0                   	// #0
  40f724:	ldr	x4, [x19, #344]
  40f728:	add	x3, x3, x0
  40f72c:	bic	x0, x3, x0
  40f730:	ldr	x3, [x19, #320]
  40f734:	sub	x5, x0, x3
  40f738:	sub	x3, x4, x3
  40f73c:	cmp	x5, x3
  40f740:	csel	x0, x0, x4, ls  // ls = plast
  40f744:	stp	x0, x0, [x19, #328]
  40f748:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2bc10>
  40f74c:	add	x0, x0, #0x14c
  40f750:	bl	405540 <ferror@plt+0x1f70>
  40f754:	ldr	x0, [x20, #2224]
  40f758:	ldrb	w1, [x0]
  40f75c:	cbz	w1, 40f798 <ferror@plt+0xc1c8>
  40f760:	adrp	x1, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  40f764:	ldr	w1, [x1, #812]
  40f768:	cbnz	w1, 40f798 <ferror@plt+0xc1c8>
  40f76c:	mov	x1, #0x0                   	// #0
  40f770:	bl	40e3cc <ferror@plt+0xadfc>
  40f774:	cbnz	w0, 40f798 <ferror@plt+0xc1c8>
  40f778:	ldr	x0, [x23, #1304]
  40f77c:	cbz	x0, 40f798 <ferror@plt+0xc1c8>
  40f780:	ldr	w1, [x0, #4]
  40f784:	cmp	w1, #0x1
  40f788:	b.ls	40f880 <ferror@plt+0xc2b0>  // b.plast
  40f78c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f790:	add	x0, x0, #0x7f1
  40f794:	bl	4221dc <ferror@plt+0x1ec0c>
  40f798:	ldr	x0, [x20, #2384]
  40f79c:	ldrb	w1, [x0]
  40f7a0:	cbnz	w1, 40f894 <ferror@plt+0xc2c4>
  40f7a4:	ldr	x0, [x20, #2272]
  40f7a8:	ldrb	w0, [x0]
  40f7ac:	cmp	w0, #0x30
  40f7b0:	b.ne	40f8f0 <ferror@plt+0xc320>  // b.any
  40f7b4:	ldr	x0, [x20, #2256]
  40f7b8:	ldrb	w1, [x0]
  40f7bc:	cbz	w1, 40f7cc <ferror@plt+0xc1fc>
  40f7c0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40f7c4:	add	x1, x1, #0xc6b
  40f7c8:	bl	407764 <ferror@plt+0x4194>
  40f7cc:	ldr	x0, [x20, #2264]
  40f7d0:	ldrb	w1, [x0]
  40f7d4:	cbz	w1, 40f7e4 <ferror@plt+0xc214>
  40f7d8:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  40f7dc:	add	x1, x1, #0xc6b
  40f7e0:	bl	407764 <ferror@plt+0x4194>
  40f7e4:	ldr	x0, [x20, #2272]
  40f7e8:	ldrb	w0, [x0]
  40f7ec:	cmp	w0, #0x30
  40f7f0:	b.ne	40f830 <ferror@plt+0xc260>  // b.any
  40f7f4:	ldr	x0, [x19, #592]
  40f7f8:	mov	x3, #0x0                   	// #0
  40f7fc:	ldr	x1, [x19, #56]
  40f800:	cmp	x0, #0x0
  40f804:	csel	x0, x0, x26, ne  // ne = any
  40f808:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40f80c:	add	x2, x2, #0xd77
  40f810:	bl	45a668 <ferror@plt+0x57098>
  40f814:	mov	x1, x0
  40f818:	mov	w5, #0x1                   	// #1
  40f81c:	add	x0, x20, #0x848
  40f820:	mov	w3, w5
  40f824:	mov	w4, #0x0                   	// #0
  40f828:	mov	x2, #0x0                   	// #0
  40f82c:	bl	405c10 <ferror@plt+0x2640>
  40f830:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40f834:	add	x23, x23, #0xd6b
  40f838:	mov	x1, x23
  40f83c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f840:	add	x0, x0, #0x834
  40f844:	bl	407764 <ferror@plt+0x4194>
  40f848:	mov	x1, x23
  40f84c:	adrp	x0, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f850:	add	x0, x0, #0x830
  40f854:	bl	407764 <ferror@plt+0x4194>
  40f858:	b	40f8f8 <ferror@plt+0xc328>
  40f85c:	ldr	x0, [x19, #112]
  40f860:	cbnz	x0, 40f544 <ferror@plt+0xbf74>
  40f864:	bl	407928 <ferror@plt+0x4358>
  40f868:	b	40f544 <ferror@plt+0xbf74>
  40f86c:	b.ne	40f668 <ferror@plt+0xc098>  // b.any
  40f870:	ldr	x0, [x0, #8]
  40f874:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40f878:	str	x0, [x19, #304]
  40f87c:	b	40f668 <ferror@plt+0xc098>
  40f880:	b.ne	40f798 <ferror@plt+0xc1c8>  // b.any
  40f884:	ldr	x0, [x0, #8]
  40f888:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40f88c:	str	x0, [x19, #296]
  40f890:	b	40f798 <ferror@plt+0xc1c8>
  40f894:	mov	x1, #0x0                   	// #0
  40f898:	bl	40e3cc <ferror@plt+0xadfc>
  40f89c:	cbnz	w0, 40f7a4 <ferror@plt+0xc1d4>
  40f8a0:	mov	x2, #0x0                   	// #0
  40f8a4:	mov	w1, #0x0                   	// #0
  40f8a8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  40f8ac:	add	x0, x0, #0xd73
  40f8b0:	bl	40d0b0 <ferror@plt+0x9ae0>
  40f8b4:	mov	w23, w0
  40f8b8:	cbnz	w0, 40f7a4 <ferror@plt+0xc1d4>
  40f8bc:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x1bc10>
  40f8c0:	add	x26, x26, #0xd6b
  40f8c4:	ldr	x0, [x19]
  40f8c8:	cbz	x0, 40f8f8 <ferror@plt+0xc328>
  40f8cc:	ldr	w1, [x0, #4]
  40f8d0:	cmp	w1, w23
  40f8d4:	b.ls	40f8f8 <ferror@plt+0xc328>  // b.plast
  40f8d8:	add	x0, x0, w23, uxtw #3
  40f8dc:	mov	x1, x26
  40f8e0:	add	w23, w23, #0x1
  40f8e4:	ldr	x0, [x0, #8]
  40f8e8:	bl	407764 <ferror@plt+0x4194>
  40f8ec:	b	40f8c4 <ferror@plt+0xc2f4>
  40f8f0:	ldr	x0, [x19, #288]
  40f8f4:	cbnz	x0, 40f7b4 <ferror@plt+0xc1e4>
  40f8f8:	ldr	x23, [x19, #712]
  40f8fc:	add	x26, x20, #0x848
  40f900:	cbz	x23, 40f934 <ferror@plt+0xc364>
  40f904:	ldr	x1, [x23, #8]
  40f908:	mov	x0, x26
  40f90c:	mov	w3, #0x1                   	// #1
  40f910:	mov	w2, #0x4                   	// #4
  40f914:	bl	406ba8 <ferror@plt+0x35d8>
  40f918:	cbnz	x0, 40f920 <ferror@plt+0xc350>
  40f91c:	ldr	x0, [x23, #8]
  40f920:	mov	w2, #0x1                   	// #1
  40f924:	mov	w1, #0x0                   	// #0
  40f928:	bl	406cc8 <ferror@plt+0x36f8>
  40f92c:	ldr	x23, [x23]
  40f930:	b	40f900 <ferror@plt+0xc330>
  40f934:	ldr	x23, [x19, #112]
  40f938:	adrp	x26, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f93c:	add	x26, x26, #0x83a
  40f940:	cbz	x23, 40f974 <ferror@plt+0xc3a4>
  40f944:	ldr	w0, [x23, #32]
  40f948:	cmp	w0, #0x9
  40f94c:	b.ne	40f96c <ferror@plt+0xc39c>  // b.any
  40f950:	ldr	x0, [x23]
  40f954:	mov	x1, x26
  40f958:	bl	403220 <strcmp@plt>
  40f95c:	cbnz	w0, 40f96c <ferror@plt+0xc39c>
  40f960:	ldr	x0, [x23, #16]
  40f964:	ldr	x0, [x0]
  40f968:	bl	40f204 <ferror@plt+0xbc34>
  40f96c:	ldr	x23, [x23, #24]
  40f970:	b	40f940 <ferror@plt+0xc370>
  40f974:	ldr	w0, [x19, #96]
  40f978:	cbz	w0, 40fa4c <ferror@plt+0xc47c>
  40f97c:	ldr	w0, [x19, #796]
  40f980:	adrp	x23, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40f984:	add	x23, x23, #0x844
  40f988:	cbnz	w0, 40f9ec <ferror@plt+0xc41c>
  40f98c:	ldr	w0, [x19, #24]
  40f990:	ldr	w2, [x19, #248]
  40f994:	str	w0, [x19, #844]
  40f998:	mov	w0, #0x18                  	// #24
  40f99c:	str	w2, [x19, #852]
  40f9a0:	smull	x2, w2, w0
  40f9a4:	ldr	x0, [x19, #16]
  40f9a8:	mov	x1, x2
  40f9ac:	bl	45d784 <_obstack_memory_used@@Base+0x1394>
  40f9b0:	str	x0, [x19, #816]
  40f9b4:	mov	x0, x23
  40f9b8:	bl	40f204 <ferror@plt+0xbc34>
  40f9bc:	ldr	w0, [x19, #24]
  40f9c0:	str	w0, [x19, #840]
  40f9c4:	ldr	w0, [x19, #248]
  40f9c8:	str	w0, [x19, #848]
  40f9cc:	ldr	x0, [x19, #16]
  40f9d0:	str	x0, [x19, #808]
  40f9d4:	ldr	w0, [x19, #844]
  40f9d8:	str	w0, [x19, #24]
  40f9dc:	ldr	w0, [x19, #852]
  40f9e0:	str	w0, [x19, #248]
  40f9e4:	ldr	x0, [x19, #816]
  40f9e8:	str	x0, [x19, #16]
  40f9ec:	ldr	w0, [x19, #96]
  40f9f0:	ldr	w26, [x19, #692]
  40f9f4:	neg	w0, w0
  40f9f8:	str	w0, [x19, #96]
  40f9fc:	mov	x0, x23
  40fa00:	str	wzr, [x19, #692]
  40fa04:	bl	40f204 <ferror@plt+0xbc34>
  40fa08:	str	w26, [x19, #692]
  40fa0c:	ldr	w0, [x19, #796]
  40fa10:	cbnz	w0, 40fa4c <ferror@plt+0xc47c>
  40fa14:	ldr	x1, [x19, #16]
  40fa18:	str	x1, [x19, #816]
  40fa1c:	ldr	w1, [x19, #96]
  40fa20:	ldr	w0, [x19, #24]
  40fa24:	neg	w1, w1
  40fa28:	str	w0, [x19, #844]
  40fa2c:	ldr	w0, [x19, #248]
  40fa30:	str	w1, [x19, #96]
  40fa34:	ldr	w1, [x19, #840]
  40fa38:	str	w0, [x19, #852]
  40fa3c:	ldr	x0, [x19, #808]
  40fa40:	str	x0, [x19, #16]
  40fa44:	str	w1, [x19, #24]
  40fa48:	str	w1, [x19, #248]
  40fa4c:	ldr	x0, [x19, #592]
  40fa50:	cbz	x0, 40fa74 <ferror@plt+0xc4a4>
  40fa54:	add	x5, x21, #0x74
  40fa58:	mov	x4, x22
  40fa5c:	mov	x3, x25
  40fa60:	mov	x2, x5
  40fa64:	mov	x1, x24
  40fa68:	mov	x6, #0x0                   	// #0
  40fa6c:	bl	45a668 <ferror@plt+0x57098>
  40fa70:	str	x0, [x19, #592]
  40fa74:	ldr	x21, [x19, #208]
  40fa78:	ldr	x0, [x21, #8]
  40fa7c:	cbz	x0, 40fa90 <ferror@plt+0xc4c0>
  40fa80:	mov	w1, #0x0                   	// #0
  40fa84:	add	x21, x21, #0x20
  40fa88:	bl	404db8 <ferror@plt+0x17e8>
  40fa8c:	b	40fa78 <ferror@plt+0xc4a8>
  40fa90:	ldr	x21, [x19, #112]
  40fa94:	cbz	x21, 40fab0 <ferror@plt+0xc4e0>
  40fa98:	ldr	x0, [x21, #16]
  40fa9c:	ldrb	w1, [x21, #36]
  40faa0:	ldr	x0, [x0]
  40faa4:	bl	404db8 <ferror@plt+0x17e8>
  40faa8:	ldr	x21, [x21, #24]
  40faac:	b	40fa94 <ferror@plt+0xc4c4>
  40fab0:	ldr	x0, [x20, #2144]
  40fab4:	mov	w1, #0x0                   	// #0
  40fab8:	bl	404db8 <ferror@plt+0x17e8>
  40fabc:	str	wzr, [x19, #40]
  40fac0:	ldr	x0, [x19, #584]
  40fac4:	ldrb	w1, [x0]
  40fac8:	cmp	w1, #0x20
  40facc:	b.eq	40fad8 <ferror@plt+0xc508>  // b.none
  40fad0:	cmp	w1, #0x9
  40fad4:	b.ne	40fae0 <ferror@plt+0xc510>  // b.any
  40fad8:	add	x0, x0, #0x1
  40fadc:	b	40fac4 <ferror@plt+0xc4f4>
  40fae0:	mov	w2, #0x0                   	// #0
  40fae4:	mov	w1, #0x0                   	// #0
  40fae8:	ldrb	w3, [x0]
  40faec:	cbz	w3, 40fb30 <ferror@plt+0xc560>
  40faf0:	ldrb	w1, [x0]
  40faf4:	cmp	w1, #0x9
  40faf8:	b.eq	40fb10 <ferror@plt+0xc540>  // b.none
  40fafc:	and	w1, w1, #0xffffffdf
  40fb00:	cbz	w1, 40fb10 <ferror@plt+0xc540>
  40fb04:	add	x0, x0, #0x1
  40fb08:	b	40faf0 <ferror@plt+0xc520>
  40fb0c:	add	x0, x0, #0x1
  40fb10:	ldrb	w1, [x0]
  40fb14:	cmp	w1, #0x20
  40fb18:	b.eq	40fb0c <ferror@plt+0xc53c>  // b.none
  40fb1c:	cmp	w1, #0x9
  40fb20:	b.eq	40fb0c <ferror@plt+0xc53c>  // b.none
  40fb24:	add	w2, w2, #0x1
  40fb28:	mov	w1, #0x1                   	// #1
  40fb2c:	b	40fae8 <ferror@plt+0xc518>
  40fb30:	cbz	w1, 40fb38 <ferror@plt+0xc568>
  40fb34:	str	w2, [x19, #40]
  40fb38:	ldr	w0, [x19, #40]
  40fb3c:	adrp	x23, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  40fb40:	add	x23, x23, #0x518
  40fb44:	cbz	w0, 40fc6c <ferror@plt+0xc69c>
  40fb48:	sbfiz	x0, x0, #4, #32
  40fb4c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40fb50:	ldr	x21, [x19, #584]
  40fb54:	add	x20, x23, #0x1d0
  40fb58:	mov	x25, #0x0                   	// #0
  40fb5c:	str	x0, [x19, #48]
  40fb60:	ldrb	w0, [x21]
  40fb64:	cbz	w0, 40fc6c <ferror@plt+0xc69c>
  40fb68:	ldrb	w0, [x21]
  40fb6c:	cmp	w0, #0x20
  40fb70:	b.eq	40fb7c <ferror@plt+0xc5ac>  // b.none
  40fb74:	cmp	w0, #0x9
  40fb78:	b.ne	40fb84 <ferror@plt+0xc5b4>  // b.any
  40fb7c:	add	x21, x21, #0x1
  40fb80:	b	40fb68 <ferror@plt+0xc598>
  40fb84:	cbz	w0, 40fc6c <ferror@plt+0xc69c>
  40fb88:	add	x24, x21, #0x1
  40fb8c:	ldrb	w0, [x24]
  40fb90:	cmp	w0, #0x9
  40fb94:	b.eq	40fba8 <ferror@plt+0xc5d8>  // b.none
  40fb98:	and	w0, w0, #0xffffffdf
  40fb9c:	cbz	w0, 40fba8 <ferror@plt+0xc5d8>
  40fba0:	add	x24, x24, #0x1
  40fba4:	b	40fb8c <ferror@plt+0xc5bc>
  40fba8:	ldp	x1, x0, [x20, #24]
  40fbac:	sub	x22, x24, x21
  40fbb0:	sub	x0, x0, x1
  40fbb4:	cmp	x22, x0
  40fbb8:	b.ls	40fbc8 <ferror@plt+0xc5f8>  // b.plast
  40fbbc:	mov	x1, x22
  40fbc0:	mov	x0, x20
  40fbc4:	bl	45c22c <_obstack_newchunk@@Base>
  40fbc8:	ldr	x0, [x20, #24]
  40fbcc:	mov	x1, x21
  40fbd0:	mov	x2, x22
  40fbd4:	bl	402cd0 <memcpy@plt>
  40fbd8:	ldp	x0, x1, [x20, #24]
  40fbdc:	add	x0, x0, x22
  40fbe0:	str	x0, [x20, #24]
  40fbe4:	cmp	x0, x1
  40fbe8:	b.ne	40fbf8 <ferror@plt+0xc628>  // b.any
  40fbec:	mov	x0, x20
  40fbf0:	mov	x1, #0x1                   	// #1
  40fbf4:	bl	45c22c <_obstack_newchunk@@Base>
  40fbf8:	ldr	x0, [x20, #24]
  40fbfc:	add	x1, x0, #0x1
  40fc00:	str	x1, [x20, #24]
  40fc04:	strb	wzr, [x0]
  40fc08:	ldr	x1, [x23, #48]
  40fc0c:	ldp	x3, x2, [x20, #16]
  40fc10:	add	x1, x1, x25
  40fc14:	cmp	x3, x2
  40fc18:	b.ne	40fc28 <ferror@plt+0xc658>  // b.any
  40fc1c:	ldrb	w0, [x20, #80]
  40fc20:	orr	w0, w0, #0x2
  40fc24:	strb	w0, [x20, #80]
  40fc28:	ldr	x0, [x20, #48]
  40fc2c:	add	x25, x25, #0x10
  40fc30:	ldr	x4, [x20, #32]
  40fc34:	add	x2, x2, x0
  40fc38:	bic	x0, x2, x0
  40fc3c:	ldr	x2, [x20, #8]
  40fc40:	sub	x5, x0, x2
  40fc44:	sub	x2, x4, x2
  40fc48:	cmp	x5, x2
  40fc4c:	csel	x0, x0, x4, ls  // ls = plast
  40fc50:	stp	x0, x0, [x20, #16]
  40fc54:	str	x3, [x1]
  40fc58:	str	w22, [x1, #8]
  40fc5c:	ldrb	w0, [x24]
  40fc60:	cbz	w0, 40fc6c <ferror@plt+0xc69c>
  40fc64:	add	x21, x24, #0x1
  40fc68:	b	40fb60 <ferror@plt+0xc590>
  40fc6c:	ldr	x1, [x19, #568]
  40fc70:	add	x22, x23, #0x288
  40fc74:	ldrb	w0, [x1]
  40fc78:	cbz	w0, 40fd54 <ferror@plt+0xc784>
  40fc7c:	cmp	w0, #0xa
  40fc80:	b.ne	40fc8c <ferror@plt+0xc6bc>  // b.any
  40fc84:	add	x1, x1, #0x1
  40fc88:	b	40fc74 <ferror@plt+0xc6a4>
  40fc8c:	mov	w0, #0x1                   	// #1
  40fc90:	b	40fca0 <ferror@plt+0xc6d0>
  40fc94:	cbnz	w0, 40fcc8 <ferror@plt+0xc6f8>
  40fc98:	add	x20, x1, #0x1
  40fc9c:	mov	x1, x20
  40fca0:	ldrb	w2, [x1]
  40fca4:	cmp	w2, #0x3b
  40fca8:	b.eq	40fd30 <ferror@plt+0xc760>  // b.none
  40fcac:	cbnz	w2, 40fc94 <ferror@plt+0xc6c4>
  40fcb0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40fcb4:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40fcb8:	ldr	x2, [x19, #568]
  40fcbc:	add	x1, x1, #0x85f
  40fcc0:	ldr	w0, [x0, #584]
  40fcc4:	bl	422d58 <ferror@plt+0x1f788>
  40fcc8:	mov	x20, x1
  40fccc:	ldrb	w0, [x20]
  40fcd0:	cmp	w0, #0x20
  40fcd4:	b.eq	40fcec <ferror@plt+0xc71c>  // b.none
  40fcd8:	cmp	w0, #0x3b
  40fcdc:	b.eq	40fcec <ferror@plt+0xc71c>  // b.none
  40fce0:	cbz	w0, 40fcb0 <ferror@plt+0xc6e0>
  40fce4:	add	x20, x20, #0x1
  40fce8:	b	40fccc <ferror@plt+0xc6fc>
  40fcec:	cmp	w2, #0x21
  40fcf0:	b.ne	40fd28 <ferror@plt+0xc758>  // b.any
  40fcf4:	add	x1, x1, #0x1
  40fcf8:	mov	w21, #0x1                   	// #1
  40fcfc:	sub	w2, w20, w1
  40fd00:	mov	x0, x22
  40fd04:	bl	409164 <ferror@plt+0x5b94>
  40fd08:	cbz	w21, 40fd14 <ferror@plt+0xc744>
  40fd0c:	cmp	w0, #0x0
  40fd10:	cset	w0, eq  // eq = none
  40fd14:	ldrb	w1, [x20]
  40fd18:	cmp	w1, #0x20
  40fd1c:	b.ne	40fc9c <ferror@plt+0xc6cc>  // b.any
  40fd20:	add	x20, x20, #0x1
  40fd24:	b	40fc9c <ferror@plt+0xc6cc>
  40fd28:	mov	w21, #0x0                   	// #0
  40fd2c:	b	40fcfc <ferror@plt+0xc72c>
  40fd30:	cbz	w0, 40fc84 <ferror@plt+0xc6b4>
  40fd34:	mov	sp, x29
  40fd38:	ldp	x19, x20, [sp, #16]
  40fd3c:	ldp	x21, x22, [sp, #32]
  40fd40:	ldp	x23, x24, [sp, #48]
  40fd44:	ldp	x25, x26, [sp, #64]
  40fd48:	ldp	x27, x28, [sp, #80]
  40fd4c:	ldp	x29, x30, [sp], #112
  40fd50:	ret
  40fd54:	ldr	x1, [x19, #576]
  40fd58:	ldr	x20, [x19, #552]
  40fd5c:	ldrb	w0, [x1]
  40fd60:	cbz	w0, 40fd74 <ferror@plt+0xc7a4>
  40fd64:	mov	x0, x20
  40fd68:	mov	x2, #0x0                   	// #0
  40fd6c:	bl	45a668 <ferror@plt+0x57098>
  40fd70:	mov	x20, x0
  40fd74:	add	x25, x23, #0x288
  40fd78:	mov	w26, #0x1                   	// #1
  40fd7c:	ldrb	w0, [x20]
  40fd80:	cbz	w0, 40ffa0 <ferror@plt+0xc9d0>
  40fd84:	cmp	w0, #0xa
  40fd88:	b.ne	40fd94 <ferror@plt+0xc7c4>  // b.any
  40fd8c:	add	x20, x20, #0x1
  40fd90:	b	40fd7c <ferror@plt+0xc7ac>
  40fd94:	mov	x21, x20
  40fd98:	mov	x22, x21
  40fd9c:	ldrb	w0, [x22], #1
  40fda0:	cmp	w0, #0x20
  40fda4:	b.eq	40fdd0 <ferror@plt+0xc800>  // b.none
  40fda8:	cbnz	w0, 40fdc8 <ferror@plt+0xc7f8>
  40fdac:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  40fdb0:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  40fdb4:	ldr	x2, [x23, #552]
  40fdb8:	add	x1, x1, #0x882
  40fdbc:	ldr	w0, [x0, #584]
  40fdc0:	ldr	x3, [x23, #576]
  40fdc4:	bl	422d58 <ferror@plt+0x1f788>
  40fdc8:	mov	x21, x22
  40fdcc:	b	40fd98 <ferror@plt+0xc7c8>
  40fdd0:	mov	w27, #0x1                   	// #1
  40fdd4:	sub	x21, x21, x20
  40fdd8:	mov	w24, w27
  40fddc:	ldrb	w0, [x22]
  40fde0:	cmp	w0, #0x3b
  40fde4:	b.eq	40fe9c <ferror@plt+0xc8cc>  // b.none
  40fde8:	cbz	w0, 40fdac <ferror@plt+0xc7dc>
  40fdec:	cbnz	w24, 40fdfc <ferror@plt+0xc82c>
  40fdf0:	add	x28, x22, #0x1
  40fdf4:	mov	x22, x28
  40fdf8:	b	40fddc <ferror@plt+0xc80c>
  40fdfc:	mov	x28, x22
  40fe00:	ldrb	w1, [x28]
  40fe04:	cmp	w1, #0x20
  40fe08:	b.eq	40fe20 <ferror@plt+0xc850>  // b.none
  40fe0c:	cmp	w1, #0x3b
  40fe10:	b.eq	40fe20 <ferror@plt+0xc850>  // b.none
  40fe14:	cbz	w1, 40fdac <ferror@plt+0xc7dc>
  40fe18:	add	x28, x28, #0x1
  40fe1c:	b	40fe00 <ferror@plt+0xc830>
  40fe20:	cmp	w0, #0x21
  40fe24:	b.ne	40fe94 <ferror@plt+0xc8c4>  // b.any
  40fe28:	add	x22, x22, #0x1
  40fe2c:	mov	w5, #0x1                   	// #1
  40fe30:	sub	x4, x28, x22
  40fe34:	mov	x1, x22
  40fe38:	mov	w2, w4
  40fe3c:	mov	x0, x25
  40fe40:	str	w5, [x29, #100]
  40fe44:	str	x4, [x29, #104]
  40fe48:	bl	409164 <ferror@plt+0x5b94>
  40fe4c:	ldr	w5, [x29, #100]
  40fe50:	mov	w24, w0
  40fe54:	ldr	x4, [x29, #104]
  40fe58:	cbz	w5, 40fe64 <ferror@plt+0xc894>
  40fe5c:	cmp	w0, #0x0
  40fe60:	cset	w24, eq  // eq = none
  40fe64:	cmp	w24, #0x0
  40fe68:	mov	w1, w4
  40fe6c:	csel	w27, w27, wzr, ne  // ne = any
  40fe70:	mov	x0, x22
  40fe74:	bl	404e4c <ferror@plt+0x187c>
  40fe78:	cmp	w0, #0x0
  40fe7c:	ldrb	w0, [x28]
  40fe80:	csinc	w24, w24, wzr, eq  // eq = none
  40fe84:	cmp	w0, #0x20
  40fe88:	b.ne	40fdf4 <ferror@plt+0xc824>  // b.any
  40fe8c:	add	x28, x28, #0x1
  40fe90:	b	40fdf4 <ferror@plt+0xc824>
  40fe94:	mov	w5, #0x0                   	// #0
  40fe98:	b	40fe30 <ferror@plt+0xc860>
  40fe9c:	cmp	w24, #0x0
  40fea0:	csel	w0, w26, wzr, ne  // ne = any
  40fea4:	cbz	w0, 40fef8 <ferror@plt+0xc928>
  40fea8:	cmp	w21, #0x1
  40feac:	b.ne	40febc <ferror@plt+0xc8ec>  // b.any
  40feb0:	ldrb	w0, [x20]
  40feb4:	cmp	w0, #0x2e
  40feb8:	b.eq	40fef4 <ferror@plt+0xc924>  // b.none
  40febc:	and	x28, x21, #0xffffffff
  40fec0:	add	w0, w21, #0x1
  40fec4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40fec8:	mov	x24, x0
  40fecc:	mov	x2, x28
  40fed0:	mov	x1, x20
  40fed4:	bl	403490 <strncpy@plt>
  40fed8:	strb	wzr, [x24, x28]
  40fedc:	mov	x0, x24
  40fee0:	mov	w1, #0x3a                  	// #58
  40fee4:	bl	4032f0 <strchr@plt>
  40fee8:	cbz	x0, 40fef0 <ferror@plt+0xc920>
  40feec:	strb	wzr, [x0]
  40fef0:	str	x24, [x23, #72]
  40fef4:	mov	w26, #0x0                   	// #0
  40fef8:	cbz	w27, 410004 <ferror@plt+0xca34>
  40fefc:	add	x21, x20, w21, uxtw
  40ff00:	cmp	x21, x20
  40ff04:	b.ls	410004 <ferror@plt+0xca34>  // b.plast
  40ff08:	mov	x24, x20
  40ff0c:	ldrb	w0, [x24], #1
  40ff10:	cmp	w0, #0x3a
  40ff14:	b.ne	40ff38 <ferror@plt+0xc968>  // b.any
  40ff18:	mov	x22, x24
  40ff1c:	ldrb	w0, [x22]
  40ff20:	cmp	x21, x22
  40ff24:	b.ls	40ff40 <ferror@plt+0xc970>  // b.plast
  40ff28:	cmp	w0, #0x3a
  40ff2c:	b.eq	40ffd4 <ferror@plt+0xca04>  // b.none
  40ff30:	add	x22, x22, #0x1
  40ff34:	b	40ff1c <ferror@plt+0xc94c>
  40ff38:	mov	x20, x24
  40ff3c:	b	40ff00 <ferror@plt+0xc930>
  40ff40:	cmp	w0, #0x3a
  40ff44:	csel	x0, x21, x22, ne  // ne = any
  40ff48:	sub	x20, x0, x20
  40ff4c:	cmp	x20, #0x1
  40ff50:	b.ne	40ffdc <ferror@plt+0xca0c>  // b.any
  40ff54:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40ff58:	add	x0, x0, #0x66b
  40ff5c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  40ff60:	str	x0, [x23, #88]
  40ff64:	cmp	x21, x22
  40ff68:	b.ls	40ffa0 <ferror@plt+0xc9d0>  // b.plast
  40ff6c:	ldrb	w0, [x22]
  40ff70:	cmp	w0, #0x3a
  40ff74:	b.ne	40ffa0 <ferror@plt+0xc9d0>  // b.any
  40ff78:	sub	x21, x21, x22
  40ff7c:	mov	x0, x21
  40ff80:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40ff84:	mov	x20, x0
  40ff88:	sub	x2, x21, #0x1
  40ff8c:	add	x21, x20, x21
  40ff90:	add	x1, x22, #0x1
  40ff94:	bl	402cd0 <memcpy@plt>
  40ff98:	str	x20, [x23, #80]
  40ff9c:	sturb	wzr, [x21, #-1]
  40ffa0:	ldr	x0, [x19, #72]
  40ffa4:	ldr	x20, [x19, #88]
  40ffa8:	cbnz	x0, 41000c <ferror@plt+0xca3c>
  40ffac:	cbz	x20, 40fd34 <ferror@plt+0xc764>
  40ffb0:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  40ffb4:	mov	x0, x20
  40ffb8:	add	x1, x1, #0x66b
  40ffbc:	bl	403220 <strcmp@plt>
  40ffc0:	cbnz	w0, 40fd34 <ferror@plt+0xc764>
  40ffc4:	mov	x0, x20
  40ffc8:	bl	4032a0 <free@plt>
  40ffcc:	str	xzr, [x19, #88]
  40ffd0:	b	40fd34 <ferror@plt+0xc764>
  40ffd4:	mov	x0, x22
  40ffd8:	b	40ff48 <ferror@plt+0xc978>
  40ffdc:	mov	x0, x20
  40ffe0:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  40ffe4:	mov	x25, x0
  40ffe8:	sub	x2, x20, #0x1
  40ffec:	add	x20, x25, x20
  40fff0:	mov	x1, x24
  40fff4:	bl	402cd0 <memcpy@plt>
  40fff8:	str	x25, [x23, #88]
  40fffc:	sturb	wzr, [x20, #-1]
  410000:	b	40ff64 <ferror@plt+0xc994>
  410004:	add	x20, x22, #0x1
  410008:	b	40fd7c <ferror@plt+0xc7ac>
  41000c:	cbnz	x20, 40fd34 <ferror@plt+0xc764>
  410010:	str	x0, [x19, #88]
  410014:	b	40fd34 <ferror@plt+0xc764>
  410018:	tst	w2, #0xff
  41001c:	b.eq	410038 <ferror@plt+0xca68>  // b.none
  410020:	cbz	x0, 410030 <ferror@plt+0xca60>
  410024:	ldr	w0, [x0, #4]
  410028:	add	w0, w0, w1
  41002c:	ret
  410030:	mov	w0, #0x0                   	// #0
  410034:	b	410028 <ferror@plt+0xca58>
  410038:	cbnz	x0, 41004c <ferror@plt+0xca7c>
  41003c:	cmp	w1, #0x4
  410040:	mov	w0, #0x4                   	// #4
  410044:	csel	w0, w1, w0, cs  // cs = hs, nlast
  410048:	b	41002c <ferror@plt+0xca5c>
  41004c:	ldr	w2, [x0, #4]
  410050:	ldr	w0, [x0]
  410054:	add	w1, w1, w2
  410058:	and	w0, w0, #0x7fffffff
  41005c:	b	41e438 <ferror@plt+0x1ae68>
  410060:	stp	x29, x30, [sp, #-80]!
  410064:	mov	x29, sp
  410068:	stp	x21, x22, [sp, #32]
  41006c:	ldr	x22, [x0]
  410070:	stp	x19, x20, [sp, #16]
  410074:	mov	x20, x0
  410078:	stp	x23, x24, [sp, #48]
  41007c:	mov	x23, x1
  410080:	str	x25, [sp, #64]
  410084:	cbz	x22, 410118 <ferror@plt+0xcb48>
  410088:	ldp	w0, w21, [x22]
  41008c:	ubfx	x0, x0, #0, #31
  410090:	cmp	w0, w21
  410094:	b.ne	410144 <ferror@plt+0xcb74>  // b.any
  410098:	ldrsb	w0, [x22, #3]
  41009c:	tbz	w0, #31, 410118 <ferror@plt+0xcb48>
  4100a0:	add	w2, w21, #0x1
  4100a4:	mov	w24, #0x1                   	// #1
  4100a8:	str	xzr, [x20]
  4100ac:	ldr	x0, [x20]
  4100b0:	cbz	x0, 410128 <ferror@plt+0xcb58>
  4100b4:	ldr	w1, [x0, #4]
  4100b8:	ldr	w0, [x0]
  4100bc:	add	w1, w2, w1
  4100c0:	and	w0, w0, #0x7fffffff
  4100c4:	bl	41e438 <ferror@plt+0x1ae68>
  4100c8:	mov	w19, w0
  4100cc:	ldr	x0, [x20]
  4100d0:	ubfiz	x1, x19, #3, #32
  4100d4:	add	x1, x1, #0x8
  4100d8:	cbz	x0, 410138 <ferror@plt+0xcb68>
  4100dc:	ldr	w25, [x0, #4]
  4100e0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4100e4:	str	x0, [x20]
  4100e8:	and	w2, w19, #0x7fffffff
  4100ec:	stp	w2, w25, [x0]
  4100f0:	cbz	w24, 410144 <ferror@plt+0xcb74>
  4100f4:	mov	w3, w21
  4100f8:	mov	x1, #0x0                   	// #0
  4100fc:	add	x2, x1, #0x1
  410100:	cmp	x3, x1
  410104:	b.eq	410140 <ferror@plt+0xcb70>  // b.none
  410108:	ldr	x1, [x22, x2, lsl #3]
  41010c:	str	x1, [x0, x2, lsl #3]
  410110:	mov	x1, x2
  410114:	b	4100fc <ferror@plt+0xcb2c>
  410118:	mov	w24, #0x0                   	// #0
  41011c:	mov	w21, #0x0                   	// #0
  410120:	mov	w2, #0x1                   	// #1
  410124:	b	4100ac <ferror@plt+0xcadc>
  410128:	cmp	w2, #0x4
  41012c:	mov	w19, #0x4                   	// #4
  410130:	csel	w19, w2, w19, cs  // cs = hs, nlast
  410134:	b	4100cc <ferror@plt+0xcafc>
  410138:	mov	w25, #0x0                   	// #0
  41013c:	b	4100e0 <ferror@plt+0xcb10>
  410140:	str	w21, [x0, #4]
  410144:	ldr	x0, [x20]
  410148:	ldr	x3, [x23]
  41014c:	ldr	w1, [x0, #4]
  410150:	ldp	x19, x20, [sp, #16]
  410154:	add	w2, w1, #0x1
  410158:	ldp	x21, x22, [sp, #32]
  41015c:	ldp	x23, x24, [sp, #48]
  410160:	ldr	x25, [sp, #64]
  410164:	str	w2, [x0, #4]
  410168:	add	x2, x0, w1, uxtw #3
  41016c:	ubfiz	x1, x1, #3, #32
  410170:	add	x1, x1, #0x8
  410174:	add	x0, x0, x1
  410178:	str	x3, [x2, #8]
  41017c:	ldp	x29, x30, [sp], #80
  410180:	ret
  410184:	stp	x29, x30, [sp, #-64]!
  410188:	and	w2, w2, #0xff
  41018c:	mov	x29, sp
  410190:	stp	x19, x20, [sp, #16]
  410194:	ldr	x19, [x0]
  410198:	stp	x21, x22, [sp, #32]
  41019c:	mov	x21, x0
  4101a0:	stp	x23, x24, [sp, #48]
  4101a4:	cbz	x19, 4101c4 <ferror@plt+0xcbf4>
  4101a8:	ldp	w0, w22, [x19]
  4101ac:	ubfx	x0, x0, #0, #31
  4101b0:	sub	w0, w0, w22
  4101b4:	cmp	w1, w0
  4101b8:	b.hi	4101d4 <ferror@plt+0xcc04>  // b.pmore
  4101bc:	mov	w20, #0x0                   	// #0
  4101c0:	b	410254 <ferror@plt+0xcc84>
  4101c4:	mov	w20, #0x0                   	// #0
  4101c8:	cbz	w1, 410254 <ferror@plt+0xcc84>
  4101cc:	mov	w22, #0x0                   	// #0
  4101d0:	b	4101e8 <ferror@plt+0xcc18>
  4101d4:	ldrsb	w0, [x19, #3]
  4101d8:	tbz	w0, #31, 410240 <ferror@plt+0xcc70>
  4101dc:	add	w1, w1, w22
  4101e0:	mov	w20, #0x1                   	// #1
  4101e4:	str	xzr, [x21]
  4101e8:	ldr	x0, [x21]
  4101ec:	bl	410018 <ferror@plt+0xca48>
  4101f0:	mov	w23, w0
  4101f4:	mov	x1, #0x8                   	// #8
  4101f8:	add	x1, x1, w0, uxtw #4
  4101fc:	ldr	x0, [x21]
  410200:	cbz	x0, 410248 <ferror@plt+0xcc78>
  410204:	ldr	w24, [x0, #4]
  410208:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  41020c:	str	x0, [x21]
  410210:	and	w23, w23, #0x7fffffff
  410214:	stp	w23, w24, [x0]
  410218:	mov	x1, x0
  41021c:	cbz	w20, 41026c <ferror@plt+0xcc9c>
  410220:	add	x2, x0, #0x8
  410224:	add	x19, x19, #0x8
  410228:	mov	w0, w22
  41022c:	cbz	w0, 410250 <ferror@plt+0xcc80>
  410230:	ldp	x4, x5, [x19], #16
  410234:	sub	w0, w0, #0x1
  410238:	stp	x4, x5, [x2], #16
  41023c:	b	41022c <ferror@plt+0xcc5c>
  410240:	mov	w20, #0x0                   	// #0
  410244:	b	4101cc <ferror@plt+0xcbfc>
  410248:	mov	w24, #0x0                   	// #0
  41024c:	b	410208 <ferror@plt+0xcc38>
  410250:	str	w22, [x1, #4]
  410254:	mov	w0, w20
  410258:	ldp	x19, x20, [sp, #16]
  41025c:	ldp	x21, x22, [sp, #32]
  410260:	ldp	x23, x24, [sp, #48]
  410264:	ldp	x29, x30, [sp], #64
  410268:	ret
  41026c:	mov	w20, #0x1                   	// #1
  410270:	b	410254 <ferror@plt+0xcc84>
  410274:	stp	x29, x30, [sp, #-64]!
  410278:	and	w2, w2, #0xff
  41027c:	mov	x29, sp
  410280:	stp	x23, x24, [sp, #48]
  410284:	ldr	x23, [x0]
  410288:	stp	x19, x20, [sp, #16]
  41028c:	mov	x20, x0
  410290:	stp	x21, x22, [sp, #32]
  410294:	cbz	x23, 4102b4 <ferror@plt+0xcce4>
  410298:	ldp	w0, w21, [x23]
  41029c:	ubfx	x0, x0, #0, #31
  4102a0:	sub	w0, w0, w21
  4102a4:	cmp	w1, w0
  4102a8:	b.hi	4102c4 <ferror@plt+0xccf4>  // b.pmore
  4102ac:	mov	w19, #0x0                   	// #0
  4102b0:	b	410348 <ferror@plt+0xcd78>
  4102b4:	mov	w19, #0x0                   	// #0
  4102b8:	cbz	w1, 410348 <ferror@plt+0xcd78>
  4102bc:	mov	w21, #0x0                   	// #0
  4102c0:	b	4102d8 <ferror@plt+0xcd08>
  4102c4:	ldrsb	w0, [x23, #3]
  4102c8:	tbz	w0, #31, 410334 <ferror@plt+0xcd64>
  4102cc:	add	w1, w1, w21
  4102d0:	mov	w19, #0x1                   	// #1
  4102d4:	str	xzr, [x20]
  4102d8:	ldr	x0, [x20]
  4102dc:	bl	410018 <ferror@plt+0xca48>
  4102e0:	mov	w22, w0
  4102e4:	ldr	x0, [x20]
  4102e8:	ubfiz	x1, x22, #3, #32
  4102ec:	add	x1, x1, #0x8
  4102f0:	cbz	x0, 41033c <ferror@plt+0xcd6c>
  4102f4:	ldr	w24, [x0, #4]
  4102f8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4102fc:	str	x0, [x20]
  410300:	and	w22, w22, #0x7fffffff
  410304:	stp	w22, w24, [x0]
  410308:	mov	x1, x0
  41030c:	cbz	w19, 410360 <ferror@plt+0xcd90>
  410310:	mov	w3, w21
  410314:	mov	x0, #0x0                   	// #0
  410318:	add	x2, x0, #0x1
  41031c:	cmp	x0, x3
  410320:	b.eq	410344 <ferror@plt+0xcd74>  // b.none
  410324:	ldr	x0, [x23, x2, lsl #3]
  410328:	str	x0, [x1, x2, lsl #3]
  41032c:	mov	x0, x2
  410330:	b	410318 <ferror@plt+0xcd48>
  410334:	mov	w19, #0x0                   	// #0
  410338:	b	4102bc <ferror@plt+0xccec>
  41033c:	mov	w24, #0x0                   	// #0
  410340:	b	4102f8 <ferror@plt+0xcd28>
  410344:	str	w21, [x1, #4]
  410348:	mov	w0, w19
  41034c:	ldp	x19, x20, [sp, #16]
  410350:	ldp	x21, x22, [sp, #32]
  410354:	ldp	x23, x24, [sp, #48]
  410358:	ldp	x29, x30, [sp], #64
  41035c:	ret
  410360:	mov	w19, #0x1                   	// #1
  410364:	b	410348 <ferror@plt+0xcd78>
  410368:	stp	x29, x30, [sp, #-32]!
  41036c:	mov	w2, #0x0                   	// #0
  410370:	mov	x29, sp
  410374:	stp	x19, x20, [sp, #16]
  410378:	mov	x20, x0
  41037c:	mov	x19, x1
  410380:	mov	w1, #0x1                   	// #1
  410384:	bl	410274 <ferror@plt+0xcca4>
  410388:	ldr	x0, [x20]
  41038c:	ldr	x3, [x19]
  410390:	ldr	w1, [x0, #4]
  410394:	ldp	x19, x20, [sp, #16]
  410398:	add	w2, w1, #0x1
  41039c:	str	w2, [x0, #4]
  4103a0:	add	x2, x0, w1, uxtw #3
  4103a4:	ubfiz	x1, x1, #3, #32
  4103a8:	add	x1, x1, #0x8
  4103ac:	str	x3, [x2, #8]
  4103b0:	add	x0, x0, x1
  4103b4:	ldp	x29, x30, [sp], #32
  4103b8:	ret
  4103bc:	ret
  4103c0:	cbz	x1, 4103e4 <ferror@plt+0xce14>
  4103c4:	stp	x29, x30, [sp, #-16]!
  4103c8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4103cc:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4103d0:	mov	x29, sp
  4103d4:	add	x2, x2, #0x2d8
  4103d8:	add	x0, x0, #0x2eb
  4103dc:	mov	w1, #0x2f                  	// #47
  4103e0:	bl	403600 <ferror@plt+0x30>
  4103e4:	b	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4103e8:	cbz	x1, 41040c <ferror@plt+0xce3c>
  4103ec:	stp	x29, x30, [sp, #-16]!
  4103f0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4103f4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4103f8:	mov	x29, sp
  4103fc:	add	x2, x2, #0x300
  410400:	add	x0, x0, #0x2eb
  410404:	mov	w1, #0x37                  	// #55
  410408:	bl	403600 <ferror@plt+0x30>
  41040c:	mov	x1, #0x1                   	// #1
  410410:	b	45d6f0 <_obstack_memory_used@@Base+0x1300>
  410414:	b	45d740 <_obstack_memory_used@@Base+0x1350>
  410418:	b	4032a0 <free@plt>
  41041c:	ret
  410420:	stp	x29, x30, [sp, #-272]!
  410424:	mov	x29, sp
  410428:	stp	x0, x1, [sp, #144]
  41042c:	mov	x0, x1
  410430:	mov	x1, #0x4                   	// #4
  410434:	stp	x19, x20, [sp, #16]
  410438:	ldr	w0, [x0]
  41043c:	str	w0, [sp, #112]
  410440:	mov	w0, w0
  410444:	stp	x21, x22, [sp, #32]
  410448:	add	w0, w0, #0x1
  41044c:	str	w0, [sp, #168]
  410450:	mov	w22, #0x0                   	// #0
  410454:	ldr	x0, [sp, #144]
  410458:	stp	x23, x24, [sp, #48]
  41045c:	mov	w24, #0x0                   	// #0
  410460:	stp	x25, x26, [sp, #64]
  410464:	mov	w26, #0x0                   	// #0
  410468:	ldr	x0, [x0]
  41046c:	str	x0, [sp, #136]
  410470:	ldr	w0, [x2]
  410474:	str	w0, [sp, #116]
  410478:	ldr	w0, [sp, #112]
  41047c:	stp	x27, x28, [sp, #80]
  410480:	adrp	x28, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  410484:	adrp	x27, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  410488:	str	x2, [sp, #160]
  41048c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  410490:	add	x0, x0, #0x4
  410494:	mov	x19, x0
  410498:	str	x0, [sp, #120]
  41049c:	ldr	x0, [sp, #136]
  4104a0:	str	wzr, [sp, #132]
  4104a4:	add	x25, x0, #0x58
  4104a8:	mov	w0, #0x1                   	// #1
  4104ac:	str	w0, [sp, #96]
  4104b0:	mov	x21, x25
  4104b4:	str	w0, [sp, #108]
  4104b8:	str	w0, [sp, #128]
  4104bc:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4104c0:	add	x0, x0, #0x325
  4104c4:	str	x0, [sp, #176]
  4104c8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4104cc:	add	x0, x0, #0x333
  4104d0:	str	x0, [sp, #184]
  4104d4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4104d8:	add	x0, x0, #0x31b
  4104dc:	str	x0, [sp, #192]
  4104e0:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4104e4:	add	x0, x0, #0x329
  4104e8:	str	x0, [sp, #200]
  4104ec:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  4104f0:	add	x0, x0, #0x2c9
  4104f4:	str	x0, [sp, #208]
  4104f8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4104fc:	add	x0, x0, #0x852
  410500:	str	x0, [sp, #216]
  410504:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  410508:	add	x0, x0, #0x2d1
  41050c:	str	x0, [sp, #224]
  410510:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  410514:	add	x0, x0, #0x2e9
  410518:	str	x0, [sp, #232]
  41051c:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  410520:	add	x0, x0, #0x2d5
  410524:	str	x0, [sp, #240]
  410528:	add	x0, x28, #0x2da
  41052c:	str	x0, [sp, #248]
  410530:	add	x0, x27, #0x2df
  410534:	str	x0, [sp, #256]
  410538:	adrp	x0, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  41053c:	add	x0, x0, #0x2e4
  410540:	str	x0, [sp, #264]
  410544:	ldr	w0, [sp, #96]
  410548:	ldr	w1, [sp, #112]
  41054c:	cmp	w0, w1
  410550:	b.cs	4108a4 <ferror@plt+0xd2d4>  // b.hs, b.nlast
  410554:	ldr	w0, [x21, #80]
  410558:	tbnz	w0, #1, 410594 <ferror@plt+0xcfc4>
  41055c:	ldr	x1, [x21]
  410560:	ldr	x27, [x21, #16]
  410564:	cmp	x1, #0x547
  410568:	b.eq	410870 <ferror@plt+0xd2a0>  // b.none
  41056c:	b.hi	410614 <ferror@plt+0xd044>  // b.pmore
  410570:	cmp	x1, #0x1e8
  410574:	b.eq	41087c <ferror@plt+0xd2ac>  // b.none
  410578:	b.hi	4105d4 <ferror@plt+0xd004>  // b.pmore
  41057c:	cmp	x1, #0x126
  410580:	b.eq	4105c8 <ferror@plt+0xcff8>  // b.none
  410584:	b.hi	4105c0 <ferror@plt+0xcff0>  // b.pmore
  410588:	sub	x1, x1, #0x71
  41058c:	cmp	x1, #0x1b
  410590:	b.ls	4105ac <ferror@plt+0xcfdc>  // b.plast
  410594:	ldr	w0, [sp, #96]
  410598:	add	x19, x19, #0x4
  41059c:	add	x21, x21, #0x58
  4105a0:	add	w0, w0, #0x1
  4105a4:	str	w0, [sp, #96]
  4105a8:	b	410544 <ferror@plt+0xcf74>
  4105ac:	mov	x0, #0x1                   	// #1
  4105b0:	lsl	x1, x0, x1
  4105b4:	mov	x0, #0x1101                	// #4353
  4105b8:	movk	x0, #0x800, lsl #16
  4105bc:	b	410608 <ferror@plt+0xd038>
  4105c0:	cmp	x1, #0x1e0
  4105c4:	b.ne	410594 <ferror@plt+0xcfc4>  // b.any
  4105c8:	cmp	w26, #0x0
  4105cc:	csinc	w26, w26, wzr, ne  // ne = any
  4105d0:	b	410594 <ferror@plt+0xcfc4>
  4105d4:	cmp	x1, #0x4f8
  4105d8:	b.eq	4106fc <ferror@plt+0xd12c>  // b.none
  4105dc:	b.hi	4105ec <ferror@plt+0xd01c>  // b.pmore
  4105e0:	cmp	x1, #0x445
  4105e4:	csinv	w26, w26, wzr, ne  // ne = any
  4105e8:	b	410594 <ferror@plt+0xcfc4>
  4105ec:	sub	x1, x1, #0x51e
  4105f0:	cmp	x1, #0x1e
  4105f4:	b.hi	410594 <ferror@plt+0xcfc4>  // b.pmore
  4105f8:	mov	x0, #0x1                   	// #1
  4105fc:	lsl	x1, x0, x1
  410600:	mov	x0, #0x41                  	// #65
  410604:	movk	x0, #0x4000, lsl #16
  410608:	tst	x1, x0
  41060c:	csinv	w26, w26, wzr, eq  // eq = none
  410610:	b	410594 <ferror@plt+0xcfc4>
  410614:	cmp	x1, #0x593
  410618:	b.eq	41075c <ferror@plt+0xd18c>  // b.none
  41061c:	b.hi	410648 <ferror@plt+0xd078>  // b.pmore
  410620:	cmp	x1, #0x549
  410624:	b.eq	410884 <ferror@plt+0xd2b4>  // b.none
  410628:	cmp	x1, #0x550
  41062c:	b.ne	410594 <ferror@plt+0xcfc4>  // b.any
  410630:	cmn	w26, #0x1
  410634:	b.eq	41063c <ferror@plt+0xd06c>  // b.none
  410638:	mov	w26, #0x2                   	// #2
  41063c:	ldr	w0, [x19]
  410640:	orr	w0, w0, #0x20
  410644:	b	410734 <ferror@plt+0xd164>
  410648:	cmp	x1, #0x59a
  41064c:	b.ne	410594 <ferror@plt+0xcfc4>  // b.any
  410650:	ldrb	w0, [x27]
  410654:	cbz	w0, 410594 <ferror@plt+0xcfc4>
  410658:	ldrb	w0, [x27, #1]
  41065c:	cbz	w0, 410594 <ferror@plt+0xcfc4>
  410660:	cbnz	w22, 410894 <ferror@plt+0xd2c4>
  410664:	mov	x0, x27
  410668:	bl	402d50 <strlen@plt>
  41066c:	mov	x28, x0
  410670:	cmp	w0, #0x2
  410674:	b.le	410bf8 <ferror@plt+0xd628>
  410678:	add	x1, x27, w0, sxtw
  41067c:	sxtw	x20, w0
  410680:	ldurb	w0, [x1, #-1]
  410684:	cmp	w0, #0x63
  410688:	b.eq	41069c <ferror@plt+0xd0cc>  // b.none
  41068c:	sub	w0, w0, #0x68
  410690:	and	w0, w0, #0xff
  410694:	cmp	w0, #0x1
  410698:	b.hi	4106b8 <ferror@plt+0xd0e8>  // b.pmore
  41069c:	ldurb	w0, [x1, #-2]
  4106a0:	cmp	w0, #0x2e
  4106a4:	b.ne	4106b8 <ferror@plt+0xd0e8>  // b.any
  4106a8:	ldr	w0, [x19]
  4106ac:	add	w24, w24, #0x2
  4106b0:	orr	w0, w0, #0x2
  4106b4:	str	w0, [x19]
  4106b8:	cbnz	w26, 410594 <ferror@plt+0xcfc4>
  4106bc:	ldr	x1, [sp, #208]
  4106c0:	sub	x23, x20, #0x2
  4106c4:	add	x23, x27, x23
  4106c8:	mov	x0, x23
  4106cc:	bl	403220 <strcmp@plt>
  4106d0:	cbz	w0, 410894 <ferror@plt+0xd2c4>
  4106d4:	ldr	x1, [sp, #216]
  4106d8:	mov	x0, x23
  4106dc:	bl	403220 <strcmp@plt>
  4106e0:	cbz	w0, 410894 <ferror@plt+0xd2c4>
  4106e4:	cmp	w28, #0x4
  4106e8:	b.gt	4107ac <ferror@plt+0xd1dc>
  4106ec:	cmp	w28, #0x3
  4106f0:	b.ne	4107c8 <ferror@plt+0xd1f8>  // b.any
  4106f4:	mov	w26, #0x1                   	// #1
  4106f8:	b	410594 <ferror@plt+0xcfc4>
  4106fc:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  410700:	mov	x0, x27
  410704:	add	x1, x1, #0x4c6
  410708:	bl	403220 <strcmp@plt>
  41070c:	cbnz	w0, 410724 <ferror@plt+0xd154>
  410710:	ldr	w0, [x19]
  410714:	str	wzr, [sp, #128]
  410718:	orr	w0, w0, #0x4
  41071c:	str	w0, [x19]
  410720:	b	410594 <ferror@plt+0xcfc4>
  410724:	ldrb	w0, [x27]
  410728:	cbnz	w0, 41073c <ferror@plt+0xd16c>
  41072c:	ldr	w0, [x19]
  410730:	orr	w0, w0, #0x8
  410734:	str	w0, [x19]
  410738:	b	410594 <ferror@plt+0xcfc4>
  41073c:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  410740:	mov	x0, x27
  410744:	add	x1, x1, #0x4ec
  410748:	bl	403220 <strcmp@plt>
  41074c:	cbnz	w0, 4105c8 <ferror@plt+0xcff8>
  410750:	ldr	w0, [x19]
  410754:	orr	w0, w0, #0x10
  410758:	b	410734 <ferror@plt+0xd164>
  41075c:	cbnz	w26, 4107a4 <ferror@plt+0xd1d4>
  410760:	ldr	x1, [sp, #176]
  410764:	mov	x0, x27
  410768:	bl	403220 <strcmp@plt>
  41076c:	cbz	w0, 41088c <ferror@plt+0xd2bc>
  410770:	ldr	x1, [sp, #184]
  410774:	mov	x0, x27
  410778:	bl	403220 <strcmp@plt>
  41077c:	cbz	w0, 41088c <ferror@plt+0xd2bc>
  410780:	ldr	x1, [sp, #192]
  410784:	mov	x0, x27
  410788:	bl	403220 <strcmp@plt>
  41078c:	cbz	w0, 41088c <ferror@plt+0xd2bc>
  410790:	ldr	x1, [sp, #200]
  410794:	mov	x0, x27
  410798:	bl	403220 <strcmp@plt>
  41079c:	cmp	w0, #0x0
  4107a0:	cset	w26, eq  // eq = none
  4107a4:	mov	w22, #0x1                   	// #1
  4107a8:	b	410594 <ferror@plt+0xcfc4>
  4107ac:	sub	x0, x20, #0x4
  4107b0:	adrp	x1, 47a000 <_obstack_memory_used@@Base+0x1dc10>
  4107b4:	add	x0, x27, x0
  4107b8:	add	x1, x1, #0x2cc
  4107bc:	bl	403220 <strcmp@plt>
  4107c0:	mov	w22, w0
  4107c4:	cbz	w0, 41089c <ferror@plt+0xd2cc>
  4107c8:	ldr	x1, [sp, #224]
  4107cc:	sub	x23, x20, #0x3
  4107d0:	add	x23, x27, x23
  4107d4:	mov	x0, x23
  4107d8:	bl	403220 <strcmp@plt>
  4107dc:	mov	w22, w0
  4107e0:	cbz	w0, 41089c <ferror@plt+0xd2cc>
  4107e4:	cmp	w28, #0x4
  4107e8:	b.gt	4107fc <ferror@plt+0xd22c>
  4107ec:	cmp	w28, #0x3
  4107f0:	b.ne	410854 <ferror@plt+0xd284>  // b.any
  4107f4:	mov	w22, #0x0                   	// #0
  4107f8:	b	4106f4 <ferror@plt+0xd124>
  4107fc:	ldr	x1, [sp, #240]
  410800:	sub	x20, x20, #0x4
  410804:	add	x20, x27, x20
  410808:	mov	x0, x20
  41080c:	bl	403220 <strcmp@plt>
  410810:	mov	w22, w0
  410814:	cbz	w0, 41089c <ferror@plt+0xd2cc>
  410818:	ldr	x1, [sp, #248]
  41081c:	mov	x0, x20
  410820:	bl	403220 <strcmp@plt>
  410824:	mov	w22, w0
  410828:	cbz	w0, 41089c <ferror@plt+0xd2cc>
  41082c:	ldr	x1, [sp, #256]
  410830:	mov	x0, x20
  410834:	bl	403220 <strcmp@plt>
  410838:	mov	w22, w0
  41083c:	cbz	w0, 41089c <ferror@plt+0xd2cc>
  410840:	ldr	x1, [sp, #264]
  410844:	mov	x0, x20
  410848:	bl	403220 <strcmp@plt>
  41084c:	mov	w22, w0
  410850:	cbz	w0, 41089c <ferror@plt+0xd2cc>
  410854:	ldr	x1, [sp, #232]
  410858:	mov	x0, x23
  41085c:	mov	w22, #0x0                   	// #0
  410860:	bl	403220 <strcmp@plt>
  410864:	cmp	w0, #0x0
  410868:	cset	w26, ne  // ne = any
  41086c:	b	410594 <ferror@plt+0xcfc4>
  410870:	mov	w0, #0x1                   	// #1
  410874:	str	w0, [sp, #132]
  410878:	b	410594 <ferror@plt+0xcfc4>
  41087c:	mov	w26, #0xffffffff            	// #-1
  410880:	b	410594 <ferror@plt+0xcfc4>
  410884:	str	wzr, [sp, #108]
  410888:	b	410594 <ferror@plt+0xcfc4>
  41088c:	mov	w22, #0x1                   	// #1
  410890:	b	4106f4 <ferror@plt+0xd124>
  410894:	mov	w22, #0x0                   	// #0
  410898:	b	410594 <ferror@plt+0xcfc4>
  41089c:	mov	w26, #0x0                   	// #0
  4108a0:	b	410594 <ferror@plt+0xcfc4>
  4108a4:	ldr	w0, [sp, #128]
  4108a8:	cmp	w26, #0x0
  4108ac:	mov	w20, #0x58                  	// #88
  4108b0:	mov	x27, #0x0                   	// #0
  4108b4:	add	w24, w24, w0
  4108b8:	ldr	w0, [sp, #168]
  4108bc:	mov	x22, #0x0                   	// #0
  4108c0:	mov	w23, #0x1                   	// #1
  4108c4:	add	w24, w24, w0
  4108c8:	cset	w0, gt
  4108cc:	add	w0, w24, w0, lsl #2
  4108d0:	mov	x24, #0x0                   	// #0
  4108d4:	umull	x0, w0, w20
  4108d8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4108dc:	mov	x19, x0
  4108e0:	ldr	x1, [sp, #136]
  4108e4:	mov	x2, #0x58                  	// #88
  4108e8:	bl	402cd0 <memcpy@plt>
  4108ec:	str	xzr, [sp, #96]
  4108f0:	adrp	x0, 492000 <_obstack_memory_used@@Base+0x35c10>
  4108f4:	add	x0, x0, #0xb12
  4108f8:	str	x0, [sp, #136]
  4108fc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x19c10>
  410900:	add	x0, x0, #0x65d
  410904:	str	x0, [sp, #168]
  410908:	ldr	w1, [sp, #112]
  41090c:	add	w0, w27, #0x1
  410910:	cmp	w0, w1
  410914:	b.cs	410a54 <ferror@plt+0xd484>  // b.hs, b.nlast
  410918:	umaddl	x0, w23, w20, x19
  41091c:	mov	x1, x25
  410920:	mov	x2, #0x58                  	// #88
  410924:	bl	402cd0 <memcpy@plt>
  410928:	ldr	x0, [sp, #120]
  41092c:	ldr	w21, [x0, x27, lsl #2]
  410930:	cbnz	x22, 410948 <ferror@plt+0xd378>
  410934:	tbz	w21, #2, 410948 <ferror@plt+0xd378>
  410938:	cmp	w26, #0x0
  41093c:	b.le	410948 <ferror@plt+0xd378>
  410940:	sub	w23, w23, #0x1
  410944:	mov	x22, x25
  410948:	ldr	x0, [sp, #96]
  41094c:	cbnz	x0, 410964 <ferror@plt+0xd394>
  410950:	tbz	w21, #3, 410964 <ferror@plt+0xd394>
  410954:	cmp	w26, #0x0
  410958:	b.le	410964 <ferror@plt+0xd394>
  41095c:	sub	w23, w23, #0x1
  410960:	str	x25, [sp, #96]
  410964:	cbnz	x24, 41097c <ferror@plt+0xd3ac>
  410968:	tbz	w21, #4, 41097c <ferror@plt+0xd3ac>
  41096c:	cmp	w26, #0x0
  410970:	b.le	41097c <ferror@plt+0xd3ac>
  410974:	sub	w23, w23, #0x1
  410978:	mov	x24, x25
  41097c:	tbz	w21, #1, 4109f8 <ferror@plt+0xd428>
  410980:	ldr	x28, [x25, #16]
  410984:	mov	x0, x28
  410988:	bl	402d50 <strlen@plt>
  41098c:	add	x0, x28, w0, sxtw
  410990:	add	w28, w23, #0x1
  410994:	ldurb	w0, [x0, #-1]
  410998:	cmp	w0, #0x68
  41099c:	b.eq	410a28 <ferror@plt+0xd458>  // b.none
  4109a0:	cmp	w0, #0x69
  4109a4:	b.eq	410a10 <ferror@plt+0xd440>  // b.none
  4109a8:	cmp	w0, #0x63
  4109ac:	b.ne	410a3c <ferror@plt+0xd46c>  // b.any
  4109b0:	umaddl	x4, w23, w20, x19
  4109b4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4109b8:	add	x1, x1, #0x325
  4109bc:	mov	w3, #0x80000               	// #524288
  4109c0:	mov	x2, #0x1                   	// #1
  4109c4:	mov	x0, #0x593                 	// #1427
  4109c8:	bl	4169d8 <ferror@plt+0x13408>
  4109cc:	umaddl	x0, w28, w20, x19
  4109d0:	add	w23, w28, #0x1
  4109d4:	mov	x1, x25
  4109d8:	mov	x2, #0x58                  	// #88
  4109dc:	bl	402cd0 <memcpy@plt>
  4109e0:	umaddl	x4, w23, w20, x19
  4109e4:	mov	w3, #0x80000               	// #524288
  4109e8:	ldr	x1, [sp, #136]
  4109ec:	mov	x2, #0x1                   	// #1
  4109f0:	mov	x0, #0x593                 	// #1427
  4109f4:	bl	4169d8 <ferror@plt+0x13408>
  4109f8:	ubfx	x21, x21, #5, #1
  4109fc:	add	x27, x27, #0x1
  410a00:	sub	w23, w23, w21
  410a04:	add	x25, x25, #0x58
  410a08:	add	w23, w23, #0x1
  410a0c:	b	410908 <ferror@plt+0xd338>
  410a10:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410a14:	umaddl	x4, w23, w20, x19
  410a18:	add	x1, x1, #0x333
  410a1c:	mov	w3, #0x80000               	// #524288
  410a20:	mov	x2, #0x1                   	// #1
  410a24:	b	4109c4 <ferror@plt+0xd3f4>
  410a28:	umaddl	x4, w23, w20, x19
  410a2c:	mov	w3, #0x80000               	// #524288
  410a30:	mov	x2, #0x1                   	// #1
  410a34:	ldr	x1, [sp, #168]
  410a38:	b	4109c4 <ferror@plt+0xd3f4>
  410a3c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410a40:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410a44:	add	x2, x2, #0x342
  410a48:	add	x0, x0, #0x357
  410a4c:	mov	w1, #0x141                 	// #321
  410a50:	bl	403600 <ferror@plt+0x30>
  410a54:	ldr	w0, [sp, #132]
  410a58:	cmp	w26, #0x0
  410a5c:	eor	w25, w0, #0x1
  410a60:	b.le	410b28 <ferror@plt+0xd558>
  410a64:	cmp	w26, #0x1
  410a68:	cset	w21, gt
  410a6c:	ands	w21, w21, w25
  410a70:	b.eq	410a9c <ferror@plt+0xd4cc>  // b.none
  410a74:	mov	w4, #0x58                  	// #88
  410a78:	add	w20, w23, #0x1
  410a7c:	mov	w3, #0x80000               	// #524288
  410a80:	mov	x2, #0x1                   	// #1
  410a84:	umaddl	x4, w23, w4, x19
  410a88:	mov	w23, w20
  410a8c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410a90:	mov	x0, #0x126                 	// #294
  410a94:	add	x1, x1, #0x36e
  410a98:	bl	4169d8 <ferror@plt+0x13408>
  410a9c:	mov	w27, #0x58                  	// #88
  410aa0:	mov	x0, #0x4f8                 	// #1272
  410aa4:	mov	w3, #0x80000               	// #524288
  410aa8:	mov	x2, #0x1                   	// #1
  410aac:	umaddl	x4, w23, w27, x19
  410ab0:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  410ab4:	add	x1, x1, #0xde7
  410ab8:	add	w26, w23, #0x1
  410abc:	bl	4169d8 <ferror@plt+0x13408>
  410ac0:	ldr	w0, [sp, #116]
  410ac4:	add	w20, w0, #0x1
  410ac8:	cbz	w21, 410aec <ferror@plt+0xd51c>
  410acc:	umaddl	x4, w26, w27, x19
  410ad0:	add	w26, w23, #0x2
  410ad4:	mov	w3, #0x80000               	// #524288
  410ad8:	mov	x2, #0x1                   	// #1
  410adc:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410ae0:	mov	x0, #0x126                 	// #294
  410ae4:	add	x1, x1, #0x377
  410ae8:	bl	4169d8 <ferror@plt+0x13408>
  410aec:	cbnz	x22, 410b34 <ferror@plt+0xd564>
  410af0:	ldr	w0, [sp, #128]
  410af4:	cbz	w0, 410b50 <ferror@plt+0xd580>
  410af8:	mov	w4, #0x58                  	// #88
  410afc:	mov	x0, #0x4f8                 	// #1272
  410b00:	mov	w3, #0x80000               	// #524288
  410b04:	mov	x2, #0x1                   	// #1
  410b08:	umaddl	x4, w26, w4, x19
  410b0c:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  410b10:	add	x1, x1, #0x4c6
  410b14:	add	w26, w26, #0x1
  410b18:	bl	4169d8 <ferror@plt+0x13408>
  410b1c:	ldr	w0, [sp, #116]
  410b20:	add	w20, w0, #0x2
  410b24:	b	410b50 <ferror@plt+0xd580>
  410b28:	ldr	w20, [sp, #116]
  410b2c:	mov	w26, w23
  410b30:	cbz	x22, 410b50 <ferror@plt+0xd580>
  410b34:	mov	w0, #0x58                  	// #88
  410b38:	add	w21, w26, #0x1
  410b3c:	mov	x1, x22
  410b40:	mov	x2, #0x58                  	// #88
  410b44:	umaddl	x0, w26, w0, x19
  410b48:	mov	w26, w21
  410b4c:	bl	402cd0 <memcpy@plt>
  410b50:	ldr	x0, [sp, #96]
  410b54:	cbz	x0, 410b74 <ferror@plt+0xd5a4>
  410b58:	mov	x1, x0
  410b5c:	mov	w0, #0x58                  	// #88
  410b60:	add	w21, w26, #0x1
  410b64:	mov	x2, #0x58                  	// #88
  410b68:	umaddl	x0, w26, w0, x19
  410b6c:	mov	w26, w21
  410b70:	bl	402cd0 <memcpy@plt>
  410b74:	cbz	x24, 410b94 <ferror@plt+0xd5c4>
  410b78:	mov	w0, #0x58                  	// #88
  410b7c:	add	w21, w26, #0x1
  410b80:	mov	x1, x24
  410b84:	mov	x2, #0x58                  	// #88
  410b88:	umaddl	x0, w26, w0, x19
  410b8c:	mov	w26, w21
  410b90:	bl	402cd0 <memcpy@plt>
  410b94:	ldr	w0, [sp, #108]
  410b98:	tst	w0, w25
  410b9c:	b.eq	410bc4 <ferror@plt+0xd5f4>  // b.none
  410ba0:	mov	w4, #0x58                  	// #88
  410ba4:	add	w21, w26, #0x1
  410ba8:	mov	w3, #0x80000               	// #524288
  410bac:	mov	x2, #0x1                   	// #1
  410bb0:	umaddl	x4, w26, w4, x19
  410bb4:	mov	w26, w21
  410bb8:	mov	x1, #0x0                   	// #0
  410bbc:	mov	x0, #0x543                 	// #1347
  410bc0:	bl	4169d8 <ferror@plt+0x13408>
  410bc4:	ldr	x0, [sp, #152]
  410bc8:	ldp	x21, x22, [sp, #32]
  410bcc:	ldp	x23, x24, [sp, #48]
  410bd0:	ldp	x27, x28, [sp, #80]
  410bd4:	str	w26, [x0]
  410bd8:	ldr	x0, [sp, #144]
  410bdc:	ldp	x25, x26, [sp, #64]
  410be0:	str	x19, [x0]
  410be4:	ldr	x0, [sp, #160]
  410be8:	str	w20, [x0]
  410bec:	ldp	x19, x20, [sp, #16]
  410bf0:	ldp	x29, x30, [sp], #272
  410bf4:	ret
  410bf8:	cbz	w26, 4106f4 <ferror@plt+0xd124>
  410bfc:	b	410594 <ferror@plt+0xcfc4>
  410c00:	mov	w0, #0x0                   	// #0
  410c04:	ret
  410c08:	stp	x29, x30, [sp, #-48]!
  410c0c:	mov	w1, #0x3a                  	// #58
  410c10:	mov	x29, sp
  410c14:	str	x19, [sp, #16]
  410c18:	bl	4032f0 <strchr@plt>
  410c1c:	add	x19, x0, #0x1
  410c20:	add	x1, sp, #0x28
  410c24:	mov	x0, x19
  410c28:	mov	w2, #0x10                  	// #16
  410c2c:	bl	403260 <strtol@plt>
  410c30:	ldr	x1, [sp, #40]
  410c34:	cmp	x19, x1
  410c38:	mov	x1, #0xffffffff            	// #4294967295
  410c3c:	csel	x0, x0, x1, ne  // ne = any
  410c40:	ldr	x19, [sp, #16]
  410c44:	ldp	x29, x30, [sp], #48
  410c48:	ret
  410c4c:	stp	x29, x30, [sp, #-320]!
  410c50:	mov	x2, #0xffffffffffffffff    	// #-1
  410c54:	mov	x29, sp
  410c58:	stp	x19, x20, [sp, #16]
  410c5c:	stp	x21, x22, [sp, #32]
  410c60:	stp	x23, x24, [sp, #48]
  410c64:	stp	x25, x26, [sp, #64]
  410c68:	stp	x27, x28, [sp, #80]
  410c6c:	stp	x2, x2, [sp, #144]
  410c70:	cbnz	w0, 410c8c <ferror@plt+0xd6bc>
  410c74:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410c78:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410c7c:	add	x2, x2, #0x386
  410c80:	add	x0, x0, #0x39c
  410c84:	mov	w1, #0xb9                  	// #185
  410c88:	bl	403600 <ferror@plt+0x30>
  410c8c:	ldr	x19, [x1]
  410c90:	cbnz	x19, 410c9c <ferror@plt+0xd6cc>
  410c94:	mov	x19, #0x0                   	// #0
  410c98:	b	411094 <ferror@plt+0xdac4>
  410c9c:	mov	x0, x19
  410ca0:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  410ca4:	add	x1, x1, #0xd85
  410ca8:	bl	403220 <strcmp@plt>
  410cac:	mov	w24, w0
  410cb0:	cbz	w0, 410dc8 <ferror@plt+0xd7f8>
  410cb4:	mov	x0, x19
  410cb8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410cbc:	add	x1, x1, #0x381
  410cc0:	bl	403220 <strcmp@plt>
  410cc4:	cmp	w0, #0x0
  410cc8:	cset	w27, eq  // eq = none
  410ccc:	cbz	w0, 410dcc <ferror@plt+0xd7fc>
  410cd0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410cd4:	mov	x0, x19
  410cd8:	add	x1, x1, #0x398
  410cdc:	bl	403220 <strcmp@plt>
  410ce0:	cbnz	w0, 410c94 <ferror@plt+0xd6c4>
  410ce4:	mov	w26, #0x1                   	// #1
  410ce8:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  410cec:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410cf0:	add	x1, x1, #0xc1a
  410cf4:	add	x0, x0, #0x3c6
  410cf8:	bl	402f20 <fopen@plt>
  410cfc:	mov	x22, x0
  410d00:	cbz	x0, 410c94 <ferror@plt+0xd6c4>
  410d04:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410d08:	add	x0, x0, #0x3d4
  410d0c:	mov	x23, #0x0                   	// #0
  410d10:	mov	w19, #0x0                   	// #0
  410d14:	mov	w25, #0x0                   	// #0
  410d18:	mov	w20, #0x0                   	// #0
  410d1c:	mov	w21, #0xff                  	// #255
  410d20:	str	x0, [sp, #120]
  410d24:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410d28:	add	x0, x0, #0x3e0
  410d2c:	str	x0, [sp, #128]
  410d30:	mov	x2, x22
  410d34:	add	x0, sp, #0xc0
  410d38:	mov	w1, #0x80                  	// #128
  410d3c:	bl	4035a0 <fgets@plt>
  410d40:	cbz	x0, 410ee0 <ferror@plt+0xd910>
  410d44:	ldr	x1, [sp, #120]
  410d48:	add	x0, sp, #0xc0
  410d4c:	bl	403430 <strstr@plt>
  410d50:	cbz	x0, 410d70 <ferror@plt+0xd7a0>
  410d54:	add	x0, sp, #0xc0
  410d58:	bl	410c08 <ferror@plt+0xd638>
  410d5c:	cmp	w0, #0xff
  410d60:	b.eq	410de4 <ferror@plt+0xd814>  // b.none
  410d64:	cmp	w21, #0xff
  410d68:	b.ne	410ddc <ferror@plt+0xd80c>  // b.any
  410d6c:	and	w21, w0, #0xff
  410d70:	ldr	x1, [sp, #128]
  410d74:	add	x0, sp, #0xc0
  410d78:	bl	403430 <strstr@plt>
  410d7c:	cbz	x0, 410df0 <ferror@plt+0xd820>
  410d80:	add	x0, sp, #0xc0
  410d84:	bl	410c08 <ferror@plt+0xd638>
  410d88:	ldr	w1, [sp, #152]
  410d8c:	cmn	w1, #0x1
  410d90:	b.eq	410db0 <ferror@plt+0xd7e0>  // b.none
  410d94:	cmp	w0, w1
  410d98:	b.eq	410d30 <ferror@plt+0xd760>  // b.none
  410d9c:	ldr	w1, [sp, #156]
  410da0:	cmn	w1, #0x1
  410da4:	b.eq	410db0 <ferror@plt+0xd7e0>  // b.none
  410da8:	cmp	w0, w1
  410dac:	b.eq	410d30 <ferror@plt+0xd760>  // b.none
  410db0:	cmp	w25, #0x2
  410db4:	b.eq	410de4 <ferror@plt+0xd814>  // b.none
  410db8:	add	x1, sp, #0x98
  410dbc:	str	w0, [x1, w25, uxtw #2]
  410dc0:	add	w25, w25, #0x1
  410dc4:	b	410d30 <ferror@plt+0xd760>
  410dc8:	mov	w27, #0x0                   	// #0
  410dcc:	mov	w26, #0x0                   	// #0
  410dd0:	b	410ce8 <ferror@plt+0xd718>
  410dd4:	mov	w19, #0x0                   	// #0
  410dd8:	b	410d30 <ferror@plt+0xd760>
  410ddc:	cmp	w21, w0
  410de0:	b.eq	410d70 <ferror@plt+0xd7a0>  // b.none
  410de4:	mov	x0, x22
  410de8:	bl	402ee0 <fclose@plt>
  410dec:	b	410c94 <ferror@plt+0xd6c4>
  410df0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410df4:	add	x0, sp, #0xc0
  410df8:	add	x1, x1, #0x3e8
  410dfc:	bl	403430 <strstr@plt>
  410e00:	cbz	x0, 410e4c <ferror@plt+0xd87c>
  410e04:	add	x0, sp, #0xc0
  410e08:	bl	410c08 <ferror@plt+0xd638>
  410e0c:	ldr	w1, [sp, #144]
  410e10:	cmn	w1, #0x1
  410e14:	b.eq	410e34 <ferror@plt+0xd864>  // b.none
  410e18:	cmp	w0, w1
  410e1c:	b.eq	410d30 <ferror@plt+0xd760>  // b.none
  410e20:	ldr	w1, [sp, #148]
  410e24:	cmn	w1, #0x1
  410e28:	b.eq	410e34 <ferror@plt+0xd864>  // b.none
  410e2c:	cmp	w0, w1
  410e30:	b.eq	410d30 <ferror@plt+0xd760>  // b.none
  410e34:	cmp	w20, #0x2
  410e38:	b.eq	410de4 <ferror@plt+0xd814>  // b.none
  410e3c:	add	x1, sp, #0x90
  410e40:	str	w0, [x1, w20, uxtw #2]
  410e44:	add	w20, w20, #0x1
  410e48:	b	410d30 <ferror@plt+0xd760>
  410e4c:	orr	w0, w19, w27
  410e50:	cbnz	w0, 410d30 <ferror@plt+0xd760>
  410e54:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410e58:	add	x0, sp, #0xc0
  410e5c:	add	x1, x1, #0x3ed
  410e60:	bl	403430 <strstr@plt>
  410e64:	cbz	x0, 410dd4 <ferror@plt+0xd804>
  410e68:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410e6c:	add	x19, x19, #0x698
  410e70:	mov	w0, #0x15                  	// #21
  410e74:	str	w0, [sp, #108]
  410e78:	ldr	x28, [x19, #16]
  410e7c:	ldrb	w0, [x28]
  410e80:	cbz	w0, 4110c8 <ferror@plt+0xdaf8>
  410e84:	add	x0, sp, #0xc0
  410e88:	bl	402d50 <strlen@plt>
  410e8c:	str	x0, [sp, #112]
  410e90:	mov	x0, x28
  410e94:	mov	w1, #0x20                  	// #32
  410e98:	bl	4032f0 <strchr@plt>
  410e9c:	mov	x4, x0
  410ea0:	cbnz	x0, 410eb0 <ferror@plt+0xd8e0>
  410ea4:	mov	x0, x28
  410ea8:	bl	402d50 <strlen@plt>
  410eac:	add	x4, x28, x0
  410eb0:	ldr	x1, [sp, #112]
  410eb4:	sub	x3, x4, x28
  410eb8:	mov	x2, x28
  410ebc:	add	x0, sp, #0xc0
  410ec0:	str	x4, [sp, #136]
  410ec4:	bl	403140 <memmem@plt>
  410ec8:	cbz	x0, 4110e4 <ferror@plt+0xdb14>
  410ecc:	ldr	x4, [sp, #136]
  410ed0:	ldrb	w0, [x4]
  410ed4:	cbz	w0, 4110c0 <ferror@plt+0xdaf0>
  410ed8:	add	x28, x4, #0x1
  410edc:	b	410e90 <ferror@plt+0xd8c0>
  410ee0:	mov	x0, x22
  410ee4:	bl	402ee0 <fclose@plt>
  410ee8:	sub	w0, w20, #0x1
  410eec:	cmp	w0, #0x1
  410ef0:	b.hi	410c94 <ferror@plt+0xd6c4>  // b.pmore
  410ef4:	cmp	w20, #0x1
  410ef8:	cset	w0, eq  // eq = none
  410efc:	cmp	w0, #0x0
  410f00:	ccmp	w25, #0x1, #0x4, ne  // ne = any
  410f04:	b.ne	410c94 <ferror@plt+0xd6c4>  // b.any
  410f08:	cmp	w21, #0xff
  410f0c:	b.eq	410c94 <ferror@plt+0xd6c4>  // b.none
  410f10:	cmp	w24, #0x0
  410f14:	ldr	w2, [sp, #144]
  410f18:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  410f1c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410f20:	add	x20, x0, #0x698
  410f24:	b.ne	410fbc <ferror@plt+0xd9ec>  // b.any
  410f28:	ldr	w0, [sp, #148]
  410f2c:	ubfiz	w4, w2, #12, #12
  410f30:	and	w2, w2, #0xfff
  410f34:	mov	w22, #0x0                   	// #0
  410f38:	and	w1, w0, #0xfff
  410f3c:	ubfiz	w0, w0, #12, #12
  410f40:	orr	w4, w4, w1
  410f44:	orr	w0, w0, w2
  410f48:	add	x1, x20, #0x1f8
  410f4c:	ldr	x3, [x1]
  410f50:	cbz	x3, 410c94 <ferror@plt+0xd6c4>
  410f54:	ldrb	w2, [x1, #16]
  410f58:	cmp	w2, w21
  410f5c:	b.ne	4110b4 <ferror@plt+0xdae4>  // b.any
  410f60:	ldr	w2, [x1, #20]
  410f64:	cmp	w2, w4
  410f68:	b.eq	410f74 <ferror@plt+0xd9a4>  // b.none
  410f6c:	cmp	w2, w0
  410f70:	b.ne	4110b4 <ferror@plt+0xdae4>  // b.any
  410f74:	cmp	w26, #0x0
  410f78:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410f7c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410f80:	add	x1, x1, #0x381
  410f84:	add	x0, x0, #0x398
  410f88:	mov	x4, #0x0                   	// #0
  410f8c:	csel	x1, x0, x1, ne  // ne = any
  410f90:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  410f94:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  410f98:	add	x2, x2, #0x9eb
  410f9c:	add	x0, x0, #0x3fe
  410fa0:	bl	45a668 <ferror@plt+0x57098>
  410fa4:	mov	x19, x0
  410fa8:	mov	w0, w22
  410fac:	mov	x22, #0x28                  	// #40
  410fb0:	madd	x0, x0, x22, x20
  410fb4:	ldr	x20, [x0, #536]
  410fb8:	b	411064 <ferror@plt+0xda94>
  410fbc:	ldr	w5, [sp, #152]
  410fc0:	add	x1, x20, #0x1f8
  410fc4:	mov	x0, #0x0                   	// #0
  410fc8:	ldr	x3, [x1]
  410fcc:	cbz	x3, 410c94 <ferror@plt+0xd6c4>
  410fd0:	ldrb	w4, [x1, #16]
  410fd4:	cmp	w4, w21
  410fd8:	b.ne	410ffc <ferror@plt+0xda2c>  // b.any
  410fdc:	ldr	w4, [x1, #20]
  410fe0:	cmp	w4, w2
  410fe4:	b.ne	410ffc <ferror@plt+0xda2c>  // b.any
  410fe8:	ldr	w4, [x1, #24]
  410fec:	cmn	w4, #0x1
  410ff0:	b.eq	4110f0 <ferror@plt+0xdb20>  // b.none
  410ff4:	cmp	w4, w5
  410ff8:	b.eq	4110f0 <ferror@plt+0xdb20>  // b.none
  410ffc:	add	w0, w0, #0x1
  411000:	add	x1, x1, #0x28
  411004:	b	410fc8 <ferror@plt+0xd9f8>
  411008:	mov	x1, #0x28                  	// #40
  41100c:	mov	x21, #0x0                   	// #0
  411010:	mov	x22, #0x18                  	// #24
  411014:	madd	x0, x0, x1, x20
  411018:	adrp	x20, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  41101c:	add	x20, x20, #0xe70
  411020:	ldr	x24, [x0, #512]
  411024:	mul	x0, x21, x22
  411028:	mov	w19, w21
  41102c:	ldr	x1, [x0, x20]
  411030:	cbz	x1, 410c94 <ferror@plt+0xd6c4>
  411034:	mov	x0, x24
  411038:	add	x21, x21, #0x1
  41103c:	bl	403220 <strcmp@plt>
  411040:	cbnz	w0, 411024 <ferror@plt+0xda54>
  411044:	madd	x20, x19, x22, x20
  411048:	mov	x2, #0x0                   	// #0
  41104c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  411050:	add	x0, x0, #0x3f6
  411054:	ldr	x1, [x20, #8]
  411058:	bl	45a668 <ferror@plt+0x57098>
  41105c:	mov	x19, x0
  411060:	ldr	x20, [x20, #16]
  411064:	cbnz	w27, 411094 <ferror@plt+0xdac4>
  411068:	add	x8, sp, #0xa0
  41106c:	mov	x1, x20
  411070:	mov	x0, x23
  411074:	bl	411634 <ferror@plt+0xe064>
  411078:	ldr	x1, [sp, #160]
  41107c:	mov	x2, #0x0                   	// #0
  411080:	mov	x0, x19
  411084:	bl	45a668 <ferror@plt+0x57098>
  411088:	mov	x19, x0
  41108c:	add	x0, sp, #0xa0
  411090:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411094:	mov	x0, x19
  411098:	ldp	x19, x20, [sp, #16]
  41109c:	ldp	x21, x22, [sp, #32]
  4110a0:	ldp	x23, x24, [sp, #48]
  4110a4:	ldp	x25, x26, [sp, #64]
  4110a8:	ldp	x27, x28, [sp, #80]
  4110ac:	ldp	x29, x30, [sp], #320
  4110b0:	ret
  4110b4:	add	w22, w22, #0x1
  4110b8:	add	x1, x1, #0x28
  4110bc:	b	410f4c <ferror@plt+0xd97c>
  4110c0:	ldr	w0, [x19, #8]
  4110c4:	orr	x23, x23, x0
  4110c8:	ldr	w0, [sp, #108]
  4110cc:	add	x19, x19, #0x18
  4110d0:	subs	w0, w0, #0x1
  4110d4:	str	w0, [sp, #108]
  4110d8:	b.ne	410e78 <ferror@plt+0xd8a8>  // b.any
  4110dc:	mov	w19, #0x1                   	// #1
  4110e0:	b	410d30 <ferror@plt+0xd760>
  4110e4:	ldr	w0, [x19, #8]
  4110e8:	bic	w23, w23, w0
  4110ec:	b	4110c8 <ferror@plt+0xdaf8>
  4110f0:	cbz	w24, 411008 <ferror@plt+0xda38>
  4110f4:	mov	x1, #0x28                  	// #40
  4110f8:	cmp	w26, #0x0
  4110fc:	mov	x4, #0x0                   	// #0
  411100:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  411104:	madd	x0, x0, x1, x20
  411108:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  41110c:	add	x1, x1, #0x381
  411110:	add	x2, x2, #0x9eb
  411114:	ldr	x20, [x0, #536]
  411118:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  41111c:	add	x0, x0, #0x398
  411120:	csel	x1, x0, x1, ne  // ne = any
  411124:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  411128:	add	x0, x0, #0x3fe
  41112c:	bl	45a668 <ferror@plt+0x57098>
  411130:	mov	x19, x0
  411134:	b	411064 <ferror@plt+0xda94>
  411138:	ldr	x1, [x2]
  41113c:	ldr	x3, [x2, #16]
  411140:	cmp	x1, #0x50a
  411144:	ldr	x2, [x2, #72]
  411148:	b.hi	411190 <ferror@plt+0xdbc0>  // b.pmore
  41114c:	cmp	x1, #0x4ff
  411150:	b.hi	411164 <ferror@plt+0xdb94>  // b.pmore
  411154:	cmp	x1, #0x4fb
  411158:	b.eq	4111a8 <ferror@plt+0xdbd8>  // b.none
  41115c:	mov	w0, #0x1                   	// #1
  411160:	ret
  411164:	sub	x1, x1, #0x500
  411168:	cmp	x1, #0xa
  41116c:	b.hi	41115c <ferror@plt+0xdb8c>  // b.pmore
  411170:	cmp	w1, #0xa
  411174:	b.hi	41115c <ferror@plt+0xdb8c>  // b.pmore
  411178:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  41117c:	add	x4, x4, #0xe58
  411180:	ldrb	w1, [x4, w1, uxtw]
  411184:	adr	x4, 411190 <ferror@plt+0xdbc0>
  411188:	add	x1, x4, w1, sxtb #2
  41118c:	br	x1
  411190:	cmp	x1, #0x511
  411194:	b.eq	4111d0 <ferror@plt+0xdc00>  // b.none
  411198:	cmp	x1, #0x516
  41119c:	b.ne	41115c <ferror@plt+0xdb8c>  // b.any
  4111a0:	str	x3, [x0, #3720]
  4111a4:	b	41115c <ferror@plt+0xdb8c>
  4111a8:	str	x3, [x0, #3600]
  4111ac:	b	41115c <ferror@plt+0xdb8c>
  4111b0:	str	x3, [x0, #3632]
  4111b4:	b	41115c <ferror@plt+0xdb8c>
  4111b8:	ldr	w1, [x0, #208]
  4111bc:	orr	w1, w1, #0x2
  4111c0:	str	w1, [x0, #208]
  4111c4:	b	41115c <ferror@plt+0xdb8c>
  4111c8:	str	w2, [x0, #3640]
  4111cc:	b	41115c <ferror@plt+0xdb8c>
  4111d0:	ldr	w1, [x0, #208]
  4111d4:	cmp	w2, #0x0
  4111d8:	and	w3, w1, #0xfffffffb
  4111dc:	orr	w1, w1, #0x4
  4111e0:	csel	w1, w1, w3, ne  // ne = any
  4111e4:	b	4111c0 <ferror@plt+0xdbf0>
  4111e8:	str	w2, [x0, #3660]
  4111ec:	b	41115c <ferror@plt+0xdb8c>
  4111f0:	stp	x29, x30, [sp, #-32]!
  4111f4:	mov	x29, sp
  4111f8:	stp	x19, x20, [sp, #16]
  4111fc:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411200:	add	x19, x19, #0x950
  411204:	add	x20, x19, #0x720
  411208:	sub	x20, x20, #0x30
  41120c:	mov	x0, x20
  411210:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411214:	cmp	x20, x19
  411218:	b.ne	411208 <ferror@plt+0xdc38>  // b.any
  41121c:	ldp	x19, x20, [sp, #16]
  411220:	ldp	x29, x30, [sp], #32
  411224:	ret
  411228:	stp	x29, x30, [sp, #-32]!
  41122c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411230:	add	x0, x0, #0x950
  411234:	mov	x29, sp
  411238:	stp	x19, x20, [sp, #16]
  41123c:	add	x20, x0, #0x870
  411240:	add	x19, x0, #0x720
  411244:	sub	x20, x20, #0x30
  411248:	add	x0, x20, #0x8
  41124c:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411250:	cmp	x20, x19
  411254:	b.ne	411244 <ferror@plt+0xdc74>  // b.any
  411258:	ldp	x19, x20, [sp, #16]
  41125c:	ldp	x29, x30, [sp], #32
  411260:	ret
  411264:	ldp	x2, x0, [x0, #8]
  411268:	and	x2, x2, x0
  41126c:	fmov	d0, x2
  411270:	ldp	x3, x0, [x1, #8]
  411274:	cnt	v0.8b, v0.8b
  411278:	addv	b0, v0.8b
  41127c:	and	x3, x3, x0
  411280:	umov	w1, v0.b[0]
  411284:	fmov	d0, x3
  411288:	cnt	v0.8b, v0.8b
  41128c:	addv	b0, v0.8b
  411290:	umov	w0, v0.b[0]
  411294:	subs	w0, w0, w1
  411298:	b.ne	4112a0 <ferror@plt+0xdcd0>  // b.any
  41129c:	sub	w0, w3, w2
  4112a0:	ret
  4112a4:	adrp	x3, 411000 <ferror@plt+0xda30>
  4112a8:	mov	x2, #0x28                  	// #40
  4112ac:	add	x3, x3, #0x264
  4112b0:	mov	x1, #0x16                  	// #22
  4112b4:	adrp	x0, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  4112b8:	add	x0, x0, #0xf18
  4112bc:	b	42d9a0 <ferror@plt+0x2a3d0>
  4112c0:	cmp	w1, #0x20
  4112c4:	b.ne	411304 <ferror@plt+0xdd34>  // b.any
  4112c8:	cmp	w0, #0xc
  4112cc:	ccmp	w0, #0x10, #0x4, ne  // ne = any
  4112d0:	b.eq	411304 <ferror@plt+0xdd34>  // b.none
  4112d4:	stp	x29, x30, [sp, #-16]!
  4112d8:	mov	x2, #0x1                   	// #1
  4112dc:	lsl	x2, x2, x0
  4112e0:	mov	x29, sp
  4112e4:	mov	w1, w0
  4112e8:	lsr	x2, x2, #10
  4112ec:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4112f0:	add	x0, x0, #0x2b8
  4112f4:	bl	4221dc <ferror@plt+0x1ec0c>
  4112f8:	mov	w0, #0x0                   	// #0
  4112fc:	ldp	x29, x30, [sp], #16
  411300:	ret
  411304:	mov	w0, #0x1                   	// #1
  411308:	ret
  41130c:	stp	x29, x30, [sp, #-32]!
  411310:	mov	w1, #0x10                  	// #16
  411314:	mov	w0, #0x20                  	// #32
  411318:	mov	x29, sp
  41131c:	str	x19, [sp, #16]
  411320:	bl	412250 <ferror@plt+0xec80>
  411324:	mov	w0, #0x20                  	// #32
  411328:	bl	412294 <ferror@plt+0xecc4>
  41132c:	mov	w19, w0
  411330:	mov	w1, w0
  411334:	mov	w0, #0x21                  	// #33
  411338:	bl	412250 <ferror@plt+0xec80>
  41133c:	mov	w0, w19
  411340:	mov	w1, #0x20                  	// #32
  411344:	ldr	x19, [sp, #16]
  411348:	ldp	x29, x30, [sp], #32
  41134c:	b	4112c0 <ferror@plt+0xdcf0>
  411350:	stp	x29, x30, [sp, #-80]!
  411354:	mov	x29, sp
  411358:	stp	x19, x20, [sp, #16]
  41135c:	mov	x20, x0
  411360:	stp	x21, x22, [sp, #32]
  411364:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  411368:	add	x22, x22, #0xe68
  41136c:	stp	x23, x24, [sp, #48]
  411370:	mov	w23, #0x4                   	// #4
  411374:	stp	x25, x26, [sp, #64]
  411378:	ldr	x24, [x20]
  41137c:	cbz	x24, 411410 <ferror@plt+0xde40>
  411380:	ldp	w0, w21, [x24]
  411384:	ubfx	x0, x0, #0, #31
  411388:	cmp	w0, w21
  41138c:	b.ne	411438 <ferror@plt+0xde68>  // b.any
  411390:	ldrsb	w0, [x24, #3]
  411394:	tbz	w0, #31, 411410 <ferror@plt+0xde40>
  411398:	add	w1, w21, #0x1
  41139c:	mov	w25, #0x1                   	// #1
  4113a0:	str	xzr, [x20]
  4113a4:	ldr	x0, [x20]
  4113a8:	cbz	x0, 411420 <ferror@plt+0xde50>
  4113ac:	ldr	w2, [x0, #4]
  4113b0:	ldr	w0, [x0]
  4113b4:	add	w1, w1, w2
  4113b8:	and	w0, w0, #0x7fffffff
  4113bc:	bl	41e438 <ferror@plt+0x1ae68>
  4113c0:	mov	w19, w0
  4113c4:	ldr	x0, [x20]
  4113c8:	ubfiz	x1, x19, #3, #32
  4113cc:	add	x1, x1, #0x8
  4113d0:	cbz	x0, 41142c <ferror@plt+0xde5c>
  4113d4:	ldr	w26, [x0, #4]
  4113d8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4113dc:	str	x0, [x20]
  4113e0:	and	w1, w19, #0x7fffffff
  4113e4:	stp	w1, w26, [x0]
  4113e8:	cbz	w25, 411438 <ferror@plt+0xde68>
  4113ec:	mov	w3, w21
  4113f0:	mov	x1, #0x0                   	// #0
  4113f4:	add	x2, x1, #0x1
  4113f8:	cmp	x3, x1
  4113fc:	b.eq	411434 <ferror@plt+0xde64>  // b.none
  411400:	ldr	x1, [x24, x2, lsl #3]
  411404:	str	x1, [x0, x2, lsl #3]
  411408:	mov	x1, x2
  41140c:	b	4113f4 <ferror@plt+0xde24>
  411410:	mov	w25, #0x0                   	// #0
  411414:	mov	w21, #0x0                   	// #0
  411418:	mov	w1, #0x1                   	// #1
  41141c:	b	4113a4 <ferror@plt+0xddd4>
  411420:	cmp	w1, #0x4
  411424:	csel	w19, w1, w23, cs  // cs = hs, nlast
  411428:	b	4113c4 <ferror@plt+0xddf4>
  41142c:	mov	w26, #0x0                   	// #0
  411430:	b	4113d8 <ferror@plt+0xde08>
  411434:	str	w21, [x0, #4]
  411438:	ldr	x1, [x20]
  41143c:	ldr	x2, [x22]
  411440:	ldr	w0, [x1, #4]
  411444:	add	w3, w0, #0x1
  411448:	str	w3, [x1, #4]
  41144c:	add	x0, x1, w0, uxtw #3
  411450:	str	x2, [x0, #8]
  411454:	ldr	x0, [x22, #40]!
  411458:	cbnz	x0, 411378 <ferror@plt+0xdda8>
  41145c:	ldp	x19, x20, [sp, #16]
  411460:	ldp	x21, x22, [sp, #32]
  411464:	ldp	x23, x24, [sp, #48]
  411468:	ldp	x25, x26, [sp, #64]
  41146c:	ldp	x29, x30, [sp], #80
  411470:	ret
  411474:	stp	x29, x30, [sp, #-128]!
  411478:	mov	x29, sp
  41147c:	stp	x21, x22, [sp, #32]
  411480:	mov	x21, x0
  411484:	stp	x23, x24, [sp, #48]
  411488:	mov	x23, x1
  41148c:	mov	x24, x2
  411490:	stp	x25, x26, [sp, #64]
  411494:	adrp	x25, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411498:	add	x25, x25, #0x326
  41149c:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x1fc10>
  4114a0:	stp	x19, x20, [sp, #16]
  4114a4:	stp	x27, x28, [sp, #80]
  4114a8:	cbz	x21, 41158c <ferror@plt+0xdfbc>
  4114ac:	ldrb	w0, [x21]
  4114b0:	cbz	w0, 41158c <ferror@plt+0xdfbc>
  4114b4:	add	x20, x21, #0x1
  4114b8:	mov	w1, #0x2b                  	// #43
  4114bc:	mov	x0, x20
  4114c0:	bl	4032f0 <strchr@plt>
  4114c4:	mov	x22, x0
  4114c8:	cbz	x0, 411504 <ferror@plt+0xdf34>
  4114cc:	sub	x19, x0, x20
  4114d0:	cmp	x19, #0x1
  4114d4:	b.ls	411514 <ferror@plt+0xdf44>  // b.plast
  4114d8:	mov	x1, x25
  4114dc:	mov	x0, x20
  4114e0:	mov	x2, #0x2                   	// #2
  4114e4:	bl	402f80 <strncmp@plt>
  4114e8:	mov	w27, w0
  4114ec:	cbnz	w0, 41151c <ferror@plt+0xdf4c>
  4114f0:	add	x20, x21, #0x3
  4114f4:	subs	x19, x19, #0x2
  4114f8:	b.ne	411520 <ferror@plt+0xdf50>  // b.any
  4114fc:	mov	w0, #0x1                   	// #1
  411500:	b	411590 <ferror@plt+0xdfc0>
  411504:	mov	x0, x20
  411508:	bl	402d50 <strlen@plt>
  41150c:	mov	x19, x0
  411510:	b	4114d0 <ferror@plt+0xdf00>
  411514:	cbz	x19, 4114fc <ferror@plt+0xdf2c>
  411518:	mov	x19, #0x1                   	// #1
  41151c:	mov	w27, #0x1                   	// #1
  411520:	add	x21, x26, #0xe68
  411524:	ldr	x28, [x21]
  411528:	cbz	x28, 4115ac <ferror@plt+0xdfdc>
  41152c:	mov	x0, x28
  411530:	bl	402d50 <strlen@plt>
  411534:	cmp	x0, x19
  411538:	b.ne	411584 <ferror@plt+0xdfb4>  // b.any
  41153c:	mov	x2, x19
  411540:	mov	x1, x20
  411544:	mov	x0, x28
  411548:	bl	402f80 <strncmp@plt>
  41154c:	cbnz	w0, 411584 <ferror@plt+0xdfb4>
  411550:	ldr	x1, [x23]
  411554:	ldr	x0, [x21, #8]
  411558:	cbz	w27, 411574 <ferror@plt+0xdfa4>
  41155c:	ldr	x2, [x21, #16]
  411560:	orr	x0, x0, x2
  411564:	orr	x0, x0, x1
  411568:	mov	x21, x22
  41156c:	str	x0, [x23]
  411570:	b	4114a8 <ferror@plt+0xded8>
  411574:	ldr	x2, [x21, #24]
  411578:	orr	x0, x0, x2
  41157c:	bic	x0, x1, x0
  411580:	b	411568 <ferror@plt+0xdf98>
  411584:	add	x21, x21, #0x28
  411588:	b	411524 <ferror@plt+0xdf54>
  41158c:	mov	w0, #0x0                   	// #0
  411590:	ldp	x19, x20, [sp, #16]
  411594:	ldp	x21, x22, [sp, #32]
  411598:	ldp	x23, x24, [sp, #48]
  41159c:	ldp	x25, x26, [sp, #64]
  4115a0:	ldp	x27, x28, [sp, #80]
  4115a4:	ldp	x29, x30, [sp], #128
  4115a8:	ret
  4115ac:	cbz	x24, 4115e0 <ferror@plt+0xe010>
  4115b0:	add	x0, sp, #0x70
  4115b4:	add	x2, x20, x19
  4115b8:	mov	x1, x20
  4115bc:	mov	w3, #0x0                   	// #0
  4115c0:	str	x0, [sp, #96]
  4115c4:	add	x0, sp, #0x60
  4115c8:	bl	411970 <ferror@plt+0xe3a0>
  4115cc:	add	x1, sp, #0x60
  4115d0:	mov	x0, x24
  4115d4:	bl	45ec58 <_obstack_memory_used@@Base+0x2868>
  4115d8:	add	x0, sp, #0x60
  4115dc:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  4115e0:	mov	w0, #0x2                   	// #2
  4115e4:	b	411590 <ferror@plt+0xdfc0>
  4115e8:	stp	x29, x30, [sp, #-32]!
  4115ec:	mov	x29, sp
  4115f0:	stp	x19, x20, [sp, #16]
  4115f4:	mov	x20, x0
  4115f8:	add	x0, x0, #0x10
  4115fc:	mov	x19, x1
  411600:	str	x0, [x20]
  411604:	cbz	x1, 41162c <ferror@plt+0xe05c>
  411608:	mov	x0, x1
  41160c:	bl	402d50 <strlen@plt>
  411610:	add	x2, x19, x0
  411614:	mov	x1, x19
  411618:	mov	x0, x20
  41161c:	ldp	x19, x20, [sp, #16]
  411620:	mov	w3, #0x0                   	// #0
  411624:	ldp	x29, x30, [sp], #32
  411628:	b	411970 <ferror@plt+0xe3a0>
  41162c:	mov	x2, #0xffffffffffffffff    	// #-1
  411630:	b	411614 <ferror@plt+0xe044>
  411634:	stp	x29, x30, [sp, #-80]!
  411638:	mov	x29, sp
  41163c:	stp	x19, x20, [sp, #16]
  411640:	mov	x20, x8
  411644:	mov	x19, x1
  411648:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41164c:	add	x1, x1, #0x122
  411650:	stp	x21, x22, [sp, #32]
  411654:	mov	x22, x0
  411658:	mov	x0, x8
  41165c:	stp	x23, x24, [sp, #48]
  411660:	str	x25, [sp, #64]
  411664:	bl	4115e8 <ferror@plt+0xe018>
  411668:	adrp	x2, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  41166c:	add	x2, x2, #0xf18
  411670:	mov	x1, x22
  411674:	mov	x21, x2
  411678:	ldr	x0, [x2]
  41167c:	cbz	x0, 4116ac <ferror@plt+0xe0dc>
  411680:	ldp	x3, x4, [x2, #8]
  411684:	orr	x0, x1, x19
  411688:	ldrb	w5, [x2, #32]
  41168c:	cmp	w5, #0x0
  411690:	csel	x5, x4, x3, ne  // ne = any
  411694:	bics	xzr, x5, x0
  411698:	b.ne	4116a4 <ferror@plt+0xe0d4>  // b.any
  41169c:	bic	x1, x1, x4
  4116a0:	orr	x1, x1, x3
  4116a4:	add	x2, x2, #0x28
  4116a8:	b	411678 <ferror@plt+0xe0a8>
  4116ac:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4116b0:	mvn	x24, x19
  4116b4:	bic	x19, x1, x19
  4116b8:	ldr	x0, [x0, #584]
  4116bc:	and	x1, x0, x22
  4116c0:	tbz	w1, #3, 4116cc <ferror@plt+0xe0fc>
  4116c4:	and	x0, x0, #0x8
  4116c8:	orr	x19, x19, x0
  4116cc:	adrp	x25, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4116d0:	mov	x23, x21
  4116d4:	add	x25, x25, #0x5a8
  4116d8:	ldr	x0, [x23]
  4116dc:	cbz	x0, 41170c <ferror@plt+0xe13c>
  4116e0:	ldr	x0, [x23, #8]
  4116e4:	tst	x19, x0
  4116e8:	b.eq	411704 <ferror@plt+0xe134>  // b.none
  4116ec:	mov	x1, x25
  4116f0:	mov	x0, x20
  4116f4:	bl	460290 <_obstack_memory_used@@Base+0x3ea0>
  4116f8:	ldr	x1, [x23]
  4116fc:	mov	x0, x20
  411700:	bl	460290 <_obstack_memory_used@@Base+0x3ea0>
  411704:	add	x23, x23, #0x28
  411708:	b	4116d8 <ferror@plt+0xe108>
  41170c:	mov	x19, x21
  411710:	mvn	x22, x22
  411714:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411718:	add	x21, x21, #0x325
  41171c:	ldr	x0, [x19]
  411720:	cbz	x0, 411758 <ferror@plt+0xe188>
  411724:	ldr	x0, [x19, #8]
  411728:	tst	x22, x0
  41172c:	b.eq	411750 <ferror@plt+0xe180>  // b.none
  411730:	tst	x24, x0
  411734:	b.ne	411750 <ferror@plt+0xe180>  // b.any
  411738:	mov	x1, x21
  41173c:	mov	x0, x20
  411740:	bl	460290 <_obstack_memory_used@@Base+0x3ea0>
  411744:	ldr	x1, [x19]
  411748:	mov	x0, x20
  41174c:	bl	460290 <_obstack_memory_used@@Base+0x3ea0>
  411750:	add	x19, x19, #0x28
  411754:	b	41171c <ferror@plt+0xe14c>
  411758:	mov	x0, x20
  41175c:	ldp	x19, x20, [sp, #16]
  411760:	ldp	x21, x22, [sp, #32]
  411764:	ldp	x23, x24, [sp, #48]
  411768:	ldr	x25, [sp, #64]
  41176c:	ldp	x29, x30, [sp], #80
  411770:	ret
  411774:	stp	x29, x30, [sp, #-240]!
  411778:	mov	x1, x0
  41177c:	mov	x29, sp
  411780:	stp	x19, x20, [sp, #16]
  411784:	stp	x21, x22, [sp, #32]
  411788:	mov	x21, x0
  41178c:	add	x0, sp, #0x50
  411790:	stp	x23, x24, [sp, #48]
  411794:	bl	4115e8 <ferror@plt+0xe018>
  411798:	add	x0, sp, #0x80
  41179c:	stp	x0, xzr, [sp, #112]
  4117a0:	add	x0, sp, #0xa0
  4117a4:	mov	x2, #0x0                   	// #0
  4117a8:	mov	w1, #0x2b                  	// #43
  4117ac:	strb	wzr, [sp, #128]
  4117b0:	str	x0, [sp, #144]
  4117b4:	add	x0, sp, #0x50
  4117b8:	str	xzr, [sp, #152]
  4117bc:	strb	wzr, [sp, #160]
  4117c0:	bl	460630 <_obstack_memory_used@@Base+0x4240>
  4117c4:	cmn	x0, #0x1
  4117c8:	b.eq	411880 <ferror@plt+0xe2b0>  // b.none
  4117cc:	mov	x2, x0
  4117d0:	add	x8, sp, #0xd0
  4117d4:	mov	x19, x0
  4117d8:	mov	x1, #0x0                   	// #0
  4117dc:	add	x0, sp, #0x50
  4117e0:	bl	4614d8 <_obstack_memory_used@@Base+0x50e8>
  4117e4:	add	x1, sp, #0xd0
  4117e8:	add	x0, sp, #0x90
  4117ec:	bl	45ec58 <_obstack_memory_used@@Base+0x2868>
  4117f0:	add	x0, sp, #0xd0
  4117f4:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  4117f8:	add	x8, sp, #0xd0
  4117fc:	mov	x1, x19
  411800:	add	x0, sp, #0x50
  411804:	mov	x2, #0xffffffffffffffff    	// #-1
  411808:	bl	4614d8 <_obstack_memory_used@@Base+0x50e8>
  41180c:	add	x1, sp, #0xd0
  411810:	add	x0, sp, #0x70
  411814:	bl	45ec58 <_obstack_memory_used@@Base+0x2868>
  411818:	add	x0, sp, #0xd0
  41181c:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411820:	ldp	x24, x22, [sp, #144]
  411824:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411828:	add	x19, x19, #0x950
  41182c:	mov	x20, x19
  411830:	ldr	w23, [x19, #32]
  411834:	cmp	w23, #0x6
  411838:	b.eq	411860 <ferror@plt+0xe290>  // b.none
  41183c:	ldr	x0, [x19, #8]
  411840:	cmp	x0, x22
  411844:	b.ne	411890 <ferror@plt+0xe2c0>  // b.any
  411848:	cbz	x22, 411860 <ferror@plt+0xe290>
  41184c:	ldr	x0, [x19]
  411850:	mov	x2, x22
  411854:	mov	x1, x24
  411858:	bl	4031e0 <memcmp@plt>
  41185c:	cbnz	w0, 411890 <ferror@plt+0xe2c0>
  411860:	add	x20, x20, #0x720
  411864:	ldr	w0, [x20]
  411868:	cmp	w0, #0x6
  41186c:	b.eq	411898 <ferror@plt+0xe2c8>  // b.none
  411870:	cmp	w0, w23
  411874:	b.eq	4118b0 <ferror@plt+0xe2e0>  // b.none
  411878:	add	x20, x20, #0x30
  41187c:	b	411864 <ferror@plt+0xe294>
  411880:	add	x1, sp, #0x50
  411884:	add	x0, sp, #0x90
  411888:	bl	45e8a0 <_obstack_memory_used@@Base+0x24b0>
  41188c:	b	411820 <ferror@plt+0xe250>
  411890:	add	x19, x19, #0x30
  411894:	b	411830 <ferror@plt+0xe260>
  411898:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  41189c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4118a0:	mov	x2, x21
  4118a4:	add	x1, x1, #0x329
  4118a8:	ldr	w0, [x0, #584]
  4118ac:	bl	422d58 <ferror@plt+0x1f788>
  4118b0:	ldr	x0, [x19, #40]
  4118b4:	str	x0, [sp, #72]
  4118b8:	ldr	x0, [sp, #112]
  4118bc:	add	x1, sp, #0x48
  4118c0:	mov	x2, #0x0                   	// #0
  4118c4:	bl	411474 <ferror@plt+0xdea4>
  4118c8:	ldr	x1, [x20, #40]
  4118cc:	add	x8, sp, #0xd0
  4118d0:	ldr	x0, [sp, #72]
  4118d4:	bl	411634 <ferror@plt+0xe064>
  4118d8:	add	x2, x20, #0x8
  4118dc:	mov	x1, #0x0                   	// #0
  4118e0:	add	x0, sp, #0xd0
  4118e4:	bl	45fb90 <_obstack_memory_used@@Base+0x37a0>
  4118e8:	mov	x1, x0
  4118ec:	add	x0, sp, #0xb0
  4118f0:	bl	45eb70 <_obstack_memory_used@@Base+0x2780>
  4118f4:	add	x0, sp, #0xd0
  4118f8:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  4118fc:	ldr	x0, [sp, #176]
  411900:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  411904:	mov	x19, x0
  411908:	add	x0, sp, #0xb0
  41190c:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411910:	add	x0, sp, #0x90
  411914:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411918:	add	x0, sp, #0x70
  41191c:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411920:	add	x0, sp, #0x50
  411924:	bl	45e5e8 <_obstack_memory_used@@Base+0x21f8>
  411928:	mov	x0, x19
  41192c:	ldp	x19, x20, [sp, #16]
  411930:	ldp	x21, x22, [sp, #32]
  411934:	ldp	x23, x24, [sp, #48]
  411938:	ldp	x29, x30, [sp], #240
  41193c:	ret
  411940:	cbnz	w0, 411964 <ferror@plt+0xe394>
  411944:	stp	x29, x30, [sp, #-16]!
  411948:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  41194c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411950:	mov	x29, sp
  411954:	add	x2, x2, #0x349
  411958:	add	x0, x0, #0x35e
  41195c:	mov	w1, #0x234                 	// #564
  411960:	bl	403600 <ferror@plt+0x30>
  411964:	add	x0, x1, w0, sxtw #3
  411968:	ldur	x0, [x0, #-8]
  41196c:	b	411774 <ferror@plt+0xe1a4>
  411970:	stp	x29, x30, [sp, #-64]!
  411974:	mov	x29, sp
  411978:	stp	x19, x20, [sp, #16]
  41197c:	mov	x19, x0
  411980:	mov	x20, x1
  411984:	str	x21, [sp, #32]
  411988:	mov	x21, x2
  41198c:	cbnz	x1, 4119a0 <ferror@plt+0xe3d0>
  411990:	cbz	x2, 4119a0 <ferror@plt+0xe3d0>
  411994:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411998:	add	x0, x0, #0x397
  41199c:	bl	4036fc <ferror@plt+0x12c>
  4119a0:	sub	x0, x21, x20
  4119a4:	str	x0, [sp, #56]
  4119a8:	cmp	x0, #0xf
  4119ac:	b.ls	4119cc <ferror@plt+0xe3fc>  // b.plast
  4119b0:	add	x1, sp, #0x38
  4119b4:	mov	x0, x19
  4119b8:	mov	x2, #0x0                   	// #0
  4119bc:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  4119c0:	str	x0, [x19]
  4119c4:	ldr	x0, [sp, #56]
  4119c8:	str	x0, [x19, #16]
  4119cc:	ldr	x0, [x19]
  4119d0:	mov	x2, x21
  4119d4:	mov	x1, x20
  4119d8:	bl	45e850 <_obstack_memory_used@@Base+0x2460>
  4119dc:	ldr	x1, [x19]
  4119e0:	ldr	x0, [sp, #56]
  4119e4:	str	x0, [x19, #8]
  4119e8:	strb	wzr, [x1, x0]
  4119ec:	ldp	x19, x20, [sp, #16]
  4119f0:	ldr	x21, [sp, #32]
  4119f4:	ldp	x29, x30, [sp], #64
  4119f8:	ret
  4119fc:	stp	x29, x30, [sp, #-80]!
  411a00:	mov	x29, sp
  411a04:	stp	x19, x20, [sp, #16]
  411a08:	mov	x20, x0
  411a0c:	stp	x21, x22, [sp, #32]
  411a10:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411a14:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411a18:	add	x21, x21, #0x3c1
  411a1c:	add	x22, x22, #0x3c6
  411a20:	stp	x23, x24, [sp, #48]
  411a24:	mov	w24, #0x24                  	// #36
  411a28:	str	x25, [sp, #64]
  411a2c:	ldrb	w19, [x20]
  411a30:	cmp	w19, #0x40
  411a34:	ccmp	w19, w24, #0x4, ne  // ne = any
  411a38:	b.ne	411afc <ferror@plt+0xe52c>  // b.any
  411a3c:	mov	x1, #0x1                   	// #1
  411a40:	ldrb	w2, [x20, x1]
  411a44:	sub	x25, x1, #0x1
  411a48:	add	x23, x20, x1
  411a4c:	sxtw	x0, w1
  411a50:	cbz	w2, 411a60 <ferror@plt+0xe490>
  411a54:	add	x1, x1, #0x1
  411a58:	cmp	w2, #0x2f
  411a5c:	b.ne	411a40 <ferror@plt+0xe470>  // b.any
  411a60:	add	x0, x0, #0xf
  411a64:	mov	x2, x25
  411a68:	and	x0, x0, #0xfffffffffffffff0
  411a6c:	add	x1, x20, #0x1
  411a70:	sub	sp, sp, x0
  411a74:	mov	x3, sp
  411a78:	mov	x0, x3
  411a7c:	bl	402cd0 <memcpy@plt>
  411a80:	strb	wzr, [x0, x25]
  411a84:	cmp	w19, #0x40
  411a88:	b.ne	411af0 <ferror@plt+0xe520>  // b.any
  411a8c:	mov	x1, x22
  411a90:	mov	x2, #0x0                   	// #0
  411a94:	bl	45a668 <ferror@plt+0x57098>
  411a98:	mov	x25, x0
  411a9c:	bl	4034f0 <getenv@plt>
  411aa0:	mov	x19, x0
  411aa4:	cbnz	x0, 411ab0 <ferror@plt+0xe4e0>
  411aa8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411aac:	ldr	x19, [x0, #728]
  411ab0:	mov	x0, x25
  411ab4:	bl	4032a0 <free@plt>
  411ab8:	cbnz	x19, 411acc <ferror@plt+0xe4fc>
  411abc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411ac0:	ldr	x19, [x0, #728]
  411ac4:	cmp	x19, #0x0
  411ac8:	csel	x19, x19, x21, ne  // ne = any
  411acc:	mov	x1, x23
  411ad0:	mov	x2, #0x0                   	// #0
  411ad4:	mov	x0, x19
  411ad8:	bl	45a668 <ferror@plt+0x57098>
  411adc:	mov	x19, x0
  411ae0:	mov	x0, x20
  411ae4:	mov	x20, x19
  411ae8:	bl	4032a0 <free@plt>
  411aec:	b	411a2c <ferror@plt+0xe45c>
  411af0:	bl	4034f0 <getenv@plt>
  411af4:	mov	x19, x0
  411af8:	b	411ac4 <ferror@plt+0xe4f4>
  411afc:	mov	sp, x29
  411b00:	mov	x0, x20
  411b04:	ldp	x19, x20, [sp, #16]
  411b08:	ldp	x21, x22, [sp, #32]
  411b0c:	ldp	x23, x24, [sp, #48]
  411b10:	ldr	x25, [sp, #64]
  411b14:	ldp	x29, x30, [sp], #80
  411b18:	ret
  411b1c:	stp	x29, x30, [sp, #-48]!
  411b20:	mov	x29, sp
  411b24:	stp	x19, x20, [sp, #16]
  411b28:	mov	x20, x0
  411b2c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411b30:	stp	x21, x22, [sp, #32]
  411b34:	mov	x19, x1
  411b38:	ldr	x22, [x0, #728]
  411b3c:	mov	x0, x22
  411b40:	bl	402d50 <strlen@plt>
  411b44:	sxtw	x21, w0
  411b48:	mov	x1, x22
  411b4c:	mov	x2, x21
  411b50:	mov	x0, x20
  411b54:	bl	45a8c0 <ferror@plt+0x572f0>
  411b58:	cbnz	w0, 411bb0 <ferror@plt+0xe5e0>
  411b5c:	ldrb	w0, [x20, x21]
  411b60:	add	x22, x20, x21
  411b64:	cmp	w0, #0x2f
  411b68:	b.eq	411b70 <ferror@plt+0xe5a0>  // b.none
  411b6c:	cbnz	w0, 411bb0 <ferror@plt+0xe5e0>
  411b70:	cbz	x19, 411bb0 <ferror@plt+0xe5e0>
  411b74:	ldrb	w0, [x19]
  411b78:	cmp	w0, #0x24
  411b7c:	b.ne	411c48 <ferror@plt+0xe678>  // b.any
  411b80:	mov	w21, #0x0                   	// #0
  411b84:	mov	x1, x22
  411b88:	mov	x0, x19
  411b8c:	mov	x2, #0x0                   	// #0
  411b90:	bl	45a668 <ferror@plt+0x57098>
  411b94:	mov	x20, x0
  411b98:	cbz	w21, 411ba4 <ferror@plt+0xe5d4>
  411b9c:	mov	x0, x19
  411ba0:	bl	4032a0 <free@plt>
  411ba4:	mov	x0, x20
  411ba8:	bl	4119fc <ferror@plt+0xe42c>
  411bac:	b	411bb8 <ferror@plt+0xe5e8>
  411bb0:	mov	x0, x20
  411bb4:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  411bb8:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411bbc:	mov	x20, x0
  411bc0:	add	x21, x21, #0x288
  411bc4:	mov	w1, #0x2e                  	// #46
  411bc8:	bl	4032f0 <strchr@plt>
  411bcc:	mov	x19, x0
  411bd0:	cbz	x0, 411c7c <ferror@plt+0xe6ac>
  411bd4:	ldrb	w22, [x0, #1]
  411bd8:	cmp	w22, #0x2e
  411bdc:	b.ne	411cec <ferror@plt+0xe71c>  // b.any
  411be0:	ldrb	w0, [x0, #2]
  411be4:	cmp	w0, #0x2f
  411be8:	b.ne	411cec <ferror@plt+0xe71c>  // b.any
  411bec:	cmp	x20, x19
  411bf0:	b.eq	411cec <ferror@plt+0xe71c>  // b.none
  411bf4:	ldurb	w0, [x19, #-1]
  411bf8:	cmp	w0, #0x2f
  411bfc:	b.ne	411cec <ferror@plt+0xe71c>  // b.any
  411c00:	strb	wzr, [x19]
  411c04:	ldrb	w0, [x21, #74]
  411c08:	cbz	w0, 411c68 <ferror@plt+0xe698>
  411c0c:	mov	x0, x19
  411c10:	sub	x0, x0, #0x1
  411c14:	ldrb	w1, [x0]
  411c18:	cmp	x20, x0
  411c1c:	b.eq	411c40 <ferror@plt+0xe670>  // b.none
  411c20:	cmp	w1, #0x2f
  411c24:	b.eq	411c10 <ferror@plt+0xe640>  // b.none
  411c28:	ldurb	w1, [x0, #-1]
  411c2c:	cmp	w1, #0x2f
  411c30:	b.eq	411c90 <ferror@plt+0xe6c0>  // b.none
  411c34:	sub	x0, x0, #0x1
  411c38:	cmp	x20, x0
  411c3c:	b.ne	411c28 <ferror@plt+0xe658>  // b.any
  411c40:	mov	x0, x20
  411c44:	b	411c9c <ferror@plt+0xe6cc>
  411c48:	mov	x1, x19
  411c4c:	mov	x2, #0x0                   	// #0
  411c50:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  411c54:	mov	w21, #0x1                   	// #1
  411c58:	add	x0, x0, #0xe3e
  411c5c:	bl	45a668 <ferror@plt+0x57098>
  411c60:	mov	x19, x0
  411c64:	b	411b84 <ferror@plt+0xe5b4>
  411c68:	mov	x0, x20
  411c6c:	mov	w1, #0x1                   	// #1
  411c70:	bl	403190 <access@plt>
  411c74:	cbnz	w0, 411c0c <ferror@plt+0xe63c>
  411c78:	strb	w22, [x19]
  411c7c:	mov	x0, x20
  411c80:	ldp	x19, x20, [sp, #16]
  411c84:	ldp	x21, x22, [sp, #32]
  411c88:	ldp	x29, x30, [sp], #48
  411c8c:	ret
  411c90:	ldrb	w1, [x0]
  411c94:	cmp	w1, #0x2e
  411c98:	b.eq	411c10 <ferror@plt+0xe640>  // b.none
  411c9c:	ldrb	w1, [x0]
  411ca0:	sub	w1, w1, #0x2e
  411ca4:	and	w1, w1, #0xff
  411ca8:	cmp	w1, #0x1
  411cac:	b.hi	411cbc <ferror@plt+0xe6ec>  // b.pmore
  411cb0:	mov	w0, #0x2e                  	// #46
  411cb4:	strb	w0, [x19]
  411cb8:	b	411c7c <ferror@plt+0xe6ac>
  411cbc:	add	x19, x19, #0x3
  411cc0:	ldrb	w1, [x19]
  411cc4:	mov	x3, x19
  411cc8:	add	x19, x19, #0x1
  411ccc:	cmp	w1, #0x2f
  411cd0:	b.eq	411cc0 <ferror@plt+0xe6f0>  // b.none
  411cd4:	mov	x1, #0x0                   	// #0
  411cd8:	ldrb	w2, [x3, x1]
  411cdc:	strb	w2, [x0, x1]
  411ce0:	add	x1, x1, #0x1
  411ce4:	cbnz	w2, 411cd8 <ferror@plt+0xe708>
  411ce8:	b	411bc4 <ferror@plt+0xe5f4>
  411cec:	add	x0, x19, #0x1
  411cf0:	b	411bc4 <ferror@plt+0xe5f4>
  411cf4:	stp	x29, x30, [sp, #-48]!
  411cf8:	mov	x29, sp
  411cfc:	stp	x19, x20, [sp, #16]
  411d00:	sxtw	x19, w1
  411d04:	str	x21, [sp, #32]
  411d08:	mov	x21, x0
  411d0c:	add	w0, w19, #0x1
  411d10:	sxtw	x0, w0
  411d14:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  411d18:	mov	x2, x19
  411d1c:	mov	x20, x0
  411d20:	mov	x1, x21
  411d24:	bl	402cd0 <memcpy@plt>
  411d28:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411d2c:	strb	wzr, [x20, x19]
  411d30:	str	x20, [x0, #728]
  411d34:	ldp	x19, x20, [sp, #16]
  411d38:	ldr	x21, [sp, #32]
  411d3c:	ldp	x29, x30, [sp], #48
  411d40:	ret
  411d44:	stp	x29, x30, [sp, #-16]!
  411d48:	mov	x6, x1
  411d4c:	mov	w5, w2
  411d50:	mov	x29, sp
  411d54:	cmp	w0, w2
  411d58:	b.ge	411d78 <ferror@plt+0xe7a8>  // b.tcont
  411d5c:	cbz	w2, 411d78 <ferror@plt+0xe7a8>
  411d60:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411d64:	add	x0, x0, #0x3cc
  411d68:	bl	4221dc <ferror@plt+0x1ec0c>
  411d6c:	mov	w0, #0x0                   	// #0
  411d70:	ldp	x29, x30, [sp], #16
  411d74:	ret
  411d78:	cmp	w5, w3
  411d7c:	b.ge	411d9c <ferror@plt+0xe7cc>  // b.tcont
  411d80:	cmp	w0, w3
  411d84:	b.le	411d9c <ferror@plt+0xe7cc>
  411d88:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411d8c:	mov	w2, w3
  411d90:	mov	x1, x6
  411d94:	add	x0, x0, #0x3f1
  411d98:	b	411d68 <ferror@plt+0xe798>
  411d9c:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411da0:	ldp	x29, x30, [sp], #16
  411da4:	ldr	x2, [x1, #680]
  411da8:	mov	w1, w4
  411dac:	mov	x16, x2
  411db0:	br	x16
  411db4:	stp	x29, x30, [sp, #-64]!
  411db8:	mov	x29, sp
  411dbc:	stp	x21, x22, [sp, #32]
  411dc0:	mov	x22, x0
  411dc4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  411dc8:	stp	x19, x20, [sp, #16]
  411dcc:	add	x20, x0, #0x1c0
  411dd0:	ldrb	w0, [x0, #448]
  411dd4:	str	x23, [sp, #48]
  411dd8:	cbz	w0, 411df4 <ferror@plt+0xe824>
  411ddc:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411de0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411de4:	add	x2, x2, #0x416
  411de8:	add	x0, x0, #0x421
  411dec:	mov	w1, #0x47                  	// #71
  411df0:	bl	403600 <ferror@plt+0x30>
  411df4:	mov	x21, x1
  411df8:	mov	x23, #0x28                  	// #40
  411dfc:	ldp	x1, x0, [x20, #8]
  411e00:	add	x1, x21, x1
  411e04:	mul	x1, x1, x23
  411e08:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  411e0c:	str	x0, [x20, #16]
  411e10:	ldr	x19, [x20, #8]
  411e14:	mul	x2, x21, x23
  411e18:	mov	x1, x22
  411e1c:	madd	x0, x19, x23, x0
  411e20:	add	x19, x19, x21
  411e24:	bl	402cd0 <memcpy@plt>
  411e28:	str	x19, [x20, #8]
  411e2c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411e30:	ldr	x0, [x0, #784]
  411e34:	ldr	x1, [x0]
  411e38:	cbnz	x1, 411e40 <ferror@plt+0xe870>
  411e3c:	bl	420d50 <ferror@plt+0x1d780>
  411e40:	ldr	x20, [x20, #8]
  411e44:	mov	x19, #0x28                  	// #40
  411e48:	sub	x20, x20, x21
  411e4c:	madd	x19, x20, x19, x22
  411e50:	cmp	x20, x21
  411e54:	b.cs	411e78 <ferror@plt+0xe8a8>  // b.hs, b.nlast
  411e58:	ldp	w0, w2, [x19, #8]
  411e5c:	mov	w4, w20
  411e60:	ldr	w3, [x19, #16]
  411e64:	add	x20, x20, #0x1
  411e68:	ldr	x1, [x19]
  411e6c:	add	x19, x19, #0x28
  411e70:	bl	411d44 <ferror@plt+0xe774>
  411e74:	b	411e50 <ferror@plt+0xe880>
  411e78:	ldp	x19, x20, [sp, #16]
  411e7c:	ldp	x21, x22, [sp, #32]
  411e80:	ldr	x23, [sp, #48]
  411e84:	ldp	x29, x30, [sp], #64
  411e88:	ret
  411e8c:	stp	x29, x30, [sp, #-16]!
  411e90:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  411e94:	mov	x29, sp
  411e98:	ldrb	w0, [x0, #448]
  411e9c:	cbz	w0, 411eb8 <ferror@plt+0xe8e8>
  411ea0:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411ea4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411ea8:	add	x2, x2, #0x434
  411eac:	add	x0, x0, #0x421
  411eb0:	mov	w1, #0x66                  	// #102
  411eb4:	bl	403600 <ferror@plt+0x30>
  411eb8:	mov	x1, #0xdd                  	// #221
  411ebc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x25c10>
  411ec0:	add	x0, x0, #0xd60
  411ec4:	bl	411db4 <ferror@plt+0xe7e4>
  411ec8:	ldp	x29, x30, [sp], #16
  411ecc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  411ed0:	ldr	x0, [x0, #672]
  411ed4:	mov	x16, x0
  411ed8:	br	x16
  411edc:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  411ee0:	mov	w1, #0x1                   	// #1
  411ee4:	strb	w1, [x0, #448]
  411ee8:	ret
  411eec:	stp	x29, x30, [sp, #-32]!
  411ef0:	mov	x29, sp
  411ef4:	stp	x19, x20, [sp, #16]
  411ef8:	adrp	x20, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  411efc:	add	x19, x20, #0x1c0
  411f00:	ldr	x0, [x19, #16]
  411f04:	bl	4032a0 <free@plt>
  411f08:	strb	wzr, [x20, #448]
  411f0c:	stp	xzr, xzr, [x19, #8]
  411f10:	ldp	x19, x20, [sp, #16]
  411f14:	ldp	x29, x30, [sp], #32
  411f18:	ret
  411f1c:	stp	x29, x30, [sp, #-64]!
  411f20:	adrp	x2, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  411f24:	add	x2, x2, #0x1c0
  411f28:	mov	x29, sp
  411f2c:	stp	x21, x22, [sp, #32]
  411f30:	mov	x21, x1
  411f34:	stp	x23, x24, [sp, #48]
  411f38:	mov	x24, #0x28                  	// #40
  411f3c:	ldp	x22, x23, [x2, #8]
  411f40:	stp	x19, x20, [sp, #16]
  411f44:	mov	x20, x0
  411f48:	mov	x19, #0x0                   	// #0
  411f4c:	cmp	x22, x19
  411f50:	b.eq	411f8c <ferror@plt+0xe9bc>  // b.none
  411f54:	mul	x0, x19, x24
  411f58:	mov	x1, x20
  411f5c:	ldr	x0, [x23, x0]
  411f60:	bl	403220 <strcmp@plt>
  411f64:	cbnz	w0, 411f84 <ferror@plt+0xe9b4>
  411f68:	mov	w0, #0x1                   	// #1
  411f6c:	str	w19, [x21]
  411f70:	ldp	x19, x20, [sp, #16]
  411f74:	ldp	x21, x22, [sp, #32]
  411f78:	ldp	x23, x24, [sp, #48]
  411f7c:	ldp	x29, x30, [sp], #64
  411f80:	ret
  411f84:	add	x19, x19, #0x1
  411f88:	b	411f4c <ferror@plt+0xe97c>
  411f8c:	mov	w0, #0x0                   	// #0
  411f90:	b	411f70 <ferror@plt+0xe9a0>
  411f94:	stp	x29, x30, [sp, #-96]!
  411f98:	mov	x29, sp
  411f9c:	stp	x19, x20, [sp, #16]
  411fa0:	stp	x21, x22, [sp, #32]
  411fa4:	stp	x23, x24, [sp, #48]
  411fa8:	stp	x25, x26, [sp, #64]
  411fac:	stp	x27, x28, [sp, #80]
  411fb0:	cbnz	x0, 411fcc <ferror@plt+0xe9fc>
  411fb4:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  411fb8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x25c10>
  411fbc:	add	x2, x2, #0x447
  411fc0:	add	x0, x0, #0xd47
  411fc4:	mov	w1, #0x40                  	// #64
  411fc8:	bl	403600 <ferror@plt+0x30>
  411fcc:	mov	x24, x0
  411fd0:	adrp	x25, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  411fd4:	bl	412318 <ferror@plt+0xed48>
  411fd8:	add	x25, x25, #0x1c0
  411fdc:	mov	x19, x0
  411fe0:	mov	w21, #0xffffffff            	// #-1
  411fe4:	mov	x22, #0x0                   	// #0
  411fe8:	mov	x23, #0x0                   	// #0
  411fec:	ldr	x0, [x25, #8]
  411ff0:	cmp	x0, x23
  411ff4:	b.ls	41206c <ferror@plt+0xea9c>  // b.plast
  411ff8:	mov	x0, #0x28                  	// #40
  411ffc:	ldr	x1, [x25, #16]
  412000:	mul	x0, x23, x0
  412004:	ldr	x27, [x1, x0]
  412008:	mov	x0, x27
  41200c:	bl	412318 <ferror@plt+0xed48>
  412010:	subs	w28, w0, w19
  412014:	mov	x20, x0
  412018:	cneg	w28, w28, mi  // mi = first
  41201c:	cmp	w28, w21
  412020:	b.cs	412064 <ferror@plt+0xea94>  // b.hs, b.nlast
  412024:	mov	x1, x0
  412028:	mov	x0, x19
  41202c:	bl	420078 <ferror@plt+0x1caa8>
  412030:	cmp	w28, w0
  412034:	b.hi	412064 <ferror@plt+0xea94>  // b.pmore
  412038:	cbz	x27, 411fb4 <ferror@plt+0xe9e4>
  41203c:	mov	w3, w20
  412040:	mov	x2, x27
  412044:	mov	w1, w19
  412048:	mov	x0, x24
  41204c:	bl	41fe98 <ferror@plt+0x1c8c8>
  412050:	cmp	w0, w21
  412054:	b.cs	412064 <ferror@plt+0xea94>  // b.hs, b.nlast
  412058:	mov	x26, x20
  41205c:	mov	w21, w0
  412060:	mov	x22, x27
  412064:	add	x23, x23, #0x1
  412068:	b	411fec <ferror@plt+0xea1c>
  41206c:	cbnz	x22, 412098 <ferror@plt+0xeac8>
  412070:	cbnz	w21, 412078 <ferror@plt+0xeaa8>
  412074:	mov	x22, #0x0                   	// #0
  412078:	mov	x0, x22
  41207c:	ldp	x19, x20, [sp, #16]
  412080:	ldp	x21, x22, [sp, #32]
  412084:	ldp	x23, x24, [sp, #48]
  412088:	ldp	x25, x26, [sp, #64]
  41208c:	ldp	x27, x28, [sp, #80]
  412090:	ldp	x29, x30, [sp], #96
  412094:	ret
  412098:	mov	x1, x26
  41209c:	mov	x0, x19
  4120a0:	bl	420078 <ferror@plt+0x1caa8>
  4120a4:	cmp	w0, w21
  4120a8:	b.cs	412070 <ferror@plt+0xeaa0>  // b.hs, b.nlast
  4120ac:	b	412074 <ferror@plt+0xeaa4>
  4120b0:	stp	x29, x30, [sp, #-64]!
  4120b4:	mov	x29, sp
  4120b8:	stp	x21, x22, [sp, #32]
  4120bc:	mov	x21, x1
  4120c0:	adrp	x1, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4120c4:	stp	x19, x20, [sp, #16]
  4120c8:	mov	x19, x2
  4120cc:	mov	w2, #0x28                  	// #40
  4120d0:	ldr	x1, [x1, #464]
  4120d4:	smaddl	x0, w0, w2, x1
  4120d8:	ldr	x22, [x0, #32]
  4120dc:	str	x23, [sp, #48]
  4120e0:	cbz	x22, 412118 <ferror@plt+0xeb48>
  4120e4:	mov	w0, #0xffffffff            	// #-1
  4120e8:	mov	x20, #0x0                   	// #0
  4120ec:	str	w0, [x19]
  4120f0:	ldr	x0, [x22, x20, lsl #3]
  4120f4:	mov	w23, w20
  4120f8:	cbz	x0, 412110 <ferror@plt+0xeb40>
  4120fc:	mov	x1, x21
  412100:	add	x20, x20, #0x1
  412104:	bl	403220 <strcmp@plt>
  412108:	cbnz	w0, 4120f0 <ferror@plt+0xeb20>
  41210c:	str	w23, [x19]
  412110:	mov	w0, #0x1                   	// #1
  412114:	b	41211c <ferror@plt+0xeb4c>
  412118:	mov	w0, #0x0                   	// #0
  41211c:	ldp	x19, x20, [sp, #16]
  412120:	ldp	x21, x22, [sp, #32]
  412124:	ldr	x23, [sp, #48]
  412128:	ldp	x29, x30, [sp], #64
  41212c:	ret
  412130:	stp	x29, x30, [sp, #-80]!
  412134:	cmn	w1, #0x1
  412138:	mov	x29, sp
  41213c:	stp	x19, x20, [sp, #16]
  412140:	stp	x21, x22, [sp, #32]
  412144:	str	x23, [sp, #48]
  412148:	b.ne	412164 <ferror@plt+0xeb94>  // b.any
  41214c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  412150:	add	x2, x2, #0x452
  412154:	mov	w1, #0xea                  	// #234
  412158:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  41215c:	add	x0, x0, #0x421
  412160:	bl	403600 <ferror@plt+0x30>
  412164:	mov	x19, x0
  412168:	mov	w20, w1
  41216c:	mov	x22, x2
  412170:	mov	x21, x3
  412174:	add	x1, sp, #0x4c
  412178:	bl	411f1c <ferror@plt+0xe94c>
  41217c:	tst	w0, #0xff
  412180:	b.ne	4121a8 <ferror@plt+0xebd8>  // b.any
  412184:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  412188:	mov	x1, x19
  41218c:	add	x0, x0, #0x462
  412190:	bl	4221dc <ferror@plt+0x1ec0c>
  412194:	ldp	x19, x20, [sp, #16]
  412198:	ldp	x21, x22, [sp, #32]
  41219c:	ldr	x23, [sp, #48]
  4121a0:	ldp	x29, x30, [sp], #80
  4121a4:	ret
  4121a8:	ldr	w4, [sp, #76]
  4121ac:	adrp	x23, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4121b0:	add	x1, x23, #0x1c0
  4121b4:	mov	x0, #0x28                  	// #40
  4121b8:	mov	w19, w4
  4121bc:	ldr	x1, [x1, #16]
  4121c0:	mul	x0, x19, x0
  4121c4:	add	x2, x1, x0
  4121c8:	ldr	x1, [x1, x0]
  4121cc:	mov	w0, w20
  4121d0:	ldr	w3, [x2, #16]
  4121d4:	ldr	w2, [x2, #12]
  4121d8:	bl	411d44 <ferror@plt+0xe774>
  4121dc:	tst	w0, #0xff
  4121e0:	b.eq	412194 <ferror@plt+0xebc4>  // b.none
  4121e4:	ldrb	w0, [x23, #448]
  4121e8:	cbnz	w0, 4121fc <ferror@plt+0xec2c>
  4121ec:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4121f0:	mov	w1, #0x8c                  	// #140
  4121f4:	add	x2, x2, #0x478
  4121f8:	b	412158 <ferror@plt+0xeb88>
  4121fc:	lsl	x19, x19, #2
  412200:	mov	w0, #0x1                   	// #1
  412204:	str	w20, [x22, x19]
  412208:	str	w0, [x21, x19]
  41220c:	b	412194 <ferror@plt+0xebc4>
  412210:	ldr	w3, [x3, w0, sxtw #2]
  412214:	cbnz	w3, 41224c <ferror@plt+0xec7c>
  412218:	adrp	x3, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41221c:	mov	w0, w0
  412220:	ldrb	w3, [x3, #448]
  412224:	cbnz	w3, 412248 <ferror@plt+0xec78>
  412228:	stp	x29, x30, [sp, #-16]!
  41222c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  412230:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  412234:	mov	x29, sp
  412238:	add	x2, x2, #0x478
  41223c:	add	x0, x0, #0x421
  412240:	mov	w1, #0x8c                  	// #140
  412244:	bl	403600 <ferror@plt+0x30>
  412248:	str	w1, [x2, x0, lsl #2]
  41224c:	ret
  412250:	adrp	x2, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  412254:	add	x3, x2, #0x1c0
  412258:	ldrb	w2, [x2, #448]
  41225c:	cbz	w2, 412280 <ferror@plt+0xecb0>
  412260:	stp	x29, x30, [sp, #-16]!
  412264:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  412268:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  41226c:	mov	x29, sp
  412270:	add	x2, x2, #0x491
  412274:	add	x0, x0, #0x421
  412278:	mov	w1, #0x10c                 	// #268
  41227c:	bl	403600 <ferror@plt+0x30>
  412280:	ldr	x2, [x3, #16]
  412284:	mov	w3, #0x28                  	// #40
  412288:	smaddl	x0, w0, w3, x2
  41228c:	str	w1, [x0, #8]
  412290:	ret
  412294:	adrp	x1, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  412298:	mov	w2, #0x28                  	// #40
  41229c:	ldr	x1, [x1, #464]
  4122a0:	smaddl	x0, w0, w2, x1
  4122a4:	ldr	w0, [x0, #8]
  4122a8:	ret
  4122ac:	adrp	x2, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4122b0:	add	x1, x2, #0x1c0
  4122b4:	ldrb	w2, [x2, #448]
  4122b8:	cbz	w2, 4122e8 <ferror@plt+0xed18>
  4122bc:	ldp	x5, x2, [x1, #8]
  4122c0:	mov	x4, #0x28                  	// #40
  4122c4:	mov	x1, #0x0                   	// #0
  4122c8:	add	x2, x2, #0x8
  4122cc:	cmp	x5, x1
  4122d0:	b.eq	412308 <ferror@plt+0xed38>  // b.none
  4122d4:	mul	x3, x1, x4
  4122d8:	ldr	w3, [x2, x3]
  4122dc:	str	w3, [x0, x1, lsl #2]
  4122e0:	add	x1, x1, #0x1
  4122e4:	b	4122cc <ferror@plt+0xecfc>
  4122e8:	stp	x29, x30, [sp, #-16]!
  4122ec:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4122f0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4122f4:	mov	x29, sp
  4122f8:	add	x2, x2, #0x4a9
  4122fc:	add	x0, x0, #0x421
  412300:	mov	w1, #0x121                 	// #289
  412304:	bl	403600 <ferror@plt+0x30>
  412308:	ret
  41230c:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  412310:	ldr	x0, [x0, #456]
  412314:	ret
  412318:	cbnz	x0, 41233c <ferror@plt+0xed6c>
  41231c:	stp	x29, x30, [sp, #-16]!
  412320:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x25c10>
  412324:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x25c10>
  412328:	mov	x29, sp
  41232c:	add	x2, x2, #0xd3c
  412330:	add	x0, x0, #0xd47
  412334:	mov	w1, #0x3a                  	// #58
  412338:	bl	403600 <ferror@plt+0x30>
  41233c:	b	402d50 <strlen@plt>
  412340:	ldr	w3, [x1, #1656]
  412344:	cbnz	w3, 41234c <ferror@plt+0xed7c>
  412348:	str	w2, [x0, #1656]
  41234c:	ldr	w3, [x1, #2808]
  412350:	cbnz	w3, 412358 <ferror@plt+0xed88>
  412354:	str	w2, [x0, #2808]
  412358:	ldr	w3, [x1, #3384]
  41235c:	cbnz	w3, 412364 <ferror@plt+0xed94>
  412360:	str	w2, [x0, #3384]
  412364:	ldr	w3, [x1, #2680]
  412368:	cbnz	w3, 412370 <ferror@plt+0xeda0>
  41236c:	str	w2, [x0, #2680]
  412370:	ldr	w3, [x1, #3212]
  412374:	cbnz	w3, 41237c <ferror@plt+0xedac>
  412378:	str	w2, [x0, #3212]
  41237c:	ldr	w3, [x1, #3452]
  412380:	cbnz	w3, 412388 <ferror@plt+0xedb8>
  412384:	str	w2, [x0, #3452]
  412388:	ldr	w3, [x1, #2252]
  41238c:	cbnz	w3, 412394 <ferror@plt+0xedc4>
  412390:	str	w2, [x0, #2252]
  412394:	ldr	w3, [x1, #2284]
  412398:	cbnz	w3, 4123a0 <ferror@plt+0xedd0>
  41239c:	str	w2, [x0, #2284]
  4123a0:	ldr	w3, [x1, #2288]
  4123a4:	cbnz	w3, 4123b8 <ferror@plt+0xede8>
  4123a8:	cbz	w2, 4123b8 <ferror@plt+0xede8>
  4123ac:	ldr	w3, [x0, #2284]
  4123b0:	cbz	w3, 4123b8 <ferror@plt+0xede8>
  4123b4:	str	w2, [x0, #2288]
  4123b8:	ldr	w3, [x1, #2280]
  4123bc:	cbnz	w3, 4123d0 <ferror@plt+0xee00>
  4123c0:	cbz	w2, 4123d0 <ferror@plt+0xee00>
  4123c4:	ldr	w3, [x0, #2284]
  4123c8:	cbz	w3, 4123d0 <ferror@plt+0xee00>
  4123cc:	str	w2, [x0, #2280]
  4123d0:	ldr	w3, [x1, #2736]
  4123d4:	cbnz	w3, 4123dc <ferror@plt+0xee0c>
  4123d8:	str	w2, [x0, #2736]
  4123dc:	ldr	w3, [x1, #3084]
  4123e0:	cbnz	w3, 4123e8 <ferror@plt+0xee18>
  4123e4:	str	w2, [x0, #3084]
  4123e8:	ldr	w3, [x1, #3392]
  4123ec:	cbnz	w3, 4123f4 <ferror@plt+0xee24>
  4123f0:	str	w2, [x0, #3392]
  4123f4:	ldr	w3, [x1, #2116]
  4123f8:	cbnz	w3, 412400 <ferror@plt+0xee30>
  4123fc:	str	w2, [x0, #2116]
  412400:	ldr	w3, [x1, #3300]
  412404:	cbnz	w3, 41240c <ferror@plt+0xee3c>
  412408:	str	w2, [x0, #3300]
  41240c:	ldr	w3, [x1, #3340]
  412410:	cbnz	w3, 412418 <ferror@plt+0xee48>
  412414:	str	w2, [x0, #3340]
  412418:	ldr	w3, [x1, #3440]
  41241c:	cbnz	w3, 412424 <ferror@plt+0xee54>
  412420:	str	w2, [x0, #3440]
  412424:	ldr	w3, [x1, #3432]
  412428:	cbnz	w3, 412434 <ferror@plt+0xee64>
  41242c:	mov	w3, #0x2                   	// #2
  412430:	str	w3, [x0, #3432]
  412434:	ldr	w3, [x1, #3276]
  412438:	cbnz	w3, 412440 <ferror@plt+0xee70>
  41243c:	str	w2, [x0, #3276]
  412440:	ldr	w3, [x1, #2440]
  412444:	cbnz	w3, 41244c <ferror@plt+0xee7c>
  412448:	str	w2, [x0, #2440]
  41244c:	ldr	w3, [x1, #2452]
  412450:	cbnz	w3, 412458 <ferror@plt+0xee88>
  412454:	str	w2, [x0, #2452]
  412458:	ldr	w1, [x1, #3280]
  41245c:	cbnz	w1, 412464 <ferror@plt+0xee94>
  412460:	str	w2, [x0, #3280]
  412464:	ret
  412468:	ldrb	w2, [x0, #3849]
  41246c:	cbnz	w2, 41247c <ferror@plt+0xeeac>
  412470:	cmp	w1, #0x0
  412474:	cset	w2, eq  // eq = none
  412478:	str	w2, [x0, #3220]
  41247c:	ldrb	w2, [x0, #3848]
  412480:	cbnz	w2, 412490 <ferror@plt+0xeec0>
  412484:	cmp	w1, #0x0
  412488:	cset	w2, eq  // eq = none
  41248c:	str	w2, [x0, #3064]
  412490:	ldrb	w2, [x0, #3840]
  412494:	cbnz	w2, 41249c <ferror@plt+0xeecc>
  412498:	str	w1, [x0, #1600]
  41249c:	ldrb	w2, [x0, #3845]
  4124a0:	cbnz	w2, 4124a8 <ferror@plt+0xeed8>
  4124a4:	str	w1, [x0, #2832]
  4124a8:	ret
  4124ac:	sub	sp, sp, #0x80
  4124b0:	stp	x29, x30, [sp, #32]
  4124b4:	add	x29, sp, #0x20
  4124b8:	stp	x19, x20, [sp, #48]
  4124bc:	adrp	x20, 486000 <_obstack_memory_used@@Base+0x29c10>
  4124c0:	mov	w19, w3
  4124c4:	add	x20, x20, #0x788
  4124c8:	stp	x21, x22, [sp, #64]
  4124cc:	adrp	x21, 49d000 <_obstack_memory_used@@Base+0x40c10>
  4124d0:	mov	x22, x0
  4124d4:	add	x21, x21, #0xfc8
  4124d8:	stp	x23, x24, [sp, #80]
  4124dc:	mov	x24, x1
  4124e0:	mov	w23, w7
  4124e4:	stp	x25, x26, [sp, #96]
  4124e8:	and	w25, w5, #0xff
  4124ec:	mov	x26, x2
  4124f0:	stp	x27, x28, [sp, #112]
  4124f4:	and	w28, w4, #0xff
  4124f8:	and	w27, w6, #0xff
  4124fc:	ldr	w3, [x26]
  412500:	cbz	w3, 4126a4 <ferror@plt+0xf0d4>
  412504:	ldr	x2, [x26, #8]
  412508:	cbz	w28, 41252c <ferror@plt+0xef5c>
  41250c:	cmp	w19, #0x2
  412510:	b.eq	412680 <ferror@plt+0xf0b0>  // b.none
  412514:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  412518:	add	x2, x2, #0x10
  41251c:	mov	w1, #0x159                 	// #345
  412520:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412524:	add	x0, x0, #0x25
  412528:	bl	403600 <ferror@plt+0x30>
  41252c:	cbz	w25, 412548 <ferror@plt+0xef78>
  412530:	cmp	w19, #0x3
  412534:	b.eq	412684 <ferror@plt+0xf0b4>  // b.none
  412538:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  41253c:	mov	w1, #0x15b                 	// #347
  412540:	add	x2, x2, #0x10
  412544:	b	412520 <ferror@plt+0xef50>
  412548:	cbz	w27, 412688 <ferror@plt+0xf0b8>
  41254c:	cmp	w19, #0x1
  412550:	b.eq	412688 <ferror@plt+0xf0b8>  // b.none
  412554:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  412558:	mov	w1, #0x15d                 	// #349
  41255c:	add	x2, x2, #0x10
  412560:	b	412520 <ferror@plt+0xef50>
  412564:	mov	w3, w25
  412568:	cbnz	w3, 4125ec <ferror@plt+0xf01c>
  41256c:	ldr	x0, [x26, #16]
  412570:	cbnz	x0, 412624 <ferror@plt+0xf054>
  412574:	mov	x0, #0x60                  	// #96
  412578:	madd	x0, x2, x0, x21
  41257c:	ldrsb	w0, [x0, #64]
  412580:	tbnz	w0, #31, 412624 <ferror@plt+0xf054>
  412584:	ldr	w0, [x26, #24]
  412588:	mov	w5, w23
  41258c:	ldr	w7, [sp, #136]
  412590:	mov	w6, #0x0                   	// #0
  412594:	cmp	w0, #0x0
  412598:	mov	x3, #0x0                   	// #0
  41259c:	ldr	x0, [sp, #144]
  4125a0:	str	x0, [sp, #16]
  4125a4:	mov	w0, #0x1                   	// #1
  4125a8:	strb	w0, [sp, #8]
  4125ac:	ldr	x0, [sp, #128]
  4125b0:	cset	x4, eq  // eq = none
  4125b4:	str	x0, [sp]
  4125b8:	b	412618 <ferror@plt+0xf048>
  4125bc:	cmp	w19, #0x0
  4125c0:	cset	w3, eq  // eq = none
  4125c4:	b	412568 <ferror@plt+0xef98>
  4125c8:	cmp	w19, #0x0
  4125cc:	cset	w3, gt
  4125d0:	b	412568 <ferror@plt+0xef98>
  4125d4:	cmp	w19, #0x0
  4125d8:	cset	w3, gt
  4125dc:	eor	w0, w28, #0x1
  4125e0:	tst	w3, w0
  4125e4:	b.eq	41256c <ferror@plt+0xef9c>  // b.none
  4125e8:	cbnz	w27, 41256c <ferror@plt+0xef9c>
  4125ec:	ldr	x0, [sp, #144]
  4125f0:	mov	w5, w23
  4125f4:	ldrsw	x4, [x26, #24]
  4125f8:	mov	w6, #0x0                   	// #0
  4125fc:	str	x0, [sp, #16]
  412600:	mov	w0, #0x1                   	// #1
  412604:	strb	w0, [sp, #8]
  412608:	ldr	x0, [sp, #128]
  41260c:	str	x0, [sp]
  412610:	ldr	w7, [sp, #136]
  412614:	ldr	x3, [x26, #16]
  412618:	mov	x1, x24
  41261c:	mov	x0, x22
  412620:	bl	417dbc <ferror@plt+0x147ec>
  412624:	add	x26, x26, #0x20
  412628:	b	4124fc <ferror@plt+0xef2c>
  41262c:	cmp	w19, #0x0
  412630:	eor	w0, w27, #0x1
  412634:	cset	w3, gt
  412638:	and	w3, w3, w0
  41263c:	b	412568 <ferror@plt+0xef98>
  412640:	cmp	w19, #0x1
  412644:	b	4125cc <ferror@plt+0xeffc>
  412648:	cmp	w19, #0x1
  41264c:	b	4125d8 <ferror@plt+0xf008>
  412650:	cmp	w19, #0x2
  412654:	b	4125cc <ferror@plt+0xeffc>
  412658:	cmp	w19, #0x2
  41265c:	cset	w3, gt
  412660:	orr	w3, w28, w3
  412664:	b	412568 <ferror@plt+0xef98>
  412668:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  41266c:	mov	w1, #0x18f                 	// #399
  412670:	add	x2, x2, #0x10
  412674:	b	412520 <ferror@plt+0xef50>
  412678:	mov	w3, w28
  41267c:	b	412568 <ferror@plt+0xef98>
  412680:	cbnz	w25, 412538 <ferror@plt+0xef68>
  412684:	cbnz	w27, 412554 <ferror@plt+0xef84>
  412688:	sub	w3, w3, #0x1
  41268c:	cmp	w3, #0xa
  412690:	b.hi	412668 <ferror@plt+0xf098>  // b.pmore
  412694:	ldrb	w0, [x20, w3, uxtw]
  412698:	adr	x1, 4126a4 <ferror@plt+0xf0d4>
  41269c:	add	x0, x1, w0, sxtb #2
  4126a0:	br	x0
  4126a4:	ldp	x29, x30, [sp, #32]
  4126a8:	ldp	x19, x20, [sp, #48]
  4126ac:	ldp	x21, x22, [sp, #64]
  4126b0:	ldp	x23, x24, [sp, #80]
  4126b4:	ldp	x25, x26, [sp, #96]
  4126b8:	ldp	x27, x28, [sp, #112]
  4126bc:	add	sp, sp, #0x80
  4126c0:	ret
  4126c4:	stp	x29, x30, [sp, #-96]!
  4126c8:	mov	x29, sp
  4126cc:	stp	x19, x20, [sp, #16]
  4126d0:	stp	x21, x22, [sp, #32]
  4126d4:	mov	x21, x0
  4126d8:	mov	w22, w2
  4126dc:	stp	x23, x24, [sp, #48]
  4126e0:	mov	x24, x1
  4126e4:	mov	w23, w3
  4126e8:	stp	x25, x26, [sp, #64]
  4126ec:	sub	w26, w3, #0x3
  4126f0:	adrp	x25, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4126f4:	add	x25, x25, #0x228
  4126f8:	str	x27, [sp, #80]
  4126fc:	bl	402d50 <strlen@plt>
  412700:	mov	w20, w0
  412704:	mov	w27, #0x1b                  	// #27
  412708:	cmp	w22, #0x1b
  41270c:	mov	w19, w20
  412710:	csel	w4, w22, w27, cs  // cs = hs, nlast
  412714:	sub	w4, w26, w4
  412718:	cmp	w23, w4
  41271c:	csel	w4, w4, wzr, cs  // cs = hs, nlast
  412720:	cmp	w20, w4
  412724:	b.ls	412798 <ferror@plt+0xf1c8>  // b.plast
  412728:	mov	w0, #0x0                   	// #0
  41272c:	mov	w3, #0x88                  	// #136
  412730:	ldrb	w1, [x21, w0, uxtw]
  412734:	cbz	w1, 412798 <ferror@plt+0xf1c8>
  412738:	cmp	w4, w0
  41273c:	ccmp	w20, w19, #0x4, ls  // ls = plast
  412740:	b.ne	412798 <ferror@plt+0xf1c8>  // b.any
  412744:	add	w2, w0, #0x1
  412748:	cmp	w1, #0x20
  41274c:	b.eq	412790 <ferror@plt+0xf1c0>  // b.none
  412750:	and	w1, w1, #0xfffffffd
  412754:	cmp	w1, #0x2d
  412758:	b.ne	412780 <ferror@plt+0xf1b0>  // b.any
  41275c:	ldrb	w1, [x21, w2, uxtw]
  412760:	cmp	w1, #0x20
  412764:	b.eq	412780 <ferror@plt+0xf1b0>  // b.none
  412768:	cbz	w0, 412780 <ferror@plt+0xf1b0>
  41276c:	sub	w0, w0, #0x1
  412770:	ldrb	w0, [x21, x0]
  412774:	ldrh	w0, [x25, x0, lsl #1]
  412778:	tst	w3, w0
  41277c:	csel	w19, w19, w2, eq  // eq = none
  412780:	mov	w0, w2
  412784:	b	412730 <ferror@plt+0xf160>
  412788:	mov	x21, x0
  41278c:	b	412708 <ferror@plt+0xf138>
  412790:	mov	w19, w0
  412794:	b	412780 <ferror@plt+0xf1b0>
  412798:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  41279c:	mov	x5, x21
  4127a0:	mov	w4, w19
  4127a4:	mov	x3, x24
  4127a8:	mov	w2, w22
  4127ac:	add	x0, x0, #0x36
  4127b0:	mov	w1, #0x1b                  	// #27
  4127b4:	bl	4034d0 <printf@plt>
  4127b8:	ldrb	w1, [x21, w19, uxtw]
  4127bc:	add	x0, x21, w19, uxtw
  4127c0:	cmp	w1, #0x20
  4127c4:	b.ne	4127d0 <ferror@plt+0xf200>  // b.any
  4127c8:	add	w19, w19, #0x1
  4127cc:	b	4127b8 <ferror@plt+0xf1e8>
  4127d0:	subs	w20, w20, w19
  4127d4:	mov	w22, #0x0                   	// #0
  4127d8:	b.ne	412788 <ferror@plt+0xf1b8>  // b.any
  4127dc:	ldp	x19, x20, [sp, #16]
  4127e0:	ldp	x21, x22, [sp, #32]
  4127e4:	ldp	x23, x24, [sp, #48]
  4127e8:	ldp	x25, x26, [sp, #64]
  4127ec:	ldr	x27, [sp, #80]
  4127f0:	ldp	x29, x30, [sp], #96
  4127f4:	ret
  4127f8:	stp	x29, x30, [sp, #-64]!
  4127fc:	cmp	w1, #0x0
  412800:	mov	x29, sp
  412804:	stp	x19, x20, [sp, #16]
  412808:	mov	w20, w0
  41280c:	cset	w0, ne  // ne = any
  412810:	stp	x21, x22, [sp, #32]
  412814:	mov	x19, x3
  412818:	mov	x21, x2
  41281c:	str	x23, [sp, #48]
  412820:	mov	w22, w5
  412824:	strb	w0, [x3, #56]
  412828:	cbnz	w20, 41286c <ferror@plt+0xf29c>
  41282c:	ldr	w0, [x3, #100]
  412830:	cbnz	w0, 41283c <ferror@plt+0xf26c>
  412834:	mov	w0, #0x2                   	// #2
  412838:	str	w0, [x3, #100]
  41283c:	ldrb	w0, [x21]
  412840:	cbnz	w0, 4128b0 <ferror@plt+0xf2e0>
  412844:	ldr	w0, [x19, #96]
  412848:	cmp	w0, #0x1
  41284c:	b.gt	412858 <ferror@plt+0xf288>
  412850:	mov	w0, #0x2                   	// #2
  412854:	str	w0, [x19, #96]
  412858:	ldp	x19, x20, [sp, #16]
  41285c:	ldp	x21, x22, [sp, #32]
  412860:	ldr	x23, [sp, #48]
  412864:	ldp	x29, x30, [sp], #64
  412868:	ret
  41286c:	ldr	w0, [x4]
  412870:	mov	x23, x4
  412874:	cbz	w0, 4128a4 <ferror@plt+0xf2d4>
  412878:	ldr	w0, [x3, #100]
  41287c:	cbz	w0, 4128a4 <ferror@plt+0xf2d4>
  412880:	cmp	w20, w0
  412884:	b.eq	4128a4 <ferror@plt+0xf2d4>  // b.none
  412888:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  41288c:	add	x0, x0, #0x8b8
  412890:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  412894:	add	x1, x1, #0x45
  412898:	ldr	x2, [x0, w20, sxtw #3]
  41289c:	mov	w0, w5
  4128a0:	bl	422290 <ferror@plt+0x1ecc0>
  4128a4:	str	w20, [x19, #100]
  4128a8:	str	w20, [x23]
  4128ac:	b	41283c <ferror@plt+0xf26c>
  4128b0:	mov	x0, x21
  4128b4:	mov	w2, #0x0                   	// #0
  4128b8:	mov	x1, #0x0                   	// #0
  4128bc:	bl	416324 <ferror@plt+0x12d54>
  4128c0:	cmn	w0, #0x1
  4128c4:	b.ne	4128ec <ferror@plt+0xf31c>  // b.any
  4128c8:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  4128cc:	mov	x2, x21
  4128d0:	add	x1, x1, #0x75
  4128d4:	mov	w0, w22
  4128d8:	ldp	x19, x20, [sp, #16]
  4128dc:	ldp	x21, x22, [sp, #32]
  4128e0:	ldr	x23, [sp, #48]
  4128e4:	ldp	x29, x30, [sp], #64
  4128e8:	b	422290 <ferror@plt+0x1ecc0>
  4128ec:	cmp	w0, #0x3
  4128f0:	b.le	412854 <ferror@plt+0xf284>
  4128f4:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  4128f8:	mov	x2, x21
  4128fc:	add	x1, x1, #0x99
  412900:	b	4128d4 <ferror@plt+0xf304>
  412904:	sub	sp, sp, #0x230
  412908:	stp	x29, x30, [sp]
  41290c:	mov	x29, sp
  412910:	stp	x19, x20, [sp, #16]
  412914:	stp	x21, x22, [sp, #32]
  412918:	mov	x22, x4
  41291c:	stp	x23, x24, [sp, #48]
  412920:	stp	x25, x26, [sp, #64]
  412924:	stp	x27, x28, [sp, #80]
  412928:	mov	w27, w3
  41292c:	str	w0, [sp, #104]
  412930:	mov	w0, w0
  412934:	str	w1, [sp, #112]
  412938:	cmp	w0, #0x10, lsl #12
  41293c:	stp	w2, w5, [sp, #164]
  412940:	b.ne	412a18 <ferror@plt+0xf448>  // b.any
  412944:	adrp	x20, 486000 <_obstack_memory_used@@Base+0x29c10>
  412948:	add	x20, x20, #0x8b8
  41294c:	adrp	x21, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  412950:	add	x20, x20, #0x28
  412954:	add	x21, x21, #0x1d0
  412958:	mov	x19, #0x0                   	// #0
  41295c:	ldr	x1, [x21]
  412960:	add	x1, x1, x19
  412964:	ldr	x0, [x1, #24]
  412968:	cbz	x0, 412974 <ferror@plt+0xf3a4>
  41296c:	ldrb	w2, [x0]
  412970:	cbnz	w2, 412980 <ferror@plt+0xf3b0>
  412974:	ldr	x0, [sp, #112]
  412978:	tbnz	w0, #24, 4129e0 <ferror@plt+0xf410>
  41297c:	mov	x0, x20
  412980:	ldr	x24, [x1]
  412984:	bl	403580 <gettext@plt>
  412988:	mov	x23, x0
  41298c:	ldr	w0, [x22, #3804]
  412990:	cbnz	w0, 4129c4 <ferror@plt+0xf3f4>
  412994:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412998:	add	x0, x0, #0xbc
  41299c:	bl	403580 <gettext@plt>
  4129a0:	add	x23, sp, #0x130
  4129a4:	ldr	x1, [x21]
  4129a8:	mov	x2, x0
  4129ac:	add	x0, sp, #0x130
  4129b0:	add	x1, x1, x19
  4129b4:	ldp	w3, w4, [x1, #8]
  4129b8:	ldr	w5, [x1, #16]
  4129bc:	mov	x1, #0x100                 	// #256
  4129c0:	bl	402ea0 <snprintf@plt>
  4129c4:	mov	x0, x24
  4129c8:	bl	402d50 <strlen@plt>
  4129cc:	mov	w3, w27
  4129d0:	mov	w2, w0
  4129d4:	mov	x1, x24
  4129d8:	mov	x0, x23
  4129dc:	bl	4126c4 <ferror@plt+0xf0f4>
  4129e0:	add	x19, x19, #0x28
  4129e4:	mov	x0, #0x2288                	// #8840
  4129e8:	cmp	x19, x0
  4129ec:	b.ne	41295c <ferror@plt+0xf38c>  // b.any
  4129f0:	mov	w0, #0xa                   	// #10
  4129f4:	bl	403500 <putchar@plt>
  4129f8:	ldp	x29, x30, [sp]
  4129fc:	ldp	x19, x20, [sp, #16]
  412a00:	ldp	x21, x22, [sp, #32]
  412a04:	ldp	x23, x24, [sp, #48]
  412a08:	ldp	x25, x26, [sp, #64]
  412a0c:	ldp	x27, x28, [sp, #80]
  412a10:	add	sp, sp, #0x230
  412a14:	ret
  412a18:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  412a1c:	ldr	w0, [x0, #1964]
  412a20:	str	w0, [sp, #140]
  412a24:	ldr	x0, [x4, #72]
  412a28:	cbnz	x0, 412a3c <ferror@plt+0xf46c>
  412a2c:	ldr	w1, [sp, #140]
  412a30:	mov	x0, #0x1                   	// #1
  412a34:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  412a38:	str	x0, [x22, #72]
  412a3c:	adrp	x0, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  412a40:	ldr	w0, [x0, #1832]
  412a44:	str	w0, [sp, #160]
  412a48:	ldr	x0, [x22, #64]
  412a4c:	cbnz	x0, 412a60 <ferror@plt+0xf490>
  412a50:	ldr	w1, [sp, #160]
  412a54:	mov	x0, #0x1                   	// #1
  412a58:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  412a5c:	str	x0, [x22, #64]
  412a60:	adrp	x20, 49d000 <_obstack_memory_used@@Base+0x40c10>
  412a64:	add	x20, x20, #0xfc8
  412a68:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  412a6c:	mov	x28, x20
  412a70:	add	x0, x0, #0x8b8
  412a74:	add	x19, sp, #0x130
  412a78:	mov	x23, #0x0                   	// #0
  412a7c:	mov	x21, #0x0                   	// #0
  412a80:	mov	w2, #0x0                   	// #0
  412a84:	mov	w3, #0x0                   	// #0
  412a88:	str	x0, [sp, #120]
  412a8c:	add	x0, x0, #0x49
  412a90:	str	x0, [sp, #144]
  412a94:	ldr	w0, [sp, #140]
  412a98:	cmp	w0, w23
  412a9c:	b.ls	412f24 <ferror@plt+0xf954>  // b.plast
  412aa0:	ldr	w0, [sp, #104]
  412aa4:	ldr	w1, [x20, #60]
  412aa8:	cbz	w0, 412ab4 <ferror@plt+0xf4e4>
  412aac:	bics	wzr, w0, w1
  412ab0:	b.eq	412ac0 <ferror@plt+0xf4f0>  // b.none
  412ab4:	ldr	w0, [sp, #164]
  412ab8:	tst	w0, w1
  412abc:	b.eq	412ce8 <ferror@plt+0xf718>  // b.none
  412ac0:	ldr	w0, [sp, #112]
  412ac4:	ands	w0, w0, w1
  412ac8:	str	w0, [sp, #128]
  412acc:	b.ne	412ce8 <ferror@plt+0xf718>  // b.any
  412ad0:	tbz	w1, #19, 412af4 <ferror@plt+0xf524>
  412ad4:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  412ad8:	ldr	w4, [x0, #1960]
  412adc:	mov	w0, #0x1                   	// #1
  412ae0:	lsl	w0, w0, w4
  412ae4:	sub	w0, w0, #0x1
  412ae8:	orr	w0, w0, #0x300000
  412aec:	tst	w0, w1
  412af0:	b.eq	412ce8 <ferror@plt+0xf718>  // b.none
  412af4:	ldr	x0, [x22, #72]
  412af8:	ldrb	w1, [x0, x23]
  412afc:	cbnz	w1, 412ce4 <ferror@plt+0xf714>
  412b00:	mov	w1, #0x1                   	// #1
  412b04:	strb	w1, [x0, x23]
  412b08:	ldr	x24, [x20, #8]
  412b0c:	cbnz	x24, 412b20 <ferror@plt+0xf550>
  412b10:	ldr	x0, [sp, #112]
  412b14:	tbnz	w0, #24, 412ce4 <ferror@plt+0xf714>
  412b18:	ldr	x0, [sp, #120]
  412b1c:	add	x24, x0, #0x28
  412b20:	ldrh	w0, [x20, #48]
  412b24:	cmp	w0, #0x594
  412b28:	b.hi	412b78 <ferror@plt+0xf5a8>  // b.pmore
  412b2c:	mov	x25, #0x60                  	// #96
  412b30:	madd	x0, x0, x25, x28
  412b34:	ldr	x0, [x0, #8]
  412b38:	cbz	x0, 412b78 <ferror@plt+0xf5a8>
  412b3c:	ldr	x0, [sp, #120]
  412b40:	add	x0, x0, #0x28
  412b44:	cmp	x24, x0
  412b48:	b.ne	412cf4 <ferror@plt+0xf724>  // b.any
  412b4c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412b50:	add	x0, x0, #0xdd
  412b54:	bl	403580 <gettext@plt>
  412b58:	mov	x2, x0
  412b5c:	ldrh	w1, [x20, #48]
  412b60:	mov	x0, x19
  412b64:	mul	x1, x1, x25
  412b68:	ldr	x3, [x28, x1]
  412b6c:	mov	x1, #0x100                 	// #256
  412b70:	bl	402ea0 <snprintf@plt>
  412b74:	mov	x24, x19
  412b78:	ldr	x0, [x20, #24]
  412b7c:	cbz	x0, 412bb8 <ferror@plt+0xf5e8>
  412b80:	cmp	x24, x19
  412b84:	b.ne	412d24 <ferror@plt+0xf754>  // b.any
  412b88:	mov	x0, x24
  412b8c:	bl	402d50 <strlen@plt>
  412b90:	mov	x25, x0
  412b94:	ldr	x0, [sp, #144]
  412b98:	bl	403580 <gettext@plt>
  412b9c:	mov	x3, x0
  412ba0:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  412ba4:	mov	x1, #0x100                 	// #256
  412ba8:	add	x2, x2, #0x11b
  412bac:	sub	x1, x1, x25
  412bb0:	add	x0, x24, x25
  412bb4:	bl	402ea0 <snprintf@plt>
  412bb8:	mov	x0, x24
  412bbc:	bl	403580 <gettext@plt>
  412bc0:	mov	w1, #0x9                   	// #9
  412bc4:	mov	x26, x0
  412bc8:	bl	4032f0 <strchr@plt>
  412bcc:	cbz	x0, 412d50 <ferror@plt+0xf780>
  412bd0:	sub	w25, w0, w26
  412bd4:	mov	x24, x26
  412bd8:	add	x26, x0, #0x1
  412bdc:	ldr	w0, [x22, #3804]
  412be0:	cbnz	w0, 412c60 <ferror@plt+0xf690>
  412be4:	mov	x1, x22
  412be8:	mov	w0, w23
  412bec:	str	w23, [sp, #152]
  412bf0:	bl	417e44 <ferror@plt+0x14874>
  412bf4:	cmp	w25, #0x1c
  412bf8:	mov	x26, x0
  412bfc:	b.hi	412d64 <ferror@plt+0xf794>  // b.pmore
  412c00:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  412c04:	add	x1, x1, #0x120
  412c08:	mov	x0, x19
  412c0c:	bl	403360 <strcpy@plt>
  412c10:	cbz	x26, 412c5c <ferror@plt+0xf68c>
  412c14:	ldr	w0, [x20, #72]
  412c18:	cmp	w0, #0x7
  412c1c:	b.eq	412c5c <ferror@plt+0xf68c>  // b.none
  412c20:	ldr	w1, [x20, #60]
  412c24:	tbz	w1, #22, 412e00 <ferror@plt+0xf830>
  412c28:	cmp	w0, #0x5
  412c2c:	b.ne	412d70 <ferror@plt+0xf7a0>  // b.any
  412c30:	ldr	x26, [x26]
  412c34:	cbz	x26, 412c5c <ferror@plt+0xf68c>
  412c38:	mov	x0, x19
  412c3c:	bl	402d50 <strlen@plt>
  412c40:	mov	x3, x26
  412c44:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  412c48:	mov	x1, #0x100                 	// #256
  412c4c:	add	x2, x2, #0x11d
  412c50:	sub	x1, x1, x0
  412c54:	add	x0, x19, x0
  412c58:	bl	402ea0 <snprintf@plt>
  412c5c:	mov	x26, x19
  412c60:	ldr	w4, [x20, #92]
  412c64:	cmn	w4, #0x1
  412c68:	b.eq	412ca4 <ferror@plt+0xf6d4>  // b.none
  412c6c:	ldr	w3, [x20, #88]
  412c70:	mov	x1, #0x80                  	// #128
  412c74:	add	x0, sp, #0xb0
  412c78:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  412c7c:	add	x2, x2, #0x142
  412c80:	bl	402ea0 <snprintf@plt>
  412c84:	add	x1, sp, #0xb0
  412c88:	mov	x2, #0x0                   	// #0
  412c8c:	mov	x0, x24
  412c90:	bl	45a668 <ferror@plt+0x57098>
  412c94:	mov	x24, x0
  412c98:	add	x0, sp, #0xb0
  412c9c:	bl	402d50 <strlen@plt>
  412ca0:	add	w25, w25, w0
  412ca4:	mov	x0, x26
  412ca8:	mov	w3, w27
  412cac:	mov	w2, w25
  412cb0:	mov	x1, x24
  412cb4:	bl	4126c4 <ferror@plt+0xf0f4>
  412cb8:	ldr	w0, [x20, #72]
  412cbc:	cmp	w0, #0x6
  412cc0:	b.ne	412e38 <ferror@plt+0xf868>  // b.any
  412cc4:	ldrh	w0, [x20, #68]
  412cc8:	ldr	x1, [x22, #64]
  412ccc:	ldrb	w2, [x1, x0]
  412cd0:	cmp	w2, #0x2
  412cd4:	b.eq	412e38 <ferror@plt+0xf868>  // b.none
  412cd8:	mov	w2, #0x1                   	// #1
  412cdc:	strb	w2, [x1, x0]
  412ce0:	mov	w2, #0x1                   	// #1
  412ce4:	mov	w3, #0x1                   	// #1
  412ce8:	add	x23, x23, #0x1
  412cec:	add	x20, x20, #0x60
  412cf0:	b	412a94 <ferror@plt+0xf4c4>
  412cf4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412cf8:	add	x0, x0, #0x109
  412cfc:	bl	403580 <gettext@plt>
  412d00:	mov	x2, x0
  412d04:	ldrh	w1, [x20, #48]
  412d08:	mov	x3, x24
  412d0c:	mov	x0, x19
  412d10:	mul	x1, x1, x25
  412d14:	ldr	x4, [x28, x1]
  412d18:	mov	x1, #0x100                 	// #256
  412d1c:	bl	402ea0 <snprintf@plt>
  412d20:	b	412b74 <ferror@plt+0xf5a4>
  412d24:	ldr	x0, [sp, #144]
  412d28:	bl	403580 <gettext@plt>
  412d2c:	mov	x4, x0
  412d30:	mov	x3, x24
  412d34:	mov	x0, x19
  412d38:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  412d3c:	mov	x1, #0x100                 	// #256
  412d40:	add	x2, x2, #0x119
  412d44:	mov	x24, x19
  412d48:	bl	402ea0 <snprintf@plt>
  412d4c:	b	412bb8 <ferror@plt+0xf5e8>
  412d50:	ldr	x24, [x20]
  412d54:	mov	x0, x24
  412d58:	bl	402d50 <strlen@plt>
  412d5c:	mov	w25, w0
  412d60:	b	412bdc <ferror@plt+0xf60c>
  412d64:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  412d68:	add	x1, x1, #0x121
  412d6c:	b	412c08 <ferror@plt+0xf638>
  412d70:	cmp	w0, #0x6
  412d74:	b.ne	412de0 <ferror@plt+0xf810>  // b.any
  412d78:	ldrh	w4, [x20, #68]
  412d7c:	adrp	x0, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  412d80:	add	x0, x0, #0x730
  412d84:	mov	x1, #0x30                  	// #48
  412d88:	str	xzr, [sp, #176]
  412d8c:	madd	x4, x4, x1, x0
  412d90:	mov	x0, x26
  412d94:	ldr	x1, [x4, #40]
  412d98:	str	x4, [sp, #152]
  412d9c:	blr	x1
  412da0:	mov	w2, w0
  412da4:	ldr	x4, [sp, #152]
  412da8:	add	x1, sp, #0xb0
  412dac:	ldr	w3, [sp, #168]
  412db0:	ldr	x0, [x4, #16]
  412db4:	bl	41660c <ferror@plt+0x1303c>
  412db8:	ldr	x0, [sp, #176]
  412dbc:	cbnz	x0, 412dd0 <ferror@plt+0xf800>
  412dc0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412dc4:	add	x0, x0, #0x123
  412dc8:	bl	403580 <gettext@plt>
  412dcc:	str	x0, [sp, #176]
  412dd0:	mov	x0, x19
  412dd4:	bl	402d50 <strlen@plt>
  412dd8:	ldr	x3, [sp, #176]
  412ddc:	b	412c44 <ferror@plt+0xf674>
  412de0:	mov	x0, x19
  412de4:	bl	402d50 <strlen@plt>
  412de8:	ldr	w2, [x26]
  412dec:	add	x0, x19, x0
  412df0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  412df4:	add	x1, x1, #0xe23
  412df8:	bl	402e00 <sprintf@plt>
  412dfc:	b	412c5c <ferror@plt+0xf68c>
  412e00:	mov	x1, x22
  412e04:	mov	w0, w23
  412e08:	bl	417e74 <ferror@plt+0x148a4>
  412e0c:	cbz	w0, 412e2c <ferror@plt+0xf85c>
  412e10:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412e14:	add	x0, x0, #0x12d
  412e18:	bl	403580 <gettext@plt>
  412e1c:	mov	x1, x0
  412e20:	mov	x0, x19
  412e24:	bl	402fe0 <strcat@plt>
  412e28:	b	412c5c <ferror@plt+0xf68c>
  412e2c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412e30:	add	x0, x0, #0x137
  412e34:	b	412e18 <ferror@plt+0xf848>
  412e38:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  412e3c:	mov	x1, #0x0                   	// #0
  412e40:	str	w23, [sp, #152]
  412e44:	ldr	x2, [x0, #712]
  412e48:	mov	w0, w23
  412e4c:	blr	x2
  412e50:	mov	x24, x0
  412e54:	cbz	x0, 412ce0 <ferror@plt+0xf710>
  412e58:	ldr	w0, [x0, #4]
  412e5c:	cbz	w0, 412ce0 <ferror@plt+0xf710>
  412e60:	cbz	x21, 413154 <ferror@plt+0xfb84>
  412e64:	ldp	w0, w26, [x21]
  412e68:	ubfx	x1, x0, #0, #31
  412e6c:	cmp	w1, w26
  412e70:	b.ne	412f1c <ferror@plt+0xf94c>  // b.any
  412e74:	ldrsb	w3, [x21, #3]
  412e78:	add	w1, w26, #0x1
  412e7c:	tbz	w3, #31, 413164 <ferror@plt+0xfb94>
  412e80:	mov	w3, #0x1                   	// #1
  412e84:	cmp	w1, #0x4
  412e88:	mov	w25, #0x4                   	// #4
  412e8c:	csel	w25, w1, w25, cs  // cs = hs, nlast
  412e90:	mov	x0, #0x0                   	// #0
  412e94:	mov	x1, #0x8                   	// #8
  412e98:	add	x1, x1, w25, uxtw #4
  412e9c:	cbz	x0, 412ea8 <ferror@plt+0xf8d8>
  412ea0:	ldr	w2, [x0, #4]
  412ea4:	str	w2, [sp, #128]
  412ea8:	str	w3, [sp, #172]
  412eac:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  412eb0:	ldr	w3, [sp, #172]
  412eb4:	and	w25, w25, #0x7fffffff
  412eb8:	ldr	w1, [sp, #128]
  412ebc:	stp	w25, w1, [x0]
  412ec0:	cbz	w3, 412ef0 <ferror@plt+0xf920>
  412ec4:	mov	x1, #0x8                   	// #8
  412ec8:	add	x6, x1, w26, uxtw #4
  412ecc:	cmp	x6, x1
  412ed0:	b.eq	412eec <ferror@plt+0xf91c>  // b.none
  412ed4:	add	x4, x21, x1
  412ed8:	add	x3, x0, x1
  412edc:	add	x1, x1, #0x10
  412ee0:	ldp	x4, x5, [x4]
  412ee4:	stp	x4, x5, [x3]
  412ee8:	b	412ecc <ferror@plt+0xf8fc>
  412eec:	str	w26, [x0, #4]
  412ef0:	ldr	w1, [x0, #4]
  412ef4:	mov	x21, x0
  412ef8:	ldr	w2, [sp, #152]
  412efc:	add	w3, w1, #0x1
  412f00:	str	w3, [x0, #4]
  412f04:	mov	x3, #0x8                   	// #8
  412f08:	add	x1, x3, w1, uxtw #4
  412f0c:	add	x3, x0, x1
  412f10:	str	w2, [x0, x1]
  412f14:	str	x24, [x3, #8]
  412f18:	b	412ce0 <ferror@plt+0xf710>
  412f1c:	mov	x0, x21
  412f20:	b	412ef0 <ferror@plt+0xf920>
  412f24:	cbnz	w3, 413048 <ferror@plt+0xfa78>
  412f28:	ldr	w0, [sp, #104]
  412f2c:	ands	w24, w0, #0xfff
  412f30:	b.ne	412f48 <ferror@plt+0xf978>  // b.any
  412f34:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412f38:	add	x0, x0, #0x14a
  412f3c:	bl	403580 <gettext@plt>
  412f40:	bl	4034d0 <printf@plt>
  412f44:	b	412f84 <ferror@plt+0xf9b4>
  412f48:	adrp	x20, 485000 <_obstack_memory_used@@Base+0x28c10>
  412f4c:	adrp	x23, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  412f50:	add	x20, x20, #0x183
  412f54:	add	x23, x23, #0x7b0
  412f58:	mov	x19, #0x0                   	// #0
  412f5c:	lsr	w0, w24, w19
  412f60:	tbz	w0, #0, 412f78 <ferror@plt+0xf9a8>
  412f64:	mov	x0, x20
  412f68:	bl	403580 <gettext@plt>
  412f6c:	ldr	x2, [x23, x19, lsl #3]
  412f70:	mov	x1, x2
  412f74:	bl	4034d0 <printf@plt>
  412f78:	add	x19, x19, #0x1
  412f7c:	cmp	x19, #0xc
  412f80:	b.ne	412f5c <ferror@plt+0xf98c>  // b.any
  412f84:	mov	w0, #0xa                   	// #10
  412f88:	bl	403500 <putchar@plt>
  412f8c:	adrp	x19, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  412f90:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412f94:	add	x19, x19, #0x730
  412f98:	add	x0, x0, #0x224
  412f9c:	mov	x20, #0x0                   	// #0
  412fa0:	str	x0, [sp, #112]
  412fa4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  412fa8:	add	x0, x0, #0x11d
  412fac:	str	x0, [sp, #120]
  412fb0:	ldr	w0, [sp, #160]
  412fb4:	cmp	w0, w20
  412fb8:	b.ls	4130a0 <ferror@plt+0xfad0>  // b.plast
  412fbc:	ldr	x0, [x22, #64]
  412fc0:	ldrb	w0, [x0, x20]
  412fc4:	cmp	w0, #0x1
  412fc8:	b.ne	413094 <ferror@plt+0xfac4>  // b.any
  412fcc:	ldr	x0, [x19]
  412fd0:	cbz	x0, 413094 <ferror@plt+0xfac4>
  412fd4:	bl	403580 <gettext@plt>
  412fd8:	mov	x1, x0
  412fdc:	ldr	x0, [sp, #112]
  412fe0:	adrp	x25, 485000 <_obstack_memory_used@@Base+0x28c10>
  412fe4:	mov	w23, #0x4                   	// #4
  412fe8:	mov	w24, #0x0                   	// #0
  412fec:	bl	4034d0 <printf@plt>
  412ff0:	add	x0, x25, #0x228
  412ff4:	str	x0, [sp, #104]
  412ff8:	ldr	x0, [x19, #16]
  412ffc:	ubfiz	x26, x24, #4, #32
  413000:	ldr	x1, [x0, x26]
  413004:	cbz	x1, 41307c <ferror@plt+0xfaac>
  413008:	mov	x0, x1
  41300c:	str	x1, [sp, #128]
  413010:	bl	402d50 <strlen@plt>
  413014:	mov	x25, x0
  413018:	cmp	w23, #0x4
  41301c:	b.ls	413064 <ferror@plt+0xfa94>  // b.plast
  413020:	add	w2, w23, #0x1
  413024:	add	w23, w2, w0
  413028:	cmp	w23, w27
  41302c:	ldr	x1, [sp, #128]
  413030:	b.hi	413058 <ferror@plt+0xfa88>  // b.pmore
  413034:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413038:	add	x0, x0, #0x11c
  41303c:	bl	4034d0 <printf@plt>
  413040:	add	w24, w24, #0x1
  413044:	b	412ff8 <ferror@plt+0xfa28>
  413048:	cbnz	w2, 412f84 <ferror@plt+0xf9b4>
  41304c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413050:	add	x0, x0, #0x1d9
  413054:	b	412f3c <ferror@plt+0xf96c>
  413058:	ldr	x0, [sp, #104]
  41305c:	mov	w23, #0x4                   	// #4
  413060:	bl	4034d0 <printf@plt>
  413064:	ldr	x0, [x19, #16]
  413068:	add	w23, w23, w25
  41306c:	ldr	x1, [x0, x26]
  413070:	ldr	x0, [sp, #120]
  413074:	bl	4034d0 <printf@plt>
  413078:	b	413040 <ferror@plt+0xfa70>
  41307c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  413080:	add	x0, x0, #0x68
  413084:	bl	4031b0 <puts@plt>
  413088:	ldr	x0, [x22, #64]
  41308c:	mov	w1, #0x2                   	// #2
  413090:	strb	w1, [x0, x20]
  413094:	add	x20, x20, #0x1
  413098:	add	x19, x19, #0x30
  41309c:	b	412fb0 <ferror@plt+0xf9e0>
  4130a0:	adrp	x22, 485000 <_obstack_memory_used@@Base+0x28c10>
  4130a4:	adrp	x23, 485000 <_obstack_memory_used@@Base+0x28c10>
  4130a8:	add	x22, x22, #0x22e
  4130ac:	add	x23, x23, #0x11c
  4130b0:	mov	w20, #0x0                   	// #0
  4130b4:	cbz	x21, 4129f8 <ferror@plt+0xf428>
  4130b8:	ldr	w0, [x21, #4]
  4130bc:	cmp	w20, w0
  4130c0:	b.cs	413138 <ferror@plt+0xfb68>  // b.hs, b.nlast
  4130c4:	ubfiz	x0, x20, #4, #32
  4130c8:	mov	w19, w20
  4130cc:	add	x0, x21, x0
  4130d0:	add	x19, x19, #0x1
  4130d4:	add	x19, x21, x19, lsl #4
  4130d8:	ldr	w24, [x0, #8]
  4130dc:	mov	w0, #0x60                  	// #96
  4130e0:	smull	x24, w24, w0
  4130e4:	mov	x0, x22
  4130e8:	bl	403580 <gettext@plt>
  4130ec:	ldr	x1, [x28, x24]
  4130f0:	mov	w24, #0x0                   	// #0
  4130f4:	bl	4034d0 <printf@plt>
  4130f8:	ldr	x0, [x19]
  4130fc:	cbz	x0, 413124 <ferror@plt+0xfb54>
  413100:	ldr	w1, [x0, #4]
  413104:	cmp	w24, w1
  413108:	b.cs	413124 <ferror@plt+0xfb54>  // b.hs, b.nlast
  41310c:	add	x0, x0, w24, uxtw #3
  413110:	add	w24, w24, #0x1
  413114:	ldr	x1, [x0, #8]
  413118:	mov	x0, x23
  41311c:	bl	4034d0 <printf@plt>
  413120:	b	4130f8 <ferror@plt+0xfb28>
  413124:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  413128:	add	w20, w20, #0x1
  41312c:	add	x0, x0, #0x68
  413130:	bl	4031b0 <puts@plt>
  413134:	b	4130b4 <ferror@plt+0xfae4>
  413138:	ldrsb	w0, [x21, #3]
  41313c:	tbz	w0, #31, 413148 <ferror@plt+0xfb78>
  413140:	str	wzr, [x21, #4]
  413144:	b	4129f8 <ferror@plt+0xf428>
  413148:	mov	x0, x21
  41314c:	bl	4032a0 <free@plt>
  413150:	b	4129f8 <ferror@plt+0xf428>
  413154:	mov	w26, #0x0                   	// #0
  413158:	mov	w3, #0x0                   	// #0
  41315c:	mov	w1, #0x1                   	// #1
  413160:	b	412e84 <ferror@plt+0xf8b4>
  413164:	and	w0, w0, #0x7fffffff
  413168:	bl	41e438 <ferror@plt+0x1ae68>
  41316c:	mov	w26, #0x0                   	// #0
  413170:	mov	w25, w0
  413174:	mov	w3, #0x0                   	// #0
  413178:	mov	x0, x21
  41317c:	b	412e94 <ferror@plt+0xf8c4>
  413180:	stp	x29, x30, [sp, #-112]!
  413184:	mov	x29, sp
  413188:	stp	x19, x20, [sp, #16]
  41318c:	mov	w19, w0
  413190:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  413194:	stp	x23, x24, [sp, #48]
  413198:	mov	w23, w1
  41319c:	ldr	w0, [x0, #1960]
  4131a0:	str	w0, [sp, #96]
  4131a4:	stp	x21, x22, [sp, #32]
  4131a8:	mov	w0, #0x1                   	// #1
  4131ac:	ldrb	w1, [sp, #96]
  4131b0:	stp	x25, x26, [sp, #64]
  4131b4:	stp	x27, x28, [sp, #80]
  4131b8:	lsl	w0, w0, w1
  4131bc:	cmp	w0, #0x10, lsl #12
  4131c0:	b.ls	4131dc <ferror@plt+0xfc0c>  // b.plast
  4131c4:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  4131c8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4131cc:	add	x2, x2, #0x46b
  4131d0:	add	x0, x0, #0x25
  4131d4:	mov	w1, #0x649                 	// #1609
  4131d8:	bl	403600 <ferror@plt+0x30>
  4131dc:	sub	w28, w0, #0x1
  4131e0:	ldr	w0, [x3, #224]
  4131e4:	mov	w20, w2
  4131e8:	mov	x21, x3
  4131ec:	mov	w25, w4
  4131f0:	cbnz	w0, 41320c <ferror@plt+0xfc3c>
  4131f4:	bl	420c98 <ferror@plt+0x1d6c8>
  4131f8:	mov	w1, #0x7fffffff            	// #2147483647
  4131fc:	cmp	w0, w1
  413200:	mov	w1, #0x50                  	// #80
  413204:	csel	w0, w0, w1, ne  // ne = any
  413208:	str	w0, [x21, #224]
  41320c:	ldr	w1, [sp, #96]
  413210:	adrp	x24, 485000 <_obstack_memory_used@@Base+0x28c10>
  413214:	adrp	x27, 485000 <_obstack_memory_used@@Base+0x28c10>
  413218:	add	x24, x24, #0x122
  41321c:	add	x27, x27, #0x2bb
  413220:	mov	w26, #0x1                   	// #1
  413224:	mov	x22, #0x0                   	// #0
  413228:	mov	x0, #0x0                   	// #0
  41322c:	str	x1, [sp, #96]
  413230:	adrp	x1, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  413234:	add	x1, x1, #0x7b0
  413238:	str	x1, [sp, #104]
  41323c:	and	w1, w19, w26
  413240:	cmp	w1, #0x40, lsl #12
  413244:	b.eq	413330 <ferror@plt+0xfd60>  // b.none
  413248:	b.hi	41328c <ferror@plt+0xfcbc>  // b.pmore
  41324c:	cmp	w1, #0x10, lsl #12
  413250:	b.eq	413344 <ferror@plt+0xfd74>  // b.none
  413254:	cmp	w1, #0x20, lsl #12
  413258:	b.eq	413324 <ferror@plt+0xfd54>  // b.none
  41325c:	cbz	w1, 4132a4 <ferror@plt+0xfcd4>
  413260:	ldr	x1, [sp, #96]
  413264:	cmp	x1, x22
  413268:	b.ls	4132a4 <ferror@plt+0xfcd4>  // b.plast
  41326c:	tst	w28, w23
  413270:	b.eq	413350 <ferror@plt+0xfd80>  // b.none
  413274:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413278:	add	x0, x0, #0x350
  41327c:	bl	403580 <gettext@plt>
  413280:	ldr	x1, [sp, #104]
  413284:	ldr	x24, [x1, x22, lsl #3]
  413288:	b	4132a4 <ferror@plt+0xfcd4>
  41328c:	cmp	w1, #0x100, lsl #12
  413290:	b.eq	413314 <ferror@plt+0xfd44>  // b.none
  413294:	cmp	w1, #0x200, lsl #12
  413298:	b.eq	413338 <ferror@plt+0xfd68>  // b.none
  41329c:	cmp	w1, #0x80, lsl #12
  4132a0:	b.ne	413260 <ferror@plt+0xfc90>  // b.any
  4132a4:	add	x22, x22, #0x1
  4132a8:	lsl	w26, w26, #1
  4132ac:	cmp	x22, #0x16
  4132b0:	b.ne	41323c <ferror@plt+0xfc6c>  // b.any
  4132b4:	cbnz	x0, 4132cc <ferror@plt+0xfcfc>
  4132b8:	cbnz	w20, 41338c <ferror@plt+0xfdbc>
  4132bc:	tbz	w19, #24, 41335c <ferror@plt+0xfd8c>
  4132c0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4132c4:	add	x0, x0, #0x3be
  4132c8:	bl	403580 <gettext@plt>
  4132cc:	mov	x2, x24
  4132d0:	mov	x1, x0
  4132d4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4132d8:	add	x0, x0, #0x4aa
  4132dc:	bl	4034d0 <printf@plt>
  4132e0:	mov	x4, x21
  4132e4:	mov	w5, w25
  4132e8:	mov	w2, w20
  4132ec:	mov	w1, w23
  4132f0:	mov	w0, w19
  4132f4:	ldr	w3, [x4, #224]
  4132f8:	ldp	x19, x20, [sp, #16]
  4132fc:	ldp	x21, x22, [sp, #32]
  413300:	ldp	x23, x24, [sp, #48]
  413304:	ldp	x25, x26, [sp, #64]
  413308:	ldp	x27, x28, [sp, #80]
  41330c:	ldp	x29, x30, [sp], #112
  413310:	b	412904 <ferror@plt+0xf334>
  413314:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413318:	add	x0, x0, #0x259
  41331c:	bl	403580 <gettext@plt>
  413320:	b	4132a4 <ferror@plt+0xfcd4>
  413324:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413328:	add	x0, x0, #0x283
  41332c:	b	41331c <ferror@plt+0xfd4c>
  413330:	mov	x0, x27
  413334:	b	41331c <ferror@plt+0xfd4c>
  413338:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  41333c:	add	x0, x0, #0x2e7
  413340:	b	41331c <ferror@plt+0xfd4c>
  413344:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413348:	add	x0, x0, #0x316
  41334c:	b	41331c <ferror@plt+0xfd4c>
  413350:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413354:	add	x0, x0, #0x389
  413358:	b	41327c <ferror@plt+0xfcac>
  41335c:	tbz	w19, #23, 41336c <ferror@plt+0xfd9c>
  413360:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413364:	add	x0, x0, #0x3e7
  413368:	b	4132c8 <ferror@plt+0xfcf8>
  41336c:	tbz	w19, #22, 41337c <ferror@plt+0xfdac>
  413370:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413374:	add	x0, x0, #0x415
  413378:	b	4132c8 <ferror@plt+0xfcf8>
  41337c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413380:	mov	w1, w19
  413384:	add	x0, x0, #0x441
  413388:	bl	4224a4 <ferror@plt+0x1eed4>
  41338c:	tst	w28, w20
  413390:	b.eq	4133a0 <ferror@plt+0xfdd0>  // b.none
  413394:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413398:	add	x0, x0, #0x47f
  41339c:	b	4132c8 <ferror@plt+0xfcf8>
  4133a0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4133a4:	add	x0, x0, #0x2e7
  4133a8:	b	4132c8 <ferror@plt+0xfcf8>
  4133ac:	stp	x29, x30, [sp, #-96]!
  4133b0:	mov	x29, sp
  4133b4:	stp	x21, x22, [sp, #32]
  4133b8:	adrp	x21, 486000 <_obstack_memory_used@@Base+0x29c10>
  4133bc:	add	x21, x21, #0x8b8
  4133c0:	stp	x19, x20, [sp, #16]
  4133c4:	mov	x20, x0
  4133c8:	mov	x19, x2
  4133cc:	stp	x23, x24, [sp, #48]
  4133d0:	mov	w24, w1
  4133d4:	stp	x25, x26, [sp, #64]
  4133d8:	add	x25, x21, #0x6c
  4133dc:	add	x26, x21, #0x7b
  4133e0:	str	x27, [sp, #80]
  4133e4:	mov	x1, x19
  4133e8:	mov	x0, x25
  4133ec:	mov	x2, #0x4                   	// #4
  4133f0:	bl	402f80 <strncmp@plt>
  4133f4:	cbnz	w0, 4134a0 <ferror@plt+0xfed0>
  4133f8:	add	x19, x19, #0x4
  4133fc:	mov	w22, #0x0                   	// #0
  413400:	mov	x1, x19
  413404:	mov	x0, x26
  413408:	mov	x2, #0x4                   	// #4
  41340c:	bl	402f80 <strncmp@plt>
  413410:	mov	w23, w0
  413414:	cbz	w0, 4134e8 <ferror@plt+0xff18>
  413418:	mov	x1, x19
  41341c:	add	x0, x21, #0x80
  413420:	mov	x2, #0x4                   	// #4
  413424:	bl	402f80 <strncmp@plt>
  413428:	mov	w27, w0
  41342c:	cbz	w0, 4134f0 <ferror@plt+0xff20>
  413430:	mov	w23, #0x1                   	// #1
  413434:	mov	w27, #0x1                   	// #1
  413438:	mov	x1, x19
  41343c:	add	x0, x21, #0x85
  413440:	mov	x2, #0x4                   	// #4
  413444:	bl	402f80 <strncmp@plt>
  413448:	cbz	w0, 4134fc <ferror@plt+0xff2c>
  41344c:	mov	x1, x19
  413450:	add	x0, x21, #0x8a
  413454:	mov	x2, #0x3                   	// #3
  413458:	bl	402f80 <strncmp@plt>
  41345c:	cbz	w0, 413538 <ferror@plt+0xff68>
  413460:	mov	x1, x19
  413464:	add	x0, x21, #0x8e
  413468:	mov	x2, #0x3                   	// #3
  41346c:	bl	402f80 <strncmp@plt>
  413470:	cbz	w0, 413544 <ferror@plt+0xff74>
  413474:	mov	x1, x19
  413478:	add	x0, x21, #0x92
  41347c:	mov	x2, #0x4                   	// #4
  413480:	bl	402f80 <strncmp@plt>
  413484:	cbz	w0, 413550 <ferror@plt+0xff80>
  413488:	mov	x2, x19
  41348c:	mov	w0, w24
  413490:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413494:	add	x1, x1, #0x4b1
  413498:	bl	422290 <ferror@plt+0x1ecc0>
  41349c:	b	41353c <ferror@plt+0xff6c>
  4134a0:	mov	x1, x19
  4134a4:	add	x0, x21, #0x71
  4134a8:	mov	x2, #0x4                   	// #4
  4134ac:	bl	402f80 <strncmp@plt>
  4134b0:	cbz	w0, 4134d0 <ferror@plt+0xff00>
  4134b4:	mov	x1, x19
  4134b8:	add	x0, x21, #0x76
  4134bc:	mov	x2, #0x4                   	// #4
  4134c0:	bl	402f80 <strncmp@plt>
  4134c4:	cbz	w0, 4134dc <ferror@plt+0xff0c>
  4134c8:	mov	w22, #0x3                   	// #3
  4134cc:	b	413400 <ferror@plt+0xfe30>
  4134d0:	add	x19, x19, #0x4
  4134d4:	mov	w22, #0x1                   	// #1
  4134d8:	b	413400 <ferror@plt+0xfe30>
  4134dc:	add	x19, x19, #0x4
  4134e0:	mov	w22, #0x2                   	// #2
  4134e4:	b	413400 <ferror@plt+0xfe30>
  4134e8:	add	x19, x19, #0x4
  4134ec:	b	413434 <ferror@plt+0xfe64>
  4134f0:	add	x19, x19, #0x4
  4134f4:	mov	w23, #0x1                   	// #1
  4134f8:	b	413438 <ferror@plt+0xfe68>
  4134fc:	add	x19, x19, #0x4
  413500:	mov	w2, #0x0                   	// #0
  413504:	cmp	w22, #0x3
  413508:	b.ne	41355c <ferror@plt+0xff8c>  // b.any
  41350c:	cbz	w27, 413518 <ferror@plt+0xff48>
  413510:	stp	w2, w2, [x20, #116]
  413514:	str	w2, [x20, #124]
  413518:	cbz	w23, 413524 <ferror@plt+0xff54>
  41351c:	stp	w2, w2, [x20, #104]
  413520:	str	w2, [x20, #112]
  413524:	ldrb	w0, [x19]
  413528:	cmp	w0, #0x2c
  41352c:	b.ne	413578 <ferror@plt+0xffa8>  // b.any
  413530:	add	x19, x19, #0x1
  413534:	b	4133e4 <ferror@plt+0xfe14>
  413538:	add	x19, x19, #0x3
  41353c:	mov	w2, #0x3                   	// #3
  413540:	b	413504 <ferror@plt+0xff34>
  413544:	add	x19, x19, #0x3
  413548:	mov	w2, #0x2                   	// #2
  41354c:	b	413504 <ferror@plt+0xff34>
  413550:	add	x19, x19, #0x4
  413554:	mov	w2, #0x1                   	// #1
  413558:	b	413504 <ferror@plt+0xff34>
  41355c:	cbz	w27, 413568 <ferror@plt+0xff98>
  413560:	add	x0, x20, w22, sxtw #2
  413564:	str	w2, [x0, #116]
  413568:	cbz	w23, 413524 <ferror@plt+0xff54>
  41356c:	add	x22, x20, w22, sxtw #2
  413570:	str	w2, [x22, #104]
  413574:	b	413524 <ferror@plt+0xff54>
  413578:	cbz	w0, 413590 <ferror@plt+0xffc0>
  41357c:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413580:	mov	x2, x19
  413584:	add	x1, x1, #0x4f1
  413588:	mov	w0, w24
  41358c:	bl	422290 <ferror@plt+0x1ecc0>
  413590:	ldp	w1, w0, [x20, #120]
  413594:	cmp	w1, w0
  413598:	b.lt	4135a8 <ferror@plt+0xffd8>  // b.tstop
  41359c:	ldp	w1, w0, [x20, #108]
  4135a0:	cmp	w1, w0
  4135a4:	b.ge	4135d0 <ferror@plt+0x10000>  // b.tcont
  4135a8:	mov	w0, w24
  4135ac:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  4135b0:	ldp	x19, x20, [sp, #16]
  4135b4:	add	x1, x1, #0x52a
  4135b8:	ldp	x21, x22, [sp, #32]
  4135bc:	ldp	x23, x24, [sp, #48]
  4135c0:	ldp	x25, x26, [sp, #64]
  4135c4:	ldr	x27, [sp, #80]
  4135c8:	ldp	x29, x30, [sp], #96
  4135cc:	b	422290 <ferror@plt+0x1ecc0>
  4135d0:	ldp	x19, x20, [sp, #16]
  4135d4:	ldp	x21, x22, [sp, #32]
  4135d8:	ldp	x23, x24, [sp, #48]
  4135dc:	ldp	x25, x26, [sp, #64]
  4135e0:	ldr	x27, [sp, #80]
  4135e4:	ldp	x29, x30, [sp], #96
  4135e8:	ret
  4135ec:	add	x0, x0, w1, sxtw
  4135f0:	mov	w2, #0x2                   	// #2
  4135f4:	cmp	w2, #0x4
  4135f8:	ccmp	w2, w1, #0x0, le
  4135fc:	b.ge	413618 <ferror@plt+0x10048>  // b.tcont
  413600:	sub	x3, x0, #0x2
  413604:	sub	x0, x0, #0x1
  413608:	ldurb	w4, [x0, #-1]
  41360c:	cmp	w4, #0x2e
  413610:	b.ne	41361c <ferror@plt+0x1004c>  // b.any
  413614:	strb	wzr, [x3]
  413618:	ret
  41361c:	add	w2, w2, #0x1
  413620:	b	4135f4 <ferror@plt+0x10024>
  413624:	ldrb	w3, [x0]
  413628:	mov	x4, x0
  41362c:	mov	x2, #0x0                   	// #0
  413630:	cbz	w3, 413660 <ferror@plt+0x10090>
  413634:	add	x5, x0, #0x1
  413638:	cmp	w3, #0x2f
  41363c:	b.eq	413654 <ferror@plt+0x10084>  // b.none
  413640:	cmp	w3, #0x2e
  413644:	csel	x2, x2, x0, ne  // ne = any
  413648:	ldrb	w3, [x5]
  41364c:	mov	x0, x5
  413650:	b	413630 <ferror@plt+0x10060>
  413654:	mov	x4, x5
  413658:	mov	x2, #0x0                   	// #0
  41365c:	b	413648 <ferror@plt+0x10078>
  413660:	cmp	x2, #0x0
  413664:	str	x4, [x1]
  413668:	csel	x2, x2, x0, ne  // ne = any
  41366c:	sub	w0, w2, w4
  413670:	ret
  413674:	stp	x29, x30, [sp, #-16]!
  413678:	mov	w3, w5
  41367c:	adrp	x5, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  413680:	mov	x29, sp
  413684:	ldr	x5, [x5, #784]
  413688:	cmp	x5, x7
  41368c:	b.eq	4136a8 <ferror@plt+0x100d8>  // b.none
  413690:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  413694:	add	x2, x2, #0x59b
  413698:	mov	w1, #0xde                  	// #222
  41369c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4136a0:	add	x0, x0, #0x25
  4136a4:	bl	403600 <ferror@plt+0x30>
  4136a8:	cbz	w4, 4136bc <ferror@plt+0x100ec>
  4136ac:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  4136b0:	mov	w1, #0xdf                  	// #223
  4136b4:	add	x2, x2, #0x59b
  4136b8:	b	41369c <ferror@plt+0x100cc>
  4136bc:	ldp	x29, x30, [sp], #16
  4136c0:	adrp	x4, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4136c4:	ldr	x4, [x4, #648]
  4136c8:	mov	x16, x4
  4136cc:	br	x16
  4136d0:	adrp	x4, 42d000 <ferror@plt+0x29a30>
  4136d4:	adrp	x3, 42d000 <ferror@plt+0x29a30>
  4136d8:	add	x4, x4, #0x3e4
  4136dc:	add	x3, x3, #0x3bc
  4136e0:	mov	x2, #0x0                   	// #0
  4136e4:	mov	x1, #0x10000               	// #65536
  4136e8:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4136ec:	add	x0, x0, #0x1d8
  4136f0:	b	45c200 <_obstack_begin@@Base>
  4136f4:	stp	x29, x30, [sp, #-48]!
  4136f8:	mov	x29, sp
  4136fc:	stp	x19, x20, [sp, #16]
  413700:	mov	x19, x0
  413704:	mov	x20, x1
  413708:	str	x21, [sp, #32]
  41370c:	bl	41230c <ferror@plt+0xed3c>
  413710:	mov	x21, x0
  413714:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  413718:	ldr	x0, [x0, #472]
  41371c:	cbnz	x0, 413738 <ferror@plt+0x10168>
  413720:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  413724:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413728:	add	x2, x2, #0x5b0
  41372c:	add	x0, x0, #0x25
  413730:	mov	w1, #0x11f                 	// #287
  413734:	bl	403600 <ferror@plt+0x30>
  413738:	adrp	x1, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  41373c:	mov	x0, x19
  413740:	add	x1, x1, #0x818
  413744:	mov	x2, #0xf10                 	// #3856
  413748:	bl	402cd0 <memcpy@plt>
  41374c:	cbz	x20, 413760 <ferror@plt+0x10190>
  413750:	mov	x0, x20
  413754:	mov	x2, #0xf10                 	// #3856
  413758:	mov	w1, #0x0                   	// #0
  41375c:	bl	403000 <memset@plt>
  413760:	lsl	x0, x21, #2
  413764:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  413768:	str	x0, [x19, #144]
  41376c:	cbz	x20, 413780 <ferror@plt+0x101b0>
  413770:	mov	x0, x21
  413774:	mov	x1, #0x4                   	// #4
  413778:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41377c:	str	x0, [x20, #144]
  413780:	ldr	x0, [x19, #144]
  413784:	bl	4122ac <ferror@plt+0xecdc>
  413788:	mov	w0, #0x2                   	// #2
  41378c:	ldr	x21, [sp, #32]
  413790:	str	w0, [x19, #3028]
  413794:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  413798:	add	x0, x0, #0x288
  41379c:	str	wzr, [x19, #3060]
  4137a0:	ldr	w1, [x0, #40]
  4137a4:	str	w1, [x19, #208]
  4137a8:	ldrb	w1, [x0, #72]
  4137ac:	str	w1, [x19, #3396]
  4137b0:	ldr	x1, [x0, #8]
  4137b4:	mov	x0, x19
  4137b8:	ldp	x19, x20, [sp, #16]
  4137bc:	mov	x16, x1
  4137c0:	ldp	x29, x30, [sp], #48
  4137c4:	br	x16
  4137c8:	ldr	x0, [x0, #144]
  4137cc:	b	4032a0 <free@plt>
  4137d0:	sub	sp, sp, #0x90
  4137d4:	stp	x29, x30, [sp, #32]
  4137d8:	add	x29, sp, #0x20
  4137dc:	stp	x19, x20, [sp, #48]
  4137e0:	mov	x19, x1
  4137e4:	mov	w20, w4
  4137e8:	stp	x21, x22, [sp, #64]
  4137ec:	mov	w21, w5
  4137f0:	mov	w22, #0x1                   	// #1
  4137f4:	stp	x23, x24, [sp, #80]
  4137f8:	mov	x23, x7
  4137fc:	mov	w24, #0x0                   	// #0
  413800:	stp	x25, x26, [sp, #96]
  413804:	adrp	x26, 485000 <_obstack_memory_used@@Base+0x28c10>
  413808:	add	x25, x2, #0x58
  41380c:	add	x26, x26, #0x5c4
  413810:	stp	x27, x28, [sp, #112]
  413814:	adrp	x27, 486000 <_obstack_memory_used@@Base+0x29c10>
  413818:	mov	x28, x0
  41381c:	add	x27, x27, #0x794
  413820:	str	x6, [sp, #128]
  413824:	str	w3, [sp, #140]
  413828:	ldr	w0, [sp, #140]
  41382c:	cmp	w22, w0
  413830:	b.cs	413918 <ferror@plt+0x10348>  // b.hs, b.nlast
  413834:	ldr	x0, [x25]
  413838:	cmp	x0, #0x86
  41383c:	b.hi	41386c <ferror@plt+0x1029c>  // b.pmore
  413840:	cmp	x0, #0x82
  413844:	b.ls	413874 <ferror@plt+0x102a4>  // b.plast
  413848:	sub	x0, x0, #0x84
  41384c:	cmp	x0, #0x2
  413850:	b.hi	413880 <ferror@plt+0x102b0>  // b.pmore
  413854:	cmp	w0, #0x2
  413858:	b.hi	413880 <ferror@plt+0x102b0>  // b.pmore
  41385c:	ldrb	w0, [x27, w0, uxtw]
  413860:	adr	x1, 41386c <ferror@plt+0x1029c>
  413864:	add	x0, x1, w0, sxtb #2
  413868:	br	x0
  41386c:	cmp	x0, #0x392
  413870:	b.eq	413908 <ferror@plt+0x10338>  // b.none
  413874:	add	w22, w22, #0x1
  413878:	add	x25, x25, #0x58
  41387c:	b	413828 <ferror@plt+0x10258>
  413880:	ldr	x0, [x25, #16]
  413884:	ldrb	w1, [x0]
  413888:	cbnz	w1, 41389c <ferror@plt+0x102cc>
  41388c:	mov	x0, #0x1                   	// #1
  413890:	stur	x0, [x28, #188]
  413894:	stur	xzr, [x28, #196]
  413898:	b	413874 <ferror@plt+0x102a4>
  41389c:	mov	w2, #0x0                   	// #0
  4138a0:	mov	x1, #0x0                   	// #0
  4138a4:	bl	416324 <ferror@plt+0x12d54>
  4138a8:	cmn	w0, #0x1
  4138ac:	b.ne	4138c0 <ferror@plt+0x102f0>  // b.any
  4138b0:	mov	x1, x26
  4138b4:	mov	w0, w20
  4138b8:	bl	422290 <ferror@plt+0x1ecc0>
  4138bc:	b	413874 <ferror@plt+0x102a4>
  4138c0:	cmp	w0, #0x100
  4138c4:	mov	w1, #0xff                  	// #255
  4138c8:	csel	w0, w0, w1, cc  // cc = lo, ul, last
  4138cc:	str	w0, [x28, #188]
  4138d0:	str	xzr, [x28, #192]
  4138d4:	str	wzr, [x28, #200]
  4138d8:	b	413874 <ferror@plt+0x102a4>
  4138dc:	mov	x0, #0x2                   	// #2
  4138e0:	stur	x0, [x28, #188]
  4138e4:	mov	x0, #0x100000000           	// #4294967296
  4138e8:	stur	x0, [x28, #196]
  4138ec:	b	413874 <ferror@plt+0x102a4>
  4138f0:	mov	x0, #0x3                   	// #3
  4138f4:	stur	x0, [x28, #188]
  4138f8:	mov	x0, #0x1                   	// #1
  4138fc:	b	4138e8 <ferror@plt+0x10318>
  413900:	mov	x0, #0x100000001           	// #4294967297
  413904:	b	413890 <ferror@plt+0x102c0>
  413908:	ldr	x0, [x25, #72]
  41390c:	cmp	x0, #0x0
  413910:	csinc	w24, w24, wzr, eq  // eq = none
  413914:	b	413874 <ferror@plt+0x102a4>
  413918:	ldp	w3, w0, [x28, #188]
  41391c:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  413920:	add	x2, x2, #0x8b8
  413924:	mov	w7, w21
  413928:	cmp	w0, #0x0
  41392c:	ldr	w0, [x28, #196]
  413930:	cset	w6, ne  // ne = any
  413934:	add	x2, x2, #0x98
  413938:	cmp	w0, #0x0
  41393c:	ldr	w0, [x28, #200]
  413940:	cset	w5, ne  // ne = any
  413944:	str	w20, [sp, #8]
  413948:	cmp	w0, #0x0
  41394c:	str	x23, [sp, #16]
  413950:	ldr	x0, [sp, #128]
  413954:	str	x0, [sp]
  413958:	mov	x1, x19
  41395c:	cset	w4, ne  // ne = any
  413960:	mov	x0, x28
  413964:	bl	4124ac <ferror@plt+0xeedc>
  413968:	ldr	w25, [x28, #188]
  41396c:	cbz	w24, 413980 <ferror@plt+0x103b0>
  413970:	ldr	w0, [x19, #2308]
  413974:	cbnz	w0, 413980 <ferror@plt+0x103b0>
  413978:	mov	w0, #0x1                   	// #1
  41397c:	str	w0, [x28, #2308]
  413980:	cmp	w25, #0x1
  413984:	b.gt	413ab4 <ferror@plt+0x104e4>
  413988:	mov	w0, #0x78                  	// #120
  41398c:	bl	412294 <ferror@plt+0xecc4>
  413990:	mov	w1, w0
  413994:	ldr	x3, [x19, #144]
  413998:	mov	w0, #0x78                  	// #120
  41399c:	ldr	x2, [x28, #144]
  4139a0:	bl	412210 <ferror@plt+0xec40>
  4139a4:	cmp	w25, #0x1
  4139a8:	mov	w0, #0x94                  	// #148
  4139ac:	b.le	413abc <ferror@plt+0x104ec>
  4139b0:	bl	412294 <ferror@plt+0xecc4>
  4139b4:	mov	w1, w0
  4139b8:	ldr	x3, [x19, #144]
  4139bc:	mov	w0, #0x94                  	// #148
  4139c0:	ldr	x2, [x28, #144]
  4139c4:	bl	412210 <ferror@plt+0xec40>
  4139c8:	cmp	w25, #0x1
  4139cc:	mov	w0, #0x7a                  	// #122
  4139d0:	b.le	413acc <ferror@plt+0x104fc>
  4139d4:	bl	412294 <ferror@plt+0xecc4>
  4139d8:	mov	w1, w0
  4139dc:	ldr	x3, [x19, #144]
  4139e0:	mov	w0, #0x7a                  	// #122
  4139e4:	ldr	x2, [x28, #144]
  4139e8:	bl	412210 <ferror@plt+0xec40>
  4139ec:	ldr	w0, [x28, #196]
  4139f0:	cbnz	w0, 413adc <ferror@plt+0x1050c>
  4139f4:	mov	w0, #0xb2                  	// #178
  4139f8:	bl	412294 <ferror@plt+0xecc4>
  4139fc:	mov	w1, w0
  413a00:	ldr	x3, [x19, #144]
  413a04:	mov	w0, #0xb2                  	// #178
  413a08:	ldr	x2, [x28, #144]
  413a0c:	bl	412210 <ferror@plt+0xec40>
  413a10:	ldr	w0, [x28, #200]
  413a14:	cbz	w0, 413ae4 <ferror@plt+0x10514>
  413a18:	ldr	x3, [x19, #144]
  413a1c:	mov	w1, #0x1                   	// #1
  413a20:	ldr	x2, [x28, #144]
  413a24:	mov	w0, #0x4d                  	// #77
  413a28:	bl	412210 <ferror@plt+0xec40>
  413a2c:	ldr	w0, [x28, #192]
  413a30:	cbz	w0, 413a48 <ferror@plt+0x10478>
  413a34:	ldr	x3, [x19, #144]
  413a38:	mov	w1, #0x2                   	// #2
  413a3c:	ldr	x2, [x28, #144]
  413a40:	mov	w0, #0x73                  	// #115
  413a44:	bl	412210 <ferror@plt+0xec40>
  413a48:	ldp	w3, w0, [x28, #188]
  413a4c:	mov	w7, w21
  413a50:	mov	x1, x19
  413a54:	cmp	w0, #0x0
  413a58:	ldr	w0, [x28, #196]
  413a5c:	cset	w6, ne  // ne = any
  413a60:	cmp	w0, #0x0
  413a64:	ldr	w0, [x28, #200]
  413a68:	cset	w5, ne  // ne = any
  413a6c:	str	w20, [sp, #8]
  413a70:	cmp	w0, #0x0
  413a74:	str	x23, [sp, #16]
  413a78:	ldr	x0, [sp, #128]
  413a7c:	str	x0, [sp]
  413a80:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  413a84:	cset	w4, ne  // ne = any
  413a88:	ldr	x2, [x0, #664]
  413a8c:	mov	x0, x28
  413a90:	bl	4124ac <ferror@plt+0xeedc>
  413a94:	ldp	x29, x30, [sp, #32]
  413a98:	ldp	x19, x20, [sp, #48]
  413a9c:	ldp	x21, x22, [sp, #64]
  413aa0:	ldp	x23, x24, [sp, #80]
  413aa4:	ldp	x25, x26, [sp, #96]
  413aa8:	ldp	x27, x28, [sp, #112]
  413aac:	add	sp, sp, #0x90
  413ab0:	ret
  413ab4:	mov	w1, #0x64                  	// #100
  413ab8:	b	413994 <ferror@plt+0x103c4>
  413abc:	bl	412294 <ferror@plt+0xecc4>
  413ac0:	mov	w1, #0xa                   	// #10
  413ac4:	sdiv	w1, w0, w1
  413ac8:	b	4139b8 <ferror@plt+0x103e8>
  413acc:	bl	412294 <ferror@plt+0xecc4>
  413ad0:	mov	w1, #0xa                   	// #10
  413ad4:	sdiv	w1, w0, w1
  413ad8:	b	4139dc <ferror@plt+0x1040c>
  413adc:	mov	w1, #0x1                   	// #1
  413ae0:	b	413a00 <ferror@plt+0x10430>
  413ae4:	mov	w0, #0x4d                  	// #77
  413ae8:	bl	412294 <ferror@plt+0xecc4>
  413aec:	mov	w1, w0
  413af0:	ldr	x3, [x19, #144]
  413af4:	ldr	x2, [x28, #144]
  413af8:	b	413a24 <ferror@plt+0x10454>
  413afc:	stp	x29, x30, [sp, #-80]!
  413b00:	mov	x29, sp
  413b04:	stp	x19, x20, [sp, #16]
  413b08:	mov	x20, x1
  413b0c:	mov	x19, x0
  413b10:	ldr	x1, [x0, #1448]
  413b14:	stp	x21, x22, [sp, #32]
  413b18:	mov	w21, w2
  413b1c:	stp	x23, x24, [sp, #48]
  413b20:	cbz	x1, 413b5c <ferror@plt+0x1058c>
  413b24:	ldrb	w0, [x0, #48]
  413b28:	cbnz	w0, 413b5c <ferror@plt+0x1058c>
  413b2c:	mov	x0, x1
  413b30:	ldrb	w2, [x0]
  413b34:	cbz	w2, 41439c <ferror@plt+0x10dcc>
  413b38:	cmp	w2, #0x2f
  413b3c:	b.eq	413b54 <ferror@plt+0x10584>  // b.none
  413b40:	add	x0, x0, #0x1
  413b44:	b	413b30 <ferror@plt+0x10560>
  413b48:	mov	x2, #0x0                   	// #0
  413b4c:	bl	4166a0 <ferror@plt+0x130d0>
  413b50:	str	x0, [x19, #1448]
  413b54:	mov	w0, #0x1                   	// #1
  413b58:	strb	w0, [x19, #48]
  413b5c:	ldr	w0, [x19, #3376]
  413b60:	cbnz	w0, 413ba8 <ferror@plt+0x105d8>
  413b64:	ldr	w0, [x19, #2992]
  413b68:	cbz	w0, 413b84 <ferror@plt+0x105b4>
  413b6c:	ldr	w0, [x20, #2992]
  413b70:	cbz	w0, 413b84 <ferror@plt+0x105b4>
  413b74:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413b78:	mov	w0, w21
  413b7c:	add	x1, x1, #0x612
  413b80:	bl	422290 <ferror@plt+0x1ecc0>
  413b84:	ldr	w0, [x19, #3208]
  413b88:	str	wzr, [x19, #2992]
  413b8c:	cmp	w0, #0x1
  413b90:	b.ne	413ba4 <ferror@plt+0x105d4>  // b.any
  413b94:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413b98:	mov	w0, w21
  413b9c:	add	x1, x1, #0x653
  413ba0:	bl	422290 <ferror@plt+0x1ecc0>
  413ba4:	str	wzr, [x19, #3208]
  413ba8:	ldr	x0, [x19, #3016]
  413bac:	cbz	x0, 413bb8 <ferror@plt+0x105e8>
  413bb0:	mov	w0, #0x1                   	// #1
  413bb4:	str	w0, [x19, #3168]
  413bb8:	ldr	w0, [x19, #2144]
  413bbc:	cbz	w0, 413bd4 <ferror@plt+0x10604>
  413bc0:	ldr	w0, [x19, #2576]
  413bc4:	cbz	w0, 413bd4 <ferror@plt+0x10604>
  413bc8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  413bcc:	add	x0, x0, #0x695
  413bd0:	bl	422340 <ferror@plt+0x1ed70>
  413bd4:	ldr	w1, [x19, #188]
  413bd8:	ldr	w0, [x19, #3208]
  413bdc:	cbnz	w1, 413db4 <ferror@plt+0x107e4>
  413be0:	cmp	w0, #0x2
  413be4:	b.ne	413db4 <ferror@plt+0x107e4>  // b.any
  413be8:	ldr	w0, [x19, #2992]
  413bec:	cbz	w0, 413bf8 <ferror@plt+0x10628>
  413bf0:	ldr	w0, [x20, #2992]
  413bf4:	cbnz	w0, 413c04 <ferror@plt+0x10634>
  413bf8:	str	wzr, [x19, #2992]
  413bfc:	str	wzr, [x19, #3208]
  413c00:	str	wzr, [x19, #2992]
  413c04:	ldrb	w0, [x19, #52]
  413c08:	cbnz	w0, 413c30 <ferror@plt+0x10660>
  413c0c:	ldr	w0, [x19, #1468]
  413c10:	cmn	w0, #0x1
  413c14:	b.ne	413c1c <ferror@plt+0x1064c>  // b.any
  413c18:	str	wzr, [x19, #1468]
  413c1c:	ldr	w0, [x19, #1468]
  413c20:	cbz	w0, 413ddc <ferror@plt+0x1080c>
  413c24:	str	w0, [x19, #1464]
  413c28:	mov	w0, #0x1                   	// #1
  413c2c:	strb	w0, [x19, #52]
  413c30:	ldr	w0, [x19, #3120]
  413c34:	cmn	w0, #0x1
  413c38:	b.ne	413c40 <ferror@plt+0x10670>  // b.any
  413c3c:	str	wzr, [x19, #3120]
  413c40:	ldr	w0, [x19, #188]
  413c44:	cbnz	w0, 413c54 <ferror@plt+0x10684>
  413c48:	mov	w0, #0x1                   	// #1
  413c4c:	str	wzr, [x19, #732]
  413c50:	str	w0, [x19, #2244]
  413c54:	adrp	x23, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  413c58:	add	x23, x23, #0x288
  413c5c:	mov	x0, x19
  413c60:	ldr	x1, [x23, #48]
  413c64:	blr	x1
  413c68:	mov	w22, w0
  413c6c:	ldr	w0, [x19, #2036]
  413c70:	cbz	w0, 413cac <ferror@plt+0x106dc>
  413c74:	ldr	w0, [x19, #2864]
  413c78:	cbz	w0, 413cac <ferror@plt+0x106dc>
  413c7c:	cmp	w22, #0x1
  413c80:	ccmp	w22, #0x2, #0x0, ne  // ne = any
  413c84:	b.le	413cac <ferror@plt+0x106dc>
  413c88:	ldr	w0, [x20, #2864]
  413c8c:	cbz	w0, 413ca0 <ferror@plt+0x106d0>
  413c90:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413c94:	mov	w0, w21
  413c98:	add	x1, x1, #0x717
  413c9c:	bl	421e40 <ferror@plt+0x1e870>
  413ca0:	mov	w0, #0x1                   	// #1
  413ca4:	str	w0, [x19, #2856]
  413ca8:	str	wzr, [x19, #2864]
  413cac:	ldr	w0, [x19, #3396]
  413cb0:	ldr	w1, [x19, #2864]
  413cb4:	cbz	w0, 413e00 <ferror@plt+0x10830>
  413cb8:	ldrb	w2, [x23, #72]
  413cbc:	cbnz	w2, 413e00 <ferror@plt+0x10830>
  413cc0:	cbz	w1, 413cf4 <ferror@plt+0x10724>
  413cc4:	cmp	w22, #0x1
  413cc8:	ccmp	w22, #0x2, #0x0, ne  // ne = any
  413ccc:	b.le	413e04 <ferror@plt+0x10834>
  413cd0:	ldr	w0, [x20, #2864]
  413cd4:	cbz	w0, 413ce8 <ferror@plt+0x10718>
  413cd8:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413cdc:	add	x1, x1, #0x76d
  413ce0:	mov	w0, w21
  413ce4:	bl	421e40 <ferror@plt+0x1e870>
  413ce8:	mov	w0, #0x1                   	// #1
  413cec:	str	w0, [x19, #2856]
  413cf0:	str	wzr, [x19, #2864]
  413cf4:	ldr	w0, [x19, #2996]
  413cf8:	cbnz	w0, 413d00 <ferror@plt+0x10730>
  413cfc:	str	wzr, [x19, #3000]
  413d00:	ldr	w0, [x19, #1752]
  413d04:	cbz	w0, 413d30 <ferror@plt+0x10760>
  413d08:	ldr	x2, [x19, #144]
  413d0c:	mov	w1, #0x64                  	// #100
  413d10:	ldr	x3, [x20, #144]
  413d14:	mov	w0, #0x1e                  	// #30
  413d18:	bl	412210 <ferror@plt+0xec40>
  413d1c:	ldr	x2, [x19, #144]
  413d20:	mov	w1, #0x28                  	// #40
  413d24:	ldr	x3, [x20, #144]
  413d28:	mov	w0, #0x1f                  	// #31
  413d2c:	bl	412210 <ferror@plt+0xec40>
  413d30:	ldr	x0, [x19, #2480]
  413d34:	cbz	x0, 413d98 <ferror@plt+0x107c8>
  413d38:	mov	w0, #0x1                   	// #1
  413d3c:	str	w0, [x19, #168]
  413d40:	ldr	w0, [x19, #2064]
  413d44:	str	wzr, [x19, #3476]
  413d48:	cbnz	w0, 413d7c <ferror@plt+0x107ac>
  413d4c:	ldr	w0, [x20, #3408]
  413d50:	cbz	w0, 413d7c <ferror@plt+0x107ac>
  413d54:	ldr	w0, [x19, #3408]
  413d58:	cbnz	w0, 413d7c <ferror@plt+0x107ac>
  413d5c:	ldr	w0, [x20, #2064]
  413d60:	cbz	w0, 413d74 <ferror@plt+0x107a4>
  413d64:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413d68:	mov	w0, w21
  413d6c:	add	x1, x1, #0x808
  413d70:	bl	422290 <ferror@plt+0x1ecc0>
  413d74:	mov	w0, #0x1                   	// #1
  413d78:	str	w0, [x19, #2064]
  413d7c:	ldr	w0, [x19, #3552]
  413d80:	cbz	w0, 413d98 <ferror@plt+0x107c8>
  413d84:	mov	w0, w21
  413d88:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413d8c:	add	x1, x1, #0x847
  413d90:	bl	421e40 <ferror@plt+0x1e870>
  413d94:	str	wzr, [x19, #3552]
  413d98:	ldr	w0, [x19, #3092]
  413d9c:	cmn	w0, #0x1
  413da0:	b.ne	413e38 <ferror@plt+0x10868>  // b.any
  413da4:	str	wzr, [x19, #3092]
  413da8:	ldr	w0, [x19, #2864]
  413dac:	cbnz	w0, 413e80 <ferror@plt+0x108b0>
  413db0:	b	413e88 <ferror@plt+0x108b8>
  413db4:	cbnz	w0, 413c04 <ferror@plt+0x10634>
  413db8:	ldr	w0, [x19, #2992]
  413dbc:	cbz	w0, 413c00 <ferror@plt+0x10630>
  413dc0:	ldr	w0, [x20, #2992]
  413dc4:	cbz	w0, 413c00 <ferror@plt+0x10630>
  413dc8:	mov	w0, w21
  413dcc:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413dd0:	add	x1, x1, #0x6d4
  413dd4:	bl	422290 <ferror@plt+0x1ecc0>
  413dd8:	b	413c00 <ferror@plt+0x10630>
  413ddc:	ldr	w0, [x19, #1464]
  413de0:	cmn	w0, #0x1
  413de4:	b.ne	413df0 <ferror@plt+0x10820>  // b.any
  413de8:	str	wzr, [x19, #1464]
  413dec:	b	413c28 <ferror@plt+0x10658>
  413df0:	cbz	w0, 413c28 <ferror@plt+0x10658>
  413df4:	mov	w0, #0x1                   	// #1
  413df8:	str	w0, [x19, #180]
  413dfc:	b	413c28 <ferror@plt+0x10658>
  413e00:	cbz	w1, 413cf4 <ferror@plt+0x10724>
  413e04:	ldrb	w1, [x23, #73]
  413e08:	cbz	w1, 413e24 <ferror@plt+0x10854>
  413e0c:	cbz	w0, 413cf4 <ferror@plt+0x10724>
  413e10:	ldrb	w0, [x23, #72]
  413e14:	cbz	w0, 413cf4 <ferror@plt+0x10724>
  413e18:	cmp	w22, #0x1
  413e1c:	ccmp	w22, #0x2, #0x0, ne  // ne = any
  413e20:	b.le	413cf4 <ferror@plt+0x10724>
  413e24:	ldr	w0, [x20, #2864]
  413e28:	cbz	w0, 413ce8 <ferror@plt+0x10718>
  413e2c:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413e30:	add	x1, x1, #0x7c2
  413e34:	b	413ce0 <ferror@plt+0x10710>
  413e38:	cbz	w0, 413da8 <ferror@plt+0x107d8>
  413e3c:	ldr	x2, [x23, #56]
  413e40:	mov	x1, x19
  413e44:	mov	w0, #0x1                   	// #1
  413e48:	blr	x2
  413e4c:	tst	w0, #0xff
  413e50:	b.ne	413e68 <ferror@plt+0x10898>  // b.any
  413e54:	mov	w0, w21
  413e58:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413e5c:	add	x1, x1, #0x87e
  413e60:	bl	422290 <ferror@plt+0x1ecc0>
  413e64:	b	413da4 <ferror@plt+0x107d4>
  413e68:	ldr	w1, [x19, #3092]
  413e6c:	ldr	w0, [x19, #2864]
  413e70:	cbz	w1, 413da8 <ferror@plt+0x107d8>
  413e74:	cbz	w0, 413e88 <ferror@plt+0x108b8>
  413e78:	ldr	w0, [x20, #2864]
  413e7c:	cbz	w0, 413ff0 <ferror@plt+0x10a20>
  413e80:	ldr	w0, [x20, #2868]
  413e84:	cbz	w0, 413ff8 <ferror@plt+0x10a28>
  413e88:	ldr	w0, [x19, #3432]
  413e8c:	cmp	w0, #0x1
  413e90:	b.ne	413ed0 <ferror@plt+0x10900>  // b.any
  413e94:	ldr	x2, [x19, #144]
  413e98:	mov	w1, #0x6                   	// #6
  413e9c:	ldr	x3, [x20, #144]
  413ea0:	mov	w0, #0x5d                  	// #93
  413ea4:	bl	412210 <ferror@plt+0xec40>
  413ea8:	ldr	x2, [x19, #144]
  413eac:	mov	w1, #0x0                   	// #0
  413eb0:	ldr	x3, [x20, #144]
  413eb4:	mov	w0, #0x5c                  	// #92
  413eb8:	bl	412210 <ferror@plt+0xec40>
  413ebc:	ldr	x2, [x19, #144]
  413ec0:	mov	w1, #0x0                   	// #0
  413ec4:	ldr	x3, [x20, #144]
  413ec8:	mov	w0, #0x5e                  	// #94
  413ecc:	bl	412210 <ferror@plt+0xec40>
  413ed0:	ldr	w0, [x19, #3300]
  413ed4:	cbnz	w0, 413ee0 <ferror@plt+0x10910>
  413ed8:	ldr	w0, [x19, #3340]
  413edc:	cbz	w0, 413ee8 <ferror@plt+0x10918>
  413ee0:	ldr	w0, [x19, #3284]
  413ee4:	cbnz	w0, 413efc <ferror@plt+0x1092c>
  413ee8:	ldr	x2, [x19, #144]
  413eec:	mov	w1, #0x0                   	// #0
  413ef0:	ldr	x3, [x20, #144]
  413ef4:	mov	w0, #0xb0                  	// #176
  413ef8:	bl	412210 <ferror@plt+0xec40>
  413efc:	ldr	w0, [x19, #3552]
  413f00:	cbz	w0, 413f0c <ferror@plt+0x1093c>
  413f04:	mov	w0, #0x2                   	// #2
  413f08:	str	w0, [x19, #3536]
  413f0c:	ldr	w0, [x19, #212]
  413f10:	tst	w0, #0x6
  413f14:	b.ne	413f44 <ferror@plt+0x10974>  // b.any
  413f18:	tbz	w0, #26, 413f2c <ferror@plt+0x1095c>
  413f1c:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413f20:	mov	w0, w21
  413f24:	add	x1, x1, #0x8c0
  413f28:	bl	422290 <ferror@plt+0x1ecc0>
  413f2c:	ldr	w0, [x19, #212]
  413f30:	tbz	w0, #27, 413f44 <ferror@plt+0x10974>
  413f34:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413f38:	mov	w0, w21
  413f3c:	add	x1, x1, #0x92d
  413f40:	bl	422290 <ferror@plt+0x1ecc0>
  413f44:	ldr	w0, [x19, #212]
  413f48:	and	w0, w0, #0x6
  413f4c:	cmp	w0, #0x6
  413f50:	b.ne	413f64 <ferror@plt+0x10994>  // b.any
  413f54:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413f58:	mov	w0, w21
  413f5c:	add	x1, x1, #0x99b
  413f60:	bl	422290 <ferror@plt+0x1ecc0>
  413f64:	ldr	w0, [x19, #212]
  413f68:	mov	w1, #0x9                   	// #9
  413f6c:	and	w0, w0, w1
  413f70:	cmp	w0, w1
  413f74:	b.ne	413f88 <ferror@plt+0x109b8>  // b.any
  413f78:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413f7c:	mov	w0, w21
  413f80:	add	x1, x1, #0x9e5
  413f84:	bl	422290 <ferror@plt+0x1ecc0>
  413f88:	ldr	w0, [x19, #212]
  413f8c:	and	w0, w0, #0x18
  413f90:	cmp	w0, #0x18
  413f94:	b.ne	413fa8 <ferror@plt+0x109d8>  // b.any
  413f98:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  413f9c:	mov	w0, w21
  413fa0:	add	x1, x1, #0xa4a
  413fa4:	bl	422290 <ferror@plt+0x1ecc0>
  413fa8:	adrp	x22, 486000 <_obstack_memory_used@@Base+0x29c10>
  413fac:	add	x22, x22, #0x8b8
  413fb0:	adrp	x23, 485000 <_obstack_memory_used@@Base+0x28c10>
  413fb4:	add	x22, x22, #0xc78
  413fb8:	add	x23, x23, #0xa89
  413fbc:	ldr	x2, [x22]
  413fc0:	cbz	x2, 414004 <ferror@plt+0x10a34>
  413fc4:	ldr	w1, [x19, #220]
  413fc8:	ldr	w0, [x22, #8]
  413fcc:	tst	w1, w0
  413fd0:	b.eq	413fe8 <ferror@plt+0x10a18>  // b.none
  413fd4:	ldrb	w0, [x22, #24]
  413fd8:	cbnz	w0, 413fe8 <ferror@plt+0x10a18>
  413fdc:	mov	x1, x23
  413fe0:	mov	w0, w21
  413fe4:	bl	422290 <ferror@plt+0x1ecc0>
  413fe8:	add	x22, x22, #0x20
  413fec:	b	413fbc <ferror@plt+0x109ec>
  413ff0:	str	wzr, [x19, #2864]
  413ff4:	b	413e88 <ferror@plt+0x108b8>
  413ff8:	mov	w0, #0x1                   	// #1
  413ffc:	str	w0, [x19, #2868]
  414000:	b	413e88 <ferror@plt+0x108b8>
  414004:	ldr	w0, [x19, #212]
  414008:	and	w1, w0, #0x1ffc00
  41400c:	and	w1, w1, #0xfff807ff
  414010:	cbz	w1, 414018 <ferror@plt+0x10a48>
  414014:	str	wzr, [x19, #1880]
  414018:	mov	w1, #0xfffffeef            	// #-273
  41401c:	tst	w0, w1
  414020:	b.eq	414028 <ferror@plt+0x10a58>  // b.none
  414024:	str	wzr, [x19, #1500]
  414028:	tbz	w0, #1, 414064 <ferror@plt+0x10a94>
  41402c:	ldr	w0, [x20, #2904]
  414030:	cbnz	w0, 414064 <ferror@plt+0x10a94>
  414034:	mov	w0, #0x1                   	// #1
  414038:	str	w0, [x19, #2904]
  41403c:	ldr	w0, [x19, #3124]
  414040:	cbz	w0, 41405c <ferror@plt+0x10a8c>
  414044:	ldr	w0, [x20, #3124]
  414048:	cbz	w0, 41405c <ferror@plt+0x10a8c>
  41404c:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  414050:	mov	w0, w21
  414054:	add	x1, x1, #0xab4
  414058:	bl	422290 <ferror@plt+0x1ecc0>
  41405c:	str	wzr, [x19, #3124]
  414060:	b	41406c <ferror@plt+0x10a9c>
  414064:	ldr	w0, [x19, #2904]
  414068:	cbnz	w0, 41403c <ferror@plt+0x10a6c>
  41406c:	ldr	w0, [x19, #212]
  414070:	tbz	w0, #1, 414088 <ferror@plt+0x10ab8>
  414074:	ldr	w0, [x19, #2144]
  414078:	cbz	w0, 414088 <ferror@plt+0x10ab8>
  41407c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  414080:	add	x0, x0, #0xb02
  414084:	bl	422340 <ferror@plt+0x1ed70>
  414088:	ldr	w0, [x19, #212]
  41408c:	tbz	w0, #2, 4140a4 <ferror@plt+0x10ad4>
  414090:	ldr	w0, [x19, #2144]
  414094:	cbz	w0, 4140a4 <ferror@plt+0x10ad4>
  414098:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  41409c:	add	x0, x0, #0xb44
  4140a0:	bl	422340 <ferror@plt+0x1ed70>
  4140a4:	ldr	w0, [x19, #2428]
  4140a8:	cbz	w0, 4140c0 <ferror@plt+0x10af0>
  4140ac:	ldr	x0, [x19, #2480]
  4140b0:	cbz	x0, 4140c0 <ferror@plt+0x10af0>
  4140b4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4140b8:	add	x0, x0, #0xb8d
  4140bc:	bl	422340 <ferror@plt+0x1ed70>
  4140c0:	ldr	w0, [x19, #2428]
  4140c4:	cmp	w0, #0x0
  4140c8:	cbz	w0, 414308 <ferror@plt+0x10d38>
  4140cc:	b.gt	4140e8 <ferror@plt+0x10b18>
  4140d0:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  4140d4:	add	x2, x2, #0xbb5
  4140d8:	mov	w1, #0x2d2                 	// #722
  4140dc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4140e0:	add	x0, x0, #0x25
  4140e4:	bl	403600 <ferror@plt+0x30>
  4140e8:	cmp	w0, #0x1
  4140ec:	b.eq	414108 <ferror@plt+0x10b38>  // b.none
  4140f0:	cmp	w0, #0x2
  4140f4:	b.eq	414188 <ferror@plt+0x10bb8>  // b.none
  4140f8:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  4140fc:	mov	w1, #0x355                 	// #853
  414100:	add	x2, x2, #0xbb5
  414104:	b	4140dc <ferror@plt+0x10b0c>
  414108:	ldr	w0, [x20, #2288]
  41410c:	cbz	w0, 41431c <ferror@plt+0x10d4c>
  414110:	ldr	w0, [x19, #2288]
  414114:	cbz	w0, 41431c <ferror@plt+0x10d4c>
  414118:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41411c:	mov	w0, w21
  414120:	add	x1, x1, #0xbd7
  414124:	bl	422290 <ferror@plt+0x1ecc0>
  414128:	ldr	w0, [x20, #2328]
  41412c:	cbz	w0, 414324 <ferror@plt+0x10d54>
  414130:	ldr	w0, [x19, #2328]
  414134:	cbz	w0, 414324 <ferror@plt+0x10d54>
  414138:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41413c:	mov	w0, w21
  414140:	add	x1, x1, #0xc26
  414144:	bl	422290 <ferror@plt+0x1ecc0>
  414148:	ldr	w0, [x20, #2672]
  41414c:	cbz	w0, 41432c <ferror@plt+0x10d5c>
  414150:	ldr	w0, [x19, #2672]
  414154:	cbz	w0, 41432c <ferror@plt+0x10d5c>
  414158:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41415c:	mov	w0, w21
  414160:	add	x1, x1, #0xc70
  414164:	bl	422290 <ferror@plt+0x1ecc0>
  414168:	ldr	w0, [x20, #2284]
  41416c:	cbz	w0, 414334 <ferror@plt+0x10d64>
  414170:	ldr	w0, [x19, #2284]
  414174:	cbz	w0, 414334 <ferror@plt+0x10d64>
  414178:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41417c:	mov	w0, w21
  414180:	add	x1, x1, #0xcc3
  414184:	bl	422290 <ferror@plt+0x1ecc0>
  414188:	ldr	w0, [x20, #3476]
  41418c:	cbz	w0, 41433c <ferror@plt+0x10d6c>
  414190:	ldr	w0, [x19, #3476]
  414194:	cbz	w0, 41433c <ferror@plt+0x10d6c>
  414198:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41419c:	mov	w0, w21
  4141a0:	add	x1, x1, #0xd0c
  4141a4:	bl	422290 <ferror@plt+0x1ecc0>
  4141a8:	ldr	w0, [x20, #2308]
  4141ac:	cbz	w0, 414344 <ferror@plt+0x10d74>
  4141b0:	ldr	w0, [x19, #2308]
  4141b4:	cbz	w0, 414344 <ferror@plt+0x10d74>
  4141b8:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  4141bc:	mov	w0, w21
  4141c0:	add	x1, x1, #0xd69
  4141c4:	bl	422290 <ferror@plt+0x1ecc0>
  4141c8:	ldr	w0, [x20, #2320]
  4141cc:	cbz	w0, 41434c <ferror@plt+0x10d7c>
  4141d0:	ldr	w0, [x19, #2320]
  4141d4:	cbz	w0, 41434c <ferror@plt+0x10d7c>
  4141d8:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  4141dc:	mov	w0, w21
  4141e0:	add	x1, x1, #0xdc0
  4141e4:	bl	422290 <ferror@plt+0x1ecc0>
  4141e8:	ldr	w0, [x20, #2316]
  4141ec:	cbz	w0, 414354 <ferror@plt+0x10d84>
  4141f0:	ldr	w0, [x19, #2316]
  4141f4:	cbz	w0, 414354 <ferror@plt+0x10d84>
  4141f8:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  4141fc:	mov	w0, w21
  414200:	add	x1, x1, #0xe1d
  414204:	bl	422290 <ferror@plt+0x1ecc0>
  414208:	ldr	w0, [x20, #2292]
  41420c:	cbz	w0, 41435c <ferror@plt+0x10d8c>
  414210:	ldr	w0, [x19, #2292]
  414214:	cbz	w0, 41435c <ferror@plt+0x10d8c>
  414218:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41421c:	mov	w0, w21
  414220:	add	x1, x1, #0xe73
  414224:	bl	422290 <ferror@plt+0x1ecc0>
  414228:	ldr	w0, [x20, #2296]
  41422c:	cbz	w0, 414364 <ferror@plt+0x10d94>
  414230:	ldr	w0, [x19, #2296]
  414234:	cbz	w0, 414364 <ferror@plt+0x10d94>
  414238:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41423c:	mov	w0, w21
  414240:	add	x1, x1, #0xeca
  414244:	bl	422290 <ferror@plt+0x1ecc0>
  414248:	ldr	w0, [x20, #2300]
  41424c:	cbz	w0, 41436c <ferror@plt+0x10d9c>
  414250:	ldr	w0, [x19, #2300]
  414254:	cbz	w0, 41436c <ferror@plt+0x10d9c>
  414258:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41425c:	mov	w0, w21
  414260:	add	x1, x1, #0xf2b
  414264:	bl	422290 <ferror@plt+0x1ecc0>
  414268:	ldr	w0, [x20, #2280]
  41426c:	cbz	w0, 414374 <ferror@plt+0x10da4>
  414270:	ldr	w0, [x19, #2280]
  414274:	cbz	w0, 414374 <ferror@plt+0x10da4>
  414278:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41427c:	mov	w0, w21
  414280:	add	x1, x1, #0xf8c
  414284:	bl	422290 <ferror@plt+0x1ecc0>
  414288:	ldr	w0, [x20, #2336]
  41428c:	cbz	w0, 41437c <ferror@plt+0x10dac>
  414290:	ldr	w0, [x19, #2336]
  414294:	cbz	w0, 41437c <ferror@plt+0x10dac>
  414298:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  41429c:	mov	w0, w21
  4142a0:	add	x1, x1, #0xfe6
  4142a4:	bl	422290 <ferror@plt+0x1ecc0>
  4142a8:	ldr	w0, [x20, #2312]
  4142ac:	cbz	w0, 414384 <ferror@plt+0x10db4>
  4142b0:	ldr	w0, [x19, #2312]
  4142b4:	cbz	w0, 414384 <ferror@plt+0x10db4>
  4142b8:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4142bc:	mov	w0, w21
  4142c0:	add	x1, x1, #0x3d
  4142c4:	bl	422290 <ferror@plt+0x1ecc0>
  4142c8:	ldr	w0, [x20, #2324]
  4142cc:	cbz	w0, 41438c <ferror@plt+0x10dbc>
  4142d0:	ldr	w0, [x19, #2324]
  4142d4:	cbz	w0, 41438c <ferror@plt+0x10dbc>
  4142d8:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4142dc:	mov	w0, w21
  4142e0:	add	x1, x1, #0x9b
  4142e4:	bl	422290 <ferror@plt+0x1ecc0>
  4142e8:	ldr	w0, [x20, #2332]
  4142ec:	cbz	w0, 414394 <ferror@plt+0x10dc4>
  4142f0:	ldr	w0, [x19, #2332]
  4142f4:	cbz	w0, 414394 <ferror@plt+0x10dc4>
  4142f8:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4142fc:	mov	w0, w21
  414300:	add	x1, x1, #0x104
  414304:	bl	422290 <ferror@plt+0x1ecc0>
  414308:	ldp	x19, x20, [sp, #16]
  41430c:	ldp	x21, x22, [sp, #32]
  414310:	ldp	x23, x24, [sp, #48]
  414314:	ldp	x29, x30, [sp], #80
  414318:	ret
  41431c:	str	wzr, [x19, #2288]
  414320:	b	414128 <ferror@plt+0x10b58>
  414324:	str	wzr, [x19, #2328]
  414328:	b	414148 <ferror@plt+0x10b78>
  41432c:	str	wzr, [x19, #2672]
  414330:	b	414168 <ferror@plt+0x10b98>
  414334:	str	wzr, [x19, #2284]
  414338:	b	414188 <ferror@plt+0x10bb8>
  41433c:	str	wzr, [x19, #3476]
  414340:	b	4141a8 <ferror@plt+0x10bd8>
  414344:	str	wzr, [x19, #2308]
  414348:	b	4141c8 <ferror@plt+0x10bf8>
  41434c:	str	wzr, [x19, #2320]
  414350:	b	4141e8 <ferror@plt+0x10c18>
  414354:	str	wzr, [x19, #2316]
  414358:	b	414208 <ferror@plt+0x10c38>
  41435c:	str	wzr, [x19, #2292]
  414360:	b	414228 <ferror@plt+0x10c58>
  414364:	str	wzr, [x19, #2296]
  414368:	b	414248 <ferror@plt+0x10c78>
  41436c:	str	wzr, [x19, #2300]
  414370:	b	414268 <ferror@plt+0x10c98>
  414374:	str	wzr, [x19, #2280]
  414378:	b	414288 <ferror@plt+0x10cb8>
  41437c:	str	wzr, [x19, #2336]
  414380:	b	4142a8 <ferror@plt+0x10cd8>
  414384:	str	wzr, [x19, #2312]
  414388:	b	4142c8 <ferror@plt+0x10cf8>
  41438c:	str	wzr, [x19, #2324]
  414390:	b	4142e8 <ferror@plt+0x10d18>
  414394:	str	wzr, [x19, #2332]
  414398:	b	414308 <ferror@plt+0x10d38>
  41439c:	ldr	x0, [x19, #1456]
  4143a0:	cbnz	x0, 413b48 <ferror@plt+0x10578>
  4143a4:	ldr	x22, [x19, #1440]
  4143a8:	cbz	x22, 413b54 <ferror@plt+0x10584>
  4143ac:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4143b0:	mov	x0, x22
  4143b4:	add	x1, x1, #0xcc0
  4143b8:	bl	403220 <strcmp@plt>
  4143bc:	cbz	w0, 413b54 <ferror@plt+0x10584>
  4143c0:	mov	x0, x22
  4143c4:	add	x1, sp, #0x48
  4143c8:	bl	413624 <ferror@plt+0x10054>
  4143cc:	ldr	x23, [sp, #72]
  4143d0:	ldr	x22, [x19, #1440]
  4143d4:	cmp	x22, x23
  4143d8:	b.eq	413b54 <ferror@plt+0x10584>  // b.none
  4143dc:	ldr	x0, [x19, #1448]
  4143e0:	sub	x23, x23, x22
  4143e4:	adrp	x22, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4143e8:	add	x22, x22, #0x1d8
  4143ec:	sxtw	x23, w23
  4143f0:	bl	402d50 <strlen@plt>
  4143f4:	add	x1, x23, #0x1
  4143f8:	add	x24, x1, x0
  4143fc:	ldp	x1, x0, [x22, #24]
  414400:	sub	x0, x0, x1
  414404:	cmp	x24, x0
  414408:	b.ls	414418 <ferror@plt+0x10e48>  // b.plast
  41440c:	mov	x1, x24
  414410:	mov	x0, x22
  414414:	bl	45c22c <_obstack_newchunk@@Base>
  414418:	ldr	x0, [x22, #24]
  41441c:	add	x1, x0, x24
  414420:	ldr	x24, [x22, #16]
  414424:	cmp	x1, x24
  414428:	b.ne	414438 <ferror@plt+0x10e68>  // b.any
  41442c:	ldrb	w0, [x22, #80]
  414430:	orr	w0, w0, #0x2
  414434:	strb	w0, [x22, #80]
  414438:	ldr	x0, [x22, #48]
  41443c:	ldr	x2, [x22, #32]
  414440:	add	x1, x1, x0
  414444:	bic	x0, x1, x0
  414448:	ldr	x1, [x22, #8]
  41444c:	sub	x3, x0, x1
  414450:	sub	x1, x2, x1
  414454:	cmp	x3, x1
  414458:	ldr	x1, [x19, #1440]
  41445c:	csel	x0, x0, x2, ls  // ls = plast
  414460:	mov	x2, x23
  414464:	stp	x0, x0, [x22, #16]
  414468:	mov	x0, x24
  41446c:	bl	402cd0 <memcpy@plt>
  414470:	ldr	x1, [x19, #1448]
  414474:	add	x0, x24, x23
  414478:	bl	403360 <strcpy@plt>
  41447c:	str	x24, [x19, #1448]
  414480:	b	413b54 <ferror@plt+0x10584>
  414484:	stp	x29, x30, [sp, #-176]!
  414488:	cmp	w2, #0x3ef
  41448c:	mov	x29, sp
  414490:	stp	x19, x20, [sp, #16]
  414494:	mov	x19, x0
  414498:	and	w0, w5, #0xff
  41449c:	stp	x25, x26, [sp, #64]
  4144a0:	mov	w26, w1
  4144a4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4144a8:	add	x1, x1, #0x9b8
  4144ac:	str	w0, [sp, #168]
  4144b0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  4144b4:	add	x0, x0, #0x8b8
  4144b8:	sub	x1, x1, #0xa8
  4144bc:	add	x0, x0, #0xc78
  4144c0:	csel	x0, x1, x0, eq  // eq = none
  4144c4:	str	x0, [sp, #120]
  4144c8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  4144cc:	add	x0, x0, #0x122
  4144d0:	str	x0, [sp, #128]
  4144d4:	mov	w0, w4
  4144d8:	cmp	w0, #0x0
  4144dc:	stp	x23, x24, [sp, #48]
  4144e0:	adrp	x23, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4144e4:	ldr	x0, [sp, #128]
  4144e8:	add	x23, x23, #0xd12
  4144ec:	mov	w20, w3
  4144f0:	stp	x21, x22, [sp, #32]
  4144f4:	csel	x0, x0, x23, ne  // ne = any
  4144f8:	mov	w21, w2
  4144fc:	str	x0, [sp, #112]
  414500:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2bc10>
  414504:	add	x0, x0, #0x65
  414508:	stp	x27, x28, [sp, #80]
  41450c:	str	w4, [sp, #108]
  414510:	str	x0, [sp, #136]
  414514:	adrp	x0, 497000 <_obstack_memory_used@@Base+0x3ac10>
  414518:	add	x0, x0, #0xb64
  41451c:	str	x0, [sp, #144]
  414520:	ldrb	w0, [x19]
  414524:	cbz	w0, 414780 <ferror@plt+0x111b0>
  414528:	mov	x0, x19
  41452c:	mov	w1, #0x2c                  	// #44
  414530:	bl	4032f0 <strchr@plt>
  414534:	mov	x22, x0
  414538:	cbnz	x0, 4145f4 <ferror@plt+0x11024>
  41453c:	mov	x0, x19
  414540:	bl	402d50 <strlen@plt>
  414544:	mov	x23, x0
  414548:	cbz	x23, 41473c <ferror@plt+0x1116c>
  41454c:	ldr	x28, [sp, #120]
  414550:	mov	x25, x28
  414554:	ldr	x1, [x25]
  414558:	cbz	x1, 414640 <ferror@plt+0x11070>
  41455c:	ldr	x0, [x25, #16]
  414560:	cmp	x0, x23
  414564:	b.ne	414638 <ferror@plt+0x11068>  // b.any
  414568:	mov	x2, x23
  41456c:	mov	x0, x19
  414570:	bl	4031e0 <memcmp@plt>
  414574:	cbnz	w0, 414638 <ferror@plt+0x11068>
  414578:	ldr	w1, [sp, #108]
  41457c:	ldr	w0, [x25, #8]
  414580:	cbz	w1, 414630 <ferror@plt+0x11060>
  414584:	cmn	w0, #0x1
  414588:	b.ne	41460c <ferror@plt+0x1103c>  // b.any
  41458c:	cmp	w21, #0x3f4
  414590:	b.ne	4145fc <ferror@plt+0x1102c>  // b.any
  414594:	ldr	w0, [sp, #168]
  414598:	cbz	w0, 414604 <ferror@plt+0x11034>
  41459c:	mov	w0, w26
  4145a0:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4145a4:	add	x1, x1, #0x167
  4145a8:	bl	422290 <ferror@plt+0x1ecc0>
  4145ac:	ldr	w0, [sp, #168]
  4145b0:	ldr	w1, [sp, #168]
  4145b4:	eor	w0, w0, #0x1
  4145b8:	tst	w1, w0
  4145bc:	b.eq	414738 <ferror@plt+0x11168>  // b.none
  4145c0:	mov	w27, #0xffffffff            	// #-1
  4145c4:	mov	x25, #0x0                   	// #0
  4145c8:	ldr	x24, [x28]
  4145cc:	cbz	x24, 4146c8 <ferror@plt+0x110f8>
  4145d0:	cmp	w21, #0x3f4
  4145d4:	b.ne	414648 <ferror@plt+0x11078>  // b.any
  4145d8:	ldr	w0, [x28, #8]
  4145dc:	cmn	w0, #0x1
  4145e0:	b.ne	414658 <ferror@plt+0x11088>  // b.any
  4145e4:	ldr	w0, [sp, #108]
  4145e8:	cbz	w0, 414658 <ferror@plt+0x11088>
  4145ec:	add	x28, x28, #0x20
  4145f0:	b	4145c8 <ferror@plt+0x10ff8>
  4145f4:	sub	x23, x0, x19
  4145f8:	b	414548 <ferror@plt+0x10f78>
  4145fc:	mov	w0, #0xfffff6e7            	// #-2329
  414600:	orr	w20, w20, w0
  414604:	mov	w0, #0x1                   	// #1
  414608:	b	4145b0 <ferror@plt+0x10fe0>
  41460c:	cmp	w21, #0x3f1
  414610:	b.ne	414600 <ferror@plt+0x11030>  // b.any
  414614:	mov	w1, #0x7fe0                	// #32736
  414618:	movk	w1, #0x37e, lsl #16
  41461c:	cmp	w0, w1
  414620:	b.ne	414600 <ferror@plt+0x11030>  // b.any
  414624:	mov	w0, #0x76e0                	// #30432
  414628:	movk	w0, #0x37e, lsl #16
  41462c:	b	414600 <ferror@plt+0x11030>
  414630:	bic	w20, w20, w0
  414634:	b	414604 <ferror@plt+0x11034>
  414638:	add	x25, x25, #0x20
  41463c:	b	414554 <ferror@plt+0x10f84>
  414640:	mov	w0, #0x0                   	// #0
  414644:	b	4145b0 <ferror@plt+0x10fe0>
  414648:	cmp	w21, #0x3f1
  41464c:	b.ne	414658 <ferror@plt+0x11088>  // b.any
  414650:	ldrb	w0, [x28, #24]
  414654:	cbz	w0, 4145e4 <ferror@plt+0x11014>
  414658:	mov	x0, x24
  41465c:	bl	402d50 <strlen@plt>
  414660:	subs	w3, w0, w23
  414664:	mov	x5, x0
  414668:	cneg	w3, w3, mi  // mi = first
  41466c:	str	w3, [sp, #172]
  414670:	cmp	w3, w27
  414674:	b.cs	4145ec <ferror@plt+0x1101c>  // b.hs, b.nlast
  414678:	mov	x1, x0
  41467c:	mov	x0, x23
  414680:	str	x5, [sp, #160]
  414684:	bl	420078 <ferror@plt+0x1caa8>
  414688:	ldr	w3, [sp, #172]
  41468c:	cmp	w3, w0
  414690:	b.hi	4145ec <ferror@plt+0x1101c>  // b.pmore
  414694:	ldr	x5, [sp, #160]
  414698:	mov	x2, x24
  41469c:	mov	w1, w23
  4146a0:	mov	x0, x19
  4146a4:	mov	w3, w5
  4146a8:	bl	41fe98 <ferror@plt+0x1c8c8>
  4146ac:	cmp	w0, w27
  4146b0:	b.cs	4145ec <ferror@plt+0x1101c>  // b.hs, b.nlast
  4146b4:	ldr	x5, [sp, #160]
  4146b8:	mov	w27, w0
  4146bc:	mov	x25, x24
  4146c0:	str	x5, [sp, #152]
  4146c4:	b	4145ec <ferror@plt+0x1101c>
  4146c8:	cbnz	x25, 4146e8 <ferror@plt+0x11118>
  4146cc:	cbnz	w27, 414700 <ferror@plt+0x11130>
  4146d0:	cmp	w21, #0x3f1
  4146d4:	b.eq	414754 <ferror@plt+0x11184>  // b.none
  4146d8:	cmp	w21, #0x3ef
  4146dc:	b.eq	414778 <ferror@plt+0x111a8>  // b.none
  4146e0:	mov	x25, #0x0                   	// #0
  4146e4:	b	414710 <ferror@plt+0x11140>
  4146e8:	ldr	x1, [sp, #152]
  4146ec:	mov	x0, x23
  4146f0:	bl	420078 <ferror@plt+0x1caa8>
  4146f4:	cmp	w0, w27
  4146f8:	b.cs	4146cc <ferror@plt+0x110fc>  // b.hs, b.nlast
  4146fc:	b	4146d0 <ferror@plt+0x11100>
  414700:	cmp	w21, #0x3f1
  414704:	b.eq	414744 <ferror@plt+0x11174>  // b.none
  414708:	cmp	w21, #0x3ef
  41470c:	b.eq	41474c <ferror@plt+0x1117c>  // b.none
  414710:	ldr	x3, [sp, #128]
  414714:	cbz	x25, 414758 <ferror@plt+0x11188>
  414718:	ldr	x2, [sp, #112]
  41471c:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  414720:	mov	x6, x25
  414724:	mov	x5, x19
  414728:	mov	w4, w23
  41472c:	add	x1, x1, #0x18e
  414730:	mov	w0, w26
  414734:	bl	422290 <ferror@plt+0x1ecc0>
  414738:	cbz	x22, 414780 <ferror@plt+0x111b0>
  41473c:	add	x19, x22, #0x1
  414740:	b	414520 <ferror@plt+0x10f50>
  414744:	ldr	x3, [sp, #144]
  414748:	b	414714 <ferror@plt+0x11144>
  41474c:	ldr	x3, [sp, #136]
  414750:	b	414714 <ferror@plt+0x11144>
  414754:	ldr	x3, [sp, #144]
  414758:	mov	x5, x19
  41475c:	ldr	x2, [sp, #112]
  414760:	mov	w4, w23
  414764:	mov	w0, w26
  414768:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  41476c:	add	x1, x1, #0x1dc
  414770:	bl	422290 <ferror@plt+0x1ecc0>
  414774:	b	414738 <ferror@plt+0x11168>
  414778:	ldr	x3, [sp, #136]
  41477c:	b	414758 <ferror@plt+0x11188>
  414780:	mov	w0, w20
  414784:	ldp	x19, x20, [sp, #16]
  414788:	ldp	x21, x22, [sp, #32]
  41478c:	ldp	x23, x24, [sp, #48]
  414790:	ldp	x25, x26, [sp, #64]
  414794:	ldp	x27, x28, [sp, #80]
  414798:	ldp	x29, x30, [sp], #176
  41479c:	ret
  4147a0:	stp	x29, x30, [sp, #-80]!
  4147a4:	mov	x29, sp
  4147a8:	stp	x19, x20, [sp, #16]
  4147ac:	adrp	x20, 486000 <_obstack_memory_used@@Base+0x29c10>
  4147b0:	add	x20, x20, #0x8b8
  4147b4:	stp	x23, x24, [sp, #48]
  4147b8:	adrp	x23, 488000 <_obstack_memory_used@@Base+0x2bc10>
  4147bc:	add	x23, x23, #0xd98
  4147c0:	mov	x1, x23
  4147c4:	add	x20, x20, #0xc78
  4147c8:	stp	x21, x22, [sp, #32]
  4147cc:	mov	w21, #0x0                   	// #0
  4147d0:	str	x25, [sp, #64]
  4147d4:	adrp	x25, 486000 <_obstack_memory_used@@Base+0x29c10>
  4147d8:	bl	402d20 <strtok@plt>
  4147dc:	add	x25, x25, #0x217
  4147e0:	mov	x19, x0
  4147e4:	cbz	x19, 414860 <ferror@plt+0x11290>
  4147e8:	mov	x24, #0x0                   	// #0
  4147ec:	lsl	x0, x24, #5
  4147f0:	mov	w22, w24
  4147f4:	ldr	x0, [x0, x20]
  4147f8:	cbz	x0, 41484c <ferror@plt+0x1127c>
  4147fc:	mov	x1, x19
  414800:	add	x24, x24, #0x1
  414804:	bl	403220 <strcmp@plt>
  414808:	cbnz	w0, 4147ec <ferror@plt+0x1121c>
  41480c:	ubfiz	x22, x22, #5, #32
  414810:	mov	w1, #0x7fe0                	// #32736
  414814:	add	x22, x20, x22
  414818:	movk	w1, #0x37e, lsl #16
  41481c:	ldr	w0, [x22, #8]
  414820:	orr	w21, w21, w0
  414824:	cmp	w0, w1
  414828:	b.ne	414838 <ferror@plt+0x11268>  // b.any
  41482c:	mov	w0, #0x8000                	// #32768
  414830:	movk	w0, #0x81, lsl #16
  414834:	orr	w21, w21, w0
  414838:	mov	x1, x23
  41483c:	mov	x0, #0x0                   	// #0
  414840:	bl	402d20 <strtok@plt>
  414844:	mov	x19, x0
  414848:	b	4147e4 <ferror@plt+0x11214>
  41484c:	mov	x2, x19
  414850:	mov	x1, x25
  414854:	mov	w0, #0xb1                  	// #177
  414858:	bl	421ef0 <ferror@plt+0x1e920>
  41485c:	b	414838 <ferror@plt+0x11268>
  414860:	mov	w0, w21
  414864:	ldp	x19, x20, [sp, #16]
  414868:	ldp	x21, x22, [sp, #32]
  41486c:	ldp	x23, x24, [sp, #48]
  414870:	ldr	x25, [sp, #64]
  414874:	ldp	x29, x30, [sp], #80
  414878:	ret
  41487c:	stp	x29, x30, [sp, #-144]!
  414880:	mov	x29, sp
  414884:	stp	x19, x20, [sp, #16]
  414888:	mov	x19, x2
  41488c:	and	w20, w3, #0xff
  414890:	stp	x21, x22, [sp, #32]
  414894:	mov	x22, x1
  414898:	mov	w21, w4
  41489c:	stp	x23, x24, [sp, #48]
  4148a0:	mov	x23, x0
  4148a4:	adrp	x24, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4148a8:	add	x24, x24, #0xb37
  4148ac:	stp	x25, x26, [sp, #64]
  4148b0:	stp	x27, x28, [sp, #80]
  4148b4:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4148b8:	mov	x1, x24
  4148bc:	str	x0, [sp, #112]
  4148c0:	bl	402d20 <strtok@plt>
  4148c4:	cbz	x0, 414a1c <ferror@plt+0x1144c>
  4148c8:	add	x1, sp, #0x88
  4148cc:	mov	w2, #0xa                   	// #10
  4148d0:	bl	403260 <strtol@plt>
  4148d4:	str	x0, [sp, #104]
  4148d8:	ldr	x0, [sp, #136]
  4148dc:	ldrb	w0, [x0]
  4148e0:	cbnz	w0, 4148ec <ferror@plt+0x1131c>
  4148e4:	ldr	w0, [sp, #104]
  4148e8:	tbz	w0, #31, 41492c <ferror@plt+0x1135c>
  4148ec:	cbz	w20, 414908 <ferror@plt+0x11338>
  4148f0:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4148f4:	mov	x3, x23
  4148f8:	mov	x2, x22
  4148fc:	add	x1, x1, #0x23a
  414900:	mov	w0, w21
  414904:	bl	422290 <ferror@plt+0x1ecc0>
  414908:	mov	w20, #0x0                   	// #0
  41490c:	mov	w0, w20
  414910:	ldp	x19, x20, [sp, #16]
  414914:	ldp	x21, x22, [sp, #32]
  414918:	ldp	x23, x24, [sp, #48]
  41491c:	ldp	x25, x26, [sp, #64]
  414920:	ldp	x27, x28, [sp, #80]
  414924:	ldp	x29, x30, [sp], #144
  414928:	ret
  41492c:	ldr	x26, [x19]
  414930:	cbz	x26, 4149c8 <ferror@plt+0x113f8>
  414934:	ldp	w0, w27, [x26]
  414938:	ubfx	x0, x0, #0, #31
  41493c:	cmp	w0, w27
  414940:	b.ne	4149f4 <ferror@plt+0x11424>  // b.any
  414944:	ldrsb	w0, [x26, #3]
  414948:	tbz	w0, #31, 4149c8 <ferror@plt+0x113f8>
  41494c:	add	w28, w27, #0x1
  414950:	mov	w25, #0x1                   	// #1
  414954:	str	xzr, [x19]
  414958:	ldr	x0, [x19]
  41495c:	cbz	x0, 4149d8 <ferror@plt+0x11408>
  414960:	ldr	w1, [x0, #4]
  414964:	ldr	w0, [x0]
  414968:	add	w1, w28, w1
  41496c:	and	w0, w0, #0x7fffffff
  414970:	bl	41e438 <ferror@plt+0x1ae68>
  414974:	mov	w28, w0
  414978:	ldr	x0, [x19]
  41497c:	ubfiz	x1, x28, #2, #32
  414980:	add	x1, x1, #0x8
  414984:	cbz	x0, 4149e8 <ferror@plt+0x11418>
  414988:	ldr	w6, [x0, #4]
  41498c:	str	w6, [sp, #124]
  414990:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  414994:	ldr	w6, [sp, #124]
  414998:	and	w3, w28, #0x7fffffff
  41499c:	str	x0, [x19]
  4149a0:	stp	w3, w6, [x0]
  4149a4:	cbz	w25, 4149f4 <ferror@plt+0x11424>
  4149a8:	mov	w3, w27
  4149ac:	mov	x1, #0x8                   	// #8
  4149b0:	cbz	w3, 4149f0 <ferror@plt+0x11420>
  4149b4:	ldr	w5, [x26, x1]
  4149b8:	sub	w3, w3, #0x1
  4149bc:	str	w5, [x0, x1]
  4149c0:	add	x1, x1, #0x4
  4149c4:	b	4149b0 <ferror@plt+0x113e0>
  4149c8:	mov	w25, #0x0                   	// #0
  4149cc:	mov	w27, #0x0                   	// #0
  4149d0:	mov	w28, #0x1                   	// #1
  4149d4:	b	414958 <ferror@plt+0x11388>
  4149d8:	cmp	w28, #0x4
  4149dc:	mov	w0, #0x4                   	// #4
  4149e0:	csel	w28, w28, w0, cs  // cs = hs, nlast
  4149e4:	b	414978 <ferror@plt+0x113a8>
  4149e8:	mov	w6, #0x0                   	// #0
  4149ec:	b	41498c <ferror@plt+0x113bc>
  4149f0:	str	w27, [x0, #4]
  4149f4:	ldr	x1, [x19]
  4149f8:	ldr	w0, [x1, #4]
  4149fc:	add	w2, w0, #0x1
  414a00:	str	w2, [x1, #4]
  414a04:	add	x0, x1, w0, uxtw #2
  414a08:	ldr	w1, [sp, #104]
  414a0c:	str	w1, [x0, #8]
  414a10:	mov	x1, x24
  414a14:	mov	x0, #0x0                   	// #0
  414a18:	b	4148c0 <ferror@plt+0x112f0>
  414a1c:	ldr	x0, [sp, #112]
  414a20:	bl	4032a0 <free@plt>
  414a24:	ldr	x0, [x19]
  414a28:	cbz	x0, 414a3c <ferror@plt+0x1146c>
  414a2c:	ldr	w2, [x0, #4]
  414a30:	sub	w1, w2, #0x1
  414a34:	cmp	w1, #0x3
  414a38:	b.ls	414a54 <ferror@plt+0x11484>  // b.plast
  414a3c:	cbz	w20, 41490c <ferror@plt+0x1133c>
  414a40:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  414a44:	mov	x3, x23
  414a48:	mov	x2, x22
  414a4c:	add	x1, x1, #0x26b
  414a50:	b	414900 <ferror@plt+0x11330>
  414a54:	add	x0, x0, #0x4
  414a58:	mov	x1, #0x0                   	// #0
  414a5c:	cmp	w2, w1
  414a60:	b.ls	414a94 <ferror@plt+0x114c4>  // b.plast
  414a64:	add	x1, x1, #0x1
  414a68:	ldr	w3, [x0, x1, lsl #2]
  414a6c:	cmp	w3, #0x10, lsl #12
  414a70:	b.ls	414a5c <ferror@plt+0x1148c>  // b.plast
  414a74:	cbz	w20, 41490c <ferror@plt+0x1133c>
  414a78:	mov	x2, x22
  414a7c:	mov	w0, w21
  414a80:	mov	w3, #0x10000               	// #65536
  414a84:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  414a88:	add	x1, x1, #0x2a6
  414a8c:	bl	422290 <ferror@plt+0x1ecc0>
  414a90:	b	414908 <ferror@plt+0x11338>
  414a94:	mov	w20, #0x1                   	// #1
  414a98:	b	41490c <ferror@plt+0x1133c>
  414a9c:	stp	x29, x30, [sp, #-32]!
  414aa0:	mov	w4, w0
  414aa4:	mov	w3, #0x1                   	// #1
  414aa8:	mov	x29, sp
  414aac:	mov	x0, x1
  414ab0:	mov	x1, x2
  414ab4:	add	x2, sp, #0x18
  414ab8:	str	xzr, [sp, #24]
  414abc:	bl	41487c <ferror@plt+0x112ac>
  414ac0:	ldr	x0, [sp, #24]
  414ac4:	cbz	x0, 414ad4 <ferror@plt+0x11504>
  414ac8:	ldrsb	w1, [x0, #3]
  414acc:	tbz	w1, #31, 414adc <ferror@plt+0x1150c>
  414ad0:	str	wzr, [x0, #4]
  414ad4:	ldp	x29, x30, [sp], #32
  414ad8:	ret
  414adc:	bl	4032a0 <free@plt>
  414ae0:	b	414ad4 <ferror@plt+0x11504>
  414ae4:	ldr	w1, [x0, #3220]
  414ae8:	cbnz	w1, 414b1c <ferror@plt+0x1154c>
  414aec:	ldr	w1, [x0, #3388]
  414af0:	cbz	w1, 414b1c <ferror@plt+0x1154c>
  414af4:	ldr	w1, [x0, #2068]
  414af8:	cbz	w1, 414b1c <ferror@plt+0x1154c>
  414afc:	ldr	w1, [x0, #3064]
  414b00:	cbnz	w1, 414b1c <ferror@plt+0x1154c>
  414b04:	ldr	w1, [x0, #2504]
  414b08:	cbnz	w1, 414b1c <ferror@plt+0x1154c>
  414b0c:	ldr	w0, [x0, #2040]
  414b10:	cmp	w0, #0x1
  414b14:	cset	w0, eq  // eq = none
  414b18:	ret
  414b1c:	mov	w0, #0x0                   	// #0
  414b20:	b	414b18 <ferror@plt+0x11548>
  414b24:	ldrsb	w1, [x0, #243]
  414b28:	cbnz	w1, 414b54 <ferror@plt+0x11584>
  414b2c:	ldrsb	w1, [x0, #282]
  414b30:	cbz	w1, 414b54 <ferror@plt+0x11584>
  414b34:	ldrsb	w1, [x0, #115]
  414b38:	cbz	w1, 414b54 <ferror@plt+0x11584>
  414b3c:	ldrsb	w1, [x0, #225]
  414b40:	cbnz	w1, 414b54 <ferror@plt+0x11584>
  414b44:	ldrsb	w0, [x0, #169]
  414b48:	cmp	w0, #0x0
  414b4c:	cset	w0, eq  // eq = none
  414b50:	ret
  414b54:	mov	w0, #0x0                   	// #0
  414b58:	b	414b50 <ferror@plt+0x11580>
  414b5c:	cmp	w2, #0x6
  414b60:	cset	w4, eq  // eq = none
  414b64:	cmp	w2, #0xa
  414b68:	csinc	w2, w4, wzr, ne  // ne = any
  414b6c:	cbz	w1, 414ba4 <ferror@plt+0x115d4>
  414b70:	sxtw	x1, w1
  414b74:	mov	x0, #0x60                  	// #96
  414b78:	adrp	x4, 49d000 <_obstack_memory_used@@Base+0x40c10>
  414b7c:	add	x4, x4, #0xfc8
  414b80:	mul	x1, x1, x0
  414b84:	ldr	x0, [x4, x1]
  414b88:	cbz	w2, 414bc0 <ferror@plt+0x115f0>
  414b8c:	cmp	w3, #0x4
  414b90:	b.ne	414bc0 <ferror@plt+0x115f0>  // b.any
  414b94:	add	x1, x0, #0x2
  414b98:	mov	x2, #0x0                   	// #0
  414b9c:	ldr	x0, [x4, #23232]
  414ba0:	b	45a668 <ferror@plt+0x57098>
  414ba4:	cbnz	w2, 414bb0 <ferror@plt+0x115e0>
  414ba8:	cmp	w3, #0x6
  414bac:	b.ne	414bc4 <ferror@plt+0x115f4>  // b.any
  414bb0:	ldrb	w0, [x0, #64]
  414bb4:	cbz	w0, 414bc4 <ferror@plt+0x115f4>
  414bb8:	adrp	x0, 4a3000 <_obstack_memory_used@@Base+0x46c10>
  414bbc:	ldr	x0, [x0, #2504]
  414bc0:	b	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  414bc4:	mov	x0, #0x0                   	// #0
  414bc8:	ret
  414bcc:	stp	x29, x30, [sp, #-64]!
  414bd0:	mov	x29, sp
  414bd4:	stp	x21, x22, [sp, #32]
  414bd8:	mov	x22, x0
  414bdc:	ldr	x21, [x0]
  414be0:	stp	x19, x20, [sp, #16]
  414be4:	mov	x19, x1
  414be8:	cbnz	x21, 414c08 <ferror@plt+0x11638>
  414bec:	mov	x0, #0x8                   	// #8
  414bf0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  414bf4:	str	xzr, [x0]
  414bf8:	mov	x21, x0
  414bfc:	mov	w2, #0x1                   	// #1
  414c00:	mov	w1, #0x1                   	// #1
  414c04:	bl	415f34 <ferror@plt+0x12964>
  414c08:	mov	x0, x19
  414c0c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  414c10:	mov	x19, x0
  414c14:	mov	x1, x0
  414c18:	str	x0, [sp, #56]
  414c1c:	ldrb	w0, [x19]
  414c20:	cbz	w0, 414c84 <ferror@plt+0x116b4>
  414c24:	cmp	w0, #0x2c
  414c28:	b.ne	414c4c <ferror@plt+0x1167c>  // b.any
  414c2c:	mov	x20, x1
  414c30:	mov	x0, x21
  414c34:	add	x1, sp, #0x38
  414c38:	add	x19, x19, #0x1
  414c3c:	strb	wzr, [x20], #1
  414c40:	bl	410060 <ferror@plt+0xca90>
  414c44:	str	x20, [sp, #56]
  414c48:	mov	x1, x20
  414c4c:	ldrb	w2, [x19]
  414c50:	add	x3, x1, #0x1
  414c54:	cmp	w2, #0x5c
  414c58:	b.ne	414c78 <ferror@plt+0x116a8>  // b.any
  414c5c:	ldrb	w0, [x19, #1]
  414c60:	cmp	w0, #0x2c
  414c64:	b.ne	414c78 <ferror@plt+0x116a8>  // b.any
  414c68:	add	x19, x19, #0x2
  414c6c:	strb	w0, [x1]
  414c70:	mov	x1, x3
  414c74:	b	414c1c <ferror@plt+0x1164c>
  414c78:	add	x19, x19, #0x1
  414c7c:	mov	w0, w2
  414c80:	b	414c6c <ferror@plt+0x1169c>
  414c84:	ldr	x0, [sp, #56]
  414c88:	ldrb	w0, [x0]
  414c8c:	cbz	w0, 414c9c <ferror@plt+0x116cc>
  414c90:	add	x1, sp, #0x38
  414c94:	mov	x0, x21
  414c98:	bl	410060 <ferror@plt+0xca90>
  414c9c:	ldp	x19, x20, [sp, #16]
  414ca0:	str	x21, [x22]
  414ca4:	ldp	x21, x22, [sp, #32]
  414ca8:	ldp	x29, x30, [sp], #64
  414cac:	ret
  414cb0:	sub	sp, sp, #0xc0
  414cb4:	stp	x29, x30, [sp, #16]
  414cb8:	add	x29, sp, #0x10
  414cbc:	stp	x23, x24, [sp, #64]
  414cc0:	mov	x24, x2
  414cc4:	stp	x21, x22, [sp, #48]
  414cc8:	mov	x21, x1
  414ccc:	stp	x25, x26, [sp, #80]
  414cd0:	ldp	x1, x26, [x24, #64]
  414cd4:	stp	x19, x20, [sp, #32]
  414cd8:	stp	x27, x28, [sp, #96]
  414cdc:	str	x6, [sp, #120]
  414ce0:	str	w4, [sp, #144]
  414ce4:	cmp	x1, #0x2
  414ce8:	ldr	x2, [x2]
  414cec:	ldr	x25, [x24, #16]
  414cf0:	b.ls	414d0c <ferror@plt+0x1173c>  // b.plast
  414cf4:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  414cf8:	add	x2, x2, #0x2cd
  414cfc:	mov	w1, #0x815                 	// #2069
  414d00:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  414d04:	add	x0, x0, #0x25
  414d08:	bl	403600 <ferror@plt+0x30>
  414d0c:	mov	x19, x0
  414d10:	mov	w23, w3
  414d14:	mov	w20, w5
  414d18:	mov	x22, x7
  414d1c:	cmp	w2, #0x35b
  414d20:	b.eq	415e80 <ferror@plt+0x128b0>  // b.none
  414d24:	b.gt	4150e4 <ferror@plt+0x11b14>
  414d28:	cmp	w2, #0x209
  414d2c:	b.gt	414fcc <ferror@plt+0x119fc>
  414d30:	cmp	w2, #0x202
  414d34:	b.gt	414df8 <ferror@plt+0x11828>
  414d38:	cmp	w2, #0xf6
  414d3c:	b.eq	415788 <ferror@plt+0x121b8>  // b.none
  414d40:	b.gt	414f2c <ferror@plt+0x1195c>
  414d44:	cmp	w2, #0x5f
  414d48:	b.eq	4153d0 <ferror@plt+0x11e00>  // b.none
  414d4c:	b.gt	414e58 <ferror@plt+0x11888>
  414d50:	cmp	w2, #0x1d
  414d54:	b.eq	415404 <ferror@plt+0x11e34>  // b.none
  414d58:	b.gt	414e1c <ferror@plt+0x1184c>
  414d5c:	cmp	w2, #0x9
  414d60:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  414d64:	cmp	w2, #0x1c
  414d68:	b.eq	415300 <ferror@plt+0x11d30>  // b.none
  414d6c:	mov	x1, x19
  414d70:	mov	w0, w2
  414d74:	bl	417e44 <ferror@plt+0x14874>
  414d78:	cbnz	x0, 414e78 <ferror@plt+0x118a8>
  414d7c:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  414d80:	mov	w1, #0xaed                 	// #2797
  414d84:	add	x2, x2, #0x2cd
  414d88:	b	414d00 <ferror@plt+0x11730>
  414d8c:	sub	w1, w2, #0x4c6
  414d90:	cmp	w1, #0x23
  414d94:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  414d98:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  414d9c:	add	x0, x0, #0x798
  414da0:	ldrh	w0, [x0, w1, uxtw #1]
  414da4:	adr	x1, 414db0 <ferror@plt+0x117e0>
  414da8:	add	x0, x1, w0, sxth #2
  414dac:	br	x0
  414db0:	sub	w1, w2, #0x3c2
  414db4:	cmp	w1, #0xa
  414db8:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  414dbc:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  414dc0:	add	x0, x0, #0x7e0
  414dc4:	ldrh	w0, [x0, w1, uxtw #1]
  414dc8:	adr	x1, 414dd4 <ferror@plt+0x11804>
  414dcc:	add	x0, x1, w0, sxth #2
  414dd0:	br	x0
  414dd4:	sub	w1, w2, #0x28b
  414dd8:	cmp	w1, #0x15
  414ddc:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  414de0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  414de4:	add	x0, x0, #0x7f8
  414de8:	ldrh	w0, [x0, w1, uxtw #1]
  414dec:	adr	x1, 414df8 <ferror@plt+0x11828>
  414df0:	add	x0, x1, w0, sxth #2
  414df4:	br	x0
  414df8:	sub	w1, w2, #0x203
  414dfc:	cmp	w1, #0x6
  414e00:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  414e04:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  414e08:	add	x0, x0, #0x824
  414e0c:	ldrh	w0, [x0, w1, uxtw #1]
  414e10:	adr	x1, 414e1c <ferror@plt+0x1184c>
  414e14:	add	x0, x1, w0, sxth #2
  414e18:	br	x0
  414e1c:	cmp	w2, #0x3e
  414e20:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  414e24:	mov	x0, x25
  414e28:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  414e2c:	mov	w1, #0x3d                  	// #61
  414e30:	mov	x26, x0
  414e34:	bl	4032f0 <strchr@plt>
  414e38:	mov	x28, x0
  414e3c:	cbnz	x0, 41524c <ferror@plt+0x11c7c>
  414e40:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  414e44:	mov	x2, x26
  414e48:	add	x1, x1, #0x2e2
  414e4c:	mov	w0, w20
  414e50:	bl	422290 <ferror@plt+0x1ecc0>
  414e54:	b	415288 <ferror@plt+0x11cb8>
  414e58:	cmp	w2, #0xf0
  414e5c:	b.eq	4156fc <ferror@plt+0x1212c>  // b.none
  414e60:	b.gt	414ec0 <ferror@plt+0x118f0>
  414e64:	cmp	w2, #0x69
  414e68:	b.eq	4155f0 <ferror@plt+0x12020>  // b.none
  414e6c:	sub	w0, w2, #0x83
  414e70:	cmp	w0, #0x3
  414e74:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  414e78:	ldr	w4, [sp, #144]
  414e7c:	mov	x7, x22
  414e80:	ldr	x6, [sp, #120]
  414e84:	mov	w5, w20
  414e88:	mov	w3, w23
  414e8c:	mov	x2, x24
  414e90:	mov	x1, x21
  414e94:	mov	x0, x19
  414e98:	bl	418a30 <ferror@plt+0x15460>
  414e9c:	mov	w0, #0x1                   	// #1
  414ea0:	ldp	x29, x30, [sp, #16]
  414ea4:	ldp	x19, x20, [sp, #32]
  414ea8:	ldp	x21, x22, [sp, #48]
  414eac:	ldp	x23, x24, [sp, #64]
  414eb0:	ldp	x25, x26, [sp, #80]
  414eb4:	ldp	x27, x28, [sp, #96]
  414eb8:	add	sp, sp, #0xc0
  414ebc:	ret
  414ec0:	cmp	w2, #0xf2
  414ec4:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  414ec8:	cmp	w3, #0x80, lsl #12
  414ecc:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  414ed0:	mov	x0, x25
  414ed4:	bl	402d50 <strlen@plt>
  414ed8:	add	x0, x0, #0x2
  414edc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  414ee0:	mov	w1, #0x57                  	// #87
  414ee4:	mov	x28, x0
  414ee8:	strb	w1, [x0], #1
  414eec:	mov	x1, x25
  414ef0:	bl	403360 <strcpy@plt>
  414ef4:	mov	w1, w23
  414ef8:	mov	x0, x28
  414efc:	bl	416114 <ferror@plt+0x12b44>
  414f00:	cmp	w0, #0x596
  414f04:	b.ne	41570c <ferror@plt+0x1213c>  // b.any
  414f08:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  414f0c:	mov	x3, x28
  414f10:	mov	x2, x25
  414f14:	add	x1, x1, #0x404
  414f18:	mov	w0, w20
  414f1c:	bl	422290 <ferror@plt+0x1ecc0>
  414f20:	mov	x0, x28
  414f24:	bl	4032a0 <free@plt>
  414f28:	b	414e78 <ferror@plt+0x118a8>
  414f2c:	cmp	w2, #0x1ae
  414f30:	b.eq	4157d8 <ferror@plt+0x12208>  // b.none
  414f34:	b.gt	414f60 <ferror@plt+0x11990>
  414f38:	cmp	w2, #0x192
  414f3c:	b.eq	415798 <ferror@plt+0x121c8>  // b.none
  414f40:	cmp	w2, #0x195
  414f44:	b.eq	4157c4 <ferror@plt+0x121f4>  // b.none
  414f48:	cmp	w2, #0x191
  414f4c:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  414f50:	cmn	x26, #0x1
  414f54:	cset	w0, ne  // ne = any
  414f58:	strb	w0, [x19, #53]
  414f5c:	b	414e78 <ferror@plt+0x118a8>
  414f60:	cmp	w2, #0x1e7
  414f64:	b.eq	4157e8 <ferror@plt+0x12218>  // b.none
  414f68:	cmp	w2, #0x1ec
  414f6c:	b.ne	414fb8 <ferror@plt+0x119e8>  // b.any
  414f70:	adrp	x26, 486000 <_obstack_memory_used@@Base+0x29c10>
  414f74:	adrp	x28, 486000 <_obstack_memory_used@@Base+0x29c10>
  414f78:	add	x26, x26, #0x4c8
  414f7c:	add	x28, x28, #0x834
  414f80:	ldrb	w3, [x25]
  414f84:	cbz	w3, 414e78 <ferror@plt+0x118a8>
  414f88:	add	x25, x25, #0x1
  414f8c:	cmp	w3, #0x55
  414f90:	b.hi	415820 <ferror@plt+0x12250>  // b.pmore
  414f94:	cmp	w3, #0x40
  414f98:	b.ls	415838 <ferror@plt+0x12268>  // b.plast
  414f9c:	sub	w0, w3, #0x41
  414fa0:	cmp	w0, #0x14
  414fa4:	b.hi	415838 <ferror@plt+0x12268>  // b.pmore
  414fa8:	ldrh	w0, [x28, w0, uxtw #1]
  414fac:	adr	x1, 414fb8 <ferror@plt+0x119e8>
  414fb0:	add	x0, x1, w0, sxth #2
  414fb4:	br	x0
  414fb8:	cmp	w2, #0x1e4
  414fbc:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  414fc0:	mov	w0, #0x1                   	// #1
  414fc4:	str	w0, [x19, #164]
  414fc8:	b	414e78 <ferror@plt+0x118a8>
  414fcc:	cmp	w2, #0x2a0
  414fd0:	b.gt	41505c <ferror@plt+0x11a8c>
  414fd4:	cmp	w2, #0x28a
  414fd8:	b.gt	414dd4 <ferror@plt+0x11804>
  414fdc:	cmp	w2, #0x21e
  414fe0:	b.eq	415b40 <ferror@plt+0x12570>  // b.none
  414fe4:	b.gt	41502c <ferror@plt+0x11a5c>
  414fe8:	cmp	w2, #0x216
  414fec:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  414ff0:	cmp	w2, #0x21d
  414ff4:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  414ff8:	mov	x0, x19
  414ffc:	mov	w2, w26
  415000:	mov	x1, x21
  415004:	bl	412340 <ferror@plt+0xed70>
  415008:	ldr	w0, [x21, #2764]
  41500c:	cbnz	w0, 415014 <ferror@plt+0x11a44>
  415010:	str	w26, [x19, #2764]
  415014:	ldr	x2, [x19, #144]
  415018:	mov	w1, #0xa                   	// #10
  41501c:	ldr	x3, [x21, #144]
  415020:	mov	w0, #0xf                   	// #15
  415024:	bl	412210 <ferror@plt+0xec40>
  415028:	b	414e78 <ferror@plt+0x118a8>
  41502c:	cmp	w2, #0x26d
  415030:	b.eq	4158e8 <ferror@plt+0x12318>  // b.none
  415034:	b.gt	415048 <ferror@plt+0x11a78>
  415038:	sub	w0, w2, #0x231
  41503c:	cmp	w0, #0x1
  415040:	b.ls	414e78 <ferror@plt+0x118a8>  // b.plast
  415044:	b	414d6c <ferror@plt+0x1179c>
  415048:	cmp	w2, #0x26e
  41504c:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  415050:	cmp	w2, #0x272
  415054:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  415058:	b	414d6c <ferror@plt+0x1179c>
  41505c:	cmp	w2, #0x31e
  415060:	b.eq	415a10 <ferror@plt+0x12440>  // b.none
  415064:	b.gt	4150c8 <ferror@plt+0x11af8>
  415068:	cmp	w2, #0x2cd
  41506c:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  415070:	b.gt	415084 <ferror@plt+0x11ab4>
  415074:	cmp	w2, #0x2c9
  415078:	b.eq	415978 <ferror@plt+0x123a8>  // b.none
  41507c:	cmp	w2, #0x2cb
  415080:	b	415054 <ferror@plt+0x11a84>
  415084:	cmp	w2, #0x319
  415088:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  41508c:	mov	x4, #0x2                   	// #2
  415090:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  415094:	ldr	x2, [x19, #144]
  415098:	add	x0, x0, #0x589
  41509c:	sdiv	x26, x26, x4
  4150a0:	ldr	x3, [x21, #144]
  4150a4:	mov	w1, w26
  4150a8:	bl	412130 <ferror@plt+0xeb60>
  4150ac:	ldr	x2, [x19, #144]
  4150b0:	mov	w1, w26
  4150b4:	ldr	x3, [x21, #144]
  4150b8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x20c10>
  4150bc:	add	x0, x0, #0x5f0
  4150c0:	bl	412130 <ferror@plt+0xeb60>
  4150c4:	b	414e78 <ferror@plt+0x118a8>
  4150c8:	cmp	w2, #0x31f
  4150cc:	b.eq	415a00 <ferror@plt+0x12430>  // b.none
  4150d0:	cmp	w2, #0x328
  4150d4:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  4150d8:	str	w26, [x0, #2296]
  4150dc:	str	w26, [x0, #2300]
  4150e0:	b	414e78 <ferror@plt+0x118a8>
  4150e4:	cmp	w2, #0x417
  4150e8:	b.eq	415c44 <ferror@plt+0x12674>  // b.none
  4150ec:	b.gt	4151ac <ferror@plt+0x11bdc>
  4150f0:	cmp	w2, #0x3cc
  4150f4:	b.gt	415188 <ferror@plt+0x11bb8>
  4150f8:	cmp	w2, #0x3c1
  4150fc:	b.gt	414db0 <ferror@plt+0x117e0>
  415100:	cmp	w2, #0x38f
  415104:	b.eq	415a3c <ferror@plt+0x1246c>  // b.none
  415108:	b.gt	41512c <ferror@plt+0x11b5c>
  41510c:	cmp	w2, #0x371
  415110:	b.eq	415a20 <ferror@plt+0x12450>  // b.none
  415114:	cmp	w2, #0x38e
  415118:	b.eq	415ad8 <ferror@plt+0x12508>  // b.none
  41511c:	cmp	w2, #0x368
  415120:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  415124:	str	w26, [x7, #132]
  415128:	b	414e78 <ferror@plt+0x118a8>
  41512c:	cmp	w2, #0x3a2
  415130:	b.eq	415bac <ferror@plt+0x125dc>  // b.none
  415134:	b.gt	415180 <ferror@plt+0x11bb0>
  415138:	cmp	w2, #0x398
  41513c:	b.gt	41514c <ferror@plt+0x11b7c>
  415140:	cmp	w2, #0x396
  415144:	b.le	414d6c <ferror@plt+0x1179c>
  415148:	b	414e78 <ferror@plt+0x118a8>
  41514c:	cmp	w2, #0x39f
  415150:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  415154:	sub	x0, x26, #0x1
  415158:	cmp	x0, #0xf
  41515c:	b.hi	415168 <ferror@plt+0x11b98>  // b.pmore
  415160:	tst	x0, x26
  415164:	b.eq	415aec <ferror@plt+0x1251c>  // b.none
  415168:	mov	x2, x26
  41516c:	mov	w0, w20
  415170:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415174:	add	x1, x1, #0x560
  415178:	bl	422290 <ferror@plt+0x1ecc0>
  41517c:	b	414e78 <ferror@plt+0x118a8>
  415180:	sub	w0, w2, #0x3af
  415184:	b	41503c <ferror@plt+0x11a6c>
  415188:	sub	w1, w2, #0x3ee
  41518c:	cmp	w1, #0x17
  415190:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  415194:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  415198:	add	x0, x0, #0x860
  41519c:	ldrh	w0, [x0, w1, uxtw #1]
  4151a0:	adr	x1, 4151ac <ferror@plt+0x11bdc>
  4151a4:	add	x0, x1, w0, sxth #2
  4151a8:	br	x0
  4151ac:	cmp	w2, #0x4e9
  4151b0:	b.gt	415230 <ferror@plt+0x11c60>
  4151b4:	cmp	w2, #0x4c5
  4151b8:	b.gt	414d8c <ferror@plt+0x117bc>
  4151bc:	cmp	w2, #0x43e
  4151c0:	b.gt	4151f0 <ferror@plt+0x11c20>
  4151c4:	cmp	w2, #0x42c
  4151c8:	b.le	414d6c <ferror@plt+0x1179c>
  4151cc:	sub	w1, w2, #0x42d
  4151d0:	cmp	w1, #0x11
  4151d4:	b.hi	414d6c <ferror@plt+0x1179c>  // b.pmore
  4151d8:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  4151dc:	add	x0, x0, #0x890
  4151e0:	ldrh	w0, [x0, w1, uxtw #1]
  4151e4:	adr	x1, 4151f0 <ferror@plt+0x11c20>
  4151e8:	add	x0, x1, w0, sxth #2
  4151ec:	br	x0
  4151f0:	cmp	w2, #0x499
  4151f4:	b.eq	4159f4 <ferror@plt+0x12424>  // b.none
  4151f8:	b.gt	41520c <ferror@plt+0x11c3c>
  4151fc:	cmp	w2, #0x464
  415200:	b.eq	415e98 <ferror@plt+0x128c8>  // b.none
  415204:	cmp	w2, #0x48f
  415208:	b	415054 <ferror@plt+0x11a84>
  41520c:	cmp	w2, #0x4a3
  415210:	b.gt	41521c <ferror@plt+0x11c4c>
  415214:	cmp	w2, #0x49f
  415218:	b	415144 <ferror@plt+0x11b74>
  41521c:	cmp	w2, #0x4c0
  415220:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  415224:	cbz	x26, 414e78 <ferror@plt+0x118a8>
  415228:	str	wzr, [x19, #3224]
  41522c:	b	414e78 <ferror@plt+0x118a8>
  415230:	cmp	w2, #0x529
  415234:	b.eq	415e4c <ferror@plt+0x1287c>  // b.none
  415238:	cmp	w2, #0x591
  41523c:	b.ne	414d6c <ferror@plt+0x1179c>  // b.any
  415240:	mov	w0, #0x1                   	// #1
  415244:	strb	w0, [x7, #129]
  415248:	b	414e78 <ferror@plt+0x118a8>
  41524c:	strb	wzr, [x0]
  415250:	add	x1, sp, #0xb0
  415254:	mov	x0, x26
  415258:	bl	411f1c <ferror@plt+0xe94c>
  41525c:	tst	w0, #0xff
  415260:	b.ne	4152a0 <ferror@plt+0x11cd0>  // b.any
  415264:	mov	x0, x26
  415268:	bl	411f94 <ferror@plt+0xe9c4>
  41526c:	mov	x2, x26
  415270:	mov	x3, x0
  415274:	cbz	x0, 415294 <ferror@plt+0x11cc4>
  415278:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  41527c:	mov	w0, w20
  415280:	add	x1, x1, #0x319
  415284:	bl	422290 <ferror@plt+0x1ecc0>
  415288:	mov	x0, x26
  41528c:	bl	4032a0 <free@plt>
  415290:	b	414e78 <ferror@plt+0x118a8>
  415294:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415298:	add	x1, x1, #0x345
  41529c:	b	414e4c <ferror@plt+0x1187c>
  4152a0:	ldr	w0, [sp, #176]
  4152a4:	add	x28, x28, #0x1
  4152a8:	add	x2, sp, #0xac
  4152ac:	mov	x1, x28
  4152b0:	bl	4120b0 <ferror@plt+0xeae0>
  4152b4:	tst	w0, #0xff
  4152b8:	b.ne	4152d0 <ferror@plt+0x11d00>  // b.any
  4152bc:	mov	x0, x28
  4152c0:	mov	w2, #0x0                   	// #0
  4152c4:	mov	x1, #0x0                   	// #0
  4152c8:	bl	416324 <ferror@plt+0x12d54>
  4152cc:	str	w0, [sp, #172]
  4152d0:	ldr	w1, [sp, #172]
  4152d4:	cmn	w1, #0x1
  4152d8:	b.ne	4152ec <ferror@plt+0x11d1c>  // b.any
  4152dc:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4152e0:	mov	x2, x28
  4152e4:	add	x1, x1, #0x35e
  4152e8:	b	414e4c <ferror@plt+0x1187c>
  4152ec:	ldr	x2, [x19, #144]
  4152f0:	mov	x0, x26
  4152f4:	ldr	x3, [x21, #144]
  4152f8:	bl	412130 <ferror@plt+0xeb60>
  4152fc:	b	415288 <ferror@plt+0x11cb8>
  415300:	cmp	w3, #0x80, lsl #12
  415304:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  415308:	ldr	w1, [x0, #588]
  41530c:	mov	w27, #0x1                   	// #1
  415310:	ldr	w0, [x0, #3816]
  415314:	mov	w25, #0x0                   	// #0
  415318:	orr	w0, w0, w1
  41531c:	cmp	w0, #0x0
  415320:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  415324:	cset	w26, eq  // eq = none
  415328:	ldr	w0, [x0, #1960]
  41532c:	str	w0, [sp, #112]
  415330:	lsl	w26, w26, #24
  415334:	ldrb	w0, [sp, #112]
  415338:	lsl	w28, w27, w0
  41533c:	sub	w28, w28, #0x1
  415340:	ldr	x0, [sp, #192]
  415344:	blr	x0
  415348:	ldr	w0, [sp, #112]
  41534c:	cmp	w0, w25
  415350:	b.eq	415378 <ferror@plt+0x11da8>  // b.none
  415354:	lsl	w0, w27, w25
  415358:	bic	w1, w28, w0
  41535c:	mov	w4, w23
  415360:	mov	x3, x19
  415364:	orr	w1, w1, w26
  415368:	mov	w2, #0x0                   	// #0
  41536c:	add	w25, w25, #0x1
  415370:	bl	413180 <ferror@plt+0xfbb0>
  415374:	b	415348 <ferror@plt+0x11d78>
  415378:	mov	w2, w28
  41537c:	mov	w25, #0x6                   	// #6
  415380:	mov	w28, #0x10000               	// #65536
  415384:	mov	w4, w23
  415388:	mov	x3, x19
  41538c:	mov	w1, w26
  415390:	mov	w0, #0x0                   	// #0
  415394:	bl	413180 <ferror@plt+0xfbb0>
  415398:	cmp	w28, #0x80, lsl #12
  41539c:	b.eq	4153b8 <ferror@plt+0x11de8>  // b.none
  4153a0:	mov	w4, w23
  4153a4:	mov	x3, x19
  4153a8:	mov	w1, w26
  4153ac:	mov	w0, w28
  4153b0:	mov	w2, #0x0                   	// #0
  4153b4:	bl	413180 <ferror@plt+0xfbb0>
  4153b8:	lsl	w28, w28, #1
  4153bc:	subs	w25, w25, #0x1
  4153c0:	b.ne	415398 <ferror@plt+0x11dc8>  // b.any
  4153c4:	mov	w0, #0x1                   	// #1
  4153c8:	strb	w0, [x19, #49]
  4153cc:	b	414e78 <ferror@plt+0x118a8>
  4153d0:	cmp	w3, #0x80, lsl #12
  4153d4:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  4153d8:	ldr	x0, [sp, #192]
  4153dc:	blr	x0
  4153e0:	mov	w0, #0x100000              	// #1048576
  4153e4:	mov	w4, w23
  4153e8:	mov	x3, x19
  4153ec:	mov	w2, #0x0                   	// #0
  4153f0:	mov	w1, #0x1000000             	// #16777216
  4153f4:	bl	413180 <ferror@plt+0xfbb0>
  4153f8:	mov	w0, #0x1                   	// #1
  4153fc:	strb	w0, [x19, #49]
  415400:	b	414e78 <ferror@plt+0x118a8>
  415404:	stp	wzr, wzr, [sp, #172]
  415408:	cmp	w3, #0x80, lsl #12
  41540c:	b.eq	414e78 <ferror@plt+0x118a8>  // b.none
  415410:	adrp	x28, 487000 <_obstack_memory_used@@Base+0x2ac10>
  415414:	add	x28, x28, #0x9b8
  415418:	sub	x0, x28, #0x48
  41541c:	str	x0, [sp, #112]
  415420:	ldrb	w0, [x25]
  415424:	cbz	w0, 415454 <ferror@plt+0x11e84>
  415428:	cmp	w0, #0x5e
  41542c:	b.ne	415488 <ferror@plt+0x11eb8>  // b.any
  415430:	ldrb	w1, [x25, #1]
  415434:	add	x0, x25, #0x1
  415438:	cbnz	w1, 4154b8 <ferror@plt+0x11ee8>
  41543c:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  415440:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415444:	add	x2, x2, #0x378
  415448:	add	x1, x1, #0x381
  41544c:	mov	w0, w20
  415450:	bl	422290 <ferror@plt+0x1ecc0>
  415454:	ldr	w26, [sp, #172]
  415458:	cbz	w26, 41547c <ferror@plt+0x11eac>
  41545c:	ldr	x0, [sp, #192]
  415460:	blr	x0
  415464:	ldr	w1, [sp, #176]
  415468:	mov	w4, w23
  41546c:	mov	x3, x19
  415470:	mov	w0, w26
  415474:	mov	w2, #0x0                   	// #0
  415478:	bl	413180 <ferror@plt+0xfbb0>
  41547c:	mov	w0, #0x1                   	// #1
  415480:	strb	w0, [x19, #49]
  415484:	b	414e78 <ferror@plt+0x118a8>
  415488:	add	x27, sp, #0xac
  41548c:	mov	x0, x25
  415490:	mov	w1, #0x2c                  	// #44
  415494:	bl	4032f0 <strchr@plt>
  415498:	mov	x26, x0
  41549c:	cbnz	x0, 4154c4 <ferror@plt+0x11ef4>
  4154a0:	mov	x0, x25
  4154a4:	bl	402d50 <strlen@plt>
  4154a8:	mov	w28, w0
  4154ac:	cbnz	w28, 4154cc <ferror@plt+0x11efc>
  4154b0:	add	x25, x26, #0x1
  4154b4:	b	415420 <ferror@plt+0x11e50>
  4154b8:	mov	x25, x0
  4154bc:	add	x27, sp, #0xb0
  4154c0:	b	41548c <ferror@plt+0x11ebc>
  4154c4:	sub	w28, w0, w25
  4154c8:	b	4154ac <ferror@plt+0x11edc>
  4154cc:	mov	w2, w28
  4154d0:	mov	x6, #0x0                   	// #0
  4154d4:	ldr	x1, [sp, #112]
  4154d8:	lsl	x0, x6, #4
  4154dc:	str	x6, [sp, #136]
  4154e0:	str	w6, [sp, #148]
  4154e4:	ldr	x1, [x0, x1]
  4154e8:	cbz	x1, 415590 <ferror@plt+0x11fc0>
  4154ec:	mov	x0, x25
  4154f0:	str	x2, [sp, #128]
  4154f4:	bl	4032c0 <strncasecmp@plt>
  4154f8:	ldp	x2, x6, [sp, #128]
  4154fc:	ldr	w5, [sp, #148]
  415500:	add	x6, x6, #0x1
  415504:	cbnz	w0, 4154d4 <ferror@plt+0x11f04>
  415508:	ldr	x0, [sp, #112]
  41550c:	ubfiz	x5, x5, #4, #32
  415510:	add	x5, x0, x5
  415514:	ldr	w8, [x5, #8]
  415518:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  41551c:	adrp	x9, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  415520:	mov	w2, w28
  415524:	add	x9, x9, #0x7b0
  415528:	ldr	w5, [x0, #1960]
  41552c:	mov	x6, #0x0                   	// #0
  415530:	stp	w5, w6, [sp, #152]
  415534:	cmp	w5, w6
  415538:	b.ls	415f1c <ferror@plt+0x1294c>  // b.plast
  41553c:	ldr	x1, [x9, x6, lsl #3]
  415540:	mov	x0, x25
  415544:	stp	x6, x2, [sp, #128]
  415548:	str	w8, [sp, #148]
  41554c:	bl	4032c0 <strncasecmp@plt>
  415550:	ldp	x6, x2, [sp, #128]
  415554:	adrp	x1, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  415558:	ldp	w8, w5, [sp, #148]
  41555c:	add	x9, x1, #0x7b0
  415560:	ldr	w10, [sp, #156]
  415564:	add	x6, x6, #0x1
  415568:	cbnz	w0, 415530 <ferror@plt+0x11f60>
  41556c:	mov	w5, #0x1                   	// #1
  415570:	lsl	w5, w5, w10
  415574:	cbz	w8, 4155e4 <ferror@plt+0x12014>
  415578:	cbnz	w5, 415598 <ferror@plt+0x11fc8>
  41557c:	ldr	w0, [x27]
  415580:	orr	w8, w0, w8
  415584:	str	w8, [x27]
  415588:	cbnz	x26, 4154b0 <ferror@plt+0x11ee0>
  41558c:	b	415454 <ferror@plt+0x11e84>
  415590:	mov	w8, #0x0                   	// #0
  415594:	b	415518 <ferror@plt+0x11f48>
  415598:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  41559c:	mov	x0, x25
  4155a0:	add	x1, x1, #0x4ec
  4155a4:	str	w5, [sp, #128]
  4155a8:	bl	4032c0 <strncasecmp@plt>
  4155ac:	cbnz	w0, 4155c4 <ferror@plt+0x11ff4>
  4155b0:	ldr	w0, [x27]
  4155b4:	ldr	w5, [sp, #128]
  4155b8:	orr	w5, w0, w5
  4155bc:	str	w5, [x27]
  4155c0:	b	415588 <ferror@plt+0x11fb8>
  4155c4:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  4155c8:	mov	x4, x25
  4155cc:	mov	w3, w28
  4155d0:	add	x2, x2, #0x399
  4155d4:	mov	w0, w20
  4155d8:	mov	w1, #0x0                   	// #0
  4155dc:	bl	421fac <ferror@plt+0x1e9dc>
  4155e0:	b	415588 <ferror@plt+0x11fb8>
  4155e4:	cbz	w5, 415f20 <ferror@plt+0x12950>
  4155e8:	ldr	w0, [x27]
  4155ec:	b	4155b8 <ferror@plt+0x11fe8>
  4155f0:	cmp	w3, #0x80, lsl #12
  4155f4:	b.ne	4153c4 <ferror@plt+0x11df4>  // b.any
  4155f8:	b	414e78 <ferror@plt+0x118a8>
  4155fc:	ldr	w3, [x19, #212]
  415600:	mov	w4, w26
  415604:	mov	w1, w20
  415608:	mov	x0, x25
  41560c:	mov	w5, #0x1                   	// #1
  415610:	mov	w2, #0x3f4                 	// #1012
  415614:	bl	414484 <ferror@plt+0x10eb4>
  415618:	str	w0, [x19, #212]
  41561c:	tbz	w0, #2, 414e78 <ferror@plt+0x118a8>
  415620:	ldr	x2, [x19, #144]
  415624:	mov	w1, #0x0                   	// #0
  415628:	ldr	x3, [x21, #144]
  41562c:	mov	w0, #0xc2                  	// #194
  415630:	bl	412210 <ferror@plt+0xec40>
  415634:	ldr	x2, [x19, #144]
  415638:	mov	w1, #0x0                   	// #0
  41563c:	ldr	x3, [x21, #144]
  415640:	mov	w0, #0xbd                  	// #189
  415644:	bl	412210 <ferror@plt+0xec40>
  415648:	ldr	x2, [x19, #144]
  41564c:	mov	w1, #0x0                   	// #0
  415650:	ldr	x3, [x21, #144]
  415654:	mov	w0, #0xbb                  	// #187
  415658:	bl	412210 <ferror@plt+0xec40>
  41565c:	ldr	x2, [x19, #144]
  415660:	mov	w1, #0x0                   	// #0
  415664:	ldr	x3, [x21, #144]
  415668:	mov	w0, #0xbc                  	// #188
  41566c:	bl	412210 <ferror@plt+0xec40>
  415670:	ldr	x2, [x19, #144]
  415674:	mov	w1, #0x0                   	// #0
  415678:	ldr	x3, [x21, #144]
  41567c:	mov	w0, #0xc1                  	// #193
  415680:	bl	412210 <ferror@plt+0xec40>
  415684:	b	414e78 <ferror@plt+0x118a8>
  415688:	ldr	w3, [x19, #220]
  41568c:	mov	w4, w26
  415690:	mov	w1, w20
  415694:	mov	x0, x25
  415698:	mov	w5, #0x1                   	// #1
  41569c:	mov	w2, #0x3f1                 	// #1009
  4156a0:	bl	414484 <ferror@plt+0x10eb4>
  4156a4:	str	w0, [x19, #220]
  4156a8:	b	414e78 <ferror@plt+0x118a8>
  4156ac:	str	w26, [x19, #2904]
  4156b0:	b	414e78 <ferror@plt+0x118a8>
  4156b4:	ldr	w0, [x19, #220]
  4156b8:	mov	w2, #0xf6e0                	// #63200
  4156bc:	cmp	x26, #0x0
  4156c0:	movk	w2, #0x3ff, lsl #16
  4156c4:	and	w1, w0, #0xfc00001f
  4156c8:	orr	w0, w0, w2
  4156cc:	csel	w0, w0, w1, ne  // ne = any
  4156d0:	str	w0, [x19, #220]
  4156d4:	b	414e78 <ferror@plt+0x118a8>
  4156d8:	ldr	w3, [x19, #216]
  4156dc:	mov	w4, w26
  4156e0:	mov	w1, w20
  4156e4:	mov	x0, x25
  4156e8:	mov	w5, #0x1                   	// #1
  4156ec:	mov	w2, #0x3ef                 	// #1007
  4156f0:	bl	414484 <ferror@plt+0x10eb4>
  4156f4:	str	w0, [x19, #216]
  4156f8:	b	414e78 <ferror@plt+0x118a8>
  4156fc:	cmp	x26, #0x0
  415700:	cset	w0, ne  // ne = any
  415704:	strb	w0, [x7, #64]
  415708:	b	414e78 <ferror@plt+0x118a8>
  41570c:	sxtw	x2, w0
  415710:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x40c10>
  415714:	add	x1, x1, #0xfc8
  415718:	mov	x3, #0x60                  	// #96
  41571c:	madd	x2, x2, x3, x1
  415720:	ldr	w3, [x2, #60]
  415724:	tbnz	w3, #17, 41573c <ferror@plt+0x1216c>
  415728:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  41572c:	mov	x3, x28
  415730:	mov	x2, x25
  415734:	add	x1, x1, #0x422
  415738:	b	414f18 <ferror@plt+0x11948>
  41573c:	cmp	w26, #0x0
  415740:	mov	w1, #0x4                   	// #4
  415744:	mov	w5, #0x6                   	// #6
  415748:	mov	w4, w26
  41574c:	csel	w1, w1, w5, ne  // ne = any
  415750:	tbz	w3, #22, 415780 <ferror@plt+0x121b0>
  415754:	ldrb	w2, [x2, #52]
  415758:	add	x2, x28, x2
  41575c:	ldr	x6, [sp, #120]
  415760:	cmp	w4, #0x0
  415764:	stp	x21, x22, [sp]
  415768:	mov	x7, x19
  41576c:	mov	w5, w23
  415770:	mov	w4, w20
  415774:	cset	w3, ne  // ne = any
  415778:	bl	418374 <ferror@plt+0x14da4>
  41577c:	b	414f20 <ferror@plt+0x11950>
  415780:	mov	x2, #0x0                   	// #0
  415784:	b	41575c <ferror@plt+0x1218c>
  415788:	cmp	x26, #0x0
  41578c:	cset	w0, ne  // ne = any
  415790:	strb	w0, [x7, #128]
  415794:	b	414e78 <ferror@plt+0x118a8>
  415798:	cmp	w26, #0x1
  41579c:	b.ls	4157b0 <ferror@plt+0x121e0>  // b.plast
  4157a0:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  4157a4:	mov	w1, #0xb2a                 	// #2858
  4157a8:	add	x2, x2, #0x45e
  4157ac:	b	414d00 <ferror@plt+0x11730>
  4157b0:	cmp	w26, #0x0
  4157b4:	mov	w0, #0x3                   	// #3
  4157b8:	csel	w0, w0, wzr, ne  // ne = any
  4157bc:	str	w0, [x19, #1152]
  4157c0:	b	414e78 <ferror@plt+0x118a8>
  4157c4:	cmp	x26, #0x0
  4157c8:	cset	w0, ne  // ne = any
  4157cc:	lsl	w0, w0, #1
  4157d0:	str	w0, [x19, #1160]
  4157d4:	b	414e78 <ferror@plt+0x118a8>
  4157d8:	cmp	x26, #0x0
  4157dc:	cset	w0, ne  // ne = any
  4157e0:	strb	w0, [x7, #130]
  4157e4:	b	414e78 <ferror@plt+0x118a8>
  4157e8:	mov	x0, x25
  4157ec:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4157f0:	mov	x26, x0
  4157f4:	bl	402d50 <strlen@plt>
  4157f8:	mov	w1, w0
  4157fc:	mov	x0, x26
  415800:	bl	4135ec <ferror@plt+0x1001c>
  415804:	ldrb	w0, [x26]
  415808:	cbz	w0, 415814 <ferror@plt+0x12244>
  41580c:	str	x26, [x19, #1440]
  415810:	b	414e78 <ferror@plt+0x118a8>
  415814:	mov	x0, x26
  415818:	bl	4032a0 <free@plt>
  41581c:	b	414e78 <ferror@plt+0x118a8>
  415820:	cmp	w3, #0x70
  415824:	b.eq	415858 <ferror@plt+0x12288>  // b.none
  415828:	cmp	w3, #0x78
  41582c:	b.eq	415870 <ferror@plt+0x122a0>  // b.none
  415830:	cmp	w3, #0x61
  415834:	b.eq	4158dc <ferror@plt+0x1230c>  // b.none
  415838:	mov	x2, x26
  41583c:	mov	w0, w20
  415840:	mov	w1, #0x0                   	// #0
  415844:	bl	421fac <ferror@plt+0x1e9dc>
  415848:	b	414f80 <ferror@plt+0x119b0>
  41584c:	mov	w0, #0x1                   	// #1
  415850:	str	w0, [x19, #156]
  415854:	b	414f80 <ferror@plt+0x119b0>
  415858:	mov	w0, #0x1                   	// #1
  41585c:	str	w0, [x19, #176]
  415860:	b	414f80 <ferror@plt+0x119b0>
  415864:	mov	w0, #0x1                   	// #1
  415868:	str	w0, [x19, #160]
  41586c:	b	41585c <ferror@plt+0x1228c>
  415870:	mov	w0, #0x1                   	// #1
  415874:	str	w0, [x19, #204]
  415878:	b	414f80 <ferror@plt+0x119b0>
  41587c:	mov	x1, #0x0                   	// #0
  415880:	mov	w0, #0x6                   	// #6
  415884:	bl	402ed0 <signal@plt>
  415888:	add	x1, sp, #0xb0
  41588c:	mov	w0, #0x4                   	// #4
  415890:	bl	403370 <getrlimit@plt>
  415894:	cbz	w0, 4158ac <ferror@plt+0x122dc>
  415898:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  41589c:	add	x1, x1, #0x473
  4158a0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4158a4:	ldr	w0, [x0, #584]
  4158a8:	bl	422d58 <ferror@plt+0x1f788>
  4158ac:	ldr	x0, [sp, #184]
  4158b0:	add	x1, sp, #0xb0
  4158b4:	str	x0, [sp, #176]
  4158b8:	mov	w0, #0x4                   	// #4
  4158bc:	bl	402e50 <setrlimit@plt>
  4158c0:	cbz	w0, 4158d0 <ferror@plt+0x12300>
  4158c4:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  4158c8:	add	x1, x1, #0x49c
  4158cc:	b	4158a0 <ferror@plt+0x122d0>
  4158d0:	mov	w0, #0x1                   	// #1
  4158d4:	strb	w0, [x22, #120]
  4158d8:	b	414f80 <ferror@plt+0x119b0>
  4158dc:	mov	w0, #0x1                   	// #1
  4158e0:	strb	w0, [x19, #51]
  4158e4:	b	414f80 <ferror@plt+0x119b0>
  4158e8:	mov	w0, #0x1                   	// #1
  4158ec:	strb	w0, [x19, #49]
  4158f0:	b	414e78 <ferror@plt+0x118a8>
  4158f4:	ldr	x0, [x22]
  4158f8:	str	w26, [x0, #36]
  4158fc:	b	414e78 <ferror@plt+0x118a8>
  415900:	cmp	x26, #0x0
  415904:	cset	w0, ne  // ne = any
  415908:	strb	w0, [x22, #108]
  41590c:	b	414e78 <ferror@plt+0x118a8>
  415910:	cmp	x26, #0x0
  415914:	cset	w0, ne  // ne = any
  415918:	strb	w0, [x22, #222]
  41591c:	b	414e78 <ferror@plt+0x118a8>
  415920:	cmp	x26, #0x0
  415924:	cset	w0, ne  // ne = any
  415928:	strb	w0, [x22, #223]
  41592c:	b	414e78 <ferror@plt+0x118a8>
  415930:	mov	w1, w26
  415934:	mov	x0, x22
  415938:	bl	420e50 <ferror@plt+0x1d880>
  41593c:	b	414e78 <ferror@plt+0x118a8>
  415940:	mov	w1, w26
  415944:	mov	x0, x22
  415948:	bl	42621c <ferror@plt+0x22c4c>
  41594c:	b	414e78 <ferror@plt+0x118a8>
  415950:	cmp	x26, #0x0
  415954:	cset	w0, ne  // ne = any
  415958:	strb	w0, [x22, #229]
  41595c:	b	414e78 <ferror@plt+0x118a8>
  415960:	cmp	x26, #0x0
  415964:	cset	w0, ne  // ne = any
  415968:	strb	w0, [x22, #119]
  41596c:	b	414e78 <ferror@plt+0x118a8>
  415970:	str	w26, [x22, #224]
  415974:	b	414e78 <ferror@plt+0x118a8>
  415978:	ldrb	w0, [x0, #3850]
  41597c:	mov	w3, w26
  415980:	cbnz	w0, 415994 <ferror@plt+0x123c4>
  415984:	str	w26, [x19, #3388]
  415988:	mov	w1, w26
  41598c:	mov	x0, x19
  415990:	bl	412468 <ferror@plt+0xee98>
  415994:	ldrb	w0, [x19, #3843]
  415998:	cbnz	w0, 4159a0 <ferror@plt+0x123d0>
  41599c:	str	w3, [x19, #2068]
  4159a0:	ldrb	w0, [x19, #3844]
  4159a4:	cbnz	w0, 4159b4 <ferror@plt+0x123e4>
  4159a8:	cmp	w3, #0x0
  4159ac:	cset	w0, eq  // eq = none
  4159b0:	str	w0, [x19, #2504]
  4159b4:	cbz	w3, 414e78 <ferror@plt+0x118a8>
  4159b8:	ldrb	w0, [x19, #3842]
  4159bc:	cbnz	w0, 4159c8 <ferror@plt+0x123f8>
  4159c0:	mov	w0, #0x1                   	// #1
  4159c4:	str	w0, [x19, #2040]
  4159c8:	ldrb	w0, [x19, #3847]
  4159cc:	cbnz	w0, 4159d4 <ferror@plt+0x12404>
  4159d0:	str	wzr, [x19, #3052]
  4159d4:	ldrb	w0, [x19, #3846]
  4159d8:	cbnz	w0, 4159e0 <ferror@plt+0x12410>
  4159dc:	str	wzr, [x19, #2896]
  4159e0:	ldrb	w0, [x19, #3841]
  4159e4:	cbnz	w0, 414e78 <ferror@plt+0x118a8>
  4159e8:	mov	w0, #0x1                   	// #1
  4159ec:	str	w0, [x19, #1800]
  4159f0:	b	414e78 <ferror@plt+0x118a8>
  4159f4:	mov	w1, w26
  4159f8:	bl	412468 <ferror@plt+0xee98>
  4159fc:	b	414e78 <ferror@plt+0x118a8>
  415a00:	mov	x1, x25
  415a04:	add	x0, x0, #0xf0
  415a08:	bl	414bcc <ferror@plt+0x115fc>
  415a0c:	b	414e78 <ferror@plt+0x118a8>
  415a10:	mov	x1, x25
  415a14:	add	x0, x0, #0xe8
  415a18:	bl	414bcc <ferror@plt+0x115fc>
  415a1c:	b	414e78 <ferror@plt+0x118a8>
  415a20:	ldr	x0, [x7]
  415a24:	mov	w1, w26
  415a28:	bl	428b5c <ferror@plt+0x2558c>
  415a2c:	mov	w1, w26
  415a30:	mov	x0, x22
  415a34:	bl	420cf4 <ferror@plt+0x1d724>
  415a38:	b	414e78 <ferror@plt+0x118a8>
  415a3c:	mov	w0, #0x1                   	// #1
  415a40:	adrp	x28, 48b000 <_obstack_memory_used@@Base+0x2ec10>
  415a44:	add	x28, x28, #0x83
  415a48:	strb	w0, [x19, #50]
  415a4c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  415a50:	add	x27, x0, #0xbea
  415a54:	ldrb	w0, [x25]
  415a58:	cbz	w0, 414e78 <ferror@plt+0x118a8>
  415a5c:	mov	w1, #0x2c                  	// #44
  415a60:	mov	x0, x25
  415a64:	bl	4032f0 <strchr@plt>
  415a68:	mov	x26, x0
  415a6c:	mov	x1, x27
  415a70:	mov	x0, x25
  415a74:	mov	x2, #0x7                   	// #7
  415a78:	bl	402f80 <strncmp@plt>
  415a7c:	cbnz	w0, 415a9c <ferror@plt+0x124cc>
  415a80:	ldrb	w0, [x25, #7]
  415a84:	cmp	w0, #0x2c
  415a88:	b.eq	415a90 <ferror@plt+0x124c0>  // b.none
  415a8c:	cbnz	w0, 415a9c <ferror@plt+0x124cc>
  415a90:	mov	w0, #0x1                   	// #1
  415a94:	strb	w0, [x19, #50]
  415a98:	b	414e78 <ferror@plt+0x118a8>
  415a9c:	mov	x1, x28
  415aa0:	mov	x0, x25
  415aa4:	mov	x2, #0x3                   	// #3
  415aa8:	bl	402f80 <strncmp@plt>
  415aac:	cbnz	w0, 415acc <ferror@plt+0x124fc>
  415ab0:	ldrb	w0, [x25, #3]
  415ab4:	cmp	w0, #0x2c
  415ab8:	b.eq	415ac0 <ferror@plt+0x124f0>  // b.none
  415abc:	cbnz	w0, 415acc <ferror@plt+0x124fc>
  415ac0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  415ac4:	add	x0, x0, #0x4ee
  415ac8:	bl	422340 <ferror@plt+0x1ed70>
  415acc:	cbz	x26, 414e78 <ferror@plt+0x118a8>
  415ad0:	add	x25, x26, #0x1
  415ad4:	b	415a54 <ferror@plt+0x12484>
  415ad8:	mov	w0, w5
  415adc:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415ae0:	add	x1, x1, #0x51c
  415ae4:	bl	422290 <ferror@plt+0x1ecc0>
  415ae8:	b	414e78 <ferror@plt+0x118a8>
  415aec:	str	w26, [x19, #228]
  415af0:	b	414e78 <ferror@plt+0x118a8>
  415af4:	mov	x0, x25
  415af8:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  415afc:	mov	x26, #0x1                   	// #1
  415b00:	str	x0, [x19, #2768]
  415b04:	mov	w0, #0x1                   	// #1
  415b08:	str	w0, [x19, #2804]
  415b0c:	mov	x0, x19
  415b10:	mov	w2, w26
  415b14:	mov	x1, x21
  415b18:	bl	412340 <ferror@plt+0xed70>
  415b1c:	ldr	w0, [x21, #2792]
  415b20:	cbnz	w0, 415b28 <ferror@plt+0x12558>
  415b24:	str	w26, [x19, #2792]
  415b28:	ldr	w0, [x21, #1892]
  415b2c:	cbnz	w0, 414e78 <ferror@plt+0x118a8>
  415b30:	ldr	w0, [x19, #3452]
  415b34:	cbz	w0, 414e78 <ferror@plt+0x118a8>
  415b38:	str	wzr, [x19, #1892]
  415b3c:	b	414e78 <ferror@plt+0x118a8>
  415b40:	mov	x0, x25
  415b44:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  415b48:	mov	x26, #0x1                   	// #1
  415b4c:	str	x0, [x19, #1624]
  415b50:	mov	w0, #0x1                   	// #1
  415b54:	str	w0, [x19, #1616]
  415b58:	b	414ff8 <ferror@plt+0x11a28>
  415b5c:	mov	x0, x25
  415b60:	mov	x26, #0x1                   	// #1
  415b64:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  415b68:	str	x0, [x19, #2768]
  415b6c:	ldr	w0, [x21, #2760]
  415b70:	cbnz	w0, 415b78 <ferror@plt+0x125a8>
  415b74:	str	w26, [x19, #2760]
  415b78:	ldr	w0, [x21, #2808]
  415b7c:	cbnz	w0, 415b84 <ferror@plt+0x125b4>
  415b80:	str	w26, [x19, #2808]
  415b84:	ldr	w0, [x21, #2252]
  415b88:	cbnz	w0, 415b90 <ferror@plt+0x125c0>
  415b8c:	str	w26, [x19, #2252]
  415b90:	ldr	w0, [x21, #2280]
  415b94:	cbnz	w0, 415b9c <ferror@plt+0x125cc>
  415b98:	str	w26, [x19, #2280]
  415b9c:	ldr	w0, [x21, #2320]
  415ba0:	cbnz	w0, 414e78 <ferror@plt+0x118a8>
  415ba4:	str	wzr, [x19, #2320]
  415ba8:	b	414e78 <ferror@plt+0x118a8>
  415bac:	mov	x0, x25
  415bb0:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  415bb4:	mov	w1, #0x2c                  	// #44
  415bb8:	mov	x28, x0
  415bbc:	adrp	x26, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  415bc0:	bl	4032f0 <strchr@plt>
  415bc4:	add	x26, x26, #0x230
  415bc8:	cbz	x0, 415c2c <ferror@plt+0x1265c>
  415bcc:	mov	x25, x0
  415bd0:	mov	w2, #0x0                   	// #0
  415bd4:	mov	x1, #0x0                   	// #0
  415bd8:	mov	x0, x28
  415bdc:	strb	wzr, [x25], #1
  415be0:	bl	416324 <ferror@plt+0x12d54>
  415be4:	str	x0, [x26, #32]
  415be8:	mov	w2, #0x0                   	// #0
  415bec:	mov	x0, x25
  415bf0:	mov	x1, #0x0                   	// #0
  415bf4:	bl	416324 <ferror@plt+0x12d54>
  415bf8:	str	x0, [x26, #40]
  415bfc:	ldr	x1, [x26, #32]
  415c00:	tbnz	x1, #63, 415c14 <ferror@plt+0x12644>
  415c04:	ldr	x0, [x26, #40]
  415c08:	tbnz	x0, #63, 415c14 <ferror@plt+0x12644>
  415c0c:	cmp	x1, x0
  415c10:	b.ge	415c20 <ferror@plt+0x12650>  // b.tcont
  415c14:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x29c10>
  415c18:	add	x0, x0, #0x59a
  415c1c:	bl	4221dc <ferror@plt+0x1ec0c>
  415c20:	mov	x0, x28
  415c24:	bl	4032a0 <free@plt>
  415c28:	b	414e78 <ferror@plt+0x118a8>
  415c2c:	mov	x0, x28
  415c30:	mov	w2, #0x0                   	// #0
  415c34:	mov	x1, #0x0                   	// #0
  415c38:	bl	416324 <ferror@plt+0x12d54>
  415c3c:	stp	x0, xzr, [x26, #32]
  415c40:	b	415bfc <ferror@plt+0x1262c>
  415c44:	cmp	x26, #0x0
  415c48:	cset	w0, ne  // ne = any
  415c4c:	strb	w0, [x7, #121]
  415c50:	b	414e78 <ferror@plt+0x118a8>
  415c54:	cmp	w26, #0x0
  415c58:	csinv	w26, w26, wzr, ne  // ne = any
  415c5c:	str	w26, [x19, #2960]
  415c60:	b	414e78 <ferror@plt+0x118a8>
  415c64:	str	w26, [x19, #2964]
  415c68:	b	414e78 <ferror@plt+0x118a8>
  415c6c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  415c70:	mov	x0, x25
  415c74:	add	x1, x1, #0x326
  415c78:	bl	403220 <strcmp@plt>
  415c7c:	cbnz	w0, 415c88 <ferror@plt+0x126b8>
  415c80:	str	wzr, [x19, #136]
  415c84:	b	414e78 <ferror@plt+0x118a8>
  415c88:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  415c8c:	mov	x0, x25
  415c90:	add	x1, x1, #0x38f
  415c94:	bl	403220 <strcmp@plt>
  415c98:	cbnz	w0, 415ca8 <ferror@plt+0x126d8>
  415c9c:	mov	w0, #0x1                   	// #1
  415ca0:	str	w0, [x19, #136]
  415ca4:	b	414e78 <ferror@plt+0x118a8>
  415ca8:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415cac:	mov	x0, x25
  415cb0:	add	x1, x1, #0x3cc
  415cb4:	bl	403220 <strcmp@plt>
  415cb8:	cbnz	w0, 415cc8 <ferror@plt+0x126f8>
  415cbc:	mov	w0, #0x2                   	// #2
  415cc0:	str	w0, [x19, #136]
  415cc4:	b	414e78 <ferror@plt+0x118a8>
  415cc8:	mov	x3, x25
  415ccc:	mov	w0, w20
  415cd0:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  415cd4:	mov	w1, #0x0                   	// #0
  415cd8:	add	x2, x2, #0x5cf
  415cdc:	bl	421fac <ferror@plt+0x1e9dc>
  415ce0:	b	414e78 <ferror@plt+0x118a8>
  415ce4:	cbz	x26, 414e78 <ferror@plt+0x118a8>
  415ce8:	mov	w0, #0x0                   	// #0
  415cec:	b	414ea0 <ferror@plt+0x118d0>
  415cf0:	cmp	x26, #0x0
  415cf4:	str	w26, [x19, #3128]
  415cf8:	cset	w0, ne  // ne = any
  415cfc:	strb	w0, [x19, #53]
  415d00:	b	414e78 <ferror@plt+0x118a8>
  415d04:	mov	w5, w20
  415d08:	add	x4, x21, #0x64
  415d0c:	mov	x3, x19
  415d10:	mov	x2, x25
  415d14:	mov	w1, #0x1                   	// #1
  415d18:	mov	w0, #0x0                   	// #0
  415d1c:	bl	4127f8 <ferror@plt+0xf228>
  415d20:	b	414e78 <ferror@plt+0x118a8>
  415d24:	cbz	x25, 415d50 <ferror@plt+0x12780>
  415d28:	ldrb	w0, [x25]
  415d2c:	cbz	w0, 415d50 <ferror@plt+0x12780>
  415d30:	mov	x4, x25
  415d34:	mov	x3, x25
  415d38:	mov	x2, x25
  415d3c:	mov	w0, w20
  415d40:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415d44:	add	x1, x1, #0x5f1
  415d48:	bl	422290 <ferror@plt+0x1ecc0>
  415d4c:	b	414e78 <ferror@plt+0x118a8>
  415d50:	ldrsw	x26, [x19, #3528]
  415d54:	sub	x0, x26, #0x2
  415d58:	cmp	x0, #0x3
  415d5c:	b.ls	415d98 <ferror@plt+0x127c8>  // b.plast
  415d60:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  415d64:	mov	x2, x26
  415d68:	add	x1, x1, #0x65a
  415d6c:	mov	w0, w20
  415d70:	bl	422290 <ferror@plt+0x1ecc0>
  415d74:	mov	w5, w20
  415d78:	add	x4, x21, #0x64
  415d7c:	mov	x3, x19
  415d80:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  415d84:	mov	w1, #0x0                   	// #0
  415d88:	add	x2, x2, #0x122
  415d8c:	mov	w0, #0x2                   	// #2
  415d90:	bl	4127f8 <ferror@plt+0xf228>
  415d94:	b	414e78 <ferror@plt+0x118a8>
  415d98:	str	w26, [x19, #3528]
  415d9c:	b	415d74 <ferror@plt+0x127a4>
  415da0:	mov	w5, w20
  415da4:	add	x4, x21, #0x64
  415da8:	mov	x3, x19
  415dac:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  415db0:	mov	w1, #0x1                   	// #1
  415db4:	add	x2, x2, #0x122
  415db8:	mov	w0, #0x0                   	// #0
  415dbc:	bl	4127f8 <ferror@plt+0xf228>
  415dc0:	b	414e78 <ferror@plt+0x118a8>
  415dc4:	mov	w5, w20
  415dc8:	add	x4, x21, #0x64
  415dcc:	mov	x3, x19
  415dd0:	mov	x2, x25
  415dd4:	mov	w1, #0x2                   	// #2
  415dd8:	mov	w0, #0x0                   	// #0
  415ddc:	bl	4127f8 <ferror@plt+0xf228>
  415de0:	b	414e78 <ferror@plt+0x118a8>
  415de4:	cmp	w2, #0x4df
  415de8:	mov	w5, w20
  415dec:	add	x4, x21, #0x64
  415df0:	mov	x3, x19
  415df4:	mov	x2, x25
  415df8:	cset	w1, eq  // eq = none
  415dfc:	mov	w0, #0x1                   	// #1
  415e00:	bl	4127f8 <ferror@plt+0xf228>
  415e04:	b	414e78 <ferror@plt+0x118a8>
  415e08:	mov	w5, w20
  415e0c:	add	x4, x21, #0x64
  415e10:	mov	x3, x19
  415e14:	mov	x2, x25
  415e18:	mov	w1, #0x0                   	// #0
  415e1c:	mov	w0, #0x4                   	// #4
  415e20:	bl	4127f8 <ferror@plt+0xf228>
  415e24:	b	414e78 <ferror@plt+0x118a8>
  415e28:	cmp	w2, #0x4e7
  415e2c:	mov	w5, w20
  415e30:	add	x4, x21, #0x64
  415e34:	mov	x3, x19
  415e38:	mov	x2, x25
  415e3c:	cset	w1, eq  // eq = none
  415e40:	mov	w0, #0x3                   	// #3
  415e44:	bl	4127f8 <ferror@plt+0xf228>
  415e48:	b	414e78 <ferror@plt+0x118a8>
  415e4c:	cmp	x26, #0x0
  415e50:	mov	w0, #0x1                   	// #1
  415e54:	strb	w0, [x7, #122]
  415e58:	mov	w5, w3
  415e5c:	stp	x21, x22, [sp]
  415e60:	mov	x7, x19
  415e64:	mov	w4, w20
  415e68:	cset	w3, ne  // ne = any
  415e6c:	mov	x2, #0x0                   	// #0
  415e70:	mov	w1, #0x4                   	// #4
  415e74:	mov	w0, #0x161                 	// #353
  415e78:	bl	418374 <ferror@plt+0x14da4>
  415e7c:	b	414e78 <ferror@plt+0x118a8>
  415e80:	cmp	x26, #0x0
  415e84:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  415e88:	add	x0, x0, #0x122
  415e8c:	csel	x0, x0, xzr, ne  // ne = any
  415e90:	str	x0, [x19, #2480]
  415e94:	b	414e78 <ferror@plt+0x118a8>
  415e98:	cbz	x26, 414e78 <ferror@plt+0x118a8>
  415e9c:	str	wzr, [x0, #3496]
  415ea0:	b	414e78 <ferror@plt+0x118a8>
  415ea4:	cmp	x26, #0x0
  415ea8:	cset	w0, eq  // eq = none
  415eac:	str	w0, [x19, #3496]
  415eb0:	str	w0, [x19, #3500]
  415eb4:	cbz	x26, 415228 <ferror@plt+0x11c58>
  415eb8:	b	414e78 <ferror@plt+0x118a8>
  415ebc:	mov	x1, x25
  415ec0:	mov	w0, w5
  415ec4:	adrp	x2, 497000 <_obstack_memory_used@@Base+0x3ac10>
  415ec8:	add	x2, x2, #0x9f3
  415ecc:	bl	414a9c <ferror@plt+0x114cc>
  415ed0:	b	414e78 <ferror@plt+0x118a8>
  415ed4:	mov	x1, x25
  415ed8:	mov	w0, w5
  415edc:	adrp	x2, 499000 <_obstack_memory_used@@Base+0x3cc10>
  415ee0:	add	x2, x2, #0x71d
  415ee4:	bl	414a9c <ferror@plt+0x114cc>
  415ee8:	b	414e78 <ferror@plt+0x118a8>
  415eec:	mov	x1, x25
  415ef0:	mov	w0, w5
  415ef4:	adrp	x2, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  415ef8:	add	x2, x2, #0x7fc
  415efc:	bl	414a9c <ferror@plt+0x114cc>
  415f00:	b	414e78 <ferror@plt+0x118a8>
  415f04:	mov	x1, x25
  415f08:	mov	w0, w5
  415f0c:	adrp	x2, 48f000 <_obstack_memory_used@@Base+0x32c10>
  415f10:	add	x2, x2, #0x7c5
  415f14:	bl	414a9c <ferror@plt+0x114cc>
  415f18:	b	414e78 <ferror@plt+0x118a8>
  415f1c:	cbnz	w8, 41557c <ferror@plt+0x11fac>
  415f20:	adrp	x2, 486000 <_obstack_memory_used@@Base+0x29c10>
  415f24:	mov	x4, x25
  415f28:	mov	w3, w28
  415f2c:	add	x2, x2, #0x3d5
  415f30:	b	4155d4 <ferror@plt+0x12004>
  415f34:	stp	x29, x30, [sp, #-64]!
  415f38:	and	w2, w2, #0xff
  415f3c:	mov	x29, sp
  415f40:	stp	x23, x24, [sp, #48]
  415f44:	ldr	x23, [x0]
  415f48:	stp	x19, x20, [sp, #16]
  415f4c:	stp	x21, x22, [sp, #32]
  415f50:	mov	x21, x0
  415f54:	cbz	x23, 415f74 <ferror@plt+0x129a4>
  415f58:	ldp	w0, w22, [x23]
  415f5c:	ubfx	x0, x0, #0, #31
  415f60:	sub	w0, w0, w22
  415f64:	cmp	w1, w0
  415f68:	b.hi	415f84 <ferror@plt+0x129b4>  // b.pmore
  415f6c:	mov	w20, #0x0                   	// #0
  415f70:	b	416034 <ferror@plt+0x12a64>
  415f74:	mov	w20, #0x0                   	// #0
  415f78:	cbz	w1, 416034 <ferror@plt+0x12a64>
  415f7c:	mov	w22, #0x0                   	// #0
  415f80:	b	415f98 <ferror@plt+0x129c8>
  415f84:	ldrsb	w0, [x23, #3]
  415f88:	tbz	w0, #31, 415ff8 <ferror@plt+0x12a28>
  415f8c:	add	w1, w1, w22
  415f90:	mov	w20, #0x1                   	// #1
  415f94:	str	xzr, [x21]
  415f98:	ldr	x0, [x21]
  415f9c:	cbz	x0, 416054 <ferror@plt+0x12a84>
  415fa0:	ldr	w19, [x0, #4]
  415fa4:	cbz	w2, 416010 <ferror@plt+0x12a40>
  415fa8:	add	w19, w1, w19
  415fac:	ldr	x0, [x21]
  415fb0:	ubfiz	x1, x19, #3, #32
  415fb4:	add	x1, x1, #0x8
  415fb8:	cbz	x0, 416028 <ferror@plt+0x12a58>
  415fbc:	ldr	w24, [x0, #4]
  415fc0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  415fc4:	str	x0, [x21]
  415fc8:	and	w1, w19, #0x7fffffff
  415fcc:	stp	w1, w24, [x0]
  415fd0:	cbz	w20, 41604c <ferror@plt+0x12a7c>
  415fd4:	mov	w3, w22
  415fd8:	mov	x1, #0x0                   	// #0
  415fdc:	add	x2, x1, #0x1
  415fe0:	cmp	x3, x1
  415fe4:	b.eq	416030 <ferror@plt+0x12a60>  // b.none
  415fe8:	ldr	x1, [x23, x2, lsl #3]
  415fec:	str	x1, [x0, x2, lsl #3]
  415ff0:	mov	x1, x2
  415ff4:	b	415fdc <ferror@plt+0x12a0c>
  415ff8:	mov	w20, #0x0                   	// #0
  415ffc:	b	415f7c <ferror@plt+0x129ac>
  416000:	cmp	w1, #0x4
  416004:	mov	w19, #0x4                   	// #4
  416008:	csel	w19, w1, w19, cs  // cs = hs, nlast
  41600c:	b	415fac <ferror@plt+0x129dc>
  416010:	ldr	w0, [x0]
  416014:	add	w1, w1, w19
  416018:	and	w0, w0, #0x7fffffff
  41601c:	bl	41e438 <ferror@plt+0x1ae68>
  416020:	mov	w19, w0
  416024:	b	415fac <ferror@plt+0x129dc>
  416028:	mov	w24, #0x0                   	// #0
  41602c:	b	415fc0 <ferror@plt+0x129f0>
  416030:	str	w22, [x0, #4]
  416034:	mov	w0, w20
  416038:	ldp	x19, x20, [sp, #16]
  41603c:	ldp	x21, x22, [sp, #32]
  416040:	ldp	x23, x24, [sp, #48]
  416044:	ldp	x29, x30, [sp], #64
  416048:	ret
  41604c:	mov	w20, #0x1                   	// #1
  416050:	b	416034 <ferror@plt+0x12a64>
  416054:	cbz	w2, 416000 <ferror@plt+0x12a30>
  416058:	mov	w19, #0x0                   	// #0
  41605c:	b	415fa8 <ferror@plt+0x129d8>
  416060:	ands	w1, w1, w0
  416064:	b.eq	416084 <ferror@plt+0x12ab4>  // b.none
  416068:	tbz	w0, #20, 41608c <ferror@plt+0x12abc>
  41606c:	and	w0, w0, #0xfffff
  416070:	and	w0, w0, #0xfff80fff
  416074:	cbz	w0, 41608c <ferror@plt+0x12abc>
  416078:	tst	w1, #0xffcfffff
  41607c:	cset	w0, ne  // ne = any
  416080:	ret
  416084:	mov	w0, #0x0                   	// #0
  416088:	b	416080 <ferror@plt+0x12ab0>
  41608c:	mov	w0, #0x1                   	// #1
  416090:	b	416080 <ferror@plt+0x12ab0>
  416094:	stp	x29, x30, [sp, #-64]!
  416098:	mov	x29, sp
  41609c:	stp	x19, x20, [sp, #16]
  4160a0:	mov	x19, x0
  4160a4:	mov	w20, #0x0                   	// #0
  4160a8:	stp	x21, x22, [sp, #32]
  4160ac:	mov	x21, x1
  4160b0:	mov	x22, x2
  4160b4:	stp	x23, x24, [sp, #48]
  4160b8:	and	w23, w3, #0x80000
  4160bc:	ubfiz	x0, x20, #4, #32
  4160c0:	add	x24, x19, x0
  4160c4:	ldr	x1, [x19, x0]
  4160c8:	cbz	x1, 41610c <ferror@plt+0x12b3c>
  4160cc:	mov	x0, x21
  4160d0:	bl	403220 <strcmp@plt>
  4160d4:	cbnz	w0, 416104 <ferror@plt+0x12b34>
  4160d8:	cbz	w23, 4160fc <ferror@plt+0x12b2c>
  4160dc:	ldrsw	x0, [x24, #8]
  4160e0:	str	x0, [x22]
  4160e4:	mov	w0, #0x1                   	// #1
  4160e8:	ldp	x19, x20, [sp, #16]
  4160ec:	ldp	x21, x22, [sp, #32]
  4160f0:	ldp	x23, x24, [sp, #48]
  4160f4:	ldp	x29, x30, [sp], #64
  4160f8:	ret
  4160fc:	ldr	w0, [x24, #12]
  416100:	tbz	w0, #1, 4160dc <ferror@plt+0x12b0c>
  416104:	add	w20, w20, #0x1
  416108:	b	4160bc <ferror@plt+0x12aec>
  41610c:	mov	w0, #0x0                   	// #0
  416110:	b	4160e8 <ferror@plt+0x12b18>
  416114:	stp	x29, x30, [sp, #-112]!
  416118:	mov	x29, sp
  41611c:	stp	x23, x24, [sp, #48]
  416120:	mov	x23, x0
  416124:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  416128:	stp	x25, x26, [sp, #64]
  41612c:	mov	w26, w1
  416130:	ldr	w0, [x0, #1964]
  416134:	stp	x19, x20, [sp, #16]
  416138:	mov	x24, #0x0                   	// #0
  41613c:	mov	w25, w0
  416140:	mov	x20, x25
  416144:	stp	x21, x22, [sp, #32]
  416148:	adrp	x21, 49d000 <_obstack_memory_used@@Base+0x40c10>
  41614c:	add	x21, x21, #0xfc8
  416150:	mov	x22, #0x60                  	// #96
  416154:	stp	x27, x28, [sp, #80]
  416158:	str	w0, [sp, #96]
  41615c:	sub	x0, x20, x24
  416160:	cmp	x0, #0x1
  416164:	b.ls	41619c <ferror@plt+0x12bcc>  // b.plast
  416168:	add	x19, x20, x24
  41616c:	lsr	x19, x19, #1
  416170:	mul	x0, x19, x22
  416174:	add	x2, x21, x0
  416178:	ldr	x1, [x21, x0]
  41617c:	mov	x0, x23
  416180:	ldrb	w2, [x2, #52]
  416184:	add	x1, x1, #0x1
  416188:	bl	402f80 <strncmp@plt>
  41618c:	cmp	w0, #0x0
  416190:	csel	x24, x24, x19, lt  // lt = tstop
  416194:	csel	x20, x19, x20, lt  // lt = tstop
  416198:	b	41615c <ferror@plt+0x12b8c>
  41619c:	mov	w27, #0xfff                 	// #4095
  4161a0:	mov	x22, x24
  4161a4:	mov	x19, #0x596                 	// #1430
  4161a8:	mov	x20, #0x60                  	// #96
  4161ac:	movk	w27, #0x178, lsl #16
  4161b0:	mul	x0, x22, x20
  4161b4:	add	x3, x21, x0
  4161b8:	ldr	x1, [x21, x0]
  4161bc:	mov	x0, x23
  4161c0:	ldrb	w28, [x3, #52]
  4161c4:	add	x1, x1, #0x1
  4161c8:	str	x3, [sp, #104]
  4161cc:	mov	x2, x28
  4161d0:	bl	402f80 <strncmp@plt>
  4161d4:	mov	w5, #0x1400000             	// #20971520
  4161d8:	cbnz	w0, 41620c <ferror@plt+0x12c3c>
  4161dc:	ldrb	w1, [x23, x28]
  4161e0:	ldr	x3, [sp, #104]
  4161e4:	ldr	w0, [x3, #60]
  4161e8:	cbz	w1, 4161f0 <ferror@plt+0x12c20>
  4161ec:	tbz	w0, #22, 41620c <ferror@plt+0x12c3c>
  4161f0:	tst	w26, w0
  4161f4:	b.ne	4162f0 <ferror@plt+0x12d20>  // b.any
  4161f8:	and	w0, w0, w27
  4161fc:	cmp	w0, w5
  416200:	b.eq	416314 <ferror@plt+0x12d44>  // b.none
  416204:	cmp	x19, #0x596
  416208:	csel	x19, x19, x22, ne  // ne = any
  41620c:	madd	x22, x22, x20, x21
  416210:	ldr	w1, [sp, #96]
  416214:	ldrh	w0, [x22, #50]
  416218:	ldrh	w22, [x22, #50]
  41621c:	cmp	w1, w0
  416220:	b.ne	4161b0 <ferror@plt+0x12be0>  // b.any
  416224:	cmp	x19, #0x596
  416228:	b.ne	4162f4 <ferror@plt+0x12d24>  // b.any
  41622c:	ldrb	w0, [x23]
  416230:	cmp	w0, #0x2d
  416234:	b.ne	4162f4 <ferror@plt+0x12d24>  // b.any
  416238:	add	x22, x24, #0x1
  41623c:	mov	x0, x23
  416240:	bl	402d50 <strlen@plt>
  416244:	mov	x26, x0
  416248:	mov	x0, #0x60                  	// #96
  41624c:	madd	x20, x24, x20, x21
  416250:	mov	x27, x22
  416254:	mov	x28, x19
  416258:	madd	x21, x22, x0, x21
  41625c:	add	x24, x24, #0x2
  416260:	cmp	x27, x25
  416264:	b.cs	41631c <ferror@plt+0x12d4c>  // b.hs, b.nlast
  416268:	ldr	x3, [x20, #96]
  41626c:	mov	x2, x26
  416270:	mov	x0, x23
  416274:	add	x3, x3, #0x1
  416278:	str	x3, [sp, #96]
  41627c:	mov	x1, x3
  416280:	bl	402f80 <strncmp@plt>
  416284:	cbnz	w0, 41631c <ferror@plt+0x12d4c>
  416288:	cmp	x27, x22
  41628c:	ldr	x3, [sp, #96]
  416290:	b.ne	41629c <ferror@plt+0x12ccc>  // b.any
  416294:	ldr	w0, [x20, #156]
  416298:	tbz	w0, #22, 4162e0 <ferror@plt+0x12d10>
  41629c:	cmp	x24, x27
  4162a0:	b.ne	4162f4 <ferror@plt+0x12d24>  // b.any
  4162a4:	cmp	x28, x22
  4162a8:	b.ne	4162f4 <ferror@plt+0x12d24>  // b.any
  4162ac:	ldr	w0, [x20, #156]
  4162b0:	tbz	w0, #22, 4162f4 <ferror@plt+0x12d24>
  4162b4:	ldrb	w2, [x21, #52]
  4162b8:	ldrb	w1, [x20, #148]
  4162bc:	add	w0, w2, #0x1
  4162c0:	cmp	w1, w0
  4162c4:	b.ne	4162f4 <ferror@plt+0x12d24>  // b.any
  4162c8:	ldr	x1, [x21]
  4162cc:	and	x2, x2, #0xff
  4162d0:	mov	x0, x3
  4162d4:	add	x1, x1, #0x1
  4162d8:	bl	402f80 <strncmp@plt>
  4162dc:	cbnz	w0, 4162f4 <ferror@plt+0x12d24>
  4162e0:	add	x27, x27, #0x1
  4162e4:	add	x20, x20, #0x60
  4162e8:	mov	x28, x22
  4162ec:	b	416260 <ferror@plt+0x12c90>
  4162f0:	mov	x19, x22
  4162f4:	mov	x0, x19
  4162f8:	ldp	x19, x20, [sp, #16]
  4162fc:	ldp	x21, x22, [sp, #32]
  416300:	ldp	x23, x24, [sp, #48]
  416304:	ldp	x25, x26, [sp, #64]
  416308:	ldp	x27, x28, [sp, #80]
  41630c:	ldp	x29, x30, [sp], #112
  416310:	ret
  416314:	mov	x19, #0x596                 	// #1430
  416318:	b	4162f4 <ferror@plt+0x12d24>
  41631c:	mov	x19, x28
  416320:	b	4162f4 <ferror@plt+0x12d24>
  416324:	stp	x29, x30, [sp, #-80]!
  416328:	mov	x29, sp
  41632c:	stp	x19, x20, [sp, #16]
  416330:	stp	x21, x22, [sp, #32]
  416334:	mov	x22, x0
  416338:	stp	x23, x24, [sp, #48]
  41633c:	and	w24, w2, #0xff
  416340:	cbnz	x1, 416368 <ferror@plt+0x12d98>
  416344:	bl	4034e0 <__errno_location@plt>
  416348:	mov	x20, x0
  41634c:	ldrb	w1, [x22]
  416350:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  416354:	add	x0, x0, #0x228
  416358:	ldrh	w0, [x0, x1, lsl #1]
  41635c:	tbnz	w0, #2, 416370 <ferror@plt+0x12da0>
  416360:	mov	w0, #0x16                  	// #22
  416364:	b	4163d4 <ferror@plt+0x12e04>
  416368:	mov	x20, x1
  41636c:	b	41634c <ferror@plt+0x12d7c>
  416370:	str	wzr, [x20]
  416374:	bl	4034e0 <__errno_location@plt>
  416378:	mov	x21, x0
  41637c:	add	x1, sp, #0x48
  416380:	mov	x0, x22
  416384:	mov	w2, #0xa                   	// #10
  416388:	str	xzr, [sp, #72]
  41638c:	str	wzr, [x21]
  416390:	bl	403300 <strtoull@plt>
  416394:	mov	x23, x0
  416398:	ldr	x19, [sp, #72]
  41639c:	cbz	x19, 416508 <ferror@plt+0x12f38>
  4163a0:	ldrb	w0, [x19]
  4163a4:	cbz	w0, 416508 <ferror@plt+0x12f38>
  4163a8:	cbnz	w24, 4163f0 <ferror@plt+0x12e20>
  4163ac:	str	wzr, [x21]
  4163b0:	add	x1, sp, #0x48
  4163b4:	mov	x0, x22
  4163b8:	mov	w2, #0x0                   	// #0
  4163bc:	bl	403300 <strtoull@plt>
  4163c0:	ldr	x1, [sp, #72]
  4163c4:	ldrb	w1, [x1]
  4163c8:	cbz	w1, 4163dc <ferror@plt+0x12e0c>
  4163cc:	ldr	w0, [x21]
  4163d0:	cbz	w0, 416360 <ferror@plt+0x12d90>
  4163d4:	str	w0, [x20]
  4163d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4163dc:	ldp	x19, x20, [sp, #16]
  4163e0:	ldp	x21, x22, [sp, #32]
  4163e4:	ldp	x23, x24, [sp, #48]
  4163e8:	ldp	x29, x30, [sp], #80
  4163ec:	ret
  4163f0:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4163f4:	mov	x0, x19
  4163f8:	add	x1, x1, #0xa00
  4163fc:	bl	403220 <strcmp@plt>
  416400:	cbz	w0, 416510 <ferror@plt+0x12f40>
  416404:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416408:	mov	x0, x19
  41640c:	add	x1, x1, #0xa03
  416410:	bl	403080 <strcasecmp@plt>
  416414:	cbz	w0, 416518 <ferror@plt+0x12f48>
  416418:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41641c:	mov	x0, x19
  416420:	add	x1, x1, #0xa07
  416424:	bl	403220 <strcmp@plt>
  416428:	cbz	w0, 416518 <ferror@plt+0x12f48>
  41642c:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416430:	mov	x0, x19
  416434:	add	x1, x1, #0xa0a
  416438:	bl	403220 <strcmp@plt>
  41643c:	cbz	w0, 416520 <ferror@plt+0x12f50>
  416440:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416444:	mov	x0, x19
  416448:	add	x1, x1, #0xa0d
  41644c:	bl	403080 <strcasecmp@plt>
  416450:	cbz	w0, 41652c <ferror@plt+0x12f5c>
  416454:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416458:	mov	x0, x19
  41645c:	add	x1, x1, #0xa11
  416460:	bl	403080 <strcasecmp@plt>
  416464:	cbz	w0, 416534 <ferror@plt+0x12f64>
  416468:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41646c:	mov	x0, x19
  416470:	add	x1, x1, #0xa14
  416474:	bl	403080 <strcasecmp@plt>
  416478:	cbz	w0, 416540 <ferror@plt+0x12f70>
  41647c:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416480:	mov	x0, x19
  416484:	add	x1, x1, #0xa18
  416488:	bl	403080 <strcasecmp@plt>
  41648c:	cbz	w0, 416548 <ferror@plt+0x12f78>
  416490:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416494:	mov	x0, x19
  416498:	add	x1, x1, #0xa1b
  41649c:	bl	403080 <strcasecmp@plt>
  4164a0:	cbz	w0, 416558 <ferror@plt+0x12f88>
  4164a4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4164a8:	mov	x0, x19
  4164ac:	add	x1, x1, #0xa1f
  4164b0:	bl	403080 <strcasecmp@plt>
  4164b4:	cbz	w0, 416560 <ferror@plt+0x12f90>
  4164b8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4164bc:	mov	x0, x19
  4164c0:	add	x1, x1, #0xa22
  4164c4:	bl	403080 <strcasecmp@plt>
  4164c8:	cbz	w0, 416574 <ferror@plt+0x12fa4>
  4164cc:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4164d0:	mov	x0, x19
  4164d4:	add	x1, x1, #0xa26
  4164d8:	bl	403080 <strcasecmp@plt>
  4164dc:	cbz	w0, 41657c <ferror@plt+0x12fac>
  4164e0:	mov	x0, x19
  4164e4:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x2fc10>
  4164e8:	add	x1, x1, #0x218
  4164ec:	bl	403080 <strcasecmp@plt>
  4164f0:	mov	x2, #0x1000000000000000    	// #1152921504606846976
  4164f4:	cbnz	w0, 416360 <ferror@plt+0x12d90>
  4164f8:	mul	x2, x23, x2
  4164fc:	cmp	x23, x2
  416500:	csinv	x0, x2, xzr, ls  // ls = plast
  416504:	b	4163dc <ferror@plt+0x12e0c>
  416508:	mov	x2, #0x1                   	// #1
  41650c:	b	4164f8 <ferror@plt+0x12f28>
  416510:	mov	x2, #0x3e8                 	// #1000
  416514:	b	4164f8 <ferror@plt+0x12f28>
  416518:	mov	x2, #0x400                 	// #1024
  41651c:	b	4164f8 <ferror@plt+0x12f28>
  416520:	mov	x2, #0x4240                	// #16960
  416524:	movk	x2, #0xf, lsl #16
  416528:	b	4164f8 <ferror@plt+0x12f28>
  41652c:	mov	x2, #0x100000              	// #1048576
  416530:	b	4164f8 <ferror@plt+0x12f28>
  416534:	mov	x2, #0xca00                	// #51712
  416538:	movk	x2, #0x3b9a, lsl #16
  41653c:	b	4164f8 <ferror@plt+0x12f28>
  416540:	mov	x2, #0x40000000            	// #1073741824
  416544:	b	4164f8 <ferror@plt+0x12f28>
  416548:	mov	x2, #0x1000                	// #4096
  41654c:	movk	x2, #0xd4a5, lsl #16
  416550:	movk	x2, #0xe8, lsl #32
  416554:	b	4164f8 <ferror@plt+0x12f28>
  416558:	mov	x2, #0x10000000000         	// #1099511627776
  41655c:	b	4164f8 <ferror@plt+0x12f28>
  416560:	mov	x2, #0x8000                	// #32768
  416564:	movk	x2, #0xa4c6, lsl #16
  416568:	movk	x2, #0x8d7e, lsl #32
  41656c:	movk	x2, #0x3, lsl #48
  416570:	b	4164f8 <ferror@plt+0x12f28>
  416574:	mov	x2, #0x4000000000000       	// #1125899906842624
  416578:	b	4164f8 <ferror@plt+0x12f28>
  41657c:	mov	x2, #0xa7640000            	// #2808348672
  416580:	movk	x2, #0xb6b3, lsl #32
  416584:	movk	x2, #0xde0, lsl #48
  416588:	b	4164f8 <ferror@plt+0x12f28>
  41658c:	stp	x29, x30, [sp, #-48]!
  416590:	mov	x4, #0x60                  	// #96
  416594:	mov	x29, sp
  416598:	str	x19, [sp, #16]
  41659c:	mov	x19, x2
  4165a0:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  4165a4:	add	x2, x2, #0xfc8
  4165a8:	madd	x0, x0, x4, x2
  4165ac:	ldr	w2, [x0, #72]
  4165b0:	cmp	w2, #0x6
  4165b4:	b.eq	4165d0 <ferror@plt+0x13000>  // b.none
  4165b8:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4165bc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4165c0:	add	x2, x2, #0xa29
  4165c4:	add	x0, x0, #0xa3f
  4165c8:	mov	w1, #0x144                 	// #324
  4165cc:	bl	403600 <ferror@plt+0x30>
  4165d0:	ldrh	w0, [x0, #68]
  4165d4:	adrp	x2, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  4165d8:	add	x2, x2, #0x730
  4165dc:	mov	x4, #0x30                  	// #48
  4165e0:	madd	x0, x0, x4, x2
  4165e4:	add	x2, sp, #0x28
  4165e8:	ldr	x0, [x0, #16]
  4165ec:	bl	416094 <ferror@plt+0x12ac4>
  4165f0:	tst	w0, #0xff
  4165f4:	b.eq	416600 <ferror@plt+0x13030>  // b.none
  4165f8:	ldr	x1, [sp, #40]
  4165fc:	str	w1, [x19]
  416600:	ldr	x19, [sp, #16]
  416604:	ldp	x29, x30, [sp], #48
  416608:	ret
  41660c:	and	w7, w3, #0x80000
  416610:	mov	w4, #0x0                   	// #0
  416614:	ubfiz	x6, x4, #4, #32
  416618:	add	x5, x0, x6
  41661c:	ldr	x6, [x0, x6]
  416620:	cbz	x6, 416654 <ferror@plt+0x13084>
  416624:	ldr	w8, [x5, #8]
  416628:	cmp	w8, w2
  41662c:	b.ne	41664c <ferror@plt+0x1307c>  // b.any
  416630:	ldr	w5, [x5, #12]
  416634:	tbz	w5, #0, 41664c <ferror@plt+0x1307c>
  416638:	cbz	w7, 416648 <ferror@plt+0x13078>
  41663c:	mov	w0, #0x1                   	// #1
  416640:	str	x6, [x1]
  416644:	ret
  416648:	tbz	w5, #1, 41663c <ferror@plt+0x1306c>
  41664c:	add	w4, w4, #0x1
  416650:	b	416614 <ferror@plt+0x13044>
  416654:	and	w3, w3, #0x80000
  416658:	mov	w4, #0x0                   	// #0
  41665c:	ubfiz	x5, x4, #4, #32
  416660:	add	x6, x0, x5
  416664:	ldr	x5, [x0, x5]
  416668:	cbz	x5, 416698 <ferror@plt+0x130c8>
  41666c:	ldr	w7, [x6, #8]
  416670:	cmp	w2, w7
  416674:	b.ne	416684 <ferror@plt+0x130b4>  // b.any
  416678:	cbnz	w3, 41668c <ferror@plt+0x130bc>
  41667c:	ldr	w6, [x6, #12]
  416680:	tbz	w6, #1, 41668c <ferror@plt+0x130bc>
  416684:	add	w4, w4, #0x1
  416688:	b	41665c <ferror@plt+0x1308c>
  41668c:	str	x5, [x1]
  416690:	mov	w0, #0x0                   	// #0
  416694:	b	416644 <ferror@plt+0x13074>
  416698:	str	xzr, [x1]
  41669c:	b	416690 <ferror@plt+0x130c0>
  4166a0:	stp	x29, x30, [sp, #-160]!
  4166a4:	mov	x29, sp
  4166a8:	stp	x19, x20, [sp, #16]
  4166ac:	mov	x20, x0
  4166b0:	add	x0, sp, #0xa0
  4166b4:	stp	x0, x0, [sp, #64]
  4166b8:	mov	w0, #0xffffffc8            	// #-56
  4166bc:	str	w0, [sp, #88]
  4166c0:	mov	x0, x20
  4166c4:	stp	x21, x22, [sp, #32]
  4166c8:	add	x22, sp, #0x60
  4166cc:	mov	x21, #0x0                   	// #0
  4166d0:	str	x23, [sp, #48]
  4166d4:	str	x22, [sp, #80]
  4166d8:	str	wzr, [sp, #92]
  4166dc:	stp	x1, x2, [sp, #104]
  4166e0:	stp	x3, x4, [sp, #120]
  4166e4:	stp	x5, x6, [sp, #136]
  4166e8:	str	x7, [sp, #152]
  4166ec:	cbz	x0, 416734 <ferror@plt+0x13164>
  4166f0:	bl	402d50 <strlen@plt>
  4166f4:	add	x21, x21, x0
  4166f8:	ldr	w1, [sp, #88]
  4166fc:	ldr	x0, [sp, #64]
  416700:	tbnz	w1, #31, 416718 <ferror@plt+0x13148>
  416704:	add	x1, x0, #0xf
  416708:	and	x1, x1, #0xfffffffffffffff8
  41670c:	str	x1, [sp, #64]
  416710:	ldr	x0, [x0]
  416714:	b	4166ec <ferror@plt+0x1311c>
  416718:	add	w2, w1, #0x8
  41671c:	str	w2, [sp, #88]
  416720:	cmp	w2, #0x0
  416724:	b.gt	416704 <ferror@plt+0x13134>
  416728:	add	x0, sp, #0xa0
  41672c:	add	x0, x0, w1, sxtw
  416730:	b	416710 <ferror@plt+0x13140>
  416734:	adrp	x19, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  416738:	add	x19, x19, #0x1d8
  41673c:	add	x21, x21, #0x1
  416740:	ldp	x1, x0, [x19, #24]
  416744:	sub	x0, x0, x1
  416748:	cmp	x21, x0
  41674c:	b.ls	41675c <ferror@plt+0x1318c>  // b.plast
  416750:	mov	x1, x21
  416754:	mov	x0, x19
  416758:	bl	45c22c <_obstack_newchunk@@Base>
  41675c:	ldp	x23, x1, [x19, #16]
  416760:	add	x21, x1, x21
  416764:	cmp	x21, x23
  416768:	b.ne	416778 <ferror@plt+0x131a8>  // b.any
  41676c:	ldrb	w0, [x19, #80]
  416770:	orr	w0, w0, #0x2
  416774:	strb	w0, [x19, #80]
  416778:	ldr	x1, [x19, #48]
  41677c:	str	x22, [sp, #80]
  416780:	ldr	x0, [x19, #8]
  416784:	add	x21, x21, x1
  416788:	ldr	x2, [x19, #32]
  41678c:	bic	x1, x21, x1
  416790:	sub	x3, x1, x0
  416794:	str	wzr, [sp, #92]
  416798:	sub	x0, x2, x0
  41679c:	cmp	x3, x0
  4167a0:	add	x0, sp, #0xa0
  4167a4:	csel	x1, x1, x2, ls  // ls = plast
  4167a8:	stp	x1, x1, [x19, #16]
  4167ac:	mov	x19, x23
  4167b0:	stp	x0, x0, [sp, #64]
  4167b4:	mov	w0, #0xffffffc8            	// #-56
  4167b8:	str	w0, [sp, #88]
  4167bc:	cbz	x20, 41681c <ferror@plt+0x1324c>
  4167c0:	mov	x0, x20
  4167c4:	bl	402d50 <strlen@plt>
  4167c8:	mov	x1, x20
  4167cc:	mov	x21, x0
  4167d0:	mov	x2, x0
  4167d4:	mov	x0, x19
  4167d8:	bl	402cd0 <memcpy@plt>
  4167dc:	add	x19, x19, x21
  4167e0:	ldr	w1, [sp, #88]
  4167e4:	ldr	x0, [sp, #64]
  4167e8:	tbnz	w1, #31, 416800 <ferror@plt+0x13230>
  4167ec:	add	x1, x0, #0xf
  4167f0:	and	x1, x1, #0xfffffffffffffff8
  4167f4:	str	x1, [sp, #64]
  4167f8:	ldr	x20, [x0]
  4167fc:	b	4167bc <ferror@plt+0x131ec>
  416800:	add	w2, w1, #0x8
  416804:	str	w2, [sp, #88]
  416808:	cmp	w2, #0x0
  41680c:	b.gt	4167ec <ferror@plt+0x1321c>
  416810:	ldr	x0, [sp, #72]
  416814:	add	x0, x0, w1, sxtw
  416818:	b	4167f8 <ferror@plt+0x13228>
  41681c:	strb	wzr, [x19]
  416820:	mov	x0, x23
  416824:	ldp	x19, x20, [sp, #16]
  416828:	ldp	x21, x22, [sp, #32]
  41682c:	ldr	x23, [sp, #48]
  416830:	ldp	x29, x30, [sp], #160
  416834:	ret
  416838:	stp	x29, x30, [sp, #-80]!
  41683c:	mov	x29, sp
  416840:	stp	x21, x22, [sp, #32]
  416844:	mov	x21, x0
  416848:	mov	x0, #0x60                  	// #96
  41684c:	stp	x23, x24, [sp, #48]
  416850:	adrp	x24, 49d000 <_obstack_memory_used@@Base+0x40c10>
  416854:	mul	x0, x21, x0
  416858:	add	x24, x24, #0xfc8
  41685c:	stp	x19, x20, [sp, #16]
  416860:	mov	x20, x3
  416864:	str	x25, [sp, #64]
  416868:	add	x3, x24, x0
  41686c:	mov	x25, x1
  416870:	ldr	x22, [x24, x0]
  416874:	cbnz	x2, 416950 <ferror@plt+0x13380>
  416878:	ldrsb	w0, [x3, #64]
  41687c:	tbnz	w0, #31, 416950 <ferror@plt+0x13380>
  416880:	ldrb	w0, [x22, #1]
  416884:	sub	w0, w0, #0x57
  416888:	and	w0, w0, #0xff
  41688c:	cmp	w0, #0x16
  416890:	b.hi	416950 <ferror@plt+0x13380>  // b.pmore
  416894:	mov	x1, #0x8001                	// #32769
  416898:	movk	x1, #0x41, lsl #16
  41689c:	lsr	x0, x1, x0
  4168a0:	tbz	w0, #0, 416950 <ferror@plt+0x13380>
  4168a4:	adrp	x19, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  4168a8:	add	x19, x19, #0x1d8
  4168ac:	ldrb	w2, [x3, #52]
  4168b0:	ldp	x1, x0, [x19, #24]
  4168b4:	add	x23, x2, #0x5
  4168b8:	sub	x0, x0, x1
  4168bc:	cmp	x23, x0
  4168c0:	b.ls	4168d0 <ferror@plt+0x13300>  // b.plast
  4168c4:	mov	x1, x23
  4168c8:	mov	x0, x19
  4168cc:	bl	45c22c <_obstack_newchunk@@Base>
  4168d0:	ldr	x2, [x19, #24]
  4168d4:	add	x2, x2, x23
  4168d8:	ldr	x23, [x19, #16]
  4168dc:	cmp	x2, x23
  4168e0:	b.ne	4168f0 <ferror@plt+0x13320>  // b.any
  4168e4:	ldrb	w0, [x19, #80]
  4168e8:	orr	w0, w0, #0x2
  4168ec:	strb	w0, [x19, #80]
  4168f0:	ldr	x0, [x19, #48]
  4168f4:	ldr	x1, [x19, #8]
  4168f8:	add	x2, x2, x0
  4168fc:	bic	x0, x2, x0
  416900:	ldr	x2, [x19, #32]
  416904:	sub	x3, x0, x1
  416908:	sub	x1, x2, x1
  41690c:	cmp	x3, x1
  416910:	csel	x0, x0, x2, ls  // ls = plast
  416914:	stp	x0, x0, [x19, #16]
  416918:	mov	w0, #0x2d                  	// #45
  41691c:	strb	w0, [x23]
  416920:	ldrb	w1, [x22, #1]
  416924:	strb	w0, [x23, #4]
  416928:	mov	x0, #0x60                  	// #96
  41692c:	strb	w1, [x23, #1]
  416930:	mov	w1, #0x6f6e                	// #28526
  416934:	madd	x0, x21, x0, x24
  416938:	strh	w1, [x23, #2]
  41693c:	add	x1, x22, #0x2
  416940:	mov	x22, x23
  416944:	ldrb	w2, [x0, #52]
  416948:	add	x0, x23, #0x5
  41694c:	bl	402cd0 <memcpy@plt>
  416950:	stp	xzr, xzr, [x20, #48]
  416954:	cbz	x25, 4169d0 <ferror@plt+0x13400>
  416958:	mov	x0, #0x60                  	// #96
  41695c:	madd	x21, x21, x0, x24
  416960:	ldr	w0, [x21, #60]
  416964:	tbz	w0, #23, 416994 <ferror@plt+0x133c4>
  416968:	ldrb	w1, [x21, #64]
  41696c:	tbnz	w1, #3, 416994 <ferror@plt+0x133c4>
  416970:	mov	x0, #0x2                   	// #2
  416974:	stp	x22, x25, [x20, #32]
  416978:	ldp	x21, x22, [sp, #32]
  41697c:	ldp	x23, x24, [sp, #48]
  416980:	ldr	x25, [sp, #64]
  416984:	str	x0, [x20, #64]
  416988:	ldp	x19, x20, [sp, #16]
  41698c:	ldp	x29, x30, [sp], #80
  416990:	ret
  416994:	tbnz	w0, #22, 4169b0 <ferror@plt+0x133e0>
  416998:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41699c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4169a0:	add	x2, x2, #0xa57
  4169a4:	add	x0, x0, #0xa3f
  4169a8:	mov	w1, #0x19b                 	// #411
  4169ac:	bl	403600 <ferror@plt+0x30>
  4169b0:	mov	x1, x25
  4169b4:	mov	x0, x22
  4169b8:	mov	x2, #0x0                   	// #0
  4169bc:	bl	4166a0 <ferror@plt+0x130d0>
  4169c0:	str	x0, [x20, #32]
  4169c4:	mov	x0, #0x1                   	// #1
  4169c8:	str	xzr, [x20, #40]
  4169cc:	b	416978 <ferror@plt+0x133a8>
  4169d0:	str	x22, [x20, #32]
  4169d4:	b	4169c4 <ferror@plt+0x133f4>
  4169d8:	stp	x29, x30, [sp, #-32]!
  4169dc:	mov	x5, x0
  4169e0:	mov	x6, x1
  4169e4:	mov	x29, sp
  4169e8:	str	x19, [sp, #16]
  4169ec:	mov	x19, x4
  4169f0:	str	x0, [x4]
  4169f4:	mov	x0, #0x60                  	// #96
  4169f8:	stp	xzr, x6, [x4, #8]
  4169fc:	mov	w1, w3
  416a00:	str	x2, [x4, #72]
  416a04:	adrp	x4, 49d000 <_obstack_memory_used@@Base+0x40c10>
  416a08:	add	x4, x4, #0xfc8
  416a0c:	madd	x0, x5, x0, x4
  416a10:	ldr	w0, [x0, #60]
  416a14:	bl	416060 <ferror@plt+0x12a90>
  416a18:	tst	w0, #0xff
  416a1c:	cset	w0, eq  // eq = none
  416a20:	mov	x3, x19
  416a24:	mov	x1, x6
  416a28:	lsl	w0, w0, #2
  416a2c:	str	w0, [x19, #80]
  416a30:	mov	x0, x5
  416a34:	bl	416838 <ferror@plt+0x13268>
  416a38:	ldr	x0, [x19, #64]
  416a3c:	cmp	x0, #0x1
  416a40:	b.eq	416a64 <ferror@plt+0x13494>  // b.none
  416a44:	cmp	x0, #0x2
  416a48:	b.eq	416a78 <ferror@plt+0x134a8>  // b.none
  416a4c:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416a50:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416a54:	add	x2, x2, #0xa71
  416a58:	add	x0, x0, #0xa3f
  416a5c:	mov	w1, #0x4a2                 	// #1186
  416a60:	bl	403600 <ferror@plt+0x30>
  416a64:	ldr	x0, [x19, #32]
  416a68:	str	x0, [x19, #24]
  416a6c:	ldr	x19, [sp, #16]
  416a70:	ldp	x29, x30, [sp], #32
  416a74:	ret
  416a78:	ldp	x0, x2, [x19, #32]
  416a7c:	mov	x3, #0x0                   	// #0
  416a80:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  416a84:	add	x1, x1, #0xd73
  416a88:	bl	4166a0 <ferror@plt+0x130d0>
  416a8c:	b	416a68 <ferror@plt+0x13498>
  416a90:	mov	x2, #0x59a                 	// #1434
  416a94:	stp	x2, xzr, [x1]
  416a98:	mov	x2, #0x1                   	// #1
  416a9c:	stp	x0, x0, [x1, #16]
  416aa0:	stp	x0, xzr, [x1, #32]
  416aa4:	stp	xzr, xzr, [x1, #48]
  416aa8:	stp	x2, x2, [x1, #64]
  416aac:	str	wzr, [x1, #80]
  416ab0:	ret
  416ab4:	stp	x29, x30, [sp, #-240]!
  416ab8:	mov	x29, sp
  416abc:	str	w0, [sp, #200]
  416ac0:	mov	w0, #0x58                  	// #88
  416ac4:	str	x1, [sp, #120]
  416ac8:	ldr	w1, [sp, #200]
  416acc:	stp	x19, x20, [sp, #16]
  416ad0:	stp	x21, x22, [sp, #32]
  416ad4:	mov	w22, w2
  416ad8:	umull	x0, w1, w0
  416adc:	stp	x23, x24, [sp, #48]
  416ae0:	stp	x25, x26, [sp, #64]
  416ae4:	stp	x27, x28, [sp, #80]
  416ae8:	stp	x3, x4, [sp, #168]
  416aec:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  416af0:	mov	x19, x0
  416af4:	mov	x0, #0x599                 	// #1433
  416af8:	stp	x0, xzr, [x19]
  416afc:	ldr	x0, [sp, #120]
  416b00:	stp	xzr, xzr, [x19, #40]
  416b04:	str	xzr, [x19, #56]
  416b08:	ldr	x1, [x0]
  416b0c:	mov	x0, #0x1                   	// #1
  416b10:	stp	x0, x0, [x19, #64]
  416b14:	str	w0, [sp, #128]
  416b18:	str	w0, [sp, #160]
  416b1c:	eor	x0, x22, #0x80000
  416b20:	stp	x1, x1, [x19, #16]
  416b24:	ubfx	w0, w0, #19, #1
  416b28:	str	x1, [x19, #32]
  416b2c:	str	wzr, [x19, #80]
  416b30:	str	w0, [sp, #204]
  416b34:	ldr	w1, [sp, #160]
  416b38:	mov	w0, #0x58                  	// #88
  416b3c:	umull	x0, w1, w0
  416b40:	ldr	w1, [sp, #200]
  416b44:	str	x0, [sp, #136]
  416b48:	ldr	w0, [sp, #128]
  416b4c:	cmp	w0, w1
  416b50:	b.cs	4175e4 <ferror@plt+0x14014>  // b.hs, b.nlast
  416b54:	ldr	x0, [sp, #128]
  416b58:	ubfiz	x26, x0, #3, #32
  416b5c:	ldr	x0, [sp, #120]
  416b60:	add	x20, x0, x26
  416b64:	ldr	x0, [x0, x26]
  416b68:	str	x0, [sp, #104]
  416b6c:	ldr	x0, [sp, #136]
  416b70:	add	x21, x19, x0
  416b74:	ldr	x0, [sp, #104]
  416b78:	ldrb	w0, [x0]
  416b7c:	cmp	w0, #0x2d
  416b80:	b.ne	416b90 <ferror@plt+0x135c0>  // b.any
  416b84:	ldr	x0, [sp, #104]
  416b88:	ldrb	w0, [x0, #1]
  416b8c:	cbnz	w0, 416bbc <ferror@plt+0x135ec>
  416b90:	ldr	x0, [sp, #104]
  416b94:	mov	x1, x21
  416b98:	mov	w23, #0x1                   	// #1
  416b9c:	bl	416a90 <ferror@plt+0x134c0>
  416ba0:	ldr	w0, [sp, #128]
  416ba4:	add	w0, w0, w23
  416ba8:	str	w0, [sp, #128]
  416bac:	ldr	w0, [sp, #160]
  416bb0:	add	w0, w0, #0x1
  416bb4:	str	w0, [sp, #160]
  416bb8:	b	416b34 <ferror@plt+0x13564>
  416bbc:	ldr	x0, [sp, #104]
  416bc0:	mov	w1, w22
  416bc4:	mov	x24, #0x1                   	// #1
  416bc8:	adrp	x23, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416bcc:	add	x0, x0, x24
  416bd0:	add	x23, x23, #0xd30
  416bd4:	str	x0, [sp, #144]
  416bd8:	str	x24, [sp, #224]
  416bdc:	bl	416114 <ferror@plt+0x12b44>
  416be0:	mov	x1, x0
  416be4:	str	wzr, [sp, #96]
  416be8:	str	wzr, [sp, #112]
  416bec:	str	wzr, [sp, #164]
  416bf0:	str	x24, [sp, #184]
  416bf4:	ldr	w0, [sp, #112]
  416bf8:	cmp	x1, #0x596
  416bfc:	cset	w5, ne  // ne = any
  416c00:	cmp	w0, #0x11
  416c04:	cset	w0, hi  // hi = pmore
  416c08:	orr	w5, w5, w0
  416c0c:	cbnz	w5, 416d60 <ferror@plt+0x13790>
  416c10:	ldp	x28, x25, [x23]
  416c14:	ldr	x0, [x23, #16]
  416c18:	str	x0, [sp, #152]
  416c1c:	ldrb	w0, [x23, #24]
  416c20:	str	w0, [sp, #192]
  416c24:	mov	x0, x28
  416c28:	bl	402d50 <strlen@plt>
  416c2c:	mov	x2, x0
  416c30:	cbz	x25, 416d4c <ferror@plt+0x1377c>
  416c34:	mov	x0, x25
  416c38:	str	x2, [sp, #96]
  416c3c:	bl	402d50 <strlen@plt>
  416c40:	mov	x24, x0
  416c44:	ldr	x2, [sp, #96]
  416c48:	mov	x3, x0
  416c4c:	ldr	x0, [sp, #152]
  416c50:	stp	x2, x3, [sp, #208]
  416c54:	bl	402d50 <strlen@plt>
  416c58:	mov	x27, x0
  416c5c:	cmp	x25, #0x0
  416c60:	mov	x1, x28
  416c64:	cset	w0, ne  // ne = any
  416c68:	str	w0, [sp, #96]
  416c6c:	ldrb	w0, [x23, #25]
  416c70:	ldr	x2, [sp, #208]
  416c74:	eor	x0, x0, #0x1
  416c78:	str	x0, [sp, #224]
  416c7c:	ldr	x0, [x20]
  416c80:	bl	402f80 <strncmp@plt>
  416c84:	cbnz	w0, 416d58 <ferror@plt+0x13788>
  416c88:	cbz	x25, 416ca8 <ferror@plt+0x136d8>
  416c8c:	ldr	x0, [x20, #8]
  416c90:	cbz	x0, 416d58 <ferror@plt+0x13788>
  416c94:	ldr	x3, [sp, #216]
  416c98:	mov	x1, x25
  416c9c:	mov	x2, x3
  416ca0:	bl	402f80 <strncmp@plt>
  416ca4:	cbnz	w0, 416d58 <ferror@plt+0x13788>
  416ca8:	ldrb	w3, [sp, #96]
  416cac:	ldr	w1, [sp, #192]
  416cb0:	lsl	x3, x3, #3
  416cb4:	ldr	x0, [x20, x3]
  416cb8:	cbz	w1, 416cc4 <ferror@plt+0x136f4>
  416cbc:	ldrb	w1, [x0, x24]
  416cc0:	cbz	w1, 416d58 <ferror@plt+0x13788>
  416cc4:	str	x3, [sp, #192]
  416cc8:	bl	402d50 <strlen@plt>
  416ccc:	mov	x28, x0
  416cd0:	sub	w0, w24, w27
  416cd4:	str	w0, [sp, #164]
  416cd8:	sub	w1, w24, w27
  416cdc:	ldr	x0, [sp, #184]
  416ce0:	sub	x0, x0, w1, sxtw
  416ce4:	add	x0, x0, x28
  416ce8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  416cec:	ldr	x1, [sp, #152]
  416cf0:	mov	x25, x0
  416cf4:	mov	x2, x27
  416cf8:	bl	402cd0 <memcpy@plt>
  416cfc:	ldp	x0, x3, [sp, #184]
  416d00:	ldr	x1, [x20, x3]
  416d04:	sub	x2, x0, x24
  416d08:	add	x2, x2, x28
  416d0c:	add	x0, x25, x27
  416d10:	add	x1, x1, x24
  416d14:	bl	402cd0 <memcpy@plt>
  416d18:	mov	w1, w22
  416d1c:	add	x0, x25, #0x1
  416d20:	bl	416114 <ferror@plt+0x12b44>
  416d24:	mov	x1, x0
  416d28:	mov	x0, x25
  416d2c:	str	x1, [sp, #152]
  416d30:	bl	4032a0 <free@plt>
  416d34:	ldr	x1, [sp, #152]
  416d38:	add	x23, x23, #0x20
  416d3c:	ldr	w0, [sp, #112]
  416d40:	add	w0, w0, #0x1
  416d44:	str	w0, [sp, #112]
  416d48:	b	416bf4 <ferror@plt+0x13624>
  416d4c:	mov	x24, x0
  416d50:	mov	x3, #0x0                   	// #0
  416d54:	b	416c4c <ferror@plt+0x1367c>
  416d58:	mov	x1, #0x596                 	// #1430
  416d5c:	b	416d38 <ferror@plt+0x13768>
  416d60:	cmp	x1, #0x596
  416d64:	b.ne	416dc8 <ferror@plt+0x137f8>  // b.any
  416d68:	ldr	x0, [sp, #120]
  416d6c:	mov	x24, x1
  416d70:	mov	x23, #0x1                   	// #1
  416d74:	mov	w27, #0x0                   	// #0
  416d78:	str	wzr, [sp, #96]
  416d7c:	str	xzr, [sp, #112]
  416d80:	str	x23, [sp, #224]
  416d84:	ldr	x28, [x0, x26]
  416d88:	mov	w26, #0x0                   	// #0
  416d8c:	ldr	x0, [sp, #136]
  416d90:	cmp	x24, #0x596
  416d94:	ldr	x2, [sp, #224]
  416d98:	str	x24, [x19, x0]
  416d9c:	ldr	x0, [sp, #112]
  416da0:	stp	x0, x28, [x21, #8]
  416da4:	str	x2, [x21, #72]
  416da8:	str	w27, [x21, #80]
  416dac:	b.ne	417418 <ferror@plt+0x13e48>  // b.any
  416db0:	cmp	w23, #0x1
  416db4:	b.eq	417418 <ferror@plt+0x13e48>  // b.none
  416db8:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416dbc:	mov	w1, #0x334                 	// #820
  416dc0:	add	x2, x2, #0xa81
  416dc4:	b	416f00 <ferror@plt+0x13930>
  416dc8:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  416dcc:	add	x2, x2, #0xfc8
  416dd0:	mov	x25, #0x60                  	// #96
  416dd4:	ldr	x0, [sp, #224]
  416dd8:	madd	x25, x1, x25, x2
  416ddc:	ldrb	w3, [x25, #64]
  416de0:	cbnz	x0, 416e08 <ferror@plt+0x13838>
  416de4:	tbz	w3, #7, 416e08 <ferror@plt+0x13838>
  416de8:	ldr	x0, [sp, #120]
  416dec:	mov	w27, #0x40                  	// #64
  416df0:	mov	w23, #0x1                   	// #1
  416df4:	mov	x24, #0x596                 	// #1430
  416df8:	str	xzr, [sp, #112]
  416dfc:	ldr	x28, [x0, x26]
  416e00:	mov	w26, #0x0                   	// #0
  416e04:	b	416d8c <ferror@plt+0x137bc>
  416e08:	mov	x0, #0x60                  	// #96
  416e0c:	madd	x0, x1, x0, x2
  416e10:	ldr	w0, [x0, #72]
  416e14:	cmp	w0, #0x4
  416e18:	b.ne	416e20 <ferror@plt+0x13850>  // b.any
  416e1c:	str	xzr, [sp, #224]
  416e20:	ldr	w0, [sp, #96]
  416e24:	and	w8, w3, #0x1
  416e28:	mov	w27, w8
  416e2c:	add	w23, w0, #0x1
  416e30:	mov	x0, #0x60                  	// #96
  416e34:	madd	x0, x1, x0, x2
  416e38:	ldr	w6, [x0, #60]
  416e3c:	ldr	x4, [x0, #24]
  416e40:	str	x4, [sp, #112]
  416e44:	and	w26, w6, #0x800000
  416e48:	tbz	w6, #23, 416f0c <ferror@plt+0x1393c>
  416e4c:	tbz	w3, #5, 416e54 <ferror@plt+0x13884>
  416e50:	tbnz	w22, #19, 416f14 <ferror@plt+0x13944>
  416e54:	mov	x0, #0x60                  	// #96
  416e58:	madd	x0, x1, x0, x2
  416e5c:	ldrb	w26, [x0, #64]
  416e60:	mov	w0, w5
  416e64:	ubfx	x26, x26, #1, #2
  416e68:	add	w26, w26, #0x1
  416e6c:	and	w10, w6, #0x400000
  416e70:	tbz	w6, #22, 416f20 <ferror@plt+0x13950>
  416e74:	mov	x7, #0x60                  	// #96
  416e78:	ldr	w9, [sp, #96]
  416e7c:	ldrsw	x6, [sp, #164]
  416e80:	madd	x7, x1, x7, x2
  416e84:	add	x6, x6, #0x1
  416e88:	ldrb	w8, [x7, #52]
  416e8c:	add	x6, x8, x6
  416e90:	ldr	x8, [x20, x9, lsl #3]
  416e94:	add	x28, x8, x6
  416e98:	ldrb	w6, [x8, x6]
  416e9c:	cbnz	w6, 416f78 <ferror@plt+0x139a8>
  416ea0:	ldrb	w6, [x7, #65]
  416ea4:	tbnz	w6, #0, 416f78 <ferror@plt+0x139a8>
  416ea8:	cbz	w0, 416f4c <ferror@plt+0x1397c>
  416eac:	ldr	x28, [x20, w23, uxtw #3]
  416eb0:	cbz	x28, 416f4c <ferror@plt+0x1397c>
  416eb4:	add	w23, w9, #0x2
  416eb8:	mov	x6, #0x60                  	// #96
  416ebc:	madd	x6, x1, x6, x2
  416ec0:	ldrh	w6, [x6, #48]
  416ec4:	cmp	w6, #0x595
  416ec8:	b.eq	4171d8 <ferror@plt+0x13c08>  // b.none
  416ecc:	tbz	w3, #3, 416ed4 <ferror@plt+0x13904>
  416ed0:	cbz	w0, 4171d8 <ferror@plt+0x13c08>
  416ed4:	and	x24, x6, #0xffff
  416ed8:	sub	x0, x24, #0x597
  416edc:	cmp	x0, #0x1
  416ee0:	b.hi	416f98 <ferror@plt+0x139c8>  // b.pmore
  416ee4:	mov	x0, #0x60                  	// #96
  416ee8:	madd	x1, x1, x0, x2
  416eec:	ldr	x0, [x1, #32]
  416ef0:	cbz	x0, 416f80 <ferror@plt+0x139b0>
  416ef4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416ef8:	add	x2, x2, #0xa81
  416efc:	mov	w1, #0x2a0                 	// #672
  416f00:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416f04:	add	x0, x0, #0xa3f
  416f08:	bl	403600 <ferror@plt+0x30>
  416f0c:	mov	w0, #0x0                   	// #0
  416f10:	b	416e6c <ferror@plt+0x1389c>
  416f14:	mov	w0, #0x0                   	// #0
  416f18:	mov	w26, #0x0                   	// #0
  416f1c:	b	416e6c <ferror@plt+0x1389c>
  416f20:	cbz	w0, 416f4c <ferror@plt+0x1397c>
  416f24:	ldr	x28, [x20, w23, uxtw #3]
  416f28:	mov	w6, #0x0                   	// #0
  416f2c:	add	w7, w23, w6
  416f30:	cmp	w6, w26
  416f34:	b.eq	416f44 <ferror@plt+0x13974>  // b.none
  416f38:	ldr	x9, [x20, w7, uxtw #3]
  416f3c:	cbnz	x9, 416f70 <ferror@plt+0x139a0>
  416f40:	orr	w27, w8, #0x2
  416f44:	mov	w23, w7
  416f48:	cbnz	x28, 416eb8 <ferror@plt+0x138e8>
  416f4c:	cmp	w10, #0x0
  416f50:	cset	w6, ne  // ne = any
  416f54:	orr	w0, w0, w6
  416f58:	ands	w0, w0, #0xff
  416f5c:	b.eq	416f68 <ferror@plt+0x13998>  // b.none
  416f60:	orr	w27, w27, #0x2
  416f64:	mov	w0, #0x0                   	// #0
  416f68:	mov	x28, #0x0                   	// #0
  416f6c:	b	416eb8 <ferror@plt+0x138e8>
  416f70:	add	w6, w6, #0x1
  416f74:	b	416f2c <ferror@plt+0x1395c>
  416f78:	mov	w0, #0x0                   	// #0
  416f7c:	b	416eb8 <ferror@plt+0x138e8>
  416f80:	ldr	x28, [x1, #40]
  416f84:	cbz	x28, 4171bc <ferror@plt+0x13bec>
  416f88:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416f8c:	mov	w1, #0x2a1                 	// #673
  416f90:	add	x2, x2, #0xa81
  416f94:	b	416f00 <ferror@plt+0x13930>
  416f98:	mov	x0, #0x60                  	// #96
  416f9c:	mov	w25, #0x60                  	// #96
  416fa0:	madd	x0, x24, x0, x2
  416fa4:	umaddl	x25, w6, w25, x2
  416fa8:	ldrh	w6, [x0, #48]
  416fac:	cmp	w6, #0x595
  416fb0:	b.eq	416fcc <ferror@plt+0x139fc>  // b.none
  416fb4:	ldrb	w0, [x0, #64]
  416fb8:	tbnz	w0, #3, 416fcc <ferror@plt+0x139fc>
  416fbc:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416fc0:	mov	w1, #0x2aa                 	// #682
  416fc4:	add	x2, x2, #0xa81
  416fc8:	b	416f00 <ferror@plt+0x13930>
  416fcc:	mov	x0, #0x60                  	// #96
  416fd0:	and	w3, w3, #0x10
  416fd4:	madd	x1, x1, x0, x2
  416fd8:	ldp	x0, x6, [x1, #32]
  416fdc:	cbz	x6, 41706c <ferror@plt+0x13a9c>
  416fe0:	cbnz	x0, 416ff4 <ferror@plt+0x13a24>
  416fe4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416fe8:	mov	w1, #0x2af                 	// #687
  416fec:	add	x2, x2, #0xa81
  416ff0:	b	416f00 <ferror@plt+0x13930>
  416ff4:	cbz	x28, 417008 <ferror@plt+0x13a38>
  416ff8:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  416ffc:	mov	w1, #0x2b0                 	// #688
  417000:	add	x2, x2, #0xa81
  417004:	b	416f00 <ferror@plt+0x13930>
  417008:	cbz	w3, 41701c <ferror@plt+0x13a4c>
  41700c:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417010:	mov	w1, #0x2b1                 	// #689
  417014:	add	x2, x2, #0xa81
  417018:	b	416f00 <ferror@plt+0x13930>
  41701c:	ldr	x1, [sp, #224]
  417020:	cmp	x1, #0x0
  417024:	mov	x1, #0x1                   	// #1
  417028:	csel	x28, x0, x6, ne  // ne = any
  41702c:	str	x1, [sp, #224]
  417030:	cbz	w3, 417044 <ferror@plt+0x13a74>
  417034:	ldr	x0, [sp, #224]
  417038:	cmp	x0, #0x0
  41703c:	cset	x0, eq  // eq = none
  417040:	str	x0, [sp, #224]
  417044:	ldr	x0, [sp, #224]
  417048:	cbnz	x0, 4170bc <ferror@plt+0x13aec>
  41704c:	mov	x0, #0x60                  	// #96
  417050:	madd	x0, x24, x0, x2
  417054:	ldrsb	w0, [x0, #64]
  417058:	tbz	w0, #31, 4170bc <ferror@plt+0x13aec>
  41705c:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417060:	mov	w1, #0x2c7                 	// #711
  417064:	add	x2, x2, #0xa81
  417068:	b	416f00 <ferror@plt+0x13930>
  41706c:	cbz	x0, 417030 <ferror@plt+0x13a60>
  417070:	ldr	x1, [sp, #224]
  417074:	cmp	x1, #0x1
  417078:	b.eq	41708c <ferror@plt+0x13abc>  // b.none
  41707c:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417080:	mov	w1, #0x2ba                 	// #698
  417084:	add	x2, x2, #0xa81
  417088:	b	416f00 <ferror@plt+0x13930>
  41708c:	cbz	x28, 4170a0 <ferror@plt+0x13ad0>
  417090:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417094:	mov	w1, #0x2bb                 	// #699
  417098:	add	x2, x2, #0xa81
  41709c:	b	416f00 <ferror@plt+0x13930>
  4170a0:	cbz	w3, 4170b4 <ferror@plt+0x13ae4>
  4170a4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4170a8:	mov	w1, #0x2bc                 	// #700
  4170ac:	add	x2, x2, #0xa81
  4170b0:	b	416f00 <ferror@plt+0x13930>
  4170b4:	mov	x28, x0
  4170b8:	b	417030 <ferror@plt+0x13a60>
  4170bc:	mov	x0, #0x60                  	// #96
  4170c0:	madd	x0, x24, x0, x2
  4170c4:	ldr	w1, [x0, #60]
  4170c8:	tbz	w1, #23, 417120 <ferror@plt+0x13b50>
  4170cc:	ldrb	w0, [x0, #64]
  4170d0:	tbz	w0, #5, 4170d8 <ferror@plt+0x13b08>
  4170d4:	ldr	w5, [sp, #204]
  4170d8:	cmp	w26, #0x1
  4170dc:	b.hi	4170f4 <ferror@plt+0x13b24>  // b.pmore
  4170e0:	mov	x0, #0x60                  	// #96
  4170e4:	madd	x0, x24, x0, x2
  4170e8:	ldrb	w0, [x0, #64]
  4170ec:	tst	w0, #0x6
  4170f0:	b.eq	417128 <ferror@plt+0x13b58>  // b.none
  4170f4:	mov	x0, #0x60                  	// #96
  4170f8:	madd	x0, x24, x0, x2
  4170fc:	ldrb	w0, [x0, #64]
  417100:	ubfx	x0, x0, #1, #2
  417104:	add	w0, w0, #0x1
  417108:	cmp	w26, w0
  41710c:	b.eq	417128 <ferror@plt+0x13b58>  // b.none
  417110:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417114:	mov	w1, #0x2d0                 	// #720
  417118:	add	x2, x2, #0xa81
  41711c:	b	416f00 <ferror@plt+0x13930>
  417120:	mov	w5, #0x0                   	// #0
  417124:	b	4170d8 <ferror@plt+0x13b08>
  417128:	tbnz	w27, #1, 417154 <ferror@plt+0x13b84>
  41712c:	tst	x1, #0x400000
  417130:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  417134:	b.eq	417190 <ferror@plt+0x13bc0>  // b.none
  417138:	mov	x0, #0x60                  	// #96
  41713c:	madd	x0, x24, x0, x2
  417140:	ldrb	w0, [x0, #65]
  417144:	tbz	w0, #0, 41717c <ferror@plt+0x13bac>
  417148:	cbnz	x28, 417154 <ferror@plt+0x13b84>
  41714c:	adrp	x28, 485000 <_obstack_memory_used@@Base+0x28c10>
  417150:	add	x28, x28, #0x122
  417154:	mov	x0, #0x60                  	// #96
  417158:	madd	x0, x24, x0, x2
  41715c:	ldr	x0, [x0, #24]
  417160:	cbz	x0, 4171a8 <ferror@plt+0x13bd8>
  417164:	ldr	x1, [sp, #112]
  417168:	cbz	x1, 4171a4 <ferror@plt+0x13bd4>
  41716c:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417170:	mov	w1, #0x2e2                 	// #738
  417174:	add	x2, x2, #0xa81
  417178:	b	416f00 <ferror@plt+0x13930>
  41717c:	cbnz	x28, 417154 <ferror@plt+0x13b84>
  417180:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417184:	mov	w1, #0x2d9                 	// #729
  417188:	add	x2, x2, #0xa81
  41718c:	b	416f00 <ferror@plt+0x13930>
  417190:	cbz	x28, 417154 <ferror@plt+0x13b84>
  417194:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417198:	mov	w1, #0x2dc                 	// #732
  41719c:	add	x2, x2, #0xa81
  4171a0:	b	416f00 <ferror@plt+0x13930>
  4171a4:	str	x0, [sp, #112]
  4171a8:	mov	x0, #0x60                  	// #96
  4171ac:	madd	x0, x24, x0, x2
  4171b0:	ldrb	w0, [x0, #64]
  4171b4:	tbz	w0, #0, 4171bc <ferror@plt+0x13bec>
  4171b8:	orr	w27, w27, #0x1
  4171bc:	ldr	w0, [x25, #60]
  4171c0:	mov	w1, w22
  4171c4:	bl	416060 <ferror@plt+0x12a90>
  4171c8:	tst	w0, #0xff
  4171cc:	b.ne	4171e0 <ferror@plt+0x13c10>  // b.any
  4171d0:	orr	w27, w27, #0x4
  4171d4:	b	41724c <ferror@plt+0x13c7c>
  4171d8:	mov	x24, x1
  4171dc:	b	4171bc <ferror@plt+0x13bec>
  4171e0:	ldr	x0, [x25]
  4171e4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4171e8:	add	x1, x1, #0xa97
  4171ec:	bl	403220 <strcmp@plt>
  4171f0:	cbnz	w0, 41724c <ferror@plt+0x13c7c>
  4171f4:	ldr	x0, [sp, #144]
  4171f8:	mov	w1, #0x2c                  	// #44
  4171fc:	bl	4032f0 <strchr@plt>
  417200:	cbnz	x0, 41724c <ferror@plt+0x13c7c>
  417204:	ldr	x0, [sp, #104]
  417208:	add	x0, x0, #0x7
  41720c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  417210:	mov	w1, #0x57                  	// #87
  417214:	strb	w1, [x0]
  417218:	mov	w1, w22
  41721c:	bl	416114 <ferror@plt+0x12b44>
  417220:	cmp	x0, #0x596
  417224:	b.eq	41724c <ferror@plt+0x13c7c>  // b.none
  417228:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  41722c:	add	x2, x2, #0xfc8
  417230:	mov	x1, #0x60                  	// #96
  417234:	madd	x0, x0, x1, x2
  417238:	mov	w1, w22
  41723c:	ldr	w0, [x0, #60]
  417240:	bl	416060 <ferror@plt+0x12a90>
  417244:	tst	w0, #0xff
  417248:	b.eq	4171d0 <ferror@plt+0x13c00>  // b.none
  41724c:	cbz	x28, 416d8c <ferror@plt+0x137bc>
  417250:	ldrb	w0, [x25, #65]
  417254:	tbz	w0, #3, 417314 <ferror@plt+0x13d44>
  417258:	mov	x0, x28
  41725c:	bl	402d50 <strlen@plt>
  417260:	add	x1, x0, #0x1
  417264:	mov	x5, x0
  417268:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41726c:	add	x0, x0, #0x1d8
  417270:	ldp	x3, x2, [x0, #24]
  417274:	sub	x2, x2, x3
  417278:	cmp	x1, x2
  41727c:	b.ls	41729c <ferror@plt+0x13ccc>  // b.plast
  417280:	str	x1, [sp, #104]
  417284:	str	x5, [sp, #144]
  417288:	bl	45c22c <_obstack_newchunk@@Base>
  41728c:	ldr	x1, [sp, #104]
  417290:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  417294:	ldr	x5, [sp, #144]
  417298:	add	x0, x0, #0x1d8
  41729c:	ldp	x3, x2, [x0, #16]
  4172a0:	add	x2, x2, x1
  4172a4:	cmp	x2, x3
  4172a8:	b.ne	4172b8 <ferror@plt+0x13ce8>  // b.any
  4172ac:	ldrb	w1, [x0, #80]
  4172b0:	orr	w1, w1, #0x2
  4172b4:	strb	w1, [x0, #80]
  4172b8:	ldr	x1, [x0, #48]
  4172bc:	ldr	x6, [x0, #32]
  4172c0:	add	x2, x2, x1
  4172c4:	bic	x1, x2, x1
  4172c8:	ldr	x2, [x0, #8]
  4172cc:	sub	x7, x1, x2
  4172d0:	sub	x2, x6, x2
  4172d4:	cmp	x7, x2
  4172d8:	csel	x1, x1, x6, ls  // ls = plast
  4172dc:	stp	x1, x1, [x0, #16]
  4172e0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4172e4:	add	x1, x1, #0x128
  4172e8:	mov	x0, #0x0                   	// #0
  4172ec:	cmp	x5, x0
  4172f0:	b.eq	417308 <ferror@plt+0x13d38>  // b.none
  4172f4:	ldrb	w2, [x28, x0]
  4172f8:	ldrb	w2, [x1, x2]
  4172fc:	strb	w2, [x3, x0]
  417300:	add	x0, x0, #0x1
  417304:	b	4172ec <ferror@plt+0x13d1c>
  417308:	strb	wzr, [x3, x5]
  41730c:	cbz	x3, 417410 <ferror@plt+0x13e40>
  417310:	mov	x28, x3
  417314:	ldrb	w2, [x25, #65]
  417318:	tst	w2, #0x6
  41731c:	b.eq	417370 <ferror@plt+0x13da0>  // b.none
  417320:	str	wzr, [sp, #232]
  417324:	ldrb	w0, [x28]
  417328:	cbz	w0, 41739c <ferror@plt+0x13dcc>
  41732c:	ubfx	x2, x2, #5, #1
  417330:	add	x1, sp, #0xe8
  417334:	mov	x0, x28
  417338:	bl	416324 <ferror@plt+0x12d54>
  41733c:	ldr	w1, [sp, #232]
  417340:	str	x0, [sp, #224]
  417344:	cbz	w1, 41734c <ferror@plt+0x13d7c>
  417348:	orr	w27, w27, #0x8
  41734c:	ldr	w1, [x25, #92]
  417350:	cmn	w1, #0x1
  417354:	b.eq	417370 <ferror@plt+0x13da0>  // b.none
  417358:	ldrsw	x2, [x25, #88]
  41735c:	cmp	x0, x2
  417360:	b.lt	41736c <ferror@plt+0x13d9c>  // b.tstop
  417364:	cmp	x0, w1, sxtw
  417368:	b.le	417370 <ferror@plt+0x13da0>
  41736c:	orr	w27, w27, #0x10
  417370:	ldr	w0, [x25, #72]
  417374:	cmp	w0, #0x6
  417378:	b.ne	416d8c <ferror@plt+0x137bc>  // b.any
  41737c:	ldr	x0, [sp, #224]
  417380:	ldrh	w25, [x25, #68]
  417384:	cmp	x0, #0x1
  417388:	b.eq	4173a4 <ferror@plt+0x13dd4>  // b.none
  41738c:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417390:	mov	w1, #0x31f                 	// #799
  417394:	add	x2, x2, #0xa81
  417398:	b	416f00 <ferror@plt+0x13930>
  41739c:	mov	x0, #0x0                   	// #0
  4173a0:	b	41733c <ferror@plt+0x13d6c>
  4173a4:	adrp	x0, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  4173a8:	add	x0, x0, #0x730
  4173ac:	mov	x1, #0x30                  	// #48
  4173b0:	mov	w3, w22
  4173b4:	add	x2, sp, #0xe0
  4173b8:	madd	x25, x25, x1, x0
  4173bc:	mov	x1, x28
  4173c0:	ldr	x0, [x25, #16]
  4173c4:	bl	416094 <ferror@plt+0x12ac4>
  4173c8:	tst	w0, #0xff
  4173cc:	b.eq	417408 <ferror@plt+0x13e38>  // b.none
  4173d0:	str	xzr, [sp, #232]
  4173d4:	add	x1, sp, #0xe8
  4173d8:	ldr	w2, [sp, #224]
  4173dc:	mov	w3, w22
  4173e0:	ldr	x0, [x25, #16]
  4173e4:	bl	41660c <ferror@plt+0x1303c>
  4173e8:	tst	w0, #0xff
  4173ec:	ldr	x1, [sp, #232]
  4173f0:	csel	x28, x28, x1, eq  // eq = none
  4173f4:	cbnz	x1, 416d8c <ferror@plt+0x137bc>
  4173f8:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4173fc:	mov	w1, #0x326                 	// #806
  417400:	add	x2, x2, #0xa81
  417404:	b	416f00 <ferror@plt+0x13930>
  417408:	orr	w27, w27, #0x20
  41740c:	b	416d8c <ferror@plt+0x137bc>
  417410:	mov	x28, #0x0                   	// #0
  417414:	b	416d8c <ferror@plt+0x137bc>
  417418:	sub	w0, w23, #0x1
  41741c:	str	w0, [sp, #104]
  417420:	cmp	w0, #0x3
  417424:	b.ls	417438 <ferror@plt+0x13e68>  // b.plast
  417428:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41742c:	mov	w1, #0x336                 	// #822
  417430:	add	x2, x2, #0xa81
  417434:	b	416f00 <ferror@plt+0x13930>
  417438:	add	x3, x21, #0x20
  41743c:	mov	w27, w23
  417440:	mov	x1, #0x0                   	// #0
  417444:	mov	x25, #0x0                   	// #0
  417448:	str	x27, [x21, #64]
  41744c:	cmp	w23, w1
  417450:	b.ls	417510 <ferror@plt+0x13f40>  // b.plast
  417454:	ldr	x0, [x20, x1, lsl #3]
  417458:	cmp	x24, #0x596
  41745c:	str	x1, [sp, #112]
  417460:	csel	x6, x0, xzr, eq  // eq = none
  417464:	str	x6, [x3, x1, lsl #3]
  417468:	stp	x3, x2, [sp, #136]
  41746c:	bl	402d50 <strlen@plt>
  417470:	cmp	x0, #0x0
  417474:	ldp	x3, x2, [sp, #136]
  417478:	mov	x5, #0x3                   	// #3
  41747c:	csinc	x0, x5, x0, eq  // eq = none
  417480:	ldr	x1, [sp, #112]
  417484:	add	x25, x25, x0
  417488:	add	x1, x1, #0x1
  41748c:	cmp	x1, #0x4
  417490:	b.ne	41744c <ferror@plt+0x13e7c>  // b.any
  417494:	sub	x0, x24, #0x596
  417498:	cmp	x0, #0x2
  41749c:	b.ls	41751c <ferror@plt+0x13f4c>  // b.plast
  4174a0:	mov	x3, x21
  4174a4:	mov	x1, x28
  4174a8:	mov	x0, x24
  4174ac:	bl	416838 <ferror@plt+0x13268>
  4174b0:	cmp	w26, #0x1
  4174b4:	b.ls	41751c <ferror@plt+0x13f4c>  // b.plast
  4174b8:	ldr	w0, [sp, #96]
  4174bc:	add	x6, x21, #0x28
  4174c0:	add	w1, w0, #0x1
  4174c4:	mov	x0, #0x0                   	// #0
  4174c8:	ubfiz	x1, x1, #3, #2
  4174cc:	add	x1, x20, x1
  4174d0:	ldr	x3, [x1, x0, lsl #3]
  4174d4:	mov	w2, w0
  4174d8:	add	w5, w0, #0x1
  4174dc:	cbz	x3, 4174f4 <ferror@plt+0x13f24>
  4174e0:	str	x3, [x6, x0, lsl #3]
  4174e4:	add	x0, x0, #0x1
  4174e8:	cmp	w26, w0
  4174ec:	b.hi	4174d0 <ferror@plt+0x13f00>  // b.pmore
  4174f0:	mov	w2, w5
  4174f4:	add	w2, w2, #0x1
  4174f8:	cmp	w23, w2
  4174fc:	b.eq	417518 <ferror@plt+0x13f48>  // b.none
  417500:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417504:	mov	w1, #0x357                 	// #855
  417508:	add	x2, x2, #0xa81
  41750c:	b	416f00 <ferror@plt+0x13930>
  417510:	str	xzr, [x3, x1, lsl #3]
  417514:	b	417488 <ferror@plt+0x13eb8>
  417518:	str	x27, [x21, #64]
  41751c:	adrp	x24, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  417520:	add	x24, x24, #0x1d8
  417524:	ldp	x1, x0, [x24, #24]
  417528:	sub	x0, x0, x1
  41752c:	cmp	x0, x25
  417530:	b.cs	417540 <ferror@plt+0x13f70>  // b.hs, b.nlast
  417534:	mov	x1, x25
  417538:	mov	x0, x24
  41753c:	bl	45c22c <_obstack_newchunk@@Base>
  417540:	ldp	x26, x1, [x24, #16]
  417544:	add	x1, x1, x25
  417548:	cmp	x1, x26
  41754c:	b.ne	41755c <ferror@plt+0x13f8c>  // b.any
  417550:	ldrb	w0, [x24, #80]
  417554:	orr	w0, w0, #0x2
  417558:	strb	w0, [x24, #80]
  41755c:	ldr	x0, [x24, #48]
  417560:	str	x26, [x21, #24]
  417564:	ldr	x2, [x24, #32]
  417568:	add	x1, x1, x0
  41756c:	bic	x0, x1, x0
  417570:	mov	w21, #0x2222                	// #8738
  417574:	ldr	x1, [x24, #8]
  417578:	sub	x3, x0, x1
  41757c:	sub	x1, x2, x1
  417580:	cmp	x3, x1
  417584:	csel	x0, x0, x2, ls  // ls = plast
  417588:	stp	x0, x0, [x24, #16]
  41758c:	mov	x24, #0x0                   	// #0
  417590:	ldr	x28, [x20, x24, lsl #3]
  417594:	mov	x0, x28
  417598:	bl	402d50 <strlen@plt>
  41759c:	mov	x27, x0
  4175a0:	cbnz	x0, 4175d0 <ferror@plt+0x14000>
  4175a4:	strh	w21, [x26], #2
  4175a8:	ldr	w0, [sp, #104]
  4175ac:	add	x26, x26, x27
  4175b0:	cmp	w0, w24
  4175b4:	add	x24, x24, #0x1
  4175b8:	cset	w0, ne  // ne = any
  4175bc:	cmp	w23, w24
  4175c0:	lsl	w0, w0, #5
  4175c4:	strb	w0, [x26], #1
  4175c8:	b.hi	417590 <ferror@plt+0x13fc0>  // b.pmore
  4175cc:	b	416ba0 <ferror@plt+0x135d0>
  4175d0:	mov	x2, x0
  4175d4:	mov	x1, x28
  4175d8:	mov	x0, x26
  4175dc:	bl	402cd0 <memcpy@plt>
  4175e0:	b	4175a8 <ferror@plt+0x13fd8>
  4175e4:	ldr	x0, [sp, #168]
  4175e8:	adrp	x26, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  4175ec:	ldr	w1, [sp, #160]
  4175f0:	adrp	x23, 49d000 <_obstack_memory_used@@Base+0x40c10>
  4175f4:	mov	x22, x19
  4175f8:	add	x26, x26, #0x7ac
  4175fc:	str	x19, [x0]
  417600:	add	x23, x23, #0xfc8
  417604:	ldr	x0, [sp, #176]
  417608:	mov	w24, #0x0                   	// #0
  41760c:	mov	w20, #0x0                   	// #0
  417610:	str	w1, [x0]
  417614:	ldr	x0, [sp, #136]
  417618:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  41761c:	mov	x21, x0
  417620:	mov	w0, #0x0                   	// #0
  417624:	ldr	w1, [sp, #160]
  417628:	cmp	w1, w0
  41762c:	b.eq	417758 <ferror@plt+0x14188>  // b.none
  417630:	ldr	w1, [x22, #80]
  417634:	add	w25, w0, #0x1
  417638:	tst	w1, #0xfffffffb
  41763c:	b.ne	41772c <ferror@plt+0x1415c>  // b.any
  417640:	ldr	x3, [x22]
  417644:	cmp	w3, #0x28b
  417648:	b.eq	417750 <ferror@plt+0x14180>  // b.none
  41764c:	sub	w0, w3, #0x596
  417650:	cmp	w0, #0x4
  417654:	b.ls	41772c <ferror@plt+0x1415c>  // b.plast
  417658:	ldr	w5, [x26]
  41765c:	cmp	w3, w5
  417660:	b.cc	417674 <ferror@plt+0x140a4>  // b.lo, b.ul, b.last
  417664:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417668:	mov	w1, #0x408                 	// #1032
  41766c:	add	x2, x2, #0xaa0
  417670:	b	416f00 <ferror@plt+0x13930>
  417674:	mov	w0, w3
  417678:	mov	x1, #0x60                  	// #96
  41767c:	madd	x0, x0, x1, x23
  417680:	ldr	w1, [x0, #56]
  417684:	tbnz	w1, #31, 41772c <ferror@plt+0x1415c>
  417688:	ldr	w2, [x0, #60]
  41768c:	tbz	w2, #22, 4176a0 <ferror@plt+0x140d0>
  417690:	ldrsb	w0, [x0, #64]
  417694:	tbz	w0, #31, 41772c <ferror@plt+0x1415c>
  417698:	cmp	w1, w3
  41769c:	b.ne	41772c <ferror@plt+0x1415c>  // b.any
  4176a0:	mov	w0, #0x58                  	// #88
  4176a4:	mov	w4, w25
  4176a8:	mov	x6, #0x60                  	// #96
  4176ac:	umaddl	x0, w25, w0, x19
  4176b0:	ldr	w1, [sp, #160]
  4176b4:	cmp	w1, w4
  4176b8:	b.eq	41772c <ferror@plt+0x1415c>  // b.none
  4176bc:	ldr	w1, [x0, #80]
  4176c0:	tst	w1, #0xfffffffb
  4176c4:	b.ne	417720 <ferror@plt+0x14150>  // b.any
  4176c8:	ldr	x2, [x0]
  4176cc:	cmp	w5, w2
  4176d0:	b.ls	417720 <ferror@plt+0x14150>  // b.plast
  4176d4:	mov	w1, w2
  4176d8:	madd	x1, x1, x6, x23
  4176dc:	ldr	w7, [x1, #56]
  4176e0:	tbnz	w7, #31, 417720 <ferror@plt+0x14150>
  4176e4:	ldr	w8, [x1, #60]
  4176e8:	tbz	w8, #22, 4176fc <ferror@plt+0x1412c>
  4176ec:	ldrb	w1, [x1, #64]
  4176f0:	tbz	w1, #7, 417720 <ferror@plt+0x14150>
  4176f4:	cmp	w7, w2
  4176f8:	b.ne	417720 <ferror@plt+0x14150>  // b.any
  4176fc:	mov	w7, w3
  417700:	mov	w1, w2
  417704:	sxtw	x2, w2
  417708:	madd	x2, x2, x6, x23
  41770c:	ldr	w2, [x2, #56]
  417710:	cmp	w7, w2
  417714:	b.eq	417744 <ferror@plt+0x14174>  // b.none
  417718:	cmp	w1, w2
  41771c:	b.ne	417704 <ferror@plt+0x14134>  // b.any
  417720:	add	w4, w4, #0x1
  417724:	add	x0, x0, #0x58
  417728:	b	4176b0 <ferror@plt+0x140e0>
  41772c:	mov	w0, #0x58                  	// #88
  417730:	mov	x1, x22
  417734:	mov	x2, #0x58                  	// #88
  417738:	umaddl	x0, w20, w0, x21
  41773c:	add	w20, w20, #0x1
  417740:	bl	402cd0 <memcpy@plt>
  417744:	mov	w0, w25
  417748:	add	x22, x22, #0x58
  41774c:	b	417624 <ferror@plt+0x14054>
  417750:	mov	w24, w0
  417754:	b	417744 <ferror@plt+0x14174>
  417758:	cbz	w24, 41778c <ferror@plt+0x141bc>
  41775c:	sub	w2, w20, #0x1
  417760:	mov	w23, #0x58                  	// #88
  417764:	add	x22, x21, #0x58
  417768:	add	x0, x21, #0xb0
  41776c:	mov	x1, x22
  417770:	add	w20, w20, #0x1
  417774:	umull	x2, w2, w23
  417778:	bl	402ce0 <memmove@plt>
  41777c:	umaddl	x1, w24, w23, x19
  417780:	mov	x0, x22
  417784:	mov	x2, #0x58                  	// #88
  417788:	bl	402cd0 <memcpy@plt>
  41778c:	mov	x0, x19
  417790:	bl	4032a0 <free@plt>
  417794:	mov	w1, #0x58                  	// #88
  417798:	mov	x0, x21
  41779c:	umull	x1, w20, w1
  4177a0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4177a4:	ldr	x1, [sp, #168]
  4177a8:	ldp	x21, x22, [sp, #32]
  4177ac:	ldp	x23, x24, [sp, #48]
  4177b0:	ldp	x25, x26, [sp, #64]
  4177b4:	ldp	x27, x28, [sp, #80]
  4177b8:	str	x0, [x1]
  4177bc:	ldr	x0, [sp, #176]
  4177c0:	str	w20, [x0]
  4177c4:	ldp	x19, x20, [sp, #16]
  4177c8:	ldp	x29, x30, [sp], #240
  4177cc:	ret
  4177d0:	stp	x29, x30, [sp, #-80]!
  4177d4:	mov	x29, sp
  4177d8:	stp	x19, x20, [sp, #16]
  4177dc:	mov	x20, x1
  4177e0:	mov	x19, #0x0                   	// #0
  4177e4:	stp	x21, x22, [sp, #32]
  4177e8:	mov	x21, x2
  4177ec:	mov	x22, #0x0                   	// #0
  4177f0:	stp	x23, x24, [sp, #48]
  4177f4:	mov	x23, x0
  4177f8:	ldr	x24, [x2]
  4177fc:	str	x25, [sp, #64]
  417800:	cbz	x24, 41782c <ferror@plt+0x1425c>
  417804:	ldr	w1, [x24, #4]
  417808:	add	x19, x19, #0x1
  41780c:	sub	w0, w19, #0x1
  417810:	cmp	w1, w0
  417814:	b.ls	41782c <ferror@plt+0x1425c>  // b.plast
  417818:	ldr	x0, [x24, x19, lsl #3]
  41781c:	bl	402d50 <strlen@plt>
  417820:	add	x0, x0, #0x1
  417824:	add	x22, x22, x0
  417828:	b	417800 <ferror@plt+0x14230>
  41782c:	mov	x0, x22
  417830:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  417834:	mov	x19, x0
  417838:	mov	w22, #0x0                   	// #0
  41783c:	mov	w25, #0x20                  	// #32
  417840:	str	x0, [x20]
  417844:	ldr	x1, [x21]
  417848:	cbz	x1, 417890 <ferror@plt+0x142c0>
  41784c:	ldr	w0, [x1, #4]
  417850:	cmp	w22, w0
  417854:	b.cs	417890 <ferror@plt+0x142c0>  // b.hs, b.nlast
  417858:	add	x1, x1, w22, uxtw #3
  41785c:	add	w22, w22, #0x1
  417860:	ldr	x24, [x1, #8]
  417864:	mov	x0, x24
  417868:	bl	402d50 <strlen@plt>
  41786c:	mov	x20, x0
  417870:	mov	x2, x0
  417874:	mov	x1, x24
  417878:	mov	x0, x19
  41787c:	bl	402cd0 <memcpy@plt>
  417880:	strb	w25, [x19, x20]
  417884:	add	x20, x20, #0x1
  417888:	add	x19, x19, x20
  41788c:	b	417844 <ferror@plt+0x14274>
  417890:	sturb	wzr, [x19, #-1]
  417894:	mov	x1, x21
  417898:	mov	x0, x23
  41789c:	ldp	x19, x20, [sp, #16]
  4178a0:	ldp	x21, x22, [sp, #32]
  4178a4:	ldp	x23, x24, [sp, #48]
  4178a8:	ldr	x25, [sp, #64]
  4178ac:	ldp	x29, x30, [sp], #80
  4178b0:	b	4200ec <ferror@plt+0x1cb1c>
  4178b4:	stp	x29, x30, [sp, #-112]!
  4178b8:	mov	x29, sp
  4178bc:	stp	x23, x24, [sp, #48]
  4178c0:	adrp	x23, 49d000 <_obstack_memory_used@@Base+0x40c10>
  4178c4:	add	x23, x23, #0xfc8
  4178c8:	stp	x25, x26, [sp, #64]
  4178cc:	sxtw	x26, w2
  4178d0:	mov	w2, w5
  4178d4:	str	x4, [sp, #96]
  4178d8:	mov	x4, #0x60                  	// #96
  4178dc:	stp	x19, x20, [sp, #16]
  4178e0:	mov	w5, #0xffff                	// #65535
  4178e4:	madd	x4, x26, x4, x23
  4178e8:	stp	x21, x22, [sp, #32]
  4178ec:	stp	x27, x28, [sp, #80]
  4178f0:	ldrh	w4, [x4, #66]
  4178f4:	cmp	w4, w5
  4178f8:	b.eq	4179d4 <ferror@plt+0x14404>  // b.none
  4178fc:	mov	x20, x0
  417900:	and	x21, x4, #0xffff
  417904:	adds	x24, x0, w4, uxth
  417908:	b.eq	4179d4 <ferror@plt+0x14404>  // b.none
  41790c:	cmp	w2, #0x0
  417910:	mov	x19, x1
  417914:	mov	x22, x3
  417918:	mov	x0, x7
  41791c:	ccmp	x7, #0x0, #0x4, ne  // ne = any
  417920:	b.eq	417930 <ferror@plt+0x14360>  // b.none
  417924:	mov	x1, x26
  417928:	mov	w3, w6
  41792c:	bl	42104c <ferror@plt+0x1da7c>
  417930:	cbz	x19, 417954 <ferror@plt+0x14384>
  417934:	mov	x0, #0x60                  	// #96
  417938:	madd	x0, x26, x0, x23
  41793c:	ldrh	w2, [x0, #66]
  417940:	ldrh	w1, [x0, #66]
  417944:	mov	w0, #0xffff                	// #65535
  417948:	cmp	w2, w0
  41794c:	add	x19, x19, x1
  417950:	csel	x19, x19, xzr, ne  // ne = any
  417954:	mov	x0, #0x60                  	// #96
  417958:	madd	x0, x26, x0, x23
  41795c:	ldr	w2, [x0, #72]
  417960:	cmp	w2, #0x7
  417964:	b.hi	4179d4 <ferror@plt+0x14404>  // b.pmore
  417968:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41796c:	add	x0, x0, #0xd18
  417970:	ldrb	w0, [x0, w2, uxtw]
  417974:	adr	x1, 417980 <ferror@plt+0x143b0>
  417978:	add	x0, x1, w0, sxtb #2
  41797c:	br	x0
  417980:	mov	x0, #0x60                  	// #96
  417984:	madd	x23, x26, x0, x23
  417988:	ldrb	w0, [x23, #65]
  41798c:	tbz	w0, #2, 4179a4 <ferror@plt+0x143d4>
  417990:	str	x22, [x20, x21]
  417994:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  417998:	mov	x0, #0x1                   	// #1
  41799c:	str	x0, [x19]
  4179a0:	b	4179d4 <ferror@plt+0x14404>
  4179a4:	str	w22, [x20, x21]
  4179a8:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  4179ac:	mov	w0, #0x1                   	// #1
  4179b0:	str	w0, [x19]
  4179b4:	b	4179d4 <ferror@plt+0x14404>
  4179b8:	mov	x0, #0x60                  	// #96
  4179bc:	madd	x23, x26, x0, x23
  4179c0:	ldrb	w0, [x23, #65]
  4179c4:	tbz	w0, #2, 4179f0 <ferror@plt+0x14420>
  4179c8:	str	x22, [x20, x21]
  4179cc:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  4179d0:	str	x22, [x19]
  4179d4:	ldp	x19, x20, [sp, #16]
  4179d8:	ldp	x21, x22, [sp, #32]
  4179dc:	ldp	x23, x24, [sp, #48]
  4179e0:	ldp	x25, x26, [sp, #64]
  4179e4:	ldp	x27, x28, [sp, #80]
  4179e8:	ldp	x29, x30, [sp], #112
  4179ec:	ret
  4179f0:	str	w22, [x20, x21]
  4179f4:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  4179f8:	str	w22, [x19]
  4179fc:	b	4179d4 <ferror@plt+0x14404>
  417a00:	mov	x0, #0x60                  	// #96
  417a04:	madd	x23, x26, x0, x23
  417a08:	ldrb	w1, [x23, #65]
  417a0c:	ldr	x0, [x23, #80]
  417a10:	tbz	w1, #2, 417a28 <ferror@plt+0x14458>
  417a14:	cbnz	x22, 417a20 <ferror@plt+0x14450>
  417a18:	cmp	x0, #0x0
  417a1c:	cset	x0, eq  // eq = none
  417a20:	str	x0, [x20, x21]
  417a24:	b	417994 <ferror@plt+0x143c4>
  417a28:	cbnz	x22, 417a34 <ferror@plt+0x14464>
  417a2c:	cmp	x0, #0x0
  417a30:	cset	w0, eq  // eq = none
  417a34:	str	w0, [x20, x21]
  417a38:	b	4179a8 <ferror@plt+0x143d8>
  417a3c:	mov	x0, #0x60                  	// #96
  417a40:	cmp	x22, #0x0
  417a44:	cset	w3, ne  // ne = any
  417a48:	cmp	w2, #0x3
  417a4c:	madd	x0, x26, x0, x23
  417a50:	cset	w2, eq  // eq = none
  417a54:	cmp	w3, w2
  417a58:	ldrb	w1, [x0, #65]
  417a5c:	ldr	x0, [x0, #80]
  417a60:	and	w1, w1, #0x4
  417a64:	b.ne	417aac <ferror@plt+0x144dc>  // b.any
  417a68:	cbz	w1, 417a9c <ferror@plt+0x144cc>
  417a6c:	ldr	x1, [x20, x21]
  417a70:	orr	x0, x1, x0
  417a74:	str	x0, [x20, x21]
  417a78:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  417a7c:	mov	x0, #0x60                  	// #96
  417a80:	madd	x23, x26, x0, x23
  417a84:	ldrb	w0, [x23, #65]
  417a88:	ldr	x1, [x23, #80]
  417a8c:	tbz	w0, #2, 417ac8 <ferror@plt+0x144f8>
  417a90:	ldr	x0, [x19]
  417a94:	orr	x0, x0, x1
  417a98:	b	41799c <ferror@plt+0x143cc>
  417a9c:	ldr	w1, [x20, x21]
  417aa0:	orr	w0, w1, w0
  417aa4:	str	w0, [x20, x21]
  417aa8:	b	417a78 <ferror@plt+0x144a8>
  417aac:	cbz	w1, 417abc <ferror@plt+0x144ec>
  417ab0:	ldr	x1, [x20, x21]
  417ab4:	bic	x0, x1, x0
  417ab8:	b	417a74 <ferror@plt+0x144a4>
  417abc:	ldr	w1, [x20, x21]
  417ac0:	bic	w0, w1, w0
  417ac4:	b	417aa4 <ferror@plt+0x144d4>
  417ac8:	ldr	w0, [x19]
  417acc:	orr	w0, w0, w1
  417ad0:	b	4179b0 <ferror@plt+0x143e0>
  417ad4:	ldr	x0, [sp, #96]
  417ad8:	str	x0, [x20, x21]
  417adc:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  417ae0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  417ae4:	add	x0, x0, #0x122
  417ae8:	b	41799c <ferror@plt+0x143cc>
  417aec:	mov	x0, #0x60                  	// #96
  417af0:	mov	x1, #0x30                  	// #48
  417af4:	madd	x23, x26, x0, x23
  417af8:	adrp	x0, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  417afc:	add	x0, x0, #0x730
  417b00:	ldrh	w20, [x23, #68]
  417b04:	madd	x20, x20, x1, x0
  417b08:	mov	w1, w22
  417b0c:	mov	x0, x24
  417b10:	ldr	x2, [x20, #32]
  417b14:	blr	x2
  417b18:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  417b1c:	mov	x0, x19
  417b20:	mov	w1, #0x1                   	// #1
  417b24:	ldr	x2, [x20, #32]
  417b28:	ldp	x19, x20, [sp, #16]
  417b2c:	mov	x16, x2
  417b30:	ldp	x21, x22, [sp, #32]
  417b34:	ldp	x23, x24, [sp, #48]
  417b38:	ldp	x25, x26, [sp, #64]
  417b3c:	ldp	x27, x28, [sp, #80]
  417b40:	ldp	x29, x30, [sp], #112
  417b44:	br	x16
  417b48:	ldr	x24, [x20, x21]
  417b4c:	cbnz	x24, 417b60 <ferror@plt+0x14590>
  417b50:	mov	x1, #0x8                   	// #8
  417b54:	mov	x0, #0x1                   	// #1
  417b58:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  417b5c:	mov	x24, x0
  417b60:	ldr	x28, [x24]
  417b64:	cbz	x28, 417c10 <ferror@plt+0x14640>
  417b68:	ldp	w0, w27, [x28]
  417b6c:	ubfx	x0, x0, #0, #31
  417b70:	cmp	w0, w27
  417b74:	b.ne	417c3c <ferror@plt+0x1466c>  // b.any
  417b78:	ldrsb	w0, [x28, #3]
  417b7c:	tbz	w0, #31, 417c10 <ferror@plt+0x14640>
  417b80:	add	w2, w27, #0x1
  417b84:	mov	w25, #0x1                   	// #1
  417b88:	str	xzr, [x24]
  417b8c:	ldr	x0, [x24]
  417b90:	cbz	x0, 417c20 <ferror@plt+0x14650>
  417b94:	ldr	w1, [x0, #4]
  417b98:	ldr	w0, [x0]
  417b9c:	add	w1, w2, w1
  417ba0:	and	w0, w0, #0x7fffffff
  417ba4:	bl	41e438 <ferror@plt+0x1ae68>
  417ba8:	mov	w23, w0
  417bac:	mov	x0, #0x8                   	// #8
  417bb0:	mov	w1, #0x18                  	// #24
  417bb4:	umaddl	x1, w23, w1, x0
  417bb8:	ldr	x0, [x24]
  417bbc:	cbz	x0, 417c30 <ferror@plt+0x14660>
  417bc0:	ldr	w4, [x0, #4]
  417bc4:	str	w4, [sp, #108]
  417bc8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  417bcc:	ldr	w4, [sp, #108]
  417bd0:	and	w2, w23, #0x7fffffff
  417bd4:	str	x0, [x24]
  417bd8:	stp	w2, w4, [x0]
  417bdc:	cbz	w25, 417c3c <ferror@plt+0x1466c>
  417be0:	mov	w4, w27
  417be4:	mov	x1, #0x8                   	// #8
  417be8:	cbz	w4, 417c38 <ferror@plt+0x14668>
  417bec:	add	x6, x28, x1
  417bf0:	add	x5, x0, x1
  417bf4:	sub	w4, w4, #0x1
  417bf8:	add	x1, x1, #0x18
  417bfc:	ldp	x2, x3, [x6]
  417c00:	stp	x2, x3, [x5]
  417c04:	ldr	x2, [x6, #16]
  417c08:	str	x2, [x5, #16]
  417c0c:	b	417be8 <ferror@plt+0x14618>
  417c10:	mov	w25, #0x0                   	// #0
  417c14:	mov	w27, #0x0                   	// #0
  417c18:	mov	w2, #0x1                   	// #1
  417c1c:	b	417b8c <ferror@plt+0x145bc>
  417c20:	cmp	w2, #0x4
  417c24:	mov	w23, #0x4                   	// #4
  417c28:	csel	w23, w2, w23, cs  // cs = hs, nlast
  417c2c:	b	417bac <ferror@plt+0x145dc>
  417c30:	mov	w4, #0x0                   	// #0
  417c34:	b	417bc4 <ferror@plt+0x145f4>
  417c38:	str	w27, [x0, #4]
  417c3c:	ldr	x1, [x24]
  417c40:	mov	w3, #0x18                  	// #24
  417c44:	ldr	w0, [x1, #4]
  417c48:	add	w2, w0, #0x1
  417c4c:	str	w2, [x1, #4]
  417c50:	mov	x2, #0x8                   	// #8
  417c54:	umaddl	x0, w0, w3, x2
  417c58:	add	x2, x1, x0
  417c5c:	str	x26, [x1, x0]
  417c60:	ldr	x0, [sp, #96]
  417c64:	str	x0, [x2, #8]
  417c68:	str	w22, [x2, #16]
  417c6c:	str	x24, [x20, x21]
  417c70:	cbz	x19, 4179d4 <ferror@plt+0x14404>
  417c74:	str	x24, [x19]
  417c78:	b	4179d4 <ferror@plt+0x14404>
  417c7c:	sub	sp, sp, #0x80
  417c80:	adrp	x8, 49d000 <_obstack_memory_used@@Base+0x40c10>
  417c84:	add	x8, x8, #0xfc8
  417c88:	stp	x29, x30, [sp, #16]
  417c8c:	add	x29, sp, #0x10
  417c90:	stp	x21, x22, [sp, #48]
  417c94:	mov	x22, x0
  417c98:	ldr	x21, [x2]
  417c9c:	stp	x23, x24, [sp, #64]
  417ca0:	mov	x23, x1
  417ca4:	stp	x19, x20, [sp, #32]
  417ca8:	mov	x19, x2
  417cac:	sxtw	x1, w21
  417cb0:	mov	x2, #0x60                  	// #96
  417cb4:	stp	x25, x26, [sp, #80]
  417cb8:	mov	w24, w3
  417cbc:	madd	x1, x1, x2, x8
  417cc0:	stp	x27, x28, [sp, #96]
  417cc4:	mov	w2, #0xffff                	// #65535
  417cc8:	mov	w26, w4
  417ccc:	mov	w27, w5
  417cd0:	mov	x20, x6
  417cd4:	ldrh	w1, [x1, #66]
  417cd8:	ldr	x25, [sp, #128]
  417cdc:	cmp	w1, w2
  417ce0:	b.eq	417d1c <ferror@plt+0x1474c>  // b.none
  417ce4:	add	x1, x0, w1, uxth
  417ce8:	cbz	x1, 417d1c <ferror@plt+0x1474c>
  417cec:	and	w7, w7, #0xff
  417cf0:	mov	w6, w5
  417cf4:	mov	w5, w4
  417cf8:	cmp	w7, #0x0
  417cfc:	ldr	x4, [x19, #16]
  417d00:	mov	x7, x25
  417d04:	ldr	x3, [x19, #72]
  417d08:	mov	w2, w21
  417d0c:	csel	x1, x23, xzr, eq  // eq = none
  417d10:	bl	4178b4 <ferror@plt+0x142e4>
  417d14:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x40c10>
  417d18:	add	x8, x0, #0xfc8
  417d1c:	mov	x0, #0x60                  	// #96
  417d20:	add	x28, x20, #0x20
  417d24:	mov	x9, #0x0                   	// #0
  417d28:	madd	x21, x21, x0, x8
  417d2c:	ldr	x0, [x20, #24]
  417d30:	cmp	x0, x9
  417d34:	b.ls	417db4 <ferror@plt+0x147e4>  // b.plast
  417d38:	ldr	w1, [x21, #60]
  417d3c:	ldr	w0, [x28, #8]
  417d40:	tst	w1, w0
  417d44:	b.ne	417d54 <ferror@plt+0x14784>  // b.any
  417d48:	add	x9, x9, #0x1
  417d4c:	add	x28, x28, #0x10
  417d50:	b	417d2c <ferror@plt+0x1475c>
  417d54:	ldr	x0, [x20, #16]
  417d58:	str	x0, [sp]
  417d5c:	mov	x7, x25
  417d60:	mov	x6, x20
  417d64:	ldr	x8, [x28]
  417d68:	mov	w5, w27
  417d6c:	mov	w4, w26
  417d70:	mov	w3, w24
  417d74:	mov	x2, x19
  417d78:	mov	x1, x23
  417d7c:	mov	x0, x22
  417d80:	str	x9, [sp, #120]
  417d84:	blr	x8
  417d88:	ands	w0, w0, #0xff
  417d8c:	ldr	x9, [sp, #120]
  417d90:	b.ne	417d48 <ferror@plt+0x14778>  // b.any
  417d94:	ldp	x29, x30, [sp, #16]
  417d98:	ldp	x19, x20, [sp, #32]
  417d9c:	ldp	x21, x22, [sp, #48]
  417da0:	ldp	x23, x24, [sp, #64]
  417da4:	ldp	x25, x26, [sp, #80]
  417da8:	ldp	x27, x28, [sp, #96]
  417dac:	add	sp, sp, #0x80
  417db0:	ret
  417db4:	mov	w0, #0x1                   	// #1
  417db8:	b	417d94 <ferror@plt+0x147c4>
  417dbc:	sub	sp, sp, #0xb0
  417dc0:	stp	x29, x30, [sp, #16]
  417dc4:	add	x29, sp, #0x10
  417dc8:	stp	x19, x20, [sp, #32]
  417dcc:	mov	w19, w5
  417dd0:	mov	x20, x0
  417dd4:	mov	x0, x2
  417dd8:	mov	x2, x4
  417ddc:	add	x4, sp, #0x58
  417de0:	stp	x21, x22, [sp, #48]
  417de4:	mov	w22, w6
  417de8:	mov	x21, x1
  417dec:	mov	x1, x3
  417df0:	mov	w3, w5
  417df4:	str	x23, [sp, #64]
  417df8:	mov	w23, w7
  417dfc:	bl	4169d8 <ferror@plt+0x13408>
  417e00:	ldrb	w7, [sp, #184]
  417e04:	mov	w5, w23
  417e08:	ldr	x6, [sp, #176]
  417e0c:	mov	w4, w22
  417e10:	ldr	x0, [sp, #192]
  417e14:	str	x0, [sp]
  417e18:	mov	w3, w19
  417e1c:	add	x2, sp, #0x58
  417e20:	mov	x1, x21
  417e24:	mov	x0, x20
  417e28:	bl	417c7c <ferror@plt+0x146ac>
  417e2c:	ldp	x29, x30, [sp, #16]
  417e30:	ldp	x19, x20, [sp, #32]
  417e34:	ldp	x21, x22, [sp, #48]
  417e38:	ldr	x23, [sp, #64]
  417e3c:	add	sp, sp, #0xb0
  417e40:	ret
  417e44:	sxtw	x0, w0
  417e48:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  417e4c:	add	x2, x2, #0xfc8
  417e50:	mov	x3, #0x60                  	// #96
  417e54:	madd	x2, x0, x3, x2
  417e58:	ldrh	w3, [x2, #66]
  417e5c:	ldrh	w0, [x2, #66]
  417e60:	add	x0, x1, x0
  417e64:	mov	w1, #0xffff                	// #65535
  417e68:	cmp	w3, w1
  417e6c:	csel	x0, x0, xzr, ne  // ne = any
  417e70:	ret
  417e74:	sxtw	x0, w0
  417e78:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x40c10>
  417e7c:	add	x3, x3, #0xfc8
  417e80:	mov	x4, #0x60                  	// #96
  417e84:	mov	w2, #0xffff                	// #65535
  417e88:	madd	x6, x0, x4, x3
  417e8c:	ldrh	w5, [x6, #66]
  417e90:	cmp	w5, w2
  417e94:	b.eq	417f7c <ferror@plt+0x149ac>  // b.none
  417e98:	and	x2, x5, #0xffff
  417e9c:	add	x5, x1, w5, uxth
  417ea0:	cbz	x5, 417f7c <ferror@plt+0x149ac>
  417ea4:	ldr	w6, [x6, #72]
  417ea8:	cmp	w6, #0x4
  417eac:	b.hi	417f7c <ferror@plt+0x149ac>  // b.pmore
  417eb0:	adrp	x5, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417eb4:	madd	x0, x0, x4, x3
  417eb8:	add	x5, x5, #0xd20
  417ebc:	ldrb	w5, [x5, w6, uxtw]
  417ec0:	adr	x6, 417ecc <ferror@plt+0x148fc>
  417ec4:	add	x5, x6, w5, sxtb #2
  417ec8:	br	x5
  417ecc:	ldrb	w0, [x0, #65]
  417ed0:	tbz	w0, #2, 417ee4 <ferror@plt+0x14914>
  417ed4:	ldr	x0, [x1, x2]
  417ed8:	cmp	x0, #0x0
  417edc:	cset	w0, ne  // ne = any
  417ee0:	b	417f08 <ferror@plt+0x14938>
  417ee4:	ldr	w0, [x1, x2]
  417ee8:	cmp	w0, #0x0
  417eec:	b	417edc <ferror@plt+0x1490c>
  417ef0:	ldr	x3, [x0, #80]
  417ef4:	ldrb	w0, [x0, #65]
  417ef8:	tbz	w0, #2, 417f0c <ferror@plt+0x1493c>
  417efc:	ldr	x0, [x1, x2]
  417f00:	cmp	x0, x3
  417f04:	cset	w0, eq  // eq = none
  417f08:	ret
  417f0c:	ldrsw	x0, [x1, x2]
  417f10:	b	417f00 <ferror@plt+0x14930>
  417f14:	ldr	x3, [x0, #80]
  417f18:	ldrb	w0, [x0, #65]
  417f1c:	tbz	w0, #2, 417f30 <ferror@plt+0x14960>
  417f20:	ldr	x0, [x1, x2]
  417f24:	tst	x0, x3
  417f28:	cset	w0, eq  // eq = none
  417f2c:	b	417f08 <ferror@plt+0x14938>
  417f30:	ldrsw	x0, [x1, x2]
  417f34:	b	417f24 <ferror@plt+0x14954>
  417f38:	ldr	x3, [x0, #80]
  417f3c:	ldrb	w0, [x0, #65]
  417f40:	tbz	w0, #2, 417f54 <ferror@plt+0x14984>
  417f44:	ldr	x0, [x1, x2]
  417f48:	tst	x0, x3
  417f4c:	cset	w0, ne  // ne = any
  417f50:	b	417f08 <ferror@plt+0x14938>
  417f54:	ldrsw	x0, [x1, x2]
  417f58:	b	417f48 <ferror@plt+0x14978>
  417f5c:	ldrb	w0, [x0, #65]
  417f60:	tbz	w0, #2, 417f70 <ferror@plt+0x149a0>
  417f64:	ldr	x0, [x1, x2]
  417f68:	cmn	x0, #0x1
  417f6c:	b	417edc <ferror@plt+0x1490c>
  417f70:	ldr	w0, [x1, x2]
  417f74:	cmn	w0, #0x1
  417f78:	b	417edc <ferror@plt+0x1490c>
  417f7c:	mov	w0, #0xffffffff            	// #-1
  417f80:	b	417f08 <ferror@plt+0x14938>
  417f84:	stp	x29, x30, [sp, #-32]!
  417f88:	mov	x4, x0
  417f8c:	mov	w0, w1
  417f90:	mov	x29, sp
  417f94:	str	x19, [sp, #16]
  417f98:	mov	x19, x2
  417f9c:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  417fa0:	add	x5, x2, #0xfc8
  417fa4:	sxtw	x2, w1
  417fa8:	mov	x1, #0x60                  	// #96
  417fac:	mov	w6, #0xffff                	// #65535
  417fb0:	madd	x1, x2, x1, x5
  417fb4:	ldrh	w3, [x1, #66]
  417fb8:	cmp	w3, w6
  417fbc:	b.eq	41808c <ferror@plt+0x14abc>  // b.none
  417fc0:	and	x7, x3, #0xffff
  417fc4:	adds	x3, x4, w3, uxth
  417fc8:	b.eq	41808c <ferror@plt+0x14abc>  // b.none
  417fcc:	ldr	w6, [x1, #72]
  417fd0:	cmp	w6, #0x7
  417fd4:	b.hi	418014 <ferror@plt+0x14a44>  // b.pmore
  417fd8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  417fdc:	add	x1, x1, #0xd28
  417fe0:	ldrb	w1, [x1, w6, uxtw]
  417fe4:	adr	x6, 417ff0 <ferror@plt+0x14a20>
  417fe8:	add	x1, x6, w1, sxtb #2
  417fec:	br	x1
  417ff0:	mov	x0, #0x60                  	// #96
  417ff4:	str	x3, [x19]
  417ff8:	mov	x1, #0x4                   	// #4
  417ffc:	madd	x2, x2, x0, x5
  418000:	ldrb	w0, [x2, #65]
  418004:	tst	x0, #0x4
  418008:	mov	x0, #0x8                   	// #8
  41800c:	csel	x0, x0, x1, ne  // ne = any
  418010:	str	x0, [x19, #8]
  418014:	mov	w0, #0x1                   	// #1
  418018:	b	418034 <ferror@plt+0x14a64>
  41801c:	mov	x1, x4
  418020:	bl	417e74 <ferror@plt+0x148a4>
  418024:	mov	x1, x19
  418028:	strb	w0, [x1, #16]!
  41802c:	mov	x0, #0x1                   	// #1
  418030:	stp	x1, x0, [x19]
  418034:	ldr	x19, [sp, #16]
  418038:	ldp	x29, x30, [sp], #32
  41803c:	ret
  418040:	ldr	x1, [x4, x7]
  418044:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  418048:	add	x0, x0, #0x122
  41804c:	cmp	x1, #0x0
  418050:	csel	x0, x0, x1, eq  // eq = none
  418054:	str	x0, [x19]
  418058:	bl	402d50 <strlen@plt>
  41805c:	add	x0, x0, #0x1
  418060:	b	418010 <ferror@plt+0x14a40>
  418064:	mov	x0, #0x60                  	// #96
  418068:	adrp	x1, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  41806c:	add	x1, x1, #0x730
  418070:	madd	x2, x2, x0, x5
  418074:	ldrh	w0, [x2, #68]
  418078:	mov	x2, #0x30                  	// #48
  41807c:	madd	x0, x0, x2, x1
  418080:	ldr	x0, [x0, #24]
  418084:	str	x3, [x19]
  418088:	b	418010 <ferror@plt+0x14a40>
  41808c:	mov	w0, #0x0                   	// #0
  418090:	b	418034 <ferror@plt+0x14a64>
  418094:	stp	x29, x30, [sp, #-96]!
  418098:	mov	x29, sp
  41809c:	stp	x19, x20, [sp, #16]
  4180a0:	stp	x21, x22, [sp, #32]
  4180a4:	stp	x23, x24, [sp, #48]
  4180a8:	str	x25, [sp, #64]
  4180ac:	cbnz	x0, 4180c8 <ferror@plt+0x14af8>
  4180b0:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4180b4:	add	x2, x2, #0xaae
  4180b8:	mov	w1, #0x1eb                 	// #491
  4180bc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4180c0:	add	x0, x0, #0xa3f
  4180c4:	bl	403600 <ferror@plt+0x30>
  4180c8:	mov	x22, x1
  4180cc:	cbnz	x1, 4180e0 <ferror@plt+0x14b10>
  4180d0:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4180d4:	mov	w1, #0x1ec                 	// #492
  4180d8:	add	x2, x2, #0xaae
  4180dc:	b	4180bc <ferror@plt+0x14aec>
  4180e0:	mov	x20, x2
  4180e4:	cbnz	x2, 4180f8 <ferror@plt+0x14b28>
  4180e8:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4180ec:	mov	w1, #0x1ed                 	// #493
  4180f0:	add	x2, x2, #0xaae
  4180f4:	b	4180bc <ferror@plt+0x14aec>
  4180f8:	mov	x21, x0
  4180fc:	ldr	w0, [x22, #60]
  418100:	mov	w1, #0xfff                 	// #4095
  418104:	movk	w1, #0x178, lsl #16
  418108:	and	w0, w0, w1
  41810c:	mov	w1, #0x1400000             	// #20971520
  418110:	cmp	w0, w1
  418114:	b.eq	4181a0 <ferror@plt+0x14bd0>  // b.none
  418118:	add	x0, x2, #0x1
  41811c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  418120:	adrp	x19, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418124:	add	x1, sp, #0x58
  418128:	add	x19, x19, #0xd30
  41812c:	mov	w24, #0x12                  	// #18
  418130:	str	x0, [sp, #88]
  418134:	mov	x0, x21
  418138:	bl	410060 <ferror@plt+0xca90>
  41813c:	ldr	x25, [x19, #16]
  418140:	mov	x0, x25
  418144:	bl	402d50 <strlen@plt>
  418148:	mov	x23, x0
  41814c:	ldrsb	w0, [x22, #64]
  418150:	tbz	w0, #31, 41815c <ferror@plt+0x14b8c>
  418154:	ldrb	w0, [x19, #25]
  418158:	cbnz	w0, 418194 <ferror@plt+0x14bc4>
  41815c:	mov	x2, x23
  418160:	mov	x1, x25
  418164:	mov	x0, x20
  418168:	bl	402f80 <strncmp@plt>
  41816c:	cbnz	w0, 418194 <ferror@plt+0x14bc4>
  418170:	ldr	x0, [x19]
  418174:	mov	x2, #0x0                   	// #0
  418178:	add	x1, x20, x23
  41817c:	add	x0, x0, #0x1
  418180:	bl	45a668 <ferror@plt+0x57098>
  418184:	add	x1, sp, #0x58
  418188:	str	x0, [sp, #88]
  41818c:	mov	x0, x21
  418190:	bl	410060 <ferror@plt+0xca90>
  418194:	add	x19, x19, #0x20
  418198:	subs	w24, w24, #0x1
  41819c:	b.ne	41813c <ferror@plt+0x14b6c>  // b.any
  4181a0:	ldp	x19, x20, [sp, #16]
  4181a4:	ldp	x21, x22, [sp, #32]
  4181a8:	ldp	x23, x24, [sp, #48]
  4181ac:	ldr	x25, [sp, #64]
  4181b0:	ldp	x29, x30, [sp], #96
  4181b4:	ret
  4181b8:	stp	x29, x30, [sp, #-112]!
  4181bc:	mov	x29, sp
  4181c0:	stp	x19, x20, [sp, #16]
  4181c4:	stp	x21, x22, [sp, #32]
  4181c8:	stp	x23, x24, [sp, #48]
  4181cc:	stp	x25, x26, [sp, #64]
  4181d0:	tbz	w4, #0, 4181fc <ferror@plt+0x14c2c>
  4181d4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4181d8:	add	x1, x1, #0xac9
  4181dc:	bl	422290 <ferror@plt+0x1ecc0>
  4181e0:	mov	w0, #0x1                   	// #1
  4181e4:	ldp	x19, x20, [sp, #16]
  4181e8:	ldp	x21, x22, [sp, #32]
  4181ec:	ldp	x23, x24, [sp, #48]
  4181f0:	ldp	x25, x26, [sp, #64]
  4181f4:	ldp	x29, x30, [sp], #112
  4181f8:	ret
  4181fc:	mov	x19, x1
  418200:	tbz	w4, #1, 418218 <ferror@plt+0x14c48>
  418204:	ldr	x1, [x1, #16]
  418208:	cbnz	x1, 4181dc <ferror@plt+0x14c0c>
  41820c:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x29c10>
  418210:	add	x1, x1, #0x381
  418214:	b	4181dc <ferror@plt+0x14c0c>
  418218:	tbz	w4, #3, 418240 <ferror@plt+0x14c70>
  41821c:	ldrb	w1, [x1, #65]
  418220:	ldr	x2, [x19]
  418224:	tbz	w1, #5, 418234 <ferror@plt+0x14c64>
  418228:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41822c:	add	x1, x1, #0xb08
  418230:	b	4181dc <ferror@plt+0x14c0c>
  418234:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418238:	add	x1, x1, #0xb5c
  41823c:	b	4181dc <ferror@plt+0x14c0c>
  418240:	tbz	w4, #4, 41825c <ferror@plt+0x14c8c>
  418244:	ldp	w3, w4, [x19, #88]
  418248:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41824c:	ldr	x2, [x19]
  418250:	add	x1, x1, #0xb8d
  418254:	bl	422290 <ferror@plt+0x1ecc0>
  418258:	b	4181e0 <ferror@plt+0x14c10>
  41825c:	tbz	w4, #5, 41836c <ferror@plt+0x14d9c>
  418260:	ldrh	w26, [x1, #68]
  418264:	adrp	x21, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  418268:	mov	w20, w0
  41826c:	add	x24, x21, #0x730
  418270:	add	x0, sp, #0x58
  418274:	mov	x25, x2
  418278:	mov	x23, x3
  41827c:	mov	w22, w5
  418280:	sxtw	x21, w26
  418284:	bl	421428 <ferror@plt+0x1de58>
  418288:	mov	x0, #0x30                  	// #48
  41828c:	madd	x0, x21, x0, x24
  418290:	ldr	x1, [x0, #8]
  418294:	cbz	x1, 4182e8 <ferror@plt+0x14d18>
  418298:	mov	x2, x23
  41829c:	mov	w0, w20
  4182a0:	bl	422290 <ferror@plt+0x1ecc0>
  4182a4:	mov	x0, #0x30                  	// #48
  4182a8:	and	w22, w22, #0x80000
  4182ac:	mov	w25, #0x0                   	// #0
  4182b0:	str	xzr, [sp, #104]
  4182b4:	madd	x21, x21, x0, x24
  4182b8:	ldr	x2, [x21, #16]
  4182bc:	ubfiz	x0, x25, #4, #32
  4182c0:	add	x1, x2, x0
  4182c4:	ldr	x0, [x2, x0]
  4182c8:	cbz	x0, 4182f8 <ferror@plt+0x14d28>
  4182cc:	cbnz	w22, 4182d8 <ferror@plt+0x14d08>
  4182d0:	ldr	w0, [x1, #12]
  4182d4:	tbnz	w0, #1, 4182e0 <ferror@plt+0x14d10>
  4182d8:	add	x0, sp, #0x68
  4182dc:	bl	410368 <ferror@plt+0xcd98>
  4182e0:	add	w25, w25, #0x1
  4182e4:	b	4182b8 <ferror@plt+0x14ce8>
  4182e8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4182ec:	mov	x2, x25
  4182f0:	add	x1, x1, #0xbb6
  4182f4:	b	41829c <ferror@plt+0x14ccc>
  4182f8:	add	x2, sp, #0x68
  4182fc:	add	x1, sp, #0x60
  418300:	mov	x0, x23
  418304:	bl	4177d0 <ferror@plt+0x14200>
  418308:	mov	x4, x0
  41830c:	ldr	x2, [x19]
  418310:	ldr	x3, [sp, #96]
  418314:	cbz	x0, 418350 <ferror@plt+0x14d80>
  418318:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  41831c:	mov	w0, w20
  418320:	add	x1, x1, #0xbda
  418324:	bl	421e40 <ferror@plt+0x1e870>
  418328:	ldr	x0, [sp, #96]
  41832c:	bl	4032a0 <free@plt>
  418330:	ldr	x0, [sp, #104]
  418334:	cbz	x0, 418344 <ferror@plt+0x14d74>
  418338:	ldrsb	w1, [x0, #3]
  41833c:	tbz	w1, #31, 418364 <ferror@plt+0x14d94>
  418340:	str	wzr, [x0, #4]
  418344:	add	x0, sp, #0x58
  418348:	bl	421440 <ferror@plt+0x1de70>
  41834c:	b	4181e0 <ferror@plt+0x14c10>
  418350:	mov	w0, w20
  418354:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418358:	add	x1, x1, #0xc0c
  41835c:	bl	421e40 <ferror@plt+0x1e870>
  418360:	b	418328 <ferror@plt+0x14d58>
  418364:	bl	4032a0 <free@plt>
  418368:	b	418344 <ferror@plt+0x14d74>
  41836c:	mov	w0, #0x0                   	// #0
  418370:	b	4181e4 <ferror@plt+0x14c14>
  418374:	sub	sp, sp, #0xa0
  418378:	mov	w0, w0
  41837c:	stp	x29, x30, [sp, #32]
  418380:	add	x29, sp, #0x20
  418384:	stp	x21, x22, [sp, #64]
  418388:	adrp	x21, 49d000 <_obstack_memory_used@@Base+0x40c10>
  41838c:	add	x21, x21, #0xfc8
  418390:	stp	x23, x24, [sp, #80]
  418394:	mov	w24, w1
  418398:	mov	x1, #0x60                  	// #96
  41839c:	stp	x19, x20, [sp, #48]
  4183a0:	mov	x20, x0
  4183a4:	madd	x0, x0, x1, x21
  4183a8:	stp	x25, x26, [sp, #96]
  4183ac:	mov	x19, x2
  4183b0:	and	w23, w3, #0xff
  4183b4:	stp	x27, x28, [sp, #112]
  4183b8:	mov	w22, w5
  4183bc:	ldrh	w1, [x0, #48]
  4183c0:	mov	w28, w4
  4183c4:	mov	x25, x6
  4183c8:	mov	x26, x7
  4183cc:	cmp	w1, #0x595
  4183d0:	ldr	x27, [sp, #168]
  4183d4:	b.eq	41840c <ferror@plt+0x14e3c>  // b.none
  4183d8:	ldrb	w2, [x0, #64]
  4183dc:	tbnz	w2, #3, 4183e4 <ferror@plt+0x14e14>
  4183e0:	tbz	w2, #4, 4183fc <ferror@plt+0x14e2c>
  4183e4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4183e8:	add	x2, x2, #0xc2b
  4183ec:	mov	w1, #0x66a                 	// #1642
  4183f0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4183f4:	add	x0, x0, #0xa3f
  4183f8:	bl	403600 <ferror@plt+0x30>
  4183fc:	ldr	x0, [x0, #32]
  418400:	mov	w20, w1
  418404:	cmp	x0, #0x0
  418408:	csel	x19, x19, x0, eq  // eq = none
  41840c:	sub	w0, w20, #0x597
  418410:	cmp	w0, #0x1
  418414:	b.ls	4184b8 <ferror@plt+0x14ee8>  // b.plast
  418418:	cbz	x27, 418430 <ferror@plt+0x14e60>
  41841c:	mov	w3, w28
  418420:	mov	w2, w24
  418424:	mov	w1, w20
  418428:	mov	x0, x27
  41842c:	bl	42104c <ferror@plt+0x1da7c>
  418430:	cbz	w23, 4184b8 <ferror@plt+0x14ee8>
  418434:	mov	w0, #0x60                  	// #96
  418438:	mov	w23, w20
  41843c:	umaddl	x20, w20, w0, x21
  418440:	mov	x0, #0x60                  	// #96
  418444:	madd	x0, x23, x0, x21
  418448:	ldr	w0, [x0, #72]
  41844c:	tst	w0, #0xfffffffb
  418450:	b.eq	41845c <ferror@plt+0x14e8c>  // b.none
  418454:	cmp	w0, #0x6
  418458:	b.ne	4184b8 <ferror@plt+0x14ee8>  // b.any
  41845c:	mov	x0, #0x1                   	// #1
  418460:	str	x0, [sp, #144]
  418464:	cbz	x19, 418484 <ferror@plt+0x14eb4>
  418468:	ldrb	w0, [x19]
  41846c:	cbnz	w0, 418484 <ferror@plt+0x14eb4>
  418470:	mov	x0, #0x60                  	// #96
  418474:	madd	x0, x23, x0, x21
  418478:	ldrb	w0, [x0, #65]
  41847c:	tst	x0, #0x1
  418480:	csel	x19, x19, xzr, ne  // ne = any
  418484:	mov	x0, #0x60                  	// #96
  418488:	mul	x0, x23, x0
  41848c:	add	x1, x21, x0
  418490:	ldr	w1, [x1, #60]
  418494:	tbz	w1, #22, 4184d8 <ferror@plt+0x14f08>
  418498:	cbnz	x19, 4184dc <ferror@plt+0x14f0c>
  41849c:	ldr	x2, [x21, x0]
  4184a0:	mov	w5, w22
  4184a4:	mov	w4, #0x2                   	// #2
  4184a8:	mov	x3, #0x0                   	// #0
  4184ac:	mov	x1, x20
  4184b0:	mov	w0, w28
  4184b4:	bl	4181b8 <ferror@plt+0x14be8>
  4184b8:	ldp	x29, x30, [sp, #32]
  4184bc:	ldp	x19, x20, [sp, #48]
  4184c0:	ldp	x21, x22, [sp, #64]
  4184c4:	ldp	x23, x24, [sp, #80]
  4184c8:	ldp	x25, x26, [sp, #96]
  4184cc:	ldp	x27, x28, [sp, #112]
  4184d0:	add	sp, sp, #0xa0
  4184d4:	ret
  4184d8:	cbz	x19, 418550 <ferror@plt+0x14f80>
  4184dc:	mov	x0, #0x60                  	// #96
  4184e0:	madd	x0, x23, x0, x21
  4184e4:	ldrb	w2, [x0, #65]
  4184e8:	tst	w2, #0x6
  4184ec:	b.eq	418584 <ferror@plt+0x14fb4>  // b.none
  4184f0:	str	wzr, [sp, #152]
  4184f4:	ldrb	w0, [x19]
  4184f8:	cbz	w0, 418534 <ferror@plt+0x14f64>
  4184fc:	ubfx	x2, x2, #5, #1
  418500:	add	x1, sp, #0x98
  418504:	mov	x0, x19
  418508:	bl	416324 <ferror@plt+0x12d54>
  41850c:	str	x0, [sp, #144]
  418510:	ldr	w0, [sp, #152]
  418514:	cbz	w0, 418584 <ferror@plt+0x14fb4>
  418518:	mov	x0, #0x60                  	// #96
  41851c:	mov	w5, w22
  418520:	mov	x3, x19
  418524:	mov	w4, #0x8                   	// #8
  418528:	mul	x23, x23, x0
  41852c:	ldr	x2, [x21, x23]
  418530:	b	4184ac <ferror@plt+0x14edc>
  418534:	mov	x0, #0x0                   	// #0
  418538:	b	41850c <ferror@plt+0x14f3c>
  41853c:	mov	w5, w22
  418540:	mov	x3, x19
  418544:	mov	w4, #0x20                  	// #32
  418548:	ldr	x2, [x21, x6]
  41854c:	b	4184ac <ferror@plt+0x14edc>
  418550:	ldr	x4, [sp, #144]
  418554:	str	x25, [sp]
  418558:	ldr	x1, [sp, #160]
  41855c:	strb	wzr, [sp, #8]
  418560:	str	x27, [sp, #16]
  418564:	mov	w7, w28
  418568:	mov	w6, w24
  41856c:	mov	w5, w22
  418570:	mov	x3, x19
  418574:	mov	x2, x23
  418578:	mov	x0, x26
  41857c:	bl	417dbc <ferror@plt+0x147ec>
  418580:	b	4184b8 <ferror@plt+0x14ee8>
  418584:	mov	x6, #0x60                  	// #96
  418588:	mul	x6, x23, x6
  41858c:	add	x0, x21, x6
  418590:	ldr	w1, [x0, #72]
  418594:	cmp	w1, #0x6
  418598:	b.ne	418550 <ferror@plt+0x14f80>  // b.any
  41859c:	ldrh	w4, [x0, #68]
  4185a0:	adrp	x0, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  4185a4:	add	x0, x0, #0x730
  4185a8:	mov	x1, #0x30                  	// #48
  4185ac:	mov	w3, w22
  4185b0:	add	x2, sp, #0x90
  4185b4:	madd	x4, x4, x1, x0
  4185b8:	mov	x1, x19
  4185bc:	ldr	x0, [x4, #16]
  4185c0:	stp	x4, x6, [sp, #128]
  4185c4:	bl	416094 <ferror@plt+0x12ac4>
  4185c8:	tst	w0, #0xff
  4185cc:	ldr	x6, [sp, #136]
  4185d0:	b.eq	41853c <ferror@plt+0x14f6c>  // b.none
  4185d4:	ldr	x4, [sp, #128]
  4185d8:	str	xzr, [sp, #152]
  4185dc:	ldr	w2, [sp, #144]
  4185e0:	add	x1, sp, #0x98
  4185e4:	mov	w3, w22
  4185e8:	ldr	x0, [x4, #16]
  4185ec:	bl	41660c <ferror@plt+0x1303c>
  4185f0:	tst	w0, #0xff
  4185f4:	ldr	x1, [sp, #152]
  4185f8:	csel	x19, x19, x1, eq  // eq = none
  4185fc:	cbnz	x1, 418550 <ferror@plt+0x14f80>
  418600:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418604:	mov	w1, #0x6a2                 	// #1698
  418608:	add	x2, x2, #0xc2b
  41860c:	b	4183f0 <ferror@plt+0x14e20>
  418610:	sub	sp, sp, #0x60
  418614:	stp	x29, x30, [sp, #16]
  418618:	add	x29, sp, #0x10
  41861c:	stp	x19, x20, [sp, #32]
  418620:	mov	x19, x2
  418624:	mov	w20, w3
  418628:	stp	x23, x24, [sp, #64]
  41862c:	mov	x24, x0
  418630:	ldr	x23, [x2, #24]
  418634:	stp	x21, x22, [sp, #48]
  418638:	mov	w21, w4
  41863c:	ldr	x2, [x2, #8]
  418640:	stp	x25, x26, [sp, #80]
  418644:	mov	x22, x5
  418648:	mov	x25, x1
  41864c:	mov	x26, x6
  418650:	cbz	x2, 418664 <ferror@plt+0x15094>
  418654:	mov	x3, x23
  418658:	mov	w0, w20
  41865c:	mov	w1, #0x0                   	// #0
  418660:	bl	421fac <ferror@plt+0x1e9dc>
  418664:	ldr	x7, [x19]
  418668:	cmp	x7, #0x596
  41866c:	b.ne	4186b0 <ferror@plt+0x150e0>  // b.any
  418670:	ldr	x1, [x22]
  418674:	mov	x0, x19
  418678:	blr	x1
  41867c:	tst	w0, #0xff
  418680:	b.eq	418760 <ferror@plt+0x15190>  // b.none
  418684:	ldr	x2, [x19, #16]
  418688:	mov	w0, w20
  41868c:	ldp	x29, x30, [sp, #16]
  418690:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  418694:	ldp	x19, x20, [sp, #32]
  418698:	add	x1, x1, #0x9bb
  41869c:	ldp	x21, x22, [sp, #48]
  4186a0:	ldp	x23, x24, [sp, #64]
  4186a4:	ldp	x25, x26, [sp, #80]
  4186a8:	add	sp, sp, #0x60
  4186ac:	b	422290 <ferror@plt+0x1ecc0>
  4186b0:	cmp	x7, #0x597
  4186b4:	b.eq	418760 <ferror@plt+0x15190>  // b.none
  4186b8:	cmp	x7, #0x598
  4186bc:	b.ne	4186f8 <ferror@plt+0x15128>  // b.any
  4186c0:	ldr	x0, [x19, #72]
  4186c4:	cbz	x0, 418760 <ferror@plt+0x15190>
  4186c8:	mov	x3, x23
  4186cc:	mov	w0, w20
  4186d0:	ldp	x29, x30, [sp, #16]
  4186d4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4186d8:	ldp	x19, x20, [sp, #32]
  4186dc:	add	x2, x2, #0xc42
  4186e0:	ldp	x21, x22, [sp, #48]
  4186e4:	mov	w1, #0x0                   	// #0
  4186e8:	ldp	x23, x24, [sp, #64]
  4186ec:	ldp	x25, x26, [sp, #80]
  4186f0:	add	sp, sp, #0x60
  4186f4:	b	421fac <ferror@plt+0x1e9dc>
  4186f8:	ldr	w4, [x19, #80]
  4186fc:	cbnz	w4, 418734 <ferror@plt+0x15164>
  418700:	ldr	w0, [x19, #80]
  418704:	tbz	w0, #2, 41877c <ferror@plt+0x151ac>
  418708:	mov	w1, w21
  41870c:	mov	x0, x19
  418710:	ldr	x2, [x22, #8]
  418714:	ldp	x29, x30, [sp, #16]
  418718:	mov	x16, x2
  41871c:	ldp	x19, x20, [sp, #32]
  418720:	ldp	x21, x22, [sp, #48]
  418724:	ldp	x23, x24, [sp, #64]
  418728:	ldp	x25, x26, [sp, #80]
  41872c:	add	sp, sp, #0x60
  418730:	br	x16
  418734:	adrp	x0, 49d000 <_obstack_memory_used@@Base+0x40c10>
  418738:	add	x0, x0, #0xfc8
  41873c:	mov	x1, #0x60                  	// #96
  418740:	mov	w5, w21
  418744:	ldr	x3, [x19, #16]
  418748:	madd	x1, x7, x1, x0
  41874c:	mov	x2, x23
  418750:	mov	w0, w20
  418754:	bl	4181b8 <ferror@plt+0x14be8>
  418758:	tst	w0, #0xff
  41875c:	b.eq	418700 <ferror@plt+0x15130>  // b.none
  418760:	ldp	x29, x30, [sp, #16]
  418764:	ldp	x19, x20, [sp, #32]
  418768:	ldp	x21, x22, [sp, #48]
  41876c:	ldp	x23, x24, [sp, #64]
  418770:	ldp	x25, x26, [sp, #80]
  418774:	add	sp, sp, #0x60
  418778:	ret
  41877c:	cbz	w0, 418798 <ferror@plt+0x151c8>
  418780:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418784:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418788:	add	x2, x2, #0xc64
  41878c:	add	x0, x0, #0xa3f
  418790:	mov	w1, #0x55c                 	// #1372
  418794:	bl	403600 <ferror@plt+0x30>
  418798:	str	x26, [sp]
  41879c:	mov	x6, x22
  4187a0:	mov	w5, w20
  4187a4:	mov	w3, w21
  4187a8:	mov	x2, x19
  4187ac:	mov	x1, x25
  4187b0:	mov	x0, x24
  4187b4:	mov	w7, #0x0                   	// #0
  4187b8:	mov	w4, #0x0                   	// #0
  4187bc:	bl	417c7c <ferror@plt+0x146ac>
  4187c0:	tst	w0, #0xff
  4187c4:	b.ne	418760 <ferror@plt+0x15190>  // b.any
  4187c8:	mov	x2, x23
  4187cc:	b	418688 <ferror@plt+0x150b8>
  4187d0:	str	w1, [x0]
  4187d4:	ret
  4187d8:	ldr	w0, [x0]
  4187dc:	ret
  4187e0:	str	w1, [x0]
  4187e4:	ret
  4187e8:	ldr	w0, [x0]
  4187ec:	ret
  4187f0:	str	w1, [x0]
  4187f4:	ret
  4187f8:	ldr	w0, [x0]
  4187fc:	ret
  418800:	str	w1, [x0]
  418804:	ret
  418808:	ldr	w0, [x0]
  41880c:	ret
  418810:	str	w1, [x0]
  418814:	ret
  418818:	ldr	w0, [x0]
  41881c:	ret
  418820:	str	w1, [x0]
  418824:	ret
  418828:	ldr	w0, [x0]
  41882c:	ret
  418830:	str	w1, [x0]
  418834:	ret
  418838:	ldr	w0, [x0]
  41883c:	ret
  418840:	str	w1, [x0]
  418844:	ret
  418848:	ldr	w0, [x0]
  41884c:	ret
  418850:	str	w1, [x0]
  418854:	ret
  418858:	ldr	w0, [x0]
  41885c:	ret
  418860:	str	w1, [x0]
  418864:	ret
  418868:	ldr	w0, [x0]
  41886c:	ret
  418870:	str	w1, [x0]
  418874:	ret
  418878:	ldr	w0, [x0]
  41887c:	ret
  418880:	str	w1, [x0]
  418884:	ret
  418888:	ldr	w0, [x0]
  41888c:	ret
  418890:	str	w1, [x0]
  418894:	ret
  418898:	ldr	w0, [x0]
  41889c:	ret
  4188a0:	str	w1, [x0]
  4188a4:	ret
  4188a8:	ldr	w0, [x0]
  4188ac:	ret
  4188b0:	str	w1, [x0]
  4188b4:	ret
  4188b8:	ldr	w0, [x0]
  4188bc:	ret
  4188c0:	str	w1, [x0]
  4188c4:	ret
  4188c8:	ldr	w0, [x0]
  4188cc:	ret
  4188d0:	str	w1, [x0]
  4188d4:	ret
  4188d8:	ldr	w0, [x0]
  4188dc:	ret
  4188e0:	str	w1, [x0]
  4188e4:	ret
  4188e8:	ldr	w0, [x0]
  4188ec:	ret
  4188f0:	str	w1, [x0]
  4188f4:	ret
  4188f8:	ldr	w0, [x0]
  4188fc:	ret
  418900:	str	w1, [x0]
  418904:	ret
  418908:	ldr	w0, [x0]
  41890c:	ret
  418910:	str	w1, [x0]
  418914:	ret
  418918:	ldr	w0, [x0]
  41891c:	ret
  418920:	str	w1, [x0]
  418924:	ret
  418928:	ldr	w0, [x0]
  41892c:	ret
  418930:	str	w1, [x0]
  418934:	ret
  418938:	ldr	w0, [x0]
  41893c:	ret
  418940:	str	w1, [x0]
  418944:	ret
  418948:	ldr	w0, [x0]
  41894c:	ret
  418950:	str	w1, [x0]
  418954:	ret
  418958:	ldr	w0, [x0]
  41895c:	ret
  418960:	str	w1, [x0]
  418964:	ret
  418968:	ldr	w0, [x0]
  41896c:	ret
  418970:	str	w1, [x0]
  418974:	ret
  418978:	ldr	w0, [x0]
  41897c:	ret
  418980:	str	w1, [x0]
  418984:	ret
  418988:	ldr	w0, [x0]
  41898c:	ret
  418990:	ldr	w0, [x0]
  418994:	ret
  418998:	str	w1, [x0]
  41899c:	ret
  4189a0:	ldr	w0, [x0]
  4189a4:	ret
  4189a8:	str	w1, [x0]
  4189ac:	ret
  4189b0:	ldr	w0, [x0]
  4189b4:	ret
  4189b8:	str	w1, [x0]
  4189bc:	ret
  4189c0:	str	w1, [x0]
  4189c4:	ret
  4189c8:	ldr	w0, [x0]
  4189cc:	ret
  4189d0:	ldr	w0, [x0]
  4189d4:	ret
  4189d8:	str	w1, [x0]
  4189dc:	ret
  4189e0:	ldr	w0, [x0]
  4189e4:	ret
  4189e8:	str	w1, [x0]
  4189ec:	ret
  4189f0:	ldr	w0, [x0]
  4189f4:	ret
  4189f8:	str	w1, [x0]
  4189fc:	ret
  418a00:	ldr	w0, [x0]
  418a04:	ret
  418a08:	str	w1, [x0]
  418a0c:	ret
  418a10:	ldr	w0, [x0]
  418a14:	ret
  418a18:	str	w1, [x0]
  418a1c:	ret
  418a20:	ldr	w0, [x0]
  418a24:	ret
  418a28:	str	w1, [x0]
  418a2c:	ret
  418a30:	sub	sp, sp, #0x70
  418a34:	stp	x29, x30, [sp, #32]
  418a38:	add	x29, sp, #0x20
  418a3c:	stp	x21, x22, [sp, #64]
  418a40:	mov	w21, w3
  418a44:	stp	x25, x26, [sp, #96]
  418a48:	ldr	x3, [x2]
  418a4c:	stp	x19, x20, [sp, #48]
  418a50:	ldr	x26, [x2, #72]
  418a54:	stp	x23, x24, [sp, #80]
  418a58:	ldr	x2, [x2, #64]
  418a5c:	cmp	x2, #0x2
  418a60:	b.ls	418a7c <ferror@plt+0x154ac>  // b.plast
  418a64:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418a68:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x2ac10>
  418a6c:	add	x2, x2, #0xf70
  418a70:	add	x0, x0, #0xf8a
  418a74:	mov	w1, #0x3a33                	// #14899
  418a78:	bl	403600 <ferror@plt+0x30>
  418a7c:	mov	x19, x1
  418a80:	mov	w22, w4
  418a84:	mov	w23, w5
  418a88:	mov	x24, x6
  418a8c:	mov	x25, x7
  418a90:	cmp	w3, #0x182
  418a94:	b.eq	418fb4 <ferror@plt+0x159e4>  // b.none
  418a98:	mov	x20, x0
  418a9c:	b.gt	418ad8 <ferror@plt+0x15508>
  418aa0:	cmp	w3, #0x161
  418aa4:	b.eq	418f14 <ferror@plt+0x15944>  // b.none
  418aa8:	cmp	w3, #0x17c
  418aac:	b.eq	418f4c <ferror@plt+0x1597c>  // b.none
  418ab0:	cmp	w3, #0xf4
  418ab4:	b.eq	418b24 <ferror@plt+0x15554>  // b.none
  418ab8:	mov	w0, #0x1                   	// #1
  418abc:	ldp	x29, x30, [sp, #32]
  418ac0:	ldp	x19, x20, [sp, #48]
  418ac4:	ldp	x21, x22, [sp, #64]
  418ac8:	ldp	x23, x24, [sp, #80]
  418acc:	ldp	x25, x26, [sp, #96]
  418ad0:	add	sp, sp, #0x70
  418ad4:	ret
  418ad8:	cmp	w3, #0x1c2
  418adc:	b.eq	418fe8 <ferror@plt+0x15a18>  // b.none
  418ae0:	cmp	w3, #0x48f
  418ae4:	b.eq	4191f8 <ferror@plt+0x15c28>  // b.none
  418ae8:	cmp	w3, #0x1bd
  418aec:	b.ne	418ab8 <ferror@plt+0x154e8>  // b.any
  418af0:	ldr	w2, [x1, #812]
  418af4:	cbnz	w2, 418ab8 <ferror@plt+0x154e8>
  418af8:	mov	w2, #0x1                   	// #1
  418afc:	mov	w7, w5
  418b00:	mov	w6, w4
  418b04:	mov	w5, w21
  418b08:	mov	x4, x26
  418b0c:	mov	x3, #0x0                   	// #0
  418b10:	str	x24, [sp]
  418b14:	strb	w2, [sp, #8]
  418b18:	mov	x2, #0x130                 	// #304
  418b1c:	str	x25, [sp, #16]
  418b20:	b	418f44 <ferror@plt+0x15974>
  418b24:	ldr	w2, [x1, #268]
  418b28:	cbnz	w2, 418b58 <ferror@plt+0x15588>
  418b2c:	mov	w2, #0x1                   	// #1
  418b30:	str	x24, [sp]
  418b34:	strb	w2, [sp, #8]
  418b38:	mov	w7, w5
  418b3c:	str	x25, [sp, #16]
  418b40:	mov	w6, w4
  418b44:	mov	w5, w21
  418b48:	mov	x4, x26
  418b4c:	mov	x3, #0x0                   	// #0
  418b50:	mov	x2, #0x9a                  	// #154
  418b54:	bl	417dbc <ferror@plt+0x147ec>
  418b58:	ldr	w0, [x19, #420]
  418b5c:	cbnz	w0, 418b94 <ferror@plt+0x155c4>
  418b60:	mov	w0, #0x1                   	// #1
  418b64:	str	x24, [sp]
  418b68:	strb	w0, [sp, #8]
  418b6c:	mov	w7, w23
  418b70:	str	x25, [sp, #16]
  418b74:	mov	w6, w22
  418b78:	mov	w5, w21
  418b7c:	mov	x4, x26
  418b80:	mov	x1, x19
  418b84:	mov	x0, x20
  418b88:	mov	x3, #0x0                   	// #0
  418b8c:	mov	x2, #0xc4                  	// #196
  418b90:	bl	417dbc <ferror@plt+0x147ec>
  418b94:	ldr	w0, [x19, #452]
  418b98:	cbnz	w0, 418bd0 <ferror@plt+0x15600>
  418b9c:	mov	w0, #0x1                   	// #1
  418ba0:	str	x24, [sp]
  418ba4:	strb	w0, [sp, #8]
  418ba8:	mov	w7, w23
  418bac:	str	x25, [sp, #16]
  418bb0:	mov	w6, w22
  418bb4:	mov	w5, w21
  418bb8:	mov	x4, x26
  418bbc:	mov	x1, x19
  418bc0:	mov	x0, x20
  418bc4:	mov	x3, #0x0                   	// #0
  418bc8:	mov	x2, #0xce                  	// #206
  418bcc:	bl	417dbc <ferror@plt+0x147ec>
  418bd0:	ldr	w0, [x19, #568]
  418bd4:	cbnz	w0, 418c0c <ferror@plt+0x1563c>
  418bd8:	mov	w0, #0x1                   	// #1
  418bdc:	str	x24, [sp]
  418be0:	strb	w0, [sp, #8]
  418be4:	mov	w7, w23
  418be8:	str	x25, [sp, #16]
  418bec:	mov	w6, w22
  418bf0:	mov	w5, w21
  418bf4:	mov	x4, x26
  418bf8:	mov	x1, x19
  418bfc:	mov	x0, x20
  418c00:	mov	x3, #0x0                   	// #0
  418c04:	mov	x2, #0xed                  	// #237
  418c08:	bl	417dbc <ferror@plt+0x147ec>
  418c0c:	ldr	w0, [x19, #584]
  418c10:	cbnz	w0, 418c48 <ferror@plt+0x15678>
  418c14:	mov	w0, #0x1                   	// #1
  418c18:	str	x24, [sp]
  418c1c:	strb	w0, [sp, #8]
  418c20:	mov	w7, w23
  418c24:	str	x25, [sp, #16]
  418c28:	mov	w6, w22
  418c2c:	mov	w5, w21
  418c30:	mov	x4, x26
  418c34:	mov	x1, x19
  418c38:	mov	x0, x20
  418c3c:	mov	x3, #0x0                   	// #0
  418c40:	mov	x2, #0xf3                  	// #243
  418c44:	bl	417dbc <ferror@plt+0x147ec>
  418c48:	ldr	w0, [x19, #688]
  418c4c:	cbnz	w0, 418c84 <ferror@plt+0x156b4>
  418c50:	mov	w0, #0x1                   	// #1
  418c54:	str	x24, [sp]
  418c58:	strb	w0, [sp, #8]
  418c5c:	mov	w7, w23
  418c60:	str	x25, [sp, #16]
  418c64:	mov	w6, w22
  418c68:	mov	w5, w21
  418c6c:	mov	x4, x26
  418c70:	mov	x1, x19
  418c74:	mov	x0, x20
  418c78:	mov	x3, #0x0                   	// #0
  418c7c:	mov	x2, #0x10e                 	// #270
  418c80:	bl	417dbc <ferror@plt+0x147ec>
  418c84:	ldr	w0, [x19, #840]
  418c88:	cbnz	w0, 418cc0 <ferror@plt+0x156f0>
  418c8c:	mov	w0, #0x1                   	// #1
  418c90:	str	x24, [sp]
  418c94:	strb	w0, [sp, #8]
  418c98:	mov	w7, w23
  418c9c:	str	x25, [sp, #16]
  418ca0:	mov	w6, w22
  418ca4:	mov	w5, w21
  418ca8:	mov	x4, x26
  418cac:	mov	x1, x19
  418cb0:	mov	x0, x20
  418cb4:	mov	x3, #0x0                   	// #0
  418cb8:	mov	x2, #0x137                 	// #311
  418cbc:	bl	417dbc <ferror@plt+0x147ec>
  418cc0:	ldr	w0, [x19, #848]
  418cc4:	cbnz	w0, 418cfc <ferror@plt+0x1572c>
  418cc8:	mov	w0, #0x1                   	// #1
  418ccc:	str	x24, [sp]
  418cd0:	strb	w0, [sp, #8]
  418cd4:	mov	w7, w23
  418cd8:	str	x25, [sp, #16]
  418cdc:	mov	w6, w22
  418ce0:	mov	w5, w21
  418ce4:	mov	x4, x26
  418ce8:	mov	x1, x19
  418cec:	mov	x0, x20
  418cf0:	mov	x3, #0x0                   	// #0
  418cf4:	mov	x2, #0x13b                 	// #315
  418cf8:	bl	417dbc <ferror@plt+0x147ec>
  418cfc:	ldr	w0, [x19, #924]
  418d00:	cbnz	w0, 418d38 <ferror@plt+0x15768>
  418d04:	mov	w0, #0x1                   	// #1
  418d08:	str	x24, [sp]
  418d0c:	strb	w0, [sp, #8]
  418d10:	mov	w7, w23
  418d14:	str	x25, [sp, #16]
  418d18:	mov	w6, w22
  418d1c:	mov	w5, w21
  418d20:	mov	x4, x26
  418d24:	mov	x1, x19
  418d28:	mov	x0, x20
  418d2c:	mov	x3, #0x0                   	// #0
  418d30:	mov	x2, #0x153                 	// #339
  418d34:	bl	417dbc <ferror@plt+0x147ec>
  418d38:	ldr	w0, [x19, #948]
  418d3c:	cbnz	w0, 418d74 <ferror@plt+0x157a4>
  418d40:	mov	w0, #0x1                   	// #1
  418d44:	str	x24, [sp]
  418d48:	strb	w0, [sp, #8]
  418d4c:	mov	w7, w23
  418d50:	str	x25, [sp, #16]
  418d54:	mov	w6, w22
  418d58:	mov	w5, w21
  418d5c:	mov	x4, x26
  418d60:	mov	x1, x19
  418d64:	mov	x0, x20
  418d68:	mov	x3, #0x0                   	// #0
  418d6c:	mov	x2, #0x159                 	// #345
  418d70:	bl	417dbc <ferror@plt+0x147ec>
  418d74:	ldr	w0, [x19, #1108]
  418d78:	cbnz	w0, 418db0 <ferror@plt+0x157e0>
  418d7c:	mov	w0, #0x1                   	// #1
  418d80:	str	x24, [sp]
  418d84:	strb	w0, [sp, #8]
  418d88:	mov	w7, w23
  418d8c:	str	x25, [sp, #16]
  418d90:	mov	w6, w22
  418d94:	mov	w5, w21
  418d98:	mov	x4, x26
  418d9c:	mov	x1, x19
  418da0:	mov	x0, x20
  418da4:	mov	x3, #0x0                   	// #0
  418da8:	mov	x2, #0x188                 	// #392
  418dac:	bl	417dbc <ferror@plt+0x147ec>
  418db0:	ldr	w0, [x19, #1120]
  418db4:	cbnz	w0, 418dec <ferror@plt+0x1581c>
  418db8:	mov	w0, #0x1                   	// #1
  418dbc:	str	x24, [sp]
  418dc0:	strb	w0, [sp, #8]
  418dc4:	mov	w7, w23
  418dc8:	str	x25, [sp, #16]
  418dcc:	mov	w6, w22
  418dd0:	mov	w5, w21
  418dd4:	mov	x4, x26
  418dd8:	mov	x1, x19
  418ddc:	mov	x0, x20
  418de0:	mov	x3, #0x0                   	// #0
  418de4:	mov	x2, #0x18b                 	// #395
  418de8:	bl	417dbc <ferror@plt+0x147ec>
  418dec:	ldr	w0, [x19, #1292]
  418df0:	cbnz	w0, 418e28 <ferror@plt+0x15858>
  418df4:	mov	w0, #0x1                   	// #1
  418df8:	str	x24, [sp]
  418dfc:	strb	w0, [sp, #8]
  418e00:	mov	w7, w23
  418e04:	str	x25, [sp, #16]
  418e08:	mov	w6, w22
  418e0c:	mov	w5, w21
  418e10:	mov	x4, x26
  418e14:	mov	x1, x19
  418e18:	mov	x0, x20
  418e1c:	mov	x3, #0x0                   	// #0
  418e20:	mov	x2, #0x1b8                 	// #440
  418e24:	bl	417dbc <ferror@plt+0x147ec>
  418e28:	ldr	w0, [x19, #1312]
  418e2c:	cbnz	w0, 418e64 <ferror@plt+0x15894>
  418e30:	mov	w0, #0x1                   	// #1
  418e34:	str	x24, [sp]
  418e38:	strb	w0, [sp, #8]
  418e3c:	mov	w7, w23
  418e40:	str	x25, [sp, #16]
  418e44:	mov	w6, w22
  418e48:	mov	w5, w21
  418e4c:	mov	x4, x26
  418e50:	mov	x1, x19
  418e54:	mov	x0, x20
  418e58:	mov	x3, #0x0                   	// #0
  418e5c:	mov	x2, #0x1bd                 	// #445
  418e60:	bl	417dbc <ferror@plt+0x147ec>
  418e64:	ldr	w0, [x19, #1328]
  418e68:	cbnz	w0, 418eb4 <ferror@plt+0x158e4>
  418e6c:	ldr	w0, [x20, #1324]
  418e70:	cbz	w0, 418f04 <ferror@plt+0x15934>
  418e74:	ldr	w0, [x20, #588]
  418e78:	cmp	w0, #0x0
  418e7c:	cset	w4, ne  // ne = any
  418e80:	mov	w0, #0x1                   	// #1
  418e84:	str	x24, [sp]
  418e88:	strb	w0, [sp, #8]
  418e8c:	mov	w7, w23
  418e90:	str	x25, [sp, #16]
  418e94:	mov	w6, w22
  418e98:	mov	w5, w21
  418e9c:	and	x4, x4, #0x1
  418ea0:	mov	x1, x19
  418ea4:	mov	x0, x20
  418ea8:	mov	x3, #0x0                   	// #0
  418eac:	mov	x2, #0x1c3                 	// #451
  418eb0:	bl	417dbc <ferror@plt+0x147ec>
  418eb4:	ldr	w0, [x19, #1360]
  418eb8:	cbnz	w0, 418ab8 <ferror@plt+0x154e8>
  418ebc:	ldr	w0, [x20, #1324]
  418ec0:	cbz	w0, 418f0c <ferror@plt+0x1593c>
  418ec4:	ldr	w0, [x20, #588]
  418ec8:	cmp	w0, #0x0
  418ecc:	cset	w4, ne  // ne = any
  418ed0:	mov	w7, w23
  418ed4:	mov	w6, w22
  418ed8:	mov	w5, w21
  418edc:	and	x4, x4, #0x1
  418ee0:	mov	w0, #0x1                   	// #1
  418ee4:	mov	x3, #0x0                   	// #0
  418ee8:	mov	x2, #0x1cc                 	// #460
  418eec:	str	x24, [sp]
  418ef0:	strb	w0, [sp, #8]
  418ef4:	str	x25, [sp, #16]
  418ef8:	mov	x1, x19
  418efc:	mov	x0, x20
  418f00:	b	418f44 <ferror@plt+0x15974>
  418f04:	mov	w4, #0x0                   	// #0
  418f08:	b	418e80 <ferror@plt+0x158b0>
  418f0c:	mov	w4, #0x0                   	// #0
  418f10:	b	418ed0 <ferror@plt+0x15900>
  418f14:	ldr	w2, [x1, #584]
  418f18:	cbnz	w2, 418ab8 <ferror@plt+0x154e8>
  418f1c:	mov	w2, #0x1                   	// #1
  418f20:	mov	w7, w5
  418f24:	mov	w6, w4
  418f28:	mov	w5, w21
  418f2c:	mov	x4, x26
  418f30:	mov	x3, #0x0                   	// #0
  418f34:	str	x24, [sp]
  418f38:	strb	w2, [sp, #8]
  418f3c:	mov	x2, #0xf3                  	// #243
  418f40:	str	x25, [sp, #16]
  418f44:	bl	417dbc <ferror@plt+0x147ec>
  418f48:	b	418ab8 <ferror@plt+0x154e8>
  418f4c:	ldr	w2, [x1, #1080]
  418f50:	cbnz	w2, 418f80 <ferror@plt+0x159b0>
  418f54:	mov	w2, #0x1                   	// #1
  418f58:	str	x24, [sp]
  418f5c:	strb	w2, [sp, #8]
  418f60:	mov	w7, w5
  418f64:	str	x25, [sp, #16]
  418f68:	mov	w6, w4
  418f6c:	mov	w5, w21
  418f70:	mov	x4, x26
  418f74:	mov	x3, #0x0                   	// #0
  418f78:	mov	x2, #0x17e                 	// #382
  418f7c:	bl	417dbc <ferror@plt+0x147ec>
  418f80:	ldr	w0, [x19, #1088]
  418f84:	cbnz	w0, 418ab8 <ferror@plt+0x154e8>
  418f88:	mov	w0, #0x1                   	// #1
  418f8c:	mov	w7, w23
  418f90:	mov	w6, w22
  418f94:	mov	w5, w21
  418f98:	mov	x4, x26
  418f9c:	mov	x3, #0x0                   	// #0
  418fa0:	mov	x2, #0x182                 	// #386
  418fa4:	str	x24, [sp]
  418fa8:	strb	w0, [sp, #8]
  418fac:	str	x25, [sp, #16]
  418fb0:	b	418ef8 <ferror@plt+0x15928>
  418fb4:	ldr	w2, [x1, #1084]
  418fb8:	cbnz	w2, 418ab8 <ferror@plt+0x154e8>
  418fbc:	mov	w2, #0x1                   	// #1
  418fc0:	mov	w7, w5
  418fc4:	mov	w6, w4
  418fc8:	mov	w5, w21
  418fcc:	mov	x4, x26
  418fd0:	mov	x3, #0x0                   	// #0
  418fd4:	str	x24, [sp]
  418fd8:	strb	w2, [sp, #8]
  418fdc:	mov	x2, #0x180                 	// #384
  418fe0:	str	x25, [sp, #16]
  418fe4:	b	418f44 <ferror@plt+0x15974>
  418fe8:	ldr	w0, [x1, #1328]
  418fec:	cbnz	w0, 419038 <ferror@plt+0x15a68>
  418ff0:	ldr	w0, [x20, #1324]
  418ff4:	cbz	w0, 4191e8 <ferror@plt+0x15c18>
  418ff8:	ldr	w0, [x20, #588]
  418ffc:	cmp	w0, #0x0
  419000:	cset	w4, ne  // ne = any
  419004:	mov	w0, #0x1                   	// #1
  419008:	str	x24, [sp]
  41900c:	strb	w0, [sp, #8]
  419010:	mov	w7, w23
  419014:	str	x25, [sp, #16]
  419018:	mov	w6, w22
  41901c:	mov	w5, w21
  419020:	and	x4, x4, #0x1
  419024:	mov	x1, x19
  419028:	mov	x0, x20
  41902c:	mov	x3, #0x0                   	// #0
  419030:	mov	x2, #0x1c3                 	// #451
  419034:	bl	417dbc <ferror@plt+0x147ec>
  419038:	ldr	w0, [x19, #1332]
  41903c:	cbnz	w0, 419074 <ferror@plt+0x15aa4>
  419040:	mov	w0, #0x1                   	// #1
  419044:	str	x24, [sp]
  419048:	strb	w0, [sp, #8]
  41904c:	mov	w7, w23
  419050:	str	x25, [sp, #16]
  419054:	mov	w6, w22
  419058:	mov	w5, w21
  41905c:	mov	x4, x26
  419060:	mov	x1, x19
  419064:	mov	x0, x20
  419068:	mov	x3, #0x0                   	// #0
  41906c:	mov	x2, #0x1c4                 	// #452
  419070:	bl	417dbc <ferror@plt+0x147ec>
  419074:	ldr	w0, [x19, #1344]
  419078:	cbnz	w0, 4190b0 <ferror@plt+0x15ae0>
  41907c:	mov	w0, #0x1                   	// #1
  419080:	str	x24, [sp]
  419084:	strb	w0, [sp, #8]
  419088:	mov	w7, w23
  41908c:	str	x25, [sp, #16]
  419090:	mov	w6, w22
  419094:	mov	w5, w21
  419098:	mov	x4, x26
  41909c:	mov	x1, x19
  4190a0:	mov	x0, x20
  4190a4:	mov	x3, #0x0                   	// #0
  4190a8:	mov	x2, #0x1c8                 	// #456
  4190ac:	bl	417dbc <ferror@plt+0x147ec>
  4190b0:	ldr	w0, [x19, #1348]
  4190b4:	cbnz	w0, 4190ec <ferror@plt+0x15b1c>
  4190b8:	mov	w0, #0x1                   	// #1
  4190bc:	str	x24, [sp]
  4190c0:	strb	w0, [sp, #8]
  4190c4:	mov	w7, w23
  4190c8:	str	x25, [sp, #16]
  4190cc:	mov	w6, w22
  4190d0:	mov	w5, w21
  4190d4:	mov	x4, x26
  4190d8:	mov	x1, x19
  4190dc:	mov	x0, x20
  4190e0:	mov	x3, #0x0                   	// #0
  4190e4:	mov	x2, #0x1c9                 	// #457
  4190e8:	bl	417dbc <ferror@plt+0x147ec>
  4190ec:	ldr	w0, [x19, #1352]
  4190f0:	cbnz	w0, 419128 <ferror@plt+0x15b58>
  4190f4:	mov	w0, #0x1                   	// #1
  4190f8:	str	x24, [sp]
  4190fc:	strb	w0, [sp, #8]
  419100:	mov	w7, w23
  419104:	str	x25, [sp, #16]
  419108:	mov	w6, w22
  41910c:	mov	w5, w21
  419110:	mov	x4, x26
  419114:	mov	x1, x19
  419118:	mov	x0, x20
  41911c:	mov	x3, #0x0                   	// #0
  419120:	mov	x2, #0x1ca                 	// #458
  419124:	bl	417dbc <ferror@plt+0x147ec>
  419128:	ldr	w0, [x19, #1360]
  41912c:	cbnz	w0, 419178 <ferror@plt+0x15ba8>
  419130:	ldr	w0, [x20, #1324]
  419134:	cbz	w0, 4191f0 <ferror@plt+0x15c20>
  419138:	ldr	w0, [x20, #588]
  41913c:	cmp	w0, #0x0
  419140:	cset	w4, ne  // ne = any
  419144:	mov	w0, #0x1                   	// #1
  419148:	str	x24, [sp]
  41914c:	strb	w0, [sp, #8]
  419150:	mov	w7, w23
  419154:	str	x25, [sp, #16]
  419158:	mov	w6, w22
  41915c:	mov	w5, w21
  419160:	and	x4, x4, #0x1
  419164:	mov	x1, x19
  419168:	mov	x0, x20
  41916c:	mov	x3, #0x0                   	// #0
  419170:	mov	x2, #0x1cc                 	// #460
  419174:	bl	417dbc <ferror@plt+0x147ec>
  419178:	ldr	w0, [x19, #1368]
  41917c:	cbnz	w0, 4191b4 <ferror@plt+0x15be4>
  419180:	mov	w0, #0x1                   	// #1
  419184:	str	x24, [sp]
  419188:	strb	w0, [sp, #8]
  41918c:	mov	w7, w23
  419190:	str	x25, [sp, #16]
  419194:	mov	w6, w22
  419198:	mov	w5, w21
  41919c:	mov	x4, x26
  4191a0:	mov	x1, x19
  4191a4:	mov	x0, x20
  4191a8:	mov	x3, #0x0                   	// #0
  4191ac:	mov	x2, #0x1ce                 	// #462
  4191b0:	bl	417dbc <ferror@plt+0x147ec>
  4191b4:	ldr	w0, [x19, #1372]
  4191b8:	cbnz	w0, 418ab8 <ferror@plt+0x154e8>
  4191bc:	mov	w0, #0x1                   	// #1
  4191c0:	mov	w7, w23
  4191c4:	mov	w6, w22
  4191c8:	mov	w5, w21
  4191cc:	mov	x4, x26
  4191d0:	mov	x3, #0x0                   	// #0
  4191d4:	mov	x2, #0x1cf                 	// #463
  4191d8:	str	x24, [sp]
  4191dc:	strb	w0, [sp, #8]
  4191e0:	str	x25, [sp, #16]
  4191e4:	b	418ef8 <ferror@plt+0x15928>
  4191e8:	mov	w4, #0x0                   	// #0
  4191ec:	b	419004 <ferror@plt+0x15a34>
  4191f0:	mov	w4, #0x0                   	// #0
  4191f4:	b	419144 <ferror@plt+0x15b74>
  4191f8:	ldr	w2, [x1, #3300]
  4191fc:	cbnz	w2, 41922c <ferror@plt+0x15c5c>
  419200:	mov	w2, #0x1                   	// #1
  419204:	str	x24, [sp]
  419208:	strb	w2, [sp, #8]
  41920c:	mov	w7, w5
  419210:	str	x25, [sp, #16]
  419214:	mov	w6, w4
  419218:	mov	w5, w21
  41921c:	mov	x4, x26
  419220:	mov	x3, #0x0                   	// #0
  419224:	mov	x2, #0x47b                 	// #1147
  419228:	bl	417dbc <ferror@plt+0x147ec>
  41922c:	ldr	w0, [x19, #3340]
  419230:	cbnz	w0, 418ab8 <ferror@plt+0x154e8>
  419234:	mov	w0, #0x1                   	// #1
  419238:	mov	w7, w23
  41923c:	mov	w6, w22
  419240:	mov	w5, w21
  419244:	mov	x4, x26
  419248:	mov	x3, #0x0                   	// #0
  41924c:	mov	x2, #0x486                 	// #1158
  419250:	str	x24, [sp]
  419254:	strb	w0, [sp, #8]
  419258:	str	x25, [sp, #16]
  41925c:	b	418ef8 <ferror@plt+0x15928>
  419260:	mov	w0, #0x1                   	// #1
  419264:	ret
  419268:	mov	w0, #0x1                   	// #1
  41926c:	ret
  419270:	mov	w0, #0x1                   	// #1
  419274:	ret
  419278:	mov	w0, #0x1                   	// #1
  41927c:	ret
  419280:	sub	sp, sp, #0x70
  419284:	cmp	w2, #0x105
  419288:	stp	x29, x30, [sp, #32]
  41928c:	add	x29, sp, #0x20
  419290:	stp	x19, x20, [sp, #48]
  419294:	mov	x19, x1
  419298:	stp	x21, x22, [sp, #64]
  41929c:	mov	x22, x4
  4192a0:	stp	x23, x24, [sp, #80]
  4192a4:	mov	x23, x0
  4192a8:	mov	w24, w5
  4192ac:	stp	x25, x26, [sp, #96]
  4192b0:	mov	w25, w6
  4192b4:	mov	w26, w7
  4192b8:	ldp	x20, x21, [sp, #112]
  4192bc:	b.eq	41a018 <ferror@plt+0x16a48>  // b.none
  4192c0:	b.gt	419348 <ferror@plt+0x15d78>
  4192c4:	cmp	w2, #0xbf
  4192c8:	b.eq	41a2e0 <ferror@plt+0x16d10>  // b.none
  4192cc:	b.gt	419308 <ferror@plt+0x15d38>
  4192d0:	cmp	w2, #0xa3
  4192d4:	b.eq	419400 <ferror@plt+0x15e30>  // b.none
  4192d8:	cmp	w2, #0xb7
  4192dc:	b.eq	419f9c <ferror@plt+0x169cc>  // b.none
  4192e0:	cmp	w2, #0x97
  4192e4:	b.eq	41a304 <ferror@plt+0x16d34>  // b.none
  4192e8:	mov	w0, #0x1                   	// #1
  4192ec:	ldp	x29, x30, [sp, #32]
  4192f0:	ldp	x19, x20, [sp, #48]
  4192f4:	ldp	x21, x22, [sp, #64]
  4192f8:	ldp	x23, x24, [sp, #80]
  4192fc:	ldp	x25, x26, [sp, #96]
  419300:	add	sp, sp, #0x70
  419304:	ret
  419308:	cmp	w2, #0xd3
  41930c:	b.eq	419fc0 <ferror@plt+0x169f0>  // b.none
  419310:	cmp	w2, #0xf4
  419314:	b.ne	4192e8 <ferror@plt+0x15d18>  // b.any
  419318:	ldr	w2, [x1, #696]
  41931c:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  419320:	cmp	x4, #0x0
  419324:	mov	w2, #0x1                   	// #1
  419328:	mov	x4, #0x3                   	// #3
  41932c:	mov	x3, #0x0                   	// #0
  419330:	csel	x4, x22, x4, eq  // eq = none
  419334:	str	x20, [sp]
  419338:	strb	w2, [sp, #8]
  41933c:	mov	x2, #0x111                 	// #273
  419340:	str	x21, [sp, #16]
  419344:	b	419e44 <ferror@plt+0x16874>
  419348:	cmp	w2, #0x1b4
  41934c:	b.eq	419f68 <ferror@plt+0x16998>  // b.none
  419350:	b.gt	4193c4 <ferror@plt+0x15df4>
  419354:	cmp	w2, #0x160
  419358:	b.eq	419e24 <ferror@plt+0x16854>  // b.none
  41935c:	cmp	w2, #0x161
  419360:	b.eq	419e4c <ferror@plt+0x1687c>  // b.none
  419364:	cmp	w2, #0x10f
  419368:	b.ne	4192e8 <ferror@plt+0x15d18>  // b.any
  41936c:	ldr	w2, [x1, #700]
  419370:	cbnz	w2, 419390 <ferror@plt+0x15dc0>
  419374:	mov	w2, #0x1                   	// #1
  419378:	str	x20, [sp]
  41937c:	strb	w2, [sp, #8]
  419380:	mov	x3, #0x0                   	// #0
  419384:	str	x21, [sp, #16]
  419388:	mov	x2, #0x112                 	// #274
  41938c:	bl	417dbc <ferror@plt+0x147ec>
  419390:	ldr	w0, [x19, #704]
  419394:	cbnz	w0, 4192e8 <ferror@plt+0x15d18>
  419398:	mov	w0, #0x1                   	// #1
  41939c:	mov	w7, w26
  4193a0:	mov	w6, w25
  4193a4:	mov	w5, w24
  4193a8:	mov	x4, x22
  4193ac:	mov	x3, #0x0                   	// #0
  4193b0:	mov	x2, #0x113                 	// #275
  4193b4:	str	x20, [sp]
  4193b8:	strb	w0, [sp, #8]
  4193bc:	str	x21, [sp, #16]
  4193c0:	b	419e18 <ferror@plt+0x16848>
  4193c4:	cmp	w2, #0x1c2
  4193c8:	b.eq	41a328 <ferror@plt+0x16d58>  // b.none
  4193cc:	cmp	w2, #0x1cf
  4193d0:	b.ne	4192e8 <ferror@plt+0x15d18>  // b.any
  4193d4:	ldr	w2, [x1, #1336]
  4193d8:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  4193dc:	mov	w2, #0x1                   	// #1
  4193e0:	cmp	x4, #0x0
  4193e4:	cset	x4, ne  // ne = any
  4193e8:	mov	x3, #0x0                   	// #0
  4193ec:	str	x20, [sp]
  4193f0:	strb	w2, [sp, #8]
  4193f4:	mov	x2, #0x1c6                 	// #454
  4193f8:	str	x21, [sp, #16]
  4193fc:	b	419e44 <ferror@plt+0x16874>
  419400:	ldr	w2, [x1, #272]
  419404:	cbnz	w2, 419424 <ferror@plt+0x15e54>
  419408:	mov	w2, #0x1                   	// #1
  41940c:	str	x20, [sp]
  419410:	strb	w2, [sp, #8]
  419414:	mov	x3, #0x0                   	// #0
  419418:	str	x21, [sp, #16]
  41941c:	mov	x2, #0x9b                  	// #155
  419420:	bl	417dbc <ferror@plt+0x147ec>
  419424:	ldr	w0, [x19, #336]
  419428:	cbnz	w0, 419464 <ferror@plt+0x15e94>
  41942c:	cmp	x22, #0x0
  419430:	mov	w0, #0x1                   	// #1
  419434:	str	x20, [sp]
  419438:	mov	w7, w26
  41943c:	strb	w0, [sp, #8]
  419440:	mov	w6, w25
  419444:	str	x21, [sp, #16]
  419448:	mov	w5, w24
  41944c:	cset	x4, ne  // ne = any
  419450:	mov	x1, x19
  419454:	mov	x0, x23
  419458:	mov	x3, #0x0                   	// #0
  41945c:	mov	x2, #0xab                  	// #171
  419460:	bl	417dbc <ferror@plt+0x147ec>
  419464:	ldr	w0, [x19, #364]
  419468:	cbnz	w0, 4194a0 <ferror@plt+0x15ed0>
  41946c:	mov	w0, #0x1                   	// #1
  419470:	str	x20, [sp]
  419474:	strb	w0, [sp, #8]
  419478:	mov	w7, w26
  41947c:	str	x21, [sp, #16]
  419480:	mov	w6, w25
  419484:	mov	w5, w24
  419488:	mov	x4, x22
  41948c:	mov	x1, x19
  419490:	mov	x0, x23
  419494:	mov	x3, #0x0                   	// #0
  419498:	mov	x2, #0xb3                  	// #179
  41949c:	bl	417dbc <ferror@plt+0x147ec>
  4194a0:	ldr	w0, [x19, #368]
  4194a4:	cbnz	w0, 4194dc <ferror@plt+0x15f0c>
  4194a8:	mov	w0, #0x1                   	// #1
  4194ac:	str	x20, [sp]
  4194b0:	strb	w0, [sp, #8]
  4194b4:	mov	w7, w26
  4194b8:	str	x21, [sp, #16]
  4194bc:	mov	w6, w25
  4194c0:	mov	w5, w24
  4194c4:	mov	x4, x22
  4194c8:	mov	x1, x19
  4194cc:	mov	x0, x23
  4194d0:	mov	x3, #0x0                   	// #0
  4194d4:	mov	x2, #0xb4                  	// #180
  4194d8:	bl	417dbc <ferror@plt+0x147ec>
  4194dc:	ldr	w0, [x19, #436]
  4194e0:	cbnz	w0, 419518 <ferror@plt+0x15f48>
  4194e4:	mov	w0, #0x1                   	// #1
  4194e8:	str	x20, [sp]
  4194ec:	strb	w0, [sp, #8]
  4194f0:	mov	w7, w26
  4194f4:	str	x21, [sp, #16]
  4194f8:	mov	w6, w25
  4194fc:	mov	w5, w24
  419500:	mov	x4, x22
  419504:	mov	x1, x19
  419508:	mov	x0, x23
  41950c:	mov	x3, #0x0                   	// #0
  419510:	mov	x2, #0xc9                  	// #201
  419514:	bl	417dbc <ferror@plt+0x147ec>
  419518:	ldr	w0, [x19, #456]
  41951c:	cbnz	w0, 419554 <ferror@plt+0x15f84>
  419520:	mov	w0, #0x1                   	// #1
  419524:	str	x20, [sp]
  419528:	strb	w0, [sp, #8]
  41952c:	mov	w7, w26
  419530:	str	x21, [sp, #16]
  419534:	mov	w6, w25
  419538:	mov	w5, w24
  41953c:	mov	x4, x22
  419540:	mov	x1, x19
  419544:	mov	x0, x23
  419548:	mov	x3, #0x0                   	// #0
  41954c:	mov	x2, #0xcf                  	// #207
  419550:	bl	417dbc <ferror@plt+0x147ec>
  419554:	ldr	w0, [x19, #552]
  419558:	cbnz	w0, 419590 <ferror@plt+0x15fc0>
  41955c:	mov	w0, #0x1                   	// #1
  419560:	str	x20, [sp]
  419564:	strb	w0, [sp, #8]
  419568:	mov	w7, w26
  41956c:	str	x21, [sp, #16]
  419570:	mov	w6, w25
  419574:	mov	w5, w24
  419578:	mov	x4, x22
  41957c:	mov	x1, x19
  419580:	mov	x0, x23
  419584:	mov	x3, #0x0                   	// #0
  419588:	mov	x2, #0xe9                  	// #233
  41958c:	bl	417dbc <ferror@plt+0x147ec>
  419590:	ldr	w0, [x19, #576]
  419594:	cbnz	w0, 4195cc <ferror@plt+0x15ffc>
  419598:	mov	w0, #0x1                   	// #1
  41959c:	str	x20, [sp]
  4195a0:	strb	w0, [sp, #8]
  4195a4:	mov	w7, w26
  4195a8:	str	x21, [sp, #16]
  4195ac:	mov	w6, w25
  4195b0:	mov	w5, w24
  4195b4:	mov	x4, x22
  4195b8:	mov	x1, x19
  4195bc:	mov	x0, x23
  4195c0:	mov	x3, #0x0                   	// #0
  4195c4:	mov	x2, #0xef                  	// #239
  4195c8:	bl	417dbc <ferror@plt+0x147ec>
  4195cc:	ldr	w0, [x19, #644]
  4195d0:	cbnz	w0, 41960c <ferror@plt+0x1603c>
  4195d4:	cmp	x22, #0x0
  4195d8:	mov	w0, #0x1                   	// #1
  4195dc:	str	x20, [sp]
  4195e0:	mov	w7, w26
  4195e4:	strb	w0, [sp, #8]
  4195e8:	mov	w6, w25
  4195ec:	str	x21, [sp, #16]
  4195f0:	mov	w5, w24
  4195f4:	cset	x4, ne  // ne = any
  4195f8:	mov	x1, x19
  4195fc:	mov	x0, x23
  419600:	mov	x3, #0x0                   	// #0
  419604:	mov	x2, #0x105                 	// #261
  419608:	bl	417dbc <ferror@plt+0x147ec>
  41960c:	ldr	w0, [x19, #648]
  419610:	cbnz	w0, 419648 <ferror@plt+0x16078>
  419614:	mov	w0, #0x1                   	// #1
  419618:	str	x20, [sp]
  41961c:	strb	w0, [sp, #8]
  419620:	mov	w7, w26
  419624:	str	x21, [sp, #16]
  419628:	mov	w6, w25
  41962c:	mov	w5, w24
  419630:	mov	x4, x22
  419634:	mov	x1, x19
  419638:	mov	x0, x23
  41963c:	mov	x3, #0x0                   	// #0
  419640:	mov	x2, #0x106                 	// #262
  419644:	bl	417dbc <ferror@plt+0x147ec>
  419648:	ldr	w0, [x19, #692]
  41964c:	cbnz	w0, 419684 <ferror@plt+0x160b4>
  419650:	mov	w0, #0x1                   	// #1
  419654:	str	x20, [sp]
  419658:	strb	w0, [sp, #8]
  41965c:	mov	w7, w26
  419660:	str	x21, [sp, #16]
  419664:	mov	w6, w25
  419668:	mov	w5, w24
  41966c:	mov	x4, x22
  419670:	mov	x1, x19
  419674:	mov	x0, x23
  419678:	mov	x3, #0x0                   	// #0
  41967c:	mov	x2, #0x10f                 	// #271
  419680:	bl	417dbc <ferror@plt+0x147ec>
  419684:	ldr	w0, [x19, #740]
  419688:	cbnz	w0, 4196c0 <ferror@plt+0x160f0>
  41968c:	mov	w0, #0x1                   	// #1
  419690:	str	x20, [sp]
  419694:	strb	w0, [sp, #8]
  419698:	mov	w7, w26
  41969c:	str	x21, [sp, #16]
  4196a0:	mov	w6, w25
  4196a4:	mov	w5, w24
  4196a8:	mov	x4, x22
  4196ac:	mov	x1, x19
  4196b0:	mov	x0, x23
  4196b4:	mov	x3, #0x0                   	// #0
  4196b8:	mov	x2, #0x11d                 	// #285
  4196bc:	bl	417dbc <ferror@plt+0x147ec>
  4196c0:	ldr	w0, [x19, #792]
  4196c4:	cbnz	w0, 4196fc <ferror@plt+0x1612c>
  4196c8:	mov	w0, #0x1                   	// #1
  4196cc:	str	x20, [sp]
  4196d0:	strb	w0, [sp, #8]
  4196d4:	mov	w7, w26
  4196d8:	str	x21, [sp, #16]
  4196dc:	mov	w6, w25
  4196e0:	mov	w5, w24
  4196e4:	mov	x4, x22
  4196e8:	mov	x1, x19
  4196ec:	mov	x0, x23
  4196f0:	mov	x3, #0x0                   	// #0
  4196f4:	mov	x2, #0x12b                 	// #299
  4196f8:	bl	417dbc <ferror@plt+0x147ec>
  4196fc:	ldr	w0, [x19, #808]
  419700:	cbnz	w0, 419740 <ferror@plt+0x16170>
  419704:	cmp	x22, #0x0
  419708:	mov	w0, #0x1                   	// #1
  41970c:	cset	x4, ne  // ne = any
  419710:	str	x20, [sp]
  419714:	strb	w0, [sp, #8]
  419718:	mov	w7, w26
  41971c:	str	x21, [sp, #16]
  419720:	lsl	x4, x4, x0
  419724:	mov	w6, w25
  419728:	mov	w5, w24
  41972c:	mov	x1, x19
  419730:	mov	x0, x23
  419734:	mov	x3, #0x0                   	// #0
  419738:	mov	x2, #0x12f                 	// #303
  41973c:	bl	417dbc <ferror@plt+0x147ec>
  419740:	ldr	w0, [x19, #812]
  419744:	cbnz	w0, 41977c <ferror@plt+0x161ac>
  419748:	mov	w0, #0x1                   	// #1
  41974c:	str	x20, [sp]
  419750:	strb	w0, [sp, #8]
  419754:	mov	w7, w26
  419758:	str	x21, [sp, #16]
  41975c:	mov	w6, w25
  419760:	mov	w5, w24
  419764:	mov	x4, x22
  419768:	mov	x1, x19
  41976c:	mov	x0, x23
  419770:	mov	x3, #0x0                   	// #0
  419774:	mov	x2, #0x130                 	// #304
  419778:	bl	417dbc <ferror@plt+0x147ec>
  41977c:	ldr	w0, [x19, #816]
  419780:	cbnz	w0, 4197b8 <ferror@plt+0x161e8>
  419784:	mov	w0, #0x1                   	// #1
  419788:	str	x20, [sp]
  41978c:	strb	w0, [sp, #8]
  419790:	mov	w7, w26
  419794:	str	x21, [sp, #16]
  419798:	mov	w6, w25
  41979c:	mov	w5, w24
  4197a0:	mov	x4, x22
  4197a4:	mov	x1, x19
  4197a8:	mov	x0, x23
  4197ac:	mov	x3, #0x0                   	// #0
  4197b0:	mov	x2, #0x131                 	// #305
  4197b4:	bl	417dbc <ferror@plt+0x147ec>
  4197b8:	ldr	w0, [x19, #820]
  4197bc:	cbnz	w0, 4197f4 <ferror@plt+0x16224>
  4197c0:	mov	w0, #0x1                   	// #1
  4197c4:	str	x20, [sp]
  4197c8:	strb	w0, [sp, #8]
  4197cc:	mov	w7, w26
  4197d0:	str	x21, [sp, #16]
  4197d4:	mov	w6, w25
  4197d8:	mov	w5, w24
  4197dc:	mov	x4, x22
  4197e0:	mov	x1, x19
  4197e4:	mov	x0, x23
  4197e8:	mov	x3, #0x0                   	// #0
  4197ec:	mov	x2, #0x132                 	// #306
  4197f0:	bl	417dbc <ferror@plt+0x147ec>
  4197f4:	ldr	w0, [x19, #824]
  4197f8:	cbnz	w0, 419830 <ferror@plt+0x16260>
  4197fc:	mov	w0, #0x1                   	// #1
  419800:	str	x20, [sp]
  419804:	strb	w0, [sp, #8]
  419808:	mov	w7, w26
  41980c:	str	x21, [sp, #16]
  419810:	mov	w6, w25
  419814:	mov	w5, w24
  419818:	mov	x4, x22
  41981c:	mov	x1, x19
  419820:	mov	x0, x23
  419824:	mov	x3, #0x0                   	// #0
  419828:	mov	x2, #0x133                 	// #307
  41982c:	bl	417dbc <ferror@plt+0x147ec>
  419830:	ldr	w0, [x19, #828]
  419834:	cbnz	w0, 41986c <ferror@plt+0x1629c>
  419838:	mov	w0, #0x1                   	// #1
  41983c:	str	x20, [sp]
  419840:	strb	w0, [sp, #8]
  419844:	mov	w7, w26
  419848:	str	x21, [sp, #16]
  41984c:	mov	w6, w25
  419850:	mov	w5, w24
  419854:	mov	x4, x22
  419858:	mov	x1, x19
  41985c:	mov	x0, x23
  419860:	mov	x3, #0x0                   	// #0
  419864:	mov	x2, #0x134                 	// #308
  419868:	bl	417dbc <ferror@plt+0x147ec>
  41986c:	ldr	w0, [x19, #832]
  419870:	cbnz	w0, 4198a8 <ferror@plt+0x162d8>
  419874:	mov	w0, #0x1                   	// #1
  419878:	str	x20, [sp]
  41987c:	strb	w0, [sp, #8]
  419880:	mov	w7, w26
  419884:	str	x21, [sp, #16]
  419888:	mov	w6, w25
  41988c:	mov	w5, w24
  419890:	mov	x4, x22
  419894:	mov	x1, x19
  419898:	mov	x0, x23
  41989c:	mov	x3, #0x0                   	// #0
  4198a0:	mov	x2, #0x135                 	// #309
  4198a4:	bl	417dbc <ferror@plt+0x147ec>
  4198a8:	ldr	w0, [x19, #868]
  4198ac:	cbnz	w0, 4198e4 <ferror@plt+0x16314>
  4198b0:	mov	w0, #0x1                   	// #1
  4198b4:	str	x20, [sp]
  4198b8:	strb	w0, [sp, #8]
  4198bc:	mov	w7, w26
  4198c0:	str	x21, [sp, #16]
  4198c4:	mov	w6, w25
  4198c8:	mov	w5, w24
  4198cc:	mov	x4, x22
  4198d0:	mov	x1, x19
  4198d4:	mov	x0, x23
  4198d8:	mov	x3, #0x0                   	// #0
  4198dc:	mov	x2, #0x141                 	// #321
  4198e0:	bl	417dbc <ferror@plt+0x147ec>
  4198e4:	ldr	w0, [x19, #900]
  4198e8:	cbnz	w0, 419920 <ferror@plt+0x16350>
  4198ec:	mov	w0, #0x1                   	// #1
  4198f0:	str	x20, [sp]
  4198f4:	strb	w0, [sp, #8]
  4198f8:	mov	w7, w26
  4198fc:	str	x21, [sp, #16]
  419900:	mov	w6, w25
  419904:	mov	w5, w24
  419908:	mov	x4, x22
  41990c:	mov	x1, x19
  419910:	mov	x0, x23
  419914:	mov	x3, #0x0                   	// #0
  419918:	mov	x2, #0x14c                 	// #332
  41991c:	bl	417dbc <ferror@plt+0x147ec>
  419920:	ldr	w0, [x19, #904]
  419924:	cbnz	w0, 41995c <ferror@plt+0x1638c>
  419928:	mov	w0, #0x1                   	// #1
  41992c:	str	x20, [sp]
  419930:	strb	w0, [sp, #8]
  419934:	mov	w7, w26
  419938:	str	x21, [sp, #16]
  41993c:	mov	w6, w25
  419940:	mov	w5, w24
  419944:	mov	x4, x22
  419948:	mov	x1, x19
  41994c:	mov	x0, x23
  419950:	mov	x3, #0x0                   	// #0
  419954:	mov	x2, #0x14d                 	// #333
  419958:	bl	417dbc <ferror@plt+0x147ec>
  41995c:	ldr	w0, [x19, #932]
  419960:	cbnz	w0, 419998 <ferror@plt+0x163c8>
  419964:	mov	w0, #0x1                   	// #1
  419968:	str	x20, [sp]
  41996c:	strb	w0, [sp, #8]
  419970:	mov	w7, w26
  419974:	str	x21, [sp, #16]
  419978:	mov	w6, w25
  41997c:	mov	w5, w24
  419980:	mov	x4, x22
  419984:	mov	x1, x19
  419988:	mov	x0, x23
  41998c:	mov	x3, #0x0                   	// #0
  419990:	mov	x2, #0x155                 	// #341
  419994:	bl	417dbc <ferror@plt+0x147ec>
  419998:	ldr	w0, [x19, #964]
  41999c:	cbnz	w0, 4199d4 <ferror@plt+0x16404>
  4199a0:	mov	w0, #0x1                   	// #1
  4199a4:	str	x20, [sp]
  4199a8:	strb	w0, [sp, #8]
  4199ac:	mov	w7, w26
  4199b0:	str	x21, [sp, #16]
  4199b4:	mov	w6, w25
  4199b8:	mov	w5, w24
  4199bc:	mov	x4, x22
  4199c0:	mov	x1, x19
  4199c4:	mov	x0, x23
  4199c8:	mov	x3, #0x0                   	// #0
  4199cc:	mov	x2, #0x15e                 	// #350
  4199d0:	bl	417dbc <ferror@plt+0x147ec>
  4199d4:	ldr	w0, [x19, #972]
  4199d8:	cbnz	w0, 419a10 <ferror@plt+0x16440>
  4199dc:	mov	w0, #0x1                   	// #1
  4199e0:	str	x20, [sp]
  4199e4:	strb	w0, [sp, #8]
  4199e8:	mov	w7, w26
  4199ec:	str	x21, [sp, #16]
  4199f0:	mov	w6, w25
  4199f4:	mov	w5, w24
  4199f8:	mov	x4, x22
  4199fc:	mov	x1, x19
  419a00:	mov	x0, x23
  419a04:	mov	x3, #0x0                   	// #0
  419a08:	mov	x2, #0x160                 	// #352
  419a0c:	bl	417dbc <ferror@plt+0x147ec>
  419a10:	ldr	w0, [x19, #1000]
  419a14:	cbnz	w0, 419a4c <ferror@plt+0x1647c>
  419a18:	mov	w0, #0x1                   	// #1
  419a1c:	str	x20, [sp]
  419a20:	strb	w0, [sp, #8]
  419a24:	mov	w7, w26
  419a28:	str	x21, [sp, #16]
  419a2c:	mov	w6, w25
  419a30:	mov	w5, w24
  419a34:	mov	x4, x22
  419a38:	mov	x1, x19
  419a3c:	mov	x0, x23
  419a40:	mov	x3, #0x0                   	// #0
  419a44:	mov	x2, #0x168                 	// #360
  419a48:	bl	417dbc <ferror@plt+0x147ec>
  419a4c:	ldr	w0, [x19, #1056]
  419a50:	cbnz	w0, 419a88 <ferror@plt+0x164b8>
  419a54:	mov	w0, #0x1                   	// #1
  419a58:	str	x20, [sp]
  419a5c:	strb	w0, [sp, #8]
  419a60:	mov	w7, w26
  419a64:	str	x21, [sp, #16]
  419a68:	mov	w6, w25
  419a6c:	mov	w5, w24
  419a70:	mov	x4, x22
  419a74:	mov	x1, x19
  419a78:	mov	x0, x23
  419a7c:	mov	x3, #0x0                   	// #0
  419a80:	mov	x2, #0x176                 	// #374
  419a84:	bl	417dbc <ferror@plt+0x147ec>
  419a88:	ldr	w0, [x19, #1064]
  419a8c:	cbnz	w0, 419ac4 <ferror@plt+0x164f4>
  419a90:	mov	w0, #0x1                   	// #1
  419a94:	str	x20, [sp]
  419a98:	strb	w0, [sp, #8]
  419a9c:	mov	w7, w26
  419aa0:	str	x21, [sp, #16]
  419aa4:	mov	w6, w25
  419aa8:	mov	w5, w24
  419aac:	mov	x4, x22
  419ab0:	mov	x1, x19
  419ab4:	mov	x0, x23
  419ab8:	mov	x3, #0x0                   	// #0
  419abc:	mov	x2, #0x178                 	// #376
  419ac0:	bl	417dbc <ferror@plt+0x147ec>
  419ac4:	ldr	w0, [x19, #1072]
  419ac8:	cbnz	w0, 419b00 <ferror@plt+0x16530>
  419acc:	mov	w0, #0x1                   	// #1
  419ad0:	str	x20, [sp]
  419ad4:	strb	w0, [sp, #8]
  419ad8:	mov	w7, w26
  419adc:	str	x21, [sp, #16]
  419ae0:	mov	w6, w25
  419ae4:	mov	w5, w24
  419ae8:	mov	x4, x22
  419aec:	mov	x1, x19
  419af0:	mov	x0, x23
  419af4:	mov	x3, #0x0                   	// #0
  419af8:	mov	x2, #0x17b                 	// #379
  419afc:	bl	417dbc <ferror@plt+0x147ec>
  419b00:	ldr	w0, [x19, #1128]
  419b04:	cbnz	w0, 419b3c <ferror@plt+0x1656c>
  419b08:	mov	w0, #0x1                   	// #1
  419b0c:	str	x20, [sp]
  419b10:	strb	w0, [sp, #8]
  419b14:	mov	w7, w26
  419b18:	str	x21, [sp, #16]
  419b1c:	mov	w6, w25
  419b20:	mov	w5, w24
  419b24:	mov	x4, x22
  419b28:	mov	x1, x19
  419b2c:	mov	x0, x23
  419b30:	mov	x3, #0x0                   	// #0
  419b34:	mov	x2, #0x18d                 	// #397
  419b38:	bl	417dbc <ferror@plt+0x147ec>
  419b3c:	ldr	w0, [x19, #1132]
  419b40:	cbnz	w0, 419b78 <ferror@plt+0x165a8>
  419b44:	mov	w0, #0x1                   	// #1
  419b48:	str	x20, [sp]
  419b4c:	strb	w0, [sp, #8]
  419b50:	mov	w7, w26
  419b54:	str	x21, [sp, #16]
  419b58:	mov	w6, w25
  419b5c:	mov	w5, w24
  419b60:	mov	x4, x22
  419b64:	mov	x1, x19
  419b68:	mov	x0, x23
  419b6c:	mov	x3, #0x0                   	// #0
  419b70:	mov	x2, #0x18e                 	// #398
  419b74:	bl	417dbc <ferror@plt+0x147ec>
  419b78:	ldr	w0, [x19, #1152]
  419b7c:	cbnz	w0, 419bbc <ferror@plt+0x165ec>
  419b80:	cmp	x22, #0x0
  419b84:	mov	w0, #0x1                   	// #1
  419b88:	str	x20, [sp]
  419b8c:	mov	x4, #0x3                   	// #3
  419b90:	strb	w0, [sp, #8]
  419b94:	mov	w7, w26
  419b98:	str	x21, [sp, #16]
  419b9c:	mov	w6, w25
  419ba0:	mov	w5, w24
  419ba4:	csel	x4, x4, xzr, ne  // ne = any
  419ba8:	mov	x1, x19
  419bac:	mov	x0, x23
  419bb0:	mov	x3, #0x0                   	// #0
  419bb4:	mov	x2, #0x193                 	// #403
  419bb8:	bl	417dbc <ferror@plt+0x147ec>
  419bbc:	ldr	w0, [x19, #1160]
  419bc0:	cbnz	w0, 419bfc <ferror@plt+0x1662c>
  419bc4:	cmp	x22, #0x0
  419bc8:	mov	w0, #0x1                   	// #1
  419bcc:	str	x20, [sp]
  419bd0:	mov	w7, w26
  419bd4:	strb	w0, [sp, #8]
  419bd8:	mov	w6, w25
  419bdc:	str	x21, [sp, #16]
  419be0:	mov	w5, w24
  419be4:	cset	x4, ne  // ne = any
  419be8:	mov	x1, x19
  419bec:	mov	x0, x23
  419bf0:	mov	x3, #0x0                   	// #0
  419bf4:	mov	x2, #0x196                 	// #406
  419bf8:	bl	417dbc <ferror@plt+0x147ec>
  419bfc:	ldr	w0, [x19, #1172]
  419c00:	cbnz	w0, 419c40 <ferror@plt+0x16670>
  419c04:	cmp	x22, #0x0
  419c08:	mov	w0, #0x1                   	// #1
  419c0c:	cset	x4, ne  // ne = any
  419c10:	str	x20, [sp]
  419c14:	strb	w0, [sp, #8]
  419c18:	mov	w7, w26
  419c1c:	str	x21, [sp, #16]
  419c20:	lsl	x4, x4, x0
  419c24:	mov	w6, w25
  419c28:	mov	w5, w24
  419c2c:	mov	x1, x19
  419c30:	mov	x0, x23
  419c34:	mov	x3, #0x0                   	// #0
  419c38:	mov	x2, #0x19a                 	// #410
  419c3c:	bl	417dbc <ferror@plt+0x147ec>
  419c40:	ldr	w0, [x19, #1176]
  419c44:	cbnz	w0, 419c7c <ferror@plt+0x166ac>
  419c48:	mov	w0, #0x1                   	// #1
  419c4c:	str	x20, [sp]
  419c50:	strb	w0, [sp, #8]
  419c54:	mov	w7, w26
  419c58:	str	x21, [sp, #16]
  419c5c:	mov	w6, w25
  419c60:	mov	w5, w24
  419c64:	mov	x4, x22
  419c68:	mov	x1, x19
  419c6c:	mov	x0, x23
  419c70:	mov	x3, #0x0                   	// #0
  419c74:	mov	x2, #0x19b                 	// #411
  419c78:	bl	417dbc <ferror@plt+0x147ec>
  419c7c:	ldr	w0, [x19, #1224]
  419c80:	cbnz	w0, 419cb8 <ferror@plt+0x166e8>
  419c84:	mov	w0, #0x1                   	// #1
  419c88:	str	x20, [sp]
  419c8c:	strb	w0, [sp, #8]
  419c90:	mov	w7, w26
  419c94:	str	x21, [sp, #16]
  419c98:	mov	w6, w25
  419c9c:	mov	w5, w24
  419ca0:	mov	x4, x22
  419ca4:	mov	x1, x19
  419ca8:	mov	x0, x23
  419cac:	mov	x3, #0x0                   	// #0
  419cb0:	mov	x2, #0x1a7                 	// #423
  419cb4:	bl	417dbc <ferror@plt+0x147ec>
  419cb8:	ldr	w0, [x19, #1264]
  419cbc:	cbnz	w0, 419cf4 <ferror@plt+0x16724>
  419cc0:	mov	w0, #0x1                   	// #1
  419cc4:	str	x20, [sp]
  419cc8:	strb	w0, [sp, #8]
  419ccc:	mov	w7, w26
  419cd0:	str	x21, [sp, #16]
  419cd4:	mov	w6, w25
  419cd8:	mov	w5, w24
  419cdc:	mov	x4, x22
  419ce0:	mov	x1, x19
  419ce4:	mov	x0, x23
  419ce8:	mov	x3, #0x0                   	// #0
  419cec:	mov	x2, #0x1b1                 	// #433
  419cf0:	bl	417dbc <ferror@plt+0x147ec>
  419cf4:	ldr	w0, [x19, #1288]
  419cf8:	cbnz	w0, 419d30 <ferror@plt+0x16760>
  419cfc:	mov	w0, #0x1                   	// #1
  419d00:	str	x20, [sp]
  419d04:	strb	w0, [sp, #8]
  419d08:	mov	w7, w26
  419d0c:	str	x21, [sp, #16]
  419d10:	mov	w6, w25
  419d14:	mov	w5, w24
  419d18:	mov	x4, x22
  419d1c:	mov	x1, x19
  419d20:	mov	x0, x23
  419d24:	mov	x3, #0x0                   	// #0
  419d28:	mov	x2, #0x1b7                 	// #439
  419d2c:	bl	417dbc <ferror@plt+0x147ec>
  419d30:	ldr	w0, [x19, #1312]
  419d34:	cbnz	w0, 419d6c <ferror@plt+0x1679c>
  419d38:	mov	w0, #0x1                   	// #1
  419d3c:	str	x20, [sp]
  419d40:	strb	w0, [sp, #8]
  419d44:	mov	w7, w26
  419d48:	str	x21, [sp, #16]
  419d4c:	mov	w6, w25
  419d50:	mov	w5, w24
  419d54:	mov	x4, x22
  419d58:	mov	x1, x19
  419d5c:	mov	x0, x23
  419d60:	mov	x3, #0x0                   	// #0
  419d64:	mov	x2, #0x1bd                 	// #445
  419d68:	bl	417dbc <ferror@plt+0x147ec>
  419d6c:	ldr	w0, [x19, #1316]
  419d70:	cbnz	w0, 419dac <ferror@plt+0x167dc>
  419d74:	cmp	x22, #0x0
  419d78:	mov	w0, #0x1                   	// #1
  419d7c:	str	x20, [sp]
  419d80:	mov	w7, w26
  419d84:	strb	w0, [sp, #8]
  419d88:	mov	w6, w25
  419d8c:	str	x21, [sp, #16]
  419d90:	mov	w5, w24
  419d94:	cset	x4, ne  // ne = any
  419d98:	mov	x1, x19
  419d9c:	mov	x0, x23
  419da0:	mov	x3, #0x0                   	// #0
  419da4:	mov	x2, #0x1be                 	// #446
  419da8:	bl	417dbc <ferror@plt+0x147ec>
  419dac:	ldr	w0, [x19, #1324]
  419db0:	cbnz	w0, 419de8 <ferror@plt+0x16818>
  419db4:	mov	w0, #0x1                   	// #1
  419db8:	str	x20, [sp]
  419dbc:	strb	w0, [sp, #8]
  419dc0:	mov	w7, w26
  419dc4:	str	x21, [sp, #16]
  419dc8:	mov	w6, w25
  419dcc:	mov	w5, w24
  419dd0:	mov	x4, x22
  419dd4:	mov	x1, x19
  419dd8:	mov	x0, x23
  419ddc:	mov	x3, #0x0                   	// #0
  419de0:	mov	x2, #0x1c2                 	// #450
  419de4:	bl	417dbc <ferror@plt+0x147ec>
  419de8:	ldr	w0, [x19, #1416]
  419dec:	cbnz	w0, 4192e8 <ferror@plt+0x15d18>
  419df0:	mov	w7, w26
  419df4:	mov	w6, w25
  419df8:	mov	w5, w24
  419dfc:	mov	x4, x22
  419e00:	mov	w0, #0x1                   	// #1
  419e04:	mov	x3, #0x0                   	// #0
  419e08:	mov	x2, #0x1d9                 	// #473
  419e0c:	str	x20, [sp]
  419e10:	strb	w0, [sp, #8]
  419e14:	str	x21, [sp, #16]
  419e18:	mov	x1, x19
  419e1c:	mov	x0, x23
  419e20:	b	419e44 <ferror@plt+0x16874>
  419e24:	ldr	w2, [x1, #492]
  419e28:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  419e2c:	mov	w2, #0x1                   	// #1
  419e30:	mov	x3, #0x0                   	// #0
  419e34:	str	x20, [sp]
  419e38:	strb	w2, [sp, #8]
  419e3c:	mov	x2, #0xd9                  	// #217
  419e40:	str	x21, [sp, #16]
  419e44:	bl	417dbc <ferror@plt+0x147ec>
  419e48:	b	4192e8 <ferror@plt+0x15d18>
  419e4c:	ldr	w2, [x1, #572]
  419e50:	cbnz	w2, 419e70 <ferror@plt+0x168a0>
  419e54:	mov	w2, #0x1                   	// #1
  419e58:	str	x20, [sp]
  419e5c:	strb	w2, [sp, #8]
  419e60:	mov	x3, #0x0                   	// #0
  419e64:	str	x21, [sp, #16]
  419e68:	mov	x2, #0xee                  	// #238
  419e6c:	bl	417dbc <ferror@plt+0x147ec>
  419e70:	ldr	w0, [x19, #808]
  419e74:	cbnz	w0, 419eb4 <ferror@plt+0x168e4>
  419e78:	cmp	x22, #0x0
  419e7c:	mov	w0, #0x1                   	// #1
  419e80:	cset	x4, ne  // ne = any
  419e84:	str	x20, [sp]
  419e88:	strb	w0, [sp, #8]
  419e8c:	mov	w7, w26
  419e90:	str	x21, [sp, #16]
  419e94:	lsl	x4, x4, x0
  419e98:	mov	w6, w25
  419e9c:	mov	w5, w24
  419ea0:	mov	x1, x19
  419ea4:	mov	x0, x23
  419ea8:	mov	x3, #0x0                   	// #0
  419eac:	mov	x2, #0x12f                 	// #303
  419eb0:	bl	417dbc <ferror@plt+0x147ec>
  419eb4:	ldr	w0, [x19, #940]
  419eb8:	cbnz	w0, 419ef0 <ferror@plt+0x16920>
  419ebc:	mov	w0, #0x1                   	// #1
  419ec0:	str	x20, [sp]
  419ec4:	strb	w0, [sp, #8]
  419ec8:	mov	w7, w26
  419ecc:	str	x21, [sp, #16]
  419ed0:	mov	w6, w25
  419ed4:	mov	w5, w24
  419ed8:	mov	x4, x22
  419edc:	mov	x1, x19
  419ee0:	mov	x0, x23
  419ee4:	mov	x3, #0x0                   	// #0
  419ee8:	mov	x2, #0x157                 	// #343
  419eec:	bl	417dbc <ferror@plt+0x147ec>
  419ef0:	ldr	w0, [x19, #992]
  419ef4:	cbnz	w0, 419f2c <ferror@plt+0x1695c>
  419ef8:	mov	w0, #0x1                   	// #1
  419efc:	str	x20, [sp]
  419f00:	strb	w0, [sp, #8]
  419f04:	mov	w7, w26
  419f08:	str	x21, [sp, #16]
  419f0c:	mov	w6, w25
  419f10:	mov	w5, w24
  419f14:	mov	x4, x22
  419f18:	mov	x1, x19
  419f1c:	mov	x0, x23
  419f20:	mov	x3, #0x0                   	// #0
  419f24:	mov	x2, #0x166                 	// #358
  419f28:	bl	417dbc <ferror@plt+0x147ec>
  419f2c:	ldr	w0, [x19, #1000]
  419f30:	cbnz	w0, 419f68 <ferror@plt+0x16998>
  419f34:	mov	w0, #0x1                   	// #1
  419f38:	str	x20, [sp]
  419f3c:	strb	w0, [sp, #8]
  419f40:	mov	w7, w26
  419f44:	str	x21, [sp, #16]
  419f48:	mov	w6, w25
  419f4c:	mov	w5, w24
  419f50:	mov	x4, x22
  419f54:	mov	x1, x19
  419f58:	mov	x0, x23
  419f5c:	mov	x3, #0x0                   	// #0
  419f60:	mov	x2, #0x168                 	// #360
  419f64:	bl	417dbc <ferror@plt+0x147ec>
  419f68:	ldr	w0, [x19, #1388]
  419f6c:	cbnz	w0, 4192e8 <ferror@plt+0x15d18>
  419f70:	mov	w0, #0x1                   	// #1
  419f74:	mov	w7, w26
  419f78:	mov	w6, w25
  419f7c:	mov	w5, w24
  419f80:	mov	x4, x22
  419f84:	mov	x3, #0x0                   	// #0
  419f88:	mov	x2, #0x1d3                 	// #467
  419f8c:	str	x20, [sp]
  419f90:	strb	w0, [sp, #8]
  419f94:	str	x21, [sp, #16]
  419f98:	b	419e18 <ferror@plt+0x16848>
  419f9c:	ldr	w2, [x1, #576]
  419fa0:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  419fa4:	mov	w2, #0x1                   	// #1
  419fa8:	mov	x3, #0x0                   	// #0
  419fac:	str	x20, [sp]
  419fb0:	strb	w2, [sp, #8]
  419fb4:	mov	x2, #0xef                  	// #239
  419fb8:	str	x21, [sp, #16]
  419fbc:	b	419e44 <ferror@plt+0x16874>
  419fc0:	ldr	w2, [x1, #600]
  419fc4:	cbnz	w2, 419fe4 <ferror@plt+0x16a14>
  419fc8:	mov	w2, #0x1                   	// #1
  419fcc:	str	x20, [sp]
  419fd0:	strb	w2, [sp, #8]
  419fd4:	mov	x3, #0x0                   	// #0
  419fd8:	str	x21, [sp, #16]
  419fdc:	mov	x2, #0xf7                  	// #247
  419fe0:	bl	417dbc <ferror@plt+0x147ec>
  419fe4:	ldr	w0, [x19, #1112]
  419fe8:	cbnz	w0, 4192e8 <ferror@plt+0x15d18>
  419fec:	mov	w0, #0x1                   	// #1
  419ff0:	mov	w7, w26
  419ff4:	mov	w6, w25
  419ff8:	mov	w5, w24
  419ffc:	mov	x4, x22
  41a000:	mov	x3, #0x0                   	// #0
  41a004:	mov	x2, #0x189                 	// #393
  41a008:	str	x20, [sp]
  41a00c:	strb	w0, [sp, #8]
  41a010:	str	x21, [sp, #16]
  41a014:	b	419e18 <ferror@plt+0x16848>
  41a018:	ldr	w4, [x1, #608]
  41a01c:	cbnz	w4, 41a068 <ferror@plt+0x16a98>
  41a020:	cbz	x22, 41a034 <ferror@plt+0x16a64>
  41a024:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a028:	ldr	w0, [x0, #1204]
  41a02c:	cmp	w0, #0x0
  41a030:	cset	w4, gt
  41a034:	mov	w0, #0x1                   	// #1
  41a038:	str	x20, [sp]
  41a03c:	strb	w0, [sp, #8]
  41a040:	mov	w7, w26
  41a044:	str	x21, [sp, #16]
  41a048:	mov	w6, w25
  41a04c:	mov	w5, w24
  41a050:	sxtw	x4, w4
  41a054:	mov	x1, x19
  41a058:	mov	x0, x23
  41a05c:	mov	x3, #0x0                   	// #0
  41a060:	mov	x2, #0xfa                  	// #250
  41a064:	bl	417dbc <ferror@plt+0x147ec>
  41a068:	ldr	w4, [x19, #612]
  41a06c:	cbnz	w4, 41a0b8 <ferror@plt+0x16ae8>
  41a070:	cbz	x22, 41a084 <ferror@plt+0x16ab4>
  41a074:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a078:	ldr	w0, [x0, #1204]
  41a07c:	cmp	w0, #0x0
  41a080:	cset	w4, gt
  41a084:	mov	w0, #0x1                   	// #1
  41a088:	str	x20, [sp]
  41a08c:	strb	w0, [sp, #8]
  41a090:	mov	w7, w26
  41a094:	str	x21, [sp, #16]
  41a098:	mov	w6, w25
  41a09c:	mov	w5, w24
  41a0a0:	sxtw	x4, w4
  41a0a4:	mov	x1, x19
  41a0a8:	mov	x0, x23
  41a0ac:	mov	x3, #0x0                   	// #0
  41a0b0:	mov	x2, #0xfb                  	// #251
  41a0b4:	bl	417dbc <ferror@plt+0x147ec>
  41a0b8:	ldr	w4, [x19, #616]
  41a0bc:	cbnz	w4, 41a108 <ferror@plt+0x16b38>
  41a0c0:	cbz	x22, 41a0d4 <ferror@plt+0x16b04>
  41a0c4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a0c8:	ldr	w0, [x0, #1204]
  41a0cc:	cmp	w0, #0x1
  41a0d0:	cset	w4, gt
  41a0d4:	mov	w0, #0x1                   	// #1
  41a0d8:	str	x20, [sp]
  41a0dc:	strb	w0, [sp, #8]
  41a0e0:	mov	w7, w26
  41a0e4:	str	x21, [sp, #16]
  41a0e8:	mov	w6, w25
  41a0ec:	mov	w5, w24
  41a0f0:	sxtw	x4, w4
  41a0f4:	mov	x1, x19
  41a0f8:	mov	x0, x23
  41a0fc:	mov	x3, #0x0                   	// #0
  41a100:	mov	x2, #0xfc                  	// #252
  41a104:	bl	417dbc <ferror@plt+0x147ec>
  41a108:	ldr	w4, [x19, #620]
  41a10c:	cbnz	w4, 41a158 <ferror@plt+0x16b88>
  41a110:	cbz	x22, 41a124 <ferror@plt+0x16b54>
  41a114:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a118:	ldr	w0, [x0, #1204]
  41a11c:	cmp	w0, #0x0
  41a120:	cset	w4, gt
  41a124:	mov	w0, #0x1                   	// #1
  41a128:	str	x20, [sp]
  41a12c:	strb	w0, [sp, #8]
  41a130:	mov	w7, w26
  41a134:	str	x21, [sp, #16]
  41a138:	mov	w6, w25
  41a13c:	mov	w5, w24
  41a140:	sxtw	x4, w4
  41a144:	mov	x1, x19
  41a148:	mov	x0, x23
  41a14c:	mov	x3, #0x0                   	// #0
  41a150:	mov	x2, #0xfe                  	// #254
  41a154:	bl	417dbc <ferror@plt+0x147ec>
  41a158:	ldr	w4, [x19, #624]
  41a15c:	cbnz	w4, 41a1a8 <ferror@plt+0x16bd8>
  41a160:	cbz	x22, 41a174 <ferror@plt+0x16ba4>
  41a164:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a168:	ldr	w0, [x0, #1204]
  41a16c:	cmp	w0, #0x1
  41a170:	cset	w4, gt
  41a174:	mov	w0, #0x1                   	// #1
  41a178:	str	x20, [sp]
  41a17c:	strb	w0, [sp, #8]
  41a180:	mov	w7, w26
  41a184:	str	x21, [sp, #16]
  41a188:	mov	w6, w25
  41a18c:	mov	w5, w24
  41a190:	sxtw	x4, w4
  41a194:	mov	x1, x19
  41a198:	mov	x0, x23
  41a19c:	mov	x3, #0x0                   	// #0
  41a1a0:	mov	x2, #0xff                  	// #255
  41a1a4:	bl	417dbc <ferror@plt+0x147ec>
  41a1a8:	ldr	w4, [x19, #632]
  41a1ac:	cbnz	w4, 41a1f8 <ferror@plt+0x16c28>
  41a1b0:	cbz	x22, 41a1c4 <ferror@plt+0x16bf4>
  41a1b4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a1b8:	ldr	w0, [x0, #1204]
  41a1bc:	cmp	w0, #0x0
  41a1c0:	cset	w4, gt
  41a1c4:	mov	w0, #0x1                   	// #1
  41a1c8:	str	x20, [sp]
  41a1cc:	strb	w0, [sp, #8]
  41a1d0:	mov	w7, w26
  41a1d4:	str	x21, [sp, #16]
  41a1d8:	mov	w6, w25
  41a1dc:	mov	w5, w24
  41a1e0:	sxtw	x4, w4
  41a1e4:	mov	x1, x19
  41a1e8:	mov	x0, x23
  41a1ec:	mov	x3, #0x0                   	// #0
  41a1f0:	mov	x2, #0x102                 	// #258
  41a1f4:	bl	417dbc <ferror@plt+0x147ec>
  41a1f8:	ldr	w4, [x19, #636]
  41a1fc:	cbnz	w4, 41a248 <ferror@plt+0x16c78>
  41a200:	cbz	x22, 41a214 <ferror@plt+0x16c44>
  41a204:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a208:	ldr	w0, [x0, #1204]
  41a20c:	cmp	w0, #0x1
  41a210:	cset	w4, gt
  41a214:	mov	w0, #0x1                   	// #1
  41a218:	str	x20, [sp]
  41a21c:	strb	w0, [sp, #8]
  41a220:	mov	w7, w26
  41a224:	str	x21, [sp, #16]
  41a228:	mov	w6, w25
  41a22c:	mov	w5, w24
  41a230:	sxtw	x4, w4
  41a234:	mov	x1, x19
  41a238:	mov	x0, x23
  41a23c:	mov	x3, #0x0                   	// #0
  41a240:	mov	x2, #0x103                 	// #259
  41a244:	bl	417dbc <ferror@plt+0x147ec>
  41a248:	ldr	w4, [x19, #640]
  41a24c:	cbnz	w4, 41a298 <ferror@plt+0x16cc8>
  41a250:	cbz	x22, 41a264 <ferror@plt+0x16c94>
  41a254:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a258:	ldr	w0, [x0, #1204]
  41a25c:	cmp	w0, #0x0
  41a260:	cset	w4, gt
  41a264:	mov	w0, #0x1                   	// #1
  41a268:	str	x20, [sp]
  41a26c:	strb	w0, [sp, #8]
  41a270:	mov	w7, w26
  41a274:	str	x21, [sp, #16]
  41a278:	mov	w6, w25
  41a27c:	mov	w5, w24
  41a280:	sxtw	x4, w4
  41a284:	mov	x1, x19
  41a288:	mov	x0, x23
  41a28c:	mov	x3, #0x0                   	// #0
  41a290:	mov	x2, #0x104                 	// #260
  41a294:	bl	417dbc <ferror@plt+0x147ec>
  41a298:	ldr	w4, [x19, #900]
  41a29c:	cbnz	w4, 4192e8 <ferror@plt+0x15d18>
  41a2a0:	cbz	x22, 41a2b4 <ferror@plt+0x16ce4>
  41a2a4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41a2a8:	ldr	w0, [x0, #1204]
  41a2ac:	cmp	w0, #0x0
  41a2b0:	cset	w4, gt
  41a2b4:	mov	w0, #0x1                   	// #1
  41a2b8:	mov	w7, w26
  41a2bc:	mov	w6, w25
  41a2c0:	mov	w5, w24
  41a2c4:	sxtw	x4, w4
  41a2c8:	mov	x3, #0x0                   	// #0
  41a2cc:	mov	x2, #0x14c                 	// #332
  41a2d0:	str	x20, [sp]
  41a2d4:	strb	w0, [sp, #8]
  41a2d8:	str	x21, [sp, #16]
  41a2dc:	b	419e18 <ferror@plt+0x16848>
  41a2e0:	ldr	w2, [x1, #800]
  41a2e4:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  41a2e8:	mov	w2, #0x1                   	// #1
  41a2ec:	mov	x3, #0x0                   	// #0
  41a2f0:	str	x20, [sp]
  41a2f4:	strb	w2, [sp, #8]
  41a2f8:	mov	x2, #0x12d                 	// #301
  41a2fc:	str	x21, [sp, #16]
  41a300:	b	419e44 <ferror@plt+0x16874>
  41a304:	ldr	w2, [x1, #1024]
  41a308:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  41a30c:	mov	w2, #0x1                   	// #1
  41a310:	mov	x3, #0x0                   	// #0
  41a314:	str	x20, [sp]
  41a318:	strb	w2, [sp, #8]
  41a31c:	mov	x2, #0x16e                 	// #366
  41a320:	str	x21, [sp, #16]
  41a324:	b	419e44 <ferror@plt+0x16874>
  41a328:	ldr	w2, [x1, #1372]
  41a32c:	cbnz	w2, 4192e8 <ferror@plt+0x15d18>
  41a330:	mov	w2, #0x1                   	// #1
  41a334:	mov	x3, #0x0                   	// #0
  41a338:	str	x20, [sp]
  41a33c:	strb	w2, [sp, #8]
  41a340:	mov	x2, #0x1cf                 	// #463
  41a344:	str	x21, [sp, #16]
  41a348:	b	419e44 <ferror@plt+0x16874>
  41a34c:	sub	sp, sp, #0x70
  41a350:	cmp	w2, #0xf4
  41a354:	stp	x29, x30, [sp, #32]
  41a358:	add	x29, sp, #0x20
  41a35c:	stp	x19, x20, [sp, #48]
  41a360:	mov	x19, x1
  41a364:	stp	x21, x22, [sp, #64]
  41a368:	mov	x22, x0
  41a36c:	stp	x23, x24, [sp, #80]
  41a370:	mov	x23, x4
  41a374:	mov	w24, w5
  41a378:	stp	x25, x26, [sp, #96]
  41a37c:	mov	w25, w6
  41a380:	mov	w26, w7
  41a384:	ldp	x20, x21, [sp, #112]
  41a388:	b.eq	41b040 <ferror@plt+0x17a70>  // b.none
  41a38c:	b.gt	41a43c <ferror@plt+0x16e6c>
  41a390:	cmp	w2, #0xbb
  41a394:	b.eq	41b558 <ferror@plt+0x17f88>  // b.none
  41a398:	b.gt	41a3d4 <ferror@plt+0x16e04>
  41a39c:	cmp	w2, #0xa3
  41a3a0:	b.eq	41a4b4 <ferror@plt+0x16ee4>  // b.none
  41a3a4:	cmp	w2, #0xb9
  41a3a8:	b.eq	41b4dc <ferror@plt+0x17f0c>  // b.none
  41a3ac:	cmp	w2, #0x97
  41a3b0:	b.eq	41b500 <ferror@plt+0x17f30>  // b.none
  41a3b4:	mov	w0, #0x1                   	// #1
  41a3b8:	ldp	x29, x30, [sp, #32]
  41a3bc:	ldp	x19, x20, [sp, #48]
  41a3c0:	ldp	x21, x22, [sp, #64]
  41a3c4:	ldp	x23, x24, [sp, #80]
  41a3c8:	ldp	x25, x26, [sp, #96]
  41a3cc:	add	sp, sp, #0x70
  41a3d0:	ret
  41a3d4:	cmp	w2, #0xd3
  41a3d8:	b.eq	41b1f0 <ferror@plt+0x17c20>  // b.none
  41a3dc:	cmp	w2, #0xec
  41a3e0:	b.ne	41a3b4 <ferror@plt+0x16de4>  // b.any
  41a3e4:	ldr	w2, [x1, #508]
  41a3e8:	cbnz	w2, 41a408 <ferror@plt+0x16e38>
  41a3ec:	mov	w2, #0x1                   	// #1
  41a3f0:	str	x20, [sp]
  41a3f4:	strb	w2, [sp, #8]
  41a3f8:	mov	x3, #0x0                   	// #0
  41a3fc:	str	x21, [sp, #16]
  41a400:	mov	x2, #0xdd                  	// #221
  41a404:	bl	417dbc <ferror@plt+0x147ec>
  41a408:	ldr	w0, [x19, #896]
  41a40c:	cbnz	w0, 41a3b4 <ferror@plt+0x16de4>
  41a410:	mov	w0, #0x1                   	// #1
  41a414:	mov	w7, w26
  41a418:	mov	w6, w25
  41a41c:	mov	w5, w24
  41a420:	mov	x4, x23
  41a424:	mov	x3, #0x0                   	// #0
  41a428:	mov	x2, #0x14b                 	// #331
  41a42c:	str	x20, [sp]
  41a430:	strb	w0, [sp, #8]
  41a434:	str	x21, [sp, #16]
  41a438:	b	41b034 <ferror@plt+0x17a64>
  41a43c:	cmp	w2, #0x161
  41a440:	b.eq	41b0dc <ferror@plt+0x17b0c>  // b.none
  41a444:	b.gt	41a480 <ferror@plt+0x16eb0>
  41a448:	cmp	w2, #0x105
  41a44c:	b.eq	41b214 <ferror@plt+0x17c44>  // b.none
  41a450:	cmp	w2, #0x160
  41a454:	b.ne	41a3b4 <ferror@plt+0x16de4>  // b.any
  41a458:	ldr	w2, [x1, #492]
  41a45c:	cbnz	w2, 41a3b4 <ferror@plt+0x16de4>
  41a460:	mov	w2, #0x1                   	// #1
  41a464:	mov	x3, #0x0                   	// #0
  41a468:	str	x20, [sp]
  41a46c:	strb	w2, [sp, #8]
  41a470:	mov	x2, #0xd9                  	// #217
  41a474:	str	x21, [sp, #16]
  41a478:	bl	417dbc <ferror@plt+0x147ec>
  41a47c:	b	41a3b4 <ferror@plt+0x16de4>
  41a480:	cmp	w2, #0x1b4
  41a484:	b.eq	41b1bc <ferror@plt+0x17bec>  // b.none
  41a488:	cmp	w2, #0x1c2
  41a48c:	b.ne	41a3b4 <ferror@plt+0x16de4>  // b.any
  41a490:	ldr	w2, [x1, #1372]
  41a494:	cbnz	w2, 41a3b4 <ferror@plt+0x16de4>
  41a498:	mov	w2, #0x1                   	// #1
  41a49c:	mov	x3, #0x0                   	// #0
  41a4a0:	str	x20, [sp]
  41a4a4:	strb	w2, [sp, #8]
  41a4a8:	mov	x2, #0x1cf                 	// #463
  41a4ac:	str	x21, [sp, #16]
  41a4b0:	b	41a478 <ferror@plt+0x16ea8>
  41a4b4:	ldr	w2, [x1, #272]
  41a4b8:	cbnz	w2, 41a4d8 <ferror@plt+0x16f08>
  41a4bc:	mov	w2, #0x1                   	// #1
  41a4c0:	str	x20, [sp]
  41a4c4:	strb	w2, [sp, #8]
  41a4c8:	mov	x3, #0x0                   	// #0
  41a4cc:	str	x21, [sp, #16]
  41a4d0:	mov	x2, #0x9b                  	// #155
  41a4d4:	bl	417dbc <ferror@plt+0x147ec>
  41a4d8:	ldr	w0, [x19, #296]
  41a4dc:	cbnz	w0, 41a518 <ferror@plt+0x16f48>
  41a4e0:	cmp	x23, #0x0
  41a4e4:	mov	w0, #0x1                   	// #1
  41a4e8:	str	x20, [sp]
  41a4ec:	mov	w7, w26
  41a4f0:	strb	w0, [sp, #8]
  41a4f4:	mov	w6, w25
  41a4f8:	str	x21, [sp, #16]
  41a4fc:	mov	w5, w24
  41a500:	cset	x4, ne  // ne = any
  41a504:	mov	x1, x19
  41a508:	mov	x0, x22
  41a50c:	mov	x3, #0x0                   	// #0
  41a510:	mov	x2, #0xa2                  	// #162
  41a514:	bl	417dbc <ferror@plt+0x147ec>
  41a518:	ldr	w0, [x19, #336]
  41a51c:	cbnz	w0, 41a558 <ferror@plt+0x16f88>
  41a520:	cmp	x23, #0x0
  41a524:	mov	w0, #0x1                   	// #1
  41a528:	str	x20, [sp]
  41a52c:	mov	w7, w26
  41a530:	strb	w0, [sp, #8]
  41a534:	mov	w6, w25
  41a538:	str	x21, [sp, #16]
  41a53c:	mov	w5, w24
  41a540:	cset	x4, ne  // ne = any
  41a544:	mov	x1, x19
  41a548:	mov	x0, x22
  41a54c:	mov	x3, #0x0                   	// #0
  41a550:	mov	x2, #0xab                  	// #171
  41a554:	bl	417dbc <ferror@plt+0x147ec>
  41a558:	ldr	w0, [x19, #364]
  41a55c:	cbnz	w0, 41a594 <ferror@plt+0x16fc4>
  41a560:	mov	w0, #0x1                   	// #1
  41a564:	str	x20, [sp]
  41a568:	strb	w0, [sp, #8]
  41a56c:	mov	w7, w26
  41a570:	str	x21, [sp, #16]
  41a574:	mov	w6, w25
  41a578:	mov	w5, w24
  41a57c:	mov	x4, x23
  41a580:	mov	x1, x19
  41a584:	mov	x0, x22
  41a588:	mov	x3, #0x0                   	// #0
  41a58c:	mov	x2, #0xb3                  	// #179
  41a590:	bl	417dbc <ferror@plt+0x147ec>
  41a594:	ldr	w0, [x19, #368]
  41a598:	cbnz	w0, 41a5d0 <ferror@plt+0x17000>
  41a59c:	mov	w0, #0x1                   	// #1
  41a5a0:	str	x20, [sp]
  41a5a4:	strb	w0, [sp, #8]
  41a5a8:	mov	w7, w26
  41a5ac:	str	x21, [sp, #16]
  41a5b0:	mov	w6, w25
  41a5b4:	mov	w5, w24
  41a5b8:	mov	x4, x23
  41a5bc:	mov	x1, x19
  41a5c0:	mov	x0, x22
  41a5c4:	mov	x3, #0x0                   	// #0
  41a5c8:	mov	x2, #0xb4                  	// #180
  41a5cc:	bl	417dbc <ferror@plt+0x147ec>
  41a5d0:	ldr	w0, [x19, #384]
  41a5d4:	cbnz	w0, 41a60c <ferror@plt+0x1703c>
  41a5d8:	mov	w0, #0x1                   	// #1
  41a5dc:	str	x20, [sp]
  41a5e0:	strb	w0, [sp, #8]
  41a5e4:	mov	w7, w26
  41a5e8:	str	x21, [sp, #16]
  41a5ec:	mov	w6, w25
  41a5f0:	mov	w5, w24
  41a5f4:	mov	x4, x23
  41a5f8:	mov	x1, x19
  41a5fc:	mov	x0, x22
  41a600:	mov	x3, #0x0                   	// #0
  41a604:	mov	x2, #0xb9                  	// #185
  41a608:	bl	417dbc <ferror@plt+0x147ec>
  41a60c:	ldr	w0, [x19, #388]
  41a610:	cbnz	w0, 41a648 <ferror@plt+0x17078>
  41a614:	mov	w0, #0x1                   	// #1
  41a618:	str	x20, [sp]
  41a61c:	strb	w0, [sp, #8]
  41a620:	mov	w7, w26
  41a624:	str	x21, [sp, #16]
  41a628:	mov	w6, w25
  41a62c:	mov	w5, w24
  41a630:	mov	x4, x23
  41a634:	mov	x1, x19
  41a638:	mov	x0, x22
  41a63c:	mov	x3, #0x0                   	// #0
  41a640:	mov	x2, #0xba                  	// #186
  41a644:	bl	417dbc <ferror@plt+0x147ec>
  41a648:	ldr	w0, [x19, #392]
  41a64c:	cbnz	w0, 41a684 <ferror@plt+0x170b4>
  41a650:	mov	w0, #0x1                   	// #1
  41a654:	str	x20, [sp]
  41a658:	strb	w0, [sp, #8]
  41a65c:	mov	w7, w26
  41a660:	str	x21, [sp, #16]
  41a664:	mov	w6, w25
  41a668:	mov	w5, w24
  41a66c:	mov	x4, x23
  41a670:	mov	x1, x19
  41a674:	mov	x0, x22
  41a678:	mov	x3, #0x0                   	// #0
  41a67c:	mov	x2, #0xbb                  	// #187
  41a680:	bl	417dbc <ferror@plt+0x147ec>
  41a684:	ldr	w0, [x19, #432]
  41a688:	cbnz	w0, 41a6c4 <ferror@plt+0x170f4>
  41a68c:	cmp	x23, #0x0
  41a690:	mov	w0, #0x1                   	// #1
  41a694:	str	x20, [sp]
  41a698:	mov	w7, w26
  41a69c:	strb	w0, [sp, #8]
  41a6a0:	mov	w6, w25
  41a6a4:	str	x21, [sp, #16]
  41a6a8:	mov	w5, w24
  41a6ac:	cset	x4, ne  // ne = any
  41a6b0:	mov	x1, x19
  41a6b4:	mov	x0, x22
  41a6b8:	mov	x3, #0x0                   	// #0
  41a6bc:	mov	x2, #0xc8                  	// #200
  41a6c0:	bl	417dbc <ferror@plt+0x147ec>
  41a6c4:	ldr	w0, [x19, #436]
  41a6c8:	cbnz	w0, 41a700 <ferror@plt+0x17130>
  41a6cc:	mov	w0, #0x1                   	// #1
  41a6d0:	str	x20, [sp]
  41a6d4:	strb	w0, [sp, #8]
  41a6d8:	mov	w7, w26
  41a6dc:	str	x21, [sp, #16]
  41a6e0:	mov	w6, w25
  41a6e4:	mov	w5, w24
  41a6e8:	mov	x4, x23
  41a6ec:	mov	x1, x19
  41a6f0:	mov	x0, x22
  41a6f4:	mov	x3, #0x0                   	// #0
  41a6f8:	mov	x2, #0xc9                  	// #201
  41a6fc:	bl	417dbc <ferror@plt+0x147ec>
  41a700:	ldr	w0, [x19, #448]
  41a704:	cbnz	w0, 41a73c <ferror@plt+0x1716c>
  41a708:	mov	w0, #0x1                   	// #1
  41a70c:	str	x20, [sp]
  41a710:	strb	w0, [sp, #8]
  41a714:	mov	w7, w26
  41a718:	str	x21, [sp, #16]
  41a71c:	mov	w6, w25
  41a720:	mov	w5, w24
  41a724:	mov	x4, x23
  41a728:	mov	x1, x19
  41a72c:	mov	x0, x22
  41a730:	mov	x3, #0x0                   	// #0
  41a734:	mov	x2, #0xcd                  	// #205
  41a738:	bl	417dbc <ferror@plt+0x147ec>
  41a73c:	ldr	w0, [x19, #456]
  41a740:	cbnz	w0, 41a778 <ferror@plt+0x171a8>
  41a744:	mov	w0, #0x1                   	// #1
  41a748:	str	x20, [sp]
  41a74c:	strb	w0, [sp, #8]
  41a750:	mov	w7, w26
  41a754:	str	x21, [sp, #16]
  41a758:	mov	w6, w25
  41a75c:	mov	w5, w24
  41a760:	mov	x4, x23
  41a764:	mov	x1, x19
  41a768:	mov	x0, x22
  41a76c:	mov	x3, #0x0                   	// #0
  41a770:	mov	x2, #0xcf                  	// #207
  41a774:	bl	417dbc <ferror@plt+0x147ec>
  41a778:	ldr	w0, [x19, #508]
  41a77c:	cbnz	w0, 41a7b4 <ferror@plt+0x171e4>
  41a780:	mov	w0, #0x1                   	// #1
  41a784:	str	x20, [sp]
  41a788:	strb	w0, [sp, #8]
  41a78c:	mov	w7, w26
  41a790:	str	x21, [sp, #16]
  41a794:	mov	w6, w25
  41a798:	mov	w5, w24
  41a79c:	mov	x4, x23
  41a7a0:	mov	x1, x19
  41a7a4:	mov	x0, x22
  41a7a8:	mov	x3, #0x0                   	// #0
  41a7ac:	mov	x2, #0xdd                  	// #221
  41a7b0:	bl	417dbc <ferror@plt+0x147ec>
  41a7b4:	ldr	w0, [x19, #644]
  41a7b8:	cbnz	w0, 41a7f4 <ferror@plt+0x17224>
  41a7bc:	cmp	x23, #0x0
  41a7c0:	mov	w0, #0x1                   	// #1
  41a7c4:	str	x20, [sp]
  41a7c8:	mov	w7, w26
  41a7cc:	strb	w0, [sp, #8]
  41a7d0:	mov	w6, w25
  41a7d4:	str	x21, [sp, #16]
  41a7d8:	mov	w5, w24
  41a7dc:	cset	x4, ne  // ne = any
  41a7e0:	mov	x1, x19
  41a7e4:	mov	x0, x22
  41a7e8:	mov	x3, #0x0                   	// #0
  41a7ec:	mov	x2, #0x105                 	// #261
  41a7f0:	bl	417dbc <ferror@plt+0x147ec>
  41a7f4:	ldr	w0, [x19, #648]
  41a7f8:	cbnz	w0, 41a830 <ferror@plt+0x17260>
  41a7fc:	mov	w0, #0x1                   	// #1
  41a800:	str	x20, [sp]
  41a804:	strb	w0, [sp, #8]
  41a808:	mov	w7, w26
  41a80c:	str	x21, [sp, #16]
  41a810:	mov	w6, w25
  41a814:	mov	w5, w24
  41a818:	mov	x4, x23
  41a81c:	mov	x1, x19
  41a820:	mov	x0, x22
  41a824:	mov	x3, #0x0                   	// #0
  41a828:	mov	x2, #0x106                 	// #262
  41a82c:	bl	417dbc <ferror@plt+0x147ec>
  41a830:	ldr	w0, [x19, #728]
  41a834:	cbnz	w0, 41a86c <ferror@plt+0x1729c>
  41a838:	mov	w0, #0x1                   	// #1
  41a83c:	str	x20, [sp]
  41a840:	strb	w0, [sp, #8]
  41a844:	mov	w7, w26
  41a848:	str	x21, [sp, #16]
  41a84c:	mov	w6, w25
  41a850:	mov	w5, w24
  41a854:	mov	x4, x23
  41a858:	mov	x1, x19
  41a85c:	mov	x0, x22
  41a860:	mov	x3, #0x0                   	// #0
  41a864:	mov	x2, #0x11a                 	// #282
  41a868:	bl	417dbc <ferror@plt+0x147ec>
  41a86c:	ldr	w0, [x19, #740]
  41a870:	cbnz	w0, 41a8a8 <ferror@plt+0x172d8>
  41a874:	mov	w0, #0x1                   	// #1
  41a878:	str	x20, [sp]
  41a87c:	strb	w0, [sp, #8]
  41a880:	mov	w7, w26
  41a884:	str	x21, [sp, #16]
  41a888:	mov	w6, w25
  41a88c:	mov	w5, w24
  41a890:	mov	x4, x23
  41a894:	mov	x1, x19
  41a898:	mov	x0, x22
  41a89c:	mov	x3, #0x0                   	// #0
  41a8a0:	mov	x2, #0x11d                 	// #285
  41a8a4:	bl	417dbc <ferror@plt+0x147ec>
  41a8a8:	ldr	w0, [x19, #792]
  41a8ac:	cbnz	w0, 41a8e4 <ferror@plt+0x17314>
  41a8b0:	mov	w0, #0x1                   	// #1
  41a8b4:	str	x20, [sp]
  41a8b8:	strb	w0, [sp, #8]
  41a8bc:	mov	w7, w26
  41a8c0:	str	x21, [sp, #16]
  41a8c4:	mov	w6, w25
  41a8c8:	mov	w5, w24
  41a8cc:	mov	x4, x23
  41a8d0:	mov	x1, x19
  41a8d4:	mov	x0, x22
  41a8d8:	mov	x3, #0x0                   	// #0
  41a8dc:	mov	x2, #0x12b                 	// #299
  41a8e0:	bl	417dbc <ferror@plt+0x147ec>
  41a8e4:	ldr	w0, [x19, #812]
  41a8e8:	cbnz	w0, 41a920 <ferror@plt+0x17350>
  41a8ec:	mov	w0, #0x1                   	// #1
  41a8f0:	str	x20, [sp]
  41a8f4:	strb	w0, [sp, #8]
  41a8f8:	mov	w7, w26
  41a8fc:	str	x21, [sp, #16]
  41a900:	mov	w6, w25
  41a904:	mov	w5, w24
  41a908:	mov	x4, x23
  41a90c:	mov	x1, x19
  41a910:	mov	x0, x22
  41a914:	mov	x3, #0x0                   	// #0
  41a918:	mov	x2, #0x130                 	// #304
  41a91c:	bl	417dbc <ferror@plt+0x147ec>
  41a920:	ldr	w0, [x19, #816]
  41a924:	cbnz	w0, 41a95c <ferror@plt+0x1738c>
  41a928:	mov	w0, #0x1                   	// #1
  41a92c:	str	x20, [sp]
  41a930:	strb	w0, [sp, #8]
  41a934:	mov	w7, w26
  41a938:	str	x21, [sp, #16]
  41a93c:	mov	w6, w25
  41a940:	mov	w5, w24
  41a944:	mov	x4, x23
  41a948:	mov	x1, x19
  41a94c:	mov	x0, x22
  41a950:	mov	x3, #0x0                   	// #0
  41a954:	mov	x2, #0x131                 	// #305
  41a958:	bl	417dbc <ferror@plt+0x147ec>
  41a95c:	ldr	w0, [x19, #820]
  41a960:	cbnz	w0, 41a998 <ferror@plt+0x173c8>
  41a964:	mov	w0, #0x1                   	// #1
  41a968:	str	x20, [sp]
  41a96c:	strb	w0, [sp, #8]
  41a970:	mov	w7, w26
  41a974:	str	x21, [sp, #16]
  41a978:	mov	w6, w25
  41a97c:	mov	w5, w24
  41a980:	mov	x4, x23
  41a984:	mov	x1, x19
  41a988:	mov	x0, x22
  41a98c:	mov	x3, #0x0                   	// #0
  41a990:	mov	x2, #0x132                 	// #306
  41a994:	bl	417dbc <ferror@plt+0x147ec>
  41a998:	ldr	w0, [x19, #824]
  41a99c:	cbnz	w0, 41a9d4 <ferror@plt+0x17404>
  41a9a0:	mov	w0, #0x1                   	// #1
  41a9a4:	str	x20, [sp]
  41a9a8:	strb	w0, [sp, #8]
  41a9ac:	mov	w7, w26
  41a9b0:	str	x21, [sp, #16]
  41a9b4:	mov	w6, w25
  41a9b8:	mov	w5, w24
  41a9bc:	mov	x4, x23
  41a9c0:	mov	x1, x19
  41a9c4:	mov	x0, x22
  41a9c8:	mov	x3, #0x0                   	// #0
  41a9cc:	mov	x2, #0x133                 	// #307
  41a9d0:	bl	417dbc <ferror@plt+0x147ec>
  41a9d4:	ldr	w0, [x19, #828]
  41a9d8:	cbnz	w0, 41aa10 <ferror@plt+0x17440>
  41a9dc:	mov	w0, #0x1                   	// #1
  41a9e0:	str	x20, [sp]
  41a9e4:	strb	w0, [sp, #8]
  41a9e8:	mov	w7, w26
  41a9ec:	str	x21, [sp, #16]
  41a9f0:	mov	w6, w25
  41a9f4:	mov	w5, w24
  41a9f8:	mov	x4, x23
  41a9fc:	mov	x1, x19
  41aa00:	mov	x0, x22
  41aa04:	mov	x3, #0x0                   	// #0
  41aa08:	mov	x2, #0x134                 	// #308
  41aa0c:	bl	417dbc <ferror@plt+0x147ec>
  41aa10:	ldr	w0, [x19, #868]
  41aa14:	cbnz	w0, 41aa4c <ferror@plt+0x1747c>
  41aa18:	mov	w0, #0x1                   	// #1
  41aa1c:	str	x20, [sp]
  41aa20:	strb	w0, [sp, #8]
  41aa24:	mov	w7, w26
  41aa28:	str	x21, [sp, #16]
  41aa2c:	mov	w6, w25
  41aa30:	mov	w5, w24
  41aa34:	mov	x4, x23
  41aa38:	mov	x1, x19
  41aa3c:	mov	x0, x22
  41aa40:	mov	x3, #0x0                   	// #0
  41aa44:	mov	x2, #0x141                 	// #321
  41aa48:	bl	417dbc <ferror@plt+0x147ec>
  41aa4c:	ldr	w0, [x19, #876]
  41aa50:	cbnz	w0, 41aa88 <ferror@plt+0x174b8>
  41aa54:	mov	w0, #0x1                   	// #1
  41aa58:	str	x20, [sp]
  41aa5c:	strb	w0, [sp, #8]
  41aa60:	mov	w7, w26
  41aa64:	str	x21, [sp, #16]
  41aa68:	mov	w6, w25
  41aa6c:	mov	w5, w24
  41aa70:	mov	x4, x23
  41aa74:	mov	x1, x19
  41aa78:	mov	x0, x22
  41aa7c:	mov	x3, #0x0                   	// #0
  41aa80:	mov	x2, #0x143                 	// #323
  41aa84:	bl	417dbc <ferror@plt+0x147ec>
  41aa88:	ldr	w0, [x19, #900]
  41aa8c:	cbnz	w0, 41aac4 <ferror@plt+0x174f4>
  41aa90:	mov	w0, #0x1                   	// #1
  41aa94:	str	x20, [sp]
  41aa98:	strb	w0, [sp, #8]
  41aa9c:	mov	w7, w26
  41aaa0:	str	x21, [sp, #16]
  41aaa4:	mov	w6, w25
  41aaa8:	mov	w5, w24
  41aaac:	mov	x4, x23
  41aab0:	mov	x1, x19
  41aab4:	mov	x0, x22
  41aab8:	mov	x3, #0x0                   	// #0
  41aabc:	mov	x2, #0x14c                 	// #332
  41aac0:	bl	417dbc <ferror@plt+0x147ec>
  41aac4:	ldr	w0, [x19, #904]
  41aac8:	cbnz	w0, 41ab00 <ferror@plt+0x17530>
  41aacc:	mov	w0, #0x1                   	// #1
  41aad0:	str	x20, [sp]
  41aad4:	strb	w0, [sp, #8]
  41aad8:	mov	w7, w26
  41aadc:	str	x21, [sp, #16]
  41aae0:	mov	w6, w25
  41aae4:	mov	w5, w24
  41aae8:	mov	x4, x23
  41aaec:	mov	x1, x19
  41aaf0:	mov	x0, x22
  41aaf4:	mov	x3, #0x0                   	// #0
  41aaf8:	mov	x2, #0x14d                 	// #333
  41aafc:	bl	417dbc <ferror@plt+0x147ec>
  41ab00:	ldr	w0, [x19, #932]
  41ab04:	cbnz	w0, 41ab3c <ferror@plt+0x1756c>
  41ab08:	mov	w0, #0x1                   	// #1
  41ab0c:	str	x20, [sp]
  41ab10:	strb	w0, [sp, #8]
  41ab14:	mov	w7, w26
  41ab18:	str	x21, [sp, #16]
  41ab1c:	mov	w6, w25
  41ab20:	mov	w5, w24
  41ab24:	mov	x4, x23
  41ab28:	mov	x1, x19
  41ab2c:	mov	x0, x22
  41ab30:	mov	x3, #0x0                   	// #0
  41ab34:	mov	x2, #0x155                 	// #341
  41ab38:	bl	417dbc <ferror@plt+0x147ec>
  41ab3c:	ldr	w0, [x19, #964]
  41ab40:	cbnz	w0, 41ab78 <ferror@plt+0x175a8>
  41ab44:	mov	w0, #0x1                   	// #1
  41ab48:	str	x20, [sp]
  41ab4c:	strb	w0, [sp, #8]
  41ab50:	mov	w7, w26
  41ab54:	str	x21, [sp, #16]
  41ab58:	mov	w6, w25
  41ab5c:	mov	w5, w24
  41ab60:	mov	x4, x23
  41ab64:	mov	x1, x19
  41ab68:	mov	x0, x22
  41ab6c:	mov	x3, #0x0                   	// #0
  41ab70:	mov	x2, #0x15e                 	// #350
  41ab74:	bl	417dbc <ferror@plt+0x147ec>
  41ab78:	ldr	w0, [x19, #972]
  41ab7c:	cbnz	w0, 41abb4 <ferror@plt+0x175e4>
  41ab80:	mov	w0, #0x1                   	// #1
  41ab84:	str	x20, [sp]
  41ab88:	strb	w0, [sp, #8]
  41ab8c:	mov	w7, w26
  41ab90:	str	x21, [sp, #16]
  41ab94:	mov	w6, w25
  41ab98:	mov	w5, w24
  41ab9c:	mov	x4, x23
  41aba0:	mov	x1, x19
  41aba4:	mov	x0, x22
  41aba8:	mov	x3, #0x0                   	// #0
  41abac:	mov	x2, #0x160                 	// #352
  41abb0:	bl	417dbc <ferror@plt+0x147ec>
  41abb4:	ldr	w0, [x19, #980]
  41abb8:	cbnz	w0, 41abf0 <ferror@plt+0x17620>
  41abbc:	mov	w0, #0x1                   	// #1
  41abc0:	str	x20, [sp]
  41abc4:	strb	w0, [sp, #8]
  41abc8:	mov	w7, w26
  41abcc:	str	x21, [sp, #16]
  41abd0:	mov	w6, w25
  41abd4:	mov	w5, w24
  41abd8:	mov	x4, x23
  41abdc:	mov	x1, x19
  41abe0:	mov	x0, x22
  41abe4:	mov	x3, #0x0                   	// #0
  41abe8:	mov	x2, #0x162                 	// #354
  41abec:	bl	417dbc <ferror@plt+0x147ec>
  41abf0:	ldr	w0, [x19, #1052]
  41abf4:	cbnz	w0, 41ac2c <ferror@plt+0x1765c>
  41abf8:	mov	w0, #0x1                   	// #1
  41abfc:	str	x20, [sp]
  41ac00:	strb	w0, [sp, #8]
  41ac04:	mov	w7, w26
  41ac08:	str	x21, [sp, #16]
  41ac0c:	mov	w6, w25
  41ac10:	mov	w5, w24
  41ac14:	mov	x4, x23
  41ac18:	mov	x1, x19
  41ac1c:	mov	x0, x22
  41ac20:	mov	x3, #0x0                   	// #0
  41ac24:	mov	x2, #0x175                 	// #373
  41ac28:	bl	417dbc <ferror@plt+0x147ec>
  41ac2c:	ldr	w0, [x19, #1056]
  41ac30:	cbnz	w0, 41ac68 <ferror@plt+0x17698>
  41ac34:	mov	w0, #0x1                   	// #1
  41ac38:	str	x20, [sp]
  41ac3c:	strb	w0, [sp, #8]
  41ac40:	mov	w7, w26
  41ac44:	str	x21, [sp, #16]
  41ac48:	mov	w6, w25
  41ac4c:	mov	w5, w24
  41ac50:	mov	x4, x23
  41ac54:	mov	x1, x19
  41ac58:	mov	x0, x22
  41ac5c:	mov	x3, #0x0                   	// #0
  41ac60:	mov	x2, #0x176                 	// #374
  41ac64:	bl	417dbc <ferror@plt+0x147ec>
  41ac68:	ldr	w0, [x19, #1064]
  41ac6c:	cbnz	w0, 41aca4 <ferror@plt+0x176d4>
  41ac70:	mov	w0, #0x1                   	// #1
  41ac74:	str	x20, [sp]
  41ac78:	strb	w0, [sp, #8]
  41ac7c:	mov	w7, w26
  41ac80:	str	x21, [sp, #16]
  41ac84:	mov	w6, w25
  41ac88:	mov	w5, w24
  41ac8c:	mov	x4, x23
  41ac90:	mov	x1, x19
  41ac94:	mov	x0, x22
  41ac98:	mov	x3, #0x0                   	// #0
  41ac9c:	mov	x2, #0x178                 	// #376
  41aca0:	bl	417dbc <ferror@plt+0x147ec>
  41aca4:	ldr	w0, [x19, #1072]
  41aca8:	cbnz	w0, 41ace0 <ferror@plt+0x17710>
  41acac:	mov	w0, #0x1                   	// #1
  41acb0:	str	x20, [sp]
  41acb4:	strb	w0, [sp, #8]
  41acb8:	mov	w7, w26
  41acbc:	str	x21, [sp, #16]
  41acc0:	mov	w6, w25
  41acc4:	mov	w5, w24
  41acc8:	mov	x4, x23
  41accc:	mov	x1, x19
  41acd0:	mov	x0, x22
  41acd4:	mov	x3, #0x0                   	// #0
  41acd8:	mov	x2, #0x17b                 	// #379
  41acdc:	bl	417dbc <ferror@plt+0x147ec>
  41ace0:	ldr	w0, [x19, #1108]
  41ace4:	cbnz	w0, 41ad1c <ferror@plt+0x1774c>
  41ace8:	mov	w0, #0x1                   	// #1
  41acec:	str	x20, [sp]
  41acf0:	strb	w0, [sp, #8]
  41acf4:	mov	w7, w26
  41acf8:	str	x21, [sp, #16]
  41acfc:	mov	w6, w25
  41ad00:	mov	w5, w24
  41ad04:	mov	x4, x23
  41ad08:	mov	x1, x19
  41ad0c:	mov	x0, x22
  41ad10:	mov	x3, #0x0                   	// #0
  41ad14:	mov	x2, #0x188                 	// #392
  41ad18:	bl	417dbc <ferror@plt+0x147ec>
  41ad1c:	ldr	w0, [x19, #1128]
  41ad20:	cbnz	w0, 41ad58 <ferror@plt+0x17788>
  41ad24:	mov	w0, #0x1                   	// #1
  41ad28:	str	x20, [sp]
  41ad2c:	strb	w0, [sp, #8]
  41ad30:	mov	w7, w26
  41ad34:	str	x21, [sp, #16]
  41ad38:	mov	w6, w25
  41ad3c:	mov	w5, w24
  41ad40:	mov	x4, x23
  41ad44:	mov	x1, x19
  41ad48:	mov	x0, x22
  41ad4c:	mov	x3, #0x0                   	// #0
  41ad50:	mov	x2, #0x18d                 	// #397
  41ad54:	bl	417dbc <ferror@plt+0x147ec>
  41ad58:	ldr	w0, [x19, #1132]
  41ad5c:	cbnz	w0, 41ad94 <ferror@plt+0x177c4>
  41ad60:	mov	w0, #0x1                   	// #1
  41ad64:	str	x20, [sp]
  41ad68:	strb	w0, [sp, #8]
  41ad6c:	mov	w7, w26
  41ad70:	str	x21, [sp, #16]
  41ad74:	mov	w6, w25
  41ad78:	mov	w5, w24
  41ad7c:	mov	x4, x23
  41ad80:	mov	x1, x19
  41ad84:	mov	x0, x22
  41ad88:	mov	x3, #0x0                   	// #0
  41ad8c:	mov	x2, #0x18e                 	// #398
  41ad90:	bl	417dbc <ferror@plt+0x147ec>
  41ad94:	ldr	w0, [x19, #1152]
  41ad98:	cbnz	w0, 41add8 <ferror@plt+0x17808>
  41ad9c:	cmp	x23, #0x0
  41ada0:	mov	w0, #0x1                   	// #1
  41ada4:	str	x20, [sp]
  41ada8:	mov	x4, #0x3                   	// #3
  41adac:	strb	w0, [sp, #8]
  41adb0:	mov	w7, w26
  41adb4:	str	x21, [sp, #16]
  41adb8:	mov	w6, w25
  41adbc:	mov	w5, w24
  41adc0:	csel	x4, x4, xzr, ne  // ne = any
  41adc4:	mov	x1, x19
  41adc8:	mov	x0, x22
  41adcc:	mov	x3, #0x0                   	// #0
  41add0:	mov	x2, #0x193                 	// #403
  41add4:	bl	417dbc <ferror@plt+0x147ec>
  41add8:	ldr	w0, [x19, #1160]
  41addc:	cbnz	w0, 41ae18 <ferror@plt+0x17848>
  41ade0:	cmp	x23, #0x0
  41ade4:	mov	w0, #0x1                   	// #1
  41ade8:	str	x20, [sp]
  41adec:	mov	w7, w26
  41adf0:	strb	w0, [sp, #8]
  41adf4:	mov	w6, w25
  41adf8:	str	x21, [sp, #16]
  41adfc:	mov	w5, w24
  41ae00:	cset	x4, ne  // ne = any
  41ae04:	mov	x1, x19
  41ae08:	mov	x0, x22
  41ae0c:	mov	x3, #0x0                   	// #0
  41ae10:	mov	x2, #0x196                 	// #406
  41ae14:	bl	417dbc <ferror@plt+0x147ec>
  41ae18:	ldr	w0, [x19, #1172]
  41ae1c:	cbnz	w0, 41ae5c <ferror@plt+0x1788c>
  41ae20:	cmp	x23, #0x0
  41ae24:	mov	w0, #0x1                   	// #1
  41ae28:	cset	x4, ne  // ne = any
  41ae2c:	str	x20, [sp]
  41ae30:	strb	w0, [sp, #8]
  41ae34:	mov	w7, w26
  41ae38:	str	x21, [sp, #16]
  41ae3c:	lsl	x4, x4, x0
  41ae40:	mov	w6, w25
  41ae44:	mov	w5, w24
  41ae48:	mov	x1, x19
  41ae4c:	mov	x0, x22
  41ae50:	mov	x3, #0x0                   	// #0
  41ae54:	mov	x2, #0x19a                 	// #410
  41ae58:	bl	417dbc <ferror@plt+0x147ec>
  41ae5c:	ldr	w0, [x19, #1176]
  41ae60:	cbnz	w0, 41ae98 <ferror@plt+0x178c8>
  41ae64:	mov	w0, #0x1                   	// #1
  41ae68:	str	x20, [sp]
  41ae6c:	strb	w0, [sp, #8]
  41ae70:	mov	w7, w26
  41ae74:	str	x21, [sp, #16]
  41ae78:	mov	w6, w25
  41ae7c:	mov	w5, w24
  41ae80:	mov	x4, x23
  41ae84:	mov	x1, x19
  41ae88:	mov	x0, x22
  41ae8c:	mov	x3, #0x0                   	// #0
  41ae90:	mov	x2, #0x19b                 	// #411
  41ae94:	bl	417dbc <ferror@plt+0x147ec>
  41ae98:	ldr	w0, [x19, #1224]
  41ae9c:	cbnz	w0, 41aed4 <ferror@plt+0x17904>
  41aea0:	mov	w0, #0x1                   	// #1
  41aea4:	str	x20, [sp]
  41aea8:	strb	w0, [sp, #8]
  41aeac:	mov	w7, w26
  41aeb0:	str	x21, [sp, #16]
  41aeb4:	mov	w6, w25
  41aeb8:	mov	w5, w24
  41aebc:	mov	x4, x23
  41aec0:	mov	x1, x19
  41aec4:	mov	x0, x22
  41aec8:	mov	x3, #0x0                   	// #0
  41aecc:	mov	x2, #0x1a7                 	// #423
  41aed0:	bl	417dbc <ferror@plt+0x147ec>
  41aed4:	ldr	w0, [x19, #1264]
  41aed8:	cbnz	w0, 41af10 <ferror@plt+0x17940>
  41aedc:	mov	w0, #0x1                   	// #1
  41aee0:	str	x20, [sp]
  41aee4:	strb	w0, [sp, #8]
  41aee8:	mov	w7, w26
  41aeec:	str	x21, [sp, #16]
  41aef0:	mov	w6, w25
  41aef4:	mov	w5, w24
  41aef8:	mov	x4, x23
  41aefc:	mov	x1, x19
  41af00:	mov	x0, x22
  41af04:	mov	x3, #0x0                   	// #0
  41af08:	mov	x2, #0x1b1                 	// #433
  41af0c:	bl	417dbc <ferror@plt+0x147ec>
  41af10:	ldr	w0, [x19, #1288]
  41af14:	cbnz	w0, 41af4c <ferror@plt+0x1797c>
  41af18:	mov	w0, #0x1                   	// #1
  41af1c:	str	x20, [sp]
  41af20:	strb	w0, [sp, #8]
  41af24:	mov	w7, w26
  41af28:	str	x21, [sp, #16]
  41af2c:	mov	w6, w25
  41af30:	mov	w5, w24
  41af34:	mov	x4, x23
  41af38:	mov	x1, x19
  41af3c:	mov	x0, x22
  41af40:	mov	x3, #0x0                   	// #0
  41af44:	mov	x2, #0x1b7                 	// #439
  41af48:	bl	417dbc <ferror@plt+0x147ec>
  41af4c:	ldr	w0, [x19, #1312]
  41af50:	cbnz	w0, 41af88 <ferror@plt+0x179b8>
  41af54:	mov	w0, #0x1                   	// #1
  41af58:	str	x20, [sp]
  41af5c:	strb	w0, [sp, #8]
  41af60:	mov	w7, w26
  41af64:	str	x21, [sp, #16]
  41af68:	mov	w6, w25
  41af6c:	mov	w5, w24
  41af70:	mov	x4, x23
  41af74:	mov	x1, x19
  41af78:	mov	x0, x22
  41af7c:	mov	x3, #0x0                   	// #0
  41af80:	mov	x2, #0x1bd                 	// #445
  41af84:	bl	417dbc <ferror@plt+0x147ec>
  41af88:	ldr	w0, [x19, #1316]
  41af8c:	cbnz	w0, 41afc8 <ferror@plt+0x179f8>
  41af90:	cmp	x23, #0x0
  41af94:	mov	w0, #0x1                   	// #1
  41af98:	str	x20, [sp]
  41af9c:	mov	w7, w26
  41afa0:	strb	w0, [sp, #8]
  41afa4:	mov	w6, w25
  41afa8:	str	x21, [sp, #16]
  41afac:	mov	w5, w24
  41afb0:	cset	x4, ne  // ne = any
  41afb4:	mov	x1, x19
  41afb8:	mov	x0, x22
  41afbc:	mov	x3, #0x0                   	// #0
  41afc0:	mov	x2, #0x1be                 	// #446
  41afc4:	bl	417dbc <ferror@plt+0x147ec>
  41afc8:	ldr	w0, [x19, #1324]
  41afcc:	cbnz	w0, 41b004 <ferror@plt+0x17a34>
  41afd0:	mov	w0, #0x1                   	// #1
  41afd4:	str	x20, [sp]
  41afd8:	strb	w0, [sp, #8]
  41afdc:	mov	w7, w26
  41afe0:	str	x21, [sp, #16]
  41afe4:	mov	w6, w25
  41afe8:	mov	w5, w24
  41afec:	mov	x4, x23
  41aff0:	mov	x1, x19
  41aff4:	mov	x0, x22
  41aff8:	mov	x3, #0x0                   	// #0
  41affc:	mov	x2, #0x1c2                 	// #450
  41b000:	bl	417dbc <ferror@plt+0x147ec>
  41b004:	ldr	w0, [x19, #1416]
  41b008:	cbnz	w0, 41a3b4 <ferror@plt+0x16de4>
  41b00c:	mov	w7, w26
  41b010:	mov	w6, w25
  41b014:	mov	w5, w24
  41b018:	mov	x4, x23
  41b01c:	mov	w0, #0x1                   	// #1
  41b020:	mov	x3, #0x0                   	// #0
  41b024:	mov	x2, #0x1d9                 	// #473
  41b028:	str	x20, [sp]
  41b02c:	strb	w0, [sp, #8]
  41b030:	str	x21, [sp, #16]
  41b034:	mov	x1, x19
  41b038:	mov	x0, x22
  41b03c:	b	41a478 <ferror@plt+0x16ea8>
  41b040:	ldr	w2, [x1, #516]
  41b044:	cbnz	w2, 41b064 <ferror@plt+0x17a94>
  41b048:	mov	w2, #0x1                   	// #1
  41b04c:	str	x20, [sp]
  41b050:	strb	w2, [sp, #8]
  41b054:	mov	x3, #0x0                   	// #0
  41b058:	str	x21, [sp, #16]
  41b05c:	mov	x2, #0xdf                  	// #223
  41b060:	bl	417dbc <ferror@plt+0x147ec>
  41b064:	ldr	w0, [x19, #696]
  41b068:	cbnz	w0, 41b0a8 <ferror@plt+0x17ad8>
  41b06c:	cmp	x23, #0x0
  41b070:	mov	w0, #0x1                   	// #1
  41b074:	str	x20, [sp]
  41b078:	mov	x4, #0x3                   	// #3
  41b07c:	strb	w0, [sp, #8]
  41b080:	mov	w7, w26
  41b084:	str	x21, [sp, #16]
  41b088:	mov	w6, w25
  41b08c:	mov	w5, w24
  41b090:	csel	x4, x4, xzr, ne  // ne = any
  41b094:	mov	x1, x19
  41b098:	mov	x0, x22
  41b09c:	mov	x3, #0x0                   	// #0
  41b0a0:	mov	x2, #0x111                 	// #273
  41b0a4:	bl	417dbc <ferror@plt+0x147ec>
  41b0a8:	ldr	w0, [x19, #1044]
  41b0ac:	cbnz	w0, 41a3b4 <ferror@plt+0x16de4>
  41b0b0:	mov	w0, #0x1                   	// #1
  41b0b4:	mov	w7, w26
  41b0b8:	mov	w6, w25
  41b0bc:	mov	w5, w24
  41b0c0:	mov	x4, x23
  41b0c4:	mov	x3, #0x0                   	// #0
  41b0c8:	mov	x2, #0x173                 	// #371
  41b0cc:	str	x20, [sp]
  41b0d0:	strb	w0, [sp, #8]
  41b0d4:	str	x21, [sp, #16]
  41b0d8:	b	41b034 <ferror@plt+0x17a64>
  41b0dc:	ldr	w2, [x1, #572]
  41b0e0:	cbnz	w2, 41b100 <ferror@plt+0x17b30>
  41b0e4:	mov	w2, #0x1                   	// #1
  41b0e8:	str	x20, [sp]
  41b0ec:	strb	w2, [sp, #8]
  41b0f0:	mov	x3, #0x0                   	// #0
  41b0f4:	str	x21, [sp, #16]
  41b0f8:	mov	x2, #0xee                  	// #238
  41b0fc:	bl	417dbc <ferror@plt+0x147ec>
  41b100:	ldr	w0, [x19, #808]
  41b104:	cbnz	w0, 41b144 <ferror@plt+0x17b74>
  41b108:	cmp	x23, #0x0
  41b10c:	mov	w0, #0x1                   	// #1
  41b110:	cset	x4, ne  // ne = any
  41b114:	str	x20, [sp]
  41b118:	strb	w0, [sp, #8]
  41b11c:	mov	w7, w26
  41b120:	str	x21, [sp, #16]
  41b124:	lsl	x4, x4, x0
  41b128:	mov	w6, w25
  41b12c:	mov	w5, w24
  41b130:	mov	x1, x19
  41b134:	mov	x0, x22
  41b138:	mov	x3, #0x0                   	// #0
  41b13c:	mov	x2, #0x12f                 	// #303
  41b140:	bl	417dbc <ferror@plt+0x147ec>
  41b144:	ldr	w0, [x19, #940]
  41b148:	cbnz	w0, 41b180 <ferror@plt+0x17bb0>
  41b14c:	mov	w0, #0x1                   	// #1
  41b150:	str	x20, [sp]
  41b154:	strb	w0, [sp, #8]
  41b158:	mov	w7, w26
  41b15c:	str	x21, [sp, #16]
  41b160:	mov	w6, w25
  41b164:	mov	w5, w24
  41b168:	mov	x4, x23
  41b16c:	mov	x1, x19
  41b170:	mov	x0, x22
  41b174:	mov	x3, #0x0                   	// #0
  41b178:	mov	x2, #0x157                 	// #343
  41b17c:	bl	417dbc <ferror@plt+0x147ec>
  41b180:	ldr	w0, [x19, #992]
  41b184:	cbnz	w0, 41b1bc <ferror@plt+0x17bec>
  41b188:	mov	w0, #0x1                   	// #1
  41b18c:	str	x20, [sp]
  41b190:	strb	w0, [sp, #8]
  41b194:	mov	w7, w26
  41b198:	str	x21, [sp, #16]
  41b19c:	mov	w6, w25
  41b1a0:	mov	w5, w24
  41b1a4:	mov	x4, x23
  41b1a8:	mov	x1, x19
  41b1ac:	mov	x0, x22
  41b1b0:	mov	x3, #0x0                   	// #0
  41b1b4:	mov	x2, #0x166                 	// #358
  41b1b8:	bl	417dbc <ferror@plt+0x147ec>
  41b1bc:	ldr	w0, [x19, #1388]
  41b1c0:	cbnz	w0, 41a3b4 <ferror@plt+0x16de4>
  41b1c4:	mov	w0, #0x1                   	// #1
  41b1c8:	mov	w7, w26
  41b1cc:	mov	w6, w25
  41b1d0:	mov	w5, w24
  41b1d4:	mov	x4, x23
  41b1d8:	mov	x3, #0x0                   	// #0
  41b1dc:	mov	x2, #0x1d3                 	// #467
  41b1e0:	str	x20, [sp]
  41b1e4:	strb	w0, [sp, #8]
  41b1e8:	str	x21, [sp, #16]
  41b1ec:	b	41b034 <ferror@plt+0x17a64>
  41b1f0:	ldr	w2, [x1, #600]
  41b1f4:	cbnz	w2, 41a3b4 <ferror@plt+0x16de4>
  41b1f8:	mov	w2, #0x1                   	// #1
  41b1fc:	mov	x3, #0x0                   	// #0
  41b200:	str	x20, [sp]
  41b204:	strb	w2, [sp, #8]
  41b208:	mov	x2, #0xf7                  	// #247
  41b20c:	str	x21, [sp, #16]
  41b210:	b	41a478 <ferror@plt+0x16ea8>
  41b214:	ldr	w4, [x1, #608]
  41b218:	cbnz	w4, 41b264 <ferror@plt+0x17c94>
  41b21c:	cbz	x23, 41b230 <ferror@plt+0x17c60>
  41b220:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b224:	ldr	w0, [x0, #1204]
  41b228:	cmp	w0, #0x0
  41b22c:	cset	w4, gt
  41b230:	mov	w0, #0x1                   	// #1
  41b234:	str	x20, [sp]
  41b238:	strb	w0, [sp, #8]
  41b23c:	mov	w7, w26
  41b240:	str	x21, [sp, #16]
  41b244:	mov	w6, w25
  41b248:	mov	w5, w24
  41b24c:	sxtw	x4, w4
  41b250:	mov	x1, x19
  41b254:	mov	x0, x22
  41b258:	mov	x3, #0x0                   	// #0
  41b25c:	mov	x2, #0xfa                  	// #250
  41b260:	bl	417dbc <ferror@plt+0x147ec>
  41b264:	ldr	w4, [x19, #612]
  41b268:	cbnz	w4, 41b2b4 <ferror@plt+0x17ce4>
  41b26c:	cbz	x23, 41b280 <ferror@plt+0x17cb0>
  41b270:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b274:	ldr	w0, [x0, #1204]
  41b278:	cmp	w0, #0x0
  41b27c:	cset	w4, gt
  41b280:	mov	w0, #0x1                   	// #1
  41b284:	str	x20, [sp]
  41b288:	strb	w0, [sp, #8]
  41b28c:	mov	w7, w26
  41b290:	str	x21, [sp, #16]
  41b294:	mov	w6, w25
  41b298:	mov	w5, w24
  41b29c:	sxtw	x4, w4
  41b2a0:	mov	x1, x19
  41b2a4:	mov	x0, x22
  41b2a8:	mov	x3, #0x0                   	// #0
  41b2ac:	mov	x2, #0xfb                  	// #251
  41b2b0:	bl	417dbc <ferror@plt+0x147ec>
  41b2b4:	ldr	w4, [x19, #616]
  41b2b8:	cbnz	w4, 41b304 <ferror@plt+0x17d34>
  41b2bc:	cbz	x23, 41b2d0 <ferror@plt+0x17d00>
  41b2c0:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b2c4:	ldr	w0, [x0, #1204]
  41b2c8:	cmp	w0, #0x1
  41b2cc:	cset	w4, gt
  41b2d0:	mov	w0, #0x1                   	// #1
  41b2d4:	str	x20, [sp]
  41b2d8:	strb	w0, [sp, #8]
  41b2dc:	mov	w7, w26
  41b2e0:	str	x21, [sp, #16]
  41b2e4:	mov	w6, w25
  41b2e8:	mov	w5, w24
  41b2ec:	sxtw	x4, w4
  41b2f0:	mov	x1, x19
  41b2f4:	mov	x0, x22
  41b2f8:	mov	x3, #0x0                   	// #0
  41b2fc:	mov	x2, #0xfc                  	// #252
  41b300:	bl	417dbc <ferror@plt+0x147ec>
  41b304:	ldr	w4, [x19, #620]
  41b308:	cbnz	w4, 41b354 <ferror@plt+0x17d84>
  41b30c:	cbz	x23, 41b320 <ferror@plt+0x17d50>
  41b310:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b314:	ldr	w0, [x0, #1204]
  41b318:	cmp	w0, #0x0
  41b31c:	cset	w4, gt
  41b320:	mov	w0, #0x1                   	// #1
  41b324:	str	x20, [sp]
  41b328:	strb	w0, [sp, #8]
  41b32c:	mov	w7, w26
  41b330:	str	x21, [sp, #16]
  41b334:	mov	w6, w25
  41b338:	mov	w5, w24
  41b33c:	sxtw	x4, w4
  41b340:	mov	x1, x19
  41b344:	mov	x0, x22
  41b348:	mov	x3, #0x0                   	// #0
  41b34c:	mov	x2, #0xfe                  	// #254
  41b350:	bl	417dbc <ferror@plt+0x147ec>
  41b354:	ldr	w4, [x19, #624]
  41b358:	cbnz	w4, 41b3a4 <ferror@plt+0x17dd4>
  41b35c:	cbz	x23, 41b370 <ferror@plt+0x17da0>
  41b360:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b364:	ldr	w0, [x0, #1204]
  41b368:	cmp	w0, #0x1
  41b36c:	cset	w4, gt
  41b370:	mov	w0, #0x1                   	// #1
  41b374:	str	x20, [sp]
  41b378:	strb	w0, [sp, #8]
  41b37c:	mov	w7, w26
  41b380:	str	x21, [sp, #16]
  41b384:	mov	w6, w25
  41b388:	mov	w5, w24
  41b38c:	sxtw	x4, w4
  41b390:	mov	x1, x19
  41b394:	mov	x0, x22
  41b398:	mov	x3, #0x0                   	// #0
  41b39c:	mov	x2, #0xff                  	// #255
  41b3a0:	bl	417dbc <ferror@plt+0x147ec>
  41b3a4:	ldr	w4, [x19, #632]
  41b3a8:	cbnz	w4, 41b3f4 <ferror@plt+0x17e24>
  41b3ac:	cbz	x23, 41b3c0 <ferror@plt+0x17df0>
  41b3b0:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b3b4:	ldr	w0, [x0, #1204]
  41b3b8:	cmp	w0, #0x0
  41b3bc:	cset	w4, gt
  41b3c0:	mov	w0, #0x1                   	// #1
  41b3c4:	str	x20, [sp]
  41b3c8:	strb	w0, [sp, #8]
  41b3cc:	mov	w7, w26
  41b3d0:	str	x21, [sp, #16]
  41b3d4:	mov	w6, w25
  41b3d8:	mov	w5, w24
  41b3dc:	sxtw	x4, w4
  41b3e0:	mov	x1, x19
  41b3e4:	mov	x0, x22
  41b3e8:	mov	x3, #0x0                   	// #0
  41b3ec:	mov	x2, #0x102                 	// #258
  41b3f0:	bl	417dbc <ferror@plt+0x147ec>
  41b3f4:	ldr	w4, [x19, #636]
  41b3f8:	cbnz	w4, 41b444 <ferror@plt+0x17e74>
  41b3fc:	cbz	x23, 41b410 <ferror@plt+0x17e40>
  41b400:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b404:	ldr	w0, [x0, #1204]
  41b408:	cmp	w0, #0x1
  41b40c:	cset	w4, gt
  41b410:	mov	w0, #0x1                   	// #1
  41b414:	str	x20, [sp]
  41b418:	strb	w0, [sp, #8]
  41b41c:	mov	w7, w26
  41b420:	str	x21, [sp, #16]
  41b424:	mov	w6, w25
  41b428:	mov	w5, w24
  41b42c:	sxtw	x4, w4
  41b430:	mov	x1, x19
  41b434:	mov	x0, x22
  41b438:	mov	x3, #0x0                   	// #0
  41b43c:	mov	x2, #0x103                 	// #259
  41b440:	bl	417dbc <ferror@plt+0x147ec>
  41b444:	ldr	w4, [x19, #640]
  41b448:	cbnz	w4, 41b494 <ferror@plt+0x17ec4>
  41b44c:	cbz	x23, 41b460 <ferror@plt+0x17e90>
  41b450:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b454:	ldr	w0, [x0, #1204]
  41b458:	cmp	w0, #0x0
  41b45c:	cset	w4, gt
  41b460:	mov	w0, #0x1                   	// #1
  41b464:	str	x20, [sp]
  41b468:	strb	w0, [sp, #8]
  41b46c:	mov	w7, w26
  41b470:	str	x21, [sp, #16]
  41b474:	mov	w6, w25
  41b478:	mov	w5, w24
  41b47c:	sxtw	x4, w4
  41b480:	mov	x1, x19
  41b484:	mov	x0, x22
  41b488:	mov	x3, #0x0                   	// #0
  41b48c:	mov	x2, #0x104                 	// #260
  41b490:	bl	417dbc <ferror@plt+0x147ec>
  41b494:	ldr	w4, [x19, #900]
  41b498:	cbnz	w4, 41a3b4 <ferror@plt+0x16de4>
  41b49c:	cbz	x23, 41b4b0 <ferror@plt+0x17ee0>
  41b4a0:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41b4a4:	ldr	w0, [x0, #1204]
  41b4a8:	cmp	w0, #0x0
  41b4ac:	cset	w4, gt
  41b4b0:	mov	w0, #0x1                   	// #1
  41b4b4:	mov	w7, w26
  41b4b8:	mov	w6, w25
  41b4bc:	mov	w5, w24
  41b4c0:	sxtw	x4, w4
  41b4c4:	mov	x3, #0x0                   	// #0
  41b4c8:	mov	x2, #0x14c                 	// #332
  41b4cc:	str	x20, [sp]
  41b4d0:	strb	w0, [sp, #8]
  41b4d4:	str	x21, [sp, #16]
  41b4d8:	b	41b034 <ferror@plt+0x17a64>
  41b4dc:	ldr	w2, [x1, #876]
  41b4e0:	cbnz	w2, 41a3b4 <ferror@plt+0x16de4>
  41b4e4:	mov	w2, #0x1                   	// #1
  41b4e8:	mov	x3, #0x0                   	// #0
  41b4ec:	str	x20, [sp]
  41b4f0:	strb	w2, [sp, #8]
  41b4f4:	mov	x2, #0x143                 	// #323
  41b4f8:	str	x21, [sp, #16]
  41b4fc:	b	41a478 <ferror@plt+0x16ea8>
  41b500:	ldr	w2, [x1, #888]
  41b504:	cbnz	w2, 41b524 <ferror@plt+0x17f54>
  41b508:	mov	w2, #0x1                   	// #1
  41b50c:	str	x20, [sp]
  41b510:	strb	w2, [sp, #8]
  41b514:	mov	x3, #0x0                   	// #0
  41b518:	str	x21, [sp, #16]
  41b51c:	mov	x2, #0x149                 	// #329
  41b520:	bl	417dbc <ferror@plt+0x147ec>
  41b524:	ldr	w0, [x19, #1024]
  41b528:	cbnz	w0, 41a3b4 <ferror@plt+0x16de4>
  41b52c:	mov	w0, #0x1                   	// #1
  41b530:	mov	w7, w26
  41b534:	mov	w6, w25
  41b538:	mov	w5, w24
  41b53c:	mov	x4, x23
  41b540:	mov	x3, #0x0                   	// #0
  41b544:	mov	x2, #0x16e                 	// #366
  41b548:	str	x20, [sp]
  41b54c:	strb	w0, [sp, #8]
  41b550:	str	x21, [sp, #16]
  41b554:	b	41b034 <ferror@plt+0x17a64>
  41b558:	ldr	w2, [x1, #888]
  41b55c:	cbnz	w2, 41a3b4 <ferror@plt+0x16de4>
  41b560:	mov	w2, #0x1                   	// #1
  41b564:	mov	x3, #0x0                   	// #0
  41b568:	str	x20, [sp]
  41b56c:	strb	w2, [sp, #8]
  41b570:	mov	x2, #0x149                 	// #329
  41b574:	str	x21, [sp, #16]
  41b578:	b	41a478 <ferror@plt+0x16ea8>
  41b57c:	cmp	w2, #0xa3
  41b580:	b.ne	41b5cc <ferror@plt+0x17ffc>  // b.any
  41b584:	ldr	w2, [x1, #1316]
  41b588:	cbnz	w2, 41b5cc <ferror@plt+0x17ffc>
  41b58c:	sub	sp, sp, #0x30
  41b590:	mov	x3, #0x0                   	// #0
  41b594:	stp	x29, x30, [sp, #32]
  41b598:	add	x29, sp, #0x20
  41b59c:	ldr	x2, [sp, #56]
  41b5a0:	str	x2, [sp, #16]
  41b5a4:	mov	w2, #0x1                   	// #1
  41b5a8:	strb	w2, [sp, #8]
  41b5ac:	ldr	x2, [sp, #48]
  41b5b0:	str	x2, [sp]
  41b5b4:	mov	x2, #0x1be                 	// #446
  41b5b8:	bl	417dbc <ferror@plt+0x147ec>
  41b5bc:	mov	w0, #0x1                   	// #1
  41b5c0:	ldp	x29, x30, [sp, #32]
  41b5c4:	add	sp, sp, #0x30
  41b5c8:	ret
  41b5cc:	mov	w0, #0x1                   	// #1
  41b5d0:	ret
  41b5d4:	sub	sp, sp, #0x70
  41b5d8:	cmp	w2, #0x161
  41b5dc:	stp	x29, x30, [sp, #32]
  41b5e0:	add	x29, sp, #0x20
  41b5e4:	stp	x19, x20, [sp, #48]
  41b5e8:	mov	x19, x1
  41b5ec:	stp	x21, x22, [sp, #64]
  41b5f0:	mov	x22, x0
  41b5f4:	stp	x23, x24, [sp, #80]
  41b5f8:	mov	x23, x4
  41b5fc:	mov	w24, w5
  41b600:	stp	x25, x26, [sp, #96]
  41b604:	mov	w25, w6
  41b608:	mov	w26, w7
  41b60c:	ldp	x20, x21, [sp, #112]
  41b610:	b.eq	41bb10 <ferror@plt+0x18540>  // b.none
  41b614:	b.gt	41b648 <ferror@plt+0x18078>
  41b618:	cmp	w2, #0xa3
  41b61c:	b.eq	41b674 <ferror@plt+0x180a4>  // b.none
  41b620:	cmp	w2, #0xf4
  41b624:	b.eq	41bb68 <ferror@plt+0x18598>  // b.none
  41b628:	mov	w0, #0x1                   	// #1
  41b62c:	ldp	x29, x30, [sp, #32]
  41b630:	ldp	x19, x20, [sp, #48]
  41b634:	ldp	x21, x22, [sp, #64]
  41b638:	ldp	x23, x24, [sp, #80]
  41b63c:	ldp	x25, x26, [sp, #96]
  41b640:	add	sp, sp, #0x70
  41b644:	ret
  41b648:	cmp	w2, #0x171
  41b64c:	b.ne	41b628 <ferror@plt+0x18058>  // b.any
  41b650:	ldr	w2, [x1, #1032]
  41b654:	cbnz	w2, 41b628 <ferror@plt+0x18058>
  41b658:	mov	w2, #0x1                   	// #1
  41b65c:	mov	x3, #0x0                   	// #0
  41b660:	str	x20, [sp]
  41b664:	strb	w2, [sp, #8]
  41b668:	mov	x2, #0x170                 	// #368
  41b66c:	str	x21, [sp, #16]
  41b670:	b	41bb08 <ferror@plt+0x18538>
  41b674:	ldr	w2, [x1, #288]
  41b678:	cbnz	w2, 41b698 <ferror@plt+0x180c8>
  41b67c:	mov	w2, #0x1                   	// #1
  41b680:	str	x20, [sp]
  41b684:	strb	w2, [sp, #8]
  41b688:	mov	x3, #0x0                   	// #0
  41b68c:	str	x21, [sp, #16]
  41b690:	mov	x2, #0x9f                  	// #159
  41b694:	bl	417dbc <ferror@plt+0x147ec>
  41b698:	ldr	w0, [x19, #328]
  41b69c:	cbnz	w0, 41b6d4 <ferror@plt+0x18104>
  41b6a0:	mov	w0, #0x1                   	// #1
  41b6a4:	str	x20, [sp]
  41b6a8:	strb	w0, [sp, #8]
  41b6ac:	mov	w7, w26
  41b6b0:	str	x21, [sp, #16]
  41b6b4:	mov	w6, w25
  41b6b8:	mov	w5, w24
  41b6bc:	mov	x4, x23
  41b6c0:	mov	x1, x19
  41b6c4:	mov	x0, x22
  41b6c8:	mov	x3, #0x0                   	// #0
  41b6cc:	mov	x2, #0xa8                  	// #168
  41b6d0:	bl	417dbc <ferror@plt+0x147ec>
  41b6d4:	ldr	w0, [x19, #396]
  41b6d8:	cbnz	w0, 41b710 <ferror@plt+0x18140>
  41b6dc:	mov	w0, #0x1                   	// #1
  41b6e0:	str	x20, [sp]
  41b6e4:	strb	w0, [sp, #8]
  41b6e8:	mov	w7, w26
  41b6ec:	str	x21, [sp, #16]
  41b6f0:	mov	w6, w25
  41b6f4:	mov	w5, w24
  41b6f8:	mov	x4, x23
  41b6fc:	mov	x1, x19
  41b700:	mov	x0, x22
  41b704:	mov	x3, #0x0                   	// #0
  41b708:	mov	x2, #0xbd                  	// #189
  41b70c:	bl	417dbc <ferror@plt+0x147ec>
  41b710:	ldr	w0, [x19, #440]
  41b714:	cbnz	w0, 41b74c <ferror@plt+0x1817c>
  41b718:	mov	w0, #0x1                   	// #1
  41b71c:	str	x20, [sp]
  41b720:	strb	w0, [sp, #8]
  41b724:	mov	w7, w26
  41b728:	str	x21, [sp, #16]
  41b72c:	mov	w6, w25
  41b730:	mov	w5, w24
  41b734:	mov	x4, x23
  41b738:	mov	x1, x19
  41b73c:	mov	x0, x22
  41b740:	mov	x3, #0x0                   	// #0
  41b744:	mov	x2, #0xca                  	// #202
  41b748:	bl	417dbc <ferror@plt+0x147ec>
  41b74c:	ldr	w0, [x19, #468]
  41b750:	cbnz	w0, 41b788 <ferror@plt+0x181b8>
  41b754:	mov	w0, #0x1                   	// #1
  41b758:	str	x20, [sp]
  41b75c:	strb	w0, [sp, #8]
  41b760:	mov	w7, w26
  41b764:	str	x21, [sp, #16]
  41b768:	mov	w6, w25
  41b76c:	mov	w5, w24
  41b770:	mov	x4, x23
  41b774:	mov	x1, x19
  41b778:	mov	x0, x22
  41b77c:	mov	x3, #0x0                   	// #0
  41b780:	mov	x2, #0xd3                  	// #211
  41b784:	bl	417dbc <ferror@plt+0x147ec>
  41b788:	ldr	w0, [x19, #748]
  41b78c:	cbnz	w0, 41b7c4 <ferror@plt+0x181f4>
  41b790:	mov	w0, #0x1                   	// #1
  41b794:	str	x20, [sp]
  41b798:	strb	w0, [sp, #8]
  41b79c:	mov	w7, w26
  41b7a0:	str	x21, [sp, #16]
  41b7a4:	mov	w6, w25
  41b7a8:	mov	w5, w24
  41b7ac:	mov	x4, x23
  41b7b0:	mov	x1, x19
  41b7b4:	mov	x0, x22
  41b7b8:	mov	x3, #0x0                   	// #0
  41b7bc:	mov	x2, #0x11f                 	// #287
  41b7c0:	bl	417dbc <ferror@plt+0x147ec>
  41b7c4:	ldr	w0, [x19, #752]
  41b7c8:	cbnz	w0, 41b800 <ferror@plt+0x18230>
  41b7cc:	mov	w0, #0x1                   	// #1
  41b7d0:	str	x20, [sp]
  41b7d4:	strb	w0, [sp, #8]
  41b7d8:	mov	w7, w26
  41b7dc:	str	x21, [sp, #16]
  41b7e0:	mov	w6, w25
  41b7e4:	mov	w5, w24
  41b7e8:	mov	x4, x23
  41b7ec:	mov	x1, x19
  41b7f0:	mov	x0, x22
  41b7f4:	mov	x3, #0x0                   	// #0
  41b7f8:	mov	x2, #0x120                 	// #288
  41b7fc:	bl	417dbc <ferror@plt+0x147ec>
  41b800:	ldr	w0, [x19, #756]
  41b804:	cbnz	w0, 41b83c <ferror@plt+0x1826c>
  41b808:	mov	w0, #0x1                   	// #1
  41b80c:	str	x20, [sp]
  41b810:	strb	w0, [sp, #8]
  41b814:	mov	w7, w26
  41b818:	str	x21, [sp, #16]
  41b81c:	mov	w6, w25
  41b820:	mov	w5, w24
  41b824:	mov	x4, x23
  41b828:	mov	x1, x19
  41b82c:	mov	x0, x22
  41b830:	mov	x3, #0x0                   	// #0
  41b834:	mov	x2, #0x121                 	// #289
  41b838:	bl	417dbc <ferror@plt+0x147ec>
  41b83c:	ldr	w0, [x19, #784]
  41b840:	cbnz	w0, 41b878 <ferror@plt+0x182a8>
  41b844:	mov	w0, #0x1                   	// #1
  41b848:	str	x20, [sp]
  41b84c:	strb	w0, [sp, #8]
  41b850:	mov	w7, w26
  41b854:	str	x21, [sp, #16]
  41b858:	mov	w6, w25
  41b85c:	mov	w5, w24
  41b860:	mov	x4, x23
  41b864:	mov	x1, x19
  41b868:	mov	x0, x22
  41b86c:	mov	x3, #0x0                   	// #0
  41b870:	mov	x2, #0x129                 	// #297
  41b874:	bl	417dbc <ferror@plt+0x147ec>
  41b878:	ldr	w0, [x19, #812]
  41b87c:	cbnz	w0, 41b8b4 <ferror@plt+0x182e4>
  41b880:	mov	w0, #0x1                   	// #1
  41b884:	str	x20, [sp]
  41b888:	strb	w0, [sp, #8]
  41b88c:	mov	w7, w26
  41b890:	str	x21, [sp, #16]
  41b894:	mov	w6, w25
  41b898:	mov	w5, w24
  41b89c:	mov	x4, x23
  41b8a0:	mov	x1, x19
  41b8a4:	mov	x0, x22
  41b8a8:	mov	x3, #0x0                   	// #0
  41b8ac:	mov	x2, #0x130                 	// #304
  41b8b0:	bl	417dbc <ferror@plt+0x147ec>
  41b8b4:	ldr	w0, [x19, #1028]
  41b8b8:	cbnz	w0, 41b8f0 <ferror@plt+0x18320>
  41b8bc:	mov	w0, #0x1                   	// #1
  41b8c0:	str	x20, [sp]
  41b8c4:	strb	w0, [sp, #8]
  41b8c8:	mov	w7, w26
  41b8cc:	str	x21, [sp, #16]
  41b8d0:	mov	w6, w25
  41b8d4:	mov	w5, w24
  41b8d8:	mov	x4, x23
  41b8dc:	mov	x1, x19
  41b8e0:	mov	x0, x22
  41b8e4:	mov	x3, #0x0                   	// #0
  41b8e8:	mov	x2, #0x16f                 	// #367
  41b8ec:	bl	417dbc <ferror@plt+0x147ec>
  41b8f0:	ldr	w0, [x19, #1064]
  41b8f4:	cbnz	w0, 41b92c <ferror@plt+0x1835c>
  41b8f8:	mov	w0, #0x1                   	// #1
  41b8fc:	str	x20, [sp]
  41b900:	strb	w0, [sp, #8]
  41b904:	mov	w7, w26
  41b908:	str	x21, [sp, #16]
  41b90c:	mov	w6, w25
  41b910:	mov	w5, w24
  41b914:	mov	x4, x23
  41b918:	mov	x1, x19
  41b91c:	mov	x0, x22
  41b920:	mov	x3, #0x0                   	// #0
  41b924:	mov	x2, #0x178                 	// #376
  41b928:	bl	417dbc <ferror@plt+0x147ec>
  41b92c:	ldr	w0, [x19, #1220]
  41b930:	cbnz	w0, 41b968 <ferror@plt+0x18398>
  41b934:	mov	w0, #0x1                   	// #1
  41b938:	str	x20, [sp]
  41b93c:	strb	w0, [sp, #8]
  41b940:	mov	w7, w26
  41b944:	str	x21, [sp, #16]
  41b948:	mov	w6, w25
  41b94c:	mov	w5, w24
  41b950:	mov	x4, x23
  41b954:	mov	x1, x19
  41b958:	mov	x0, x22
  41b95c:	mov	x3, #0x0                   	// #0
  41b960:	mov	x2, #0x1a6                 	// #422
  41b964:	bl	417dbc <ferror@plt+0x147ec>
  41b968:	ldr	w0, [x19, #1256]
  41b96c:	cbnz	w0, 41b9a4 <ferror@plt+0x183d4>
  41b970:	mov	w0, #0x1                   	// #1
  41b974:	str	x20, [sp]
  41b978:	strb	w0, [sp, #8]
  41b97c:	mov	w7, w26
  41b980:	str	x21, [sp, #16]
  41b984:	mov	w6, w25
  41b988:	mov	w5, w24
  41b98c:	mov	x4, x23
  41b990:	mov	x1, x19
  41b994:	mov	x0, x22
  41b998:	mov	x3, #0x0                   	// #0
  41b99c:	mov	x2, #0x1af                 	// #431
  41b9a0:	bl	417dbc <ferror@plt+0x147ec>
  41b9a4:	ldr	w0, [x19, #1260]
  41b9a8:	cbnz	w0, 41b9e0 <ferror@plt+0x18410>
  41b9ac:	mov	w0, #0x1                   	// #1
  41b9b0:	str	x20, [sp]
  41b9b4:	strb	w0, [sp, #8]
  41b9b8:	mov	w7, w26
  41b9bc:	str	x21, [sp, #16]
  41b9c0:	mov	w6, w25
  41b9c4:	mov	w5, w24
  41b9c8:	mov	x4, x23
  41b9cc:	mov	x1, x19
  41b9d0:	mov	x0, x22
  41b9d4:	mov	x3, #0x0                   	// #0
  41b9d8:	mov	x2, #0x1b0                 	// #432
  41b9dc:	bl	417dbc <ferror@plt+0x147ec>
  41b9e0:	ldr	w0, [x19, #1304]
  41b9e4:	cbnz	w0, 41ba1c <ferror@plt+0x1844c>
  41b9e8:	mov	w0, #0x1                   	// #1
  41b9ec:	str	x20, [sp]
  41b9f0:	strb	w0, [sp, #8]
  41b9f4:	mov	w7, w26
  41b9f8:	str	x21, [sp, #16]
  41b9fc:	mov	w6, w25
  41ba00:	mov	w5, w24
  41ba04:	mov	x4, x23
  41ba08:	mov	x1, x19
  41ba0c:	mov	x0, x22
  41ba10:	mov	x3, #0x0                   	// #0
  41ba14:	mov	x2, #0x1bb                 	// #443
  41ba18:	bl	417dbc <ferror@plt+0x147ec>
  41ba1c:	ldr	w0, [x19, #1312]
  41ba20:	cbnz	w0, 41ba58 <ferror@plt+0x18488>
  41ba24:	mov	w0, #0x1                   	// #1
  41ba28:	str	x20, [sp]
  41ba2c:	strb	w0, [sp, #8]
  41ba30:	mov	w7, w26
  41ba34:	str	x21, [sp, #16]
  41ba38:	mov	w6, w25
  41ba3c:	mov	w5, w24
  41ba40:	mov	x4, x23
  41ba44:	mov	x1, x19
  41ba48:	mov	x0, x22
  41ba4c:	mov	x3, #0x0                   	// #0
  41ba50:	mov	x2, #0x1bd                 	// #445
  41ba54:	bl	417dbc <ferror@plt+0x147ec>
  41ba58:	ldr	w0, [x19, #1324]
  41ba5c:	cbnz	w0, 41ba94 <ferror@plt+0x184c4>
  41ba60:	mov	w0, #0x1                   	// #1
  41ba64:	str	x20, [sp]
  41ba68:	strb	w0, [sp, #8]
  41ba6c:	mov	w7, w26
  41ba70:	str	x21, [sp, #16]
  41ba74:	mov	w6, w25
  41ba78:	mov	w5, w24
  41ba7c:	mov	x4, x23
  41ba80:	mov	x1, x19
  41ba84:	mov	x0, x22
  41ba88:	mov	x3, #0x0                   	// #0
  41ba8c:	mov	x2, #0x1c2                 	// #450
  41ba90:	bl	417dbc <ferror@plt+0x147ec>
  41ba94:	ldr	w0, [x19, #1340]
  41ba98:	cbnz	w0, 41bad0 <ferror@plt+0x18500>
  41ba9c:	mov	w0, #0x1                   	// #1
  41baa0:	str	x20, [sp]
  41baa4:	strb	w0, [sp, #8]
  41baa8:	mov	w7, w26
  41baac:	str	x21, [sp, #16]
  41bab0:	mov	w6, w25
  41bab4:	mov	w5, w24
  41bab8:	mov	x4, x23
  41babc:	mov	x1, x19
  41bac0:	mov	x0, x22
  41bac4:	mov	x3, #0x0                   	// #0
  41bac8:	mov	x2, #0x1c7                 	// #455
  41bacc:	bl	417dbc <ferror@plt+0x147ec>
  41bad0:	ldr	w0, [x19, #1428]
  41bad4:	cbnz	w0, 41b628 <ferror@plt+0x18058>
  41bad8:	mov	w7, w26
  41badc:	mov	w6, w25
  41bae0:	mov	w5, w24
  41bae4:	mov	x4, x23
  41bae8:	mov	w0, #0x1                   	// #1
  41baec:	mov	x3, #0x0                   	// #0
  41baf0:	mov	x2, #0x1dc                 	// #476
  41baf4:	str	x20, [sp]
  41baf8:	strb	w0, [sp, #8]
  41bafc:	str	x21, [sp, #16]
  41bb00:	mov	x1, x19
  41bb04:	mov	x0, x22
  41bb08:	bl	417dbc <ferror@plt+0x147ec>
  41bb0c:	b	41b628 <ferror@plt+0x18058>
  41bb10:	ldr	w2, [x1, #328]
  41bb14:	cbnz	w2, 41bb34 <ferror@plt+0x18564>
  41bb18:	mov	w2, #0x1                   	// #1
  41bb1c:	str	x20, [sp]
  41bb20:	strb	w2, [sp, #8]
  41bb24:	mov	x3, #0x0                   	// #0
  41bb28:	str	x21, [sp, #16]
  41bb2c:	mov	x2, #0xa8                  	// #168
  41bb30:	bl	417dbc <ferror@plt+0x147ec>
  41bb34:	ldr	w0, [x19, #1256]
  41bb38:	cbnz	w0, 41b628 <ferror@plt+0x18058>
  41bb3c:	mov	w0, #0x1                   	// #1
  41bb40:	mov	w7, w26
  41bb44:	mov	w6, w25
  41bb48:	mov	w5, w24
  41bb4c:	mov	x4, x23
  41bb50:	mov	x3, #0x0                   	// #0
  41bb54:	mov	x2, #0x1af                 	// #431
  41bb58:	str	x20, [sp]
  41bb5c:	strb	w0, [sp, #8]
  41bb60:	str	x21, [sp, #16]
  41bb64:	b	41bb00 <ferror@plt+0x18530>
  41bb68:	ldr	w2, [x1, #460]
  41bb6c:	cbnz	w2, 41bb8c <ferror@plt+0x185bc>
  41bb70:	mov	w2, #0x1                   	// #1
  41bb74:	str	x20, [sp]
  41bb78:	strb	w2, [sp, #8]
  41bb7c:	mov	x3, #0x0                   	// #0
  41bb80:	str	x21, [sp, #16]
  41bb84:	mov	x2, #0xd1                  	// #209
  41bb88:	bl	417dbc <ferror@plt+0x147ec>
  41bb8c:	ldr	w0, [x19, #544]
  41bb90:	cbnz	w0, 41bbc8 <ferror@plt+0x185f8>
  41bb94:	mov	w0, #0x1                   	// #1
  41bb98:	str	x20, [sp]
  41bb9c:	strb	w0, [sp, #8]
  41bba0:	mov	w7, w26
  41bba4:	str	x21, [sp, #16]
  41bba8:	mov	w6, w25
  41bbac:	mov	w5, w24
  41bbb0:	mov	x4, x23
  41bbb4:	mov	x1, x19
  41bbb8:	mov	x0, x22
  41bbbc:	mov	x3, #0x0                   	// #0
  41bbc0:	mov	x2, #0xe7                  	// #231
  41bbc4:	bl	417dbc <ferror@plt+0x147ec>
  41bbc8:	ldr	w0, [x19, #672]
  41bbcc:	cbnz	w0, 41b628 <ferror@plt+0x18058>
  41bbd0:	mov	w0, #0x1                   	// #1
  41bbd4:	mov	w7, w26
  41bbd8:	mov	w6, w25
  41bbdc:	mov	w5, w24
  41bbe0:	mov	x4, x23
  41bbe4:	mov	x3, #0x0                   	// #0
  41bbe8:	mov	x2, #0x10a                 	// #266
  41bbec:	str	x20, [sp]
  41bbf0:	strb	w0, [sp, #8]
  41bbf4:	str	x21, [sp, #16]
  41bbf8:	b	41bb00 <ferror@plt+0x18530>
  41bbfc:	mov	w0, #0x1                   	// #1
  41bc00:	ret
  41bc04:	sub	sp, sp, #0x70
  41bc08:	cmp	w2, #0xa3
  41bc0c:	stp	x29, x30, [sp, #32]
  41bc10:	add	x29, sp, #0x20
  41bc14:	stp	x19, x20, [sp, #48]
  41bc18:	mov	x19, x1
  41bc1c:	mov	x20, x4
  41bc20:	stp	x21, x22, [sp, #64]
  41bc24:	mov	x21, x0
  41bc28:	mov	w22, w5
  41bc2c:	stp	x23, x24, [sp, #80]
  41bc30:	mov	w23, w6
  41bc34:	mov	w24, w7
  41bc38:	stp	x25, x26, [sp, #96]
  41bc3c:	ldp	x25, x26, [sp, #112]
  41bc40:	b.eq	41bc6c <ferror@plt+0x1869c>  // b.none
  41bc44:	cmp	w2, #0x105
  41bc48:	b.eq	41bdd0 <ferror@plt+0x18800>  // b.none
  41bc4c:	mov	w0, #0x1                   	// #1
  41bc50:	ldp	x29, x30, [sp, #32]
  41bc54:	ldp	x19, x20, [sp, #48]
  41bc58:	ldp	x21, x22, [sp, #64]
  41bc5c:	ldp	x23, x24, [sp, #80]
  41bc60:	ldp	x25, x26, [sp, #96]
  41bc64:	add	sp, sp, #0x70
  41bc68:	ret
  41bc6c:	ldr	w2, [x1, #336]
  41bc70:	cbnz	w2, 41bc98 <ferror@plt+0x186c8>
  41bc74:	cmp	x4, #0x0
  41bc78:	mov	w2, #0x1                   	// #1
  41bc7c:	str	x25, [sp]
  41bc80:	cset	x4, ne  // ne = any
  41bc84:	strb	w2, [sp, #8]
  41bc88:	mov	x3, #0x0                   	// #0
  41bc8c:	str	x26, [sp, #16]
  41bc90:	mov	x2, #0xab                  	// #171
  41bc94:	bl	417dbc <ferror@plt+0x147ec>
  41bc98:	ldr	w0, [x19, #812]
  41bc9c:	cbnz	w0, 41bcd4 <ferror@plt+0x18704>
  41bca0:	mov	w0, #0x1                   	// #1
  41bca4:	str	x25, [sp]
  41bca8:	strb	w0, [sp, #8]
  41bcac:	mov	w7, w24
  41bcb0:	str	x26, [sp, #16]
  41bcb4:	mov	w6, w23
  41bcb8:	mov	w5, w22
  41bcbc:	mov	x4, x20
  41bcc0:	mov	x1, x19
  41bcc4:	mov	x0, x21
  41bcc8:	mov	x3, #0x0                   	// #0
  41bccc:	mov	x2, #0x130                 	// #304
  41bcd0:	bl	417dbc <ferror@plt+0x147ec>
  41bcd4:	ldr	w0, [x19, #900]
  41bcd8:	cbnz	w0, 41bd10 <ferror@plt+0x18740>
  41bcdc:	mov	w0, #0x1                   	// #1
  41bce0:	str	x25, [sp]
  41bce4:	strb	w0, [sp, #8]
  41bce8:	mov	w7, w24
  41bcec:	str	x26, [sp, #16]
  41bcf0:	mov	w6, w23
  41bcf4:	mov	w5, w22
  41bcf8:	mov	x4, x20
  41bcfc:	mov	x1, x19
  41bd00:	mov	x0, x21
  41bd04:	mov	x3, #0x0                   	// #0
  41bd08:	mov	x2, #0x14c                 	// #332
  41bd0c:	bl	417dbc <ferror@plt+0x147ec>
  41bd10:	ldr	w0, [x19, #1172]
  41bd14:	cbnz	w0, 41bd54 <ferror@plt+0x18784>
  41bd18:	cmp	x20, #0x0
  41bd1c:	mov	w0, #0x1                   	// #1
  41bd20:	cset	x4, ne  // ne = any
  41bd24:	str	x25, [sp]
  41bd28:	strb	w0, [sp, #8]
  41bd2c:	mov	w7, w24
  41bd30:	str	x26, [sp, #16]
  41bd34:	lsl	x4, x4, x0
  41bd38:	mov	w6, w23
  41bd3c:	mov	w5, w22
  41bd40:	mov	x1, x19
  41bd44:	mov	x0, x21
  41bd48:	mov	x3, #0x0                   	// #0
  41bd4c:	mov	x2, #0x19a                 	// #410
  41bd50:	bl	417dbc <ferror@plt+0x147ec>
  41bd54:	ldr	w0, [x19, #1176]
  41bd58:	cbnz	w0, 41bd90 <ferror@plt+0x187c0>
  41bd5c:	mov	w0, #0x1                   	// #1
  41bd60:	str	x25, [sp]
  41bd64:	strb	w0, [sp, #8]
  41bd68:	mov	w7, w24
  41bd6c:	str	x26, [sp, #16]
  41bd70:	mov	w6, w23
  41bd74:	mov	w5, w22
  41bd78:	mov	x4, x20
  41bd7c:	mov	x1, x19
  41bd80:	mov	x0, x21
  41bd84:	mov	x3, #0x0                   	// #0
  41bd88:	mov	x2, #0x19b                 	// #411
  41bd8c:	bl	417dbc <ferror@plt+0x147ec>
  41bd90:	ldr	w0, [x19, #1312]
  41bd94:	cbnz	w0, 41bc4c <ferror@plt+0x1867c>
  41bd98:	mov	w7, w24
  41bd9c:	mov	w6, w23
  41bda0:	mov	w5, w22
  41bda4:	mov	x4, x20
  41bda8:	mov	w0, #0x1                   	// #1
  41bdac:	mov	x3, #0x0                   	// #0
  41bdb0:	mov	x2, #0x1bd                 	// #445
  41bdb4:	str	x25, [sp]
  41bdb8:	strb	w0, [sp, #8]
  41bdbc:	str	x26, [sp, #16]
  41bdc0:	mov	x1, x19
  41bdc4:	mov	x0, x21
  41bdc8:	bl	417dbc <ferror@plt+0x147ec>
  41bdcc:	b	41bc4c <ferror@plt+0x1867c>
  41bdd0:	ldr	w4, [x1, #620]
  41bdd4:	cbnz	w4, 41be20 <ferror@plt+0x18850>
  41bdd8:	cbz	x20, 41bdec <ferror@plt+0x1881c>
  41bddc:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41bde0:	ldr	w0, [x0, #1204]
  41bde4:	cmp	w0, #0x0
  41bde8:	cset	w4, gt
  41bdec:	mov	w0, #0x1                   	// #1
  41bdf0:	str	x25, [sp]
  41bdf4:	strb	w0, [sp, #8]
  41bdf8:	mov	w7, w24
  41bdfc:	str	x26, [sp, #16]
  41be00:	mov	w6, w23
  41be04:	mov	w5, w22
  41be08:	sxtw	x4, w4
  41be0c:	mov	x1, x19
  41be10:	mov	x0, x21
  41be14:	mov	x3, #0x0                   	// #0
  41be18:	mov	x2, #0xfe                  	// #254
  41be1c:	bl	417dbc <ferror@plt+0x147ec>
  41be20:	ldr	w4, [x19, #632]
  41be24:	cbnz	w4, 41be70 <ferror@plt+0x188a0>
  41be28:	cbz	x20, 41be3c <ferror@plt+0x1886c>
  41be2c:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41be30:	ldr	w0, [x0, #1204]
  41be34:	cmp	w0, #0x0
  41be38:	cset	w4, gt
  41be3c:	mov	w0, #0x1                   	// #1
  41be40:	str	x25, [sp]
  41be44:	strb	w0, [sp, #8]
  41be48:	mov	w7, w24
  41be4c:	str	x26, [sp, #16]
  41be50:	mov	w6, w23
  41be54:	mov	w5, w22
  41be58:	sxtw	x4, w4
  41be5c:	mov	x1, x19
  41be60:	mov	x0, x21
  41be64:	mov	x3, #0x0                   	// #0
  41be68:	mov	x2, #0x102                 	// #258
  41be6c:	bl	417dbc <ferror@plt+0x147ec>
  41be70:	ldr	w4, [x19, #900]
  41be74:	cbnz	w4, 41bc4c <ferror@plt+0x1867c>
  41be78:	cbz	x20, 41be8c <ferror@plt+0x188bc>
  41be7c:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41be80:	ldr	w0, [x0, #1204]
  41be84:	cmp	w0, #0x0
  41be88:	cset	w4, gt
  41be8c:	mov	w0, #0x1                   	// #1
  41be90:	mov	w7, w24
  41be94:	mov	w6, w23
  41be98:	mov	w5, w22
  41be9c:	sxtw	x4, w4
  41bea0:	mov	x3, #0x0                   	// #0
  41bea4:	mov	x2, #0x14c                 	// #332
  41bea8:	str	x25, [sp]
  41beac:	strb	w0, [sp, #8]
  41beb0:	str	x26, [sp, #16]
  41beb4:	b	41bdc0 <ferror@plt+0x187f0>
  41beb8:	sub	sp, sp, #0x70
  41bebc:	cmp	w2, #0x105
  41bec0:	stp	x29, x30, [sp, #32]
  41bec4:	add	x29, sp, #0x20
  41bec8:	stp	x19, x20, [sp, #48]
  41becc:	mov	x19, x1
  41bed0:	stp	x21, x22, [sp, #64]
  41bed4:	mov	x22, x4
  41bed8:	stp	x23, x24, [sp, #80]
  41bedc:	mov	x23, x0
  41bee0:	mov	w24, w5
  41bee4:	stp	x25, x26, [sp, #96]
  41bee8:	mov	w25, w6
  41beec:	mov	w26, w7
  41bef0:	ldp	x20, x21, [sp, #112]
  41bef4:	b.eq	41cbd8 <ferror@plt+0x19608>  // b.none
  41bef8:	b.gt	41bf80 <ferror@plt+0x189b0>
  41befc:	cmp	w2, #0xbf
  41bf00:	b.eq	41cea0 <ferror@plt+0x198d0>  // b.none
  41bf04:	b.gt	41bf40 <ferror@plt+0x18970>
  41bf08:	cmp	w2, #0xa3
  41bf0c:	b.eq	41c038 <ferror@plt+0x18a68>  // b.none
  41bf10:	cmp	w2, #0xb7
  41bf14:	b.eq	41cb5c <ferror@plt+0x1958c>  // b.none
  41bf18:	cmp	w2, #0x97
  41bf1c:	b.eq	41cec4 <ferror@plt+0x198f4>  // b.none
  41bf20:	mov	w0, #0x1                   	// #1
  41bf24:	ldp	x29, x30, [sp, #32]
  41bf28:	ldp	x19, x20, [sp, #48]
  41bf2c:	ldp	x21, x22, [sp, #64]
  41bf30:	ldp	x23, x24, [sp, #80]
  41bf34:	ldp	x25, x26, [sp, #96]
  41bf38:	add	sp, sp, #0x70
  41bf3c:	ret
  41bf40:	cmp	w2, #0xd3
  41bf44:	b.eq	41cb80 <ferror@plt+0x195b0>  // b.none
  41bf48:	cmp	w2, #0xf4
  41bf4c:	b.ne	41bf20 <ferror@plt+0x18950>  // b.any
  41bf50:	ldr	w2, [x1, #696]
  41bf54:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41bf58:	cmp	x4, #0x0
  41bf5c:	mov	w2, #0x1                   	// #1
  41bf60:	mov	x4, #0x3                   	// #3
  41bf64:	mov	x3, #0x0                   	// #0
  41bf68:	csel	x4, x22, x4, eq  // eq = none
  41bf6c:	str	x20, [sp]
  41bf70:	strb	w2, [sp, #8]
  41bf74:	mov	x2, #0x111                 	// #273
  41bf78:	str	x21, [sp, #16]
  41bf7c:	b	41ca04 <ferror@plt+0x19434>
  41bf80:	cmp	w2, #0x1b4
  41bf84:	b.eq	41cb28 <ferror@plt+0x19558>  // b.none
  41bf88:	b.gt	41bffc <ferror@plt+0x18a2c>
  41bf8c:	cmp	w2, #0x160
  41bf90:	b.eq	41c9e4 <ferror@plt+0x19414>  // b.none
  41bf94:	cmp	w2, #0x161
  41bf98:	b.eq	41ca0c <ferror@plt+0x1943c>  // b.none
  41bf9c:	cmp	w2, #0x10f
  41bfa0:	b.ne	41bf20 <ferror@plt+0x18950>  // b.any
  41bfa4:	ldr	w2, [x1, #700]
  41bfa8:	cbnz	w2, 41bfc8 <ferror@plt+0x189f8>
  41bfac:	mov	w2, #0x1                   	// #1
  41bfb0:	str	x20, [sp]
  41bfb4:	strb	w2, [sp, #8]
  41bfb8:	mov	x3, #0x0                   	// #0
  41bfbc:	str	x21, [sp, #16]
  41bfc0:	mov	x2, #0x112                 	// #274
  41bfc4:	bl	417dbc <ferror@plt+0x147ec>
  41bfc8:	ldr	w0, [x19, #704]
  41bfcc:	cbnz	w0, 41bf20 <ferror@plt+0x18950>
  41bfd0:	mov	w0, #0x1                   	// #1
  41bfd4:	mov	w7, w26
  41bfd8:	mov	w6, w25
  41bfdc:	mov	w5, w24
  41bfe0:	mov	x4, x22
  41bfe4:	mov	x3, #0x0                   	// #0
  41bfe8:	mov	x2, #0x113                 	// #275
  41bfec:	str	x20, [sp]
  41bff0:	strb	w0, [sp, #8]
  41bff4:	str	x21, [sp, #16]
  41bff8:	b	41c9d8 <ferror@plt+0x19408>
  41bffc:	cmp	w2, #0x1c2
  41c000:	b.eq	41cee8 <ferror@plt+0x19918>  // b.none
  41c004:	cmp	w2, #0x1cf
  41c008:	b.ne	41bf20 <ferror@plt+0x18950>  // b.any
  41c00c:	ldr	w2, [x1, #1336]
  41c010:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41c014:	mov	w2, #0x1                   	// #1
  41c018:	cmp	x4, #0x0
  41c01c:	cset	x4, ne  // ne = any
  41c020:	mov	x3, #0x0                   	// #0
  41c024:	str	x20, [sp]
  41c028:	strb	w2, [sp, #8]
  41c02c:	mov	x2, #0x1c6                 	// #454
  41c030:	str	x21, [sp, #16]
  41c034:	b	41ca04 <ferror@plt+0x19434>
  41c038:	ldr	w2, [x1, #272]
  41c03c:	cbnz	w2, 41c05c <ferror@plt+0x18a8c>
  41c040:	mov	w2, #0x1                   	// #1
  41c044:	str	x20, [sp]
  41c048:	strb	w2, [sp, #8]
  41c04c:	mov	x3, #0x0                   	// #0
  41c050:	str	x21, [sp, #16]
  41c054:	mov	x2, #0x9b                  	// #155
  41c058:	bl	417dbc <ferror@plt+0x147ec>
  41c05c:	ldr	w0, [x19, #336]
  41c060:	cbnz	w0, 41c09c <ferror@plt+0x18acc>
  41c064:	cmp	x22, #0x0
  41c068:	mov	w0, #0x1                   	// #1
  41c06c:	str	x20, [sp]
  41c070:	mov	w7, w26
  41c074:	strb	w0, [sp, #8]
  41c078:	mov	w6, w25
  41c07c:	str	x21, [sp, #16]
  41c080:	mov	w5, w24
  41c084:	cset	x4, ne  // ne = any
  41c088:	mov	x1, x19
  41c08c:	mov	x0, x23
  41c090:	mov	x3, #0x0                   	// #0
  41c094:	mov	x2, #0xab                  	// #171
  41c098:	bl	417dbc <ferror@plt+0x147ec>
  41c09c:	ldr	w0, [x19, #364]
  41c0a0:	cbnz	w0, 41c0d8 <ferror@plt+0x18b08>
  41c0a4:	mov	w0, #0x1                   	// #1
  41c0a8:	str	x20, [sp]
  41c0ac:	strb	w0, [sp, #8]
  41c0b0:	mov	w7, w26
  41c0b4:	str	x21, [sp, #16]
  41c0b8:	mov	w6, w25
  41c0bc:	mov	w5, w24
  41c0c0:	mov	x4, x22
  41c0c4:	mov	x1, x19
  41c0c8:	mov	x0, x23
  41c0cc:	mov	x3, #0x0                   	// #0
  41c0d0:	mov	x2, #0xb3                  	// #179
  41c0d4:	bl	417dbc <ferror@plt+0x147ec>
  41c0d8:	ldr	w0, [x19, #368]
  41c0dc:	cbnz	w0, 41c114 <ferror@plt+0x18b44>
  41c0e0:	mov	w0, #0x1                   	// #1
  41c0e4:	str	x20, [sp]
  41c0e8:	strb	w0, [sp, #8]
  41c0ec:	mov	w7, w26
  41c0f0:	str	x21, [sp, #16]
  41c0f4:	mov	w6, w25
  41c0f8:	mov	w5, w24
  41c0fc:	mov	x4, x22
  41c100:	mov	x1, x19
  41c104:	mov	x0, x23
  41c108:	mov	x3, #0x0                   	// #0
  41c10c:	mov	x2, #0xb4                  	// #180
  41c110:	bl	417dbc <ferror@plt+0x147ec>
  41c114:	ldr	w0, [x19, #436]
  41c118:	cbnz	w0, 41c150 <ferror@plt+0x18b80>
  41c11c:	mov	w0, #0x1                   	// #1
  41c120:	str	x20, [sp]
  41c124:	strb	w0, [sp, #8]
  41c128:	mov	w7, w26
  41c12c:	str	x21, [sp, #16]
  41c130:	mov	w6, w25
  41c134:	mov	w5, w24
  41c138:	mov	x4, x22
  41c13c:	mov	x1, x19
  41c140:	mov	x0, x23
  41c144:	mov	x3, #0x0                   	// #0
  41c148:	mov	x2, #0xc9                  	// #201
  41c14c:	bl	417dbc <ferror@plt+0x147ec>
  41c150:	ldr	w0, [x19, #456]
  41c154:	cbnz	w0, 41c18c <ferror@plt+0x18bbc>
  41c158:	mov	w0, #0x1                   	// #1
  41c15c:	str	x20, [sp]
  41c160:	strb	w0, [sp, #8]
  41c164:	mov	w7, w26
  41c168:	str	x21, [sp, #16]
  41c16c:	mov	w6, w25
  41c170:	mov	w5, w24
  41c174:	mov	x4, x22
  41c178:	mov	x1, x19
  41c17c:	mov	x0, x23
  41c180:	mov	x3, #0x0                   	// #0
  41c184:	mov	x2, #0xcf                  	// #207
  41c188:	bl	417dbc <ferror@plt+0x147ec>
  41c18c:	ldr	w0, [x19, #552]
  41c190:	cbnz	w0, 41c1c8 <ferror@plt+0x18bf8>
  41c194:	mov	w0, #0x1                   	// #1
  41c198:	str	x20, [sp]
  41c19c:	strb	w0, [sp, #8]
  41c1a0:	mov	w7, w26
  41c1a4:	str	x21, [sp, #16]
  41c1a8:	mov	w6, w25
  41c1ac:	mov	w5, w24
  41c1b0:	mov	x4, x22
  41c1b4:	mov	x1, x19
  41c1b8:	mov	x0, x23
  41c1bc:	mov	x3, #0x0                   	// #0
  41c1c0:	mov	x2, #0xe9                  	// #233
  41c1c4:	bl	417dbc <ferror@plt+0x147ec>
  41c1c8:	ldr	w0, [x19, #576]
  41c1cc:	cbnz	w0, 41c204 <ferror@plt+0x18c34>
  41c1d0:	mov	w0, #0x1                   	// #1
  41c1d4:	str	x20, [sp]
  41c1d8:	strb	w0, [sp, #8]
  41c1dc:	mov	w7, w26
  41c1e0:	str	x21, [sp, #16]
  41c1e4:	mov	w6, w25
  41c1e8:	mov	w5, w24
  41c1ec:	mov	x4, x22
  41c1f0:	mov	x1, x19
  41c1f4:	mov	x0, x23
  41c1f8:	mov	x3, #0x0                   	// #0
  41c1fc:	mov	x2, #0xef                  	// #239
  41c200:	bl	417dbc <ferror@plt+0x147ec>
  41c204:	ldr	w0, [x19, #644]
  41c208:	cbnz	w0, 41c244 <ferror@plt+0x18c74>
  41c20c:	cmp	x22, #0x0
  41c210:	mov	w0, #0x1                   	// #1
  41c214:	str	x20, [sp]
  41c218:	mov	w7, w26
  41c21c:	strb	w0, [sp, #8]
  41c220:	mov	w6, w25
  41c224:	str	x21, [sp, #16]
  41c228:	mov	w5, w24
  41c22c:	cset	x4, ne  // ne = any
  41c230:	mov	x1, x19
  41c234:	mov	x0, x23
  41c238:	mov	x3, #0x0                   	// #0
  41c23c:	mov	x2, #0x105                 	// #261
  41c240:	bl	417dbc <ferror@plt+0x147ec>
  41c244:	ldr	w0, [x19, #648]
  41c248:	cbnz	w0, 41c280 <ferror@plt+0x18cb0>
  41c24c:	mov	w0, #0x1                   	// #1
  41c250:	str	x20, [sp]
  41c254:	strb	w0, [sp, #8]
  41c258:	mov	w7, w26
  41c25c:	str	x21, [sp, #16]
  41c260:	mov	w6, w25
  41c264:	mov	w5, w24
  41c268:	mov	x4, x22
  41c26c:	mov	x1, x19
  41c270:	mov	x0, x23
  41c274:	mov	x3, #0x0                   	// #0
  41c278:	mov	x2, #0x106                 	// #262
  41c27c:	bl	417dbc <ferror@plt+0x147ec>
  41c280:	ldr	w0, [x19, #692]
  41c284:	cbnz	w0, 41c2bc <ferror@plt+0x18cec>
  41c288:	mov	w0, #0x1                   	// #1
  41c28c:	str	x20, [sp]
  41c290:	strb	w0, [sp, #8]
  41c294:	mov	w7, w26
  41c298:	str	x21, [sp, #16]
  41c29c:	mov	w6, w25
  41c2a0:	mov	w5, w24
  41c2a4:	mov	x4, x22
  41c2a8:	mov	x1, x19
  41c2ac:	mov	x0, x23
  41c2b0:	mov	x3, #0x0                   	// #0
  41c2b4:	mov	x2, #0x10f                 	// #271
  41c2b8:	bl	417dbc <ferror@plt+0x147ec>
  41c2bc:	ldr	w0, [x19, #740]
  41c2c0:	cbnz	w0, 41c2f8 <ferror@plt+0x18d28>
  41c2c4:	mov	w0, #0x1                   	// #1
  41c2c8:	str	x20, [sp]
  41c2cc:	strb	w0, [sp, #8]
  41c2d0:	mov	w7, w26
  41c2d4:	str	x21, [sp, #16]
  41c2d8:	mov	w6, w25
  41c2dc:	mov	w5, w24
  41c2e0:	mov	x4, x22
  41c2e4:	mov	x1, x19
  41c2e8:	mov	x0, x23
  41c2ec:	mov	x3, #0x0                   	// #0
  41c2f0:	mov	x2, #0x11d                 	// #285
  41c2f4:	bl	417dbc <ferror@plt+0x147ec>
  41c2f8:	ldr	w0, [x19, #792]
  41c2fc:	cbnz	w0, 41c334 <ferror@plt+0x18d64>
  41c300:	mov	w0, #0x1                   	// #1
  41c304:	str	x20, [sp]
  41c308:	strb	w0, [sp, #8]
  41c30c:	mov	w7, w26
  41c310:	str	x21, [sp, #16]
  41c314:	mov	w6, w25
  41c318:	mov	w5, w24
  41c31c:	mov	x4, x22
  41c320:	mov	x1, x19
  41c324:	mov	x0, x23
  41c328:	mov	x3, #0x0                   	// #0
  41c32c:	mov	x2, #0x12b                 	// #299
  41c330:	bl	417dbc <ferror@plt+0x147ec>
  41c334:	ldr	w0, [x19, #808]
  41c338:	cbnz	w0, 41c378 <ferror@plt+0x18da8>
  41c33c:	cmp	x22, #0x0
  41c340:	mov	w0, #0x1                   	// #1
  41c344:	cset	x4, ne  // ne = any
  41c348:	str	x20, [sp]
  41c34c:	strb	w0, [sp, #8]
  41c350:	mov	w7, w26
  41c354:	str	x21, [sp, #16]
  41c358:	lsl	x4, x4, x0
  41c35c:	mov	w6, w25
  41c360:	mov	w5, w24
  41c364:	mov	x1, x19
  41c368:	mov	x0, x23
  41c36c:	mov	x3, #0x0                   	// #0
  41c370:	mov	x2, #0x12f                 	// #303
  41c374:	bl	417dbc <ferror@plt+0x147ec>
  41c378:	ldr	w0, [x19, #812]
  41c37c:	cbnz	w0, 41c3b4 <ferror@plt+0x18de4>
  41c380:	mov	w0, #0x1                   	// #1
  41c384:	str	x20, [sp]
  41c388:	strb	w0, [sp, #8]
  41c38c:	mov	w7, w26
  41c390:	str	x21, [sp, #16]
  41c394:	mov	w6, w25
  41c398:	mov	w5, w24
  41c39c:	mov	x4, x22
  41c3a0:	mov	x1, x19
  41c3a4:	mov	x0, x23
  41c3a8:	mov	x3, #0x0                   	// #0
  41c3ac:	mov	x2, #0x130                 	// #304
  41c3b0:	bl	417dbc <ferror@plt+0x147ec>
  41c3b4:	ldr	w0, [x19, #816]
  41c3b8:	cbnz	w0, 41c3f0 <ferror@plt+0x18e20>
  41c3bc:	mov	w0, #0x1                   	// #1
  41c3c0:	str	x20, [sp]
  41c3c4:	strb	w0, [sp, #8]
  41c3c8:	mov	w7, w26
  41c3cc:	str	x21, [sp, #16]
  41c3d0:	mov	w6, w25
  41c3d4:	mov	w5, w24
  41c3d8:	mov	x4, x22
  41c3dc:	mov	x1, x19
  41c3e0:	mov	x0, x23
  41c3e4:	mov	x3, #0x0                   	// #0
  41c3e8:	mov	x2, #0x131                 	// #305
  41c3ec:	bl	417dbc <ferror@plt+0x147ec>
  41c3f0:	ldr	w0, [x19, #820]
  41c3f4:	cbnz	w0, 41c42c <ferror@plt+0x18e5c>
  41c3f8:	mov	w0, #0x1                   	// #1
  41c3fc:	str	x20, [sp]
  41c400:	strb	w0, [sp, #8]
  41c404:	mov	w7, w26
  41c408:	str	x21, [sp, #16]
  41c40c:	mov	w6, w25
  41c410:	mov	w5, w24
  41c414:	mov	x4, x22
  41c418:	mov	x1, x19
  41c41c:	mov	x0, x23
  41c420:	mov	x3, #0x0                   	// #0
  41c424:	mov	x2, #0x132                 	// #306
  41c428:	bl	417dbc <ferror@plt+0x147ec>
  41c42c:	ldr	w0, [x19, #828]
  41c430:	cbnz	w0, 41c468 <ferror@plt+0x18e98>
  41c434:	mov	w0, #0x1                   	// #1
  41c438:	str	x20, [sp]
  41c43c:	strb	w0, [sp, #8]
  41c440:	mov	w7, w26
  41c444:	str	x21, [sp, #16]
  41c448:	mov	w6, w25
  41c44c:	mov	w5, w24
  41c450:	mov	x4, x22
  41c454:	mov	x1, x19
  41c458:	mov	x0, x23
  41c45c:	mov	x3, #0x0                   	// #0
  41c460:	mov	x2, #0x134                 	// #308
  41c464:	bl	417dbc <ferror@plt+0x147ec>
  41c468:	ldr	w0, [x19, #832]
  41c46c:	cbnz	w0, 41c4a4 <ferror@plt+0x18ed4>
  41c470:	mov	w0, #0x1                   	// #1
  41c474:	str	x20, [sp]
  41c478:	strb	w0, [sp, #8]
  41c47c:	mov	w7, w26
  41c480:	str	x21, [sp, #16]
  41c484:	mov	w6, w25
  41c488:	mov	w5, w24
  41c48c:	mov	x4, x22
  41c490:	mov	x1, x19
  41c494:	mov	x0, x23
  41c498:	mov	x3, #0x0                   	// #0
  41c49c:	mov	x2, #0x135                 	// #309
  41c4a0:	bl	417dbc <ferror@plt+0x147ec>
  41c4a4:	ldr	w0, [x19, #868]
  41c4a8:	cbnz	w0, 41c4e0 <ferror@plt+0x18f10>
  41c4ac:	mov	w0, #0x1                   	// #1
  41c4b0:	str	x20, [sp]
  41c4b4:	strb	w0, [sp, #8]
  41c4b8:	mov	w7, w26
  41c4bc:	str	x21, [sp, #16]
  41c4c0:	mov	w6, w25
  41c4c4:	mov	w5, w24
  41c4c8:	mov	x4, x22
  41c4cc:	mov	x1, x19
  41c4d0:	mov	x0, x23
  41c4d4:	mov	x3, #0x0                   	// #0
  41c4d8:	mov	x2, #0x141                 	// #321
  41c4dc:	bl	417dbc <ferror@plt+0x147ec>
  41c4e0:	ldr	w0, [x19, #900]
  41c4e4:	cbnz	w0, 41c51c <ferror@plt+0x18f4c>
  41c4e8:	mov	w0, #0x1                   	// #1
  41c4ec:	str	x20, [sp]
  41c4f0:	strb	w0, [sp, #8]
  41c4f4:	mov	w7, w26
  41c4f8:	str	x21, [sp, #16]
  41c4fc:	mov	w6, w25
  41c500:	mov	w5, w24
  41c504:	mov	x4, x22
  41c508:	mov	x1, x19
  41c50c:	mov	x0, x23
  41c510:	mov	x3, #0x0                   	// #0
  41c514:	mov	x2, #0x14c                 	// #332
  41c518:	bl	417dbc <ferror@plt+0x147ec>
  41c51c:	ldr	w0, [x19, #904]
  41c520:	cbnz	w0, 41c558 <ferror@plt+0x18f88>
  41c524:	mov	w0, #0x1                   	// #1
  41c528:	str	x20, [sp]
  41c52c:	strb	w0, [sp, #8]
  41c530:	mov	w7, w26
  41c534:	str	x21, [sp, #16]
  41c538:	mov	w6, w25
  41c53c:	mov	w5, w24
  41c540:	mov	x4, x22
  41c544:	mov	x1, x19
  41c548:	mov	x0, x23
  41c54c:	mov	x3, #0x0                   	// #0
  41c550:	mov	x2, #0x14d                 	// #333
  41c554:	bl	417dbc <ferror@plt+0x147ec>
  41c558:	ldr	w0, [x19, #964]
  41c55c:	cbnz	w0, 41c594 <ferror@plt+0x18fc4>
  41c560:	mov	w0, #0x1                   	// #1
  41c564:	str	x20, [sp]
  41c568:	strb	w0, [sp, #8]
  41c56c:	mov	w7, w26
  41c570:	str	x21, [sp, #16]
  41c574:	mov	w6, w25
  41c578:	mov	w5, w24
  41c57c:	mov	x4, x22
  41c580:	mov	x1, x19
  41c584:	mov	x0, x23
  41c588:	mov	x3, #0x0                   	// #0
  41c58c:	mov	x2, #0x15e                 	// #350
  41c590:	bl	417dbc <ferror@plt+0x147ec>
  41c594:	ldr	w0, [x19, #972]
  41c598:	cbnz	w0, 41c5d0 <ferror@plt+0x19000>
  41c59c:	mov	w0, #0x1                   	// #1
  41c5a0:	str	x20, [sp]
  41c5a4:	strb	w0, [sp, #8]
  41c5a8:	mov	w7, w26
  41c5ac:	str	x21, [sp, #16]
  41c5b0:	mov	w6, w25
  41c5b4:	mov	w5, w24
  41c5b8:	mov	x4, x22
  41c5bc:	mov	x1, x19
  41c5c0:	mov	x0, x23
  41c5c4:	mov	x3, #0x0                   	// #0
  41c5c8:	mov	x2, #0x160                 	// #352
  41c5cc:	bl	417dbc <ferror@plt+0x147ec>
  41c5d0:	ldr	w0, [x19, #1000]
  41c5d4:	cbnz	w0, 41c60c <ferror@plt+0x1903c>
  41c5d8:	mov	w0, #0x1                   	// #1
  41c5dc:	str	x20, [sp]
  41c5e0:	strb	w0, [sp, #8]
  41c5e4:	mov	w7, w26
  41c5e8:	str	x21, [sp, #16]
  41c5ec:	mov	w6, w25
  41c5f0:	mov	w5, w24
  41c5f4:	mov	x4, x22
  41c5f8:	mov	x1, x19
  41c5fc:	mov	x0, x23
  41c600:	mov	x3, #0x0                   	// #0
  41c604:	mov	x2, #0x168                 	// #360
  41c608:	bl	417dbc <ferror@plt+0x147ec>
  41c60c:	ldr	w0, [x19, #1056]
  41c610:	cbnz	w0, 41c648 <ferror@plt+0x19078>
  41c614:	mov	w0, #0x1                   	// #1
  41c618:	str	x20, [sp]
  41c61c:	strb	w0, [sp, #8]
  41c620:	mov	w7, w26
  41c624:	str	x21, [sp, #16]
  41c628:	mov	w6, w25
  41c62c:	mov	w5, w24
  41c630:	mov	x4, x22
  41c634:	mov	x1, x19
  41c638:	mov	x0, x23
  41c63c:	mov	x3, #0x0                   	// #0
  41c640:	mov	x2, #0x176                 	// #374
  41c644:	bl	417dbc <ferror@plt+0x147ec>
  41c648:	ldr	w0, [x19, #1064]
  41c64c:	cbnz	w0, 41c684 <ferror@plt+0x190b4>
  41c650:	mov	w0, #0x1                   	// #1
  41c654:	str	x20, [sp]
  41c658:	strb	w0, [sp, #8]
  41c65c:	mov	w7, w26
  41c660:	str	x21, [sp, #16]
  41c664:	mov	w6, w25
  41c668:	mov	w5, w24
  41c66c:	mov	x4, x22
  41c670:	mov	x1, x19
  41c674:	mov	x0, x23
  41c678:	mov	x3, #0x0                   	// #0
  41c67c:	mov	x2, #0x178                 	// #376
  41c680:	bl	417dbc <ferror@plt+0x147ec>
  41c684:	ldr	w0, [x19, #1072]
  41c688:	cbnz	w0, 41c6c0 <ferror@plt+0x190f0>
  41c68c:	mov	w0, #0x1                   	// #1
  41c690:	str	x20, [sp]
  41c694:	strb	w0, [sp, #8]
  41c698:	mov	w7, w26
  41c69c:	str	x21, [sp, #16]
  41c6a0:	mov	w6, w25
  41c6a4:	mov	w5, w24
  41c6a8:	mov	x4, x22
  41c6ac:	mov	x1, x19
  41c6b0:	mov	x0, x23
  41c6b4:	mov	x3, #0x0                   	// #0
  41c6b8:	mov	x2, #0x17b                 	// #379
  41c6bc:	bl	417dbc <ferror@plt+0x147ec>
  41c6c0:	ldr	w0, [x19, #1128]
  41c6c4:	cbnz	w0, 41c6fc <ferror@plt+0x1912c>
  41c6c8:	mov	w0, #0x1                   	// #1
  41c6cc:	str	x20, [sp]
  41c6d0:	strb	w0, [sp, #8]
  41c6d4:	mov	w7, w26
  41c6d8:	str	x21, [sp, #16]
  41c6dc:	mov	w6, w25
  41c6e0:	mov	w5, w24
  41c6e4:	mov	x4, x22
  41c6e8:	mov	x1, x19
  41c6ec:	mov	x0, x23
  41c6f0:	mov	x3, #0x0                   	// #0
  41c6f4:	mov	x2, #0x18d                 	// #397
  41c6f8:	bl	417dbc <ferror@plt+0x147ec>
  41c6fc:	ldr	w0, [x19, #1132]
  41c700:	cbnz	w0, 41c738 <ferror@plt+0x19168>
  41c704:	mov	w0, #0x1                   	// #1
  41c708:	str	x20, [sp]
  41c70c:	strb	w0, [sp, #8]
  41c710:	mov	w7, w26
  41c714:	str	x21, [sp, #16]
  41c718:	mov	w6, w25
  41c71c:	mov	w5, w24
  41c720:	mov	x4, x22
  41c724:	mov	x1, x19
  41c728:	mov	x0, x23
  41c72c:	mov	x3, #0x0                   	// #0
  41c730:	mov	x2, #0x18e                 	// #398
  41c734:	bl	417dbc <ferror@plt+0x147ec>
  41c738:	ldr	w0, [x19, #1152]
  41c73c:	cbnz	w0, 41c77c <ferror@plt+0x191ac>
  41c740:	cmp	x22, #0x0
  41c744:	mov	w0, #0x1                   	// #1
  41c748:	str	x20, [sp]
  41c74c:	mov	x4, #0x3                   	// #3
  41c750:	strb	w0, [sp, #8]
  41c754:	mov	w7, w26
  41c758:	str	x21, [sp, #16]
  41c75c:	mov	w6, w25
  41c760:	mov	w5, w24
  41c764:	csel	x4, x4, xzr, ne  // ne = any
  41c768:	mov	x1, x19
  41c76c:	mov	x0, x23
  41c770:	mov	x3, #0x0                   	// #0
  41c774:	mov	x2, #0x193                 	// #403
  41c778:	bl	417dbc <ferror@plt+0x147ec>
  41c77c:	ldr	w0, [x19, #1160]
  41c780:	cbnz	w0, 41c7bc <ferror@plt+0x191ec>
  41c784:	cmp	x22, #0x0
  41c788:	mov	w0, #0x1                   	// #1
  41c78c:	str	x20, [sp]
  41c790:	mov	w7, w26
  41c794:	strb	w0, [sp, #8]
  41c798:	mov	w6, w25
  41c79c:	str	x21, [sp, #16]
  41c7a0:	mov	w5, w24
  41c7a4:	cset	x4, ne  // ne = any
  41c7a8:	mov	x1, x19
  41c7ac:	mov	x0, x23
  41c7b0:	mov	x3, #0x0                   	// #0
  41c7b4:	mov	x2, #0x196                 	// #406
  41c7b8:	bl	417dbc <ferror@plt+0x147ec>
  41c7bc:	ldr	w0, [x19, #1172]
  41c7c0:	cbnz	w0, 41c800 <ferror@plt+0x19230>
  41c7c4:	cmp	x22, #0x0
  41c7c8:	mov	w0, #0x1                   	// #1
  41c7cc:	cset	x4, ne  // ne = any
  41c7d0:	str	x20, [sp]
  41c7d4:	strb	w0, [sp, #8]
  41c7d8:	mov	w7, w26
  41c7dc:	str	x21, [sp, #16]
  41c7e0:	lsl	x4, x4, x0
  41c7e4:	mov	w6, w25
  41c7e8:	mov	w5, w24
  41c7ec:	mov	x1, x19
  41c7f0:	mov	x0, x23
  41c7f4:	mov	x3, #0x0                   	// #0
  41c7f8:	mov	x2, #0x19a                 	// #410
  41c7fc:	bl	417dbc <ferror@plt+0x147ec>
  41c800:	ldr	w0, [x19, #1176]
  41c804:	cbnz	w0, 41c83c <ferror@plt+0x1926c>
  41c808:	mov	w0, #0x1                   	// #1
  41c80c:	str	x20, [sp]
  41c810:	strb	w0, [sp, #8]
  41c814:	mov	w7, w26
  41c818:	str	x21, [sp, #16]
  41c81c:	mov	w6, w25
  41c820:	mov	w5, w24
  41c824:	mov	x4, x22
  41c828:	mov	x1, x19
  41c82c:	mov	x0, x23
  41c830:	mov	x3, #0x0                   	// #0
  41c834:	mov	x2, #0x19b                 	// #411
  41c838:	bl	417dbc <ferror@plt+0x147ec>
  41c83c:	ldr	w0, [x19, #1224]
  41c840:	cbnz	w0, 41c878 <ferror@plt+0x192a8>
  41c844:	mov	w0, #0x1                   	// #1
  41c848:	str	x20, [sp]
  41c84c:	strb	w0, [sp, #8]
  41c850:	mov	w7, w26
  41c854:	str	x21, [sp, #16]
  41c858:	mov	w6, w25
  41c85c:	mov	w5, w24
  41c860:	mov	x4, x22
  41c864:	mov	x1, x19
  41c868:	mov	x0, x23
  41c86c:	mov	x3, #0x0                   	// #0
  41c870:	mov	x2, #0x1a7                 	// #423
  41c874:	bl	417dbc <ferror@plt+0x147ec>
  41c878:	ldr	w0, [x19, #1264]
  41c87c:	cbnz	w0, 41c8b4 <ferror@plt+0x192e4>
  41c880:	mov	w0, #0x1                   	// #1
  41c884:	str	x20, [sp]
  41c888:	strb	w0, [sp, #8]
  41c88c:	mov	w7, w26
  41c890:	str	x21, [sp, #16]
  41c894:	mov	w6, w25
  41c898:	mov	w5, w24
  41c89c:	mov	x4, x22
  41c8a0:	mov	x1, x19
  41c8a4:	mov	x0, x23
  41c8a8:	mov	x3, #0x0                   	// #0
  41c8ac:	mov	x2, #0x1b1                 	// #433
  41c8b0:	bl	417dbc <ferror@plt+0x147ec>
  41c8b4:	ldr	w0, [x19, #1288]
  41c8b8:	cbnz	w0, 41c8f0 <ferror@plt+0x19320>
  41c8bc:	mov	w0, #0x1                   	// #1
  41c8c0:	str	x20, [sp]
  41c8c4:	strb	w0, [sp, #8]
  41c8c8:	mov	w7, w26
  41c8cc:	str	x21, [sp, #16]
  41c8d0:	mov	w6, w25
  41c8d4:	mov	w5, w24
  41c8d8:	mov	x4, x22
  41c8dc:	mov	x1, x19
  41c8e0:	mov	x0, x23
  41c8e4:	mov	x3, #0x0                   	// #0
  41c8e8:	mov	x2, #0x1b7                 	// #439
  41c8ec:	bl	417dbc <ferror@plt+0x147ec>
  41c8f0:	ldr	w0, [x19, #1312]
  41c8f4:	cbnz	w0, 41c92c <ferror@plt+0x1935c>
  41c8f8:	mov	w0, #0x1                   	// #1
  41c8fc:	str	x20, [sp]
  41c900:	strb	w0, [sp, #8]
  41c904:	mov	w7, w26
  41c908:	str	x21, [sp, #16]
  41c90c:	mov	w6, w25
  41c910:	mov	w5, w24
  41c914:	mov	x4, x22
  41c918:	mov	x1, x19
  41c91c:	mov	x0, x23
  41c920:	mov	x3, #0x0                   	// #0
  41c924:	mov	x2, #0x1bd                 	// #445
  41c928:	bl	417dbc <ferror@plt+0x147ec>
  41c92c:	ldr	w0, [x19, #1316]
  41c930:	cbnz	w0, 41c96c <ferror@plt+0x1939c>
  41c934:	cmp	x22, #0x0
  41c938:	mov	w0, #0x1                   	// #1
  41c93c:	str	x20, [sp]
  41c940:	mov	w7, w26
  41c944:	strb	w0, [sp, #8]
  41c948:	mov	w6, w25
  41c94c:	str	x21, [sp, #16]
  41c950:	mov	w5, w24
  41c954:	cset	x4, ne  // ne = any
  41c958:	mov	x1, x19
  41c95c:	mov	x0, x23
  41c960:	mov	x3, #0x0                   	// #0
  41c964:	mov	x2, #0x1be                 	// #446
  41c968:	bl	417dbc <ferror@plt+0x147ec>
  41c96c:	ldr	w0, [x19, #1324]
  41c970:	cbnz	w0, 41c9a8 <ferror@plt+0x193d8>
  41c974:	mov	w0, #0x1                   	// #1
  41c978:	str	x20, [sp]
  41c97c:	strb	w0, [sp, #8]
  41c980:	mov	w7, w26
  41c984:	str	x21, [sp, #16]
  41c988:	mov	w6, w25
  41c98c:	mov	w5, w24
  41c990:	mov	x4, x22
  41c994:	mov	x1, x19
  41c998:	mov	x0, x23
  41c99c:	mov	x3, #0x0                   	// #0
  41c9a0:	mov	x2, #0x1c2                 	// #450
  41c9a4:	bl	417dbc <ferror@plt+0x147ec>
  41c9a8:	ldr	w0, [x19, #1416]
  41c9ac:	cbnz	w0, 41bf20 <ferror@plt+0x18950>
  41c9b0:	mov	w7, w26
  41c9b4:	mov	w6, w25
  41c9b8:	mov	w5, w24
  41c9bc:	mov	x4, x22
  41c9c0:	mov	w0, #0x1                   	// #1
  41c9c4:	mov	x3, #0x0                   	// #0
  41c9c8:	mov	x2, #0x1d9                 	// #473
  41c9cc:	str	x20, [sp]
  41c9d0:	strb	w0, [sp, #8]
  41c9d4:	str	x21, [sp, #16]
  41c9d8:	mov	x1, x19
  41c9dc:	mov	x0, x23
  41c9e0:	b	41ca04 <ferror@plt+0x19434>
  41c9e4:	ldr	w2, [x1, #492]
  41c9e8:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41c9ec:	mov	w2, #0x1                   	// #1
  41c9f0:	mov	x3, #0x0                   	// #0
  41c9f4:	str	x20, [sp]
  41c9f8:	strb	w2, [sp, #8]
  41c9fc:	mov	x2, #0xd9                  	// #217
  41ca00:	str	x21, [sp, #16]
  41ca04:	bl	417dbc <ferror@plt+0x147ec>
  41ca08:	b	41bf20 <ferror@plt+0x18950>
  41ca0c:	ldr	w2, [x1, #572]
  41ca10:	cbnz	w2, 41ca30 <ferror@plt+0x19460>
  41ca14:	mov	w2, #0x1                   	// #1
  41ca18:	str	x20, [sp]
  41ca1c:	strb	w2, [sp, #8]
  41ca20:	mov	x3, #0x0                   	// #0
  41ca24:	str	x21, [sp, #16]
  41ca28:	mov	x2, #0xee                  	// #238
  41ca2c:	bl	417dbc <ferror@plt+0x147ec>
  41ca30:	ldr	w0, [x19, #808]
  41ca34:	cbnz	w0, 41ca74 <ferror@plt+0x194a4>
  41ca38:	cmp	x22, #0x0
  41ca3c:	mov	w0, #0x1                   	// #1
  41ca40:	cset	x4, ne  // ne = any
  41ca44:	str	x20, [sp]
  41ca48:	strb	w0, [sp, #8]
  41ca4c:	mov	w7, w26
  41ca50:	str	x21, [sp, #16]
  41ca54:	lsl	x4, x4, x0
  41ca58:	mov	w6, w25
  41ca5c:	mov	w5, w24
  41ca60:	mov	x1, x19
  41ca64:	mov	x0, x23
  41ca68:	mov	x3, #0x0                   	// #0
  41ca6c:	mov	x2, #0x12f                 	// #303
  41ca70:	bl	417dbc <ferror@plt+0x147ec>
  41ca74:	ldr	w0, [x19, #940]
  41ca78:	cbnz	w0, 41cab0 <ferror@plt+0x194e0>
  41ca7c:	mov	w0, #0x1                   	// #1
  41ca80:	str	x20, [sp]
  41ca84:	strb	w0, [sp, #8]
  41ca88:	mov	w7, w26
  41ca8c:	str	x21, [sp, #16]
  41ca90:	mov	w6, w25
  41ca94:	mov	w5, w24
  41ca98:	mov	x4, x22
  41ca9c:	mov	x1, x19
  41caa0:	mov	x0, x23
  41caa4:	mov	x3, #0x0                   	// #0
  41caa8:	mov	x2, #0x157                 	// #343
  41caac:	bl	417dbc <ferror@plt+0x147ec>
  41cab0:	ldr	w0, [x19, #992]
  41cab4:	cbnz	w0, 41caec <ferror@plt+0x1951c>
  41cab8:	mov	w0, #0x1                   	// #1
  41cabc:	str	x20, [sp]
  41cac0:	strb	w0, [sp, #8]
  41cac4:	mov	w7, w26
  41cac8:	str	x21, [sp, #16]
  41cacc:	mov	w6, w25
  41cad0:	mov	w5, w24
  41cad4:	mov	x4, x22
  41cad8:	mov	x1, x19
  41cadc:	mov	x0, x23
  41cae0:	mov	x3, #0x0                   	// #0
  41cae4:	mov	x2, #0x166                 	// #358
  41cae8:	bl	417dbc <ferror@plt+0x147ec>
  41caec:	ldr	w0, [x19, #1000]
  41caf0:	cbnz	w0, 41cb28 <ferror@plt+0x19558>
  41caf4:	mov	w0, #0x1                   	// #1
  41caf8:	str	x20, [sp]
  41cafc:	strb	w0, [sp, #8]
  41cb00:	mov	w7, w26
  41cb04:	str	x21, [sp, #16]
  41cb08:	mov	w6, w25
  41cb0c:	mov	w5, w24
  41cb10:	mov	x4, x22
  41cb14:	mov	x1, x19
  41cb18:	mov	x0, x23
  41cb1c:	mov	x3, #0x0                   	// #0
  41cb20:	mov	x2, #0x168                 	// #360
  41cb24:	bl	417dbc <ferror@plt+0x147ec>
  41cb28:	ldr	w0, [x19, #1388]
  41cb2c:	cbnz	w0, 41bf20 <ferror@plt+0x18950>
  41cb30:	mov	w0, #0x1                   	// #1
  41cb34:	mov	w7, w26
  41cb38:	mov	w6, w25
  41cb3c:	mov	w5, w24
  41cb40:	mov	x4, x22
  41cb44:	mov	x3, #0x0                   	// #0
  41cb48:	mov	x2, #0x1d3                 	// #467
  41cb4c:	str	x20, [sp]
  41cb50:	strb	w0, [sp, #8]
  41cb54:	str	x21, [sp, #16]
  41cb58:	b	41c9d8 <ferror@plt+0x19408>
  41cb5c:	ldr	w2, [x1, #576]
  41cb60:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41cb64:	mov	w2, #0x1                   	// #1
  41cb68:	mov	x3, #0x0                   	// #0
  41cb6c:	str	x20, [sp]
  41cb70:	strb	w2, [sp, #8]
  41cb74:	mov	x2, #0xef                  	// #239
  41cb78:	str	x21, [sp, #16]
  41cb7c:	b	41ca04 <ferror@plt+0x19434>
  41cb80:	ldr	w2, [x1, #600]
  41cb84:	cbnz	w2, 41cba4 <ferror@plt+0x195d4>
  41cb88:	mov	w2, #0x1                   	// #1
  41cb8c:	str	x20, [sp]
  41cb90:	strb	w2, [sp, #8]
  41cb94:	mov	x3, #0x0                   	// #0
  41cb98:	str	x21, [sp, #16]
  41cb9c:	mov	x2, #0xf7                  	// #247
  41cba0:	bl	417dbc <ferror@plt+0x147ec>
  41cba4:	ldr	w0, [x19, #1112]
  41cba8:	cbnz	w0, 41bf20 <ferror@plt+0x18950>
  41cbac:	mov	w0, #0x1                   	// #1
  41cbb0:	mov	w7, w26
  41cbb4:	mov	w6, w25
  41cbb8:	mov	w5, w24
  41cbbc:	mov	x4, x22
  41cbc0:	mov	x3, #0x0                   	// #0
  41cbc4:	mov	x2, #0x189                 	// #393
  41cbc8:	str	x20, [sp]
  41cbcc:	strb	w0, [sp, #8]
  41cbd0:	str	x21, [sp, #16]
  41cbd4:	b	41c9d8 <ferror@plt+0x19408>
  41cbd8:	ldr	w4, [x1, #608]
  41cbdc:	cbnz	w4, 41cc28 <ferror@plt+0x19658>
  41cbe0:	cbz	x22, 41cbf4 <ferror@plt+0x19624>
  41cbe4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41cbe8:	ldr	w0, [x0, #1204]
  41cbec:	cmp	w0, #0x0
  41cbf0:	cset	w4, gt
  41cbf4:	mov	w0, #0x1                   	// #1
  41cbf8:	str	x20, [sp]
  41cbfc:	strb	w0, [sp, #8]
  41cc00:	mov	w7, w26
  41cc04:	str	x21, [sp, #16]
  41cc08:	mov	w6, w25
  41cc0c:	mov	w5, w24
  41cc10:	sxtw	x4, w4
  41cc14:	mov	x1, x19
  41cc18:	mov	x0, x23
  41cc1c:	mov	x3, #0x0                   	// #0
  41cc20:	mov	x2, #0xfa                  	// #250
  41cc24:	bl	417dbc <ferror@plt+0x147ec>
  41cc28:	ldr	w4, [x19, #612]
  41cc2c:	cbnz	w4, 41cc78 <ferror@plt+0x196a8>
  41cc30:	cbz	x22, 41cc44 <ferror@plt+0x19674>
  41cc34:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41cc38:	ldr	w0, [x0, #1204]
  41cc3c:	cmp	w0, #0x0
  41cc40:	cset	w4, gt
  41cc44:	mov	w0, #0x1                   	// #1
  41cc48:	str	x20, [sp]
  41cc4c:	strb	w0, [sp, #8]
  41cc50:	mov	w7, w26
  41cc54:	str	x21, [sp, #16]
  41cc58:	mov	w6, w25
  41cc5c:	mov	w5, w24
  41cc60:	sxtw	x4, w4
  41cc64:	mov	x1, x19
  41cc68:	mov	x0, x23
  41cc6c:	mov	x3, #0x0                   	// #0
  41cc70:	mov	x2, #0xfb                  	// #251
  41cc74:	bl	417dbc <ferror@plt+0x147ec>
  41cc78:	ldr	w4, [x19, #616]
  41cc7c:	cbnz	w4, 41ccc8 <ferror@plt+0x196f8>
  41cc80:	cbz	x22, 41cc94 <ferror@plt+0x196c4>
  41cc84:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41cc88:	ldr	w0, [x0, #1204]
  41cc8c:	cmp	w0, #0x1
  41cc90:	cset	w4, gt
  41cc94:	mov	w0, #0x1                   	// #1
  41cc98:	str	x20, [sp]
  41cc9c:	strb	w0, [sp, #8]
  41cca0:	mov	w7, w26
  41cca4:	str	x21, [sp, #16]
  41cca8:	mov	w6, w25
  41ccac:	mov	w5, w24
  41ccb0:	sxtw	x4, w4
  41ccb4:	mov	x1, x19
  41ccb8:	mov	x0, x23
  41ccbc:	mov	x3, #0x0                   	// #0
  41ccc0:	mov	x2, #0xfc                  	// #252
  41ccc4:	bl	417dbc <ferror@plt+0x147ec>
  41ccc8:	ldr	w4, [x19, #620]
  41cccc:	cbnz	w4, 41cd18 <ferror@plt+0x19748>
  41ccd0:	cbz	x22, 41cce4 <ferror@plt+0x19714>
  41ccd4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41ccd8:	ldr	w0, [x0, #1204]
  41ccdc:	cmp	w0, #0x0
  41cce0:	cset	w4, gt
  41cce4:	mov	w0, #0x1                   	// #1
  41cce8:	str	x20, [sp]
  41ccec:	strb	w0, [sp, #8]
  41ccf0:	mov	w7, w26
  41ccf4:	str	x21, [sp, #16]
  41ccf8:	mov	w6, w25
  41ccfc:	mov	w5, w24
  41cd00:	sxtw	x4, w4
  41cd04:	mov	x1, x19
  41cd08:	mov	x0, x23
  41cd0c:	mov	x3, #0x0                   	// #0
  41cd10:	mov	x2, #0xfe                  	// #254
  41cd14:	bl	417dbc <ferror@plt+0x147ec>
  41cd18:	ldr	w4, [x19, #624]
  41cd1c:	cbnz	w4, 41cd68 <ferror@plt+0x19798>
  41cd20:	cbz	x22, 41cd34 <ferror@plt+0x19764>
  41cd24:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41cd28:	ldr	w0, [x0, #1204]
  41cd2c:	cmp	w0, #0x1
  41cd30:	cset	w4, gt
  41cd34:	mov	w0, #0x1                   	// #1
  41cd38:	str	x20, [sp]
  41cd3c:	strb	w0, [sp, #8]
  41cd40:	mov	w7, w26
  41cd44:	str	x21, [sp, #16]
  41cd48:	mov	w6, w25
  41cd4c:	mov	w5, w24
  41cd50:	sxtw	x4, w4
  41cd54:	mov	x1, x19
  41cd58:	mov	x0, x23
  41cd5c:	mov	x3, #0x0                   	// #0
  41cd60:	mov	x2, #0xff                  	// #255
  41cd64:	bl	417dbc <ferror@plt+0x147ec>
  41cd68:	ldr	w4, [x19, #632]
  41cd6c:	cbnz	w4, 41cdb8 <ferror@plt+0x197e8>
  41cd70:	cbz	x22, 41cd84 <ferror@plt+0x197b4>
  41cd74:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41cd78:	ldr	w0, [x0, #1204]
  41cd7c:	cmp	w0, #0x0
  41cd80:	cset	w4, gt
  41cd84:	mov	w0, #0x1                   	// #1
  41cd88:	str	x20, [sp]
  41cd8c:	strb	w0, [sp, #8]
  41cd90:	mov	w7, w26
  41cd94:	str	x21, [sp, #16]
  41cd98:	mov	w6, w25
  41cd9c:	mov	w5, w24
  41cda0:	sxtw	x4, w4
  41cda4:	mov	x1, x19
  41cda8:	mov	x0, x23
  41cdac:	mov	x3, #0x0                   	// #0
  41cdb0:	mov	x2, #0x102                 	// #258
  41cdb4:	bl	417dbc <ferror@plt+0x147ec>
  41cdb8:	ldr	w4, [x19, #636]
  41cdbc:	cbnz	w4, 41ce08 <ferror@plt+0x19838>
  41cdc0:	cbz	x22, 41cdd4 <ferror@plt+0x19804>
  41cdc4:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41cdc8:	ldr	w0, [x0, #1204]
  41cdcc:	cmp	w0, #0x1
  41cdd0:	cset	w4, gt
  41cdd4:	mov	w0, #0x1                   	// #1
  41cdd8:	str	x20, [sp]
  41cddc:	strb	w0, [sp, #8]
  41cde0:	mov	w7, w26
  41cde4:	str	x21, [sp, #16]
  41cde8:	mov	w6, w25
  41cdec:	mov	w5, w24
  41cdf0:	sxtw	x4, w4
  41cdf4:	mov	x1, x19
  41cdf8:	mov	x0, x23
  41cdfc:	mov	x3, #0x0                   	// #0
  41ce00:	mov	x2, #0x103                 	// #259
  41ce04:	bl	417dbc <ferror@plt+0x147ec>
  41ce08:	ldr	w4, [x19, #640]
  41ce0c:	cbnz	w4, 41ce58 <ferror@plt+0x19888>
  41ce10:	cbz	x22, 41ce24 <ferror@plt+0x19854>
  41ce14:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41ce18:	ldr	w0, [x0, #1204]
  41ce1c:	cmp	w0, #0x0
  41ce20:	cset	w4, gt
  41ce24:	mov	w0, #0x1                   	// #1
  41ce28:	str	x20, [sp]
  41ce2c:	strb	w0, [sp, #8]
  41ce30:	mov	w7, w26
  41ce34:	str	x21, [sp, #16]
  41ce38:	mov	w6, w25
  41ce3c:	mov	w5, w24
  41ce40:	sxtw	x4, w4
  41ce44:	mov	x1, x19
  41ce48:	mov	x0, x23
  41ce4c:	mov	x3, #0x0                   	// #0
  41ce50:	mov	x2, #0x104                 	// #260
  41ce54:	bl	417dbc <ferror@plt+0x147ec>
  41ce58:	ldr	w4, [x19, #900]
  41ce5c:	cbnz	w4, 41bf20 <ferror@plt+0x18950>
  41ce60:	cbz	x22, 41ce74 <ferror@plt+0x198a4>
  41ce64:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41ce68:	ldr	w0, [x0, #1204]
  41ce6c:	cmp	w0, #0x0
  41ce70:	cset	w4, gt
  41ce74:	mov	w0, #0x1                   	// #1
  41ce78:	mov	w7, w26
  41ce7c:	mov	w6, w25
  41ce80:	mov	w5, w24
  41ce84:	sxtw	x4, w4
  41ce88:	mov	x3, #0x0                   	// #0
  41ce8c:	mov	x2, #0x14c                 	// #332
  41ce90:	str	x20, [sp]
  41ce94:	strb	w0, [sp, #8]
  41ce98:	str	x21, [sp, #16]
  41ce9c:	b	41c9d8 <ferror@plt+0x19408>
  41cea0:	ldr	w2, [x1, #800]
  41cea4:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41cea8:	mov	w2, #0x1                   	// #1
  41ceac:	mov	x3, #0x0                   	// #0
  41ceb0:	str	x20, [sp]
  41ceb4:	strb	w2, [sp, #8]
  41ceb8:	mov	x2, #0x12d                 	// #301
  41cebc:	str	x21, [sp, #16]
  41cec0:	b	41ca04 <ferror@plt+0x19434>
  41cec4:	ldr	w2, [x1, #1024]
  41cec8:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41cecc:	mov	w2, #0x1                   	// #1
  41ced0:	mov	x3, #0x0                   	// #0
  41ced4:	str	x20, [sp]
  41ced8:	strb	w2, [sp, #8]
  41cedc:	mov	x2, #0x16e                 	// #366
  41cee0:	str	x21, [sp, #16]
  41cee4:	b	41ca04 <ferror@plt+0x19434>
  41cee8:	ldr	w2, [x1, #1372]
  41ceec:	cbnz	w2, 41bf20 <ferror@plt+0x18950>
  41cef0:	mov	w2, #0x1                   	// #1
  41cef4:	mov	x3, #0x0                   	// #0
  41cef8:	str	x20, [sp]
  41cefc:	strb	w2, [sp, #8]
  41cf00:	mov	x2, #0x1cf                 	// #463
  41cf04:	str	x21, [sp, #16]
  41cf08:	b	41ca04 <ferror@plt+0x19434>
  41cf0c:	sub	sp, sp, #0x70
  41cf10:	cmp	w2, #0xf4
  41cf14:	stp	x29, x30, [sp, #32]
  41cf18:	add	x29, sp, #0x20
  41cf1c:	stp	x19, x20, [sp, #48]
  41cf20:	mov	x19, x1
  41cf24:	stp	x21, x22, [sp, #64]
  41cf28:	mov	x22, x0
  41cf2c:	stp	x23, x24, [sp, #80]
  41cf30:	mov	x23, x4
  41cf34:	mov	w24, w5
  41cf38:	stp	x25, x26, [sp, #96]
  41cf3c:	mov	w25, w6
  41cf40:	mov	w26, w7
  41cf44:	ldp	x20, x21, [sp, #112]
  41cf48:	b.eq	41db88 <ferror@plt+0x1a5b8>  // b.none
  41cf4c:	b.gt	41cffc <ferror@plt+0x19a2c>
  41cf50:	cmp	w2, #0xbb
  41cf54:	b.eq	41e0a0 <ferror@plt+0x1aad0>  // b.none
  41cf58:	b.gt	41cf94 <ferror@plt+0x199c4>
  41cf5c:	cmp	w2, #0xa3
  41cf60:	b.eq	41d074 <ferror@plt+0x19aa4>  // b.none
  41cf64:	cmp	w2, #0xb9
  41cf68:	b.eq	41e024 <ferror@plt+0x1aa54>  // b.none
  41cf6c:	cmp	w2, #0x97
  41cf70:	b.eq	41e048 <ferror@plt+0x1aa78>  // b.none
  41cf74:	mov	w0, #0x1                   	// #1
  41cf78:	ldp	x29, x30, [sp, #32]
  41cf7c:	ldp	x19, x20, [sp, #48]
  41cf80:	ldp	x21, x22, [sp, #64]
  41cf84:	ldp	x23, x24, [sp, #80]
  41cf88:	ldp	x25, x26, [sp, #96]
  41cf8c:	add	sp, sp, #0x70
  41cf90:	ret
  41cf94:	cmp	w2, #0xd3
  41cf98:	b.eq	41dd38 <ferror@plt+0x1a768>  // b.none
  41cf9c:	cmp	w2, #0xec
  41cfa0:	b.ne	41cf74 <ferror@plt+0x199a4>  // b.any
  41cfa4:	ldr	w2, [x1, #508]
  41cfa8:	cbnz	w2, 41cfc8 <ferror@plt+0x199f8>
  41cfac:	mov	w2, #0x1                   	// #1
  41cfb0:	str	x20, [sp]
  41cfb4:	strb	w2, [sp, #8]
  41cfb8:	mov	x3, #0x0                   	// #0
  41cfbc:	str	x21, [sp, #16]
  41cfc0:	mov	x2, #0xdd                  	// #221
  41cfc4:	bl	417dbc <ferror@plt+0x147ec>
  41cfc8:	ldr	w0, [x19, #896]
  41cfcc:	cbnz	w0, 41cf74 <ferror@plt+0x199a4>
  41cfd0:	mov	w0, #0x1                   	// #1
  41cfd4:	mov	w7, w26
  41cfd8:	mov	w6, w25
  41cfdc:	mov	w5, w24
  41cfe0:	mov	x4, x23
  41cfe4:	mov	x3, #0x0                   	// #0
  41cfe8:	mov	x2, #0x14b                 	// #331
  41cfec:	str	x20, [sp]
  41cff0:	strb	w0, [sp, #8]
  41cff4:	str	x21, [sp, #16]
  41cff8:	b	41db7c <ferror@plt+0x1a5ac>
  41cffc:	cmp	w2, #0x161
  41d000:	b.eq	41dc24 <ferror@plt+0x1a654>  // b.none
  41d004:	b.gt	41d040 <ferror@plt+0x19a70>
  41d008:	cmp	w2, #0x105
  41d00c:	b.eq	41dd5c <ferror@plt+0x1a78c>  // b.none
  41d010:	cmp	w2, #0x160
  41d014:	b.ne	41cf74 <ferror@plt+0x199a4>  // b.any
  41d018:	ldr	w2, [x1, #492]
  41d01c:	cbnz	w2, 41cf74 <ferror@plt+0x199a4>
  41d020:	mov	w2, #0x1                   	// #1
  41d024:	mov	x3, #0x0                   	// #0
  41d028:	str	x20, [sp]
  41d02c:	strb	w2, [sp, #8]
  41d030:	mov	x2, #0xd9                  	// #217
  41d034:	str	x21, [sp, #16]
  41d038:	bl	417dbc <ferror@plt+0x147ec>
  41d03c:	b	41cf74 <ferror@plt+0x199a4>
  41d040:	cmp	w2, #0x1b4
  41d044:	b.eq	41dd04 <ferror@plt+0x1a734>  // b.none
  41d048:	cmp	w2, #0x1c2
  41d04c:	b.ne	41cf74 <ferror@plt+0x199a4>  // b.any
  41d050:	ldr	w2, [x1, #1372]
  41d054:	cbnz	w2, 41cf74 <ferror@plt+0x199a4>
  41d058:	mov	w2, #0x1                   	// #1
  41d05c:	mov	x3, #0x0                   	// #0
  41d060:	str	x20, [sp]
  41d064:	strb	w2, [sp, #8]
  41d068:	mov	x2, #0x1cf                 	// #463
  41d06c:	str	x21, [sp, #16]
  41d070:	b	41d038 <ferror@plt+0x19a68>
  41d074:	ldr	w2, [x1, #272]
  41d078:	cbnz	w2, 41d098 <ferror@plt+0x19ac8>
  41d07c:	mov	w2, #0x1                   	// #1
  41d080:	str	x20, [sp]
  41d084:	strb	w2, [sp, #8]
  41d088:	mov	x3, #0x0                   	// #0
  41d08c:	str	x21, [sp, #16]
  41d090:	mov	x2, #0x9b                  	// #155
  41d094:	bl	417dbc <ferror@plt+0x147ec>
  41d098:	ldr	w0, [x19, #296]
  41d09c:	cbnz	w0, 41d0d8 <ferror@plt+0x19b08>
  41d0a0:	cmp	x23, #0x0
  41d0a4:	mov	w0, #0x1                   	// #1
  41d0a8:	str	x20, [sp]
  41d0ac:	mov	w7, w26
  41d0b0:	strb	w0, [sp, #8]
  41d0b4:	mov	w6, w25
  41d0b8:	str	x21, [sp, #16]
  41d0bc:	mov	w5, w24
  41d0c0:	cset	x4, ne  // ne = any
  41d0c4:	mov	x1, x19
  41d0c8:	mov	x0, x22
  41d0cc:	mov	x3, #0x0                   	// #0
  41d0d0:	mov	x2, #0xa2                  	// #162
  41d0d4:	bl	417dbc <ferror@plt+0x147ec>
  41d0d8:	ldr	w0, [x19, #336]
  41d0dc:	cbnz	w0, 41d118 <ferror@plt+0x19b48>
  41d0e0:	cmp	x23, #0x0
  41d0e4:	mov	w0, #0x1                   	// #1
  41d0e8:	str	x20, [sp]
  41d0ec:	mov	w7, w26
  41d0f0:	strb	w0, [sp, #8]
  41d0f4:	mov	w6, w25
  41d0f8:	str	x21, [sp, #16]
  41d0fc:	mov	w5, w24
  41d100:	cset	x4, ne  // ne = any
  41d104:	mov	x1, x19
  41d108:	mov	x0, x22
  41d10c:	mov	x3, #0x0                   	// #0
  41d110:	mov	x2, #0xab                  	// #171
  41d114:	bl	417dbc <ferror@plt+0x147ec>
  41d118:	ldr	w0, [x19, #364]
  41d11c:	cbnz	w0, 41d154 <ferror@plt+0x19b84>
  41d120:	mov	w0, #0x1                   	// #1
  41d124:	str	x20, [sp]
  41d128:	strb	w0, [sp, #8]
  41d12c:	mov	w7, w26
  41d130:	str	x21, [sp, #16]
  41d134:	mov	w6, w25
  41d138:	mov	w5, w24
  41d13c:	mov	x4, x23
  41d140:	mov	x1, x19
  41d144:	mov	x0, x22
  41d148:	mov	x3, #0x0                   	// #0
  41d14c:	mov	x2, #0xb3                  	// #179
  41d150:	bl	417dbc <ferror@plt+0x147ec>
  41d154:	ldr	w0, [x19, #368]
  41d158:	cbnz	w0, 41d190 <ferror@plt+0x19bc0>
  41d15c:	mov	w0, #0x1                   	// #1
  41d160:	str	x20, [sp]
  41d164:	strb	w0, [sp, #8]
  41d168:	mov	w7, w26
  41d16c:	str	x21, [sp, #16]
  41d170:	mov	w6, w25
  41d174:	mov	w5, w24
  41d178:	mov	x4, x23
  41d17c:	mov	x1, x19
  41d180:	mov	x0, x22
  41d184:	mov	x3, #0x0                   	// #0
  41d188:	mov	x2, #0xb4                  	// #180
  41d18c:	bl	417dbc <ferror@plt+0x147ec>
  41d190:	ldr	w0, [x19, #384]
  41d194:	cbnz	w0, 41d1cc <ferror@plt+0x19bfc>
  41d198:	mov	w0, #0x1                   	// #1
  41d19c:	str	x20, [sp]
  41d1a0:	strb	w0, [sp, #8]
  41d1a4:	mov	w7, w26
  41d1a8:	str	x21, [sp, #16]
  41d1ac:	mov	w6, w25
  41d1b0:	mov	w5, w24
  41d1b4:	mov	x4, x23
  41d1b8:	mov	x1, x19
  41d1bc:	mov	x0, x22
  41d1c0:	mov	x3, #0x0                   	// #0
  41d1c4:	mov	x2, #0xb9                  	// #185
  41d1c8:	bl	417dbc <ferror@plt+0x147ec>
  41d1cc:	ldr	w0, [x19, #388]
  41d1d0:	cbnz	w0, 41d208 <ferror@plt+0x19c38>
  41d1d4:	mov	w0, #0x1                   	// #1
  41d1d8:	str	x20, [sp]
  41d1dc:	strb	w0, [sp, #8]
  41d1e0:	mov	w7, w26
  41d1e4:	str	x21, [sp, #16]
  41d1e8:	mov	w6, w25
  41d1ec:	mov	w5, w24
  41d1f0:	mov	x4, x23
  41d1f4:	mov	x1, x19
  41d1f8:	mov	x0, x22
  41d1fc:	mov	x3, #0x0                   	// #0
  41d200:	mov	x2, #0xba                  	// #186
  41d204:	bl	417dbc <ferror@plt+0x147ec>
  41d208:	ldr	w0, [x19, #392]
  41d20c:	cbnz	w0, 41d244 <ferror@plt+0x19c74>
  41d210:	mov	w0, #0x1                   	// #1
  41d214:	str	x20, [sp]
  41d218:	strb	w0, [sp, #8]
  41d21c:	mov	w7, w26
  41d220:	str	x21, [sp, #16]
  41d224:	mov	w6, w25
  41d228:	mov	w5, w24
  41d22c:	mov	x4, x23
  41d230:	mov	x1, x19
  41d234:	mov	x0, x22
  41d238:	mov	x3, #0x0                   	// #0
  41d23c:	mov	x2, #0xbb                  	// #187
  41d240:	bl	417dbc <ferror@plt+0x147ec>
  41d244:	ldr	w0, [x19, #432]
  41d248:	cbnz	w0, 41d284 <ferror@plt+0x19cb4>
  41d24c:	cmp	x23, #0x0
  41d250:	mov	w0, #0x1                   	// #1
  41d254:	str	x20, [sp]
  41d258:	mov	w7, w26
  41d25c:	strb	w0, [sp, #8]
  41d260:	mov	w6, w25
  41d264:	str	x21, [sp, #16]
  41d268:	mov	w5, w24
  41d26c:	cset	x4, ne  // ne = any
  41d270:	mov	x1, x19
  41d274:	mov	x0, x22
  41d278:	mov	x3, #0x0                   	// #0
  41d27c:	mov	x2, #0xc8                  	// #200
  41d280:	bl	417dbc <ferror@plt+0x147ec>
  41d284:	ldr	w0, [x19, #436]
  41d288:	cbnz	w0, 41d2c0 <ferror@plt+0x19cf0>
  41d28c:	mov	w0, #0x1                   	// #1
  41d290:	str	x20, [sp]
  41d294:	strb	w0, [sp, #8]
  41d298:	mov	w7, w26
  41d29c:	str	x21, [sp, #16]
  41d2a0:	mov	w6, w25
  41d2a4:	mov	w5, w24
  41d2a8:	mov	x4, x23
  41d2ac:	mov	x1, x19
  41d2b0:	mov	x0, x22
  41d2b4:	mov	x3, #0x0                   	// #0
  41d2b8:	mov	x2, #0xc9                  	// #201
  41d2bc:	bl	417dbc <ferror@plt+0x147ec>
  41d2c0:	ldr	w0, [x19, #448]
  41d2c4:	cbnz	w0, 41d2fc <ferror@plt+0x19d2c>
  41d2c8:	mov	w0, #0x1                   	// #1
  41d2cc:	str	x20, [sp]
  41d2d0:	strb	w0, [sp, #8]
  41d2d4:	mov	w7, w26
  41d2d8:	str	x21, [sp, #16]
  41d2dc:	mov	w6, w25
  41d2e0:	mov	w5, w24
  41d2e4:	mov	x4, x23
  41d2e8:	mov	x1, x19
  41d2ec:	mov	x0, x22
  41d2f0:	mov	x3, #0x0                   	// #0
  41d2f4:	mov	x2, #0xcd                  	// #205
  41d2f8:	bl	417dbc <ferror@plt+0x147ec>
  41d2fc:	ldr	w0, [x19, #456]
  41d300:	cbnz	w0, 41d338 <ferror@plt+0x19d68>
  41d304:	mov	w0, #0x1                   	// #1
  41d308:	str	x20, [sp]
  41d30c:	strb	w0, [sp, #8]
  41d310:	mov	w7, w26
  41d314:	str	x21, [sp, #16]
  41d318:	mov	w6, w25
  41d31c:	mov	w5, w24
  41d320:	mov	x4, x23
  41d324:	mov	x1, x19
  41d328:	mov	x0, x22
  41d32c:	mov	x3, #0x0                   	// #0
  41d330:	mov	x2, #0xcf                  	// #207
  41d334:	bl	417dbc <ferror@plt+0x147ec>
  41d338:	ldr	w0, [x19, #508]
  41d33c:	cbnz	w0, 41d374 <ferror@plt+0x19da4>
  41d340:	mov	w0, #0x1                   	// #1
  41d344:	str	x20, [sp]
  41d348:	strb	w0, [sp, #8]
  41d34c:	mov	w7, w26
  41d350:	str	x21, [sp, #16]
  41d354:	mov	w6, w25
  41d358:	mov	w5, w24
  41d35c:	mov	x4, x23
  41d360:	mov	x1, x19
  41d364:	mov	x0, x22
  41d368:	mov	x3, #0x0                   	// #0
  41d36c:	mov	x2, #0xdd                  	// #221
  41d370:	bl	417dbc <ferror@plt+0x147ec>
  41d374:	ldr	w0, [x19, #644]
  41d378:	cbnz	w0, 41d3b4 <ferror@plt+0x19de4>
  41d37c:	cmp	x23, #0x0
  41d380:	mov	w0, #0x1                   	// #1
  41d384:	str	x20, [sp]
  41d388:	mov	w7, w26
  41d38c:	strb	w0, [sp, #8]
  41d390:	mov	w6, w25
  41d394:	str	x21, [sp, #16]
  41d398:	mov	w5, w24
  41d39c:	cset	x4, ne  // ne = any
  41d3a0:	mov	x1, x19
  41d3a4:	mov	x0, x22
  41d3a8:	mov	x3, #0x0                   	// #0
  41d3ac:	mov	x2, #0x105                 	// #261
  41d3b0:	bl	417dbc <ferror@plt+0x147ec>
  41d3b4:	ldr	w0, [x19, #648]
  41d3b8:	cbnz	w0, 41d3f0 <ferror@plt+0x19e20>
  41d3bc:	mov	w0, #0x1                   	// #1
  41d3c0:	str	x20, [sp]
  41d3c4:	strb	w0, [sp, #8]
  41d3c8:	mov	w7, w26
  41d3cc:	str	x21, [sp, #16]
  41d3d0:	mov	w6, w25
  41d3d4:	mov	w5, w24
  41d3d8:	mov	x4, x23
  41d3dc:	mov	x1, x19
  41d3e0:	mov	x0, x22
  41d3e4:	mov	x3, #0x0                   	// #0
  41d3e8:	mov	x2, #0x106                 	// #262
  41d3ec:	bl	417dbc <ferror@plt+0x147ec>
  41d3f0:	ldr	w0, [x19, #728]
  41d3f4:	cbnz	w0, 41d42c <ferror@plt+0x19e5c>
  41d3f8:	mov	w0, #0x1                   	// #1
  41d3fc:	str	x20, [sp]
  41d400:	strb	w0, [sp, #8]
  41d404:	mov	w7, w26
  41d408:	str	x21, [sp, #16]
  41d40c:	mov	w6, w25
  41d410:	mov	w5, w24
  41d414:	mov	x4, x23
  41d418:	mov	x1, x19
  41d41c:	mov	x0, x22
  41d420:	mov	x3, #0x0                   	// #0
  41d424:	mov	x2, #0x11a                 	// #282
  41d428:	bl	417dbc <ferror@plt+0x147ec>
  41d42c:	ldr	w0, [x19, #740]
  41d430:	cbnz	w0, 41d468 <ferror@plt+0x19e98>
  41d434:	mov	w0, #0x1                   	// #1
  41d438:	str	x20, [sp]
  41d43c:	strb	w0, [sp, #8]
  41d440:	mov	w7, w26
  41d444:	str	x21, [sp, #16]
  41d448:	mov	w6, w25
  41d44c:	mov	w5, w24
  41d450:	mov	x4, x23
  41d454:	mov	x1, x19
  41d458:	mov	x0, x22
  41d45c:	mov	x3, #0x0                   	// #0
  41d460:	mov	x2, #0x11d                 	// #285
  41d464:	bl	417dbc <ferror@plt+0x147ec>
  41d468:	ldr	w0, [x19, #792]
  41d46c:	cbnz	w0, 41d4a4 <ferror@plt+0x19ed4>
  41d470:	mov	w0, #0x1                   	// #1
  41d474:	str	x20, [sp]
  41d478:	strb	w0, [sp, #8]
  41d47c:	mov	w7, w26
  41d480:	str	x21, [sp, #16]
  41d484:	mov	w6, w25
  41d488:	mov	w5, w24
  41d48c:	mov	x4, x23
  41d490:	mov	x1, x19
  41d494:	mov	x0, x22
  41d498:	mov	x3, #0x0                   	// #0
  41d49c:	mov	x2, #0x12b                 	// #299
  41d4a0:	bl	417dbc <ferror@plt+0x147ec>
  41d4a4:	ldr	w0, [x19, #812]
  41d4a8:	cbnz	w0, 41d4e0 <ferror@plt+0x19f10>
  41d4ac:	mov	w0, #0x1                   	// #1
  41d4b0:	str	x20, [sp]
  41d4b4:	strb	w0, [sp, #8]
  41d4b8:	mov	w7, w26
  41d4bc:	str	x21, [sp, #16]
  41d4c0:	mov	w6, w25
  41d4c4:	mov	w5, w24
  41d4c8:	mov	x4, x23
  41d4cc:	mov	x1, x19
  41d4d0:	mov	x0, x22
  41d4d4:	mov	x3, #0x0                   	// #0
  41d4d8:	mov	x2, #0x130                 	// #304
  41d4dc:	bl	417dbc <ferror@plt+0x147ec>
  41d4e0:	ldr	w0, [x19, #816]
  41d4e4:	cbnz	w0, 41d51c <ferror@plt+0x19f4c>
  41d4e8:	mov	w0, #0x1                   	// #1
  41d4ec:	str	x20, [sp]
  41d4f0:	strb	w0, [sp, #8]
  41d4f4:	mov	w7, w26
  41d4f8:	str	x21, [sp, #16]
  41d4fc:	mov	w6, w25
  41d500:	mov	w5, w24
  41d504:	mov	x4, x23
  41d508:	mov	x1, x19
  41d50c:	mov	x0, x22
  41d510:	mov	x3, #0x0                   	// #0
  41d514:	mov	x2, #0x131                 	// #305
  41d518:	bl	417dbc <ferror@plt+0x147ec>
  41d51c:	ldr	w0, [x19, #820]
  41d520:	cbnz	w0, 41d558 <ferror@plt+0x19f88>
  41d524:	mov	w0, #0x1                   	// #1
  41d528:	str	x20, [sp]
  41d52c:	strb	w0, [sp, #8]
  41d530:	mov	w7, w26
  41d534:	str	x21, [sp, #16]
  41d538:	mov	w6, w25
  41d53c:	mov	w5, w24
  41d540:	mov	x4, x23
  41d544:	mov	x1, x19
  41d548:	mov	x0, x22
  41d54c:	mov	x3, #0x0                   	// #0
  41d550:	mov	x2, #0x132                 	// #306
  41d554:	bl	417dbc <ferror@plt+0x147ec>
  41d558:	ldr	w0, [x19, #828]
  41d55c:	cbnz	w0, 41d594 <ferror@plt+0x19fc4>
  41d560:	mov	w0, #0x1                   	// #1
  41d564:	str	x20, [sp]
  41d568:	strb	w0, [sp, #8]
  41d56c:	mov	w7, w26
  41d570:	str	x21, [sp, #16]
  41d574:	mov	w6, w25
  41d578:	mov	w5, w24
  41d57c:	mov	x4, x23
  41d580:	mov	x1, x19
  41d584:	mov	x0, x22
  41d588:	mov	x3, #0x0                   	// #0
  41d58c:	mov	x2, #0x134                 	// #308
  41d590:	bl	417dbc <ferror@plt+0x147ec>
  41d594:	ldr	w0, [x19, #868]
  41d598:	cbnz	w0, 41d5d0 <ferror@plt+0x1a000>
  41d59c:	mov	w0, #0x1                   	// #1
  41d5a0:	str	x20, [sp]
  41d5a4:	strb	w0, [sp, #8]
  41d5a8:	mov	w7, w26
  41d5ac:	str	x21, [sp, #16]
  41d5b0:	mov	w6, w25
  41d5b4:	mov	w5, w24
  41d5b8:	mov	x4, x23
  41d5bc:	mov	x1, x19
  41d5c0:	mov	x0, x22
  41d5c4:	mov	x3, #0x0                   	// #0
  41d5c8:	mov	x2, #0x141                 	// #321
  41d5cc:	bl	417dbc <ferror@plt+0x147ec>
  41d5d0:	ldr	w0, [x19, #876]
  41d5d4:	cbnz	w0, 41d60c <ferror@plt+0x1a03c>
  41d5d8:	mov	w0, #0x1                   	// #1
  41d5dc:	str	x20, [sp]
  41d5e0:	strb	w0, [sp, #8]
  41d5e4:	mov	w7, w26
  41d5e8:	str	x21, [sp, #16]
  41d5ec:	mov	w6, w25
  41d5f0:	mov	w5, w24
  41d5f4:	mov	x4, x23
  41d5f8:	mov	x1, x19
  41d5fc:	mov	x0, x22
  41d600:	mov	x3, #0x0                   	// #0
  41d604:	mov	x2, #0x143                 	// #323
  41d608:	bl	417dbc <ferror@plt+0x147ec>
  41d60c:	ldr	w0, [x19, #900]
  41d610:	cbnz	w0, 41d648 <ferror@plt+0x1a078>
  41d614:	mov	w0, #0x1                   	// #1
  41d618:	str	x20, [sp]
  41d61c:	strb	w0, [sp, #8]
  41d620:	mov	w7, w26
  41d624:	str	x21, [sp, #16]
  41d628:	mov	w6, w25
  41d62c:	mov	w5, w24
  41d630:	mov	x4, x23
  41d634:	mov	x1, x19
  41d638:	mov	x0, x22
  41d63c:	mov	x3, #0x0                   	// #0
  41d640:	mov	x2, #0x14c                 	// #332
  41d644:	bl	417dbc <ferror@plt+0x147ec>
  41d648:	ldr	w0, [x19, #904]
  41d64c:	cbnz	w0, 41d684 <ferror@plt+0x1a0b4>
  41d650:	mov	w0, #0x1                   	// #1
  41d654:	str	x20, [sp]
  41d658:	strb	w0, [sp, #8]
  41d65c:	mov	w7, w26
  41d660:	str	x21, [sp, #16]
  41d664:	mov	w6, w25
  41d668:	mov	w5, w24
  41d66c:	mov	x4, x23
  41d670:	mov	x1, x19
  41d674:	mov	x0, x22
  41d678:	mov	x3, #0x0                   	// #0
  41d67c:	mov	x2, #0x14d                 	// #333
  41d680:	bl	417dbc <ferror@plt+0x147ec>
  41d684:	ldr	w0, [x19, #964]
  41d688:	cbnz	w0, 41d6c0 <ferror@plt+0x1a0f0>
  41d68c:	mov	w0, #0x1                   	// #1
  41d690:	str	x20, [sp]
  41d694:	strb	w0, [sp, #8]
  41d698:	mov	w7, w26
  41d69c:	str	x21, [sp, #16]
  41d6a0:	mov	w6, w25
  41d6a4:	mov	w5, w24
  41d6a8:	mov	x4, x23
  41d6ac:	mov	x1, x19
  41d6b0:	mov	x0, x22
  41d6b4:	mov	x3, #0x0                   	// #0
  41d6b8:	mov	x2, #0x15e                 	// #350
  41d6bc:	bl	417dbc <ferror@plt+0x147ec>
  41d6c0:	ldr	w0, [x19, #972]
  41d6c4:	cbnz	w0, 41d6fc <ferror@plt+0x1a12c>
  41d6c8:	mov	w0, #0x1                   	// #1
  41d6cc:	str	x20, [sp]
  41d6d0:	strb	w0, [sp, #8]
  41d6d4:	mov	w7, w26
  41d6d8:	str	x21, [sp, #16]
  41d6dc:	mov	w6, w25
  41d6e0:	mov	w5, w24
  41d6e4:	mov	x4, x23
  41d6e8:	mov	x1, x19
  41d6ec:	mov	x0, x22
  41d6f0:	mov	x3, #0x0                   	// #0
  41d6f4:	mov	x2, #0x160                 	// #352
  41d6f8:	bl	417dbc <ferror@plt+0x147ec>
  41d6fc:	ldr	w0, [x19, #980]
  41d700:	cbnz	w0, 41d738 <ferror@plt+0x1a168>
  41d704:	mov	w0, #0x1                   	// #1
  41d708:	str	x20, [sp]
  41d70c:	strb	w0, [sp, #8]
  41d710:	mov	w7, w26
  41d714:	str	x21, [sp, #16]
  41d718:	mov	w6, w25
  41d71c:	mov	w5, w24
  41d720:	mov	x4, x23
  41d724:	mov	x1, x19
  41d728:	mov	x0, x22
  41d72c:	mov	x3, #0x0                   	// #0
  41d730:	mov	x2, #0x162                 	// #354
  41d734:	bl	417dbc <ferror@plt+0x147ec>
  41d738:	ldr	w0, [x19, #1052]
  41d73c:	cbnz	w0, 41d774 <ferror@plt+0x1a1a4>
  41d740:	mov	w0, #0x1                   	// #1
  41d744:	str	x20, [sp]
  41d748:	strb	w0, [sp, #8]
  41d74c:	mov	w7, w26
  41d750:	str	x21, [sp, #16]
  41d754:	mov	w6, w25
  41d758:	mov	w5, w24
  41d75c:	mov	x4, x23
  41d760:	mov	x1, x19
  41d764:	mov	x0, x22
  41d768:	mov	x3, #0x0                   	// #0
  41d76c:	mov	x2, #0x175                 	// #373
  41d770:	bl	417dbc <ferror@plt+0x147ec>
  41d774:	ldr	w0, [x19, #1056]
  41d778:	cbnz	w0, 41d7b0 <ferror@plt+0x1a1e0>
  41d77c:	mov	w0, #0x1                   	// #1
  41d780:	str	x20, [sp]
  41d784:	strb	w0, [sp, #8]
  41d788:	mov	w7, w26
  41d78c:	str	x21, [sp, #16]
  41d790:	mov	w6, w25
  41d794:	mov	w5, w24
  41d798:	mov	x4, x23
  41d79c:	mov	x1, x19
  41d7a0:	mov	x0, x22
  41d7a4:	mov	x3, #0x0                   	// #0
  41d7a8:	mov	x2, #0x176                 	// #374
  41d7ac:	bl	417dbc <ferror@plt+0x147ec>
  41d7b0:	ldr	w0, [x19, #1064]
  41d7b4:	cbnz	w0, 41d7ec <ferror@plt+0x1a21c>
  41d7b8:	mov	w0, #0x1                   	// #1
  41d7bc:	str	x20, [sp]
  41d7c0:	strb	w0, [sp, #8]
  41d7c4:	mov	w7, w26
  41d7c8:	str	x21, [sp, #16]
  41d7cc:	mov	w6, w25
  41d7d0:	mov	w5, w24
  41d7d4:	mov	x4, x23
  41d7d8:	mov	x1, x19
  41d7dc:	mov	x0, x22
  41d7e0:	mov	x3, #0x0                   	// #0
  41d7e4:	mov	x2, #0x178                 	// #376
  41d7e8:	bl	417dbc <ferror@plt+0x147ec>
  41d7ec:	ldr	w0, [x19, #1072]
  41d7f0:	cbnz	w0, 41d828 <ferror@plt+0x1a258>
  41d7f4:	mov	w0, #0x1                   	// #1
  41d7f8:	str	x20, [sp]
  41d7fc:	strb	w0, [sp, #8]
  41d800:	mov	w7, w26
  41d804:	str	x21, [sp, #16]
  41d808:	mov	w6, w25
  41d80c:	mov	w5, w24
  41d810:	mov	x4, x23
  41d814:	mov	x1, x19
  41d818:	mov	x0, x22
  41d81c:	mov	x3, #0x0                   	// #0
  41d820:	mov	x2, #0x17b                 	// #379
  41d824:	bl	417dbc <ferror@plt+0x147ec>
  41d828:	ldr	w0, [x19, #1108]
  41d82c:	cbnz	w0, 41d864 <ferror@plt+0x1a294>
  41d830:	mov	w0, #0x1                   	// #1
  41d834:	str	x20, [sp]
  41d838:	strb	w0, [sp, #8]
  41d83c:	mov	w7, w26
  41d840:	str	x21, [sp, #16]
  41d844:	mov	w6, w25
  41d848:	mov	w5, w24
  41d84c:	mov	x4, x23
  41d850:	mov	x1, x19
  41d854:	mov	x0, x22
  41d858:	mov	x3, #0x0                   	// #0
  41d85c:	mov	x2, #0x188                 	// #392
  41d860:	bl	417dbc <ferror@plt+0x147ec>
  41d864:	ldr	w0, [x19, #1128]
  41d868:	cbnz	w0, 41d8a0 <ferror@plt+0x1a2d0>
  41d86c:	mov	w0, #0x1                   	// #1
  41d870:	str	x20, [sp]
  41d874:	strb	w0, [sp, #8]
  41d878:	mov	w7, w26
  41d87c:	str	x21, [sp, #16]
  41d880:	mov	w6, w25
  41d884:	mov	w5, w24
  41d888:	mov	x4, x23
  41d88c:	mov	x1, x19
  41d890:	mov	x0, x22
  41d894:	mov	x3, #0x0                   	// #0
  41d898:	mov	x2, #0x18d                 	// #397
  41d89c:	bl	417dbc <ferror@plt+0x147ec>
  41d8a0:	ldr	w0, [x19, #1132]
  41d8a4:	cbnz	w0, 41d8dc <ferror@plt+0x1a30c>
  41d8a8:	mov	w0, #0x1                   	// #1
  41d8ac:	str	x20, [sp]
  41d8b0:	strb	w0, [sp, #8]
  41d8b4:	mov	w7, w26
  41d8b8:	str	x21, [sp, #16]
  41d8bc:	mov	w6, w25
  41d8c0:	mov	w5, w24
  41d8c4:	mov	x4, x23
  41d8c8:	mov	x1, x19
  41d8cc:	mov	x0, x22
  41d8d0:	mov	x3, #0x0                   	// #0
  41d8d4:	mov	x2, #0x18e                 	// #398
  41d8d8:	bl	417dbc <ferror@plt+0x147ec>
  41d8dc:	ldr	w0, [x19, #1152]
  41d8e0:	cbnz	w0, 41d920 <ferror@plt+0x1a350>
  41d8e4:	cmp	x23, #0x0
  41d8e8:	mov	w0, #0x1                   	// #1
  41d8ec:	str	x20, [sp]
  41d8f0:	mov	x4, #0x3                   	// #3
  41d8f4:	strb	w0, [sp, #8]
  41d8f8:	mov	w7, w26
  41d8fc:	str	x21, [sp, #16]
  41d900:	mov	w6, w25
  41d904:	mov	w5, w24
  41d908:	csel	x4, x4, xzr, ne  // ne = any
  41d90c:	mov	x1, x19
  41d910:	mov	x0, x22
  41d914:	mov	x3, #0x0                   	// #0
  41d918:	mov	x2, #0x193                 	// #403
  41d91c:	bl	417dbc <ferror@plt+0x147ec>
  41d920:	ldr	w0, [x19, #1160]
  41d924:	cbnz	w0, 41d960 <ferror@plt+0x1a390>
  41d928:	cmp	x23, #0x0
  41d92c:	mov	w0, #0x1                   	// #1
  41d930:	str	x20, [sp]
  41d934:	mov	w7, w26
  41d938:	strb	w0, [sp, #8]
  41d93c:	mov	w6, w25
  41d940:	str	x21, [sp, #16]
  41d944:	mov	w5, w24
  41d948:	cset	x4, ne  // ne = any
  41d94c:	mov	x1, x19
  41d950:	mov	x0, x22
  41d954:	mov	x3, #0x0                   	// #0
  41d958:	mov	x2, #0x196                 	// #406
  41d95c:	bl	417dbc <ferror@plt+0x147ec>
  41d960:	ldr	w0, [x19, #1172]
  41d964:	cbnz	w0, 41d9a4 <ferror@plt+0x1a3d4>
  41d968:	cmp	x23, #0x0
  41d96c:	mov	w0, #0x1                   	// #1
  41d970:	cset	x4, ne  // ne = any
  41d974:	str	x20, [sp]
  41d978:	strb	w0, [sp, #8]
  41d97c:	mov	w7, w26
  41d980:	str	x21, [sp, #16]
  41d984:	lsl	x4, x4, x0
  41d988:	mov	w6, w25
  41d98c:	mov	w5, w24
  41d990:	mov	x1, x19
  41d994:	mov	x0, x22
  41d998:	mov	x3, #0x0                   	// #0
  41d99c:	mov	x2, #0x19a                 	// #410
  41d9a0:	bl	417dbc <ferror@plt+0x147ec>
  41d9a4:	ldr	w0, [x19, #1176]
  41d9a8:	cbnz	w0, 41d9e0 <ferror@plt+0x1a410>
  41d9ac:	mov	w0, #0x1                   	// #1
  41d9b0:	str	x20, [sp]
  41d9b4:	strb	w0, [sp, #8]
  41d9b8:	mov	w7, w26
  41d9bc:	str	x21, [sp, #16]
  41d9c0:	mov	w6, w25
  41d9c4:	mov	w5, w24
  41d9c8:	mov	x4, x23
  41d9cc:	mov	x1, x19
  41d9d0:	mov	x0, x22
  41d9d4:	mov	x3, #0x0                   	// #0
  41d9d8:	mov	x2, #0x19b                 	// #411
  41d9dc:	bl	417dbc <ferror@plt+0x147ec>
  41d9e0:	ldr	w0, [x19, #1224]
  41d9e4:	cbnz	w0, 41da1c <ferror@plt+0x1a44c>
  41d9e8:	mov	w0, #0x1                   	// #1
  41d9ec:	str	x20, [sp]
  41d9f0:	strb	w0, [sp, #8]
  41d9f4:	mov	w7, w26
  41d9f8:	str	x21, [sp, #16]
  41d9fc:	mov	w6, w25
  41da00:	mov	w5, w24
  41da04:	mov	x4, x23
  41da08:	mov	x1, x19
  41da0c:	mov	x0, x22
  41da10:	mov	x3, #0x0                   	// #0
  41da14:	mov	x2, #0x1a7                 	// #423
  41da18:	bl	417dbc <ferror@plt+0x147ec>
  41da1c:	ldr	w0, [x19, #1264]
  41da20:	cbnz	w0, 41da58 <ferror@plt+0x1a488>
  41da24:	mov	w0, #0x1                   	// #1
  41da28:	str	x20, [sp]
  41da2c:	strb	w0, [sp, #8]
  41da30:	mov	w7, w26
  41da34:	str	x21, [sp, #16]
  41da38:	mov	w6, w25
  41da3c:	mov	w5, w24
  41da40:	mov	x4, x23
  41da44:	mov	x1, x19
  41da48:	mov	x0, x22
  41da4c:	mov	x3, #0x0                   	// #0
  41da50:	mov	x2, #0x1b1                 	// #433
  41da54:	bl	417dbc <ferror@plt+0x147ec>
  41da58:	ldr	w0, [x19, #1288]
  41da5c:	cbnz	w0, 41da94 <ferror@plt+0x1a4c4>
  41da60:	mov	w0, #0x1                   	// #1
  41da64:	str	x20, [sp]
  41da68:	strb	w0, [sp, #8]
  41da6c:	mov	w7, w26
  41da70:	str	x21, [sp, #16]
  41da74:	mov	w6, w25
  41da78:	mov	w5, w24
  41da7c:	mov	x4, x23
  41da80:	mov	x1, x19
  41da84:	mov	x0, x22
  41da88:	mov	x3, #0x0                   	// #0
  41da8c:	mov	x2, #0x1b7                 	// #439
  41da90:	bl	417dbc <ferror@plt+0x147ec>
  41da94:	ldr	w0, [x19, #1312]
  41da98:	cbnz	w0, 41dad0 <ferror@plt+0x1a500>
  41da9c:	mov	w0, #0x1                   	// #1
  41daa0:	str	x20, [sp]
  41daa4:	strb	w0, [sp, #8]
  41daa8:	mov	w7, w26
  41daac:	str	x21, [sp, #16]
  41dab0:	mov	w6, w25
  41dab4:	mov	w5, w24
  41dab8:	mov	x4, x23
  41dabc:	mov	x1, x19
  41dac0:	mov	x0, x22
  41dac4:	mov	x3, #0x0                   	// #0
  41dac8:	mov	x2, #0x1bd                 	// #445
  41dacc:	bl	417dbc <ferror@plt+0x147ec>
  41dad0:	ldr	w0, [x19, #1316]
  41dad4:	cbnz	w0, 41db10 <ferror@plt+0x1a540>
  41dad8:	cmp	x23, #0x0
  41dadc:	mov	w0, #0x1                   	// #1
  41dae0:	str	x20, [sp]
  41dae4:	mov	w7, w26
  41dae8:	strb	w0, [sp, #8]
  41daec:	mov	w6, w25
  41daf0:	str	x21, [sp, #16]
  41daf4:	mov	w5, w24
  41daf8:	cset	x4, ne  // ne = any
  41dafc:	mov	x1, x19
  41db00:	mov	x0, x22
  41db04:	mov	x3, #0x0                   	// #0
  41db08:	mov	x2, #0x1be                 	// #446
  41db0c:	bl	417dbc <ferror@plt+0x147ec>
  41db10:	ldr	w0, [x19, #1324]
  41db14:	cbnz	w0, 41db4c <ferror@plt+0x1a57c>
  41db18:	mov	w0, #0x1                   	// #1
  41db1c:	str	x20, [sp]
  41db20:	strb	w0, [sp, #8]
  41db24:	mov	w7, w26
  41db28:	str	x21, [sp, #16]
  41db2c:	mov	w6, w25
  41db30:	mov	w5, w24
  41db34:	mov	x4, x23
  41db38:	mov	x1, x19
  41db3c:	mov	x0, x22
  41db40:	mov	x3, #0x0                   	// #0
  41db44:	mov	x2, #0x1c2                 	// #450
  41db48:	bl	417dbc <ferror@plt+0x147ec>
  41db4c:	ldr	w0, [x19, #1416]
  41db50:	cbnz	w0, 41cf74 <ferror@plt+0x199a4>
  41db54:	mov	w7, w26
  41db58:	mov	w6, w25
  41db5c:	mov	w5, w24
  41db60:	mov	x4, x23
  41db64:	mov	w0, #0x1                   	// #1
  41db68:	mov	x3, #0x0                   	// #0
  41db6c:	mov	x2, #0x1d9                 	// #473
  41db70:	str	x20, [sp]
  41db74:	strb	w0, [sp, #8]
  41db78:	str	x21, [sp, #16]
  41db7c:	mov	x1, x19
  41db80:	mov	x0, x22
  41db84:	b	41d038 <ferror@plt+0x19a68>
  41db88:	ldr	w2, [x1, #516]
  41db8c:	cbnz	w2, 41dbac <ferror@plt+0x1a5dc>
  41db90:	mov	w2, #0x1                   	// #1
  41db94:	str	x20, [sp]
  41db98:	strb	w2, [sp, #8]
  41db9c:	mov	x3, #0x0                   	// #0
  41dba0:	str	x21, [sp, #16]
  41dba4:	mov	x2, #0xdf                  	// #223
  41dba8:	bl	417dbc <ferror@plt+0x147ec>
  41dbac:	ldr	w0, [x19, #696]
  41dbb0:	cbnz	w0, 41dbf0 <ferror@plt+0x1a620>
  41dbb4:	cmp	x23, #0x0
  41dbb8:	mov	w0, #0x1                   	// #1
  41dbbc:	str	x20, [sp]
  41dbc0:	mov	x4, #0x3                   	// #3
  41dbc4:	strb	w0, [sp, #8]
  41dbc8:	mov	w7, w26
  41dbcc:	str	x21, [sp, #16]
  41dbd0:	mov	w6, w25
  41dbd4:	mov	w5, w24
  41dbd8:	csel	x4, x4, xzr, ne  // ne = any
  41dbdc:	mov	x1, x19
  41dbe0:	mov	x0, x22
  41dbe4:	mov	x3, #0x0                   	// #0
  41dbe8:	mov	x2, #0x111                 	// #273
  41dbec:	bl	417dbc <ferror@plt+0x147ec>
  41dbf0:	ldr	w0, [x19, #1044]
  41dbf4:	cbnz	w0, 41cf74 <ferror@plt+0x199a4>
  41dbf8:	mov	w0, #0x1                   	// #1
  41dbfc:	mov	w7, w26
  41dc00:	mov	w6, w25
  41dc04:	mov	w5, w24
  41dc08:	mov	x4, x23
  41dc0c:	mov	x3, #0x0                   	// #0
  41dc10:	mov	x2, #0x173                 	// #371
  41dc14:	str	x20, [sp]
  41dc18:	strb	w0, [sp, #8]
  41dc1c:	str	x21, [sp, #16]
  41dc20:	b	41db7c <ferror@plt+0x1a5ac>
  41dc24:	ldr	w2, [x1, #572]
  41dc28:	cbnz	w2, 41dc48 <ferror@plt+0x1a678>
  41dc2c:	mov	w2, #0x1                   	// #1
  41dc30:	str	x20, [sp]
  41dc34:	strb	w2, [sp, #8]
  41dc38:	mov	x3, #0x0                   	// #0
  41dc3c:	str	x21, [sp, #16]
  41dc40:	mov	x2, #0xee                  	// #238
  41dc44:	bl	417dbc <ferror@plt+0x147ec>
  41dc48:	ldr	w0, [x19, #808]
  41dc4c:	cbnz	w0, 41dc8c <ferror@plt+0x1a6bc>
  41dc50:	cmp	x23, #0x0
  41dc54:	mov	w0, #0x1                   	// #1
  41dc58:	cset	x4, ne  // ne = any
  41dc5c:	str	x20, [sp]
  41dc60:	strb	w0, [sp, #8]
  41dc64:	mov	w7, w26
  41dc68:	str	x21, [sp, #16]
  41dc6c:	lsl	x4, x4, x0
  41dc70:	mov	w6, w25
  41dc74:	mov	w5, w24
  41dc78:	mov	x1, x19
  41dc7c:	mov	x0, x22
  41dc80:	mov	x3, #0x0                   	// #0
  41dc84:	mov	x2, #0x12f                 	// #303
  41dc88:	bl	417dbc <ferror@plt+0x147ec>
  41dc8c:	ldr	w0, [x19, #940]
  41dc90:	cbnz	w0, 41dcc8 <ferror@plt+0x1a6f8>
  41dc94:	mov	w0, #0x1                   	// #1
  41dc98:	str	x20, [sp]
  41dc9c:	strb	w0, [sp, #8]
  41dca0:	mov	w7, w26
  41dca4:	str	x21, [sp, #16]
  41dca8:	mov	w6, w25
  41dcac:	mov	w5, w24
  41dcb0:	mov	x4, x23
  41dcb4:	mov	x1, x19
  41dcb8:	mov	x0, x22
  41dcbc:	mov	x3, #0x0                   	// #0
  41dcc0:	mov	x2, #0x157                 	// #343
  41dcc4:	bl	417dbc <ferror@plt+0x147ec>
  41dcc8:	ldr	w0, [x19, #992]
  41dccc:	cbnz	w0, 41dd04 <ferror@plt+0x1a734>
  41dcd0:	mov	w0, #0x1                   	// #1
  41dcd4:	str	x20, [sp]
  41dcd8:	strb	w0, [sp, #8]
  41dcdc:	mov	w7, w26
  41dce0:	str	x21, [sp, #16]
  41dce4:	mov	w6, w25
  41dce8:	mov	w5, w24
  41dcec:	mov	x4, x23
  41dcf0:	mov	x1, x19
  41dcf4:	mov	x0, x22
  41dcf8:	mov	x3, #0x0                   	// #0
  41dcfc:	mov	x2, #0x166                 	// #358
  41dd00:	bl	417dbc <ferror@plt+0x147ec>
  41dd04:	ldr	w0, [x19, #1388]
  41dd08:	cbnz	w0, 41cf74 <ferror@plt+0x199a4>
  41dd0c:	mov	w0, #0x1                   	// #1
  41dd10:	mov	w7, w26
  41dd14:	mov	w6, w25
  41dd18:	mov	w5, w24
  41dd1c:	mov	x4, x23
  41dd20:	mov	x3, #0x0                   	// #0
  41dd24:	mov	x2, #0x1d3                 	// #467
  41dd28:	str	x20, [sp]
  41dd2c:	strb	w0, [sp, #8]
  41dd30:	str	x21, [sp, #16]
  41dd34:	b	41db7c <ferror@plt+0x1a5ac>
  41dd38:	ldr	w2, [x1, #600]
  41dd3c:	cbnz	w2, 41cf74 <ferror@plt+0x199a4>
  41dd40:	mov	w2, #0x1                   	// #1
  41dd44:	mov	x3, #0x0                   	// #0
  41dd48:	str	x20, [sp]
  41dd4c:	strb	w2, [sp, #8]
  41dd50:	mov	x2, #0xf7                  	// #247
  41dd54:	str	x21, [sp, #16]
  41dd58:	b	41d038 <ferror@plt+0x19a68>
  41dd5c:	ldr	w4, [x1, #608]
  41dd60:	cbnz	w4, 41ddac <ferror@plt+0x1a7dc>
  41dd64:	cbz	x23, 41dd78 <ferror@plt+0x1a7a8>
  41dd68:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41dd6c:	ldr	w0, [x0, #1204]
  41dd70:	cmp	w0, #0x0
  41dd74:	cset	w4, gt
  41dd78:	mov	w0, #0x1                   	// #1
  41dd7c:	str	x20, [sp]
  41dd80:	strb	w0, [sp, #8]
  41dd84:	mov	w7, w26
  41dd88:	str	x21, [sp, #16]
  41dd8c:	mov	w6, w25
  41dd90:	mov	w5, w24
  41dd94:	sxtw	x4, w4
  41dd98:	mov	x1, x19
  41dd9c:	mov	x0, x22
  41dda0:	mov	x3, #0x0                   	// #0
  41dda4:	mov	x2, #0xfa                  	// #250
  41dda8:	bl	417dbc <ferror@plt+0x147ec>
  41ddac:	ldr	w4, [x19, #612]
  41ddb0:	cbnz	w4, 41ddfc <ferror@plt+0x1a82c>
  41ddb4:	cbz	x23, 41ddc8 <ferror@plt+0x1a7f8>
  41ddb8:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41ddbc:	ldr	w0, [x0, #1204]
  41ddc0:	cmp	w0, #0x0
  41ddc4:	cset	w4, gt
  41ddc8:	mov	w0, #0x1                   	// #1
  41ddcc:	str	x20, [sp]
  41ddd0:	strb	w0, [sp, #8]
  41ddd4:	mov	w7, w26
  41ddd8:	str	x21, [sp, #16]
  41dddc:	mov	w6, w25
  41dde0:	mov	w5, w24
  41dde4:	sxtw	x4, w4
  41dde8:	mov	x1, x19
  41ddec:	mov	x0, x22
  41ddf0:	mov	x3, #0x0                   	// #0
  41ddf4:	mov	x2, #0xfb                  	// #251
  41ddf8:	bl	417dbc <ferror@plt+0x147ec>
  41ddfc:	ldr	w4, [x19, #616]
  41de00:	cbnz	w4, 41de4c <ferror@plt+0x1a87c>
  41de04:	cbz	x23, 41de18 <ferror@plt+0x1a848>
  41de08:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41de0c:	ldr	w0, [x0, #1204]
  41de10:	cmp	w0, #0x1
  41de14:	cset	w4, gt
  41de18:	mov	w0, #0x1                   	// #1
  41de1c:	str	x20, [sp]
  41de20:	strb	w0, [sp, #8]
  41de24:	mov	w7, w26
  41de28:	str	x21, [sp, #16]
  41de2c:	mov	w6, w25
  41de30:	mov	w5, w24
  41de34:	sxtw	x4, w4
  41de38:	mov	x1, x19
  41de3c:	mov	x0, x22
  41de40:	mov	x3, #0x0                   	// #0
  41de44:	mov	x2, #0xfc                  	// #252
  41de48:	bl	417dbc <ferror@plt+0x147ec>
  41de4c:	ldr	w4, [x19, #620]
  41de50:	cbnz	w4, 41de9c <ferror@plt+0x1a8cc>
  41de54:	cbz	x23, 41de68 <ferror@plt+0x1a898>
  41de58:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41de5c:	ldr	w0, [x0, #1204]
  41de60:	cmp	w0, #0x0
  41de64:	cset	w4, gt
  41de68:	mov	w0, #0x1                   	// #1
  41de6c:	str	x20, [sp]
  41de70:	strb	w0, [sp, #8]
  41de74:	mov	w7, w26
  41de78:	str	x21, [sp, #16]
  41de7c:	mov	w6, w25
  41de80:	mov	w5, w24
  41de84:	sxtw	x4, w4
  41de88:	mov	x1, x19
  41de8c:	mov	x0, x22
  41de90:	mov	x3, #0x0                   	// #0
  41de94:	mov	x2, #0xfe                  	// #254
  41de98:	bl	417dbc <ferror@plt+0x147ec>
  41de9c:	ldr	w4, [x19, #624]
  41dea0:	cbnz	w4, 41deec <ferror@plt+0x1a91c>
  41dea4:	cbz	x23, 41deb8 <ferror@plt+0x1a8e8>
  41dea8:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41deac:	ldr	w0, [x0, #1204]
  41deb0:	cmp	w0, #0x1
  41deb4:	cset	w4, gt
  41deb8:	mov	w0, #0x1                   	// #1
  41debc:	str	x20, [sp]
  41dec0:	strb	w0, [sp, #8]
  41dec4:	mov	w7, w26
  41dec8:	str	x21, [sp, #16]
  41decc:	mov	w6, w25
  41ded0:	mov	w5, w24
  41ded4:	sxtw	x4, w4
  41ded8:	mov	x1, x19
  41dedc:	mov	x0, x22
  41dee0:	mov	x3, #0x0                   	// #0
  41dee4:	mov	x2, #0xff                  	// #255
  41dee8:	bl	417dbc <ferror@plt+0x147ec>
  41deec:	ldr	w4, [x19, #632]
  41def0:	cbnz	w4, 41df3c <ferror@plt+0x1a96c>
  41def4:	cbz	x23, 41df08 <ferror@plt+0x1a938>
  41def8:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41defc:	ldr	w0, [x0, #1204]
  41df00:	cmp	w0, #0x0
  41df04:	cset	w4, gt
  41df08:	mov	w0, #0x1                   	// #1
  41df0c:	str	x20, [sp]
  41df10:	strb	w0, [sp, #8]
  41df14:	mov	w7, w26
  41df18:	str	x21, [sp, #16]
  41df1c:	mov	w6, w25
  41df20:	mov	w5, w24
  41df24:	sxtw	x4, w4
  41df28:	mov	x1, x19
  41df2c:	mov	x0, x22
  41df30:	mov	x3, #0x0                   	// #0
  41df34:	mov	x2, #0x102                 	// #258
  41df38:	bl	417dbc <ferror@plt+0x147ec>
  41df3c:	ldr	w4, [x19, #636]
  41df40:	cbnz	w4, 41df8c <ferror@plt+0x1a9bc>
  41df44:	cbz	x23, 41df58 <ferror@plt+0x1a988>
  41df48:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41df4c:	ldr	w0, [x0, #1204]
  41df50:	cmp	w0, #0x1
  41df54:	cset	w4, gt
  41df58:	mov	w0, #0x1                   	// #1
  41df5c:	str	x20, [sp]
  41df60:	strb	w0, [sp, #8]
  41df64:	mov	w7, w26
  41df68:	str	x21, [sp, #16]
  41df6c:	mov	w6, w25
  41df70:	mov	w5, w24
  41df74:	sxtw	x4, w4
  41df78:	mov	x1, x19
  41df7c:	mov	x0, x22
  41df80:	mov	x3, #0x0                   	// #0
  41df84:	mov	x2, #0x103                 	// #259
  41df88:	bl	417dbc <ferror@plt+0x147ec>
  41df8c:	ldr	w4, [x19, #640]
  41df90:	cbnz	w4, 41dfdc <ferror@plt+0x1aa0c>
  41df94:	cbz	x23, 41dfa8 <ferror@plt+0x1a9d8>
  41df98:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41df9c:	ldr	w0, [x0, #1204]
  41dfa0:	cmp	w0, #0x0
  41dfa4:	cset	w4, gt
  41dfa8:	mov	w0, #0x1                   	// #1
  41dfac:	str	x20, [sp]
  41dfb0:	strb	w0, [sp, #8]
  41dfb4:	mov	w7, w26
  41dfb8:	str	x21, [sp, #16]
  41dfbc:	mov	w6, w25
  41dfc0:	mov	w5, w24
  41dfc4:	sxtw	x4, w4
  41dfc8:	mov	x1, x19
  41dfcc:	mov	x0, x22
  41dfd0:	mov	x3, #0x0                   	// #0
  41dfd4:	mov	x2, #0x104                 	// #260
  41dfd8:	bl	417dbc <ferror@plt+0x147ec>
  41dfdc:	ldr	w4, [x19, #900]
  41dfe0:	cbnz	w4, 41cf74 <ferror@plt+0x199a4>
  41dfe4:	cbz	x23, 41dff8 <ferror@plt+0x1aa28>
  41dfe8:	adrp	x0, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  41dfec:	ldr	w0, [x0, #1204]
  41dff0:	cmp	w0, #0x0
  41dff4:	cset	w4, gt
  41dff8:	mov	w0, #0x1                   	// #1
  41dffc:	mov	w7, w26
  41e000:	mov	w6, w25
  41e004:	mov	w5, w24
  41e008:	sxtw	x4, w4
  41e00c:	mov	x3, #0x0                   	// #0
  41e010:	mov	x2, #0x14c                 	// #332
  41e014:	str	x20, [sp]
  41e018:	strb	w0, [sp, #8]
  41e01c:	str	x21, [sp, #16]
  41e020:	b	41db7c <ferror@plt+0x1a5ac>
  41e024:	ldr	w2, [x1, #876]
  41e028:	cbnz	w2, 41cf74 <ferror@plt+0x199a4>
  41e02c:	mov	w2, #0x1                   	// #1
  41e030:	mov	x3, #0x0                   	// #0
  41e034:	str	x20, [sp]
  41e038:	strb	w2, [sp, #8]
  41e03c:	mov	x2, #0x143                 	// #323
  41e040:	str	x21, [sp, #16]
  41e044:	b	41d038 <ferror@plt+0x19a68>
  41e048:	ldr	w2, [x1, #888]
  41e04c:	cbnz	w2, 41e06c <ferror@plt+0x1aa9c>
  41e050:	mov	w2, #0x1                   	// #1
  41e054:	str	x20, [sp]
  41e058:	strb	w2, [sp, #8]
  41e05c:	mov	x3, #0x0                   	// #0
  41e060:	str	x21, [sp, #16]
  41e064:	mov	x2, #0x149                 	// #329
  41e068:	bl	417dbc <ferror@plt+0x147ec>
  41e06c:	ldr	w0, [x19, #1024]
  41e070:	cbnz	w0, 41cf74 <ferror@plt+0x199a4>
  41e074:	mov	w0, #0x1                   	// #1
  41e078:	mov	w7, w26
  41e07c:	mov	w6, w25
  41e080:	mov	w5, w24
  41e084:	mov	x4, x23
  41e088:	mov	x3, #0x0                   	// #0
  41e08c:	mov	x2, #0x16e                 	// #366
  41e090:	str	x20, [sp]
  41e094:	strb	w0, [sp, #8]
  41e098:	str	x21, [sp, #16]
  41e09c:	b	41db7c <ferror@plt+0x1a5ac>
  41e0a0:	ldr	w2, [x1, #888]
  41e0a4:	cbnz	w2, 41cf74 <ferror@plt+0x199a4>
  41e0a8:	mov	w2, #0x1                   	// #1
  41e0ac:	mov	x3, #0x0                   	// #0
  41e0b0:	str	x20, [sp]
  41e0b4:	strb	w2, [sp, #8]
  41e0b8:	mov	x2, #0x149                 	// #329
  41e0bc:	str	x21, [sp, #16]
  41e0c0:	b	41d038 <ferror@plt+0x19a68>
  41e0c4:	cmp	w1, #0x12a
  41e0c8:	b.eq	41e24c <ferror@plt+0x1ac7c>  // b.none
  41e0cc:	b.gt	41e160 <ferror@plt+0x1ab90>
  41e0d0:	cmp	w1, #0xda
  41e0d4:	b.eq	41e228 <ferror@plt+0x1ac58>  // b.none
  41e0d8:	b.gt	41e11c <ferror@plt+0x1ab4c>
  41e0dc:	cmp	w1, #0xbf
  41e0e0:	b.gt	41e110 <ferror@plt+0x1ab40>
  41e0e4:	cmp	w1, #0xb5
  41e0e8:	b.le	41e118 <ferror@plt+0x1ab48>
  41e0ec:	sub	w1, w1, #0xb6
  41e0f0:	cmp	w1, #0x9
  41e0f4:	b.hi	41e118 <ferror@plt+0x1ab48>  // b.pmore
  41e0f8:	adrp	x3, 49d000 <_obstack_memory_used@@Base+0x40c10>
  41e0fc:	add	x3, x3, #0xfb8
  41e100:	ldrb	w1, [x3, w1, uxtw]
  41e104:	adr	x3, 41e110 <ferror@plt+0x1ab40>
  41e108:	add	x1, x3, w1, sxtb #2
  41e10c:	br	x1
  41e110:	cmp	w1, #0xcf
  41e114:	b.eq	41e21c <ferror@plt+0x1ac4c>  // b.none
  41e118:	ret
  41e11c:	cmp	w1, #0xf3
  41e120:	b.eq	41e240 <ferror@plt+0x1ac70>  // b.none
  41e124:	b.gt	41e144 <ferror@plt+0x1ab74>
  41e128:	cmp	w1, #0xde
  41e12c:	b.eq	41e234 <ferror@plt+0x1ac64>  // b.none
  41e130:	cmp	w1, #0xee
  41e134:	b.ne	41e118 <ferror@plt+0x1ab48>  // b.any
  41e138:	ldr	w0, [x0, #572]
  41e13c:	strb	w0, [x2, #28]
  41e140:	b	41e118 <ferror@plt+0x1ab48>
  41e144:	cmp	w1, #0x124
  41e148:	b.ne	41e118 <ferror@plt+0x1ab48>  // b.any
  41e14c:	ldr	w0, [x0, #768]
  41e150:	cmp	w0, #0x0
  41e154:	cset	w0, ne  // ne = any
  41e158:	strb	w0, [x2, #84]
  41e15c:	b	41e118 <ferror@plt+0x1ab48>
  41e160:	cmp	w1, #0x161
  41e164:	b.eq	41e270 <ferror@plt+0x1aca0>  // b.none
  41e168:	b.gt	41e1a8 <ferror@plt+0x1abd8>
  41e16c:	cmp	w1, #0x13f
  41e170:	b.eq	41e264 <ferror@plt+0x1ac94>  // b.none
  41e174:	b.gt	41e194 <ferror@plt+0x1abc4>
  41e178:	cmp	w1, #0x12d
  41e17c:	b.eq	41e258 <ferror@plt+0x1ac88>  // b.none
  41e180:	cmp	w1, #0x139
  41e184:	b.ne	41e118 <ferror@plt+0x1ab48>  // b.any
  41e188:	ldr	w0, [x0, #844]
  41e18c:	strb	w0, [x2, #23]
  41e190:	b	41e118 <ferror@plt+0x1ab48>
  41e194:	cmp	w1, #0x14f
  41e198:	b.ne	41e118 <ferror@plt+0x1ab48>  // b.any
  41e19c:	ldr	w0, [x0, #908]
  41e1a0:	str	w0, [x2, #80]
  41e1a4:	b	41e118 <ferror@plt+0x1ab48>
  41e1a8:	cmp	w1, #0x1ba
  41e1ac:	b.eq	41e288 <ferror@plt+0x1acb8>  // b.none
  41e1b0:	b.gt	41e1d0 <ferror@plt+0x1ac00>
  41e1b4:	cmp	w1, #0x1b4
  41e1b8:	b.eq	41e27c <ferror@plt+0x1acac>  // b.none
  41e1bc:	cmp	w1, #0x1b7
  41e1c0:	b.ne	41e118 <ferror@plt+0x1ab48>  // b.any
  41e1c4:	ldr	w0, [x0, #1288]
  41e1c8:	strb	w0, [x2, #24]
  41e1cc:	b	41e118 <ferror@plt+0x1ab48>
  41e1d0:	cmp	w1, #0x1d3
  41e1d4:	b.ne	41e118 <ferror@plt+0x1ab48>  // b.any
  41e1d8:	ldr	w0, [x0, #1388]
  41e1dc:	strb	w0, [x2, #30]
  41e1e0:	b	41e118 <ferror@plt+0x1ab48>
  41e1e4:	ldr	w0, [x0, #376]
  41e1e8:	strb	w0, [x2, #31]
  41e1ec:	b	41e118 <ferror@plt+0x1ab48>
  41e1f0:	ldr	w0, [x0, #380]
  41e1f4:	strb	w0, [x2, #47]
  41e1f8:	b	41e118 <ferror@plt+0x1ab48>
  41e1fc:	ldr	w0, [x0, #384]
  41e200:	cmp	w0, #0x0
  41e204:	cset	w0, ne  // ne = any
  41e208:	strb	w0, [x2, #87]
  41e20c:	b	41e118 <ferror@plt+0x1ab48>
  41e210:	ldr	w0, [x0, #404]
  41e214:	strb	w0, [x2, #86]
  41e218:	b	41e118 <ferror@plt+0x1ab48>
  41e21c:	ldr	w0, [x0, #456]
  41e220:	strb	w0, [x2, #21]
  41e224:	b	41e118 <ferror@plt+0x1ab48>
  41e228:	ldr	w0, [x0, #496]
  41e22c:	strb	w0, [x2, #22]
  41e230:	b	41e118 <ferror@plt+0x1ab48>
  41e234:	ldr	w0, [x0, #512]
  41e238:	strb	w0, [x2, #20]
  41e23c:	b	41e118 <ferror@plt+0x1ab48>
  41e240:	ldr	w0, [x0, #584]
  41e244:	strb	w0, [x2, #38]
  41e248:	b	41e118 <ferror@plt+0x1ab48>
  41e24c:	ldr	w0, [x0, #788]
  41e250:	strb	w0, [x2, #50]
  41e254:	b	41e118 <ferror@plt+0x1ab48>
  41e258:	ldr	w0, [x0, #800]
  41e25c:	strb	w0, [x2, #27]
  41e260:	b	41e118 <ferror@plt+0x1ab48>
  41e264:	ldr	w0, [x0, #860]
  41e268:	strb	w0, [x2, #25]
  41e26c:	b	41e118 <ferror@plt+0x1ab48>
  41e270:	ldr	w0, [x0, #976]
  41e274:	strb	w0, [x2, #42]
  41e278:	b	41e118 <ferror@plt+0x1ab48>
  41e27c:	ldr	w0, [x0, #1276]
  41e280:	strb	w0, [x2, #26]
  41e284:	b	41e118 <ferror@plt+0x1ab48>
  41e288:	ldr	w0, [x0, #1300]
  41e28c:	strb	w0, [x2, #37]
  41e290:	b	41e118 <ferror@plt+0x1ab48>
  41e294:	ldrb	w2, [x1, #31]
  41e298:	str	w2, [x0, #376]
  41e29c:	ldrb	w2, [x1, #47]
  41e2a0:	str	w2, [x0, #380]
  41e2a4:	ldrb	w2, [x1, #87]
  41e2a8:	str	w2, [x0, #384]
  41e2ac:	ldrsb	w2, [x1, #86]
  41e2b0:	str	w2, [x0, #404]
  41e2b4:	ldrb	w2, [x1, #21]
  41e2b8:	str	w2, [x0, #456]
  41e2bc:	ldrb	w2, [x1, #22]
  41e2c0:	str	w2, [x0, #496]
  41e2c4:	ldrb	w2, [x1, #20]
  41e2c8:	str	w2, [x0, #512]
  41e2cc:	ldrb	w2, [x1, #28]
  41e2d0:	str	w2, [x0, #572]
  41e2d4:	ldrb	w2, [x1, #38]
  41e2d8:	str	w2, [x0, #584]
  41e2dc:	ldrb	w2, [x1, #84]
  41e2e0:	str	w2, [x0, #768]
  41e2e4:	ldrb	w2, [x1, #50]
  41e2e8:	str	w2, [x0, #788]
  41e2ec:	ldrb	w2, [x1, #27]
  41e2f0:	str	w2, [x0, #800]
  41e2f4:	ldrb	w2, [x1, #23]
  41e2f8:	str	w2, [x0, #844]
  41e2fc:	ldrb	w2, [x1, #25]
  41e300:	str	w2, [x0, #860]
  41e304:	ldr	w2, [x1, #80]
  41e308:	str	w2, [x0, #908]
  41e30c:	ldrb	w2, [x1, #42]
  41e310:	str	w2, [x0, #976]
  41e314:	ldrb	w2, [x1, #26]
  41e318:	str	w2, [x0, #1276]
  41e31c:	ldrb	w2, [x1, #24]
  41e320:	str	w2, [x0, #1288]
  41e324:	ldrb	w2, [x1, #37]
  41e328:	str	w2, [x0, #1300]
  41e32c:	ldrb	w1, [x1, #30]
  41e330:	str	w1, [x0, #1388]
  41e334:	ret
  41e338:	stp	x29, x30, [sp, #-32]!
  41e33c:	tst	w0, #0xff
  41e340:	mov	x29, sp
  41e344:	str	x19, [sp, #16]
  41e348:	mov	x19, x1
  41e34c:	b.ne	41e378 <ferror@plt+0x1ada8>  // b.any
  41e350:	mov	x0, x19
  41e354:	mov	x1, #0x10                  	// #16
  41e358:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41e35c:	mov	x1, #0x0                   	// #0
  41e360:	cmp	x19, x1
  41e364:	b.eq	41e3a8 <ferror@plt+0x1add8>  // b.none
  41e368:	lsl	x2, x1, #4
  41e36c:	add	x1, x1, #0x1
  41e370:	str	xzr, [x0, x2]
  41e374:	b	41e360 <ferror@plt+0x1ad90>
  41e378:	lsl	x0, x19, #4
  41e37c:	mov	x3, #0x0                   	// #0
  41e380:	mov	x2, #0x0                   	// #0
  41e384:	mov	x1, #0x0                   	// #0
  41e388:	bl	4103e8 <ferror@plt+0xce18>
  41e38c:	cbnz	x0, 41e35c <ferror@plt+0x1ad8c>
  41e390:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e394:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e398:	add	x2, x2, #0x830
  41e39c:	add	x0, x0, #0x83e
  41e3a0:	mov	w1, #0x2b5                 	// #693
  41e3a4:	bl	403600 <ferror@plt+0x30>
  41e3a8:	ldr	x19, [sp, #16]
  41e3ac:	ldp	x29, x30, [sp], #32
  41e3b0:	ret
  41e3b4:	stp	x29, x30, [sp, #-32]!
  41e3b8:	tst	w0, #0xff
  41e3bc:	mov	x29, sp
  41e3c0:	str	x19, [sp, #16]
  41e3c4:	mov	x19, x1
  41e3c8:	b.ne	41e3f8 <ferror@plt+0x1ae28>  // b.any
  41e3cc:	mov	x0, x19
  41e3d0:	mov	x1, #0x18                  	// #24
  41e3d4:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41e3d8:	mov	x1, #0x0                   	// #0
  41e3dc:	mov	x3, #0x18                  	// #24
  41e3e0:	cmp	x19, x1
  41e3e4:	b.eq	41e42c <ferror@plt+0x1ae5c>  // b.none
  41e3e8:	mul	x2, x1, x3
  41e3ec:	add	x1, x1, #0x1
  41e3f0:	str	xzr, [x0, x2]
  41e3f4:	b	41e3e0 <ferror@plt+0x1ae10>
  41e3f8:	mov	x0, #0x18                  	// #24
  41e3fc:	mov	x3, #0x0                   	// #0
  41e400:	mov	x2, #0x0                   	// #0
  41e404:	mov	x1, #0x0                   	// #0
  41e408:	mul	x0, x19, x0
  41e40c:	bl	4103e8 <ferror@plt+0xce18>
  41e410:	cbnz	x0, 41e3d8 <ferror@plt+0x1ae08>
  41e414:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e418:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e41c:	add	x2, x2, #0x830
  41e420:	add	x0, x0, #0x83e
  41e424:	mov	w1, #0x2b5                 	// #693
  41e428:	bl	403600 <ferror@plt+0x30>
  41e42c:	ldr	x19, [sp, #16]
  41e430:	ldp	x29, x30, [sp], #32
  41e434:	ret
  41e438:	cmp	w0, w1
  41e43c:	b.cc	41e460 <ferror@plt+0x1ae90>  // b.lo, b.ul, b.last
  41e440:	stp	x29, x30, [sp, #-16]!
  41e444:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e448:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e44c:	mov	x29, sp
  41e450:	add	x2, x2, #0x855
  41e454:	add	x0, x0, #0x86c
  41e458:	mov	w1, #0xa2                  	// #162
  41e45c:	bl	403600 <ferror@plt+0x30>
  41e460:	cbz	w0, 41e484 <ferror@plt+0x1aeb4>
  41e464:	add	w2, w0, w0, lsl #1
  41e468:	lsl	w3, w0, #1
  41e46c:	cmp	w0, #0xf
  41e470:	lsr	w2, w2, #1
  41e474:	csel	w2, w2, w3, hi  // hi = pmore
  41e478:	cmp	w2, w1
  41e47c:	csel	w0, w2, w1, cs  // cs = hs, nlast
  41e480:	ret
  41e484:	mov	w2, #0x4                   	// #4
  41e488:	b	41e478 <ferror@plt+0x1aea8>
  41e48c:	mov	x2, #0x0                   	// #0
  41e490:	mov	w1, #0x3                   	// #3
  41e494:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  41e498:	add	x0, x0, #0x50
  41e49c:	b	41f404 <ferror@plt+0x1be34>
  41e4a0:	stp	x29, x30, [sp, #-80]!
  41e4a4:	mov	x29, sp
  41e4a8:	stp	x19, x20, [sp, #16]
  41e4ac:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  41e4b0:	add	x20, x20, #0x50
  41e4b4:	mov	x19, x1
  41e4b8:	stp	x21, x22, [sp, #32]
  41e4bc:	mov	x22, x3
  41e4c0:	ldr	x0, [x20, #48]
  41e4c4:	stp	x23, x24, [sp, #48]
  41e4c8:	mov	x23, x2
  41e4cc:	and	w24, w4, #0xff
  41e4d0:	str	x1, [sp, #72]
  41e4d4:	add	x1, sp, #0x48
  41e4d8:	bl	41ec30 <ferror@plt+0x1b660>
  41e4dc:	cbnz	x0, 41e508 <ferror@plt+0x1af38>
  41e4e0:	mov	x0, #0x20                  	// #32
  41e4e4:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41e4e8:	mov	x2, x0
  41e4ec:	mov	x0, #0x300000000           	// #12884901888
  41e4f0:	mov	x1, x19
  41e4f4:	stp	xzr, xzr, [x2]
  41e4f8:	str	x0, [x2, #16]
  41e4fc:	mov	x0, x20
  41e500:	strb	wzr, [x2, #24]
  41e504:	bl	41f5c4 <ferror@plt+0x1bff4>
  41e508:	ldr	x0, [x20, #48]
  41e50c:	add	x1, sp, #0x48
  41e510:	str	x19, [sp, #72]
  41e514:	bl	41ec30 <ferror@plt+0x1b660>
  41e518:	cbz	x0, 41e5a4 <ferror@plt+0x1afd4>
  41e51c:	ldr	x21, [x0]
  41e520:	ldr	x2, [x21]
  41e524:	cmp	x23, x2
  41e528:	b.ls	41e544 <ferror@plt+0x1af74>  // b.plast
  41e52c:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e530:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e534:	add	x2, x2, #0x87c
  41e538:	add	x0, x0, #0x88d
  41e53c:	mov	w1, #0x97                  	// #151
  41e540:	bl	403600 <ferror@plt+0x30>
  41e544:	sub	x2, x2, x23
  41e548:	str	x2, [x21]
  41e54c:	cbz	w24, 41e584 <ferror@plt+0x1afb4>
  41e550:	ldr	x20, [x20, #48]
  41e554:	ubfx	x2, x19, #3, #32
  41e558:	add	x1, sp, #0x48
  41e55c:	mov	w3, #0x0                   	// #0
  41e560:	mov	x0, x20
  41e564:	str	x19, [sp, #72]
  41e568:	bl	41f02c <ferror@plt+0x1ba5c>
  41e56c:	cbz	x0, 41e584 <ferror@plt+0x1afb4>
  41e570:	mov	x1, #0x1                   	// #1
  41e574:	str	x1, [x0]
  41e578:	ldr	x0, [x20, #24]
  41e57c:	add	x0, x0, x1
  41e580:	str	x0, [x20, #24]
  41e584:	ldr	x3, [x21, #32]
  41e588:	ldp	x19, x20, [sp, #16]
  41e58c:	sub	x22, x3, x22
  41e590:	ldp	x23, x24, [sp, #48]
  41e594:	str	x22, [x21, #32]
  41e598:	ldp	x21, x22, [sp, #32]
  41e59c:	ldp	x29, x30, [sp], #80
  41e5a0:	ret
  41e5a4:	ldr	x0, [x0, #32]
  41e5a8:	brk	#0x3e8
  41e5ac:	stp	x29, x30, [sp, #-80]!
  41e5b0:	mov	x0, #0x20                  	// #32
  41e5b4:	mov	x29, sp
  41e5b8:	stp	x19, x20, [sp, #16]
  41e5bc:	mul	x20, x2, x3
  41e5c0:	mov	x19, x2
  41e5c4:	stp	x21, x22, [sp, #32]
  41e5c8:	mov	x21, x3
  41e5cc:	adrp	x22, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  41e5d0:	str	x23, [sp, #48]
  41e5d4:	mov	x23, x1
  41e5d8:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41e5dc:	mov	x2, x0
  41e5e0:	stp	xzr, xzr, [x0]
  41e5e4:	add	x22, x22, #0x50
  41e5e8:	mov	x0, #0x300000000           	// #12884901888
  41e5ec:	str	x0, [x2, #16]
  41e5f0:	mov	x1, x23
  41e5f4:	strb	wzr, [x2, #24]
  41e5f8:	mov	x0, x22
  41e5fc:	bl	41f5c4 <ferror@plt+0x1bff4>
  41e600:	str	x23, [sp, #72]
  41e604:	ldr	x0, [x22, #48]
  41e608:	add	x1, sp, #0x48
  41e60c:	bl	41ec30 <ferror@plt+0x1b660>
  41e610:	cbz	x0, 41e668 <ferror@plt+0x1b098>
  41e614:	ldr	x0, [x0]
  41e618:	ldp	x1, x2, [x0]
  41e61c:	add	x2, x2, #0x1
  41e620:	add	x1, x20, x1
  41e624:	stp	x1, x2, [x0]
  41e628:	ldr	x2, [x0, #16]
  41e62c:	cmp	x1, x2
  41e630:	b.ls	41e638 <ferror@plt+0x1b068>  // b.plast
  41e634:	str	x1, [x0, #16]
  41e638:	ldp	x2, x1, [x0, #32]
  41e63c:	str	x21, [x0, #48]
  41e640:	add	x2, x19, x2
  41e644:	str	x2, [x0, #32]
  41e648:	cmp	x2, x1
  41e64c:	b.ls	41e654 <ferror@plt+0x1b084>  // b.plast
  41e650:	str	x2, [x0, #40]
  41e654:	ldp	x19, x20, [sp, #16]
  41e658:	ldp	x21, x22, [sp, #32]
  41e65c:	ldr	x23, [sp, #48]
  41e660:	ldp	x29, x30, [sp], #80
  41e664:	ret
  41e668:	str	xzr, [x0, #48]
  41e66c:	brk	#0x3e8
  41e670:	ldr	x2, [x0, #8]
  41e674:	ldr	x0, [x1, #8]
  41e678:	ldr	x3, [x2]
  41e67c:	ldr	x1, [x0]
  41e680:	cmp	x3, x1
  41e684:	b.ne	41e6a8 <ferror@plt+0x1b0d8>  // b.any
  41e688:	ldr	x1, [x0, #16]
  41e68c:	ldr	x3, [x2, #16]
  41e690:	cmp	x3, x1
  41e694:	b.ne	41e6a8 <ferror@plt+0x1b0d8>  // b.any
  41e698:	ldr	x0, [x0, #8]
  41e69c:	ldr	x1, [x2, #8]
  41e6a0:	cmp	x1, x0
  41e6a4:	b.eq	41e6bc <ferror@plt+0x1b0ec>  // b.none
  41e6a8:	cset	w1, cc  // cc = lo, ul, last
  41e6ac:	mov	w0, #0x1                   	// #1
  41e6b0:	cmp	w1, #0x0
  41e6b4:	cneg	w0, w0, eq  // eq = none
  41e6b8:	ret
  41e6bc:	mov	w0, #0x0                   	// #0
  41e6c0:	b	41e6b8 <ferror@plt+0x1b0e8>
  41e6c4:	mov	w3, #0x79b9                	// #31161
  41e6c8:	movk	w3, #0x9e37, lsl #16
  41e6cc:	sub	w3, w3, w1
  41e6d0:	sub	w3, w3, w0
  41e6d4:	sub	w0, w0, w1
  41e6d8:	eor	w3, w3, w1, lsr #13
  41e6dc:	sub	w0, w0, w3
  41e6e0:	sub	w2, w1, w3
  41e6e4:	eor	w0, w0, w3, lsl #8
  41e6e8:	sub	w2, w2, w0
  41e6ec:	sub	w3, w3, w0
  41e6f0:	eor	w2, w2, w0, lsr #13
  41e6f4:	sub	w3, w3, w2
  41e6f8:	sub	w1, w0, w2
  41e6fc:	eor	w3, w3, w2, lsr #12
  41e700:	sub	w1, w1, w3
  41e704:	sub	w0, w2, w3
  41e708:	eor	w1, w1, w3, lsl #16
  41e70c:	sub	w0, w0, w1
  41e710:	sub	w3, w3, w1
  41e714:	eor	w0, w0, w1, lsr #5
  41e718:	sub	w3, w3, w0
  41e71c:	sub	w1, w1, w0
  41e720:	eor	w3, w3, w0, lsr #3
  41e724:	sub	w1, w1, w3
  41e728:	sub	w0, w0, w3
  41e72c:	eor	w1, w1, w3, lsl #10
  41e730:	sub	w0, w0, w1
  41e734:	eor	w0, w0, w1, lsr #15
  41e738:	ret
  41e73c:	ubfiz	x1, x1, #4, #32
  41e740:	adrp	x4, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e744:	add	x4, x4, #0xa78
  41e748:	add	x5, x4, x1
  41e74c:	ldr	w1, [x4, x1]
  41e750:	ldr	w2, [x5, #4]
  41e754:	umull	x2, w0, w2
  41e758:	lsr	x2, x2, #32
  41e75c:	sub	w3, w0, w2
  41e760:	add	w2, w2, w3, lsr #1
  41e764:	ldr	w3, [x5, #12]
  41e768:	lsr	w2, w2, w3
  41e76c:	msub	w0, w2, w1, w0
  41e770:	ret
  41e774:	ubfiz	x1, x1, #4, #32
  41e778:	adrp	x4, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e77c:	add	x4, x4, #0xa78
  41e780:	add	w6, w0, #0x1
  41e784:	add	x5, x4, x1
  41e788:	ldr	w2, [x5, #8]
  41e78c:	umull	x2, w0, w2
  41e790:	lsr	x3, x2, #32
  41e794:	sub	w2, w0, w3
  41e798:	ldr	w0, [x5, #12]
  41e79c:	add	w2, w3, w2, lsr #1
  41e7a0:	lsr	w2, w2, w0
  41e7a4:	ldr	w0, [x4, x1]
  41e7a8:	sub	w0, w0, #0x2
  41e7ac:	msub	w0, w2, w0, w6
  41e7b0:	ret
  41e7b4:	stp	x29, x30, [sp, #-32]!
  41e7b8:	mov	x29, sp
  41e7bc:	stp	x19, x20, [sp, #16]
  41e7c0:	mov	x19, x0
  41e7c4:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  41e7c8:	sub	x19, x19, #0x1
  41e7cc:	ldr	x1, [x20, #1264]
  41e7d0:	cmn	x19, #0x1
  41e7d4:	b.eq	41e7e4 <ferror@plt+0x1b214>  // b.none
  41e7d8:	mov	w0, #0x2d                  	// #45
  41e7dc:	bl	402e40 <fputc@plt>
  41e7e0:	b	41e7c8 <ferror@plt+0x1b1f8>
  41e7e4:	ldp	x19, x20, [sp, #16]
  41e7e8:	mov	w0, #0xa                   	// #10
  41e7ec:	ldp	x29, x30, [sp], #32
  41e7f0:	b	402e40 <fputc@plt>
  41e7f4:	mov	x12, #0x1070                	// #4208
  41e7f8:	sub	sp, sp, x12
  41e7fc:	stp	x29, x30, [sp, #48]
  41e800:	add	x29, sp, #0x30
  41e804:	stp	x19, x20, [sp, #64]
  41e808:	mov	x19, x0
  41e80c:	mov	x20, x1
  41e810:	stp	x21, x22, [sp, #80]
  41e814:	mov	x21, x2
  41e818:	ldr	x22, [x1]
  41e81c:	str	x23, [sp, #96]
  41e820:	adrp	x23, 476000 <_obstack_memory_used@@Base+0x19c10>
  41e824:	add	x23, x23, #0xf53
  41e828:	mov	x1, x23
  41e82c:	mov	x0, x22
  41e830:	bl	403430 <strstr@plt>
  41e834:	cbz	x0, 41e840 <ferror@plt+0x1b270>
  41e838:	add	x22, x0, #0x4
  41e83c:	b	41e828 <ferror@plt+0x1b258>
  41e840:	ldr	w3, [x20, #16]
  41e844:	mov	x2, x22
  41e848:	ldr	x4, [x20, #8]
  41e84c:	add	x0, sp, #0x70
  41e850:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e854:	add	x1, x1, #0x8f3
  41e858:	bl	402e00 <sprintf@plt>
  41e85c:	strb	wzr, [sp, #160]
  41e860:	ldr	x1, [x19]
  41e864:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  41e868:	mov	x2, #0x27ff                	// #10239
  41e86c:	ldr	x0, [x0, #1264]
  41e870:	cmp	x1, x2
  41e874:	ldr	x3, [x19, #48]
  41e878:	b.ls	41e980 <ferror@plt+0x1b3b0>  // b.plast
  41e87c:	mov	w2, #0x9fffff              	// #10485759
  41e880:	cmp	x1, x2
  41e884:	b.hi	41e974 <ferror@plt+0x1b3a4>  // b.pmore
  41e888:	lsr	x4, x1, #10
  41e88c:	mov	w5, #0x6b                  	// #107
  41e890:	ucvtf	d0, x1
  41e894:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e898:	ldr	d2, [x21]
  41e89c:	ldr	d1, [x1, #2480]
  41e8a0:	mov	x1, #0x27ff                	// #10239
  41e8a4:	ldr	x6, [x19, #16]
  41e8a8:	ucvtf	d2, d2
  41e8ac:	fmul	d0, d0, d1
  41e8b0:	cmp	x6, x1
  41e8b4:	fdiv	d0, d0, d2
  41e8b8:	fmov	d2, d1
  41e8bc:	b.ls	41e998 <ferror@plt+0x1b3c8>  // b.plast
  41e8c0:	mov	w1, #0x9fffff              	// #10485759
  41e8c4:	cmp	x6, x1
  41e8c8:	b.hi	41e98c <ferror@plt+0x1b3bc>  // b.pmore
  41e8cc:	lsr	x6, x6, #10
  41e8d0:	mov	w7, #0x6b                  	// #107
  41e8d4:	ldr	d3, [x19, #8]
  41e8d8:	mov	x2, #0x27ff                	// #10239
  41e8dc:	ldr	x1, [x19, #32]
  41e8e0:	ucvtf	d1, d3
  41e8e4:	cmp	x1, x2
  41e8e8:	fmul	d1, d1, d2
  41e8ec:	ldr	d2, [x21, #8]
  41e8f0:	ucvtf	d2, d2
  41e8f4:	fdiv	d1, d1, d2
  41e8f8:	b.ls	41e9ac <ferror@plt+0x1b3dc>  // b.plast
  41e8fc:	mov	w2, #0x9fffff              	// #10485759
  41e900:	cmp	x1, x2
  41e904:	b.hi	41e9a0 <ferror@plt+0x1b3d0>  // b.pmore
  41e908:	lsr	x1, x1, #10
  41e90c:	mov	w8, #0x6b                  	// #107
  41e910:	ldr	x2, [x19, #40]
  41e914:	mov	x9, #0x27ff                	// #10239
  41e918:	cmp	x2, x9
  41e91c:	b.ls	41e9c0 <ferror@plt+0x1b3f0>  // b.plast
  41e920:	mov	w9, #0x9fffff              	// #10485759
  41e924:	cmp	x2, x9
  41e928:	b.hi	41e9b4 <ferror@plt+0x1b3e4>  // b.pmore
  41e92c:	lsr	x2, x2, #10
  41e930:	mov	w9, #0x6b                  	// #107
  41e934:	str	d3, [sp]
  41e938:	str	x1, [sp, #8]
  41e93c:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41e940:	str	w8, [sp, #16]
  41e944:	add	x1, x1, #0x8fe
  41e948:	str	x2, [sp, #24]
  41e94c:	add	x2, sp, #0x70
  41e950:	str	w9, [sp, #32]
  41e954:	bl	403590 <fprintf@plt>
  41e958:	mov	x12, #0x1070                	// #4208
  41e95c:	ldp	x29, x30, [sp, #48]
  41e960:	ldp	x19, x20, [sp, #64]
  41e964:	ldp	x21, x22, [sp, #80]
  41e968:	ldr	x23, [sp, #96]
  41e96c:	add	sp, sp, x12
  41e970:	ret
  41e974:	lsr	x4, x1, #20
  41e978:	mov	w5, #0x4d                  	// #77
  41e97c:	b	41e890 <ferror@plt+0x1b2c0>
  41e980:	mov	x4, x1
  41e984:	mov	w5, #0x20                  	// #32
  41e988:	b	41e890 <ferror@plt+0x1b2c0>
  41e98c:	lsr	x6, x6, #20
  41e990:	mov	w7, #0x4d                  	// #77
  41e994:	b	41e8d4 <ferror@plt+0x1b304>
  41e998:	mov	w7, #0x20                  	// #32
  41e99c:	b	41e8d4 <ferror@plt+0x1b304>
  41e9a0:	lsr	x1, x1, #20
  41e9a4:	mov	w8, #0x4d                  	// #77
  41e9a8:	b	41e910 <ferror@plt+0x1b340>
  41e9ac:	mov	w8, #0x20                  	// #32
  41e9b0:	b	41e910 <ferror@plt+0x1b340>
  41e9b4:	lsr	x2, x2, #20
  41e9b8:	mov	w9, #0x4d                  	// #77
  41e9bc:	b	41e934 <ferror@plt+0x1b364>
  41e9c0:	mov	w9, #0x20                  	// #32
  41e9c4:	b	41e934 <ferror@plt+0x1b364>
  41e9c8:	sub	sp, sp, #0x20
  41e9cc:	mov	x1, x0
  41e9d0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  41e9d4:	mov	x2, #0x27ff                	// #10239
  41e9d8:	stp	x29, x30, [sp, #16]
  41e9dc:	add	x29, sp, #0x10
  41e9e0:	ldr	x3, [x1]
  41e9e4:	ldr	x0, [x0, #1264]
  41e9e8:	cmp	x3, x2
  41e9ec:	b.ls	41ea7c <ferror@plt+0x1b4ac>  // b.plast
  41e9f0:	mov	w2, #0x9fffff              	// #10485759
  41e9f4:	cmp	x3, x2
  41e9f8:	b.hi	41ea70 <ferror@plt+0x1b4a0>  // b.pmore
  41e9fc:	lsr	x3, x3, #10
  41ea00:	mov	w4, #0x6b                  	// #107
  41ea04:	ldr	x5, [x1, #8]
  41ea08:	mov	x2, #0x27ff                	// #10239
  41ea0c:	cmp	x5, x2
  41ea10:	b.ls	41ea90 <ferror@plt+0x1b4c0>  // b.plast
  41ea14:	mov	w2, #0x9fffff              	// #10485759
  41ea18:	cmp	x5, x2
  41ea1c:	b.hi	41ea84 <ferror@plt+0x1b4b4>  // b.pmore
  41ea20:	lsr	x5, x5, #10
  41ea24:	mov	w6, #0x6b                  	// #107
  41ea28:	ldr	x7, [x1, #32]
  41ea2c:	mov	x1, #0x27ff                	// #10239
  41ea30:	cmp	x7, x1
  41ea34:	b.ls	41eaa4 <ferror@plt+0x1b4d4>  // b.plast
  41ea38:	mov	w1, #0x9fffff              	// #10485759
  41ea3c:	cmp	x7, x1
  41ea40:	b.hi	41ea98 <ferror@plt+0x1b4c8>  // b.pmore
  41ea44:	lsr	x7, x7, #10
  41ea48:	mov	w1, #0x6b                  	// #107
  41ea4c:	str	w1, [sp]
  41ea50:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41ea54:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41ea58:	add	x2, x2, #0x93b
  41ea5c:	add	x1, x1, #0x941
  41ea60:	bl	403590 <fprintf@plt>
  41ea64:	ldp	x29, x30, [sp, #16]
  41ea68:	add	sp, sp, #0x20
  41ea6c:	ret
  41ea70:	lsr	x3, x3, #20
  41ea74:	mov	w4, #0x4d                  	// #77
  41ea78:	b	41ea04 <ferror@plt+0x1b434>
  41ea7c:	mov	w4, #0x20                  	// #32
  41ea80:	b	41ea04 <ferror@plt+0x1b434>
  41ea84:	lsr	x5, x5, #20
  41ea88:	mov	w6, #0x4d                  	// #77
  41ea8c:	b	41ea28 <ferror@plt+0x1b458>
  41ea90:	mov	w6, #0x20                  	// #32
  41ea94:	b	41ea28 <ferror@plt+0x1b458>
  41ea98:	lsr	x7, x7, #20
  41ea9c:	mov	w1, #0x4d                  	// #77
  41eaa0:	b	41ea4c <ferror@plt+0x1b47c>
  41eaa4:	mov	w1, #0x20                  	// #32
  41eaa8:	b	41ea4c <ferror@plt+0x1b47c>
  41eaac:	sub	sp, sp, #0x20
  41eab0:	mov	x2, x0
  41eab4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  41eab8:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eabc:	add	x1, x1, #0x99f
  41eac0:	adrp	x7, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eac4:	stp	x29, x30, [sp, #16]
  41eac8:	add	x29, sp, #0x10
  41eacc:	add	x7, x7, #0x95a
  41ead0:	ldr	x0, [x0, #1264]
  41ead4:	str	x1, [sp]
  41ead8:	adrp	x6, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eadc:	adrp	x5, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eae0:	add	x6, x6, #0x965
  41eae4:	add	x5, x5, #0x96b
  41eae8:	adrp	x4, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eaec:	adrp	x3, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eaf0:	add	x4, x4, #0x970
  41eaf4:	add	x3, x3, #0x975
  41eaf8:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eafc:	add	x1, x1, #0x97f
  41eb00:	bl	403590 <fprintf@plt>
  41eb04:	ldp	x29, x30, [sp, #16]
  41eb08:	add	sp, sp, #0x20
  41eb0c:	ret
  41eb10:	stp	x29, x30, [sp, #-64]!
  41eb14:	mov	x29, sp
  41eb18:	stp	x19, x20, [sp, #16]
  41eb1c:	mov	x20, x0
  41eb20:	mov	x0, #0x30                  	// #48
  41eb24:	stp	x21, x22, [sp, #32]
  41eb28:	adrp	x21, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41eb2c:	add	x21, x21, #0xa78
  41eb30:	str	x23, [sp, #48]
  41eb34:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41eb38:	mov	x19, x0
  41eb3c:	strb	wzr, [x0, #44]
  41eb40:	mov	x0, #0xd                   	// #13
  41eb44:	stp	xzr, xzr, [x19, #16]
  41eb48:	str	xzr, [x19, #32]
  41eb4c:	bl	41fad8 <ferror@plt+0x1c508>
  41eb50:	mov	w22, w0
  41eb54:	ubfiz	x0, x22, #4, #32
  41eb58:	ldr	w23, [x21, x0]
  41eb5c:	mov	w0, #0x0                   	// #0
  41eb60:	mov	x1, x23
  41eb64:	bl	41e338 <ferror@plt+0x1ad68>
  41eb68:	stp	x0, x23, [x19]
  41eb6c:	mov	x0, #0x30                  	// #48
  41eb70:	str	w22, [x19, #40]
  41eb74:	str	x19, [x20, #40]
  41eb78:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41eb7c:	mov	x19, x0
  41eb80:	strb	wzr, [x0, #44]
  41eb84:	mov	x0, #0xd                   	// #13
  41eb88:	stp	xzr, xzr, [x19, #16]
  41eb8c:	str	xzr, [x19, #32]
  41eb90:	bl	41fad8 <ferror@plt+0x1c508>
  41eb94:	mov	w22, w0
  41eb98:	ubfiz	x0, x22, #4, #32
  41eb9c:	ldr	w23, [x21, x0]
  41eba0:	mov	w0, #0x0                   	// #0
  41eba4:	mov	x1, x23
  41eba8:	bl	41e3b4 <ferror@plt+0x1ade4>
  41ebac:	stp	x0, x23, [x19]
  41ebb0:	mov	x0, #0x30                  	// #48
  41ebb4:	str	w22, [x19, #40]
  41ebb8:	str	x19, [x20, #48]
  41ebbc:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41ebc0:	mov	x19, x0
  41ebc4:	strb	wzr, [x0, #44]
  41ebc8:	mov	x0, #0xd                   	// #13
  41ebcc:	stp	xzr, xzr, [x19, #16]
  41ebd0:	str	xzr, [x19, #32]
  41ebd4:	bl	41fad8 <ferror@plt+0x1c508>
  41ebd8:	mov	w22, w0
  41ebdc:	mov	x1, #0x18                  	// #24
  41ebe0:	ubfiz	x0, x22, #4, #32
  41ebe4:	ldr	w21, [x21, x0]
  41ebe8:	mov	x0, x21
  41ebec:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41ebf0:	mov	x1, #0x0                   	// #0
  41ebf4:	mov	x3, #0x18                  	// #24
  41ebf8:	cmp	x21, x1
  41ebfc:	b.ls	41ec10 <ferror@plt+0x1b640>  // b.plast
  41ec00:	mul	x2, x1, x3
  41ec04:	add	x1, x1, #0x1
  41ec08:	str	xzr, [x0, x2]
  41ec0c:	b	41ebf8 <ferror@plt+0x1b628>
  41ec10:	ldr	x23, [sp, #48]
  41ec14:	stp	x0, x21, [x19]
  41ec18:	str	w22, [x19, #40]
  41ec1c:	ldp	x21, x22, [sp, #32]
  41ec20:	str	x19, [x20]
  41ec24:	ldp	x19, x20, [sp, #16]
  41ec28:	ldp	x29, x30, [sp], #64
  41ec2c:	ret
  41ec30:	stp	x29, x30, [sp, #-80]!
  41ec34:	mov	x29, sp
  41ec38:	stp	x19, x20, [sp, #16]
  41ec3c:	mov	x19, x0
  41ec40:	ldr	w0, [x0, #32]
  41ec44:	stp	x21, x22, [sp, #32]
  41ec48:	add	w0, w0, #0x1
  41ec4c:	ldr	x22, [x1]
  41ec50:	stp	x23, x24, [sp, #48]
  41ec54:	str	w0, [x19, #32]
  41ec58:	str	x25, [sp, #64]
  41ec5c:	asr	x24, x22, #3
  41ec60:	ldr	w25, [x19, #40]
  41ec64:	mov	w0, w24
  41ec68:	mov	w1, w25
  41ec6c:	bl	41e73c <ferror@plt+0x1b16c>
  41ec70:	mov	w20, w0
  41ec74:	mov	w0, #0x18                  	// #24
  41ec78:	ldr	x21, [x19]
  41ec7c:	umull	x0, w20, w0
  41ec80:	add	x2, x21, x0
  41ec84:	ldr	x0, [x21, x0]
  41ec88:	cbz	x0, 41ecdc <ferror@plt+0x1b70c>
  41ec8c:	cmp	x0, #0x1
  41ec90:	b.eq	41ec9c <ferror@plt+0x1b6cc>  // b.none
  41ec94:	cmp	x22, x0
  41ec98:	b.eq	41ecdc <ferror@plt+0x1b70c>  // b.none
  41ec9c:	mov	w1, w25
  41eca0:	mov	w0, w24
  41eca4:	bl	41e774 <ferror@plt+0x1b1a4>
  41eca8:	ldr	w1, [x19, #36]
  41ecac:	mov	w4, #0x18                  	// #24
  41ecb0:	ldr	x23, [x19, #8]
  41ecb4:	add	w20, w20, w0
  41ecb8:	add	w1, w1, #0x1
  41ecbc:	cmp	x23, w20, uxtw
  41ecc0:	b.hi	41ecc8 <ferror@plt+0x1b6f8>  // b.pmore
  41ecc4:	sub	w20, w20, w23
  41ecc8:	umull	x3, w20, w4
  41eccc:	add	x2, x21, x3
  41ecd0:	ldr	x3, [x21, x3]
  41ecd4:	cbnz	x3, 41ed00 <ferror@plt+0x1b730>
  41ecd8:	str	w1, [x19, #36]
  41ecdc:	ldr	x0, [x2]
  41ece0:	cbz	x0, 41ece8 <ferror@plt+0x1b718>
  41ece4:	add	x0, x2, #0x8
  41ece8:	ldp	x19, x20, [sp, #16]
  41ecec:	ldp	x21, x22, [sp, #32]
  41ecf0:	ldp	x23, x24, [sp, #48]
  41ecf4:	ldr	x25, [sp, #64]
  41ecf8:	ldp	x29, x30, [sp], #80
  41ecfc:	ret
  41ed00:	cmp	x3, #0x1
  41ed04:	b.eq	41ecb4 <ferror@plt+0x1b6e4>  // b.none
  41ed08:	cmp	x22, x3
  41ed0c:	b.ne	41ecb4 <ferror@plt+0x1b6e4>  // b.any
  41ed10:	b	41ecd8 <ferror@plt+0x1b708>
  41ed14:	stp	x29, x30, [sp, #-48]!
  41ed18:	mov	w2, #0x0                   	// #0
  41ed1c:	mov	x1, #0x8                   	// #8
  41ed20:	mov	x29, sp
  41ed24:	str	x19, [sp, #16]
  41ed28:	mov	x19, x0
  41ed2c:	ldr	x0, [x0]
  41ed30:	str	x0, [sp, #40]
  41ed34:	add	x0, sp, #0x28
  41ed38:	bl	45b5cc <ferror@plt+0x57ffc>
  41ed3c:	ldr	x1, [x19, #8]
  41ed40:	mov	w2, w0
  41ed44:	add	x0, sp, #0x28
  41ed48:	str	x1, [sp, #40]
  41ed4c:	mov	x1, #0x8                   	// #8
  41ed50:	bl	45b5cc <ferror@plt+0x57ffc>
  41ed54:	mov	w1, w0
  41ed58:	ldr	w0, [x19, #16]
  41ed5c:	bl	41e6c4 <ferror@plt+0x1b0f4>
  41ed60:	ldr	x19, [sp, #16]
  41ed64:	ldp	x29, x30, [sp], #48
  41ed68:	ret
  41ed6c:	stp	x29, x30, [sp, #-96]!
  41ed70:	mov	x29, sp
  41ed74:	stp	x19, x20, [sp, #16]
  41ed78:	mov	x19, x0
  41ed7c:	stp	x21, x22, [sp, #32]
  41ed80:	ldr	w21, [x0, #40]
  41ed84:	ldp	x22, x20, [x0]
  41ed88:	stp	x23, x24, [sp, #48]
  41ed8c:	ldp	x1, x0, [x0, #16]
  41ed90:	stp	x25, x26, [sp, #64]
  41ed94:	str	x27, [sp, #80]
  41ed98:	add	x23, x22, x20, lsl #4
  41ed9c:	sub	x1, x1, x0
  41eda0:	lsl	x0, x1, #1
  41eda4:	cmp	x20, x1, lsl #1
  41eda8:	b.cc	41edc0 <ferror@plt+0x1b7f0>  // b.lo, b.ul, b.last
  41edac:	lsl	w1, w1, #3
  41edb0:	cmp	x20, x1
  41edb4:	b.ls	41edd8 <ferror@plt+0x1b808>  // b.plast
  41edb8:	cmp	x20, #0x20
  41edbc:	b.ls	41edd8 <ferror@plt+0x1b808>  // b.plast
  41edc0:	bl	41fad8 <ferror@plt+0x1c508>
  41edc4:	mov	w21, w0
  41edc8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41edcc:	add	x0, x0, #0xa78
  41edd0:	ubfiz	x1, x21, #4, #32
  41edd4:	ldr	w20, [x0, x1]
  41edd8:	ldrb	w0, [x19, #44]
  41eddc:	mov	x1, x20
  41ede0:	bl	41e338 <ferror@plt+0x1ad68>
  41ede4:	stp	x0, x20, [x19]
  41ede8:	ldr	x0, [x19, #16]
  41edec:	str	w21, [x19, #40]
  41edf0:	ldr	x1, [x19, #24]
  41edf4:	mov	x21, x22
  41edf8:	str	xzr, [x19, #24]
  41edfc:	sub	x0, x0, x1
  41ee00:	str	x0, [x19, #16]
  41ee04:	ldr	x0, [x21]
  41ee08:	cbz	x0, 41ee78 <ferror@plt+0x1b8a8>
  41ee0c:	cmp	x0, #0x1
  41ee10:	b.eq	41ee78 <ferror@plt+0x1b8a8>  // b.none
  41ee14:	bl	41ed14 <ferror@plt+0x1b744>
  41ee18:	ldr	w27, [x19, #40]
  41ee1c:	mov	w25, w0
  41ee20:	mov	w1, w27
  41ee24:	bl	41e73c <ferror@plt+0x1b16c>
  41ee28:	mov	w20, w0
  41ee2c:	ldr	x24, [x19]
  41ee30:	ubfiz	x0, x20, #4, #32
  41ee34:	add	x2, x24, x0
  41ee38:	ldr	x0, [x24, x0]
  41ee3c:	cbz	x0, 41ee70 <ferror@plt+0x1b8a0>
  41ee40:	mov	w1, w27
  41ee44:	mov	w0, w25
  41ee48:	ldr	x26, [x19, #8]
  41ee4c:	bl	41e774 <ferror@plt+0x1b1a4>
  41ee50:	add	w20, w20, w0
  41ee54:	cmp	x26, w20, uxtw
  41ee58:	b.hi	41ee60 <ferror@plt+0x1b890>  // b.pmore
  41ee5c:	sub	w20, w20, w26
  41ee60:	ubfiz	x1, x20, #4, #32
  41ee64:	add	x2, x24, x1
  41ee68:	ldr	x1, [x24, x1]
  41ee6c:	cbnz	x1, 41ee50 <ferror@plt+0x1b880>
  41ee70:	ldp	x0, x1, [x21]
  41ee74:	stp	x0, x1, [x2]
  41ee78:	add	x21, x21, #0x10
  41ee7c:	cmp	x23, x21
  41ee80:	b.hi	41ee04 <ferror@plt+0x1b834>  // b.pmore
  41ee84:	ldrb	w0, [x19, #44]
  41ee88:	cbnz	w0, 41eeac <ferror@plt+0x1b8dc>
  41ee8c:	mov	x0, x22
  41ee90:	ldp	x19, x20, [sp, #16]
  41ee94:	ldp	x21, x22, [sp, #32]
  41ee98:	ldp	x23, x24, [sp, #48]
  41ee9c:	ldp	x25, x26, [sp, #64]
  41eea0:	ldr	x27, [sp, #80]
  41eea4:	ldp	x29, x30, [sp], #96
  41eea8:	b	4032a0 <free@plt>
  41eeac:	mov	x0, x22
  41eeb0:	ldp	x19, x20, [sp, #16]
  41eeb4:	ldp	x21, x22, [sp, #32]
  41eeb8:	ldp	x23, x24, [sp, #48]
  41eebc:	ldp	x25, x26, [sp, #64]
  41eec0:	ldr	x27, [sp, #80]
  41eec4:	ldp	x29, x30, [sp], #96
  41eec8:	b	410418 <ferror@plt+0xce48>
  41eecc:	stp	x29, x30, [sp, #-96]!
  41eed0:	mov	x29, sp
  41eed4:	stp	x19, x20, [sp, #16]
  41eed8:	mov	x19, x0
  41eedc:	stp	x21, x22, [sp, #32]
  41eee0:	ldr	w22, [x0, #40]
  41eee4:	stp	x23, x24, [sp, #48]
  41eee8:	ldp	x24, x20, [x0]
  41eeec:	stp	x25, x26, [sp, #64]
  41eef0:	mov	x25, #0x18                  	// #24
  41eef4:	ldp	x1, x0, [x0, #16]
  41eef8:	stp	x27, x28, [sp, #80]
  41eefc:	madd	x25, x20, x25, x24
  41ef00:	sub	x1, x1, x0
  41ef04:	lsl	x0, x1, #1
  41ef08:	cmp	x20, x1, lsl #1
  41ef0c:	b.cc	41ef24 <ferror@plt+0x1b954>  // b.lo, b.ul, b.last
  41ef10:	lsl	w1, w1, #3
  41ef14:	cmp	x20, x1
  41ef18:	b.ls	41ef3c <ferror@plt+0x1b96c>  // b.plast
  41ef1c:	cmp	x20, #0x20
  41ef20:	b.ls	41ef3c <ferror@plt+0x1b96c>  // b.plast
  41ef24:	bl	41fad8 <ferror@plt+0x1c508>
  41ef28:	mov	w22, w0
  41ef2c:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41ef30:	add	x0, x0, #0xa78
  41ef34:	ubfiz	x1, x22, #4, #32
  41ef38:	ldr	w20, [x0, x1]
  41ef3c:	ldrb	w0, [x19, #44]
  41ef40:	mov	x1, x20
  41ef44:	mov	x26, x24
  41ef48:	mov	w27, #0x18                  	// #24
  41ef4c:	bl	41e3b4 <ferror@plt+0x1ade4>
  41ef50:	mov	x23, x0
  41ef54:	ldp	x0, x1, [x19, #16]
  41ef58:	stp	x23, x20, [x19]
  41ef5c:	str	w22, [x19, #40]
  41ef60:	sub	x0, x0, x1
  41ef64:	stp	x0, xzr, [x19, #16]
  41ef68:	ldr	x0, [x26]
  41ef6c:	cbz	x0, 41efd8 <ferror@plt+0x1ba08>
  41ef70:	cmp	x0, #0x1
  41ef74:	b.eq	41efd8 <ferror@plt+0x1ba08>  // b.none
  41ef78:	asr	x28, x0, #3
  41ef7c:	mov	w1, w22
  41ef80:	mov	w0, w28
  41ef84:	bl	41e73c <ferror@plt+0x1b16c>
  41ef88:	mov	w21, w0
  41ef8c:	umull	x0, w0, w27
  41ef90:	add	x2, x23, x0
  41ef94:	ldr	x0, [x23, x0]
  41ef98:	cbz	x0, 41efc8 <ferror@plt+0x1b9f8>
  41ef9c:	mov	w1, w22
  41efa0:	mov	w0, w28
  41efa4:	bl	41e774 <ferror@plt+0x1b1a4>
  41efa8:	add	w21, w21, w0
  41efac:	cmp	x20, w21, uxtw
  41efb0:	b.hi	41efb8 <ferror@plt+0x1b9e8>  // b.pmore
  41efb4:	sub	w21, w21, w20
  41efb8:	umull	x1, w21, w27
  41efbc:	add	x2, x23, x1
  41efc0:	ldr	x1, [x23, x1]
  41efc4:	cbnz	x1, 41efa8 <ferror@plt+0x1b9d8>
  41efc8:	ldp	x0, x1, [x26]
  41efcc:	stp	x0, x1, [x2]
  41efd0:	ldr	x0, [x26, #16]
  41efd4:	str	x0, [x2, #16]
  41efd8:	add	x26, x26, #0x18
  41efdc:	cmp	x25, x26
  41efe0:	b.hi	41ef68 <ferror@plt+0x1b998>  // b.pmore
  41efe4:	ldrb	w0, [x19, #44]
  41efe8:	cbnz	w0, 41f00c <ferror@plt+0x1ba3c>
  41efec:	mov	x0, x24
  41eff0:	ldp	x19, x20, [sp, #16]
  41eff4:	ldp	x21, x22, [sp, #32]
  41eff8:	ldp	x23, x24, [sp, #48]
  41effc:	ldp	x25, x26, [sp, #64]
  41f000:	ldp	x27, x28, [sp, #80]
  41f004:	ldp	x29, x30, [sp], #96
  41f008:	b	4032a0 <free@plt>
  41f00c:	mov	x0, x24
  41f010:	ldp	x19, x20, [sp, #16]
  41f014:	ldp	x21, x22, [sp, #32]
  41f018:	ldp	x23, x24, [sp, #48]
  41f01c:	ldp	x25, x26, [sp, #64]
  41f020:	ldp	x27, x28, [sp, #80]
  41f024:	ldp	x29, x30, [sp], #96
  41f028:	b	410418 <ferror@plt+0xce48>
  41f02c:	stp	x29, x30, [sp, #-80]!
  41f030:	cmp	w3, #0x1
  41f034:	mov	x29, sp
  41f038:	stp	x19, x20, [sp, #16]
  41f03c:	mov	x19, x0
  41f040:	stp	x21, x22, [sp, #32]
  41f044:	mov	w22, w3
  41f048:	stp	x23, x24, [sp, #48]
  41f04c:	mov	x24, x1
  41f050:	stp	x25, x26, [sp, #64]
  41f054:	mov	w25, w2
  41f058:	b.ne	41f070 <ferror@plt+0x1baa0>  // b.any
  41f05c:	ldp	x1, x2, [x0, #8]
  41f060:	add	x1, x1, x1, lsl #1
  41f064:	cmp	x1, x2, lsl #2
  41f068:	b.hi	41f070 <ferror@plt+0x1baa0>  // b.pmore
  41f06c:	bl	41eecc <ferror@plt+0x1b8fc>
  41f070:	ldr	w0, [x19, #32]
  41f074:	ldr	w26, [x19, #40]
  41f078:	add	w0, w0, #0x1
  41f07c:	str	w0, [x19, #32]
  41f080:	mov	w1, w26
  41f084:	mov	w0, w25
  41f088:	bl	41e73c <ferror@plt+0x1b16c>
  41f08c:	mov	w21, w0
  41f090:	mov	w0, #0x18                  	// #24
  41f094:	ldr	x23, [x19]
  41f098:	umull	x0, w21, w0
  41f09c:	add	x20, x23, x0
  41f0a0:	ldr	x0, [x23, x0]
  41f0a4:	cbz	x0, 41f170 <ferror@plt+0x1bba0>
  41f0a8:	cmp	x0, #0x1
  41f0ac:	b.ne	41f104 <ferror@plt+0x1bb34>  // b.any
  41f0b0:	mov	w1, w26
  41f0b4:	mov	w0, w25
  41f0b8:	bl	41e774 <ferror@plt+0x1b1a4>
  41f0bc:	ldr	w3, [x19, #36]
  41f0c0:	mov	x2, x20
  41f0c4:	ldr	x4, [x19, #8]
  41f0c8:	mov	w6, #0x18                  	// #24
  41f0cc:	add	w21, w21, w0
  41f0d0:	add	w3, w3, #0x1
  41f0d4:	cmp	x4, w21, uxtw
  41f0d8:	b.hi	41f0e0 <ferror@plt+0x1bb10>  // b.pmore
  41f0dc:	sub	w21, w21, w4
  41f0e0:	umull	x1, w21, w6
  41f0e4:	add	x20, x23, x1
  41f0e8:	ldr	x1, [x23, x1]
  41f0ec:	cbz	x1, 41f144 <ferror@plt+0x1bb74>
  41f0f0:	cmp	x1, #0x1
  41f0f4:	b.ne	41f118 <ferror@plt+0x1bb48>  // b.any
  41f0f8:	cmp	x2, #0x0
  41f0fc:	csel	x2, x2, x20, ne  // ne = any
  41f100:	b	41f0cc <ferror@plt+0x1bafc>
  41f104:	ldr	x1, [x24]
  41f108:	cmp	x0, x1
  41f10c:	b.eq	41f128 <ferror@plt+0x1bb58>  // b.none
  41f110:	mov	x20, #0x0                   	// #0
  41f114:	b	41f0b0 <ferror@plt+0x1bae0>
  41f118:	ldr	x5, [x24]
  41f11c:	cmp	x1, x5
  41f120:	b.ne	41f0cc <ferror@plt+0x1bafc>  // b.any
  41f124:	str	w3, [x19, #36]
  41f128:	mov	x0, x20
  41f12c:	ldp	x19, x20, [sp, #16]
  41f130:	ldp	x21, x22, [sp, #32]
  41f134:	ldp	x23, x24, [sp, #48]
  41f138:	ldp	x25, x26, [sp, #64]
  41f13c:	ldp	x29, x30, [sp], #80
  41f140:	ret
  41f144:	str	w3, [x19, #36]
  41f148:	cbnz	w22, 41f154 <ferror@plt+0x1bb84>
  41f14c:	mov	x20, #0x0                   	// #0
  41f150:	b	41f128 <ferror@plt+0x1bb58>
  41f154:	cbz	x2, 41f174 <ferror@plt+0x1bba4>
  41f158:	ldr	x0, [x19, #24]
  41f15c:	mov	x20, x2
  41f160:	sub	x0, x0, #0x1
  41f164:	str	x0, [x19, #24]
  41f168:	str	xzr, [x2]
  41f16c:	b	41f128 <ferror@plt+0x1bb58>
  41f170:	cbz	w22, 41f14c <ferror@plt+0x1bb7c>
  41f174:	ldr	x0, [x19, #16]
  41f178:	mov	w20, #0x18                  	// #24
  41f17c:	add	x0, x0, #0x1
  41f180:	umaddl	x20, w21, w20, x23
  41f184:	str	x0, [x19, #16]
  41f188:	b	41f128 <ferror@plt+0x1bb58>
  41f18c:	ldr	x3, [x0, #8]
  41f190:	ldr	x1, [x0]
  41f194:	cmp	x1, x3
  41f198:	b.cs	41f1b8 <ferror@plt+0x1bbe8>  // b.hs, b.nlast
  41f19c:	ldr	x2, [x1]
  41f1a0:	cbz	x2, 41f1ac <ferror@plt+0x1bbdc>
  41f1a4:	cmp	x2, #0x1
  41f1a8:	b.ne	41f1bc <ferror@plt+0x1bbec>  // b.any
  41f1ac:	add	x1, x1, #0x10
  41f1b0:	str	x1, [x0]
  41f1b4:	b	41f190 <ferror@plt+0x1bbc0>
  41f1b8:	stp	xzr, xzr, [x0]
  41f1bc:	ret
  41f1c0:	stp	x29, x30, [sp, #-32]!
  41f1c4:	mov	x29, sp
  41f1c8:	ldp	x1, x0, [x0]
  41f1cc:	add	x0, x1, x0, lsl #4
  41f1d0:	stp	x1, x0, [sp, #16]
  41f1d4:	add	x0, sp, #0x10
  41f1d8:	bl	41f18c <ferror@plt+0x1bbbc>
  41f1dc:	ldp	x0, x1, [sp, #16]
  41f1e0:	ldp	x29, x30, [sp], #32
  41f1e4:	ret
  41f1e8:	stp	x29, x30, [sp, #-48]!
  41f1ec:	mov	x29, sp
  41f1f0:	stp	x19, x20, [sp, #16]
  41f1f4:	mov	x19, x0
  41f1f8:	ldr	x0, [x0, #40]
  41f1fc:	bl	41f1c0 <ferror@plt+0x1bbf0>
  41f200:	stp	x0, x1, [sp, #32]
  41f204:	ldr	x0, [sp, #32]
  41f208:	cbz	x0, 41f240 <ferror@plt+0x1bc70>
  41f20c:	ldr	x0, [x0]
  41f210:	cbnz	x0, 41f270 <ferror@plt+0x1bca0>
  41f214:	ldr	x0, [sp, #32]
  41f218:	ldr	x0, [x0, #8]
  41f21c:	cbz	x0, 41f228 <ferror@plt+0x1bc58>
  41f220:	mov	x1, #0x38                  	// #56
  41f224:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41f228:	ldr	x0, [sp, #32]
  41f22c:	add	x0, x0, #0x10
  41f230:	str	x0, [sp, #32]
  41f234:	add	x0, sp, #0x20
  41f238:	bl	41f18c <ferror@plt+0x1bbbc>
  41f23c:	b	41f204 <ferror@plt+0x1bc34>
  41f240:	ldr	x1, [sp, #40]
  41f244:	cbnz	x1, 41f20c <ferror@plt+0x1bc3c>
  41f248:	ldr	x20, [x19, #40]
  41f24c:	cbnz	x20, 41f27c <ferror@plt+0x1bcac>
  41f250:	ldr	x20, [x19, #48]
  41f254:	cbz	x20, 41f2d8 <ferror@plt+0x1bd08>
  41f258:	ldr	x1, [x20, #8]
  41f25c:	sub	x0, x1, #0x1
  41f260:	cmp	x1, x0
  41f264:	b.ls	41f2bc <ferror@plt+0x1bcec>  // b.plast
  41f268:	sub	x0, x0, #0x1
  41f26c:	b	41f260 <ferror@plt+0x1bc90>
  41f270:	mov	x1, #0x20                  	// #32
  41f274:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41f278:	b	41f214 <ferror@plt+0x1bc44>
  41f27c:	ldr	x1, [x20, #8]
  41f280:	sub	x0, x1, #0x1
  41f284:	cmp	x1, x0
  41f288:	b.ls	41f294 <ferror@plt+0x1bcc4>  // b.plast
  41f28c:	sub	x0, x0, #0x1
  41f290:	b	41f284 <ferror@plt+0x1bcb4>
  41f294:	ldrb	w1, [x20, #44]
  41f298:	ldr	x0, [x20]
  41f29c:	cbnz	w1, 41f2b4 <ferror@plt+0x1bce4>
  41f2a0:	bl	4032a0 <free@plt>
  41f2a4:	mov	x0, x20
  41f2a8:	mov	x1, #0x30                  	// #48
  41f2ac:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41f2b0:	b	41f250 <ferror@plt+0x1bc80>
  41f2b4:	bl	410418 <ferror@plt+0xce48>
  41f2b8:	b	41f2a4 <ferror@plt+0x1bcd4>
  41f2bc:	ldrb	w1, [x20, #44]
  41f2c0:	ldr	x0, [x20]
  41f2c4:	cbnz	w1, 41f2f8 <ferror@plt+0x1bd28>
  41f2c8:	bl	4032a0 <free@plt>
  41f2cc:	mov	x0, x20
  41f2d0:	mov	x1, #0x30                  	// #48
  41f2d4:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41f2d8:	ldr	x19, [x19]
  41f2dc:	cbz	x19, 41f31c <ferror@plt+0x1bd4c>
  41f2e0:	ldr	x1, [x19, #8]
  41f2e4:	sub	x0, x1, #0x1
  41f2e8:	cmp	x1, x0
  41f2ec:	b.ls	41f300 <ferror@plt+0x1bd30>  // b.plast
  41f2f0:	sub	x0, x0, #0x1
  41f2f4:	b	41f2e8 <ferror@plt+0x1bd18>
  41f2f8:	bl	410418 <ferror@plt+0xce48>
  41f2fc:	b	41f2cc <ferror@plt+0x1bcfc>
  41f300:	ldrb	w1, [x19, #44]
  41f304:	ldr	x0, [x19]
  41f308:	cbnz	w1, 41f328 <ferror@plt+0x1bd58>
  41f30c:	bl	4032a0 <free@plt>
  41f310:	mov	x0, x19
  41f314:	mov	x1, #0x30                  	// #48
  41f318:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41f31c:	ldp	x19, x20, [sp, #16]
  41f320:	ldp	x29, x30, [sp], #48
  41f324:	ret
  41f328:	bl	410418 <ferror@plt+0xce48>
  41f32c:	b	41f310 <ferror@plt+0x1bd40>
  41f330:	stp	x29, x30, [sp, #-80]!
  41f334:	mov	x29, sp
  41f338:	str	x23, [sp, #48]
  41f33c:	mov	w23, w1
  41f340:	ldr	x1, [x0, #40]
  41f344:	stp	x21, x22, [sp, #32]
  41f348:	mov	x21, x0
  41f34c:	mov	x22, x2
  41f350:	stp	x19, x20, [sp, #16]
  41f354:	mov	x19, x3
  41f358:	ldp	x2, x0, [x1, #16]
  41f35c:	mov	x1, #0x10                  	// #16
  41f360:	sub	x0, x2, x0
  41f364:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41f368:	mov	x20, x0
  41f36c:	ldr	x0, [x21, #40]
  41f370:	mov	w21, #0x0                   	// #0
  41f374:	bl	41f1c0 <ferror@plt+0x1bbf0>
  41f378:	stp	x0, x1, [sp, #64]
  41f37c:	ldr	x0, [sp, #64]
  41f380:	cbz	x0, 41f3c0 <ferror@plt+0x1bdf0>
  41f384:	ldr	x2, [x0]
  41f388:	ldr	w1, [x2, #20]
  41f38c:	cmp	w1, w23
  41f390:	b.ne	41f3ac <ferror@plt+0x1bddc>  // b.any
  41f394:	ubfiz	x1, x21, #4, #32
  41f398:	add	w21, w21, #0x1
  41f39c:	add	x3, x20, x1
  41f3a0:	ldr	x4, [x0, #8]
  41f3a4:	str	x2, [x20, x1]
  41f3a8:	str	x4, [x3, #8]
  41f3ac:	add	x0, x0, #0x10
  41f3b0:	str	x0, [sp, #64]
  41f3b4:	add	x0, sp, #0x40
  41f3b8:	bl	41f18c <ferror@plt+0x1bbbc>
  41f3bc:	b	41f37c <ferror@plt+0x1bdac>
  41f3c0:	ldr	x1, [sp, #72]
  41f3c4:	cbnz	x1, 41f384 <ferror@plt+0x1bdb4>
  41f3c8:	mov	w1, w21
  41f3cc:	cbnz	x19, 41f3d8 <ferror@plt+0x1be08>
  41f3d0:	adrp	x19, 41e000 <ferror@plt+0x1aa30>
  41f3d4:	add	x19, x19, #0x670
  41f3d8:	mov	x3, x19
  41f3dc:	mov	x0, x20
  41f3e0:	mov	x2, #0x10                  	// #16
  41f3e4:	bl	42d9a0 <ferror@plt+0x2a3d0>
  41f3e8:	mov	x0, x20
  41f3ec:	ldp	x19, x20, [sp, #16]
  41f3f0:	ldr	x23, [sp, #48]
  41f3f4:	str	w21, [x22]
  41f3f8:	ldp	x21, x22, [sp, #32]
  41f3fc:	ldp	x29, x30, [sp], #80
  41f400:	ret
  41f404:	stp	x29, x30, [sp, #-128]!
  41f408:	mov	x29, sp
  41f40c:	stp	x21, x22, [sp, #32]
  41f410:	adrp	x21, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  41f414:	mov	x22, x0
  41f418:	stp	x19, x20, [sp, #16]
  41f41c:	mov	w19, w1
  41f420:	mov	x20, x2
  41f424:	ldr	x1, [x21, #1264]
  41f428:	mov	w0, #0xa                   	// #10
  41f42c:	str	x23, [sp, #48]
  41f430:	bl	402e40 <fputc@plt>
  41f434:	mov	x3, x20
  41f438:	add	x2, sp, #0x40
  41f43c:	mov	w1, w19
  41f440:	mov	x0, x22
  41f444:	bl	41f330 <ferror@plt+0x1bd60>
  41f448:	mov	x20, x0
  41f44c:	add	x2, sp, #0x44
  41f450:	mov	w1, w19
  41f454:	mov	x0, x22
  41f458:	mov	x3, #0x0                   	// #0
  41f45c:	bl	41f330 <ferror@plt+0x1bd60>
  41f460:	stp	xzr, xzr, [sp, #72]
  41f464:	mov	x1, #0x1                   	// #1
  41f468:	mov	w2, #0x0                   	// #0
  41f46c:	stp	xzr, x1, [sp, #88]
  41f470:	stp	xzr, xzr, [sp, #104]
  41f474:	str	xzr, [sp, #120]
  41f478:	ldr	w1, [sp, #68]
  41f47c:	cmp	w1, w2
  41f480:	b.ls	41f4e0 <ferror@plt+0x1bf10>  // b.plast
  41f484:	ubfiz	x1, x2, #4, #32
  41f488:	add	w2, w2, #0x1
  41f48c:	add	x1, x0, x1
  41f490:	ldp	x6, x5, [sp, #80]
  41f494:	ldr	x1, [x1, #8]
  41f498:	ldr	x4, [sp, #104]
  41f49c:	ldr	x3, [x1, #8]
  41f4a0:	ldr	x7, [x1, #40]
  41f4a4:	add	x6, x6, x3
  41f4a8:	ldr	x3, [x1, #16]
  41f4ac:	add	x5, x5, x3
  41f4b0:	ldr	x3, [x1, #32]
  41f4b4:	add	x4, x4, x3
  41f4b8:	ldr	x3, [sp, #112]
  41f4bc:	add	x3, x3, x7
  41f4c0:	ldr	x7, [x1]
  41f4c4:	stp	x5, xzr, [sp, #88]
  41f4c8:	ldr	x1, [sp, #72]
  41f4cc:	stp	x4, x3, [sp, #104]
  41f4d0:	add	x1, x1, x7
  41f4d4:	stp	x1, x6, [sp, #72]
  41f4d8:	str	xzr, [sp, #120]
  41f4dc:	b	41f478 <ferror@plt+0x1bea8>
  41f4e0:	bl	4032a0 <free@plt>
  41f4e4:	add	x23, x20, #0x8
  41f4e8:	mov	x0, #0x8c                  	// #140
  41f4ec:	bl	41e7b4 <ferror@plt+0x1b1e4>
  41f4f0:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41f4f4:	add	x0, x0, #0x9b8
  41f4f8:	ldr	x22, [x0, w19, uxtw #3]
  41f4fc:	mov	x0, x22
  41f500:	bl	41eaac <ferror@plt+0x1b4dc>
  41f504:	mov	x0, #0x8c                  	// #140
  41f508:	bl	41e7b4 <ferror@plt+0x1b1e4>
  41f50c:	ldr	w19, [sp, #64]
  41f510:	sub	w19, w19, #0x1
  41f514:	sxtw	x19, w19
  41f518:	tbnz	w19, #31, 41f538 <ferror@plt+0x1bf68>
  41f51c:	lsl	x0, x19, #4
  41f520:	add	x2, sp, #0x48
  41f524:	sub	x19, x19, #0x1
  41f528:	ldr	x1, [x20, x0]
  41f52c:	ldr	x0, [x23, x0]
  41f530:	bl	41e7f4 <ferror@plt+0x1b224>
  41f534:	b	41f518 <ferror@plt+0x1bf48>
  41f538:	mov	x0, #0x8c                  	// #140
  41f53c:	bl	41e7b4 <ferror@plt+0x1b1e4>
  41f540:	mov	x0, x22
  41f544:	bl	41eaac <ferror@plt+0x1b4dc>
  41f548:	mov	x0, #0x8c                  	// #140
  41f54c:	bl	41e7b4 <ferror@plt+0x1b1e4>
  41f550:	add	x0, sp, #0x48
  41f554:	bl	41e9c8 <ferror@plt+0x1b3f8>
  41f558:	mov	x0, #0x8c                  	// #140
  41f55c:	bl	41e7b4 <ferror@plt+0x1b1e4>
  41f560:	mov	x0, x20
  41f564:	bl	4032a0 <free@plt>
  41f568:	ldr	x1, [x21, #1264]
  41f56c:	mov	w0, #0xa                   	// #10
  41f570:	bl	402e40 <fputc@plt>
  41f574:	ldp	x19, x20, [sp, #16]
  41f578:	ldp	x21, x22, [sp, #32]
  41f57c:	ldr	x23, [sp, #48]
  41f580:	ldp	x29, x30, [sp], #128
  41f584:	ret
  41f588:	ldr	x3, [x0]
  41f58c:	ldr	x2, [x1]
  41f590:	cmp	x3, x2
  41f594:	b.ne	41f5bc <ferror@plt+0x1bfec>  // b.any
  41f598:	ldr	x3, [x0, #8]
  41f59c:	ldr	x2, [x1, #8]
  41f5a0:	cmp	x3, x2
  41f5a4:	b.ne	41f5bc <ferror@plt+0x1bfec>  // b.any
  41f5a8:	ldr	w2, [x0, #16]
  41f5ac:	ldr	w0, [x1, #16]
  41f5b0:	cmp	w2, w0
  41f5b4:	cset	w0, eq  // eq = none
  41f5b8:	ret
  41f5bc:	mov	w0, #0x0                   	// #0
  41f5c0:	b	41f5b8 <ferror@plt+0x1bfe8>
  41f5c4:	stp	x29, x30, [sp, #-112]!
  41f5c8:	mov	x29, sp
  41f5cc:	stp	x19, x20, [sp, #16]
  41f5d0:	ldr	x20, [x0, #40]
  41f5d4:	stp	x21, x22, [sp, #32]
  41f5d8:	mov	x22, x2
  41f5dc:	stp	x23, x24, [sp, #48]
  41f5e0:	mov	x24, x0
  41f5e4:	mov	x0, x2
  41f5e8:	stp	x25, x26, [sp, #64]
  41f5ec:	stp	x27, x28, [sp, #80]
  41f5f0:	str	x1, [sp, #104]
  41f5f4:	bl	41ed14 <ferror@plt+0x1b744>
  41f5f8:	ldr	w1, [x20, #32]
  41f5fc:	mov	w25, w0
  41f600:	ldr	w27, [x20, #40]
  41f604:	add	w1, w1, #0x1
  41f608:	str	w1, [x20, #32]
  41f60c:	mov	w1, w27
  41f610:	bl	41e73c <ferror@plt+0x1b16c>
  41f614:	mov	w19, w0
  41f618:	ldr	x21, [x20]
  41f61c:	ubfiz	x0, x19, #4, #32
  41f620:	add	x23, x21, x0
  41f624:	ldr	x0, [x21, x0]
  41f628:	cbz	x0, 41f69c <ferror@plt+0x1c0cc>
  41f62c:	cmp	x0, #0x1
  41f630:	b.eq	41f644 <ferror@plt+0x1c074>  // b.none
  41f634:	mov	x1, x22
  41f638:	bl	41f588 <ferror@plt+0x1bfb8>
  41f63c:	tst	w0, #0xff
  41f640:	b.ne	41f69c <ferror@plt+0x1c0cc>  // b.any
  41f644:	mov	w0, w25
  41f648:	mov	w1, w27
  41f64c:	bl	41e774 <ferror@plt+0x1b1a4>
  41f650:	mov	w25, w0
  41f654:	ldr	x26, [x20, #8]
  41f658:	add	w19, w19, w25
  41f65c:	ldr	w0, [x20, #36]
  41f660:	cmp	x26, w19, uxtw
  41f664:	add	w0, w0, #0x1
  41f668:	str	w0, [x20, #36]
  41f66c:	b.hi	41f674 <ferror@plt+0x1c0a4>  // b.pmore
  41f670:	sub	w19, w19, w26
  41f674:	ubfiz	x0, x19, #4, #32
  41f678:	add	x23, x21, x0
  41f67c:	ldr	x0, [x21, x0]
  41f680:	cbz	x0, 41f69c <ferror@plt+0x1c0cc>
  41f684:	cmp	x0, #0x1
  41f688:	b.eq	41f658 <ferror@plt+0x1c088>  // b.none
  41f68c:	mov	x1, x22
  41f690:	bl	41f588 <ferror@plt+0x1bfb8>
  41f694:	tst	w0, #0xff
  41f698:	b.eq	41f658 <ferror@plt+0x1c088>  // b.none
  41f69c:	ldr	x0, [x23]
  41f6a0:	cbz	x0, 41f720 <ferror@plt+0x1c150>
  41f6a4:	cbz	x22, 41f6b4 <ferror@plt+0x1c0e4>
  41f6a8:	mov	x0, x22
  41f6ac:	mov	x1, #0x20                  	// #32
  41f6b0:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41f6b4:	ldr	x19, [x23, #8]
  41f6b8:	ldr	x0, [x19, #24]
  41f6bc:	add	x0, x0, #0x1
  41f6c0:	str	x0, [x19, #24]
  41f6c4:	ldr	x0, [x24, #48]
  41f6c8:	add	x1, sp, #0x68
  41f6cc:	bl	41ec30 <ferror@plt+0x1b660>
  41f6d0:	cbnz	x0, 41f700 <ferror@plt+0x1c130>
  41f6d4:	ldr	x0, [x24, #48]
  41f6d8:	add	x1, sp, #0x68
  41f6dc:	ldr	x2, [sp, #104]
  41f6e0:	mov	w3, #0x1                   	// #1
  41f6e4:	ubfx	x2, x2, #3, #32
  41f6e8:	bl	41f02c <ferror@plt+0x1ba5c>
  41f6ec:	ldr	x1, [x0]
  41f6f0:	cbnz	x1, 41f6fc <ferror@plt+0x1c12c>
  41f6f4:	ldr	x1, [sp, #104]
  41f6f8:	str	x1, [x0]
  41f6fc:	stp	x19, xzr, [x0, #8]
  41f700:	mov	x0, x19
  41f704:	ldp	x19, x20, [sp, #16]
  41f708:	ldp	x21, x22, [sp, #32]
  41f70c:	ldp	x23, x24, [sp, #48]
  41f710:	ldp	x25, x26, [sp, #64]
  41f714:	ldp	x27, x28, [sp, #80]
  41f718:	ldp	x29, x30, [sp], #112
  41f71c:	ret
  41f720:	mov	x0, #0x38                  	// #56
  41f724:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41f728:	mov	x19, x0
  41f72c:	mov	x0, #0x1                   	// #1
  41f730:	ldr	x20, [x24, #40]
  41f734:	stp	xzr, xzr, [x19]
  41f738:	stp	xzr, x0, [x19, #16]
  41f73c:	mov	x0, x22
  41f740:	stp	xzr, xzr, [x19, #32]
  41f744:	str	xzr, [x19, #48]
  41f748:	bl	41ed14 <ferror@plt+0x1b744>
  41f74c:	mov	w25, w0
  41f750:	ldp	x0, x1, [x20, #8]
  41f754:	add	x0, x0, x0, lsl #1
  41f758:	cmp	x0, x1, lsl #2
  41f75c:	b.hi	41f768 <ferror@plt+0x1c198>  // b.pmore
  41f760:	mov	x0, x20
  41f764:	bl	41ed6c <ferror@plt+0x1b79c>
  41f768:	ldr	w0, [x20, #32]
  41f76c:	ldr	w27, [x20, #40]
  41f770:	add	w0, w0, #0x1
  41f774:	str	w0, [x20, #32]
  41f778:	mov	w1, w27
  41f77c:	mov	w0, w25
  41f780:	bl	41e73c <ferror@plt+0x1b16c>
  41f784:	mov	w21, w0
  41f788:	ldr	x26, [x20]
  41f78c:	ubfiz	x0, x21, #4, #32
  41f790:	add	x23, x26, x0
  41f794:	ldr	x0, [x26, x0]
  41f798:	cbz	x0, 41f854 <ferror@plt+0x1c284>
  41f79c:	cmp	x0, #0x1
  41f7a0:	b.ne	41f7fc <ferror@plt+0x1c22c>  // b.any
  41f7a4:	mov	w1, w27
  41f7a8:	mov	w0, w25
  41f7ac:	bl	41e774 <ferror@plt+0x1b1a4>
  41f7b0:	mov	x25, x23
  41f7b4:	ldr	x28, [x20, #8]
  41f7b8:	mov	w27, w0
  41f7bc:	ldr	w0, [x20, #36]
  41f7c0:	add	w21, w21, w27
  41f7c4:	add	w0, w0, #0x1
  41f7c8:	str	w0, [x20, #36]
  41f7cc:	cmp	x28, w21, uxtw
  41f7d0:	b.hi	41f7d8 <ferror@plt+0x1c208>  // b.pmore
  41f7d4:	sub	w21, w21, w28
  41f7d8:	ubfiz	x0, x21, #4, #32
  41f7dc:	add	x23, x26, x0
  41f7e0:	ldr	x0, [x26, x0]
  41f7e4:	cbz	x0, 41f838 <ferror@plt+0x1c268>
  41f7e8:	cmp	x0, #0x1
  41f7ec:	b.ne	41f814 <ferror@plt+0x1c244>  // b.any
  41f7f0:	cmp	x25, #0x0
  41f7f4:	csel	x25, x25, x23, ne  // ne = any
  41f7f8:	b	41f7bc <ferror@plt+0x1c1ec>
  41f7fc:	mov	x1, x22
  41f800:	bl	41f588 <ferror@plt+0x1bfb8>
  41f804:	tst	w0, #0xff
  41f808:	b.ne	41f824 <ferror@plt+0x1c254>  // b.any
  41f80c:	mov	x23, #0x0                   	// #0
  41f810:	b	41f7a4 <ferror@plt+0x1c1d4>
  41f814:	mov	x1, x22
  41f818:	bl	41f588 <ferror@plt+0x1bfb8>
  41f81c:	tst	w0, #0xff
  41f820:	b.eq	41f7bc <ferror@plt+0x1c1ec>  // b.none
  41f824:	ldr	x0, [x23]
  41f828:	cbnz	x0, 41f830 <ferror@plt+0x1c260>
  41f82c:	str	x22, [x23]
  41f830:	str	x19, [x23, #8]
  41f834:	b	41f6c4 <ferror@plt+0x1c0f4>
  41f838:	cbz	x25, 41f854 <ferror@plt+0x1c284>
  41f83c:	ldr	x0, [x20, #24]
  41f840:	mov	x23, x25
  41f844:	sub	x0, x0, #0x1
  41f848:	str	x0, [x20, #24]
  41f84c:	str	xzr, [x25]
  41f850:	b	41f824 <ferror@plt+0x1c254>
  41f854:	ldr	x0, [x20, #16]
  41f858:	ubfiz	x21, x21, #4, #32
  41f85c:	add	x23, x26, x21
  41f860:	add	x0, x0, #0x1
  41f864:	str	x0, [x20, #16]
  41f868:	b	41f824 <ferror@plt+0x1c254>
  41f86c:	ret
  41f870:	mov	w0, #0x0                   	// #0
  41f874:	ret
  41f878:	mov	w0, #0x1                   	// #1
  41f87c:	ret
  41f880:	mov	w0, #0x0                   	// #0
  41f884:	ret
  41f888:	mov	w0, #0x0                   	// #0
  41f88c:	ret
  41f890:	mov	w0, #0x1                   	// #1
  41f894:	ret
  41f898:	mov	w0, #0x0                   	// #0
  41f89c:	ret
  41f8a0:	mov	w0, #0x1                   	// #1
  41f8a4:	ret
  41f8a8:	mov	w0, #0x1                   	// #1
  41f8ac:	ret
  41f8b0:	mov	w0, #0x0                   	// #0
  41f8b4:	ret
  41f8b8:	mov	w0, #0x1                   	// #1
  41f8bc:	ret
  41f8c0:	mov	w0, #0x0                   	// #0
  41f8c4:	ret
  41f8c8:	mov	w0, #0x1                   	// #1
  41f8cc:	ret
  41f8d0:	mov	w0, #0x1                   	// #1
  41f8d4:	ret
  41f8d8:	mov	w0, #0x0                   	// #0
  41f8dc:	ret
  41f8e0:	mov	w0, #0x1                   	// #1
  41f8e4:	ret
  41f8e8:	mov	w0, #0x0                   	// #0
  41f8ec:	ret
  41f8f0:	mov	w0, #0x1                   	// #1
  41f8f4:	ret
  41f8f8:	ret
  41f8fc:	ret
  41f900:	mov	w0, #0x0                   	// #0
  41f904:	ret
  41f908:	mov	w0, #0x0                   	// #0
  41f90c:	ret
  41f910:	mov	w0, #0x0                   	// #0
  41f914:	ret
  41f918:	mov	w0, #0x1                   	// #1
  41f91c:	ret
  41f920:	cmp	x2, #0x0
  41f924:	cset	w0, eq  // eq = none
  41f928:	ret
  41f92c:	mov	w0, #0x1                   	// #1
  41f930:	ret
  41f934:	mov	w0, #0x0                   	// #0
  41f938:	ret
  41f93c:	mov	w0, #0x1                   	// #1
  41f940:	ret
  41f944:	mov	w0, #0x0                   	// #0
  41f948:	ret
  41f94c:	mov	w0, #0x1                   	// #1
  41f950:	ret
  41f954:	mov	w0, #0x0                   	// #0
  41f958:	ret
  41f95c:	mov	w0, #0x0                   	// #0
  41f960:	ret
  41f964:	mov	w0, #0x0                   	// #0
  41f968:	ret
  41f96c:	mov	w0, #0x0                   	// #0
  41f970:	ret
  41f974:	mov	x0, #0x0                   	// #0
  41f978:	ret
  41f97c:	ret
  41f980:	ret
  41f984:	ret
  41f988:	ret
  41f98c:	ret
  41f990:	ret
  41f994:	mov	w0, #0x0                   	// #0
  41f998:	ret
  41f99c:	mov	w0, #0x0                   	// #0
  41f9a0:	ret
  41f9a4:	mov	w0, #0x1                   	// #1
  41f9a8:	ret
  41f9ac:	mov	w0, #0x1                   	// #1
  41f9b0:	ret
  41f9b4:	mov	w0, #0x0                   	// #0
  41f9b8:	ret
  41f9bc:	mov	w0, #0x1                   	// #1
  41f9c0:	ret
  41f9c4:	mov	w0, #0x0                   	// #0
  41f9c8:	ret
  41f9cc:	mov	w0, #0x1                   	// #1
  41f9d0:	ret
  41f9d4:	mov	w0, #0x0                   	// #0
  41f9d8:	ret
  41f9dc:	mov	w0, #0x0                   	// #0
  41f9e0:	ret
  41f9e4:	mov	w0, #0x0                   	// #0
  41f9e8:	ret
  41f9ec:	mov	w0, #0x1                   	// #1
  41f9f0:	ret
  41f9f4:	ret
  41f9f8:	mov	x0, #0x0                   	// #0
  41f9fc:	ret
  41fa00:	mov	x0, #0x0                   	// #0
  41fa04:	ret
  41fa08:	mov	w0, #0x0                   	// #0
  41fa0c:	ret
  41fa10:	mov	x0, #0x0                   	// #0
  41fa14:	ret
  41fa18:	mov	x0, #0x0                   	// #0
  41fa1c:	ret
  41fa20:	mov	x0, #0x0                   	// #0
  41fa24:	ret
  41fa28:	mov	x0, #0x0                   	// #0
  41fa2c:	ret
  41fa30:	mov	x0, #0x0                   	// #0
  41fa34:	ret
  41fa38:	mov	x0, #0x0                   	// #0
  41fa3c:	ret
  41fa40:	mov	x0, #0x0                   	// #0
  41fa44:	ret
  41fa48:	mov	x0, #0x0                   	// #0
  41fa4c:	ret
  41fa50:	mov	x0, #0x0                   	// #0
  41fa54:	ret
  41fa58:	mov	x0, #0x0                   	// #0
  41fa5c:	ret
  41fa60:	mov	x0, #0x0                   	// #0
  41fa64:	ret
  41fa68:	mov	x0, #0x0                   	// #0
  41fa6c:	ret
  41fa70:	mov	w0, #0x0                   	// #0
  41fa74:	ret
  41fa78:	ret
  41fa7c:	ret
  41fa80:	mov	w0, #0x0                   	// #0
  41fa84:	ret
  41fa88:	mov	w0, #0x0                   	// #0
  41fa8c:	ret
  41fa90:	mov	w0, #0x1                   	// #1
  41fa94:	ret
  41fa98:	mov	w0, #0x0                   	// #0
  41fa9c:	ret
  41faa0:	mov	w0, #0x0                   	// #0
  41faa4:	ret
  41faa8:	mov	w0, #0x2                   	// #2
  41faac:	ret
  41fab0:	mov	w0, #0x2                   	// #2
  41fab4:	ret
  41fab8:	mov	w0, #0x1                   	// #1
  41fabc:	ret
  41fac0:	mov	w0, #0x1                   	// #1
  41fac4:	ret
  41fac8:	mov	x0, #0x0                   	// #0
  41facc:	ret
  41fad0:	mov	w0, #0x1                   	// #1
  41fad4:	ret
  41fad8:	adrp	x4, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41fadc:	add	x4, x4, #0xa78
  41fae0:	mov	x3, x0
  41fae4:	mov	w2, #0x0                   	// #0
  41fae8:	mov	w0, #0x1e                  	// #30
  41faec:	cmp	w0, w2
  41faf0:	b.eq	41fb20 <ferror@plt+0x1c550>  // b.none
  41faf4:	sub	w1, w0, w2
  41faf8:	add	w5, w2, w1, lsr #1
  41fafc:	add	w1, w2, w1, lsr #1
  41fb00:	lsl	x1, x1, #4
  41fb04:	ldr	w1, [x4, x1]
  41fb08:	cmp	x1, x3
  41fb0c:	b.cs	41fb18 <ferror@plt+0x1c548>  // b.hs, b.nlast
  41fb10:	add	w2, w5, #0x1
  41fb14:	b	41faec <ferror@plt+0x1c51c>
  41fb18:	mov	w0, w5
  41fb1c:	b	41faec <ferror@plt+0x1c51c>
  41fb20:	ubfiz	x1, x0, #4, #32
  41fb24:	ldr	w1, [x4, x1]
  41fb28:	cmp	x1, x3
  41fb2c:	b.cs	41fb50 <ferror@plt+0x1c580>  // b.hs, b.nlast
  41fb30:	stp	x29, x30, [sp, #-16]!
  41fb34:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41fb38:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41fb3c:	mov	x29, sp
  41fb40:	add	x2, x2, #0xa40
  41fb44:	add	x0, x0, #0xa5e
  41fb48:	mov	w1, #0x60                  	// #96
  41fb4c:	bl	403600 <ferror@plt+0x30>
  41fb50:	ret
  41fb54:	ret
  41fb58:	stp	x29, x30, [sp, #-32]!
  41fb5c:	mov	x29, sp
  41fb60:	stp	x19, x20, [sp, #16]
  41fb64:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  41fb68:	add	x19, x19, #0x90
  41fb6c:	ldarb	w0, [x19]
  41fb70:	tbnz	w0, #0, 41fbac <ferror@plt+0x1c5dc>
  41fb74:	mov	x0, x19
  41fb78:	bl	45dbd8 <_obstack_memory_used@@Base+0x17e8>
  41fb7c:	cbz	w0, 41fbac <ferror@plt+0x1c5dc>
  41fb80:	add	x20, x19, #0x8
  41fb84:	mov	x0, x20
  41fb88:	bl	41fbbc <ferror@plt+0x1c5ec>
  41fb8c:	mov	x0, x19
  41fb90:	bl	45dd68 <_obstack_memory_used@@Base+0x1978>
  41fb94:	adrp	x2, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  41fb98:	adrp	x0, 41f000 <ferror@plt+0x1ba30>
  41fb9c:	add	x2, x2, #0x498
  41fba0:	mov	x1, x20
  41fba4:	add	x0, x0, #0xd4c
  41fba8:	bl	402e30 <__cxa_atexit@plt>
  41fbac:	add	x0, x19, #0x8
  41fbb0:	ldp	x19, x20, [sp, #16]
  41fbb4:	ldp	x29, x30, [sp], #32
  41fbb8:	ret
  41fbbc:	stp	x29, x30, [sp, #-64]!
  41fbc0:	mov	x29, sp
  41fbc4:	stp	x19, x20, [sp, #16]
  41fbc8:	mov	x20, x0
  41fbcc:	mov	x0, #0x30                  	// #48
  41fbd0:	stp	x21, x22, [sp, #32]
  41fbd4:	adrp	x21, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  41fbd8:	add	x21, x21, #0xa78
  41fbdc:	str	x23, [sp, #48]
  41fbe0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41fbe4:	mov	x19, x0
  41fbe8:	strb	wzr, [x0, #44]
  41fbec:	mov	x0, #0xd                   	// #13
  41fbf0:	stp	xzr, xzr, [x19, #16]
  41fbf4:	str	xzr, [x19, #32]
  41fbf8:	bl	41fad8 <ferror@plt+0x1c508>
  41fbfc:	mov	w22, w0
  41fc00:	mov	x1, #0x10                  	// #16
  41fc04:	ubfiz	x0, x22, #4, #32
  41fc08:	ldr	w23, [x21, x0]
  41fc0c:	mov	x0, x23
  41fc10:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41fc14:	mov	x1, #0x0                   	// #0
  41fc18:	cmp	x23, x1
  41fc1c:	b.ls	41fc30 <ferror@plt+0x1c660>  // b.plast
  41fc20:	lsl	x2, x1, #4
  41fc24:	add	x1, x1, #0x1
  41fc28:	str	xzr, [x0, x2]
  41fc2c:	b	41fc18 <ferror@plt+0x1c648>
  41fc30:	stp	x0, x23, [x19]
  41fc34:	mov	x0, #0x30                  	// #48
  41fc38:	str	w22, [x19, #40]
  41fc3c:	str	x19, [x20, #40]
  41fc40:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41fc44:	mov	x19, x0
  41fc48:	strb	wzr, [x0, #44]
  41fc4c:	mov	x0, #0xd                   	// #13
  41fc50:	stp	xzr, xzr, [x19, #16]
  41fc54:	str	xzr, [x19, #32]
  41fc58:	bl	41fad8 <ferror@plt+0x1c508>
  41fc5c:	mov	w22, w0
  41fc60:	mov	x1, #0x18                  	// #24
  41fc64:	ubfiz	x0, x22, #4, #32
  41fc68:	ldr	w23, [x21, x0]
  41fc6c:	mov	x0, x23
  41fc70:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41fc74:	mov	x1, #0x0                   	// #0
  41fc78:	mov	x3, #0x18                  	// #24
  41fc7c:	cmp	x23, x1
  41fc80:	b.ls	41fc94 <ferror@plt+0x1c6c4>  // b.plast
  41fc84:	mul	x2, x1, x3
  41fc88:	add	x1, x1, #0x1
  41fc8c:	str	xzr, [x0, x2]
  41fc90:	b	41fc7c <ferror@plt+0x1c6ac>
  41fc94:	stp	x0, x23, [x19]
  41fc98:	mov	x0, #0x30                  	// #48
  41fc9c:	str	w22, [x19, #40]
  41fca0:	str	x19, [x20, #48]
  41fca4:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  41fca8:	mov	x19, x0
  41fcac:	strb	wzr, [x0, #44]
  41fcb0:	mov	x0, #0xd                   	// #13
  41fcb4:	stp	xzr, xzr, [x19, #16]
  41fcb8:	str	xzr, [x19, #32]
  41fcbc:	bl	41fad8 <ferror@plt+0x1c508>
  41fcc0:	mov	w22, w0
  41fcc4:	mov	x1, #0x18                  	// #24
  41fcc8:	ubfiz	x0, x22, #4, #32
  41fccc:	ldr	w21, [x21, x0]
  41fcd0:	mov	x0, x21
  41fcd4:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  41fcd8:	mov	x1, #0x0                   	// #0
  41fcdc:	mov	x3, #0x18                  	// #24
  41fce0:	cmp	x21, x1
  41fce4:	b.ls	41fcf8 <ferror@plt+0x1c728>  // b.plast
  41fce8:	mul	x2, x1, x3
  41fcec:	add	x1, x1, #0x1
  41fcf0:	str	xzr, [x0, x2]
  41fcf4:	b	41fce0 <ferror@plt+0x1c710>
  41fcf8:	ldr	x23, [sp, #48]
  41fcfc:	stp	x0, x21, [x19]
  41fd00:	str	w22, [x19, #40]
  41fd04:	ldp	x21, x22, [sp, #32]
  41fd08:	str	x19, [x20]
  41fd0c:	ldp	x19, x20, [sp, #16]
  41fd10:	ldp	x29, x30, [sp], #64
  41fd14:	ret
  41fd18:	ldr	x3, [x0, #8]
  41fd1c:	ldr	x1, [x0]
  41fd20:	cmp	x1, x3
  41fd24:	b.cs	41fd44 <ferror@plt+0x1c774>  // b.hs, b.nlast
  41fd28:	ldr	x2, [x1]
  41fd2c:	cbz	x2, 41fd38 <ferror@plt+0x1c768>
  41fd30:	cmp	x2, #0x1
  41fd34:	b.ne	41fd48 <ferror@plt+0x1c778>  // b.any
  41fd38:	add	x1, x1, #0x10
  41fd3c:	str	x1, [x0]
  41fd40:	b	41fd1c <ferror@plt+0x1c74c>
  41fd44:	stp	xzr, xzr, [x0]
  41fd48:	ret
  41fd4c:	stp	x29, x30, [sp, #-48]!
  41fd50:	mov	x29, sp
  41fd54:	stp	x19, x20, [sp, #16]
  41fd58:	mov	x19, x0
  41fd5c:	ldr	x0, [x0, #40]
  41fd60:	ldp	x1, x0, [x0]
  41fd64:	add	x0, x1, x0, lsl #4
  41fd68:	stp	x1, x0, [sp, #32]
  41fd6c:	add	x0, sp, #0x20
  41fd70:	bl	41fd18 <ferror@plt+0x1c748>
  41fd74:	ldr	x0, [sp, #32]
  41fd78:	cbz	x0, 41fda8 <ferror@plt+0x1c7d8>
  41fd7c:	ldr	x0, [x0]
  41fd80:	cbnz	x0, 41fdd8 <ferror@plt+0x1c808>
  41fd84:	ldr	x0, [sp, #32]
  41fd88:	ldr	x0, [x0, #8]
  41fd8c:	cbz	x0, 41fd98 <ferror@plt+0x1c7c8>
  41fd90:	mov	x1, #0x20                  	// #32
  41fd94:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41fd98:	ldr	x0, [sp, #32]
  41fd9c:	add	x0, x0, #0x10
  41fda0:	str	x0, [sp, #32]
  41fda4:	b	41fd6c <ferror@plt+0x1c79c>
  41fda8:	ldr	x1, [sp, #40]
  41fdac:	cbnz	x1, 41fd7c <ferror@plt+0x1c7ac>
  41fdb0:	ldr	x20, [x19, #40]
  41fdb4:	cbnz	x20, 41fde4 <ferror@plt+0x1c814>
  41fdb8:	ldr	x20, [x19, #48]
  41fdbc:	cbz	x20, 41fe40 <ferror@plt+0x1c870>
  41fdc0:	ldr	x1, [x20, #8]
  41fdc4:	sub	x0, x1, #0x1
  41fdc8:	cmp	x1, x0
  41fdcc:	b.ls	41fe24 <ferror@plt+0x1c854>  // b.plast
  41fdd0:	sub	x0, x0, #0x1
  41fdd4:	b	41fdc8 <ferror@plt+0x1c7f8>
  41fdd8:	mov	x1, #0x20                  	// #32
  41fddc:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41fde0:	b	41fd84 <ferror@plt+0x1c7b4>
  41fde4:	ldr	x1, [x20, #8]
  41fde8:	sub	x0, x1, #0x1
  41fdec:	cmp	x1, x0
  41fdf0:	b.ls	41fdfc <ferror@plt+0x1c82c>  // b.plast
  41fdf4:	sub	x0, x0, #0x1
  41fdf8:	b	41fdec <ferror@plt+0x1c81c>
  41fdfc:	ldrb	w1, [x20, #44]
  41fe00:	ldr	x0, [x20]
  41fe04:	cbnz	w1, 41fe1c <ferror@plt+0x1c84c>
  41fe08:	bl	4032a0 <free@plt>
  41fe0c:	mov	x0, x20
  41fe10:	mov	x1, #0x30                  	// #48
  41fe14:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41fe18:	b	41fdb8 <ferror@plt+0x1c7e8>
  41fe1c:	bl	410418 <ferror@plt+0xce48>
  41fe20:	b	41fe0c <ferror@plt+0x1c83c>
  41fe24:	ldrb	w1, [x20, #44]
  41fe28:	ldr	x0, [x20]
  41fe2c:	cbnz	w1, 41fe60 <ferror@plt+0x1c890>
  41fe30:	bl	4032a0 <free@plt>
  41fe34:	mov	x0, x20
  41fe38:	mov	x1, #0x30                  	// #48
  41fe3c:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41fe40:	ldr	x19, [x19]
  41fe44:	cbz	x19, 41fe84 <ferror@plt+0x1c8b4>
  41fe48:	ldr	x1, [x19, #8]
  41fe4c:	sub	x0, x1, #0x1
  41fe50:	cmp	x1, x0
  41fe54:	b.ls	41fe68 <ferror@plt+0x1c898>  // b.plast
  41fe58:	sub	x0, x0, #0x1
  41fe5c:	b	41fe50 <ferror@plt+0x1c880>
  41fe60:	bl	410418 <ferror@plt+0xce48>
  41fe64:	b	41fe34 <ferror@plt+0x1c864>
  41fe68:	ldrb	w1, [x19, #44]
  41fe6c:	ldr	x0, [x19]
  41fe70:	cbnz	w1, 41fe90 <ferror@plt+0x1c8c0>
  41fe74:	bl	4032a0 <free@plt>
  41fe78:	mov	x0, x19
  41fe7c:	mov	x1, #0x30                  	// #48
  41fe80:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  41fe84:	ldp	x19, x20, [sp, #16]
  41fe88:	ldp	x29, x30, [sp], #48
  41fe8c:	ret
  41fe90:	bl	410418 <ferror@plt+0xce48>
  41fe94:	b	41fe78 <ferror@plt+0x1c8a8>
  41fe98:	stp	x29, x30, [sp, #-80]!
  41fe9c:	mov	x29, sp
  41fea0:	stp	x19, x20, [sp, #16]
  41fea4:	stp	x21, x22, [sp, #32]
  41fea8:	stp	x23, x24, [sp, #48]
  41feac:	mov	w23, w3
  41feb0:	str	x25, [sp, #64]
  41feb4:	cbnz	w1, 41fed8 <ferror@plt+0x1c908>
  41feb8:	mov	w19, w3
  41febc:	mov	w0, w19
  41fec0:	ldp	x19, x20, [sp, #16]
  41fec4:	ldp	x21, x22, [sp, #32]
  41fec8:	ldp	x23, x24, [sp, #48]
  41fecc:	ldr	x25, [sp, #64]
  41fed0:	ldp	x29, x30, [sp], #80
  41fed4:	ret
  41fed8:	mov	w19, w1
  41fedc:	cbz	w3, 41febc <ferror@plt+0x1c8ec>
  41fee0:	mov	x24, x0
  41fee4:	add	w0, w1, #0x1
  41fee8:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  41feec:	mov	x25, x2
  41fef0:	cmp	x1, w0, sxtw
  41fef4:	sbfiz	x20, x0, #2, #32
  41fef8:	csinv	x20, x20, xzr, cs  // cs = hs, nlast
  41fefc:	mov	x0, x20
  41ff00:	bl	45de70 <_obstack_memory_used@@Base+0x1a80>
  41ff04:	mov	x22, x0
  41ff08:	mov	x0, x20
  41ff0c:	bl	45de70 <_obstack_memory_used@@Base+0x1a80>
  41ff10:	mov	x21, x0
  41ff14:	mov	x0, x20
  41ff18:	bl	45de70 <_obstack_memory_used@@Base+0x1a80>
  41ff1c:	mov	x20, x0
  41ff20:	mov	x1, #0x0                   	// #0
  41ff24:	cmp	w19, w1
  41ff28:	b.lt	41ff38 <ferror@plt+0x1c968>  // b.tstop
  41ff2c:	str	w1, [x21, x1, lsl #2]
  41ff30:	add	x1, x1, #0x1
  41ff34:	b	41ff24 <ferror@plt+0x1c954>
  41ff38:	add	x3, x21, #0x4
  41ff3c:	sub	x7, x25, #0x1
  41ff40:	sub	x8, x24, #0x1
  41ff44:	sub	x9, x22, #0x4
  41ff48:	add	x10, x20, #0x4
  41ff4c:	mov	x6, #0x0                   	// #0
  41ff50:	mov	w11, w6
  41ff54:	cmp	w23, w6
  41ff58:	b.le	420010 <ferror@plt+0x1ca40>
  41ff5c:	add	w0, w6, #0x1
  41ff60:	mov	x5, #0x0                   	// #0
  41ff64:	str	w0, [x20]
  41ff68:	cmp	w19, w5
  41ff6c:	b.le	41ffe4 <ferror@plt+0x1ca14>
  41ff70:	ldr	w4, [x3, x5, lsl #2]
  41ff74:	ldr	w0, [x20, x5, lsl #2]
  41ff78:	add	w4, w4, #0x1
  41ff7c:	ldrb	w2, [x24, x5]
  41ff80:	add	w0, w0, #0x1
  41ff84:	ldrb	w1, [x25, x6]
  41ff88:	cmp	w4, w0
  41ff8c:	csel	w4, w4, w0, ls  // ls = plast
  41ff90:	ldr	w0, [x21, x5, lsl #2]
  41ff94:	cmp	w2, w1
  41ff98:	cinc	w0, w0, ne  // ne = any
  41ff9c:	cmp	w4, w0
  41ffa0:	csel	w4, w4, w0, ls  // ls = plast
  41ffa4:	cmp	w11, #0x0
  41ffa8:	ccmp	w5, #0x0, #0x4, gt
  41ffac:	b.le	41ffd8 <ferror@plt+0x1ca08>
  41ffb0:	ldrb	w0, [x7, x6]
  41ffb4:	cmp	w0, w2
  41ffb8:	b.ne	41ffd8 <ferror@plt+0x1ca08>  // b.any
  41ffbc:	ldrb	w0, [x8, x5]
  41ffc0:	cmp	w0, w1
  41ffc4:	b.ne	41ffd8 <ferror@plt+0x1ca08>  // b.any
  41ffc8:	ldr	w0, [x9, x5, lsl #2]
  41ffcc:	add	w0, w0, #0x1
  41ffd0:	cmp	w4, w0
  41ffd4:	csel	w4, w4, w0, ls  // ls = plast
  41ffd8:	str	w4, [x10, x5, lsl #2]
  41ffdc:	add	x5, x5, #0x1
  41ffe0:	b	41ff68 <ferror@plt+0x1c998>
  41ffe4:	mov	x4, #0x0                   	// #0
  41ffe8:	cmp	w19, w4
  41ffec:	b.ge	41fff8 <ferror@plt+0x1ca28>  // b.tcont
  41fff0:	add	x6, x6, #0x1
  41fff4:	b	41ff50 <ferror@plt+0x1c980>
  41fff8:	ldr	w0, [x21, x4, lsl #2]
  41fffc:	str	w0, [x22, x4, lsl #2]
  420000:	ldr	w0, [x20, x4, lsl #2]
  420004:	str	w0, [x21, x4, lsl #2]
  420008:	add	x4, x4, #0x1
  42000c:	b	41ffe8 <ferror@plt+0x1ca18>
  420010:	mov	x0, x22
  420014:	ldr	w19, [x20, w19, sxtw #2]
  420018:	bl	45dbc8 <_obstack_memory_used@@Base+0x17d8>
  42001c:	mov	x0, x21
  420020:	bl	45dbc8 <_obstack_memory_used@@Base+0x17d8>
  420024:	mov	x0, x20
  420028:	bl	45dbc8 <_obstack_memory_used@@Base+0x17d8>
  42002c:	b	41febc <ferror@plt+0x1c8ec>
  420030:	stp	x29, x30, [sp, #-48]!
  420034:	mov	x29, sp
  420038:	stp	x19, x20, [sp, #16]
  42003c:	mov	x19, x1
  420040:	mov	x20, x0
  420044:	str	x21, [sp, #32]
  420048:	bl	402d50 <strlen@plt>
  42004c:	mov	x21, x0
  420050:	mov	x0, x19
  420054:	bl	402d50 <strlen@plt>
  420058:	mov	w3, w0
  42005c:	mov	x2, x19
  420060:	mov	w1, w21
  420064:	mov	x0, x20
  420068:	ldp	x19, x20, [sp, #16]
  42006c:	ldr	x21, [sp, #32]
  420070:	ldp	x29, x30, [sp], #48
  420074:	b	41fe98 <ferror@plt+0x1c8c8>
  420078:	cmp	x0, x1
  42007c:	csel	x2, x0, x1, cs  // cs = hs, nlast
  420080:	csel	x0, x0, x1, ls  // ls = plast
  420084:	cmp	x0, x2
  420088:	b.ls	4200ac <ferror@plt+0x1cadc>  // b.plast
  42008c:	stp	x29, x30, [sp, #-16]!
  420090:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420094:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420098:	mov	x29, sp
  42009c:	add	x2, x2, #0xc58
  4200a0:	add	x0, x0, #0xc71
  4200a4:	mov	w1, #0xb2                  	// #178
  4200a8:	bl	403600 <ferror@plt+0x30>
  4200ac:	cmp	x2, #0x1
  4200b0:	b.ls	4200dc <ferror@plt+0x1cb0c>  // b.plast
  4200b4:	sub	x0, x2, x0
  4200b8:	cmp	x0, #0x1
  4200bc:	b.hi	4200d4 <ferror@plt+0x1cb04>  // b.pmore
  4200c0:	cmp	x2, #0x5
  4200c4:	b.ls	4200e4 <ferror@plt+0x1cb14>  // b.plast
  4200c8:	mov	x0, #0x3                   	// #3
  4200cc:	udiv	x0, x2, x0
  4200d0:	ret
  4200d4:	add	x2, x2, #0x2
  4200d8:	b	4200c8 <ferror@plt+0x1caf8>
  4200dc:	mov	w0, #0x0                   	// #0
  4200e0:	ret
  4200e4:	mov	w0, #0x1                   	// #1
  4200e8:	ret
  4200ec:	stp	x29, x30, [sp, #-96]!
  4200f0:	mov	x29, sp
  4200f4:	stp	x19, x20, [sp, #16]
  4200f8:	stp	x21, x22, [sp, #32]
  4200fc:	stp	x23, x24, [sp, #48]
  420100:	stp	x25, x26, [sp, #64]
  420104:	stp	x27, x28, [sp, #80]
  420108:	cbnz	x0, 420124 <ferror@plt+0x1cb54>
  42010c:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420110:	add	x2, x2, #0xc88
  420114:	mov	w1, #0x96                  	// #150
  420118:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42011c:	add	x0, x0, #0xc71
  420120:	bl	403600 <ferror@plt+0x30>
  420124:	mov	x25, x1
  420128:	cbnz	x1, 42013c <ferror@plt+0x1cb6c>
  42012c:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420130:	mov	w1, #0x97                  	// #151
  420134:	add	x2, x2, #0xc88
  420138:	b	420118 <ferror@plt+0x1cb48>
  42013c:	mov	x24, x0
  420140:	bl	412318 <ferror@plt+0xed48>
  420144:	mov	x19, x0
  420148:	mov	w22, #0xffffffff            	// #-1
  42014c:	mov	x21, #0x0                   	// #0
  420150:	mov	w27, #0x0                   	// #0
  420154:	ldr	x0, [x25]
  420158:	cbz	x0, 4201e4 <ferror@plt+0x1cc14>
  42015c:	ldr	w1, [x0, #4]
  420160:	cmp	w1, w27
  420164:	b.ls	4201e4 <ferror@plt+0x1cc14>  // b.plast
  420168:	add	x0, x0, w27, uxtw #3
  42016c:	ldr	x28, [x0, #8]
  420170:	cbnz	x28, 420184 <ferror@plt+0x1cbb4>
  420174:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420178:	mov	w1, #0x9e                  	// #158
  42017c:	add	x2, x2, #0xc88
  420180:	b	420118 <ferror@plt+0x1cb48>
  420184:	mov	x0, x28
  420188:	bl	412318 <ferror@plt+0xed48>
  42018c:	subs	w23, w0, w19
  420190:	mov	x20, x0
  420194:	cneg	w23, w23, mi  // mi = first
  420198:	cmp	w23, w22
  42019c:	b.cs	4201dc <ferror@plt+0x1cc0c>  // b.hs, b.nlast
  4201a0:	mov	x1, x0
  4201a4:	mov	x0, x19
  4201a8:	bl	420078 <ferror@plt+0x1caa8>
  4201ac:	cmp	w23, w0
  4201b0:	b.hi	4201dc <ferror@plt+0x1cc0c>  // b.pmore
  4201b4:	mov	w3, w20
  4201b8:	mov	x2, x28
  4201bc:	mov	w1, w19
  4201c0:	mov	x0, x24
  4201c4:	bl	41fe98 <ferror@plt+0x1c8c8>
  4201c8:	cmp	w0, w22
  4201cc:	b.cs	4201dc <ferror@plt+0x1cc0c>  // b.hs, b.nlast
  4201d0:	mov	x26, x20
  4201d4:	mov	w22, w0
  4201d8:	mov	x21, x28
  4201dc:	add	w27, w27, #0x1
  4201e0:	b	420154 <ferror@plt+0x1cb84>
  4201e4:	cbz	x21, 4201fc <ferror@plt+0x1cc2c>
  4201e8:	mov	x1, x26
  4201ec:	mov	x0, x19
  4201f0:	bl	420078 <ferror@plt+0x1caa8>
  4201f4:	cmp	w0, w22
  4201f8:	b.cc	420224 <ferror@plt+0x1cc54>  // b.lo, b.ul, b.last
  4201fc:	cmp	w22, #0x0
  420200:	csel	x21, x21, xzr, ne  // ne = any
  420204:	mov	x0, x21
  420208:	ldp	x19, x20, [sp, #16]
  42020c:	ldp	x21, x22, [sp, #32]
  420210:	ldp	x23, x24, [sp, #48]
  420214:	ldp	x25, x26, [sp, #64]
  420218:	ldp	x27, x28, [sp, #80]
  42021c:	ldp	x29, x30, [sp], #96
  420220:	ret
  420224:	mov	x21, #0x0                   	// #0
  420228:	b	420204 <ferror@plt+0x1cc34>
  42022c:	stp	x29, x30, [sp, #-32]!
  420230:	mov	x29, sp
  420234:	str	x19, [sp, #16]
  420238:	ldr	x19, [x0]
  42023c:	cbz	x19, 42025c <ferror@plt+0x1cc8c>
  420240:	mov	x0, x19
  420244:	bl	42078c <ferror@plt+0x1d1bc>
  420248:	mov	x0, x19
  42024c:	mov	x1, #0x8                   	// #8
  420250:	ldr	x19, [sp, #16]
  420254:	ldp	x29, x30, [sp], #32
  420258:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  42025c:	ldr	x19, [sp, #16]
  420260:	ldp	x29, x30, [sp], #32
  420264:	ret
  420268:	stp	x29, x30, [sp, #-192]!
  42026c:	mov	x29, sp
  420270:	stp	x19, x20, [sp, #16]
  420274:	mov	x20, x0
  420278:	ldr	x0, [x0]
  42027c:	stp	x21, x22, [sp, #32]
  420280:	stp	x23, x24, [sp, #48]
  420284:	stp	x25, x26, [sp, #64]
  420288:	stp	x27, x28, [sp, #80]
  42028c:	cbz	x0, 4202a8 <ferror@plt+0x1ccd8>
  420290:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420294:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420298:	add	x2, x2, #0xcab
  42029c:	add	x0, x0, #0xcc4
  4202a0:	mov	w1, #0x72                  	// #114
  4202a4:	bl	403600 <ferror@plt+0x30>
  4202a8:	mov	x25, x1
  4202ac:	mov	x0, #0x8                   	// #8
  4202b0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  4202b4:	str	xzr, [x0]
  4202b8:	str	x0, [x20]
  4202bc:	adrp	x0, 4bf000 <_obstack_memory_used@@Base+0x62c10>
  4202c0:	adrp	x24, 49d000 <_obstack_memory_used@@Base+0x40c10>
  4202c4:	add	x24, x24, #0xfc8
  4202c8:	ldr	w26, [x0, #1964]
  4202cc:	mov	w21, #0x0                   	// #0
  4202d0:	cmp	w26, w21
  4202d4:	b.ls	4204ac <ferror@plt+0x1cedc>  // b.plast
  4202d8:	mov	w0, w21
  4202dc:	mov	x1, #0x60                  	// #96
  4202e0:	mov	w19, #0x60                  	// #96
  4202e4:	cmp	w21, #0x3f1
  4202e8:	mul	x0, x0, x1
  4202ec:	umaddl	x19, w21, w19, x24
  4202f0:	add	x1, x24, x0
  4202f4:	ldr	x23, [x24, x0]
  4202f8:	b.eq	4203e8 <ferror@plt+0x1ce18>  // b.none
  4202fc:	cmp	w21, #0x3f4
  420300:	b.eq	4203e8 <ferror@plt+0x1ce18>  // b.none
  420304:	ldr	w0, [x1, #72]
  420308:	cmp	w0, #0x6
  42030c:	b.ne	420368 <ferror@plt+0x1cd98>  // b.any
  420310:	ldrh	w28, [x1, #68]
  420314:	adrp	x0, 4c0000 <_obstack_memory_used@@Base+0x63c10>
  420318:	add	x0, x0, #0x730
  42031c:	mov	x1, #0x30                  	// #48
  420320:	mov	w27, #0x0                   	// #0
  420324:	madd	x28, x28, x1, x0
  420328:	ldr	x1, [x28, #16]
  42032c:	ubfiz	x0, x27, #4, #32
  420330:	ldr	x1, [x1, x0]
  420334:	cbz	x1, 420494 <ferror@plt+0x1cec4>
  420338:	mov	x0, x23
  42033c:	mov	x2, #0x0                   	// #0
  420340:	bl	45a668 <ferror@plt+0x57098>
  420344:	mov	x22, x0
  420348:	mov	x2, x0
  42034c:	mov	x1, x19
  420350:	ldr	x0, [x20]
  420354:	add	w27, w27, #0x1
  420358:	bl	418094 <ferror@plt+0x14ac4>
  42035c:	mov	x0, x22
  420360:	bl	4032a0 <free@plt>
  420364:	b	420328 <ferror@plt+0x1cd58>
  420368:	ldr	w0, [x1, #60]
  42036c:	tbz	w0, #20, 420494 <ferror@plt+0x1cec4>
  420370:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  420374:	mov	x1, x25
  420378:	ldr	x2, [x0, #712]
  42037c:	mov	w0, w21
  420380:	blr	x2
  420384:	mov	x22, x0
  420388:	cbz	x0, 420494 <ferror@plt+0x1cec4>
  42038c:	ldr	w0, [x0, #4]
  420390:	mov	w27, #0x0                   	// #0
  420394:	cbz	w0, 420484 <ferror@plt+0x1ceb4>
  420398:	ldr	w0, [x22, #4]
  42039c:	cmp	w0, w27
  4203a0:	b.ls	420480 <ferror@plt+0x1ceb0>  // b.plast
  4203a4:	add	x0, x22, w27, uxtw #3
  4203a8:	mov	x2, #0x0                   	// #0
  4203ac:	add	w27, w27, #0x1
  4203b0:	ldr	x1, [x0, #8]
  4203b4:	mov	x0, x23
  4203b8:	bl	45a668 <ferror@plt+0x57098>
  4203bc:	mov	x28, x0
  4203c0:	mov	x2, x0
  4203c4:	mov	x1, x19
  4203c8:	ldr	x0, [x20]
  4203cc:	bl	418094 <ferror@plt+0x14ac4>
  4203d0:	mov	x0, x28
  4203d4:	bl	4032a0 <free@plt>
  4203d8:	b	420398 <ferror@plt+0x1cdc8>
  4203dc:	mov	x0, x22
  4203e0:	bl	4032a0 <free@plt>
  4203e4:	b	420490 <ferror@plt+0x1cec0>
  4203e8:	ldr	x0, [x20]
  4203ec:	adrp	x22, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4203f0:	adrp	x28, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4203f4:	mov	x2, x23
  4203f8:	mov	x1, x19
  4203fc:	add	x22, x22, #0x530
  420400:	add	x28, x28, #0xc9c
  420404:	bl	418094 <ferror@plt+0x14ac4>
  420408:	ldr	x27, [x22]
  42040c:	cbz	x27, 4204a4 <ferror@plt+0x1ced4>
  420410:	ldr	w0, [x22, #8]
  420414:	cmn	w0, #0x1
  420418:	b.ne	42044c <ferror@plt+0x1ce7c>  // b.any
  42041c:	cmp	w21, #0x3f4
  420420:	b.ne	42044c <ferror@plt+0x1ce7c>  // b.any
  420424:	mov	x1, x19
  420428:	mov	x2, #0x60                  	// #96
  42042c:	add	x0, sp, x2
  420430:	bl	402cd0 <memcpy@plt>
  420434:	ldrb	w0, [sp, #160]
  420438:	mov	x23, x28
  42043c:	add	x19, sp, #0x60
  420440:	str	x28, [sp, #96]
  420444:	orr	w0, w0, #0xffffff80
  420448:	strb	w0, [sp, #160]
  42044c:	mov	x1, x27
  420450:	mov	x0, x23
  420454:	mov	x2, #0x0                   	// #0
  420458:	bl	45a668 <ferror@plt+0x57098>
  42045c:	mov	x27, x0
  420460:	mov	x2, x0
  420464:	ldr	x0, [x20]
  420468:	mov	x1, x19
  42046c:	add	x22, x22, #0x20
  420470:	bl	418094 <ferror@plt+0x14ac4>
  420474:	mov	x0, x27
  420478:	bl	4032a0 <free@plt>
  42047c:	b	420408 <ferror@plt+0x1ce38>
  420480:	mov	w27, #0x1                   	// #1
  420484:	ldrsb	w0, [x22, #3]
  420488:	tbz	w0, #31, 4203dc <ferror@plt+0x1ce0c>
  42048c:	str	wzr, [x22, #4]
  420490:	cbnz	w27, 4204a4 <ferror@plt+0x1ced4>
  420494:	ldr	x0, [x20]
  420498:	mov	x2, x23
  42049c:	mov	x1, x19
  4204a0:	bl	418094 <ferror@plt+0x14ac4>
  4204a4:	add	w21, w21, #0x1
  4204a8:	b	4202d0 <ferror@plt+0x1cd00>
  4204ac:	ldp	x19, x20, [sp, #16]
  4204b0:	ldp	x21, x22, [sp, #32]
  4204b4:	ldp	x23, x24, [sp, #48]
  4204b8:	ldp	x25, x26, [sp, #64]
  4204bc:	ldp	x27, x28, [sp, #80]
  4204c0:	ldp	x29, x30, [sp], #192
  4204c4:	ret
  4204c8:	stp	x29, x30, [sp, #-32]!
  4204cc:	mov	x29, sp
  4204d0:	stp	x19, x20, [sp, #16]
  4204d4:	mov	x20, x1
  4204d8:	mov	x19, x0
  4204dc:	ldr	x1, [x0]
  4204e0:	cbnz	x1, 4204e8 <ferror@plt+0x1cf18>
  4204e4:	bl	420268 <ferror@plt+0x1cc98>
  4204e8:	ldr	x1, [x19]
  4204ec:	cbnz	x1, 420508 <ferror@plt+0x1cf38>
  4204f0:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4204f4:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4204f8:	add	x2, x2, #0xce0
  4204fc:	add	x0, x0, #0xcc4
  420500:	mov	w1, #0x2b                  	// #43
  420504:	bl	403600 <ferror@plt+0x30>
  420508:	mov	x0, x20
  42050c:	ldp	x19, x20, [sp, #16]
  420510:	ldp	x29, x30, [sp], #32
  420514:	b	4200ec <ferror@plt+0x1cb1c>
  420518:	stp	x29, x30, [sp, #-96]!
  42051c:	mov	x0, x2
  420520:	mov	x29, sp
  420524:	stp	x19, x20, [sp, #16]
  420528:	mov	x20, x2
  42052c:	mov	w19, #0x0                   	// #0
  420530:	stp	x21, x22, [sp, #32]
  420534:	stp	x23, x24, [sp, #48]
  420538:	mov	x23, x3
  42053c:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x2bc10>
  420540:	add	x24, x24, #0x4a0
  420544:	str	x25, [sp, #64]
  420548:	strb	w1, [sp, #80]
  42054c:	mov	w25, #0x28                  	// #40
  420550:	strb	wzr, [sp, #81]
  420554:	bl	402d50 <strlen@plt>
  420558:	mov	x22, x0
  42055c:	bl	41230c <ferror@plt+0xed3c>
  420560:	cmp	x0, w19, uxtw
  420564:	b.ls	4205c8 <ferror@plt+0x1cff8>  // b.plast
  420568:	adrp	x1, 4fc000 <__environ@@GLIBC_2.17+0xaf8>
  42056c:	umull	x0, w19, w25
  420570:	ldr	x1, [x1, #464]
  420574:	ldr	x21, [x1, x0]
  420578:	mov	x0, x21
  42057c:	bl	402d50 <strlen@plt>
  420580:	cmp	x0, x22
  420584:	b.cc	4205c0 <ferror@plt+0x1cff0>  // b.lo, b.ul, b.last
  420588:	mov	x1, x20
  42058c:	mov	x0, x21
  420590:	bl	403430 <strstr@plt>
  420594:	cmp	x21, x0
  420598:	b.ne	4205c0 <ferror@plt+0x1cff0>  // b.any
  42059c:	mov	x2, x21
  4205a0:	mov	x3, #0x0                   	// #0
  4205a4:	add	x1, sp, #0x50
  4205a8:	mov	x0, x24
  4205ac:	bl	45a668 <ferror@plt+0x57098>
  4205b0:	str	x0, [sp, #88]
  4205b4:	add	x1, sp, #0x58
  4205b8:	mov	x0, x23
  4205bc:	bl	410060 <ferror@plt+0xca90>
  4205c0:	add	w19, w19, #0x1
  4205c4:	b	42055c <ferror@plt+0x1cf8c>
  4205c8:	ldp	x19, x20, [sp, #16]
  4205cc:	ldp	x21, x22, [sp, #32]
  4205d0:	ldp	x23, x24, [sp, #48]
  4205d4:	ldr	x25, [sp, #64]
  4205d8:	ldp	x29, x30, [sp], #96
  4205dc:	ret
  4205e0:	cbz	x1, 420730 <ferror@plt+0x1d160>
  4205e4:	stp	x29, x30, [sp, #-96]!
  4205e8:	mov	x29, sp
  4205ec:	stp	x19, x20, [sp, #16]
  4205f0:	mov	x20, x0
  4205f4:	mov	x19, x1
  4205f8:	stp	x21, x22, [sp, #32]
  4205fc:	stp	x23, x24, [sp, #48]
  420600:	str	x25, [sp, #64]
  420604:	ldrb	w0, [x1]
  420608:	cbz	w0, 42066c <ferror@plt+0x1d09c>
  42060c:	mov	x22, x2
  420610:	cmp	w0, #0x2d
  420614:	b.ne	42061c <ferror@plt+0x1d04c>  // b.any
  420618:	add	x19, x1, #0x1
  42061c:	mov	x0, x19
  420620:	bl	402d50 <strlen@plt>
  420624:	mov	x23, x0
  420628:	cmp	x0, #0x5
  42062c:	b.ls	420684 <ferror@plt+0x1d0b4>  // b.plast
  420630:	mov	x0, x19
  420634:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2bc10>
  420638:	add	x1, x1, #0x4a1
  42063c:	bl	403430 <strstr@plt>
  420640:	cmp	x19, x0
  420644:	b.ne	420684 <ferror@plt+0x1d0b4>  // b.any
  420648:	ldrb	w1, [x19, #6]
  42064c:	mov	w0, #0x3d                  	// #61
  420650:	cmp	w1, #0x20
  420654:	ccmp	w1, w0, #0x4, ne  // ne = any
  420658:	b.ne	42066c <ferror@plt+0x1d09c>  // b.any
  42065c:	mov	x3, x22
  420660:	add	x2, x19, #0x7
  420664:	mov	x0, x20
  420668:	bl	420518 <ferror@plt+0x1cf48>
  42066c:	ldp	x19, x20, [sp, #16]
  420670:	ldp	x21, x22, [sp, #32]
  420674:	ldp	x23, x24, [sp, #48]
  420678:	ldr	x25, [sp, #64]
  42067c:	ldp	x29, x30, [sp], #96
  420680:	ret
  420684:	ldr	x0, [x20]
  420688:	cbnz	x0, 4206b8 <ferror@plt+0x1d0e8>
  42068c:	mov	x0, x20
  420690:	mov	x1, x19
  420694:	bl	420268 <ferror@plt+0x1cc98>
  420698:	ldr	x0, [x20]
  42069c:	cbnz	x0, 4206b8 <ferror@plt+0x1d0e8>
  4206a0:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4206a4:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4206a8:	add	x2, x2, #0xcef
  4206ac:	add	x0, x0, #0xcc4
  4206b0:	mov	w1, #0x55                  	// #85
  4206b4:	bl	403600 <ferror@plt+0x30>
  4206b8:	adrp	x24, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4206bc:	add	x24, x24, #0xd0e
  4206c0:	mov	w21, #0x0                   	// #0
  4206c4:	ldr	x0, [x20]
  4206c8:	ldr	x1, [x0]
  4206cc:	cbz	x1, 42066c <ferror@plt+0x1d09c>
  4206d0:	ldr	w0, [x1, #4]
  4206d4:	cmp	w21, w0
  4206d8:	b.cs	42066c <ferror@plt+0x1d09c>  // b.hs, b.nlast
  4206dc:	add	x1, x1, w21, uxtw #3
  4206e0:	ldr	x25, [x1, #8]
  4206e4:	mov	x0, x25
  4206e8:	bl	402d50 <strlen@plt>
  4206ec:	cmp	x0, x23
  4206f0:	b.cc	420728 <ferror@plt+0x1d158>  // b.lo, b.ul, b.last
  4206f4:	mov	x1, x19
  4206f8:	mov	x0, x25
  4206fc:	bl	403430 <strstr@plt>
  420700:	mov	x1, x0
  420704:	cmp	x0, x25
  420708:	b.ne	420728 <ferror@plt+0x1d158>  // b.any
  42070c:	mov	x2, #0x0                   	// #0
  420710:	mov	x0, x24
  420714:	bl	45a668 <ferror@plt+0x57098>
  420718:	str	x0, [sp, #88]
  42071c:	add	x1, sp, #0x58
  420720:	mov	x0, x22
  420724:	bl	410060 <ferror@plt+0xca90>
  420728:	add	w21, w21, #0x1
  42072c:	b	4206c4 <ferror@plt+0x1d0f4>
  420730:	ret
  420734:	stp	x29, x30, [sp, #-48]!
  420738:	mov	x29, sp
  42073c:	str	x19, [sp, #16]
  420740:	mov	w19, #0x0                   	// #0
  420744:	add	x2, sp, #0x28
  420748:	str	xzr, [sp, #40]
  42074c:	bl	4205e0 <ferror@plt+0x1d010>
  420750:	ldr	x0, [sp, #40]
  420754:	cbz	x0, 420778 <ferror@plt+0x1d1a8>
  420758:	ldr	w1, [x0, #4]
  42075c:	cmp	w19, w1
  420760:	b.cs	420778 <ferror@plt+0x1d1a8>  // b.hs, b.nlast
  420764:	add	x0, x0, w19, uxtw #3
  420768:	add	w19, w19, #0x1
  42076c:	ldr	x0, [x0, #8]
  420770:	bl	4031b0 <puts@plt>
  420774:	b	420750 <ferror@plt+0x1d180>
  420778:	add	x0, sp, #0x28
  42077c:	bl	42078c <ferror@plt+0x1d1bc>
  420780:	ldr	x19, [sp, #16]
  420784:	ldp	x29, x30, [sp], #48
  420788:	ret
  42078c:	stp	x29, x30, [sp, #-32]!
  420790:	mov	x29, sp
  420794:	stp	x19, x20, [sp, #16]
  420798:	mov	x20, x0
  42079c:	mov	w19, #0x0                   	// #0
  4207a0:	ldr	x0, [x20]
  4207a4:	cbz	x0, 4207d4 <ferror@plt+0x1d204>
  4207a8:	ldr	w1, [x0, #4]
  4207ac:	cmp	w1, w19
  4207b0:	b.ls	4207c8 <ferror@plt+0x1d1f8>  // b.plast
  4207b4:	add	x1, x0, w19, uxtw #3
  4207b8:	add	w19, w19, #0x1
  4207bc:	ldr	x0, [x1, #8]
  4207c0:	bl	4032a0 <free@plt>
  4207c4:	b	4207a0 <ferror@plt+0x1d1d0>
  4207c8:	ldrsb	w1, [x0, #3]
  4207cc:	tbz	w1, #31, 4207e0 <ferror@plt+0x1d210>
  4207d0:	str	wzr, [x0, #4]
  4207d4:	ldp	x19, x20, [sp, #16]
  4207d8:	ldp	x29, x30, [sp], #32
  4207dc:	ret
  4207e0:	ldp	x19, x20, [sp, #16]
  4207e4:	ldp	x29, x30, [sp], #32
  4207e8:	b	4032a0 <free@plt>
  4207ec:	cmp	w2, #0x0
  4207f0:	b.lt	420850 <ferror@plt+0x1d280>  // b.tstop
  4207f4:	stp	x29, x30, [sp, #-32]!
  4207f8:	mov	x29, sp
  4207fc:	stp	x19, x20, [sp, #16]
  420800:	mov	x19, x1
  420804:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  420808:	ldr	x20, [x1, #1264]
  42080c:	b.ne	420838 <ferror@plt+0x1d268>  // b.any
  420810:	adrp	x3, 485000 <_obstack_memory_used@@Base+0x28c10>
  420814:	add	x3, x3, #0x122
  420818:	mov	x4, x3
  42081c:	mov	x2, x19
  420820:	mov	x0, x20
  420824:	ldp	x19, x20, [sp, #16]
  420828:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42082c:	ldp	x29, x30, [sp], #32
  420830:	add	x1, x1, #0xcff
  420834:	b	403590 <fprintf@plt>
  420838:	mov	w0, w2
  42083c:	bl	45d814 <_obstack_memory_used@@Base+0x1424>
  420840:	adrp	x3, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  420844:	mov	x4, x0
  420848:	add	x3, x3, #0x664
  42084c:	b	42081c <ferror@plt+0x1d24c>
  420850:	ret
  420854:	stp	x29, x30, [sp, #-32]!
  420858:	mov	x29, sp
  42085c:	ldr	w2, [x1, #56]
  420860:	ldr	x1, [x1, #40]
  420864:	str	x19, [sp, #16]
  420868:	mov	x19, x0
  42086c:	bl	424a4c <ferror@plt+0x2147c>
  420870:	ldr	x0, [x19]
  420874:	bl	428c00 <ferror@plt+0x25630>
  420878:	ldr	x0, [x19]
  42087c:	ldr	x19, [sp, #16]
  420880:	ldp	x29, x30, [sp], #32
  420884:	b	428d14 <ferror@plt+0x25744>
  420888:	stp	x29, x30, [sp, #-48]!
  42088c:	mov	x29, sp
  420890:	stp	x19, x20, [sp, #16]
  420894:	mov	x19, x0
  420898:	ldr	w0, [x0, #56]
  42089c:	str	x21, [sp, #32]
  4208a0:	cbz	w0, 4208f0 <ferror@plt+0x1d320>
  4208a4:	ldrb	w0, [x19, #64]
  4208a8:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4208ac:	ldr	x20, [x19]
  4208b0:	cbz	w0, 4208e4 <ferror@plt+0x1d314>
  4208b4:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4208b8:	add	x0, x0, #0xd07
  4208bc:	bl	403580 <gettext@plt>
  4208c0:	mov	x1, x0
  4208c4:	ldr	x2, [x21, #208]
  4208c8:	mov	x0, x20
  4208cc:	bl	42a860 <ferror@plt+0x27290>
  4208d0:	ldr	x0, [x19]
  4208d4:	ldp	x19, x20, [sp, #16]
  4208d8:	ldr	x21, [sp, #32]
  4208dc:	ldp	x29, x30, [sp], #48
  4208e0:	b	4293dc <ferror@plt+0x25e0c>
  4208e4:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4208e8:	add	x0, x0, #0xd30
  4208ec:	b	4208bc <ferror@plt+0x1d2ec>
  4208f0:	ldp	x19, x20, [sp, #16]
  4208f4:	ldr	x21, [sp, #32]
  4208f8:	ldp	x29, x30, [sp], #48
  4208fc:	ret
  420900:	stp	x29, x30, [sp, #-96]!
  420904:	mov	x29, sp
  420908:	stp	x19, x20, [sp, #16]
  42090c:	mov	x20, x0
  420910:	orr	x0, x2, x4
  420914:	stp	x21, x22, [sp, #32]
  420918:	stp	x23, x24, [sp, #48]
  42091c:	stp	x25, x26, [sp, #64]
  420920:	str	x27, [sp, #80]
  420924:	cbnz	x0, 420930 <ferror@plt+0x1d360>
  420928:	mov	w0, #0x0                   	// #0
  42092c:	b	420958 <ferror@plt+0x1d388>
  420930:	ldr	w0, [x20]
  420934:	mov	x23, x1
  420938:	mov	x27, x2
  42093c:	mov	w24, w3
  420940:	mov	x19, x4
  420944:	cbz	w0, 420974 <ferror@plt+0x1d3a4>
  420948:	ldr	w0, [x20]
  42094c:	cmp	w0, #0x13
  420950:	b.le	420994 <ferror@plt+0x1d3c4>
  420954:	mov	w0, #0x1                   	// #1
  420958:	ldp	x19, x20, [sp, #16]
  42095c:	ldp	x21, x22, [sp, #32]
  420960:	ldp	x23, x24, [sp, #48]
  420964:	ldp	x25, x26, [sp, #64]
  420968:	ldr	x27, [sp, #80]
  42096c:	ldp	x29, x30, [sp], #96
  420970:	ret
  420974:	cbz	x2, 420948 <ferror@plt+0x1d378>
  420978:	mov	x0, x2
  42097c:	bl	45b8d0 <ferror@plt+0x58300>
  420980:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420984:	add	x1, x1, #0xef5
  420988:	bl	403220 <strcmp@plt>
  42098c:	cbnz	w0, 420948 <ferror@plt+0x1d378>
  420990:	b	420928 <ferror@plt+0x1d358>
  420994:	add	w0, w0, #0x1
  420998:	str	w0, [x20]
  42099c:	cbz	x19, 420a60 <ferror@plt+0x1d490>
  4209a0:	mov	x0, x19
  4209a4:	mov	w1, #0x400b                	// #16395
  4209a8:	bl	458f54 <ferror@plt+0x55984>
  4209ac:	cmp	x0, #0x0
  4209b0:	adrp	x25, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4209b4:	mov	x20, x0
  4209b8:	csel	x19, x19, x0, eq  // eq = none
  4209bc:	add	x25, x25, #0x1a8
  4209c0:	mov	x21, #0x0                   	// #0
  4209c4:	ldr	x26, [x25, x21, lsl #3]
  4209c8:	mov	x0, x26
  4209cc:	bl	402d50 <strlen@plt>
  4209d0:	mov	x1, x26
  4209d4:	mov	x22, x0
  4209d8:	mov	x2, x0
  4209dc:	mov	x0, x19
  4209e0:	bl	402f80 <strncmp@plt>
  4209e4:	cbnz	w0, 420a08 <ferror@plt+0x1d438>
  4209e8:	ldrb	w0, [x19, x22]
  4209ec:	cbz	w0, 4209f8 <ferror@plt+0x1d428>
  4209f0:	cmp	w0, #0x28
  4209f4:	b.ne	420a08 <ferror@plt+0x1d438>  // b.any
  4209f8:	cbz	x20, 420954 <ferror@plt+0x1d384>
  4209fc:	mov	x0, x20
  420a00:	bl	4032a0 <free@plt>
  420a04:	b	420954 <ferror@plt+0x1d384>
  420a08:	add	x21, x21, #0x1
  420a0c:	cmp	x21, #0x4
  420a10:	b.ne	4209c4 <ferror@plt+0x1d3f4>  // b.any
  420a14:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  420a18:	ldr	x0, [x0, #1264]
  420a1c:	cbnz	x19, 420a28 <ferror@plt+0x1d458>
  420a20:	adrp	x19, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420a24:	add	x19, x19, #0xd5a
  420a28:	cbnz	x27, 420a34 <ferror@plt+0x1d464>
  420a2c:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420a30:	add	x27, x2, #0xd5a
  420a34:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420a38:	mov	w5, w24
  420a3c:	mov	x4, x27
  420a40:	mov	x3, x19
  420a44:	mov	x2, x23
  420a48:	add	x1, x1, #0xd5e
  420a4c:	bl	403590 <fprintf@plt>
  420a50:	cbz	x20, 420928 <ferror@plt+0x1d358>
  420a54:	mov	x0, x20
  420a58:	bl	4032a0 <free@plt>
  420a5c:	b	420928 <ferror@plt+0x1d358>
  420a60:	mov	x20, #0x0                   	// #0
  420a64:	b	420a14 <ferror@plt+0x1d444>
  420a68:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  420a6c:	ldr	x1, [x0, #784]
  420a70:	ldr	w0, [x1, #240]
  420a74:	add	w0, w0, #0x1
  420a78:	str	w0, [x1, #240]
  420a7c:	ret
  420a80:	stp	x29, x30, [sp, #-272]!
  420a84:	mov	x29, sp
  420a88:	stp	x1, x2, [sp, #216]
  420a8c:	add	x1, sp, #0x110
  420a90:	stp	x1, x1, [sp, #48]
  420a94:	add	x1, sp, #0xd0
  420a98:	str	x1, [sp, #64]
  420a9c:	mov	w1, #0xffffffc8            	// #-56
  420aa0:	str	w1, [sp, #72]
  420aa4:	mov	w1, #0xffffff80            	// #-128
  420aa8:	str	w1, [sp, #76]
  420aac:	add	x1, sp, #0x10
  420ab0:	stp	x3, x4, [sp, #232]
  420ab4:	ldp	x2, x3, [sp, #48]
  420ab8:	stp	x2, x3, [sp, #16]
  420abc:	ldp	x2, x3, [sp, #64]
  420ac0:	stp	x2, x3, [sp, #32]
  420ac4:	str	q0, [sp, #80]
  420ac8:	str	q1, [sp, #96]
  420acc:	str	q2, [sp, #112]
  420ad0:	str	q3, [sp, #128]
  420ad4:	str	q4, [sp, #144]
  420ad8:	str	q5, [sp, #160]
  420adc:	str	q6, [sp, #176]
  420ae0:	str	q7, [sp, #192]
  420ae4:	stp	x5, x6, [sp, #248]
  420ae8:	str	x7, [sp, #264]
  420aec:	bl	45d890 <_obstack_memory_used@@Base+0x14a0>
  420af0:	ldp	x29, x30, [sp], #272
  420af4:	ret
  420af8:	stp	x29, x30, [sp, #-64]!
  420afc:	mov	x29, sp
  420b00:	stp	x21, x22, [sp, #32]
  420b04:	ldr	x22, [x0]
  420b08:	stp	x23, x24, [sp, #48]
  420b0c:	mov	x23, x0
  420b10:	mov	w24, w2
  420b14:	stp	x19, x20, [sp, #16]
  420b18:	ldrb	w0, [x22, #67]
  420b1c:	mov	w20, w3
  420b20:	mov	x19, x1
  420b24:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420b28:	add	x1, x1, #0xd76
  420b2c:	bl	423228 <ferror@plt+0x1fc58>
  420b30:	mov	x21, x0
  420b34:	ldrb	w0, [x22, #67]
  420b38:	bl	423544 <ferror@plt+0x1ff74>
  420b3c:	mov	x22, x0
  420b40:	cbnz	x19, 420b4c <ferror@plt+0x1d57c>
  420b44:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  420b48:	ldr	x19, [x0, #208]
  420b4c:	mov	x0, x19
  420b50:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420b54:	add	x1, x1, #0xd7c
  420b58:	bl	403220 <strcmp@plt>
  420b5c:	cmp	w0, #0x0
  420b60:	csel	w3, w0, w24, eq  // eq = none
  420b64:	ldrb	w0, [x23, #121]
  420b68:	cbz	w0, 420be4 <ferror@plt+0x1d614>
  420b6c:	cbz	w3, 420be8 <ferror@plt+0x1d618>
  420b70:	cmp	w20, #0x0
  420b74:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420b78:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420b7c:	add	x0, x0, #0xd6f
  420b80:	add	x2, x2, #0xd72
  420b84:	csel	x2, x2, x0, eq  // eq = none
  420b88:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  420b8c:	add	x0, x0, #0xd0
  420b90:	mov	w4, w20
  420b94:	add	x0, x0, #0x8
  420b98:	mov	x1, #0x20                  	// #32
  420b9c:	bl	402ea0 <snprintf@plt>
  420ba0:	mov	x4, x22
  420ba4:	mov	x2, x19
  420ba8:	mov	x1, x21
  420bac:	adrp	x3, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  420bb0:	ldp	x19, x20, [sp, #16]
  420bb4:	add	x3, x3, #0xd0
  420bb8:	ldp	x21, x22, [sp, #32]
  420bbc:	add	x3, x3, #0x8
  420bc0:	ldp	x23, x24, [sp, #48]
  420bc4:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420bc8:	ldp	x29, x30, [sp], #64
  420bcc:	add	x0, x0, #0xd87
  420bd0:	b	420a80 <ferror@plt+0x1d4b0>
  420bd4:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420bd8:	mov	w20, #0x0                   	// #0
  420bdc:	add	x2, x2, #0xd72
  420be0:	b	420b88 <ferror@plt+0x1d5b8>
  420be4:	cbnz	w3, 420bd4 <ferror@plt+0x1d604>
  420be8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  420bec:	strb	wzr, [x0, #216]
  420bf0:	b	420ba0 <ferror@plt+0x1d5d0>
  420bf4:	stp	x29, x30, [sp, #-32]!
  420bf8:	mov	x29, sp
  420bfc:	ldp	w2, w3, [x1, #8]
  420c00:	stp	x19, x20, [sp, #16]
  420c04:	mov	x19, x0
  420c08:	ldr	x1, [x1]
  420c0c:	bl	420af8 <ferror@plt+0x1d528>
  420c10:	mov	x1, x0
  420c14:	mov	x20, x0
  420c18:	ldr	x0, [x19]
  420c1c:	bl	4292a8 <ferror@plt+0x25cd8>
  420c20:	mov	x0, x20
  420c24:	bl	4032a0 <free@plt>
  420c28:	ldr	x0, [x19]
  420c2c:	ldp	x19, x20, [sp, #16]
  420c30:	ldp	x29, x30, [sp], #32
  420c34:	b	428ea0 <ferror@plt+0x258d0>
  420c38:	stp	x29, x30, [sp, #-48]!
  420c3c:	mov	x29, sp
  420c40:	stp	x19, x20, [sp, #16]
  420c44:	mov	x19, x0
  420c48:	ldr	x0, [x0]
  420c4c:	ldrb	w0, [x0, #67]
  420c50:	str	x21, [sp, #32]
  420c54:	mov	x21, x1
  420c58:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420c5c:	add	x1, x1, #0xd76
  420c60:	bl	423228 <ferror@plt+0x1fc58>
  420c64:	mov	x20, x0
  420c68:	ldr	x0, [x19]
  420c6c:	ldrb	w0, [x0, #67]
  420c70:	bl	423544 <ferror@plt+0x1ff74>
  420c74:	mov	x3, x0
  420c78:	mov	x2, x21
  420c7c:	mov	x1, x20
  420c80:	ldp	x19, x20, [sp, #16]
  420c84:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420c88:	ldr	x21, [sp, #32]
  420c8c:	add	x0, x0, #0xd91
  420c90:	ldp	x29, x30, [sp], #48
  420c94:	b	420a80 <ferror@plt+0x1d4b0>
  420c98:	stp	x29, x30, [sp, #-32]!
  420c9c:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420ca0:	add	x0, x0, #0xd9a
  420ca4:	mov	x29, sp
  420ca8:	bl	4034f0 <getenv@plt>
  420cac:	cbz	x0, 420cbc <ferror@plt+0x1d6ec>
  420cb0:	bl	402ef0 <atoi@plt>
  420cb4:	cmp	w0, #0x0
  420cb8:	b.gt	420ce4 <ferror@plt+0x1d714>
  420cbc:	add	x2, sp, #0x18
  420cc0:	mov	x1, #0x5413                	// #21523
  420cc4:	mov	w0, #0x0                   	// #0
  420cc8:	strh	wzr, [sp, #26]
  420ccc:	bl	4035b0 <ioctl@plt>
  420cd0:	cbnz	w0, 420cec <ferror@plt+0x1d71c>
  420cd4:	ldrh	w0, [sp, #26]
  420cd8:	mov	w1, #0x7fffffff            	// #2147483647
  420cdc:	cmp	w0, #0x0
  420ce0:	csel	w0, w0, w1, ne  // ne = any
  420ce4:	ldp	x29, x30, [sp], #32
  420ce8:	ret
  420cec:	mov	w0, #0x7fffffff            	// #2147483647
  420cf0:	b	420ce4 <ferror@plt+0x1d714>
  420cf4:	stp	x29, x30, [sp, #-32]!
  420cf8:	mov	x29, sp
  420cfc:	str	x19, [sp, #16]
  420d00:	mov	x19, x0
  420d04:	cbz	w1, 420d18 <ferror@plt+0x1d748>
  420d08:	sub	w1, w1, #0x1
  420d0c:	cmp	w1, #0x0
  420d10:	b.gt	420d34 <ferror@plt+0x1d764>
  420d14:	b	420d30 <ferror@plt+0x1d760>
  420d18:	ldr	x0, [x0]
  420d1c:	ldr	x0, [x0, #8]
  420d20:	ldr	x0, [x0, #192]
  420d24:	bl	402fa0 <fileno_unlocked@plt>
  420d28:	bl	4033e0 <isatty@plt>
  420d2c:	cbnz	w0, 420d44 <ferror@plt+0x1d774>
  420d30:	mov	w1, #0x7fffffff            	// #2147483647
  420d34:	str	w1, [x19, #112]
  420d38:	ldr	x19, [sp, #16]
  420d3c:	ldp	x29, x30, [sp], #32
  420d40:	ret
  420d44:	bl	420c98 <ferror@plt+0x1d6c8>
  420d48:	sub	w1, w0, #0x1
  420d4c:	b	420d0c <ferror@plt+0x1d73c>
  420d50:	stp	x29, x30, [sp, #-48]!
  420d54:	mov	x29, sp
  420d58:	stp	x19, x20, [sp, #16]
  420d5c:	mov	x19, x0
  420d60:	mov	w20, w1
  420d64:	str	x21, [sp, #32]
  420d68:	mov	x21, x19
  420d6c:	mov	x0, #0x48                  	// #72
  420d70:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  420d74:	mov	w1, #0x0                   	// #0
  420d78:	str	x0, [x21], #8
  420d7c:	bl	428c2c <ferror@plt+0x2565c>
  420d80:	stp	xzr, xzr, [x19, #8]
  420d84:	sbfiz	x0, x20, #2, #32
  420d88:	stp	xzr, xzr, [x21, #16]
  420d8c:	stp	xzr, xzr, [x21, #32]
  420d90:	str	xzr, [x21, #48]
  420d94:	strb	wzr, [x19, #64]
  420d98:	str	w20, [x19, #68]
  420d9c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  420da0:	str	x0, [x19, #72]
  420da4:	mov	x1, #0x0                   	// #0
  420da8:	cmp	w20, w1
  420dac:	b.le	420dbc <ferror@plt+0x1d7ec>
  420db0:	str	wzr, [x0, x1, lsl #2]
  420db4:	add	x1, x1, #0x1
  420db8:	b	420da8 <ferror@plt+0x1d7d8>
  420dbc:	ldr	x0, [x19]
  420dc0:	strb	wzr, [x19, #108]
  420dc4:	ldr	w1, [x0, #40]
  420dc8:	mov	x0, x19
  420dcc:	bl	420cf4 <ferror@plt+0x1d724>
  420dd0:	strh	wzr, [x19, #128]
  420dd4:	mov	w0, #0x5e5e                	// #24158
  420dd8:	strb	wzr, [x19, #130]
  420ddc:	movk	w0, #0x5e, lsl #16
  420de0:	strh	wzr, [x19, #228]
  420de4:	ldr	x21, [sp, #32]
  420de8:	str	w0, [x19, #116]
  420dec:	adrp	x0, 422000 <ferror@plt+0x1ea30>
  420df0:	add	x0, x0, #0x724
  420df4:	str	x0, [x19, #136]
  420df8:	adrp	x0, 420000 <ferror@plt+0x1ca30>
  420dfc:	add	x0, x0, #0xbf4
  420e00:	str	x0, [x19, #144]
  420e04:	adrp	x0, 420000 <ferror@plt+0x1ca30>
  420e08:	add	x0, x0, #0x854
  420e0c:	str	xzr, [x19, #120]
  420e10:	str	wzr, [x19, #132]
  420e14:	str	x0, [x19, #152]
  420e18:	adrp	x0, 420000 <ferror@plt+0x1ca30>
  420e1c:	add	x0, x0, #0x888
  420e20:	stp	xzr, xzr, [x19, #160]
  420e24:	stp	xzr, xzr, [x19, #176]
  420e28:	str	xzr, [x19, #192]
  420e2c:	str	wzr, [x19, #200]
  420e30:	stp	xzr, xzr, [x19, #208]
  420e34:	str	wzr, [x19, #224]
  420e38:	stp	xzr, xzr, [x19, #232]
  420e3c:	stp	xzr, xzr, [x19, #248]
  420e40:	str	x0, [x19, #264]
  420e44:	ldp	x19, x20, [sp, #16]
  420e48:	ldp	x29, x30, [sp], #48
  420e4c:	ret
  420e50:	stp	x29, x30, [sp, #-32]!
  420e54:	cmp	w1, #0x0
  420e58:	mov	x29, sp
  420e5c:	str	x19, [sp, #16]
  420e60:	ldr	x19, [x0]
  420e64:	mov	w0, #0x2                   	// #2
  420e68:	csel	w0, w1, w0, ge  // ge = tcont
  420e6c:	bl	423560 <ferror@plt+0x1ff90>
  420e70:	strb	w0, [x19, #67]
  420e74:	ldr	x19, [sp, #16]
  420e78:	ldp	x29, x30, [sp], #32
  420e7c:	ret
  420e80:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  420e84:	add	x1, x1, #0x1a8
  420e88:	add	x1, x1, #0x20
  420e8c:	ldr	x0, [x1, w0, sxtw #3]
  420e90:	ret
  420e94:	stp	x29, x30, [sp, #-96]!
  420e98:	mov	x29, sp
  420e9c:	stp	x19, x20, [sp, #16]
  420ea0:	mov	x19, x0
  420ea4:	mov	w20, w1
  420ea8:	ldr	x0, [x0]
  420eac:	stp	x21, x22, [sp, #32]
  420eb0:	stp	x23, x24, [sp, #48]
  420eb4:	ldrb	w1, [x0, #65]
  420eb8:	stp	x25, x26, [sp, #64]
  420ebc:	str	xzr, [sp, #88]
  420ec0:	cbz	w1, 420ed0 <ferror@plt+0x1d900>
  420ec4:	bl	428ea0 <ferror@plt+0x258d0>
  420ec8:	ldr	x0, [x19]
  420ecc:	strb	wzr, [x0, #65]
  420ed0:	cmp	w20, #0x1
  420ed4:	b.ls	42101c <ferror@plt+0x1da4c>  // b.plast
  420ed8:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  420edc:	add	x3, sp, #0x58
  420ee0:	mov	w1, w20
  420ee4:	mov	w2, #0x2                   	// #2
  420ee8:	ldr	x0, [x21, #560]
  420eec:	bl	4403f0 <ferror@plt+0x3ce20>
  420ef0:	ldr	x0, [sp, #88]
  420ef4:	cbz	x0, 42101c <ferror@plt+0x1da4c>
  420ef8:	ldr	x1, [x19, #208]
  420efc:	cmp	x0, x1
  420f00:	b.eq	42101c <ferror@plt+0x1da4c>  // b.none
  420f04:	str	x0, [x19, #208]
  420f08:	ldr	w0, [x0, #20]
  420f0c:	cbz	w0, 42101c <ferror@plt+0x1da4c>
  420f10:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  420f14:	adrp	x22, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420f18:	adrp	x23, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420f1c:	add	x20, x20, #0xd0
  420f20:	add	x22, x22, #0xd72
  420f24:	add	x23, x23, #0xda2
  420f28:	mov	w25, #0x1                   	// #1
  420f2c:	ldr	x0, [x21, #560]
  420f30:	ldr	x1, [sp, #88]
  420f34:	ldr	w24, [x1, #20]
  420f38:	bl	43f6f0 <ferror@plt+0x3c120>
  420f3c:	ldr	w4, [x0]
  420f40:	ldrb	w2, [x0, #6]
  420f44:	sub	w1, w24, w4
  420f48:	ldr	w4, [x0, #16]
  420f4c:	str	x0, [sp, #88]
  420f50:	lsr	w3, w1, w2
  420f54:	add	w3, w3, w4
  420f58:	cbz	w25, 42103c <ferror@plt+0x1da6c>
  420f5c:	ldrb	w4, [x19, #121]
  420f60:	cbz	w4, 42103c <ferror@plt+0x1da6c>
  420f64:	mov	w4, #0x1                   	// #1
  420f68:	ldrb	w0, [x0, #7]
  420f6c:	lsl	w4, w4, w2
  420f70:	sub	w4, w4, #0x1
  420f74:	and	w4, w4, w1
  420f78:	lsr	w4, w4, w0
  420f7c:	cbz	w3, 421034 <ferror@plt+0x1da64>
  420f80:	cmp	w4, #0x0
  420f84:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420f88:	add	x2, x2, #0xd6f
  420f8c:	csel	x2, x22, x2, eq  // eq = none
  420f90:	add	x0, x20, #0x8
  420f94:	mov	x1, #0x20                  	// #32
  420f98:	bl	402ea0 <snprintf@plt>
  420f9c:	eor	w0, w25, #0x1
  420fa0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  420fa4:	add	x1, x1, #0x1a8
  420fa8:	cmp	w25, #0x0
  420fac:	add	x0, x1, x0, lsl #3
  420fb0:	adrp	x24, 485000 <_obstack_memory_used@@Base+0x28c10>
  420fb4:	add	x24, x24, #0x122
  420fb8:	mov	w25, #0x0                   	// #0
  420fbc:	csel	x24, x24, x23, ne  // ne = any
  420fc0:	ldr	x0, [x0, #152]
  420fc4:	ldr	x26, [x19]
  420fc8:	bl	403580 <gettext@plt>
  420fcc:	mov	x3, x0
  420fd0:	ldr	x1, [sp, #88]
  420fd4:	mov	x0, x26
  420fd8:	add	x6, x20, #0x8
  420fdc:	mov	x2, x24
  420fe0:	adrp	x4, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420fe4:	add	x4, x4, #0xd76
  420fe8:	ldr	x5, [x1, #8]
  420fec:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  420ff0:	add	x1, x1, #0xda5
  420ff4:	bl	42a860 <ferror@plt+0x27290>
  420ff8:	ldr	x0, [sp, #88]
  420ffc:	ldr	w0, [x0, #20]
  421000:	cbnz	w0, 420f2c <ferror@plt+0x1d95c>
  421004:	ldr	x0, [x19]
  421008:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  42100c:	add	x1, x1, #0xb37
  421010:	bl	42a860 <ferror@plt+0x27290>
  421014:	ldr	x0, [x19]
  421018:	bl	428ea0 <ferror@plt+0x258d0>
  42101c:	ldp	x19, x20, [sp, #16]
  421020:	ldp	x21, x22, [sp, #32]
  421024:	ldp	x23, x24, [sp, #48]
  421028:	ldp	x25, x26, [sp, #64]
  42102c:	ldp	x29, x30, [sp], #96
  421030:	ret
  421034:	strb	wzr, [x20, #8]
  421038:	b	420f9c <ferror@plt+0x1d9cc>
  42103c:	cbz	w3, 421034 <ferror@plt+0x1da64>
  421040:	mov	x2, x22
  421044:	mov	w4, #0x0                   	// #0
  421048:	b	420f90 <ferror@plt+0x1d9c0>
  42104c:	stp	x29, x30, [sp, #-64]!
  421050:	mov	x29, sp
  421054:	stp	x19, x20, [sp, #16]
  421058:	stp	x21, x22, [sp, #32]
  42105c:	stp	x23, x24, [sp, #48]
  421060:	tbnz	w1, #31, 421154 <ferror@plt+0x1db84>
  421064:	mov	x19, x0
  421068:	ldr	w0, [x0, #68]
  42106c:	mov	w21, w1
  421070:	cmp	w0, w1
  421074:	b.le	421154 <ferror@plt+0x1db84>
  421078:	mov	w24, w2
  42107c:	cmp	w2, #0xd
  421080:	b.gt	421154 <ferror@plt+0x1db84>
  421084:	ldr	x0, [x19, #72]
  421088:	sbfiz	x22, x1, #2, #32
  42108c:	mov	w23, w3
  421090:	ldr	w20, [x0, x22]
  421094:	cbz	w3, 42114c <ferror@plt+0x1db7c>
  421098:	cbnz	w20, 4210c8 <ferror@plt+0x1daf8>
  42109c:	mov	w0, w1
  4210a0:	ldp	x2, x1, [x19, #168]
  4210a4:	blr	x2
  4210a8:	cbz	w0, 42113c <ferror@plt+0x1db6c>
  4210ac:	ldrb	w0, [x19, #64]
  4210b0:	mov	w20, #0x4                   	// #4
  4210b4:	cmp	w0, #0x0
  4210b8:	mov	w0, #0x6                   	// #6
  4210bc:	csel	w20, w20, w0, ne  // ne = any
  4210c0:	ldr	x0, [x19, #72]
  4210c4:	str	w20, [x0, x22]
  4210c8:	ldr	w1, [x19, #88]
  4210cc:	mov	w22, #0xc                   	// #12
  4210d0:	ldr	x0, [x19, #80]
  4210d4:	sub	w1, w1, #0x1
  4210d8:	smull	x22, w1, w22
  4210dc:	mov	x2, x22
  4210e0:	tbnz	w1, #31, 4210fc <ferror@plt+0x1db2c>
  4210e4:	add	x3, x0, x2
  4210e8:	sub	x2, x2, #0xc
  4210ec:	ldr	w4, [x3, #4]
  4210f0:	cmp	w4, w21
  4210f4:	b.ne	421144 <ferror@plt+0x1db74>  // b.any
  4210f8:	ldr	w20, [x3, #8]
  4210fc:	add	x1, x22, #0x18
  421100:	add	x22, x22, #0xc
  421104:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  421108:	add	x1, x0, x22
  42110c:	str	x0, [x19, #80]
  421110:	str	w23, [x0, x22]
  421114:	stp	w21, w24, [x1, #4]
  421118:	ldr	w0, [x19, #88]
  42111c:	add	w0, w0, #0x1
  421120:	str	w0, [x19, #88]
  421124:	mov	w0, w20
  421128:	ldp	x19, x20, [sp, #16]
  42112c:	ldp	x21, x22, [sp, #32]
  421130:	ldp	x23, x24, [sp, #48]
  421134:	ldp	x29, x30, [sp], #64
  421138:	ret
  42113c:	mov	w20, #0x1                   	// #1
  421140:	b	4210c0 <ferror@plt+0x1daf0>
  421144:	sub	w1, w1, #0x1
  421148:	b	4210e0 <ferror@plt+0x1db10>
  42114c:	str	w2, [x0, x22]
  421150:	b	421124 <ferror@plt+0x1db54>
  421154:	mov	w20, #0x0                   	// #0
  421158:	b	421124 <ferror@plt+0x1db54>
  42115c:	stp	x29, x30, [sp, #-32]!
  421160:	mov	x29, sp
  421164:	ldr	w1, [x0, #104]
  421168:	str	x19, [sp, #16]
  42116c:	mov	x19, x0
  421170:	ldr	x0, [x0, #96]
  421174:	add	w1, w1, #0x1
  421178:	sbfiz	x1, x1, #2, #32
  42117c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  421180:	str	x0, [x19, #96]
  421184:	ldr	w1, [x19, #104]
  421188:	add	w2, w1, #0x1
  42118c:	str	w2, [x19, #104]
  421190:	ldr	w2, [x19, #88]
  421194:	str	w2, [x0, w1, sxtw #2]
  421198:	ldr	x19, [sp, #16]
  42119c:	ldp	x29, x30, [sp], #32
  4211a0:	ret
  4211a4:	stp	x29, x30, [sp, #-48]!
  4211a8:	mov	x29, sp
  4211ac:	stp	x21, x22, [sp, #32]
  4211b0:	mov	w22, w1
  4211b4:	ldr	w21, [x0, #104]
  4211b8:	stp	x19, x20, [sp, #16]
  4211bc:	mov	x19, x0
  4211c0:	cbz	w21, 4211d4 <ferror@plt+0x1dc04>
  4211c4:	ldr	x0, [x0, #96]
  4211c8:	sub	w21, w21, #0x1
  4211cc:	str	w21, [x19, #104]
  4211d0:	ldr	w21, [x0, w21, sxtw #2]
  4211d4:	ldr	w20, [x19, #88]
  4211d8:	mov	w1, #0xc                   	// #12
  4211dc:	ldr	x0, [x19, #80]
  4211e0:	add	w20, w20, #0x1
  4211e4:	smull	x20, w20, w1
  4211e8:	mov	x1, x20
  4211ec:	sub	x20, x20, #0xc
  4211f0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4211f4:	add	x1, x0, x20
  4211f8:	str	x0, [x19, #80]
  4211fc:	str	w22, [x0, x20]
  421200:	mov	w0, #0xf                   	// #15
  421204:	stp	w21, w0, [x1, #4]
  421208:	ldp	x21, x22, [sp, #32]
  42120c:	ldr	w0, [x19, #88]
  421210:	add	w0, w0, #0x1
  421214:	str	w0, [x19, #88]
  421218:	ldp	x19, x20, [sp, #16]
  42121c:	ldp	x29, x30, [sp], #48
  421220:	ret
  421224:	mov	x4, x0
  421228:	mov	x2, x0
  42122c:	ldrb	w0, [x2]
  421230:	cmp	w0, #0x2e
  421234:	b.ne	421258 <ferror@plt+0x1dc88>  // b.any
  421238:	ldrb	w0, [x2, #1]
  42123c:	cmp	w0, #0x2e
  421240:	b.ne	421258 <ferror@plt+0x1dc88>  // b.any
  421244:	ldrb	w0, [x2, #2]
  421248:	cmp	w0, #0x2f
  42124c:	b.ne	421258 <ferror@plt+0x1dc88>  // b.any
  421250:	add	x2, x2, #0x3
  421254:	b	42122c <ferror@plt+0x1dc5c>
  421258:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42125c:	add	x1, x1, #0x1a8
  421260:	add	x1, x1, #0xa8
  421264:	ldrb	w0, [x1, #1]
  421268:	cmp	w0, #0x2e
  42126c:	b.ne	42127c <ferror@plt+0x1dcac>  // b.any
  421270:	ldrb	w0, [x1, #2]
  421274:	cmp	w0, #0x2f
  421278:	b.eq	4212a0 <ferror@plt+0x1dcd0>  // b.none
  42127c:	mov	x3, #0x0                   	// #0
  421280:	ldrb	w5, [x2, x3]
  421284:	add	x0, x2, x3
  421288:	ldrb	w6, [x1, x3]
  42128c:	cmp	w5, w6
  421290:	b.ne	4212b0 <ferror@plt+0x1dce0>  // b.any
  421294:	cbz	w5, 4212b0 <ferror@plt+0x1dce0>
  421298:	add	x3, x3, #0x1
  42129c:	b	421280 <ferror@plt+0x1dcb0>
  4212a0:	ldrb	w0, [x1, #3]!
  4212a4:	cmp	w0, #0x2e
  4212a8:	b.eq	421264 <ferror@plt+0x1dc94>  // b.none
  4212ac:	b	42127c <ferror@plt+0x1dcac>
  4212b0:	cmp	x0, x4
  4212b4:	b.ls	4212cc <ferror@plt+0x1dcfc>  // b.plast
  4212b8:	ldurb	w1, [x0, #-1]
  4212bc:	cmp	w1, #0x2f
  4212c0:	b.eq	4212cc <ferror@plt+0x1dcfc>  // b.none
  4212c4:	sub	x0, x0, #0x1
  4212c8:	b	4212b0 <ferror@plt+0x1dce0>
  4212cc:	ret
  4212d0:	stp	x29, x30, [sp, #-304]!
  4212d4:	mov	x29, sp
  4212d8:	str	x19, [sp, #16]
  4212dc:	mov	x19, x0
  4212e0:	add	x0, sp, #0x130
  4212e4:	stp	x0, x0, [sp, #40]
  4212e8:	add	x0, sp, #0xf0
  4212ec:	str	x0, [sp, #56]
  4212f0:	mov	w0, #0xffffffc8            	// #-56
  4212f4:	str	w0, [sp, #64]
  4212f8:	mov	w0, #0xffffff80            	// #-128
  4212fc:	str	w0, [sp, #68]
  421300:	str	q0, [sp, #112]
  421304:	str	q1, [sp, #128]
  421308:	str	q2, [sp, #144]
  42130c:	str	q3, [sp, #160]
  421310:	str	q4, [sp, #176]
  421314:	str	q5, [sp, #192]
  421318:	str	q6, [sp, #208]
  42131c:	str	q7, [sp, #224]
  421320:	stp	x1, x2, [sp, #248]
  421324:	stp	x3, x4, [sp, #264]
  421328:	stp	x5, x6, [sp, #280]
  42132c:	str	x7, [sp, #296]
  421330:	bl	4034e0 <__errno_location@plt>
  421334:	ldr	w0, [x0]
  421338:	str	w0, [sp, #88]
  42133c:	add	x0, sp, #0x28
  421340:	str	x0, [sp, #80]
  421344:	mov	x0, x19
  421348:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42134c:	bl	403580 <gettext@plt>
  421350:	str	x0, [sp, #72]
  421354:	add	x1, sp, #0x48
  421358:	ldr	x0, [x19, #784]
  42135c:	str	xzr, [sp, #96]
  421360:	ldr	x0, [x0]
  421364:	bl	42a828 <ferror@plt+0x27258>
  421368:	ldr	x0, [x19, #784]
  42136c:	ldr	x0, [x0]
  421370:	bl	4293dc <ferror@plt+0x25e0c>
  421374:	ldr	x19, [sp, #16]
  421378:	ldp	x29, x30, [sp], #304
  42137c:	ret
  421380:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421384:	ldr	x0, [x0, #784]
  421388:	ldr	x0, [x0, #24]
  42138c:	cmp	x0, #0x0
  421390:	cset	w0, ne  // ne = any
  421394:	ret
  421398:	stp	x29, x30, [sp, #-272]!
  42139c:	mov	x29, sp
  4213a0:	str	x19, [sp, #16]
  4213a4:	mov	x19, x0
  4213a8:	mov	x0, x1
  4213ac:	add	x1, sp, #0x110
  4213b0:	stp	x1, x1, [sp, #64]
  4213b4:	add	x1, sp, #0xe0
  4213b8:	str	x1, [sp, #80]
  4213bc:	mov	w1, #0xffffffd0            	// #-48
  4213c0:	str	w1, [sp, #88]
  4213c4:	mov	w1, #0xffffff80            	// #-128
  4213c8:	str	w1, [sp, #92]
  4213cc:	str	q0, [sp, #96]
  4213d0:	str	q1, [sp, #112]
  4213d4:	str	q2, [sp, #128]
  4213d8:	str	q3, [sp, #144]
  4213dc:	str	q4, [sp, #160]
  4213e0:	str	q5, [sp, #176]
  4213e4:	str	q6, [sp, #192]
  4213e8:	str	q7, [sp, #208]
  4213ec:	stp	x2, x3, [sp, #224]
  4213f0:	stp	x4, x5, [sp, #240]
  4213f4:	stp	x6, x7, [sp, #256]
  4213f8:	bl	403580 <gettext@plt>
  4213fc:	mov	x1, x0
  421400:	ldp	x2, x3, [sp, #64]
  421404:	stp	x2, x3, [sp, #32]
  421408:	mov	x0, x19
  42140c:	ldp	x2, x3, [sp, #80]
  421410:	stp	x2, x3, [sp, #48]
  421414:	add	x2, sp, #0x20
  421418:	bl	4034c0 <vfprintf@plt>
  42141c:	ldr	x19, [sp, #16]
  421420:	ldp	x29, x30, [sp], #272
  421424:	ret
  421428:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42142c:	ldr	x1, [x0, #784]
  421430:	ldr	w0, [x1, #240]
  421434:	add	w0, w0, #0x1
  421438:	str	w0, [x1, #240]
  42143c:	ret
  421440:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421444:	ldr	x0, [x1, #784]
  421448:	ldr	w2, [x0, #240]
  42144c:	sub	w2, w2, #0x1
  421450:	str	w2, [x0, #240]
  421454:	cbnz	w2, 421494 <ferror@plt+0x1dec4>
  421458:	stp	x29, x30, [sp, #-32]!
  42145c:	mov	x29, sp
  421460:	str	x19, [sp, #16]
  421464:	mov	x19, x1
  421468:	ldr	w1, [x0, #244]
  42146c:	cmp	w1, #0x0
  421470:	b.le	421480 <ferror@plt+0x1deb0>
  421474:	ldr	x1, [x0, #256]
  421478:	cbz	x1, 421480 <ferror@plt+0x1deb0>
  42147c:	blr	x1
  421480:	ldr	x0, [x19, #784]
  421484:	ldr	x19, [sp, #16]
  421488:	str	wzr, [x0, #244]
  42148c:	ldp	x29, x30, [sp], #32
  421490:	ret
  421494:	ret
  421498:	stp	x29, x30, [sp, #-32]!
  42149c:	mov	x29, sp
  4214a0:	ldr	x1, [x0, #264]
  4214a4:	stp	x19, x20, [sp, #16]
  4214a8:	mov	x19, x0
  4214ac:	cbz	x1, 4214b4 <ferror@plt+0x1dee4>
  4214b0:	blr	x1
  4214b4:	bl	42b4f0 <ferror@plt+0x27f20>
  4214b8:	ldr	x0, [x19, #72]
  4214bc:	bl	4032a0 <free@plt>
  4214c0:	ldr	x0, [x19]
  4214c4:	ldr	x1, [x0]
  4214c8:	ldr	x1, [x1]
  4214cc:	str	xzr, [x19, #72]
  4214d0:	blr	x1
  4214d4:	ldr	x0, [x19]
  4214d8:	bl	4032a0 <free@plt>
  4214dc:	str	xzr, [x19]
  4214e0:	ldr	x20, [x19, #232]
  4214e4:	cbz	x20, 421504 <ferror@plt+0x1df34>
  4214e8:	ldr	x1, [x20, #8]
  4214ec:	add	x0, x20, #0x8
  4214f0:	bl	42325c <ferror@plt+0x1fc8c>
  4214f4:	mov	x0, x20
  4214f8:	mov	x1, #0x28                  	// #40
  4214fc:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  421500:	str	xzr, [x19, #232]
  421504:	ldp	x19, x20, [sp, #16]
  421508:	ldp	x29, x30, [sp], #32
  42150c:	ret
  421510:	ldr	w2, [x0, #132]
  421514:	cbz	w2, 421578 <ferror@plt+0x1dfa8>
  421518:	stp	x29, x30, [sp, #-32]!
  42151c:	mov	x29, sp
  421520:	stp	x19, x20, [sp, #16]
  421524:	mov	x19, x0
  421528:	and	w20, w1, #0xff
  42152c:	ldp	w0, w1, [x0, #24]
  421530:	add	w0, w0, w1
  421534:	ldr	w1, [x19, #56]
  421538:	add	w0, w0, w1
  42153c:	cmp	w2, w0
  421540:	b.gt	42156c <ferror@plt+0x1df9c>
  421544:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421548:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42154c:	add	x1, x1, #0xdb3
  421550:	ldr	x0, [x0, #1264]
  421554:	bl	421398 <ferror@plt+0x1ddc8>
  421558:	cbz	w20, 421564 <ferror@plt+0x1df94>
  42155c:	mov	x0, x19
  421560:	bl	421498 <ferror@plt+0x1dec8>
  421564:	mov	w0, #0x1                   	// #1
  421568:	bl	402d80 <exit@plt>
  42156c:	ldp	x19, x20, [sp, #16]
  421570:	ldp	x29, x30, [sp], #32
  421574:	ret
  421578:	ret
  42157c:	stp	x29, x30, [sp, #-48]!
  421580:	sub	w2, w1, #0x2
  421584:	cmp	w2, #0xb
  421588:	mov	x29, sp
  42158c:	stp	x19, x20, [sp, #16]
  421590:	b.hi	4216b4 <ferror@plt+0x1e0e4>  // b.pmore
  421594:	mov	x19, x0
  421598:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42159c:	add	x0, x0, #0x198
  4215a0:	ldrb	w0, [x0, w2, uxtw]
  4215a4:	adr	x2, 4215b0 <ferror@plt+0x1dfe0>
  4215a8:	add	x0, x2, w0, sxtb #2
  4215ac:	br	x0
  4215b0:	ldrb	w0, [x19, #120]
  4215b4:	cbz	w0, 4215bc <ferror@plt+0x1dfec>
  4215b8:	bl	403180 <abort@plt>
  4215bc:	ldrb	w0, [x19, #128]
  4215c0:	cbz	w0, 4216cc <ferror@plt+0x1e0fc>
  4215c4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4215c8:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4215cc:	add	x1, x1, #0xde3
  4215d0:	ldr	x0, [x0, #1264]
  4215d4:	bl	421398 <ferror@plt+0x1ddc8>
  4215d8:	mov	x0, x19
  4215dc:	bl	421498 <ferror@plt+0x1dec8>
  4215e0:	mov	w0, #0x1                   	// #1
  4215e4:	b	421648 <ferror@plt+0x1e078>
  4215e8:	cmp	w1, #0x3
  4215ec:	b.eq	42164c <ferror@plt+0x1e07c>  // b.none
  4215f0:	str	wzr, [sp, #44]
  4215f4:	ldrb	w0, [x19, #120]
  4215f8:	cbnz	w0, 4215b8 <ferror@plt+0x1dfe8>
  4215fc:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421600:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421604:	add	x1, x1, #0xe12
  421608:	ldr	x0, [x19, #1264]
  42160c:	bl	421398 <ferror@plt+0x1ddc8>
  421610:	ldr	w0, [sp, #44]
  421614:	cmp	w0, #0x0
  421618:	b.le	42162c <ferror@plt+0x1e05c>
  42161c:	ldr	x0, [x19, #1264]
  421620:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421624:	add	x1, x1, #0xe5d
  421628:	bl	421398 <ferror@plt+0x1ddc8>
  42162c:	ldr	x0, [x19, #1264]
  421630:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  421634:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421638:	add	x2, x2, #0x27d
  42163c:	add	x1, x1, #0xe99
  421640:	bl	421398 <ferror@plt+0x1ddc8>
  421644:	mov	w0, #0x4                   	// #4
  421648:	bl	402d80 <exit@plt>
  42164c:	adrp	x20, 420000 <ferror@plt+0x1ca30>
  421650:	add	x20, x20, #0x7ec
  421654:	mov	x2, x20
  421658:	mov	x3, #0x0                   	// #0
  42165c:	mov	w1, #0x0                   	// #0
  421660:	mov	x0, #0x0                   	// #0
  421664:	bl	448514 <ferror@plt+0x44f44>
  421668:	str	wzr, [sp, #44]
  42166c:	cbz	x0, 4215f4 <ferror@plt+0x1e024>
  421670:	add	x4, sp, #0x2c
  421674:	mov	x3, x20
  421678:	adrp	x2, 420000 <ferror@plt+0x1ca30>
  42167c:	mov	w1, #0x2                   	// #2
  421680:	add	x2, x2, #0x900
  421684:	bl	448610 <ferror@plt+0x45040>
  421688:	b	4215f4 <ferror@plt+0x1e024>
  42168c:	ldrb	w0, [x19, #120]
  421690:	cbnz	w0, 4215b8 <ferror@plt+0x1dfe8>
  421694:	mov	x0, x19
  421698:	bl	421498 <ferror@plt+0x1dec8>
  42169c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4216a0:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4216a4:	add	x1, x1, #0xeb3
  4216a8:	ldr	x0, [x0, #1264]
  4216ac:	bl	421398 <ferror@plt+0x1ddc8>
  4216b0:	b	4215e0 <ferror@plt+0x1e010>
  4216b4:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4216b8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4216bc:	add	x2, x2, #0xecc
  4216c0:	add	x0, x0, #0xeeb
  4216c4:	mov	w1, #0x231                 	// #561
  4216c8:	bl	403600 <ferror@plt+0x30>
  4216cc:	ldp	x19, x20, [sp, #16]
  4216d0:	ldp	x29, x30, [sp], #48
  4216d4:	ret
  4216d8:	stp	x29, x30, [sp, #-144]!
  4216dc:	mov	x29, sp
  4216e0:	stp	x19, x20, [sp, #16]
  4216e4:	mov	x20, x1
  4216e8:	mov	x19, x0
  4216ec:	mov	w1, #0x0                   	// #0
  4216f0:	mov	x0, x20
  4216f4:	stp	x21, x22, [sp, #32]
  4216f8:	stp	x23, x24, [sp, #48]
  4216fc:	stp	x25, x26, [sp, #64]
  421700:	bl	4289e4 <ferror@plt+0x25414>
  421704:	ldr	w21, [x20, #56]
  421708:	mov	w1, w0
  42170c:	cmp	w21, #0x6
  421710:	b.eq	42171c <ferror@plt+0x1e14c>  // b.none
  421714:	cmp	w21, #0xa
  421718:	b.ne	42177c <ferror@plt+0x1e1ac>  // b.any
  42171c:	ldrb	w0, [x19, #129]
  421720:	cbz	w0, 421740 <ferror@plt+0x1e170>
  421724:	mov	w0, #0x0                   	// #0
  421728:	ldp	x19, x20, [sp, #16]
  42172c:	ldp	x21, x22, [sp, #32]
  421730:	ldp	x23, x24, [sp, #48]
  421734:	ldp	x25, x26, [sp, #64]
  421738:	ldp	x29, x30, [sp], #144
  42173c:	ret
  421740:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  421744:	ldr	x0, [x0, #560]
  421748:	bl	440360 <ferror@plt+0x3cd90>
  42174c:	cbz	w0, 421758 <ferror@plt+0x1e188>
  421750:	ldrb	w0, [x19, #130]
  421754:	cbz	w0, 421724 <ferror@plt+0x1e154>
  421758:	ldr	w0, [x20, #56]
  42175c:	cmp	w0, #0xa
  421760:	b.ne	42177c <ferror@plt+0x1e1ac>  // b.any
  421764:	ldrb	w0, [x19, #122]
  421768:	mov	w21, #0x4                   	// #4
  42176c:	cmp	w0, #0x0
  421770:	mov	w0, #0x6                   	// #6
  421774:	csel	w21, w21, w0, ne  // ne = any
  421778:	str	w21, [x20, #56]
  42177c:	ldr	w1, [x20, #56]
  421780:	cmp	w1, #0x8
  421784:	b.ne	421790 <ferror@plt+0x1e1c0>  // b.any
  421788:	ldrb	w0, [x19, #220]
  42178c:	cbnz	w0, 421724 <ferror@plt+0x1e154>
  421790:	ldr	w0, [x19, #216]
  421794:	cmp	w0, #0x0
  421798:	b.le	4217bc <ferror@plt+0x1e1ec>
  42179c:	cmp	w1, #0x3
  4217a0:	b.eq	4217ac <ferror@plt+0x1e1dc>  // b.none
  4217a4:	cmp	w1, #0xd
  4217a8:	b.ne	421870 <ferror@plt+0x1e2a0>  // b.any
  4217ac:	cmp	w0, #0x1
  4217b0:	b.ne	421870 <ferror@plt+0x1e2a0>  // b.any
  4217b4:	ldr	x0, [x19]
  4217b8:	bl	4293dc <ferror@plt+0x25e0c>
  4217bc:	ldrb	w0, [x19, #64]
  4217c0:	cbz	w0, 4217d8 <ferror@plt+0x1e208>
  4217c4:	ldr	w0, [x20, #56]
  4217c8:	cmp	w0, #0x6
  4217cc:	b.ne	4217d8 <ferror@plt+0x1e208>  // b.any
  4217d0:	mov	w0, #0x4                   	// #4
  4217d4:	str	w0, [x20, #56]
  4217d8:	ldr	w0, [x20, #60]
  4217dc:	cbnz	w0, 4218a4 <ferror@plt+0x1e2d4>
  4217e0:	ldr	w0, [x20, #56]
  4217e4:	cmp	w0, #0x8
  4217e8:	b.eq	4217f8 <ferror@plt+0x1e228>  // b.none
  4217ec:	mov	x0, x19
  4217f0:	mov	w1, #0x0                   	// #0
  4217f4:	bl	421510 <ferror@plt+0x1df40>
  4217f8:	ldr	w0, [x19, #216]
  4217fc:	add	w0, w0, #0x1
  421800:	str	w0, [x19, #216]
  421804:	ldr	w0, [x20, #56]
  421808:	cmp	w0, #0x3
  42180c:	b.eq	421818 <ferror@plt+0x1e248>  // b.none
  421810:	cmp	w0, #0xd
  421814:	b.ne	42197c <ferror@plt+0x1e3ac>  // b.any
  421818:	ldr	w0, [x19, #24]
  42181c:	cmp	w0, #0x0
  421820:	b.gt	421830 <ferror@plt+0x1e260>
  421824:	ldr	w0, [x19, #28]
  421828:	cmp	w0, #0x0
  42182c:	b.le	421968 <ferror@plt+0x1e398>
  421830:	ldrb	w0, [x19, #120]
  421834:	cbnz	w0, 421968 <ferror@plt+0x1e398>
  421838:	mov	w1, #0x0                   	// #0
  42183c:	mov	x0, x20
  421840:	bl	4289e4 <ferror@plt+0x25414>
  421844:	add	x8, sp, #0x70
  421848:	bl	42b590 <ferror@plt+0x27fc0>
  42184c:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421850:	ldr	w3, [sp, #120]
  421854:	ldr	x2, [sp, #112]
  421858:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42185c:	ldr	x0, [x0, #1264]
  421860:	add	x1, x1, #0xf41
  421864:	bl	421398 <ferror@plt+0x1ddc8>
  421868:	mov	w0, #0x4                   	// #4
  42186c:	bl	402d80 <exit@plt>
  421870:	cmp	w0, #0x2
  421874:	b.gt	421880 <ferror@plt+0x1e2b0>
  421878:	ldr	x0, [x19]
  42187c:	bl	4293dc <ferror@plt+0x25e0c>
  421880:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421884:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421888:	add	x1, x1, #0xf02
  42188c:	ldr	x0, [x0, #1264]
  421890:	bl	421398 <ferror@plt+0x1ddc8>
  421894:	mov	x0, x19
  421898:	mov	w1, #0x3                   	// #3
  42189c:	bl	42157c <ferror@plt+0x1dfac>
  4218a0:	bl	403180 <abort@plt>
  4218a4:	ldr	w1, [x19, #124]
  4218a8:	cmp	w0, w1
  4218ac:	b.eq	4217e0 <ferror@plt+0x1e210>  // b.none
  4218b0:	ldp	x2, x1, [x19, #168]
  4218b4:	blr	x2
  4218b8:	cbz	w0, 421724 <ferror@plt+0x1e154>
  4218bc:	ldr	w0, [x19, #88]
  4218c0:	cmp	w0, #0x0
  4218c4:	b.le	421950 <ferror@plt+0x1e380>
  4218c8:	mov	x0, x20
  4218cc:	mov	w1, #0x0                   	// #0
  4218d0:	bl	4289e4 <ferror@plt+0x25414>
  4218d4:	ldr	w22, [x19, #88]
  4218d8:	mov	w23, w0
  4218dc:	mov	w25, #0xc                   	// #12
  4218e0:	sub	w22, w22, #0x1
  4218e4:	adrp	x26, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4218e8:	tbnz	w22, #31, 421950 <ferror@plt+0x1e380>
  4218ec:	smull	x24, w22, w25
  4218f0:	mov	w2, w23
  4218f4:	ldr	x0, [x19, #80]
  4218f8:	ldr	w1, [x0, x24]
  4218fc:	ldr	x0, [x26, #560]
  421900:	bl	440688 <ferror@plt+0x3d0b8>
  421904:	tbnz	w0, #31, 421948 <ferror@plt+0x1e378>
  421908:	ldr	x1, [x19, #80]
  42190c:	add	x1, x1, x24
  421910:	ldp	w0, w2, [x1, #4]
  421914:	cmp	w2, #0xf
  421918:	b.eq	421944 <ferror@plt+0x1e374>  // b.none
  42191c:	cbz	w0, 42192c <ferror@plt+0x1e35c>
  421920:	ldr	w1, [x20, #60]
  421924:	cmp	w1, w0
  421928:	b.ne	421948 <ferror@plt+0x1e378>  // b.any
  42192c:	cbz	w2, 421950 <ferror@plt+0x1e380>
  421930:	str	w2, [x20, #56]
  421934:	ldr	w0, [x20, #56]
  421938:	cmp	w0, #0x1
  42193c:	b.ne	4217e0 <ferror@plt+0x1e210>  // b.any
  421940:	b	421724 <ferror@plt+0x1e154>
  421944:	mov	w22, w0
  421948:	sub	w22, w22, #0x1
  42194c:	b	4218e8 <ferror@plt+0x1e318>
  421950:	ldrsw	x1, [x20, #60]
  421954:	ldr	x0, [x19, #72]
  421958:	ldr	w0, [x0, x1, lsl #2]
  42195c:	cbz	w0, 421934 <ferror@plt+0x1e364>
  421960:	str	w0, [x20, #56]
  421964:	b	421934 <ferror@plt+0x1e364>
  421968:	ldr	x3, [x19, #160]
  42196c:	cbz	x3, 42197c <ferror@plt+0x1e3ac>
  421970:	ldp	x1, x2, [x20]
  421974:	mov	x0, x19
  421978:	blr	x3
  42197c:	ldr	w0, [x20, #56]
  421980:	cmp	w0, #0x4
  421984:	b.ne	421ac4 <ferror@plt+0x1e4f4>  // b.any
  421988:	cmp	w21, #0x6
  42198c:	b.ne	421ac4 <ferror@plt+0x1e4f4>  // b.any
  421990:	ldr	w0, [x19, #56]
  421994:	add	w0, w0, #0x1
  421998:	str	w0, [x19, #56]
  42199c:	ldr	w0, [x19, #244]
  4219a0:	cbnz	w0, 4219b4 <ferror@plt+0x1e3e4>
  4219a4:	ldr	x1, [x19, #248]
  4219a8:	cbz	x1, 4219b4 <ferror@plt+0x1e3e4>
  4219ac:	mov	x0, x19
  4219b0:	blr	x1
  4219b4:	ldr	w0, [x19, #244]
  4219b8:	mov	x1, x20
  4219bc:	add	w0, w0, #0x1
  4219c0:	str	w0, [x19, #244]
  4219c4:	add	x0, x20, #0x30
  4219c8:	str	x0, [x20, #24]
  4219cc:	str	xzr, [x20, #48]
  4219d0:	ldr	x0, [x19]
  4219d4:	bl	4294ec <ferror@plt+0x25f1c>
  4219d8:	ldr	x2, [x19, #136]
  4219dc:	mov	x1, x20
  4219e0:	mov	x0, x19
  4219e4:	blr	x2
  4219e8:	ldr	x0, [x19]
  4219ec:	bl	4292dc <ferror@plt+0x25d0c>
  4219f0:	ldrb	w0, [x19, #119]
  4219f4:	cbz	w0, 421a84 <ferror@plt+0x1e4b4>
  4219f8:	ldp	w3, w1, [x20, #56]
  4219fc:	mov	w2, w21
  421a00:	ldr	x4, [x19, #184]
  421a04:	mov	x0, x19
  421a08:	blr	x4
  421a0c:	mov	x23, x0
  421a10:	cbz	x0, 421a84 <ferror@plt+0x1e4b4>
  421a14:	ldr	x22, [x19]
  421a18:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421a1c:	add	x1, x1, #0xf71
  421a20:	mov	x0, x22
  421a24:	bl	4292a8 <ferror@plt+0x25cd8>
  421a28:	ldrsw	x1, [x20, #56]
  421a2c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  421a30:	add	x0, x0, #0x1a8
  421a34:	add	x0, x0, #0x20
  421a38:	ldr	x1, [x0, x1, lsl #3]
  421a3c:	ldrb	w0, [x22, #67]
  421a40:	bl	423228 <ferror@plt+0x1fc58>
  421a44:	mov	x1, x0
  421a48:	mov	x0, x22
  421a4c:	bl	4292a8 <ferror@plt+0x25cd8>
  421a50:	mov	x1, x23
  421a54:	mov	x0, x22
  421a58:	bl	4292a8 <ferror@plt+0x25cd8>
  421a5c:	ldrb	w0, [x22, #67]
  421a60:	bl	423544 <ferror@plt+0x1ff74>
  421a64:	mov	x1, x0
  421a68:	mov	x0, x22
  421a6c:	bl	4292a8 <ferror@plt+0x25cd8>
  421a70:	mov	w1, #0x5d                  	// #93
  421a74:	mov	x0, x22
  421a78:	bl	428efc <ferror@plt+0x2592c>
  421a7c:	mov	x0, x23
  421a80:	bl	4032a0 <free@plt>
  421a84:	ldr	x3, [x19, #152]
  421a88:	mov	x0, x19
  421a8c:	mov	w2, w21
  421a90:	mov	x1, x20
  421a94:	blr	x3
  421a98:	ldrb	w0, [x19, #229]
  421a9c:	cbz	w0, 421ba0 <ferror@plt+0x1e5d0>
  421aa0:	ldr	x22, [x19]
  421aa4:	ldr	x25, [x20, #40]
  421aa8:	cbnz	x22, 421ad8 <ferror@plt+0x1e508>
  421aac:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421ab0:	add	x2, x2, #0xf74
  421ab4:	mov	w1, #0x322                 	// #802
  421ab8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421abc:	add	x0, x0, #0xeeb
  421ac0:	bl	403600 <ferror@plt+0x30>
  421ac4:	add	x0, x19, w0, sxtw #2
  421ac8:	ldr	w1, [x0, #8]
  421acc:	add	w1, w1, #0x1
  421ad0:	str	w1, [x0, #8]
  421ad4:	b	42199c <ferror@plt+0x1e3cc>
  421ad8:	mov	w21, #0x0                   	// #0
  421adc:	cbz	x25, 421b74 <ferror@plt+0x1e5a4>
  421ae0:	adrp	x24, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421ae4:	add	x26, x25, #0x78
  421ae8:	add	x24, x24, #0xf8b
  421aec:	ldr	w0, [x25, #120]
  421af0:	cmp	w0, w21
  421af4:	b.ls	421b98 <ferror@plt+0x1e5c8>  // b.plast
  421af8:	sxtw	x0, w21
  421afc:	cmp	w21, #0x1
  421b00:	b.gt	421b84 <ferror@plt+0x1e5b4>
  421b04:	add	x0, x0, #0x1
  421b08:	add	x0, x26, x0, lsl #3
  421b0c:	ldr	x23, [x0]
  421b10:	add	x8, sp, #0x50
  421b14:	add	w21, w21, #0x1
  421b18:	ldr	w0, [x23]
  421b1c:	bl	42b590 <ferror@plt+0x27fc0>
  421b20:	mov	x1, x24
  421b24:	mov	x0, x22
  421b28:	bl	4292a8 <ferror@plt+0x25cd8>
  421b2c:	ldr	x1, [sp, #80]
  421b30:	mov	x0, x22
  421b34:	bl	422894 <ferror@plt+0x1f2c4>
  421b38:	ldr	w0, [x23, #4]
  421b3c:	add	x8, sp, #0x70
  421b40:	bl	42b590 <ferror@plt+0x27fc0>
  421b44:	ldp	w2, w3, [sp, #88]
  421b48:	mov	x0, x22
  421b4c:	ldp	w4, w5, [sp, #120]
  421b50:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421b54:	add	x1, x1, #0xf93
  421b58:	bl	42a8f0 <ferror@plt+0x27320>
  421b5c:	ldr	x1, [x23, #8]
  421b60:	mov	x0, x22
  421b64:	bl	422894 <ferror@plt+0x1f2c4>
  421b68:	mov	x0, x22
  421b6c:	bl	428ea0 <ferror@plt+0x258d0>
  421b70:	b	421aec <ferror@plt+0x1e51c>
  421b74:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  421b78:	mov	w1, #0x323                 	// #803
  421b7c:	add	x2, x2, #0xf74
  421b80:	b	421ab8 <ferror@plt+0x1e4e8>
  421b84:	mov	x0, #0xfffffffffffffff0    	// #-16
  421b88:	add	x1, x0, w21, sxtw #3
  421b8c:	ldr	x0, [x26, #32]
  421b90:	add	x0, x0, x1
  421b94:	b	421b0c <ferror@plt+0x1e53c>
  421b98:	ldr	x0, [x19]
  421b9c:	bl	428d14 <ferror@plt+0x25744>
  421ba0:	ldr	w1, [x20, #56]
  421ba4:	mov	x0, x19
  421ba8:	bl	42157c <ferror@plt+0x1dfac>
  421bac:	str	xzr, [x20, #48]
  421bb0:	ldr	x0, [x19, #232]
  421bb4:	cbz	x0, 421bc8 <ferror@plt+0x1e5f8>
  421bb8:	ldr	x1, [x20, #40]
  421bbc:	ldrb	w2, [x1, #161]
  421bc0:	cbnz	w2, 421bc8 <ferror@plt+0x1e5f8>
  421bc4:	bl	427f34 <ferror@plt+0x24964>
  421bc8:	ldr	w0, [x19, #216]
  421bcc:	sub	w0, w0, #0x1
  421bd0:	str	w0, [x19, #216]
  421bd4:	mov	w0, #0x1                   	// #1
  421bd8:	b	421728 <ferror@plt+0x1e158>
  421bdc:	stp	x29, x30, [sp, #-112]!
  421be0:	cmp	w4, #0xb
  421be4:	mov	x29, sp
  421be8:	stp	x19, x20, [sp, #16]
  421bec:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  421bf0:	str	x21, [sp, #32]
  421bf4:	mov	w21, w1
  421bf8:	mov	x1, x2
  421bfc:	mov	x2, x3
  421c00:	b.ne	421c50 <ferror@plt+0x1e680>  // b.any
  421c04:	ldr	x3, [x20, #784]
  421c08:	mov	w4, #0x6                   	// #6
  421c0c:	ldrb	w3, [x3, #123]
  421c10:	cmp	w3, #0x0
  421c14:	mov	w3, #0x4                   	// #4
  421c18:	csel	w4, w4, w3, ne  // ne = any
  421c1c:	mov	x3, x0
  421c20:	add	x0, sp, #0x30
  421c24:	bl	4225c4 <ferror@plt+0x1eff4>
  421c28:	ldr	x0, [x20, #784]
  421c2c:	ldr	w0, [x0, #124]
  421c30:	str	w0, [sp, #108]
  421c34:	ldr	x0, [x20, #784]
  421c38:	add	x1, sp, #0x30
  421c3c:	bl	4216d8 <ferror@plt+0x1e108>
  421c40:	ldp	x19, x20, [sp, #16]
  421c44:	ldr	x21, [sp, #32]
  421c48:	ldp	x29, x30, [sp], #112
  421c4c:	ret
  421c50:	mov	w19, w4
  421c54:	mov	x3, x0
  421c58:	add	x0, sp, #0x30
  421c5c:	bl	4225c4 <ferror@plt+0x1eff4>
  421c60:	cmp	w19, #0x6
  421c64:	ccmp	w19, #0xa, #0x4, ne  // ne = any
  421c68:	b.ne	421c34 <ferror@plt+0x1e664>  // b.any
  421c6c:	str	w21, [sp, #108]
  421c70:	b	421c34 <ferror@plt+0x1e664>
  421c74:	stp	x29, x30, [sp, #-416]!
  421c78:	mov	w8, w1
  421c7c:	mov	x29, sp
  421c80:	stp	x19, x20, [sp, #16]
  421c84:	mov	w19, w2
  421c88:	mov	x20, x3
  421c8c:	str	x21, [sp, #32]
  421c90:	mov	w21, w0
  421c94:	str	q0, [sp, #256]
  421c98:	str	q1, [sp, #272]
  421c9c:	str	q2, [sp, #288]
  421ca0:	str	q3, [sp, #304]
  421ca4:	str	q4, [sp, #320]
  421ca8:	str	q5, [sp, #336]
  421cac:	str	q6, [sp, #352]
  421cb0:	str	q7, [sp, #368]
  421cb4:	stp	x4, x5, [sp, #384]
  421cb8:	stp	x6, x7, [sp, #400]
  421cbc:	bl	420a68 <ferror@plt+0x1d498>
  421cc0:	add	x0, sp, #0x1a0
  421cc4:	stp	x0, x0, [sp, #56]
  421cc8:	add	x0, sp, #0x180
  421ccc:	mov	w2, w8
  421cd0:	str	x0, [sp, #72]
  421cd4:	mov	w0, #0xffffffe0            	// #-32
  421cd8:	str	w0, [sp, #80]
  421cdc:	mov	w0, #0xffffff80            	// #-128
  421ce0:	str	w0, [sp, #84]
  421ce4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  421ce8:	mov	x3, #0x0                   	// #0
  421cec:	ldr	x1, [x0, #560]
  421cf0:	add	x0, sp, #0x58
  421cf4:	bl	441318 <ferror@plt+0x3dd48>
  421cf8:	mov	w4, w21
  421cfc:	add	x3, sp, #0x38
  421d00:	mov	x2, x20
  421d04:	mov	w1, w19
  421d08:	add	x0, sp, #0x58
  421d0c:	bl	421bdc <ferror@plt+0x1e60c>
  421d10:	mov	w19, w0
  421d14:	add	x0, sp, #0x58
  421d18:	bl	4410ac <ferror@plt+0x3dadc>
  421d1c:	add	x0, sp, #0x30
  421d20:	bl	421440 <ferror@plt+0x1de70>
  421d24:	mov	w0, w19
  421d28:	ldp	x19, x20, [sp, #16]
  421d2c:	ldr	x21, [sp, #32]
  421d30:	ldp	x29, x30, [sp], #416
  421d34:	ret
  421d38:	stp	x29, x30, [sp, #-240]!
  421d3c:	mov	w10, w0
  421d40:	mov	x8, x1
  421d44:	mov	w9, w2
  421d48:	mov	x2, x3
  421d4c:	mov	x29, sp
  421d50:	str	x19, [sp, #16]
  421d54:	str	q0, [sp, #80]
  421d58:	str	q1, [sp, #96]
  421d5c:	str	q2, [sp, #112]
  421d60:	str	q3, [sp, #128]
  421d64:	str	q4, [sp, #144]
  421d68:	str	q5, [sp, #160]
  421d6c:	str	q6, [sp, #176]
  421d70:	str	q7, [sp, #192]
  421d74:	stp	x4, x5, [sp, #208]
  421d78:	stp	x6, x7, [sp, #224]
  421d7c:	bl	420a68 <ferror@plt+0x1d498>
  421d80:	add	x0, sp, #0xf0
  421d84:	stp	x0, x0, [sp, #48]
  421d88:	add	x0, sp, #0xd0
  421d8c:	add	x3, sp, #0x30
  421d90:	mov	w4, w10
  421d94:	mov	w1, w9
  421d98:	str	x0, [sp, #64]
  421d9c:	mov	w0, #0xffffffe0            	// #-32
  421da0:	str	w0, [sp, #72]
  421da4:	mov	w0, #0xffffff80            	// #-128
  421da8:	str	w0, [sp, #76]
  421dac:	mov	x0, x8
  421db0:	bl	421bdc <ferror@plt+0x1e60c>
  421db4:	mov	w19, w0
  421db8:	add	x0, sp, #0x28
  421dbc:	bl	421440 <ferror@plt+0x1de70>
  421dc0:	mov	w0, w19
  421dc4:	ldr	x19, [sp, #16]
  421dc8:	ldp	x29, x30, [sp], #240
  421dcc:	ret
  421dd0:	stp	x29, x30, [sp, #-224]!
  421dd4:	mov	x29, sp
  421dd8:	stp	x21, x22, [sp, #32]
  421ddc:	mov	w22, w0
  421de0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  421de4:	stp	x19, x20, [sp, #16]
  421de8:	mov	w19, w2
  421dec:	mov	w2, w1
  421df0:	ldr	x1, [x0, #560]
  421df4:	mov	x21, x4
  421df8:	mov	x20, x3
  421dfc:	add	x0, sp, #0x38
  421e00:	mov	x3, #0x0                   	// #0
  421e04:	bl	441318 <ferror@plt+0x3dd48>
  421e08:	mov	w4, w22
  421e0c:	mov	x3, x21
  421e10:	mov	x2, x20
  421e14:	mov	w1, w19
  421e18:	add	x0, sp, #0x38
  421e1c:	bl	421bdc <ferror@plt+0x1e60c>
  421e20:	mov	w19, w0
  421e24:	add	x0, sp, #0x38
  421e28:	bl	4410ac <ferror@plt+0x3dadc>
  421e2c:	mov	w0, w19
  421e30:	ldp	x19, x20, [sp, #16]
  421e34:	ldp	x21, x22, [sp, #32]
  421e38:	ldp	x29, x30, [sp], #224
  421e3c:	ret
  421e40:	stp	x29, x30, [sp, #-416]!
  421e44:	mov	w8, w0
  421e48:	mov	x29, sp
  421e4c:	str	x19, [sp, #16]
  421e50:	mov	x19, x1
  421e54:	str	q0, [sp, #240]
  421e58:	str	q1, [sp, #256]
  421e5c:	str	q2, [sp, #272]
  421e60:	str	q3, [sp, #288]
  421e64:	str	q4, [sp, #304]
  421e68:	str	q5, [sp, #320]
  421e6c:	str	q6, [sp, #336]
  421e70:	str	q7, [sp, #352]
  421e74:	stp	x2, x3, [sp, #368]
  421e78:	stp	x4, x5, [sp, #384]
  421e7c:	stp	x6, x7, [sp, #400]
  421e80:	bl	420a68 <ferror@plt+0x1d498>
  421e84:	add	x0, sp, #0x1a0
  421e88:	stp	x0, x0, [sp, #40]
  421e8c:	add	x0, sp, #0x170
  421e90:	mov	w2, w8
  421e94:	str	x0, [sp, #56]
  421e98:	mov	w0, #0xffffffd0            	// #-48
  421e9c:	str	w0, [sp, #64]
  421ea0:	mov	w0, #0xffffff80            	// #-128
  421ea4:	str	w0, [sp, #68]
  421ea8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  421eac:	mov	x3, #0x0                   	// #0
  421eb0:	ldr	x1, [x0, #560]
  421eb4:	add	x0, sp, #0x48
  421eb8:	bl	441318 <ferror@plt+0x3dd48>
  421ebc:	add	x3, sp, #0x28
  421ec0:	mov	x2, x19
  421ec4:	mov	w4, #0x8                   	// #8
  421ec8:	mov	w1, #0xffffffff            	// #-1
  421ecc:	add	x0, sp, #0x48
  421ed0:	bl	421bdc <ferror@plt+0x1e60c>
  421ed4:	add	x0, sp, #0x48
  421ed8:	bl	4410ac <ferror@plt+0x3dadc>
  421edc:	add	x0, sp, #0x20
  421ee0:	bl	421440 <ferror@plt+0x1de70>
  421ee4:	ldr	x19, [sp, #16]
  421ee8:	ldp	x29, x30, [sp], #416
  421eec:	ret
  421ef0:	stp	x29, x30, [sp, #-416]!
  421ef4:	mov	x29, sp
  421ef8:	stp	x19, x20, [sp, #16]
  421efc:	mov	w19, w0
  421f00:	mov	x20, x1
  421f04:	str	q0, [sp, #240]
  421f08:	str	q1, [sp, #256]
  421f0c:	str	q2, [sp, #272]
  421f10:	str	q3, [sp, #288]
  421f14:	str	q4, [sp, #304]
  421f18:	str	q5, [sp, #320]
  421f1c:	str	q6, [sp, #336]
  421f20:	str	q7, [sp, #352]
  421f24:	stp	x2, x3, [sp, #368]
  421f28:	stp	x4, x5, [sp, #384]
  421f2c:	stp	x6, x7, [sp, #400]
  421f30:	bl	420a68 <ferror@plt+0x1d498>
  421f34:	add	x0, sp, #0x1a0
  421f38:	stp	x0, x0, [sp, #40]
  421f3c:	add	x0, sp, #0x170
  421f40:	mov	x3, #0x0                   	// #0
  421f44:	str	x0, [sp, #56]
  421f48:	mov	w0, #0xffffffd0            	// #-48
  421f4c:	str	w0, [sp, #64]
  421f50:	mov	w0, #0xffffff80            	// #-128
  421f54:	str	w0, [sp, #68]
  421f58:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  421f5c:	ldr	w2, [x0, #584]
  421f60:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  421f64:	ldr	x1, [x0, #560]
  421f68:	add	x0, sp, #0x48
  421f6c:	bl	441318 <ferror@plt+0x3dd48>
  421f70:	add	x3, sp, #0x28
  421f74:	mov	x2, x20
  421f78:	mov	w1, w19
  421f7c:	mov	w4, #0x6                   	// #6
  421f80:	add	x0, sp, #0x48
  421f84:	bl	421bdc <ferror@plt+0x1e60c>
  421f88:	mov	w19, w0
  421f8c:	add	x0, sp, #0x48
  421f90:	bl	4410ac <ferror@plt+0x3dadc>
  421f94:	add	x0, sp, #0x20
  421f98:	bl	421440 <ferror@plt+0x1de70>
  421f9c:	mov	w0, w19
  421fa0:	ldp	x19, x20, [sp, #16]
  421fa4:	ldp	x29, x30, [sp], #416
  421fa8:	ret
  421fac:	stp	x29, x30, [sp, #-416]!
  421fb0:	mov	w8, w0
  421fb4:	mov	x29, sp
  421fb8:	stp	x19, x20, [sp, #16]
  421fbc:	mov	w19, w1
  421fc0:	mov	x20, x2
  421fc4:	str	q0, [sp, #240]
  421fc8:	str	q1, [sp, #256]
  421fcc:	str	q2, [sp, #272]
  421fd0:	str	q3, [sp, #288]
  421fd4:	str	q4, [sp, #304]
  421fd8:	str	q5, [sp, #320]
  421fdc:	str	q6, [sp, #336]
  421fe0:	str	q7, [sp, #352]
  421fe4:	stp	x3, x4, [sp, #376]
  421fe8:	stp	x5, x6, [sp, #392]
  421fec:	str	x7, [sp, #408]
  421ff0:	bl	420a68 <ferror@plt+0x1d498>
  421ff4:	add	x0, sp, #0x1a0
  421ff8:	stp	x0, x0, [sp, #40]
  421ffc:	add	x0, sp, #0x170
  422000:	str	x0, [sp, #56]
  422004:	mov	w0, #0xffffffd8            	// #-40
  422008:	str	w0, [sp, #64]
  42200c:	mov	w0, #0xffffff80            	// #-128
  422010:	str	w0, [sp, #68]
  422014:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422018:	mov	w2, w8
  42201c:	mov	x3, #0x0                   	// #0
  422020:	ldr	x1, [x0, #560]
  422024:	add	x0, sp, #0x48
  422028:	bl	441318 <ferror@plt+0x3dd48>
  42202c:	add	x3, sp, #0x28
  422030:	mov	x2, x20
  422034:	mov	w1, w19
  422038:	mov	w4, #0x6                   	// #6
  42203c:	add	x0, sp, #0x48
  422040:	bl	421bdc <ferror@plt+0x1e60c>
  422044:	mov	w19, w0
  422048:	add	x0, sp, #0x48
  42204c:	bl	4410ac <ferror@plt+0x3dadc>
  422050:	add	x0, sp, #0x20
  422054:	bl	421440 <ferror@plt+0x1de70>
  422058:	mov	w0, w19
  42205c:	ldp	x19, x20, [sp, #16]
  422060:	ldp	x29, x30, [sp], #416
  422064:	ret
  422068:	stp	x29, x30, [sp, #-416]!
  42206c:	mov	w8, w0
  422070:	mov	x29, sp
  422074:	stp	x19, x20, [sp, #16]
  422078:	mov	w19, w1
  42207c:	mov	x20, x2
  422080:	str	q0, [sp, #240]
  422084:	str	q1, [sp, #256]
  422088:	str	q2, [sp, #272]
  42208c:	str	q3, [sp, #288]
  422090:	str	q4, [sp, #304]
  422094:	str	q5, [sp, #320]
  422098:	str	q6, [sp, #336]
  42209c:	str	q7, [sp, #352]
  4220a0:	stp	x3, x4, [sp, #376]
  4220a4:	stp	x5, x6, [sp, #392]
  4220a8:	str	x7, [sp, #408]
  4220ac:	bl	420a68 <ferror@plt+0x1d498>
  4220b0:	add	x0, sp, #0x1a0
  4220b4:	stp	x0, x0, [sp, #40]
  4220b8:	add	x0, sp, #0x170
  4220bc:	str	x0, [sp, #56]
  4220c0:	mov	w0, #0xffffffd8            	// #-40
  4220c4:	str	w0, [sp, #64]
  4220c8:	mov	w0, #0xffffff80            	// #-128
  4220cc:	str	w0, [sp, #68]
  4220d0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4220d4:	mov	w2, w8
  4220d8:	mov	x3, #0x0                   	// #0
  4220dc:	ldr	x1, [x0, #560]
  4220e0:	add	x0, sp, #0x48
  4220e4:	bl	441318 <ferror@plt+0x3dd48>
  4220e8:	add	x3, sp, #0x28
  4220ec:	mov	x2, x20
  4220f0:	mov	w1, w19
  4220f4:	mov	w4, #0xa                   	// #10
  4220f8:	add	x0, sp, #0x48
  4220fc:	bl	421bdc <ferror@plt+0x1e60c>
  422100:	mov	w19, w0
  422104:	add	x0, sp, #0x48
  422108:	bl	4410ac <ferror@plt+0x3dadc>
  42210c:	add	x0, sp, #0x20
  422110:	bl	421440 <ferror@plt+0x1de70>
  422114:	mov	w0, w19
  422118:	ldp	x19, x20, [sp, #16]
  42211c:	ldp	x29, x30, [sp], #416
  422120:	ret
  422124:	stp	x29, x30, [sp, #-416]!
  422128:	mov	w8, w0
  42212c:	mov	x29, sp
  422130:	str	x19, [sp, #16]
  422134:	mov	x19, x1
  422138:	str	q0, [sp, #240]
  42213c:	str	q1, [sp, #256]
  422140:	str	q2, [sp, #272]
  422144:	str	q3, [sp, #288]
  422148:	str	q4, [sp, #304]
  42214c:	str	q5, [sp, #320]
  422150:	str	q6, [sp, #336]
  422154:	str	q7, [sp, #352]
  422158:	stp	x2, x3, [sp, #368]
  42215c:	stp	x4, x5, [sp, #384]
  422160:	stp	x6, x7, [sp, #400]
  422164:	bl	420a68 <ferror@plt+0x1d498>
  422168:	add	x0, sp, #0x1a0
  42216c:	stp	x0, x0, [sp, #40]
  422170:	add	x0, sp, #0x170
  422174:	mov	w2, w8
  422178:	str	x0, [sp, #56]
  42217c:	mov	w0, #0xffffffd0            	// #-48
  422180:	str	w0, [sp, #64]
  422184:	mov	w0, #0xffffff80            	// #-128
  422188:	str	w0, [sp, #68]
  42218c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422190:	mov	x3, #0x0                   	// #0
  422194:	ldr	x1, [x0, #560]
  422198:	add	x0, sp, #0x48
  42219c:	bl	441318 <ferror@plt+0x3dd48>
  4221a0:	add	x3, sp, #0x28
  4221a4:	mov	x2, x19
  4221a8:	mov	w4, #0xb                   	// #11
  4221ac:	mov	w1, #0xffffffff            	// #-1
  4221b0:	add	x0, sp, #0x48
  4221b4:	bl	421bdc <ferror@plt+0x1e60c>
  4221b8:	mov	w19, w0
  4221bc:	add	x0, sp, #0x48
  4221c0:	bl	4410ac <ferror@plt+0x3dadc>
  4221c4:	add	x0, sp, #0x20
  4221c8:	bl	421440 <ferror@plt+0x1de70>
  4221cc:	mov	w0, w19
  4221d0:	ldr	x19, [sp, #16]
  4221d4:	ldp	x29, x30, [sp], #416
  4221d8:	ret
  4221dc:	stp	x29, x30, [sp, #-432]!
  4221e0:	mov	x29, sp
  4221e4:	str	x19, [sp, #16]
  4221e8:	mov	x19, x0
  4221ec:	str	q0, [sp, #240]
  4221f0:	str	q1, [sp, #256]
  4221f4:	str	q2, [sp, #272]
  4221f8:	str	q3, [sp, #288]
  4221fc:	str	q4, [sp, #304]
  422200:	str	q5, [sp, #320]
  422204:	str	q6, [sp, #336]
  422208:	str	q7, [sp, #352]
  42220c:	stp	x1, x2, [sp, #376]
  422210:	stp	x3, x4, [sp, #392]
  422214:	stp	x5, x6, [sp, #408]
  422218:	str	x7, [sp, #424]
  42221c:	bl	420a68 <ferror@plt+0x1d498>
  422220:	add	x0, sp, #0x1b0
  422224:	stp	x0, x0, [sp, #40]
  422228:	add	x0, sp, #0x170
  42222c:	str	x0, [sp, #56]
  422230:	mov	w0, #0xffffffc8            	// #-56
  422234:	str	w0, [sp, #64]
  422238:	mov	w0, #0xffffff80            	// #-128
  42223c:	str	w0, [sp, #68]
  422240:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422244:	mov	x3, #0x0                   	// #0
  422248:	ldr	w2, [x0, #584]
  42224c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422250:	ldr	x1, [x0, #560]
  422254:	add	x0, sp, #0x48
  422258:	bl	441318 <ferror@plt+0x3dd48>
  42225c:	add	x3, sp, #0x28
  422260:	mov	x2, x19
  422264:	mov	w4, #0x4                   	// #4
  422268:	mov	w1, #0xffffffff            	// #-1
  42226c:	add	x0, sp, #0x48
  422270:	bl	421bdc <ferror@plt+0x1e60c>
  422274:	add	x0, sp, #0x48
  422278:	bl	4410ac <ferror@plt+0x3dadc>
  42227c:	add	x0, sp, #0x20
  422280:	bl	421440 <ferror@plt+0x1de70>
  422284:	ldr	x19, [sp, #16]
  422288:	ldp	x29, x30, [sp], #432
  42228c:	ret
  422290:	stp	x29, x30, [sp, #-416]!
  422294:	mov	w8, w0
  422298:	mov	x29, sp
  42229c:	str	x19, [sp, #16]
  4222a0:	mov	x19, x1
  4222a4:	str	q0, [sp, #240]
  4222a8:	str	q1, [sp, #256]
  4222ac:	str	q2, [sp, #272]
  4222b0:	str	q3, [sp, #288]
  4222b4:	str	q4, [sp, #304]
  4222b8:	str	q5, [sp, #320]
  4222bc:	str	q6, [sp, #336]
  4222c0:	str	q7, [sp, #352]
  4222c4:	stp	x2, x3, [sp, #368]
  4222c8:	stp	x4, x5, [sp, #384]
  4222cc:	stp	x6, x7, [sp, #400]
  4222d0:	bl	420a68 <ferror@plt+0x1d498>
  4222d4:	add	x0, sp, #0x1a0
  4222d8:	stp	x0, x0, [sp, #40]
  4222dc:	add	x0, sp, #0x170
  4222e0:	mov	w2, w8
  4222e4:	str	x0, [sp, #56]
  4222e8:	mov	w0, #0xffffffd0            	// #-48
  4222ec:	str	w0, [sp, #64]
  4222f0:	mov	w0, #0xffffff80            	// #-128
  4222f4:	str	w0, [sp, #68]
  4222f8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4222fc:	mov	x3, #0x0                   	// #0
  422300:	ldr	x1, [x0, #560]
  422304:	add	x0, sp, #0x48
  422308:	bl	441318 <ferror@plt+0x3dd48>
  42230c:	add	x3, sp, #0x28
  422310:	mov	x2, x19
  422314:	mov	w4, #0x4                   	// #4
  422318:	mov	w1, #0xffffffff            	// #-1
  42231c:	add	x0, sp, #0x48
  422320:	bl	421bdc <ferror@plt+0x1e60c>
  422324:	add	x0, sp, #0x48
  422328:	bl	4410ac <ferror@plt+0x3dadc>
  42232c:	add	x0, sp, #0x20
  422330:	bl	421440 <ferror@plt+0x1de70>
  422334:	ldr	x19, [sp, #16]
  422338:	ldp	x29, x30, [sp], #416
  42233c:	ret
  422340:	stp	x29, x30, [sp, #-432]!
  422344:	mov	x29, sp
  422348:	str	x19, [sp, #16]
  42234c:	mov	x19, x0
  422350:	str	q0, [sp, #240]
  422354:	str	q1, [sp, #256]
  422358:	str	q2, [sp, #272]
  42235c:	str	q3, [sp, #288]
  422360:	str	q4, [sp, #304]
  422364:	str	q5, [sp, #320]
  422368:	str	q6, [sp, #336]
  42236c:	str	q7, [sp, #352]
  422370:	stp	x1, x2, [sp, #376]
  422374:	stp	x3, x4, [sp, #392]
  422378:	stp	x5, x6, [sp, #408]
  42237c:	str	x7, [sp, #424]
  422380:	bl	420a68 <ferror@plt+0x1d498>
  422384:	add	x0, sp, #0x1b0
  422388:	stp	x0, x0, [sp, #40]
  42238c:	add	x0, sp, #0x170
  422390:	str	x0, [sp, #56]
  422394:	mov	w0, #0xffffffc8            	// #-56
  422398:	str	w0, [sp, #64]
  42239c:	mov	w0, #0xffffff80            	// #-128
  4223a0:	str	w0, [sp, #68]
  4223a4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4223a8:	mov	x3, #0x0                   	// #0
  4223ac:	ldr	w2, [x0, #584]
  4223b0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4223b4:	ldr	x1, [x0, #560]
  4223b8:	add	x0, sp, #0x48
  4223bc:	bl	441318 <ferror@plt+0x3dd48>
  4223c0:	add	x3, sp, #0x28
  4223c4:	mov	x2, x19
  4223c8:	mov	w4, #0x5                   	// #5
  4223cc:	mov	w1, #0xffffffff            	// #-1
  4223d0:	add	x0, sp, #0x48
  4223d4:	bl	421bdc <ferror@plt+0x1e60c>
  4223d8:	add	x0, sp, #0x48
  4223dc:	bl	4410ac <ferror@plt+0x3dadc>
  4223e0:	add	x0, sp, #0x20
  4223e4:	bl	421440 <ferror@plt+0x1de70>
  4223e8:	ldr	x19, [sp, #16]
  4223ec:	ldp	x29, x30, [sp], #432
  4223f0:	ret
  4223f4:	stp	x29, x30, [sp, #-416]!
  4223f8:	mov	w8, w0
  4223fc:	mov	x29, sp
  422400:	str	x19, [sp, #16]
  422404:	mov	x19, x1
  422408:	str	q0, [sp, #240]
  42240c:	str	q1, [sp, #256]
  422410:	str	q2, [sp, #272]
  422414:	str	q3, [sp, #288]
  422418:	str	q4, [sp, #304]
  42241c:	str	q5, [sp, #320]
  422420:	str	q6, [sp, #336]
  422424:	str	q7, [sp, #352]
  422428:	stp	x2, x3, [sp, #368]
  42242c:	stp	x4, x5, [sp, #384]
  422430:	stp	x6, x7, [sp, #400]
  422434:	bl	420a68 <ferror@plt+0x1d498>
  422438:	add	x0, sp, #0x1a0
  42243c:	stp	x0, x0, [sp, #40]
  422440:	add	x0, sp, #0x170
  422444:	mov	w2, w8
  422448:	str	x0, [sp, #56]
  42244c:	mov	w0, #0xffffffd0            	// #-48
  422450:	str	w0, [sp, #64]
  422454:	mov	w0, #0xffffff80            	// #-128
  422458:	str	w0, [sp, #68]
  42245c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422460:	mov	x3, #0x0                   	// #0
  422464:	ldr	x1, [x0, #560]
  422468:	add	x0, sp, #0x48
  42246c:	bl	441318 <ferror@plt+0x3dd48>
  422470:	add	x3, sp, #0x28
  422474:	mov	x2, x19
  422478:	mov	w4, #0x5                   	// #5
  42247c:	mov	w1, #0xffffffff            	// #-1
  422480:	add	x0, sp, #0x48
  422484:	bl	421bdc <ferror@plt+0x1e60c>
  422488:	add	x0, sp, #0x48
  42248c:	bl	4410ac <ferror@plt+0x3dadc>
  422490:	add	x0, sp, #0x20
  422494:	bl	421440 <ferror@plt+0x1de70>
  422498:	ldr	x19, [sp, #16]
  42249c:	ldp	x29, x30, [sp], #416
  4224a0:	ret
  4224a4:	stp	x29, x30, [sp, #-432]!
  4224a8:	mov	x29, sp
  4224ac:	str	x19, [sp, #16]
  4224b0:	mov	x19, x0
  4224b4:	str	q0, [sp, #240]
  4224b8:	str	q1, [sp, #256]
  4224bc:	str	q2, [sp, #272]
  4224c0:	str	q3, [sp, #288]
  4224c4:	str	q4, [sp, #304]
  4224c8:	str	q5, [sp, #320]
  4224cc:	str	q6, [sp, #336]
  4224d0:	str	q7, [sp, #352]
  4224d4:	stp	x1, x2, [sp, #376]
  4224d8:	stp	x3, x4, [sp, #392]
  4224dc:	stp	x5, x6, [sp, #408]
  4224e0:	str	x7, [sp, #424]
  4224e4:	bl	420a68 <ferror@plt+0x1d498>
  4224e8:	add	x0, sp, #0x1b0
  4224ec:	stp	x0, x0, [sp, #40]
  4224f0:	add	x0, sp, #0x170
  4224f4:	str	x0, [sp, #56]
  4224f8:	mov	w0, #0xffffffc8            	// #-56
  4224fc:	str	w0, [sp, #64]
  422500:	mov	w0, #0xffffff80            	// #-128
  422504:	str	w0, [sp, #68]
  422508:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42250c:	mov	x3, #0x0                   	// #0
  422510:	ldr	w2, [x0, #584]
  422514:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422518:	ldr	x1, [x0, #560]
  42251c:	add	x0, sp, #0x48
  422520:	bl	441318 <ferror@plt+0x3dd48>
  422524:	add	x3, sp, #0x28
  422528:	mov	w4, #0x3                   	// #3
  42252c:	mov	x2, x19
  422530:	mov	w1, #0xffffffff            	// #-1
  422534:	add	x0, sp, #0x48
  422538:	bl	421bdc <ferror@plt+0x1e60c>
  42253c:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422540:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422544:	add	x2, x2, #0xfa3
  422548:	add	x0, x0, #0xeeb
  42254c:	mov	w1, #0x607                 	// #1543
  422550:	bl	403600 <ferror@plt+0x30>
  422554:	stp	x29, x30, [sp, #-64]!
  422558:	mov	x29, sp
  42255c:	stp	x19, x20, [sp, #16]
  422560:	stp	x21, x22, [sp, #32]
  422564:	str	x23, [sp, #48]
  422568:	cbnz	x3, 422584 <ferror@plt+0x1efb4>
  42256c:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422570:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422574:	add	x2, x2, #0xfc2
  422578:	add	x0, x0, #0xeeb
  42257c:	mov	w1, #0x112                 	// #274
  422580:	bl	403600 <ferror@plt+0x30>
  422584:	mov	x19, x0
  422588:	mov	x22, x1
  42258c:	mov	x23, x2
  422590:	mov	x20, x3
  422594:	mov	w21, w4
  422598:	bl	4034e0 <__errno_location@plt>
  42259c:	ldr	w0, [x0]
  4225a0:	stp	x22, x23, [x19]
  4225a4:	str	w0, [x19, #16]
  4225a8:	stp	x20, x20, [x19, #32]
  4225ac:	stp	w21, wzr, [x19, #56]
  4225b0:	ldp	x19, x20, [sp, #16]
  4225b4:	ldp	x21, x22, [sp, #32]
  4225b8:	ldr	x23, [sp, #48]
  4225bc:	ldp	x29, x30, [sp], #64
  4225c0:	ret
  4225c4:	stp	x29, x30, [sp, #-48]!
  4225c8:	mov	x29, sp
  4225cc:	stp	x19, x20, [sp, #16]
  4225d0:	stp	x21, x22, [sp, #32]
  4225d4:	cbnz	x3, 4225f0 <ferror@plt+0x1f020>
  4225d8:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4225dc:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4225e0:	add	x2, x2, #0xfe1
  4225e4:	add	x0, x0, #0xeeb
  4225e8:	mov	w1, #0x123                 	// #291
  4225ec:	bl	403600 <ferror@plt+0x30>
  4225f0:	mov	x20, x0
  4225f4:	mov	x21, x2
  4225f8:	mov	x19, x3
  4225fc:	mov	w22, w4
  422600:	mov	x0, x1
  422604:	bl	403580 <gettext@plt>
  422608:	mov	w4, w22
  42260c:	mov	x3, x19
  422610:	mov	x2, x21
  422614:	mov	x1, x0
  422618:	mov	x0, x20
  42261c:	ldp	x19, x20, [sp, #16]
  422620:	ldp	x21, x22, [sp, #32]
  422624:	ldp	x29, x30, [sp], #48
  422628:	b	422554 <ferror@plt+0x1ef84>
  42262c:	stp	x29, x30, [sp, #-96]!
  422630:	mov	x29, sp
  422634:	stp	x19, x20, [sp, #16]
  422638:	stp	x21, x22, [sp, #32]
  42263c:	mov	x21, x0
  422640:	ldr	w0, [x1, #56]
  422644:	str	x23, [sp, #48]
  422648:	cmp	w0, #0xd
  42264c:	b.le	422668 <ferror@plt+0x1f098>
  422650:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422654:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422658:	add	x2, x2, #0xff5
  42265c:	add	x0, x0, #0xeeb
  422660:	mov	w1, #0x16a                 	// #362
  422664:	bl	403600 <ferror@plt+0x30>
  422668:	adrp	x19, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42266c:	add	x19, x19, #0x1a8
  422670:	mov	x20, x1
  422674:	add	x1, x19, #0xc0
  422678:	add	x19, x19, #0x20
  42267c:	ldr	x0, [x1, w0, sxtw #3]
  422680:	bl	403580 <gettext@plt>
  422684:	mov	x22, x0
  422688:	ldrsw	x0, [x20, #56]
  42268c:	ldr	x1, [x19, x0, lsl #3]
  422690:	cbz	x1, 422714 <ferror@plt+0x1f144>
  422694:	ldr	x19, [x21]
  422698:	ldrb	w0, [x19, #67]
  42269c:	bl	423228 <ferror@plt+0x1fc58>
  4226a0:	mov	x23, x0
  4226a4:	ldrb	w0, [x19, #67]
  4226a8:	bl	423544 <ferror@plt+0x1ff74>
  4226ac:	mov	x19, x0
  4226b0:	ldr	x0, [x20, #40]
  4226b4:	add	x8, sp, #0x40
  4226b8:	mov	w1, #0x0                   	// #0
  4226bc:	bl	4411c0 <ferror@plt+0x3dbf0>
  4226c0:	ldp	w2, w3, [sp, #72]
  4226c4:	mov	x0, x21
  4226c8:	ldr	x1, [sp, #64]
  4226cc:	bl	420af8 <ferror@plt+0x1d528>
  4226d0:	mov	x1, x0
  4226d4:	mov	x4, x19
  4226d8:	mov	x3, x22
  4226dc:	mov	x2, x23
  4226e0:	mov	x20, x0
  4226e4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4226e8:	add	x0, x0, #0xd
  4226ec:	bl	420a80 <ferror@plt+0x1d4b0>
  4226f0:	mov	x19, x0
  4226f4:	mov	x0, x20
  4226f8:	bl	4032a0 <free@plt>
  4226fc:	mov	x0, x19
  422700:	ldp	x19, x20, [sp, #16]
  422704:	ldp	x21, x22, [sp, #32]
  422708:	ldr	x23, [sp, #48]
  42270c:	ldp	x29, x30, [sp], #96
  422710:	ret
  422714:	adrp	x19, 485000 <_obstack_memory_used@@Base+0x28c10>
  422718:	add	x19, x19, #0x122
  42271c:	mov	x23, x19
  422720:	b	4226b0 <ferror@plt+0x1f0e0>
  422724:	stp	x29, x30, [sp, #-48]!
  422728:	mov	x29, sp
  42272c:	stp	x19, x20, [sp, #16]
  422730:	mov	x19, x0
  422734:	mov	x20, x1
  422738:	mov	x0, x20
  42273c:	mov	w1, #0x0                   	// #0
  422740:	str	x21, [sp, #32]
  422744:	bl	4289e4 <ferror@plt+0x25414>
  422748:	mov	w1, w0
  42274c:	mov	x0, x19
  422750:	bl	420e94 <ferror@plt+0x1d8c4>
  422754:	ldr	x21, [x19]
  422758:	mov	x1, x20
  42275c:	mov	x0, x19
  422760:	bl	42262c <ferror@plt+0x1f05c>
  422764:	mov	x1, x0
  422768:	mov	x0, x21
  42276c:	ldp	x19, x20, [sp, #16]
  422770:	ldr	x21, [sp, #32]
  422774:	ldp	x29, x30, [sp], #48
  422778:	b	428bb4 <ferror@plt+0x255e4>
  42277c:	stp	x29, x30, [sp, #-496]!
  422780:	mov	x29, sp
  422784:	stp	x19, x20, [sp, #16]
  422788:	mov	x19, x0
  42278c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422790:	mov	x20, x2
  422794:	mov	w2, w1
  422798:	ldr	x1, [x0, #560]
  42279c:	add	x0, sp, #0x98
  4227a0:	str	x21, [sp, #32]
  4227a4:	str	q0, [sp, #320]
  4227a8:	str	q1, [sp, #336]
  4227ac:	str	q2, [sp, #352]
  4227b0:	str	q3, [sp, #368]
  4227b4:	str	q4, [sp, #384]
  4227b8:	str	q5, [sp, #400]
  4227bc:	str	q6, [sp, #416]
  4227c0:	str	q7, [sp, #432]
  4227c4:	stp	x3, x4, [sp, #456]
  4227c8:	mov	x3, #0x0                   	// #0
  4227cc:	stp	x5, x6, [sp, #472]
  4227d0:	str	x7, [sp, #488]
  4227d4:	bl	441318 <ferror@plt+0x3dd48>
  4227d8:	add	x0, sp, #0x1f0
  4227dc:	stp	x0, x0, [sp, #56]
  4227e0:	add	x0, sp, #0x1c0
  4227e4:	str	x0, [sp, #72]
  4227e8:	mov	w0, #0xffffffd8            	// #-40
  4227ec:	str	w0, [sp, #80]
  4227f0:	mov	w0, #0xffffff80            	// #-128
  4227f4:	add	x3, sp, #0x98
  4227f8:	add	x2, sp, #0x38
  4227fc:	mov	x1, x20
  422800:	mov	w4, #0x8                   	// #8
  422804:	str	w0, [sp, #84]
  422808:	add	x0, sp, #0x58
  42280c:	bl	4225c4 <ferror@plt+0x1eff4>
  422810:	ldrb	w0, [x19, #220]
  422814:	cbz	w0, 422830 <ferror@plt+0x1f260>
  422818:	add	x0, sp, #0x98
  42281c:	bl	4410ac <ferror@plt+0x3dadc>
  422820:	ldp	x19, x20, [sp, #16]
  422824:	ldr	x21, [sp, #32]
  422828:	ldp	x29, x30, [sp], #496
  42282c:	ret
  422830:	ldr	x0, [x19]
  422834:	bl	428bf0 <ferror@plt+0x25620>
  422838:	mov	x20, x0
  42283c:	ldr	x21, [x19]
  422840:	add	x1, sp, #0x58
  422844:	mov	x0, x19
  422848:	bl	42262c <ferror@plt+0x1f05c>
  42284c:	mov	x1, x0
  422850:	mov	x0, x21
  422854:	bl	428bb4 <ferror@plt+0x255e4>
  422858:	ldr	x0, [x19]
  42285c:	add	x1, sp, #0x58
  422860:	bl	4294ec <ferror@plt+0x25f1c>
  422864:	ldr	x0, [x19]
  422868:	bl	4292dc <ferror@plt+0x25d0c>
  42286c:	ldr	x0, [x19]
  422870:	bl	428c00 <ferror@plt+0x25630>
  422874:	ldr	x0, [x19]
  422878:	mov	x1, x20
  42287c:	bl	428bb4 <ferror@plt+0x255e4>
  422880:	add	x1, sp, #0x98
  422884:	mov	x0, x19
  422888:	mov	w2, #0x8                   	// #8
  42288c:	bl	424a4c <ferror@plt+0x2147c>
  422890:	b	422818 <ferror@plt+0x1f248>
  422894:	stp	x29, x30, [sp, #-64]!
  422898:	mov	x29, sp
  42289c:	stp	x19, x20, [sp, #16]
  4228a0:	stp	x21, x22, [sp, #32]
  4228a4:	str	x23, [sp, #48]
  4228a8:	cbnz	x0, 4228c4 <ferror@plt+0x1f2f4>
  4228ac:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4228b0:	add	x2, x2, #0x17
  4228b4:	mov	w1, #0x2f5                 	// #757
  4228b8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4228bc:	add	x0, x0, #0xeeb
  4228c0:	bl	403600 <ferror@plt+0x30>
  4228c4:	mov	x20, x1
  4228c8:	cbnz	x1, 4228dc <ferror@plt+0x1f30c>
  4228cc:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4228d0:	mov	w1, #0x2f6                 	// #758
  4228d4:	add	x2, x2, #0x17
  4228d8:	b	4228b8 <ferror@plt+0x1f2e8>
  4228dc:	adrp	x21, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4228e0:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4228e4:	add	x21, x21, #0x35
  4228e8:	add	x22, x22, #0x228
  4228ec:	adrp	x23, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4228f0:	mov	x19, x0
  4228f4:	mov	w1, #0x22                  	// #34
  4228f8:	bl	428efc <ferror@plt+0x2592c>
  4228fc:	ldrb	w1, [x20]
  422900:	cbz	w1, 422990 <ferror@plt+0x1f3c0>
  422904:	cmp	w1, #0x22
  422908:	b.eq	42296c <ferror@plt+0x1f39c>  // b.none
  42290c:	b.hi	422934 <ferror@plt+0x1f364>  // b.pmore
  422910:	cmp	w1, #0x9
  422914:	b.eq	422954 <ferror@plt+0x1f384>  // b.none
  422918:	cmp	w1, #0xa
  42291c:	b.eq	422960 <ferror@plt+0x1f390>  // b.none
  422920:	ldrh	w0, [x22, w1, sxtw #1]
  422924:	tbz	w0, #4, 422974 <ferror@plt+0x1f3a4>
  422928:	mov	x0, x19
  42292c:	bl	428efc <ferror@plt+0x2592c>
  422930:	b	42294c <ferror@plt+0x1f37c>
  422934:	cmp	w1, #0x5c
  422938:	b.ne	422920 <ferror@plt+0x1f350>  // b.any
  42293c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422940:	add	x1, x1, #0x2c
  422944:	mov	x0, x19
  422948:	bl	4292a8 <ferror@plt+0x25cd8>
  42294c:	add	x20, x20, #0x1
  422950:	b	4228fc <ferror@plt+0x1f32c>
  422954:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422958:	add	x1, x1, #0x2f
  42295c:	b	422944 <ferror@plt+0x1f374>
  422960:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422964:	add	x1, x1, #0x32
  422968:	b	422944 <ferror@plt+0x1f374>
  42296c:	mov	x1, x21
  422970:	b	422944 <ferror@plt+0x1f374>
  422974:	and	w4, w1, #0x7
  422978:	ubfx	x3, x1, #3, #3
  42297c:	lsr	w2, w1, #6
  422980:	mov	x0, x19
  422984:	add	x1, x23, #0x38
  422988:	bl	42a8f0 <ferror@plt+0x27320>
  42298c:	b	42294c <ferror@plt+0x1f37c>
  422990:	mov	x0, x19
  422994:	mov	w1, #0x22                  	// #34
  422998:	ldp	x19, x20, [sp, #16]
  42299c:	ldp	x21, x22, [sp, #32]
  4229a0:	ldr	x23, [sp, #48]
  4229a4:	ldp	x29, x30, [sp], #64
  4229a8:	b	428efc <ferror@plt+0x2592c>
  4229ac:	cmp	w0, #0x0
  4229b0:	b.ge	4229d4 <ferror@plt+0x1f404>  // b.tcont
  4229b4:	stp	x29, x30, [sp, #-16]!
  4229b8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4229bc:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  4229c0:	mov	x29, sp
  4229c4:	add	x2, x2, #0x40
  4229c8:	add	x0, x0, #0xeeb
  4229cc:	mov	w1, #0x415                 	// #1045
  4229d0:	bl	403600 <ferror@plt+0x30>
  4229d4:	b.eq	4229f4 <ferror@plt+0x1f424>  // b.none
  4229d8:	mov	w1, w0
  4229dc:	mov	w2, #0xa                   	// #10
  4229e0:	mov	w0, #0x0                   	// #0
  4229e4:	udiv	w1, w1, w2
  4229e8:	add	w0, w0, #0x1
  4229ec:	cbnz	w1, 4229e4 <ferror@plt+0x1f414>
  4229f0:	ret
  4229f4:	mov	w0, #0x1                   	// #1
  4229f8:	ret
  4229fc:	stp	x29, x30, [sp, #-240]!
  422a00:	mov	x29, sp
  422a04:	str	q0, [sp, #64]
  422a08:	str	q1, [sp, #80]
  422a0c:	str	q2, [sp, #96]
  422a10:	str	q3, [sp, #112]
  422a14:	str	q4, [sp, #128]
  422a18:	str	q5, [sp, #144]
  422a1c:	str	q6, [sp, #160]
  422a20:	str	q7, [sp, #176]
  422a24:	stp	x2, x3, [sp, #192]
  422a28:	stp	x4, x5, [sp, #208]
  422a2c:	stp	x6, x7, [sp, #224]
  422a30:	cbnz	x0, 422a4c <ferror@plt+0x1f47c>
  422a34:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422a38:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422a3c:	add	x2, x2, #0x4b
  422a40:	add	x0, x0, #0xeeb
  422a44:	mov	w1, #0x4dc                 	// #1244
  422a48:	bl	403600 <ferror@plt+0x30>
  422a4c:	mov	x8, x0
  422a50:	mov	x9, x1
  422a54:	bl	420a68 <ferror@plt+0x1d498>
  422a58:	mov	x2, x9
  422a5c:	add	x0, sp, #0xf0
  422a60:	stp	x0, x0, [sp, #32]
  422a64:	add	x0, sp, #0xc0
  422a68:	add	x3, sp, #0x20
  422a6c:	str	x0, [sp, #48]
  422a70:	mov	w0, #0xffffffd0            	// #-48
  422a74:	mov	w4, #0x8                   	// #8
  422a78:	mov	w1, #0xffffffff            	// #-1
  422a7c:	str	w0, [sp, #56]
  422a80:	mov	w0, #0xffffff80            	// #-128
  422a84:	str	w0, [sp, #60]
  422a88:	mov	x0, x8
  422a8c:	bl	421bdc <ferror@plt+0x1e60c>
  422a90:	add	x0, sp, #0x18
  422a94:	bl	421440 <ferror@plt+0x1de70>
  422a98:	ldp	x29, x30, [sp], #240
  422a9c:	ret
  422aa0:	stp	x29, x30, [sp, #-256]!
  422aa4:	mov	x29, sp
  422aa8:	str	x19, [sp, #16]
  422aac:	str	q0, [sp, #80]
  422ab0:	str	q1, [sp, #96]
  422ab4:	str	q2, [sp, #112]
  422ab8:	str	q3, [sp, #128]
  422abc:	str	q4, [sp, #144]
  422ac0:	str	q5, [sp, #160]
  422ac4:	str	q6, [sp, #176]
  422ac8:	str	q7, [sp, #192]
  422acc:	stp	x3, x4, [sp, #216]
  422ad0:	stp	x5, x6, [sp, #232]
  422ad4:	str	x7, [sp, #248]
  422ad8:	cbnz	x0, 422af4 <ferror@plt+0x1f524>
  422adc:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422ae0:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422ae4:	add	x2, x2, #0x52
  422ae8:	add	x0, x0, #0xeeb
  422aec:	mov	w1, #0x518                 	// #1304
  422af0:	bl	403600 <ferror@plt+0x30>
  422af4:	mov	x8, x0
  422af8:	mov	w9, w1
  422afc:	bl	420a68 <ferror@plt+0x1d498>
  422b00:	mov	w1, w9
  422b04:	add	x0, sp, #0x100
  422b08:	stp	x0, x0, [sp, #48]
  422b0c:	add	x0, sp, #0xd0
  422b10:	add	x3, sp, #0x30
  422b14:	str	x0, [sp, #64]
  422b18:	mov	w0, #0xffffffd8            	// #-40
  422b1c:	mov	w4, #0x6                   	// #6
  422b20:	str	w0, [sp, #72]
  422b24:	mov	w0, #0xffffff80            	// #-128
  422b28:	str	w0, [sp, #76]
  422b2c:	mov	x0, x8
  422b30:	bl	421bdc <ferror@plt+0x1e60c>
  422b34:	mov	w19, w0
  422b38:	add	x0, sp, #0x28
  422b3c:	bl	421440 <ferror@plt+0x1de70>
  422b40:	mov	w0, w19
  422b44:	ldr	x19, [sp, #16]
  422b48:	ldp	x29, x30, [sp], #256
  422b4c:	ret
  422b50:	stp	x29, x30, [sp, #-256]!
  422b54:	mov	x29, sp
  422b58:	str	x19, [sp, #16]
  422b5c:	str	q0, [sp, #80]
  422b60:	str	q1, [sp, #96]
  422b64:	str	q2, [sp, #112]
  422b68:	str	q3, [sp, #128]
  422b6c:	str	q4, [sp, #144]
  422b70:	str	q5, [sp, #160]
  422b74:	str	q6, [sp, #176]
  422b78:	str	q7, [sp, #192]
  422b7c:	stp	x3, x4, [sp, #216]
  422b80:	stp	x5, x6, [sp, #232]
  422b84:	str	x7, [sp, #248]
  422b88:	cbnz	x0, 422ba4 <ferror@plt+0x1f5d4>
  422b8c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422b90:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422b94:	add	x2, x2, #0x5d
  422b98:	add	x0, x0, #0xeeb
  422b9c:	mov	w1, #0x565                 	// #1381
  422ba0:	bl	403600 <ferror@plt+0x30>
  422ba4:	mov	x8, x0
  422ba8:	mov	w9, w1
  422bac:	bl	420a68 <ferror@plt+0x1d498>
  422bb0:	mov	w1, w9
  422bb4:	add	x0, sp, #0x100
  422bb8:	stp	x0, x0, [sp, #48]
  422bbc:	add	x0, sp, #0xd0
  422bc0:	add	x3, sp, #0x30
  422bc4:	str	x0, [sp, #64]
  422bc8:	mov	w0, #0xffffffd8            	// #-40
  422bcc:	mov	w4, #0xa                   	// #10
  422bd0:	str	w0, [sp, #72]
  422bd4:	mov	w0, #0xffffff80            	// #-128
  422bd8:	str	w0, [sp, #76]
  422bdc:	mov	x0, x8
  422be0:	bl	421bdc <ferror@plt+0x1e60c>
  422be4:	mov	w19, w0
  422be8:	add	x0, sp, #0x28
  422bec:	bl	421440 <ferror@plt+0x1de70>
  422bf0:	mov	w0, w19
  422bf4:	ldr	x19, [sp, #16]
  422bf8:	ldp	x29, x30, [sp], #256
  422bfc:	ret
  422c00:	stp	x29, x30, [sp, #-256]!
  422c04:	mov	x29, sp
  422c08:	str	x19, [sp, #16]
  422c0c:	str	q0, [sp, #80]
  422c10:	str	q1, [sp, #96]
  422c14:	str	q2, [sp, #112]
  422c18:	str	q3, [sp, #128]
  422c1c:	str	q4, [sp, #144]
  422c20:	str	q5, [sp, #160]
  422c24:	str	q6, [sp, #176]
  422c28:	str	q7, [sp, #192]
  422c2c:	stp	x2, x3, [sp, #208]
  422c30:	stp	x4, x5, [sp, #224]
  422c34:	stp	x6, x7, [sp, #240]
  422c38:	cbnz	x0, 422c54 <ferror@plt+0x1f684>
  422c3c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422c40:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422c44:	add	x2, x2, #0x65
  422c48:	add	x0, x0, #0xeeb
  422c4c:	mov	w1, #0x587                 	// #1415
  422c50:	bl	403600 <ferror@plt+0x30>
  422c54:	mov	x8, x0
  422c58:	mov	x9, x1
  422c5c:	bl	420a68 <ferror@plt+0x1d498>
  422c60:	mov	x2, x9
  422c64:	add	x0, sp, #0x100
  422c68:	stp	x0, x0, [sp, #48]
  422c6c:	add	x0, sp, #0xd0
  422c70:	add	x3, sp, #0x30
  422c74:	str	x0, [sp, #64]
  422c78:	mov	w0, #0xffffffd0            	// #-48
  422c7c:	mov	w4, #0xb                   	// #11
  422c80:	mov	w1, #0xffffffff            	// #-1
  422c84:	str	w0, [sp, #72]
  422c88:	mov	w0, #0xffffff80            	// #-128
  422c8c:	str	w0, [sp, #76]
  422c90:	mov	x0, x8
  422c94:	bl	421bdc <ferror@plt+0x1e60c>
  422c98:	mov	w19, w0
  422c9c:	add	x0, sp, #0x28
  422ca0:	bl	421440 <ferror@plt+0x1de70>
  422ca4:	mov	w0, w19
  422ca8:	ldr	x19, [sp, #16]
  422cac:	ldp	x29, x30, [sp], #256
  422cb0:	ret
  422cb4:	stp	x29, x30, [sp, #-240]!
  422cb8:	mov	x29, sp
  422cbc:	str	q0, [sp, #64]
  422cc0:	str	q1, [sp, #80]
  422cc4:	str	q2, [sp, #96]
  422cc8:	str	q3, [sp, #112]
  422ccc:	str	q4, [sp, #128]
  422cd0:	str	q5, [sp, #144]
  422cd4:	str	q6, [sp, #160]
  422cd8:	str	q7, [sp, #176]
  422cdc:	stp	x2, x3, [sp, #192]
  422ce0:	stp	x4, x5, [sp, #208]
  422ce4:	stp	x6, x7, [sp, #224]
  422ce8:	cbnz	x0, 422d04 <ferror@plt+0x1f734>
  422cec:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422cf0:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422cf4:	add	x2, x2, #0x6f
  422cf8:	add	x0, x0, #0xeeb
  422cfc:	mov	w1, #0x5be                 	// #1470
  422d00:	bl	403600 <ferror@plt+0x30>
  422d04:	mov	x8, x0
  422d08:	mov	x9, x1
  422d0c:	bl	420a68 <ferror@plt+0x1d498>
  422d10:	mov	x2, x9
  422d14:	add	x0, sp, #0xf0
  422d18:	stp	x0, x0, [sp, #32]
  422d1c:	add	x0, sp, #0xc0
  422d20:	add	x3, sp, #0x20
  422d24:	str	x0, [sp, #48]
  422d28:	mov	w0, #0xffffffd0            	// #-48
  422d2c:	mov	w4, #0x4                   	// #4
  422d30:	mov	w1, #0xffffffff            	// #-1
  422d34:	str	w0, [sp, #56]
  422d38:	mov	w0, #0xffffff80            	// #-128
  422d3c:	str	w0, [sp, #60]
  422d40:	mov	x0, x8
  422d44:	bl	421bdc <ferror@plt+0x1e60c>
  422d48:	add	x0, sp, #0x18
  422d4c:	bl	421440 <ferror@plt+0x1de70>
  422d50:	ldp	x29, x30, [sp], #240
  422d54:	ret
  422d58:	stp	x29, x30, [sp, #-416]!
  422d5c:	mov	w8, w0
  422d60:	mov	x29, sp
  422d64:	str	x19, [sp, #16]
  422d68:	mov	x19, x1
  422d6c:	str	q0, [sp, #240]
  422d70:	str	q1, [sp, #256]
  422d74:	str	q2, [sp, #272]
  422d78:	str	q3, [sp, #288]
  422d7c:	str	q4, [sp, #304]
  422d80:	str	q5, [sp, #320]
  422d84:	str	q6, [sp, #336]
  422d88:	str	q7, [sp, #352]
  422d8c:	stp	x2, x3, [sp, #368]
  422d90:	stp	x4, x5, [sp, #384]
  422d94:	stp	x6, x7, [sp, #400]
  422d98:	bl	420a68 <ferror@plt+0x1d498>
  422d9c:	add	x0, sp, #0x1a0
  422da0:	stp	x0, x0, [sp, #40]
  422da4:	add	x0, sp, #0x170
  422da8:	mov	w2, w8
  422dac:	str	x0, [sp, #56]
  422db0:	mov	w0, #0xffffffd0            	// #-48
  422db4:	str	w0, [sp, #64]
  422db8:	mov	w0, #0xffffff80            	// #-128
  422dbc:	str	w0, [sp, #68]
  422dc0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422dc4:	mov	x3, #0x0                   	// #0
  422dc8:	ldr	x1, [x0, #560]
  422dcc:	add	x0, sp, #0x48
  422dd0:	bl	441318 <ferror@plt+0x3dd48>
  422dd4:	add	x3, sp, #0x28
  422dd8:	mov	w4, #0x2                   	// #2
  422ddc:	mov	x2, x19
  422de0:	mov	w1, #0xffffffff            	// #-1
  422de4:	add	x0, sp, #0x48
  422de8:	bl	421bdc <ferror@plt+0x1e60c>
  422dec:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422df0:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422df4:	add	x2, x2, #0x78
  422df8:	add	x0, x0, #0xeeb
  422dfc:	mov	w1, #0x5f6                 	// #1526
  422e00:	bl	403600 <ferror@plt+0x30>
  422e04:	stp	x29, x30, [sp, #-432]!
  422e08:	mov	x29, sp
  422e0c:	str	x19, [sp, #16]
  422e10:	mov	x19, x0
  422e14:	str	q0, [sp, #240]
  422e18:	str	q1, [sp, #256]
  422e1c:	str	q2, [sp, #272]
  422e20:	str	q3, [sp, #288]
  422e24:	str	q4, [sp, #304]
  422e28:	str	q5, [sp, #320]
  422e2c:	str	q6, [sp, #336]
  422e30:	str	q7, [sp, #352]
  422e34:	stp	x1, x2, [sp, #376]
  422e38:	stp	x3, x4, [sp, #392]
  422e3c:	stp	x5, x6, [sp, #408]
  422e40:	str	x7, [sp, #424]
  422e44:	bl	420a68 <ferror@plt+0x1d498>
  422e48:	add	x0, sp, #0x1b0
  422e4c:	stp	x0, x0, [sp, #40]
  422e50:	add	x0, sp, #0x170
  422e54:	str	x0, [sp, #56]
  422e58:	mov	w0, #0xffffffc8            	// #-56
  422e5c:	str	w0, [sp, #64]
  422e60:	mov	w0, #0xffffff80            	// #-128
  422e64:	str	w0, [sp, #68]
  422e68:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422e6c:	mov	x3, #0x0                   	// #0
  422e70:	ldr	w2, [x0, #584]
  422e74:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422e78:	ldr	x1, [x0, #560]
  422e7c:	add	x0, sp, #0x48
  422e80:	bl	441318 <ferror@plt+0x3dd48>
  422e84:	add	x3, sp, #0x28
  422e88:	mov	w4, #0xd                   	// #13
  422e8c:	mov	x2, x19
  422e90:	mov	w1, #0xffffffff            	// #-1
  422e94:	add	x0, sp, #0x48
  422e98:	bl	421bdc <ferror@plt+0x1e60c>
  422e9c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  422ea0:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  422ea4:	add	x2, x2, #0x84
  422ea8:	add	x0, x0, #0xeeb
  422eac:	mov	w1, #0x617                 	// #1559
  422eb0:	bl	403600 <ferror@plt+0x30>
  422eb4:	stp	x29, x30, [sp, #-112]!
  422eb8:	mov	x29, sp
  422ebc:	stp	x19, x20, [sp, #16]
  422ec0:	mov	w19, w6
  422ec4:	mov	w20, w1
  422ec8:	mov	x1, x4
  422ecc:	stp	x21, x22, [sp, #32]
  422ed0:	mov	x21, x5
  422ed4:	mov	x22, x0
  422ed8:	mov	x0, x3
  422edc:	bl	402cf0 <ngettext@plt>
  422ee0:	mov	x1, x0
  422ee4:	mov	w4, w19
  422ee8:	mov	x3, x22
  422eec:	mov	x2, x21
  422ef0:	add	x0, sp, #0x30
  422ef4:	bl	422554 <ferror@plt+0x1ef84>
  422ef8:	cmp	w19, #0x6
  422efc:	b.ne	422f04 <ferror@plt+0x1f934>  // b.any
  422f00:	str	w20, [sp, #108]
  422f04:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  422f08:	add	x1, sp, #0x30
  422f0c:	ldr	x0, [x0, #784]
  422f10:	bl	4216d8 <ferror@plt+0x1e108>
  422f14:	ldp	x19, x20, [sp, #16]
  422f18:	ldp	x21, x22, [sp, #32]
  422f1c:	ldp	x29, x30, [sp], #112
  422f20:	ret
  422f24:	stp	x29, x30, [sp, #-416]!
  422f28:	mov	w8, w0
  422f2c:	mov	x29, sp
  422f30:	add	x0, sp, #0x1a0
  422f34:	stp	x0, x0, [sp, #56]
  422f38:	add	x0, sp, #0x180
  422f3c:	str	x0, [sp, #72]
  422f40:	mov	w0, #0xffffffe0            	// #-32
  422f44:	str	w0, [sp, #80]
  422f48:	mov	w0, #0xffffff80            	// #-128
  422f4c:	stp	x19, x20, [sp, #16]
  422f50:	mov	x19, x1
  422f54:	mov	x20, x2
  422f58:	str	x21, [sp, #32]
  422f5c:	mov	x21, x3
  422f60:	str	w0, [sp, #84]
  422f64:	str	q0, [sp, #256]
  422f68:	str	q1, [sp, #272]
  422f6c:	str	q2, [sp, #288]
  422f70:	str	q3, [sp, #304]
  422f74:	str	q4, [sp, #320]
  422f78:	str	q5, [sp, #336]
  422f7c:	str	q6, [sp, #352]
  422f80:	str	q7, [sp, #368]
  422f84:	stp	x4, x5, [sp, #384]
  422f88:	stp	x6, x7, [sp, #400]
  422f8c:	bl	420a68 <ferror@plt+0x1d498>
  422f90:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  422f94:	mov	w2, w8
  422f98:	mov	x3, #0x0                   	// #0
  422f9c:	ldr	x1, [x0, #560]
  422fa0:	add	x0, sp, #0x58
  422fa4:	bl	441318 <ferror@plt+0x3dd48>
  422fa8:	add	x5, sp, #0x38
  422fac:	mov	x4, x21
  422fb0:	mov	x3, x20
  422fb4:	mov	x2, x19
  422fb8:	mov	w6, #0x8                   	// #8
  422fbc:	mov	w1, #0xffffffff            	// #-1
  422fc0:	add	x0, sp, #0x58
  422fc4:	bl	422eb4 <ferror@plt+0x1f8e4>
  422fc8:	add	x0, sp, #0x58
  422fcc:	bl	4410ac <ferror@plt+0x3dadc>
  422fd0:	add	x0, sp, #0x30
  422fd4:	bl	421440 <ferror@plt+0x1de70>
  422fd8:	ldp	x19, x20, [sp, #16]
  422fdc:	ldr	x21, [sp, #32]
  422fe0:	ldp	x29, x30, [sp], #416
  422fe4:	ret
  422fe8:	stp	x29, x30, [sp, #-240]!
  422fec:	mov	x29, sp
  422ff0:	str	x19, [sp, #16]
  422ff4:	str	q0, [sp, #80]
  422ff8:	str	q1, [sp, #96]
  422ffc:	str	q2, [sp, #112]
  423000:	str	q3, [sp, #128]
  423004:	str	q4, [sp, #144]
  423008:	str	q5, [sp, #160]
  42300c:	str	q6, [sp, #176]
  423010:	str	q7, [sp, #192]
  423014:	stp	x5, x6, [sp, #216]
  423018:	str	x7, [sp, #232]
  42301c:	cbnz	x0, 423038 <ferror@plt+0x1fa68>
  423020:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423024:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  423028:	add	x2, x2, #0xa0
  42302c:	add	x0, x0, #0xeeb
  423030:	mov	w1, #0x528                 	// #1320
  423034:	bl	403600 <ferror@plt+0x30>
  423038:	mov	x8, x0
  42303c:	mov	w9, w1
  423040:	bl	420a68 <ferror@plt+0x1d498>
  423044:	mov	w1, w9
  423048:	add	x0, sp, #0xf0
  42304c:	stp	x0, x0, [sp, #48]
  423050:	add	x0, sp, #0xd0
  423054:	add	x5, sp, #0x30
  423058:	str	x0, [sp, #64]
  42305c:	mov	w0, #0xffffffe8            	// #-24
  423060:	mov	w6, #0x6                   	// #6
  423064:	str	w0, [sp, #72]
  423068:	mov	w0, #0xffffff80            	// #-128
  42306c:	str	w0, [sp, #76]
  423070:	mov	x0, x8
  423074:	bl	422eb4 <ferror@plt+0x1f8e4>
  423078:	mov	w19, w0
  42307c:	add	x0, sp, #0x28
  423080:	bl	421440 <ferror@plt+0x1de70>
  423084:	mov	w0, w19
  423088:	ldr	x19, [sp, #16]
  42308c:	ldp	x29, x30, [sp], #240
  423090:	ret
  423094:	stp	x29, x30, [sp, #-416]!
  423098:	mov	w8, w0
  42309c:	mov	x29, sp
  4230a0:	stp	x19, x20, [sp, #16]
  4230a4:	mov	w19, w1
  4230a8:	mov	x20, x2
  4230ac:	stp	x21, x22, [sp, #32]
  4230b0:	mov	x21, x3
  4230b4:	mov	x22, x4
  4230b8:	str	q0, [sp, #256]
  4230bc:	str	q1, [sp, #272]
  4230c0:	str	q2, [sp, #288]
  4230c4:	str	q3, [sp, #304]
  4230c8:	str	q4, [sp, #320]
  4230cc:	str	q5, [sp, #336]
  4230d0:	str	q6, [sp, #352]
  4230d4:	str	q7, [sp, #368]
  4230d8:	stp	x5, x6, [sp, #392]
  4230dc:	str	x7, [sp, #408]
  4230e0:	bl	420a68 <ferror@plt+0x1d498>
  4230e4:	add	x0, sp, #0x1a0
  4230e8:	stp	x0, x0, [sp, #56]
  4230ec:	add	x0, sp, #0x180
  4230f0:	str	x0, [sp, #72]
  4230f4:	mov	w0, #0xffffffe8            	// #-24
  4230f8:	str	w0, [sp, #80]
  4230fc:	mov	w0, #0xffffff80            	// #-128
  423100:	str	w0, [sp, #84]
  423104:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  423108:	mov	w2, w8
  42310c:	mov	x3, #0x0                   	// #0
  423110:	ldr	x1, [x0, #560]
  423114:	add	x0, sp, #0x58
  423118:	bl	441318 <ferror@plt+0x3dd48>
  42311c:	add	x5, sp, #0x38
  423120:	mov	x4, x22
  423124:	mov	x3, x21
  423128:	mov	x2, x20
  42312c:	mov	w1, w19
  423130:	mov	w6, #0x6                   	// #6
  423134:	add	x0, sp, #0x58
  423138:	bl	422eb4 <ferror@plt+0x1f8e4>
  42313c:	mov	w19, w0
  423140:	add	x0, sp, #0x58
  423144:	bl	4410ac <ferror@plt+0x3dadc>
  423148:	add	x0, sp, #0x30
  42314c:	bl	421440 <ferror@plt+0x1de70>
  423150:	mov	w0, w19
  423154:	ldp	x19, x20, [sp, #16]
  423158:	ldp	x21, x22, [sp, #32]
  42315c:	ldp	x29, x30, [sp], #416
  423160:	ret
  423164:	stp	x29, x30, [sp, #-416]!
  423168:	mov	w8, w0
  42316c:	mov	x29, sp
  423170:	stp	x19, x20, [sp, #16]
  423174:	mov	x19, x1
  423178:	mov	x20, x2
  42317c:	str	x21, [sp, #32]
  423180:	mov	x21, x3
  423184:	str	q0, [sp, #256]
  423188:	str	q1, [sp, #272]
  42318c:	str	q2, [sp, #288]
  423190:	str	q3, [sp, #304]
  423194:	str	q4, [sp, #320]
  423198:	str	q5, [sp, #336]
  42319c:	str	q6, [sp, #352]
  4231a0:	str	q7, [sp, #368]
  4231a4:	stp	x4, x5, [sp, #384]
  4231a8:	stp	x6, x7, [sp, #400]
  4231ac:	bl	420a68 <ferror@plt+0x1d498>
  4231b0:	add	x0, sp, #0x1a0
  4231b4:	stp	x0, x0, [sp, #56]
  4231b8:	add	x0, sp, #0x180
  4231bc:	mov	w2, w8
  4231c0:	str	x0, [sp, #72]
  4231c4:	mov	w0, #0xffffffe0            	// #-32
  4231c8:	str	w0, [sp, #80]
  4231cc:	mov	w0, #0xffffff80            	// #-128
  4231d0:	str	w0, [sp, #84]
  4231d4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4231d8:	mov	x3, #0x0                   	// #0
  4231dc:	ldr	x1, [x0, #560]
  4231e0:	add	x0, sp, #0x58
  4231e4:	bl	441318 <ferror@plt+0x3dd48>
  4231e8:	add	x5, sp, #0x38
  4231ec:	mov	x4, x21
  4231f0:	mov	x3, x20
  4231f4:	mov	x2, x19
  4231f8:	mov	w6, #0x4                   	// #4
  4231fc:	mov	w1, #0xffffffff            	// #-1
  423200:	add	x0, sp, #0x58
  423204:	bl	422eb4 <ferror@plt+0x1f8e4>
  423208:	add	x0, sp, #0x58
  42320c:	bl	4410ac <ferror@plt+0x3dadc>
  423210:	add	x0, sp, #0x30
  423214:	bl	421440 <ferror@plt+0x1de70>
  423218:	ldp	x19, x20, [sp, #16]
  42321c:	ldr	x21, [sp, #32]
  423220:	ldp	x29, x30, [sp], #416
  423224:	ret
  423228:	stp	x29, x30, [sp, #-32]!
  42322c:	mov	x29, sp
  423230:	stp	x19, x20, [sp, #16]
  423234:	and	w20, w0, #0xff
  423238:	mov	x19, x1
  42323c:	mov	x0, x1
  423240:	bl	402d50 <strlen@plt>
  423244:	mov	x1, x19
  423248:	mov	x2, x0
  42324c:	mov	w0, w20
  423250:	ldp	x19, x20, [sp, #16]
  423254:	ldp	x29, x30, [sp], #32
  423258:	b	4234c4 <ferror@plt+0x1fef4>
  42325c:	cbz	x1, 423344 <ferror@plt+0x1fd74>
  423260:	stp	x29, x30, [sp, #-48]!
  423264:	mov	x29, sp
  423268:	stp	x19, x20, [sp, #16]
  42326c:	mov	x19, x1
  423270:	ldr	x1, [x0, #16]
  423274:	stp	x21, x22, [sp, #32]
  423278:	mov	x21, x0
  42327c:	cbz	x1, 423288 <ferror@plt+0x1fcb8>
  423280:	ldr	x0, [x19]
  423284:	blr	x1
  423288:	ldr	x1, [x21, #24]
  42328c:	cbz	x1, 423298 <ferror@plt+0x1fcc8>
  423290:	ldr	x0, [x19, #8]
  423294:	blr	x1
  423298:	str	xzr, [x19, #32]
  42329c:	mov	x20, x19
  4232a0:	mov	x19, #0x0                   	// #0
  4232a4:	ldr	x0, [x20, #16]
  4232a8:	cbz	x0, 4232dc <ferror@plt+0x1fd0c>
  4232ac:	ldr	x1, [x21, #16]
  4232b0:	cbz	x1, 4232bc <ferror@plt+0x1fcec>
  4232b4:	ldr	x0, [x0]
  4232b8:	blr	x1
  4232bc:	ldr	x1, [x21, #24]
  4232c0:	cbz	x1, 4232d0 <ferror@plt+0x1fd00>
  4232c4:	ldr	x0, [x20, #16]
  4232c8:	ldr	x0, [x0, #8]
  4232cc:	blr	x1
  4232d0:	ldr	x0, [x20, #16]
  4232d4:	str	x19, [x0, #32]
  4232d8:	mov	x19, x0
  4232dc:	ldr	x0, [x20, #24]
  4232e0:	cbz	x0, 423314 <ferror@plt+0x1fd44>
  4232e4:	ldr	x1, [x21, #16]
  4232e8:	cbz	x1, 4232f4 <ferror@plt+0x1fd24>
  4232ec:	ldr	x0, [x0]
  4232f0:	blr	x1
  4232f4:	ldr	x1, [x21, #24]
  4232f8:	cbz	x1, 423308 <ferror@plt+0x1fd38>
  4232fc:	ldr	x0, [x20, #24]
  423300:	ldr	x0, [x0, #8]
  423304:	blr	x1
  423308:	ldr	x0, [x20, #24]
  42330c:	str	x19, [x0, #32]
  423310:	mov	x19, x0
  423314:	ldr	x22, [x20, #32]
  423318:	mov	x0, x20
  42331c:	mov	x1, #0x28                  	// #40
  423320:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  423324:	cbz	x22, 423330 <ferror@plt+0x1fd60>
  423328:	mov	x20, x22
  42332c:	b	4232a4 <ferror@plt+0x1fcd4>
  423330:	cbnz	x19, 42329c <ferror@plt+0x1fccc>
  423334:	ldp	x19, x20, [sp, #16]
  423338:	ldp	x21, x22, [sp, #32]
  42333c:	ldp	x29, x30, [sp], #48
  423340:	ret
  423344:	ret
  423348:	stp	x29, x30, [sp, #-96]!
  42334c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423350:	add	x0, x0, #0x2e0
  423354:	mov	x29, sp
  423358:	stp	x19, x20, [sp, #16]
  42335c:	stp	x21, x22, [sp, #32]
  423360:	stp	x23, x24, [sp, #48]
  423364:	stp	x25, x26, [sp, #64]
  423368:	str	x27, [sp, #80]
  42336c:	bl	4034f0 <getenv@plt>
  423370:	cbz	x0, 42349c <ferror@plt+0x1fecc>
  423374:	mov	x19, x0
  423378:	ldrb	w0, [x0]
  42337c:	cbz	w0, 4234bc <ferror@plt+0x1feec>
  423380:	adrp	x23, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423384:	mov	x20, x19
  423388:	add	x23, x23, #0x36f
  42338c:	mov	x21, #0x0                   	// #0
  423390:	mov	x22, #0x0                   	// #0
  423394:	mov	x26, #0x0                   	// #0
  423398:	adrp	x24, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42339c:	mov	w25, #0x5b1b                	// #23323
  4233a0:	ldrb	w0, [x20]
  4233a4:	cmp	w0, #0x3a
  4233a8:	b.eq	4233b0 <ferror@plt+0x1fde0>  // b.none
  4233ac:	cbnz	w0, 423460 <ferror@plt+0x1fe90>
  4233b0:	cbz	x26, 4233e8 <ferror@plt+0x1fe18>
  4233b4:	sub	x21, x20, x26
  4233b8:	add	x27, x24, #0x318
  4233bc:	ldr	x0, [x27]
  4233c0:	cbz	x0, 4233f0 <ferror@plt+0x1fe20>
  4233c4:	ldrb	w1, [x27, #16]
  4233c8:	cmp	x1, x22
  4233cc:	b.ne	4233e0 <ferror@plt+0x1fe10>  // b.any
  4233d0:	mov	x2, x22
  4233d4:	mov	x1, x19
  4233d8:	bl	4031e0 <memcmp@plt>
  4233dc:	cbz	w0, 4233f0 <ferror@plt+0x1fe20>
  4233e0:	add	x27, x27, #0x18
  4233e4:	b	4233bc <ferror@plt+0x1fdec>
  4233e8:	sub	x22, x20, x19
  4233ec:	b	4233b8 <ferror@plt+0x1fde8>
  4233f0:	ldr	x0, [x27, #8]
  4233f4:	cbz	x0, 423448 <ferror@plt+0x1fe78>
  4233f8:	cbz	x26, 423448 <ferror@plt+0x1fe78>
  4233fc:	ldrb	w1, [x27, #17]
  423400:	cbz	w1, 423408 <ferror@plt+0x1fe38>
  423404:	bl	4032a0 <free@plt>
  423408:	add	x0, x21, #0x7
  42340c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  423410:	mov	x19, x0
  423414:	strh	w25, [x0], #2
  423418:	mov	x2, x21
  42341c:	mov	x1, x26
  423420:	bl	402cd0 <memcpy@plt>
  423424:	str	x19, [x27, #8]
  423428:	add	x0, x21, #0x2
  42342c:	ldr	w2, [x23]
  423430:	add	x1, x19, x0
  423434:	str	w2, [x19, x0]
  423438:	ldrb	w0, [x23, #4]
  42343c:	strb	w0, [x1, #4]
  423440:	mov	w0, #0x1                   	// #1
  423444:	strb	w0, [x27, #17]
  423448:	ldrb	w0, [x20]
  42344c:	cbz	w0, 42349c <ferror@plt+0x1fecc>
  423450:	add	x19, x20, #0x1
  423454:	mov	x26, #0x0                   	// #0
  423458:	add	x20, x20, #0x1
  42345c:	b	4233a0 <ferror@plt+0x1fdd0>
  423460:	cmp	w0, #0x3d
  423464:	b.ne	423480 <ferror@plt+0x1feb0>  // b.any
  423468:	cmp	x26, #0x0
  42346c:	ccmp	x20, x19, #0x4, eq  // eq = none
  423470:	b.eq	42349c <ferror@plt+0x1fecc>  // b.none
  423474:	sub	x22, x20, x19
  423478:	add	x26, x20, #0x1
  42347c:	b	423458 <ferror@plt+0x1fe88>
  423480:	cbz	x26, 423458 <ferror@plt+0x1fe88>
  423484:	cmp	w0, #0x3b
  423488:	b.eq	423458 <ferror@plt+0x1fe88>  // b.none
  42348c:	sub	w0, w0, #0x30
  423490:	and	w0, w0, #0xff
  423494:	cmp	w0, #0x9
  423498:	b.ls	423458 <ferror@plt+0x1fe88>  // b.plast
  42349c:	mov	w0, #0x1                   	// #1
  4234a0:	ldp	x19, x20, [sp, #16]
  4234a4:	ldp	x21, x22, [sp, #32]
  4234a8:	ldp	x23, x24, [sp, #48]
  4234ac:	ldp	x25, x26, [sp, #64]
  4234b0:	ldr	x27, [sp, #80]
  4234b4:	ldp	x29, x30, [sp], #96
  4234b8:	ret
  4234bc:	mov	w0, #0x0                   	// #0
  4234c0:	b	4234a0 <ferror@plt+0x1fed0>
  4234c4:	tst	w0, #0xff
  4234c8:	b.eq	423518 <ferror@plt+0x1ff48>  // b.none
  4234cc:	stp	x29, x30, [sp, #-48]!
  4234d0:	mov	x29, sp
  4234d4:	stp	x19, x20, [sp, #16]
  4234d8:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4234dc:	mov	x20, x2
  4234e0:	add	x19, x19, #0x318
  4234e4:	str	x21, [sp, #32]
  4234e8:	mov	x21, x1
  4234ec:	ldr	x0, [x19]
  4234f0:	cbz	x0, 423524 <ferror@plt+0x1ff54>
  4234f4:	ldrb	w1, [x19, #16]
  4234f8:	cmp	x1, x20
  4234fc:	b.ne	423510 <ferror@plt+0x1ff40>  // b.any
  423500:	mov	x2, x20
  423504:	mov	x1, x21
  423508:	bl	4031e0 <memcmp@plt>
  42350c:	cbz	w0, 42353c <ferror@plt+0x1ff6c>
  423510:	add	x19, x19, #0x18
  423514:	b	4234ec <ferror@plt+0x1ff1c>
  423518:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  42351c:	add	x0, x0, #0x122
  423520:	ret
  423524:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  423528:	add	x0, x0, #0x122
  42352c:	ldp	x19, x20, [sp, #16]
  423530:	ldr	x21, [sp, #32]
  423534:	ldp	x29, x30, [sp], #48
  423538:	ret
  42353c:	ldr	x0, [x19, #8]
  423540:	b	42352c <ferror@plt+0x1ff5c>
  423544:	tst	w0, #0xff
  423548:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42354c:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  423550:	add	x0, x2, #0x2eb
  423554:	add	x1, x1, #0x122
  423558:	csel	x0, x0, x1, ne  // ne = any
  42355c:	ret
  423560:	cmp	w0, #0x1
  423564:	b.eq	4235e0 <ferror@plt+0x20010>  // b.none
  423568:	stp	x29, x30, [sp, #-32]!
  42356c:	cmp	w0, #0x2
  423570:	mov	x29, sp
  423574:	str	x19, [sp, #16]
  423578:	mov	w19, w0
  42357c:	b.eq	42359c <ferror@plt+0x1ffcc>  // b.none
  423580:	cbz	w0, 4235ac <ferror@plt+0x1ffdc>
  423584:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423588:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42358c:	add	x2, x2, #0x2fc
  423590:	add	x0, x0, #0x30a
  423594:	mov	w1, #0xec                  	// #236
  423598:	bl	403600 <ferror@plt+0x30>
  42359c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4235a0:	add	x0, x0, #0x2f2
  4235a4:	bl	4034f0 <getenv@plt>
  4235a8:	cbnz	x0, 4235bc <ferror@plt+0x1ffec>
  4235ac:	mov	w0, #0x0                   	// #0
  4235b0:	ldr	x19, [sp, #16]
  4235b4:	ldp	x29, x30, [sp], #32
  4235b8:	ret
  4235bc:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4235c0:	add	x1, x1, #0x2f7
  4235c4:	bl	403220 <strcmp@plt>
  4235c8:	cbz	w0, 4235ac <ferror@plt+0x1ffdc>
  4235cc:	mov	w0, w19
  4235d0:	bl	4033e0 <isatty@plt>
  4235d4:	cbz	w0, 4235ac <ferror@plt+0x1ffdc>
  4235d8:	ldr	x19, [sp, #16]
  4235dc:	ldp	x29, x30, [sp], #32
  4235e0:	b	423348 <ferror@plt+0x1fd78>
  4235e4:	ldr	x2, [x0]
  4235e8:	ldr	x0, [x1]
  4235ec:	ldr	w1, [x2]
  4235f0:	ldr	w0, [x0]
  4235f4:	sub	w0, w1, w0
  4235f8:	ret
  4235fc:	stp	x29, x30, [sp, #-32]!
  423600:	mov	x29, sp
  423604:	str	x19, [sp, #16]
  423608:	mov	x19, x0
  42360c:	ldr	x0, [x0]
  423610:	cbz	x0, 423620 <ferror@plt+0x20050>
  423614:	ldrsb	w1, [x0, #3]
  423618:	tbz	w1, #31, 42362c <ferror@plt+0x2005c>
  42361c:	str	wzr, [x0, #4]
  423620:	ldr	x19, [sp, #16]
  423624:	ldp	x29, x30, [sp], #32
  423628:	ret
  42362c:	bl	4032a0 <free@plt>
  423630:	str	xzr, [x19]
  423634:	b	423620 <ferror@plt+0x20050>
  423638:	stp	x29, x30, [sp, #-32]!
  42363c:	mov	x29, sp
  423640:	str	x19, [sp, #16]
  423644:	mov	x19, x0
  423648:	ldr	x0, [x0]
  42364c:	cbz	x0, 42365c <ferror@plt+0x2008c>
  423650:	ldrsb	w1, [x0, #3]
  423654:	tbz	w1, #31, 423668 <ferror@plt+0x20098>
  423658:	str	wzr, [x0, #4]
  42365c:	ldr	x19, [sp, #16]
  423660:	ldp	x29, x30, [sp], #32
  423664:	ret
  423668:	bl	4032a0 <free@plt>
  42366c:	str	xzr, [x19]
  423670:	b	42365c <ferror@plt+0x2008c>
  423674:	stp	x29, x30, [sp, #-64]!
  423678:	mov	x29, sp
  42367c:	stp	x19, x20, [sp, #16]
  423680:	mov	w20, w0
  423684:	mov	w19, w1
  423688:	stp	x21, x22, [sp, #32]
  42368c:	stp	x23, x24, [sp, #48]
  423690:	adrp	x23, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  423694:	tbz	w20, #31, 4236a8 <ferror@plt+0x200d8>
  423698:	ldr	x0, [x23, #560]
  42369c:	mov	w1, w20
  4236a0:	bl	43f674 <ferror@plt+0x3c0a4>
  4236a4:	mov	w20, w0
  4236a8:	tbz	w19, #31, 4236bc <ferror@plt+0x200ec>
  4236ac:	ldr	x0, [x23, #560]
  4236b0:	mov	w1, w19
  4236b4:	bl	43f674 <ferror@plt+0x3c0a4>
  4236b8:	mov	w19, w0
  4236bc:	cmp	w20, #0x1
  4236c0:	cset	w21, ls  // ls = plast
  4236c4:	cmp	w19, #0x1
  4236c8:	cset	w0, ls  // ls = plast
  4236cc:	orr	w21, w21, w0
  4236d0:	cbz	w21, 4236f4 <ferror@plt+0x20124>
  4236d4:	cmp	w20, w19
  4236d8:	cset	w21, eq  // eq = none
  4236dc:	mov	w0, w21
  4236e0:	ldp	x19, x20, [sp, #16]
  4236e4:	ldp	x21, x22, [sp, #32]
  4236e8:	ldp	x23, x24, [sp, #48]
  4236ec:	ldp	x29, x30, [sp], #64
  4236f0:	ret
  4236f4:	ldr	x0, [x23, #560]
  4236f8:	mov	w1, w20
  4236fc:	bl	43fe10 <ferror@plt+0x3c840>
  423700:	mov	x22, x0
  423704:	ldr	x0, [x23, #560]
  423708:	mov	w1, w19
  42370c:	bl	43fe10 <ferror@plt+0x3c840>
  423710:	mov	x24, x0
  423714:	cmp	x22, x0
  423718:	b.ne	423754 <ferror@plt+0x20184>  // b.any
  42371c:	bl	43fd68 <ferror@plt+0x3c798>
  423720:	tst	w0, #0xff
  423724:	b.eq	423784 <ferror@plt+0x201b4>  // b.none
  423728:	ldr	x0, [x23, #560]
  42372c:	mov	w2, w20
  423730:	mov	x1, x22
  423734:	bl	43fd88 <ferror@plt+0x3c7b8>
  423738:	mov	w20, w0
  42373c:	ldr	x0, [x23, #560]
  423740:	mov	w2, w19
  423744:	mov	x1, x22
  423748:	bl	43fd88 <ferror@plt+0x3c7b8>
  42374c:	mov	w19, w0
  423750:	b	423694 <ferror@plt+0x200c4>
  423754:	mov	x0, x22
  423758:	bl	43fd68 <ferror@plt+0x3c798>
  42375c:	tst	w0, #0xff
  423760:	b.ne	4236dc <ferror@plt+0x2010c>  // b.any
  423764:	mov	x0, x24
  423768:	bl	43fd68 <ferror@plt+0x3c798>
  42376c:	tst	w0, #0xff
  423770:	b.ne	4236dc <ferror@plt+0x2010c>  // b.any
  423774:	ldr	x1, [x22, #8]
  423778:	ldr	x0, [x24, #8]
  42377c:	cmp	x1, x0
  423780:	b	4236d8 <ferror@plt+0x20108>
  423784:	mov	w21, #0x1                   	// #1
  423788:	b	4236dc <ferror@plt+0x2010c>
  42378c:	stp	w1, w2, [x0]
  423790:	cmp	w1, w2
  423794:	b.le	4237c4 <ferror@plt+0x201f4>
  423798:	sub	w1, w1, #0x1
  42379c:	cmp	w1, w2
  4237a0:	b.eq	4237c4 <ferror@plt+0x201f4>  // b.none
  4237a4:	stp	x29, x30, [sp, #-16]!
  4237a8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4237ac:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4237b0:	mov	x29, sp
  4237b4:	add	x2, x2, #0x3e6
  4237b8:	add	x0, x0, #0x3f3
  4237bc:	mov	w1, #0x6bc                 	// #1724
  4237c0:	bl	403600 <ferror@plt+0x30>
  4237c4:	ret
  4237c8:	stp	x29, x30, [sp, #-48]!
  4237cc:	mov	x29, sp
  4237d0:	stp	x19, x20, [sp, #16]
  4237d4:	mov	x19, x0
  4237d8:	ldrb	w0, [x0, #114]
  4237dc:	str	x21, [sp, #32]
  4237e0:	cbz	w0, 423848 <ferror@plt+0x20278>
  4237e4:	and	w21, w1, #0xff
  4237e8:	mov	w20, #0x0                   	// #0
  4237ec:	ldr	w1, [x19, #144]
  4237f0:	ldr	x0, [x19, #8]
  4237f4:	sub	w1, w1, #0x3
  4237f8:	cmp	w1, w20
  4237fc:	b.le	423810 <ferror@plt+0x20240>
  423800:	mov	w1, #0x20                  	// #32
  423804:	add	w20, w20, #0x1
  423808:	bl	428efc <ferror@plt+0x2592c>
  42380c:	b	4237ec <ferror@plt+0x2021c>
  423810:	ldr	w1, [x19, #144]
  423814:	ldr	x0, [x19, #8]
  423818:	cmp	w1, w20
  42381c:	b.le	423830 <ferror@plt+0x20260>
  423820:	mov	w1, w21
  423824:	add	w20, w20, #0x1
  423828:	bl	428efc <ferror@plt+0x2592c>
  42382c:	b	423810 <ferror@plt+0x20240>
  423830:	ldp	x19, x20, [sp, #16]
  423834:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  423838:	ldr	x21, [sp, #32]
  42383c:	add	x1, x1, #0xf2e
  423840:	ldp	x29, x30, [sp], #48
  423844:	b	4292a8 <ferror@plt+0x25cd8>
  423848:	ldp	x19, x20, [sp, #16]
  42384c:	ldr	x21, [sp, #32]
  423850:	ldp	x29, x30, [sp], #48
  423854:	ret
  423858:	stp	x29, x30, [sp, #-48]!
  42385c:	mov	x29, sp
  423860:	stp	x19, x20, [sp, #16]
  423864:	mov	x19, x0
  423868:	ldr	w0, [x0, #12]
  42386c:	str	x21, [sp, #32]
  423870:	cmp	w0, w1
  423874:	b.eq	423968 <ferror@plt+0x20398>  // b.none
  423878:	mov	w20, w1
  42387c:	cmn	w0, #0x1
  423880:	b.eq	423894 <ferror@plt+0x202c4>  // b.none
  423884:	ldr	x0, [x19]
  423888:	ldr	x1, [x19, #48]
  42388c:	ldr	x0, [x0]
  423890:	bl	4292a8 <ferror@plt+0x25cd8>
  423894:	str	w20, [x19, #12]
  423898:	add	w1, w20, #0x3
  42389c:	cmp	w1, #0x5
  4238a0:	b.hi	423934 <ferror@plt+0x20364>  // b.pmore
  4238a4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4238a8:	add	x0, x0, #0x54c
  4238ac:	ldrb	w0, [x0, w1, uxtw]
  4238b0:	adr	x1, 4238bc <ferror@plt+0x202ec>
  4238b4:	add	x0, x1, w0, sxtb #2
  4238b8:	br	x0
  4238bc:	ldr	x0, [x19]
  4238c0:	ldr	x1, [x19, #32]
  4238c4:	ldr	x0, [x0]
  4238c8:	b	42390c <ferror@plt+0x2033c>
  4238cc:	ldr	x0, [x19]
  4238d0:	ldr	x1, [x19, #40]
  4238d4:	b	4238c4 <ferror@plt+0x202f4>
  4238d8:	ldr	x0, [x19]
  4238dc:	ldr	x20, [x0]
  4238e0:	ldr	w0, [x19, #8]
  4238e4:	ldrb	w21, [x20, #67]
  4238e8:	bl	420e80 <ferror@plt+0x1d8b0>
  4238ec:	mov	x19, x0
  4238f0:	bl	402d50 <strlen@plt>
  4238f4:	mov	x2, x0
  4238f8:	mov	x1, x19
  4238fc:	mov	w0, w21
  423900:	bl	4234c4 <ferror@plt+0x1fef4>
  423904:	mov	x1, x0
  423908:	mov	x0, x20
  42390c:	ldp	x19, x20, [sp, #16]
  423910:	ldr	x21, [sp, #32]
  423914:	ldp	x29, x30, [sp], #48
  423918:	b	4292a8 <ferror@plt+0x25cd8>
  42391c:	ldr	x0, [x19]
  423920:	ldr	x1, [x19, #16]
  423924:	b	4238c4 <ferror@plt+0x202f4>
  423928:	ldr	x0, [x19]
  42392c:	ldr	x1, [x19, #24]
  423930:	b	4238c4 <ferror@plt+0x202f4>
  423934:	cmp	w20, #0x2
  423938:	b.gt	423954 <ferror@plt+0x20384>
  42393c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423940:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423944:	add	x2, x2, #0x415
  423948:	add	x0, x0, #0x3f3
  42394c:	mov	w1, #0x17f                 	// #383
  423950:	bl	403600 <ferror@plt+0x30>
  423954:	ldp	x2, x1, [x19, #16]
  423958:	tst	x20, #0x1
  42395c:	ldr	x0, [x19]
  423960:	csel	x1, x2, x1, ne  // ne = any
  423964:	b	4238c4 <ferror@plt+0x202f4>
  423968:	ldp	x19, x20, [sp, #16]
  42396c:	ldr	x21, [sp, #32]
  423970:	ldp	x29, x30, [sp], #48
  423974:	ret
  423978:	mov	w1, #0xffffffff            	// #-1
  42397c:	b	423858 <ferror@plt+0x20288>
  423980:	stp	x29, x30, [sp, #-32]!
  423984:	mov	x29, sp
  423988:	str	x19, [sp, #16]
  42398c:	mov	x19, x0
  423990:	add	x0, x0, #0x38
  423994:	bl	423978 <ferror@plt+0x203a8>
  423998:	ldr	x0, [x19, #8]
  42399c:	ldr	x19, [sp, #16]
  4239a0:	ldp	x29, x30, [sp], #32
  4239a4:	b	428ea0 <ferror@plt+0x258d0>
  4239a8:	stp	x29, x30, [sp, #-48]!
  4239ac:	mov	x29, sp
  4239b0:	stp	x19, x20, [sp, #16]
  4239b4:	mov	x19, x1
  4239b8:	ldr	w1, [x1]
  4239bc:	stp	x21, x22, [sp, #32]
  4239c0:	mov	x20, x0
  4239c4:	mov	w21, w2
  4239c8:	cmp	w1, w2
  4239cc:	b.le	4239f0 <ferror@plt+0x20420>
  4239d0:	and	w22, w3, #0xff
  4239d4:	bl	423980 <ferror@plt+0x203b0>
  4239d8:	cbz	w22, 4239e8 <ferror@plt+0x20418>
  4239dc:	mov	x0, x20
  4239e0:	mov	w1, #0x20                  	// #32
  4239e4:	bl	4237c8 <ferror@plt+0x201f8>
  4239e8:	ldr	w0, [x20, #148]
  4239ec:	str	w0, [x19]
  4239f0:	ldr	w0, [x19]
  4239f4:	cmp	w0, w21
  4239f8:	b.ge	423a14 <ferror@plt+0x20444>  // b.tcont
  4239fc:	ldr	x0, [x20, #8]
  423a00:	mov	w1, #0x20                  	// #32
  423a04:	bl	428efc <ferror@plt+0x2592c>
  423a08:	ldr	w0, [x19]
  423a0c:	add	w0, w0, #0x1
  423a10:	b	4239ec <ferror@plt+0x2041c>
  423a14:	ldp	x19, x20, [sp, #16]
  423a18:	ldp	x21, x22, [sp, #32]
  423a1c:	ldp	x29, x30, [sp], #48
  423a20:	ret
  423a24:	cbnz	x0, 423a38 <ferror@plt+0x20468>
  423a28:	cmp	w1, #0x4
  423a2c:	mov	w0, #0x4                   	// #4
  423a30:	csel	w0, w1, w0, cs  // cs = hs, nlast
  423a34:	ret
  423a38:	ldr	w2, [x0, #4]
  423a3c:	ldr	w0, [x0]
  423a40:	add	w1, w1, w2
  423a44:	and	w0, w0, #0x7fffffff
  423a48:	b	41e438 <ferror@plt+0x1ae68>
  423a4c:	stp	x29, x30, [sp, #-16]!
  423a50:	mov	x29, sp
  423a54:	tbz	w1, #31, 423a70 <ferror@plt+0x204a0>
  423a58:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423a5c:	add	x2, x2, #0x421
  423a60:	mov	w1, #0x705                 	// #1797
  423a64:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423a68:	add	x0, x0, #0x3f3
  423a6c:	bl	403600 <ferror@plt+0x30>
  423a70:	mov	x3, x2
  423a74:	sxtw	x4, w1
  423a78:	ldr	x2, [x2, #8]
  423a7c:	ldr	x5, [x0, #32]
  423a80:	add	x1, x2, w1, sxtw
  423a84:	cmp	x1, x5
  423a88:	b.cc	423a9c <ferror@plt+0x204cc>  // b.lo, b.ul, b.last
  423a8c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423a90:	mov	w1, #0x706                 	// #1798
  423a94:	add	x2, x2, #0x421
  423a98:	b	423a64 <ferror@plt+0x20494>
  423a9c:	ldp	x29, x30, [sp], #16
  423aa0:	ldr	x1, [x3]
  423aa4:	ldr	x0, [x0, #16]
  423aa8:	add	x0, x0, x4
  423aac:	b	402cd0 <memcpy@plt>
  423ab0:	ldr	x3, [x0, #136]
  423ab4:	mov	w2, #0x0                   	// #0
  423ab8:	add	x0, x3, #0xc
  423abc:	cbz	x3, 423af0 <ferror@plt+0x20520>
  423ac0:	ldr	w4, [x3, #4]
  423ac4:	cmp	w2, w4
  423ac8:	b.ge	423af0 <ferror@plt+0x20520>  // b.tcont
  423acc:	ldur	w4, [x0, #-4]
  423ad0:	cmp	w1, w4
  423ad4:	b.cc	423ae4 <ferror@plt+0x20514>  // b.lo, b.ul, b.last
  423ad8:	ldr	w4, [x0]
  423adc:	cmp	w1, w4
  423ae0:	b.ls	423af8 <ferror@plt+0x20528>  // b.plast
  423ae4:	add	w2, w2, #0x1
  423ae8:	add	x0, x0, #0x8
  423aec:	b	423abc <ferror@plt+0x204ec>
  423af0:	mov	w0, #0x0                   	// #0
  423af4:	ret
  423af8:	mov	w0, #0x1                   	// #1
  423afc:	b	423af4 <ferror@plt+0x20524>
  423b00:	ldr	x7, [x0, #120]
  423b04:	mov	x0, #0x0                   	// #0
  423b08:	add	x6, x7, #0x8
  423b0c:	cbz	x7, 423c6c <ferror@plt+0x2069c>
  423b10:	ldr	w8, [x7, #4]
  423b14:	cmp	w8, w0
  423b18:	b.ls	423c6c <ferror@plt+0x2069c>  // b.plast
  423b1c:	ldr	w10, [x6, #16]
  423b20:	cmp	w10, #0x2
  423b24:	b.ne	423c74 <ferror@plt+0x206a4>  // b.any
  423b28:	add	w0, w0, #0x1
  423b2c:	add	x6, x6, #0x28
  423b30:	b	423b0c <ferror@plt+0x2053c>
  423b34:	add	w0, w0, #0x1
  423b38:	add	x6, x6, #0x28
  423b3c:	cbz	x7, 423c54 <ferror@plt+0x20684>
  423b40:	ldr	w8, [x7, #4]
  423b44:	cmp	w8, w0
  423b48:	b.ls	423c54 <ferror@plt+0x20684>  // b.plast
  423b4c:	ldr	w10, [x6, #16]
  423b50:	cmp	w10, #0x2
  423b54:	b.eq	423b34 <ferror@plt+0x20564>  // b.none
  423b58:	ldr	w9, [x6]
  423b5c:	ldr	w8, [x6, #8]
  423b60:	cmp	w9, w8
  423b64:	b.ls	423b80 <ferror@plt+0x205b0>  // b.plast
  423b68:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423b6c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423b70:	add	x2, x2, #0x42b
  423b74:	add	x0, x0, #0x3f3
  423b78:	mov	w1, #0x1d8                 	// #472
  423b7c:	bl	403600 <ferror@plt+0x30>
  423b80:	cmp	w1, w9
  423b84:	b.cc	423b34 <ferror@plt+0x20564>  // b.lo, b.ul, b.last
  423b88:	b.ne	423bbc <ferror@plt+0x205ec>  // b.any
  423b8c:	ldr	w9, [x6, #4]
  423b90:	cmp	w2, w9
  423b94:	b.lt	423b34 <ferror@plt+0x20564>  // b.tstop
  423b98:	cmp	w1, w8
  423b9c:	b.cc	423c14 <ferror@plt+0x20644>  // b.lo, b.ul, b.last
  423ba0:	b.eq	423c04 <ferror@plt+0x20634>  // b.none
  423ba4:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423ba8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423bac:	add	x2, x2, #0x42b
  423bb0:	add	x0, x0, #0x3f3
  423bb4:	mov	w1, #0x1f3                 	// #499
  423bb8:	bl	403600 <ferror@plt+0x30>
  423bbc:	cmp	w1, w8
  423bc0:	b.hi	423b34 <ferror@plt+0x20564>  // b.pmore
  423bc4:	b.cs	423be8 <ferror@plt+0x20618>  // b.hs, b.nlast
  423bc8:	cmp	w9, w8
  423bcc:	b.ne	423c14 <ferror@plt+0x20644>  // b.any
  423bd0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423bd4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423bd8:	add	x2, x2, #0x42b
  423bdc:	add	x0, x0, #0x3f3
  423be0:	mov	w1, #0x207                 	// #519
  423be4:	bl	403600 <ferror@plt+0x30>
  423be8:	b.eq	423c04 <ferror@plt+0x20634>  // b.none
  423bec:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423bf0:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423bf4:	add	x2, x2, #0x42b
  423bf8:	add	x0, x0, #0x3f3
  423bfc:	mov	w1, #0x20b                 	// #523
  423c00:	bl	403600 <ferror@plt+0x30>
  423c04:	ldr	w8, [x6, #12]
  423c08:	cmp	w2, w8
  423c0c:	cset	w8, le
  423c10:	cbz	w8, 423b34 <ferror@plt+0x20564>
  423c14:	str	w0, [x5]
  423c18:	strb	wzr, [x5, #4]
  423c1c:	cbnz	w10, 423c5c <ferror@plt+0x2068c>
  423c20:	mov	x6, #0x28                  	// #40
  423c24:	madd	x0, x0, x6, x7
  423c28:	ldr	w6, [x0, #28]
  423c2c:	cmp	w6, w1
  423c30:	b.ne	423c5c <ferror@plt+0x2068c>  // b.any
  423c34:	ldr	w0, [x0, #32]
  423c38:	cmp	w0, w2
  423c3c:	b.ne	423c5c <ferror@plt+0x2068c>  // b.any
  423c40:	mov	w0, #0x1                   	// #1
  423c44:	strb	w0, [x5, #4]
  423c48:	mov	w0, #0x1                   	// #1
  423c4c:	ldp	x29, x30, [sp], #16
  423c50:	ret
  423c54:	mov	w0, #0x0                   	// #0
  423c58:	b	423c4c <ferror@plt+0x2067c>
  423c5c:	cmp	w2, w3
  423c60:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  423c64:	cset	w0, le
  423c68:	b	423c4c <ferror@plt+0x2067c>
  423c6c:	mov	w0, #0x0                   	// #0
  423c70:	ret
  423c74:	stp	x29, x30, [sp, #-16]!
  423c78:	mov	x29, sp
  423c7c:	b	423b58 <ferror@plt+0x20588>
  423c80:	ldr	w2, [x0, #4]
  423c84:	ldr	w3, [x1, #4]
  423c88:	subs	x2, x2, x3
  423c8c:	b.ne	423ca8 <ferror@plt+0x206d8>  // b.any
  423c90:	ldr	w0, [x0]
  423c94:	ldr	w1, [x1]
  423c98:	subs	x1, x0, x1
  423c9c:	b.ne	423cb8 <ferror@plt+0x206e8>  // b.any
  423ca0:	mov	w0, #0x0                   	// #0
  423ca4:	ret
  423ca8:	cmp	x2, #0x1
  423cac:	mov	w0, #0x1                   	// #1
  423cb0:	cneg	w0, w0, lt  // lt = tstop
  423cb4:	b	423ca4 <ferror@plt+0x206d4>
  423cb8:	cmp	x1, #0x1
  423cbc:	mov	w0, #0x1                   	// #1
  423cc0:	b	423cb0 <ferror@plt+0x206e0>
  423cc4:	ldr	w2, [x0]
  423cc8:	ldr	w3, [x1]
  423ccc:	subs	x2, x2, x3
  423cd0:	b.ne	423cec <ferror@plt+0x2071c>  // b.any
  423cd4:	ldr	w0, [x0, #4]
  423cd8:	ldr	w1, [x1, #4]
  423cdc:	subs	x1, x0, x1
  423ce0:	b.ne	423cfc <ferror@plt+0x2072c>  // b.any
  423ce4:	mov	w0, #0x0                   	// #0
  423ce8:	ret
  423cec:	cmp	x2, #0x1
  423cf0:	mov	w0, #0x1                   	// #1
  423cf4:	cneg	w0, w0, lt  // lt = tstop
  423cf8:	b	423ce8 <ferror@plt+0x20718>
  423cfc:	cmp	x1, #0x1
  423d00:	mov	w0, #0x1                   	// #1
  423d04:	b	423cf4 <ferror@plt+0x20724>
  423d08:	stp	x29, x30, [sp, #-32]!
  423d0c:	mov	x29, sp
  423d10:	stp	x19, x20, [sp, #16]
  423d14:	mov	x20, x0
  423d18:	mov	x19, x1
  423d1c:	mov	x0, x1
  423d20:	bl	402d50 <strlen@plt>
  423d24:	ldr	x3, [x20]
  423d28:	mov	x1, x19
  423d2c:	ldp	x19, x20, [sp, #16]
  423d30:	mov	x2, x0
  423d34:	ldp	x29, x30, [sp], #32
  423d38:	ldrb	w0, [x3, #67]
  423d3c:	b	4234c4 <ferror@plt+0x1fef4>
  423d40:	stp	x29, x30, [sp, #-32]!
  423d44:	mov	x29, sp
  423d48:	str	x19, [sp, #16]
  423d4c:	mov	x19, x0
  423d50:	add	x0, x0, #0x88
  423d54:	bl	4235fc <ferror@plt+0x2002c>
  423d58:	ldr	x0, [x19, #128]
  423d5c:	cbz	x0, 423d6c <ferror@plt+0x2079c>
  423d60:	ldrsb	w1, [x0, #3]
  423d64:	tbz	w1, #31, 423da4 <ferror@plt+0x207d4>
  423d68:	str	wzr, [x0, #4]
  423d6c:	ldr	x0, [x19, #120]
  423d70:	cbz	x0, 423d80 <ferror@plt+0x207b0>
  423d74:	ldrsb	w1, [x0, #3]
  423d78:	tbz	w1, #31, 423dac <ferror@plt+0x207dc>
  423d7c:	str	wzr, [x0, #4]
  423d80:	ldr	w1, [x19, #68]
  423d84:	cmn	w1, #0x1
  423d88:	b.eq	423db4 <ferror@plt+0x207e4>  // b.none
  423d8c:	ldr	x2, [x19, #56]
  423d90:	ldr	x1, [x19, #104]
  423d94:	ldr	x19, [sp, #16]
  423d98:	ldp	x29, x30, [sp], #32
  423d9c:	ldr	x0, [x2]
  423da0:	b	4292a8 <ferror@plt+0x25cd8>
  423da4:	bl	4032a0 <free@plt>
  423da8:	b	423d6c <ferror@plt+0x2079c>
  423dac:	bl	4032a0 <free@plt>
  423db0:	b	423d80 <ferror@plt+0x207b0>
  423db4:	ldr	x19, [sp, #16]
  423db8:	ldp	x29, x30, [sp], #32
  423dbc:	ret
  423dc0:	stp	x29, x30, [sp, #-64]!
  423dc4:	and	w2, w2, #0xff
  423dc8:	mov	x29, sp
  423dcc:	stp	x23, x24, [sp, #48]
  423dd0:	ldr	x23, [x0]
  423dd4:	stp	x19, x20, [sp, #16]
  423dd8:	mov	x20, x0
  423ddc:	stp	x21, x22, [sp, #32]
  423de0:	cbz	x23, 423e00 <ferror@plt+0x20830>
  423de4:	ldp	w0, w21, [x23]
  423de8:	ubfx	x0, x0, #0, #31
  423dec:	sub	w0, w0, w21
  423df0:	cmp	w1, w0
  423df4:	b.hi	423e10 <ferror@plt+0x20840>  // b.pmore
  423df8:	mov	w19, #0x0                   	// #0
  423dfc:	b	423eac <ferror@plt+0x208dc>
  423e00:	mov	w19, #0x0                   	// #0
  423e04:	cbz	w1, 423eac <ferror@plt+0x208dc>
  423e08:	mov	w21, #0x0                   	// #0
  423e0c:	b	423e24 <ferror@plt+0x20854>
  423e10:	ldrsb	w0, [x23, #3]
  423e14:	tbz	w0, #31, 423e98 <ferror@plt+0x208c8>
  423e18:	add	w1, w1, w21
  423e1c:	mov	w19, #0x1                   	// #1
  423e20:	str	xzr, [x20]
  423e24:	ldr	x0, [x20]
  423e28:	bl	410018 <ferror@plt+0xca48>
  423e2c:	mov	w22, w0
  423e30:	mov	w1, #0x28                  	// #40
  423e34:	mov	x0, #0x8                   	// #8
  423e38:	umaddl	x1, w22, w1, x0
  423e3c:	ldr	x0, [x20]
  423e40:	cbz	x0, 423ea0 <ferror@plt+0x208d0>
  423e44:	ldr	w24, [x0, #4]
  423e48:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  423e4c:	str	x0, [x20]
  423e50:	and	w22, w22, #0x7fffffff
  423e54:	stp	w22, w24, [x0]
  423e58:	mov	x1, x0
  423e5c:	cbz	w19, 423ec4 <ferror@plt+0x208f4>
  423e60:	mov	w2, w21
  423e64:	mov	x0, #0x8                   	// #8
  423e68:	cbz	w2, 423ea8 <ferror@plt+0x208d8>
  423e6c:	add	x6, x23, x0
  423e70:	add	x3, x1, x0
  423e74:	sub	w2, w2, #0x1
  423e78:	add	x0, x0, #0x28
  423e7c:	ldp	x4, x5, [x6]
  423e80:	stp	x4, x5, [x3]
  423e84:	ldp	x4, x5, [x6, #16]
  423e88:	stp	x4, x5, [x3, #16]
  423e8c:	ldr	x4, [x6, #32]
  423e90:	str	x4, [x3, #32]
  423e94:	b	423e68 <ferror@plt+0x20898>
  423e98:	mov	w19, #0x0                   	// #0
  423e9c:	b	423e08 <ferror@plt+0x20838>
  423ea0:	mov	w24, #0x0                   	// #0
  423ea4:	b	423e48 <ferror@plt+0x20878>
  423ea8:	str	w21, [x1, #4]
  423eac:	mov	w0, w19
  423eb0:	ldp	x19, x20, [sp, #16]
  423eb4:	ldp	x21, x22, [sp, #32]
  423eb8:	ldp	x23, x24, [sp, #48]
  423ebc:	ldp	x29, x30, [sp], #64
  423ec0:	ret
  423ec4:	mov	w19, #0x1                   	// #1
  423ec8:	b	423eac <ferror@plt+0x208dc>
  423ecc:	stp	x29, x30, [sp, #-224]!
  423ed0:	mov	x29, sp
  423ed4:	stp	x19, x20, [sp, #16]
  423ed8:	mov	x19, x0
  423edc:	and	w0, w3, #0xff
  423ee0:	stp	x21, x22, [sp, #32]
  423ee4:	stp	x23, x24, [sp, #48]
  423ee8:	stp	x25, x26, [sp, #64]
  423eec:	stp	x27, x28, [sp, #80]
  423ef0:	stp	w2, w0, [sp, #120]
  423ef4:	cbnz	x1, 423f10 <ferror@plt+0x20940>
  423ef8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423efc:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  423f00:	add	x2, x2, #0x43a
  423f04:	add	x0, x0, #0x3f3
  423f08:	mov	w1, #0x39f                 	// #927
  423f0c:	bl	403600 <ferror@plt+0x30>
  423f10:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  423f14:	mov	x20, x1
  423f18:	ldr	w1, [x1]
  423f1c:	ldr	x0, [x0, #560]
  423f20:	bl	4400fc <ferror@plt+0x3cb2c>
  423f24:	mov	x26, x0
  423f28:	lsr	x24, x0, #32
  423f2c:	add	x8, sp, #0x80
  423f30:	mov	w1, #0x1                   	// #1
  423f34:	bl	42b730 <ferror@plt+0x28160>
  423f38:	add	x8, sp, #0xa0
  423f3c:	mov	w0, w24
  423f40:	mov	w1, #0x2                   	// #2
  423f44:	ldr	w28, [sp, #136]
  423f48:	bl	42b730 <ferror@plt+0x28160>
  423f4c:	ldr	w27, [sp, #168]
  423f50:	ldr	w0, [x20]
  423f54:	mov	w1, #0x0                   	// #0
  423f58:	add	x8, sp, #0xc0
  423f5c:	bl	42b730 <ferror@plt+0x28160>
  423f60:	ldr	x1, [x19, #24]
  423f64:	ldr	x0, [sp, #128]
  423f68:	cmp	x0, x1
  423f6c:	b.eq	423f90 <ferror@plt+0x209c0>  // b.none
  423f70:	mov	w0, #0x0                   	// #0
  423f74:	ldp	x19, x20, [sp, #16]
  423f78:	ldp	x21, x22, [sp, #32]
  423f7c:	ldp	x23, x24, [sp, #48]
  423f80:	ldp	x25, x26, [sp, #64]
  423f84:	ldp	x27, x28, [sp, #80]
  423f88:	ldp	x29, x30, [sp], #224
  423f8c:	ret
  423f90:	ldr	x1, [sp, #160]
  423f94:	cmp	x0, x1
  423f98:	b.ne	423f70 <ferror@plt+0x209a0>  // b.any
  423f9c:	ldr	w1, [x20, #4]
  423fa0:	cbnz	w1, 423fb0 <ferror@plt+0x209e0>
  423fa4:	ldr	x2, [sp, #192]
  423fa8:	cmp	x0, x2
  423fac:	b.ne	423f70 <ferror@plt+0x209a0>  // b.any
  423fb0:	ldr	x0, [x19, #120]
  423fb4:	ldr	w21, [sp, #200]
  423fb8:	cbnz	x0, 4240c8 <ferror@plt+0x20af8>
  423fbc:	ldr	w0, [x20, #4]
  423fc0:	cmp	w28, w27
  423fc4:	str	w0, [sp, #108]
  423fc8:	ldr	x0, [x20, #8]
  423fcc:	str	x0, [sp, #112]
  423fd0:	ldr	w22, [sp, #204]
  423fd4:	b.gt	424008 <ferror@plt+0x20a38>
  423fd8:	ldr	w1, [x19, #16]
  423fdc:	mov	w0, w26
  423fe0:	ldr	w25, [sp, #140]
  423fe4:	ldr	w23, [sp, #172]
  423fe8:	bl	423674 <ferror@plt+0x200a4>
  423fec:	tst	w0, #0xff
  423ff0:	b.eq	424008 <ferror@plt+0x20a38>  // b.none
  423ff4:	ldr	w1, [x19, #16]
  423ff8:	mov	w0, w24
  423ffc:	bl	423674 <ferror@plt+0x200a4>
  424000:	tst	w0, #0xff
  424004:	b.ne	4240f8 <ferror@plt+0x20b28>  // b.any
  424008:	ldr	x0, [x19, #120]
  42400c:	cbnz	x0, 4240ec <ferror@plt+0x20b1c>
  424010:	mov	w23, w22
  424014:	mov	w24, w21
  424018:	mov	w25, w22
  42401c:	mov	w26, w21
  424020:	ldr	w0, [sp, #124]
  424024:	cbz	w0, 42406c <ferror@plt+0x20a9c>
  424028:	mov	w1, w28
  42402c:	mov	x0, x19
  424030:	bl	423ab0 <ferror@plt+0x204e0>
  424034:	tst	w0, #0xff
  424038:	b.eq	423f70 <ferror@plt+0x209a0>  // b.none
  42403c:	mov	w1, w27
  424040:	mov	x0, x19
  424044:	bl	423ab0 <ferror@plt+0x204e0>
  424048:	tst	w0, #0xff
  42404c:	b.eq	423f70 <ferror@plt+0x209a0>  // b.none
  424050:	ldr	w0, [x20, #4]
  424054:	cbnz	w0, 42406c <ferror@plt+0x20a9c>
  424058:	mov	w1, w21
  42405c:	mov	x0, x19
  424060:	bl	423ab0 <ferror@plt+0x204e0>
  424064:	tst	w0, #0xff
  424068:	b.eq	423f70 <ferror@plt+0x209a0>  // b.none
  42406c:	mov	w2, #0x0                   	// #0
  424070:	mov	w1, #0x1                   	// #1
  424074:	add	x0, x19, #0x78
  424078:	bl	423dc0 <ferror@plt+0x207f0>
  42407c:	ldr	x2, [x19, #120]
  424080:	mov	w3, #0x28                  	// #40
  424084:	ldr	w1, [x2, #4]
  424088:	add	w0, w1, #0x1
  42408c:	str	w0, [x2, #4]
  424090:	mov	x0, #0x8                   	// #8
  424094:	umaddl	x1, w1, w3, x0
  424098:	add	x0, x2, x1
  42409c:	str	w26, [x2, x1]
  4240a0:	ldr	w1, [sp, #108]
  4240a4:	stp	w23, w1, [x0, #12]
  4240a8:	ldr	w1, [sp, #120]
  4240ac:	str	w1, [x0, #28]
  4240b0:	ldr	x1, [sp, #112]
  4240b4:	stp	w25, w24, [x0, #4]
  4240b8:	stp	w21, w22, [x0, #20]
  4240bc:	str	x1, [x0, #32]
  4240c0:	mov	w0, #0x1                   	// #1
  4240c4:	b	423f74 <ferror@plt+0x209a4>
  4240c8:	ldr	w0, [x0, #4]
  4240cc:	cbz	w0, 423fbc <ferror@plt+0x209ec>
  4240d0:	cbnz	w1, 423fbc <ferror@plt+0x209ec>
  4240d4:	ldr	w1, [x19, #16]
  4240d8:	ldr	w0, [x20]
  4240dc:	bl	423674 <ferror@plt+0x200a4>
  4240e0:	tst	w0, #0xff
  4240e4:	b.ne	423fbc <ferror@plt+0x209ec>  // b.any
  4240e8:	b	423f70 <ferror@plt+0x209a0>
  4240ec:	ldr	w0, [x0, #4]
  4240f0:	cbz	w0, 424010 <ferror@plt+0x20a40>
  4240f4:	b	423f70 <ferror@plt+0x209a0>
  4240f8:	mov	w24, w27
  4240fc:	mov	w26, w28
  424100:	b	424020 <ferror@plt+0x20a50>
  424104:	stp	x29, x30, [sp, #-64]!
  424108:	and	w2, w2, #0xff
  42410c:	mov	x29, sp
  424110:	stp	x23, x24, [sp, #48]
  424114:	ldr	x23, [x0]
  424118:	stp	x19, x20, [sp, #16]
  42411c:	mov	x20, x0
  424120:	stp	x21, x22, [sp, #32]
  424124:	cbz	x23, 424144 <ferror@plt+0x20b74>
  424128:	ldp	w0, w21, [x23]
  42412c:	ubfx	x0, x0, #0, #31
  424130:	sub	w0, w0, w21
  424134:	cmp	w1, w0
  424138:	b.hi	424154 <ferror@plt+0x20b84>  // b.pmore
  42413c:	mov	w19, #0x0                   	// #0
  424140:	b	4241d8 <ferror@plt+0x20c08>
  424144:	mov	w19, #0x0                   	// #0
  424148:	cbz	w1, 4241d8 <ferror@plt+0x20c08>
  42414c:	mov	w21, #0x0                   	// #0
  424150:	b	424168 <ferror@plt+0x20b98>
  424154:	ldrsb	w0, [x23, #3]
  424158:	tbz	w0, #31, 4241c4 <ferror@plt+0x20bf4>
  42415c:	add	w1, w1, w21
  424160:	mov	w19, #0x1                   	// #1
  424164:	str	xzr, [x20]
  424168:	ldr	x0, [x20]
  42416c:	bl	410018 <ferror@plt+0xca48>
  424170:	mov	w22, w0
  424174:	ldr	x0, [x20]
  424178:	ubfiz	x1, x22, #3, #32
  42417c:	add	x1, x1, #0x8
  424180:	cbz	x0, 4241cc <ferror@plt+0x20bfc>
  424184:	ldr	w24, [x0, #4]
  424188:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42418c:	str	x0, [x20]
  424190:	and	w22, w22, #0x7fffffff
  424194:	stp	w22, w24, [x0]
  424198:	mov	x1, x0
  42419c:	cbz	w19, 4241f0 <ferror@plt+0x20c20>
  4241a0:	mov	w3, w21
  4241a4:	mov	x0, #0x0                   	// #0
  4241a8:	add	x2, x0, #0x1
  4241ac:	cmp	x0, x3
  4241b0:	b.eq	4241d4 <ferror@plt+0x20c04>  // b.none
  4241b4:	ldr	x0, [x23, x2, lsl #3]
  4241b8:	str	x0, [x1, x2, lsl #3]
  4241bc:	mov	x0, x2
  4241c0:	b	4241a8 <ferror@plt+0x20bd8>
  4241c4:	mov	w19, #0x0                   	// #0
  4241c8:	b	42414c <ferror@plt+0x20b7c>
  4241cc:	mov	w24, #0x0                   	// #0
  4241d0:	b	424188 <ferror@plt+0x20bb8>
  4241d4:	str	w21, [x1, #4]
  4241d8:	mov	w0, w19
  4241dc:	ldp	x19, x20, [sp, #16]
  4241e0:	ldp	x21, x22, [sp, #32]
  4241e4:	ldp	x23, x24, [sp, #48]
  4241e8:	ldp	x29, x30, [sp], #64
  4241ec:	ret
  4241f0:	mov	w19, #0x1                   	// #1
  4241f4:	b	4241d8 <ferror@plt+0x20c08>
  4241f8:	stp	x29, x30, [sp, #-32]!
  4241fc:	mov	w2, #0x0                   	// #0
  424200:	mov	x29, sp
  424204:	stp	x19, x20, [sp, #16]
  424208:	mov	x20, x0
  42420c:	mov	x19, x1
  424210:	mov	w1, #0x1                   	// #1
  424214:	bl	424104 <ferror@plt+0x20b34>
  424218:	ldr	x2, [x20]
  42421c:	ldr	x3, [x19]
  424220:	ldr	w1, [x2, #4]
  424224:	ldp	x19, x20, [sp, #16]
  424228:	add	w0, w1, #0x1
  42422c:	ubfiz	x1, x1, #3, #32
  424230:	str	w0, [x2, #4]
  424234:	add	x0, x1, #0x8
  424238:	str	x3, [x2, x0]
  42423c:	add	x0, x2, x0
  424240:	ldp	x29, x30, [sp], #32
  424244:	ret
  424248:	stp	x29, x30, [sp, #-144]!
  42424c:	mov	x29, sp
  424250:	stp	x19, x20, [sp, #16]
  424254:	mov	x19, x0
  424258:	mov	x20, x1
  42425c:	stp	x21, x22, [sp, #32]
  424260:	mov	x21, x2
  424264:	stp	x23, x24, [sp, #48]
  424268:	mov	w23, w3
  42426c:	stp	x25, x26, [sp, #64]
  424270:	ldr	x0, [x1]
  424274:	stp	x1, x0, [x19]
  424278:	mov	x0, x2
  42427c:	mov	w1, #0x0                   	// #0
  424280:	str	x27, [sp, #80]
  424284:	bl	441198 <ferror@plt+0x3dbc8>
  424288:	ldr	w0, [x0]
  42428c:	str	w0, [x19, #16]
  424290:	add	x8, x19, #0x18
  424294:	mov	x0, x21
  424298:	mov	w1, #0x0                   	// #0
  42429c:	bl	4411c0 <ferror@plt+0x3dbf0>
  4242a0:	str	x20, [x19, #56]
  4242a4:	mov	w0, #0xffffffff            	// #-1
  4242a8:	stp	w23, w0, [x19, #64]
  4242ac:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4242b0:	mov	x0, x20
  4242b4:	add	x1, x1, #0x34b
  4242b8:	bl	423d08 <ferror@plt+0x20738>
  4242bc:	str	x0, [x19, #72]
  4242c0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4242c4:	ldr	x0, [x19, #56]
  4242c8:	add	x1, x1, #0x35b
  4242cc:	bl	423d08 <ferror@plt+0x20738>
  4242d0:	str	x0, [x19, #80]
  4242d4:	ldr	x0, [x19, #56]
  4242d8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4242dc:	add	x1, x1, #0x374
  4242e0:	bl	423d08 <ferror@plt+0x20738>
  4242e4:	str	x0, [x19, #88]
  4242e8:	ldr	x0, [x19, #56]
  4242ec:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4242f0:	add	x1, x1, #0x381
  4242f4:	bl	423d08 <ferror@plt+0x20738>
  4242f8:	str	x0, [x19, #96]
  4242fc:	ldr	x0, [x20]
  424300:	ldrb	w0, [x0, #67]
  424304:	bl	423544 <ferror@plt+0x1ff74>
  424308:	str	xzr, [x19, #120]
  42430c:	ldurh	w1, [x20, #221]
  424310:	strh	w1, [x19, #112]
  424314:	ldr	w1, [x21, #8]
  424318:	str	x0, [x19, #104]
  42431c:	ldrb	w0, [x20, #223]
  424320:	strb	w0, [x19, #114]
  424324:	cbz	w1, 424334 <ferror@plt+0x20d64>
  424328:	add	x0, x19, #0x78
  42432c:	mov	w2, #0x1                   	// #1
  424330:	bl	423dc0 <ferror@plt+0x207f0>
  424334:	ldr	w1, [x21, #120]
  424338:	add	x23, x19, #0x80
  42433c:	str	xzr, [x19, #128]
  424340:	cbz	w1, 424350 <ferror@plt+0x20d80>
  424344:	mov	x0, x23
  424348:	mov	w2, #0x1                   	// #1
  42434c:	bl	425b44 <ferror@plt+0x22574>
  424350:	ldr	w1, [x21, #8]
  424354:	add	x22, x19, #0x88
  424358:	str	xzr, [x19, #136]
  42435c:	adds	w1, w1, #0x1
  424360:	b.eq	424370 <ferror@plt+0x20da0>  // b.none
  424364:	mov	x0, x22
  424368:	mov	w2, #0x1                   	// #1
  42436c:	bl	424104 <ferror@plt+0x20b34>
  424370:	mov	w24, #0x0                   	// #0
  424374:	str	xzr, [x19, #144]
  424378:	ldr	w0, [x21, #8]
  42437c:	cmp	w24, w0
  424380:	b.cs	4243ac <ferror@plt+0x20ddc>  // b.hs, b.nlast
  424384:	mov	w1, w24
  424388:	mov	x0, x21
  42438c:	bl	441198 <ferror@plt+0x3dbc8>
  424390:	mov	x1, x0
  424394:	mov	w2, w24
  424398:	mov	x0, x19
  42439c:	mov	w3, #0x0                   	// #0
  4243a0:	add	w24, w24, #0x1
  4243a4:	bl	423ecc <ferror@plt+0x208fc>
  4243a8:	b	424378 <ferror@plt+0x20da8>
  4243ac:	add	x24, x21, #0x78
  4243b0:	mov	w26, #0x0                   	// #0
  4243b4:	mov	x25, #0xfffffffffffffff0    	// #-16
  4243b8:	ldr	w0, [x21, #120]
  4243bc:	cmp	w26, w0
  4243c0:	b.cs	424454 <ferror@plt+0x20e84>  // b.hs, b.nlast
  4243c4:	sxtw	x0, w26
  4243c8:	cmp	w26, #0x1
  4243cc:	b.gt	424444 <ferror@plt+0x20e74>
  4243d0:	add	x0, x0, #0x1
  4243d4:	add	x0, x24, x0, lsl #3
  4243d8:	ldr	x27, [x0]
  4243dc:	add	x8, sp, #0x70
  4243e0:	ldr	w0, [x27]
  4243e4:	bl	42b590 <ferror@plt+0x27fc0>
  4243e8:	ldr	x0, [x19, #24]
  4243ec:	ldr	x1, [sp, #112]
  4243f0:	cmp	x1, x0
  4243f4:	b.ne	42443c <ferror@plt+0x20e6c>  // b.any
  4243f8:	ldr	w0, [x27, #4]
  4243fc:	add	x8, sp, #0x70
  424400:	bl	42b590 <ferror@plt+0x27fc0>
  424404:	ldr	x0, [x19, #24]
  424408:	ldr	x1, [sp, #112]
  42440c:	cmp	x1, x0
  424410:	b.ne	42443c <ferror@plt+0x20e6c>  // b.any
  424414:	mov	w2, #0x0                   	// #0
  424418:	mov	w1, #0x1                   	// #1
  42441c:	mov	x0, x23
  424420:	bl	425b44 <ferror@plt+0x22574>
  424424:	ldr	x1, [x19, #128]
  424428:	ldr	w0, [x1, #4]
  42442c:	add	w2, w0, #0x1
  424430:	str	w2, [x1, #4]
  424434:	add	x0, x1, w0, uxtw #3
  424438:	str	x27, [x0, #8]
  42443c:	add	w26, w26, #0x1
  424440:	b	4243b8 <ferror@plt+0x20de8>
  424444:	ldr	x1, [x24, #32]
  424448:	add	x0, x25, w26, sxtw #3
  42444c:	add	x0, x1, x0
  424450:	b	4243d8 <ferror@plt+0x20e08>
  424454:	ldr	x0, [x19, #128]
  424458:	cbz	x0, 424480 <ferror@plt+0x20eb0>
  42445c:	ldr	w1, [x0, #4]
  424460:	cmp	w1, #0x1
  424464:	b.ls	424480 <ferror@plt+0x20eb0>  // b.plast
  424468:	adrp	x3, 423000 <ferror@plt+0x1fa30>
  42446c:	mov	x2, #0x8                   	// #8
  424470:	add	x3, x3, #0x5e4
  424474:	mov	w1, w1
  424478:	add	x0, x0, x2
  42447c:	bl	42d9a0 <ferror@plt+0x2a3d0>
  424480:	ldr	x0, [x19, #136]
  424484:	cbz	x0, 4244a8 <ferror@plt+0x20ed8>
  424488:	ldr	w0, [x0, #4]
  42448c:	cbz	w0, 4244a8 <ferror@plt+0x20ed8>
  424490:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424494:	add	x2, x2, #0x453
  424498:	mov	w1, #0x49b                 	// #1179
  42449c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4244a0:	add	x0, x0, #0x3f3
  4244a4:	bl	403600 <ferror@plt+0x30>
  4244a8:	ldr	x0, [x19, #120]
  4244ac:	cbz	x0, 424520 <ferror@plt+0x20f50>
  4244b0:	ldr	w1, [x0, #4]
  4244b4:	str	xzr, [sp, #104]
  4244b8:	adds	w1, w1, #0x1
  4244bc:	b.eq	4244cc <ferror@plt+0x20efc>  // b.none
  4244c0:	add	x0, sp, #0x68
  4244c4:	mov	w2, #0x1                   	// #1
  4244c8:	bl	424104 <ferror@plt+0x20b34>
  4244cc:	ldr	w0, [x19, #32]
  4244d0:	add	x1, sp, #0x70
  4244d4:	mov	w21, #0x0                   	// #0
  4244d8:	mov	w23, #0x28                  	// #40
  4244dc:	stp	w0, w0, [sp, #112]
  4244e0:	add	x0, sp, #0x68
  4244e4:	bl	4241f8 <ferror@plt+0x20c28>
  4244e8:	ldr	x0, [x19, #120]
  4244ec:	cbz	x0, 424540 <ferror@plt+0x20f70>
  4244f0:	ldr	w1, [x0, #4]
  4244f4:	cmp	w21, w1
  4244f8:	b.cs	424540 <ferror@plt+0x20f70>  // b.hs, b.nlast
  4244fc:	umaddl	x0, w21, w23, x0
  424500:	ldr	w1, [x0, #8]
  424504:	ldr	w0, [x0, #16]
  424508:	cmp	w1, w0
  42450c:	b.ls	424528 <ferror@plt+0x20f58>  // b.plast
  424510:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424514:	mov	w1, #0x4a4                 	// #1188
  424518:	add	x2, x2, #0x453
  42451c:	b	42449c <ferror@plt+0x20ecc>
  424520:	mov	w1, #0x0                   	// #0
  424524:	b	4244b4 <ferror@plt+0x20ee4>
  424528:	add	w21, w21, #0x1
  42452c:	stp	w1, w0, [sp, #112]
  424530:	add	x1, sp, #0x70
  424534:	add	x0, sp, #0x68
  424538:	bl	4241f8 <ferror@plt+0x20c28>
  42453c:	b	4244e8 <ferror@plt+0x20f18>
  424540:	mov	w23, #0x0                   	// #0
  424544:	ldr	x0, [x19, #128]
  424548:	cbz	x0, 4245e0 <ferror@plt+0x21010>
  42454c:	ldr	w1, [x0, #4]
  424550:	cmp	w1, w23
  424554:	b.ls	4245e0 <ferror@plt+0x21010>  // b.plast
  424558:	add	x0, x0, w23, uxtw #3
  42455c:	ldr	x24, [x0, #8]
  424560:	cbnz	x24, 424574 <ferror@plt+0x20fa4>
  424564:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424568:	mov	w1, #0x4ad                 	// #1197
  42456c:	add	x2, x2, #0x453
  424570:	b	42449c <ferror@plt+0x20ecc>
  424574:	ldr	w0, [x24]
  424578:	add	x8, sp, #0x70
  42457c:	bl	42b590 <ferror@plt+0x27fc0>
  424580:	ldr	w21, [sp, #120]
  424584:	mov	x0, x24
  424588:	bl	441628 <ferror@plt+0x3e058>
  42458c:	tst	w0, #0xff
  424590:	b.eq	4245a0 <ferror@plt+0x20fd0>  // b.none
  424594:	cmp	w21, #0x1
  424598:	cset	w0, gt
  42459c:	sub	w21, w21, w0
  4245a0:	ldr	w0, [x24, #4]
  4245a4:	add	x8, sp, #0x70
  4245a8:	bl	42b590 <ferror@plt+0x27fc0>
  4245ac:	ldr	w0, [sp, #120]
  4245b0:	cmp	w21, w0
  4245b4:	b.ls	4245c8 <ferror@plt+0x20ff8>  // b.plast
  4245b8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4245bc:	mov	w1, #0xa5                  	// #165
  4245c0:	add	x2, x2, #0x468
  4245c4:	b	42449c <ferror@plt+0x20ecc>
  4245c8:	add	x1, sp, #0x70
  4245cc:	add	w23, w23, #0x1
  4245d0:	stp	w21, w0, [sp, #112]
  4245d4:	add	x0, sp, #0x68
  4245d8:	bl	4241f8 <ferror@plt+0x20c28>
  4245dc:	b	424544 <ferror@plt+0x20f74>
  4245e0:	ldr	x0, [sp, #104]
  4245e4:	cbz	x0, 42460c <ferror@plt+0x2103c>
  4245e8:	ldr	w1, [x0, #4]
  4245ec:	cmp	w1, #0x1
  4245f0:	b.ls	42460c <ferror@plt+0x2103c>  // b.plast
  4245f4:	adrp	x3, 423000 <ferror@plt+0x1fa30>
  4245f8:	mov	x2, #0x8                   	// #8
  4245fc:	add	x3, x3, #0xcc4
  424600:	mov	w1, w1
  424604:	add	x0, x0, x2
  424608:	bl	42d9a0 <ferror@plt+0x2a3d0>
  42460c:	ldr	x1, [sp, #104]
  424610:	cbz	x1, 42461c <ferror@plt+0x2104c>
  424614:	ldr	w0, [x1, #4]
  424618:	cbnz	w0, 42462c <ferror@plt+0x2105c>
  42461c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424620:	mov	w1, #0x4b6                 	// #1206
  424624:	add	x2, x2, #0x453
  424628:	b	42449c <ferror@plt+0x20ecc>
  42462c:	mov	w21, #0x1                   	// #1
  424630:	add	x1, x1, #0x8
  424634:	mov	x0, x22
  424638:	bl	4241f8 <ferror@plt+0x20c28>
  42463c:	ldr	x3, [sp, #104]
  424640:	ldr	x0, [x19, #136]
  424644:	cbz	x3, 4246dc <ferror@plt+0x2110c>
  424648:	ldr	w1, [x3, #4]
  42464c:	cmp	w1, w21
  424650:	b.ls	4246dc <ferror@plt+0x2110c>  // b.plast
  424654:	cbz	x0, 42468c <ferror@plt+0x210bc>
  424658:	ldr	w2, [x0, #4]
  42465c:	sub	w2, w2, #0x1
  424660:	add	x5, x3, w21, uxtw #3
  424664:	mov	w1, w21
  424668:	add	x0, x0, x2, lsl #3
  42466c:	ldr	w6, [x5, #8]
  424670:	ldr	w2, [x0, #8]
  424674:	cmp	w6, w2
  424678:	b.cs	424694 <ferror@plt+0x210c4>  // b.hs, b.nlast
  42467c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424680:	mov	w1, #0x4bc                 	// #1212
  424684:	add	x2, x2, #0x453
  424688:	b	42449c <ferror@plt+0x20ecc>
  42468c:	mov	w2, #0x0                   	// #0
  424690:	b	42465c <ferror@plt+0x2108c>
  424694:	ldr	w4, [x0, #12]
  424698:	ldrb	w7, [x19, #114]
  42469c:	mov	w2, w4
  4246a0:	add	x2, x2, #0x1
  4246a4:	add	x2, x2, x7
  4246a8:	cmp	x2, w6, uxtw
  4246ac:	b.lt	4246c8 <ferror@plt+0x210f8>  // b.tstop
  4246b0:	ldr	w1, [x5, #12]
  4246b4:	cmp	w4, w1
  4246b8:	b.cs	4246c0 <ferror@plt+0x210f0>  // b.hs, b.nlast
  4246bc:	str	w1, [x0, #12]
  4246c0:	add	w21, w21, #0x1
  4246c4:	b	42463c <ferror@plt+0x2106c>
  4246c8:	add	x1, x1, #0x1
  4246cc:	mov	x0, x22
  4246d0:	add	x1, x3, x1, lsl #3
  4246d4:	bl	4241f8 <ferror@plt+0x20c28>
  4246d8:	b	4246c0 <ferror@plt+0x210f0>
  4246dc:	cbz	x0, 424714 <ferror@plt+0x21144>
  4246e0:	ldr	w4, [x0, #4]
  4246e4:	cbz	w4, 424714 <ferror@plt+0x21144>
  4246e8:	add	x0, x0, #0x8
  4246ec:	mov	w2, #0x1                   	// #1
  4246f0:	cmp	w4, w2
  4246f4:	b.eq	424780 <ferror@plt+0x211b0>  // b.none
  4246f8:	ldp	w5, w1, [x0]
  4246fc:	cmp	w5, w1
  424700:	b.ls	424724 <ferror@plt+0x21154>  // b.plast
  424704:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424708:	mov	w1, #0x4d3                 	// #1235
  42470c:	add	x2, x2, #0x453
  424710:	b	42449c <ferror@plt+0x20ecc>
  424714:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424718:	mov	w1, #0x4cd                 	// #1229
  42471c:	add	x2, x2, #0x453
  424720:	b	42449c <ferror@plt+0x20ecc>
  424724:	ldp	w3, w6, [x0, #8]
  424728:	cmp	w3, w6
  42472c:	b.ls	424740 <ferror@plt+0x21170>  // b.plast
  424730:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424734:	mov	w1, #0x4d4                 	// #1236
  424738:	add	x2, x2, #0x453
  42473c:	b	42449c <ferror@plt+0x20ecc>
  424740:	cmp	w5, w3
  424744:	b.cc	424758 <ferror@plt+0x21188>  // b.lo, b.ul, b.last
  424748:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42474c:	mov	w1, #0x4d6                 	// #1238
  424750:	add	x2, x2, #0x453
  424754:	b	42449c <ferror@plt+0x20ecc>
  424758:	add	w1, w1, #0x1
  42475c:	add	x0, x0, #0x8
  424760:	cmp	w3, w1
  424764:	b.hi	424778 <ferror@plt+0x211a8>  // b.pmore
  424768:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42476c:	mov	w1, #0x4d8                 	// #1240
  424770:	add	x2, x2, #0x453
  424774:	b	42449c <ferror@plt+0x20ecc>
  424778:	add	w2, w2, #0x1
  42477c:	b	4246f0 <ferror@plt+0x21120>
  424780:	add	x0, sp, #0x68
  424784:	bl	4235fc <ferror@plt+0x2002c>
  424788:	ldr	x1, [x19, #136]
  42478c:	cbz	x1, 424798 <ferror@plt+0x211c8>
  424790:	ldr	w0, [x1, #4]
  424794:	cbnz	w0, 4247a8 <ferror@plt+0x211d8>
  424798:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42479c:	mov	w1, #0x36a                 	// #874
  4247a0:	add	x2, x2, #0x472
  4247a4:	b	42449c <ferror@plt+0x20ecc>
  4247a8:	sub	w0, w0, #0x1
  4247ac:	add	x0, x1, x0, lsl #3
  4247b0:	ldr	w0, [x0, #12]
  4247b4:	cmp	w0, #0x0
  4247b8:	csel	w0, w0, wzr, ge  // ge = tcont
  4247bc:	bl	4229ac <ferror@plt+0x1f3dc>
  4247c0:	str	w0, [x19, #144]
  4247c4:	ldr	x1, [x19, #136]
  4247c8:	cbz	x1, 4247e8 <ferror@plt+0x21218>
  4247cc:	ldr	w1, [x1, #4]
  4247d0:	cmp	w1, #0x1
  4247d4:	b.ls	4247e8 <ferror@plt+0x21218>  // b.plast
  4247d8:	cmp	w0, #0x3
  4247dc:	mov	w1, #0x3                   	// #3
  4247e0:	csel	w0, w0, w1, ge  // ge = tcont
  4247e4:	str	w0, [x19, #144]
  4247e8:	ldr	w0, [x19, #144]
  4247ec:	ldr	w1, [x20, #224]
  4247f0:	cmp	w1, w0
  4247f4:	b.le	4247fc <ferror@plt+0x2122c>
  4247f8:	sub	w0, w1, #0x1
  4247fc:	str	w0, [x19, #144]
  424800:	ldr	x0, [x19]
  424804:	ldr	w1, [x19, #32]
  424808:	ldrsw	x21, [x0, #112]
  42480c:	ldr	x0, [x19, #24]
  424810:	bl	42c17c <ferror@plt+0x28bac>
  424814:	cbz	x0, 42487c <ferror@plt+0x212ac>
  424818:	ldrsw	x0, [x19, #36]
  42481c:	cmp	x1, x0
  424820:	b.cc	42487c <ferror@plt+0x212ac>  // b.lo, b.ul, b.last
  424824:	ldrb	w2, [x19, #114]
  424828:	cbz	w2, 424838 <ferror@plt+0x21268>
  42482c:	ldr	w2, [x19, #144]
  424830:	add	w2, w2, #0x2
  424834:	add	x0, x0, w2, sxtw
  424838:	sub	x2, x1, x0
  42483c:	mov	x3, #0xa                   	// #10
  424840:	cmp	x2, #0xa
  424844:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  424848:	cmp	x1, x21
  42484c:	b.cc	424864 <ferror@plt+0x21294>  // b.lo, b.ul, b.last
  424850:	sub	x2, x21, x2
  424854:	cmp	x0, x2
  424858:	b.ls	424864 <ferror@plt+0x21294>  // b.plast
  42485c:	sub	w0, w0, w2
  424860:	str	w0, [x19, #148]
  424864:	ldr	w0, [x19, #148]
  424868:	tbz	w0, #31, 42487c <ferror@plt+0x212ac>
  42486c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424870:	mov	w1, #0x386                 	// #902
  424874:	add	x2, x2, #0x472
  424878:	b	42449c <ferror@plt+0x20ecc>
  42487c:	ldrb	w0, [x20, #228]
  424880:	cbz	w0, 4249a8 <ferror@plt+0x213d8>
  424884:	ldr	w0, [x19, #148]
  424888:	add	w21, w0, w21
  42488c:	cmp	w21, #0x63
  424890:	b.le	4248fc <ferror@plt+0x2132c>
  424894:	mov	x0, x19
  424898:	mov	w1, #0x20                  	// #32
  42489c:	bl	4237c8 <ferror@plt+0x201f8>
  4248a0:	mov	w22, #0xa                   	// #10
  4248a4:	ldr	x0, [x19, #8]
  4248a8:	mov	w1, #0x20                  	// #32
  4248ac:	mov	w23, #0x64                  	// #100
  4248b0:	bl	428efc <ferror@plt+0x2592c>
  4248b4:	ldr	w20, [x19, #148]
  4248b8:	add	w20, w20, #0x1
  4248bc:	cmp	w21, w20
  4248c0:	ldr	x0, [x19, #8]
  4248c4:	b.lt	4248f8 <ferror@plt+0x21328>  // b.tstop
  4248c8:	sdiv	w1, w20, w22
  4248cc:	msub	w1, w1, w22, w20
  4248d0:	cbnz	w1, 4248f0 <ferror@plt+0x21320>
  4248d4:	sdiv	w2, w20, w23
  4248d8:	sdiv	w1, w2, w22
  4248dc:	msub	w1, w1, w22, w2
  4248e0:	add	w1, w1, #0x30
  4248e4:	add	w20, w20, #0x1
  4248e8:	bl	428efc <ferror@plt+0x2592c>
  4248ec:	b	4248bc <ferror@plt+0x212ec>
  4248f0:	mov	w1, #0x20                  	// #32
  4248f4:	b	4248e4 <ferror@plt+0x21314>
  4248f8:	bl	428ea0 <ferror@plt+0x258d0>
  4248fc:	mov	x0, x19
  424900:	mov	w1, #0x20                  	// #32
  424904:	bl	4237c8 <ferror@plt+0x201f8>
  424908:	mov	w22, #0xa                   	// #10
  42490c:	ldr	x0, [x19, #8]
  424910:	mov	w1, #0x20                  	// #32
  424914:	bl	428efc <ferror@plt+0x2592c>
  424918:	ldr	w20, [x19, #148]
  42491c:	add	w20, w20, #0x1
  424920:	cmp	w21, w20
  424924:	ldr	x0, [x19, #8]
  424928:	b.lt	424958 <ferror@plt+0x21388>  // b.tstop
  42492c:	sdiv	w2, w20, w22
  424930:	msub	w1, w2, w22, w20
  424934:	cbnz	w1, 424950 <ferror@plt+0x21380>
  424938:	sdiv	w1, w2, w22
  42493c:	msub	w1, w1, w22, w2
  424940:	add	w1, w1, #0x30
  424944:	add	w20, w20, #0x1
  424948:	bl	428efc <ferror@plt+0x2592c>
  42494c:	b	424920 <ferror@plt+0x21350>
  424950:	mov	w1, #0x20                  	// #32
  424954:	b	424944 <ferror@plt+0x21374>
  424958:	bl	428ea0 <ferror@plt+0x258d0>
  42495c:	mov	w22, #0xa                   	// #10
  424960:	mov	x0, x19
  424964:	mov	w1, #0x20                  	// #32
  424968:	bl	4237c8 <ferror@plt+0x201f8>
  42496c:	ldr	x0, [x19, #8]
  424970:	mov	w1, #0x20                  	// #32
  424974:	bl	428efc <ferror@plt+0x2592c>
  424978:	ldr	w20, [x19, #148]
  42497c:	add	w20, w20, #0x1
  424980:	cmp	w21, w20
  424984:	ldr	x0, [x19, #8]
  424988:	b.lt	4249a4 <ferror@plt+0x213d4>  // b.tstop
  42498c:	sdiv	w1, w20, w22
  424990:	msub	w1, w1, w22, w20
  424994:	add	w20, w20, #0x1
  424998:	add	w1, w1, #0x30
  42499c:	bl	428efc <ferror@plt+0x2592c>
  4249a0:	b	424980 <ferror@plt+0x213b0>
  4249a4:	bl	428ea0 <ferror@plt+0x258d0>
  4249a8:	ldp	x19, x20, [sp, #16]
  4249ac:	ldp	x21, x22, [sp, #32]
  4249b0:	ldp	x23, x24, [sp, #48]
  4249b4:	ldp	x25, x26, [sp, #64]
  4249b8:	ldr	x27, [sp, #80]
  4249bc:	ldp	x29, x30, [sp], #144
  4249c0:	ret
  4249c4:	stp	x29, x30, [sp, #-224]!
  4249c8:	mov	x2, x0
  4249cc:	mov	w3, #0x4                   	// #4
  4249d0:	mov	x29, sp
  4249d4:	stp	x19, x20, [sp, #16]
  4249d8:	mov	x20, x0
  4249dc:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4249e0:	stp	x21, x22, [sp, #32]
  4249e4:	mov	w21, w1
  4249e8:	mov	w22, #0x1                   	// #1
  4249ec:	ldr	x1, [x0, #784]
  4249f0:	add	x0, sp, #0x48
  4249f4:	bl	424248 <ferror@plt+0x20c78>
  4249f8:	stp	w21, w22, [sp, #56]
  4249fc:	mov	w3, w22
  424a00:	add	x1, sp, #0x38
  424a04:	add	x0, sp, #0x48
  424a08:	mov	w2, #0x0                   	// #0
  424a0c:	bl	423ecc <ferror@plt+0x208fc>
  424a10:	mov	w19, w0
  424a14:	tst	w0, #0xff
  424a18:	b.eq	424a30 <ferror@plt+0x21460>  // b.none
  424a1c:	mov	w2, w22
  424a20:	mov	w1, w21
  424a24:	mov	x0, x20
  424a28:	mov	x3, #0x0                   	// #0
  424a2c:	bl	441258 <ferror@plt+0x3dc88>
  424a30:	add	x0, sp, #0x48
  424a34:	bl	423d40 <ferror@plt+0x20770>
  424a38:	mov	w0, w19
  424a3c:	ldp	x19, x20, [sp, #16]
  424a40:	ldp	x21, x22, [sp, #32]
  424a44:	ldp	x29, x30, [sp], #224
  424a48:	ret
  424a4c:	stp	x29, x30, [sp, #-464]!
  424a50:	mov	x29, sp
  424a54:	stp	x19, x20, [sp, #16]
  424a58:	mov	x20, x0
  424a5c:	ldr	x0, [x0]
  424a60:	stp	x21, x22, [sp, #32]
  424a64:	mov	x21, x1
  424a68:	mov	w22, w2
  424a6c:	stp	x23, x24, [sp, #48]
  424a70:	stp	x25, x26, [sp, #64]
  424a74:	stp	x27, x28, [sp, #80]
  424a78:	bl	428ea0 <ferror@plt+0x258d0>
  424a7c:	mov	w1, #0x0                   	// #0
  424a80:	mov	x0, x21
  424a84:	bl	441144 <ferror@plt+0x3db74>
  424a88:	ldrb	w1, [x20, #108]
  424a8c:	cbz	w1, 425acc <ferror@plt+0x224fc>
  424a90:	cmp	w0, #0x1
  424a94:	b.ls	425acc <ferror@plt+0x224fc>  // b.plast
  424a98:	ldr	w1, [x20, #200]
  424a9c:	cmp	w1, w0
  424aa0:	b.ne	424aac <ferror@plt+0x214dc>  // b.any
  424aa4:	ldr	w1, [x21, #120]
  424aa8:	cbz	w1, 425acc <ferror@plt+0x224fc>
  424aac:	str	w0, [x20, #200]
  424ab0:	add	x19, sp, #0x138
  424ab4:	ldr	x0, [x20]
  424ab8:	add	x26, x19, #0x38
  424abc:	bl	428bf0 <ferror@plt+0x25620>
  424ac0:	str	x0, [sp, #136]
  424ac4:	ldr	x0, [x20]
  424ac8:	mov	x1, #0x0                   	// #0
  424acc:	bl	428bb4 <ferror@plt+0x255e4>
  424ad0:	mov	x2, x21
  424ad4:	mov	x21, #0x0                   	// #0
  424ad8:	mov	w3, w22
  424adc:	mov	x1, x20
  424ae0:	mov	x0, x19
  424ae4:	bl	424248 <ferror@plt+0x20c78>
  424ae8:	ldr	x24, [sp, #448]
  424aec:	cbz	x24, 425ab8 <ferror@plt+0x224e8>
  424af0:	ldr	w0, [x24, #4]
  424af4:	cmp	w0, w21
  424af8:	b.le	425ab8 <ferror@plt+0x224e8>
  424afc:	add	x0, x21, #0x1
  424b00:	str	x0, [sp, #168]
  424b04:	lsl	x22, x0, #3
  424b08:	add	x23, x24, x0, lsl #3
  424b0c:	ldrb	w0, [x20, #223]
  424b10:	cbz	w0, 424be8 <ferror@plt+0x21618>
  424b14:	cbz	w21, 424b60 <ferror@plt+0x21590>
  424b18:	ldrb	w0, [sp, #426]
  424b1c:	cbnz	w0, 424b38 <ferror@plt+0x21568>
  424b20:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424b24:	add	x2, x2, #0x479
  424b28:	mov	w1, #0x408                 	// #1032
  424b2c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424b30:	add	x0, x0, #0x3f3
  424b34:	bl	403600 <ferror@plt+0x30>
  424b38:	mov	w21, #0x0                   	// #0
  424b3c:	ldr	w1, [sp, #456]
  424b40:	ldr	x0, [sp, #320]
  424b44:	cmp	w1, w21
  424b48:	b.lt	424b5c <ferror@plt+0x2158c>  // b.tstop
  424b4c:	mov	w1, #0x2e                  	// #46
  424b50:	add	w21, w21, #0x1
  424b54:	bl	428efc <ferror@plt+0x2592c>
  424b58:	b	424b3c <ferror@plt+0x2156c>
  424b5c:	bl	428ea0 <ferror@plt+0x258d0>
  424b60:	ldr	w0, [x23, #4]
  424b64:	ldr	w23, [x24, x22]
  424b68:	str	x0, [sp, #144]
  424b6c:	ldr	x0, [sp, #144]
  424b70:	cmp	x23, x0
  424b74:	b.gt	425ab0 <ferror@plt+0x224e0>
  424b78:	ldr	x0, [sp, #336]
  424b7c:	mov	w1, w23
  424b80:	mov	w21, w23
  424b84:	mov	w27, w23
  424b88:	bl	42c17c <ferror@plt+0x28bac>
  424b8c:	str	x1, [sp, #96]
  424b90:	mov	x22, x0
  424b94:	cbz	x0, 425a74 <ferror@plt+0x224a4>
  424b98:	add	x25, x19, #0x38
  424b9c:	mov	w24, #0x0                   	// #0
  424ba0:	ldr	x0, [sp, #440]
  424ba4:	cbz	x0, 424dc0 <ferror@plt+0x217f0>
  424ba8:	ldr	w1, [x0, #4]
  424bac:	cmp	w1, w24
  424bb0:	b.ls	424dc0 <ferror@plt+0x217f0>  // b.plast
  424bb4:	add	x0, x0, w24, uxtw #3
  424bb8:	ldr	x28, [x0, #8]
  424bbc:	mov	x0, x28
  424bc0:	bl	441628 <ferror@plt+0x3e058>
  424bc4:	tst	w0, #0xff
  424bc8:	b.eq	424db8 <ferror@plt+0x217e8>  // b.none
  424bcc:	ldp	w1, w0, [x28]
  424bd0:	cmp	w1, w0
  424bd4:	b.eq	424d30 <ferror@plt+0x21760>  // b.none
  424bd8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424bdc:	mov	w1, #0x638                 	// #1592
  424be0:	add	x2, x2, #0x4ab
  424be4:	b	424b2c <ferror@plt+0x2155c>
  424be8:	ldr	w0, [sp, #344]
  424bec:	cmp	w21, #0x0
  424bf0:	b.gt	424c00 <ferror@plt+0x21630>
  424bf4:	ldr	w1, [x24, #12]
  424bf8:	cmp	w1, w0
  424bfc:	b.ge	424b60 <ferror@plt+0x21590>  // b.tcont
  424c00:	add	x21, x24, x21, lsl #3
  424c04:	ldr	w4, [x21, #8]
  424c08:	cmp	w0, w4
  424c0c:	b.cc	424c30 <ferror@plt+0x21660>  // b.lo, b.ul, b.last
  424c10:	ldr	w1, [x21, #12]
  424c14:	cmp	w0, w1
  424c18:	b.hi	424c30 <ferror@plt+0x21660>  // b.pmore
  424c1c:	ldp	x0, x1, [sp, #336]
  424c20:	stp	x0, x1, [sp, #240]
  424c24:	ldp	x0, x1, [sp, #352]
  424c28:	stp	x0, x1, [sp, #256]
  424c2c:	b	424c9c <ferror@plt+0x216cc>
  424c30:	ldr	x3, [sp, #432]
  424c34:	mov	w1, #0x0                   	// #0
  424c38:	mov	x5, #0x28                  	// #40
  424c3c:	cbz	x3, 424cc0 <ferror@plt+0x216f0>
  424c40:	ldr	w0, [x3, #4]
  424c44:	cmp	w1, w0
  424c48:	b.cs	424cc0 <ferror@plt+0x216f0>  // b.hs, b.nlast
  424c4c:	mov	w0, w1
  424c50:	madd	x0, x0, x5, x3
  424c54:	ldr	w2, [x0, #8]
  424c58:	cmp	w2, w4
  424c5c:	b.cc	424c6c <ferror@plt+0x2169c>  // b.lo, b.ul, b.last
  424c60:	ldr	w6, [x21, #12]
  424c64:	cmp	w2, w6
  424c68:	b.ls	424c74 <ferror@plt+0x216a4>  // b.plast
  424c6c:	add	w1, w1, #0x1
  424c70:	b	424c3c <ferror@plt+0x2166c>
  424c74:	ldp	x4, x5, [sp, #336]
  424c78:	stp	x4, x5, [sp, #272]
  424c7c:	ldr	w0, [x0, #12]
  424c80:	str	w2, [sp, #280]
  424c84:	str	w0, [sp, #284]
  424c88:	ldp	x4, x5, [sp, #352]
  424c8c:	stp	x4, x5, [sp, #256]
  424c90:	ldp	x0, x1, [sp, #272]
  424c94:	stp	x0, x1, [sp, #240]
  424c98:	stp	x4, x5, [sp, #288]
  424c9c:	ldp	x0, x1, [sp, #240]
  424ca0:	stp	x0, x1, [sp, #208]
  424ca4:	ldp	x0, x1, [sp, #256]
  424ca8:	stp	x0, x1, [sp, #224]
  424cac:	ldr	x2, [x20, #144]
  424cb0:	add	x1, sp, #0xd0
  424cb4:	mov	x0, x20
  424cb8:	blr	x2
  424cbc:	b	424b60 <ferror@plt+0x21590>
  424cc0:	mov	w25, #0x0                   	// #0
  424cc4:	ldr	x0, [sp, #440]
  424cc8:	cbz	x0, 424d20 <ferror@plt+0x21750>
  424ccc:	ldr	w1, [x0, #4]
  424cd0:	cmp	w1, w25
  424cd4:	b.ls	424d20 <ferror@plt+0x21750>  // b.plast
  424cd8:	add	x0, x0, w25, uxtw #3
  424cdc:	add	x8, sp, #0x110
  424ce0:	ldr	x0, [x0, #8]
  424ce4:	ldr	w0, [x0]
  424ce8:	bl	42b590 <ferror@plt+0x27fc0>
  424cec:	ldr	w1, [x21, #8]
  424cf0:	ldr	w0, [sp, #280]
  424cf4:	cmp	w0, w1
  424cf8:	b.cc	424d08 <ferror@plt+0x21738>  // b.lo, b.ul, b.last
  424cfc:	ldr	w1, [x21, #12]
  424d00:	cmp	w0, w1
  424d04:	b.ls	424d10 <ferror@plt+0x21740>  // b.plast
  424d08:	add	w25, w25, #0x1
  424d0c:	b	424cc4 <ferror@plt+0x216f4>
  424d10:	ldp	x0, x1, [sp, #272]
  424d14:	stp	x0, x1, [sp, #240]
  424d18:	ldp	x0, x1, [sp, #288]
  424d1c:	b	424c28 <ferror@plt+0x21658>
  424d20:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424d24:	mov	w1, #0x449                 	// #1097
  424d28:	add	x2, x2, #0x495
  424d2c:	b	424b2c <ferror@plt+0x2155c>
  424d30:	ldr	x1, [sp, #336]
  424d34:	mov	w2, w27
  424d38:	mov	x0, x28
  424d3c:	bl	44151c <ferror@plt+0x3df4c>
  424d40:	tst	w0, #0xff
  424d44:	b.eq	424db8 <ferror@plt+0x217e8>  // b.none
  424d48:	mov	x0, x25
  424d4c:	bl	423978 <ferror@plt+0x203a8>
  424d50:	mov	x0, x19
  424d54:	mov	w1, #0x2b                  	// #43
  424d58:	bl	4237c8 <ferror@plt+0x201f8>
  424d5c:	ldr	x0, [sp, #320]
  424d60:	mov	w1, #0x2b                  	// #43
  424d64:	bl	428efc <ferror@plt+0x2592c>
  424d68:	mov	x0, x25
  424d6c:	mov	w1, #0xfffffffe            	// #-2
  424d70:	bl	423858 <ferror@plt+0x20288>
  424d74:	mov	x2, #0x0                   	// #0
  424d78:	ldr	x0, [x28, #16]
  424d7c:	sub	x0, x0, #0x1
  424d80:	cmp	x0, x2
  424d84:	b.ls	424da8 <ferror@plt+0x217d8>  // b.plast
  424d88:	ldr	x0, [x28, #8]
  424d8c:	str	x2, [sp, #104]
  424d90:	ldrb	w1, [x0, x2]
  424d94:	ldr	x0, [sp, #320]
  424d98:	bl	428efc <ferror@plt+0x2592c>
  424d9c:	ldr	x2, [sp, #104]
  424da0:	add	x2, x2, #0x1
  424da4:	b	424d78 <ferror@plt+0x217a8>
  424da8:	mov	x0, x25
  424dac:	bl	423978 <ferror@plt+0x203a8>
  424db0:	ldr	x0, [sp, #320]
  424db4:	bl	428ea0 <ferror@plt+0x258d0>
  424db8:	add	w24, w24, #0x1
  424dbc:	b	424ba0 <ferror@plt+0x215d0>
  424dc0:	add	x0, x19, #0x38
  424dc4:	bl	423978 <ferror@plt+0x203a8>
  424dc8:	ldrsw	x28, [sp, #96]
  424dcc:	sub	x2, x22, #0x1
  424dd0:	str	w28, [sp, #104]
  424dd4:	cmp	w28, #0x0
  424dd8:	b.le	424e20 <ferror@plt+0x21850>
  424ddc:	ldrb	w0, [x2, x28]
  424de0:	sub	x28, x28, #0x1
  424de4:	and	w1, w0, #0xfffffffb
  424de8:	cmp	w0, #0x20
  424dec:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  424df0:	b.eq	424dd0 <ferror@plt+0x21800>  // b.none
  424df4:	ldr	w0, [sp, #104]
  424df8:	add	x0, x22, w0, sxtw
  424dfc:	ldurb	w0, [x0, #-1]
  424e00:	and	w1, w0, #0xfffffffb
  424e04:	cmp	w0, #0x20
  424e08:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  424e0c:	b.ne	424e40 <ferror@plt+0x21870>  // b.any
  424e10:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424e14:	mov	w1, #0x2bb                 	// #699
  424e18:	add	x2, x2, #0x4c0
  424e1c:	b	424b2c <ferror@plt+0x2155c>
  424e20:	ldr	w0, [sp, #104]
  424e24:	cmp	w0, #0x0
  424e28:	b.ge	424e3c <ferror@plt+0x2186c>  // b.tcont
  424e2c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424e30:	mov	w1, #0x2b9                 	// #697
  424e34:	add	x2, x2, #0x4c0
  424e38:	b	424b2c <ferror@plt+0x2155c>
  424e3c:	b.ne	424df4 <ferror@plt+0x21824>  // b.any
  424e40:	ldrsw	x0, [sp, #460]
  424e44:	add	x0, x22, x0
  424e48:	str	x0, [sp, #96]
  424e4c:	ldrb	w0, [sp, #426]
  424e50:	cbz	w0, 424f38 <ferror@plt+0x21968>
  424e54:	mov	w0, w27
  424e58:	bl	4229ac <ferror@plt+0x1f3dc>
  424e5c:	mov	w25, w0
  424e60:	mov	w22, #0x0                   	// #0
  424e64:	ldr	w1, [sp, #456]
  424e68:	ldr	x0, [sp, #320]
  424e6c:	sub	w1, w1, w25
  424e70:	cmp	w1, w22
  424e74:	b.le	424e88 <ferror@plt+0x218b8>
  424e78:	mov	w1, #0x20                  	// #32
  424e7c:	add	w22, w22, #0x1
  424e80:	bl	428efc <ferror@plt+0x2592c>
  424e84:	b	424e64 <ferror@plt+0x21894>
  424e88:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424e8c:	mov	w2, w21
  424e90:	add	x1, x1, #0x4eb
  424e94:	bl	42a8f0 <ferror@plt+0x27320>
  424e98:	ldr	w2, [sp, #460]
  424e9c:	add	x22, x19, #0x38
  424ea0:	mov	w25, #0x0                   	// #0
  424ea4:	mov	w28, #0x7fffffff            	// #2147483647
  424ea8:	add	w24, w2, #0x1
  424eac:	ldr	w0, [sp, #104]
  424eb0:	cmp	w24, w0
  424eb4:	b.gt	424f5c <ferror@plt+0x2198c>
  424eb8:	ldrb	w0, [sp, #424]
  424ebc:	cbz	w0, 424ef0 <ferror@plt+0x21920>
  424ec0:	add	x5, sp, #0x110
  424ec4:	mov	w2, w24
  424ec8:	mov	w1, w21
  424ecc:	mov	x0, x19
  424ed0:	mov	w4, #0x7fffffff            	// #2147483647
  424ed4:	mov	w3, #0x0                   	// #0
  424ed8:	bl	423b00 <ferror@plt+0x20530>
  424edc:	tst	w0, #0xff
  424ee0:	b.eq	424f48 <ferror@plt+0x21978>  // b.none
  424ee4:	ldr	w1, [sp, #272]
  424ee8:	mov	x0, x22
  424eec:	bl	423858 <ferror@plt+0x20288>
  424ef0:	ldr	x0, [sp, #96]
  424ef4:	ldrb	w1, [x0]
  424ef8:	ands	w3, w1, #0xffffffdf
  424efc:	and	w0, w1, #0xfffffffb
  424f00:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  424f04:	b.eq	424f54 <ferror@plt+0x21984>  // b.none
  424f08:	mov	w0, #0x7fffffff            	// #2147483647
  424f0c:	mov	w25, w24
  424f10:	cmp	w28, w0
  424f14:	b.ne	424f1c <ferror@plt+0x2194c>  // b.any
  424f18:	mov	w28, w24
  424f1c:	ldr	x0, [sp, #320]
  424f20:	add	w24, w24, #0x1
  424f24:	bl	428efc <ferror@plt+0x2592c>
  424f28:	ldr	x0, [sp, #96]
  424f2c:	add	x0, x0, #0x1
  424f30:	str	x0, [sp, #96]
  424f34:	b	424eac <ferror@plt+0x218dc>
  424f38:	ldr	x0, [sp, #320]
  424f3c:	mov	w1, #0x20                  	// #32
  424f40:	bl	428efc <ferror@plt+0x2592c>
  424f44:	b	424e98 <ferror@plt+0x218c8>
  424f48:	mov	x0, x22
  424f4c:	bl	423978 <ferror@plt+0x203a8>
  424f50:	b	424ef0 <ferror@plt+0x21920>
  424f54:	mov	w1, #0x20                  	// #32
  424f58:	b	424f1c <ferror@plt+0x2194c>
  424f5c:	mov	x0, x19
  424f60:	bl	423980 <ferror@plt+0x203b0>
  424f64:	ldr	x3, [sp, #432]
  424f68:	mov	w2, #0x0                   	// #0
  424f6c:	add	x0, x3, #0x8
  424f70:	mov	x1, x0
  424f74:	cbz	x3, 4250dc <ferror@plt+0x21b0c>
  424f78:	ldr	w4, [x3, #4]
  424f7c:	cmp	w4, w2
  424f80:	b.ls	4250dc <ferror@plt+0x21b0c>  // b.plast
  424f84:	ldr	w5, [x1, #16]
  424f88:	cmp	w5, #0x2
  424f8c:	b.eq	4250dc <ferror@plt+0x21b0c>  // b.none
  424f90:	ldr	w6, [x1]
  424f94:	ldr	w5, [x1, #8]
  424f98:	cmp	w6, w5
  424f9c:	b.ls	424fb0 <ferror@plt+0x219e0>  // b.plast
  424fa0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  424fa4:	mov	w1, #0x215                 	// #533
  424fa8:	add	x2, x2, #0x4f1
  424fac:	b	424b2c <ferror@plt+0x2155c>
  424fb0:	cmp	w6, w21
  424fb4:	b.hi	425098 <ferror@plt+0x21ac8>  // b.pmore
  424fb8:	cmp	w5, w21
  424fbc:	b.cc	425098 <ferror@plt+0x21ac8>  // b.lo, b.ul, b.last
  424fc0:	ldr	w22, [sp, #348]
  424fc4:	add	w3, w25, #0x1
  424fc8:	mov	w1, #0x0                   	// #0
  424fcc:	add	w22, w22, #0x1
  424fd0:	ldr	w2, [x0]
  424fd4:	cmp	w2, w21
  424fd8:	b.hi	424ff8 <ferror@plt+0x21a28>  // b.pmore
  424fdc:	ldr	w2, [x0, #8]
  424fe0:	cmp	w2, w21
  424fe4:	b.ne	4250a4 <ferror@plt+0x21ad4>  // b.any
  424fe8:	ldr	w2, [x0, #12]
  424fec:	cmp	w2, w22
  424ff0:	b.lt	424ff8 <ferror@plt+0x21a28>  // b.tstop
  424ff4:	add	w22, w2, #0x1
  424ff8:	add	w1, w1, #0x1
  424ffc:	add	x0, x0, #0x28
  425000:	cmp	w4, w1
  425004:	b.ne	424fd0 <ferror@plt+0x21a00>  // b.any
  425008:	mov	x0, x19
  42500c:	mov	w1, #0x20                  	// #32
  425010:	bl	4237c8 <ferror@plt+0x201f8>
  425014:	ldr	x0, [sp, #320]
  425018:	mov	w1, #0x20                  	// #32
  42501c:	bl	428efc <ferror@plt+0x2592c>
  425020:	ldr	w24, [sp, #460]
  425024:	add	x0, x19, #0x38
  425028:	str	x0, [sp, #96]
  42502c:	add	w24, w24, #0x1
  425030:	cmp	w24, w22
  425034:	b.ge	4250d4 <ferror@plt+0x21b04>  // b.tcont
  425038:	add	x5, sp, #0x110
  42503c:	mov	w4, w25
  425040:	mov	w3, w28
  425044:	mov	w2, w24
  425048:	mov	w1, w21
  42504c:	mov	x0, x19
  425050:	bl	423b00 <ferror@plt+0x20530>
  425054:	tst	w0, #0xff
  425058:	b.eq	4250c4 <ferror@plt+0x21af4>  // b.none
  42505c:	ldr	w1, [sp, #272]
  425060:	ldr	x0, [sp, #96]
  425064:	bl	423858 <ferror@plt+0x20288>
  425068:	ldrb	w0, [sp, #276]
  42506c:	cbz	w0, 4250bc <ferror@plt+0x21aec>
  425070:	ldr	w0, [sp, #272]
  425074:	cmp	w0, #0x2
  425078:	b.gt	4250b4 <ferror@plt+0x21ae4>
  42507c:	ldr	x1, [sp, #312]
  425080:	add	x0, x1, w0, sxtw
  425084:	ldrb	w1, [x0, #116]
  425088:	ldr	x0, [sp, #320]
  42508c:	add	w24, w24, #0x1
  425090:	bl	428efc <ferror@plt+0x2592c>
  425094:	b	425030 <ferror@plt+0x21a60>
  425098:	add	w2, w2, #0x1
  42509c:	add	x1, x1, #0x28
  4250a0:	b	424f74 <ferror@plt+0x219a4>
  4250a4:	b.ls	424ff8 <ferror@plt+0x21a28>  // b.plast
  4250a8:	cmp	w25, w22
  4250ac:	csel	w22, w22, w3, lt  // lt = tstop
  4250b0:	b	424ff8 <ferror@plt+0x21a28>
  4250b4:	mov	w1, #0x5e                  	// #94
  4250b8:	b	425088 <ferror@plt+0x21ab8>
  4250bc:	mov	w1, #0x7e                  	// #126
  4250c0:	b	425088 <ferror@plt+0x21ab8>
  4250c4:	ldr	x0, [sp, #96]
  4250c8:	bl	423978 <ferror@plt+0x203a8>
  4250cc:	mov	w1, #0x20                  	// #32
  4250d0:	b	425088 <ferror@plt+0x21ab8>
  4250d4:	mov	x0, x19
  4250d8:	bl	423980 <ferror@plt+0x203b0>
  4250dc:	ldrb	w0, [sp, #425]
  4250e0:	str	w0, [sp, #96]
  4250e4:	cbz	w0, 425298 <ferror@plt+0x21cc8>
  4250e8:	mov	w22, #0x0                   	// #0
  4250ec:	str	xzr, [sp, #240]
  4250f0:	ldr	x0, [sp, #432]
  4250f4:	cbz	x0, 425288 <ferror@plt+0x21cb8>
  4250f8:	ldr	w1, [x0, #4]
  4250fc:	cmp	w1, w22
  425100:	b.ls	425288 <ferror@plt+0x21cb8>  // b.plast
  425104:	mov	w2, w22
  425108:	mov	x1, #0x28                  	// #40
  42510c:	madd	x24, x2, x1, x0
  425110:	ldr	x0, [x24, #40]
  425114:	cbz	x0, 425280 <ferror@plt+0x21cb0>
  425118:	ldr	w1, [x24, #28]
  42511c:	cmp	w1, w21
  425120:	b.ne	425280 <ferror@plt+0x21cb0>  // b.any
  425124:	ldr	w3, [x24, #32]
  425128:	ldr	w1, [sp, #460]
  42512c:	cmp	w3, w1
  425130:	b.le	425280 <ferror@plt+0x21cb0>
  425134:	ldr	x1, [x0]
  425138:	ldr	x3, [x1, #16]
  42513c:	ldr	w1, [x24, #36]
  425140:	blr	x3
  425144:	stp	x0, x1, [sp, #192]
  425148:	mov	x4, #0x0                   	// #0
  42514c:	mov	x3, x0
  425150:	bfxil	x4, x1, #0, #8
  425154:	cbz	x0, 425280 <ferror@plt+0x21cb0>
  425158:	ldr	w1, [x24, #32]
  42515c:	str	w1, [sp, #104]
  425160:	str	x3, [sp, #280]
  425164:	strb	w4, [sp, #288]
  425168:	bl	402d50 <strlen@plt>
  42516c:	str	x0, [sp, #112]
  425170:	ldr	x25, [sp, #240]
  425174:	cbz	x25, 425214 <ferror@plt+0x21c44>
  425178:	ldp	w0, w24, [x25]
  42517c:	ubfx	x0, x0, #0, #31
  425180:	cmp	w0, w24
  425184:	b.ne	425230 <ferror@plt+0x21c60>  // b.any
  425188:	ldrsb	w0, [x25, #3]
  42518c:	tbz	w0, #31, 425214 <ferror@plt+0x21c44>
  425190:	ldr	w28, [sp, #96]
  425194:	add	w1, w24, #0x1
  425198:	str	xzr, [sp, #240]
  42519c:	ldr	x0, [sp, #240]
  4251a0:	bl	423a24 <ferror@plt+0x20454>
  4251a4:	mov	w2, w0
  4251a8:	mov	x1, #0x8                   	// #8
  4251ac:	mov	w0, #0x28                  	// #40
  4251b0:	umaddl	x1, w2, w0, x1
  4251b4:	ldr	x0, [sp, #240]
  4251b8:	cbz	x0, 425224 <ferror@plt+0x21c54>
  4251bc:	ldr	w6, [x0, #4]
  4251c0:	stp	w6, w2, [sp, #124]
  4251c4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4251c8:	ldp	w6, w2, [sp, #124]
  4251cc:	str	x0, [sp, #240]
  4251d0:	and	w2, w2, #0x7fffffff
  4251d4:	stp	w2, w6, [x0]
  4251d8:	cbz	w28, 425230 <ferror@plt+0x21c60>
  4251dc:	mov	w2, w24
  4251e0:	mov	x1, #0x8                   	// #8
  4251e4:	cbz	w2, 42522c <ferror@plt+0x21c5c>
  4251e8:	add	x8, x25, x1
  4251ec:	add	x5, x0, x1
  4251f0:	sub	w2, w2, #0x1
  4251f4:	add	x1, x1, #0x28
  4251f8:	ldp	x6, x7, [x8]
  4251fc:	stp	x6, x7, [x5]
  425200:	ldp	x6, x7, [x8, #16]
  425204:	stp	x6, x7, [x5, #16]
  425208:	ldr	x6, [x8, #32]
  42520c:	str	x6, [x5, #32]
  425210:	b	4251e4 <ferror@plt+0x21c14>
  425214:	mov	w28, #0x0                   	// #0
  425218:	mov	w24, #0x0                   	// #0
  42521c:	mov	w1, #0x1                   	// #1
  425220:	b	42519c <ferror@plt+0x21bcc>
  425224:	mov	w6, #0x0                   	// #0
  425228:	b	4251c0 <ferror@plt+0x21bf0>
  42522c:	str	w24, [x0, #4]
  425230:	ldr	x0, [sp, #240]
  425234:	mov	x3, #0x8                   	// #8
  425238:	ldr	w1, [x0, #4]
  42523c:	add	w2, w1, #0x1
  425240:	str	w2, [x0, #4]
  425244:	ldr	w2, [sp, #104]
  425248:	str	w2, [sp, #276]
  42524c:	ldr	x2, [sp, #112]
  425250:	str	x2, [sp, #296]
  425254:	mov	w2, #0x28                  	// #40
  425258:	str	w22, [sp, #272]
  42525c:	str	wzr, [sp, #304]
  425260:	umaddl	x1, w1, w2, x3
  425264:	ldp	x2, x3, [sp, #272]
  425268:	add	x0, x0, x1
  42526c:	stp	x2, x3, [x0]
  425270:	ldp	x2, x3, [sp, #288]
  425274:	stp	x2, x3, [x0, #16]
  425278:	ldr	w1, [sp, #304]
  42527c:	str	w1, [x0, #32]
  425280:	add	w22, w22, #0x1
  425284:	b	4250f0 <ferror@plt+0x21b20>
  425288:	ldr	x0, [sp, #240]
  42528c:	cbnz	x0, 4253bc <ferror@plt+0x21dec>
  425290:	add	x0, sp, #0xf0
  425294:	bl	423638 <ferror@plt+0x20068>
  425298:	ldr	x0, [sp, #336]
  42529c:	mov	x22, #0x0                   	// #0
  4252a0:	str	wzr, [sp, #96]
  4252a4:	str	x0, [sp, #152]
  4252a8:	ldr	x0, [sp, #440]
  4252ac:	cbz	x0, 425934 <ferror@plt+0x22364>
  4252b0:	ldr	w1, [x0, #4]
  4252b4:	ldr	w2, [sp, #96]
  4252b8:	cmp	w1, w2
  4252bc:	b.ls	425934 <ferror@plt+0x22364>  // b.plast
  4252c0:	ldr	x1, [sp, #96]
  4252c4:	add	x0, x0, w1, uxtw #3
  4252c8:	ldr	x24, [x0, #8]
  4252cc:	mov	x0, x24
  4252d0:	bl	441628 <ferror@plt+0x3e058>
  4252d4:	ands	w0, w0, #0xff
  4252d8:	str	w0, [sp, #112]
  4252dc:	b.ne	4257e8 <ferror@plt+0x22218>  // b.any
  4252e0:	ldr	x1, [sp, #336]
  4252e4:	mov	w2, w27
  4252e8:	mov	x0, x24
  4252ec:	bl	44151c <ferror@plt+0x3df4c>
  4252f0:	ands	w0, w0, #0xff
  4252f4:	str	w0, [sp, #160]
  4252f8:	b.eq	4257e8 <ferror@plt+0x22218>  // b.none
  4252fc:	ldr	w0, [x24]
  425300:	add	x8, sp, #0x110
  425304:	bl	42b590 <ferror@plt+0x27fc0>
  425308:	ldr	w28, [sp, #284]
  42530c:	ldr	w0, [x24, #4]
  425310:	add	x8, sp, #0x110
  425314:	bl	42b590 <ferror@plt+0x27fc0>
  425318:	ldr	w2, [sp, #284]
  42531c:	mov	w1, w28
  425320:	add	x0, sp, #0x110
  425324:	sub	w2, w2, #0x1
  425328:	bl	42378c <ferror@plt+0x201bc>
  42532c:	ldr	w0, [sp, #272]
  425330:	add	x8, sp, #0x110
  425334:	str	w0, [sp, #104]
  425338:	ldr	w0, [sp, #276]
  42533c:	str	w0, [sp, #124]
  425340:	ldr	w0, [x24]
  425344:	bl	42b590 <ferror@plt+0x27fc0>
  425348:	ldr	w25, [sp, #284]
  42534c:	ldr	x0, [x24, #16]
  425350:	sub	w2, w25, #0x1
  425354:	ldr	w3, [x24]
  425358:	add	w28, w2, w0
  42535c:	ldr	w0, [x24, #4]
  425360:	cmp	w3, w0
  425364:	b.ne	4255dc <ferror@plt+0x2200c>  // b.any
  425368:	mov	w2, w28
  42536c:	add	x0, sp, #0x110
  425370:	mov	w1, w25
  425374:	bl	42378c <ferror@plt+0x201bc>
  425378:	ldr	w28, [sp, #272]
  42537c:	ldr	w0, [sp, #276]
  425380:	str	w0, [sp, #128]
  425384:	cbz	x22, 4257f8 <ferror@plt+0x22228>
  425388:	ldr	w0, [x22, #4]
  42538c:	cbz	w0, 4257f8 <ferror@plt+0x22228>
  425390:	sub	w0, w0, #0x1
  425394:	ldr	w1, [sp, #104]
  425398:	add	x0, x22, x0, lsl #3
  42539c:	ldr	x25, [x0, #8]
  4253a0:	ldr	w0, [x25]
  4253a4:	cmp	w1, w0
  4253a8:	b.ge	4255f8 <ferror@plt+0x22028>  // b.tcont
  4253ac:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4253b0:	mov	w1, #0x77a                 	// #1914
  4253b4:	add	x2, x2, #0x514
  4253b8:	b	424b2c <ferror@plt+0x2155c>
  4253bc:	ldr	w1, [x0, #4]
  4253c0:	cbz	w1, 425290 <ferror@plt+0x21cc0>
  4253c4:	cmp	w1, #0x1
  4253c8:	b.ls	4253e4 <ferror@plt+0x21e14>  // b.plast
  4253cc:	adrp	x3, 423000 <ferror@plt+0x1fa30>
  4253d0:	mov	w1, w1
  4253d4:	add	x3, x3, #0xc80
  4253d8:	add	x0, x0, #0x8
  4253dc:	mov	x2, #0x28                  	// #40
  4253e0:	bl	42d9a0 <ferror@plt+0x2a3d0>
  4253e4:	ldr	x2, [sp, #240]
  4253e8:	cbz	x2, 42543c <ferror@plt+0x21e6c>
  4253ec:	ldr	w0, [x2, #4]
  4253f0:	sub	w0, w0, #0x1
  4253f4:	mov	w4, #0x7fffffff            	// #2147483647
  4253f8:	mov	w25, #0x1                   	// #1
  4253fc:	mov	x6, #0x28                  	// #40
  425400:	cbz	x2, 425444 <ferror@plt+0x21e74>
  425404:	ldr	w1, [x2, #4]
  425408:	cmp	w1, w0
  42540c:	b.ls	425444 <ferror@plt+0x21e74>  // b.plast
  425410:	mov	w1, w0
  425414:	sub	w0, w0, #0x1
  425418:	madd	x1, x1, x6, x2
  42541c:	ldr	x3, [x1, #32]
  425420:	ldr	w5, [x1, #12]
  425424:	add	x3, x3, w5, sxtw
  425428:	cmp	x3, w4, sxtw
  42542c:	mov	w4, w5
  425430:	cinc	w25, w25, cs  // cs = hs, nlast
  425434:	str	w25, [x1, #40]
  425438:	b	425400 <ferror@plt+0x21e30>
  42543c:	mov	w0, #0x0                   	// #0
  425440:	b	4253f0 <ferror@plt+0x21e20>
  425444:	mov	w28, #0x0                   	// #0
  425448:	mov	w24, #0x0                   	// #0
  42544c:	mov	x0, x19
  425450:	mov	w1, #0x20                  	// #32
  425454:	bl	4237c8 <ferror@plt+0x201f8>
  425458:	ldr	x0, [sp, #320]
  42545c:	mov	w1, #0x20                  	// #32
  425460:	bl	428efc <ferror@plt+0x2592c>
  425464:	ldr	w0, [sp, #460]
  425468:	mov	w4, #0x0                   	// #0
  42546c:	add	w0, w0, #0x1
  425470:	str	w0, [sp, #272]
  425474:	ldr	x22, [sp, #240]
  425478:	cbz	x22, 42558c <ferror@plt+0x21fbc>
  42547c:	ldr	w0, [x22, #4]
  425480:	cmp	w0, w4
  425484:	b.ls	42558c <ferror@plt+0x21fbc>  // b.plast
  425488:	mov	w5, w4
  42548c:	mov	x0, #0x28                  	// #40
  425490:	madd	x5, x5, x0, x22
  425494:	ldr	w0, [x5, #40]
  425498:	cmp	w0, w24
  42549c:	b.lt	42558c <ferror@plt+0x21fbc>  // b.tstop
  4254a0:	mov	w0, #0x28                  	// #40
  4254a4:	umull	x0, w4, w0
  4254a8:	add	x22, x22, x0
  4254ac:	ldr	w2, [x22, #12]
  4254b0:	b.ne	425528 <ferror@plt+0x21f58>  // b.any
  4254b4:	ldr	w0, [sp, #272]
  4254b8:	cmp	w2, w0
  4254bc:	b.ge	4254d0 <ferror@plt+0x21f00>  // b.tcont
  4254c0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4254c4:	mov	w1, #0x609                 	// #1545
  4254c8:	add	x2, x2, #0x503
  4254cc:	b	424b2c <ferror@plt+0x2155c>
  4254d0:	mov	w3, #0x1                   	// #1
  4254d4:	add	x1, sp, #0x110
  4254d8:	add	x0, sp, #0x138
  4254dc:	str	w4, [sp, #96]
  4254e0:	str	x5, [sp, #104]
  4254e4:	bl	4239a8 <ferror@plt+0x203d8>
  4254e8:	ldr	w1, [x22, #8]
  4254ec:	mov	x0, x26
  4254f0:	bl	423858 <ferror@plt+0x20288>
  4254f4:	ldr	x1, [x22, #16]
  4254f8:	ldr	x0, [sp, #320]
  4254fc:	bl	4292a8 <ferror@plt+0x25cd8>
  425500:	mov	x0, x26
  425504:	bl	423978 <ferror@plt+0x203a8>
  425508:	ldr	x5, [sp, #104]
  42550c:	ldr	w0, [sp, #272]
  425510:	ldr	x1, [x5, #32]
  425514:	add	w0, w0, w1
  425518:	ldr	w4, [sp, #96]
  42551c:	str	w0, [sp, #272]
  425520:	add	w4, w4, #0x1
  425524:	b	425474 <ferror@plt+0x21ea4>
  425528:	cmp	w2, w28
  42552c:	b.eq	425520 <ferror@plt+0x21f50>  // b.none
  425530:	ldr	w0, [sp, #272]
  425534:	cmp	w2, w0
  425538:	b.ge	42554c <ferror@plt+0x21f7c>  // b.tcont
  42553c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425540:	mov	w1, #0x612                 	// #1554
  425544:	add	x2, x2, #0x503
  425548:	b	424b2c <ferror@plt+0x2155c>
  42554c:	mov	w3, #0x1                   	// #1
  425550:	add	x1, sp, #0x110
  425554:	add	x0, sp, #0x138
  425558:	str	w4, [sp, #96]
  42555c:	bl	4239a8 <ferror@plt+0x203d8>
  425560:	ldr	w1, [x22, #8]
  425564:	mov	x0, x26
  425568:	bl	423858 <ferror@plt+0x20288>
  42556c:	ldr	x0, [sp, #320]
  425570:	mov	w1, #0x7c                  	// #124
  425574:	bl	428efc <ferror@plt+0x2592c>
  425578:	mov	x0, x26
  42557c:	bl	423978 <ferror@plt+0x203a8>
  425580:	ldr	w28, [sp, #272]
  425584:	add	w0, w28, #0x1
  425588:	b	425518 <ferror@plt+0x21f48>
  42558c:	mov	x0, x19
  425590:	add	w24, w24, #0x1
  425594:	bl	423980 <ferror@plt+0x203b0>
  425598:	cmp	w25, w24
  42559c:	b.ge	42544c <ferror@plt+0x21e7c>  // b.tcont
  4255a0:	mov	x22, #0x0                   	// #0
  4255a4:	mov	x24, #0x28                  	// #40
  4255a8:	ldr	x0, [sp, #240]
  4255ac:	cbz	x0, 425290 <ferror@plt+0x21cc0>
  4255b0:	ldr	w1, [x0, #4]
  4255b4:	cmp	w1, w22
  4255b8:	b.ls	425290 <ferror@plt+0x21cc0>  // b.plast
  4255bc:	madd	x0, x22, x24, x0
  4255c0:	add	x1, x0, #0x8
  4255c4:	ldrb	w0, [x0, #24]
  4255c8:	cbz	w0, 4255d4 <ferror@plt+0x22004>
  4255cc:	ldr	x0, [x1, #8]
  4255d0:	bl	4032a0 <free@plt>
  4255d4:	add	x22, x22, #0x1
  4255d8:	b	4255a8 <ferror@plt+0x21fd8>
  4255dc:	add	x8, sp, #0x110
  4255e0:	bl	42b590 <ferror@plt+0x27fc0>
  4255e4:	ldr	w0, [sp, #284]
  4255e8:	sub	w0, w0, #0x1
  4255ec:	cmp	w28, w0
  4255f0:	csel	w2, w28, w0, ge  // ge = tcont
  4255f4:	b	42536c <ferror@plt+0x21d9c>
  4255f8:	ldr	w0, [x25, #8]
  4255fc:	cmp	w28, w0
  425600:	b.ge	425614 <ferror@plt+0x22044>  // b.tcont
  425604:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425608:	mov	w1, #0x77c                 	// #1916
  42560c:	add	x2, x2, #0x514
  425610:	b	424b2c <ferror@plt+0x2155c>
  425614:	ldr	w0, [x25, #12]
  425618:	cmp	w28, w0
  42561c:	b.gt	4257f8 <ferror@plt+0x22228>
  425620:	ldr	w1, [x25, #4]
  425624:	sub	w2, w28, #0x1
  425628:	add	x0, sp, #0xf0
  42562c:	add	w1, w1, #0x1
  425630:	bl	42378c <ferror@plt+0x201bc>
  425634:	ldr	x0, [sp, #152]
  425638:	mov	w1, w27
  42563c:	bl	42c17c <ferror@plt+0x28bac>
  425640:	mov	x8, x0
  425644:	mov	x7, x1
  425648:	cbz	x0, 4257f8 <ferror@plt+0x22228>
  42564c:	ldr	w5, [sp, #244]
  425650:	cmp	w5, w1
  425654:	b.ge	4257f8 <ferror@plt+0x22228>  // b.tcont
  425658:	ldr	x6, [x25, #24]
  42565c:	tbz	w6, #31, 425670 <ferror@plt+0x220a0>
  425660:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425664:	mov	w1, #0x792                 	// #1938
  425668:	add	x2, x2, #0x514
  42566c:	b	424b2c <ferror@plt+0x2155c>
  425670:	ldr	w0, [sp, #240]
  425674:	add	w4, w5, #0x1
  425678:	subs	w0, w4, w0
  42567c:	str	w0, [sp, #104]
  425680:	b.pl	425694 <ferror@plt+0x220c4>  // b.nfrst
  425684:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425688:	mov	w1, #0x794                 	// #1940
  42568c:	add	x2, x2, #0x514
  425690:	b	424b2c <ferror@plt+0x2155c>
  425694:	ldr	w0, [sp, #104]
  425698:	ldr	x4, [x24, #16]
  42569c:	add	w0, w0, w6
  4256a0:	str	w0, [sp, #112]
  4256a4:	adds	w4, w0, w4
  4256a8:	b.pl	4256bc <ferror@plt+0x220ec>  // b.nfrst
  4256ac:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4256b0:	mov	w1, #0x796                 	// #1942
  4256b4:	add	x2, x2, #0x514
  4256b8:	b	424b2c <ferror@plt+0x2155c>
  4256bc:	ldr	x0, [x25, #32]
  4256c0:	sxtw	x28, w4
  4256c4:	add	x5, x28, #0x1
  4256c8:	cmp	x0, x5
  4256cc:	b.cs	4256fc <ferror@plt+0x2212c>  // b.hs, b.nlast
  4256d0:	ldr	x0, [x25, #16]
  4256d4:	lsl	x1, x5, #1
  4256d8:	str	x1, [sp, #128]
  4256dc:	str	x6, [sp, #160]
  4256e0:	stp	x8, x7, [sp, #176]
  4256e4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4256e8:	ldp	x8, x7, [sp, #176]
  4256ec:	str	x0, [x25, #16]
  4256f0:	ldr	x6, [sp, #160]
  4256f4:	ldr	x1, [sp, #128]
  4256f8:	str	x1, [x25, #32]
  4256fc:	ldp	w2, w0, [sp, #240]
  425700:	add	w5, w0, #0x1
  425704:	sub	w5, w5, w2
  425708:	subs	w2, w2, #0x1
  42570c:	b.pl	425728 <ferror@plt+0x22158>  // b.nfrst
  425710:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425714:	add	x2, x2, #0x51d
  425718:	mov	w1, #0x44                  	// #68
  42571c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425720:	add	x0, x0, #0x525
  425724:	b	424b34 <ferror@plt+0x21564>
  425728:	cmp	w2, w7
  42572c:	b.lt	425740 <ferror@plt+0x22170>  // b.tstop
  425730:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425734:	mov	w1, #0x45                  	// #69
  425738:	add	x2, x2, #0x51d
  42573c:	b	42571c <ferror@plt+0x2214c>
  425740:	tbz	w5, #31, 425754 <ferror@plt+0x22184>
  425744:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425748:	mov	w1, #0x46                  	// #70
  42574c:	add	x2, x2, #0x51d
  425750:	b	42571c <ferror@plt+0x2214c>
  425754:	cmp	w0, w7
  425758:	b.le	42576c <ferror@plt+0x2219c>
  42575c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425760:	mov	w1, #0x47                  	// #71
  425764:	add	x2, x2, #0x51d
  425768:	b	42571c <ferror@plt+0x2214c>
  42576c:	sxtw	x5, w5
  425770:	add	x2, x8, w2, sxtw
  425774:	mov	w1, w6
  425778:	mov	x0, x25
  42577c:	stp	x2, x5, [sp, #272]
  425780:	add	x2, sp, #0x110
  425784:	bl	423a4c <ferror@plt+0x2047c>
  425788:	ldp	x1, x0, [x24, #8]
  42578c:	stp	x1, x0, [sp, #272]
  425790:	ldr	w1, [sp, #112]
  425794:	mov	x0, x25
  425798:	add	x2, sp, #0x110
  42579c:	bl	423a4c <ferror@plt+0x2047c>
  4257a0:	str	x28, [x25, #24]
  4257a4:	ldr	x0, [x25, #32]
  4257a8:	cmp	x28, x0
  4257ac:	b.cc	4257c0 <ferror@plt+0x221f0>  // b.lo, b.ul, b.last
  4257b0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4257b4:	mov	w1, #0x732                 	// #1842
  4257b8:	add	x2, x2, #0x537
  4257bc:	b	424b2c <ferror@plt+0x2155c>
  4257c0:	ldr	x0, [x25, #16]
  4257c4:	ldr	w1, [sp, #104]
  4257c8:	strb	wzr, [x0, x28]
  4257cc:	ldr	w0, [sp, #124]
  4257d0:	str	w0, [x25, #4]
  4257d4:	ldr	x0, [x24, #16]
  4257d8:	add	x0, x0, w1, sxtw
  4257dc:	ldr	w1, [x25, #12]
  4257e0:	add	w0, w1, w0
  4257e4:	str	w0, [x25, #12]
  4257e8:	ldr	w0, [sp, #96]
  4257ec:	add	w0, w0, #0x1
  4257f0:	str	w0, [sp, #96]
  4257f4:	b	4252a8 <ferror@plt+0x21cd8>
  4257f8:	ldp	x2, x1, [x24, #8]
  4257fc:	mov	x0, #0x28                  	// #40
  425800:	stp	x1, x2, [sp, #176]
  425804:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425808:	mov	x24, x0
  42580c:	ldr	w0, [sp, #104]
  425810:	ldr	x2, [sp, #184]
  425814:	str	w0, [x24]
  425818:	ldr	w0, [sp, #124]
  42581c:	str	w0, [x24, #4]
  425820:	ldr	w0, [sp, #128]
  425824:	str	w28, [x24, #8]
  425828:	str	w0, [x24, #12]
  42582c:	mov	x0, x2
  425830:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  425834:	ldr	x1, [sp, #176]
  425838:	stp	x0, x1, [x24, #16]
  42583c:	add	x1, x1, #0x1
  425840:	str	x1, [x24, #32]
  425844:	cbz	x22, 4258ec <ferror@plt+0x2231c>
  425848:	ldp	w0, w3, [x22]
  42584c:	ubfx	x0, x0, #0, #31
  425850:	cmp	w0, w3
  425854:	b.ne	42592c <ferror@plt+0x2235c>  // b.any
  425858:	ldrsb	w0, [x22, #3]
  42585c:	tbz	w0, #31, 4258fc <ferror@plt+0x2232c>
  425860:	ldr	w0, [sp, #160]
  425864:	add	w1, w3, #0x1
  425868:	mov	x2, #0x0                   	// #0
  42586c:	str	w0, [sp, #112]
  425870:	mov	x0, x2
  425874:	str	x2, [sp, #104]
  425878:	str	w3, [sp, #124]
  42587c:	bl	423a24 <ferror@plt+0x20454>
  425880:	ldr	x2, [sp, #104]
  425884:	mov	w28, w0
  425888:	ldr	w3, [sp, #124]
  42588c:	ubfiz	x1, x28, #3, #32
  425890:	add	x1, x1, #0x8
  425894:	cbz	x2, 425904 <ferror@plt+0x22334>
  425898:	ldr	w4, [x2, #4]
  42589c:	mov	x0, x2
  4258a0:	str	w3, [sp, #104]
  4258a4:	str	w4, [sp, #124]
  4258a8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4258ac:	mov	x1, x0
  4258b0:	ldr	w0, [sp, #112]
  4258b4:	ldr	w4, [sp, #124]
  4258b8:	and	w28, w28, #0x7fffffff
  4258bc:	ldr	w3, [sp, #104]
  4258c0:	stp	w28, w4, [x1]
  4258c4:	cbz	w0, 425910 <ferror@plt+0x22340>
  4258c8:	mov	w4, w3
  4258cc:	mov	x0, #0x0                   	// #0
  4258d0:	add	x2, x0, #0x1
  4258d4:	cmp	x4, x0
  4258d8:	b.eq	42590c <ferror@plt+0x2233c>  // b.none
  4258dc:	ldr	x0, [x22, x2, lsl #3]
  4258e0:	str	x0, [x1, x2, lsl #3]
  4258e4:	mov	x0, x2
  4258e8:	b	4258d0 <ferror@plt+0x22300>
  4258ec:	mov	x2, #0x0                   	// #0
  4258f0:	mov	w3, #0x0                   	// #0
  4258f4:	mov	w1, #0x1                   	// #1
  4258f8:	b	425870 <ferror@plt+0x222a0>
  4258fc:	mov	x2, x22
  425900:	b	4258f0 <ferror@plt+0x22320>
  425904:	mov	w4, #0x0                   	// #0
  425908:	b	42589c <ferror@plt+0x222cc>
  42590c:	str	w3, [x1, #4]
  425910:	ldr	w0, [x1, #4]
  425914:	mov	x22, x1
  425918:	add	w2, w0, #0x1
  42591c:	str	w2, [x1, #4]
  425920:	add	x0, x1, w0, uxtw #3
  425924:	str	x24, [x0, #8]
  425928:	b	4257e8 <ferror@plt+0x22218>
  42592c:	mov	x1, x22
  425930:	b	425910 <ferror@plt+0x22340>
  425934:	ldr	w0, [sp, #460]
  425938:	str	w0, [sp, #272]
  42593c:	cbz	x22, 425a40 <ferror@plt+0x22470>
  425940:	ldr	w0, [x22, #4]
  425944:	cbz	w0, 425954 <ferror@plt+0x22384>
  425948:	mov	x0, x19
  42594c:	mov	w1, #0x20                  	// #32
  425950:	bl	4237c8 <ferror@plt+0x201f8>
  425954:	add	x25, x19, #0x38
  425958:	mov	w27, #0x0                   	// #0
  42595c:	ldr	w0, [x22, #4]
  425960:	cmp	w27, w0
  425964:	b.cs	425a40 <ferror@plt+0x22470>  // b.hs, b.nlast
  425968:	add	x0, x22, w27, uxtw #3
  42596c:	ldr	x24, [x0, #8]
  425970:	ldp	w28, w4, [x24]
  425974:	add	w0, w4, #0x1
  425978:	cmp	w28, w0
  42597c:	b.eq	4259d8 <ferror@plt+0x22408>  // b.none
  425980:	ldr	x2, [sp, #432]
  425984:	mov	w1, #0x0                   	// #0
  425988:	add	x0, x2, #0x8
  42598c:	cbz	x2, 425af0 <ferror@plt+0x22520>
  425990:	ldr	w3, [x2, #4]
  425994:	cmp	w3, w1
  425998:	b.ls	425af0 <ferror@plt+0x22520>  // b.plast
  42599c:	ldr	w3, [x0]
  4259a0:	cmp	w21, w3
  4259a4:	b.ne	4259cc <ferror@plt+0x223fc>  // b.any
  4259a8:	ldr	w3, [x0, #4]
  4259ac:	cmp	w28, w3
  4259b0:	b.ne	4259cc <ferror@plt+0x223fc>  // b.any
  4259b4:	ldr	w3, [x0, #8]
  4259b8:	cmp	w21, w3
  4259bc:	b.ne	4259cc <ferror@plt+0x223fc>  // b.any
  4259c0:	ldr	w3, [x0, #12]
  4259c4:	cmp	w4, w3
  4259c8:	b.eq	425ae8 <ferror@plt+0x22518>  // b.none
  4259cc:	add	w1, w1, #0x1
  4259d0:	add	x0, x0, #0x28
  4259d4:	b	42598c <ferror@plt+0x223bc>
  4259d8:	ldr	w2, [x24, #8]
  4259dc:	mov	w3, #0x1                   	// #1
  4259e0:	add	x1, sp, #0x110
  4259e4:	mov	x0, x19
  4259e8:	bl	4239a8 <ferror@plt+0x203d8>
  4259ec:	mov	x0, x25
  4259f0:	mov	w1, #0xfffffffe            	// #-2
  4259f4:	bl	423858 <ferror@plt+0x20288>
  4259f8:	ldr	x1, [x24, #16]
  4259fc:	ldr	x0, [sp, #320]
  425a00:	bl	4292a8 <ferror@plt+0x25cd8>
  425a04:	mov	x0, x25
  425a08:	bl	423978 <ferror@plt+0x203a8>
  425a0c:	ldr	x1, [x24, #24]
  425a10:	ldr	w0, [sp, #272]
  425a14:	add	w0, w0, w1
  425a18:	str	w0, [sp, #272]
  425a1c:	add	w27, w27, #0x1
  425a20:	b	42595c <ferror@plt+0x2238c>
  425a24:	mov	x0, x25
  425a28:	bl	423978 <ferror@plt+0x203a8>
  425a2c:	ldr	x0, [x24, #24]
  425a30:	cbz	x0, 425a1c <ferror@plt+0x2244c>
  425a34:	mov	w2, w28
  425a38:	mov	w3, #0x1                   	// #1
  425a3c:	b	4259e0 <ferror@plt+0x22410>
  425a40:	mov	w21, #0x0                   	// #0
  425a44:	add	x1, sp, #0x110
  425a48:	mov	x0, x19
  425a4c:	mov	w3, #0x0                   	// #0
  425a50:	mov	w2, #0x0                   	// #0
  425a54:	bl	4239a8 <ferror@plt+0x203d8>
  425a58:	cbz	x22, 425a74 <ferror@plt+0x224a4>
  425a5c:	ldr	w0, [x22, #4]
  425a60:	cmp	w21, w0
  425a64:	b.cc	425a7c <ferror@plt+0x224ac>  // b.lo, b.ul, b.last
  425a68:	ldrsb	w0, [x22, #3]
  425a6c:	tbz	w0, #31, 425aa4 <ferror@plt+0x224d4>
  425a70:	str	wzr, [x22, #4]
  425a74:	add	x23, x23, #0x1
  425a78:	b	424b6c <ferror@plt+0x2159c>
  425a7c:	add	x0, x22, w21, uxtw #3
  425a80:	ldr	x24, [x0, #8]
  425a84:	cbz	x24, 425a9c <ferror@plt+0x224cc>
  425a88:	ldr	x0, [x24, #16]
  425a8c:	bl	4032a0 <free@plt>
  425a90:	mov	x0, x24
  425a94:	mov	x1, #0x28                  	// #40
  425a98:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  425a9c:	add	w21, w21, #0x1
  425aa0:	b	425a58 <ferror@plt+0x22488>
  425aa4:	mov	x0, x22
  425aa8:	bl	4032a0 <free@plt>
  425aac:	b	425a74 <ferror@plt+0x224a4>
  425ab0:	ldr	x21, [sp, #168]
  425ab4:	b	424ae8 <ferror@plt+0x21518>
  425ab8:	ldr	x0, [x20]
  425abc:	ldr	x1, [sp, #136]
  425ac0:	bl	428bb4 <ferror@plt+0x255e4>
  425ac4:	mov	x0, x19
  425ac8:	bl	423d40 <ferror@plt+0x20770>
  425acc:	ldp	x19, x20, [sp, #16]
  425ad0:	ldp	x21, x22, [sp, #32]
  425ad4:	ldp	x23, x24, [sp, #48]
  425ad8:	ldp	x25, x26, [sp, #64]
  425adc:	ldp	x27, x28, [sp, #80]
  425ae0:	ldp	x29, x30, [sp], #464
  425ae4:	ret
  425ae8:	ldr	x0, [x24, #24]
  425aec:	cbnz	x0, 425a34 <ferror@plt+0x22464>
  425af0:	mov	w2, w28
  425af4:	mov	w3, #0x1                   	// #1
  425af8:	add	x1, sp, #0x110
  425afc:	mov	x0, x19
  425b00:	str	w4, [sp, #96]
  425b04:	bl	4239a8 <ferror@plt+0x203d8>
  425b08:	mov	x0, x25
  425b0c:	mov	w1, #0xfffffffd            	// #-3
  425b10:	bl	423858 <ferror@plt+0x20288>
  425b14:	ldr	w4, [sp, #96]
  425b18:	ldr	w0, [sp, #272]
  425b1c:	str	w4, [sp, #96]
  425b20:	cmp	w4, w0
  425b24:	b.lt	425a24 <ferror@plt+0x22454>  // b.tstop
  425b28:	ldr	x0, [sp, #320]
  425b2c:	mov	w1, #0x2d                  	// #45
  425b30:	bl	428efc <ferror@plt+0x2592c>
  425b34:	ldr	w0, [sp, #272]
  425b38:	add	w0, w0, #0x1
  425b3c:	str	w0, [sp, #272]
  425b40:	b	425b14 <ferror@plt+0x22544>
  425b44:	stp	x29, x30, [sp, #-64]!
  425b48:	and	w2, w2, #0xff
  425b4c:	mov	x29, sp
  425b50:	stp	x23, x24, [sp, #48]
  425b54:	ldr	x23, [x0]
  425b58:	stp	x19, x20, [sp, #16]
  425b5c:	mov	x20, x0
  425b60:	stp	x21, x22, [sp, #32]
  425b64:	cbz	x23, 425b84 <ferror@plt+0x225b4>
  425b68:	ldp	w0, w21, [x23]
  425b6c:	ubfx	x0, x0, #0, #31
  425b70:	sub	w0, w0, w21
  425b74:	cmp	w1, w0
  425b78:	b.hi	425b94 <ferror@plt+0x225c4>  // b.pmore
  425b7c:	mov	w19, #0x0                   	// #0
  425b80:	b	425c18 <ferror@plt+0x22648>
  425b84:	mov	w19, #0x0                   	// #0
  425b88:	cbz	w1, 425c18 <ferror@plt+0x22648>
  425b8c:	mov	w21, #0x0                   	// #0
  425b90:	b	425ba8 <ferror@plt+0x225d8>
  425b94:	ldrsb	w0, [x23, #3]
  425b98:	tbz	w0, #31, 425c04 <ferror@plt+0x22634>
  425b9c:	add	w1, w1, w21
  425ba0:	mov	w19, #0x1                   	// #1
  425ba4:	str	xzr, [x20]
  425ba8:	ldr	x0, [x20]
  425bac:	bl	410018 <ferror@plt+0xca48>
  425bb0:	mov	w22, w0
  425bb4:	ldr	x0, [x20]
  425bb8:	ubfiz	x1, x22, #3, #32
  425bbc:	add	x1, x1, #0x8
  425bc0:	cbz	x0, 425c0c <ferror@plt+0x2263c>
  425bc4:	ldr	w24, [x0, #4]
  425bc8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  425bcc:	str	x0, [x20]
  425bd0:	and	w22, w22, #0x7fffffff
  425bd4:	stp	w22, w24, [x0]
  425bd8:	mov	x1, x0
  425bdc:	cbz	w19, 425c30 <ferror@plt+0x22660>
  425be0:	mov	w3, w21
  425be4:	mov	x0, #0x0                   	// #0
  425be8:	add	x2, x0, #0x1
  425bec:	cmp	x0, x3
  425bf0:	b.eq	425c14 <ferror@plt+0x22644>  // b.none
  425bf4:	ldr	x0, [x23, x2, lsl #3]
  425bf8:	str	x0, [x1, x2, lsl #3]
  425bfc:	mov	x0, x2
  425c00:	b	425be8 <ferror@plt+0x22618>
  425c04:	mov	w19, #0x0                   	// #0
  425c08:	b	425b8c <ferror@plt+0x225bc>
  425c0c:	mov	w24, #0x0                   	// #0
  425c10:	b	425bc8 <ferror@plt+0x225f8>
  425c14:	str	w21, [x1, #4]
  425c18:	mov	w0, w19
  425c1c:	ldp	x19, x20, [sp, #16]
  425c20:	ldp	x21, x22, [sp, #32]
  425c24:	ldp	x23, x24, [sp, #48]
  425c28:	ldp	x29, x30, [sp], #64
  425c2c:	ret
  425c30:	mov	w19, #0x1                   	// #1
  425c34:	b	425c18 <ferror@plt+0x22648>
  425c38:	ret
  425c3c:	ret
  425c40:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  425c44:	add	x1, x0, #0x208
  425c48:	str	xzr, [x0, #520]
  425c4c:	str	xzr, [x1, #8]
  425c50:	ret
  425c54:	stp	x29, x30, [sp, #-32]!
  425c58:	mov	x29, sp
  425c5c:	stp	x19, x20, [sp, #16]
  425c60:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  425c64:	add	x19, x19, #0x208
  425c68:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  425c6c:	ldr	x1, [x20, #1264]
  425c70:	ldr	x0, [x19, #16]
  425c74:	bl	426bec <ferror@plt+0x2361c>
  425c78:	ldr	x1, [x20, #1264]
  425c7c:	mov	w0, #0xa                   	// #10
  425c80:	bl	402e40 <fputc@plt>
  425c84:	ldr	x0, [x19, #16]
  425c88:	cbz	x0, 425c98 <ferror@plt+0x226c8>
  425c8c:	ldr	x1, [x0]
  425c90:	ldr	x1, [x1, #8]
  425c94:	blr	x1
  425c98:	str	xzr, [x19, #16]
  425c9c:	ldp	x19, x20, [sp, #16]
  425ca0:	ldp	x29, x30, [sp], #32
  425ca4:	ret
  425ca8:	stp	x29, x30, [sp, #-64]!
  425cac:	add	x8, sp, #0x20
  425cb0:	mov	x29, sp
  425cb4:	stp	x19, x20, [sp, #16]
  425cb8:	bl	42b590 <ferror@plt+0x27fc0>
  425cbc:	mov	x0, #0x38                  	// #56
  425cc0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425cc4:	stp	xzr, xzr, [x0]
  425cc8:	mov	x19, x0
  425ccc:	stp	xzr, xzr, [x0, #16]
  425cd0:	stp	xzr, xzr, [x0, #32]
  425cd4:	str	xzr, [x0, #48]
  425cd8:	bl	4262d0 <ferror@plt+0x22d00>
  425cdc:	mov	x0, #0x10                  	// #16
  425ce0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425ce4:	ldr	x1, [sp, #32]
  425ce8:	mov	x20, x0
  425cec:	bl	426778 <ferror@plt+0x231a8>
  425cf0:	mov	x2, x20
  425cf4:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  425cf8:	add	x1, x1, #0x5f
  425cfc:	mov	x0, x19
  425d00:	bl	426988 <ferror@plt+0x233b8>
  425d04:	adrp	x20, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425d08:	mov	x0, #0x10                  	// #16
  425d0c:	add	x20, x20, #0x700
  425d10:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425d14:	mov	x2, x0
  425d18:	ldr	w0, [sp, #40]
  425d1c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425d20:	add	x1, x1, #0xfdf
  425d24:	str	x20, [x2]
  425d28:	scvtf	d0, w0
  425d2c:	mov	x0, x19
  425d30:	str	d0, [x2, #8]
  425d34:	bl	426988 <ferror@plt+0x233b8>
  425d38:	mov	x0, #0x10                  	// #16
  425d3c:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425d40:	mov	x2, x0
  425d44:	ldr	w0, [sp, #44]
  425d48:	adrp	x1, 498000 <_obstack_memory_used@@Base+0x3bc10>
  425d4c:	add	x1, x1, #0x744
  425d50:	scvtf	d0, w0
  425d54:	str	x20, [x2]
  425d58:	mov	x0, x19
  425d5c:	str	d0, [x2, #8]
  425d60:	bl	426988 <ferror@plt+0x233b8>
  425d64:	mov	x0, x19
  425d68:	ldp	x19, x20, [sp, #16]
  425d6c:	ldp	x29, x30, [sp], #64
  425d70:	ret
  425d74:	stp	x29, x30, [sp, #-128]!
  425d78:	mov	x29, sp
  425d7c:	stp	x19, x20, [sp, #16]
  425d80:	mov	x20, x1
  425d84:	stp	x21, x22, [sp, #32]
  425d88:	mov	x21, x0
  425d8c:	mov	x0, #0x38                  	// #56
  425d90:	stp	x23, x24, [sp, #48]
  425d94:	mov	w23, w2
  425d98:	stp	x25, x26, [sp, #64]
  425d9c:	stp	x27, x28, [sp, #80]
  425da0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425da4:	mov	x19, x0
  425da8:	stp	xzr, xzr, [x0]
  425dac:	stp	xzr, xzr, [x0, #16]
  425db0:	stp	xzr, xzr, [x0, #32]
  425db4:	str	xzr, [x0, #48]
  425db8:	bl	4262d0 <ferror@plt+0x22d00>
  425dbc:	ldrsw	x1, [x20, #56]
  425dc0:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425dc4:	add	x0, x0, #0x5d0
  425dc8:	ldr	x22, [x0, x1, lsl #3]
  425dcc:	mov	x0, x22
  425dd0:	bl	402d50 <strlen@plt>
  425dd4:	cmp	x0, #0x2
  425dd8:	b.hi	425df4 <ferror@plt+0x22824>  // b.pmore
  425ddc:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425de0:	add	x2, x2, #0x552
  425de4:	mov	w1, #0x82                  	// #130
  425de8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425dec:	add	x0, x0, #0x566
  425df0:	bl	403600 <ferror@plt+0x30>
  425df4:	sub	x24, x0, #0x2
  425df8:	ldrb	w1, [x22, x24]
  425dfc:	cmp	w1, #0x3a
  425e00:	b.eq	425e14 <ferror@plt+0x22844>  // b.none
  425e04:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425e08:	mov	w1, #0x83                  	// #131
  425e0c:	add	x2, x2, #0x552
  425e10:	b	425de8 <ferror@plt+0x22818>
  425e14:	add	x3, x22, x0
  425e18:	ldurb	w0, [x3, #-1]
  425e1c:	cmp	w0, #0x20
  425e20:	b.eq	425e34 <ferror@plt+0x22864>  // b.none
  425e24:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425e28:	mov	w1, #0x84                  	// #132
  425e2c:	add	x2, x2, #0x552
  425e30:	b	425de8 <ferror@plt+0x22818>
  425e34:	mov	x0, x22
  425e38:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  425e3c:	strb	wzr, [x0, x24]
  425e40:	mov	x22, x0
  425e44:	mov	x0, #0x10                  	// #16
  425e48:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425e4c:	mov	x24, x0
  425e50:	mov	x1, x22
  425e54:	bl	426778 <ferror@plt+0x231a8>
  425e58:	mov	x2, x24
  425e5c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425e60:	add	x1, x1, #0x58a
  425e64:	mov	x0, x19
  425e68:	bl	426988 <ferror@plt+0x233b8>
  425e6c:	mov	x0, x22
  425e70:	bl	4032a0 <free@plt>
  425e74:	ldr	x0, [x21]
  425e78:	bl	428c94 <ferror@plt+0x256c4>
  425e7c:	mov	x24, x0
  425e80:	mov	x0, #0x10                  	// #16
  425e84:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425e88:	mov	x1, x24
  425e8c:	mov	x22, x0
  425e90:	bl	426778 <ferror@plt+0x231a8>
  425e94:	mov	x2, x22
  425e98:	mov	x0, x19
  425e9c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425ea0:	add	x1, x1, #0x58f
  425ea4:	bl	426988 <ferror@plt+0x233b8>
  425ea8:	ldr	x0, [x21]
  425eac:	bl	428b64 <ferror@plt+0x25594>
  425eb0:	ldp	w3, w1, [x20, #56]
  425eb4:	mov	x0, x21
  425eb8:	ldr	x4, [x21, #184]
  425ebc:	mov	w2, w23
  425ec0:	blr	x4
  425ec4:	mov	x21, x0
  425ec8:	cbz	x0, 425efc <ferror@plt+0x2292c>
  425ecc:	mov	x0, #0x10                  	// #16
  425ed0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425ed4:	mov	x1, x21
  425ed8:	mov	x22, x0
  425edc:	bl	426778 <ferror@plt+0x231a8>
  425ee0:	mov	x2, x22
  425ee4:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  425ee8:	add	x1, x1, #0xafb
  425eec:	mov	x0, x19
  425ef0:	bl	426988 <ferror@plt+0x233b8>
  425ef4:	mov	x0, x21
  425ef8:	bl	4032a0 <free@plt>
  425efc:	adrp	x22, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  425f00:	adrp	x26, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425f04:	add	x21, x22, #0x208
  425f08:	add	x26, x26, #0x6d0
  425f0c:	ldr	x0, [x22, #520]
  425f10:	cbz	x0, 4260bc <ferror@plt+0x22aec>
  425f14:	ldr	x0, [x21, #8]
  425f18:	cbnz	x0, 425f2c <ferror@plt+0x2295c>
  425f1c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  425f20:	mov	w1, #0x9d                  	// #157
  425f24:	add	x2, x2, #0x552
  425f28:	b	425de8 <ferror@plt+0x22818>
  425f2c:	mov	x1, x19
  425f30:	bl	426648 <ferror@plt+0x23078>
  425f34:	mov	x0, #0x10                  	// #16
  425f38:	mov	w24, #0x0                   	// #0
  425f3c:	ldr	x25, [x20, #40]
  425f40:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425f44:	mov	x21, x0
  425f48:	mov	x2, x0
  425f4c:	adrp	x1, 492000 <_obstack_memory_used@@Base+0x35c10>
  425f50:	mov	x0, x19
  425f54:	add	x1, x1, #0x2d
  425f58:	adrp	x28, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  425f5c:	stp	x26, xzr, [x21]
  425f60:	bl	426988 <ferror@plt+0x233b8>
  425f64:	adrp	x0, 491000 <_obstack_memory_used@@Base+0x34c10>
  425f68:	add	x0, x0, #0x8cd
  425f6c:	str	x0, [sp, #104]
  425f70:	adrp	x0, 48e000 <_obstack_memory_used@@Base+0x31c10>
  425f74:	add	x0, x0, #0x91c
  425f78:	str	x0, [sp, #112]
  425f7c:	ldr	w0, [x25, #8]
  425f80:	cmp	w24, w0
  425f84:	b.cs	4260f4 <ferror@plt+0x22b24>  // b.hs, b.nlast
  425f88:	mov	w1, w24
  425f8c:	mov	x0, x25
  425f90:	bl	441170 <ferror@plt+0x3dba0>
  425f94:	mov	x22, x0
  425f98:	ldr	x0, [x28, #560]
  425f9c:	ldr	w1, [x22]
  425fa0:	bl	4401e0 <ferror@plt+0x3cc10>
  425fa4:	mov	w23, w0
  425fa8:	cbz	w0, 4260b4 <ferror@plt+0x22ae4>
  425fac:	ldr	w1, [x22]
  425fb0:	ldr	x0, [x28, #560]
  425fb4:	bl	4400fc <ferror@plt+0x3cb2c>
  425fb8:	mov	x3, x0
  425fbc:	ldr	w1, [x22]
  425fc0:	ldr	x0, [x28, #560]
  425fc4:	str	x3, [sp, #120]
  425fc8:	bl	4400fc <ferror@plt+0x3cb2c>
  425fcc:	lsr	x27, x0, #32
  425fd0:	mov	x0, #0x38                  	// #56
  425fd4:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  425fd8:	stp	xzr, xzr, [x0]
  425fdc:	mov	x20, x0
  425fe0:	stp	xzr, xzr, [x0, #16]
  425fe4:	stp	xzr, xzr, [x0, #32]
  425fe8:	str	xzr, [x0, #48]
  425fec:	bl	4262d0 <ferror@plt+0x22d00>
  425ff0:	mov	w0, w23
  425ff4:	bl	425ca8 <ferror@plt+0x226d8>
  425ff8:	ldr	x1, [sp, #104]
  425ffc:	mov	x2, x0
  426000:	mov	x0, x20
  426004:	bl	426988 <ferror@plt+0x233b8>
  426008:	ldr	x3, [sp, #120]
  42600c:	cmp	w23, w3
  426010:	b.eq	426030 <ferror@plt+0x22a60>  // b.none
  426014:	mov	w0, w3
  426018:	bl	425ca8 <ferror@plt+0x226d8>
  42601c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426020:	mov	x2, x0
  426024:	add	x1, x1, #0x5a0
  426028:	mov	x0, x20
  42602c:	bl	426988 <ferror@plt+0x233b8>
  426030:	cmp	w23, w27
  426034:	b.eq	426054 <ferror@plt+0x22a84>  // b.none
  426038:	mov	w0, w27
  42603c:	bl	425ca8 <ferror@plt+0x226d8>
  426040:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426044:	mov	x2, x0
  426048:	add	x1, x1, #0x5a6
  42604c:	mov	x0, x20
  426050:	bl	426988 <ferror@plt+0x233b8>
  426054:	ldr	x0, [x22, #8]
  426058:	cbz	x0, 4260a8 <ferror@plt+0x22ad8>
  42605c:	ldr	x1, [x0]
  426060:	ldr	x2, [x1, #16]
  426064:	mov	w1, w24
  426068:	blr	x2
  42606c:	mov	x22, x0
  426070:	and	w23, w1, #0xff
  426074:	cbz	x0, 42609c <ferror@plt+0x22acc>
  426078:	mov	x0, #0x10                  	// #16
  42607c:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  426080:	mov	x1, x22
  426084:	mov	x27, x0
  426088:	bl	426778 <ferror@plt+0x231a8>
  42608c:	ldr	x1, [sp, #112]
  426090:	mov	x2, x27
  426094:	mov	x0, x20
  426098:	bl	426988 <ferror@plt+0x233b8>
  42609c:	cbz	w23, 4260a8 <ferror@plt+0x22ad8>
  4260a0:	mov	x0, x22
  4260a4:	bl	4032a0 <free@plt>
  4260a8:	mov	x1, x20
  4260ac:	mov	x0, x21
  4260b0:	bl	426648 <ferror@plt+0x23078>
  4260b4:	add	w24, w24, #0x1
  4260b8:	b	425f7c <ferror@plt+0x229ac>
  4260bc:	ldr	x0, [x21, #16]
  4260c0:	mov	x1, x19
  4260c4:	bl	426648 <ferror@plt+0x23078>
  4260c8:	str	x19, [x22, #520]
  4260cc:	mov	x0, #0x10                  	// #16
  4260d0:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  4260d4:	mov	x2, x0
  4260d8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4260dc:	mov	x0, x19
  4260e0:	add	x1, x1, #0x597
  4260e4:	str	x2, [x21, #8]
  4260e8:	stp	x26, xzr, [x2]
  4260ec:	bl	426988 <ferror@plt+0x233b8>
  4260f0:	b	425f34 <ferror@plt+0x22964>
  4260f4:	ldr	w0, [x25, #120]
  4260f8:	cbz	w0, 426200 <ferror@plt+0x22c30>
  4260fc:	mov	x0, #0x10                  	// #16
  426100:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  426104:	mov	x23, x0
  426108:	adrp	x22, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42610c:	adrp	x21, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  426110:	add	x22, x22, #0x5a0
  426114:	add	x21, x21, #0x64e
  426118:	mov	w20, #0x0                   	// #0
  42611c:	stp	x26, xzr, [x23]
  426120:	add	x26, x25, #0x78
  426124:	mov	x2, x0
  426128:	adrp	x1, 491000 <_obstack_memory_used@@Base+0x34c10>
  42612c:	mov	x0, x19
  426130:	add	x1, x1, #0x886
  426134:	bl	426988 <ferror@plt+0x233b8>
  426138:	ldr	w0, [x25, #120]
  42613c:	cmp	w20, w0
  426140:	b.cs	426200 <ferror@plt+0x22c30>  // b.hs, b.nlast
  426144:	sxtw	x1, w20
  426148:	cmp	w20, #0x1
  42614c:	b.gt	4261ec <ferror@plt+0x22c1c>
  426150:	add	x1, x1, #0x1
  426154:	add	x1, x26, x1, lsl #3
  426158:	ldr	x24, [x1]
  42615c:	mov	x0, #0x38                  	// #56
  426160:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  426164:	stp	xzr, xzr, [x0]
  426168:	mov	x19, x0
  42616c:	stp	xzr, xzr, [x0, #16]
  426170:	add	w20, w20, #0x1
  426174:	stp	xzr, xzr, [x0, #32]
  426178:	str	xzr, [x0, #48]
  42617c:	bl	4262d0 <ferror@plt+0x22d00>
  426180:	ldr	w0, [x24]
  426184:	bl	425ca8 <ferror@plt+0x226d8>
  426188:	mov	x2, x0
  42618c:	mov	x1, x22
  426190:	mov	x0, x19
  426194:	bl	426988 <ferror@plt+0x233b8>
  426198:	ldr	w0, [x24, #4]
  42619c:	bl	425ca8 <ferror@plt+0x226d8>
  4261a0:	mov	x2, x0
  4261a4:	mov	x1, x21
  4261a8:	mov	x0, x19
  4261ac:	bl	426988 <ferror@plt+0x233b8>
  4261b0:	ldr	x27, [x24, #8]
  4261b4:	mov	x0, #0x10                  	// #16
  4261b8:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  4261bc:	mov	x24, x0
  4261c0:	mov	x1, x27
  4261c4:	bl	426778 <ferror@plt+0x231a8>
  4261c8:	mov	x2, x24
  4261cc:	mov	x0, x19
  4261d0:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4261d4:	add	x1, x1, #0xa15
  4261d8:	bl	426988 <ferror@plt+0x233b8>
  4261dc:	mov	x1, x19
  4261e0:	mov	x0, x23
  4261e4:	bl	426648 <ferror@plt+0x23078>
  4261e8:	b	426138 <ferror@plt+0x22b68>
  4261ec:	mov	x1, #0xfffffffffffffff0    	// #-16
  4261f0:	add	x0, x1, w20, sxtw #3
  4261f4:	ldr	x1, [x26, #32]
  4261f8:	add	x1, x1, x0
  4261fc:	b	426158 <ferror@plt+0x22b88>
  426200:	ldp	x19, x20, [sp, #16]
  426204:	ldp	x21, x22, [sp, #32]
  426208:	ldp	x23, x24, [sp, #48]
  42620c:	ldp	x25, x26, [sp, #64]
  426210:	ldp	x27, x28, [sp, #80]
  426214:	ldp	x29, x30, [sp], #128
  426218:	ret
  42621c:	cbz	w1, 4262cc <ferror@plt+0x22cfc>
  426220:	stp	x29, x30, [sp, #-32]!
  426224:	cmp	w1, #0x1
  426228:	mov	x29, sp
  42622c:	stp	x19, x20, [sp, #16]
  426230:	b.eq	42624c <ferror@plt+0x22c7c>  // b.none
  426234:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426238:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42623c:	add	x2, x2, #0x5ad
  426240:	add	x0, x0, #0x566
  426244:	mov	w1, #0xee                  	// #238
  426248:	bl	403600 <ferror@plt+0x30>
  42624c:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  426250:	add	x20, x20, #0x208
  426254:	mov	x19, x0
  426258:	ldr	x0, [x20, #16]
  42625c:	cbnz	x0, 426278 <ferror@plt+0x22ca8>
  426260:	mov	x0, #0x10                  	// #16
  426264:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  426268:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42626c:	add	x1, x1, #0x6d0
  426270:	stp	x1, xzr, [x0]
  426274:	str	x0, [x20, #16]
  426278:	adrp	x0, 425000 <ferror@plt+0x21a30>
  42627c:	add	x0, x0, #0xc38
  426280:	str	x0, [x19, #136]
  426284:	adrp	x0, 425000 <ferror@plt+0x21a30>
  426288:	add	x0, x0, #0xd74
  42628c:	str	x0, [x19, #152]
  426290:	adrp	x0, 425000 <ferror@plt+0x21a30>
  426294:	add	x0, x0, #0xc3c
  426298:	str	x0, [x19, #248]
  42629c:	adrp	x0, 425000 <ferror@plt+0x21a30>
  4262a0:	add	x0, x0, #0xc40
  4262a4:	str	x0, [x19, #256]
  4262a8:	adrp	x0, 425000 <ferror@plt+0x21a30>
  4262ac:	add	x0, x0, #0xc54
  4262b0:	str	x0, [x19, #264]
  4262b4:	ldr	x0, [x19]
  4262b8:	strb	wzr, [x19, #119]
  4262bc:	ldp	x19, x20, [sp, #16]
  4262c0:	strb	wzr, [x0, #67]
  4262c4:	ldp	x29, x30, [sp], #32
  4262c8:	ret
  4262cc:	ret
  4262d0:	stp	x29, x30, [sp, #-48]!
  4262d4:	mov	x29, sp
  4262d8:	stp	x19, x20, [sp, #16]
  4262dc:	mov	x19, x0
  4262e0:	mov	x20, x0
  4262e4:	stp	x21, x22, [sp, #32]
  4262e8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4262ec:	add	x0, x0, #0x6a0
  4262f0:	str	x0, [x19], #8
  4262f4:	mov	x0, #0xd                   	// #13
  4262f8:	stp	xzr, xzr, [x19, #16]
  4262fc:	str	xzr, [x20, #40]
  426300:	strb	wzr, [x19, #44]
  426304:	bl	41fad8 <ferror@plt+0x1c508>
  426308:	mov	w21, w0
  42630c:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  426310:	add	x0, x0, #0xa78
  426314:	ubfiz	x1, x21, #4, #32
  426318:	ldr	w22, [x0, x1]
  42631c:	mov	x1, #0x10                  	// #16
  426320:	mov	x0, x22
  426324:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  426328:	mov	x1, #0x0                   	// #0
  42632c:	cmp	x22, x1
  426330:	b.ls	426344 <ferror@plt+0x22d74>  // b.plast
  426334:	lsl	x2, x1, #4
  426338:	add	x1, x1, #0x1
  42633c:	str	xzr, [x0, x2]
  426340:	b	42632c <ferror@plt+0x22d5c>
  426344:	str	x0, [x20, #8]
  426348:	str	x22, [x19, #8]
  42634c:	str	w21, [x19, #40]
  426350:	ldp	x19, x20, [sp, #16]
  426354:	ldp	x21, x22, [sp, #32]
  426358:	ldp	x29, x30, [sp], #48
  42635c:	ret
  426360:	stp	x29, x30, [sp, #-64]!
  426364:	mov	x29, sp
  426368:	stp	x19, x20, [sp, #16]
  42636c:	mov	x20, x0
  426370:	mov	x19, x1
  426374:	mov	x0, x19
  426378:	mov	w1, #0x22                  	// #34
  42637c:	stp	x21, x22, [sp, #32]
  426380:	adrp	x21, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426384:	adrp	x22, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426388:	str	x23, [sp, #48]
  42638c:	bl	428efc <ferror@plt+0x2592c>
  426390:	ldr	x20, [x20, #8]
  426394:	add	x21, x21, #0x32
  426398:	add	x22, x22, #0x35
  42639c:	adrp	x23, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4263a0:	ldrb	w1, [x20]
  4263a4:	cbz	w1, 426440 <ferror@plt+0x22e70>
  4263a8:	cmp	w1, #0xd
  4263ac:	b.hi	4263d8 <ferror@plt+0x22e08>  // b.pmore
  4263b0:	cmp	w1, #0x7
  4263b4:	b.ls	4263e8 <ferror@plt+0x22e18>  // b.plast
  4263b8:	sub	w0, w1, #0x8
  4263bc:	cmp	w0, #0x5
  4263c0:	b.hi	4263e8 <ferror@plt+0x22e18>  // b.pmore
  4263c4:	add	x2, x23, #0x688
  4263c8:	ldrb	w0, [x2, w0, uxtw]
  4263cc:	adr	x2, 4263d8 <ferror@plt+0x22e08>
  4263d0:	add	x0, x2, w0, sxtb #2
  4263d4:	br	x0
  4263d8:	cmp	w1, #0x22
  4263dc:	b.eq	4263f4 <ferror@plt+0x22e24>  // b.none
  4263e0:	cmp	w1, #0x5c
  4263e4:	b.eq	426408 <ferror@plt+0x22e38>  // b.none
  4263e8:	mov	x0, x19
  4263ec:	bl	428efc <ferror@plt+0x2592c>
  4263f0:	b	426400 <ferror@plt+0x22e30>
  4263f4:	mov	x1, x22
  4263f8:	mov	x0, x19
  4263fc:	bl	4292a8 <ferror@plt+0x25cd8>
  426400:	add	x20, x20, #0x1
  426404:	b	4263a0 <ferror@plt+0x22dd0>
  426408:	mov	x1, x21
  42640c:	b	4263f8 <ferror@plt+0x22e28>
  426410:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426414:	add	x1, x1, #0x648
  426418:	b	4263f8 <ferror@plt+0x22e28>
  42641c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426420:	add	x1, x1, #0x64b
  426424:	b	4263f8 <ferror@plt+0x22e28>
  426428:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42642c:	add	x1, x1, #0x64e
  426430:	b	4263f8 <ferror@plt+0x22e28>
  426434:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426438:	add	x1, x1, #0x2f
  42643c:	b	4263f8 <ferror@plt+0x22e28>
  426440:	mov	x0, x19
  426444:	mov	w1, #0x22                  	// #34
  426448:	ldp	x19, x20, [sp, #16]
  42644c:	ldp	x21, x22, [sp, #32]
  426450:	ldr	x23, [sp, #48]
  426454:	ldp	x29, x30, [sp], #64
  426458:	b	428efc <ferror@plt+0x2592c>
  42645c:	sub	sp, sp, #0x420
  426460:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x1bc10>
  426464:	add	x2, x2, #0xfa6
  426468:	stp	x29, x30, [sp]
  42646c:	mov	x29, sp
  426470:	ldr	d0, [x0, #8]
  426474:	add	x0, sp, #0x20
  426478:	str	x19, [sp, #16]
  42647c:	mov	x19, x1
  426480:	mov	x1, #0x400                 	// #1024
  426484:	bl	402ea0 <snprintf@plt>
  426488:	add	x1, sp, #0x20
  42648c:	mov	x0, x19
  426490:	bl	4292a8 <ferror@plt+0x25cd8>
  426494:	ldp	x29, x30, [sp]
  426498:	ldr	x19, [sp, #16]
  42649c:	add	sp, sp, #0x420
  4264a0:	ret
  4264a4:	mov	x2, x0
  4264a8:	mov	x0, x1
  4264ac:	ldr	w1, [x2, #8]
  4264b0:	cmp	w1, #0x5
  4264b4:	b.eq	4264d4 <ferror@plt+0x22f04>  // b.none
  4264b8:	cmp	w1, #0x6
  4264bc:	b.eq	4264e0 <ferror@plt+0x22f10>  // b.none
  4264c0:	cmp	w1, #0x4
  4264c4:	b.ne	4264ec <ferror@plt+0x22f1c>  // b.any
  4264c8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4264cc:	add	x1, x1, #0x651
  4264d0:	b	4292a8 <ferror@plt+0x25cd8>
  4264d4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4264d8:	add	x1, x1, #0x656
  4264dc:	b	4264d0 <ferror@plt+0x22f00>
  4264e0:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  4264e4:	add	x1, x1, #0x2a
  4264e8:	b	4264d0 <ferror@plt+0x22f00>
  4264ec:	stp	x29, x30, [sp, #-16]!
  4264f0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4264f4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4264f8:	mov	x29, sp
  4264fc:	add	x2, x2, #0x65c
  426500:	add	x0, x0, #0x662
  426504:	mov	w1, #0xde                  	// #222
  426508:	bl	403600 <ferror@plt+0x30>
  42650c:	stp	x29, x30, [sp, #-64]!
  426510:	mov	x29, sp
  426514:	stp	x19, x20, [sp, #16]
  426518:	mov	x19, x1
  42651c:	mov	w20, #0x0                   	// #0
  426520:	mov	w1, #0x5b                  	// #91
  426524:	stp	x21, x22, [sp, #32]
  426528:	mov	x21, x0
  42652c:	adrp	x22, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426530:	mov	x0, x19
  426534:	add	x22, x22, #0x674
  426538:	str	x23, [sp, #48]
  42653c:	bl	428efc <ferror@plt+0x2592c>
  426540:	ldr	x1, [x21, #8]
  426544:	cbz	x1, 426588 <ferror@plt+0x22fb8>
  426548:	ldr	w0, [x1, #4]
  42654c:	cmp	w20, w0
  426550:	b.cs	426588 <ferror@plt+0x22fb8>  // b.hs, b.nlast
  426554:	add	x1, x1, w20, uxtw #3
  426558:	ldr	x23, [x1, #8]
  42655c:	cbz	w20, 42656c <ferror@plt+0x22f9c>
  426560:	mov	x1, x22
  426564:	mov	x0, x19
  426568:	bl	4292a8 <ferror@plt+0x25cd8>
  42656c:	ldr	x0, [x23]
  426570:	mov	x1, x19
  426574:	add	w20, w20, #0x1
  426578:	ldr	x2, [x0, #24]
  42657c:	mov	x0, x23
  426580:	blr	x2
  426584:	b	426540 <ferror@plt+0x22f70>
  426588:	mov	x0, x19
  42658c:	mov	w1, #0x5d                  	// #93
  426590:	ldp	x19, x20, [sp, #16]
  426594:	ldp	x21, x22, [sp, #32]
  426598:	ldr	x23, [sp, #48]
  42659c:	ldp	x29, x30, [sp], #64
  4265a0:	b	428efc <ferror@plt+0x2592c>
  4265a4:	stp	x29, x30, [sp, #-32]!
  4265a8:	mov	x29, sp
  4265ac:	stp	x19, x20, [sp, #16]
  4265b0:	mov	x20, x0
  4265b4:	mov	w19, #0x0                   	// #0
  4265b8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4265bc:	add	x0, x0, #0x6d0
  4265c0:	str	x0, [x20]
  4265c4:	ldr	x0, [x20, #8]
  4265c8:	cbz	x0, 4265f8 <ferror@plt+0x23028>
  4265cc:	ldr	w1, [x0, #4]
  4265d0:	cmp	w19, w1
  4265d4:	b.cs	4265ec <ferror@plt+0x2301c>  // b.hs, b.nlast
  4265d8:	add	x1, x0, w19, uxtw #3
  4265dc:	ldr	x0, [x1, #8]
  4265e0:	cbnz	x0, 426604 <ferror@plt+0x23034>
  4265e4:	add	w19, w19, #0x1
  4265e8:	b	4265c4 <ferror@plt+0x22ff4>
  4265ec:	ldrsb	w1, [x0, #3]
  4265f0:	tbz	w1, #31, 426614 <ferror@plt+0x23044>
  4265f4:	str	wzr, [x0, #4]
  4265f8:	ldp	x19, x20, [sp, #16]
  4265fc:	ldp	x29, x30, [sp], #32
  426600:	ret
  426604:	ldr	x1, [x0]
  426608:	ldr	x1, [x1, #8]
  42660c:	blr	x1
  426610:	b	4265e4 <ferror@plt+0x23014>
  426614:	ldp	x19, x20, [sp, #16]
  426618:	ldp	x29, x30, [sp], #32
  42661c:	b	4032a0 <free@plt>
  426620:	stp	x29, x30, [sp, #-32]!
  426624:	mov	x29, sp
  426628:	str	x19, [sp, #16]
  42662c:	mov	x19, x0
  426630:	bl	4265a4 <ferror@plt+0x22fd4>
  426634:	mov	x0, x19
  426638:	mov	x1, #0x10                  	// #16
  42663c:	ldr	x19, [sp, #16]
  426640:	ldp	x29, x30, [sp], #32
  426644:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  426648:	stp	x29, x30, [sp, #-80]!
  42664c:	mov	x29, sp
  426650:	stp	x19, x20, [sp, #16]
  426654:	stp	x21, x22, [sp, #32]
  426658:	stp	x23, x24, [sp, #48]
  42665c:	str	x25, [sp, #64]
  426660:	cbnz	x1, 42667c <ferror@plt+0x230ac>
  426664:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426668:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42666c:	add	x2, x2, #0x677
  426670:	add	x0, x0, #0x662
  426674:	mov	w1, #0x89                  	// #137
  426678:	bl	403600 <ferror@plt+0x30>
  42667c:	ldr	x22, [x0, #8]
  426680:	mov	x20, x0
  426684:	mov	x23, x1
  426688:	cbz	x22, 42671c <ferror@plt+0x2314c>
  42668c:	ldp	w0, w21, [x22]
  426690:	ubfx	x0, x0, #0, #31
  426694:	cmp	w0, w21
  426698:	b.ne	426748 <ferror@plt+0x23178>  // b.any
  42669c:	ldrsb	w0, [x22, #3]
  4266a0:	tbz	w0, #31, 42671c <ferror@plt+0x2314c>
  4266a4:	add	w2, w21, #0x1
  4266a8:	mov	w24, #0x1                   	// #1
  4266ac:	str	xzr, [x20, #8]
  4266b0:	ldr	x0, [x20, #8]
  4266b4:	cbz	x0, 42672c <ferror@plt+0x2315c>
  4266b8:	ldr	w1, [x0, #4]
  4266bc:	ldr	w0, [x0]
  4266c0:	add	w1, w2, w1
  4266c4:	and	w0, w0, #0x7fffffff
  4266c8:	bl	41e438 <ferror@plt+0x1ae68>
  4266cc:	mov	w19, w0
  4266d0:	ldr	x0, [x20, #8]
  4266d4:	ubfiz	x1, x19, #3, #32
  4266d8:	add	x1, x1, #0x8
  4266dc:	cbz	x0, 42673c <ferror@plt+0x2316c>
  4266e0:	ldr	w25, [x0, #4]
  4266e4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4266e8:	str	x0, [x20, #8]
  4266ec:	and	w2, w19, #0x7fffffff
  4266f0:	stp	w2, w25, [x0]
  4266f4:	cbz	w24, 426748 <ferror@plt+0x23178>
  4266f8:	mov	w3, w21
  4266fc:	mov	x1, #0x0                   	// #0
  426700:	add	x2, x1, #0x1
  426704:	cmp	x3, x1
  426708:	b.eq	426744 <ferror@plt+0x23174>  // b.none
  42670c:	ldr	x1, [x22, x2, lsl #3]
  426710:	str	x1, [x0, x2, lsl #3]
  426714:	mov	x1, x2
  426718:	b	426700 <ferror@plt+0x23130>
  42671c:	mov	w24, #0x0                   	// #0
  426720:	mov	w21, #0x0                   	// #0
  426724:	mov	w2, #0x1                   	// #1
  426728:	b	4266b0 <ferror@plt+0x230e0>
  42672c:	cmp	w2, #0x4
  426730:	mov	w19, #0x4                   	// #4
  426734:	csel	w19, w2, w19, cs  // cs = hs, nlast
  426738:	b	4266d0 <ferror@plt+0x23100>
  42673c:	mov	w25, #0x0                   	// #0
  426740:	b	4266e4 <ferror@plt+0x23114>
  426744:	str	w21, [x0, #4]
  426748:	ldr	x1, [x20, #8]
  42674c:	ldp	x19, x20, [sp, #16]
  426750:	ldr	w0, [x1, #4]
  426754:	ldp	x21, x22, [sp, #32]
  426758:	add	w2, w0, #0x1
  42675c:	add	x0, x1, w0, uxtw #3
  426760:	ldr	x25, [sp, #64]
  426764:	str	w2, [x1, #4]
  426768:	str	x23, [x0, #8]
  42676c:	ldp	x23, x24, [sp, #48]
  426770:	ldp	x29, x30, [sp], #80
  426774:	ret
  426778:	stp	x29, x30, [sp, #-32]!
  42677c:	mov	x29, sp
  426780:	str	x19, [sp, #16]
  426784:	mov	x19, x0
  426788:	mov	x0, x1
  42678c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426790:	add	x1, x1, #0x730
  426794:	str	x1, [x19]
  426798:	cbnz	x0, 4267b4 <ferror@plt+0x231e4>
  42679c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4267a0:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4267a4:	add	x2, x2, #0xa15
  4267a8:	add	x0, x0, #0x662
  4267ac:	mov	w1, #0x9f                  	// #159
  4267b0:	bl	403600 <ferror@plt+0x30>
  4267b4:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4267b8:	str	x0, [x19, #8]
  4267bc:	ldr	x19, [sp, #16]
  4267c0:	ldp	x29, x30, [sp], #32
  4267c4:	ret
  4267c8:	stp	x29, x30, [sp, #-80]!
  4267cc:	mov	x29, sp
  4267d0:	stp	x19, x20, [sp, #16]
  4267d4:	mov	x20, x0
  4267d8:	mov	x19, x1
  4267dc:	mov	w1, #0x7b                  	// #123
  4267e0:	mov	x0, x19
  4267e4:	add	x20, x20, #0x8
  4267e8:	stp	x21, x22, [sp, #32]
  4267ec:	adrp	x22, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4267f0:	adrp	x21, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4267f4:	add	x22, x22, #0x674
  4267f8:	add	x21, x21, #0x67e
  4267fc:	str	x23, [sp, #48]
  426800:	bl	428efc <ferror@plt+0x2592c>
  426804:	mov	x0, x20
  426808:	bl	426ce8 <ferror@plt+0x23718>
  42680c:	stp	x0, x1, [sp, #64]
  426810:	ldr	x0, [sp, #64]
  426814:	cbz	x0, 426884 <ferror@plt+0x232b4>
  426818:	mov	x0, x20
  42681c:	bl	426ce8 <ferror@plt+0x23718>
  426820:	ldr	x2, [sp, #64]
  426824:	cmp	x2, x0
  426828:	b.ne	426838 <ferror@plt+0x23268>  // b.any
  42682c:	ldr	x0, [sp, #72]
  426830:	cmp	x0, x1
  426834:	b.eq	426844 <ferror@plt+0x23274>  // b.none
  426838:	mov	x1, x22
  42683c:	mov	x0, x19
  426840:	bl	4292a8 <ferror@plt+0x25cd8>
  426844:	ldr	x0, [sp, #64]
  426848:	mov	x1, x21
  42684c:	ldp	x2, x23, [x0]
  426850:	mov	x0, x19
  426854:	bl	42a8f0 <ferror@plt+0x27320>
  426858:	ldr	x0, [x23]
  42685c:	mov	x1, x19
  426860:	ldr	x2, [x0, #24]
  426864:	mov	x0, x23
  426868:	blr	x2
  42686c:	ldr	x0, [sp, #64]
  426870:	add	x0, x0, #0x10
  426874:	str	x0, [sp, #64]
  426878:	add	x0, sp, #0x40
  42687c:	bl	426cb4 <ferror@plt+0x236e4>
  426880:	b	426810 <ferror@plt+0x23240>
  426884:	ldr	x0, [sp, #72]
  426888:	cbnz	x0, 426818 <ferror@plt+0x23248>
  42688c:	mov	x0, x19
  426890:	mov	w1, #0x7d                  	// #125
  426894:	bl	428efc <ferror@plt+0x2592c>
  426898:	ldp	x19, x20, [sp, #16]
  42689c:	ldp	x21, x22, [sp, #32]
  4268a0:	ldr	x23, [sp, #48]
  4268a4:	ldp	x29, x30, [sp], #80
  4268a8:	ret
  4268ac:	stp	x29, x30, [sp, #-48]!
  4268b0:	mov	x29, sp
  4268b4:	stp	x19, x20, [sp, #16]
  4268b8:	mov	x19, x0
  4268bc:	mov	x20, x0
  4268c0:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4268c4:	add	x0, x0, #0x6a0
  4268c8:	str	x0, [x19], #8
  4268cc:	mov	x0, x19
  4268d0:	bl	426ce8 <ferror@plt+0x23718>
  4268d4:	stp	x0, x1, [sp, #32]
  4268d8:	ldr	x0, [sp, #32]
  4268dc:	cbz	x0, 42690c <ferror@plt+0x2333c>
  4268e0:	ldr	x0, [x0]
  4268e4:	bl	4032a0 <free@plt>
  4268e8:	ldr	x0, [sp, #32]
  4268ec:	ldr	x0, [x0, #8]
  4268f0:	cbnz	x0, 42692c <ferror@plt+0x2335c>
  4268f4:	ldr	x0, [sp, #32]
  4268f8:	add	x0, x0, #0x10
  4268fc:	str	x0, [sp, #32]
  426900:	add	x0, sp, #0x20
  426904:	bl	426cb4 <ferror@plt+0x236e4>
  426908:	b	4268d8 <ferror@plt+0x23308>
  42690c:	ldr	x1, [sp, #40]
  426910:	cbnz	x1, 4268e0 <ferror@plt+0x23310>
  426914:	ldr	x1, [x19, #8]
  426918:	sub	x0, x1, #0x1
  42691c:	cmp	x1, x0
  426920:	b.ls	42693c <ferror@plt+0x2336c>  // b.plast
  426924:	sub	x0, x0, #0x1
  426928:	b	42691c <ferror@plt+0x2334c>
  42692c:	ldr	x1, [x0]
  426930:	ldr	x1, [x1, #8]
  426934:	blr	x1
  426938:	b	4268f4 <ferror@plt+0x23324>
  42693c:	ldrb	w1, [x19, #44]
  426940:	ldr	x0, [x20, #8]
  426944:	cbnz	w1, 426958 <ferror@plt+0x23388>
  426948:	bl	4032a0 <free@plt>
  42694c:	ldp	x19, x20, [sp, #16]
  426950:	ldp	x29, x30, [sp], #48
  426954:	ret
  426958:	bl	410418 <ferror@plt+0xce48>
  42695c:	b	42694c <ferror@plt+0x2337c>
  426960:	stp	x29, x30, [sp, #-32]!
  426964:	mov	x29, sp
  426968:	str	x19, [sp, #16]
  42696c:	mov	x19, x0
  426970:	bl	4268ac <ferror@plt+0x232dc>
  426974:	mov	x0, x19
  426978:	mov	x1, #0x38                  	// #56
  42697c:	ldr	x19, [sp, #16]
  426980:	ldp	x29, x30, [sp], #32
  426984:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  426988:	stp	x29, x30, [sp, #-96]!
  42698c:	mov	x29, sp
  426990:	stp	x19, x20, [sp, #16]
  426994:	stp	x21, x22, [sp, #32]
  426998:	stp	x23, x24, [sp, #48]
  42699c:	stp	x25, x26, [sp, #64]
  4269a0:	stp	x27, x28, [sp, #80]
  4269a4:	cbnz	x1, 4269c0 <ferror@plt+0x233f0>
  4269a8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4269ac:	add	x2, x2, #0x815
  4269b0:	mov	w1, #0x55                  	// #85
  4269b4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4269b8:	add	x0, x0, #0x662
  4269bc:	bl	403600 <ferror@plt+0x30>
  4269c0:	mov	x23, x2
  4269c4:	cbnz	x2, 4269d8 <ferror@plt+0x23408>
  4269c8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4269cc:	mov	w1, #0x56                  	// #86
  4269d0:	add	x2, x2, #0x815
  4269d4:	b	4269b4 <ferror@plt+0x233e4>
  4269d8:	mov	x22, x0
  4269dc:	mov	x21, x1
  4269e0:	add	x19, x22, #0x8
  4269e4:	mov	x0, x1
  4269e8:	bl	45b5a8 <ferror@plt+0x57fd8>
  4269ec:	mov	w26, w0
  4269f0:	ldr	w1, [x19, #32]
  4269f4:	ldr	w28, [x19, #40]
  4269f8:	add	w1, w1, #0x1
  4269fc:	str	w1, [x19, #32]
  426a00:	mov	w1, w28
  426a04:	bl	41e73c <ferror@plt+0x1b16c>
  426a08:	mov	w20, w0
  426a0c:	ldr	x25, [x22, #8]
  426a10:	ubfiz	x0, x20, #4, #32
  426a14:	add	x24, x25, x0
  426a18:	ldr	x0, [x25, x0]
  426a1c:	cbz	x0, 426a88 <ferror@plt+0x234b8>
  426a20:	cmp	x0, #0x1
  426a24:	b.eq	426a34 <ferror@plt+0x23464>  // b.none
  426a28:	mov	x1, x21
  426a2c:	bl	403220 <strcmp@plt>
  426a30:	cbz	w0, 426a88 <ferror@plt+0x234b8>
  426a34:	mov	w0, w26
  426a38:	mov	w1, w28
  426a3c:	bl	41e774 <ferror@plt+0x1b1a4>
  426a40:	mov	w26, w0
  426a44:	ldr	x27, [x19, #8]
  426a48:	add	w20, w20, w26
  426a4c:	ldr	w0, [x19, #36]
  426a50:	cmp	x27, w20, uxtw
  426a54:	add	w0, w0, #0x1
  426a58:	str	w0, [x19, #36]
  426a5c:	b.hi	426a64 <ferror@plt+0x23494>  // b.pmore
  426a60:	sub	w20, w20, w27
  426a64:	ubfiz	x0, x20, #4, #32
  426a68:	add	x24, x25, x0
  426a6c:	ldr	x0, [x25, x0]
  426a70:	cbz	x0, 426a88 <ferror@plt+0x234b8>
  426a74:	cmp	x0, #0x1
  426a78:	b.eq	426a48 <ferror@plt+0x23478>  // b.none
  426a7c:	mov	x1, x21
  426a80:	bl	403220 <strcmp@plt>
  426a84:	cbnz	w0, 426a48 <ferror@plt+0x23478>
  426a88:	ldr	x0, [x24]
  426a8c:	cbz	x0, 426ac4 <ferror@plt+0x234f4>
  426a90:	ldr	x0, [x24, #8]
  426a94:	cbz	x0, 426aa4 <ferror@plt+0x234d4>
  426a98:	ldr	x1, [x0]
  426a9c:	ldr	x1, [x1, #8]
  426aa0:	blr	x1
  426aa4:	str	x23, [x24, #8]
  426aa8:	ldp	x19, x20, [sp, #16]
  426aac:	ldp	x21, x22, [sp, #32]
  426ab0:	ldp	x23, x24, [sp, #48]
  426ab4:	ldp	x25, x26, [sp, #64]
  426ab8:	ldp	x27, x28, [sp, #80]
  426abc:	ldp	x29, x30, [sp], #96
  426ac0:	ret
  426ac4:	mov	x0, x21
  426ac8:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  426acc:	mov	x24, x0
  426ad0:	bl	45b5a8 <ferror@plt+0x57fd8>
  426ad4:	mov	w26, w0
  426ad8:	ldp	x0, x1, [x19, #8]
  426adc:	add	x0, x0, x0, lsl #1
  426ae0:	cmp	x0, x1, lsl #2
  426ae4:	b.hi	426af0 <ferror@plt+0x23520>  // b.pmore
  426ae8:	mov	x0, x19
  426aec:	bl	426d10 <ferror@plt+0x23740>
  426af0:	ldr	w0, [x19, #32]
  426af4:	ldr	w27, [x19, #40]
  426af8:	add	w0, w0, #0x1
  426afc:	str	w0, [x19, #32]
  426b00:	mov	w1, w27
  426b04:	mov	w0, w26
  426b08:	bl	41e73c <ferror@plt+0x1b16c>
  426b0c:	mov	w20, w0
  426b10:	ldr	x25, [x22, #8]
  426b14:	ubfiz	x0, x20, #4, #32
  426b18:	add	x21, x25, x0
  426b1c:	ldr	x0, [x25, x0]
  426b20:	cbz	x0, 426bd4 <ferror@plt+0x23604>
  426b24:	cmp	x0, #0x1
  426b28:	b.ne	426b84 <ferror@plt+0x235b4>  // b.any
  426b2c:	mov	w1, w27
  426b30:	mov	w0, w26
  426b34:	bl	41e774 <ferror@plt+0x1b1a4>
  426b38:	mov	x22, x21
  426b3c:	ldr	x27, [x19, #8]
  426b40:	mov	w26, w0
  426b44:	ldr	w0, [x19, #36]
  426b48:	add	w20, w20, w26
  426b4c:	add	w0, w0, #0x1
  426b50:	str	w0, [x19, #36]
  426b54:	cmp	x27, w20, uxtw
  426b58:	b.hi	426b60 <ferror@plt+0x23590>  // b.pmore
  426b5c:	sub	w20, w20, w27
  426b60:	ubfiz	x0, x20, #4, #32
  426b64:	add	x21, x25, x0
  426b68:	ldr	x0, [x25, x0]
  426b6c:	cbz	x0, 426bb8 <ferror@plt+0x235e8>
  426b70:	cmp	x0, #0x1
  426b74:	b.ne	426b98 <ferror@plt+0x235c8>  // b.any
  426b78:	cmp	x22, #0x0
  426b7c:	csel	x22, x22, x21, ne  // ne = any
  426b80:	b	426b44 <ferror@plt+0x23574>
  426b84:	mov	x1, x24
  426b88:	bl	403220 <strcmp@plt>
  426b8c:	cbz	w0, 426ba4 <ferror@plt+0x235d4>
  426b90:	mov	x21, #0x0                   	// #0
  426b94:	b	426b2c <ferror@plt+0x2355c>
  426b98:	mov	x1, x24
  426b9c:	bl	403220 <strcmp@plt>
  426ba0:	cbnz	w0, 426b44 <ferror@plt+0x23574>
  426ba4:	ldr	x0, [x21]
  426ba8:	cbnz	x0, 426bb0 <ferror@plt+0x235e0>
  426bac:	str	x24, [x21]
  426bb0:	str	x23, [x21, #8]
  426bb4:	b	426aa8 <ferror@plt+0x234d8>
  426bb8:	cbz	x22, 426bd4 <ferror@plt+0x23604>
  426bbc:	ldr	x0, [x19, #24]
  426bc0:	mov	x21, x22
  426bc4:	sub	x0, x0, #0x1
  426bc8:	str	x0, [x19, #24]
  426bcc:	str	xzr, [x22]
  426bd0:	b	426ba4 <ferror@plt+0x235d4>
  426bd4:	ldr	x0, [x19, #16]
  426bd8:	ubfiz	x20, x20, #4, #32
  426bdc:	add	x21, x25, x20
  426be0:	add	x0, x0, #0x1
  426be4:	str	x0, [x19, #16]
  426be8:	b	426ba4 <ferror@plt+0x235d4>
  426bec:	stp	x29, x30, [sp, #-112]!
  426bf0:	mov	x29, sp
  426bf4:	stp	x19, x20, [sp, #16]
  426bf8:	mov	x19, x0
  426bfc:	mov	x20, x1
  426c00:	add	x0, sp, #0x28
  426c04:	mov	w1, #0x0                   	// #0
  426c08:	bl	428c2c <ferror@plt+0x2565c>
  426c0c:	ldr	x0, [sp, #48]
  426c10:	add	x1, sp, #0x28
  426c14:	str	x20, [x0, #192]
  426c18:	ldr	x0, [x19]
  426c1c:	ldr	x2, [x0, #24]
  426c20:	mov	x0, x19
  426c24:	blr	x2
  426c28:	add	x0, sp, #0x28
  426c2c:	bl	428d14 <ferror@plt+0x25744>
  426c30:	add	x0, sp, #0x28
  426c34:	bl	428ae4 <ferror@plt+0x25514>
  426c38:	ldp	x19, x20, [sp, #16]
  426c3c:	ldp	x29, x30, [sp], #112
  426c40:	ret
  426c44:	mov	w0, #0x0                   	// #0
  426c48:	ret
  426c4c:	mov	w0, #0x1                   	// #1
  426c50:	ret
  426c54:	mov	w0, #0x2                   	// #2
  426c58:	ret
  426c5c:	mov	w0, #0x3                   	// #3
  426c60:	ret
  426c64:	ldr	w0, [x0, #8]
  426c68:	ret
  426c6c:	ret
  426c70:	ret
  426c74:	ldr	x0, [x0, #8]
  426c78:	b	4032a0 <free@plt>
  426c7c:	mov	x1, #0x10                  	// #16
  426c80:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  426c84:	stp	x29, x30, [sp, #-32]!
  426c88:	mov	x29, sp
  426c8c:	str	x19, [sp, #16]
  426c90:	mov	x19, x0
  426c94:	bl	426c74 <ferror@plt+0x236a4>
  426c98:	mov	x0, x19
  426c9c:	mov	x1, #0x10                  	// #16
  426ca0:	ldr	x19, [sp, #16]
  426ca4:	ldp	x29, x30, [sp], #32
  426ca8:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  426cac:	mov	x1, #0x10                  	// #16
  426cb0:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  426cb4:	ldr	x3, [x0, #8]
  426cb8:	ldr	x1, [x0]
  426cbc:	cmp	x1, x3
  426cc0:	b.cs	426ce0 <ferror@plt+0x23710>  // b.hs, b.nlast
  426cc4:	ldr	x2, [x1]
  426cc8:	cbz	x2, 426cd4 <ferror@plt+0x23704>
  426ccc:	cmp	x2, #0x1
  426cd0:	b.ne	426ce4 <ferror@plt+0x23714>  // b.any
  426cd4:	add	x1, x1, #0x10
  426cd8:	str	x1, [x0]
  426cdc:	b	426cb8 <ferror@plt+0x236e8>
  426ce0:	stp	xzr, xzr, [x0]
  426ce4:	ret
  426ce8:	stp	x29, x30, [sp, #-32]!
  426cec:	mov	x29, sp
  426cf0:	ldp	x1, x0, [x0]
  426cf4:	add	x0, x1, x0, lsl #4
  426cf8:	stp	x1, x0, [sp, #16]
  426cfc:	add	x0, sp, #0x10
  426d00:	bl	426cb4 <ferror@plt+0x236e4>
  426d04:	ldp	x0, x1, [sp, #16]
  426d08:	ldp	x29, x30, [sp], #32
  426d0c:	ret
  426d10:	stp	x29, x30, [sp, #-96]!
  426d14:	mov	x29, sp
  426d18:	stp	x19, x20, [sp, #16]
  426d1c:	mov	x19, x0
  426d20:	stp	x21, x22, [sp, #32]
  426d24:	stp	x23, x24, [sp, #48]
  426d28:	ldr	w23, [x0, #40]
  426d2c:	ldp	x21, x20, [x0]
  426d30:	stp	x25, x26, [sp, #64]
  426d34:	ldp	x1, x0, [x0, #16]
  426d38:	str	x27, [sp, #80]
  426d3c:	add	x22, x21, x20, lsl #4
  426d40:	sub	x1, x1, x0
  426d44:	lsl	x0, x1, #1
  426d48:	cmp	x20, x1, lsl #1
  426d4c:	b.cc	426d64 <ferror@plt+0x23794>  // b.lo, b.ul, b.last
  426d50:	lsl	w1, w1, #3
  426d54:	cmp	x20, x1
  426d58:	b.ls	426d7c <ferror@plt+0x237ac>  // b.plast
  426d5c:	cmp	x20, #0x20
  426d60:	b.ls	426d7c <ferror@plt+0x237ac>  // b.plast
  426d64:	bl	41fad8 <ferror@plt+0x1c508>
  426d68:	mov	w23, w0
  426d6c:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  426d70:	add	x0, x0, #0xa78
  426d74:	ubfiz	x1, x23, #4, #32
  426d78:	ldr	w20, [x0, x1]
  426d7c:	ldrb	w0, [x19, #44]
  426d80:	cbnz	w0, 426dac <ferror@plt+0x237dc>
  426d84:	mov	x0, x20
  426d88:	mov	x1, #0x10                  	// #16
  426d8c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  426d90:	mov	x1, #0x0                   	// #0
  426d94:	cmp	x20, x1
  426d98:	b.eq	426ddc <ferror@plt+0x2380c>  // b.none
  426d9c:	lsl	x2, x1, #4
  426da0:	add	x1, x1, #0x1
  426da4:	str	xzr, [x0, x2]
  426da8:	b	426d94 <ferror@plt+0x237c4>
  426dac:	lsl	x0, x20, #4
  426db0:	mov	x3, #0x0                   	// #0
  426db4:	mov	x2, #0x0                   	// #0
  426db8:	mov	x1, #0x0                   	// #0
  426dbc:	bl	4103e8 <ferror@plt+0xce18>
  426dc0:	cbnz	x0, 426d90 <ferror@plt+0x237c0>
  426dc4:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  426dc8:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  426dcc:	add	x2, x2, #0x830
  426dd0:	add	x0, x0, #0x83e
  426dd4:	mov	w1, #0x2b5                 	// #693
  426dd8:	bl	403600 <ferror@plt+0x30>
  426ddc:	stp	x0, x20, [x19]
  426de0:	ldr	x0, [x19, #16]
  426de4:	str	w23, [x19, #40]
  426de8:	ldr	x1, [x19, #24]
  426dec:	mov	x23, x21
  426df0:	str	xzr, [x19, #24]
  426df4:	sub	x0, x0, x1
  426df8:	str	x0, [x19, #16]
  426dfc:	ldr	x0, [x23]
  426e00:	cbz	x0, 426e70 <ferror@plt+0x238a0>
  426e04:	cmp	x0, #0x1
  426e08:	b.eq	426e70 <ferror@plt+0x238a0>  // b.none
  426e0c:	bl	45b5a8 <ferror@plt+0x57fd8>
  426e10:	ldr	w27, [x19, #40]
  426e14:	mov	w25, w0
  426e18:	mov	w1, w27
  426e1c:	bl	41e73c <ferror@plt+0x1b16c>
  426e20:	mov	w20, w0
  426e24:	ldr	x24, [x19]
  426e28:	ubfiz	x0, x20, #4, #32
  426e2c:	add	x2, x24, x0
  426e30:	ldr	x0, [x24, x0]
  426e34:	cbz	x0, 426e68 <ferror@plt+0x23898>
  426e38:	mov	w1, w27
  426e3c:	mov	w0, w25
  426e40:	ldr	x26, [x19, #8]
  426e44:	bl	41e774 <ferror@plt+0x1b1a4>
  426e48:	add	w20, w20, w0
  426e4c:	cmp	x26, w20, uxtw
  426e50:	b.hi	426e58 <ferror@plt+0x23888>  // b.pmore
  426e54:	sub	w20, w20, w26
  426e58:	ubfiz	x1, x20, #4, #32
  426e5c:	add	x2, x24, x1
  426e60:	ldr	x1, [x24, x1]
  426e64:	cbnz	x1, 426e48 <ferror@plt+0x23878>
  426e68:	ldp	x0, x1, [x23]
  426e6c:	stp	x0, x1, [x2]
  426e70:	add	x23, x23, #0x10
  426e74:	cmp	x22, x23
  426e78:	b.hi	426dfc <ferror@plt+0x2382c>  // b.pmore
  426e7c:	ldrb	w0, [x19, #44]
  426e80:	cbnz	w0, 426ea4 <ferror@plt+0x238d4>
  426e84:	mov	x0, x21
  426e88:	ldp	x19, x20, [sp, #16]
  426e8c:	ldp	x21, x22, [sp, #32]
  426e90:	ldp	x23, x24, [sp, #48]
  426e94:	ldp	x25, x26, [sp, #64]
  426e98:	ldr	x27, [sp, #80]
  426e9c:	ldp	x29, x30, [sp], #96
  426ea0:	b	4032a0 <free@plt>
  426ea4:	mov	x0, x21
  426ea8:	ldp	x19, x20, [sp, #16]
  426eac:	ldp	x21, x22, [sp, #32]
  426eb0:	ldp	x23, x24, [sp, #48]
  426eb4:	ldp	x25, x26, [sp, #64]
  426eb8:	ldr	x27, [sp, #80]
  426ebc:	ldp	x29, x30, [sp], #96
  426ec0:	b	410418 <ferror@plt+0xce48>
  426ec4:	sub	w0, w0, w1
  426ec8:	ret
  426ecc:	stp	x29, x30, [sp, #-48]!
  426ed0:	and	w1, w1, #0xff
  426ed4:	mov	x29, sp
  426ed8:	stp	x19, x20, [sp, #16]
  426edc:	mov	x20, #0x0                   	// #0
  426ee0:	mov	x19, x0
  426ee4:	stp	x21, x22, [sp, #32]
  426ee8:	mov	x21, x2
  426eec:	mov	w22, w3
  426ef0:	bl	428efc <ferror@plt+0x2592c>
  426ef4:	cmp	w22, w20
  426ef8:	b.le	426f10 <ferror@plt+0x23940>
  426efc:	ldrb	w1, [x21, x20]
  426f00:	mov	x0, x19
  426f04:	add	x20, x20, #0x1
  426f08:	bl	428efc <ferror@plt+0x2592c>
  426f0c:	b	426ef4 <ferror@plt+0x23924>
  426f10:	mov	x0, x19
  426f14:	mov	w1, #0xa                   	// #10
  426f18:	ldp	x19, x20, [sp, #16]
  426f1c:	ldp	x21, x22, [sp, #32]
  426f20:	ldp	x29, x30, [sp], #48
  426f24:	b	428efc <ferror@plt+0x2592c>
  426f28:	mov	x2, x0
  426f2c:	mov	x0, x1
  426f30:	cbz	x2, 426f3c <ferror@plt+0x2396c>
  426f34:	mov	x16, x2
  426f38:	br	x16
  426f3c:	ret
  426f40:	mov	x1, x0
  426f44:	mov	w2, #0x1                   	// #1
  426f48:	strb	w2, [x1], #8
  426f4c:	str	xzr, [x0, #8]
  426f50:	adrp	x0, 403000 <memset@plt>
  426f54:	add	x0, x0, #0x220
  426f58:	stp	x0, xzr, [x1, #8]
  426f5c:	adrp	x0, 427000 <ferror@plt+0x23a30>
  426f60:	add	x0, x0, #0x4d0
  426f64:	str	x0, [x1, #24]
  426f68:	ret
  426f6c:	mov	x2, x0
  426f70:	str	x1, [x2], #8
  426f74:	adrp	x1, 426000 <ferror@plt+0x22a30>
  426f78:	add	x1, x1, #0xec4
  426f7c:	str	xzr, [x0, #8]
  426f80:	stp	x1, xzr, [x2, #8]
  426f84:	adrp	x1, 427000 <ferror@plt+0x23a30>
  426f88:	add	x1, x1, #0xc4
  426f8c:	str	x1, [x2, #24]
  426f90:	mov	w1, #0xffffffff            	// #-1
  426f94:	str	w1, [x0, #40]
  426f98:	ret
  426f9c:	stp	x29, x30, [sp, #-32]!
  426fa0:	mov	x29, sp
  426fa4:	stp	x19, x20, [sp, #16]
  426fa8:	cbnz	x1, 426fc4 <ferror@plt+0x239f4>
  426fac:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426fb0:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  426fb4:	add	x2, x2, #0x780
  426fb8:	add	x0, x0, #0x78e
  426fbc:	mov	w1, #0x296                 	// #662
  426fc0:	bl	403600 <ferror@plt+0x30>
  426fc4:	mov	x19, x0
  426fc8:	ldr	w0, [x0, #40]
  426fcc:	mov	x20, x1
  426fd0:	cmn	w0, #0x1
  426fd4:	b.ne	427000 <ferror@plt+0x23a30>  // b.any
  426fd8:	str	wzr, [x19, #40]
  426fdc:	ldr	x0, [x19]
  426fe0:	ldr	w1, [x19, #40]
  426fe4:	add	w1, w1, #0x1
  426fe8:	bl	42c17c <ferror@plt+0x28bac>
  426fec:	cbz	x0, 427000 <ferror@plt+0x23a30>
  426ff0:	ldr	w0, [x19, #40]
  426ff4:	add	w0, w0, #0x1
  426ff8:	str	w0, [x19, #40]
  426ffc:	b	426fdc <ferror@plt+0x23a0c>
  427000:	ldr	x0, [x19]
  427004:	bl	42b70c <ferror@plt+0x2813c>
  427008:	strb	w0, [x20]
  42700c:	ldr	w0, [x19, #40]
  427010:	ldp	x19, x20, [sp, #16]
  427014:	ldp	x29, x30, [sp], #32
  427018:	ret
  42701c:	stp	x29, x30, [sp, #-48]!
  427020:	mov	x29, sp
  427024:	stp	x19, x20, [sp, #16]
  427028:	mov	x19, x0
  42702c:	mov	w20, #0x0                   	// #0
  427030:	ldr	x0, [x0, #8]
  427034:	str	x21, [sp, #32]
  427038:	bl	4032a0 <free@plt>
  42703c:	ldr	x0, [x19, #32]
  427040:	cbz	x0, 427070 <ferror@plt+0x23aa0>
  427044:	ldr	w1, [x0, #4]
  427048:	cmp	w20, w1
  42704c:	b.cs	427064 <ferror@plt+0x23a94>  // b.hs, b.nlast
  427050:	add	x1, x0, w20, uxtw #3
  427054:	ldr	x21, [x1, #8]
  427058:	cbnz	x21, 427094 <ferror@plt+0x23ac4>
  42705c:	add	w20, w20, #0x1
  427060:	b	42703c <ferror@plt+0x23a6c>
  427064:	ldrsb	w1, [x0, #3]
  427068:	tbz	w1, #31, 4270ac <ferror@plt+0x23adc>
  42706c:	str	wzr, [x0, #4]
  427070:	ldr	x0, [x19, #24]
  427074:	cbz	x0, 427084 <ferror@plt+0x23ab4>
  427078:	ldrsb	w1, [x0, #3]
  42707c:	tbz	w1, #31, 4270b4 <ferror@plt+0x23ae4>
  427080:	str	wzr, [x0, #4]
  427084:	ldp	x19, x20, [sp, #16]
  427088:	ldr	x21, [sp, #32]
  42708c:	ldp	x29, x30, [sp], #48
  427090:	ret
  427094:	ldr	x0, [x21]
  427098:	bl	4032a0 <free@plt>
  42709c:	mov	x0, x21
  4270a0:	mov	x1, #0x10                  	// #16
  4270a4:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  4270a8:	b	42705c <ferror@plt+0x23a8c>
  4270ac:	bl	4032a0 <free@plt>
  4270b0:	b	427070 <ferror@plt+0x23aa0>
  4270b4:	ldp	x19, x20, [sp, #16]
  4270b8:	ldr	x21, [sp, #32]
  4270bc:	ldp	x29, x30, [sp], #48
  4270c0:	b	4032a0 <free@plt>
  4270c4:	cbz	x0, 4270f0 <ferror@plt+0x23b20>
  4270c8:	stp	x29, x30, [sp, #-32]!
  4270cc:	mov	x29, sp
  4270d0:	str	x19, [sp, #16]
  4270d4:	mov	x19, x0
  4270d8:	bl	42701c <ferror@plt+0x23a4c>
  4270dc:	mov	x0, x19
  4270e0:	mov	x1, #0x28                  	// #40
  4270e4:	ldr	x19, [sp, #16]
  4270e8:	ldp	x29, x30, [sp], #32
  4270ec:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  4270f0:	ret
  4270f4:	ldr	x3, [x0, #24]
  4270f8:	mov	w0, w1
  4270fc:	mov	w1, #0x0                   	// #0
  427100:	add	x2, x3, #0xc
  427104:	cbz	x3, 427134 <ferror@plt+0x23b64>
  427108:	ldr	w4, [x3, #4]
  42710c:	cmp	w4, w1
  427110:	b.ls	427134 <ferror@plt+0x23b64>  // b.plast
  427114:	ldur	w4, [x2, #-4]
  427118:	cmp	w0, w4
  42711c:	b.lt	427128 <ferror@plt+0x23b58>  // b.tstop
  427120:	ldr	w4, [x2]
  427124:	add	w0, w0, w4
  427128:	add	w1, w1, #0x1
  42712c:	add	x2, x2, #0x8
  427130:	b	427104 <ferror@plt+0x23b34>
  427134:	ret
  427138:	ldr	x0, [x0, #32]
  42713c:	cbz	x0, 42714c <ferror@plt+0x23b7c>
  427140:	ldr	w0, [x0, #4]
  427144:	add	w0, w0, #0x1
  427148:	ret
  42714c:	mov	w0, #0x0                   	// #0
  427150:	b	427144 <ferror@plt+0x23b74>
  427154:	stp	x29, x30, [sp, #-48]!
  427158:	mov	x29, sp
  42715c:	stp	x19, x20, [sp, #16]
  427160:	mov	x20, x0
  427164:	mov	x19, x1
  427168:	str	x21, [sp, #32]
  42716c:	mov	w21, #0x0                   	// #0
  427170:	ldr	x1, [x20, #32]
  427174:	cbz	x1, 4271a8 <ferror@plt+0x23bd8>
  427178:	ldr	w0, [x1, #4]
  42717c:	cmp	w21, w0
  427180:	b.cs	4271a8 <ferror@plt+0x23bd8>  // b.hs, b.nlast
  427184:	add	x1, x1, w21, uxtw #3
  427188:	add	w21, w21, #0x1
  42718c:	ldr	x0, [x1, #8]
  427190:	ldr	x1, [x0]
  427194:	mov	x0, x19
  427198:	bl	4292a8 <ferror@plt+0x25cd8>
  42719c:	mov	x0, x19
  4271a0:	bl	428ea0 <ferror@plt+0x258d0>
  4271a4:	b	427170 <ferror@plt+0x23ba0>
  4271a8:	mov	x0, x19
  4271ac:	ldr	x1, [x20, #8]
  4271b0:	ldp	x19, x20, [sp, #16]
  4271b4:	ldr	x21, [sp, #32]
  4271b8:	ldp	x29, x30, [sp], #48
  4271bc:	b	4292a8 <ferror@plt+0x25cd8>
  4271c0:	stp	x29, x30, [sp, #-48]!
  4271c4:	mov	x29, sp
  4271c8:	stp	x19, x20, [sp, #16]
  4271cc:	mov	x19, x0
  4271d0:	mov	x20, x1
  4271d4:	str	x21, [sp, #32]
  4271d8:	mov	w21, #0x0                   	// #0
  4271dc:	ldr	x0, [x19, #32]
  4271e0:	cbz	x0, 427214 <ferror@plt+0x23c44>
  4271e4:	ldr	w1, [x0, #4]
  4271e8:	cmp	w21, w1
  4271ec:	b.cs	427214 <ferror@plt+0x23c44>  // b.hs, b.nlast
  4271f0:	add	x0, x0, w21, uxtw #3
  4271f4:	mov	w1, #0x2b                  	// #43
  4271f8:	add	w21, w21, #0x1
  4271fc:	ldr	x0, [x0, #8]
  427200:	ldr	w3, [x0, #8]
  427204:	ldr	x2, [x0]
  427208:	mov	x0, x20
  42720c:	bl	426ecc <ferror@plt+0x238fc>
  427210:	b	4271dc <ferror@plt+0x23c0c>
  427214:	mov	x0, x19
  427218:	bl	4280c0 <ferror@plt+0x24af0>
  42721c:	ldr	w3, [x19, #16]
  427220:	tst	w0, #0xff
  427224:	ldr	x2, [x19, #8]
  427228:	b.eq	427244 <ferror@plt+0x23c74>  // b.none
  42722c:	mov	w1, #0x2b                  	// #43
  427230:	mov	x0, x20
  427234:	ldp	x19, x20, [sp, #16]
  427238:	ldr	x21, [sp, #32]
  42723c:	ldp	x29, x30, [sp], #48
  427240:	b	426ecc <ferror@plt+0x238fc>
  427244:	mov	w1, #0x20                  	// #32
  427248:	b	427230 <ferror@plt+0x23c60>
  42724c:	stp	x29, x30, [sp, #-32]!
  427250:	mov	x29, sp
  427254:	stp	x19, x20, [sp, #16]
  427258:	mov	x20, x0
  42725c:	ldr	w0, [x0, #20]
  427260:	cmp	w0, w1
  427264:	b.gt	427284 <ferror@plt+0x23cb4>
  427268:	add	w1, w1, #0x1
  42726c:	ldr	x0, [x20, #8]
  427270:	lsl	w19, w1, #1
  427274:	sxtw	x1, w19
  427278:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42727c:	str	x0, [x20, #8]
  427280:	str	w19, [x20, #20]
  427284:	ldp	x19, x20, [sp, #16]
  427288:	ldp	x29, x30, [sp], #32
  42728c:	ret
  427290:	ldp	w1, w2, [x0, #16]
  427294:	cmp	w1, w2
  427298:	b.lt	4272bc <ferror@plt+0x23cec>  // b.tstop
  42729c:	stp	x29, x30, [sp, #-16]!
  4272a0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4272a4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4272a8:	mov	x29, sp
  4272ac:	add	x2, x2, #0x537
  4272b0:	add	x0, x0, #0x78e
  4272b4:	mov	w1, #0x36b                 	// #875
  4272b8:	bl	403600 <ferror@plt+0x30>
  4272bc:	ldr	x0, [x0, #8]
  4272c0:	strb	wzr, [x0, w1, sxtw]
  4272c4:	ret
  4272c8:	stp	x29, x30, [sp, #-32]!
  4272cc:	mov	x29, sp
  4272d0:	stp	x19, x20, [sp, #16]
  4272d4:	mov	x19, x0
  4272d8:	mov	x0, x1
  4272dc:	mov	w1, w2
  4272e0:	str	w2, [x19]
  4272e4:	stp	xzr, xzr, [x19, #8]
  4272e8:	stp	xzr, xzr, [x19, #24]
  4272ec:	bl	42c17c <ferror@plt+0x28bac>
  4272f0:	cbz	x0, 427324 <ferror@plt+0x23d54>
  4272f4:	str	w1, [x19, #16]
  4272f8:	mov	x20, x0
  4272fc:	mov	x0, x19
  427300:	bl	42724c <ferror@plt+0x23c7c>
  427304:	ldrsw	x2, [x19, #16]
  427308:	mov	x1, x20
  42730c:	ldr	x0, [x19, #8]
  427310:	bl	402cd0 <memcpy@plt>
  427314:	mov	x0, x19
  427318:	ldp	x19, x20, [sp, #16]
  42731c:	ldp	x29, x30, [sp], #32
  427320:	b	427290 <ferror@plt+0x23cc0>
  427324:	ldp	x19, x20, [sp, #16]
  427328:	ldp	x29, x30, [sp], #32
  42732c:	ret
  427330:	stp	x29, x30, [sp, #-112]!
  427334:	mov	w5, w2
  427338:	cmp	w4, #0x1
  42733c:	mov	x29, sp
  427340:	stp	x19, x20, [sp, #16]
  427344:	mov	x19, x0
  427348:	mov	w20, w4
  42734c:	stp	x21, x22, [sp, #32]
  427350:	stp	x23, x24, [sp, #48]
  427354:	stp	x25, x26, [sp, #64]
  427358:	mov	x25, x3
  42735c:	str	x27, [sp, #80]
  427360:	b.le	4273c8 <ferror@plt+0x23df8>
  427364:	add	x0, x3, w4, sxtw
  427368:	ldurb	w0, [x0, #-1]
  42736c:	cmp	w0, #0xa
  427370:	b.ne	4273c8 <ferror@plt+0x23df8>  // b.any
  427374:	mov	x0, #0x10                  	// #16
  427378:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  42737c:	mov	x21, x0
  427380:	sub	w20, w20, #0x1
  427384:	mov	x0, x25
  427388:	sxtw	x1, w20
  42738c:	bl	45d858 <_obstack_memory_used@@Base+0x1468>
  427390:	str	x0, [x21]
  427394:	add	x1, sp, #0x68
  427398:	str	w20, [x21, #8]
  42739c:	add	x0, x19, #0x20
  4273a0:	str	x21, [sp, #104]
  4273a4:	bl	4280e0 <ferror@plt+0x24b10>
  4273a8:	mov	w0, #0x1                   	// #1
  4273ac:	ldp	x19, x20, [sp, #16]
  4273b0:	ldp	x21, x22, [sp, #32]
  4273b4:	ldp	x23, x24, [sp, #48]
  4273b8:	ldp	x25, x26, [sp, #64]
  4273bc:	ldr	x27, [sp, #80]
  4273c0:	ldp	x29, x30, [sp], #112
  4273c4:	ret
  4273c8:	mov	x0, x19
  4273cc:	bl	4270f4 <ferror@plt+0x23b24>
  4273d0:	mov	w24, w0
  4273d4:	mov	w1, w5
  4273d8:	mov	x0, x19
  4273dc:	bl	4270f4 <ferror@plt+0x23b24>
  4273e0:	subs	w23, w24, #0x1
  4273e4:	sub	w22, w0, #0x1
  4273e8:	b.pl	427404 <ferror@plt+0x23e34>  // b.nfrst
  4273ec:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4273f0:	add	x2, x2, #0x7a7
  4273f4:	mov	w1, #0x2fa                 	// #762
  4273f8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4273fc:	add	x0, x0, #0x78e
  427400:	bl	403600 <ferror@plt+0x30>
  427404:	tbz	w22, #31, 427418 <ferror@plt+0x23e48>
  427408:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42740c:	mov	w1, #0x2fb                 	// #763
  427410:	add	x2, x2, #0x7a7
  427414:	b	4273f8 <ferror@plt+0x23e28>
  427418:	cmp	w24, w0
  42741c:	b.gt	4274c8 <ferror@plt+0x23ef8>
  427420:	ldr	w1, [x19, #16]
  427424:	cmp	w1, w23
  427428:	b.lt	4274c8 <ferror@plt+0x23ef8>  // b.tstop
  42742c:	cmp	w1, w22
  427430:	b.lt	4274c8 <ferror@plt+0x23ef8>  // b.tstop
  427434:	sub	w21, w0, w24
  427438:	add	w1, w1, w20
  42743c:	sub	w26, w1, w21
  427440:	mov	x0, x19
  427444:	mov	w1, w26
  427448:	bl	42724c <ferror@plt+0x23c7c>
  42744c:	ldr	x0, [x19, #8]
  427450:	sxtw	x3, w22
  427454:	ldrsw	x2, [x19, #16]
  427458:	add	x1, x0, w22, sxtw
  42745c:	add	x4, x0, x2
  427460:	cmp	x1, x4
  427464:	b.ls	427478 <ferror@plt+0x23ea8>  // b.plast
  427468:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42746c:	mov	w1, #0x30b                 	// #779
  427470:	add	x2, x2, #0x7a7
  427474:	b	4273f8 <ferror@plt+0x23e28>
  427478:	sxtw	x22, w20
  42747c:	sxtw	x27, w23
  427480:	add	x23, x22, w23, sxtw
  427484:	sub	x2, x2, x3
  427488:	add	x0, x0, x23
  42748c:	bl	402ce0 <memmove@plt>
  427490:	ldr	x0, [x19, #8]
  427494:	mov	x1, x25
  427498:	mov	x2, x22
  42749c:	sub	w20, w20, w21
  4274a0:	add	x0, x0, x27
  4274a4:	bl	402cd0 <memcpy@plt>
  4274a8:	str	w26, [x19, #16]
  4274ac:	mov	x0, x19
  4274b0:	bl	427290 <ferror@plt+0x23cc0>
  4274b4:	stp	w24, w20, [sp, #104]
  4274b8:	add	x1, sp, #0x68
  4274bc:	add	x0, x19, #0x18
  4274c0:	bl	428204 <ferror@plt+0x24c34>
  4274c4:	b	4273a8 <ferror@plt+0x23dd8>
  4274c8:	mov	w0, #0x0                   	// #0
  4274cc:	b	4273ac <ferror@plt+0x23ddc>
  4274d0:	cbz	x0, 427504 <ferror@plt+0x23f34>
  4274d4:	stp	x29, x30, [sp, #-32]!
  4274d8:	mov	x29, sp
  4274dc:	str	x19, [sp, #16]
  4274e0:	mov	x19, x0
  4274e4:	add	x0, x0, #0x8
  4274e8:	ldr	x1, [x19, #8]
  4274ec:	bl	428324 <ferror@plt+0x24d54>
  4274f0:	mov	x0, x19
  4274f4:	mov	x1, #0x30                  	// #48
  4274f8:	ldr	x19, [sp, #16]
  4274fc:	ldp	x29, x30, [sp], #32
  427500:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  427504:	ret
  427508:	stp	x29, x30, [sp, #-48]!
  42750c:	mov	x29, sp
  427510:	stp	x19, x20, [sp, #16]
  427514:	str	x21, [sp, #32]
  427518:	cbnz	x1, 427534 <ferror@plt+0x23f64>
  42751c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427520:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427524:	add	x2, x2, #0x7b3
  427528:	add	x0, x0, #0x78e
  42752c:	mov	w1, #0x140                 	// #320
  427530:	bl	403600 <ferror@plt+0x30>
  427534:	mov	x19, x0
  427538:	add	x21, x0, #0x8
  42753c:	mov	x20, x1
  427540:	mov	x0, x21
  427544:	bl	428404 <ferror@plt+0x24e34>
  427548:	ldr	x2, [x19, #8]
  42754c:	cbnz	x2, 427564 <ferror@plt+0x23f94>
  427550:	mov	x0, #0x0                   	// #0
  427554:	ldp	x19, x20, [sp, #16]
  427558:	ldr	x21, [sp, #32]
  42755c:	ldp	x29, x30, [sp], #48
  427560:	ret
  427564:	ldr	x0, [x2]
  427568:	mov	x1, x20
  42756c:	ldr	x3, [x21, #8]
  427570:	blr	x3
  427574:	cbnz	w0, 427550 <ferror@plt+0x23f80>
  427578:	ldr	x0, [x19, #8]
  42757c:	cbz	x0, 427550 <ferror@plt+0x23f80>
  427580:	ldr	x0, [x0, #8]
  427584:	b	427554 <ferror@plt+0x23f84>
  427588:	stp	x29, x30, [sp, #-48]!
  42758c:	mov	x29, sp
  427590:	stp	x19, x20, [sp, #16]
  427594:	stp	x21, x22, [sp, #32]
  427598:	cbnz	x1, 4275b4 <ferror@plt+0x23fe4>
  42759c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4275a0:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4275a4:	add	x2, x2, #0x7bc
  4275a8:	add	x0, x0, #0x78e
  4275ac:	mov	w1, #0x149                 	// #329
  4275b0:	bl	403600 <ferror@plt+0x30>
  4275b4:	mov	x20, x0
  4275b8:	mov	x21, x1
  4275bc:	bl	427508 <ferror@plt+0x23f38>
  4275c0:	mov	x19, x0
  4275c4:	cbnz	x0, 42764c <ferror@plt+0x2407c>
  4275c8:	mov	x0, #0x30                  	// #48
  4275cc:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  4275d0:	mov	x19, x0
  4275d4:	str	x21, [x0], #8
  4275d8:	adrp	x1, 426000 <ferror@plt+0x22a30>
  4275dc:	add	x1, x1, #0xec4
  4275e0:	add	x22, x20, #0x8
  4275e4:	str	xzr, [x19, #8]
  4275e8:	stp	x1, xzr, [x0, #8]
  4275ec:	adrp	x1, 427000 <ferror@plt+0x23a30>
  4275f0:	add	x1, x1, #0xc4
  4275f4:	str	x1, [x0, #24]
  4275f8:	mov	w0, #0xffffffff            	// #-1
  4275fc:	str	w0, [x19, #40]
  427600:	mov	x1, x21
  427604:	mov	x0, x22
  427608:	bl	428404 <ferror@plt+0x24e34>
  42760c:	ldr	x2, [x20, #8]
  427610:	cbz	x2, 427660 <ferror@plt+0x24090>
  427614:	ldr	x0, [x2]
  427618:	mov	x1, x21
  42761c:	ldr	x3, [x20, #16]
  427620:	blr	x3
  427624:	mov	w22, w0
  427628:	ldr	x0, [x20, #8]
  42762c:	cbz	x0, 427668 <ferror@plt+0x24098>
  427630:	cbnz	w22, 427668 <ferror@plt+0x24098>
  427634:	ldr	x1, [x20, #32]
  427638:	cbz	x1, 427644 <ferror@plt+0x24074>
  42763c:	ldr	x0, [x0, #8]
  427640:	blr	x1
  427644:	ldr	x0, [x20, #8]
  427648:	str	x19, [x0, #8]
  42764c:	mov	x0, x19
  427650:	ldp	x19, x20, [sp, #16]
  427654:	ldp	x21, x22, [sp, #32]
  427658:	ldp	x29, x30, [sp], #48
  42765c:	ret
  427660:	mov	w22, #0x0                   	// #0
  427664:	b	427628 <ferror@plt+0x24058>
  427668:	mov	x0, #0x28                  	// #40
  42766c:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  427670:	ldr	x1, [x20, #8]
  427674:	stp	x21, x19, [x0]
  427678:	cbnz	x1, 427688 <ferror@plt+0x240b8>
  42767c:	stp	xzr, xzr, [x0, #16]
  427680:	str	x0, [x20, #8]
  427684:	b	42764c <ferror@plt+0x2407c>
  427688:	tbz	w22, #31, 42769c <ferror@plt+0x240cc>
  42768c:	ldr	x2, [x1, #24]
  427690:	stp	x1, x2, [x0, #16]
  427694:	str	xzr, [x1, #24]
  427698:	b	427680 <ferror@plt+0x240b0>
  42769c:	ldr	x2, [x1, #16]
  4276a0:	stp	x2, x1, [x0, #16]
  4276a4:	str	xzr, [x1, #16]
  4276a8:	b	427680 <ferror@plt+0x240b0>
  4276ac:	add	x0, x0, #0x8
  4276b0:	b	428748 <ferror@plt+0x25178>
  4276b4:	stp	x29, x30, [sp, #-32]!
  4276b8:	add	x0, x0, #0x8
  4276bc:	mov	x29, sp
  4276c0:	str	x19, [sp, #16]
  4276c4:	mov	w19, w2
  4276c8:	bl	428748 <ferror@plt+0x25178>
  4276cc:	cbz	x0, 4276e0 <ferror@plt+0x24110>
  4276d0:	mov	w1, w19
  4276d4:	ldr	x19, [sp, #16]
  4276d8:	ldp	x29, x30, [sp], #32
  4276dc:	b	4270f4 <ferror@plt+0x23b24>
  4276e0:	mov	w0, w19
  4276e4:	ldr	x19, [sp, #16]
  4276e8:	ldp	x29, x30, [sp], #32
  4276ec:	ret
  4276f0:	stp	x29, x30, [sp, #-32]!
  4276f4:	mov	x29, sp
  4276f8:	stp	x19, x20, [sp, #16]
  4276fc:	mov	w20, w2
  427700:	mov	w19, w3
  427704:	bl	427508 <ferror@plt+0x23f38>
  427708:	cbz	x0, 427720 <ferror@plt+0x24150>
  42770c:	mov	w2, w19
  427710:	mov	w1, w20
  427714:	ldp	x19, x20, [sp, #16]
  427718:	ldp	x29, x30, [sp], #32
  42771c:	b	4276b4 <ferror@plt+0x240e4>
  427720:	mov	w0, w19
  427724:	ldp	x19, x20, [sp, #16]
  427728:	ldp	x29, x30, [sp], #32
  42772c:	ret
  427730:	stp	x29, x30, [sp, #-112]!
  427734:	mov	x29, sp
  427738:	stp	x19, x20, [sp, #16]
  42773c:	mov	x19, x1
  427740:	add	x1, sp, #0x6f
  427744:	stp	x21, x22, [sp, #32]
  427748:	mov	w20, #0x1                   	// #1
  42774c:	stp	x23, x24, [sp, #48]
  427750:	mov	x23, x0
  427754:	stp	x25, x26, [sp, #64]
  427758:	add	x26, x0, #0x8
  42775c:	str	x27, [sp, #80]
  427760:	bl	426f9c <ferror@plt+0x239cc>
  427764:	mov	w22, w0
  427768:	mov	x27, #0x80000000            	// #2147483648
  42776c:	cmp	w20, w22
  427770:	b.gt	42783c <ferror@plt+0x2426c>
  427774:	mov	w1, w20
  427778:	mov	x0, x26
  42777c:	bl	428748 <ferror@plt+0x25178>
  427780:	cbz	x0, 4277a8 <ferror@plt+0x241d8>
  427784:	mov	x1, x19
  427788:	bl	427154 <ferror@plt+0x23b84>
  42778c:	cmp	w20, w22
  427790:	b.ge	4277a0 <ferror@plt+0x241d0>  // b.tcont
  427794:	mov	x0, x19
  427798:	mov	w1, #0xa                   	// #10
  42779c:	bl	428efc <ferror@plt+0x2592c>
  4277a0:	add	w20, w20, #0x1
  4277a4:	b	42776c <ferror@plt+0x2419c>
  4277a8:	ldr	x0, [x23]
  4277ac:	mov	w1, w20
  4277b0:	bl	42c17c <ferror@plt+0x28bac>
  4277b4:	mov	x24, x0
  4277b8:	mov	x25, x1
  4277bc:	cbnz	x0, 4277e0 <ferror@plt+0x24210>
  4277c0:	mov	w0, #0x0                   	// #0
  4277c4:	ldp	x19, x20, [sp, #16]
  4277c8:	ldp	x21, x22, [sp, #32]
  4277cc:	ldp	x23, x24, [sp, #48]
  4277d0:	ldp	x25, x26, [sp, #64]
  4277d4:	ldr	x27, [sp, #80]
  4277d8:	ldp	x29, x30, [sp], #112
  4277dc:	ret
  4277e0:	mov	x21, #0x0                   	// #0
  4277e4:	cmp	x21, x25
  4277e8:	b.cs	42778c <ferror@plt+0x241bc>  // b.hs, b.nlast
  4277ec:	cmp	x21, x27
  4277f0:	b.ne	42780c <ferror@plt+0x2423c>  // b.any
  4277f4:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4277f8:	add	x2, x2, #0x7cf
  4277fc:	mov	w1, #0x3d                  	// #61
  427800:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427804:	add	x0, x0, #0x525
  427808:	bl	403600 <ferror@plt+0x30>
  42780c:	sxtw	x0, w21
  427810:	cmp	x25, w21, sxtw
  427814:	b.hi	427828 <ferror@plt+0x24258>  // b.pmore
  427818:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42781c:	mov	w1, #0x3e                  	// #62
  427820:	add	x2, x2, #0x7cf
  427824:	b	427800 <ferror@plt+0x24230>
  427828:	ldrb	w1, [x24, x0]
  42782c:	add	x21, x21, #0x1
  427830:	mov	x0, x19
  427834:	bl	428efc <ferror@plt+0x2592c>
  427838:	b	4277e4 <ferror@plt+0x24214>
  42783c:	ldrb	w0, [sp, #111]
  427840:	cbnz	w0, 4277c4 <ferror@plt+0x241f4>
  427844:	mov	x0, x19
  427848:	mov	w1, #0xa                   	// #10
  42784c:	bl	428efc <ferror@plt+0x2592c>
  427850:	mov	w0, #0x1                   	// #1
  427854:	b	4277c4 <ferror@plt+0x241f4>
  427858:	stp	x29, x30, [sp, #-64]!
  42785c:	mov	x29, sp
  427860:	stp	x19, x20, [sp, #16]
  427864:	mov	x19, x1
  427868:	mov	w20, w2
  42786c:	stp	x21, x22, [sp, #32]
  427870:	mov	x21, x0
  427874:	ldrb	w0, [x19, #67]
  427878:	mov	w22, w20
  42787c:	stp	x23, x24, [sp, #48]
  427880:	add	x24, x21, #0x8
  427884:	mov	w23, w3
  427888:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42788c:	add	x1, x1, #0x3b8
  427890:	bl	423228 <ferror@plt+0x1fc58>
  427894:	mov	x1, x0
  427898:	mov	x0, x19
  42789c:	bl	4292a8 <ferror@plt+0x25cd8>
  4278a0:	cmp	w22, w23
  4278a4:	b.gt	427904 <ferror@plt+0x24334>
  4278a8:	mov	w1, w22
  4278ac:	mov	x0, x24
  4278b0:	bl	428748 <ferror@plt+0x25178>
  4278b4:	cbnz	x0, 4278d0 <ferror@plt+0x24300>
  4278b8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4278bc:	add	x2, x2, #0x7da
  4278c0:	mov	w1, #0x239                 	// #569
  4278c4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4278c8:	add	x0, x0, #0x78e
  4278cc:	bl	403600 <ferror@plt+0x30>
  4278d0:	bl	4280c0 <ferror@plt+0x24af0>
  4278d4:	tst	w0, #0xff
  4278d8:	b.eq	4278fc <ferror@plt+0x2432c>  // b.none
  4278dc:	ldr	x0, [x21]
  4278e0:	mov	w1, w22
  4278e4:	bl	42c17c <ferror@plt+0x28bac>
  4278e8:	mov	w3, w1
  4278ec:	mov	x2, x0
  4278f0:	mov	w1, #0x2d                  	// #45
  4278f4:	mov	x0, x19
  4278f8:	bl	426ecc <ferror@plt+0x238fc>
  4278fc:	add	w22, w22, #0x1
  427900:	b	4278a0 <ferror@plt+0x242d0>
  427904:	ldrb	w0, [x19, #67]
  427908:	add	x21, x21, #0x8
  42790c:	bl	423544 <ferror@plt+0x1ff74>
  427910:	mov	x1, x0
  427914:	mov	x0, x19
  427918:	bl	4292a8 <ferror@plt+0x25cd8>
  42791c:	ldrb	w0, [x19, #67]
  427920:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427924:	add	x1, x1, #0x3c4
  427928:	bl	423228 <ferror@plt+0x1fc58>
  42792c:	mov	x1, x0
  427930:	mov	x0, x19
  427934:	bl	4292a8 <ferror@plt+0x25cd8>
  427938:	cmp	w20, w23
  42793c:	b.gt	427970 <ferror@plt+0x243a0>
  427940:	mov	w1, w20
  427944:	mov	x0, x21
  427948:	bl	428748 <ferror@plt+0x25178>
  42794c:	cbnz	x0, 427960 <ferror@plt+0x24390>
  427950:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427954:	mov	w1, #0x24b                 	// #587
  427958:	add	x2, x2, #0x7da
  42795c:	b	4278c4 <ferror@plt+0x242f4>
  427960:	mov	x1, x19
  427964:	add	w20, w20, #0x1
  427968:	bl	4271c0 <ferror@plt+0x23bf0>
  42796c:	b	427938 <ferror@plt+0x24368>
  427970:	ldrb	w0, [x19, #67]
  427974:	bl	423544 <ferror@plt+0x1ff74>
  427978:	mov	x1, x0
  42797c:	mov	x0, x19
  427980:	ldp	x19, x20, [sp, #16]
  427984:	ldp	x21, x22, [sp, #32]
  427988:	ldp	x23, x24, [sp, #48]
  42798c:	ldp	x29, x30, [sp], #64
  427990:	b	4292a8 <ferror@plt+0x25cd8>
  427994:	stp	x29, x30, [sp, #-48]!
  427998:	mov	x29, sp
  42799c:	stp	x19, x20, [sp, #16]
  4279a0:	mov	w19, w1
  4279a4:	mov	w20, #0x0                   	// #0
  4279a8:	stp	x21, x22, [sp, #32]
  4279ac:	mov	w21, w2
  4279b0:	add	x22, x0, #0x8
  4279b4:	cmp	w19, w21
  4279b8:	b.gt	4279e4 <ferror@plt+0x24414>
  4279bc:	mov	w1, w19
  4279c0:	mov	x0, x22
  4279c4:	bl	428748 <ferror@plt+0x25178>
  4279c8:	cbz	x0, 4279dc <ferror@plt+0x2440c>
  4279cc:	bl	427138 <ferror@plt+0x23b68>
  4279d0:	add	w20, w20, w0
  4279d4:	add	w19, w19, #0x1
  4279d8:	b	4279b4 <ferror@plt+0x243e4>
  4279dc:	add	w20, w20, #0x1
  4279e0:	b	4279d4 <ferror@plt+0x24404>
  4279e4:	mov	w0, w20
  4279e8:	ldp	x19, x20, [sp, #16]
  4279ec:	ldp	x21, x22, [sp, #32]
  4279f0:	ldp	x29, x30, [sp], #48
  4279f4:	ret
  4279f8:	stp	x29, x30, [sp, #-80]!
  4279fc:	mov	x29, sp
  427a00:	stp	x19, x20, [sp, #16]
  427a04:	mov	x20, x1
  427a08:	mov	w19, w2
  427a0c:	mov	w1, w19
  427a10:	stp	x21, x22, [sp, #32]
  427a14:	mov	w21, w4
  427a18:	mov	x22, x0
  427a1c:	stp	x23, x24, [sp, #48]
  427a20:	sub	w24, w3, w2
  427a24:	mov	w23, w3
  427a28:	mov	w2, w3
  427a2c:	stp	x25, x26, [sp, #64]
  427a30:	bl	427994 <ferror@plt+0x243c4>
  427a34:	mov	w25, w0
  427a38:	ldrb	w0, [x20, #67]
  427a3c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427a40:	add	x1, x1, #0x3a5
  427a44:	add	w24, w24, #0x1
  427a48:	add	x26, x22, #0x8
  427a4c:	bl	423228 <ferror@plt+0x1fc58>
  427a50:	mov	x1, x0
  427a54:	mov	x0, x20
  427a58:	bl	4292a8 <ferror@plt+0x25cd8>
  427a5c:	mov	w5, w25
  427a60:	mov	w4, w21
  427a64:	mov	w3, w24
  427a68:	mov	w2, w19
  427a6c:	mov	x0, x20
  427a70:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427a74:	add	x1, x1, #0x7f5
  427a78:	bl	42a8f0 <ferror@plt+0x27320>
  427a7c:	ldrb	w0, [x20, #67]
  427a80:	bl	423544 <ferror@plt+0x1ff74>
  427a84:	mov	x1, x0
  427a88:	mov	x0, x20
  427a8c:	bl	4292a8 <ferror@plt+0x25cd8>
  427a90:	cmp	w19, w23
  427a94:	b.gt	427b08 <ferror@plt+0x24538>
  427a98:	mov	w1, w19
  427a9c:	mov	x0, x26
  427aa0:	bl	428748 <ferror@plt+0x25178>
  427aa4:	cbz	x0, 427ae0 <ferror@plt+0x24510>
  427aa8:	mov	w21, w19
  427aac:	mov	w1, w21
  427ab0:	mov	x0, x26
  427ab4:	bl	428748 <ferror@plt+0x25178>
  427ab8:	cbz	x0, 427ac4 <ferror@plt+0x244f4>
  427abc:	add	w21, w21, #0x1
  427ac0:	b	427aac <ferror@plt+0x244dc>
  427ac4:	sub	w3, w21, #0x1
  427ac8:	mov	w2, w19
  427acc:	mov	x1, x20
  427ad0:	mov	x0, x22
  427ad4:	bl	427858 <ferror@plt+0x24288>
  427ad8:	mov	w19, w21
  427adc:	b	427a90 <ferror@plt+0x244c0>
  427ae0:	ldr	x0, [x22]
  427ae4:	mov	w1, w19
  427ae8:	add	w21, w19, #0x1
  427aec:	bl	42c17c <ferror@plt+0x28bac>
  427af0:	mov	w3, w1
  427af4:	mov	x2, x0
  427af8:	mov	w1, #0x20                  	// #32
  427afc:	mov	x0, x20
  427b00:	bl	426ecc <ferror@plt+0x238fc>
  427b04:	b	427ad8 <ferror@plt+0x24508>
  427b08:	sub	w0, w25, w24
  427b0c:	ldp	x19, x20, [sp, #16]
  427b10:	ldp	x21, x22, [sp, #32]
  427b14:	ldp	x23, x24, [sp, #48]
  427b18:	ldp	x25, x26, [sp, #64]
  427b1c:	ldp	x29, x30, [sp], #80
  427b20:	ret
  427b24:	stp	x29, x30, [sp, #-112]!
  427b28:	tst	w2, #0xff
  427b2c:	mov	x29, sp
  427b30:	stp	x19, x20, [sp, #16]
  427b34:	mov	x20, x1
  427b38:	stp	x21, x22, [sp, #32]
  427b3c:	mov	x21, x0
  427b40:	stp	x23, x24, [sp, #48]
  427b44:	stp	x25, x26, [sp, #64]
  427b48:	stp	x27, x28, [sp, #80]
  427b4c:	b.eq	427ba8 <ferror@plt+0x245d8>  // b.none
  427b50:	ldrb	w0, [x20, #67]
  427b54:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427b58:	add	x1, x1, #0x397
  427b5c:	bl	423228 <ferror@plt+0x1fc58>
  427b60:	mov	x1, x0
  427b64:	mov	x0, x20
  427b68:	bl	4292a8 <ferror@plt+0x25cd8>
  427b6c:	ldr	x2, [x21]
  427b70:	mov	x0, x20
  427b74:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427b78:	add	x1, x1, #0x80a
  427b7c:	bl	42a8f0 <ferror@plt+0x27320>
  427b80:	ldr	x2, [x21]
  427b84:	mov	x0, x20
  427b88:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  427b8c:	add	x1, x1, #0x812
  427b90:	bl	42a8f0 <ferror@plt+0x27320>
  427b94:	ldrb	w0, [x20, #67]
  427b98:	bl	423544 <ferror@plt+0x1ff74>
  427b9c:	mov	x1, x0
  427ba0:	mov	x0, x20
  427ba4:	bl	4292a8 <ferror@plt+0x25cd8>
  427ba8:	ldr	x19, [x21, #8]
  427bac:	add	x26, x21, #0x8
  427bb0:	cbz	x19, 427bc4 <ferror@plt+0x245f4>
  427bb4:	mov	x0, x19
  427bb8:	ldr	x19, [x19, #16]
  427bbc:	cbnz	x19, 427bb4 <ferror@plt+0x245e4>
  427bc0:	ldr	x19, [x0, #8]
  427bc4:	add	x1, sp, #0x6f
  427bc8:	mov	x0, x21
  427bcc:	bl	426f9c <ferror@plt+0x239cc>
  427bd0:	mov	w24, w0
  427bd4:	mov	w25, #0x0                   	// #0
  427bd8:	mov	w27, #0x1                   	// #1
  427bdc:	cbz	x19, 427c88 <ferror@plt+0x246b8>
  427be0:	ldr	w22, [x19]
  427be4:	sub	w22, w22, #0x3
  427be8:	cmp	w22, #0x0
  427bec:	csel	w22, w22, w27, gt
  427bf0:	ldr	w1, [x19]
  427bf4:	mov	x0, x26
  427bf8:	bl	4286dc <ferror@plt+0x2510c>
  427bfc:	ldr	w23, [x19]
  427c00:	cbz	x0, 427c34 <ferror@plt+0x24664>
  427c04:	ldr	x28, [x0, #8]
  427c08:	mov	x0, x19
  427c0c:	bl	4280c0 <ferror@plt+0x24af0>
  427c10:	and	w0, w0, #0xff
  427c14:	cbz	x28, 427c34 <ferror@plt+0x24664>
  427c18:	cmp	w0, #0x0
  427c1c:	ldr	w1, [x28]
  427c20:	cinc	w0, w23, ne  // ne = any
  427c24:	add	w0, w0, #0x2
  427c28:	sub	w1, w1, #0x3
  427c2c:	cmp	w1, w0
  427c30:	b.le	427c80 <ferror@plt+0x246b0>
  427c34:	mov	x0, x19
  427c38:	bl	4280c0 <ferror@plt+0x24af0>
  427c3c:	tst	w0, #0xff
  427c40:	add	w4, w25, w22
  427c44:	cinc	w3, w23, ne  // ne = any
  427c48:	mov	x1, x20
  427c4c:	add	w3, w3, #0x2
  427c50:	mov	w2, w22
  427c54:	cmp	w3, w24
  427c58:	mov	x0, x21
  427c5c:	csel	w3, w3, w24, le
  427c60:	bl	4279f8 <ferror@plt+0x24428>
  427c64:	add	w25, w25, w0
  427c68:	ldr	w1, [x19]
  427c6c:	mov	x0, x26
  427c70:	bl	4286dc <ferror@plt+0x2510c>
  427c74:	cbz	x0, 427c88 <ferror@plt+0x246b8>
  427c78:	ldr	x19, [x0, #8]
  427c7c:	b	427bdc <ferror@plt+0x2460c>
  427c80:	mov	x19, x28
  427c84:	b	427bf0 <ferror@plt+0x24620>
  427c88:	ldp	x19, x20, [sp, #16]
  427c8c:	ldp	x21, x22, [sp, #32]
  427c90:	ldp	x23, x24, [sp, #48]
  427c94:	ldp	x25, x26, [sp, #64]
  427c98:	ldp	x27, x28, [sp, #80]
  427c9c:	ldp	x29, x30, [sp], #112
  427ca0:	ret
  427ca4:	stp	x29, x30, [sp, #-48]!
  427ca8:	mov	x29, sp
  427cac:	stp	x21, x22, [sp, #32]
  427cb0:	mov	x21, x1
  427cb4:	ldrb	w1, [x0]
  427cb8:	stp	x19, x20, [sp, #16]
  427cbc:	cbz	w1, 427d04 <ferror@plt+0x24734>
  427cc0:	ldr	x20, [x0, #8]
  427cc4:	and	w22, w2, #0xff
  427cc8:	mov	x19, #0x0                   	// #0
  427ccc:	cbz	x20, 427ce4 <ferror@plt+0x24714>
  427cd0:	ldr	x0, [x20, #16]
  427cd4:	str	x19, [x20, #32]
  427cd8:	mov	x19, x20
  427cdc:	mov	x20, x0
  427ce0:	b	427ccc <ferror@plt+0x246fc>
  427ce4:	cbz	x19, 427d04 <ferror@plt+0x24734>
  427ce8:	ldr	x0, [x19, #8]
  427cec:	mov	w2, w22
  427cf0:	mov	x1, x21
  427cf4:	ldr	x20, [x19, #32]
  427cf8:	bl	427b24 <ferror@plt+0x24554>
  427cfc:	ldr	x0, [x19, #24]
  427d00:	b	427cd8 <ferror@plt+0x24708>
  427d04:	ldp	x19, x20, [sp, #16]
  427d08:	ldp	x21, x22, [sp, #32]
  427d0c:	ldp	x29, x30, [sp], #48
  427d10:	ret
  427d14:	stp	x29, x30, [sp, #-48]!
  427d18:	mov	x29, sp
  427d1c:	stp	x21, x22, [sp, #32]
  427d20:	add	x22, x0, #0x8
  427d24:	mov	w21, w1
  427d28:	stp	x19, x20, [sp, #16]
  427d2c:	mov	x20, x0
  427d30:	mov	x0, x22
  427d34:	bl	428748 <ferror@plt+0x25178>
  427d38:	mov	x19, x0
  427d3c:	cbnz	x0, 427d78 <ferror@plt+0x247a8>
  427d40:	mov	x0, #0x28                  	// #40
  427d44:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  427d48:	ldr	x1, [x20]
  427d4c:	mov	x19, x0
  427d50:	mov	w2, w21
  427d54:	bl	4272c8 <ferror@plt+0x23cf8>
  427d58:	ldr	x0, [x19, #8]
  427d5c:	cbnz	x0, 427d8c <ferror@plt+0x247bc>
  427d60:	mov	x0, x19
  427d64:	bl	42701c <ferror@plt+0x23a4c>
  427d68:	mov	x0, x19
  427d6c:	mov	x19, #0x0                   	// #0
  427d70:	mov	x1, #0x28                  	// #40
  427d74:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  427d78:	mov	x0, x19
  427d7c:	ldp	x19, x20, [sp, #16]
  427d80:	ldp	x21, x22, [sp, #32]
  427d84:	ldp	x29, x30, [sp], #48
  427d88:	ret
  427d8c:	mov	x0, x22
  427d90:	mov	w1, w21
  427d94:	bl	428570 <ferror@plt+0x24fa0>
  427d98:	ldr	x0, [x20, #8]
  427d9c:	cbz	x0, 427dd8 <ferror@plt+0x24808>
  427da0:	ldr	w0, [x0]
  427da4:	mov	w1, w21
  427da8:	ldr	x2, [x22, #8]
  427dac:	blr	x2
  427db0:	mov	w22, w0
  427db4:	ldr	x0, [x20, #8]
  427db8:	cbz	x0, 427de0 <ferror@plt+0x24810>
  427dbc:	cbnz	w22, 427de0 <ferror@plt+0x24810>
  427dc0:	ldr	x1, [x0, #8]
  427dc4:	ldr	x0, [x20, #32]
  427dc8:	bl	426f28 <ferror@plt+0x23958>
  427dcc:	ldr	x0, [x20, #8]
  427dd0:	str	x19, [x0, #8]
  427dd4:	b	427d78 <ferror@plt+0x247a8>
  427dd8:	mov	w22, #0x0                   	// #0
  427ddc:	b	427db4 <ferror@plt+0x247e4>
  427de0:	mov	x0, #0x28                  	// #40
  427de4:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  427de8:	ldr	x1, [x20, #8]
  427dec:	str	w21, [x0]
  427df0:	str	x19, [x0, #8]
  427df4:	cbnz	x1, 427e04 <ferror@plt+0x24834>
  427df8:	stp	xzr, xzr, [x0, #16]
  427dfc:	str	x0, [x20, #8]
  427e00:	b	427d78 <ferror@plt+0x247a8>
  427e04:	tbz	w22, #31, 427e18 <ferror@plt+0x24848>
  427e08:	ldr	x2, [x1, #24]
  427e0c:	stp	x1, x2, [x0, #16]
  427e10:	str	xzr, [x1, #24]
  427e14:	b	427dfc <ferror@plt+0x2482c>
  427e18:	ldr	x2, [x1, #16]
  427e1c:	stp	x2, x1, [x0, #16]
  427e20:	str	xzr, [x1, #16]
  427e24:	b	427dfc <ferror@plt+0x2482c>
  427e28:	stp	x29, x30, [sp, #-48]!
  427e2c:	mov	x29, sp
  427e30:	stp	x19, x20, [sp, #16]
  427e34:	mov	w19, w2
  427e38:	mov	w20, w3
  427e3c:	stp	x21, x22, [sp, #32]
  427e40:	mov	x21, x4
  427e44:	mov	w22, w5
  427e48:	bl	427d14 <ferror@plt+0x24744>
  427e4c:	cbz	x0, 427e70 <ferror@plt+0x248a0>
  427e50:	mov	w4, w22
  427e54:	mov	x3, x21
  427e58:	mov	w2, w20
  427e5c:	mov	w1, w19
  427e60:	ldp	x19, x20, [sp, #16]
  427e64:	ldp	x21, x22, [sp, #32]
  427e68:	ldp	x29, x30, [sp], #48
  427e6c:	b	427330 <ferror@plt+0x23d60>
  427e70:	mov	w0, #0x0                   	// #0
  427e74:	ldp	x19, x20, [sp, #16]
  427e78:	ldp	x21, x22, [sp, #32]
  427e7c:	ldp	x29, x30, [sp], #48
  427e80:	ret
  427e84:	stp	x29, x30, [sp, #-128]!
  427e88:	mov	x29, sp
  427e8c:	stp	x19, x20, [sp, #16]
  427e90:	mov	x20, x0
  427e94:	ldr	w0, [x1]
  427e98:	mov	x19, x1
  427e9c:	add	x8, sp, #0x40
  427ea0:	stp	x21, x22, [sp, #32]
  427ea4:	str	x23, [sp, #48]
  427ea8:	bl	42b590 <ferror@plt+0x27fc0>
  427eac:	ldr	w0, [x19, #4]
  427eb0:	add	x8, sp, #0x60
  427eb4:	ldp	w23, w22, [sp, #72]
  427eb8:	ldr	x21, [sp, #64]
  427ebc:	bl	42b590 <ferror@plt+0x27fc0>
  427ec0:	ldr	x1, [sp, #96]
  427ec4:	cmp	x1, x21
  427ec8:	b.ne	427f1c <ferror@plt+0x2494c>  // b.any
  427ecc:	ldr	w21, [sp, #104]
  427ed0:	cmp	w21, w23
  427ed4:	b.ne	427f1c <ferror@plt+0x2494c>  // b.any
  427ed8:	cbz	w22, 427f1c <ferror@plt+0x2494c>
  427edc:	ldr	w23, [sp, #108]
  427ee0:	cbz	w23, 427f1c <ferror@plt+0x2494c>
  427ee4:	mov	x0, x20
  427ee8:	bl	427588 <ferror@plt+0x23fb8>
  427eec:	ldrb	w1, [x20]
  427ef0:	cbz	w1, 427f1c <ferror@plt+0x2494c>
  427ef4:	ldr	w5, [x19, #16]
  427ef8:	mov	w3, w23
  427efc:	mov	w2, w22
  427f00:	mov	w1, w21
  427f04:	ldr	x4, [x19, #8]
  427f08:	ldp	x19, x20, [sp, #16]
  427f0c:	ldp	x21, x22, [sp, #32]
  427f10:	ldr	x23, [sp, #48]
  427f14:	ldp	x29, x30, [sp], #128
  427f18:	b	427e28 <ferror@plt+0x24858>
  427f1c:	mov	w0, #0x0                   	// #0
  427f20:	ldp	x19, x20, [sp, #16]
  427f24:	ldp	x21, x22, [sp, #32]
  427f28:	ldr	x23, [sp, #48]
  427f2c:	ldp	x29, x30, [sp], #128
  427f30:	ret
  427f34:	stp	x29, x30, [sp, #-64]!
  427f38:	mov	x29, sp
  427f3c:	stp	x19, x20, [sp, #16]
  427f40:	mov	x20, x0
  427f44:	ldrb	w0, [x0]
  427f48:	stp	x21, x22, [sp, #32]
  427f4c:	str	x23, [sp, #48]
  427f50:	cbz	w0, 427f64 <ferror@plt+0x24994>
  427f54:	ldrb	w0, [x1, #160]
  427f58:	mov	x21, x1
  427f5c:	cbz	w0, 427f78 <ferror@plt+0x249a8>
  427f60:	strb	wzr, [x20]
  427f64:	ldp	x19, x20, [sp, #16]
  427f68:	ldp	x21, x22, [sp, #32]
  427f6c:	ldr	x23, [sp, #48]
  427f70:	ldp	x29, x30, [sp], #64
  427f74:	ret
  427f78:	add	x22, x1, #0x78
  427f7c:	mov	w19, #0x0                   	// #0
  427f80:	mov	x23, #0xfffffffffffffff0    	// #-16
  427f84:	ldr	w0, [x21, #120]
  427f88:	cmp	w19, w0
  427f8c:	b.cs	427f64 <ferror@plt+0x24994>  // b.hs, b.nlast
  427f90:	sxtw	x2, w19
  427f94:	cmp	w19, #0x1
  427f98:	b.gt	427fc4 <ferror@plt+0x249f4>
  427f9c:	add	x2, x2, #0x1
  427fa0:	add	x2, x22, x2, lsl #3
  427fa4:	ldr	x1, [x2]
  427fa8:	mov	x0, x20
  427fac:	bl	427e84 <ferror@plt+0x248b4>
  427fb0:	tst	w0, #0xff
  427fb4:	b.ne	427fbc <ferror@plt+0x249ec>  // b.any
  427fb8:	strb	wzr, [x20]
  427fbc:	add	w19, w19, #0x1
  427fc0:	b	427f84 <ferror@plt+0x249b4>
  427fc4:	ldr	x3, [x22, #32]
  427fc8:	add	x2, x23, w19, sxtw #3
  427fcc:	add	x2, x3, x2
  427fd0:	b	427fa4 <ferror@plt+0x249d4>
  427fd4:	stp	x29, x30, [sp, #-112]!
  427fd8:	mov	x29, sp
  427fdc:	stp	x19, x20, [sp, #16]
  427fe0:	mov	x19, x0
  427fe4:	ldrb	w0, [x0]
  427fe8:	cbz	w0, 428034 <ferror@plt+0x24a64>
  427fec:	and	w20, w1, #0xff
  427ff0:	add	x0, sp, #0x28
  427ff4:	mov	w1, #0x0                   	// #0
  427ff8:	bl	428c2c <ferror@plt+0x2565c>
  427ffc:	mov	w2, w20
  428000:	add	x1, sp, #0x28
  428004:	mov	x0, x19
  428008:	bl	427ca4 <ferror@plt+0x246d4>
  42800c:	add	x0, sp, #0x28
  428010:	bl	428c94 <ferror@plt+0x256c4>
  428014:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  428018:	mov	x19, x0
  42801c:	add	x0, sp, #0x28
  428020:	bl	428ae4 <ferror@plt+0x25514>
  428024:	mov	x0, x19
  428028:	ldp	x19, x20, [sp, #16]
  42802c:	ldp	x29, x30, [sp], #112
  428030:	ret
  428034:	mov	x19, #0x0                   	// #0
  428038:	b	428024 <ferror@plt+0x24a54>
  42803c:	stp	x29, x30, [sp, #-112]!
  428040:	mov	w1, #0x0                   	// #0
  428044:	mov	x29, sp
  428048:	str	x19, [sp, #16]
  42804c:	mov	x19, x0
  428050:	add	x0, sp, #0x28
  428054:	bl	428c2c <ferror@plt+0x2565c>
  428058:	add	x1, sp, #0x28
  42805c:	mov	x0, x19
  428060:	bl	427730 <ferror@plt+0x24160>
  428064:	tst	w0, #0xff
  428068:	b.eq	428094 <ferror@plt+0x24ac4>  // b.none
  42806c:	add	x0, sp, #0x28
  428070:	bl	428c94 <ferror@plt+0x256c4>
  428074:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  428078:	mov	x19, x0
  42807c:	add	x0, sp, #0x28
  428080:	bl	428ae4 <ferror@plt+0x25514>
  428084:	mov	x0, x19
  428088:	ldr	x19, [sp, #16]
  42808c:	ldp	x29, x30, [sp], #112
  428090:	ret
  428094:	mov	x19, #0x0                   	// #0
  428098:	b	42807c <ferror@plt+0x24aac>
  42809c:	ldrb	w2, [x0]
  4280a0:	cbz	w2, 4280b8 <ferror@plt+0x24ae8>
  4280a4:	stp	x29, x30, [sp, #-16]!
  4280a8:	mov	x29, sp
  4280ac:	bl	427588 <ferror@plt+0x23fb8>
  4280b0:	ldp	x29, x30, [sp], #16
  4280b4:	b	42803c <ferror@plt+0x24a6c>
  4280b8:	mov	x0, #0x0                   	// #0
  4280bc:	ret
  4280c0:	ldr	x0, [x0, #24]
  4280c4:	cbz	x0, 4280d8 <ferror@plt+0x24b08>
  4280c8:	ldr	w0, [x0, #4]
  4280cc:	cmp	w0, #0x0
  4280d0:	cset	w0, ne  // ne = any
  4280d4:	ret
  4280d8:	mov	w0, #0x0                   	// #0
  4280dc:	b	4280cc <ferror@plt+0x24afc>
  4280e0:	stp	x29, x30, [sp, #-80]!
  4280e4:	mov	x29, sp
  4280e8:	stp	x21, x22, [sp, #32]
  4280ec:	ldr	x22, [x0]
  4280f0:	stp	x19, x20, [sp, #16]
  4280f4:	mov	x20, x0
  4280f8:	stp	x23, x24, [sp, #48]
  4280fc:	mov	x23, x1
  428100:	str	x25, [sp, #64]
  428104:	cbz	x22, 428198 <ferror@plt+0x24bc8>
  428108:	ldp	w0, w21, [x22]
  42810c:	ubfx	x0, x0, #0, #31
  428110:	cmp	w0, w21
  428114:	b.ne	4281c4 <ferror@plt+0x24bf4>  // b.any
  428118:	ldrsb	w0, [x22, #3]
  42811c:	tbz	w0, #31, 428198 <ferror@plt+0x24bc8>
  428120:	add	w2, w21, #0x1
  428124:	mov	w24, #0x1                   	// #1
  428128:	str	xzr, [x20]
  42812c:	ldr	x0, [x20]
  428130:	cbz	x0, 4281a8 <ferror@plt+0x24bd8>
  428134:	ldr	w1, [x0, #4]
  428138:	ldr	w0, [x0]
  42813c:	add	w1, w2, w1
  428140:	and	w0, w0, #0x7fffffff
  428144:	bl	41e438 <ferror@plt+0x1ae68>
  428148:	mov	w19, w0
  42814c:	ldr	x0, [x20]
  428150:	ubfiz	x1, x19, #3, #32
  428154:	add	x1, x1, #0x8
  428158:	cbz	x0, 4281b8 <ferror@plt+0x24be8>
  42815c:	ldr	w25, [x0, #4]
  428160:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  428164:	str	x0, [x20]
  428168:	and	w2, w19, #0x7fffffff
  42816c:	stp	w2, w25, [x0]
  428170:	cbz	w24, 4281c4 <ferror@plt+0x24bf4>
  428174:	mov	w3, w21
  428178:	mov	x1, #0x0                   	// #0
  42817c:	add	x2, x1, #0x1
  428180:	cmp	x3, x1
  428184:	b.eq	4281c0 <ferror@plt+0x24bf0>  // b.none
  428188:	ldr	x1, [x22, x2, lsl #3]
  42818c:	str	x1, [x0, x2, lsl #3]
  428190:	mov	x1, x2
  428194:	b	42817c <ferror@plt+0x24bac>
  428198:	mov	w24, #0x0                   	// #0
  42819c:	mov	w21, #0x0                   	// #0
  4281a0:	mov	w2, #0x1                   	// #1
  4281a4:	b	42812c <ferror@plt+0x24b5c>
  4281a8:	cmp	w2, #0x4
  4281ac:	mov	w19, #0x4                   	// #4
  4281b0:	csel	w19, w2, w19, cs  // cs = hs, nlast
  4281b4:	b	42814c <ferror@plt+0x24b7c>
  4281b8:	mov	w25, #0x0                   	// #0
  4281bc:	b	428160 <ferror@plt+0x24b90>
  4281c0:	str	w21, [x0, #4]
  4281c4:	ldr	x0, [x20]
  4281c8:	ldr	x3, [x23]
  4281cc:	ldr	w1, [x0, #4]
  4281d0:	ldp	x19, x20, [sp, #16]
  4281d4:	add	w2, w1, #0x1
  4281d8:	ldp	x21, x22, [sp, #32]
  4281dc:	ldp	x23, x24, [sp, #48]
  4281e0:	ldr	x25, [sp, #64]
  4281e4:	str	w2, [x0, #4]
  4281e8:	add	x2, x0, w1, uxtw #3
  4281ec:	ubfiz	x1, x1, #3, #32
  4281f0:	add	x1, x1, #0x8
  4281f4:	add	x0, x0, x1
  4281f8:	str	x3, [x2, #8]
  4281fc:	ldp	x29, x30, [sp], #80
  428200:	ret
  428204:	stp	x29, x30, [sp, #-80]!
  428208:	mov	x29, sp
  42820c:	stp	x21, x22, [sp, #32]
  428210:	ldr	x22, [x0]
  428214:	stp	x19, x20, [sp, #16]
  428218:	mov	x20, x0
  42821c:	stp	x23, x24, [sp, #48]
  428220:	mov	x23, x1
  428224:	str	x25, [sp, #64]
  428228:	cbz	x22, 4282bc <ferror@plt+0x24cec>
  42822c:	ldp	w0, w21, [x22]
  428230:	ubfx	x0, x0, #0, #31
  428234:	cmp	w0, w21
  428238:	b.ne	4282e8 <ferror@plt+0x24d18>  // b.any
  42823c:	ldrsb	w0, [x22, #3]
  428240:	tbz	w0, #31, 4282bc <ferror@plt+0x24cec>
  428244:	add	w2, w21, #0x1
  428248:	mov	w24, #0x1                   	// #1
  42824c:	str	xzr, [x20]
  428250:	ldr	x0, [x20]
  428254:	cbz	x0, 4282cc <ferror@plt+0x24cfc>
  428258:	ldr	w1, [x0, #4]
  42825c:	ldr	w0, [x0]
  428260:	add	w1, w2, w1
  428264:	and	w0, w0, #0x7fffffff
  428268:	bl	41e438 <ferror@plt+0x1ae68>
  42826c:	mov	w19, w0
  428270:	ldr	x0, [x20]
  428274:	ubfiz	x1, x19, #3, #32
  428278:	add	x1, x1, #0x8
  42827c:	cbz	x0, 4282dc <ferror@plt+0x24d0c>
  428280:	ldr	w25, [x0, #4]
  428284:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  428288:	str	x0, [x20]
  42828c:	and	w2, w19, #0x7fffffff
  428290:	stp	w2, w25, [x0]
  428294:	cbz	w24, 4282e8 <ferror@plt+0x24d18>
  428298:	mov	w3, w21
  42829c:	mov	x1, #0x0                   	// #0
  4282a0:	add	x2, x1, #0x1
  4282a4:	cmp	x3, x1
  4282a8:	b.eq	4282e4 <ferror@plt+0x24d14>  // b.none
  4282ac:	ldr	x1, [x22, x2, lsl #3]
  4282b0:	str	x1, [x0, x2, lsl #3]
  4282b4:	mov	x1, x2
  4282b8:	b	4282a0 <ferror@plt+0x24cd0>
  4282bc:	mov	w24, #0x0                   	// #0
  4282c0:	mov	w21, #0x0                   	// #0
  4282c4:	mov	w2, #0x1                   	// #1
  4282c8:	b	428250 <ferror@plt+0x24c80>
  4282cc:	cmp	w2, #0x4
  4282d0:	mov	w19, #0x4                   	// #4
  4282d4:	csel	w19, w2, w19, cs  // cs = hs, nlast
  4282d8:	b	428270 <ferror@plt+0x24ca0>
  4282dc:	mov	w25, #0x0                   	// #0
  4282e0:	b	428284 <ferror@plt+0x24cb4>
  4282e4:	str	w21, [x0, #4]
  4282e8:	ldr	x2, [x20]
  4282ec:	ldr	x3, [x23]
  4282f0:	ldr	w1, [x2, #4]
  4282f4:	ldp	x19, x20, [sp, #16]
  4282f8:	add	w0, w1, #0x1
  4282fc:	ubfiz	x1, x1, #3, #32
  428300:	ldp	x21, x22, [sp, #32]
  428304:	ldp	x23, x24, [sp, #48]
  428308:	ldr	x25, [sp, #64]
  42830c:	str	w0, [x2, #4]
  428310:	add	x0, x1, #0x8
  428314:	str	x3, [x2, x0]
  428318:	add	x0, x2, x0
  42831c:	ldp	x29, x30, [sp], #80
  428320:	ret
  428324:	cbz	x1, 428400 <ferror@plt+0x24e30>
  428328:	stp	x29, x30, [sp, #-48]!
  42832c:	mov	x29, sp
  428330:	stp	x19, x20, [sp, #16]
  428334:	mov	x19, x1
  428338:	ldr	x1, [x0, #16]
  42833c:	stp	x21, x22, [sp, #32]
  428340:	mov	x21, x0
  428344:	cbz	x1, 428350 <ferror@plt+0x24d80>
  428348:	ldr	w0, [x19]
  42834c:	blr	x1
  428350:	ldr	x1, [x19, #8]
  428354:	ldr	x0, [x21, #24]
  428358:	bl	426f28 <ferror@plt+0x23958>
  42835c:	str	xzr, [x19, #32]
  428360:	mov	x20, x19
  428364:	mov	x19, #0x0                   	// #0
  428368:	ldr	x0, [x20, #16]
  42836c:	cbz	x0, 42839c <ferror@plt+0x24dcc>
  428370:	ldr	x1, [x21, #16]
  428374:	cbz	x1, 428380 <ferror@plt+0x24db0>
  428378:	ldr	w0, [x0]
  42837c:	blr	x1
  428380:	ldr	x0, [x20, #16]
  428384:	ldr	x1, [x0, #8]
  428388:	ldr	x0, [x21, #24]
  42838c:	bl	426f28 <ferror@plt+0x23958>
  428390:	ldr	x0, [x20, #16]
  428394:	str	x19, [x0, #32]
  428398:	mov	x19, x0
  42839c:	ldr	x0, [x20, #24]
  4283a0:	cbz	x0, 4283d0 <ferror@plt+0x24e00>
  4283a4:	ldr	x1, [x21, #16]
  4283a8:	cbz	x1, 4283b4 <ferror@plt+0x24de4>
  4283ac:	ldr	w0, [x0]
  4283b0:	blr	x1
  4283b4:	ldr	x0, [x20, #24]
  4283b8:	ldr	x1, [x0, #8]
  4283bc:	ldr	x0, [x21, #24]
  4283c0:	bl	426f28 <ferror@plt+0x23958>
  4283c4:	ldr	x0, [x20, #24]
  4283c8:	str	x19, [x0, #32]
  4283cc:	mov	x19, x0
  4283d0:	ldr	x22, [x20, #32]
  4283d4:	mov	x0, x20
  4283d8:	mov	x1, #0x28                  	// #40
  4283dc:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  4283e0:	cbz	x22, 4283ec <ferror@plt+0x24e1c>
  4283e4:	mov	x20, x22
  4283e8:	b	428368 <ferror@plt+0x24d98>
  4283ec:	cbnz	x19, 428360 <ferror@plt+0x24d90>
  4283f0:	ldp	x19, x20, [sp, #16]
  4283f4:	ldp	x21, x22, [sp, #32]
  4283f8:	ldp	x29, x30, [sp], #48
  4283fc:	ret
  428400:	ret
  428404:	stp	x29, x30, [sp, #-64]!
  428408:	mov	x29, sp
  42840c:	stp	x21, x22, [sp, #32]
  428410:	mov	x21, x0
  428414:	ldr	x0, [x0]
  428418:	stp	x19, x20, [sp, #16]
  42841c:	str	x23, [sp, #48]
  428420:	mov	x23, x1
  428424:	cbz	x0, 42847c <ferror@plt+0x24eac>
  428428:	ldp	x20, x2, [x21]
  42842c:	mov	x0, x23
  428430:	ldr	x1, [x20]
  428434:	blr	x2
  428438:	mov	w22, w0
  42843c:	cmp	w0, #0x0
  428440:	cbz	w0, 42847c <ferror@plt+0x24eac>
  428444:	ldp	x0, x19, [x20, #16]
  428448:	csel	x19, x19, x0, ge  // ge = tcont
  42844c:	cbz	x19, 42847c <ferror@plt+0x24eac>
  428450:	ldr	x1, [x19]
  428454:	mov	x0, x23
  428458:	ldr	x2, [x21, #8]
  42845c:	blr	x2
  428460:	cmp	w0, #0x0
  428464:	cbnz	w0, 428490 <ferror@plt+0x24ec0>
  428468:	tbz	w22, #31, 4284e0 <ferror@plt+0x24f10>
  42846c:	ldr	x0, [x19, #24]
  428470:	str	x20, [x19, #24]
  428474:	str	x0, [x20, #16]
  428478:	str	x19, [x21]
  42847c:	ldp	x19, x20, [sp, #16]
  428480:	ldp	x21, x22, [sp, #32]
  428484:	ldr	x23, [sp, #48]
  428488:	ldp	x29, x30, [sp], #64
  42848c:	ret
  428490:	b.ge	4284d8 <ferror@plt+0x24f08>  // b.tcont
  428494:	ldr	x1, [x19, #16]
  428498:	cbz	x1, 428468 <ferror@plt+0x24e98>
  42849c:	lsr	w3, w22, #31
  4284a0:	lsr	w2, w0, #31
  4284a4:	cmp	w3, #0x0
  4284a8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  4284ac:	b.eq	4284f0 <ferror@plt+0x24f20>  // b.none
  4284b0:	ldr	x0, [x19, #16]
  4284b4:	ldr	x1, [x0, #24]
  4284b8:	str	x19, [x0, #24]
  4284bc:	str	x1, [x19, #16]
  4284c0:	str	x0, [x20, #16]
  4284c4:	ldr	x1, [x0, #24]
  4284c8:	str	x20, [x0, #24]
  4284cc:	str	x1, [x20, #16]
  4284d0:	str	x0, [x21]
  4284d4:	b	428428 <ferror@plt+0x24e58>
  4284d8:	ldr	x1, [x19, #24]
  4284dc:	b	428498 <ferror@plt+0x24ec8>
  4284e0:	ldr	x0, [x19, #16]
  4284e4:	str	x20, [x19, #16]
  4284e8:	str	x0, [x20, #24]
  4284ec:	b	428478 <ferror@plt+0x24ea8>
  4284f0:	cmp	w22, #0x0
  4284f4:	cset	w1, gt
  4284f8:	cmp	w0, #0x0
  4284fc:	cset	w0, gt
  428500:	cmp	w1, #0x0
  428504:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  428508:	b.eq	428530 <ferror@plt+0x24f60>  // b.none
  42850c:	ldr	x0, [x19, #24]
  428510:	ldr	x1, [x0, #16]
  428514:	str	x19, [x0, #16]
  428518:	str	x1, [x19, #24]
  42851c:	str	x0, [x20, #24]
  428520:	ldr	x1, [x0, #16]
  428524:	str	x20, [x0, #16]
  428528:	str	x1, [x20, #24]
  42852c:	b	4284d0 <ferror@plt+0x24f00>
  428530:	cmp	w3, #0x0
  428534:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  428538:	b.eq	428550 <ferror@plt+0x24f80>  // b.none
  42853c:	ldr	x0, [x19, #24]
  428540:	ldr	x1, [x0, #16]
  428544:	str	x19, [x0, #16]
  428548:	str	x1, [x19, #24]
  42854c:	b	4284c0 <ferror@plt+0x24ef0>
  428550:	cmp	w2, #0x0
  428554:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  428558:	b.eq	428428 <ferror@plt+0x24e58>  // b.none
  42855c:	ldr	x0, [x19, #16]
  428560:	ldr	x1, [x0, #24]
  428564:	str	x19, [x0, #24]
  428568:	str	x1, [x19, #16]
  42856c:	b	42851c <ferror@plt+0x24f4c>
  428570:	stp	x29, x30, [sp, #-64]!
  428574:	mov	x29, sp
  428578:	stp	x21, x22, [sp, #32]
  42857c:	mov	x21, x0
  428580:	ldr	x0, [x0]
  428584:	stp	x19, x20, [sp, #16]
  428588:	str	x23, [sp, #48]
  42858c:	mov	w23, w1
  428590:	cbz	x0, 4285e8 <ferror@plt+0x25018>
  428594:	ldp	x20, x2, [x21]
  428598:	mov	w0, w23
  42859c:	ldr	w1, [x20]
  4285a0:	blr	x2
  4285a4:	mov	w22, w0
  4285a8:	cmp	w0, #0x0
  4285ac:	cbz	w0, 4285e8 <ferror@plt+0x25018>
  4285b0:	ldp	x0, x19, [x20, #16]
  4285b4:	csel	x19, x19, x0, ge  // ge = tcont
  4285b8:	cbz	x19, 4285e8 <ferror@plt+0x25018>
  4285bc:	ldr	w1, [x19]
  4285c0:	mov	w0, w23
  4285c4:	ldr	x2, [x21, #8]
  4285c8:	blr	x2
  4285cc:	cmp	w0, #0x0
  4285d0:	cbnz	w0, 4285fc <ferror@plt+0x2502c>
  4285d4:	tbz	w22, #31, 42864c <ferror@plt+0x2507c>
  4285d8:	ldr	x0, [x19, #24]
  4285dc:	str	x20, [x19, #24]
  4285e0:	str	x0, [x20, #16]
  4285e4:	str	x19, [x21]
  4285e8:	ldp	x19, x20, [sp, #16]
  4285ec:	ldp	x21, x22, [sp, #32]
  4285f0:	ldr	x23, [sp, #48]
  4285f4:	ldp	x29, x30, [sp], #64
  4285f8:	ret
  4285fc:	b.ge	428644 <ferror@plt+0x25074>  // b.tcont
  428600:	ldr	x1, [x19, #16]
  428604:	cbz	x1, 4285d4 <ferror@plt+0x25004>
  428608:	lsr	w3, w22, #31
  42860c:	lsr	w2, w0, #31
  428610:	cmp	w3, #0x0
  428614:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  428618:	b.eq	42865c <ferror@plt+0x2508c>  // b.none
  42861c:	ldr	x0, [x19, #16]
  428620:	ldr	x1, [x0, #24]
  428624:	str	x19, [x0, #24]
  428628:	str	x1, [x19, #16]
  42862c:	str	x0, [x20, #16]
  428630:	ldr	x1, [x0, #24]
  428634:	str	x20, [x0, #24]
  428638:	str	x1, [x20, #16]
  42863c:	str	x0, [x21]
  428640:	b	428594 <ferror@plt+0x24fc4>
  428644:	ldr	x1, [x19, #24]
  428648:	b	428604 <ferror@plt+0x25034>
  42864c:	ldr	x0, [x19, #16]
  428650:	str	x20, [x19, #16]
  428654:	str	x0, [x20, #24]
  428658:	b	4285e4 <ferror@plt+0x25014>
  42865c:	cmp	w22, #0x0
  428660:	cset	w1, gt
  428664:	cmp	w0, #0x0
  428668:	cset	w0, gt
  42866c:	cmp	w1, #0x0
  428670:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  428674:	b.eq	42869c <ferror@plt+0x250cc>  // b.none
  428678:	ldr	x0, [x19, #24]
  42867c:	ldr	x1, [x0, #16]
  428680:	str	x19, [x0, #16]
  428684:	str	x1, [x19, #24]
  428688:	str	x0, [x20, #24]
  42868c:	ldr	x1, [x0, #16]
  428690:	str	x20, [x0, #16]
  428694:	str	x1, [x20, #24]
  428698:	b	42863c <ferror@plt+0x2506c>
  42869c:	cmp	w3, #0x0
  4286a0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4286a4:	b.eq	4286bc <ferror@plt+0x250ec>  // b.none
  4286a8:	ldr	x0, [x19, #24]
  4286ac:	ldr	x1, [x0, #16]
  4286b0:	str	x19, [x0, #16]
  4286b4:	str	x1, [x19, #24]
  4286b8:	b	42862c <ferror@plt+0x2505c>
  4286bc:	cmp	w2, #0x0
  4286c0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4286c4:	b.eq	428594 <ferror@plt+0x24fc4>  // b.none
  4286c8:	ldr	x0, [x19, #16]
  4286cc:	ldr	x1, [x0, #24]
  4286d0:	str	x19, [x0, #24]
  4286d4:	str	x1, [x19, #16]
  4286d8:	b	428688 <ferror@plt+0x250b8>
  4286dc:	ldr	x2, [x0]
  4286e0:	cbz	x2, 428740 <ferror@plt+0x25170>
  4286e4:	stp	x29, x30, [sp, #-32]!
  4286e8:	mov	x29, sp
  4286ec:	stp	x19, x20, [sp, #16]
  4286f0:	mov	x19, x0
  4286f4:	mov	w20, w1
  4286f8:	bl	428570 <ferror@plt+0x24fa0>
  4286fc:	ldp	x0, x2, [x19]
  428700:	mov	w1, w20
  428704:	ldr	w0, [x0]
  428708:	blr	x2
  42870c:	cmp	w0, #0x0
  428710:	ldr	x0, [x19]
  428714:	b.gt	42872c <ferror@plt+0x2515c>
  428718:	ldr	x1, [x0, #24]
  42871c:	cbz	x1, 428738 <ferror@plt+0x25168>
  428720:	mov	x0, x1
  428724:	ldr	x1, [x1, #16]
  428728:	cbnz	x1, 428720 <ferror@plt+0x25150>
  42872c:	ldp	x19, x20, [sp, #16]
  428730:	ldp	x29, x30, [sp], #32
  428734:	ret
  428738:	mov	x0, #0x0                   	// #0
  42873c:	b	42872c <ferror@plt+0x2515c>
  428740:	mov	x0, #0x0                   	// #0
  428744:	ret
  428748:	stp	x29, x30, [sp, #-32]!
  42874c:	mov	x29, sp
  428750:	stp	x19, x20, [sp, #16]
  428754:	mov	x19, x0
  428758:	mov	w20, w1
  42875c:	bl	428570 <ferror@plt+0x24fa0>
  428760:	ldr	x0, [x19]
  428764:	cbnz	x0, 428778 <ferror@plt+0x251a8>
  428768:	mov	x0, #0x0                   	// #0
  42876c:	ldp	x19, x20, [sp, #16]
  428770:	ldp	x29, x30, [sp], #32
  428774:	ret
  428778:	ldr	w0, [x0]
  42877c:	mov	w1, w20
  428780:	ldr	x2, [x19, #8]
  428784:	blr	x2
  428788:	cbnz	w0, 428768 <ferror@plt+0x25198>
  42878c:	ldr	x0, [x19]
  428790:	cbz	x0, 428768 <ferror@plt+0x25198>
  428794:	ldr	x0, [x0, #8]
  428798:	b	42876c <ferror@plt+0x2519c>
  42879c:	mov	x0, x1
  4287a0:	mov	x1, x2
  4287a4:	stp	x29, x30, [sp, #-16]!
  4287a8:	mov	x29, sp
  4287ac:	ldrb	w2, [x2, #8]
  4287b0:	ldr	x1, [x1]
  4287b4:	bl	427b24 <ferror@plt+0x24554>
  4287b8:	mov	w0, #0x0                   	// #0
  4287bc:	ldp	x29, x30, [sp], #16
  4287c0:	ret
  4287c4:	ldrb	w3, [x0]
  4287c8:	cbnz	x1, 4287ec <ferror@plt+0x2521c>
  4287cc:	stp	x29, x30, [sp, #-16]!
  4287d0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4287d4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4287d8:	mov	x29, sp
  4287dc:	add	x2, x2, #0x81a
  4287e0:	add	x0, x0, #0x82b
  4287e4:	mov	w1, #0x71b                 	// #1819
  4287e8:	bl	403600 <ferror@plt+0x30>
  4287ec:	tbz	w3, #7, 4288c8 <ferror@plt+0x252f8>
  4287f0:	mov	w4, w3
  4287f4:	mov	x5, x0
  4287f8:	mov	x0, #0x0                   	// #0
  4287fc:	tbz	w4, #7, 42880c <ferror@plt+0x2523c>
  428800:	add	x0, x0, #0x1
  428804:	lsl	w4, w4, #1
  428808:	b	4287fc <ferror@plt+0x2522c>
  42880c:	sub	x4, x0, #0x2
  428810:	cmp	x4, #0x4
  428814:	ccmp	x0, x1, #0x2, ls  // ls = plast
  428818:	b.ls	42882c <ferror@plt+0x2525c>  // b.plast
  42881c:	mov	w0, #0xffffffff            	// #-1
  428820:	str	w0, [x2]
  428824:	mov	w0, #0x0                   	// #0
  428828:	ret
  42882c:	mov	w1, #0x7                   	// #7
  428830:	sub	w4, w1, w0
  428834:	mov	w1, #0x1                   	// #1
  428838:	lsl	w1, w1, w4
  42883c:	sub	w1, w1, #0x1
  428840:	and	w1, w1, w3
  428844:	mov	x3, #0x1                   	// #1
  428848:	ldrb	w4, [x5, x3]
  42884c:	and	w6, w4, #0xc0
  428850:	cmp	w6, #0x80
  428854:	b.ne	42881c <ferror@plt+0x2524c>  // b.any
  428858:	and	w4, w4, #0x3f
  42885c:	add	x3, x3, #0x1
  428860:	orr	w1, w4, w1, lsl #6
  428864:	cmp	x0, x3
  428868:	b.hi	428848 <ferror@plt+0x25278>  // b.pmore
  42886c:	cmp	w1, #0x7f
  428870:	b.ls	42881c <ferror@plt+0x2524c>  // b.plast
  428874:	cmp	w1, #0x7ff
  428878:	ccmp	x0, #0x2, #0x0, ls  // ls = plast
  42887c:	b.hi	42881c <ferror@plt+0x2524c>  // b.pmore
  428880:	mov	w3, #0xffff                	// #65535
  428884:	cmp	w1, w3
  428888:	ccmp	x0, #0x3, #0x0, ls  // ls = plast
  42888c:	b.hi	42881c <ferror@plt+0x2524c>  // b.pmore
  428890:	mov	w3, #0x1fffff              	// #2097151
  428894:	cmp	w1, w3
  428898:	ccmp	x0, #0x4, #0x0, ls  // ls = plast
  42889c:	b.hi	42881c <ferror@plt+0x2524c>  // b.pmore
  4288a0:	mov	w3, #0x3ffffff             	// #67108863
  4288a4:	cmp	w1, w3
  4288a8:	ccmp	x0, #0x6, #0x0, ls  // ls = plast
  4288ac:	b.eq	42881c <ferror@plt+0x2524c>  // b.none
  4288b0:	mov	w3, #0xffff2800            	// #-55296
  4288b4:	add	w3, w1, w3
  4288b8:	cmp	w3, #0x7ff
  4288bc:	b.ls	42881c <ferror@plt+0x2524c>  // b.plast
  4288c0:	str	w1, [x2]
  4288c4:	ret
  4288c8:	mov	w0, #0x1                   	// #1
  4288cc:	str	w3, [x2]
  4288d0:	ret
  4288d4:	stp	x29, x30, [sp, #-32]!
  4288d8:	mov	x29, sp
  4288dc:	stp	x19, x20, [sp, #16]
  4288e0:	mov	x19, x0
  4288e4:	ldr	w20, [x0, #40]
  4288e8:	cmp	w20, #0x0
  4288ec:	b.le	4288fc <ferror@plt+0x2532c>
  4288f0:	ldr	w0, [x0, #36]
  4288f4:	cmp	w0, #0x1
  4288f8:	b.hi	42890c <ferror@plt+0x2533c>  // b.pmore
  4288fc:	str	w20, [x19, #28]
  428900:	ldp	x19, x20, [sp, #16]
  428904:	ldp	x29, x30, [sp], #32
  428908:	ret
  42890c:	ldr	x0, [x19, #16]
  428910:	cbz	x0, 42892c <ferror@plt+0x2535c>
  428914:	bl	402d50 <strlen@plt>
  428918:	sub	w0, w20, w0
  42891c:	add	w1, w20, #0x20
  428920:	cmp	w0, #0x20
  428924:	csel	w20, w1, w20, lt  // lt = tstop
  428928:	b	4288fc <ferror@plt+0x2532c>
  42892c:	mov	w0, #0x0                   	// #0
  428930:	b	428918 <ferror@plt+0x25348>
  428934:	stp	x29, x30, [sp, #-64]!
  428938:	mov	x29, sp
  42893c:	stp	x19, x20, [sp, #16]
  428940:	mov	x20, x0
  428944:	ldr	x19, [x0, #176]
  428948:	stp	x21, x22, [sp, #32]
  42894c:	mov	x22, x1
  428950:	ldp	x1, x0, [x19, #24]
  428954:	str	x23, [sp, #48]
  428958:	sxtw	x23, w2
  42895c:	mov	x21, x23
  428960:	sub	x0, x0, x1
  428964:	cmp	x0, w23, sxtw
  428968:	b.cs	428978 <ferror@plt+0x253a8>  // b.hs, b.nlast
  42896c:	mov	x1, x23
  428970:	mov	x0, x19
  428974:	bl	45c22c <_obstack_newchunk@@Base>
  428978:	ldr	x0, [x19, #24]
  42897c:	mov	x2, x23
  428980:	mov	x1, x22
  428984:	bl	402cd0 <memcpy@plt>
  428988:	ldr	x0, [x19, #24]
  42898c:	add	x0, x0, x23
  428990:	str	x0, [x19, #24]
  428994:	mov	x0, #0x0                   	// #0
  428998:	cmp	w21, w0
  42899c:	b.le	4289c8 <ferror@plt+0x253f8>
  4289a0:	ldrb	w1, [x22, x0]
  4289a4:	cmp	w1, #0xa
  4289a8:	b.eq	4289c0 <ferror@plt+0x253f0>  // b.none
  4289ac:	ldr	w2, [x20, #200]
  4289b0:	add	w2, w2, #0x1
  4289b4:	add	x0, x0, #0x1
  4289b8:	str	w2, [x20, #200]
  4289bc:	b	428998 <ferror@plt+0x253c8>
  4289c0:	mov	w2, #0x0                   	// #0
  4289c4:	b	4289b4 <ferror@plt+0x253e4>
  4289c8:	ldp	x19, x20, [sp, #16]
  4289cc:	ldp	x21, x22, [sp, #32]
  4289d0:	ldr	x23, [sp, #48]
  4289d4:	ldp	x29, x30, [sp], #64
  4289d8:	ret
  4289dc:	ldr	x0, [x0, #32]
  4289e0:	b	441354 <ferror@plt+0x3dd84>
  4289e4:	cbnz	w1, 4289f0 <ferror@plt+0x25420>
  4289e8:	ldr	x0, [x0, #32]
  4289ec:	b	441144 <ferror@plt+0x3db74>
  4289f0:	mov	w0, #0x0                   	// #0
  4289f4:	ret
  4289f8:	stp	x29, x30, [sp, #-48]!
  4289fc:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  428a00:	add	x2, x0, #0x14c
  428a04:	mov	x29, sp
  428a08:	stp	x19, x20, [sp, #16]
  428a0c:	add	x19, x0, #0x58
  428a10:	str	x21, [sp, #32]
  428a14:	stp	xzr, xzr, [x0]
  428a18:	stp	xzr, xzr, [x0, #16]
  428a1c:	stp	xzr, xzr, [x0, #32]
  428a20:	stp	xzr, xzr, [x0, #48]
  428a24:	stp	xzr, xzr, [x0, #64]
  428a28:	str	xzr, [x0, #80]
  428a2c:	stp	xzr, xzr, [x0, #88]
  428a30:	ldr	x1, [x1, #1264]
  428a34:	stp	xzr, xzr, [x19, #16]
  428a38:	stp	xzr, xzr, [x19, #32]
  428a3c:	stp	xzr, xzr, [x19, #48]
  428a40:	stp	xzr, xzr, [x19, #64]
  428a44:	str	xzr, [x19, #80]
  428a48:	str	x1, [x0, #192]
  428a4c:	add	x1, x0, #0xcc
  428a50:	stp	x0, xzr, [x0, #176]
  428a54:	str	wzr, [x0, #200]
  428a58:	strb	wzr, [x1], #1
  428a5c:	cmp	x2, x1
  428a60:	b.ne	428a58 <ferror@plt+0x25488>  // b.any
  428a64:	mov	w1, #0x1                   	// #1
  428a68:	strb	w1, [x0, #332]
  428a6c:	adrp	x21, 42d000 <ferror@plt+0x29a30>
  428a70:	adrp	x20, 42d000 <ferror@plt+0x29a30>
  428a74:	add	x21, x21, #0x3e4
  428a78:	add	x20, x20, #0x3bc
  428a7c:	mov	x4, x21
  428a80:	mov	x3, x20
  428a84:	mov	x2, #0x0                   	// #0
  428a88:	mov	x1, #0x0                   	// #0
  428a8c:	bl	45c200 <_obstack_begin@@Base>
  428a90:	mov	x4, x21
  428a94:	mov	x3, x20
  428a98:	mov	x0, x19
  428a9c:	mov	x2, #0x0                   	// #0
  428aa0:	ldp	x19, x20, [sp, #16]
  428aa4:	mov	x1, #0x0                   	// #0
  428aa8:	ldr	x21, [sp, #32]
  428aac:	ldp	x29, x30, [sp], #48
  428ab0:	b	45c200 <_obstack_begin@@Base>
  428ab4:	stp	x29, x30, [sp, #-32]!
  428ab8:	mov	x1, #0x0                   	// #0
  428abc:	mov	x29, sp
  428ac0:	str	x19, [sp, #16]
  428ac4:	mov	x19, x0
  428ac8:	add	x0, x0, #0x58
  428acc:	bl	45c37c <_obstack_free@@Base>
  428ad0:	mov	x0, x19
  428ad4:	mov	x1, #0x0                   	// #0
  428ad8:	ldr	x19, [sp, #16]
  428adc:	ldp	x29, x30, [sp], #32
  428ae0:	b	45c37c <_obstack_free@@Base>
  428ae4:	stp	x29, x30, [sp, #-32]!
  428ae8:	mov	x29, sp
  428aec:	str	x19, [sp, #16]
  428af0:	mov	x19, x0
  428af4:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  428af8:	add	x0, x0, #0x928
  428afc:	str	x0, [x19]
  428b00:	ldr	x0, [x19, #56]
  428b04:	cbz	x0, 428b14 <ferror@plt+0x25544>
  428b08:	ldr	x1, [x0]
  428b0c:	ldr	x1, [x1, #8]
  428b10:	blr	x1
  428b14:	ldr	x0, [x19, #8]
  428b18:	bl	428ab4 <ferror@plt+0x254e4>
  428b1c:	ldr	x0, [x19, #8]
  428b20:	bl	4032a0 <free@plt>
  428b24:	ldr	x0, [x19, #16]
  428b28:	ldr	x19, [sp, #16]
  428b2c:	ldp	x29, x30, [sp], #32
  428b30:	b	4032a0 <free@plt>
  428b34:	stp	x29, x30, [sp, #-32]!
  428b38:	mov	x29, sp
  428b3c:	str	x19, [sp, #16]
  428b40:	mov	x19, x0
  428b44:	bl	428ae4 <ferror@plt+0x25514>
  428b48:	mov	x0, x19
  428b4c:	mov	x1, #0x48                  	// #72
  428b50:	ldr	x19, [sp, #16]
  428b54:	ldp	x29, x30, [sp], #32
  428b58:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  428b5c:	str	w1, [x0, #40]
  428b60:	b	4288d4 <ferror@plt+0x25304>
  428b64:	stp	x29, x30, [sp, #-32]!
  428b68:	mov	x29, sp
  428b6c:	str	x19, [sp, #16]
  428b70:	mov	x19, x0
  428b74:	ldr	x0, [x0, #8]
  428b78:	ldr	x0, [x0, #176]
  428b7c:	ldp	x2, x1, [x0, #8]
  428b80:	cmp	x2, x1
  428b84:	b.cs	428bac <ferror@plt+0x255dc>  // b.hs, b.nlast
  428b88:	ldr	x2, [x0, #32]
  428b8c:	cmp	x2, x1
  428b90:	b.ls	428bac <ferror@plt+0x255dc>  // b.plast
  428b94:	str	x1, [x0, #24]
  428b98:	ldr	x0, [x19, #8]
  428b9c:	ldr	x19, [sp, #16]
  428ba0:	str	wzr, [x0, #200]
  428ba4:	ldp	x29, x30, [sp], #32
  428ba8:	ret
  428bac:	bl	45c37c <_obstack_free@@Base>
  428bb0:	b	428b98 <ferror@plt+0x255c8>
  428bb4:	stp	x29, x30, [sp, #-32]!
  428bb8:	mov	x29, sp
  428bbc:	stp	x19, x20, [sp, #16]
  428bc0:	mov	x19, x0
  428bc4:	mov	x20, x1
  428bc8:	ldr	x0, [x0, #16]
  428bcc:	bl	4032a0 <free@plt>
  428bd0:	str	x20, [x19, #16]
  428bd4:	mov	x0, x19
  428bd8:	bl	4288d4 <ferror@plt+0x25304>
  428bdc:	str	wzr, [x19, #32]
  428be0:	strb	wzr, [x19, #64]
  428be4:	ldp	x19, x20, [sp, #16]
  428be8:	ldp	x29, x30, [sp], #32
  428bec:	ret
  428bf0:	mov	x1, x0
  428bf4:	ldr	x0, [x0, #16]
  428bf8:	str	xzr, [x1, #16]
  428bfc:	ret
  428c00:	stp	x29, x30, [sp, #-32]!
  428c04:	mov	x29, sp
  428c08:	str	x19, [sp, #16]
  428c0c:	mov	x19, x0
  428c10:	ldr	x0, [x0, #16]
  428c14:	cbz	x0, 428c20 <ferror@plt+0x25650>
  428c18:	bl	4032a0 <free@plt>
  428c1c:	str	xzr, [x19, #16]
  428c20:	ldr	x19, [sp, #16]
  428c24:	ldp	x29, x30, [sp], #32
  428c28:	ret
  428c2c:	stp	x29, x30, [sp, #-48]!
  428c30:	mov	x29, sp
  428c34:	stp	x19, x20, [sp, #16]
  428c38:	mov	x19, x0
  428c3c:	mov	w20, w1
  428c40:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  428c44:	mov	x1, #0x150                 	// #336
  428c48:	add	x0, x0, #0x928
  428c4c:	str	x0, [x19]
  428c50:	mov	x0, #0x1                   	// #1
  428c54:	str	x21, [sp, #32]
  428c58:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  428c5c:	mov	x21, x0
  428c60:	bl	4289f8 <ferror@plt+0x25428>
  428c64:	stp	x21, xzr, [x19, #8]
  428c68:	mov	w0, #0x10000               	// #65536
  428c6c:	stp	xzr, xzr, [x19, #24]
  428c70:	mov	x1, #0x0                   	// #0
  428c74:	str	w20, [x19, #40]
  428c78:	stp	xzr, xzr, [x19, #48]
  428c7c:	str	w0, [x19, #64]
  428c80:	mov	x0, x19
  428c84:	ldp	x19, x20, [sp, #16]
  428c88:	ldr	x21, [sp, #32]
  428c8c:	ldp	x29, x30, [sp], #48
  428c90:	b	428bb4 <ferror@plt+0x255e4>
  428c94:	stp	x29, x30, [sp, #-32]!
  428c98:	mov	x29, sp
  428c9c:	stp	x19, x20, [sp, #16]
  428ca0:	ldr	x20, [x0, #8]
  428ca4:	ldr	x19, [x20, #176]
  428ca8:	ldp	x0, x1, [x19, #24]
  428cac:	cmp	x1, x0
  428cb0:	b.ne	428cc0 <ferror@plt+0x256f0>  // b.any
  428cb4:	mov	x0, x19
  428cb8:	mov	x1, #0x1                   	// #1
  428cbc:	bl	45c22c <_obstack_newchunk@@Base>
  428cc0:	ldr	x0, [x19, #24]
  428cc4:	add	x1, x0, #0x1
  428cc8:	str	x1, [x19, #24]
  428ccc:	strb	wzr, [x0]
  428cd0:	ldr	x0, [x20, #176]
  428cd4:	ldp	x19, x20, [sp, #16]
  428cd8:	ldp	x29, x30, [sp], #32
  428cdc:	ldr	x0, [x0, #16]
  428ce0:	ret
  428ce4:	stp	x29, x30, [sp, #-32]!
  428ce8:	mov	x29, sp
  428cec:	str	x19, [sp, #16]
  428cf0:	mov	x19, x0
  428cf4:	bl	428c94 <ferror@plt+0x256c4>
  428cf8:	ldr	x1, [x19, #8]
  428cfc:	ldr	x1, [x1, #192]
  428d00:	bl	402d60 <fputs@plt>
  428d04:	mov	x0, x19
  428d08:	ldr	x19, [sp, #16]
  428d0c:	ldp	x29, x30, [sp], #32
  428d10:	b	428b64 <ferror@plt+0x25594>
  428d14:	ldr	x1, [x0, #8]
  428d18:	strb	wzr, [x0, #64]
  428d1c:	ldrb	w1, [x1, #332]
  428d20:	str	wzr, [x0, #32]
  428d24:	cbz	w1, 428d50 <ferror@plt+0x25780>
  428d28:	stp	x29, x30, [sp, #-32]!
  428d2c:	mov	x29, sp
  428d30:	str	x19, [sp, #16]
  428d34:	mov	x19, x0
  428d38:	bl	428ce4 <ferror@plt+0x25714>
  428d3c:	ldr	x0, [x19, #8]
  428d40:	ldr	x19, [sp, #16]
  428d44:	ldp	x29, x30, [sp], #32
  428d48:	ldr	x0, [x0, #192]
  428d4c:	b	403350 <fflush@plt>
  428d50:	ret
  428d54:	stp	x29, x30, [sp, #-32]!
  428d58:	mov	x29, sp
  428d5c:	str	x19, [sp, #16]
  428d60:	mov	x19, x0
  428d64:	str	wzr, [x0, #32]
  428d68:	strb	wzr, [x0, #64]
  428d6c:	bl	428ce4 <ferror@plt+0x25714>
  428d70:	ldr	x0, [x19, #8]
  428d74:	ldr	x19, [sp, #16]
  428d78:	ldp	x29, x30, [sp], #32
  428d7c:	ldr	x0, [x0, #192]
  428d80:	b	403350 <fflush@plt>
  428d84:	stp	x29, x30, [sp, #-64]!
  428d88:	mov	x29, sp
  428d8c:	stp	x19, x20, [sp, #16]
  428d90:	mov	x20, x0
  428d94:	stp	x21, x22, [sp, #32]
  428d98:	adrp	x22, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  428d9c:	add	x22, x22, #0x844
  428da0:	str	x23, [sp, #48]
  428da4:	and	w23, w1, #0xff
  428da8:	bl	428c94 <ferror@plt+0x256c4>
  428dac:	mov	x19, x0
  428db0:	ldr	x0, [x20, #8]
  428db4:	ldr	x21, [x0, #192]
  428db8:	ldrb	w2, [x19]
  428dbc:	cbz	w2, 428e58 <ferror@plt+0x25888>
  428dc0:	cmp	w2, #0x22
  428dc4:	b.eq	428e28 <ferror@plt+0x25858>  // b.none
  428dc8:	b.hi	428de4 <ferror@plt+0x25814>  // b.pmore
  428dcc:	cmp	w2, #0xa
  428dd0:	b.eq	428e1c <ferror@plt+0x2584c>  // b.none
  428dd4:	cmp	w2, #0x20
  428dd8:	b.ne	428e0c <ferror@plt+0x2583c>  // b.any
  428ddc:	cbz	w23, 428e0c <ferror@plt+0x2583c>
  428de0:	b	428e28 <ferror@plt+0x25858>
  428de4:	cmp	w2, #0x5c
  428de8:	b.eq	428e38 <ferror@plt+0x25868>  // b.none
  428dec:	b.hi	428dfc <ferror@plt+0x2582c>  // b.pmore
  428df0:	and	w2, w2, #0xfffffffd
  428df4:	cmp	w2, #0x3c
  428df8:	b	428dd8 <ferror@plt+0x25808>
  428dfc:	sub	w2, w2, #0x7b
  428e00:	and	w2, w2, #0xff
  428e04:	cmp	w2, #0x2
  428e08:	b.ls	428ddc <ferror@plt+0x2580c>  // b.plast
  428e0c:	ldrb	w0, [x19], #1
  428e10:	mov	x1, x21
  428e14:	bl	402e40 <fputc@plt>
  428e18:	b	428db8 <ferror@plt+0x257e8>
  428e1c:	mov	x1, x21
  428e20:	mov	x0, x22
  428e24:	bl	402d60 <fputs@plt>
  428e28:	mov	x1, x21
  428e2c:	mov	w0, #0x5c                  	// #92
  428e30:	bl	402e40 <fputc@plt>
  428e34:	b	428e0c <ferror@plt+0x2583c>
  428e38:	ldrb	w0, [x19, #1]
  428e3c:	cbnz	w0, 428e28 <ferror@plt+0x25858>
  428e40:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  428e44:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  428e48:	add	x2, x2, #0x847
  428e4c:	add	x0, x0, #0x82b
  428e50:	mov	w1, #0x378                 	// #888
  428e54:	bl	403600 <ferror@plt+0x30>
  428e58:	mov	x0, x20
  428e5c:	ldp	x19, x20, [sp, #16]
  428e60:	ldp	x21, x22, [sp, #32]
  428e64:	ldr	x23, [sp, #48]
  428e68:	ldp	x29, x30, [sp], #64
  428e6c:	b	428b64 <ferror@plt+0x25594>
  428e70:	ldr	x0, [x0, #8]
  428e74:	ldr	x0, [x0, #176]
  428e78:	ldp	x2, x1, [x0, #16]
  428e7c:	sub	x0, x1, #0x1
  428e80:	cmp	x2, x1
  428e84:	csel	x0, x0, xzr, ne  // ne = any
  428e88:	ret
  428e8c:	ldr	x2, [x0, #8]
  428e90:	ldr	w1, [x0, #28]
  428e94:	ldr	w0, [x2, #200]
  428e98:	sub	w0, w1, w0
  428e9c:	ret
  428ea0:	stp	x29, x30, [sp, #-32]!
  428ea4:	mov	x29, sp
  428ea8:	stp	x19, x20, [sp, #16]
  428eac:	mov	x19, x0
  428eb0:	ldr	x0, [x0, #8]
  428eb4:	ldr	x20, [x0, #176]
  428eb8:	ldp	x0, x1, [x20, #24]
  428ebc:	cmp	x1, x0
  428ec0:	b.ne	428ed0 <ferror@plt+0x25900>  // b.any
  428ec4:	mov	x0, x20
  428ec8:	mov	x1, #0x1                   	// #1
  428ecc:	bl	45c22c <_obstack_newchunk@@Base>
  428ed0:	ldr	x0, [x20, #24]
  428ed4:	add	x1, x0, #0x1
  428ed8:	str	x1, [x20, #24]
  428edc:	mov	w1, #0xa                   	// #10
  428ee0:	strb	w1, [x0]
  428ee4:	strb	wzr, [x19, #65]
  428ee8:	ldr	x0, [x19, #8]
  428eec:	ldp	x19, x20, [sp, #16]
  428ef0:	str	wzr, [x0, #200]
  428ef4:	ldp	x29, x30, [sp], #32
  428ef8:	ret
  428efc:	stp	x29, x30, [sp, #-48]!
  428f00:	mov	x29, sp
  428f04:	stp	x19, x20, [sp, #16]
  428f08:	mov	x19, x0
  428f0c:	str	x21, [sp, #32]
  428f10:	mov	w21, w1
  428f14:	ldr	w1, [x0, #40]
  428f18:	cmp	w1, #0x0
  428f1c:	b.gt	428f64 <ferror@plt+0x25994>
  428f20:	ldr	x0, [x19, #8]
  428f24:	ldr	x20, [x0, #176]
  428f28:	ldp	x0, x1, [x20, #24]
  428f2c:	cmp	x1, x0
  428f30:	b.ne	428f40 <ferror@plt+0x25970>  // b.any
  428f34:	mov	x0, x20
  428f38:	mov	x1, #0x1                   	// #1
  428f3c:	bl	45c22c <_obstack_newchunk@@Base>
  428f40:	ldr	x0, [x20, #24]
  428f44:	add	x1, x0, #0x1
  428f48:	str	x1, [x20, #24]
  428f4c:	strb	w21, [x0]
  428f50:	ldr	x1, [x19, #8]
  428f54:	ldr	w0, [x1, #200]
  428f58:	add	w0, w0, #0x1
  428f5c:	str	w0, [x1, #200]
  428f60:	b	428f94 <ferror@plt+0x259c4>
  428f64:	ldr	x2, [x0, #8]
  428f68:	ldr	w1, [x0, #28]
  428f6c:	ldr	w2, [x2, #200]
  428f70:	sub	w1, w1, w2
  428f74:	cmp	w1, #0x0
  428f78:	b.gt	428f20 <ferror@plt+0x25950>
  428f7c:	bl	428ea0 <ferror@plt+0x258d0>
  428f80:	and	x1, x21, #0xff
  428f84:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  428f88:	add	x0, x0, #0x228
  428f8c:	ldrh	w0, [x0, x1, lsl #1]
  428f90:	tbz	w0, #6, 428f20 <ferror@plt+0x25950>
  428f94:	ldp	x19, x20, [sp, #16]
  428f98:	ldr	x21, [sp, #32]
  428f9c:	ldp	x29, x30, [sp], #48
  428fa0:	ret
  428fa4:	stp	x29, x30, [sp, #-48]!
  428fa8:	mov	x29, sp
  428fac:	str	x21, [sp, #32]
  428fb0:	ldr	w21, [x0, #32]
  428fb4:	stp	x19, x20, [sp, #16]
  428fb8:	mov	x19, x0
  428fbc:	mov	w20, #0x0                   	// #0
  428fc0:	cmp	w20, w21
  428fc4:	b.ge	428fdc <ferror@plt+0x25a0c>  // b.tcont
  428fc8:	mov	x0, x19
  428fcc:	mov	w1, #0x20                  	// #32
  428fd0:	add	w20, w20, #0x1
  428fd4:	bl	428efc <ferror@plt+0x2592c>
  428fd8:	b	428fc0 <ferror@plt+0x259f0>
  428fdc:	ldp	x19, x20, [sp, #16]
  428fe0:	ldr	x21, [sp, #32]
  428fe4:	ldp	x29, x30, [sp], #48
  428fe8:	ret
  428fec:	stp	x29, x30, [sp, #-32]!
  428ff0:	mov	x29, sp
  428ff4:	stp	x19, x20, [sp, #16]
  428ff8:	ldr	x20, [x0, #16]
  428ffc:	cbz	x20, 429014 <ferror@plt+0x25a44>
  429000:	ldr	w1, [x0, #36]
  429004:	mov	x19, x0
  429008:	cbz	w1, 429020 <ferror@plt+0x25a50>
  42900c:	cmp	w1, #0x2
  429010:	b.eq	429040 <ferror@plt+0x25a70>  // b.none
  429014:	ldp	x19, x20, [sp, #16]
  429018:	ldp	x29, x30, [sp], #32
  42901c:	ret
  429020:	ldrb	w1, [x0, #64]
  429024:	cbz	w1, 429034 <ferror@plt+0x25a64>
  429028:	ldp	x19, x20, [sp, #16]
  42902c:	ldp	x29, x30, [sp], #32
  429030:	b	428fa4 <ferror@plt+0x259d4>
  429034:	ldr	w0, [x0, #32]
  429038:	add	w0, w0, #0x3
  42903c:	str	w0, [x19, #32]
  429040:	mov	x0, x20
  429044:	bl	402d50 <strlen@plt>
  429048:	mov	w2, w0
  42904c:	mov	x1, x20
  429050:	ldr	x0, [x19, #8]
  429054:	bl	428934 <ferror@plt+0x25364>
  429058:	mov	w0, #0x1                   	// #1
  42905c:	strb	w0, [x19, #64]
  429060:	b	429014 <ferror@plt+0x25a44>
  429064:	stp	x29, x30, [sp, #-48]!
  429068:	mov	x29, sp
  42906c:	stp	x19, x20, [sp, #16]
  429070:	mov	x19, x1
  429074:	mov	x20, x0
  429078:	ldr	x1, [x0, #8]
  42907c:	ldr	w1, [x1, #200]
  429080:	str	x21, [sp, #32]
  429084:	mov	x21, x2
  429088:	cbnz	w1, 4290b8 <ferror@plt+0x25ae8>
  42908c:	bl	428fec <ferror@plt+0x25a1c>
  429090:	ldr	w0, [x20, #40]
  429094:	cmp	w0, #0x0
  429098:	b.le	4290b8 <ferror@plt+0x25ae8>
  42909c:	cmp	x19, x21
  4290a0:	b.eq	4290b8 <ferror@plt+0x25ae8>  // b.none
  4290a4:	ldrb	w0, [x19]
  4290a8:	cmp	w0, #0x20
  4290ac:	b.ne	4290b8 <ferror@plt+0x25ae8>  // b.any
  4290b0:	add	x19, x19, #0x1
  4290b4:	b	42909c <ferror@plt+0x25acc>
  4290b8:	sub	w2, w21, w19
  4290bc:	mov	x1, x19
  4290c0:	ldr	x0, [x20, #8]
  4290c4:	ldp	x19, x20, [sp, #16]
  4290c8:	ldr	x21, [sp, #32]
  4290cc:	ldp	x29, x30, [sp], #48
  4290d0:	b	428934 <ferror@plt+0x25364>
  4290d4:	ldr	w3, [x0, #40]
  4290d8:	cmp	w3, #0x0
  4290dc:	b.le	4291c0 <ferror@plt+0x25bf0>
  4290e0:	stp	x29, x30, [sp, #-64]!
  4290e4:	mov	x29, sp
  4290e8:	stp	x19, x20, [sp, #16]
  4290ec:	mov	x20, x0
  4290f0:	stp	x21, x22, [sp, #32]
  4290f4:	mov	x21, x1
  4290f8:	mov	x22, x2
  4290fc:	str	x23, [sp, #48]
  429100:	adrp	x23, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  429104:	add	x23, x23, #0x228
  429108:	cmp	x22, x21
  42910c:	b.eq	4291c4 <ferror@plt+0x25bf4>  // b.none
  429110:	mov	x19, x21
  429114:	ldrb	w1, [x19]
  429118:	ldrb	w0, [x19]
  42911c:	ldrh	w1, [x23, x1, lsl #1]
  429120:	tbnz	w1, #0, 429138 <ferror@plt+0x25b68>
  429124:	cmp	w0, #0xa
  429128:	b.eq	429138 <ferror@plt+0x25b68>  // b.none
  42912c:	add	x19, x19, #0x1
  429130:	cmp	x22, x19
  429134:	b.ne	429114 <ferror@plt+0x25b44>  // b.any
  429138:	ldr	x2, [x20, #8]
  42913c:	sub	x0, x19, x21
  429140:	ldr	w1, [x20, #28]
  429144:	ldr	w2, [x2, #200]
  429148:	sub	w1, w1, w2
  42914c:	cmp	x0, w1, sxtw
  429150:	b.lt	42915c <ferror@plt+0x25b8c>  // b.tstop
  429154:	mov	x0, x20
  429158:	bl	428ea0 <ferror@plt+0x258d0>
  42915c:	mov	x2, x19
  429160:	mov	x1, x21
  429164:	mov	x0, x20
  429168:	bl	429064 <ferror@plt+0x25a94>
  42916c:	cmp	x22, x19
  429170:	b.eq	4291b8 <ferror@plt+0x25be8>  // b.none
  429174:	ldrb	w0, [x19]
  429178:	ldrh	w0, [x23, x0, lsl #1]
  42917c:	tbz	w0, #0, 429198 <ferror@plt+0x25bc8>
  429180:	mov	x0, x20
  429184:	add	x19, x19, #0x1
  429188:	mov	w1, #0x20                  	// #32
  42918c:	bl	428efc <ferror@plt+0x2592c>
  429190:	cmp	x22, x19
  429194:	b.eq	4291b0 <ferror@plt+0x25be0>  // b.none
  429198:	ldrb	w0, [x19]
  42919c:	cmp	w0, #0xa
  4291a0:	b.ne	4291b0 <ferror@plt+0x25be0>  // b.any
  4291a4:	add	x19, x19, #0x1
  4291a8:	mov	x0, x20
  4291ac:	bl	428ea0 <ferror@plt+0x258d0>
  4291b0:	mov	x21, x19
  4291b4:	b	429108 <ferror@plt+0x25b38>
  4291b8:	mov	x21, x22
  4291bc:	b	429108 <ferror@plt+0x25b38>
  4291c0:	b	429064 <ferror@plt+0x25a94>
  4291c4:	ldp	x19, x20, [sp, #16]
  4291c8:	ldp	x21, x22, [sp, #32]
  4291cc:	ldr	x23, [sp, #48]
  4291d0:	ldp	x29, x30, [sp], #64
  4291d4:	ret
  4291d8:	stp	x29, x30, [sp, #-96]!
  4291dc:	cmn	x2, #0x1
  4291e0:	mov	x29, sp
  4291e4:	stp	x19, x20, [sp, #16]
  4291e8:	mov	x19, x1
  4291ec:	stp	x21, x22, [sp, #32]
  4291f0:	mov	x22, x0
  4291f4:	stp	x23, x24, [sp, #48]
  4291f8:	stp	x25, x26, [sp, #64]
  4291fc:	b.ne	42920c <ferror@plt+0x25c3c>  // b.any
  429200:	mov	x0, x1
  429204:	bl	402d50 <strlen@plt>
  429208:	mov	x2, x0
  42920c:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  429210:	add	x21, x19, x2
  429214:	mov	x20, x19
  429218:	add	x24, x24, #0x228
  42921c:	add	x26, sp, #0x54
  429220:	adrp	x25, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429224:	cmp	x20, x21
  429228:	b.eq	429280 <ferror@plt+0x25cb0>  // b.none
  42922c:	mov	x23, x20
  429230:	ldrb	w0, [x23], #1
  429234:	ldrh	w0, [x24, x0, lsl #1]
  429238:	tbnz	w0, #4, 429278 <ferror@plt+0x25ca8>
  42923c:	cmp	x19, x20
  429240:	b.cs	429254 <ferror@plt+0x25c84>  // b.hs, b.nlast
  429244:	sub	x2, x20, #0x1
  429248:	mov	x1, x19
  42924c:	mov	x0, x22
  429250:	bl	4290d4 <ferror@plt+0x25b04>
  429254:	ldrb	w2, [x20]
  429258:	mov	x19, x23
  42925c:	add	x1, x25, #0x86c
  429260:	add	x0, sp, #0x50
  429264:	bl	402e00 <sprintf@plt>
  429268:	mov	x2, x26
  42926c:	add	x1, sp, #0x50
  429270:	mov	x0, x22
  429274:	bl	4290d4 <ferror@plt+0x25b04>
  429278:	mov	x20, x23
  42927c:	b	429224 <ferror@plt+0x25c54>
  429280:	mov	x2, x20
  429284:	mov	x1, x19
  429288:	mov	x0, x22
  42928c:	bl	4290d4 <ferror@plt+0x25b04>
  429290:	ldp	x19, x20, [sp, #16]
  429294:	ldp	x21, x22, [sp, #32]
  429298:	ldp	x23, x24, [sp, #48]
  42929c:	ldp	x25, x26, [sp, #64]
  4292a0:	ldp	x29, x30, [sp], #96
  4292a4:	ret
  4292a8:	stp	x29, x30, [sp, #-32]!
  4292ac:	mov	x29, sp
  4292b0:	stp	x19, x20, [sp, #16]
  4292b4:	mov	x19, x1
  4292b8:	mov	x20, x0
  4292bc:	mov	x0, x1
  4292c0:	bl	402d50 <strlen@plt>
  4292c4:	mov	x1, x19
  4292c8:	add	x2, x19, x0
  4292cc:	mov	x0, x20
  4292d0:	ldp	x19, x20, [sp, #16]
  4292d4:	ldp	x29, x30, [sp], #32
  4292d8:	b	4290d4 <ferror@plt+0x25b04>
  4292dc:	stp	x29, x30, [sp, #-64]!
  4292e0:	mov	x29, sp
  4292e4:	stp	x19, x20, [sp, #16]
  4292e8:	ldr	x19, [x0, #8]
  4292ec:	stp	x21, x22, [sp, #32]
  4292f0:	mov	x21, x0
  4292f4:	ldp	x0, x20, [x19, #176]
  4292f8:	str	x23, [sp, #48]
  4292fc:	cmp	x0, x19
  429300:	b.eq	42931c <ferror@plt+0x25d4c>  // b.none
  429304:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429308:	add	x2, x2, #0x873
  42930c:	mov	w1, #0x595                 	// #1429
  429310:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429314:	add	x0, x0, #0x82b
  429318:	bl	403600 <ferror@plt+0x30>
  42931c:	ldr	w0, [x0, #200]
  429320:	add	x23, x20, #0x8
  429324:	mov	w22, #0x0                   	// #0
  429328:	cbz	w0, 42933c <ferror@plt+0x25d6c>
  42932c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429330:	mov	w1, #0x596                 	// #1430
  429334:	add	x2, x2, #0x873
  429338:	b	429310 <ferror@plt+0x25d40>
  42933c:	ldr	x1, [x23, w22, uxtw #3]
  429340:	cbz	x1, 429354 <ferror@plt+0x25d84>
  429344:	mov	x0, x21
  429348:	add	w22, w22, #0x1
  42934c:	bl	4292a8 <ferror@plt+0x25cd8>
  429350:	b	42933c <ferror@plt+0x25d6c>
  429354:	ldr	x0, [x20]
  429358:	str	x0, [x19, #184]
  42935c:	add	x0, x19, #0x58
  429360:	ldr	x1, [x0, #8]
  429364:	cmp	x1, x20
  429368:	b.cs	429390 <ferror@plt+0x25dc0>  // b.hs, b.nlast
  42936c:	ldr	x1, [x0, #32]
  429370:	cmp	x1, x20
  429374:	b.ls	429390 <ferror@plt+0x25dc0>  // b.plast
  429378:	ldp	x21, x22, [sp, #32]
  42937c:	ldr	x23, [sp, #48]
  429380:	stp	x20, x20, [x0, #16]
  429384:	ldp	x19, x20, [sp, #16]
  429388:	ldp	x29, x30, [sp], #64
  42938c:	ret
  429390:	mov	x1, x20
  429394:	ldp	x19, x20, [sp, #16]
  429398:	ldp	x21, x22, [sp, #32]
  42939c:	ldr	x23, [sp, #48]
  4293a0:	ldp	x29, x30, [sp], #64
  4293a4:	b	45c37c <_obstack_free@@Base>
  4293a8:	ldr	w1, [x0, #24]
  4293ac:	cbz	w1, 4293d8 <ferror@plt+0x25e08>
  4293b0:	stp	x29, x30, [sp, #-32]!
  4293b4:	mov	w1, #0x20                  	// #32
  4293b8:	mov	x29, sp
  4293bc:	str	x19, [sp, #16]
  4293c0:	mov	x19, x0
  4293c4:	bl	428efc <ferror@plt+0x2592c>
  4293c8:	str	wzr, [x19, #24]
  4293cc:	ldr	x19, [sp, #16]
  4293d0:	ldp	x29, x30, [sp], #32
  4293d4:	ret
  4293d8:	ret
  4293dc:	stp	x29, x30, [sp, #-32]!
  4293e0:	mov	x29, sp
  4293e4:	str	x19, [sp, #16]
  4293e8:	mov	x19, x0
  4293ec:	bl	428ea0 <ferror@plt+0x258d0>
  4293f0:	mov	x0, x19
  4293f4:	bl	428d14 <ferror@plt+0x25744>
  4293f8:	strb	wzr, [x19, #65]
  4293fc:	ldr	x19, [sp, #16]
  429400:	ldp	x29, x30, [sp], #32
  429404:	ret
  429408:	stp	x29, x30, [sp, #-32]!
  42940c:	mov	x29, sp
  429410:	ldr	w2, [x0, #32]
  429414:	str	x19, [sp, #16]
  429418:	mov	x19, x0
  42941c:	add	w2, w2, w1
  429420:	str	w2, [x0, #32]
  429424:	bl	428ea0 <ferror@plt+0x258d0>
  429428:	mov	x0, x19
  42942c:	bl	428fa4 <ferror@plt+0x259d4>
  429430:	strb	wzr, [x19, #65]
  429434:	ldr	x19, [sp, #16]
  429438:	ldp	x29, x30, [sp], #32
  42943c:	ret
  429440:	stp	x29, x30, [sp, #-32]!
  429444:	and	w1, w1, #0xff
  429448:	mov	x29, sp
  42944c:	str	x19, [sp, #16]
  429450:	mov	x19, x0
  429454:	bl	428efc <ferror@plt+0x2592c>
  429458:	mov	x0, x19
  42945c:	mov	w1, #0x20                  	// #32
  429460:	ldr	x19, [sp, #16]
  429464:	ldp	x29, x30, [sp], #32
  429468:	b	428efc <ferror@plt+0x2592c>
  42946c:	stp	x29, x30, [sp, #-32]!
  429470:	mov	x29, sp
  429474:	stp	x19, x20, [sp, #16]
  429478:	and	w20, w1, #0xff
  42947c:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  429480:	mov	x19, x0
  429484:	ldr	x1, [x1, #1168]
  429488:	bl	4292a8 <ferror@plt+0x25cd8>
  42948c:	mov	w0, w20
  429490:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  429494:	add	x1, x1, #0x5c7
  429498:	bl	423228 <ferror@plt+0x1fc58>
  42949c:	mov	x1, x0
  4294a0:	mov	x0, x19
  4294a4:	ldp	x19, x20, [sp, #16]
  4294a8:	ldp	x29, x30, [sp], #32
  4294ac:	b	4292a8 <ferror@plt+0x25cd8>
  4294b0:	stp	x29, x30, [sp, #-32]!
  4294b4:	mov	x29, sp
  4294b8:	str	x19, [sp, #16]
  4294bc:	mov	x19, x0
  4294c0:	mov	w0, w1
  4294c4:	bl	423544 <ferror@plt+0x1ff74>
  4294c8:	mov	x1, x0
  4294cc:	mov	x0, x19
  4294d0:	bl	4292a8 <ferror@plt+0x25cd8>
  4294d4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4294d8:	ldr	x1, [x0, #1176]
  4294dc:	mov	x0, x19
  4294e0:	ldr	x19, [sp, #16]
  4294e4:	ldp	x29, x30, [sp], #32
  4294e8:	b	4292a8 <ferror@plt+0x25cd8>
  4294ec:	sub	sp, sp, #0x1c0
  4294f0:	stp	x29, x30, [sp, #16]
  4294f4:	add	x29, sp, #0x10
  4294f8:	stp	x19, x20, [sp, #32]
  4294fc:	mov	x19, x0
  429500:	ldr	x0, [x0, #8]
  429504:	stp	x25, x26, [sp, #80]
  429508:	add	x26, x0, #0x58
  42950c:	stp	x21, x22, [sp, #48]
  429510:	mov	x21, x1
  429514:	str	x0, [sp, #112]
  429518:	ldr	x1, [x26, #24]
  42951c:	stp	x23, x24, [sp, #64]
  429520:	ldr	x0, [x26, #32]
  429524:	stp	x27, x28, [sp, #96]
  429528:	sub	x0, x0, x1
  42952c:	cmp	x0, #0x1e7
  429530:	b.hi	429540 <ferror@plt+0x25f70>  // b.pmore
  429534:	mov	x0, x26
  429538:	mov	x1, #0x1e8                 	// #488
  42953c:	bl	45c22c <_obstack_newchunk@@Base>
  429540:	ldp	x24, x1, [x26, #16]
  429544:	add	x1, x1, #0x1e8
  429548:	cmp	x1, x24
  42954c:	b.ne	42955c <ferror@plt+0x25f8c>  // b.any
  429550:	ldrb	w0, [x26, #80]
  429554:	orr	w0, w0, #0x2
  429558:	strb	w0, [x26, #80]
  42955c:	ldr	x0, [x26, #48]
  429560:	add	x25, sp, #0xd0
  429564:	ldr	x2, [x26, #32]
  429568:	add	x1, x1, x0
  42956c:	bic	x0, x1, x0
  429570:	mov	w22, #0x0                   	// #0
  429574:	ldr	x1, [x26, #8]
  429578:	mov	w23, #0x0                   	// #0
  42957c:	sub	x3, x0, x1
  429580:	sub	x1, x2, x1
  429584:	cmp	x3, x1
  429588:	mov	w1, #0x0                   	// #0
  42958c:	csel	x0, x0, x2, ls  // ls = plast
  429590:	stp	x0, x0, [x26, #16]
  429594:	mov	x2, #0xf0                  	// #240
  429598:	ldr	x0, [sp, #112]
  42959c:	ldr	x0, [x0, #184]
  4295a0:	str	x0, [x24]
  4295a4:	ldr	x0, [sp, #112]
  4295a8:	str	x24, [x0, #184]
  4295ac:	mov	x0, x25
  4295b0:	add	x24, x24, #0x8
  4295b4:	bl	403000 <memset@plt>
  4295b8:	str	wzr, [sp, #128]
  4295bc:	ldr	x20, [x21]
  4295c0:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4295c4:	add	x0, x0, #0x490
  4295c8:	str	x0, [sp, #160]
  4295cc:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4295d0:	add	x0, x0, #0x5c7
  4295d4:	str	x0, [sp, #176]
  4295d8:	str	wzr, [sp, #184]
  4295dc:	ldrb	w0, [x20]
  4295e0:	cbz	w0, 429aec <ferror@plt+0x2651c>
  4295e4:	ldrb	w0, [x20]
  4295e8:	cbz	w0, 429aec <ferror@plt+0x2651c>
  4295ec:	cmp	w0, #0x25
  4295f0:	b.eq	42a710 <ferror@plt+0x27140>  // b.none
  4295f4:	ldp	x0, x1, [x26, #24]
  4295f8:	cmp	x1, x0
  4295fc:	b.ne	42960c <ferror@plt+0x2603c>  // b.any
  429600:	mov	x0, x26
  429604:	mov	x1, #0x1                   	// #1
  429608:	bl	45c22c <_obstack_newchunk@@Base>
  42960c:	ldr	x0, [x26, #24]
  429610:	add	x1, x0, #0x1
  429614:	str	x1, [x26, #24]
  429618:	ldrb	w1, [x20], #1
  42961c:	strb	w1, [x0]
  429620:	b	4295e4 <ferror@plt+0x26014>
  429624:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429628:	add	x2, x2, #0x88c
  42962c:	mov	w1, #0x41e                 	// #1054
  429630:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429634:	add	x0, x0, #0x82b
  429638:	bl	403600 <ferror@plt+0x30>
  42963c:	ldp	x0, x1, [x26, #24]
  429640:	cmp	x1, x0
  429644:	b.ne	429654 <ferror@plt+0x26084>  // b.any
  429648:	mov	x0, x26
  42964c:	mov	x1, #0x1                   	// #1
  429650:	bl	45c22c <_obstack_newchunk@@Base>
  429654:	ldr	x0, [x26, #24]
  429658:	add	x1, x0, #0x1
  42965c:	str	x1, [x26, #24]
  429660:	mov	w1, #0x25                  	// #37
  429664:	strb	w1, [x0]
  429668:	add	x20, x20, #0x2
  42966c:	b	4295dc <ferror@plt+0x2600c>
  429670:	ldrb	w0, [x19, #67]
  429674:	bl	423544 <ferror@plt+0x1ff74>
  429678:	mov	x27, x0
  42967c:	bl	402d50 <strlen@plt>
  429680:	mov	x28, x0
  429684:	ldp	x1, x0, [x26, #24]
  429688:	sub	x0, x0, x1
  42968c:	cmp	x28, x0
  429690:	b.ls	4296a0 <ferror@plt+0x260d0>  // b.plast
  429694:	mov	x1, x28
  429698:	mov	x0, x26
  42969c:	bl	45c22c <_obstack_newchunk@@Base>
  4296a0:	ldr	x0, [x26, #24]
  4296a4:	mov	x2, x28
  4296a8:	mov	x1, x27
  4296ac:	bl	402cd0 <memcpy@plt>
  4296b0:	ldr	x0, [x26, #24]
  4296b4:	add	x0, x0, x28
  4296b8:	str	x0, [x26, #24]
  4296bc:	adrp	x27, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  4296c0:	ldr	x0, [x27, #1176]
  4296c4:	bl	402d50 <strlen@plt>
  4296c8:	mov	x28, x0
  4296cc:	ldp	x1, x0, [x26, #24]
  4296d0:	sub	x0, x0, x1
  4296d4:	cmp	x28, x0
  4296d8:	b.ls	4296e8 <ferror@plt+0x26118>  // b.plast
  4296dc:	mov	x1, x28
  4296e0:	mov	x0, x26
  4296e4:	bl	45c22c <_obstack_newchunk@@Base>
  4296e8:	ldr	x1, [x27, #1176]
  4296ec:	mov	x2, x28
  4296f0:	ldr	x0, [x26, #24]
  4296f4:	bl	402cd0 <memcpy@plt>
  4296f8:	ldr	x0, [x26, #24]
  4296fc:	add	x0, x0, x28
  429700:	str	x0, [x26, #24]
  429704:	b	429668 <ferror@plt+0x26098>
  429708:	ldrb	w0, [x19, #67]
  42970c:	bl	423544 <ferror@plt+0x1ff74>
  429710:	b	42a7d8 <ferror@plt+0x27208>
  429714:	ldp	x2, x1, [x26, #16]
  429718:	add	w0, w22, #0x1
  42971c:	str	w0, [sp, #144]
  429720:	ubfiz	x4, x22, #3, #32
  429724:	cmp	x1, x2
  429728:	b.ne	429738 <ferror@plt+0x26168>  // b.any
  42972c:	ldrb	w0, [x26, #80]
  429730:	orr	w0, w0, #0x2
  429734:	strb	w0, [x26, #80]
  429738:	ldr	x0, [x26, #48]
  42973c:	adrp	x27, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  429740:	ldr	x3, [x26, #32]
  429744:	add	x1, x1, x0
  429748:	bic	x0, x1, x0
  42974c:	add	x27, x27, #0x228
  429750:	ldr	x1, [x26, #8]
  429754:	add	x28, x20, #0x1
  429758:	sub	x5, x0, x1
  42975c:	sub	x1, x3, x1
  429760:	cmp	x5, x1
  429764:	csel	x0, x0, x3, ls  // ls = plast
  429768:	stp	x0, x0, [x26, #16]
  42976c:	str	x2, [x24, x4]
  429770:	ldrb	w0, [x20, #1]
  429774:	ldrh	w0, [x27, x0, lsl #1]
  429778:	tbz	w0, #2, 4297f4 <ferror@plt+0x26224>
  42977c:	add	x1, sp, #0xc8
  429780:	mov	x0, x28
  429784:	mov	w2, #0xa                   	// #10
  429788:	bl	402d40 <strtoul@plt>
  42978c:	ldr	x3, [sp, #200]
  429790:	sub	w0, w0, #0x1
  429794:	ldrb	w1, [x3]
  429798:	cmp	w1, #0x24
  42979c:	b.eq	4297b0 <ferror@plt+0x261e0>  // b.none
  4297a0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4297a4:	mov	w1, #0x45a                 	// #1114
  4297a8:	add	x2, x2, #0x88c
  4297ac:	b	429630 <ferror@plt+0x26060>
  4297b0:	ldr	w1, [sp, #184]
  4297b4:	add	x28, x3, #0x1
  4297b8:	cbz	w1, 4297cc <ferror@plt+0x261fc>
  4297bc:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4297c0:	mov	w1, #0x45e                 	// #1118
  4297c4:	add	x2, x2, #0x88c
  4297c8:	b	429630 <ferror@plt+0x26060>
  4297cc:	str	w23, [sp, #120]
  4297d0:	mov	w23, w0
  4297d4:	mov	w0, #0x1                   	// #1
  4297d8:	str	w0, [sp, #128]
  4297dc:	cmp	w23, #0x1d
  4297e0:	b.ls	429820 <ferror@plt+0x26250>  // b.plast
  4297e4:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4297e8:	mov	w1, #0x466                 	// #1126
  4297ec:	add	x2, x2, #0x88c
  4297f0:	b	429630 <ferror@plt+0x26060>
  4297f4:	add	w0, w23, #0x1
  4297f8:	str	w0, [sp, #120]
  4297fc:	ldr	w0, [sp, #128]
  429800:	cbz	w0, 429814 <ferror@plt+0x26244>
  429804:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429808:	mov	w1, #0x464                 	// #1124
  42980c:	add	x2, x2, #0x88c
  429810:	b	429630 <ferror@plt+0x26060>
  429814:	mov	w0, #0x1                   	// #1
  429818:	str	w0, [sp, #184]
  42981c:	b	4297dc <ferror@plt+0x2620c>
  429820:	ubfiz	x0, x23, #3, #32
  429824:	ldr	x1, [x25, x0]
  429828:	cbz	x1, 42983c <ferror@plt+0x2626c>
  42982c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429830:	mov	w1, #0x467                 	// #1127
  429834:	add	x2, x2, #0x88c
  429838:	b	429630 <ferror@plt+0x26060>
  42983c:	ldr	x1, [sp, #144]
  429840:	ubfiz	x1, x1, #3, #32
  429844:	str	x1, [sp, #152]
  429848:	add	x1, x24, x1
  42984c:	str	x1, [x25, x0]
  429850:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429854:	add	x0, x0, #0x896
  429858:	str	x1, [sp, #136]
  42985c:	str	x0, [sp, #168]
  429860:	ldp	x0, x1, [x26, #24]
  429864:	cmp	x1, x0
  429868:	b.ne	429878 <ferror@plt+0x262a8>  // b.any
  42986c:	mov	x0, x26
  429870:	mov	x1, #0x1                   	// #1
  429874:	bl	45c22c <_obstack_newchunk@@Base>
  429878:	ldr	x0, [x26, #24]
  42987c:	mov	x20, x28
  429880:	add	x1, x0, #0x1
  429884:	str	x1, [x26, #24]
  429888:	ldrb	w1, [x28]
  42988c:	strb	w1, [x0]
  429890:	ldr	x0, [sp, #168]
  429894:	ldrb	w1, [x20], #1
  429898:	str	w1, [sp, #188]
  42989c:	bl	4032f0 <strchr@plt>
  4298a0:	ldr	w1, [sp, #188]
  4298a4:	cbnz	x0, 429910 <ferror@plt+0x26340>
  4298a8:	cmp	w1, #0x2e
  4298ac:	b.ne	429a64 <ferror@plt+0x26494>  // b.any
  4298b0:	ldrb	w1, [x20]
  4298b4:	ldrb	w0, [x20]
  4298b8:	ldrh	w1, [x27, x1, lsl #1]
  4298bc:	tbz	w1, #2, 429918 <ferror@plt+0x26348>
  4298c0:	ldp	x0, x1, [x26, #24]
  4298c4:	cmp	x1, x0
  4298c8:	b.ne	4298d8 <ferror@plt+0x26308>  // b.any
  4298cc:	mov	x0, x26
  4298d0:	mov	x1, #0x1                   	// #1
  4298d4:	bl	45c22c <_obstack_newchunk@@Base>
  4298d8:	ldr	x0, [x26, #24]
  4298dc:	add	x1, x0, #0x1
  4298e0:	str	x1, [x26, #24]
  4298e4:	ldrb	w1, [x20]
  4298e8:	strb	w1, [x0]
  4298ec:	ldrb	w0, [x20], #1
  4298f0:	ldrh	w1, [x27, w0, sxtw #1]
  4298f4:	tbnz	w1, #2, 4298c0 <ferror@plt+0x262f0>
  4298f8:	cmp	w0, #0x73
  4298fc:	b.eq	429a64 <ferror@plt+0x26494>  // b.none
  429900:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429904:	mov	w1, #0x47c                 	// #1148
  429908:	add	x2, x2, #0x88c
  42990c:	b	429630 <ferror@plt+0x26060>
  429910:	mov	x28, x20
  429914:	b	429860 <ferror@plt+0x26290>
  429918:	cmp	w0, #0x2a
  42991c:	b.eq	429930 <ferror@plt+0x26360>  // b.none
  429920:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429924:	mov	w1, #0x480                 	// #1152
  429928:	add	x2, x2, #0x88c
  42992c:	b	429630 <ferror@plt+0x26060>
  429930:	ldp	x0, x1, [x26, #24]
  429934:	cmp	x1, x0
  429938:	b.ne	429948 <ferror@plt+0x26378>  // b.any
  42993c:	mov	x0, x26
  429940:	mov	x1, #0x1                   	// #1
  429944:	bl	45c22c <_obstack_newchunk@@Base>
  429948:	ldr	x0, [x26, #24]
  42994c:	add	x3, x28, #0x2
  429950:	add	x1, x0, #0x1
  429954:	str	x1, [x26, #24]
  429958:	mov	w1, #0x2a                  	// #42
  42995c:	strb	w1, [x0]
  429960:	ldrb	w0, [x20, #1]
  429964:	ldrh	w0, [x27, x0, lsl #1]
  429968:	tbz	w0, #2, 4299f8 <ferror@plt+0x26428>
  42996c:	add	x1, sp, #0xc8
  429970:	mov	x0, x3
  429974:	mov	w2, #0xa                   	// #10
  429978:	bl	402d40 <strtoul@plt>
  42997c:	sub	w1, w0, #0x1
  429980:	cmp	w0, w23
  429984:	ldr	x3, [sp, #200]
  429988:	b.eq	42999c <ferror@plt+0x263cc>  // b.none
  42998c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429990:	mov	w1, #0x489                 	// #1161
  429994:	add	x2, x2, #0x88c
  429998:	b	429630 <ferror@plt+0x26060>
  42999c:	ldr	w0, [sp, #184]
  4299a0:	cbz	w0, 4299b4 <ferror@plt+0x263e4>
  4299a4:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4299a8:	mov	w1, #0x48a                 	// #1162
  4299ac:	add	x2, x2, #0x88c
  4299b0:	b	429630 <ferror@plt+0x26060>
  4299b4:	ldrb	w0, [x3]
  4299b8:	cmp	w0, #0x24
  4299bc:	b.eq	4299d0 <ferror@plt+0x26400>  // b.none
  4299c0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4299c4:	mov	w1, #0x48b                 	// #1163
  4299c8:	add	x2, x2, #0x88c
  4299cc:	b	429630 <ferror@plt+0x26060>
  4299d0:	add	x3, x3, #0x1
  4299d4:	ldr	x0, [sp, #136]
  4299d8:	str	x0, [x25, w1, uxtw #3]
  4299dc:	ldrb	w0, [x3]
  4299e0:	cmp	w0, #0x73
  4299e4:	b.eq	429a2c <ferror@plt+0x2645c>  // b.none
  4299e8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4299ec:	mov	w1, #0x496                 	// #1174
  4299f0:	add	x2, x2, #0x88c
  4299f4:	b	429630 <ferror@plt+0x26060>
  4299f8:	ldr	w0, [sp, #128]
  4299fc:	cbz	w0, 429a10 <ferror@plt+0x26440>
  429a00:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429a04:	mov	w1, #0x492                 	// #1170
  429a08:	add	x2, x2, #0x88c
  429a0c:	b	429630 <ferror@plt+0x26060>
  429a10:	add	w23, w23, #0x1
  429a14:	ldr	x0, [sp, #136]
  429a18:	str	x0, [x25, x23, lsl #3]
  429a1c:	ldr	w0, [sp, #120]
  429a20:	add	w0, w0, #0x1
  429a24:	str	w0, [sp, #120]
  429a28:	b	4299dc <ferror@plt+0x2640c>
  429a2c:	ldp	x0, x1, [x26, #24]
  429a30:	cmp	x1, x0
  429a34:	b.ne	429a4c <ferror@plt+0x2647c>  // b.any
  429a38:	mov	x0, x26
  429a3c:	mov	x1, #0x1                   	// #1
  429a40:	str	x3, [sp, #136]
  429a44:	bl	45c22c <_obstack_newchunk@@Base>
  429a48:	ldr	x3, [sp, #136]
  429a4c:	add	x20, x3, #0x1
  429a50:	ldr	x0, [x26, #24]
  429a54:	add	x1, x0, #0x1
  429a58:	str	x1, [x26, #24]
  429a5c:	mov	w1, #0x73                  	// #115
  429a60:	strb	w1, [x0]
  429a64:	ldrb	w2, [x20]
  429a68:	ldp	x1, x0, [x26, #24]
  429a6c:	cbz	w2, 429ae8 <ferror@plt+0x26518>
  429a70:	cmp	x1, x0
  429a74:	b.ne	429a84 <ferror@plt+0x264b4>  // b.any
  429a78:	mov	x0, x26
  429a7c:	mov	x1, #0x1                   	// #1
  429a80:	bl	45c22c <_obstack_newchunk@@Base>
  429a84:	ldr	x0, [x26, #24]
  429a88:	add	w22, w22, #0x2
  429a8c:	add	x1, x0, #0x1
  429a90:	str	x1, [x26, #24]
  429a94:	strb	wzr, [x0]
  429a98:	ldp	x2, x1, [x26, #16]
  429a9c:	cmp	x1, x2
  429aa0:	b.ne	429ab0 <ferror@plt+0x264e0>  // b.any
  429aa4:	ldrb	w0, [x26, #80]
  429aa8:	orr	w0, w0, #0x2
  429aac:	strb	w0, [x26, #80]
  429ab0:	ldr	x0, [x26, #48]
  429ab4:	ldr	x3, [x26, #32]
  429ab8:	add	x1, x1, x0
  429abc:	bic	x0, x1, x0
  429ac0:	ldr	w23, [sp, #120]
  429ac4:	ldr	x1, [x26, #8]
  429ac8:	sub	x4, x0, x1
  429acc:	sub	x1, x3, x1
  429ad0:	cmp	x4, x1
  429ad4:	csel	x0, x0, x3, ls  // ls = plast
  429ad8:	stp	x0, x0, [x26, #16]
  429adc:	ldr	x0, [sp, #152]
  429ae0:	str	x2, [x24, x0]
  429ae4:	b	4295dc <ferror@plt+0x2600c>
  429ae8:	ldr	w22, [sp, #144]
  429aec:	ldp	x0, x1, [x26, #24]
  429af0:	cmp	x1, x0
  429af4:	b.ne	429b04 <ferror@plt+0x26534>  // b.any
  429af8:	mov	x0, x26
  429afc:	mov	x1, #0x1                   	// #1
  429b00:	bl	45c22c <_obstack_newchunk@@Base>
  429b04:	ldr	x0, [x26, #24]
  429b08:	cmp	w22, #0x3b
  429b0c:	add	x1, x0, #0x1
  429b10:	str	x1, [x26, #24]
  429b14:	strb	wzr, [x0]
  429b18:	b.ls	429b2c <ferror@plt+0x2655c>  // b.plast
  429b1c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429b20:	mov	w1, #0x4a4                 	// #1188
  429b24:	add	x2, x2, #0x88c
  429b28:	b	429630 <ferror@plt+0x26060>
  429b2c:	ldp	x2, x1, [x26, #16]
  429b30:	add	w4, w22, #0x1
  429b34:	ubfiz	x22, x22, #3, #32
  429b38:	cmp	x1, x2
  429b3c:	b.ne	429b4c <ferror@plt+0x2657c>  // b.any
  429b40:	ldrb	w0, [x26, #80]
  429b44:	orr	w0, w0, #0x2
  429b48:	strb	w0, [x26, #80]
  429b4c:	ldr	x0, [x26, #48]
  429b50:	adrp	x23, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429b54:	ldr	x3, [x26, #32]
  429b58:	add	x1, x1, x0
  429b5c:	bic	x0, x1, x0
  429b60:	add	x23, x23, #0xeb0
  429b64:	ldr	x1, [x26, #8]
  429b68:	mov	w20, #0x0                   	// #0
  429b6c:	sub	x5, x0, x1
  429b70:	sub	x1, x3, x1
  429b74:	cmp	x5, x1
  429b78:	csel	x0, x0, x3, ls  // ls = plast
  429b7c:	stp	x0, x0, [x26, #16]
  429b80:	ldr	x0, [sp, #112]
  429b84:	str	x2, [x24, x22]
  429b88:	str	xzr, [x24, w4, uxtw #3]
  429b8c:	mov	x22, #0x1                   	// #1
  429b90:	str	x26, [x0, #176]
  429b94:	ldur	x0, [x19, #36]
  429b98:	stur	x22, [x19, #36]
  429b9c:	str	x0, [sp, #120]
  429ba0:	ldr	x28, [x25, w20, uxtw #3]
  429ba4:	cbz	x28, 42a6bc <ferror@plt+0x270ec>
  429ba8:	ldr	x27, [x28]
  429bac:	mov	w6, #0x0                   	// #0
  429bb0:	mov	w5, #0x0                   	// #0
  429bb4:	mov	w4, #0x0                   	// #0
  429bb8:	mov	w24, #0x0                   	// #0
  429bbc:	strb	wzr, [sp, #199]
  429bc0:	ldrb	w0, [x27]
  429bc4:	cmp	w0, #0x6c
  429bc8:	b.eq	429c6c <ferror@plt+0x2669c>  // b.none
  429bcc:	b.hi	429bfc <ferror@plt+0x2662c>  // b.pmore
  429bd0:	cmp	w0, #0x23
  429bd4:	b.eq	429c58 <ferror@plt+0x26688>  // b.none
  429bd8:	cmp	w0, #0x2b
  429bdc:	b.eq	429c44 <ferror@plt+0x26674>  // b.none
  429be0:	cmp	w24, #0x0
  429be4:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  429be8:	b.eq	429ca4 <ferror@plt+0x266d4>  // b.none
  429bec:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429bf0:	mov	w1, #0x4dc                 	// #1244
  429bf4:	add	x2, x2, #0x88c
  429bf8:	b	429630 <ferror@plt+0x26060>
  429bfc:	cmp	w0, #0x71
  429c00:	b.eq	429c20 <ferror@plt+0x26650>  // b.none
  429c04:	cmp	w0, #0x77
  429c08:	b.ne	429be0 <ferror@plt+0x26610>  // b.any
  429c0c:	cbz	w4, 429c9c <ferror@plt+0x266cc>
  429c10:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429c14:	mov	w1, #0x4cf                 	// #1231
  429c18:	add	x2, x2, #0x88c
  429c1c:	b	429630 <ferror@plt+0x26060>
  429c20:	ldrb	w0, [sp, #199]
  429c24:	cbz	w0, 429c38 <ferror@plt+0x26668>
  429c28:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429c2c:	mov	w1, #0x4c0                 	// #1216
  429c30:	add	x2, x2, #0x88c
  429c34:	b	429630 <ferror@plt+0x26060>
  429c38:	strb	w22, [sp, #199]
  429c3c:	add	x27, x27, #0x1
  429c40:	b	429bc0 <ferror@plt+0x265f0>
  429c44:	cbz	w5, 429c8c <ferror@plt+0x266bc>
  429c48:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429c4c:	mov	w1, #0x4c5                 	// #1221
  429c50:	add	x2, x2, #0x88c
  429c54:	b	429630 <ferror@plt+0x26060>
  429c58:	cbz	w6, 429c94 <ferror@plt+0x266c4>
  429c5c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429c60:	mov	w1, #0x4ca                 	// #1226
  429c64:	add	x2, x2, #0x88c
  429c68:	b	429630 <ferror@plt+0x26060>
  429c6c:	cmp	w24, #0x1
  429c70:	b.le	429c84 <ferror@plt+0x266b4>
  429c74:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429c78:	mov	w1, #0x4d5                 	// #1237
  429c7c:	add	x2, x2, #0x88c
  429c80:	b	429630 <ferror@plt+0x26060>
  429c84:	add	w24, w24, #0x1
  429c88:	b	429c3c <ferror@plt+0x2666c>
  429c8c:	mov	w5, #0x1                   	// #1
  429c90:	b	429c3c <ferror@plt+0x2666c>
  429c94:	mov	w6, #0x1                   	// #1
  429c98:	b	429c3c <ferror@plt+0x2666c>
  429c9c:	mov	w4, #0x1                   	// #1
  429ca0:	b	429c3c <ferror@plt+0x2666c>
  429ca4:	ldrb	w0, [sp, #199]
  429ca8:	cbz	w0, 429cd0 <ferror@plt+0x26700>
  429cac:	ldrb	w1, [x19, #67]
  429cb0:	mov	x0, x19
  429cb4:	str	w4, [sp, #128]
  429cb8:	str	w6, [sp, #136]
  429cbc:	str	w5, [sp, #184]
  429cc0:	bl	42946c <ferror@plt+0x25e9c>
  429cc4:	ldr	w4, [sp, #128]
  429cc8:	ldr	w6, [sp, #136]
  429ccc:	ldr	w5, [sp, #184]
  429cd0:	ldrb	w0, [x27]
  429cd4:	cmp	w0, #0x2e
  429cd8:	b.eq	42a52c <ferror@plt+0x26f5c>  // b.none
  429cdc:	sub	w0, w0, #0x5a
  429ce0:	and	w1, w0, #0xff
  429ce4:	cmp	w1, #0x1e
  429ce8:	b.hi	42a670 <ferror@plt+0x270a0>  // b.pmore
  429cec:	cmp	w0, #0x1e
  429cf0:	b.hi	42a670 <ferror@plt+0x270a0>  // b.pmore
  429cf4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429cf8:	add	x1, x1, #0x8d4
  429cfc:	ldrh	w0, [x1, w0, uxtw #1]
  429d00:	adr	x1, 429d0c <ferror@plt+0x2673c>
  429d04:	add	x0, x1, w0, sxth #2
  429d08:	br	x0
  429d0c:	ldr	x2, [x21, #8]
  429d10:	ldrb	w0, [x19, #67]
  429d14:	ldr	w3, [x2, #24]
  429d18:	ldr	x1, [x2]
  429d1c:	tbnz	w3, #31, 429d44 <ferror@plt+0x26774>
  429d20:	add	x3, x1, #0xf
  429d24:	and	x3, x3, #0xfffffffffffffff8
  429d28:	str	x3, [x2]
  429d2c:	ldr	x1, [x1]
  429d30:	bl	423228 <ferror@plt+0x1fc58>
  429d34:	mov	x1, x0
  429d38:	mov	x0, x19
  429d3c:	bl	4292a8 <ferror@plt+0x25cd8>
  429d40:	b	429da4 <ferror@plt+0x267d4>
  429d44:	add	w4, w3, #0x8
  429d48:	str	w4, [x2, #24]
  429d4c:	cmp	w4, #0x0
  429d50:	b.gt	429d20 <ferror@plt+0x26750>
  429d54:	ldr	x1, [x2, #8]
  429d58:	add	x1, x1, w3, sxtw
  429d5c:	b	429d2c <ferror@plt+0x2675c>
  429d60:	ldr	x1, [x21, #8]
  429d64:	ldr	w2, [x1, #24]
  429d68:	ldr	x0, [x1]
  429d6c:	tbnz	w2, #31, 429e30 <ferror@plt+0x26860>
  429d70:	add	x2, x0, #0xb
  429d74:	and	x2, x2, #0xfffffffffffffff8
  429d78:	str	x2, [x1]
  429d7c:	ldr	w1, [x0]
  429d80:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  429d84:	add	x0, x0, #0x228
  429d88:	and	x2, x1, #0xff
  429d8c:	ldrh	w0, [x0, x2, lsl #1]
  429d90:	tbnz	w0, #4, 429d9c <ferror@plt+0x267cc>
  429d94:	ldrb	w0, [sp, #199]
  429d98:	cbnz	w0, 429e4c <ferror@plt+0x2687c>
  429d9c:	mov	x0, x19
  429da0:	bl	428efc <ferror@plt+0x2592c>
  429da4:	ldrb	w0, [sp, #199]
  429da8:	cbz	w0, 429db8 <ferror@plt+0x267e8>
  429dac:	ldrb	w1, [x19, #67]
  429db0:	mov	x0, x19
  429db4:	bl	4294b0 <ferror@plt+0x25ee0>
  429db8:	ldp	x0, x1, [x26, #24]
  429dbc:	cmp	x1, x0
  429dc0:	b.ne	429dd0 <ferror@plt+0x26800>  // b.any
  429dc4:	mov	x0, x26
  429dc8:	mov	x1, #0x1                   	// #1
  429dcc:	bl	45c22c <_obstack_newchunk@@Base>
  429dd0:	ldr	x0, [x26, #24]
  429dd4:	ldr	x4, [x25, w20, uxtw #3]
  429dd8:	add	x1, x0, #0x1
  429ddc:	str	x1, [x26, #24]
  429de0:	strb	wzr, [x0]
  429de4:	ldp	x2, x1, [x26, #16]
  429de8:	cmp	x1, x2
  429dec:	b.ne	429dfc <ferror@plt+0x2682c>  // b.any
  429df0:	ldrb	w0, [x26, #80]
  429df4:	orr	w0, w0, #0x2
  429df8:	strb	w0, [x26, #80]
  429dfc:	ldr	x0, [x26, #48]
  429e00:	add	w20, w20, #0x1
  429e04:	ldr	x3, [x26, #32]
  429e08:	add	x1, x1, x0
  429e0c:	bic	x0, x1, x0
  429e10:	ldr	x1, [x26, #8]
  429e14:	sub	x5, x0, x1
  429e18:	sub	x1, x3, x1
  429e1c:	cmp	x5, x1
  429e20:	csel	x0, x0, x3, ls  // ls = plast
  429e24:	stp	x0, x0, [x26, #16]
  429e28:	str	x2, [x4]
  429e2c:	b	429ba0 <ferror@plt+0x265d0>
  429e30:	add	w3, w2, #0x8
  429e34:	str	w3, [x1, #24]
  429e38:	cmp	w3, #0x0
  429e3c:	b.gt	429d70 <ferror@plt+0x267a0>
  429e40:	ldr	x0, [x1, #8]
  429e44:	add	x0, x0, w2, sxtw
  429e48:	b	429d7c <ferror@plt+0x267ac>
  429e4c:	strb	w1, [sp, #200]
  429e50:	add	x1, sp, #0xc8
  429e54:	mov	x2, #0x1                   	// #1
  429e58:	strb	wzr, [sp, #201]
  429e5c:	mov	x0, x19
  429e60:	bl	4291d8 <ferror@plt+0x25c08>
  429e64:	b	429da4 <ferror@plt+0x267d4>
  429e68:	cbz	w4, 429eb4 <ferror@plt+0x268e4>
  429e6c:	ldr	x1, [x21, #8]
  429e70:	ldr	w2, [x1, #24]
  429e74:	ldr	x0, [x1]
  429e78:	tbnz	w2, #31, 429e98 <ferror@plt+0x268c8>
  429e7c:	add	x2, x0, #0xf
  429e80:	and	x2, x2, #0xfffffffffffffff8
  429e84:	str	x2, [x1]
  429e88:	ldr	x1, [x0]
  429e8c:	mov	x0, x19
  429e90:	bl	42ac10 <ferror@plt+0x27640>
  429e94:	b	429da4 <ferror@plt+0x267d4>
  429e98:	add	w3, w2, #0x8
  429e9c:	str	w3, [x1, #24]
  429ea0:	cmp	w3, #0x0
  429ea4:	b.gt	429e7c <ferror@plt+0x268ac>
  429ea8:	ldr	x0, [x1, #8]
  429eac:	add	x0, x0, w2, sxtw
  429eb0:	b	429e88 <ferror@plt+0x268b8>
  429eb4:	cmp	w24, #0x1
  429eb8:	b.eq	429f1c <ferror@plt+0x2694c>  // b.none
  429ebc:	cmp	w24, #0x2
  429ec0:	b.eq	429f78 <ferror@plt+0x269a8>  // b.none
  429ec4:	cbnz	w24, 429da4 <ferror@plt+0x267d4>
  429ec8:	ldr	x2, [x21, #8]
  429ecc:	ldr	x0, [x19, #8]
  429ed0:	ldr	w3, [x2, #24]
  429ed4:	add	x0, x0, #0xcc
  429ed8:	ldr	x1, [x2]
  429edc:	tbnz	w3, #31, 429f00 <ferror@plt+0x26930>
  429ee0:	add	x3, x1, #0xb
  429ee4:	and	x3, x3, #0xfffffffffffffff8
  429ee8:	str	x3, [x2]
  429eec:	ldr	w2, [x1]
  429ef0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429ef4:	add	x1, x1, #0xe23
  429ef8:	bl	402e00 <sprintf@plt>
  429efc:	b	429f50 <ferror@plt+0x26980>
  429f00:	add	w4, w3, #0x8
  429f04:	str	w4, [x2, #24]
  429f08:	cmp	w4, #0x0
  429f0c:	b.gt	429ee0 <ferror@plt+0x26910>
  429f10:	ldr	x1, [x2, #8]
  429f14:	add	x1, x1, w3, sxtw
  429f18:	b	429eec <ferror@plt+0x2691c>
  429f1c:	ldr	x2, [x21, #8]
  429f20:	ldr	x0, [x19, #8]
  429f24:	ldr	w3, [x2, #24]
  429f28:	add	x0, x0, #0xcc
  429f2c:	ldr	x1, [x2]
  429f30:	tbnz	w3, #31, 429f5c <ferror@plt+0x2698c>
  429f34:	add	x3, x1, #0xf
  429f38:	and	x3, x3, #0xfffffffffffffff8
  429f3c:	str	x3, [x2]
  429f40:	ldr	x2, [x1]
  429f44:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429f48:	add	x1, x1, #0x8cd
  429f4c:	bl	402e00 <sprintf@plt>
  429f50:	ldr	x1, [x19, #8]
  429f54:	add	x1, x1, #0xcc
  429f58:	b	429d38 <ferror@plt+0x26768>
  429f5c:	add	w4, w3, #0x8
  429f60:	str	w4, [x2, #24]
  429f64:	cmp	w4, #0x0
  429f68:	b.gt	429f34 <ferror@plt+0x26964>
  429f6c:	ldr	x1, [x2, #8]
  429f70:	add	x1, x1, w3, sxtw
  429f74:	b	429f40 <ferror@plt+0x26970>
  429f78:	ldr	x2, [x21, #8]
  429f7c:	ldr	x0, [x19, #8]
  429f80:	ldr	w3, [x2, #24]
  429f84:	add	x0, x0, #0xcc
  429f88:	ldr	x1, [x2]
  429f8c:	tbnz	w3, #31, 429fac <ferror@plt+0x269dc>
  429f90:	add	x3, x1, #0xf
  429f94:	and	x3, x3, #0xfffffffffffffff8
  429f98:	str	x3, [x2]
  429f9c:	ldr	x2, [x1]
  429fa0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429fa4:	add	x1, x1, #0x89c
  429fa8:	b	429f4c <ferror@plt+0x2697c>
  429fac:	add	w4, w3, #0x8
  429fb0:	str	w4, [x2, #24]
  429fb4:	cmp	w4, #0x0
  429fb8:	b.gt	429f90 <ferror@plt+0x269c0>
  429fbc:	ldr	x1, [x2, #8]
  429fc0:	add	x1, x1, w3, sxtw
  429fc4:	b	429f9c <ferror@plt+0x269cc>
  429fc8:	cbz	w4, 42a000 <ferror@plt+0x26a30>
  429fcc:	ldr	x2, [x21, #8]
  429fd0:	ldr	x0, [x19, #8]
  429fd4:	ldr	w3, [x2, #24]
  429fd8:	add	x0, x0, #0xcc
  429fdc:	ldr	x1, [x2]
  429fe0:	tbnz	w3, #31, 42a064 <ferror@plt+0x26a94>
  429fe4:	add	x3, x1, #0xf
  429fe8:	and	x3, x3, #0xfffffffffffffff8
  429fec:	str	x3, [x2]
  429ff0:	ldr	x2, [x1]
  429ff4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  429ff8:	add	x1, x1, #0x8a1
  429ffc:	b	429f4c <ferror@plt+0x2697c>
  42a000:	cmp	w24, #0x1
  42a004:	b.eq	429fcc <ferror@plt+0x269fc>  // b.none
  42a008:	cmp	w24, #0x2
  42a00c:	b.eq	42a080 <ferror@plt+0x26ab0>  // b.none
  42a010:	cbnz	w24, 429da4 <ferror@plt+0x267d4>
  42a014:	ldr	x2, [x21, #8]
  42a018:	ldr	x0, [x19, #8]
  42a01c:	ldr	w3, [x2, #24]
  42a020:	add	x0, x0, #0xcc
  42a024:	ldr	x1, [x2]
  42a028:	tbnz	w3, #31, 42a048 <ferror@plt+0x26a78>
  42a02c:	add	x3, x1, #0xb
  42a030:	and	x3, x3, #0xfffffffffffffff8
  42a034:	str	x3, [x2]
  42a038:	ldr	w2, [x1]
  42a03c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a040:	add	x1, x1, #0x3d
  42a044:	b	429ef8 <ferror@plt+0x26928>
  42a048:	add	w4, w3, #0x8
  42a04c:	str	w4, [x2, #24]
  42a050:	cmp	w4, #0x0
  42a054:	b.gt	42a02c <ferror@plt+0x26a5c>
  42a058:	ldr	x1, [x2, #8]
  42a05c:	add	x1, x1, w3, sxtw
  42a060:	b	42a038 <ferror@plt+0x26a68>
  42a064:	add	w4, w3, #0x8
  42a068:	str	w4, [x2, #24]
  42a06c:	cmp	w4, #0x0
  42a070:	b.gt	429fe4 <ferror@plt+0x26a14>
  42a074:	ldr	x1, [x2, #8]
  42a078:	add	x1, x1, w3, sxtw
  42a07c:	b	429ff0 <ferror@plt+0x26a20>
  42a080:	ldr	x2, [x21, #8]
  42a084:	ldr	x0, [x19, #8]
  42a088:	ldr	w3, [x2, #24]
  42a08c:	add	x0, x0, #0xcc
  42a090:	ldr	x1, [x2]
  42a094:	tbnz	w3, #31, 42a0b4 <ferror@plt+0x26ae4>
  42a098:	add	x3, x1, #0xf
  42a09c:	and	x3, x3, #0xfffffffffffffff8
  42a0a0:	str	x3, [x2]
  42a0a4:	ldr	x2, [x1]
  42a0a8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a0ac:	add	x1, x1, #0x8a5
  42a0b0:	b	429f4c <ferror@plt+0x2697c>
  42a0b4:	add	w4, w3, #0x8
  42a0b8:	str	w4, [x2, #24]
  42a0bc:	cmp	w4, #0x0
  42a0c0:	b.gt	42a098 <ferror@plt+0x26ac8>
  42a0c4:	ldr	x1, [x2, #8]
  42a0c8:	add	x1, x1, w3, sxtw
  42a0cc:	b	42a0a4 <ferror@plt+0x26ad4>
  42a0d0:	ldrb	w3, [sp, #199]
  42a0d4:	ldr	x1, [x21, #8]
  42a0d8:	ldr	w2, [x1, #24]
  42a0dc:	ldr	x0, [x1]
  42a0e0:	cbz	w3, 42a11c <ferror@plt+0x26b4c>
  42a0e4:	tbnz	w2, #31, 42a100 <ferror@plt+0x26b30>
  42a0e8:	add	x2, x0, #0xf
  42a0ec:	and	x2, x2, #0xfffffffffffffff8
  42a0f0:	str	x2, [x1]
  42a0f4:	mov	x2, #0xffffffffffffffff    	// #-1
  42a0f8:	ldr	x1, [x0]
  42a0fc:	b	429e5c <ferror@plt+0x2688c>
  42a100:	add	w3, w2, #0x8
  42a104:	str	w3, [x1, #24]
  42a108:	cmp	w3, #0x0
  42a10c:	b.gt	42a0e8 <ferror@plt+0x26b18>
  42a110:	ldr	x0, [x1, #8]
  42a114:	add	x0, x0, w2, sxtw
  42a118:	b	42a0f4 <ferror@plt+0x26b24>
  42a11c:	tbnz	w2, #31, 42a134 <ferror@plt+0x26b64>
  42a120:	add	x2, x0, #0xf
  42a124:	and	x2, x2, #0xfffffffffffffff8
  42a128:	str	x2, [x1]
  42a12c:	ldr	x1, [x0]
  42a130:	b	429d38 <ferror@plt+0x26768>
  42a134:	add	w3, w2, #0x8
  42a138:	str	w3, [x1, #24]
  42a13c:	cmp	w3, #0x0
  42a140:	b.gt	42a120 <ferror@plt+0x26b50>
  42a144:	ldr	x0, [x1, #8]
  42a148:	add	x0, x0, w2, sxtw
  42a14c:	b	42a12c <ferror@plt+0x26b5c>
  42a150:	ldr	x2, [x21, #8]
  42a154:	ldr	x0, [x19, #8]
  42a158:	ldr	w3, [x2, #24]
  42a15c:	add	x0, x0, #0xcc
  42a160:	ldr	x1, [x2]
  42a164:	tbnz	w3, #31, 42a184 <ferror@plt+0x26bb4>
  42a168:	add	x3, x1, #0xf
  42a16c:	and	x3, x3, #0xfffffffffffffff8
  42a170:	str	x3, [x2]
  42a174:	ldr	x2, [x1]
  42a178:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a17c:	add	x1, x1, #0x8aa
  42a180:	b	429f4c <ferror@plt+0x2697c>
  42a184:	add	w4, w3, #0x8
  42a188:	str	w4, [x2, #24]
  42a18c:	cmp	w4, #0x0
  42a190:	b.gt	42a168 <ferror@plt+0x26b98>
  42a194:	ldr	x1, [x2, #8]
  42a198:	add	x1, x1, w3, sxtw
  42a19c:	b	42a174 <ferror@plt+0x26ba4>
  42a1a0:	cbz	w4, 42a1cc <ferror@plt+0x26bfc>
  42a1a4:	ldr	x2, [x21, #8]
  42a1a8:	ldr	x0, [x19, #8]
  42a1ac:	ldr	w3, [x2, #24]
  42a1b0:	add	x0, x0, #0xcc
  42a1b4:	ldr	x1, [x2]
  42a1b8:	tbnz	w3, #31, 42a230 <ferror@plt+0x26c60>
  42a1bc:	add	x3, x1, #0xf
  42a1c0:	and	x3, x3, #0xfffffffffffffff8
  42a1c4:	str	x3, [x2]
  42a1c8:	b	42a248 <ferror@plt+0x26c78>
  42a1cc:	cmp	w24, #0x1
  42a1d0:	b.eq	42a1a4 <ferror@plt+0x26bd4>  // b.none
  42a1d4:	cmp	w24, #0x2
  42a1d8:	b.eq	42a258 <ferror@plt+0x26c88>  // b.none
  42a1dc:	cbnz	w24, 429da4 <ferror@plt+0x267d4>
  42a1e0:	ldr	x2, [x21, #8]
  42a1e4:	ldr	x0, [x19, #8]
  42a1e8:	ldr	w3, [x2, #24]
  42a1ec:	add	x0, x0, #0xcc
  42a1f0:	ldr	x1, [x2]
  42a1f4:	tbnz	w3, #31, 42a214 <ferror@plt+0x26c44>
  42a1f8:	add	x3, x1, #0xb
  42a1fc:	and	x3, x3, #0xfffffffffffffff8
  42a200:	str	x3, [x2]
  42a204:	ldr	w2, [x1]
  42a208:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a20c:	add	x1, x1, #0xf6c
  42a210:	b	429ef8 <ferror@plt+0x26928>
  42a214:	add	w4, w3, #0x8
  42a218:	str	w4, [x2, #24]
  42a21c:	cmp	w4, #0x0
  42a220:	b.gt	42a1f8 <ferror@plt+0x26c28>
  42a224:	ldr	x1, [x2, #8]
  42a228:	add	x1, x1, w3, sxtw
  42a22c:	b	42a204 <ferror@plt+0x26c34>
  42a230:	add	w4, w3, #0x8
  42a234:	str	w4, [x2, #24]
  42a238:	cmp	w4, #0x0
  42a23c:	b.gt	42a1bc <ferror@plt+0x26bec>
  42a240:	ldr	x1, [x2, #8]
  42a244:	add	x1, x1, w3, sxtw
  42a248:	ldr	x2, [x1]
  42a24c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a250:	add	x1, x1, #0x8ad
  42a254:	b	429f4c <ferror@plt+0x2697c>
  42a258:	ldr	x2, [x21, #8]
  42a25c:	ldr	x0, [x19, #8]
  42a260:	ldr	w3, [x2, #24]
  42a264:	add	x0, x0, #0xcc
  42a268:	ldr	x1, [x2]
  42a26c:	tbnz	w3, #31, 42a28c <ferror@plt+0x26cbc>
  42a270:	add	x3, x1, #0xf
  42a274:	and	x3, x3, #0xfffffffffffffff8
  42a278:	str	x3, [x2]
  42a27c:	ldr	x2, [x1]
  42a280:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  42a284:	add	x1, x1, #0xb99
  42a288:	b	429f4c <ferror@plt+0x2697c>
  42a28c:	add	w4, w3, #0x8
  42a290:	str	w4, [x2, #24]
  42a294:	cmp	w4, #0x0
  42a298:	b.gt	42a270 <ferror@plt+0x26ca0>
  42a29c:	ldr	x1, [x2, #8]
  42a2a0:	add	x1, x1, w3, sxtw
  42a2a4:	b	42a27c <ferror@plt+0x26cac>
  42a2a8:	ldr	x2, [x21, #8]
  42a2ac:	ldr	x0, [x19, #8]
  42a2b0:	ldr	w3, [x2, #28]
  42a2b4:	add	x0, x0, #0xcc
  42a2b8:	ldr	x1, [x2]
  42a2bc:	tbnz	w3, #31, 42a2e0 <ferror@plt+0x26d10>
  42a2c0:	add	x3, x1, #0xf
  42a2c4:	and	x3, x3, #0xfffffffffffffff8
  42a2c8:	str	x3, [x2]
  42a2cc:	ldr	d0, [x1]
  42a2d0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a2d4:	add	x1, x1, #0x8b1
  42a2d8:	bl	402e00 <sprintf@plt>
  42a2dc:	b	429f50 <ferror@plt+0x26980>
  42a2e0:	add	w4, w3, #0x10
  42a2e4:	str	w4, [x2, #28]
  42a2e8:	cmp	w4, #0x0
  42a2ec:	b.gt	42a2c0 <ferror@plt+0x26cf0>
  42a2f0:	ldr	x1, [x2, #16]
  42a2f4:	add	x1, x1, w3, sxtw
  42a2f8:	b	42a2cc <ferror@plt+0x26cfc>
  42a2fc:	ldr	x0, [x21, #8]
  42a300:	ldr	w2, [x0, #24]
  42a304:	ldr	x1, [x0]
  42a308:	tbnz	w2, #31, 42a39c <ferror@plt+0x26dcc>
  42a30c:	add	x2, x1, #0xf
  42a310:	and	x2, x2, #0xfffffffffffffff8
  42a314:	str	x2, [x0]
  42a318:	ldr	w2, [x0, #24]
  42a31c:	ldr	x1, [x1]
  42a320:	str	x1, [sp, #128]
  42a324:	ldr	x1, [x0]
  42a328:	tbnz	w2, #31, 42a3b8 <ferror@plt+0x26de8>
  42a32c:	add	x2, x1, #0xb
  42a330:	and	x2, x2, #0xfffffffffffffff8
  42a334:	str	x2, [x0]
  42a338:	ldr	w24, [x1]
  42a33c:	mov	x27, #0x0                   	// #0
  42a340:	sub	w28, w24, #0x1
  42a344:	cmp	w24, w27
  42a348:	b.ls	429da4 <ferror@plt+0x267d4>  // b.plast
  42a34c:	ldr	x1, [sp, #128]
  42a350:	ldr	x0, [x19, #8]
  42a354:	ldr	w2, [x1, x27, lsl #2]
  42a358:	mov	x1, x23
  42a35c:	add	x0, x0, #0xcc
  42a360:	bl	402e00 <sprintf@plt>
  42a364:	ldr	x1, [x19, #8]
  42a368:	mov	x0, x19
  42a36c:	add	x1, x1, #0xcc
  42a370:	bl	4292a8 <ferror@plt+0x25cd8>
  42a374:	cmp	w28, w27
  42a378:	b.ls	42a394 <ferror@plt+0x26dc4>  // b.plast
  42a37c:	mov	x0, x19
  42a380:	mov	w1, #0x2c                  	// #44
  42a384:	bl	428efc <ferror@plt+0x2592c>
  42a388:	mov	x0, x19
  42a38c:	mov	w1, #0x20                  	// #32
  42a390:	bl	428efc <ferror@plt+0x2592c>
  42a394:	add	x27, x27, #0x1
  42a398:	b	42a344 <ferror@plt+0x26d74>
  42a39c:	add	w3, w2, #0x8
  42a3a0:	str	w3, [x0, #24]
  42a3a4:	cmp	w3, #0x0
  42a3a8:	b.gt	42a30c <ferror@plt+0x26d3c>
  42a3ac:	ldr	x1, [x0, #8]
  42a3b0:	add	x1, x1, w2, sxtw
  42a3b4:	b	42a318 <ferror@plt+0x26d48>
  42a3b8:	add	w3, w2, #0x8
  42a3bc:	str	w3, [x0, #24]
  42a3c0:	cmp	w3, #0x0
  42a3c4:	b.gt	42a32c <ferror@plt+0x26d5c>
  42a3c8:	ldr	x1, [x0, #8]
  42a3cc:	add	x1, x1, w2, sxtw
  42a3d0:	b	42a338 <ferror@plt+0x26d68>
  42a3d4:	cbz	w4, 42a428 <ferror@plt+0x26e58>
  42a3d8:	ldr	x2, [x21, #8]
  42a3dc:	ldr	x0, [x19, #8]
  42a3e0:	ldr	w3, [x2, #24]
  42a3e4:	add	x0, x0, #0xcc
  42a3e8:	ldr	x1, [x2]
  42a3ec:	tbnz	w3, #31, 42a40c <ferror@plt+0x26e3c>
  42a3f0:	add	x3, x1, #0xf
  42a3f4:	and	x3, x3, #0xfffffffffffffff8
  42a3f8:	str	x3, [x2]
  42a3fc:	ldr	x2, [x1]
  42a400:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  42a404:	add	x1, x1, #0x5b2
  42a408:	b	429f4c <ferror@plt+0x2697c>
  42a40c:	add	w4, w3, #0x8
  42a410:	str	w4, [x2, #24]
  42a414:	cmp	w4, #0x0
  42a418:	b.gt	42a3f0 <ferror@plt+0x26e20>
  42a41c:	ldr	x1, [x2, #8]
  42a420:	add	x1, x1, w3, sxtw
  42a424:	b	42a3fc <ferror@plt+0x26e2c>
  42a428:	cmp	w24, #0x1
  42a42c:	b.eq	42a48c <ferror@plt+0x26ebc>  // b.none
  42a430:	cmp	w24, #0x2
  42a434:	b.eq	42a4dc <ferror@plt+0x26f0c>  // b.none
  42a438:	cbnz	w24, 429da4 <ferror@plt+0x267d4>
  42a43c:	ldr	x2, [x21, #8]
  42a440:	ldr	x0, [x19, #8]
  42a444:	ldr	w3, [x2, #24]
  42a448:	add	x0, x0, #0xcc
  42a44c:	ldr	x1, [x2]
  42a450:	tbnz	w3, #31, 42a470 <ferror@plt+0x26ea0>
  42a454:	add	x3, x1, #0xb
  42a458:	and	x3, x3, #0xfffffffffffffff8
  42a45c:	str	x3, [x2]
  42a460:	ldr	w2, [x1]
  42a464:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a468:	add	x1, x1, #0x8b4
  42a46c:	b	429ef8 <ferror@plt+0x26928>
  42a470:	add	w4, w3, #0x8
  42a474:	str	w4, [x2, #24]
  42a478:	cmp	w4, #0x0
  42a47c:	b.gt	42a454 <ferror@plt+0x26e84>
  42a480:	ldr	x1, [x2, #8]
  42a484:	add	x1, x1, w3, sxtw
  42a488:	b	42a460 <ferror@plt+0x26e90>
  42a48c:	ldr	x2, [x21, #8]
  42a490:	ldr	x0, [x19, #8]
  42a494:	ldr	w3, [x2, #24]
  42a498:	add	x0, x0, #0xcc
  42a49c:	ldr	x1, [x2]
  42a4a0:	tbnz	w3, #31, 42a4c0 <ferror@plt+0x26ef0>
  42a4a4:	add	x3, x1, #0xf
  42a4a8:	and	x3, x3, #0xfffffffffffffff8
  42a4ac:	str	x3, [x2]
  42a4b0:	ldr	x2, [x1]
  42a4b4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a4b8:	add	x1, x1, #0x8b7
  42a4bc:	b	429f4c <ferror@plt+0x2697c>
  42a4c0:	add	w4, w3, #0x8
  42a4c4:	str	w4, [x2, #24]
  42a4c8:	cmp	w4, #0x0
  42a4cc:	b.gt	42a4a4 <ferror@plt+0x26ed4>
  42a4d0:	ldr	x1, [x2, #8]
  42a4d4:	add	x1, x1, w3, sxtw
  42a4d8:	b	42a4b0 <ferror@plt+0x26ee0>
  42a4dc:	ldr	x2, [x21, #8]
  42a4e0:	ldr	x0, [x19, #8]
  42a4e4:	ldr	w3, [x2, #24]
  42a4e8:	add	x0, x0, #0xcc
  42a4ec:	ldr	x1, [x2]
  42a4f0:	tbnz	w3, #31, 42a510 <ferror@plt+0x26f40>
  42a4f4:	add	x3, x1, #0xf
  42a4f8:	and	x3, x3, #0xfffffffffffffff8
  42a4fc:	str	x3, [x2]
  42a500:	ldr	x2, [x1]
  42a504:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a508:	add	x1, x1, #0x8bb
  42a50c:	b	429f4c <ferror@plt+0x2697c>
  42a510:	add	w4, w3, #0x8
  42a514:	str	w4, [x2, #24]
  42a518:	cmp	w4, #0x0
  42a51c:	b.gt	42a4f4 <ferror@plt+0x26f24>
  42a520:	ldr	x1, [x2, #8]
  42a524:	add	x1, x1, w3, sxtw
  42a528:	b	42a500 <ferror@plt+0x26f30>
  42a52c:	ldrb	w2, [x27, #1]
  42a530:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  42a534:	add	x0, x0, #0x228
  42a538:	ldrb	w1, [x27, #1]
  42a53c:	ldrh	w0, [x0, x2, lsl #1]
  42a540:	tbz	w0, #2, 42a574 <ferror@plt+0x26fa4>
  42a544:	add	x1, sp, #0xc8
  42a548:	add	x0, x27, #0x1
  42a54c:	mov	w2, #0xa                   	// #10
  42a550:	bl	402d40 <strtoul@plt>
  42a554:	ldr	x1, [sp, #200]
  42a558:	ldrb	w1, [x1]
  42a55c:	cmp	w1, #0x73
  42a560:	b.eq	42a604 <ferror@plt+0x27034>  // b.none
  42a564:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a568:	mov	w1, #0x54b                 	// #1355
  42a56c:	add	x2, x2, #0x88c
  42a570:	b	429630 <ferror@plt+0x26060>
  42a574:	cmp	w1, #0x2a
  42a578:	b.eq	42a58c <ferror@plt+0x26fbc>  // b.none
  42a57c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a580:	mov	w1, #0x54f                 	// #1359
  42a584:	add	x2, x2, #0x88c
  42a588:	b	429630 <ferror@plt+0x26060>
  42a58c:	ldrb	w0, [x27, #2]
  42a590:	cmp	w0, #0x73
  42a594:	b.eq	42a5a8 <ferror@plt+0x26fd8>  // b.none
  42a598:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a59c:	mov	w1, #0x551                 	// #1361
  42a5a0:	add	x2, x2, #0x88c
  42a5a4:	b	429630 <ferror@plt+0x26060>
  42a5a8:	ldr	x1, [x21, #8]
  42a5ac:	ldr	w2, [x1, #24]
  42a5b0:	ldr	x0, [x1]
  42a5b4:	tbnz	w2, #31, 42a5e8 <ferror@plt+0x27018>
  42a5b8:	add	x2, x0, #0xb
  42a5bc:	and	x2, x2, #0xfffffffffffffff8
  42a5c0:	str	x2, [x1]
  42a5c4:	add	w20, w20, #0x1
  42a5c8:	ldr	w0, [x0]
  42a5cc:	ldr	x1, [x25, w20, uxtw #3]
  42a5d0:	cmp	x28, x1
  42a5d4:	b.eq	42a604 <ferror@plt+0x27034>  // b.none
  42a5d8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a5dc:	mov	w1, #0x555                 	// #1365
  42a5e0:	add	x2, x2, #0x88c
  42a5e4:	b	429630 <ferror@plt+0x26060>
  42a5e8:	add	w3, w2, #0x8
  42a5ec:	str	w3, [x1, #24]
  42a5f0:	cmp	w3, #0x0
  42a5f4:	b.gt	42a5b8 <ferror@plt+0x26fe8>
  42a5f8:	ldr	x0, [x1, #8]
  42a5fc:	add	x0, x0, w2, sxtw
  42a600:	b	42a5c4 <ferror@plt+0x26ff4>
  42a604:	ldr	x3, [x21, #8]
  42a608:	ldr	w1, [x3, #24]
  42a60c:	ldr	x2, [x3]
  42a610:	tbnz	w1, #31, 42a644 <ferror@plt+0x27074>
  42a614:	add	x1, x2, #0xf
  42a618:	and	x1, x1, #0xfffffffffffffff8
  42a61c:	str	x1, [x3]
  42a620:	ldr	x24, [x2]
  42a624:	tbz	w0, #31, 42a660 <ferror@plt+0x27090>
  42a628:	mov	x0, x24
  42a62c:	bl	402d50 <strlen@plt>
  42a630:	add	x2, x24, x0
  42a634:	mov	x1, x24
  42a638:	mov	x0, x19
  42a63c:	bl	429064 <ferror@plt+0x25a94>
  42a640:	b	429da4 <ferror@plt+0x267d4>
  42a644:	add	w4, w1, #0x8
  42a648:	str	w4, [x3, #24]
  42a64c:	cmp	w4, #0x0
  42a650:	b.gt	42a614 <ferror@plt+0x27044>
  42a654:	ldr	x2, [x3, #8]
  42a658:	add	x2, x2, w1, sxtw
  42a65c:	b	42a620 <ferror@plt+0x27050>
  42a660:	sxtw	x1, w0
  42a664:	mov	x0, x24
  42a668:	bl	402da0 <strnlen@plt>
  42a66c:	b	42a630 <ferror@plt+0x27060>
  42a670:	ldr	x9, [x19, #48]
  42a674:	cbnz	x9, 42a688 <ferror@plt+0x270b8>
  42a678:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a67c:	mov	w1, #0x56d                 	// #1389
  42a680:	add	x2, x2, #0x88c
  42a684:	b	429630 <ferror@plt+0x26060>
  42a688:	str	x28, [sp]
  42a68c:	add	x7, sp, #0xc7
  42a690:	mov	w3, w24
  42a694:	mov	x2, x27
  42a698:	mov	x1, x21
  42a69c:	mov	x0, x19
  42a6a0:	blr	x9
  42a6a4:	tst	w0, #0xff
  42a6a8:	b.ne	429da4 <ferror@plt+0x267d4>  // b.any
  42a6ac:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a6b0:	mov	w1, #0x571                 	// #1393
  42a6b4:	add	x2, x2, #0x88c
  42a6b8:	b	429630 <ferror@plt+0x26060>
  42a6bc:	ldr	x0, [x19, #56]
  42a6c0:	cbz	x0, 42a6d4 <ferror@plt+0x27104>
  42a6c4:	ldr	x1, [x0]
  42a6c8:	ldr	x2, [x1, #16]
  42a6cc:	mov	x1, x19
  42a6d0:	blr	x2
  42a6d4:	ldr	x0, [sp, #112]
  42a6d8:	ldp	x29, x30, [sp, #16]
  42a6dc:	ldp	x21, x22, [sp, #48]
  42a6e0:	ldp	x23, x24, [sp, #64]
  42a6e4:	ldp	x25, x26, [sp, #80]
  42a6e8:	ldp	x27, x28, [sp, #96]
  42a6ec:	str	x0, [x0, #176]
  42a6f0:	str	wzr, [x0, #200]
  42a6f4:	ldr	x0, [sp, #120]
  42a6f8:	str	wzr, [x19, #32]
  42a6fc:	stur	x0, [x19, #36]
  42a700:	strb	wzr, [x19, #64]
  42a704:	ldp	x19, x20, [sp, #32]
  42a708:	add	sp, sp, #0x1c0
  42a70c:	ret
  42a710:	ldrb	w0, [x20, #1]
  42a714:	cmp	w0, #0x3e
  42a718:	b.eq	429670 <ferror@plt+0x260a0>  // b.none
  42a71c:	b.hi	42a80c <ferror@plt+0x2723c>  // b.pmore
  42a720:	cmp	w0, #0x27
  42a724:	b.eq	4296bc <ferror@plt+0x260ec>  // b.none
  42a728:	b.hi	42a778 <ferror@plt+0x271a8>  // b.pmore
  42a72c:	cbz	w0, 429624 <ferror@plt+0x26054>
  42a730:	cmp	w0, #0x25
  42a734:	b.eq	42963c <ferror@plt+0x2606c>  // b.none
  42a738:	ldp	x0, x1, [x26, #24]
  42a73c:	cmp	x1, x0
  42a740:	b.ne	42a750 <ferror@plt+0x27180>  // b.any
  42a744:	mov	x0, x26
  42a748:	mov	x1, #0x1                   	// #1
  42a74c:	bl	45c22c <_obstack_newchunk@@Base>
  42a750:	ldr	x0, [x26, #24]
  42a754:	cmp	w22, #0x3b
  42a758:	add	x1, x0, #0x1
  42a75c:	str	x1, [x26, #24]
  42a760:	strb	wzr, [x0]
  42a764:	b.ls	429714 <ferror@plt+0x26144>  // b.plast
  42a768:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a76c:	mov	w1, #0x450                 	// #1104
  42a770:	add	x2, x2, #0x88c
  42a774:	b	429630 <ferror@plt+0x26060>
  42a778:	cmp	w0, #0x3c
  42a77c:	b.ne	42a738 <ferror@plt+0x27168>  // b.any
  42a780:	ldr	x0, [sp, #160]
  42a784:	ldr	x0, [x0]
  42a788:	bl	402d50 <strlen@plt>
  42a78c:	mov	x27, x0
  42a790:	ldp	x1, x0, [x26, #24]
  42a794:	sub	x0, x0, x1
  42a798:	cmp	x27, x0
  42a79c:	b.ls	42a7ac <ferror@plt+0x271dc>  // b.plast
  42a7a0:	mov	x1, x27
  42a7a4:	mov	x0, x26
  42a7a8:	bl	45c22c <_obstack_newchunk@@Base>
  42a7ac:	ldr	x0, [sp, #160]
  42a7b0:	mov	x2, x27
  42a7b4:	ldr	x1, [x0]
  42a7b8:	ldr	x0, [x26, #24]
  42a7bc:	bl	402cd0 <memcpy@plt>
  42a7c0:	ldr	x0, [x26, #24]
  42a7c4:	ldr	x1, [sp, #176]
  42a7c8:	add	x0, x0, x27
  42a7cc:	str	x0, [x26, #24]
  42a7d0:	ldrb	w0, [x19, #67]
  42a7d4:	bl	423228 <ferror@plt+0x1fc58>
  42a7d8:	mov	x27, x0
  42a7dc:	bl	402d50 <strlen@plt>
  42a7e0:	mov	x28, x0
  42a7e4:	ldp	x1, x0, [x26, #24]
  42a7e8:	sub	x0, x0, x1
  42a7ec:	cmp	x28, x0
  42a7f0:	b.ls	42a800 <ferror@plt+0x27230>  // b.plast
  42a7f4:	mov	x1, x28
  42a7f8:	mov	x0, x26
  42a7fc:	bl	45c22c <_obstack_newchunk@@Base>
  42a800:	mov	x2, x28
  42a804:	mov	x1, x27
  42a808:	b	4296f0 <ferror@plt+0x26120>
  42a80c:	cmp	w0, #0x52
  42a810:	b.eq	429708 <ferror@plt+0x26138>  // b.none
  42a814:	cmp	w0, #0x6d
  42a818:	b.ne	42a738 <ferror@plt+0x27168>  // b.any
  42a81c:	ldr	w0, [x21, #16]
  42a820:	bl	45d814 <_obstack_memory_used@@Base+0x1424>
  42a824:	b	42a7d8 <ferror@plt+0x27208>
  42a828:	stp	x29, x30, [sp, #-32]!
  42a82c:	mov	x2, #0x1                   	// #1
  42a830:	mov	x29, sp
  42a834:	stp	x19, x20, [sp, #16]
  42a838:	mov	x19, x0
  42a83c:	ldur	x20, [x0, #36]
  42a840:	stur	x2, [x0, #36]
  42a844:	bl	4294ec <ferror@plt+0x25f1c>
  42a848:	mov	x0, x19
  42a84c:	bl	4292dc <ferror@plt+0x25d0c>
  42a850:	stur	x20, [x19, #36]
  42a854:	ldp	x19, x20, [sp, #16]
  42a858:	ldp	x29, x30, [sp], #32
  42a85c:	ret
  42a860:	stp	x29, x30, [sp, #-288]!
  42a864:	mov	x29, sp
  42a868:	stp	x19, x20, [sp, #16]
  42a86c:	mov	x19, x0
  42a870:	add	x0, sp, #0x120
  42a874:	stp	x0, x0, [sp, #40]
  42a878:	add	x0, sp, #0xf0
  42a87c:	mov	x20, x1
  42a880:	str	x0, [sp, #56]
  42a884:	mov	w0, #0xffffffd0            	// #-48
  42a888:	str	w0, [sp, #64]
  42a88c:	mov	w0, #0xffffff80            	// #-128
  42a890:	str	w0, [sp, #68]
  42a894:	str	q0, [sp, #112]
  42a898:	str	q1, [sp, #128]
  42a89c:	str	q2, [sp, #144]
  42a8a0:	str	q3, [sp, #160]
  42a8a4:	str	q4, [sp, #176]
  42a8a8:	str	q5, [sp, #192]
  42a8ac:	str	q6, [sp, #208]
  42a8b0:	str	q7, [sp, #224]
  42a8b4:	stp	x2, x3, [sp, #240]
  42a8b8:	stp	x4, x5, [sp, #256]
  42a8bc:	stp	x6, x7, [sp, #272]
  42a8c0:	bl	4034e0 <__errno_location@plt>
  42a8c4:	ldr	w0, [x0]
  42a8c8:	str	w0, [sp, #88]
  42a8cc:	add	x0, sp, #0x28
  42a8d0:	add	x1, sp, #0x48
  42a8d4:	str	x20, [sp, #72]
  42a8d8:	str	x0, [sp, #80]
  42a8dc:	mov	x0, x19
  42a8e0:	bl	42a828 <ferror@plt+0x27258>
  42a8e4:	ldp	x19, x20, [sp, #16]
  42a8e8:	ldp	x29, x30, [sp], #288
  42a8ec:	ret
  42a8f0:	stp	x29, x30, [sp, #-288]!
  42a8f4:	mov	x29, sp
  42a8f8:	stp	x19, x20, [sp, #16]
  42a8fc:	mov	x19, x0
  42a900:	add	x0, sp, #0x120
  42a904:	stp	x0, x0, [sp, #40]
  42a908:	add	x0, sp, #0xf0
  42a90c:	mov	x20, x1
  42a910:	str	x0, [sp, #56]
  42a914:	mov	w0, #0xffffffd0            	// #-48
  42a918:	str	w0, [sp, #64]
  42a91c:	mov	w0, #0xffffff80            	// #-128
  42a920:	str	w0, [sp, #68]
  42a924:	str	q0, [sp, #112]
  42a928:	str	q1, [sp, #128]
  42a92c:	str	q2, [sp, #144]
  42a930:	str	q3, [sp, #160]
  42a934:	str	q4, [sp, #176]
  42a938:	str	q5, [sp, #192]
  42a93c:	str	q6, [sp, #208]
  42a940:	str	q7, [sp, #224]
  42a944:	stp	x2, x3, [sp, #240]
  42a948:	stp	x4, x5, [sp, #256]
  42a94c:	stp	x6, x7, [sp, #272]
  42a950:	bl	4034e0 <__errno_location@plt>
  42a954:	add	x1, sp, #0x48
  42a958:	ldr	w0, [x0]
  42a95c:	str	w0, [sp, #88]
  42a960:	add	x0, sp, #0x28
  42a964:	str	x20, [sp, #72]
  42a968:	str	x0, [sp, #80]
  42a96c:	mov	x0, x19
  42a970:	bl	4294ec <ferror@plt+0x25f1c>
  42a974:	mov	x0, x19
  42a978:	bl	4292dc <ferror@plt+0x25d0c>
  42a97c:	ldp	x19, x20, [sp, #16]
  42a980:	ldp	x29, x30, [sp], #288
  42a984:	ret
  42a988:	stp	x29, x30, [sp, #-112]!
  42a98c:	mov	x29, sp
  42a990:	stp	x19, x20, [sp, #16]
  42a994:	mov	x19, x0
  42a998:	stp	x21, x22, [sp, #32]
  42a99c:	mov	x21, #0x0                   	// #0
  42a9a0:	mov	w22, #0x1                   	// #1
  42a9a4:	stp	x23, x24, [sp, #48]
  42a9a8:	stp	x25, x26, [sp, #64]
  42a9ac:	bl	402d50 <strlen@plt>
  42a9b0:	mov	x20, x0
  42a9b4:	cmp	x21, x20
  42a9b8:	b.cs	42aa54 <ferror@plt+0x27484>  // b.hs, b.nlast
  42a9bc:	sub	x1, x20, x21
  42a9c0:	add	x2, sp, #0x68
  42a9c4:	add	x0, x19, x21
  42a9c8:	bl	4287c4 <ferror@plt+0x251f4>
  42a9cc:	sxtw	x1, w0
  42a9d0:	cbz	w0, 42a9ec <ferror@plt+0x2741c>
  42a9d4:	ldr	w0, [sp, #104]
  42a9d8:	cmp	w0, #0x1f
  42a9dc:	b.ls	42a9ec <ferror@plt+0x2741c>  // b.plast
  42a9e0:	sub	w0, w0, #0x7f
  42a9e4:	cmp	w0, #0x20
  42a9e8:	b.hi	42aa44 <ferror@plt+0x27474>  // b.pmore
  42a9ec:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42a9f0:	lsl	x0, x20, #2
  42a9f4:	add	x0, x0, #0x1
  42a9f8:	adrp	x24, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42a9fc:	ldr	x1, [x1, #1152]
  42aa00:	add	x24, x24, #0x8c0
  42aa04:	mov	x23, #0x0                   	// #0
  42aa08:	blr	x1
  42aa0c:	mov	x22, x0
  42aa10:	mov	x21, x0
  42aa14:	ldrb	w2, [x19, x23]
  42aa18:	sub	w0, w2, #0x20
  42aa1c:	and	w0, w0, #0xff
  42aa20:	cmp	w0, #0x5e
  42aa24:	b.hi	42aa74 <ferror@plt+0x274a4>  // b.pmore
  42aa28:	strb	w2, [x21], #1
  42aa2c:	add	x23, x23, #0x1
  42aa30:	cmp	x20, x23
  42aa34:	b.ne	42aa14 <ferror@plt+0x27444>  // b.any
  42aa38:	mov	x19, x22
  42aa3c:	strb	wzr, [x21]
  42aa40:	b	42aa58 <ferror@plt+0x27488>
  42aa44:	cmp	x1, #0x2
  42aa48:	add	x21, x21, x1
  42aa4c:	csel	w22, w22, wzr, cc  // cc = lo, ul, last
  42aa50:	b	42a9b4 <ferror@plt+0x273e4>
  42aa54:	cbz	w22, 42aa88 <ferror@plt+0x274b8>
  42aa58:	mov	x0, x19
  42aa5c:	ldp	x19, x20, [sp, #16]
  42aa60:	ldp	x21, x22, [sp, #32]
  42aa64:	ldp	x23, x24, [sp, #48]
  42aa68:	ldp	x25, x26, [sp, #64]
  42aa6c:	ldp	x29, x30, [sp], #112
  42aa70:	ret
  42aa74:	mov	x0, x21
  42aa78:	mov	x1, x24
  42aa7c:	add	x21, x21, #0x4
  42aa80:	bl	402e00 <sprintf@plt>
  42aa84:	b	42aa2c <ferror@plt+0x2745c>
  42aa88:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42aa8c:	ldrb	w25, [x0, #552]
  42aa90:	cbnz	w25, 42aa58 <ferror@plt+0x27488>
  42aa94:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42aa98:	adrp	x24, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42aa9c:	ldr	x0, [x0, #544]
  42aaa0:	cbz	x0, 42ab90 <ferror@plt+0x275c0>
  42aaa4:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42aaa8:	add	x1, x1, #0x88b
  42aaac:	bl	403390 <iconv_open@plt>
  42aab0:	mov	x22, x0
  42aab4:	cmn	x0, #0x1
  42aab8:	b.eq	42ab90 <ferror@plt+0x275c0>  // b.none
  42aabc:	lsl	x21, x20, #2
  42aac0:	add	x26, x24, #0x480
  42aac4:	add	x21, x21, #0x1
  42aac8:	ldr	x1, [x26]
  42aacc:	sub	x0, x21, #0x1
  42aad0:	str	x19, [sp, #80]
  42aad4:	stp	x20, x0, [sp, #96]
  42aad8:	mov	x0, x21
  42aadc:	blr	x1
  42aae0:	mov	x23, x0
  42aae4:	mov	x4, #0x0                   	// #0
  42aae8:	mov	x0, x22
  42aaec:	mov	x3, #0x0                   	// #0
  42aaf0:	mov	x2, #0x0                   	// #0
  42aaf4:	mov	x1, #0x0                   	// #0
  42aaf8:	str	x23, [sp, #88]
  42aafc:	bl	403230 <iconv@plt>
  42ab00:	cmn	x0, #0x1
  42ab04:	b.eq	42ab84 <ferror@plt+0x275b4>  // b.none
  42ab08:	add	x4, sp, #0x68
  42ab0c:	add	x3, sp, #0x58
  42ab10:	add	x2, sp, #0x60
  42ab14:	add	x1, sp, #0x50
  42ab18:	mov	x0, x22
  42ab1c:	bl	403230 <iconv@plt>
  42ab20:	cmn	x0, #0x1
  42ab24:	b.eq	42ab30 <ferror@plt+0x27560>  // b.none
  42ab28:	ldr	x1, [sp, #96]
  42ab2c:	cbz	x1, 42ab54 <ferror@plt+0x27584>
  42ab30:	bl	4034e0 <__errno_location@plt>
  42ab34:	ldr	w0, [x0]
  42ab38:	cmp	w0, #0x7
  42ab3c:	b.ne	42ab84 <ferror@plt+0x275b4>  // b.any
  42ab40:	ldr	x1, [x26, #8]
  42ab44:	lsl	x21, x21, #1
  42ab48:	mov	x0, x23
  42ab4c:	blr	x1
  42ab50:	b	42aac8 <ferror@plt+0x274f8>
  42ab54:	cbnz	x0, 42ab84 <ferror@plt+0x275b4>
  42ab58:	add	x4, sp, #0x68
  42ab5c:	add	x3, sp, #0x58
  42ab60:	mov	x0, x22
  42ab64:	mov	x2, #0x0                   	// #0
  42ab68:	mov	x1, #0x0                   	// #0
  42ab6c:	bl	403230 <iconv@plt>
  42ab70:	cmn	x0, #0x1
  42ab74:	b.eq	42ab30 <ferror@plt+0x27560>  // b.none
  42ab78:	ldr	x0, [sp, #88]
  42ab7c:	mov	w25, #0x1                   	// #1
  42ab80:	strb	wzr, [x0]
  42ab84:	mov	x0, x22
  42ab88:	bl	402db0 <iconv_close@plt>
  42ab8c:	cbnz	w25, 42ac08 <ferror@plt+0x27638>
  42ab90:	ldr	x1, [x24, #1152]
  42ab94:	mov	x0, #0xa                   	// #10
  42ab98:	adrp	x24, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ab9c:	add	x24, x24, #0x8c6
  42aba0:	mul	x0, x20, x0
  42aba4:	mov	x22, #0x0                   	// #0
  42aba8:	add	x0, x0, #0x1
  42abac:	blr	x1
  42abb0:	mov	x23, x0
  42abb4:	mov	x21, x0
  42abb8:	cmp	x22, x20
  42abbc:	b.cs	42ac04 <ferror@plt+0x27634>  // b.hs, b.nlast
  42abc0:	add	x2, sp, #0x68
  42abc4:	sub	x1, x20, x22
  42abc8:	add	x0, x19, x22
  42abcc:	bl	4287c4 <ferror@plt+0x251f4>
  42abd0:	sxtw	x25, w0
  42abd4:	cmp	w0, #0x1
  42abd8:	b.ne	42abec <ferror@plt+0x2761c>  // b.any
  42abdc:	ldrb	w0, [x19, x22]
  42abe0:	strb	w0, [x21], #1
  42abe4:	add	x22, x22, x25
  42abe8:	b	42abb8 <ferror@plt+0x275e8>
  42abec:	ldr	w2, [sp, #104]
  42abf0:	mov	x1, x24
  42abf4:	mov	x0, x21
  42abf8:	add	x21, x21, #0xa
  42abfc:	bl	402e00 <sprintf@plt>
  42ac00:	b	42abe4 <ferror@plt+0x27614>
  42ac04:	strb	wzr, [x21]
  42ac08:	mov	x19, x23
  42ac0c:	b	42aa58 <ferror@plt+0x27488>
  42ac10:	stp	x29, x30, [sp, #-32]!
  42ac14:	mov	x2, x1
  42ac18:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ac1c:	mov	x29, sp
  42ac20:	str	x19, [sp, #16]
  42ac24:	mov	x19, x0
  42ac28:	ldr	x0, [x0, #8]
  42ac2c:	add	x1, x1, #0x8cd
  42ac30:	add	x0, x0, #0xcc
  42ac34:	bl	402e00 <sprintf@plt>
  42ac38:	mov	x0, x19
  42ac3c:	ldr	x1, [x19, #8]
  42ac40:	ldr	x19, [sp, #16]
  42ac44:	add	x1, x1, #0xcc
  42ac48:	ldp	x29, x30, [sp], #32
  42ac4c:	b	4292a8 <ferror@plt+0x25cd8>
  42ac50:	stp	x29, x30, [sp, #-32]!
  42ac54:	mov	x29, sp
  42ac58:	stp	x19, x20, [sp, #16]
  42ac5c:	mov	x20, x1
  42ac60:	ldrh	w1, [x1, #2]
  42ac64:	cbnz	w1, 42ac78 <ferror@plt+0x276a8>
  42ac68:	ldrh	w1, [x20]
  42ac6c:	ldp	x19, x20, [sp, #16]
  42ac70:	ldp	x29, x30, [sp], #32
  42ac74:	b	42ac10 <ferror@plt+0x27640>
  42ac78:	mov	x19, x0
  42ac7c:	mov	w1, #0x5b                  	// #91
  42ac80:	bl	428efc <ferror@plt+0x2592c>
  42ac84:	ldrh	w1, [x20]
  42ac88:	mov	x0, x19
  42ac8c:	bl	42ac10 <ferror@plt+0x27640>
  42ac90:	mov	x0, x19
  42ac94:	mov	w1, #0x2c                  	// #44
  42ac98:	bl	428efc <ferror@plt+0x2592c>
  42ac9c:	ldrh	w1, [x20, #2]
  42aca0:	mov	x0, x19
  42aca4:	bl	42ac10 <ferror@plt+0x27640>
  42aca8:	mov	x0, x19
  42acac:	mov	w1, #0x5d                  	// #93
  42acb0:	ldp	x19, x20, [sp, #16]
  42acb4:	ldp	x29, x30, [sp], #32
  42acb8:	b	428efc <ferror@plt+0x2592c>
  42acbc:	stp	x29, x30, [sp, #-32]!
  42acc0:	mov	x29, sp
  42acc4:	stp	x19, x20, [sp, #16]
  42acc8:	mov	x20, x1
  42accc:	ldr	x1, [x1, #8]
  42acd0:	cbnz	x1, 42ace4 <ferror@plt+0x27714>
  42acd4:	ldr	x1, [x20]
  42acd8:	ldp	x19, x20, [sp, #16]
  42acdc:	ldp	x29, x30, [sp], #32
  42ace0:	b	42ac10 <ferror@plt+0x27640>
  42ace4:	mov	x19, x0
  42ace8:	mov	w1, #0x5b                  	// #91
  42acec:	bl	428efc <ferror@plt+0x2592c>
  42acf0:	ldr	x1, [x20]
  42acf4:	mov	x0, x19
  42acf8:	bl	42ac10 <ferror@plt+0x27640>
  42acfc:	mov	x0, x19
  42ad00:	mov	w1, #0x2c                  	// #44
  42ad04:	bl	428efc <ferror@plt+0x2592c>
  42ad08:	ldr	x1, [x20, #8]
  42ad0c:	mov	x0, x19
  42ad10:	bl	42ac10 <ferror@plt+0x27640>
  42ad14:	mov	x0, x19
  42ad18:	mov	w1, #0x5d                  	// #93
  42ad1c:	ldp	x19, x20, [sp, #16]
  42ad20:	ldp	x29, x30, [sp], #32
  42ad24:	b	428efc <ferror@plt+0x2592c>
  42ad28:	stp	x29, x30, [sp, #-32]!
  42ad2c:	mov	x29, sp
  42ad30:	stp	x19, x20, [sp, #16]
  42ad34:	mov	x20, x1
  42ad38:	ldr	x1, [x1, #8]
  42ad3c:	cbnz	x1, 42ad50 <ferror@plt+0x27780>
  42ad40:	ldr	x1, [x20]
  42ad44:	ldp	x19, x20, [sp, #16]
  42ad48:	ldp	x29, x30, [sp], #32
  42ad4c:	b	42ac10 <ferror@plt+0x27640>
  42ad50:	mov	x19, x0
  42ad54:	mov	w1, #0x5b                  	// #91
  42ad58:	bl	428efc <ferror@plt+0x2592c>
  42ad5c:	ldr	x1, [x20]
  42ad60:	mov	x0, x19
  42ad64:	bl	42ac10 <ferror@plt+0x27640>
  42ad68:	mov	x0, x19
  42ad6c:	mov	w1, #0x2c                  	// #44
  42ad70:	bl	428efc <ferror@plt+0x2592c>
  42ad74:	ldr	x1, [x20, #8]
  42ad78:	mov	x0, x19
  42ad7c:	bl	42ac10 <ferror@plt+0x27640>
  42ad80:	mov	x0, x19
  42ad84:	mov	w1, #0x5d                  	// #93
  42ad88:	ldp	x19, x20, [sp, #16]
  42ad8c:	ldp	x29, x30, [sp], #32
  42ad90:	b	428efc <ferror@plt+0x2592c>
  42ad94:	stp	x29, x30, [sp, #-64]!
  42ad98:	mov	w0, #0x0                   	// #0
  42ad9c:	mov	x29, sp
  42ada0:	stp	x19, x20, [sp, #16]
  42ada4:	adrp	x19, 485000 <_obstack_memory_used@@Base+0x28c10>
  42ada8:	add	x19, x19, #0x122
  42adac:	mov	x1, x19
  42adb0:	stp	x21, x22, [sp, #32]
  42adb4:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42adb8:	stp	x23, x24, [sp, #48]
  42adbc:	bl	4035c0 <setlocale@plt>
  42adc0:	mov	x1, x19
  42adc4:	mov	w0, #0x5                   	// #5
  42adc8:	bl	4035c0 <setlocale@plt>
  42adcc:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42add0:	add	x1, x1, #0x938
  42add4:	adrp	x19, 479000 <_obstack_memory_used@@Base+0x1cc10>
  42add8:	add	x19, x19, #0xaa2
  42addc:	mov	x0, x19
  42ade0:	bl	402f90 <bindtextdomain@plt>
  42ade4:	mov	x0, x19
  42ade8:	adrp	x24, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42adec:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42adf0:	bl	403200 <textdomain@plt>
  42adf4:	add	x24, x24, #0x94a
  42adf8:	add	x22, x19, #0x490
  42adfc:	mov	x0, x24
  42ae00:	adrp	x23, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  42ae04:	bl	403580 <gettext@plt>
  42ae08:	add	x23, x23, #0xfd1
  42ae0c:	str	x0, [x19, #1168]
  42ae10:	mov	x0, x23
  42ae14:	bl	403580 <gettext@plt>
  42ae18:	str	x0, [x22, #8]
  42ae1c:	mov	w0, #0xe                   	// #14
  42ae20:	bl	402f10 <nl_langinfo@plt>
  42ae24:	str	x0, [x20, #544]
  42ae28:	cbz	x0, 42ae60 <ferror@plt+0x27890>
  42ae2c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ae30:	mov	x21, x0
  42ae34:	add	x1, x1, #0x94c
  42ae38:	bl	403080 <strcasecmp@plt>
  42ae3c:	cbz	w0, 42ae54 <ferror@plt+0x27884>
  42ae40:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ae44:	mov	x0, x21
  42ae48:	add	x1, x1, #0x952
  42ae4c:	bl	403080 <strcasecmp@plt>
  42ae50:	cbnz	w0, 42ae60 <ferror@plt+0x27890>
  42ae54:	add	x0, x20, #0x220
  42ae58:	mov	w1, #0x1                   	// #1
  42ae5c:	strb	w1, [x0, #8]
  42ae60:	ldr	x0, [x19, #1168]
  42ae64:	mov	x1, x24
  42ae68:	bl	403220 <strcmp@plt>
  42ae6c:	cbnz	w0, 42aea8 <ferror@plt+0x278d8>
  42ae70:	ldr	x0, [x22, #8]
  42ae74:	mov	x1, x23
  42ae78:	bl	403220 <strcmp@plt>
  42ae7c:	cbnz	w0, 42aea8 <ferror@plt+0x278d8>
  42ae80:	add	x20, x20, #0x220
  42ae84:	str	x23, [x19, #1168]
  42ae88:	ldrb	w0, [x20, #8]
  42ae8c:	cbz	w0, 42aea8 <ferror@plt+0x278d8>
  42ae90:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ae94:	add	x0, x0, #0x957
  42ae98:	str	x0, [x19, #1168]
  42ae9c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42aea0:	add	x0, x0, #0x95b
  42aea4:	str	x0, [x22, #8]
  42aea8:	ldp	x19, x20, [sp, #16]
  42aeac:	ldp	x21, x22, [sp, #32]
  42aeb0:	ldp	x23, x24, [sp, #48]
  42aeb4:	ldp	x29, x30, [sp], #64
  42aeb8:	ret
  42aebc:	stp	x29, x30, [sp, #-48]!
  42aec0:	mov	x2, #0x0                   	// #0
  42aec4:	mov	x1, x0
  42aec8:	mov	x29, sp
  42aecc:	stp	x19, x20, [sp, #16]
  42aed0:	mov	x20, x0
  42aed4:	mov	x0, #0x0                   	// #0
  42aed8:	str	x21, [sp, #32]
  42aedc:	bl	402d70 <mbstowcs@plt>
  42aee0:	add	x2, x0, #0x1
  42aee4:	mov	x19, x0
  42aee8:	mov	x1, x20
  42aeec:	lsl	x3, x2, #2
  42aef0:	add	x3, x3, #0xf
  42aef4:	and	x3, x3, #0xfffffffffffffff0
  42aef8:	sub	sp, sp, x3
  42aefc:	mov	x21, sp
  42af00:	mov	x0, x21
  42af04:	bl	402d70 <mbstowcs@plt>
  42af08:	mov	x1, x19
  42af0c:	mov	x0, x21
  42af10:	bl	402f70 <wcswidth@plt>
  42af14:	mov	sp, x29
  42af18:	sxtw	x0, w0
  42af1c:	ldp	x19, x20, [sp, #16]
  42af20:	ldr	x21, [sp, #32]
  42af24:	ldp	x29, x30, [sp], #48
  42af28:	ret
  42af2c:	stp	x29, x30, [sp, #-32]!
  42af30:	mov	x29, sp
  42af34:	stp	x19, x20, [sp, #16]
  42af38:	bl	42aebc <ferror@plt+0x278ec>
  42af3c:	mov	x19, x0
  42af40:	add	x0, x0, #0x1
  42af44:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  42af48:	mov	x20, x0
  42af4c:	mov	x2, x19
  42af50:	mov	w1, #0x20                  	// #32
  42af54:	bl	403000 <memset@plt>
  42af58:	mov	x0, x20
  42af5c:	strb	wzr, [x20, x19]
  42af60:	ldp	x19, x20, [sp, #16]
  42af64:	ldp	x29, x30, [sp], #32
  42af68:	ret
  42af6c:	stp	x29, x30, [sp, #-32]!
  42af70:	mov	x29, sp
  42af74:	stp	x19, x20, [sp, #16]
  42af78:	mov	x19, x0
  42af7c:	ldr	x0, [x0, #40]
  42af80:	cbz	x0, 42afb0 <ferror@plt+0x279e0>
  42af84:	ldr	x1, [x19, #32]
  42af88:	cmp	x0, x1
  42af8c:	b.eq	42afb0 <ferror@plt+0x279e0>  // b.none
  42af90:	ldr	x1, [x19, #48]
  42af94:	sub	x0, x0, #0x1
  42af98:	cmp	x1, x0
  42af9c:	b.cs	42afb0 <ferror@plt+0x279e0>  // b.hs, b.nlast
  42afa0:	mov	w0, #0x0                   	// #0
  42afa4:	ldp	x19, x20, [sp, #16]
  42afa8:	ldp	x29, x30, [sp], #32
  42afac:	ret
  42afb0:	ldr	x0, [x19, #16]
  42afb4:	bl	4031a0 <feof@plt>
  42afb8:	cbnz	w0, 42afa0 <ferror@plt+0x279d0>
  42afbc:	ldr	x0, [x19, #16]
  42afc0:	bl	4035d0 <ferror@plt>
  42afc4:	cbnz	w0, 42afa0 <ferror@plt+0x279d0>
  42afc8:	ldp	x1, x0, [x19, #32]
  42afcc:	cmp	x0, x1
  42afd0:	b.ne	42aff4 <ferror@plt+0x27a24>  // b.any
  42afd4:	cmp	x0, #0x0
  42afd8:	lsl	x20, x0, #1
  42afdc:	ldr	x0, [x19, #24]
  42afe0:	mov	x1, #0x1000                	// #4096
  42afe4:	csel	x20, x20, x1, ne  // ne = any
  42afe8:	mov	x1, x20
  42afec:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42aff0:	stp	x0, x20, [x19, #24]
  42aff4:	mov	x1, #0x1                   	// #1
  42aff8:	ldp	x3, x4, [x19, #16]
  42affc:	ldp	x2, x0, [x19, #32]
  42b000:	sub	x2, x2, x0
  42b004:	add	x0, x4, x0
  42b008:	bl	403270 <fread@plt>
  42b00c:	mov	x20, x0
  42b010:	ldr	x0, [x19, #16]
  42b014:	bl	4035d0 <ferror@plt>
  42b018:	cbnz	w0, 42afa0 <ferror@plt+0x279d0>
  42b01c:	ldr	x0, [x19, #40]
  42b020:	cmp	x20, #0x0
  42b024:	add	x0, x0, x20
  42b028:	str	x0, [x19, #40]
  42b02c:	cset	w0, ne  // ne = any
  42b030:	b	42afa4 <ferror@plt+0x279d4>
  42b034:	stp	x29, x30, [sp, #-112]!
  42b038:	mov	x29, sp
  42b03c:	stp	x19, x20, [sp, #16]
  42b040:	mov	w19, w0
  42b044:	mov	w20, w2
  42b048:	stp	x21, x22, [sp, #32]
  42b04c:	mov	x21, x8
  42b050:	stp	x23, x24, [sp, #48]
  42b054:	and	w24, w1, #0xff
  42b058:	tbz	w0, #31, 42b0f0 <ferror@plt+0x27b20>
  42b05c:	adrp	x22, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b060:	mov	w1, w0
  42b064:	ldr	x0, [x22, #560]
  42b068:	bl	43f65c <ferror@plt+0x3c08c>
  42b06c:	mov	x23, x0
  42b070:	ldr	x0, [x22, #560]
  42b074:	mov	w1, w19
  42b078:	bl	43f674 <ferror@plt+0x3c0a4>
  42b07c:	mov	w19, w0
  42b080:	stp	xzr, xzr, [sp, #80]
  42b084:	cmp	w19, #0x1
  42b088:	stp	xzr, xzr, [sp, #96]
  42b08c:	b.ls	42b160 <ferror@plt+0x27b90>  // b.plast
  42b090:	adrp	x22, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b094:	cbnz	w24, 42b0f8 <ferror@plt+0x27b28>
  42b098:	ldr	x0, [x22, #560]
  42b09c:	mov	w1, w19
  42b0a0:	mov	x2, #0x0                   	// #0
  42b0a4:	bl	440944 <ferror@plt+0x3d374>
  42b0a8:	mov	w19, w0
  42b0ac:	mov	w2, #0x1                   	// #1
  42b0b0:	ldr	x0, [x22, #560]
  42b0b4:	mov	w1, w19
  42b0b8:	add	x3, sp, #0x48
  42b0bc:	bl	4403f0 <ferror@plt+0x3ce20>
  42b0c0:	mov	w19, w0
  42b0c4:	cmp	w20, #0x1
  42b0c8:	b.eq	42b100 <ferror@plt+0x27b30>  // b.none
  42b0cc:	cmp	w20, #0x2
  42b0d0:	b.eq	42b138 <ferror@plt+0x27b68>  // b.none
  42b0d4:	cbz	w20, 42b14c <ferror@plt+0x27b7c>
  42b0d8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b0dc:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b0e0:	add	x2, x2, #0x95f
  42b0e4:	add	x0, x0, #0x971
  42b0e8:	mov	w1, #0xc7                  	// #199
  42b0ec:	bl	403600 <ferror@plt+0x30>
  42b0f0:	mov	x23, #0x0                   	// #0
  42b0f4:	b	42b080 <ferror@plt+0x27ab0>
  42b0f8:	mov	w2, #0x0                   	// #0
  42b0fc:	b	42b0b0 <ferror@plt+0x27ae0>
  42b100:	mov	w1, w0
  42b104:	ldr	x0, [x22, #560]
  42b108:	bl	4400fc <ferror@plt+0x3cb2c>
  42b10c:	cmp	w19, w0
  42b110:	b.eq	42b14c <ferror@plt+0x27b7c>  // b.none
  42b114:	mov	x8, x21
  42b118:	mov	w2, w20
  42b11c:	mov	w1, w24
  42b120:	bl	42b034 <ferror@plt+0x27a64>
  42b124:	ldp	x19, x20, [sp, #16]
  42b128:	ldp	x21, x22, [sp, #32]
  42b12c:	ldp	x23, x24, [sp, #48]
  42b130:	ldp	x29, x30, [sp], #112
  42b134:	ret
  42b138:	mov	w1, w0
  42b13c:	ldr	x0, [x22, #560]
  42b140:	bl	4400fc <ferror@plt+0x3cb2c>
  42b144:	lsr	x0, x0, #32
  42b148:	b	42b10c <ferror@plt+0x27b3c>
  42b14c:	ldr	x0, [x22, #560]
  42b150:	add	x8, sp, #0x50
  42b154:	ldr	x1, [sp, #72]
  42b158:	mov	w2, w19
  42b15c:	bl	440a38 <ferror@plt+0x3d468>
  42b160:	str	x23, [sp, #96]
  42b164:	cmp	w19, #0x1
  42b168:	b.hi	42b180 <ferror@plt+0x27bb0>  // b.pmore
  42b16c:	cbz	w19, 42b194 <ferror@plt+0x27bc4>
  42b170:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42b174:	add	x0, x0, #0xd7c
  42b178:	bl	403580 <gettext@plt>
  42b17c:	str	x0, [sp, #80]
  42b180:	ldp	x0, x1, [sp, #80]
  42b184:	stp	x0, x1, [x21]
  42b188:	ldp	x0, x1, [sp, #96]
  42b18c:	stp	x0, x1, [x21, #16]
  42b190:	b	42b124 <ferror@plt+0x27b54>
  42b194:	mov	x0, #0x0                   	// #0
  42b198:	b	42b17c <ferror@plt+0x27bac>
  42b19c:	stp	x29, x30, [sp, #-80]!
  42b1a0:	mov	x29, sp
  42b1a4:	stp	x23, x24, [sp, #48]
  42b1a8:	mov	x23, x2
  42b1ac:	mov	w2, w1
  42b1b0:	stp	x19, x20, [sp, #16]
  42b1b4:	mov	w20, #0x1                   	// #1
  42b1b8:	mov	x19, x0
  42b1bc:	stp	x21, x22, [sp, #32]
  42b1c0:	mov	w22, w3
  42b1c4:	mov	w3, #0x20                  	// #32
  42b1c8:	str	x25, [sp, #64]
  42b1cc:	mov	w25, #0xa                   	// #10
  42b1d0:	mov	w24, w4
  42b1d4:	mov	w21, w5
  42b1d8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b1dc:	add	x1, x1, #0x983
  42b1e0:	bl	403590 <fprintf@plt>
  42b1e4:	mov	x1, x19
  42b1e8:	mov	w0, #0x7c                  	// #124
  42b1ec:	bl	402e40 <fputc@plt>
  42b1f0:	cmp	w20, w24
  42b1f4:	b.ge	42b224 <ferror@plt+0x27c54>  // b.tcont
  42b1f8:	ldrb	w1, [x23, #7]
  42b1fc:	lsl	w1, w20, w1
  42b200:	add	w1, w1, w22
  42b204:	add	w20, w20, #0x1
  42b208:	udiv	w1, w1, w21
  42b20c:	sdiv	w0, w1, w25
  42b210:	msub	w0, w0, w25, w1
  42b214:	mov	x1, x19
  42b218:	add	w0, w0, #0x30
  42b21c:	bl	402e40 <fputc@plt>
  42b220:	b	42b1f0 <ferror@plt+0x27c20>
  42b224:	mov	x1, x19
  42b228:	mov	w0, #0xa                   	// #10
  42b22c:	ldp	x19, x20, [sp, #16]
  42b230:	ldp	x21, x22, [sp, #32]
  42b234:	ldp	x23, x24, [sp, #48]
  42b238:	ldr	x25, [sp, #64]
  42b23c:	ldp	x29, x30, [sp], #80
  42b240:	b	402e40 <fputc@plt>
  42b244:	stp	x29, x30, [sp, #-48]!
  42b248:	mov	x29, sp
  42b24c:	stp	x21, x22, [sp, #32]
  42b250:	mov	x21, x0
  42b254:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b258:	stp	x19, x20, [sp, #16]
  42b25c:	mov	x20, #0x0                   	// #0
  42b260:	ldr	x19, [x0, #568]
  42b264:	add	x22, x19, #0x580
  42b268:	ldr	x0, [x19, #8]
  42b26c:	cbz	x0, 42b28c <ferror@plt+0x27cbc>
  42b270:	mov	x1, x21
  42b274:	bl	403220 <strcmp@plt>
  42b278:	cbnz	w0, 42b28c <ferror@plt+0x27cbc>
  42b27c:	ldr	w0, [x19]
  42b280:	mov	x20, x19
  42b284:	add	w0, w0, #0x1
  42b288:	str	w0, [x19]
  42b28c:	add	x19, x19, #0x58
  42b290:	cmp	x22, x19
  42b294:	b.ne	42b268 <ferror@plt+0x27c98>  // b.any
  42b298:	cbz	x20, 42b2a8 <ferror@plt+0x27cd8>
  42b29c:	ldr	w0, [x20]
  42b2a0:	add	w0, w0, #0x1
  42b2a4:	str	w0, [x20]
  42b2a8:	mov	x0, x20
  42b2ac:	ldp	x19, x20, [sp, #16]
  42b2b0:	ldp	x21, x22, [sp, #32]
  42b2b4:	ldp	x29, x30, [sp], #48
  42b2b8:	ret
  42b2bc:	stp	x29, x30, [sp, #-32]!
  42b2c0:	tst	w0, #0xff
  42b2c4:	mov	x29, sp
  42b2c8:	str	x19, [sp, #16]
  42b2cc:	mov	x19, x1
  42b2d0:	b.ne	42b2fc <ferror@plt+0x27d2c>  // b.any
  42b2d4:	mov	x0, x19
  42b2d8:	mov	x1, #0x10                  	// #16
  42b2dc:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  42b2e0:	mov	x1, #0x0                   	// #0
  42b2e4:	cmp	x19, x1
  42b2e8:	b.eq	42b32c <ferror@plt+0x27d5c>  // b.none
  42b2ec:	lsl	x2, x1, #4
  42b2f0:	add	x1, x1, #0x1
  42b2f4:	str	wzr, [x0, x2]
  42b2f8:	b	42b2e4 <ferror@plt+0x27d14>
  42b2fc:	lsl	x0, x19, #4
  42b300:	mov	x3, #0x0                   	// #0
  42b304:	mov	x2, #0x0                   	// #0
  42b308:	mov	x1, #0x0                   	// #0
  42b30c:	bl	4103e8 <ferror@plt+0xce18>
  42b310:	cbnz	x0, 42b2e0 <ferror@plt+0x27d10>
  42b314:	adrp	x2, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42b318:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42b31c:	add	x2, x2, #0x830
  42b320:	add	x0, x0, #0x83e
  42b324:	mov	w1, #0x2b5                 	// #693
  42b328:	bl	403600 <ferror@plt+0x30>
  42b32c:	ldr	x19, [sp, #16]
  42b330:	ldp	x29, x30, [sp], #32
  42b334:	ret
  42b338:	stp	x29, x30, [sp, #-48]!
  42b33c:	mov	x29, sp
  42b340:	stp	x19, x20, [sp, #16]
  42b344:	mov	x19, x0
  42b348:	mov	w20, w2
  42b34c:	mov	x2, x1
  42b350:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b354:	add	x1, x1, #0x816
  42b358:	str	x21, [sp, #32]
  42b35c:	mov	w21, w3
  42b360:	bl	403590 <fprintf@plt>
  42b364:	mov	w3, w21
  42b368:	mov	w2, w20
  42b36c:	mov	x0, x19
  42b370:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b374:	add	x1, x1, #0x987
  42b378:	bl	403590 <fprintf@plt>
  42b37c:	mov	x1, x19
  42b380:	mov	w0, #0xa                   	// #10
  42b384:	ldp	x19, x20, [sp, #16]
  42b388:	ldr	x21, [sp, #32]
  42b38c:	ldp	x29, x30, [sp], #48
  42b390:	b	402e40 <fputc@plt>
  42b394:	mov	w1, #0x1                   	// #1
  42b398:	str	wzr, [x0]
  42b39c:	stp	xzr, xzr, [x0, #8]
  42b3a0:	stp	xzr, xzr, [x0, #24]
  42b3a4:	stp	xzr, xzr, [x0, #40]
  42b3a8:	stp	xzr, xzr, [x0, #56]
  42b3ac:	strb	w1, [x0, #72]
  42b3b0:	str	xzr, [x0, #80]
  42b3b4:	ret
  42b3b8:	stp	x29, x30, [sp, #-32]!
  42b3bc:	mov	x29, sp
  42b3c0:	str	x19, [sp, #16]
  42b3c4:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b3c8:	add	x19, x19, #0x230
  42b3cc:	ldr	x0, [x19, #8]
  42b3d0:	cbnz	x0, 42b408 <ferror@plt+0x27e38>
  42b3d4:	mov	x0, #0x588                 	// #1416
  42b3d8:	bl	45de70 <_obstack_memory_used@@Base+0x1a80>
  42b3dc:	mov	x3, x0
  42b3e0:	mov	x1, x0
  42b3e4:	mov	x0, #0x10                  	// #16
  42b3e8:	add	x2, x1, #0x588
  42b3ec:	str	x0, [x3], #8
  42b3f0:	mov	x0, x3
  42b3f4:	bl	42b394 <ferror@plt+0x27dc4>
  42b3f8:	add	x0, x0, #0x58
  42b3fc:	cmp	x2, x0
  42b400:	b.ne	42b3f4 <ferror@plt+0x27e24>  // b.any
  42b404:	str	x3, [x19, #8]
  42b408:	ldr	x19, [sp, #16]
  42b40c:	ldp	x29, x30, [sp], #32
  42b410:	ret
  42b414:	stp	x29, x30, [sp, #-32]!
  42b418:	mov	x29, sp
  42b41c:	str	x19, [sp, #16]
  42b420:	cbnz	x0, 42b43c <ferror@plt+0x27e6c>
  42b424:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b428:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b42c:	add	x2, x2, #0x9ae
  42b430:	add	x0, x0, #0x971
  42b434:	mov	w1, #0x133                 	// #307
  42b438:	bl	403600 <ferror@plt+0x30>
  42b43c:	mov	x19, x0
  42b440:	bl	42b3b8 <ferror@plt+0x27de8>
  42b444:	mov	x0, x19
  42b448:	bl	42b244 <ferror@plt+0x27c74>
  42b44c:	mov	x19, x0
  42b450:	cbz	x0, 42b48c <ferror@plt+0x27ebc>
  42b454:	ldr	x0, [x0, #16]
  42b458:	str	xzr, [x19, #8]
  42b45c:	cbz	x0, 42b464 <ferror@plt+0x27e94>
  42b460:	bl	402ee0 <fclose@plt>
  42b464:	ldr	x0, [x19, #80]
  42b468:	str	xzr, [x19, #16]
  42b46c:	stp	xzr, xzr, [x19, #40]
  42b470:	str	xzr, [x19, #56]
  42b474:	cbz	x0, 42b47c <ferror@plt+0x27eac>
  42b478:	str	wzr, [x0, #4]
  42b47c:	mov	w0, #0x1                   	// #1
  42b480:	str	wzr, [x19]
  42b484:	str	xzr, [x19, #64]
  42b488:	strb	w0, [x19, #72]
  42b48c:	ldr	x19, [sp, #16]
  42b490:	ldp	x29, x30, [sp], #32
  42b494:	ret
  42b498:	stp	x29, x30, [sp, #-32]!
  42b49c:	mov	x29, sp
  42b4a0:	str	x19, [sp, #16]
  42b4a4:	mov	x19, x0
  42b4a8:	ldr	x0, [x0, #16]
  42b4ac:	cbz	x0, 42b4b8 <ferror@plt+0x27ee8>
  42b4b0:	bl	402ee0 <fclose@plt>
  42b4b4:	str	xzr, [x19, #16]
  42b4b8:	ldr	x0, [x19, #24]
  42b4bc:	cbz	x0, 42b4c4 <ferror@plt+0x27ef4>
  42b4c0:	bl	4032a0 <free@plt>
  42b4c4:	ldr	x0, [x19, #80]
  42b4c8:	cbz	x0, 42b4d8 <ferror@plt+0x27f08>
  42b4cc:	ldrsb	w1, [x0, #3]
  42b4d0:	tbz	w1, #31, 42b4e4 <ferror@plt+0x27f14>
  42b4d4:	str	wzr, [x0, #4]
  42b4d8:	ldr	x19, [sp, #16]
  42b4dc:	ldp	x29, x30, [sp], #32
  42b4e0:	ret
  42b4e4:	ldr	x19, [sp, #16]
  42b4e8:	ldp	x29, x30, [sp], #32
  42b4ec:	b	4032a0 <free@plt>
  42b4f0:	stp	x29, x30, [sp, #-32]!
  42b4f4:	mov	x29, sp
  42b4f8:	stp	x19, x20, [sp, #16]
  42b4fc:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b500:	add	x20, x20, #0x230
  42b504:	ldr	x0, [x20, #8]
  42b508:	cbz	x0, 42b550 <ferror@plt+0x27f80>
  42b50c:	ldur	x19, [x0, #-8]
  42b510:	mov	x1, #0x58                  	// #88
  42b514:	madd	x19, x19, x1, x0
  42b518:	ldr	x0, [x20, #8]
  42b51c:	cmp	x0, x19
  42b520:	b.eq	42b534 <ferror@plt+0x27f64>  // b.none
  42b524:	sub	x19, x19, #0x58
  42b528:	mov	x0, x19
  42b52c:	bl	42b498 <ferror@plt+0x27ec8>
  42b530:	b	42b518 <ferror@plt+0x27f48>
  42b534:	mov	x0, x19
  42b538:	mov	x2, #0x58                  	// #88
  42b53c:	ldr	x1, [x0, #-8]!
  42b540:	mul	x1, x1, x2
  42b544:	add	x1, x1, #0x8
  42b548:	bl	45dbd0 <_obstack_memory_used@@Base+0x17e0>
  42b54c:	str	xzr, [x20, #8]
  42b550:	ldp	x19, x20, [sp, #16]
  42b554:	ldp	x29, x30, [sp], #32
  42b558:	ret
  42b55c:	stp	x29, x30, [sp, #-32]!
  42b560:	mov	w1, w0
  42b564:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b568:	mov	x29, sp
  42b56c:	ldr	x0, [x0, #560]
  42b570:	add	x3, sp, #0x18
  42b574:	mov	w2, #0x1                   	// #1
  42b578:	str	xzr, [sp, #24]
  42b57c:	bl	4403f0 <ferror@plt+0x3ce20>
  42b580:	cmp	w0, #0x1
  42b584:	cset	w0, eq  // eq = none
  42b588:	ldp	x29, x30, [sp], #32
  42b58c:	ret
  42b590:	stp	x29, x30, [sp, #-16]!
  42b594:	mov	w2, #0x0                   	// #0
  42b598:	mov	w1, #0x1                   	// #1
  42b59c:	mov	x29, sp
  42b5a0:	bl	42b034 <ferror@plt+0x27a64>
  42b5a4:	ldp	x29, x30, [sp], #16
  42b5a8:	ret
  42b5ac:	stp	x29, x30, [sp, #-112]!
  42b5b0:	mov	x29, sp
  42b5b4:	stp	x19, x20, [sp, #16]
  42b5b8:	stp	x21, x22, [sp, #32]
  42b5bc:	mov	x21, x0
  42b5c0:	str	x23, [sp, #48]
  42b5c4:	cbnz	x0, 42b5f8 <ferror@plt+0x28028>
  42b5c8:	mov	x0, x21
  42b5cc:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  42b5d0:	add	x1, x1, #0xc1a
  42b5d4:	bl	402f20 <fopen@plt>
  42b5d8:	mov	x20, x0
  42b5dc:	cbnz	x0, 42b610 <ferror@plt+0x28040>
  42b5e0:	mov	x0, x20
  42b5e4:	ldp	x19, x20, [sp, #16]
  42b5e8:	ldp	x21, x22, [sp, #32]
  42b5ec:	ldr	x23, [sp, #48]
  42b5f0:	ldp	x29, x30, [sp], #112
  42b5f4:	ret
  42b5f8:	bl	42b3b8 <ferror@plt+0x27de8>
  42b5fc:	mov	x0, x21
  42b600:	bl	42b244 <ferror@plt+0x27c74>
  42b604:	mov	x20, x0
  42b608:	cbnz	x0, 42b5e0 <ferror@plt+0x28010>
  42b60c:	b	42b5c8 <ferror@plt+0x27ff8>
  42b610:	bl	42b3b8 <ferror@plt+0x27de8>
  42b614:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b618:	add	x1, x0, #0x230
  42b61c:	mov	x23, x0
  42b620:	ldr	x19, [x1, #8]
  42b624:	mov	x1, x19
  42b628:	add	x3, x19, #0x580
  42b62c:	ldr	w22, [x1], #88
  42b630:	ldr	w0, [x1]
  42b634:	ldr	w4, [x19]
  42b638:	ldr	x2, [x1, #8]
  42b63c:	cmp	w0, w4
  42b640:	b.cc	42b6dc <ferror@plt+0x2810c>  // b.lo, b.ul, b.last
  42b644:	ldr	x4, [x19, #8]
  42b648:	cbz	x4, 42b654 <ferror@plt+0x28084>
  42b64c:	cmp	x2, #0x0
  42b650:	csel	x19, x19, x1, ne  // ne = any
  42b654:	cmp	w22, w0
  42b658:	csel	w22, w22, w0, cs  // cs = hs, nlast
  42b65c:	cbz	x2, 42b66c <ferror@plt+0x2809c>
  42b660:	add	x1, x1, #0x58
  42b664:	cmp	x3, x1
  42b668:	b.ne	42b630 <ferror@plt+0x28060>  // b.any
  42b66c:	ldr	x0, [x19, #16]
  42b670:	str	x21, [x19, #8]
  42b674:	cbz	x0, 42b67c <ferror@plt+0x280ac>
  42b678:	bl	402ee0 <fclose@plt>
  42b67c:	ldr	x0, [x19, #80]
  42b680:	str	x20, [x19, #16]
  42b684:	stp	xzr, xzr, [x19, #40]
  42b688:	str	xzr, [x19, #56]
  42b68c:	cbz	x0, 42b694 <ferror@plt+0x280c4>
  42b690:	str	wzr, [x0, #4]
  42b694:	ldr	x0, [x23, #560]
  42b698:	add	w22, w22, #0x1
  42b69c:	str	w22, [x19]
  42b6a0:	add	x2, sp, #0x4c
  42b6a4:	mov	x1, x21
  42b6a8:	str	wzr, [sp, #76]
  42b6ac:	bl	440dd0 <ferror@plt+0x3d800>
  42b6b0:	tst	w0, #0xff
  42b6b4:	b.eq	42b704 <ferror@plt+0x28134>  // b.none
  42b6b8:	ldr	w0, [sp, #76]
  42b6bc:	cmp	w0, #0x1
  42b6c0:	b.hi	42b6e4 <ferror@plt+0x28114>  // b.pmore
  42b6c4:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b6c8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b6cc:	add	x2, x2, #0x9d9
  42b6d0:	add	x0, x0, #0x971
  42b6d4:	mov	w1, #0x107                 	// #263
  42b6d8:	bl	403600 <ferror@plt+0x30>
  42b6dc:	mov	x19, x1
  42b6e0:	b	42b654 <ferror@plt+0x28084>
  42b6e4:	add	x8, sp, #0x50
  42b6e8:	bl	42b590 <ferror@plt+0x27fc0>
  42b6ec:	ldrsw	x0, [sp, #88]
  42b6f0:	mov	x20, x19
  42b6f4:	str	x0, [x19, #64]
  42b6f8:	mov	w0, #0x1                   	// #1
  42b6fc:	strb	w0, [x19, #72]
  42b700:	b	42b5e0 <ferror@plt+0x28010>
  42b704:	mov	x0, #0x0                   	// #0
  42b708:	b	42b6f0 <ferror@plt+0x28120>
  42b70c:	stp	x29, x30, [sp, #-16]!
  42b710:	mov	x29, sp
  42b714:	bl	42b5ac <ferror@plt+0x27fdc>
  42b718:	cbz	x0, 42b728 <ferror@plt+0x28158>
  42b71c:	ldrb	w0, [x0, #72]
  42b720:	ldp	x29, x30, [sp], #16
  42b724:	ret
  42b728:	mov	w0, #0x0                   	// #0
  42b72c:	b	42b720 <ferror@plt+0x28150>
  42b730:	stp	x29, x30, [sp, #-16]!
  42b734:	mov	w2, w1
  42b738:	mov	w1, #0x0                   	// #0
  42b73c:	mov	x29, sp
  42b740:	bl	42b034 <ferror@plt+0x27a64>
  42b744:	ldp	x29, x30, [sp], #16
  42b748:	ret
  42b74c:	stp	x29, x30, [sp, #-16]!
  42b750:	mov	x29, sp
  42b754:	bl	42b730 <ferror@plt+0x28160>
  42b758:	ldp	x29, x30, [sp], #16
  42b75c:	ret
  42b760:	stp	x29, x30, [sp, #-32]!
  42b764:	mov	w1, w0
  42b768:	mov	x29, sp
  42b76c:	stp	x19, x20, [sp, #16]
  42b770:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b774:	mov	w19, w0
  42b778:	ldr	x0, [x20, #560]
  42b77c:	bl	440360 <ferror@plt+0x3cd90>
  42b780:	cbz	w0, 42b7a0 <ferror@plt+0x281d0>
  42b784:	ldr	x0, [x20, #560]
  42b788:	mov	w1, w19
  42b78c:	ldp	x19, x20, [sp, #16]
  42b790:	mov	x3, #0x0                   	// #0
  42b794:	ldp	x29, x30, [sp], #32
  42b798:	mov	w2, #0x0                   	// #0
  42b79c:	b	4403f0 <ferror@plt+0x3ce20>
  42b7a0:	mov	w0, w19
  42b7a4:	ldp	x19, x20, [sp, #16]
  42b7a8:	ldp	x29, x30, [sp], #32
  42b7ac:	ret
  42b7b0:	mov	w1, w0
  42b7b4:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b7b8:	mov	x3, #0x0                   	// #0
  42b7bc:	mov	w2, #0x0                   	// #0
  42b7c0:	ldr	x0, [x0, #560]
  42b7c4:	b	4403f0 <ferror@plt+0x3ce20>
  42b7c8:	stp	x29, x30, [sp, #-48]!
  42b7cc:	mov	x29, sp
  42b7d0:	stp	x19, x20, [sp, #16]
  42b7d4:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b7d8:	stp	x21, x22, [sp, #32]
  42b7dc:	mov	w21, w1
  42b7e0:	mov	w1, w0
  42b7e4:	ldr	x0, [x19, #560]
  42b7e8:	mov	w22, w2
  42b7ec:	bl	4401e0 <ferror@plt+0x3cc10>
  42b7f0:	mov	w20, w0
  42b7f4:	ldr	x0, [x19, #560]
  42b7f8:	mov	w1, w21
  42b7fc:	bl	4400fc <ferror@plt+0x3cb2c>
  42b800:	mov	x21, x0
  42b804:	ldr	x0, [x19, #560]
  42b808:	mov	w1, w22
  42b80c:	bl	4400fc <ferror@plt+0x3cb2c>
  42b810:	bfxil	x0, x21, #0, #32
  42b814:	mov	x2, x0
  42b818:	mov	w1, w20
  42b81c:	ldr	x0, [x19, #560]
  42b820:	mov	x3, #0x0                   	// #0
  42b824:	ldp	x19, x20, [sp, #16]
  42b828:	ldp	x21, x22, [sp, #32]
  42b82c:	ldp	x29, x30, [sp], #48
  42b830:	b	43fefc <ferror@plt+0x3c92c>
  42b834:	stp	x29, x30, [sp, #-32]!
  42b838:	mov	x29, sp
  42b83c:	stp	x19, x20, [sp, #16]
  42b840:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b844:	mov	x19, x1
  42b848:	mov	w1, w0
  42b84c:	ldr	x0, [x20, #560]
  42b850:	bl	4401e0 <ferror@plt+0x3cc10>
  42b854:	mov	w1, w0
  42b858:	mov	x2, x19
  42b85c:	mov	x3, #0x0                   	// #0
  42b860:	ldr	x0, [x20, #560]
  42b864:	ldp	x19, x20, [sp, #16]
  42b868:	ldp	x29, x30, [sp], #32
  42b86c:	b	43fefc <ferror@plt+0x3c92c>
  42b870:	stp	x29, x30, [sp, #-176]!
  42b874:	mov	x29, sp
  42b878:	stp	x21, x22, [sp, #32]
  42b87c:	adrp	x22, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42b880:	add	x1, sp, #0x48
  42b884:	ldr	x0, [x22, #560]
  42b888:	stp	x19, x20, [sp, #16]
  42b88c:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  42b890:	str	x23, [sp, #48]
  42b894:	stp	xzr, xzr, [sp, #72]
  42b898:	stp	xzr, xzr, [sp, #88]
  42b89c:	stp	xzr, xzr, [sp, #104]
  42b8a0:	stp	xzr, xzr, [sp, #120]
  42b8a4:	stp	xzr, xzr, [sp, #136]
  42b8a8:	stp	xzr, xzr, [sp, #152]
  42b8ac:	str	xzr, [sp, #168]
  42b8b0:	bl	440e88 <ferror@plt+0x3d8b8>
  42b8b4:	ldp	x2, x0, [sp, #128]
  42b8b8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b8bc:	ldr	x21, [sp, #88]
  42b8c0:	add	x1, x1, #0x9e9
  42b8c4:	ldr	x20, [sp, #144]
  42b8c8:	add	x21, x21, x2
  42b8cc:	ldr	x2, [sp, #96]
  42b8d0:	add	x23, x0, x20
  42b8d4:	add	x21, x21, x20
  42b8d8:	add	x0, x0, x2
  42b8dc:	add	x20, x0, x20
  42b8e0:	ldr	x0, [x19, #1264]
  42b8e4:	ldr	x2, [sp, #104]
  42b8e8:	bl	403590 <fprintf@plt>
  42b8ec:	ldr	x0, [sp, #104]
  42b8f0:	cbz	x0, 42b90c <ferror@plt+0x2833c>
  42b8f4:	ldr	x2, [sp, #112]
  42b8f8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b8fc:	add	x1, x1, #0xa1e
  42b900:	sdiv	x2, x2, x0
  42b904:	ldr	x0, [x19, #1264]
  42b908:	bl	403590 <fprintf@plt>
  42b90c:	ldr	x1, [x19, #1264]
  42b910:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b914:	add	x0, x0, #0xa53
  42b918:	bl	402d60 <fputs@plt>
  42b91c:	ldr	x2, [sp, #80]
  42b920:	mov	x1, #0x27ff                	// #10239
  42b924:	ldr	x0, [x19, #1264]
  42b928:	cmp	x2, x1
  42b92c:	b.gt	42bb8c <ferror@plt+0x285bc>
  42b930:	mov	w3, #0x20                  	// #32
  42b934:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b938:	add	x1, x1, #0xa8b
  42b93c:	bl	403590 <fprintf@plt>
  42b940:	ldr	x2, [sp, #96]
  42b944:	mov	x1, #0x27ff                	// #10239
  42b948:	ldr	x0, [x19, #1264]
  42b94c:	cmp	x2, x1
  42b950:	b.gt	42bbb0 <ferror@plt+0x285e0>
  42b954:	mov	w3, #0x20                  	// #32
  42b958:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b95c:	add	x1, x1, #0xab8
  42b960:	bl	403590 <fprintf@plt>
  42b964:	ldr	x2, [sp, #72]
  42b968:	mov	x1, #0x27ff                	// #10239
  42b96c:	ldr	x0, [x19, #1264]
  42b970:	cmp	x2, x1
  42b974:	b.gt	42bbd4 <ferror@plt+0x28604>
  42b978:	mov	w3, #0x20                  	// #32
  42b97c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b980:	add	x1, x1, #0xae5
  42b984:	bl	403590 <fprintf@plt>
  42b988:	ldr	x2, [sp, #88]
  42b98c:	mov	x1, #0x27ff                	// #10239
  42b990:	ldr	x0, [x19, #1264]
  42b994:	cmp	x2, x1
  42b998:	b.gt	42bbf8 <ferror@plt+0x28628>
  42b99c:	mov	w3, #0x20                  	// #32
  42b9a0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b9a4:	add	x1, x1, #0xb12
  42b9a8:	bl	403590 <fprintf@plt>
  42b9ac:	ldr	x2, [sp, #120]
  42b9b0:	mov	x1, #0x27ff                	// #10239
  42b9b4:	ldr	x0, [x19, #1264]
  42b9b8:	cmp	x2, x1
  42b9bc:	b.gt	42bc1c <ferror@plt+0x2864c>
  42b9c0:	mov	w3, #0x20                  	// #32
  42b9c4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b9c8:	add	x1, x1, #0xb3f
  42b9cc:	bl	403590 <fprintf@plt>
  42b9d0:	ldr	x2, [sp, #136]
  42b9d4:	mov	x1, #0x27ff                	// #10239
  42b9d8:	ldr	x0, [x19, #1264]
  42b9dc:	cmp	x2, x1
  42b9e0:	b.gt	42bc40 <ferror@plt+0x28670>
  42b9e4:	mov	w3, #0x20                  	// #32
  42b9e8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42b9ec:	add	x1, x1, #0xb6c
  42b9f0:	bl	403590 <fprintf@plt>
  42b9f4:	ldr	x2, [sp, #144]
  42b9f8:	mov	x1, #0x27ff                	// #10239
  42b9fc:	ldr	x0, [x19, #1264]
  42ba00:	cmp	x2, x1
  42ba04:	b.gt	42bc64 <ferror@plt+0x28694>
  42ba08:	mov	w3, #0x20                  	// #32
  42ba0c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ba10:	add	x1, x1, #0xb99
  42ba14:	bl	403590 <fprintf@plt>
  42ba18:	mov	x1, #0x27ff                	// #10239
  42ba1c:	cmp	x23, x1
  42ba20:	ldr	x0, [x19, #1264]
  42ba24:	b.le	42bc94 <ferror@plt+0x286c4>
  42ba28:	mov	w1, #0x9fffff              	// #10485759
  42ba2c:	cmp	x23, x1
  42ba30:	b.gt	42bc88 <ferror@plt+0x286b8>
  42ba34:	asr	x2, x23, #10
  42ba38:	mov	w3, #0x6b                  	// #107
  42ba3c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ba40:	add	x1, x1, #0xbc6
  42ba44:	bl	403590 <fprintf@plt>
  42ba48:	ldr	x2, [sp, #152]
  42ba4c:	mov	x1, #0x27ff                	// #10239
  42ba50:	ldr	x0, [x19, #1264]
  42ba54:	cmp	x2, x1
  42ba58:	b.gt	42bca0 <ferror@plt+0x286d0>
  42ba5c:	mov	w3, #0x20                  	// #32
  42ba60:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ba64:	add	x1, x1, #0xbf3
  42ba68:	bl	403590 <fprintf@plt>
  42ba6c:	mov	x1, #0x27ff                	// #10239
  42ba70:	cmp	x21, x1
  42ba74:	ldr	x0, [x19, #1264]
  42ba78:	b.le	42bcd0 <ferror@plt+0x28700>
  42ba7c:	mov	w1, #0x9fffff              	// #10485759
  42ba80:	cmp	x21, x1
  42ba84:	b.gt	42bcc4 <ferror@plt+0x286f4>
  42ba88:	asr	x2, x21, #10
  42ba8c:	mov	w3, #0x6b                  	// #107
  42ba90:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ba94:	add	x1, x1, #0xc20
  42ba98:	bl	403590 <fprintf@plt>
  42ba9c:	mov	x1, #0x27ff                	// #10239
  42baa0:	cmp	x20, x1
  42baa4:	ldr	x0, [x19, #1264]
  42baa8:	b.le	42bce8 <ferror@plt+0x28718>
  42baac:	mov	w1, #0x9fffff              	// #10485759
  42bab0:	cmp	x20, x1
  42bab4:	b.gt	42bcdc <ferror@plt+0x2870c>
  42bab8:	asr	x2, x20, #10
  42babc:	mov	w3, #0x6b                  	// #107
  42bac0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bac4:	add	x1, x1, #0xc4d
  42bac8:	bl	403590 <fprintf@plt>
  42bacc:	ldr	x2, [sp, #160]
  42bad0:	mov	x1, #0x27ff                	// #10239
  42bad4:	ldr	x0, [x19, #1264]
  42bad8:	cmp	x2, x1
  42badc:	b.gt	42bcf4 <ferror@plt+0x28724>
  42bae0:	mov	w3, #0x20                  	// #32
  42bae4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bae8:	add	x1, x1, #0xc7a
  42baec:	bl	403590 <fprintf@plt>
  42baf0:	ldr	x2, [sp, #168]
  42baf4:	mov	x1, #0x27ff                	// #10239
  42baf8:	ldr	x0, [x19, #1264]
  42bafc:	cmp	x2, x1
  42bb00:	b.gt	42bd18 <ferror@plt+0x28748>
  42bb04:	mov	w3, #0x20                  	// #32
  42bb08:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bb0c:	add	x1, x1, #0xca7
  42bb10:	bl	403590 <fprintf@plt>
  42bb14:	ldr	x1, [x22, #560]
  42bb18:	ldr	x0, [x19, #1264]
  42bb1c:	ldr	w2, [x1, #124]
  42bb20:	mov	w1, #0x27ff                	// #10239
  42bb24:	cmp	w2, w1
  42bb28:	b.hi	42bd3c <ferror@plt+0x2876c>  // b.pmore
  42bb2c:	mov	w2, w2
  42bb30:	mov	w3, #0x20                  	// #32
  42bb34:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bb38:	add	x1, x1, #0xcd4
  42bb3c:	bl	403590 <fprintf@plt>
  42bb40:	ldr	x1, [x22, #560]
  42bb44:	ldr	x0, [x19, #1264]
  42bb48:	ldr	w2, [x1, #128]
  42bb4c:	mov	w1, #0x27ff                	// #10239
  42bb50:	cmp	w2, w1
  42bb54:	b.hi	42bd60 <ferror@plt+0x28790>  // b.pmore
  42bb58:	mov	w2, w2
  42bb5c:	mov	w3, #0x20                  	// #32
  42bb60:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bb64:	add	x1, x1, #0xd01
  42bb68:	bl	403590 <fprintf@plt>
  42bb6c:	ldr	x1, [x19, #1264]
  42bb70:	mov	w0, #0xa                   	// #10
  42bb74:	bl	402e40 <fputc@plt>
  42bb78:	ldp	x19, x20, [sp, #16]
  42bb7c:	ldp	x21, x22, [sp, #32]
  42bb80:	ldr	x23, [sp, #48]
  42bb84:	ldp	x29, x30, [sp], #176
  42bb88:	ret
  42bb8c:	mov	w1, #0x9fffff              	// #10485759
  42bb90:	cmp	x2, x1
  42bb94:	b.gt	42bba4 <ferror@plt+0x285d4>
  42bb98:	asr	x2, x2, #10
  42bb9c:	mov	w3, #0x6b                  	// #107
  42bba0:	b	42b934 <ferror@plt+0x28364>
  42bba4:	asr	x2, x2, #20
  42bba8:	mov	w3, #0x4d                  	// #77
  42bbac:	b	42b934 <ferror@plt+0x28364>
  42bbb0:	mov	w1, #0x9fffff              	// #10485759
  42bbb4:	cmp	x2, x1
  42bbb8:	b.gt	42bbc8 <ferror@plt+0x285f8>
  42bbbc:	asr	x2, x2, #10
  42bbc0:	mov	w3, #0x6b                  	// #107
  42bbc4:	b	42b958 <ferror@plt+0x28388>
  42bbc8:	asr	x2, x2, #20
  42bbcc:	mov	w3, #0x4d                  	// #77
  42bbd0:	b	42b958 <ferror@plt+0x28388>
  42bbd4:	mov	w1, #0x9fffff              	// #10485759
  42bbd8:	cmp	x2, x1
  42bbdc:	b.gt	42bbec <ferror@plt+0x2861c>
  42bbe0:	asr	x2, x2, #10
  42bbe4:	mov	w3, #0x6b                  	// #107
  42bbe8:	b	42b97c <ferror@plt+0x283ac>
  42bbec:	asr	x2, x2, #20
  42bbf0:	mov	w3, #0x4d                  	// #77
  42bbf4:	b	42b97c <ferror@plt+0x283ac>
  42bbf8:	mov	w1, #0x9fffff              	// #10485759
  42bbfc:	cmp	x2, x1
  42bc00:	b.gt	42bc10 <ferror@plt+0x28640>
  42bc04:	asr	x2, x2, #10
  42bc08:	mov	w3, #0x6b                  	// #107
  42bc0c:	b	42b9a0 <ferror@plt+0x283d0>
  42bc10:	asr	x2, x2, #20
  42bc14:	mov	w3, #0x4d                  	// #77
  42bc18:	b	42b9a0 <ferror@plt+0x283d0>
  42bc1c:	mov	w1, #0x9fffff              	// #10485759
  42bc20:	cmp	x2, x1
  42bc24:	b.gt	42bc34 <ferror@plt+0x28664>
  42bc28:	asr	x2, x2, #10
  42bc2c:	mov	w3, #0x6b                  	// #107
  42bc30:	b	42b9c4 <ferror@plt+0x283f4>
  42bc34:	asr	x2, x2, #20
  42bc38:	mov	w3, #0x4d                  	// #77
  42bc3c:	b	42b9c4 <ferror@plt+0x283f4>
  42bc40:	mov	w1, #0x9fffff              	// #10485759
  42bc44:	cmp	x2, x1
  42bc48:	b.gt	42bc58 <ferror@plt+0x28688>
  42bc4c:	asr	x2, x2, #10
  42bc50:	mov	w3, #0x6b                  	// #107
  42bc54:	b	42b9e8 <ferror@plt+0x28418>
  42bc58:	asr	x2, x2, #20
  42bc5c:	mov	w3, #0x4d                  	// #77
  42bc60:	b	42b9e8 <ferror@plt+0x28418>
  42bc64:	mov	w1, #0x9fffff              	// #10485759
  42bc68:	cmp	x2, x1
  42bc6c:	b.gt	42bc7c <ferror@plt+0x286ac>
  42bc70:	asr	x2, x2, #10
  42bc74:	mov	w3, #0x6b                  	// #107
  42bc78:	b	42ba0c <ferror@plt+0x2843c>
  42bc7c:	asr	x2, x2, #20
  42bc80:	mov	w3, #0x4d                  	// #77
  42bc84:	b	42ba0c <ferror@plt+0x2843c>
  42bc88:	asr	x2, x23, #20
  42bc8c:	mov	w3, #0x4d                  	// #77
  42bc90:	b	42ba3c <ferror@plt+0x2846c>
  42bc94:	mov	x2, x23
  42bc98:	mov	w3, #0x20                  	// #32
  42bc9c:	b	42ba3c <ferror@plt+0x2846c>
  42bca0:	mov	w1, #0x9fffff              	// #10485759
  42bca4:	cmp	x2, x1
  42bca8:	b.gt	42bcb8 <ferror@plt+0x286e8>
  42bcac:	asr	x2, x2, #10
  42bcb0:	mov	w3, #0x6b                  	// #107
  42bcb4:	b	42ba60 <ferror@plt+0x28490>
  42bcb8:	asr	x2, x2, #20
  42bcbc:	mov	w3, #0x4d                  	// #77
  42bcc0:	b	42ba60 <ferror@plt+0x28490>
  42bcc4:	asr	x2, x21, #20
  42bcc8:	mov	w3, #0x4d                  	// #77
  42bccc:	b	42ba90 <ferror@plt+0x284c0>
  42bcd0:	mov	x2, x21
  42bcd4:	mov	w3, #0x20                  	// #32
  42bcd8:	b	42ba90 <ferror@plt+0x284c0>
  42bcdc:	asr	x2, x20, #20
  42bce0:	mov	w3, #0x4d                  	// #77
  42bce4:	b	42bac0 <ferror@plt+0x284f0>
  42bce8:	mov	x2, x20
  42bcec:	mov	w3, #0x20                  	// #32
  42bcf0:	b	42bac0 <ferror@plt+0x284f0>
  42bcf4:	mov	w1, #0x9fffff              	// #10485759
  42bcf8:	cmp	x2, x1
  42bcfc:	b.gt	42bd0c <ferror@plt+0x2873c>
  42bd00:	asr	x2, x2, #10
  42bd04:	mov	w3, #0x6b                  	// #107
  42bd08:	b	42bae4 <ferror@plt+0x28514>
  42bd0c:	asr	x2, x2, #20
  42bd10:	mov	w3, #0x4d                  	// #77
  42bd14:	b	42bae4 <ferror@plt+0x28514>
  42bd18:	mov	w1, #0x9fffff              	// #10485759
  42bd1c:	cmp	x2, x1
  42bd20:	b.gt	42bd30 <ferror@plt+0x28760>
  42bd24:	asr	x2, x2, #10
  42bd28:	mov	w3, #0x6b                  	// #107
  42bd2c:	b	42bb08 <ferror@plt+0x28538>
  42bd30:	asr	x2, x2, #20
  42bd34:	mov	w3, #0x4d                  	// #77
  42bd38:	b	42bb08 <ferror@plt+0x28538>
  42bd3c:	mov	w1, #0x9fffff              	// #10485759
  42bd40:	cmp	w2, w1
  42bd44:	b.hi	42bd54 <ferror@plt+0x28784>  // b.pmore
  42bd48:	lsr	w2, w2, #10
  42bd4c:	mov	w3, #0x6b                  	// #107
  42bd50:	b	42bb34 <ferror@plt+0x28564>
  42bd54:	lsr	w2, w2, #20
  42bd58:	mov	w3, #0x4d                  	// #77
  42bd5c:	b	42bb34 <ferror@plt+0x28564>
  42bd60:	mov	w1, #0x9fffff              	// #10485759
  42bd64:	cmp	w2, w1
  42bd68:	b.hi	42bd78 <ferror@plt+0x287a8>  // b.pmore
  42bd6c:	lsr	w2, w2, #10
  42bd70:	mov	w3, #0x6b                  	// #107
  42bd74:	b	42bb60 <ferror@plt+0x28590>
  42bd78:	lsr	w2, w2, #20
  42bd7c:	mov	w3, #0x4d                  	// #77
  42bd80:	b	42bb60 <ferror@plt+0x28590>
  42bd84:	stp	x29, x30, [sp, #-48]!
  42bd88:	mov	x3, #0x0                   	// #0
  42bd8c:	mov	x29, sp
  42bd90:	stp	x19, x20, [sp, #16]
  42bd94:	mov	x20, x0
  42bd98:	mov	w19, w1
  42bd9c:	mov	x1, #0x0                   	// #0
  42bda0:	str	w19, [x20]
  42bda4:	sbfiz	x0, x19, #2, #32
  42bda8:	str	x21, [sp, #32]
  42bdac:	mov	x21, x2
  42bdb0:	mov	x2, #0x0                   	// #0
  42bdb4:	bl	4103c0 <ferror@plt+0xcdf0>
  42bdb8:	mov	x3, #0x0                   	// #0
  42bdbc:	str	x0, [x20, #8]
  42bdc0:	cmp	w19, w3
  42bdc4:	b.le	42bdd8 <ferror@plt+0x28808>
  42bdc8:	ldr	w1, [x21, x3, lsl #2]
  42bdcc:	str	w1, [x0, x3, lsl #2]
  42bdd0:	add	x3, x3, #0x1
  42bdd4:	b	42bdc0 <ferror@plt+0x287f0>
  42bdd8:	ldp	x19, x20, [sp, #16]
  42bddc:	ldr	x21, [sp, #32]
  42bde0:	ldp	x29, x30, [sp], #48
  42bde4:	ret
  42bde8:	stp	x29, x30, [sp, #-64]!
  42bdec:	mov	x3, #0x1                   	// #1
  42bdf0:	mov	x2, #0x0                   	// #0
  42bdf4:	mov	x29, sp
  42bdf8:	adrp	x1, 42c000 <ferror@plt+0x28a30>
  42bdfc:	add	x1, x1, #0xea0
  42be00:	stp	x19, x20, [sp, #16]
  42be04:	stp	x21, x22, [sp, #32]
  42be08:	mov	x21, x0
  42be0c:	mov	x0, #0x30                  	// #48
  42be10:	str	x23, [sp, #48]
  42be14:	bl	4103c0 <ferror@plt+0xcdf0>
  42be18:	mov	x19, x0
  42be1c:	mov	w23, #0x1                   	// #1
  42be20:	strb	w23, [x0, #44]
  42be24:	mov	x0, #0x40                  	// #64
  42be28:	stp	xzr, xzr, [x19, #16]
  42be2c:	str	xzr, [x19, #32]
  42be30:	bl	41fad8 <ferror@plt+0x1c508>
  42be34:	mov	w20, w0
  42be38:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42be3c:	add	x0, x0, #0xa78
  42be40:	ubfiz	x1, x20, #4, #32
  42be44:	ldr	w22, [x0, x1]
  42be48:	mov	w0, w23
  42be4c:	mov	x1, x22
  42be50:	bl	42b2bc <ferror@plt+0x27cec>
  42be54:	ldr	x23, [sp, #48]
  42be58:	str	x19, [x21]
  42be5c:	stp	x0, x22, [x19]
  42be60:	str	w20, [x19, #40]
  42be64:	ldp	x19, x20, [sp, #16]
  42be68:	ldp	x21, x22, [sp, #32]
  42be6c:	ldp	x29, x30, [sp], #64
  42be70:	ret
  42be74:	stp	x29, x30, [sp, #-32]!
  42be78:	mov	w1, w0
  42be7c:	mov	x3, #0x0                   	// #0
  42be80:	mov	x29, sp
  42be84:	str	x19, [sp, #16]
  42be88:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42be8c:	mov	w2, #0x1                   	// #1
  42be90:	ldr	x0, [x19, #560]
  42be94:	bl	4403f0 <ferror@plt+0x3ce20>
  42be98:	mov	w1, w0
  42be9c:	ldr	x0, [x19, #560]
  42bea0:	bl	4400fc <ferror@plt+0x3cb2c>
  42bea4:	ldr	x19, [sp, #16]
  42bea8:	ldp	x29, x30, [sp], #32
  42beac:	ret
  42beb0:	stp	x29, x30, [sp, #-80]!
  42beb4:	mov	x29, sp
  42beb8:	stp	x19, x20, [sp, #16]
  42bebc:	stp	x21, x22, [sp, #32]
  42bec0:	stp	x23, x24, [sp, #48]
  42bec4:	stp	x25, x26, [sp, #64]
  42bec8:	cbnz	x2, 42bee4 <ferror@plt+0x28914>
  42becc:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bed0:	add	x2, x2, #0xd2e
  42bed4:	mov	w1, #0x50d                 	// #1293
  42bed8:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bedc:	add	x0, x0, #0x971
  42bee0:	bl	403600 <ferror@plt+0x30>
  42bee4:	mov	x22, x3
  42bee8:	cbnz	x3, 42befc <ferror@plt+0x2892c>
  42beec:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42bef0:	mov	w1, #0x50e                 	// #1294
  42bef4:	add	x2, x2, #0xd2e
  42bef8:	b	42bed8 <ferror@plt+0x28908>
  42befc:	mov	x19, x0
  42bf00:	mov	x23, x2
  42bf04:	mov	w0, w1
  42bf08:	bl	42be74 <ferror@plt+0x288a4>
  42bf0c:	mov	w21, w0
  42bf10:	ldr	x20, [x19]
  42bf14:	ldr	w1, [x20, #32]
  42bf18:	ldr	w26, [x20, #40]
  42bf1c:	add	w1, w1, #0x1
  42bf20:	str	w1, [x20, #32]
  42bf24:	mov	w1, w26
  42bf28:	bl	41e73c <ferror@plt+0x1b16c>
  42bf2c:	mov	w19, w0
  42bf30:	ldr	x24, [x20]
  42bf34:	ubfiz	x0, x19, #4, #32
  42bf38:	add	x2, x24, x0
  42bf3c:	ldr	w0, [x24, x0]
  42bf40:	cbz	w0, 42bf90 <ferror@plt+0x289c0>
  42bf44:	cmp	w21, w0
  42bf48:	b.eq	42bf90 <ferror@plt+0x289c0>  // b.none
  42bf4c:	mov	w1, w26
  42bf50:	mov	w0, w21
  42bf54:	ldr	x25, [x20, #8]
  42bf58:	bl	41e774 <ferror@plt+0x1b1a4>
  42bf5c:	ldr	w1, [x20, #36]
  42bf60:	add	w19, w19, w0
  42bf64:	add	w1, w1, #0x1
  42bf68:	str	w1, [x20, #36]
  42bf6c:	cmp	x25, w19, uxtw
  42bf70:	b.hi	42bf78 <ferror@plt+0x289a8>  // b.pmore
  42bf74:	sub	w19, w19, w25
  42bf78:	ubfiz	x1, x19, #4, #32
  42bf7c:	add	x2, x24, x1
  42bf80:	ldr	w1, [x24, x1]
  42bf84:	cbz	w1, 42bf90 <ferror@plt+0x289c0>
  42bf88:	cmp	w21, w1
  42bf8c:	b.ne	42bf5c <ferror@plt+0x2898c>  // b.any
  42bf90:	ldr	w0, [x2]
  42bf94:	cbz	w0, 42bfc8 <ferror@plt+0x289f8>
  42bf98:	ldr	x0, [x2, #8]
  42bf9c:	ldr	w1, [x0]
  42bfa0:	ldr	x0, [x0, #8]
  42bfa4:	str	w1, [x23]
  42bfa8:	str	x0, [x22]
  42bfac:	mov	w0, #0x1                   	// #1
  42bfb0:	ldp	x19, x20, [sp, #16]
  42bfb4:	ldp	x21, x22, [sp, #32]
  42bfb8:	ldp	x23, x24, [sp, #48]
  42bfbc:	ldp	x25, x26, [sp, #64]
  42bfc0:	ldp	x29, x30, [sp], #80
  42bfc4:	ret
  42bfc8:	mov	w0, #0x0                   	// #0
  42bfcc:	b	42bfb0 <ferror@plt+0x289e0>
  42bfd0:	stp	x29, x30, [sp, #-112]!
  42bfd4:	mov	x29, sp
  42bfd8:	stp	x19, x20, [sp, #16]
  42bfdc:	mov	x19, x0
  42bfe0:	stp	x21, x22, [sp, #32]
  42bfe4:	mov	x22, x2
  42bfe8:	stp	x23, x24, [sp, #48]
  42bfec:	str	x25, [sp, #64]
  42bff0:	mov	x25, x1
  42bff4:	bl	42af6c <ferror@plt+0x2799c>
  42bff8:	ldp	x2, x0, [x19, #40]
  42bffc:	subs	x2, x2, x0
  42c000:	b.ne	42c020 <ferror@plt+0x28a50>  // b.any
  42c004:	mov	w0, #0x0                   	// #0
  42c008:	ldp	x19, x20, [sp, #16]
  42c00c:	ldp	x21, x22, [sp, #32]
  42c010:	ldp	x23, x24, [sp, #48]
  42c014:	ldr	x25, [sp, #64]
  42c018:	ldp	x29, x30, [sp], #112
  42c01c:	ret
  42c020:	ldr	x23, [x19, #24]
  42c024:	mov	w1, #0xa                   	// #10
  42c028:	add	x23, x23, x0
  42c02c:	mov	x0, x23
  42c030:	bl	4033d0 <memchr@plt>
  42c034:	mov	x21, x0
  42c038:	cbnz	x0, 42c0a4 <ferror@plt+0x28ad4>
  42c03c:	mov	x0, x19
  42c040:	bl	42af6c <ferror@plt+0x2799c>
  42c044:	tst	w0, #0xff
  42c048:	ldr	x20, [x19, #24]
  42c04c:	ldr	x0, [x19, #40]
  42c050:	b.eq	42c16c <ferror@plt+0x28b9c>  // b.none
  42c054:	ldr	x2, [x19, #48]
  42c058:	mov	w1, #0xa                   	// #10
  42c05c:	add	x23, x20, x2
  42c060:	sub	x2, x0, x2
  42c064:	mov	x0, x23
  42c068:	bl	4033d0 <memchr@plt>
  42c06c:	mov	x20, x0
  42c070:	cbz	x0, 42c03c <ferror@plt+0x28a6c>
  42c074:	add	x21, x0, #0x1
  42c078:	strb	wzr, [x19, #72]
  42c07c:	ldr	x0, [x19, #16]
  42c080:	bl	4035d0 <ferror@plt>
  42c084:	cbnz	w0, 42c004 <ferror@plt+0x28a34>
  42c088:	cbnz	x20, 42c0b4 <ferror@plt+0x28ae4>
  42c08c:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c090:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c094:	add	x2, x2, #0xd47
  42c098:	add	x0, x0, #0x971
  42c09c:	mov	w1, #0x241                 	// #577
  42c0a0:	bl	403600 <ferror@plt+0x30>
  42c0a4:	mov	x20, x0
  42c0a8:	add	x21, x0, #0x1
  42c0ac:	strb	wzr, [x19, #72]
  42c0b0:	b	42c07c <ferror@plt+0x28aac>
  42c0b4:	ldp	x0, x4, [x19, #40]
  42c0b8:	sub	x24, x20, x23
  42c0bc:	cmp	x4, x0
  42c0c0:	b.cs	42c0c8 <ferror@plt+0x28af8>  // b.hs, b.nlast
  42c0c4:	str	x23, [x25]
  42c0c8:	ldp	x1, x3, [x19, #56]
  42c0cc:	add	x1, x1, #0x1
  42c0d0:	str	x1, [x19, #56]
  42c0d4:	cmp	x1, x3
  42c0d8:	b.hi	42c0f0 <ferror@plt+0x28b20>  // b.pmore
  42c0dc:	ldr	x0, [x19, #80]
  42c0e0:	cbz	x0, 42c138 <ferror@plt+0x28b68>
  42c0e4:	ldr	w0, [x0, #4]
  42c0e8:	cmp	w0, #0x63
  42c0ec:	b.ls	42c114 <ferror@plt+0x28b44>  // b.plast
  42c0f0:	cbz	x21, 42c10c <ferror@plt+0x28b3c>
  42c0f4:	ldr	x0, [x19, #24]
  42c0f8:	sub	x21, x21, x0
  42c0fc:	str	x21, [x19, #48]
  42c100:	mov	w0, #0x1                   	// #1
  42c104:	str	x24, [x22]
  42c108:	b	42c008 <ferror@plt+0x28a38>
  42c10c:	ldr	x21, [x19, #40]
  42c110:	b	42c0fc <ferror@plt+0x28b2c>
  42c114:	cmp	x3, #0x64
  42c118:	b.ls	42c144 <ferror@plt+0x28b74>  // b.plast
  42c11c:	cbz	w0, 42c14c <ferror@plt+0x28b7c>
  42c120:	mov	x2, #0x64                  	// #100
  42c124:	mul	x2, x1, x2
  42c128:	udiv	x2, x2, x3
  42c12c:	cmp	x2, w0, uxtw
  42c130:	b.cc	42c0f0 <ferror@plt+0x28b20>  // b.lo, b.ul, b.last
  42c134:	b	42c14c <ferror@plt+0x28b7c>
  42c138:	cmp	x3, #0x64
  42c13c:	b.hi	42c14c <ferror@plt+0x28b7c>  // b.pmore
  42c140:	mov	w0, #0x0                   	// #0
  42c144:	cmp	x1, w0, uxtw
  42c148:	b.ls	42c0f0 <ferror@plt+0x28b20>  // b.plast
  42c14c:	ldr	x0, [x19, #24]
  42c150:	stp	x1, x4, [sp, #88]
  42c154:	add	x1, sp, #0x58
  42c158:	sub	x20, x20, x0
  42c15c:	add	x0, x19, #0x50
  42c160:	str	x20, [sp, #104]
  42c164:	bl	42cff8 <ferror@plt+0x29a28>
  42c168:	b	42c0f0 <ferror@plt+0x28b20>
  42c16c:	add	x20, x20, x0
  42c170:	mov	w0, #0x1                   	// #1
  42c174:	strb	w0, [x19, #72]
  42c178:	b	42c07c <ferror@plt+0x28aac>
  42c17c:	stp	x29, x30, [sp, #-64]!
  42c180:	mov	x29, sp
  42c184:	stp	x19, x20, [sp, #16]
  42c188:	str	xzr, [sp, #40]
  42c18c:	cbnz	w1, 42c1a4 <ferror@plt+0x28bd4>
  42c190:	mov	x0, #0x0                   	// #0
  42c194:	mov	x1, #0x0                   	// #0
  42c198:	ldp	x19, x20, [sp, #16]
  42c19c:	ldp	x29, x30, [sp], #64
  42c1a0:	ret
  42c1a4:	mov	w19, w1
  42c1a8:	bl	42b5ac <ferror@plt+0x27fdc>
  42c1ac:	mov	x20, x0
  42c1b0:	cbz	x0, 42c190 <ferror@plt+0x28bc0>
  42c1b4:	ldr	x1, [x20, #56]
  42c1b8:	sxtw	x0, w19
  42c1bc:	cmp	x1, w19, sxtw
  42c1c0:	b.cc	42c200 <ferror@plt+0x28c30>  // b.lo, b.ul, b.last
  42c1c4:	ldr	x2, [x20, #80]
  42c1c8:	cbz	x2, 42c1fc <ferror@plt+0x28c2c>
  42c1cc:	ldr	w4, [x2, #4]
  42c1d0:	cbz	w4, 42c1fc <ferror@plt+0x28c2c>
  42c1d4:	ldr	x3, [x20, #64]
  42c1d8:	cmp	x3, #0x64
  42c1dc:	b.ls	42c22c <ferror@plt+0x28c5c>  // b.plast
  42c1e0:	cmp	x0, x3
  42c1e4:	b.hi	42c278 <ferror@plt+0x28ca8>  // b.pmore
  42c1e8:	mov	w1, #0x64                  	// #100
  42c1ec:	smull	x19, w19, w1
  42c1f0:	udiv	x19, x19, x3
  42c1f4:	cmp	x19, w4, uxtw
  42c1f8:	b.cc	42c280 <ferror@plt+0x28cb0>  // b.lo, b.ul, b.last
  42c1fc:	stp	xzr, xzr, [x20, #48]
  42c200:	sub	x19, x0, #0x1
  42c204:	ldr	x0, [x20, #56]
  42c208:	add	x2, sp, #0x38
  42c20c:	cmp	x0, x19
  42c210:	b.cs	42c2b0 <ferror@plt+0x28ce0>  // b.hs, b.nlast
  42c214:	add	x1, sp, #0x30
  42c218:	mov	x0, x20
  42c21c:	bl	42bfd0 <ferror@plt+0x28a00>
  42c220:	tst	w0, #0xff
  42c224:	b.ne	42c204 <ferror@plt+0x28c34>  // b.any
  42c228:	b	42c190 <ferror@plt+0x28bc0>
  42c22c:	sub	w1, w19, #0x1
  42c230:	sub	w19, w3, #0x1
  42c234:	mov	w5, #0x18                  	// #24
  42c238:	mov	x4, #0x8                   	// #8
  42c23c:	cmp	x0, x3
  42c240:	umaddl	x1, w1, w5, x4
  42c244:	umaddl	x19, w19, w5, x4
  42c248:	add	x1, x2, x1
  42c24c:	add	x19, x2, x19
  42c250:	csel	x1, x19, x1, hi  // hi = pmore
  42c254:	ldr	x2, [x1]
  42c258:	cmp	x0, x2
  42c25c:	b.cs	42c2d4 <ferror@plt+0x28d04>  // b.hs, b.nlast
  42c260:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c264:	add	x2, x2, #0xd55
  42c268:	mov	w1, #0x2b2                 	// #690
  42c26c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c270:	add	x0, x0, #0x971
  42c274:	bl	403600 <ferror@plt+0x30>
  42c278:	sub	w19, w4, #0x1
  42c27c:	b	42c1f4 <ferror@plt+0x28c24>
  42c280:	mov	x3, #0x18                  	// #24
  42c284:	madd	x1, x19, x3, x2
  42c288:	mov	w19, w19
  42c28c:	add	x1, x1, #0x8
  42c290:	madd	x19, x19, x3, x2
  42c294:	ldr	x2, [x19, #8]
  42c298:	cmp	x0, x2
  42c29c:	b.cs	42c2d4 <ferror@plt+0x28d04>  // b.hs, b.nlast
  42c2a0:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c2a4:	mov	w1, #0x2c1                 	// #705
  42c2a8:	add	x2, x2, #0xd55
  42c2ac:	b	42c26c <ferror@plt+0x28c9c>
  42c2b0:	add	x1, sp, #0x28
  42c2b4:	mov	x0, x20
  42c2b8:	bl	42bfd0 <ferror@plt+0x28a00>
  42c2bc:	tst	w0, #0xff
  42c2c0:	b.ne	42c2f8 <ferror@plt+0x28d28>  // b.any
  42c2c4:	b	42c190 <ferror@plt+0x28bc0>
  42c2c8:	sub	x2, x2, #0x1
  42c2cc:	stp	x3, x2, [x20, #48]
  42c2d0:	b	42c200 <ferror@plt+0x28c30>
  42c2d4:	ldp	x2, x3, [x1]
  42c2d8:	cmp	x0, x2
  42c2dc:	b.ne	42c2c8 <ferror@plt+0x28cf8>  // b.any
  42c2e0:	ldr	x0, [x20, #24]
  42c2e4:	add	x0, x0, x3
  42c2e8:	str	x0, [sp, #40]
  42c2ec:	ldr	x0, [x1, #16]
  42c2f0:	sub	x3, x0, x3
  42c2f4:	str	x3, [sp, #56]
  42c2f8:	ldr	x0, [sp, #40]
  42c2fc:	ldr	x1, [sp, #56]
  42c300:	b	42c198 <ferror@plt+0x28bc8>
  42c304:	stp	x29, x30, [sp, #-144]!
  42c308:	mov	w3, #0x2                   	// #2
  42c30c:	mov	w2, #0x0                   	// #0
  42c310:	mov	x29, sp
  42c314:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c318:	add	x1, x1, #0xd6b
  42c31c:	stp	x19, x20, [sp, #16]
  42c320:	mov	x19, x0
  42c324:	stp	x21, x22, [sp, #32]
  42c328:	stp	x23, x24, [sp, #48]
  42c32c:	mov	w23, #0x0                   	// #0
  42c330:	stp	x25, x26, [sp, #64]
  42c334:	adrp	x26, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c338:	stp	x27, x28, [sp, #80]
  42c33c:	bl	42b338 <ferror@plt+0x27d68>
  42c340:	add	x0, x26, #0xe4f
  42c344:	str	x0, [sp, #96]
  42c348:	adrp	x28, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42c34c:	add	x25, x28, #0x230
  42c350:	ldr	x20, [x28, #560]
  42c354:	ldr	w0, [x20, #12]
  42c358:	cmp	w23, w0
  42c35c:	b.cs	42c664 <ferror@plt+0x29094>  // b.hs, b.nlast
  42c360:	sub	w0, w0, #0x1
  42c364:	cmp	w23, w0
  42c368:	ldr	x27, [x20]
  42c36c:	b.ne	42c4e0 <ferror@plt+0x28f10>  // b.any
  42c370:	ldr	w24, [x20, #56]
  42c374:	mov	w22, #0x18                  	// #24
  42c378:	mov	w2, w23
  42c37c:	mov	x0, x19
  42c380:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c384:	smull	x22, w23, w22
  42c388:	add	x1, x1, #0xd7e
  42c38c:	bl	403590 <fprintf@plt>
  42c390:	add	x20, x27, x22
  42c394:	mov	w3, w24
  42c398:	mov	x0, x19
  42c39c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c3a0:	ldr	w2, [x27, x22]
  42c3a4:	add	x1, x1, #0x987
  42c3a8:	bl	403590 <fprintf@plt>
  42c3ac:	ldr	x2, [x20, #8]
  42c3b0:	mov	x0, x19
  42c3b4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c3b8:	add	x1, x1, #0xd90
  42c3bc:	bl	403590 <fprintf@plt>
  42c3c0:	ldr	w2, [x20, #16]
  42c3c4:	mov	x0, x19
  42c3c8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c3cc:	add	x1, x1, #0xd9c
  42c3d0:	bl	403590 <fprintf@plt>
  42c3d4:	ldrb	w2, [x20, #6]
  42c3d8:	mov	x0, x19
  42c3dc:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c3e0:	add	x1, x1, #0xdb4
  42c3e4:	bl	403590 <fprintf@plt>
  42c3e8:	ldrb	w0, [x20, #7]
  42c3ec:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c3f0:	ldrb	w2, [x20, #6]
  42c3f4:	add	x1, x1, #0xdd1
  42c3f8:	sub	w2, w2, w0
  42c3fc:	mov	x0, x19
  42c400:	bl	403590 <fprintf@plt>
  42c404:	ldrb	w2, [x20, #7]
  42c408:	mov	x0, x19
  42c40c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c410:	add	x1, x1, #0xde4
  42c414:	bl	403590 <fprintf@plt>
  42c418:	ldrb	w2, [x20, #4]
  42c41c:	cmp	w2, #0x4
  42c420:	b.hi	42c4f4 <ferror@plt+0x28f24>  // b.pmore
  42c424:	and	x1, x2, #0xff
  42c428:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42c42c:	add	x0, x0, #0x248
  42c430:	ldr	x3, [x0, x1, lsl #3]
  42c434:	mov	x0, x19
  42c438:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c43c:	add	x1, x1, #0xdf6
  42c440:	bl	403590 <fprintf@plt>
  42c444:	ldr	x0, [x28, #560]
  42c448:	mov	x1, x20
  42c44c:	bl	43f6f0 <ferror@plt+0x3c120>
  42c450:	mov	x21, x0
  42c454:	ldr	w2, [x20, #20]
  42c458:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c45c:	mov	x0, x19
  42c460:	add	x1, x1, #0xe09
  42c464:	bl	403590 <fprintf@plt>
  42c468:	cbz	x21, 42c498 <ferror@plt+0x28ec8>
  42c46c:	ldr	x0, [x28, #560]
  42c470:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c474:	add	x1, x1, #0xe26
  42c478:	ldr	x2, [x0]
  42c47c:	mov	x0, x19
  42c480:	sub	x21, x21, x2
  42c484:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42c488:	movk	x2, #0xaaab
  42c48c:	asr	x21, x21, #3
  42c490:	mul	w2, w21, w2
  42c494:	bl	403590 <fprintf@plt>
  42c498:	mov	x1, x19
  42c49c:	mov	w0, #0xa                   	// #10
  42c4a0:	bl	402e40 <fputc@plt>
  42c4a4:	ldr	w22, [x27, x22]
  42c4a8:	mov	w27, #0x1                   	// #1
  42c4ac:	cmp	w22, w24
  42c4b0:	b.cs	42c650 <ferror@plt+0x29080>  // b.hs, b.nlast
  42c4b4:	ldr	x0, [x25]
  42c4b8:	mov	w1, w22
  42c4bc:	bl	44019c <ferror@plt+0x3cbcc>
  42c4c0:	tst	w0, #0xff
  42c4c4:	b.ne	42c500 <ferror@plt+0x28f30>  // b.any
  42c4c8:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c4cc:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c4d0:	add	x2, x2, #0xe3c
  42c4d4:	add	x0, x0, #0x971
  42c4d8:	mov	w1, #0x454                 	// #1108
  42c4dc:	bl	403600 <ferror@plt+0x30>
  42c4e0:	add	w0, w23, #0x1
  42c4e4:	mov	w1, #0x18                  	// #24
  42c4e8:	smull	x0, w0, w1
  42c4ec:	ldr	w24, [x27, x0]
  42c4f0:	b	42c374 <ferror@plt+0x28da4>
  42c4f4:	adrp	x3, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c4f8:	add	x3, x3, #0xd63
  42c4fc:	b	42c434 <ferror@plt+0x28e64>
  42c500:	ldr	x0, [x25]
  42c504:	add	x8, sp, #0x70
  42c508:	mov	w2, w22
  42c50c:	mov	x1, x20
  42c510:	bl	440a38 <ferror@plt+0x3d468>
  42c514:	ldr	w0, [sp, #124]
  42c518:	cbnz	w0, 42c640 <ferror@plt+0x29070>
  42c51c:	ldr	x26, [sp, #112]
  42c520:	ldr	w28, [sp, #120]
  42c524:	mov	x0, x26
  42c528:	mov	w1, w28
  42c52c:	bl	42c17c <ferror@plt+0x28bac>
  42c530:	mov	x6, x0
  42c534:	mov	x21, x1
  42c538:	cbz	x0, 42c650 <ferror@plt+0x29080>
  42c53c:	mov	w5, w1
  42c540:	mov	w4, w22
  42c544:	ldr	x1, [sp, #96]
  42c548:	mov	w3, w28
  42c54c:	mov	x2, x26
  42c550:	mov	x0, x19
  42c554:	bl	403590 <fprintf@plt>
  42c558:	ldrb	w0, [x20, #6]
  42c55c:	lsl	w0, w27, w0
  42c560:	sub	w0, w0, #0x1
  42c564:	sxtw	x4, w0
  42c568:	cmp	x21, w0, sxtw
  42c56c:	b.cs	42c574 <ferror@plt+0x28fa4>  // b.hs, b.nlast
  42c570:	add	x4, x21, #0x1
  42c574:	mov	w0, w28
  42c578:	str	x4, [sp, #104]
  42c57c:	bl	4229ac <ferror@plt+0x1f3dc>
  42c580:	mov	w21, w0
  42c584:	mov	w0, w22
  42c588:	bl	4229ac <ferror@plt+0x1f3dc>
  42c58c:	mov	w28, w0
  42c590:	mov	x0, x26
  42c594:	bl	402d50 <strlen@plt>
  42c598:	add	w0, w0, #0x6
  42c59c:	cmp	w21, #0x3
  42c5a0:	mov	w1, #0x3                   	// #3
  42c5a4:	csel	w21, w21, w1, ge  // ge = tcont
  42c5a8:	cmp	w28, #0x5
  42c5ac:	ldr	x4, [sp, #104]
  42c5b0:	mov	w2, #0x5                   	// #5
  42c5b4:	csel	w1, w28, w2, ge  // ge = tcont
  42c5b8:	cmp	w24, #0x3e7
  42c5bc:	add	w21, w21, w1
  42c5c0:	mov	w28, w4
  42c5c4:	add	w21, w21, w0
  42c5c8:	b.ls	42c5e4 <ferror@plt+0x29014>  // b.plast
  42c5cc:	mov	w3, w22
  42c5d0:	mov	x2, x20
  42c5d4:	mov	w1, w21
  42c5d8:	mov	x0, x19
  42c5dc:	mov	w5, #0x3e8                 	// #1000
  42c5e0:	bl	42b19c <ferror@plt+0x27bcc>
  42c5e4:	cmp	w24, #0x63
  42c5e8:	b.ls	42c608 <ferror@plt+0x29038>  // b.plast
  42c5ec:	mov	w4, w28
  42c5f0:	mov	w3, w22
  42c5f4:	mov	x2, x20
  42c5f8:	mov	w1, w21
  42c5fc:	mov	x0, x19
  42c600:	mov	w5, #0x64                  	// #100
  42c604:	bl	42b19c <ferror@plt+0x27bcc>
  42c608:	mov	w4, w28
  42c60c:	mov	w3, w22
  42c610:	mov	x2, x20
  42c614:	mov	w1, w21
  42c618:	mov	x0, x19
  42c61c:	mov	w5, #0xa                   	// #10
  42c620:	bl	42b19c <ferror@plt+0x27bcc>
  42c624:	mov	w4, w28
  42c628:	mov	w3, w22
  42c62c:	mov	x2, x20
  42c630:	mov	w1, w21
  42c634:	mov	x0, x19
  42c638:	mov	w5, #0x1                   	// #1
  42c63c:	bl	42b19c <ferror@plt+0x27bcc>
  42c640:	ldrb	w0, [x20, #7]
  42c644:	lsl	w0, w27, w0
  42c648:	add	w22, w22, w0
  42c64c:	b	42c4ac <ferror@plt+0x28edc>
  42c650:	mov	x1, x19
  42c654:	mov	w0, #0xa                   	// #10
  42c658:	add	w23, w23, #0x1
  42c65c:	bl	402e40 <fputc@plt>
  42c660:	b	42c348 <ferror@plt+0x28d78>
  42c664:	mov	x0, x20
  42c668:	bl	42ced0 <ferror@plt+0x29900>
  42c66c:	ldr	w2, [x20, #56]
  42c670:	mov	w3, w0
  42c674:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c678:	adrp	x24, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c67c:	adrp	x26, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c680:	add	x1, x1, #0xe64
  42c684:	mov	x0, x19
  42c688:	add	x24, x24, #0xe7a
  42c68c:	add	x26, x26, #0xee2
  42c690:	mov	w23, #0x0                   	// #0
  42c694:	bl	42b338 <ferror@plt+0x27d68>
  42c698:	ldr	x0, [x25]
  42c69c:	ldr	w20, [x0, #36]
  42c6a0:	cmp	w23, w20
  42c6a4:	b.cs	42c808 <ferror@plt+0x29238>  // b.hs, b.nlast
  42c6a8:	sub	w20, w20, #0x1
  42c6ac:	sub	w20, w20, w23
  42c6b0:	ldr	x27, [x0, #24]
  42c6b4:	sbfiz	x21, x20, #5, #32
  42c6b8:	add	x22, x27, x21
  42c6bc:	mov	x0, x22
  42c6c0:	bl	43fdd4 <ferror@plt+0x3c804>
  42c6c4:	mov	w2, w20
  42c6c8:	mov	x3, x0
  42c6cc:	ldr	w4, [x22, #4]
  42c6d0:	mov	x1, x24
  42c6d4:	mov	x0, x19
  42c6d8:	mov	w20, #0x0                   	// #0
  42c6dc:	bl	403590 <fprintf@plt>
  42c6e0:	ldr	w2, [x27, x21]
  42c6e4:	mov	x0, x19
  42c6e8:	ldr	w3, [x22, #4]
  42c6ec:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c6f0:	add	x1, x1, #0x987
  42c6f4:	add	w3, w2, w3
  42c6f8:	bl	403590 <fprintf@plt>
  42c6fc:	ldr	w2, [x22, #24]
  42c700:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c704:	add	x1, x1, #0xe94
  42c708:	mov	w0, w2
  42c70c:	bl	421e40 <ferror@plt+0x1e870>
  42c710:	ldr	w2, [x27, x21]
  42c714:	adrp	x27, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c718:	add	x27, x27, #0xf51
  42c71c:	mov	x0, x19
  42c720:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c724:	add	x1, x1, #0xeb3
  42c728:	bl	403590 <fprintf@plt>
  42c72c:	mov	x1, x19
  42c730:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c734:	add	x0, x0, #0xece
  42c738:	bl	402d60 <fputs@plt>
  42c73c:	ldr	w0, [x22, #4]
  42c740:	cmp	w20, w0
  42c744:	b.cs	42c7f4 <ferror@plt+0x29224>  // b.hs, b.nlast
  42c748:	lsl	w0, w20, #1
  42c74c:	ubfiz	x2, x20, #3, #31
  42c750:	ldr	x1, [x22, #16]
  42c754:	add	w0, w0, #0x1
  42c758:	ldr	w21, [x1, x2]
  42c75c:	mov	w2, w20
  42c760:	ldr	w28, [x1, x0, lsl #2]
  42c764:	mov	x1, x26
  42c768:	mov	w3, w21
  42c76c:	mov	x0, x19
  42c770:	mov	w4, w28
  42c774:	bl	403590 <fprintf@plt>
  42c778:	cmp	w21, w28
  42c77c:	b.ne	42c7c8 <ferror@plt+0x291f8>  // b.any
  42c780:	ldr	w3, [x22]
  42c784:	cmp	w21, w3
  42c788:	b.cs	42c7a8 <ferror@plt+0x291d8>  // b.hs, b.nlast
  42c78c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c790:	mov	w3, w21
  42c794:	mov	w2, w20
  42c798:	add	x1, x1, #0xef2
  42c79c:	mov	w0, w21
  42c7a0:	bl	421e40 <ferror@plt+0x1e870>
  42c7a4:	b	42c7c0 <ferror@plt+0x291f0>
  42c7a8:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c7ac:	sub	w3, w21, w3
  42c7b0:	mov	w2, w21
  42c7b4:	add	x1, x1, #0xf1e
  42c7b8:	mov	x0, x19
  42c7bc:	bl	403590 <fprintf@plt>
  42c7c0:	add	w20, w20, #0x1
  42c7c4:	b	42c73c <ferror@plt+0x2916c>
  42c7c8:	mov	w3, w21
  42c7cc:	mov	w2, w20
  42c7d0:	mov	x1, x27
  42c7d4:	mov	w0, w21
  42c7d8:	bl	421e40 <ferror@plt+0x1e870>
  42c7dc:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c7e0:	mov	w3, w28
  42c7e4:	add	x1, x0, #0xf6f
  42c7e8:	mov	w2, w20
  42c7ec:	mov	w0, w21
  42c7f0:	b	42c7a0 <ferror@plt+0x291d0>
  42c7f4:	mov	x1, x19
  42c7f8:	mov	w0, #0xa                   	// #10
  42c7fc:	add	w23, w23, #0x1
  42c800:	bl	402e40 <fputc@plt>
  42c804:	b	42c698 <ferror@plt+0x290c8>
  42c808:	mov	x0, x19
  42c80c:	mov	w3, #0x80000000            	// #-2147483648
  42c810:	mov	w2, #0x7fffffff            	// #2147483647
  42c814:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c818:	add	x1, x1, #0xf8d
  42c81c:	bl	42b338 <ferror@plt+0x27d68>
  42c820:	mov	x0, x19
  42c824:	mov	w3, #0xffffffff            	// #-1
  42c828:	ldp	x19, x20, [sp, #16]
  42c82c:	mov	w2, #0x80000000            	// #-2147483648
  42c830:	ldp	x21, x22, [sp, #32]
  42c834:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c838:	ldp	x23, x24, [sp, #48]
  42c83c:	add	x1, x1, #0xf9c
  42c840:	ldp	x25, x26, [sp, #64]
  42c844:	ldp	x27, x28, [sp, #80]
  42c848:	ldp	x29, x30, [sp], #144
  42c84c:	b	42b338 <ferror@plt+0x27d68>
  42c850:	stp	x29, x30, [sp, #-272]!
  42c854:	mov	x29, sp
  42c858:	stp	x19, x20, [sp, #16]
  42c85c:	stp	x21, x22, [sp, #32]
  42c860:	stp	x23, x24, [sp, #48]
  42c864:	stp	x25, x26, [sp, #64]
  42c868:	stp	x27, x28, [sp, #80]
  42c86c:	stp	w4, w5, [sp, #104]
  42c870:	str	w3, [sp, #120]
  42c874:	cbnz	x7, 42c890 <ferror@plt+0x292c0>
  42c878:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42c87c:	add	x2, x2, #0x1af
  42c880:	mov	w1, #0x5fa                 	// #1530
  42c884:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42c888:	add	x0, x0, #0x971
  42c88c:	bl	403600 <ferror@plt+0x30>
  42c890:	mov	w19, w2
  42c894:	mov	x22, x0
  42c898:	mov	x20, x1
  42c89c:	mov	w21, w6
  42c8a0:	mov	x26, x7
  42c8a4:	add	x0, sp, #0xb0
  42c8a8:	bl	42e910 <ferror@plt+0x2b340>
  42c8ac:	str	w19, [sp, #128]
  42c8b0:	cbnz	x22, 42c8c4 <ferror@plt+0x292f4>
  42c8b4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42c8b8:	mov	w1, #0x551                 	// #1361
  42c8bc:	add	x2, x2, #0x1ca
  42c8c0:	b	42c884 <ferror@plt+0x292b4>
  42c8c4:	cbz	w19, 42cd20 <ferror@plt+0x29750>
  42c8c8:	mov	x0, x22
  42c8cc:	bl	434d58 <ferror@plt+0x31788>
  42c8d0:	ldrb	w0, [x0, #45]
  42c8d4:	cmp	w0, #0x2
  42c8d8:	b.ne	42cd2c <ferror@plt+0x2975c>  // b.any
  42c8dc:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42c8e0:	ldr	x0, [x19, #560]
  42c8e4:	ldrb	w0, [x0, #116]
  42c8e8:	cbnz	w0, 42cd38 <ferror@plt+0x29768>
  42c8ec:	mov	w0, #0x1                   	// #1
  42c8f0:	str	w0, [sp, #132]
  42c8f4:	add	x0, sp, #0x80
  42c8f8:	str	x0, [sp, #136]
  42c8fc:	cbz	x20, 42c914 <ferror@plt+0x29344>
  42c900:	ldr	w1, [sp, #128]
  42c904:	add	x3, sp, #0x88
  42c908:	add	x2, sp, #0x84
  42c90c:	mov	x0, x20
  42c910:	bl	42beb0 <ferror@plt+0x288e0>
  42c914:	ldrsw	x1, [sp, #132]
  42c918:	str	xzr, [sp, #144]
  42c91c:	cbz	w1, 42c92c <ferror@plt+0x2935c>
  42c920:	add	x0, sp, #0x90
  42c924:	mov	w2, #0x1                   	// #1
  42c928:	bl	42d05c <ferror@plt+0x29a8c>
  42c92c:	ldrsw	x1, [sp, #132]
  42c930:	str	xzr, [sp, #152]
  42c934:	cbz	w1, 42c944 <ferror@plt+0x29374>
  42c938:	add	x0, sp, #0x98
  42c93c:	mov	w2, #0x1                   	// #1
  42c940:	bl	42d14c <ferror@plt+0x29b7c>
  42c944:	mov	x24, #0x0                   	// #0
  42c948:	ldr	w3, [sp, #132]
  42c94c:	cmp	w3, w24
  42c950:	b.le	42cc34 <ferror@plt+0x29664>
  42c954:	ldr	x0, [sp, #136]
  42c958:	ldr	w1, [x0, x24, lsl #2]
  42c95c:	ldr	x0, [x19, #560]
  42c960:	bl	4400fc <ferror@plt+0x3cb2c>
  42c964:	mov	x20, x0
  42c968:	lsr	x25, x0, #32
  42c96c:	ldr	x0, [x19, #560]
  42c970:	bl	42ced0 <ferror@plt+0x29900>
  42c974:	cmp	w0, w20
  42c978:	b.hi	42c9d0 <ferror@plt+0x29400>  // b.pmore
  42c97c:	cmp	w20, w25
  42c980:	b.eq	42c9e4 <ferror@plt+0x29414>  // b.none
  42c984:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  42c988:	add	x19, x19, #0x9c4
  42c98c:	ldr	x0, [sp, #152]
  42c990:	cbz	x0, 42c9a0 <ferror@plt+0x293d0>
  42c994:	ldrsb	w1, [x0, #3]
  42c998:	tbz	w1, #31, 42cc68 <ferror@plt+0x29698>
  42c99c:	str	wzr, [x0, #4]
  42c9a0:	mov	w20, #0x0                   	// #0
  42c9a4:	ldr	x0, [sp, #144]
  42c9a8:	cbz	x0, 42cc7c <ferror@plt+0x296ac>
  42c9ac:	ldr	w1, [x0, #4]
  42c9b0:	cmp	w1, w20
  42c9b4:	b.ls	42cc70 <ferror@plt+0x296a0>  // b.plast
  42c9b8:	ubfiz	x1, x20, #4, #32
  42c9bc:	add	w20, w20, #0x1
  42c9c0:	add	x0, x0, x1
  42c9c4:	ldr	x0, [x0, #16]
  42c9c8:	bl	4032a0 <free@plt>
  42c9cc:	b	42c9a4 <ferror@plt+0x293d4>
  42c9d0:	mov	w0, #0x5fffffff            	// #1610612735
  42c9d4:	cmp	w20, w0
  42c9d8:	b.hi	42cbbc <ferror@plt+0x295ec>  // b.pmore
  42c9dc:	cmp	w25, w0
  42c9e0:	b.hi	42cbc8 <ferror@plt+0x295f8>  // b.pmore
  42c9e4:	add	x8, sp, #0xd0
  42c9e8:	mov	w0, w20
  42c9ec:	mov	w1, #0x1                   	// #1
  42c9f0:	bl	42b730 <ferror@plt+0x28160>
  42c9f4:	mov	w0, w25
  42c9f8:	add	x8, sp, #0xf0
  42c9fc:	ldp	w27, w23, [sp, #216]
  42ca00:	mov	w1, #0x2                   	// #2
  42ca04:	ldr	x28, [sp, #208]
  42ca08:	bl	42b730 <ferror@plt+0x28160>
  42ca0c:	ldr	x0, [sp, #240]
  42ca10:	ldr	w3, [sp, #252]
  42ca14:	cmp	x28, x0
  42ca18:	b.ne	42cbd4 <ferror@plt+0x29604>  // b.any
  42ca1c:	ldr	w0, [sp, #248]
  42ca20:	cmp	w27, w0
  42ca24:	b.ne	42cbe0 <ferror@plt+0x29610>  // b.any
  42ca28:	str	w3, [sp, #112]
  42ca2c:	cmp	w23, w3
  42ca30:	b.gt	42cbec <ferror@plt+0x2961c>
  42ca34:	mov	w1, w27
  42ca38:	mov	x0, x28
  42ca3c:	bl	42c17c <ferror@plt+0x28bac>
  42ca40:	mov	x4, x1
  42ca44:	cbz	x0, 42cbf8 <ferror@plt+0x29628>
  42ca48:	ldr	w3, [sp, #112]
  42ca4c:	sub	w2, w23, #0x1
  42ca50:	sub	w3, w3, w23
  42ca54:	sxtw	x5, w2
  42ca58:	add	w3, w3, #0x1
  42ca5c:	add	x6, x5, w3, sxtw
  42ca60:	sxtw	x1, w3
  42ca64:	cmp	x4, x6
  42ca68:	b.cc	42cc04 <ferror@plt+0x29634>  // b.lo, b.ul, b.last
  42ca6c:	tbz	w2, #31, 42ca88 <ferror@plt+0x294b8>
  42ca70:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ca74:	add	x2, x2, #0x51d
  42ca78:	mov	w1, #0x44                  	// #68
  42ca7c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ca80:	add	x0, x0, #0x525
  42ca84:	b	42c88c <ferror@plt+0x292bc>
  42ca88:	cmp	w2, w4
  42ca8c:	b.lt	42caa0 <ferror@plt+0x294d0>  // b.tstop
  42ca90:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42ca94:	mov	w1, #0x45                  	// #69
  42ca98:	add	x2, x2, #0x51d
  42ca9c:	b	42ca7c <ferror@plt+0x294ac>
  42caa0:	add	w2, w3, w2
  42caa4:	cmp	w4, w2
  42caa8:	b.ge	42cabc <ferror@plt+0x294ec>  // b.tcont
  42caac:	adrp	x2, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42cab0:	mov	w1, #0x47                  	// #71
  42cab4:	add	x2, x2, #0x51d
  42cab8:	b	42ca7c <ferror@plt+0x294ac>
  42cabc:	add	x0, x0, x5
  42cac0:	str	w3, [sp, #124]
  42cac4:	bl	45d858 <_obstack_memory_used@@Base+0x1468>
  42cac8:	mov	x4, x0
  42cacc:	mov	w2, #0x0                   	// #0
  42cad0:	mov	w1, #0x1                   	// #1
  42cad4:	add	x0, sp, #0x90
  42cad8:	str	x4, [sp, #112]
  42cadc:	bl	42d05c <ferror@plt+0x29a8c>
  42cae0:	ldr	x2, [sp, #144]
  42cae4:	ldr	w3, [sp, #124]
  42cae8:	ldr	x4, [sp, #112]
  42caec:	ldr	w1, [x2, #4]
  42caf0:	add	w0, w1, #0x1
  42caf4:	str	w0, [x2, #4]
  42caf8:	mov	x0, #0x8                   	// #8
  42cafc:	add	x1, x0, w1, uxtw #4
  42cb00:	add	x0, x2, x1
  42cb04:	str	w3, [x2, x1]
  42cb08:	add	x3, sp, #0xa0
  42cb0c:	str	x4, [x0, #8]
  42cb10:	mov	w1, w20
  42cb14:	ldr	x0, [x19, #560]
  42cb18:	mov	w2, #0x1                   	// #1
  42cb1c:	bl	4403f0 <ferror@plt+0x3ce20>
  42cb20:	ldr	x0, [x19, #560]
  42cb24:	add	x3, sp, #0xa8
  42cb28:	mov	w1, w25
  42cb2c:	mov	w2, #0x1                   	// #1
  42cb30:	bl	4403f0 <ferror@plt+0x3ce20>
  42cb34:	ldr	x0, [sp, #160]
  42cb38:	cbz	x0, 42cc10 <ferror@plt+0x29640>
  42cb3c:	ldr	x1, [sp, #168]
  42cb40:	cbz	x1, 42cc10 <ferror@plt+0x29640>
  42cb44:	cmp	x0, x1
  42cb48:	ldr	x2, [x0, #8]
  42cb4c:	b.eq	42cb5c <ferror@plt+0x2958c>  // b.none
  42cb50:	ldr	x0, [x1, #8]
  42cb54:	cmp	x0, x2
  42cb58:	b.ne	42cc1c <ferror@plt+0x2964c>  // b.any
  42cb5c:	add	x24, x24, #0x1
  42cb60:	cmp	x28, x2
  42cb64:	b.ne	42cc28 <ferror@plt+0x29658>  // b.any
  42cb68:	ldr	x0, [x19, #560]
  42cb6c:	mov	w3, w23
  42cb70:	mov	w2, w27
  42cb74:	bl	43fce4 <ferror@plt+0x3c714>
  42cb78:	mov	w1, w0
  42cb7c:	ldr	x2, [x19, #560]
  42cb80:	add	x0, sp, #0xc0
  42cb84:	bl	42ec88 <ferror@plt+0x2b6b8>
  42cb88:	mov	w2, #0x0                   	// #0
  42cb8c:	mov	w1, #0x1                   	// #1
  42cb90:	add	x0, sp, #0x98
  42cb94:	bl	42d14c <ferror@plt+0x29b7c>
  42cb98:	ldr	x0, [sp, #152]
  42cb9c:	ldr	w1, [x0, #4]
  42cba0:	add	w2, w1, #0x1
  42cba4:	str	w2, [x0, #4]
  42cba8:	ubfiz	x1, x1, #4, #32
  42cbac:	add	x0, x0, x1
  42cbb0:	ldp	x2, x3, [sp, #192]
  42cbb4:	stp	x2, x3, [x0, #8]
  42cbb8:	b	42c948 <ferror@plt+0x29378>
  42cbbc:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cbc0:	add	x19, x19, #0x1c
  42cbc4:	b	42c98c <ferror@plt+0x293bc>
  42cbc8:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cbcc:	add	x19, x19, #0x4f
  42cbd0:	b	42c98c <ferror@plt+0x293bc>
  42cbd4:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cbd8:	add	x19, x19, #0x80
  42cbdc:	b	42c98c <ferror@plt+0x293bc>
  42cbe0:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cbe4:	add	x19, x19, #0xa7
  42cbe8:	b	42c98c <ferror@plt+0x293bc>
  42cbec:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cbf0:	add	x19, x19, #0xce
  42cbf4:	b	42c98c <ferror@plt+0x293bc>
  42cbf8:	adrp	x19, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42cbfc:	add	x19, x19, #0xfc9
  42cc00:	b	42c98c <ferror@plt+0x293bc>
  42cc04:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cc08:	add	x19, x19, #0xeb
  42cc0c:	b	42c98c <ferror@plt+0x293bc>
  42cc10:	adrp	x19, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42cc14:	add	x19, x19, #0xfad
  42cc18:	b	42c98c <ferror@plt+0x293bc>
  42cc1c:	adrp	x19, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42cc20:	add	x19, x19, #0xfe4
  42cc24:	b	42c98c <ferror@plt+0x293bc>
  42cc28:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cc2c:	add	x19, x19, #0x103
  42cc30:	b	42c98c <ferror@plt+0x293bc>
  42cc34:	ldr	x1, [sp, #144]
  42cc38:	cbz	x1, 42cc40 <ferror@plt+0x29670>
  42cc3c:	add	x1, x1, #0x8
  42cc40:	ldr	x2, [sp, #152]
  42cc44:	cbz	x2, 42cc4c <ferror@plt+0x2967c>
  42cc48:	add	x2, x2, #0x8
  42cc4c:	ldr	w5, [sp, #120]
  42cc50:	add	x4, sp, #0xb0
  42cc54:	sxtw	x3, w3
  42cc58:	mov	x0, x22
  42cc5c:	bl	432340 <ferror@plt+0x2ed70>
  42cc60:	mov	x19, x0
  42cc64:	b	42c98c <ferror@plt+0x293bc>
  42cc68:	bl	4032a0 <free@plt>
  42cc6c:	b	42c9a0 <ferror@plt+0x293d0>
  42cc70:	ldrsb	w1, [x0, #3]
  42cc74:	tbz	w1, #31, 42ccf4 <ferror@plt+0x29724>
  42cc78:	str	wzr, [x0, #4]
  42cc7c:	cbnz	x19, 42cccc <ferror@plt+0x296fc>
  42cc80:	ldr	w1, [sp, #104]
  42cc84:	ldr	w0, [sp, #184]
  42cc88:	cmp	w1, w0
  42cc8c:	b.ge	42ccfc <ferror@plt+0x2972c>  // b.tcont
  42cc90:	ldr	w1, [sp, #108]
  42cc94:	cmp	w1, w0
  42cc98:	b.ge	42cd08 <ferror@plt+0x29738>  // b.tcont
  42cc9c:	cmp	w21, w0
  42cca0:	b.ge	42cd14 <ferror@plt+0x29744>  // b.tcont
  42cca4:	ldr	x0, [sp, #176]
  42cca8:	sbfiz	x5, x1, #3, #32
  42ccac:	ldr	w1, [sp, #104]
  42ccb0:	add	x21, x0, w21, sxtw #3
  42ccb4:	sbfiz	x4, x1, #3, #32
  42ccb8:	ldr	w1, [x0, x5]
  42ccbc:	ldr	w2, [x21, #4]
  42ccc0:	ldr	w0, [x0, x4]
  42ccc4:	bl	42b7c8 <ferror@plt+0x281f8>
  42ccc8:	str	w0, [x26]
  42cccc:	add	x0, sp, #0xb0
  42ccd0:	bl	42e940 <ferror@plt+0x2b370>
  42ccd4:	mov	x0, x19
  42ccd8:	ldp	x19, x20, [sp, #16]
  42ccdc:	ldp	x21, x22, [sp, #32]
  42cce0:	ldp	x23, x24, [sp, #48]
  42cce4:	ldp	x25, x26, [sp, #64]
  42cce8:	ldp	x27, x28, [sp, #80]
  42ccec:	ldp	x29, x30, [sp], #272
  42ccf0:	ret
  42ccf4:	bl	4032a0 <free@plt>
  42ccf8:	b	42cc7c <ferror@plt+0x296ac>
  42ccfc:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd00:	add	x19, x19, #0x12c
  42cd04:	b	42cccc <ferror@plt+0x296fc>
  42cd08:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd0c:	add	x19, x19, #0x143
  42cd10:	b	42cccc <ferror@plt+0x296fc>
  42cd14:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd18:	add	x19, x19, #0x15a
  42cd1c:	b	42cccc <ferror@plt+0x296fc>
  42cd20:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd24:	add	x19, x19, #0x16f
  42cd28:	b	42cccc <ferror@plt+0x296fc>
  42cd2c:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd30:	add	x19, x19, #0x180
  42cd34:	b	42cccc <ferror@plt+0x296fc>
  42cd38:	adrp	x19, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd3c:	add	x19, x19, #0x19b
  42cd40:	b	42cccc <ferror@plt+0x296fc>
  42cd44:	stp	x29, x30, [sp, #-64]!
  42cd48:	cmp	w1, #0x1
  42cd4c:	mov	x29, sp
  42cd50:	stp	x19, x20, [sp, #16]
  42cd54:	stp	x21, x22, [sp, #32]
  42cd58:	stp	x23, x24, [sp, #48]
  42cd5c:	b.gt	42cd78 <ferror@plt+0x297a8>
  42cd60:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd64:	add	x2, x2, #0x1e7
  42cd68:	mov	w1, #0x4f6                 	// #1270
  42cd6c:	adrp	x0, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  42cd70:	add	x0, x0, #0x971
  42cd74:	bl	403600 <ferror@plt+0x30>
  42cd78:	mov	x19, x2
  42cd7c:	cbnz	x2, 42cd90 <ferror@plt+0x297c0>
  42cd80:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42cd84:	mov	w1, #0x4f7                 	// #1271
  42cd88:	add	x2, x2, #0x1e7
  42cd8c:	b	42cd6c <ferror@plt+0x2979c>
  42cd90:	mov	x22, x0
  42cd94:	ldr	w0, [x2]
  42cd98:	mov	w20, w1
  42cd9c:	bl	42be74 <ferror@plt+0x288a4>
  42cda0:	mov	w21, w0
  42cda4:	mov	x3, #0x1                   	// #1
  42cda8:	mov	x2, #0x0                   	// #0
  42cdac:	mov	x1, #0x0                   	// #0
  42cdb0:	mov	x0, #0x10                  	// #16
  42cdb4:	bl	4103c0 <ferror@plt+0xcdf0>
  42cdb8:	mov	x23, x0
  42cdbc:	mov	w1, w20
  42cdc0:	mov	x2, x19
  42cdc4:	bl	42bd84 <ferror@plt+0x287b4>
  42cdc8:	ldr	x20, [x22]
  42cdcc:	ldp	x1, x0, [x20, #8]
  42cdd0:	add	x1, x1, x1, lsl #1
  42cdd4:	cmp	x1, x0, lsl #2
  42cdd8:	b.hi	42cde4 <ferror@plt+0x29814>  // b.pmore
  42cddc:	mov	x0, x20
  42cde0:	bl	42d23c <ferror@plt+0x29c6c>
  42cde4:	ldr	w0, [x20, #32]
  42cde8:	ldr	w24, [x20, #40]
  42cdec:	add	w0, w0, #0x1
  42cdf0:	str	w0, [x20, #32]
  42cdf4:	mov	w1, w24
  42cdf8:	mov	w0, w21
  42cdfc:	bl	41e73c <ferror@plt+0x1b16c>
  42ce00:	mov	w19, w0
  42ce04:	ldr	x22, [x20]
  42ce08:	ubfiz	x0, x19, #4, #32
  42ce0c:	add	x2, x22, x0
  42ce10:	ldr	w0, [x22, x0]
  42ce14:	cbz	w0, 42ce88 <ferror@plt+0x298b8>
  42ce18:	cmp	w21, w0
  42ce1c:	b.eq	42ce64 <ferror@plt+0x29894>  // b.none
  42ce20:	mov	w1, w24
  42ce24:	mov	w0, w21
  42ce28:	bl	41e774 <ferror@plt+0x1b1a4>
  42ce2c:	ldr	x3, [x20, #8]
  42ce30:	add	w19, w19, w0
  42ce34:	ldr	w1, [x20, #36]
  42ce38:	cmp	x3, w19, uxtw
  42ce3c:	add	w1, w1, #0x1
  42ce40:	str	w1, [x20, #36]
  42ce44:	b.hi	42ce4c <ferror@plt+0x2987c>  // b.pmore
  42ce48:	sub	w19, w19, w3
  42ce4c:	ubfiz	x1, x19, #4, #32
  42ce50:	add	x2, x22, x1
  42ce54:	ldr	w1, [x22, x1]
  42ce58:	cbz	w1, 42ce88 <ferror@plt+0x298b8>
  42ce5c:	cmp	w21, w1
  42ce60:	b.ne	42ce30 <ferror@plt+0x29860>  // b.any
  42ce64:	ldr	w0, [x2]
  42ce68:	cbnz	w0, 42ce70 <ferror@plt+0x298a0>
  42ce6c:	str	w21, [x2]
  42ce70:	ldp	x19, x20, [sp, #16]
  42ce74:	ldp	x21, x22, [sp, #32]
  42ce78:	str	x23, [x2, #8]
  42ce7c:	ldp	x23, x24, [sp, #48]
  42ce80:	ldp	x29, x30, [sp], #64
  42ce84:	ret
  42ce88:	ldr	x0, [x20, #16]
  42ce8c:	ubfiz	x19, x19, #4, #32
  42ce90:	add	x2, x22, x19
  42ce94:	add	x0, x0, #0x1
  42ce98:	str	x0, [x20, #16]
  42ce9c:	b	42ce64 <ferror@plt+0x29894>
  42cea0:	ldr	x2, [x0, #8]
  42cea4:	mov	x1, x0
  42cea8:	sub	x0, x2, #0x1
  42ceac:	cmp	x2, x0
  42ceb0:	b.ls	42cebc <ferror@plt+0x298ec>  // b.plast
  42ceb4:	sub	x0, x0, #0x1
  42ceb8:	b	42ceac <ferror@plt+0x298dc>
  42cebc:	ldr	x0, [x1]
  42cec0:	ldrb	w1, [x1, #44]
  42cec4:	cbnz	w1, 42cecc <ferror@plt+0x298fc>
  42cec8:	b	4032a0 <free@plt>
  42cecc:	b	410418 <ferror@plt+0xce48>
  42ced0:	ldr	w1, [x0, #36]
  42ced4:	cbz	w1, 42ceec <ferror@plt+0x2991c>
  42ced8:	sub	w1, w1, #0x1
  42cedc:	ldr	x0, [x0, #24]
  42cee0:	sbfiz	x1, x1, #5, #32
  42cee4:	ldr	w0, [x0, x1]
  42cee8:	ret
  42ceec:	mov	w0, #0x80000000            	// #-2147483648
  42cef0:	b	42cee8 <ferror@plt+0x29918>
  42cef4:	stp	x29, x30, [sp, #-64]!
  42cef8:	and	w2, w2, #0xff
  42cefc:	mov	x29, sp
  42cf00:	stp	x23, x24, [sp, #48]
  42cf04:	ldr	x23, [x0]
  42cf08:	stp	x19, x20, [sp, #16]
  42cf0c:	mov	x20, x0
  42cf10:	stp	x21, x22, [sp, #32]
  42cf14:	cbz	x23, 42cf34 <ferror@plt+0x29964>
  42cf18:	ldp	w0, w21, [x23]
  42cf1c:	ubfx	x0, x0, #0, #31
  42cf20:	sub	w0, w0, w21
  42cf24:	cmp	w1, w0
  42cf28:	b.hi	42cf44 <ferror@plt+0x29974>  // b.pmore
  42cf2c:	mov	w19, #0x0                   	// #0
  42cf30:	b	42cfd8 <ferror@plt+0x29a08>
  42cf34:	mov	w19, #0x0                   	// #0
  42cf38:	cbz	w1, 42cfd8 <ferror@plt+0x29a08>
  42cf3c:	mov	w21, #0x0                   	// #0
  42cf40:	b	42cf58 <ferror@plt+0x29988>
  42cf44:	ldrsb	w0, [x23, #3]
  42cf48:	tbz	w0, #31, 42cfc4 <ferror@plt+0x299f4>
  42cf4c:	add	w1, w1, w21
  42cf50:	mov	w19, #0x1                   	// #1
  42cf54:	str	xzr, [x20]
  42cf58:	ldr	x0, [x20]
  42cf5c:	bl	410018 <ferror@plt+0xca48>
  42cf60:	mov	w22, w0
  42cf64:	mov	w1, #0x18                  	// #24
  42cf68:	mov	x0, #0x8                   	// #8
  42cf6c:	umaddl	x1, w22, w1, x0
  42cf70:	ldr	x0, [x20]
  42cf74:	cbz	x0, 42cfcc <ferror@plt+0x299fc>
  42cf78:	ldr	w24, [x0, #4]
  42cf7c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42cf80:	str	x0, [x20]
  42cf84:	and	w22, w22, #0x7fffffff
  42cf88:	stp	w22, w24, [x0]
  42cf8c:	mov	x1, x0
  42cf90:	cbz	w19, 42cff0 <ferror@plt+0x29a20>
  42cf94:	mov	w2, w21
  42cf98:	mov	x0, #0x8                   	// #8
  42cf9c:	cbz	w2, 42cfd4 <ferror@plt+0x29a04>
  42cfa0:	add	x6, x23, x0
  42cfa4:	add	x3, x1, x0
  42cfa8:	sub	w2, w2, #0x1
  42cfac:	add	x0, x0, #0x18
  42cfb0:	ldp	x4, x5, [x6]
  42cfb4:	stp	x4, x5, [x3]
  42cfb8:	ldr	x4, [x6, #16]
  42cfbc:	str	x4, [x3, #16]
  42cfc0:	b	42cf9c <ferror@plt+0x299cc>
  42cfc4:	mov	w19, #0x0                   	// #0
  42cfc8:	b	42cf3c <ferror@plt+0x2996c>
  42cfcc:	mov	w24, #0x0                   	// #0
  42cfd0:	b	42cf7c <ferror@plt+0x299ac>
  42cfd4:	str	w21, [x1, #4]
  42cfd8:	mov	w0, w19
  42cfdc:	ldp	x19, x20, [sp, #16]
  42cfe0:	ldp	x21, x22, [sp, #32]
  42cfe4:	ldp	x23, x24, [sp, #48]
  42cfe8:	ldp	x29, x30, [sp], #64
  42cfec:	ret
  42cff0:	mov	w19, #0x1                   	// #1
  42cff4:	b	42cfd8 <ferror@plt+0x29a08>
  42cff8:	stp	x29, x30, [sp, #-32]!
  42cffc:	mov	w2, #0x0                   	// #0
  42d000:	mov	x29, sp
  42d004:	stp	x19, x20, [sp, #16]
  42d008:	mov	x20, x0
  42d00c:	mov	x19, x1
  42d010:	mov	w1, #0x1                   	// #1
  42d014:	bl	42cef4 <ferror@plt+0x29924>
  42d018:	ldr	x0, [x20]
  42d01c:	ldp	x4, x5, [x19]
  42d020:	ldr	w2, [x0, #4]
  42d024:	add	w1, w2, #0x1
  42d028:	mov	w3, w2
  42d02c:	str	w1, [x0, #4]
  42d030:	mov	x1, #0x18                  	// #24
  42d034:	madd	x3, x3, x1, x0
  42d038:	stp	x4, x5, [x3, #8]
  42d03c:	ldr	x4, [x19, #16]
  42d040:	ldp	x19, x20, [sp, #16]
  42d044:	str	x4, [x3, #24]
  42d048:	mov	x3, #0x8                   	// #8
  42d04c:	ldp	x29, x30, [sp], #32
  42d050:	umaddl	x2, w2, w1, x3
  42d054:	add	x0, x0, x2
  42d058:	ret
  42d05c:	stp	x29, x30, [sp, #-64]!
  42d060:	and	w2, w2, #0xff
  42d064:	mov	x29, sp
  42d068:	stp	x19, x20, [sp, #16]
  42d06c:	ldr	x19, [x0]
  42d070:	stp	x21, x22, [sp, #32]
  42d074:	mov	x21, x0
  42d078:	stp	x23, x24, [sp, #48]
  42d07c:	cbz	x19, 42d09c <ferror@plt+0x29acc>
  42d080:	ldp	w0, w22, [x19]
  42d084:	ubfx	x0, x0, #0, #31
  42d088:	sub	w0, w0, w22
  42d08c:	cmp	w1, w0
  42d090:	b.hi	42d0ac <ferror@plt+0x29adc>  // b.pmore
  42d094:	mov	w20, #0x0                   	// #0
  42d098:	b	42d12c <ferror@plt+0x29b5c>
  42d09c:	mov	w20, #0x0                   	// #0
  42d0a0:	cbz	w1, 42d12c <ferror@plt+0x29b5c>
  42d0a4:	mov	w22, #0x0                   	// #0
  42d0a8:	b	42d0c0 <ferror@plt+0x29af0>
  42d0ac:	ldrsb	w0, [x19, #3]
  42d0b0:	tbz	w0, #31, 42d118 <ferror@plt+0x29b48>
  42d0b4:	add	w1, w1, w22
  42d0b8:	mov	w20, #0x1                   	// #1
  42d0bc:	str	xzr, [x21]
  42d0c0:	ldr	x0, [x21]
  42d0c4:	bl	410018 <ferror@plt+0xca48>
  42d0c8:	mov	w23, w0
  42d0cc:	mov	x1, #0x8                   	// #8
  42d0d0:	add	x1, x1, w0, uxtw #4
  42d0d4:	ldr	x0, [x21]
  42d0d8:	cbz	x0, 42d120 <ferror@plt+0x29b50>
  42d0dc:	ldr	w24, [x0, #4]
  42d0e0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42d0e4:	str	x0, [x21]
  42d0e8:	and	w23, w23, #0x7fffffff
  42d0ec:	stp	w23, w24, [x0]
  42d0f0:	mov	x1, x0
  42d0f4:	cbz	w20, 42d144 <ferror@plt+0x29b74>
  42d0f8:	add	x2, x0, #0x8
  42d0fc:	add	x19, x19, #0x8
  42d100:	mov	w0, w22
  42d104:	cbz	w0, 42d128 <ferror@plt+0x29b58>
  42d108:	ldp	x4, x5, [x19], #16
  42d10c:	sub	w0, w0, #0x1
  42d110:	stp	x4, x5, [x2], #16
  42d114:	b	42d104 <ferror@plt+0x29b34>
  42d118:	mov	w20, #0x0                   	// #0
  42d11c:	b	42d0a4 <ferror@plt+0x29ad4>
  42d120:	mov	w24, #0x0                   	// #0
  42d124:	b	42d0e0 <ferror@plt+0x29b10>
  42d128:	str	w22, [x1, #4]
  42d12c:	mov	w0, w20
  42d130:	ldp	x19, x20, [sp, #16]
  42d134:	ldp	x21, x22, [sp, #32]
  42d138:	ldp	x23, x24, [sp, #48]
  42d13c:	ldp	x29, x30, [sp], #64
  42d140:	ret
  42d144:	mov	w20, #0x1                   	// #1
  42d148:	b	42d12c <ferror@plt+0x29b5c>
  42d14c:	stp	x29, x30, [sp, #-64]!
  42d150:	and	w2, w2, #0xff
  42d154:	mov	x29, sp
  42d158:	stp	x19, x20, [sp, #16]
  42d15c:	ldr	x19, [x0]
  42d160:	stp	x21, x22, [sp, #32]
  42d164:	mov	x21, x0
  42d168:	stp	x23, x24, [sp, #48]
  42d16c:	cbz	x19, 42d18c <ferror@plt+0x29bbc>
  42d170:	ldp	w0, w22, [x19]
  42d174:	ubfx	x0, x0, #0, #31
  42d178:	sub	w0, w0, w22
  42d17c:	cmp	w1, w0
  42d180:	b.hi	42d19c <ferror@plt+0x29bcc>  // b.pmore
  42d184:	mov	w20, #0x0                   	// #0
  42d188:	b	42d21c <ferror@plt+0x29c4c>
  42d18c:	mov	w20, #0x0                   	// #0
  42d190:	cbz	w1, 42d21c <ferror@plt+0x29c4c>
  42d194:	mov	w22, #0x0                   	// #0
  42d198:	b	42d1b0 <ferror@plt+0x29be0>
  42d19c:	ldrsb	w0, [x19, #3]
  42d1a0:	tbz	w0, #31, 42d208 <ferror@plt+0x29c38>
  42d1a4:	add	w1, w1, w22
  42d1a8:	mov	w20, #0x1                   	// #1
  42d1ac:	str	xzr, [x21]
  42d1b0:	ldr	x0, [x21]
  42d1b4:	bl	410018 <ferror@plt+0xca48>
  42d1b8:	mov	w23, w0
  42d1bc:	mov	x1, #0x8                   	// #8
  42d1c0:	add	x1, x1, w0, uxtw #4
  42d1c4:	ldr	x0, [x21]
  42d1c8:	cbz	x0, 42d210 <ferror@plt+0x29c40>
  42d1cc:	ldr	w24, [x0, #4]
  42d1d0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42d1d4:	str	x0, [x21]
  42d1d8:	and	w23, w23, #0x7fffffff
  42d1dc:	stp	w23, w24, [x0]
  42d1e0:	mov	x1, x0
  42d1e4:	cbz	w20, 42d234 <ferror@plt+0x29c64>
  42d1e8:	add	x2, x0, #0x8
  42d1ec:	add	x19, x19, #0x8
  42d1f0:	mov	w0, w22
  42d1f4:	cbz	w0, 42d218 <ferror@plt+0x29c48>
  42d1f8:	ldp	x4, x5, [x19], #16
  42d1fc:	sub	w0, w0, #0x1
  42d200:	stp	x4, x5, [x2], #16
  42d204:	b	42d1f4 <ferror@plt+0x29c24>
  42d208:	mov	w20, #0x0                   	// #0
  42d20c:	b	42d194 <ferror@plt+0x29bc4>
  42d210:	mov	w24, #0x0                   	// #0
  42d214:	b	42d1d0 <ferror@plt+0x29c00>
  42d218:	str	w22, [x1, #4]
  42d21c:	mov	w0, w20
  42d220:	ldp	x19, x20, [sp, #16]
  42d224:	ldp	x21, x22, [sp, #32]
  42d228:	ldp	x23, x24, [sp, #48]
  42d22c:	ldp	x29, x30, [sp], #64
  42d230:	ret
  42d234:	mov	w20, #0x1                   	// #1
  42d238:	b	42d21c <ferror@plt+0x29c4c>
  42d23c:	stp	x29, x30, [sp, #-96]!
  42d240:	mov	x29, sp
  42d244:	stp	x19, x20, [sp, #16]
  42d248:	mov	x19, x0
  42d24c:	stp	x21, x22, [sp, #32]
  42d250:	ldr	w22, [x0, #40]
  42d254:	stp	x23, x24, [sp, #48]
  42d258:	ldp	x24, x20, [x0]
  42d25c:	stp	x25, x26, [sp, #64]
  42d260:	ldp	x1, x0, [x0, #16]
  42d264:	str	x27, [sp, #80]
  42d268:	add	x25, x24, x20, lsl #4
  42d26c:	sub	x1, x1, x0
  42d270:	lsl	x0, x1, #1
  42d274:	cmp	x20, x1, lsl #1
  42d278:	b.cc	42d290 <ferror@plt+0x29cc0>  // b.lo, b.ul, b.last
  42d27c:	lsl	w1, w1, #3
  42d280:	cmp	x20, x1
  42d284:	b.ls	42d2a8 <ferror@plt+0x29cd8>  // b.plast
  42d288:	cmp	x20, #0x20
  42d28c:	b.ls	42d2a8 <ferror@plt+0x29cd8>  // b.plast
  42d290:	bl	41fad8 <ferror@plt+0x1c508>
  42d294:	mov	w22, w0
  42d298:	adrp	x0, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  42d29c:	add	x0, x0, #0xa78
  42d2a0:	ubfiz	x1, x22, #4, #32
  42d2a4:	ldr	w20, [x0, x1]
  42d2a8:	ldrb	w0, [x19, #44]
  42d2ac:	mov	x1, x20
  42d2b0:	mov	x26, x24
  42d2b4:	bl	42b2bc <ferror@plt+0x27cec>
  42d2b8:	mov	x23, x0
  42d2bc:	ldp	x0, x1, [x19, #16]
  42d2c0:	stp	x23, x20, [x19]
  42d2c4:	str	w22, [x19, #40]
  42d2c8:	sub	x0, x0, x1
  42d2cc:	stp	x0, xzr, [x19, #16]
  42d2d0:	ldr	w27, [x26]
  42d2d4:	cbz	w27, 42d32c <ferror@plt+0x29d5c>
  42d2d8:	mov	w1, w22
  42d2dc:	mov	w0, w27
  42d2e0:	bl	41e73c <ferror@plt+0x1b16c>
  42d2e4:	mov	w21, w0
  42d2e8:	ubfiz	x0, x21, #4, #32
  42d2ec:	add	x2, x23, x0
  42d2f0:	ldr	w0, [x23, x0]
  42d2f4:	cbz	w0, 42d324 <ferror@plt+0x29d54>
  42d2f8:	mov	w1, w22
  42d2fc:	mov	w0, w27
  42d300:	bl	41e774 <ferror@plt+0x1b1a4>
  42d304:	add	w21, w21, w0
  42d308:	cmp	x20, w21, uxtw
  42d30c:	b.hi	42d314 <ferror@plt+0x29d44>  // b.pmore
  42d310:	sub	w21, w21, w20
  42d314:	ubfiz	x1, x21, #4, #32
  42d318:	add	x2, x23, x1
  42d31c:	ldr	w1, [x23, x1]
  42d320:	cbnz	w1, 42d304 <ferror@plt+0x29d34>
  42d324:	ldp	x0, x1, [x26]
  42d328:	stp	x0, x1, [x2]
  42d32c:	add	x26, x26, #0x10
  42d330:	cmp	x25, x26
  42d334:	b.hi	42d2d0 <ferror@plt+0x29d00>  // b.pmore
  42d338:	ldrb	w0, [x19, #44]
  42d33c:	cbnz	w0, 42d360 <ferror@plt+0x29d90>
  42d340:	mov	x0, x24
  42d344:	ldp	x19, x20, [sp, #16]
  42d348:	ldp	x21, x22, [sp, #32]
  42d34c:	ldp	x23, x24, [sp, #48]
  42d350:	ldp	x25, x26, [sp, #64]
  42d354:	ldr	x27, [sp, #80]
  42d358:	ldp	x29, x30, [sp], #96
  42d35c:	b	4032a0 <free@plt>
  42d360:	mov	x0, x24
  42d364:	ldp	x19, x20, [sp, #16]
  42d368:	ldp	x21, x22, [sp, #32]
  42d36c:	ldp	x23, x24, [sp, #48]
  42d370:	ldp	x25, x26, [sp, #64]
  42d374:	ldr	x27, [sp, #80]
  42d378:	ldp	x29, x30, [sp], #96
  42d37c:	b	410418 <ferror@plt+0xce48>
  42d380:	str	xzr, [x0]
  42d384:	ret
  42d388:	stp	x29, x30, [sp, #-32]!
  42d38c:	mov	x29, sp
  42d390:	stp	x19, x20, [sp, #16]
  42d394:	mov	x19, x0
  42d398:	ldr	x0, [x19]
  42d39c:	cbz	x0, 42d3b0 <ferror@plt+0x29de0>
  42d3a0:	ldr	x20, [x0]
  42d3a4:	bl	4032a0 <free@plt>
  42d3a8:	str	x20, [x19]
  42d3ac:	b	42d398 <ferror@plt+0x29dc8>
  42d3b0:	ldp	x19, x20, [sp, #16]
  42d3b4:	ldp	x29, x30, [sp], #32
  42d3b8:	ret
  42d3bc:	cmp	x0, #0x10, lsl #12
  42d3c0:	b.ne	42d3d0 <ferror@plt+0x29e00>  // b.any
  42d3c4:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42d3c8:	ldr	x1, [x2, #592]
  42d3cc:	cbnz	x1, 42d3d4 <ferror@plt+0x29e04>
  42d3d0:	b	45d6bc <_obstack_memory_used@@Base+0x12cc>
  42d3d4:	ldr	x0, [x1]
  42d3d8:	str	x0, [x2, #592]
  42d3dc:	mov	x0, x1
  42d3e0:	ret
  42d3e4:	ldr	x2, [x0]
  42d3e8:	mov	x1, x0
  42d3ec:	sub	x2, x2, x0
  42d3f0:	cmp	x2, #0x10, lsl #12
  42d3f4:	b.ne	42d40c <ferror@plt+0x29e3c>  // b.any
  42d3f8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  42d3fc:	ldr	x2, [x0, #592]
  42d400:	str	x2, [x1]
  42d404:	str	x1, [x0, #592]
  42d408:	ret
  42d40c:	b	4032a0 <free@plt>
  42d410:	stp	x29, x30, [sp, #-32]!
  42d414:	mov	x29, sp
  42d418:	str	x19, [sp, #16]
  42d41c:	eor	x19, x1, x0
  42d420:	blr	x2
  42d424:	asr	w0, w0, #31
  42d428:	sxtw	x0, w0
  42d42c:	and	x0, x0, x19
  42d430:	ldr	x19, [sp, #16]
  42d434:	ldp	x29, x30, [sp], #32
  42d438:	ret
  42d43c:	stp	x29, x30, [sp, #-96]!
  42d440:	mov	x29, sp
  42d444:	stp	x21, x22, [sp, #32]
  42d448:	stp	x23, x24, [sp, #48]
  42d44c:	mov	x23, x0
  42d450:	mov	x24, x3
  42d454:	ldp	x21, x0, [x1, #24]
  42d458:	stp	x19, x20, [sp, #16]
  42d45c:	mov	x19, x1
  42d460:	stp	x25, x26, [sp, #64]
  42d464:	mov	x25, x2
  42d468:	str	x27, [sp, #80]
  42d46c:	cmp	x0, x2
  42d470:	b.cc	42d800 <ferror@plt+0x2a230>  // b.lo, b.ul, b.last
  42d474:	ldr	x2, [x19]
  42d478:	stp	x3, x25, [x19, #8]
  42d47c:	add	x20, x23, x21
  42d480:	mov	x1, x23
  42d484:	mov	x0, x20
  42d488:	bl	42d410 <ferror@plt+0x29e40>
  42d48c:	add	x21, x23, x21, lsl #1
  42d490:	eor	x20, x20, x0
  42d494:	eor	x23, x23, x0
  42d498:	ldr	x0, [x19, #16]
  42d49c:	cmp	x0, #0x3
  42d4a0:	b.ne	42d4d4 <ferror@plt+0x29f04>  // b.any
  42d4a4:	ldr	x2, [x19]
  42d4a8:	mov	x1, x20
  42d4ac:	mov	x0, x21
  42d4b0:	bl	42d410 <ferror@plt+0x29e40>
  42d4b4:	eor	x20, x20, x0
  42d4b8:	ldr	x2, [x19]
  42d4bc:	mov	x1, x23
  42d4c0:	eor	x21, x21, x0
  42d4c4:	mov	x0, x20
  42d4c8:	bl	42d410 <ferror@plt+0x29e40>
  42d4cc:	eor	x23, x23, x0
  42d4d0:	eor	x20, x20, x0
  42d4d4:	ldp	x1, x24, [x19, #16]
  42d4d8:	cmp	x1, #0x3
  42d4dc:	b.hi	42d5e0 <ferror@plt+0x2a010>  // b.pmore
  42d4e0:	cmp	x24, #0x8
  42d4e4:	b.ne	42d524 <ferror@plt+0x29f54>  // b.any
  42d4e8:	cmp	x1, #0x3
  42d4ec:	ldr	x2, [x20]
  42d4f0:	ldr	x3, [x23]
  42d4f4:	ldr	x0, [x19, #8]
  42d4f8:	b.ne	42d504 <ferror@plt+0x29f34>  // b.any
  42d4fc:	ldr	x1, [x21]
  42d500:	str	x1, [x0, #16]
  42d504:	stp	x3, x2, [x0]
  42d508:	ldp	x19, x20, [sp, #16]
  42d50c:	ldp	x21, x22, [sp, #32]
  42d510:	ldp	x23, x24, [sp, #48]
  42d514:	ldp	x25, x26, [sp, #64]
  42d518:	ldr	x27, [sp, #80]
  42d51c:	ldp	x29, x30, [sp], #96
  42d520:	ret
  42d524:	cmp	x24, #0x4
  42d528:	b.ne	42d550 <ferror@plt+0x29f80>  // b.any
  42d52c:	ldr	w2, [x20]
  42d530:	cmp	x1, #0x3
  42d534:	ldr	w3, [x23]
  42d538:	ldr	x0, [x19, #8]
  42d53c:	b.ne	42d548 <ferror@plt+0x29f78>  // b.any
  42d540:	ldr	w1, [x21]
  42d544:	str	w1, [x0, #8]
  42d548:	stp	w3, w2, [x0]
  42d54c:	b	42d508 <ferror@plt+0x29f38>
  42d550:	mov	x0, #0x0                   	// #0
  42d554:	ldr	x2, [x19, #24]
  42d558:	add	x3, x0, #0x8
  42d55c:	cmp	x3, x2
  42d560:	b.hi	42d59c <ferror@plt+0x29fcc>  // b.pmore
  42d564:	ldp	x1, x6, [x19, #8]
  42d568:	ldr	x5, [x23, x0]
  42d56c:	ldr	x4, [x20, x0]
  42d570:	add	x1, x1, x0
  42d574:	cmp	x6, #0x3
  42d578:	b.ne	42d588 <ferror@plt+0x29fb8>  // b.any
  42d57c:	lsl	x2, x2, #1
  42d580:	ldr	x0, [x21, x0]
  42d584:	str	x0, [x1, x2]
  42d588:	str	x5, [x1]
  42d58c:	ldr	x0, [x19, #24]
  42d590:	str	x4, [x1, x0]
  42d594:	mov	x0, x3
  42d598:	b	42d554 <ferror@plt+0x29f84>
  42d59c:	ldr	x2, [x19, #24]
  42d5a0:	cmp	x2, x0
  42d5a4:	b.ls	42d508 <ferror@plt+0x29f38>  // b.plast
  42d5a8:	ldp	x1, x5, [x19, #8]
  42d5ac:	ldrb	w4, [x23, x0]
  42d5b0:	ldrb	w3, [x20, x0]
  42d5b4:	add	x1, x1, x0
  42d5b8:	cmp	x5, #0x3
  42d5bc:	b.ne	42d5cc <ferror@plt+0x29ffc>  // b.any
  42d5c0:	lsl	x2, x2, #1
  42d5c4:	ldrb	w5, [x21, x0]
  42d5c8:	strb	w5, [x1, x2]
  42d5cc:	strb	w4, [x1]
  42d5d0:	add	x0, x0, #0x1
  42d5d4:	ldr	x2, [x19, #24]
  42d5d8:	strb	w3, [x1, x2]
  42d5dc:	b	42d59c <ferror@plt+0x29fcc>
  42d5e0:	add	x25, x21, x24
  42d5e4:	cmp	x1, #0x5
  42d5e8:	add	x24, x21, x24, lsl #1
  42d5ec:	ldr	x2, [x19]
  42d5f0:	b.ne	42d620 <ferror@plt+0x2a050>  // b.any
  42d5f4:	mov	x1, x25
  42d5f8:	mov	x0, x24
  42d5fc:	bl	42d410 <ferror@plt+0x29e40>
  42d600:	eor	x24, x24, x0
  42d604:	ldr	x2, [x19]
  42d608:	mov	x1, x21
  42d60c:	eor	x25, x25, x0
  42d610:	mov	x0, x24
  42d614:	bl	42d410 <ferror@plt+0x29e40>
  42d618:	eor	x21, x0, x21
  42d61c:	eor	x24, x24, x0
  42d620:	ldr	x2, [x19]
  42d624:	mov	x1, x21
  42d628:	mov	x0, x25
  42d62c:	bl	42d410 <ferror@plt+0x29e40>
  42d630:	eor	x21, x21, x0
  42d634:	eor	x25, x25, x0
  42d638:	ldr	x0, [x19, #16]
  42d63c:	cmp	x0, #0x5
  42d640:	b.ne	42d674 <ferror@plt+0x2a0a4>  // b.any
  42d644:	ldr	x2, [x19]
  42d648:	mov	x1, x23
  42d64c:	mov	x0, x25
  42d650:	bl	42d410 <ferror@plt+0x29e40>
  42d654:	eor	x23, x23, x0
  42d658:	ldr	x2, [x19]
  42d65c:	mov	x1, x20
  42d660:	eor	x25, x25, x0
  42d664:	mov	x0, x24
  42d668:	bl	42d410 <ferror@plt+0x29e40>
  42d66c:	eor	x20, x0, x20
  42d670:	eor	x24, x24, x0
  42d674:	ldr	x2, [x19]
  42d678:	mov	x1, x23
  42d67c:	mov	x0, x21
  42d680:	bl	42d410 <ferror@plt+0x29e40>
  42d684:	eor	x21, x21, x0
  42d688:	ldr	x2, [x19]
  42d68c:	mov	x1, x20
  42d690:	eor	x23, x23, x0
  42d694:	mov	x0, x25
  42d698:	bl	42d410 <ferror@plt+0x29e40>
  42d69c:	eor	x20, x20, x0
  42d6a0:	ldr	x2, [x19]
  42d6a4:	mov	x1, x20
  42d6a8:	eor	x25, x25, x0
  42d6ac:	mov	x0, x21
  42d6b0:	bl	42d410 <ferror@plt+0x29e40>
  42d6b4:	eor	x1, x20, x0
  42d6b8:	eor	x21, x21, x0
  42d6bc:	ldr	x0, [x19, #24]
  42d6c0:	cmp	x0, #0x8
  42d6c4:	b.ne	42d6f8 <ferror@plt+0x2a128>  // b.any
  42d6c8:	ldp	x0, x5, [x19, #8]
  42d6cc:	ldr	x3, [x1]
  42d6d0:	ldr	x2, [x21]
  42d6d4:	cmp	x5, #0x5
  42d6d8:	ldr	x4, [x23]
  42d6dc:	ldr	x1, [x25]
  42d6e0:	b.ne	42d6ec <ferror@plt+0x2a11c>  // b.any
  42d6e4:	ldr	x5, [x24]
  42d6e8:	str	x5, [x0, #32]
  42d6ec:	stp	x4, x3, [x0]
  42d6f0:	stp	x2, x1, [x0, #16]
  42d6f4:	b	42d508 <ferror@plt+0x29f38>
  42d6f8:	cmp	x0, #0x4
  42d6fc:	b.ne	42d730 <ferror@plt+0x2a160>  // b.any
  42d700:	ldp	x0, x5, [x19, #8]
  42d704:	ldr	w3, [x1]
  42d708:	ldr	w2, [x21]
  42d70c:	ldr	w4, [x23]
  42d710:	ldr	w1, [x25]
  42d714:	cmp	x5, #0x5
  42d718:	b.ne	42d724 <ferror@plt+0x2a154>  // b.any
  42d71c:	ldr	w5, [x24]
  42d720:	str	w5, [x0, #16]
  42d724:	stp	w4, w3, [x0]
  42d728:	stp	w2, w1, [x0, #8]
  42d72c:	b	42d508 <ferror@plt+0x29f38>
  42d730:	mov	x2, #0x0                   	// #0
  42d734:	ldr	x3, [x19, #24]
  42d738:	add	x4, x2, #0x8
  42d73c:	cmp	x4, x3
  42d740:	b.hi	42d79c <ferror@plt+0x2a1cc>  // b.pmore
  42d744:	ldp	x0, x9, [x19, #8]
  42d748:	ldr	x8, [x23, x2]
  42d74c:	ldr	x7, [x1, x2]
  42d750:	add	x0, x0, x2
  42d754:	cmp	x9, #0x5
  42d758:	ldr	x6, [x21, x2]
  42d75c:	ldr	x5, [x25, x2]
  42d760:	b.ne	42d770 <ferror@plt+0x2a1a0>  // b.any
  42d764:	lsl	x3, x3, #2
  42d768:	ldr	x2, [x24, x2]
  42d76c:	str	x2, [x0, x3]
  42d770:	str	x8, [x0]
  42d774:	ldr	x3, [x19, #24]
  42d778:	add	x2, x0, x3
  42d77c:	str	x7, [x0, x3]
  42d780:	ldr	x0, [x19, #24]
  42d784:	add	x3, x2, x0
  42d788:	str	x6, [x2, x0]
  42d78c:	mov	x2, x4
  42d790:	ldr	x0, [x19, #24]
  42d794:	str	x5, [x3, x0]
  42d798:	b	42d734 <ferror@plt+0x2a164>
  42d79c:	ldr	x3, [x19, #24]
  42d7a0:	cmp	x3, x2
  42d7a4:	b.ls	42d508 <ferror@plt+0x29f38>  // b.plast
  42d7a8:	ldp	x0, x8, [x19, #8]
  42d7ac:	ldrb	w4, [x23, x2]
  42d7b0:	ldrb	w7, [x1, x2]
  42d7b4:	ldrb	w6, [x21, x2]
  42d7b8:	ldrb	w5, [x25, x2]
  42d7bc:	add	x0, x0, x2
  42d7c0:	cmp	x8, #0x5
  42d7c4:	b.ne	42d7d4 <ferror@plt+0x2a204>  // b.any
  42d7c8:	lsl	x3, x3, #2
  42d7cc:	ldrb	w8, [x24, x2]
  42d7d0:	strb	w8, [x0, x3]
  42d7d4:	strb	w4, [x0]
  42d7d8:	add	x2, x2, #0x1
  42d7dc:	ldr	x4, [x19, #24]
  42d7e0:	add	x3, x0, x4
  42d7e4:	strb	w7, [x0, x4]
  42d7e8:	ldr	x0, [x19, #24]
  42d7ec:	add	x4, x3, x0
  42d7f0:	strb	w6, [x3, x0]
  42d7f4:	ldr	x0, [x19, #24]
  42d7f8:	strb	w5, [x4, x0]
  42d7fc:	b	42d79c <ferror@plt+0x2a1cc>
  42d800:	lsr	x26, x2, #1
  42d804:	cmp	x23, x3
  42d808:	csel	x20, x4, x23, eq  // eq = none
  42d80c:	sub	x2, x2, x2, lsr #1
  42d810:	mul	x21, x26, x21
  42d814:	add	x27, x23, x21
  42d818:	add	x22, x3, x21
  42d81c:	mov	x3, x22
  42d820:	mov	x0, x27
  42d824:	bl	42d43c <ferror@plt+0x29e6c>
  42d828:	mov	x2, x26
  42d82c:	mov	x1, x19
  42d830:	mov	x0, x23
  42d834:	mov	x4, x27
  42d838:	mov	x3, x20
  42d83c:	bl	42d43c <ferror@plt+0x29e6c>
  42d840:	ldr	x2, [x19]
  42d844:	mov	x0, x22
  42d848:	ldr	x1, [x19, #24]
  42d84c:	sub	x1, x21, x1
  42d850:	add	x1, x20, x1
  42d854:	blr	x2
  42d858:	tbz	w0, #31, 42d8bc <ferror@plt+0x2a2ec>
  42d85c:	ldr	x0, [x19, #24]
  42d860:	cmp	x0, #0x8
  42d864:	madd	x25, x0, x25, x24
  42d868:	b.ne	42d8e4 <ferror@plt+0x2a314>  // b.any
  42d86c:	ldr	x2, [x19]
  42d870:	mov	x1, x20
  42d874:	mov	x0, x22
  42d878:	blr	x2
  42d87c:	asr	w0, w0, #31
  42d880:	eor	x2, x22, x20
  42d884:	sxtw	x1, w0
  42d888:	and	w0, w0, #0x8
  42d88c:	and	x2, x2, x1
  42d890:	eor	x2, x20, x2
  42d894:	add	x22, x22, w0, sxtw
  42d898:	ldr	x2, [x2]
  42d89c:	str	x2, [x24], #8
  42d8a0:	cmp	x24, x22
  42d8a4:	b.eq	42d508 <ferror@plt+0x29f38>  // b.none
  42d8a8:	mvn	x1, x1
  42d8ac:	cmp	x25, x22
  42d8b0:	and	x1, x1, #0x8
  42d8b4:	add	x20, x20, x1
  42d8b8:	b.ne	42d86c <ferror@plt+0x2a29c>  // b.any
  42d8bc:	sub	x2, x22, x24
  42d8c0:	mov	x1, x20
  42d8c4:	mov	x0, x24
  42d8c8:	ldp	x19, x20, [sp, #16]
  42d8cc:	ldp	x21, x22, [sp, #32]
  42d8d0:	ldp	x23, x24, [sp, #48]
  42d8d4:	ldp	x25, x26, [sp, #64]
  42d8d8:	ldr	x27, [sp, #80]
  42d8dc:	ldp	x29, x30, [sp], #96
  42d8e0:	b	402cd0 <memcpy@plt>
  42d8e4:	cmp	x0, #0x4
  42d8e8:	b.ne	42d940 <ferror@plt+0x2a370>  // b.any
  42d8ec:	ldr	x2, [x19]
  42d8f0:	mov	x1, x20
  42d8f4:	mov	x0, x22
  42d8f8:	blr	x2
  42d8fc:	asr	w0, w0, #31
  42d900:	eor	x2, x22, x20
  42d904:	sxtw	x1, w0
  42d908:	and	w0, w0, #0x4
  42d90c:	and	x2, x2, x1
  42d910:	eor	x2, x20, x2
  42d914:	add	x22, x22, w0, sxtw
  42d918:	ldr	w2, [x2]
  42d91c:	str	w2, [x24], #4
  42d920:	cmp	x24, x22
  42d924:	b.eq	42d508 <ferror@plt+0x29f38>  // b.none
  42d928:	mvn	x1, x1
  42d92c:	cmp	x25, x22
  42d930:	and	x1, x1, #0x4
  42d934:	add	x20, x20, x1
  42d938:	b.ne	42d8ec <ferror@plt+0x2a31c>  // b.any
  42d93c:	b	42d8bc <ferror@plt+0x2a2ec>
  42d940:	ldr	x2, [x19]
  42d944:	mov	x1, x20
  42d948:	mov	x0, x22
  42d94c:	blr	x2
  42d950:	asr	w21, w0, #31
  42d954:	ldr	x2, [x19, #24]
  42d958:	sxtw	x21, w21
  42d95c:	eor	x1, x22, x20
  42d960:	mov	x0, x24
  42d964:	and	x1, x1, x21
  42d968:	eor	x1, x20, x1
  42d96c:	bl	402cd0 <memcpy@plt>
  42d970:	ldr	x1, [x19, #24]
  42d974:	add	x24, x0, x1
  42d978:	and	x0, x21, x1
  42d97c:	add	x22, x22, x0
  42d980:	cmp	x24, x22
  42d984:	b.eq	42d508 <ferror@plt+0x29f38>  // b.none
  42d988:	mvn	x21, x21
  42d98c:	cmp	x25, x22
  42d990:	and	x21, x21, x1
  42d994:	add	x20, x20, x21
  42d998:	b.ne	42d940 <ferror@plt+0x2a370>  // b.any
  42d99c:	b	42d8bc <ferror@plt+0x2a2ec>
  42d9a0:	cmp	x1, #0x1
  42d9a4:	b.ls	42da3c <ferror@plt+0x2a46c>  // b.plast
  42d9a8:	stp	x29, x30, [sp, #-352]!
  42d9ac:	mov	x29, sp
  42d9b0:	stp	x19, x20, [sp, #16]
  42d9b4:	mov	x20, x1
  42d9b8:	stp	x21, x22, [sp, #32]
  42d9bc:	mov	x21, x0
  42d9c0:	tbz	x2, #63, 42da2c <ferror@plt+0x2a45c>
  42d9c4:	mvn	x2, x2
  42d9c8:	mov	x0, #0x3                   	// #3
  42d9cc:	str	x0, [sp, #88]
  42d9d0:	lsr	x0, x20, #1
  42d9d4:	stp	x3, x21, [sp, #56]
  42d9d8:	add	x22, sp, #0x60
  42d9dc:	mul	x0, x0, x2
  42d9e0:	stp	x20, x2, [sp, #72]
  42d9e4:	cmp	x0, #0x100
  42d9e8:	b.ls	42da34 <ferror@plt+0x2a464>  // b.plast
  42d9ec:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  42d9f0:	mov	x19, x0
  42d9f4:	mov	x4, x19
  42d9f8:	mov	x3, x21
  42d9fc:	mov	x2, x20
  42da00:	add	x1, sp, #0x38
  42da04:	mov	x0, x21
  42da08:	bl	42d43c <ferror@plt+0x29e6c>
  42da0c:	cmp	x19, x22
  42da10:	b.eq	42da1c <ferror@plt+0x2a44c>  // b.none
  42da14:	mov	x0, x19
  42da18:	bl	4032a0 <free@plt>
  42da1c:	ldp	x19, x20, [sp, #16]
  42da20:	ldp	x21, x22, [sp, #32]
  42da24:	ldp	x29, x30, [sp], #352
  42da28:	ret
  42da2c:	mov	x0, #0x5                   	// #5
  42da30:	b	42d9cc <ferror@plt+0x2a3fc>
  42da34:	mov	x19, x22
  42da38:	b	42d9f4 <ferror@plt+0x2a424>
  42da3c:	ret
  42da40:	mvn	x2, x2
  42da44:	b	42d9a0 <ferror@plt+0x2a3d0>
  42da48:	ldr	x6, [x1]
  42da4c:	cbz	x6, 42dab0 <ferror@plt+0x2a4e0>
  42da50:	ldr	x5, [x0]
  42da54:	ldrb	w3, [x5]
  42da58:	cmp	w3, #0x7f
  42da5c:	b.hi	42da7c <ferror@plt+0x2a4ac>  // b.pmore
  42da60:	str	w3, [x2]
  42da64:	sub	x6, x6, #0x1
  42da68:	str	x6, [x1]
  42da6c:	add	x5, x5, #0x1
  42da70:	str	x5, [x0]
  42da74:	mov	w0, #0x0                   	// #0
  42da78:	ret
  42da7c:	adrp	x7, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  42da80:	add	x7, x7, #0x2f0
  42da84:	add	x10, x7, #0x6
  42da88:	mov	x4, #0x1                   	// #1
  42da8c:	mov	x9, x4
  42da90:	add	x4, x4, #0x1
  42da94:	ldrb	w8, [x9, x7]
  42da98:	ldrb	w9, [x9, x10]
  42da9c:	bic	w11, w3, w8
  42daa0:	cmp	w11, w9
  42daa4:	b.ne	42dab8 <ferror@plt+0x2a4e8>  // b.any
  42daa8:	cmp	x6, x4
  42daac:	b.cs	42dac8 <ferror@plt+0x2a4f8>  // b.hs, b.nlast
  42dab0:	mov	w0, #0x16                  	// #22
  42dab4:	b	42da78 <ferror@plt+0x2a4a8>
  42dab8:	cmp	x4, #0x6
  42dabc:	b.ne	42da8c <ferror@plt+0x2a4bc>  // b.any
  42dac0:	mov	w0, #0x54                  	// #84
  42dac4:	b	42da78 <ferror@plt+0x2a4a8>
  42dac8:	and	w3, w3, w8
  42dacc:	add	x8, x5, #0x1
  42dad0:	add	x5, x5, x4
  42dad4:	ldrb	w7, [x8], #1
  42dad8:	and	w9, w7, #0xc0
  42dadc:	cmp	w9, #0x80
  42dae0:	b.ne	42dac0 <ferror@plt+0x2a4f0>  // b.any
  42dae4:	and	w7, w7, #0x3f
  42dae8:	cmp	x5, x8
  42daec:	add	w3, w7, w3, lsl #6
  42daf0:	b.ne	42dad4 <ferror@plt+0x2a504>  // b.any
  42daf4:	sub	w8, w3, #0x80
  42daf8:	mov	w7, #0x7fffff80            	// #2147483520
  42dafc:	cmp	w8, w7
  42db00:	b.cs	42dac0 <ferror@plt+0x2a4f0>  // b.hs, b.nlast
  42db04:	cmp	w3, #0x7ff
  42db08:	ccmp	x4, #0x2, #0x0, ls  // ls = plast
  42db0c:	b.hi	42dac0 <ferror@plt+0x2a4f0>  // b.pmore
  42db10:	mov	w7, #0xffff                	// #65535
  42db14:	cmp	w3, w7
  42db18:	ccmp	x4, #0x3, #0x0, ls  // ls = plast
  42db1c:	b.hi	42dac0 <ferror@plt+0x2a4f0>  // b.pmore
  42db20:	mov	w7, #0x1fffff              	// #2097151
  42db24:	cmp	w3, w7
  42db28:	ccmp	x4, #0x4, #0x0, ls  // ls = plast
  42db2c:	b.hi	42dac0 <ferror@plt+0x2a4f0>  // b.pmore
  42db30:	mov	w7, #0x3ffffff             	// #67108863
  42db34:	cmp	w3, w7
  42db38:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
  42db3c:	b.hi	42dac0 <ferror@plt+0x2a4f0>  // b.pmore
  42db40:	mov	w7, #0xffff2800            	// #-55296
  42db44:	add	w7, w3, w7
  42db48:	cmp	w7, #0x7ff
  42db4c:	b.ls	42dac0 <ferror@plt+0x2a4f0>  // b.plast
  42db50:	str	w3, [x2]
  42db54:	sub	x4, x6, x4
  42db58:	str	x5, [x0]
  42db5c:	str	x4, [x1]
  42db60:	b	42da74 <ferror@plt+0x2a4a4>
  42db64:	sub	sp, sp, #0x10
  42db68:	cmp	w0, #0x7f
  42db6c:	ldr	x6, [x1]
  42db70:	b.hi	42dc04 <ferror@plt+0x2a634>  // b.pmore
  42db74:	add	x3, sp, #0xd
  42db78:	mov	x4, #0x1                   	// #1
  42db7c:	strb	w0, [sp, #13]
  42db80:	ldr	x0, [x2]
  42db84:	cmp	x0, x4
  42db88:	b.cc	42dc48 <ferror@plt+0x2a678>  // b.lo, b.ul, b.last
  42db8c:	add	x0, sp, #0xe
  42db90:	mov	x5, #0x0                   	// #0
  42db94:	add	x7, x5, x3
  42db98:	cmp	x0, x7
  42db9c:	b.ls	42dc1c <ferror@plt+0x2a64c>  // b.plast
  42dba0:	ldrb	w7, [x3, x5]
  42dba4:	strb	w7, [x6, x5]
  42dba8:	add	x5, x5, #0x1
  42dbac:	b	42db94 <ferror@plt+0x2a5c4>
  42dbb0:	mov	x5, x9
  42dbb4:	mov	x7, x4
  42dbb8:	and	w4, w0, #0x3f
  42dbbc:	lsr	w0, w0, #6
  42dbc0:	orr	w4, w4, #0xffffff80
  42dbc4:	sturb	w4, [x5, #-1]
  42dbc8:	sub	x9, x5, #0x1
  42dbcc:	add	x4, x7, #0x1
  42dbd0:	cmp	w0, #0x3e
  42dbd4:	b.hi	42dbb0 <ferror@plt+0x2a5e0>  // b.pmore
  42dbd8:	add	x8, x3, x4
  42dbdc:	ldurb	w8, [x8, #-1]
  42dbe0:	tst	w8, w0
  42dbe4:	b.ne	42dbb0 <ferror@plt+0x2a5e0>  // b.any
  42dbe8:	adrp	x8, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  42dbec:	add	x8, x8, #0x2f6
  42dbf0:	sub	x3, x5, #0x2
  42dbf4:	ldrb	w7, [x8, x7]
  42dbf8:	orr	w0, w0, w7
  42dbfc:	sturb	w0, [x5, #-2]
  42dc00:	b	42db80 <ferror@plt+0x2a5b0>
  42dc04:	adrp	x3, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  42dc08:	add	x3, x3, #0x2f0
  42dc0c:	add	x5, sp, #0xe
  42dc10:	add	x3, x3, #0xc
  42dc14:	mov	x7, #0x1                   	// #1
  42dc18:	b	42dbb8 <ferror@plt+0x2a5e8>
  42dc1c:	ldr	x5, [x2]
  42dc20:	cmp	x3, x0
  42dc24:	sub	x4, x5, x4
  42dc28:	str	x4, [x2]
  42dc2c:	sub	x2, x0, x3
  42dc30:	mov	w0, #0x0                   	// #0
  42dc34:	csel	x2, x2, xzr, ls  // ls = plast
  42dc38:	add	x6, x6, x2
  42dc3c:	str	x6, [x1]
  42dc40:	add	sp, sp, #0x10
  42dc44:	ret
  42dc48:	mov	w0, #0x7                   	// #7
  42dc4c:	b	42dc40 <ferror@plt+0x2a670>
  42dc50:	stp	x29, x30, [sp, #-32]!
  42dc54:	mov	x12, x0
  42dc58:	mov	x0, x1
  42dc5c:	mov	x29, sp
  42dc60:	mov	x1, x2
  42dc64:	ldr	x2, [x4]
  42dc68:	str	wzr, [sp, #28]
  42dc6c:	cmp	x2, #0x3
  42dc70:	b.ls	42dce8 <ferror@plt+0x2a718>  // b.plast
  42dc74:	mov	x14, x3
  42dc78:	mov	x13, x4
  42dc7c:	add	x2, sp, #0x1c
  42dc80:	bl	42da48 <ferror@plt+0x2a478>
  42dc84:	cbnz	w0, 42dce0 <ferror@plt+0x2a710>
  42dc88:	cmp	x12, #0x0
  42dc8c:	mov	x1, #0x3                   	// #3
  42dc90:	ldr	x2, [x14]
  42dc94:	csel	x3, x1, xzr, ne  // ne = any
  42dc98:	ldr	w4, [sp, #28]
  42dc9c:	csel	x1, xzr, x1, ne  // ne = any
  42dca0:	strb	w4, [x2, x3]
  42dca4:	cinc	x4, x2, ne  // ne = any
  42dca8:	ldr	w3, [sp, #28]
  42dcac:	lsr	w3, w3, #8
  42dcb0:	strb	w3, [x4, #1]
  42dcb4:	cinc	x3, x2, eq  // eq = none
  42dcb8:	ldrh	w4, [sp, #30]
  42dcbc:	strb	w4, [x3, #1]
  42dcc0:	ldrb	w3, [sp, #31]
  42dcc4:	strb	w3, [x2, x1]
  42dcc8:	ldr	x1, [x14]
  42dccc:	add	x1, x1, #0x4
  42dcd0:	str	x1, [x14]
  42dcd4:	ldr	x1, [x13]
  42dcd8:	sub	x1, x1, #0x4
  42dcdc:	str	x1, [x13]
  42dce0:	ldp	x29, x30, [sp], #32
  42dce4:	ret
  42dce8:	mov	w0, #0x7                   	// #7
  42dcec:	b	42dce0 <ferror@plt+0x2a710>
  42dcf0:	stp	x29, x30, [sp, #-48]!
  42dcf4:	mov	x14, x1
  42dcf8:	mov	x18, x0
  42dcfc:	mov	x29, sp
  42dd00:	ldr	x15, [x3]
  42dd04:	mov	x13, x3
  42dd08:	mov	x12, x4
  42dd0c:	mov	x1, x2
  42dd10:	mov	x0, x14
  42dd14:	stp	x19, x20, [sp, #16]
  42dd18:	str	wzr, [sp, #44]
  42dd1c:	ldr	x19, [x2]
  42dd20:	add	x2, sp, #0x2c
  42dd24:	ldr	x20, [x14]
  42dd28:	bl	42da48 <ferror@plt+0x2a478>
  42dd2c:	cbnz	w0, 42dd4c <ferror@plt+0x2a77c>
  42dd30:	ldr	w5, [sp, #44]
  42dd34:	mov	w2, #0x10ffff              	// #1114111
  42dd38:	cmp	w5, w2
  42dd3c:	b.ls	42dd58 <ferror@plt+0x2a788>  // b.plast
  42dd40:	str	x20, [x14]
  42dd44:	mov	w0, #0x54                  	// #84
  42dd48:	str	x19, [x1]
  42dd4c:	ldp	x19, x20, [sp, #16]
  42dd50:	ldp	x29, x30, [sp], #48
  42dd54:	ret
  42dd58:	mov	w3, #0xffff                	// #65535
  42dd5c:	cmp	w5, w3
  42dd60:	ldr	x2, [x12]
  42dd64:	b.hi	42ddb8 <ferror@plt+0x2a7e8>  // b.pmore
  42dd68:	cmp	x2, #0x1
  42dd6c:	b.hi	42dd80 <ferror@plt+0x2a7b0>  // b.pmore
  42dd70:	str	x20, [x14]
  42dd74:	mov	w0, #0x7                   	// #7
  42dd78:	str	x19, [x1]
  42dd7c:	b	42dd4c <ferror@plt+0x2a77c>
  42dd80:	cmp	x18, #0x0
  42dd84:	cset	x1, ne  // ne = any
  42dd88:	cset	x2, eq  // eq = none
  42dd8c:	strb	w5, [x15, x1]
  42dd90:	ldr	w1, [sp, #44]
  42dd94:	lsr	w1, w1, #8
  42dd98:	strb	w1, [x15, x2]
  42dd9c:	ldr	x1, [x13]
  42dda0:	add	x1, x1, #0x2
  42dda4:	str	x1, [x13]
  42dda8:	ldr	x1, [x12]
  42ddac:	sub	x1, x1, #0x2
  42ddb0:	str	x1, [x12]
  42ddb4:	b	42dd4c <ferror@plt+0x2a77c>
  42ddb8:	cmp	x2, #0x3
  42ddbc:	b.ls	42dd70 <ferror@plt+0x2a7a0>  // b.plast
  42ddc0:	sub	w1, w5, #0x10, lsl #12
  42ddc4:	cmp	x18, #0x0
  42ddc8:	mov	w2, #0xd800                	// #55296
  42ddcc:	cset	x3, ne  // ne = any
  42ddd0:	add	w1, w2, w1, lsr #10
  42ddd4:	and	w5, w5, #0x3ff
  42ddd8:	mov	w2, #0xdc00                	// #56320
  42dddc:	add	w5, w5, w2
  42dde0:	cset	x2, eq  // eq = none
  42dde4:	strb	w1, [x15, x3]
  42dde8:	add	x3, x3, #0x2
  42ddec:	lsr	w1, w1, #8
  42ddf0:	strb	w1, [x15, x2]
  42ddf4:	add	x2, x2, #0x2
  42ddf8:	strb	w5, [x15, x3]
  42ddfc:	lsr	w5, w5, #8
  42de00:	strb	w5, [x15, x2]
  42de04:	ldr	x1, [x13]
  42de08:	add	x1, x1, #0x4
  42de0c:	str	x1, [x13]
  42de10:	ldr	x1, [x12]
  42de14:	sub	x1, x1, #0x4
  42de18:	b	42ddb0 <ferror@plt+0x2a7e0>
  42de1c:	mov	w0, #0x1                   	// #1
  42de20:	ret
  42de24:	stp	x29, x30, [sp, #-96]!
  42de28:	mov	x29, sp
  42de2c:	stp	x21, x22, [sp, #32]
  42de30:	mov	x22, x1
  42de34:	mov	x21, x2
  42de38:	mov	x1, x2
  42de3c:	stp	x19, x20, [sp, #16]
  42de40:	mov	x19, x8
  42de44:	stp	x23, x24, [sp, #48]
  42de48:	mov	x23, x0
  42de4c:	mov	x0, x22
  42de50:	stp	x25, x26, [sp, #64]
  42de54:	str	x27, [sp, #80]
  42de58:	bl	403080 <strcasecmp@plt>
  42de5c:	cbnz	w0, 42de98 <ferror@plt+0x2a8c8>
  42de60:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  42de64:	add	x0, x0, #0x278
  42de68:	str	x0, [x19]
  42de6c:	mov	x0, #0xffffffffffffffff    	// #-1
  42de70:	str	x0, [x19, #8]
  42de74:	str	w0, [x19, #16]
  42de78:	mov	sp, x29
  42de7c:	ldp	x19, x20, [sp, #16]
  42de80:	ldp	x21, x22, [sp, #32]
  42de84:	ldp	x23, x24, [sp, #48]
  42de88:	ldp	x25, x26, [sp, #64]
  42de8c:	ldr	x27, [sp, #80]
  42de90:	ldp	x29, x30, [sp], #96
  42de94:	ret
  42de98:	mov	x0, x22
  42de9c:	bl	402d50 <strlen@plt>
  42dea0:	mov	x20, x0
  42dea4:	mov	x0, x21
  42dea8:	bl	402d50 <strlen@plt>
  42deac:	add	x20, x20, x0
  42deb0:	add	x20, x20, #0x11
  42deb4:	mov	x1, x21
  42deb8:	and	x20, x20, #0xfffffffffffffff0
  42debc:	mov	x24, #0x0                   	// #0
  42dec0:	sub	sp, sp, x20
  42dec4:	adrp	x20, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  42dec8:	add	x20, x20, #0x2f0
  42decc:	mov	x25, sp
  42ded0:	add	x20, x20, #0x18
  42ded4:	mov	x0, x25
  42ded8:	mov	x27, #0x18                  	// #24
  42dedc:	bl	403360 <strcpy@plt>
  42dee0:	mov	x0, x25
  42dee4:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  42dee8:	add	x1, x1, #0x10c
  42deec:	bl	402fe0 <strcat@plt>
  42def0:	mov	x1, x22
  42def4:	mov	x0, x25
  42def8:	bl	402fe0 <strcat@plt>
  42defc:	mul	x26, x24, x27
  42df00:	mov	x0, x25
  42df04:	ldr	x1, [x26, x20]
  42df08:	bl	403080 <strcasecmp@plt>
  42df0c:	cbnz	w0, 42df2c <ferror@plt+0x2a95c>
  42df10:	add	x20, x20, x26
  42df14:	ldr	x0, [x20, #8]
  42df18:	str	x0, [x19]
  42df1c:	ldr	x0, [x20, #16]
  42df20:	str	x0, [x19, #8]
  42df24:	mov	w0, #0xffffffff            	// #-1
  42df28:	b	42de74 <ferror@plt+0x2a8a4>
  42df2c:	add	x24, x24, #0x1
  42df30:	cmp	x24, #0x8
  42df34:	b.ne	42defc <ferror@plt+0x2a92c>  // b.any
  42df38:	adrp	x0, 42d000 <ferror@plt+0x29a30>
  42df3c:	add	x0, x0, #0xfb8
  42df40:	mov	x1, x21
  42df44:	str	x0, [x19]
  42df48:	mov	x0, x22
  42df4c:	bl	403390 <iconv_open@plt>
  42df50:	mov	w1, #0xffffffff            	// #-1
  42df54:	str	x0, [x19, #8]
  42df58:	str	w1, [x19, #16]
  42df5c:	cmn	x0, #0x1
  42df60:	b.ne	42de78 <ferror@plt+0x2a8a8>  // b.any
  42df64:	bl	4034e0 <__errno_location@plt>
  42df68:	ldr	w0, [x0]
  42df6c:	cmp	w0, #0x16
  42df70:	b.ne	42dfa0 <ferror@plt+0x2a9d0>  // b.any
  42df74:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42df78:	mov	x4, x22
  42df7c:	mov	x3, x21
  42df80:	add	x2, x2, #0x299
  42df84:	mov	x0, x23
  42df88:	mov	w1, #0x3                   	// #3
  42df8c:	bl	435b3c <ferror@plt+0x3256c>
  42df90:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  42df94:	add	x0, x0, #0x278
  42df98:	str	x0, [x19]
  42df9c:	b	42de78 <ferror@plt+0x2a8a8>
  42dfa0:	mov	x0, x23
  42dfa4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42dfa8:	mov	w1, #0x3                   	// #3
  42dfac:	add	x2, x2, #0x2c9
  42dfb0:	bl	435fe0 <ferror@plt+0x32a10>
  42dfb4:	b	42df90 <ferror@plt+0x2a9c0>
  42dfb8:	stp	x29, x30, [sp, #-80]!
  42dfbc:	mov	x4, #0x0                   	// #0
  42dfc0:	mov	x29, sp
  42dfc4:	stp	x19, x20, [sp, #16]
  42dfc8:	mov	x20, x0
  42dfcc:	mov	x19, x3
  42dfd0:	mov	x3, #0x0                   	// #0
  42dfd4:	stp	x21, x22, [sp, #32]
  42dfd8:	mov	x22, x1
  42dfdc:	mov	x21, x2
  42dfe0:	mov	x1, #0x0                   	// #0
  42dfe4:	mov	x2, #0x0                   	// #0
  42dfe8:	bl	403230 <iconv@plt>
  42dfec:	cmn	x0, #0x1
  42dff0:	b.eq	42e0d8 <ferror@plt+0x2ab08>  // b.none
  42dff4:	ldp	x1, x0, [x19]
  42dff8:	ldr	x2, [x19, #16]
  42dffc:	add	x1, x1, x2
  42e000:	sub	x0, x0, x2
  42e004:	stp	x22, x1, [sp, #48]
  42e008:	stp	x21, x0, [sp, #64]
  42e00c:	add	x4, sp, #0x48
  42e010:	add	x3, sp, #0x38
  42e014:	add	x2, sp, #0x40
  42e018:	add	x1, sp, #0x30
  42e01c:	mov	x0, x20
  42e020:	bl	403230 <iconv@plt>
  42e024:	ldr	x0, [sp, #64]
  42e028:	cbnz	x0, 42e0e0 <ferror@plt+0x2ab10>
  42e02c:	add	x4, sp, #0x48
  42e030:	add	x3, sp, #0x38
  42e034:	mov	x0, x20
  42e038:	mov	x2, #0x0                   	// #0
  42e03c:	mov	x1, #0x0                   	// #0
  42e040:	bl	403230 <iconv@plt>
  42e044:	cmn	x0, #0x1
  42e048:	b.eq	42e070 <ferror@plt+0x2aaa0>  // b.none
  42e04c:	ldr	x0, [x19, #8]
  42e050:	ldr	x1, [sp, #72]
  42e054:	sub	x0, x0, x1
  42e058:	str	x0, [x19, #16]
  42e05c:	mov	w0, #0x1                   	// #1
  42e060:	ldp	x19, x20, [sp, #16]
  42e064:	ldp	x21, x22, [sp, #32]
  42e068:	ldp	x29, x30, [sp], #80
  42e06c:	ret
  42e070:	bl	4034e0 <__errno_location@plt>
  42e074:	ldr	w0, [x0]
  42e078:	cmp	w0, #0x7
  42e07c:	b.ne	42e0d8 <ferror@plt+0x2ab08>  // b.any
  42e080:	ldr	x0, [sp, #72]
  42e084:	ldr	x1, [x19, #8]
  42e088:	add	x0, x0, #0x100
  42e08c:	str	x0, [sp, #72]
  42e090:	ldr	x0, [x19]
  42e094:	add	x1, x1, #0x100
  42e098:	str	x1, [x19, #8]
  42e09c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e0a0:	str	x0, [x19]
  42e0a4:	ldr	x1, [x19, #8]
  42e0a8:	add	x4, sp, #0x48
  42e0ac:	ldr	x2, [sp, #72]
  42e0b0:	add	x3, sp, #0x38
  42e0b4:	sub	x1, x1, x2
  42e0b8:	mov	x2, #0x0                   	// #0
  42e0bc:	add	x0, x0, x1
  42e0c0:	mov	x1, #0x0                   	// #0
  42e0c4:	str	x0, [sp, #56]
  42e0c8:	mov	x0, x20
  42e0cc:	bl	403230 <iconv@plt>
  42e0d0:	cmn	x0, #0x1
  42e0d4:	b.ne	42e04c <ferror@plt+0x2aa7c>  // b.any
  42e0d8:	mov	w0, #0x0                   	// #0
  42e0dc:	b	42e060 <ferror@plt+0x2aa90>
  42e0e0:	bl	4034e0 <__errno_location@plt>
  42e0e4:	ldr	w0, [x0]
  42e0e8:	cmp	w0, #0x7
  42e0ec:	b.ne	42e0d8 <ferror@plt+0x2ab08>  // b.any
  42e0f0:	ldr	x0, [sp, #72]
  42e0f4:	ldr	x1, [x19, #8]
  42e0f8:	add	x0, x0, #0x100
  42e0fc:	str	x0, [sp, #72]
  42e100:	ldr	x0, [x19]
  42e104:	add	x1, x1, #0x100
  42e108:	str	x1, [x19, #8]
  42e10c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e110:	str	x0, [x19]
  42e114:	ldr	x1, [x19, #8]
  42e118:	ldr	x2, [sp, #72]
  42e11c:	sub	x1, x1, x2
  42e120:	add	x0, x0, x1
  42e124:	str	x0, [sp, #56]
  42e128:	b	42e00c <ferror@plt+0x2aa3c>
  42e12c:	stp	x29, x30, [sp, #-80]!
  42e130:	mov	x29, sp
  42e134:	stp	x21, x22, [sp, #32]
  42e138:	mov	x21, x0
  42e13c:	mov	x22, x1
  42e140:	ldp	x1, x0, [x4]
  42e144:	str	x2, [sp, #48]
  42e148:	ldr	x2, [x4, #16]
  42e14c:	stp	x19, x20, [sp, #16]
  42e150:	mov	x19, x4
  42e154:	str	x3, [sp, #64]
  42e158:	add	x1, x1, x2
  42e15c:	sub	x0, x0, x2
  42e160:	str	x1, [sp, #56]
  42e164:	str	x0, [sp, #72]
  42e168:	add	x4, sp, #0x48
  42e16c:	add	x3, sp, #0x38
  42e170:	add	x2, sp, #0x40
  42e174:	add	x1, sp, #0x30
  42e178:	mov	x0, x22
  42e17c:	blr	x21
  42e180:	mov	w20, w0
  42e184:	ldr	x0, [sp, #64]
  42e188:	cbz	x0, 42e1a8 <ferror@plt+0x2abd8>
  42e18c:	cbz	w20, 42e168 <ferror@plt+0x2ab98>
  42e190:	cmp	w20, #0x7
  42e194:	b.eq	42e1cc <ferror@plt+0x2abfc>  // b.none
  42e198:	bl	4034e0 <__errno_location@plt>
  42e19c:	str	w20, [x0]
  42e1a0:	mov	w0, #0x0                   	// #0
  42e1a4:	b	42e1bc <ferror@plt+0x2abec>
  42e1a8:	ldr	x0, [x19, #8]
  42e1ac:	ldr	x1, [sp, #72]
  42e1b0:	sub	x0, x0, x1
  42e1b4:	str	x0, [x19, #16]
  42e1b8:	mov	w0, #0x1                   	// #1
  42e1bc:	ldp	x19, x20, [sp, #16]
  42e1c0:	ldp	x21, x22, [sp, #32]
  42e1c4:	ldp	x29, x30, [sp], #80
  42e1c8:	ret
  42e1cc:	ldr	x0, [sp, #72]
  42e1d0:	ldr	x2, [x19, #8]
  42e1d4:	add	x0, x0, #0x100
  42e1d8:	str	x0, [sp, #72]
  42e1dc:	ldr	x0, [x19]
  42e1e0:	add	x1, x2, #0x100
  42e1e4:	str	x1, [x19, #8]
  42e1e8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e1ec:	str	x0, [x19]
  42e1f0:	ldr	x2, [x19, #8]
  42e1f4:	ldr	x1, [sp, #72]
  42e1f8:	sub	x2, x2, x1
  42e1fc:	add	x2, x0, x2
  42e200:	str	x2, [sp, #56]
  42e204:	b	42e168 <ferror@plt+0x2ab98>
  42e208:	mov	x4, x3
  42e20c:	mov	x3, x2
  42e210:	mov	x2, x1
  42e214:	mov	x1, x0
  42e218:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  42e21c:	add	x0, x0, #0x3a4
  42e220:	b	42e12c <ferror@plt+0x2ab5c>
  42e224:	mov	x4, x3
  42e228:	mov	x3, x2
  42e22c:	mov	x2, x1
  42e230:	mov	x1, x0
  42e234:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  42e238:	add	x0, x0, #0x2f4
  42e23c:	b	42e12c <ferror@plt+0x2ab5c>
  42e240:	mov	x4, x3
  42e244:	mov	x3, x2
  42e248:	mov	x2, x1
  42e24c:	mov	x1, x0
  42e250:	adrp	x0, 42d000 <ferror@plt+0x29a30>
  42e254:	add	x0, x0, #0xcf0
  42e258:	b	42e12c <ferror@plt+0x2ab5c>
  42e25c:	mov	x4, x3
  42e260:	mov	x3, x2
  42e264:	mov	x2, x1
  42e268:	mov	x1, x0
  42e26c:	adrp	x0, 42d000 <ferror@plt+0x29a30>
  42e270:	add	x0, x0, #0xc50
  42e274:	b	42e12c <ferror@plt+0x2ab5c>
  42e278:	stp	x29, x30, [sp, #-48]!
  42e27c:	mov	x29, sp
  42e280:	ldr	x0, [x3, #16]
  42e284:	str	x21, [sp, #32]
  42e288:	mov	x21, x1
  42e28c:	stp	x19, x20, [sp, #16]
  42e290:	add	x0, x2, x0
  42e294:	ldr	x1, [x3, #8]
  42e298:	mov	x20, x2
  42e29c:	mov	x19, x3
  42e2a0:	cmp	x0, x1
  42e2a4:	b.ls	42e2bc <ferror@plt+0x2acec>  // b.plast
  42e2a8:	add	x1, x0, x0, lsr #2
  42e2ac:	str	x1, [x3, #8]
  42e2b0:	ldr	x0, [x3]
  42e2b4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e2b8:	str	x0, [x19]
  42e2bc:	ldr	x3, [x19]
  42e2c0:	mov	x2, x20
  42e2c4:	ldr	x0, [x19, #16]
  42e2c8:	mov	x1, x21
  42e2cc:	add	x0, x3, x0
  42e2d0:	bl	402cd0 <memcpy@plt>
  42e2d4:	ldr	x2, [x19, #16]
  42e2d8:	mov	w0, #0x1                   	// #1
  42e2dc:	ldr	x21, [sp, #32]
  42e2e0:	add	x2, x2, x20
  42e2e4:	str	x2, [x19, #16]
  42e2e8:	ldp	x19, x20, [sp, #16]
  42e2ec:	ldp	x29, x30, [sp], #48
  42e2f0:	ret
  42e2f4:	mov	x11, x1
  42e2f8:	mov	x1, x3
  42e2fc:	ldr	x3, [x2]
  42e300:	mov	x10, x2
  42e304:	cmp	x3, #0x3
  42e308:	b.ls	42e394 <ferror@plt+0x2adc4>  // b.plast
  42e30c:	ldr	x7, [x11]
  42e310:	cmp	x0, #0x0
  42e314:	mov	x2, x4
  42e318:	mov	x6, #0x3                   	// #3
  42e31c:	cinc	x4, x7, eq  // eq = none
  42e320:	csel	x3, xzr, x6, ne  // ne = any
  42e324:	csel	x6, x6, xzr, ne  // ne = any
  42e328:	ldrb	w4, [x4, #1]
  42e32c:	ldrb	w3, [x7, x3]
  42e330:	ldrb	w0, [x7, x6]
  42e334:	lsl	w4, w4, #16
  42e338:	add	w3, w4, w3, lsl #24
  42e33c:	cinc	x4, x7, ne  // ne = any
  42e340:	ldrb	w5, [x4, #1]
  42e344:	add	w0, w0, w5, lsl #8
  42e348:	add	w0, w0, w3
  42e34c:	mov	w3, #0xffff2800            	// #-55296
  42e350:	add	w3, w0, w3
  42e354:	cmp	w3, #0x7ff
  42e358:	mov	w3, #0x7ffffffe            	// #2147483646
  42e35c:	ccmp	w0, w3, #0x2, hi  // hi = pmore
  42e360:	b.hi	42e39c <ferror@plt+0x2adcc>  // b.pmore
  42e364:	stp	x29, x30, [sp, #-16]!
  42e368:	mov	x29, sp
  42e36c:	bl	42db64 <ferror@plt+0x2a594>
  42e370:	cbnz	w0, 42e38c <ferror@plt+0x2adbc>
  42e374:	ldr	x1, [x11]
  42e378:	add	x1, x1, #0x4
  42e37c:	str	x1, [x11]
  42e380:	ldr	x1, [x10]
  42e384:	sub	x1, x1, #0x4
  42e388:	str	x1, [x10]
  42e38c:	ldp	x29, x30, [sp], #16
  42e390:	ret
  42e394:	mov	w0, #0x16                  	// #22
  42e398:	ret
  42e39c:	mov	w0, #0x54                  	// #84
  42e3a0:	ret
  42e3a4:	mov	x12, x1
  42e3a8:	mov	x1, x3
  42e3ac:	ldr	x3, [x2]
  42e3b0:	mov	x11, x2
  42e3b4:	ldr	x5, [x12]
  42e3b8:	cmp	x3, #0x1
  42e3bc:	b.ls	42e484 <ferror@plt+0x2aeb4>  // b.plast
  42e3c0:	cmp	x0, #0x0
  42e3c4:	mov	x2, x4
  42e3c8:	cset	x4, eq  // eq = none
  42e3cc:	mov	w7, #0xffff2400            	// #-56320
  42e3d0:	ldrb	w10, [x5, x4]
  42e3d4:	cset	x4, ne  // ne = any
  42e3d8:	ldrb	w4, [x5, x4]
  42e3dc:	add	w10, w4, w10, lsl #8
  42e3e0:	add	w4, w10, w7
  42e3e4:	cmp	w4, #0x3ff
  42e3e8:	b.ls	42e48c <ferror@plt+0x2aebc>  // b.plast
  42e3ec:	mov	w4, #0xffff2800            	// #-55296
  42e3f0:	add	w6, w10, w4
  42e3f4:	cmp	w6, #0x3ff
  42e3f8:	b.hi	42e434 <ferror@plt+0x2ae64>  // b.pmore
  42e3fc:	cmp	x3, #0x3
  42e400:	b.ls	42e484 <ferror@plt+0x2aeb4>  // b.plast
  42e404:	cmp	x0, #0x0
  42e408:	cinc	x3, x5, eq  // eq = none
  42e40c:	cinc	x5, x5, ne  // ne = any
  42e410:	ldrb	w10, [x3, #2]
  42e414:	ldrb	w0, [x5, #2]
  42e418:	add	w10, w0, w10, lsl #8
  42e41c:	add	w7, w10, w7
  42e420:	cmp	w7, #0x3ff
  42e424:	b.hi	42e48c <ferror@plt+0x2aebc>  // b.pmore
  42e428:	add	w10, w10, w6, lsl #10
  42e42c:	mov	w0, #0x2400                	// #9216
  42e430:	add	w10, w10, w0
  42e434:	stp	x29, x30, [sp, #-16]!
  42e438:	mov	w0, w10
  42e43c:	mov	x29, sp
  42e440:	bl	42db64 <ferror@plt+0x2a594>
  42e444:	cbnz	w0, 42e46c <ferror@plt+0x2ae9c>
  42e448:	mov	w3, #0xffff                	// #65535
  42e44c:	cmp	w10, w3
  42e450:	ldr	x2, [x11]
  42e454:	ldr	x1, [x12]
  42e458:	b.hi	42e474 <ferror@plt+0x2aea4>  // b.pmore
  42e45c:	sub	x2, x2, #0x2
  42e460:	add	x1, x1, #0x2
  42e464:	str	x1, [x12]
  42e468:	str	x2, [x11]
  42e46c:	ldp	x29, x30, [sp], #16
  42e470:	ret
  42e474:	add	x1, x1, #0x4
  42e478:	sub	x2, x2, #0x4
  42e47c:	str	x1, [x12]
  42e480:	b	42e468 <ferror@plt+0x2ae98>
  42e484:	mov	w0, #0x16                  	// #22
  42e488:	ret
  42e48c:	mov	w0, #0x54                  	// #84
  42e490:	ret
  42e494:	sub	w1, w1, #0x39
  42e498:	cmp	w1, #0x9
  42e49c:	b.hi	42e4b8 <ferror@plt+0x2aee8>  // b.pmore
  42e4a0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e4a4:	add	x2, x2, #0x8b0
  42e4a8:	ldrb	w1, [x2, w1, uxtw]
  42e4ac:	adr	x2, 42e4b8 <ferror@plt+0x2aee8>
  42e4b0:	add	x1, x2, w1, sxtb #2
  42e4b4:	br	x1
  42e4b8:	add	x0, x0, #0x208
  42e4bc:	ldp	x2, x3, [x0]
  42e4c0:	stp	x2, x3, [x8]
  42e4c4:	ldr	x0, [x0, #16]
  42e4c8:	str	x0, [x8, #16]
  42e4cc:	ret
  42e4d0:	add	x0, x0, #0x220
  42e4d4:	b	42e4bc <ferror@plt+0x2aeec>
  42e4d8:	add	x0, x0, #0x238
  42e4dc:	b	42e4bc <ferror@plt+0x2aeec>
  42e4e0:	add	x0, x0, #0x250
  42e4e4:	b	42e4bc <ferror@plt+0x2aeec>
  42e4e8:	add	x0, x0, #0x268
  42e4ec:	b	42e4bc <ferror@plt+0x2aeec>
  42e4f0:	stp	x29, x30, [sp, #-80]!
  42e4f4:	mov	x29, sp
  42e4f8:	stp	x23, x24, [sp, #48]
  42e4fc:	ldr	x23, [x0, #1216]
  42e500:	stp	x19, x20, [sp, #16]
  42e504:	mov	x19, x2
  42e508:	stp	x21, x22, [sp, #32]
  42e50c:	mov	w20, w1
  42e510:	cmp	x23, w3, sxtw
  42e514:	ldr	x22, [x2, #16]
  42e518:	ldr	x2, [x2, #8]
  42e51c:	str	x25, [sp, #64]
  42e520:	b.eq	42e5c4 <ferror@plt+0x2aff4>  // b.none
  42e524:	sxtw	x21, w3
  42e528:	cmp	x23, #0x20
  42e52c:	mov	x24, #0x20                  	// #32
  42e530:	ldrb	w25, [x0, #1242]
  42e534:	csel	x0, x23, x24, ls  // ls = plast
  42e538:	mov	x24, #0x1                   	// #1
  42e53c:	udiv	x21, x21, x23
  42e540:	lsl	x24, x24, x0
  42e544:	sub	x24, x24, #0x1
  42e548:	add	x0, x21, x22
  42e54c:	cmp	x0, x2
  42e550:	b.ls	42e568 <ferror@plt+0x2af98>  // b.plast
  42e554:	ldr	x0, [x19]
  42e558:	add	x1, x2, #0x100
  42e55c:	str	x1, [x19, #8]
  42e560:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e564:	str	x0, [x19]
  42e568:	sub	x4, x21, #0x1
  42e56c:	mov	x0, #0x0                   	// #0
  42e570:	cmp	x21, x0
  42e574:	b.eq	42e5a0 <ferror@plt+0x2afd0>  // b.none
  42e578:	ldr	x1, [x19]
  42e57c:	sub	x2, x4, x0
  42e580:	cmp	w25, #0x0
  42e584:	and	w3, w20, w24
  42e588:	csel	x2, x2, x0, ne  // ne = any
  42e58c:	lsr	w20, w20, w23
  42e590:	add	x1, x1, x2
  42e594:	add	x0, x0, #0x1
  42e598:	strb	w3, [x1, x22]
  42e59c:	b	42e570 <ferror@plt+0x2afa0>
  42e5a0:	ldr	x0, [x19, #16]
  42e5a4:	add	x21, x0, x21
  42e5a8:	str	x21, [x19, #16]
  42e5ac:	ldp	x19, x20, [sp, #16]
  42e5b0:	ldp	x21, x22, [sp, #32]
  42e5b4:	ldp	x23, x24, [sp, #48]
  42e5b8:	ldr	x25, [sp, #64]
  42e5bc:	ldp	x29, x30, [sp], #80
  42e5c0:	ret
  42e5c4:	add	x22, x22, #0x1
  42e5c8:	cmp	x22, x2
  42e5cc:	b.ls	42e5e4 <ferror@plt+0x2b014>  // b.plast
  42e5d0:	ldr	x0, [x19]
  42e5d4:	add	x1, x2, #0x100
  42e5d8:	str	x1, [x19, #8]
  42e5dc:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e5e0:	str	x0, [x19]
  42e5e4:	ldr	x1, [x19]
  42e5e8:	ldr	x0, [x19, #16]
  42e5ec:	add	x2, x0, #0x1
  42e5f0:	str	x2, [x19, #16]
  42e5f4:	strb	w20, [x1, x0]
  42e5f8:	b	42e5ac <ferror@plt+0x2afdc>
  42e5fc:	stp	x29, x30, [sp, #-96]!
  42e600:	mov	x29, sp
  42e604:	stp	x19, x20, [sp, #16]
  42e608:	mov	x19, x0
  42e60c:	adrp	x20, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e610:	stp	x21, x22, [sp, #32]
  42e614:	add	x20, x20, #0x88b
  42e618:	ldrb	w22, [x0, #1242]
  42e61c:	ldr	x1, [x0, #1168]
  42e620:	ldr	x21, [x0, #1176]
  42e624:	ldr	x0, [x0, #1232]
  42e628:	str	x23, [sp, #48]
  42e62c:	cmp	x0, #0x1f
  42e630:	b.ls	42e784 <ferror@plt+0x2b1b4>  // b.plast
  42e634:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e638:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e63c:	cmp	w22, #0x0
  42e640:	add	x2, x2, #0x83d
  42e644:	add	x0, x0, #0x84c
  42e648:	csel	x0, x0, x2, ne  // ne = any
  42e64c:	cmp	x1, #0x0
  42e650:	add	x23, x19, #0x208
  42e654:	csel	x1, x1, x20, ne  // ne = any
  42e658:	cmp	x21, #0x0
  42e65c:	csel	x21, x21, x0, ne  // ne = any
  42e660:	add	x8, sp, #0x40
  42e664:	mov	x2, x20
  42e668:	mov	x0, x19
  42e66c:	bl	42de24 <ferror@plt+0x2a854>
  42e670:	ldp	x0, x1, [sp, #64]
  42e674:	stp	x0, x1, [x23]
  42e678:	add	x23, x19, #0x220
  42e67c:	ldr	x0, [sp, #80]
  42e680:	str	x0, [x19, #536]
  42e684:	ldr	x0, [x19, #1216]
  42e688:	str	w0, [x19, #536]
  42e68c:	add	x8, sp, #0x40
  42e690:	mov	x2, x20
  42e694:	mov	x1, x20
  42e698:	mov	x0, x19
  42e69c:	bl	42de24 <ferror@plt+0x2a854>
  42e6a0:	ldp	x0, x1, [sp, #64]
  42e6a4:	stp	x0, x1, [x23]
  42e6a8:	cmp	w22, #0x0
  42e6ac:	ldr	x0, [sp, #80]
  42e6b0:	str	x0, [x19, #560]
  42e6b4:	ldr	x0, [x19, #1216]
  42e6b8:	str	w0, [x19, #560]
  42e6bc:	add	x23, x19, #0x238
  42e6c0:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e6c4:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e6c8:	add	x1, x1, #0x86a
  42e6cc:	add	x0, x0, #0x85b
  42e6d0:	add	x8, sp, #0x40
  42e6d4:	csel	x1, x1, x0, ne  // ne = any
  42e6d8:	mov	x2, x20
  42e6dc:	mov	x0, x19
  42e6e0:	bl	42de24 <ferror@plt+0x2a854>
  42e6e4:	ldp	x0, x1, [sp, #64]
  42e6e8:	stp	x0, x1, [x23]
  42e6ec:	cmp	w22, #0x0
  42e6f0:	ldr	x0, [sp, #80]
  42e6f4:	str	x0, [x19, #584]
  42e6f8:	mov	w0, #0x10                  	// #16
  42e6fc:	str	w0, [x19, #584]
  42e700:	add	x22, x19, #0x250
  42e704:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e708:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e70c:	add	x1, x1, #0x84c
  42e710:	add	x0, x0, #0x83d
  42e714:	add	x8, sp, #0x40
  42e718:	csel	x1, x1, x0, ne  // ne = any
  42e71c:	mov	x2, x20
  42e720:	mov	x0, x19
  42e724:	bl	42de24 <ferror@plt+0x2a854>
  42e728:	ldp	x0, x1, [sp, #64]
  42e72c:	stp	x0, x1, [x22]
  42e730:	add	x22, x19, #0x268
  42e734:	ldr	x0, [sp, #80]
  42e738:	str	x0, [x19, #608]
  42e73c:	mov	w0, #0x20                  	// #32
  42e740:	str	w0, [x19, #608]
  42e744:	add	x8, sp, #0x40
  42e748:	mov	x2, x20
  42e74c:	mov	x1, x21
  42e750:	mov	x0, x19
  42e754:	bl	42de24 <ferror@plt+0x2a854>
  42e758:	ldp	x0, x1, [sp, #64]
  42e75c:	stp	x0, x1, [x22]
  42e760:	ldr	x0, [sp, #80]
  42e764:	ldp	x21, x22, [sp, #32]
  42e768:	ldr	x23, [sp, #48]
  42e76c:	str	x0, [x19, #632]
  42e770:	ldr	x0, [x19, #1232]
  42e774:	str	w0, [x19, #632]
  42e778:	ldp	x19, x20, [sp, #16]
  42e77c:	ldp	x29, x30, [sp], #96
  42e780:	ret
  42e784:	cmp	x0, #0xf
  42e788:	b.ls	42e7a4 <ferror@plt+0x2b1d4>  // b.plast
  42e78c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e790:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e794:	cmp	w22, #0x0
  42e798:	add	x2, x2, #0x85b
  42e79c:	add	x0, x0, #0x86a
  42e7a0:	b	42e648 <ferror@plt+0x2b078>
  42e7a4:	mov	x0, x20
  42e7a8:	b	42e64c <ferror@plt+0x2b07c>
  42e7ac:	stp	x29, x30, [sp, #-32]!
  42e7b0:	mov	x29, sp
  42e7b4:	stp	x19, x20, [sp, #16]
  42e7b8:	mov	x19, x0
  42e7bc:	adrp	x20, 42d000 <ferror@plt+0x29a30>
  42e7c0:	ldr	x0, [x0, #520]
  42e7c4:	add	x20, x20, #0xfb8
  42e7c8:	cmp	x0, x20
  42e7cc:	b.ne	42e7d8 <ferror@plt+0x2b208>  // b.any
  42e7d0:	ldr	x0, [x19, #528]
  42e7d4:	bl	402db0 <iconv_close@plt>
  42e7d8:	ldr	x0, [x19, #544]
  42e7dc:	cmp	x0, x20
  42e7e0:	b.ne	42e7ec <ferror@plt+0x2b21c>  // b.any
  42e7e4:	ldr	x0, [x19, #552]
  42e7e8:	bl	402db0 <iconv_close@plt>
  42e7ec:	ldr	x0, [x19, #568]
  42e7f0:	cmp	x0, x20
  42e7f4:	b.ne	42e800 <ferror@plt+0x2b230>  // b.any
  42e7f8:	ldr	x0, [x19, #576]
  42e7fc:	bl	402db0 <iconv_close@plt>
  42e800:	ldr	x0, [x19, #592]
  42e804:	cmp	x0, x20
  42e808:	b.ne	42e814 <ferror@plt+0x2b244>  // b.any
  42e80c:	ldr	x0, [x19, #600]
  42e810:	bl	402db0 <iconv_close@plt>
  42e814:	ldr	x0, [x19, #616]
  42e818:	cmp	x0, x20
  42e81c:	b.ne	42e830 <ferror@plt+0x2b260>  // b.any
  42e820:	ldr	x0, [x19, #624]
  42e824:	ldp	x19, x20, [sp, #16]
  42e828:	ldp	x29, x30, [sp], #32
  42e82c:	b	402db0 <iconv_close@plt>
  42e830:	ldp	x19, x20, [sp, #16]
  42e834:	ldp	x29, x30, [sp], #32
  42e838:	ret
  42e83c:	stp	x29, x30, [sp, #-80]!
  42e840:	cmp	w1, #0x7e
  42e844:	mov	x29, sp
  42e848:	stp	x19, x20, [sp, #16]
  42e84c:	mov	w20, w1
  42e850:	str	x21, [sp, #32]
  42e854:	b.ls	42e870 <ferror@plt+0x2b2a0>  // b.plast
  42e858:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e85c:	add	x2, x2, #0x2d4
  42e860:	mov	w3, w1
  42e864:	mov	w1, #0x4                   	// #4
  42e868:	bl	435b3c <ferror@plt+0x3256c>
  42e86c:	b	42e8c4 <ferror@plt+0x2b2f4>
  42e870:	mov	x19, x0
  42e874:	mov	x21, #0x1                   	// #1
  42e878:	mov	x0, x21
  42e87c:	strb	w1, [sp, #48]
  42e880:	str	x21, [sp, #64]
  42e884:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  42e888:	str	x0, [sp, #56]
  42e88c:	add	x3, sp, #0x38
  42e890:	ldr	x4, [x19, #520]
  42e894:	str	xzr, [sp, #72]
  42e898:	ldr	x0, [x19, #528]
  42e89c:	mov	x2, x21
  42e8a0:	add	x1, sp, #0x30
  42e8a4:	blr	x4
  42e8a8:	tst	w0, #0xff
  42e8ac:	b.ne	42e8dc <ferror@plt+0x2b30c>  // b.any
  42e8b0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e8b4:	mov	x0, x19
  42e8b8:	add	x2, x2, #0x30e
  42e8bc:	mov	w1, #0x4                   	// #4
  42e8c0:	bl	435fe0 <ferror@plt+0x32a10>
  42e8c4:	mov	w19, #0x0                   	// #0
  42e8c8:	mov	w0, w19
  42e8cc:	ldp	x19, x20, [sp, #16]
  42e8d0:	ldr	x21, [sp, #32]
  42e8d4:	ldp	x29, x30, [sp], #80
  42e8d8:	ret
  42e8dc:	ldr	x0, [sp, #72]
  42e8e0:	cmp	x0, #0x1
  42e8e4:	b.eq	42e900 <ferror@plt+0x2b330>  // b.none
  42e8e8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42e8ec:	mov	w3, w20
  42e8f0:	add	x2, x2, #0x334
  42e8f4:	mov	x0, x19
  42e8f8:	mov	w1, #0x4                   	// #4
  42e8fc:	b	42e868 <ferror@plt+0x2b298>
  42e900:	ldr	x0, [sp, #56]
  42e904:	ldrb	w19, [x0]
  42e908:	bl	4032a0 <free@plt>
  42e90c:	b	42e8c8 <ferror@plt+0x2b2f8>
  42e910:	stp	x29, x30, [sp, #-32]!
  42e914:	mov	x29, sp
  42e918:	str	x19, [sp, #16]
  42e91c:	mov	x19, x0
  42e920:	mov	x0, #0x800000000           	// #34359738368
  42e924:	stp	xzr, x0, [x19]
  42e928:	mov	x0, #0x40                  	// #64
  42e92c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  42e930:	str	x0, [x19]
  42e934:	ldr	x19, [sp, #16]
  42e938:	ldp	x29, x30, [sp], #32
  42e93c:	ret
  42e940:	ldr	x0, [x0]
  42e944:	b	4032a0 <free@plt>
  42e948:	stp	x29, x30, [sp, #-32]!
  42e94c:	mov	x29, sp
  42e950:	stp	x19, x20, [sp, #16]
  42e954:	mov	x19, x0
  42e958:	mov	x20, x1
  42e95c:	ldr	w0, [x0, #12]
  42e960:	ldr	w1, [x19, #8]
  42e964:	cmp	w1, w0
  42e968:	b.lt	42e984 <ferror@plt+0x2b3b4>  // b.tstop
  42e96c:	lsl	w0, w0, #1
  42e970:	str	w0, [x19, #12]
  42e974:	sbfiz	x1, x0, #3, #32
  42e978:	ldr	x0, [x19]
  42e97c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42e980:	str	x0, [x19]
  42e984:	ldr	w0, [x19, #8]
  42e988:	ldr	x1, [x19]
  42e98c:	add	w2, w0, #0x1
  42e990:	str	w2, [x19, #8]
  42e994:	str	x20, [x1, w0, sxtw #3]
  42e998:	ldp	x19, x20, [sp, #16]
  42e99c:	ldp	x29, x30, [sp], #32
  42e9a0:	ret
  42e9a4:	stp	x29, x30, [sp, #-64]!
  42e9a8:	adrp	x13, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  42e9ac:	adrp	x14, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  42e9b0:	mov	x29, sp
  42e9b4:	stp	x19, x20, [sp, #16]
  42e9b8:	mov	x19, x0
  42e9bc:	add	x0, x2, #0x10
  42e9c0:	and	x0, x0, #0xfffffffffffffff0
  42e9c4:	mov	x12, x1
  42e9c8:	mov	x11, x2
  42e9cc:	add	x13, x13, #0x228
  42e9d0:	add	x14, x14, #0xd40
  42e9d4:	str	x21, [sp, #32]
  42e9d8:	sub	sp, sp, x0
  42e9dc:	mov	x10, #0x0                   	// #0
  42e9e0:	mov	x20, sp
  42e9e4:	str	x20, [x29, #48]
  42e9e8:	cmp	x10, x11
  42e9ec:	ldr	x1, [x29, #48]
  42e9f0:	b.cs	42eaa8 <ferror@plt+0x2b4d8>  // b.hs, b.nlast
  42e9f4:	ldrb	w0, [x12, x10]
  42e9f8:	cmp	w0, #0x5c
  42e9fc:	b.eq	42ea14 <ferror@plt+0x2b444>  // b.none
  42ea00:	add	x2, x1, #0x1
  42ea04:	str	x2, [x29, #48]
  42ea08:	strb	w0, [x1]
  42ea0c:	add	x10, x10, #0x1
  42ea10:	b	42e9e8 <ferror@plt+0x2b418>
  42ea14:	add	x0, x12, x10
  42ea18:	mov	w2, #0x4                   	// #4
  42ea1c:	add	x10, x10, #0x2
  42ea20:	ldrb	w0, [x0, #1]
  42ea24:	cmp	w0, #0x75
  42ea28:	mov	w0, #0x8                   	// #8
  42ea2c:	csel	w2, w2, w0, eq  // eq = none
  42ea30:	sub	x0, x1, x20
  42ea34:	sub	x0, x11, x0
  42ea38:	str	x0, [x29, #56]
  42ea3c:	mov	w0, #0x0                   	// #0
  42ea40:	cmp	w2, #0x0
  42ea44:	ccmp	x10, x11, #0x2, ne  // ne = any
  42ea48:	b.cs	42ea6c <ferror@plt+0x2b49c>  // b.hs, b.nlast
  42ea4c:	ldrb	w3, [x12, x10]
  42ea50:	ldrh	w4, [x13, x3, lsl #1]
  42ea54:	tbz	w4, #8, 42ea6c <ferror@plt+0x2b49c>
  42ea58:	ldrb	w3, [x14, x3]
  42ea5c:	add	x10, x10, #0x1
  42ea60:	sub	w2, w2, #0x1
  42ea64:	add	w0, w3, w0, lsl #4
  42ea68:	b	42ea40 <ferror@plt+0x2b470>
  42ea6c:	sub	x10, x10, #0x1
  42ea70:	cmp	w0, #0x24
  42ea74:	b.eq	42ea00 <ferror@plt+0x2b430>  // b.none
  42ea78:	add	x2, x29, #0x38
  42ea7c:	add	x1, x29, #0x30
  42ea80:	bl	42db64 <ferror@plt+0x2a594>
  42ea84:	mov	w21, w0
  42ea88:	cbz	w0, 42ea0c <ferror@plt+0x2b43c>
  42ea8c:	bl	4034e0 <__errno_location@plt>
  42ea90:	str	w21, [x0]
  42ea94:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ea98:	mov	x0, x19
  42ea9c:	add	x2, x2, #0x36e
  42eaa0:	mov	w1, #0x3                   	// #3
  42eaa4:	bl	435fe0 <ferror@plt+0x32a10>
  42eaa8:	ldr	x0, [x19, #1088]
  42eaac:	mov	x1, x20
  42eab0:	ldr	x2, [x29, #48]
  42eab4:	mov	w3, #0x1                   	// #1
  42eab8:	sub	x2, x2, x20
  42eabc:	bl	445fb0 <ferror@plt+0x429e0>
  42eac0:	mov	sp, x29
  42eac4:	ldp	x19, x20, [sp, #16]
  42eac8:	ldr	x21, [sp, #32]
  42eacc:	ldp	x29, x30, [sp], #64
  42ead0:	ret
  42ead4:	stp	x29, x30, [sp, #-128]!
  42ead8:	mov	x29, sp
  42eadc:	stp	x23, x24, [sp, #48]
  42eae0:	adrp	x24, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42eae4:	add	x24, x24, #0x88b
  42eae8:	mov	x23, x0
  42eaec:	add	x8, sp, #0x50
  42eaf0:	stp	x19, x20, [sp, #16]
  42eaf4:	mov	x20, x2
  42eaf8:	mov	x19, x4
  42eafc:	mov	x2, x1
  42eb00:	mov	x1, x24
  42eb04:	stp	x21, x22, [sp, #32]
  42eb08:	mov	x22, x5
  42eb0c:	mov	x21, x6
  42eb10:	stp	x25, x26, [sp, #64]
  42eb14:	mov	x26, x3
  42eb18:	bl	42de24 <ferror@plt+0x2a854>
  42eb1c:	ldr	x25, [sp, #80]
  42eb20:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  42eb24:	add	x0, x0, #0x278
  42eb28:	cmp	x25, x0
  42eb2c:	b.ne	42ebf0 <ferror@plt+0x2b620>  // b.any
  42eb30:	stp	x20, x26, [sp, #104]
  42eb34:	str	x19, [sp, #120]
  42eb38:	ldp	x2, x0, [sp, #112]
  42eb3c:	add	x1, x0, #0x10
  42eb40:	add	x0, x0, #0x1, lsl #12
  42eb44:	cmp	x0, x2
  42eb48:	b.cc	42eb54 <ferror@plt+0x2b584>  // b.lo, b.ul, b.last
  42eb4c:	cmp	x2, x1
  42eb50:	b.cs	42eb60 <ferror@plt+0x2b590>  // b.hs, b.nlast
  42eb54:	ldr	x0, [sp, #104]
  42eb58:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  42eb5c:	str	x0, [sp, #104]
  42eb60:	ldr	x0, [sp, #104]
  42eb64:	ldr	x1, [sp, #120]
  42eb68:	add	x0, x0, x1
  42eb6c:	stp	xzr, xzr, [x0]
  42eb70:	ldr	x0, [sp, #120]
  42eb74:	ldr	x1, [sp, #104]
  42eb78:	cbz	x0, 42ec6c <ferror@plt+0x2b69c>
  42eb7c:	add	x2, x1, x0
  42eb80:	ldurb	w2, [x2, #-1]
  42eb84:	cmp	w2, #0xd
  42eb88:	b.ne	42ec6c <ferror@plt+0x2b69c>  // b.any
  42eb8c:	strb	w2, [x1, x0]
  42eb90:	ldr	x0, [sp, #120]
  42eb94:	str	x0, [x21]
  42eb98:	ldr	x1, [sp, #104]
  42eb9c:	cmp	x0, #0x2
  42eba0:	b.ls	42ec74 <ferror@plt+0x2b6a4>  // b.plast
  42eba4:	ldrb	w2, [x1]
  42eba8:	cmp	w2, #0xef
  42ebac:	b.ne	42ec74 <ferror@plt+0x2b6a4>  // b.any
  42ebb0:	ldrb	w2, [x1, #1]
  42ebb4:	cmp	w2, #0xbb
  42ebb8:	b.ne	42ec74 <ferror@plt+0x2b6a4>  // b.any
  42ebbc:	ldrb	w2, [x1, #2]
  42ebc0:	cmp	w2, #0xbf
  42ebc4:	b.ne	42ec74 <ferror@plt+0x2b6a4>  // b.any
  42ebc8:	sub	x0, x0, #0x3
  42ebcc:	str	x0, [x21]
  42ebd0:	add	x0, x1, #0x3
  42ebd4:	ldp	x19, x20, [sp, #16]
  42ebd8:	ldp	x23, x24, [sp, #48]
  42ebdc:	ldp	x25, x26, [sp, #64]
  42ebe0:	str	x1, [x22]
  42ebe4:	ldp	x21, x22, [sp, #32]
  42ebe8:	ldp	x29, x30, [sp], #128
  42ebec:	ret
  42ebf0:	cmp	x19, #0x10, lsl #12
  42ebf4:	mov	x0, #0x10000               	// #65536
  42ebf8:	ldr	x26, [sp, #88]
  42ebfc:	csel	x0, x19, x0, cs  // cs = hs, nlast
  42ec00:	str	x0, [sp, #112]
  42ec04:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  42ec08:	str	x0, [sp, #104]
  42ec0c:	add	x3, sp, #0x68
  42ec10:	str	xzr, [sp, #120]
  42ec14:	mov	x2, x19
  42ec18:	mov	x1, x20
  42ec1c:	mov	x0, x26
  42ec20:	blr	x25
  42ec24:	tst	w0, #0xff
  42ec28:	b.ne	42ec48 <ferror@plt+0x2b678>  // b.any
  42ec2c:	ldr	x3, [x23, #1184]
  42ec30:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ec34:	mov	x4, x24
  42ec38:	add	x2, x2, #0x395
  42ec3c:	mov	x0, x23
  42ec40:	mov	w1, #0x3                   	// #3
  42ec44:	bl	435b3c <ferror@plt+0x3256c>
  42ec48:	mov	x0, x20
  42ec4c:	bl	4032a0 <free@plt>
  42ec50:	adrp	x0, 42d000 <ferror@plt+0x29a30>
  42ec54:	add	x0, x0, #0xfb8
  42ec58:	cmp	x25, x0
  42ec5c:	b.ne	42eb38 <ferror@plt+0x2b568>  // b.any
  42ec60:	mov	x0, x26
  42ec64:	bl	402db0 <iconv_close@plt>
  42ec68:	b	42eb38 <ferror@plt+0x2b568>
  42ec6c:	mov	w2, #0xa                   	// #10
  42ec70:	b	42eb8c <ferror@plt+0x2b5bc>
  42ec74:	mov	x0, x1
  42ec78:	b	42ebd4 <ferror@plt+0x2b604>
  42ec7c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ec80:	add	x0, x0, #0x88b
  42ec84:	ret
  42ec88:	stp	x29, x30, [sp, #-32]!
  42ec8c:	mov	x29, sp
  42ec90:	stp	x19, x20, [sp, #16]
  42ec94:	mov	x20, x0
  42ec98:	mov	x19, x2
  42ec9c:	mov	x0, x2
  42eca0:	str	x2, [x20, #8]
  42eca4:	bl	4400fc <ferror@plt+0x3cb2c>
  42eca8:	mov	w1, w0
  42ecac:	mov	x3, #0x0                   	// #0
  42ecb0:	mov	w2, #0x1                   	// #1
  42ecb4:	mov	x0, x19
  42ecb8:	bl	4403f0 <ferror@plt+0x3ce20>
  42ecbc:	mov	w1, w0
  42ecc0:	str	w1, [x20]
  42ecc4:	mov	x0, x19
  42ecc8:	bl	43fe10 <ferror@plt+0x3c840>
  42eccc:	ldrb	w1, [x0, #7]
  42ecd0:	mov	w0, #0x1                   	// #1
  42ecd4:	lsl	w0, w0, w1
  42ecd8:	str	w0, [x20, #4]
  42ecdc:	ldp	x19, x20, [sp, #16]
  42ece0:	ldp	x29, x30, [sp], #32
  42ece4:	ret
  42ece8:	mov	x1, x0
  42ecec:	ldr	w0, [x0]
  42ecf0:	mov	w2, #0x60000000            	// #1610612736
  42ecf4:	cmp	w0, w2
  42ecf8:	b.hi	42ed08 <ferror@plt+0x2b738>  // b.pmore
  42ecfc:	ldr	w2, [x1, #4]
  42ed00:	add	w2, w2, w0
  42ed04:	str	w2, [x1]
  42ed08:	bfi	x0, x0, #32, #32
  42ed0c:	ret
  42ed10:	stp	x29, x30, [sp, #-48]!
  42ed14:	mov	x29, sp
  42ed18:	stp	x19, x20, [sp, #16]
  42ed1c:	mov	x20, x0
  42ed20:	mov	w19, #0x0                   	// #0
  42ed24:	stp	x21, x22, [sp, #32]
  42ed28:	mov	w22, w1
  42ed2c:	mov	x21, x2
  42ed30:	cmp	w19, w22
  42ed34:	b.ge	42ed54 <ferror@plt+0x2b784>  // b.tcont
  42ed38:	mov	x0, x21
  42ed3c:	bl	42ece8 <ferror@plt+0x2b718>
  42ed40:	add	w19, w19, #0x1
  42ed44:	mov	x1, x0
  42ed48:	mov	x0, x20
  42ed4c:	bl	42e948 <ferror@plt+0x2b378>
  42ed50:	b	42ed30 <ferror@plt+0x2b760>
  42ed54:	ldp	x19, x20, [sp, #16]
  42ed58:	ldp	x21, x22, [sp, #32]
  42ed5c:	ldp	x29, x30, [sp], #48
  42ed60:	ret
  42ed64:	stp	x29, x30, [sp, #-112]!
  42ed68:	mov	x29, sp
  42ed6c:	stp	x19, x20, [sp, #16]
  42ed70:	mov	x20, x0
  42ed74:	stp	x21, x22, [sp, #32]
  42ed78:	mov	x21, x4
  42ed7c:	stp	x23, x24, [sp, #48]
  42ed80:	mov	w23, w3
  42ed84:	mov	x24, x5
  42ed88:	stp	x25, x26, [sp, #64]
  42ed8c:	mov	x25, x1
  42ed90:	mov	x26, x6
  42ed94:	stp	x27, x28, [sp, #80]
  42ed98:	mov	x27, x7
  42ed9c:	ldr	x22, [x1]
  42eda0:	str	x2, [sp, #104]
  42eda4:	ldrb	w1, [x0, #1120]
  42eda8:	cbnz	w1, 42ee38 <ferror@plt+0x2b868>
  42edac:	ldrb	w2, [x0, #1152]
  42edb0:	cbnz	w2, 42ee38 <ferror@plt+0x2b868>
  42edb4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42edb8:	add	x2, x2, #0x3b1
  42edbc:	bl	435b3c <ferror@plt+0x3256c>
  42edc0:	ldurb	w0, [x22, #-1]
  42edc4:	cmp	w0, #0x75
  42edc8:	b.eq	42ede8 <ferror@plt+0x2b818>  // b.none
  42edcc:	cmp	w0, #0x55
  42edd0:	b.eq	42ee80 <ferror@plt+0x2b8b0>  // b.none
  42edd4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42edd8:	mov	x0, x20
  42eddc:	add	x2, x2, #0x456
  42ede0:	mov	w1, #0x4                   	// #4
  42ede4:	bl	435b3c <ferror@plt+0x3256c>
  42ede8:	mov	w3, #0x4                   	// #4
  42edec:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  42edf0:	adrp	x6, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  42edf4:	mov	x28, x22
  42edf8:	add	x4, x4, #0x228
  42edfc:	add	x6, x6, #0xd40
  42ee00:	mov	w19, #0x0                   	// #0
  42ee04:	ldrb	w0, [x28]
  42ee08:	ldrb	w7, [x28]
  42ee0c:	ldrh	w0, [x4, x0, lsl #1]
  42ee10:	tbz	w0, #8, 42eeb4 <ferror@plt+0x2b8e4>
  42ee14:	add	x28, x28, #0x1
  42ee18:	cbz	x27, 42ee98 <ferror@plt+0x2b8c8>
  42ee1c:	cbnz	x26, 42ee88 <ferror@plt+0x2b8b8>
  42ee20:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ee24:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ee28:	add	x2, x2, #0x476
  42ee2c:	add	x0, x0, #0x485
  42ee30:	mov	w1, #0x434                 	// #1076
  42ee34:	bl	403600 <ferror@plt+0x30>
  42ee38:	ldrsb	w0, [x20, #1198]
  42ee3c:	cmp	w0, #0x0
  42ee40:	b.le	42ee58 <ferror@plt+0x2b888>
  42ee44:	cbnz	w1, 42ee58 <ferror@plt+0x2b888>
  42ee48:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ee4c:	mov	x0, x20
  42ee50:	add	x2, x2, #0x3e9
  42ee54:	b	42edbc <ferror@plt+0x2b7ec>
  42ee58:	ldrb	w0, [x20, #1138]
  42ee5c:	cbz	w0, 42edc0 <ferror@plt+0x2b7f0>
  42ee60:	cbnz	w23, 42edc0 <ferror@plt+0x2b7f0>
  42ee64:	ldurb	w3, [x22, #-1]
  42ee68:	mov	x0, x20
  42ee6c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42ee70:	mov	w1, #0x6                   	// #6
  42ee74:	add	x2, x2, #0x423
  42ee78:	bl	435ba8 <ferror@plt+0x325d8>
  42ee7c:	b	42edc0 <ferror@plt+0x2b7f0>
  42ee80:	mov	w3, #0x8                   	// #8
  42ee84:	b	42edec <ferror@plt+0x2b81c>
  42ee88:	mov	x0, x27
  42ee8c:	bl	42ece8 <ferror@plt+0x2b718>
  42ee90:	lsr	x0, x0, #32
  42ee94:	str	w0, [x26, #4]
  42ee98:	ldrb	w0, [x6, w7, sxtw]
  42ee9c:	subs	w3, w3, #0x1
  42eea0:	add	w19, w0, w19, lsl #4
  42eea4:	b.eq	42eeb4 <ferror@plt+0x2b8e4>  // b.none
  42eea8:	ldr	x0, [sp, #104]
  42eeac:	cmp	x28, x0
  42eeb0:	b.cc	42ee04 <ferror@plt+0x2b834>  // b.lo, b.ul, b.last
  42eeb4:	cmp	w23, #0x0
  42eeb8:	cset	w0, ne  // ne = any
  42eebc:	cmp	w3, #0x0
  42eec0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42eec4:	b.eq	42eeec <ferror@plt+0x2b91c>  // b.none
  42eec8:	mov	w0, #0x0                   	// #0
  42eecc:	str	wzr, [x24]
  42eed0:	ldp	x19, x20, [sp, #16]
  42eed4:	ldp	x21, x22, [sp, #32]
  42eed8:	ldp	x23, x24, [sp, #48]
  42eedc:	ldp	x25, x26, [sp, #64]
  42eee0:	ldp	x27, x28, [sp, #80]
  42eee4:	ldp	x29, x30, [sp], #112
  42eee8:	ret
  42eeec:	str	x28, [x25]
  42eef0:	sub	x22, x22, #0x2
  42eef4:	cbz	w3, 42ef24 <ferror@plt+0x2b954>
  42eef8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42eefc:	mov	x4, x22
  42ef00:	sub	w3, w28, w22
  42ef04:	add	x2, x2, #0x49c
  42ef08:	mov	w19, #0x1                   	// #1
  42ef0c:	mov	x0, x20
  42ef10:	mov	w1, #0x3                   	// #3
  42ef14:	bl	435b3c <ferror@plt+0x3256c>
  42ef18:	mov	w0, #0x1                   	// #1
  42ef1c:	str	w19, [x24]
  42ef20:	b	42eed0 <ferror@plt+0x2b900>
  42ef24:	cmp	w19, #0x9f
  42ef28:	b.hi	42efa0 <ferror@plt+0x2b9d0>  // b.pmore
  42ef2c:	ldrb	w1, [x20, #1120]
  42ef30:	cbnz	w1, 42ef48 <ferror@plt+0x2b978>
  42ef34:	and	w1, w19, #0xffffffdf
  42ef38:	cmp	w1, #0x40
  42ef3c:	mov	w1, #0x24                  	// #36
  42ef40:	ccmp	w19, w1, #0x4, ne  // ne = any
  42ef44:	b.ne	42efb4 <ferror@plt+0x2b9e4>  // b.any
  42ef48:	cmp	w19, #0x24
  42ef4c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42ef50:	b.ne	42efc8 <ferror@plt+0x2b9f8>  // b.any
  42ef54:	cbz	w23, 42ef18 <ferror@plt+0x2b948>
  42ef58:	mov	w0, #0x10ffff              	// #1114111
  42ef5c:	cmp	w19, w0
  42ef60:	b.hi	43167c <ferror@plt+0x2e0ac>  // b.pmore
  42ef64:	adrp	x2, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  42ef68:	add	x2, x2, #0x3c8
  42ef6c:	mov	w3, #0x73c                 	// #1852
  42ef70:	mov	w0, #0x0                   	// #0
  42ef74:	mov	w4, #0x2                   	// #2
  42ef78:	cmp	w3, w0
  42ef7c:	b.eq	42f010 <ferror@plt+0x2ba40>  // b.none
  42ef80:	add	w1, w3, w0
  42ef84:	sdiv	w1, w1, w4
  42ef88:	add	x6, x2, w1, sxtw #3
  42ef8c:	ldr	w6, [x6, #4]
  42ef90:	cmp	w19, w6
  42ef94:	b.ls	42f008 <ferror@plt+0x2ba38>  // b.plast
  42ef98:	add	w0, w1, #0x1
  42ef9c:	b	42ef78 <ferror@plt+0x2b9a8>
  42efa0:	tbnz	w19, #31, 42efb4 <ferror@plt+0x2b9e4>
  42efa4:	mov	w18, #0xffff2800            	// #-55296
  42efa8:	add	w0, w19, w18
  42efac:	cmp	w0, #0x7ff
  42efb0:	b.hi	42ef54 <ferror@plt+0x2b984>  // b.pmore
  42efb4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42efb8:	mov	x4, x22
  42efbc:	sub	w3, w28, w22
  42efc0:	add	x2, x2, #0x4c5
  42efc4:	b	42ef08 <ferror@plt+0x2b938>
  42efc8:	ldrb	w0, [x20, #1146]
  42efcc:	cbz	w0, 42ef64 <ferror@plt+0x2b994>
  42efd0:	ldrb	w0, [x20, #1148]
  42efd4:	cbz	w0, 42eff8 <ferror@plt+0x2ba28>
  42efd8:	ldrb	w0, [x20, #18]
  42efdc:	cbnz	w0, 42eff8 <ferror@plt+0x2ba28>
  42efe0:	strb	wzr, [x20, #1148]
  42efe4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42efe8:	mov	x0, x20
  42efec:	add	x2, x2, #0x4ed
  42eff0:	mov	w1, #0x2                   	// #2
  42eff4:	bl	435b3c <ferror@plt+0x3256c>
  42eff8:	mov	w19, #0x24                  	// #36
  42effc:	str	w19, [x21]
  42f000:	strb	wzr, [x21, #4]
  42f004:	b	42ef18 <ferror@plt+0x2b948>
  42f008:	mov	w3, w1
  42f00c:	b	42ef78 <ferror@plt+0x2b9a8>
  42f010:	ldrb	w1, [x20, #1154]
  42f014:	cbz	w1, 42f0b0 <ferror@plt+0x2bae0>
  42f018:	ldrb	w1, [x20, #1164]
  42f01c:	cbnz	w1, 42f0b8 <ferror@plt+0x2bae8>
  42f020:	ldrb	w1, [x20, #1152]
  42f024:	cbnz	w1, 42f0c0 <ferror@plt+0x2baf0>
  42f028:	ldrb	w1, [x20, #1120]
  42f02c:	mov	w3, #0x4                   	// #4
  42f030:	cmp	w1, #0x0
  42f034:	mov	w1, #0xd                   	// #13
  42f038:	csel	w1, w1, w3, eq  // eq = none
  42f03c:	sxtw	x3, w0
  42f040:	sbfiz	x0, x0, #3, #32
  42f044:	ldrh	w25, [x2, x0]
  42f048:	tst	w25, w1
  42f04c:	b.eq	43167c <ferror@plt+0x2e0ac>  // b.none
  42f050:	ldrb	w0, [x20, #1164]
  42f054:	cbnz	w0, 42f0c8 <ferror@plt+0x2baf8>
  42f058:	ldrb	w0, [x20, #1152]
  42f05c:	cmp	w0, #0x0
  42f060:	cset	w26, ne  // ne = any
  42f064:	lsl	w26, w26, #1
  42f068:	add	x2, x2, x3, lsl #3
  42f06c:	ldrb	w27, [x2, #2]
  42f070:	cbz	w27, 42f0d0 <ferror@plt+0x2bb00>
  42f074:	ldrb	w0, [x21, #4]
  42f078:	cmp	w0, w27
  42f07c:	b.ls	42f0d0 <ferror@plt+0x2bb00>  // b.plast
  42f080:	mov	w0, #0x3                   	// #3
  42f084:	str	w0, [x21, #8]
  42f088:	strb	w27, [x21, #4]
  42f08c:	tst	w25, w26
  42f090:	b.eq	42ef18 <ferror@plt+0x2b948>  // b.none
  42f094:	cmp	w23, #0x1
  42f098:	b.ne	42ef18 <ferror@plt+0x2b948>  // b.any
  42f09c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f0a0:	mov	x4, x22
  42f0a4:	sub	w3, w28, w22
  42f0a8:	add	x2, x2, #0x55f
  42f0ac:	b	43168c <ferror@plt+0x2e0bc>
  42f0b0:	mov	w1, #0xd                   	// #13
  42f0b4:	b	42f03c <ferror@plt+0x2ba6c>
  42f0b8:	mov	w1, #0x8                   	// #8
  42f0bc:	b	42f03c <ferror@plt+0x2ba6c>
  42f0c0:	mov	w1, #0x1                   	// #1
  42f0c4:	b	42f03c <ferror@plt+0x2ba6c>
  42f0c8:	mov	w26, #0x10                  	// #16
  42f0cc:	b	42f068 <ferror@plt+0x2ba98>
  42f0d0:	tbz	w25, #8, 431658 <ferror@plt+0x2e088>
  42f0d4:	mov	w17, #0xffffee9f            	// #-4449
  42f0d8:	add	w0, w19, w17
  42f0dc:	ldr	w1, [x21]
  42f0e0:	cmp	w0, #0x14
  42f0e4:	b.hi	42f110 <ferror@plt+0x2bb40>  // b.pmore
  42f0e8:	mov	w16, #0xffffef00            	// #-4352
  42f0ec:	add	w1, w1, w16
  42f0f0:	cmp	w1, #0x12
  42f0f4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f0f8:	ldr	w0, [x21, #8]
  42f0fc:	mov	w1, #0x2                   	// #2
  42f100:	cmp	w0, #0x2
  42f104:	csel	w0, w0, w1, ge  // ge = tcont
  42f108:	str	w0, [x21, #8]
  42f10c:	b	42f144 <ferror@plt+0x2bb74>
  42f110:	mov	w15, #0xffffee58            	// #-4520
  42f114:	add	w0, w19, w15
  42f118:	cmp	w0, #0x1a
  42f11c:	b.hi	42f150 <ferror@plt+0x2bb80>  // b.pmore
  42f120:	mov	w14, #0xffff5400            	// #-44032
  42f124:	add	w1, w1, w14
  42f128:	mov	w0, #0x2ba3                	// #11171
  42f12c:	cmp	w1, w0
  42f130:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f134:	mov	w2, #0x1c                  	// #28
  42f138:	udiv	w0, w1, w2
  42f13c:	msub	w1, w0, w2, w1
  42f140:	cbz	w1, 42f0f8 <ferror@plt+0x2bb28>
  42f144:	cbnz	w27, 42f088 <ferror@plt+0x2bab8>
  42f148:	str	w19, [x21]
  42f14c:	b	42f088 <ferror@plt+0x2bab8>
  42f150:	cmp	w19, #0x345
  42f154:	b.hi	42f184 <ferror@plt+0x2bbb4>  // b.pmore
  42f158:	cmp	w19, #0x2ff
  42f15c:	b.ls	42f1c0 <ferror@plt+0x2bbf0>  // b.plast
  42f160:	sub	w2, w19, #0x300
  42f164:	cmp	w2, #0x45
  42f168:	b.hi	42f1c0 <ferror@plt+0x2bbf0>  // b.pmore
  42f16c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f170:	add	x0, x0, #0x8bc
  42f174:	ldrh	w0, [x0, w2, uxtw #1]
  42f178:	adr	x2, 42f184 <ferror@plt+0x2bbb4>
  42f17c:	add	x0, x2, w0, sxth #2
  42f180:	br	x0
  42f184:	cmp	w19, #0xcd5
  42f188:	b.eq	431498 <ferror@plt+0x2dec8>  // b.none
  42f18c:	b.hi	42f244 <ferror@plt+0x2bc74>  // b.pmore
  42f190:	cmp	w19, #0xb3e
  42f194:	b.eq	431450 <ferror@plt+0x2de80>  // b.none
  42f198:	b.hi	42f1f8 <ferror@plt+0x2bc28>  // b.pmore
  42f19c:	cmp	w19, #0x93c
  42f1a0:	b.eq	43140c <ferror@plt+0x2de3c>  // b.none
  42f1a4:	b.hi	42f1dc <ferror@plt+0x2bc0c>  // b.pmore
  42f1a8:	cmp	w19, #0x654
  42f1ac:	b.eq	431398 <ferror@plt+0x2ddc8>  // b.none
  42f1b0:	cmp	w19, #0x655
  42f1b4:	b.eq	4313ec <ferror@plt+0x2de1c>  // b.none
  42f1b8:	cmp	w19, #0x653
  42f1bc:	b.eq	43138c <ferror@plt+0x2ddbc>  // b.none
  42f1c0:	mov	w3, w19
  42f1c4:	mov	x0, x20
  42f1c8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f1cc:	mov	w1, #0x4                   	// #4
  42f1d0:	add	x2, x2, #0x509
  42f1d4:	bl	435b3c <ferror@plt+0x3256c>
  42f1d8:	b	42f144 <ferror@plt+0x2bb74>
  42f1dc:	cmp	w19, #0x9be
  42f1e0:	b.eq	431444 <ferror@plt+0x2de74>  // b.none
  42f1e4:	cmp	w19, #0x9d7
  42f1e8:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f1ec:	cmp	w1, #0x9c7
  42f1f0:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f1f4:	b	42f384 <ferror@plt+0x2bdb4>
  42f1f8:	cmp	w19, #0xbd7
  42f1fc:	b.eq	431478 <ferror@plt+0x2dea8>  // b.none
  42f200:	b.hi	42f228 <ferror@plt+0x2bc58>  // b.pmore
  42f204:	cmp	w19, #0xb57
  42f208:	b.eq	43145c <ferror@plt+0x2de8c>  // b.none
  42f20c:	cmp	w19, #0xbbe
  42f210:	b.eq	431468 <ferror@plt+0x2de98>  // b.none
  42f214:	cmp	w19, #0xb56
  42f218:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f21c:	cmp	w1, #0xb47
  42f220:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f224:	b	42f384 <ferror@plt+0x2bdb4>
  42f228:	cmp	w19, #0xc56
  42f22c:	b.eq	43148c <ferror@plt+0x2debc>  // b.none
  42f230:	cmp	w19, #0xcc2
  42f234:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f238:	cmp	w1, #0xcc6
  42f23c:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f240:	b	42f384 <ferror@plt+0x2bdb4>
  42f244:	mov	w0, #0x102e                	// #4142
  42f248:	cmp	w19, w0
  42f24c:	b.eq	4314fc <ferror@plt+0x2df2c>  // b.none
  42f250:	b.hi	42f2a4 <ferror@plt+0x2bcd4>  // b.pmore
  42f254:	cmp	w19, #0xdca
  42f258:	b.eq	4314d8 <ferror@plt+0x2df08>  // b.none
  42f25c:	b.hi	42f284 <ferror@plt+0x2bcb4>  // b.pmore
  42f260:	cmp	w19, #0xd3e
  42f264:	b.eq	4314bc <ferror@plt+0x2deec>  // b.none
  42f268:	cmp	w19, #0xd57
  42f26c:	b.eq	4314cc <ferror@plt+0x2defc>  // b.none
  42f270:	cmp	w19, #0xcd6
  42f274:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f278:	cmp	w1, #0xcc6
  42f27c:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f280:	b	42f384 <ferror@plt+0x2bdb4>
  42f284:	cmp	w19, #0xdcf
  42f288:	b.eq	4314ec <ferror@plt+0x2df1c>  // b.none
  42f28c:	cmp	w19, #0xddf
  42f290:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f294:	sub	w1, w1, #0xdd9
  42f298:	cmp	w1, #0x1
  42f29c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f2a0:	b	42f384 <ferror@plt+0x2bdb4>
  42f2a4:	mov	w0, #0x309a                	// #12442
  42f2a8:	cmp	w19, w0
  42f2ac:	b.eq	4315c8 <ferror@plt+0x2dff8>  // b.none
  42f2b0:	b.hi	42f30c <ferror@plt+0x2bd3c>  // b.pmore
  42f2b4:	mov	w0, #0x1b35                	// #6965
  42f2b8:	cmp	w19, w0
  42f2bc:	b.eq	43150c <ferror@plt+0x2df3c>  // b.none
  42f2c0:	mov	w0, #0x3099                	// #12441
  42f2c4:	cmp	w19, w0
  42f2c8:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f2cc:	mov	w0, #0x30db                	// #12507
  42f2d0:	cmp	w1, w0
  42f2d4:	b.hi	43159c <ferror@plt+0x2dfcc>  // b.pmore
  42f2d8:	mov	w0, #0x309c                	// #12444
  42f2dc:	cmp	w1, w0
  42f2e0:	b.hi	431574 <ferror@plt+0x2dfa4>  // b.pmore
  42f2e4:	mov	w4, #0xffffcfba            	// #-12358
  42f2e8:	add	w1, w1, w4
  42f2ec:	cmp	w1, #0x35
  42f2f0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f2f4:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f2f8:	add	x0, x0, #0x948
  42f2fc:	ldrb	w0, [x0, w1, uxtw]
  42f300:	adr	x1, 42f30c <ferror@plt+0x2bd3c>
  42f304:	add	x0, x1, w0, sxtb #2
  42f308:	br	x0
  42f30c:	mov	w0, #0x10ba                	// #4282
  42f310:	movk	w0, #0x1, lsl #16
  42f314:	cmp	w19, w0
  42f318:	b.eq	431630 <ferror@plt+0x2e060>  // b.none
  42f31c:	add	w0, w0, #0x6d
  42f320:	cmp	w19, w0
  42f324:	b.ne	42f1c0 <ferror@plt+0x2bbf0>  // b.any
  42f328:	sub	w1, w1, #0x11, lsl #12
  42f32c:	sub	w1, w1, #0x131
  42f330:	cmp	w1, #0x1
  42f334:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f338:	b	42f384 <ferror@plt+0x2bdb4>
  42f33c:	cmp	w1, #0x3bf
  42f340:	b.hi	42f538 <ferror@plt+0x2bf68>  // b.pmore
  42f344:	cmp	w1, #0x3b0
  42f348:	b.hi	42f3f8 <ferror@plt+0x2be28>  // b.pmore
  42f34c:	cmp	w1, #0x103
  42f350:	b.hi	42f4d0 <ferror@plt+0x2bf00>  // b.pmore
  42f354:	cmp	w1, #0xc9
  42f358:	b.hi	42f440 <ferror@plt+0x2be70>  // b.pmore
  42f35c:	cmp	w1, #0x79
  42f360:	b.hi	42f4bc <ferror@plt+0x2beec>  // b.pmore
  42f364:	cmp	w1, #0x64
  42f368:	b.hi	42f468 <ferror@plt+0x2be98>  // b.pmore
  42f36c:	cmp	w1, #0x59
  42f370:	b.hi	42f4b0 <ferror@plt+0x2bee0>  // b.pmore
  42f374:	cmp	w1, #0x44
  42f378:	b.hi	42f48c <ferror@plt+0x2bebc>  // b.pmore
  42f37c:	cmp	w1, #0x41
  42f380:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f384:	mov	w0, #0x3                   	// #3
  42f388:	str	w0, [x21, #8]
  42f38c:	b	42f144 <ferror@plt+0x2bb74>
  42f390:	mov	w12, #0xffffe0b8            	// #-8008
  42f394:	add	w1, w1, w12
  42f398:	mov	x0, #0x1                   	// #1
  42f39c:	lsl	x1, x0, x1
  42f3a0:	mov	x0, #0x303                 	// #771
  42f3a4:	movk	x0, #0x302, lsl #16
  42f3a8:	movk	x0, #0x3, lsl #32
  42f3ac:	movk	x0, #0x300, lsl #48
  42f3b0:	tst	x1, x0
  42f3b4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f3b8:	b	42f384 <ferror@plt+0x2bdb4>
  42f3bc:	mov	w11, #0xffffe0f8            	// #-7944
  42f3c0:	add	w1, w1, w11
  42f3c4:	mov	x0, #0x1                   	// #1
  42f3c8:	lsl	x1, x0, x1
  42f3cc:	tst	x1, #0x303030303030303
  42f3d0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f3d4:	b	42f384 <ferror@plt+0x2bdb4>
  42f3d8:	sub	w1, w1, #0x415
  42f3dc:	mov	x0, #0x1                   	// #1
  42f3e0:	lsl	x1, x0, x1
  42f3e4:	mov	x0, #0x9                   	// #9
  42f3e8:	movk	x0, #0x9, lsl #32
  42f3ec:	tst	x1, x0
  42f3f0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f3f4:	b	42f384 <ferror@plt+0x2bdb4>
  42f3f8:	sub	w1, w1, #0x3b1
  42f3fc:	cmp	w1, #0xe
  42f400:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f404:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f408:	add	x0, x0, #0x980
  42f40c:	ldrh	w0, [x0, w1, uxtw #1]
  42f410:	adr	x1, 42f41c <ferror@plt+0x2be4c>
  42f414:	add	x0, x1, w0, sxth #2
  42f418:	br	x0
  42f41c:	sub	w1, w1, #0x391
  42f420:	cmp	w1, #0xe
  42f424:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f428:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f42c:	add	x0, x0, #0x9a0
  42f430:	ldrh	w0, [x0, w1, uxtw #1]
  42f434:	adr	x1, 42f440 <ferror@plt+0x2be70>
  42f438:	add	x0, x1, w0, sxth #2
  42f43c:	br	x0
  42f440:	sub	w1, w1, #0xca
  42f444:	mov	x0, #0x1                   	// #1
  42f448:	lsl	x1, x0, x1
  42f44c:	mov	x0, #0x401                 	// #1025
  42f450:	movk	x0, #0x104, lsl #16
  42f454:	movk	x0, #0x401, lsl #32
  42f458:	movk	x0, #0x304, lsl #48
  42f45c:	tst	x1, x0
  42f460:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f464:	b	42f384 <ferror@plt+0x2bdb4>
  42f468:	sub	w1, w1, #0x65
  42f46c:	cmp	w1, #0x14
  42f470:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f474:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f478:	add	x0, x0, #0x9c0
  42f47c:	ldrh	w0, [x0, w1, uxtw #1]
  42f480:	adr	x1, 42f48c <ferror@plt+0x2bebc>
  42f484:	add	x0, x1, w0, sxth #2
  42f488:	br	x0
  42f48c:	sub	w1, w1, #0x45
  42f490:	cmp	w1, #0x14
  42f494:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f498:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f49c:	add	x0, x0, #0x9ec
  42f4a0:	ldrh	w0, [x0, w1, uxtw #1]
  42f4a4:	adr	x1, 42f4b0 <ferror@plt+0x2bee0>
  42f4a8:	add	x0, x1, w0, sxth #2
  42f4ac:	br	x0
  42f4b0:	cmp	w1, #0x61
  42f4b4:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f4b8:	b	42f384 <ferror@plt+0x2bdb4>
  42f4bc:	cmp	w1, #0xa8
  42f4c0:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42f4c4:	cmp	w1, #0xc2
  42f4c8:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f4cc:	b	42f384 <ferror@plt+0x2bdb4>
  42f4d0:	cmp	w1, #0x39f
  42f4d4:	b.hi	42f524 <ferror@plt+0x2bf54>  // b.pmore
  42f4d8:	cmp	w1, #0x390
  42f4dc:	b.hi	42f41c <ferror@plt+0x2be4c>  // b.pmore
  42f4e0:	cmp	w1, #0x1a1
  42f4e4:	b.hi	42f514 <ferror@plt+0x2bf44>  // b.pmore
  42f4e8:	cmp	w1, #0x19f
  42f4ec:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  42f4f0:	cmp	w1, #0x113
  42f4f4:	b.hi	42f504 <ferror@plt+0x2bf34>  // b.pmore
  42f4f8:	cmp	w1, #0x111
  42f4fc:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f500:	b	42f384 <ferror@plt+0x2bdb4>
  42f504:	sub	w1, w1, #0x14c
  42f508:	cmp	w1, #0x1
  42f50c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f510:	b	42f384 <ferror@plt+0x2bdb4>
  42f514:	sub	w1, w1, #0x1af
  42f518:	cmp	w1, #0x1
  42f51c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f520:	b	42f384 <ferror@plt+0x2bdb4>
  42f524:	cmp	w1, #0x3a5
  42f528:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42f52c:	cmp	w1, #0x3a9
  42f530:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f534:	b	42f384 <ferror@plt+0x2bdb4>
  42f538:	mov	w0, #0x1f81                	// #8065
  42f53c:	cmp	w1, w0
  42f540:	b.hi	42f5a4 <ferror@plt+0x2bfd4>  // b.pmore
  42f544:	mov	w0, #0x1f47                	// #8007
  42f548:	cmp	w1, w0
  42f54c:	b.hi	42f390 <ferror@plt+0x2bdc0>  // b.pmore
  42f550:	mov	w0, #0x1f41                	// #8001
  42f554:	cmp	w1, w0
  42f558:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f55c:	mov	w0, #0x1f07                	// #7943
  42f560:	cmp	w1, w0
  42f564:	b.hi	42f3bc <ferror@plt+0x2bdec>  // b.pmore
  42f568:	cmp	w1, #0x438
  42f56c:	b.hi	42f590 <ferror@plt+0x2bfc0>  // b.pmore
  42f570:	cmp	w1, #0x414
  42f574:	b.hi	42f3d8 <ferror@plt+0x2be08>  // b.pmore
  42f578:	cmp	w1, #0x3c5
  42f57c:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42f580:	sub	w1, w1, #0x3c9
  42f584:	cmp	w1, #0x2
  42f588:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f58c:	b	42f384 <ferror@plt+0x2bdb4>
  42f590:	mov	w10, #0xffffe100            	// #-7936
  42f594:	add	w1, w1, w10
  42f598:	cmp	w1, #0x1
  42f59c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f5a0:	b	42f384 <ferror@plt+0x2bdb4>
  42f5a4:	mov	w0, #0x1fbf                	// #8127
  42f5a8:	cmp	w1, w0
  42f5ac:	b.hi	42f5e8 <ferror@plt+0x2c018>  // b.pmore
  42f5b0:	mov	w0, #0x1f87                	// #8071
  42f5b4:	cmp	w1, w0
  42f5b8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f5bc:	mov	w13, #0xffffe078            	// #-8072
  42f5c0:	add	w1, w1, w13
  42f5c4:	mov	x0, #0x1                   	// #1
  42f5c8:	lsl	x1, x0, x1
  42f5cc:	mov	x0, #0x303                 	// #771
  42f5d0:	movk	x0, #0x303, lsl #16
  42f5d4:	movk	x0, #0x803, lsl #32
  42f5d8:	movk	x0, #0x90, lsl #48
  42f5dc:	tst	x1, x0
  42f5e0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f5e4:	b	42f384 <ferror@plt+0x2bdb4>
  42f5e8:	mov	w9, #0xffffe03d            	// #-8131
  42f5ec:	add	w1, w1, w9
  42f5f0:	cmp	w1, #0x3b
  42f5f4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f5f8:	mov	x0, #0x1                   	// #1
  42f5fc:	lsl	x1, x0, x1
  42f600:	mov	x0, #0x201                 	// #513
  42f604:	movk	x0, #0xa01, lsl #48
  42f608:	tst	x1, x0
  42f60c:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f610:	b	42f384 <ferror@plt+0x2bdb4>
  42f614:	cmp	w1, #0x39f
  42f618:	b.hi	42f7e4 <ferror@plt+0x2c214>  // b.pmore
  42f61c:	cmp	w1, #0x390
  42f620:	b.hi	42f6dc <ferror@plt+0x2c10c>  // b.pmore
  42f624:	cmp	w1, #0xa8
  42f628:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42f62c:	b.hi	42f724 <ferror@plt+0x2c154>  // b.pmore
  42f630:	sub	w1, w1, #0x41
  42f634:	cmp	w1, #0x39
  42f638:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f63c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f640:	add	x0, x0, #0xa18
  42f644:	ldrh	w0, [x0, w1, uxtw #1]
  42f648:	adr	x1, 42f654 <ferror@plt+0x2c084>
  42f64c:	add	x0, x1, w0, sxth #2
  42f650:	br	x0
  42f654:	mov	w8, #0xffffe078            	// #-8072
  42f658:	add	w1, w1, w8
  42f65c:	mov	x0, #0x1                   	// #1
  42f660:	lsl	x1, x0, x1
  42f664:	mov	x0, #0x303                 	// #771
  42f668:	movk	x0, #0x303, lsl #16
  42f66c:	movk	x0, #0x803, lsl #32
  42f670:	movk	x0, #0x90, lsl #48
  42f674:	tst	x1, x0
  42f678:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f67c:	b	42f384 <ferror@plt+0x2bdb4>
  42f680:	mov	w7, #0xffffe0f8            	// #-7944
  42f684:	add	w1, w1, w7
  42f688:	mov	x0, #0x1                   	// #1
  42f68c:	lsl	x1, x0, x1
  42f690:	tst	x1, #0x303030303030303
  42f694:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f698:	b	42f384 <ferror@plt+0x2bdb4>
  42f69c:	sub	w1, w1, #0x3c5
  42f6a0:	mov	x0, #0x1                   	// #1
  42f6a4:	lsl	x1, x0, x1
  42f6a8:	mov	x0, #0x2071                	// #8305
  42f6ac:	tst	x1, x0
  42f6b0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f6b4:	b	42f384 <ferror@plt+0x2bdb4>
  42f6b8:	sub	w1, w1, #0x3b1
  42f6bc:	cmp	w1, #0xe
  42f6c0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f6c4:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f6c8:	add	x0, x0, #0xa8c
  42f6cc:	ldrh	w0, [x0, w1, uxtw #1]
  42f6d0:	adr	x1, 42f6dc <ferror@plt+0x2c10c>
  42f6d4:	add	x0, x1, w0, sxth #2
  42f6d8:	br	x0
  42f6dc:	sub	w1, w1, #0x391
  42f6e0:	cmp	w1, #0xe
  42f6e4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f6e8:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f6ec:	add	x0, x0, #0xaac
  42f6f0:	ldrh	w0, [x0, w1, uxtw #1]
  42f6f4:	adr	x1, 42f700 <ferror@plt+0x2c130>
  42f6f8:	add	x0, x1, w0, sxth #2
  42f6fc:	br	x0
  42f700:	sub	w1, w1, #0xef
  42f704:	cmp	w1, #0x14
  42f708:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f70c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f710:	add	x0, x0, #0xacc
  42f714:	ldrh	w0, [x0, w1, uxtw #1]
  42f718:	adr	x1, 42f724 <ferror@plt+0x2c154>
  42f71c:	add	x0, x1, w0, sxth #2
  42f720:	br	x0
  42f724:	cmp	w1, #0x103
  42f728:	b.hi	42f78c <ferror@plt+0x2c1bc>  // b.pmore
  42f72c:	cmp	w1, #0xee
  42f730:	b.hi	42f700 <ferror@plt+0x2c130>  // b.pmore
  42f734:	cmp	w1, #0xcf
  42f738:	b.hi	42f768 <ferror@plt+0x2c198>  // b.pmore
  42f73c:	cmp	w1, #0xc1
  42f740:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f744:	sub	w1, w1, #0xc2
  42f748:	cmp	w1, #0xd
  42f74c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f750:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f754:	add	x0, x0, #0xaf8
  42f758:	ldrh	w0, [x0, w1, uxtw #1]
  42f75c:	adr	x1, 42f768 <ferror@plt+0x2c198>
  42f760:	add	x0, x1, w0, sxth #2
  42f764:	br	x0
  42f768:	sub	w1, w1, #0xd4
  42f76c:	cmp	w1, #0x16
  42f770:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f774:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f778:	add	x0, x0, #0xb14
  42f77c:	ldrh	w0, [x0, w1, uxtw #1]
  42f780:	adr	x1, 42f78c <ferror@plt+0x2c1bc>
  42f784:	add	x0, x1, w0, sxth #2
  42f788:	br	x0
  42f78c:	cmp	w1, #0x169
  42f790:	b.hi	42f7c0 <ferror@plt+0x2c1f0>  // b.pmore
  42f794:	cmp	w1, #0x167
  42f798:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  42f79c:	cmp	w1, #0x113
  42f7a0:	b.hi	42f7b0 <ferror@plt+0x2c1e0>  // b.pmore
  42f7a4:	cmp	w1, #0x111
  42f7a8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f7ac:	b	42f384 <ferror@plt+0x2bdb4>
  42f7b0:	sub	w1, w1, #0x14c
  42f7b4:	cmp	w1, #0x1
  42f7b8:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f7bc:	b	42f384 <ferror@plt+0x2bdb4>
  42f7c0:	cmp	w1, #0x1a1
  42f7c4:	b.hi	42f7d4 <ferror@plt+0x2c204>  // b.pmore
  42f7c8:	cmp	w1, #0x19f
  42f7cc:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f7d0:	b	42f384 <ferror@plt+0x2bdb4>
  42f7d4:	sub	w1, w1, #0x1af
  42f7d8:	cmp	w1, #0x1
  42f7dc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f7e0:	b	42f384 <ferror@plt+0x2bdb4>
  42f7e4:	mov	w0, #0x1f41                	// #8001
  42f7e8:	cmp	w1, w0
  42f7ec:	b.hi	42f874 <ferror@plt+0x2c2a4>  // b.pmore
  42f7f0:	mov	w0, #0x1f07                	// #7943
  42f7f4:	cmp	w1, w0
  42f7f8:	b.hi	42f680 <ferror@plt+0x2c0b0>  // b.pmore
  42f7fc:	cmp	w1, #0x3d2
  42f800:	b.hi	42f830 <ferror@plt+0x2c260>  // b.pmore
  42f804:	cmp	w1, #0x3c4
  42f808:	b.hi	42f69c <ferror@plt+0x2c0cc>  // b.pmore
  42f80c:	cmp	w1, #0x3bf
  42f810:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f814:	cmp	w1, #0x3b0
  42f818:	b.hi	42f6b8 <ferror@plt+0x2c0e8>  // b.pmore
  42f81c:	cmp	w1, #0x3a5
  42f820:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42f824:	cmp	w1, #0x3a9
  42f828:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f82c:	b	42f384 <ferror@plt+0x2bdb4>
  42f830:	cmp	w1, #0x43a
  42f834:	b.hi	42f860 <ferror@plt+0x2c290>  // b.pmore
  42f838:	cmp	w1, #0x412
  42f83c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f840:	sub	w1, w1, #0x413
  42f844:	mov	x0, #0x1                   	// #1
  42f848:	lsl	x1, x0, x1
  42f84c:	mov	x0, #0x81                  	// #129
  42f850:	movk	x0, #0x81, lsl #32
  42f854:	tst	x1, x0
  42f858:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f85c:	b	42f384 <ferror@plt+0x2bdb4>
  42f860:	mov	w6, #0xffffe100            	// #-7936
  42f864:	add	w1, w1, w6
  42f868:	cmp	w1, #0x1
  42f86c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f870:	b	42f384 <ferror@plt+0x2bdb4>
  42f874:	mov	w0, #0x1fbf                	// #8127
  42f878:	cmp	w1, w0
  42f87c:	b.hi	42f8c0 <ferror@plt+0x2c2f0>  // b.pmore
  42f880:	mov	w0, #0x1f87                	// #8071
  42f884:	cmp	w1, w0
  42f888:	b.hi	42f654 <ferror@plt+0x2c084>  // b.pmore
  42f88c:	mov	w5, #0xffffe0b8            	// #-8008
  42f890:	add	w1, w1, w5
  42f894:	cmp	w1, #0x39
  42f898:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f89c:	mov	x0, #0x1                   	// #1
  42f8a0:	lsl	x1, x0, x1
  42f8a4:	mov	x0, #0x303                 	// #771
  42f8a8:	movk	x0, #0x302, lsl #16
  42f8ac:	movk	x0, #0x3, lsl #32
  42f8b0:	movk	x0, #0x300, lsl #48
  42f8b4:	tst	x1, x0
  42f8b8:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f8bc:	b	42f384 <ferror@plt+0x2bdb4>
  42f8c0:	mov	w4, #0xffffe03d            	// #-8131
  42f8c4:	add	w1, w1, w4
  42f8c8:	cmp	w1, #0x3b
  42f8cc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f8d0:	mov	x0, #0x1                   	// #1
  42f8d4:	lsl	x1, x0, x1
  42f8d8:	mov	x0, #0x201                 	// #513
  42f8dc:	movk	x0, #0xa01, lsl #48
  42f8e0:	tst	x1, x0
  42f8e4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f8e8:	b	42f384 <ferror@plt+0x2bdb4>
  42f8ec:	cmp	w1, #0x7a
  42f8f0:	b.hi	42f920 <ferror@plt+0x2c350>  // b.pmore
  42f8f4:	cmp	w1, #0x40
  42f8f8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42f8fc:	sub	w1, w1, #0x41
  42f900:	cmp	w1, #0x39
  42f904:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f908:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f90c:	add	x0, x0, #0xb44
  42f910:	ldrh	w0, [x0, w1, uxtw #1]
  42f914:	adr	x1, 42f920 <ferror@plt+0x2c350>
  42f918:	add	x0, x1, w0, sxth #2
  42f91c:	br	x0
  42f920:	mov	w3, #0xffffe160            	// #-7840
  42f924:	add	w1, w1, w3
  42f928:	cmp	w1, #0x2d
  42f92c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f930:	mov	x0, #0x1                   	// #1
  42f934:	lsl	x1, x0, x1
  42f938:	mov	x0, #0x3                   	// #3
  42f93c:	movk	x0, #0x300, lsl #16
  42f940:	movk	x0, #0x3000, lsl #32
  42f944:	tst	x1, x0
  42f948:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f94c:	b	42f384 <ferror@plt+0x2bdb4>
  42f950:	cmp	w1, #0x79
  42f954:	b.hi	42f9f8 <ferror@plt+0x2c428>  // b.pmore
  42f958:	cmp	w1, #0x64
  42f95c:	b.hi	42f9a4 <ferror@plt+0x2c3d4>  // b.pmore
  42f960:	cmp	w1, #0x59
  42f964:	b.hi	42f9ec <ferror@plt+0x2c41c>  // b.pmore
  42f968:	cmp	w1, #0x44
  42f96c:	b.hi	42f9c8 <ferror@plt+0x2c3f8>  // b.pmore
  42f970:	cmp	w1, #0x41
  42f974:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f978:	b	42f384 <ferror@plt+0x2bdb4>
  42f97c:	sub	w1, w1, #0xca
  42f980:	mov	x0, #0x1                   	// #1
  42f984:	lsl	x1, x0, x1
  42f988:	mov	x0, #0x401                 	// #1025
  42f98c:	movk	x0, #0x100, lsl #16
  42f990:	movk	x0, #0x401, lsl #32
  42f994:	movk	x0, #0x300, lsl #48
  42f998:	tst	x1, x0
  42f99c:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42f9a0:	b	42f384 <ferror@plt+0x2bdb4>
  42f9a4:	sub	w1, w1, #0x65
  42f9a8:	cmp	w1, #0x14
  42f9ac:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f9b0:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f9b4:	add	x0, x0, #0xbb8
  42f9b8:	ldrh	w0, [x0, w1, uxtw #1]
  42f9bc:	adr	x1, 42f9c8 <ferror@plt+0x2c3f8>
  42f9c0:	add	x0, x1, w0, sxth #2
  42f9c4:	br	x0
  42f9c8:	sub	w1, w1, #0x45
  42f9cc:	cmp	w1, #0x14
  42f9d0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42f9d4:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42f9d8:	add	x0, x0, #0xbe4
  42f9dc:	ldrh	w0, [x0, w1, uxtw #1]
  42f9e0:	adr	x1, 42f9ec <ferror@plt+0x2c41c>
  42f9e4:	add	x0, x1, w0, sxth #2
  42f9e8:	br	x0
  42f9ec:	cmp	w1, #0x61
  42f9f0:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42f9f4:	b	42f384 <ferror@plt+0x2bdb4>
  42f9f8:	cmp	w1, #0x103
  42f9fc:	b.hi	42fa14 <ferror@plt+0x2c444>  // b.pmore
  42fa00:	cmp	w1, #0xc9
  42fa04:	b.hi	42f97c <ferror@plt+0x2c3ac>  // b.pmore
  42fa08:	cmp	w1, #0xc2
  42fa0c:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fa10:	b	42f384 <ferror@plt+0x2bdb4>
  42fa14:	cmp	w1, #0x1a1
  42fa18:	b.hi	42fa28 <ferror@plt+0x2c458>  // b.pmore
  42fa1c:	cmp	w1, #0x19f
  42fa20:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42fa24:	b	42f384 <ferror@plt+0x2bdb4>
  42fa28:	sub	w1, w1, #0x1af
  42fa2c:	cmp	w1, #0x1
  42fa30:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fa34:	b	42f384 <ferror@plt+0x2bdb4>
  42fa38:	cmp	w1, #0xfc
  42fa3c:	b.hi	42fb28 <ferror@plt+0x2c558>  // b.pmore
  42fa40:	cmp	w1, #0xc3
  42fa44:	b.hi	42fab4 <ferror@plt+0x2c4e4>  // b.pmore
  42fa48:	cmp	w1, #0x6f
  42fa4c:	b.hi	42fb14 <ferror@plt+0x2c544>  // b.pmore
  42fa50:	cmp	w1, #0x60
  42fa54:	b.hi	42fadc <ferror@plt+0x2c50c>  // b.pmore
  42fa58:	cmp	w1, #0x4f
  42fa5c:	b.hi	42fb00 <ferror@plt+0x2c530>  // b.pmore
  42fa60:	cmp	w1, #0x40
  42fa64:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42fa68:	sub	w1, w1, #0x41
  42fa6c:	cmp	w1, #0xe
  42fa70:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fa74:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fa78:	add	x0, x0, #0xc10
  42fa7c:	ldrh	w0, [x0, w1, uxtw #1]
  42fa80:	adr	x1, 42fa8c <ferror@plt+0x2c4bc>
  42fa84:	add	x0, x1, w0, sxth #2
  42fa88:	br	x0
  42fa8c:	sub	w1, w1, #0x391
  42fa90:	mov	x0, #0x1                   	// #1
  42fa94:	lsl	x1, x0, x1
  42fa98:	mov	x0, #0x101                 	// #257
  42fa9c:	movk	x0, #0x10, lsl #16
  42faa0:	movk	x0, #0x101, lsl #32
  42faa4:	movk	x0, #0x10, lsl #48
  42faa8:	tst	x1, x0
  42faac:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fab0:	b	42f384 <ferror@plt+0x2bdb4>
  42fab4:	sub	w1, w1, #0xc4
  42fab8:	mov	x0, #0x1                   	// #1
  42fabc:	lsl	x1, x0, x1
  42fac0:	mov	x0, #0x5                   	// #5
  42fac4:	movk	x0, #0x106, lsl #16
  42fac8:	movk	x0, #0x5, lsl #32
  42facc:	movk	x0, #0x106, lsl #48
  42fad0:	tst	x1, x0
  42fad4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fad8:	b	42f384 <ferror@plt+0x2bdb4>
  42fadc:	sub	w1, w1, #0x61
  42fae0:	cmp	w1, #0xe
  42fae4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fae8:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42faec:	add	x0, x0, #0xc30
  42faf0:	ldrh	w0, [x0, w1, uxtw #1]
  42faf4:	adr	x1, 42fb00 <ferror@plt+0x2c530>
  42faf8:	add	x0, x1, w0, sxth #2
  42fafc:	br	x0
  42fb00:	cmp	w1, #0x55
  42fb04:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fb08:	cmp	w1, #0x59
  42fb0c:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fb10:	b	42f384 <ferror@plt+0x2bdb4>
  42fb14:	cmp	w1, #0x75
  42fb18:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fb1c:	cmp	w1, #0x79
  42fb20:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fb24:	b	42f384 <ferror@plt+0x2bdb4>
  42fb28:	cmp	w1, #0x3c5
  42fb2c:	b.hi	42fb68 <ferror@plt+0x2c598>  // b.pmore
  42fb30:	cmp	w1, #0x390
  42fb34:	b.hi	42fa8c <ferror@plt+0x2c4bc>  // b.pmore
  42fb38:	cmp	w1, #0x227
  42fb3c:	b.hi	42fb58 <ferror@plt+0x2c588>  // b.pmore
  42fb40:	cmp	w1, #0x225
  42fb44:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  42fb48:	sub	w1, w1, #0x1ea
  42fb4c:	cmp	w1, #0x1
  42fb50:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fb54:	b	42f384 <ferror@plt+0x2bdb4>
  42fb58:	sub	w1, w1, #0x22e
  42fb5c:	cmp	w1, #0x1
  42fb60:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fb64:	b	42f384 <ferror@plt+0x2bdb4>
  42fb68:	mov	w0, #0x1e37                	// #7735
  42fb6c:	cmp	w1, w0
  42fb70:	b.hi	42fba8 <ferror@plt+0x2c5d8>  // b.pmore
  42fb74:	mov	w0, #0x1e35                	// #7733
  42fb78:	cmp	w1, w0
  42fb7c:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  42fb80:	sub	w1, w1, #0x418
  42fb84:	cmp	w1, #0x2b
  42fb88:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fb8c:	mov	x0, #0x1                   	// #1
  42fb90:	lsl	x1, x0, x1
  42fb94:	mov	x0, #0x801                 	// #2049
  42fb98:	movk	x0, #0x801, lsl #32
  42fb9c:	tst	x1, x0
  42fba0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fba4:	b	42f384 <ferror@plt+0x2bdb4>
  42fba8:	mov	w0, #0x1fb3                	// #8115
  42fbac:	cmp	w1, w0
  42fbb0:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fbb4:	b.hi	42fbcc <ferror@plt+0x2c5fc>  // b.pmore
  42fbb8:	mov	w2, #0xffffe1a6            	// #-7770
  42fbbc:	add	w1, w1, w2
  42fbc0:	cmp	w1, #0x1
  42fbc4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fbc8:	b	42f384 <ferror@plt+0x2bdb4>
  42fbcc:	mov	w0, #0x1fbc                	// #8124
  42fbd0:	cmp	w1, w0
  42fbd4:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fbd8:	b	42f384 <ferror@plt+0x2bdb4>
  42fbdc:	cmp	w1, #0x3c5
  42fbe0:	b.hi	42fca0 <ferror@plt+0x2c6d0>  // b.pmore
  42fbe4:	cmp	w1, #0x390
  42fbe8:	b.hi	42fc30 <ferror@plt+0x2c660>  // b.pmore
  42fbec:	cmp	w1, #0x6f
  42fbf0:	b.hi	42fc88 <ferror@plt+0x2c6b8>  // b.pmore
  42fbf4:	cmp	w1, #0x60
  42fbf8:	b.hi	42fc58 <ferror@plt+0x2c688>  // b.pmore
  42fbfc:	cmp	w1, #0x4f
  42fc00:	b.hi	42fc7c <ferror@plt+0x2c6ac>  // b.pmore
  42fc04:	cmp	w1, #0x40
  42fc08:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42fc0c:	sub	w1, w1, #0x41
  42fc10:	cmp	w1, #0xe
  42fc14:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fc18:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fc1c:	add	x0, x0, #0xc50
  42fc20:	ldrh	w0, [x0, w1, uxtw #1]
  42fc24:	adr	x1, 42fc30 <ferror@plt+0x2c660>
  42fc28:	add	x0, x1, w0, sxth #2
  42fc2c:	br	x0
  42fc30:	sub	w1, w1, #0x391
  42fc34:	mov	x0, #0x1                   	// #1
  42fc38:	lsl	x1, x0, x1
  42fc3c:	mov	x0, #0x101                 	// #257
  42fc40:	movk	x0, #0x10, lsl #16
  42fc44:	movk	x0, #0x101, lsl #32
  42fc48:	movk	x0, #0x10, lsl #48
  42fc4c:	tst	x1, x0
  42fc50:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fc54:	b	42f384 <ferror@plt+0x2bdb4>
  42fc58:	sub	w1, w1, #0x61
  42fc5c:	cmp	w1, #0xe
  42fc60:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fc64:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fc68:	add	x0, x0, #0xc70
  42fc6c:	ldrh	w0, [x0, w1, uxtw #1]
  42fc70:	adr	x1, 42fc7c <ferror@plt+0x2c6ac>
  42fc74:	add	x0, x1, w0, sxth #2
  42fc78:	br	x0
  42fc7c:	cmp	w1, #0x55
  42fc80:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fc84:	b	42f384 <ferror@plt+0x2bdb4>
  42fc88:	cmp	w1, #0x75
  42fc8c:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fc90:	sub	w1, w1, #0x228
  42fc94:	cmp	w1, #0x1
  42fc98:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fc9c:	b	42f384 <ferror@plt+0x2bdb4>
  42fca0:	cmp	w1, #0x443
  42fca4:	b.hi	42fcd8 <ferror@plt+0x2c708>  // b.pmore
  42fca8:	cmp	w1, #0x40f
  42fcac:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42fcb0:	sub	w1, w1, #0x410
  42fcb4:	mov	x0, #0x1                   	// #1
  42fcb8:	lsl	x1, x0, x1
  42fcbc:	mov	x0, #0x161                 	// #353
  42fcc0:	movk	x0, #0x8, lsl #16
  42fcc4:	movk	x0, #0x161, lsl #32
  42fcc8:	movk	x0, #0x8, lsl #48
  42fccc:	tst	x1, x0
  42fcd0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fcd4:	b	42f384 <ferror@plt+0x2bdb4>
  42fcd8:	mov	w0, #0x1fb3                	// #8115
  42fcdc:	cmp	w1, w0
  42fce0:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fce4:	b.hi	42fcfc <ferror@plt+0x2c72c>  // b.pmore
  42fce8:	mov	w0, #0xffffe160            	// #-7840
  42fcec:	add	w1, w1, w0
  42fcf0:	cmp	w1, #0x1
  42fcf4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fcf8:	b	42f384 <ferror@plt+0x2bdb4>
  42fcfc:	mov	w0, #0x1fbc                	// #8124
  42fd00:	cmp	w1, w0
  42fd04:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fd08:	b	42f384 <ferror@plt+0x2bdb4>
  42fd0c:	cmp	w1, #0x7a
  42fd10:	b.hi	42fd44 <ferror@plt+0x2c774>  // b.pmore
  42fd14:	cmp	w1, #0x40
  42fd18:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42fd1c:	sub	w1, w1, #0x41
  42fd20:	mov	x0, #0x1                   	// #1
  42fd24:	lsl	x1, x0, x1
  42fd28:	mov	x0, #0xf1ff                	// #61951
  42fd2c:	movk	x0, #0x3ce, lsl #16
  42fd30:	movk	x0, #0xf0ff, lsl #32
  42fd34:	movk	x0, #0x3ce, lsl #48
  42fd38:	tst	x1, x0
  42fd3c:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  42fd40:	b	42f144 <ferror@plt+0x2bb74>
  42fd44:	cmp	w1, #0x17f
  42fd48:	b.hi	42fd74 <ferror@plt+0x2c7a4>  // b.pmore
  42fd4c:	cmp	w1, #0x159
  42fd50:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42fd54:	sub	w1, w1, #0x15a
  42fd58:	mov	x0, #0x1                   	// #1
  42fd5c:	lsl	x1, x0, x1
  42fd60:	mov	x0, #0xc3                  	// #195
  42fd64:	movk	x0, #0x20, lsl #32
  42fd68:	tst	x1, x0
  42fd6c:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fd70:	b	42f384 <ferror@plt+0x2bdb4>
  42fd74:	mov	w30, #0xffffe19e            	// #-7778
  42fd78:	add	w1, w1, w30
  42fd7c:	cmp	w1, #0x1
  42fd80:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fd84:	b	42f384 <ferror@plt+0x2bdb4>
  42fd88:	cmp	w1, #0x3d2
  42fd8c:	b.hi	42fe8c <ferror@plt+0x2c8bc>  // b.pmore
  42fd90:	cmp	w1, #0x398
  42fd94:	b.hi	42fe1c <ferror@plt+0x2c84c>  // b.pmore
  42fd98:	cmp	w1, #0x79
  42fd9c:	b.hi	42fe64 <ferror@plt+0x2c894>  // b.pmore
  42fda0:	cmp	w1, #0x60
  42fda4:	b.hi	42fe40 <ferror@plt+0x2c870>  // b.pmore
  42fda8:	cmp	w1, #0x41
  42fdac:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fdb0:	sub	w1, w1, #0x45
  42fdb4:	cmp	w1, #0x14
  42fdb8:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fdbc:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fdc0:	add	x0, x0, #0xc90
  42fdc4:	ldrh	w0, [x0, w1, uxtw #1]
  42fdc8:	adr	x1, 42fdd4 <ferror@plt+0x2c804>
  42fdcc:	add	x0, x1, w0, sxth #2
  42fdd0:	br	x0
  42fdd4:	sub	w1, w1, #0x443
  42fdd8:	cmp	w1, #0xa
  42fddc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fde0:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fde4:	add	x0, x0, #0xcbc
  42fde8:	ldrh	w0, [x0, w1, uxtw #1]
  42fdec:	adr	x1, 42fdf8 <ferror@plt+0x2c828>
  42fdf0:	add	x0, x1, w0, sxth #2
  42fdf4:	br	x0
  42fdf8:	sub	w1, w1, #0x427
  42fdfc:	cmp	w1, #0x11
  42fe00:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fe04:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fe08:	add	x0, x0, #0xcd4
  42fe0c:	ldrh	w0, [x0, w1, uxtw #1]
  42fe10:	adr	x1, 42fe1c <ferror@plt+0x2c84c>
  42fe14:	add	x0, x1, w0, sxth #2
  42fe18:	br	x0
  42fe1c:	sub	w1, w1, #0x399
  42fe20:	mov	x0, #0x1                   	// #1
  42fe24:	lsl	x1, x0, x1
  42fe28:	mov	x0, #0x1001                	// #4097
  42fe2c:	movk	x0, #0x1001, lsl #32
  42fe30:	movk	x0, #0x200, lsl #48
  42fe34:	tst	x1, x0
  42fe38:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fe3c:	b	42f384 <ferror@plt+0x2bdb4>
  42fe40:	sub	w1, w1, #0x61
  42fe44:	cmp	w1, #0x18
  42fe48:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fe4c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  42fe50:	add	x0, x0, #0xcf8
  42fe54:	ldrh	w0, [x0, w1, uxtw #1]
  42fe58:	adr	x1, 42fe64 <ferror@plt+0x2c894>
  42fe5c:	add	x0, x1, w0, sxth #2
  42fe60:	br	x0
  42fe64:	cmp	w1, #0xf5
  42fe68:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  42fe6c:	b.hi	42fe7c <ferror@plt+0x2c8ac>  // b.pmore
  42fe70:	cmp	w1, #0xd5
  42fe74:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fe78:	b	42f384 <ferror@plt+0x2bdb4>
  42fe7c:	sub	w1, w1, #0x16a
  42fe80:	cmp	w1, #0x1
  42fe84:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fe88:	b	42f384 <ferror@plt+0x2bdb4>
  42fe8c:	cmp	w1, #0x438
  42fe90:	b.hi	42fec4 <ferror@plt+0x2c8f4>  // b.pmore
  42fe94:	cmp	w1, #0x426
  42fe98:	b.hi	42fdf8 <ferror@plt+0x2c828>  // b.pmore
  42fe9c:	sub	w1, w1, #0x406
  42fea0:	cmp	w1, #0x1d
  42fea4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42fea8:	mov	x0, #0x1                   	// #1
  42feac:	lsl	x1, x0, x1
  42feb0:	mov	x0, #0x8401                	// #33793
  42feb4:	movk	x0, #0x2107, lsl #16
  42feb8:	tst	x1, x0
  42febc:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42fec0:	b	42f384 <ferror@plt+0x2bdb4>
  42fec4:	cmp	w1, #0x44d
  42fec8:	b.hi	42fee0 <ferror@plt+0x2c910>  // b.pmore
  42fecc:	cmp	w1, #0x442
  42fed0:	b.hi	42fdd4 <ferror@plt+0x2c804>  // b.pmore
  42fed4:	cmp	w1, #0x43e
  42fed8:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fedc:	b	42f384 <ferror@plt+0x2bdb4>
  42fee0:	cmp	w1, #0x4d9
  42fee4:	b.hi	42fefc <ferror@plt+0x2c92c>  // b.pmore
  42fee8:	cmp	w1, #0x4d7
  42feec:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  42fef0:	cmp	w1, #0x456
  42fef4:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42fef8:	b	42f384 <ferror@plt+0x2bdb4>
  42fefc:	sub	w1, w1, #0x4e8
  42ff00:	cmp	w1, #0x1
  42ff04:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42ff08:	b	42f384 <ferror@plt+0x2bdb4>
  42ff0c:	cmp	w1, #0x79
  42ff10:	b.hi	42ff6c <ferror@plt+0x2c99c>  // b.pmore
  42ff14:	cmp	w1, #0x40
  42ff18:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42ff1c:	sub	w1, w1, #0x41
  42ff20:	mov	x0, #0x1                   	// #1
  42ff24:	lsl	x1, x0, x1
  42ff28:	mov	x0, #0x4111                	// #16657
  42ff2c:	movk	x0, #0x110, lsl #16
  42ff30:	movk	x0, #0x4111, lsl #32
  42ff34:	movk	x0, #0x110, lsl #48
  42ff38:	tst	x1, x0
  42ff3c:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42ff40:	b	42f384 <ferror@plt+0x2bdb4>
  42ff44:	sub	w1, w1, #0xca
  42ff48:	mov	x0, #0x1                   	// #1
  42ff4c:	lsl	x1, x0, x1
  42ff50:	mov	x0, #0x401                 	// #1025
  42ff54:	movk	x0, #0x100, lsl #16
  42ff58:	movk	x0, #0x401, lsl #32
  42ff5c:	movk	x0, #0x300, lsl #48
  42ff60:	tst	x1, x0
  42ff64:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42ff68:	b	42f384 <ferror@plt+0x2bdb4>
  42ff6c:	cmp	w1, #0x103
  42ff70:	b.hi	42ff88 <ferror@plt+0x2c9b8>  // b.pmore
  42ff74:	cmp	w1, #0xc9
  42ff78:	b.hi	42ff44 <ferror@plt+0x2c974>  // b.pmore
  42ff7c:	cmp	w1, #0xc2
  42ff80:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  42ff84:	b	42f384 <ferror@plt+0x2bdb4>
  42ff88:	cmp	w1, #0x1a1
  42ff8c:	b.hi	42ff9c <ferror@plt+0x2c9cc>  // b.pmore
  42ff90:	cmp	w1, #0x19f
  42ff94:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42ff98:	b	42f384 <ferror@plt+0x2bdb4>
  42ff9c:	sub	w1, w1, #0x1af
  42ffa0:	cmp	w1, #0x1
  42ffa4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42ffa8:	b	42f384 <ferror@plt+0x2bdb4>
  42ffac:	sub	w1, w1, #0x41
  42ffb0:	cmp	w1, #0x38
  42ffb4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  42ffb8:	mov	x0, #0x1                   	// #1
  42ffbc:	lsl	x1, x0, x1
  42ffc0:	mov	x0, #0x1                   	// #1
  42ffc4:	movk	x0, #0x10, lsl #16
  42ffc8:	movk	x0, #0x1, lsl #32
  42ffcc:	movk	x0, #0x150, lsl #48
  42ffd0:	tst	x1, x0
  42ffd4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  42ffd8:	b	42f384 <ferror@plt+0x2bdb4>
  42ffdc:	cmp	w1, #0x75
  42ffe0:	b.hi	43000c <ferror@plt+0x2ca3c>  // b.pmore
  42ffe4:	cmp	w1, #0x4e
  42ffe8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  42ffec:	sub	w1, w1, #0x4f
  42fff0:	mov	x0, #0x1                   	// #1
  42fff4:	lsl	x1, x0, x1
  42fff8:	mov	x0, #0x41                  	// #65
  42fffc:	movk	x0, #0x41, lsl #32
  430000:	tst	x1, x0
  430004:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430008:	b	42f384 <ferror@plt+0x2bdb4>
  43000c:	cmp	w1, #0x423
  430010:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  430014:	cmp	w1, #0x443
  430018:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  43001c:	b	42f384 <ferror@plt+0x2bdb4>
  430020:	cmp	w1, #0x7a
  430024:	b.hi	430054 <ferror@plt+0x2ca84>  // b.pmore
  430028:	cmp	w1, #0x40
  43002c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430030:	sub	w1, w1, #0x41
  430034:	cmp	w1, #0x39
  430038:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43003c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430040:	add	x0, x0, #0xd2c
  430044:	ldrh	w0, [x0, w1, uxtw #1]
  430048:	adr	x1, 430054 <ferror@plt+0x2ca84>
  43004c:	add	x0, x1, w0, sxth #2
  430050:	br	x0
  430054:	cmp	w1, #0x1b7
  430058:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  43005c:	b.hi	430070 <ferror@plt+0x2caa0>  // b.pmore
  430060:	and	w1, w1, #0xffffffdf
  430064:	cmp	w1, #0xdc
  430068:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  43006c:	b	42f384 <ferror@plt+0x2bdb4>
  430070:	cmp	w1, #0x292
  430074:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  430078:	b	42f384 <ferror@plt+0x2bdb4>
  43007c:	cmp	w1, #0x75
  430080:	b.hi	4300b4 <ferror@plt+0x2cae4>  // b.pmore
  430084:	cmp	w1, #0x40
  430088:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  43008c:	sub	w1, w1, #0x41
  430090:	mov	x0, #0x1                   	// #1
  430094:	lsl	x1, x0, x1
  430098:	mov	x0, #0x4111                	// #16657
  43009c:	movk	x0, #0x12, lsl #16
  4300a0:	movk	x0, #0x4111, lsl #32
  4300a4:	movk	x0, #0x12, lsl #48
  4300a8:	tst	x1, x0
  4300ac:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4300b0:	b	42f384 <ferror@plt+0x2bdb4>
  4300b4:	sub	w1, w1, #0x474
  4300b8:	cmp	w1, #0x1
  4300bc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4300c0:	b	42f384 <ferror@plt+0x2bdb4>
  4300c4:	sub	w1, w1, #0x41
  4300c8:	cmp	w1, #0x34
  4300cc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4300d0:	mov	x0, #0x1                   	// #1
  4300d4:	lsl	x1, x0, x1
  4300d8:	mov	x0, #0x4111                	// #16657
  4300dc:	movk	x0, #0x12, lsl #16
  4300e0:	movk	x0, #0x4111, lsl #32
  4300e4:	movk	x0, #0x12, lsl #48
  4300e8:	tst	x1, x0
  4300ec:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4300f0:	b	42f384 <ferror@plt+0x2bdb4>
  4300f4:	cmp	w1, #0x3c9
  4300f8:	b.hi	4301a0 <ferror@plt+0x2cbd0>  // b.pmore
  4300fc:	cmp	w1, #0x3be
  430100:	b.hi	430158 <ferror@plt+0x2cb88>  // b.pmore
  430104:	cmp	w1, #0x3a9
  430108:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  43010c:	b.hi	43017c <ferror@plt+0x2cbac>  // b.pmore
  430110:	sub	w1, w1, #0x391
  430114:	cmp	w1, #0xe
  430118:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43011c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430120:	add	x0, x0, #0xda0
  430124:	ldrh	w0, [x0, w1, uxtw #1]
  430128:	adr	x1, 430134 <ferror@plt+0x2cb64>
  43012c:	add	x0, x1, w0, sxth #2
  430130:	br	x0
  430134:	mov	w18, #0xffffe03d            	// #-8131
  430138:	add	w1, w1, w18
  43013c:	mov	x0, #0x1                   	// #1
  430140:	lsl	x1, x0, x1
  430144:	mov	x0, #0x201                 	// #513
  430148:	movk	x0, #0x201, lsl #48
  43014c:	tst	x1, x0
  430150:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430154:	b	42f384 <ferror@plt+0x2bdb4>
  430158:	sub	w1, w1, #0x3bf
  43015c:	cmp	w1, #0xa
  430160:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430164:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430168:	add	x0, x0, #0xdc0
  43016c:	ldrh	w0, [x0, w1, uxtw #1]
  430170:	adr	x1, 43017c <ferror@plt+0x2cbac>
  430174:	add	x0, x1, w0, sxth #2
  430178:	br	x0
  43017c:	sub	w1, w1, #0x3b1
  430180:	cmp	w1, #0x8
  430184:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430188:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  43018c:	add	x0, x0, #0xdd8
  430190:	ldrh	w0, [x0, w1, uxtw #1]
  430194:	adr	x1, 4301a0 <ferror@plt+0x2cbd0>
  430198:	add	x0, x1, w0, sxth #2
  43019c:	br	x0
  4301a0:	mov	w0, #0x1ffc                	// #8188
  4301a4:	cmp	w1, w0
  4301a8:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4301ac:	mov	w0, #0x1fc2                	// #8130
  4301b0:	cmp	w1, w0
  4301b4:	b.hi	430134 <ferror@plt+0x2cb64>  // b.pmore
  4301b8:	mov	w0, #0x1fb3                	// #8115
  4301bc:	cmp	w1, w0
  4301c0:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  4301c4:	mov	w0, #0x1fbc                	// #8124
  4301c8:	cmp	w1, w0
  4301cc:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4301d0:	b	42f384 <ferror@plt+0x2bdb4>
  4301d4:	cmp	w1, #0x3b9
  4301d8:	b.hi	430260 <ferror@plt+0x2cc90>  // b.pmore
  4301dc:	cmp	w1, #0x3b0
  4301e0:	b.hi	430218 <ferror@plt+0x2cc48>  // b.pmore
  4301e4:	cmp	w1, #0x399
  4301e8:	b.hi	43023c <ferror@plt+0x2cc6c>  // b.pmore
  4301ec:	cmp	w1, #0x390
  4301f0:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4301f4:	sub	w1, w1, #0x391
  4301f8:	cmp	w1, #0x8
  4301fc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430200:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430204:	add	x0, x0, #0xdec
  430208:	ldrh	w0, [x0, w1, uxtw #1]
  43020c:	adr	x1, 430218 <ferror@plt+0x2cc48>
  430210:	add	x0, x1, w0, sxth #2
  430214:	br	x0
  430218:	sub	w1, w1, #0x3b1
  43021c:	cmp	w1, #0x8
  430220:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430224:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430228:	add	x0, x0, #0xe00
  43022c:	ldrh	w0, [x0, w1, uxtw #1]
  430230:	adr	x1, 43023c <ferror@plt+0x2cc6c>
  430234:	add	x0, x1, w0, sxth #2
  430238:	br	x0
  43023c:	sub	w1, w1, #0x39f
  430240:	cmp	w1, #0xa
  430244:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430248:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  43024c:	add	x0, x0, #0xe14
  430250:	ldrh	w0, [x0, w1, uxtw #1]
  430254:	adr	x1, 430260 <ferror@plt+0x2cc90>
  430258:	add	x0, x1, w0, sxth #2
  43025c:	br	x0
  430260:	mov	w0, #0x1fbc                	// #8124
  430264:	cmp	w1, w0
  430268:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  43026c:	b.hi	4302b4 <ferror@plt+0x2cce4>  // b.pmore
  430270:	cmp	w1, #0x3c9
  430274:	b.hi	4302a4 <ferror@plt+0x2ccd4>  // b.pmore
  430278:	cmp	w1, #0x3be
  43027c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430280:	sub	w1, w1, #0x3bf
  430284:	cmp	w1, #0xa
  430288:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43028c:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430290:	add	x0, x0, #0xe2c
  430294:	ldrh	w0, [x0, w1, uxtw #1]
  430298:	adr	x1, 4302a4 <ferror@plt+0x2ccd4>
  43029c:	add	x0, x1, w0, sxth #2
  4302a0:	br	x0
  4302a4:	mov	w0, #0x1fb3                	// #8115
  4302a8:	cmp	w1, w0
  4302ac:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4302b0:	b	42f384 <ferror@plt+0x2bdb4>
  4302b4:	mov	w17, #0xffffe03d            	// #-8131
  4302b8:	add	w1, w1, w17
  4302bc:	cmp	w1, #0x39
  4302c0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4302c4:	mov	x0, #0x1                   	// #1
  4302c8:	lsl	x1, x0, x1
  4302cc:	mov	x0, #0x201                 	// #513
  4302d0:	movk	x0, #0x201, lsl #48
  4302d4:	tst	x1, x0
  4302d8:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4302dc:	b	42f384 <ferror@plt+0x2bdb4>
  4302e0:	cmp	w1, #0x171
  4302e4:	b.hi	430358 <ferror@plt+0x2cd88>  // b.pmore
  4302e8:	cmp	w1, #0x167
  4302ec:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  4302f0:	cmp	w1, #0xfc
  4302f4:	b.hi	430348 <ferror@plt+0x2cd78>  // b.pmore
  4302f8:	cmp	w1, #0xd1
  4302fc:	b.hi	430328 <ferror@plt+0x2cd58>  // b.pmore
  430300:	sub	w1, w1, #0x4f
  430304:	cmp	w1, #0x26
  430308:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43030c:	mov	x0, #0x1                   	// #1
  430310:	lsl	x1, x0, x1
  430314:	mov	x0, #0x41                  	// #65
  430318:	movk	x0, #0x41, lsl #32
  43031c:	tst	x1, x0
  430320:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430324:	b	42f384 <ferror@plt+0x2bdb4>
  430328:	sub	w1, w1, #0xd2
  43032c:	mov	x0, #0x1                   	// #1
  430330:	lsl	x1, x0, x1
  430334:	mov	x0, #0x79f                 	// #1951
  430338:	movk	x0, #0x79f, lsl #32
  43033c:	tst	x1, x0
  430340:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430344:	b	42f384 <ferror@plt+0x2bdb4>
  430348:	sub	w1, w1, #0x14c
  43034c:	cmp	w1, #0x5
  430350:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430354:	b	42f384 <ferror@plt+0x2bdb4>
  430358:	mov	w0, #0x1e53                	// #7763
  43035c:	cmp	w1, w0
  430360:	b.hi	4303ac <ferror@plt+0x2cddc>  // b.pmore
  430364:	mov	w0, #0x1e4b                	// #7755
  430368:	cmp	w1, w0
  43036c:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430370:	cmp	w1, #0x1dc
  430374:	b.hi	430384 <ferror@plt+0x2cdb4>  // b.pmore
  430378:	cmp	w1, #0x1d0
  43037c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430380:	b	42f384 <ferror@plt+0x2bdb4>
  430384:	sub	w1, w1, #0x20c
  430388:	cmp	w1, #0x25
  43038c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430390:	mov	x0, #0x1                   	// #1
  430394:	lsl	x1, x0, x1
  430398:	mov	x0, #0x3fc0000000          	// #273804165120
  43039c:	movk	x0, #0xf0f
  4303a0:	tst	x1, x0
  4303a4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4303a8:	b	42f384 <ferror@plt+0x2bdb4>
  4303ac:	mov	w0, #0x1ed9                	// #7897
  4303b0:	cmp	w1, w0
  4303b4:	b.hi	4303d8 <ferror@plt+0x2ce08>  // b.pmore
  4303b8:	mov	w0, #0x1ecb                	// #7883
  4303bc:	cmp	w1, w0
  4303c0:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  4303c4:	mov	w16, #0xffffe18e            	// #-7794
  4303c8:	add	w1, w1, w16
  4303cc:	cmp	w1, #0x9
  4303d0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4303d4:	b	42f384 <ferror@plt+0x2bdb4>
  4303d8:	mov	w15, #0xffffe11c            	// #-7908
  4303dc:	add	w1, w1, w15
  4303e0:	cmp	w1, #0x3
  4303e4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4303e8:	b	42f384 <ferror@plt+0x2bdb4>
  4303ec:	cmp	w1, #0x1a1
  4303f0:	b.hi	430570 <ferror@plt+0x2cfa0>  // b.pmore
  4303f4:	cmp	w1, #0x167
  4303f8:	b.hi	4304bc <ferror@plt+0x2ceec>  // b.pmore
  4303fc:	cmp	w1, #0x103
  430400:	b.hi	430518 <ferror@plt+0x2cf48>  // b.pmore
  430404:	cmp	w1, #0xc7
  430408:	b.hi	4304e0 <ferror@plt+0x2cf10>  // b.pmore
  43040c:	cmp	w1, #0x7a
  430410:	b.hi	430508 <ferror@plt+0x2cf38>  // b.pmore
  430414:	cmp	w1, #0x40
  430418:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  43041c:	sub	w1, w1, #0x41
  430420:	cmp	w1, #0x39
  430424:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430428:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  43042c:	add	x0, x0, #0xe44
  430430:	ldrh	w0, [x0, w1, uxtw #1]
  430434:	adr	x1, 430440 <ferror@plt+0x2ce70>
  430438:	add	x0, x1, w0, sxth #2
  43043c:	br	x0
  430440:	mov	w14, #0xffffe172            	// #-7822
  430444:	add	w1, w1, w14
  430448:	mov	x0, #0x1                   	// #1
  43044c:	lsl	x1, x0, x1
  430450:	mov	x0, #0xe0f                 	// #3599
  430454:	movk	x0, #0x3ff0, lsl #16
  430458:	movk	x0, #0xf0ff, lsl #32
  43045c:	movk	x0, #0xff, lsl #48
  430460:	tst	x1, x0
  430464:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430468:	b	42f144 <ferror@plt+0x2bb74>
  43046c:	mov	w12, #0xffffe1de            	// #-7714
  430470:	add	w1, w1, w12
  430474:	mov	x0, #0x1                   	// #1
  430478:	lsl	x1, x0, x1
  43047c:	mov	x0, #0xf033                	// #61491
  430480:	movk	x0, #0xf000, lsl #16
  430484:	movk	x0, #0xfc0c, lsl #32
  430488:	movk	x0, #0x3, lsl #48
  43048c:	tst	x1, x0
  430490:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430494:	b	42f384 <ferror@plt+0x2bdb4>
  430498:	sub	w1, w1, #0x1f8
  43049c:	mov	x0, #0x1                   	// #1
  4304a0:	lsl	x1, x0, x1
  4304a4:	mov	x0, #0xffffffffffffff0f    	// #-241
  4304a8:	movk	x0, #0xc0c0, lsl #32
  4304ac:	movk	x0, #0xffc, lsl #48
  4304b0:	tst	x1, x0
  4304b4:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  4304b8:	b	42f144 <ferror@plt+0x2bb74>
  4304bc:	sub	w1, w1, #0x168
  4304c0:	mov	x0, #0x1                   	// #1
  4304c4:	lsl	x1, x0, x1
  4304c8:	mov	x0, #0xf3ff                	// #62463
  4304cc:	movk	x0, #0x7f, lsl #16
  4304d0:	movk	x0, #0x300, lsl #48
  4304d4:	tst	x1, x0
  4304d8:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4304dc:	b	42f384 <ferror@plt+0x2bdb4>
  4304e0:	sub	w1, w1, #0xc8
  4304e4:	mov	x0, #0x1                   	// #1
  4304e8:	lsl	x1, x0, x1
  4304ec:	mov	x0, #0x7eff                	// #32511
  4304f0:	movk	x0, #0x3f3e, lsl #16
  4304f4:	movk	x0, #0x7eff, lsl #32
  4304f8:	movk	x0, #0xfbe, lsl #48
  4304fc:	tst	x1, x0
  430500:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430504:	b	42f144 <ferror@plt+0x2bb74>
  430508:	sub	w1, w1, #0xc0
  43050c:	cmp	w1, #0x5
  430510:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430514:	b	42f384 <ferror@plt+0x2bdb4>
  430518:	cmp	w1, #0x125
  43051c:	b.hi	43054c <ferror@plt+0x2cf7c>  // b.pmore
  430520:	cmp	w1, #0x10d
  430524:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430528:	sub	w1, w1, #0x10e
  43052c:	cmp	w1, #0x17
  430530:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430534:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430538:	add	x0, x0, #0xeb8
  43053c:	ldrh	w0, [x0, w1, uxtw #1]
  430540:	adr	x1, 43054c <ferror@plt+0x2cf7c>
  430544:	add	x0, x1, w0, sxth #2
  430548:	br	x0
  43054c:	sub	w1, w1, #0x128
  430550:	cmp	w1, #0x3d
  430554:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430558:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  43055c:	add	x0, x0, #0xee8
  430560:	ldrh	w0, [x0, w1, uxtw #1]
  430564:	adr	x1, 430570 <ferror@plt+0x2cfa0>
  430568:	add	x0, x1, w0, sxth #2
  43056c:	br	x0
  430570:	mov	w0, #0x1e53                	// #7763
  430574:	cmp	w1, w0
  430578:	b.hi	4305f4 <ferror@plt+0x2d024>  // b.pmore
  43057c:	mov	w0, #0x1e21                	// #7713
  430580:	cmp	w1, w0
  430584:	b.hi	43046c <ferror@plt+0x2ce9c>  // b.pmore
  430588:	cmp	w1, #0x233
  43058c:	b.hi	4305c8 <ferror@plt+0x2cff8>  // b.pmore
  430590:	cmp	w1, #0x1f7
  430594:	b.hi	430498 <ferror@plt+0x2cec8>  // b.pmore
  430598:	sub	w1, w1, #0x1af
  43059c:	cmp	w1, #0x3a
  4305a0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4305a4:	mov	x0, #0x1                   	// #1
  4305a8:	lsl	x1, x0, x1
  4305ac:	mov	x0, #0x3                   	// #3
  4305b0:	movk	x0, #0xc000, lsl #16
  4305b4:	movk	x0, #0xbfff, lsl #32
  4305b8:	movk	x0, #0x607, lsl #48
  4305bc:	tst	x1, x0
  4305c0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4305c4:	b	42f384 <ferror@plt+0x2bdb4>
  4305c8:	mov	w11, #0xffffe1fe            	// #-7682
  4305cc:	add	w1, w1, w11
  4305d0:	cmp	w1, #0x15
  4305d4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4305d8:	mov	x0, #0x1                   	// #1
  4305dc:	lsl	x1, x0, x1
  4305e0:	mov	x0, #0x303                 	// #771
  4305e4:	movk	x0, #0x3c, lsl #16
  4305e8:	tst	x1, x0
  4305ec:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4305f0:	b	42f384 <ferror@plt+0x2bdb4>
  4305f4:	mov	w0, #0x1ec5                	// #7877
  4305f8:	cmp	w1, w0
  4305fc:	b.hi	43067c <ferror@plt+0x2d0ac>  // b.pmore
  430600:	mov	w0, #0x1e8d                	// #7821
  430604:	cmp	w1, w0
  430608:	b.hi	430440 <ferror@plt+0x2ce70>  // b.pmore
  43060c:	mov	w0, #0x1e6b                	// #7787
  430610:	cmp	w1, w0
  430614:	b.hi	43064c <ferror@plt+0x2d07c>  // b.pmore
  430618:	mov	w0, #0x1e57                	// #7767
  43061c:	cmp	w1, w0
  430620:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430624:	mov	w13, #0xffffe1a8            	// #-7768
  430628:	add	w1, w1, w13
  43062c:	cmp	w1, #0x13
  430630:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430634:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430638:	add	x0, x0, #0xf64
  43063c:	ldrh	w0, [x0, w1, uxtw #1]
  430640:	adr	x1, 43064c <ferror@plt+0x2d07c>
  430644:	add	x0, x1, w0, sxth #2
  430648:	br	x0
  43064c:	mov	w0, #0x1e7d                	// #7805
  430650:	cmp	w1, w0
  430654:	b.hi	430668 <ferror@plt+0x2d098>  // b.pmore
  430658:	mov	w0, #0x1e77                	// #7799
  43065c:	cmp	w1, w0
  430660:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430664:	b	42f384 <ferror@plt+0x2bdb4>
  430668:	mov	w10, #0xffffe180            	// #-7808
  43066c:	add	w1, w1, w10
  430670:	cmp	w1, #0x7
  430674:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430678:	b	42f384 <ferror@plt+0x2bdb4>
  43067c:	mov	w9, #0xffffe138            	// #-7880
  430680:	add	w1, w1, w9
  430684:	cmp	w1, #0x31
  430688:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43068c:	mov	x0, #0x1                   	// #1
  430690:	lsl	x1, x0, x1
  430694:	mov	x0, #0xffc3                	// #65475
  430698:	movk	x0, #0xc3fc, lsl #16
  43069c:	movk	x0, #0xccff, lsl #32
  4306a0:	movk	x0, #0x3, lsl #48
  4306a4:	tst	x1, x0
  4306a8:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  4306ac:	b	42f144 <ferror@plt+0x2bb74>
  4306b0:	cmp	w1, #0x171
  4306b4:	b.hi	4306f0 <ferror@plt+0x2d120>  // b.pmore
  4306b8:	cmp	w1, #0x167
  4306bc:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  4306c0:	cmp	w1, #0xdc
  4306c4:	b.hi	4306e0 <ferror@plt+0x2d110>  // b.pmore
  4306c8:	cmp	w1, #0xd8
  4306cc:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  4306d0:	and	w1, w1, #0xffffffdf
  4306d4:	cmp	w1, #0x55
  4306d8:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4306dc:	b	42f384 <ferror@plt+0x2bdb4>
  4306e0:	sub	w1, w1, #0xf9
  4306e4:	cmp	w1, #0x3
  4306e8:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4306ec:	b	42f384 <ferror@plt+0x2bdb4>
  4306f0:	mov	w0, #0x1e7b                	// #7803
  4306f4:	cmp	w1, w0
  4306f8:	b.hi	43072c <ferror@plt+0x2d15c>  // b.pmore
  4306fc:	mov	w0, #0x1e77                	// #7799
  430700:	cmp	w1, w0
  430704:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430708:	cmp	w1, #0x1dc
  43070c:	b.hi	43071c <ferror@plt+0x2d14c>  // b.pmore
  430710:	cmp	w1, #0x1d2
  430714:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430718:	b	42f384 <ferror@plt+0x2bdb4>
  43071c:	sub	w1, w1, #0x214
  430720:	cmp	w1, #0x3
  430724:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430728:	b	42f384 <ferror@plt+0x2bdb4>
  43072c:	mov	w8, #0xffffe11a            	// #-7910
  430730:	add	w1, w1, w8
  430734:	cmp	w1, #0x1
  430738:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43073c:	b	42f384 <ferror@plt+0x2bdb4>
  430740:	cmp	w1, #0x1e1
  430744:	b.hi	4307ac <ferror@plt+0x2d1dc>  // b.pmore
  430748:	cmp	w1, #0x1dd
  43074c:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430750:	cmp	w1, #0xe5
  430754:	b.hi	430788 <ferror@plt+0x2d1b8>  // b.pmore
  430758:	cmp	w1, #0xdf
  43075c:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430760:	cmp	w1, #0x61
  430764:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  430768:	b.hi	430778 <ferror@plt+0x2d1a8>  // b.pmore
  43076c:	cmp	w1, #0x41
  430770:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  430774:	b	42f384 <ferror@plt+0x2bdb4>
  430778:	sub	w1, w1, #0xc0
  43077c:	cmp	w1, #0x5
  430780:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430784:	b	42f384 <ferror@plt+0x2bdb4>
  430788:	cmp	w1, #0x103
  43078c:	b.hi	43079c <ferror@plt+0x2d1cc>  // b.pmore
  430790:	cmp	w1, #0xff
  430794:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430798:	b	42f384 <ferror@plt+0x2bdb4>
  43079c:	sub	w1, w1, #0x1cd
  4307a0:	cmp	w1, #0x1
  4307a4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4307a8:	b	42f384 <ferror@plt+0x2bdb4>
  4307ac:	cmp	w1, #0x227
  4307b0:	b.hi	4307dc <ferror@plt+0x2d20c>  // b.pmore
  4307b4:	cmp	w1, #0x1f9
  4307b8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4307bc:	sub	w1, w1, #0x1fa
  4307c0:	mov	x0, #0x1                   	// #1
  4307c4:	lsl	x1, x0, x1
  4307c8:	mov	x0, #0x3c3                 	// #963
  4307cc:	movk	x0, #0x3000, lsl #32
  4307d0:	tst	x1, x0
  4307d4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4307d8:	b	42f384 <ferror@plt+0x2bdb4>
  4307dc:	mov	w0, #0x1eab                	// #7851
  4307e0:	cmp	w1, w0
  4307e4:	b.hi	4307f8 <ferror@plt+0x2d228>  // b.pmore
  4307e8:	mov	w0, #0x1ea1                	// #7841
  4307ec:	cmp	w1, w0
  4307f0:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4307f4:	b	42f384 <ferror@plt+0x2bdb4>
  4307f8:	mov	w7, #0xffffe152            	// #-7854
  4307fc:	add	w1, w1, w7
  430800:	cmp	w1, #0x7
  430804:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430808:	b	42f384 <ferror@plt+0x2bdb4>
  43080c:	cmp	w1, #0x165
  430810:	b.hi	43085c <ferror@plt+0x2d28c>  // b.pmore
  430814:	cmp	w1, #0x159
  430818:	b.hi	430830 <ferror@plt+0x2d260>  // b.pmore
  43081c:	cmp	w1, #0x54
  430820:	b.hi	43084c <ferror@plt+0x2d27c>  // b.pmore
  430824:	cmp	w1, #0x52
  430828:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  43082c:	b	42f384 <ferror@plt+0x2bdb4>
  430830:	sub	w1, w1, #0x15a
  430834:	mov	x0, #0x1                   	// #1
  430838:	lsl	x1, x0, x1
  43083c:	mov	x0, #0xccf                 	// #3279
  430840:	tst	x1, x0
  430844:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430848:	b	42f144 <ferror@plt+0x2bb74>
  43084c:	sub	w1, w1, #0x73
  430850:	cmp	w1, #0x1
  430854:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430858:	b	42f384 <ferror@plt+0x2bdb4>
  43085c:	mov	w6, #0xffffe1a0            	// #-7776
  430860:	add	w1, w1, w6
  430864:	cmp	w1, #0x37
  430868:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43086c:	mov	x0, #0x1                   	// #1
  430870:	lsl	x1, x0, x1
  430874:	mov	x0, #0xcf3                 	// #3315
  430878:	movk	x0, #0x80, lsl #48
  43087c:	tst	x1, x0
  430880:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430884:	b	42f384 <ferror@plt+0x2bdb4>
  430888:	cmp	w1, #0x165
  43088c:	b.hi	430974 <ferror@plt+0x2d3a4>  // b.pmore
  430890:	cmp	w1, #0x138
  430894:	b.hi	4308f8 <ferror@plt+0x2d328>  // b.pmore
  430898:	cmp	w1, #0x74
  43089c:	b.hi	430944 <ferror@plt+0x2d374>  // b.pmore
  4308a0:	cmp	w1, #0x42
  4308a4:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4308a8:	sub	w1, w1, #0x43
  4308ac:	cmp	w1, #0x31
  4308b0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4308b4:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4308b8:	add	x0, x0, #0xf8c
  4308bc:	ldrh	w0, [x0, w1, uxtw #1]
  4308c0:	adr	x1, 4308cc <ferror@plt+0x2d2fc>
  4308c4:	add	x0, x1, w0, sxth #2
  4308c8:	br	x0
  4308cc:	mov	w5, #0xffffe1f6            	// #-7690
  4308d0:	add	w1, w1, w5
  4308d4:	mov	x0, #0x1                   	// #1
  4308d8:	lsl	x1, x0, x1
  4308dc:	mov	x0, #0xff3f                	// #65343
  4308e0:	movk	x0, #0x3fc3, lsl #16
  4308e4:	movk	x0, #0xffc3, lsl #32
  4308e8:	movk	x0, #0xf, lsl #48
  4308ec:	tst	x1, x0
  4308f0:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  4308f4:	b	42f144 <ferror@plt+0x2bb74>
  4308f8:	sub	w1, w1, #0x139
  4308fc:	cmp	w1, #0x2c
  430900:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430904:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  430908:	add	x0, x0, #0xff0
  43090c:	ldrh	w0, [x0, w1, uxtw #1]
  430910:	adr	x1, 43091c <ferror@plt+0x2d34c>
  430914:	add	x0, x1, w0, sxth #2
  430918:	br	x0
  43091c:	sub	w1, w1, #0xe8
  430920:	mov	x0, #0x1                   	// #1
  430924:	lsl	x1, x0, x1
  430928:	mov	x0, #0x20f                 	// #527
  43092c:	movk	x0, #0xc000, lsl #16
  430930:	movk	x0, #0xfcff, lsl #32
  430934:	movk	x0, #0x33fc, lsl #48
  430938:	tst	x1, x0
  43093c:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430940:	b	42f144 <ferror@plt+0x2bb74>
  430944:	cmp	w1, #0x125
  430948:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43094c:	cmp	w1, #0xe7
  430950:	b.hi	43091c <ferror@plt+0x2d34c>  // b.pmore
  430954:	cmp	w1, #0xcb
  430958:	b.hi	430968 <ferror@plt+0x2d398>  // b.pmore
  43095c:	cmp	w1, #0xc7
  430960:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430964:	b	42f384 <ferror@plt+0x2bdb4>
  430968:	cmp	w1, #0xd1
  43096c:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  430970:	b	42f384 <ferror@plt+0x2bdb4>
  430974:	mov	w0, #0x1e3d                	// #7741
  430978:	cmp	w1, w0
  43097c:	b.hi	4309bc <ferror@plt+0x2d3ec>  // b.pmore
  430980:	mov	w0, #0x1e09                	// #7689
  430984:	cmp	w1, w0
  430988:	b.hi	4308cc <ferror@plt+0x2d2fc>  // b.pmore
  43098c:	sub	w1, w1, #0x1e6
  430990:	cmp	w1, #0x39
  430994:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430998:	mov	x0, #0x1                   	// #1
  43099c:	lsl	x1, x0, x1
  4309a0:	mov	x0, #0xc00f                	// #49167
  4309a4:	movk	x0, #0xc00c, lsl #16
  4309a8:	movk	x0, #0x3c03, lsl #32
  4309ac:	movk	x0, #0x33c, lsl #48
  4309b0:	tst	x1, x0
  4309b4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4309b8:	b	42f384 <ferror@plt+0x2bdb4>
  4309bc:	mov	w0, #0x1e97                	// #7831
  4309c0:	cmp	w1, w0
  4309c4:	b.hi	430a04 <ferror@plt+0x2d434>  // b.pmore
  4309c8:	mov	w0, #0x1e95                	// #7829
  4309cc:	cmp	w1, w0
  4309d0:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  4309d4:	mov	w0, #0x1e4b                	// #7755
  4309d8:	cmp	w1, w0
  4309dc:	b.hi	4309f0 <ferror@plt+0x2d420>  // b.pmore
  4309e0:	mov	w0, #0x1e43                	// #7747
  4309e4:	cmp	w1, w0
  4309e8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4309ec:	b	42f384 <ferror@plt+0x2bdb4>
  4309f0:	mov	w4, #0xffffe1a8            	// #-7768
  4309f4:	add	w1, w1, w4
  4309f8:	cmp	w1, #0x19
  4309fc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430a00:	b	42f384 <ferror@plt+0x2bdb4>
  430a04:	mov	w3, #0xffffe148            	// #-7864
  430a08:	add	w1, w1, w3
  430a0c:	cmp	w1, #0xf
  430a10:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430a14:	b	42f384 <ferror@plt+0x2bdb4>
  430a18:	cmp	w1, #0x151
  430a1c:	b.hi	430b2c <ferror@plt+0x2d55c>  // b.pmore
  430a20:	cmp	w1, #0x119
  430a24:	b.hi	430ab8 <ferror@plt+0x2d4e8>  // b.pmore
  430a28:	cmp	w1, #0xd6
  430a2c:	b.hi	430afc <ferror@plt+0x2d52c>  // b.pmore
  430a30:	cmp	w1, #0xbf
  430a34:	b.hi	430adc <ferror@plt+0x2d50c>  // b.pmore
  430a38:	sub	w1, w1, #0x41
  430a3c:	cmp	w1, #0x34
  430a40:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430a44:	mov	x0, #0x1                   	// #1
  430a48:	lsl	x1, x0, x1
  430a4c:	mov	x0, #0x4111                	// #16657
  430a50:	movk	x0, #0x10, lsl #16
  430a54:	movk	x0, #0x4111, lsl #32
  430a58:	movk	x0, #0x10, lsl #48
  430a5c:	tst	x1, x0
  430a60:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430a64:	b	42f384 <ferror@plt+0x2bdb4>
  430a68:	sub	w1, w1, #0x1fa
  430a6c:	mov	x0, #0x1                   	// #1
  430a70:	lsl	x1, x0, x1
  430a74:	mov	x0, #0xffc3                	// #65475
  430a78:	movk	x0, #0x3c3f, lsl #16
  430a7c:	movk	x0, #0x3000, lsl #32
  430a80:	movk	x0, #0xff, lsl #48
  430a84:	tst	x1, x0
  430a88:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430a8c:	b	42f144 <ferror@plt+0x2bb74>
  430a90:	sub	w1, w1, #0x1af
  430a94:	mov	x0, #0x1                   	// #1
  430a98:	lsl	x1, x0, x1
  430a9c:	mov	x0, #0x3                   	// #3
  430aa0:	movk	x0, #0xc000, lsl #16
  430aa4:	movk	x0, #0xbfff, lsl #32
  430aa8:	movk	x0, #0x7, lsl #48
  430aac:	tst	x1, x0
  430ab0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430ab4:	b	42f384 <ferror@plt+0x2bdb4>
  430ab8:	sub	w1, w1, #0x11a
  430abc:	mov	x0, #0x1                   	// #1
  430ac0:	lsl	x1, x0, x1
  430ac4:	mov	x0, #0xc003                	// #49155
  430ac8:	movk	x0, #0x4f, lsl #16
  430acc:	movk	x0, #0xfc, lsl #48
  430ad0:	tst	x1, x0
  430ad4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430ad8:	b	42f384 <ferror@plt+0x2bdb4>
  430adc:	sub	w1, w1, #0xc0
  430ae0:	mov	x0, #0x1                   	// #1
  430ae4:	lsl	x1, x0, x1
  430ae8:	mov	x0, #0xff3f                	// #65343
  430aec:	movk	x0, #0x7c, lsl #16
  430af0:	tst	x1, x0
  430af4:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430af8:	b	42f144 <ferror@plt+0x2bb74>
  430afc:	sub	w1, w1, #0xd9
  430b00:	cmp	w1, #0x3e
  430b04:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430b08:	mov	x0, #0x1                   	// #1
  430b0c:	lsl	x1, x0, x1
  430b10:	mov	x0, #0x9f8f                	// #40847
  430b14:	movk	x0, #0x3e7f, lsl #16
  430b18:	movk	x0, #0x78f, lsl #32
  430b1c:	movk	x0, #0x7e00, lsl #48
  430b20:	tst	x1, x0
  430b24:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430b28:	b	42f144 <ferror@plt+0x2bb74>
  430b2c:	cmp	w1, #0x231
  430b30:	b.hi	430b70 <ferror@plt+0x2d5a0>  // b.pmore
  430b34:	cmp	w1, #0x1f9
  430b38:	b.hi	430a68 <ferror@plt+0x2d498>  // b.pmore
  430b3c:	cmp	w1, #0x1e1
  430b40:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430b44:	cmp	w1, #0x1ae
  430b48:	b.hi	430a90 <ferror@plt+0x2d4c0>  // b.pmore
  430b4c:	cmp	w1, #0x171
  430b50:	b.hi	430b60 <ferror@plt+0x2d590>  // b.pmore
  430b54:	cmp	w1, #0x167
  430b58:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430b5c:	b	42f384 <ferror@plt+0x2bdb4>
  430b60:	sub	w1, w1, #0x1a0
  430b64:	cmp	w1, #0x1
  430b68:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430b6c:	b	42f384 <ferror@plt+0x2bdb4>
  430b70:	mov	w0, #0x1e53                	// #7763
  430b74:	cmp	w1, w0
  430b78:	b.hi	430bb8 <ferror@plt+0x2d5e8>  // b.pmore
  430b7c:	mov	w0, #0x1e4b                	// #7755
  430b80:	cmp	w1, w0
  430b84:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430b88:	mov	w2, #0xffffe200            	// #-7680
  430b8c:	add	w1, w1, w2
  430b90:	cmp	w1, #0x2f
  430b94:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430b98:	mov	x0, #0x1                   	// #1
  430b9c:	lsl	x1, x0, x1
  430ba0:	mov	x0, #0x3                   	// #3
  430ba4:	movk	x0, #0xff0, lsl #16
  430ba8:	movk	x0, #0xf000, lsl #32
  430bac:	tst	x1, x0
  430bb0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430bb4:	b	42f384 <ferror@plt+0x2bdb4>
  430bb8:	mov	w0, #0x1e7b                	// #7803
  430bbc:	cmp	w1, w0
  430bc0:	b.hi	430bd4 <ferror@plt+0x2d604>  // b.pmore
  430bc4:	mov	w0, #0x1e71                	// #7793
  430bc8:	cmp	w1, w0
  430bcc:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430bd0:	b	42f384 <ferror@plt+0x2bdb4>
  430bd4:	mov	w0, #0xffffe160            	// #-7840
  430bd8:	add	w1, w1, w0
  430bdc:	cmp	w1, #0x51
  430be0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430be4:	b	42f384 <ferror@plt+0x2bdb4>
  430be8:	cmp	w1, #0x148
  430bec:	b.hi	430d18 <ferror@plt+0x2d748>  // b.pmore
  430bf0:	cmp	w1, #0x138
  430bf4:	b.hi	430c80 <ferror@plt+0x2d6b0>  // b.pmore
  430bf8:	cmp	w1, #0xdc
  430bfc:	b.hi	430ce8 <ferror@plt+0x2d718>  // b.pmore
  430c00:	cmp	w1, #0xc7
  430c04:	b.hi	430ca4 <ferror@plt+0x2d6d4>  // b.pmore
  430c08:	cmp	w1, #0x55
  430c0c:	b.hi	430cc4 <ferror@plt+0x2d6f4>  // b.pmore
  430c10:	cmp	w1, #0x43
  430c14:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430c18:	sub	w1, w1, #0x44
  430c1c:	cmp	w1, #0x11
  430c20:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430c24:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  430c28:	add	x0, x0, #0x4c
  430c2c:	ldrh	w0, [x0, w1, uxtw #1]
  430c30:	adr	x1, 430c3c <ferror@plt+0x2d66c>
  430c34:	add	x0, x1, w0, sxth #2
  430c38:	br	x0
  430c3c:	mov	w18, #0xffffe1f6            	// #-7690
  430c40:	add	w1, w1, w18
  430c44:	mov	x0, #0x1                   	// #1
  430c48:	lsl	x1, x0, x1
  430c4c:	mov	x0, #0x3c03                	// #15363
  430c50:	movk	x0, #0xc00, lsl #48
  430c54:	tst	x1, x0
  430c58:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430c5c:	b	42f384 <ferror@plt+0x2bdb4>
  430c60:	sub	w1, w1, #0x1f8
  430c64:	mov	x0, #0x1                   	// #1
  430c68:	lsl	x1, x0, x1
  430c6c:	mov	x0, #0xf003                	// #61443
  430c70:	movk	x0, #0xf000, lsl #16
  430c74:	tst	x1, x0
  430c78:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430c7c:	b	42f384 <ferror@plt+0x2bdb4>
  430c80:	sub	w1, w1, #0x139
  430c84:	cmp	w1, #0xf
  430c88:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430c8c:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  430c90:	add	x0, x0, #0x70
  430c94:	ldrh	w0, [x0, w1, uxtw #1]
  430c98:	adr	x1, 430ca4 <ferror@plt+0x2d6d4>
  430c9c:	add	x0, x1, w0, sxth #2
  430ca0:	br	x0
  430ca4:	sub	w1, w1, #0xc8
  430ca8:	mov	x0, #0x1                   	// #1
  430cac:	lsl	x1, x0, x1
  430cb0:	mov	x0, #0x20f                 	// #527
  430cb4:	movk	x0, #0x1e, lsl #16
  430cb8:	tst	x1, x0
  430cbc:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430cc0:	b	42f384 <ferror@plt+0x2bdb4>
  430cc4:	sub	w1, w1, #0x64
  430cc8:	cmp	w1, #0x11
  430ccc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430cd0:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  430cd4:	add	x0, x0, #0x90
  430cd8:	ldrh	w0, [x0, w1, uxtw #1]
  430cdc:	adr	x1, 430ce8 <ferror@plt+0x2d718>
  430ce0:	add	x0, x1, w0, sxth #2
  430ce4:	br	x0
  430ce8:	sub	w1, w1, #0xe8
  430cec:	cmp	w1, #0x33
  430cf0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430cf4:	mov	x0, #0x1                   	// #1
  430cf8:	lsl	x1, x0, x1
  430cfc:	mov	x0, #0x20f                 	// #527
  430d00:	movk	x0, #0x1e, lsl #16
  430d04:	movk	x0, #0xfcc0, lsl #32
  430d08:	movk	x0, #0xc, lsl #48
  430d0c:	tst	x1, x0
  430d10:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430d14:	b	42f384 <ferror@plt+0x2bdb4>
  430d18:	mov	w0, #0x1e45                	// #7749
  430d1c:	cmp	w1, w0
  430d20:	b.hi	430d70 <ferror@plt+0x2d7a0>  // b.pmore
  430d24:	mov	w0, #0x1e09                	// #7689
  430d28:	cmp	w1, w0
  430d2c:	b.hi	430c3c <ferror@plt+0x2d66c>  // b.pmore
  430d30:	cmp	w1, #0x217
  430d34:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430d38:	cmp	w1, #0x1f7
  430d3c:	b.hi	430c60 <ferror@plt+0x2d690>  // b.pmore
  430d40:	cmp	w1, #0x171
  430d44:	b.hi	430d60 <ferror@plt+0x2d790>  // b.pmore
  430d48:	cmp	w1, #0x167
  430d4c:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430d50:	sub	w1, w1, #0x164
  430d54:	cmp	w1, #0x1
  430d58:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430d5c:	b	42f384 <ferror@plt+0x2bdb4>
  430d60:	sub	w1, w1, #0x1d3
  430d64:	cmp	w1, #0x9
  430d68:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430d6c:	b	42f384 <ferror@plt+0x2bdb4>
  430d70:	mov	w0, #0x1e97                	// #7831
  430d74:	cmp	w1, w0
  430d78:	b.hi	430db0 <ferror@plt+0x2d7e0>  // b.pmore
  430d7c:	mov	w0, #0x1e69                	// #7785
  430d80:	cmp	w1, w0
  430d84:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430d88:	mov	w30, #0xffffe196            	// #-7786
  430d8c:	add	w1, w1, w30
  430d90:	mov	x0, #0x1                   	// #1
  430d94:	lsl	x1, x0, x1
  430d98:	mov	x0, #0xc003                	// #49155
  430d9c:	movk	x0, #0x3, lsl #16
  430da0:	movk	x0, #0x2000, lsl #32
  430da4:	tst	x1, x0
  430da8:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430dac:	b	42f384 <ferror@plt+0x2bdb4>
  430db0:	mov	w0, #0x1ec5                	// #7877
  430db4:	cmp	w1, w0
  430db8:	b.hi	430dcc <ferror@plt+0x2d7fc>  // b.pmore
  430dbc:	mov	w0, #0x1eb9                	// #7865
  430dc0:	cmp	w1, w0
  430dc4:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430dc8:	b	42f384 <ferror@plt+0x2bdb4>
  430dcc:	mov	w17, #0xffffe11a            	// #-7910
  430dd0:	add	w1, w1, w17
  430dd4:	cmp	w1, #0x1
  430dd8:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430ddc:	b	42f384 <ferror@plt+0x2bdb4>
  430de0:	cmp	w1, #0x21f
  430de4:	b.hi	430e18 <ferror@plt+0x2d848>  // b.pmore
  430de8:	cmp	w1, #0x21d
  430dec:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430df0:	cmp	w1, #0x68
  430df4:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  430df8:	b.hi	430e08 <ferror@plt+0x2d838>  // b.pmore
  430dfc:	cmp	w1, #0x48
  430e00:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  430e04:	b	42f384 <ferror@plt+0x2bdb4>
  430e08:	sub	w1, w1, #0x124
  430e0c:	cmp	w1, #0x1
  430e10:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430e14:	b	42f384 <ferror@plt+0x2bdb4>
  430e18:	mov	w0, #0x1e23                	// #7715
  430e1c:	cmp	w1, w0
  430e20:	b.hi	430e34 <ferror@plt+0x2d864>  // b.pmore
  430e24:	mov	w0, #0x1e21                	// #7713
  430e28:	cmp	w1, w0
  430e2c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430e30:	b	42f384 <ferror@plt+0x2bdb4>
  430e34:	mov	w16, #0xffffe1da            	// #-7718
  430e38:	add	w1, w1, w16
  430e3c:	cmp	w1, #0x1
  430e40:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430e44:	b	42f384 <ferror@plt+0x2bdb4>
  430e48:	cmp	w1, #0x130
  430e4c:	b.hi	430f04 <ferror@plt+0x2d934>  // b.pmore
  430e50:	cmp	w1, #0xf8
  430e54:	b.hi	430eb4 <ferror@plt+0x2d8e4>  // b.pmore
  430e58:	cmp	w1, #0x75
  430e5c:	b.hi	430edc <ferror@plt+0x2d90c>  // b.pmore
  430e60:	cmp	w1, #0x44
  430e64:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430e68:	sub	w1, w1, #0x45
  430e6c:	mov	x0, #0x1                   	// #1
  430e70:	lsl	x1, x0, x1
  430e74:	mov	x0, #0x11                  	// #17
  430e78:	movk	x0, #0x1, lsl #16
  430e7c:	movk	x0, #0x11, lsl #32
  430e80:	movk	x0, #0x1, lsl #48
  430e84:	tst	x1, x0
  430e88:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430e8c:	b	42f384 <ferror@plt+0x2bdb4>
  430e90:	mov	w15, #0xffffe146            	// #-7866
  430e94:	add	w1, w1, w15
  430e98:	mov	x0, #0x1                   	// #1
  430e9c:	lsl	x1, x0, x1
  430ea0:	mov	x0, #0xcfff                	// #53247
  430ea4:	movk	x0, #0x3000, lsl #32
  430ea8:	tst	x1, x0
  430eac:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430eb0:	b	42f384 <ferror@plt+0x2bdb4>
  430eb4:	sub	w1, w1, #0xf9
  430eb8:	mov	x0, #0x1                   	// #1
  430ebc:	lsl	x1, x0, x1
  430ec0:	mov	x0, #0xf                   	// #15
  430ec4:	movk	x0, #0x7e00, lsl #16
  430ec8:	movk	x0, #0x8006, lsl #32
  430ecc:	movk	x0, #0x9f, lsl #48
  430ed0:	tst	x1, x0
  430ed4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  430ed8:	b	42f384 <ferror@plt+0x2bdb4>
  430edc:	sub	w1, w1, #0xc8
  430ee0:	cmp	w1, #0x27
  430ee4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430ee8:	mov	x0, #0x1                   	// #1
  430eec:	lsl	x1, x0, x1
  430ef0:	mov	x0, #0xff000000ff          	// #1095216660735
  430ef4:	movk	x0, #0x1e, lsl #16
  430ef8:	tst	x1, x0
  430efc:	b.ne	42f384 <ferror@plt+0x2bdb4>  // b.any
  430f00:	b	42f144 <ferror@plt+0x2bb74>
  430f04:	mov	w0, #0x1e17                	// #7703
  430f08:	cmp	w1, w0
  430f0c:	b.hi	430f74 <ferror@plt+0x2d9a4>  // b.pmore
  430f10:	mov	w0, #0x1e13                	// #7699
  430f14:	cmp	w1, w0
  430f18:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430f1c:	cmp	w1, #0x1dc
  430f20:	b.hi	430f50 <ferror@plt+0x2d980>  // b.pmore
  430f24:	cmp	w1, #0x1d2
  430f28:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  430f2c:	cmp	w1, #0x171
  430f30:	b.hi	430f40 <ferror@plt+0x2d970>  // b.pmore
  430f34:	cmp	w1, #0x167
  430f38:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430f3c:	b	42f384 <ferror@plt+0x2bdb4>
  430f40:	sub	w1, w1, #0x1cf
  430f44:	cmp	w1, #0x1
  430f48:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430f4c:	b	42f384 <ferror@plt+0x2bdb4>
  430f50:	cmp	w1, #0x20b
  430f54:	b.hi	430f64 <ferror@plt+0x2d994>  // b.pmore
  430f58:	cmp	w1, #0x203
  430f5c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430f60:	b	42f384 <ferror@plt+0x2bdb4>
  430f64:	sub	w1, w1, #0x214
  430f68:	cmp	w1, #0x3
  430f6c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430f70:	b	42f384 <ferror@plt+0x2bdb4>
  430f74:	mov	w0, #0x1ee7                	// #7911
  430f78:	cmp	w1, w0
  430f7c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430f80:	mov	w0, #0x1eb9                	// #7865
  430f84:	cmp	w1, w0
  430f88:	b.hi	430e90 <ferror@plt+0x2d8c0>  // b.pmore
  430f8c:	mov	w0, #0x1e2f                	// #7727
  430f90:	cmp	w1, w0
  430f94:	b.hi	430fa8 <ferror@plt+0x2d9d8>  // b.pmore
  430f98:	mov	w0, #0x1e2d                	// #7725
  430f9c:	cmp	w1, w0
  430fa0:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430fa4:	b	42f384 <ferror@plt+0x2bdb4>
  430fa8:	mov	w14, #0xffffe188            	// #-7800
  430fac:	add	w1, w1, w14
  430fb0:	cmp	w1, #0x3
  430fb4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430fb8:	b	42f384 <ferror@plt+0x2bdb4>
  430fbc:	cmp	w1, #0x159
  430fc0:	b.hi	4310e8 <ferror@plt+0x2db18>  // b.pmore
  430fc4:	cmp	w1, #0x138
  430fc8:	b.hi	431060 <ferror@plt+0x2da90>  // b.pmore
  430fcc:	cmp	w1, #0x7a
  430fd0:	b.hi	4310b4 <ferror@plt+0x2dae4>  // b.pmore
  430fd4:	cmp	w1, #0x61
  430fd8:	b.hi	431084 <ferror@plt+0x2dab4>  // b.pmore
  430fdc:	cmp	w1, #0x54
  430fe0:	b.hi	4310a8 <ferror@plt+0x2dad8>  // b.pmore
  430fe4:	cmp	w1, #0x41
  430fe8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  430fec:	sub	w1, w1, #0x42
  430ff0:	cmp	w1, #0x12
  430ff4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  430ff8:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  430ffc:	add	x0, x0, #0xb4
  431000:	ldrh	w0, [x0, w1, uxtw #1]
  431004:	adr	x1, 431010 <ferror@plt+0x2da40>
  431008:	add	x0, x1, w0, sxth #2
  43100c:	br	x0
  431010:	mov	w13, #0xffffe1dd            	// #-7715
  431014:	add	w1, w1, w13
  431018:	mov	x0, #0x1                   	// #1
  43101c:	lsl	x1, x0, x1
  431020:	mov	x0, #0x6011                	// #24593
  431024:	movk	x0, #0x6, lsl #32
  431028:	movk	x0, #0x60, lsl #48
  43102c:	tst	x1, x0
  431030:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  431034:	b	42f384 <ferror@plt+0x2bdb4>
  431038:	sub	w1, w1, #0x1e8
  43103c:	mov	x0, #0x1                   	// #1
  431040:	lsl	x1, x0, x1
  431044:	mov	x0, #0x3                   	// #3
  431048:	movk	x0, #0x3, lsl #16
  43104c:	movk	x0, #0xf00, lsl #32
  431050:	movk	x0, #0x80, lsl #48
  431054:	tst	x1, x0
  431058:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  43105c:	b	42f384 <ferror@plt+0x2bdb4>
  431060:	sub	w1, w1, #0x139
  431064:	cmp	w1, #0x20
  431068:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43106c:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431070:	add	x0, x0, #0xdc
  431074:	ldrh	w0, [x0, w1, uxtw #1]
  431078:	adr	x1, 431084 <ferror@plt+0x2dab4>
  43107c:	add	x0, x1, w0, sxth #2
  431080:	br	x0
  431084:	sub	w1, w1, #0x62
  431088:	cmp	w1, #0x18
  43108c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431090:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431094:	add	x0, x0, #0x120
  431098:	ldrh	w0, [x0, w1, uxtw #1]
  43109c:	adr	x1, 4310a8 <ferror@plt+0x2dad8>
  4310a0:	add	x0, x1, w0, sxth #2
  4310a4:	br	x0
  4310a8:	cmp	w1, #0x5a
  4310ac:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4310b0:	b	42f384 <ferror@plt+0x2bdb4>
  4310b4:	cmp	w1, #0xd1
  4310b8:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  4310bc:	sub	w1, w1, #0xf1
  4310c0:	cmp	w1, #0x34
  4310c4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4310c8:	mov	x0, #0x1                   	// #1
  4310cc:	lsl	x1, x0, x1
  4310d0:	mov	x0, #0x1                   	// #1
  4310d4:	movk	x0, #0x6000, lsl #16
  4310d8:	movk	x0, #0x10, lsl #48
  4310dc:	tst	x1, x0
  4310e0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4310e4:	b	42f384 <ferror@plt+0x2bdb4>
  4310e8:	mov	w0, #0x1e59                	// #7769
  4310ec:	cmp	w1, w0
  4310f0:	b.hi	431164 <ferror@plt+0x2db94>  // b.pmore
  4310f4:	mov	w0, #0x1e22                	// #7714
  4310f8:	cmp	w1, w0
  4310fc:	b.hi	431010 <ferror@plt+0x2da40>  // b.pmore
  431100:	cmp	w1, #0x21f
  431104:	b.hi	431134 <ferror@plt+0x2db64>  // b.pmore
  431108:	cmp	w1, #0x1e7
  43110c:	b.hi	431038 <ferror@plt+0x2da68>  // b.pmore
  431110:	cmp	w1, #0x165
  431114:	b.hi	431124 <ferror@plt+0x2db54>  // b.pmore
  431118:	cmp	w1, #0x163
  43111c:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  431120:	b	42f384 <ferror@plt+0x2bdb4>
  431124:	sub	w1, w1, #0x179
  431128:	cmp	w1, #0x5
  43112c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431130:	b	42f384 <ferror@plt+0x2bdb4>
  431134:	mov	w0, #0x1e03                	// #7683
  431138:	cmp	w1, w0
  43113c:	b.hi	431150 <ferror@plt+0x2db80>  // b.pmore
  431140:	mov	w0, #0x1e01                	// #7681
  431144:	cmp	w1, w0
  431148:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  43114c:	b	42f384 <ferror@plt+0x2bdb4>
  431150:	mov	w12, #0xffffe1f6            	// #-7690
  431154:	add	w1, w1, w12
  431158:	cmp	w1, #0x1
  43115c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431160:	b	42f384 <ferror@plt+0x2bdb4>
  431164:	mov	w11, #0xffffe196            	// #-7786
  431168:	add	w1, w1, w11
  43116c:	cmp	w1, #0x2d
  431170:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431174:	mov	x0, #0x1                   	// #1
  431178:	lsl	x1, x0, x1
  43117c:	mov	x0, #0x3                   	// #3
  431180:	movk	x0, #0x20c0, lsl #32
  431184:	tst	x1, x0
  431188:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  43118c:	b	42f384 <ferror@plt+0x2bdb4>
  431190:	mov	w0, #0x1f81                	// #8065
  431194:	cmp	w1, w0
  431198:	b.hi	431234 <ferror@plt+0x2dc64>  // b.pmore
  43119c:	mov	w0, #0x1f4f                	// #8015
  4311a0:	cmp	w1, w0
  4311a4:	b.hi	4311f0 <ferror@plt+0x2dc20>  // b.pmore
  4311a8:	mov	w0, #0x1f39                	// #7993
  4311ac:	cmp	w1, w0
  4311b0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4311b4:	mov	w0, #0x1eff                	// #7935
  4311b8:	cmp	w1, w0
  4311bc:	b.hi	431218 <ferror@plt+0x2dc48>  // b.pmore
  4311c0:	cmp	w1, #0xa8
  4311c4:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  4311c8:	sub	w1, w1, #0x3b1
  4311cc:	cmp	w1, #0x1a
  4311d0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4311d4:	mov	x0, #0x1                   	// #1
  4311d8:	lsl	x1, x0, x1
  4311dc:	mov	x0, #0x141                 	// #321
  4311e0:	movk	x0, #0x710, lsl #16
  4311e4:	tst	x1, x0
  4311e8:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4311ec:	b	42f384 <ferror@plt+0x2bdb4>
  4311f0:	mov	w9, #0xffffe0b0            	// #-8016
  4311f4:	add	w1, w1, w9
  4311f8:	mov	x0, #0x1                   	// #1
  4311fc:	lsl	x1, x0, x1
  431200:	mov	x0, #0x203                 	// #515
  431204:	movk	x0, #0x303, lsl #16
  431208:	movk	x0, #0x3, lsl #48
  43120c:	tst	x1, x0
  431210:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  431214:	b	42f384 <ferror@plt+0x2bdb4>
  431218:	mov	x0, #0x1                   	// #1
  43121c:	lsl	x1, x0, x1
  431220:	mov	x0, #0x303030303030303     	// #217020518514230019
  431224:	movk	x0, #0x0, lsl #16
  431228:	tst	x1, x0
  43122c:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  431230:	b	42f384 <ferror@plt+0x2bdb4>
  431234:	mov	w0, #0x1fbf                	// #8127
  431238:	cmp	w1, w0
  43123c:	b.hi	431278 <ferror@plt+0x2dca8>  // b.pmore
  431240:	mov	w0, #0x1f87                	// #8071
  431244:	cmp	w1, w0
  431248:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  43124c:	mov	w10, #0xffffe078            	// #-8072
  431250:	add	w1, w1, w10
  431254:	mov	x0, #0x1                   	// #1
  431258:	lsl	x1, x0, x1
  43125c:	mov	x0, #0x303                 	// #771
  431260:	movk	x0, #0x303, lsl #16
  431264:	movk	x0, #0x803, lsl #32
  431268:	movk	x0, #0x80, lsl #48
  43126c:	tst	x1, x0
  431270:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  431274:	b	42f384 <ferror@plt+0x2bdb4>
  431278:	mov	w8, #0xffffe03d            	// #-8131
  43127c:	add	w1, w1, w8
  431280:	cmp	w1, #0x3b
  431284:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431288:	mov	x0, #0x1                   	// #1
  43128c:	lsl	x1, x0, x1
  431290:	mov	x0, #0x1                   	// #1
  431294:	movk	x0, #0x801, lsl #48
  431298:	tst	x1, x0
  43129c:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4312a0:	b	42f384 <ferror@plt+0x2bdb4>
  4312a4:	cmp	w1, #0x3ce
  4312a8:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  4312ac:	b.hi	431304 <ferror@plt+0x2dd34>  // b.pmore
  4312b0:	cmp	w1, #0x3b7
  4312b4:	b.hi	4312f8 <ferror@plt+0x2dd28>  // b.pmore
  4312b8:	cmp	w1, #0x3a8
  4312bc:	b.hi	4312d4 <ferror@plt+0x2dd04>  // b.pmore
  4312c0:	cmp	w1, #0x391
  4312c4:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  4312c8:	cmp	w1, #0x397
  4312cc:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4312d0:	b	42f384 <ferror@plt+0x2bdb4>
  4312d4:	sub	w1, w1, #0x3a9
  4312d8:	cmp	w1, #0xe
  4312dc:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4312e0:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  4312e4:	add	x0, x0, #0x154
  4312e8:	ldrh	w0, [x0, w1, uxtw #1]
  4312ec:	adr	x1, 4312f8 <ferror@plt+0x2dd28>
  4312f0:	add	x0, x1, w0, sxth #2
  4312f4:	br	x0
  4312f8:	cmp	w1, #0x3c9
  4312fc:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431300:	b	42f384 <ferror@plt+0x2bdb4>
  431304:	mov	w0, #0x1f7c                	// #8060
  431308:	cmp	w1, w0
  43130c:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  431310:	b.hi	43136c <ferror@plt+0x2dd9c>  // b.pmore
  431314:	mov	w0, #0x1f70                	// #8048
  431318:	cmp	w1, w0
  43131c:	b.hi	43135c <ferror@plt+0x2dd8c>  // b.pmore
  431320:	mov	w0, #0x1f5f                	// #8031
  431324:	cmp	w1, w0
  431328:	b.hi	42f384 <ferror@plt+0x2bdb4>  // b.pmore
  43132c:	mov	w0, #0x1f0f                	// #7951
  431330:	cmp	w1, w0
  431334:	b.hi	431348 <ferror@plt+0x2dd78>  // b.pmore
  431338:	mov	w0, #0x1eff                	// #7935
  43133c:	cmp	w1, w0
  431340:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  431344:	b	42f384 <ferror@plt+0x2bdb4>
  431348:	mov	w7, #0xffffe0e0            	// #-7968
  43134c:	add	w1, w1, w7
  431350:	cmp	w1, #0xf
  431354:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431358:	b	42f384 <ferror@plt+0x2bdb4>
  43135c:	mov	w0, #0x1f74                	// #8052
  431360:	cmp	w1, w0
  431364:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431368:	b	42f384 <ferror@plt+0x2bdb4>
  43136c:	mov	w0, #0x1fc6                	// #8134
  431370:	cmp	w1, w0
  431374:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  431378:	and	w1, w1, #0xffffffbf
  43137c:	mov	w0, #0x1fb6                	// #8118
  431380:	cmp	w1, w0
  431384:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431388:	b	42f384 <ferror@plt+0x2bdb4>
  43138c:	cmp	w1, #0x627
  431390:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431394:	b	42f384 <ferror@plt+0x2bdb4>
  431398:	cmp	w1, #0x64a
  43139c:	b.hi	4313c8 <ferror@plt+0x2ddf8>  // b.pmore
  4313a0:	cmp	w1, #0x626
  4313a4:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4313a8:	sub	w1, w1, #0x627
  4313ac:	mov	x0, #0x1                   	// #1
  4313b0:	lsl	x1, x0, x1
  4313b4:	mov	x0, #0x1                   	// #1
  4313b8:	movk	x0, #0xa, lsl #32
  4313bc:	tst	x1, x0
  4313c0:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4313c4:	b	42f384 <ferror@plt+0x2bdb4>
  4313c8:	sub	w1, w1, #0x6c1
  4313cc:	cmp	w1, #0x14
  4313d0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4313d4:	mov	x0, #0x1                   	// #1
  4313d8:	lsl	x1, x0, x1
  4313dc:	add	x0, x0, #0x120, lsl #12
  4313e0:	tst	x1, x0
  4313e4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4313e8:	b	42f384 <ferror@plt+0x2bdb4>
  4313ec:	cmp	w1, #0x623
  4313f0:	b.hi	431400 <ferror@plt+0x2de30>  // b.pmore
  4313f4:	cmp	w1, #0x621
  4313f8:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4313fc:	b	42f384 <ferror@plt+0x2bdb4>
  431400:	cmp	w1, #0x627
  431404:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  431408:	b	42f144 <ferror@plt+0x2bb74>
  43140c:	cmp	w1, #0x917
  431410:	b.hi	431420 <ferror@plt+0x2de50>  // b.pmore
  431414:	cmp	w1, #0x914
  431418:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  43141c:	b	42f384 <ferror@plt+0x2bdb4>
  431420:	sub	w1, w1, #0x91c
  431424:	cmp	w1, #0x17
  431428:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43142c:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431430:	add	x0, x0, #0x174
  431434:	ldrh	w0, [x0, w1, uxtw #1]
  431438:	adr	x1, 431444 <ferror@plt+0x2de74>
  43143c:	add	x0, x1, w0, sxth #2
  431440:	br	x0
  431444:	cmp	w1, #0x9c7
  431448:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  43144c:	b	42f384 <ferror@plt+0x2bdb4>
  431450:	cmp	w1, #0xb47
  431454:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431458:	b	42f384 <ferror@plt+0x2bdb4>
  43145c:	cmp	w1, #0xb47
  431460:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431464:	b	42f384 <ferror@plt+0x2bdb4>
  431468:	sub	w1, w1, #0xbc6
  43146c:	cmp	w1, #0x1
  431470:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431474:	b	42f384 <ferror@plt+0x2bdb4>
  431478:	cmp	w1, #0xb92
  43147c:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  431480:	cmp	w1, #0xbc6
  431484:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431488:	b	42f384 <ferror@plt+0x2bdb4>
  43148c:	cmp	w1, #0xc46
  431490:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431494:	b	42f384 <ferror@plt+0x2bdb4>
  431498:	sub	w1, w1, #0xcbf
  43149c:	cmp	w1, #0xb
  4314a0:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4314a4:	mov	x0, #0x1                   	// #1
  4314a8:	lsl	x1, x0, x1
  4314ac:	mov	x0, #0x881                 	// #2177
  4314b0:	tst	x1, x0
  4314b4:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  4314b8:	b	42f384 <ferror@plt+0x2bdb4>
  4314bc:	sub	w1, w1, #0xd46
  4314c0:	cmp	w1, #0x1
  4314c4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4314c8:	b	42f384 <ferror@plt+0x2bdb4>
  4314cc:	cmp	w1, #0xd46
  4314d0:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4314d4:	b	42f384 <ferror@plt+0x2bdb4>
  4314d8:	cmp	w1, #0xdd9
  4314dc:	b.eq	42f384 <ferror@plt+0x2bdb4>  // b.none
  4314e0:	cmp	w1, #0xddc
  4314e4:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4314e8:	b	42f384 <ferror@plt+0x2bdb4>
  4314ec:	sub	w1, w1, #0xdd9
  4314f0:	cmp	w1, #0x1
  4314f4:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4314f8:	b	42f384 <ferror@plt+0x2bdb4>
  4314fc:	mov	w0, #0x1025                	// #4133
  431500:	cmp	w1, w0
  431504:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  431508:	b	42f384 <ferror@plt+0x2bdb4>
  43150c:	mov	w0, #0x1b11                	// #6929
  431510:	cmp	w1, w0
  431514:	b.hi	43154c <ferror@plt+0x2df7c>  // b.pmore
  431518:	mov	w0, #0x1b04                	// #6916
  43151c:	cmp	w1, w0
  431520:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  431524:	mov	w6, #0xffffe4fb            	// #-6917
  431528:	add	w1, w1, w6
  43152c:	cmp	w1, #0xc
  431530:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431534:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431538:	add	x0, x0, #0x1a4
  43153c:	ldrh	w0, [x0, w1, uxtw #1]
  431540:	adr	x1, 43154c <ferror@plt+0x2df7c>
  431544:	add	x0, x1, w0, sxth #2
  431548:	br	x0
  43154c:	mov	w5, #0xffffe4c6            	// #-6970
  431550:	add	w1, w1, w5
  431554:	cmp	w1, #0x8
  431558:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  43155c:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431560:	add	x0, x0, #0x1c0
  431564:	ldrh	w0, [x0, w1, uxtw #1]
  431568:	adr	x1, 431574 <ferror@plt+0x2dfa4>
  43156c:	add	x0, x1, w0, sxth #2
  431570:	br	x0
  431574:	mov	w3, #0xffffcf63            	// #-12445
  431578:	add	w1, w1, w3
  43157c:	cmp	w1, #0x3e
  431580:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431584:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431588:	add	x0, x0, #0x1d4
  43158c:	ldrh	w0, [x0, w1, uxtw #1]
  431590:	adr	x1, 43159c <ferror@plt+0x2dfcc>
  431594:	add	x0, x1, w0, sxth #2
  431598:	br	x0
  43159c:	mov	w0, #0x30f2                	// #12530
  4315a0:	cmp	w1, w0
  4315a4:	b.hi	4315b8 <ferror@plt+0x2dfe8>  // b.pmore
  4315a8:	mov	w0, #0x30ee                	// #12526
  4315ac:	cmp	w1, w0
  4315b0:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4315b4:	b	42f384 <ferror@plt+0x2bdb4>
  4315b8:	mov	w0, #0x30fd                	// #12541
  4315bc:	cmp	w1, w0
  4315c0:	b.ne	42f144 <ferror@plt+0x2bb74>  // b.any
  4315c4:	b	42f384 <ferror@plt+0x2bdb4>
  4315c8:	mov	w0, #0x307b                	// #12411
  4315cc:	cmp	w1, w0
  4315d0:	b.hi	431608 <ferror@plt+0x2e038>  // b.pmore
  4315d4:	mov	w0, #0x306e                	// #12398
  4315d8:	cmp	w1, w0
  4315dc:	b.ls	42f144 <ferror@plt+0x2bb74>  // b.plast
  4315e0:	mov	w2, #0xffffcf91            	// #-12399
  4315e4:	add	w1, w1, w2
  4315e8:	cmp	w1, #0xc
  4315ec:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  4315f0:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  4315f4:	add	x0, x0, #0x254
  4315f8:	ldrh	w0, [x0, w1, uxtw #1]
  4315fc:	adr	x1, 431608 <ferror@plt+0x2e038>
  431600:	add	x0, x1, w0, sxth #2
  431604:	br	x0
  431608:	mov	w0, #0xffffcf31            	// #-12495
  43160c:	add	w1, w1, w0
  431610:	cmp	w1, #0xc
  431614:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431618:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  43161c:	add	x0, x0, #0x270
  431620:	ldrh	w0, [x0, w1, uxtw #1]
  431624:	adr	x1, 431630 <ferror@plt+0x2e060>
  431628:	add	x0, x1, w0, sxth #2
  43162c:	br	x0
  431630:	sub	w1, w1, #0x11, lsl #12
  431634:	sub	w1, w1, #0x99
  431638:	cmp	w1, #0xc
  43163c:	b.hi	42f144 <ferror@plt+0x2bb74>  // b.pmore
  431640:	mov	x0, #0x1                   	// #1
  431644:	lsl	x1, x0, x1
  431648:	mov	x0, #0x1005                	// #4101
  43164c:	tst	x1, x0
  431650:	b.eq	42f144 <ferror@plt+0x2bb74>  // b.none
  431654:	b	42f384 <ferror@plt+0x2bdb4>
  431658:	tbnz	w25, #7, 42f144 <ferror@plt+0x2bb74>
  43165c:	tbz	w25, #6, 431674 <ferror@plt+0x2e0a4>
  431660:	ldr	w0, [x21, #8]
  431664:	cmp	w0, #0x0
  431668:	csinc	w0, w0, wzr, gt
  43166c:	str	w0, [x21, #8]
  431670:	b	42f144 <ferror@plt+0x2bb74>
  431674:	tbnz	w25, #5, 42f0f8 <ferror@plt+0x2bb28>
  431678:	b	42f384 <ferror@plt+0x2bdb4>
  43167c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431680:	mov	x4, x22
  431684:	sub	w3, w28, w22
  431688:	add	x2, x2, #0x528
  43168c:	mov	x0, x20
  431690:	mov	w1, #0x3                   	// #3
  431694:	bl	435b3c <ferror@plt+0x3256c>
  431698:	b	42ef18 <ferror@plt+0x2b948>
  43169c:	stp	x29, x30, [sp, #-336]!
  4316a0:	mov	x29, sp
  4316a4:	add	x8, sp, #0x118
  4316a8:	stp	x19, x20, [sp, #16]
  4316ac:	stp	x21, x22, [sp, #32]
  4316b0:	mov	x21, x0
  4316b4:	stp	x23, x24, [sp, #48]
  4316b8:	mov	x24, x1
  4316bc:	mov	w1, w4
  4316c0:	stp	x25, x26, [sp, #64]
  4316c4:	mov	x26, x3
  4316c8:	stp	x27, x28, [sp, #80]
  4316cc:	str	x5, [sp, #160]
  4316d0:	str	x2, [sp, #176]
  4316d4:	bl	42e494 <ferror@plt+0x2aec4>
  4316d8:	ldr	x0, [sp, #280]
  4316dc:	str	x0, [sp, #104]
  4316e0:	ldr	x0, [sp, #288]
  4316e4:	cmp	x6, #0x0
  4316e8:	str	x0, [sp, #136]
  4316ec:	ldr	w0, [sp, #296]
  4316f0:	str	w0, [sp, #168]
  4316f4:	cset	w0, ne  // ne = any
  4316f8:	str	w0, [sp, #124]
  4316fc:	ldr	x0, [sp, #160]
  431700:	ldr	w1, [sp, #124]
  431704:	cmp	x0, #0x0
  431708:	cset	w0, ne  // ne = any
  43170c:	cmp	w0, w1
  431710:	b.eq	43172c <ferror@plt+0x2e15c>  // b.none
  431714:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431718:	add	x2, x2, #0x5a3
  43171c:	mov	w1, #0x5fc                 	// #1532
  431720:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431724:	add	x0, x0, #0x485
  431728:	bl	403600 <ferror@plt+0x30>
  43172c:	mov	x23, x6
  431730:	cbz	x26, 431754 <ferror@plt+0x2e184>
  431734:	ldr	w0, [x24]
  431738:	mov	w1, #0x100                 	// #256
  43173c:	cmp	w0, #0x100
  431740:	csel	w0, w0, w1, cs  // cs = hs, nlast
  431744:	str	x0, [sp, #264]
  431748:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43174c:	str	x0, [sp, #256]
  431750:	str	xzr, [sp, #272]
  431754:	cmp	x26, #0x0
  431758:	add	x0, sp, #0x100
  43175c:	csel	x27, x0, xzr, ne  // ne = any
  431760:	ldrsw	x0, [sp, #168]
  431764:	mov	x1, #0x20                  	// #32
  431768:	add	x24, x24, #0x8
  43176c:	cmp	x0, #0x20
  431770:	mov	x20, #0x0                   	// #0
  431774:	csel	x0, x0, x1, ls  // ls = plast
  431778:	mov	x1, #0x1                   	// #1
  43177c:	str	xzr, [sp, #128]
  431780:	lsl	x0, x1, x0
  431784:	sub	x0, x0, #0x1
  431788:	str	x0, [sp, #152]
  43178c:	ldr	w0, [sp, #152]
  431790:	str	w0, [sp, #172]
  431794:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  431798:	add	x0, x0, #0xd40
  43179c:	str	x0, [sp, #192]
  4317a0:	ldr	x0, [sp, #128]
  4317a4:	ldr	x1, [sp, #176]
  4317a8:	cmp	x0, x1
  4317ac:	b.eq	431eec <ferror@plt+0x2e91c>  // b.none
  4317b0:	ldr	x0, [sp, #160]
  4317b4:	cbz	x0, 4317c4 <ferror@plt+0x2e1f4>
  4317b8:	ldr	x0, [sp, #128]
  4317bc:	ldr	x1, [sp, #160]
  4317c0:	add	x20, x1, x0, lsl #4
  4317c4:	ldr	x19, [x24]
  4317c8:	ldrb	w0, [x19]
  4317cc:	cmp	w0, #0x75
  4317d0:	b.ne	431848 <ferror@plt+0x2e278>  // b.any
  4317d4:	cbz	x20, 4317e0 <ferror@plt+0x2e210>
  4317d8:	mov	x0, x20
  4317dc:	bl	42ece8 <ferror@plt+0x2b718>
  4317e0:	ldrb	w0, [x19, #1]
  4317e4:	cmp	w0, #0x38
  4317e8:	b.eq	4317f4 <ferror@plt+0x2e224>  // b.none
  4317ec:	add	x19, x19, #0x1
  4317f0:	b	431804 <ferror@plt+0x2e234>
  4317f4:	add	x19, x19, #0x2
  4317f8:	cbz	x20, 431804 <ferror@plt+0x2e234>
  4317fc:	mov	x0, x20
  431800:	bl	42ece8 <ferror@plt+0x2b718>
  431804:	ldrb	w0, [x19]
  431808:	cmp	w0, #0x52
  43180c:	b.ne	43191c <ferror@plt+0x2e34c>  // b.any
  431810:	add	x19, x19, #0x2
  431814:	cbz	x20, 431828 <ferror@plt+0x2e258>
  431818:	mov	x0, x20
  43181c:	bl	42ece8 <ferror@plt+0x2b718>
  431820:	mov	x0, x20
  431824:	bl	42ece8 <ferror@plt+0x2b718>
  431828:	mov	x22, x19
  43182c:	ldrb	w0, [x22], #1
  431830:	cmp	w0, #0x28
  431834:	b.eq	43185c <ferror@plt+0x2e28c>  // b.none
  431838:	cbz	x20, 43182c <ferror@plt+0x2e25c>
  43183c:	mov	x0, x20
  431840:	bl	42ece8 <ferror@plt+0x2b718>
  431844:	b	43182c <ferror@plt+0x2e25c>
  431848:	cmp	w0, #0x4c
  43184c:	b.eq	4317ec <ferror@plt+0x2e21c>  // b.none
  431850:	cmp	w0, #0x55
  431854:	b.ne	431804 <ferror@plt+0x2e234>  // b.any
  431858:	b	4317ec <ferror@plt+0x2e21c>
  43185c:	cbz	x20, 431868 <ferror@plt+0x2e298>
  431860:	mov	x0, x20
  431864:	bl	42ece8 <ferror@plt+0x2b718>
  431868:	ldr	x4, [x24]
  43186c:	sub	x19, x22, x19
  431870:	ldur	w0, [x24, #-8]
  431874:	add	x28, x4, x0
  431878:	add	x0, x19, #0x1
  43187c:	add	x0, x22, x0
  431880:	cmp	x28, x0
  431884:	b.cc	431890 <ferror@plt+0x2e2c0>  // b.lo, b.ul, b.last
  431888:	mvn	x19, x19
  43188c:	add	x28, x28, x19
  431890:	cbnz	x26, 4318ac <ferror@plt+0x2e2dc>
  431894:	cbnz	x20, 4318e4 <ferror@plt+0x2e314>
  431898:	ldr	x0, [sp, #128]
  43189c:	add	x24, x24, #0x10
  4318a0:	add	x0, x0, #0x1
  4318a4:	str	x0, [sp, #128]
  4318a8:	b	4317a0 <ferror@plt+0x2e1d0>
  4318ac:	ldr	x4, [sp, #104]
  4318b0:	add	x3, sp, #0x100
  4318b4:	ldr	x0, [sp, #136]
  4318b8:	sub	x2, x28, x22
  4318bc:	mov	x1, x22
  4318c0:	blr	x4
  4318c4:	tst	w0, #0xff
  4318c8:	b.ne	431894 <ferror@plt+0x2e2c4>  // b.any
  4318cc:	mov	x0, x21
  4318d0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4318d4:	mov	w1, #0x3                   	// #3
  4318d8:	add	x2, x2, #0x30e
  4318dc:	bl	435fe0 <ferror@plt+0x32a10>
  4318e0:	b	431954 <ferror@plt+0x2e384>
  4318e4:	ldr	x1, [sp, #104]
  4318e8:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  4318ec:	add	x0, x0, #0x278
  4318f0:	cmp	x1, x0
  4318f4:	b.eq	431908 <ferror@plt+0x2e338>  // b.none
  4318f8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4318fc:	mov	w1, #0x641                 	// #1601
  431900:	add	x2, x2, #0x5a3
  431904:	b	431720 <ferror@plt+0x2e150>
  431908:	mov	x2, x20
  43190c:	sub	w1, w28, w22
  431910:	mov	x0, x23
  431914:	bl	42ed10 <ferror@plt+0x2b740>
  431918:	b	431898 <ferror@plt+0x2e2c8>
  43191c:	cmp	w0, #0x22
  431920:	b.eq	431980 <ferror@plt+0x2e3b0>  // b.none
  431924:	cmp	w0, #0x27
  431928:	b.eq	431980 <ferror@plt+0x2e3b0>  // b.none
  43192c:	cbnz	x23, 431940 <ferror@plt+0x2e370>
  431930:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431934:	mov	w1, #0x64d                 	// #1613
  431938:	add	x2, x2, #0x5a3
  43193c:	b	431720 <ferror@plt+0x2e150>
  431940:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431944:	mov	x0, x21
  431948:	add	x2, x2, #0x5ba
  43194c:	mov	w1, #0x3                   	// #3
  431950:	bl	435b3c <ferror@plt+0x3256c>
  431954:	cbz	x26, 431960 <ferror@plt+0x2e390>
  431958:	ldr	x0, [sp, #256]
  43195c:	bl	4032a0 <free@plt>
  431960:	mov	w0, #0x0                   	// #0
  431964:	ldp	x19, x20, [sp, #16]
  431968:	ldp	x21, x22, [sp, #32]
  43196c:	ldp	x23, x24, [sp, #48]
  431970:	ldp	x25, x26, [sp, #64]
  431974:	ldp	x27, x28, [sp, #80]
  431978:	ldp	x29, x30, [sp], #336
  43197c:	ret
  431980:	add	x19, x19, #0x1
  431984:	cbz	x20, 431990 <ferror@plt+0x2e3c0>
  431988:	mov	x0, x20
  43198c:	bl	42ece8 <ferror@plt+0x2b718>
  431990:	ldur	w0, [x24, #-8]
  431994:	ldr	x1, [x24]
  431998:	sub	x0, x0, #0x1
  43199c:	add	x0, x1, x0
  4319a0:	str	x0, [sp, #112]
  4319a4:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  4319a8:	add	x0, x0, #0x278
  4319ac:	str	x0, [sp, #184]
  4319b0:	mov	x22, x19
  4319b4:	ldr	x0, [sp, #112]
  4319b8:	cmp	x22, x0
  4319bc:	b.cs	431fe0 <ferror@plt+0x2ea10>  // b.hs, b.nlast
  4319c0:	ldrb	w0, [x22]
  4319c4:	cmp	w0, #0x5c
  4319c8:	b.eq	431f40 <ferror@plt+0x2e970>  // b.none
  4319cc:	add	x22, x22, #0x1
  4319d0:	b	4319b4 <ferror@plt+0x2e3e4>
  4319d4:	ldr	x4, [sp, #104]
  4319d8:	add	x3, sp, #0x100
  4319dc:	ldr	x0, [sp, #136]
  4319e0:	sub	x2, x22, x19
  4319e4:	mov	x1, x19
  4319e8:	blr	x4
  4319ec:	tst	w0, #0xff
  4319f0:	b.ne	431f4c <ferror@plt+0x2e97c>  // b.any
  4319f4:	b	4318cc <ferror@plt+0x2e2fc>
  4319f8:	ldr	x0, [sp, #104]
  4319fc:	ldr	x1, [sp, #184]
  431a00:	cmp	x0, x1
  431a04:	b.eq	431a18 <ferror@plt+0x2e448>  // b.none
  431a08:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431a0c:	mov	w1, #0x66c                 	// #1644
  431a10:	add	x2, x2, #0x5a3
  431a14:	b	431720 <ferror@plt+0x2e150>
  431a18:	mov	x2, x20
  431a1c:	sub	w1, w22, w19
  431a20:	mov	x0, x23
  431a24:	bl	42ed10 <ferror@plt+0x2b740>
  431a28:	b	431f50 <ferror@plt+0x2e980>
  431a2c:	sub	w1, w3, #0x55
  431a30:	cmp	w1, #0x26
  431a34:	b.hi	431fb0 <ferror@plt+0x2e9e0>  // b.pmore
  431a38:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431a3c:	add	x5, x22, #0x2
  431a40:	add	x0, x0, #0x28c
  431a44:	ldrh	w0, [x0, w1, uxtw #1]
  431a48:	adr	x1, 431a54 <ferror@plt+0x2e484>
  431a4c:	add	x0, x1, w0, sxth #2
  431a50:	br	x0
  431a54:	cmp	w1, #0x6
  431a58:	b.hi	431fb0 <ferror@plt+0x2e9e0>  // b.pmore
  431a5c:	adrp	x0, 4c4000 <_obstack_memory_used@@Base+0x67c10>
  431a60:	add	x0, x0, #0x2dc
  431a64:	ldrh	w0, [x0, w1, uxtw #1]
  431a68:	adr	x1, 431a74 <ferror@plt+0x2e4a4>
  431a6c:	add	x0, x1, w0, sxth #2
  431a70:	br	x0
  431a74:	cmp	w3, #0x3f
  431a78:	b.eq	431e04 <ferror@plt+0x2e834>  // b.none
  431a7c:	cmp	w3, #0x45
  431a80:	b.ne	431fb0 <ferror@plt+0x2e9e0>  // b.any
  431a84:	ldrb	w0, [x21, #1154]
  431a88:	cbz	w0, 431aa0 <ferror@plt+0x2e4d0>
  431a8c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431a90:	mov	x0, x21
  431a94:	add	x2, x2, #0x6e8
  431a98:	mov	w1, #0x2                   	// #2
  431a9c:	bl	435b3c <ferror@plt+0x3256c>
  431aa0:	mov	w0, #0x1b                  	// #27
  431aa4:	b	431e68 <ferror@plt+0x2e898>
  431aa8:	ldr	x0, [sp, #144]
  431aac:	cmp	x20, #0x0
  431ab0:	ldr	w1, [sp, #124]
  431ab4:	add	x22, sp, #0xd8
  431ab8:	str	wzr, [sp, #304]
  431abc:	bfi	x25, x0, #32, #32
  431ac0:	mov	x0, #0x6                   	// #6
  431ac4:	stp	x19, x25, [sp, #224]
  431ac8:	stp	x22, x0, [sp, #240]
  431acc:	cset	w0, ne  // ne = any
  431ad0:	cmp	w0, w1
  431ad4:	strb	wzr, [sp, #308]
  431ad8:	str	wzr, [sp, #312]
  431adc:	b.eq	431af0 <ferror@plt+0x2e520>  // b.none
  431ae0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431ae4:	mov	w1, #0x48d                 	// #1165
  431ae8:	add	x2, x2, #0x5cd
  431aec:	b	431720 <ferror@plt+0x2e150>
  431af0:	str	x5, [sp, #224]
  431af4:	cbz	x20, 431b08 <ferror@plt+0x2e538>
  431af8:	mov	x0, x20
  431afc:	bl	42ece8 <ferror@plt+0x2b718>
  431b00:	lsr	x0, x0, #32
  431b04:	str	w0, [sp, #236]
  431b08:	ldr	x2, [sp, #112]
  431b0c:	mov	x7, x20
  431b10:	add	x6, sp, #0xe8
  431b14:	add	x5, sp, #0xd4
  431b18:	add	x4, sp, #0x130
  431b1c:	add	x1, sp, #0xe0
  431b20:	mov	w3, #0x0                   	// #0
  431b24:	mov	x0, x21
  431b28:	bl	42ed64 <ferror@plt+0x2b794>
  431b2c:	ldr	w0, [sp, #212]
  431b30:	add	x2, sp, #0xf8
  431b34:	add	x1, sp, #0xf0
  431b38:	bl	42db64 <ferror@plt+0x2a594>
  431b3c:	mov	w19, w0
  431b40:	cbz	w0, 431b68 <ferror@plt+0x2e598>
  431b44:	bl	4034e0 <__errno_location@plt>
  431b48:	str	w19, [x0]
  431b4c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431b50:	mov	x0, x21
  431b54:	add	x2, x2, #0x36e
  431b58:	mov	w1, #0x3                   	// #3
  431b5c:	bl	435fe0 <ferror@plt+0x32a10>
  431b60:	ldr	x19, [sp, #224]
  431b64:	b	4319b0 <ferror@plt+0x2e3e0>
  431b68:	cbz	x27, 431ba8 <ferror@plt+0x2e5d8>
  431b6c:	ldr	x0, [sp, #248]
  431b70:	mov	x2, #0x6                   	// #6
  431b74:	ldr	x4, [sp, #104]
  431b78:	sub	x2, x2, x0
  431b7c:	ldr	x0, [sp, #136]
  431b80:	mov	x3, x27
  431b84:	mov	x1, x22
  431b88:	blr	x4
  431b8c:	tst	w0, #0xff
  431b90:	b.ne	431ba8 <ferror@plt+0x2e5d8>  // b.any
  431b94:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431b98:	mov	x0, x21
  431b9c:	add	x2, x2, #0x5d9
  431ba0:	mov	w1, #0x3                   	// #3
  431ba4:	bl	435fe0 <ferror@plt+0x32a10>
  431ba8:	cbz	x20, 431b60 <ferror@plt+0x2e590>
  431bac:	ldr	x0, [sp, #248]
  431bb0:	mov	w22, #0x6                   	// #6
  431bb4:	sub	w22, w22, w0
  431bb8:	cmp	w22, w19
  431bbc:	b.le	431b60 <ferror@plt+0x2e590>
  431bc0:	ldr	x1, [sp, #232]
  431bc4:	mov	x0, x23
  431bc8:	add	w19, w19, #0x1
  431bcc:	bl	42e948 <ferror@plt+0x2b378>
  431bd0:	b	431bb8 <ferror@plt+0x2e5e8>
  431bd4:	ldr	x0, [sp, #144]
  431bd8:	cmp	x20, #0x0
  431bdc:	ldr	w1, [sp, #124]
  431be0:	bfi	x25, x0, #32, #32
  431be4:	cset	w0, ne  // ne = any
  431be8:	mov	x28, x25
  431bec:	cmp	w0, w1
  431bf0:	b.eq	431c04 <ferror@plt+0x2e634>  // b.none
  431bf4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431bf8:	mov	w1, #0x4f9                 	// #1273
  431bfc:	add	x2, x2, #0x603
  431c00:	b	431720 <ferror@plt+0x2e150>
  431c04:	ldrb	w0, [x21, #1138]
  431c08:	cbz	w0, 431c28 <ferror@plt+0x2e658>
  431c0c:	mov	x0, x21
  431c10:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431c14:	mov	w1, #0x6                   	// #6
  431c18:	add	x2, x2, #0x60f
  431c1c:	str	x5, [sp, #200]
  431c20:	bl	435ba8 <ferror@plt+0x325d8>
  431c24:	ldr	x5, [sp, #200]
  431c28:	mov	x19, x5
  431c2c:	cbz	x20, 431c40 <ferror@plt+0x2e670>
  431c30:	mov	x0, x20
  431c34:	bl	42ece8 <ferror@plt+0x2b718>
  431c38:	lsr	x0, x0, #32
  431c3c:	bfi	x28, x0, #32, #32
  431c40:	mov	w0, #0x0                   	// #0
  431c44:	mov	w3, #0x0                   	// #0
  431c48:	mov	w22, #0x0                   	// #0
  431c4c:	ldr	x1, [sp, #112]
  431c50:	cmp	x1, x19
  431c54:	b.ls	431c98 <ferror@plt+0x2e6c8>  // b.plast
  431c58:	ldrb	w1, [x19]
  431c5c:	ldr	x2, [sp, #192]
  431c60:	ldrb	w5, [x2, x1]
  431c64:	cmp	w5, #0x63
  431c68:	b.eq	431c98 <ferror@plt+0x2e6c8>  // b.none
  431c6c:	add	x19, x19, #0x1
  431c70:	cbz	x20, 431c84 <ferror@plt+0x2e6b4>
  431c74:	mov	x0, x20
  431c78:	bl	42ece8 <ferror@plt+0x2b718>
  431c7c:	lsr	x0, x0, #32
  431c80:	bfi	x28, x0, #32, #32
  431c84:	and	w0, w22, #0xf0000000
  431c88:	add	w22, w5, w22, lsl #4
  431c8c:	orr	w3, w3, w0
  431c90:	mov	w0, #0x1                   	// #1
  431c94:	b	431c4c <ferror@plt+0x2e67c>
  431c98:	cbnz	w0, 431cb4 <ferror@plt+0x2e6e4>
  431c9c:	mov	x0, x21
  431ca0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431ca4:	mov	w1, #0x3                   	// #3
  431ca8:	add	x2, x2, #0x641
  431cac:	bl	435b3c <ferror@plt+0x3256c>
  431cb0:	b	4319b0 <ferror@plt+0x2e3e0>
  431cb4:	ldr	w0, [sp, #152]
  431cb8:	and	w0, w22, w0
  431cbc:	cmp	x0, w22, uxtw
  431cc0:	cset	w0, ne  // ne = any
  431cc4:	orr	w0, w0, w3
  431cc8:	cbz	w0, 431ce8 <ferror@plt+0x2e718>
  431ccc:	mov	x0, x21
  431cd0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431cd4:	mov	w1, #0x2                   	// #2
  431cd8:	add	x2, x2, #0x666
  431cdc:	bl	435b3c <ferror@plt+0x3256c>
  431ce0:	ldr	w0, [sp, #172]
  431ce4:	and	w22, w22, w0
  431ce8:	cbz	x27, 431d00 <ferror@plt+0x2e730>
  431cec:	ldr	w3, [sp, #168]
  431cf0:	mov	x2, x27
  431cf4:	mov	w1, w22
  431cf8:	mov	x0, x21
  431cfc:	bl	42e4f0 <ferror@plt+0x2af20>
  431d00:	cbz	x23, 4319b0 <ferror@plt+0x2e3e0>
  431d04:	mov	x1, x28
  431d08:	mov	x0, x23
  431d0c:	bl	42e948 <ferror@plt+0x2b378>
  431d10:	b	4319b0 <ferror@plt+0x2e3e0>
  431d14:	ldr	x0, [sp, #144]
  431d18:	cmp	x20, #0x0
  431d1c:	ldr	w1, [sp, #124]
  431d20:	bfi	x25, x0, #32, #32
  431d24:	cset	w0, ne  // ne = any
  431d28:	mov	x4, x25
  431d2c:	cmp	w0, w1
  431d30:	b.ne	431d8c <ferror@plt+0x2e7bc>  // b.any
  431d34:	add	x5, x22, #0x4
  431d38:	mov	w22, #0x0                   	// #0
  431d3c:	ldr	x0, [sp, #112]
  431d40:	cmp	x0, x19
  431d44:	b.ls	431d9c <ferror@plt+0x2e7cc>  // b.plast
  431d48:	cmp	x5, x19
  431d4c:	b.eq	431d9c <ferror@plt+0x2e7cc>  // b.none
  431d50:	ldrb	w3, [x19]
  431d54:	sub	w0, w3, #0x30
  431d58:	cmp	w0, #0x7
  431d5c:	b.hi	431d9c <ferror@plt+0x2e7cc>  // b.pmore
  431d60:	add	x19, x19, #0x1
  431d64:	cbz	x20, 431d80 <ferror@plt+0x2e7b0>
  431d68:	mov	x0, x20
  431d6c:	str	x4, [sp, #200]
  431d70:	bl	42ece8 <ferror@plt+0x2b718>
  431d74:	lsr	x0, x0, #32
  431d78:	ldr	x4, [sp, #200]
  431d7c:	bfi	x4, x0, #32, #32
  431d80:	add	w22, w3, w22, lsl #3
  431d84:	sub	w22, w22, #0x30
  431d88:	b	431d3c <ferror@plt+0x2e76c>
  431d8c:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431d90:	mov	w1, #0x540                 	// #1344
  431d94:	add	x2, x2, #0x687
  431d98:	b	431720 <ferror@plt+0x2e150>
  431d9c:	ldr	w0, [sp, #152]
  431da0:	and	w0, w22, w0
  431da4:	cmp	x0, w22, uxtw
  431da8:	b.eq	431dd0 <ferror@plt+0x2e800>  // b.none
  431dac:	mov	x0, x21
  431db0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431db4:	mov	w1, #0x2                   	// #2
  431db8:	add	x2, x2, #0x693
  431dbc:	str	x4, [sp, #200]
  431dc0:	bl	435b3c <ferror@plt+0x3256c>
  431dc4:	ldr	w0, [sp, #172]
  431dc8:	ldr	x4, [sp, #200]
  431dcc:	and	w22, w22, w0
  431dd0:	cbz	x27, 431df0 <ferror@plt+0x2e820>
  431dd4:	ldr	w3, [sp, #168]
  431dd8:	mov	x2, x27
  431ddc:	mov	w1, w22
  431de0:	mov	x0, x21
  431de4:	str	x4, [sp, #200]
  431de8:	bl	42e4f0 <ferror@plt+0x2af20>
  431dec:	ldr	x4, [sp, #200]
  431df0:	cbz	x23, 4319b0 <ferror@plt+0x2e3e0>
  431df4:	mov	x1, x4
  431df8:	b	431d08 <ferror@plt+0x2e738>
  431dfc:	ldrb	w0, [x21, #1154]
  431e00:	cbnz	w0, 431fb0 <ferror@plt+0x2e9e0>
  431e04:	cbz	x27, 431e3c <ferror@plt+0x2e86c>
  431e08:	ldr	x4, [sp, #104]
  431e0c:	mov	x3, x27
  431e10:	ldr	x0, [sp, #136]
  431e14:	add	x1, sp, #0xd3
  431e18:	mov	x2, #0x1                   	// #1
  431e1c:	blr	x4
  431e20:	tst	w0, #0xff
  431e24:	b.ne	431e3c <ferror@plt+0x2e86c>  // b.any
  431e28:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431e2c:	mov	x0, x21
  431e30:	add	x2, x2, #0x74e
  431e34:	mov	w1, #0x3                   	// #3
  431e38:	bl	435fe0 <ferror@plt+0x32a10>
  431e3c:	cbz	x20, 431e5c <ferror@plt+0x2e88c>
  431e40:	mov	x0, x20
  431e44:	bl	42ece8 <ferror@plt+0x2b718>
  431e48:	lsr	x0, x0, #32
  431e4c:	bfi	x25, x0, #32, #32
  431e50:	mov	x0, x23
  431e54:	mov	x1, x25
  431e58:	bl	42e948 <ferror@plt+0x2b378>
  431e5c:	add	x19, x22, #0x2
  431e60:	b	4319b0 <ferror@plt+0x2e3e0>
  431e64:	mov	w0, #0x8                   	// #8
  431e68:	strb	w0, [sp, #211]
  431e6c:	b	431e04 <ferror@plt+0x2e834>
  431e70:	mov	w0, #0xc                   	// #12
  431e74:	b	431e68 <ferror@plt+0x2e898>
  431e78:	mov	w0, #0xa                   	// #10
  431e7c:	b	431e68 <ferror@plt+0x2e898>
  431e80:	mov	w0, #0xd                   	// #13
  431e84:	b	431e68 <ferror@plt+0x2e898>
  431e88:	mov	w0, #0x9                   	// #9
  431e8c:	b	431e68 <ferror@plt+0x2e898>
  431e90:	mov	w0, #0xb                   	// #11
  431e94:	b	431e68 <ferror@plt+0x2e898>
  431e98:	ldrb	w0, [x21, #1138]
  431e9c:	cbz	w0, 431eb4 <ferror@plt+0x2e8e4>
  431ea0:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431ea4:	mov	x0, x21
  431ea8:	add	x2, x2, #0x6b6
  431eac:	mov	w1, #0x6                   	// #6
  431eb0:	bl	435ba8 <ferror@plt+0x325d8>
  431eb4:	mov	w0, #0x7                   	// #7
  431eb8:	b	431e68 <ferror@plt+0x2e898>
  431ebc:	mov	w2, w3
  431ec0:	add	x0, sp, #0x130
  431ec4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  431ec8:	add	x1, x1, #0x8c1
  431ecc:	bl	402e00 <sprintf@plt>
  431ed0:	add	x3, sp, #0x130
  431ed4:	mov	x0, x21
  431ed8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431edc:	mov	w1, #0x2                   	// #2
  431ee0:	add	x2, x2, #0x72f
  431ee4:	bl	435b3c <ferror@plt+0x3256c>
  431ee8:	b	431e04 <ferror@plt+0x2e834>
  431eec:	cbz	x26, 431f20 <ferror@plt+0x2e950>
  431ef0:	ldr	w3, [sp, #168]
  431ef4:	add	x2, sp, #0x100
  431ef8:	mov	x0, x21
  431efc:	mov	w1, #0x0                   	// #0
  431f00:	bl	42e4f0 <ferror@plt+0x2af20>
  431f04:	ldr	x0, [sp, #256]
  431f08:	ldr	x1, [sp, #272]
  431f0c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  431f10:	str	x0, [x26, #8]
  431f14:	str	x0, [sp, #256]
  431f18:	ldr	x0, [sp, #272]
  431f1c:	str	w0, [x26]
  431f20:	cbz	x20, 431f38 <ferror@plt+0x2e968>
  431f24:	mov	x0, x20
  431f28:	bl	42ece8 <ferror@plt+0x2b718>
  431f2c:	mov	x1, x0
  431f30:	mov	x0, x23
  431f34:	bl	42e948 <ferror@plt+0x2b378>
  431f38:	mov	w0, #0x1                   	// #1
  431f3c:	b	431964 <ferror@plt+0x2e394>
  431f40:	cmp	x19, x22
  431f44:	b.cs	431f5c <ferror@plt+0x2e98c>  // b.hs, b.nlast
  431f48:	cbnz	x26, 4319d4 <ferror@plt+0x2e404>
  431f4c:	cbnz	x20, 4319f8 <ferror@plt+0x2e428>
  431f50:	ldr	x0, [sp, #112]
  431f54:	cmp	x22, x0
  431f58:	b.cs	431898 <ferror@plt+0x2e2c8>  // b.hs, b.nlast
  431f5c:	add	x19, x22, #0x1
  431f60:	cbz	x20, 431f78 <ferror@plt+0x2e9a8>
  431f64:	mov	x0, x20
  431f68:	bl	42ece8 <ferror@plt+0x2b718>
  431f6c:	mov	x25, x0
  431f70:	lsr	x0, x0, #32
  431f74:	str	x0, [sp, #144]
  431f78:	ldrb	w3, [x22, #1]
  431f7c:	strb	w3, [sp, #211]
  431f80:	cmp	w3, #0x7b
  431f84:	b.hi	431fb0 <ferror@plt+0x2e9e0>  // b.pmore
  431f88:	cmp	w3, #0x54
  431f8c:	b.hi	431a2c <ferror@plt+0x2e45c>  // b.pmore
  431f90:	cmp	w3, #0x37
  431f94:	b.hi	431a74 <ferror@plt+0x2e4a4>  // b.pmore
  431f98:	cmp	w3, #0x2f
  431f9c:	b.hi	431d14 <ferror@plt+0x2e744>  // b.pmore
  431fa0:	sub	w1, w3, #0x22
  431fa4:	and	w0, w1, #0xff
  431fa8:	cmp	w0, #0x6
  431fac:	b.ls	431a54 <ferror@plt+0x2e484>  // b.plast
  431fb0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  431fb4:	add	x0, x0, #0x228
  431fb8:	mov	w1, #0xac                  	// #172
  431fbc:	ldrh	w0, [x0, w3, sxtw #1]
  431fc0:	tst	w1, w0
  431fc4:	b.eq	431ebc <ferror@plt+0x2e8ec>  // b.none
  431fc8:	mov	x0, x21
  431fcc:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  431fd0:	mov	w1, #0x2                   	// #2
  431fd4:	add	x2, x2, #0x710
  431fd8:	bl	435b3c <ferror@plt+0x3256c>
  431fdc:	b	431e04 <ferror@plt+0x2e834>
  431fe0:	cmp	x19, x22
  431fe4:	b.cc	431f48 <ferror@plt+0x2e978>  // b.lo, b.ul, b.last
  431fe8:	b	431898 <ferror@plt+0x2e2c8>
  431fec:	mov	x6, #0x0                   	// #0
  431ff0:	mov	x5, #0x0                   	// #0
  431ff4:	b	43169c <ferror@plt+0x2e0cc>
  431ff8:	stp	x29, x30, [sp, #-64]!
  431ffc:	mov	w4, #0x3e                  	// #62
  432000:	mov	x29, sp
  432004:	ldr	x5, [x0, #536]
  432008:	str	x19, [sp, #16]
  43200c:	add	x19, x0, #0x208
  432010:	str	x5, [sp, #56]
  432014:	adrp	x5, 42e000 <ferror@plt+0x2aa30>
  432018:	add	x5, x5, #0x278
  43201c:	ldp	x6, x7, [x19]
  432020:	str	x5, [x0, #520]
  432024:	mov	x5, #0xffffffffffffffff    	// #-1
  432028:	str	x5, [x0, #528]
  43202c:	ldr	x5, [x0, #1216]
  432030:	str	w5, [x0, #536]
  432034:	stp	x6, x7, [sp, #40]
  432038:	bl	431fec <ferror@plt+0x2ea1c>
  43203c:	ldp	x2, x3, [sp, #40]
  432040:	stp	x2, x3, [x19]
  432044:	ldr	x1, [sp, #56]
  432048:	str	x1, [x19, #16]
  43204c:	ldr	x19, [sp, #16]
  432050:	ldp	x29, x30, [sp], #64
  432054:	ret
  432058:	stp	x29, x30, [sp, #-128]!
  43205c:	mov	x29, sp
  432060:	ldrb	w4, [x1, #4]
  432064:	stp	x21, x22, [sp, #32]
  432068:	mov	x22, x1
  43206c:	and	w1, w4, #0xfffffffb
  432070:	cmp	w1, #0x38
  432074:	stp	x23, x24, [sp, #48]
  432078:	mov	x23, x2
  43207c:	cset	w2, ne  // ne = any
  432080:	cmp	w4, #0x3c
  432084:	stp	x19, x20, [sp, #16]
  432088:	and	w19, w1, #0xff
  43208c:	cset	w1, eq  // eq = none
  432090:	mov	x24, x3
  432094:	add	w2, w2, #0x2
  432098:	ldr	w3, [x22, #8]
  43209c:	add	w1, w2, w1, lsl #1
  4320a0:	stp	x25, x26, [sp, #64]
  4320a4:	str	wzr, [sp, #88]
  4320a8:	cmp	x3, w1, sxtw
  4320ac:	str	xzr, [sp, #96]
  4320b0:	b.ne	4320ec <ferror@plt+0x2eb1c>  // b.any
  4320b4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4320b8:	mov	w1, #0x3                   	// #3
  4320bc:	add	x2, x2, #0x784
  4320c0:	bl	435b3c <ferror@plt+0x3256c>
  4320c4:	str	wzr, [x23]
  4320c8:	mov	w19, #0x0                   	// #0
  4320cc:	str	wzr, [x24]
  4320d0:	mov	w0, w19
  4320d4:	ldp	x19, x20, [sp, #16]
  4320d8:	ldp	x21, x22, [sp, #32]
  4320dc:	ldp	x23, x24, [sp, #48]
  4320e0:	ldp	x25, x26, [sp, #64]
  4320e4:	ldp	x29, x30, [sp], #128
  4320e8:	ret
  4320ec:	mov	x20, x0
  4320f0:	add	x3, sp, #0x58
  4320f4:	add	x1, x22, #0x8
  4320f8:	mov	x2, #0x1                   	// #1
  4320fc:	bl	431fec <ferror@plt+0x2ea1c>
  432100:	tst	w0, #0xff
  432104:	b.eq	4320c4 <ferror@plt+0x2eaf4>  // b.none
  432108:	ldr	w25, [sp, #88]
  43210c:	cmp	w19, #0x38
  432110:	ldr	x4, [sp, #96]
  432114:	b.eq	43223c <ferror@plt+0x2ec6c>  // b.none
  432118:	ldrb	w6, [x20, #1242]
  43211c:	mov	x0, x20
  432120:	ldrb	w21, [x22, #4]
  432124:	add	x8, sp, #0x68
  432128:	mov	w25, w25
  43212c:	mov	w19, #0x0                   	// #0
  432130:	mov	w1, w21
  432134:	bl	42e494 <ferror@plt+0x2aec4>
  432138:	ldrsw	x26, [sp, #120]
  43213c:	ldr	x3, [x20, #1216]
  432140:	mov	x1, #0x20                  	// #32
  432144:	cmp	x3, #0x20
  432148:	csel	x0, x3, x1, ls  // ls = plast
  43214c:	mov	x1, #0x1                   	// #1
  432150:	lsl	x1, x1, x0
  432154:	sub	x1, x1, #0x1
  432158:	udiv	x0, x26, x3
  43215c:	sub	x2, x25, x0, lsl #1
  432160:	lsl	x7, x0, #1
  432164:	add	x5, x4, x2
  432168:	add	x0, x0, x2
  43216c:	add	x0, x4, x0
  432170:	mov	x4, x5
  432174:	cmp	x0, x5
  432178:	b.eq	4321a4 <ferror@plt+0x2ebd4>  // b.none
  43217c:	cbz	w6, 43219c <ferror@plt+0x2ebcc>
  432180:	ldrb	w2, [x4]
  432184:	and	w2, w2, w1
  432188:	lsl	w19, w19, w3
  43218c:	add	x4, x4, #0x1
  432190:	orr	w19, w2, w19
  432194:	sub	x0, x0, #0x1
  432198:	b	432174 <ferror@plt+0x2eba4>
  43219c:	ldurb	w2, [x0, #-1]
  4321a0:	b	432184 <ferror@plt+0x2ebb4>
  4321a4:	cmp	x25, x7
  4321a8:	b.ls	4321c0 <ferror@plt+0x2ebf0>  // b.plast
  4321ac:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4321b0:	mov	x0, x20
  4321b4:	add	x2, x2, #0x79d
  4321b8:	mov	w1, #0x0                   	// #0
  4321bc:	bl	435b3c <ferror@plt+0x3256c>
  4321c0:	sub	w21, w21, #0x3a
  4321c4:	cmp	x26, #0x1f
  4321c8:	b.hi	4321fc <ferror@plt+0x2ec2c>  // b.pmore
  4321cc:	mov	x1, #0x1                   	// #1
  4321d0:	cmp	w21, #0x1
  4321d4:	lsl	x0, x1, x26
  4321d8:	b.ls	4321f4 <ferror@plt+0x2ec24>  // b.plast
  4321dc:	ldrb	w2, [x20, #1241]
  4321e0:	cbnz	w2, 4321f4 <ferror@plt+0x2ec24>
  4321e4:	sub	w26, w26, #0x1
  4321e8:	lsl	w26, w1, w26
  4321ec:	tst	w26, w19
  4321f0:	b.ne	43220c <ferror@plt+0x2ec3c>  // b.any
  4321f4:	sub	x0, x0, #0x1
  4321f8:	and	w19, w19, w0
  4321fc:	cmp	w21, #0x1
  432200:	b.hi	432214 <ferror@plt+0x2ec44>  // b.pmore
  432204:	mov	w0, #0x1                   	// #1
  432208:	b	432218 <ferror@plt+0x2ec48>
  43220c:	neg	x0, x0
  432210:	orr	w19, w19, w0
  432214:	ldrb	w0, [x20, #1241]
  432218:	str	w0, [x24]
  43221c:	mov	w0, #0x1                   	// #1
  432220:	str	w0, [x23]
  432224:	ldr	x1, [x22, #16]
  432228:	ldr	x0, [sp, #96]
  43222c:	cmp	x0, x1
  432230:	b.eq	4320d0 <ferror@plt+0x2eb00>  // b.none
  432234:	bl	4032a0 <free@plt>
  432238:	b	4320d0 <ferror@plt+0x2eb00>
  43223c:	ldr	x21, [x20, #1216]
  432240:	mov	x1, #0x20                  	// #32
  432244:	ldr	x26, [x20, #1224]
  432248:	cmp	x21, #0x20
  43224c:	csel	x0, x21, x1, ls  // ls = plast
  432250:	mov	x1, #0x1                   	// #1
  432254:	sub	w25, w25, #0x1
  432258:	mov	w19, #0x0                   	// #0
  43225c:	udiv	x26, x26, x21
  432260:	lsl	x1, x1, x0
  432264:	sub	x1, x1, #0x1
  432268:	mov	x2, #0x0                   	// #0
  43226c:	cmp	x25, x2
  432270:	b.ls	432298 <ferror@plt+0x2ecc8>  // b.plast
  432274:	ldrb	w0, [x4, x2]
  432278:	cmp	x21, #0x1f
  43227c:	and	w0, w0, w1
  432280:	b.hi	43228c <ferror@plt+0x2ecbc>  // b.pmore
  432284:	lsl	w19, w19, w21
  432288:	orr	w0, w0, w19
  43228c:	add	x2, x2, #0x1
  432290:	mov	w19, w0
  432294:	b	43226c <ferror@plt+0x2ec9c>
  432298:	cmp	x26, x25
  43229c:	b.cs	4322f8 <ferror@plt+0x2ed28>  // b.hs, b.nlast
  4322a0:	mov	x0, x20
  4322a4:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4322a8:	mov	w1, #0x0                   	// #0
  4322ac:	add	x2, x2, #0x79d
  4322b0:	bl	435b3c <ferror@plt+0x3256c>
  4322b4:	cmp	x26, #0x1
  4322b8:	b.hi	432320 <ferror@plt+0x2ed50>  // b.pmore
  4322bc:	ldrb	w2, [x20, #1240]
  4322c0:	cmp	x21, #0x1f
  4322c4:	b.hi	4322ec <ferror@plt+0x2ed1c>  // b.pmore
  4322c8:	mov	w1, #0x1                   	// #1
  4322cc:	lsl	w0, w1, w21
  4322d0:	cbnz	w2, 4322e4 <ferror@plt+0x2ed14>
  4322d4:	sub	w21, w21, #0x1
  4322d8:	lsl	w21, w1, w21
  4322dc:	tst	w21, w19
  4322e0:	b.ne	432334 <ferror@plt+0x2ed64>  // b.any
  4322e4:	sub	w0, w0, #0x1
  4322e8:	and	w19, w19, w0
  4322ec:	str	w26, [x23]
  4322f0:	str	w2, [x24]
  4322f4:	b	432224 <ferror@plt+0x2ec54>
  4322f8:	cmp	x25, #0x1
  4322fc:	b.ls	43232c <ferror@plt+0x2ed5c>  // b.plast
  432300:	ldrb	w0, [x20, #1137]
  432304:	cbz	w0, 43231c <ferror@plt+0x2ed4c>
  432308:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  43230c:	mov	x0, x20
  432310:	add	x2, x2, #0x7c6
  432314:	mov	w1, #0x5                   	// #5
  432318:	bl	435ba8 <ferror@plt+0x325d8>
  43231c:	mov	x26, x25
  432320:	mov	w2, #0x0                   	// #0
  432324:	ldr	x21, [x20, #1224]
  432328:	b	4322c0 <ferror@plt+0x2ecf0>
  43232c:	mov	x26, x25
  432330:	b	4322bc <ferror@plt+0x2ecec>
  432334:	neg	w0, w0
  432338:	orr	w19, w19, w0
  43233c:	b	4322ec <ferror@plt+0x2ed1c>
  432340:	stp	x29, x30, [sp, #-64]!
  432344:	mov	x7, x1
  432348:	mov	x10, x2
  43234c:	mov	x9, x3
  432350:	mov	x29, sp
  432354:	mov	w1, w5
  432358:	add	x8, sp, #0x28
  43235c:	stp	x19, x20, [sp, #16]
  432360:	mov	x19, x0
  432364:	bl	42e494 <ferror@plt+0x2aec4>
  432368:	ldr	x1, [sp, #40]
  43236c:	adrp	x0, 42e000 <ferror@plt+0x2aa30>
  432370:	add	x0, x0, #0x278
  432374:	cmp	x1, x0
  432378:	b.ne	4323cc <ferror@plt+0x2edfc>  // b.any
  43237c:	adrp	x0, 42d000 <ferror@plt+0x29a30>
  432380:	add	x0, x0, #0xe1c
  432384:	ldr	x20, [x19, #1000]
  432388:	str	x0, [x19, #1000]
  43238c:	mov	x6, x4
  432390:	mov	x1, x7
  432394:	mov	w4, w5
  432398:	mov	x2, x9
  43239c:	mov	x5, x10
  4323a0:	mov	x0, x19
  4323a4:	mov	x3, #0x0                   	// #0
  4323a8:	bl	43169c <ferror@plt+0x2e0cc>
  4323ac:	adrp	x1, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4323b0:	tst	w0, #0xff
  4323b4:	add	x0, x1, #0x819
  4323b8:	str	x20, [x19, #1000]
  4323bc:	csel	x0, x0, xzr, eq  // eq = none
  4323c0:	ldp	x19, x20, [sp, #16]
  4323c4:	ldp	x29, x30, [sp], #64
  4323c8:	ret
  4323cc:	adrp	x0, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  4323d0:	add	x0, x0, #0x7e9
  4323d4:	b	4323c0 <ferror@plt+0x2edf0>
  4323d8:	ldrb	w0, [x1, #18]
  4323dc:	mov	w3, #0xffffffcd            	// #-51
  4323e0:	str	xzr, [x1, #24]
  4323e4:	and	w0, w0, #0xfffffffc
  4323e8:	strb	w0, [x1, #18]
  4323ec:	ldrh	w0, [x1, #18]
  4323f0:	ubfx	x2, x0, #2, #8
  4323f4:	and	w2, w2, w3
  4323f8:	bfi	w0, w2, #2, #8
  4323fc:	strh	w0, [x1, #18]
  432400:	mov	w0, #0x1                   	// #1
  432404:	ret
  432408:	stp	x29, x30, [sp, #-32]!
  43240c:	mov	x29, sp
  432410:	stp	x19, x20, [sp, #16]
  432414:	mov	x19, x0
  432418:	mov	w20, #0x0                   	// #0
  43241c:	cbz	x19, 432440 <ferror@plt+0x2ee70>
  432420:	ldrb	w0, [x19, #16]
  432424:	cbz	w0, 432434 <ferror@plt+0x2ee64>
  432428:	ldr	x0, [x19, #24]
  43242c:	bl	432408 <ferror@plt+0x2ee38>
  432430:	add	w20, w20, w0
  432434:	add	w20, w20, #0x1
  432438:	ldr	x19, [x19]
  43243c:	b	43241c <ferror@plt+0x2ee4c>
  432440:	mov	w0, w20
  432444:	ldp	x19, x20, [sp, #16]
  432448:	ldp	x29, x30, [sp], #32
  43244c:	ret
  432450:	stp	x29, x30, [sp, #-32]!
  432454:	mov	x29, sp
  432458:	stp	x19, x20, [sp, #16]
  43245c:	mov	x19, x0
  432460:	and	w20, w1, #0xff
  432464:	bl	43eff0 <ferror@plt+0x3ba20>
  432468:	ldrb	w2, [x0, #4]
  43246c:	cmp	w2, #0x35
  432470:	b.ne	4324dc <ferror@plt+0x2ef0c>  // b.any
  432474:	ldr	x0, [x0, #8]
  432478:	cbz	w20, 4324c4 <ferror@plt+0x2eef4>
  43247c:	ldr	x1, [x19, #1248]
  432480:	cmp	x1, x0
  432484:	b.ne	4324a0 <ferror@plt+0x2eed0>  // b.any
  432488:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  43248c:	add	x2, x2, #0xdb0
  432490:	mov	x0, x19
  432494:	mov	w1, #0x3                   	// #3
  432498:	bl	435b3c <ferror@plt+0x3256c>
  43249c:	b	432500 <ferror@plt+0x2ef30>
  4324a0:	ldr	x1, [x19, #1288]
  4324a4:	cmp	x1, x0
  4324a8:	b.eq	4324b8 <ferror@plt+0x2eee8>  // b.none
  4324ac:	ldr	x1, [x19, #1296]
  4324b0:	cmp	x1, x0
  4324b4:	b.ne	4324c4 <ferror@plt+0x2eef4>  // b.any
  4324b8:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  4324bc:	add	x2, x2, #0xdd9
  4324c0:	b	432490 <ferror@plt+0x2eec0>
  4324c4:	ldrh	w1, [x0, #18]
  4324c8:	tst	x1, #0x8
  4324cc:	csel	x0, x0, xzr, eq  // eq = none
  4324d0:	ldp	x19, x20, [sp, #16]
  4324d4:	ldp	x29, x30, [sp], #32
  4324d8:	ret
  4324dc:	ldrh	w1, [x0, #6]
  4324e0:	tbz	w1, #4, 432508 <ferror@plt+0x2ef38>
  4324e4:	ldr	x0, [x0, #8]
  4324e8:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  4324ec:	add	x2, x2, #0xe0a
  4324f0:	ldr	x3, [x0]
  4324f4:	mov	x0, x19
  4324f8:	mov	w1, #0x3                   	// #3
  4324fc:	bl	435b3c <ferror@plt+0x3256c>
  432500:	mov	x0, #0x0                   	// #0
  432504:	b	4324d0 <ferror@plt+0x2ef00>
  432508:	cmp	w2, #0x16
  43250c:	b.ne	432524 <ferror@plt+0x2ef54>  // b.any
  432510:	ldr	x0, [x19, #144]
  432514:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432518:	add	x2, x2, #0xe4a
  43251c:	ldr	x3, [x0, #8]
  432520:	b	4324f4 <ferror@plt+0x2ef24>
  432524:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432528:	add	x2, x2, #0xe6f
  43252c:	b	432490 <ferror@plt+0x2eec0>
  432530:	stp	x29, x30, [sp, #-32]!
  432534:	mov	x29, sp
  432538:	stp	x19, x20, [sp, #16]
  43253c:	mov	w19, w1
  432540:	mov	x20, x0
  432544:	bl	43eff0 <ferror@plt+0x3ba20>
  432548:	mov	x1, x0
  43254c:	ldrb	w0, [x0, #4]
  432550:	cmp	w0, #0x37
  432554:	b.ne	4325a0 <ferror@plt+0x2efd0>  // b.any
  432558:	ldr	w0, [x1, #8]
  43255c:	cmp	w0, #0x1
  432560:	b.ne	4325a8 <ferror@plt+0x2efd8>  // b.any
  432564:	ldr	x0, [x1, #16]
  432568:	ldrb	w2, [x0]
  43256c:	sub	w0, w2, #0x30
  432570:	cmp	w0, w19
  432574:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  432578:	b.hi	4325a8 <ferror@plt+0x2efd8>  // b.pmore
  43257c:	cmp	w0, #0x4
  432580:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  432584:	b.ne	4325a8 <ferror@plt+0x2efd8>  // b.any
  432588:	cmp	w19, #0x0
  43258c:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  432590:	b.eq	4325a8 <ferror@plt+0x2efd8>  // b.none
  432594:	ldp	x19, x20, [sp, #16]
  432598:	ldp	x29, x30, [sp], #32
  43259c:	ret
  4325a0:	cmp	w0, #0x16
  4325a4:	b.eq	4325c8 <ferror@plt+0x2eff8>  // b.none
  4325a8:	mov	x0, x20
  4325ac:	bl	43d9a8 <ferror@plt+0x3a3d8>
  4325b0:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  4325b4:	mov	x3, x0
  4325b8:	add	x2, x2, #0xe8f
  4325bc:	mov	x0, x20
  4325c0:	mov	w1, #0x3                   	// #3
  4325c4:	bl	435b3c <ferror@plt+0x3256c>
  4325c8:	mov	w0, #0x0                   	// #0
  4325cc:	b	432594 <ferror@plt+0x2efc4>
  4325d0:	stp	x29, x30, [sp, #-32]!
  4325d4:	mov	x29, sp
  4325d8:	str	x19, [sp, #16]
  4325dc:	mov	x19, x0
  4325e0:	mov	x0, x19
  4325e4:	bl	444ea4 <ferror@plt+0x418d4>
  4325e8:	ldrb	w1, [x0, #4]
  4325ec:	cmp	w1, #0x53
  4325f0:	b.eq	4325e0 <ferror@plt+0x2f010>  // b.none
  4325f4:	ldr	x19, [sp, #16]
  4325f8:	ldp	x29, x30, [sp], #32
  4325fc:	ret
  432600:	stp	x29, x30, [sp, #-48]!
  432604:	mov	x29, sp
  432608:	stp	x19, x20, [sp, #16]
  43260c:	mov	x19, x0
  432610:	mov	w0, #0x1                   	// #1
  432614:	strb	w0, [x19, #23]
  432618:	str	x21, [sp, #32]
  43261c:	adrp	x21, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432620:	add	x21, x21, #0xed8
  432624:	mov	x0, x19
  432628:	bl	43eff0 <ferror@plt+0x3ba20>
  43262c:	ldrb	w1, [x0, #4]
  432630:	cmp	w1, #0x16
  432634:	b.eq	432654 <ferror@plt+0x2f084>  // b.none
  432638:	cmp	w1, #0x35
  43263c:	b.eq	432668 <ferror@plt+0x2f098>  // b.none
  432640:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432644:	mov	x0, x19
  432648:	add	x2, x2, #0xeb3
  43264c:	mov	w1, #0x3                   	// #3
  432650:	bl	435b3c <ferror@plt+0x3256c>
  432654:	strb	wzr, [x19, #23]
  432658:	ldp	x19, x20, [sp, #16]
  43265c:	ldr	x21, [sp, #32]
  432660:	ldp	x29, x30, [sp], #48
  432664:	ret
  432668:	ldr	x20, [x0, #8]
  43266c:	ldrh	w0, [x20, #18]
  432670:	tbnz	w0, #3, 432624 <ferror@plt+0x2f054>
  432674:	ldrb	w0, [x20, #18]
  432678:	tbz	w0, #1, 432690 <ferror@plt+0x2f0c0>
  43267c:	ldr	x3, [x20]
  432680:	mov	x2, x21
  432684:	mov	x0, x19
  432688:	mov	w1, #0x0                   	// #0
  43268c:	bl	435b3c <ferror@plt+0x3256c>
  432690:	mov	x0, x20
  432694:	bl	442a80 <ferror@plt+0x3f4b0>
  432698:	ldrh	w0, [x20, #18]
  43269c:	orr	w0, w0, #0x18
  4326a0:	strh	w0, [x20, #18]
  4326a4:	b	432624 <ferror@plt+0x2f054>
  4326a8:	stp	x29, x30, [sp, #-64]!
  4326ac:	mov	x29, sp
  4326b0:	stp	x19, x20, [sp, #16]
  4326b4:	add	x19, x0, #0x18
  4326b8:	stp	x21, x22, [sp, #32]
  4326bc:	mov	x22, x1
  4326c0:	str	x23, [sp, #48]
  4326c4:	mov	x23, #0x18                  	// #24
  4326c8:	ldr	x21, [x19]
  4326cc:	cbz	x21, 432724 <ferror@plt+0x2f154>
  4326d0:	ldr	w1, [x21, #12]
  4326d4:	ldr	w0, [x22, #12]
  4326d8:	cmp	w1, w0
  4326dc:	b.eq	4326e8 <ferror@plt+0x2f118>  // b.none
  4326e0:	ldr	x19, [x19]
  4326e4:	b	4326c8 <ferror@plt+0x2f0f8>
  4326e8:	mov	w20, #0x0                   	// #0
  4326ec:	ldr	w0, [x21, #12]
  4326f0:	cmp	w0, w20
  4326f4:	b.ls	432718 <ferror@plt+0x2f148>  // b.plast
  4326f8:	mov	w0, w20
  4326fc:	madd	x0, x0, x23, x23
  432700:	add	x1, x22, x0
  432704:	add	x0, x21, x0
  432708:	bl	43c6c0 <ferror@plt+0x390f0>
  43270c:	cbz	w0, 432718 <ferror@plt+0x2f148>
  432710:	add	w20, w20, #0x1
  432714:	b	4326ec <ferror@plt+0x2f11c>
  432718:	ldr	w0, [x21, #12]
  43271c:	cmp	w0, w20
  432720:	b.ne	4326e0 <ferror@plt+0x2f110>  // b.any
  432724:	mov	x0, x19
  432728:	ldp	x19, x20, [sp, #16]
  43272c:	ldp	x21, x22, [sp, #32]
  432730:	ldr	x23, [sp, #48]
  432734:	ldp	x29, x30, [sp], #64
  432738:	ret
  43273c:	stp	x29, x30, [sp, #-48]!
  432740:	mov	x29, sp
  432744:	stp	x19, x20, [sp, #16]
  432748:	mov	x19, x0
  43274c:	and	w20, w1, #0xff
  432750:	bl	43eff0 <ferror@plt+0x3ba20>
  432754:	ldrb	w4, [x0, #4]
  432758:	cmp	w4, #0x3e
  43275c:	b.eq	432798 <ferror@plt+0x2f1c8>  // b.none
  432760:	cmp	w20, #0x0
  432764:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2cc10>
  432768:	adrp	x3, 497000 <_obstack_memory_used@@Base+0x3ac10>
  43276c:	add	x0, x0, #0x5b1
  432770:	add	x3, x3, #0xc8a
  432774:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432778:	csel	x3, x3, x0, ne  // ne = any
  43277c:	add	x2, x2, #0xef6
  432780:	mov	x0, x19
  432784:	mov	w1, #0x3                   	// #3
  432788:	bl	435b3c <ferror@plt+0x3256c>
  43278c:	ldp	x19, x20, [sp, #16]
  432790:	ldp	x29, x30, [sp], #48
  432794:	ret
  432798:	add	x1, x0, #0x8
  43279c:	add	x3, sp, #0x20
  4327a0:	mov	x0, x19
  4327a4:	mov	x2, #0x1                   	// #1
  4327a8:	bl	431ff8 <ferror@plt+0x2ea28>
  4327ac:	tst	w0, #0xff
  4327b0:	b.eq	432760 <ferror@plt+0x2f190>  // b.none
  4327b4:	ldr	w0, [sp, #32]
  4327b8:	cbz	w0, 432760 <ferror@plt+0x2f190>
  4327bc:	ldr	x3, [sp, #40]
  4327c0:	cmp	w20, #0x0
  4327c4:	mov	x0, x19
  4327c8:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  4327cc:	mov	w1, #0x3                   	// #3
  4327d0:	add	x2, x2, #0x11d
  4327d4:	csel	w1, w1, wzr, ne  // ne = any
  4327d8:	bl	435b3c <ferror@plt+0x3256c>
  4327dc:	ldr	x0, [sp, #40]
  4327e0:	bl	4032a0 <free@plt>
  4327e4:	b	43278c <ferror@plt+0x2f1bc>
  4327e8:	mov	w1, #0x1                   	// #1
  4327ec:	b	43273c <ferror@plt+0x2f16c>
  4327f0:	mov	w1, #0x0                   	// #0
  4327f4:	b	43273c <ferror@plt+0x2f16c>
  4327f8:	stp	x29, x30, [sp, #-64]!
  4327fc:	mov	x29, sp
  432800:	stp	x19, x20, [sp, #16]
  432804:	mov	x20, #0x0                   	// #0
  432808:	stp	x21, x22, [sp, #32]
  43280c:	mov	x21, x0
  432810:	mov	x0, #0x400                 	// #1024
  432814:	stp	x23, x24, [sp, #48]
  432818:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43281c:	mov	x19, x0
  432820:	mov	x24, #0x400                 	// #1024
  432824:	mov	w23, #0x20                  	// #32
  432828:	mov	x0, x21
  43282c:	bl	4325d0 <ferror@plt+0x2f000>
  432830:	ldrb	w1, [x0, #4]
  432834:	mov	x22, x0
  432838:	cmp	w1, #0x2
  43283c:	b.eq	43285c <ferror@plt+0x2f28c>  // b.none
  432840:	cmp	w1, #0x16
  432844:	b.ne	432878 <ferror@plt+0x2f2a8>  // b.any
  432848:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  43284c:	mov	x0, x21
  432850:	add	x2, x2, #0xf19
  432854:	mov	w1, #0x3                   	// #3
  432858:	bl	435b3c <ferror@plt+0x3256c>
  43285c:	strb	wzr, [x19, x20]
  432860:	mov	x0, x19
  432864:	ldp	x19, x20, [sp, #16]
  432868:	ldp	x21, x22, [sp, #32]
  43286c:	ldp	x23, x24, [sp, #48]
  432870:	ldp	x29, x30, [sp], #64
  432874:	ret
  432878:	bl	43c2e8 <ferror@plt+0x38d18>
  43287c:	add	w1, w0, #0x2
  432880:	add	x0, x20, x1
  432884:	cmp	x0, x24
  432888:	b.ls	4328a4 <ferror@plt+0x2f2d4>  // b.plast
  43288c:	add	x1, x24, x1
  432890:	mov	x0, x19
  432894:	lsl	x24, x1, #1
  432898:	mov	x1, x24
  43289c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4328a0:	mov	x19, x0
  4328a4:	ldrh	w0, [x22, #6]
  4328a8:	tbz	w0, #0, 4328b4 <ferror@plt+0x2f2e4>
  4328ac:	strb	w23, [x19, x20]
  4328b0:	add	x20, x20, #0x1
  4328b4:	add	x2, x19, x20
  4328b8:	mov	x1, x22
  4328bc:	mov	x0, x21
  4328c0:	mov	w3, #0x1                   	// #1
  4328c4:	bl	43c3a0 <ferror@plt+0x38dd0>
  4328c8:	sub	x20, x0, x19
  4328cc:	b	432828 <ferror@plt+0x2f258>
  4328d0:	stp	x29, x30, [sp, #-64]!
  4328d4:	mov	x29, sp
  4328d8:	stp	x19, x20, [sp, #16]
  4328dc:	mov	x19, x0
  4328e0:	ldr	x0, [x0, #448]
  4328e4:	stp	x21, x22, [sp, #32]
  4328e8:	mov	w21, w1
  4328ec:	str	x23, [sp, #48]
  4328f0:	mov	w22, w2
  4328f4:	ldur	w23, [x0, #-24]
  4328f8:	cbz	w3, 432974 <ferror@plt+0x2f3a4>
  4328fc:	ldr	x0, [x19, #144]
  432900:	ldr	x1, [x0, #8]
  432904:	ldrb	w0, [x19, #24]
  432908:	add	w0, w0, #0x1
  43290c:	strb	w0, [x19, #24]
  432910:	mov	x0, x19
  432914:	bl	43caac <ferror@plt+0x394dc>
  432918:	mov	x20, x0
  43291c:	ldrb	w0, [x19, #24]
  432920:	cmp	w22, #0x0
  432924:	adrp	x4, 485000 <_obstack_memory_used@@Base+0x28c10>
  432928:	add	x4, x4, #0x11d
  43292c:	sub	w0, w0, #0x1
  432930:	strb	w0, [x19, #24]
  432934:	cset	w0, ne  // ne = any
  432938:	cmp	w0, #0x0
  43293c:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  432940:	b.ne	43297c <ferror@plt+0x2f3ac>  // b.any
  432944:	mov	x5, x20
  432948:	mov	w2, w23
  43294c:	mov	w1, w22
  432950:	mov	x0, x19
  432954:	mov	w3, #0x0                   	// #0
  432958:	bl	435e50 <ferror@plt+0x32880>
  43295c:	mov	x0, x20
  432960:	ldp	x19, x20, [sp, #16]
  432964:	ldp	x21, x22, [sp, #32]
  432968:	ldr	x23, [sp, #48]
  43296c:	ldp	x29, x30, [sp], #64
  432970:	b	4032a0 <free@plt>
  432974:	mov	x1, #0x0                   	// #0
  432978:	b	432904 <ferror@plt+0x2f334>
  43297c:	cmp	w21, #0x0
  432980:	mov	x5, x20
  432984:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  432988:	mov	w2, w23
  43298c:	mov	w3, #0x0                   	// #0
  432990:	b.eq	4329a4 <ferror@plt+0x2f3d4>  // b.none
  432994:	mov	w1, w22
  432998:	mov	x0, x19
  43299c:	bl	435d68 <ferror@plt+0x32798>
  4329a0:	b	43295c <ferror@plt+0x2f38c>
  4329a4:	mov	w1, w21
  4329a8:	mov	x0, x19
  4329ac:	bl	435cf8 <ferror@plt+0x32728>
  4329b0:	b	43295c <ferror@plt+0x2f38c>
  4329b4:	mov	w3, #0x1                   	// #1
  4329b8:	mov	w2, #0x12                  	// #18
  4329bc:	mov	w1, w3
  4329c0:	b	4328d0 <ferror@plt+0x2f300>
  4329c4:	mov	w3, #0x1                   	// #1
  4329c8:	mov	w2, #0x0                   	// #0
  4329cc:	mov	w1, #0x3                   	// #3
  4329d0:	b	4328d0 <ferror@plt+0x2f300>
  4329d4:	stp	x29, x30, [sp, #-64]!
  4329d8:	mov	x29, sp
  4329dc:	stp	x19, x20, [sp, #16]
  4329e0:	add	x19, x0, #0x328
  4329e4:	mov	x20, x0
  4329e8:	stp	x21, x22, [sp, #32]
  4329ec:	mov	w22, w1
  4329f0:	mov	x21, x3
  4329f4:	stp	x23, x24, [sp, #48]
  4329f8:	mov	w23, w2
  4329fc:	ldr	x24, [x0]
  432a00:	ldp	x1, x0, [x19, #24]
  432a04:	sub	x0, x0, x1
  432a08:	cmp	x0, #0x1f
  432a0c:	b.hi	432a1c <ferror@plt+0x2f44c>  // b.pmore
  432a10:	mov	x0, x19
  432a14:	mov	x1, #0x20                  	// #32
  432a18:	bl	45c22c <_obstack_newchunk@@Base>
  432a1c:	ldp	x0, x3, [x19, #16]
  432a20:	add	x3, x3, #0x20
  432a24:	cmp	x3, x0
  432a28:	b.ne	432a38 <ferror@plt+0x2f468>  // b.any
  432a2c:	ldrb	w1, [x19, #80]
  432a30:	orr	w1, w1, #0x2
  432a34:	strb	w1, [x19, #80]
  432a38:	ldr	x4, [x19, #48]
  432a3c:	ldr	x1, [x19, #8]
  432a40:	add	x3, x3, x4
  432a44:	ldr	x2, [x19, #32]
  432a48:	bic	x4, x3, x4
  432a4c:	sub	x3, x4, x1
  432a50:	sub	x1, x2, x1
  432a54:	cmp	x3, x1
  432a58:	ldr	w1, [x20, #48]
  432a5c:	csel	x4, x4, x2, ls  // ls = plast
  432a60:	stp	x4, x4, [x19, #16]
  432a64:	mov	w2, #0x1                   	// #1
  432a68:	str	w1, [x0, #8]
  432a6c:	sub	w3, w2, w22
  432a70:	ldr	x1, [x24, #96]
  432a74:	str	x1, [x0]
  432a78:	and	w3, w3, w2
  432a7c:	ldrb	w1, [x20, #18]
  432a80:	cmp	w1, #0x0
  432a84:	cset	w1, ne  // ne = any
  432a88:	strb	w1, [x0, #25]
  432a8c:	ldrb	w1, [x20, #440]
  432a90:	csel	w3, w3, w2, eq  // eq = none
  432a94:	strb	w3, [x0, #24]
  432a98:	str	w23, [x0, #28]
  432a9c:	cbz	w1, 432acc <ferror@plt+0x2f4fc>
  432aa0:	ldr	x1, [x20, #424]
  432aa4:	cmp	x1, #0x0
  432aa8:	csel	x21, x21, xzr, eq  // eq = none
  432aac:	str	x21, [x0, #16]
  432ab0:	strb	w22, [x20, #18]
  432ab4:	ldp	x19, x20, [sp, #16]
  432ab8:	ldp	x21, x22, [sp, #32]
  432abc:	str	x0, [x24, #96]
  432ac0:	ldp	x23, x24, [sp, #48]
  432ac4:	ldp	x29, x30, [sp], #64
  432ac8:	ret
  432acc:	mov	x21, #0x0                   	// #0
  432ad0:	b	432aac <ferror@plt+0x2f4dc>
  432ad4:	stp	x29, x30, [sp, #-32]!
  432ad8:	mov	x29, sp
  432adc:	str	x19, [sp, #16]
  432ae0:	mov	x19, x0
  432ae4:	ldrb	w1, [x0, #18]
  432ae8:	cbnz	w1, 432b14 <ferror@plt+0x2f544>
  432aec:	mov	w1, #0x1                   	// #1
  432af0:	bl	437b68 <ferror@plt+0x34598>
  432af4:	and	w1, w0, #0xff
  432af8:	eor	w1, w1, #0x1
  432afc:	mov	x0, x19
  432b00:	mov	w2, #0x4                   	// #4
  432b04:	ldr	x3, [x19, #432]
  432b08:	ldr	x19, [sp, #16]
  432b0c:	ldp	x29, x30, [sp], #32
  432b10:	b	4329d4 <ferror@plt+0x2f404>
  432b14:	mov	w1, #0x1                   	// #1
  432b18:	b	432afc <ferror@plt+0x2f52c>
  432b1c:	stp	x29, x30, [sp, #-32]!
  432b20:	mov	w1, #0x1                   	// #1
  432b24:	mov	x29, sp
  432b28:	stp	x19, x20, [sp, #16]
  432b2c:	mov	x19, x0
  432b30:	bl	432450 <ferror@plt+0x2ee80>
  432b34:	cbz	x0, 432b9c <ferror@plt+0x2f5cc>
  432b38:	mov	x20, x0
  432b3c:	ldrb	w0, [x19, #1124]
  432b40:	ldr	x1, [x19, #1024]
  432b44:	cmp	w0, #0x0
  432b48:	cset	w0, eq  // eq = none
  432b4c:	strb	w0, [x19, #21]
  432b50:	cbz	x1, 432b5c <ferror@plt+0x2f58c>
  432b54:	mov	x0, x19
  432b58:	blr	x1
  432b5c:	mov	x1, x20
  432b60:	mov	x0, x19
  432b64:	bl	442c3c <ferror@plt+0x3f66c>
  432b68:	tst	w0, #0xff
  432b6c:	b.eq	432b88 <ferror@plt+0x2f5b8>  // b.none
  432b70:	ldr	x3, [x19, #936]
  432b74:	cbz	x3, 432b88 <ferror@plt+0x2f5b8>
  432b78:	ldr	w1, [x19, #48]
  432b7c:	mov	x2, x20
  432b80:	mov	x0, x19
  432b84:	blr	x3
  432b88:	ldrh	w0, [x20, #18]
  432b8c:	ubfx	x1, x0, #2, #8
  432b90:	and	w1, w1, #0xffffffdf
  432b94:	bfi	w0, w1, #2, #8
  432b98:	strh	w0, [x20, #18]
  432b9c:	ldp	x19, x20, [sp, #16]
  432ba0:	ldp	x29, x30, [sp], #32
  432ba4:	ret
  432ba8:	stp	x29, x30, [sp, #-48]!
  432bac:	mov	x29, sp
  432bb0:	ldr	x1, [x0, #144]
  432bb4:	stp	x19, x20, [sp, #16]
  432bb8:	mov	x19, x0
  432bbc:	str	x21, [sp, #32]
  432bc0:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  432bc4:	add	x0, x0, #0x668
  432bc8:	cmp	x1, x0
  432bcc:	b.eq	432c4c <ferror@plt+0x2f67c>  // b.none
  432bd0:	cbz	x1, 432c68 <ferror@plt+0x2f698>
  432bd4:	ldrb	w20, [x1, #19]
  432bd8:	eor	x20, x20, #0x10
  432bdc:	ubfx	w20, w20, #4, #1
  432be0:	ldrb	w2, [x19, #18]
  432be4:	cmp	w2, #0x0
  432be8:	add	x2, x0, #0x60
  432bec:	cset	w21, ne  // ne = any
  432bf0:	cmp	x1, x2
  432bf4:	b.ne	432c70 <ferror@plt+0x2f6a0>  // b.any
  432bf8:	mov	w0, #0x1                   	// #1
  432bfc:	strb	wzr, [x19, #18]
  432c00:	strb	w0, [x19, #20]
  432c04:	cbz	w20, 432c14 <ferror@plt+0x2f644>
  432c08:	ldrb	w0, [x19, #24]
  432c0c:	add	w0, w0, #0x1
  432c10:	strb	w0, [x19, #24]
  432c14:	mov	x0, x19
  432c18:	mov	w2, #0x0                   	// #0
  432c1c:	mov	x1, #0x0                   	// #0
  432c20:	bl	446a80 <ferror@plt+0x434b0>
  432c24:	cbz	w20, 432c34 <ferror@plt+0x2f664>
  432c28:	ldrb	w0, [x19, #24]
  432c2c:	sub	w0, w0, #0x1
  432c30:	strb	w0, [x19, #24]
  432c34:	ldr	x1, [x19, #1312]
  432c38:	strb	w21, [x19, #18]
  432c3c:	ldr	x2, [x19, #1328]
  432c40:	mov	x0, x19
  432c44:	sub	x2, x2, x1
  432c48:	bl	446a20 <ferror@plt+0x43450>
  432c4c:	ldrb	w0, [x19, #24]
  432c50:	add	w0, w0, #0x1
  432c54:	strb	w0, [x19, #24]
  432c58:	ldp	x19, x20, [sp, #16]
  432c5c:	ldr	x21, [sp, #32]
  432c60:	ldp	x29, x30, [sp], #48
  432c64:	ret
  432c68:	mov	w20, #0x0                   	// #0
  432c6c:	b	432be0 <ferror@plt+0x2f610>
  432c70:	add	x0, x0, #0xd8
  432c74:	cmp	x1, x0
  432c78:	b.eq	432bf8 <ferror@plt+0x2f628>  // b.none
  432c7c:	strb	wzr, [x19, #20]
  432c80:	b	432c04 <ferror@plt+0x2f634>
  432c84:	stp	x29, x30, [sp, #-48]!
  432c88:	mov	x29, sp
  432c8c:	stp	x19, x20, [sp, #16]
  432c90:	mov	x20, x1
  432c94:	mov	x19, x2
  432c98:	stp	x21, x22, [sp, #32]
  432c9c:	mov	x21, x0
  432ca0:	cbz	x20, 432cf0 <ferror@plt+0x2f720>
  432ca4:	ldrb	w0, [x20, #16]
  432ca8:	cbz	w0, 432cc0 <ferror@plt+0x2f6f0>
  432cac:	ldr	x1, [x20, #24]
  432cb0:	mov	x2, x19
  432cb4:	mov	x0, x21
  432cb8:	bl	432c84 <ferror@plt+0x2f6b4>
  432cbc:	mov	x19, x0
  432cc0:	ldr	x22, [x19]
  432cc4:	mov	x0, x22
  432cc8:	bl	402d50 <strlen@plt>
  432ccc:	mov	x1, x22
  432cd0:	mov	w2, w0
  432cd4:	mov	x0, x21
  432cd8:	bl	43b16c <ferror@plt+0x37b9c>
  432cdc:	str	x0, [x20, #8]
  432ce0:	ldr	x0, [x19], #8
  432ce4:	bl	4032a0 <free@plt>
  432ce8:	ldr	x20, [x20]
  432cec:	b	432ca0 <ferror@plt+0x2f6d0>
  432cf0:	mov	x0, x19
  432cf4:	ldp	x19, x20, [sp, #16]
  432cf8:	ldp	x21, x22, [sp, #32]
  432cfc:	ldp	x29, x30, [sp], #48
  432d00:	ret
  432d04:	stp	x29, x30, [sp, #-32]!
  432d08:	mov	x29, sp
  432d0c:	stp	x19, x20, [sp, #16]
  432d10:	mov	x20, x0
  432d14:	cbz	x20, 432d58 <ferror@plt+0x2f788>
  432d18:	ldrb	w0, [x20, #16]
  432d1c:	cbz	w0, 432d2c <ferror@plt+0x2f75c>
  432d20:	ldr	x0, [x20, #24]
  432d24:	bl	432d04 <ferror@plt+0x2f734>
  432d28:	mov	x1, x0
  432d2c:	ldr	x0, [x20, #8]
  432d30:	mov	x19, x1
  432d34:	ldr	w3, [x0, #8]
  432d38:	ldr	x0, [x0]
  432d3c:	mov	w1, w3
  432d40:	add	w2, w3, #0x1
  432d44:	bl	45d784 <_obstack_memory_used@@Base+0x1394>
  432d48:	str	x0, [x19], #8
  432d4c:	ldr	x20, [x20]
  432d50:	mov	x1, x19
  432d54:	b	432d14 <ferror@plt+0x2f744>
  432d58:	mov	x0, x1
  432d5c:	ldp	x19, x20, [sp, #16]
  432d60:	ldp	x29, x30, [sp], #32
  432d64:	ret
  432d68:	stp	x29, x30, [sp, #-48]!
  432d6c:	mov	x29, sp
  432d70:	stp	x19, x20, [sp, #16]
  432d74:	mov	x19, x0
  432d78:	str	x21, [sp, #32]
  432d7c:	bl	4325d0 <ferror@plt+0x2f000>
  432d80:	mov	x20, x0
  432d84:	ldrb	w0, [x0, #4]
  432d88:	cmp	w0, #0x16
  432d8c:	b.ne	432d9c <ferror@plt+0x2f7cc>  // b.any
  432d90:	mov	x0, x19
  432d94:	mov	w1, #0x1                   	// #1
  432d98:	bl	442800 <ferror@plt+0x3f230>
  432d9c:	ldrb	w0, [x20, #4]
  432da0:	cmp	w0, #0x14
  432da4:	b.ne	432e10 <ferror@plt+0x2f840>  // b.any
  432da8:	mov	x0, x19
  432dac:	bl	4325d0 <ferror@plt+0x2f000>
  432db0:	mov	x20, x0
  432db4:	ldrb	w0, [x0, #4]
  432db8:	cmp	w0, #0x16
  432dbc:	b.ne	432dcc <ferror@plt+0x2f7fc>  // b.any
  432dc0:	mov	x0, x19
  432dc4:	mov	w1, #0x1                   	// #1
  432dc8:	bl	442800 <ferror@plt+0x3f230>
  432dcc:	ldrb	w0, [x20, #4]
  432dd0:	sub	w0, w0, #0x3e
  432dd4:	and	w0, w0, #0xff
  432dd8:	cmp	w0, #0x4
  432ddc:	b.hi	432e10 <ferror@plt+0x2f840>  // b.pmore
  432de0:	mov	x0, x19
  432de4:	bl	4325d0 <ferror@plt+0x2f000>
  432de8:	mov	x21, x0
  432dec:	ldrb	w0, [x0, #4]
  432df0:	cmp	w0, #0x16
  432df4:	b.ne	432e04 <ferror@plt+0x2f834>  // b.any
  432df8:	mov	x0, x19
  432dfc:	mov	w1, #0x1                   	// #1
  432e00:	bl	442800 <ferror@plt+0x3f230>
  432e04:	ldrb	w0, [x21, #4]
  432e08:	cmp	w0, #0x15
  432e0c:	b.eq	432e14 <ferror@plt+0x2f844>  // b.none
  432e10:	mov	x20, #0x0                   	// #0
  432e14:	mov	x0, x20
  432e18:	ldp	x19, x20, [sp, #16]
  432e1c:	ldr	x21, [sp, #32]
  432e20:	ldp	x29, x30, [sp], #48
  432e24:	ret
  432e28:	stp	x29, x30, [sp, #-32]!
  432e2c:	mov	x29, sp
  432e30:	stp	x19, x20, [sp, #16]
  432e34:	mov	w20, w2
  432e38:	ldr	x2, [x0, #448]
  432e3c:	ldurb	w2, [x2, #-20]
  432e40:	cmp	w2, #0x16
  432e44:	b.eq	432e90 <ferror@plt+0x2f8c0>  // b.none
  432e48:	mov	x19, x0
  432e4c:	and	w1, w1, #0xff
  432e50:	cbz	w1, 432e88 <ferror@plt+0x2f8b8>
  432e54:	bl	444ea4 <ferror@plt+0x418d4>
  432e58:	ldrb	w0, [x0, #4]
  432e5c:	cmp	w0, #0x16
  432e60:	b.eq	432e90 <ferror@plt+0x2f8c0>  // b.none
  432e64:	ldr	x0, [x19, #144]
  432e68:	mov	w1, w20
  432e6c:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432e70:	add	x2, x2, #0xf39
  432e74:	ldr	x3, [x0, #8]
  432e78:	mov	x0, x19
  432e7c:	ldp	x19, x20, [sp, #16]
  432e80:	ldp	x29, x30, [sp], #32
  432e84:	b	435c18 <ferror@plt+0x32648>
  432e88:	bl	43eff0 <ferror@plt+0x3ba20>
  432e8c:	b	432e58 <ferror@plt+0x2f888>
  432e90:	ldp	x19, x20, [sp, #16]
  432e94:	ldp	x29, x30, [sp], #32
  432e98:	ret
  432e9c:	mov	w2, #0x0                   	// #0
  432ea0:	b	432e28 <ferror@plt+0x2f858>
  432ea4:	stp	x29, x30, [sp, #-32]!
  432ea8:	mov	x29, sp
  432eac:	str	x19, [sp, #16]
  432eb0:	mov	x19, x0
  432eb4:	bl	444ea4 <ferror@plt+0x418d4>
  432eb8:	ldrb	w1, [x0, #4]
  432ebc:	cmp	w1, #0x3e
  432ec0:	b.eq	432ef4 <ferror@plt+0x2f924>  // b.none
  432ec4:	ldr	x0, [x19, #144]
  432ec8:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432ecc:	mov	w1, #0x3                   	// #3
  432ed0:	add	x2, x2, #0xf5e
  432ed4:	ldr	x3, [x0, #8]
  432ed8:	mov	x0, x19
  432edc:	bl	435b3c <ferror@plt+0x3256c>
  432ee0:	mov	x0, x19
  432ee4:	mov	w1, #0x0                   	// #0
  432ee8:	ldr	x19, [sp, #16]
  432eec:	ldp	x29, x30, [sp], #32
  432ef0:	b	432e9c <ferror@plt+0x2f8cc>
  432ef4:	ldr	x3, [x19, #952]
  432ef8:	cbz	x3, 432ee0 <ferror@plt+0x2f910>
  432efc:	ldr	w1, [x19, #48]
  432f00:	add	x2, x0, #0x8
  432f04:	mov	x0, x19
  432f08:	blr	x3
  432f0c:	b	432ee0 <ferror@plt+0x2f910>
  432f10:	stp	x29, x30, [sp, #-96]!
  432f14:	mov	x29, sp
  432f18:	stp	x21, x22, [sp, #32]
  432f1c:	mov	x21, x3
  432f20:	adrp	x22, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  432f24:	stp	x19, x20, [sp, #16]
  432f28:	mov	x19, x0
  432f2c:	add	x22, x22, #0x668
  432f30:	stp	x23, x24, [sp, #48]
  432f34:	mov	x24, x1
  432f38:	mov	x23, x2
  432f3c:	stp	x25, x26, [sp, #64]
  432f40:	stp	x27, x28, [sp, #80]
  432f44:	bl	4325d0 <ferror@plt+0x2f000>
  432f48:	mov	x20, x0
  432f4c:	ldr	w0, [x0]
  432f50:	str	w0, [x21]
  432f54:	ldrb	w0, [x20, #4]
  432f58:	cmp	w0, #0x3e
  432f5c:	b.ne	432fbc <ferror@plt+0x2f9ec>  // b.any
  432f60:	ldr	x0, [x20, #16]
  432f64:	ldrb	w0, [x0]
  432f68:	cmp	w0, #0x52
  432f6c:	b.ne	432fc4 <ferror@plt+0x2f9f4>  // b.any
  432f70:	ldr	x0, [x19, #144]
  432f74:	add	x22, x22, #0x108
  432f78:	cmp	x0, x22
  432f7c:	b.eq	43304c <ferror@plt+0x2fa7c>  // b.none
  432f80:	ldr	x3, [x0, #8]
  432f84:	mov	x21, #0x0                   	// #0
  432f88:	mov	x0, x19
  432f8c:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  432f90:	mov	w1, #0x3                   	// #3
  432f94:	add	x2, x2, #0xf86
  432f98:	bl	435b3c <ferror@plt+0x3256c>
  432f9c:	mov	x0, x21
  432fa0:	ldp	x19, x20, [sp, #16]
  432fa4:	ldp	x21, x22, [sp, #32]
  432fa8:	ldp	x23, x24, [sp, #48]
  432fac:	ldp	x25, x26, [sp, #64]
  432fb0:	ldp	x27, x28, [sp, #80]
  432fb4:	ldp	x29, x30, [sp], #96
  432fb8:	ret
  432fbc:	cmp	w0, #0x44
  432fc0:	b.ne	433030 <ferror@plt+0x2fa60>  // b.any
  432fc4:	ldr	w0, [x20, #8]
  432fc8:	sub	w0, w0, #0x1
  432fcc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  432fd0:	ldr	x1, [x20, #16]
  432fd4:	mov	x21, x0
  432fd8:	ldr	w2, [x20, #8]
  432fdc:	add	x1, x1, #0x1
  432fe0:	sub	w2, w2, #0x2
  432fe4:	bl	402cd0 <memcpy@plt>
  432fe8:	ldr	w0, [x20, #8]
  432fec:	sub	w0, w0, #0x2
  432ff0:	strb	wzr, [x21, x0]
  432ff4:	ldrb	w0, [x20, #4]
  432ff8:	cmp	w0, #0x44
  432ffc:	cset	w0, eq  // eq = none
  433000:	str	w0, [x24]
  433004:	add	x22, x22, #0x108
  433008:	ldr	x0, [x19, #144]
  43300c:	cmp	x0, x22
  433010:	b.eq	432f9c <ferror@plt+0x2f9cc>  // b.none
  433014:	cbz	x23, 433020 <ferror@plt+0x2fa50>
  433018:	ldrb	w0, [x19, #1123]
  43301c:	cbz	w0, 433058 <ferror@plt+0x2fa88>
  433020:	mov	x0, x19
  433024:	mov	w1, #0x1                   	// #1
  433028:	bl	432e9c <ferror@plt+0x2f8cc>
  43302c:	b	432f9c <ferror@plt+0x2f9cc>
  433030:	cmp	w0, #0x3
  433034:	b.ne	432f70 <ferror@plt+0x2f9a0>  // b.any
  433038:	mov	x0, x19
  43303c:	bl	4327f8 <ferror@plt+0x2f228>
  433040:	mov	x21, x0
  433044:	mov	w0, #0x1                   	// #1
  433048:	b	433000 <ferror@plt+0x2fa30>
  43304c:	adrp	x3, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  433050:	add	x3, x3, #0xf74
  433054:	b	432f84 <ferror@plt+0x2f9b4>
  433058:	mov	x0, #0x40                  	// #64
  43305c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  433060:	mov	x20, x0
  433064:	ldr	x0, [x19, #448]
  433068:	ldurb	w0, [x0, #-20]
  43306c:	cmp	w0, #0x16
  433070:	b.ne	433084 <ferror@plt+0x2fab4>  // b.any
  433074:	mov	x22, #0x0                   	// #0
  433078:	str	xzr, [x20, x22, lsl #3]
  43307c:	str	x20, [x23]
  433080:	b	432f9c <ferror@plt+0x2f9cc>
  433084:	adrp	x26, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  433088:	add	x26, x26, #0xf39
  43308c:	mov	x25, #0x8                   	// #8
  433090:	mov	x22, #0x0                   	// #0
  433094:	mov	x0, x19
  433098:	bl	43eff0 <ferror@plt+0x3ba20>
  43309c:	mov	x24, x0
  4330a0:	ldrb	w0, [x0, #4]
  4330a4:	cmp	w0, #0x16
  4330a8:	b.eq	433078 <ferror@plt+0x2faa8>  // b.none
  4330ac:	cmp	w0, #0x4f
  4330b0:	b.eq	4330d0 <ferror@plt+0x2fb00>  // b.none
  4330b4:	ldr	x0, [x19, #144]
  4330b8:	mov	x2, x26
  4330bc:	mov	w1, #0x2                   	// #2
  4330c0:	ldr	x3, [x0, #8]
  4330c4:	mov	x0, x19
  4330c8:	bl	435b3c <ferror@plt+0x3256c>
  4330cc:	b	433094 <ferror@plt+0x2fac4>
  4330d0:	add	x27, x22, #0x1
  4330d4:	cmp	x27, x25
  4330d8:	b.cc	4330f4 <ferror@plt+0x2fb24>  // b.lo, b.ul, b.last
  4330dc:	lsl	x28, x25, #1
  4330e0:	lsl	x1, x25, #4
  4330e4:	mov	x0, x20
  4330e8:	mov	x25, x28
  4330ec:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4330f0:	mov	x20, x0
  4330f4:	str	x24, [x20, x22, lsl #3]
  4330f8:	mov	x22, x27
  4330fc:	b	433094 <ferror@plt+0x2fac4>
  433100:	stp	x29, x30, [sp, #-48]!
  433104:	mov	x2, #0x0                   	// #0
  433108:	mov	x29, sp
  43310c:	add	x3, sp, #0x2c
  433110:	add	x1, sp, #0x28
  433114:	stp	x19, x20, [sp, #16]
  433118:	mov	x19, x0
  43311c:	bl	432f10 <ferror@plt+0x2f940>
  433120:	cbz	x0, 433160 <ferror@plt+0x2fb90>
  433124:	ldr	w2, [sp, #40]
  433128:	mov	x1, x0
  43312c:	mov	x20, x0
  433130:	mov	x0, x19
  433134:	bl	43aca8 <ferror@plt+0x376d8>
  433138:	cmp	w0, #0x0
  43313c:	b.ge	43316c <ferror@plt+0x2fb9c>  // b.tcont
  433140:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  433144:	mov	x3, x20
  433148:	add	x2, x2, #0xfab
  43314c:	mov	x0, x19
  433150:	mov	w1, #0x0                   	// #0
  433154:	bl	435b3c <ferror@plt+0x3256c>
  433158:	mov	x0, x20
  43315c:	bl	4032a0 <free@plt>
  433160:	ldp	x19, x20, [sp, #16]
  433164:	ldp	x29, x30, [sp], #48
  433168:	ret
  43316c:	b.eq	433158 <ferror@plt+0x2fb88>  // b.none
  433170:	mov	x3, x20
  433174:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  433178:	add	x2, x2, #0xfc6
  43317c:	mov	w1, #0x0                   	// #0
  433180:	mov	x0, x19
  433184:	bl	435b3c <ferror@plt+0x3256c>
  433188:	mov	x0, x19
  43318c:	bl	444ea4 <ferror@plt+0x418d4>
  433190:	ldrb	w0, [x0, #4]
  433194:	cmp	w0, #0x16
  433198:	b.eq	433158 <ferror@plt+0x2fb88>  // b.none
  43319c:	mov	x0, x19
  4331a0:	mov	w1, #0x1                   	// #1
  4331a4:	bl	442800 <ferror@plt+0x3f230>
  4331a8:	mov	x0, x19
  4331ac:	mov	w3, #0x0                   	// #0
  4331b0:	mov	w2, #0x0                   	// #0
  4331b4:	mov	w1, #0x0                   	// #0
  4331b8:	bl	4328d0 <ferror@plt+0x2f300>
  4331bc:	b	433158 <ferror@plt+0x2fb88>
  4331c0:	stp	x29, x30, [sp, #-32]!
  4331c4:	mov	x29, sp
  4331c8:	ldr	x1, [x0, #40]
  4331cc:	ldr	w1, [x1, #48]
  4331d0:	str	x19, [sp, #16]
  4331d4:	mov	x19, x0
  4331d8:	cmp	w1, #0x1
  4331dc:	b.ne	4331f0 <ferror@plt+0x2fc20>  // b.any
  4331e0:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  4331e4:	mov	w1, #0x0                   	// #0
  4331e8:	add	x2, x2, #0xfe4
  4331ec:	bl	435b3c <ferror@plt+0x3256c>
  4331f0:	mov	x0, x19
  4331f4:	mov	w1, #0x0                   	// #0
  4331f8:	bl	432e9c <ferror@plt+0x2f8cc>
  4331fc:	ldr	x0, [x19]
  433200:	ldr	x1, [x0, #80]
  433204:	mov	x0, x19
  433208:	ldr	x19, [sp, #16]
  43320c:	ldp	x29, x30, [sp], #32
  433210:	b	43a7a0 <ferror@plt+0x371d0>
  433214:	stp	x29, x30, [sp, #-32]!
  433218:	mov	w1, #0x1                   	// #1
  43321c:	mov	x29, sp
  433220:	stp	x19, x20, [sp, #16]
  433224:	mov	x19, x0
  433228:	bl	432450 <ferror@plt+0x2ee80>
  43322c:	cbz	x0, 4332a4 <ferror@plt+0x2fcd4>
  433230:	ldr	x1, [x19, #1024]
  433234:	mov	x20, x0
  433238:	cbz	x1, 433244 <ferror@plt+0x2fc74>
  43323c:	mov	x0, x19
  433240:	blr	x1
  433244:	ldr	x3, [x19, #944]
  433248:	cbz	x3, 43325c <ferror@plt+0x2fc8c>
  43324c:	ldr	w1, [x19, #48]
  433250:	mov	x2, x20
  433254:	mov	x0, x19
  433258:	blr	x3
  43325c:	ldrb	w0, [x20, #18]
  433260:	tbz	w0, #1, 4332a4 <ferror@plt+0x2fcd4>
  433264:	ldrh	w1, [x20, #18]
  433268:	tbz	w1, #5, 4332b8 <ferror@plt+0x2fce8>
  43326c:	ldr	x3, [x20]
  433270:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  433274:	mov	x0, x19
  433278:	add	x2, x2, #0xffe
  43327c:	mov	w1, #0x0                   	// #0
  433280:	bl	435b3c <ferror@plt+0x3256c>
  433284:	ldrb	w0, [x19, #1151]
  433288:	cbz	w0, 43329c <ferror@plt+0x2fccc>
  43328c:	mov	x1, x20
  433290:	mov	x0, x19
  433294:	mov	x2, #0x0                   	// #0
  433298:	bl	441eb4 <ferror@plt+0x3e8e4>
  43329c:	mov	x0, x20
  4332a0:	bl	442a80 <ferror@plt+0x3f4b0>
  4332a4:	mov	x0, x19
  4332a8:	mov	w1, #0x0                   	// #0
  4332ac:	ldp	x19, x20, [sp, #16]
  4332b0:	ldp	x29, x30, [sp], #32
  4332b4:	b	432e9c <ferror@plt+0x2f8cc>
  4332b8:	and	w0, w0, #0x3
  4332bc:	cmp	w0, #0x3
  4332c0:	b.ne	433284 <ferror@plt+0x2fcb4>  // b.any
  4332c4:	ldrb	w0, [x19, #1143]
  4332c8:	cbz	w0, 433284 <ferror@plt+0x2fcb4>
  4332cc:	ldr	w2, [x19, #48]
  4332d0:	mov	x0, x19
  4332d4:	ldr	x5, [x20]
  4332d8:	adrp	x4, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  4332dc:	mov	w3, #0x0                   	// #0
  4332e0:	add	x4, x4, #0xffe
  4332e4:	mov	w1, #0xb                   	// #11
  4332e8:	bl	435d68 <ferror@plt+0x32798>
  4332ec:	b	433284 <ferror@plt+0x2fcb4>
  4332f0:	stp	x29, x30, [sp, #-48]!
  4332f4:	mov	x29, sp
  4332f8:	stp	x19, x20, [sp, #16]
  4332fc:	mov	x20, x0
  433300:	str	x21, [sp, #32]
  433304:	ldrb	w1, [x0, #18]
  433308:	cbz	w1, 433334 <ferror@plt+0x2fd64>
  43330c:	mov	x19, #0x0                   	// #0
  433310:	mov	w21, #0x1                   	// #1
  433314:	mov	x3, x19
  433318:	mov	w1, w21
  43331c:	mov	x0, x20
  433320:	mov	w2, #0x6                   	// #6
  433324:	ldp	x19, x20, [sp, #16]
  433328:	ldr	x21, [sp, #32]
  43332c:	ldp	x29, x30, [sp], #48
  433330:	b	4329d4 <ferror@plt+0x2f404>
  433334:	mov	w1, #0x0                   	// #0
  433338:	bl	432450 <ferror@plt+0x2ee80>
  43333c:	mov	x19, x0
  433340:	cbz	x0, 43330c <ferror@plt+0x2fd3c>
  433344:	ldrh	w21, [x0, #18]
  433348:	ldrb	w0, [x0, #18]
  43334c:	ubfx	x2, x21, #2, #8
  433350:	eor	x21, x21, #0x100
  433354:	tst	x0, #0x2
  433358:	and	w0, w0, #0x3
  43335c:	ubfx	w21, w21, #8, #1
  433360:	csel	w21, w21, wzr, ne  // ne = any
  433364:	cmp	w0, #0x2
  433368:	b.ne	43337c <ferror@plt+0x2fdac>  // b.any
  43336c:	ldr	x1, [x19, #24]
  433370:	ldrb	w0, [x1, #19]
  433374:	orr	w0, w0, #0x20
  433378:	strb	w0, [x1, #19]
  43337c:	tbnz	w2, #5, 43338c <ferror@plt+0x2fdbc>
  433380:	mov	x1, x19
  433384:	mov	x0, x20
  433388:	bl	443680 <ferror@plt+0x400b0>
  43338c:	ldr	x3, [x20, #1032]
  433390:	cbz	x3, 4333a4 <ferror@plt+0x2fdd4>
  433394:	ldr	w1, [x20, #48]
  433398:	mov	x2, x19
  43339c:	mov	x0, x20
  4333a0:	blr	x3
  4333a4:	mov	x0, x20
  4333a8:	mov	w1, #0x0                   	// #0
  4333ac:	bl	432e9c <ferror@plt+0x2f8cc>
  4333b0:	b	433314 <ferror@plt+0x2fd44>
  4333b4:	stp	x29, x30, [sp, #-32]!
  4333b8:	mov	x29, sp
  4333bc:	str	x19, [sp, #16]
  4333c0:	mov	x19, x0
  4333c4:	ldr	x0, [x19, #136]
  4333c8:	ldr	x0, [x0, #8]
  4333cc:	cbz	x0, 4333dc <ferror@plt+0x2fe0c>
  4333d0:	mov	x0, x19
  4333d4:	bl	442690 <ferror@plt+0x3f0c0>
  4333d8:	b	4333c4 <ferror@plt+0x2fdf4>
  4333dc:	ldr	x0, [x19, #448]
  4333e0:	ldurb	w0, [x0, #-20]
  4333e4:	cmp	w0, #0x16
  4333e8:	b.eq	4333fc <ferror@plt+0x2fe2c>  // b.none
  4333ec:	mov	x0, x19
  4333f0:	bl	43eff0 <ferror@plt+0x3ba20>
  4333f4:	ldrb	w0, [x0, #4]
  4333f8:	b	4333e4 <ferror@plt+0x2fe14>
  4333fc:	ldr	x19, [sp, #16]
  433400:	ldp	x29, x30, [sp], #32
  433404:	ret
  433408:	stp	x29, x30, [sp, #-64]!
  43340c:	mov	x29, sp
  433410:	stp	x19, x20, [sp, #16]
  433414:	add	x3, sp, #0x34
  433418:	mov	x19, x0
  43341c:	str	x21, [sp, #32]
  433420:	mov	w21, w1
  433424:	add	x2, sp, #0x38
  433428:	str	xzr, [sp, #56]
  43342c:	ldrb	w1, [x0, #1123]
  433430:	cmp	w1, #0x0
  433434:	cset	w1, eq  // eq = none
  433438:	strb	w1, [x0, #21]
  43343c:	add	x1, sp, #0x30
  433440:	bl	432f10 <ferror@plt+0x2f940>
  433444:	mov	x20, x0
  433448:	cbz	x0, 433478 <ferror@plt+0x2fea8>
  43344c:	ldrb	w0, [x0]
  433450:	cbnz	w0, 43349c <ferror@plt+0x2fecc>
  433454:	ldr	x0, [x19, #144]
  433458:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43345c:	ldr	w2, [sp, #52]
  433460:	add	x4, x4, #0xe
  433464:	mov	w3, #0x0                   	// #0
  433468:	mov	w1, #0x3                   	// #3
  43346c:	ldr	x5, [x0, #8]
  433470:	mov	x0, x19
  433474:	bl	435cf8 <ferror@plt+0x32728>
  433478:	mov	x0, x20
  43347c:	bl	4032a0 <free@plt>
  433480:	ldr	x0, [sp, #56]
  433484:	cbz	x0, 43348c <ferror@plt+0x2febc>
  433488:	bl	4032a0 <free@plt>
  43348c:	ldp	x19, x20, [sp, #16]
  433490:	ldr	x21, [sp, #32]
  433494:	ldp	x29, x30, [sp], #64
  433498:	ret
  43349c:	ldr	x0, [x19, #40]
  4334a0:	ldr	w0, [x0, #48]
  4334a4:	cmp	w0, #0xc7
  4334a8:	b.ls	4334c4 <ferror@plt+0x2fef4>  // b.plast
  4334ac:	mov	x0, x19
  4334b0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4334b4:	mov	w1, #0x3                   	// #3
  4334b8:	add	x2, x2, #0x24
  4334bc:	bl	435b3c <ferror@plt+0x3256c>
  4334c0:	b	433478 <ferror@plt+0x2fea8>
  4334c4:	mov	x0, x19
  4334c8:	bl	4333b4 <ferror@plt+0x2fde4>
  4334cc:	ldr	x6, [x19, #928]
  4334d0:	cbz	x6, 4334f4 <ferror@plt+0x2ff24>
  4334d4:	ldr	x0, [x19, #144]
  4334d8:	mov	x3, x20
  4334dc:	ldr	w1, [x19, #48]
  4334e0:	ldr	w4, [sp, #48]
  4334e4:	ldr	x2, [x0, #8]
  4334e8:	mov	x0, x19
  4334ec:	ldr	x5, [sp, #56]
  4334f0:	blr	x6
  4334f4:	ldp	w2, w4, [sp, #48]
  4334f8:	mov	w3, w21
  4334fc:	mov	x1, x20
  433500:	mov	x0, x19
  433504:	bl	43a7b0 <ferror@plt+0x371e0>
  433508:	b	433478 <ferror@plt+0x2fea8>
  43350c:	mov	w1, #0x2                   	// #2
  433510:	b	433408 <ferror@plt+0x2fe38>
  433514:	stp	x29, x30, [sp, #-32]!
  433518:	mov	x29, sp
  43351c:	ldr	x1, [x0, #40]
  433520:	ldr	w1, [x1, #48]
  433524:	str	x19, [sp, #16]
  433528:	mov	x19, x0
  43352c:	cmp	w1, #0x1
  433530:	b.ne	433558 <ferror@plt+0x2ff88>  // b.any
  433534:	mov	w1, #0x0                   	// #0
  433538:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43353c:	add	x2, x2, #0x3f
  433540:	bl	435b3c <ferror@plt+0x3256c>
  433544:	mov	w1, #0x0                   	// #0
  433548:	mov	x0, x19
  43354c:	ldr	x19, [sp, #16]
  433550:	ldp	x29, x30, [sp], #32
  433554:	b	433408 <ferror@plt+0x2fe38>
  433558:	mov	w1, #0x1                   	// #1
  43355c:	b	433548 <ferror@plt+0x2ff78>
  433560:	mov	w1, #0x0                   	// #0
  433564:	b	433408 <ferror@plt+0x2fe38>
  433568:	stp	x29, x30, [sp, #-32]!
  43356c:	mov	x29, sp
  433570:	str	x19, [sp, #16]
  433574:	mov	x19, x0
  433578:	ldrb	w3, [x0, #1160]
  43357c:	ldrb	w2, [x0, #32]
  433580:	cbz	w3, 4335d8 <ferror@plt+0x30008>
  433584:	cbnz	w2, 433594 <ferror@plt+0x2ffc4>
  433588:	ldrb	w0, [x0, #24]
  43358c:	sub	w0, w0, #0x1
  433590:	strb	w0, [x19, #24]
  433594:	ldr	x1, [x19, #144]
  433598:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43359c:	add	x0, x0, #0x668
  4335a0:	cmp	x1, x0
  4335a4:	b.eq	4335b0 <ferror@plt+0x2ffe0>  // b.none
  4335a8:	mov	x0, x19
  4335ac:	bl	446a54 <ferror@plt+0x43484>
  4335b0:	ldrb	w0, [x19, #1123]
  4335b4:	strb	wzr, [x19, #16]
  4335b8:	cmp	w0, #0x0
  4335bc:	sturh	wzr, [x19, #19]
  4335c0:	cset	w0, eq  // eq = none
  4335c4:	strb	w0, [x19, #21]
  4335c8:	str	xzr, [x19, #144]
  4335cc:	ldr	x19, [sp, #16]
  4335d0:	ldp	x29, x30, [sp], #32
  4335d4:	ret
  4335d8:	cbnz	w2, 4335b0 <ferror@plt+0x2ffe0>
  4335dc:	cbz	w1, 4335b0 <ferror@plt+0x2ffe0>
  4335e0:	bl	4333b4 <ferror@plt+0x2fde4>
  4335e4:	ldr	w0, [x19, #500]
  4335e8:	cbnz	w0, 4335b0 <ferror@plt+0x2ffe0>
  4335ec:	add	x0, x19, #0x1c8
  4335f0:	str	x0, [x19, #488]
  4335f4:	ldr	x0, [x19, #472]
  4335f8:	str	x0, [x19, #448]
  4335fc:	b	4335b0 <ferror@plt+0x2ffe0>
  433600:	stp	x29, x30, [sp, #-64]!
  433604:	mov	x29, sp
  433608:	stp	x19, x20, [sp, #16]
  43360c:	mov	x20, x0
  433610:	stp	x21, x22, [sp, #32]
  433614:	str	x23, [sp, #48]
  433618:	bl	432d68 <ferror@plt+0x2f798>
  43361c:	cbnz	x0, 43366c <ferror@plt+0x3009c>
  433620:	ldr	x0, [x20, #448]
  433624:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433628:	add	x4, x4, #0x64
  43362c:	mov	w3, #0x0                   	// #0
  433630:	mov	w1, #0x3                   	// #3
  433634:	ldur	w2, [x0, #-24]
  433638:	mov	x0, x20
  43363c:	bl	435cf8 <ferror@plt+0x32728>
  433640:	mov	w1, #0x0                   	// #0
  433644:	mov	x0, x20
  433648:	bl	432e9c <ferror@plt+0x2f8cc>
  43364c:	mov	x0, x20
  433650:	bl	4333b4 <ferror@plt+0x2fde4>
  433654:	mov	sp, x29
  433658:	ldp	x19, x20, [sp, #16]
  43365c:	ldp	x21, x22, [sp, #32]
  433660:	ldr	x23, [sp, #48]
  433664:	ldp	x29, x30, [sp], #64
  433668:	ret
  43366c:	ldr	w2, [x0, #8]
  433670:	ldr	x0, [x0, #16]
  433674:	add	w1, w2, #0x2
  433678:	add	x1, x1, #0xf
  43367c:	mov	w2, w2
  433680:	and	x1, x1, #0x1fffffff0
  433684:	sub	x2, x2, #0x1
  433688:	sub	sp, sp, x1
  43368c:	ldrb	w1, [x0]
  433690:	mov	x22, sp
  433694:	add	x2, x0, x2
  433698:	cmp	w1, #0x4c
  43369c:	cset	x1, eq  // eq = none
  4336a0:	add	x1, x1, #0x1
  4336a4:	add	x1, x0, x1
  4336a8:	mov	x0, x22
  4336ac:	cmp	x1, x2
  4336b0:	b.cs	4336e4 <ferror@plt+0x30114>  // b.hs, b.nlast
  4336b4:	ldrb	w3, [x1]
  4336b8:	cmp	w3, #0x5c
  4336bc:	b.ne	4336d8 <ferror@plt+0x30108>  // b.any
  4336c0:	ldrb	w3, [x1, #1]
  4336c4:	cmp	w3, #0x5c
  4336c8:	b.eq	4336d4 <ferror@plt+0x30104>  // b.none
  4336cc:	cmp	w3, #0x22
  4336d0:	b.ne	4336d8 <ferror@plt+0x30108>  // b.any
  4336d4:	add	x1, x1, #0x1
  4336d8:	ldrb	w3, [x1], #1
  4336dc:	strb	w3, [x0], #1
  4336e0:	b	4336ac <ferror@plt+0x300dc>
  4336e4:	strb	wzr, [x0]
  4336e8:	mov	w1, #0x0                   	// #0
  4336ec:	mov	x0, x20
  4336f0:	bl	432e9c <ferror@plt+0x2f8cc>
  4336f4:	mov	x0, x20
  4336f8:	bl	4333b4 <ferror@plt+0x2fde4>
  4336fc:	mov	x0, #0x20                  	// #32
  433700:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  433704:	mov	x19, x0
  433708:	stp	xzr, xzr, [x0]
  43370c:	stp	xzr, xzr, [x0, #16]
  433710:	mov	x0, x22
  433714:	bl	402d50 <strlen@plt>
  433718:	add	x0, x0, #0x1
  43371c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  433720:	mov	x21, x0
  433724:	mov	x1, x22
  433728:	str	x0, [x19, #8]
  43372c:	bl	403360 <strcpy@plt>
  433730:	ldr	x0, [x20, #1400]
  433734:	mov	x1, x21
  433738:	str	x0, [x19]
  43373c:	mov	x0, x20
  433740:	bl	43bf38 <ferror@plt+0x38968>
  433744:	mov	x22, x0
  433748:	ldrb	w0, [x0, #18]
  43374c:	tst	x0, #0x3
  433750:	b.ne	433768 <ferror@plt+0x30198>  // b.any
  433754:	ldrb	w0, [x19, #28]
  433758:	orr	w0, w0, #0x4
  43375c:	strb	w0, [x19, #28]
  433760:	str	x19, [x20, #1400]
  433764:	b	433654 <ferror@plt+0x30084>
  433768:	mov	x1, x22
  43376c:	mov	x0, x20
  433770:	bl	444f3c <ferror@plt+0x4196c>
  433774:	mov	x23, x0
  433778:	bl	402d50 <strlen@plt>
  43377c:	mov	x21, x0
  433780:	add	x0, x0, #0x2
  433784:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  433788:	add	x3, x0, x21
  43378c:	mov	w1, #0xa                   	// #10
  433790:	strb	w1, [x0, x21]
  433794:	str	x0, [x19, #16]
  433798:	strb	wzr, [x3, #1]
  43379c:	ldr	x1, [x22, #24]
  4337a0:	ldrb	w3, [x1, #19]
  4337a4:	ldr	w2, [x1, #8]
  4337a8:	str	w2, [x19, #24]
  4337ac:	ubfx	x2, x3, #5, #1
  4337b0:	ldrb	w1, [x19, #28]
  4337b4:	ubfx	x3, x3, #4, #1
  4337b8:	ubfiz	w2, w2, #1, #7
  4337bc:	orr	w2, w2, w3
  4337c0:	bfxil	w1, w2, #0, #2
  4337c4:	mov	x2, x21
  4337c8:	strb	w1, [x19, #28]
  4337cc:	mov	x1, x23
  4337d0:	bl	402cd0 <memcpy@plt>
  4337d4:	b	433760 <ferror@plt+0x30190>
  4337d8:	stp	x29, x30, [sp, #-32]!
  4337dc:	mov	x29, sp
  4337e0:	ldr	x1, [x0]
  4337e4:	stp	x19, x20, [sp, #16]
  4337e8:	ldr	x19, [x1, #96]
  4337ec:	cbnz	x19, 433808 <ferror@plt+0x30238>
  4337f0:	ldp	x19, x20, [sp, #16]
  4337f4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4337f8:	ldp	x29, x30, [sp], #32
  4337fc:	add	x2, x2, #0x89
  433800:	mov	w1, #0x3                   	// #3
  433804:	b	435b3c <ferror@plt+0x3256c>
  433808:	ldr	w1, [x19, #28]
  43380c:	mov	x20, x0
  433810:	cmp	w1, #0x5
  433814:	b.ne	433844 <ferror@plt+0x30274>  // b.any
  433818:	mov	w1, #0x3                   	// #3
  43381c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433820:	add	x2, x2, #0x9b
  433824:	bl	435b3c <ferror@plt+0x3256c>
  433828:	ldr	w2, [x19, #8]
  43382c:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433830:	mov	x0, x20
  433834:	add	x4, x4, #0xad
  433838:	mov	w3, #0x0                   	// #0
  43383c:	mov	w1, #0x3                   	// #3
  433840:	bl	435cf8 <ferror@plt+0x32728>
  433844:	mov	w0, #0x9                   	// #9
  433848:	str	w0, [x19, #28]
  43384c:	ldrb	w0, [x19, #24]
  433850:	cbz	w0, 43386c <ferror@plt+0x3029c>
  433854:	mov	w0, #0x1                   	// #1
  433858:	strb	w0, [x20, #18]
  43385c:	str	xzr, [x19, #16]
  433860:	ldp	x19, x20, [sp, #16]
  433864:	ldp	x29, x30, [sp], #32
  433868:	ret
  43386c:	mov	w1, #0x0                   	// #0
  433870:	mov	x0, x20
  433874:	bl	437b68 <ferror@plt+0x34598>
  433878:	eor	w1, w0, #0x1
  43387c:	strb	w1, [x20, #18]
  433880:	strb	w0, [x19, #24]
  433884:	b	43385c <ferror@plt+0x3028c>
  433888:	stp	x29, x30, [sp, #-48]!
  43388c:	mov	x29, sp
  433890:	str	x21, [sp, #32]
  433894:	ldr	x21, [x0]
  433898:	stp	x19, x20, [sp, #16]
  43389c:	ldr	x20, [x21, #96]
  4338a0:	cbnz	x20, 4338c0 <ferror@plt+0x302f0>
  4338a4:	ldp	x19, x20, [sp, #16]
  4338a8:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4338ac:	ldr	x21, [sp, #32]
  4338b0:	add	x2, x2, #0xc8
  4338b4:	ldp	x29, x30, [sp], #48
  4338b8:	mov	w1, #0x3                   	// #3
  4338bc:	b	435b3c <ferror@plt+0x3256c>
  4338c0:	ldrb	w1, [x20, #25]
  4338c4:	mov	x19, x0
  4338c8:	cbnz	w1, 4338e0 <ferror@plt+0x30310>
  4338cc:	ldrb	w1, [x0, #1140]
  4338d0:	cbz	w1, 4338e0 <ferror@plt+0x30310>
  4338d4:	mov	w2, #0x8                   	// #8
  4338d8:	mov	w1, #0x0                   	// #0
  4338dc:	bl	432e28 <ferror@plt+0x2f858>
  4338e0:	ldr	x0, [x20]
  4338e4:	cbnz	x0, 4338fc <ferror@plt+0x3032c>
  4338e8:	ldr	x1, [x20, #16]
  4338ec:	cbz	x1, 4338fc <ferror@plt+0x3032c>
  4338f0:	mov	w2, #0x1                   	// #1
  4338f4:	str	x1, [x19, #424]
  4338f8:	strb	w2, [x19, #440]
  4338fc:	str	x0, [x21, #96]
  433900:	ldrb	w0, [x20, #25]
  433904:	strb	w0, [x19, #18]
  433908:	add	x0, x19, #0x328
  43390c:	ldr	x1, [x0, #8]
  433910:	cmp	x1, x20
  433914:	b.cs	433938 <ferror@plt+0x30368>  // b.hs, b.nlast
  433918:	ldr	x1, [x0, #32]
  43391c:	cmp	x1, x20
  433920:	b.ls	433938 <ferror@plt+0x30368>  // b.plast
  433924:	ldr	x21, [sp, #32]
  433928:	stp	x20, x20, [x0, #16]
  43392c:	ldp	x19, x20, [sp, #16]
  433930:	ldp	x29, x30, [sp], #48
  433934:	ret
  433938:	mov	x1, x20
  43393c:	ldp	x19, x20, [sp, #16]
  433940:	ldr	x21, [sp, #32]
  433944:	ldp	x29, x30, [sp], #48
  433948:	b	45c37c <_obstack_free@@Base>
  43394c:	ldr	x1, [x0, #40]
  433950:	ldr	w1, [x1, #48]
  433954:	cmp	w1, #0x1
  433958:	b.ne	43396c <ferror@plt+0x3039c>  // b.any
  43395c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433960:	mov	w1, #0x0                   	// #0
  433964:	add	x2, x2, #0xdb
  433968:	b	435b3c <ferror@plt+0x3256c>
  43396c:	stp	x29, x30, [sp, #-32]!
  433970:	mov	w1, #0x0                   	// #0
  433974:	mov	x29, sp
  433978:	str	x19, [sp, #16]
  43397c:	mov	x19, x0
  433980:	bl	432e9c <ferror@plt+0x2f8cc>
  433984:	mov	x0, x19
  433988:	bl	4333b4 <ferror@plt+0x2fde4>
  43398c:	mov	x0, x19
  433990:	mov	w2, #0x0                   	// #0
  433994:	ldr	x19, [sp, #16]
  433998:	mov	w1, #0x1                   	// #1
  43399c:	ldp	x29, x30, [sp], #32
  4339a0:	b	43ab8c <ferror@plt+0x375bc>
  4339a4:	stp	x29, x30, [sp, #-96]!
  4339a8:	mov	x29, sp
  4339ac:	stp	x19, x20, [sp, #16]
  4339b0:	mov	w20, w1
  4339b4:	mov	x19, x0
  4339b8:	stp	x21, x22, [sp, #32]
  4339bc:	stp	x23, x24, [sp, #48]
  4339c0:	mov	x24, x2
  4339c4:	stp	x25, x26, [sp, #64]
  4339c8:	stp	x27, x28, [sp, #80]
  4339cc:	ldrb	w1, [x0, #24]
  4339d0:	add	w1, w1, #0x1
  4339d4:	strb	w1, [x0, #24]
  4339d8:	str	xzr, [x2]
  4339dc:	bl	444ea4 <ferror@plt+0x418d4>
  4339e0:	mov	x21, x0
  4339e4:	ldrb	w0, [x0, #4]
  4339e8:	cmp	w0, #0x16
  4339ec:	b.ne	433a08 <ferror@plt+0x30438>  // b.any
  4339f0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4339f4:	add	x2, x2, #0x10e
  4339f8:	mov	x0, x19
  4339fc:	mov	w1, #0x3                   	// #3
  433a00:	bl	435b3c <ferror@plt+0x3256c>
  433a04:	b	433a30 <ferror@plt+0x30460>
  433a08:	ldr	w22, [x21]
  433a0c:	cmp	w0, #0x35
  433a10:	b.eq	433a60 <ferror@plt+0x30490>  // b.none
  433a14:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433a18:	add	x4, x4, #0x12a
  433a1c:	mov	w2, w22
  433a20:	mov	x0, x19
  433a24:	mov	w3, #0x0                   	// #0
  433a28:	mov	w1, #0x3                   	// #3
  433a2c:	bl	435cf8 <ferror@plt+0x32728>
  433a30:	mov	x0, #0x0                   	// #0
  433a34:	ldrb	w1, [x19, #24]
  433a38:	sub	w1, w1, #0x1
  433a3c:	strb	w1, [x19, #24]
  433a40:	mov	sp, x29
  433a44:	ldp	x19, x20, [sp, #16]
  433a48:	ldp	x21, x22, [sp, #32]
  433a4c:	ldp	x23, x24, [sp, #48]
  433a50:	ldp	x25, x26, [sp, #64]
  433a54:	ldp	x27, x28, [sp, #80]
  433a58:	ldp	x29, x30, [sp], #96
  433a5c:	ret
  433a60:	mov	x0, x19
  433a64:	bl	444ea4 <ferror@plt+0x418d4>
  433a68:	ldrb	w0, [x0, #4]
  433a6c:	cmp	w0, #0x14
  433a70:	b.eq	433af4 <ferror@plt+0x30524>  // b.none
  433a74:	cmp	w20, #0x4
  433a78:	b.ne	433ad8 <ferror@plt+0x30508>  // b.any
  433a7c:	mov	x0, x19
  433a80:	mov	w1, #0x1                   	// #1
  433a84:	bl	442800 <ferror@plt+0x3f230>
  433a88:	ldr	x0, [x21, #8]
  433a8c:	mov	w1, #0x23                  	// #35
  433a90:	ldr	w2, [x0, #8]
  433a94:	add	w0, w2, #0x1
  433a98:	add	w22, w2, #0x1
  433a9c:	add	x0, x0, #0xf
  433aa0:	mov	w2, w2
  433aa4:	and	x0, x0, #0x1fffffff0
  433aa8:	sub	sp, sp, x0
  433aac:	mov	x20, sp
  433ab0:	mov	x0, x20
  433ab4:	strb	w1, [x0], #1
  433ab8:	ldr	x1, [x21, #8]
  433abc:	ldr	x1, [x1]
  433ac0:	bl	402cd0 <memcpy@plt>
  433ac4:	mov	w2, w22
  433ac8:	mov	x1, x20
  433acc:	mov	x0, x19
  433ad0:	bl	43b16c <ferror@plt+0x37b9c>
  433ad4:	b	433a34 <ferror@plt+0x30464>
  433ad8:	cmp	w20, #0x11
  433adc:	b.ne	433ae8 <ferror@plt+0x30518>  // b.any
  433ae0:	cmp	w0, #0x16
  433ae4:	b.eq	433a88 <ferror@plt+0x304b8>  // b.none
  433ae8:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433aec:	add	x4, x4, #0x14a
  433af0:	b	433a1c <ferror@plt+0x3044c>
  433af4:	ldr	x1, [x19, #56]
  433af8:	ldr	x0, [x1, #24]
  433afc:	ldr	x1, [x1, #16]
  433b00:	sub	x0, x0, x1
  433b04:	cmp	x0, #0x2f
  433b08:	b.hi	433b1c <ferror@plt+0x3054c>  // b.pmore
  433b0c:	add	x1, x19, #0x38
  433b10:	mov	x0, x19
  433b14:	mov	x2, #0x30                  	// #48
  433b18:	bl	43cd88 <ferror@plt+0x397b8>
  433b1c:	ldr	x0, [x19, #56]
  433b20:	mov	w1, #0x1                   	// #1
  433b24:	add	x28, x19, #0x38
  433b28:	mov	w22, #0x0                   	// #0
  433b2c:	mov	w26, #0x18                  	// #24
  433b30:	mov	x27, #0x48                  	// #72
  433b34:	ldr	x2, [x0, #16]
  433b38:	mov	x0, x19
  433b3c:	mov	x25, #0x18                  	// #24
  433b40:	bl	442bcc <ferror@plt+0x3f5fc>
  433b44:	mov	x20, x0
  433b48:	str	xzr, [x0]
  433b4c:	mov	x0, x19
  433b50:	bl	444ea4 <ferror@plt+0x418d4>
  433b54:	mov	x23, x0
  433b58:	ldrb	w0, [x0, #4]
  433b5c:	cmp	w0, #0x15
  433b60:	b.eq	433bcc <ferror@plt+0x305fc>  // b.none
  433b64:	cmp	w0, #0x16
  433b68:	b.ne	433b78 <ferror@plt+0x305a8>  // b.any
  433b6c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433b70:	add	x2, x2, #0x166
  433b74:	b	4339f8 <ferror@plt+0x30428>
  433b78:	ldr	x1, [x19, #56]
  433b7c:	ldr	x0, [x1, #24]
  433b80:	ldr	x1, [x1, #16]
  433b84:	sub	x0, x0, x1
  433b88:	umaddl	x1, w22, w26, x27
  433b8c:	cmp	x0, x1
  433b90:	b.cs	433ba4 <ferror@plt+0x305d4>  // b.hs, b.nlast
  433b94:	mov	x1, x28
  433b98:	mov	x0, x19
  433b9c:	mov	x2, #0x18                  	// #24
  433ba0:	bl	43cd88 <ferror@plt+0x397b8>
  433ba4:	ldr	x0, [x19, #56]
  433ba8:	mov	w2, w22
  433bac:	add	w22, w22, #0x1
  433bb0:	ldr	x20, [x0, #16]
  433bb4:	ldp	x0, x1, [x23]
  433bb8:	madd	x2, x2, x25, x20
  433bbc:	stp	x0, x1, [x2, #24]
  433bc0:	ldr	x0, [x23, #16]
  433bc4:	str	x0, [x2, #40]
  433bc8:	b	433b4c <ferror@plt+0x3057c>
  433bcc:	cbnz	w22, 433bdc <ferror@plt+0x3060c>
  433bd0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433bd4:	add	x2, x2, #0x185
  433bd8:	b	4339f8 <ferror@plt+0x30428>
  433bdc:	ldrh	w0, [x20, #30]
  433be0:	str	w22, [x20, #12]
  433be4:	and	w0, w0, #0xfffffffe
  433be8:	strh	w0, [x20, #30]
  433bec:	str	x20, [x24]
  433bf0:	b	433a88 <ferror@plt+0x304b8>
  433bf4:	stp	x29, x30, [sp, #-48]!
  433bf8:	mov	w1, #0x11                  	// #17
  433bfc:	mov	x29, sp
  433c00:	add	x2, sp, #0x28
  433c04:	str	x19, [sp, #16]
  433c08:	mov	x19, x0
  433c0c:	bl	4339a4 <ferror@plt+0x303d4>
  433c10:	cbz	x0, 433c3c <ferror@plt+0x3066c>
  433c14:	ldr	x1, [sp, #40]
  433c18:	cbz	x1, 433c48 <ferror@plt+0x30678>
  433c1c:	bl	4326a8 <ferror@plt+0x2f0d8>
  433c20:	ldr	x1, [x0]
  433c24:	cbz	x1, 433c30 <ferror@plt+0x30660>
  433c28:	ldr	x1, [x1]
  433c2c:	str	x1, [x0]
  433c30:	mov	x0, x19
  433c34:	mov	w1, #0x0                   	// #0
  433c38:	bl	432e9c <ferror@plt+0x2f8cc>
  433c3c:	ldr	x19, [sp, #16]
  433c40:	ldp	x29, x30, [sp], #48
  433c44:	ret
  433c48:	bl	442a80 <ferror@plt+0x3f4b0>
  433c4c:	b	433c3c <ferror@plt+0x3066c>
  433c50:	stp	x29, x30, [sp, #-48]!
  433c54:	mov	w1, #0x10                  	// #16
  433c58:	mov	x29, sp
  433c5c:	add	x2, sp, #0x28
  433c60:	stp	x19, x20, [sp, #16]
  433c64:	mov	x20, x0
  433c68:	bl	4339a4 <ferror@plt+0x303d4>
  433c6c:	cbz	x0, 433ca0 <ferror@plt+0x306d0>
  433c70:	ldr	x1, [sp, #40]
  433c74:	mov	x19, x0
  433c78:	bl	4326a8 <ferror@plt+0x2f0d8>
  433c7c:	ldr	x0, [x0]
  433c80:	cbz	x0, 433cac <ferror@plt+0x306dc>
  433c84:	ldr	x3, [x19]
  433c88:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433c8c:	mov	x0, x20
  433c90:	add	x2, x2, #0x1a1
  433c94:	add	x3, x3, #0x1
  433c98:	mov	w1, #0x0                   	// #0
  433c9c:	bl	435b3c <ferror@plt+0x3256c>
  433ca0:	ldp	x19, x20, [sp, #16]
  433ca4:	ldp	x29, x30, [sp], #48
  433ca8:	ret
  433cac:	ldr	x0, [sp, #40]
  433cb0:	mov	x1, #0x18                  	// #24
  433cb4:	ldr	w0, [x0, #12]
  433cb8:	madd	x1, x0, x1, x1
  433cbc:	mov	x0, x20
  433cc0:	bl	43f28c <ferror@plt+0x3bcbc>
  433cc4:	str	x0, [sp, #40]
  433cc8:	ldr	x1, [x19, #24]
  433ccc:	str	x1, [x0]
  433cd0:	str	x0, [x19, #24]
  433cd4:	mov	w1, #0x0                   	// #0
  433cd8:	mov	x0, x20
  433cdc:	bl	432e9c <ferror@plt+0x2f8cc>
  433ce0:	b	433ca0 <ferror@plt+0x306d0>
  433ce4:	stp	x29, x30, [sp, #-48]!
  433ce8:	mov	x29, sp
  433cec:	stp	x19, x20, [sp, #16]
  433cf0:	mov	x19, x0
  433cf4:	str	x21, [sp, #32]
  433cf8:	ldrb	w1, [x0, #18]
  433cfc:	cbz	w1, 433d24 <ferror@plt+0x30754>
  433d00:	mov	w21, #0x1                   	// #1
  433d04:	mov	w1, w21
  433d08:	mov	x0, x19
  433d0c:	ldp	x19, x20, [sp, #16]
  433d10:	mov	x3, #0x0                   	// #0
  433d14:	ldr	x21, [sp, #32]
  433d18:	mov	w2, #0x3                   	// #3
  433d1c:	ldp	x29, x30, [sp], #48
  433d20:	b	4329d4 <ferror@plt+0x2f404>
  433d24:	mov	w1, #0x0                   	// #0
  433d28:	bl	432450 <ferror@plt+0x2ee80>
  433d2c:	mov	x20, x0
  433d30:	cbz	x0, 433d00 <ferror@plt+0x30730>
  433d34:	ldrh	w21, [x0, #18]
  433d38:	ldrb	w0, [x0, #18]
  433d3c:	ubfx	x2, x21, #2, #8
  433d40:	ubfx	x21, x21, #8, #1
  433d44:	tst	x0, #0x2
  433d48:	and	w0, w0, #0x3
  433d4c:	csinc	w21, w21, wzr, ne  // ne = any
  433d50:	cmp	w0, #0x2
  433d54:	b.ne	433d68 <ferror@plt+0x30798>  // b.any
  433d58:	ldr	x1, [x20, #24]
  433d5c:	ldrb	w0, [x1, #19]
  433d60:	orr	w0, w0, #0x20
  433d64:	strb	w0, [x1, #19]
  433d68:	tbnz	w2, #5, 433d78 <ferror@plt+0x307a8>
  433d6c:	mov	x1, x20
  433d70:	mov	x0, x19
  433d74:	bl	443680 <ferror@plt+0x400b0>
  433d78:	ldr	x3, [x19, #1032]
  433d7c:	cbz	x3, 433d90 <ferror@plt+0x307c0>
  433d80:	ldr	w1, [x19, #48]
  433d84:	mov	x2, x20
  433d88:	mov	x0, x19
  433d8c:	blr	x3
  433d90:	mov	x0, x19
  433d94:	mov	w1, #0x0                   	// #0
  433d98:	bl	432e9c <ferror@plt+0x2f8cc>
  433d9c:	b	433d04 <ferror@plt+0x30734>
  433da0:	stp	x29, x30, [sp, #-32]!
  433da4:	mov	x29, sp
  433da8:	ldr	x1, [x0]
  433dac:	stp	x19, x20, [sp, #16]
  433db0:	ldr	x19, [x1, #96]
  433db4:	cbnz	x19, 433dd0 <ferror@plt+0x30800>
  433db8:	ldp	x19, x20, [sp, #16]
  433dbc:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433dc0:	ldp	x29, x30, [sp], #32
  433dc4:	add	x2, x2, #0x1b2
  433dc8:	mov	w1, #0x3                   	// #3
  433dcc:	b	435b3c <ferror@plt+0x3256c>
  433dd0:	ldr	w1, [x19, #28]
  433dd4:	mov	x20, x0
  433dd8:	cmp	w1, #0x5
  433ddc:	b.ne	433e0c <ferror@plt+0x3083c>  // b.any
  433de0:	mov	w1, #0x3                   	// #3
  433de4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433de8:	add	x2, x2, #0x1c4
  433dec:	bl	435b3c <ferror@plt+0x3256c>
  433df0:	ldr	w2, [x19, #8]
  433df4:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  433df8:	mov	x0, x20
  433dfc:	add	x4, x4, #0xad
  433e00:	mov	w3, #0x0                   	// #0
  433e04:	mov	w1, #0x3                   	// #3
  433e08:	bl	435cf8 <ferror@plt+0x32728>
  433e0c:	mov	w0, #0x5                   	// #5
  433e10:	str	w0, [x19, #28]
  433e14:	ldrb	w0, [x19, #24]
  433e18:	strb	w0, [x20, #18]
  433e1c:	mov	w0, #0x1                   	// #1
  433e20:	strb	w0, [x19, #24]
  433e24:	ldrb	w0, [x19, #25]
  433e28:	str	xzr, [x19, #16]
  433e2c:	cbnz	w0, 433e50 <ferror@plt+0x30880>
  433e30:	ldrb	w0, [x20, #1140]
  433e34:	cbz	w0, 433e50 <ferror@plt+0x30880>
  433e38:	mov	x0, x20
  433e3c:	mov	w2, #0x8                   	// #8
  433e40:	ldp	x19, x20, [sp, #16]
  433e44:	mov	w1, #0x0                   	// #0
  433e48:	ldp	x29, x30, [sp], #32
  433e4c:	b	432e28 <ferror@plt+0x2f858>
  433e50:	ldp	x19, x20, [sp, #16]
  433e54:	ldp	x29, x30, [sp], #32
  433e58:	ret
  433e5c:	stp	x29, x30, [sp, #-80]!
  433e60:	mov	x29, sp
  433e64:	stp	x19, x20, [sp, #16]
  433e68:	mov	x19, x0
  433e6c:	stp	x21, x22, [sp, #32]
  433e70:	ldrb	w1, [x0, #24]
  433e74:	str	wzr, [sp, #52]
  433e78:	add	w1, w1, #0x1
  433e7c:	strb	w1, [x0, #24]
  433e80:	add	x1, sp, #0x34
  433e84:	bl	444f38 <ferror@plt+0x41968>
  433e88:	mov	x21, x0
  433e8c:	ldp	x0, x1, [x0]
  433e90:	stp	x0, x1, [sp, #56]
  433e94:	ldr	x0, [x21, #16]
  433e98:	str	x0, [sp, #72]
  433e9c:	ldrb	w0, [x21, #4]
  433ea0:	cmp	w0, #0x35
  433ea4:	b.ne	433f24 <ferror@plt+0x30954>  // b.any
  433ea8:	ldr	x0, [x21, #8]
  433eac:	ldr	x20, [x19, #896]
  433eb0:	cbz	x20, 433f24 <ferror@plt+0x30954>
  433eb4:	ldr	x1, [x20, #8]
  433eb8:	cmp	x0, x1
  433ebc:	b.eq	43402c <ferror@plt+0x30a5c>  // b.none
  433ec0:	ldr	x20, [x20]
  433ec4:	b	433eb0 <ferror@plt+0x308e0>
  433ec8:	ldr	x3, [x19, #904]
  433ecc:	cbz	x3, 433ee0 <ferror@plt+0x30910>
  433ed0:	mov	x1, x21
  433ed4:	mov	x0, x19
  433ed8:	mov	w2, #0x0                   	// #0
  433edc:	blr	x3
  433ee0:	ldrb	w0, [x20, #19]
  433ee4:	cbz	w0, 433ef4 <ferror@plt+0x30924>
  433ee8:	ldrb	w0, [x19, #24]
  433eec:	sub	w0, w0, #0x1
  433ef0:	strb	w0, [x19, #24]
  433ef4:	ldr	x1, [x20, #24]
  433ef8:	mov	x0, x19
  433efc:	blr	x1
  433f00:	ldrb	w0, [x20, #19]
  433f04:	cbnz	w0, 43401c <ferror@plt+0x30a4c>
  433f08:	ldrb	w0, [x19, #24]
  433f0c:	sub	w0, w0, #0x1
  433f10:	strb	w0, [x19, #24]
  433f14:	ldp	x19, x20, [sp, #16]
  433f18:	ldp	x21, x22, [sp, #32]
  433f1c:	ldp	x29, x30, [sp], #80
  433f20:	ret
  433f24:	mov	w1, #0x1                   	// #1
  433f28:	ldr	x0, [x19, #960]
  433f2c:	cbz	x0, 433f08 <ferror@plt+0x30938>
  433f30:	cmp	w1, #0x1
  433f34:	b.eq	433f44 <ferror@plt+0x30974>  // b.none
  433f38:	ldr	x0, [x19, #136]
  433f3c:	ldr	x0, [x0, #8]
  433f40:	cbnz	x0, 433f60 <ferror@plt+0x30990>
  433f44:	mov	x0, x19
  433f48:	bl	442800 <ferror@plt+0x3f230>
  433f4c:	ldr	w1, [x19, #48]
  433f50:	mov	x0, x19
  433f54:	ldr	x2, [x19, #960]
  433f58:	blr	x2
  433f5c:	b	433f08 <ferror@plt+0x30938>
  433f60:	mov	x0, #0x30                  	// #48
  433f64:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  433f68:	mov	x2, x0
  433f6c:	mov	w3, #0x2                   	// #2
  433f70:	ldp	x0, x1, [sp, #56]
  433f74:	stp	x0, x1, [x2]
  433f78:	ldr	x1, [sp, #72]
  433f7c:	str	x1, [x2, #16]
  433f80:	lsr	x0, x0, #48
  433f84:	orr	w0, w0, #0x400
  433f88:	strh	w0, [x2, #6]
  433f8c:	mov	x0, x19
  433f90:	ldp	x4, x5, [x21]
  433f94:	stp	x4, x5, [x2, #24]
  433f98:	ldr	x1, [x21, #16]
  433f9c:	str	x1, [x2, #40]
  433fa0:	ldrh	w1, [x2, #30]
  433fa4:	orr	w1, w1, #0x400
  433fa8:	strh	w1, [x2, #30]
  433fac:	mov	x1, #0x0                   	// #0
  433fb0:	bl	442430 <ferror@plt+0x3ee60>
  433fb4:	b	433f4c <ferror@plt+0x3097c>
  433fb8:	mov	x20, #0x0                   	// #0
  433fbc:	cbnz	w22, 433fd0 <ferror@plt+0x30a00>
  433fc0:	mov	x21, x0
  433fc4:	mov	w1, #0x2                   	// #2
  433fc8:	b	433f28 <ferror@plt+0x30958>
  433fcc:	cbz	w22, 433fe0 <ferror@plt+0x30a10>
  433fd0:	ldrb	w1, [x19, #24]
  433fd4:	add	w1, w1, #0x1
  433fd8:	strb	w1, [x19, #24]
  433fdc:	cbz	x20, 433fc0 <ferror@plt+0x309f0>
  433fe0:	ldrb	w0, [x20, #18]
  433fe4:	cbz	w0, 433ec8 <ferror@plt+0x308f8>
  433fe8:	ldr	w0, [sp, #52]
  433fec:	str	w0, [x19, #152]
  433ff0:	mov	w0, #0x51                  	// #81
  433ff4:	strb	w0, [x19, #156]
  433ff8:	ldrh	w0, [x21, #6]
  433ffc:	strh	w0, [x19, #158]
  434000:	ldr	w0, [x20, #24]
  434004:	str	w0, [x19, #160]
  434008:	mov	w0, #0x1                   	// #1
  43400c:	strb	w0, [x19, #32]
  434010:	ldrb	w0, [x20, #19]
  434014:	strb	w0, [x19, #33]
  434018:	cbnz	w0, 433f08 <ferror@plt+0x30938>
  43401c:	ldrb	w0, [x19, #24]
  434020:	add	w0, w0, #0x1
  434024:	strb	w0, [x19, #24]
  434028:	b	433f08 <ferror@plt+0x30938>
  43402c:	ldrb	w0, [x20, #16]
  434030:	cbz	w0, 433fe0 <ferror@plt+0x30a10>
  434034:	ldrb	w22, [x20, #19]
  434038:	cbz	w22, 434048 <ferror@plt+0x30a78>
  43403c:	ldrb	w0, [x19, #24]
  434040:	sub	w0, w0, #0x1
  434044:	strb	w0, [x19, #24]
  434048:	mov	x0, x19
  43404c:	bl	444ea4 <ferror@plt+0x418d4>
  434050:	ldrb	w1, [x0, #4]
  434054:	cmp	w1, #0x35
  434058:	b.ne	433fb8 <ferror@plt+0x309e8>  // b.any
  43405c:	ldr	x1, [x0, #8]
  434060:	ldr	x20, [x20, #24]
  434064:	cbz	x20, 433fb8 <ferror@plt+0x309e8>
  434068:	ldr	x2, [x20, #8]
  43406c:	cmp	x1, x2
  434070:	b.eq	433fcc <ferror@plt+0x309fc>  // b.none
  434074:	ldr	x20, [x20]
  434078:	b	434064 <ferror@plt+0x30a94>
  43407c:	stp	x29, x30, [sp, #-64]!
  434080:	mov	x29, sp
  434084:	stp	x19, x20, [sp, #16]
  434088:	mov	x20, x1
  43408c:	stp	x21, x22, [sp, #32]
  434090:	mov	x22, x2
  434094:	stp	x23, x24, [sp, #48]
  434098:	mov	x24, x0
  43409c:	and	w23, w3, #0xff
  4340a0:	cbz	x1, 4340dc <ferror@plt+0x30b0c>
  4340a4:	mov	x0, x1
  4340a8:	bl	402d50 <strlen@plt>
  4340ac:	mov	x1, x20
  4340b0:	mov	w2, w0
  4340b4:	mov	x0, x24
  4340b8:	bl	43b16c <ferror@plt+0x37b9c>
  4340bc:	ldr	x5, [x24, #896]
  4340c0:	mov	x21, x0
  4340c4:	cbz	x5, 43417c <ferror@plt+0x30bac>
  4340c8:	ldr	x0, [x5, #8]
  4340cc:	cmp	x21, x0
  4340d0:	b.eq	4341ec <ferror@plt+0x30c1c>  // b.none
  4340d4:	ldr	x5, [x5]
  4340d8:	b	4340c4 <ferror@plt+0x30af4>
  4340dc:	add	x19, x0, #0x380
  4340e0:	cbz	w23, 4341b4 <ferror@plt+0x30be4>
  4340e4:	mov	x3, x2
  4340e8:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4340ec:	add	x2, x2, #0x21b
  4340f0:	mov	w1, #0x4                   	// #4
  4340f4:	bl	435b3c <ferror@plt+0x3256c>
  4340f8:	b	43421c <ferror@plt+0x30c4c>
  4340fc:	cbz	x20, 434120 <ferror@plt+0x30b50>
  434100:	mov	x4, x22
  434104:	mov	x3, x20
  434108:	mov	x0, x24
  43410c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434110:	mov	w1, #0x4                   	// #4
  434114:	add	x2, x2, #0x291
  434118:	bl	435b3c <ferror@plt+0x3256c>
  43411c:	b	434218 <ferror@plt+0x30c48>
  434120:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434124:	mov	x3, x22
  434128:	add	x2, x2, #0x2b5
  43412c:	mov	x0, x24
  434130:	mov	w1, #0x4                   	// #4
  434134:	b	4340f4 <ferror@plt+0x30b24>
  434138:	ldrb	w0, [x1, #16]
  43413c:	cbz	w0, 4340fc <ferror@plt+0x30b2c>
  434140:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434144:	add	x2, x2, #0x258
  434148:	ldr	x3, [x21]
  43414c:	b	43420c <ferror@plt+0x30c3c>
  434150:	mov	x0, x24
  434154:	mov	x1, #0x20                  	// #32
  434158:	bl	43f234 <ferror@plt+0x3bc64>
  43415c:	mov	x20, x0
  434160:	stp	xzr, xzr, [x0]
  434164:	stp	xzr, xzr, [x0, #16]
  434168:	ldr	x0, [x19]
  43416c:	str	x0, [x20]
  434170:	str	x20, [x19]
  434174:	str	x21, [x20, #8]
  434178:	b	43421c <ferror@plt+0x30c4c>
  43417c:	mov	x1, #0x20                  	// #32
  434180:	mov	x0, x24
  434184:	bl	43f234 <ferror@plt+0x3bc64>
  434188:	stp	xzr, xzr, [x0]
  43418c:	mov	x5, x0
  434190:	stp	xzr, xzr, [x0, #16]
  434194:	ldr	x1, [x24, #896]
  434198:	str	x1, [x0]
  43419c:	str	x0, [x24, #896]
  4341a0:	mov	w1, #0x1                   	// #1
  4341a4:	str	x21, [x0, #8]
  4341a8:	strb	w1, [x0, #16]
  4341ac:	strb	w23, [x0, #19]
  4341b0:	add	x19, x5, #0x18
  4341b4:	mov	x0, x22
  4341b8:	bl	402d50 <strlen@plt>
  4341bc:	mov	x1, x22
  4341c0:	mov	w2, w0
  4341c4:	mov	x0, x24
  4341c8:	bl	43b16c <ferror@plt+0x37b9c>
  4341cc:	ldr	x1, [x19]
  4341d0:	mov	x21, x0
  4341d4:	cbz	x1, 434150 <ferror@plt+0x30b80>
  4341d8:	ldr	x0, [x1, #8]
  4341dc:	cmp	x21, x0
  4341e0:	b.eq	434138 <ferror@plt+0x30b68>  // b.none
  4341e4:	ldr	x1, [x1]
  4341e8:	b	4341d4 <ferror@plt+0x30c04>
  4341ec:	ldrb	w1, [x5, #16]
  4341f0:	cbz	w1, 434140 <ferror@plt+0x30b70>
  4341f4:	ldrb	w0, [x5, #19]
  4341f8:	cmp	w0, w23
  4341fc:	b.eq	4341b0 <ferror@plt+0x30be0>  // b.none
  434200:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434204:	mov	x3, x20
  434208:	add	x2, x2, #0x1d6
  43420c:	mov	x0, x24
  434210:	mov	w1, #0x4                   	// #4
  434214:	bl	435b3c <ferror@plt+0x3256c>
  434218:	mov	x20, #0x0                   	// #0
  43421c:	mov	x0, x20
  434220:	ldp	x19, x20, [sp, #16]
  434224:	ldp	x21, x22, [sp, #32]
  434228:	ldp	x23, x24, [sp, #48]
  43422c:	ldp	x29, x30, [sp], #64
  434230:	ret
  434234:	stp	x29, x30, [sp, #-32]!
  434238:	mov	x29, sp
  43423c:	str	x19, [sp, #16]
  434240:	mov	x19, x3
  434244:	mov	w3, #0x0                   	// #0
  434248:	bl	43407c <ferror@plt+0x30aac>
  43424c:	mov	w1, #0x1                   	// #1
  434250:	strb	w1, [x0, #17]
  434254:	str	x19, [x0, #24]
  434258:	ldr	x19, [sp, #16]
  43425c:	ldp	x29, x30, [sp], #32
  434260:	ret
  434264:	stp	x29, x30, [sp, #-240]!
  434268:	mov	x29, sp
  43426c:	stp	x19, x20, [sp, #16]
  434270:	mov	x19, x0
  434274:	stp	x21, x22, [sp, #32]
  434278:	stp	x23, x24, [sp, #48]
  43427c:	mov	w24, w1
  434280:	ldrb	w22, [x0, #27]
  434284:	ldrb	w23, [x0, #25]
  434288:	cbz	w22, 434290 <ferror@plt+0x30cc0>
  43428c:	strb	wzr, [x0, #24]
  434290:	cbz	w23, 4342b4 <ferror@plt+0x30ce4>
  434294:	ldrb	w0, [x19, #1154]
  434298:	cbz	w0, 4342b0 <ferror@plt+0x30ce0>
  43429c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4342a0:	mov	x0, x19
  4342a4:	add	x2, x2, #0x2d6
  4342a8:	mov	w1, #0x2                   	// #2
  4342ac:	bl	435b3c <ferror@plt+0x3256c>
  4342b0:	strh	wzr, [x19, #24]
  4342b4:	mov	w0, #0x1                   	// #1
  4342b8:	strb	w0, [x19, #16]
  4342bc:	mov	w0, #0x53                  	// #83
  4342c0:	strb	w0, [x19, #156]
  4342c4:	ldr	x0, [x19, #40]
  4342c8:	strb	wzr, [x19, #21]
  4342cc:	ldr	w0, [x0, #60]
  4342d0:	str	w0, [x19, #48]
  4342d4:	mov	x0, x19
  4342d8:	bl	43eff0 <ferror@plt+0x3ba20>
  4342dc:	mov	x21, x0
  4342e0:	ldrb	w0, [x0, #4]
  4342e4:	cmp	w0, #0x35
  4342e8:	b.ne	4343a0 <ferror@plt+0x30dd0>  // b.any
  4342ec:	ldr	x0, [x21, #8]
  4342f0:	ldrb	w20, [x0, #16]
  4342f4:	tbz	w20, #0, 434524 <ferror@plt+0x30f54>
  4342f8:	ubfx	x20, x20, #1, #7
  4342fc:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434300:	add	x0, x0, #0x668
  434304:	mov	w1, #0x18                  	// #24
  434308:	umaddl	x20, w20, w1, x0
  43430c:	ldrb	w1, [x20, #19]
  434310:	tbnz	w1, #1, 434318 <ferror@plt+0x30d48>
  434314:	strb	wzr, [x19, #440]
  434318:	ldrb	w0, [x19, #1155]
  43431c:	cbz	w0, 4343f4 <ferror@plt+0x30e24>
  434320:	ldrb	w2, [x19, #1244]
  434324:	cbnz	w2, 4343f4 <ferror@plt+0x30e24>
  434328:	cbz	w24, 4343f0 <ferror@plt+0x30e20>
  43432c:	mov	w21, #0x0                   	// #0
  434330:	mov	x20, #0x0                   	// #0
  434334:	ldrb	w0, [x19, #1160]
  434338:	str	x20, [x19, #144]
  43433c:	cbz	w0, 434348 <ferror@plt+0x30d78>
  434340:	mov	x0, x19
  434344:	bl	432ba8 <ferror@plt+0x2f5d8>
  434348:	cbz	x20, 4345f0 <ferror@plt+0x31020>
  43434c:	ldr	x0, [x19, #144]
  434350:	ldr	x1, [x0]
  434354:	mov	x0, x19
  434358:	blr	x1
  43435c:	mov	w1, w21
  434360:	mov	x0, x19
  434364:	bl	433568 <ferror@plt+0x2ff98>
  434368:	cbz	w23, 43437c <ferror@plt+0x30dac>
  43436c:	ldrb	w0, [x19, #32]
  434370:	cbnz	w0, 43437c <ferror@plt+0x30dac>
  434374:	mov	w0, #0x201                 	// #513
  434378:	strh	w0, [x19, #24]
  43437c:	cbz	w22, 434388 <ferror@plt+0x30db8>
  434380:	mov	w0, #0x1                   	// #1
  434384:	strb	w0, [x19, #24]
  434388:	mov	w0, w21
  43438c:	ldp	x19, x20, [sp, #16]
  434390:	ldp	x21, x22, [sp, #32]
  434394:	ldp	x23, x24, [sp, #48]
  434398:	ldp	x29, x30, [sp], #240
  43439c:	ret
  4343a0:	cmp	w0, #0x37
  4343a4:	b.ne	43451c <ferror@plt+0x30f4c>  // b.any
  4343a8:	ldr	w0, [x19, #1116]
  4343ac:	cmp	w0, #0x15
  4343b0:	b.eq	43432c <ferror@plt+0x30d5c>  // b.none
  4343b4:	ldrb	w0, [x19, #1154]
  4343b8:	adrp	x20, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4343bc:	add	x20, x20, #0x668
  4343c0:	cbz	w0, 4343e8 <ferror@plt+0x30e18>
  4343c4:	ldrb	w0, [x19, #1155]
  4343c8:	cbnz	w0, 4343e8 <ferror@plt+0x30e18>
  4343cc:	ldrb	w0, [x19, #18]
  4343d0:	cbnz	w0, 4343e8 <ferror@plt+0x30e18>
  4343d4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4343d8:	mov	x0, x19
  4343dc:	add	x2, x2, #0x313
  4343e0:	mov	w1, #0x2                   	// #2
  4343e4:	bl	435b3c <ferror@plt+0x3256c>
  4343e8:	add	x20, x20, #0x1c8
  4343ec:	b	43430c <ferror@plt+0x30d3c>
  4343f0:	tbz	w1, #3, 43432c <ferror@plt+0x30d5c>
  4343f4:	and	w2, w1, #0x4
  4343f8:	strb	w2, [x19, #17]
  4343fc:	strb	w2, [x19, #19]
  434400:	cbnz	w0, 434484 <ferror@plt+0x30eb4>
  434404:	ldrb	w0, [x19, #18]
  434408:	cbnz	w0, 434454 <ferror@plt+0x30e84>
  43440c:	ldrb	w0, [x20, #18]
  434410:	cmp	w0, #0x2
  434414:	b.ne	43449c <ferror@plt+0x30ecc>  // b.any
  434418:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43441c:	add	x0, x0, #0x668
  434420:	add	x0, x0, #0x168
  434424:	cmp	x20, x0
  434428:	b.ne	434434 <ferror@plt+0x30e64>  // b.any
  43442c:	ldrb	w0, [x19, #1122]
  434430:	cbnz	w0, 434454 <ferror@plt+0x30e84>
  434434:	ldrb	w0, [x19, #1154]
  434438:	cbz	w0, 43449c <ferror@plt+0x30ecc>
  43443c:	ldr	x3, [x20, #8]
  434440:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434444:	mov	x0, x19
  434448:	add	x2, x2, #0x33e
  43444c:	mov	w1, #0x2                   	// #2
  434450:	bl	435b3c <ferror@plt+0x3256c>
  434454:	ldrb	w0, [x19, #1138]
  434458:	cbz	w0, 434484 <ferror@plt+0x30eb4>
  43445c:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434460:	add	x0, x0, #0x668
  434464:	add	x0, x0, #0xd8
  434468:	cmp	x20, x0
  43446c:	b.ne	4344e0 <ferror@plt+0x30f10>  // b.any
  434470:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434474:	mov	x0, x19
  434478:	add	x2, x2, #0x377
  43447c:	mov	w1, #0x6                   	// #6
  434480:	bl	435ba8 <ferror@plt+0x325d8>
  434484:	ldrb	w0, [x19, #18]
  434488:	cbz	w0, 4345e8 <ferror@plt+0x31018>
  43448c:	ldrb	w0, [x20, #19]
  434490:	tbnz	w0, #0, 4345e8 <ferror@plt+0x31018>
  434494:	mov	w21, #0x1                   	// #1
  434498:	b	434330 <ferror@plt+0x30d60>
  43449c:	tbnz	w1, #5, 4344bc <ferror@plt+0x30eec>
  4344a0:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4344a4:	add	x0, x0, #0x668
  4344a8:	add	x0, x0, #0x168
  4344ac:	cmp	x20, x0
  4344b0:	b.ne	434454 <ferror@plt+0x30e84>  // b.any
  4344b4:	ldrb	w0, [x19, #1122]
  4344b8:	cbnz	w0, 434454 <ferror@plt+0x30e84>
  4344bc:	ldrb	w0, [x19, #1132]
  4344c0:	cbz	w0, 434454 <ferror@plt+0x30e84>
  4344c4:	ldr	x3, [x20, #8]
  4344c8:	mov	x0, x19
  4344cc:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4344d0:	mov	w1, #0x1                   	// #1
  4344d4:	add	x2, x2, #0x355
  4344d8:	bl	435ba8 <ferror@plt+0x325d8>
  4344dc:	b	434454 <ferror@plt+0x30e84>
  4344e0:	ldrb	w0, [x20, #18]
  4344e4:	cbz	w24, 434508 <ferror@plt+0x30f38>
  4344e8:	cbnz	w0, 434484 <ferror@plt+0x30eb4>
  4344ec:	ldr	x3, [x20, #8]
  4344f0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4344f4:	add	x2, x2, #0x3a0
  4344f8:	mov	x0, x19
  4344fc:	mov	w1, #0x6                   	// #6
  434500:	bl	435ba8 <ferror@plt+0x325d8>
  434504:	b	434484 <ferror@plt+0x30eb4>
  434508:	cbz	w0, 434484 <ferror@plt+0x30eb4>
  43450c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434510:	add	x2, x2, #0x3ce
  434514:	ldr	x3, [x20, #8]
  434518:	b	4344f8 <ferror@plt+0x30f28>
  43451c:	cmp	w0, #0x16
  434520:	b.eq	434494 <ferror@plt+0x30ec4>  // b.none
  434524:	ldr	w0, [x19, #1116]
  434528:	cmp	w0, #0x15
  43452c:	b.eq	43432c <ferror@plt+0x30d5c>  // b.none
  434530:	ldrb	w0, [x19, #18]
  434534:	cbnz	w0, 434494 <ferror@plt+0x30ec4>
  434538:	mov	x1, x21
  43453c:	mov	x0, x19
  434540:	bl	43d9a8 <ferror@plt+0x3a3d8>
  434544:	mov	x20, x0
  434548:	ldr	x3, [x19, #1064]
  43454c:	cbz	x3, 4345cc <ferror@plt+0x30ffc>
  434550:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434554:	add	x2, x2, #0x668
  434558:	mov	x1, x0
  43455c:	add	x2, x2, #0x1e0
  434560:	mov	x0, x19
  434564:	blr	x3
  434568:	mov	x24, x0
  43456c:	cbz	x0, 4345cc <ferror@plt+0x30ffc>
  434570:	ldr	w2, [x21]
  434574:	mov	x3, #0x0                   	// #0
  434578:	ldr	x1, [x19, #40]
  43457c:	add	x0, sp, #0x48
  434580:	bl	441318 <ferror@plt+0x3dd48>
  434584:	ldr	w1, [x21]
  434588:	ldr	x0, [x19, #40]
  43458c:	bl	4400fc <ferror@plt+0x3cb2c>
  434590:	mov	x1, x0
  434594:	mov	x2, x24
  434598:	add	x0, sp, #0x48
  43459c:	bl	4418fc <ferror@plt+0x3e32c>
  4345a0:	mov	x5, x24
  4345a4:	mov	x4, x20
  4345a8:	add	x2, sp, #0x48
  4345ac:	adrp	x3, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4345b0:	add	x3, x3, #0x407
  4345b4:	mov	w1, #0x3                   	// #3
  4345b8:	mov	x0, x19
  4345bc:	bl	435f74 <ferror@plt+0x329a4>
  4345c0:	add	x0, sp, #0x48
  4345c4:	bl	4410ac <ferror@plt+0x3dadc>
  4345c8:	b	434494 <ferror@plt+0x30ec4>
  4345cc:	mov	x3, x20
  4345d0:	mov	x0, x19
  4345d4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4345d8:	mov	w1, #0x3                   	// #3
  4345dc:	add	x2, x2, #0x43e
  4345e0:	bl	435b3c <ferror@plt+0x3256c>
  4345e4:	b	434494 <ferror@plt+0x30ec4>
  4345e8:	mov	w21, #0x1                   	// #1
  4345ec:	b	434334 <ferror@plt+0x30d64>
  4345f0:	cbnz	w21, 43435c <ferror@plt+0x30d8c>
  4345f4:	mov	x0, x19
  4345f8:	mov	w1, #0x1                   	// #1
  4345fc:	bl	442800 <ferror@plt+0x3f230>
  434600:	b	43435c <ferror@plt+0x30d8c>
  434604:	mov	x2, #0x0                   	// #0
  434608:	adrp	x1, 432000 <ferror@plt+0x2ea30>
  43460c:	add	x1, x1, #0x3d8
  434610:	b	43b2f0 <ferror@plt+0x37d20>
  434614:	stp	x29, x30, [sp, #-32]!
  434618:	mov	x29, sp
  43461c:	stp	x19, x20, [sp, #16]
  434620:	mov	x19, x0
  434624:	mov	w0, w4
  434628:	mov	w4, w3
  43462c:	mov	x3, x2
  434630:	mov	w2, w0
  434634:	ldr	x0, [x19, #40]
  434638:	bl	43f75c <ferror@plt+0x3c18c>
  43463c:	mov	x20, x0
  434640:	cbz	x0, 434654 <ferror@plt+0x31084>
  434644:	ldr	w1, [x0, #16]
  434648:	mov	w2, #0x7f                  	// #127
  43464c:	ldr	x0, [x19, #40]
  434650:	bl	43fa38 <ferror@plt+0x3c468>
  434654:	ldr	x2, [x19, #912]
  434658:	cbz	x2, 434674 <ferror@plt+0x310a4>
  43465c:	mov	x1, x20
  434660:	mov	x0, x19
  434664:	ldp	x19, x20, [sp, #16]
  434668:	mov	x16, x2
  43466c:	ldp	x29, x30, [sp], #32
  434670:	br	x16
  434674:	ldp	x19, x20, [sp, #16]
  434678:	ldp	x29, x30, [sp], #32
  43467c:	ret
  434680:	stp	x29, x30, [sp, #-96]!
  434684:	mov	w3, #0x18                  	// #24
  434688:	mov	x29, sp
  43468c:	stp	x21, x22, [sp, #32]
  434690:	ldr	x21, [x0, #40]
  434694:	stp	x19, x20, [sp, #16]
  434698:	mov	x19, x0
  43469c:	stp	x23, x24, [sp, #48]
  4346a0:	ldr	w1, [x21, #12]
  4346a4:	ldr	x2, [x21]
  4346a8:	sub	w1, w1, #0x1
  4346ac:	smaddl	x1, w1, w3, x2
  4346b0:	ldr	x23, [x1, #8]
  4346b4:	str	x25, [sp, #64]
  4346b8:	ldrb	w20, [x1, #5]
  4346bc:	mov	w1, #0x1                   	// #1
  4346c0:	bl	442800 <ferror@plt+0x3f230>
  4346c4:	mov	x0, x19
  4346c8:	bl	444ea4 <ferror@plt+0x418d4>
  4346cc:	mov	x1, x0
  4346d0:	ldrb	w0, [x0, #4]
  4346d4:	cmp	w0, #0x37
  4346d8:	b.ne	43471c <ferror@plt+0x3114c>  // b.any
  4346dc:	ldr	w6, [x1, #8]
  4346e0:	adrp	x3, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4346e4:	ldr	x5, [x1, #16]
  4346e8:	add	x3, x3, #0x228
  4346ec:	mov	x2, #0x0                   	// #0
  4346f0:	mov	w24, #0x0                   	// #0
  4346f4:	mov	w4, #0xa                   	// #10
  4346f8:	cmp	x6, x2
  4346fc:	b.eq	4347f4 <ferror@plt+0x31224>  // b.none
  434700:	ldrb	w0, [x5, x2]
  434704:	add	x2, x2, #0x1
  434708:	ldrh	w7, [x3, w0, sxtw #1]
  43470c:	tbz	w7, #2, 43471c <ferror@plt+0x3114c>
  434710:	madd	w24, w24, w4, w0
  434714:	sub	w24, w24, #0x30
  434718:	b	4346f8 <ferror@plt+0x31128>
  43471c:	mov	x0, x19
  434720:	bl	43d9a8 <ferror@plt+0x3a3d8>
  434724:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434728:	mov	x3, x0
  43472c:	add	x2, x2, #0x462
  434730:	mov	x0, x19
  434734:	mov	w1, #0x3                   	// #3
  434738:	bl	435b3c <ferror@plt+0x3256c>
  43473c:	ldp	x19, x20, [sp, #16]
  434740:	ldp	x21, x22, [sp, #32]
  434744:	ldp	x23, x24, [sp, #48]
  434748:	ldr	x25, [sp, #64]
  43474c:	ldp	x29, x30, [sp], #96
  434750:	ret
  434754:	cmp	w0, #0x2
  434758:	b.ne	434774 <ferror@plt+0x311a4>  // b.any
  43475c:	mov	w1, w0
  434760:	mov	w25, #0x1                   	// #1
  434764:	mov	x0, x19
  434768:	bl	432530 <ferror@plt+0x2ef60>
  43476c:	mov	w20, w0
  434770:	b	43486c <ferror@plt+0x3129c>
  434774:	mov	w25, #0x3                   	// #3
  434778:	b	43486c <ferror@plt+0x3129c>
  43477c:	mov	w20, #0x0                   	// #0
  434780:	b	43488c <ferror@plt+0x312bc>
  434784:	cmp	w4, #0x16
  434788:	b.eq	4347a4 <ferror@plt+0x311d4>  // b.none
  43478c:	mov	x0, x19
  434790:	bl	43d9a8 <ferror@plt+0x3a3d8>
  434794:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434798:	mov	x3, x0
  43479c:	add	x2, x2, #0x489
  4347a0:	b	434730 <ferror@plt+0x31160>
  4347a4:	mov	w25, #0x3                   	// #3
  4347a8:	b	4348a0 <ferror@plt+0x312d0>
  4347ac:	cbz	x0, 4347c0 <ferror@plt+0x311f0>
  4347b0:	ldr	x0, [x0, #8]
  4347b4:	mov	x1, x23
  4347b8:	bl	45a8bc <ferror@plt+0x572ec>
  4347bc:	cbnz	w0, 4348d8 <ferror@plt+0x31308>
  4347c0:	ldr	x1, [x19, #40]
  4347c4:	mov	w4, w20
  4347c8:	mov	w3, w24
  4347cc:	mov	x2, x23
  4347d0:	ldr	w0, [x1, #56]
  4347d4:	sub	w0, w0, #0x1
  4347d8:	str	w0, [x1, #56]
  4347dc:	mov	x0, x19
  4347e0:	mov	w1, w25
  4347e4:	bl	434614 <ferror@plt+0x31044>
  4347e8:	mov	w0, #0x1                   	// #1
  4347ec:	strb	w0, [x21, #116]
  4347f0:	b	43473c <ferror@plt+0x3116c>
  4347f4:	mov	x0, x19
  4347f8:	bl	444ea4 <ferror@plt+0x418d4>
  4347fc:	ldrb	w4, [x0, #4]
  434800:	mov	x1, x0
  434804:	cmp	w4, #0x3e
  434808:	b.ne	434784 <ferror@plt+0x311b4>  // b.any
  43480c:	add	x3, sp, #0x50
  434810:	add	x1, x1, #0x8
  434814:	mov	x0, x19
  434818:	mov	x2, #0x1                   	// #1
  43481c:	str	wzr, [sp, #80]
  434820:	str	xzr, [sp, #88]
  434824:	bl	431ff8 <ferror@plt+0x2ea28>
  434828:	tst	w0, #0xff
  43482c:	b.eq	434834 <ferror@plt+0x31264>  // b.none
  434830:	ldr	x23, [sp, #88]
  434834:	mov	x0, x19
  434838:	mov	w1, #0x0                   	// #0
  43483c:	bl	432530 <ferror@plt+0x2ef60>
  434840:	mov	w20, w0
  434844:	cmp	w0, #0x1
  434848:	b.ne	434754 <ferror@plt+0x31184>  // b.any
  43484c:	mov	x1, x23
  434850:	mov	x0, x19
  434854:	bl	43ab6c <ferror@plt+0x3759c>
  434858:	mov	w25, #0x0                   	// #0
  43485c:	mov	w1, w20
  434860:	mov	x0, x19
  434864:	bl	432530 <ferror@plt+0x2ef60>
  434868:	mov	w20, w0
  43486c:	cmp	w20, #0x3
  434870:	b.ne	43477c <ferror@plt+0x311ac>  // b.any
  434874:	mov	w1, w20
  434878:	mov	x0, x19
  43487c:	bl	432530 <ferror@plt+0x2ef60>
  434880:	cmp	w0, #0x4
  434884:	cset	w20, eq  // eq = none
  434888:	add	w20, w20, #0x1
  43488c:	ldr	x0, [x19]
  434890:	mov	w1, #0x0                   	// #0
  434894:	strb	w20, [x0, #106]
  434898:	mov	x0, x19
  43489c:	bl	432e9c <ferror@plt+0x2f8cc>
  4348a0:	mov	x0, x19
  4348a4:	bl	4333b4 <ferror@plt+0x2fde4>
  4348a8:	cmp	w25, #0x1
  4348ac:	b.ne	4347c0 <ferror@plt+0x311f0>  // b.any
  4348b0:	ldr	w22, [x21, #12]
  4348b4:	mov	w0, #0x18                  	// #24
  4348b8:	ldr	x1, [x21]
  4348bc:	sub	w22, w22, #0x1
  4348c0:	smaddl	x22, w22, w0, x1
  4348c4:	mov	x0, x21
  4348c8:	mov	x1, x22
  4348cc:	bl	43f6f0 <ferror@plt+0x3c120>
  4348d0:	ldr	w1, [x22, #20]
  4348d4:	cbnz	w1, 4347ac <ferror@plt+0x311dc>
  4348d8:	mov	x3, x23
  4348dc:	mov	x0, x19
  4348e0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4348e4:	mov	w1, #0x0                   	// #0
  4348e8:	add	x2, x2, #0x4a6
  4348ec:	bl	435ba8 <ferror@plt+0x325d8>
  4348f0:	b	43473c <ferror@plt+0x3116c>
  4348f4:	stp	x29, x30, [sp, #-80]!
  4348f8:	mov	w3, #0x18                  	// #24
  4348fc:	mov	x29, sp
  434900:	stp	x21, x22, [sp, #32]
  434904:	ldr	x21, [x0, #40]
  434908:	stp	x19, x20, [sp, #16]
  43490c:	mov	x19, x0
  434910:	stp	x23, x24, [sp, #48]
  434914:	mov	w24, #0x7fffffff            	// #2147483647
  434918:	ldr	w1, [x21, #12]
  43491c:	ldr	x2, [x21]
  434920:	sub	w1, w1, #0x1
  434924:	smaddl	x1, w1, w3, x2
  434928:	ldrb	w22, [x1, #5]
  43492c:	ldr	x23, [x1, #8]
  434930:	ldrb	w1, [x0, #1152]
  434934:	cmp	w1, #0x0
  434938:	mov	w1, #0x7fff                	// #32767
  43493c:	csel	w24, w24, w1, ne  // ne = any
  434940:	bl	444ea4 <ferror@plt+0x418d4>
  434944:	mov	x1, x0
  434948:	ldrb	w0, [x0, #4]
  43494c:	cmp	w0, #0x37
  434950:	b.ne	4349ac <ferror@plt+0x313dc>  // b.any
  434954:	ldr	w8, [x1, #8]
  434958:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43495c:	ldr	x5, [x1, #16]
  434960:	add	x4, x4, #0x228
  434964:	mov	x2, #0x0                   	// #0
  434968:	mov	w3, #0x0                   	// #0
  43496c:	mov	w20, #0x0                   	// #0
  434970:	mov	w7, #0xa                   	// #10
  434974:	mov	w6, #0x1                   	// #1
  434978:	cmp	x8, x2
  43497c:	b.eq	434abc <ferror@plt+0x314ec>  // b.none
  434980:	ldrb	w9, [x5, x2]
  434984:	ldrb	w0, [x5, x2]
  434988:	ldrh	w9, [x4, x9, lsl #1]
  43498c:	tbz	w9, #2, 4349dc <ferror@plt+0x3140c>
  434990:	madd	w0, w20, w7, w0
  434994:	add	x2, x2, #0x1
  434998:	sub	w0, w0, #0x30
  43499c:	cmp	w20, w0
  4349a0:	mov	w20, w0
  4349a4:	csel	w3, w3, w6, ls  // ls = plast
  4349a8:	b	434978 <ferror@plt+0x313a8>
  4349ac:	cmp	w0, #0x16
  4349b0:	b.ne	4349dc <ferror@plt+0x3140c>  // b.any
  4349b4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4349b8:	mov	x0, x19
  4349bc:	add	x2, x2, #0x4dc
  4349c0:	mov	w1, #0x3                   	// #3
  4349c4:	bl	435b3c <ferror@plt+0x3256c>
  4349c8:	ldp	x19, x20, [sp, #16]
  4349cc:	ldp	x21, x22, [sp, #32]
  4349d0:	ldp	x23, x24, [sp, #48]
  4349d4:	ldp	x29, x30, [sp], #80
  4349d8:	ret
  4349dc:	mov	x0, x19
  4349e0:	bl	43d9a8 <ferror@plt+0x3a3d8>
  4349e4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4349e8:	mov	x3, x0
  4349ec:	add	x2, x2, #0x4ff
  4349f0:	mov	x0, x19
  4349f4:	mov	w1, #0x3                   	// #3
  4349f8:	bl	435b3c <ferror@plt+0x3256c>
  4349fc:	b	4349c8 <ferror@plt+0x313f8>
  434a00:	cbz	w20, 434a10 <ferror@plt+0x31440>
  434a04:	cmp	w24, w20
  434a08:	b.cc	434a10 <ferror@plt+0x31440>  // b.lo, b.ul, b.last
  434a0c:	cbz	w3, 434a24 <ferror@plt+0x31454>
  434a10:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434a14:	add	x2, x2, #0x52a
  434a18:	mov	w1, #0x2                   	// #2
  434a1c:	mov	x0, x19
  434a20:	bl	435b3c <ferror@plt+0x3256c>
  434a24:	mov	x0, x19
  434a28:	bl	444ea4 <ferror@plt+0x418d4>
  434a2c:	ldrb	w4, [x0, #4]
  434a30:	mov	x1, x0
  434a34:	cmp	w4, #0x3e
  434a38:	b.ne	434a9c <ferror@plt+0x314cc>  // b.any
  434a3c:	add	x1, x0, #0x8
  434a40:	add	x3, sp, #0x40
  434a44:	mov	x0, x19
  434a48:	mov	x2, #0x1                   	// #1
  434a4c:	str	wzr, [sp, #64]
  434a50:	str	xzr, [sp, #72]
  434a54:	bl	431ff8 <ferror@plt+0x2ea28>
  434a58:	tst	w0, #0xff
  434a5c:	b.eq	434a64 <ferror@plt+0x31494>  // b.none
  434a60:	ldr	x23, [sp, #72]
  434a64:	mov	x0, x19
  434a68:	mov	w1, #0x1                   	// #1
  434a6c:	bl	432e9c <ferror@plt+0x2f8cc>
  434a70:	mov	x0, x19
  434a74:	bl	4333b4 <ferror@plt+0x2fde4>
  434a78:	mov	x0, x19
  434a7c:	mov	w4, w22
  434a80:	mov	w3, w20
  434a84:	mov	x2, x23
  434a88:	mov	w1, #0x3                   	// #3
  434a8c:	bl	434614 <ferror@plt+0x31044>
  434a90:	mov	w0, #0x1                   	// #1
  434a94:	strb	w0, [x21, #116]
  434a98:	b	4349c8 <ferror@plt+0x313f8>
  434a9c:	cmp	w4, #0x16
  434aa0:	b.eq	434a70 <ferror@plt+0x314a0>  // b.none
  434aa4:	mov	x0, x19
  434aa8:	bl	43d9a8 <ferror@plt+0x3a3d8>
  434aac:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434ab0:	mov	x3, x0
  434ab4:	add	x2, x2, #0x489
  434ab8:	b	4349f0 <ferror@plt+0x31420>
  434abc:	ldrb	w0, [x19, #1154]
  434ac0:	cbnz	w0, 434a00 <ferror@plt+0x31430>
  434ac4:	cbz	w3, 434a24 <ferror@plt+0x31454>
  434ac8:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434acc:	mov	w1, #0x0                   	// #0
  434ad0:	add	x2, x2, #0x52a
  434ad4:	b	434a1c <ferror@plt+0x3144c>
  434ad8:	cbnz	x3, 434aec <ferror@plt+0x3151c>
  434adc:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434ae0:	mov	w1, #0x4                   	// #4
  434ae4:	add	x2, x2, #0x543
  434ae8:	b	435b3c <ferror@plt+0x3256c>
  434aec:	stp	x29, x30, [sp, #-32]!
  434af0:	mov	x29, sp
  434af4:	stp	x19, x20, [sp, #16]
  434af8:	mov	x19, x3
  434afc:	and	w20, w4, #0xff
  434b00:	mov	w3, #0x0                   	// #0
  434b04:	bl	43407c <ferror@plt+0x30aac>
  434b08:	cbz	x0, 434b14 <ferror@plt+0x31544>
  434b0c:	strb	w20, [x0, #19]
  434b10:	str	x19, [x0, #24]
  434b14:	ldp	x19, x20, [sp, #16]
  434b18:	ldp	x29, x30, [sp], #32
  434b1c:	ret
  434b20:	stp	x29, x30, [sp, #-32]!
  434b24:	mov	x29, sp
  434b28:	stp	x19, x20, [sp, #16]
  434b2c:	mov	w19, w3
  434b30:	and	w20, w4, #0xff
  434b34:	mov	w3, w5
  434b38:	bl	43407c <ferror@plt+0x30aac>
  434b3c:	cbz	x0, 434b50 <ferror@plt+0x31580>
  434b40:	mov	w1, #0x1                   	// #1
  434b44:	strb	w1, [x0, #18]
  434b48:	strb	w20, [x0, #19]
  434b4c:	str	w19, [x0, #24]
  434b50:	ldp	x19, x20, [sp, #16]
  434b54:	ldp	x29, x30, [sp], #32
  434b58:	ret
  434b5c:	stp	x29, x30, [sp, #-32]!
  434b60:	mov	x1, #0x0                   	// #0
  434b64:	adrp	x3, 433000 <ferror@plt+0x2fa30>
  434b68:	mov	x29, sp
  434b6c:	add	x3, x3, #0x1c0
  434b70:	adrp	x2, 493000 <_obstack_memory_used@@Base+0x36c10>
  434b74:	add	x2, x2, #0xe51
  434b78:	stp	x19, x20, [sp, #16]
  434b7c:	mov	x19, x0
  434b80:	bl	434234 <ferror@plt+0x30c64>
  434b84:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x19c10>
  434b88:	mov	x0, x19
  434b8c:	mov	x1, #0x0                   	// #0
  434b90:	adrp	x3, 433000 <ferror@plt+0x2fa30>
  434b94:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434b98:	add	x3, x3, #0x600
  434b9c:	add	x2, x2, #0x568
  434ba0:	bl	434234 <ferror@plt+0x30c64>
  434ba4:	add	x20, x20, #0xc6b
  434ba8:	mov	x0, x19
  434bac:	mov	x1, #0x0                   	// #0
  434bb0:	adrp	x3, 434000 <ferror@plt+0x30a30>
  434bb4:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434bb8:	add	x3, x3, #0xfcc
  434bbc:	add	x2, x2, #0x573
  434bc0:	bl	434234 <ferror@plt+0x30c64>
  434bc4:	mov	x1, x20
  434bc8:	mov	x0, x19
  434bcc:	adrp	x3, 432000 <ferror@plt+0x2ea30>
  434bd0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434bd4:	add	x3, x3, #0x600
  434bd8:	add	x2, x2, #0x57d
  434bdc:	bl	434234 <ferror@plt+0x30c64>
  434be0:	mov	x1, x20
  434be4:	mov	x0, x19
  434be8:	adrp	x3, 433000 <ferror@plt+0x2fa30>
  434bec:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434bf0:	add	x3, x3, #0x94c
  434bf4:	add	x2, x2, #0x584
  434bf8:	bl	434234 <ferror@plt+0x30c64>
  434bfc:	mov	x1, x20
  434c00:	mov	x0, x19
  434c04:	adrp	x3, 433000 <ferror@plt+0x2fa30>
  434c08:	adrp	x2, 4c7000 <_obstack_memory_used@@Base+0x6ac10>
  434c0c:	add	x3, x3, #0x100
  434c10:	add	x2, x2, #0xf7b
  434c14:	bl	434234 <ferror@plt+0x30c64>
  434c18:	mov	x1, x20
  434c1c:	mov	x0, x19
  434c20:	adrp	x3, 432000 <ferror@plt+0x2ea30>
  434c24:	adrp	x2, 489000 <_obstack_memory_used@@Base+0x2cc10>
  434c28:	add	x3, x3, #0x7f0
  434c2c:	add	x2, x2, #0x5b1
  434c30:	bl	434234 <ferror@plt+0x30c64>
  434c34:	mov	x1, x20
  434c38:	mov	x0, x19
  434c3c:	ldp	x19, x20, [sp, #16]
  434c40:	adrp	x3, 432000 <ferror@plt+0x2ea30>
  434c44:	ldp	x29, x30, [sp], #32
  434c48:	add	x3, x3, #0x7e8
  434c4c:	adrp	x2, 497000 <_obstack_memory_used@@Base+0x3ac10>
  434c50:	add	x2, x2, #0xc8a
  434c54:	b	434234 <ferror@plt+0x30c64>
  434c58:	stp	x29, x30, [sp, #-32]!
  434c5c:	mov	x29, sp
  434c60:	stp	x19, x20, [sp, #16]
  434c64:	mov	x20, x0
  434c68:	ldr	x0, [x0, #896]
  434c6c:	bl	432408 <ferror@plt+0x2ee38>
  434c70:	sbfiz	x0, x0, #3, #32
  434c74:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  434c78:	mov	x19, x0
  434c7c:	mov	x1, x0
  434c80:	ldr	x0, [x20, #896]
  434c84:	bl	432d04 <ferror@plt+0x2f734>
  434c88:	mov	x0, x19
  434c8c:	ldp	x19, x20, [sp, #16]
  434c90:	ldp	x29, x30, [sp], #32
  434c94:	ret
  434c98:	stp	x29, x30, [sp, #-32]!
  434c9c:	mov	x2, x1
  434ca0:	mov	x29, sp
  434ca4:	str	x19, [sp, #16]
  434ca8:	mov	x19, x1
  434cac:	ldr	x1, [x0, #896]
  434cb0:	bl	432c84 <ferror@plt+0x2f6b4>
  434cb4:	mov	x0, x19
  434cb8:	ldr	x19, [sp, #16]
  434cbc:	ldp	x29, x30, [sp], #32
  434cc0:	b	4032a0 <free@plt>
  434cc4:	stp	x29, x30, [sp, #-64]!
  434cc8:	mov	x29, sp
  434ccc:	str	x21, [sp, #32]
  434cd0:	mov	x21, x1
  434cd4:	add	x2, sp, #0x38
  434cd8:	mov	w1, #0x4                   	// #4
  434cdc:	stp	x19, x20, [sp, #16]
  434ce0:	mov	x20, x0
  434ce4:	bl	4339a4 <ferror@plt+0x303d4>
  434ce8:	str	wzr, [x21]
  434cec:	mov	x19, x0
  434cf0:	cbz	x0, 434d38 <ferror@plt+0x31768>
  434cf4:	ldr	x1, [x0, #24]
  434cf8:	cbz	x1, 434d18 <ferror@plt+0x31748>
  434cfc:	ldr	x1, [sp, #56]
  434d00:	cbz	x1, 434d30 <ferror@plt+0x31760>
  434d04:	bl	4326a8 <ferror@plt+0x2f0d8>
  434d08:	ldr	x0, [x0]
  434d0c:	cmp	x0, #0x0
  434d10:	cset	w0, ne  // ne = any
  434d14:	str	w0, [x21]
  434d18:	cmp	x19, #0x0
  434d1c:	cset	w0, eq  // eq = none
  434d20:	ldp	x19, x20, [sp, #16]
  434d24:	ldr	x21, [sp, #32]
  434d28:	ldp	x29, x30, [sp], #64
  434d2c:	ret
  434d30:	mov	w0, #0x1                   	// #1
  434d34:	b	434d14 <ferror@plt+0x31744>
  434d38:	ldr	x0, [x20, #448]
  434d3c:	ldurb	w0, [x0, #-20]
  434d40:	cmp	w0, #0x16
  434d44:	b.ne	434d18 <ferror@plt+0x31748>  // b.any
  434d48:	mov	x0, x20
  434d4c:	mov	w1, #0x1                   	// #1
  434d50:	bl	442800 <ferror@plt+0x3f230>
  434d54:	b	434d18 <ferror@plt+0x31748>
  434d58:	add	x0, x0, #0x458
  434d5c:	ret
  434d60:	add	x0, x0, #0x388
  434d64:	ret
  434d68:	stp	x29, x30, [sp, #-16]!
  434d6c:	mov	x2, #0xb8                  	// #184
  434d70:	add	x0, x0, #0x388
  434d74:	mov	x29, sp
  434d78:	bl	402cd0 <memcpy@plt>
  434d7c:	ldp	x29, x30, [sp], #16
  434d80:	ret
  434d84:	stp	x29, x30, [sp, #-32]!
  434d88:	mov	x29, sp
  434d8c:	str	x19, [sp, #16]
  434d90:	mov	x19, x0
  434d94:	ldr	x0, [x0, #712]
  434d98:	cbnz	x0, 434da4 <ferror@plt+0x317d4>
  434d9c:	bl	445560 <ferror@plt+0x41f90>
  434da0:	str	x0, [x19, #712]
  434da4:	ldr	x0, [x19, #712]
  434da8:	ldr	x19, [sp, #16]
  434dac:	ldp	x29, x30, [sp], #32
  434db0:	ret
  434db4:	stp	x29, x30, [sp, #-64]!
  434db8:	mov	x29, sp
  434dbc:	stp	x19, x20, [sp, #16]
  434dc0:	add	x19, x0, #0x328
  434dc4:	mov	w20, w3
  434dc8:	stp	x21, x22, [sp, #32]
  434dcc:	mov	x21, x1
  434dd0:	mov	x22, x2
  434dd4:	ldr	x1, [x19, #24]
  434dd8:	str	x23, [sp, #48]
  434ddc:	mov	x23, x0
  434de0:	ldr	x0, [x19, #32]
  434de4:	sub	x0, x0, x1
  434de8:	cmp	x0, #0xc7
  434dec:	b.hi	434dfc <ferror@plt+0x3182c>  // b.pmore
  434df0:	mov	x0, x19
  434df4:	mov	x1, #0xc8                  	// #200
  434df8:	bl	45c22c <_obstack_newchunk@@Base>
  434dfc:	ldp	x4, x5, [x19, #16]
  434e00:	add	x5, x5, #0xc8
  434e04:	cmp	x5, x4
  434e08:	b.ne	434e18 <ferror@plt+0x31848>  // b.any
  434e0c:	ldrb	w0, [x19, #80]
  434e10:	orr	w0, w0, #0x2
  434e14:	strb	w0, [x19, #80]
  434e18:	ldr	x3, [x19, #48]
  434e1c:	and	w20, w20, #0x1
  434e20:	ldr	x0, [x19, #8]
  434e24:	add	x5, x5, x3
  434e28:	ldr	x1, [x19, #32]
  434e2c:	bic	x3, x5, x3
  434e30:	sub	x2, x3, x0
  434e34:	ubfiz	w20, w20, #9, #7
  434e38:	sub	x0, x1, x0
  434e3c:	orr	w20, w20, #0x1
  434e40:	cmp	x2, x0
  434e44:	mov	x0, x4
  434e48:	csel	x3, x3, x1, ls  // ls = plast
  434e4c:	stp	x3, x3, [x19, #16]
  434e50:	mov	x2, #0xc8                  	// #200
  434e54:	mov	w1, #0x0                   	// #0
  434e58:	bl	403000 <memset@plt>
  434e5c:	mov	x4, x0
  434e60:	ldr	x0, [x23]
  434e64:	mov	w1, #0xfffffd00            	// #-768
  434e68:	str	x0, [x4, #72]
  434e6c:	ldrh	w0, [x4, #104]
  434e70:	stp	x21, x21, [x4, #16]
  434e74:	add	x21, x21, x22
  434e78:	and	w0, w0, w1
  434e7c:	orr	w20, w20, w0
  434e80:	strh	w20, [x4, #104]
  434e84:	mov	x0, x4
  434e88:	ldp	x19, x20, [sp, #16]
  434e8c:	str	x21, [x4, #32]
  434e90:	ldp	x21, x22, [sp, #32]
  434e94:	str	x4, [x23]
  434e98:	ldr	x23, [sp, #48]
  434e9c:	ldp	x29, x30, [sp], #64
  434ea0:	ret
  434ea4:	stp	x29, x30, [sp, #-80]!
  434ea8:	mov	x29, sp
  434eac:	stp	x19, x20, [sp, #16]
  434eb0:	mov	x20, x0
  434eb4:	ldr	x19, [x0]
  434eb8:	stp	x21, x22, [sp, #32]
  434ebc:	adrp	x22, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434ec0:	add	x22, x22, #0x592
  434ec4:	stp	x23, x24, [sp, #48]
  434ec8:	adrp	x24, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434ecc:	add	x24, x24, #0x668
  434ed0:	ldr	x23, [x19, #80]
  434ed4:	ldr	x21, [x19, #96]
  434ed8:	str	x25, [sp, #64]
  434edc:	mov	x25, #0x18                  	// #24
  434ee0:	cbz	x21, 434f10 <ferror@plt+0x31940>
  434ee4:	ldrsw	x0, [x21, #28]
  434ee8:	mov	x4, x22
  434eec:	ldr	w2, [x21, #8]
  434ef0:	mov	w3, #0x0                   	// #0
  434ef4:	mov	w1, #0x3                   	// #3
  434ef8:	madd	x0, x0, x25, x24
  434efc:	ldr	x5, [x0, #8]
  434f00:	mov	x0, x20
  434f04:	bl	435cf8 <ferror@plt+0x32728>
  434f08:	ldr	x21, [x21]
  434f0c:	b	434ee0 <ferror@plt+0x31910>
  434f10:	strb	wzr, [x20, #18]
  434f14:	ldr	x0, [x19, #72]
  434f18:	ldr	x21, [x19, #40]
  434f1c:	str	x0, [x20]
  434f20:	ldr	x0, [x19, #48]
  434f24:	bl	4032a0 <free@plt>
  434f28:	ldr	x1, [x20, #816]
  434f2c:	add	x0, x20, #0x328
  434f30:	cmp	x1, x19
  434f34:	b.cs	434f88 <ferror@plt+0x319b8>  // b.hs, b.nlast
  434f38:	ldr	x1, [x0, #32]
  434f3c:	cmp	x1, x19
  434f40:	b.ls	434f88 <ferror@plt+0x319b8>  // b.plast
  434f44:	stp	x19, x19, [x0, #16]
  434f48:	cbz	x23, 434f94 <ferror@plt+0x319c4>
  434f4c:	mov	x2, x21
  434f50:	mov	x1, x23
  434f54:	mov	x0, x20
  434f58:	bl	43ad64 <ferror@plt+0x37794>
  434f5c:	mov	x0, x20
  434f60:	mov	w4, #0x0                   	// #0
  434f64:	ldp	x19, x20, [sp, #16]
  434f68:	mov	w3, #0x0                   	// #0
  434f6c:	ldp	x21, x22, [sp, #32]
  434f70:	mov	x2, #0x0                   	// #0
  434f74:	ldp	x23, x24, [sp, #48]
  434f78:	mov	w1, #0x1                   	// #1
  434f7c:	ldr	x25, [sp, #64]
  434f80:	ldp	x29, x30, [sp], #80
  434f84:	b	434614 <ferror@plt+0x31044>
  434f88:	mov	x1, x19
  434f8c:	bl	45c37c <_obstack_free@@Base>
  434f90:	b	434f48 <ferror@plt+0x31978>
  434f94:	cbz	x21, 434fb4 <ferror@plt+0x319e4>
  434f98:	mov	x0, x21
  434f9c:	ldp	x19, x20, [sp, #16]
  434fa0:	ldp	x21, x22, [sp, #32]
  434fa4:	ldp	x23, x24, [sp, #48]
  434fa8:	ldr	x25, [sp, #64]
  434fac:	ldp	x29, x30, [sp], #80
  434fb0:	b	4032a0 <free@plt>
  434fb4:	ldp	x19, x20, [sp, #16]
  434fb8:	ldp	x21, x22, [sp, #32]
  434fbc:	ldp	x23, x24, [sp, #48]
  434fc0:	ldr	x25, [sp, #64]
  434fc4:	ldp	x29, x30, [sp], #80
  434fc8:	ret
  434fcc:	stp	x29, x30, [sp, #-64]!
  434fd0:	mov	x29, sp
  434fd4:	stp	x19, x20, [sp, #16]
  434fd8:	mov	x19, x0
  434fdc:	stp	x21, x22, [sp, #32]
  434fe0:	ldr	x20, [x0, #1400]
  434fe4:	str	x23, [sp, #48]
  434fe8:	bl	432d68 <ferror@plt+0x2f798>
  434fec:	cbnz	x0, 43503c <ferror@plt+0x31a6c>
  434ff0:	ldr	x0, [x19, #448]
  434ff4:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  434ff8:	add	x4, x4, #0x5a3
  434ffc:	mov	w3, #0x0                   	// #0
  435000:	mov	w1, #0x3                   	// #3
  435004:	ldur	w2, [x0, #-24]
  435008:	mov	x0, x19
  43500c:	bl	435cf8 <ferror@plt+0x32728>
  435010:	mov	w1, #0x0                   	// #0
  435014:	mov	x0, x19
  435018:	bl	432e9c <ferror@plt+0x2f8cc>
  43501c:	mov	x0, x19
  435020:	bl	4333b4 <ferror@plt+0x2fde4>
  435024:	mov	sp, x29
  435028:	ldp	x19, x20, [sp, #16]
  43502c:	ldp	x21, x22, [sp, #32]
  435030:	ldr	x23, [sp, #48]
  435034:	ldp	x29, x30, [sp], #64
  435038:	ret
  43503c:	ldr	w1, [x0, #8]
  435040:	add	w2, w1, #0x2
  435044:	mov	w1, w1
  435048:	add	x2, x2, #0xf
  43504c:	sub	x1, x1, #0x1
  435050:	and	x2, x2, #0x1fffffff0
  435054:	sub	sp, sp, x2
  435058:	ldr	x2, [x0, #16]
  43505c:	mov	x23, sp
  435060:	add	x1, x2, x1
  435064:	ldrb	w0, [x2]
  435068:	cmp	w0, #0x4c
  43506c:	cset	x0, eq  // eq = none
  435070:	add	x0, x0, #0x1
  435074:	add	x0, x2, x0
  435078:	mov	x2, x23
  43507c:	cmp	x0, x1
  435080:	b.cs	4350b4 <ferror@plt+0x31ae4>  // b.hs, b.nlast
  435084:	ldrb	w3, [x0]
  435088:	cmp	w3, #0x5c
  43508c:	b.ne	4350a8 <ferror@plt+0x31ad8>  // b.any
  435090:	ldrb	w3, [x0, #1]
  435094:	cmp	w3, #0x5c
  435098:	b.eq	4350a4 <ferror@plt+0x31ad4>  // b.none
  43509c:	cmp	w3, #0x22
  4350a0:	b.ne	4350a8 <ferror@plt+0x31ad8>  // b.any
  4350a4:	add	x0, x0, #0x1
  4350a8:	ldrb	w3, [x0], #1
  4350ac:	strb	w3, [x2], #1
  4350b0:	b	43507c <ferror@plt+0x31aac>
  4350b4:	strb	wzr, [x2]
  4350b8:	mov	w1, #0x0                   	// #0
  4350bc:	mov	x21, #0x0                   	// #0
  4350c0:	mov	x0, x19
  4350c4:	bl	432e9c <ferror@plt+0x2f8cc>
  4350c8:	mov	x0, x19
  4350cc:	bl	4333b4 <ferror@plt+0x2fde4>
  4350d0:	cbz	x20, 435024 <ferror@plt+0x31a54>
  4350d4:	ldr	x22, [x20, #8]
  4350d8:	mov	x1, x23
  4350dc:	mov	x0, x22
  4350e0:	bl	403220 <strcmp@plt>
  4350e4:	ldr	x1, [x20]
  4350e8:	cbnz	w0, 4351f8 <ferror@plt+0x31c28>
  4350ec:	cbnz	x21, 435204 <ferror@plt+0x31c34>
  4350f0:	str	x1, [x19, #1400]
  4350f4:	mov	x1, x22
  4350f8:	mov	x0, x19
  4350fc:	bl	43bf38 <ferror@plt+0x38968>
  435100:	mov	x21, x0
  435104:	cbz	x0, 435248 <ferror@plt+0x31c78>
  435108:	ldr	x1, [x19, #1024]
  43510c:	cbz	x1, 435118 <ferror@plt+0x31b48>
  435110:	mov	x0, x19
  435114:	blr	x1
  435118:	ldrb	w0, [x21, #18]
  43511c:	tbz	w0, #1, 435158 <ferror@plt+0x31b88>
  435120:	ldr	x3, [x19, #944]
  435124:	cbz	x3, 435138 <ferror@plt+0x31b68>
  435128:	ldr	w1, [x19, #48]
  43512c:	mov	x2, x21
  435130:	mov	x0, x19
  435134:	blr	x3
  435138:	ldrb	w0, [x19, #1151]
  43513c:	cbz	w0, 435150 <ferror@plt+0x31b80>
  435140:	mov	x1, x21
  435144:	mov	x0, x19
  435148:	mov	x2, #0x0                   	// #0
  43514c:	bl	441eb4 <ferror@plt+0x3e8e4>
  435150:	mov	x0, x21
  435154:	bl	442a80 <ferror@plt+0x3f4b0>
  435158:	ldrb	w0, [x20, #28]
  43515c:	tbnz	w0, #2, 435248 <ferror@plt+0x31c78>
  435160:	ldr	x21, [x20, #16]
  435164:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435168:	add	x1, x1, #0x5c7
  43516c:	mov	x0, x21
  435170:	bl	4034b0 <strcspn@plt>
  435174:	sxtw	x23, w0
  435178:	mov	x1, x21
  43517c:	mov	w2, w23
  435180:	mov	x0, x19
  435184:	bl	43b16c <ferror@plt+0x37b9c>
  435188:	mov	x22, x0
  43518c:	ldr	x21, [x20, #16]
  435190:	mov	w1, #0xa                   	// #10
  435194:	add	x21, x21, x23
  435198:	mov	x0, x21
  43519c:	bl	4032f0 <strchr@plt>
  4351a0:	mov	x1, x21
  4351a4:	sub	x2, x0, x21
  4351a8:	mov	w3, #0x1                   	// #1
  4351ac:	mov	x0, x19
  4351b0:	bl	434db4 <ferror@plt+0x317e4>
  4351b4:	mov	x21, x0
  4351b8:	cbz	x0, 435264 <ferror@plt+0x31c94>
  4351bc:	mov	x0, x19
  4351c0:	bl	43b814 <ferror@plt+0x38244>
  4351c4:	mov	w0, #0x1                   	// #1
  4351c8:	strb	w0, [x21, #106]
  4351cc:	mov	x1, x22
  4351d0:	mov	x0, x19
  4351d4:	bl	442c3c <ferror@plt+0x3f66c>
  4351d8:	tst	w0, #0xff
  4351dc:	b.ne	43520c <ferror@plt+0x31c3c>  // b.any
  4351e0:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4351e4:	add	x2, x2, #0x5cb
  4351e8:	mov	w1, #0x9a8                 	// #2472
  4351ec:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4351f0:	add	x0, x0, #0x5de
  4351f4:	bl	403600 <ferror@plt+0x30>
  4351f8:	mov	x21, x20
  4351fc:	mov	x20, x1
  435200:	b	4350d0 <ferror@plt+0x31b00>
  435204:	str	x1, [x21]
  435208:	b	4350f4 <ferror@plt+0x31b24>
  43520c:	mov	x0, x19
  435210:	bl	434ea4 <ferror@plt+0x318d4>
  435214:	ldr	x2, [x22, #24]
  435218:	ldrb	w1, [x20, #28]
  43521c:	ldr	w0, [x20, #24]
  435220:	str	w0, [x2, #8]
  435224:	ubfx	x0, x1, #1, #1
  435228:	ubfx	x1, x1, #0, #1
  43522c:	ubfiz	w0, w0, #5, #3
  435230:	ubfiz	w1, w1, #4, #4
  435234:	orr	w0, w0, w1
  435238:	ldrb	w1, [x2, #19]
  43523c:	and	w1, w1, #0xffffffcf
  435240:	orr	w0, w0, w1
  435244:	strb	w0, [x2, #19]
  435248:	ldr	x0, [x20, #16]
  43524c:	bl	4032a0 <free@plt>
  435250:	ldr	x0, [x20, #8]
  435254:	bl	4032a0 <free@plt>
  435258:	mov	x0, x20
  43525c:	bl	4032a0 <free@plt>
  435260:	b	435024 <ferror@plt+0x31a54>
  435264:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435268:	mov	w1, #0x9ac                 	// #2476
  43526c:	add	x2, x2, #0x5cb
  435270:	b	4351ec <ferror@plt+0x31c1c>
  435274:	stp	x29, x30, [sp, #-96]!
  435278:	mov	x29, sp
  43527c:	stp	x23, x24, [sp, #48]
  435280:	mov	w23, w2
  435284:	ldr	w2, [x1]
  435288:	ldr	x1, [x1, #8]
  43528c:	stp	x19, x20, [sp, #16]
  435290:	mov	x19, x0
  435294:	sub	w0, w2, #0x1
  435298:	stp	x21, x22, [sp, #32]
  43529c:	add	x0, x0, #0xf
  4352a0:	stp	x25, x26, [sp, #64]
  4352a4:	and	x0, x0, #0x1fffffff0
  4352a8:	mov	w2, w2
  4352ac:	stp	x27, x28, [sp, #80]
  4352b0:	sub	sp, sp, x0
  4352b4:	mov	x21, sp
  4352b8:	ldrb	w0, [x1]
  4352bc:	sub	x2, x2, #0x1
  4352c0:	mov	x20, x21
  4352c4:	cmp	w0, #0x4c
  4352c8:	cset	x0, eq  // eq = none
  4352cc:	add	x0, x0, #0x1
  4352d0:	add	x0, x1, x0
  4352d4:	add	x1, x1, x2
  4352d8:	cmp	x0, x1
  4352dc:	b.cs	435310 <ferror@plt+0x31d40>  // b.hs, b.nlast
  4352e0:	ldrb	w2, [x0]
  4352e4:	cmp	w2, #0x5c
  4352e8:	b.ne	435304 <ferror@plt+0x31d34>  // b.any
  4352ec:	ldrb	w2, [x0, #1]
  4352f0:	cmp	w2, #0x5c
  4352f4:	b.eq	435300 <ferror@plt+0x31d30>  // b.none
  4352f8:	cmp	w2, #0x22
  4352fc:	b.ne	435304 <ferror@plt+0x31d34>  // b.any
  435300:	add	x0, x0, #0x1
  435304:	ldrb	w2, [x0], #1
  435308:	strb	w2, [x20], #1
  43530c:	b	4352d8 <ferror@plt+0x31d08>
  435310:	mov	w0, #0xa                   	// #10
  435314:	strb	w0, [x20]
  435318:	mov	x1, #0x38                  	// #56
  43531c:	mov	x0, #0x1                   	// #1
  435320:	ldr	x26, [x19, #136]
  435324:	ldr	x25, [x19, #448]
  435328:	ldr	x24, [x19, #488]
  43532c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  435330:	str	x0, [x19, #136]
  435334:	mov	x1, x21
  435338:	sub	x2, x20, x21
  43533c:	mov	x0, x19
  435340:	mov	w3, #0x1                   	// #1
  435344:	bl	434db4 <ferror@plt+0x317e4>
  435348:	ldr	x0, [x19]
  43534c:	ldr	x1, [x0, #72]
  435350:	cbz	x1, 43535c <ferror@plt+0x31d8c>
  435354:	ldr	x1, [x1, #80]
  435358:	str	x1, [x0, #80]
  43535c:	mov	w0, #0x1                   	// #1
  435360:	strb	w0, [x19, #16]
  435364:	mov	w0, #0x53                  	// #83
  435368:	strb	w0, [x19, #156]
  43536c:	ldr	x0, [x19, #40]
  435370:	strb	wzr, [x19, #21]
  435374:	add	x21, x19, #0x98
  435378:	ldr	w0, [x0, #60]
  43537c:	str	w0, [x19, #48]
  435380:	mov	x0, x19
  435384:	bl	43b814 <ferror@plt+0x38244>
  435388:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43538c:	add	x0, x0, #0x668
  435390:	add	x0, x0, #0x108
  435394:	ldr	x20, [x19, #144]
  435398:	str	x0, [x19, #144]
  43539c:	mov	x0, x19
  4353a0:	bl	433e5c <ferror@plt+0x3088c>
  4353a4:	mov	x0, x19
  4353a8:	mov	w1, #0x1                   	// #1
  4353ac:	bl	433568 <ferror@plt+0x2ff98>
  4353b0:	str	x20, [x19, #144]
  4353b4:	ldrb	w0, [x19, #156]
  4353b8:	cmp	w0, #0x51
  4353bc:	b.ne	4354ac <ferror@plt+0x31edc>  // b.any
  4353c0:	mov	x0, #0x4b0                 	// #1200
  4353c4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4353c8:	mov	x20, x0
  4353cc:	mov	w22, #0x32                  	// #50
  4353d0:	ldp	x0, x1, [x19, #152]
  4353d4:	mov	x27, #0x18                  	// #24
  4353d8:	stp	x0, x1, [x20]
  4353dc:	ldr	x0, [x21, #16]
  4353e0:	mov	x21, #0x0                   	// #0
  4353e4:	str	x0, [x20, #16]
  4353e8:	mov	x0, x19
  4353ec:	bl	444ea4 <ferror@plt+0x418d4>
  4353f0:	madd	x4, x21, x27, x27
  4353f4:	add	x28, x21, #0x1
  4353f8:	ldp	x2, x3, [x0]
  4353fc:	add	x1, x20, x4
  435400:	add	w21, w21, #0x2
  435404:	stp	x2, x3, [x1]
  435408:	ldr	x0, [x0, #16]
  43540c:	str	x0, [x1, #16]
  435410:	ldrh	w0, [x1, #6]
  435414:	str	w23, [x20, x4]
  435418:	orr	w0, w0, #0x400
  43541c:	strh	w0, [x1, #6]
  435420:	ldrb	w0, [x1, #4]
  435424:	cmp	w0, #0x52
  435428:	b.ne	435484 <ferror@plt+0x31eb4>  // b.any
  43542c:	ldr	x0, [x19]
  435430:	str	xzr, [x0, #80]
  435434:	mov	x0, x19
  435438:	bl	434ea4 <ferror@plt+0x318d4>
  43543c:	ldr	x0, [x19, #136]
  435440:	bl	4032a0 <free@plt>
  435444:	str	x26, [x19, #136]
  435448:	str	x25, [x19, #448]
  43544c:	mov	w3, w21
  435450:	str	x24, [x19, #488]
  435454:	mov	x2, x20
  435458:	mov	x0, x19
  43545c:	mov	x1, #0x0                   	// #0
  435460:	bl	442430 <ferror@plt+0x3ee60>
  435464:	mov	sp, x29
  435468:	ldp	x19, x20, [sp, #16]
  43546c:	ldp	x21, x22, [sp, #32]
  435470:	ldp	x23, x24, [sp, #48]
  435474:	ldp	x25, x26, [sp, #64]
  435478:	ldp	x27, x28, [sp, #80]
  43547c:	ldp	x29, x30, [sp], #96
  435480:	ret
  435484:	cmp	w22, w21
  435488:	b.ne	4354a4 <ferror@plt+0x31ed4>  // b.any
  43548c:	add	w22, w22, w22, lsl #1
  435490:	mov	x0, x20
  435494:	asr	w22, w22, #1
  435498:	smull	x1, w22, w27
  43549c:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4354a0:	mov	x20, x0
  4354a4:	mov	x21, x28
  4354a8:	b	4353e8 <ferror@plt+0x31e18>
  4354ac:	mov	x0, #0x18                  	// #24
  4354b0:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4354b4:	mov	x20, x0
  4354b8:	ldp	x0, x1, [x19, #152]
  4354bc:	ldr	x3, [x19, #904]
  4354c0:	stp	x0, x1, [x20]
  4354c4:	ldr	x0, [x21, #16]
  4354c8:	str	x0, [x20, #16]
  4354cc:	cbz	x3, 4354e0 <ferror@plt+0x31f10>
  4354d0:	ldr	x1, [x19, #448]
  4354d4:	mov	x0, x19
  4354d8:	mov	w2, #0x0                   	// #0
  4354dc:	blr	x3
  4354e0:	mov	w21, #0x1                   	// #1
  4354e4:	b	43542c <ferror@plt+0x31e5c>
  4354e8:	stp	x29, x30, [sp, #-32]!
  4354ec:	mov	x29, sp
  4354f0:	stp	x19, x20, [sp, #16]
  4354f4:	mov	x19, x0
  4354f8:	mov	w20, w1
  4354fc:	bl	432d68 <ferror@plt+0x2f798>
  435500:	mov	w1, #0x53                  	// #83
  435504:	strb	w1, [x19, #156]
  435508:	cbz	x0, 43552c <ferror@plt+0x31f5c>
  43550c:	add	x1, x0, #0x8
  435510:	mov	w2, w20
  435514:	mov	x0, x19
  435518:	bl	435274 <ferror@plt+0x31ca4>
  43551c:	mov	w0, #0x1                   	// #1
  435520:	ldp	x19, x20, [sp, #16]
  435524:	ldp	x29, x30, [sp], #32
  435528:	ret
  43552c:	mov	x0, x19
  435530:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435534:	mov	w1, #0x3                   	// #3
  435538:	add	x2, x2, #0x5f8
  43553c:	bl	435b3c <ferror@plt+0x3256c>
  435540:	mov	w0, #0x0                   	// #0
  435544:	b	435520 <ferror@plt+0x31f50>
  435548:	stp	x29, x30, [sp, #-32]!
  43554c:	mov	x29, sp
  435550:	stp	x19, x20, [sp, #16]
  435554:	mov	x19, x0
  435558:	mov	w20, w1
  43555c:	mov	x1, x2
  435560:	mov	x2, x3
  435564:	mov	w3, #0x1                   	// #1
  435568:	bl	434db4 <ferror@plt+0x317e4>
  43556c:	mov	w0, #0x1                   	// #1
  435570:	strb	w0, [x19, #16]
  435574:	mov	w0, #0x53                  	// #83
  435578:	strb	w0, [x19, #156]
  43557c:	ldr	x0, [x19, #40]
  435580:	strb	wzr, [x19, #21]
  435584:	ldr	w0, [x0, #60]
  435588:	str	w0, [x19, #48]
  43558c:	mov	x0, x19
  435590:	bl	43b814 <ferror@plt+0x38244>
  435594:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435598:	add	x1, x1, #0x668
  43559c:	mov	w0, #0x18                  	// #24
  4355a0:	smaddl	x20, w20, w0, x1
  4355a4:	ldrb	w0, [x19, #1160]
  4355a8:	str	x20, [x19, #144]
  4355ac:	cbz	w0, 4355b8 <ferror@plt+0x31fe8>
  4355b0:	mov	x0, x19
  4355b4:	bl	432ba8 <ferror@plt+0x2f5d8>
  4355b8:	ldr	x0, [x19, #144]
  4355bc:	ldr	x1, [x0]
  4355c0:	mov	x0, x19
  4355c4:	blr	x1
  4355c8:	mov	x0, x19
  4355cc:	mov	w1, #0x1                   	// #1
  4355d0:	bl	433568 <ferror@plt+0x2ff98>
  4355d4:	mov	x0, x19
  4355d8:	ldp	x19, x20, [sp, #16]
  4355dc:	ldp	x29, x30, [sp], #32
  4355e0:	b	434ea4 <ferror@plt+0x318d4>
  4355e4:	stp	x29, x30, [sp, #-48]!
  4355e8:	mov	x29, sp
  4355ec:	stp	x19, x20, [sp, #16]
  4355f0:	stp	x21, x22, [sp, #32]
  4355f4:	mov	x21, x1
  4355f8:	mov	x22, x0
  4355fc:	mov	x0, x1
  435600:	bl	402d50 <strlen@plt>
  435604:	mov	x19, x0
  435608:	add	x0, x0, #0x12
  43560c:	and	x0, x0, #0xfffffffffffffff0
  435610:	mov	x2, x19
  435614:	sub	sp, sp, x0
  435618:	mov	x1, x21
  43561c:	mov	x20, sp
  435620:	mov	x0, x20
  435624:	bl	402cd0 <memcpy@plt>
  435628:	mov	x0, x21
  43562c:	mov	w1, #0x3d                  	// #61
  435630:	bl	4032f0 <strchr@plt>
  435634:	mov	w2, #0x20                  	// #32
  435638:	cbz	x0, 435674 <ferror@plt+0x320a4>
  43563c:	sub	x1, x0, x21
  435640:	strb	w2, [x20, x1]
  435644:	mov	w0, #0xa                   	// #10
  435648:	mov	x3, x19
  43564c:	mov	x2, x20
  435650:	mov	w1, #0x0                   	// #0
  435654:	strb	w0, [x20, x19]
  435658:	mov	x0, x22
  43565c:	bl	435548 <ferror@plt+0x31f78>
  435660:	mov	sp, x29
  435664:	ldp	x19, x20, [sp, #16]
  435668:	ldp	x21, x22, [sp, #32]
  43566c:	ldp	x29, x30, [sp], #48
  435670:	ret
  435674:	add	x0, x19, #0x1
  435678:	strb	w2, [x20, x19]
  43567c:	mov	w1, #0x31                  	// #49
  435680:	add	x19, x19, #0x2
  435684:	strb	w1, [x20, x0]
  435688:	b	435644 <ferror@plt+0x32074>
  43568c:	stp	x29, x30, [sp, #-272]!
  435690:	mov	x29, sp
  435694:	stp	x19, x20, [sp, #16]
  435698:	mov	x20, x0
  43569c:	mov	x0, x1
  4356a0:	add	x1, sp, #0x110
  4356a4:	stp	x1, x1, [sp, #64]
  4356a8:	add	x1, sp, #0xe0
  4356ac:	str	x1, [sp, #80]
  4356b0:	mov	w1, #0xffffffd0            	// #-48
  4356b4:	str	w1, [sp, #88]
  4356b8:	mov	w1, #0xffffff80            	// #-128
  4356bc:	str	w1, [sp, #92]
  4356c0:	add	x1, sp, #0x20
  4356c4:	stp	x2, x3, [sp, #224]
  4356c8:	ldp	x2, x3, [sp, #64]
  4356cc:	stp	x2, x3, [sp, #32]
  4356d0:	ldp	x2, x3, [sp, #80]
  4356d4:	stp	x2, x3, [sp, #48]
  4356d8:	str	q0, [sp, #96]
  4356dc:	str	q1, [sp, #112]
  4356e0:	str	q2, [sp, #128]
  4356e4:	str	q3, [sp, #144]
  4356e8:	str	q4, [sp, #160]
  4356ec:	str	q5, [sp, #176]
  4356f0:	str	q6, [sp, #192]
  4356f4:	str	q7, [sp, #208]
  4356f8:	stp	x4, x5, [sp, #240]
  4356fc:	stp	x6, x7, [sp, #256]
  435700:	bl	45d890 <_obstack_memory_used@@Base+0x14a0>
  435704:	mov	x1, x0
  435708:	mov	x19, x0
  43570c:	mov	x0, x20
  435710:	bl	4355e4 <ferror@plt+0x32014>
  435714:	mov	x0, x19
  435718:	bl	4032a0 <free@plt>
  43571c:	ldp	x19, x20, [sp, #16]
  435720:	ldp	x29, x30, [sp], #272
  435724:	ret
  435728:	stp	x29, x30, [sp, #-48]!
  43572c:	mov	x29, sp
  435730:	stp	x19, x20, [sp, #16]
  435734:	mov	x20, x1
  435738:	str	x21, [sp, #32]
  43573c:	mov	x21, x0
  435740:	mov	x0, x1
  435744:	bl	402d50 <strlen@plt>
  435748:	mov	x19, x0
  43574c:	add	x0, x0, #0x10
  435750:	and	x0, x0, #0xfffffffffffffff0
  435754:	mov	x2, x19
  435758:	sub	sp, sp, x0
  43575c:	mov	x1, x20
  435760:	mov	x4, sp
  435764:	mov	x0, x4
  435768:	bl	402cd0 <memcpy@plt>
  43576c:	mov	x4, x0
  435770:	mov	w0, #0xa                   	// #10
  435774:	mov	x3, x19
  435778:	mov	x2, x4
  43577c:	mov	w1, #0x0                   	// #0
  435780:	strb	w0, [x4, x19]
  435784:	mov	x0, x21
  435788:	bl	435548 <ferror@plt+0x31f78>
  43578c:	mov	sp, x29
  435790:	ldp	x19, x20, [sp, #16]
  435794:	ldr	x21, [sp, #32]
  435798:	ldp	x29, x30, [sp], #48
  43579c:	ret
  4357a0:	stp	x29, x30, [sp, #-48]!
  4357a4:	mov	x29, sp
  4357a8:	stp	x19, x20, [sp, #16]
  4357ac:	mov	x20, x1
  4357b0:	str	x21, [sp, #32]
  4357b4:	mov	x21, x0
  4357b8:	mov	x0, x1
  4357bc:	bl	402d50 <strlen@plt>
  4357c0:	mov	x19, x0
  4357c4:	add	x0, x0, #0x10
  4357c8:	and	x0, x0, #0xfffffffffffffff0
  4357cc:	mov	x2, x19
  4357d0:	sub	sp, sp, x0
  4357d4:	mov	x1, x20
  4357d8:	mov	x4, sp
  4357dc:	mov	x0, x4
  4357e0:	bl	402cd0 <memcpy@plt>
  4357e4:	mov	x4, x0
  4357e8:	mov	w0, #0xa                   	// #10
  4357ec:	mov	x3, x19
  4357f0:	mov	x2, x4
  4357f4:	mov	w1, #0x7                   	// #7
  4357f8:	strb	w0, [x4, x19]
  4357fc:	mov	x0, x21
  435800:	bl	435548 <ferror@plt+0x31f78>
  435804:	mov	sp, x29
  435808:	ldp	x19, x20, [sp, #16]
  43580c:	ldr	x21, [sp, #32]
  435810:	ldp	x29, x30, [sp], #48
  435814:	ret
  435818:	stp	x29, x30, [sp, #-64]!
  43581c:	mov	x29, sp
  435820:	stp	x19, x20, [sp, #16]
  435824:	stp	x21, x22, [sp, #32]
  435828:	mov	x21, x1
  43582c:	mov	x22, x0
  435830:	mov	x0, x1
  435834:	str	x23, [sp, #48]
  435838:	mov	w23, w2
  43583c:	bl	402d50 <strlen@plt>
  435840:	mov	w1, #0x3d                  	// #61
  435844:	mov	x19, x0
  435848:	mov	x0, x21
  43584c:	bl	4032f0 <strchr@plt>
  435850:	mov	x20, x0
  435854:	add	x0, x19, #0x11
  435858:	and	x0, x0, #0xfffffffffffffff0
  43585c:	mov	x2, x19
  435860:	sub	sp, sp, x0
  435864:	mov	x1, x21
  435868:	mov	x4, sp
  43586c:	mov	x0, x4
  435870:	bl	402cd0 <memcpy@plt>
  435874:	mov	x4, x0
  435878:	cbz	x20, 435894 <ferror@plt+0x322c4>
  43587c:	sub	x20, x20, x21
  435880:	mov	w0, #0x28                  	// #40
  435884:	strb	w0, [x4, x20]
  435888:	mov	w0, #0x29                  	// #41
  43588c:	strb	w0, [x4, x19]
  435890:	add	x19, x19, #0x1
  435894:	mov	w0, #0xa                   	// #10
  435898:	strb	w0, [x4, x19]
  43589c:	mov	x3, x19
  4358a0:	mov	w1, w23
  4358a4:	mov	x0, x22
  4358a8:	mov	x2, x4
  4358ac:	bl	435548 <ferror@plt+0x31f78>
  4358b0:	mov	sp, x29
  4358b4:	ldp	x19, x20, [sp, #16]
  4358b8:	ldp	x21, x22, [sp, #32]
  4358bc:	ldr	x23, [sp, #48]
  4358c0:	ldp	x29, x30, [sp], #64
  4358c4:	ret
  4358c8:	mov	w2, #0x10                  	// #16
  4358cc:	b	435818 <ferror@plt+0x32248>
  4358d0:	mov	w2, #0x11                  	// #17
  4358d4:	b	435818 <ferror@plt+0x32248>
  4358d8:	stp	x29, x30, [sp, #-48]!
  4358dc:	mov	x29, sp
  4358e0:	stp	x19, x20, [sp, #16]
  4358e4:	adrp	x19, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4358e8:	add	x19, x19, #0x668
  4358ec:	str	x21, [sp, #32]
  4358f0:	mov	x21, x0
  4358f4:	mov	w20, #0x0                   	// #0
  4358f8:	ldrh	w2, [x19, #16]
  4358fc:	mov	x0, x21
  435900:	ldr	x1, [x19, #8]
  435904:	add	x19, x19, #0x18
  435908:	bl	43b16c <ferror@plt+0x37b9c>
  43590c:	ubfiz	w1, w20, #1, #7
  435910:	add	w20, w20, #0x1
  435914:	orr	w1, w1, #0x1
  435918:	strb	w1, [x0, #16]
  43591c:	cmp	w20, #0x13
  435920:	b.ne	4358f8 <ferror@plt+0x32328>  // b.any
  435924:	ldp	x19, x20, [sp, #16]
  435928:	ldr	x21, [sp, #32]
  43592c:	ldp	x29, x30, [sp], #48
  435930:	ret
  435934:	b	4327f8 <ferror@plt+0x2f228>
  435938:	stp	x29, x30, [sp, #-64]!
  43593c:	mov	x29, sp
  435940:	stp	x23, x24, [sp, #48]
  435944:	ldr	x24, [x0, #1000]
  435948:	stp	x19, x20, [sp, #16]
  43594c:	stp	x21, x22, [sp, #32]
  435950:	cbnz	x24, 43596c <ferror@plt+0x3239c>
  435954:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435958:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43595c:	add	x2, x2, #0x8e8
  435960:	add	x0, x0, #0x8fa
  435964:	mov	w1, #0x29                  	// #41
  435968:	bl	403600 <ferror@plt+0x30>
  43596c:	mov	x19, x0
  435970:	mov	w20, w1
  435974:	mov	w21, w2
  435978:	mov	x22, x3
  43597c:	mov	x1, x4
  435980:	mov	x23, x5
  435984:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435988:	add	x0, x0, #0x910
  43598c:	bl	403290 <dgettext@plt>
  435990:	mov	x4, x0
  435994:	mov	x5, x23
  435998:	mov	x3, x22
  43599c:	mov	w2, w21
  4359a0:	mov	w1, w20
  4359a4:	mov	x0, x19
  4359a8:	mov	x16, x24
  4359ac:	ldp	x19, x20, [sp, #16]
  4359b0:	ldp	x21, x22, [sp, #32]
  4359b4:	ldp	x23, x24, [sp, #48]
  4359b8:	ldp	x29, x30, [sp], #64
  4359bc:	br	x16
  4359c0:	stp	x29, x30, [sp, #-240]!
  4359c4:	mov	x29, sp
  4359c8:	stp	x19, x20, [sp, #16]
  4359cc:	mov	w20, w1
  4359d0:	mov	x19, x0
  4359d4:	stp	x21, x22, [sp, #32]
  4359d8:	mov	w21, w2
  4359dc:	mov	x22, x3
  4359e0:	ldr	x1, [x0, #40]
  4359e4:	str	x23, [sp, #48]
  4359e8:	mov	x23, x4
  4359ec:	ldrb	w0, [x0, #1160]
  4359f0:	cbz	w0, 435a54 <ferror@plt+0x32484>
  4359f4:	ldrb	w0, [x19, #16]
  4359f8:	cbz	w0, 435a4c <ferror@plt+0x3247c>
  4359fc:	ldr	w2, [x19, #48]
  435a00:	add	x0, sp, #0x48
  435a04:	mov	x3, #0x0                   	// #0
  435a08:	bl	441318 <ferror@plt+0x3dd48>
  435a0c:	mov	x5, x23
  435a10:	mov	x4, x22
  435a14:	add	x3, sp, #0x48
  435a18:	mov	w2, w21
  435a1c:	mov	w1, w20
  435a20:	mov	x0, x19
  435a24:	bl	435938 <ferror@plt+0x32368>
  435a28:	mov	w19, w0
  435a2c:	add	x0, sp, #0x48
  435a30:	bl	4410ac <ferror@plt+0x3dadc>
  435a34:	mov	w0, w19
  435a38:	ldp	x19, x20, [sp, #16]
  435a3c:	ldp	x21, x22, [sp, #32]
  435a40:	ldr	x23, [sp, #48]
  435a44:	ldp	x29, x30, [sp], #240
  435a48:	ret
  435a4c:	ldr	w2, [x1, #60]
  435a50:	b	435a00 <ferror@plt+0x32430>
  435a54:	ldr	x2, [x19, #488]
  435a58:	ldr	x0, [x19, #448]
  435a5c:	ldr	x2, [x2, #16]
  435a60:	cmp	x0, x2
  435a64:	b.eq	435a70 <ferror@plt+0x324a0>  // b.none
  435a68:	ldur	w2, [x0, #-24]
  435a6c:	b	435a00 <ferror@plt+0x32430>
  435a70:	mov	w2, #0x0                   	// #0
  435a74:	b	435a00 <ferror@plt+0x32430>
  435a78:	stp	x29, x30, [sp, #-240]!
  435a7c:	mov	x29, sp
  435a80:	stp	x19, x20, [sp, #16]
  435a84:	mov	x19, x0
  435a88:	ldr	x0, [x0, #1000]
  435a8c:	stp	x21, x22, [sp, #32]
  435a90:	stp	x23, x24, [sp, #48]
  435a94:	cbnz	x0, 435ab0 <ferror@plt+0x324e0>
  435a98:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435a9c:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435aa0:	add	x2, x2, #0x917
  435aa4:	add	x0, x0, #0x8fa
  435aa8:	mov	w1, #0x9f                  	// #159
  435aac:	bl	403600 <ferror@plt+0x30>
  435ab0:	mov	w21, w1
  435ab4:	mov	w22, w2
  435ab8:	ldr	x1, [x19, #40]
  435abc:	mov	w2, w3
  435ac0:	mov	w20, w4
  435ac4:	mov	x24, x5
  435ac8:	mov	x23, x6
  435acc:	add	x0, sp, #0x48
  435ad0:	mov	x3, #0x0                   	// #0
  435ad4:	bl	441318 <ferror@plt+0x3dd48>
  435ad8:	cbz	w20, 435ae8 <ferror@plt+0x32518>
  435adc:	mov	w1, w20
  435ae0:	add	x0, sp, #0x48
  435ae4:	bl	44124c <ferror@plt+0x3dc7c>
  435ae8:	ldr	x20, [x19, #1000]
  435aec:	mov	x1, x24
  435af0:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435af4:	add	x0, x0, #0x910
  435af8:	bl	403290 <dgettext@plt>
  435afc:	mov	x4, x0
  435b00:	mov	x5, x23
  435b04:	add	x3, sp, #0x48
  435b08:	mov	w2, w22
  435b0c:	mov	w1, w21
  435b10:	mov	x0, x19
  435b14:	blr	x20
  435b18:	mov	w19, w0
  435b1c:	add	x0, sp, #0x48
  435b20:	bl	4410ac <ferror@plt+0x3dadc>
  435b24:	mov	w0, w19
  435b28:	ldp	x19, x20, [sp, #16]
  435b2c:	ldp	x21, x22, [sp, #32]
  435b30:	ldp	x23, x24, [sp, #48]
  435b34:	ldp	x29, x30, [sp], #240
  435b38:	ret
  435b3c:	stp	x29, x30, [sp, #-224]!
  435b40:	mov	x29, sp
  435b44:	stp	x3, x4, [sp, #184]
  435b48:	add	x3, sp, #0xe0
  435b4c:	add	x4, sp, #0x10
  435b50:	stp	x3, x3, [sp, #16]
  435b54:	add	x3, sp, #0xb0
  435b58:	str	x3, [sp, #32]
  435b5c:	mov	w3, #0xffffffd8            	// #-40
  435b60:	str	w3, [sp, #40]
  435b64:	mov	w3, #0xffffff80            	// #-128
  435b68:	str	w3, [sp, #44]
  435b6c:	mov	x3, x2
  435b70:	mov	w2, #0x0                   	// #0
  435b74:	str	q0, [sp, #48]
  435b78:	str	q1, [sp, #64]
  435b7c:	str	q2, [sp, #80]
  435b80:	str	q3, [sp, #96]
  435b84:	str	q4, [sp, #112]
  435b88:	str	q5, [sp, #128]
  435b8c:	str	q6, [sp, #144]
  435b90:	str	q7, [sp, #160]
  435b94:	stp	x5, x6, [sp, #200]
  435b98:	str	x7, [sp, #216]
  435b9c:	bl	4359c0 <ferror@plt+0x323f0>
  435ba0:	ldp	x29, x30, [sp], #224
  435ba4:	ret
  435ba8:	stp	x29, x30, [sp, #-224]!
  435bac:	mov	x29, sp
  435bb0:	stp	x3, x4, [sp, #184]
  435bb4:	add	x3, sp, #0xe0
  435bb8:	add	x4, sp, #0x10
  435bbc:	stp	x3, x3, [sp, #16]
  435bc0:	add	x3, sp, #0xb0
  435bc4:	str	x3, [sp, #32]
  435bc8:	mov	w3, #0xffffffd8            	// #-40
  435bcc:	str	w3, [sp, #40]
  435bd0:	mov	w3, #0xffffff80            	// #-128
  435bd4:	str	w3, [sp, #44]
  435bd8:	mov	x3, x2
  435bdc:	mov	w2, w1
  435be0:	mov	w1, #0x0                   	// #0
  435be4:	str	q0, [sp, #48]
  435be8:	str	q1, [sp, #64]
  435bec:	str	q2, [sp, #80]
  435bf0:	str	q3, [sp, #96]
  435bf4:	str	q4, [sp, #112]
  435bf8:	str	q5, [sp, #128]
  435bfc:	str	q6, [sp, #144]
  435c00:	str	q7, [sp, #160]
  435c04:	stp	x5, x6, [sp, #200]
  435c08:	str	x7, [sp, #216]
  435c0c:	bl	4359c0 <ferror@plt+0x323f0>
  435c10:	ldp	x29, x30, [sp], #224
  435c14:	ret
  435c18:	stp	x29, x30, [sp, #-224]!
  435c1c:	mov	x29, sp
  435c20:	stp	x3, x4, [sp, #184]
  435c24:	add	x3, sp, #0xe0
  435c28:	add	x4, sp, #0x10
  435c2c:	stp	x3, x3, [sp, #16]
  435c30:	add	x3, sp, #0xb0
  435c34:	str	x3, [sp, #32]
  435c38:	mov	w3, #0xffffffd8            	// #-40
  435c3c:	str	w3, [sp, #40]
  435c40:	mov	w3, #0xffffff80            	// #-128
  435c44:	str	w3, [sp, #44]
  435c48:	mov	x3, x2
  435c4c:	mov	w2, w1
  435c50:	mov	w1, #0x2                   	// #2
  435c54:	str	q0, [sp, #48]
  435c58:	str	q1, [sp, #64]
  435c5c:	str	q2, [sp, #80]
  435c60:	str	q3, [sp, #96]
  435c64:	str	q4, [sp, #112]
  435c68:	str	q5, [sp, #128]
  435c6c:	str	q6, [sp, #144]
  435c70:	str	q7, [sp, #160]
  435c74:	stp	x5, x6, [sp, #200]
  435c78:	str	x7, [sp, #216]
  435c7c:	bl	4359c0 <ferror@plt+0x323f0>
  435c80:	ldp	x29, x30, [sp], #224
  435c84:	ret
  435c88:	stp	x29, x30, [sp, #-224]!
  435c8c:	mov	x29, sp
  435c90:	stp	x3, x4, [sp, #184]
  435c94:	add	x3, sp, #0xe0
  435c98:	add	x4, sp, #0x10
  435c9c:	stp	x3, x3, [sp, #16]
  435ca0:	add	x3, sp, #0xb0
  435ca4:	str	x3, [sp, #32]
  435ca8:	mov	w3, #0xffffffd8            	// #-40
  435cac:	str	w3, [sp, #40]
  435cb0:	mov	w3, #0xffffff80            	// #-128
  435cb4:	str	w3, [sp, #44]
  435cb8:	mov	x3, x2
  435cbc:	mov	w2, w1
  435cc0:	mov	w1, #0x1                   	// #1
  435cc4:	str	q0, [sp, #48]
  435cc8:	str	q1, [sp, #64]
  435ccc:	str	q2, [sp, #80]
  435cd0:	str	q3, [sp, #96]
  435cd4:	str	q4, [sp, #112]
  435cd8:	str	q5, [sp, #128]
  435cdc:	str	q6, [sp, #144]
  435ce0:	str	q7, [sp, #160]
  435ce4:	stp	x5, x6, [sp, #200]
  435ce8:	str	x7, [sp, #216]
  435cec:	bl	4359c0 <ferror@plt+0x323f0>
  435cf0:	ldp	x29, x30, [sp], #224
  435cf4:	ret
  435cf8:	stp	x29, x30, [sp, #-208]!
  435cfc:	mov	x29, sp
  435d00:	stp	x5, x6, [sp, #184]
  435d04:	add	x5, sp, #0xd0
  435d08:	add	x6, sp, #0x10
  435d0c:	stp	x5, x5, [sp, #16]
  435d10:	add	x5, sp, #0xb0
  435d14:	str	x5, [sp, #32]
  435d18:	mov	w5, #0xffffffe8            	// #-24
  435d1c:	str	w5, [sp, #40]
  435d20:	mov	w5, #0xffffff80            	// #-128
  435d24:	str	w5, [sp, #44]
  435d28:	mov	x5, x4
  435d2c:	mov	w4, w3
  435d30:	mov	w3, w2
  435d34:	mov	w2, #0x0                   	// #0
  435d38:	str	q0, [sp, #48]
  435d3c:	str	q1, [sp, #64]
  435d40:	str	q2, [sp, #80]
  435d44:	str	q3, [sp, #96]
  435d48:	str	q4, [sp, #112]
  435d4c:	str	q5, [sp, #128]
  435d50:	str	q6, [sp, #144]
  435d54:	str	q7, [sp, #160]
  435d58:	str	x7, [sp, #200]
  435d5c:	bl	435a78 <ferror@plt+0x324a8>
  435d60:	ldp	x29, x30, [sp], #208
  435d64:	ret
  435d68:	stp	x29, x30, [sp, #-208]!
  435d6c:	mov	x29, sp
  435d70:	stp	x5, x6, [sp, #184]
  435d74:	add	x5, sp, #0xd0
  435d78:	add	x6, sp, #0x10
  435d7c:	stp	x5, x5, [sp, #16]
  435d80:	add	x5, sp, #0xb0
  435d84:	str	x5, [sp, #32]
  435d88:	mov	w5, #0xffffffe8            	// #-24
  435d8c:	str	w5, [sp, #40]
  435d90:	mov	w5, #0xffffff80            	// #-128
  435d94:	str	w5, [sp, #44]
  435d98:	mov	x5, x4
  435d9c:	mov	w4, w3
  435da0:	mov	w3, w2
  435da4:	mov	w2, w1
  435da8:	mov	w1, #0x0                   	// #0
  435dac:	str	q0, [sp, #48]
  435db0:	str	q1, [sp, #64]
  435db4:	str	q2, [sp, #80]
  435db8:	str	q3, [sp, #96]
  435dbc:	str	q4, [sp, #112]
  435dc0:	str	q5, [sp, #128]
  435dc4:	str	q6, [sp, #144]
  435dc8:	str	q7, [sp, #160]
  435dcc:	str	x7, [sp, #200]
  435dd0:	bl	435a78 <ferror@plt+0x324a8>
  435dd4:	ldp	x29, x30, [sp], #208
  435dd8:	ret
  435ddc:	stp	x29, x30, [sp, #-208]!
  435de0:	mov	x29, sp
  435de4:	stp	x5, x6, [sp, #184]
  435de8:	add	x5, sp, #0xd0
  435dec:	add	x6, sp, #0x10
  435df0:	stp	x5, x5, [sp, #16]
  435df4:	add	x5, sp, #0xb0
  435df8:	str	x5, [sp, #32]
  435dfc:	mov	w5, #0xffffffe8            	// #-24
  435e00:	str	w5, [sp, #40]
  435e04:	mov	w5, #0xffffff80            	// #-128
  435e08:	str	w5, [sp, #44]
  435e0c:	mov	x5, x4
  435e10:	mov	w4, w3
  435e14:	mov	w3, w2
  435e18:	mov	w2, w1
  435e1c:	mov	w1, #0x2                   	// #2
  435e20:	str	q0, [sp, #48]
  435e24:	str	q1, [sp, #64]
  435e28:	str	q2, [sp, #80]
  435e2c:	str	q3, [sp, #96]
  435e30:	str	q4, [sp, #112]
  435e34:	str	q5, [sp, #128]
  435e38:	str	q6, [sp, #144]
  435e3c:	str	q7, [sp, #160]
  435e40:	str	x7, [sp, #200]
  435e44:	bl	435a78 <ferror@plt+0x324a8>
  435e48:	ldp	x29, x30, [sp], #208
  435e4c:	ret
  435e50:	stp	x29, x30, [sp, #-208]!
  435e54:	mov	x29, sp
  435e58:	stp	x5, x6, [sp, #184]
  435e5c:	add	x5, sp, #0xd0
  435e60:	add	x6, sp, #0x10
  435e64:	stp	x5, x5, [sp, #16]
  435e68:	add	x5, sp, #0xb0
  435e6c:	str	x5, [sp, #32]
  435e70:	mov	w5, #0xffffffe8            	// #-24
  435e74:	str	w5, [sp, #40]
  435e78:	mov	w5, #0xffffff80            	// #-128
  435e7c:	str	w5, [sp, #44]
  435e80:	mov	x5, x4
  435e84:	mov	w4, w3
  435e88:	mov	w3, w2
  435e8c:	mov	w2, w1
  435e90:	mov	w1, #0x1                   	// #1
  435e94:	str	q0, [sp, #48]
  435e98:	str	q1, [sp, #64]
  435e9c:	str	q2, [sp, #80]
  435ea0:	str	q3, [sp, #96]
  435ea4:	str	q4, [sp, #112]
  435ea8:	str	q5, [sp, #128]
  435eac:	str	q6, [sp, #144]
  435eb0:	str	q7, [sp, #160]
  435eb4:	str	x7, [sp, #200]
  435eb8:	bl	435a78 <ferror@plt+0x324a8>
  435ebc:	ldp	x29, x30, [sp], #208
  435ec0:	ret
  435ec4:	stp	x29, x30, [sp, #-416]!
  435ec8:	mov	x29, sp
  435ecc:	stp	x19, x20, [sp, #16]
  435ed0:	mov	x19, x0
  435ed4:	mov	w20, w1
  435ed8:	str	q0, [sp, #256]
  435edc:	add	x0, sp, #0x1a0
  435ee0:	str	q1, [sp, #272]
  435ee4:	str	q2, [sp, #288]
  435ee8:	str	q3, [sp, #304]
  435eec:	str	q4, [sp, #320]
  435ef0:	str	q5, [sp, #336]
  435ef4:	str	q6, [sp, #352]
  435ef8:	str	q7, [sp, #368]
  435efc:	stp	x4, x5, [sp, #384]
  435f00:	stp	x6, x7, [sp, #400]
  435f04:	ldr	x1, [x19, #40]
  435f08:	stp	x0, x0, [sp, #56]
  435f0c:	add	x0, sp, #0x180
  435f10:	str	x0, [sp, #72]
  435f14:	mov	w0, #0xffffffe0            	// #-32
  435f18:	str	w0, [sp, #80]
  435f1c:	mov	w0, #0xffffff80            	// #-128
  435f20:	str	x21, [sp, #32]
  435f24:	mov	x21, x3
  435f28:	mov	x3, #0x0                   	// #0
  435f2c:	str	w0, [sp, #84]
  435f30:	add	x0, sp, #0x58
  435f34:	bl	441318 <ferror@plt+0x3dd48>
  435f38:	add	x5, sp, #0x38
  435f3c:	mov	x4, x21
  435f40:	add	x3, sp, #0x58
  435f44:	mov	w1, w20
  435f48:	mov	w2, #0x0                   	// #0
  435f4c:	mov	x0, x19
  435f50:	bl	435938 <ferror@plt+0x32368>
  435f54:	mov	w19, w0
  435f58:	add	x0, sp, #0x58
  435f5c:	bl	4410ac <ferror@plt+0x3dadc>
  435f60:	mov	w0, w19
  435f64:	ldp	x19, x20, [sp, #16]
  435f68:	ldr	x21, [sp, #32]
  435f6c:	ldp	x29, x30, [sp], #416
  435f70:	ret
  435f74:	stp	x29, x30, [sp, #-208]!
  435f78:	mov	x29, sp
  435f7c:	stp	x4, x5, [sp, #176]
  435f80:	add	x4, sp, #0xd0
  435f84:	add	x5, sp, #0x10
  435f88:	stp	x4, x4, [sp, #16]
  435f8c:	add	x4, sp, #0xb0
  435f90:	str	x4, [sp, #32]
  435f94:	mov	w4, #0xffffffe0            	// #-32
  435f98:	str	w4, [sp, #40]
  435f9c:	mov	w4, #0xffffff80            	// #-128
  435fa0:	str	w4, [sp, #44]
  435fa4:	mov	x4, x3
  435fa8:	mov	x3, x2
  435fac:	mov	w2, #0x0                   	// #0
  435fb0:	str	q0, [sp, #48]
  435fb4:	str	q1, [sp, #64]
  435fb8:	str	q2, [sp, #80]
  435fbc:	str	q3, [sp, #96]
  435fc0:	str	q4, [sp, #112]
  435fc4:	str	q5, [sp, #128]
  435fc8:	str	q6, [sp, #144]
  435fcc:	str	q7, [sp, #160]
  435fd0:	stp	x6, x7, [sp, #192]
  435fd4:	bl	435938 <ferror@plt+0x32368>
  435fd8:	ldp	x29, x30, [sp], #208
  435fdc:	ret
  435fe0:	stp	x29, x30, [sp, #-48]!
  435fe4:	mov	x29, sp
  435fe8:	stp	x19, x20, [sp, #16]
  435fec:	mov	w20, w1
  435ff0:	mov	x1, x2
  435ff4:	mov	x19, x0
  435ff8:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  435ffc:	add	x0, x0, #0x910
  436000:	str	x21, [sp, #32]
  436004:	bl	403290 <dgettext@plt>
  436008:	mov	x21, x0
  43600c:	bl	4034e0 <__errno_location@plt>
  436010:	ldr	w0, [x0]
  436014:	bl	45d814 <_obstack_memory_used@@Base+0x1424>
  436018:	mov	x4, x0
  43601c:	mov	x3, x21
  436020:	mov	w1, w20
  436024:	mov	x0, x19
  436028:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43602c:	ldp	x19, x20, [sp, #16]
  436030:	add	x2, x2, #0x930
  436034:	ldr	x21, [sp, #32]
  436038:	ldp	x29, x30, [sp], #48
  43603c:	b	435b3c <ferror@plt+0x3256c>
  436040:	stp	x29, x30, [sp, #-48]!
  436044:	mov	x29, sp
  436048:	stp	x19, x20, [sp, #16]
  43604c:	mov	x20, x0
  436050:	stp	x21, x22, [sp, #32]
  436054:	mov	w21, w1
  436058:	mov	w22, w3
  43605c:	ldrb	w0, [x2]
  436060:	cbnz	w0, 4360b4 <ferror@plt+0x32ae4>
  436064:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  436068:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43606c:	add	x1, x1, #0x937
  436070:	add	x0, x0, #0x910
  436074:	bl	403290 <dgettext@plt>
  436078:	mov	x19, x0
  43607c:	bl	4034e0 <__errno_location@plt>
  436080:	ldr	w0, [x0]
  436084:	bl	45d814 <_obstack_memory_used@@Base+0x1424>
  436088:	mov	x5, x0
  43608c:	mov	x4, x19
  436090:	mov	w2, w22
  436094:	mov	w1, w21
  436098:	mov	x0, x20
  43609c:	ldp	x19, x20, [sp, #16]
  4360a0:	adrp	x3, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4360a4:	ldp	x21, x22, [sp, #32]
  4360a8:	add	x3, x3, #0x930
  4360ac:	ldp	x29, x30, [sp], #48
  4360b0:	b	435ec4 <ferror@plt+0x328f4>
  4360b4:	mov	x19, x2
  4360b8:	b	43607c <ferror@plt+0x32aac>
  4360bc:	mov	x7, x0
  4360c0:	cmp	x2, #0x2
  4360c4:	b.ne	436100 <ferror@plt+0x32b30>  // b.any
  4360c8:	ldrb	w3, [x1]
  4360cc:	and	w0, w3, #0xffffffdf
  4360d0:	cmp	w0, #0x44
  4360d4:	b.ne	436100 <ferror@plt+0x32b30>  // b.any
  4360d8:	ldrb	w0, [x1, #1]
  4360dc:	cmp	w0, #0x64
  4360e0:	b.eq	43614c <ferror@plt+0x32b7c>  // b.none
  4360e4:	b.hi	436110 <ferror@plt+0x32b40>  // b.pmore
  4360e8:	cmp	w0, #0x46
  4360ec:	b.eq	43613c <ferror@plt+0x32b6c>  // b.none
  4360f0:	cmp	w0, #0x4c
  4360f4:	b.eq	436164 <ferror@plt+0x32b94>  // b.none
  4360f8:	cmp	w0, #0x44
  4360fc:	b.eq	436158 <ferror@plt+0x32b88>  // b.none
  436100:	ldrb	w16, [x7, #1163]
  436104:	cbnz	w16, 4361e4 <ferror@plt+0x32c14>
  436108:	mov	x5, x2
  43610c:	b	436174 <ferror@plt+0x32ba4>
  436110:	cmp	w0, #0x66
  436114:	b.eq	43612c <ferror@plt+0x32b5c>  // b.none
  436118:	cmp	w0, #0x6c
  43611c:	b.ne	436100 <ferror@plt+0x32b30>  // b.any
  436120:	cmp	w3, #0x44
  436124:	mov	w0, #0x4040                	// #16448
  436128:	b	436134 <ferror@plt+0x32b64>
  43612c:	cmp	w3, #0x44
  436130:	mov	w0, #0x4010                	// #16400
  436134:	csel	w0, wzr, w0, eq  // eq = none
  436138:	ret
  43613c:	cmp	w3, #0x44
  436140:	mov	w0, #0x4010                	// #16400
  436144:	csel	w0, wzr, w0, ne  // ne = any
  436148:	ret
  43614c:	cmp	w3, #0x44
  436150:	mov	w0, #0x4020                	// #16416
  436154:	b	436134 <ferror@plt+0x32b64>
  436158:	cmp	w3, #0x44
  43615c:	mov	w0, #0x4020                	// #16416
  436160:	b	436144 <ferror@plt+0x32b74>
  436164:	cmp	w3, #0x44
  436168:	mov	w0, #0x4040                	// #16448
  43616c:	b	436144 <ferror@plt+0x32b74>
  436170:	mov	x5, #0x0                   	// #0
  436174:	stp	x29, x30, [sp, #-48]!
  436178:	adrp	x18, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43617c:	adrp	x30, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  436180:	mov	x29, sp
  436184:	mov	x6, x1
  436188:	add	x18, x18, #0x954
  43618c:	add	x30, x30, #0x940
  436190:	mov	x3, #0x0                   	// #0
  436194:	mov	x12, #0x0                   	// #0
  436198:	mov	x11, #0x0                   	// #0
  43619c:	mov	x10, #0x0                   	// #0
  4361a0:	mov	x9, #0x0                   	// #0
  4361a4:	mov	x8, #0x0                   	// #0
  4361a8:	mov	x15, #0x0                   	// #0
  4361ac:	mov	x14, #0x0                   	// #0
  4361b0:	mov	x4, #0x0                   	// #0
  4361b4:	stp	x19, x20, [sp, #16]
  4361b8:	mov	x19, #0xa                   	// #10
  4361bc:	str	x21, [sp, #32]
  4361c0:	sub	x0, x5, #0x1
  4361c4:	cbz	x5, 4363d0 <ferror@plt+0x32e00>
  4361c8:	ldrb	w5, [x6]
  4361cc:	cmp	w5, #0x57
  4361d0:	b.hi	4362f8 <ferror@plt+0x32d28>  // b.pmore
  4361d4:	cmp	w5, #0x43
  4361d8:	b.hi	4362dc <ferror@plt+0x32d0c>  // b.pmore
  4361dc:	mov	w0, #0x0                   	// #0
  4361e0:	b	4364cc <ferror@plt+0x32efc>
  4361e4:	cbz	x2, 436170 <ferror@plt+0x32ba0>
  4361e8:	sub	x3, x2, #0x1
  4361ec:	ldrb	w4, [x1, x3]
  4361f0:	cmp	w4, #0x6b
  4361f4:	b.eq	436278 <ferror@plt+0x32ca8>  // b.none
  4361f8:	b.hi	436268 <ferror@plt+0x32c98>  // b.pmore
  4361fc:	cmp	w4, #0x4b
  436200:	b.eq	436278 <ferror@plt+0x32ca8>  // b.none
  436204:	cmp	w4, #0x52
  436208:	mov	x0, #0x100000              	// #1048576
  43620c:	b.ne	436108 <ferror@plt+0x32b38>  // b.any
  436210:	cmp	x2, #0x1
  436214:	b.eq	43652c <ferror@plt+0x32f5c>  // b.none
  436218:	ldrb	w4, [x1]
  43621c:	and	w4, w4, #0xffffffdf
  436220:	and	w4, w4, #0xff
  436224:	cmp	w4, #0x55
  436228:	b.ne	436240 <ferror@plt+0x32c70>  // b.any
  43622c:	orr	x0, x0, #0x1000
  436230:	cmp	x3, #0x1
  436234:	b.eq	43652c <ferror@plt+0x32f5c>  // b.none
  436238:	sub	x3, x2, #0x2
  43623c:	add	x1, x1, #0x1
  436240:	ldrb	w2, [x1]
  436244:	cmp	w2, #0x68
  436248:	b.eq	436298 <ferror@plt+0x32cc8>  // b.none
  43624c:	b.hi	436280 <ferror@plt+0x32cb0>  // b.pmore
  436250:	cmp	w2, #0x48
  436254:	b.eq	436298 <ferror@plt+0x32cc8>  // b.none
  436258:	cmp	w2, #0x4c
  43625c:	b.eq	4362bc <ferror@plt+0x32cec>  // b.none
  436260:	mov	w0, #0x0                   	// #0
  436264:	ret
  436268:	cmp	w4, #0x72
  43626c:	b.ne	436108 <ferror@plt+0x32b38>  // b.any
  436270:	mov	x0, #0x100000              	// #1048576
  436274:	b	436210 <ferror@plt+0x32c40>
  436278:	mov	x0, #0x200000              	// #2097152
  43627c:	b	436210 <ferror@plt+0x32c40>
  436280:	cmp	w2, #0x6c
  436284:	b.ne	436260 <ferror@plt+0x32c90>  // b.any
  436288:	cmp	x3, #0x1
  43628c:	b.ne	4362a4 <ferror@plt+0x32cd4>  // b.any
  436290:	orr	w0, w0, #0x20
  436294:	ret
  436298:	orr	x0, x0, #0x10
  43629c:	cmp	x3, #0x1
  4362a0:	b	436144 <ferror@plt+0x32b74>
  4362a4:	cmp	x3, #0x2
  4362a8:	b.ne	436260 <ferror@plt+0x32c90>  // b.any
  4362ac:	ldrb	w1, [x1, #1]
  4362b0:	orr	x0, x0, #0x40
  4362b4:	cmp	w1, #0x6c
  4362b8:	b	436144 <ferror@plt+0x32b74>
  4362bc:	cmp	x3, #0x1
  4362c0:	b.eq	436290 <ferror@plt+0x32cc0>  // b.none
  4362c4:	cmp	x3, #0x2
  4362c8:	b.ne	436260 <ferror@plt+0x32c90>  // b.any
  4362cc:	ldrb	w1, [x1, #1]
  4362d0:	orr	x0, x0, #0x40
  4362d4:	cmp	w1, #0x4c
  4362d8:	b	436144 <ferror@plt+0x32b74>
  4362dc:	sub	w5, w5, #0x44
  4362e0:	cmp	w5, #0x13
  4362e4:	b.hi	4361dc <ferror@plt+0x32c0c>  // b.pmore
  4362e8:	ldrb	w5, [x30, w5, uxtw]
  4362ec:	adr	x13, 4362f8 <ferror@plt+0x32d28>
  4362f0:	add	x5, x13, w5, sxtb #2
  4362f4:	br	x5
  4362f8:	sub	w5, w5, #0x64
  4362fc:	and	w13, w5, #0xff
  436300:	cmp	w13, #0x13
  436304:	b.hi	4361dc <ferror@plt+0x32c0c>  // b.pmore
  436308:	cmp	w5, #0x13
  43630c:	b.hi	4361dc <ferror@plt+0x32c0c>  // b.pmore
  436310:	ldrb	w5, [x18, w5, uxtw]
  436314:	adr	x13, 436320 <ferror@plt+0x32d50>
  436318:	add	x5, x13, w5, sxtb #2
  43631c:	br	x5
  436320:	add	x5, x4, #0x1
  436324:	cbz	x0, 436398 <ferror@plt+0x32dc8>
  436328:	ldrb	w13, [x7, #1120]
  43632c:	cbnz	w13, 436398 <ferror@plt+0x32dc8>
  436330:	ldrb	w13, [x6, #1]
  436334:	sub	w13, w13, #0x31
  436338:	and	w13, w13, #0xff
  43633c:	cmp	w13, #0x8
  436340:	b.hi	436398 <ferror@plt+0x32dc8>  // b.pmore
  436344:	cbnz	x3, 436398 <ferror@plt+0x32dc8>
  436348:	ldrb	w20, [x6, #1]
  43634c:	mov	x17, x0
  436350:	mov	x13, x6
  436354:	sub	x0, x0, #0x1
  436358:	sub	w5, w20, #0x30
  43635c:	add	x6, x6, #0x1
  436360:	and	w21, w5, #0xff
  436364:	cmp	w21, #0x9
  436368:	b.hi	436518 <ferror@plt+0x32f48>  // b.pmore
  43636c:	cmp	x3, #0xef
  436370:	b.hi	436388 <ferror@plt+0x32db8>  // b.pmore
  436374:	sxtw	x5, w5
  436378:	madd	x3, x3, x19, x5
  43637c:	cbnz	x0, 436348 <ferror@plt+0x32d78>
  436380:	mov	x13, x6
  436384:	mov	x17, #0x0                   	// #0
  436388:	add	x11, x11, #0x1
  43638c:	mov	x5, x4
  436390:	mov	x0, x17
  436394:	mov	x6, x13
  436398:	mov	x4, x5
  43639c:	add	x6, x6, #0x1
  4363a0:	mov	x5, x0
  4363a4:	b	4361c0 <ferror@plt+0x32bf0>
  4363a8:	add	x14, x14, #0x1
  4363ac:	b	436524 <ferror@plt+0x32f54>
  4363b0:	add	x15, x15, #0x1
  4363b4:	b	436524 <ferror@plt+0x32f54>
  4363b8:	add	x8, x8, #0x1
  4363bc:	b	436524 <ferror@plt+0x32f54>
  4363c0:	add	x9, x9, #0x1
  4363c4:	b	436524 <ferror@plt+0x32f54>
  4363c8:	add	x10, x10, #0x1
  4363cc:	b	436524 <ferror@plt+0x32f54>
  4363d0:	add	x0, x8, x9
  4363d4:	add	x5, x11, x12
  4363d8:	add	x5, x5, x0
  4363dc:	add	x0, x14, x15
  4363e0:	add	x5, x5, x0
  4363e4:	add	x5, x5, x4
  4363e8:	cmp	x5, #0x1
  4363ec:	b.hi	4361dc <ferror@plt+0x32c0c>  // b.pmore
  4363f0:	cmp	x10, #0x1
  4363f4:	b.hi	4361dc <ferror@plt+0x32c0c>  // b.pmore
  4363f8:	cmp	x3, #0xf0
  4363fc:	b.hi	4361dc <ferror@plt+0x32c0c>  // b.pmore
  436400:	cmp	x3, #0x20
  436404:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  436408:	b.eq	43641c <ferror@plt+0x32e4c>  // b.none
  43640c:	cmp	x3, #0x40
  436410:	mov	x0, #0x80                  	// #128
  436414:	ccmp	x3, x0, #0x4, ne  // ne = any
  436418:	b.ne	4361dc <ferror@plt+0x32c0c>  // b.any
  43641c:	cmp	x11, #0x0
  436420:	cset	w0, ne  // ne = any
  436424:	cmp	w0, #0x0
  436428:	ccmp	x3, #0x10, #0x4, ne  // ne = any
  43642c:	b.eq	436438 <ferror@plt+0x32e68>  // b.none
  436430:	tst	x3, #0x1f
  436434:	b.ne	4361dc <ferror@plt+0x32c0c>  // b.any
  436438:	cmp	x3, #0x60
  43643c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  436440:	b.ne	4361dc <ferror@plt+0x32c0c>  // b.any
  436444:	cbz	x10, 436490 <ferror@plt+0x32ec0>
  436448:	cbz	w16, 4361dc <ferror@plt+0x32c0c>
  43644c:	ldrb	w0, [x7, #1120]
  436450:	cbz	w0, 436490 <ferror@plt+0x32ec0>
  436454:	ldr	w0, [x7, #1116]
  436458:	cmp	w0, #0xe
  43645c:	b.le	436490 <ferror@plt+0x32ec0>
  436460:	ldrb	w0, [x1]
  436464:	cmp	w0, #0x69
  436468:	b.ne	436490 <ferror@plt+0x32ec0>  // b.any
  43646c:	cmp	x2, #0x1
  436470:	b.eq	4361dc <ferror@plt+0x32c0c>  // b.none
  436474:	cmp	x2, #0x2
  436478:	b.ne	436490 <ferror@plt+0x32ec0>  // b.any
  43647c:	ldrb	w0, [x1, #1]
  436480:	cmp	w0, #0x66
  436484:	b.eq	4361dc <ferror@plt+0x32c0c>  // b.none
  436488:	cmp	w0, #0x6c
  43648c:	b.eq	4361dc <ferror@plt+0x32c0c>  // b.none
  436490:	orr	x0, x8, x9
  436494:	cbz	x0, 43649c <ferror@plt+0x32ecc>
  436498:	cbz	w16, 4361dc <ferror@plt+0x32c0c>
  43649c:	cmp	x10, #0x0
  4364a0:	cset	w0, ne  // ne = any
  4364a4:	lsl	w0, w0, #13
  4364a8:	cbnz	x4, 4364f0 <ferror@plt+0x32f20>
  4364ac:	cbnz	x14, 4364f8 <ferror@plt+0x32f28>
  4364b0:	cbnz	x15, 436500 <ferror@plt+0x32f30>
  4364b4:	cbnz	x8, 436508 <ferror@plt+0x32f38>
  4364b8:	cbnz	x9, 436510 <ferror@plt+0x32f40>
  4364bc:	lsl	w3, w3, #24
  4364c0:	cbz	x11, 4364dc <ferror@plt+0x32f0c>
  4364c4:	orr	w3, w3, #0x400000
  4364c8:	orr	w0, w0, w3
  4364cc:	ldp	x19, x20, [sp, #16]
  4364d0:	ldr	x21, [sp, #32]
  4364d4:	ldp	x29, x30, [sp], #48
  4364d8:	ret
  4364dc:	orr	w3, w3, #0x800000
  4364e0:	cmp	x12, #0x0
  4364e4:	mov	w1, #0x8000                	// #32768
  4364e8:	csel	w3, w3, w1, ne  // ne = any
  4364ec:	b	4364c8 <ferror@plt+0x32ef8>
  4364f0:	mov	w3, #0x10                  	// #16
  4364f4:	b	4364c8 <ferror@plt+0x32ef8>
  4364f8:	mov	w3, #0x20                  	// #32
  4364fc:	b	4364c8 <ferror@plt+0x32ef8>
  436500:	mov	w3, #0x40                  	// #64
  436504:	b	4364c8 <ferror@plt+0x32ef8>
  436508:	mov	w3, #0x10000               	// #65536
  43650c:	b	4364c8 <ferror@plt+0x32ef8>
  436510:	mov	w3, #0x20000               	// #131072
  436514:	b	4364c8 <ferror@plt+0x32ef8>
  436518:	cmp	w20, #0x78
  43651c:	b.ne	436388 <ferror@plt+0x32db8>  // b.any
  436520:	add	x12, x12, #0x1
  436524:	mov	x5, x4
  436528:	b	436398 <ferror@plt+0x32dc8>
  43652c:	ret
  436530:	add	x5, x1, x2
  436534:	mov	x7, #0x0                   	// #0
  436538:	mov	x4, #0x0                   	// #0
  43653c:	mov	x6, #0x0                   	// #0
  436540:	mov	x9, #0x1                   	// #1
  436544:	cmp	x5, x1
  436548:	b.eq	4365b0 <ferror@plt+0x32fe0>  // b.none
  43654c:	ldurb	w8, [x5, #-1]
  436550:	sub	w3, w8, #0x49
  436554:	and	w3, w3, #0xff
  436558:	cmp	w3, #0x2c
  43655c:	b.hi	4365a8 <ferror@plt+0x32fd8>  // b.pmore
  436560:	lsl	x3, x9, x3
  436564:	tst	x3, #0x300000003
  436568:	b.ne	436588 <ferror@plt+0x32fb8>  // b.any
  43656c:	tst	x3, #0x800000008
  436570:	b.ne	436590 <ferror@plt+0x32fc0>  // b.any
  436574:	tst	x3, #0x100000001000
  436578:	b.eq	4365a8 <ferror@plt+0x32fd8>  // b.none
  43657c:	add	x6, x6, #0x1
  436580:	sub	x5, x5, #0x1
  436584:	b	436544 <ferror@plt+0x32f74>
  436588:	add	x7, x7, #0x1
  43658c:	b	436580 <ferror@plt+0x32fb0>
  436590:	add	x4, x4, #0x1
  436594:	cmp	x4, #0x2
  436598:	b.ne	436580 <ferror@plt+0x32fb0>  // b.any
  43659c:	ldrb	w3, [x5]
  4365a0:	cmp	w3, w8
  4365a4:	b.eq	436580 <ferror@plt+0x32fb0>  // b.none
  4365a8:	mov	w0, #0x0                   	// #0
  4365ac:	b	43663c <ferror@plt+0x3306c>
  4365b0:	cmp	x4, #0x2
  4365b4:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
  4365b8:	b.hi	4365a8 <ferror@plt+0x32fd8>  // b.pmore
  4365bc:	cmp	x7, #0x1
  4365c0:	b.hi	4365a8 <ferror@plt+0x32fd8>  // b.pmore
  4365c4:	cbz	x7, 436614 <ferror@plt+0x33044>
  4365c8:	ldrb	w3, [x0, #1163]
  4365cc:	cbz	w3, 4365a8 <ferror@plt+0x32fd8>
  4365d0:	ldrb	w3, [x0, #1120]
  4365d4:	cbz	w3, 43660c <ferror@plt+0x3303c>
  4365d8:	ldr	w0, [x0, #1116]
  4365dc:	cmp	w0, #0xe
  4365e0:	b.le	43660c <ferror@plt+0x3303c>
  4365e4:	ldrb	w0, [x1]
  4365e8:	cmp	w0, #0x69
  4365ec:	b.ne	43660c <ferror@plt+0x3303c>  // b.any
  4365f0:	cmp	x2, #0x1
  4365f4:	b.eq	4365a8 <ferror@plt+0x32fd8>  // b.none
  4365f8:	cmp	x2, #0x2
  4365fc:	b.ne	43660c <ferror@plt+0x3303c>  // b.any
  436600:	ldrb	w0, [x1, #1]
  436604:	cmp	w0, #0x6c
  436608:	b.eq	4365a8 <ferror@plt+0x32fd8>  // b.none
  43660c:	mov	w1, #0x2000                	// #8192
  436610:	b	436618 <ferror@plt+0x33048>
  436614:	mov	w1, #0x0                   	// #0
  436618:	cmp	x6, #0x0
  43661c:	cset	w0, ne  // ne = any
  436620:	orr	w0, w1, w0, lsl #12
  436624:	cbz	x4, 436640 <ferror@plt+0x33070>
  436628:	cmp	x4, #0x1
  43662c:	mov	w1, #0x20                  	// #32
  436630:	mov	w2, #0x40                  	// #64
  436634:	csel	w1, w1, w2, eq  // eq = none
  436638:	orr	w0, w0, w1
  43663c:	ret
  436640:	mov	w1, #0x10                  	// #16
  436644:	b	436638 <ferror@plt+0x33068>
  436648:	cmp	x1, #0x40
  43664c:	ldp	x2, x3, [x0]
  436650:	b.ls	436684 <ferror@plt+0x330b4>  // b.plast
  436654:	sub	x1, x1, #0x40
  436658:	cmp	x1, #0x3f
  43665c:	b.hi	43666c <ferror@plt+0x3309c>  // b.pmore
  436660:	mov	x4, #0xffffffffffffffff    	// #-1
  436664:	lsl	x1, x4, x1
  436668:	bic	x2, x2, x1
  43666c:	stp	x2, x3, [x0]
  436670:	ldp	x2, x3, [x0]
  436674:	stp	x2, x3, [x8]
  436678:	ldr	x0, [x0, #16]
  43667c:	str	x0, [x8, #16]
  436680:	ret
  436684:	b.eq	436694 <ferror@plt+0x330c4>  // b.none
  436688:	mov	x2, #0xffffffffffffffff    	// #-1
  43668c:	lsl	x1, x2, x1
  436690:	bic	x3, x3, x1
  436694:	mov	x2, #0x0                   	// #0
  436698:	b	43666c <ferror@plt+0x3309c>
  43669c:	stp	x29, x30, [sp, #-80]!
  4366a0:	mov	x5, x0
  4366a4:	mov	x7, x8
  4366a8:	mov	x29, sp
  4366ac:	ldp	x6, x9, [x0]
  4366b0:	add	x8, sp, #0x30
  4366b4:	negs	x2, x9
  4366b8:	neg	x0, x6
  4366bc:	csinv	x0, x0, x6, eq  // eq = none
  4366c0:	stp	x0, x2, [x5]
  4366c4:	ldp	x2, x3, [x5]
  4366c8:	stp	x2, x3, [sp, #16]
  4366cc:	ldr	x0, [x5, #16]
  4366d0:	str	x0, [sp, #32]
  4366d4:	add	x0, sp, #0x10
  4366d8:	bl	436648 <ferror@plt+0x33078>
  4366dc:	ldp	x1, x0, [sp, #48]
  4366e0:	stp	x1, x0, [x5]
  4366e4:	ldr	x0, [sp, #64]
  4366e8:	str	x0, [x5, #16]
  4366ec:	ldr	x2, [x5, #8]
  4366f0:	ands	w0, w0, #0xff
  4366f4:	b.ne	436730 <ferror@plt+0x33160>  // b.any
  4366f8:	cmp	x9, x2
  4366fc:	b.ne	436714 <ferror@plt+0x33144>  // b.any
  436700:	cmp	x6, x1
  436704:	b.ne	436714 <ferror@plt+0x33144>  // b.any
  436708:	orr	x6, x6, x9
  43670c:	cmp	x6, #0x0
  436710:	cset	w0, ne  // ne = any
  436714:	strb	w0, [x5, #17]
  436718:	ldp	x0, x1, [x5]
  43671c:	stp	x0, x1, [x7]
  436720:	ldr	x0, [x5, #16]
  436724:	str	x0, [x7, #16]
  436728:	ldp	x29, x30, [sp], #80
  43672c:	ret
  436730:	mov	w0, #0x0                   	// #0
  436734:	b	436714 <ferror@plt+0x33144>
  436738:	and	x4, x1, #0xffffffff
  43673c:	and	x2, x0, #0xffffffff
  436740:	lsr	x1, x1, #32
  436744:	lsr	x0, x0, #32
  436748:	mul	x3, x0, x1
  43674c:	mul	x1, x2, x1
  436750:	mul	x2, x2, x4
  436754:	mul	x0, x4, x0
  436758:	lsl	x4, x1, #32
  43675c:	adds	x2, x2, x4
  436760:	b.cs	4367a4 <ferror@plt+0x331d4>  // b.hs, b.nlast
  436764:	str	x3, [x8]
  436768:	lsl	x3, x0, #32
  43676c:	adds	x2, x2, x3
  436770:	str	x2, [x8, #8]
  436774:	b.cc	436784 <ferror@plt+0x331b4>  // b.lo, b.ul, b.last
  436778:	ldr	x2, [x8]
  43677c:	add	x2, x2, #0x1
  436780:	str	x2, [x8]
  436784:	lsr	x0, x0, #32
  436788:	add	x1, x0, x1, lsr #32
  43678c:	ldr	x0, [x8]
  436790:	add	x1, x0, x1
  436794:	mov	w0, #0x1                   	// #1
  436798:	str	x1, [x8]
  43679c:	strh	w0, [x8, #16]
  4367a0:	ret
  4367a4:	add	x3, x3, #0x1
  4367a8:	b	436764 <ferror@plt+0x33194>
  4367ac:	stp	x29, x30, [sp, #-80]!
  4367b0:	mov	x29, sp
  4367b4:	stp	x19, x20, [sp, #16]
  4367b8:	mov	x19, x0
  4367bc:	stp	x21, x22, [sp, #32]
  4367c0:	mov	x22, x8
  4367c4:	stp	x23, x24, [sp, #48]
  4367c8:	mov	w24, w1
  4367cc:	str	x25, [sp, #64]
  4367d0:	strh	wzr, [x8, #16]
  4367d4:	ldrb	w1, [x0, #26]
  4367d8:	stp	xzr, xzr, [x8]
  4367dc:	add	w1, w1, #0x1
  4367e0:	strb	w1, [x0, #26]
  4367e4:	bl	444ea4 <ferror@plt+0x418d4>
  4367e8:	mov	x20, x0
  4367ec:	ldrb	w0, [x0, #4]
  4367f0:	cmp	w0, #0x14
  4367f4:	b.ne	4368e8 <ferror@plt+0x33318>  // b.any
  4367f8:	mov	x0, x19
  4367fc:	bl	444ea4 <ferror@plt+0x418d4>
  436800:	mov	x20, x0
  436804:	mov	w25, #0x1                   	// #1
  436808:	ldrb	w0, [x20, #4]
  43680c:	cmp	w0, #0x3e
  436810:	b.eq	4368f0 <ferror@plt+0x33320>  // b.none
  436814:	cmp	w0, #0x44
  436818:	b.ne	4368f8 <ferror@plt+0x33328>  // b.any
  43681c:	mov	w23, #0x1                   	// #1
  436820:	ldr	w0, [x20, #8]
  436824:	sub	w0, w0, #0x1
  436828:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43682c:	ldr	x1, [x20, #16]
  436830:	mov	x21, x0
  436834:	ldr	w2, [x20, #8]
  436838:	add	x1, x1, #0x1
  43683c:	sub	w2, w2, #0x2
  436840:	bl	402cd0 <memcpy@plt>
  436844:	ldr	w0, [x20, #8]
  436848:	mov	w2, w23
  43684c:	sub	w0, w0, #0x2
  436850:	strb	wzr, [x21, x0]
  436854:	ldr	x20, [x20, #8]
  436858:	mov	w3, w24
  43685c:	mov	x1, x21
  436860:	mov	x0, x19
  436864:	bl	43b048 <ferror@plt+0x37a78>
  436868:	tst	w0, #0xff
  43686c:	b.eq	436878 <ferror@plt+0x332a8>  // b.none
  436870:	mov	x0, #0x1                   	// #1
  436874:	str	x0, [x22, #8]
  436878:	mov	x0, x21
  43687c:	bl	4032a0 <free@plt>
  436880:	cbz	w25, 4368bc <ferror@plt+0x332ec>
  436884:	ldr	x0, [x19, #448]
  436888:	ldurb	w0, [x0, #-20]
  43688c:	cmp	w0, #0x16
  436890:	b.eq	4368bc <ferror@plt+0x332ec>  // b.none
  436894:	mov	x0, x19
  436898:	bl	444ea4 <ferror@plt+0x418d4>
  43689c:	ldrb	w0, [x0, #4]
  4368a0:	cmp	w0, #0x15
  4368a4:	b.eq	4368bc <ferror@plt+0x332ec>  // b.none
  4368a8:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4368ac:	mov	x0, x19
  4368b0:	add	x2, x2, #0xa1c
  4368b4:	mov	w1, #0x3                   	// #3
  4368b8:	bl	435b3c <ferror@plt+0x3256c>
  4368bc:	cbz	x20, 4368c4 <ferror@plt+0x332f4>
  4368c0:	str	x20, [x19, #432]
  4368c4:	ldrb	w0, [x19, #26]
  4368c8:	sub	w0, w0, #0x1
  4368cc:	strb	w0, [x19, #26]
  4368d0:	ldp	x19, x20, [sp, #16]
  4368d4:	ldp	x21, x22, [sp, #32]
  4368d8:	ldp	x23, x24, [sp, #48]
  4368dc:	ldr	x25, [sp, #64]
  4368e0:	ldp	x29, x30, [sp], #80
  4368e4:	ret
  4368e8:	mov	w25, #0x0                   	// #0
  4368ec:	b	436808 <ferror@plt+0x33238>
  4368f0:	mov	w23, #0x0                   	// #0
  4368f4:	b	436820 <ferror@plt+0x33250>
  4368f8:	cmp	w0, #0x3
  4368fc:	b.ne	43691c <ferror@plt+0x3334c>  // b.any
  436900:	mov	x0, x19
  436904:	bl	435934 <ferror@plt+0x32364>
  436908:	mov	x21, x0
  43690c:	cbnz	x0, 436934 <ferror@plt+0x33364>
  436910:	cbz	w25, 4368c4 <ferror@plt+0x332f4>
  436914:	mov	x20, #0x0                   	// #0
  436918:	b	436884 <ferror@plt+0x332b4>
  43691c:	mov	x0, x19
  436920:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  436924:	mov	w1, #0x3                   	// #3
  436928:	add	x2, x2, #0x9e8
  43692c:	bl	435b3c <ferror@plt+0x3256c>
  436930:	b	436910 <ferror@plt+0x33340>
  436934:	mov	x20, #0x0                   	// #0
  436938:	mov	w2, #0x1                   	// #1
  43693c:	b	436858 <ferror@plt+0x33288>
  436940:	sub	w3, w2, #0x41
  436944:	cmp	x2, #0x41
  436948:	lsr	x3, x0, x3
  43694c:	sub	w0, w2, #0x1
  436950:	mvn	x3, x3
  436954:	lsr	x0, x1, x0
  436958:	mvn	x0, x0
  43695c:	and	w3, w3, #0x1
  436960:	and	w0, w0, #0x1
  436964:	csel	w0, w0, w3, cc  // cc = lo, ul, last
  436968:	ret
  43696c:	stp	x29, x30, [sp, #-80]!
  436970:	mov	x5, x0
  436974:	mov	x7, x1
  436978:	mov	x29, sp
  43697c:	ldp	x4, x1, [x0]
  436980:	mov	x9, x8
  436984:	ldrb	w0, [x0, #16]
  436988:	mov	x6, x2
  43698c:	cbnz	w0, 436a48 <ferror@plt+0x33478>
  436990:	mov	x2, x7
  436994:	mov	x0, x4
  436998:	bl	436940 <ferror@plt+0x33370>
  43699c:	and	x3, x0, #0xff
  4369a0:	eor	x3, x3, #0x1
  4369a4:	neg	x3, x3
  4369a8:	cmp	x7, x6
  4369ac:	b.ls	436a68 <ferror@plt+0x33498>  // b.plast
  4369b0:	cmp	x7, #0x3f
  4369b4:	b.hi	436a50 <ferror@plt+0x33480>  // b.pmore
  4369b8:	lsl	x0, x3, x7
  4369bc:	mov	x4, x3
  4369c0:	orr	x1, x1, x0
  4369c4:	cmp	x6, #0x3f
  4369c8:	b.ls	4369d8 <ferror@plt+0x33408>  // b.plast
  4369cc:	mov	x1, x4
  4369d0:	sub	x6, x6, #0x40
  4369d4:	mov	x4, x3
  4369d8:	cbz	x6, 4369fc <ferror@plt+0x3342c>
  4369dc:	mov	w0, #0x40                  	// #64
  4369e0:	sub	w0, w0, w6
  4369e4:	lsr	x1, x1, x6
  4369e8:	lsl	x2, x4, x0
  4369ec:	orr	x1, x1, x2
  4369f0:	lsr	x4, x4, x6
  4369f4:	lsl	x3, x3, x0
  4369f8:	orr	x4, x4, x3
  4369fc:	stp	x4, x1, [x5]
  436a00:	add	x8, sp, #0x30
  436a04:	ldp	x0, x1, [x5]
  436a08:	stp	x0, x1, [sp, #16]
  436a0c:	ldr	x0, [x5, #16]
  436a10:	mov	x1, x7
  436a14:	str	x0, [sp, #32]
  436a18:	add	x0, sp, #0x10
  436a1c:	bl	436648 <ferror@plt+0x33078>
  436a20:	ldp	x0, x1, [sp, #48]
  436a24:	stp	x0, x1, [x5]
  436a28:	ldr	x2, [sp, #64]
  436a2c:	str	x2, [x5, #16]
  436a30:	strb	wzr, [x5, #17]
  436a34:	stp	x0, x1, [x9]
  436a38:	ldr	x0, [x5, #16]
  436a3c:	str	x0, [x9, #16]
  436a40:	ldp	x29, x30, [sp], #80
  436a44:	ret
  436a48:	mov	x3, #0x0                   	// #0
  436a4c:	b	4369a8 <ferror@plt+0x333d8>
  436a50:	cmp	x7, #0x7f
  436a54:	b.hi	4369c4 <ferror@plt+0x333f4>  // b.pmore
  436a58:	sub	w0, w7, #0x40
  436a5c:	lsl	x0, x3, x0
  436a60:	orr	x4, x4, x0
  436a64:	b	4369c4 <ferror@plt+0x333f4>
  436a68:	mov	x1, x3
  436a6c:	mov	x4, x3
  436a70:	b	4369fc <ferror@plt+0x3342c>
  436a74:	mov	x14, x8
  436a78:	mov	x10, x0
  436a7c:	cmp	x2, x1
  436a80:	ldp	x13, x15, [x0]
  436a84:	b.cc	436acc <ferror@plt+0x334fc>  // b.lo, b.ul, b.last
  436a88:	ldrb	w11, [x0, #16]
  436a8c:	cbnz	w11, 436ac4 <ferror@plt+0x334f4>
  436a90:	orr	x13, x13, x15
  436a94:	cmp	x13, #0x0
  436a98:	cset	w0, ne  // ne = any
  436a9c:	mov	x18, #0x0                   	// #0
  436aa0:	mov	x12, #0x0                   	// #0
  436aa4:	stp	x12, x18, [x10]
  436aa8:	strb	w11, [x10, #16]
  436aac:	strb	w0, [x10, #17]
  436ab0:	ldp	x0, x1, [x10]
  436ab4:	stp	x0, x1, [x14]
  436ab8:	ldr	x0, [x10, #16]
  436abc:	str	x0, [x14, #16]
  436ac0:	ret
  436ac4:	mov	w0, #0x0                   	// #0
  436ac8:	b	436a9c <ferror@plt+0x334cc>
  436acc:	stp	x29, x30, [sp, #-112]!
  436ad0:	mov	x6, x1
  436ad4:	mov	x5, x2
  436ad8:	mov	x29, sp
  436adc:	cmp	x2, #0x3f
  436ae0:	b.ls	436b98 <ferror@plt+0x335c8>  // b.plast
  436ae4:	sub	x2, x2, #0x40
  436ae8:	mov	x0, x15
  436aec:	mov	x1, #0x0                   	// #0
  436af0:	cbz	x2, 436b08 <ferror@plt+0x33538>
  436af4:	neg	w3, w2
  436af8:	lsl	x0, x0, x2
  436afc:	lsr	x3, x1, x3
  436b00:	orr	x0, x3, x0
  436b04:	lsl	x1, x1, x2
  436b08:	stp	x0, x1, [x10]
  436b0c:	add	x8, sp, #0x30
  436b10:	ldp	x0, x1, [x10]
  436b14:	stp	x0, x1, [sp, #16]
  436b18:	ldr	x0, [x10, #16]
  436b1c:	mov	x1, x6
  436b20:	str	x0, [sp, #32]
  436b24:	add	x0, sp, #0x10
  436b28:	bl	436648 <ferror@plt+0x33078>
  436b2c:	ldp	x12, x0, [sp, #48]
  436b30:	ldr	x11, [sp, #64]
  436b34:	stp	x12, x0, [x10]
  436b38:	str	x11, [x10, #16]
  436b3c:	ands	w11, w11, #0xff
  436b40:	mov	x18, x0
  436b44:	b.ne	436bac <ferror@plt+0x335dc>  // b.any
  436b48:	add	x0, sp, #0x30
  436b4c:	add	x8, sp, #0x58
  436b50:	mov	x2, x5
  436b54:	mov	x1, x6
  436b58:	bl	43696c <ferror@plt+0x3339c>
  436b5c:	ldr	x0, [sp, #96]
  436b60:	cmp	x0, x15
  436b64:	b.ne	436ba4 <ferror@plt+0x335d4>  // b.any
  436b68:	ldr	x0, [sp, #88]
  436b6c:	cmp	x0, x13
  436b70:	cset	w0, ne  // ne = any
  436b74:	stp	x12, x18, [x10]
  436b78:	strb	w11, [x10, #16]
  436b7c:	strb	w0, [x10, #17]
  436b80:	ldp	x0, x1, [x10]
  436b84:	stp	x0, x1, [x14]
  436b88:	ldr	x0, [x10, #16]
  436b8c:	str	x0, [x14, #16]
  436b90:	ldp	x29, x30, [sp], #112
  436b94:	ret
  436b98:	mov	x1, x15
  436b9c:	mov	x0, x13
  436ba0:	b	436af0 <ferror@plt+0x33520>
  436ba4:	mov	w0, #0x1                   	// #1
  436ba8:	b	436b74 <ferror@plt+0x335a4>
  436bac:	mov	w0, #0x0                   	// #0
  436bb0:	b	436b74 <ferror@plt+0x335a4>
  436bb4:	stp	x29, x30, [sp, #-160]!
  436bb8:	cmp	w3, #0x5
  436bbc:	mov	x29, sp
  436bc0:	stp	x19, x20, [sp, #16]
  436bc4:	mov	x19, x1
  436bc8:	stp	x21, x22, [sp, #32]
  436bcc:	ldrb	w21, [x2, #16]
  436bd0:	stp	x23, x24, [sp, #48]
  436bd4:	mov	x23, x8
  436bd8:	ldp	x9, x7, [x1]
  436bdc:	ldrb	w1, [x1, #16]
  436be0:	ldp	x20, x22, [x2]
  436be4:	ldr	x10, [x0, #1208]
  436be8:	b.eq	436d18 <ferror@plt+0x33748>  // b.none
  436bec:	mov	x24, x2
  436bf0:	mov	w11, w3
  436bf4:	b.hi	436c3c <ferror@plt+0x3366c>  // b.pmore
  436bf8:	cmp	w3, #0x4
  436bfc:	b.eq	436de4 <ferror@plt+0x33814>  // b.none
  436c00:	ldrb	w1, [x0, #1154]
  436c04:	cbz	w1, 436c28 <ferror@plt+0x33658>
  436c08:	ldrb	w1, [x0, #1152]
  436c0c:	cbz	w1, 436c18 <ferror@plt+0x33648>
  436c10:	ldr	w1, [x0, #28]
  436c14:	cbnz	w1, 436c28 <ferror@plt+0x33658>
  436c18:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  436c1c:	mov	w1, #0x15                  	// #21
  436c20:	add	x2, x2, #0xa40
  436c24:	bl	435c18 <ferror@plt+0x32648>
  436c28:	ldp	x0, x1, [x24]
  436c2c:	stp	x0, x1, [x19]
  436c30:	ldr	x0, [x24, #16]
  436c34:	str	x0, [x19, #16]
  436c38:	b	436cf8 <ferror@plt+0x33728>
  436c3c:	sub	w1, w3, #0xc
  436c40:	cmp	w1, #0x1
  436c44:	b.hi	436c00 <ferror@plt+0x33630>  // b.pmore
  436c48:	cbnz	w21, 436cac <ferror@plt+0x336dc>
  436c4c:	mov	x2, x10
  436c50:	mov	x1, x22
  436c54:	mov	x0, x20
  436c58:	bl	436940 <ferror@plt+0x33370>
  436c5c:	tst	w0, #0xff
  436c60:	b.ne	436cac <ferror@plt+0x336dc>  // b.any
  436c64:	cmp	w11, #0xd
  436c68:	add	x8, sp, #0x60
  436c6c:	cset	w11, ne  // ne = any
  436c70:	ldp	x0, x1, [x24]
  436c74:	add	w11, w11, #0xc
  436c78:	stp	x0, x1, [sp, #64]
  436c7c:	mov	x1, x10
  436c80:	ldr	x0, [x24, #16]
  436c84:	str	x0, [sp, #80]
  436c88:	add	x0, sp, #0x40
  436c8c:	bl	43669c <ferror@plt+0x330cc>
  436c90:	ldr	x20, [sp, #96]
  436c94:	str	x20, [x24]
  436c98:	ldr	x0, [sp, #104]
  436c9c:	str	x0, [x24, #8]
  436ca0:	ldr	x22, [x24, #8]
  436ca4:	ldr	x0, [sp, #112]
  436ca8:	str	x0, [x24, #16]
  436cac:	ldp	x2, x3, [x19]
  436cb0:	stp	x2, x3, [sp, #64]
  436cb4:	cmp	x20, #0x0
  436cb8:	ldr	x0, [x19, #16]
  436cbc:	str	x0, [sp, #80]
  436cc0:	csinv	x22, x22, xzr, eq  // eq = none
  436cc4:	add	x8, sp, #0x60
  436cc8:	cmp	w11, #0xd
  436ccc:	mov	x2, x22
  436cd0:	mov	x1, x10
  436cd4:	add	x0, sp, #0x40
  436cd8:	b.ne	436d10 <ferror@plt+0x33740>  // b.any
  436cdc:	bl	436a74 <ferror@plt+0x334a4>
  436ce0:	ldp	x20, x0, [sp, #96]
  436ce4:	ldr	x21, [sp, #112]
  436ce8:	str	x21, [x19, #16]
  436cec:	stp	x20, x0, [x19]
  436cf0:	and	w21, w21, #0xff
  436cf4:	mov	x22, x0
  436cf8:	stp	x20, x22, [x19]
  436cfc:	strb	w21, [x19, #16]
  436d00:	ldp	x0, x1, [x19]
  436d04:	stp	x0, x1, [x23]
  436d08:	ldr	x0, [x19, #16]
  436d0c:	b	436dcc <ferror@plt+0x337fc>
  436d10:	bl	43696c <ferror@plt+0x3339c>
  436d14:	b	436ce0 <ferror@plt+0x33710>
  436d18:	subs	x0, x7, x22
  436d1c:	strb	wzr, [sp, #153]
  436d20:	cmp	x7, x22
  436d24:	add	x8, sp, #0x60
  436d28:	sbc	x2, x9, x20
  436d2c:	stp	x2, x0, [sp, #136]
  436d30:	cmp	w1, #0x0
  436d34:	csinc	w21, w21, wzr, eq  // eq = none
  436d38:	strb	w21, [sp, #152]
  436d3c:	ldp	x0, x1, [sp, #136]
  436d40:	stp	x0, x1, [sp, #64]
  436d44:	ldr	x0, [sp, #152]
  436d48:	mov	x1, x10
  436d4c:	str	x0, [sp, #80]
  436d50:	add	x0, sp, #0x40
  436d54:	bl	436648 <ferror@plt+0x33078>
  436d58:	ldp	x0, x1, [sp, #96]
  436d5c:	stp	x0, x1, [sp, #136]
  436d60:	ldr	x1, [sp, #112]
  436d64:	str	x1, [sp, #152]
  436d68:	ldr	x8, [sp, #144]
  436d6c:	mov	x6, x0
  436d70:	ands	w4, w1, #0xff
  436d74:	ubfx	w0, w1, #8, #8
  436d78:	b.ne	436dbc <ferror@plt+0x337ec>  // b.any
  436d7c:	mov	x1, x7
  436d80:	mov	x2, x10
  436d84:	mov	x0, x9
  436d88:	bl	436940 <ferror@plt+0x33370>
  436d8c:	and	w5, w0, #0xff
  436d90:	mov	x1, x22
  436d94:	mov	x0, x20
  436d98:	bl	436940 <ferror@plt+0x33370>
  436d9c:	cmp	w5, w0, uxtb
  436da0:	b.eq	436db8 <ferror@plt+0x337e8>  // b.none
  436da4:	mov	x1, x8
  436da8:	mov	x0, x6
  436dac:	bl	436940 <ferror@plt+0x33370>
  436db0:	and	w1, w0, #0xff
  436db4:	eor	w4, w1, w5
  436db8:	mov	w0, w4
  436dbc:	strb	w0, [sp, #153]
  436dc0:	ldp	x0, x1, [sp, #136]
  436dc4:	stp	x0, x1, [x23]
  436dc8:	ldr	x0, [sp, #152]
  436dcc:	ldp	x19, x20, [sp, #16]
  436dd0:	ldp	x21, x22, [sp, #32]
  436dd4:	str	x0, [x23, #16]
  436dd8:	ldp	x23, x24, [sp, #48]
  436ddc:	ldp	x29, x30, [sp], #160
  436de0:	ret
  436de4:	adds	x2, x7, x22
  436de8:	add	x0, x9, x20
  436dec:	cset	x3, cs  // cs = hs, nlast
  436df0:	cmp	w1, #0x0
  436df4:	add	x0, x0, x3
  436df8:	stp	x0, x2, [sp, #136]
  436dfc:	csinc	w21, w21, wzr, eq  // eq = none
  436e00:	strb	w21, [sp, #152]
  436e04:	add	x8, sp, #0x60
  436e08:	strb	wzr, [sp, #153]
  436e0c:	ldp	x0, x1, [sp, #136]
  436e10:	stp	x0, x1, [sp, #64]
  436e14:	ldr	x0, [sp, #152]
  436e18:	mov	x1, x10
  436e1c:	str	x0, [sp, #80]
  436e20:	add	x0, sp, #0x40
  436e24:	bl	436648 <ferror@plt+0x33078>
  436e28:	ldp	x0, x1, [sp, #96]
  436e2c:	stp	x0, x1, [sp, #136]
  436e30:	ldr	x1, [sp, #112]
  436e34:	str	x1, [sp, #152]
  436e38:	ldr	x8, [sp, #144]
  436e3c:	mov	x5, x0
  436e40:	ands	w4, w1, #0xff
  436e44:	ubfx	w0, w1, #8, #8
  436e48:	b.ne	436dbc <ferror@plt+0x337ec>  // b.any
  436e4c:	mov	x1, x7
  436e50:	mov	x2, x10
  436e54:	mov	x0, x9
  436e58:	bl	436940 <ferror@plt+0x33370>
  436e5c:	and	w6, w0, #0xff
  436e60:	mov	x1, x22
  436e64:	mov	x0, x20
  436e68:	bl	436940 <ferror@plt+0x33370>
  436e6c:	and	w7, w0, #0xff
  436e70:	cmp	w6, w0, uxtb
  436e74:	b.ne	436db8 <ferror@plt+0x337e8>  // b.any
  436e78:	mov	x1, x8
  436e7c:	mov	x0, x5
  436e80:	bl	436940 <ferror@plt+0x33370>
  436e84:	and	w1, w0, #0xff
  436e88:	eor	w4, w1, w7
  436e8c:	b	436db8 <ferror@plt+0x337e8>
  436e90:	mov	x9, x0
  436e94:	mov	x8, x1
  436e98:	mov	x7, x3
  436e9c:	tst	w2, #0xff
  436ea0:	b.ne	436f04 <ferror@plt+0x33934>  // b.any
  436ea4:	and	w5, w5, #0xff
  436ea8:	cbnz	w5, 436f04 <ferror@plt+0x33934>
  436eac:	stp	x29, x30, [sp, #-16]!
  436eb0:	mov	x2, x6
  436eb4:	mov	x29, sp
  436eb8:	bl	436940 <ferror@plt+0x33370>
  436ebc:	and	w5, w0, #0xff
  436ec0:	mov	x1, x4
  436ec4:	mov	x0, x7
  436ec8:	bl	436940 <ferror@plt+0x33370>
  436ecc:	cmp	w5, w0, uxtb
  436ed0:	b.ne	436ee8 <ferror@plt+0x33918>  // b.any
  436ed4:	cmp	x9, x7
  436ed8:	b.hi	436ef4 <ferror@plt+0x33924>  // b.pmore
  436edc:	b.ne	436efc <ferror@plt+0x3392c>  // b.any
  436ee0:	cmp	x8, x4
  436ee4:	cset	w5, cs  // cs = hs, nlast
  436ee8:	mov	w0, w5
  436eec:	ldp	x29, x30, [sp], #16
  436ef0:	ret
  436ef4:	mov	w5, #0x1                   	// #1
  436ef8:	b	436ee8 <ferror@plt+0x33918>
  436efc:	mov	w5, #0x0                   	// #0
  436f00:	b	436ee8 <ferror@plt+0x33918>
  436f04:	cmp	x9, x7
  436f08:	b.hi	436f20 <ferror@plt+0x33950>  // b.pmore
  436f0c:	b.ne	436f28 <ferror@plt+0x33958>  // b.any
  436f10:	cmp	x8, x4
  436f14:	cset	w5, cs  // cs = hs, nlast
  436f18:	mov	w0, w5
  436f1c:	ret
  436f20:	mov	w5, #0x1                   	// #1
  436f24:	b	436f18 <ferror@plt+0x33948>
  436f28:	mov	w5, #0x0                   	// #0
  436f2c:	b	436f18 <ferror@plt+0x33948>
  436f30:	b	4360bc <ferror@plt+0x32aec>
  436f34:	b	436530 <ferror@plt+0x32f60>
  436f38:	cmp	w0, #0x4a
  436f3c:	b.eq	436f68 <ferror@plt+0x33998>  // b.none
  436f40:	cmp	w0, #0x4b
  436f44:	b.eq	436f70 <ferror@plt+0x339a0>  // b.none
  436f48:	cmp	w0, #0x4c
  436f4c:	b.eq	436f78 <ferror@plt+0x339a8>  // b.none
  436f50:	cmp	w0, #0x4d
  436f54:	b.eq	436f80 <ferror@plt+0x339b0>  // b.none
  436f58:	cmp	w0, #0x4e
  436f5c:	mov	w1, #0x42                  	// #66
  436f60:	csel	w0, w0, w1, ne  // ne = any
  436f64:	ret
  436f68:	mov	w0, #0x3e                  	// #62
  436f6c:	b	436f64 <ferror@plt+0x33994>
  436f70:	mov	w0, #0x3f                  	// #63
  436f74:	b	436f64 <ferror@plt+0x33994>
  436f78:	mov	w0, #0x40                  	// #64
  436f7c:	b	436f64 <ferror@plt+0x33994>
  436f80:	mov	w0, #0x41                  	// #65
  436f84:	b	436f64 <ferror@plt+0x33994>
  436f88:	cmp	w0, #0x3e
  436f8c:	b.eq	436fb8 <ferror@plt+0x339e8>  // b.none
  436f90:	cmp	w0, #0x3f
  436f94:	b.eq	436fc0 <ferror@plt+0x339f0>  // b.none
  436f98:	cmp	w0, #0x40
  436f9c:	b.eq	436fc8 <ferror@plt+0x339f8>  // b.none
  436fa0:	cmp	w0, #0x41
  436fa4:	b.eq	436fd0 <ferror@plt+0x33a00>  // b.none
  436fa8:	cmp	w0, #0x42
  436fac:	mov	w1, #0x4e                  	// #78
  436fb0:	csel	w0, w0, w1, ne  // ne = any
  436fb4:	ret
  436fb8:	mov	w0, #0x4a                  	// #74
  436fbc:	b	436fb4 <ferror@plt+0x339e4>
  436fc0:	mov	w0, #0x4b                  	// #75
  436fc4:	b	436fb4 <ferror@plt+0x339e4>
  436fc8:	mov	w0, #0x4c                  	// #76
  436fcc:	b	436fb4 <ferror@plt+0x339e4>
  436fd0:	mov	w0, #0x4d                  	// #77
  436fd4:	b	436fb4 <ferror@plt+0x339e4>
  436fd8:	cmp	w0, #0x45
  436fdc:	b.eq	437008 <ferror@plt+0x33a38>  // b.none
  436fe0:	cmp	w0, #0x46
  436fe4:	b.eq	437010 <ferror@plt+0x33a40>  // b.none
  436fe8:	cmp	w0, #0x47
  436fec:	b.eq	437018 <ferror@plt+0x33a48>  // b.none
  436ff0:	cmp	w0, #0x48
  436ff4:	b.eq	437020 <ferror@plt+0x33a50>  // b.none
  436ff8:	cmp	w0, #0x49
  436ffc:	mov	w1, #0x3c                  	// #60
  437000:	csel	w0, w0, w1, ne  // ne = any
  437004:	ret
  437008:	mov	w0, #0x38                  	// #56
  43700c:	b	437004 <ferror@plt+0x33a34>
  437010:	mov	w0, #0x39                  	// #57
  437014:	b	437004 <ferror@plt+0x33a34>
  437018:	mov	w0, #0x3a                  	// #58
  43701c:	b	437004 <ferror@plt+0x33a34>
  437020:	mov	w0, #0x3b                  	// #59
  437024:	b	437004 <ferror@plt+0x33a34>
  437028:	cmp	w0, #0x38
  43702c:	b.eq	437058 <ferror@plt+0x33a88>  // b.none
  437030:	cmp	w0, #0x39
  437034:	b.eq	437060 <ferror@plt+0x33a90>  // b.none
  437038:	cmp	w0, #0x3a
  43703c:	b.eq	437068 <ferror@plt+0x33a98>  // b.none
  437040:	cmp	w0, #0x3b
  437044:	b.eq	437070 <ferror@plt+0x33aa0>  // b.none
  437048:	cmp	w0, #0x3c
  43704c:	mov	w1, #0x49                  	// #73
  437050:	csel	w0, w0, w1, ne  // ne = any
  437054:	ret
  437058:	mov	w0, #0x45                  	// #69
  43705c:	b	437054 <ferror@plt+0x33a84>
  437060:	mov	w0, #0x46                  	// #70
  437064:	b	437054 <ferror@plt+0x33a84>
  437068:	mov	w0, #0x47                  	// #71
  43706c:	b	437054 <ferror@plt+0x33a84>
  437070:	mov	w0, #0x48                  	// #72
  437074:	b	437054 <ferror@plt+0x33a84>
  437078:	sub	w0, w0, #0x4a
  43707c:	cmp	w0, #0x4
  437080:	cset	w0, ls  // ls = plast
  437084:	ret
  437088:	sub	w0, w0, #0x45
  43708c:	cmp	w0, #0x4
  437090:	cset	w0, ls  // ls = plast
  437094:	ret
  437098:	ldr	w2, [x0, #8]
  43709c:	mov	x1, #0x0                   	// #0
  4370a0:	ldr	x0, [x0, #16]
  4370a4:	cmp	w2, w1
  4370a8:	b.ls	4370cc <ferror@plt+0x33afc>  // b.plast
  4370ac:	ldrb	w3, [x0, x1]
  4370b0:	cmp	w3, #0x27
  4370b4:	b.eq	4370dc <ferror@plt+0x33b0c>  // b.none
  4370b8:	add	x4, x1, #0x1
  4370bc:	cmp	w3, #0x22
  4370c0:	b.eq	4370dc <ferror@plt+0x33b0c>  // b.none
  4370c4:	mov	x1, x4
  4370c8:	b	4370a4 <ferror@plt+0x33ad4>
  4370cc:	cmp	w2, w1
  4370d0:	b.ne	4370dc <ferror@plt+0x33b0c>  // b.any
  4370d4:	add	x0, x0, x1
  4370d8:	ret
  4370dc:	ldrb	w3, [x0, x1]
  4370e0:	cbz	w2, 4370f4 <ferror@plt+0x33b24>
  4370e4:	sub	w1, w2, #0x1
  4370e8:	ldrb	w4, [x0, w1, uxtw]
  4370ec:	cmp	w4, w3
  4370f0:	b.ne	4370fc <ferror@plt+0x33b2c>  // b.any
  4370f4:	add	x0, x0, w2, uxtw
  4370f8:	b	4370d8 <ferror@plt+0x33b08>
  4370fc:	mov	w2, w1
  437100:	b	4370e0 <ferror@plt+0x33b10>
  437104:	stp	x29, x30, [sp, #-96]!
  437108:	mov	x29, sp
  43710c:	stp	x19, x20, [sp, #16]
  437110:	mov	x19, x0
  437114:	stp	x21, x22, [sp, #32]
  437118:	mov	w22, w3
  43711c:	stp	x23, x24, [sp, #48]
  437120:	stp	x25, x26, [sp, #64]
  437124:	mov	x25, x2
  437128:	ldr	x5, [x1, #16]
  43712c:	str	x27, [sp, #80]
  437130:	cbz	x2, 437138 <ferror@plt+0x33b68>
  437134:	str	xzr, [x2]
  437138:	ldr	w24, [x1, #8]
  43713c:	cmp	w24, #0x1
  437140:	b.eq	4376b4 <ferror@plt+0x340e4>  // b.none
  437144:	mov	x21, x5
  437148:	ldrb	w0, [x21], #1
  43714c:	cmp	w0, #0x30
  437150:	b.ne	437264 <ferror@plt+0x33c94>  // b.any
  437154:	ldrb	w0, [x5, #1]
  437158:	and	w0, w0, #0xffffffdf
  43715c:	and	w0, w0, #0xff
  437160:	cmp	w0, #0x58
  437164:	b.ne	437234 <ferror@plt+0x33c64>  // b.any
  437168:	ldrb	w0, [x5, #2]
  43716c:	cmp	w0, #0x2e
  437170:	b.eq	437184 <ferror@plt+0x33bb4>  // b.none
  437174:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  437178:	add	x1, x1, #0x228
  43717c:	ldrh	w1, [x1, w0, sxtw #1]
  437180:	tbz	w1, #8, 4371e4 <ferror@plt+0x33c14>
  437184:	add	x21, x5, #0x2
  437188:	mov	w23, #0x10                  	// #16
  43718c:	adrp	x27, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  437190:	adrp	x6, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  437194:	add	x27, x27, #0x228
  437198:	add	x6, x6, #0xd40
  43719c:	mov	w1, #0x0                   	// #0
  4371a0:	mov	w4, #0x0                   	// #0
  4371a4:	mov	w20, #0x0                   	// #0
  4371a8:	mov	w26, #0x0                   	// #0
  4371ac:	mov	x3, x21
  4371b0:	ldrb	w2, [x3], #1
  4371b4:	mov	x0, x2
  4371b8:	ldrh	w2, [x27, x2, lsl #1]
  4371bc:	tbnz	w2, #2, 4371cc <ferror@plt+0x33bfc>
  4371c0:	tbz	w2, #8, 43728c <ferror@plt+0x33cbc>
  4371c4:	cmp	w23, #0x10
  4371c8:	b.ne	43728c <ferror@plt+0x33cbc>  // b.any
  4371cc:	ldrb	w0, [x6, w0, sxtw]
  4371d0:	mov	w1, #0x0                   	// #0
  4371d4:	mov	w4, #0x1                   	// #1
  4371d8:	cmp	w26, w0
  4371dc:	csel	w26, w26, w0, cs  // cs = hs, nlast
  4371e0:	b	43727c <ferror@plt+0x33cac>
  4371e4:	cmp	w0, #0x27
  4371e8:	b.ne	437270 <ferror@plt+0x33ca0>  // b.any
  4371ec:	ldrb	w0, [x19, #1166]
  4371f0:	cbz	w0, 437270 <ferror@plt+0x33ca0>
  4371f4:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4371f8:	add	x4, x4, #0xb0a
  4371fc:	mov	w2, w22
  437200:	mov	x0, x19
  437204:	mov	w3, #0x0                   	// #0
  437208:	mov	w1, #0x3                   	// #3
  43720c:	bl	435cf8 <ferror@plt+0x32728>
  437210:	mov	w20, #0x0                   	// #0
  437214:	mov	w0, w20
  437218:	ldp	x19, x20, [sp, #16]
  43721c:	ldp	x21, x22, [sp, #32]
  437220:	ldp	x23, x24, [sp, #48]
  437224:	ldp	x25, x26, [sp, #64]
  437228:	ldr	x27, [sp, #80]
  43722c:	ldp	x29, x30, [sp], #96
  437230:	ret
  437234:	cmp	w0, #0x42
  437238:	b.ne	437270 <ferror@plt+0x33ca0>  // b.any
  43723c:	ldrb	w1, [x5, #2]
  437240:	sub	w0, w1, #0x30
  437244:	and	w0, w0, #0xff
  437248:	cmp	w0, #0x1
  43724c:	b.hi	43725c <ferror@plt+0x33c8c>  // b.pmore
  437250:	add	x21, x5, #0x2
  437254:	mov	w23, #0x2                   	// #2
  437258:	b	43718c <ferror@plt+0x33bbc>
  43725c:	cmp	w1, #0x27
  437260:	b	4371e8 <ferror@plt+0x33c18>
  437264:	mov	x21, x5
  437268:	mov	w23, #0xa                   	// #10
  43726c:	b	43718c <ferror@plt+0x33bbc>
  437270:	mov	w23, #0x8                   	// #8
  437274:	b	43718c <ferror@plt+0x33bbc>
  437278:	mov	w1, #0x1                   	// #1
  43727c:	mov	x21, x3
  437280:	b	4371ac <ferror@plt+0x33bdc>
  437284:	mov	w20, #0x1                   	// #1
  437288:	b	43727c <ferror@plt+0x33cac>
  43728c:	cmp	w0, #0x27
  437290:	b.ne	4372ac <ferror@plt+0x33cdc>  // b.any
  437294:	ldrb	w2, [x19, #1166]
  437298:	cbz	w2, 437824 <ferror@plt+0x34254>
  43729c:	cbz	w1, 437278 <ferror@plt+0x33ca8>
  4372a0:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4372a4:	add	x4, x4, #0xb2f
  4372a8:	b	4371fc <ferror@plt+0x33c2c>
  4372ac:	cmp	w0, #0x2e
  4372b0:	b.ne	4372e8 <ferror@plt+0x33d18>  // b.any
  4372b4:	cbnz	w1, 4372cc <ferror@plt+0x33cfc>
  4372b8:	ldrb	w0, [x3]
  4372bc:	cmp	w0, #0x27
  4372c0:	b.ne	4372d8 <ferror@plt+0x33d08>  // b.any
  4372c4:	ldrb	w0, [x19, #1166]
  4372c8:	cbz	w0, 4372d8 <ferror@plt+0x33d08>
  4372cc:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4372d0:	add	x4, x4, #0xb49
  4372d4:	b	4371fc <ferror@plt+0x33c2c>
  4372d8:	cbz	w20, 437284 <ferror@plt+0x33cb4>
  4372dc:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4372e0:	add	x4, x4, #0xb73
  4372e4:	b	4371fc <ferror@plt+0x33c2c>
  4372e8:	cmp	w23, #0xa
  4372ec:	b.hi	43782c <ferror@plt+0x3425c>  // b.pmore
  4372f0:	and	w0, w0, #0xffffffdf
  4372f4:	cmp	w0, #0x45
  4372f8:	b.ne	437328 <ferror@plt+0x33d58>  // b.any
  4372fc:	cbnz	w1, 437314 <ferror@plt+0x33d44>
  437300:	ldrb	w0, [x3]
  437304:	cmp	w0, #0x27
  437308:	b.ne	437320 <ferror@plt+0x33d50>  // b.any
  43730c:	ldrb	w0, [x19, #1166]
  437310:	cbz	w0, 437320 <ferror@plt+0x33d50>
  437314:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437318:	add	x4, x4, #0xb95
  43731c:	b	4371fc <ferror@plt+0x33c2c>
  437320:	mov	x21, x3
  437324:	mov	w20, #0x2                   	// #2
  437328:	cmp	w1, #0x0
  43732c:	ccmp	w20, #0x2, #0x4, ne  // ne = any
  437330:	b.eq	437340 <ferror@plt+0x33d70>  // b.none
  437334:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437338:	add	x4, x4, #0xbba
  43733c:	b	4371fc <ferror@plt+0x33c2c>
  437340:	cmp	w20, #0x0
  437344:	add	x24, x5, w24, uxtw
  437348:	ccmp	w23, #0x10, #0x4, eq  // eq = none
  43734c:	b.eq	437414 <ferror@plt+0x33e44>  // b.none
  437350:	sub	x2, x24, x21
  437354:	mov	x1, x21
  437358:	mov	x0, x19
  43735c:	bl	4360bc <ferror@plt+0x32aec>
  437360:	tst	w0, #0x300000
  437364:	b.eq	437744 <ferror@plt+0x34174>  // b.none
  437368:	orr	w20, w0, #0x2
  43736c:	cmp	w23, #0x8
  437370:	mov	w0, #0xa                   	// #10
  437374:	csel	w23, w23, w0, ne  // ne = any
  437378:	ldrb	w0, [x19, #1154]
  43737c:	cbz	w0, 43739c <ferror@plt+0x33dcc>
  437380:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437384:	mov	w2, w22
  437388:	add	x4, x4, #0xbe1
  43738c:	mov	x0, x19
  437390:	mov	w3, #0x0                   	// #0
  437394:	mov	w1, #0x2                   	// #2
  437398:	bl	435cf8 <ferror@plt+0x32728>
  43739c:	tbz	w20, #13, 4373c4 <ferror@plt+0x33df4>
  4373a0:	ldrb	w0, [x19, #1154]
  4373a4:	cbz	w0, 4373c4 <ferror@plt+0x33df4>
  4373a8:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4373ac:	mov	w2, w22
  4373b0:	add	x4, x4, #0xe59
  4373b4:	mov	x0, x19
  4373b8:	mov	w3, #0x0                   	// #0
  4373bc:	mov	w1, #0x2                   	// #2
  4373c0:	bl	435cf8 <ferror@plt+0x32728>
  4373c4:	cmp	w23, #0x2
  4373c8:	b.ne	4376a4 <ferror@plt+0x340d4>  // b.any
  4373cc:	ldrb	w0, [x19, #1165]
  4373d0:	cbnz	w0, 43740c <ferror@plt+0x33e3c>
  4373d4:	ldrb	w0, [x19, #1154]
  4373d8:	cbz	w0, 43740c <ferror@plt+0x33e3c>
  4373dc:	ldrb	w1, [x19, #1120]
  4373e0:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4373e4:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4373e8:	add	x0, x0, #0xae5
  4373ec:	cmp	w1, #0x0
  4373f0:	add	x4, x4, #0xaaf
  4373f4:	csel	x4, x4, x0, ne  // ne = any
  4373f8:	mov	w2, w22
  4373fc:	mov	w1, w23
  437400:	mov	x0, x19
  437404:	mov	w3, #0x0                   	// #0
  437408:	bl	435cf8 <ferror@plt+0x32728>
  43740c:	orr	w20, w20, #0x800
  437410:	b	437214 <ferror@plt+0x33c44>
  437414:	cmp	w20, #0x0
  437418:	ccmp	w23, #0x8, #0x0, ne  // ne = any
  43741c:	b.eq	4376bc <ferror@plt+0x340ec>  // b.none
  437420:	cmp	w26, w23
  437424:	b.cc	437464 <ferror@plt+0x33e94>  // b.lo, b.ul, b.last
  437428:	cmp	w23, #0x2
  43742c:	b.ne	437454 <ferror@plt+0x33e84>  // b.any
  437430:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437434:	add	w5, w26, #0x30
  437438:	add	x4, x4, #0xc0b
  43743c:	mov	w2, w22
  437440:	mov	x0, x19
  437444:	mov	w3, #0x0                   	// #0
  437448:	mov	w1, #0x3                   	// #3
  43744c:	bl	435cf8 <ferror@plt+0x32728>
  437450:	b	437210 <ferror@plt+0x33c40>
  437454:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437458:	add	w5, w26, #0x30
  43745c:	add	x4, x4, #0xc31
  437460:	b	43743c <ferror@plt+0x33e6c>
  437464:	cbz	w20, 43774c <ferror@plt+0x3417c>
  437468:	cmp	w23, #0x2
  43746c:	b.ne	4376c8 <ferror@plt+0x340f8>  // b.any
  437470:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437474:	add	x4, x4, #0xc56
  437478:	b	4371fc <ferror@plt+0x33c2c>
  43747c:	b.ne	4376f8 <ferror@plt+0x34128>  // b.any
  437480:	ldrb	w0, [x19, #1154]
  437484:	cbz	w0, 4374b4 <ferror@plt+0x33ee4>
  437488:	ldrb	w0, [x19, #1127]
  43748c:	cbnz	w0, 4374b4 <ferror@plt+0x33ee4>
  437490:	ldrb	w0, [x19, #1120]
  437494:	cbz	w0, 4374c8 <ferror@plt+0x33ef8>
  437498:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43749c:	add	x4, x4, #0xcab
  4374a0:	mov	w2, w22
  4374a4:	mov	x0, x19
  4374a8:	mov	w3, #0x0                   	// #0
  4374ac:	mov	w1, #0x2                   	// #2
  4374b0:	bl	435cf8 <ferror@plt+0x32728>
  4374b4:	cmp	w20, #0x2
  4374b8:	b.eq	437700 <ferror@plt+0x34130>  // b.none
  4374bc:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4374c0:	add	x4, x4, #0xd16
  4374c4:	b	4371fc <ferror@plt+0x33c2c>
  4374c8:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4374cc:	add	x4, x4, #0xcd6
  4374d0:	b	4374a0 <ferror@plt+0x33ed0>
  4374d4:	ldrb	w0, [x21]
  4374d8:	cmp	w0, #0x27
  4374dc:	b.ne	437584 <ferror@plt+0x33fb4>  // b.any
  4374e0:	ldrb	w0, [x19, #1166]
  4374e4:	cmp	w0, #0x0
  4374e8:	cset	w1, ne  // ne = any
  4374ec:	ldrb	w0, [x21, #1]!
  4374f0:	ldrh	w2, [x27, w0, sxtw #1]
  4374f4:	tbnz	w2, #2, 4374d4 <ferror@plt+0x33f04>
  4374f8:	cmp	w0, #0x27
  4374fc:	b.ne	437508 <ferror@plt+0x33f38>  // b.any
  437500:	ldrb	w0, [x19, #1166]
  437504:	cbnz	w0, 4374d4 <ferror@plt+0x33f04>
  437508:	cbnz	w1, 437334 <ferror@plt+0x33d64>
  43750c:	sub	x26, x24, x21
  437510:	mov	x1, x21
  437514:	mov	x2, x26
  437518:	mov	x0, x19
  43751c:	bl	4360bc <ferror@plt+0x32aec>
  437520:	mov	w20, w0
  437524:	cbnz	w0, 4375b4 <ferror@plt+0x33fe4>
  437528:	ldrb	w0, [x19, #1161]
  43752c:	cbz	w0, 43758c <ferror@plt+0x33fbc>
  437530:	cbz	x25, 437538 <ferror@plt+0x33f68>
  437534:	str	x21, [x25]
  437538:	mov	w20, #0x40                  	// #64
  43753c:	cmp	x21, x24
  437540:	movk	w20, #0x100, lsl #16
  437544:	b.eq	4375e8 <ferror@plt+0x34018>  // b.none
  437548:	ldrb	w0, [x19, #1138]
  43754c:	cbz	w0, 4375bc <ferror@plt+0x33fec>
  437550:	mov	x0, x19
  437554:	bl	442778 <ferror@plt+0x3f1a8>
  437558:	cbnz	w0, 4375bc <ferror@plt+0x33fec>
  43755c:	mov	x6, x21
  437560:	mov	w5, w26
  437564:	mov	w2, w22
  437568:	mov	x0, x19
  43756c:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437570:	mov	w3, #0x0                   	// #0
  437574:	add	x4, x4, #0xd74
  437578:	mov	w1, #0x6                   	// #6
  43757c:	bl	435d68 <ferror@plt+0x32798>
  437580:	b	4375bc <ferror@plt+0x33fec>
  437584:	mov	w1, #0x0                   	// #0
  437588:	b	4374ec <ferror@plt+0x33f1c>
  43758c:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437590:	mov	x6, x21
  437594:	mov	w5, w26
  437598:	add	x4, x4, #0xd49
  43759c:	mov	w2, w22
  4375a0:	mov	x0, x19
  4375a4:	mov	w3, #0x0                   	// #0
  4375a8:	mov	w1, #0x3                   	// #3
  4375ac:	bl	435cf8 <ferror@plt+0x32728>
  4375b0:	b	437214 <ferror@plt+0x33c44>
  4375b4:	cmp	x21, x24
  4375b8:	b.ne	437548 <ferror@plt+0x33f78>  // b.any
  4375bc:	cmp	w20, #0x20
  4375c0:	b.ne	4375e8 <ferror@plt+0x34018>  // b.any
  4375c4:	ldrb	w0, [x19, #1154]
  4375c8:	cbz	w0, 4375e8 <ferror@plt+0x34018>
  4375cc:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4375d0:	mov	w2, w22
  4375d4:	add	x4, x4, #0xd9c
  4375d8:	mov	x0, x19
  4375dc:	mov	w3, #0x0                   	// #0
  4375e0:	mov	w1, #0x2                   	// #2
  4375e4:	bl	435cf8 <ferror@plt+0x32728>
  4375e8:	and	w24, w20, #0x4000
  4375ec:	tbz	w20, #14, 437620 <ferror@plt+0x34050>
  4375f0:	cmp	w23, #0xa
  4375f4:	b.eq	437620 <ferror@plt+0x34050>  // b.none
  4375f8:	mov	x6, x21
  4375fc:	mov	w5, w26
  437600:	mov	w2, w22
  437604:	mov	x0, x19
  437608:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43760c:	mov	w3, #0x0                   	// #0
  437610:	add	x4, x4, #0xdca
  437614:	mov	w1, #0x3                   	// #3
  437618:	bl	435cf8 <ferror@plt+0x32728>
  43761c:	b	437210 <ferror@plt+0x33c40>
  437620:	tst	w20, #0x300000
  437624:	b.eq	43764c <ferror@plt+0x3407c>  // b.none
  437628:	ldrb	w0, [x19, #1154]
  43762c:	cbz	w0, 437674 <ferror@plt+0x340a4>
  437630:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437634:	mov	w2, w22
  437638:	add	x4, x4, #0xbe1
  43763c:	mov	x0, x19
  437640:	mov	w3, #0x0                   	// #0
  437644:	mov	w1, #0x2                   	// #2
  437648:	bl	435cf8 <ferror@plt+0x32728>
  43764c:	cbz	w24, 437674 <ferror@plt+0x340a4>
  437650:	ldrb	w0, [x19, #1154]
  437654:	cbz	w0, 437674 <ferror@plt+0x340a4>
  437658:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43765c:	mov	w2, w22
  437660:	add	x4, x4, #0xe03
  437664:	mov	x0, x19
  437668:	mov	w3, #0x0                   	// #0
  43766c:	mov	w1, #0x2                   	// #2
  437670:	bl	435cf8 <ferror@plt+0x32728>
  437674:	orr	w20, w20, #0x2
  437678:	b	43739c <ferror@plt+0x33dcc>
  43767c:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437680:	mov	x6, x21
  437684:	mov	w5, w24
  437688:	add	x4, x4, #0xe2f
  43768c:	b	43759c <ferror@plt+0x33fcc>
  437690:	mov	w1, #0x7                   	// #7
  437694:	b	4377b4 <ferror@plt+0x341e4>
  437698:	mov	x0, x19
  43769c:	bl	435ddc <ferror@plt+0x3280c>
  4376a0:	b	43781c <ferror@plt+0x3424c>
  4376a4:	cmp	w23, #0xa
  4376a8:	b.ne	4376e4 <ferror@plt+0x34114>  // b.any
  4376ac:	orr	w20, w20, #0x100
  4376b0:	b	437214 <ferror@plt+0x33c44>
  4376b4:	mov	w20, #0x111                 	// #273
  4376b8:	b	437214 <ferror@plt+0x33c44>
  4376bc:	cmp	w26, #0x9
  4376c0:	b.hi	437454 <ferror@plt+0x33e84>  // b.pmore
  4376c4:	mov	w23, #0xa                   	// #10
  4376c8:	cmp	w23, #0x10
  4376cc:	eor	w4, w4, #0x1
  4376d0:	csel	w4, w4, wzr, eq  // eq = none
  4376d4:	cbz	w4, 43747c <ferror@plt+0x33eac>
  4376d8:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4376dc:	add	x4, x4, #0xc80
  4376e0:	b	4371fc <ferror@plt+0x33c2c>
  4376e4:	orr	w0, w20, #0x400
  4376e8:	cmp	w23, #0x10
  4376ec:	orr	w20, w20, #0x200
  4376f0:	csel	w20, w20, w0, eq  // eq = none
  4376f4:	b	437214 <ferror@plt+0x33c44>
  4376f8:	cmp	w20, #0x2
  4376fc:	b.ne	437508 <ferror@plt+0x33f38>  // b.any
  437700:	ldrb	w0, [x21]
  437704:	cmp	w0, #0x2b
  437708:	b.eq	437714 <ferror@plt+0x34144>  // b.none
  43770c:	cmp	w0, #0x2d
  437710:	b.ne	437718 <ferror@plt+0x34148>  // b.any
  437714:	add	x21, x21, #0x1
  437718:	ldrb	w1, [x21]
  43771c:	ldrb	w0, [x21]
  437720:	ldrh	w1, [x27, x1, lsl #1]
  437724:	tbnz	w1, #2, 4374d4 <ferror@plt+0x33f04>
  437728:	cmp	w0, #0x27
  43772c:	b.ne	437738 <ferror@plt+0x34168>  // b.any
  437730:	ldrb	w0, [x19, #1166]
  437734:	cbnz	w0, 437314 <ferror@plt+0x33d44>
  437738:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43773c:	add	x4, x4, #0xcff
  437740:	b	4371fc <ferror@plt+0x33c2c>
  437744:	cmp	w26, w23
  437748:	b.cs	437428 <ferror@plt+0x33e58>  // b.hs, b.nlast
  43774c:	sub	x24, x24, x21
  437750:	mov	x1, x21
  437754:	mov	x2, x24
  437758:	mov	x0, x19
  43775c:	bl	436530 <ferror@plt+0x32f60>
  437760:	mov	w20, w0
  437764:	cbnz	w0, 437780 <ferror@plt+0x341b0>
  437768:	ldrb	w0, [x19, #1161]
  43776c:	cbz	w0, 43767c <ferror@plt+0x340ac>
  437770:	cbz	x25, 437778 <ferror@plt+0x341a8>
  437774:	str	x21, [x25]
  437778:	mov	w20, #0x1040                	// #4160
  43777c:	movk	w20, #0x100, lsl #16
  437780:	ldrb	w0, [x19, #1138]
  437784:	and	w25, w20, #0xf0
  437788:	cbz	w0, 4377d4 <ferror@plt+0x34204>
  43778c:	mov	x0, x19
  437790:	bl	442778 <ferror@plt+0x3f1a8>
  437794:	cbnz	w0, 4377d4 <ferror@plt+0x34204>
  437798:	and	w0, w20, #0x3000
  43779c:	cmp	w25, #0x40
  4377a0:	b.ne	4377ac <ferror@plt+0x341dc>  // b.any
  4377a4:	ldrb	w1, [x19, #1139]
  4377a8:	cbnz	w1, 437690 <ferror@plt+0x340c0>
  4377ac:	cbz	w0, 4377d4 <ferror@plt+0x34204>
  4377b0:	mov	w1, #0x6                   	// #6
  4377b4:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4377b8:	mov	x6, x21
  4377bc:	mov	w5, w24
  4377c0:	add	x4, x4, #0xd74
  4377c4:	mov	w2, w22
  4377c8:	mov	x0, x19
  4377cc:	mov	w3, #0x0                   	// #0
  4377d0:	bl	435d68 <ferror@plt+0x32798>
  4377d4:	cmp	w25, #0x40
  4377d8:	b.ne	43781c <ferror@plt+0x3424c>  // b.any
  4377dc:	ldrb	w0, [x19, #1139]
  4377e0:	cbz	w0, 43781c <ferror@plt+0x3424c>
  4377e4:	ldrb	w1, [x19, #1120]
  4377e8:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4377ec:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4377f0:	add	x0, x0, #0xa89
  4377f4:	cmp	w1, #0x0
  4377f8:	add	x4, x4, #0xa61
  4377fc:	csel	x4, x4, x0, ne  // ne = any
  437800:	ldrb	w0, [x19, #1152]
  437804:	mov	w2, w22
  437808:	mov	w3, #0x0                   	// #0
  43780c:	mov	w1, #0x7                   	// #7
  437810:	cbz	w0, 437698 <ferror@plt+0x340c8>
  437814:	mov	x0, x19
  437818:	bl	435d68 <ferror@plt+0x32798>
  43781c:	orr	w20, w20, #0x1
  437820:	b	43739c <ferror@plt+0x33dcc>
  437824:	cmp	w23, #0xa
  437828:	b.ls	437328 <ferror@plt+0x33d58>  // b.plast
  43782c:	cmp	w23, #0x10
  437830:	b.ne	437328 <ferror@plt+0x33d58>  // b.any
  437834:	and	w0, w0, #0xffffffdf
  437838:	cmp	w0, #0x50
  43783c:	b	4372f8 <ferror@plt+0x33d28>
  437840:	stp	x29, x30, [sp, #-128]!
  437844:	mov	w10, w2
  437848:	mov	x7, x0
  43784c:	mov	x29, sp
  437850:	stp	x19, x20, [sp, #16]
  437854:	ubfx	x0, x10, #12, #1
  437858:	ldr	w11, [x1, #8]
  43785c:	stp	xzr, xzr, [x8]
  437860:	mov	x19, x8
  437864:	cmp	w11, #0x1
  437868:	strb	w0, [x8, #16]
  43786c:	strb	wzr, [x8, #17]
  437870:	ldr	x0, [x1, #16]
  437874:	b.ne	437894 <ferror@plt+0x342c4>  // b.any
  437878:	ldrb	w0, [x0]
  43787c:	sub	w0, w0, #0x30
  437880:	sxtw	x0, w0
  437884:	str	x0, [x8, #8]
  437888:	ldp	x19, x20, [sp, #16]
  43788c:	ldp	x29, x30, [sp], #128
  437890:	ret
  437894:	and	w1, w2, #0xf00
  437898:	cmp	w1, #0x400
  43789c:	ldr	x18, [x7, #1208]
  4378a0:	b.ne	437a08 <ferror@plt+0x34438>  // b.any
  4378a4:	add	x9, x0, #0x1
  4378a8:	mov	w6, #0x8                   	// #8
  4378ac:	neg	w5, w18
  4378b0:	mov	x1, #0xffffffffffffffff    	// #-1
  4378b4:	cmp	x18, #0x40
  4378b8:	mov	w15, w6
  4378bc:	lsr	x5, x1, x5
  4378c0:	csel	x1, x5, x1, cc  // cc = lo, ul, last
  4378c4:	mov	x5, #0x1                   	// #1
  4378c8:	adrp	x13, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4378cc:	sub	x5, x5, w6, uxtw
  4378d0:	adrp	x14, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4378d4:	add	x5, x5, x1
  4378d8:	add	x11, x0, w11, uxtw
  4378dc:	add	x13, x13, #0x228
  4378e0:	add	x14, x14, #0xd40
  4378e4:	mov	w12, #0x0                   	// #0
  4378e8:	udiv	x5, x5, x15
  4378ec:	add	x5, x5, #0x1
  4378f0:	cmp	x9, x11
  4378f4:	b.cs	437a84 <ferror@plt+0x344b4>  // b.hs, b.nlast
  4378f8:	ldrb	w1, [x9]
  4378fc:	ldrb	w0, [x9]
  437900:	ldrh	w1, [x13, x1, lsl #1]
  437904:	tbnz	w1, #2, 437914 <ferror@plt+0x34344>
  437908:	cmp	w6, #0x10
  43790c:	b.ne	437a3c <ferror@plt+0x3446c>  // b.any
  437910:	tbz	w1, #8, 437a3c <ferror@plt+0x3446c>
  437914:	ldr	x4, [x19, #8]
  437918:	ldrb	w0, [x14, w0, sxtw]
  43791c:	cmp	x4, x5
  437920:	b.cc	437a54 <ferror@plt+0x34484>  // b.lo, b.ul, b.last
  437924:	ldrb	w17, [x19, #16]
  437928:	cmp	w6, #0x2
  43792c:	ldr	x1, [x19]
  437930:	b.eq	437a60 <ferror@plt+0x34490>  // b.none
  437934:	cmp	w6, #0x10
  437938:	cset	w5, eq  // eq = none
  43793c:	add	w5, w5, #0x3
  437940:	mov	w2, #0x40                  	// #64
  437944:	sub	w2, w2, w5
  437948:	lsl	x8, x4, x5
  43794c:	cmp	w6, #0xa
  437950:	lsl	x5, x1, x5
  437954:	lsr	x3, x4, x2
  437958:	orr	x5, x5, x3
  43795c:	b.ne	437a68 <ferror@plt+0x34498>  // b.any
  437960:	lsr	x3, x4, #63
  437964:	lsl	x16, x4, #1
  437968:	add	x3, x3, x1, lsl #1
  43796c:	adds	x4, x0, x16
  437970:	cinc	x3, x3, cs  // cs = hs, nlast
  437974:	adds	x20, x8, x4
  437978:	cinc	x3, x3, cs  // cs = hs, nlast
  43797c:	adds	x5, x5, x3
  437980:	b.cs	437a74 <ferror@plt+0x344a4>  // b.hs, b.nlast
  437984:	lsr	x1, x1, x2
  437988:	cmp	x1, #0x0
  43798c:	cset	w0, ne  // ne = any
  437990:	stp	x5, x20, [sp, #104]
  437994:	add	x8, sp, #0x40
  437998:	strb	w17, [sp, #120]
  43799c:	strb	w0, [sp, #121]
  4379a0:	ldp	x0, x1, [sp, #104]
  4379a4:	stp	x0, x1, [sp, #32]
  4379a8:	ldr	x0, [sp, #120]
  4379ac:	mov	x1, x18
  4379b0:	str	x0, [sp, #48]
  4379b4:	add	x0, sp, #0x20
  4379b8:	bl	436648 <ferror@plt+0x33078>
  4379bc:	ldp	x1, x0, [sp, #64]
  4379c0:	stp	x1, x0, [sp, #104]
  4379c4:	ldr	x0, [sp, #80]
  4379c8:	str	x0, [sp, #120]
  4379cc:	ldr	x2, [sp, #112]
  4379d0:	ubfx	w0, w0, #8, #8
  4379d4:	cmp	x20, x2
  4379d8:	b.ne	437a7c <ferror@plt+0x344ac>  // b.any
  4379dc:	cmp	x5, x1
  4379e0:	csinc	w0, w0, wzr, eq  // eq = none
  4379e4:	strb	w0, [sp, #121]
  4379e8:	mov	x5, #0x0                   	// #0
  4379ec:	ldp	x0, x1, [sp, #104]
  4379f0:	stp	x0, x1, [x19]
  4379f4:	ldr	x0, [sp, #120]
  4379f8:	str	x0, [x19, #16]
  4379fc:	ubfx	w0, w0, #8, #8
  437a00:	orr	w12, w0, w12
  437a04:	b	437a4c <ferror@plt+0x3447c>
  437a08:	cmp	w1, #0x200
  437a0c:	b.ne	437a1c <ferror@plt+0x3444c>  // b.any
  437a10:	add	x9, x0, #0x2
  437a14:	mov	w6, #0x10                  	// #16
  437a18:	b	4378ac <ferror@plt+0x342dc>
  437a1c:	cmp	w1, #0x800
  437a20:	b.ne	437a30 <ferror@plt+0x34460>  // b.any
  437a24:	add	x9, x0, #0x2
  437a28:	mov	w6, #0x2                   	// #2
  437a2c:	b	4378ac <ferror@plt+0x342dc>
  437a30:	mov	x9, x0
  437a34:	mov	w6, #0xa                   	// #10
  437a38:	b	4378ac <ferror@plt+0x342dc>
  437a3c:	cmp	w0, #0x27
  437a40:	b.ne	437a84 <ferror@plt+0x344b4>  // b.any
  437a44:	ldrb	w0, [x7, #1166]
  437a48:	cbz	w0, 437a84 <ferror@plt+0x344b4>
  437a4c:	add	x9, x9, #0x1
  437a50:	b	4378f0 <ferror@plt+0x34320>
  437a54:	madd	x4, x15, x4, x0
  437a58:	str	x4, [x19, #8]
  437a5c:	b	437a4c <ferror@plt+0x3447c>
  437a60:	mov	w5, #0x1                   	// #1
  437a64:	b	437940 <ferror@plt+0x34370>
  437a68:	mov	x16, #0x0                   	// #0
  437a6c:	mov	x3, #0x0                   	// #0
  437a70:	b	43796c <ferror@plt+0x3439c>
  437a74:	mov	w0, #0x1                   	// #1
  437a78:	b	437990 <ferror@plt+0x343c0>
  437a7c:	mov	w0, #0x1                   	// #1
  437a80:	b	4379e4 <ferror@plt+0x34414>
  437a84:	cbz	w12, 437aa4 <ferror@plt+0x344d4>
  437a88:	tbnz	w10, #24, 437aa4 <ferror@plt+0x344d4>
  437a8c:	mov	x0, x7
  437a90:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437a94:	mov	w1, #0x2                   	// #2
  437a98:	add	x2, x2, #0xe81
  437a9c:	bl	435b3c <ferror@plt+0x3256c>
  437aa0:	b	437888 <ferror@plt+0x342b8>
  437aa4:	ldrb	w0, [x19, #16]
  437aa8:	cbnz	w0, 437888 <ferror@plt+0x342b8>
  437aac:	ldrb	w0, [x7, #1160]
  437ab0:	cbz	w0, 437abc <ferror@plt+0x344ec>
  437ab4:	ldrb	w0, [x7, #16]
  437ab8:	cbnz	w0, 437888 <ferror@plt+0x342b8>
  437abc:	ldp	x0, x1, [x19]
  437ac0:	mov	x2, x18
  437ac4:	bl	436940 <ferror@plt+0x33370>
  437ac8:	tst	w0, #0xff
  437acc:	b.ne	437888 <ferror@plt+0x342b8>  // b.any
  437ad0:	cmp	w6, #0xa
  437ad4:	b.ne	437af8 <ferror@plt+0x34528>  // b.any
  437ad8:	ldrb	w0, [x7, #1152]
  437adc:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437ae0:	add	x2, x2, #0xeac
  437ae4:	cmp	w0, #0x0
  437ae8:	mov	x0, x7
  437aec:	cset	w1, ne  // ne = any
  437af0:	lsl	w1, w1, #1
  437af4:	bl	435b3c <ferror@plt+0x3256c>
  437af8:	mov	w0, #0x1                   	// #1
  437afc:	strb	w0, [x19, #16]
  437b00:	b	437888 <ferror@plt+0x342b8>
  437b04:	stp	x29, x30, [sp, #-48]!
  437b08:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  437b0c:	movk	x1, #0xcccd
  437b10:	mov	x29, sp
  437b14:	stp	x19, x20, [sp, #16]
  437b18:	mov	x20, x0
  437b1c:	ldr	x0, [x0, #1096]
  437b20:	str	x21, [sp, #32]
  437b24:	ldr	x21, [x20, #1104]
  437b28:	sub	x21, x21, x0
  437b2c:	asr	x19, x21, #3
  437b30:	mul	x19, x19, x1
  437b34:	mov	x1, #0x50                  	// #80
  437b38:	add	x19, x19, #0xa
  437b3c:	mul	x19, x19, x1
  437b40:	mov	x1, x19
  437b44:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  437b48:	add	x19, x0, x19
  437b4c:	str	x0, [x20, #1096]
  437b50:	str	x19, [x20, #1104]
  437b54:	add	x0, x0, x21
  437b58:	ldp	x19, x20, [sp, #16]
  437b5c:	ldr	x21, [sp, #32]
  437b60:	ldp	x29, x30, [sp], #48
  437b64:	ret
  437b68:	stp	x29, x30, [sp, #-400]!
  437b6c:	mov	x29, sp
  437b70:	stp	x27, x28, [sp, #80]
  437b74:	mov	x28, x0
  437b78:	and	w0, w1, #0xff
  437b7c:	stp	x19, x20, [sp, #16]
  437b80:	ldr	x19, [x28, #1096]
  437b84:	stp	x21, x22, [sp, #32]
  437b88:	mov	w21, #0x1                   	// #1
  437b8c:	stp	x23, x24, [sp, #48]
  437b90:	stp	x25, x26, [sp, #64]
  437b94:	str	wzr, [x28, #28]
  437b98:	str	xzr, [x28, #432]
  437b9c:	stp	wzr, wzr, [sp, #128]
  437ba0:	str	w0, [sp, #136]
  437ba4:	mov	w0, #0x16                  	// #22
  437ba8:	str	w0, [x19, #36]
  437bac:	str	wzr, [sp, #276]
  437bb0:	ldr	w0, [sp, #128]
  437bb4:	add	x1, sp, #0x114
  437bb8:	add	w0, w0, #0x1
  437bbc:	str	w0, [sp, #128]
  437bc0:	mov	x0, x28
  437bc4:	bl	444f38 <ferror@plt+0x41968>
  437bc8:	ldrb	w20, [x0, #4]
  437bcc:	mov	x23, x0
  437bd0:	ldr	w22, [sp, #276]
  437bd4:	cmp	w20, #0x5
  437bd8:	b.eq	438160 <ferror@plt+0x34b90>  // b.none
  437bdc:	b.hi	437c2c <ferror@plt+0x3465c>  // b.pmore
  437be0:	cmp	w20, #0x1
  437be4:	b.eq	4380f0 <ferror@plt+0x34b20>  // b.none
  437be8:	cmp	w20, #0x4
  437bec:	b.eq	438150 <ferror@plt+0x34b80>  // b.none
  437bf0:	sub	w0, w20, #0x1
  437bf4:	cmp	w0, #0x19
  437bf8:	b.ls	438100 <ferror@plt+0x34b30>  // b.plast
  437bfc:	mov	x1, x23
  437c00:	mov	x0, x28
  437c04:	bl	43d9a8 <ferror@plt+0x3a3d8>
  437c08:	mov	x5, x0
  437c0c:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  437c10:	add	x4, x4, #0xbd
  437c14:	mov	w2, w22
  437c18:	mov	w3, #0x0                   	// #0
  437c1c:	mov	w1, #0x3                   	// #3
  437c20:	mov	x0, x28
  437c24:	bl	435cf8 <ferror@plt+0x32728>
  437c28:	b	438148 <ferror@plt+0x34b78>
  437c2c:	cmp	w20, #0x35
  437c30:	b.eq	437c40 <ferror@plt+0x34670>  // b.none
  437c34:	b.hi	437c90 <ferror@plt+0x346c0>  // b.pmore
  437c38:	cmp	w20, #0x25
  437c3c:	b.ne	437bf0 <ferror@plt+0x34620>  // b.any
  437c40:	cbnz	w21, 437ca4 <ferror@plt+0x346d4>
  437c44:	mov	x1, x23
  437c48:	mov	x0, x28
  437c4c:	bl	43d9a8 <ferror@plt+0x3a3d8>
  437c50:	mov	x5, x0
  437c54:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437c58:	mov	w2, w22
  437c5c:	add	x4, x4, #0xee3
  437c60:	mov	x0, x28
  437c64:	mov	w3, #0x0                   	// #0
  437c68:	mov	w1, #0x3                   	// #3
  437c6c:	bl	435cf8 <ferror@plt+0x32728>
  437c70:	mov	w0, w21
  437c74:	ldp	x19, x20, [sp, #16]
  437c78:	ldp	x21, x22, [sp, #32]
  437c7c:	ldp	x23, x24, [sp, #48]
  437c80:	ldp	x25, x26, [sp, #64]
  437c84:	ldp	x27, x28, [sp, #80]
  437c88:	ldp	x29, x30, [sp], #400
  437c8c:	ret
  437c90:	sub	w0, w20, #0x37
  437c94:	and	w0, w0, #0xff
  437c98:	cmp	w0, #0x5
  437c9c:	b.ls	437c40 <ferror@plt+0x34670>  // b.plast
  437ca0:	b	437bf0 <ferror@plt+0x34620>
  437ca4:	str	wzr, [sp, #328]
  437ca8:	cmp	w20, #0x37
  437cac:	b.eq	437d7c <ferror@plt+0x347ac>  // b.none
  437cb0:	b.hi	437cdc <ferror@plt+0x3470c>  // b.pmore
  437cb4:	cmp	w20, #0x25
  437cb8:	b.eq	438088 <ferror@plt+0x34ab8>  // b.none
  437cbc:	cmp	w20, #0x35
  437cc0:	b.eq	437e1c <ferror@plt+0x3484c>  // b.none
  437cc4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  437cc8:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  437ccc:	add	x2, x2, #0x9e
  437cd0:	add	x0, x0, #0xa9
  437cd4:	mov	w1, #0x4ad                 	// #1197
  437cd8:	bl	403600 <ferror@plt+0x30>
  437cdc:	sub	w20, w20, #0x38
  437ce0:	and	w20, w20, #0xff
  437ce4:	cmp	w20, #0x4
  437ce8:	b.hi	437cc4 <ferror@plt+0x346f4>  // b.pmore
  437cec:	add	x2, sp, #0x130
  437cf0:	mov	x1, x23
  437cf4:	add	x3, sp, #0x148
  437cf8:	mov	x0, x28
  437cfc:	bl	432058 <ferror@plt+0x2ea88>
  437d00:	mov	w1, w0
  437d04:	ldr	w2, [sp, #328]
  437d08:	cbnz	w2, 438048 <ferror@plt+0x34a78>
  437d0c:	tbz	w0, #31, 438048 <ferror@plt+0x34a78>
  437d10:	orr	x1, x1, #0xffffffff00000000
  437d14:	mov	x0, #0xffffffffffffffff    	// #-1
  437d18:	stp	x0, x1, [sp, #352]
  437d1c:	add	x8, sp, #0xf0
  437d20:	ldp	x0, x1, [sp, #352]
  437d24:	stp	x0, x1, [sp, #208]
  437d28:	ldr	x1, [x28, #1208]
  437d2c:	strh	wzr, [sp, #368]
  437d30:	ldr	x0, [sp, #368]
  437d34:	str	x0, [sp, #224]
  437d38:	add	x0, sp, #0xd0
  437d3c:	bl	436648 <ferror@plt+0x33078>
  437d40:	ldp	x2, x0, [sp, #240]
  437d44:	stp	x2, x0, [sp, #352]
  437d48:	ldr	x0, [sp, #256]
  437d4c:	str	x0, [sp, #368]
  437d50:	ldr	x1, [sp, #360]
  437d54:	ubfx	w0, w0, #8, #8
  437d58:	ldr	w3, [sp, #328]
  437d5c:	strb	w0, [sp, #369]
  437d60:	cmp	w3, #0x0
  437d64:	stp	x2, x1, [sp, #352]
  437d68:	cset	w3, ne  // ne = any
  437d6c:	strb	w3, [sp, #368]
  437d70:	ldr	x4, [sp, #368]
  437d74:	str	x4, [sp, #392]
  437d78:	b	437ed8 <ferror@plt+0x34908>
  437d7c:	mov	w3, w22
  437d80:	mov	x1, x23
  437d84:	mov	x0, x28
  437d88:	mov	x2, #0x0                   	// #0
  437d8c:	bl	437104 <ferror@plt+0x33b34>
  437d90:	str	w0, [sp, #304]
  437d94:	tbz	w0, #24, 437dac <ferror@plt+0x347dc>
  437d98:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437d9c:	mov	x0, x28
  437da0:	add	x2, x2, #0xf0d
  437da4:	mov	w1, #0x3                   	// #3
  437da8:	bl	435b3c <ferror@plt+0x3256c>
  437dac:	ldr	w2, [sp, #304]
  437db0:	and	w0, w2, #0xf
  437db4:	cmp	w0, #0x1
  437db8:	b.eq	437dec <ferror@plt+0x3481c>  // b.none
  437dbc:	cmp	w0, #0x2
  437dc0:	b.ne	437de0 <ferror@plt+0x34810>  // b.any
  437dc4:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437dc8:	add	x4, x4, #0xf3d
  437dcc:	mov	w2, w22
  437dd0:	mov	x0, x28
  437dd4:	mov	w3, #0x0                   	// #0
  437dd8:	mov	w1, #0x3                   	// #3
  437ddc:	bl	435cf8 <ferror@plt+0x32728>
  437de0:	mov	w0, #0x0                   	// #0
  437de4:	mov	x1, #0x0                   	// #0
  437de8:	b	43804c <ferror@plt+0x34a7c>
  437dec:	tbnz	w2, #13, 437e10 <ferror@plt+0x34840>
  437df0:	add	x8, sp, #0x178
  437df4:	mov	x1, x23
  437df8:	mov	x0, x28
  437dfc:	bl	437840 <ferror@plt+0x34270>
  437e00:	ldrb	w3, [sp, #392]
  437e04:	ldrb	w0, [sp, #393]
  437e08:	ldp	x2, x1, [sp, #376]
  437e0c:	b	437ed8 <ferror@plt+0x34908>
  437e10:	adrp	x4, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437e14:	add	x4, x4, #0xf6a
  437e18:	b	437dcc <ferror@plt+0x347fc>
  437e1c:	ldr	x1, [x23, #8]
  437e20:	ldr	x0, [x28, #1248]
  437e24:	cmp	x1, x0
  437e28:	b.ne	437fe8 <ferror@plt+0x34a18>  // b.any
  437e2c:	ldrb	w0, [x28, #24]
  437e30:	ldr	x21, [x28, #136]
  437e34:	add	w0, w0, #0x1
  437e38:	strb	w0, [x28, #24]
  437e3c:	mov	x0, x28
  437e40:	bl	444ea4 <ferror@plt+0x418d4>
  437e44:	mov	x20, x0
  437e48:	ldrb	w0, [x0, #4]
  437e4c:	cmp	w0, #0x14
  437e50:	b.ne	437f00 <ferror@plt+0x34930>  // b.any
  437e54:	mov	x0, x28
  437e58:	bl	444ea4 <ferror@plt+0x418d4>
  437e5c:	mov	x20, x0
  437e60:	mov	w0, #0x1                   	// #1
  437e64:	ldrb	w1, [x20, #4]
  437e68:	cmp	w1, #0x35
  437e6c:	b.ne	437f7c <ferror@plt+0x349ac>  // b.any
  437e70:	ldr	x20, [x20, #8]
  437e74:	cbz	w0, 437f08 <ferror@plt+0x34938>
  437e78:	mov	x0, x28
  437e7c:	bl	444ea4 <ferror@plt+0x418d4>
  437e80:	ldrb	w0, [x0, #4]
  437e84:	cmp	w0, #0x15
  437e88:	b.eq	437f08 <ferror@plt+0x34938>  // b.none
  437e8c:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437e90:	mov	x0, x28
  437e94:	add	x2, x2, #0xf96
  437e98:	mov	w1, #0x3                   	// #3
  437e9c:	bl	435b3c <ferror@plt+0x3256c>
  437ea0:	mov	x20, #0x0                   	// #0
  437ea4:	ldrb	w0, [x28, #24]
  437ea8:	sub	w0, w0, #0x1
  437eac:	strb	w0, [x28, #24]
  437eb0:	cbz	x20, 437fe0 <ferror@plt+0x34a10>
  437eb4:	ldrb	w0, [x20, #18]
  437eb8:	tbz	w0, #1, 437fe0 <ferror@plt+0x34a10>
  437ebc:	ldrh	w1, [x20, #18]
  437ec0:	eor	x1, x1, #0x100
  437ec4:	ubfx	w1, w1, #8, #1
  437ec8:	and	x1, x1, #0xff
  437ecc:	mov	w0, #0x0                   	// #0
  437ed0:	mov	w3, #0x0                   	// #0
  437ed4:	mov	x2, #0x0                   	// #0
  437ed8:	strb	w0, [sp, #393]
  437edc:	add	x0, sp, #0x250
  437ee0:	stp	x2, x1, [sp, #376]
  437ee4:	mov	w21, #0x0                   	// #0
  437ee8:	strb	w3, [sp, #392]
  437eec:	ldp	x0, x1, [x0, #-216]
  437ef0:	stp	x0, x1, [x19, #8]
  437ef4:	ldr	x0, [sp, #392]
  437ef8:	str	x0, [x19, #24]
  437efc:	b	437bb0 <ferror@plt+0x345e0>
  437f00:	mov	w0, #0x0                   	// #0
  437f04:	b	437e64 <ferror@plt+0x34894>
  437f08:	cbz	x20, 437ea0 <ferror@plt+0x348d0>
  437f0c:	ldr	x0, [x28, #136]
  437f10:	cmp	x21, x0
  437f14:	b.ne	437f24 <ferror@plt+0x34954>  // b.any
  437f18:	add	x0, x28, #0x50
  437f1c:	cmp	x21, x0
  437f20:	b.eq	437f40 <ferror@plt+0x34970>  // b.none
  437f24:	ldrb	w0, [x28, #1150]
  437f28:	cbz	w0, 437f40 <ferror@plt+0x34970>
  437f2c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  437f30:	mov	x0, x28
  437f34:	add	x2, x2, #0xb
  437f38:	mov	w1, #0x18                  	// #24
  437f3c:	bl	435c18 <ferror@plt+0x32648>
  437f40:	ldrb	w0, [x20, #18]
  437f44:	and	w0, w0, #0x3
  437f48:	cmp	w0, #0x2
  437f4c:	b.ne	437f60 <ferror@plt+0x34990>  // b.any
  437f50:	ldr	x1, [x20, #24]
  437f54:	ldrb	w0, [x1, #19]
  437f58:	orr	w0, w0, #0x20
  437f5c:	strb	w0, [x1, #19]
  437f60:	ldrh	w0, [x20, #18]
  437f64:	tbnz	w0, #7, 437f74 <ferror@plt+0x349a4>
  437f68:	mov	x1, x20
  437f6c:	mov	x0, x28
  437f70:	bl	443680 <ferror@plt+0x400b0>
  437f74:	str	x20, [x28, #432]
  437f78:	b	437ea4 <ferror@plt+0x348d4>
  437f7c:	mov	x0, x28
  437f80:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437f84:	mov	w1, #0x3                   	// #3
  437f88:	add	x2, x2, #0xfb2
  437f8c:	bl	435b3c <ferror@plt+0x3256c>
  437f90:	ldrh	w0, [x20, #6]
  437f94:	tbz	w0, #4, 437ea0 <ferror@plt+0x348d0>
  437f98:	ldrb	w0, [x20, #4]
  437f9c:	mov	x1, x20
  437fa0:	strb	w0, [sp, #380]
  437fa4:	mov	x0, x28
  437fa8:	strh	wzr, [sp, #382]
  437fac:	bl	43d9a8 <ferror@plt+0x3a3d8>
  437fb0:	add	x1, sp, #0x178
  437fb4:	mov	x20, x0
  437fb8:	mov	x0, x28
  437fbc:	bl	43d9a8 <ferror@plt+0x3a3d8>
  437fc0:	mov	x3, x20
  437fc4:	mov	x4, x0
  437fc8:	adrp	x2, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  437fcc:	mov	x0, x28
  437fd0:	add	x2, x2, #0xfdc
  437fd4:	mov	w1, #0x3                   	// #3
  437fd8:	bl	435b3c <ferror@plt+0x3256c>
  437fdc:	b	437ea0 <ferror@plt+0x348d0>
  437fe0:	mov	w1, #0x0                   	// #0
  437fe4:	b	437ec8 <ferror@plt+0x348f8>
  437fe8:	ldr	x0, [x28, #1288]
  437fec:	cmp	x1, x0
  437ff0:	b.ne	438008 <ferror@plt+0x34a38>  // b.any
  437ff4:	add	x8, sp, #0x178
  437ff8:	mov	w1, #0x0                   	// #0
  437ffc:	mov	x0, x28
  438000:	bl	4367ac <ferror@plt+0x331dc>
  438004:	b	437e00 <ferror@plt+0x34830>
  438008:	ldr	x0, [x28, #1296]
  43800c:	cmp	x1, x0
  438010:	b.ne	438020 <ferror@plt+0x34a50>  // b.any
  438014:	add	x8, sp, #0x178
  438018:	mov	w1, #0x1                   	// #1
  43801c:	b	437ffc <ferror@plt+0x34a2c>
  438020:	ldrb	w0, [x28, #1120]
  438024:	cbz	w0, 438054 <ferror@plt+0x34a84>
  438028:	ldr	x0, [x28, #1256]
  43802c:	cmp	x1, x0
  438030:	b.eq	438040 <ferror@plt+0x34a70>  // b.none
  438034:	ldr	x2, [x28, #1264]
  438038:	cmp	x1, x2
  43803c:	b.ne	438054 <ferror@plt+0x34a84>  // b.any
  438040:	cmp	x1, x0
  438044:	cset	x1, eq  // eq = none
  438048:	mov	w0, #0x0                   	// #0
  43804c:	mov	x2, #0x0                   	// #0
  438050:	b	437d58 <ferror@plt+0x34788>
  438054:	ldrb	w0, [x28, #1149]
  438058:	cbz	w0, 437de4 <ferror@plt+0x34814>
  43805c:	ldr	w0, [x28, #28]
  438060:	cbnz	w0, 437de0 <ferror@plt+0x34810>
  438064:	ldr	x5, [x1]
  438068:	mov	w2, w22
  43806c:	mov	x0, x28
  438070:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438074:	mov	w3, #0x0                   	// #0
  438078:	add	x4, x4, #0x35
  43807c:	mov	w1, #0xd                   	// #13
  438080:	bl	435d68 <ferror@plt+0x32798>
  438084:	b	437de0 <ferror@plt+0x34810>
  438088:	ldrb	w0, [x28, #18]
  43808c:	cbnz	w0, 4380b4 <ferror@plt+0x34ae4>
  438090:	ldrb	w0, [x28, #1154]
  438094:	cbz	w0, 4380c8 <ferror@plt+0x34af8>
  438098:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43809c:	mov	w2, w22
  4380a0:	add	x4, x4, #0x59
  4380a4:	mov	x0, x28
  4380a8:	mov	w3, #0x0                   	// #0
  4380ac:	mov	w1, #0x2                   	// #2
  4380b0:	bl	435cf8 <ferror@plt+0x32728>
  4380b4:	add	x1, sp, #0x130
  4380b8:	mov	x0, x28
  4380bc:	bl	434cc4 <ferror@plt+0x316f4>
  4380c0:	ldr	w1, [sp, #304]
  4380c4:	b	438048 <ferror@plt+0x34a78>
  4380c8:	ldrb	w0, [x28, #1132]
  4380cc:	cbz	w0, 4380b4 <ferror@plt+0x34ae4>
  4380d0:	mov	w2, w22
  4380d4:	mov	x0, x28
  4380d8:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4380dc:	mov	w3, #0x0                   	// #0
  4380e0:	add	x4, x4, #0x78
  4380e4:	mov	w1, #0x1                   	// #1
  4380e8:	bl	435d68 <ferror@plt+0x32798>
  4380ec:	b	4380b4 <ferror@plt+0x34ae4>
  4380f0:	ldr	w0, [sp, #128]
  4380f4:	cmp	w0, #0x1
  4380f8:	cset	w0, eq  // eq = none
  4380fc:	str	w0, [sp, #132]
  438100:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  438104:	add	x0, x0, #0x9ae
  438108:	str	x0, [sp, #112]
  43810c:	add	x0, x0, w20, sxtw #1
  438110:	sxtw	x2, w20
  438114:	ldrb	w1, [x0, #1]
  438118:	tbz	w1, #0, 43816c <ferror@plt+0x34b9c>
  43811c:	cbz	w21, 437c44 <ferror@plt+0x34674>
  438120:	ldr	w0, [x19, #36]
  438124:	sub	w0, w0, #0x1
  438128:	cmp	w0, #0x1b
  43812c:	b.ls	438220 <ferror@plt+0x34c50>  // b.plast
  438130:	ldr	w3, [x19, #36]
  438134:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438138:	mov	x0, x28
  43813c:	add	x2, x2, #0x173
  438140:	mov	w1, #0x4                   	// #4
  438144:	bl	435b3c <ferror@plt+0x3256c>
  438148:	mov	w21, #0x0                   	// #0
  43814c:	b	437c70 <ferror@plt+0x346a0>
  438150:	cmp	w21, #0x0
  438154:	mov	w0, #0x1b                  	// #27
  438158:	csel	w20, w20, w0, eq  // eq = none
  43815c:	b	438100 <ferror@plt+0x34b30>
  438160:	cmp	w21, #0x0
  438164:	mov	w0, #0x1c                  	// #28
  438168:	b	438158 <ferror@plt+0x34b88>
  43816c:	cbz	w21, 438120 <ferror@plt+0x34b50>
  438170:	ldr	w0, [x19, #36]
  438174:	cmp	w20, #0x15
  438178:	b.ne	438198 <ferror@plt+0x34bc8>  // b.any
  43817c:	cmp	w0, #0x14
  438180:	b.ne	4381d0 <ferror@plt+0x34c00>  // b.any
  438184:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438188:	add	x4, x4, #0xf1
  43818c:	mov	w2, w22
  438190:	mov	w3, #0x0                   	// #0
  438194:	b	438e98 <ferror@plt+0x358c8>
  438198:	cmp	w20, #0x16
  43819c:	b.ne	4381d0 <ferror@plt+0x34c00>  // b.any
  4381a0:	cmp	w0, #0x16
  4381a4:	b.ne	4381d0 <ferror@plt+0x34c00>  // b.any
  4381a8:	ldr	w1, [sp, #136]
  4381ac:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4381b0:	adrp	x5, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4381b4:	add	x0, x0, #0xedd
  4381b8:	add	x5, x5, #0xa5d
  4381bc:	cmp	w1, #0x0
  4381c0:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4381c4:	csel	x5, x5, x0, ne  // ne = any
  4381c8:	add	x4, x4, #0x118
  4381cc:	b	437c14 <ferror@plt+0x34644>
  4381d0:	and	w0, w0, #0xfffffffd
  4381d4:	cmp	w0, #0x14
  4381d8:	b.eq	4381f8 <ferror@plt+0x34c28>  // b.none
  4381dc:	ldr	x1, [x19]
  4381e0:	mov	x0, x28
  4381e4:	bl	43d9a8 <ferror@plt+0x3a3d8>
  4381e8:	mov	x5, x0
  4381ec:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4381f0:	add	x4, x4, #0x12e
  4381f4:	b	437c14 <ferror@plt+0x34644>
  4381f8:	sub	w0, w20, #0x15
  4381fc:	cmp	w0, #0x1
  438200:	b.ls	438120 <ferror@plt+0x34b50>  // b.plast
  438204:	mov	x1, x23
  438208:	mov	x0, x28
  43820c:	bl	43d9a8 <ferror@plt+0x3a3d8>
  438210:	mov	x5, x0
  438214:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438218:	add	x4, x4, #0x151
  43821c:	b	437c14 <ferror@plt+0x34644>
  438220:	cmp	w20, #0x14
  438224:	b.eq	438fb8 <ferror@plt+0x359e8>  // b.none
  438228:	lsl	x0, x2, #1
  43822c:	ubfx	x1, x1, #1, #1
  438230:	ldr	x2, [sp, #112]
  438234:	ldrb	w0, [x2, x0]
  438238:	sub	w0, w0, w1
  43823c:	str	w0, [sp, #140]
  438240:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438244:	add	x0, x0, #0x1c0
  438248:	str	x0, [sp, #144]
  43824c:	ldrsw	x0, [x19, #36]
  438250:	ldr	x2, [sp, #112]
  438254:	lsl	x1, x0, #1
  438258:	add	x0, x2, x0, lsl #1
  43825c:	ldrb	w1, [x2, x1]
  438260:	ldr	w2, [sp, #140]
  438264:	cmp	w2, w1
  438268:	b.cs	438f58 <ferror@plt+0x35988>  // b.hs, b.nlast
  43826c:	ldrb	w1, [x28, #1141]
  438270:	cbz	w1, 4382d4 <ferror@plt+0x34d04>
  438274:	ldrb	w0, [x0, #1]
  438278:	tbz	w0, #2, 4382d4 <ferror@plt+0x34d04>
  43827c:	ldrb	w0, [x19, #24]
  438280:	ldurb	w1, [x19, #-16]
  438284:	cmp	w1, w0
  438288:	b.eq	4382d4 <ferror@plt+0x34d04>  // b.none
  43828c:	ldr	x2, [x28, #1208]
  438290:	cbz	w0, 438304 <ferror@plt+0x34d34>
  438294:	ldp	x0, x1, [x19, #-32]
  438298:	bl	436940 <ferror@plt+0x33370>
  43829c:	tst	w0, #0xff
  4382a0:	b.ne	4382d4 <ferror@plt+0x34d04>  // b.any
  4382a4:	ldr	x1, [x19]
  4382a8:	mov	x0, x28
  4382ac:	ldur	w24, [x19, #-8]
  4382b0:	bl	43d9a8 <ferror@plt+0x3a3d8>
  4382b4:	mov	x5, x0
  4382b8:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4382bc:	add	x4, x4, #0x18c
  4382c0:	mov	w2, w24
  4382c4:	mov	x0, x28
  4382c8:	mov	w3, #0x0                   	// #0
  4382cc:	mov	w1, #0x0                   	// #0
  4382d0:	bl	435cf8 <ferror@plt+0x32728>
  4382d4:	ldr	w0, [x19, #36]
  4382d8:	str	w0, [sp, #96]
  4382dc:	mov	w0, w0
  4382e0:	sub	w1, w0, #0x1
  4382e4:	cmp	w1, #0x1b
  4382e8:	b.hi	438130 <ferror@plt+0x34b60>  // b.pmore
  4382ec:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  4382f0:	add	x0, x0, #0x968
  4382f4:	ldrh	w0, [x0, w1, uxtw #1]
  4382f8:	adr	x1, 438304 <ferror@plt+0x34d34>
  4382fc:	add	x0, x1, w0, sxth #2
  438300:	br	x0
  438304:	ldp	x0, x1, [x19, #8]
  438308:	bl	436940 <ferror@plt+0x33370>
  43830c:	tst	w0, #0xff
  438310:	b.ne	4382d4 <ferror@plt+0x34d04>  // b.any
  438314:	ldr	x1, [x19]
  438318:	mov	x0, x28
  43831c:	ldr	w24, [x19, #32]
  438320:	bl	43d9a8 <ferror@plt+0x3a3d8>
  438324:	mov	x5, x0
  438328:	ldr	x4, [sp, #144]
  43832c:	b	4382c0 <ferror@plt+0x34cf0>
  438330:	ldp	x0, x1, [x19, #8]
  438334:	stp	x0, x1, [sp, #352]
  438338:	ldr	w1, [sp, #96]
  43833c:	ldr	x0, [x19, #24]
  438340:	str	x0, [sp, #368]
  438344:	ldrb	w26, [x19, #24]
  438348:	cmp	w1, #0x1b
  43834c:	ldrb	w0, [x19, #25]
  438350:	ldp	x25, x27, [x19, #8]
  438354:	b.eq	4383bc <ferror@plt+0x34dec>  // b.none
  438358:	cmp	w1, #0x1c
  43835c:	b.eq	4383e8 <ferror@plt+0x34e18>  // b.none
  438360:	cmp	w1, #0xe
  438364:	b.ne	438490 <ferror@plt+0x34ec0>  // b.any
  438368:	mvn	x25, x25
  43836c:	str	x25, [sp, #352]
  438370:	mvn	x25, x27
  438374:	str	x25, [sp, #360]
  438378:	strb	w0, [sp, #369]
  43837c:	add	x8, sp, #0xf0
  438380:	ldp	x0, x1, [sp, #352]
  438384:	stp	x0, x1, [sp, #208]
  438388:	ldr	x1, [x28, #1208]
  43838c:	strb	w26, [sp, #368]
  438390:	ldr	x0, [sp, #368]
  438394:	str	x0, [sp, #224]
  438398:	add	x0, sp, #0xd0
  43839c:	bl	436648 <ferror@plt+0x33078>
  4383a0:	ldp	x25, x0, [sp, #240]
  4383a4:	stp	x25, x0, [sp, #352]
  4383a8:	ldr	x26, [sp, #256]
  4383ac:	str	x26, [sp, #368]
  4383b0:	mov	x27, x0
  4383b4:	and	w26, w26, #0xff
  4383b8:	b	4383e0 <ferror@plt+0x34e10>
  4383bc:	ldrb	w0, [x28, #1138]
  4383c0:	cbz	w0, 438430 <ferror@plt+0x34e60>
  4383c4:	ldr	w0, [x28, #28]
  4383c8:	cbnz	w0, 4383e0 <ferror@plt+0x34e10>
  4383cc:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4383d0:	mov	x0, x28
  4383d4:	add	x2, x2, #0x1f5
  4383d8:	mov	w1, #0x6                   	// #6
  4383dc:	bl	435ba8 <ferror@plt+0x325d8>
  4383e0:	mov	w0, #0x0                   	// #0
  4383e4:	b	438430 <ferror@plt+0x34e60>
  4383e8:	stp	x25, x27, [sp, #352]
  4383ec:	add	x8, sp, #0xf0
  4383f0:	strb	w0, [sp, #369]
  4383f4:	ldp	x0, x1, [sp, #352]
  4383f8:	stp	x0, x1, [sp, #208]
  4383fc:	ldr	x1, [x28, #1208]
  438400:	strb	w26, [sp, #368]
  438404:	ldr	x0, [sp, #368]
  438408:	str	x0, [sp, #224]
  43840c:	add	x0, sp, #0xd0
  438410:	bl	43669c <ferror@plt+0x330cc>
  438414:	ldp	x25, x0, [sp, #240]
  438418:	stp	x25, x0, [sp, #352]
  43841c:	ldr	x0, [sp, #256]
  438420:	str	x0, [sp, #368]
  438424:	ldr	x27, [sp, #360]
  438428:	and	w26, w0, #0xff
  43842c:	ubfx	w0, w0, #8, #8
  438430:	add	x2, sp, #0x250
  438434:	stp	x25, x27, [sp, #352]
  438438:	strb	w26, [sp, #368]
  43843c:	strb	w0, [sp, #369]
  438440:	ldp	x0, x1, [sp, #352]
  438444:	stp	x0, x1, [x2, #-216]
  438448:	ldr	x2, [sp, #368]
  43844c:	str	x2, [sp, #392]
  438450:	stp	x0, x1, [x19, #-32]
  438454:	ldr	x0, [sp, #392]
  438458:	stur	x0, [x19, #-16]
  43845c:	ldr	w0, [x19, #32]
  438460:	stur	w0, [x19, #-8]
  438464:	ldurb	w0, [x19, #-15]
  438468:	sub	x24, x19, #0x28
  43846c:	cbz	w0, 438e50 <ferror@plt+0x35880>
  438470:	ldr	w0, [x28, #28]
  438474:	cbnz	w0, 438e50 <ferror@plt+0x35880>
  438478:	mov	x0, x28
  43847c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438480:	mov	w1, #0x2                   	// #2
  438484:	add	x2, x2, #0x26f
  438488:	bl	435b3c <ferror@plt+0x3256c>
  43848c:	b	438e50 <ferror@plt+0x35880>
  438490:	orr	x25, x25, x27
  438494:	mov	w0, #0x0                   	// #0
  438498:	cmp	x25, #0x0
  43849c:	mov	w26, #0x0                   	// #0
  4384a0:	cset	x27, eq  // eq = none
  4384a4:	mov	x25, #0x0                   	// #0
  4384a8:	b	438430 <ferror@plt+0x34e60>
  4384ac:	ldp	x0, x1, [x19, #-32]
  4384b0:	stp	x0, x1, [sp, #208]
  4384b4:	ldr	w3, [sp, #96]
  4384b8:	ldur	x0, [x19, #-16]
  4384bc:	str	x0, [sp, #224]
  4384c0:	add	x8, sp, #0xf0
  4384c4:	add	x2, sp, #0xb0
  4384c8:	ldp	x0, x1, [x19, #8]
  4384cc:	stp	x0, x1, [sp, #176]
  4384d0:	ldr	x0, [x19, #24]
  4384d4:	add	x1, sp, #0xd0
  4384d8:	str	x0, [sp, #192]
  4384dc:	mov	x0, x28
  4384e0:	bl	436bb4 <ferror@plt+0x335e4>
  4384e4:	ldp	x0, x1, [sp, #240]
  4384e8:	stp	x0, x1, [x19, #-32]
  4384ec:	ldr	x0, [sp, #256]
  4384f0:	b	438458 <ferror@plt+0x34e88>
  4384f4:	ldp	x11, x13, [x19, #-32]
  4384f8:	sub	x10, x19, #0x28
  4384fc:	ldp	x12, x4, [x19, #8]
  438500:	ldurb	w2, [x19, #-16]
  438504:	ldrb	w5, [x19, #24]
  438508:	ldr	x6, [x28, #1208]
  43850c:	ldp	x0, x1, [x19, #-32]
  438510:	stp	x0, x1, [sp, #352]
  438514:	mov	x3, x12
  438518:	ldr	x0, [x10, #24]
  43851c:	mov	x1, x13
  438520:	str	x0, [sp, #368]
  438524:	mov	x0, x11
  438528:	bl	436e90 <ferror@plt+0x338c0>
  43852c:	and	w2, w0, #0xff
  438530:	ldr	w1, [sp, #96]
  438534:	cmp	w1, #0x19
  438538:	b.ne	438574 <ferror@plt+0x34fa4>  // b.any
  43853c:	and	x2, x0, #0xff
  438540:	stp	xzr, x2, [sp, #352]
  438544:	add	x2, sp, #0x250
  438548:	strh	wzr, [sp, #368]
  43854c:	ldp	x0, x1, [sp, #352]
  438550:	stp	x0, x1, [x2, #-216]
  438554:	ldr	x2, [sp, #368]
  438558:	str	x2, [sp, #392]
  43855c:	stp	x0, x1, [x10, #8]
  438560:	ldr	x0, [sp, #392]
  438564:	str	x0, [x10, #24]
  438568:	ldr	w0, [x19, #32]
  43856c:	str	w0, [x10, #32]
  438570:	b	438464 <ferror@plt+0x34e94>
  438574:	ldr	w0, [sp, #96]
  438578:	cmp	w0, #0x3
  43857c:	b.ne	43858c <ferror@plt+0x34fbc>  // b.any
  438580:	eor	w2, w2, #0x1
  438584:	and	x2, x2, #0xff
  438588:	b	438540 <ferror@plt+0x34f70>
  43858c:	ldr	w0, [sp, #96]
  438590:	cmp	w0, #0x2
  438594:	b.ne	4385b0 <ferror@plt+0x34fe0>  // b.any
  438598:	cbz	w2, 438584 <ferror@plt+0x34fb4>
  43859c:	cmp	x4, x13
  4385a0:	b.ne	438584 <ferror@plt+0x34fb4>  // b.any
  4385a4:	cmp	x12, x11
  4385a8:	cset	w2, ne  // ne = any
  4385ac:	b	438584 <ferror@plt+0x34fb4>
  4385b0:	cbz	w2, 4385c8 <ferror@plt+0x34ff8>
  4385b4:	cmp	x4, x13
  4385b8:	b.ne	4385d0 <ferror@plt+0x35000>  // b.any
  4385bc:	cmp	x12, x11
  4385c0:	cset	w2, eq  // eq = none
  4385c4:	b	438584 <ferror@plt+0x34fb4>
  4385c8:	mov	w2, #0x1                   	// #1
  4385cc:	b	438584 <ferror@plt+0x34fb4>
  4385d0:	mov	w2, #0x0                   	// #0
  4385d4:	b	438584 <ferror@plt+0x34fb4>
  4385d8:	ldp	x2, x6, [x19, #8]
  4385dc:	sub	x1, x19, #0x28
  4385e0:	ldp	x4, x5, [x19, #-32]
  4385e4:	stp	x4, x5, [sp, #352]
  4385e8:	ldur	x3, [x19, #-24]
  4385ec:	ldr	x0, [x1, #24]
  4385f0:	str	x0, [sp, #368]
  4385f4:	cmp	x6, x3
  4385f8:	ldur	x0, [x19, #-32]
  4385fc:	b.ne	438650 <ferror@plt+0x35080>  // b.any
  438600:	cmp	x2, x0
  438604:	cset	w0, eq  // eq = none
  438608:	ldr	w2, [sp, #96]
  43860c:	cmp	w2, #0x18
  438610:	b.ne	438618 <ferror@plt+0x35048>  // b.any
  438614:	eor	w0, w0, #0x1
  438618:	and	x0, x0, #0xff
  43861c:	stp	xzr, x0, [sp, #352]
  438620:	add	x0, sp, #0x250
  438624:	strh	wzr, [sp, #368]
  438628:	ldp	x2, x3, [sp, #352]
  43862c:	stp	x2, x3, [x0, #-216]
  438630:	ldr	x0, [sp, #368]
  438634:	str	x0, [sp, #392]
  438638:	stp	x2, x3, [x1, #8]
  43863c:	ldr	x0, [sp, #392]
  438640:	str	x0, [x1, #24]
  438644:	ldr	w0, [x19, #32]
  438648:	str	w0, [x1, #32]
  43864c:	b	438464 <ferror@plt+0x34e94>
  438650:	mov	w0, #0x0                   	// #0
  438654:	b	438608 <ferror@plt+0x35038>
  438658:	sub	x4, x19, #0x28
  43865c:	ldrb	w6, [x19, #24]
  438660:	ldp	x2, x3, [x19, #-32]
  438664:	stp	x2, x3, [sp, #352]
  438668:	ldr	x2, [x4, #24]
  43866c:	str	x2, [sp, #368]
  438670:	ldurb	w2, [x19, #-16]
  438674:	ldp	x3, x5, [x19, #-32]
  438678:	cmp	w2, #0x0
  43867c:	csel	w2, w2, w6, ne  // ne = any
  438680:	ldr	w6, [sp, #96]
  438684:	ldp	x1, x0, [x19, #8]
  438688:	cmp	w6, #0x9
  43868c:	b.ne	4386d0 <ferror@plt+0x35100>  // b.any
  438690:	and	x0, x0, x5
  438694:	and	x1, x1, x3
  438698:	stp	x1, x0, [sp, #352]
  43869c:	strb	w2, [sp, #368]
  4386a0:	add	x2, sp, #0x250
  4386a4:	strb	wzr, [sp, #369]
  4386a8:	ldp	x0, x1, [sp, #352]
  4386ac:	stp	x0, x1, [x2, #-216]
  4386b0:	ldr	x2, [sp, #368]
  4386b4:	str	x2, [sp, #392]
  4386b8:	stp	x0, x1, [x4, #8]
  4386bc:	ldr	x0, [sp, #392]
  4386c0:	str	x0, [x4, #24]
  4386c4:	ldr	w0, [x19, #32]
  4386c8:	str	w0, [x4, #32]
  4386cc:	b	438464 <ferror@plt+0x34e94>
  4386d0:	ldr	w6, [sp, #96]
  4386d4:	cmp	w6, #0xa
  4386d8:	b.ne	4386e8 <ferror@plt+0x35118>  // b.any
  4386dc:	orr	x0, x0, x5
  4386e0:	orr	x1, x1, x3
  4386e4:	b	438698 <ferror@plt+0x350c8>
  4386e8:	eor	x0, x0, x5
  4386ec:	eor	x1, x1, x3
  4386f0:	b	438698 <ferror@plt+0x350c8>
  4386f4:	sub	x13, x19, #0x28
  4386f8:	add	x2, sp, #0x200
  4386fc:	ldp	x0, x1, [x19, #-32]
  438700:	stp	x0, x1, [sp, #304]
  438704:	ldr	x0, [x13, #24]
  438708:	str	x0, [sp, #320]
  43870c:	ldr	x18, [x28, #1208]
  438710:	ldp	x0, x1, [x19, #8]
  438714:	ldurb	w15, [x19, #-16]
  438718:	ldp	x14, x24, [x19, #-32]
  43871c:	stp	x0, x1, [x2, #-184]
  438720:	ldr	x0, [x19, #24]
  438724:	str	x0, [sp, #344]
  438728:	ldp	x11, x25, [x19, #8]
  43872c:	cbnz	w15, 438944 <ferror@plt+0x35374>
  438730:	ldrb	w12, [x19, #24]
  438734:	cbnz	w12, 4387f0 <ferror@plt+0x35220>
  438738:	mov	x2, x18
  43873c:	mov	x1, x24
  438740:	mov	x0, x14
  438744:	bl	436940 <ferror@plt+0x33370>
  438748:	tst	w0, #0xff
  43874c:	b.ne	43893c <ferror@plt+0x3536c>  // b.any
  438750:	stp	x14, x24, [sp, #304]
  438754:	add	x8, sp, #0xf0
  438758:	strb	wzr, [sp, #320]
  43875c:	ldp	x0, x1, [sp, #304]
  438760:	stp	x0, x1, [sp, #208]
  438764:	ldr	x0, [sp, #320]
  438768:	mov	x1, x18
  43876c:	str	x0, [sp, #224]
  438770:	add	x0, sp, #0xd0
  438774:	bl	43669c <ferror@plt+0x330cc>
  438778:	ldp	x14, x0, [sp, #240]
  43877c:	stp	x14, x0, [sp, #304]
  438780:	mov	w15, #0x1                   	// #1
  438784:	ldr	x24, [sp, #312]
  438788:	ldr	x0, [sp, #256]
  43878c:	str	x0, [sp, #320]
  438790:	mov	x2, x18
  438794:	mov	x1, x25
  438798:	mov	x0, x11
  43879c:	bl	436940 <ferror@plt+0x33370>
  4387a0:	tst	w0, #0xff
  4387a4:	b.ne	4387f0 <ferror@plt+0x35220>  // b.any
  4387a8:	add	x0, sp, #0x200
  4387ac:	stp	x11, x25, [sp, #328]
  4387b0:	eor	w15, w15, #0x1
  4387b4:	strb	wzr, [sp, #344]
  4387b8:	add	x8, sp, #0xf0
  4387bc:	ldp	x0, x1, [x0, #-184]
  4387c0:	stp	x0, x1, [sp, #208]
  4387c4:	ldr	x0, [sp, #344]
  4387c8:	mov	x1, x18
  4387cc:	str	x0, [sp, #224]
  4387d0:	add	x0, sp, #0xd0
  4387d4:	bl	43669c <ferror@plt+0x330cc>
  4387d8:	ldp	x11, x0, [sp, #240]
  4387dc:	stp	x11, x0, [sp, #328]
  4387e0:	mov	w12, #0x0                   	// #0
  4387e4:	ldr	x25, [sp, #336]
  4387e8:	ldr	x0, [sp, #256]
  4387ec:	str	x0, [sp, #344]
  4387f0:	cbz	x14, 438950 <ferror@plt+0x35380>
  4387f4:	cmp	x11, #0x0
  4387f8:	cset	w10, ne  // ne = any
  4387fc:	add	x8, sp, #0x178
  438800:	mov	x1, x25
  438804:	mov	x0, x24
  438808:	bl	436738 <ferror@plt+0x33168>
  43880c:	ldp	x9, x5, [sp, #376]
  438810:	mov	x0, x14
  438814:	add	x8, sp, #0x160
  438818:	mov	x1, x25
  43881c:	bl	436738 <ferror@plt+0x33168>
  438820:	mov	x1, x11
  438824:	ldr	x0, [sp, #360]
  438828:	mov	w6, #0x1                   	// #1
  43882c:	add	x8, sp, #0x160
  438830:	add	x9, x9, x0
  438834:	ldr	x0, [sp, #352]
  438838:	cmp	x0, #0x0
  43883c:	mov	x0, x24
  438840:	csel	w10, w10, w6, eq  // eq = none
  438844:	bl	436738 <ferror@plt+0x33168>
  438848:	ldr	x0, [sp, #360]
  43884c:	add	x8, sp, #0xf0
  438850:	add	x9, x9, x0
  438854:	str	x9, [sp, #376]
  438858:	ldr	x0, [sp, #352]
  43885c:	cmp	x0, #0x0
  438860:	add	x0, sp, #0x250
  438864:	csel	w10, w10, w6, eq  // eq = none
  438868:	ldp	x0, x1, [x0, #-216]
  43886c:	stp	x0, x1, [sp, #208]
  438870:	ldr	x0, [sp, #392]
  438874:	mov	x1, x18
  438878:	str	x0, [sp, #224]
  43887c:	add	x0, sp, #0xd0
  438880:	bl	436648 <ferror@plt+0x33078>
  438884:	ldp	x4, x0, [sp, #240]
  438888:	stp	x4, x0, [sp, #376]
  43888c:	ldr	x0, [sp, #256]
  438890:	str	x0, [sp, #392]
  438894:	ldr	x1, [sp, #384]
  438898:	cmp	x5, x1
  43889c:	b.ne	438958 <ferror@plt+0x35388>  // b.any
  4388a0:	cmp	x9, x4
  4388a4:	csel	w10, w10, w6, eq  // eq = none
  4388a8:	cbz	w15, 4388e4 <ferror@plt+0x35314>
  4388ac:	add	x0, sp, #0x250
  4388b0:	add	x8, sp, #0xf0
  4388b4:	ldp	x0, x1, [x0, #-216]
  4388b8:	stp	x0, x1, [sp, #208]
  4388bc:	ldr	x0, [sp, #392]
  4388c0:	mov	x1, x18
  4388c4:	str	x0, [sp, #224]
  4388c8:	add	x0, sp, #0xd0
  4388cc:	bl	43669c <ferror@plt+0x330cc>
  4388d0:	ldp	x4, x0, [sp, #240]
  4388d4:	stp	x4, x0, [sp, #376]
  4388d8:	ldr	x1, [sp, #384]
  4388dc:	ldr	x0, [sp, #256]
  4388e0:	str	x0, [sp, #392]
  4388e4:	cbnz	w12, 438960 <ferror@plt+0x35390>
  4388e8:	cbnz	w10, 438910 <ferror@plt+0x35340>
  4388ec:	mov	x2, x18
  4388f0:	mov	x0, x4
  4388f4:	bl	436940 <ferror@plt+0x33370>
  4388f8:	eor	w15, w15, #0x1
  4388fc:	cmp	w15, w0, uxtb
  438900:	b.eq	438910 <ferror@plt+0x35340>  // b.none
  438904:	orr	x0, x1, x4
  438908:	cmp	x0, #0x0
  43890c:	cset	w10, ne  // ne = any
  438910:	add	x0, sp, #0x250
  438914:	stp	x4, x1, [sp, #376]
  438918:	strb	w12, [sp, #392]
  43891c:	strb	w10, [sp, #393]
  438920:	ldp	x0, x1, [x0, #-216]
  438924:	stp	x0, x1, [x13, #8]
  438928:	ldr	x0, [sp, #392]
  43892c:	str	x0, [x13, #24]
  438930:	ldr	w0, [x19, #32]
  438934:	str	w0, [x13, #32]
  438938:	b	438464 <ferror@plt+0x34e94>
  43893c:	mov	w15, w12
  438940:	b	438790 <ferror@plt+0x351c0>
  438944:	mov	w12, w15
  438948:	mov	w15, #0x0                   	// #0
  43894c:	b	4387f0 <ferror@plt+0x35220>
  438950:	mov	w10, #0x0                   	// #0
  438954:	b	4387fc <ferror@plt+0x3522c>
  438958:	mov	w10, w6
  43895c:	b	4388a8 <ferror@plt+0x352d8>
  438960:	mov	w10, #0x0                   	// #0
  438964:	b	438910 <ferror@plt+0x35340>
  438968:	sub	x0, x19, #0x28
  43896c:	add	x2, sp, #0x200
  438970:	str	x0, [sp, #120]
  438974:	ldp	x0, x1, [x19, #-32]
  438978:	stp	x0, x1, [x2, #-232]
  43897c:	ldurb	w26, [x19, #-16]
  438980:	ldur	x0, [x19, #-16]
  438984:	str	x0, [sp, #296]
  438988:	ldp	x0, x1, [x19, #8]
  43898c:	str	w26, [sp, #104]
  438990:	ldurb	w7, [x19, #-15]
  438994:	ldr	w12, [x19, #32]
  438998:	ldp	x27, x25, [x19, #-32]
  43899c:	stp	x0, x1, [sp, #304]
  4389a0:	ldr	x0, [x19, #24]
  4389a4:	str	x0, [sp, #320]
  4389a8:	ldr	x24, [x28, #1208]
  4389ac:	ldp	x14, x15, [x19, #8]
  4389b0:	cbnz	w26, 438adc <ferror@plt+0x3550c>
  4389b4:	ldrb	w0, [x19, #24]
  4389b8:	str	w0, [sp, #100]
  4389bc:	cbnz	w0, 438ae8 <ferror@plt+0x35518>
  4389c0:	mov	x2, x24
  4389c4:	mov	x1, x25
  4389c8:	mov	x0, x27
  4389cc:	str	w7, [sp, #104]
  4389d0:	bl	436940 <ferror@plt+0x33370>
  4389d4:	tst	w0, #0xff
  4389d8:	ldr	w7, [sp, #104]
  4389dc:	b.ne	438ad4 <ferror@plt+0x35504>  // b.any
  4389e0:	add	x0, sp, #0x200
  4389e4:	stp	x27, x25, [sp, #280]
  4389e8:	add	x8, sp, #0xf0
  4389ec:	strb	wzr, [sp, #296]
  4389f0:	strb	w7, [sp, #297]
  4389f4:	ldp	x0, x1, [x0, #-232]
  4389f8:	stp	x0, x1, [sp, #208]
  4389fc:	ldr	x0, [sp, #296]
  438a00:	mov	x1, x24
  438a04:	str	x0, [sp, #224]
  438a08:	add	x0, sp, #0xd0
  438a0c:	bl	43669c <ferror@plt+0x330cc>
  438a10:	ldp	x10, x0, [sp, #240]
  438a14:	stp	x10, x0, [sp, #280]
  438a18:	ldr	x9, [sp, #256]
  438a1c:	str	x9, [sp, #296]
  438a20:	mov	x27, x10
  438a24:	and	w26, w9, #0xff
  438a28:	ubfx	w7, w9, #8, #8
  438a2c:	mov	x25, x0
  438a30:	mov	w0, #0x1                   	// #1
  438a34:	str	w0, [sp, #108]
  438a38:	mov	x2, x24
  438a3c:	mov	x1, x15
  438a40:	mov	x0, x14
  438a44:	str	w7, [sp, #104]
  438a48:	bl	436940 <ferror@plt+0x33370>
  438a4c:	tst	w0, #0xff
  438a50:	ldr	w7, [sp, #104]
  438a54:	b.ne	438af0 <ferror@plt+0x35520>  // b.any
  438a58:	ldr	w0, [sp, #108]
  438a5c:	add	x8, sp, #0xf0
  438a60:	stp	x14, x15, [sp, #304]
  438a64:	eor	w0, w0, #0x1
  438a68:	str	w0, [sp, #104]
  438a6c:	strb	wzr, [sp, #320]
  438a70:	ldp	x0, x1, [sp, #304]
  438a74:	stp	x0, x1, [sp, #208]
  438a78:	ldr	x0, [sp, #320]
  438a7c:	mov	x1, x24
  438a80:	str	w7, [sp, #152]
  438a84:	str	x0, [sp, #224]
  438a88:	add	x0, sp, #0xd0
  438a8c:	bl	43669c <ferror@plt+0x330cc>
  438a90:	str	wzr, [sp, #100]
  438a94:	ldp	x14, x0, [sp, #240]
  438a98:	stp	x14, x0, [sp, #304]
  438a9c:	ldr	w7, [sp, #152]
  438aa0:	ldr	x15, [sp, #312]
  438aa4:	ldr	x0, [sp, #256]
  438aa8:	str	x0, [sp, #320]
  438aac:	cbz	x14, 438afc <ferror@plt+0x3552c>
  438ab0:	sub	w2, w24, #0x41
  438ab4:	mov	x1, #0x1                   	// #1
  438ab8:	sub	x0, x24, #0x1
  438abc:	lsl	x1, x1, x2
  438ac0:	tst	x14, x1
  438ac4:	b.ne	438b94 <ferror@plt+0x355c4>  // b.any
  438ac8:	sub	x0, x0, #0x1
  438acc:	lsr	x1, x1, #1
  438ad0:	b	438ac0 <ferror@plt+0x354f0>
  438ad4:	str	wzr, [sp, #108]
  438ad8:	b	438a38 <ferror@plt+0x35468>
  438adc:	stp	w26, wzr, [sp, #100]
  438ae0:	str	wzr, [sp, #108]
  438ae4:	b	438aac <ferror@plt+0x354dc>
  438ae8:	str	wzr, [sp, #108]
  438aec:	b	438aac <ferror@plt+0x354dc>
  438af0:	ldr	w0, [sp, #108]
  438af4:	str	w0, [sp, #104]
  438af8:	b	438aac <ferror@plt+0x354dc>
  438afc:	cbz	x15, 438b2c <ferror@plt+0x3555c>
  438b00:	sub	x1, x24, #0x41
  438b04:	sub	x13, x24, #0x1
  438b08:	cmp	x24, #0x40
  438b0c:	csel	x0, x1, x13, hi  // hi = pmore
  438b10:	mov	x1, #0x1                   	// #1
  438b14:	lsl	x1, x1, x0
  438b18:	tst	x15, x1
  438b1c:	b.ne	438b94 <ferror@plt+0x355c4>  // b.any
  438b20:	sub	x0, x0, #0x1
  438b24:	lsr	x1, x1, #1
  438b28:	b	438b18 <ferror@plt+0x35548>
  438b2c:	ldr	w0, [x28, #28]
  438b30:	cbnz	w0, 438b58 <ferror@plt+0x35588>
  438b34:	mov	w2, w12
  438b38:	mov	x0, x28
  438b3c:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438b40:	mov	w3, #0x0                   	// #0
  438b44:	add	x4, x4, #0x223
  438b48:	mov	w1, #0x3                   	// #3
  438b4c:	str	w7, [sp, #96]
  438b50:	bl	435cf8 <ferror@plt+0x32728>
  438b54:	ldr	w7, [sp, #96]
  438b58:	strb	w26, [sp, #296]
  438b5c:	strb	w7, [sp, #297]
  438b60:	stp	x27, x25, [sp, #280]
  438b64:	ldr	x0, [sp, #296]
  438b68:	str	x0, [sp, #392]
  438b6c:	add	x0, sp, #0x250
  438b70:	stp	x27, x25, [sp, #376]
  438b74:	ldr	x2, [sp, #120]
  438b78:	strb	w26, [sp, #392]
  438b7c:	strb	w7, [sp, #393]
  438b80:	ldp	x0, x1, [x0, #-216]
  438b84:	stp	x0, x1, [x2, #8]
  438b88:	mov	x1, x2
  438b8c:	ldr	x0, [sp, #392]
  438b90:	b	438640 <ferror@plt+0x35070>
  438b94:	stp	x14, x15, [sp, #304]
  438b98:	sub	x13, x24, #0x1
  438b9c:	sub	x13, x13, x0
  438ba0:	ldp	x2, x3, [sp, #304]
  438ba4:	mov	w0, #0x1                   	// #1
  438ba8:	strb	w0, [sp, #320]
  438bac:	add	x8, sp, #0x160
  438bb0:	add	x0, sp, #0xf0
  438bb4:	str	x13, [sp, #152]
  438bb8:	ldr	x1, [sp, #320]
  438bbc:	str	w7, [sp, #160]
  438bc0:	stp	x2, x3, [sp, #240]
  438bc4:	mov	x2, x13
  438bc8:	str	x1, [sp, #256]
  438bcc:	mov	x1, x24
  438bd0:	bl	436a74 <ferror@plt+0x334a4>
  438bd4:	ldp	x26, x4, [sp, #352]
  438bd8:	mov	x18, x25
  438bdc:	ldr	w7, [sp, #160]
  438be0:	mov	x12, x27
  438be4:	ldr	x13, [sp, #152]
  438be8:	mov	x25, #0x0                   	// #0
  438bec:	mov	x27, #0x0                   	// #0
  438bf0:	mov	w15, #0x1                   	// #1
  438bf4:	ldrb	w5, [sp, #368]
  438bf8:	mov	x6, x24
  438bfc:	mov	x3, x26
  438c00:	mov	w2, w15
  438c04:	mov	x1, x18
  438c08:	mov	x0, x12
  438c0c:	str	x4, [sp, #152]
  438c10:	str	w7, [sp, #160]
  438c14:	str	x13, [sp, #168]
  438c18:	bl	436e90 <ferror@plt+0x338c0>
  438c1c:	ldr	w7, [sp, #160]
  438c20:	tst	w0, #0xff
  438c24:	add	x8, sp, #0xf0
  438c28:	ldr	x4, [sp, #152]
  438c2c:	ldr	x13, [sp, #168]
  438c30:	b.eq	438cb8 <ferror@plt+0x356e8>  // b.none
  438c34:	add	x0, sp, #0x200
  438c38:	stp	x12, x18, [sp, #280]
  438c3c:	add	x2, sp, #0xb0
  438c40:	strb	w15, [sp, #296]
  438c44:	mov	w3, #0x5                   	// #5
  438c48:	strb	w7, [sp, #297]
  438c4c:	stp	x26, x4, [sp, #352]
  438c50:	ldp	x0, x1, [x0, #-232]
  438c54:	stp	x0, x1, [sp, #208]
  438c58:	ldr	x0, [sp, #296]
  438c5c:	str	x0, [sp, #224]
  438c60:	ldp	x0, x1, [sp, #352]
  438c64:	stp	x0, x1, [sp, #176]
  438c68:	ldr	x0, [sp, #368]
  438c6c:	add	x1, sp, #0xd0
  438c70:	str	x13, [sp, #160]
  438c74:	str	x0, [sp, #192]
  438c78:	mov	x0, x28
  438c7c:	bl	436bb4 <ferror@plt+0x335e4>
  438c80:	ldp	x4, x13, [sp, #152]
  438c84:	ldp	x12, x0, [sp, #240]
  438c88:	stp	x12, x0, [sp, #280]
  438c8c:	ldr	x9, [sp, #256]
  438c90:	str	x9, [sp, #296]
  438c94:	cmp	x13, #0x3f
  438c98:	mov	x18, x0
  438c9c:	and	w15, w9, #0xff
  438ca0:	ubfx	w7, w9, #8, #8
  438ca4:	b.ls	438cd0 <ferror@plt+0x35700>  // b.plast
  438ca8:	sub	w0, w13, #0x40
  438cac:	mov	x1, #0x1                   	// #1
  438cb0:	lsl	x0, x1, x0
  438cb4:	orr	x27, x27, x0
  438cb8:	sub	x13, x13, #0x1
  438cbc:	cmn	x13, #0x1
  438cc0:	b.eq	438ce0 <ferror@plt+0x35710>  // b.none
  438cc4:	extr	x4, x26, x4, #1
  438cc8:	lsr	x26, x26, #1
  438ccc:	b	438bf4 <ferror@plt+0x35624>
  438cd0:	mov	x0, #0x1                   	// #1
  438cd4:	lsl	x0, x0, x13
  438cd8:	orr	x25, x25, x0
  438cdc:	b	438cb8 <ferror@plt+0x356e8>
  438ce0:	ldp	w0, w26, [sp, #96]
  438ce4:	cmp	w0, #0x7
  438ce8:	b.ne	438d9c <ferror@plt+0x357cc>  // b.any
  438cec:	cbnz	w26, 438d94 <ferror@plt+0x357c4>
  438cf0:	ldr	w0, [sp, #104]
  438cf4:	cbz	w0, 438d8c <ferror@plt+0x357bc>
  438cf8:	add	x0, sp, #0x200
  438cfc:	stp	x27, x25, [sp, #328]
  438d00:	add	x8, sp, #0xf0
  438d04:	strh	wzr, [sp, #344]
  438d08:	ldp	x0, x1, [x0, #-184]
  438d0c:	stp	x0, x1, [sp, #208]
  438d10:	ldr	x0, [sp, #344]
  438d14:	mov	x1, x24
  438d18:	str	x0, [sp, #224]
  438d1c:	add	x0, sp, #0xd0
  438d20:	bl	43669c <ferror@plt+0x330cc>
  438d24:	ldp	x10, x0, [sp, #240]
  438d28:	stp	x10, x0, [sp, #328]
  438d2c:	ldr	x5, [sp, #256]
  438d30:	str	x5, [sp, #344]
  438d34:	mov	x27, x10
  438d38:	mov	x25, x0
  438d3c:	and	w26, w5, #0xff
  438d40:	mov	x1, x25
  438d44:	mov	x2, x24
  438d48:	mov	x0, x27
  438d4c:	bl	436940 <ferror@plt+0x33370>
  438d50:	ldr	w1, [sp, #104]
  438d54:	eor	w1, w1, #0x1
  438d58:	and	w1, w1, #0xff
  438d5c:	cmp	w1, w0, uxtb
  438d60:	b.eq	438d74 <ferror@plt+0x357a4>  // b.none
  438d64:	orr	x0, x27, x25
  438d68:	cmp	x0, #0x0
  438d6c:	cset	w0, ne  // ne = any
  438d70:	str	w0, [sp, #100]
  438d74:	ldr	w7, [sp, #100]
  438d78:	strb	w26, [sp, #344]
  438d7c:	strb	w7, [sp, #345]
  438d80:	stp	x27, x25, [sp, #328]
  438d84:	ldr	x0, [sp, #344]
  438d88:	b	438b68 <ferror@plt+0x35598>
  438d8c:	ldr	w26, [sp, #104]
  438d90:	b	438d40 <ferror@plt+0x35770>
  438d94:	mov	w7, #0x0                   	// #0
  438d98:	b	438d78 <ferror@plt+0x357a8>
  438d9c:	ldr	w0, [sp, #108]
  438da0:	cbz	w0, 438e10 <ferror@plt+0x35840>
  438da4:	add	x0, sp, #0x200
  438da8:	stp	x12, x18, [sp, #280]
  438dac:	add	x8, sp, #0xf0
  438db0:	strb	w26, [sp, #296]
  438db4:	strb	wzr, [sp, #297]
  438db8:	ldp	x0, x1, [x0, #-232]
  438dbc:	stp	x0, x1, [sp, #208]
  438dc0:	ldr	x0, [sp, #296]
  438dc4:	mov	x1, x24
  438dc8:	str	x0, [sp, #224]
  438dcc:	add	x0, sp, #0xd0
  438dd0:	bl	43669c <ferror@plt+0x330cc>
  438dd4:	ldp	x12, x0, [sp, #240]
  438dd8:	stp	x12, x0, [sp, #280]
  438ddc:	ldr	x9, [sp, #256]
  438de0:	str	x9, [sp, #296]
  438de4:	mov	x18, x0
  438de8:	and	w26, w9, #0xff
  438dec:	ubfx	w7, w9, #8, #8
  438df0:	strb	w26, [sp, #296]
  438df4:	mov	x25, x18
  438df8:	strb	w7, [sp, #297]
  438dfc:	mov	x27, x12
  438e00:	stp	x12, x18, [sp, #280]
  438e04:	ldr	x0, [sp, #296]
  438e08:	str	x0, [sp, #392]
  438e0c:	b	438b6c <ferror@plt+0x3559c>
  438e10:	mov	w7, #0x0                   	// #0
  438e14:	b	438df0 <ferror@plt+0x35820>
  438e18:	ldp	x1, x0, [x19, #-32]
  438e1c:	sub	x24, x19, #0x28
  438e20:	orr	x0, x0, x1
  438e24:	cbz	x0, 439094 <ferror@plt+0x35ac4>
  438e28:	ldr	w0, [x28, #28]
  438e2c:	sub	w0, w0, #0x1
  438e30:	str	w0, [x28, #28]
  438e34:	mov	w0, #0x1                   	// #1
  438e38:	and	x0, x0, #0xff
  438e3c:	stp	xzr, x0, [x24, #8]
  438e40:	ldr	w0, [x19, #32]
  438e44:	strb	wzr, [x24, #24]
  438e48:	strb	wzr, [x24, #25]
  438e4c:	str	w0, [x24, #32]
  438e50:	mov	x19, x24
  438e54:	b	43824c <ferror@plt+0x34c7c>
  438e58:	ldp	x1, x0, [x19, #-32]
  438e5c:	sub	x24, x19, #0x28
  438e60:	orr	x0, x0, x1
  438e64:	cbnz	x0, 439094 <ferror@plt+0x35ac4>
  438e68:	ldr	w0, [x28, #28]
  438e6c:	sub	w0, w0, #0x1
  438e70:	str	w0, [x28, #28]
  438e74:	mov	w0, #0x0                   	// #0
  438e78:	b	438e38 <ferror@plt+0x35868>
  438e7c:	cmp	w20, #0x15
  438e80:	b.eq	438ea8 <ferror@plt+0x358d8>  // b.none
  438e84:	ldr	x0, [x19]
  438e88:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438e8c:	add	x4, x4, #0x23b
  438e90:	mov	w3, #0x0                   	// #0
  438e94:	ldr	w2, [x0]
  438e98:	mov	x0, x28
  438e9c:	mov	w1, #0x3                   	// #3
  438ea0:	bl	435cf8 <ferror@plt+0x32728>
  438ea4:	b	438148 <ferror@plt+0x34b78>
  438ea8:	ldr	x1, [x19, #24]
  438eac:	sub	x0, x19, #0x28
  438eb0:	stur	x1, [x19, #-16]
  438eb4:	ldr	w1, [x19, #32]
  438eb8:	ldp	x2, x3, [x19, #8]
  438ebc:	stp	x2, x3, [x19, #-32]
  438ec0:	stur	w1, [x19, #-8]
  438ec4:	mov	x19, x0
  438ec8:	b	437bb0 <ferror@plt+0x345e0>
  438ecc:	ldp	x1, x0, [x19, #-72]
  438ed0:	sub	x24, x19, #0x50
  438ed4:	add	x4, x24, #0x8
  438ed8:	orr	x0, x0, x1
  438edc:	sub	x1, x19, #0x28
  438ee0:	cbz	x0, 438f1c <ferror@plt+0x3594c>
  438ee4:	ldr	w0, [x28, #28]
  438ee8:	ldp	x2, x3, [x19, #-32]
  438eec:	sub	w0, w0, #0x1
  438ef0:	str	w0, [x28, #28]
  438ef4:	stp	x2, x3, [x19, #-72]
  438ef8:	ldr	x0, [x1, #24]
  438efc:	str	x0, [x4, #16]
  438f00:	ldur	w0, [x19, #-8]
  438f04:	stur	w0, [x19, #-48]
  438f08:	ldrb	w0, [x1, #24]
  438f0c:	cbnz	w0, 438f14 <ferror@plt+0x35944>
  438f10:	ldrb	w0, [x19, #24]
  438f14:	strb	w0, [x24, #24]
  438f18:	b	438e50 <ferror@plt+0x35880>
  438f1c:	ldp	x2, x3, [x19, #8]
  438f20:	stp	x2, x3, [x19, #-72]
  438f24:	ldr	x0, [x19, #24]
  438f28:	str	x0, [x4, #16]
  438f2c:	ldr	w0, [x19, #32]
  438f30:	b	438f04 <ferror@plt+0x35934>
  438f34:	sub	w0, w20, #0x12
  438f38:	cmp	w0, #0x1
  438f3c:	b.ls	43902c <ferror@plt+0x35a5c>  // b.plast
  438f40:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438f44:	add	x2, x2, #0x255
  438f48:	mov	x0, x28
  438f4c:	mov	w1, #0x3                   	// #3
  438f50:	bl	435b3c <ferror@plt+0x3256c>
  438f54:	b	438148 <ferror@plt+0x34b78>
  438f58:	cmp	w20, #0x15
  438f5c:	b.ne	43902c <ferror@plt+0x35a5c>  // b.any
  438f60:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438f64:	add	x2, x2, #0x29b
  438f68:	b	438f48 <ferror@plt+0x35978>
  438f6c:	sub	w1, w20, #0xf
  438f70:	cmp	w1, #0x6
  438f74:	b.hi	438fb8 <ferror@plt+0x359e8>  // b.pmore
  438f78:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  438f7c:	add	x0, x0, #0x9a0
  438f80:	ldrh	w0, [x0, w1, uxtw #1]
  438f84:	adr	x1, 438f90 <ferror@plt+0x359c0>
  438f88:	add	x0, x1, w0, sxth #2
  438f8c:	br	x0
  438f90:	ldp	x1, x0, [x19, #8]
  438f94:	orr	x0, x0, x1
  438f98:	cbz	x0, 438fb8 <ferror@plt+0x359e8>
  438f9c:	ldr	w0, [x28, #28]
  438fa0:	add	w0, w0, #0x1
  438fa4:	str	w0, [x28, #28]
  438fa8:	b	438fb8 <ferror@plt+0x359e8>
  438fac:	ldp	x1, x0, [x19, #8]
  438fb0:	orr	x0, x0, x1
  438fb4:	cbz	x0, 438f9c <ferror@plt+0x359cc>
  438fb8:	ldr	x0, [x28, #1104]
  438fbc:	add	x19, x19, #0x28
  438fc0:	cmp	x0, x19
  438fc4:	b.ne	438fd4 <ferror@plt+0x35a04>  // b.any
  438fc8:	mov	x0, x28
  438fcc:	bl	437b04 <ferror@plt+0x34534>
  438fd0:	mov	x19, x0
  438fd4:	mov	w21, #0x1                   	// #1
  438fd8:	str	x23, [x19]
  438fdc:	stp	w22, w20, [x19, #32]
  438fe0:	b	437bb0 <ferror@plt+0x345e0>
  438fe4:	ldr	w0, [x19, #36]
  438fe8:	cmp	w0, #0x11
  438fec:	b.eq	438ffc <ferror@plt+0x35a2c>  // b.none
  438ff0:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  438ff4:	add	x4, x4, #0x2b5
  438ff8:	b	43818c <ferror@plt+0x34bbc>
  438ffc:	ldp	x2, x1, [x19, #-32]
  439000:	ldr	w0, [x28, #28]
  439004:	orr	x1, x1, x2
  439008:	sub	w2, w0, #0x1
  43900c:	cmp	x1, #0x0
  439010:	csinc	w0, w2, w0, eq  // eq = none
  439014:	b	438fa4 <ferror@plt+0x359d4>
  439018:	ldp	x1, x0, [x19, #8]
  43901c:	orr	x0, x0, x1
  439020:	cmp	x0, #0x0
  439024:	cset	w21, ne  // ne = any
  439028:	b	437c70 <ferror@plt+0x346a0>
  43902c:	cmp	w20, #0x16
  439030:	b.ne	438f6c <ferror@plt+0x3599c>  // b.any
  439034:	ldr	x0, [x28, #432]
  439038:	cbz	x0, 439054 <ferror@plt+0x35a84>
  43903c:	ldp	w1, w0, [sp, #128]
  439040:	eor	w0, w0, #0x1
  439044:	cmp	w1, #0x3
  439048:	csinc	w0, w0, wzr, eq  // eq = none
  43904c:	cbz	w0, 439054 <ferror@plt+0x35a84>
  439050:	str	xzr, [x28, #432]
  439054:	ldr	x0, [x28, #1096]
  439058:	cmp	x0, x19
  43905c:	b.eq	439018 <ferror@plt+0x35a48>  // b.none
  439060:	ldr	w1, [sp, #136]
  439064:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  439068:	adrp	x5, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43906c:	add	x0, x0, #0xedd
  439070:	cmp	w1, #0x0
  439074:	add	x5, x5, #0xa5d
  439078:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43907c:	ldr	w2, [x19, #32]
  439080:	add	x4, x4, #0x2d0
  439084:	csel	x5, x5, x0, ne  // ne = any
  439088:	mov	w3, #0x0                   	// #0
  43908c:	mov	w1, #0x4                   	// #4
  439090:	b	437c20 <ferror@plt+0x34650>
  439094:	ldp	x1, x0, [x19, #8]
  439098:	orr	x0, x0, x1
  43909c:	cmp	x0, #0x0
  4390a0:	cset	w0, ne  // ne = any
  4390a4:	b	438e38 <ferror@plt+0x35868>
  4390a8:	ldrb	w4, [x0, #16]
  4390ac:	ldp	x2, x3, [x0]
  4390b0:	cbnz	w4, 4390e4 <ferror@plt+0x35b14>
  4390b4:	cmp	x1, #0x40
  4390b8:	b.ls	4390fc <ferror@plt+0x35b2c>  // b.plast
  4390bc:	sub	x1, x1, #0x40
  4390c0:	cmp	x1, #0x3f
  4390c4:	b.hi	4390e4 <ferror@plt+0x35b14>  // b.pmore
  4390c8:	sub	w4, w1, #0x1
  4390cc:	lsr	x4, x2, x4
  4390d0:	tbz	w4, #0, 4390e4 <ferror@plt+0x35b14>
  4390d4:	neg	w1, w1
  4390d8:	mov	x4, #0xffffffffffffffff    	// #-1
  4390dc:	lsr	x1, x4, x1
  4390e0:	orn	x2, x2, x1
  4390e4:	stp	x2, x3, [x0]
  4390e8:	ldp	x2, x3, [x0]
  4390ec:	stp	x2, x3, [x8]
  4390f0:	ldr	x0, [x0, #16]
  4390f4:	str	x0, [x8, #16]
  4390f8:	ret
  4390fc:	sub	w4, w1, #0x1
  439100:	lsr	x4, x3, x4
  439104:	tbz	w4, #0, 4390e4 <ferror@plt+0x35b14>
  439108:	cmp	x1, #0x40
  43910c:	mov	x2, #0xffffffffffffffff    	// #-1
  439110:	b.eq	4390e4 <ferror@plt+0x35b14>  // b.none
  439114:	neg	w1, w1
  439118:	lsr	x1, x2, x1
  43911c:	orn	x3, x3, x1
  439120:	b	4390e4 <ferror@plt+0x35b14>
  439124:	ldr	x1, [x0, #24]
  439128:	ldr	x0, [x0, #8]
  43912c:	cbz	x0, 439138 <ferror@plt+0x35b68>
  439130:	ldr	x0, [x1]
  439134:	b	45b5a8 <ferror@plt+0x57fd8>
  439138:	ldr	x0, [x1, #8]
  43913c:	b	439134 <ferror@plt+0x35b64>
  439140:	stp	x29, x30, [sp, #-32]!
  439144:	mov	x29, sp
  439148:	str	x19, [sp, #16]
  43914c:	mov	x19, x0
  439150:	ldr	x0, [x0, #48]
  439154:	bl	4032a0 <free@plt>
  439158:	ldr	x0, [x19]
  43915c:	bl	4032a0 <free@plt>
  439160:	ldr	x0, [x19, #8]
  439164:	bl	4032a0 <free@plt>
  439168:	mov	x0, x19
  43916c:	ldr	x19, [sp, #16]
  439170:	ldp	x29, x30, [sp], #32
  439174:	b	4032a0 <free@plt>
  439178:	stp	x29, x30, [sp, #-32]!
  43917c:	mov	x29, sp
  439180:	ldr	x0, [x0]
  439184:	stp	x19, x20, [sp, #16]
  439188:	mov	x19, x1
  43918c:	ldr	x1, [x0, #8]
  439190:	cbz	x1, 4391e8 <ferror@plt+0x35c18>
  439194:	ldr	x20, [x0, #24]
  439198:	ldrb	w0, [x20, #210]
  43919c:	cbnz	w0, 4391e8 <ferror@plt+0x35c18>
  4391a0:	ldr	x0, [x20, #56]
  4391a4:	cbnz	x0, 4391e8 <ferror@plt+0x35c18>
  4391a8:	ldrh	w0, [x20, #208]
  4391ac:	cmp	w0, #0x1
  4391b0:	b.ne	4391e8 <ferror@plt+0x35c18>  // b.any
  4391b4:	ldrb	w0, [x20, #212]
  4391b8:	cbnz	w0, 4391e8 <ferror@plt+0x35c18>
  4391bc:	ldr	x0, [x19]
  4391c0:	cbnz	x0, 4391d4 <ferror@plt+0x35c04>
  4391c4:	ldr	x0, [x19, #8]
  4391c8:	mov	x1, #0x8                   	// #8
  4391cc:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  4391d0:	stp	x0, xzr, [x19]
  4391d4:	ldp	x1, x0, [x19]
  4391d8:	add	x2, x0, #0x1
  4391dc:	str	x2, [x19, #8]
  4391e0:	ldr	x2, [x20, #8]
  4391e4:	str	x2, [x1, x0, lsl #3]
  4391e8:	mov	w0, #0x1                   	// #1
  4391ec:	ldp	x19, x20, [sp, #16]
  4391f0:	ldp	x29, x30, [sp], #32
  4391f4:	ret
  4391f8:	stp	x29, x30, [sp, #-16]!
  4391fc:	mov	x29, sp
  439200:	bl	45a8bc <ferror@plt+0x572ec>
  439204:	cmp	w0, #0x0
  439208:	cset	w0, eq  // eq = none
  43920c:	ldp	x29, x30, [sp], #16
  439210:	ret
  439214:	stp	x29, x30, [sp, #-16]!
  439218:	mov	x29, sp
  43921c:	ldr	x2, [x0, #24]
  439220:	ldr	x0, [x0, #8]
  439224:	cbz	x0, 439240 <ferror@plt+0x35c70>
  439228:	ldr	x0, [x2]
  43922c:	bl	45a8bc <ferror@plt+0x572ec>
  439230:	cmp	w0, #0x0
  439234:	cset	w0, eq  // eq = none
  439238:	ldp	x29, x30, [sp], #16
  43923c:	ret
  439240:	ldr	x0, [x2, #8]
  439244:	b	43922c <ferror@plt+0x35c5c>
  439248:	stp	x29, x30, [sp, #-64]!
  43924c:	mov	x29, sp
  439250:	stp	x19, x20, [sp, #16]
  439254:	ldr	w19, [x1, #16]
  439258:	stp	x21, x22, [sp, #32]
  43925c:	mov	x22, x1
  439260:	str	x23, [sp, #48]
  439264:	mov	x23, x0
  439268:	bl	402d50 <strlen@plt>
  43926c:	mov	x21, x0
  439270:	add	x0, x19, #0x2
  439274:	add	x0, x0, x21
  439278:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43927c:	ldr	x1, [x22, #8]
  439280:	mov	x20, x0
  439284:	mov	x2, x19
  439288:	bl	402cd0 <memcpy@plt>
  43928c:	cbz	x19, 4392ac <ferror@plt+0x35cdc>
  439290:	add	x0, x20, x19
  439294:	ldurb	w0, [x0, #-1]
  439298:	cmp	w0, #0x2f
  43929c:	b.eq	4392ac <ferror@plt+0x35cdc>  // b.none
  4392a0:	mov	w0, #0x2f                  	// #47
  4392a4:	strb	w0, [x20, x19]
  4392a8:	add	x19, x19, #0x1
  4392ac:	add	x2, x21, #0x1
  4392b0:	mov	x1, x23
  4392b4:	add	x0, x20, x19
  4392b8:	bl	402cd0 <memcpy@plt>
  4392bc:	mov	x0, x20
  4392c0:	ldp	x19, x20, [sp, #16]
  4392c4:	ldp	x21, x22, [sp, #32]
  4392c8:	ldr	x23, [sp, #48]
  4392cc:	ldp	x29, x30, [sp], #64
  4392d0:	ret
  4392d4:	stp	x29, x30, [sp, #-80]!
  4392d8:	mov	x29, sp
  4392dc:	stp	x19, x20, [sp, #16]
  4392e0:	stp	x21, x22, [sp, #32]
  4392e4:	mov	w21, w0
  4392e8:	mov	x0, #0x15                  	// #21
  4392ec:	stp	x23, x24, [sp, #48]
  4392f0:	mov	x23, x1
  4392f4:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4392f8:	str	x25, [sp, #64]
  4392fc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439300:	add	x24, x24, #0x228
  439304:	mov	x20, x0
  439308:	and	x0, x21, #0xff
  43930c:	mov	x19, x20
  439310:	ldrh	w0, [x24, x0, lsl #1]
  439314:	tst	w0, #0xc00
  439318:	b.ne	439378 <ferror@plt+0x35da8>  // b.any
  43931c:	mov	w22, #0x14                  	// #20
  439320:	strb	w21, [x19], #1
  439324:	mov	x0, x23
  439328:	bl	403100 <getc_unlocked@plt>
  43932c:	mov	w21, w0
  439330:	cmn	w0, #0x1
  439334:	b.eq	439378 <ferror@plt+0x35da8>  // b.none
  439338:	and	x0, x0, #0xff
  43933c:	ldrh	w0, [x24, x0, lsl #1]
  439340:	tst	w0, #0xc00
  439344:	b.ne	439378 <ferror@plt+0x35da8>  // b.any
  439348:	sub	x25, x19, x20
  43934c:	cmp	x25, w22, sxtw
  439350:	b.ne	439370 <ferror@plt+0x35da0>  // b.any
  439354:	lsl	w22, w22, #1
  439358:	mov	x0, x20
  43935c:	add	w1, w22, #0x1
  439360:	sxtw	x1, w1
  439364:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  439368:	mov	x20, x0
  43936c:	add	x19, x0, x25
  439370:	strb	w21, [x19], #1
  439374:	b	439324 <ferror@plt+0x35d54>
  439378:	strb	wzr, [x19]
  43937c:	mov	x1, x23
  439380:	mov	w0, w21
  439384:	bl	4032b0 <ungetc@plt>
  439388:	mov	x0, x20
  43938c:	ldp	x19, x20, [sp, #16]
  439390:	ldp	x21, x22, [sp, #32]
  439394:	ldp	x23, x24, [sp, #48]
  439398:	ldr	x25, [sp, #64]
  43939c:	ldp	x29, x30, [sp], #80
  4393a0:	ret
  4393a4:	stp	x29, x30, [sp, #-80]!
  4393a8:	mov	x29, sp
  4393ac:	stp	x19, x20, [sp, #16]
  4393b0:	mov	x20, x0
  4393b4:	ldr	w19, [x0, #16]
  4393b8:	stp	x21, x22, [sp, #32]
  4393bc:	add	x0, x19, #0x1b
  4393c0:	ldr	x1, [x20, #8]
  4393c4:	and	x0, x0, #0x1fffffff0
  4393c8:	stp	x23, x24, [sp, #48]
  4393cc:	mov	x2, x19
  4393d0:	stp	x25, x26, [sp, #64]
  4393d4:	sub	sp, sp, x0
  4393d8:	mov	x21, sp
  4393dc:	mov	x0, x21
  4393e0:	bl	402cd0 <memcpy@plt>
  4393e4:	cbz	x19, 439404 <ferror@plt+0x35e34>
  4393e8:	add	x0, x21, x19
  4393ec:	ldurb	w0, [x0, #-1]
  4393f0:	cmp	w0, #0x2f
  4393f4:	b.eq	439404 <ferror@plt+0x35e34>  // b.none
  4393f8:	mov	w0, #0x2f                  	// #47
  4393fc:	strb	w0, [x21, x19]
  439400:	add	x19, x19, #0x1
  439404:	add	x0, x21, x19
  439408:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43940c:	add	x1, x1, #0x3f5
  439410:	bl	403360 <strcpy@plt>
  439414:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  439418:	add	x1, x1, #0xc1a
  43941c:	mov	x0, x21
  439420:	bl	45a9c0 <ferror@plt+0x573f0>
  439424:	mov	x21, x0
  439428:	mov	x0, #0x48                  	// #72
  43942c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439430:	str	x0, [x20, #32]
  439434:	mov	x19, #0x0                   	// #0
  439438:	cbnz	x21, 43951c <ferror@plt+0x35f4c>
  43943c:	ldr	x0, [x20, #32]
  439440:	str	xzr, [x0, x19, lsl #3]
  439444:	mov	sp, x29
  439448:	ldp	x19, x20, [sp, #16]
  43944c:	ldp	x21, x22, [sp, #32]
  439450:	ldp	x23, x24, [sp, #48]
  439454:	ldp	x25, x26, [sp, #64]
  439458:	ldp	x29, x30, [sp], #80
  43945c:	ret
  439460:	mov	x19, x25
  439464:	mov	x0, x21
  439468:	bl	403100 <getc_unlocked@plt>
  43946c:	mov	w22, w0
  439470:	cmn	w0, #0x1
  439474:	b.eq	439544 <ferror@plt+0x35f74>  // b.none
  439478:	and	x0, x0, #0xff
  43947c:	ldrh	w0, [x24, x0, lsl #1]
  439480:	tst	w0, #0xc00
  439484:	b.ne	439464 <ferror@plt+0x35e94>  // b.any
  439488:	add	x25, x19, #0x2
  43948c:	cmp	x25, x23
  439490:	b.ls	4394a8 <ferror@plt+0x35ed8>  // b.plast
  439494:	ldr	x0, [x20, #32]
  439498:	add	x23, x23, #0x8
  43949c:	lsl	x1, x23, #3
  4394a0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4394a4:	str	x0, [x20, #32]
  4394a8:	ldr	x26, [x20, #32]
  4394ac:	lsl	x19, x19, #3
  4394b0:	mov	x1, x21
  4394b4:	mov	w0, w22
  4394b8:	bl	4392d4 <ferror@plt+0x35d04>
  4394bc:	str	x0, [x26, x19]
  4394c0:	mov	x0, x21
  4394c4:	bl	403100 <getc_unlocked@plt>
  4394c8:	cmn	w0, #0x1
  4394cc:	b.eq	4394dc <ferror@plt+0x35f0c>  // b.none
  4394d0:	and	x1, x0, #0xff
  4394d4:	ldrh	w1, [x24, x1, lsl #1]
  4394d8:	tbnz	w1, #0, 4394c0 <ferror@plt+0x35ef0>
  4394dc:	mov	x1, x21
  4394e0:	bl	4392d4 <ferror@plt+0x35d04>
  4394e4:	ldrb	w1, [x0]
  4394e8:	mov	x22, x0
  4394ec:	add	x19, x19, #0x8
  4394f0:	cmp	w1, #0x2f
  4394f4:	ldr	x26, [x20, #32]
  4394f8:	b.ne	43952c <ferror@plt+0x35f5c>  // b.any
  4394fc:	str	x0, [x26, x19]
  439500:	mov	x0, x21
  439504:	bl	403100 <getc_unlocked@plt>
  439508:	cmp	w0, #0xa
  43950c:	b.eq	439460 <ferror@plt+0x35e90>  // b.none
  439510:	cmn	w0, #0x1
  439514:	b.ne	439500 <ferror@plt+0x35f30>  // b.any
  439518:	b	439460 <ferror@plt+0x35e90>
  43951c:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  439520:	mov	x23, #0x9                   	// #9
  439524:	add	x24, x24, #0x228
  439528:	b	439464 <ferror@plt+0x35e94>
  43952c:	mov	x1, x20
  439530:	bl	439248 <ferror@plt+0x35c78>
  439534:	str	x0, [x26, x19]
  439538:	mov	x0, x22
  43953c:	bl	4032a0 <free@plt>
  439540:	b	439500 <ferror@plt+0x35f30>
  439544:	mov	x0, x21
  439548:	bl	402ee0 <fclose@plt>
  43954c:	b	43943c <ferror@plt+0x35e6c>
  439550:	ldr	x0, [x0]
  439554:	ldr	x1, [x1]
  439558:	b	403220 <strcmp@plt>
  43955c:	stp	x29, x30, [sp, #-32]!
  439560:	mov	x29, sp
  439564:	str	x19, [sp, #16]
  439568:	mov	x19, x0
  43956c:	ldr	x0, [x0, #8]
  439570:	ldrb	w1, [x0]
  439574:	cbnz	w1, 4395b8 <ferror@plt+0x35fe8>
  439578:	str	wzr, [x19, #200]
  43957c:	ldr	w0, [x19, #200]
  439580:	cmn	w0, #0x1
  439584:	b.eq	4395fc <ferror@plt+0x3602c>  // b.none
  439588:	add	x1, x19, #0x48
  43958c:	bl	476488 <_obstack_memory_used@@Base+0x1a098>
  439590:	cbnz	w0, 4395d8 <ferror@plt+0x36008>
  439594:	ldr	w0, [x19, #88]
  439598:	and	w0, w0, #0xf000
  43959c:	cmp	w0, #0x4, lsl #12
  4395a0:	b.eq	4395cc <ferror@plt+0x35ffc>  // b.none
  4395a4:	mov	w0, #0x1                   	// #1
  4395a8:	str	wzr, [x19, #204]
  4395ac:	ldr	x19, [sp, #16]
  4395b0:	ldp	x29, x30, [sp], #32
  4395b4:	ret
  4395b8:	mov	w2, #0x1b6                 	// #438
  4395bc:	mov	w1, #0x100                 	// #256
  4395c0:	bl	402f50 <open@plt>
  4395c4:	str	w0, [x19, #200]
  4395c8:	b	43957c <ferror@plt+0x35fac>
  4395cc:	bl	4034e0 <__errno_location@plt>
  4395d0:	mov	w1, #0x2                   	// #2
  4395d4:	str	w1, [x0]
  4395d8:	ldr	w0, [x19, #200]
  4395dc:	bl	403120 <close@plt>
  4395e0:	mov	w0, #0xffffffff            	// #-1
  4395e4:	str	w0, [x19, #200]
  4395e8:	bl	4034e0 <__errno_location@plt>
  4395ec:	ldr	w0, [x0]
  4395f0:	str	w0, [x19, #204]
  4395f4:	mov	w0, #0x0                   	// #0
  4395f8:	b	4395ac <ferror@plt+0x35fdc>
  4395fc:	bl	4034e0 <__errno_location@plt>
  439600:	ldr	w1, [x0]
  439604:	cmp	w1, #0x14
  439608:	b.ne	4395e8 <ferror@plt+0x36018>  // b.any
  43960c:	mov	w1, #0x2                   	// #2
  439610:	str	w1, [x0]
  439614:	b	4395e8 <ferror@plt+0x36018>
  439618:	stp	x29, x30, [sp, #-80]!
  43961c:	mov	x29, sp
  439620:	stp	x19, x20, [sp, #16]
  439624:	mov	x20, x0
  439628:	mov	x19, x1
  43962c:	stp	x21, x22, [sp, #32]
  439630:	mov	x0, x1
  439634:	mov	x22, x2
  439638:	stp	x23, x24, [sp, #48]
  43963c:	stp	x25, x26, [sp, #64]
  439640:	ldr	x24, [x1, #8]
  439644:	str	x2, [x1, #8]
  439648:	bl	43955c <ferror@plt+0x35f8c>
  43964c:	ands	w21, w0, #0xff
  439650:	b.eq	4396dc <ferror@plt+0x3610c>  // b.none
  439654:	ldr	w2, [x19, #200]
  439658:	mov	x1, x22
  43965c:	ldr	x3, [x20, #968]
  439660:	mov	x0, x20
  439664:	blr	x3
  439668:	and	w21, w0, #0x1
  43966c:	mov	w25, w21
  439670:	tbnz	w0, #0, 439684 <ferror@plt+0x360b4>
  439674:	ldr	w0, [x19, #200]
  439678:	bl	403120 <close@plt>
  43967c:	mov	w0, #0xffffffff            	// #-1
  439680:	str	w0, [x19, #200]
  439684:	ldrb	w0, [x20, #1131]
  439688:	cbz	w0, 4396dc <ferror@plt+0x3610c>
  43968c:	mov	w23, #0x1                   	// #1
  439690:	adrp	x26, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  439694:	ldr	x1, [x20, #40]
  439698:	ldr	x0, [x26, #1264]
  43969c:	ldr	w1, [x1, #48]
  4396a0:	cmp	w1, w23
  4396a4:	b.ls	4396bc <ferror@plt+0x360ec>  // b.plast
  4396a8:	mov	x1, x0
  4396ac:	add	w23, w23, #0x1
  4396b0:	mov	w0, #0x2e                  	// #46
  4396b4:	bl	402eb0 <putc_unlocked@plt>
  4396b8:	b	439694 <ferror@plt+0x360c4>
  4396bc:	cmp	w25, #0x0
  4396c0:	mov	w1, #0x78                  	// #120
  4396c4:	mov	w2, #0x21                  	// #33
  4396c8:	mov	x3, x22
  4396cc:	csel	w2, w2, w1, ne  // ne = any
  4396d0:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4396d4:	add	x1, x1, #0x2e7
  4396d8:	bl	403590 <fprintf@plt>
  4396dc:	mov	w0, w21
  4396e0:	ldp	x21, x22, [sp, #32]
  4396e4:	ldp	x25, x26, [sp, #64]
  4396e8:	str	x24, [x19, #8]
  4396ec:	ldp	x19, x20, [sp, #16]
  4396f0:	ldp	x23, x24, [sp, #48]
  4396f4:	ldp	x29, x30, [sp], #80
  4396f8:	ret
  4396fc:	stp	x29, x30, [sp, #-64]!
  439700:	mov	x29, sp
  439704:	stp	x19, x20, [sp, #16]
  439708:	mov	x19, x0
  43970c:	mov	x20, x1
  439710:	ldr	x0, [x0, #40]
  439714:	stp	x21, x22, [sp, #32]
  439718:	mov	w21, w3
  43971c:	stp	x23, x24, [sp, #48]
  439720:	mov	w23, w2
  439724:	ldr	w0, [x0, #60]
  439728:	cmp	w0, #0x1
  43972c:	b.ls	4397b8 <ferror@plt+0x361e8>  // b.plast
  439730:	ldr	x0, [x19]
  439734:	cbz	x0, 4397b8 <ferror@plt+0x361e8>
  439738:	ldrb	w22, [x0, #106]
  43973c:	ldrb	w0, [x19, #26]
  439740:	cbnz	w0, 4397e4 <ferror@plt+0x36214>
  439744:	bl	4034e0 <__errno_location@plt>
  439748:	orr	w22, w22, w23
  43974c:	ldr	w1, [x20, #204]
  439750:	cmp	w22, #0x0
  439754:	ldr	w24, [x19, #1200]
  439758:	str	w1, [x0]
  43975c:	cset	w0, ne  // ne = any
  439760:	cmp	w24, w0
  439764:	b.le	4397c0 <ferror@plt+0x361f0>
  439768:	ldrb	w0, [x19, #1204]
  43976c:	cbz	w0, 43978c <ferror@plt+0x361bc>
  439770:	cmp	w1, #0x2
  439774:	b.ne	43978c <ferror@plt+0x361bc>  // b.any
  439778:	ldr	x1, [x20]
  43977c:	ldr	x0, [x19, #712]
  439780:	bl	44575c <ferror@plt+0x4218c>
  439784:	ldrb	w0, [x19, #1207]
  439788:	cbz	w0, 4397e4 <ferror@plt+0x36214>
  43978c:	ldr	x2, [x20, #8]
  439790:	cbnz	x2, 439798 <ferror@plt+0x361c8>
  439794:	ldr	x2, [x20]
  439798:	mov	w3, w21
  43979c:	mov	w1, #0x6                   	// #6
  4397a0:	mov	x0, x19
  4397a4:	ldp	x19, x20, [sp, #16]
  4397a8:	ldp	x21, x22, [sp, #32]
  4397ac:	ldp	x23, x24, [sp, #48]
  4397b0:	ldp	x29, x30, [sp], #64
  4397b4:	b	436040 <ferror@plt+0x32a70>
  4397b8:	mov	w22, #0x0                   	// #0
  4397bc:	b	43973c <ferror@plt+0x3616c>
  4397c0:	cbz	w24, 43978c <ferror@plt+0x361bc>
  4397c4:	ldrb	w0, [x19, #1207]
  4397c8:	cbnz	w0, 43978c <ferror@plt+0x361bc>
  4397cc:	ldr	x2, [x20, #8]
  4397d0:	cbnz	x2, 4397d8 <ferror@plt+0x36208>
  4397d4:	ldr	x2, [x20]
  4397d8:	mov	w3, w21
  4397dc:	mov	w1, #0x0                   	// #0
  4397e0:	b	4397a0 <ferror@plt+0x361d0>
  4397e4:	ldp	x19, x20, [sp, #16]
  4397e8:	ldp	x21, x22, [sp, #32]
  4397ec:	ldp	x23, x24, [sp, #48]
  4397f0:	ldp	x29, x30, [sp], #64
  4397f4:	ret
  4397f8:	mov	x2, #0x20                  	// #32
  4397fc:	b	4031e0 <memcmp@plt>
  439800:	stp	x29, x30, [sp, #-32]!
  439804:	mov	x29, sp
  439808:	str	x19, [sp, #16]
  43980c:	mov	x19, x0
  439810:	ldr	x0, [x0, #312]
  439814:	ldr	w0, [x0]
  439818:	cmp	w0, #0x7f
  43981c:	b.ne	439838 <ferror@plt+0x36268>  // b.any
  439820:	mov	x0, #0xff0                 	// #4080
  439824:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439828:	ldr	x1, [x19, #312]
  43982c:	str	wzr, [x0]
  439830:	str	x1, [x0, #8]
  439834:	str	x0, [x19, #312]
  439838:	ldr	x0, [x19, #312]
  43983c:	ldr	x19, [sp, #16]
  439840:	ldr	w1, [x0]
  439844:	add	w2, w1, #0x1
  439848:	str	w2, [x0]
  43984c:	ubfiz	x1, x1, #5, #32
  439850:	add	x1, x1, #0x10
  439854:	add	x0, x0, x1
  439858:	ldp	x29, x30, [sp], #32
  43985c:	ret
  439860:	stp	x29, x30, [sp, #-64]!
  439864:	mov	x29, sp
  439868:	stp	x19, x20, [sp, #16]
  43986c:	mov	x20, x0
  439870:	mov	x0, x1
  439874:	stp	x21, x22, [sp, #32]
  439878:	mov	x21, x1
  43987c:	ldr	x19, [x20, #304]
  439880:	str	x23, [sp, #48]
  439884:	mov	w23, w2
  439888:	bl	45b5a8 <ferror@plt+0x57fd8>
  43988c:	mov	x1, x21
  439890:	mov	w2, w0
  439894:	mov	w3, #0x1                   	// #1
  439898:	mov	x0, x19
  43989c:	bl	45b220 <ferror@plt+0x57c50>
  4398a0:	mov	x22, x0
  4398a4:	ldr	x0, [x0]
  4398a8:	cbz	x0, 4398d8 <ferror@plt+0x36308>
  4398ac:	ldr	x1, [x0, #8]
  4398b0:	cbnz	x1, 4398d0 <ferror@plt+0x36300>
  4398b4:	ldr	x19, [x0, #24]
  4398b8:	mov	x0, x19
  4398bc:	ldp	x19, x20, [sp, #16]
  4398c0:	ldp	x21, x22, [sp, #32]
  4398c4:	ldr	x23, [sp, #48]
  4398c8:	ldp	x29, x30, [sp], #64
  4398cc:	ret
  4398d0:	ldr	x0, [x0]
  4398d4:	b	4398a8 <ferror@plt+0x362d8>
  4398d8:	mov	x1, #0x40                  	// #64
  4398dc:	mov	x0, #0x1                   	// #1
  4398e0:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  4398e4:	mov	x19, x0
  4398e8:	ldr	x0, [x20, #200]
  4398ec:	stp	x0, x21, [x19]
  4398f0:	mov	x0, x21
  4398f4:	bl	402d50 <strlen@plt>
  4398f8:	str	w0, [x19, #16]
  4398fc:	strb	w23, [x19, #20]
  439900:	mov	x0, x20
  439904:	str	xzr, [x19, #40]
  439908:	bl	439800 <ferror@plt+0x36230>
  43990c:	ldr	x1, [x22]
  439910:	stp	x1, xzr, [x0]
  439914:	ldr	x1, [x20, #40]
  439918:	ldr	w1, [x1, #56]
  43991c:	str	w1, [x0, #16]
  439920:	str	x19, [x0, #24]
  439924:	str	x0, [x22]
  439928:	b	4398b8 <ferror@plt+0x362e8>
  43992c:	stp	x29, x30, [sp, #-48]!
  439930:	mov	x29, sp
  439934:	stp	x19, x20, [sp, #16]
  439938:	mov	x19, x0
  43993c:	stp	x21, x22, [sp, #32]
  439940:	ldrb	w0, [x1]
  439944:	cmp	w0, #0x2f
  439948:	b.ne	439964 <ferror@plt+0x36394>  // b.any
  43994c:	add	x20, x19, #0xd8
  439950:	mov	x0, x20
  439954:	ldp	x19, x20, [sp, #16]
  439958:	ldp	x21, x22, [sp, #32]
  43995c:	ldp	x29, x30, [sp], #48
  439960:	ret
  439964:	ldr	x0, [x19]
  439968:	cbnz	x0, 4399b0 <ferror@plt+0x363e0>
  43996c:	ldr	x20, [x19, #288]
  439970:	cmp	w3, #0x1
  439974:	b.ne	4399b8 <ferror@plt+0x363e8>  // b.any
  439978:	ldr	x0, [x20, #64]
  43997c:	cbz	x0, 439a40 <ferror@plt+0x36470>
  439980:	add	x3, x19, #0xd8
  439984:	cmp	x0, x3
  439988:	b.eq	439a40 <ferror@plt+0x36470>  // b.none
  43998c:	ldr	x20, [x0]
  439990:	cbnz	x20, 439950 <ferror@plt+0x36380>
  439994:	mov	x3, x1
  439998:	mov	x0, x19
  43999c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  4399a0:	mov	w1, #0x3                   	// #3
  4399a4:	add	x2, x2, #0x2ee
  4399a8:	bl	435b3c <ferror@plt+0x3256c>
  4399ac:	b	439950 <ferror@plt+0x36380>
  4399b0:	ldr	x20, [x0, #80]
  4399b4:	b	439970 <ferror@plt+0x363a0>
  4399b8:	cbz	w2, 4399c4 <ferror@plt+0x363f4>
  4399bc:	ldr	x20, [x19, #208]
  4399c0:	b	439990 <ferror@plt+0x363c0>
  4399c4:	cmp	w3, #0x3
  4399c8:	b.ne	439a44 <ferror@plt+0x36474>  // b.any
  4399cc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  4399d0:	add	x1, x1, #0xd7e
  4399d4:	mov	w2, #0x0                   	// #0
  4399d8:	mov	x0, x19
  4399dc:	ldp	x19, x20, [sp, #16]
  4399e0:	ldp	x21, x22, [sp, #32]
  4399e4:	ldp	x29, x30, [sp], #48
  4399e8:	b	439860 <ferror@plt+0x36290>
  4399ec:	ldr	x0, [x20, #24]
  4399f0:	cbnz	x0, 439a24 <ferror@plt+0x36454>
  4399f4:	ldr	x0, [x20, #8]
  4399f8:	bl	45b8d0 <ferror@plt+0x58300>
  4399fc:	ldr	x21, [x20, #8]
  439a00:	sub	x21, x0, x21
  439a04:	add	x0, x21, #0x1
  439a08:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439a0c:	ldr	x1, [x20, #8]
  439a10:	mov	x22, x0
  439a14:	mov	x2, x21
  439a18:	bl	402cd0 <memcpy@plt>
  439a1c:	strb	wzr, [x22, x21]
  439a20:	str	x22, [x20, #24]
  439a24:	ldr	x0, [x19]
  439a28:	ldr	x1, [x20, #24]
  439a2c:	cbz	x0, 439a38 <ferror@plt+0x36468>
  439a30:	ldrb	w2, [x0, #106]
  439a34:	b	4399d8 <ferror@plt+0x36408>
  439a38:	mov	w2, #0x0                   	// #0
  439a3c:	b	4399d8 <ferror@plt+0x36408>
  439a40:	cbnz	w2, 4399bc <ferror@plt+0x363ec>
  439a44:	ldrb	w0, [x19, #416]
  439a48:	cbz	w0, 4399ec <ferror@plt+0x3641c>
  439a4c:	ldr	x20, [x19, #200]
  439a50:	b	439990 <ferror@plt+0x363c0>
  439a54:	stp	x29, x30, [sp, #-48]!
  439a58:	mov	x2, #0x8                   	// #8
  439a5c:	mov	x29, sp
  439a60:	stp	x19, x20, [sp, #16]
  439a64:	mov	x19, x0
  439a68:	mov	x20, x1
  439a6c:	str	x21, [sp, #32]
  439a70:	bl	4031e0 <memcmp@plt>
  439a74:	cbnz	w0, 439ac4 <ferror@plt+0x364f4>
  439a78:	ldrb	w0, [x19, #24]
  439a7c:	add	x21, x19, #0x8
  439a80:	cbnz	w0, 439aa0 <ferror@plt+0x364d0>
  439a84:	ldr	x0, [x19, #32]
  439a88:	mov	x2, x21
  439a8c:	ldr	x1, [x0, #120]
  439a90:	ldr	x0, [x0, #40]
  439a94:	bl	459ca0 <ferror@plt+0x566d0>
  439a98:	mov	w0, #0x1                   	// #1
  439a9c:	strb	w0, [x19, #24]
  439aa0:	add	x1, x20, #0x8
  439aa4:	mov	x0, x21
  439aa8:	mov	x2, #0x10                  	// #16
  439aac:	bl	4031e0 <memcmp@plt>
  439ab0:	cbnz	w0, 439ac4 <ferror@plt+0x364f4>
  439ab4:	ldrb	w1, [x19, #25]
  439ab8:	cbnz	w1, 439ac4 <ferror@plt+0x364f4>
  439abc:	ldrb	w0, [x20, #24]
  439ac0:	eor	w0, w0, #0x1
  439ac4:	ldp	x19, x20, [sp, #16]
  439ac8:	ldr	x21, [sp, #32]
  439acc:	ldp	x29, x30, [sp], #48
  439ad0:	ret
  439ad4:	stp	x29, x30, [sp, #-80]!
  439ad8:	mov	x29, sp
  439adc:	stp	x19, x20, [sp, #16]
  439ae0:	ldrb	w20, [x1, #213]
  439ae4:	stp	x21, x22, [sp, #32]
  439ae8:	stp	x23, x24, [sp, #48]
  439aec:	stp	x25, x26, [sp, #64]
  439af0:	cbnz	w20, 439b40 <ferror@plt+0x36570>
  439af4:	ldrb	w24, [x1, #211]
  439af8:	mov	x19, x1
  439afc:	cbnz	w24, 439b40 <ferror@plt+0x36570>
  439b00:	mov	x22, x0
  439b04:	ldr	w0, [x1, #204]
  439b08:	cbnz	w0, 439b40 <ferror@plt+0x36570>
  439b0c:	ldr	w0, [x1, #200]
  439b10:	mov	w25, w2
  439b14:	cmn	w0, #0x1
  439b18:	b.ne	439b5c <ferror@plt+0x3658c>  // b.any
  439b1c:	mov	x0, x1
  439b20:	bl	43955c <ferror@plt+0x35f8c>
  439b24:	ands	w20, w0, #0xff
  439b28:	b.ne	439b5c <ferror@plt+0x3658c>  // b.any
  439b2c:	mov	w3, w25
  439b30:	mov	x1, x19
  439b34:	mov	x0, x22
  439b38:	mov	w2, #0x0                   	// #0
  439b3c:	bl	4396fc <ferror@plt+0x3612c>
  439b40:	mov	w0, w20
  439b44:	ldp	x19, x20, [sp, #16]
  439b48:	ldp	x21, x22, [sp, #32]
  439b4c:	ldp	x23, x24, [sp, #48]
  439b50:	ldp	x25, x26, [sp, #64]
  439b54:	ldp	x29, x30, [sp], #80
  439b58:	ret
  439b5c:	ldr	w26, [x19, #88]
  439b60:	and	w26, w26, #0xf000
  439b64:	cmp	w26, #0x6, lsl #12
  439b68:	b.ne	439bac <ferror@plt+0x365dc>  // b.any
  439b6c:	ldr	x4, [x19, #8]
  439b70:	adrp	x3, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  439b74:	mov	w2, w25
  439b78:	add	x3, x3, #0x318
  439b7c:	mov	x0, x22
  439b80:	mov	w1, #0x3                   	// #3
  439b84:	bl	435ec4 <ferror@plt+0x328f4>
  439b88:	ldr	w0, [x19, #200]
  439b8c:	eor	w24, w24, #0x1
  439b90:	strb	w24, [x19, #211]
  439b94:	bl	403120 <close@plt>
  439b98:	ldrb	w20, [x19, #211]
  439b9c:	mov	w0, #0xffffffff            	// #-1
  439ba0:	str	w0, [x19, #200]
  439ba4:	eor	w20, w20, #0x1
  439ba8:	b	439b40 <ferror@plt+0x36570>
  439bac:	cmp	w26, #0x8, lsl #12
  439bb0:	b.ne	439c0c <ferror@plt+0x3663c>  // b.any
  439bb4:	ldr	x21, [x19, #120]
  439bb8:	add	x0, x21, #0x10
  439bbc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439bc0:	mov	x20, x0
  439bc4:	mov	x23, #0x0                   	// #0
  439bc8:	ldr	w0, [x19, #200]
  439bcc:	sub	x2, x21, x23
  439bd0:	add	x1, x20, x23
  439bd4:	bl	4033c0 <read@plt>
  439bd8:	cmp	x0, #0x0
  439bdc:	b.le	439c14 <ferror@plt+0x36644>
  439be0:	add	x23, x23, x0
  439be4:	cmp	x21, x23
  439be8:	b.ne	439bc8 <ferror@plt+0x365f8>  // b.any
  439bec:	cmp	w26, #0x8, lsl #12
  439bf0:	b.eq	439c60 <ferror@plt+0x36690>  // b.none
  439bf4:	lsl	x21, x21, #1
  439bf8:	mov	x0, x20
  439bfc:	add	x1, x21, #0x10
  439c00:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  439c04:	mov	x20, x0
  439c08:	b	439bc8 <ferror@plt+0x365f8>
  439c0c:	mov	x21, #0x2000                	// #8192
  439c10:	b	439bb8 <ferror@plt+0x365e8>
  439c14:	b.eq	439c38 <ferror@plt+0x36668>  // b.none
  439c18:	ldr	x2, [x19, #8]
  439c1c:	mov	w3, w25
  439c20:	mov	w1, #0x3                   	// #3
  439c24:	mov	x0, x22
  439c28:	bl	436040 <ferror@plt+0x32a70>
  439c2c:	mov	x0, x20
  439c30:	bl	4032a0 <free@plt>
  439c34:	b	439b88 <ferror@plt+0x365b8>
  439c38:	cmp	w26, #0x8, lsl #12
  439c3c:	ccmp	x23, x21, #0x4, eq  // eq = none
  439c40:	b.eq	439c60 <ferror@plt+0x36690>  // b.none
  439c44:	ldr	x4, [x19, #8]
  439c48:	adrp	x3, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  439c4c:	mov	w2, w25
  439c50:	add	x3, x3, #0x32d
  439c54:	mov	x0, x22
  439c58:	mov	w1, #0x0                   	// #0
  439c5c:	bl	435ec4 <ferror@plt+0x328f4>
  439c60:	ldr	x1, [x22, #1184]
  439c64:	add	x6, x19, #0x78
  439c68:	add	x5, x19, #0x30
  439c6c:	mov	x4, x23
  439c70:	add	x3, x21, #0x10
  439c74:	mov	x2, x20
  439c78:	mov	x0, x22
  439c7c:	bl	42ead4 <ferror@plt+0x2b504>
  439c80:	mov	w24, #0x1                   	// #1
  439c84:	str	x0, [x19, #40]
  439c88:	mov	w0, #0x1                   	// #1
  439c8c:	strb	w0, [x19, #213]
  439c90:	b	439b88 <ferror@plt+0x365b8>
  439c94:	ldr	w0, [x0, #204]
  439c98:	cmp	w0, #0x0
  439c9c:	cset	w0, ne  // ne = any
  439ca0:	ret
  439ca4:	stp	x29, x30, [sp, #-304]!
  439ca8:	mov	x29, sp
  439cac:	stp	x19, x20, [sp, #16]
  439cb0:	mov	x20, x0
  439cb4:	stp	x21, x22, [sp, #32]
  439cb8:	and	w21, w3, #0xff
  439cbc:	stp	x23, x24, [sp, #48]
  439cc0:	mov	x24, x2
  439cc4:	stp	x25, x26, [sp, #64]
  439cc8:	mov	x25, x1
  439ccc:	and	w1, w5, #0xff
  439cd0:	stp	x27, x28, [sp, #80]
  439cd4:	mov	w27, w6
  439cd8:	str	w1, [sp, #120]
  439cdc:	str	w4, [sp, #156]
  439ce0:	cbnz	x2, 439cf8 <ferror@plt+0x36728>
  439ce4:	adrp	x3, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  439ce8:	mov	w2, w6
  439cec:	add	x3, x3, #0x349
  439cf0:	mov	w1, #0x4                   	// #4
  439cf4:	bl	435ec4 <ferror@plt+0x328f4>
  439cf8:	ldr	x19, [x20, #296]
  439cfc:	mov	x0, x25
  439d00:	bl	45b5a8 <ferror@plt+0x57fd8>
  439d04:	mov	w2, w0
  439d08:	mov	x1, x25
  439d0c:	mov	x0, x19
  439d10:	mov	w3, #0x1                   	// #1
  439d14:	bl	45b220 <ferror@plt+0x57c50>
  439d18:	mov	x22, x0
  439d1c:	ldr	x0, [x0]
  439d20:	cbz	x0, 43a2bc <ferror@plt+0x36cec>
  439d24:	ldr	x1, [x0, #8]
  439d28:	cmp	x24, x1
  439d2c:	b.eq	43a2b4 <ferror@plt+0x36ce4>  // b.none
  439d30:	ldr	x0, [x0]
  439d34:	b	439d20 <ferror@plt+0x36750>
  439d38:	mov	w0, #0x0                   	// #0
  439d3c:	b	43a30c <ferror@plt+0x36d3c>
  439d40:	ldr	w0, [sp, #120]
  439d44:	b	43a30c <ferror@plt+0x36d3c>
  439d48:	add	x21, x21, #0x2
  439d4c:	b	43a35c <ferror@plt+0x36d8c>
  439d50:	ldrb	w0, [x28]
  439d54:	cmp	w0, #0x2f
  439d58:	b.eq	439e24 <ferror@plt+0x36854>  // b.none
  439d5c:	mov	x0, x28
  439d60:	mov	w1, #0x2f                  	// #47
  439d64:	bl	4032f0 <strchr@plt>
  439d68:	cmp	x0, #0x0
  439d6c:	mov	x21, x0
  439d70:	ccmp	x28, x0, #0x4, ne  // ne = any
  439d74:	b.eq	439e24 <ferror@plt+0x36854>  // b.none
  439d78:	ldr	w5, [x23, #16]
  439d7c:	sub	x6, x0, x28
  439d80:	add	x6, x6, #0x1
  439d84:	str	x6, [sp, #168]
  439d88:	add	x5, x5, x6
  439d8c:	str	x5, [sp, #136]
  439d90:	add	x0, x5, #0x2
  439d94:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439d98:	str	x0, [sp, #128]
  439d9c:	ldr	w2, [x23, #16]
  439da0:	ldr	x1, [x23, #8]
  439da4:	add	x7, x0, x2
  439da8:	stp	x2, x7, [sp, #104]
  439dac:	bl	402cd0 <memcpy@plt>
  439db0:	ldr	w0, [x23, #16]
  439db4:	ldr	x7, [sp, #112]
  439db8:	ldp	x4, x5, [sp, #128]
  439dbc:	ldr	x6, [sp, #168]
  439dc0:	cbz	w0, 439dec <ferror@plt+0x3681c>
  439dc4:	ldr	x1, [x23, #8]
  439dc8:	sub	w0, w0, #0x1
  439dcc:	ldrb	w0, [x1, x0]
  439dd0:	cmp	w0, #0x2f
  439dd4:	b.eq	439dec <ferror@plt+0x3681c>  // b.none
  439dd8:	ldr	x2, [sp, #104]
  439ddc:	add	x5, x5, #0x1
  439de0:	add	x7, x7, #0x1
  439de4:	mov	w0, #0x2f                  	// #47
  439de8:	strb	w0, [x4, x2]
  439dec:	mov	x2, x6
  439df0:	mov	x1, x28
  439df4:	mov	x0, x7
  439df8:	stp	x5, x4, [sp, #104]
  439dfc:	bl	402cd0 <memcpy@plt>
  439e00:	ldp	x5, x4, [sp, #104]
  439e04:	mov	x0, x20
  439e08:	add	x28, x21, #0x1
  439e0c:	strb	wzr, [x4, x5]
  439e10:	mov	x1, x4
  439e14:	ldrb	w2, [x23, #20]
  439e18:	bl	439860 <ferror@plt+0x36290>
  439e1c:	mov	x23, x0
  439e20:	b	43a348 <ferror@plt+0x36d78>
  439e24:	ldr	x1, [x19, #64]
  439e28:	ldr	x0, [x19]
  439e2c:	ldr	x2, [x1, #40]
  439e30:	cbz	x2, 439e50 <ferror@plt+0x36880>
  439e34:	blr	x2
  439e38:	mov	x21, x0
  439e3c:	cbnz	x0, 43a388 <ferror@plt+0x36db8>
  439e40:	mov	w0, #0x2                   	// #2
  439e44:	str	xzr, [x19, #8]
  439e48:	str	w0, [x19, #204]
  439e4c:	b	43a3f4 <ferror@plt+0x36e24>
  439e50:	bl	439248 <ferror@plt+0x35c78>
  439e54:	b	439e38 <ferror@plt+0x36868>
  439e58:	mov	x0, x21
  439e5c:	mov	x21, x23
  439e60:	bl	4032a0 <free@plt>
  439e64:	b	43a3cc <ferror@plt+0x36dfc>
  439e68:	ldr	x0, [x19]
  439e6c:	str	x21, [x19, #8]
  439e70:	ldrb	w0, [x0]
  439e74:	cbz	w0, 439f2c <ferror@plt+0x3695c>
  439e78:	ldr	x0, [x20, #968]
  439e7c:	cbz	x0, 439f2c <ferror@plt+0x3695c>
  439e80:	ldr	x0, [x20, #280]
  439e84:	cbz	x0, 439ea0 <ferror@plt+0x368d0>
  439e88:	ldrb	w1, [x0, #214]
  439e8c:	cbz	w1, 439e98 <ferror@plt+0x368c8>
  439e90:	ldr	x0, [x0, #32]
  439e94:	b	439e84 <ferror@plt+0x368b4>
  439e98:	ldrb	w0, [x0, #212]
  439e9c:	cbz	w0, 439f2c <ferror@plt+0x3695c>
  439ea0:	mov	x0, x21
  439ea4:	bl	402d50 <strlen@plt>
  439ea8:	mov	x28, x0
  439eac:	add	x0, x0, #0x5
  439eb0:	str	x0, [sp, #104]
  439eb4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  439eb8:	mov	x1, x21
  439ebc:	mov	x23, x0
  439ec0:	mov	x2, x28
  439ec4:	bl	402cd0 <memcpy@plt>
  439ec8:	add	x0, x23, x28
  439ecc:	str	x0, [sp, #136]
  439ed0:	ldp	x1, x0, [sp, #136]
  439ed4:	ldr	w0, [x0]
  439ed8:	str	w0, [x23, x28]
  439edc:	ldr	x0, [sp, #144]
  439ee0:	ldrb	w0, [x0, #4]
  439ee4:	strb	w0, [x1, #4]
  439ee8:	add	x1, sp, #0xb0
  439eec:	mov	x0, x23
  439ef0:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  439ef4:	cbnz	w0, 439f24 <ferror@plt+0x36954>
  439ef8:	ldr	w0, [sp, #192]
  439efc:	and	w0, w0, #0xf000
  439f00:	cmp	w0, #0x4, lsl #12
  439f04:	b.eq	43a024 <ferror@plt+0x36a54>  // b.none
  439f08:	mov	x1, x19
  439f0c:	mov	x2, x23
  439f10:	mov	x0, x20
  439f14:	bl	439618 <ferror@plt+0x36048>
  439f18:	and	w1, w0, #0xff
  439f1c:	cbnz	w1, 43a2ac <ferror@plt+0x36cdc>
  439f20:	mov	w26, #0x1                   	// #1
  439f24:	mov	x0, x23
  439f28:	bl	4032a0 <free@plt>
  439f2c:	mov	x0, x19
  439f30:	bl	43955c <ferror@plt+0x35f8c>
  439f34:	tst	w0, #0xff
  439f38:	b.ne	439f5c <ferror@plt+0x3698c>  // b.any
  439f3c:	ldr	w0, [x19, #204]
  439f40:	cmp	w0, #0x2
  439f44:	b.eq	43a100 <ferror@plt+0x36b30>  // b.none
  439f48:	mov	w3, w27
  439f4c:	mov	w2, #0x0                   	// #0
  439f50:	mov	x1, x19
  439f54:	mov	x0, x20
  439f58:	bl	4396fc <ferror@plt+0x3612c>
  439f5c:	ldr	x0, [x20, #280]
  439f60:	mov	x21, #0x0                   	// #0
  439f64:	str	x0, [x19, #32]
  439f68:	str	x19, [x20, #280]
  439f6c:	mov	x0, x20
  439f70:	bl	439800 <ferror@plt+0x36230>
  439f74:	ldr	x1, [x22]
  439f78:	stp	x1, x24, [x0]
  439f7c:	ldr	x1, [x20, #40]
  439f80:	ldr	w1, [x1, #56]
  439f84:	str	w1, [x0, #16]
  439f88:	str	x19, [x0, #24]
  439f8c:	str	x0, [x22]
  439f90:	ldr	w0, [sp, #152]
  439f94:	cbz	w0, 439fd8 <ferror@plt+0x36a08>
  439f98:	ldr	x0, [x20, #208]
  439f9c:	cmp	x0, x24
  439fa0:	b.eq	439fd8 <ferror@plt+0x36a08>  // b.none
  439fa4:	cmp	x0, x21
  439fa8:	b.eq	439fd8 <ferror@plt+0x36a08>  // b.none
  439fac:	mov	x0, x20
  439fb0:	bl	439800 <ferror@plt+0x36230>
  439fb4:	ldr	x1, [x22]
  439fb8:	str	x1, [x0]
  439fbc:	ldr	x1, [x20, #208]
  439fc0:	str	x1, [x0, #8]
  439fc4:	ldr	x1, [x20, #40]
  439fc8:	ldr	w1, [x1, #56]
  439fcc:	str	w1, [x0, #16]
  439fd0:	str	x19, [x0, #24]
  439fd4:	str	x0, [x22]
  439fd8:	ldr	w0, [sp, #124]
  439fdc:	cbz	w0, 43a458 <ferror@plt+0x36e88>
  439fe0:	ldr	x0, [x20, #200]
  439fe4:	cmp	x0, x24
  439fe8:	b.eq	43a458 <ferror@plt+0x36e88>  // b.none
  439fec:	cmp	x0, x21
  439ff0:	b.eq	43a458 <ferror@plt+0x36e88>  // b.none
  439ff4:	mov	x0, x20
  439ff8:	bl	439800 <ferror@plt+0x36230>
  439ffc:	ldr	x1, [x22]
  43a000:	str	x1, [x0]
  43a004:	ldr	x1, [x20, #200]
  43a008:	str	x1, [x0, #8]
  43a00c:	ldr	x1, [x20, #40]
  43a010:	ldr	w1, [x1, #56]
  43a014:	str	w1, [x0, #16]
  43a018:	str	x19, [x0, #24]
  43a01c:	str	x0, [x22]
  43a020:	b	43a458 <ferror@plt+0x36e88>
  43a024:	mov	x0, x23
  43a028:	bl	402e20 <opendir@plt>
  43a02c:	str	x0, [sp, #112]
  43a030:	cbz	x0, 439f20 <ferror@plt+0x36950>
  43a034:	ldr	x1, [sp, #136]
  43a038:	mov	w0, #0x2f                  	// #47
  43a03c:	ldr	x26, [sp, #104]
  43a040:	strb	w0, [x1, #4]
  43a044:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  43a048:	add	x0, x0, #0x754
  43a04c:	str	x0, [sp, #136]
  43a050:	ldr	x0, [sp, #112]
  43a054:	bl	4030a0 <readdir@plt>
  43a058:	cbz	x0, 43a0f8 <ferror@plt+0x36b28>
  43a05c:	ldr	x1, [sp, #160]
  43a060:	add	x28, x0, #0x13
  43a064:	mov	x0, x28
  43a068:	bl	403220 <strcmp@plt>
  43a06c:	cbz	w0, 43a050 <ferror@plt+0x36a80>
  43a070:	ldr	x1, [sp, #136]
  43a074:	mov	x0, x28
  43a078:	bl	403220 <strcmp@plt>
  43a07c:	cbz	w0, 43a050 <ferror@plt+0x36a80>
  43a080:	mov	x0, x28
  43a084:	bl	402d50 <strlen@plt>
  43a088:	add	x2, x0, #0x1
  43a08c:	ldr	x0, [sp, #104]
  43a090:	add	x0, x0, x2
  43a094:	cmp	x0, x26
  43a098:	b.ls	43a0bc <ferror@plt+0x36aec>  // b.plast
  43a09c:	add	x26, x26, #0x40
  43a0a0:	mov	x0, x23
  43a0a4:	add	x26, x2, x26
  43a0a8:	str	x2, [sp, #168]
  43a0ac:	mov	x1, x26
  43a0b0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  43a0b4:	ldr	x2, [sp, #168]
  43a0b8:	mov	x23, x0
  43a0bc:	ldr	x0, [sp, #104]
  43a0c0:	mov	x1, x28
  43a0c4:	add	x0, x23, x0
  43a0c8:	bl	402cd0 <memcpy@plt>
  43a0cc:	mov	x1, x19
  43a0d0:	mov	x2, x23
  43a0d4:	mov	x0, x20
  43a0d8:	bl	439618 <ferror@plt+0x36048>
  43a0dc:	ands	w1, w0, #0xff
  43a0e0:	b.eq	43a050 <ferror@plt+0x36a80>  // b.none
  43a0e4:	ldr	x0, [sp, #112]
  43a0e8:	str	w1, [sp, #104]
  43a0ec:	bl	4030f0 <closedir@plt>
  43a0f0:	ldr	w1, [sp, #104]
  43a0f4:	b	439f1c <ferror@plt+0x3694c>
  43a0f8:	mov	w1, #0x0                   	// #0
  43a0fc:	b	43a0e4 <ferror@plt+0x36b14>
  43a100:	add	x23, x20, #0x148
  43a104:	mov	x0, x21
  43a108:	bl	402d50 <strlen@plt>
  43a10c:	add	x1, x0, #0x1
  43a110:	mov	x28, x0
  43a114:	ldp	x2, x0, [x23, #24]
  43a118:	sub	x0, x0, x2
  43a11c:	cmp	x0, x1
  43a120:	b.cs	43a12c <ferror@plt+0x36b5c>  // b.hs, b.nlast
  43a124:	mov	x0, x23
  43a128:	bl	45c22c <_obstack_newchunk@@Base>
  43a12c:	ldr	x0, [x23, #24]
  43a130:	mov	x2, x28
  43a134:	mov	x1, x21
  43a138:	bl	402cd0 <memcpy@plt>
  43a13c:	ldr	x1, [x23, #24]
  43a140:	add	x0, x1, x28
  43a144:	add	x0, x0, #0x1
  43a148:	str	x0, [x23, #24]
  43a14c:	strb	wzr, [x1, x28]
  43a150:	ldp	x28, x2, [x23, #16]
  43a154:	cmp	x28, x2
  43a158:	b.ne	43a168 <ferror@plt+0x36b98>  // b.any
  43a15c:	ldrb	w0, [x23, #80]
  43a160:	orr	w0, w0, #0x2
  43a164:	strb	w0, [x23, #80]
  43a168:	ldr	x0, [x23, #48]
  43a16c:	ldr	x1, [x23, #32]
  43a170:	add	x2, x2, x0
  43a174:	bic	x0, x2, x0
  43a178:	ldr	x2, [x23, #8]
  43a17c:	sub	x3, x0, x2
  43a180:	sub	x2, x1, x2
  43a184:	cmp	x3, x2
  43a188:	csel	x0, x0, x1, ls  // ls = plast
  43a18c:	stp	x0, x0, [x23, #16]
  43a190:	mov	x0, x21
  43a194:	bl	4032a0 <free@plt>
  43a198:	ldr	w2, [sp, #128]
  43a19c:	mov	x1, x28
  43a1a0:	ldr	x0, [x20, #320]
  43a1a4:	mov	w3, #0x1                   	// #1
  43a1a8:	bl	45b220 <ferror@plt+0x57c50>
  43a1ac:	str	x28, [x0]
  43a1b0:	ldr	x0, [x19]
  43a1b4:	str	x0, [x19, #8]
  43a1b8:	b	43a3f4 <ferror@plt+0x36e24>
  43a1bc:	ldr	x0, [x19, #8]
  43a1c0:	bl	4032a0 <free@plt>
  43a1c4:	ldr	x0, [x19]
  43a1c8:	str	x0, [x19, #8]
  43a1cc:	cbz	w26, 43a208 <ferror@plt+0x36c38>
  43a1d0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43a1d4:	add	x2, x2, #0x365
  43a1d8:	mov	w1, #0x3                   	// #3
  43a1dc:	mov	x0, x20
  43a1e0:	bl	435b3c <ferror@plt+0x3256c>
  43a1e4:	mov	x0, x20
  43a1e8:	bl	434d58 <ferror@plt+0x31788>
  43a1ec:	ldrb	w0, [x0, #84]
  43a1f0:	cbnz	w0, 43a208 <ferror@plt+0x36c38>
  43a1f4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43a1f8:	mov	x0, x20
  43a1fc:	add	x2, x2, #0x39d
  43a200:	mov	w1, #0x3                   	// #3
  43a204:	bl	435b3c <ferror@plt+0x3256c>
  43a208:	ldr	w0, [sp, #120]
  43a20c:	cbz	w0, 43a240 <ferror@plt+0x36c70>
  43a210:	ldr	x0, [x19]
  43a214:	bl	4032a0 <free@plt>
  43a218:	mov	x0, x19
  43a21c:	bl	4032a0 <free@plt>
  43a220:	ldr	x0, [x22]
  43a224:	cbnz	x0, 43a238 <ferror@plt+0x36c68>
  43a228:	str	x19, [x22]
  43a22c:	mov	x1, x22
  43a230:	ldr	x0, [x20, #296]
  43a234:	bl	45b460 <ferror@plt+0x57e90>
  43a238:	mov	x19, #0x0                   	// #0
  43a23c:	b	43a458 <ferror@plt+0x36e88>
  43a240:	ldr	w2, [sp, #156]
  43a244:	mov	w3, w27
  43a248:	b	439f50 <ferror@plt+0x36980>
  43a24c:	ldr	x1, [x20, #208]
  43a250:	cmp	x0, x1
  43a254:	b.eq	43a288 <ferror@plt+0x36cb8>  // b.none
  43a258:	ldr	x1, [x20, #200]
  43a25c:	cmp	x0, x1
  43a260:	b.ne	43a338 <ferror@plt+0x36d68>  // b.any
  43a264:	mov	w1, #0x1                   	// #1
  43a268:	str	w1, [sp, #124]
  43a26c:	ldr	x23, [x22]
  43a270:	cbz	x23, 43a338 <ferror@plt+0x36d68>
  43a274:	ldr	x21, [x23, #8]
  43a278:	cmp	x0, x21
  43a27c:	b.eq	43a294 <ferror@plt+0x36cc4>  // b.none
  43a280:	ldr	x23, [x23]
  43a284:	b	43a270 <ferror@plt+0x36ca0>
  43a288:	mov	w1, #0x1                   	// #1
  43a28c:	str	w1, [sp, #152]
  43a290:	b	43a26c <ferror@plt+0x36c9c>
  43a294:	ldr	x0, [x19]
  43a298:	bl	4032a0 <free@plt>
  43a29c:	mov	x0, x19
  43a2a0:	bl	4032a0 <free@plt>
  43a2a4:	ldr	x19, [x23, #24]
  43a2a8:	b	439f6c <ferror@plt+0x3699c>
  43a2ac:	str	x23, [x19, #16]
  43a2b0:	b	439f5c <ferror@plt+0x3698c>
  43a2b4:	ldr	x19, [x0, #24]
  43a2b8:	b	43a458 <ferror@plt+0x36e88>
  43a2bc:	mov	x1, #0xd8                  	// #216
  43a2c0:	mov	x0, #0x1                   	// #1
  43a2c4:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  43a2c8:	mov	x19, x0
  43a2cc:	ldr	x0, [x20]
  43a2d0:	str	x24, [x19, #64]
  43a2d4:	cmp	x0, #0x0
  43a2d8:	cset	w0, eq  // eq = none
  43a2dc:	strb	w0, [x19, #212]
  43a2e0:	mov	w0, #0xffffffff            	// #-1
  43a2e4:	str	w0, [x19, #200]
  43a2e8:	mov	x0, x25
  43a2ec:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  43a2f0:	str	x0, [x19]
  43a2f4:	ldr	w0, [sp, #120]
  43a2f8:	cbnz	w0, 439d40 <ferror@plt+0x36770>
  43a2fc:	ldr	x0, [x20]
  43a300:	cbz	x0, 439d38 <ferror@plt+0x36768>
  43a304:	ldr	x0, [x0, #80]
  43a308:	ldrb	w0, [x0, #214]
  43a30c:	strb	w0, [x19, #214]
  43a310:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43a314:	add	x0, x0, #0x3c4
  43a318:	str	wzr, [sp, #124]
  43a31c:	str	x0, [sp, #144]
  43a320:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  43a324:	add	x0, x0, #0x66b
  43a328:	str	wzr, [sp, #152]
  43a32c:	str	x0, [sp, #160]
  43a330:	mov	w26, #0x0                   	// #0
  43a334:	cbnz	w21, 439f5c <ferror@plt+0x3698c>
  43a338:	ldrb	w0, [x20, #1145]
  43a33c:	cbz	w0, 439e24 <ferror@plt+0x36854>
  43a340:	ldr	x28, [x19]
  43a344:	ldr	x23, [x19, #64]
  43a348:	ldr	x0, [x23, #32]
  43a34c:	cbnz	x0, 43a358 <ferror@plt+0x36d88>
  43a350:	mov	x0, x23
  43a354:	bl	4393a4 <ferror@plt+0x35dd4>
  43a358:	mov	x21, #0x0                   	// #0
  43a35c:	ldr	x0, [x23, #32]
  43a360:	ldr	x0, [x0, x21, lsl #3]
  43a364:	cbz	x0, 439d50 <ferror@plt+0x36780>
  43a368:	mov	x1, x28
  43a36c:	bl	45a8bc <ferror@plt+0x572ec>
  43a370:	cbnz	w0, 439d48 <ferror@plt+0x36778>
  43a374:	ldr	x0, [x23, #32]
  43a378:	add	x2, x21, #0x1
  43a37c:	ldr	x0, [x0, x2, lsl #3]
  43a380:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  43a384:	mov	x21, x0
  43a388:	ldrb	w0, [x20, #1245]
  43a38c:	cbz	w0, 43a3cc <ferror@plt+0x36dfc>
  43a390:	ldr	x0, [x19, #64]
  43a394:	ldrb	w0, [x0, #20]
  43a398:	cbz	w0, 43a3cc <ferror@plt+0x36dfc>
  43a39c:	mov	x0, x21
  43a3a0:	bl	45b8d4 <ferror@plt+0x58304>
  43a3a4:	mov	x23, x0
  43a3a8:	cbz	x0, 43a3c4 <ferror@plt+0x36df4>
  43a3ac:	bl	402d50 <strlen@plt>
  43a3b0:	mov	x28, x0
  43a3b4:	mov	x0, x21
  43a3b8:	bl	402d50 <strlen@plt>
  43a3bc:	cmp	x28, x0
  43a3c0:	b.cc	439e58 <ferror@plt+0x36888>  // b.lo, b.ul, b.last
  43a3c4:	mov	x0, x23
  43a3c8:	bl	4032a0 <free@plt>
  43a3cc:	mov	x0, x21
  43a3d0:	bl	45b5a8 <ferror@plt+0x57fd8>
  43a3d4:	mov	w2, w0
  43a3d8:	str	w0, [sp, #128]
  43a3dc:	ldr	x0, [x20, #320]
  43a3e0:	mov	x1, x21
  43a3e4:	bl	45b108 <ferror@plt+0x57b38>
  43a3e8:	cbz	x0, 439e68 <ferror@plt+0x36898>
  43a3ec:	mov	w0, #0x2                   	// #2
  43a3f0:	str	w0, [x19, #204]
  43a3f4:	ldr	x0, [x19, #64]
  43a3f8:	ldr	x0, [x0]
  43a3fc:	str	x0, [x19, #64]
  43a400:	cbnz	x0, 43a24c <ferror@plt+0x36c7c>
  43a404:	ldr	x3, [x20, #984]
  43a408:	cbz	x3, 43a1cc <ferror@plt+0x36bfc>
  43a40c:	add	x2, x19, #0x40
  43a410:	mov	x1, x25
  43a414:	mov	x0, x20
  43a418:	blr	x3
  43a41c:	str	x0, [x19, #8]
  43a420:	cbz	x0, 43a1c4 <ferror@plt+0x36bf4>
  43a424:	mov	x0, x19
  43a428:	bl	43955c <ferror@plt+0x35f8c>
  43a42c:	tst	w0, #0xff
  43a430:	b.eq	43a1bc <ferror@plt+0x36bec>  // b.none
  43a434:	ldr	x0, [x20, #280]
  43a438:	str	x0, [x19, #32]
  43a43c:	str	x19, [x20, #280]
  43a440:	ldr	x0, [x22]
  43a444:	cbnz	x0, 43a458 <ferror@plt+0x36e88>
  43a448:	str	x19, [x22]
  43a44c:	mov	x1, x22
  43a450:	ldr	x0, [x20, #296]
  43a454:	bl	45b460 <ferror@plt+0x57e90>
  43a458:	mov	x0, x19
  43a45c:	ldp	x19, x20, [sp, #16]
  43a460:	ldp	x21, x22, [sp, #32]
  43a464:	ldp	x23, x24, [sp, #48]
  43a468:	ldp	x25, x26, [sp, #64]
  43a46c:	ldp	x27, x28, [sp, #80]
  43a470:	ldp	x29, x30, [sp], #304
  43a474:	ret
  43a478:	stp	x29, x30, [sp, #-160]!
  43a47c:	mov	x29, sp
  43a480:	stp	x23, x24, [sp, #48]
  43a484:	ldrb	w23, [x1, #210]
  43a488:	stp	x19, x20, [sp, #16]
  43a48c:	stp	x21, x22, [sp, #32]
  43a490:	stp	x25, x26, [sp, #64]
  43a494:	stp	x27, x28, [sp, #80]
  43a498:	cbz	w23, 43a4a4 <ferror@plt+0x36ed4>
  43a49c:	mov	w23, #0x0                   	// #0
  43a4a0:	b	43a4f0 <ferror@plt+0x36f20>
  43a4a4:	mov	x20, x0
  43a4a8:	mov	x19, x1
  43a4ac:	and	w25, w2, #0xff
  43a4b0:	mov	w26, w3
  43a4b4:	cbnz	w25, 43a510 <ferror@plt+0x36f40>
  43a4b8:	ldr	x0, [x19, #56]
  43a4bc:	cbnz	x0, 43a528 <ferror@plt+0x36f58>
  43a4c0:	ldr	x1, [x19, #16]
  43a4c4:	cbz	x1, 43a534 <ferror@plt+0x36f64>
  43a4c8:	ldr	w2, [x19, #200]
  43a4cc:	mov	x0, x20
  43a4d0:	ldr	x3, [x19, #8]
  43a4d4:	ldr	x4, [x20, #976]
  43a4d8:	blr	x4
  43a4dc:	mov	w0, #0xffffffff            	// #-1
  43a4e0:	str	w0, [x19, #200]
  43a4e4:	ldr	x0, [x19, #16]
  43a4e8:	bl	4032a0 <free@plt>
  43a4ec:	str	xzr, [x19, #16]
  43a4f0:	mov	w0, w23
  43a4f4:	ldp	x19, x20, [sp, #16]
  43a4f8:	ldp	x21, x22, [sp, #32]
  43a4fc:	ldp	x23, x24, [sp, #48]
  43a500:	ldp	x25, x26, [sp, #64]
  43a504:	ldp	x27, x28, [sp, #80]
  43a508:	ldp	x29, x30, [sp], #160
  43a50c:	ret
  43a510:	mov	w0, #0x1                   	// #1
  43a514:	strb	w0, [x20, #417]
  43a518:	strb	w0, [x1, #210]
  43a51c:	ldrh	w0, [x1, #208]
  43a520:	cbz	w0, 43a4b8 <ferror@plt+0x36ee8>
  43a524:	b	43a49c <ferror@plt+0x36ecc>
  43a528:	ldrb	w0, [x0, #18]
  43a52c:	tbz	w0, #1, 43a4c0 <ferror@plt+0x36ef0>
  43a530:	b	43a49c <ferror@plt+0x36ecc>
  43a534:	mov	w2, w26
  43a538:	mov	x1, x19
  43a53c:	mov	x0, x20
  43a540:	bl	439ad4 <ferror@plt+0x36504>
  43a544:	ands	w24, w0, #0xff
  43a548:	b.eq	43a49c <ferror@plt+0x36ecc>  // b.none
  43a54c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  43a550:	ldr	x1, [x0, #600]
  43a554:	cbz	x1, 43a5a8 <ferror@plt+0x36fd8>
  43a558:	cbnz	w25, 43a564 <ferror@plt+0x36f94>
  43a55c:	ldrb	w0, [x1, #8]
  43a560:	cbz	w0, 43a5a8 <ferror@plt+0x36fd8>
  43a564:	ldr	x0, [x19, #120]
  43a568:	str	x0, [sp, #120]
  43a56c:	adrp	x4, 439000 <ferror@plt+0x35a30>
  43a570:	add	x0, sp, #0x78
  43a574:	ldr	x2, [x1], #16
  43a578:	add	x4, x4, #0xa54
  43a57c:	mov	x3, #0x20                  	// #32
  43a580:	strb	wzr, [sp, #144]
  43a584:	strb	w25, [sp, #145]
  43a588:	str	x19, [sp, #152]
  43a58c:	bl	403060 <bsearch@plt>
  43a590:	cbz	x0, 43a5a8 <ferror@plt+0x36fd8>
  43a594:	cbnz	w25, 43a49c <ferror@plt+0x36ecc>
  43a598:	mov	w0, #0x1                   	// #1
  43a59c:	strb	w0, [x20, #417]
  43a5a0:	strb	w0, [x19, #210]
  43a5a4:	b	43a49c <ferror@plt+0x36ecc>
  43a5a8:	ldrb	w0, [x20, #417]
  43a5ac:	cbz	w0, 43a6cc <ferror@plt+0x370fc>
  43a5b0:	ldr	x21, [x20, #280]
  43a5b4:	mov	w27, #0xffffffff            	// #-1
  43a5b8:	cbz	x21, 43a6cc <ferror@plt+0x370fc>
  43a5bc:	cmp	x19, x21
  43a5c0:	b.ne	43a5cc <ferror@plt+0x36ffc>  // b.any
  43a5c4:	ldr	x21, [x21, #32]
  43a5c8:	b	43a5b8 <ferror@plt+0x36fe8>
  43a5cc:	cbnz	w25, 43a5d8 <ferror@plt+0x37008>
  43a5d0:	ldrb	w0, [x21, #210]
  43a5d4:	cbz	w0, 43a5c4 <ferror@plt+0x36ff4>
  43a5d8:	ldr	w0, [x21, #204]
  43a5dc:	cbnz	w0, 43a5c4 <ferror@plt+0x36ff4>
  43a5e0:	ldr	x0, [x19, #160]
  43a5e4:	ldr	x1, [x21, #160]
  43a5e8:	cmp	x1, x0
  43a5ec:	b.ne	43a5c4 <ferror@plt+0x36ff4>  // b.any
  43a5f0:	ldr	x0, [x19, #120]
  43a5f4:	ldr	x1, [x21, #120]
  43a5f8:	cmp	x1, x0
  43a5fc:	b.ne	43a5c4 <ferror@plt+0x36ff4>  // b.any
  43a600:	ldr	x0, [x21, #40]
  43a604:	cbz	x0, 43a6bc <ferror@plt+0x370ec>
  43a608:	ldrb	w0, [x21, #213]
  43a60c:	cbnz	w0, 43a6bc <ferror@plt+0x370ec>
  43a610:	ldr	x2, [x21, #64]
  43a614:	mov	x1, #0xd8                  	// #216
  43a618:	mov	x0, #0x1                   	// #1
  43a61c:	str	x2, [sp, #104]
  43a620:	ldr	x28, [x21]
  43a624:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  43a628:	mov	x22, x0
  43a62c:	ldr	x0, [x20]
  43a630:	ldr	x2, [sp, #104]
  43a634:	cmp	x0, #0x0
  43a638:	cset	w0, eq  // eq = none
  43a63c:	str	x2, [x22, #64]
  43a640:	str	w27, [x22, #200]
  43a644:	strb	w0, [x22, #212]
  43a648:	mov	x0, x28
  43a64c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  43a650:	str	x0, [x22]
  43a654:	ldr	x0, [x21, #8]
  43a658:	str	x0, [x22, #8]
  43a65c:	mov	w2, w26
  43a660:	mov	x1, x22
  43a664:	mov	x0, x20
  43a668:	bl	439ad4 <ferror@plt+0x36504>
  43a66c:	ands	w28, w0, #0xff
  43a670:	b.eq	43a698 <ferror@plt+0x370c8>  // b.none
  43a674:	ldr	x0, [x19, #120]
  43a678:	ldr	x2, [x22, #120]
  43a67c:	cmp	x2, x0
  43a680:	b.ne	43a6c4 <ferror@plt+0x370f4>  // b.any
  43a684:	ldr	x1, [x19, #40]
  43a688:	ldr	x0, [x22, #40]
  43a68c:	bl	4031e0 <memcmp@plt>
  43a690:	cmp	w0, #0x0
  43a694:	cset	w28, eq  // eq = none
  43a698:	ldr	x0, [x21, #40]
  43a69c:	cbz	x0, 43a6b4 <ferror@plt+0x370e4>
  43a6a0:	ldrb	w0, [x21, #213]
  43a6a4:	cbnz	w0, 43a6b4 <ferror@plt+0x370e4>
  43a6a8:	str	xzr, [x22, #8]
  43a6ac:	mov	x0, x22
  43a6b0:	bl	439140 <ferror@plt+0x35b70>
  43a6b4:	cbz	w28, 43a5c4 <ferror@plt+0x36ff4>
  43a6b8:	b	43a49c <ferror@plt+0x36ecc>
  43a6bc:	mov	x22, x21
  43a6c0:	b	43a65c <ferror@plt+0x3708c>
  43a6c4:	mov	w28, #0x0                   	// #0
  43a6c8:	b	43a698 <ferror@plt+0x370c8>
  43a6cc:	ldr	x1, [x20]
  43a6d0:	cbz	x1, 43a798 <ferror@plt+0x371c8>
  43a6d4:	ldr	x0, [x19, #64]
  43a6d8:	cbz	x0, 43a798 <ferror@plt+0x371c8>
  43a6dc:	ldrb	w4, [x1, #106]
  43a6e0:	ldrb	w21, [x0, #20]
  43a6e4:	cmp	w21, w4, uxtb
  43a6e8:	csel	w21, w21, w4, cs  // cs = hs, nlast
  43a6ec:	and	w21, w21, #0xff
  43a6f0:	cmp	w21, #0x0
  43a6f4:	ldr	w1, [x20, #1200]
  43a6f8:	cset	w0, ne  // ne = any
  43a6fc:	cmp	w1, w0
  43a700:	b.le	43a728 <ferror@plt+0x37158>
  43a704:	ldrh	w0, [x19, #208]
  43a708:	cbnz	w0, 43a728 <ferror@plt+0x37158>
  43a70c:	ldrb	w0, [x19, #212]
  43a710:	cbz	w0, 43a71c <ferror@plt+0x3714c>
  43a714:	ldrb	w0, [x20, #1206]
  43a718:	cbnz	w0, 43a728 <ferror@plt+0x37158>
  43a71c:	ldr	x1, [x19, #8]
  43a720:	ldr	x0, [x20, #712]
  43a724:	bl	44575c <ferror@plt+0x4218c>
  43a728:	ldrh	w0, [x19, #208]
  43a72c:	strb	wzr, [x19, #213]
  43a730:	add	w0, w0, #0x1
  43a734:	strh	w0, [x19, #208]
  43a738:	ldr	x1, [x19, #40]
  43a73c:	ldrb	w0, [x20, #1155]
  43a740:	ldr	x2, [x19, #120]
  43a744:	cbz	w0, 43a750 <ferror@plt+0x37180>
  43a748:	ldrb	w23, [x20, #1244]
  43a74c:	eor	w23, w23, #0x1
  43a750:	mov	w3, w23
  43a754:	mov	x0, x20
  43a758:	bl	434db4 <ferror@plt+0x317e4>
  43a75c:	strb	w21, [x0, #106]
  43a760:	mov	w4, w21
  43a764:	mov	w23, w24
  43a768:	ldr	x2, [x19, #8]
  43a76c:	mov	w3, #0x1                   	// #1
  43a770:	ldr	x1, [x19, #48]
  43a774:	str	x1, [x0, #40]
  43a778:	str	x19, [x0, #80]
  43a77c:	mov	w0, #0x1                   	// #1
  43a780:	str	xzr, [x20, #424]
  43a784:	mov	w1, #0x0                   	// #0
  43a788:	strb	w0, [x20, #440]
  43a78c:	mov	x0, x20
  43a790:	bl	434614 <ferror@plt+0x31044>
  43a794:	b	43a4f0 <ferror@plt+0x36f20>
  43a798:	mov	w21, #0x0                   	// #0
  43a79c:	b	43a6f0 <ferror@plt+0x37120>
  43a7a0:	mov	w2, #0x1                   	// #1
  43a7a4:	strb	w2, [x0, #417]
  43a7a8:	strb	w2, [x1, #210]
  43a7ac:	ret
  43a7b0:	stp	x29, x30, [sp, #-64]!
  43a7b4:	cmp	w3, #0x3
  43a7b8:	mov	x29, sp
  43a7bc:	stp	x19, x20, [sp, #16]
  43a7c0:	mov	x19, x0
  43a7c4:	mov	w20, w3
  43a7c8:	stp	x21, x22, [sp, #32]
  43a7cc:	mov	x21, x1
  43a7d0:	mov	w22, w4
  43a7d4:	stp	x23, x24, [sp, #48]
  43a7d8:	mov	w24, w2
  43a7dc:	b.ne	43a7f8 <ferror@plt+0x37228>  // b.any
  43a7e0:	ldr	x1, [x19, #488]
  43a7e4:	ldr	x0, [x0, #448]
  43a7e8:	ldr	x1, [x1, #16]
  43a7ec:	cmp	x0, x1
  43a7f0:	b.eq	43a7f8 <ferror@plt+0x37228>  // b.none
  43a7f4:	stur	wzr, [x0, #-24]
  43a7f8:	mov	w2, w24
  43a7fc:	mov	w3, w20
  43a800:	mov	x1, x21
  43a804:	mov	x0, x19
  43a808:	bl	43992c <ferror@plt+0x3635c>
  43a80c:	mov	x2, x0
  43a810:	cbnz	x0, 43a82c <ferror@plt+0x3725c>
  43a814:	mov	w0, #0x0                   	// #0
  43a818:	ldp	x19, x20, [sp, #16]
  43a81c:	ldp	x21, x22, [sp, #32]
  43a820:	ldp	x23, x24, [sp, #48]
  43a824:	ldp	x29, x30, [sp], #64
  43a828:	ret
  43a82c:	cmp	w20, #0x4
  43a830:	mov	x1, x21
  43a834:	cset	w23, eq  // eq = none
  43a838:	mov	w6, w22
  43a83c:	mov	w5, w23
  43a840:	mov	w4, w24
  43a844:	mov	x0, x19
  43a848:	mov	w3, #0x0                   	// #0
  43a84c:	bl	439ca4 <ferror@plt+0x366d4>
  43a850:	cmp	x0, #0x0
  43a854:	mov	x21, x0
  43a858:	csel	w23, w23, wzr, eq  // eq = none
  43a85c:	cbnz	w23, 43a814 <ferror@plt+0x37244>
  43a860:	ldr	x0, [x0, #16]
  43a864:	cbz	x0, 43a8a8 <ferror@plt+0x372d8>
  43a868:	mov	w23, #0x0                   	// #0
  43a86c:	cmp	w20, #0x2
  43a870:	mov	x1, x21
  43a874:	cset	w2, eq  // eq = none
  43a878:	mov	w3, w22
  43a87c:	mov	x0, x19
  43a880:	bl	43a478 <ferror@plt+0x36ea8>
  43a884:	and	w0, w0, #0xff
  43a888:	eor	w1, w0, #0x1
  43a88c:	tst	w23, w1
  43a890:	b.eq	43a818 <ferror@plt+0x37248>  // b.none
  43a894:	ldr	x1, [x19, #40]
  43a898:	ldr	w0, [x1, #56]
  43a89c:	add	w0, w0, #0x1
  43a8a0:	str	w0, [x1, #56]
  43a8a4:	b	43a814 <ferror@plt+0x37244>
  43a8a8:	ldr	w0, [x21, #204]
  43a8ac:	cbnz	w0, 43a868 <ferror@plt+0x37298>
  43a8b0:	sub	w0, w20, #0x3
  43a8b4:	cmp	w0, #0x1
  43a8b8:	b.ls	43a868 <ferror@plt+0x37298>  // b.plast
  43a8bc:	ldr	x0, [x19, #40]
  43a8c0:	ldr	w1, [x0, #56]
  43a8c4:	bl	4402b4 <ferror@plt+0x3cce4>
  43a8c8:	mov	w23, w0
  43a8cc:	ldr	x0, [x19, #40]
  43a8d0:	mov	w1, w22
  43a8d4:	bl	4402b4 <ferror@plt+0x3cce4>
  43a8d8:	cmp	w23, w0
  43a8dc:	b.le	43a868 <ferror@plt+0x37298>
  43a8e0:	ldr	x1, [x19, #40]
  43a8e4:	mov	w23, #0x1                   	// #1
  43a8e8:	ldr	w0, [x1, #56]
  43a8ec:	sub	w0, w0, #0x1
  43a8f0:	str	w0, [x1, #56]
  43a8f4:	b	43a86c <ferror@plt+0x3729c>
  43a8f8:	stp	x29, x30, [sp, #-32]!
  43a8fc:	mov	x29, sp
  43a900:	stp	x19, x20, [sp, #16]
  43a904:	mov	x19, x1
  43a908:	ldr	x20, [x0, #296]
  43a90c:	mov	x0, x1
  43a910:	bl	45b5a8 <ferror@plt+0x57fd8>
  43a914:	mov	w2, w0
  43a918:	mov	x1, x19
  43a91c:	mov	x0, x20
  43a920:	bl	45b108 <ferror@plt+0x57b38>
  43a924:	cbz	x0, 43a944 <ferror@plt+0x37374>
  43a928:	ldr	x1, [x0, #8]
  43a92c:	cbz	x1, 43a93c <ferror@plt+0x3736c>
  43a930:	ldr	x1, [x0, #24]
  43a934:	ldr	w1, [x1, #204]
  43a938:	cbz	w1, 43a944 <ferror@plt+0x37374>
  43a93c:	ldr	x0, [x0]
  43a940:	b	43a924 <ferror@plt+0x37354>
  43a944:	cmp	x0, #0x0
  43a948:	cset	w0, ne  // ne = any
  43a94c:	ldp	x19, x20, [sp, #16]
  43a950:	ldp	x29, x30, [sp], #32
  43a954:	ret
  43a958:	stp	x29, x30, [sp, #-48]!
  43a95c:	mov	x29, sp
  43a960:	stp	x21, x22, [sp, #32]
  43a964:	mov	x21, x0
  43a968:	ldr	x22, [x0, #296]
  43a96c:	mov	x0, x1
  43a970:	stp	x19, x20, [sp, #16]
  43a974:	mov	x19, x1
  43a978:	mov	w20, w2
  43a97c:	bl	45b5a8 <ferror@plt+0x57fd8>
  43a980:	mov	w2, w0
  43a984:	mov	x1, x19
  43a988:	mov	x0, x22
  43a98c:	bl	45b108 <ferror@plt+0x57b38>
  43a990:	mov	x19, x0
  43a994:	tbz	w20, #31, 43a9a8 <ferror@plt+0x373d8>
  43a998:	ldr	x0, [x21, #40]
  43a99c:	mov	w1, w20
  43a9a0:	bl	43f674 <ferror@plt+0x3c0a4>
  43a9a4:	mov	w20, w0
  43a9a8:	cbz	x19, 43a9d4 <ferror@plt+0x37404>
  43a9ac:	ldr	x0, [x19, #8]
  43a9b0:	cbz	x0, 43a9cc <ferror@plt+0x373fc>
  43a9b4:	ldr	x0, [x19, #24]
  43a9b8:	ldr	w0, [x0, #204]
  43a9bc:	cbnz	w0, 43a9cc <ferror@plt+0x373fc>
  43a9c0:	ldr	w0, [x19, #16]
  43a9c4:	cmp	w0, w20
  43a9c8:	b.ls	43a9d4 <ferror@plt+0x37404>  // b.plast
  43a9cc:	ldr	x19, [x19]
  43a9d0:	b	43a9a8 <ferror@plt+0x373d8>
  43a9d4:	cmp	x19, #0x0
  43a9d8:	cset	w0, ne  // ne = any
  43a9dc:	ldp	x19, x20, [sp, #16]
  43a9e0:	ldp	x21, x22, [sp, #32]
  43a9e4:	ldp	x29, x30, [sp], #48
  43a9e8:	ret
  43a9ec:	stp	x29, x30, [sp, #-64]!
  43a9f0:	mov	x3, #0x0                   	// #0
  43a9f4:	mov	x29, sp
  43a9f8:	stp	x19, x20, [sp, #16]
  43a9fc:	mov	x19, x0
  43aa00:	adrp	x20, 403000 <memset@plt>
  43aa04:	add	x20, x20, #0x2a0
  43aa08:	stp	x21, x22, [sp, #32]
  43aa0c:	adrp	x21, 45d000 <_obstack_memory_used@@Base+0xc10>
  43aa10:	adrp	x22, 439000 <ferror@plt+0x35a30>
  43aa14:	add	x21, x21, #0x6f0
  43aa18:	add	x22, x22, #0x124
  43aa1c:	str	x23, [sp, #48]
  43aa20:	adrp	x23, 439000 <ferror@plt+0x35a30>
  43aa24:	add	x23, x23, #0x214
  43aa28:	mov	x5, x20
  43aa2c:	mov	x4, x21
  43aa30:	mov	x1, x22
  43aa34:	mov	x2, x23
  43aa38:	mov	x0, #0x7f                  	// #127
  43aa3c:	bl	45af10 <ferror@plt+0x57940>
  43aa40:	str	x0, [x19, #296]
  43aa44:	mov	x5, x20
  43aa48:	mov	x4, x21
  43aa4c:	mov	x2, x23
  43aa50:	mov	x1, x22
  43aa54:	mov	x3, #0x0                   	// #0
  43aa58:	mov	x0, #0x7f                  	// #127
  43aa5c:	bl	45af10 <ferror@plt+0x57940>
  43aa60:	str	x0, [x19, #304]
  43aa64:	mov	x0, #0xff0                 	// #4080
  43aa68:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43aa6c:	str	wzr, [x0]
  43aa70:	ldr	x1, [x19, #312]
  43aa74:	str	x1, [x0, #8]
  43aa78:	str	x0, [x19, #312]
  43aa7c:	mov	x5, x20
  43aa80:	mov	x4, x21
  43aa84:	mov	x3, #0x0                   	// #0
  43aa88:	adrp	x2, 439000 <ferror@plt+0x35a30>
  43aa8c:	adrp	x1, 45b000 <ferror@plt+0x57a30>
  43aa90:	add	x2, x2, #0x1f8
  43aa94:	add	x1, x1, #0x5a8
  43aa98:	mov	x0, #0x7f                  	// #127
  43aa9c:	bl	45af10 <ferror@plt+0x57940>
  43aaa0:	ldp	x21, x22, [sp, #32]
  43aaa4:	mov	x4, x20
  43aaa8:	ldr	x23, [sp, #48]
  43aaac:	str	x0, [x19, #320]
  43aab0:	add	x0, x19, #0x148
  43aab4:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xc10>
  43aab8:	ldp	x19, x20, [sp, #16]
  43aabc:	add	x3, x3, #0x6bc
  43aac0:	ldp	x29, x30, [sp], #64
  43aac4:	mov	x2, #0x0                   	// #0
  43aac8:	mov	x1, #0x0                   	// #0
  43aacc:	b	45c200 <_obstack_begin@@Base>
  43aad0:	stp	x29, x30, [sp, #-32]!
  43aad4:	mov	x29, sp
  43aad8:	stp	x19, x20, [sp, #16]
  43aadc:	mov	x19, x0
  43aae0:	ldr	x0, [x0, #296]
  43aae4:	bl	45af58 <ferror@plt+0x57988>
  43aae8:	ldr	x0, [x19, #304]
  43aaec:	bl	45af58 <ferror@plt+0x57988>
  43aaf0:	ldr	x0, [x19, #320]
  43aaf4:	bl	45af58 <ferror@plt+0x57988>
  43aaf8:	add	x0, x19, #0x148
  43aafc:	mov	x1, #0x0                   	// #0
  43ab00:	bl	45c37c <_obstack_free@@Base>
  43ab04:	ldr	x0, [x19, #312]
  43ab08:	cbz	x0, 43ab1c <ferror@plt+0x3754c>
  43ab0c:	ldr	x20, [x0, #8]
  43ab10:	bl	4032a0 <free@plt>
  43ab14:	mov	x0, x20
  43ab18:	b	43ab08 <ferror@plt+0x37538>
  43ab1c:	ldr	x0, [x19, #280]
  43ab20:	cbz	x0, 43ab34 <ferror@plt+0x37564>
  43ab24:	ldr	x19, [x0, #32]
  43ab28:	bl	439140 <ferror@plt+0x35b70>
  43ab2c:	mov	x0, x19
  43ab30:	b	43ab20 <ferror@plt+0x37550>
  43ab34:	ldp	x19, x20, [sp, #16]
  43ab38:	ldp	x29, x30, [sp], #32
  43ab3c:	ret
  43ab40:	stp	x29, x30, [sp, #-32]!
  43ab44:	mov	x29, sp
  43ab48:	str	x19, [sp, #16]
  43ab4c:	mov	x19, x0
  43ab50:	bl	43aad0 <ferror@plt+0x37500>
  43ab54:	mov	x0, x19
  43ab58:	str	xzr, [x19, #280]
  43ab5c:	str	xzr, [x19, #312]
  43ab60:	ldr	x19, [sp, #16]
  43ab64:	ldp	x29, x30, [sp], #32
  43ab68:	b	43a9ec <ferror@plt+0x3741c>
  43ab6c:	ldr	x2, [x0]
  43ab70:	mov	w6, #0x0                   	// #0
  43ab74:	mov	w5, #0x0                   	// #0
  43ab78:	mov	w4, #0x0                   	// #0
  43ab7c:	mov	w3, #0x1                   	// #1
  43ab80:	ldr	x2, [x2, #80]
  43ab84:	ldr	x2, [x2, #64]
  43ab88:	b	439ca4 <ferror@plt+0x366d4>
  43ab8c:	ldr	x3, [x0, #40]
  43ab90:	mov	w4, w1
  43ab94:	mov	w5, #0x18                  	// #24
  43ab98:	ldr	w1, [x3, #12]
  43ab9c:	ldr	x6, [x3]
  43aba0:	sub	w1, w1, #0x1
  43aba4:	smull	x1, w1, w5
  43aba8:	add	x5, x6, x1
  43abac:	cbz	w4, 43abbc <ferror@plt+0x375ec>
  43abb0:	cmp	w2, #0x0
  43abb4:	cset	w4, ne  // ne = any
  43abb8:	add	w4, w4, #0x1
  43abbc:	ldr	x2, [x0]
  43abc0:	strb	w4, [x2, #106]
  43abc4:	ldr	w3, [x3, #60]
  43abc8:	ldr	w1, [x6, x1]
  43abcc:	ldr	x2, [x5, #8]
  43abd0:	sub	w1, w3, w1
  43abd4:	ldrb	w3, [x5, #6]
  43abd8:	lsr	w1, w1, w3
  43abdc:	ldr	w3, [x5, #16]
  43abe0:	add	w3, w1, w3
  43abe4:	mov	w1, #0x2                   	// #2
  43abe8:	b	434614 <ferror@plt+0x31044>
  43abec:	mov	w4, #0x0                   	// #0
  43abf0:	mov	w3, #0x1                   	// #1
  43abf4:	b	434614 <ferror@plt+0x31044>
  43abf8:	stp	x29, x30, [sp, #-48]!
  43abfc:	mov	x29, sp
  43ac00:	stp	x19, x20, [sp, #16]
  43ac04:	mov	x19, x0
  43ac08:	ldr	x0, [x0, #296]
  43ac0c:	str	xzr, [sp, #32]
  43ac10:	bl	45ad64 <ferror@plt+0x57794>
  43ac14:	str	x0, [sp, #40]
  43ac18:	ldr	x0, [x19, #296]
  43ac1c:	add	x2, sp, #0x20
  43ac20:	adrp	x1, 439000 <ferror@plt+0x35a30>
  43ac24:	add	x1, x1, #0x178
  43ac28:	bl	45b52c <ferror@plt+0x57f5c>
  43ac2c:	ldr	x0, [sp, #32]
  43ac30:	cbz	x0, 43ac9c <ferror@plt+0x376cc>
  43ac34:	ldr	x1, [sp, #40]
  43ac38:	adrp	x3, 439000 <ferror@plt+0x35a30>
  43ac3c:	add	x3, x3, #0x550
  43ac40:	mov	x2, #0x8                   	// #8
  43ac44:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  43ac48:	mov	x20, #0x0                   	// #0
  43ac4c:	bl	402e60 <qsort@plt>
  43ac50:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43ac54:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  43ac58:	add	x1, x1, #0x3c9
  43ac5c:	add	x0, x0, #0x910
  43ac60:	bl	403290 <dgettext@plt>
  43ac64:	ldr	x1, [x19, #1264]
  43ac68:	bl	403460 <fputs_unlocked@plt>
  43ac6c:	ldp	x0, x1, [sp, #32]
  43ac70:	cmp	x1, x20
  43ac74:	b.ls	43ac98 <ferror@plt+0x376c8>  // b.plast
  43ac78:	ldr	x1, [x19, #1264]
  43ac7c:	ldr	x0, [x0, x20, lsl #3]
  43ac80:	add	x20, x20, #0x1
  43ac84:	bl	403460 <fputs_unlocked@plt>
  43ac88:	ldr	x1, [x19, #1264]
  43ac8c:	mov	w0, #0xa                   	// #10
  43ac90:	bl	402eb0 <putc_unlocked@plt>
  43ac94:	b	43ac6c <ferror@plt+0x3769c>
  43ac98:	bl	4032a0 <free@plt>
  43ac9c:	ldp	x19, x20, [sp, #16]
  43aca0:	ldp	x29, x30, [sp], #48
  43aca4:	ret
  43aca8:	stp	x29, x30, [sp, #-48]!
  43acac:	mov	w3, #0x0                   	// #0
  43acb0:	mov	x29, sp
  43acb4:	stp	x19, x20, [sp, #16]
  43acb8:	mov	x20, x0
  43acbc:	mov	x19, x1
  43acc0:	str	x21, [sp, #32]
  43acc4:	mov	w21, w2
  43acc8:	bl	43992c <ferror@plt+0x3635c>
  43accc:	cbnz	x0, 43ace4 <ferror@plt+0x37714>
  43acd0:	mov	w0, #0xffffffff            	// #-1
  43acd4:	ldp	x19, x20, [sp, #16]
  43acd8:	ldr	x21, [sp, #32]
  43acdc:	ldp	x29, x30, [sp], #48
  43ace0:	ret
  43ace4:	mov	x2, x0
  43ace8:	mov	x1, x19
  43acec:	mov	w4, w21
  43acf0:	mov	x0, x20
  43acf4:	mov	w6, #0x0                   	// #0
  43acf8:	mov	w5, #0x0                   	// #0
  43acfc:	mov	w3, #0x0                   	// #0
  43ad00:	bl	439ca4 <ferror@plt+0x366d4>
  43ad04:	mov	x19, x0
  43ad08:	ldr	w0, [x0, #204]
  43ad0c:	cbnz	w0, 43acd0 <ferror@plt+0x37700>
  43ad10:	ldr	w0, [x19, #200]
  43ad14:	cmn	w0, #0x1
  43ad18:	b.eq	43ad28 <ferror@plt+0x37758>  // b.none
  43ad1c:	bl	403120 <close@plt>
  43ad20:	mov	w0, #0xffffffff            	// #-1
  43ad24:	str	w0, [x19, #200]
  43ad28:	ldr	x0, [x20]
  43ad2c:	ldr	x1, [x19, #160]
  43ad30:	ldr	x0, [x0, #80]
  43ad34:	ldr	x0, [x0, #160]
  43ad38:	cmp	x1, x0
  43ad3c:	cset	w0, gt
  43ad40:	b	43acd4 <ferror@plt+0x37704>
  43ad44:	mov	w4, #0x0                   	// #0
  43ad48:	mov	w3, #0x3                   	// #3
  43ad4c:	mov	w2, #0x0                   	// #0
  43ad50:	b	43a7b0 <ferror@plt+0x371e0>
  43ad54:	mov	w4, #0x0                   	// #0
  43ad58:	mov	w3, #0x4                   	// #4
  43ad5c:	mov	w2, #0x1                   	// #1
  43ad60:	b	43a7b0 <ferror@plt+0x371e0>
  43ad64:	mov	x3, x0
  43ad68:	mov	x0, x2
  43ad6c:	ldrb	w2, [x3, #440]
  43ad70:	cbz	w2, 43ad84 <ferror@plt+0x377b4>
  43ad74:	ldr	x2, [x1, #56]
  43ad78:	cbnz	x2, 43ad84 <ferror@plt+0x377b4>
  43ad7c:	ldr	x2, [x3, #424]
  43ad80:	str	x2, [x1, #56]
  43ad84:	strb	wzr, [x3, #440]
  43ad88:	cbz	x0, 43ada4 <ferror@plt+0x377d4>
  43ad8c:	ldr	x2, [x1, #48]
  43ad90:	cmp	x2, x0
  43ad94:	b.ne	43ada0 <ferror@plt+0x377d0>  // b.any
  43ad98:	stp	xzr, xzr, [x1, #40]
  43ad9c:	strb	wzr, [x1, #213]
  43ada0:	b	4032a0 <free@plt>
  43ada4:	ret
  43ada8:	ldr	x0, [x0]
  43adac:	ret
  43adb0:	add	x0, x0, #0x48
  43adb4:	ret
  43adb8:	stp	x29, x30, [sp, #-48]!
  43adbc:	cmp	w3, #0x0
  43adc0:	mov	x29, sp
  43adc4:	stp	x19, x20, [sp, #16]
  43adc8:	mov	x20, x0
  43adcc:	cset	w0, ne  // ne = any
  43add0:	mov	x19, x1
  43add4:	stp	x1, x1, [x20, #200]
  43add8:	strb	w0, [x20, #416]
  43addc:	str	x21, [sp, #32]
  43ade0:	mov	x21, x2
  43ade4:	cbz	x19, 43ae0c <ferror@plt+0x3783c>
  43ade8:	ldr	x0, [x19, #8]
  43adec:	str	xzr, [x19, #32]
  43adf0:	bl	402d50 <strlen@plt>
  43adf4:	str	w0, [x19, #16]
  43adf8:	cmp	x19, x21
  43adfc:	b.ne	43ae04 <ferror@plt+0x37834>  // b.any
  43ae00:	str	x19, [x20, #208]
  43ae04:	ldr	x19, [x19]
  43ae08:	b	43ade4 <ferror@plt+0x37814>
  43ae0c:	ldp	x19, x20, [sp, #16]
  43ae10:	ldr	x21, [sp, #32]
  43ae14:	ldp	x29, x30, [sp], #48
  43ae18:	ret
  43ae1c:	ldr	x0, [x0, #8]
  43ae20:	ret
  43ae24:	ldr	x0, [x0, #64]
  43ae28:	ret
  43ae2c:	ldr	x0, [x0]
  43ae30:	ret
  43ae34:	ldr	x0, [x0, #80]
  43ae38:	ret
  43ae3c:	ldr	x0, [x0, #72]
  43ae40:	ret
  43ae44:	stp	x29, x30, [sp, #-80]!
  43ae48:	mov	x29, sp
  43ae4c:	stp	x23, x24, [sp, #48]
  43ae50:	mov	x23, x0
  43ae54:	mov	x24, x1
  43ae58:	mov	x0, #0x0                   	// #0
  43ae5c:	stp	x19, x20, [sp, #16]
  43ae60:	ldr	x1, [x23, #280]
  43ae64:	stp	x21, x22, [sp, #32]
  43ae68:	stp	x25, x26, [sp, #64]
  43ae6c:	cbz	x1, 43ae7c <ferror@plt+0x378ac>
  43ae70:	add	x0, x0, #0x1
  43ae74:	ldr	x1, [x1, #32]
  43ae78:	b	43ae6c <ferror@plt+0x3789c>
  43ae7c:	lsl	x0, x0, #5
  43ae80:	adrp	x25, 476000 <_obstack_memory_used@@Base+0x19c10>
  43ae84:	add	x1, x0, #0x10
  43ae88:	mov	x0, #0x1                   	// #1
  43ae8c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  43ae90:	add	x25, x25, #0x901
  43ae94:	ldr	x19, [x23, #280]
  43ae98:	mov	x20, x0
  43ae9c:	str	xzr, [x0]
  43aea0:	strb	wzr, [x0, #8]
  43aea4:	ldr	x21, [x20]
  43aea8:	cbz	x19, 43af90 <ferror@plt+0x379c0>
  43aeac:	ldrb	w0, [x19, #211]
  43aeb0:	cbnz	w0, 43af10 <ferror@plt+0x37940>
  43aeb4:	ldr	w0, [x19, #204]
  43aeb8:	cbnz	w0, 43af10 <ferror@plt+0x37940>
  43aebc:	ldrh	w0, [x19, #208]
  43aec0:	cbz	w0, 43af10 <ferror@plt+0x37940>
  43aec4:	add	x0, x21, #0x1
  43aec8:	ldrb	w1, [x19, #210]
  43aecc:	str	x0, [x20]
  43aed0:	add	x0, x20, x0, lsl #5
  43aed4:	strb	w1, [x0, #8]
  43aed8:	ldrb	w0, [x20, #8]
  43aedc:	ldrb	w1, [x19, #210]
  43aee0:	orr	w0, w0, w1
  43aee4:	strb	w0, [x20, #8]
  43aee8:	ldrb	w0, [x19, #213]
  43aeec:	cbz	w0, 43af18 <ferror@plt+0x37948>
  43aef0:	ldr	x0, [x19, #40]
  43aef4:	add	x2, x20, x21, lsl #5
  43aef8:	ldr	x1, [x19, #120]
  43aefc:	add	x2, x2, #0x18
  43af00:	bl	459ca0 <ferror@plt+0x566d0>
  43af04:	add	x21, x20, x21, lsl #5
  43af08:	ldr	x0, [x19, #120]
  43af0c:	str	x0, [x21, #16]
  43af10:	ldr	x19, [x19, #32]
  43af14:	b	43aea4 <ferror@plt+0x378d4>
  43af18:	ldr	w26, [x19, #200]
  43af1c:	mov	x0, x19
  43af20:	bl	43955c <ferror@plt+0x35f8c>
  43af24:	ands	w22, w0, #0xff
  43af28:	b.ne	43af64 <ferror@plt+0x37994>  // b.any
  43af2c:	mov	x1, x19
  43af30:	mov	x0, x23
  43af34:	mov	w3, #0x0                   	// #0
  43af38:	mov	w2, #0x0                   	// #0
  43af3c:	bl	4396fc <ferror@plt+0x3612c>
  43af40:	mov	x0, x20
  43af44:	bl	4032a0 <free@plt>
  43af48:	mov	w0, w22
  43af4c:	ldp	x19, x20, [sp, #16]
  43af50:	ldp	x21, x22, [sp, #32]
  43af54:	ldp	x23, x24, [sp, #48]
  43af58:	ldp	x25, x26, [sp, #64]
  43af5c:	ldp	x29, x30, [sp], #80
  43af60:	ret
  43af64:	ldr	w0, [x19, #200]
  43af68:	mov	x1, x25
  43af6c:	bl	45a9e8 <ferror@plt+0x57418>
  43af70:	mov	x22, x0
  43af74:	add	x1, x20, x21, lsl #5
  43af78:	add	x1, x1, #0x18
  43af7c:	bl	459ce8 <ferror@plt+0x56718>
  43af80:	mov	x0, x22
  43af84:	bl	402ee0 <fclose@plt>
  43af88:	str	w26, [x19, #200]
  43af8c:	b	43af04 <ferror@plt+0x37934>
  43af90:	mov	x1, x21
  43af94:	add	x0, x20, #0x10
  43af98:	mov	x2, #0x20                  	// #32
  43af9c:	lsl	x21, x21, #5
  43afa0:	adrp	x3, 439000 <ferror@plt+0x35a30>
  43afa4:	add	x3, x3, #0x7f8
  43afa8:	bl	402e60 <qsort@plt>
  43afac:	mov	x3, x24
  43afb0:	add	x1, x21, #0x10
  43afb4:	mov	x0, x20
  43afb8:	mov	x2, #0x1                   	// #1
  43afbc:	bl	402d30 <fwrite_unlocked@plt>
  43afc0:	cmp	x0, #0x1
  43afc4:	cset	w22, eq  // eq = none
  43afc8:	b	43af40 <ferror@plt+0x37970>
  43afcc:	stp	x29, x30, [sp, #-80]!
  43afd0:	mov	x3, x1
  43afd4:	mov	x2, #0x1                   	// #1
  43afd8:	mov	x29, sp
  43afdc:	add	x0, sp, #0x20
  43afe0:	str	x19, [sp, #16]
  43afe4:	mov	x19, x1
  43afe8:	mov	x1, #0x10                  	// #16
  43afec:	bl	4031d0 <fread_unlocked@plt>
  43aff0:	cmp	x0, #0x1
  43aff4:	b.ne	43b040 <ferror@plt+0x37a70>  // b.any
  43aff8:	ldr	x0, [sp, #32]
  43affc:	lsl	x0, x0, #5
  43b000:	add	x0, x0, #0x10
  43b004:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43b008:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  43b00c:	ldp	x2, x3, [sp, #32]
  43b010:	str	x0, [x1, #600]
  43b014:	stp	x2, x3, [x0], #16
  43b018:	mov	x1, #0x20                  	// #32
  43b01c:	mov	x3, x19
  43b020:	ldr	x2, [sp, #32]
  43b024:	bl	4031d0 <fread_unlocked@plt>
  43b028:	ldr	x1, [sp, #32]
  43b02c:	cmp	x1, x0
  43b030:	cset	w0, eq  // eq = none
  43b034:	ldr	x19, [sp, #16]
  43b038:	ldp	x29, x30, [sp], #80
  43b03c:	ret
  43b040:	mov	w0, #0x0                   	// #0
  43b044:	b	43b034 <ferror@plt+0x37a64>
  43b048:	stp	x29, x30, [sp, #-48]!
  43b04c:	mov	x29, sp
  43b050:	stp	x19, x20, [sp, #16]
  43b054:	mov	x19, x0
  43b058:	mov	x20, x1
  43b05c:	str	x21, [sp, #32]
  43b060:	mov	w21, w2
  43b064:	bl	43992c <ferror@plt+0x3635c>
  43b068:	mov	x2, x0
  43b06c:	mov	w4, w21
  43b070:	mov	x1, x20
  43b074:	mov	x0, x19
  43b078:	mov	w6, #0x0                   	// #0
  43b07c:	mov	w5, #0x0                   	// #0
  43b080:	mov	w3, #0x0                   	// #0
  43b084:	bl	439ca4 <ferror@plt+0x366d4>
  43b088:	ldr	w0, [x0, #204]
  43b08c:	ldp	x19, x20, [sp, #16]
  43b090:	cmp	w0, #0x2
  43b094:	cset	w0, ne  // ne = any
  43b098:	ldr	x21, [sp, #32]
  43b09c:	ldp	x29, x30, [sp], #48
  43b0a0:	ret
  43b0a4:	stp	x29, x30, [sp, #-32]!
  43b0a8:	mov	x29, sp
  43b0ac:	str	x19, [sp, #16]
  43b0b0:	ldr	x19, [x0, #120]
  43b0b4:	add	x19, x19, #0x2d0
  43b0b8:	ldp	x1, x0, [x19, #24]
  43b0bc:	sub	x0, x0, x1
  43b0c0:	cmp	x0, #0x1f
  43b0c4:	b.hi	43b0d4 <ferror@plt+0x37b04>  // b.pmore
  43b0c8:	mov	x0, x19
  43b0cc:	mov	x1, #0x20                  	// #32
  43b0d0:	bl	45c22c <_obstack_newchunk@@Base>
  43b0d4:	ldp	x0, x2, [x19, #16]
  43b0d8:	add	x2, x2, #0x20
  43b0dc:	cmp	x2, x0
  43b0e0:	b.ne	43b0f0 <ferror@plt+0x37b20>  // b.any
  43b0e4:	ldrb	w1, [x19, #80]
  43b0e8:	orr	w1, w1, #0x2
  43b0ec:	strb	w1, [x19, #80]
  43b0f0:	ldr	x1, [x19, #48]
  43b0f4:	ldr	x3, [x19, #32]
  43b0f8:	add	x2, x2, x1
  43b0fc:	bic	x1, x2, x1
  43b100:	ldr	x2, [x19, #8]
  43b104:	sub	x4, x1, x2
  43b108:	sub	x2, x3, x2
  43b10c:	cmp	x4, x2
  43b110:	csel	x1, x1, x3, ls  // ls = plast
  43b114:	stp	x1, x1, [x19, #16]
  43b118:	stp	xzr, xzr, [x0]
  43b11c:	stp	xzr, xzr, [x0, #16]
  43b120:	ldr	x19, [sp, #16]
  43b124:	ldp	x29, x30, [sp], #32
  43b128:	ret
  43b12c:	stp	x29, x30, [sp, #-32]!
  43b130:	mov	x29, sp
  43b134:	str	x19, [sp, #16]
  43b138:	mov	x19, x0
  43b13c:	ldrb	w0, [x0, #1304]
  43b140:	cbz	w0, 43b160 <ferror@plt+0x37b90>
  43b144:	ldr	x0, [x19, #1088]
  43b148:	bl	445cb0 <ferror@plt+0x426e0>
  43b14c:	add	x0, x19, #0x2d0
  43b150:	mov	x1, #0x0                   	// #0
  43b154:	ldr	x19, [sp, #16]
  43b158:	ldp	x29, x30, [sp], #32
  43b15c:	b	45c37c <_obstack_free@@Base>
  43b160:	ldr	x19, [sp, #16]
  43b164:	ldp	x29, x30, [sp], #32
  43b168:	ret
  43b16c:	ldr	x0, [x0, #1088]
  43b170:	mov	w2, w2
  43b174:	mov	w3, #0x1                   	// #1
  43b178:	b	445fb0 <ferror@plt+0x429e0>
  43b17c:	stp	x29, x30, [sp, #-32]!
  43b180:	mov	x29, sp
  43b184:	stp	x19, x20, [sp, #16]
  43b188:	mov	x19, x0
  43b18c:	cbnz	x1, 43b2b4 <ferror@plt+0x37ce4>
  43b190:	mov	w0, #0x1                   	// #1
  43b194:	strb	w0, [x19, #1304]
  43b198:	mov	w0, #0xd                   	// #13
  43b19c:	bl	445c3c <ferror@plt+0x4266c>
  43b1a0:	mov	x20, x0
  43b1a4:	adrp	x0, 43b000 <ferror@plt+0x37a30>
  43b1a8:	add	x0, x0, #0xa4
  43b1ac:	adrp	x4, 403000 <memset@plt>
  43b1b0:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xc10>
  43b1b4:	str	x0, [x20, #96]
  43b1b8:	add	x4, x4, #0x2a0
  43b1bc:	add	x3, x3, #0x6bc
  43b1c0:	add	x0, x19, #0x2d0
  43b1c4:	mov	x2, #0x0                   	// #0
  43b1c8:	mov	x1, #0x0                   	// #0
  43b1cc:	bl	45c200 <_obstack_begin@@Base>
  43b1d0:	str	x19, [x20, #120]
  43b1d4:	mov	x0, x19
  43b1d8:	str	x20, [x19, #1088]
  43b1dc:	bl	4358d8 <ferror@plt+0x32308>
  43b1e0:	mov	x0, x19
  43b1e4:	bl	434b5c <ferror@plt+0x3158c>
  43b1e8:	mov	x0, x19
  43b1ec:	mov	w2, #0x7                   	// #7
  43b1f0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  43b1f4:	add	x1, x1, #0xea4
  43b1f8:	bl	43b16c <ferror@plt+0x37b9c>
  43b1fc:	str	x0, [x19, #1248]
  43b200:	mov	w2, #0x4                   	// #4
  43b204:	mov	x0, x19
  43b208:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  43b20c:	add	x1, x1, #0x651
  43b210:	bl	43b16c <ferror@plt+0x37b9c>
  43b214:	str	x0, [x19, #1256]
  43b218:	mov	w2, #0x5                   	// #5
  43b21c:	mov	x0, x19
  43b220:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  43b224:	add	x1, x1, #0x656
  43b228:	bl	43b16c <ferror@plt+0x37b9c>
  43b22c:	str	x0, [x19, #1264]
  43b230:	mov	w2, #0xb                   	// #11
  43b234:	mov	x0, x19
  43b238:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b23c:	add	x1, x1, #0x400
  43b240:	bl	43b16c <ferror@plt+0x37b9c>
  43b244:	str	x0, [x19, #1272]
  43b248:	mov	w2, #0xa                   	// #10
  43b24c:	ldrh	w1, [x0, #18]
  43b250:	orr	w1, w1, #0x10
  43b254:	strh	w1, [x0, #18]
  43b258:	mov	x0, x19
  43b25c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43b260:	add	x1, x1, #0xc5e
  43b264:	bl	43b16c <ferror@plt+0x37b9c>
  43b268:	str	x0, [x19, #1280]
  43b26c:	mov	w2, #0xf                   	// #15
  43b270:	ldrh	w1, [x0, #18]
  43b274:	orr	w1, w1, #0x10
  43b278:	strh	w1, [x0, #18]
  43b27c:	mov	x0, x19
  43b280:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b284:	add	x1, x1, #0x40c
  43b288:	bl	43b16c <ferror@plt+0x37b9c>
  43b28c:	str	x0, [x19, #1288]
  43b290:	mov	w2, #0x14                  	// #20
  43b294:	mov	x0, x19
  43b298:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b29c:	add	x1, x1, #0x41c
  43b2a0:	bl	43b16c <ferror@plt+0x37b9c>
  43b2a4:	str	x0, [x19, #1296]
  43b2a8:	ldp	x19, x20, [sp, #16]
  43b2ac:	ldp	x29, x30, [sp], #32
  43b2b0:	ret
  43b2b4:	mov	x20, x1
  43b2b8:	b	43b1d0 <ferror@plt+0x37c00>
  43b2bc:	stp	x29, x30, [sp, #-16]!
  43b2c0:	sxtw	x2, w2
  43b2c4:	mov	w3, #0x0                   	// #0
  43b2c8:	mov	x29, sp
  43b2cc:	ldr	x0, [x0, #1088]
  43b2d0:	bl	445fb0 <ferror@plt+0x429e0>
  43b2d4:	cbz	x0, 43b2e8 <ferror@plt+0x37d18>
  43b2d8:	ldrb	w0, [x0, #18]
  43b2dc:	ubfx	x0, x0, #1, #1
  43b2e0:	ldp	x29, x30, [sp], #16
  43b2e4:	ret
  43b2e8:	mov	w0, #0x0                   	// #0
  43b2ec:	b	43b2e0 <ferror@plt+0x37d10>
  43b2f0:	ldr	x0, [x0, #1088]
  43b2f4:	b	445fe8 <ferror@plt+0x42a18>
  43b2f8:	stp	x29, x30, [sp, #-48]!
  43b2fc:	mov	x29, sp
  43b300:	stp	x19, x20, [sp, #16]
  43b304:	mov	x19, x0
  43b308:	mov	w20, w2
  43b30c:	str	x21, [sp, #32]
  43b310:	mov	x21, x1
  43b314:	ldr	w1, [x0, #64]
  43b318:	ldr	w0, [x0, #60]
  43b31c:	cmp	w0, w1
  43b320:	b.ne	43b340 <ferror@plt+0x37d70>  // b.any
  43b324:	add	w0, w0, #0x64
  43b328:	lsl	w0, w0, #1
  43b32c:	str	w0, [x19, #64]
  43b330:	lsl	x1, x0, #4
  43b334:	ldr	x0, [x19, #48]
  43b338:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  43b33c:	str	x0, [x19, #48]
  43b340:	ldr	w0, [x19, #60]
  43b344:	ldr	x2, [x19, #48]
  43b348:	ubfiz	x1, x0, #4, #32
  43b34c:	add	w0, w0, #0x1
  43b350:	add	x3, x2, x1
  43b354:	str	x21, [x2, x1]
  43b358:	ldr	x21, [sp, #32]
  43b35c:	str	w20, [x3, #8]
  43b360:	str	w0, [x19, #60]
  43b364:	ldp	x19, x20, [sp, #16]
  43b368:	ldp	x29, x30, [sp], #48
  43b36c:	ret
  43b370:	stp	x29, x30, [sp, #-48]!
  43b374:	mov	x4, x2
  43b378:	mov	x29, sp
  43b37c:	str	x19, [sp, #16]
  43b380:	ldr	x19, [x0]
  43b384:	ldr	x5, [x19]
  43b388:	ldrb	w2, [x5]
  43b38c:	cmp	w2, #0x24
  43b390:	b.ne	43b3d0 <ferror@plt+0x37e00>  // b.any
  43b394:	ldrb	w1, [x0, #1146]
  43b398:	cbz	w1, 43b43c <ferror@plt+0x37e6c>
  43b39c:	add	x5, x5, #0x1
  43b3a0:	str	x5, [x19]
  43b3a4:	ldrb	w1, [x0, #1148]
  43b3a8:	cbz	w1, 43b3c8 <ferror@plt+0x37df8>
  43b3ac:	ldrb	w1, [x0, #18]
  43b3b0:	cbnz	w1, 43b3c8 <ferror@plt+0x37df8>
  43b3b4:	strb	wzr, [x0, #1148]
  43b3b8:	adrp	x2, 4c3000 <_obstack_memory_used@@Base+0x66c10>
  43b3bc:	mov	w1, #0x2                   	// #2
  43b3c0:	add	x2, x2, #0x4ed
  43b3c4:	bl	435b3c <ferror@plt+0x3256c>
  43b3c8:	mov	w0, #0x1                   	// #1
  43b3cc:	b	43b430 <ferror@plt+0x37e60>
  43b3d0:	ldrb	w3, [x0, #1147]
  43b3d4:	cbz	w3, 43b43c <ferror@plt+0x37e6c>
  43b3d8:	cmp	w2, #0x5c
  43b3dc:	b.ne	43b43c <ferror@plt+0x37e6c>  // b.any
  43b3e0:	ldrb	w6, [x5, #1]
  43b3e4:	and	w6, w6, #0xffffffdf
  43b3e8:	and	w6, w6, #0xff
  43b3ec:	cmp	w6, #0x55
  43b3f0:	b.ne	43b43c <ferror@plt+0x37e6c>  // b.any
  43b3f4:	ldr	x2, [x19, #32]
  43b3f8:	add	x5, x5, #0x2
  43b3fc:	str	x5, [x19]
  43b400:	mov	x7, #0x0                   	// #0
  43b404:	add	x5, sp, #0x2c
  43b408:	mov	x6, #0x0                   	// #0
  43b40c:	mov	w3, #0x2                   	// #2
  43b410:	sub	w3, w3, w1
  43b414:	mov	x1, x19
  43b418:	bl	42ed64 <ferror@plt+0x2b794>
  43b41c:	ands	w0, w0, #0xff
  43b420:	b.ne	43b430 <ferror@plt+0x37e60>  // b.any
  43b424:	ldr	x1, [x19]
  43b428:	sub	x1, x1, #0x2
  43b42c:	str	x1, [x19]
  43b430:	ldr	x19, [sp, #16]
  43b434:	ldp	x29, x30, [sp], #48
  43b438:	ret
  43b43c:	mov	w0, #0x0                   	// #0
  43b440:	b	43b430 <ferror@plt+0x37e60>
  43b444:	ldrb	w5, [x1]
  43b448:	mov	w3, #0x0                   	// #0
  43b44c:	mov	w4, w5
  43b450:	tbz	w4, #7, 43b460 <ferror@plt+0x37e90>
  43b454:	add	w3, w3, #0x1
  43b458:	lsl	w4, w4, #1
  43b45c:	b	43b450 <ferror@plt+0x37e80>
  43b460:	mov	w2, #0x7f                  	// #127
  43b464:	asr	w2, w2, w3
  43b468:	and	w2, w2, w5
  43b46c:	mov	w5, #0x1                   	// #1
  43b470:	sub	w5, w5, w1
  43b474:	sxtw	x2, w2
  43b478:	add	w4, w5, w1
  43b47c:	cmp	w4, w3
  43b480:	b.ge	43b4bc <ferror@plt+0x37eec>  // b.tcont
  43b484:	ldrb	w4, [x1, #1]!
  43b488:	and	x6, x4, #0x3f
  43b48c:	and	w4, w4, #0xffffffc0
  43b490:	orr	x2, x6, x2, lsl #6
  43b494:	cmp	w4, #0x80
  43b498:	b.eq	43b478 <ferror@plt+0x37ea8>  // b.none
  43b49c:	stp	x29, x30, [sp, #-16]!
  43b4a0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b4a4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b4a8:	mov	x29, sp
  43b4ac:	add	x2, x2, #0x431
  43b4b0:	add	x0, x0, #0x43d
  43b4b4:	mov	w1, #0xc89                 	// #3209
  43b4b8:	bl	403600 <ferror@plt+0x30>
  43b4bc:	mov	w1, #0x555c                	// #21852
  43b4c0:	adrp	x5, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b4c4:	add	x5, x5, #0x450
  43b4c8:	strh	w1, [x0], #2
  43b4cc:	mov	w1, #0x1c                  	// #28
  43b4d0:	lsr	x4, x2, x1
  43b4d4:	and	x4, x4, #0xf
  43b4d8:	sub	w1, w1, #0x4
  43b4dc:	cmn	w1, #0x4
  43b4e0:	ldrb	w4, [x5, x4]
  43b4e4:	strb	w4, [x0], #1
  43b4e8:	b.ne	43b4d0 <ferror@plt+0x37f00>  // b.any
  43b4ec:	sxtw	x0, w3
  43b4f0:	ret
  43b4f4:	ldrb	w1, [x0, #1154]
  43b4f8:	cbz	w1, 43b524 <ferror@plt+0x37f54>
  43b4fc:	ldrb	w1, [x0, #1167]
  43b500:	cbnz	w1, 43b524 <ferror@plt+0x37f54>
  43b504:	ldr	x1, [x0]
  43b508:	cbz	x1, 43b514 <ferror@plt+0x37f44>
  43b50c:	ldrb	w1, [x1, #106]
  43b510:	cbnz	w1, 43b538 <ferror@plt+0x37f68>
  43b514:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b518:	add	x2, x2, #0x461
  43b51c:	mov	w1, #0x2                   	// #2
  43b520:	b	435b3c <ferror@plt+0x3256c>
  43b524:	ldrb	w1, [x0, #22]
  43b528:	cbnz	w1, 43b538 <ferror@plt+0x37f68>
  43b52c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b530:	add	x2, x2, #0x489
  43b534:	b	43b51c <ferror@plt+0x37f4c>
  43b538:	ret
  43b53c:	stp	x29, x30, [sp, #-64]!
  43b540:	ands	w2, w2, #0xff
  43b544:	mov	x29, sp
  43b548:	stp	x19, x20, [sp, #16]
  43b54c:	mov	x19, x0
  43b550:	mov	x20, x3
  43b554:	stp	x21, x22, [sp, #32]
  43b558:	mov	x21, x1
  43b55c:	stp	x23, x24, [sp, #48]
  43b560:	mov	x24, x4
  43b564:	ldrb	w23, [x1]
  43b568:	ldr	x1, [x0]
  43b56c:	sub	w23, w23, #0x71
  43b570:	ldr	x22, [x1]
  43b574:	b.ne	43b5b8 <ferror@plt+0x37fe8>  // b.any
  43b578:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43b57c:	add	x0, x0, #0x228
  43b580:	mov	w5, #0x204                 	// #516
  43b584:	mov	w4, #0x43                  	// #67
  43b588:	ldrb	w6, [x22]
  43b58c:	ldrb	w3, [x22]
  43b590:	ldrh	w6, [x0, x6, lsl #1]
  43b594:	tst	w5, w6
  43b598:	b.eq	43b5ac <ferror@plt+0x37fdc>  // b.none
  43b59c:	madd	w23, w23, w4, w3
  43b5a0:	add	x22, x22, #0x1
  43b5a4:	sub	w23, w23, #0x71
  43b5a8:	b	43b588 <ferror@plt+0x37fb8>
  43b5ac:	ldurb	w0, [x22, #-1]
  43b5b0:	str	w0, [x20]
  43b5b4:	strb	wzr, [x20, #4]
  43b5b8:	str	x22, [x1]
  43b5bc:	cbz	w2, 43b5fc <ferror@plt+0x3802c>
  43b5c0:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43b5c4:	add	x22, x22, #0x228
  43b5c8:	mov	w23, #0x204                 	// #516
  43b5cc:	ldr	x1, [x19]
  43b5d0:	ldr	x0, [x1]
  43b5d4:	ldrb	w3, [x0]
  43b5d8:	ldrb	w2, [x0]
  43b5dc:	ldrh	w3, [x22, x3, lsl #1]
  43b5e0:	tst	w23, w3
  43b5e4:	b.eq	43b6ec <ferror@plt+0x3811c>  // b.none
  43b5e8:	str	w2, [x20]
  43b5ec:	add	x0, x0, #0x1
  43b5f0:	strb	wzr, [x20, #4]
  43b5f4:	str	x0, [x1]
  43b5f8:	b	43b5cc <ferror@plt+0x37ffc>
  43b5fc:	mov	x2, x20
  43b600:	mov	x0, x19
  43b604:	mov	w1, #0x0                   	// #0
  43b608:	bl	43b370 <ferror@plt+0x37da0>
  43b60c:	tst	w0, #0xff
  43b610:	b.ne	43b5c0 <ferror@plt+0x37ff0>  // b.any
  43b614:	ldr	x0, [x19, #1088]
  43b618:	sub	x3, x22, x21
  43b61c:	add	w3, w23, w3
  43b620:	sub	w2, w22, w21
  43b624:	mov	x1, x21
  43b628:	mov	w4, #0x1                   	// #1
  43b62c:	bl	445ce8 <ferror@plt+0x42718>
  43b630:	mov	x20, x0
  43b634:	str	x0, [x24]
  43b638:	ldrh	w0, [x20, #18]
  43b63c:	ubfx	x1, x0, #2, #8
  43b640:	tbz	w0, #4, 43b6d4 <ferror@plt+0x38104>
  43b644:	ldrb	w0, [x19, #18]
  43b648:	cbnz	w0, 43b6d4 <ferror@plt+0x38104>
  43b64c:	tbz	w1, #1, 43b670 <ferror@plt+0x380a0>
  43b650:	ldrb	w0, [x19, #23]
  43b654:	cbnz	w0, 43b670 <ferror@plt+0x380a0>
  43b658:	ldr	x3, [x20]
  43b65c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b660:	mov	x0, x19
  43b664:	add	x2, x2, #0x4cf
  43b668:	mov	w1, #0x3                   	// #3
  43b66c:	bl	435b3c <ferror@plt+0x3256c>
  43b670:	ldr	x0, [x19, #1272]
  43b674:	cmp	x0, x20
  43b678:	b.ne	43b6a0 <ferror@plt+0x380d0>  // b.any
  43b67c:	ldrb	w0, [x19, #22]
  43b680:	cbnz	w0, 43b6a0 <ferror@plt+0x380d0>
  43b684:	ldrb	w0, [x19, #1120]
  43b688:	cbz	w0, 43b740 <ferror@plt+0x38170>
  43b68c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b690:	add	x2, x2, #0x4ec
  43b694:	mov	x0, x19
  43b698:	mov	w1, #0x2                   	// #2
  43b69c:	bl	435b3c <ferror@plt+0x3256c>
  43b6a0:	ldr	x0, [x19, #1280]
  43b6a4:	cmp	x0, x20
  43b6a8:	b.ne	43b6b4 <ferror@plt+0x380e4>  // b.any
  43b6ac:	mov	x0, x19
  43b6b0:	bl	43b4f4 <ferror@plt+0x37f24>
  43b6b4:	ldrh	w0, [x20, #18]
  43b6b8:	tbz	w0, #9, 43b6d4 <ferror@plt+0x38104>
  43b6bc:	ldr	x3, [x20]
  43b6c0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b6c4:	mov	x0, x19
  43b6c8:	add	x2, x2, #0x578
  43b6cc:	mov	w1, #0xf                   	// #15
  43b6d0:	bl	435ba8 <ferror@plt+0x325d8>
  43b6d4:	mov	x0, x20
  43b6d8:	ldp	x19, x20, [sp, #16]
  43b6dc:	ldp	x21, x22, [sp, #32]
  43b6e0:	ldp	x23, x24, [sp, #48]
  43b6e4:	ldp	x29, x30, [sp], #64
  43b6e8:	ret
  43b6ec:	mov	x2, x20
  43b6f0:	mov	x0, x19
  43b6f4:	mov	w1, #0x0                   	// #0
  43b6f8:	bl	43b370 <ferror@plt+0x37da0>
  43b6fc:	tst	w0, #0xff
  43b700:	b.ne	43b5cc <ferror@plt+0x37ffc>  // b.any
  43b704:	ldr	x0, [x19]
  43b708:	mov	x1, x21
  43b70c:	ldr	x2, [x0]
  43b710:	mov	x0, x19
  43b714:	sub	x2, x2, x21
  43b718:	bl	42e9a4 <ferror@plt+0x2b3d4>
  43b71c:	mov	x20, x0
  43b720:	mov	x1, x21
  43b724:	ldr	x0, [x19]
  43b728:	ldr	x2, [x0]
  43b72c:	mov	x0, x19
  43b730:	sub	w2, w2, w21
  43b734:	bl	43b16c <ferror@plt+0x37b9c>
  43b738:	str	x0, [x24]
  43b73c:	b	43b638 <ferror@plt+0x38068>
  43b740:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43b744:	add	x2, x2, #0x533
  43b748:	b	43b694 <ferror@plt+0x380c4>
  43b74c:	ldrb	w2, [x1]
  43b750:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43b754:	add	x4, x4, #0x228
  43b758:	ldrb	w3, [x1]
  43b75c:	ldrh	w2, [x4, x2, lsl #1]
  43b760:	tbnz	w2, #9, 43b778 <ferror@plt+0x381a8>
  43b764:	mov	w0, #0x0                   	// #0
  43b768:	ret
  43b76c:	mov	w0, #0x0                   	// #0
  43b770:	ldp	x29, x30, [sp], #16
  43b774:	ret
  43b778:	sub	w3, w3, #0x71
  43b77c:	add	x2, x1, #0x1
  43b780:	stp	x29, x30, [sp, #-16]!
  43b784:	mov	w7, #0x204                 	// #516
  43b788:	mov	w6, #0x43                  	// #67
  43b78c:	mov	x29, sp
  43b790:	ldrb	w8, [x2]
  43b794:	ldrb	w5, [x2]
  43b798:	ldrh	w8, [x4, x8, lsl #1]
  43b79c:	tst	w7, w8
  43b7a0:	b.eq	43b7b4 <ferror@plt+0x381e4>  // b.none
  43b7a4:	madd	w3, w3, w6, w5
  43b7a8:	add	x2, x2, #0x1
  43b7ac:	sub	w3, w3, #0x71
  43b7b0:	b	43b790 <ferror@plt+0x381c0>
  43b7b4:	ldr	x0, [x0]
  43b7b8:	sub	x2, x2, x1
  43b7bc:	add	w3, w3, w2
  43b7c0:	mov	w4, #0x0                   	// #0
  43b7c4:	bl	445ce8 <ferror@plt+0x42718>
  43b7c8:	cbz	x0, 43b76c <ferror@plt+0x3819c>
  43b7cc:	ldrb	w0, [x0, #18]
  43b7d0:	ubfx	x0, x0, #1, #1
  43b7d4:	b	43b770 <ferror@plt+0x381a0>
  43b7d8:	ldrb	w2, [x0, #4]
  43b7dc:	cmp	w2, #0x35
  43b7e0:	b.ne	43b808 <ferror@plt+0x38238>  // b.any
  43b7e4:	stp	x29, x30, [sp, #-16]!
  43b7e8:	mov	x29, sp
  43b7ec:	ldr	x0, [x0, #8]
  43b7f0:	ldr	x0, [x0]
  43b7f4:	bl	403220 <strcmp@plt>
  43b7f8:	cmp	w0, #0x0
  43b7fc:	cset	w0, eq  // eq = none
  43b800:	ldp	x29, x30, [sp], #16
  43b804:	ret
  43b808:	mov	w0, #0x0                   	// #0
  43b80c:	ret
  43b810:	ret
  43b814:	stp	x29, x30, [sp, #-96]!
  43b818:	mov	x29, sp
  43b81c:	stp	x23, x24, [sp, #48]
  43b820:	ldr	x24, [x0]
  43b824:	stp	x21, x22, [sp, #32]
  43b828:	mov	x22, x0
  43b82c:	stp	x19, x20, [sp, #16]
  43b830:	ldrb	w0, [x24, #105]
  43b834:	stp	x25, x26, [sp, #64]
  43b838:	ldr	x23, [x24, #16]
  43b83c:	str	x27, [sp, #80]
  43b840:	stp	x23, x23, [x24]
  43b844:	str	xzr, [x24, #56]
  43b848:	strb	wzr, [x24, #104]
  43b84c:	tbz	w0, #1, 43b880 <ferror@plt+0x382b0>
  43b850:	ldrb	w0, [x23]
  43b854:	mov	x19, x23
  43b858:	add	x23, x23, #0x1
  43b85c:	cmp	w0, #0xa
  43b860:	b.eq	43b878 <ferror@plt+0x382a8>  // b.none
  43b864:	cmp	w0, #0xd
  43b868:	b.ne	43b850 <ferror@plt+0x38280>  // b.any
  43b86c:	ldr	x0, [x24, #32]
  43b870:	cmp	x0, x19
  43b874:	b.ne	43bbc0 <ferror@plt+0x385f0>  // b.any
  43b878:	mov	x23, x19
  43b87c:	b	43baa8 <ferror@plt+0x384d8>
  43b880:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  43b884:	mov	x20, #0x0                   	// #0
  43b888:	movi	v2.16b, #0xa
  43b88c:	add	x21, x21, #0x26c
  43b890:	movi	v3.16b, #0xd
  43b894:	mov	x25, #0x1000                	// #4096
  43b898:	b	43b914 <ferror@plt+0x38344>
  43b89c:	ldr	q1, [x23]
  43b8a0:	cmeq	v6.16b, v1.16b, v3.16b
  43b8a4:	cmeq	v0.16b, v1.16b, v2.16b
  43b8a8:	orr	v0.16b, v0.16b, v6.16b
  43b8ac:	cmeq	v6.16b, v1.16b, v5.16b
  43b8b0:	cmeq	v1.16b, v1.16b, v4.16b
  43b8b4:	orr	v0.16b, v0.16b, v6.16b
  43b8b8:	orr	v0.16b, v0.16b, v1.16b
  43b8bc:	addp	d1, v0.2d
  43b8c0:	fmov	x0, d1
  43b8c4:	cbnz	x0, 43b8d0 <ferror@plt+0x38300>
  43b8c8:	ldr	q1, [x1, #16]!
  43b8cc:	b	43b8a0 <ferror@plt+0x382d0>
  43b8d0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43b8d4:	cmp	x1, x23
  43b8d8:	csel	x23, x23, x1, cc  // cc = lo, ul, last
  43b8dc:	ldr	q1, [x0, #496]
  43b8e0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43b8e4:	and	v0.16b, v0.16b, v1.16b
  43b8e8:	ldr	q1, [x0, #512]
  43b8ec:	uaddlp	v0.8h, v0.16b
  43b8f0:	ushl	v0.8h, v0.8h, v1.8h
  43b8f4:	addv	h0, v0.8h
  43b8f8:	umov	w19, v0.h[0]
  43b8fc:	rbit	w19, w19
  43b900:	clz	w19, w19
  43b904:	add	x19, x23, w19, sxtw
  43b908:	b	43b994 <ferror@plt+0x383c4>
  43b90c:	mov	x19, x20
  43b910:	mov	x20, x19
  43b914:	and	x0, x23, #0xfff
  43b918:	and	x1, x23, #0xfffffffffffffff0
  43b91c:	movi	v5.16b, #0x5c
  43b920:	sub	x0, x25, x0
  43b924:	movi	v4.16b, #0x3f
  43b928:	cmp	x0, #0xf
  43b92c:	b.hi	43b89c <ferror@plt+0x382cc>  // b.pmore
  43b930:	ldr	q1, [x1]
  43b934:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43b938:	and	w2, w23, #0xf
  43b93c:	mov	w3, #0xffffffff            	// #-1
  43b940:	cmeq	v6.16b, v1.16b, v3.16b
  43b944:	lsl	w3, w3, w2
  43b948:	cmeq	v0.16b, v1.16b, v2.16b
  43b94c:	orr	v0.16b, v0.16b, v6.16b
  43b950:	cmeq	v6.16b, v1.16b, v5.16b
  43b954:	cmeq	v1.16b, v1.16b, v4.16b
  43b958:	orr	v0.16b, v0.16b, v6.16b
  43b95c:	orr	v0.16b, v0.16b, v1.16b
  43b960:	ldr	q1, [x0, #496]
  43b964:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43b968:	and	v0.16b, v0.16b, v1.16b
  43b96c:	ldr	q1, [x0, #512]
  43b970:	uaddlp	v0.8h, v0.16b
  43b974:	ushl	v0.8h, v0.8h, v1.8h
  43b978:	addv	h0, v0.8h
  43b97c:	umov	w2, v0.h[0]
  43b980:	ands	w19, w3, w2
  43b984:	b.eq	43b8c8 <ferror@plt+0x382f8>  // b.none
  43b988:	rbit	w19, w19
  43b98c:	clz	w19, w19
  43b990:	add	x19, x1, w19, sxtw
  43b994:	mov	x23, x19
  43b998:	ldrb	w0, [x23], #1
  43b99c:	cmp	w0, #0x5c
  43b9a0:	b.eq	43b910 <ferror@plt+0x38340>  // b.none
  43b9a4:	cmp	w0, #0x3f
  43b9a8:	b.ne	43ba80 <ferror@plt+0x384b0>  // b.any
  43b9ac:	ldrb	w0, [x19, #1]
  43b9b0:	cmp	w0, #0x3f
  43b9b4:	b.ne	43b90c <ferror@plt+0x3833c>  // b.any
  43b9b8:	ldrb	w0, [x19, #2]
  43b9bc:	ldrb	w2, [x19, #2]
  43b9c0:	ldrb	w0, [x21, x0]
  43b9c4:	cbz	w0, 43b90c <ferror@plt+0x3833c>
  43b9c8:	mov	x0, x24
  43b9cc:	mov	x1, x19
  43b9d0:	bl	43b2f8 <ferror@plt+0x37d28>
  43b9d4:	movi	v2.16b, #0xa
  43b9d8:	ldrb	w0, [x22, #1125]
  43b9dc:	movi	v3.16b, #0xd
  43b9e0:	cbz	w0, 43b90c <ferror@plt+0x3833c>
  43b9e4:	ldrb	w0, [x19, #2]
  43b9e8:	mov	x23, x19
  43b9ec:	ldrb	w0, [x21, x0]
  43b9f0:	strb	w0, [x23], #2
  43b9f4:	adrp	x25, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  43b9f8:	adrp	x26, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43b9fc:	mov	x27, x19
  43ba00:	mov	x21, x23
  43ba04:	add	x25, x25, #0x26c
  43ba08:	add	x26, x26, #0x228
  43ba0c:	ldrb	w1, [x21, #1]
  43ba10:	add	x20, x21, #0x1
  43ba14:	strb	w1, [x27, #1]
  43ba18:	add	x19, x19, #0x1
  43ba1c:	cmp	w1, #0xa
  43ba20:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  43ba24:	b.ne	43bb74 <ferror@plt+0x385a4>  // b.any
  43ba28:	cmp	w1, #0xd
  43ba2c:	ldr	x23, [x24, #32]
  43ba30:	b.ne	43ba4c <ferror@plt+0x3847c>  // b.any
  43ba34:	cmp	x20, x23
  43ba38:	b.eq	43baa8 <ferror@plt+0x384d8>  // b.none
  43ba3c:	ldrb	w0, [x21, #2]
  43ba40:	cmp	w0, #0xa
  43ba44:	b.ne	43ba54 <ferror@plt+0x38484>  // b.any
  43ba48:	add	x20, x21, #0x2
  43ba4c:	cmp	x20, x23
  43ba50:	b.eq	43baa8 <ferror@plt+0x384d8>  // b.none
  43ba54:	ldr	x1, [x24, #16]
  43ba58:	mov	x23, x20
  43ba5c:	mov	x21, x19
  43ba60:	cmp	x1, x21
  43ba64:	b.eq	43baa8 <ferror@plt+0x384d8>  // b.none
  43ba68:	ldurb	w2, [x21, #-1]
  43ba6c:	ldurb	w0, [x21, #-1]
  43ba70:	ldrh	w2, [x26, x2, lsl #1]
  43ba74:	tbz	w2, #11, 43bb3c <ferror@plt+0x3856c>
  43ba78:	sub	x21, x21, #0x1
  43ba7c:	b	43ba60 <ferror@plt+0x38490>
  43ba80:	ldr	x1, [x24, #32]
  43ba84:	cmp	x1, x19
  43ba88:	b.eq	43b878 <ferror@plt+0x382a8>  // b.none
  43ba8c:	cmp	w0, #0xd
  43ba90:	b.ne	43bae4 <ferror@plt+0x38514>  // b.any
  43ba94:	ldrb	w0, [x19, #1]
  43ba98:	cmp	w0, #0xa
  43ba9c:	b.ne	43bae4 <ferror@plt+0x38514>  // b.any
  43baa0:	cmp	x1, x23
  43baa4:	b.ne	43bae8 <ferror@plt+0x38518>  // b.any
  43baa8:	mov	x1, x19
  43baac:	mov	w0, #0xa                   	// #10
  43bab0:	add	x23, x23, #0x1
  43bab4:	mov	w2, #0xa                   	// #10
  43bab8:	strb	w0, [x1], #1
  43babc:	mov	x0, x24
  43bac0:	bl	43b2f8 <ferror@plt+0x37d28>
  43bac4:	ldp	x19, x20, [sp, #16]
  43bac8:	ldp	x21, x22, [sp, #32]
  43bacc:	ldp	x25, x26, [sp, #64]
  43bad0:	ldr	x27, [sp, #80]
  43bad4:	str	x23, [x24, #16]
  43bad8:	ldp	x23, x24, [sp, #48]
  43badc:	ldp	x29, x30, [sp], #96
  43bae0:	ret
  43bae4:	mov	x23, x19
  43bae8:	cbz	x20, 43baa8 <ferror@plt+0x384d8>
  43baec:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43baf0:	mov	x1, x19
  43baf4:	add	x0, x0, #0x228
  43baf8:	ldurb	w2, [x1, #-1]
  43bafc:	mov	x21, x1
  43bb00:	sub	x1, x1, #0x1
  43bb04:	ldrh	w2, [x0, x2, lsl #1]
  43bb08:	tbnz	w2, #11, 43baf8 <ferror@plt+0x38528>
  43bb0c:	cmp	x20, x1
  43bb10:	b.ne	43baa8 <ferror@plt+0x384d8>  // b.any
  43bb14:	cmp	x21, x19
  43bb18:	mov	w0, #0x5c                  	// #92
  43bb1c:	mov	x1, x20
  43bb20:	mov	w2, #0x20                  	// #32
  43bb24:	sub	x19, x21, #0x2
  43bb28:	csel	w2, w2, w0, ne  // ne = any
  43bb2c:	mov	x0, x24
  43bb30:	bl	43b2f8 <ferror@plt+0x37d28>
  43bb34:	str	x20, [x24, #16]
  43bb38:	b	43b9f4 <ferror@plt+0x38424>
  43bb3c:	cmp	w0, #0x5c
  43bb40:	b.ne	43baa8 <ferror@plt+0x384d8>  // b.any
  43bb44:	cmp	x21, x19
  43bb48:	sub	x23, x21, #0x1
  43bb4c:	sub	x19, x21, #0x2
  43bb50:	mov	x1, x23
  43bb54:	mov	w2, #0x20                  	// #32
  43bb58:	csel	w2, w2, w0, ne  // ne = any
  43bb5c:	mov	x0, x24
  43bb60:	bl	43b2f8 <ferror@plt+0x37d28>
  43bb64:	str	x23, [x24, #16]
  43bb68:	mov	x27, x19
  43bb6c:	mov	x21, x20
  43bb70:	b	43ba0c <ferror@plt+0x3843c>
  43bb74:	cmp	w1, #0x3f
  43bb78:	b.ne	43bb68 <ferror@plt+0x38598>  // b.any
  43bb7c:	ldrb	w0, [x21, #2]
  43bb80:	cmp	w0, #0x3f
  43bb84:	b.ne	43bb68 <ferror@plt+0x38598>  // b.any
  43bb88:	ldrb	w0, [x21, #3]
  43bb8c:	ldrb	w2, [x21, #3]
  43bb90:	ldrb	w0, [x25, x0]
  43bb94:	cbz	w0, 43bb68 <ferror@plt+0x38598>
  43bb98:	mov	x0, x24
  43bb9c:	mov	x1, x19
  43bba0:	bl	43b2f8 <ferror@plt+0x37d28>
  43bba4:	ldrb	w0, [x22, #1125]
  43bba8:	cbz	w0, 43bb68 <ferror@plt+0x38598>
  43bbac:	mov	x20, x21
  43bbb0:	ldrb	w0, [x20, #3]!
  43bbb4:	ldrb	w0, [x25, x0]
  43bbb8:	strb	w0, [x27, #1]
  43bbbc:	b	43bb68 <ferror@plt+0x38598>
  43bbc0:	ldrb	w0, [x19, #1]
  43bbc4:	cmp	w0, #0xa
  43bbc8:	csel	x23, x23, x19, eq  // eq = none
  43bbcc:	b	43baa8 <ferror@plt+0x384d8>
  43bbd0:	stp	x29, x30, [sp, #-96]!
  43bbd4:	mov	x29, sp
  43bbd8:	stp	x19, x20, [sp, #16]
  43bbdc:	mov	x19, x0
  43bbe0:	stp	x21, x22, [sp, #32]
  43bbe4:	mov	w22, w1
  43bbe8:	stp	x23, x24, [sp, #48]
  43bbec:	adrp	x23, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bbf0:	adrp	x24, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  43bbf4:	add	x23, x23, #0x5d3
  43bbf8:	add	x24, x24, #0x26c
  43bbfc:	stp	x25, x26, [sp, #64]
  43bc00:	mov	w25, #0x18                  	// #24
  43bc04:	ldr	x20, [x0]
  43bc08:	str	x27, [sp, #80]
  43bc0c:	ldr	w1, [x20, #56]
  43bc10:	ldr	x27, [x20, #48]
  43bc14:	ubfiz	x26, x1, #4, #32
  43bc18:	ldr	x3, [x20]
  43bc1c:	add	x2, x27, x26
  43bc20:	ldr	x0, [x27, x26]
  43bc24:	cmp	x0, x3
  43bc28:	b.hi	43bdc8 <ferror@plt+0x387f8>  // b.pmore
  43bc2c:	add	w1, w1, #0x1
  43bc30:	ldr	w5, [x2, #8]
  43bc34:	str	w1, [x20, #56]
  43bc38:	add	x21, x0, #0x1
  43bc3c:	ldr	x1, [x20, #8]
  43bc40:	cmp	w5, #0x5c
  43bc44:	sub	x21, x21, x1
  43bc48:	b.eq	43bc78 <ferror@plt+0x386a8>  // b.none
  43bc4c:	cmp	w5, #0x20
  43bc50:	b.ne	43bcf8 <ferror@plt+0x38728>  // b.any
  43bc54:	cbnz	w22, 43bc78 <ferror@plt+0x386a8>
  43bc58:	ldr	x0, [x19, #40]
  43bc5c:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bc60:	mov	w3, w21
  43bc64:	add	x4, x4, #0x5aa
  43bc68:	mov	w1, #0x0                   	// #0
  43bc6c:	ldr	w2, [x0, #60]
  43bc70:	mov	x0, x19
  43bc74:	bl	435cf8 <ferror@plt+0x32728>
  43bc78:	ldr	x1, [x20, #16]
  43bc7c:	ldr	x0, [x20, #32]
  43bc80:	cmp	x1, x0
  43bc84:	b.ls	43bcac <ferror@plt+0x386dc>  // b.plast
  43bc88:	ldr	x0, [x19, #40]
  43bc8c:	mov	x4, x23
  43bc90:	mov	w3, w21
  43bc94:	mov	w1, #0x2                   	// #2
  43bc98:	ldr	w2, [x0, #60]
  43bc9c:	mov	x0, x19
  43bca0:	bl	435cf8 <ferror@plt+0x32728>
  43bca4:	ldr	x0, [x20, #32]
  43bca8:	str	x0, [x20, #16]
  43bcac:	ldr	x0, [x27, x26]
  43bcb0:	str	x0, [x20, #8]
  43bcb4:	ldr	x0, [x19, #40]
  43bcb8:	ldr	w2, [x0, #12]
  43bcbc:	ldr	x1, [x0]
  43bcc0:	sub	w2, w2, #0x1
  43bcc4:	ldr	w3, [x0, #60]
  43bcc8:	smull	x2, w2, w25
  43bccc:	add	x4, x1, x2
  43bcd0:	ldr	w1, [x1, x2]
  43bcd4:	mov	w2, #0x0                   	// #0
  43bcd8:	sub	w3, w3, w1
  43bcdc:	ldrb	w1, [x4, #6]
  43bce0:	lsr	w3, w3, w1
  43bce4:	ldr	w1, [x4, #16]
  43bce8:	add	w1, w1, #0x1
  43bcec:	add	w1, w3, w1
  43bcf0:	bl	43fa38 <ferror@plt+0x3c468>
  43bcf4:	b	43bc0c <ferror@plt+0x3863c>
  43bcf8:	ldrb	w6, [x24, w5, uxtw]
  43bcfc:	cbz	w6, 43bdac <ferror@plt+0x387dc>
  43bd00:	ldrb	w1, [x19, #1136]
  43bd04:	cbz	w1, 43bc0c <ferror@plt+0x3863c>
  43bd08:	cbz	w22, 43bd28 <ferror@plt+0x38758>
  43bd0c:	cmp	w5, #0x2f
  43bd10:	b.ne	43bc0c <ferror@plt+0x3863c>  // b.any
  43bd14:	ldrb	w1, [x19, #1125]
  43bd18:	cbz	w1, 43bd54 <ferror@plt+0x38784>
  43bd1c:	ldr	x1, [x2, #16]
  43bd20:	cmp	x0, x1
  43bd24:	b.ne	43bc0c <ferror@plt+0x3863c>  // b.any
  43bd28:	ldr	x0, [x19, #40]
  43bd2c:	ldr	w2, [x0, #60]
  43bd30:	ldrb	w0, [x19, #1125]
  43bd34:	cbz	w0, 43bd90 <ferror@plt+0x387c0>
  43bd38:	mov	w3, w21
  43bd3c:	mov	x0, x19
  43bd40:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bd44:	mov	w1, #0x4                   	// #4
  43bd48:	add	x4, x4, #0x5f4
  43bd4c:	bl	435d68 <ferror@plt+0x32798>
  43bd50:	b	43bc0c <ferror@plt+0x3863c>
  43bd54:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43bd58:	add	x0, x0, #0x3
  43bd5c:	add	x1, x1, #0x228
  43bd60:	ldrb	w4, [x0]
  43bd64:	ldrb	w3, [x0]
  43bd68:	ldrh	w4, [x1, x4, lsl #1]
  43bd6c:	tbz	w4, #11, 43bd78 <ferror@plt+0x387a8>
  43bd70:	add	x0, x0, #0x1
  43bd74:	b	43bd60 <ferror@plt+0x38790>
  43bd78:	cmp	w3, #0xa
  43bd7c:	b.ne	43bc0c <ferror@plt+0x3863c>  // b.any
  43bd80:	ldr	x1, [x2, #16]
  43bd84:	cmp	x0, x1
  43bd88:	b.cs	43bc0c <ferror@plt+0x3863c>  // b.hs, b.nlast
  43bd8c:	b	43bd28 <ferror@plt+0x38758>
  43bd90:	mov	w3, w21
  43bd94:	mov	x0, x19
  43bd98:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bd9c:	mov	w1, #0x4                   	// #4
  43bda0:	add	x4, x4, #0x612
  43bda4:	bl	435d68 <ferror@plt+0x32798>
  43bda8:	b	43bc0c <ferror@plt+0x3863c>
  43bdac:	cbz	w5, 43bc0c <ferror@plt+0x3863c>
  43bdb0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bdb4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bdb8:	add	x2, x2, #0x642
  43bdbc:	add	x0, x0, #0x43d
  43bdc0:	mov	w1, #0x48b                 	// #1163
  43bdc4:	bl	403600 <ferror@plt+0x30>
  43bdc8:	ldp	x19, x20, [sp, #16]
  43bdcc:	ldp	x21, x22, [sp, #32]
  43bdd0:	ldp	x23, x24, [sp, #48]
  43bdd4:	ldp	x25, x26, [sp, #64]
  43bdd8:	ldr	x27, [sp, #80]
  43bddc:	ldp	x29, x30, [sp], #96
  43bde0:	ret
  43bde4:	stp	x29, x30, [sp, #-64]!
  43bde8:	mov	x29, sp
  43bdec:	stp	x19, x20, [sp, #16]
  43bdf0:	mov	x19, x0
  43bdf4:	ldr	x20, [x0]
  43bdf8:	stp	x21, x22, [sp, #32]
  43bdfc:	adrp	x22, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43be00:	add	x22, x22, #0x65a
  43be04:	ldr	x1, [x20]
  43be08:	str	x23, [sp, #48]
  43be0c:	mov	w23, #0x18                  	// #24
  43be10:	mov	x0, x1
  43be14:	add	x1, x1, #0x2
  43be18:	ldrb	w2, [x0, #1]!
  43be1c:	cmp	w2, #0x2f
  43be20:	csel	x1, x1, x0, eq  // eq = none
  43be24:	mov	x21, x1
  43be28:	ldrb	w0, [x21], #1
  43be2c:	cmp	w0, #0x2f
  43be30:	b.ne	43be8c <ferror@plt+0x388bc>  // b.any
  43be34:	ldurb	w0, [x1, #-1]
  43be38:	cmp	w0, #0x2a
  43be3c:	b.eq	43bf08 <ferror@plt+0x38938>  // b.none
  43be40:	ldrb	w0, [x19, #1133]
  43be44:	cbz	w0, 43be84 <ferror@plt+0x388b4>
  43be48:	ldrb	w0, [x1, #1]
  43be4c:	cmp	w0, #0x2a
  43be50:	b.ne	43be84 <ferror@plt+0x388b4>  // b.any
  43be54:	ldrb	w0, [x1, #2]
  43be58:	cmp	w0, #0x2f
  43be5c:	b.eq	43be84 <ferror@plt+0x388b4>  // b.none
  43be60:	ldr	x0, [x19, #40]
  43be64:	mov	x4, x22
  43be68:	ldr	x3, [x20, #8]
  43be6c:	mov	w1, #0x2                   	// #2
  43be70:	ldr	w2, [x0, #60]
  43be74:	mov	x0, x19
  43be78:	str	x21, [x20]
  43be7c:	sub	w3, w21, w3
  43be80:	bl	435d68 <ferror@plt+0x32798>
  43be84:	mov	x1, x21
  43be88:	b	43be24 <ferror@plt+0x38854>
  43be8c:	cmp	w0, #0xa
  43be90:	b.ne	43be84 <ferror@plt+0x388b4>  // b.any
  43be94:	str	x1, [x20]
  43be98:	mov	x0, x19
  43be9c:	mov	w1, #0x1                   	// #1
  43bea0:	bl	43bbd0 <ferror@plt+0x38600>
  43bea4:	ldr	x1, [x20, #16]
  43bea8:	ldr	x0, [x20, #32]
  43beac:	cmp	x1, x0
  43beb0:	b.cs	43bf30 <ferror@plt+0x38960>  // b.hs, b.nlast
  43beb4:	mov	x0, x19
  43beb8:	bl	43b814 <ferror@plt+0x38244>
  43bebc:	ldr	x0, [x19, #40]
  43bec0:	ldp	x2, x6, [x20, #8]
  43bec4:	ldr	w3, [x0, #12]
  43bec8:	ldr	x5, [x0]
  43becc:	sub	w3, w3, #0x1
  43bed0:	ldr	w1, [x0, #60]
  43bed4:	sub	w2, w6, w2
  43bed8:	smull	x3, w3, w23
  43bedc:	add	x4, x5, x3
  43bee0:	ldr	w3, [x5, x3]
  43bee4:	sub	w3, w1, w3
  43bee8:	ldrb	w1, [x4, #6]
  43beec:	lsr	w3, w3, w1
  43bef0:	ldr	w1, [x4, #16]
  43bef4:	add	w1, w1, #0x1
  43bef8:	add	w1, w3, w1
  43befc:	bl	43fa38 <ferror@plt+0x3c468>
  43bf00:	ldr	x21, [x20]
  43bf04:	b	43be84 <ferror@plt+0x388b4>
  43bf08:	str	x21, [x20]
  43bf0c:	mov	x0, x19
  43bf10:	mov	w1, #0x1                   	// #1
  43bf14:	bl	43bbd0 <ferror@plt+0x38600>
  43bf18:	mov	w0, #0x0                   	// #0
  43bf1c:	ldp	x19, x20, [sp, #16]
  43bf20:	ldp	x21, x22, [sp, #32]
  43bf24:	ldr	x23, [sp, #48]
  43bf28:	ldp	x29, x30, [sp], #64
  43bf2c:	ret
  43bf30:	mov	w0, #0x1                   	// #1
  43bf34:	b	43bf1c <ferror@plt+0x3894c>
  43bf38:	stp	x29, x30, [sp, #-32]!
  43bf3c:	mov	x2, x1
  43bf40:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43bf44:	mov	x29, sp
  43bf48:	stp	x19, x20, [sp, #16]
  43bf4c:	mov	x19, x0
  43bf50:	add	x4, x4, #0x228
  43bf54:	ldrb	w0, [x2], #1
  43bf58:	mov	w6, #0x204                 	// #516
  43bf5c:	mov	w5, #0x43                  	// #67
  43bf60:	sub	w0, w0, #0x71
  43bf64:	ldrb	w7, [x2]
  43bf68:	ldrb	w3, [x2]
  43bf6c:	ldrh	w7, [x4, x7, lsl #1]
  43bf70:	tst	w6, w7
  43bf74:	b.eq	43bf88 <ferror@plt+0x389b8>  // b.none
  43bf78:	madd	w0, w0, w5, w3
  43bf7c:	add	x2, x2, #0x1
  43bf80:	sub	w0, w0, #0x71
  43bf84:	b	43bf64 <ferror@plt+0x38994>
  43bf88:	sub	x3, x2, x1
  43bf8c:	mov	w4, #0x1                   	// #1
  43bf90:	add	w3, w0, w3
  43bf94:	sub	w2, w2, w1
  43bf98:	ldr	x0, [x19, #1088]
  43bf9c:	bl	445ce8 <ferror@plt+0x42718>
  43bfa0:	mov	x20, x0
  43bfa4:	ldrh	w0, [x0, #18]
  43bfa8:	ubfx	x1, x0, #2, #8
  43bfac:	tbz	w0, #4, 43c040 <ferror@plt+0x38a70>
  43bfb0:	ldrb	w0, [x19, #18]
  43bfb4:	cbnz	w0, 43c040 <ferror@plt+0x38a70>
  43bfb8:	tbz	w1, #1, 43bfdc <ferror@plt+0x38a0c>
  43bfbc:	ldrb	w0, [x19, #23]
  43bfc0:	cbnz	w0, 43bfdc <ferror@plt+0x38a0c>
  43bfc4:	ldr	x3, [x20]
  43bfc8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bfcc:	mov	x0, x19
  43bfd0:	add	x2, x2, #0x4cf
  43bfd4:	mov	w1, #0x3                   	// #3
  43bfd8:	bl	435b3c <ferror@plt+0x3256c>
  43bfdc:	ldr	x0, [x19, #1272]
  43bfe0:	cmp	x20, x0
  43bfe4:	b.ne	43c00c <ferror@plt+0x38a3c>  // b.any
  43bfe8:	ldrb	w0, [x19, #22]
  43bfec:	cbnz	w0, 43c00c <ferror@plt+0x38a3c>
  43bff0:	ldrb	w0, [x19, #1120]
  43bff4:	cbz	w0, 43c050 <ferror@plt+0x38a80>
  43bff8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43bffc:	add	x2, x2, #0x4ec
  43c000:	mov	x0, x19
  43c004:	mov	w1, #0x2                   	// #2
  43c008:	bl	435b3c <ferror@plt+0x3256c>
  43c00c:	ldr	x0, [x19, #1280]
  43c010:	cmp	x20, x0
  43c014:	b.ne	43c020 <ferror@plt+0x38a50>  // b.any
  43c018:	mov	x0, x19
  43c01c:	bl	43b4f4 <ferror@plt+0x37f24>
  43c020:	ldrh	w0, [x20, #18]
  43c024:	tbz	w0, #9, 43c040 <ferror@plt+0x38a70>
  43c028:	ldr	x3, [x20]
  43c02c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c030:	mov	x0, x19
  43c034:	add	x2, x2, #0x578
  43c038:	mov	w1, #0xf                   	// #15
  43c03c:	bl	435ba8 <ferror@plt+0x325d8>
  43c040:	mov	x0, x20
  43c044:	ldp	x19, x20, [sp, #16]
  43c048:	ldp	x29, x30, [sp], #32
  43c04c:	ret
  43c050:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c054:	add	x2, x2, #0x533
  43c058:	b	43c000 <ferror@plt+0x38a30>
  43c05c:	add	x0, x0, #0x568
  43c060:	ret
  43c064:	stp	x29, x30, [sp, #-32]!
  43c068:	mov	x29, sp
  43c06c:	stp	x19, x20, [sp, #16]
  43c070:	mov	w20, #0x18                  	// #24
  43c074:	mov	x19, x0
  43c078:	umull	x20, w1, w20
  43c07c:	mov	x0, x20
  43c080:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43c084:	add	x1, x0, x20
  43c088:	str	xzr, [x19]
  43c08c:	stp	x0, x1, [x19, #16]
  43c090:	ldp	x19, x20, [sp, #16]
  43c094:	ldp	x29, x30, [sp], #32
  43c098:	ret
  43c09c:	stp	x29, x30, [sp, #-32]!
  43c0a0:	mov	x29, sp
  43c0a4:	str	x19, [sp, #16]
  43c0a8:	mov	x19, x0
  43c0ac:	ldr	x0, [x0]
  43c0b0:	cbnz	x0, 43c0cc <ferror@plt+0x38afc>
  43c0b4:	mov	x0, #0x20                  	// #32
  43c0b8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43c0bc:	str	x0, [x19]
  43c0c0:	mov	w1, #0xfa                  	// #250
  43c0c4:	str	x19, [x0, #8]
  43c0c8:	bl	43c064 <ferror@plt+0x38a94>
  43c0cc:	ldr	x0, [x19]
  43c0d0:	ldr	x19, [sp, #16]
  43c0d4:	ldp	x29, x30, [sp], #32
  43c0d8:	ret
  43c0dc:	ldr	w1, [x0, #48]
  43c0e0:	cmp	w1, #0x1
  43c0e4:	b.ne	43c108 <ferror@plt+0x38b38>  // b.any
  43c0e8:	ldr	x1, [x0, #24]
  43c0ec:	ldr	x0, [x0, #16]
  43c0f0:	sub	x0, x1, x0
  43c0f4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43c0f8:	movk	x1, #0xaaab
  43c0fc:	asr	x0, x0, #3
  43c100:	mul	w0, w0, w1
  43c104:	ret
  43c108:	tst	w1, #0xfffffffd
  43c10c:	b.ne	43c124 <ferror@plt+0x38b54>  // b.any
  43c110:	ldr	x1, [x0, #24]
  43c114:	ldr	x0, [x0, #16]
  43c118:	sub	x0, x1, x0
  43c11c:	ubfx	x0, x0, #3, #32
  43c120:	ret
  43c124:	stp	x29, x30, [sp, #-16]!
  43c128:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c12c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c130:	mov	x29, sp
  43c134:	add	x2, x2, #0x66e
  43c138:	add	x0, x0, #0x43d
  43c13c:	mov	w1, #0x99f                 	// #2463
  43c140:	bl	403600 <ferror@plt+0x30>
  43c144:	stp	x29, x30, [sp, #-64]!
  43c148:	mov	x29, sp
  43c14c:	stp	x19, x20, [sp, #16]
  43c150:	mov	x19, x0
  43c154:	stp	x21, x22, [sp, #32]
  43c158:	ldr	w21, [x0, #496]
  43c15c:	ldr	x0, [x0, #488]
  43c160:	stp	x23, x24, [sp, #48]
  43c164:	ldr	x23, [x19, #448]
  43c168:	ldr	x22, [x0, #24]
  43c16c:	sub	x22, x22, x23
  43c170:	cbz	x21, 43c220 <ferror@plt+0x38c50>
  43c174:	asr	x20, x22, #3
  43c178:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43c17c:	movk	x2, #0xaaab
  43c180:	mul	x20, x20, x2
  43c184:	cmp	x20, x21
  43c188:	b.gt	43c1d0 <ferror@plt+0x38c00>
  43c18c:	bl	43c09c <ferror@plt+0x38acc>
  43c190:	mov	x24, x0
  43c194:	cmp	x20, x21
  43c198:	b.ge	43c1b4 <ferror@plt+0x38be4>  // b.tcont
  43c19c:	sub	x2, x21, x20
  43c1a0:	mov	x0, #0x18                  	// #24
  43c1a4:	ldr	x1, [x24, #16]
  43c1a8:	mul	x2, x2, x0
  43c1ac:	add	x0, x1, x0
  43c1b0:	bl	402ce0 <memmove@plt>
  43c1b4:	ldr	x1, [x19, #488]
  43c1b8:	ldr	x0, [x24, #16]
  43c1bc:	ldr	x1, [x1, #24]
  43c1c0:	ldp	x2, x3, [x1, #-24]
  43c1c4:	stp	x2, x3, [x0]
  43c1c8:	ldur	x1, [x1, #-8]
  43c1cc:	str	x1, [x0, #16]
  43c1d0:	cmp	x22, #0x18
  43c1d4:	b.le	43c220 <ferror@plt+0x38c50>
  43c1d8:	sub	x20, x20, #0x1
  43c1dc:	mov	x2, #0x18                  	// #24
  43c1e0:	cmp	x20, x21
  43c1e4:	csel	x20, x20, x21, le
  43c1e8:	ldr	x1, [x19, #448]
  43c1ec:	mul	x2, x20, x2
  43c1f0:	add	x0, x1, #0x18
  43c1f4:	bl	402ce0 <memmove@plt>
  43c1f8:	ldr	x0, [x19, #448]
  43c1fc:	ldp	x21, x22, [sp, #32]
  43c200:	add	x1, x0, #0x18
  43c204:	str	x1, [x19, #448]
  43c208:	ldur	w1, [x23, #-24]
  43c20c:	ldp	x19, x20, [sp, #16]
  43c210:	ldp	x23, x24, [sp, #48]
  43c214:	str	w1, [x0]
  43c218:	ldp	x29, x30, [sp], #64
  43c21c:	ret
  43c220:	cbnz	x22, 43c1f8 <ferror@plt+0x38c28>
  43c224:	ldr	x0, [x19, #488]
  43c228:	ldr	x1, [x19, #448]
  43c22c:	ldr	x2, [x0, #24]
  43c230:	cmp	x2, x1
  43c234:	b.ne	43c1f8 <ferror@plt+0x38c28>  // b.any
  43c238:	bl	43c09c <ferror@plt+0x38acc>
  43c23c:	str	x0, [x19, #488]
  43c240:	ldr	x0, [x0, #16]
  43c244:	str	x0, [x19, #448]
  43c248:	b	43c1f8 <ferror@plt+0x38c28>
  43c24c:	stp	x29, x30, [sp, #-32]!
  43c250:	mov	x29, sp
  43c254:	stp	x19, x20, [sp, #16]
  43c258:	mov	x19, x0
  43c25c:	ldrb	w0, [x0, #16]
  43c260:	cbnz	w0, 43c2d8 <ferror@plt+0x38d08>
  43c264:	ldr	x0, [x19]
  43c268:	ldrb	w20, [x0, #104]
  43c26c:	cbz	w20, 43c2e0 <ferror@plt+0x38d10>
  43c270:	ldr	x3, [x0, #16]
  43c274:	ldr	x2, [x0, #32]
  43c278:	cmp	x3, x2
  43c27c:	b.cs	43c298 <ferror@plt+0x38cc8>  // b.hs, b.nlast
  43c280:	mov	x0, x19
  43c284:	bl	43b814 <ferror@plt+0x38244>
  43c288:	mov	w0, w20
  43c28c:	ldp	x19, x20, [sp, #16]
  43c290:	ldp	x29, x30, [sp], #32
  43c294:	ret
  43c298:	ldrb	w1, [x19, #25]
  43c29c:	cbnz	w1, 43c2d8 <ferror@plt+0x38d08>
  43c2a0:	ldr	x1, [x0, #24]
  43c2a4:	cmp	x2, x1
  43c2a8:	ldrb	w1, [x0, #105]
  43c2ac:	b.eq	43c2c0 <ferror@plt+0x38cf0>  // b.none
  43c2b0:	cmp	x3, x2
  43c2b4:	b.ls	43c2c0 <ferror@plt+0x38cf0>  // b.plast
  43c2b8:	tbnz	w1, #1, 43c2c0 <ferror@plt+0x38cf0>
  43c2bc:	str	x2, [x0, #16]
  43c2c0:	mov	x0, x19
  43c2c4:	ubfx	x20, x1, #2, #1
  43c2c8:	bl	434ea4 <ferror@plt+0x318d4>
  43c2cc:	ldr	x0, [x19]
  43c2d0:	cbz	x0, 43c2d8 <ferror@plt+0x38d08>
  43c2d4:	cbz	w20, 43c264 <ferror@plt+0x38c94>
  43c2d8:	mov	w20, #0x0                   	// #0
  43c2dc:	b	43c288 <ferror@plt+0x38cb8>
  43c2e0:	mov	w20, #0x1                   	// #1
  43c2e4:	b	43c288 <ferror@plt+0x38cb8>
  43c2e8:	ldrb	w1, [x0, #4]
  43c2ec:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c2f0:	add	x2, x2, #0xc78
  43c2f4:	lsl	x1, x1, #4
  43c2f8:	ldr	w1, [x2, x1]
  43c2fc:	cmp	w1, #0x1
  43c300:	b.eq	43c314 <ferror@plt+0x38d44>  // b.none
  43c304:	cmp	w1, #0x2
  43c308:	b.ne	43c328 <ferror@plt+0x38d58>  // b.any
  43c30c:	ldr	w0, [x0, #8]
  43c310:	ret
  43c314:	ldr	x0, [x0, #8]
  43c318:	mov	w1, #0xa                   	// #10
  43c31c:	ldr	w0, [x0, #8]
  43c320:	mul	w0, w0, w1
  43c324:	b	43c310 <ferror@plt+0x38d40>
  43c328:	mov	w0, #0x6                   	// #6
  43c32c:	b	43c310 <ferror@plt+0x38d40>
  43c330:	stp	x29, x30, [sp, #-48]!
  43c334:	mov	x29, sp
  43c338:	stp	x21, x22, [sp, #32]
  43c33c:	mov	x21, x1
  43c340:	ldr	x22, [x1]
  43c344:	stp	x19, x20, [sp, #16]
  43c348:	mov	x19, x0
  43c34c:	mov	x20, #0x0                   	// #0
  43c350:	ldr	w0, [x21, #8]
  43c354:	cmp	x0, x20
  43c358:	b.ls	43c38c <ferror@plt+0x38dbc>  // b.plast
  43c35c:	ldrb	w0, [x22, x20]
  43c360:	add	x1, x22, x20
  43c364:	tbz	w0, #7, 43c384 <ferror@plt+0x38db4>
  43c368:	sub	x20, x20, #0x1
  43c36c:	mov	x0, x19
  43c370:	add	x19, x19, #0xa
  43c374:	bl	43b444 <ferror@plt+0x37e74>
  43c378:	add	x20, x0, x20
  43c37c:	add	x20, x20, #0x1
  43c380:	b	43c350 <ferror@plt+0x38d80>
  43c384:	strb	w0, [x19], #1
  43c388:	b	43c37c <ferror@plt+0x38dac>
  43c38c:	mov	x0, x19
  43c390:	ldp	x19, x20, [sp, #16]
  43c394:	ldp	x21, x22, [sp, #32]
  43c398:	ldp	x29, x30, [sp], #48
  43c39c:	ret
  43c3a0:	stp	x29, x30, [sp, #-32]!
  43c3a4:	mov	x29, sp
  43c3a8:	stp	x19, x20, [sp, #16]
  43c3ac:	mov	x20, x1
  43c3b0:	mov	x19, x2
  43c3b4:	ldrb	w4, [x1, #4]
  43c3b8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c3bc:	ldrb	w2, [x20, #4]
  43c3c0:	add	x1, x1, #0xc78
  43c3c4:	lsl	x5, x2, #4
  43c3c8:	ldr	w6, [x1, x5]
  43c3cc:	cmp	w6, #0x3
  43c3d0:	b.hi	43c454 <ferror@plt+0x38e84>  // b.pmore
  43c3d4:	adrp	x5, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c3d8:	and	w3, w3, #0xff
  43c3dc:	add	x5, x5, #0xb48
  43c3e0:	ldrb	w5, [x5, w6, uxtw]
  43c3e4:	adr	x6, 43c3f0 <ferror@plt+0x38e20>
  43c3e8:	add	x5, x6, w5, sxtb #2
  43c3ec:	br	x5
  43c3f0:	ldrh	w0, [x20, #6]
  43c3f4:	tbz	w0, #1, 43c420 <ferror@plt+0x38e50>
  43c3f8:	add	x1, x1, #0x540
  43c3fc:	sub	w4, w4, #0x25
  43c400:	ldr	x2, [x1, w4, sxtw #3]
  43c404:	mov	x0, #0x0                   	// #0
  43c408:	ldrb	w1, [x2, x0]
  43c40c:	add	x3, x19, x0
  43c410:	cbz	w1, 43c4ac <ferror@plt+0x38edc>
  43c414:	strb	w1, [x19, x0]
  43c418:	add	x0, x0, #0x1
  43c41c:	b	43c408 <ferror@plt+0x38e38>
  43c420:	tbnz	w0, #4, 43c430 <ferror@plt+0x38e60>
  43c424:	add	x1, x1, x2, lsl #4
  43c428:	ldr	x2, [x1, #8]
  43c42c:	b	43c404 <ferror@plt+0x38e34>
  43c430:	cbz	w3, 43c464 <ferror@plt+0x38e94>
  43c434:	ldr	x0, [x20, #16]
  43c438:	ldr	w2, [x0, #8]
  43c43c:	ldr	x1, [x0]
  43c440:	mov	x0, x19
  43c444:	bl	402cd0 <memcpy@plt>
  43c448:	ldr	x0, [x20, #16]
  43c44c:	ldr	w0, [x0, #8]
  43c450:	add	x19, x19, x0
  43c454:	mov	x0, x19
  43c458:	ldp	x19, x20, [sp, #16]
  43c45c:	ldp	x29, x30, [sp], #32
  43c460:	ret
  43c464:	mov	x0, x19
  43c468:	ldr	x1, [x20, #8]
  43c46c:	ldp	x19, x20, [sp, #16]
  43c470:	ldp	x29, x30, [sp], #32
  43c474:	b	43c330 <ferror@plt+0x38d60>
  43c478:	ldr	w2, [x20, #8]
  43c47c:	mov	x0, x19
  43c480:	ldr	x1, [x20, #16]
  43c484:	bl	402cd0 <memcpy@plt>
  43c488:	ldr	w0, [x20, #8]
  43c48c:	b	43c450 <ferror@plt+0x38e80>
  43c490:	add	x1, x1, x2, lsl #4
  43c494:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c498:	add	x2, x2, #0x693
  43c49c:	ldr	x3, [x1, #8]
  43c4a0:	mov	w1, #0x4                   	// #4
  43c4a4:	bl	435b3c <ferror@plt+0x3256c>
  43c4a8:	b	43c454 <ferror@plt+0x38e84>
  43c4ac:	mov	x19, x3
  43c4b0:	b	43c454 <ferror@plt+0x38e84>
  43c4b4:	stp	x29, x30, [sp, #-48]!
  43c4b8:	mov	x29, sp
  43c4bc:	stp	x19, x20, [sp, #16]
  43c4c0:	mov	x20, x0
  43c4c4:	stp	x21, x22, [sp, #32]
  43c4c8:	mov	x21, x1
  43c4cc:	ldr	w1, [x0, #1192]
  43c4d0:	ldr	w0, [x2]
  43c4d4:	cmp	w1, w0
  43c4d8:	b.ge	43c560 <ferror@plt+0x38f90>  // b.tcont
  43c4dc:	ldrb	w0, [x20, #18]
  43c4e0:	cbnz	w0, 43c560 <ferror@plt+0x38f90>
  43c4e4:	mov	x22, x2
  43c4e8:	mov	x0, x21
  43c4ec:	bl	43c2e8 <ferror@plt+0x38d18>
  43c4f0:	mov	w0, w0
  43c4f4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43c4f8:	mov	x19, x0
  43c4fc:	mov	x2, x0
  43c500:	mov	x1, x21
  43c504:	mov	x0, x20
  43c508:	mov	w3, #0x0                   	// #0
  43c50c:	bl	43c3a0 <ferror@plt+0x38dd0>
  43c510:	sub	x5, x0, x19
  43c514:	ldr	w0, [x22]
  43c518:	mov	x6, x19
  43c51c:	cmp	w0, #0x1
  43c520:	b.ne	43c554 <ferror@plt+0x38f84>  // b.any
  43c524:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c528:	add	x4, x4, #0x6a8
  43c52c:	ldr	w2, [x21]
  43c530:	mov	x0, x20
  43c534:	mov	w3, #0x0                   	// #0
  43c538:	mov	w1, #0x10                  	// #16
  43c53c:	bl	435d68 <ferror@plt+0x32798>
  43c540:	mov	x0, x19
  43c544:	ldp	x19, x20, [sp, #16]
  43c548:	ldp	x21, x22, [sp, #32]
  43c54c:	ldp	x29, x30, [sp], #48
  43c550:	b	4032a0 <free@plt>
  43c554:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c558:	add	x4, x4, #0x6be
  43c55c:	b	43c52c <ferror@plt+0x38f5c>
  43c560:	ldp	x19, x20, [sp, #16]
  43c564:	ldp	x21, x22, [sp, #32]
  43c568:	ldp	x29, x30, [sp], #48
  43c56c:	ret
  43c570:	mov	w2, w0
  43c574:	and	w3, w1, #0xff
  43c578:	tst	w1, #0x2
  43c57c:	b.eq	43c598 <ferror@plt+0x38fc8>  // b.none
  43c580:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c584:	add	x0, x0, #0xc78
  43c588:	sub	w2, w2, #0x25
  43c58c:	add	x0, x0, #0x540
  43c590:	ldr	x0, [x0, w2, sxtw #3]
  43c594:	ret
  43c598:	tbz	w3, #4, 43c5a0 <ferror@plt+0x38fd0>
  43c59c:	b	447f70 <ferror@plt+0x449a0>
  43c5a0:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c5a4:	add	x0, x0, #0xc78
  43c5a8:	add	x2, x0, w2, sxtw #4
  43c5ac:	ldr	x0, [x2, #8]
  43c5b0:	b	43c594 <ferror@plt+0x38fc4>
  43c5b4:	stp	x29, x30, [sp, #-64]!
  43c5b8:	mov	x29, sp
  43c5bc:	stp	x19, x20, [sp, #16]
  43c5c0:	mov	x20, x0
  43c5c4:	ldrb	w2, [x0, #4]
  43c5c8:	stp	x21, x22, [sp, #32]
  43c5cc:	mov	x21, x1
  43c5d0:	ldrb	w1, [x20, #4]
  43c5d4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c5d8:	add	x0, x0, #0xc78
  43c5dc:	lsl	x3, x1, #4
  43c5e0:	add	x1, x0, x1, lsl #4
  43c5e4:	ldr	w3, [x0, x3]
  43c5e8:	cmp	w3, #0x1
  43c5ec:	b.eq	43c640 <ferror@plt+0x39070>  // b.none
  43c5f0:	cmp	w3, #0x2
  43c5f4:	b.eq	43c6a8 <ferror@plt+0x390d8>  // b.none
  43c5f8:	cbnz	w3, 43c624 <ferror@plt+0x39054>
  43c5fc:	ldrh	w3, [x20, #6]
  43c600:	tbz	w3, #1, 43c634 <ferror@plt+0x39064>
  43c604:	add	x0, x0, #0x540
  43c608:	sub	w1, w2, #0x25
  43c60c:	ldr	x19, [x0, w1, sxtw #3]
  43c610:	ldrb	w0, [x19]
  43c614:	mov	x1, x21
  43c618:	bl	402eb0 <putc_unlocked@plt>
  43c61c:	ldrb	w0, [x19, #1]!
  43c620:	cbnz	w0, 43c614 <ferror@plt+0x39044>
  43c624:	ldp	x19, x20, [sp, #16]
  43c628:	ldp	x21, x22, [sp, #32]
  43c62c:	ldp	x29, x30, [sp], #64
  43c630:	ret
  43c634:	tbnz	w3, #4, 43c640 <ferror@plt+0x39070>
  43c638:	ldr	x19, [x1, #8]
  43c63c:	b	43c610 <ferror@plt+0x39040>
  43c640:	ldr	x0, [x20, #8]
  43c644:	mov	x19, #0x0                   	// #0
  43c648:	ldr	x22, [x0]
  43c64c:	ldr	x0, [x20, #8]
  43c650:	ldr	w1, [x0, #8]
  43c654:	cmp	x1, x19
  43c658:	b.ls	43c624 <ferror@plt+0x39054>  // b.plast
  43c65c:	ldrb	w2, [x22, x19]
  43c660:	add	x1, x22, x19
  43c664:	tbz	w2, #7, 43c694 <ferror@plt+0x390c4>
  43c668:	add	x0, sp, #0x30
  43c66c:	sub	x19, x19, #0x1
  43c670:	bl	43b444 <ferror@plt+0x37e74>
  43c674:	add	x19, x0, x19
  43c678:	mov	x3, x21
  43c67c:	add	x0, sp, #0x30
  43c680:	mov	x2, #0xa                   	// #10
  43c684:	mov	x1, #0x1                   	// #1
  43c688:	bl	402d30 <fwrite_unlocked@plt>
  43c68c:	add	x19, x19, #0x1
  43c690:	b	43c64c <ferror@plt+0x3907c>
  43c694:	ldr	x0, [x0]
  43c698:	mov	x1, x21
  43c69c:	ldrb	w0, [x0, x19]
  43c6a0:	bl	403410 <fputc_unlocked@plt>
  43c6a4:	b	43c68c <ferror@plt+0x390bc>
  43c6a8:	ldr	w2, [x20, #8]
  43c6ac:	mov	x3, x21
  43c6b0:	ldr	x0, [x20, #16]
  43c6b4:	mov	x1, #0x1                   	// #1
  43c6b8:	bl	402d30 <fwrite_unlocked@plt>
  43c6bc:	b	43c624 <ferror@plt+0x39054>
  43c6c0:	ldr	w3, [x0, #4]
  43c6c4:	ldr	w2, [x1, #4]
  43c6c8:	and	w3, w3, #0xffff00ff
  43c6cc:	and	w2, w2, #0xffff00ff
  43c6d0:	cmp	w3, w2
  43c6d4:	b.ne	43c79c <ferror@plt+0x391cc>  // b.any
  43c6d8:	ldrb	w2, [x0, #4]
  43c6dc:	adrp	x3, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c6e0:	add	x3, x3, #0xc78
  43c6e4:	ldrb	w4, [x0, #4]
  43c6e8:	lsl	x2, x2, #4
  43c6ec:	ldr	w2, [x3, x2]
  43c6f0:	cmp	w2, #0x2
  43c6f4:	b.eq	43c764 <ferror@plt+0x39194>  // b.none
  43c6f8:	cmp	w2, #0x3
  43c6fc:	b.eq	43c724 <ferror@plt+0x39154>  // b.none
  43c700:	cmp	w2, #0x1
  43c704:	b.eq	43c754 <ferror@plt+0x39184>  // b.none
  43c708:	cmp	w4, #0x26
  43c70c:	b.ne	43c74c <ferror@plt+0x3917c>  // b.any
  43c710:	ldr	w2, [x0, #8]
  43c714:	ldr	w0, [x1, #8]
  43c718:	cmp	w2, w0
  43c71c:	cset	w0, eq  // eq = none
  43c720:	ret
  43c724:	cmp	w4, #0x50
  43c728:	b.ne	43c74c <ferror@plt+0x3917c>  // b.any
  43c72c:	ldr	w3, [x0, #8]
  43c730:	ldr	w2, [x1, #8]
  43c734:	cmp	w3, w2
  43c738:	b.ne	43c79c <ferror@plt+0x391cc>  // b.any
  43c73c:	ldr	x2, [x0, #16]
  43c740:	ldr	x0, [x1, #16]
  43c744:	cmp	x2, x0
  43c748:	b	43c71c <ferror@plt+0x3914c>
  43c74c:	mov	w0, #0x1                   	// #1
  43c750:	ret
  43c754:	ldr	x3, [x0, #8]
  43c758:	ldr	x2, [x1, #8]
  43c75c:	cmp	x3, x2
  43c760:	b	43c738 <ferror@plt+0x39168>
  43c764:	ldr	w2, [x0, #8]
  43c768:	ldr	w3, [x1, #8]
  43c76c:	cmp	w2, w3
  43c770:	b.ne	43c79c <ferror@plt+0x391cc>  // b.any
  43c774:	stp	x29, x30, [sp, #-16]!
  43c778:	mov	w2, w2
  43c77c:	mov	x29, sp
  43c780:	ldr	x0, [x0, #16]
  43c784:	ldr	x1, [x1, #16]
  43c788:	bl	4031e0 <memcmp@plt>
  43c78c:	cmp	w0, #0x0
  43c790:	cset	w0, eq  // eq = none
  43c794:	ldp	x29, x30, [sp], #16
  43c798:	ret
  43c79c:	mov	w0, #0x0                   	// #0
  43c7a0:	ret
  43c7a4:	mov	x7, x0
  43c7a8:	ldrh	w0, [x1, #6]
  43c7ac:	ldrb	w5, [x1, #4]
  43c7b0:	mov	w4, #0x35                  	// #53
  43c7b4:	ldrb	w8, [x2, #4]
  43c7b8:	adrp	x6, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c7bc:	tst	x0, #0x10
  43c7c0:	ldrh	w0, [x2, #6]
  43c7c4:	csel	w5, w5, w4, eq  // eq = none
  43c7c8:	add	x6, x6, #0xc78
  43c7cc:	tst	x0, #0x10
  43c7d0:	csel	w4, w8, w4, eq  // eq = none
  43c7d4:	tbz	w0, #1, 43c810 <ferror@plt+0x39240>
  43c7d8:	add	x0, x6, #0x540
  43c7dc:	sub	w3, w4, #0x25
  43c7e0:	ldr	x0, [x0, w3, sxtw #3]
  43c7e4:	ldrb	w3, [x0]
  43c7e8:	cmp	w5, #0xd
  43c7ec:	cset	w0, le
  43c7f0:	cmp	w3, #0x3d
  43c7f4:	csel	w0, w0, wzr, eq  // eq = none
  43c7f8:	cbnz	w0, 43ca34 <ferror@plt+0x39464>
  43c7fc:	cmp	w5, #0x12
  43c800:	b.hi	43c86c <ferror@plt+0x3929c>  // b.pmore
  43c804:	cmp	w5, #0x1
  43c808:	b.hi	43c848 <ferror@plt+0x39278>  // b.pmore
  43c80c:	ret
  43c810:	sbfiz	x3, x4, #4, #32
  43c814:	add	x0, x6, w4, sxtw #4
  43c818:	ldr	w3, [x6, x3]
  43c81c:	cbnz	w3, 43c828 <ferror@plt+0x39258>
  43c820:	ldr	x0, [x0, #8]
  43c824:	b	43c7e4 <ferror@plt+0x39214>
  43c828:	mov	w3, #0xffffffff            	// #-1
  43c82c:	b	43c7e8 <ferror@plt+0x39218>
  43c830:	adrp	x9, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c834:	add	x9, x9, #0xb4c
  43c838:	ldrb	w5, [x9, w5, uxtw]
  43c83c:	adr	x9, 43c848 <ferror@plt+0x39278>
  43c840:	add	x5, x9, w5, sxtb #2
  43c844:	br	x5
  43c848:	sub	w5, w5, #0x2
  43c84c:	cmp	w5, #0x10
  43c850:	b.hi	43c880 <ferror@plt+0x392b0>  // b.pmore
  43c854:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43c858:	add	x0, x0, #0xb60
  43c85c:	ldrb	w0, [x0, w5, uxtw]
  43c860:	adr	x1, 43c86c <ferror@plt+0x3929c>
  43c864:	add	x0, x1, w0, sxtb #2
  43c868:	br	x0
  43c86c:	cmp	w5, #0x25
  43c870:	b.eq	43c91c <ferror@plt+0x3934c>  // b.none
  43c874:	sub	w5, w5, #0x2f
  43c878:	cmp	w5, #0x13
  43c87c:	b.ls	43c830 <ferror@plt+0x39260>  // b.plast
  43c880:	mov	w0, #0x0                   	// #0
  43c884:	b	43c80c <ferror@plt+0x3923c>
  43c888:	cmp	w3, #0x3e
  43c88c:	cset	w0, eq  // eq = none
  43c890:	b	43c80c <ferror@plt+0x3923c>
  43c894:	mov	x0, #0x2000000000          	// #137438953472
  43c898:	cmp	w3, #0x3d
  43c89c:	movk	x0, #0x1400, lsl #48
  43c8a0:	lsr	x0, x0, x3
  43c8a4:	mvn	x0, x0
  43c8a8:	and	w0, w0, #0x1
  43c8ac:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
  43c8b0:	eor	w0, w0, #0x1
  43c8b4:	b	43c80c <ferror@plt+0x3923c>
  43c8b8:	cmp	w3, #0x2b
  43c8bc:	b	43c88c <ferror@plt+0x392bc>
  43c8c0:	cmp	w3, #0x2d
  43c8c4:	mov	w0, #0x3e                  	// #62
  43c8c8:	ccmp	w3, w0, #0x4, ne  // ne = any
  43c8cc:	b	43c88c <ferror@plt+0x392bc>
  43c8d0:	cmp	w3, #0x2f
  43c8d4:	mov	w0, #0x2a                  	// #42
  43c8d8:	b	43c8c8 <ferror@plt+0x392f8>
  43c8dc:	cmp	w3, #0x26
  43c8e0:	b	43c88c <ferror@plt+0x392bc>
  43c8e4:	cmp	w3, #0x7c
  43c8e8:	b	43c88c <ferror@plt+0x392bc>
  43c8ec:	and	w3, w3, #0xfffffffb
  43c8f0:	cmp	w3, #0x3a
  43c8f4:	b	43c88c <ferror@plt+0x392bc>
  43c8f8:	cmp	w3, #0x2a
  43c8fc:	b	43c88c <ferror@plt+0x392bc>
  43c900:	cmp	w3, #0x2e
  43c904:	cset	w0, eq  // eq = none
  43c908:	cmp	w3, #0x25
  43c90c:	csinc	w0, w0, wzr, ne  // ne = any
  43c910:	cbnz	w0, 43c80c <ferror@plt+0x3923c>
  43c914:	cmp	w4, #0x37
  43c918:	b	43c88c <ferror@plt+0x392bc>
  43c91c:	cmp	w3, #0x23
  43c920:	ccmp	w3, w5, #0x4, ne  // ne = any
  43c924:	b	43c88c <ferror@plt+0x392bc>
  43c928:	cmp	w4, #0x37
  43c92c:	b.ne	43c97c <ferror@plt+0x393ac>  // b.any
  43c930:	ldr	w5, [x2, #8]
  43c934:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43c938:	add	x1, x1, #0x228
  43c93c:	mov	x0, #0x0                   	// #0
  43c940:	mov	w6, #0x204                 	// #516
  43c944:	cmp	w5, w0
  43c948:	b.ls	43ca34 <ferror@plt+0x39464>  // b.plast
  43c94c:	ldr	x3, [x2, #16]
  43c950:	ldrb	w8, [x3, x0]
  43c954:	ldrb	w3, [x3, x0]
  43c958:	ldrh	w3, [x1, x3, lsl #1]
  43c95c:	tst	w6, w3
  43c960:	b.ne	43c974 <ferror@plt+0x393a4>  // b.any
  43c964:	cmp	w8, #0x24
  43c968:	b.ne	43c990 <ferror@plt+0x393c0>  // b.any
  43c96c:	ldrb	w3, [x7, #1146]
  43c970:	cbz	w3, 43c990 <ferror@plt+0x393c0>
  43c974:	add	x0, x0, #0x1
  43c978:	b	43c944 <ferror@plt+0x39374>
  43c97c:	cmp	w4, #0x35
  43c980:	cset	w0, eq  // eq = none
  43c984:	cmp	w4, #0x38
  43c988:	csinc	w0, w0, wzr, ne  // ne = any
  43c98c:	cbnz	w0, 43c80c <ferror@plt+0x3923c>
  43c990:	cmp	w4, #0x3e
  43c994:	b	43c88c <ferror@plt+0x392bc>
  43c998:	and	w4, w4, #0xfffffffd
  43c99c:	cmp	w4, #0x35
  43c9a0:	b.eq	43ca34 <ferror@plt+0x39464>  // b.none
  43c9a4:	cmp	w3, #0x2b
  43c9a8:	b.eq	43ca34 <ferror@plt+0x39464>  // b.none
  43c9ac:	sub	w3, w3, #0x2d
  43c9b0:	cmp	w3, #0x1
  43c9b4:	cset	w0, ls  // ls = plast
  43c9b8:	b	43c80c <ferror@plt+0x3923c>
  43c9bc:	ldr	x1, [x1, #16]
  43c9c0:	ldrb	w1, [x1]
  43c9c4:	cmp	w1, #0x5c
  43c9c8:	b.ne	43c9d4 <ferror@plt+0x39404>  // b.any
  43c9cc:	cmp	w4, #0x35
  43c9d0:	b.eq	43ca34 <ferror@plt+0x39464>  // b.none
  43c9d4:	ldrb	w2, [x7, #1122]
  43c9d8:	cbz	w2, 43c80c <ferror@plt+0x3923c>
  43c9dc:	cmp	w1, #0x40
  43c9e0:	b.ne	43c80c <ferror@plt+0x3923c>  // b.any
  43c9e4:	cmp	w4, #0x35
  43c9e8:	cset	w0, eq  // eq = none
  43c9ec:	cmp	w4, #0x3e
  43c9f0:	csinc	w0, w0, wzr, ne  // ne = any
  43c9f4:	b	43c80c <ferror@plt+0x3923c>
  43c9f8:	ldrb	w1, [x7, #1161]
  43c9fc:	cbz	w1, 43c80c <ferror@plt+0x3923c>
  43ca00:	cmp	w4, #0x35
  43ca04:	b.eq	43ca34 <ferror@plt+0x39464>  // b.none
  43ca08:	sbfiz	x8, x8, #4, #32
  43ca0c:	ldr	w1, [x6, x8]
  43ca10:	cmp	w1, #0x2
  43ca14:	b.ne	43c80c <ferror@plt+0x3923c>  // b.any
  43ca18:	ldr	x0, [x2, #16]
  43ca1c:	ldrb	w1, [x0]
  43ca20:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43ca24:	add	x0, x0, #0x228
  43ca28:	ldrh	w0, [x0, x1, lsl #1]
  43ca2c:	ubfx	x0, x0, #9, #1
  43ca30:	b	43c80c <ferror@plt+0x3923c>
  43ca34:	mov	w0, #0x1                   	// #1
  43ca38:	b	43c80c <ferror@plt+0x3923c>
  43ca3c:	stp	x29, x30, [sp, #-48]!
  43ca40:	mov	x29, sp
  43ca44:	stp	x19, x20, [sp, #16]
  43ca48:	mov	x20, x1
  43ca4c:	str	x21, [sp, #32]
  43ca50:	mov	x21, x0
  43ca54:	bl	444ea4 <ferror@plt+0x418d4>
  43ca58:	mov	x19, x0
  43ca5c:	ldrb	w0, [x19, #4]
  43ca60:	mov	x1, x20
  43ca64:	cmp	w0, #0x16
  43ca68:	b.eq	43ca98 <ferror@plt+0x394c8>  // b.none
  43ca6c:	mov	x0, x19
  43ca70:	bl	43c5b4 <ferror@plt+0x38fe4>
  43ca74:	mov	x0, x21
  43ca78:	bl	444ea4 <ferror@plt+0x418d4>
  43ca7c:	mov	x19, x0
  43ca80:	ldrh	w0, [x0, #6]
  43ca84:	tbz	w0, #0, 43ca5c <ferror@plt+0x3948c>
  43ca88:	mov	x1, x20
  43ca8c:	mov	w0, #0x20                  	// #32
  43ca90:	bl	402eb0 <putc_unlocked@plt>
  43ca94:	b	43ca5c <ferror@plt+0x3948c>
  43ca98:	ldp	x19, x20, [sp, #16]
  43ca9c:	mov	w0, #0xa                   	// #10
  43caa0:	ldr	x21, [sp, #32]
  43caa4:	ldp	x29, x30, [sp], #48
  43caa8:	b	402eb0 <putc_unlocked@plt>
  43caac:	stp	x29, x30, [sp, #-80]!
  43cab0:	mov	x29, sp
  43cab4:	stp	x19, x20, [sp, #16]
  43cab8:	stp	x21, x22, [sp, #32]
  43cabc:	mov	x22, x0
  43cac0:	mov	x21, x1
  43cac4:	stp	x23, x24, [sp, #48]
  43cac8:	str	x25, [sp, #64]
  43cacc:	cbz	x1, 43cb94 <ferror@plt+0x395c4>
  43cad0:	mov	x0, x1
  43cad4:	bl	402d50 <strlen@plt>
  43cad8:	mov	w19, w0
  43cadc:	add	w0, w19, #0x78
  43cae0:	add	w23, w19, #0x78
  43cae4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43cae8:	mov	x20, x0
  43caec:	cbz	x21, 43cb04 <ferror@plt+0x39534>
  43caf0:	add	w19, w19, #0x2
  43caf4:	mov	x2, x21
  43caf8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43cafc:	add	x1, x1, #0x6d3
  43cb00:	bl	402e00 <sprintf@plt>
  43cb04:	mov	x0, x22
  43cb08:	bl	444ea4 <ferror@plt+0x418d4>
  43cb0c:	mov	x21, x0
  43cb10:	mov	w25, #0x20                  	// #32
  43cb14:	ldrb	w0, [x21, #4]
  43cb18:	mov	w24, w19
  43cb1c:	cmp	w0, #0x16
  43cb20:	b.eq	43cb9c <ferror@plt+0x395cc>  // b.none
  43cb24:	add	w19, w19, #0x2
  43cb28:	mov	x0, x21
  43cb2c:	bl	43c2e8 <ferror@plt+0x38d18>
  43cb30:	add	w19, w19, w0
  43cb34:	cmp	w19, w23
  43cb38:	b.ls	43cb58 <ferror@plt+0x39588>  // b.plast
  43cb3c:	lsl	w1, w23, #1
  43cb40:	mov	x0, x20
  43cb44:	cmp	w19, w1
  43cb48:	csel	w23, w19, w1, cs  // cs = hs, nlast
  43cb4c:	csel	w1, w19, w1, cs  // cs = hs, nlast
  43cb50:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  43cb54:	mov	x20, x0
  43cb58:	add	x2, x20, x24
  43cb5c:	mov	x1, x21
  43cb60:	mov	w3, #0x0                   	// #0
  43cb64:	mov	x0, x22
  43cb68:	bl	43c3a0 <ferror@plt+0x38dd0>
  43cb6c:	sub	x24, x0, x20
  43cb70:	mov	x0, x22
  43cb74:	bl	444ea4 <ferror@plt+0x418d4>
  43cb78:	mov	x21, x0
  43cb7c:	ldrh	w0, [x0, #6]
  43cb80:	mov	w19, w24
  43cb84:	tbz	w0, #0, 43cb14 <ferror@plt+0x39544>
  43cb88:	add	w19, w24, #0x1
  43cb8c:	strb	w25, [x20, w24, uxtw]
  43cb90:	b	43cb14 <ferror@plt+0x39544>
  43cb94:	mov	w19, #0x0                   	// #0
  43cb98:	b	43cadc <ferror@plt+0x3950c>
  43cb9c:	strb	wzr, [x20, x24]
  43cba0:	mov	x0, x20
  43cba4:	ldp	x19, x20, [sp, #16]
  43cba8:	ldp	x21, x22, [sp, #32]
  43cbac:	ldp	x23, x24, [sp, #48]
  43cbb0:	ldr	x25, [sp, #64]
  43cbb4:	ldp	x29, x30, [sp], #80
  43cbb8:	ret
  43cbbc:	mov	x2, x1
  43cbc0:	mov	x3, x2
  43cbc4:	ldr	x2, [x2]
  43cbc8:	cbnz	x2, 43cbc0 <ferror@plt+0x395f0>
  43cbcc:	ldr	x2, [x0, #72]
  43cbd0:	str	x2, [x3]
  43cbd4:	str	x1, [x0, #72]
  43cbd8:	ret
  43cbdc:	add	x3, x1, x1, lsl #1
  43cbe0:	add	x5, x0, #0x48
  43cbe4:	mov	x2, #0x1f40                	// #8000
  43cbe8:	ldr	x0, [x0, #72]
  43cbec:	add	x3, x2, x3, lsr #1
  43cbf0:	cbnz	x0, 43cc3c <ferror@plt+0x3966c>
  43cbf4:	stp	x29, x30, [sp, #-32]!
  43cbf8:	mov	x29, sp
  43cbfc:	str	x19, [sp, #16]
  43cc00:	mov	x19, #0x1f40                	// #8000
  43cc04:	cmp	x1, x19
  43cc08:	csel	x19, x1, x19, cs  // cs = hs, nlast
  43cc0c:	add	x19, x19, #0x7
  43cc10:	and	x19, x19, #0xfffffffffffffff8
  43cc14:	add	x0, x19, #0x20
  43cc18:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43cc1c:	mov	x1, x0
  43cc20:	add	x0, x0, x19
  43cc24:	stp	x1, x1, [x0, #8]
  43cc28:	str	x0, [x0, #24]
  43cc2c:	str	xzr, [x1, x19]
  43cc30:	ldr	x19, [sp, #16]
  43cc34:	ldp	x29, x30, [sp], #32
  43cc38:	ret
  43cc3c:	ldr	x4, [x0, #8]
  43cc40:	ldr	x2, [x0, #24]
  43cc44:	sub	x2, x2, x4
  43cc48:	cmp	x2, x1
  43cc4c:	b.cc	43cc58 <ferror@plt+0x39688>  // b.lo, b.ul, b.last
  43cc50:	cmp	x3, x2
  43cc54:	b.cs	43cc64 <ferror@plt+0x39694>  // b.hs, b.nlast
  43cc58:	mov	x5, x0
  43cc5c:	ldr	x0, [x0]
  43cc60:	b	43cbf0 <ferror@plt+0x39620>
  43cc64:	ldr	x1, [x0]
  43cc68:	str	x1, [x5]
  43cc6c:	str	xzr, [x0]
  43cc70:	str	x4, [x0, #16]
  43cc74:	ret
  43cc78:	stp	x29, x30, [sp, #-32]!
  43cc7c:	mov	x29, sp
  43cc80:	stp	x19, x20, [sp, #16]
  43cc84:	mov	x19, x1
  43cc88:	ldp	x1, x3, [x1, #16]
  43cc8c:	sub	x1, x3, x1
  43cc90:	add	x1, x2, x1, lsl #1
  43cc94:	bl	43cbdc <ferror@plt+0x3960c>
  43cc98:	ldp	x1, x2, [x19, #16]
  43cc9c:	mov	x20, x0
  43cca0:	ldr	x0, [x0, #8]
  43cca4:	str	x20, [x19]
  43cca8:	sub	x2, x2, x1
  43ccac:	bl	402cd0 <memcpy@plt>
  43ccb0:	mov	x0, x20
  43ccb4:	ldp	x19, x20, [sp, #16]
  43ccb8:	ldp	x29, x30, [sp], #32
  43ccbc:	ret
  43ccc0:	stp	x29, x30, [sp, #-80]!
  43ccc4:	mov	x29, sp
  43ccc8:	stp	x21, x22, [sp, #32]
  43cccc:	ldr	x22, [x3]
  43ccd0:	stp	x19, x20, [sp, #16]
  43ccd4:	mov	x20, x2
  43ccd8:	stp	x23, x24, [sp, #48]
  43ccdc:	mov	x23, x1
  43cce0:	mov	x24, x4
  43cce4:	stp	x25, x26, [sp, #64]
  43cce8:	mov	x25, x3
  43ccec:	ldr	x19, [x4]
  43ccf0:	cbnz	x22, 43cd40 <ferror@plt+0x39770>
  43ccf4:	mov	x1, x2
  43ccf8:	bl	43cbdc <ferror@plt+0x3960c>
  43ccfc:	mov	x22, x0
  43cd00:	mov	x19, x0
  43cd04:	ldr	x0, [x19, #16]
  43cd08:	mov	x2, x20
  43cd0c:	mov	x1, x23
  43cd10:	bl	402cd0 <memcpy@plt>
  43cd14:	ldr	x2, [x19, #16]
  43cd18:	add	x20, x2, x20
  43cd1c:	str	x20, [x19, #16]
  43cd20:	str	x22, [x25]
  43cd24:	ldp	x21, x22, [sp, #32]
  43cd28:	ldp	x25, x26, [sp, #64]
  43cd2c:	str	x19, [x24]
  43cd30:	ldp	x19, x20, [sp, #16]
  43cd34:	ldp	x23, x24, [sp, #48]
  43cd38:	ldp	x29, x30, [sp], #80
  43cd3c:	ret
  43cd40:	mov	x26, x0
  43cd44:	ldp	x0, x21, [x19, #16]
  43cd48:	sub	x21, x21, x0
  43cd4c:	cmp	x21, x2
  43cd50:	b.cs	43cd04 <ferror@plt+0x39734>  // b.hs, b.nlast
  43cd54:	mov	x2, x21
  43cd58:	bl	402cd0 <memcpy@plt>
  43cd5c:	ldr	x0, [x19, #16]
  43cd60:	sub	x20, x20, x21
  43cd64:	mov	x1, x19
  43cd68:	mov	x2, x20
  43cd6c:	add	x0, x0, x21
  43cd70:	str	x0, [x19, #16]
  43cd74:	add	x23, x23, x21
  43cd78:	mov	x0, x26
  43cd7c:	bl	43cc78 <ferror@plt+0x396a8>
  43cd80:	mov	x19, x0
  43cd84:	b	43cd04 <ferror@plt+0x39734>
  43cd88:	stp	x29, x30, [sp, #-48]!
  43cd8c:	mov	x29, sp
  43cd90:	stp	x19, x20, [sp, #16]
  43cd94:	ldr	x20, [x1]
  43cd98:	str	x21, [sp, #32]
  43cd9c:	mov	x21, x1
  43cda0:	ldp	x1, x3, [x20, #16]
  43cda4:	sub	x1, x3, x1
  43cda8:	add	x1, x2, x1, lsl #1
  43cdac:	bl	43cbdc <ferror@plt+0x3960c>
  43cdb0:	ldp	x1, x2, [x20, #16]
  43cdb4:	mov	x19, x0
  43cdb8:	ldr	x0, [x0, #8]
  43cdbc:	sub	x2, x2, x1
  43cdc0:	bl	402cd0 <memcpy@plt>
  43cdc4:	str	x20, [x19]
  43cdc8:	str	x19, [x21]
  43cdcc:	ldp	x19, x20, [sp, #16]
  43cdd0:	ldr	x21, [sp, #32]
  43cdd4:	ldp	x29, x30, [sp], #48
  43cdd8:	ret
  43cddc:	cbnz	x0, 43cde4 <ferror@plt+0x39814>
  43cde0:	ret
  43cde4:	stp	x29, x30, [sp, #-32]!
  43cde8:	mov	x29, sp
  43cdec:	str	x19, [sp, #16]
  43cdf0:	ldp	x19, x0, [x0]
  43cdf4:	bl	4032a0 <free@plt>
  43cdf8:	mov	x0, x19
  43cdfc:	cbnz	x19, 43cdf0 <ferror@plt+0x39820>
  43ce00:	ldr	x19, [sp, #16]
  43ce04:	ldp	x29, x30, [sp], #32
  43ce08:	ret
  43ce0c:	stp	x29, x30, [sp, #-32]!
  43ce10:	mov	x29, sp
  43ce14:	ldr	x2, [x0, #64]
  43ce18:	stp	x19, x20, [sp, #16]
  43ce1c:	mov	x19, x1
  43ce20:	ldp	x3, x4, [x2, #16]
  43ce24:	sub	x4, x4, x3
  43ce28:	cmp	x4, x1
  43ce2c:	b.cs	43ce4c <ferror@plt+0x3987c>  // b.hs, b.nlast
  43ce30:	mov	x20, x0
  43ce34:	bl	43cbdc <ferror@plt+0x3960c>
  43ce38:	mov	x2, x0
  43ce3c:	ldr	x3, [x0, #16]
  43ce40:	ldr	x0, [x20, #64]
  43ce44:	str	x0, [x2]
  43ce48:	str	x2, [x20, #64]
  43ce4c:	add	x19, x3, x19
  43ce50:	str	x19, [x2, #16]
  43ce54:	mov	x0, x3
  43ce58:	ldp	x19, x20, [sp, #16]
  43ce5c:	ldp	x29, x30, [sp], #32
  43ce60:	ret
  43ce64:	stp	x29, x30, [sp, #-64]!
  43ce68:	mov	x29, sp
  43ce6c:	stp	x23, x24, [sp, #48]
  43ce70:	mov	w24, w3
  43ce74:	mov	x23, x2
  43ce78:	stp	x19, x20, [sp, #16]
  43ce7c:	mov	x19, x1
  43ce80:	add	w1, w24, #0x1
  43ce84:	stp	x21, x22, [sp, #32]
  43ce88:	mov	w22, w4
  43ce8c:	bl	43ce0c <ferror@plt+0x3983c>
  43ce90:	mov	x21, x0
  43ce94:	mov	x2, x24
  43ce98:	mov	x1, x23
  43ce9c:	bl	402cd0 <memcpy@plt>
  43cea0:	mov	x20, x24
  43cea4:	strb	wzr, [x21, x24]
  43cea8:	strb	w22, [x19, #4]
  43ceac:	ldp	x23, x24, [sp, #48]
  43ceb0:	str	w20, [x19, #8]
  43ceb4:	str	x21, [x19, #16]
  43ceb8:	ldp	x19, x20, [sp, #16]
  43cebc:	ldp	x21, x22, [sp, #32]
  43cec0:	ldp	x29, x30, [sp], #64
  43cec4:	ret
  43cec8:	stp	x29, x30, [sp, #-208]!
  43cecc:	mov	x29, sp
  43ced0:	stp	x19, x20, [sp, #16]
  43ced4:	mov	x19, x2
  43ced8:	stp	x21, x22, [sp, #32]
  43cedc:	mov	x21, x1
  43cee0:	mov	w1, #0x55                  	// #85
  43cee4:	stp	x23, x24, [sp, #48]
  43cee8:	stp	x25, x26, [sp, #64]
  43ceec:	stp	x27, x28, [sp, #80]
  43cef0:	mov	x27, x0
  43cef4:	ldrb	w0, [x2]
  43cef8:	cmp	w0, #0x4c
  43cefc:	ccmp	w0, w1, #0x4, ne  // ne = any
  43cf00:	b.ne	43cfb4 <ferror@plt+0x399e4>  // b.any
  43cf04:	ldrb	w22, [x2, #1]
  43cf08:	add	x6, x2, #0x2
  43cf0c:	cmp	w22, #0x52
  43cf10:	b.ne	43d73c <ferror@plt+0x3a16c>  // b.any
  43cf14:	ldr	x1, [x27]
  43cf18:	stp	xzr, xzr, [sp, #144]
  43cf1c:	cmp	w0, #0x4c
  43cf20:	ldr	w8, [x1, #56]
  43cf24:	ldr	x1, [x1, #48]
  43cf28:	add	x28, x1, x8, lsl #4
  43cf2c:	b.eq	43cfe8 <ferror@plt+0x39a18>  // b.none
  43cf30:	cmp	w0, #0x55
  43cf34:	b.eq	43cff0 <ferror@plt+0x39a20>  // b.none
  43cf38:	cmp	w0, #0x75
  43cf3c:	b.ne	43cff8 <ferror@plt+0x39a28>  // b.any
  43cf40:	ldrb	w0, [x19, #1]
  43cf44:	mov	w22, #0x42                  	// #66
  43cf48:	cmp	w0, #0x38
  43cf4c:	mov	w0, #0x40                  	// #64
  43cf50:	csel	w22, w22, w0, eq  // eq = none
  43cf54:	add	x25, x6, #0x1
  43cf58:	mov	x24, x19
  43cf5c:	sub	x0, x25, x19
  43cf60:	mov	x23, #0x0                   	// #0
  43cf64:	mov	x20, #0x0                   	// #0
  43cf68:	stp	wzr, wzr, [sp, #100]
  43cf6c:	str	wzr, [sp, #108]
  43cf70:	str	x0, [sp, #112]
  43cf74:	ldr	x0, [x28]
  43cf78:	cmp	x0, x25
  43cf7c:	b.cc	43d018 <ferror@plt+0x39a48>  // b.lo, b.ul, b.last
  43cf80:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x1bc10>
  43cf84:	add	x26, x26, #0x68
  43cf88:	ldr	x0, [x28]
  43cf8c:	cmp	x25, x0
  43cf90:	b.ne	43d2f4 <ferror@plt+0x39d24>  // b.any
  43cf94:	ldr	w0, [x28, #8]
  43cf98:	cmp	w0, #0x20
  43cf9c:	b.eq	43d024 <ferror@plt+0x39a54>  // b.none
  43cfa0:	cmp	w0, #0x5c
  43cfa4:	b.eq	43d024 <ferror@plt+0x39a54>  // b.none
  43cfa8:	cbnz	w0, 43d12c <ferror@plt+0x39b5c>
  43cfac:	add	x28, x28, #0x10
  43cfb0:	b	43cf88 <ferror@plt+0x399b8>
  43cfb4:	cmp	w0, #0x75
  43cfb8:	b.eq	43cfc8 <ferror@plt+0x399f8>  // b.none
  43cfbc:	mov	w22, w0
  43cfc0:	add	x6, x2, #0x1
  43cfc4:	b	43cf0c <ferror@plt+0x3993c>
  43cfc8:	ldrb	w22, [x2, #1]
  43cfcc:	cmp	w22, #0x38
  43cfd0:	b.eq	43cfdc <ferror@plt+0x39a0c>  // b.none
  43cfd4:	add	x6, x2, #0x2
  43cfd8:	b	43cf0c <ferror@plt+0x3993c>
  43cfdc:	ldrb	w22, [x2, #2]
  43cfe0:	add	x6, x2, #0x3
  43cfe4:	b	43cf0c <ferror@plt+0x3993c>
  43cfe8:	mov	w22, #0x3f                  	// #63
  43cfec:	b	43cf54 <ferror@plt+0x39984>
  43cff0:	mov	w22, #0x41                  	// #65
  43cff4:	b	43cf54 <ferror@plt+0x39984>
  43cff8:	mov	w22, #0x3e                  	// #62
  43cffc:	b	43cf54 <ferror@plt+0x39984>
  43d000:	mov	w0, #0x2                   	// #2
  43d004:	mov	x26, #0x0                   	// #0
  43d008:	str	w0, [sp, #100]
  43d00c:	str	wzr, [sp, #108]
  43d010:	mov	x23, x26
  43d014:	b	43cf74 <ferror@plt+0x399a4>
  43d018:	add	x28, x28, #0x10
  43d01c:	mov	x26, x23
  43d020:	b	43d010 <ferror@plt+0x39a40>
  43d024:	sub	x5, x25, x24
  43d028:	mov	x1, x24
  43d02c:	mov	x2, x5
  43d030:	add	x4, sp, #0x98
  43d034:	add	x3, sp, #0x90
  43d038:	mov	x0, x27
  43d03c:	str	x5, [sp, #120]
  43d040:	bl	43ccc0 <ferror@plt+0x396f0>
  43d044:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  43d048:	add	x24, x1, #0x2d
  43d04c:	mov	x2, #0x1                   	// #1
  43d050:	add	x4, sp, #0x98
  43d054:	add	x3, sp, #0x90
  43d058:	mov	x1, x24
  43d05c:	mov	x0, x27
  43d060:	bl	43ccc0 <ferror@plt+0x396f0>
  43d064:	ldr	x5, [sp, #120]
  43d068:	add	x20, x20, #0x1
  43d06c:	cmp	x23, #0x10
  43d070:	add	x2, x20, x5
  43d074:	b.hi	43d090 <ferror@plt+0x39ac0>  // b.pmore
  43d078:	cmp	x25, x24
  43d07c:	b.eq	43d090 <ferror@plt+0x39ac0>  // b.none
  43d080:	add	x1, sp, #0xb8
  43d084:	mov	w0, #0x5c                  	// #92
  43d088:	strb	w0, [x1, x23]
  43d08c:	add	x23, x23, #0x1
  43d090:	ldr	w24, [x28, #8]
  43d094:	add	x20, x2, #0x1
  43d098:	cmp	w24, #0x20
  43d09c:	b.ne	43d124 <ferror@plt+0x39b54>  // b.any
  43d0a0:	mov	x0, x27
  43d0a4:	add	x4, sp, #0x98
  43d0a8:	add	x3, sp, #0x90
  43d0ac:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43d0b0:	mov	x2, #0x1                   	// #1
  43d0b4:	add	x1, x1, #0xd73
  43d0b8:	bl	43ccc0 <ferror@plt+0x396f0>
  43d0bc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43d0c0:	cmp	x23, #0x10
  43d0c4:	add	x1, x0, #0xd73
  43d0c8:	b.hi	43d0e0 <ferror@plt+0x39b10>  // b.pmore
  43d0cc:	cmp	x25, x1
  43d0d0:	b.eq	43d0e0 <ferror@plt+0x39b10>  // b.none
  43d0d4:	add	x0, sp, #0xb8
  43d0d8:	strb	w24, [x0, x23]
  43d0dc:	add	x23, x23, #0x1
  43d0e0:	add	x4, sp, #0x98
  43d0e4:	add	x3, sp, #0x90
  43d0e8:	mov	x1, x26
  43d0ec:	mov	x0, x27
  43d0f0:	mov	x2, #0x1                   	// #1
  43d0f4:	bl	43ccc0 <ferror@plt+0x396f0>
  43d0f8:	add	x20, x20, #0x1
  43d0fc:	mov	x24, x25
  43d100:	cmp	x23, #0x10
  43d104:	b.hi	43cfac <ferror@plt+0x399dc>  // b.pmore
  43d108:	cmp	x25, x26
  43d10c:	b.eq	43cfac <ferror@plt+0x399dc>  // b.none
  43d110:	add	x1, sp, #0xb8
  43d114:	mov	w0, #0xa                   	// #10
  43d118:	strb	w0, [x1, x23]
  43d11c:	add	x23, x23, #0x1
  43d120:	b	43cfac <ferror@plt+0x399dc>
  43d124:	mov	x20, x2
  43d128:	b	43d0e0 <ferror@plt+0x39b10>
  43d12c:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  43d130:	add	x1, x1, #0x26c
  43d134:	ldrb	w1, [x1, w0, uxtw]
  43d138:	cbz	w1, 43d2e4 <ferror@plt+0x39d14>
  43d13c:	str	wzr, [x28, #8]
  43d140:	strb	w0, [sp, #143]
  43d144:	ldrb	w0, [x27, #1125]
  43d148:	cbz	w0, 43cfac <ferror@plt+0x399dc>
  43d14c:	sub	x2, x25, x24
  43d150:	mov	x1, x24
  43d154:	add	x4, sp, #0x98
  43d158:	add	x3, sp, #0x90
  43d15c:	mov	x0, x27
  43d160:	str	x2, [sp, #120]
  43d164:	bl	43ccc0 <ferror@plt+0x396f0>
  43d168:	ldr	x2, [sp, #120]
  43d16c:	adrp	x1, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  43d170:	add	x24, x1, #0xd5b
  43d174:	add	x4, sp, #0x98
  43d178:	add	x3, sp, #0x90
  43d17c:	mov	x1, x24
  43d180:	mov	x0, x27
  43d184:	add	x20, x20, x2
  43d188:	mov	x2, #0x2                   	// #2
  43d18c:	bl	43ccc0 <ferror@plt+0x396f0>
  43d190:	cmp	x23, #0x10
  43d194:	b.hi	43d1b0 <ferror@plt+0x39be0>  // b.pmore
  43d198:	cmp	x25, x24
  43d19c:	b.eq	43d1b0 <ferror@plt+0x39be0>  // b.none
  43d1a0:	add	x1, sp, #0xb8
  43d1a4:	mov	w0, #0x3f3f                	// #16191
  43d1a8:	strh	w0, [x1, x23]
  43d1ac:	add	x23, x23, #0x2
  43d1b0:	ldrb	w0, [sp, #143]
  43d1b4:	add	x20, x20, #0x3
  43d1b8:	cmp	w0, #0x2f
  43d1bc:	b.ne	43d244 <ferror@plt+0x39c74>  // b.any
  43d1c0:	ldr	x0, [x28, #16]
  43d1c4:	cmp	x25, x0
  43d1c8:	b.ne	43d244 <ferror@plt+0x39c74>  // b.any
  43d1cc:	ldr	w0, [x28, #24]
  43d1d0:	cmp	w0, #0x5c
  43d1d4:	b.eq	43d1f8 <ferror@plt+0x39c28>  // b.none
  43d1d8:	cmp	w0, #0x20
  43d1dc:	b.eq	43d1f8 <ferror@plt+0x39c28>  // b.none
  43d1e0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d1e4:	add	x2, x2, #0x6d8
  43d1e8:	mov	w1, #0x6e1                 	// #1761
  43d1ec:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d1f0:	add	x0, x0, #0x43d
  43d1f4:	bl	403600 <ferror@plt+0x30>
  43d1f8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  43d1fc:	add	x24, x1, #0x10c
  43d200:	mov	x2, #0x1                   	// #1
  43d204:	add	x4, sp, #0x98
  43d208:	add	x3, sp, #0x90
  43d20c:	mov	x1, x24
  43d210:	mov	x0, x27
  43d214:	bl	43ccc0 <ferror@plt+0x396f0>
  43d218:	mov	x2, x20
  43d21c:	cmp	x23, #0x10
  43d220:	b.hi	43d23c <ferror@plt+0x39c6c>  // b.pmore
  43d224:	cmp	x25, x24
  43d228:	b.eq	43d23c <ferror@plt+0x39c6c>  // b.none
  43d22c:	add	x1, sp, #0xb8
  43d230:	mov	w0, #0x2f                  	// #47
  43d234:	strb	w0, [x1, x23]
  43d238:	add	x23, x23, #0x1
  43d23c:	add	x28, x28, #0x10
  43d240:	b	43d090 <ferror@plt+0x39ac0>
  43d244:	add	x26, sp, #0x8f
  43d248:	add	x4, sp, #0x98
  43d24c:	add	x3, sp, #0x90
  43d250:	mov	x1, x26
  43d254:	mov	x0, x27
  43d258:	mov	x2, #0x1                   	// #1
  43d25c:	bl	43ccc0 <ferror@plt+0x396f0>
  43d260:	add	x25, x25, #0x1
  43d264:	cmp	x23, #0x10
  43d268:	b.hi	43d284 <ferror@plt+0x39cb4>  // b.pmore
  43d26c:	cmp	x25, x26
  43d270:	b.eq	43d284 <ferror@plt+0x39cb4>  // b.none
  43d274:	add	x1, sp, #0xb8
  43d278:	ldrb	w0, [sp, #143]
  43d27c:	strb	w0, [x1, x23]
  43d280:	add	x23, x23, #0x1
  43d284:	ldrb	w0, [sp, #143]
  43d288:	mov	x24, x25
  43d28c:	ldr	w1, [sp, #100]
  43d290:	cbnz	w1, 43d424 <ferror@plt+0x39e54>
  43d294:	ldr	w0, [sp, #104]
  43d298:	mov	x3, #0xffffffff77ffffff    	// #-2281701377
  43d29c:	mov	x4, #0xfcee00000000        	// #278099132416000
  43d2a0:	mov	x2, #0x1                   	// #1
  43d2a4:	movk	x3, #0x3fff, lsl #48
  43d2a8:	movk	x4, #0xffff, lsl #48
  43d2ac:	str	w0, [sp, #104]
  43d2b0:	cmp	x23, x0
  43d2b4:	b.ls	43d01c <ferror@plt+0x39a4c>  // b.plast
  43d2b8:	add	x1, sp, #0xb8
  43d2bc:	ldrb	w5, [x1, x0]
  43d2c0:	add	x1, sp, #0xa0
  43d2c4:	cmp	w5, #0x3f
  43d2c8:	strb	w5, [x1, x0]
  43d2cc:	b.hi	43d310 <ferror@plt+0x39d40>  // b.pmore
  43d2d0:	cmp	w5, #0x20
  43d2d4:	b.ls	43d32c <ferror@plt+0x39d5c>  // b.plast
  43d2d8:	lsl	x1, x2, x5
  43d2dc:	tst	x1, x4
  43d2e0:	b	43d328 <ferror@plt+0x39d58>
  43d2e4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d2e8:	mov	w1, #0x6f0                 	// #1776
  43d2ec:	add	x2, x2, #0x6d8
  43d2f0:	b	43d1ec <ferror@plt+0x39c1c>
  43d2f4:	ldrb	w0, [x25], #1
  43d2f8:	cmp	x23, #0x10
  43d2fc:	b.hi	43d28c <ferror@plt+0x39cbc>  // b.pmore
  43d300:	add	x1, sp, #0xb8
  43d304:	strb	w0, [x1, x23]
  43d308:	add	x23, x23, #0x1
  43d30c:	b	43d28c <ferror@plt+0x39cbc>
  43d310:	sub	w1, w5, #0x41
  43d314:	and	w1, w1, #0xff
  43d318:	cmp	w1, #0x3d
  43d31c:	b.hi	43d32c <ferror@plt+0x39d5c>  // b.pmore
  43d320:	lsl	x1, x2, x1
  43d324:	tst	x1, x3
  43d328:	b.ne	43d3c4 <ferror@plt+0x39df4>  // b.any
  43d32c:	cmp	w5, #0x28
  43d330:	b.eq	43d404 <ferror@plt+0x39e34>  // b.none
  43d334:	ldr	x0, [x27]
  43d338:	ldr	w2, [x21]
  43d33c:	ldr	x3, [x0, #8]
  43d340:	ldr	w0, [sp, #104]
  43d344:	sub	x3, x25, x3
  43d348:	add	w3, w3, #0x1
  43d34c:	cmp	w0, #0x10
  43d350:	b.ne	43d3d8 <ferror@plt+0x39e08>  // b.any
  43d354:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d358:	add	x4, x4, #0x6e7
  43d35c:	mov	x0, x27
  43d360:	mov	w1, #0x3                   	// #3
  43d364:	bl	435cf8 <ferror@plt+0x32728>
  43d368:	ldr	x0, [sp, #112]
  43d36c:	mov	x2, x19
  43d370:	ldr	x1, [x27]
  43d374:	sub	x0, x0, #0x1
  43d378:	add	x0, x19, x0
  43d37c:	mov	w4, #0x3d                  	// #61
  43d380:	str	x0, [x1]
  43d384:	mov	x1, x21
  43d388:	ldr	w0, [sp, #112]
  43d38c:	sub	w3, w0, #0x1
  43d390:	mov	x0, x27
  43d394:	bl	43ce64 <ferror@plt+0x39894>
  43d398:	ldr	x1, [sp, #144]
  43d39c:	cbz	x1, 43d3a8 <ferror@plt+0x39dd8>
  43d3a0:	mov	x0, x27
  43d3a4:	bl	43cbbc <ferror@plt+0x395ec>
  43d3a8:	ldp	x19, x20, [sp, #16]
  43d3ac:	ldp	x21, x22, [sp, #32]
  43d3b0:	ldp	x23, x24, [sp, #48]
  43d3b4:	ldp	x25, x26, [sp, #64]
  43d3b8:	ldp	x27, x28, [sp, #80]
  43d3bc:	ldp	x29, x30, [sp], #208
  43d3c0:	ret
  43d3c4:	ldr	w1, [sp, #104]
  43d3c8:	cmp	w1, #0xf
  43d3cc:	b.hi	43d32c <ferror@plt+0x39d5c>  // b.pmore
  43d3d0:	add	x0, x0, #0x1
  43d3d4:	b	43d2ac <ferror@plt+0x39cdc>
  43d3d8:	cmp	w5, #0xa
  43d3dc:	b.ne	43d3ec <ferror@plt+0x39e1c>  // b.any
  43d3e0:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d3e4:	add	x4, x4, #0x716
  43d3e8:	b	43d35c <ferror@plt+0x39d8c>
  43d3ec:	mov	x0, x27
  43d3f0:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d3f4:	mov	w1, #0x3                   	// #3
  43d3f8:	add	x4, x4, #0x73f
  43d3fc:	bl	435cf8 <ferror@plt+0x32728>
  43d400:	b	43d368 <ferror@plt+0x39d98>
  43d404:	ldr	w1, [sp, #104]
  43d408:	add	x2, sp, #0xa0
  43d40c:	mov	w0, #0x22                  	// #34
  43d410:	mov	x26, #0x11                  	// #17
  43d414:	strb	w0, [x2, w1, uxtw]
  43d418:	mov	w0, #0x1                   	// #1
  43d41c:	str	w0, [sp, #100]
  43d420:	b	43d010 <ferror@plt+0x39a40>
  43d424:	ldr	w1, [sp, #100]
  43d428:	cmp	w1, #0x2
  43d42c:	b.ne	43d47c <ferror@plt+0x39eac>  // b.any
  43d430:	ldr	w26, [sp, #108]
  43d434:	ldr	w1, [sp, #104]
  43d438:	str	w26, [sp, #108]
  43d43c:	cmp	w1, w26
  43d440:	b.cc	43d4dc <ferror@plt+0x39f0c>  // b.lo, b.ul, b.last
  43d444:	cmp	x26, x23
  43d448:	b.cs	43d990 <ferror@plt+0x3a3c0>  // b.hs, b.nlast
  43d44c:	add	x1, sp, #0xb8
  43d450:	add	x2, sp, #0xa0
  43d454:	ldrb	w1, [x1, x26]
  43d458:	add	x26, x26, #0x1
  43d45c:	add	x2, x26, x2
  43d460:	ldurb	w2, [x2, #-1]
  43d464:	cmp	w2, w1
  43d468:	b.eq	43d434 <ferror@plt+0x39e64>  // b.none
  43d46c:	mov	w1, #0x1                   	// #1
  43d470:	mov	x26, #0x11                  	// #17
  43d474:	str	w1, [sp, #100]
  43d478:	b	43d480 <ferror@plt+0x39eb0>
  43d47c:	mov	x26, x23
  43d480:	cmp	w0, #0x29
  43d484:	b.eq	43d000 <ferror@plt+0x39a30>  // b.none
  43d488:	cmp	w0, #0xa
  43d48c:	b.ne	43d010 <ferror@plt+0x39a40>  // b.any
  43d490:	ldrb	w0, [x27, #16]
  43d494:	sub	x23, x25, #0x1
  43d498:	cbnz	w0, 43d4b8 <ferror@plt+0x39ee8>
  43d49c:	ldrb	w0, [x27, #25]
  43d4a0:	cbz	w0, 43d56c <ferror@plt+0x39f9c>
  43d4a4:	ldr	x0, [x27]
  43d4a8:	ldr	x1, [x0, #16]
  43d4ac:	ldr	x0, [x0, #32]
  43d4b0:	cmp	x1, x0
  43d4b4:	b.cc	43d56c <ferror@plt+0x39f9c>  // b.lo, b.ul, b.last
  43d4b8:	ldr	w2, [x21]
  43d4bc:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d4c0:	mov	x25, x23
  43d4c4:	add	x4, x4, #0x76e
  43d4c8:	mov	x0, x27
  43d4cc:	mov	w3, #0x0                   	// #0
  43d4d0:	mov	w1, #0x3                   	// #3
  43d4d4:	mov	w22, #0x3d                  	// #61
  43d4d8:	bl	435cf8 <ferror@plt+0x32728>
  43d4dc:	ldrb	w0, [x27, #1161]
  43d4e0:	cbz	w0, 43d53c <ferror@plt+0x39f6c>
  43d4e4:	ldrb	w0, [x25]
  43d4e8:	cmp	w0, #0x5f
  43d4ec:	b.ne	43d4fc <ferror@plt+0x39f2c>  // b.any
  43d4f0:	ldrb	w0, [x25, #1]
  43d4f4:	cmp	w0, #0x5f
  43d4f8:	b.ne	43d67c <ferror@plt+0x3a0ac>  // b.any
  43d4fc:	mov	x1, x25
  43d500:	add	x0, x27, #0x440
  43d504:	bl	43b74c <ferror@plt+0x3817c>
  43d508:	tst	w0, #0xff
  43d50c:	b.eq	43d67c <ferror@plt+0x3a0ac>  // b.none
  43d510:	ldrb	w0, [x27, #1162]
  43d514:	cbz	w0, 43d53c <ferror@plt+0x39f6c>
  43d518:	ldrb	w0, [x27, #18]
  43d51c:	cbnz	w0, 43d53c <ferror@plt+0x39f6c>
  43d520:	ldr	w2, [x21]
  43d524:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d528:	mov	x0, x27
  43d52c:	add	x4, x4, #0x786
  43d530:	mov	w3, #0x0                   	// #0
  43d534:	mov	w1, #0x13                  	// #19
  43d538:	bl	435d68 <ferror@plt+0x32798>
  43d53c:	ldr	x0, [x27]
  43d540:	str	x25, [x0]
  43d544:	sub	x25, x25, x24
  43d548:	ldr	x0, [sp, #144]
  43d54c:	cbnz	x0, 43d6bc <ferror@plt+0x3a0ec>
  43d550:	mov	w4, w22
  43d554:	mov	w3, w25
  43d558:	mov	x2, x24
  43d55c:	mov	x1, x21
  43d560:	mov	x0, x27
  43d564:	bl	43ce64 <ferror@plt+0x39894>
  43d568:	b	43d3a8 <ferror@plt+0x39dd8>
  43d56c:	sub	x25, x25, x24
  43d570:	mov	x1, x24
  43d574:	mov	x0, x27
  43d578:	add	x4, sp, #0x98
  43d57c:	add	x3, sp, #0x90
  43d580:	mov	x2, x25
  43d584:	bl	43ccc0 <ferror@plt+0x396f0>
  43d588:	add	x20, x20, x25
  43d58c:	ldr	x0, [x27]
  43d590:	ldr	x1, [x0]
  43d594:	ldr	x0, [x0, #32]
  43d598:	cmp	x1, x0
  43d59c:	b.cs	43d5e4 <ferror@plt+0x3a014>  // b.hs, b.nlast
  43d5a0:	ldr	x0, [x27, #40]
  43d5a4:	mov	w1, #0x18                  	// #24
  43d5a8:	ldr	w2, [x0, #12]
  43d5ac:	ldr	w3, [x0, #60]
  43d5b0:	sub	w2, w2, #0x1
  43d5b4:	smull	x2, w2, w1
  43d5b8:	ldr	x1, [x0]
  43d5bc:	add	x4, x1, x2
  43d5c0:	ldr	w1, [x1, x2]
  43d5c4:	mov	w2, #0x0                   	// #0
  43d5c8:	sub	w3, w3, w1
  43d5cc:	ldrb	w1, [x4, #6]
  43d5d0:	lsr	w3, w3, w1
  43d5d4:	ldr	w1, [x4, #16]
  43d5d8:	add	w1, w1, #0x1
  43d5dc:	add	w1, w3, w1
  43d5e0:	bl	43fa38 <ferror@plt+0x3c468>
  43d5e4:	ldr	x0, [x27]
  43d5e8:	mov	w1, #0x1                   	// #1
  43d5ec:	str	x23, [x0]
  43d5f0:	strb	w1, [x0, #104]
  43d5f4:	mov	w1, #0x0                   	// #0
  43d5f8:	mov	x0, x27
  43d5fc:	bl	43bbd0 <ferror@plt+0x38600>
  43d600:	mov	x0, x27
  43d604:	bl	43c24c <ferror@plt+0x38c7c>
  43d608:	tst	w0, #0xff
  43d60c:	b.ne	43d660 <ferror@plt+0x3a090>  // b.any
  43d610:	mov	w0, #0x16                  	// #22
  43d614:	strb	w0, [x21, #4]
  43d618:	ldr	x0, [x27, #40]
  43d61c:	ldr	x1, [sp, #144]
  43d620:	ldr	w0, [x0, #60]
  43d624:	ldr	w5, [x21]
  43d628:	str	w0, [x21]
  43d62c:	mov	w0, #0x40                  	// #64
  43d630:	strh	w0, [x21, #6]
  43d634:	cbz	x1, 43d640 <ferror@plt+0x3a070>
  43d638:	mov	x0, x27
  43d63c:	bl	43cbbc <ferror@plt+0x395ec>
  43d640:	mov	w2, w5
  43d644:	mov	x0, x27
  43d648:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d64c:	mov	w3, #0x0                   	// #0
  43d650:	add	x4, x4, #0x76e
  43d654:	mov	w1, #0x3                   	// #3
  43d658:	bl	435cf8 <ferror@plt+0x32728>
  43d65c:	b	43d3a8 <ferror@plt+0x39dd8>
  43d660:	ldr	x0, [x27]
  43d664:	ldr	w8, [x0, #56]
  43d668:	ldr	x24, [x0]
  43d66c:	ldr	x0, [x0, #48]
  43d670:	mov	x25, x24
  43d674:	add	x28, x0, x8, lsl #4
  43d678:	b	43d010 <ferror@plt+0x39a40>
  43d67c:	ldrb	w0, [x25]
  43d680:	adrp	x19, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43d684:	add	x19, x19, #0x228
  43d688:	ldrh	w0, [x19, x0, lsl #1]
  43d68c:	tbz	w0, #9, 43d53c <ferror@plt+0x39f6c>
  43d690:	mov	w0, w22
  43d694:	add	x25, x25, #0x1
  43d698:	bl	436f88 <ferror@plt+0x339b8>
  43d69c:	mov	w22, w0
  43d6a0:	mov	w0, #0x204                 	// #516
  43d6a4:	ldrb	w1, [x25]
  43d6a8:	ldrh	w1, [x19, x1, lsl #1]
  43d6ac:	tst	w0, w1
  43d6b0:	b.eq	43d53c <ferror@plt+0x39f6c>  // b.none
  43d6b4:	add	x25, x25, #0x1
  43d6b8:	b	43d6a4 <ferror@plt+0x3a0d4>
  43d6bc:	add	x1, x20, #0x1
  43d6c0:	mov	x0, x27
  43d6c4:	add	x1, x1, x25
  43d6c8:	bl	43ce0c <ferror@plt+0x3983c>
  43d6cc:	mov	x19, x0
  43d6d0:	add	w20, w20, w25
  43d6d4:	ldr	x0, [sp, #144]
  43d6d8:	strb	w22, [x21, #4]
  43d6dc:	str	w20, [x21, #8]
  43d6e0:	str	x19, [x21, #16]
  43d6e4:	str	x0, [sp, #152]
  43d6e8:	ldr	x0, [sp, #152]
  43d6ec:	cbz	x0, 43d718 <ferror@plt+0x3a148>
  43d6f0:	ldp	x1, x2, [x0, #8]
  43d6f4:	mov	x0, x19
  43d6f8:	sub	x2, x2, x1
  43d6fc:	bl	402cd0 <memcpy@plt>
  43d700:	ldr	x0, [sp, #152]
  43d704:	ldp	x2, x1, [x0, #8]
  43d708:	ldr	x0, [x0]
  43d70c:	sub	x1, x1, x2
  43d710:	add	x19, x19, x1
  43d714:	b	43d6e4 <ferror@plt+0x3a114>
  43d718:	ldr	x1, [sp, #144]
  43d71c:	mov	x0, x27
  43d720:	bl	43cbbc <ferror@plt+0x395ec>
  43d724:	mov	x2, x25
  43d728:	mov	x1, x24
  43d72c:	mov	x0, x19
  43d730:	bl	402cd0 <memcpy@plt>
  43d734:	strb	wzr, [x19, x25]
  43d738:	b	43d3a8 <ferror@plt+0x39dd8>
  43d73c:	cmp	w22, #0x22
  43d740:	b.ne	43d7a8 <ferror@plt+0x3a1d8>  // b.any
  43d744:	cmp	w0, #0x4c
  43d748:	b.eq	43d7dc <ferror@plt+0x3a20c>  // b.none
  43d74c:	cmp	w0, #0x55
  43d750:	b.eq	43d7e4 <ferror@plt+0x3a214>  // b.none
  43d754:	cmp	w0, #0x75
  43d758:	b.ne	43d7ec <ferror@plt+0x3a21c>  // b.any
  43d75c:	ldrb	w0, [x19, #1]
  43d760:	mov	w20, #0x42                  	// #66
  43d764:	cmp	w0, #0x38
  43d768:	mov	w0, #0x40                  	// #64
  43d76c:	csel	w20, w20, w0, eq  // eq = none
  43d770:	mov	w0, #0x0                   	// #0
  43d774:	mov	w2, #0x1                   	// #1
  43d778:	mov	x23, x6
  43d77c:	ldrb	w1, [x23], #1
  43d780:	cmp	w1, #0x5c
  43d784:	b.ne	43d818 <ferror@plt+0x3a248>  // b.any
  43d788:	ldrb	w1, [x27, #19]
  43d78c:	cbnz	w1, 43d7a0 <ferror@plt+0x3a1d0>
  43d790:	ldrb	w1, [x6, #1]
  43d794:	cmp	w1, #0xa
  43d798:	b.eq	43d7a0 <ferror@plt+0x3a1d0>  // b.none
  43d79c:	add	x23, x6, #0x2
  43d7a0:	mov	x6, x23
  43d7a4:	b	43d778 <ferror@plt+0x3a1a8>
  43d7a8:	cmp	w22, #0x27
  43d7ac:	b.ne	43d7f4 <ferror@plt+0x3a224>  // b.any
  43d7b0:	cmp	w0, #0x4c
  43d7b4:	b.eq	43d800 <ferror@plt+0x3a230>  // b.none
  43d7b8:	cmp	w0, #0x55
  43d7bc:	b.eq	43d808 <ferror@plt+0x3a238>  // b.none
  43d7c0:	cmp	w0, #0x75
  43d7c4:	b.ne	43d810 <ferror@plt+0x3a240>  // b.any
  43d7c8:	ldrb	w0, [x19, #1]
  43d7cc:	mov	w20, #0x3c                  	// #60
  43d7d0:	cmp	w0, #0x38
  43d7d4:	mov	w0, #0x3a                  	// #58
  43d7d8:	b	43d76c <ferror@plt+0x3a19c>
  43d7dc:	mov	w20, #0x3f                  	// #63
  43d7e0:	b	43d770 <ferror@plt+0x3a1a0>
  43d7e4:	mov	w20, #0x41                  	// #65
  43d7e8:	b	43d770 <ferror@plt+0x3a1a0>
  43d7ec:	mov	w20, #0x3e                  	// #62
  43d7f0:	b	43d770 <ferror@plt+0x3a1a0>
  43d7f4:	mov	w20, #0x44                  	// #68
  43d7f8:	mov	w22, #0x3e                  	// #62
  43d7fc:	b	43d770 <ferror@plt+0x3a1a0>
  43d800:	mov	w20, #0x39                  	// #57
  43d804:	b	43d770 <ferror@plt+0x3a1a0>
  43d808:	mov	w20, #0x3b                  	// #59
  43d80c:	b	43d770 <ferror@plt+0x3a1a0>
  43d810:	mov	w20, #0x38                  	// #56
  43d814:	b	43d770 <ferror@plt+0x3a1a0>
  43d818:	cmp	w1, w22
  43d81c:	b.eq	43d848 <ferror@plt+0x3a278>  // b.none
  43d820:	cmp	w1, #0xa
  43d824:	b.ne	43d83c <ferror@plt+0x3a26c>  // b.any
  43d828:	cmp	w22, #0x3e
  43d82c:	b.ne	43d998 <ferror@plt+0x3a3c8>  // b.any
  43d830:	mov	w0, #0x3                   	// #3
  43d834:	strb	w0, [x21, #4]
  43d838:	b	43d3a8 <ferror@plt+0x39dd8>
  43d83c:	cmp	w1, #0x0
  43d840:	csel	w0, w0, w2, ne  // ne = any
  43d844:	b	43d7a0 <ferror@plt+0x3a1d0>
  43d848:	cbz	w0, 43d868 <ferror@plt+0x3a298>
  43d84c:	ldrb	w0, [x27, #18]
  43d850:	cbnz	w0, 43d868 <ferror@plt+0x3a298>
  43d854:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d858:	mov	x0, x27
  43d85c:	add	x2, x2, #0x7d9
  43d860:	mov	w1, #0x0                   	// #0
  43d864:	bl	435b3c <ferror@plt+0x3256c>
  43d868:	cmp	w20, #0x3d
  43d86c:	b.ne	43d898 <ferror@plt+0x3a2c8>  // b.any
  43d870:	ldr	w0, [x27, #1116]
  43d874:	cmp	w0, #0x15
  43d878:	b.eq	43d894 <ferror@plt+0x3a2c4>  // b.none
  43d87c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d880:	mov	w3, w22
  43d884:	add	x2, x2, #0x800
  43d888:	mov	x0, x27
  43d88c:	mov	w1, #0x2                   	// #2
  43d890:	bl	435b3c <ferror@plt+0x3256c>
  43d894:	mov	w20, #0x3d                  	// #61
  43d898:	ldrb	w0, [x27, #1161]
  43d89c:	cbz	w0, 43d954 <ferror@plt+0x3a384>
  43d8a0:	ldrb	w0, [x23]
  43d8a4:	cmp	w0, #0x5f
  43d8a8:	b.ne	43d8b8 <ferror@plt+0x3a2e8>  // b.any
  43d8ac:	ldrb	w0, [x23, #1]
  43d8b0:	cmp	w0, #0x5f
  43d8b4:	b.ne	43d910 <ferror@plt+0x3a340>  // b.any
  43d8b8:	mov	x1, x23
  43d8bc:	add	x0, x27, #0x440
  43d8c0:	bl	43b74c <ferror@plt+0x3817c>
  43d8c4:	tst	w0, #0xff
  43d8c8:	b.eq	43d910 <ferror@plt+0x3a340>  // b.none
  43d8cc:	ldrb	w0, [x27, #1162]
  43d8d0:	cbz	w0, 43d8f8 <ferror@plt+0x3a328>
  43d8d4:	ldrb	w0, [x27, #18]
  43d8d8:	cbnz	w0, 43d8f8 <ferror@plt+0x3a328>
  43d8dc:	ldr	w2, [x21]
  43d8e0:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d8e4:	add	x4, x4, #0x786
  43d8e8:	mov	w3, #0x0                   	// #0
  43d8ec:	mov	w1, #0x13                  	// #19
  43d8f0:	mov	x0, x27
  43d8f4:	bl	435d68 <ferror@plt+0x32798>
  43d8f8:	ldr	x0, [x27]
  43d8fc:	mov	w4, w20
  43d900:	sub	w3, w23, w19
  43d904:	mov	x2, x19
  43d908:	str	x23, [x0]
  43d90c:	b	43d55c <ferror@plt+0x39f8c>
  43d910:	ldrb	w0, [x23]
  43d914:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43d918:	add	x22, x22, #0x228
  43d91c:	ldrh	w0, [x22, x0, lsl #1]
  43d920:	tbz	w0, #9, 43d8f8 <ferror@plt+0x3a328>
  43d924:	mov	w0, w20
  43d928:	add	x23, x23, #0x1
  43d92c:	bl	437028 <ferror@plt+0x33a58>
  43d930:	bl	436f88 <ferror@plt+0x339b8>
  43d934:	mov	w20, w0
  43d938:	mov	w0, #0x204                 	// #516
  43d93c:	ldrb	w1, [x23]
  43d940:	ldrh	w1, [x22, x1, lsl #1]
  43d944:	tst	w0, w1
  43d948:	b.eq	43d8f8 <ferror@plt+0x3a328>  // b.none
  43d94c:	add	x23, x23, #0x1
  43d950:	b	43d93c <ferror@plt+0x3a36c>
  43d954:	ldrb	w0, [x27, #1199]
  43d958:	cbz	w0, 43d8f8 <ferror@plt+0x3a328>
  43d95c:	mov	x1, x23
  43d960:	add	x0, x27, #0x440
  43d964:	bl	43b74c <ferror@plt+0x3817c>
  43d968:	tst	w0, #0xff
  43d96c:	b.eq	43d8f8 <ferror@plt+0x3a328>  // b.none
  43d970:	ldrb	w0, [x27, #18]
  43d974:	cbnz	w0, 43d8f8 <ferror@plt+0x3a328>
  43d978:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43d97c:	ldr	w2, [x21]
  43d980:	add	x4, x4, #0x821
  43d984:	mov	w3, #0x0                   	// #0
  43d988:	mov	w1, #0x17                  	// #23
  43d98c:	b	43d8f0 <ferror@plt+0x3a320>
  43d990:	b.ne	43d46c <ferror@plt+0x39e9c>  // b.any
  43d994:	b	43d010 <ferror@plt+0x39a40>
  43d998:	mov	x23, x6
  43d99c:	cbz	w0, 43d870 <ferror@plt+0x3a2a0>
  43d9a0:	mov	w20, #0x3d                  	// #61
  43d9a4:	b	43d84c <ferror@plt+0x3a27c>
  43d9a8:	stp	x29, x30, [sp, #-48]!
  43d9ac:	mov	x29, sp
  43d9b0:	stp	x19, x20, [sp, #16]
  43d9b4:	mov	x20, x0
  43d9b8:	mov	x0, x1
  43d9bc:	str	x21, [sp, #32]
  43d9c0:	mov	x21, x1
  43d9c4:	bl	43c2e8 <ferror@plt+0x38d18>
  43d9c8:	add	w1, w0, #0x1
  43d9cc:	mov	x0, x20
  43d9d0:	bl	43ce0c <ferror@plt+0x3983c>
  43d9d4:	mov	x1, x21
  43d9d8:	mov	x19, x0
  43d9dc:	mov	x2, x0
  43d9e0:	mov	w3, #0x0                   	// #0
  43d9e4:	mov	x0, x20
  43d9e8:	bl	43c3a0 <ferror@plt+0x38dd0>
  43d9ec:	strb	wzr, [x0]
  43d9f0:	mov	x0, x19
  43d9f4:	ldp	x19, x20, [sp, #16]
  43d9f8:	ldr	x21, [sp, #32]
  43d9fc:	ldp	x29, x30, [sp], #48
  43da00:	ret
  43da04:	stp	x29, x30, [sp, #-80]!
  43da08:	mov	x29, sp
  43da0c:	stp	x19, x20, [sp, #16]
  43da10:	mov	x20, x0
  43da14:	ldr	x0, [x0]
  43da18:	stp	x23, x24, [sp, #48]
  43da1c:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43da20:	add	x24, x24, #0x228
  43da24:	stp	x21, x22, [sp, #32]
  43da28:	mov	x21, x1
  43da2c:	ldr	x23, [x0]
  43da30:	mov	x22, x2
  43da34:	stp	x25, x26, [sp, #64]
  43da38:	mov	w25, #0x204                 	// #516
  43da3c:	sub	x23, x23, #0x1
  43da40:	mov	w26, #0x2d                  	// #45
  43da44:	ldr	x2, [x20]
  43da48:	ldr	x3, [x2]
  43da4c:	mov	x19, x3
  43da50:	ldrb	w0, [x19]
  43da54:	ldrb	w1, [x19]
  43da58:	ldrh	w0, [x24, x0, lsl #1]
  43da5c:	tst	w25, w0
  43da60:	b.ne	43da7c <ferror@plt+0x3a4ac>  // b.any
  43da64:	cmp	w1, #0x2e
  43da68:	b.eq	43da7c <ferror@plt+0x3a4ac>  // b.none
  43da6c:	cmp	w1, #0x27
  43da70:	b.ne	43da8c <ferror@plt+0x3a4bc>  // b.any
  43da74:	ldrb	w0, [x20, #1166]
  43da78:	cbz	w0, 43dabc <ferror@plt+0x3a4ec>
  43da7c:	add	x19, x19, #0x1
  43da80:	str	w1, [x22]
  43da84:	strb	wzr, [x22, #4]
  43da88:	b	43da50 <ferror@plt+0x3a480>
  43da8c:	cmp	w1, #0x2b
  43da90:	ccmp	w1, w26, #0x4, ne  // ne = any
  43da94:	b.ne	43dabc <ferror@plt+0x3a4ec>  // b.any
  43da98:	ldurb	w0, [x19, #-1]
  43da9c:	and	w0, w0, #0xffffffdf
  43daa0:	and	w0, w0, #0xff
  43daa4:	cmp	w0, #0x45
  43daa8:	b.eq	43da7c <ferror@plt+0x3a4ac>  // b.none
  43daac:	cmp	w0, #0x50
  43dab0:	b.ne	43dabc <ferror@plt+0x3a4ec>  // b.any
  43dab4:	ldrb	w0, [x20, #1127]
  43dab8:	b	43da78 <ferror@plt+0x3a4a8>
  43dabc:	cmp	x3, x19
  43dac0:	b.cs	43dae0 <ferror@plt+0x3a510>  // b.hs, b.nlast
  43dac4:	ldurb	w0, [x19, #-1]
  43dac8:	cmp	w0, #0x27
  43dacc:	b.ne	43dae0 <ferror@plt+0x3a510>  // b.any
  43dad0:	ldrb	w0, [x20, #1166]
  43dad4:	cbz	w0, 43dae0 <ferror@plt+0x3a510>
  43dad8:	sub	x19, x19, #0x1
  43dadc:	b	43dabc <ferror@plt+0x3a4ec>
  43dae0:	str	x19, [x2]
  43dae4:	mov	x0, x20
  43dae8:	mov	x2, x22
  43daec:	mov	w1, #0x0                   	// #0
  43daf0:	bl	43b370 <ferror@plt+0x37da0>
  43daf4:	tst	w0, #0xff
  43daf8:	b.ne	43da44 <ferror@plt+0x3a474>  // b.any
  43dafc:	sub	x19, x19, x23
  43db00:	str	w19, [x21]
  43db04:	add	w1, w19, #0x1
  43db08:	mov	x0, x20
  43db0c:	bl	43ce0c <ferror@plt+0x3983c>
  43db10:	mov	x19, x0
  43db14:	ldr	w2, [x21]
  43db18:	mov	x1, x23
  43db1c:	bl	402cd0 <memcpy@plt>
  43db20:	ldr	w0, [x21]
  43db24:	strb	wzr, [x19, x0]
  43db28:	ldp	x23, x24, [sp, #48]
  43db2c:	ldp	x25, x26, [sp, #64]
  43db30:	str	x19, [x21, #8]
  43db34:	ldp	x19, x20, [sp, #16]
  43db38:	ldp	x21, x22, [sp, #32]
  43db3c:	ldp	x29, x30, [sp], #80
  43db40:	ret
  43db44:	stp	x29, x30, [sp, #-128]!
  43db48:	mov	x29, sp
  43db4c:	stp	x19, x20, [sp, #16]
  43db50:	mov	x20, x0
  43db54:	ldr	x19, [x0, #448]
  43db58:	stp	x21, x22, [sp, #32]
  43db5c:	add	x0, x19, #0x18
  43db60:	stp	x23, x24, [sp, #48]
  43db64:	mov	w23, #0x0                   	// #0
  43db68:	stp	x25, x26, [sp, #64]
  43db6c:	adrp	x25, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43db70:	stp	x27, x28, [sp, #80]
  43db74:	str	x0, [x20, #448]
  43db78:	add	x0, x25, #0x863
  43db7c:	str	x0, [sp, #96]
  43db80:	ldr	x21, [x20]
  43db84:	strh	wzr, [x19, #6]
  43db88:	ldrb	w0, [x21, #104]
  43db8c:	cbz	w0, 43dc54 <ferror@plt+0x3a684>
  43db90:	ldrb	w0, [x20, #32]
  43db94:	cbz	w0, 43dbd8 <ferror@plt+0x3a608>
  43db98:	mov	w0, #0x52                  	// #82
  43db9c:	strb	w0, [x19, #4]
  43dba0:	strb	wzr, [x20, #32]
  43dba4:	ldrb	w0, [x20, #33]
  43dba8:	cbnz	w0, 43dbb8 <ferror@plt+0x3a5e8>
  43dbac:	ldrb	w0, [x20, #24]
  43dbb0:	sub	w0, w0, #0x1
  43dbb4:	strb	w0, [x20, #24]
  43dbb8:	mov	x0, x19
  43dbbc:	ldp	x19, x20, [sp, #16]
  43dbc0:	ldp	x21, x22, [sp, #32]
  43dbc4:	ldp	x23, x24, [sp, #48]
  43dbc8:	ldp	x25, x26, [sp, #64]
  43dbcc:	ldp	x27, x28, [sp, #80]
  43dbd0:	ldp	x29, x30, [sp], #128
  43dbd4:	ret
  43dbd8:	mov	x0, x20
  43dbdc:	bl	43c24c <ferror@plt+0x38c7c>
  43dbe0:	tst	w0, #0xff
  43dbe4:	b.ne	43dc10 <ferror@plt+0x3a640>  // b.any
  43dbe8:	mov	w0, #0x16                  	// #22
  43dbec:	strb	w0, [x19, #4]
  43dbf0:	ldrb	w0, [x20, #16]
  43dbf4:	cbnz	w0, 43dbb8 <ferror@plt+0x3a5e8>
  43dbf8:	ldr	x0, [x20, #40]
  43dbfc:	ldr	w0, [x0, #60]
  43dc00:	str	w0, [x19]
  43dc04:	mov	w0, #0x40                  	// #64
  43dc08:	strh	w0, [x19, #6]
  43dc0c:	b	43dbb8 <ferror@plt+0x3a5e8>
  43dc10:	ldr	x0, [x20]
  43dc14:	cmp	x0, x21
  43dc18:	ldr	w0, [x20, #500]
  43dc1c:	csel	w23, w23, wzr, eq  // eq = none
  43dc20:	cbnz	w0, 43dc38 <ferror@plt+0x3a668>
  43dc24:	ldr	x19, [x20, #472]
  43dc28:	add	x0, x20, #0x1c8
  43dc2c:	str	x0, [x20, #488]
  43dc30:	add	x0, x19, #0x18
  43dc34:	str	x0, [x20, #448]
  43dc38:	mov	w1, #0x40                  	// #64
  43dc3c:	strh	w1, [x19, #6]
  43dc40:	ldrb	w0, [x20, #25]
  43dc44:	cmp	w0, #0x2
  43dc48:	mov	w0, #0x41                  	// #65
  43dc4c:	csel	w0, w0, w1, eq  // eq = none
  43dc50:	strh	w0, [x19, #6]
  43dc54:	ldr	x27, [x20]
  43dc58:	adrp	x24, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43dc5c:	ldr	x0, [x20, #40]
  43dc60:	add	x24, x24, #0xb74
  43dc64:	ldr	w0, [x0, #60]
  43dc68:	str	w0, [x19]
  43dc6c:	ldr	w0, [x27, #56]
  43dc70:	ldr	x2, [x27, #48]
  43dc74:	lsl	x0, x0, #4
  43dc78:	ldr	x1, [x27]
  43dc7c:	ldr	x0, [x2, x0]
  43dc80:	cmp	x1, x0
  43dc84:	b.cc	43dca8 <ferror@plt+0x3a6d8>  // b.lo, b.ul, b.last
  43dc88:	ldr	x0, [x20, #8]
  43dc8c:	cbnz	x0, 43dca8 <ferror@plt+0x3a6d8>
  43dc90:	mov	x0, x20
  43dc94:	mov	w1, #0x0                   	// #0
  43dc98:	bl	43bbd0 <ferror@plt+0x38600>
  43dc9c:	ldr	x0, [x20, #40]
  43dca0:	ldr	w0, [x0, #60]
  43dca4:	str	w0, [x19]
  43dca8:	ldr	x1, [x27]
  43dcac:	add	x0, x1, #0x1
  43dcb0:	str	x0, [x27]
  43dcb4:	ldrb	w21, [x1]
  43dcb8:	ldr	w1, [x20, #1408]
  43dcbc:	mov	w22, w21
  43dcc0:	cbz	w1, 43dce0 <ferror@plt+0x3a710>
  43dcc4:	str	w1, [x19]
  43dcc8:	cmp	w21, #0x7e
  43dccc:	b.hi	43efd0 <ferror@plt+0x3ba00>  // b.pmore
  43dcd0:	ldrh	w0, [x24, w21, uxtw #1]
  43dcd4:	adr	x1, 43dce0 <ferror@plt+0x3a710>
  43dcd8:	add	x0, x1, w0, sxth #2
  43dcdc:	br	x0
  43dce0:	ldr	x1, [x27, #8]
  43dce4:	sub	w1, w0, w1
  43dce8:	ldr	x0, [x20, #40]
  43dcec:	bl	43fc38 <ferror@plt+0x3c668>
  43dcf0:	str	w0, [x19]
  43dcf4:	b	43dcc8 <ferror@plt+0x3a6f8>
  43dcf8:	ldrh	w0, [x19, #6]
  43dcfc:	adrp	x6, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43dd00:	ldr	x21, [x20]
  43dd04:	adrp	x28, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43dd08:	add	x26, x6, #0x859
  43dd0c:	add	x28, x28, #0x228
  43dd10:	orr	w0, w0, #0x1
  43dd14:	mov	w25, #0x0                   	// #0
  43dd18:	strh	w0, [x19, #6]
  43dd1c:	cmp	w22, #0x20
  43dd20:	ccmp	w22, #0x9, #0x4, ne  // ne = any
  43dd24:	b.eq	43dd6c <ferror@plt+0x3a79c>  // b.none
  43dd28:	cbz	w22, 43ddb0 <ferror@plt+0x3a7e0>
  43dd2c:	ldrb	w0, [x20, #16]
  43dd30:	cbz	w0, 43dd6c <ferror@plt+0x3a79c>
  43dd34:	ldrb	w0, [x20, #1154]
  43dd38:	cbz	w0, 43dd6c <ferror@plt+0x3a79c>
  43dd3c:	ldr	x0, [x20, #40]
  43dd40:	cmp	w22, #0xc
  43dd44:	ldr	x2, [sp, #96]
  43dd48:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43dd4c:	ldp	x3, x1, [x21]
  43dd50:	csel	x5, x26, x2, eq  // eq = none
  43dd54:	ldr	w2, [x0, #60]
  43dd58:	add	x4, x4, #0x87f
  43dd5c:	mov	x0, x20
  43dd60:	sub	w3, w3, w1
  43dd64:	mov	w1, #0x2                   	// #2
  43dd68:	bl	435cf8 <ferror@plt+0x32728>
  43dd6c:	ldr	x0, [x21]
  43dd70:	add	x1, x0, #0x1
  43dd74:	str	x1, [x21]
  43dd78:	ldrb	w22, [x0]
  43dd7c:	ldrb	w0, [x0]
  43dd80:	ldrh	w0, [x28, x0, lsl #1]
  43dd84:	tbnz	w0, #11, 43dd1c <ferror@plt+0x3a74c>
  43dd88:	cbz	w25, 43dda0 <ferror@plt+0x3a7d0>
  43dd8c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43dd90:	mov	x0, x20
  43dd94:	add	x2, x2, #0x89d
  43dd98:	mov	w1, #0x0                   	// #0
  43dd9c:	bl	435b3c <ferror@plt+0x3256c>
  43dda0:	ldr	x0, [x21]
  43dda4:	sub	x0, x0, #0x1
  43dda8:	str	x0, [x21]
  43ddac:	b	43dc6c <ferror@plt+0x3a69c>
  43ddb0:	mov	w25, #0x1                   	// #1
  43ddb4:	b	43dd6c <ferror@plt+0x3a79c>
  43ddb8:	ldr	x1, [x27]
  43ddbc:	ldr	x0, [x27, #32]
  43ddc0:	cmp	x1, x0
  43ddc4:	b.cs	43de0c <ferror@plt+0x3a83c>  // b.hs, b.nlast
  43ddc8:	ldr	x0, [x20, #40]
  43ddcc:	mov	w1, #0x18                  	// #24
  43ddd0:	ldr	w2, [x0, #12]
  43ddd4:	ldr	w3, [x0, #60]
  43ddd8:	sub	w2, w2, #0x1
  43dddc:	smull	x2, w2, w1
  43dde0:	ldr	x1, [x0]
  43dde4:	add	x4, x1, x2
  43dde8:	ldr	w1, [x1, x2]
  43ddec:	mov	w2, #0x0                   	// #0
  43ddf0:	sub	w3, w3, w1
  43ddf4:	ldrb	w1, [x4, #6]
  43ddf8:	lsr	w3, w3, w1
  43ddfc:	ldr	w1, [x4, #16]
  43de00:	add	w1, w1, #0x1
  43de04:	add	w1, w3, w1
  43de08:	bl	43fa38 <ferror@plt+0x3c468>
  43de0c:	mov	w0, #0x1                   	// #1
  43de10:	strb	w0, [x27, #104]
  43de14:	b	43db80 <ferror@plt+0x3a5b0>
  43de18:	cmp	w21, #0x4c
  43de1c:	b.eq	43de38 <ferror@plt+0x3a868>  // b.none
  43de20:	ldrb	w0, [x20, #1130]
  43de24:	cbnz	w0, 43de38 <ferror@plt+0x3a868>
  43de28:	cmp	w21, #0x52
  43de2c:	b.eq	43de50 <ferror@plt+0x3a880>  // b.none
  43de30:	ldrb	w0, [x20, #1128]
  43de34:	cbz	w0, 43de50 <ferror@plt+0x3a880>
  43de38:	ldr	x2, [x27]
  43de3c:	ldrb	w0, [x2]
  43de40:	cmp	w0, #0x27
  43de44:	b.ne	43df48 <ferror@plt+0x3a978>  // b.any
  43de48:	cmp	w21, #0x52
  43de4c:	b.ne	43df74 <ferror@plt+0x3a9a4>  // b.any
  43de50:	mov	w0, #0x35                  	// #53
  43de54:	strb	w0, [x19, #4]
  43de58:	strb	wzr, [sp, #116]
  43de5c:	add	x4, x19, #0x10
  43de60:	add	x3, sp, #0x70
  43de64:	mov	w2, #0x0                   	// #0
  43de68:	ldr	x1, [x27]
  43de6c:	mov	x0, x20
  43de70:	str	wzr, [sp, #112]
  43de74:	sub	x1, x1, #0x1
  43de78:	str	wzr, [sp, #120]
  43de7c:	bl	43b53c <ferror@plt+0x37f6c>
  43de80:	str	x0, [x19, #8]
  43de84:	mov	x1, x19
  43de88:	mov	x0, x20
  43de8c:	add	x2, sp, #0x78
  43de90:	bl	43c4b4 <ferror@plt+0x38ee4>
  43de94:	ldr	x1, [x19, #8]
  43de98:	ldrh	w0, [x1, #18]
  43de9c:	tbz	w0, #2, 43deb8 <ferror@plt+0x3a8e8>
  43dea0:	ldrh	w0, [x19, #6]
  43dea4:	orr	w0, w0, #0x10
  43dea8:	strh	w0, [x19, #6]
  43deac:	ldrb	w0, [x1, #16]
  43deb0:	ubfx	x0, x0, #1, #7
  43deb4:	strb	w0, [x19, #4]
  43deb8:	cbz	w23, 43dec8 <ferror@plt+0x3a8f8>
  43debc:	ldrh	w0, [x19, #6]
  43dec0:	orr	w0, w0, #0x20
  43dec4:	strh	w0, [x19, #6]
  43dec8:	ldr	w0, [x19]
  43decc:	cmp	w0, #0x1
  43ded0:	b.ls	43dbb8 <ferror@plt+0x3a5e8>  // b.plast
  43ded4:	ldrb	w0, [x19, #4]
  43ded8:	cmp	w0, #0x16
  43dedc:	b.eq	43dbb8 <ferror@plt+0x3a5e8>  // b.none
  43dee0:	ldr	w0, [x27, #56]
  43dee4:	ldr	x2, [x27, #48]
  43dee8:	lsl	x0, x0, #4
  43deec:	ldr	x1, [x27]
  43def0:	ldr	x0, [x2, x0]
  43def4:	cmp	x1, x0
  43def8:	b.cc	43df10 <ferror@plt+0x3a940>  // b.lo, b.ul, b.last
  43defc:	ldr	x0, [x20, #8]
  43df00:	cbnz	x0, 43df10 <ferror@plt+0x3a940>
  43df04:	mov	x0, x20
  43df08:	mov	w1, #0x0                   	// #0
  43df0c:	bl	43bbd0 <ferror@plt+0x38600>
  43df10:	ldp	x1, x0, [x27]
  43df14:	ldr	w21, [x19]
  43df18:	sub	w1, w1, w0
  43df1c:	ldr	x0, [x20, #40]
  43df20:	bl	43fc38 <ferror@plt+0x3c668>
  43df24:	mov	x2, #0x0                   	// #0
  43df28:	ldr	w1, [x19]
  43df2c:	bfxil	x2, x21, #0, #32
  43df30:	mov	x3, #0x0                   	// #0
  43df34:	bfi	x2, x0, #32, #32
  43df38:	ldr	x0, [x20, #40]
  43df3c:	bl	43fefc <ferror@plt+0x3c92c>
  43df40:	str	w0, [x19]
  43df44:	b	43dbb8 <ferror@plt+0x3a5e8>
  43df48:	cmp	w0, #0x22
  43df4c:	b.eq	43df74 <ferror@plt+0x3a9a4>  // b.none
  43df50:	cmp	w0, #0x52
  43df54:	b.ne	43df88 <ferror@plt+0x3a9b8>  // b.any
  43df58:	cmp	w21, #0x52
  43df5c:	b.eq	43de50 <ferror@plt+0x3a880>  // b.none
  43df60:	ldrb	w0, [x2, #1]
  43df64:	cmp	w0, #0x22
  43df68:	b.ne	43de50 <ferror@plt+0x3a880>  // b.any
  43df6c:	ldrb	w0, [x20, #1130]
  43df70:	cbz	w0, 43de50 <ferror@plt+0x3a880>
  43df74:	sub	x2, x2, #0x1
  43df78:	mov	x1, x19
  43df7c:	mov	x0, x20
  43df80:	bl	43cec8 <ferror@plt+0x398f8>
  43df84:	b	43dec8 <ferror@plt+0x3a8f8>
  43df88:	cmp	w0, #0x38
  43df8c:	b.ne	43de50 <ferror@plt+0x3a880>  // b.any
  43df90:	cmp	w21, #0x75
  43df94:	b.ne	43de50 <ferror@plt+0x3a880>  // b.any
  43df98:	ldrb	w0, [x2, #1]
  43df9c:	cmp	w0, #0x22
  43dfa0:	b.eq	43df74 <ferror@plt+0x3a9a4>  // b.none
  43dfa4:	cmp	w0, #0x27
  43dfa8:	b.ne	43dfb4 <ferror@plt+0x3a9e4>  // b.any
  43dfac:	ldrb	w0, [x20, #1129]
  43dfb0:	b	43df70 <ferror@plt+0x3a9a0>
  43dfb4:	cmp	w0, #0x52
  43dfb8:	b.ne	43de50 <ferror@plt+0x3a880>  // b.any
  43dfbc:	ldrb	w0, [x2, #2]
  43dfc0:	b	43df64 <ferror@plt+0x3a994>
  43dfc4:	ldr	x2, [x27]
  43dfc8:	b	43df74 <ferror@plt+0x3a9a4>
  43dfcc:	ldr	x22, [x27]
  43dfd0:	ldrb	w24, [x22]
  43dfd4:	cmp	w24, #0x2a
  43dfd8:	b.ne	43e020 <ferror@plt+0x3aa50>  // b.any
  43dfdc:	mov	x0, x20
  43dfe0:	bl	43bde4 <ferror@plt+0x38814>
  43dfe4:	tst	w0, #0xff
  43dfe8:	b.eq	43e000 <ferror@plt+0x3aa30>  // b.none
  43dfec:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43dff0:	mov	x0, x20
  43dff4:	add	x2, x2, #0x8b7
  43dff8:	mov	w1, #0x3                   	// #3
  43dffc:	bl	435b3c <ferror@plt+0x3256c>
  43e000:	ldrb	w0, [x20, #1144]
  43e004:	add	x21, x22, #0x1
  43e008:	cmp	w0, #0x2
  43e00c:	b.eq	43e1d4 <ferror@plt+0x3ac04>  // b.none
  43e010:	b.hi	43e184 <ferror@plt+0x3abb4>  // b.pmore
  43e014:	cmp	w0, #0x1
  43e018:	csinc	w23, w23, wzr, ne  // ne = any
  43e01c:	b	43e194 <ferror@plt+0x3abc4>
  43e020:	cmp	w24, #0x2f
  43e024:	b.ne	43e168 <ferror@plt+0x3ab98>  // b.any
  43e028:	ldrb	w0, [x20, #1160]
  43e02c:	cbnz	w0, 43e10c <ferror@plt+0x3ab3c>
  43e030:	ldr	x0, [x20]
  43e034:	cbz	x0, 43e040 <ferror@plt+0x3aa70>
  43e038:	ldrb	w0, [x0, #106]
  43e03c:	cbnz	w0, 43e094 <ferror@plt+0x3aac4>
  43e040:	ldr	w0, [x20, #1116]
  43e044:	cbnz	w0, 43e0bc <ferror@plt+0x3aaec>
  43e048:	ldrb	w1, [x20, #1154]
  43e04c:	cbz	w1, 43e0bc <ferror@plt+0x3aaec>
  43e050:	ldrb	w1, [x27, #105]
  43e054:	tbnz	w1, #0, 43e0bc <ferror@plt+0x3aaec>
  43e058:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e05c:	add	x2, x2, #0x8cc
  43e060:	mov	w1, #0x2                   	// #2
  43e064:	mov	x0, x20
  43e068:	bl	435b3c <ferror@plt+0x3256c>
  43e06c:	tst	w0, #0xff
  43e070:	b.eq	43e088 <ferror@plt+0x3aab8>  // b.none
  43e074:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e078:	mov	x0, x20
  43e07c:	add	x2, x2, #0x8fa
  43e080:	mov	w1, #0x5                   	// #5
  43e084:	bl	435b3c <ferror@plt+0x3256c>
  43e088:	ldrb	w0, [x27, #105]
  43e08c:	orr	w0, w0, #0x1
  43e090:	strb	w0, [x27, #105]
  43e094:	ldr	x0, [x20, #40]
  43e098:	ldr	x1, [x20]
  43e09c:	ldr	w21, [x0, #60]
  43e0a0:	ldr	x0, [x1]
  43e0a4:	ldrb	w2, [x0]
  43e0a8:	cmp	w2, #0xa
  43e0ac:	b.eq	43e12c <ferror@plt+0x3ab5c>  // b.none
  43e0b0:	add	x0, x0, #0x1
  43e0b4:	str	x0, [x1]
  43e0b8:	b	43e0a0 <ferror@plt+0x3aad0>
  43e0bc:	ldrsb	w1, [x20, #1198]
  43e0c0:	cmp	w1, #0x0
  43e0c4:	b.le	43e0e8 <ferror@plt+0x3ab18>
  43e0c8:	ldrb	w1, [x20, #1120]
  43e0cc:	cbnz	w1, 43e0e8 <ferror@plt+0x3ab18>
  43e0d0:	ldrb	w1, [x27, #105]
  43e0d4:	tbnz	w1, #0, 43e0e8 <ferror@plt+0x3ab18>
  43e0d8:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e0dc:	mov	w1, #0x0                   	// #0
  43e0e0:	add	x2, x2, #0x92b
  43e0e4:	b	43e064 <ferror@plt+0x3aa94>
  43e0e8:	sub	w0, w0, #0x5
  43e0ec:	cmp	w0, #0x1
  43e0f0:	b.hi	43e094 <ferror@plt+0x3aac4>  // b.pmore
  43e0f4:	ldrb	w0, [x22, #1]
  43e0f8:	cmp	w0, #0x2a
  43e0fc:	b.eq	43e10c <ferror@plt+0x3ab3c>  // b.none
  43e100:	ldr	w0, [x20, #16]
  43e104:	tst	w0, #0xff00ff
  43e108:	b.eq	43e114 <ferror@plt+0x3ab44>  // b.none
  43e10c:	mov	w0, #0x7                   	// #7
  43e110:	b	43e17c <ferror@plt+0x3abac>
  43e114:	ldrb	w0, [x27, #105]
  43e118:	tbnz	w0, #0, 43e094 <ferror@plt+0x3aac4>
  43e11c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e120:	mov	w1, #0x3                   	// #3
  43e124:	add	x2, x2, #0x8cc
  43e128:	b	43e064 <ferror@plt+0x3aa94>
  43e12c:	mov	x0, x20
  43e130:	mov	w1, #0x1                   	// #1
  43e134:	bl	43bbd0 <ferror@plt+0x38600>
  43e138:	ldr	x0, [x20, #40]
  43e13c:	ldr	w0, [x0, #60]
  43e140:	cmp	w21, w0
  43e144:	b.eq	43e000 <ferror@plt+0x3aa30>  // b.none
  43e148:	ldrb	w0, [x20, #1133]
  43e14c:	cbz	w0, 43e000 <ferror@plt+0x3aa30>
  43e150:	mov	x0, x20
  43e154:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e158:	mov	w1, #0x2                   	// #2
  43e15c:	add	x2, x2, #0x958
  43e160:	bl	435ba8 <ferror@plt+0x325d8>
  43e164:	b	43e000 <ferror@plt+0x3aa30>
  43e168:	cmp	w24, #0x3d
  43e16c:	b.ne	43e10c <ferror@plt+0x3ab3c>  // b.any
  43e170:	add	x22, x22, #0x1
  43e174:	mov	w0, #0x1e                  	// #30
  43e178:	str	x22, [x27]
  43e17c:	strb	w0, [x19, #4]
  43e180:	b	43dec8 <ferror@plt+0x3a8f8>
  43e184:	sub	w1, w0, #0x3
  43e188:	and	w1, w1, #0xff
  43e18c:	cmp	w1, #0x1
  43e190:	b.ls	43e314 <ferror@plt+0x3ad44>  // b.plast
  43e194:	ldr	x4, [x20, #1072]
  43e198:	cbz	x4, 43e1bc <ferror@plt+0x3abec>
  43e19c:	ldr	x0, [x20]
  43e1a0:	sub	x2, x22, #0x1
  43e1a4:	ldr	w1, [x19]
  43e1a8:	ldr	x3, [x0]
  43e1ac:	mov	x0, x20
  43e1b0:	sub	x3, x3, x22
  43e1b4:	add	x3, x3, #0x1
  43e1b8:	blr	x4
  43e1bc:	ldrb	w0, [x20, #21]
  43e1c0:	cbnz	w0, 43e86c <ferror@plt+0x3b29c>
  43e1c4:	ldrh	w0, [x19, #6]
  43e1c8:	orr	w0, w0, #0x1
  43e1cc:	strh	w0, [x19, #6]
  43e1d0:	b	43dc58 <ferror@plt+0x3a688>
  43e1d4:	ldr	x0, [x20]
  43e1d8:	ldr	x1, [x0]
  43e1dc:	sub	x0, x1, x21
  43e1e0:	cmp	x0, #0x7
  43e1e4:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e1e8:	ldrb	w0, [x21]
  43e1ec:	and	w0, w0, #0xffffffdf
  43e1f0:	and	w0, w0, #0xff
  43e1f4:	cmp	w0, #0x46
  43e1f8:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e1fc:	ldrb	w0, [x21, #1]
  43e200:	and	w0, w0, #0xffffffdf
  43e204:	and	w0, w0, #0xff
  43e208:	cmp	w0, #0x41
  43e20c:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e210:	ldrb	w0, [x21, #2]
  43e214:	and	w0, w0, #0xffffffdf
  43e218:	and	w0, w0, #0xff
  43e21c:	cmp	w0, #0x4c
  43e220:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e224:	ldrb	w0, [x21, #3]
  43e228:	and	w0, w0, #0xffffffdf
  43e22c:	and	w0, w0, #0xff
  43e230:	cmp	w0, #0x4c
  43e234:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e238:	mov	x2, x21
  43e23c:	add	x21, x21, #0x5
  43e240:	ldrb	w0, [x2, #4]!
  43e244:	and	w0, w0, #0xffffffdf
  43e248:	and	w0, w0, #0xff
  43e24c:	cmp	w0, #0x53
  43e250:	csel	x21, x21, x2, eq  // eq = none
  43e254:	ldrb	w0, [x21]
  43e258:	cmp	w0, #0x2d
  43e25c:	b.ls	43e274 <ferror@plt+0x3aca4>  // b.plast
  43e260:	and	w0, w0, #0xffffffdf
  43e264:	cmp	w0, #0x54
  43e268:	b.eq	43e28c <ferror@plt+0x3acbc>  // b.none
  43e26c:	add	x21, x21, #0x1
  43e270:	b	43e1dc <ferror@plt+0x3ac0c>
  43e274:	mov	x2, #0x200                 	// #512
  43e278:	movk	x2, #0x2001, lsl #32
  43e27c:	lsr	x0, x2, x0
  43e280:	tbz	w0, #0, 43e26c <ferror@plt+0x3ac9c>
  43e284:	add	x21, x21, #0x1
  43e288:	b	43e254 <ferror@plt+0x3ac84>
  43e28c:	ldrb	w0, [x21, #1]
  43e290:	and	w0, w0, #0xffffffdf
  43e294:	and	w0, w0, #0xff
  43e298:	cmp	w0, #0x48
  43e29c:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e2a0:	ldrb	w0, [x21, #2]
  43e2a4:	and	w0, w0, #0xffffffdf
  43e2a8:	and	w0, w0, #0xff
  43e2ac:	cmp	w0, #0x52
  43e2b0:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e2b4:	ldrb	w0, [x21, #3]
  43e2b8:	and	w0, w0, #0xffffffdf
  43e2bc:	and	w0, w0, #0xff
  43e2c0:	cmp	w0, #0x55
  43e2c4:	b.eq	43e30c <ferror@plt+0x3ad3c>  // b.none
  43e2c8:	cmp	w0, #0x4f
  43e2cc:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e2d0:	ldrb	w0, [x21, #4]
  43e2d4:	and	w0, w0, #0xffffffdf
  43e2d8:	and	w0, w0, #0xff
  43e2dc:	cmp	w0, #0x55
  43e2e0:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e2e4:	ldrb	w0, [x21, #5]
  43e2e8:	and	w0, w0, #0xffffffdf
  43e2ec:	and	w0, w0, #0xff
  43e2f0:	cmp	w0, #0x47
  43e2f4:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e2f8:	ldrb	w0, [x21, #6]
  43e2fc:	and	w0, w0, #0xffffffdf
  43e300:	and	w0, w0, #0xff
  43e304:	cmp	w0, #0x48
  43e308:	b.ne	43e26c <ferror@plt+0x3ac9c>  // b.any
  43e30c:	mov	w23, #0x1                   	// #1
  43e310:	b	43e194 <ferror@plt+0x3abc4>
  43e314:	ldrb	w28, [x22, #1]
  43e318:	cmp	w28, #0x2d
  43e31c:	b.eq	43e328 <ferror@plt+0x3ad58>  // b.none
  43e320:	cmp	w28, #0x40
  43e324:	b.ne	43e3a4 <ferror@plt+0x3add4>  // b.any
  43e328:	ldr	x0, [x20]
  43e32c:	ldr	x0, [x0]
  43e330:	sub	x0, x0, x21
  43e334:	sub	x0, x0, #0x1
  43e338:	cmp	x0, #0xa
  43e33c:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e340:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e344:	add	x0, x22, #0x2
  43e348:	add	x1, x1, #0x970
  43e34c:	mov	x2, #0xb                   	// #11
  43e350:	bl	4031e0 <memcmp@plt>
  43e354:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e358:	cmp	w28, #0x40
  43e35c:	b.ne	43e39c <ferror@plt+0x3adcc>  // b.any
  43e360:	ldrb	w0, [x22, #13]
  43e364:	cmp	w0, #0x40
  43e368:	b.ne	43e194 <ferror@plt+0x3abc4>  // b.any
  43e36c:	mov	x0, #0xc                   	// #12
  43e370:	add	x0, x0, #0x1
  43e374:	add	x21, x21, x0
  43e378:	ldrb	w1, [x22]
  43e37c:	ldrb	w0, [x21]
  43e380:	cmp	w1, #0x2a
  43e384:	b.ne	43e864 <ferror@plt+0x3b294>  // b.any
  43e388:	cmp	w0, #0x2a
  43e38c:	b.ne	43e194 <ferror@plt+0x3abc4>  // b.any
  43e390:	ldrb	w0, [x21, #1]
  43e394:	cmp	w0, #0x2f
  43e398:	b	43e018 <ferror@plt+0x3aa48>
  43e39c:	mov	x0, #0xb                   	// #11
  43e3a0:	b	43e370 <ferror@plt+0x3ada0>
  43e3a4:	cmp	w28, #0x6c
  43e3a8:	b.ne	43e3fc <ferror@plt+0x3ae2c>  // b.any
  43e3ac:	ldr	x0, [x20]
  43e3b0:	ldr	x0, [x0]
  43e3b4:	sub	x21, x0, x21
  43e3b8:	sub	x21, x21, #0x1
  43e3bc:	cmp	x21, #0xf
  43e3c0:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e3c4:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e3c8:	add	x0, x22, #0x2
  43e3cc:	add	x1, x1, #0x96b
  43e3d0:	mov	x2, #0x10                  	// #16
  43e3d4:	bl	4031e0 <memcmp@plt>
  43e3d8:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e3dc:	add	x21, x22, #0x12
  43e3e0:	ldrb	w0, [x21]
  43e3e4:	cmp	w0, #0x20
  43e3e8:	b.eq	43e3f4 <ferror@plt+0x3ae24>  // b.none
  43e3ec:	cmp	w0, #0x9
  43e3f0:	b.ne	43e378 <ferror@plt+0x3ada8>  // b.any
  43e3f4:	add	x21, x21, #0x1
  43e3f8:	b	43e3e0 <ferror@plt+0x3ae10>
  43e3fc:	cmp	w0, #0x4
  43e400:	b.eq	43e428 <ferror@plt+0x3ae58>  // b.none
  43e404:	mov	x0, #0x200                 	// #512
  43e408:	movk	x0, #0x4003, lsl #32
  43e40c:	ldrb	w28, [x21]
  43e410:	cmp	w28, #0x2e
  43e414:	b.hi	43e4c8 <ferror@plt+0x3aef8>  // b.pmore
  43e418:	lsr	x1, x0, x28
  43e41c:	tbz	w1, #0, 43e4c8 <ferror@plt+0x3aef8>
  43e420:	add	x21, x21, #0x1
  43e424:	b	43e40c <ferror@plt+0x3ae3c>
  43e428:	ldrb	w0, [x21]
  43e42c:	cmp	w0, #0x20
  43e430:	b.eq	43e43c <ferror@plt+0x3ae6c>  // b.none
  43e434:	cmp	w0, #0x9
  43e438:	b.ne	43e444 <ferror@plt+0x3ae74>  // b.any
  43e43c:	add	x21, x21, #0x1
  43e440:	b	43e428 <ferror@plt+0x3ae58>
  43e444:	ldr	x0, [x20]
  43e448:	ldr	x28, [x0]
  43e44c:	sub	x0, x28, x21
  43e450:	cmp	x0, #0x7
  43e454:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e458:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e45c:	mov	x0, x21
  43e460:	add	x1, x1, #0x97c
  43e464:	mov	x2, #0x7                   	// #7
  43e468:	bl	4031e0 <memcmp@plt>
  43e46c:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e470:	ldrb	w0, [x21, #7]
  43e474:	cmp	w0, #0x55
  43e478:	b.ne	43e49c <ferror@plt+0x3aecc>  // b.any
  43e47c:	add	x21, x21, #0x8
  43e480:	ldrb	w0, [x21]
  43e484:	cmp	w0, #0x20
  43e488:	b.eq	43e494 <ferror@plt+0x3aec4>  // b.none
  43e48c:	cmp	w0, #0x9
  43e490:	b.ne	43e378 <ferror@plt+0x3ada8>  // b.any
  43e494:	add	x21, x21, #0x1
  43e498:	b	43e480 <ferror@plt+0x3aeb0>
  43e49c:	add	x0, x21, #0x7
  43e4a0:	sub	x28, x28, x0
  43e4a4:	cmp	x28, #0x3
  43e4a8:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e4ac:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e4b0:	mov	x2, #0x4                   	// #4
  43e4b4:	add	x1, x1, #0x87a
  43e4b8:	bl	4031e0 <memcmp@plt>
  43e4bc:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e4c0:	add	x21, x21, #0xb
  43e4c4:	b	43e480 <ferror@plt+0x3aeb0>
  43e4c8:	and	w0, w28, #0xffffffdf
  43e4cc:	and	w1, w0, #0xff
  43e4d0:	cmp	w0, #0x45
  43e4d4:	b.ne	43e6c0 <ferror@plt+0x3b0f0>  // b.any
  43e4d8:	ldr	x0, [x20]
  43e4dc:	ldr	x0, [x0]
  43e4e0:	sub	x0, x0, x21
  43e4e4:	cmp	x0, #0xc
  43e4e8:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e4ec:	add	x25, x21, #0x1
  43e4f0:	cmp	w28, #0x45
  43e4f4:	b.ne	43e510 <ferror@plt+0x3af40>  // b.any
  43e4f8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e4fc:	mov	x0, x25
  43e500:	add	x1, x1, #0x984
  43e504:	mov	x2, #0x3                   	// #3
  43e508:	bl	4031e0 <memcmp@plt>
  43e50c:	cbz	w0, 43e6b8 <ferror@plt+0x3b0e8>
  43e510:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  43e514:	mov	x0, x25
  43e518:	add	x1, x1, #0x658
  43e51c:	mov	x2, #0x3                   	// #3
  43e520:	bl	4031e0 <memcmp@plt>
  43e524:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e528:	mov	w26, #0x0                   	// #0
  43e52c:	mov	x0, x21
  43e530:	add	x21, x21, #0x5
  43e534:	ldrb	w1, [x0, #4]!
  43e538:	cmp	w1, #0x2c
  43e53c:	csel	x21, x21, x0, eq  // eq = none
  43e540:	ldrb	w0, [x21]
  43e544:	cmp	w0, #0x20
  43e548:	b.ne	43e194 <ferror@plt+0x3abc4>  // b.any
  43e54c:	ldrb	w25, [x21, #1]
  43e550:	add	x3, x21, #0x1
  43e554:	cbz	w26, 43e560 <ferror@plt+0x3af90>
  43e558:	cmp	w25, #0x66
  43e55c:	b.eq	43e194 <ferror@plt+0x3abc4>  // b.none
  43e560:	cmp	w28, #0x65
  43e564:	b.ne	43e570 <ferror@plt+0x3afa0>  // b.any
  43e568:	cmp	w25, #0x46
  43e56c:	b.eq	43e194 <ferror@plt+0x3abc4>  // b.none
  43e570:	and	w0, w25, #0xffffffdf
  43e574:	cmp	w0, #0x46
  43e578:	b.ne	43e194 <ferror@plt+0x3abc4>  // b.any
  43e57c:	ldr	x0, [x20]
  43e580:	ldr	x28, [x0]
  43e584:	sub	x0, x28, x3
  43e588:	cmp	x0, #0x7
  43e58c:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e590:	cmp	w25, #0x46
  43e594:	b.ne	43e5b8 <ferror@plt+0x3afe8>  // b.any
  43e598:	add	x0, x3, #0x1
  43e59c:	mov	x2, #0x3                   	// #3
  43e5a0:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e5a4:	add	x1, x1, #0x9a7
  43e5a8:	str	x3, [sp, #104]
  43e5ac:	bl	4031e0 <memcmp@plt>
  43e5b0:	ldr	x3, [sp, #104]
  43e5b4:	cbz	w0, 43e794 <ferror@plt+0x3b1c4>
  43e5b8:	cbnz	w26, 43e194 <ferror@plt+0x3abc4>
  43e5bc:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x38c10>
  43e5c0:	add	x0, x3, #0x1
  43e5c4:	add	x1, x1, #0x1b0
  43e5c8:	mov	x2, #0x3                   	// #3
  43e5cc:	str	x3, [sp, #104]
  43e5d0:	bl	4031e0 <memcmp@plt>
  43e5d4:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e5d8:	ldr	x3, [sp, #104]
  43e5dc:	mov	w1, #0x73                  	// #115
  43e5e0:	ldrb	w0, [x3, #4]
  43e5e4:	cmp	w0, w1
  43e5e8:	b.ne	43e7a4 <ferror@plt+0x3b1d4>  // b.any
  43e5ec:	ldrb	w1, [x3, #5]
  43e5f0:	cmp	w1, #0x20
  43e5f4:	b.ne	43e7a4 <ferror@plt+0x3b1d4>  // b.any
  43e5f8:	add	x21, x3, #0x6
  43e5fc:	cmp	w25, #0x66
  43e600:	b.eq	43e610 <ferror@plt+0x3b040>  // b.none
  43e604:	ldrb	w0, [x21]
  43e608:	cmp	w0, #0x54
  43e60c:	b.eq	43e620 <ferror@plt+0x3b050>  // b.none
  43e610:	cbnz	w26, 43e194 <ferror@plt+0x3abc4>
  43e614:	ldrb	w0, [x21]
  43e618:	cmp	w0, #0x74
  43e61c:	b.ne	43e194 <ferror@plt+0x3abc4>  // b.any
  43e620:	sub	x28, x28, x21
  43e624:	cmp	x28, #0x3
  43e628:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e62c:	add	x3, x21, #0x1
  43e630:	cmp	w26, #0x0
  43e634:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e638:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e63c:	add	x0, x0, #0x874
  43e640:	add	x1, x1, #0x870
  43e644:	csel	x1, x1, x0, ne  // ne = any
  43e648:	mov	x2, #0x3                   	// #3
  43e64c:	mov	x0, x3
  43e650:	str	x3, [sp, #104]
  43e654:	bl	4031e0 <memcmp@plt>
  43e658:	cbz	w0, 43e7dc <ferror@plt+0x3b20c>
  43e65c:	cmp	x28, #0x6
  43e660:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e664:	ldr	x3, [sp, #104]
  43e668:	cmp	w26, #0x0
  43e66c:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e670:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e674:	add	x0, x0, #0x975
  43e678:	add	x1, x1, #0x878
  43e67c:	csel	x1, x1, x0, ne  // ne = any
  43e680:	mov	x2, #0x6                   	// #6
  43e684:	mov	x0, x3
  43e688:	bl	4031e0 <memcmp@plt>
  43e68c:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e690:	add	x21, x21, #0x7
  43e694:	mov	x1, #0x200                 	// #512
  43e698:	movk	x1, #0x4003, lsl #32
  43e69c:	ldrb	w0, [x21]
  43e6a0:	cmp	w0, #0x2e
  43e6a4:	b.hi	43e378 <ferror@plt+0x3ada8>  // b.pmore
  43e6a8:	lsr	x2, x1, x0
  43e6ac:	tbz	w2, #0, 43e7e4 <ferror@plt+0x3b214>
  43e6b0:	add	x21, x21, #0x1
  43e6b4:	b	43e69c <ferror@plt+0x3b0cc>
  43e6b8:	mov	w26, #0x1                   	// #1
  43e6bc:	b	43e52c <ferror@plt+0x3af5c>
  43e6c0:	cmp	w1, #0x49
  43e6c4:	b.ne	43e784 <ferror@plt+0x3b1b4>  // b.any
  43e6c8:	ldr	x0, [x20]
  43e6cc:	ldr	x0, [x0]
  43e6d0:	sub	x0, x0, x21
  43e6d4:	cmp	x0, #0x13
  43e6d8:	b.ls	43e194 <ferror@plt+0x3abc4>  // b.plast
  43e6dc:	add	x25, x21, #0x1
  43e6e0:	cmp	w28, #0x49
  43e6e4:	b.ne	43e700 <ferror@plt+0x3b130>  // b.any
  43e6e8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e6ec:	mov	x0, x25
  43e6f0:	add	x1, x1, #0x988
  43e6f4:	mov	x2, #0xa                   	// #10
  43e6f8:	bl	4031e0 <memcmp@plt>
  43e6fc:	cbz	w0, 43e748 <ferror@plt+0x3b178>
  43e700:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e704:	mov	x0, x25
  43e708:	add	x1, x1, #0x993
  43e70c:	mov	x2, #0xa                   	// #10
  43e710:	bl	4031e0 <memcmp@plt>
  43e714:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e718:	mov	w26, #0x0                   	// #0
  43e71c:	ldrb	w0, [x21, #11]
  43e720:	cmp	w0, #0x20
  43e724:	b.ne	43e750 <ferror@plt+0x3b180>  // b.any
  43e728:	ldrb	w0, [x21, #12]
  43e72c:	add	x3, x21, #0xc
  43e730:	cbz	w26, 43e73c <ferror@plt+0x3b16c>
  43e734:	cmp	w0, #0x66
  43e738:	b.eq	43e194 <ferror@plt+0x3abc4>  // b.none
  43e73c:	ldrb	w25, [x3]
  43e740:	cmp	w28, #0x69
  43e744:	b	43e564 <ferror@plt+0x3af94>
  43e748:	mov	w26, #0x1                   	// #1
  43e74c:	b	43e71c <ferror@plt+0x3b14c>
  43e750:	add	x0, x21, #0xb
  43e754:	cbz	w26, 43e774 <ferror@plt+0x3b1a4>
  43e758:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e75c:	add	x1, x1, #0x99e
  43e760:	mov	x2, #0x4                   	// #4
  43e764:	bl	4031e0 <memcmp@plt>
  43e768:	cbnz	w0, 43e194 <ferror@plt+0x3abc4>
  43e76c:	add	x3, x21, #0xe
  43e770:	b	43e73c <ferror@plt+0x3b16c>
  43e774:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43e778:	mov	x2, #0x3                   	// #3
  43e77c:	add	x1, x1, #0x9a3
  43e780:	b	43e764 <ferror@plt+0x3b194>
  43e784:	mov	w25, w28
  43e788:	mov	x3, x21
  43e78c:	mov	w26, #0x0                   	// #0
  43e790:	b	43e570 <ferror@plt+0x3afa0>
  43e794:	ldrb	w0, [x3, #4]
  43e798:	mov	w26, #0x1                   	// #1
  43e79c:	mov	w1, #0x53                  	// #83
  43e7a0:	b	43e5e4 <ferror@plt+0x3b014>
  43e7a4:	cmp	w0, #0x20
  43e7a8:	b.eq	43e7b4 <ferror@plt+0x3b1e4>  // b.none
  43e7ac:	cmp	w0, #0x2d
  43e7b0:	b.ne	43e7bc <ferror@plt+0x3b1ec>  // b.any
  43e7b4:	add	x21, x3, #0x5
  43e7b8:	b	43e5fc <ferror@plt+0x3b02c>
  43e7bc:	cmp	w26, #0x0
  43e7c0:	mov	w1, #0x54                  	// #84
  43e7c4:	mov	w2, #0x74                  	// #116
  43e7c8:	csel	w1, w1, w2, ne  // ne = any
  43e7cc:	cmp	w0, w1
  43e7d0:	b.ne	43e194 <ferror@plt+0x3abc4>  // b.any
  43e7d4:	add	x21, x3, #0x4
  43e7d8:	b	43e5fc <ferror@plt+0x3b02c>
  43e7dc:	add	x21, x21, #0x4
  43e7e0:	b	43e694 <ferror@plt+0x3b0c4>
  43e7e4:	cmp	w0, #0x2d
  43e7e8:	b.ne	43e378 <ferror@plt+0x3ada8>  // b.any
  43e7ec:	ldrb	w1, [x22]
  43e7f0:	add	x0, x21, #0x1
  43e7f4:	cmp	w1, #0x2a
  43e7f8:	b.ne	43e840 <ferror@plt+0x3b270>  // b.any
  43e7fc:	add	x0, x21, #0x2
  43e800:	ldurb	w1, [x0, #-1]
  43e804:	sub	x21, x0, #0x1
  43e808:	cmp	w1, #0x2a
  43e80c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43e810:	b.eq	43e82c <ferror@plt+0x3b25c>  // b.none
  43e814:	cmp	w1, #0xa
  43e818:	b.eq	43e378 <ferror@plt+0x3ada8>  // b.none
  43e81c:	cmp	w1, #0xd
  43e820:	b.eq	43e378 <ferror@plt+0x3ada8>  // b.none
  43e824:	add	x0, x0, #0x1
  43e828:	b	43e800 <ferror@plt+0x3b230>
  43e82c:	cmp	w1, #0x2a
  43e830:	b.ne	43e378 <ferror@plt+0x3ada8>  // b.any
  43e834:	ldrb	w1, [x0]
  43e838:	cmp	w1, #0x2f
  43e83c:	b	43e820 <ferror@plt+0x3b250>
  43e840:	mov	x21, x0
  43e844:	mov	x1, #0x2401                	// #9217
  43e848:	ldrb	w0, [x21]
  43e84c:	cmp	w0, #0xd
  43e850:	b.hi	43e85c <ferror@plt+0x3b28c>  // b.pmore
  43e854:	lsr	x0, x1, x0
  43e858:	tbnz	w0, #0, 43e378 <ferror@plt+0x3ada8>
  43e85c:	add	x21, x21, #0x1
  43e860:	b	43e848 <ferror@plt+0x3b278>
  43e864:	cmp	w0, #0xa
  43e868:	b	43e018 <ferror@plt+0x3aa48>
  43e86c:	cbz	w23, 43e87c <ferror@plt+0x3b2ac>
  43e870:	ldrh	w0, [x19, #6]
  43e874:	orr	w0, w0, #0x20
  43e878:	strh	w0, [x19, #6]
  43e87c:	ldr	x0, [x20]
  43e880:	ldr	x25, [x0]
  43e884:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43e888:	add	x0, x0, #0x228
  43e88c:	ldurb	w1, [x25, #-1]
  43e890:	sub	w25, w25, w22
  43e894:	ldrh	w0, [x0, x1, lsl #1]
  43e898:	tst	x0, #0x400
  43e89c:	ldrb	w0, [x20, #16]
  43e8a0:	cinc	w25, w25, eq  // eq = none
  43e8a4:	cbnz	w0, 43e8b0 <ferror@plt+0x3b2e0>
  43e8a8:	ldrb	w0, [x20, #25]
  43e8ac:	cbz	w0, 43e96c <ferror@plt+0x3b39c>
  43e8b0:	add	w21, w25, #0x2
  43e8b4:	cmp	w24, #0x2f
  43e8b8:	csel	w21, w21, w25, eq  // eq = none
  43e8bc:	mov	w1, w21
  43e8c0:	mov	x0, x20
  43e8c4:	bl	43ce0c <ferror@plt+0x3983c>
  43e8c8:	mov	x23, x0
  43e8cc:	mov	w0, #0x4f                  	// #79
  43e8d0:	strb	w0, [x19, #4]
  43e8d4:	mov	x0, x23
  43e8d8:	str	w21, [x19, #8]
  43e8dc:	str	x23, [x19, #16]
  43e8e0:	mov	w1, #0x2f                  	// #47
  43e8e4:	sub	w2, w25, #0x1
  43e8e8:	strb	w1, [x0], #1
  43e8ec:	mov	x1, x22
  43e8f0:	bl	402cd0 <memcpy@plt>
  43e8f4:	ldrb	w0, [x20, #16]
  43e8f8:	cbnz	w0, 43e904 <ferror@plt+0x3b334>
  43e8fc:	ldrb	w0, [x20, #25]
  43e900:	cbz	w0, 43e974 <ferror@plt+0x3b3a4>
  43e904:	cmp	w24, #0x2f
  43e908:	b.ne	43e974 <ferror@plt+0x3b3a4>  // b.any
  43e90c:	sub	w2, w21, #0x2
  43e910:	sub	w21, w21, #0x1
  43e914:	mov	w0, #0x2a                  	// #42
  43e918:	strb	w0, [x23, #1]
  43e91c:	mov	w1, #0x2                   	// #2
  43e920:	mov	w3, #0x7c                  	// #124
  43e924:	strb	w0, [x23, w2, uxtw]
  43e928:	add	x0, x23, #0x2
  43e92c:	strb	w24, [x23, x21]
  43e930:	cmp	w2, w1
  43e934:	b.ls	43e974 <ferror@plt+0x3b3a4>  // b.plast
  43e938:	ldrb	w4, [x0]
  43e93c:	add	w1, w1, #0x1
  43e940:	cmp	w4, #0x2f
  43e944:	b.ne	43e964 <ferror@plt+0x3b394>  // b.any
  43e948:	ldurb	w4, [x0, #-1]
  43e94c:	cmp	w4, #0x2a
  43e950:	b.eq	43e960 <ferror@plt+0x3b390>  // b.none
  43e954:	ldrb	w4, [x23, w1, uxtw]
  43e958:	cmp	w4, #0x2a
  43e95c:	b.ne	43e964 <ferror@plt+0x3b394>  // b.any
  43e960:	strb	w3, [x0]
  43e964:	add	x0, x0, #0x1
  43e968:	b	43e930 <ferror@plt+0x3b360>
  43e96c:	mov	w21, w25
  43e970:	b	43e8bc <ferror@plt+0x3b2ec>
  43e974:	ldr	w0, [x20, #1396]
  43e978:	cbnz	w0, 43e990 <ferror@plt+0x3b3c0>
  43e97c:	mov	w0, #0x100                 	// #256
  43e980:	str	w0, [x20, #1396]
  43e984:	mov	x0, #0x1000                	// #4096
  43e988:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43e98c:	str	x0, [x20, #1384]
  43e990:	ldr	w1, [x20, #1392]
  43e994:	ldr	w0, [x20, #1396]
  43e998:	cmp	w1, w0
  43e99c:	b.ne	43e9b8 <ferror@plt+0x3b3e8>  // b.any
  43e9a0:	ldr	x0, [x20, #1384]
  43e9a4:	lsl	w1, w1, #1
  43e9a8:	str	w1, [x20, #1396]
  43e9ac:	sbfiz	x1, x1, #4, #32
  43e9b0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  43e9b4:	str	x0, [x20, #1384]
  43e9b8:	ldrsw	x22, [x20, #1392]
  43e9bc:	ldr	w21, [x19, #8]
  43e9c0:	ldr	x23, [x20, #1384]
  43e9c4:	add	w0, w21, #0x1
  43e9c8:	lsl	x22, x22, #4
  43e9cc:	sxtw	x21, w21
  43e9d0:	sxtw	x0, w0
  43e9d4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  43e9d8:	ldr	x3, [x20, #1384]
  43e9dc:	str	x0, [x23, x22]
  43e9e0:	ldrsw	x0, [x20, #1392]
  43e9e4:	mov	x2, x21
  43e9e8:	ldr	x1, [x19, #16]
  43e9ec:	lsl	x0, x0, #4
  43e9f0:	ldr	x0, [x3, x0]
  43e9f4:	bl	402cd0 <memcpy@plt>
  43e9f8:	ldrsw	x0, [x20, #1392]
  43e9fc:	ldr	x1, [x20, #1384]
  43ea00:	lsl	x0, x0, #4
  43ea04:	ldr	x0, [x1, x0]
  43ea08:	strb	wzr, [x0, x21]
  43ea0c:	ldr	x1, [x20, #1384]
  43ea10:	ldr	w0, [x20, #1392]
  43ea14:	ldr	w2, [x19]
  43ea18:	add	x1, x1, w0, sxtw #4
  43ea1c:	add	w0, w0, #0x1
  43ea20:	str	w2, [x1, #8]
  43ea24:	str	w0, [x20, #1392]
  43ea28:	b	43dec8 <ferror@plt+0x3a8f8>
  43ea2c:	ldrb	w0, [x20, #19]
  43ea30:	cbnz	w0, 43ea5c <ferror@plt+0x3b48c>
  43ea34:	mov	w0, #0x3                   	// #3
  43ea38:	strb	w0, [x19, #4]
  43ea3c:	ldr	x0, [x27]
  43ea40:	ldrb	w1, [x0]
  43ea44:	cmp	w1, #0x3d
  43ea48:	b.ne	43ea80 <ferror@plt+0x3b4b0>  // b.any
  43ea4c:	add	x0, x0, #0x1
  43ea50:	str	x0, [x27]
  43ea54:	mov	w0, #0x1a                  	// #26
  43ea58:	b	43e17c <ferror@plt+0x3abac>
  43ea5c:	ldr	x2, [x27]
  43ea60:	mov	x0, x20
  43ea64:	mov	x1, x19
  43ea68:	sub	x2, x2, #0x1
  43ea6c:	bl	43cec8 <ferror@plt+0x398f8>
  43ea70:	ldrb	w0, [x19, #4]
  43ea74:	cmp	w0, #0x3
  43ea78:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ea7c:	b	43ea34 <ferror@plt+0x3b464>
  43ea80:	cmp	w1, #0x3c
  43ea84:	b.ne	43eab4 <ferror@plt+0x3b4e4>  // b.any
  43ea88:	add	x1, x0, #0x1
  43ea8c:	str	x1, [x27]
  43ea90:	mov	w1, #0xd                   	// #13
  43ea94:	strb	w1, [x19, #4]
  43ea98:	ldrb	w1, [x0, #1]
  43ea9c:	cmp	w1, #0x3d
  43eaa0:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eaa4:	add	x0, x0, #0x2
  43eaa8:	str	x0, [x27]
  43eaac:	mov	w0, #0x24                  	// #36
  43eab0:	b	43e17c <ferror@plt+0x3abac>
  43eab4:	ldrb	w2, [x20, #1126]
  43eab8:	cbz	w2, 43dec8 <ferror@plt+0x3a8f8>
  43eabc:	cmp	w1, #0x3a
  43eac0:	b.ne	43eb18 <ferror@plt+0x3b548>  // b.any
  43eac4:	ldrb	w1, [x20, #1120]
  43eac8:	cbz	w1, 43eafc <ferror@plt+0x3b52c>
  43eacc:	ldr	w1, [x20, #1116]
  43ead0:	sub	w1, w1, #0xb
  43ead4:	cmp	w1, #0x1
  43ead8:	b.ls	43eafc <ferror@plt+0x3b52c>  // b.plast
  43eadc:	ldrb	w1, [x0, #1]
  43eae0:	cmp	w1, #0x3a
  43eae4:	b.ne	43eafc <ferror@plt+0x3b52c>  // b.any
  43eae8:	ldrb	w1, [x0, #2]
  43eaec:	and	w1, w1, #0xfffffffb
  43eaf0:	and	w1, w1, #0xff
  43eaf4:	cmp	w1, #0x3a
  43eaf8:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eafc:	add	x0, x0, #0x1
  43eb00:	str	x0, [x27]
  43eb04:	ldrh	w0, [x19, #6]
  43eb08:	orr	w0, w0, #0x2
  43eb0c:	strh	w0, [x19, #6]
  43eb10:	mov	w0, #0x27                  	// #39
  43eb14:	b	43e17c <ferror@plt+0x3abac>
  43eb18:	cmp	w1, #0x25
  43eb1c:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eb20:	add	x0, x0, #0x1
  43eb24:	str	x0, [x27]
  43eb28:	ldrh	w0, [x19, #6]
  43eb2c:	orr	w0, w0, #0x2
  43eb30:	strh	w0, [x19, #6]
  43eb34:	mov	w0, #0x29                  	// #41
  43eb38:	b	43e17c <ferror@plt+0x3abac>
  43eb3c:	mov	w0, #0x2                   	// #2
  43eb40:	strb	w0, [x19, #4]
  43eb44:	ldr	x0, [x27]
  43eb48:	ldrb	w1, [x0]
  43eb4c:	cmp	w1, #0x3d
  43eb50:	b.ne	43eb64 <ferror@plt+0x3b594>  // b.any
  43eb54:	add	x0, x0, #0x1
  43eb58:	str	x0, [x27]
  43eb5c:	mov	w0, #0x19                  	// #25
  43eb60:	b	43e17c <ferror@plt+0x3abac>
  43eb64:	cmp	w1, #0x3e
  43eb68:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eb6c:	add	x1, x0, #0x1
  43eb70:	str	x1, [x27]
  43eb74:	mov	w1, #0xc                   	// #12
  43eb78:	strb	w1, [x19, #4]
  43eb7c:	ldrb	w1, [x0, #1]
  43eb80:	cmp	w1, #0x3d
  43eb84:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eb88:	add	x0, x0, #0x2
  43eb8c:	str	x0, [x27]
  43eb90:	mov	w0, #0x23                  	// #35
  43eb94:	b	43e17c <ferror@plt+0x3abac>
  43eb98:	mov	w0, #0x8                   	// #8
  43eb9c:	strb	w0, [x19, #4]
  43eba0:	ldr	x0, [x27]
  43eba4:	ldrb	w1, [x0]
  43eba8:	cmp	w1, #0x3d
  43ebac:	b.ne	43ebc0 <ferror@plt+0x3b5f0>  // b.any
  43ebb0:	add	x0, x0, #0x1
  43ebb4:	str	x0, [x27]
  43ebb8:	mov	w0, #0x1f                  	// #31
  43ebbc:	b	43e17c <ferror@plt+0x3abac>
  43ebc0:	ldrb	w2, [x20, #1126]
  43ebc4:	cbz	w2, 43dec8 <ferror@plt+0x3a8f8>
  43ebc8:	cmp	w1, #0x3a
  43ebcc:	b.ne	43ec1c <ferror@plt+0x3b64c>  // b.any
  43ebd0:	add	x1, x0, #0x1
  43ebd4:	str	x1, [x27]
  43ebd8:	ldrh	w1, [x19, #6]
  43ebdc:	orr	w1, w1, #0x2
  43ebe0:	strh	w1, [x19, #6]
  43ebe4:	mov	w1, #0x25                  	// #37
  43ebe8:	strb	w1, [x19, #4]
  43ebec:	ldrb	w1, [x0, #1]
  43ebf0:	cmp	w1, #0x25
  43ebf4:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ebf8:	ldrb	w1, [x0, #2]
  43ebfc:	cmp	w1, #0x3a
  43ec00:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ec04:	add	x0, x0, #0x3
  43ec08:	str	x0, [x27]
  43ec0c:	mov	w0, #0x26                  	// #38
  43ec10:	strb	w0, [x19, #4]
  43ec14:	str	wzr, [x19, #8]
  43ec18:	b	43dec8 <ferror@plt+0x3a8f8>
  43ec1c:	cmp	w1, #0x3e
  43ec20:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ec24:	add	x0, x0, #0x1
  43ec28:	str	x0, [x27]
  43ec2c:	ldrh	w0, [x19, #6]
  43ec30:	orr	w0, w0, #0x2
  43ec34:	strh	w0, [x19, #6]
  43ec38:	mov	w0, #0x2a                  	// #42
  43ec3c:	b	43e17c <ferror@plt+0x3abac>
  43ec40:	mov	w0, #0x30                  	// #48
  43ec44:	strb	w0, [x19, #4]
  43ec48:	ldr	x0, [x27]
  43ec4c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  43ec50:	add	x1, x1, #0x228
  43ec54:	ldrb	w3, [x0]
  43ec58:	ldrb	w2, [x0]
  43ec5c:	ldrh	w1, [x1, x3, lsl #1]
  43ec60:	tbz	w1, #2, 43ec9c <ferror@plt+0x3b6cc>
  43ec64:	str	wzr, [sp, #112]
  43ec68:	mov	w0, #0x37                  	// #55
  43ec6c:	strb	wzr, [sp, #116]
  43ec70:	add	x2, sp, #0x70
  43ec74:	str	wzr, [sp, #120]
  43ec78:	add	x1, x19, #0x8
  43ec7c:	strb	w0, [x19, #4]
  43ec80:	mov	x0, x20
  43ec84:	bl	43da04 <ferror@plt+0x3a434>
  43ec88:	add	x2, sp, #0x78
  43ec8c:	mov	x1, x19
  43ec90:	mov	x0, x20
  43ec94:	bl	43c4b4 <ferror@plt+0x38ee4>
  43ec98:	b	43dec8 <ferror@plt+0x3a8f8>
  43ec9c:	cmp	w2, #0x2e
  43eca0:	b.ne	43ecc0 <ferror@plt+0x3b6f0>  // b.any
  43eca4:	ldrb	w1, [x0, #1]
  43eca8:	cmp	w1, #0x2e
  43ecac:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ecb0:	add	x0, x0, #0x2
  43ecb4:	str	x0, [x27]
  43ecb8:	mov	w0, #0x2c                  	// #44
  43ecbc:	b	43e17c <ferror@plt+0x3abac>
  43ecc0:	cmp	w2, #0x2a
  43ecc4:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ecc8:	ldrb	w1, [x20, #1120]
  43eccc:	cbz	w1, 43dec8 <ferror@plt+0x3a8f8>
  43ecd0:	add	x0, x0, #0x1
  43ecd4:	str	x0, [x27]
  43ecd8:	mov	w0, #0x33                  	// #51
  43ecdc:	b	43e17c <ferror@plt+0x3abac>
  43ece0:	mov	w0, #0x4                   	// #4
  43ece4:	strb	w0, [x19, #4]
  43ece8:	ldr	x0, [x27]
  43ecec:	ldrb	w1, [x0]
  43ecf0:	cmp	w1, #0x2b
  43ecf4:	b.ne	43ed08 <ferror@plt+0x3b738>  // b.any
  43ecf8:	add	x0, x0, #0x1
  43ecfc:	str	x0, [x27]
  43ed00:	mov	w0, #0x2d                  	// #45
  43ed04:	b	43e17c <ferror@plt+0x3abac>
  43ed08:	cmp	w1, #0x3d
  43ed0c:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ed10:	add	x0, x0, #0x1
  43ed14:	str	x0, [x27]
  43ed18:	mov	w0, #0x1b                  	// #27
  43ed1c:	b	43e17c <ferror@plt+0x3abac>
  43ed20:	mov	w0, #0x5                   	// #5
  43ed24:	strb	w0, [x19, #4]
  43ed28:	ldr	x0, [x27]
  43ed2c:	ldrb	w1, [x0]
  43ed30:	cmp	w1, #0x3e
  43ed34:	b.ne	43ed6c <ferror@plt+0x3b79c>  // b.any
  43ed38:	add	x1, x0, #0x1
  43ed3c:	str	x1, [x27]
  43ed40:	mov	w1, #0x2f                  	// #47
  43ed44:	strb	w1, [x19, #4]
  43ed48:	ldrb	w1, [x0, #1]
  43ed4c:	cmp	w1, #0x2a
  43ed50:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ed54:	ldrb	w1, [x20, #1120]
  43ed58:	cbz	w1, 43dec8 <ferror@plt+0x3a8f8>
  43ed5c:	add	x0, x0, #0x2
  43ed60:	str	x0, [x27]
  43ed64:	mov	w0, #0x32                  	// #50
  43ed68:	b	43e17c <ferror@plt+0x3abac>
  43ed6c:	cmp	w1, #0x2d
  43ed70:	b.ne	43ed84 <ferror@plt+0x3b7b4>  // b.any
  43ed74:	add	x0, x0, #0x1
  43ed78:	str	x0, [x27]
  43ed7c:	mov	w0, #0x2e                  	// #46
  43ed80:	b	43e17c <ferror@plt+0x3abac>
  43ed84:	cmp	w1, #0x3d
  43ed88:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ed8c:	add	x0, x0, #0x1
  43ed90:	str	x0, [x27]
  43ed94:	mov	w0, #0x1c                  	// #28
  43ed98:	b	43e17c <ferror@plt+0x3abac>
  43ed9c:	mov	w0, #0x9                   	// #9
  43eda0:	strb	w0, [x19, #4]
  43eda4:	ldr	x0, [x27]
  43eda8:	ldrb	w1, [x0]
  43edac:	cmp	w1, #0x26
  43edb0:	b.ne	43edc4 <ferror@plt+0x3b7f4>  // b.any
  43edb4:	add	x0, x0, #0x1
  43edb8:	str	x0, [x27]
  43edbc:	mov	w0, #0xf                   	// #15
  43edc0:	b	43e17c <ferror@plt+0x3abac>
  43edc4:	cmp	w1, #0x3d
  43edc8:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43edcc:	add	x0, x0, #0x1
  43edd0:	str	x0, [x27]
  43edd4:	mov	w0, #0x20                  	// #32
  43edd8:	b	43e17c <ferror@plt+0x3abac>
  43eddc:	mov	w0, #0xa                   	// #10
  43ede0:	strb	w0, [x19, #4]
  43ede4:	ldr	x0, [x27]
  43ede8:	ldrb	w1, [x0]
  43edec:	cmp	w1, #0x7c
  43edf0:	b.ne	43ee04 <ferror@plt+0x3b834>  // b.any
  43edf4:	add	x0, x0, #0x1
  43edf8:	str	x0, [x27]
  43edfc:	mov	w0, #0x10                  	// #16
  43ee00:	b	43e17c <ferror@plt+0x3abac>
  43ee04:	cmp	w1, #0x3d
  43ee08:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ee0c:	add	x0, x0, #0x1
  43ee10:	str	x0, [x27]
  43ee14:	mov	w0, #0x21                  	// #33
  43ee18:	b	43e17c <ferror@plt+0x3abac>
  43ee1c:	mov	w0, #0x12                  	// #18
  43ee20:	strb	w0, [x19, #4]
  43ee24:	ldr	x0, [x27]
  43ee28:	ldrb	w1, [x0]
  43ee2c:	cmp	w1, #0x3a
  43ee30:	b.ne	43ee4c <ferror@plt+0x3b87c>  // b.any
  43ee34:	ldrb	w1, [x20, #1120]
  43ee38:	cbz	w1, 43dec8 <ferror@plt+0x3a8f8>
  43ee3c:	add	x0, x0, #0x1
  43ee40:	str	x0, [x27]
  43ee44:	mov	w0, #0x31                  	// #49
  43ee48:	b	43e17c <ferror@plt+0x3abac>
  43ee4c:	cmp	w1, #0x3e
  43ee50:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ee54:	ldrb	w1, [x20, #1126]
  43ee58:	cbz	w1, 43dec8 <ferror@plt+0x3a8f8>
  43ee5c:	add	x0, x0, #0x1
  43ee60:	str	x0, [x27]
  43ee64:	ldrh	w0, [x19, #6]
  43ee68:	orr	w0, w0, #0x2
  43ee6c:	strh	w0, [x19, #6]
  43ee70:	mov	w0, #0x28                  	// #40
  43ee74:	b	43e17c <ferror@plt+0x3abac>
  43ee78:	mov	w0, #0x6                   	// #6
  43ee7c:	strb	w0, [x19, #4]
  43ee80:	ldr	x0, [x27]
  43ee84:	ldrb	w1, [x0]
  43ee88:	cmp	w1, #0x3d
  43ee8c:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ee90:	add	x0, x0, #0x1
  43ee94:	str	x0, [x27]
  43ee98:	mov	w0, #0x1d                  	// #29
  43ee9c:	b	43e17c <ferror@plt+0x3abac>
  43eea0:	ldr	x0, [x27]
  43eea4:	strb	wzr, [x19, #4]
  43eea8:	ldrb	w1, [x0]
  43eeac:	cmp	w1, #0x3d
  43eeb0:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eeb4:	add	x0, x0, #0x1
  43eeb8:	str	x0, [x27]
  43eebc:	mov	w0, #0x17                  	// #23
  43eec0:	b	43e17c <ferror@plt+0x3abac>
  43eec4:	mov	w0, #0x1                   	// #1
  43eec8:	strb	w0, [x19, #4]
  43eecc:	ldr	x0, [x27]
  43eed0:	ldrb	w1, [x0]
  43eed4:	cmp	w1, #0x3d
  43eed8:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43eedc:	add	x0, x0, #0x1
  43eee0:	str	x0, [x27]
  43eee4:	mov	w0, #0x18                  	// #24
  43eee8:	b	43e17c <ferror@plt+0x3abac>
  43eeec:	mov	w0, #0xb                   	// #11
  43eef0:	strb	w0, [x19, #4]
  43eef4:	ldr	x0, [x27]
  43eef8:	ldrb	w1, [x0]
  43eefc:	cmp	w1, #0x3d
  43ef00:	b.ne	43dec8 <ferror@plt+0x3a8f8>  // b.any
  43ef04:	add	x0, x0, #0x1
  43ef08:	str	x0, [x27]
  43ef0c:	mov	w0, #0x22                  	// #34
  43ef10:	b	43e17c <ferror@plt+0x3abac>
  43ef14:	mov	w0, #0x25                  	// #37
  43ef18:	strb	w0, [x19, #4]
  43ef1c:	ldr	x0, [x27]
  43ef20:	ldrb	w1, [x0]
  43ef24:	cmp	w1, #0x23
  43ef28:	b.ne	43ec14 <ferror@plt+0x3b644>  // b.any
  43ef2c:	add	x0, x0, #0x1
  43ef30:	b	43ec08 <ferror@plt+0x3b638>
  43ef34:	mov	w0, #0x11                  	// #17
  43ef38:	b	43e17c <ferror@plt+0x3abac>
  43ef3c:	mov	w0, #0xe                   	// #14
  43ef40:	b	43e17c <ferror@plt+0x3abac>
  43ef44:	mov	w0, #0x13                  	// #19
  43ef48:	b	43e17c <ferror@plt+0x3abac>
  43ef4c:	mov	w0, #0x14                  	// #20
  43ef50:	b	43e17c <ferror@plt+0x3abac>
  43ef54:	mov	w0, #0x15                  	// #21
  43ef58:	b	43e17c <ferror@plt+0x3abac>
  43ef5c:	mov	w0, #0x2b                  	// #43
  43ef60:	b	43e17c <ferror@plt+0x3abac>
  43ef64:	mov	w0, #0x34                  	// #52
  43ef68:	b	43e17c <ferror@plt+0x3abac>
  43ef6c:	ldr	x21, [x27]
  43ef70:	add	x2, sp, #0x70
  43ef74:	mov	x0, x20
  43ef78:	mov	w1, #0x1                   	// #1
  43ef7c:	sub	x21, x21, #0x1
  43ef80:	str	x21, [x27]
  43ef84:	str	wzr, [sp, #112]
  43ef88:	strb	wzr, [sp, #116]
  43ef8c:	str	wzr, [sp, #120]
  43ef90:	bl	43b370 <ferror@plt+0x37da0>
  43ef94:	tst	w0, #0xff
  43ef98:	b.eq	43efc4 <ferror@plt+0x3b9f4>  // b.none
  43ef9c:	mov	w0, #0x35                  	// #53
  43efa0:	strb	w0, [x19, #4]
  43efa4:	add	x4, x19, #0x10
  43efa8:	add	x3, sp, #0x70
  43efac:	mov	x1, x21
  43efb0:	mov	x0, x20
  43efb4:	mov	w2, #0x1                   	// #1
  43efb8:	bl	43b53c <ferror@plt+0x37f6c>
  43efbc:	str	x0, [x19, #8]
  43efc0:	b	43ec88 <ferror@plt+0x3b6b8>
  43efc4:	ldr	x0, [x27]
  43efc8:	add	x0, x0, #0x1
  43efcc:	str	x0, [x27]
  43efd0:	ldr	x2, [x27]
  43efd4:	mov	x1, x19
  43efd8:	mov	x0, x20
  43efdc:	mov	w4, #0x3d                  	// #61
  43efe0:	sub	x2, x2, #0x1
  43efe4:	mov	w3, #0x1                   	// #1
  43efe8:	bl	43ce64 <ferror@plt+0x39894>
  43efec:	b	43dec8 <ferror@plt+0x3a8f8>
  43eff0:	stp	x29, x30, [sp, #-48]!
  43eff4:	mov	x29, sp
  43eff8:	stp	x19, x20, [sp, #16]
  43effc:	mov	x19, x0
  43f000:	str	x21, [sp, #32]
  43f004:	add	x21, x0, #0x98
  43f008:	ldr	x0, [x19, #488]
  43f00c:	ldr	x2, [x19, #448]
  43f010:	ldr	x1, [x0, #24]
  43f014:	cmp	x2, x1
  43f018:	b.ne	43f02c <ferror@plt+0x3ba5c>  // b.any
  43f01c:	bl	43c09c <ferror@plt+0x38acc>
  43f020:	str	x0, [x19, #488]
  43f024:	ldr	x0, [x0, #16]
  43f028:	str	x0, [x19, #448]
  43f02c:	ldr	x0, [x19, #488]
  43f030:	ldr	x20, [x19, #448]
  43f034:	ldr	x1, [x0, #16]
  43f038:	cmp	x20, x1
  43f03c:	b.cc	43f04c <ferror@plt+0x3ba7c>  // b.lo, b.ul, b.last
  43f040:	ldr	x0, [x0, #24]
  43f044:	cmp	x20, x0
  43f048:	b.cc	43f064 <ferror@plt+0x3ba94>  // b.lo, b.ul, b.last
  43f04c:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43f050:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43f054:	add	x2, x2, #0x9ab
  43f058:	add	x0, x0, #0x43d
  43f05c:	mov	w1, #0xa1d                 	// #2589
  43f060:	bl	403600 <ferror@plt+0x30>
  43f064:	ldr	w0, [x19, #496]
  43f068:	cbz	w0, 43f118 <ferror@plt+0x3bb48>
  43f06c:	sub	w0, w0, #0x1
  43f070:	str	w0, [x19, #496]
  43f074:	add	x0, x20, #0x18
  43f078:	str	x0, [x19, #448]
  43f07c:	ldrh	w1, [x20, #6]
  43f080:	tbz	w1, #6, 43f0dc <ferror@plt+0x3bb0c>
  43f084:	ldrb	w0, [x20, #4]
  43f088:	cmp	w0, #0x25
  43f08c:	b.ne	43f128 <ferror@plt+0x3bb58>  // b.any
  43f090:	ldrb	w0, [x19, #25]
  43f094:	cmp	w0, #0x1
  43f098:	b.eq	43f128 <ferror@plt+0x3bb58>  // b.none
  43f09c:	and	w1, w1, #0x1
  43f0a0:	mov	x0, x19
  43f0a4:	bl	434264 <ferror@plt+0x30c94>
  43f0a8:	cbz	w0, 43f0bc <ferror@plt+0x3baec>
  43f0ac:	ldrb	w0, [x19, #156]
  43f0b0:	cmp	w0, #0x53
  43f0b4:	b.eq	43f008 <ferror@plt+0x3ba38>  // b.none
  43f0b8:	mov	x20, x21
  43f0bc:	ldr	x3, [x19, #904]
  43f0c0:	cbz	x3, 43f0dc <ferror@plt+0x3bb0c>
  43f0c4:	ldrb	w0, [x19, #18]
  43f0c8:	cbnz	w0, 43f0dc <ferror@plt+0x3bb0c>
  43f0cc:	ldrb	w2, [x19, #25]
  43f0d0:	mov	x1, x20
  43f0d4:	mov	x0, x19
  43f0d8:	blr	x3
  43f0dc:	ldrb	w0, [x19, #16]
  43f0e0:	cbnz	w0, 43f104 <ferror@plt+0x3bb34>
  43f0e4:	ldrb	w0, [x19, #32]
  43f0e8:	cbnz	w0, 43f104 <ferror@plt+0x3bb34>
  43f0ec:	ldrb	w0, [x19, #18]
  43f0f0:	strb	wzr, [x19, #440]
  43f0f4:	cbz	w0, 43f104 <ferror@plt+0x3bb34>
  43f0f8:	ldrb	w0, [x20, #4]
  43f0fc:	cmp	w0, #0x16
  43f100:	b.ne	43f008 <ferror@plt+0x3ba38>  // b.any
  43f104:	mov	x0, x20
  43f108:	ldp	x19, x20, [sp, #16]
  43f10c:	ldr	x21, [sp, #32]
  43f110:	ldp	x29, x30, [sp], #48
  43f114:	ret
  43f118:	mov	x0, x19
  43f11c:	bl	43db44 <ferror@plt+0x3a574>
  43f120:	mov	x20, x0
  43f124:	b	43f07c <ferror@plt+0x3baac>
  43f128:	ldrb	w0, [x19, #32]
  43f12c:	cbnz	w0, 43f0b8 <ferror@plt+0x3bae8>
  43f130:	b	43f0bc <ferror@plt+0x3baec>
  43f134:	stp	x29, x30, [sp, #-64]!
  43f138:	mov	x29, sp
  43f13c:	stp	x19, x20, [sp, #16]
  43f140:	mov	x19, x0
  43f144:	mov	w20, w1
  43f148:	stp	x21, x22, [sp, #32]
  43f14c:	ldr	x21, [x0, #136]
  43f150:	str	x23, [sp, #48]
  43f154:	ldr	x22, [x21, #8]
  43f158:	cbz	x22, 43f1d4 <ferror@plt+0x3bc04>
  43f15c:	mov	x0, x21
  43f160:	bl	43c0dc <ferror@plt+0x38b0c>
  43f164:	cmp	w0, w20
  43f168:	b.le	43f1c8 <ferror@plt+0x3bbf8>
  43f16c:	ldr	w0, [x21, #48]
  43f170:	cmp	w0, #0x1
  43f174:	b.ne	43f19c <ferror@plt+0x3bbcc>  // b.any
  43f178:	ldr	x0, [x21, #16]
  43f17c:	mov	w21, #0x18                  	// #24
  43f180:	smaddl	x21, w20, w21, x0
  43f184:	mov	x0, x21
  43f188:	ldp	x19, x20, [sp, #16]
  43f18c:	ldp	x21, x22, [sp, #32]
  43f190:	ldr	x23, [sp, #48]
  43f194:	ldp	x29, x30, [sp], #64
  43f198:	ret
  43f19c:	tst	w0, #0xfffffffd
  43f1a0:	b.ne	43f1b0 <ferror@plt+0x3bbe0>  // b.any
  43f1a4:	ldr	x0, [x21, #16]
  43f1a8:	ldr	x21, [x0, w20, sxtw #3]
  43f1ac:	b	43f184 <ferror@plt+0x3bbb4>
  43f1b0:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43f1b4:	adrp	x0, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43f1b8:	add	x2, x2, #0x9ba
  43f1bc:	add	x0, x0, #0x43d
  43f1c0:	mov	w1, #0x9ad                 	// #2477
  43f1c4:	bl	403600 <ferror@plt+0x30>
  43f1c8:	sub	w20, w20, w0
  43f1cc:	mov	x21, x22
  43f1d0:	b	43f154 <ferror@plt+0x3bb84>
  43f1d4:	ldr	w0, [x19, #500]
  43f1d8:	mov	w22, w20
  43f1dc:	ldr	x23, [x19, #904]
  43f1e0:	add	w0, w0, #0x1
  43f1e4:	str	w0, [x19, #500]
  43f1e8:	str	xzr, [x19, #904]
  43f1ec:	mov	x0, x19
  43f1f0:	bl	43eff0 <ferror@plt+0x3ba20>
  43f1f4:	mov	x21, x0
  43f1f8:	mov	w0, w22
  43f1fc:	sub	w22, w22, #0x1
  43f200:	ldrb	w1, [x21, #4]
  43f204:	cmp	w1, #0x16
  43f208:	b.eq	43f214 <ferror@plt+0x3bc44>  // b.none
  43f20c:	cbnz	w0, 43f1ec <ferror@plt+0x3bc1c>
  43f210:	mov	w22, #0xffffffff            	// #-1
  43f214:	mov	x0, x19
  43f218:	sub	w1, w20, w22
  43f21c:	bl	4427b0 <ferror@plt+0x3f1e0>
  43f220:	str	x23, [x19, #904]
  43f224:	ldr	w0, [x19, #500]
  43f228:	sub	w0, w0, #0x1
  43f22c:	str	w0, [x19, #500]
  43f230:	b	43f184 <ferror@plt+0x3bbb4>
  43f234:	stp	x29, x30, [sp, #-32]!
  43f238:	mov	x29, sp
  43f23c:	ldr	x2, [x0, #56]
  43f240:	stp	x19, x20, [sp, #16]
  43f244:	mov	x19, x1
  43f248:	ldp	x3, x4, [x2, #16]
  43f24c:	sub	x4, x4, x3
  43f250:	cmp	x4, x1
  43f254:	b.cs	43f274 <ferror@plt+0x3bca4>  // b.hs, b.nlast
  43f258:	mov	x20, x0
  43f25c:	bl	43cbdc <ferror@plt+0x3960c>
  43f260:	mov	x2, x0
  43f264:	ldr	x3, [x0, #16]
  43f268:	ldr	x0, [x20, #56]
  43f26c:	str	x0, [x2]
  43f270:	str	x2, [x20, #56]
  43f274:	add	x19, x3, x19
  43f278:	str	x19, [x2, #16]
  43f27c:	mov	x0, x3
  43f280:	ldp	x19, x20, [sp, #16]
  43f284:	ldp	x29, x30, [sp], #32
  43f288:	ret
  43f28c:	stp	x29, x30, [sp, #-48]!
  43f290:	mov	x29, sp
  43f294:	stp	x19, x20, [sp, #16]
  43f298:	mov	x19, x1
  43f29c:	ldr	x1, [x0, #56]
  43f2a0:	ldr	x0, [x0, #1088]
  43f2a4:	ldr	x2, [x0, #104]
  43f2a8:	str	x21, [sp, #32]
  43f2ac:	ldr	x21, [x1, #16]
  43f2b0:	cbz	x2, 43f2e0 <ferror@plt+0x3bd10>
  43f2b4:	mov	x0, x19
  43f2b8:	blr	x2
  43f2bc:	mov	x2, x19
  43f2c0:	mov	x20, x0
  43f2c4:	mov	x1, x21
  43f2c8:	bl	402cd0 <memcpy@plt>
  43f2cc:	mov	x0, x20
  43f2d0:	ldp	x19, x20, [sp, #16]
  43f2d4:	ldr	x21, [sp, #32]
  43f2d8:	ldp	x29, x30, [sp], #48
  43f2dc:	ret
  43f2e0:	add	x19, x21, x19
  43f2e4:	mov	x20, x21
  43f2e8:	str	x19, [x1, #16]
  43f2ec:	b	43f2cc <ferror@plt+0x3bcfc>
  43f2f0:	ldrb	w1, [x0, #4]
  43f2f4:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43f2f8:	ldrb	w0, [x0, #4]
  43f2fc:	add	x2, x2, #0xc78
  43f300:	lsl	x0, x0, #4
  43f304:	ldr	w0, [x2, x0]
  43f308:	cmp	w0, #0x3
  43f30c:	b.hi	43f328 <ferror@plt+0x3bd58>  // b.pmore
  43f310:	adrp	x2, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  43f314:	add	x2, x2, #0xc74
  43f318:	ldrb	w2, [x2, w0, uxtw]
  43f31c:	adr	x3, 43f328 <ferror@plt+0x3bd58>
  43f320:	add	x2, x3, w2, sxtb #2
  43f324:	br	x2
  43f328:	mov	w0, #0x6                   	// #6
  43f32c:	ret
  43f330:	cmp	w1, #0x26
  43f334:	mov	w0, #0x4                   	// #4
  43f338:	mov	w1, #0x6                   	// #6
  43f33c:	csel	w0, w0, w1, eq  // eq = none
  43f340:	b	43f32c <ferror@plt+0x3bd5c>
  43f344:	cmp	w1, #0x50
  43f348:	b.eq	43f32c <ferror@plt+0x3bd5c>  // b.none
  43f34c:	cmp	w1, #0x53
  43f350:	b.eq	43f36c <ferror@plt+0x3bd9c>  // b.none
  43f354:	cmp	w1, #0x51
  43f358:	cset	w0, ne  // ne = any
  43f35c:	add	w0, w0, #0x5
  43f360:	b	43f32c <ferror@plt+0x3bd5c>
  43f364:	mov	w0, #0x0                   	// #0
  43f368:	b	43f32c <ferror@plt+0x3bd5c>
  43f36c:	mov	w0, #0x1                   	// #1
  43f370:	b	43f32c <ferror@plt+0x3bd5c>
  43f374:	str	w1, [x0, #1408]
  43f378:	ret
  43f37c:	str	wzr, [x0, #1408]
  43f380:	ret
  43f384:	ldp	w2, w1, [x0]
  43f388:	ldr	x3, [x0, #16]
  43f38c:	add	w2, w2, w1
  43f390:	ldr	w1, [x0, #8]
  43f394:	add	w0, w1, w3
  43f398:	add	w0, w2, w0
  43f39c:	ret
  43f3a0:	ldr	x3, [x0]
  43f3a4:	ldr	x2, [x1]
  43f3a8:	cmp	x3, x2
  43f3ac:	b.ne	43f3d4 <ferror@plt+0x3be04>  // b.any
  43f3b0:	ldr	w3, [x0, #8]
  43f3b4:	ldr	w2, [x1, #8]
  43f3b8:	cmp	w3, w2
  43f3bc:	b.ne	43f3d4 <ferror@plt+0x3be04>  // b.any
  43f3c0:	ldr	x2, [x0, #16]
  43f3c4:	ldr	x0, [x1, #16]
  43f3c8:	cmp	x2, x0
  43f3cc:	cset	w0, eq  // eq = none
  43f3d0:	ret
  43f3d4:	mov	w0, #0x0                   	// #0
  43f3d8:	b	43f3d0 <ferror@plt+0x3be00>
  43f3dc:	ldr	x2, [x0]
  43f3e0:	ldr	x1, [x1]
  43f3e4:	add	x2, x2, x1
  43f3e8:	str	x2, [x0]
  43f3ec:	mov	w0, #0x1                   	// #1
  43f3f0:	ret
  43f3f4:	mov	x3, x0
  43f3f8:	tbz	w1, #31, 43f410 <ferror@plt+0x3be40>
  43f3fc:	and	w1, w1, #0x7fffffff
  43f400:	mov	w0, #0x18                  	// #24
  43f404:	umull	x1, w1, w0
  43f408:	ldr	x0, [x3, #104]
  43f40c:	ldr	w1, [x0, x1]
  43f410:	cmp	x3, #0x0
  43f414:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  43f418:	b.ls	43f4a0 <ferror@plt+0x3bed0>  // b.plast
  43f41c:	ldr	w2, [x3, #16]
  43f420:	mov	w4, #0x18                  	// #24
  43f424:	ldr	x6, [x3]
  43f428:	smull	x4, w2, w4
  43f42c:	add	x0, x6, x4
  43f430:	ldr	w4, [x6, x4]
  43f434:	cmp	w1, w4
  43f438:	b.cc	43f45c <ferror@plt+0x3be8c>  // b.lo, b.ul, b.last
  43f43c:	ldr	w4, [x3, #12]
  43f440:	add	w5, w2, #0x1
  43f444:	cmp	w5, w4
  43f448:	b.eq	43f458 <ferror@plt+0x3be88>  // b.none
  43f44c:	ldr	w5, [x0, #24]
  43f450:	cmp	w1, w5
  43f454:	b.cs	43f464 <ferror@plt+0x3be94>  // b.hs, b.nlast
  43f458:	ret
  43f45c:	mov	w4, w2
  43f460:	mov	w2, #0x0                   	// #0
  43f464:	mov	w0, #0x18                  	// #24
  43f468:	sub	w5, w4, w2
  43f46c:	cmp	w5, #0x1
  43f470:	b.ls	43f494 <ferror@plt+0x3bec4>  // b.plast
  43f474:	add	w5, w2, w4
  43f478:	lsr	w5, w5, #1
  43f47c:	umull	x7, w5, w0
  43f480:	ldr	w7, [x6, x7]
  43f484:	cmp	w1, w7
  43f488:	csel	w2, w2, w5, cc  // cc = lo, ul, last
  43f48c:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  43f490:	b	43f468 <ferror@plt+0x3be98>
  43f494:	smaddl	x0, w2, w0, x6
  43f498:	str	w2, [x3, #16]
  43f49c:	b	43f458 <ferror@plt+0x3be88>
  43f4a0:	mov	x0, #0x0                   	// #0
  43f4a4:	b	43f458 <ferror@plt+0x3be88>
  43f4a8:	stp	x29, x30, [sp, #-80]!
  43f4ac:	mov	x29, sp
  43f4b0:	stp	x19, x20, [sp, #16]
  43f4b4:	mov	x19, x0
  43f4b8:	mov	w0, #0x6fffffff            	// #1879048191
  43f4bc:	stp	x21, x22, [sp, #32]
  43f4c0:	cmp	w1, w0
  43f4c4:	mov	w21, w1
  43f4c8:	stp	x23, x24, [sp, #48]
  43f4cc:	stp	x25, x26, [sp, #64]
  43f4d0:	b.ls	43f59c <ferror@plt+0x3bfcc>  // b.plast
  43f4d4:	ldp	w0, w20, [x19, #32]
  43f4d8:	add	x25, x19, #0x24
  43f4dc:	cmp	w0, w20
  43f4e0:	b.ne	43f568 <ferror@plt+0x3bf98>  // b.any
  43f4e4:	add	x26, x19, #0x20
  43f4e8:	cmp	w0, #0x0
  43f4ec:	mov	w1, #0x80                  	// #128
  43f4f0:	csel	w0, w0, w1, ne  // ne = any
  43f4f4:	mov	w1, #0x6fffffff            	// #1879048191
  43f4f8:	cmp	w21, w1
  43f4fc:	lsl	w0, w0, #1
  43f500:	b.ls	43f5b4 <ferror@plt+0x3bfe4>  // b.plast
  43f504:	ldr	x24, [x19, #24]
  43f508:	mov	x22, #0x20                  	// #32
  43f50c:	mul	x0, x0, x22
  43f510:	ldr	x1, [x19, #80]
  43f514:	blr	x1
  43f518:	udiv	x23, x0, x22
  43f51c:	mov	x0, x24
  43f520:	ldr	x2, [x19, #72]
  43f524:	and	x1, x23, #0xffffffff
  43f528:	mul	x1, x1, x22
  43f52c:	blr	x2
  43f530:	mov	x24, x0
  43f534:	sub	w2, w23, w20
  43f538:	mov	w0, w20
  43f53c:	mov	w1, #0x0                   	// #0
  43f540:	mul	x2, x2, x22
  43f544:	madd	x0, x0, x22, x24
  43f548:	bl	403000 <memset@plt>
  43f54c:	mov	w0, #0x6fffffff            	// #1879048191
  43f550:	cmp	w21, w0
  43f554:	b.ls	43f5c0 <ferror@plt+0x3bff0>  // b.plast
  43f558:	str	x24, [x19, #24]
  43f55c:	str	w23, [x26]
  43f560:	cmp	w21, w0
  43f564:	b.ls	43f5c8 <ferror@plt+0x3bff8>  // b.plast
  43f568:	ubfiz	x0, x20, #5, #32
  43f56c:	ldr	x20, [x19, #24]
  43f570:	add	x0, x20, x0
  43f574:	ldr	w1, [x25]
  43f578:	ldp	x19, x20, [sp, #16]
  43f57c:	add	w1, w1, #0x1
  43f580:	ldp	x23, x24, [sp, #48]
  43f584:	str	w1, [x25]
  43f588:	ldp	x25, x26, [sp, #64]
  43f58c:	str	w21, [x0]
  43f590:	ldp	x21, x22, [sp, #32]
  43f594:	ldp	x29, x30, [sp], #80
  43f598:	ret
  43f59c:	ldp	w0, w20, [x19, #8]
  43f5a0:	add	x25, x19, #0xc
  43f5a4:	cmp	w0, w20
  43f5a8:	b.ne	43f5c8 <ferror@plt+0x3bff8>  // b.any
  43f5ac:	add	x26, x19, #0x8
  43f5b0:	b	43f4e8 <ferror@plt+0x3bf18>
  43f5b4:	mov	x22, #0x18                  	// #24
  43f5b8:	ldr	x24, [x19]
  43f5bc:	b	43f50c <ferror@plt+0x3bf3c>
  43f5c0:	str	x24, [x19]
  43f5c4:	b	43f55c <ferror@plt+0x3bf8c>
  43f5c8:	ldr	x0, [x19]
  43f5cc:	mov	w1, #0x18                  	// #24
  43f5d0:	umaddl	x0, w20, w1, x0
  43f5d4:	b	43f574 <ferror@plt+0x3bfa4>
  43f5d8:	ldr	x0, [x0, #88]
  43f5dc:	cbz	x0, 43f5e4 <ferror@plt+0x3c014>
  43f5e0:	b	45af58 <ferror@plt+0x57988>
  43f5e4:	ret
  43f5e8:	stp	x29, x30, [sp, #-48]!
  43f5ec:	mov	x3, #0x0                   	// #0
  43f5f0:	adrp	x2, 43f000 <ferror@plt+0x3ba30>
  43f5f4:	mov	x29, sp
  43f5f8:	stp	x19, x20, [sp, #16]
  43f5fc:	mov	x19, x0
  43f600:	add	x2, x2, #0x3a0
  43f604:	adrp	x1, 43f000 <ferror@plt+0x3ba30>
  43f608:	mov	x0, #0x64                  	// #100
  43f60c:	add	x1, x1, #0x384
  43f610:	mov	w20, #0x0                   	// #0
  43f614:	str	x21, [sp, #32]
  43f618:	bl	45af30 <ferror@plt+0x57960>
  43f61c:	mov	w21, #0x18                  	// #24
  43f620:	str	x0, [x19, #88]
  43f624:	ldr	w0, [x19, #96]
  43f628:	cmp	w0, w20
  43f62c:	b.ls	43f64c <ferror@plt+0x3c07c>  // b.plast
  43f630:	ldr	x1, [x19, #104]
  43f634:	mov	w2, #0x1                   	// #1
  43f638:	ldr	x0, [x19, #88]
  43f63c:	umaddl	x1, w20, w21, x1
  43f640:	add	w20, w20, #0x1
  43f644:	bl	45b390 <ferror@plt+0x57dc0>
  43f648:	b	43f624 <ferror@plt+0x3c054>
  43f64c:	ldp	x19, x20, [sp, #16]
  43f650:	ldr	x21, [sp, #32]
  43f654:	ldp	x29, x30, [sp], #48
  43f658:	ret
  43f65c:	ldr	x0, [x0, #104]
  43f660:	and	w1, w1, #0x7fffffff
  43f664:	mov	w2, #0x18                  	// #24
  43f668:	umaddl	x1, w1, w2, x0
  43f66c:	ldr	x0, [x1, #16]
  43f670:	ret
  43f674:	and	w1, w1, #0x7fffffff
  43f678:	mov	w2, #0x18                  	// #24
  43f67c:	ldr	x0, [x0, #104]
  43f680:	umull	x1, w1, w2
  43f684:	ldr	w0, [x0, x1]
  43f688:	ret
  43f68c:	stp	x29, x30, [sp, #-32]!
  43f690:	mov	x2, #0x88                  	// #136
  43f694:	mov	x29, sp
  43f698:	stp	x19, x20, [sp, #16]
  43f69c:	mov	x19, x0
  43f6a0:	mov	w20, w1
  43f6a4:	mov	w1, #0x0                   	// #0
  43f6a8:	bl	403000 <memset@plt>
  43f6ac:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0xc10>
  43f6b0:	add	x0, x0, #0x740
  43f6b4:	str	x0, [x19, #72]
  43f6b8:	mov	x0, #0x100000001           	// #4294967297
  43f6bc:	str	x0, [x19, #56]
  43f6c0:	mov	x3, #0x0                   	// #0
  43f6c4:	adrp	x2, 43f000 <ferror@plt+0x3ba30>
  43f6c8:	adrp	x1, 43f000 <ferror@plt+0x3ba30>
  43f6cc:	add	x2, x2, #0x3a0
  43f6d0:	add	x1, x1, #0x384
  43f6d4:	mov	x0, #0x64                  	// #100
  43f6d8:	bl	45af30 <ferror@plt+0x57960>
  43f6dc:	str	x0, [x19, #88]
  43f6e0:	str	w20, [x19, #112]
  43f6e4:	ldp	x19, x20, [sp, #16]
  43f6e8:	ldp	x29, x30, [sp], #32
  43f6ec:	ret
  43f6f0:	ldr	w1, [x1, #20]
  43f6f4:	b	43f3f4 <ferror@plt+0x3be24>
  43f6f8:	stp	x29, x30, [sp, #-48]!
  43f6fc:	mov	x29, sp
  43f700:	stp	x19, x20, [sp, #16]
  43f704:	mov	x20, x0
  43f708:	stp	x21, x22, [sp, #32]
  43f70c:	adrp	x21, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43f710:	bl	441a3c <ferror@plt+0x3e46c>
  43f714:	add	x21, x21, #0x21f
  43f718:	mov	x19, x0
  43f71c:	adrp	x22, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  43f720:	ldr	w0, [x19, #20]
  43f724:	cbz	w0, 43f74c <ferror@plt+0x3c17c>
  43f728:	ldr	x0, [x22, #1264]
  43f72c:	mov	x1, x21
  43f730:	ldr	x2, [x19, #8]
  43f734:	bl	403590 <fprintf@plt>
  43f738:	mov	x1, x19
  43f73c:	mov	x0, x20
  43f740:	bl	43f6f0 <ferror@plt+0x3c120>
  43f744:	mov	x19, x0
  43f748:	b	43f720 <ferror@plt+0x3c150>
  43f74c:	ldp	x19, x20, [sp, #16]
  43f750:	ldp	x21, x22, [sp, #32]
  43f754:	ldp	x29, x30, [sp], #48
  43f758:	ret
  43f75c:	stp	x29, x30, [sp, #-80]!
  43f760:	mov	x29, sp
  43f764:	stp	x19, x20, [sp, #16]
  43f768:	mov	x19, x0
  43f76c:	stp	x21, x22, [sp, #32]
  43f770:	mov	w22, w4
  43f774:	ldr	w21, [x0, #56]
  43f778:	stp	x23, x24, [sp, #48]
  43f77c:	mov	w0, #0x5fffffff            	// #1610612735
  43f780:	mov	w24, w1
  43f784:	str	x25, [sp, #64]
  43f788:	mov	w23, w2
  43f78c:	cmp	w21, w0
  43f790:	mov	x25, x3
  43f794:	b.hi	43f7fc <ferror@plt+0x3c22c>  // b.pmore
  43f798:	ldr	w1, [x19, #120]
  43f79c:	mov	w0, #0x1                   	// #1
  43f7a0:	lsl	w0, w0, w1
  43f7a4:	add	w21, w0, w21
  43f7a8:	cbz	w1, 43f7b4 <ferror@plt+0x3c1e4>
  43f7ac:	neg	w0, w0
  43f7b0:	and	w21, w21, w0
  43f7b4:	cmp	w24, #0x1
  43f7b8:	b.ne	43f804 <ferror@plt+0x3c234>  // b.any
  43f7bc:	mov	x0, x19
  43f7c0:	bl	441a3c <ferror@plt+0x3e46c>
  43f7c4:	ldr	w0, [x0, #20]
  43f7c8:	cbnz	w0, 43f804 <ferror@plt+0x3c234>
  43f7cc:	cbnz	x25, 43f804 <ferror@plt+0x3c234>
  43f7d0:	ldr	w0, [x19, #48]
  43f7d4:	mov	x20, #0x0                   	// #0
  43f7d8:	sub	w0, w0, #0x1
  43f7dc:	str	w0, [x19, #48]
  43f7e0:	mov	x0, x20
  43f7e4:	ldp	x19, x20, [sp, #16]
  43f7e8:	ldp	x21, x22, [sp, #32]
  43f7ec:	ldp	x23, x24, [sp, #48]
  43f7f0:	ldr	x25, [sp, #64]
  43f7f4:	ldp	x29, x30, [sp], #80
  43f7f8:	ret
  43f7fc:	add	w21, w21, #0x1
  43f800:	b	43f7b4 <ferror@plt+0x3c1e4>
  43f804:	mov	w0, #0x6fffffff            	// #1879048191
  43f808:	cmp	w21, w0
  43f80c:	csel	w21, w21, wzr, ls  // ls = plast
  43f810:	mov	x0, x19
  43f814:	mov	w1, w21
  43f818:	bl	43f4a8 <ferror@plt+0x3bed8>
  43f81c:	strb	w24, [x0, #4]
  43f820:	mov	x20, x0
  43f824:	cmp	w24, #0x3
  43f828:	cbz	x25, 43f844 <ferror@plt+0x3c274>
  43f82c:	ldrb	w0, [x25]
  43f830:	cbnz	w0, 43f844 <ferror@plt+0x3c274>
  43f834:	b.ne	43f90c <ferror@plt+0x3c33c>  // b.any
  43f838:	mov	w24, #0x2                   	// #2
  43f83c:	mov	x0, #0x0                   	// #0
  43f840:	b	43f884 <ferror@plt+0x3c2b4>
  43f844:	b.eq	43f838 <ferror@plt+0x3c268>  // b.none
  43f848:	cmp	w24, #0x1
  43f84c:	b.ne	43f83c <ferror@plt+0x3c26c>  // b.any
  43f850:	sub	x1, x20, #0x18
  43f854:	mov	x0, x19
  43f858:	bl	43f6f0 <ferror@plt+0x3c120>
  43f85c:	cbnz	x25, 43f884 <ferror@plt+0x3c2b4>
  43f860:	ldr	w4, [x0]
  43f864:	ldr	w22, [x0, #24]
  43f868:	ldrb	w23, [x0, #5]
  43f86c:	sub	w22, w22, w4
  43f870:	ldrb	w4, [x0, #6]
  43f874:	ldr	x25, [x0, #8]
  43f878:	lsr	w22, w22, w4
  43f87c:	ldr	w4, [x0, #16]
  43f880:	add	w22, w22, w4
  43f884:	strb	w23, [x20, #5]
  43f888:	str	w22, [x20, #16]
  43f88c:	str	x25, [x20, #8]
  43f890:	ldr	w2, [x19, #12]
  43f894:	sub	w2, w2, #0x1
  43f898:	str	w2, [x19, #16]
  43f89c:	strh	wzr, [x20, #6]
  43f8a0:	stp	w21, w21, [x19, #56]
  43f8a4:	str	wzr, [x19, #64]
  43f8a8:	cbnz	w24, 43f934 <ferror@plt+0x3c364>
  43f8ac:	ldr	w21, [x19, #48]
  43f8b0:	cbz	w21, 43f918 <ferror@plt+0x3c348>
  43f8b4:	ldr	w0, [x20]
  43f8b8:	mov	w1, #0xffffffff            	// #-1
  43f8bc:	ldur	w2, [x20, #-24]
  43f8c0:	ldurb	w3, [x20, #-18]
  43f8c4:	sub	w0, w0, #0x1
  43f8c8:	sub	w0, w0, w2
  43f8cc:	lsl	w1, w1, w3
  43f8d0:	and	w0, w0, w1
  43f8d4:	add	w0, w0, w2
  43f8d8:	str	w0, [x20, #20]
  43f8dc:	add	w21, w21, #0x1
  43f8e0:	ldrb	w0, [x19, #52]
  43f8e4:	str	w21, [x19, #48]
  43f8e8:	cbz	w0, 43f7e0 <ferror@plt+0x3c210>
  43f8ec:	adrp	x19, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  43f8f0:	ldr	x0, [x19, #1264]
  43f8f4:	subs	w21, w21, #0x1
  43f8f8:	b.eq	43f920 <ferror@plt+0x3c350>  // b.none
  43f8fc:	mov	x1, x0
  43f900:	mov	w0, #0x2e                  	// #46
  43f904:	bl	402eb0 <putc_unlocked@plt>
  43f908:	b	43f8f0 <ferror@plt+0x3c320>
  43f90c:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  43f910:	add	x25, x25, #0x24b
  43f914:	b	43f848 <ferror@plt+0x3c278>
  43f918:	mov	w0, #0x0                   	// #0
  43f91c:	b	43f8d8 <ferror@plt+0x3c308>
  43f920:	ldr	x2, [x20, #8]
  43f924:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  43f928:	add	x1, x1, #0x815
  43f92c:	bl	403590 <fprintf@plt>
  43f930:	b	43f7e0 <ferror@plt+0x3c210>
  43f934:	cmp	w24, #0x2
  43f938:	b.ne	43f948 <ferror@plt+0x3c378>  // b.any
  43f93c:	ldur	w0, [x20, #-4]
  43f940:	str	w0, [x20, #20]
  43f944:	b	43f7e0 <ferror@plt+0x3c210>
  43f948:	cmp	w24, #0x1
  43f94c:	b.ne	43f7e0 <ferror@plt+0x3c210>  // b.any
  43f950:	ldr	w1, [x19, #48]
  43f954:	sub	w1, w1, #0x1
  43f958:	str	w1, [x19, #48]
  43f95c:	ldr	w0, [x0, #20]
  43f960:	b	43f940 <ferror@plt+0x3c370>
  43f964:	ldr	x0, [x0, #24]
  43f968:	cmp	x0, #0x0
  43f96c:	cset	w0, ne  // ne = any
  43f970:	ret
  43f974:	stp	x29, x30, [sp, #-64]!
  43f978:	mov	x29, sp
  43f97c:	stp	x19, x20, [sp, #16]
  43f980:	mov	w20, w3
  43f984:	stp	x21, x22, [sp, #32]
  43f988:	mov	x21, x0
  43f98c:	mov	w22, w2
  43f990:	str	x23, [sp, #48]
  43f994:	mov	x23, x1
  43f998:	bl	42ced0 <ferror@plt+0x29900>
  43f99c:	sub	w1, w0, w20
  43f9a0:	mov	w0, #0x6fffffff            	// #1879048191
  43f9a4:	cmp	w1, w0
  43f9a8:	b.ls	43fa0c <ferror@plt+0x3c43c>  // b.plast
  43f9ac:	mov	x0, x21
  43f9b0:	bl	43f4a8 <ferror@plt+0x3bed8>
  43f9b4:	mov	x19, x0
  43f9b8:	mov	x0, #0x0                   	// #0
  43f9bc:	ldr	x2, [x21, #72]
  43f9c0:	str	w20, [x19, #4]
  43f9c4:	ubfiz	x20, x20, #3, #31
  43f9c8:	str	x23, [x19, #8]
  43f9cc:	mov	x1, x20
  43f9d0:	blr	x2
  43f9d4:	str	x0, [x19, #16]
  43f9d8:	str	w22, [x19, #24]
  43f9dc:	mov	x2, x20
  43f9e0:	mov	w1, #0x0                   	// #0
  43f9e4:	bl	403000 <memset@plt>
  43f9e8:	ldr	w0, [x21, #36]
  43f9ec:	sub	w0, w0, #0x1
  43f9f0:	str	w0, [x21, #40]
  43f9f4:	mov	x0, x19
  43f9f8:	ldp	x19, x20, [sp, #16]
  43f9fc:	ldp	x21, x22, [sp, #32]
  43fa00:	ldr	x23, [sp, #48]
  43fa04:	ldp	x29, x30, [sp], #64
  43fa08:	ret
  43fa0c:	mov	x19, #0x0                   	// #0
  43fa10:	b	43f9f4 <ferror@plt+0x3c424>
  43fa14:	ldr	x5, [x0, #16]
  43fa18:	lsl	w4, w1, #1
  43fa1c:	ubfiz	x6, x1, #3, #31
  43fa20:	add	w4, w4, #0x1
  43fa24:	str	w2, [x5, x6]
  43fa28:	str	w3, [x5, x4, lsl #2]
  43fa2c:	ldr	w0, [x0]
  43fa30:	add	w0, w1, w0
  43fa34:	ret
  43fa38:	stp	x29, x30, [sp, #-96]!
  43fa3c:	mov	x29, sp
  43fa40:	stp	x19, x20, [sp, #16]
  43fa44:	mov	x20, x0
  43fa48:	stp	x21, x22, [sp, #32]
  43fa4c:	mov	w22, w1
  43fa50:	stp	x23, x24, [sp, #48]
  43fa54:	stp	x25, x26, [sp, #64]
  43fa58:	mov	w25, w2
  43fa5c:	str	x27, [sp, #80]
  43fa60:	bl	441a3c <ferror@plt+0x3e46c>
  43fa64:	mov	x19, x0
  43fa68:	ldrb	w0, [x0, #6]
  43fa6c:	ldp	w1, w4, [x20, #56]
  43fa70:	ldr	w5, [x19]
  43fa74:	ldr	w24, [x19, #16]
  43fa78:	sub	w5, w4, w5
  43fa7c:	ldrb	w27, [x19, #7]
  43fa80:	lsr	w5, w5, w0
  43fa84:	add	w5, w5, w24
  43fa88:	subs	w3, w22, w5
  43fa8c:	b.mi	43fb48 <ferror@plt+0x3c578>  // b.first
  43fa90:	cmp	w3, #0xa
  43fa94:	b.le	43faa4 <ferror@plt+0x3c4d4>
  43fa98:	mul	w2, w3, w0
  43fa9c:	cmp	w2, #0x3e8
  43faa0:	b.gt	43fb48 <ferror@plt+0x3c578>
  43faa4:	sub	w6, w0, w27
  43faa8:	mov	w2, #0x1                   	// #1
  43faac:	lsl	w2, w2, w6
  43fab0:	cmp	w2, w25
  43fab4:	b.ls	43fb48 <ferror@plt+0x3c578>  // b.plast
  43fab8:	cmp	w25, #0x50
  43fabc:	ccmp	w6, #0x9, #0x4, ls  // ls = plast
  43fac0:	b.gt	43fb48 <ferror@plt+0x3c578>
  43fac4:	mov	w2, #0x50000000            	// #1342177280
  43fac8:	cmp	w1, w2
  43facc:	b.ls	43fb14 <ferror@plt+0x3c544>  // b.plast
  43fad0:	cbnz	w27, 43fb48 <ferror@plt+0x3c578>
  43fad4:	mov	w2, #0x60000000            	// #1610612736
  43fad8:	ldr	w6, [x20, #64]
  43fadc:	cmp	w1, w2
  43fae0:	b.ls	43fb14 <ferror@plt+0x3c544>  // b.plast
  43fae4:	mov	w2, #0x6fffffff            	// #1879048191
  43fae8:	cmp	w1, w2
  43faec:	cbnz	w6, 43fc24 <ferror@plt+0x3c654>
  43faf0:	b.ls	43fb14 <ferror@plt+0x3c544>  // b.plast
  43faf4:	mov	w0, #0x0                   	// #0
  43faf8:	ldp	x19, x20, [sp, #16]
  43fafc:	ldp	x21, x22, [sp, #32]
  43fb00:	ldp	x23, x24, [sp, #48]
  43fb04:	ldp	x25, x26, [sp, #64]
  43fb08:	ldr	x27, [sp, #80]
  43fb0c:	ldp	x29, x30, [sp], #96
  43fb10:	ret
  43fb14:	ldr	w26, [x20, #64]
  43fb18:	lsl	w3, w3, w0
  43fb1c:	add	w0, w3, w4
  43fb20:	mov	w1, #0x6fffffff            	// #1879048191
  43fb24:	cmp	w0, w1
  43fb28:	b.hi	43faf4 <ferror@plt+0x3c524>  // b.pmore
  43fb2c:	ldr	w1, [x20, #56]
  43fb30:	str	w0, [x20, #60]
  43fb34:	cmp	w1, w0
  43fb38:	b.cs	43fb40 <ferror@plt+0x3c570>  // b.hs, b.nlast
  43fb3c:	str	w0, [x20, #56]
  43fb40:	str	w26, [x20, #64]
  43fb44:	b	43faf8 <ferror@plt+0x3c528>
  43fb48:	cmp	w25, #0x1, lsl #12
  43fb4c:	mov	w0, #0x60000000            	// #1610612736
  43fb50:	ccmp	w1, w0, #0x2, ls  // ls = plast
  43fb54:	b.ls	43fbe8 <ferror@plt+0x3c618>  // b.plast
  43fb58:	mov	w0, #0x6fffffff            	// #1879048191
  43fb5c:	cmp	w1, w0
  43fb60:	b.hi	43faf4 <ferror@plt+0x3c524>  // b.pmore
  43fb64:	mov	w23, #0x0                   	// #0
  43fb68:	mov	w21, #0x0                   	// #0
  43fb6c:	mov	w26, #0x0                   	// #0
  43fb70:	tbnz	w3, #31, 43fbac <ferror@plt+0x3c5dc>
  43fb74:	cmp	w24, w5
  43fb78:	b.ne	43fbac <ferror@plt+0x3c5dc>  // b.any
  43fb7c:	mov	x0, x19
  43fb80:	bl	441a54 <ferror@plt+0x3e484>
  43fb84:	sub	w1, w21, w23
  43fb88:	lsr	w0, w0, w1
  43fb8c:	cbnz	w0, 43fbac <ferror@plt+0x3c5dc>
  43fb90:	sub	w24, w22, w24
  43fb94:	mov	w0, #0x20                  	// #32
  43fb98:	sub	w0, w0, w21
  43fb9c:	lsr	x24, x24, x0
  43fba0:	cbnz	x24, 43fbac <ferror@plt+0x3c5dc>
  43fba4:	cmp	w27, w23
  43fba8:	b.le	43fbc8 <ferror@plt+0x3c5f8>
  43fbac:	ldrb	w2, [x19, #5]
  43fbb0:	mov	w4, w22
  43fbb4:	ldr	x3, [x19, #8]
  43fbb8:	mov	x0, x20
  43fbbc:	mov	w1, #0x2                   	// #2
  43fbc0:	bl	43f75c <ferror@plt+0x3c18c>
  43fbc4:	mov	x19, x0
  43fbc8:	ldr	w2, [x19, #16]
  43fbcc:	ldr	w0, [x19]
  43fbd0:	sub	w2, w22, w2
  43fbd4:	strb	w21, [x19, #6]
  43fbd8:	strb	w23, [x19, #7]
  43fbdc:	lsl	w2, w2, w21
  43fbe0:	add	w0, w2, w0
  43fbe4:	b	43fb20 <ferror@plt+0x3c550>
  43fbe8:	mov	w0, #0x50000000            	// #1342177280
  43fbec:	cmp	w1, w0
  43fbf0:	b.hi	43fc14 <ferror@plt+0x3c644>  // b.pmore
  43fbf4:	ldr	w23, [x20, #120]
  43fbf8:	mov	w21, #0x7                   	// #7
  43fbfc:	mov	w0, #0x1                   	// #1
  43fc00:	lsl	w26, w0, w21
  43fc04:	cmp	w26, w25
  43fc08:	b.hi	43fc1c <ferror@plt+0x3c64c>  // b.pmore
  43fc0c:	add	w21, w21, #0x1
  43fc10:	b	43fc00 <ferror@plt+0x3c630>
  43fc14:	mov	w23, #0x0                   	// #0
  43fc18:	b	43fbf8 <ferror@plt+0x3c628>
  43fc1c:	add	w21, w21, w23
  43fc20:	b	43fb70 <ferror@plt+0x3c5a0>
  43fc24:	b.hi	43faf4 <ferror@plt+0x3c524>  // b.pmore
  43fc28:	mov	w23, #0x0                   	// #0
  43fc2c:	mov	w21, #0x0                   	// #0
  43fc30:	mov	w26, #0x0                   	// #0
  43fc34:	b	43fb74 <ferror@plt+0x3c5a4>
  43fc38:	stp	x29, x30, [sp, #-48]!
  43fc3c:	mov	x29, sp
  43fc40:	stp	x19, x20, [sp, #16]
  43fc44:	mov	x20, x0
  43fc48:	ldr	w19, [x0, #60]
  43fc4c:	str	x21, [sp, #32]
  43fc50:	mov	w21, w1
  43fc54:	ldr	w1, [x0, #64]
  43fc58:	cmp	w1, w21
  43fc5c:	b.hi	43fcac <ferror@plt+0x3c6dc>  // b.pmore
  43fc60:	cmp	w21, #0x1, lsl #12
  43fc64:	mov	w1, #0x60000000            	// #1610612736
  43fc68:	ccmp	w19, w1, #0x2, ls  // ls = plast
  43fc6c:	b.hi	43fcd0 <ferror@plt+0x3c700>  // b.pmore
  43fc70:	bl	441a3c <ferror@plt+0x3e46c>
  43fc74:	ldr	w1, [x0]
  43fc78:	add	w2, w21, #0x32
  43fc7c:	sub	w19, w19, w1
  43fc80:	ldrb	w1, [x0, #6]
  43fc84:	lsr	w19, w19, w1
  43fc88:	ldr	w1, [x0, #16]
  43fc8c:	mov	x0, x20
  43fc90:	add	w1, w19, w1
  43fc94:	bl	43fa38 <ferror@plt+0x3c468>
  43fc98:	mov	w19, w0
  43fc9c:	mov	x0, x20
  43fca0:	bl	441a3c <ferror@plt+0x3e46c>
  43fca4:	ldrb	w0, [x0, #6]
  43fca8:	cbz	w0, 43fcd0 <ferror@plt+0x3c700>
  43fcac:	mov	x0, x20
  43fcb0:	bl	441a3c <ferror@plt+0x3e46c>
  43fcb4:	ldrb	w1, [x0, #7]
  43fcb8:	ldr	w0, [x20, #56]
  43fcbc:	lsl	w21, w21, w1
  43fcc0:	add	w19, w19, w21
  43fcc4:	cmp	w0, w19
  43fcc8:	b.hi	43fcd0 <ferror@plt+0x3c700>  // b.pmore
  43fccc:	str	w19, [x20, #56]
  43fcd0:	mov	w0, w19
  43fcd4:	ldp	x19, x20, [sp, #16]
  43fcd8:	ldr	x21, [sp, #32]
  43fcdc:	ldp	x29, x30, [sp], #48
  43fce0:	ret
  43fce4:	stp	x29, x30, [sp, #-32]!
  43fce8:	mov	x29, sp
  43fcec:	stp	x19, x20, [sp, #16]
  43fcf0:	mov	x20, x0
  43fcf4:	ldr	w19, [x1, #16]
  43fcf8:	ldrb	w0, [x1, #6]
  43fcfc:	sub	w19, w2, w19
  43fd00:	ldr	w2, [x1]
  43fd04:	lsl	w19, w19, w0
  43fd08:	add	w19, w19, w2
  43fd0c:	mov	w2, #0x60000000            	// #1610612736
  43fd10:	cmp	w19, w2
  43fd14:	b.hi	43fd34 <ferror@plt+0x3c764>  // b.pmore
  43fd18:	mov	w2, #0x1                   	// #1
  43fd1c:	lsl	w2, w2, w0
  43fd20:	ldrb	w0, [x1, #7]
  43fd24:	sub	w2, w2, #0x1
  43fd28:	and	w3, w2, w3
  43fd2c:	lsl	w3, w3, w0
  43fd30:	add	w19, w19, w3
  43fd34:	mov	x0, x20
  43fd38:	bl	42ced0 <ferror@plt+0x29900>
  43fd3c:	cmp	w19, w0
  43fd40:	b.cc	43fd48 <ferror@plt+0x3c778>  // b.lo, b.ul, b.last
  43fd44:	sub	w19, w0, #0x1
  43fd48:	ldr	w0, [x20, #56]
  43fd4c:	cmp	w0, w19
  43fd50:	b.cs	43fd58 <ferror@plt+0x3c788>  // b.hs, b.nlast
  43fd54:	str	w19, [x20, #56]
  43fd58:	mov	w0, w19
  43fd5c:	ldp	x19, x20, [sp, #16]
  43fd60:	ldp	x29, x30, [sp], #32
  43fd64:	ret
  43fd68:	cbz	x0, 43fd80 <ferror@plt+0x3c7b0>
  43fd6c:	ldr	w1, [x0]
  43fd70:	mov	w0, #0x6fffffff            	// #1879048191
  43fd74:	cmp	w1, w0
  43fd78:	cset	w0, hi  // hi = pmore
  43fd7c:	ret
  43fd80:	mov	w0, #0x0                   	// #0
  43fd84:	b	43fd7c <ferror@plt+0x3c7ac>
  43fd88:	mov	x3, x1
  43fd8c:	mov	w1, w2
  43fd90:	tbz	w2, #31, 43fdbc <ferror@plt+0x3c7ec>
  43fd94:	stp	x29, x30, [sp, #-16]!
  43fd98:	mov	x29, sp
  43fd9c:	bl	43f674 <ferror@plt+0x3c0a4>
  43fda0:	ldr	w2, [x3]
  43fda4:	ldp	x29, x30, [sp], #16
  43fda8:	sub	w2, w0, w2
  43fdac:	ldr	x0, [x3, #16]
  43fdb0:	ubfiz	x2, x2, #3, #31
  43fdb4:	ldr	w0, [x0, x2]
  43fdb8:	ret
  43fdbc:	ldr	w2, [x3]
  43fdc0:	ldr	x0, [x3, #16]
  43fdc4:	sub	w2, w1, w2
  43fdc8:	ubfiz	x2, x2, #3, #31
  43fdcc:	ldr	w0, [x0, x2]
  43fdd0:	ret
  43fdd4:	ldr	x0, [x0, #8]
  43fdd8:	ldr	x0, [x0]
  43fddc:	ret
  43fde0:	tbz	w1, #31, 43fdf8 <ferror@plt+0x3c828>
  43fde4:	and	w1, w1, #0x7fffffff
  43fde8:	mov	w2, #0x18                  	// #24
  43fdec:	ldr	x0, [x0, #104]
  43fdf0:	umull	x1, w1, w2
  43fdf4:	ldr	w1, [x0, x1]
  43fdf8:	mov	w0, #0x90000000            	// #-1879048192
  43fdfc:	add	w1, w1, w0
  43fe00:	mov	w0, #0xfffffff             	// #268435455
  43fe04:	cmp	w1, w0
  43fe08:	cset	w0, ls  // ls = plast
  43fe0c:	ret
  43fe10:	stp	x29, x30, [sp, #-16]!
  43fe14:	mov	x4, x0
  43fe18:	mov	w3, w1
  43fe1c:	mov	x29, sp
  43fe20:	tbz	w1, #31, 43fe38 <ferror@plt+0x3c868>
  43fe24:	and	w3, w1, #0x7fffffff
  43fe28:	mov	w1, #0x18                  	// #24
  43fe2c:	ldr	x0, [x0, #104]
  43fe30:	umull	x3, w3, w1
  43fe34:	ldr	w3, [x0, x3]
  43fe38:	mov	w1, w3
  43fe3c:	mov	x0, x4
  43fe40:	bl	43fde0 <ferror@plt+0x3c810>
  43fe44:	tst	w0, #0xff
  43fe48:	b.eq	43feec <ferror@plt+0x3c91c>  // b.none
  43fe4c:	tbz	w3, #31, 43fec4 <ferror@plt+0x3c8f4>
  43fe50:	and	w3, w3, #0x7fffffff
  43fe54:	mov	w1, #0x18                  	// #24
  43fe58:	ldr	x0, [x4, #104]
  43fe5c:	umull	x3, w3, w1
  43fe60:	ldr	w3, [x0, x3]
  43fe64:	ldp	w1, w2, [x4, #36]
  43fe68:	ldr	x5, [x4, #24]
  43fe6c:	sbfiz	x6, x2, #5, #32
  43fe70:	add	x0, x5, x6
  43fe74:	ldr	w6, [x5, x6]
  43fe78:	cmp	w6, w3
  43fe7c:	b.hi	43fe98 <ferror@plt+0x3c8c8>  // b.pmore
  43fe80:	cbz	w2, 43fee4 <ferror@plt+0x3c914>
  43fe84:	ldur	w1, [x0, #-32]
  43fe88:	cmp	w1, w3
  43fe8c:	b.hi	43fee4 <ferror@plt+0x3c914>  // b.pmore
  43fe90:	sub	w1, w2, #0x1
  43fe94:	mov	w2, #0x0                   	// #0
  43fe98:	cmp	w1, w2
  43fe9c:	b.ls	43fed8 <ferror@plt+0x3c908>  // b.plast
  43fea0:	add	w0, w1, w2
  43fea4:	lsr	w6, w0, #1
  43fea8:	lsr	w0, w0, #1
  43feac:	lsl	x0, x0, #5
  43feb0:	ldr	w0, [x5, x0]
  43feb4:	cmp	w0, w3
  43feb8:	b.ls	43fed0 <ferror@plt+0x3c900>  // b.plast
  43febc:	add	w2, w6, #0x1
  43fec0:	b	43fe98 <ferror@plt+0x3c8c8>
  43fec4:	cbnz	x4, 43fe64 <ferror@plt+0x3c894>
  43fec8:	mov	x0, #0x0                   	// #0
  43fecc:	b	43fee4 <ferror@plt+0x3c914>
  43fed0:	mov	w1, w6
  43fed4:	b	43fe98 <ferror@plt+0x3c8c8>
  43fed8:	str	w1, [x4, #40]
  43fedc:	sbfiz	x1, x1, #5, #32
  43fee0:	add	x0, x5, x1
  43fee4:	ldp	x29, x30, [sp], #16
  43fee8:	ret
  43feec:	ldp	x29, x30, [sp], #16
  43fef0:	mov	w1, w3
  43fef4:	mov	x0, x4
  43fef8:	b	43f3f4 <ferror@plt+0x3be24>
  43fefc:	stp	x29, x30, [sp, #-96]!
  43ff00:	mov	x29, sp
  43ff04:	stp	x19, x20, [sp, #16]
  43ff08:	mov	x19, x0
  43ff0c:	mov	w20, w1
  43ff10:	stp	x21, x22, [sp, #32]
  43ff14:	mov	x22, x2
  43ff18:	str	x23, [sp, #48]
  43ff1c:	mov	x23, x3
  43ff20:	tbz	w1, #31, 43ff38 <ferror@plt+0x3c968>
  43ff24:	and	w20, w1, #0x7fffffff
  43ff28:	mov	w1, #0x18                  	// #24
  43ff2c:	ldr	x0, [x0, #104]
  43ff30:	umull	x20, w20, w1
  43ff34:	ldr	w20, [x0, x20]
  43ff38:	cmp	w20, #0x0
  43ff3c:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  43ff40:	b.eq	4400e4 <ferror@plt+0x3cb14>  // b.none
  43ff44:	lsr	x21, x22, #32
  43ff48:	mov	w0, w21
  43ff4c:	cbnz	x23, 43fff0 <ferror@plt+0x3ca20>
  43ff50:	cmp	w20, w22
  43ff54:	b.ne	43ffe4 <ferror@plt+0x3ca14>  // b.any
  43ff58:	cmp	w21, w20
  43ff5c:	b.cc	43ffe4 <ferror@plt+0x3ca14>  // b.lo, b.ul, b.last
  43ff60:	cmp	w20, #0x1
  43ff64:	b.ls	43ffc8 <ferror@plt+0x3c9f8>  // b.plast
  43ff68:	mov	w0, #0x4fffffff            	// #1342177279
  43ff6c:	cmp	w20, w0
  43ff70:	b.hi	4400ec <ferror@plt+0x3cb1c>  // b.pmore
  43ff74:	mov	x0, x19
  43ff78:	bl	42ced0 <ferror@plt+0x29900>
  43ff7c:	cmp	w20, w0
  43ff80:	b.cs	4400ec <ferror@plt+0x3cb1c>  // b.hs, b.nlast
  43ff84:	cmp	w21, w0
  43ff88:	b.cs	4400ec <ferror@plt+0x3cb1c>  // b.hs, b.nlast
  43ff8c:	mov	w1, w20
  43ff90:	mov	x0, x19
  43ff94:	bl	43fe10 <ferror@plt+0x3c840>
  43ff98:	ldrb	w2, [x0, #7]
  43ff9c:	sub	w0, w21, w20
  43ffa0:	mov	w1, #0x1                   	// #1
  43ffa4:	lsr	w0, w0, w2
  43ffa8:	lsl	w1, w1, w2
  43ffac:	cmp	w1, w0
  43ffb0:	b.ls	4400ec <ferror@plt+0x3cb1c>  // b.plast
  43ffb4:	ldr	w1, [x19, #124]
  43ffb8:	orr	w0, w20, w0
  43ffbc:	add	w1, w1, #0x1
  43ffc0:	str	w1, [x19, #124]
  43ffc4:	b	43ffd0 <ferror@plt+0x3ca00>
  43ffc8:	cmp	w21, w20
  43ffcc:	b.ne	43ffe4 <ferror@plt+0x3ca14>  // b.any
  43ffd0:	ldp	x19, x20, [sp, #16]
  43ffd4:	ldp	x21, x22, [sp, #32]
  43ffd8:	ldr	x23, [sp, #48]
  43ffdc:	ldp	x29, x30, [sp], #96
  43ffe0:	ret
  43ffe4:	ldr	w0, [x19, #128]
  43ffe8:	add	w0, w0, #0x1
  43ffec:	str	w0, [x19, #128]
  43fff0:	ldr	x0, [x19, #88]
  43fff4:	add	x1, sp, #0x48
  43fff8:	mov	w2, #0x1                   	// #1
  43fffc:	stp	w20, w22, [sp, #72]
  440000:	str	w21, [sp, #80]
  440004:	str	x23, [sp, #88]
  440008:	bl	45b390 <ferror@plt+0x57dc0>
  44000c:	mov	x20, x0
  440010:	ldr	x0, [x0]
  440014:	cbnz	x0, 4400c0 <ferror@plt+0x3caf0>
  440018:	ldp	w0, w1, [x19, #96]
  44001c:	cmp	w0, w1
  440020:	b.cc	440088 <ferror@plt+0x3cab8>  // b.lo, b.ul, b.last
  440024:	ldr	x2, [x19, #72]
  440028:	cbnz	x2, 440034 <ferror@plt+0x3ca64>
  44002c:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0xc10>
  440030:	add	x2, x2, #0x740
  440034:	cmp	w1, #0x0
  440038:	lsl	w0, w1, #1
  44003c:	mov	w1, #0x80                  	// #128
  440040:	csel	w0, w0, w1, ne  // ne = any
  440044:	mov	w1, #0x18                  	// #24
  440048:	str	w0, [x19, #100]
  44004c:	ldr	x21, [x19, #104]
  440050:	umull	x1, w0, w1
  440054:	mov	x0, x21
  440058:	blr	x2
  44005c:	sub	x1, x0, x21
  440060:	str	x1, [sp, #64]
  440064:	str	x0, [x19, #104]
  440068:	ldr	w0, [x19, #100]
  44006c:	cmp	w0, #0x80
  440070:	b.ls	440088 <ferror@plt+0x3cab8>  // b.plast
  440074:	ldr	x0, [x19, #88]
  440078:	adrp	x1, 43f000 <ferror@plt+0x3ba30>
  44007c:	add	x2, sp, #0x40
  440080:	add	x1, x1, #0x3dc
  440084:	bl	45b52c <ferror@plt+0x57f5c>
  440088:	ldr	w2, [x19, #96]
  44008c:	mov	w0, #0x18                  	// #24
  440090:	umull	x1, w2, w0
  440094:	add	w2, w2, #0x1
  440098:	ldr	x0, [x19, #104]
  44009c:	add	x0, x0, x1
  4400a0:	str	x0, [x20]
  4400a4:	str	w2, [x19, #96]
  4400a8:	ldr	x0, [x19, #104]
  4400ac:	ldp	x2, x3, [sp, #72]
  4400b0:	add	x0, x0, x1
  4400b4:	stp	x2, x3, [x0]
  4400b8:	ldr	x1, [sp, #88]
  4400bc:	str	x1, [x0, #16]
  4400c0:	ldr	x0, [x20]
  4400c4:	ldr	x1, [x19, #104]
  4400c8:	sub	x0, x0, x1
  4400cc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4400d0:	movk	x1, #0xaaab
  4400d4:	asr	x0, x0, #3
  4400d8:	mul	x0, x0, x1
  4400dc:	orr	w0, w0, #0x80000000
  4400e0:	b	43ffd0 <ferror@plt+0x3ca00>
  4400e4:	mov	w0, #0x0                   	// #0
  4400e8:	b	43ffd0 <ferror@plt+0x3ca00>
  4400ec:	cmp	w21, w22
  4400f0:	b.ne	43ffe4 <ferror@plt+0x3ca14>  // b.any
  4400f4:	mov	w0, w21
  4400f8:	b	43ffd0 <ferror@plt+0x3ca00>
  4400fc:	stp	x29, x30, [sp, #-32]!
  440100:	mov	x29, sp
  440104:	stp	x19, x20, [sp, #16]
  440108:	mov	x20, x0
  44010c:	mov	w19, w1
  440110:	tbz	w1, #31, 440134 <ferror@plt+0x3cb64>
  440114:	and	w19, w1, #0x7fffffff
  440118:	mov	w0, #0x18                  	// #24
  44011c:	ldr	x1, [x20, #104]
  440120:	umaddl	x19, w19, w0, x1
  440124:	ldur	x0, [x19, #4]
  440128:	ldp	x19, x20, [sp, #16]
  44012c:	ldp	x29, x30, [sp], #32
  440130:	ret
  440134:	cmp	w1, #0x1
  440138:	b.ls	440190 <ferror@plt+0x3cbc0>  // b.plast
  44013c:	bl	42ced0 <ferror@plt+0x29900>
  440140:	cmp	w0, w19
  440144:	b.ls	440190 <ferror@plt+0x3cbc0>  // b.plast
  440148:	mov	w0, #0x50000000            	// #1342177280
  44014c:	cmp	w19, w0
  440150:	b.hi	440190 <ferror@plt+0x3cbc0>  // b.pmore
  440154:	mov	w1, w19
  440158:	mov	x0, x20
  44015c:	bl	43fe10 <ferror@plt+0x3c840>
  440160:	ldrb	w3, [x0, #7]
  440164:	mov	w1, #0x1                   	// #1
  440168:	mov	x0, #0x0                   	// #0
  44016c:	lsl	w1, w1, w3
  440170:	sub	w1, w1, #0x1
  440174:	and	w2, w1, w19
  440178:	bic	w19, w19, w1
  44017c:	lsl	w2, w2, w3
  440180:	bfxil	x0, x19, #0, #32
  440184:	add	w19, w2, w19
  440188:	bfi	x0, x19, #32, #32
  44018c:	b	440128 <ferror@plt+0x3cb58>
  440190:	mov	x0, #0x0                   	// #0
  440194:	bfxil	x0, x19, #0, #32
  440198:	b	440188 <ferror@plt+0x3cbb8>
  44019c:	tbnz	w1, #31, 4401d0 <ferror@plt+0x3cc00>
  4401a0:	mov	w8, w1
  4401a4:	stp	x29, x30, [sp, #-16]!
  4401a8:	mov	x29, sp
  4401ac:	bl	43fe10 <ferror@plt+0x3c840>
  4401b0:	cbz	x0, 4401d8 <ferror@plt+0x3cc08>
  4401b4:	ldrb	w1, [x0, #7]
  4401b8:	mov	w0, #0xffffffff            	// #-1
  4401bc:	lsl	w0, w0, w1
  4401c0:	bics	wzr, w8, w0
  4401c4:	cset	w0, eq  // eq = none
  4401c8:	ldp	x29, x30, [sp], #16
  4401cc:	ret
  4401d0:	mov	w0, #0x0                   	// #0
  4401d4:	ret
  4401d8:	mov	w0, #0x1                   	// #1
  4401dc:	b	4401c8 <ferror@plt+0x3cbf8>
  4401e0:	stp	x29, x30, [sp, #-32]!
  4401e4:	mov	x29, sp
  4401e8:	stp	x19, x20, [sp, #16]
  4401ec:	mov	x20, x0
  4401f0:	mov	w19, w1
  4401f4:	tbz	w1, #31, 44020c <ferror@plt+0x3cc3c>
  4401f8:	and	w19, w1, #0x7fffffff
  4401fc:	mov	w1, #0x18                  	// #24
  440200:	ldr	x0, [x0, #104]
  440204:	umull	x19, w19, w1
  440208:	ldr	w19, [x0, x19]
  44020c:	mov	x0, x20
  440210:	bl	42ced0 <ferror@plt+0x29900>
  440214:	cmp	w0, w19
  440218:	b.ls	440240 <ferror@plt+0x3cc70>  // b.plast
  44021c:	cmp	w19, #0x1
  440220:	b.ls	440240 <ferror@plt+0x3cc70>  // b.plast
  440224:	mov	w1, w19
  440228:	mov	x0, x20
  44022c:	bl	43fe10 <ferror@plt+0x3c840>
  440230:	ldrb	w1, [x0, #7]
  440234:	mov	w0, #0xffffffff            	// #-1
  440238:	lsl	w0, w0, w1
  44023c:	and	w19, w19, w0
  440240:	mov	w0, w19
  440244:	ldp	x19, x20, [sp, #16]
  440248:	ldp	x29, x30, [sp], #32
  44024c:	ret
  440250:	stp	x29, x30, [sp, #-16]!
  440254:	mov	x10, x0
  440258:	mov	x9, x2
  44025c:	mov	x29, sp
  440260:	tbz	w1, #31, 440278 <ferror@plt+0x3cca8>
  440264:	and	w1, w1, #0x7fffffff
  440268:	mov	w0, #0x18                  	// #24
  44026c:	umull	x1, w1, w0
  440270:	ldr	x0, [x10, #104]
  440274:	ldr	w1, [x0, x1]
  440278:	mov	w8, w1
  44027c:	mov	w1, w8
  440280:	mov	x0, x10
  440284:	bl	43fe10 <ferror@plt+0x3c840>
  440288:	mov	x2, x0
  44028c:	bl	43fd68 <ferror@plt+0x3c798>
  440290:	tst	w0, #0xff
  440294:	b.eq	4402a0 <ferror@plt+0x3ccd0>  // b.none
  440298:	ldr	w8, [x2, #24]
  44029c:	b	44027c <ferror@plt+0x3ccac>
  4402a0:	cbz	x9, 4402a8 <ferror@plt+0x3ccd8>
  4402a4:	str	x2, [x9]
  4402a8:	mov	w0, w8
  4402ac:	ldp	x29, x30, [sp], #16
  4402b0:	ret
  4402b4:	stp	x29, x30, [sp, #-32]!
  4402b8:	mov	x29, sp
  4402bc:	str	xzr, [sp, #24]
  4402c0:	tbz	w1, #31, 4402d8 <ferror@plt+0x3cd08>
  4402c4:	and	w1, w1, #0x7fffffff
  4402c8:	mov	w2, #0x18                  	// #24
  4402cc:	umull	x1, w1, w2
  4402d0:	ldr	x2, [x0, #104]
  4402d4:	ldr	w1, [x2, x1]
  4402d8:	cmp	w1, #0x1
  4402dc:	b.ls	44030c <ferror@plt+0x3cd3c>  // b.plast
  4402e0:	add	x2, sp, #0x18
  4402e4:	bl	440250 <ferror@plt+0x3cc80>
  4402e8:	ldr	x1, [sp, #24]
  4402ec:	ldr	w2, [x1]
  4402f0:	sub	w0, w0, w2
  4402f4:	ldrb	w2, [x1, #6]
  4402f8:	ldr	w1, [x1, #16]
  4402fc:	lsr	w0, w0, w2
  440300:	add	w0, w0, w1
  440304:	ldp	x29, x30, [sp], #32
  440308:	ret
  44030c:	mov	w0, #0x0                   	// #0
  440310:	b	440304 <ferror@plt+0x3cd34>
  440314:	stp	x29, x30, [sp, #-32]!
  440318:	mov	x29, sp
  44031c:	str	xzr, [sp, #24]
  440320:	tbz	w1, #31, 440338 <ferror@plt+0x3cd68>
  440324:	and	w1, w1, #0x7fffffff
  440328:	mov	w2, #0x18                  	// #24
  44032c:	umull	x1, w1, w2
  440330:	ldr	x2, [x0, #104]
  440334:	ldr	w1, [x2, x1]
  440338:	cmp	w1, #0x1
  44033c:	b.ls	440358 <ferror@plt+0x3cd88>  // b.plast
  440340:	add	x2, sp, #0x18
  440344:	bl	440250 <ferror@plt+0x3cc80>
  440348:	ldr	x0, [sp, #24]
  44034c:	ldr	x0, [x0, #8]
  440350:	ldp	x29, x30, [sp], #32
  440354:	ret
  440358:	mov	x0, #0x0                   	// #0
  44035c:	b	440350 <ferror@plt+0x3cd80>
  440360:	mov	x9, x0
  440364:	mov	w8, w1
  440368:	tbz	w1, #31, 440380 <ferror@plt+0x3cdb0>
  44036c:	and	w8, w1, #0x7fffffff
  440370:	mov	w1, #0x18                  	// #24
  440374:	ldr	x0, [x0, #104]
  440378:	umull	x8, w8, w1
  44037c:	ldr	w8, [x0, x8]
  440380:	cmp	w8, #0x1
  440384:	b.ls	4403e8 <ferror@plt+0x3ce18>  // b.plast
  440388:	stp	x29, x30, [sp, #-16]!
  44038c:	mov	x29, sp
  440390:	b	4403b4 <ferror@plt+0x3cde4>
  440394:	mov	w2, w8
  440398:	mov	x1, x4
  44039c:	mov	x0, x9
  4403a0:	bl	43fd88 <ferror@plt+0x3c7b8>
  4403a4:	mov	w8, w0
  4403a8:	cmp	w0, #0x1
  4403ac:	b.hi	4403b4 <ferror@plt+0x3cde4>  // b.pmore
  4403b0:	ldr	w8, [x4, #24]
  4403b4:	mov	w1, w8
  4403b8:	mov	x0, x9
  4403bc:	bl	43fe10 <ferror@plt+0x3c840>
  4403c0:	mov	x4, x0
  4403c4:	cbz	x0, 4403e0 <ferror@plt+0x3ce10>
  4403c8:	bl	43fd68 <ferror@plt+0x3c798>
  4403cc:	tst	w0, #0xff
  4403d0:	b.ne	440394 <ferror@plt+0x3cdc4>  // b.any
  4403d4:	ldrb	w0, [x4, #5]
  4403d8:	ldp	x29, x30, [sp], #16
  4403dc:	ret
  4403e0:	mov	w0, #0x0                   	// #0
  4403e4:	b	4403d8 <ferror@plt+0x3ce08>
  4403e8:	mov	w0, #0x0                   	// #0
  4403ec:	ret
  4403f0:	mov	x11, x0
  4403f4:	mov	w8, w1
  4403f8:	mov	x10, x3
  4403fc:	tbz	w1, #31, 44042c <ferror@plt+0x3ce5c>
  440400:	and	w0, w1, #0x7fffffff
  440404:	mov	w1, #0x18                  	// #24
  440408:	umull	x0, w0, w1
  44040c:	ldr	x1, [x11, #104]
  440410:	ldr	w0, [x1, x0]
  440414:	cmp	w0, #0x1
  440418:	b.hi	440434 <ferror@plt+0x3ce64>  // b.pmore
  44041c:	cbz	x10, 440424 <ferror@plt+0x3ce54>
  440420:	str	xzr, [x10]
  440424:	mov	w0, w8
  440428:	ret
  44042c:	mov	w0, w1
  440430:	b	440414 <ferror@plt+0x3ce44>
  440434:	stp	x29, x30, [sp, #-16]!
  440438:	cmp	w2, #0x1
  44043c:	mov	x29, sp
  440440:	b.ne	440478 <ferror@plt+0x3cea8>  // b.any
  440444:	mov	w9, #0x6fffffff            	// #1879048191
  440448:	mov	w1, w8
  44044c:	mov	x0, x11
  440450:	bl	43fe10 <ferror@plt+0x3c840>
  440454:	mov	x1, x0
  440458:	cbz	x0, 440468 <ferror@plt+0x3ce98>
  44045c:	ldr	w0, [x0]
  440460:	cmp	w0, w9
  440464:	b.hi	4404d8 <ferror@plt+0x3cf08>  // b.pmore
  440468:	cbnz	x10, 4404ec <ferror@plt+0x3cf1c>
  44046c:	mov	w0, w8
  440470:	ldp	x29, x30, [sp], #16
  440474:	ret
  440478:	cmp	w2, #0x2
  44047c:	b.ne	4404c0 <ferror@plt+0x3cef0>  // b.any
  440480:	mov	w12, #0x6fffffff            	// #1879048191
  440484:	tbz	w8, #31, 4404f4 <ferror@plt+0x3cf24>
  440488:	mov	w1, w8
  44048c:	mov	x0, x11
  440490:	bl	43f674 <ferror@plt+0x3c0a4>
  440494:	mov	w9, w0
  440498:	mov	w1, w9
  44049c:	mov	x0, x11
  4404a0:	bl	43fe10 <ferror@plt+0x3c840>
  4404a4:	cbz	x0, 4404b4 <ferror@plt+0x3cee4>
  4404a8:	ldr	w1, [x0]
  4404ac:	cmp	w1, w12
  4404b0:	b.hi	4404fc <ferror@plt+0x3cf2c>  // b.pmore
  4404b4:	cbz	x10, 44046c <ferror@plt+0x3ce9c>
  4404b8:	str	x0, [x10]
  4404bc:	b	44046c <ferror@plt+0x3ce9c>
  4404c0:	cbnz	w2, 440514 <ferror@plt+0x3cf44>
  4404c4:	ldp	x29, x30, [sp], #16
  4404c8:	mov	x2, x10
  4404cc:	mov	w1, w8
  4404d0:	mov	x0, x11
  4404d4:	b	440250 <ferror@plt+0x3cc80>
  4404d8:	mov	w2, w8
  4404dc:	mov	x0, x11
  4404e0:	bl	43fd88 <ferror@plt+0x3c7b8>
  4404e4:	mov	w8, w0
  4404e8:	b	440448 <ferror@plt+0x3ce78>
  4404ec:	str	x1, [x10]
  4404f0:	b	44046c <ferror@plt+0x3ce9c>
  4404f4:	mov	w9, w8
  4404f8:	b	440498 <ferror@plt+0x3cec8>
  4404fc:	sub	w9, w9, w1
  440500:	ldr	x0, [x0, #16]
  440504:	lsl	w9, w9, #1
  440508:	add	w9, w9, #0x1
  44050c:	ldr	w8, [x0, x9, lsl #2]
  440510:	b	440484 <ferror@plt+0x3ceb4>
  440514:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440518:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44051c:	add	x2, x2, #0x253
  440520:	add	x0, x0, #0x26c
  440524:	mov	w1, #0x621                 	// #1569
  440528:	bl	403600 <ferror@plt+0x30>
  44052c:	stp	x29, x30, [sp, #-80]!
  440530:	mov	x29, sp
  440534:	stp	x19, x20, [sp, #16]
  440538:	mov	x20, x0
  44053c:	mov	w19, w1
  440540:	stp	x21, x22, [sp, #32]
  440544:	mov	w22, w2
  440548:	str	x23, [sp, #48]
  44054c:	str	xzr, [sp, #72]
  440550:	tbz	w1, #31, 440568 <ferror@plt+0x3cf98>
  440554:	and	w19, w1, #0x7fffffff
  440558:	mov	w1, #0x18                  	// #24
  44055c:	ldr	x0, [x0, #104]
  440560:	umull	x19, w19, w1
  440564:	ldr	w19, [x0, x19]
  440568:	mov	w1, w19
  44056c:	mov	x0, x20
  440570:	bl	43fde0 <ferror@plt+0x3c810>
  440574:	tst	w0, #0xff
  440578:	b.ne	44061c <ferror@plt+0x3d04c>  // b.any
  44057c:	cmp	w22, #0x0
  440580:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  440584:	b.ls	44061c <ferror@plt+0x3d04c>  // b.plast
  440588:	mov	w1, w19
  44058c:	add	x3, sp, #0x48
  440590:	mov	x0, x20
  440594:	mov	w2, #0x1                   	// #1
  440598:	bl	4403f0 <ferror@plt+0x3ce20>
  44059c:	mov	w19, w0
  4405a0:	ldr	x0, [sp, #72]
  4405a4:	ldrb	w1, [x0, #7]
  4405a8:	ldr	w21, [x0]
  4405ac:	lsl	w1, w22, w1
  4405b0:	add	w1, w1, w19
  4405b4:	cmp	w1, w21
  4405b8:	b.ls	44061c <ferror@plt+0x3d04c>  // b.plast
  4405bc:	ldrb	w2, [x0, #6]
  4405c0:	sub	w21, w19, w21
  4405c4:	mov	w1, w19
  4405c8:	lsr	w21, w21, w2
  4405cc:	ldr	w2, [x0, #16]
  4405d0:	add	w21, w21, w2
  4405d4:	bl	441a54 <ferror@plt+0x3e484>
  4405d8:	mov	w23, w0
  4405dc:	mov	x0, x20
  4405e0:	bl	441a3c <ferror@plt+0x3e46c>
  4405e4:	ldr	x1, [sp, #72]
  4405e8:	cmp	x1, x0
  4405ec:	ldrb	w2, [x1, #7]
  4405f0:	b.eq	440634 <ferror@plt+0x3d064>  // b.none
  4405f4:	ldr	w0, [x1, #24]
  4405f8:	lsl	w3, w22, w2
  4405fc:	add	w3, w3, w19
  440600:	cmp	w3, w0
  440604:	b.cc	440634 <ferror@plt+0x3d064>  // b.lo, b.ul, b.last
  440608:	add	x0, x1, #0x18
  44060c:	str	x0, [sp, #72]
  440610:	ldr	w0, [x1, #40]
  440614:	cmp	w0, w21
  440618:	b.ls	4405dc <ferror@plt+0x3d00c>  // b.plast
  44061c:	mov	w0, w19
  440620:	ldp	x19, x20, [sp, #16]
  440624:	ldp	x21, x22, [sp, #32]
  440628:	ldr	x23, [sp, #48]
  44062c:	ldp	x29, x30, [sp], #80
  440630:	ret
  440634:	ldrb	w0, [x1, #6]
  440638:	add	w3, w22, w23
  44063c:	sub	w2, w0, w2
  440640:	mov	w0, #0x1                   	// #1
  440644:	lsl	w0, w0, w2
  440648:	cmp	w0, w3
  44064c:	b.ls	44061c <ferror@plt+0x3d04c>  // b.plast
  440650:	mov	w2, w21
  440654:	mov	x0, x20
  440658:	bl	43fce4 <ferror@plt+0x3c714>
  44065c:	mov	w8, w0
  440660:	ldr	w0, [x20, #56]
  440664:	cmp	w0, w8
  440668:	b.cc	44061c <ferror@plt+0x3d04c>  // b.lo, b.ul, b.last
  44066c:	mov	w1, w8
  440670:	mov	x0, x20
  440674:	bl	43fe10 <ferror@plt+0x3c840>
  440678:	ldr	x1, [sp, #72]
  44067c:	cmp	x1, x0
  440680:	csel	w19, w19, w8, ne  // ne = any
  440684:	b	44061c <ferror@plt+0x3d04c>
  440688:	stp	x29, x30, [sp, #-64]!
  44068c:	mov	x29, sp
  440690:	stp	x19, x20, [sp, #16]
  440694:	stp	x21, x22, [sp, #32]
  440698:	mov	x21, x0
  44069c:	mov	w22, w2
  4406a0:	stp	x23, x24, [sp, #48]
  4406a4:	mov	w23, w1
  4406a8:	tbz	w1, #31, 440794 <ferror@plt+0x3d1c4>
  4406ac:	bl	43f674 <ferror@plt+0x3c0a4>
  4406b0:	mov	w20, w0
  4406b4:	tbz	w22, #31, 44079c <ferror@plt+0x3d1cc>
  4406b8:	mov	w1, w22
  4406bc:	mov	x0, x21
  4406c0:	bl	43f674 <ferror@plt+0x3c0a4>
  4406c4:	mov	w19, w0
  4406c8:	cmp	w20, w19
  4406cc:	b.eq	440824 <ferror@plt+0x3d254>  // b.none
  4406d0:	mov	w1, w20
  4406d4:	mov	x0, x21
  4406d8:	bl	43fde0 <ferror@plt+0x3c810>
  4406dc:	ands	w24, w0, #0xff
  4406e0:	b.eq	4406fc <ferror@plt+0x3d12c>  // b.none
  4406e4:	mov	w1, w20
  4406e8:	mov	x0, x21
  4406ec:	mov	x3, #0x0                   	// #0
  4406f0:	mov	w2, #0x0                   	// #0
  4406f4:	bl	4403f0 <ferror@plt+0x3ce20>
  4406f8:	mov	w20, w0
  4406fc:	mov	w1, w19
  440700:	mov	x0, x21
  440704:	bl	43fde0 <ferror@plt+0x3c810>
  440708:	tst	w0, #0xff
  44070c:	b.eq	4407e4 <ferror@plt+0x3d214>  // b.none
  440710:	mov	w1, w19
  440714:	mov	x0, x21
  440718:	mov	x3, #0x0                   	// #0
  44071c:	mov	w2, #0x0                   	// #0
  440720:	bl	4403f0 <ferror@plt+0x3ce20>
  440724:	mov	w19, w0
  440728:	cmp	w0, w20
  44072c:	b.ne	4407e4 <ferror@plt+0x3d214>  // b.any
  440730:	cbz	w24, 4407e4 <ferror@plt+0x3d214>
  440734:	mov	w1, w23
  440738:	mov	x0, x21
  44073c:	bl	43fe10 <ferror@plt+0x3c840>
  440740:	mov	x9, x0
  440744:	mov	w1, w22
  440748:	mov	x0, x21
  44074c:	bl	43fe10 <ferror@plt+0x3c840>
  440750:	mov	x8, x0
  440754:	mov	x0, x9
  440758:	bl	43fd68 <ferror@plt+0x3c798>
  44075c:	tst	w0, #0xff
  440760:	b.eq	4407a4 <ferror@plt+0x3d1d4>  // b.none
  440764:	mov	x0, x8
  440768:	bl	43fd68 <ferror@plt+0x3c798>
  44076c:	tst	w0, #0xff
  440770:	b.eq	4407a4 <ferror@plt+0x3d1d4>  // b.none
  440774:	cmp	x9, x8
  440778:	b.eq	4407ac <ferror@plt+0x3d1dc>  // b.none
  44077c:	ldr	w0, [x8]
  440780:	ldr	w1, [x9]
  440784:	cmp	w1, w0
  440788:	b.cc	4407cc <ferror@plt+0x3d1fc>  // b.lo, b.ul, b.last
  44078c:	ldr	w22, [x8, #24]
  440790:	b	440744 <ferror@plt+0x3d174>
  440794:	mov	w20, w1
  440798:	b	4406b4 <ferror@plt+0x3d0e4>
  44079c:	mov	w19, w22
  4407a0:	b	4406c8 <ferror@plt+0x3d0f8>
  4407a4:	cmp	x9, x8
  4407a8:	b.ne	4407b4 <ferror@plt+0x3d1e4>  // b.any
  4407ac:	sub	w0, w22, w23
  4407b0:	cbnz	x8, 440810 <ferror@plt+0x3d240>
  4407b4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4407b8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4407bc:	add	x2, x2, #0x284
  4407c0:	add	x0, x0, #0x26c
  4407c4:	mov	w1, #0x549                 	// #1353
  4407c8:	bl	403600 <ferror@plt+0x30>
  4407cc:	ldr	w23, [x9, #24]
  4407d0:	mov	x0, x21
  4407d4:	mov	w1, w23
  4407d8:	bl	43fe10 <ferror@plt+0x3c840>
  4407dc:	mov	x9, x0
  4407e0:	b	440754 <ferror@plt+0x3d184>
  4407e4:	tbz	w20, #31, 4407f8 <ferror@plt+0x3d228>
  4407e8:	mov	w1, w20
  4407ec:	mov	x0, x21
  4407f0:	bl	43f674 <ferror@plt+0x3c0a4>
  4407f4:	mov	w20, w0
  4407f8:	tbz	w19, #31, 44080c <ferror@plt+0x3d23c>
  4407fc:	mov	w1, w19
  440800:	mov	x0, x21
  440804:	bl	43f674 <ferror@plt+0x3c0a4>
  440808:	mov	w19, w0
  44080c:	sub	w0, w19, w20
  440810:	ldp	x19, x20, [sp, #16]
  440814:	ldp	x21, x22, [sp, #32]
  440818:	ldp	x23, x24, [sp, #48]
  44081c:	ldp	x29, x30, [sp], #64
  440820:	ret
  440824:	mov	w0, #0x0                   	// #0
  440828:	b	440810 <ferror@plt+0x3d240>
  44082c:	stp	x29, x30, [sp, #-16]!
  440830:	mov	x9, x0
  440834:	mov	x29, sp
  440838:	tbz	w1, #31, 4408bc <ferror@plt+0x3d2ec>
  44083c:	bl	43f674 <ferror@plt+0x3c0a4>
  440840:	mov	w8, w0
  440844:	mov	w1, w8
  440848:	mov	x0, x9
  44084c:	bl	43fde0 <ferror@plt+0x3c810>
  440850:	ands	w0, w0, #0xff
  440854:	b.eq	4408b4 <ferror@plt+0x3d2e4>  // b.none
  440858:	mov	w1, w8
  44085c:	mov	x0, x9
  440860:	bl	43fe10 <ferror@plt+0x3c840>
  440864:	mov	x5, x0
  440868:	mov	w4, w8
  44086c:	mov	w2, w8
  440870:	mov	x1, x0
  440874:	mov	x0, x9
  440878:	bl	43fd88 <ferror@plt+0x3c7b8>
  44087c:	mov	w8, w0
  440880:	mov	w1, w0
  440884:	mov	x0, x9
  440888:	bl	43fde0 <ferror@plt+0x3c810>
  44088c:	tst	w0, #0xff
  440890:	b.ne	440858 <ferror@plt+0x3d288>  // b.any
  440894:	ldr	w2, [x5]
  440898:	ldr	x0, [x5, #16]
  44089c:	sub	w4, w4, w2
  4408a0:	lsl	w4, w4, #1
  4408a4:	add	w4, w4, #0x1
  4408a8:	ldr	w0, [x0, x4, lsl #2]
  4408ac:	cmp	w0, w8
  4408b0:	cset	w0, eq  // eq = none
  4408b4:	ldp	x29, x30, [sp], #16
  4408b8:	ret
  4408bc:	mov	w8, w1
  4408c0:	b	440844 <ferror@plt+0x3d274>
  4408c4:	stp	x29, x30, [sp, #-16]!
  4408c8:	mov	x9, x0
  4408cc:	mov	x10, x2
  4408d0:	mov	x29, sp
  4408d4:	ldr	x11, [x2]
  4408d8:	tbz	w1, #31, 4408f0 <ferror@plt+0x3d320>
  4408dc:	and	w1, w1, #0x7fffffff
  4408e0:	mov	w0, #0x18                  	// #24
  4408e4:	umull	x1, w1, w0
  4408e8:	ldr	x0, [x9, #104]
  4408ec:	ldr	w1, [x0, x1]
  4408f0:	mov	w2, w1
  4408f4:	mov	x0, x9
  4408f8:	mov	x1, x11
  4408fc:	bl	43fd88 <ferror@plt+0x3c7b8>
  440900:	mov	w8, w0
  440904:	mov	w1, w0
  440908:	mov	x0, x9
  44090c:	bl	43fe10 <ferror@plt+0x3c840>
  440910:	mov	x3, x0
  440914:	bl	43fd68 <ferror@plt+0x3c798>
  440918:	tst	w0, #0xff
  44091c:	b.ne	440934 <ferror@plt+0x3d364>  // b.any
  440920:	ldr	w8, [x11, #24]
  440924:	mov	x0, x9
  440928:	mov	w1, w8
  44092c:	bl	43fe10 <ferror@plt+0x3c840>
  440930:	mov	x3, x0
  440934:	ldp	x29, x30, [sp], #16
  440938:	mov	w0, w8
  44093c:	str	x3, [x10]
  440940:	ret
  440944:	stp	x29, x30, [sp, #-64]!
  440948:	mov	x29, sp
  44094c:	stp	x19, x20, [sp, #16]
  440950:	mov	x20, x0
  440954:	mov	w19, w1
  440958:	str	x21, [sp, #32]
  44095c:	mov	x21, x2
  440960:	stp	xzr, xzr, [sp, #48]
  440964:	tbz	w1, #31, 44097c <ferror@plt+0x3d3ac>
  440968:	and	w19, w1, #0x7fffffff
  44096c:	mov	w1, #0x18                  	// #24
  440970:	ldr	x0, [x0, #104]
  440974:	umull	x19, w19, w1
  440978:	ldr	w19, [x0, x19]
  44097c:	mov	w1, w19
  440980:	mov	x0, x20
  440984:	bl	43fe10 <ferror@plt+0x3c840>
  440988:	str	x0, [sp, #48]
  44098c:	bl	43fd68 <ferror@plt+0x3c798>
  440990:	tst	w0, #0xff
  440994:	b.eq	440a24 <ferror@plt+0x3d454>  // b.none
  440998:	add	x3, sp, #0x38
  44099c:	mov	w1, w19
  4409a0:	mov	x0, x20
  4409a4:	mov	w2, #0x1                   	// #1
  4409a8:	bl	4403f0 <ferror@plt+0x3ce20>
  4409ac:	mov	w3, w0
  4409b0:	cmp	w0, #0x1
  4409b4:	b.ls	4409c4 <ferror@plt+0x3d3f4>  // b.plast
  4409b8:	ldr	x0, [sp, #56]
  4409bc:	ldrb	w0, [x0, #5]
  4409c0:	cbz	w0, 440a24 <ferror@plt+0x3d454>
  4409c4:	ldr	x2, [sp, #48]
  4409c8:	mov	x0, x2
  4409cc:	bl	43fd68 <ferror@plt+0x3c798>
  4409d0:	tst	w0, #0xff
  4409d4:	b.eq	440a1c <ferror@plt+0x3d44c>  // b.none
  4409d8:	cmp	w3, #0x1
  4409dc:	b.ls	4409ec <ferror@plt+0x3d41c>  // b.plast
  4409e0:	ldr	x0, [sp, #56]
  4409e4:	ldrb	w0, [x0, #5]
  4409e8:	cbz	w0, 440a1c <ferror@plt+0x3d44c>
  4409ec:	mov	w1, w19
  4409f0:	add	x2, sp, #0x30
  4409f4:	mov	x0, x20
  4409f8:	bl	4408c4 <ferror@plt+0x3d2f4>
  4409fc:	add	x3, sp, #0x38
  440a00:	mov	w1, w0
  440a04:	mov	w19, w0
  440a08:	mov	w2, #0x1                   	// #1
  440a0c:	mov	x0, x20
  440a10:	bl	4403f0 <ferror@plt+0x3ce20>
  440a14:	mov	w3, w0
  440a18:	b	4409c4 <ferror@plt+0x3d3f4>
  440a1c:	cbz	x21, 440a24 <ferror@plt+0x3d454>
  440a20:	str	x2, [x21]
  440a24:	mov	w0, w19
  440a28:	ldp	x19, x20, [sp, #16]
  440a2c:	ldr	x21, [sp, #32]
  440a30:	ldp	x29, x30, [sp], #64
  440a34:	ret
  440a38:	stp	x29, x30, [sp, #-32]!
  440a3c:	mov	w3, w2
  440a40:	mov	x29, sp
  440a44:	stp	x19, x20, [sp, #16]
  440a48:	mov	x19, x8
  440a4c:	mov	x20, x1
  440a50:	stp	xzr, xzr, [x8]
  440a54:	stp	xzr, xzr, [x8, #16]
  440a58:	tbz	w2, #31, 440a7c <ferror@plt+0x3d4ac>
  440a5c:	and	w3, w2, #0x7fffffff
  440a60:	mov	w1, #0x18                  	// #24
  440a64:	umull	x3, w3, w1
  440a68:	ldr	x1, [x0, #104]
  440a6c:	add	x2, x1, x3
  440a70:	ldr	w3, [x1, x3]
  440a74:	ldr	x2, [x2, #16]
  440a78:	str	x2, [x8, #16]
  440a7c:	cmp	w3, #0x1
  440a80:	b.ls	440b04 <ferror@plt+0x3d534>  // b.plast
  440a84:	cbnz	x20, 440aa0 <ferror@plt+0x3d4d0>
  440a88:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440a8c:	add	x2, x2, #0x29e
  440a90:	mov	w1, #0x6bd                 	// #1725
  440a94:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440a98:	add	x0, x0, #0x26c
  440a9c:	bl	403600 <ferror@plt+0x30>
  440aa0:	mov	w1, w3
  440aa4:	bl	43fde0 <ferror@plt+0x3c810>
  440aa8:	tst	w0, #0xff
  440aac:	b.eq	440ac0 <ferror@plt+0x3d4f0>  // b.none
  440ab0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440ab4:	mov	w1, #0x6c5                 	// #1733
  440ab8:	add	x2, x2, #0x29e
  440abc:	b	440a94 <ferror@plt+0x3d4c4>
  440ac0:	ldr	x0, [x20, #8]
  440ac4:	str	x0, [x19]
  440ac8:	ldr	w0, [x20]
  440acc:	ldrb	w1, [x20, #6]
  440ad0:	sub	w0, w3, w0
  440ad4:	lsr	w0, w0, w1
  440ad8:	ldr	w1, [x20, #16]
  440adc:	add	w0, w0, w1
  440ae0:	mov	w1, w3
  440ae4:	str	w0, [x19, #8]
  440ae8:	mov	x0, x20
  440aec:	bl	441a54 <ferror@plt+0x3e484>
  440af0:	str	w0, [x19, #12]
  440af4:	ldrb	w0, [x20, #5]
  440af8:	cmp	w0, #0x0
  440afc:	cset	w0, ne  // ne = any
  440b00:	strb	w0, [x19, #24]
  440b04:	ldp	x19, x20, [sp, #16]
  440b08:	ldp	x29, x30, [sp], #32
  440b0c:	ret
  440b10:	stp	x29, x30, [sp, #-96]!
  440b14:	mov	x29, sp
  440b18:	stp	x19, x20, [sp, #16]
  440b1c:	mov	x20, x0
  440b20:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440b24:	add	x0, x0, #0x3f8
  440b28:	stp	x21, x22, [sp, #32]
  440b2c:	mov	x21, x1
  440b30:	and	w22, w3, #0xff
  440b34:	ldp	x4, x5, [x0]
  440b38:	stp	x4, x5, [sp, #56]
  440b3c:	ldp	x4, x5, [x0, #16]
  440b40:	stp	x4, x5, [sp, #72]
  440b44:	ldr	x0, [x0, #32]
  440b48:	str	x0, [sp, #88]
  440b4c:	cbnz	x20, 440b58 <ferror@plt+0x3d588>
  440b50:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  440b54:	ldr	x20, [x0, #1264]
  440b58:	cbnz	w22, 440c2c <ferror@plt+0x3d65c>
  440b5c:	ldr	x0, [x21]
  440b60:	mov	w19, #0x18                  	// #24
  440b64:	smaddl	x19, w2, w19, x0
  440b68:	ldrb	w0, [x19, #4]
  440b6c:	ldr	w4, [x19]
  440b70:	cmp	w0, #0x4
  440b74:	b.hi	440c40 <ferror@plt+0x3d670>  // b.pmore
  440b78:	add	x1, sp, #0x60
  440b7c:	add	x0, x1, w0, uxtb #3
  440b80:	ldur	x5, [x0, #-40]
  440b84:	cbnz	w22, 440c4c <ferror@plt+0x3d67c>
  440b88:	ldrb	w1, [x19, #5]
  440b8c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440b90:	adrp	x6, 47d000 <_obstack_memory_used@@Base+0x20c10>
  440b94:	add	x0, x0, #0x2b6
  440b98:	cmp	w1, #0x0
  440b9c:	add	x6, x6, #0x326
  440ba0:	csel	x6, x6, x0, eq  // eq = none
  440ba4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440ba8:	mov	x3, x19
  440bac:	add	x1, x1, #0x2bf
  440bb0:	mov	x0, x20
  440bb4:	bl	403590 <fprintf@plt>
  440bb8:	cbnz	w22, 440c68 <ferror@plt+0x3d698>
  440bbc:	mov	x1, x19
  440bc0:	mov	x0, x21
  440bc4:	bl	43f6f0 <ferror@plt+0x3c120>
  440bc8:	mov	x22, x0
  440bcc:	ldr	w3, [x19, #16]
  440bd0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440bd4:	ldr	x2, [x19, #8]
  440bd8:	add	x1, x1, #0x2ef
  440bdc:	mov	x0, x20
  440be0:	bl	403590 <fprintf@plt>
  440be4:	cbz	x22, 440c58 <ferror@plt+0x3d688>
  440be8:	ldr	x2, [x21]
  440bec:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  440bf0:	movk	x0, #0xaaab
  440bf4:	sub	x2, x22, x2
  440bf8:	ldr	x3, [x22, #8]
  440bfc:	asr	x2, x2, #3
  440c00:	mul	w2, w2, w0
  440c04:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440c08:	mov	x0, x20
  440c0c:	add	x1, x1, #0x2fc
  440c10:	bl	403590 <fprintf@plt>
  440c14:	mov	x1, x20
  440c18:	mov	w0, #0xa                   	// #10
  440c1c:	ldp	x19, x20, [sp, #16]
  440c20:	ldp	x21, x22, [sp, #32]
  440c24:	ldp	x29, x30, [sp], #96
  440c28:	b	402e40 <fputc@plt>
  440c2c:	ldr	x0, [x21, #24]
  440c30:	sbfiz	x19, x2, #5, #32
  440c34:	add	x19, x0, x19
  440c38:	mov	w0, #0x4                   	// #4
  440c3c:	b	440b6c <ferror@plt+0x3d59c>
  440c40:	adrp	x5, 4c1000 <_obstack_memory_used@@Base+0x64c10>
  440c44:	add	x5, x5, #0xd5a
  440c48:	b	440b84 <ferror@plt+0x3d5b4>
  440c4c:	adrp	x6, 47d000 <_obstack_memory_used@@Base+0x20c10>
  440c50:	add	x6, x6, #0x326
  440c54:	b	440ba4 <ferror@plt+0x3d5d4>
  440c58:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440c5c:	mov	w2, #0xffffffff            	// #-1
  440c60:	add	x3, x3, #0x2ba
  440c64:	b	440c04 <ferror@plt+0x3d634>
  440c68:	ldr	x0, [x19, #8]
  440c6c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440c70:	ldr	w3, [x19, #4]
  440c74:	add	x1, x1, #0x314
  440c78:	ldr	x2, [x0]
  440c7c:	mov	x0, x20
  440c80:	bl	403590 <fprintf@plt>
  440c84:	b	440c14 <ferror@plt+0x3d644>
  440c88:	sub	sp, sp, #0x80
  440c8c:	stp	x29, x30, [sp, #32]
  440c90:	add	x29, sp, #0x20
  440c94:	stp	x19, x20, [sp, #48]
  440c98:	mov	w19, w1
  440c9c:	stp	x21, x22, [sp, #64]
  440ca0:	stp	x23, x24, [sp, #80]
  440ca4:	mov	x24, x0
  440ca8:	mov	x23, x2
  440cac:	str	x25, [sp, #96]
  440cb0:	tbz	w1, #31, 440cc8 <ferror@plt+0x3d6f8>
  440cb4:	and	w19, w1, #0x7fffffff
  440cb8:	mov	w1, #0x18                  	// #24
  440cbc:	ldr	x0, [x0, #104]
  440cc0:	umull	x19, w19, w1
  440cc4:	ldr	w19, [x0, x19]
  440cc8:	cbz	w19, 440d74 <ferror@plt+0x3d7a4>
  440ccc:	add	x3, sp, #0x78
  440cd0:	mov	w1, w19
  440cd4:	mov	x0, x24
  440cd8:	mov	w2, #0x2                   	// #2
  440cdc:	bl	4403f0 <ferror@plt+0x3ce20>
  440ce0:	mov	w22, w0
  440ce4:	ldr	x21, [sp, #120]
  440ce8:	cbz	x21, 440d90 <ferror@plt+0x3d7c0>
  440cec:	ldr	w20, [x21]
  440cf0:	mov	w1, w0
  440cf4:	ldrb	w4, [x21, #6]
  440cf8:	mov	x0, x21
  440cfc:	sub	w20, w22, w20
  440d00:	lsr	w20, w20, w4
  440d04:	ldr	w4, [x21, #16]
  440d08:	add	w20, w20, w4
  440d0c:	bl	441a54 <ferror@plt+0x3e484>
  440d10:	mov	w8, w0
  440d14:	ldrb	w0, [x21, #5]
  440d18:	ldr	x25, [x21, #8]
  440d1c:	cmp	w0, #0x0
  440d20:	cset	w9, ne  // ne = any
  440d24:	cmp	w19, w22
  440d28:	b.ne	440db0 <ferror@plt+0x3d7e0>  // b.any
  440d2c:	mov	x1, x21
  440d30:	mov	x0, x24
  440d34:	bl	43f6f0 <ferror@plt+0x3c120>
  440d38:	cbz	x0, 440dc0 <ferror@plt+0x3d7f0>
  440d3c:	ldr	x3, [x0, #8]
  440d40:	mov	w1, #0x0                   	// #0
  440d44:	ldr	x7, [sp, #120]
  440d48:	str	w1, [sp]
  440d4c:	str	w19, [sp, #8]
  440d50:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440d54:	str	w22, [sp, #16]
  440d58:	mov	w6, w9
  440d5c:	mov	w5, w8
  440d60:	mov	w4, w20
  440d64:	mov	x2, x25
  440d68:	mov	x0, x23
  440d6c:	add	x1, x1, #0x336
  440d70:	bl	403590 <fprintf@plt>
  440d74:	ldp	x29, x30, [sp, #32]
  440d78:	ldp	x19, x20, [sp, #48]
  440d7c:	ldp	x21, x22, [sp, #64]
  440d80:	ldp	x23, x24, [sp, #80]
  440d84:	ldr	x25, [sp, #96]
  440d88:	add	sp, sp, #0x80
  440d8c:	ret
  440d90:	adrp	x3, 485000 <_obstack_memory_used@@Base+0x28c10>
  440d94:	add	x3, x3, #0x122
  440d98:	mov	w1, #0xffffffff            	// #-1
  440d9c:	mov	x25, x3
  440da0:	mov	w9, w1
  440da4:	mov	w8, w1
  440da8:	mov	w20, w1
  440dac:	b	440d44 <ferror@plt+0x3d774>
  440db0:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440db4:	mov	w1, #0x1                   	// #1
  440db8:	add	x3, x3, #0x32b
  440dbc:	b	440d44 <ferror@plt+0x3d774>
  440dc0:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440dc4:	mov	w1, #0x0                   	// #0
  440dc8:	add	x3, x3, #0x32f
  440dcc:	b	440d44 <ferror@plt+0x3d774>
  440dd0:	cbnz	x0, 440df4 <ferror@plt+0x3d824>
  440dd4:	mov	w0, #0x0                   	// #0
  440dd8:	ret
  440ddc:	mov	w0, #0x0                   	// #0
  440de0:	ldp	x19, x20, [sp, #16]
  440de4:	ldp	x21, x22, [sp, #32]
  440de8:	ldp	x23, x24, [sp, #48]
  440dec:	ldp	x29, x30, [sp], #64
  440df0:	ret
  440df4:	stp	x29, x30, [sp, #-64]!
  440df8:	mov	x29, sp
  440dfc:	stp	x19, x20, [sp, #16]
  440e00:	mov	x19, x0
  440e04:	ldr	w20, [x0, #12]
  440e08:	stp	x21, x22, [sp, #32]
  440e0c:	stp	x23, x24, [sp, #48]
  440e10:	cbz	w20, 440ddc <ferror@plt+0x3d80c>
  440e14:	sub	w20, w20, #0x1
  440e18:	mov	x24, x1
  440e1c:	mov	x23, x2
  440e20:	mov	x21, #0x18                  	// #24
  440e24:	sxtw	x22, w20
  440e28:	tbnz	w20, #31, 440ddc <ferror@plt+0x3d80c>
  440e2c:	ldr	x0, [x19]
  440e30:	madd	x0, x22, x21, x0
  440e34:	ldr	x0, [x0, #8]
  440e38:	cbnz	x0, 440e48 <ferror@plt+0x3d878>
  440e3c:	sub	w20, w20, #0x1
  440e40:	sub	x22, x22, #0x1
  440e44:	b	440e28 <ferror@plt+0x3d858>
  440e48:	mov	x1, x24
  440e4c:	bl	45a8bc <ferror@plt+0x572ec>
  440e50:	cbnz	w0, 440e3c <ferror@plt+0x3d86c>
  440e54:	ldr	w0, [x19, #12]
  440e58:	sub	w0, w0, #0x1
  440e5c:	cmp	w0, w20
  440e60:	b.ne	440e74 <ferror@plt+0x3d8a4>  // b.any
  440e64:	ldr	w0, [x19, #56]
  440e68:	str	w0, [x23]
  440e6c:	mov	w0, #0x1                   	// #1
  440e70:	b	440de0 <ferror@plt+0x3d810>
  440e74:	madd	x21, x22, x21, x21
  440e78:	ldr	x0, [x19]
  440e7c:	ldr	w0, [x0, x21]
  440e80:	sub	w0, w0, #0x1
  440e84:	b	440e68 <ferror@plt+0x3d898>
  440e88:	ldp	w7, w8, [x0, #8]
  440e8c:	mov	w2, #0x18                  	// #24
  440e90:	ldp	w12, w3, [x0, #32]
  440e94:	mov	x11, #0x0                   	// #0
  440e98:	umull	x15, w7, w2
  440e9c:	mov	x10, #0x0                   	// #0
  440ea0:	umull	x6, w8, w2
  440ea4:	sub	w4, w3, #0x1
  440ea8:	ldr	x2, [x0, #24]
  440eac:	sbfiz	x4, x4, #5, #32
  440eb0:	lsl	x12, x12, #5
  440eb4:	add	x4, x2, x4
  440eb8:	cbz	x2, 440f00 <ferror@plt+0x3d930>
  440ebc:	cmp	x2, x4
  440ec0:	b.hi	440f00 <ferror@plt+0x3d930>  // b.pmore
  440ec4:	ldr	w9, [x2, #4]
  440ec8:	mov	w5, #0x0                   	// #0
  440ecc:	lsl	w9, w9, #1
  440ed0:	add	x10, x10, w9, uxtw #2
  440ed4:	cmp	w9, w5
  440ed8:	b.ls	440f54 <ferror@plt+0x3d984>  // b.plast
  440edc:	ldr	x14, [x2, #16]
  440ee0:	add	w13, w5, #0x1
  440ee4:	ldr	w16, [x14, w5, uxtw #2]
  440ee8:	ldr	w13, [x14, x13, lsl #2]
  440eec:	cmp	w16, w13
  440ef0:	b.ne	440ef8 <ferror@plt+0x3d928>  // b.any
  440ef4:	add	x11, x11, #0x4
  440ef8:	add	w5, w5, #0x2
  440efc:	b	440ed4 <ferror@plt+0x3d904>
  440f00:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  440f04:	mov	w3, w3
  440f08:	stp	x3, x12, [x1, #48]
  440f0c:	mov	w7, w7
  440f10:	ldr	w2, [x2, #612]
  440f14:	str	x2, [x1, #32]
  440f18:	lsl	x3, x3, #5
  440f1c:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  440f20:	str	x3, [x1, #64]
  440f24:	mov	w3, #0x18                  	// #24
  440f28:	mov	w8, w8
  440f2c:	ldr	w2, [x2, #608]
  440f30:	str	x2, [x1, #40]
  440f34:	ldr	w2, [x0, #100]
  440f38:	ldr	w0, [x0, #96]
  440f3c:	stp	x7, x8, [x1]
  440f40:	umull	x2, w2, w3
  440f44:	stp	x15, x6, [x1, #16]
  440f48:	stp	x10, x11, [x1, #72]
  440f4c:	stp	x2, x0, [x1, #88]
  440f50:	ret
  440f54:	add	x2, x2, #0x20
  440f58:	b	440eb8 <ferror@plt+0x3d8e8>
  440f5c:	cbz	x1, 4410a8 <ferror@plt+0x3dad8>
  440f60:	stp	x29, x30, [sp, #-64]!
  440f64:	mov	x29, sp
  440f68:	stp	x19, x20, [sp, #16]
  440f6c:	mov	x19, x0
  440f70:	mov	x20, x1
  440f74:	stp	x21, x22, [sp, #32]
  440f78:	mov	w22, w3
  440f7c:	str	x23, [sp, #48]
  440f80:	mov	w23, w2
  440f84:	cbnz	x0, 440f90 <ferror@plt+0x3d9c0>
  440f88:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  440f8c:	ldr	x19, [x0, #1264]
  440f90:	mov	x0, x19
  440f94:	ldr	w2, [x20, #12]
  440f98:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440f9c:	add	x1, x1, #0x367
  440fa0:	bl	403590 <fprintf@plt>
  440fa4:	ldr	w2, [x20, #36]
  440fa8:	mov	x0, x19
  440fac:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440fb0:	add	x1, x1, #0x380
  440fb4:	bl	403590 <fprintf@plt>
  440fb8:	ldr	w2, [x20, #48]
  440fbc:	mov	x0, x19
  440fc0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440fc4:	add	x1, x1, #0x399
  440fc8:	bl	403590 <fprintf@plt>
  440fcc:	ldr	w2, [x20, #56]
  440fd0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440fd4:	mov	x0, x19
  440fd8:	add	x1, x1, #0x3b2
  440fdc:	bl	403590 <fprintf@plt>
  440fe0:	cbz	w23, 441030 <ferror@plt+0x3da60>
  440fe4:	mov	w21, #0x0                   	// #0
  440fe8:	mov	x1, x19
  440fec:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  440ff0:	add	x0, x0, #0x3cb
  440ff4:	bl	402d60 <fputs@plt>
  440ff8:	ldr	w0, [x20, #12]
  440ffc:	cmp	w0, w21
  441000:	b.ls	441024 <ferror@plt+0x3da54>  // b.plast
  441004:	mov	w2, w21
  441008:	mov	x1, x20
  44100c:	mov	x0, x19
  441010:	add	w21, w21, #0x1
  441014:	mov	w3, #0x0                   	// #0
  441018:	bl	440b10 <ferror@plt+0x3d540>
  44101c:	cmp	w23, w21
  441020:	b.ne	440ff8 <ferror@plt+0x3da28>  // b.any
  441024:	mov	x1, x19
  441028:	mov	w0, #0xa                   	// #10
  44102c:	bl	402e40 <fputc@plt>
  441030:	cbz	w22, 441094 <ferror@plt+0x3dac4>
  441034:	mov	w21, #0x0                   	// #0
  441038:	mov	x1, x19
  44103c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441040:	add	x0, x0, #0x3e0
  441044:	bl	402d60 <fputs@plt>
  441048:	ldr	w0, [x20, #36]
  44104c:	cmp	w0, w21
  441050:	b.hi	441070 <ferror@plt+0x3daa0>  // b.pmore
  441054:	mov	x1, x19
  441058:	mov	w0, #0xa                   	// #10
  44105c:	ldp	x19, x20, [sp, #16]
  441060:	ldp	x21, x22, [sp, #32]
  441064:	ldr	x23, [sp, #48]
  441068:	ldp	x29, x30, [sp], #64
  44106c:	b	402e40 <fputc@plt>
  441070:	mov	w2, w21
  441074:	mov	x1, x20
  441078:	mov	x0, x19
  44107c:	add	w21, w21, #0x1
  441080:	mov	w3, #0x1                   	// #1
  441084:	bl	440b10 <ferror@plt+0x3d540>
  441088:	cmp	w22, w21
  44108c:	b.ne	441048 <ferror@plt+0x3da78>  // b.any
  441090:	b	441054 <ferror@plt+0x3da84>
  441094:	ldp	x19, x20, [sp, #16]
  441098:	ldp	x21, x22, [sp, #32]
  44109c:	ldr	x23, [sp, #48]
  4410a0:	ldp	x29, x30, [sp], #64
  4410a4:	ret
  4410a8:	ret
  4410ac:	stp	x29, x30, [sp, #-64]!
  4410b0:	mov	x29, sp
  4410b4:	stp	x19, x20, [sp, #16]
  4410b8:	mov	x20, x0
  4410bc:	mov	w19, #0x0                   	// #0
  4410c0:	stp	x21, x22, [sp, #32]
  4410c4:	add	x21, x0, #0x78
  4410c8:	str	x23, [sp, #48]
  4410cc:	mov	x23, #0xfffffffffffffff0    	// #-16
  4410d0:	ldr	w0, [x20, #120]
  4410d4:	cmp	w19, w0
  4410d8:	b.cs	441124 <ferror@plt+0x3db54>  // b.hs, b.nlast
  4410dc:	sxtw	x1, w19
  4410e0:	cmp	w19, #0x1
  4410e4:	b.gt	441114 <ferror@plt+0x3db44>
  4410e8:	add	x1, x1, #0x1
  4410ec:	add	x1, x21, x1, lsl #3
  4410f0:	ldr	x22, [x1]
  4410f4:	cbz	x22, 44110c <ferror@plt+0x3db3c>
  4410f8:	ldr	x0, [x22, #8]
  4410fc:	bl	4032a0 <free@plt>
  441100:	mov	x0, x22
  441104:	mov	x1, #0x18                  	// #24
  441108:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  44110c:	add	w19, w19, #0x1
  441110:	b	4410d0 <ferror@plt+0x3db00>
  441114:	ldr	x2, [x21, #32]
  441118:	add	x1, x23, w19, sxtw #3
  44111c:	add	x1, x2, x1
  441120:	b	4410f0 <ferror@plt+0x3db20>
  441124:	ldr	x0, [x21, #32]
  441128:	bl	4032a0 <free@plt>
  44112c:	ldp	x21, x22, [sp, #32]
  441130:	ldr	x23, [sp, #48]
  441134:	ldr	x0, [x20, #72]
  441138:	ldp	x19, x20, [sp, #16]
  44113c:	ldp	x29, x30, [sp], #64
  441140:	b	4032a0 <free@plt>
  441144:	sbfiz	x2, x1, #4, #32
  441148:	cmp	w1, #0x2
  44114c:	add	x0, x0, #0x8
  441150:	b.gt	441164 <ferror@plt+0x3db94>
  441154:	add	x2, x2, #0x8
  441158:	add	x0, x0, x2
  44115c:	ldr	w0, [x0]
  441160:	ret
  441164:	sub	x2, x2, #0x30
  441168:	ldr	x0, [x0, #64]
  44116c:	b	441158 <ferror@plt+0x3db88>
  441170:	sbfiz	x2, x1, #4, #32
  441174:	cmp	w1, #0x2
  441178:	add	x0, x0, #0x8
  44117c:	b.gt	44118c <ferror@plt+0x3dbbc>
  441180:	add	x2, x2, #0x8
  441184:	add	x0, x0, x2
  441188:	ret
  44118c:	sub	x2, x2, #0x30
  441190:	ldr	x0, [x0, #64]
  441194:	b	441184 <ferror@plt+0x3dbb4>
  441198:	sbfiz	x2, x1, #4, #32
  44119c:	cmp	w1, #0x2
  4411a0:	add	x0, x0, #0x8
  4411a4:	b.gt	4411b4 <ferror@plt+0x3dbe4>
  4411a8:	add	x2, x2, #0x8
  4411ac:	add	x0, x0, x2
  4411b0:	ret
  4411b4:	sub	x2, x2, #0x30
  4411b8:	ldr	x0, [x0, #64]
  4411bc:	b	4411ac <ferror@plt+0x3dbdc>
  4411c0:	stp	x29, x30, [sp, #-80]!
  4411c4:	mov	x29, sp
  4411c8:	stp	x19, x20, [sp, #16]
  4411cc:	mov	x20, x8
  4411d0:	str	x21, [sp, #32]
  4411d4:	cbnz	w1, 44123c <ferror@plt+0x3dc6c>
  4411d8:	ldrb	w2, [x0, #84]
  4411dc:	mov	x19, x0
  4411e0:	add	x21, x0, #0x58
  4411e4:	cbnz	w2, 44121c <ferror@plt+0x3dc4c>
  4411e8:	bl	441144 <ferror@plt+0x3db74>
  4411ec:	mov	w1, #0x0                   	// #0
  4411f0:	add	x8, sp, #0x30
  4411f4:	bl	42b730 <ferror@plt+0x28160>
  4411f8:	ldp	x0, x1, [sp, #48]
  4411fc:	stp	x0, x1, [x19, #88]
  441200:	ldp	x0, x1, [sp, #64]
  441204:	stp	x0, x1, [x21, #16]
  441208:	ldr	w0, [x19, #80]
  44120c:	cbz	w0, 441214 <ferror@plt+0x3dc44>
  441210:	str	w0, [x19, #100]
  441214:	mov	w0, #0x1                   	// #1
  441218:	strb	w0, [x19, #84]
  44121c:	ldp	x0, x1, [x19, #88]
  441220:	stp	x0, x1, [x20]
  441224:	ldp	x0, x1, [x21, #16]
  441228:	stp	x0, x1, [x20, #16]
  44122c:	ldp	x19, x20, [sp, #16]
  441230:	ldr	x21, [sp, #32]
  441234:	ldp	x29, x30, [sp], #80
  441238:	ret
  44123c:	bl	441144 <ferror@plt+0x3db74>
  441240:	mov	w1, #0x0                   	// #0
  441244:	bl	42b730 <ferror@plt+0x28160>
  441248:	b	44122c <ferror@plt+0x3dc5c>
  44124c:	str	w1, [x0, #80]
  441250:	strb	wzr, [x0, #84]
  441254:	ret
  441258:	stp	x29, x30, [sp, #-64]!
  44125c:	mov	x29, sp
  441260:	ldr	w4, [x0, #8]
  441264:	stp	x19, x20, [sp, #16]
  441268:	add	x20, x0, #0x8
  44126c:	cmp	w4, #0x2
  441270:	stp	x21, x22, [sp, #32]
  441274:	mov	w22, w2
  441278:	mov	x21, x3
  44127c:	str	x23, [sp, #48]
  441280:	mov	w23, w1
  441284:	add	w1, w4, #0x1
  441288:	str	w1, [x0, #8]
  44128c:	b.gt	4412bc <ferror@plt+0x3dcec>
  441290:	mov	x0, #0x8                   	// #8
  441294:	add	x4, x0, w4, sxtw #4
  441298:	add	x0, x20, x4
  44129c:	str	w23, [x20, x4]
  4412a0:	str	w2, [x0, #4]
  4412a4:	str	x3, [x0, #8]
  4412a8:	ldp	x19, x20, [sp, #16]
  4412ac:	ldp	x21, x22, [sp, #32]
  4412b0:	ldr	x23, [sp, #48]
  4412b4:	ldp	x29, x30, [sp], #64
  4412b8:	ret
  4412bc:	ldr	x0, [x20, #64]
  4412c0:	sub	w19, w4, #0x3
  4412c4:	cbnz	x0, 4412f8 <ferror@plt+0x3dd28>
  4412c8:	mov	w0, #0x10                  	// #16
  4412cc:	str	w0, [x20, #56]
  4412d0:	mov	x0, #0x100                 	// #256
  4412d4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4412d8:	str	x0, [x20, #64]
  4412dc:	ldr	x0, [x20, #64]
  4412e0:	sbfiz	x1, x19, #4, #32
  4412e4:	add	x4, x0, w19, sxtw #4
  4412e8:	str	w23, [x0, x1]
  4412ec:	str	w22, [x4, #4]
  4412f0:	str	x21, [x4, #8]
  4412f4:	b	4412a8 <ferror@plt+0x3dcd8>
  4412f8:	ldr	w4, [x20, #56]
  4412fc:	cmp	w19, w4
  441300:	b.lt	4412dc <ferror@plt+0x3dd0c>  // b.tstop
  441304:	lsl	w4, w4, #1
  441308:	str	w4, [x20, #56]
  44130c:	sbfiz	x1, x4, #4, #32
  441310:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  441314:	b	4412d8 <ferror@plt+0x3dd08>
  441318:	mov	x5, x1
  44131c:	mov	w1, w2
  441320:	mov	x2, x0
  441324:	str	x5, [x2], #8
  441328:	str	wzr, [x0, #8]
  44132c:	str	wzr, [x2, #56]
  441330:	str	xzr, [x2, #64]
  441334:	mov	w2, #0x0                   	// #0
  441338:	str	wzr, [x0, #80]
  44133c:	strb	wzr, [x0, #84]
  441340:	str	wzr, [x0, #120]
  441344:	str	wzr, [x0, #144]
  441348:	str	xzr, [x0, #152]
  44134c:	strh	wzr, [x0, #160]
  441350:	b	441258 <ferror@plt+0x3dc88>
  441354:	stp	x29, x30, [sp, #-32]!
  441358:	mov	x29, sp
  44135c:	stp	x19, x20, [sp, #16]
  441360:	mov	w19, w1
  441364:	mov	w1, w2
  441368:	mov	w2, w3
  44136c:	ldr	w3, [x0, #8]
  441370:	mov	x20, x0
  441374:	cmp	w3, w19
  441378:	b.ne	441398 <ferror@plt+0x3ddc8>  // b.any
  44137c:	mov	x3, #0x0                   	// #0
  441380:	bl	441258 <ferror@plt+0x3dc88>
  441384:	cbnz	w19, 44138c <ferror@plt+0x3ddbc>
  441388:	strb	wzr, [x20, #84]
  44138c:	ldp	x19, x20, [sp, #16]
  441390:	ldp	x29, x30, [sp], #32
  441394:	ret
  441398:	sbfiz	x4, x19, #4, #32
  44139c:	cmp	w19, #0x2
  4413a0:	add	x5, x0, #0x8
  4413a4:	b.gt	4413b8 <ferror@plt+0x3dde8>
  4413a8:	add	x4, x4, #0x8
  4413ac:	add	x4, x5, x4
  4413b0:	stp	w1, w2, [x4]
  4413b4:	b	441384 <ferror@plt+0x3ddb4>
  4413b8:	sub	x6, x4, #0x30
  4413bc:	ldr	x4, [x5, #64]
  4413c0:	add	x4, x4, x6
  4413c4:	b	4413b0 <ferror@plt+0x3dde0>
  4413c8:	ldr	w2, [x0, #120]
  4413cc:	cbz	w2, 441408 <ferror@plt+0x3de38>
  4413d0:	sub	w2, w2, #0x1
  4413d4:	add	x3, x0, #0x78
  4413d8:	cmp	w2, #0x1
  4413dc:	sxtw	x1, w2
  4413e0:	b.gt	4413f4 <ferror@plt+0x3de24>
  4413e4:	add	x0, x1, #0x1
  4413e8:	add	x0, x3, x0, lsl #3
  4413ec:	ldr	x0, [x0]
  4413f0:	ret
  4413f4:	mov	x0, #0xfffffffffffffff0    	// #-16
  4413f8:	add	x2, x0, w2, sxtw #3
  4413fc:	ldr	x0, [x3, #32]
  441400:	add	x0, x0, x2
  441404:	b	4413ec <ferror@plt+0x3de1c>
  441408:	mov	x0, #0x0                   	// #0
  44140c:	b	4413f0 <ferror@plt+0x3de20>
  441410:	stp	x29, x30, [sp, #-64]!
  441414:	mov	x29, sp
  441418:	stp	x19, x20, [sp, #16]
  44141c:	mov	x19, x0
  441420:	mov	w0, #0x1                   	// #1
  441424:	stp	x21, x22, [sp, #32]
  441428:	add	x22, x19, #0x78
  44142c:	mov	w20, #0x0                   	// #0
  441430:	strb	w0, [x19, #160]
  441434:	str	x23, [sp, #48]
  441438:	mov	x23, #0xfffffffffffffff0    	// #-16
  44143c:	ldr	w0, [x19, #120]
  441440:	cmp	w20, w0
  441444:	b.cs	441490 <ferror@plt+0x3dec0>  // b.hs, b.nlast
  441448:	sxtw	x1, w20
  44144c:	cmp	w20, #0x1
  441450:	b.gt	441480 <ferror@plt+0x3deb0>
  441454:	add	x1, x1, #0x1
  441458:	add	x1, x22, x1, lsl #3
  44145c:	ldr	x21, [x1]
  441460:	cbz	x21, 441478 <ferror@plt+0x3dea8>
  441464:	ldr	x0, [x21, #8]
  441468:	bl	4032a0 <free@plt>
  44146c:	mov	x0, x21
  441470:	mov	x1, #0x18                  	// #24
  441474:	bl	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  441478:	add	w20, w20, #0x1
  44147c:	b	44143c <ferror@plt+0x3de6c>
  441480:	ldr	x2, [x22, #32]
  441484:	add	x1, x23, w20, sxtw #3
  441488:	add	x1, x2, x1
  44148c:	b	44145c <ferror@plt+0x3de8c>
  441490:	ldp	x21, x22, [sp, #32]
  441494:	ldr	x23, [sp, #48]
  441498:	str	wzr, [x19, #120]
  44149c:	ldp	x19, x20, [sp, #16]
  4414a0:	ldp	x29, x30, [sp], #64
  4414a4:	ret
  4414a8:	ldrb	w2, [x0, #160]
  4414ac:	cbnz	w2, 4414d8 <ferror@plt+0x3df08>
  4414b0:	mov	w3, #0x60000000            	// #1610612736
  4414b4:	cmp	w1, w3
  4414b8:	b.ls	4414d8 <ferror@plt+0x3df08>  // b.plast
  4414bc:	stp	x29, x30, [sp, #-16]!
  4414c0:	mov	x29, sp
  4414c4:	bl	441410 <ferror@plt+0x3de40>
  4414c8:	mov	w2, #0x1                   	// #1
  4414cc:	mov	w0, w2
  4414d0:	ldp	x29, x30, [sp], #16
  4414d4:	ret
  4414d8:	mov	w0, w2
  4414dc:	ret
  4414e0:	stp	x29, x30, [sp, #-32]!
  4414e4:	mov	x29, sp
  4414e8:	stp	x19, x20, [sp, #16]
  4414ec:	mov	x19, x0
  4414f0:	mov	x20, x3
  4414f4:	mov	x0, x3
  4414f8:	stp	w1, w2, [x19]
  4414fc:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  441500:	str	x0, [x19, #8]
  441504:	mov	x0, x20
  441508:	bl	402d50 <strlen@plt>
  44150c:	str	x0, [x19, #16]
  441510:	ldp	x19, x20, [sp, #16]
  441514:	ldp	x29, x30, [sp], #32
  441518:	ret
  44151c:	stp	x29, x30, [sp, #-112]!
  441520:	mov	x29, sp
  441524:	stp	x19, x20, [sp, #16]
  441528:	mov	x20, x0
  44152c:	ldr	w0, [x0]
  441530:	mov	w19, w2
  441534:	add	x8, sp, #0x30
  441538:	stp	x21, x22, [sp, #32]
  44153c:	mov	x21, x1
  441540:	mov	w1, #0x1                   	// #1
  441544:	bl	42b730 <ferror@plt+0x28160>
  441548:	ldr	x22, [sp, #48]
  44154c:	cmp	x22, x21
  441550:	b.eq	441568 <ferror@plt+0x3df98>  // b.none
  441554:	mov	w0, #0x0                   	// #0
  441558:	ldp	x19, x20, [sp, #16]
  44155c:	ldp	x21, x22, [sp, #32]
  441560:	ldp	x29, x30, [sp], #112
  441564:	ret
  441568:	ldr	w0, [sp, #56]
  44156c:	cmp	w0, w19
  441570:	b.gt	441554 <ferror@plt+0x3df84>
  441574:	ldr	w0, [x20, #4]
  441578:	add	x8, sp, #0x50
  44157c:	mov	w1, #0x1                   	// #1
  441580:	bl	42b730 <ferror@plt+0x28160>
  441584:	ldr	x0, [sp, #80]
  441588:	cmp	x0, x22
  44158c:	b.ne	441554 <ferror@plt+0x3df84>  // b.any
  441590:	ldr	w0, [sp, #88]
  441594:	cmp	w0, w19
  441598:	cset	w0, ge  // ge = tcont
  44159c:	b	441558 <ferror@plt+0x3df88>
  4415a0:	stp	x29, x30, [sp, #-48]!
  4415a4:	mov	x29, sp
  4415a8:	stp	x19, x20, [sp, #16]
  4415ac:	mov	x19, x0
  4415b0:	ldr	w0, [x0, #4]
  4415b4:	str	x21, [sp, #32]
  4415b8:	cmp	w0, w1
  4415bc:	b.ne	441620 <ferror@plt+0x3e050>  // b.any
  4415c0:	str	w2, [x19, #4]
  4415c4:	mov	x21, x3
  4415c8:	mov	x0, x3
  4415cc:	bl	402d50 <strlen@plt>
  4415d0:	mov	x20, x0
  4415d4:	ldp	x0, x1, [x19, #8]
  4415d8:	add	x1, x1, #0x1
  4415dc:	add	x1, x1, x20
  4415e0:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4415e4:	ldr	x3, [x19, #16]
  4415e8:	str	x0, [x19, #8]
  4415ec:	mov	x2, x20
  4415f0:	mov	x1, x21
  4415f4:	add	x0, x0, x3
  4415f8:	bl	402cd0 <memcpy@plt>
  4415fc:	ldp	x0, x2, [x19, #8]
  441600:	add	x20, x20, x2
  441604:	str	x20, [x19, #16]
  441608:	strb	wzr, [x0, x20]
  44160c:	mov	w0, #0x1                   	// #1
  441610:	ldp	x19, x20, [sp, #16]
  441614:	ldr	x21, [sp, #32]
  441618:	ldp	x29, x30, [sp], #48
  44161c:	ret
  441620:	mov	w0, #0x0                   	// #0
  441624:	b	441610 <ferror@plt+0x3e040>
  441628:	ldr	x1, [x0, #16]
  44162c:	cbz	x1, 441648 <ferror@plt+0x3e078>
  441630:	ldr	x0, [x0, #8]
  441634:	add	x0, x0, x1
  441638:	ldurb	w0, [x0, #-1]
  44163c:	cmp	w0, #0xa
  441640:	cset	w0, eq  // eq = none
  441644:	ret
  441648:	mov	w0, #0x0                   	// #0
  44164c:	b	441644 <ferror@plt+0x3e074>
  441650:	stp	x29, x30, [sp, #-128]!
  441654:	mov	x29, sp
  441658:	stp	x19, x20, [sp, #16]
  44165c:	mov	x19, x0
  441660:	mov	w20, w2
  441664:	stp	x21, x22, [sp, #32]
  441668:	mov	w21, w1
  44166c:	str	x23, [sp, #48]
  441670:	mov	x23, x3
  441674:	bl	4414a8 <ferror@plt+0x3ded8>
  441678:	tst	w0, #0xff
  44167c:	b.ne	44179c <ferror@plt+0x3e1cc>  // b.any
  441680:	mov	w1, w20
  441684:	mov	x0, x19
  441688:	bl	4414a8 <ferror@plt+0x3ded8>
  44168c:	tst	w0, #0xff
  441690:	b.ne	44179c <ferror@plt+0x3e1cc>  // b.any
  441694:	add	x8, sp, #0x40
  441698:	mov	w0, w21
  44169c:	mov	w1, #0x1                   	// #1
  4416a0:	bl	42b730 <ferror@plt+0x28160>
  4416a4:	mov	w0, w20
  4416a8:	mov	w1, #0x1                   	// #1
  4416ac:	ldr	w22, [sp, #76]
  4416b0:	add	x8, sp, #0x60
  4416b4:	bl	42b730 <ferror@plt+0x28160>
  4416b8:	ldr	x1, [sp, #64]
  4416bc:	ldr	x0, [sp, #96]
  4416c0:	cmp	x1, x0
  4416c4:	b.eq	4416e0 <ferror@plt+0x3e110>  // b.none
  4416c8:	mov	x0, x19
  4416cc:	ldp	x19, x20, [sp, #16]
  4416d0:	ldp	x21, x22, [sp, #32]
  4416d4:	ldr	x23, [sp, #48]
  4416d8:	ldp	x29, x30, [sp], #128
  4416dc:	b	441410 <ferror@plt+0x3de40>
  4416e0:	ldr	w1, [sp, #72]
  4416e4:	ldr	w0, [sp, #104]
  4416e8:	cmp	w1, w0
  4416ec:	b.ne	4416c8 <ferror@plt+0x3e0f8>  // b.any
  4416f0:	ldr	w0, [sp, #108]
  4416f4:	cmp	w0, w22
  4416f8:	b.lt	4416c8 <ferror@plt+0x3e0f8>  // b.tstop
  4416fc:	mov	x0, x23
  441700:	mov	w1, #0xa                   	// #10
  441704:	bl	4032f0 <strchr@plt>
  441708:	cbz	x0, 441724 <ferror@plt+0x3e154>
  44170c:	cmp	w21, w20
  441710:	b.ne	4416c8 <ferror@plt+0x3e0f8>  // b.any
  441714:	cmp	w22, #0x1
  441718:	b.ne	4416c8 <ferror@plt+0x3e0f8>  // b.any
  44171c:	ldrb	w0, [x0, #1]
  441720:	cbnz	w0, 4416c8 <ferror@plt+0x3e0f8>
  441724:	mov	x0, x19
  441728:	bl	4413c8 <ferror@plt+0x3ddf8>
  44172c:	mov	x4, x0
  441730:	cbnz	x0, 441774 <ferror@plt+0x3e1a4>
  441734:	mov	x0, #0x18                  	// #24
  441738:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  44173c:	mov	w2, w20
  441740:	mov	x22, x0
  441744:	mov	w1, w21
  441748:	mov	x3, x23
  44174c:	bl	4414e0 <ferror@plt+0x3df10>
  441750:	add	x20, x19, #0x78
  441754:	ldr	w1, [x19, #120]
  441758:	add	w0, w1, #0x1
  44175c:	str	w0, [x19, #120]
  441760:	cmp	w1, #0x1
  441764:	b.gt	4417b0 <ferror@plt+0x3e1e0>
  441768:	add	x1, x20, w1, sxtw #3
  44176c:	str	x22, [x1, #8]
  441770:	b	44179c <ferror@plt+0x3e1cc>
  441774:	bl	441628 <ferror@plt+0x3e058>
  441778:	tst	w0, #0xff
  44177c:	b.ne	441734 <ferror@plt+0x3e164>  // b.any
  441780:	mov	x3, x23
  441784:	mov	w2, w20
  441788:	mov	w1, w21
  44178c:	mov	x0, x4
  441790:	bl	4415a0 <ferror@plt+0x3dfd0>
  441794:	tst	w0, #0xff
  441798:	b.eq	441734 <ferror@plt+0x3e164>  // b.none
  44179c:	ldp	x19, x20, [sp, #16]
  4417a0:	ldp	x21, x22, [sp, #32]
  4417a4:	ldr	x23, [sp, #48]
  4417a8:	ldp	x29, x30, [sp], #128
  4417ac:	ret
  4417b0:	ldr	x0, [x20, #32]
  4417b4:	sub	w19, w1, #0x2
  4417b8:	cbnz	x0, 4417dc <ferror@plt+0x3e20c>
  4417bc:	mov	w0, #0x10                  	// #16
  4417c0:	str	w0, [x20, #24]
  4417c4:	mov	x0, #0x80                  	// #128
  4417c8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4417cc:	str	x0, [x20, #32]
  4417d0:	ldr	x0, [x20, #32]
  4417d4:	str	x22, [x0, w19, sxtw #3]
  4417d8:	b	44179c <ferror@plt+0x3e1cc>
  4417dc:	ldr	w1, [x20, #24]
  4417e0:	cmp	w19, w1
  4417e4:	b.lt	4417d0 <ferror@plt+0x3e200>  // b.tstop
  4417e8:	lsl	w1, w1, #1
  4417ec:	str	w1, [x20, #24]
  4417f0:	sbfiz	x1, x1, #3, #32
  4417f4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  4417f8:	b	4417cc <ferror@plt+0x3e1fc>
  4417fc:	stp	x29, x30, [sp, #-32]!
  441800:	mov	x29, sp
  441804:	stp	x19, x20, [sp, #16]
  441808:	mov	x19, x0
  44180c:	mov	x20, x2
  441810:	ldr	x0, [x0]
  441814:	bl	4400fc <ferror@plt+0x3cb2c>
  441818:	mov	x1, x0
  44181c:	mov	x3, x20
  441820:	mov	w2, w0
  441824:	mov	x0, x19
  441828:	ldp	x19, x20, [sp, #16]
  44182c:	ldp	x29, x30, [sp], #32
  441830:	b	441650 <ferror@plt+0x3e080>
  441834:	mov	x4, x1
  441838:	mov	x3, x0
  44183c:	stp	x29, x30, [sp, #-16]!
  441840:	mov	w1, #0x0                   	// #0
  441844:	mov	x29, sp
  441848:	bl	441144 <ferror@plt+0x3db74>
  44184c:	mov	w1, w0
  441850:	ldp	x29, x30, [sp], #16
  441854:	mov	x2, x4
  441858:	mov	x0, x3
  44185c:	b	4417fc <ferror@plt+0x3e22c>
  441860:	stp	x29, x30, [sp, #-48]!
  441864:	mov	x29, sp
  441868:	stp	x19, x20, [sp, #16]
  44186c:	mov	x19, x0
  441870:	ldr	x0, [x0]
  441874:	str	x21, [sp, #32]
  441878:	mov	x21, x2
  44187c:	bl	4400fc <ferror@plt+0x3cb2c>
  441880:	lsr	x20, x0, #32
  441884:	ldr	x0, [x19]
  441888:	mov	w1, w20
  44188c:	mov	w2, #0x1                   	// #1
  441890:	bl	44052c <ferror@plt+0x3cf5c>
  441894:	cmp	w20, w0
  441898:	b.ne	4418b0 <ferror@plt+0x3e2e0>  // b.any
  44189c:	mov	x0, x19
  4418a0:	ldp	x19, x20, [sp, #16]
  4418a4:	ldr	x21, [sp, #32]
  4418a8:	ldp	x29, x30, [sp], #48
  4418ac:	b	441410 <ferror@plt+0x3de40>
  4418b0:	mov	w2, w0
  4418b4:	mov	x3, x21
  4418b8:	mov	w1, w0
  4418bc:	mov	x0, x19
  4418c0:	ldp	x19, x20, [sp, #16]
  4418c4:	ldr	x21, [sp, #32]
  4418c8:	ldp	x29, x30, [sp], #48
  4418cc:	b	441650 <ferror@plt+0x3e080>
  4418d0:	mov	x4, x1
  4418d4:	mov	x3, x0
  4418d8:	stp	x29, x30, [sp, #-16]!
  4418dc:	mov	w1, #0x0                   	// #0
  4418e0:	mov	x29, sp
  4418e4:	bl	441144 <ferror@plt+0x3db74>
  4418e8:	mov	w1, w0
  4418ec:	ldp	x29, x30, [sp], #16
  4418f0:	mov	x2, x4
  4418f4:	mov	x0, x3
  4418f8:	b	441860 <ferror@plt+0x3e290>
  4418fc:	stp	x29, x30, [sp, #-48]!
  441900:	mov	x29, sp
  441904:	stp	x19, x20, [sp, #16]
  441908:	mov	x19, x0
  44190c:	mov	x20, x1
  441910:	ldr	x0, [x0]
  441914:	stp	x21, x22, [sp, #32]
  441918:	mov	x22, x2
  44191c:	bl	4401e0 <ferror@plt+0x3cc10>
  441920:	mov	w21, w0
  441924:	ldr	x0, [x19]
  441928:	lsr	x1, x20, #32
  44192c:	bl	4401e0 <ferror@plt+0x3cc10>
  441930:	mov	w20, w0
  441934:	mov	w1, w0
  441938:	mov	w2, #0x1                   	// #1
  44193c:	ldr	x0, [x19]
  441940:	bl	44052c <ferror@plt+0x3cf5c>
  441944:	cmp	w20, w0
  441948:	b.ne	441960 <ferror@plt+0x3e390>  // b.any
  44194c:	mov	x0, x19
  441950:	ldp	x19, x20, [sp, #16]
  441954:	ldp	x21, x22, [sp, #32]
  441958:	ldp	x29, x30, [sp], #48
  44195c:	b	441410 <ferror@plt+0x3de40>
  441960:	mov	w2, w0
  441964:	mov	x3, x22
  441968:	mov	w1, w21
  44196c:	mov	x0, x19
  441970:	ldp	x19, x20, [sp, #16]
  441974:	ldp	x21, x22, [sp, #32]
  441978:	ldp	x29, x30, [sp], #48
  44197c:	b	441650 <ferror@plt+0x3e080>
  441980:	adrp	x2, 485000 <_obstack_memory_used@@Base+0x28c10>
  441984:	add	x2, x2, #0x122
  441988:	b	4418fc <ferror@plt+0x3e32c>
  44198c:	stp	x29, x30, [sp, #-32]!
  441990:	mov	x29, sp
  441994:	str	x19, [sp, #16]
  441998:	mov	x19, x0
  44199c:	ldr	x0, [x0]
  4419a0:	bl	4400fc <ferror@plt+0x3cb2c>
  4419a4:	mov	x1, x0
  4419a8:	mov	x0, x19
  4419ac:	ldr	x19, [sp, #16]
  4419b0:	ldp	x29, x30, [sp], #32
  4419b4:	b	441980 <ferror@plt+0x3e3b0>
  4419b8:	mov	x3, x0
  4419bc:	stp	x29, x30, [sp, #-16]!
  4419c0:	mov	w1, #0x0                   	// #0
  4419c4:	mov	x29, sp
  4419c8:	bl	441144 <ferror@plt+0x3db74>
  4419cc:	mov	w1, w0
  4419d0:	ldp	x29, x30, [sp], #16
  4419d4:	mov	x0, x3
  4419d8:	b	44198c <ferror@plt+0x3e3bc>
  4419dc:	stp	x29, x30, [sp, #-32]!
  4419e0:	mov	x29, sp
  4419e4:	stp	x19, x20, [sp, #16]
  4419e8:	mov	x19, x0
  4419ec:	mov	x20, x2
  4419f0:	ldr	x0, [x0]
  4419f4:	bl	4400fc <ferror@plt+0x3cb2c>
  4419f8:	mov	x1, x0
  4419fc:	mov	x2, x20
  441a00:	mov	x0, x19
  441a04:	ldp	x19, x20, [sp, #16]
  441a08:	ldp	x29, x30, [sp], #32
  441a0c:	b	4418fc <ferror@plt+0x3e32c>
  441a10:	mov	x4, x1
  441a14:	mov	x3, x0
  441a18:	stp	x29, x30, [sp, #-16]!
  441a1c:	mov	w1, #0x0                   	// #0
  441a20:	mov	x29, sp
  441a24:	bl	441144 <ferror@plt+0x3db74>
  441a28:	mov	w1, w0
  441a2c:	ldp	x29, x30, [sp], #16
  441a30:	mov	x2, x4
  441a34:	mov	x0, x3
  441a38:	b	4419dc <ferror@plt+0x3e40c>
  441a3c:	ldr	w1, [x0, #12]
  441a40:	mov	w2, #0x18                  	// #24
  441a44:	ldr	x0, [x0]
  441a48:	sub	w1, w1, #0x1
  441a4c:	smaddl	x0, w1, w2, x0
  441a50:	ret
  441a54:	ldrb	w3, [x0, #6]
  441a58:	mov	w2, #0x1                   	// #1
  441a5c:	lsl	w2, w2, w3
  441a60:	ldr	w3, [x0]
  441a64:	sub	w2, w2, #0x1
  441a68:	ldrb	w0, [x0, #7]
  441a6c:	sub	w1, w1, w3
  441a70:	and	w2, w2, w1
  441a74:	lsr	w0, w2, w0
  441a78:	ret
  441a7c:	mov	x4, x0
  441a80:	cmp	w2, #0x1
  441a84:	b.eq	441a9c <ferror@plt+0x3e4cc>  // b.none
  441a88:	ldp	x0, x5, [x0]
  441a8c:	cmp	w2, #0x2
  441a90:	csel	x0, x0, x5, ne  // ne = any
  441a94:	cbnz	x0, 441aac <ferror@plt+0x3e4dc>
  441a98:	ret
  441a9c:	add	x0, x0, #0x10
  441aa0:	cbnz	x3, 441ad0 <ferror@plt+0x3e500>
  441aa4:	add	x0, x0, x1, lsl #3
  441aa8:	b	441a98 <ferror@plt+0x3e4c8>
  441aac:	cbz	x3, 441aa4 <ferror@plt+0x3e4d4>
  441ab0:	cbnz	w2, 441ac4 <ferror@plt+0x3e4f4>
  441ab4:	ldr	x2, [x4, #32]
  441ab8:	add	x2, x2, x1, lsl #2
  441abc:	str	x2, [x3]
  441ac0:	b	441aa4 <ferror@plt+0x3e4d4>
  441ac4:	b.ne	441ad0 <ferror@plt+0x3e500>  // b.any
  441ac8:	ldr	x2, [x4, #40]
  441acc:	b	441ab8 <ferror@plt+0x3e4e8>
  441ad0:	ldr	x2, [x0, x1, lsl #3]
  441ad4:	b	441abc <ferror@plt+0x3e4ec>
  441ad8:	stp	x29, x30, [sp, #-32]!
  441adc:	mov	x7, x1
  441ae0:	mov	w6, w2
  441ae4:	tst	w5, #0xff
  441ae8:	mov	x29, sp
  441aec:	mov	x1, x3
  441af0:	add	x3, sp, #0x18
  441af4:	mov	w2, w4
  441af8:	csel	x3, x3, xzr, ne  // ne = any
  441afc:	str	xzr, [sp, #24]
  441b00:	bl	441a7c <ferror@plt+0x3e4ac>
  441b04:	str	x7, [x0]
  441b08:	ldr	x0, [sp, #24]
  441b0c:	cbz	x0, 441b14 <ferror@plt+0x3e544>
  441b10:	str	w6, [x0]
  441b14:	ldp	x29, x30, [sp], #32
  441b18:	ret
  441b1c:	and	w1, w1, #0xff
  441b20:	strb	w1, [x0]
  441b24:	str	w2, [x0, #4]
  441b28:	mov	x6, x0
  441b2c:	stp	x4, xzr, [x0, #8]
  441b30:	cbz	w1, 441b64 <ferror@plt+0x3e594>
  441b34:	stp	x29, x30, [sp, #-32]!
  441b38:	mov	x0, x3
  441b3c:	mov	x1, #0x0                   	// #0
  441b40:	mov	x29, sp
  441b44:	add	x3, sp, #0x18
  441b48:	str	xzr, [sp, #24]
  441b4c:	bl	441a7c <ferror@plt+0x3e4ac>
  441b50:	cbz	x0, 441b58 <ferror@plt+0x3e588>
  441b54:	ldr	x0, [sp, #24]
  441b58:	str	x0, [x6, #16]
  441b5c:	ldp	x29, x30, [sp], #32
  441b60:	ret
  441b64:	ret
  441b68:	cbz	x0, 441b80 <ferror@plt+0x3e5b0>
  441b6c:	ldr	w1, [x0, #48]
  441b70:	ldr	x0, [x0, #40]
  441b74:	cmp	w1, #0x2
  441b78:	b.ne	441b80 <ferror@plt+0x3e5b0>  // b.any
  441b7c:	ldr	x0, [x0]
  441b80:	ret
  441b84:	stp	x29, x30, [sp, #-32]!
  441b88:	mov	x29, sp
  441b8c:	str	x19, [sp, #16]
  441b90:	mov	x19, x1
  441b94:	bl	43c144 <ferror@plt+0x38b74>
  441b98:	strh	wzr, [x0, #6]
  441b9c:	mov	w1, #0x53                  	// #83
  441ba0:	strb	w1, [x0, #4]
  441ba4:	str	x19, [x0, #8]
  441ba8:	ldr	x19, [sp, #16]
  441bac:	ldp	x29, x30, [sp], #32
  441bb0:	ret
  441bb4:	stp	x29, x30, [sp, #-48]!
  441bb8:	mov	x29, sp
  441bbc:	stp	x19, x20, [sp, #16]
  441bc0:	mov	x20, x0
  441bc4:	str	x21, [sp, #32]
  441bc8:	lsl	x21, x1, #3
  441bcc:	cbz	x2, 441be0 <ferror@plt+0x3e610>
  441bd0:	mov	x19, x2
  441bd4:	lsl	x0, x1, #4
  441bd8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  441bdc:	str	x0, [x19]
  441be0:	mov	x1, x21
  441be4:	mov	x0, x20
  441be8:	ldp	x19, x20, [sp, #16]
  441bec:	ldr	x21, [sp, #32]
  441bf0:	ldp	x29, x30, [sp], #48
  441bf4:	b	43cbdc <ferror@plt+0x3960c>
  441bf8:	stp	x29, x30, [sp, #-32]!
  441bfc:	add	x1, x1, x2
  441c00:	mov	x29, sp
  441c04:	ldr	x4, [x0, #56]
  441c08:	ldr	x3, [x4, #24]
  441c0c:	ldr	x4, [x4, #16]
  441c10:	str	x19, [sp, #16]
  441c14:	mov	x19, x0
  441c18:	sub	x3, x3, x4
  441c1c:	cmp	x3, x1
  441c20:	b.cs	441c2c <ferror@plt+0x3e65c>  // b.hs, b.nlast
  441c24:	add	x1, x0, #0x38
  441c28:	bl	43cd88 <ferror@plt+0x397b8>
  441c2c:	ldr	x0, [x19, #56]
  441c30:	ldr	x19, [sp, #16]
  441c34:	ldp	x29, x30, [sp], #32
  441c38:	ldr	x0, [x0, #16]
  441c3c:	ret
  441c40:	ldr	w1, [x0, #4]
  441c44:	tst	w1, #0xfffffffd
  441c48:	b.ne	441c6c <ferror@plt+0x3e69c>  // b.any
  441c4c:	ldr	x1, [x0, #8]
  441c50:	add	x1, x1, #0x8
  441c54:	str	x1, [x0, #8]
  441c58:	ldrb	w1, [x0]
  441c5c:	cbz	w1, 441c6c <ferror@plt+0x3e69c>
  441c60:	ldr	x1, [x0, #16]
  441c64:	add	x1, x1, #0x4
  441c68:	str	x1, [x0, #16]
  441c6c:	ret
  441c70:	stp	x29, x30, [sp, #-32]!
  441c74:	mov	x29, sp
  441c78:	str	x19, [sp, #16]
  441c7c:	mov	x19, x0
  441c80:	ldr	x0, [x0]
  441c84:	ldr	x0, [x0]
  441c88:	cbnz	x0, 441cb0 <ferror@plt+0x3e6e0>
  441c8c:	mov	x0, #0x38                  	// #56
  441c90:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  441c94:	ldr	x1, [x19]
  441c98:	stp	xzr, xzr, [x0]
  441c9c:	str	x1, [x0, #8]
  441ca0:	stp	xzr, xzr, [x0, #16]
  441ca4:	stp	xzr, xzr, [x0, #32]
  441ca8:	str	xzr, [x0, #48]
  441cac:	str	x0, [x1]
  441cb0:	str	x0, [x19]
  441cb4:	ldr	x19, [sp, #16]
  441cb8:	ldp	x29, x30, [sp], #32
  441cbc:	ret
  441cc0:	stp	x29, x30, [sp, #-64]!
  441cc4:	mov	x6, x0
  441cc8:	mov	x29, sp
  441ccc:	stp	x19, x20, [sp, #16]
  441cd0:	stp	x21, x22, [sp, #32]
  441cd4:	mov	x22, x4
  441cd8:	mov	w21, w5
  441cdc:	stp	x23, x24, [sp, #48]
  441ce0:	mov	x24, x2
  441ce4:	mov	x23, x3
  441ce8:	cbnz	x1, 441d40 <ferror@plt+0x3e770>
  441cec:	ldr	x0, [x0, #136]
  441cf0:	bl	441b68 <ferror@plt+0x3e598>
  441cf4:	mov	x20, x0
  441cf8:	add	x0, x6, #0x88
  441cfc:	bl	441c70 <ferror@plt+0x3e6a0>
  441d00:	mov	x19, x0
  441d04:	mov	w0, #0x2                   	// #2
  441d08:	add	x21, x22, w21, uxtw #3
  441d0c:	str	x24, [x19, #32]
  441d10:	str	w0, [x19, #48]
  441d14:	mov	x0, #0x18                  	// #24
  441d18:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  441d1c:	stp	x20, x23, [x0]
  441d20:	str	x23, [x0, #16]
  441d24:	ldp	x23, x24, [sp, #48]
  441d28:	stp	x22, x21, [x19, #16]
  441d2c:	str	x0, [x19, #40]
  441d30:	ldp	x19, x20, [sp, #16]
  441d34:	ldp	x21, x22, [sp, #32]
  441d38:	ldp	x29, x30, [sp], #64
  441d3c:	ret
  441d40:	mov	x20, x1
  441d44:	b	441cf8 <ferror@plt+0x3e728>
  441d48:	stp	x29, x30, [sp, #-32]!
  441d4c:	mov	x29, sp
  441d50:	stp	x19, x20, [sp, #16]
  441d54:	mov	x19, x1
  441d58:	mov	x20, x2
  441d5c:	bl	43c144 <ferror@plt+0x38b74>
  441d60:	ldr	x1, [x19]
  441d64:	ldrb	w1, [x1, #4]
  441d68:	strb	w1, [x0, #4]
  441d6c:	ldr	x1, [x19]
  441d70:	ldp	x2, x3, [x1, #8]
  441d74:	stp	x2, x3, [x0, #8]
  441d78:	ldrh	w2, [x20]
  441d7c:	ldr	x1, [x19]
  441d80:	tbz	w2, #3, 441da0 <ferror@plt+0x3e7d0>
  441d84:	ldrh	w2, [x1, #6]
  441d88:	orr	w2, w2, #0x8
  441d8c:	strh	w2, [x0, #6]
  441d90:	str	x0, [x19]
  441d94:	ldp	x19, x20, [sp, #16]
  441d98:	ldp	x29, x30, [sp], #32
  441d9c:	ret
  441da0:	ldrh	w2, [x1, #6]
  441da4:	and	w2, w2, #0xfffffff7
  441da8:	and	w2, w2, #0xffff
  441dac:	b	441d8c <ferror@plt+0x3e7bc>
  441db0:	stp	x29, x30, [sp, #-64]!
  441db4:	mov	x29, sp
  441db8:	stp	x19, x20, [sp, #16]
  441dbc:	ldr	x19, [x0, #16]
  441dc0:	str	x23, [sp, #48]
  441dc4:	mov	x23, x2
  441dc8:	mov	w2, w3
  441dcc:	mov	w3, w4
  441dd0:	stp	x21, x22, [sp, #32]
  441dd4:	mov	x21, x0
  441dd8:	ldr	x4, [x0, #24]
  441ddc:	cmp	x19, x4
  441de0:	b.ls	441dfc <ferror@plt+0x3e82c>  // b.plast
  441de4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441de8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441dec:	add	x2, x2, #0x4c8
  441df0:	add	x0, x0, #0x4de
  441df4:	mov	w1, #0x953                 	// #2387
  441df8:	bl	403600 <ferror@plt+0x30>
  441dfc:	mov	x22, x1
  441e00:	cbz	x1, 441e2c <ferror@plt+0x3e85c>
  441e04:	ldr	x20, [x21, #8]
  441e08:	mov	x0, x5
  441e0c:	sub	x20, x19, x20
  441e10:	ubfx	x20, x20, #3, #32
  441e14:	lsl	x20, x20, #2
  441e18:	cbz	x5, 441e28 <ferror@plt+0x3e858>
  441e1c:	mov	w1, w6
  441e20:	bl	43fa14 <ferror@plt+0x3c444>
  441e24:	mov	w2, w0
  441e28:	str	w2, [x22, x20]
  441e2c:	mov	x0, x19
  441e30:	ldp	x19, x20, [sp, #16]
  441e34:	str	x23, [x0], #8
  441e38:	ldr	x23, [sp, #48]
  441e3c:	str	x0, [x21, #16]
  441e40:	ldp	x21, x22, [sp, #32]
  441e44:	ldp	x29, x30, [sp], #64
  441e48:	ret
  441e4c:	ldrb	w2, [x0, #19]
  441e50:	mov	x1, x0
  441e54:	ldr	w0, [x0, #12]
  441e58:	tbz	w2, #6, 441e7c <ferror@plt+0x3e8ac>
  441e5c:	mov	x4, #0x18                  	// #24
  441e60:	sub	w3, w0, #0x1
  441e64:	cbz	w0, 441e7c <ferror@plt+0x3e8ac>
  441e68:	mov	w2, w3
  441e6c:	madd	x2, x2, x4, x1
  441e70:	ldrb	w2, [x2, #28]
  441e74:	cmp	w2, #0x26
  441e78:	b.eq	441e80 <ferror@plt+0x3e8b0>  // b.none
  441e7c:	ret
  441e80:	mov	w0, w3
  441e84:	b	441e60 <ferror@plt+0x3e890>
  441e88:	cbz	x1, 441eac <ferror@plt+0x3e8dc>
  441e8c:	ldr	x2, [x0, #16]
  441e90:	ldr	x0, [x0, #8]
  441e94:	cmp	x2, x0
  441e98:	b.eq	441eac <ferror@plt+0x3e8dc>  // b.none
  441e9c:	sub	x2, x2, #0x8
  441ea0:	cmp	x1, x2
  441ea4:	cset	w0, eq  // eq = none
  441ea8:	ret
  441eac:	mov	w0, #0x0                   	// #0
  441eb0:	b	441ea8 <ferror@plt+0x3e8d8>
  441eb4:	stp	x29, x30, [sp, #-48]!
  441eb8:	mov	x29, sp
  441ebc:	stp	x19, x20, [sp, #16]
  441ec0:	mov	x20, x0
  441ec4:	ldrb	w0, [x1, #18]
  441ec8:	str	x21, [sp, #32]
  441ecc:	and	w0, w0, #0x3
  441ed0:	cmp	w0, #0x2
  441ed4:	b.ne	441f1c <ferror@plt+0x3e94c>  // b.any
  441ed8:	ldr	x21, [x1, #24]
  441edc:	mov	x19, x1
  441ee0:	ldrb	w0, [x21, #19]
  441ee4:	tbnz	w0, #5, 441f1c <ferror@plt+0x3e94c>
  441ee8:	ldr	w1, [x21, #8]
  441eec:	ldr	x0, [x20, #40]
  441ef0:	bl	43fe10 <ferror@plt+0x3c840>
  441ef4:	ldr	w0, [x0, #20]
  441ef8:	cbnz	w0, 441f1c <ferror@plt+0x3e94c>
  441efc:	ldr	w2, [x21, #8]
  441f00:	adrp	x4, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441f04:	ldr	x5, [x19]
  441f08:	add	x4, x4, #0x4f3
  441f0c:	mov	x0, x20
  441f10:	mov	w3, #0x0                   	// #0
  441f14:	mov	w1, #0xe                   	// #14
  441f18:	bl	435d68 <ferror@plt+0x32798>
  441f1c:	mov	w0, #0x1                   	// #1
  441f20:	ldp	x19, x20, [sp, #16]
  441f24:	ldr	x21, [sp, #32]
  441f28:	ldp	x29, x30, [sp], #48
  441f2c:	ret
  441f30:	mov	w2, w2
  441f34:	mov	x4, #0x0                   	// #0
  441f38:	mov	w5, #0x5c                  	// #92
  441f3c:	cmp	x4, x2
  441f40:	b.eq	441f74 <ferror@plt+0x3e9a4>  // b.none
  441f44:	ldrb	w3, [x1, x4]
  441f48:	cmp	w3, #0x22
  441f4c:	b.eq	441f64 <ferror@plt+0x3e994>  // b.none
  441f50:	cmp	w3, #0x5c
  441f54:	b.eq	441f64 <ferror@plt+0x3e994>  // b.none
  441f58:	cmp	w3, #0xa
  441f5c:	b.ne	441f68 <ferror@plt+0x3e998>  // b.any
  441f60:	mov	w3, #0x6e                  	// #110
  441f64:	strb	w5, [x0], #1
  441f68:	add	x4, x4, #0x1
  441f6c:	strb	w3, [x0], #1
  441f70:	b	441f3c <ferror@plt+0x3e96c>
  441f74:	ret
  441f78:	stp	x29, x30, [sp, #-80]!
  441f7c:	mov	x29, sp
  441f80:	stp	x19, x20, [sp, #16]
  441f84:	mov	x19, x0
  441f88:	ldr	w0, [x1, #24]
  441f8c:	stp	x21, x22, [sp, #32]
  441f90:	mov	x21, x1
  441f94:	cmp	w0, #0xa
  441f98:	stp	x23, x24, [sp, #48]
  441f9c:	b.hi	441fbc <ferror@plt+0x3e9ec>  // b.pmore
  441fa0:	mov	w1, w2
  441fa4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441fa8:	add	x2, x2, #0xcd0
  441fac:	ldrh	w2, [x2, w0, uxtw #1]
  441fb0:	adr	x3, 441fbc <ferror@plt+0x3e9ec>
  441fb4:	add	x2, x3, w2, sxth #2
  441fb8:	br	x2
  441fbc:	ldr	x3, [x21]
  441fc0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441fc4:	mov	x0, x19
  441fc8:	add	x2, x2, #0x50a
  441fcc:	mov	w1, #0x4                   	// #4
  441fd0:	bl	435b3c <ferror@plt+0x3256c>
  441fd4:	mov	w20, #0x1                   	// #1
  441fd8:	b	442148 <ferror@plt+0x3eb78>
  441fdc:	ldrb	w0, [x19, #1134]
  441fe0:	cbz	w0, 441ffc <ferror@plt+0x3ea2c>
  441fe4:	ldr	x3, [x21]
  441fe8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  441fec:	mov	x0, x19
  441ff0:	add	x2, x2, #0x526
  441ff4:	mov	w1, #0x14                  	// #20
  441ff8:	bl	435ba8 <ferror@plt+0x325d8>
  441ffc:	mov	x0, x19
  442000:	bl	43ae2c <ferror@plt+0x3785c>
  442004:	ldr	x1, [x0, #88]
  442008:	mov	x20, x0
  44200c:	cbnz	x1, 442064 <ferror@plt+0x3ea94>
  442010:	bl	43ae34 <ferror@plt+0x37864>
  442014:	cbz	x0, 442064 <ferror@plt+0x3ea94>
  442018:	bl	43adb0 <ferror@plt+0x377e0>
  44201c:	cbz	x0, 442070 <ferror@plt+0x3eaa0>
  442020:	add	x0, x0, #0x58
  442024:	bl	402ec0 <localtime@plt>
  442028:	cbz	x0, 442070 <ferror@plt+0x3eaa0>
  44202c:	bl	403400 <asctime@plt>
  442030:	mov	x23, x0
  442034:	bl	402d50 <strlen@plt>
  442038:	add	x1, x0, #0x2
  44203c:	mov	x22, x0
  442040:	mov	x0, x19
  442044:	bl	43ce0c <ferror@plt+0x3983c>
  442048:	mov	x21, x0
  44204c:	mov	w24, #0x22                  	// #34
  442050:	strb	w24, [x0], #1
  442054:	mov	x1, x23
  442058:	bl	403360 <strcpy@plt>
  44205c:	strb	w24, [x21, x22]
  442060:	str	x21, [x20, #88]
  442064:	ldr	x21, [x20, #88]
  442068:	cbnz	x21, 4420fc <ferror@plt+0x3eb2c>
  44206c:	b	441fd4 <ferror@plt+0x3ea04>
  442070:	mov	x0, x19
  442074:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442078:	mov	w1, #0x0                   	// #0
  44207c:	add	x2, x2, #0x553
  442080:	bl	435fe0 <ferror@plt+0x32a10>
  442084:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442088:	add	x0, x0, #0x576
  44208c:	str	x0, [x20, #88]
  442090:	b	442064 <ferror@plt+0x3ea94>
  442094:	cmp	w0, #0x2
  442098:	b.ne	442114 <ferror@plt+0x3eb44>  // b.any
  44209c:	ldr	x0, [x19, #40]
  4420a0:	ldr	w1, [x0, #60]
  4420a4:	bl	440314 <ferror@plt+0x3cd44>
  4420a8:	mov	x20, x0
  4420ac:	ldr	x1, [x19, #1080]
  4420b0:	cbz	x1, 4420c0 <ferror@plt+0x3eaf0>
  4420b4:	mov	x0, x20
  4420b8:	blr	x1
  4420bc:	mov	x20, x0
  4420c0:	mov	x0, x20
  4420c4:	bl	402d50 <strlen@plt>
  4420c8:	lsl	w1, w0, #1
  4420cc:	mov	x22, x0
  4420d0:	add	w1, w1, #0x3
  4420d4:	mov	x0, x19
  4420d8:	bl	43ce0c <ferror@plt+0x3983c>
  4420dc:	mov	x21, x0
  4420e0:	mov	w1, #0x22                  	// #34
  4420e4:	strb	w1, [x0], #1
  4420e8:	mov	w2, w22
  4420ec:	mov	x1, x20
  4420f0:	bl	441f30 <ferror@plt+0x3e960>
  4420f4:	mov	w1, #0x22                  	// #34
  4420f8:	strh	w1, [x0]
  4420fc:	mov	x0, x21
  442100:	ldp	x19, x20, [sp, #16]
  442104:	ldp	x21, x22, [sp, #32]
  442108:	ldp	x23, x24, [sp, #48]
  44210c:	ldp	x29, x30, [sp], #80
  442110:	ret
  442114:	ldr	x0, [x19, #288]
  442118:	bl	43ada8 <ferror@plt+0x377d8>
  44211c:	mov	x20, x0
  442120:	cbnz	x0, 4420ac <ferror@plt+0x3eadc>
  442124:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442128:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44212c:	add	x2, x2, #0x591
  442130:	add	x0, x0, #0x4de
  442134:	mov	w1, #0x1c5                 	// #453
  442138:	bl	403600 <ferror@plt+0x30>
  44213c:	ldr	x0, [x19, #40]
  442140:	ldr	w20, [x0, #48]
  442144:	sub	w20, w20, #0x1
  442148:	mov	x0, x19
  44214c:	mov	x1, #0x15                  	// #21
  442150:	bl	43ce0c <ferror@plt+0x3983c>
  442154:	mov	x21, x0
  442158:	mov	w2, w20
  44215c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  442160:	add	x1, x1, #0xf6c
  442164:	bl	402e00 <sprintf@plt>
  442168:	b	4420fc <ferror@plt+0x3eb2c>
  44216c:	ldrb	w2, [x19, #1160]
  442170:	ldr	x0, [x19, #40]
  442174:	cbz	w2, 44218c <ferror@plt+0x3ebbc>
  442178:	ldr	w1, [x0, #60]
  44217c:	ldr	x0, [x19, #40]
  442180:	bl	4402b4 <ferror@plt+0x3cce4>
  442184:	mov	w20, w0
  442188:	b	442148 <ferror@plt+0x3eb78>
  44218c:	mov	x3, #0x0                   	// #0
  442190:	mov	w2, #0x0                   	// #0
  442194:	bl	4403f0 <ferror@plt+0x3ce20>
  442198:	mov	w1, w0
  44219c:	b	44217c <ferror@plt+0x3ebac>
  4421a0:	ldr	x0, [x19]
  4421a4:	cbz	x0, 441fd4 <ferror@plt+0x3ea04>
  4421a8:	ldrb	w0, [x0, #106]
  4421ac:	cmp	w0, #0x0
  4421b0:	cset	w20, eq  // eq = none
  4421b4:	b	442148 <ferror@plt+0x3eb78>
  4421b8:	ldrb	w0, [x19, #1134]
  4421bc:	cbz	w0, 4421d8 <ferror@plt+0x3ec08>
  4421c0:	ldr	x3, [x21]
  4421c4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4421c8:	mov	x0, x19
  4421cc:	add	x2, x2, #0x526
  4421d0:	mov	w1, #0x14                  	// #20
  4421d4:	bl	435ba8 <ferror@plt+0x325d8>
  4421d8:	ldr	x0, [x19, #640]
  4421dc:	cbnz	x0, 442274 <ferror@plt+0x3eca4>
  4421e0:	ldr	x0, [x19, #656]
  4421e4:	cmn	x0, #0x2
  4421e8:	b.ne	442200 <ferror@plt+0x3ec30>  // b.any
  4421ec:	ldr	x1, [x19, #1056]
  4421f0:	cbz	x1, 442288 <ferror@plt+0x3ecb8>
  4421f4:	mov	x0, x19
  4421f8:	blr	x1
  4421fc:	str	x0, [x19, #656]
  442200:	ldr	x0, [x19, #656]
  442204:	tbnz	x0, #63, 442288 <ferror@plt+0x3ecb8>
  442208:	add	x0, x19, #0x290
  44220c:	bl	403090 <gmtime@plt>
  442210:	mov	x20, x0
  442214:	cbz	x0, 4422bc <ferror@plt+0x3ecec>
  442218:	mov	x1, #0xe                   	// #14
  44221c:	mov	x0, x19
  442220:	bl	43ce0c <ferror@plt+0x3983c>
  442224:	ldrsw	x2, [x20, #16]
  442228:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44222c:	add	x1, x1, #0xce8
  442230:	ldr	w3, [x20, #12]
  442234:	ldr	w4, [x20, #20]
  442238:	str	x0, [x19, #640]
  44223c:	ldr	x2, [x1, x2, lsl #3]
  442240:	add	w4, w4, #0x76c
  442244:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442248:	add	x1, x1, #0x5a9
  44224c:	bl	402e00 <sprintf@plt>
  442250:	mov	x1, #0xb                   	// #11
  442254:	mov	x0, x19
  442258:	bl	43ce0c <ferror@plt+0x3983c>
  44225c:	ldp	w4, w3, [x20]
  442260:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442264:	ldr	w2, [x20, #8]
  442268:	add	x1, x1, #0x5b6
  44226c:	str	x0, [x19, #648]
  442270:	bl	402e00 <sprintf@plt>
  442274:	ldr	w0, [x21, #24]
  442278:	cmp	w0, #0x1
  44227c:	b.ne	4422ec <ferror@plt+0x3ed1c>  // b.any
  442280:	ldr	x21, [x19, #640]
  442284:	b	442068 <ferror@plt+0x3ea98>
  442288:	bl	4034e0 <__errno_location@plt>
  44228c:	mov	x20, x0
  442290:	mov	x0, #0x0                   	// #0
  442294:	str	wzr, [x20]
  442298:	bl	402f30 <time@plt>
  44229c:	str	x0, [sp, #72]
  4422a0:	cmn	x0, #0x1
  4422a4:	b.ne	4422b0 <ferror@plt+0x3ece0>  // b.any
  4422a8:	ldr	w0, [x20]
  4422ac:	cbnz	w0, 4422bc <ferror@plt+0x3ecec>
  4422b0:	add	x0, sp, #0x48
  4422b4:	bl	402ec0 <localtime@plt>
  4422b8:	b	442210 <ferror@plt+0x3ec40>
  4422bc:	mov	x0, x19
  4422c0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4422c4:	mov	w1, #0x0                   	// #0
  4422c8:	add	x2, x2, #0x5c7
  4422cc:	bl	435fe0 <ferror@plt+0x32a10>
  4422d0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4422d4:	add	x0, x0, #0x5e9
  4422d8:	str	x0, [x19, #640]
  4422dc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4422e0:	add	x0, x0, #0x5f7
  4422e4:	str	x0, [x19, #648]
  4422e8:	b	442274 <ferror@plt+0x3eca4>
  4422ec:	ldr	x21, [x19, #648]
  4422f0:	b	442068 <ferror@plt+0x3ea98>
  4422f4:	ldrb	w0, [x19, #1244]
  4422f8:	cbz	w0, 442318 <ferror@plt+0x3ed48>
  4422fc:	ldrb	w0, [x19, #16]
  442300:	cbz	w0, 442318 <ferror@plt+0x3ed48>
  442304:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442308:	mov	x0, x19
  44230c:	add	x2, x2, #0x602
  442310:	mov	w1, #0x3                   	// #3
  442314:	bl	435b3c <ferror@plt+0x3256c>
  442318:	ldr	w20, [x19, #1376]
  44231c:	add	w0, w20, #0x1
  442320:	str	w0, [x19, #1376]
  442324:	b	442148 <ferror@plt+0x3eb78>
  442328:	ldr	x1, [x19, #1040]
  44232c:	mov	x0, x19
  442330:	blr	x1
  442334:	b	442184 <ferror@plt+0x3ebb4>
  442338:	ldrh	w4, [x1, #16]
  44233c:	cmp	w4, w3
  442340:	b.eq	442428 <ferror@plt+0x3ee58>  // b.none
  442344:	stp	x29, x30, [sp, #-48]!
  442348:	mov	x29, sp
  44234c:	stp	x19, x20, [sp, #16]
  442350:	mov	x19, x0
  442354:	mov	x20, x2
  442358:	str	x21, [sp, #32]
  44235c:	mov	x21, x1
  442360:	b.ls	44240c <ferror@plt+0x3ee3c>  // b.plast
  442364:	add	w1, w3, #0x1
  442368:	cmp	w4, w1
  44236c:	b.ne	4423c4 <ferror@plt+0x3edf4>  // b.any
  442370:	ldrb	w1, [x21, #19]
  442374:	tbz	w1, #3, 4423c4 <ferror@plt+0x3edf4>
  442378:	ldrb	w2, [x0, #1154]
  44237c:	cbz	w2, 4423a4 <ferror@plt+0x3edd4>
  442380:	tbnz	w1, #4, 4423a4 <ferror@plt+0x3edd4>
  442384:	ldrb	w1, [x0, #1167]
  442388:	cbnz	w1, 4423a4 <ferror@plt+0x3edd4>
  44238c:	ldrb	w1, [x0, #1120]
  442390:	cbz	w1, 4423b8 <ferror@plt+0x3ede8>
  442394:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442398:	add	x2, x2, #0x63f
  44239c:	mov	w1, #0x2                   	// #2
  4423a0:	bl	435b3c <ferror@plt+0x3256c>
  4423a4:	mov	w0, #0x1                   	// #1
  4423a8:	ldp	x19, x20, [sp, #16]
  4423ac:	ldr	x21, [sp, #32]
  4423b0:	ldp	x29, x30, [sp], #48
  4423b4:	ret
  4423b8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4423bc:	add	x2, x2, #0x68a
  4423c0:	b	44239c <ferror@plt+0x3edcc>
  4423c4:	mov	w5, w3
  4423c8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4423cc:	ldr	x3, [x20]
  4423d0:	add	x2, x2, #0x6d3
  4423d4:	mov	x0, x19
  4423d8:	mov	w1, #0x3                   	// #3
  4423dc:	bl	435b3c <ferror@plt+0x3256c>
  4423e0:	ldr	w2, [x21, #8]
  4423e4:	cmp	w2, #0x2
  4423e8:	b.ls	442404 <ferror@plt+0x3ee34>  // b.plast
  4423ec:	ldr	x4, [x20]
  4423f0:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4423f4:	mov	x0, x19
  4423f8:	add	x3, x3, #0x739
  4423fc:	mov	w1, #0x5                   	// #5
  442400:	bl	435ec4 <ferror@plt+0x328f4>
  442404:	mov	w0, #0x0                   	// #0
  442408:	b	4423a8 <ferror@plt+0x3edd8>
  44240c:	mov	w5, w4
  442410:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442414:	mov	w4, w3
  442418:	add	x2, x2, #0x707
  44241c:	mov	w1, #0x3                   	// #3
  442420:	ldr	x3, [x20]
  442424:	b	4423dc <ferror@plt+0x3ee0c>
  442428:	mov	w0, #0x1                   	// #1
  44242c:	ret
  442430:	stp	x29, x30, [sp, #-48]!
  442434:	mov	x4, x0
  442438:	mov	x29, sp
  44243c:	stp	x19, x20, [sp, #16]
  442440:	mov	w20, w3
  442444:	str	x21, [sp, #32]
  442448:	mov	x21, x2
  44244c:	cbnz	x1, 44248c <ferror@plt+0x3eebc>
  442450:	ldr	x0, [x0, #136]
  442454:	bl	441b68 <ferror@plt+0x3e598>
  442458:	mov	x19, x0
  44245c:	add	x0, x4, #0x88
  442460:	bl	441c70 <ferror@plt+0x3e6a0>
  442464:	mov	w2, #0x18                  	// #24
  442468:	mov	w1, #0x1                   	// #1
  44246c:	stp	xzr, x19, [x0, #32]
  442470:	umaddl	x20, w20, w2, x21
  442474:	stp	x21, x20, [x0, #16]
  442478:	str	w1, [x0, #48]
  44247c:	ldp	x19, x20, [sp, #16]
  442480:	ldr	x21, [sp, #32]
  442484:	ldp	x29, x30, [sp], #48
  442488:	ret
  44248c:	mov	x19, x1
  442490:	b	44245c <ferror@plt+0x3ee8c>
  442494:	stp	x29, x30, [sp, #-80]!
  442498:	mov	x29, sp
  44249c:	stp	x19, x20, [sp, #16]
  4424a0:	mov	x19, x0
  4424a4:	stp	x21, x22, [sp, #32]
  4424a8:	str	x23, [sp, #48]
  4424ac:	mov	w23, w2
  4424b0:	mov	w2, w3
  4424b4:	ldr	w3, [x1, #24]
  4424b8:	cmp	w3, #0x7
  4424bc:	b.ne	4424e8 <ferror@plt+0x3ef18>  // b.any
  4424c0:	ldrb	w1, [x0, #16]
  4424c4:	cbnz	w1, 442630 <ferror@plt+0x3f060>
  4424c8:	mov	w1, w23
  4424cc:	bl	4354e8 <ferror@plt+0x31f18>
  4424d0:	mov	sp, x29
  4424d4:	ldp	x19, x20, [sp, #16]
  4424d8:	ldp	x21, x22, [sp, #32]
  4424dc:	ldr	x23, [sp, #48]
  4424e0:	ldp	x29, x30, [sp], #80
  4424e4:	ret
  4424e8:	mov	x20, x1
  4424ec:	bl	441f78 <ferror@plt+0x3e9a8>
  4424f0:	mov	x22, x0
  4424f4:	bl	402d50 <strlen@plt>
  4424f8:	mov	x21, x0
  4424fc:	add	x0, x0, #0x10
  442500:	and	x0, x0, #0xfffffffffffffff0
  442504:	mov	x2, x21
  442508:	sub	sp, sp, x0
  44250c:	mov	x1, x22
  442510:	mov	x4, sp
  442514:	mov	x0, x4
  442518:	bl	402cd0 <memcpy@plt>
  44251c:	mov	x4, x0
  442520:	mov	x2, x21
  442524:	mov	x1, x4
  442528:	mov	w0, #0xa                   	// #10
  44252c:	mov	w3, #0x1                   	// #1
  442530:	strb	w0, [x4, x21]
  442534:	mov	x0, x19
  442538:	bl	434db4 <ferror@plt+0x317e4>
  44253c:	mov	x0, x19
  442540:	bl	43b814 <ferror@plt+0x38244>
  442544:	mov	x0, x19
  442548:	bl	43c144 <ferror@plt+0x38b74>
  44254c:	str	x0, [x19, #448]
  442550:	mov	x0, x19
  442554:	bl	43db44 <ferror@plt+0x3a574>
  442558:	mov	x21, x0
  44255c:	ldr	x0, [x19, #136]
  442560:	ldr	w0, [x0, #48]
  442564:	str	w23, [x21]
  442568:	cmp	w0, #0x2
  44256c:	b.ne	442618 <ferror@plt+0x3f048>  // b.any
  442570:	add	x2, x29, #0x48
  442574:	mov	x1, #0x1                   	// #1
  442578:	mov	x0, x19
  44257c:	str	xzr, [x29, #72]
  442580:	bl	441bb4 <ferror@plt+0x3e5e4>
  442584:	mov	x22, x0
  442588:	ldr	x0, [x19, #40]
  44258c:	mov	w2, w23
  442590:	mov	x1, x20
  442594:	mov	w3, #0x1                   	// #1
  442598:	bl	43f974 <ferror@plt+0x3c3a4>
  44259c:	mov	x5, x0
  4425a0:	ldr	x1, [x19, #40]
  4425a4:	mov	x2, x21
  4425a8:	mov	x0, x22
  4425ac:	mov	w6, #0x0                   	// #0
  4425b0:	ldr	w4, [x1, #112]
  4425b4:	ldr	x1, [x29, #72]
  4425b8:	mov	w3, w4
  4425bc:	bl	441db0 <ferror@plt+0x3e7e0>
  4425c0:	ldr	x4, [x22, #8]
  4425c4:	mov	x2, x22
  4425c8:	ldr	x3, [x29, #72]
  4425cc:	mov	x1, x20
  4425d0:	mov	x0, x19
  4425d4:	mov	w5, #0x1                   	// #1
  4425d8:	bl	441cc0 <ferror@plt+0x3e6f0>
  4425dc:	ldr	x0, [x19]
  4425e0:	ldr	x1, [x0]
  4425e4:	ldr	x0, [x0, #32]
  4425e8:	cmp	x1, x0
  4425ec:	b.eq	442608 <ferror@plt+0x3f038>  // b.none
  4425f0:	ldr	x3, [x20]
  4425f4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4425f8:	mov	x0, x19
  4425fc:	add	x2, x2, #0x50a
  442600:	mov	w1, #0x4                   	// #4
  442604:	bl	435b3c <ferror@plt+0x3256c>
  442608:	mov	x0, x19
  44260c:	bl	434ea4 <ferror@plt+0x318d4>
  442610:	mov	w0, #0x1                   	// #1
  442614:	b	4424d0 <ferror@plt+0x3ef00>
  442618:	mov	x2, x21
  44261c:	mov	x0, x19
  442620:	mov	w3, #0x1                   	// #1
  442624:	mov	x1, #0x0                   	// #0
  442628:	bl	442430 <ferror@plt+0x3ee60>
  44262c:	b	4425dc <ferror@plt+0x3f00c>
  442630:	mov	w0, #0x0                   	// #0
  442634:	b	4424d0 <ferror@plt+0x3ef00>
  442638:	stp	x29, x30, [sp, #-48]!
  44263c:	add	x0, x0, #0x88
  442640:	mov	x29, sp
  442644:	stp	x19, x20, [sp, #16]
  442648:	mov	x20, x1
  44264c:	mov	x19, x2
  442650:	str	x21, [sp, #32]
  442654:	mov	x21, x3
  442658:	bl	441c70 <ferror@plt+0x3e6a0>
  44265c:	str	x19, [x0, #16]
  442660:	mov	w1, #0x1                   	// #1
  442664:	add	x19, x19, x21
  442668:	stp	xzr, x20, [x0, #32]
  44266c:	str	w1, [x0, #48]
  442670:	ldr	x21, [sp, #32]
  442674:	str	x19, [x0, #24]
  442678:	ldrh	w0, [x20, #18]
  44267c:	orr	w0, w0, #0x40
  442680:	strh	w0, [x20, #18]
  442684:	ldp	x19, x20, [sp, #16]
  442688:	ldp	x29, x30, [sp], #48
  44268c:	ret
  442690:	stp	x29, x30, [sp, #-48]!
  442694:	mov	x29, sp
  442698:	stp	x19, x20, [sp, #16]
  44269c:	ldr	x19, [x0, #136]
  4426a0:	stp	x21, x22, [sp, #32]
  4426a4:	mov	x21, x0
  4426a8:	add	x0, x0, #0x50
  4426ac:	cmp	x19, x0
  4426b0:	b.ne	4426cc <ferror@plt+0x3f0fc>  // b.any
  4426b4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4426b8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4426bc:	add	x2, x2, #0x751
  4426c0:	add	x0, x0, #0x4de
  4426c4:	mov	w1, #0x9eb                 	// #2539
  4426c8:	bl	403600 <ferror@plt+0x30>
  4426cc:	ldr	x20, [x19, #40]
  4426d0:	cbz	x20, 44274c <ferror@plt+0x3f17c>
  4426d4:	ldr	w0, [x19, #48]
  4426d8:	cmp	w0, #0x2
  4426dc:	b.ne	442710 <ferror@plt+0x3f140>  // b.any
  4426e0:	ldr	x0, [x19, #32]
  4426e4:	ldr	x22, [x20]
  4426e8:	cbz	x0, 4426f8 <ferror@plt+0x3f128>
  4426ec:	ldr	x0, [x20, #8]
  4426f0:	cbz	x0, 4426f8 <ferror@plt+0x3f128>
  4426f4:	bl	4032a0 <free@plt>
  4426f8:	mov	x0, x20
  4426fc:	bl	4032a0 <free@plt>
  442700:	str	xzr, [x19, #40]
  442704:	mov	x20, #0x0                   	// #0
  442708:	cbz	x22, 442734 <ferror@plt+0x3f164>
  44270c:	mov	x20, x22
  442710:	ldr	x0, [x19, #8]
  442714:	bl	441b68 <ferror@plt+0x3e598>
  442718:	cmp	x20, x0
  44271c:	b.eq	442734 <ferror@plt+0x3f164>  // b.none
  442720:	ldrh	w0, [x20, #18]
  442724:	ubfx	x1, x0, #2, #8
  442728:	and	w1, w1, #0xffffffef
  44272c:	bfi	w0, w1, #2, #8
  442730:	strh	w0, [x20, #18]
  442734:	ldr	x0, [x21, #184]
  442738:	cmp	x0, x20
  44273c:	b.ne	44274c <ferror@plt+0x3f17c>  // b.any
  442740:	ldr	x0, [x19, #8]
  442744:	cbnz	x0, 44274c <ferror@plt+0x3f17c>
  442748:	str	xzr, [x21, #184]
  44274c:	ldr	x0, [x19, #32]
  442750:	cbz	x0, 442758 <ferror@plt+0x3f188>
  442754:	bl	43cddc <ferror@plt+0x3980c>
  442758:	ldr	x0, [x19, #8]
  44275c:	str	x0, [x21, #136]
  442760:	ldp	x21, x22, [sp, #32]
  442764:	str	xzr, [x0]
  442768:	mov	x0, x19
  44276c:	ldp	x19, x20, [sp, #16]
  442770:	ldp	x29, x30, [sp], #48
  442774:	b	4032a0 <free@plt>
  442778:	ldr	x1, [x0, #136]
  44277c:	ldr	x0, [x1, #40]
  442780:	ldr	w1, [x1, #48]
  442784:	cmp	w1, #0x2
  442788:	b.ne	442790 <ferror@plt+0x3f1c0>  // b.any
  44278c:	ldr	x0, [x0]
  442790:	cbz	x0, 4427a8 <ferror@plt+0x3f1d8>
  442794:	ldr	x0, [x0, #24]
  442798:	cbz	x0, 4427a8 <ferror@plt+0x3f1d8>
  44279c:	ldrb	w0, [x0, #19]
  4427a0:	ubfx	x0, x0, #4, #1
  4427a4:	ret
  4427a8:	mov	w0, #0x0                   	// #0
  4427ac:	b	4427a4 <ferror@plt+0x3f1d4>
  4427b0:	ldr	w2, [x0, #496]
  4427b4:	add	w2, w2, w1
  4427b8:	str	w2, [x0, #496]
  4427bc:	sub	w1, w1, #0x1
  4427c0:	cmn	w1, #0x1
  4427c4:	b.eq	4427fc <ferror@plt+0x3f22c>  // b.none
  4427c8:	ldr	x3, [x0, #488]
  4427cc:	ldr	x2, [x0, #448]
  4427d0:	ldr	x4, [x3, #16]
  4427d4:	sub	x2, x2, #0x18
  4427d8:	str	x2, [x0, #448]
  4427dc:	cmp	x2, x4
  4427e0:	b.ne	4427bc <ferror@plt+0x3f1ec>  // b.any
  4427e4:	ldr	x2, [x3, #8]
  4427e8:	cbz	x2, 4427bc <ferror@plt+0x3f1ec>
  4427ec:	str	x2, [x0, #488]
  4427f0:	ldr	x2, [x2, #24]
  4427f4:	str	x2, [x0, #448]
  4427f8:	b	4427bc <ferror@plt+0x3f1ec>
  4427fc:	ret
  442800:	ldr	x2, [x0, #136]
  442804:	ldr	x4, [x2, #8]
  442808:	cbnz	x4, 442810 <ferror@plt+0x3f240>
  44280c:	b	4427b0 <ferror@plt+0x3f1e0>
  442810:	stp	x29, x30, [sp, #-16]!
  442814:	cmp	w1, #0x1
  442818:	mov	x29, sp
  44281c:	b.eq	442838 <ferror@plt+0x3f268>  // b.none
  442820:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442824:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442828:	add	x2, x2, #0x762
  44282c:	add	x0, x0, #0x4de
  442830:	mov	w1, #0xb8f                 	// #2959
  442834:	bl	403600 <ferror@plt+0x30>
  442838:	ldr	w0, [x2, #48]
  44283c:	cmp	w0, #0x1
  442840:	b.ne	442858 <ferror@plt+0x3f288>  // b.any
  442844:	ldr	x0, [x2, #16]
  442848:	sub	x0, x0, #0x18
  44284c:	str	x0, [x2, #16]
  442850:	ldp	x29, x30, [sp], #16
  442854:	ret
  442858:	cbnz	w0, 442868 <ferror@plt+0x3f298>
  44285c:	ldr	x0, [x2, #16]
  442860:	sub	x0, x0, #0x8
  442864:	b	44284c <ferror@plt+0x3f27c>
  442868:	cmp	w0, #0x2
  44286c:	b.ne	4428ac <ferror@plt+0x3f2dc>  // b.any
  442870:	ldr	x0, [x2, #16]
  442874:	sub	x0, x0, #0x8
  442878:	str	x0, [x2, #16]
  44287c:	ldr	x0, [x2, #40]
  442880:	cbz	x0, 442894 <ferror@plt+0x3f2c4>
  442884:	ldr	x1, [x0, #16]
  442888:	sub	x1, x1, #0x4
  44288c:	str	x1, [x0, #16]
  442890:	b	442850 <ferror@plt+0x3f280>
  442894:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442898:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44289c:	add	x2, x2, #0x762
  4428a0:	add	x0, x0, #0x4de
  4428a4:	mov	w1, #0xb9e                 	// #2974
  4428a8:	bl	403600 <ferror@plt+0x30>
  4428ac:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4428b0:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4428b4:	add	x2, x2, #0x762
  4428b8:	add	x0, x0, #0x4de
  4428bc:	mov	w1, #0xba1                 	// #2977
  4428c0:	bl	403600 <ferror@plt+0x30>
  4428c4:	stp	x29, x30, [sp, #-80]!
  4428c8:	mov	x29, sp
  4428cc:	stp	x19, x20, [sp, #16]
  4428d0:	mov	x19, x0
  4428d4:	ldr	x0, [x2]
  4428d8:	stp	x21, x22, [sp, #32]
  4428dc:	mov	x21, x2
  4428e0:	mov	x22, x3
  4428e4:	stp	x23, x24, [sp, #48]
  4428e8:	mov	w23, w1
  4428ec:	stp	x25, x26, [sp, #64]
  4428f0:	bl	43c2e8 <ferror@plt+0x38d18>
  4428f4:	mov	w20, w0
  4428f8:	mov	x0, x22
  4428fc:	bl	43c2e8 <ferror@plt+0x38d18>
  442900:	add	w20, w20, w0
  442904:	mov	w3, #0x1                   	// #1
  442908:	add	w20, w20, #0x1
  44290c:	mov	x0, x19
  442910:	add	x20, x20, #0xf
  442914:	ldr	x1, [x21]
  442918:	and	x20, x20, #0x1fffffff0
  44291c:	sub	sp, sp, x20
  442920:	mov	x25, sp
  442924:	mov	x2, x25
  442928:	bl	43c3a0 <ferror@plt+0x38dd0>
  44292c:	mov	x24, x0
  442930:	ldr	x0, [x21]
  442934:	ldrb	w0, [x0, #4]
  442938:	cmp	w0, #0x7
  44293c:	b.ne	442a4c <ferror@plt+0x3f47c>  // b.any
  442940:	ldrb	w0, [x22, #4]
  442944:	mov	x2, x24
  442948:	cbz	w0, 442954 <ferror@plt+0x3f384>
  44294c:	mov	w0, #0x20                  	// #32
  442950:	strb	w0, [x2], #1
  442954:	ldrb	w0, [x22, #4]
  442958:	cmp	w0, #0x53
  44295c:	b.eq	442974 <ferror@plt+0x3f3a4>  // b.none
  442960:	mov	x1, x22
  442964:	mov	x0, x19
  442968:	mov	w3, #0x1                   	// #1
  44296c:	bl	43c3a0 <ferror@plt+0x38dd0>
  442970:	mov	x2, x0
  442974:	mov	x1, x25
  442978:	mov	w0, #0xa                   	// #10
  44297c:	strb	w0, [x2]
  442980:	sub	x2, x2, x25
  442984:	mov	w3, #0x1                   	// #1
  442988:	mov	x0, x19
  44298c:	bl	434db4 <ferror@plt+0x317e4>
  442990:	mov	x0, x19
  442994:	bl	43b814 <ferror@plt+0x38244>
  442998:	mov	x0, x19
  44299c:	bl	43c144 <ferror@plt+0x38b74>
  4429a0:	str	x0, [x19, #448]
  4429a4:	mov	x0, x19
  4429a8:	bl	43db44 <ferror@plt+0x3a574>
  4429ac:	mov	x20, x0
  4429b0:	ldr	x0, [x19]
  4429b4:	ldr	x1, [x0]
  4429b8:	ldr	x0, [x0, #32]
  4429bc:	cmp	x1, x0
  4429c0:	b.eq	442a54 <ferror@plt+0x3f484>  // b.none
  4429c4:	ldr	w26, [x20]
  4429c8:	mov	x0, x19
  4429cc:	bl	434ea4 <ferror@plt+0x318d4>
  4429d0:	mov	x0, x19
  4429d4:	mov	w1, #0x1                   	// #1
  4429d8:	bl	442800 <ferror@plt+0x3f230>
  4429dc:	strb	wzr, [x24]
  4429e0:	ldr	x0, [x21]
  4429e4:	ldp	x2, x3, [x0]
  4429e8:	stp	x2, x3, [x20]
  4429ec:	ldr	x0, [x0, #16]
  4429f0:	str	x0, [x20, #16]
  4429f4:	ldrh	w0, [x20, #6]
  4429f8:	str	x20, [x21]
  4429fc:	and	w0, w0, #0xfffffff7
  442a00:	strh	w0, [x20, #6]
  442a04:	ldr	w0, [x19, #1116]
  442a08:	str	w26, [x20]
  442a0c:	cmp	w0, #0x15
  442a10:	b.eq	442a44 <ferror@plt+0x3f474>  // b.none
  442a14:	mov	x1, x22
  442a18:	mov	x0, x19
  442a1c:	bl	43d9a8 <ferror@plt+0x3a3d8>
  442a20:	mov	x6, x0
  442a24:	adrp	x4, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442a28:	mov	x5, x25
  442a2c:	add	x4, x4, #0x775
  442a30:	mov	w2, w23
  442a34:	mov	x0, x19
  442a38:	mov	w3, #0x0                   	// #0
  442a3c:	mov	w1, #0x3                   	// #3
  442a40:	bl	435cf8 <ferror@plt+0x32728>
  442a44:	mov	w0, #0x0                   	// #0
  442a48:	b	442a64 <ferror@plt+0x3f494>
  442a4c:	mov	x2, x24
  442a50:	b	442954 <ferror@plt+0x3f384>
  442a54:	str	x20, [x21]
  442a58:	mov	x0, x19
  442a5c:	bl	434ea4 <ferror@plt+0x318d4>
  442a60:	mov	w0, #0x1                   	// #1
  442a64:	mov	sp, x29
  442a68:	ldp	x19, x20, [sp, #16]
  442a6c:	ldp	x21, x22, [sp, #32]
  442a70:	ldp	x23, x24, [sp, #48]
  442a74:	ldp	x25, x26, [sp, #64]
  442a78:	ldp	x29, x30, [sp], #80
  442a7c:	ret
  442a80:	ldrb	w1, [x0, #18]
  442a84:	str	xzr, [x0, #24]
  442a88:	and	w1, w1, #0xfffffffc
  442a8c:	strb	w1, [x0, #18]
  442a90:	ldrh	w1, [x0, #18]
  442a94:	ubfx	x2, x1, #2, #8
  442a98:	and	w2, w2, #0xffffffcf
  442a9c:	bfi	w1, w2, #2, #8
  442aa0:	strh	w1, [x0, #18]
  442aa4:	ret
  442aa8:	stp	x29, x30, [sp, #-64]!
  442aac:	mov	x29, sp
  442ab0:	stp	x19, x20, [sp, #16]
  442ab4:	mov	w20, w1
  442ab8:	ldrb	w1, [x2, #18]
  442abc:	stp	x21, x22, [sp, #32]
  442ac0:	mov	x19, x2
  442ac4:	and	w1, w1, #0x3
  442ac8:	stp	x23, x24, [sp, #48]
  442acc:	cmp	w1, #0x1
  442ad0:	b.ne	442b00 <ferror@plt+0x3f530>  // b.any
  442ad4:	ldr	x3, [x19]
  442ad8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442adc:	mov	w1, #0x3                   	// #3
  442ae0:	add	x2, x2, #0x7b5
  442ae4:	bl	435b3c <ferror@plt+0x3256c>
  442ae8:	mov	w0, #0x0                   	// #0
  442aec:	ldp	x19, x20, [sp, #16]
  442af0:	ldp	x21, x22, [sp, #32]
  442af4:	ldp	x23, x24, [sp, #48]
  442af8:	ldp	x29, x30, [sp], #64
  442afc:	ret
  442b00:	mov	w22, #0x18                  	// #24
  442b04:	mov	x21, x0
  442b08:	ldr	w0, [x0, #512]
  442b0c:	mov	x24, x3
  442b10:	madd	w22, w20, w22, w22
  442b14:	add	w23, w20, #0x1
  442b18:	cmp	w0, w22
  442b1c:	b.cs	442b34 <ferror@plt+0x3f564>  // b.hs, b.nlast
  442b20:	ldr	x0, [x21, #504]
  442b24:	mov	w1, w22
  442b28:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  442b2c:	str	x0, [x21, #504]
  442b30:	str	w22, [x21, #512]
  442b34:	mov	w0, #0x18                  	// #24
  442b38:	ldr	x2, [x21, #504]
  442b3c:	umull	x0, w20, w0
  442b40:	ubfiz	x20, x20, #3, #32
  442b44:	add	x1, x2, x0
  442b48:	str	x19, [x2, x0]
  442b4c:	mov	x2, #0x8                   	// #8
  442b50:	ldr	x0, [x19, #24]
  442b54:	str	x0, [x1, #8]
  442b58:	ldrb	w0, [x19, #18]
  442b5c:	and	w0, w0, #0x3
  442b60:	str	w0, [x1, #16]
  442b64:	mov	x1, x20
  442b68:	mov	x0, x21
  442b6c:	bl	441bf8 <ferror@plt+0x3e628>
  442b70:	str	x24, [x0, x20]
  442b74:	ldrb	w1, [x19, #18]
  442b78:	mov	w0, #0x1                   	// #1
  442b7c:	strh	w23, [x19, #24]
  442b80:	bfxil	w1, w0, #0, #2
  442b84:	strb	w1, [x19, #18]
  442b88:	b	442aec <ferror@plt+0x3f51c>
  442b8c:	mov	w6, #0x18                  	// #24
  442b90:	sub	w1, w1, #0x1
  442b94:	cmn	w1, #0x1
  442b98:	b.eq	442bc8 <ferror@plt+0x3f5f8>  // b.none
  442b9c:	umull	x2, w1, w6
  442ba0:	ldr	x4, [x0, #504]
  442ba4:	add	x3, x4, x2
  442ba8:	ldr	x2, [x4, x2]
  442bac:	ldr	w5, [x3, #16]
  442bb0:	ldrb	w4, [x2, #18]
  442bb4:	bfxil	w4, w5, #0, #2
  442bb8:	strb	w4, [x2, #18]
  442bbc:	ldr	x3, [x3, #8]
  442bc0:	str	x3, [x2, #24]
  442bc4:	b	442b90 <ferror@plt+0x3f5c0>
  442bc8:	ret
  442bcc:	mov	x3, x0
  442bd0:	mov	x0, x2
  442bd4:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  442bd8:	ldr	w2, [x3, #48]
  442bdc:	str	xzr, [x0]
  442be0:	str	w2, [x0, #8]
  442be4:	ldur	x4, [x0, #12]
  442be8:	ldrb	w2, [x3, #1151]
  442bec:	and	x4, x4, x5
  442bf0:	cmp	w2, #0x0
  442bf4:	cset	x2, eq  // eq = none
  442bf8:	orr	x2, x4, x2, lsl #61
  442bfc:	stur	x2, [x0, #12]
  442c00:	ldr	x2, [x3]
  442c04:	cbz	x2, 442c34 <ferror@plt+0x3f664>
  442c08:	ldrb	w2, [x2, #106]
  442c0c:	cmp	w2, #0x0
  442c10:	cset	w2, ne  // ne = any
  442c14:	and	w1, w1, #0x3
  442c18:	mov	w3, #0xffffffec            	// #-20
  442c1c:	orr	w2, w1, w2, lsl #4
  442c20:	ldrb	w1, [x0, #19]
  442c24:	and	w1, w1, w3
  442c28:	orr	w2, w2, w1
  442c2c:	strb	w2, [x0, #19]
  442c30:	ret
  442c34:	mov	w2, #0x0                   	// #0
  442c38:	b	442c14 <ferror@plt+0x3f644>
  442c3c:	stp	x29, x30, [sp, #-192]!
  442c40:	mov	x29, sp
  442c44:	stp	x19, x20, [sp, #16]
  442c48:	mov	x19, x0
  442c4c:	stp	x21, x22, [sp, #32]
  442c50:	mov	x22, x1
  442c54:	stp	x23, x24, [sp, #48]
  442c58:	stp	x25, x26, [sp, #64]
  442c5c:	stp	x27, x28, [sp, #80]
  442c60:	ldrb	w1, [x0, #1160]
  442c64:	cbz	w1, 442d0c <ferror@plt+0x3f73c>
  442c68:	bl	4476ec <ferror@plt+0x4411c>
  442c6c:	mov	x20, x0
  442c70:	cbz	x20, 443650 <ferror@plt+0x40080>
  442c74:	ldrb	w0, [x22, #18]
  442c78:	tbz	w0, #1, 44357c <ferror@plt+0x3ffac>
  442c7c:	ldrb	w0, [x19, #1151]
  442c80:	cbz	w0, 442c94 <ferror@plt+0x3f6c4>
  442c84:	mov	x1, x22
  442c88:	mov	x0, x19
  442c8c:	mov	x2, #0x0                   	// #0
  442c90:	bl	441eb4 <ferror@plt+0x3e8e4>
  442c94:	ldrh	w0, [x22, #18]
  442c98:	ubfx	x1, x0, #2, #8
  442c9c:	tbz	w0, #5, 4434a8 <ferror@plt+0x3fed8>
  442ca0:	ldrb	w0, [x22, #18]
  442ca4:	and	w0, w0, #0x3
  442ca8:	cmp	w0, #0x3
  442cac:	b.eq	4434c8 <ferror@plt+0x3fef8>  // b.none
  442cb0:	mov	w1, #0x0                   	// #0
  442cb4:	ldr	w2, [x19, #48]
  442cb8:	mov	x0, x19
  442cbc:	ldr	x5, [x22]
  442cc0:	adrp	x4, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442cc4:	mov	w3, #0x0                   	// #0
  442cc8:	add	x4, x4, #0x9ec
  442ccc:	bl	435ddc <ferror@plt+0x3280c>
  442cd0:	tst	w0, #0xff
  442cd4:	b.eq	443574 <ferror@plt+0x3ffa4>  // b.none
  442cd8:	ldrb	w0, [x22, #18]
  442cdc:	and	w0, w0, #0x3
  442ce0:	cmp	w0, #0x2
  442ce4:	b.ne	443574 <ferror@plt+0x3ffa4>  // b.any
  442ce8:	ldr	x0, [x22, #24]
  442cec:	adrp	x4, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442cf0:	mov	w3, #0x0                   	// #0
  442cf4:	add	x4, x4, #0x9fb
  442cf8:	mov	w1, #0x5                   	// #5
  442cfc:	ldr	w2, [x0, #8]
  442d00:	mov	x0, x19
  442d04:	bl	435cf8 <ferror@plt+0x32728>
  442d08:	b	443574 <ferror@plt+0x3ffa4>
  442d0c:	add	x1, sp, #0x80
  442d10:	ldr	x20, [x0, #448]
  442d14:	str	x1, [x0, #448]
  442d18:	bl	43db44 <ferror@plt+0x3a574>
  442d1c:	mov	x21, x0
  442d20:	ldrh	w0, [x0, #6]
  442d24:	str	x20, [x19, #448]
  442d28:	tbnz	w0, #0, 442fa8 <ferror@plt+0x3f9d8>
  442d2c:	ldrb	w0, [x21, #4]
  442d30:	cmp	w0, #0x14
  442d34:	b.ne	442f60 <ferror@plt+0x3f990>  // b.any
  442d38:	adrp	x20, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442d3c:	adrp	x24, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442d40:	add	x20, x20, #0x866
  442d44:	add	x24, x24, #0x838
  442d48:	mov	w25, #0x0                   	// #0
  442d4c:	mov	w21, #0x0                   	// #0
  442d50:	mov	w23, #0x0                   	// #0
  442d54:	mov	x0, x19
  442d58:	bl	43eff0 <ferror@plt+0x3ba20>
  442d5c:	ldrb	w2, [x0, #4]
  442d60:	mov	x1, x0
  442d64:	cmp	w2, #0x2c
  442d68:	b.eq	442e94 <ferror@plt+0x3f8c4>  // b.none
  442d6c:	b.hi	442e04 <ferror@plt+0x3f834>  // b.pmore
  442d70:	cmp	w2, #0x13
  442d74:	b.eq	442e84 <ferror@plt+0x3f8b4>  // b.none
  442d78:	cmp	w2, #0x15
  442d7c:	b.eq	442e6c <ferror@plt+0x3f89c>  // b.none
  442d80:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442d84:	add	x0, x0, #0xce8
  442d88:	ldp	x4, x5, [x0, #96]
  442d8c:	stp	x4, x5, [sp, #152]
  442d90:	ldp	x4, x5, [x0, #112]
  442d94:	stp	x4, x5, [sp, #168]
  442d98:	ldr	x0, [x0, #128]
  442d9c:	str	x0, [sp, #184]
  442da0:	cbnz	w25, 442e38 <ferror@plt+0x3f868>
  442da4:	cmp	w2, #0x16
  442da8:	b.ne	442e28 <ferror@plt+0x3f858>  // b.any
  442dac:	add	w21, w21, #0x2
  442db0:	mov	x3, #0x0                   	// #0
  442db4:	add	x0, sp, #0x98
  442db8:	mov	x20, #0x0                   	// #0
  442dbc:	mov	w1, #0x3                   	// #3
  442dc0:	ldr	x2, [x0, w21, uxtw #3]
  442dc4:	mov	x0, x19
  442dc8:	bl	435b3c <ferror@plt+0x3256c>
  442dcc:	mov	w21, #0x0                   	// #0
  442dd0:	strb	wzr, [x19, #22]
  442dd4:	mov	w1, w23
  442dd8:	mov	x0, x19
  442ddc:	bl	442b8c <ferror@plt+0x3f5bc>
  442de0:	cbnz	w21, 442c70 <ferror@plt+0x3f6a0>
  442de4:	mov	w0, w21
  442de8:	ldp	x19, x20, [sp, #16]
  442dec:	ldp	x21, x22, [sp, #32]
  442df0:	ldp	x23, x24, [sp, #48]
  442df4:	ldp	x25, x26, [sp, #64]
  442df8:	ldp	x27, x28, [sp, #80]
  442dfc:	ldp	x29, x30, [sp], #192
  442e00:	ret
  442e04:	cmp	w2, #0x35
  442e08:	b.eq	442e44 <ferror@plt+0x3f874>  // b.none
  442e0c:	cmp	w2, #0x4f
  442e10:	b.ne	442d80 <ferror@plt+0x3f7b0>  // b.any
  442e14:	ldrb	w0, [x19, #1124]
  442e18:	cbz	w0, 442d54 <ferror@plt+0x3f784>
  442e1c:	b	442d80 <ferror@plt+0x3f7b0>
  442e20:	mov	w21, w25
  442e24:	b	442d80 <ferror@plt+0x3f7b0>
  442e28:	mov	x0, x19
  442e2c:	bl	43d9a8 <ferror@plt+0x3a3d8>
  442e30:	mov	x3, x0
  442e34:	b	442db4 <ferror@plt+0x3f7e4>
  442e38:	mov	x3, #0x0                   	// #0
  442e3c:	mov	w21, #0x4                   	// #4
  442e40:	b	442db4 <ferror@plt+0x3f7e4>
  442e44:	cbnz	w21, 442d80 <ferror@plt+0x3f7b0>
  442e48:	cbnz	w25, 442d80 <ferror@plt+0x3f7b0>
  442e4c:	ldp	x2, x3, [x1, #8]
  442e50:	mov	x0, x19
  442e54:	mov	w1, w23
  442e58:	bl	442aa8 <ferror@plt+0x3f4d8>
  442e5c:	ands	w21, w0, #0xff
  442e60:	b.eq	4434a0 <ferror@plt+0x3fed0>  // b.none
  442e64:	add	w23, w23, #0x1
  442e68:	b	442d54 <ferror@plt+0x3f784>
  442e6c:	cmp	w23, #0x0
  442e70:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  442e74:	b.ne	443658 <ferror@plt+0x40088>  // b.any
  442e78:	cbnz	w25, 443658 <ferror@plt+0x40088>
  442e7c:	mov	w21, #0x0                   	// #0
  442e80:	b	442d80 <ferror@plt+0x3f7b0>
  442e84:	cbz	w21, 442d80 <ferror@plt+0x3f7b0>
  442e88:	cbnz	w25, 442e20 <ferror@plt+0x3f850>
  442e8c:	mov	w21, #0x0                   	// #0
  442e90:	b	442d54 <ferror@plt+0x3f784>
  442e94:	cbnz	w25, 442d80 <ferror@plt+0x3f7b0>
  442e98:	cbnz	w21, 442f30 <ferror@plt+0x3f960>
  442e9c:	ldr	x3, [x19, #1272]
  442ea0:	mov	w1, w23
  442ea4:	mov	x0, x19
  442ea8:	add	w23, w23, #0x1
  442eac:	mov	x2, x3
  442eb0:	bl	442aa8 <ferror@plt+0x3f4d8>
  442eb4:	mov	w0, #0x1                   	// #1
  442eb8:	strb	w0, [x19, #22]
  442ebc:	ldrb	w0, [x19, #1152]
  442ec0:	cbnz	w0, 442f04 <ferror@plt+0x3f934>
  442ec4:	ldrb	w0, [x19, #1154]
  442ec8:	cbz	w0, 442f04 <ferror@plt+0x3f934>
  442ecc:	ldrb	w0, [x19, #1142]
  442ed0:	cbz	w0, 442f04 <ferror@plt+0x3f934>
  442ed4:	ldrb	w1, [x19, #1120]
  442ed8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442edc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442ee0:	add	x0, x0, #0x807
  442ee4:	cmp	w1, #0x0
  442ee8:	add	x2, x2, #0x7d4
  442eec:	csel	x2, x2, x0, ne  // ne = any
  442ef0:	mov	w1, #0xa                   	// #10
  442ef4:	mov	x0, x19
  442ef8:	bl	435c18 <ferror@plt+0x32648>
  442efc:	mov	w25, #0x1                   	// #1
  442f00:	b	442d54 <ferror@plt+0x3f784>
  442f04:	ldrsb	w0, [x19, #1198]
  442f08:	cmp	w0, #0x0
  442f0c:	b.le	442efc <ferror@plt+0x3f92c>
  442f10:	ldrb	w0, [x19, #1120]
  442f14:	cbnz	w0, 442efc <ferror@plt+0x3f92c>
  442f18:	mov	x0, x19
  442f1c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442f20:	mov	w1, #0x0                   	// #0
  442f24:	add	x2, x2, #0x807
  442f28:	bl	435b3c <ferror@plt+0x3256c>
  442f2c:	b	442efc <ferror@plt+0x3f92c>
  442f30:	ldrb	w0, [x19, #1154]
  442f34:	cbz	w0, 442f58 <ferror@plt+0x3f988>
  442f38:	ldrb	w0, [x19, #1142]
  442f3c:	cbz	w0, 442f58 <ferror@plt+0x3f988>
  442f40:	ldrb	w0, [x19, #1120]
  442f44:	mov	w1, #0xa                   	// #10
  442f48:	cmp	w0, #0x0
  442f4c:	mov	x0, x19
  442f50:	csel	x2, x24, x20, ne  // ne = any
  442f54:	bl	435c18 <ferror@plt+0x32648>
  442f58:	mov	w25, w21
  442f5c:	b	442d54 <ferror@plt+0x3f784>
  442f60:	cmp	w0, #0x16
  442f64:	b.eq	442fa8 <ferror@plt+0x3f9d8>  // b.none
  442f68:	cmp	w0, #0x4f
  442f6c:	b.ne	442f78 <ferror@plt+0x3f9a8>  // b.any
  442f70:	ldrb	w1, [x19, #1124]
  442f74:	cbz	w1, 442fa8 <ferror@plt+0x3f9d8>
  442f78:	ldrb	w1, [x19, #1152]
  442f7c:	cbz	w1, 44315c <ferror@plt+0x3fb8c>
  442f80:	ldrb	w1, [x19, #1120]
  442f84:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442f88:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  442f8c:	add	x0, x0, #0x8c5
  442f90:	cmp	w1, #0x0
  442f94:	add	x2, x2, #0x892
  442f98:	csel	x2, x2, x0, ne  // ne = any
  442f9c:	mov	w1, #0x2                   	// #2
  442fa0:	mov	x0, x19
  442fa4:	bl	435b3c <ferror@plt+0x3256c>
  442fa8:	mov	w25, #0x0                   	// #0
  442fac:	mov	w23, #0x0                   	// #0
  442fb0:	mov	x24, #0x0                   	// #0
  442fb4:	mov	x2, #0x30                  	// #48
  442fb8:	mov	x1, #0x0                   	// #0
  442fbc:	mov	x0, x19
  442fc0:	bl	441bf8 <ferror@plt+0x3e628>
  442fc4:	mov	w1, #0x0                   	// #0
  442fc8:	mov	x2, x0
  442fcc:	mov	x0, x19
  442fd0:	bl	442bcc <ferror@plt+0x3f5fc>
  442fd4:	mov	x20, x0
  442fd8:	cbnz	x21, 4431a8 <ferror@plt+0x3fbd8>
  442fdc:	strh	w23, [x0, #16]
  442fe0:	ubfiz	w0, w25, #3, #1
  442fe4:	orr	w0, w0, #0x4
  442fe8:	str	x24, [x20]
  442fec:	ldrb	w1, [x20, #19]
  442ff0:	and	w1, w1, #0xfffffff3
  442ff4:	orr	w0, w0, w1
  442ff8:	strb	w0, [x20, #19]
  442ffc:	ldrb	w0, [x20, #19]
  443000:	mov	w1, #0x1                   	// #1
  443004:	str	x19, [sp, #152]
  443008:	adrp	x26, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  44300c:	strb	w1, [sp, #160]
  443010:	add	x26, x26, #0x228
  443014:	ubfx	x0, x0, #3, #1
  443018:	strb	w0, [sp, #161]
  44301c:	strb	wzr, [sp, #162]
  443020:	mov	w24, #0x0                   	// #0
  443024:	str	wzr, [sp, #164]
  443028:	mov	w25, #0x0                   	// #0
  44302c:	str	xzr, [sp, #168]
  443030:	cbnz	x21, 4430bc <ferror@plt+0x3faec>
  443034:	ldr	w1, [x20, #12]
  443038:	mov	x21, #0x18                  	// #24
  44303c:	mov	x0, x19
  443040:	mov	x2, x21
  443044:	madd	x1, x1, x21, x21
  443048:	bl	441bf8 <ferror@plt+0x3e628>
  44304c:	mov	x20, x0
  443050:	ldr	x28, [x19, #448]
  443054:	mov	x0, x19
  443058:	ldr	w2, [x20, #12]
  44305c:	madd	x21, x2, x21, x21
  443060:	add	x21, x20, x21
  443064:	str	x21, [x19, #448]
  443068:	bl	43db44 <ferror@plt+0x3a574>
  44306c:	ldrb	w1, [x0, #4]
  443070:	str	x28, [x19, #448]
  443074:	cmp	w1, #0x35
  443078:	b.ne	4431cc <ferror@plt+0x3fbfc>  // b.any
  44307c:	ldr	x3, [x0, #8]
  443080:	ldrb	w2, [x3, #18]
  443084:	and	w2, w2, #0x3
  443088:	cmp	w2, #0x1
  44308c:	b.ne	4431cc <ferror@plt+0x3fbfc>  // b.any
  443090:	mov	w1, #0x50                  	// #80
  443094:	strb	w1, [x0, #4]
  443098:	ldrh	w1, [x3, #24]
  44309c:	str	w1, [x0, #8]
  4430a0:	ldr	w21, [x20, #12]
  4430a4:	add	w0, w21, #0x1
  4430a8:	str	w0, [x20, #12]
  4430ac:	mov	w0, w21
  4430b0:	mov	x21, #0x18                  	// #24
  4430b4:	madd	x21, x0, x21, x21
  4430b8:	add	x21, x20, x21
  4430bc:	ldr	w1, [x20, #12]
  4430c0:	cmp	w1, #0x1
  4430c4:	b.ls	443140 <ferror@plt+0x3fb70>  // b.plast
  4430c8:	ldurb	w0, [x21, #-20]
  4430cc:	sub	x4, x21, #0x18
  4430d0:	cmp	w0, #0x25
  4430d4:	b.ne	443140 <ferror@plt+0x3fb70>  // b.any
  4430d8:	ldrb	w0, [x20, #19]
  4430dc:	tbz	w0, #2, 443140 <ferror@plt+0x3fb70>
  4430e0:	ldrb	w0, [x21, #4]
  4430e4:	cmp	w0, #0x50
  4430e8:	b.ne	4432f8 <ferror@plt+0x3fd28>  // b.any
  4430ec:	ldrh	w0, [x21, #6]
  4430f0:	tbz	w0, #0, 4430fc <ferror@plt+0x3fb2c>
  4430f4:	orr	w0, w0, #0x200
  4430f8:	strh	w0, [x21, #6]
  4430fc:	ldrh	w2, [x4, #6]
  443100:	tbz	w2, #1, 443110 <ferror@plt+0x3fb40>
  443104:	ldrh	w0, [x21, #6]
  443108:	orr	w0, w0, #0x100
  44310c:	strh	w0, [x21, #6]
  443110:	ldrh	w0, [x21, #6]
  443114:	and	w2, w2, #0x1
  443118:	sub	w1, w1, #0x1
  44311c:	and	w0, w0, #0xfffffffe
  443120:	orr	w0, w0, #0x4
  443124:	orr	w0, w0, w2
  443128:	strh	w0, [x21, #6]
  44312c:	ldp	x2, x3, [x21]
  443130:	stp	x2, x3, [x4]
  443134:	ldr	x0, [x21, #16]
  443138:	str	x0, [x4, #16]
  44313c:	str	w1, [x20, #12]
  443140:	ldrb	w0, [x21, #4]
  443144:	cmp	w0, #0x16
  443148:	b.ne	4433e8 <ferror@plt+0x3fe18>  // b.any
  44314c:	cbz	w25, 44331c <ferror@plt+0x3fd4c>
  443150:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443154:	add	x2, x2, #0x99e
  443158:	b	44330c <ferror@plt+0x3fd3c>
  44315c:	cmp	w0, #0x3d
  443160:	b.eq	44318c <ferror@plt+0x3fbbc>  // b.none
  443164:	b.hi	443184 <ferror@plt+0x3fbb4>  // b.pmore
  443168:	and	w0, w0, #0xfffffffd
  44316c:	cmp	w0, #0x34
  443170:	cset	w1, eq  // eq = none
  443174:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443178:	add	x2, x2, #0x913
  44317c:	lsl	w1, w1, #1
  443180:	b	442fa0 <ferror@plt+0x3f9d0>
  443184:	cmp	w0, #0x43
  443188:	b	443170 <ferror@plt+0x3fba0>
  44318c:	ldr	x0, [x21, #16]
  443190:	ldrb	w1, [x0]
  443194:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443198:	add	x0, x0, #0x8f6
  44319c:	bl	4032f0 <strchr@plt>
  4431a0:	cmp	x0, #0x0
  4431a4:	b	443170 <ferror@plt+0x3fba0>
  4431a8:	ldp	x2, x3, [x21]
  4431ac:	stp	x2, x3, [x20, #24]
  4431b0:	add	x0, x0, #0x18
  4431b4:	ldr	x1, [x21, #16]
  4431b8:	mov	x21, x0
  4431bc:	mov	w0, #0x1                   	// #1
  4431c0:	str	w0, [x20, #12]
  4431c4:	str	x1, [x20, #40]
  4431c8:	b	442ffc <ferror@plt+0x3fa2c>
  4431cc:	ldrb	w2, [x19, #1138]
  4431d0:	cbz	w2, 4430a0 <ferror@plt+0x3fad0>
  4431d4:	ldrh	w2, [x20, #16]
  4431d8:	cbz	w2, 4430a0 <ferror@plt+0x3fad0>
  4431dc:	cmp	w1, #0x3e
  4431e0:	b.eq	4431ec <ferror@plt+0x3fc1c>  // b.none
  4431e4:	cmp	w1, #0x38
  4431e8:	b.ne	4430a0 <ferror@plt+0x3fad0>  // b.any
  4431ec:	ldr	w1, [x0, #8]
  4431f0:	ldr	x2, [x0, #16]
  4431f4:	sub	x1, x1, #0x1
  4431f8:	add	x27, x2, x1
  4431fc:	add	x4, x2, #0x1
  443200:	cmp	x27, x4
  443204:	b.ls	4430a0 <ferror@plt+0x3fad0>  // b.plast
  443208:	ldrb	w1, [x4]
  44320c:	ldrb	w0, [x4]
  443210:	ldrh	w1, [x26, x1, lsl #1]
  443214:	tbnz	w1, #9, 4432b4 <ferror@plt+0x3fce4>
  443218:	cmp	w0, #0x24
  44321c:	b.ne	443228 <ferror@plt+0x3fc58>  // b.any
  443220:	ldrb	w0, [x19, #1146]
  443224:	cbnz	w0, 4432b4 <ferror@plt+0x3fce4>
  443228:	add	x4, x4, #0x1
  44322c:	cmp	x27, x4
  443230:	b.ne	443208 <ferror@plt+0x3fc38>  // b.any
  443234:	mov	x4, x27
  443238:	mov	x28, x27
  44323c:	sub	x2, x28, x4
  443240:	ldrh	w8, [x20, #16]
  443244:	mov	w7, w2
  443248:	and	x2, x2, #0xffffffff
  44324c:	mov	x21, #0x0                   	// #0
  443250:	cmp	w8, w21
  443254:	b.ls	4432ac <ferror@plt+0x3fcdc>  // b.plast
  443258:	ldr	x0, [x20]
  44325c:	ldr	x0, [x0, x21, lsl #3]
  443260:	ldr	w1, [x0, #8]
  443264:	cmp	w7, w1
  443268:	b.ne	4432f0 <ferror@plt+0x3fd20>  // b.any
  44326c:	ldr	x3, [x0]
  443270:	mov	x0, x4
  443274:	stp	x4, x3, [sp, #96]
  443278:	mov	x1, x3
  44327c:	str	x2, [sp, #112]
  443280:	stp	w7, w8, [sp, #120]
  443284:	bl	4031e0 <memcmp@plt>
  443288:	ldp	w7, w8, [sp, #120]
  44328c:	ldp	x4, x3, [sp, #96]
  443290:	ldr	x2, [sp, #112]
  443294:	cbnz	w0, 4432f0 <ferror@plt+0x3fd20>
  443298:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44329c:	mov	w1, #0x6                   	// #6
  4432a0:	add	x2, x0, #0x93b
  4432a4:	mov	x0, x19
  4432a8:	bl	435ba8 <ferror@plt+0x325d8>
  4432ac:	mov	x4, x28
  4432b0:	b	443200 <ferror@plt+0x3fc30>
  4432b4:	mov	x28, x4
  4432b8:	cmp	x27, x28
  4432bc:	b.ls	44323c <ferror@plt+0x3fc6c>  // b.plast
  4432c0:	ldrb	w1, [x28]
  4432c4:	mov	w2, #0x204                 	// #516
  4432c8:	ldrb	w0, [x28]
  4432cc:	ldrh	w1, [x26, x1, lsl #1]
  4432d0:	tst	w2, w1
  4432d4:	b.ne	4432e8 <ferror@plt+0x3fd18>  // b.any
  4432d8:	cmp	w0, #0x24
  4432dc:	b.ne	44323c <ferror@plt+0x3fc6c>  // b.any
  4432e0:	ldrb	w0, [x19, #1146]
  4432e4:	cbz	w0, 44323c <ferror@plt+0x3fc6c>
  4432e8:	add	x28, x28, #0x1
  4432ec:	b	4432b8 <ferror@plt+0x3fce8>
  4432f0:	add	x21, x21, #0x1
  4432f4:	b	443250 <ferror@plt+0x3fc80>
  4432f8:	ldr	w0, [x19, #1116]
  4432fc:	cmp	w0, #0x15
  443300:	b.eq	443140 <ferror@plt+0x3fb70>  // b.none
  443304:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443308:	add	x2, x2, #0x975
  44330c:	mov	x0, x19
  443310:	mov	w1, #0x3                   	// #3
  443314:	bl	435b3c <ferror@plt+0x3256c>
  443318:	b	442dcc <ferror@plt+0x3f7fc>
  44331c:	ldrb	w0, [sp, #161]
  443320:	cbz	w0, 443344 <ferror@plt+0x3fd74>
  443324:	ldr	w0, [sp, #164]
  443328:	cbz	w0, 44334c <ferror@plt+0x3fd7c>
  44332c:	ldr	w2, [sp, #172]
  443330:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443334:	ldr	x0, [sp, #152]
  443338:	add	x3, x3, #0x9d4
  44333c:	mov	w1, #0x3                   	// #3
  443340:	bl	435ec4 <ferror@plt+0x328f4>
  443344:	ldr	w0, [sp, #164]
  443348:	cbnz	w0, 442dcc <ferror@plt+0x3f7fc>
  44334c:	ldr	w1, [x20, #12]
  443350:	mov	x0, #0x18                  	// #24
  443354:	sub	w1, w1, #0x1
  443358:	str	w1, [x20, #12]
  44335c:	madd	x1, x1, x0, x0
  443360:	mov	x0, x19
  443364:	bl	43f28c <ferror@plt+0x3bcbc>
  443368:	mov	x20, x0
  44336c:	ldr	w0, [x0, #12]
  443370:	cbnz	w0, 443460 <ferror@plt+0x3fe90>
  443374:	cbz	w24, 443498 <ferror@plt+0x3fec8>
  443378:	mov	w21, #0x18                  	// #24
  44337c:	mov	x1, #0x0                   	// #0
  443380:	mov	x0, x19
  443384:	umull	x24, w24, w21
  443388:	mov	x2, x24
  44338c:	bl	441bf8 <ferror@plt+0x3e628>
  443390:	add	x7, x20, #0x18
  443394:	mov	x1, x0
  443398:	mov	w2, w21
  44339c:	mov	w3, #0x0                   	// #0
  4433a0:	mov	w6, #0x0                   	// #0
  4433a4:	mov	w5, #0x0                   	// #0
  4433a8:	ldr	w4, [x20, #12]
  4433ac:	umaddl	x0, w6, w2, x7
  4433b0:	cmp	w4, w3
  4433b4:	b.eq	443484 <ferror@plt+0x3feb4>  // b.none
  4433b8:	umaddl	x4, w3, w2, x7
  4433bc:	ldrb	w8, [x4, #4]
  4433c0:	cmp	w8, #0x26
  4433c4:	ldp	x8, x9, [x4]
  4433c8:	b.ne	443470 <ferror@plt+0x3fea0>  // b.any
  4433cc:	umaddl	x0, w5, w2, x1
  4433d0:	add	w5, w5, #0x1
  4433d4:	stp	x8, x9, [x0]
  4433d8:	ldr	x4, [x4, #16]
  4433dc:	str	x4, [x0, #16]
  4433e0:	add	w3, w3, #0x1
  4433e4:	b	4433a8 <ferror@plt+0x3fdd8>
  4433e8:	cmp	w0, #0x26
  4433ec:	b.ne	443458 <ferror@plt+0x3fe88>  // b.any
  4433f0:	ldr	w0, [x20, #12]
  4433f4:	cmp	w0, #0x1
  4433f8:	b.eq	443150 <ferror@plt+0x3fb80>  // b.none
  4433fc:	sub	w0, w0, #0x1
  443400:	cbz	w25, 443420 <ferror@plt+0x3fe50>
  443404:	add	w24, w24, #0x1
  443408:	str	w0, [x21, #8]
  44340c:	mov	x1, x21
  443410:	add	x0, sp, #0x98
  443414:	bl	445200 <ferror@plt+0x41c30>
  443418:	cbnz	w0, 443034 <ferror@plt+0x3fa64>
  44341c:	b	442dcc <ferror@plt+0x3f7fc>
  443420:	ldrh	w3, [x21, #6]
  443424:	mov	w4, #0x108                 	// #264
  443428:	ldurh	w1, [x21, #-18]
  44342c:	str	w0, [x20, #12]
  443430:	tst	x3, #0x2
  443434:	orr	w0, w1, #0x8
  443438:	orr	w1, w1, w4
  44343c:	csel	w0, w0, w1, eq  // eq = none
  443440:	sturh	w0, [x21, #-18]
  443444:	tbz	w3, #0, 443450 <ferror@plt+0x3fe80>
  443448:	orr	w0, w0, #0x200
  44344c:	sturh	w0, [x21, #-18]
  443450:	mov	w25, #0x1                   	// #1
  443454:	b	44340c <ferror@plt+0x3fe3c>
  443458:	mov	w25, #0x0                   	// #0
  44345c:	b	44340c <ferror@plt+0x3fe3c>
  443460:	ldrh	w0, [x20, #30]
  443464:	and	w0, w0, #0xfffffffe
  443468:	strh	w0, [x20, #30]
  44346c:	b	443374 <ferror@plt+0x3fda4>
  443470:	stp	x8, x9, [x0]
  443474:	add	w6, w6, #0x1
  443478:	ldr	x4, [x4, #16]
  44347c:	str	x4, [x0, #16]
  443480:	b	4433e0 <ferror@plt+0x3fe10>
  443484:	mov	x2, x24
  443488:	bl	402cd0 <memcpy@plt>
  44348c:	ldrb	w0, [x20, #19]
  443490:	orr	w0, w0, #0x40
  443494:	strb	w0, [x20, #19]
  443498:	mov	w21, #0x1                   	// #1
  44349c:	b	442dd0 <ferror@plt+0x3f800>
  4434a0:	mov	x20, #0x0                   	// #0
  4434a4:	b	442dd0 <ferror@plt+0x3f800>
  4434a8:	ldrb	w0, [x22, #18]
  4434ac:	and	w0, w0, #0x3
  4434b0:	cmp	w0, #0x3
  4434b4:	b.ne	4434dc <ferror@plt+0x3ff0c>  // b.any
  4434b8:	ldrb	w0, [x19, #1143]
  4434bc:	cbz	w0, 443574 <ferror@plt+0x3ffa4>
  4434c0:	mov	w1, #0xb                   	// #11
  4434c4:	b	442cb4 <ferror@plt+0x3f6e4>
  4434c8:	ldrh	w0, [x22, #18]
  4434cc:	mov	w1, #0xb                   	// #11
  4434d0:	tst	x0, #0x20
  4434d4:	csel	w1, w1, wzr, eq  // eq = none
  4434d8:	b	442cb4 <ferror@plt+0x3f6e4>
  4434dc:	tbnz	w1, #6, 443574 <ferror@plt+0x3ffa4>
  4434e0:	ldr	x24, [x22, #24]
  4434e4:	ldrb	w2, [x24, #18]
  4434e8:	cbz	w2, 443504 <ferror@plt+0x3ff34>
  4434ec:	ldr	x3, [x19, #1048]
  4434f0:	sub	w2, w2, #0x1
  4434f4:	mov	x1, x24
  4434f8:	mov	x0, x19
  4434fc:	blr	x3
  443500:	strb	wzr, [x24, #18]
  443504:	ldrh	w1, [x24, #16]
  443508:	ldrh	w0, [x20, #16]
  44350c:	cmp	w0, w1
  443510:	b.ne	442ca0 <ferror@plt+0x3f6d0>  // b.any
  443514:	ldrb	w1, [x24, #19]
  443518:	ldrb	w2, [x20, #19]
  44351c:	eor	w2, w1, w2
  443520:	tst	w2, #0xc
  443524:	b.ne	442ca0 <ferror@plt+0x3f6d0>  // b.any
  443528:	mov	w2, w0
  44352c:	sub	w0, w0, #0x1
  443530:	cbz	w2, 443554 <ferror@plt+0x3ff84>
  443534:	ldr	x4, [x20]
  443538:	ubfiz	x2, x0, #3, #32
  44353c:	ldr	x3, [x24]
  443540:	ldr	x3, [x3, x2]
  443544:	ldr	x2, [x4, x2]
  443548:	cmp	x3, x2
  44354c:	b.eq	443528 <ferror@plt+0x3ff58>  // b.none
  443550:	b	442ca0 <ferror@plt+0x3f6d0>
  443554:	and	w1, w1, #0x3
  443558:	cmp	w1, #0x2
  44355c:	b.ne	443610 <ferror@plt+0x40040>  // b.any
  443560:	mov	x1, x20
  443564:	mov	x0, x24
  443568:	bl	447930 <ferror@plt+0x44360>
  44356c:	tst	w0, #0xff
  443570:	b.ne	442ca0 <ferror@plt+0x3f6d0>  // b.any
  443574:	mov	x0, x22
  443578:	bl	442a80 <ferror@plt+0x3f4b0>
  44357c:	ldrb	w0, [x22, #18]
  443580:	mov	w1, #0x2                   	// #2
  443584:	ldr	x19, [x22]
  443588:	str	x20, [x22, #24]
  44358c:	bfxil	w0, w1, #0, #2
  443590:	strb	w0, [x22, #18]
  443594:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443598:	mov	x0, x19
  44359c:	add	x1, x1, #0xa2b
  4435a0:	mov	x2, #0x7                   	// #7
  4435a4:	bl	402f80 <strncmp@plt>
  4435a8:	cbnz	w0, 4435f4 <ferror@plt+0x40024>
  4435ac:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4435b0:	mov	x0, x19
  4435b4:	add	x1, x1, #0xa33
  4435b8:	bl	403220 <strcmp@plt>
  4435bc:	cbz	w0, 4435f4 <ferror@plt+0x40024>
  4435c0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4435c4:	mov	x0, x19
  4435c8:	add	x1, x1, #0xa48
  4435cc:	bl	403220 <strcmp@plt>
  4435d0:	cbz	w0, 4435f4 <ferror@plt+0x40024>
  4435d4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4435d8:	mov	x0, x19
  4435dc:	add	x1, x1, #0xa5c
  4435e0:	bl	403220 <strcmp@plt>
  4435e4:	cbz	w0, 4435f4 <ferror@plt+0x40024>
  4435e8:	ldrh	w0, [x22, #18]
  4435ec:	orr	w0, w0, #0x20
  4435f0:	strh	w0, [x22, #18]
  4435f4:	ldrh	w0, [x22, #18]
  4435f8:	mov	w21, #0x1                   	// #1
  4435fc:	ubfx	x1, x0, #2, #8
  443600:	and	w1, w1, #0xffffffbf
  443604:	bfi	w0, w1, #2, #8
  443608:	strh	w0, [x22, #18]
  44360c:	b	442de4 <ferror@plt+0x3f814>
  443610:	ldr	w0, [x20, #12]
  443614:	ldr	w21, [x24, #12]
  443618:	cmp	w21, w0
  44361c:	b.ne	442ca0 <ferror@plt+0x3f6d0>  // b.any
  443620:	sub	w21, w21, #0x1
  443624:	mov	x23, #0x18                  	// #24
  443628:	cmn	w21, #0x1
  44362c:	b.eq	443574 <ferror@plt+0x3ffa4>  // b.none
  443630:	mov	w0, w21
  443634:	sub	w21, w21, #0x1
  443638:	madd	x0, x0, x23, x23
  44363c:	add	x1, x20, x0
  443640:	add	x0, x24, x0
  443644:	bl	43c6c0 <ferror@plt+0x390f0>
  443648:	cbnz	w0, 443628 <ferror@plt+0x40058>
  44364c:	b	442ca0 <ferror@plt+0x3f6d0>
  443650:	mov	w21, #0x0                   	// #0
  443654:	b	442de4 <ferror@plt+0x3f814>
  443658:	ubfiz	x1, x23, #3, #32
  44365c:	mov	x0, x19
  443660:	mov	x21, #0x0                   	// #0
  443664:	bl	43f28c <ferror@plt+0x3bcbc>
  443668:	mov	x24, x0
  44366c:	b	442fb4 <ferror@plt+0x3f9e4>
  443670:	ldr	x0, [x1, #24]
  443674:	add	w2, w2, #0x1
  443678:	strb	w2, [x0, #18]
  44367c:	ret
  443680:	stp	x29, x30, [sp, #-48]!
  443684:	mov	x29, sp
  443688:	stp	x19, x20, [sp, #16]
  44368c:	mov	x19, x0
  443690:	mov	x20, x1
  443694:	str	x21, [sp, #32]
  443698:	ldrh	w2, [x1, #18]
  44369c:	orr	w2, w2, #0x80
  4436a0:	strh	w2, [x1, #18]
  4436a4:	and	w2, w2, #0x3
  4436a8:	cmp	w2, #0x2
  4436ac:	b.eq	4436d0 <ferror@plt+0x40100>  // b.none
  4436b0:	cmp	w2, #0x3
  4436b4:	b.eq	4436f0 <ferror@plt+0x40120>  // b.none
  4436b8:	cbnz	w2, 443718 <ferror@plt+0x40148>
  4436bc:	ldr	x3, [x0, #1016]
  4436c0:	cbz	x3, 443730 <ferror@plt+0x40160>
  4436c4:	mov	x2, x1
  4436c8:	ldr	w1, [x0, #48]
  4436cc:	b	443704 <ferror@plt+0x40134>
  4436d0:	ldr	x21, [x1, #24]
  4436d4:	ldrb	w2, [x21, #18]
  4436d8:	cbz	w2, 4436f0 <ferror@plt+0x40120>
  4436dc:	ldr	x3, [x0, #1048]
  4436e0:	sub	w2, w2, #0x1
  4436e4:	mov	x1, x21
  4436e8:	blr	x3
  4436ec:	strb	wzr, [x21, #18]
  4436f0:	ldr	x3, [x19, #1008]
  4436f4:	cbz	x3, 443730 <ferror@plt+0x40160>
  4436f8:	ldr	w1, [x19, #48]
  4436fc:	mov	x2, x20
  443700:	mov	x0, x19
  443704:	ldp	x19, x20, [sp, #16]
  443708:	mov	x16, x3
  44370c:	ldr	x21, [sp, #32]
  443710:	ldp	x29, x30, [sp], #48
  443714:	br	x16
  443718:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44371c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443720:	add	x2, x2, #0xa73
  443724:	add	x0, x0, #0x4de
  443728:	mov	w1, #0xe0b                 	// #3595
  44372c:	bl	403600 <ferror@plt+0x30>
  443730:	ldp	x19, x20, [sp, #16]
  443734:	ldr	x21, [sp, #32]
  443738:	ldp	x29, x30, [sp], #48
  44373c:	ret
  443740:	stp	x29, x30, [sp, #-272]!
  443744:	mov	x29, sp
  443748:	stp	x19, x20, [sp, #16]
  44374c:	mov	x20, x1
  443750:	mov	x19, x0
  443754:	stp	x21, x22, [sp, #32]
  443758:	mov	w1, #0x1                   	// #1
  44375c:	stp	x23, x24, [sp, #48]
  443760:	stp	x25, x26, [sp, #64]
  443764:	stp	x27, x28, [sp, #80]
  443768:	strb	wzr, [x0, #19]
  44376c:	strb	w1, [x0, #192]
  443770:	strb	wzr, [x0, #440]
  443774:	ldrb	w0, [x20, #18]
  443778:	str	x2, [sp, #176]
  44377c:	str	w3, [sp, #200]
  443780:	and	w0, w0, #0x3
  443784:	cmp	w0, #0x2
  443788:	b.ne	4449e8 <ferror@plt+0x41418>  // b.any
  44378c:	ldr	x0, [x20, #24]
  443790:	str	x0, [sp, #104]
  443794:	ldrb	w0, [x0, #19]
  443798:	tbz	w0, #2, 444900 <ferror@plt+0x41330>
  44379c:	ldrb	w0, [x19, #24]
  4437a0:	mov	x21, #0x0                   	// #0
  4437a4:	strb	w1, [x19, #25]
  4437a8:	add	w0, w0, #0x1
  4437ac:	strb	w0, [x19, #24]
  4437b0:	ldr	w0, [x19, #500]
  4437b4:	add	w0, w0, #0x1
  4437b8:	str	w0, [x19, #500]
  4437bc:	mov	x0, x19
  4437c0:	bl	444ea4 <ferror@plt+0x418d4>
  4437c4:	ldrb	w1, [x0, #4]
  4437c8:	cmp	w1, #0x53
  4437cc:	b.ne	4437f4 <ferror@plt+0x40224>  // b.any
  4437d0:	cbz	x21, 4437ec <ferror@plt+0x4021c>
  4437d4:	ldrh	w1, [x21, #6]
  4437d8:	tbnz	w1, #0, 4437bc <ferror@plt+0x401ec>
  4437dc:	ldr	x1, [x0, #8]
  4437e0:	cmp	x1, #0x0
  4437e4:	csel	x21, x21, x0, ne  // ne = any
  4437e8:	b	4437bc <ferror@plt+0x401ec>
  4437ec:	mov	x21, x0
  4437f0:	b	4437bc <ferror@plt+0x401ec>
  4437f4:	cmp	w1, #0x14
  4437f8:	b.ne	443c54 <ferror@plt+0x40684>  // b.any
  4437fc:	mov	w0, #0x2                   	// #2
  443800:	strb	w0, [x19, #25]
  443804:	mov	w1, #0x1c0                 	// #448
  443808:	ldrb	w0, [x19, #1157]
  44380c:	ldr	x25, [x20, #24]
  443810:	str	w0, [sp, #136]
  443814:	mov	x0, x19
  443818:	ldrh	w21, [x25, #16]
  44381c:	cmp	w21, #0x0
  443820:	csinc	w21, w21, wzr, ne  // ne = any
  443824:	umull	x1, w21, w1
  443828:	bl	43cbdc <ferror@plt+0x3960c>
  44382c:	str	x0, [sp, #112]
  443830:	mov	w2, #0x30                  	// #48
  443834:	mov	w1, #0x0                   	// #0
  443838:	ldr	x26, [x0, #8]
  44383c:	umull	x21, w21, w2
  443840:	mov	x0, x26
  443844:	mov	x2, x21
  443848:	bl	403000 <memset@plt>
  44384c:	add	x21, x26, x21
  443850:	ldr	x0, [sp, #112]
  443854:	mov	x22, x26
  443858:	str	wzr, [sp, #124]
  44385c:	mov	x24, x0
  443860:	str	x21, [x0, #16]
  443864:	mov	x21, #0x0                   	// #0
  443868:	ldr	w0, [sp, #124]
  44386c:	add	w0, w0, #0x1
  443870:	str	w0, [sp, #124]
  443874:	ldr	x0, [x24, #16]
  443878:	str	x0, [x22]
  44387c:	ldr	w0, [sp, #136]
  443880:	cbz	w0, 443890 <ferror@plt+0x402c0>
  443884:	mov	x0, #0xc8                  	// #200
  443888:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  44388c:	str	x0, [x22, #32]
  443890:	mov	w0, #0x32                  	// #50
  443894:	mov	w23, #0x0                   	// #0
  443898:	mov	w27, #0x0                   	// #0
  44389c:	str	w0, [sp, #128]
  4438a0:	ldr	x1, [x22]
  4438a4:	add	w0, w23, #0x2
  4438a8:	add	w28, w23, #0x2
  4438ac:	add	x0, x1, x0, lsl #3
  4438b0:	ldr	x1, [x24, #24]
  4438b4:	cmp	x1, x0
  4438b8:	b.cs	4438d8 <ferror@plt+0x40308>  // b.hs, b.nlast
  4438bc:	mov	x1, x24
  4438c0:	mov	x0, x19
  4438c4:	mov	x2, #0x1f40                	// #8000
  4438c8:	bl	43cc78 <ferror@plt+0x396a8>
  4438cc:	mov	x24, x0
  4438d0:	ldr	x0, [x0, #16]
  4438d4:	str	x0, [x22]
  4438d8:	ldr	w0, [sp, #136]
  4438dc:	cbz	w0, 443908 <ferror@plt+0x40338>
  4438e0:	ldr	w0, [sp, #128]
  4438e4:	cmp	w28, w0
  4438e8:	b.ls	443908 <ferror@plt+0x40338>  // b.plast
  4438ec:	add	w0, w0, #0x3e8
  4438f0:	str	w0, [sp, #128]
  4438f4:	ldr	x0, [sp, #128]
  4438f8:	ubfiz	x1, x0, #2, #32
  4438fc:	ldr	x0, [x22, #32]
  443900:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  443904:	str	x0, [x22, #32]
  443908:	add	x1, sp, #0xf8
  44390c:	mov	x0, x19
  443910:	bl	444a48 <ferror@plt+0x41478>
  443914:	mov	x28, x0
  443918:	ldrb	w0, [x0, #4]
  44391c:	cmp	w0, #0x53
  443920:	b.ne	443954 <ferror@plt+0x40384>  // b.any
  443924:	cbz	w23, 4438a0 <ferror@plt+0x402d0>
  443928:	ldrb	w0, [x19, #1157]
  44392c:	mov	w3, w23
  443930:	ldr	w2, [sp, #248]
  443934:	mov	x1, x28
  443938:	cmp	w0, #0x0
  44393c:	add	w23, w23, #0x1
  443940:	cset	w5, ne  // ne = any
  443944:	mov	x0, x22
  443948:	mov	w4, #0x0                   	// #0
  44394c:	bl	441ad8 <ferror@plt+0x3e508>
  443950:	b	4438a0 <ferror@plt+0x402d0>
  443954:	cmp	w0, #0x14
  443958:	b.ne	443964 <ferror@plt+0x40394>  // b.any
  44395c:	add	w27, w27, #0x1
  443960:	b	443928 <ferror@plt+0x40358>
  443964:	cmp	w0, #0x15
  443968:	b.ne	44397c <ferror@plt+0x403ac>  // b.any
  44396c:	sub	w0, w27, #0x1
  443970:	cbz	w27, 4439a0 <ferror@plt+0x403d0>
  443974:	mov	w27, w0
  443978:	b	443928 <ferror@plt+0x40358>
  44397c:	cmp	w0, #0x13
  443980:	b.ne	443a7c <ferror@plt+0x404ac>  // b.any
  443984:	cbnz	w27, 443928 <ferror@plt+0x40358>
  443988:	ldrb	w0, [x25, #19]
  44398c:	tbz	w0, #3, 4439a0 <ferror@plt+0x403d0>
  443990:	ldrh	w0, [x25, #16]
  443994:	ldr	w1, [sp, #124]
  443998:	cmp	w1, w0
  44399c:	b.eq	443928 <ferror@plt+0x40358>  // b.none
  4439a0:	cbz	w23, 4439bc <ferror@plt+0x403ec>
  4439a4:	ldr	x1, [x22]
  4439a8:	sub	w0, w23, #0x1
  4439ac:	ldr	x1, [x1, w0, uxtw #3]
  4439b0:	ldrb	w1, [x1, #4]
  4439b4:	cmp	w1, #0x53
  4439b8:	b.eq	443b4c <ferror@plt+0x4057c>  // b.none
  4439bc:	ldr	w2, [x19, #688]
  4439c0:	add	x1, x19, #0x2b0
  4439c4:	str	w23, [x22, #24]
  4439c8:	mov	w3, w23
  4439cc:	mov	w4, #0x0                   	// #0
  4439d0:	ldrb	w0, [x19, #1157]
  4439d4:	cmp	w0, #0x0
  4439d8:	mov	x0, x22
  4439dc:	cset	w5, ne  // ne = any
  4439e0:	bl	441ad8 <ferror@plt+0x3e508>
  4439e4:	ldrh	w1, [x25, #16]
  4439e8:	ldr	w0, [sp, #124]
  4439ec:	cmp	w0, w1
  4439f0:	b.hi	443a10 <ferror@plt+0x40440>  // b.pmore
  4439f4:	ldr	x0, [x22]
  4439f8:	add	w23, w23, #0x1
  4439fc:	add	x23, x0, x23, lsl #3
  443a00:	mov	x0, x22
  443a04:	add	x22, x22, #0x30
  443a08:	str	x23, [x24, #16]
  443a0c:	csel	x22, x22, x0, ne  // ne = any
  443a10:	ldrb	w2, [x28, #4]
  443a14:	sub	w0, w2, #0x15
  443a18:	and	w0, w0, #0xff
  443a1c:	cmp	w0, #0x1
  443a20:	b.hi	443868 <ferror@plt+0x40298>  // b.pmore
  443a24:	cmp	w2, #0x16
  443a28:	b.ne	443b54 <ferror@plt+0x40584>  // b.any
  443a2c:	ldr	x0, [x19, #136]
  443a30:	ldr	x0, [x0, #8]
  443a34:	cbnz	x0, 443a40 <ferror@plt+0x40470>
  443a38:	ldrb	w0, [x19, #16]
  443a3c:	cbz	w0, 443a4c <ferror@plt+0x4047c>
  443a40:	mov	x0, x19
  443a44:	mov	w1, #0x1                   	// #1
  443a48:	bl	442800 <ferror@plt+0x3f230>
  443a4c:	ldr	x3, [x20]
  443a50:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443a54:	mov	x0, x19
  443a58:	add	x2, x2, #0xa89
  443a5c:	mov	w1, #0x3                   	// #3
  443a60:	bl	435b3c <ferror@plt+0x3256c>
  443a64:	ldr	x1, [sp, #112]
  443a68:	mov	x0, x19
  443a6c:	bl	43cbbc <ferror@plt+0x395ec>
  443a70:	str	wzr, [sp, #124]
  443a74:	str	xzr, [sp, #112]
  443a78:	b	443bc8 <ferror@plt+0x405f8>
  443a7c:	cmp	w0, #0x16
  443a80:	b.eq	4439a0 <ferror@plt+0x403d0>  // b.none
  443a84:	cmp	w0, #0x25
  443a88:	b.ne	443a98 <ferror@plt+0x404c8>  // b.any
  443a8c:	ldrh	w0, [x28, #6]
  443a90:	tbz	w0, #6, 443928 <ferror@plt+0x40358>
  443a94:	b	4439a0 <ferror@plt+0x403d0>
  443a98:	cmp	w0, #0x51
  443a9c:	b.ne	443928 <ferror@plt+0x40358>  // b.any
  443aa0:	mov	x0, x19
  443aa4:	bl	43c144 <ferror@plt+0x38b74>
  443aa8:	ldp	x2, x3, [x28]
  443aac:	stp	x2, x3, [x0]
  443ab0:	ldr	x1, [x28, #16]
  443ab4:	mov	x28, x0
  443ab8:	str	x1, [x0, #16]
  443abc:	cbz	x21, 443b1c <ferror@plt+0x4054c>
  443ac0:	ldp	x1, x0, [x21, #16]
  443ac4:	sub	x0, x0, x1
  443ac8:	cmp	x0, #0x7
  443acc:	b.ls	443b30 <ferror@plt+0x40560>  // b.plast
  443ad0:	ldr	x0, [x21, #16]
  443ad4:	str	x28, [x0], #8
  443ad8:	str	x0, [x21, #16]
  443adc:	ldrb	w0, [x28, #4]
  443ae0:	cmp	w0, #0x52
  443ae4:	b.eq	443b04 <ferror@plt+0x40534>  // b.none
  443ae8:	add	x1, sp, #0xf8
  443aec:	mov	x0, x19
  443af0:	bl	444a48 <ferror@plt+0x41478>
  443af4:	mov	x28, x0
  443af8:	ldrb	w0, [x0, #4]
  443afc:	cmp	w0, #0x16
  443b00:	b.ne	443abc <ferror@plt+0x404ec>  // b.any
  443b04:	mov	w0, #0x201                 	// #513
  443b08:	strh	w0, [x19, #24]
  443b0c:	ldrb	w0, [x28, #4]
  443b10:	cmp	w0, #0x16
  443b14:	b.eq	4439a0 <ferror@plt+0x403d0>  // b.none
  443b18:	b	4438a0 <ferror@plt+0x402d0>
  443b1c:	mov	x0, x19
  443b20:	mov	x1, #0x100                 	// #256
  443b24:	bl	43cbdc <ferror@plt+0x3960c>
  443b28:	mov	x21, x0
  443b2c:	b	443ad0 <ferror@plt+0x40500>
  443b30:	ldr	x0, [x21, #8]
  443b34:	sub	x1, x1, x0
  443b38:	mov	x0, x19
  443b3c:	lsl	x1, x1, #1
  443b40:	bl	43cbdc <ferror@plt+0x3960c>
  443b44:	str	x21, [x0]
  443b48:	b	443b28 <ferror@plt+0x40558>
  443b4c:	mov	w23, w0
  443b50:	b	4439a0 <ferror@plt+0x403d0>
  443b54:	ldr	w0, [sp, #124]
  443b58:	cmp	w0, #0x1
  443b5c:	b.ne	443c4c <ferror@plt+0x4067c>  // b.any
  443b60:	cbnz	w1, 443c4c <ferror@plt+0x4067c>
  443b64:	ldr	w0, [x26, #24]
  443b68:	cmp	w0, #0x0
  443b6c:	cset	w22, ne  // ne = any
  443b70:	mov	w3, w22
  443b74:	mov	x2, x20
  443b78:	mov	x1, x25
  443b7c:	mov	x0, x19
  443b80:	bl	442338 <ferror@plt+0x3ed68>
  443b84:	tst	w0, #0xff
  443b88:	b.eq	443a64 <ferror@plt+0x40494>  // b.none
  443b8c:	ldrb	w0, [x25, #19]
  443b90:	tbz	w0, #3, 443bc8 <ferror@plt+0x405f8>
  443b94:	ldrh	w1, [x25, #16]
  443b98:	cmp	w22, w1
  443b9c:	b.cc	443bb8 <ferror@plt+0x405e8>  // b.lo, b.ul, b.last
  443ba0:	cmp	w22, #0x1
  443ba4:	b.ne	443bc8 <ferror@plt+0x405f8>  // b.any
  443ba8:	ldr	w0, [x26, #24]
  443bac:	cbnz	w0, 443bc8 <ferror@plt+0x405f8>
  443bb0:	ldrb	w0, [x19, #1153]
  443bb4:	cbnz	w0, 443bc8 <ferror@plt+0x405f8>
  443bb8:	mov	w0, #0x30                  	// #48
  443bbc:	mov	x2, #0xffffffffffffffd0    	// #-48
  443bc0:	umaddl	x0, w0, w1, x2
  443bc4:	str	xzr, [x26, x0]
  443bc8:	ldr	w0, [x19, #500]
  443bcc:	strb	wzr, [x19, #25]
  443bd0:	sub	w0, w0, #0x1
  443bd4:	str	w0, [x19, #500]
  443bd8:	ldrb	w0, [x19, #24]
  443bdc:	sub	w0, w0, #0x1
  443be0:	strb	w0, [x19, #24]
  443be4:	ldr	x0, [sp, #112]
  443be8:	cbnz	x0, 443c9c <ferror@plt+0x406cc>
  443bec:	ldrb	w0, [x19, #1138]
  443bf0:	cbz	w0, 443c18 <ferror@plt+0x40648>
  443bf4:	ldr	x0, [x20, #24]
  443bf8:	ldrb	w0, [x0, #19]
  443bfc:	tbnz	w0, #4, 443c18 <ferror@plt+0x40648>
  443c00:	ldr	x3, [x20]
  443c04:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443c08:	mov	x0, x19
  443c0c:	add	x2, x2, #0xab8
  443c10:	mov	w1, #0x6                   	// #6
  443c14:	bl	435ba8 <ferror@plt+0x325d8>
  443c18:	cbz	x21, 443c28 <ferror@plt+0x40658>
  443c1c:	mov	x1, x21
  443c20:	mov	x0, x19
  443c24:	bl	43cbbc <ferror@plt+0x395ec>
  443c28:	mov	w0, #0x0                   	// #0
  443c2c:	strb	wzr, [x19, #192]
  443c30:	ldp	x19, x20, [sp, #16]
  443c34:	ldp	x21, x22, [sp, #32]
  443c38:	ldp	x23, x24, [sp, #48]
  443c3c:	ldp	x25, x26, [sp, #64]
  443c40:	ldp	x27, x28, [sp, #80]
  443c44:	ldp	x29, x30, [sp], #272
  443c48:	ret
  443c4c:	ldr	w22, [sp, #124]
  443c50:	b	443b70 <ferror@plt+0x405a0>
  443c54:	cmp	w1, #0x16
  443c58:	b.ne	443c74 <ferror@plt+0x406a4>  // b.any
  443c5c:	add	x1, x19, #0x2b0
  443c60:	cmp	x0, x1
  443c64:	b.eq	443c74 <ferror@plt+0x406a4>  // b.none
  443c68:	mov	x21, #0x0                   	// #0
  443c6c:	str	wzr, [sp, #124]
  443c70:	b	443a74 <ferror@plt+0x404a4>
  443c74:	mov	x0, x19
  443c78:	mov	w1, #0x1                   	// #1
  443c7c:	bl	442800 <ferror@plt+0x3f230>
  443c80:	cbz	x21, 443c68 <ferror@plt+0x40698>
  443c84:	mov	x2, x21
  443c88:	mov	x0, x19
  443c8c:	mov	w3, #0x1                   	// #1
  443c90:	mov	x1, #0x0                   	// #0
  443c94:	bl	442430 <ferror@plt+0x3ee60>
  443c98:	b	443c68 <ferror@plt+0x40698>
  443c9c:	ldr	x0, [sp, #104]
  443ca0:	ldrh	w0, [x0, #16]
  443ca4:	cbz	w0, 4447a4 <ferror@plt+0x411d4>
  443ca8:	ldr	x0, [sp, #112]
  443cac:	str	xzr, [sp, #216]
  443cb0:	ldr	x0, [x0, #8]
  443cb4:	str	x0, [sp, #136]
  443cb8:	ldr	x0, [sp, #104]
  443cbc:	bl	441e4c <ferror@plt+0x3e87c>
  443cc0:	mov	w25, w0
  443cc4:	mov	w23, w0
  443cc8:	ldr	x0, [sp, #104]
  443ccc:	add	x0, x0, #0x18
  443cd0:	str	x0, [sp, #128]
  443cd4:	mov	w0, #0x18                  	// #24
  443cd8:	ldr	x1, [sp, #128]
  443cdc:	mov	x24, x1
  443ce0:	umaddl	x0, w25, w0, x1
  443ce4:	str	x0, [sp, #160]
  443ce8:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  443cec:	add	x0, x0, #0xafe
  443cf0:	str	x0, [sp, #184]
  443cf4:	ldr	x0, [sp, #160]
  443cf8:	cmp	x0, x24
  443cfc:	b.ls	444138 <ferror@plt+0x40b68>  // b.plast
  443d00:	ldrb	w0, [x24, #4]
  443d04:	cmp	w0, #0x50
  443d08:	b.ne	444130 <ferror@plt+0x40b60>  // b.any
  443d0c:	ldr	w26, [x24, #8]
  443d10:	add	w0, w23, #0x2
  443d14:	str	w0, [sp, #144]
  443d18:	mov	w0, #0x30                  	// #48
  443d1c:	sub	w26, w26, #0x1
  443d20:	add	w25, w25, #0x2
  443d24:	umull	x26, w26, w0
  443d28:	ldr	x0, [sp, #136]
  443d2c:	add	x22, x0, x26
  443d30:	ldrh	w0, [x24, #6]
  443d34:	tbz	w0, #2, 443fbc <ferror@plt+0x409ec>
  443d38:	ldr	x0, [x22, #16]
  443d3c:	cbnz	x0, 443fb0 <ferror@plt+0x409e0>
  443d40:	ldr	x1, [x19, #64]
  443d44:	ldr	x0, [x1, #24]
  443d48:	ldr	x1, [x1, #16]
  443d4c:	sub	x0, x0, x1
  443d50:	cmp	x0, #0x2
  443d54:	b.hi	443d68 <ferror@plt+0x40798>  // b.pmore
  443d58:	add	x1, x19, #0x40
  443d5c:	mov	x0, x19
  443d60:	mov	x2, #0x3                   	// #3
  443d64:	bl	43cd88 <ferror@plt+0x397b8>
  443d68:	mov	x1, x19
  443d6c:	mov	x26, #0x0                   	// #0
  443d70:	mov	w23, #0x0                   	// #0
  443d74:	str	wzr, [sp, #152]
  443d78:	ldr	x0, [x1, #64]!
  443d7c:	str	x1, [sp, #168]
  443d80:	ldr	x28, [x0, #16]
  443d84:	mov	w0, #0x22                  	// #34
  443d88:	strb	w0, [x28], #1
  443d8c:	ldr	w0, [x22, #24]
  443d90:	ldr	w1, [sp, #152]
  443d94:	cmp	w0, w1
  443d98:	b.ls	443f54 <ferror@plt+0x40984>  // b.plast
  443d9c:	ldr	x0, [x22]
  443da0:	ldr	x27, [x0, w1, uxtw #3]
  443da4:	ldrb	w0, [x27, #4]
  443da8:	cmp	w0, #0x53
  443dac:	b.ne	443dd8 <ferror@plt+0x40808>  // b.any
  443db0:	cbz	x26, 443dc4 <ferror@plt+0x407f4>
  443db4:	ldrh	w0, [x26, #6]
  443db8:	tbnz	w0, #0, 443dc8 <ferror@plt+0x407f8>
  443dbc:	ldr	x0, [x27, #8]
  443dc0:	cbnz	x0, 443dc8 <ferror@plt+0x407f8>
  443dc4:	ldr	x26, [x27, #8]
  443dc8:	ldr	w0, [sp, #152]
  443dcc:	add	w0, w0, #0x1
  443dd0:	str	w0, [sp, #152]
  443dd4:	b	443d8c <ferror@plt+0x407bc>
  443dd8:	sub	w1, w0, #0x3e
  443ddc:	and	w1, w1, #0xff
  443de0:	cmp	w1, #0x4
  443de4:	b.hi	443f00 <ferror@plt+0x40930>  // b.pmore
  443de8:	mov	w5, #0x1                   	// #1
  443dec:	mov	x0, x27
  443df0:	str	w5, [sp, #192]
  443df4:	bl	43c2e8 <ferror@plt+0x38d18>
  443df8:	mov	w2, w0
  443dfc:	ldr	w5, [sp, #192]
  443e00:	cbz	w5, 443e08 <ferror@plt+0x40838>
  443e04:	lsl	x2, x2, #2
  443e08:	ldr	x1, [x19, #64]
  443e0c:	add	x2, x2, #0x3
  443e10:	ldr	x0, [x1, #24]
  443e14:	sub	x0, x0, x28
  443e18:	cmp	x2, x0
  443e1c:	b.ls	443e50 <ferror@plt+0x40880>  // b.plast
  443e20:	ldr	x0, [x1, #16]
  443e24:	str	x2, [sp, #192]
  443e28:	ldr	x1, [sp, #168]
  443e2c:	sub	x28, x28, x0
  443e30:	mov	x0, x19
  443e34:	str	w5, [sp, #204]
  443e38:	bl	43cd88 <ferror@plt+0x397b8>
  443e3c:	ldr	x0, [x19, #64]
  443e40:	ldr	w5, [sp, #204]
  443e44:	ldr	x2, [sp, #192]
  443e48:	ldr	x0, [x0, #16]
  443e4c:	add	x28, x0, x28
  443e50:	ldr	x1, [x19, #64]
  443e54:	sub	x0, x28, #0x1
  443e58:	ldr	x1, [x1, #16]
  443e5c:	cmp	x1, x0
  443e60:	b.eq	443e84 <ferror@plt+0x408b4>  // b.none
  443e64:	cmp	x26, #0x0
  443e68:	csel	x26, x26, x27, ne  // ne = any
  443e6c:	ldrh	w0, [x26, #6]
  443e70:	tbz	w0, #0, 443e84 <ferror@plt+0x408b4>
  443e74:	mov	x4, x28
  443e78:	mov	w0, #0x20                  	// #32
  443e7c:	strb	w0, [x4], #1
  443e80:	mov	x28, x4
  443e84:	cbz	w5, 443f2c <ferror@plt+0x4095c>
  443e88:	mov	x1, x2
  443e8c:	mov	x0, x19
  443e90:	bl	43cbdc <ferror@plt+0x3960c>
  443e94:	mov	x26, x0
  443e98:	mov	x1, x27
  443e9c:	mov	w3, #0x1                   	// #1
  443ea0:	mov	x0, x19
  443ea4:	ldr	x6, [x26, #16]
  443ea8:	str	x6, [sp, #192]
  443eac:	mov	x2, x6
  443eb0:	bl	43c3a0 <ferror@plt+0x38dd0>
  443eb4:	ldr	x6, [sp, #192]
  443eb8:	sub	w2, w0, w6
  443ebc:	mov	x1, x6
  443ec0:	mov	x0, x28
  443ec4:	bl	441f30 <ferror@plt+0x3e960>
  443ec8:	mov	x1, x26
  443ecc:	mov	x28, x0
  443ed0:	mov	x0, x19
  443ed4:	bl	43cbbc <ferror@plt+0x395ec>
  443ed8:	ldrb	w0, [x27, #4]
  443edc:	cmp	w0, #0x3d
  443ee0:	b.ne	443f48 <ferror@plt+0x40978>  // b.any
  443ee4:	ldr	x0, [x27, #16]
  443ee8:	ldrb	w0, [x0]
  443eec:	cmp	w0, #0x5c
  443ef0:	b.ne	443f48 <ferror@plt+0x40978>  // b.any
  443ef4:	add	w23, w23, #0x1
  443ef8:	mov	x26, #0x0                   	// #0
  443efc:	b	443dc8 <ferror@plt+0x407f8>
  443f00:	sub	w1, w0, #0x38
  443f04:	and	w1, w1, #0xff
  443f08:	cmp	w1, #0x4
  443f0c:	b.ls	443de8 <ferror@plt+0x40818>  // b.plast
  443f10:	bl	437078 <ferror@plt+0x33aa8>
  443f14:	tst	w0, #0xff
  443f18:	b.ne	443de8 <ferror@plt+0x40818>  // b.any
  443f1c:	ldrb	w0, [x27, #4]
  443f20:	bl	437088 <ferror@plt+0x33ab8>
  443f24:	and	w5, w0, #0xff
  443f28:	b	443dec <ferror@plt+0x4081c>
  443f2c:	mov	x2, x28
  443f30:	mov	x1, x27
  443f34:	mov	x0, x19
  443f38:	mov	w3, #0x1                   	// #1
  443f3c:	bl	43c3a0 <ferror@plt+0x38dd0>
  443f40:	mov	x28, x0
  443f44:	b	443ed8 <ferror@plt+0x40908>
  443f48:	mov	x26, #0x0                   	// #0
  443f4c:	mov	w23, #0x0                   	// #0
  443f50:	b	443dc8 <ferror@plt+0x407f8>
  443f54:	tbz	w23, #0, 443f6c <ferror@plt+0x4099c>
  443f58:	ldr	x2, [sp, #184]
  443f5c:	mov	x0, x19
  443f60:	sub	x28, x28, #0x1
  443f64:	mov	w1, #0x0                   	// #0
  443f68:	bl	435b3c <ferror@plt+0x3256c>
  443f6c:	mov	x4, x28
  443f70:	mov	w0, #0x22                  	// #34
  443f74:	add	x26, x28, #0x1
  443f78:	strb	w0, [x4], #2
  443f7c:	ldr	x0, [x19, #64]
  443f80:	ldr	x23, [x0, #16]
  443f84:	str	x4, [x0, #16]
  443f88:	mov	x0, x19
  443f8c:	sub	x26, x26, x23
  443f90:	bl	43c144 <ferror@plt+0x38b74>
  443f94:	mov	w1, #0x3e                  	// #62
  443f98:	strb	wzr, [x23, w26, uxtw]
  443f9c:	strb	w1, [x0, #4]
  443fa0:	strh	wzr, [x0, #6]
  443fa4:	str	w26, [x0, #8]
  443fa8:	str	x23, [x0, #16]
  443fac:	str	x0, [x22, #16]
  443fb0:	ldr	w23, [sp, #144]
  443fb4:	add	x24, x24, #0x18
  443fb8:	b	443cf4 <ferror@plt+0x40724>
  443fbc:	tbnz	w0, #3, 443fd4 <ferror@plt+0x40a04>
  443fc0:	ldr	x0, [sp, #128]
  443fc4:	cmp	x0, x24
  443fc8:	b.eq	443fe8 <ferror@plt+0x40a18>  // b.none
  443fcc:	ldurh	w0, [x24, #-18]
  443fd0:	tbz	w0, #3, 443fe8 <ferror@plt+0x40a18>
  443fd4:	ldr	w27, [x22, #24]
  443fd8:	add	w23, w23, #0x1
  443fdc:	add	w0, w23, w27
  443fe0:	str	w0, [sp, #144]
  443fe4:	b	443fb0 <ferror@plt+0x409e0>
  443fe8:	ldr	x0, [x22, #8]
  443fec:	cbnz	x0, 444124 <ferror@plt+0x40b54>
  443ff0:	ldr	w0, [x22, #24]
  443ff4:	cbz	w0, 444124 <ferror@plt+0x40b54>
  443ff8:	ldrb	w0, [x19, #1138]
  443ffc:	strb	wzr, [x19, #1138]
  444000:	cmp	w0, #0x0
  444004:	ldrb	w27, [x19, #1157]
  444008:	cset	w28, ne  // ne = any
  44400c:	mov	x0, #0x800                 	// #2048
  444010:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  444014:	str	x0, [x22, #8]
  444018:	ldrb	w0, [x19, #1157]
  44401c:	cbz	w0, 44402c <ferror@plt+0x40a5c>
  444020:	mov	x0, #0x400                 	// #1024
  444024:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  444028:	str	x0, [x22, #40]
  44402c:	ldr	x0, [sp, #136]
  444030:	ldr	x4, [x0, x26]
  444034:	ldr	w26, [x22, #24]
  444038:	add	w26, w26, #0x1
  44403c:	cbz	w27, 4440ec <ferror@plt+0x40b1c>
  444040:	ldr	x3, [x22, #32]
  444044:	mov	w5, w26
  444048:	mov	x0, x19
  44404c:	mov	x2, #0x0                   	// #0
  444050:	mov	x1, #0x0                   	// #0
  444054:	bl	441cc0 <ferror@plt+0x3e6f0>
  444058:	mov	x26, #0x100                 	// #256
  44405c:	ldr	w27, [x22, #28]
  444060:	add	w27, w27, #0x1
  444064:	cmp	x27, x26
  444068:	b.ls	4440a0 <ferror@plt+0x40ad0>  // b.plast
  44406c:	ldr	x0, [x22, #8]
  444070:	lsl	x1, x27, #4
  444074:	lsl	x26, x27, #1
  444078:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  44407c:	str	x0, [x22, #8]
  444080:	ldrb	w0, [x19, #1157]
  444084:	cbz	w0, 4440a0 <ferror@plt+0x40ad0>
  444088:	ldr	x0, [x22, #40]
  44408c:	lsl	x1, x27, #3
  444090:	cbnz	x0, 444110 <ferror@plt+0x40b40>
  444094:	mov	x0, x1
  444098:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  44409c:	str	x0, [x22, #40]
  4440a0:	add	x1, sp, #0xf8
  4440a4:	mov	x0, x19
  4440a8:	bl	444a48 <ferror@plt+0x41478>
  4440ac:	mov	x1, x0
  4440b0:	ldrb	w0, [x0, #4]
  4440b4:	cmp	w0, #0x16
  4440b8:	b.eq	444118 <ferror@plt+0x40b48>  // b.none
  4440bc:	ldrb	w0, [x19, #1157]
  4440c0:	mov	w4, #0x2                   	// #2
  4440c4:	ldr	w3, [x22, #28]
  4440c8:	ldr	w2, [sp, #248]
  4440cc:	cmp	w0, #0x0
  4440d0:	cset	w5, ne  // ne = any
  4440d4:	mov	x0, x22
  4440d8:	bl	441ad8 <ferror@plt+0x3e508>
  4440dc:	ldr	w0, [x22, #28]
  4440e0:	add	w0, w0, #0x1
  4440e4:	str	w0, [x22, #28]
  4440e8:	b	44405c <ferror@plt+0x40a8c>
  4440ec:	add	x0, x19, #0x88
  4440f0:	str	x4, [sp, #144]
  4440f4:	bl	441c70 <ferror@plt+0x3e6a0>
  4440f8:	stp	xzr, xzr, [x0, #32]
  4440fc:	ldr	x4, [sp, #144]
  444100:	str	wzr, [x0, #48]
  444104:	add	x26, x4, w26, uxtw #3
  444108:	stp	x4, x26, [x0, #16]
  44410c:	b	444058 <ferror@plt+0x40a88>
  444110:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  444114:	b	44409c <ferror@plt+0x40acc>
  444118:	mov	x0, x19
  44411c:	bl	442690 <ferror@plt+0x3f0c0>
  444120:	strb	w28, [x19, #1138]
  444124:	ldr	w27, [x22, #28]
  444128:	add	w23, w23, #0x1
  44412c:	b	443fdc <ferror@plt+0x40a0c>
  444130:	str	w23, [sp, #144]
  444134:	b	443fb0 <ferror@plt+0x409e0>
  444138:	ldrb	w0, [x19, #1157]
  44413c:	add	x2, sp, #0xd8
  444140:	mov	w1, w23
  444144:	str	w0, [sp, #144]
  444148:	cmp	w0, #0x0
  44414c:	mov	x0, x19
  444150:	csel	x2, x2, xzr, ne  // ne = any
  444154:	bl	441bb4 <ferror@plt+0x3e5e4>
  444158:	mov	x24, x0
  44415c:	ldr	x0, [x0, #8]
  444160:	str	x0, [sp, #152]
  444164:	ldr	w0, [sp, #144]
  444168:	cbz	w0, 444288 <ferror@plt+0x40cb8>
  44416c:	cmp	w0, #0x1
  444170:	ldr	w2, [sp, #200]
  444174:	ldr	x0, [x19, #40]
  444178:	csel	w3, w23, w25, ne  // ne = any
  44417c:	mov	x1, x20
  444180:	bl	43f974 <ferror@plt+0x3c3a4>
  444184:	mov	x27, x0
  444188:	ldr	x0, [sp, #104]
  44418c:	mov	x2, #0xffffffffffffffd0    	// #-48
  444190:	ldr	x22, [sp, #128]
  444194:	mov	x23, #0x0                   	// #0
  444198:	ldrh	w3, [x0, #16]
  44419c:	mov	w26, #0x0                   	// #0
  4441a0:	ldrb	w1, [x0, #19]
  4441a4:	mov	w0, #0x30                  	// #48
  4441a8:	str	x19, [sp, #224]
  4441ac:	strb	wzr, [sp, #234]
  4441b0:	umaddl	x0, w0, w3, x2
  4441b4:	ubfx	x1, x1, #3, #1
  4441b8:	ldr	x2, [sp, #136]
  4441bc:	strb	w1, [sp, #233]
  4441c0:	str	wzr, [sp, #236]
  4441c4:	add	x0, x2, x0
  4441c8:	str	xzr, [sp, #240]
  4441cc:	ldr	w0, [x0, #24]
  4441d0:	cmp	w0, #0x0
  4441d4:	cset	w0, ne  // ne = any
  4441d8:	strb	w0, [sp, #232]
  4441dc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4441e0:	add	x0, x0, #0xb79
  4441e4:	str	x0, [sp, #168]
  4441e8:	ldr	x0, [sp, #160]
  4441ec:	cmp	x0, x22
  4441f0:	b.ls	444758 <ferror@plt+0x41188>  // b.plast
  4441f4:	mov	x1, x22
  4441f8:	add	x0, sp, #0xe0
  4441fc:	bl	445200 <ferror@plt+0x41c30>
  444200:	cmp	w0, #0x2
  444204:	b.eq	444344 <ferror@plt+0x40d74>  // b.none
  444208:	cmp	w0, #0x3
  44420c:	b.ne	444290 <ferror@plt+0x40cc0>  // b.any
  444210:	ldr	x0, [sp, #128]
  444214:	cmp	x0, x22
  444218:	b.eq	444270 <ferror@plt+0x40ca0>  // b.none
  44421c:	ldurh	w0, [x22, #-18]
  444220:	tbnz	w0, #3, 444270 <ferror@plt+0x40ca0>
  444224:	mov	x1, x22
  444228:	mov	x0, x19
  44422c:	bl	441b84 <ferror@plt+0x3e5b4>
  444230:	mov	x2, x0
  444234:	ldr	x1, [sp, #128]
  444238:	mov	x5, x27
  44423c:	ldrb	w0, [x19, #1157]
  444240:	sub	x6, x22, x1
  444244:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  444248:	movk	x1, #0xaaab
  44424c:	ldr	w4, [x2]
  444250:	asr	x6, x6, #3
  444254:	cmp	w0, #0x2
  444258:	mov	w3, w4
  44425c:	mov	x0, x24
  444260:	mul	x6, x6, x1
  444264:	ldr	x1, [sp, #216]
  444268:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  44426c:	bl	441db0 <ferror@plt+0x3e7e0>
  444270:	ldp	x1, x0, [x24, #8]
  444274:	sub	x23, x0, #0x8
  444278:	cmp	x0, x1
  44427c:	csel	x23, x23, xzr, ne  // ne = any
  444280:	add	x22, x22, #0x18
  444284:	b	4441e8 <ferror@plt+0x40c18>
  444288:	mov	x27, #0x0                   	// #0
  44428c:	b	444188 <ferror@plt+0x40bb8>
  444290:	cmp	w0, #0x4
  444294:	b.ne	444280 <ferror@plt+0x40cb0>  // b.any
  444298:	ldp	x2, x1, [x24, #8]
  44429c:	cmp	x1, x2
  4442a0:	b.eq	4442ec <ferror@plt+0x40d1c>  // b.none
  4442a4:	sub	x1, x1, #0x8
  4442a8:	cmp	x1, #0x0
  4442ac:	ccmp	x1, x23, #0x4, ne  // ne = any
  4442b0:	b.eq	4442f0 <ferror@plt+0x40d20>  // b.none
  4442b4:	ldr	x0, [x1]
  4442b8:	ldrb	w0, [x0, #4]
  4442bc:	cmp	w0, #0x53
  4442c0:	b.ne	4442f0 <ferror@plt+0x40d20>  // b.any
  4442c4:	ldr	x0, [x24, #16]
  4442c8:	cmp	x2, x0
  4442cc:	b.cs	4442d8 <ferror@plt+0x40d08>  // b.hs, b.nlast
  4442d0:	sub	x0, x0, #0x8
  4442d4:	str	x0, [x24, #16]
  4442d8:	ldr	x0, [x24, #16]
  4442dc:	sub	x1, x0, #0x8
  4442e0:	cmp	x2, x0
  4442e4:	csel	x1, x1, xzr, ne  // ne = any
  4442e8:	b	4442a8 <ferror@plt+0x40cd8>
  4442ec:	mov	x1, #0x0                   	// #0
  4442f0:	ldrh	w0, [x22, #6]
  4442f4:	tbz	w0, #3, 444320 <ferror@plt+0x40d50>
  4442f8:	cbz	x1, 444318 <ferror@plt+0x40d48>
  4442fc:	ldr	x0, [x1]
  444300:	ldrb	w0, [x0, #4]
  444304:	cmp	w0, #0x53
  444308:	b.eq	444318 <ferror@plt+0x40d48>  // b.none
  44430c:	add	x2, x22, #0x6
  444310:	mov	x0, x19
  444314:	bl	441d48 <ferror@plt+0x3e778>
  444318:	mov	x23, #0x0                   	// #0
  44431c:	b	444280 <ferror@plt+0x40cb0>
  444320:	ldr	w4, [x19, #664]
  444324:	add	x2, x19, #0x298
  444328:	ldr	x1, [sp, #216]
  44432c:	mov	x0, x24
  444330:	mov	w3, w4
  444334:	mov	w6, #0x0                   	// #0
  444338:	mov	x5, #0x0                   	// #0
  44433c:	bl	441db0 <ferror@plt+0x3e7e0>
  444340:	b	444318 <ferror@plt+0x40d48>
  444344:	ldrb	w0, [x22, #4]
  444348:	ldrb	w1, [x19, #1157]
  44434c:	cmp	w0, #0x50
  444350:	b.eq	444398 <ferror@plt+0x40dc8>  // b.none
  444354:	ldr	x0, [sp, #128]
  444358:	cmp	w1, #0x2
  44435c:	ldr	w4, [x22]
  444360:	mov	x5, x27
  444364:	sub	x6, x22, x0
  444368:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44436c:	movk	x0, #0xaaab
  444370:	mov	x2, x22
  444374:	asr	x6, x6, #3
  444378:	mov	w3, w4
  44437c:	ldr	x1, [sp, #216]
  444380:	mul	x6, x6, x0
  444384:	mov	x0, x24
  444388:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  44438c:	add	w26, w26, #0x1
  444390:	bl	441db0 <ferror@plt+0x3e7e0>
  444394:	b	444280 <ferror@plt+0x40cb0>
  444398:	ldr	w0, [x22, #8]
  44439c:	mov	w2, #0x30                  	// #48
  4443a0:	cmp	w1, #0x0
  4443a4:	sub	w0, w0, #0x1
  4443a8:	cset	w1, ne  // ne = any
  4443ac:	umull	x0, w0, w2
  4443b0:	ldr	x2, [sp, #136]
  4443b4:	add	x3, x2, x0
  4443b8:	ldrh	w2, [x22, #6]
  4443bc:	tbz	w2, #2, 444564 <ferror@plt+0x40f94>
  4443c0:	mov	x28, #0x0                   	// #0
  4443c4:	mov	w25, #0x1                   	// #1
  4443c8:	add	x4, x3, #0x10
  4443cc:	add	x0, sp, #0xf8
  4443d0:	mov	w2, #0x1                   	// #1
  4443d4:	bl	441b1c <ferror@plt+0x3e54c>
  4443d8:	ldrb	w0, [x19, #16]
  4443dc:	cbz	w0, 4443e8 <ferror@plt+0x40e18>
  4443e0:	ldrb	w0, [x19, #17]
  4443e4:	cbz	w0, 44445c <ferror@plt+0x40e8c>
  4443e8:	ldr	x0, [sp, #128]
  4443ec:	cmp	x0, x22
  4443f0:	b.eq	44445c <ferror@plt+0x40e8c>  // b.none
  4443f4:	ldurh	w0, [x22, #-18]
  4443f8:	tbnz	w0, #3, 44445c <ferror@plt+0x40e8c>
  4443fc:	mov	x1, x23
  444400:	mov	x0, x24
  444404:	bl	441e88 <ferror@plt+0x3e8b8>
  444408:	tst	w0, #0xff
  44440c:	b.ne	44445c <ferror@plt+0x40e8c>  // b.any
  444410:	mov	x1, x22
  444414:	mov	x0, x19
  444418:	bl	441b84 <ferror@plt+0x3e5b4>
  44441c:	mov	x2, x0
  444420:	ldr	x1, [sp, #128]
  444424:	mov	x5, x27
  444428:	ldrb	w0, [x19, #1157]
  44442c:	sub	x6, x22, x1
  444430:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  444434:	movk	x1, #0xaaab
  444438:	ldr	w4, [x2]
  44443c:	asr	x6, x6, #3
  444440:	cmp	w0, #0x2
  444444:	mov	w3, w4
  444448:	mov	x0, x24
  44444c:	mul	x6, x6, x1
  444450:	ldr	x1, [sp, #216]
  444454:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  444458:	bl	441db0 <ferror@plt+0x3e7e0>
  44445c:	cbz	w25, 444694 <ferror@plt+0x410c4>
  444460:	ldr	x0, [sp, #128]
  444464:	mov	w9, #0x0                   	// #0
  444468:	sub	x8, x22, x0
  44446c:	mov	w0, #0xaaab                	// #43691
  444470:	movk	w0, #0xaaaa, lsl #16
  444474:	asr	x8, x8, #3
  444478:	mul	w8, w8, w0
  44447c:	ldr	w0, [sp, #144]
  444480:	add	w6, w26, w9
  444484:	ldr	x1, [sp, #216]
  444488:	cmp	w0, #0x1
  44448c:	ldrb	w0, [x19, #1157]
  444490:	csel	w6, w6, w26, gt
  444494:	cmp	w0, #0x1
  444498:	ldr	x0, [sp, #256]
  44449c:	csel	w6, w6, w8, hi  // hi = pmore
  4444a0:	cbz	x0, 444684 <ferror@plt+0x410b4>
  4444a4:	ldr	x2, [x0]
  4444a8:	ldrb	w3, [sp, #248]
  4444ac:	cbz	w3, 44468c <ferror@plt+0x410bc>
  4444b0:	ldr	x0, [sp, #264]
  4444b4:	mov	x5, x27
  4444b8:	ldr	w3, [x0]
  4444bc:	mov	x0, x24
  4444c0:	ldr	w4, [x22]
  4444c4:	str	w8, [sp, #184]
  4444c8:	str	w9, [sp, #192]
  4444cc:	bl	441db0 <ferror@plt+0x3e7e0>
  4444d0:	add	x0, sp, #0xf8
  4444d4:	bl	441c40 <ferror@plt+0x3e670>
  4444d8:	ldr	w9, [sp, #192]
  4444dc:	ldr	w8, [sp, #184]
  4444e0:	add	w9, w9, #0x1
  4444e4:	cmp	w25, w9
  4444e8:	b.ne	44447c <ferror@plt+0x40eac>  // b.any
  4444ec:	ldrh	w0, [x22, #6]
  4444f0:	tbz	w0, #3, 444504 <ferror@plt+0x40f34>
  4444f4:	ldp	x1, x0, [x24, #8]
  4444f8:	sub	x7, x0, #0x8
  4444fc:	cmp	x0, x1
  444500:	csel	x28, x7, xzr, ne  // ne = any
  444504:	ldrb	w0, [x19, #16]
  444508:	cbnz	w0, 444548 <ferror@plt+0x40f78>
  44450c:	ldrh	w0, [x22, #6]
  444510:	tbnz	w0, #3, 444548 <ferror@plt+0x40f78>
  444514:	mov	x1, x23
  444518:	mov	x0, x24
  44451c:	bl	441e88 <ferror@plt+0x3e8b8>
  444520:	tst	w0, #0xff
  444524:	b.ne	444548 <ferror@plt+0x40f78>  // b.any
  444528:	ldr	w4, [x19, #664]
  44452c:	add	x2, x19, #0x298
  444530:	ldr	x1, [sp, #216]
  444534:	mov	x0, x24
  444538:	mov	w3, w4
  44453c:	mov	w6, #0x0                   	// #0
  444540:	mov	x5, #0x0                   	// #0
  444544:	bl	441db0 <ferror@plt+0x3e7e0>
  444548:	cbz	x28, 44455c <ferror@plt+0x40f8c>
  44454c:	add	x2, x22, #0x6
  444550:	mov	x1, x28
  444554:	mov	x0, x19
  444558:	bl	441d48 <ferror@plt+0x3e778>
  44455c:	add	w26, w26, w25
  444560:	b	444280 <ferror@plt+0x40cb0>
  444564:	tbz	w2, #3, 444588 <ferror@plt+0x40fb8>
  444568:	ldr	x2, [sp, #136]
  44456c:	ldr	w25, [x3, #24]
  444570:	ldr	x4, [x2, x0]
  444574:	add	x0, sp, #0xf8
  444578:	mov	w2, #0x0                   	// #0
  44457c:	bl	441b1c <ferror@plt+0x3e54c>
  444580:	mov	x28, #0x0                   	// #0
  444584:	b	4443d8 <ferror@plt+0x40e08>
  444588:	ldr	x2, [sp, #128]
  44458c:	cmp	x2, x22
  444590:	b.eq	444630 <ferror@plt+0x41060>  // b.none
  444594:	ldurh	w2, [x22, #-18]
  444598:	tbz	w2, #3, 444630 <ferror@plt+0x41060>
  44459c:	ldr	x2, [sp, #136]
  4445a0:	ldr	w25, [x3, #24]
  4445a4:	ldr	x4, [x2, x0]
  4445a8:	add	x0, sp, #0xf8
  4445ac:	mov	w2, #0x0                   	// #0
  4445b0:	bl	441b1c <ferror@plt+0x3e54c>
  4445b4:	ldp	x1, x0, [x24, #8]
  4445b8:	sub	x2, x0, x1
  4445bc:	tst	x2, #0x7fffffff8
  4445c0:	b.eq	444580 <ferror@plt+0x40fb0>  // b.none
  4445c4:	cmp	x0, x1
  4445c8:	b.eq	444a34 <ferror@plt+0x41464>  // b.none
  4445cc:	ldur	x2, [x0, #-8]
  4445d0:	sub	x28, x0, #0x8
  4445d4:	ldrb	w2, [x2, #4]
  4445d8:	cmp	w2, #0x13
  4445dc:	b.ne	444620 <ferror@plt+0x41050>  // b.any
  4445e0:	ldr	x2, [sp, #104]
  4445e4:	ldrb	w2, [x2, #19]
  4445e8:	tbz	w2, #3, 444620 <ferror@plt+0x41050>
  4445ec:	ldr	x2, [sp, #104]
  4445f0:	ldr	w3, [x22, #8]
  4445f4:	ldrh	w2, [x2, #16]
  4445f8:	cmp	w3, w2
  4445fc:	b.ne	444620 <ferror@plt+0x41050>  // b.any
  444600:	ldr	x2, [sp, #256]
  444604:	cbz	x2, 444610 <ferror@plt+0x41040>
  444608:	ldr	x2, [x2]
  44460c:	cbnz	x2, 4443d8 <ferror@plt+0x40e08>
  444610:	cmp	x0, x1
  444614:	b.ls	444580 <ferror@plt+0x40fb0>  // b.plast
  444618:	str	x28, [x24, #16]
  44461c:	b	444580 <ferror@plt+0x40fb0>
  444620:	cmp	w25, #0x0
  444624:	ccmp	x23, x28, #0x4, eq  // eq = none
  444628:	csel	x28, x28, xzr, ne  // ne = any
  44462c:	b	4443d8 <ferror@plt+0x40e08>
  444630:	ldr	x4, [x3, #8]
  444634:	mov	w2, #0x2                   	// #2
  444638:	ldr	w25, [x3, #28]
  44463c:	add	x0, sp, #0xf8
  444640:	bl	441b1c <ferror@plt+0x3e54c>
  444644:	mov	x1, x23
  444648:	mov	x0, x24
  44464c:	bl	441e88 <ferror@plt+0x3e8b8>
  444650:	tst	w0, #0xff
  444654:	b.eq	444580 <ferror@plt+0x40fb0>  // b.none
  444658:	cbz	w25, 444580 <ferror@plt+0x40fb0>
  44465c:	ldr	x0, [sp, #256]
  444660:	cbz	x0, 444a40 <ferror@plt+0x41470>
  444664:	ldr	x0, [x0]
  444668:	ldrb	w0, [x0, #4]
  44466c:	cmp	w0, #0x53
  444670:	b.ne	444580 <ferror@plt+0x40fb0>  // b.any
  444674:	add	x0, sp, #0xf8
  444678:	sub	w25, w25, #0x1
  44467c:	bl	441c40 <ferror@plt+0x3e670>
  444680:	b	444658 <ferror@plt+0x41088>
  444684:	mov	x2, #0x0                   	// #0
  444688:	b	4444a8 <ferror@plt+0x40ed8>
  44468c:	ldr	x0, [x0]
  444690:	b	4444b4 <ferror@plt+0x40ee4>
  444694:	ldrb	w0, [x19, #1154]
  444698:	cbz	w0, 4446c0 <ferror@plt+0x410f0>
  44469c:	ldrb	w0, [x19, #1152]
  4446a0:	cbnz	w0, 4446c0 <ferror@plt+0x410f0>
  4446a4:	ldr	x0, [sp, #104]
  4446a8:	ldrb	w0, [x0, #19]
  4446ac:	tbnz	w0, #4, 4446c0 <ferror@plt+0x410f0>
  4446b0:	ldr	x0, [x19]
  4446b4:	cbz	x0, 44470c <ferror@plt+0x4113c>
  4446b8:	ldrb	w0, [x0, #106]
  4446bc:	cbz	w0, 44470c <ferror@plt+0x4113c>
  4446c0:	ldrsb	w0, [x19, #1198]
  4446c4:	cmp	w0, #0x0
  4446c8:	b.le	444504 <ferror@plt+0x40f34>
  4446cc:	ldrb	w0, [x19, #1120]
  4446d0:	cbnz	w0, 444504 <ferror@plt+0x40f34>
  4446d4:	ldr	x0, [sp, #104]
  4446d8:	ldrb	w0, [x0, #19]
  4446dc:	tbnz	w0, #4, 444504 <ferror@plt+0x40f34>
  4446e0:	ldr	x0, [x19]
  4446e4:	cbz	x0, 4446f0 <ferror@plt+0x41120>
  4446e8:	ldrb	w0, [x0, #106]
  4446ec:	cbnz	w0, 444504 <ferror@plt+0x40f34>
  4446f0:	ldr	w4, [x22, #8]
  4446f4:	mov	x0, x19
  4446f8:	ldr	x3, [x20]
  4446fc:	mov	w1, #0x16                  	// #22
  444700:	ldr	x2, [sp, #168]
  444704:	bl	435ba8 <ferror@plt+0x325d8>
  444708:	b	444504 <ferror@plt+0x40f34>
  44470c:	ldrb	w0, [x19, #1120]
  444710:	cbz	w0, 444734 <ferror@plt+0x41164>
  444714:	ldr	w4, [x22, #8]
  444718:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44471c:	ldr	x3, [x20]
  444720:	add	x2, x2, #0xb29
  444724:	mov	w1, #0x15                  	// #21
  444728:	mov	x0, x19
  44472c:	bl	435c18 <ferror@plt+0x32648>
  444730:	b	444504 <ferror@plt+0x40f34>
  444734:	ldrsb	w0, [x19, #1198]
  444738:	cmp	w0, #0x0
  44473c:	cbz	w0, 444504 <ferror@plt+0x40f34>
  444740:	cset	w1, gt
  444744:	ldr	w4, [x22, #8]
  444748:	add	w1, w1, #0x15
  44474c:	ldr	x3, [x20]
  444750:	ldr	x2, [sp, #168]
  444754:	b	444728 <ferror@plt+0x41158>
  444758:	ldp	x5, x22, [x24, #8]
  44475c:	ldr	w0, [sp, #144]
  444760:	sub	x22, x22, x5
  444764:	lsr	x22, x22, #3
  444768:	cbz	w0, 4447fc <ferror@plt+0x4122c>
  44476c:	ldr	x4, [sp, #152]
  444770:	mov	w5, w22
  444774:	ldr	x3, [sp, #216]
  444778:	mov	x2, x24
  44477c:	mov	x1, x20
  444780:	mov	x0, x19
  444784:	bl	441cc0 <ferror@plt+0x3e6f0>
  444788:	ldp	x1, x0, [x24, #8]
  44478c:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  444790:	sub	x0, x0, x1
  444794:	ldr	w1, [x2, #608]
  444798:	lsr	x0, x0, #3
  44479c:	add	w0, w1, w0
  4447a0:	str	w0, [x2, #608]
  4447a4:	ldr	x0, [sp, #112]
  4447a8:	mov	w23, #0x0                   	// #0
  4447ac:	ldr	x22, [x0, #8]
  4447b0:	add	x22, x22, #0x8
  4447b4:	ldr	w0, [sp, #124]
  4447b8:	cmp	w23, w0
  4447bc:	b.eq	44481c <ferror@plt+0x4124c>  // b.none
  4447c0:	ldr	x0, [x22]
  4447c4:	cbz	x0, 4447d0 <ferror@plt+0x41200>
  4447c8:	bl	4032a0 <free@plt>
  4447cc:	str	xzr, [x22]
  4447d0:	ldr	x0, [x22, #24]
  4447d4:	cbz	x0, 4447e0 <ferror@plt+0x41210>
  4447d8:	bl	4032a0 <free@plt>
  4447dc:	str	xzr, [x22, #24]
  4447e0:	ldr	x0, [x22, #32]
  4447e4:	cbz	x0, 4447f0 <ferror@plt+0x41220>
  4447e8:	bl	4032a0 <free@plt>
  4447ec:	str	xzr, [x22, #32]
  4447f0:	add	w23, w23, #0x1
  4447f4:	add	x22, x22, #0x30
  4447f8:	b	4447b4 <ferror@plt+0x411e4>
  4447fc:	add	x0, x19, #0x88
  444800:	bl	441c70 <ferror@plt+0x3e6a0>
  444804:	ldr	x1, [sp, #152]
  444808:	stp	x24, x20, [x0, #32]
  44480c:	str	wzr, [x0, #48]
  444810:	add	x22, x1, w22, uxtw #3
  444814:	stp	x1, x22, [x0, #16]
  444818:	b	444788 <ferror@plt+0x411b8>
  44481c:	ldr	x0, [sp, #112]
  444820:	bl	43cddc <ferror@plt+0x3980c>
  444824:	ldrh	w0, [x20, #18]
  444828:	ubfx	x1, x0, #2, #8
  44482c:	orr	w2, w1, #0x10
  444830:	bfi	w0, w2, #2, #8
  444834:	strh	w0, [x20, #18]
  444838:	tbnz	w1, #5, 444848 <ferror@plt+0x41278>
  44483c:	mov	x1, x20
  444840:	mov	x0, x19
  444844:	bl	443680 <ferror@plt+0x400b0>
  444848:	ldr	x3, [x19, #1032]
  44484c:	cbz	x3, 444860 <ferror@plt+0x41290>
  444850:	ldr	w1, [sp, #200]
  444854:	mov	x2, x20
  444858:	mov	x0, x19
  44485c:	blr	x3
  444860:	ldr	x0, [sp, #104]
  444864:	ldr	x1, [sp, #104]
  444868:	ldrb	w0, [x0, #19]
  44486c:	orr	w0, w0, #0x20
  444870:	strb	w0, [x1, #19]
  444874:	ldrh	w0, [x1, #16]
  444878:	cbnz	w0, 444934 <ferror@plt+0x41364>
  44487c:	mov	x0, x1
  444880:	bl	441e4c <ferror@plt+0x3e87c>
  444884:	mov	w24, w0
  444888:	ldr	x0, [sp, #104]
  44488c:	add	x22, x0, #0x18
  444890:	ldrb	w0, [x19, #1157]
  444894:	cbz	w0, 4449c4 <ferror@plt+0x413f4>
  444898:	add	x2, sp, #0xf8
  44489c:	mov	w1, w24
  4448a0:	mov	x0, x19
  4448a4:	str	xzr, [sp, #248]
  4448a8:	bl	441bb4 <ferror@plt+0x3e5e4>
  4448ac:	mov	x23, x0
  4448b0:	ldr	w2, [sp, #200]
  4448b4:	mov	w3, w24
  4448b8:	ldr	x0, [x19, #40]
  4448bc:	mov	x1, x20
  4448c0:	mov	w25, #0x0                   	// #0
  4448c4:	bl	43f974 <ferror@plt+0x3c3a4>
  4448c8:	mov	x26, x0
  4448cc:	cmp	w24, w25
  4448d0:	ldr	x1, [sp, #248]
  4448d4:	b.eq	444908 <ferror@plt+0x41338>  // b.none
  4448d8:	ldr	w4, [x22]
  4448dc:	mov	w6, w25
  4448e0:	mov	x2, x22
  4448e4:	mov	x5, x26
  4448e8:	mov	x0, x23
  4448ec:	mov	w3, w4
  4448f0:	add	w25, w25, #0x1
  4448f4:	add	x22, x22, #0x18
  4448f8:	bl	441db0 <ferror@plt+0x3e7e0>
  4448fc:	b	4448cc <ferror@plt+0x412fc>
  444900:	mov	x21, #0x0                   	// #0
  444904:	b	444824 <ferror@plt+0x41254>
  444908:	ldr	x4, [x23, #8]
  44490c:	mov	x3, x1
  444910:	mov	w5, w24
  444914:	mov	x2, x23
  444918:	mov	x1, x20
  44491c:	mov	x0, x19
  444920:	bl	441cc0 <ferror@plt+0x3e6f0>
  444924:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  444928:	ldr	w0, [x1, #608]
  44492c:	add	w24, w0, w24
  444930:	str	w24, [x1, #608]
  444934:	cbz	x21, 4449dc <ferror@plt+0x4140c>
  444938:	ldrb	w0, [x19, #16]
  44493c:	cbnz	w0, 444960 <ferror@plt+0x41390>
  444940:	ldr	x1, [sp, #176]
  444944:	mov	x0, x19
  444948:	bl	441b84 <ferror@plt+0x3e5b4>
  44494c:	mov	x2, x0
  444950:	mov	w3, #0x1                   	// #1
  444954:	mov	x0, x19
  444958:	mov	x1, #0x0                   	// #0
  44495c:	bl	442430 <ferror@plt+0x3ee60>
  444960:	adrp	x23, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  444964:	add	x25, x19, #0x88
  444968:	add	x23, x23, #0x260
  44496c:	mov	x24, x21
  444970:	mov	x0, x25
  444974:	ldr	x21, [x21]
  444978:	ldp	x22, x20, [x24, #8]
  44497c:	str	xzr, [x24]
  444980:	bl	441c70 <ferror@plt+0x3e6a0>
  444984:	str	x22, [x0, #16]
  444988:	stp	x24, xzr, [x0, #32]
  44498c:	sub	x20, x20, x22
  444990:	str	wzr, [x0, #48]
  444994:	asr	x20, x20, #3
  444998:	add	x22, x22, w20, uxtw #3
  44499c:	str	x22, [x0, #24]
  4449a0:	ldrb	w0, [x19, #1157]
  4449a4:	cbnz	w0, 4449b4 <ferror@plt+0x413e4>
  4449a8:	ldr	w0, [x23]
  4449ac:	add	w20, w0, w20
  4449b0:	str	w20, [x23]
  4449b4:	cbnz	x21, 44496c <ferror@plt+0x4139c>
  4449b8:	mov	w0, #0x2                   	// #2
  4449bc:	strb	wzr, [x19, #192]
  4449c0:	b	443c30 <ferror@plt+0x40660>
  4449c4:	mov	w3, w24
  4449c8:	mov	x2, x22
  4449cc:	mov	x1, x20
  4449d0:	mov	x0, x19
  4449d4:	bl	442430 <ferror@plt+0x3ee60>
  4449d8:	b	444924 <ferror@plt+0x41354>
  4449dc:	mov	w0, #0x1                   	// #1
  4449e0:	strb	wzr, [x19, #192]
  4449e4:	b	443c30 <ferror@plt+0x40660>
  4449e8:	ldr	x1, [x19, #184]
  4449ec:	strb	wzr, [x19, #192]
  4449f0:	ldrb	w0, [x1, #18]
  4449f4:	and	w0, w0, #0x3
  4449f8:	cmp	w0, #0x2
  4449fc:	b.ne	444a14 <ferror@plt+0x41444>  // b.any
  444a00:	ldr	x0, [x1, #24]
  444a04:	ldrb	w0, [x0, #19]
  444a08:	tbz	w0, #2, 444a14 <ferror@plt+0x41444>
  444a0c:	ldrb	w0, [x19, #1157]
  444a10:	cbnz	w0, 444a2c <ferror@plt+0x4145c>
  444a14:	ldr	w3, [x19, #176]
  444a18:	ldr	w2, [sp, #200]
  444a1c:	mov	x1, x20
  444a20:	mov	x0, x19
  444a24:	bl	442494 <ferror@plt+0x3eec4>
  444a28:	b	443c30 <ferror@plt+0x40660>
  444a2c:	ldr	w3, [sp, #200]
  444a30:	b	444a18 <ferror@plt+0x41448>
  444a34:	mov	x0, #0x0                   	// #0
  444a38:	ldr	x0, [x0]
  444a3c:	brk	#0x3e8
  444a40:	ldrb	w0, [x0, #4]
  444a44:	b	444a3c <ferror@plt+0x4146c>
  444a48:	stp	x29, x30, [sp, #-112]!
  444a4c:	mov	x29, sp
  444a50:	stp	x19, x20, [sp, #16]
  444a54:	mov	x19, x0
  444a58:	stp	x23, x24, [sp, #48]
  444a5c:	mov	x24, x1
  444a60:	stp	x25, x26, [sp, #64]
  444a64:	adrp	x25, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  444a68:	add	x25, x25, #0x260
  444a6c:	ldrb	w26, [x0, #192]
  444a70:	stp	x21, x22, [sp, #32]
  444a74:	mov	w22, #0x0                   	// #0
  444a78:	str	x27, [sp, #80]
  444a7c:	ldr	x21, [x19, #136]
  444a80:	ldr	x0, [x21, #8]
  444a84:	cbnz	x0, 444b6c <ferror@plt+0x4159c>
  444a88:	mov	x0, x19
  444a8c:	bl	43eff0 <ferror@plt+0x3ba20>
  444a90:	ldr	w22, [x0]
  444a94:	mov	x20, x0
  444a98:	ldrb	w1, [x19, #16]
  444a9c:	ldrb	w0, [x20, #4]
  444aa0:	cbz	w1, 444aac <ferror@plt+0x414dc>
  444aa4:	cmp	w0, #0x4f
  444aa8:	b.eq	444a7c <ferror@plt+0x414ac>  // b.none
  444aac:	cmp	w0, #0x35
  444ab0:	b.ne	444bac <ferror@plt+0x415dc>  // b.any
  444ab4:	ldr	x4, [x20, #8]
  444ab8:	ldrb	w0, [x4, #18]
  444abc:	tst	x0, #0x3
  444ac0:	b.eq	444bac <ferror@plt+0x415dc>  // b.none
  444ac4:	ldrh	w0, [x20, #6]
  444ac8:	tbnz	w0, #10, 444bac <ferror@plt+0x415dc>
  444acc:	ldrh	w0, [x4, #18]
  444ad0:	ubfx	x2, x0, #2, #8
  444ad4:	tbnz	w0, #6, 444e7c <ferror@plt+0x418ac>
  444ad8:	ldrb	w0, [x19, #192]
  444adc:	cbnz	w0, 444af8 <ferror@plt+0x41528>
  444ae0:	ldr	x0, [x19, #136]
  444ae4:	bl	441b68 <ferror@plt+0x3e598>
  444ae8:	cbnz	x0, 444af8 <ferror@plt+0x41528>
  444aec:	ldr	w0, [x20]
  444af0:	str	w0, [x19, #176]
  444af4:	str	x4, [x19, #184]
  444af8:	ldrb	w0, [x19, #24]
  444afc:	cbnz	w0, 444bac <ferror@plt+0x415dc>
  444b00:	tbz	w2, #6, 444e6c <ferror@plt+0x4189c>
  444b04:	ldr	x0, [x19, #992]
  444b08:	cbz	x0, 444bac <ferror@plt+0x415dc>
  444b0c:	mov	w1, #0x0                   	// #0
  444b10:	mov	x0, x19
  444b14:	bl	43f134 <ferror@plt+0x3bb64>
  444b18:	ldrb	w1, [x0, #4]
  444b1c:	cmp	w1, #0x53
  444b20:	b.eq	444e1c <ferror@plt+0x4184c>  // b.none
  444b24:	ldrb	w21, [x0, #6]
  444b28:	and	w21, w21, #0x1
  444b2c:	ldr	x2, [x19, #992]
  444b30:	mov	x1, x20
  444b34:	mov	x0, x19
  444b38:	blr	x2
  444b3c:	mov	x1, x0
  444b40:	cbz	x0, 444e24 <ferror@plt+0x41854>
  444b44:	mov	w3, w22
  444b48:	mov	x2, x20
  444b4c:	mov	x0, x19
  444b50:	bl	443740 <ferror@plt+0x40170>
  444b54:	cbz	w0, 444bac <ferror@plt+0x415dc>
  444b58:	ldrb	w1, [x19, #16]
  444b5c:	cbnz	w1, 444a7c <ferror@plt+0x414ac>
  444b60:	cmp	w0, #0x2
  444b64:	b.eq	444a7c <ferror@plt+0x414ac>  // b.none
  444b68:	b	444df0 <ferror@plt+0x41820>
  444b6c:	ldr	w2, [x21, #48]
  444b70:	cmp	w2, #0x1
  444b74:	b.ne	444c18 <ferror@plt+0x41648>  // b.any
  444b78:	ldp	x20, x0, [x21, #16]
  444b7c:	cmp	x20, x0
  444b80:	b.ne	444c58 <ferror@plt+0x41688>  // b.any
  444b84:	ldr	x0, [x21, #40]
  444b88:	cbz	x0, 444b98 <ferror@plt+0x415c8>
  444b8c:	ldr	w0, [x25, #4]
  444b90:	add	w0, w0, #0x1
  444b94:	str	w0, [x25, #4]
  444b98:	mov	x0, x19
  444b9c:	bl	442690 <ferror@plt+0x3f0c0>
  444ba0:	ldrb	w0, [x19, #16]
  444ba4:	cbnz	w0, 444a7c <ferror@plt+0x414ac>
  444ba8:	add	x20, x19, #0x298
  444bac:	cbz	x24, 444bf4 <ferror@plt+0x41624>
  444bb0:	cbnz	w22, 444bb8 <ferror@plt+0x415e8>
  444bb4:	ldr	w22, [x20]
  444bb8:	str	w22, [x24]
  444bbc:	ldrb	w0, [x19, #1157]
  444bc0:	cbnz	w0, 444bd8 <ferror@plt+0x41608>
  444bc4:	ldr	x0, [x19, #136]
  444bc8:	bl	441b68 <ferror@plt+0x3e598>
  444bcc:	cbz	x0, 444bd8 <ferror@plt+0x41608>
  444bd0:	ldr	w0, [x19, #176]
  444bd4:	str	w0, [x24]
  444bd8:	ldrb	w1, [x19, #1160]
  444bdc:	ldr	w0, [x24]
  444be0:	cbz	w1, 444bf0 <ferror@plt+0x41620>
  444be4:	ldrb	w1, [x19, #16]
  444be8:	cbz	w1, 444bf0 <ferror@plt+0x41620>
  444bec:	ldr	w0, [x19, #48]
  444bf0:	str	w0, [x24]
  444bf4:	strb	w26, [x19, #192]
  444bf8:	mov	x0, x20
  444bfc:	ldp	x19, x20, [sp, #16]
  444c00:	ldp	x21, x22, [sp, #32]
  444c04:	ldp	x23, x24, [sp, #48]
  444c08:	ldp	x25, x26, [sp, #64]
  444c0c:	ldr	x27, [sp, #80]
  444c10:	ldp	x29, x30, [sp], #112
  444c14:	ret
  444c18:	tst	w2, #0xfffffffd
  444c1c:	b.ne	444c40 <ferror@plt+0x41670>  // b.any
  444c20:	ldp	x0, x1, [x21, #16]
  444c24:	cmp	x0, x1
  444c28:	b.eq	444b84 <ferror@plt+0x415b4>  // b.none
  444c2c:	add	x3, x0, #0x8
  444c30:	cbnz	w2, 444cd0 <ferror@plt+0x41700>
  444c34:	ldr	x20, [x0]
  444c38:	ldr	w22, [x20]
  444c3c:	b	444cf4 <ferror@plt+0x41724>
  444c40:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  444c44:	add	x2, x2, #0xbc7
  444c48:	mov	w1, #0xa2f                 	// #2607
  444c4c:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  444c50:	add	x0, x0, #0x4de
  444c54:	bl	403600 <ferror@plt+0x30>
  444c58:	mov	x0, x20
  444c5c:	ldr	w22, [x0], #24
  444c60:	str	x0, [x21, #16]
  444c64:	ldrh	w0, [x20, #6]
  444c68:	tbz	w0, #3, 444a98 <ferror@plt+0x414c8>
  444c6c:	mov	x0, x21
  444c70:	str	x20, [sp, #96]
  444c74:	bl	441b68 <ferror@plt+0x3e598>
  444c78:	cbz	x0, 444d0c <ferror@plt+0x4173c>
  444c7c:	cmp	w2, #0x2
  444c80:	b.ne	444d1c <ferror@plt+0x4174c>  // b.any
  444c84:	ldr	x0, [x21, #40]
  444c88:	ldr	x0, [x0, #16]
  444c8c:	ldur	w27, [x0, #-4]
  444c90:	mov	x23, #0x0                   	// #0
  444c94:	ldr	w0, [x21, #48]
  444c98:	cmp	w0, #0x1
  444c9c:	b.ne	444d24 <ferror@plt+0x41754>  // b.any
  444ca0:	ldr	x23, [x21, #16]
  444ca4:	add	x0, x23, #0x18
  444ca8:	str	x0, [x21, #16]
  444cac:	ldrb	w0, [x23, #4]
  444cb0:	cmp	w0, #0x53
  444cb4:	b.ne	444d68 <ferror@plt+0x41798>  // b.any
  444cb8:	ldrh	w0, [x23, #6]
  444cbc:	tbz	w0, #3, 444d68 <ferror@plt+0x41798>
  444cc0:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  444cc4:	mov	w1, #0x380                 	// #896
  444cc8:	add	x2, x2, #0xbfe
  444ccc:	b	444c4c <ferror@plt+0x4167c>
  444cd0:	cmp	w2, #0x2
  444cd4:	b.ne	444cfc <ferror@plt+0x4172c>  // b.any
  444cd8:	ldr	x1, [x21, #40]
  444cdc:	ldr	x20, [x0]
  444ce0:	ldr	x0, [x1, #8]
  444ce4:	cbz	x0, 444c38 <ferror@plt+0x41668>
  444ce8:	ldr	x0, [x1, #16]
  444cec:	ldr	w22, [x0], #4
  444cf0:	str	x0, [x1, #16]
  444cf4:	str	x3, [x21, #16]
  444cf8:	b	444c64 <ferror@plt+0x41694>
  444cfc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  444d00:	mov	w1, #0xa59                 	// #2649
  444d04:	add	x2, x2, #0xbde
  444d08:	b	444c4c <ferror@plt+0x4167c>
  444d0c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  444d10:	mov	w1, #0x352                 	// #850
  444d14:	add	x2, x2, #0xbfe
  444d18:	b	444c4c <ferror@plt+0x4167c>
  444d1c:	ldr	w27, [x19, #176]
  444d20:	b	444c90 <ferror@plt+0x416c0>
  444d24:	cbnz	w0, 444d3c <ferror@plt+0x4176c>
  444d28:	ldr	x0, [x21, #16]
  444d2c:	add	x1, x0, #0x8
  444d30:	str	x1, [x21, #16]
  444d34:	ldr	x23, [x0]
  444d38:	b	444cac <ferror@plt+0x416dc>
  444d3c:	cmp	w0, #0x2
  444d40:	b.ne	444cac <ferror@plt+0x416dc>  // b.any
  444d44:	ldr	x0, [x21, #16]
  444d48:	add	x1, x0, #0x8
  444d4c:	str	x1, [x21, #16]
  444d50:	ldr	x1, [x21, #40]
  444d54:	ldr	x23, [x0]
  444d58:	ldr	x0, [x1, #16]
  444d5c:	add	x0, x0, #0x4
  444d60:	str	x0, [x1, #16]
  444d64:	b	444cac <ferror@plt+0x416dc>
  444d68:	mov	x3, x23
  444d6c:	add	x2, sp, #0x60
  444d70:	mov	w1, w27
  444d74:	mov	x0, x19
  444d78:	bl	4428c4 <ferror@plt+0x3f2f4>
  444d7c:	tst	w0, #0xff
  444d80:	b.eq	444d8c <ferror@plt+0x417bc>  // b.none
  444d84:	ldrh	w0, [x23, #6]
  444d88:	tbnz	w0, #3, 444c94 <ferror@plt+0x416c4>
  444d8c:	ldr	w0, [x21, #48]
  444d90:	cmp	w0, #0x2
  444d94:	b.ne	444e04 <ferror@plt+0x41834>  // b.any
  444d98:	add	x2, sp, #0x68
  444d9c:	mov	x1, #0x1                   	// #1
  444da0:	mov	x0, x19
  444da4:	str	xzr, [sp, #104]
  444da8:	bl	441bb4 <ferror@plt+0x3e5e4>
  444dac:	mov	x23, x0
  444db0:	ldp	x2, x1, [sp, #96]
  444db4:	mov	w3, w27
  444db8:	mov	x5, #0x0                   	// #0
  444dbc:	mov	w4, #0x0                   	// #0
  444dc0:	mov	w6, #0x0                   	// #0
  444dc4:	bl	441db0 <ferror@plt+0x3e7e0>
  444dc8:	ldr	x0, [x21, #40]
  444dcc:	mov	x2, x23
  444dd0:	ldr	x4, [x23, #8]
  444dd4:	mov	w5, #0x1                   	// #1
  444dd8:	ldr	x1, [x0]
  444ddc:	mov	x0, x19
  444de0:	ldr	x3, [sp, #104]
  444de4:	bl	441cc0 <ferror@plt+0x3e6f0>
  444de8:	ldrb	w0, [x19, #16]
  444dec:	cbnz	w0, 444a7c <ferror@plt+0x414ac>
  444df0:	mov	x1, x20
  444df4:	mov	x0, x19
  444df8:	bl	441b84 <ferror@plt+0x3e5b4>
  444dfc:	mov	x20, x0
  444e00:	b	444bac <ferror@plt+0x415dc>
  444e04:	ldr	x2, [sp, #96]
  444e08:	mov	x0, x19
  444e0c:	mov	w3, #0x1                   	// #1
  444e10:	mov	x1, #0x0                   	// #0
  444e14:	bl	442430 <ferror@plt+0x3ee60>
  444e18:	b	444de8 <ferror@plt+0x41818>
  444e1c:	mov	w21, #0x1                   	// #1
  444e20:	b	444b2c <ferror@plt+0x4155c>
  444e24:	cbz	w21, 444bac <ferror@plt+0x415dc>
  444e28:	mov	w1, #0x0                   	// #0
  444e2c:	mov	x0, x19
  444e30:	bl	43f134 <ferror@plt+0x3bb64>
  444e34:	mov	x1, x0
  444e38:	ldrb	w0, [x0, #4]
  444e3c:	cmp	w0, #0x53
  444e40:	b.eq	444bac <ferror@plt+0x415dc>  // b.none
  444e44:	ldrh	w0, [x1, #6]
  444e48:	tbnz	w0, #0, 444bac <ferror@plt+0x415dc>
  444e4c:	mov	x0, x19
  444e50:	bl	441b84 <ferror@plt+0x3e5b4>
  444e54:	mov	w3, #0x1                   	// #1
  444e58:	mov	x2, x0
  444e5c:	mov	x1, #0x0                   	// #0
  444e60:	mov	x0, x19
  444e64:	bl	442430 <ferror@plt+0x3ee60>
  444e68:	b	444bac <ferror@plt+0x415dc>
  444e6c:	mov	w3, w22
  444e70:	mov	x2, x20
  444e74:	mov	x1, x4
  444e78:	b	444b4c <ferror@plt+0x4157c>
  444e7c:	mov	x0, x19
  444e80:	bl	43c144 <ferror@plt+0x38b74>
  444e84:	ldrb	w1, [x20, #4]
  444e88:	strb	w1, [x0, #4]
  444e8c:	ldrh	w1, [x20, #6]
  444e90:	ldp	x2, x3, [x20, #8]
  444e94:	orr	w1, w1, #0x400
  444e98:	strh	w1, [x0, #6]
  444e9c:	stp	x2, x3, [x0, #8]
  444ea0:	b	444dfc <ferror@plt+0x4182c>
  444ea4:	mov	x1, #0x0                   	// #0
  444ea8:	b	444a48 <ferror@plt+0x41478>
  444eac:	stp	x29, x30, [sp, #-32]!
  444eb0:	mov	x29, sp
  444eb4:	ldr	x1, [x0]
  444eb8:	str	x19, [sp, #16]
  444ebc:	mov	x19, x0
  444ec0:	ldrb	w0, [x1, #105]
  444ec4:	orr	w0, w0, #0x4
  444ec8:	strb	w0, [x1, #105]
  444ecc:	ldrb	w0, [x19, #27]
  444ed0:	add	w0, w0, #0x1
  444ed4:	strb	w0, [x19, #27]
  444ed8:	ldrb	w0, [x19, #24]
  444edc:	add	w0, w0, #0x1
  444ee0:	strb	w0, [x19, #24]
  444ee4:	ldrb	w0, [x19, #1160]
  444ee8:	cbz	w0, 444f20 <ferror@plt+0x41950>
  444eec:	mov	x0, x19
  444ef0:	bl	44756c <ferror@plt+0x43f9c>
  444ef4:	tst	w0, #0xff
  444ef8:	b.ne	444eec <ferror@plt+0x4191c>  // b.any
  444efc:	ldrb	w0, [x19, #27]
  444f00:	sub	w0, w0, #0x1
  444f04:	strb	w0, [x19, #27]
  444f08:	ldrb	w0, [x19, #24]
  444f0c:	sub	w0, w0, #0x1
  444f10:	strb	w0, [x19, #24]
  444f14:	ldr	x19, [sp, #16]
  444f18:	ldp	x29, x30, [sp], #32
  444f1c:	ret
  444f20:	mov	x0, x19
  444f24:	bl	444ea4 <ferror@plt+0x418d4>
  444f28:	ldrb	w0, [x0, #4]
  444f2c:	cmp	w0, #0x16
  444f30:	b.ne	444f20 <ferror@plt+0x41950>  // b.any
  444f34:	b	444efc <ferror@plt+0x4192c>
  444f38:	b	444a48 <ferror@plt+0x41478>
  444f3c:	stp	x29, x30, [sp, #-96]!
  444f40:	mov	x29, sp
  444f44:	stp	x19, x20, [sp, #16]
  444f48:	mov	x20, x0
  444f4c:	ldr	w19, [x1, #8]
  444f50:	stp	x23, x24, [sp, #48]
  444f54:	mov	w0, #0xa                   	// #10
  444f58:	mov	x24, x1
  444f5c:	ldr	x23, [x1, #24]
  444f60:	mul	w19, w19, w0
  444f64:	stp	x21, x22, [sp, #32]
  444f68:	ldrb	w0, [x23, #19]
  444f6c:	stp	x25, x26, [sp, #64]
  444f70:	stp	x27, x28, [sp, #80]
  444f74:	tbz	w0, #2, 444fa8 <ferror@plt+0x419d8>
  444f78:	ldrh	w2, [x23, #16]
  444f7c:	add	w19, w19, #0x6
  444f80:	mov	x0, #0x0                   	// #0
  444f84:	cmp	w2, w0
  444f88:	b.ls	444fac <ferror@plt+0x419dc>  // b.plast
  444f8c:	ldr	x1, [x23]
  444f90:	ldr	x1, [x1, x0, lsl #3]
  444f94:	add	x0, x0, #0x1
  444f98:	ldr	w1, [x1, #8]
  444f9c:	add	w1, w1, #0x1
  444fa0:	add	w19, w19, w1
  444fa4:	b	444f84 <ferror@plt+0x419b4>
  444fa8:	add	w19, w19, #0x2
  444fac:	ldrb	w0, [x20, #1160]
  444fb0:	cbz	w0, 445068 <ferror@plt+0x41a98>
  444fb4:	mov	x0, x23
  444fb8:	bl	4475d4 <ferror@plt+0x44004>
  444fbc:	add	w19, w19, w0
  444fc0:	ldr	w0, [x20, #512]
  444fc4:	cmp	w0, w19
  444fc8:	b.cs	444fe0 <ferror@plt+0x41a10>  // b.hs, b.nlast
  444fcc:	ldr	x0, [x20, #504]
  444fd0:	mov	w1, w19
  444fd4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  444fd8:	str	x0, [x20, #504]
  444fdc:	str	w19, [x20, #512]
  444fe0:	ldr	x0, [x20, #504]
  444fe4:	mov	x1, x24
  444fe8:	bl	43c330 <ferror@plt+0x38d60>
  444fec:	mov	x19, x0
  444ff0:	ldrb	w0, [x23, #19]
  444ff4:	tbz	w0, #2, 445100 <ferror@plt+0x41b30>
  444ff8:	mov	w0, #0x28                  	// #40
  444ffc:	mov	x21, #0x0                   	// #0
  445000:	mov	w26, #0x2e2e                	// #11822
  445004:	mov	w25, #0x2e                  	// #46
  445008:	mov	w27, #0x2c                  	// #44
  44500c:	strb	w0, [x19], #1
  445010:	ldrh	w0, [x23, #16]
  445014:	mov	w24, w21
  445018:	cmp	w21, w0
  44501c:	b.cs	4450f8 <ferror@plt+0x41b28>  // b.hs, b.nlast
  445020:	ldr	x0, [x23]
  445024:	ldr	x22, [x0, x21, lsl #3]
  445028:	ldr	x0, [x20, #1272]
  44502c:	cmp	x0, x22
  445030:	b.eq	44504c <ferror@plt+0x41a7c>  // b.none
  445034:	ldr	w2, [x22, #8]
  445038:	mov	x0, x19
  44503c:	ldr	x1, [x22]
  445040:	bl	402cd0 <memcpy@plt>
  445044:	ldr	w0, [x22, #8]
  445048:	add	x19, x19, x0
  44504c:	ldrh	w0, [x23, #16]
  445050:	add	w24, w24, #0x1
  445054:	cmp	w0, w24
  445058:	b.ls	4450dc <ferror@plt+0x41b0c>  // b.plast
  44505c:	strb	w27, [x19], #1
  445060:	add	x21, x21, #0x1
  445064:	b	445010 <ferror@plt+0x41a40>
  445068:	mov	x0, x23
  44506c:	add	x21, x23, #0x18
  445070:	bl	441e4c <ferror@plt+0x3e87c>
  445074:	mov	w25, w0
  445078:	mov	w22, #0x0                   	// #0
  44507c:	mov	x26, #0x18                  	// #24
  445080:	cmp	w22, w25
  445084:	b.eq	444fc0 <ferror@plt+0x419f0>  // b.none
  445088:	mov	w0, w22
  44508c:	madd	x0, x0, x26, x23
  445090:	ldrb	w0, [x0, #28]
  445094:	cmp	w0, #0x50
  445098:	b.ne	4450d0 <ferror@plt+0x41b00>  // b.any
  44509c:	ldr	x0, [x21, #16]
  4450a0:	ldr	w0, [x0, #8]
  4450a4:	ldrh	w2, [x21, #6]
  4450a8:	add	w19, w19, w0
  4450ac:	ubfx	x0, x2, #2, #1
  4450b0:	add	w19, w19, w0
  4450b4:	tbz	w2, #3, 4450bc <ferror@plt+0x41aec>
  4450b8:	add	w19, w19, #0x3
  4450bc:	and	w2, w2, #0x1
  4450c0:	add	w22, w22, #0x1
  4450c4:	add	w19, w19, w2
  4450c8:	add	x21, x21, #0x18
  4450cc:	b	445080 <ferror@plt+0x41ab0>
  4450d0:	mov	x0, x21
  4450d4:	bl	43c2e8 <ferror@plt+0x38d18>
  4450d8:	b	4450a4 <ferror@plt+0x41ad4>
  4450dc:	ldrb	w0, [x23, #19]
  4450e0:	tbz	w0, #3, 445060 <ferror@plt+0x41a90>
  4450e4:	mov	x0, x19
  4450e8:	strh	w26, [x0], #3
  4450ec:	strb	w25, [x19, #2]
  4450f0:	mov	x19, x0
  4450f4:	b	445060 <ferror@plt+0x41a90>
  4450f8:	mov	w0, #0x29                  	// #41
  4450fc:	strb	w0, [x19], #1
  445100:	mov	w21, #0x20                  	// #32
  445104:	strb	w21, [x19], #1
  445108:	ldrb	w0, [x20, #1160]
  44510c:	cbz	w0, 445144 <ferror@plt+0x41b74>
  445110:	mov	x1, x19
  445114:	mov	x0, x23
  445118:	bl	447630 <ferror@plt+0x44060>
  44511c:	mov	x19, x0
  445120:	strb	wzr, [x19]
  445124:	ldp	x21, x22, [sp, #32]
  445128:	ldp	x23, x24, [sp, #48]
  44512c:	ldp	x25, x26, [sp, #64]
  445130:	ldp	x27, x28, [sp, #80]
  445134:	ldr	x0, [x20, #504]
  445138:	ldp	x19, x20, [sp, #16]
  44513c:	ldp	x29, x30, [sp], #96
  445140:	ret
  445144:	ldr	w0, [x23, #12]
  445148:	cbz	w0, 445120 <ferror@plt+0x41b50>
  44514c:	mov	x0, x23
  445150:	add	x27, x23, #0x18
  445154:	bl	441e4c <ferror@plt+0x3e87c>
  445158:	mov	w22, w0
  44515c:	mov	w28, #0x0                   	// #0
  445160:	mov	w24, #0x23                  	// #35
  445164:	mov	x25, #0x18                  	// #24
  445168:	mov	w26, #0x2320                	// #8992
  44516c:	cmp	w28, w22
  445170:	b.eq	445120 <ferror@plt+0x41b50>  // b.none
  445174:	ldrh	w0, [x27, #6]
  445178:	tbz	w0, #0, 445180 <ferror@plt+0x41bb0>
  44517c:	strb	w21, [x19], #1
  445180:	ldrh	w0, [x27, #6]
  445184:	tbz	w0, #2, 44518c <ferror@plt+0x41bbc>
  445188:	strb	w24, [x19], #1
  44518c:	mov	w0, w28
  445190:	madd	x0, x0, x25, x23
  445194:	ldrb	w0, [x0, #28]
  445198:	cmp	w0, #0x50
  44519c:	b.ne	4451e4 <ferror@plt+0x41c14>  // b.any
  4451a0:	ldr	x0, [x27, #16]
  4451a4:	ldr	w2, [x0, #8]
  4451a8:	ldr	x1, [x0]
  4451ac:	mov	x0, x19
  4451b0:	bl	402cd0 <memcpy@plt>
  4451b4:	ldr	x0, [x27, #16]
  4451b8:	ldr	w0, [x0, #8]
  4451bc:	add	x19, x19, x0
  4451c0:	ldrh	w0, [x27, #6]
  4451c4:	tbz	w0, #3, 4451d8 <ferror@plt+0x41c08>
  4451c8:	mov	x0, x19
  4451cc:	strh	w26, [x0], #3
  4451d0:	strb	w24, [x19, #2]
  4451d4:	mov	x19, x0
  4451d8:	add	w28, w28, #0x1
  4451dc:	add	x27, x27, #0x18
  4451e0:	b	44516c <ferror@plt+0x41b9c>
  4451e4:	mov	x2, x19
  4451e8:	mov	x1, x27
  4451ec:	mov	x0, x20
  4451f0:	mov	w3, #0x1                   	// #1
  4451f4:	bl	43c3a0 <ferror@plt+0x38dd0>
  4451f8:	mov	x19, x0
  4451fc:	b	4451c0 <ferror@plt+0x41bf0>
  445200:	mov	x4, x0
  445204:	ldrb	w0, [x0, #9]
  445208:	cbz	w0, 44535c <ferror@plt+0x41d8c>
  44520c:	stp	x29, x30, [sp, #-16]!
  445210:	mov	x29, sp
  445214:	ldrb	w2, [x1, #4]
  445218:	ldr	w3, [x4, #12]
  44521c:	cmp	w2, #0x35
  445220:	b.ne	445274 <ferror@plt+0x41ca4>  // b.any
  445224:	ldr	x0, [x4]
  445228:	ldr	x6, [x1, #8]
  44522c:	ldr	x5, [x0, #1280]
  445230:	cmp	x6, x5
  445234:	b.ne	44532c <ferror@plt+0x41d5c>  // b.any
  445238:	ldr	w2, [x1]
  44523c:	cmp	w3, #0x0
  445240:	b.le	44525c <ferror@plt+0x41c8c>
  445244:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  445248:	add	x3, x3, #0xc3f
  44524c:	mov	w1, #0x3                   	// #3
  445250:	bl	435ec4 <ferror@plt+0x328f4>
  445254:	mov	w0, #0x0                   	// #0
  445258:	b	44526c <ferror@plt+0x41c9c>
  44525c:	add	w0, w3, #0x1
  445260:	str	w0, [x4, #12]
  445264:	mov	w0, #0x3                   	// #3
  445268:	str	w2, [x4, #20]
  44526c:	ldp	x29, x30, [sp], #16
  445270:	ret
  445274:	cmp	w3, #0x1
  445278:	b.ne	445334 <ferror@plt+0x41d64>  // b.any
  44527c:	cmp	w2, #0x14
  445280:	b.eq	44529c <ferror@plt+0x41ccc>  // b.none
  445284:	ldr	w2, [x4, #20]
  445288:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44528c:	add	x3, x3, #0xc69
  445290:	mov	w1, #0x3                   	// #3
  445294:	ldr	x0, [x4]
  445298:	b	445250 <ferror@plt+0x41c80>
  44529c:	mov	w0, #0x2                   	// #2
  4452a0:	str	w0, [x4, #12]
  4452a4:	mov	w0, #0x1                   	// #1
  4452a8:	b	44526c <ferror@plt+0x41c9c>
  4452ac:	mov	w0, #0x3                   	// #3
  4452b0:	str	w0, [x4, #12]
  4452b4:	ldrb	w3, [x4, #10]
  4452b8:	cmp	w2, #0x26
  4452bc:	strb	wzr, [x4, #10]
  4452c0:	b.ne	4452e4 <ferror@plt+0x41d14>  // b.any
  4452c4:	mov	w0, #0x1                   	// #1
  4452c8:	strb	w0, [x4, #10]
  4452cc:	ldr	w0, [x1]
  4452d0:	str	w0, [x4, #16]
  4452d4:	ldrb	w0, [x4, #8]
  4452d8:	cbz	w0, 4452a4 <ferror@plt+0x41cd4>
  4452dc:	mov	w0, #0x2                   	// #2
  4452e0:	b	44526c <ferror@plt+0x41c9c>
  4452e4:	cmp	w2, #0x14
  4452e8:	b.ne	4452fc <ferror@plt+0x41d2c>  // b.any
  4452ec:	ldr	w0, [x4, #12]
  4452f0:	add	w0, w0, #0x1
  4452f4:	str	w0, [x4, #12]
  4452f8:	b	4452d4 <ferror@plt+0x41d04>
  4452fc:	cmp	w2, #0x15
  445300:	b.ne	4452d4 <ferror@plt+0x41d04>  // b.any
  445304:	ldr	w0, [x4, #12]
  445308:	sub	w2, w0, #0x1
  44530c:	cmp	w0, #0x3
  445310:	b.eq	44531c <ferror@plt+0x41d4c>  // b.none
  445314:	str	w2, [x4, #12]
  445318:	b	4452d4 <ferror@plt+0x41d04>
  44531c:	str	wzr, [x4, #12]
  445320:	cbnz	w3, 44534c <ferror@plt+0x41d7c>
  445324:	mov	w0, #0x4                   	// #4
  445328:	b	44526c <ferror@plt+0x41c9c>
  44532c:	cmp	w3, #0x1
  445330:	b.eq	445284 <ferror@plt+0x41cb4>  // b.none
  445334:	cmp	w3, #0x1
  445338:	b.le	4452dc <ferror@plt+0x41d0c>
  44533c:	cmp	w3, #0x2
  445340:	b.ne	4452b4 <ferror@plt+0x41ce4>  // b.any
  445344:	cmp	w2, #0x26
  445348:	b.ne	4452ac <ferror@plt+0x41cdc>  // b.any
  44534c:	adrp	x3, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  445350:	ldr	w2, [x1]
  445354:	add	x3, x3, #0xc9c
  445358:	b	445290 <ferror@plt+0x41cc0>
  44535c:	mov	w0, #0x2                   	// #2
  445360:	ret
  445364:	stp	x29, x30, [sp, #-48]!
  445368:	mov	x29, sp
  44536c:	stp	x19, x20, [sp, #16]
  445370:	mov	x20, x0
  445374:	mov	x19, x1
  445378:	ldr	x0, [x0, #32]
  44537c:	stp	x21, x22, [sp, #32]
  445380:	cbz	x0, 4453dc <ferror@plt+0x41e0c>
  445384:	mov	w21, #0x0                   	// #0
  445388:	ldr	w0, [x20, #48]
  44538c:	cmp	w0, w21
  445390:	b.ls	4453dc <ferror@plt+0x41e0c>  // b.plast
  445394:	ldp	x0, x1, [x20, #32]
  445398:	ubfiz	x22, x21, #3, #32
  44539c:	ldr	x2, [x1, x22]
  4453a0:	mov	x1, x19
  4453a4:	ldr	x0, [x0, x22]
  4453a8:	bl	45a8c0 <ferror@plt+0x572f0>
  4453ac:	cbnz	w0, 445428 <ferror@plt+0x41e58>
  4453b0:	ldr	x0, [x20, #40]
  4453b4:	ldr	x0, [x0, x22]
  4453b8:	add	x1, x19, x0
  4453bc:	ldrb	w2, [x19, x0]
  4453c0:	cmp	w2, #0x2f
  4453c4:	b.ne	445428 <ferror@plt+0x41e58>  // b.any
  4453c8:	ldrb	w2, [x1, #1]
  4453cc:	cmp	w2, #0x2e
  4453d0:	b.eq	445410 <ferror@plt+0x41e40>  // b.none
  4453d4:	add	x0, x0, #0x1
  4453d8:	add	x19, x19, x0
  4453dc:	mov	x0, x19
  4453e0:	ldrb	w1, [x0]
  4453e4:	cmp	w1, #0x2e
  4453e8:	b.ne	445430 <ferror@plt+0x41e60>  // b.any
  4453ec:	ldrb	w1, [x0, #1]
  4453f0:	cmp	w1, #0x2f
  4453f4:	b.ne	445430 <ferror@plt+0x41e60>  // b.any
  4453f8:	add	x0, x0, #0x2
  4453fc:	ldrb	w1, [x0]
  445400:	cmp	w1, #0x2f
  445404:	b.ne	4453e0 <ferror@plt+0x41e10>  // b.any
  445408:	add	x0, x0, #0x1
  44540c:	b	4453fc <ferror@plt+0x41e2c>
  445410:	ldrb	w2, [x1, #2]
  445414:	cmp	w2, #0x2e
  445418:	b.ne	4453d4 <ferror@plt+0x41e04>  // b.any
  44541c:	ldrb	w1, [x1, #3]
  445420:	cmp	w1, #0x2f
  445424:	b.ne	4453d4 <ferror@plt+0x41e04>  // b.any
  445428:	add	w21, w21, #0x1
  44542c:	b	445388 <ferror@plt+0x41db8>
  445430:	ldp	x19, x20, [sp, #16]
  445434:	ldp	x21, x22, [sp, #32]
  445438:	ldp	x29, x30, [sp], #48
  44543c:	ret
  445440:	stp	x29, x30, [sp, #-32]!
  445444:	mov	x3, x0
  445448:	mov	w1, #0x0                   	// #0
  44544c:	mov	x29, sp
  445450:	str	x19, [sp, #16]
  445454:	mov	x19, x0
  445458:	ldrb	w2, [x3]
  44545c:	add	w0, w1, #0x1
  445460:	cbz	w2, 4454b8 <ferror@plt+0x41ee8>
  445464:	cmp	w2, #0x24
  445468:	b.hi	4454ac <ferror@plt+0x41edc>  // b.pmore
  44546c:	cmp	w2, #0x22
  445470:	b.hi	4454a8 <ferror@plt+0x41ed8>  // b.pmore
  445474:	cmp	w2, #0x9
  445478:	b.eq	445484 <ferror@plt+0x41eb4>  // b.none
  44547c:	cmp	w2, #0x20
  445480:	b.ne	4454ac <ferror@plt+0x41edc>  // b.any
  445484:	sub	x0, x3, #0x1
  445488:	add	w1, w1, #0x1
  44548c:	cmp	x0, x19
  445490:	b.cc	4454ac <ferror@plt+0x41edc>  // b.lo, b.ul, b.last
  445494:	ldrb	w2, [x0]
  445498:	cmp	w2, #0x5c
  44549c:	b.ne	4454ac <ferror@plt+0x41edc>  // b.any
  4454a0:	sub	x0, x0, #0x1
  4454a4:	b	445488 <ferror@plt+0x41eb8>
  4454a8:	mov	w1, w0
  4454ac:	add	x3, x3, #0x1
  4454b0:	add	w1, w1, #0x1
  4454b4:	b	445458 <ferror@plt+0x41e88>
  4454b8:	sxtw	x0, w0
  4454bc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  4454c0:	mov	x3, x19
  4454c4:	mov	x1, x0
  4454c8:	mov	w5, #0x5c                  	// #92
  4454cc:	ldrb	w2, [x3]
  4454d0:	cbz	w2, 445550 <ferror@plt+0x41f80>
  4454d4:	add	x4, x1, #0x1
  4454d8:	cmp	w2, #0x23
  4454dc:	b.eq	445548 <ferror@plt+0x41f78>  // b.none
  4454e0:	b.hi	445500 <ferror@plt+0x41f30>  // b.pmore
  4454e4:	cmp	w2, #0x9
  4454e8:	b.eq	445514 <ferror@plt+0x41f44>  // b.none
  4454ec:	cmp	w2, #0x20
  4454f0:	b.eq	445514 <ferror@plt+0x41f44>  // b.none
  4454f4:	add	x3, x3, #0x1
  4454f8:	strb	w2, [x1], #1
  4454fc:	b	4454cc <ferror@plt+0x41efc>
  445500:	cmp	w2, #0x24
  445504:	b.ne	4454f4 <ferror@plt+0x41f24>  // b.any
  445508:	strb	w2, [x1]
  44550c:	mov	x1, x4
  445510:	b	4454f4 <ferror@plt+0x41f24>
  445514:	sub	x4, x3, #0x1
  445518:	mov	x6, x1
  44551c:	cmp	x4, x19
  445520:	add	x1, x1, #0x1
  445524:	b.cc	445540 <ferror@plt+0x41f70>  // b.lo, b.ul, b.last
  445528:	ldrb	w7, [x4]
  44552c:	cmp	w7, #0x5c
  445530:	b.ne	445540 <ferror@plt+0x41f70>  // b.any
  445534:	sub	x4, x4, #0x1
  445538:	sturb	w7, [x1, #-1]
  44553c:	b	445518 <ferror@plt+0x41f48>
  445540:	strb	w5, [x6]
  445544:	b	4454f4 <ferror@plt+0x41f24>
  445548:	strb	w5, [x1]
  44554c:	b	44550c <ferror@plt+0x41f3c>
  445550:	strb	wzr, [x1]
  445554:	ldr	x19, [sp, #16]
  445558:	ldp	x29, x30, [sp], #32
  44555c:	ret
  445560:	mov	x1, #0x38                  	// #56
  445564:	mov	x0, #0x1                   	// #1
  445568:	b	45d6f0 <_obstack_memory_used@@Base+0x1300>
  44556c:	stp	x29, x30, [sp, #-32]!
  445570:	mov	x29, sp
  445574:	stp	x19, x20, [sp, #16]
  445578:	mov	x19, x0
  44557c:	ldr	x0, [x0]
  445580:	cbz	x0, 4455ac <ferror@plt+0x41fdc>
  445584:	mov	w20, #0x0                   	// #0
  445588:	ldr	w1, [x19, #8]
  44558c:	ldr	x0, [x19]
  445590:	cmp	w1, w20
  445594:	b.ls	4455a8 <ferror@plt+0x41fd8>  // b.plast
  445598:	ldr	x0, [x0, w20, uxtw #3]
  44559c:	add	w20, w20, #0x1
  4455a0:	bl	4032a0 <free@plt>
  4455a4:	b	445588 <ferror@plt+0x41fb8>
  4455a8:	bl	4032a0 <free@plt>
  4455ac:	ldr	x0, [x19, #16]
  4455b0:	cbz	x0, 4455dc <ferror@plt+0x4200c>
  4455b4:	mov	w20, #0x0                   	// #0
  4455b8:	ldr	w1, [x19, #24]
  4455bc:	ldr	x0, [x19, #16]
  4455c0:	cmp	w1, w20
  4455c4:	b.ls	4455d8 <ferror@plt+0x42008>  // b.plast
  4455c8:	ldr	x0, [x0, w20, uxtw #3]
  4455cc:	add	w20, w20, #0x1
  4455d0:	bl	4032a0 <free@plt>
  4455d4:	b	4455b8 <ferror@plt+0x41fe8>
  4455d8:	bl	4032a0 <free@plt>
  4455dc:	ldr	x0, [x19, #32]
  4455e0:	cbz	x0, 445614 <ferror@plt+0x42044>
  4455e4:	mov	w20, #0x0                   	// #0
  4455e8:	ldr	w1, [x19, #48]
  4455ec:	ldr	x0, [x19, #32]
  4455f0:	cmp	w1, w20
  4455f4:	b.ls	445608 <ferror@plt+0x42038>  // b.plast
  4455f8:	ldr	x0, [x0, w20, uxtw #3]
  4455fc:	add	w20, w20, #0x1
  445600:	bl	4032a0 <free@plt>
  445604:	b	4455e8 <ferror@plt+0x42018>
  445608:	bl	4032a0 <free@plt>
  44560c:	ldr	x0, [x19, #40]
  445610:	bl	4032a0 <free@plt>
  445614:	mov	x0, x19
  445618:	ldp	x19, x20, [sp, #16]
  44561c:	ldp	x29, x30, [sp], #32
  445620:	b	4032a0 <free@plt>
  445624:	stp	x29, x30, [sp, #-48]!
  445628:	mov	x29, sp
  44562c:	stp	x19, x20, [sp, #16]
  445630:	mov	x19, x0
  445634:	mov	w20, w2
  445638:	str	x21, [sp, #32]
  44563c:	mov	x21, x1
  445640:	ldr	w1, [x0, #12]
  445644:	ldr	w0, [x0, #8]
  445648:	cmp	w0, w1
  44564c:	b.ne	44566c <ferror@plt+0x4209c>  // b.any
  445650:	add	w0, w0, #0x2
  445654:	lsl	w0, w0, #1
  445658:	str	w0, [x19, #12]
  44565c:	lsl	x1, x0, #3
  445660:	ldr	x0, [x19]
  445664:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  445668:	str	x0, [x19]
  44566c:	mov	x1, x21
  445670:	mov	x0, x19
  445674:	bl	445364 <ferror@plt+0x41d94>
  445678:	cbz	w20, 4456a4 <ferror@plt+0x420d4>
  44567c:	bl	445440 <ferror@plt+0x41e70>
  445680:	ldr	w1, [x19, #8]
  445684:	ldr	x2, [x19]
  445688:	add	w3, w1, #0x1
  44568c:	ldr	x21, [sp, #32]
  445690:	str	w3, [x19, #8]
  445694:	str	x0, [x2, w1, uxtw #3]
  445698:	ldp	x19, x20, [sp, #16]
  44569c:	ldp	x29, x30, [sp], #48
  4456a0:	ret
  4456a4:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  4456a8:	b	445680 <ferror@plt+0x420b0>
  4456ac:	ldr	w2, [x0, #8]
  4456b0:	cbnz	w2, 445758 <ferror@plt+0x42188>
  4456b4:	stp	x29, x30, [sp, #-48]!
  4456b8:	mov	x29, sp
  4456bc:	stp	x19, x20, [sp, #16]
  4456c0:	str	x21, [sp, #32]
  4456c4:	ldrb	w2, [x1]
  4456c8:	cbnz	w2, 4456f0 <ferror@plt+0x42120>
  4456cc:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  4456d0:	add	x1, x1, #0xd0e
  4456d4:	mov	w2, #0x1                   	// #1
  4456d8:	bl	445624 <ferror@plt+0x42054>
  4456dc:	mov	sp, x29
  4456e0:	ldp	x19, x20, [sp, #16]
  4456e4:	ldr	x21, [sp, #32]
  4456e8:	ldp	x29, x30, [sp], #48
  4456ec:	ret
  4456f0:	mov	x20, x0
  4456f4:	mov	x0, x1
  4456f8:	bl	45b8d0 <ferror@plt+0x58300>
  4456fc:	mov	x21, x0
  445700:	bl	402d50 <strlen@plt>
  445704:	add	x2, x0, #0x12
  445708:	and	x2, x2, #0xfffffffffffffff0
  44570c:	mov	x1, x21
  445710:	sub	sp, sp, x2
  445714:	mov	x19, sp
  445718:	mov	x0, x19
  44571c:	bl	403360 <strcpy@plt>
  445720:	mov	x0, x19
  445724:	mov	w1, #0x2e                  	// #46
  445728:	bl	403130 <strrchr@plt>
  44572c:	cbnz	x0, 44573c <ferror@plt+0x4216c>
  445730:	mov	x0, x19
  445734:	bl	402d50 <strlen@plt>
  445738:	add	x0, x19, x0
  44573c:	adrp	x1, 479000 <_obstack_memory_used@@Base+0x1cc10>
  445740:	add	x1, x1, #0xb6
  445744:	bl	403360 <strcpy@plt>
  445748:	mov	x1, x19
  44574c:	mov	x0, x20
  445750:	mov	w2, #0x1                   	// #1
  445754:	b	4456d8 <ferror@plt+0x42108>
  445758:	ret
  44575c:	stp	x29, x30, [sp, #-32]!
  445760:	mov	x29, sp
  445764:	stp	x19, x20, [sp, #16]
  445768:	mov	x19, x0
  44576c:	bl	445364 <ferror@plt+0x41d94>
  445770:	bl	445440 <ferror@plt+0x41e70>
  445774:	mov	x20, x0
  445778:	ldp	w1, w0, [x19, #24]
  44577c:	cmp	w1, w0
  445780:	b.ne	4457a0 <ferror@plt+0x421d0>  // b.any
  445784:	add	w1, w1, #0x4
  445788:	ldr	x0, [x19, #16]
  44578c:	lsl	w1, w1, #1
  445790:	str	w1, [x19, #28]
  445794:	lsl	x1, x1, #3
  445798:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  44579c:	str	x0, [x19, #16]
  4457a0:	ldr	w0, [x19, #24]
  4457a4:	ldr	x1, [x19, #16]
  4457a8:	add	w2, w0, #0x1
  4457ac:	str	w2, [x19, #24]
  4457b0:	str	x20, [x1, w0, uxtw #3]
  4457b4:	ldp	x19, x20, [sp, #16]
  4457b8:	ldp	x29, x30, [sp], #32
  4457bc:	ret
  4457c0:	stp	x29, x30, [sp, #-64]!
  4457c4:	mov	x29, sp
  4457c8:	stp	x19, x20, [sp, #16]
  4457cc:	mov	x19, x0
  4457d0:	stp	x21, x22, [sp, #32]
  4457d4:	mov	x21, x1
  4457d8:	str	x23, [sp, #48]
  4457dc:	ldrb	w0, [x21]
  4457e0:	cbz	w0, 445894 <ferror@plt+0x422c4>
  4457e4:	mov	x20, x21
  4457e8:	ldrb	w0, [x20]
  4457ec:	cbz	w0, 445800 <ferror@plt+0x42230>
  4457f0:	cmp	w0, #0x3a
  4457f4:	b.eq	445800 <ferror@plt+0x42230>  // b.none
  4457f8:	add	x20, x20, #0x1
  4457fc:	b	4457e8 <ferror@plt+0x42218>
  445800:	sub	x22, x20, x21
  445804:	add	x0, x22, #0x1
  445808:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  44580c:	mov	x23, x0
  445810:	mov	x2, x22
  445814:	mov	x1, x21
  445818:	bl	402cd0 <memcpy@plt>
  44581c:	ldrb	w0, [x20]
  445820:	strb	wzr, [x23, x22]
  445824:	cmp	w0, #0x3a
  445828:	b.ne	445830 <ferror@plt+0x42260>  // b.any
  44582c:	add	x20, x20, #0x1
  445830:	ldp	w1, w0, [x19, #48]
  445834:	cmp	w1, w0
  445838:	b.ne	44586c <ferror@plt+0x4229c>  // b.any
  44583c:	add	w1, w1, #0x4
  445840:	ldr	x0, [x19, #32]
  445844:	lsl	w1, w1, #1
  445848:	str	w1, [x19, #52]
  44584c:	lsl	x1, x1, #3
  445850:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  445854:	str	x0, [x19, #32]
  445858:	ldr	x0, [x19, #40]
  44585c:	ldr	w1, [x19, #52]
  445860:	lsl	x1, x1, #3
  445864:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  445868:	str	x0, [x19, #40]
  44586c:	ldr	w1, [x19, #48]
  445870:	mov	x21, x20
  445874:	ldr	x2, [x19, #32]
  445878:	ubfiz	x0, x1, #3, #32
  44587c:	add	w1, w1, #0x1
  445880:	str	x23, [x2, x0]
  445884:	ldr	x2, [x19, #40]
  445888:	str	x22, [x2, x0]
  44588c:	str	w1, [x19, #48]
  445890:	b	4457dc <ferror@plt+0x4220c>
  445894:	ldp	x19, x20, [sp, #16]
  445898:	ldp	x21, x22, [sp, #32]
  44589c:	ldr	x23, [sp, #48]
  4458a0:	ldp	x29, x30, [sp], #64
  4458a4:	ret
  4458a8:	stp	x29, x30, [sp, #-80]!
  4458ac:	mov	x29, sp
  4458b0:	stp	x21, x22, [sp, #32]
  4458b4:	mov	x22, x0
  4458b8:	sub	w0, w2, #0x1
  4458bc:	cmp	w0, #0x20
  4458c0:	mov	w0, #0x22                  	// #34
  4458c4:	csel	w21, w2, w0, hi  // hi = pmore
  4458c8:	stp	x19, x20, [sp, #16]
  4458cc:	mov	x20, x1
  4458d0:	stp	x25, x26, [sp, #64]
  4458d4:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4458d8:	add	x25, x25, #0xd70
  4458dc:	mov	w19, #0x0                   	// #0
  4458e0:	stp	x23, x24, [sp, #48]
  4458e4:	mov	w23, #0x0                   	// #0
  4458e8:	ldr	w0, [x22, #8]
  4458ec:	cmp	w0, w23
  4458f0:	b.ls	445954 <ferror@plt+0x42384>  // b.plast
  4458f4:	ldr	x0, [x22]
  4458f8:	ubfiz	x26, x23, #3, #32
  4458fc:	ldr	x0, [x0, x26]
  445900:	bl	402d50 <strlen@plt>
  445904:	mov	x24, x0
  445908:	add	w19, w19, w0
  44590c:	cbz	w23, 44592c <ferror@plt+0x4235c>
  445910:	cmp	w21, #0x0
  445914:	mov	x1, x20
  445918:	ccmp	w21, w19, #0x2, ne  // ne = any
  44591c:	b.cs	445944 <ferror@plt+0x42374>  // b.hs, b.nlast
  445920:	add	w19, w24, #0x1
  445924:	mov	x0, x25
  445928:	bl	403460 <fputs_unlocked@plt>
  44592c:	ldr	x0, [x22]
  445930:	mov	x1, x20
  445934:	add	w23, w23, #0x1
  445938:	ldr	x0, [x0, x26]
  44593c:	bl	403460 <fputs_unlocked@plt>
  445940:	b	4458e8 <ferror@plt+0x42318>
  445944:	mov	w0, #0x20                  	// #32
  445948:	add	w19, w19, #0x1
  44594c:	bl	402eb0 <putc_unlocked@plt>
  445950:	b	44592c <ferror@plt+0x4235c>
  445954:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  445958:	add	w19, w19, #0x1
  44595c:	add	x25, x25, #0xd70
  445960:	mov	w23, #0x0                   	// #0
  445964:	mov	x1, x20
  445968:	mov	w0, #0x3a                  	// #58
  44596c:	bl	402eb0 <putc_unlocked@plt>
  445970:	ldr	w0, [x22, #24]
  445974:	cmp	w0, w23
  445978:	b.ls	4459d8 <ferror@plt+0x42408>  // b.plast
  44597c:	ldr	x0, [x22, #16]
  445980:	ubfiz	x26, x23, #3, #32
  445984:	ldr	x0, [x0, x26]
  445988:	bl	402d50 <strlen@plt>
  44598c:	add	w19, w19, w0
  445990:	cmp	w21, #0x0
  445994:	mov	x24, x0
  445998:	ccmp	w21, w19, #0x2, ne  // ne = any
  44599c:	mov	x1, x20
  4459a0:	b.cs	4459c8 <ferror@plt+0x423f8>  // b.hs, b.nlast
  4459a4:	add	w19, w24, #0x1
  4459a8:	mov	x0, x25
  4459ac:	bl	403460 <fputs_unlocked@plt>
  4459b0:	ldr	x0, [x22, #16]
  4459b4:	mov	x1, x20
  4459b8:	add	w23, w23, #0x1
  4459bc:	ldr	x0, [x0, x26]
  4459c0:	bl	403460 <fputs_unlocked@plt>
  4459c4:	b	445970 <ferror@plt+0x423a0>
  4459c8:	mov	w0, #0x20                  	// #32
  4459cc:	add	w19, w19, #0x1
  4459d0:	bl	402eb0 <putc_unlocked@plt>
  4459d4:	b	4459b0 <ferror@plt+0x423e0>
  4459d8:	mov	x1, x20
  4459dc:	mov	w0, #0xa                   	// #10
  4459e0:	ldp	x19, x20, [sp, #16]
  4459e4:	ldp	x21, x22, [sp, #32]
  4459e8:	ldp	x23, x24, [sp, #48]
  4459ec:	ldp	x25, x26, [sp, #64]
  4459f0:	ldp	x29, x30, [sp], #80
  4459f4:	b	402eb0 <putc_unlocked@plt>
  4459f8:	stp	x29, x30, [sp, #-48]!
  4459fc:	mov	x29, sp
  445a00:	stp	x19, x20, [sp, #16]
  445a04:	mov	x19, x1
  445a08:	mov	w20, #0x1                   	// #1
  445a0c:	str	x21, [sp, #32]
  445a10:	mov	x21, x0
  445a14:	ldr	w0, [x21, #24]
  445a18:	cmp	w0, w20
  445a1c:	b.ls	445a5c <ferror@plt+0x4248c>  // b.plast
  445a20:	mov	x1, x19
  445a24:	mov	w0, #0xa                   	// #10
  445a28:	bl	402eb0 <putc_unlocked@plt>
  445a2c:	ldr	x0, [x21, #16]
  445a30:	mov	x1, x19
  445a34:	ldr	x0, [x0, w20, uxtw #3]
  445a38:	add	w20, w20, #0x1
  445a3c:	bl	403460 <fputs_unlocked@plt>
  445a40:	mov	x1, x19
  445a44:	mov	w0, #0x3a                  	// #58
  445a48:	bl	402eb0 <putc_unlocked@plt>
  445a4c:	mov	x1, x19
  445a50:	mov	w0, #0xa                   	// #10
  445a54:	bl	402eb0 <putc_unlocked@plt>
  445a58:	b	445a14 <ferror@plt+0x42444>
  445a5c:	ldp	x19, x20, [sp, #16]
  445a60:	ldr	x21, [sp, #32]
  445a64:	ldp	x29, x30, [sp], #48
  445a68:	ret
  445a6c:	stp	x29, x30, [sp, #-64]!
  445a70:	mov	x3, x1
  445a74:	mov	x2, #0x1                   	// #1
  445a78:	mov	x29, sp
  445a7c:	stp	x19, x20, [sp, #16]
  445a80:	mov	x19, x0
  445a84:	mov	x20, x1
  445a88:	add	x0, x0, #0x18
  445a8c:	mov	x1, #0x4                   	// #4
  445a90:	stp	x21, x22, [sp, #32]
  445a94:	bl	402d30 <fwrite_unlocked@plt>
  445a98:	cmp	x0, #0x1
  445a9c:	b.ne	445b08 <ferror@plt+0x42538>  // b.any
  445aa0:	mov	w21, #0x0                   	// #0
  445aa4:	ldr	w0, [x19, #24]
  445aa8:	cmp	w0, w21
  445aac:	b.ls	445b1c <ferror@plt+0x4254c>  // b.plast
  445ab0:	ldr	x0, [x19, #16]
  445ab4:	ubfiz	x22, x21, #3, #32
  445ab8:	ldr	x0, [x0, x22]
  445abc:	bl	402d50 <strlen@plt>
  445ac0:	str	x0, [sp, #56]
  445ac4:	mov	x2, #0x1                   	// #1
  445ac8:	mov	x3, x20
  445acc:	add	x0, sp, #0x38
  445ad0:	mov	x1, #0x8                   	// #8
  445ad4:	bl	402d30 <fwrite_unlocked@plt>
  445ad8:	mov	x2, x0
  445adc:	cmp	x0, #0x1
  445ae0:	b.ne	445b08 <ferror@plt+0x42538>  // b.any
  445ae4:	ldr	x0, [x19, #16]
  445ae8:	mov	x3, x20
  445aec:	ldr	x1, [sp, #56]
  445af0:	ldr	x0, [x0, x22]
  445af4:	bl	402d30 <fwrite_unlocked@plt>
  445af8:	cmp	x0, #0x1
  445afc:	b.ne	445b08 <ferror@plt+0x42538>  // b.any
  445b00:	add	w21, w21, #0x1
  445b04:	b	445aa4 <ferror@plt+0x424d4>
  445b08:	mov	w0, #0xffffffff            	// #-1
  445b0c:	ldp	x19, x20, [sp, #16]
  445b10:	ldp	x21, x22, [sp, #32]
  445b14:	ldp	x29, x30, [sp], #64
  445b18:	ret
  445b1c:	mov	w0, #0x0                   	// #0
  445b20:	b	445b0c <ferror@plt+0x4253c>
  445b24:	stp	x29, x30, [sp, #-80]!
  445b28:	mov	x3, x1
  445b2c:	mov	x29, sp
  445b30:	stp	x19, x20, [sp, #16]
  445b34:	mov	x20, x1
  445b38:	mov	x1, #0x1                   	// #1
  445b3c:	stp	x21, x22, [sp, #32]
  445b40:	mov	x21, x2
  445b44:	mov	x2, #0x4                   	// #4
  445b48:	stp	x23, x24, [sp, #48]
  445b4c:	mov	x24, x0
  445b50:	add	x0, sp, #0x44
  445b54:	bl	4031d0 <fread_unlocked@plt>
  445b58:	cmp	x0, #0x4
  445b5c:	b.ne	445ba4 <ferror@plt+0x425d4>  // b.any
  445b60:	mov	x0, #0x200                 	// #512
  445b64:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  445b68:	mov	x19, x0
  445b6c:	mov	x23, #0x200                 	// #512
  445b70:	mov	w22, #0x0                   	// #0
  445b74:	ldr	w0, [sp, #68]
  445b78:	cmp	w0, w22
  445b7c:	b.ls	445c1c <ferror@plt+0x4264c>  // b.plast
  445b80:	mov	x3, x20
  445b84:	add	x0, sp, #0x48
  445b88:	mov	x2, #0x8                   	// #8
  445b8c:	mov	x1, #0x1                   	// #1
  445b90:	bl	4031d0 <fread_unlocked@plt>
  445b94:	cmp	x0, #0x8
  445b98:	b.eq	445bac <ferror@plt+0x425dc>  // b.none
  445b9c:	mov	x0, x19
  445ba0:	bl	4032a0 <free@plt>
  445ba4:	mov	w0, #0xffffffff            	// #-1
  445ba8:	b	445c28 <ferror@plt+0x42658>
  445bac:	ldr	x0, [sp, #72]
  445bb0:	add	x1, x0, #0x1
  445bb4:	cmp	x1, x23
  445bb8:	b.ls	445bd0 <ferror@plt+0x42600>  // b.plast
  445bbc:	add	x23, x0, #0x80
  445bc0:	mov	x0, x19
  445bc4:	mov	x1, x23
  445bc8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  445bcc:	mov	x19, x0
  445bd0:	ldr	x2, [sp, #72]
  445bd4:	mov	x1, #0x1                   	// #1
  445bd8:	mov	x3, x20
  445bdc:	mov	x0, x19
  445be0:	bl	4031d0 <fread_unlocked@plt>
  445be4:	ldr	x1, [sp, #72]
  445be8:	cmp	x0, x1
  445bec:	b.ne	445b9c <ferror@plt+0x425cc>  // b.any
  445bf0:	strb	wzr, [x19, x0]
  445bf4:	cbz	x21, 445c14 <ferror@plt+0x42644>
  445bf8:	mov	x1, x21
  445bfc:	mov	x0, x19
  445c00:	bl	45a8bc <ferror@plt+0x572ec>
  445c04:	cbz	w0, 445c14 <ferror@plt+0x42644>
  445c08:	mov	x1, x19
  445c0c:	mov	x0, x24
  445c10:	bl	44575c <ferror@plt+0x4218c>
  445c14:	add	w22, w22, #0x1
  445c18:	b	445b74 <ferror@plt+0x425a4>
  445c1c:	mov	x0, x19
  445c20:	bl	4032a0 <free@plt>
  445c24:	mov	w0, #0x0                   	// #0
  445c28:	ldp	x19, x20, [sp, #16]
  445c2c:	ldp	x21, x22, [sp, #32]
  445c30:	ldp	x23, x24, [sp, #48]
  445c34:	ldp	x29, x30, [sp], #80
  445c38:	ret
  445c3c:	stp	x29, x30, [sp, #-48]!
  445c40:	mov	x1, #0x90                  	// #144
  445c44:	mov	x29, sp
  445c48:	str	x21, [sp, #32]
  445c4c:	mov	w21, #0x1                   	// #1
  445c50:	stp	x19, x20, [sp, #16]
  445c54:	lsl	w20, w21, w0
  445c58:	mov	x0, #0x1                   	// #1
  445c5c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  445c60:	mov	x19, x0
  445c64:	adrp	x4, 403000 <memset@plt>
  445c68:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xc10>
  445c6c:	add	x4, x4, #0x2a0
  445c70:	add	x3, x3, #0x6bc
  445c74:	mov	x2, #0x0                   	// #0
  445c78:	mov	x1, #0x0                   	// #0
  445c7c:	bl	45c200 <_obstack_begin@@Base>
  445c80:	str	xzr, [x19, #48]
  445c84:	mov	w0, w20
  445c88:	mov	x1, #0x8                   	// #8
  445c8c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  445c90:	str	x0, [x19, #88]
  445c94:	mov	x0, x19
  445c98:	str	w20, [x19, #112]
  445c9c:	strb	w21, [x19, #136]
  445ca0:	ldp	x19, x20, [sp, #16]
  445ca4:	ldr	x21, [sp, #32]
  445ca8:	ldp	x29, x30, [sp], #48
  445cac:	ret
  445cb0:	stp	x29, x30, [sp, #-32]!
  445cb4:	mov	x1, #0x0                   	// #0
  445cb8:	mov	x29, sp
  445cbc:	str	x19, [sp, #16]
  445cc0:	mov	x19, x0
  445cc4:	bl	45c37c <_obstack_free@@Base>
  445cc8:	ldrb	w0, [x19, #136]
  445ccc:	cbz	w0, 445cd8 <ferror@plt+0x42708>
  445cd0:	ldr	x0, [x19, #88]
  445cd4:	bl	4032a0 <free@plt>
  445cd8:	mov	x0, x19
  445cdc:	ldr	x19, [sp, #16]
  445ce0:	ldp	x29, x30, [sp], #32
  445ce4:	b	4032a0 <free@plt>
  445ce8:	stp	x29, x30, [sp, #-112]!
  445cec:	mov	x29, sp
  445cf0:	stp	x19, x20, [sp, #16]
  445cf4:	mov	x19, x0
  445cf8:	stp	x25, x26, [sp, #64]
  445cfc:	mov	x26, x1
  445d00:	ldr	w25, [x0, #112]
  445d04:	ldr	w0, [x0, #128]
  445d08:	stp	x21, x22, [sp, #32]
  445d0c:	mov	x21, x2
  445d10:	add	w0, w0, #0x1
  445d14:	stp	x23, x24, [sp, #48]
  445d18:	mov	w22, w3
  445d1c:	stp	x27, x28, [sp, #80]
  445d20:	sub	w27, w25, #0x1
  445d24:	and	w24, w27, w3
  445d28:	ldr	x28, [x19, #88]
  445d2c:	str	w0, [x19, #128]
  445d30:	and	w0, w27, w3
  445d34:	str	w4, [sp, #104]
  445d38:	ldr	x20, [x28, x0, lsl #3]
  445d3c:	cbz	x20, 445fa4 <ferror@plt+0x429d4>
  445d40:	cmn	x20, #0x1
  445d44:	b.eq	445d74 <ferror@plt+0x427a4>  // b.none
  445d48:	ldr	w0, [x20, #12]
  445d4c:	cmp	w0, w3
  445d50:	b.ne	445d6c <ferror@plt+0x4279c>  // b.any
  445d54:	ldr	w0, [x20, #8]
  445d58:	cmp	w0, w2
  445d5c:	b.ne	445d6c <ferror@plt+0x4279c>  // b.any
  445d60:	ldr	x0, [x20]
  445d64:	bl	4031e0 <memcmp@plt>
  445d68:	cbz	w0, 445dec <ferror@plt+0x4281c>
  445d6c:	mov	w23, w25
  445d70:	b	445d78 <ferror@plt+0x427a8>
  445d74:	mov	w23, w24
  445d78:	add	w4, w22, w22, lsl #4
  445d7c:	and	w4, w4, w27
  445d80:	orr	w4, w4, #0x1
  445d84:	ldr	w0, [x19, #132]
  445d88:	add	w0, w0, #0x1
  445d8c:	str	w0, [x19, #132]
  445d90:	add	w0, w24, w4
  445d94:	and	w24, w27, w0
  445d98:	and	w0, w27, w0
  445d9c:	ldr	x20, [x28, x0, lsl #3]
  445da0:	cbz	x20, 445e0c <ferror@plt+0x4283c>
  445da4:	cmn	x20, #0x1
  445da8:	b.ne	445db8 <ferror@plt+0x427e8>  // b.any
  445dac:	cmp	w23, w25
  445db0:	csel	w23, w23, w24, eq  // eq = none
  445db4:	b	445d84 <ferror@plt+0x427b4>
  445db8:	ldr	w0, [x20, #12]
  445dbc:	cmp	w0, w22
  445dc0:	b.ne	445d84 <ferror@plt+0x427b4>  // b.any
  445dc4:	ldr	w0, [x20, #8]
  445dc8:	cmp	w0, w21
  445dcc:	b.ne	445d84 <ferror@plt+0x427b4>  // b.any
  445dd0:	ldr	x0, [x20]
  445dd4:	mov	x2, x21
  445dd8:	mov	x1, x26
  445ddc:	str	w4, [sp, #108]
  445de0:	bl	4031e0 <memcmp@plt>
  445de4:	ldr	w4, [sp, #108]
  445de8:	cbnz	w0, 445d84 <ferror@plt+0x427b4>
  445dec:	mov	x0, x20
  445df0:	ldp	x19, x20, [sp, #16]
  445df4:	ldp	x21, x22, [sp, #32]
  445df8:	ldp	x23, x24, [sp, #48]
  445dfc:	ldp	x25, x26, [sp, #64]
  445e00:	ldp	x27, x28, [sp, #80]
  445e04:	ldp	x29, x30, [sp], #112
  445e08:	ret
  445e0c:	ldr	w0, [sp, #104]
  445e10:	cbnz	w0, 445e1c <ferror@plt+0x4284c>
  445e14:	mov	x20, #0x0                   	// #0
  445e18:	b	445dec <ferror@plt+0x4281c>
  445e1c:	cmp	w23, w25
  445e20:	csel	w24, w24, w23, eq  // eq = none
  445e24:	ldr	x1, [x19, #96]
  445e28:	mov	x0, x19
  445e2c:	blr	x1
  445e30:	mov	x20, x0
  445e34:	ldr	x0, [x19, #88]
  445e38:	ldr	x1, [x19, #104]
  445e3c:	str	x20, [x0, w24, uxtw #3]
  445e40:	add	x0, x21, #0x1
  445e44:	stp	w21, w22, [x20, #8]
  445e48:	cbz	x1, 445f1c <ferror@plt+0x4294c>
  445e4c:	blr	x1
  445e50:	mov	x22, x0
  445e54:	mov	x2, x21
  445e58:	mov	x1, x26
  445e5c:	bl	402cd0 <memcpy@plt>
  445e60:	strb	wzr, [x22, x21]
  445e64:	str	x22, [x20]
  445e68:	ldp	w0, w1, [x19, #112]
  445e6c:	add	w1, w1, #0x1
  445e70:	str	w1, [x19, #116]
  445e74:	lsl	w22, w0, #1
  445e78:	add	w0, w0, w0, lsl #1
  445e7c:	cmp	w0, w1, lsl #2
  445e80:	b.hi	445dec <ferror@plt+0x4281c>  // b.pmore
  445e84:	mov	w0, w22
  445e88:	mov	x1, #0x8                   	// #8
  445e8c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  445e90:	mov	x21, x0
  445e94:	ldr	x0, [x19, #88]
  445e98:	sub	w2, w22, #0x1
  445e9c:	ldr	w5, [x19, #112]
  445ea0:	mov	x3, x0
  445ea4:	add	x5, x0, x5, lsl #3
  445ea8:	ldr	x7, [x3]
  445eac:	sub	x1, x7, #0x1
  445eb0:	cmn	x1, #0x3
  445eb4:	b.hi	445ef0 <ferror@plt+0x42920>  // b.pmore
  445eb8:	ldr	w1, [x7, #12]
  445ebc:	and	w4, w2, w1
  445ec0:	and	w6, w2, w1
  445ec4:	ldr	x4, [x21, x4, lsl #3]
  445ec8:	cbz	x4, 445eec <ferror@plt+0x4291c>
  445ecc:	add	w1, w1, w1, lsl #4
  445ed0:	and	w1, w1, w2
  445ed4:	orr	w1, w1, #0x1
  445ed8:	add	w4, w1, w6
  445edc:	and	w6, w2, w4
  445ee0:	and	w4, w2, w4
  445ee4:	ldr	x4, [x21, x4, lsl #3]
  445ee8:	cbnz	x4, 445ed8 <ferror@plt+0x42908>
  445eec:	str	x7, [x21, w6, uxtw #3]
  445ef0:	add	x3, x3, #0x8
  445ef4:	cmp	x5, x3
  445ef8:	b.hi	445ea8 <ferror@plt+0x428d8>  // b.pmore
  445efc:	ldrb	w1, [x19, #136]
  445f00:	cbz	w1, 445f08 <ferror@plt+0x42938>
  445f04:	bl	4032a0 <free@plt>
  445f08:	mov	w0, #0x1                   	// #1
  445f0c:	str	x21, [x19, #88]
  445f10:	str	w22, [x19, #112]
  445f14:	strb	w0, [x19, #136]
  445f18:	b	445dec <ferror@plt+0x4281c>
  445f1c:	ldp	x2, x1, [x19, #24]
  445f20:	sub	x1, x1, x2
  445f24:	cmp	x1, x0
  445f28:	b.cs	445f38 <ferror@plt+0x42968>  // b.hs, b.nlast
  445f2c:	mov	x1, x0
  445f30:	mov	x0, x19
  445f34:	bl	45c22c <_obstack_newchunk@@Base>
  445f38:	ldr	x0, [x19, #24]
  445f3c:	mov	x2, x21
  445f40:	mov	x1, x26
  445f44:	bl	402cd0 <memcpy@plt>
  445f48:	ldr	x1, [x19, #24]
  445f4c:	add	x0, x1, x21
  445f50:	add	x0, x0, #0x1
  445f54:	str	x0, [x19, #24]
  445f58:	strb	wzr, [x1, x21]
  445f5c:	ldp	x2, x1, [x19, #16]
  445f60:	cmp	x1, x2
  445f64:	b.ne	445f74 <ferror@plt+0x429a4>  // b.any
  445f68:	ldrb	w0, [x19, #80]
  445f6c:	orr	w0, w0, #0x2
  445f70:	strb	w0, [x19, #80]
  445f74:	ldr	x0, [x19, #48]
  445f78:	ldr	x3, [x19, #32]
  445f7c:	add	x1, x1, x0
  445f80:	bic	x0, x1, x0
  445f84:	ldr	x1, [x19, #8]
  445f88:	sub	x4, x0, x1
  445f8c:	sub	x1, x3, x1
  445f90:	cmp	x4, x1
  445f94:	csel	x0, x0, x3, ls  // ls = plast
  445f98:	stp	x0, x0, [x19, #16]
  445f9c:	str	x2, [x20]
  445fa0:	b	445e68 <ferror@plt+0x42898>
  445fa4:	ldr	w0, [sp, #104]
  445fa8:	cbnz	w0, 445e24 <ferror@plt+0x42854>
  445fac:	b	445e14 <ferror@plt+0x42844>
  445fb0:	mov	w4, w3
  445fb4:	mov	x6, #0x0                   	// #0
  445fb8:	mov	w5, #0x0                   	// #0
  445fbc:	mov	w7, #0x43                  	// #67
  445fc0:	cmp	x2, x6
  445fc4:	b.eq	445fe0 <ferror@plt+0x42a10>  // b.none
  445fc8:	mul	w5, w5, w7
  445fcc:	ldrb	w3, [x1, x6]
  445fd0:	add	x6, x6, #0x1
  445fd4:	sub	w5, w5, #0x71
  445fd8:	add	w5, w3, w5
  445fdc:	b	445fc0 <ferror@plt+0x429f0>
  445fe0:	add	w3, w5, w2
  445fe4:	b	445ce8 <ferror@plt+0x42718>
  445fe8:	stp	x29, x30, [sp, #-64]!
  445fec:	mov	x29, sp
  445ff0:	stp	x19, x20, [sp, #16]
  445ff4:	mov	x19, x0
  445ff8:	ldr	x20, [x0, #88]
  445ffc:	str	x23, [sp, #48]
  446000:	ldr	w23, [x0, #112]
  446004:	stp	x21, x22, [sp, #32]
  446008:	mov	x21, x1
  44600c:	mov	x22, x2
  446010:	add	x23, x20, x23, lsl #3
  446014:	ldr	x1, [x20]
  446018:	sub	x0, x1, #0x1
  44601c:	cmn	x0, #0x3
  446020:	b.ls	446044 <ferror@plt+0x42a74>  // b.plast
  446024:	add	x20, x20, #0x8
  446028:	cmp	x23, x20
  44602c:	b.hi	446014 <ferror@plt+0x42a44>  // b.pmore
  446030:	ldp	x19, x20, [sp, #16]
  446034:	ldp	x21, x22, [sp, #32]
  446038:	ldr	x23, [sp, #48]
  44603c:	ldp	x29, x30, [sp], #64
  446040:	ret
  446044:	ldr	x0, [x19, #120]
  446048:	mov	x2, x22
  44604c:	blr	x21
  446050:	cbnz	w0, 446024 <ferror@plt+0x42a54>
  446054:	b	446030 <ferror@plt+0x42a60>
  446058:	stp	x29, x30, [sp, #-64]!
  44605c:	mov	x29, sp
  446060:	stp	x19, x20, [sp, #16]
  446064:	mov	x20, x0
  446068:	ldr	x19, [x0, #88]
  44606c:	stp	x21, x22, [sp, #32]
  446070:	ldr	w21, [x0, #112]
  446074:	mov	x22, x1
  446078:	stp	x23, x24, [sp, #48]
  44607c:	mov	x23, x2
  446080:	add	x21, x19, x21, lsl #3
  446084:	mov	x24, #0xffffffffffffffff    	// #-1
  446088:	ldr	x1, [x19]
  44608c:	sub	x0, x1, #0x1
  446090:	cmn	x0, #0x3
  446094:	b.hi	4460ac <ferror@plt+0x42adc>  // b.pmore
  446098:	ldr	x0, [x20, #120]
  44609c:	mov	x2, x23
  4460a0:	blr	x22
  4460a4:	cbz	w0, 4460ac <ferror@plt+0x42adc>
  4460a8:	str	x24, [x19]
  4460ac:	add	x19, x19, #0x8
  4460b0:	cmp	x21, x19
  4460b4:	b.hi	446088 <ferror@plt+0x42ab8>  // b.pmore
  4460b8:	ldp	x19, x20, [sp, #16]
  4460bc:	ldp	x21, x22, [sp, #32]
  4460c0:	ldp	x23, x24, [sp, #48]
  4460c4:	ldp	x29, x30, [sp], #64
  4460c8:	ret
  4460cc:	stp	x29, x30, [sp, #-64]!
  4460d0:	mov	x29, sp
  4460d4:	stp	x19, x20, [sp, #16]
  4460d8:	mov	x19, x0
  4460dc:	ldrb	w0, [x0, #136]
  4460e0:	stp	x21, x22, [sp, #32]
  4460e4:	mov	w20, w3
  4460e8:	mov	x22, x1
  4460ec:	str	x23, [sp, #48]
  4460f0:	mov	w21, w2
  4460f4:	and	w23, w4, #0xff
  4460f8:	cbz	w0, 446104 <ferror@plt+0x42b34>
  4460fc:	ldr	x0, [x19, #88]
  446100:	bl	4032a0 <free@plt>
  446104:	strb	w23, [x19, #136]
  446108:	ldr	x23, [sp, #48]
  44610c:	str	x22, [x19, #88]
  446110:	stp	w21, w20, [x19, #112]
  446114:	ldp	x19, x20, [sp, #16]
  446118:	ldp	x21, x22, [sp, #32]
  44611c:	ldp	x29, x30, [sp], #64
  446120:	ret
  446124:	stp	x29, x30, [sp, #-112]!
  446128:	mov	x29, sp
  44612c:	ldr	w1, [x0, #112]
  446130:	stp	x21, x22, [sp, #32]
  446134:	mov	x22, x0
  446138:	ldr	x0, [x0, #88]
  44613c:	stp	d8, d9, [sp, #80]
  446140:	movi	d9, #0x0
  446144:	lsl	x21, x1, #3
  446148:	stp	x19, x20, [sp, #16]
  44614c:	add	x1, x0, x1, lsl #3
  446150:	mov	x19, #0x0                   	// #0
  446154:	stp	x23, x24, [sp, #48]
  446158:	mov	x24, #0x0                   	// #0
  44615c:	mov	x23, #0x0                   	// #0
  446160:	stp	x25, x26, [sp, #64]
  446164:	mov	x25, #0x0                   	// #0
  446168:	str	d10, [sp, #96]
  44616c:	ldr	x2, [x0]
  446170:	cmn	x2, #0x1
  446174:	b.ne	446318 <ferror@plt+0x42d48>  // b.any
  446178:	add	x25, x25, #0x1
  44617c:	add	x0, x0, #0x8
  446180:	cmp	x1, x0
  446184:	b.hi	44616c <ferror@plt+0x42b9c>  // b.pmore
  446188:	adrp	x20, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  44618c:	ldr	w26, [x22, #116]
  446190:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446194:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446198:	ldr	x0, [x20, #1264]
  44619c:	add	x2, x2, #0xd75
  4461a0:	add	x1, x1, #0xd7e
  4461a4:	mov	w3, w26
  4461a8:	bl	403590 <fprintf@plt>
  4461ac:	ucvtf	d0, x23
  4461b0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4461b4:	fmov	d1, x0
  4461b8:	ucvtf	d10, w26
  4461bc:	ldr	x0, [x20, #1264]
  4461c0:	mov	x3, x23
  4461c4:	fmul	d0, d0, d1
  4461c8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4461cc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4461d0:	add	x2, x2, #0xd95
  4461d4:	add	x1, x1, #0xda2
  4461d8:	adrp	x23, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4461dc:	add	x23, x23, #0xd8b
  4461e0:	fdiv	d0, d0, d10
  4461e4:	bl	403590 <fprintf@plt>
  4461e8:	ldr	w3, [x22, #112]
  4461ec:	mov	x1, x23
  4461f0:	ldr	x0, [x20, #1264]
  4461f4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4461f8:	add	x2, x2, #0xdb5
  4461fc:	bl	403590 <fprintf@plt>
  446200:	ldr	x0, [x20, #1264]
  446204:	mov	x3, x25
  446208:	mov	x1, x23
  44620c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446210:	add	x2, x2, #0xdbc
  446214:	adrp	x25, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446218:	bl	403590 <fprintf@plt>
  44621c:	add	x25, x25, #0xdd0
  446220:	ldr	x0, [x22, #104]
  446224:	cbz	x0, 446358 <ferror@plt+0x42d88>
  446228:	mov	x1, #0x27ff                	// #10239
  44622c:	cmp	x19, x1
  446230:	ldr	x0, [x20, #1264]
  446234:	b.ls	44634c <ferror@plt+0x42d7c>  // b.plast
  446238:	mov	w1, #0x9fffff              	// #10485759
  44623c:	cmp	x19, x1
  446240:	b.hi	446340 <ferror@plt+0x42d70>  // b.pmore
  446244:	lsr	x3, x19, #10
  446248:	mov	w4, #0x6b                  	// #107
  44624c:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446250:	mov	x1, x25
  446254:	add	x2, x2, #0xdc5
  446258:	bl	403590 <fprintf@plt>
  44625c:	mov	x1, #0x27ff                	// #10239
  446260:	cmp	x21, x1
  446264:	ldr	x0, [x20, #1264]
  446268:	b.ls	4463f8 <ferror@plt+0x42e28>  // b.plast
  44626c:	mov	w1, #0x9fffff              	// #10485759
  446270:	cmp	x21, x1
  446274:	b.hi	4463ec <ferror@plt+0x42e1c>  // b.pmore
  446278:	lsr	x21, x21, #10
  44627c:	mov	w4, #0x6b                  	// #107
  446280:	mov	x3, x21
  446284:	mov	x1, x25
  446288:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44628c:	add	x2, x2, #0xe08
  446290:	bl	403590 <fprintf@plt>
  446294:	ldr	w0, [x22, #132]
  446298:	ucvtf	d8, x19
  44629c:	adrp	x19, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4462a0:	add	x19, x19, #0xe21
  4462a4:	mov	x1, x19
  4462a8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4462ac:	ucvtf	d1, w0
  4462b0:	ldr	w0, [x22, #128]
  4462b4:	fdiv	d8, d8, d10
  4462b8:	add	x2, x2, #0xe14
  4462bc:	ucvtf	d0, w0
  4462c0:	ldr	x0, [x20, #1264]
  4462c4:	fdiv	d0, d1, d0
  4462c8:	bl	403590 <fprintf@plt>
  4462cc:	ldr	w0, [x22, #128]
  4462d0:	mov	x1, x19
  4462d4:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4462d8:	add	x2, x2, #0xe2c
  4462dc:	ucvtf	d0, w0
  4462e0:	ldr	x0, [x20, #1264]
  4462e4:	fdiv	d0, d10, d0
  4462e8:	bl	403590 <fprintf@plt>
  4462ec:	fdiv	d0, d9, d10
  4462f0:	ldr	x0, [x20, #1264]
  4462f4:	fmsub	d0, d8, d8, d0
  4462f8:	fcmpe	d0, #0.0
  4462fc:	b.pl	446400 <ferror@plt+0x42e30>  // b.nfrst
  446300:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446304:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446308:	add	x2, x2, #0xe38
  44630c:	add	x0, x0, #0xe44
  446310:	mov	w1, #0x165                 	// #357
  446314:	bl	403600 <ferror@plt+0x30>
  446318:	cbz	x2, 44617c <ferror@plt+0x42bac>
  44631c:	ldr	w2, [x2, #8]
  446320:	add	x23, x23, #0x1
  446324:	mov	w3, w2
  446328:	ucvtf	d0, w2
  44632c:	cmp	x24, w2, uxtw
  446330:	add	x19, x19, w2, uxtw
  446334:	csel	x24, x24, x3, cs  // cs = hs, nlast
  446338:	fmadd	d9, d0, d0, d9
  44633c:	b	44617c <ferror@plt+0x42bac>
  446340:	lsr	x3, x19, #20
  446344:	mov	w4, #0x4d                  	// #77
  446348:	b	44624c <ferror@plt+0x42c7c>
  44634c:	mov	x3, x19
  446350:	mov	w4, #0x20                  	// #32
  446354:	b	44624c <ferror@plt+0x42c7c>
  446358:	mov	x0, x22
  44635c:	bl	45c3f0 <_obstack_memory_used@@Base>
  446360:	mov	x1, #0x27ff                	// #10239
  446364:	sub	x5, x0, x19
  446368:	cmp	x19, x1
  44636c:	ldr	x0, [x20, #1264]
  446370:	b.ls	4463cc <ferror@plt+0x42dfc>  // b.plast
  446374:	mov	w1, #0x9fffff              	// #10485759
  446378:	cmp	x19, x1
  44637c:	b.hi	4463c0 <ferror@plt+0x42df0>  // b.pmore
  446380:	lsr	x3, x19, #10
  446384:	mov	w4, #0x6b                  	// #107
  446388:	mov	x1, #0x27ff                	// #10239
  44638c:	cmp	x5, x1
  446390:	b.ls	4463e4 <ferror@plt+0x42e14>  // b.plast
  446394:	mov	w1, #0x9fffff              	// #10485759
  446398:	cmp	x5, x1
  44639c:	b.hi	4463d8 <ferror@plt+0x42e08>  // b.pmore
  4463a0:	lsr	x5, x5, #10
  4463a4:	mov	w6, #0x6b                  	// #107
  4463a8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4463ac:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4463b0:	add	x2, x2, #0xddc
  4463b4:	add	x1, x1, #0xdeb
  4463b8:	bl	403590 <fprintf@plt>
  4463bc:	b	44625c <ferror@plt+0x42c8c>
  4463c0:	lsr	x3, x19, #20
  4463c4:	mov	w4, #0x4d                  	// #77
  4463c8:	b	446388 <ferror@plt+0x42db8>
  4463cc:	mov	x3, x19
  4463d0:	mov	w4, #0x20                  	// #32
  4463d4:	b	446388 <ferror@plt+0x42db8>
  4463d8:	lsr	x5, x5, #20
  4463dc:	mov	w6, #0x4d                  	// #77
  4463e0:	b	4463a8 <ferror@plt+0x42dd8>
  4463e4:	mov	w6, #0x20                  	// #32
  4463e8:	b	4463a8 <ferror@plt+0x42dd8>
  4463ec:	lsr	x21, x21, #20
  4463f0:	mov	w4, #0x4d                  	// #77
  4463f4:	b	446280 <ferror@plt+0x42cb0>
  4463f8:	mov	w4, #0x20                  	// #32
  4463fc:	b	446280 <ferror@plt+0x42cb0>
  446400:	fcmp	d0, #0.0
  446404:	b.eq	446478 <ferror@plt+0x42ea8>  // b.none
  446408:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44640c:	fmov	d1, d0
  446410:	ldr	d3, [x1, #3736]
  446414:	fnmsub	d2, d1, d1, d0
  446418:	fadd	d4, d1, d1
  44641c:	fdiv	d2, d2, d4
  446420:	fcmpe	d2, d3
  446424:	fsub	d1, d1, d2
  446428:	b.gt	446414 <ferror@plt+0x42e44>
  44642c:	fmov	d0, d8
  446430:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446434:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446438:	add	x2, x2, #0xe5a
  44643c:	add	x1, x1, #0xe66
  446440:	bl	403590 <fprintf@plt>
  446444:	ldr	x0, [x20, #1264]
  446448:	mov	x3, x24
  44644c:	mov	x1, x23
  446450:	ldr	d10, [sp, #96]
  446454:	ldp	x19, x20, [sp, #16]
  446458:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44645c:	ldp	x21, x22, [sp, #32]
  446460:	add	x2, x2, #0xe82
  446464:	ldp	x23, x24, [sp, #48]
  446468:	ldp	x25, x26, [sp, #64]
  44646c:	ldp	d8, d9, [sp, #80]
  446470:	ldp	x29, x30, [sp], #112
  446474:	b	403590 <fprintf@plt>
  446478:	movi	d1, #0x0
  44647c:	b	44642c <ferror@plt+0x42e5c>
  446480:	ldp	w3, w2, [x0, #36]
  446484:	add	w2, w2, #0x1
  446488:	str	w2, [x0, #40]
  44648c:	cmp	w2, w3
  446490:	b.hi	44649c <ferror@plt+0x42ecc>  // b.pmore
  446494:	ldr	x0, [x0, #8]
  446498:	str	x1, [x0, w2, uxtw #3]
  44649c:	ret
  4464a0:	ldrb	w6, [x3]
  4464a4:	adrp	x7, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4464a8:	mov	x4, x0
  4464ac:	add	x7, x7, #0x228
  4464b0:	mov	w8, #0x20                  	// #32
  4464b4:	cbz	x2, 44652c <ferror@plt+0x42f5c>
  4464b8:	ldrb	w9, [x1]
  4464bc:	ldrb	w5, [x1]
  4464c0:	ldrh	w9, [x7, x9, lsl #1]
  4464c4:	tst	w9, #0xc00
  4464c8:	b.eq	4464f8 <ferror@plt+0x42f28>  // b.none
  4464cc:	cbnz	w6, 446538 <ferror@plt+0x42f68>
  4464d0:	add	x1, x1, #0x1
  4464d4:	subs	x2, x2, #0x1
  4464d8:	b.eq	4464ec <ferror@plt+0x42f1c>  // b.none
  4464dc:	ldrb	w5, [x1]
  4464e0:	ldrh	w5, [x7, x5, lsl #1]
  4464e4:	tst	w5, #0xc00
  4464e8:	b.ne	4464d0 <ferror@plt+0x42f00>  // b.any
  4464ec:	strb	w8, [x4]
  4464f0:	add	x4, x4, #0x1
  4464f4:	b	4464b4 <ferror@plt+0x42ee4>
  4464f8:	cmp	w5, #0x27
  4464fc:	b.eq	446508 <ferror@plt+0x42f38>  // b.none
  446500:	cmp	w5, #0x22
  446504:	b.ne	446514 <ferror@plt+0x42f44>  // b.any
  446508:	cbz	w6, 446524 <ferror@plt+0x42f54>
  44650c:	cmp	w5, w6
  446510:	csel	w6, w6, wzr, ne  // ne = any
  446514:	add	x1, x1, #0x1
  446518:	sub	x2, x2, #0x1
  44651c:	strb	w5, [x4]
  446520:	b	4464f0 <ferror@plt+0x42f20>
  446524:	mov	w6, w5
  446528:	b	446514 <ferror@plt+0x42f44>
  44652c:	sub	x0, x4, x0
  446530:	strb	w6, [x3]
  446534:	ret
  446538:	cmp	w5, #0x27
  44653c:	b.eq	44650c <ferror@plt+0x42f3c>  // b.none
  446540:	cmp	w5, #0x22
  446544:	b.ne	446514 <ferror@plt+0x42f44>  // b.any
  446548:	b	44650c <ferror@plt+0x42f3c>
  44654c:	stp	x29, x30, [sp, #-64]!
  446550:	mov	x29, sp
  446554:	stp	x19, x20, [sp, #16]
  446558:	mov	x20, x1
  44655c:	mov	x19, x0
  446560:	stp	x21, x22, [sp, #32]
  446564:	ldr	x1, [x0, #1312]
  446568:	ldr	x21, [x0, #1328]
  44656c:	sub	x21, x21, x1
  446570:	ldrh	w1, [x20, #16]
  446574:	str	x23, [sp, #48]
  446578:	cbnz	w1, 4465b8 <ferror@plt+0x42fe8>
  44657c:	add	x1, x21, #0x1
  446580:	bl	43ce0c <ferror@plt+0x3983c>
  446584:	ldr	x1, [x19, #1312]
  446588:	mov	x22, x0
  44658c:	mov	x2, x21
  446590:	bl	402cd0 <memcpy@plt>
  446594:	mov	w0, #0xa                   	// #10
  446598:	strb	w0, [x22, x21]
  44659c:	str	w21, [x20, #12]
  4465a0:	str	x22, [x20, #24]
  4465a4:	ldp	x19, x20, [sp, #16]
  4465a8:	ldp	x21, x22, [sp, #32]
  4465ac:	ldr	x23, [sp, #48]
  4465b0:	ldp	x29, x30, [sp], #64
  4465b4:	ret
  4465b8:	ldr	x3, [x0, #56]
  4465bc:	mov	w22, w2
  4465c0:	add	x23, x21, #0xd
  4465c4:	ldr	w2, [x20, #12]
  4465c8:	and	x23, x23, #0xfffffffffffffff8
  4465cc:	ldr	x1, [x3, #24]
  4465d0:	add	x2, x2, x23
  4465d4:	ldr	x3, [x3, #16]
  4465d8:	sub	x1, x1, x3
  4465dc:	cmp	x2, x1
  4465e0:	b.ls	4465ec <ferror@plt+0x4301c>  // b.plast
  4465e4:	add	x1, x0, #0x38
  4465e8:	bl	43cd88 <ferror@plt+0x397b8>
  4465ec:	ldr	x0, [x19, #56]
  4465f0:	ldr	w2, [x20, #12]
  4465f4:	ldr	x1, [x0, #16]
  4465f8:	str	x1, [x20, #24]
  4465fc:	add	x0, x1, x2
  446600:	str	w21, [x1, x2]
  446604:	add	x0, x0, #0x6
  446608:	ldr	x1, [x19, #1312]
  44660c:	sturh	w22, [x0, #-2]
  446610:	mov	x2, x21
  446614:	bl	402cd0 <memcpy@plt>
  446618:	ldr	x0, [x19, #1312]
  44661c:	str	x0, [x19, #1328]
  446620:	ldr	w0, [x20, #12]
  446624:	add	w0, w0, w23
  446628:	str	w0, [x20, #12]
  44662c:	cbnz	w22, 4465a4 <ferror@plt+0x42fd4>
  446630:	ldr	x1, [x19, #56]
  446634:	ldr	x2, [x1, #16]
  446638:	add	x0, x2, w0, uxtw
  44663c:	str	x0, [x1, #16]
  446640:	b	4465a4 <ferror@plt+0x42fd4>
  446644:	stp	x29, x30, [sp, #-48]!
  446648:	mov	x29, sp
  44664c:	stp	x19, x20, [sp, #16]
  446650:	mov	x20, x0
  446654:	add	x19, x1, #0x3
  446658:	str	x21, [sp, #32]
  44665c:	ldr	x21, [x0, #1328]
  446660:	ldr	x0, [x0, #1320]
  446664:	sub	x0, x0, x21
  446668:	cmp	x0, x19
  44666c:	b.cs	4466a0 <ferror@plt+0x430d0>  // b.hs, b.nlast
  446670:	ldr	x0, [x20, #1312]
  446674:	sub	x21, x21, x0
  446678:	add	x19, x19, x21
  44667c:	add	x19, x19, x19, lsl #1
  446680:	lsr	x19, x19, #1
  446684:	mov	x1, x19
  446688:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  44668c:	add	x19, x0, x19
  446690:	str	x0, [x20, #1312]
  446694:	add	x0, x0, x21
  446698:	str	x19, [x20, #1320]
  44669c:	str	x0, [x20, #1328]
  4466a0:	ldp	x19, x20, [sp, #16]
  4466a4:	ldr	x21, [sp, #32]
  4466a8:	ldp	x29, x30, [sp], #48
  4466ac:	ret
  4466b0:	stp	x29, x30, [sp, #-64]!
  4466b4:	mov	x29, sp
  4466b8:	ldrb	w2, [x1, #18]
  4466bc:	stp	x19, x20, [sp, #16]
  4466c0:	mov	x20, x1
  4466c4:	and	w2, w2, #0x3
  4466c8:	stp	x21, x22, [sp, #32]
  4466cc:	cmp	w2, #0x3
  4466d0:	mov	x22, x0
  4466d4:	str	x23, [sp, #48]
  4466d8:	b.ne	446738 <ferror@plt+0x43168>  // b.any
  4466dc:	mov	w2, #0x0                   	// #0
  4466e0:	bl	441f78 <ferror@plt+0x3e9a8>
  4466e4:	mov	x23, x0
  4466e8:	bl	402d50 <strlen@plt>
  4466ec:	mov	x19, x0
  4466f0:	add	x1, x0, #0x1
  4466f4:	mov	x0, x22
  4466f8:	bl	43ce0c <ferror@plt+0x3983c>
  4466fc:	mov	x21, x0
  446700:	mov	x2, x19
  446704:	mov	x1, x23
  446708:	bl	402cd0 <memcpy@plt>
  44670c:	mov	w0, #0xa                   	// #10
  446710:	strb	w0, [x21, x19]
  446714:	mov	x3, x19
  446718:	mov	x2, x21
  44671c:	mov	x1, x20
  446720:	mov	x0, x22
  446724:	ldp	x19, x20, [sp, #16]
  446728:	ldp	x21, x22, [sp, #32]
  44672c:	ldr	x23, [sp, #48]
  446730:	ldp	x29, x30, [sp], #64
  446734:	b	442638 <ferror@plt+0x3f068>
  446738:	ldr	x0, [x1, #24]
  44673c:	ldrb	w1, [x0, #19]
  446740:	ldr	w19, [x0, #12]
  446744:	orr	w1, w1, #0x20
  446748:	strb	w1, [x0, #19]
  44674c:	ldr	x21, [x0, #24]
  446750:	b	446714 <ferror@plt+0x43144>
  446754:	stp	x29, x30, [sp, #-32]!
  446758:	mov	w3, #0x204                 	// #516
  44675c:	mov	x29, sp
  446760:	stp	x19, x20, [sp, #16]
  446764:	mov	x19, x0
  446768:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  44676c:	add	x0, x0, #0x228
  446770:	ldr	x20, [x19, #1328]
  446774:	ldrb	w2, [x1], #1
  446778:	strb	w2, [x20], #1
  44677c:	ldrb	w2, [x1]
  446780:	ldrh	w2, [x0, x2, lsl #1]
  446784:	tst	w3, w2
  446788:	b.ne	446774 <ferror@plt+0x431a4>  // b.any
  44678c:	ldr	x0, [x19, #136]
  446790:	mov	w3, #0x1                   	// #1
  446794:	str	x1, [x0, #16]
  446798:	ldr	x0, [x19, #1088]
  44679c:	ldr	x1, [x19, #1328]
  4467a0:	sub	x2, x20, x1
  4467a4:	bl	445fb0 <ferror@plt+0x429e0>
  4467a8:	str	x20, [x19, #1328]
  4467ac:	ldp	x19, x20, [sp, #16]
  4467b0:	ldp	x29, x30, [sp], #32
  4467b4:	ret
  4467b8:	stp	x29, x30, [sp, #-64]!
  4467bc:	mov	x29, sp
  4467c0:	stp	x19, x20, [sp, #16]
  4467c4:	mov	x20, x1
  4467c8:	mov	x19, x0
  4467cc:	ldr	x1, [x0, #40]
  4467d0:	stp	x23, x24, [sp, #48]
  4467d4:	mov	w23, w2
  4467d8:	stp	x21, x22, [sp, #32]
  4467dc:	ldr	w24, [x1, #60]
  4467e0:	ldr	x1, [x0, #136]
  4467e4:	ldr	x22, [x0]
  4467e8:	ldr	x1, [x1, #8]
  4467ec:	str	x20, [x22]
  4467f0:	cbz	x1, 446888 <ferror@plt+0x432b8>
  4467f4:	mov	x1, x20
  4467f8:	add	x0, x20, #0x2
  4467fc:	ldrb	w2, [x1, #1]!
  446800:	cmp	w2, #0x2f
  446804:	csel	x0, x0, x1, eq  // eq = none
  446808:	mov	x1, x0
  44680c:	ldrb	w3, [x1], #1
  446810:	cmp	w3, #0x2f
  446814:	b.ne	446858 <ferror@plt+0x43288>  // b.any
  446818:	ldurb	w0, [x1, #-2]
  44681c:	cmp	w0, #0x2a
  446820:	b.ne	446850 <ferror@plt+0x43280>  // b.any
  446824:	mov	w21, #0x0                   	// #0
  446828:	str	x1, [x22]
  44682c:	ldrb	w1, [x19, #16]
  446830:	ldr	x0, [x19, #1328]
  446834:	cbz	w1, 4468b8 <ferror@plt+0x432e8>
  446838:	cbz	w23, 446898 <ferror@plt+0x432c8>
  44683c:	ldrb	w1, [x19, #1124]
  446840:	cbz	w1, 4468c0 <ferror@plt+0x432f0>
  446844:	sub	x0, x0, #0x1
  446848:	str	x0, [x19, #1328]
  44684c:	b	4468a0 <ferror@plt+0x432d0>
  446850:	mov	x0, x1
  446854:	b	446808 <ferror@plt+0x43238>
  446858:	cmp	w3, #0xa
  44685c:	b.ne	446850 <ferror@plt+0x43280>  // b.any
  446860:	str	x0, [x22]
  446864:	mov	w2, w24
  446868:	mov	x0, x19
  44686c:	adrp	x4, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  446870:	mov	w3, #0x0                   	// #0
  446874:	add	x4, x4, #0x8b7
  446878:	mov	w1, #0x3                   	// #3
  44687c:	mov	w21, #0x1                   	// #1
  446880:	bl	435cf8 <ferror@plt+0x32728>
  446884:	b	44682c <ferror@plt+0x4325c>
  446888:	bl	43bde4 <ferror@plt+0x38814>
  44688c:	ands	w21, w0, #0xff
  446890:	b.eq	44682c <ferror@plt+0x4325c>  // b.none
  446894:	b	446864 <ferror@plt+0x43294>
  446898:	mov	w1, #0x20                  	// #32
  44689c:	sturb	w1, [x0, #-1]
  4468a0:	ldr	x0, [x22]
  4468a4:	ldp	x19, x20, [sp, #16]
  4468a8:	ldp	x21, x22, [sp, #32]
  4468ac:	ldp	x23, x24, [sp, #48]
  4468b0:	ldp	x29, x30, [sp], #64
  4468b4:	ret
  4468b8:	ldrb	w1, [x19, #1123]
  4468bc:	b	446840 <ferror@plt+0x43270>
  4468c0:	ldr	x23, [x22]
  4468c4:	mov	x1, x20
  4468c8:	sub	x23, x23, x20
  4468cc:	mov	x2, x23
  4468d0:	bl	402cd0 <memcpy@plt>
  4468d4:	ldr	x1, [x19, #1328]
  4468d8:	add	x0, x1, x23
  4468dc:	cbz	w21, 446848 <ferror@plt+0x43278>
  4468e0:	add	x0, x0, #0x1
  4468e4:	str	x0, [x19, #1328]
  4468e8:	mov	w0, #0x2a                  	// #42
  4468ec:	strb	w0, [x1, x23]
  4468f0:	ldr	x0, [x19, #1328]
  4468f4:	add	x1, x0, #0x1
  4468f8:	str	x1, [x19, #1328]
  4468fc:	mov	w1, #0x2f                  	// #47
  446900:	strb	w1, [x0]
  446904:	b	4468a0 <ferror@plt+0x432d0>
  446908:	stp	x29, x30, [sp, #-48]!
  44690c:	mov	x29, sp
  446910:	stp	x19, x20, [sp, #16]
  446914:	mov	x19, x0
  446918:	mov	w20, w2
  44691c:	ldr	x3, [x0, #1328]
  446920:	str	x21, [sp, #32]
  446924:	adrp	x21, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  446928:	add	x21, x21, #0x228
  44692c:	mov	x0, x1
  446930:	ldrb	w5, [x1], #1
  446934:	mov	x4, x3
  446938:	strb	w5, [x3], #1
  44693c:	mov	x2, x5
  446940:	ldrh	w5, [x21, x5, lsl #1]
  446944:	tbnz	w5, #11, 44692c <ferror@plt+0x4335c>
  446948:	cmp	w2, #0x2f
  44694c:	b.ne	44697c <ferror@plt+0x433ac>  // b.any
  446950:	ldrb	w2, [x0, #1]
  446954:	cmp	w2, #0x2a
  446958:	b.ne	44697c <ferror@plt+0x433ac>  // b.any
  44695c:	cbz	w20, 44697c <ferror@plt+0x433ac>
  446960:	str	x3, [x19, #1328]
  446964:	mov	x0, x19
  446968:	mov	w2, #0x0                   	// #0
  44696c:	bl	4467b8 <ferror@plt+0x431e8>
  446970:	mov	x1, x0
  446974:	ldr	x3, [x19, #1328]
  446978:	b	44692c <ferror@plt+0x4335c>
  44697c:	ldr	x21, [sp, #32]
  446980:	str	x4, [x19, #1328]
  446984:	ldp	x19, x20, [sp, #16]
  446988:	ldp	x29, x30, [sp], #48
  44698c:	ret
  446990:	ldrh	w2, [x1, #18]
  446994:	tbz	w2, #6, 4469e0 <ferror@plt+0x43410>
  446998:	ldrb	w2, [x1, #18]
  44699c:	and	w2, w2, #0x3
  4469a0:	cmp	w2, #0x3
  4469a4:	b.ne	4469e8 <ferror@plt+0x43418>  // b.any
  4469a8:	ldr	w2, [x1, #24]
  4469ac:	cmp	w2, #0xa
  4469b0:	cset	w2, eq  // eq = none
  4469b4:	cbz	w2, 4469f8 <ferror@plt+0x43428>
  4469b8:	ldr	x2, [x0, #136]
  4469bc:	mov	x3, #0x0                   	// #0
  4469c0:	ldr	x4, [x2, #40]
  4469c4:	add	x3, x3, #0x1
  4469c8:	cmp	x4, x1
  4469cc:	b.ne	4469d8 <ferror@plt+0x43408>  // b.any
  4469d0:	cmp	x3, #0x14
  4469d4:	b.hi	4469f8 <ferror@plt+0x43428>  // b.pmore
  4469d8:	ldr	x2, [x2, #8]
  4469dc:	cbnz	x2, 4469c0 <ferror@plt+0x433f0>
  4469e0:	mov	w0, #0x0                   	// #0
  4469e4:	ret
  4469e8:	ldr	x2, [x1, #24]
  4469ec:	ldrb	w2, [x2, #19]
  4469f0:	ubfx	x2, x2, #2, #1
  4469f4:	b	4469b4 <ferror@plt+0x433e4>
  4469f8:	stp	x29, x30, [sp, #-16]!
  4469fc:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446a00:	add	x2, x2, #0xea0
  446a04:	mov	x29, sp
  446a08:	ldr	x3, [x1]
  446a0c:	mov	w1, #0x3                   	// #3
  446a10:	bl	435b3c <ferror@plt+0x3256c>
  446a14:	mov	w0, #0x1                   	// #1
  446a18:	ldp	x29, x30, [sp], #16
  446a1c:	ret
  446a20:	ldr	x3, [x0]
  446a24:	ldr	x4, [x3]
  446a28:	str	x4, [x0, #1344]
  446a2c:	ldr	x4, [x3, #32]
  446a30:	str	x4, [x0, #1352]
  446a34:	ldr	x4, [x3, #16]
  446a38:	str	x3, [x0, #8]
  446a3c:	str	x4, [x0, #1360]
  446a40:	stp	x1, x1, [x3]
  446a44:	add	x1, x1, x2
  446a48:	str	x1, [x3, #32]
  446a4c:	strb	wzr, [x3, #104]
  446a50:	ret
  446a54:	ldr	x1, [x0, #8]
  446a58:	ldr	x2, [x0, #1344]
  446a5c:	str	x2, [x1]
  446a60:	ldr	x2, [x0, #1352]
  446a64:	str	x2, [x1, #32]
  446a68:	ldr	x2, [x0, #1360]
  446a6c:	str	x2, [x1, #8]
  446a70:	mov	w2, #0x1                   	// #1
  446a74:	strb	w2, [x1, #104]
  446a78:	str	xzr, [x0, #8]
  446a7c:	ret
  446a80:	stp	x29, x30, [sp, #-256]!
  446a84:	mov	x29, sp
  446a88:	stp	x19, x20, [sp, #16]
  446a8c:	stp	x21, x22, [sp, #32]
  446a90:	stp	x23, x24, [sp, #48]
  446a94:	stp	x25, x26, [sp, #64]
  446a98:	mov	x26, x0
  446a9c:	mov	x25, x1
  446aa0:	stp	x27, x28, [sp, #80]
  446aa4:	ldrb	w0, [x0, #19]
  446aa8:	ldr	x1, [x26]
  446aac:	cmp	w0, #0x0
  446ab0:	cset	w0, ne  // ne = any
  446ab4:	str	w0, [sp, #112]
  446ab8:	ldr	x0, [x26, #136]
  446abc:	ldr	x3, [x1]
  446ac0:	stp	xzr, xzr, [sp, #176]
  446ac4:	ldr	x1, [x1, #32]
  446ac8:	str	xzr, [sp, #192]
  446acc:	str	wzr, [sp, #200]
  446ad0:	stp	x3, x1, [x0, #16]
  446ad4:	ands	w0, w2, #0xff
  446ad8:	str	x3, [sp, #104]
  446adc:	str	w0, [sp, #116]
  446ae0:	stp	xzr, xzr, [sp, #160]
  446ae4:	b.ne	446afc <ferror@plt+0x4352c>  // b.any
  446ae8:	ldr	x0, [x26, #1312]
  446aec:	str	x0, [x26, #1328]
  446af0:	ldr	x0, [x26, #40]
  446af4:	ldr	w0, [x0, #60]
  446af8:	str	w0, [x26, #1336]
  446afc:	adrp	x0, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446b00:	mov	w27, #0x0                   	// #0
  446b04:	add	x0, x0, #0xef4
  446b08:	mov	w20, #0x0                   	// #0
  446b0c:	mov	w23, #0x0                   	// #0
  446b10:	str	x0, [sp, #120]
  446b14:	ldr	x22, [x26, #136]
  446b18:	mov	x0, x26
  446b1c:	ldp	x28, x1, [x22, #16]
  446b20:	sub	x1, x1, x28
  446b24:	bl	446644 <ferror@plt+0x43074>
  446b28:	ldr	x24, [x26, #1328]
  446b2c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  446b30:	add	x0, x0, #0x228
  446b34:	str	x0, [sp, #128]
  446b38:	ldr	x0, [x22, #8]
  446b3c:	cbnz	x0, 446b74 <ferror@plt+0x435a4>
  446b40:	ldr	w0, [sp, #116]
  446b44:	cbnz	w0, 446b74 <ferror@plt+0x435a4>
  446b48:	ldr	x0, [x26]
  446b4c:	ldr	w1, [x0, #56]
  446b50:	ldr	x4, [x0, #48]
  446b54:	lsl	x1, x1, #4
  446b58:	ldr	x1, [x4, x1]
  446b5c:	cmp	x1, x28
  446b60:	b.hi	446b74 <ferror@plt+0x435a4>  // b.pmore
  446b64:	str	x28, [x0]
  446b68:	mov	w1, #0x0                   	// #0
  446b6c:	mov	x0, x26
  446b70:	bl	43bbd0 <ferror@plt+0x38600>
  446b74:	mov	x19, x28
  446b78:	mov	x21, x24
  446b7c:	ldrb	w0, [x19], #1
  446b80:	strb	w0, [x21], #1
  446b84:	cmp	w0, #0x2f
  446b88:	b.hi	446c28 <ferror@plt+0x43658>  // b.pmore
  446b8c:	cmp	w0, #0x1f
  446b90:	b.hi	446bf0 <ferror@plt+0x43620>  // b.pmore
  446b94:	cmp	w0, #0xc
  446b98:	b.ls	446c10 <ferror@plt+0x43640>  // b.plast
  446b9c:	ldrb	w0, [x26, #16]
  446ba0:	cbnz	w0, 446ba8 <ferror@plt+0x435d8>
  446ba4:	strb	wzr, [x26, #440]
  446ba8:	cmp	w27, #0x8
  446bac:	b.hi	446bc8 <ferror@plt+0x435f8>  // b.pmore
  446bb0:	mov	x0, #0x16b                 	// #363
  446bb4:	lsr	x0, x0, x27
  446bb8:	mvn	x0, x0
  446bbc:	and	w1, w0, #0x1
  446bc0:	str	w1, [sp, #112]
  446bc4:	tbz	w0, #0, 446be8 <ferror@plt+0x43618>
  446bc8:	str	wzr, [sp, #112]
  446bcc:	b	446bd4 <ferror@plt+0x43604>
  446bd0:	mov	w27, #0x6                   	// #6
  446bd4:	mov	x24, x21
  446bd8:	mov	x28, x19
  446bdc:	b	446b38 <ferror@plt+0x43568>
  446be0:	mov	w27, #0x3                   	// #3
  446be4:	b	446bd4 <ferror@plt+0x43604>
  446be8:	mov	w27, #0x0                   	// #0
  446bec:	b	446bd4 <ferror@plt+0x43604>
  446bf0:	sub	w1, w0, #0x20
  446bf4:	cmp	w1, #0xf
  446bf8:	b.hi	446b9c <ferror@plt+0x435cc>  // b.pmore
  446bfc:	ldr	x2, [sp, #120]
  446c00:	ldrh	w1, [x2, w1, uxtw #1]
  446c04:	adr	x2, 446c10 <ferror@plt+0x43640>
  446c08:	add	x1, x2, w1, sxth #2
  446c0c:	br	x1
  446c10:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  446c14:	add	x1, x1, #0xf14
  446c18:	ldrb	w0, [x1, w0, uxtw]
  446c1c:	adr	x1, 446c28 <ferror@plt+0x43658>
  446c20:	add	x0, x1, w0, sxtb #2
  446c24:	br	x0
  446c28:	cmp	w0, #0x3e
  446c2c:	b.eq	446da4 <ferror@plt+0x437d4>  // b.none
  446c30:	b.hi	446c50 <ferror@plt+0x43680>  // b.pmore
  446c34:	cmp	w0, #0x3c
  446c38:	b.ne	446b9c <ferror@plt+0x435cc>  // b.any
  446c3c:	ldr	w0, [sp, #112]
  446c40:	cmp	w0, #0x0
  446c44:	mov	w0, #0x3e                  	// #62
  446c48:	csel	w20, w20, w0, eq  // eq = none
  446c4c:	b	446b9c <ferror@plt+0x435cc>
  446c50:	cmp	w0, #0x5c
  446c54:	b.eq	446dc4 <ferror@plt+0x437f4>  // b.none
  446c58:	b.hi	446ce0 <ferror@plt+0x43710>  // b.pmore
  446c5c:	sub	w0, w0, #0x41
  446c60:	and	w0, w0, #0xff
  446c64:	cmp	w0, #0x19
  446c68:	b.hi	446b9c <ferror@plt+0x435cc>  // b.pmore
  446c6c:	ldrb	w0, [x26, #18]
  446c70:	cbnz	w0, 446b9c <ferror@plt+0x435cc>
  446c74:	cmp	w20, #0x0
  446c78:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  446c7c:	b.eq	446b9c <ferror@plt+0x435cc>  // b.none
  446c80:	str	x24, [x26, #1328]
  446c84:	mov	x1, x28
  446c88:	mov	x0, x26
  446c8c:	bl	446754 <ferror@plt+0x43184>
  446c90:	mov	x28, x0
  446c94:	ldrb	w0, [x0, #18]
  446c98:	ldr	x19, [x22, #16]
  446c9c:	ldr	x21, [x26, #1328]
  446ca0:	tbz	w0, #1, 446e2c <ferror@plt+0x4385c>
  446ca4:	cmp	w27, #0x1
  446ca8:	b.hi	446e2c <ferror@plt+0x4385c>  // b.pmore
  446cac:	ldrb	w1, [x26, #24]
  446cb0:	cbz	w1, 446e6c <ferror@plt+0x4389c>
  446cb4:	cbz	x25, 446e38 <ferror@plt+0x43868>
  446cb8:	and	w0, w0, #0x3
  446cbc:	cmp	w0, #0x1
  446cc0:	b.ne	446e30 <ferror@plt+0x43860>  // b.any
  446cc4:	ldrh	w2, [x28, #24]
  446cc8:	mov	x1, x25
  446ccc:	str	x24, [x26, #1328]
  446cd0:	mov	x0, x26
  446cd4:	bl	44654c <ferror@plt+0x42f7c>
  446cd8:	ldr	x21, [x26, #1312]
  446cdc:	b	446b9c <ferror@plt+0x435cc>
  446ce0:	cmp	w0, #0x5f
  446ce4:	b.eq	446c6c <ferror@plt+0x4369c>  // b.none
  446ce8:	sub	w0, w0, #0x61
  446cec:	b	446c60 <ferror@plt+0x43690>
  446cf0:	ldr	x0, [x22, #8]
  446cf4:	str	x24, [x26, #1328]
  446cf8:	cbz	x0, 446d08 <ferror@plt+0x43738>
  446cfc:	mov	x0, x26
  446d00:	bl	442690 <ferror@plt+0x3f0c0>
  446d04:	b	446b14 <ferror@plt+0x43544>
  446d08:	ldr	x0, [x26]
  446d0c:	ldr	w1, [sp, #116]
  446d10:	str	x19, [x0]
  446d14:	cbnz	w1, 447564 <ferror@plt+0x43f94>
  446d18:	mov	w1, #0x1                   	// #1
  446d1c:	strb	w1, [x0, #104]
  446d20:	ldr	x0, [x26, #40]
  446d24:	mov	w1, #0x18                  	// #24
  446d28:	ldr	w2, [x0, #12]
  446d2c:	ldr	w4, [x0, #60]
  446d30:	sub	w2, w2, #0x1
  446d34:	smull	x2, w2, w1
  446d38:	ldr	x1, [x0]
  446d3c:	add	x5, x1, x2
  446d40:	ldr	w1, [x1, x2]
  446d44:	mov	w2, #0x0                   	// #0
  446d48:	sub	w4, w4, w1
  446d4c:	ldrb	w1, [x5, #6]
  446d50:	lsr	w4, w4, w1
  446d54:	ldr	w1, [x5, #16]
  446d58:	add	w1, w1, #0x1
  446d5c:	add	w1, w4, w1
  446d60:	bl	43fa38 <ferror@plt+0x3c468>
  446d64:	sub	w0, w27, #0x1
  446d68:	cmp	w0, #0x1
  446d6c:	b.hi	447564 <ferror@plt+0x43f94>  // b.pmore
  446d70:	ldrb	w0, [x26, #16]
  446d74:	cbnz	w0, 447564 <ferror@plt+0x43f94>
  446d78:	mov	x0, x26
  446d7c:	bl	43c24c <ferror@plt+0x38c7c>
  446d80:	tst	w0, #0xff
  446d84:	b.eq	447564 <ferror@plt+0x43f94>  // b.none
  446d88:	cmp	w27, #0x2
  446d8c:	b.ne	446d98 <ferror@plt+0x437c8>  // b.any
  446d90:	mov	w0, #0x20                  	// #32
  446d94:	strb	w0, [x24]
  446d98:	ldr	x0, [x26]
  446d9c:	ldr	x19, [x0]
  446da0:	b	446bd4 <ferror@plt+0x43604>
  446da4:	cmp	w20, #0x3e
  446da8:	csel	w20, w20, wzr, ne  // ne = any
  446dac:	b	446b9c <ferror@plt+0x435cc>
  446db0:	cmp	w20, w0
  446db4:	b.eq	446fa8 <ferror@plt+0x439d8>  // b.none
  446db8:	cmp	w20, #0x0
  446dbc:	csel	w20, w20, w0, ne  // ne = any
  446dc0:	b	446b9c <ferror@plt+0x435cc>
  446dc4:	ldrb	w1, [x28, #1]
  446dc8:	sub	w0, w1, #0x22
  446dcc:	and	w0, w0, #0xff
  446dd0:	cmp	w0, #0x3a
  446dd4:	b.hi	446b9c <ferror@plt+0x435cc>  // b.pmore
  446dd8:	mov	x2, #0x21                  	// #33
  446ddc:	movk	x2, #0x400, lsl #48
  446de0:	lsr	x0, x2, x0
  446de4:	tbz	w0, #0, 446b9c <ferror@plt+0x435cc>
  446de8:	add	x19, x28, #0x2
  446dec:	add	x21, x24, #0x2
  446df0:	strb	w1, [x24, #1]
  446df4:	b	446b9c <ferror@plt+0x435cc>
  446df8:	cbnz	w20, 446b9c <ferror@plt+0x435cc>
  446dfc:	ldrb	w0, [x28, #1]
  446e00:	cmp	w0, #0x2a
  446e04:	b.ne	446b9c <ferror@plt+0x435cc>  // b.any
  446e08:	cmp	x25, #0x0
  446e0c:	str	x21, [x26, #1328]
  446e10:	mov	x1, x19
  446e14:	cset	w2, ne  // ne = any
  446e18:	mov	x0, x26
  446e1c:	bl	4467b8 <ferror@plt+0x431e8>
  446e20:	mov	x19, x0
  446e24:	ldr	x21, [x26, #1328]
  446e28:	b	446bd4 <ferror@plt+0x43604>
  446e2c:	cbnz	x25, 446cb8 <ferror@plt+0x436e8>
  446e30:	cmp	w27, #0x5
  446e34:	b.eq	446bd0 <ferror@plt+0x43600>  // b.none
  446e38:	ldrb	w0, [x26, #20]
  446e3c:	cbz	w0, 446b9c <ferror@plt+0x435cc>
  446e40:	ldr	x0, [x26, #1248]
  446e44:	cmp	x0, x28
  446e48:	b.eq	446be0 <ferror@plt+0x43610>  // b.none
  446e4c:	ldr	x0, [x26, #1288]
  446e50:	cmp	x0, x28
  446e54:	b.eq	446e64 <ferror@plt+0x43894>  // b.none
  446e58:	ldr	x0, [x26, #1296]
  446e5c:	cmp	x0, x28
  446e60:	b.ne	446b9c <ferror@plt+0x435cc>  // b.any
  446e64:	mov	w27, #0x8                   	// #8
  446e68:	b	446bd4 <ferror@plt+0x43604>
  446e6c:	strb	wzr, [x26, #440]
  446e70:	and	w0, w0, #0x3
  446e74:	cmp	w0, #0x3
  446e78:	b.ne	446e90 <ferror@plt+0x438c0>  // b.any
  446e7c:	ldr	w0, [x28, #24]
  446e80:	cmp	w0, #0xa
  446e84:	b.ne	446ef0 <ferror@plt+0x43920>  // b.any
  446e88:	mov	w27, #0x1                   	// #1
  446e8c:	b	446ea0 <ferror@plt+0x438d0>
  446e90:	ldr	x0, [x28, #24]
  446e94:	ldrb	w1, [x0, #19]
  446e98:	tbz	w1, #2, 446ef0 <ferror@plt+0x43920>
  446e9c:	ldrh	w27, [x0, #16]
  446ea0:	ldr	x1, [sp, #160]
  446ea4:	cbz	x1, 446eb0 <ferror@plt+0x438e0>
  446ea8:	mov	x0, x26
  446eac:	bl	43cbbc <ferror@plt+0x395ec>
  446eb0:	add	w1, w27, #0x1
  446eb4:	mov	x0, x26
  446eb8:	ubfiz	x1, x1, #3, #17
  446ebc:	bl	43cbdc <ferror@plt+0x3960c>
  446ec0:	str	x0, [sp, #160]
  446ec4:	ldr	x0, [x0, #16]
  446ec8:	stp	x0, x28, [sp, #168]
  446ecc:	ldr	x0, [x26, #1312]
  446ed0:	stp	w27, wzr, [sp, #196]
  446ed4:	mov	w27, #0x1                   	// #1
  446ed8:	sub	x24, x24, x0
  446edc:	str	x24, [sp, #184]
  446ee0:	ldr	x0, [x26, #40]
  446ee4:	ldr	w0, [x0, #60]
  446ee8:	str	w0, [sp, #192]
  446eec:	b	446bd4 <ferror@plt+0x43604>
  446ef0:	mov	x1, x28
  446ef4:	mov	x0, x26
  446ef8:	bl	446990 <ferror@plt+0x433c0>
  446efc:	tst	w0, #0xff
  446f00:	b.ne	446b9c <ferror@plt+0x435cc>  // b.any
  446f04:	str	x24, [x26, #1328]
  446f08:	mov	x1, x28
  446f0c:	mov	x0, x26
  446f10:	mov	w27, #0x0                   	// #0
  446f14:	bl	4466b0 <ferror@plt+0x430e0>
  446f18:	b	446b14 <ferror@plt+0x43544>
  446f1c:	cbnz	w20, 446b9c <ferror@plt+0x435cc>
  446f20:	add	w23, w23, #0x1
  446f24:	cmp	w27, #0x1
  446f28:	b.ne	446f60 <ferror@plt+0x43990>  // b.any
  446f2c:	ldr	x1, [sp, #176]
  446f30:	mov	x0, x26
  446f34:	bl	446990 <ferror@plt+0x433c0>
  446f38:	tst	w0, #0xff
  446f3c:	b.ne	447540 <ferror@plt+0x43f70>  // b.any
  446f40:	ldr	x1, [sp, #168]
  446f44:	mov	w23, w27
  446f48:	ldr	x0, [sp, #184]
  446f4c:	mov	w27, #0x2                   	// #2
  446f50:	ldr	x21, [x26, #1312]
  446f54:	str	x0, [x1]
  446f58:	add	x21, x21, x0
  446f5c:	b	446b9c <ferror@plt+0x435cc>
  446f60:	cmp	w27, #0x6
  446f64:	b.eq	447548 <ferror@plt+0x43f78>  // b.none
  446f68:	cmp	w27, #0x3
  446f6c:	b.eq	447550 <ferror@plt+0x43f80>  // b.none
  446f70:	cmp	w27, #0x8
  446f74:	mov	w0, #0x9                   	// #9
  446f78:	csel	w27, w27, w0, ne  // ne = any
  446f7c:	b	446b9c <ferror@plt+0x435cc>
  446f80:	cmp	w20, #0x0
  446f84:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  446f88:	b.ne	446b9c <ferror@plt+0x435cc>  // b.any
  446f8c:	cmp	w23, #0x1
  446f90:	b.ne	446fa4 <ferror@plt+0x439d4>  // b.any
  446f94:	ldr	x1, [x26, #1312]
  446f98:	add	x0, sp, #0xa0
  446f9c:	sub	x1, x21, x1
  446fa0:	bl	446480 <ferror@plt+0x42eb0>
  446fa4:	mov	w27, #0x2                   	// #2
  446fa8:	mov	w20, #0x0                   	// #0
  446fac:	b	446b9c <ferror@plt+0x435cc>
  446fb0:	cbnz	w20, 446b9c <ferror@plt+0x435cc>
  446fb4:	subs	w23, w23, #0x1
  446fb8:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  446fbc:	b.ne	4473b4 <ferror@plt+0x43de4>  // b.any
  446fc0:	ldr	x2, [sp, #176]
  446fc4:	ldr	x1, [x26, #1312]
  446fc8:	ldrb	w0, [x2, #18]
  446fcc:	sub	x1, x21, x1
  446fd0:	and	w0, w0, #0x3
  446fd4:	cmp	w0, #0x3
  446fd8:	b.ne	4471a4 <ferror@plt+0x43bd4>  // b.any
  446fdc:	add	x0, sp, #0xa0
  446fe0:	bl	446480 <ferror@plt+0x42eb0>
  446fe4:	ldp	w0, w3, [sp, #196]
  446fe8:	stp	xzr, xzr, [sp, #224]
  446fec:	add	x1, sp, #0xd0
  446ff0:	ldr	x2, [sp, #176]
  446ff4:	stp	xzr, xzr, [sp, #208]
  446ff8:	strh	w0, [sp, #224]
  446ffc:	mov	x0, x26
  447000:	stp	xzr, xzr, [sp, #240]
  447004:	bl	442338 <ferror@plt+0x3ed68>
  447008:	tst	w0, #0xff
  44700c:	b.eq	447558 <ferror@plt+0x43f88>  // b.none
  447010:	ldr	x0, [sp, #168]
  447014:	mov	w24, #0xa                   	// #10
  447018:	ldr	x1, [sp, #184]
  44701c:	ldp	x2, x21, [x0]
  447020:	ldr	x0, [x26, #1312]
  447024:	add	x0, x0, x1
  447028:	str	x0, [x26, #1328]
  44702c:	str	x19, [x22, #16]
  447030:	sub	x21, x21, x2
  447034:	add	x1, x21, #0x2
  447038:	mov	x0, x26
  44703c:	bl	43ce0c <ferror@plt+0x3983c>
  447040:	mov	x23, x0
  447044:	mov	w1, #0x28                  	// #40
  447048:	strb	w1, [x0], #1
  44704c:	mov	x2, x21
  447050:	add	x21, x21, #0x1
  447054:	ldr	x1, [sp, #168]
  447058:	ldr	x3, [x26, #1312]
  44705c:	ldr	x1, [x1]
  447060:	add	x1, x3, x1
  447064:	bl	402cd0 <memcpy@plt>
  447068:	strb	w24, [x23, x21]
  44706c:	add	x0, x23, x21
  447070:	mov	w2, #0x1                   	// #1
  447074:	ldp	x1, x27, [x26]
  447078:	ldr	x21, [x22, #24]
  44707c:	ldrb	w28, [x1, #104]
  447080:	strb	wzr, [x1, #104]
  447084:	ldp	x8, x5, [x1]
  447088:	stp	x23, x23, [x1]
  44708c:	ldr	x7, [x1, #32]
  447090:	str	x0, [x1, #32]
  447094:	stp	x7, x8, [sp, #144]
  447098:	ldrb	w0, [x26, #16]
  44709c:	strb	w2, [x26, #16]
  4470a0:	cmp	w0, #0x0
  4470a4:	mov	x0, x26
  4470a8:	ldr	x9, [x22, #8]
  4470ac:	str	x1, [x26, #8]
  4470b0:	str	xzr, [x22, #8]
  4470b4:	cset	w23, ne  // ne = any
  4470b8:	mov	x1, #0x0                   	// #0
  4470bc:	stp	x9, x5, [sp, #128]
  4470c0:	bl	446a80 <ferror@plt+0x434b0>
  4470c4:	strb	w23, [x26, #16]
  4470c8:	mov	x0, x26
  4470cc:	mov	x1, #0x1                   	// #1
  4470d0:	bl	446644 <ferror@plt+0x43074>
  4470d4:	ldr	x0, [x26, #1328]
  4470d8:	strb	w24, [x0]
  4470dc:	ldr	x1, [x26]
  4470e0:	ldr	x2, [sp, #184]
  4470e4:	ldr	x0, [x26, #1312]
  4470e8:	add	x0, x0, x2
  4470ec:	ldr	x2, [x26, #1328]
  4470f0:	stp	x0, x0, [x1]
  4470f4:	str	x2, [x1, #32]
  4470f8:	ldr	x1, [sp, #176]
  4470fc:	stp	x0, x2, [x22, #16]
  447100:	mov	w2, #0x0                   	// #0
  447104:	ldrb	w0, [x26, #24]
  447108:	add	w0, w0, #0x1
  44710c:	strb	w0, [x26, #24]
  447110:	mov	x0, x26
  447114:	bl	441f78 <ferror@plt+0x3e9a8>
  447118:	mov	x23, x0
  44711c:	ldrb	w1, [x26, #24]
  447120:	ldp	x9, x5, [sp, #128]
  447124:	sub	w1, w1, #0x1
  447128:	strb	w1, [x26, #24]
  44712c:	ldr	x1, [x26]
  447130:	ldp	x7, x8, [sp, #144]
  447134:	ldr	x2, [sp, #184]
  447138:	str	x9, [x22, #8]
  44713c:	stp	x8, x5, [x1]
  447140:	str	x7, [x1, #32]
  447144:	strb	w28, [x1, #104]
  447148:	ldr	x1, [x26, #1312]
  44714c:	str	x27, [x26, #8]
  447150:	add	x1, x1, x2
  447154:	str	x1, [x26, #1328]
  447158:	stp	x19, x21, [x22, #16]
  44715c:	bl	402d50 <strlen@plt>
  447160:	mov	x19, x0
  447164:	add	x1, x0, #0x1
  447168:	mov	x0, x26
  44716c:	bl	43ce0c <ferror@plt+0x3983c>
  447170:	mov	x21, x0
  447174:	mov	x2, x19
  447178:	mov	x1, x23
  44717c:	bl	402cd0 <memcpy@plt>
  447180:	strb	w24, [x21, x19]
  447184:	mov	x3, x19
  447188:	mov	x2, x21
  44718c:	mov	x0, x26
  447190:	ldr	x1, [sp, #176]
  447194:	bl	442638 <ferror@plt+0x3f068>
  447198:	mov	w27, #0x0                   	// #0
  44719c:	mov	w23, #0x0                   	// #0
  4471a0:	b	446b14 <ferror@plt+0x43544>
  4471a4:	ldr	x4, [x2, #24]
  4471a8:	ldrb	w0, [x4, #19]
  4471ac:	orr	w0, w0, #0x20
  4471b0:	strb	w0, [x4, #19]
  4471b4:	add	x0, sp, #0xa0
  4471b8:	bl	446480 <ferror@plt+0x42eb0>
  4471bc:	ldr	w0, [sp, #200]
  4471c0:	cmp	w0, #0x1
  4471c4:	b.ne	4471ec <ferror@plt+0x43c1c>  // b.any
  4471c8:	ldrh	w0, [x4, #16]
  4471cc:	cbnz	w0, 4471ec <ferror@plt+0x43c1c>
  4471d0:	ldr	x0, [sp, #184]
  4471d4:	add	x1, x0, #0x1
  4471d8:	ldr	x0, [x26, #1312]
  4471dc:	add	x0, x0, x1
  4471e0:	cmp	x21, x0
  4471e4:	b.ne	4471ec <ferror@plt+0x43c1c>  // b.any
  4471e8:	str	wzr, [sp, #200]
  4471ec:	ldr	w3, [sp, #200]
  4471f0:	mov	x1, x4
  4471f4:	ldr	x2, [sp, #176]
  4471f8:	mov	x0, x26
  4471fc:	bl	442338 <ferror@plt+0x3ed68>
  447200:	tst	w0, #0xff
  447204:	b.eq	447558 <ferror@plt+0x43f88>  // b.none
  447208:	ldr	x1, [sp, #184]
  44720c:	ldr	x0, [x26, #1312]
  447210:	add	x0, x0, x1
  447214:	ldr	x1, [sp, #176]
  447218:	ldr	x21, [x1, #24]
  44721c:	str	x0, [x26, #1328]
  447220:	ldrh	w0, [x21, #16]
  447224:	str	x19, [x22, #16]
  447228:	cbnz	w0, 447238 <ferror@plt+0x43c68>
  44722c:	mov	x0, x26
  447230:	bl	4466b0 <ferror@plt+0x430e0>
  447234:	b	447198 <ferror@plt+0x43bc8>
  447238:	ldr	x4, [x21, #24]
  44723c:	mov	x1, #0x0                   	// #0
  447240:	ldr	x5, [sp, #168]
  447244:	ldrh	w0, [x4, #4]
  447248:	ldr	w2, [x4]
  44724c:	add	x1, x2, x1
  447250:	cbz	w0, 447280 <ferror@plt+0x43cb0>
  447254:	ubfiz	x0, x0, #3, #16
  447258:	add	x2, x2, #0xd
  44725c:	and	x2, x2, #0xfffffffffffffff8
  447260:	add	x4, x4, x2
  447264:	ldr	x3, [x5, x0]
  447268:	add	x0, x5, x0
  44726c:	sub	x3, x3, #0x1
  447270:	ldur	x0, [x0, #-8]
  447274:	sub	x0, x3, x0
  447278:	add	x1, x1, x0, lsl #1
  44727c:	b	447244 <ferror@plt+0x43c74>
  447280:	add	x1, x1, #0x1
  447284:	mov	x0, x26
  447288:	bl	43cbdc <ferror@plt+0x3960c>
  44728c:	mov	x19, x0
  447290:	ldr	x1, [x0, #16]
  447294:	mov	w7, #0x0                   	// #0
  447298:	ldr	x0, [x21, #24]
  44729c:	mov	x3, #0x0                   	// #0
  4472a0:	mov	w10, #0x5c                  	// #92
  4472a4:	mov	x5, x0
  4472a8:	mov	x2, #0x0                   	// #0
  4472ac:	ldr	w4, [x5], #6
  4472b0:	add	x3, x3, x4
  4472b4:	cmp	x4, x2
  4472b8:	b.eq	4472d8 <ferror@plt+0x43d08>  // b.none
  4472bc:	ldrb	w8, [x5, x2]
  4472c0:	cmp	w8, #0x22
  4472c4:	b.ne	4472cc <ferror@plt+0x43cfc>  // b.any
  4472c8:	eor	w7, w7, #0x1
  4472cc:	strb	w8, [x1, x2]
  4472d0:	add	x2, x2, #0x1
  4472d4:	b	4472b4 <ferror@plt+0x43ce4>
  4472d8:	ldrh	w2, [x0, #4]
  4472dc:	add	x1, x1, x4
  4472e0:	cbz	w2, 447390 <ferror@plt+0x43dc0>
  4472e4:	ldr	x8, [sp, #168]
  4472e8:	ubfiz	x2, x2, #3, #16
  4472ec:	ldr	x5, [x26, #1312]
  4472f0:	add	x4, x8, x2
  4472f4:	ldr	x2, [x8, x2]
  4472f8:	mov	w8, #0x0                   	// #0
  4472fc:	ldur	x4, [x4, #-8]
  447300:	sub	x2, x2, #0x1
  447304:	add	x4, x5, x4
  447308:	add	x5, x5, x2
  44730c:	mov	x2, x4
  447310:	cmp	x2, x5
  447314:	b.eq	44737c <ferror@plt+0x43dac>  // b.none
  447318:	cbz	w7, 447354 <ferror@plt+0x43d84>
  44731c:	ldrb	w9, [x2]
  447320:	add	x11, x1, #0x1
  447324:	add	x12, x3, #0x1
  447328:	cmp	w9, #0x22
  44732c:	b.ne	447364 <ferror@plt+0x43d94>  // b.any
  447330:	cmp	x4, x2
  447334:	b.cs	447348 <ferror@plt+0x43d78>  // b.hs, b.nlast
  447338:	ldurb	w3, [x2, #-1]
  44733c:	cmp	w3, #0x5c
  447340:	b.eq	447348 <ferror@plt+0x43d78>  // b.none
  447344:	eor	w8, w8, #0x1
  447348:	mov	x3, x12
  44734c:	strb	w10, [x1]
  447350:	mov	x1, x11
  447354:	ldrb	w9, [x2], #1
  447358:	add	x3, x3, #0x1
  44735c:	strb	w9, [x1], #1
  447360:	b	447310 <ferror@plt+0x43d40>
  447364:	cbz	w8, 447354 <ferror@plt+0x43d84>
  447368:	cmp	w9, #0x5c
  44736c:	b.ne	447354 <ferror@plt+0x43d84>  // b.any
  447370:	mov	x3, x12
  447374:	strb	w9, [x1]
  447378:	b	447350 <ferror@plt+0x43d80>
  44737c:	ldr	w2, [x0]
  447380:	add	x2, x2, #0xd
  447384:	and	x2, x2, #0xfffffffffffffff8
  447388:	add	x0, x0, x2
  44738c:	b	4472a4 <ferror@plt+0x43cd4>
  447390:	mov	w0, #0xa                   	// #10
  447394:	strb	w0, [x1]
  447398:	mov	x0, x26
  44739c:	ldr	x2, [x19, #16]
  4473a0:	ldr	x1, [sp, #176]
  4473a4:	bl	442638 <ferror@plt+0x3f068>
  4473a8:	ldr	x0, [x26, #136]
  4473ac:	str	x19, [x0, #32]
  4473b0:	b	447198 <ferror@plt+0x43bc8>
  4473b4:	cmp	w27, #0x9
  4473b8:	b.hi	446b9c <ferror@plt+0x435cc>  // b.pmore
  4473bc:	mov	x0, #0x290                 	// #656
  4473c0:	lsr	x0, x0, x27
  4473c4:	tst	x0, #0x1
  4473c8:	csel	w27, w27, wzr, eq  // eq = none
  4473cc:	b	446b9c <ferror@plt+0x435cc>
  4473d0:	ldr	x0, [sp, #104]
  4473d4:	cmp	x0, x28
  4473d8:	b.ne	447510 <ferror@plt+0x43f40>  // b.any
  4473dc:	ldr	x0, [x26, #136]
  4473e0:	ldr	x0, [x0, #8]
  4473e4:	cbnz	x0, 447510 <ferror@plt+0x43f40>
  4473e8:	ldrb	w0, [x26, #16]
  4473ec:	cbnz	w0, 447510 <ferror@plt+0x43f40>
  4473f0:	str	x21, [x26, #1328]
  4473f4:	mov	x1, x19
  4473f8:	mov	x0, x26
  4473fc:	mov	w2, #0x1                   	// #1
  447400:	bl	446908 <ferror@plt+0x43338>
  447404:	mov	x19, x0
  447408:	ldrb	w0, [x0]
  44740c:	ldr	x21, [x26, #1328]
  447410:	cmp	w0, #0xa
  447414:	b.ne	4474c8 <ferror@plt+0x43ef8>  // b.any
  447418:	ldr	x0, [x26]
  44741c:	mov	w1, #0x1                   	// #1
  447420:	strb	w1, [x0, #104]
  447424:	mov	w1, #0x18                  	// #24
  447428:	ldr	x0, [x26, #40]
  44742c:	ldr	w2, [x0, #12]
  447430:	ldr	w4, [x0, #60]
  447434:	sub	w2, w2, #0x1
  447438:	smull	x2, w2, w1
  44743c:	ldr	x1, [x0]
  447440:	add	x5, x1, x2
  447444:	ldr	w1, [x1, x2]
  447448:	mov	w2, #0x0                   	// #0
  44744c:	sub	w4, w4, w1
  447450:	ldrb	w1, [x5, #6]
  447454:	lsr	w4, w4, w1
  447458:	ldr	w1, [x5, #16]
  44745c:	add	w1, w1, #0x1
  447460:	add	w1, w4, w1
  447464:	bl	43fa38 <ferror@plt+0x3c468>
  447468:	mov	w19, #0x0                   	// #0
  44746c:	ldr	x1, [sp, #160]
  447470:	cbz	x1, 44747c <ferror@plt+0x43eac>
  447474:	mov	x0, x26
  447478:	bl	43cbbc <ferror@plt+0x395ec>
  44747c:	cmp	w27, #0x2
  447480:	b.ne	4474a8 <ferror@plt+0x43ed8>  // b.any
  447484:	ldr	x0, [sp, #176]
  447488:	adrp	x4, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44748c:	ldr	w2, [sp, #192]
  447490:	add	x4, x4, #0xa89
  447494:	mov	w3, #0x0                   	// #0
  447498:	mov	w1, #0x3                   	// #3
  44749c:	ldr	x5, [x0]
  4474a0:	mov	x0, x26
  4474a4:	bl	435cf8 <ferror@plt+0x32728>
  4474a8:	mov	w0, w19
  4474ac:	ldp	x19, x20, [sp, #16]
  4474b0:	ldp	x21, x22, [sp, #32]
  4474b4:	ldp	x23, x24, [sp, #48]
  4474b8:	ldp	x25, x26, [sp, #64]
  4474bc:	ldp	x27, x28, [sp, #80]
  4474c0:	ldp	x29, x30, [sp], #256
  4474c4:	ret
  4474c8:	ldr	x1, [sp, #128]
  4474cc:	ldrh	w1, [x1, w0, sxtw #1]
  4474d0:	tbz	w1, #2, 4474f8 <ferror@plt+0x43f28>
  4474d4:	ldr	w2, [x26, #1116]
  4474d8:	cmp	w2, #0x15
  4474dc:	b.eq	4474f8 <ferror@plt+0x43f28>  // b.none
  4474e0:	ldr	x0, [x26]
  4474e4:	mov	w1, #0x0                   	// #0
  4474e8:	str	x19, [x0]
  4474ec:	mov	x0, x26
  4474f0:	bl	434264 <ferror@plt+0x30c94>
  4474f4:	b	447468 <ferror@plt+0x43e98>
  4474f8:	tbnz	w1, #9, 447528 <ferror@plt+0x43f58>
  4474fc:	cmp	w0, #0x24
  447500:	b.eq	447520 <ferror@plt+0x43f50>  // b.none
  447504:	ldr	w0, [x26, #1116]
  447508:	cmp	w0, #0x15
  44750c:	b.ne	4474e0 <ferror@plt+0x43f10>  // b.any
  447510:	ldrb	w0, [x26, #20]
  447514:	cbz	w0, 446b9c <ferror@plt+0x435cc>
  447518:	mov	w27, #0x5                   	// #5
  44751c:	b	446bd4 <ferror@plt+0x43604>
  447520:	ldrb	w0, [x26, #1146]
  447524:	cbz	w0, 447504 <ferror@plt+0x43f34>
  447528:	mov	x1, x19
  44752c:	mov	x0, x26
  447530:	bl	446754 <ferror@plt+0x43184>
  447534:	ldrb	w0, [x0, #16]
  447538:	tbz	w0, #0, 447504 <ferror@plt+0x43f34>
  44753c:	b	4474e0 <ferror@plt+0x43f10>
  447540:	mov	w27, #0x0                   	// #0
  447544:	b	446b9c <ferror@plt+0x435cc>
  447548:	mov	w27, #0x7                   	// #7
  44754c:	b	446b9c <ferror@plt+0x435cc>
  447550:	mov	w27, #0x4                   	// #4
  447554:	b	446b9c <ferror@plt+0x435cc>
  447558:	mov	w27, #0x0                   	// #0
  44755c:	mov	w23, #0x0                   	// #0
  447560:	b	446b9c <ferror@plt+0x435cc>
  447564:	mov	w19, #0x1                   	// #1
  447568:	b	44746c <ferror@plt+0x43e9c>
  44756c:	stp	x29, x30, [sp, #-32]!
  447570:	mov	x29, sp
  447574:	str	x19, [sp, #16]
  447578:	mov	x19, x0
  44757c:	ldr	x0, [x19]
  447580:	ldrb	w0, [x0, #104]
  447584:	cbnz	w0, 4475b8 <ferror@plt+0x43fe8>
  447588:	mov	x0, x19
  44758c:	mov	w2, #0x0                   	// #0
  447590:	mov	x1, #0x0                   	// #0
  447594:	bl	446a80 <ferror@plt+0x434b0>
  447598:	tst	w0, #0xff
  44759c:	b.eq	44757c <ferror@plt+0x43fac>  // b.none
  4475a0:	ldrb	w0, [x19, #18]
  4475a4:	cbnz	w0, 44757c <ferror@plt+0x43fac>
  4475a8:	ldr	x0, [x19]
  4475ac:	cmp	x0, #0x0
  4475b0:	cset	w0, ne  // ne = any
  4475b4:	b	4475c8 <ferror@plt+0x43ff8>
  4475b8:	mov	x0, x19
  4475bc:	bl	43c24c <ferror@plt+0x38c7c>
  4475c0:	ands	w0, w0, #0xff
  4475c4:	b.ne	447588 <ferror@plt+0x43fb8>  // b.any
  4475c8:	ldr	x19, [sp, #16]
  4475cc:	ldp	x29, x30, [sp], #32
  4475d0:	ret
  4475d4:	mov	x1, x0
  4475d8:	ldrb	w0, [x0, #19]
  4475dc:	tbz	w0, #2, 447628 <ferror@plt+0x44058>
  4475e0:	ldrh	w0, [x1, #16]
  4475e4:	cbz	w0, 447628 <ferror@plt+0x44058>
  4475e8:	ldr	x3, [x1, #24]
  4475ec:	mov	x0, #0x0                   	// #0
  4475f0:	mov	x6, #0xfffffffffffffff8    	// #-8
  4475f4:	ldrh	w4, [x3, #4]
  4475f8:	ldr	w2, [x3]
  4475fc:	add	x0, x2, x0
  447600:	cbz	w4, 44762c <ferror@plt+0x4405c>
  447604:	ldr	x5, [x1]
  447608:	add	x4, x6, w4, uxtw #3
  44760c:	add	x2, x2, #0xd
  447610:	and	x2, x2, #0xfffffffffffffff8
  447614:	ldr	x4, [x5, x4]
  447618:	add	x3, x3, x2
  44761c:	ldr	w4, [x4, #8]
  447620:	add	x0, x4, x0
  447624:	b	4475f4 <ferror@plt+0x44024>
  447628:	ldr	w0, [x1, #12]
  44762c:	ret
  447630:	stp	x29, x30, [sp, #-48]!
  447634:	mov	x3, x1
  447638:	mov	x29, sp
  44763c:	stp	x19, x20, [sp, #16]
  447640:	mov	x19, x0
  447644:	ldr	x20, [x0, #24]
  447648:	stp	x21, x22, [sp, #32]
  44764c:	ldrb	w0, [x0, #19]
  447650:	tbz	w0, #2, 4476c0 <ferror@plt+0x440f0>
  447654:	ldrh	w0, [x19, #16]
  447658:	cbz	w0, 4476c0 <ferror@plt+0x440f0>
  44765c:	mov	x21, #0xfffffffffffffff8    	// #-8
  447660:	mov	x1, x20
  447664:	mov	x0, x3
  447668:	ldr	w2, [x1], #6
  44766c:	bl	402cd0 <memcpy@plt>
  447670:	mov	x3, x0
  447674:	ldrh	w0, [x20, #4]
  447678:	ldr	w1, [x20]
  44767c:	add	x3, x3, x1
  447680:	cbz	w0, 4476d8 <ferror@plt+0x44108>
  447684:	ldr	x1, [x19]
  447688:	add	x0, x21, w0, uxtw #3
  44768c:	ldr	x22, [x1, x0]
  447690:	mov	x0, x3
  447694:	ldr	w2, [x22, #8]
  447698:	ldr	x1, [x22]
  44769c:	bl	402cd0 <memcpy@plt>
  4476a0:	mov	x3, x0
  4476a4:	ldr	w0, [x20]
  4476a8:	ldr	w1, [x22, #8]
  4476ac:	add	x0, x0, #0xd
  4476b0:	and	x0, x0, #0xfffffffffffffff8
  4476b4:	add	x3, x3, x1
  4476b8:	add	x20, x20, x0
  4476bc:	b	447660 <ferror@plt+0x44090>
  4476c0:	ldr	w2, [x19, #12]
  4476c4:	mov	x1, x20
  4476c8:	mov	x0, x3
  4476cc:	bl	402cd0 <memcpy@plt>
  4476d0:	ldr	w1, [x19, #12]
  4476d4:	add	x3, x0, x1
  4476d8:	mov	x0, x3
  4476dc:	ldp	x19, x20, [sp, #16]
  4476e0:	ldp	x21, x22, [sp, #32]
  4476e4:	ldp	x29, x30, [sp], #48
  4476e8:	ret
  4476ec:	stp	x29, x30, [sp, #-64]!
  4476f0:	mov	x29, sp
  4476f4:	ldr	x2, [x0]
  4476f8:	stp	x21, x22, [sp, #32]
  4476fc:	ldr	x21, [x0, #136]
  447700:	stp	x19, x20, [sp, #16]
  447704:	mov	x19, x0
  447708:	stp	x23, x24, [sp, #48]
  44770c:	ldr	x1, [x0, #1312]
  447710:	str	x1, [x0, #1328]
  447714:	ldr	x1, [x2]
  447718:	ldr	x2, [x2, #32]
  44771c:	stp	x1, x2, [x21, #16]
  447720:	sub	x1, x2, x1
  447724:	bl	446644 <ferror@plt+0x43074>
  447728:	ldr	x0, [x21, #16]
  44772c:	ldrb	w0, [x0]
  447730:	cmp	w0, #0x28
  447734:	b.ne	4478ec <ferror@plt+0x4431c>  // b.any
  447738:	ldr	x0, [x19, #136]
  44773c:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  447740:	add	x24, x24, #0x228
  447744:	mov	w22, #0x0                   	// #0
  447748:	ldr	x1, [x0, #16]
  44774c:	add	x1, x1, #0x1
  447750:	mov	x0, x19
  447754:	mov	w2, #0x1                   	// #1
  447758:	bl	446908 <ferror@plt+0x43338>
  44775c:	mov	x20, x0
  447760:	ldrb	w0, [x0]
  447764:	ldrb	w1, [x20]
  447768:	ldrh	w1, [x24, x1, lsl #1]
  44776c:	tbnz	w1, #9, 447780 <ferror@plt+0x441b0>
  447770:	cmp	w0, #0x24
  447774:	b.ne	4478d8 <ferror@plt+0x44308>  // b.any
  447778:	ldrb	w0, [x19, #1146]
  44777c:	cbz	w0, 4477e0 <ferror@plt+0x44210>
  447780:	mov	x1, x20
  447784:	mov	x0, x19
  447788:	bl	446754 <ferror@plt+0x43184>
  44778c:	mov	x3, x0
  447790:	mov	x2, x0
  447794:	mov	w1, w22
  447798:	mov	x0, x19
  44779c:	bl	442aa8 <ferror@plt+0x3f4d8>
  4477a0:	ands	w23, w0, #0xff
  4477a4:	b.eq	4477e0 <ferror@plt+0x44210>  // b.none
  4477a8:	ldr	x0, [x19, #136]
  4477ac:	mov	w2, #0x1                   	// #1
  4477b0:	add	w22, w22, #0x1
  4477b4:	ldr	x1, [x0, #16]
  4477b8:	mov	x0, x19
  4477bc:	bl	446908 <ferror@plt+0x43338>
  4477c0:	mov	x20, x0
  4477c4:	ldrb	w0, [x0]
  4477c8:	cmp	w0, #0x2c
  4477cc:	b.ne	4477d8 <ferror@plt+0x44208>  // b.any
  4477d0:	add	x1, x20, #0x1
  4477d4:	b	447750 <ferror@plt+0x44180>
  4477d8:	cmp	w0, #0x29
  4477dc:	b.eq	4477f8 <ferror@plt+0x44228>  // b.none
  4477e0:	mov	w23, #0x0                   	// #0
  4477e4:	mov	x0, x19
  4477e8:	adrp	x2, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4477ec:	mov	w1, #0x3                   	// #3
  4477f0:	add	x2, x2, #0xecf
  4477f4:	bl	435b3c <ferror@plt+0x3256c>
  4477f8:	ldr	x0, [x19, #136]
  4477fc:	ldrb	w1, [x20]
  447800:	cmp	w1, #0x29
  447804:	cinc	x20, x20, eq  // eq = none
  447808:	str	x20, [x0, #16]
  44780c:	cbz	w23, 4478fc <ferror@plt+0x4432c>
  447810:	ubfiz	x1, x22, #3, #32
  447814:	mov	x0, x19
  447818:	bl	43f28c <ferror@plt+0x3bcbc>
  44781c:	mov	x23, x0
  447820:	mov	w24, #0x1                   	// #1
  447824:	mov	x1, #0x30                  	// #48
  447828:	mov	x0, x19
  44782c:	bl	43f234 <ferror@plt+0x3bc64>
  447830:	mov	x2, x0
  447834:	mov	w1, #0x2                   	// #2
  447838:	mov	x0, x19
  44783c:	bl	442bcc <ferror@plt+0x3f5fc>
  447840:	mov	x20, x0
  447844:	strh	w22, [x0, #16]
  447848:	ldrb	w0, [x0, #19]
  44784c:	str	x23, [x20]
  447850:	bfi	w0, w24, #2, #1
  447854:	strb	w0, [x20, #19]
  447858:	ldrb	w2, [x19, #1124]
  44785c:	mov	x0, x19
  447860:	ldr	x23, [x19]
  447864:	ldr	x1, [x21, #16]
  447868:	bl	446908 <ferror@plt+0x43338>
  44786c:	str	x0, [x23]
  447870:	mov	x1, x20
  447874:	mov	w2, #0x0                   	// #0
  447878:	ldrb	w0, [x19, #24]
  44787c:	add	w0, w0, #0x1
  447880:	strb	w0, [x19, #24]
  447884:	mov	x0, x19
  447888:	bl	446a80 <ferror@plt+0x434b0>
  44788c:	ldrb	w0, [x19, #24]
  447890:	mov	w1, w22
  447894:	sub	w0, w0, #0x1
  447898:	strb	w0, [x19, #24]
  44789c:	mov	x0, x19
  4478a0:	bl	442b8c <ferror@plt+0x3f5bc>
  4478a4:	cbz	x20, 447918 <ferror@plt+0x44348>
  4478a8:	ldr	x2, [x19, #1312]
  4478ac:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4478b0:	ldr	x0, [x19, #1328]
  4478b4:	add	x1, x1, #0x228
  4478b8:	cmp	x0, x2
  4478bc:	b.ls	447904 <ferror@plt+0x44334>  // b.plast
  4478c0:	ldurb	w3, [x0, #-1]
  4478c4:	ldrh	w3, [x1, x3, lsl #1]
  4478c8:	tst	w3, #0xc00
  4478cc:	b.eq	447904 <ferror@plt+0x44334>  // b.none
  4478d0:	sub	x0, x0, #0x1
  4478d4:	b	4478b8 <ferror@plt+0x442e8>
  4478d8:	cmp	w0, #0x29
  4478dc:	b.ne	4477e0 <ferror@plt+0x44210>  // b.any
  4478e0:	cbnz	w22, 4477e0 <ferror@plt+0x44210>
  4478e4:	mov	w23, #0x1                   	// #1
  4478e8:	b	4477f8 <ferror@plt+0x44228>
  4478ec:	mov	w22, #0x0                   	// #0
  4478f0:	mov	x23, #0x0                   	// #0
  4478f4:	mov	w24, #0x0                   	// #0
  4478f8:	b	447824 <ferror@plt+0x44254>
  4478fc:	mov	x20, #0x0                   	// #0
  447900:	b	447858 <ferror@plt+0x44288>
  447904:	str	x0, [x19, #1328]
  447908:	mov	x1, x20
  44790c:	mov	x0, x19
  447910:	mov	w2, #0x0                   	// #0
  447914:	bl	44654c <ferror@plt+0x42f7c>
  447918:	mov	x0, x20
  44791c:	ldp	x19, x20, [sp, #16]
  447920:	ldp	x21, x22, [sp, #32]
  447924:	ldp	x23, x24, [sp, #48]
  447928:	ldp	x29, x30, [sp], #64
  44792c:	ret
  447930:	stp	x29, x30, [sp, #-64]!
  447934:	mov	x29, sp
  447938:	stp	x21, x22, [sp, #32]
  44793c:	mov	x21, x1
  447940:	ldr	w1, [x0, #12]
  447944:	stp	x19, x20, [sp, #16]
  447948:	mov	x20, x0
  44794c:	ldr	w0, [x21, #12]
  447950:	add	w0, w1, w0
  447954:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  447958:	ldrh	w1, [x20, #16]
  44795c:	mov	x19, x0
  447960:	ldr	w2, [x20, #12]
  447964:	strb	wzr, [sp, #62]
  447968:	strb	wzr, [sp, #63]
  44796c:	add	x22, x0, x2
  447970:	cbz	w1, 447a20 <ferror@plt+0x44450>
  447974:	ldr	x20, [x20, #24]
  447978:	ldr	x21, [x21, #24]
  44797c:	ldrh	w1, [x20, #4]
  447980:	ldrh	w0, [x21, #4]
  447984:	cmp	w1, w0
  447988:	b.eq	4479ac <ferror@plt+0x443dc>  // b.none
  44798c:	mov	w20, #0x1                   	// #1
  447990:	mov	x0, x19
  447994:	bl	4032a0 <free@plt>
  447998:	mov	w0, w20
  44799c:	ldp	x19, x20, [sp, #16]
  4479a0:	ldp	x21, x22, [sp, #32]
  4479a4:	ldp	x29, x30, [sp], #64
  4479a8:	ret
  4479ac:	mov	x1, x20
  4479b0:	add	x3, sp, #0x3e
  4479b4:	mov	x0, x19
  4479b8:	ldr	w2, [x1], #6
  4479bc:	bl	4464a0 <ferror@plt+0x42ed0>
  4479c0:	mov	x10, x0
  4479c4:	mov	x1, x21
  4479c8:	add	x3, sp, #0x3f
  4479cc:	mov	x0, x22
  4479d0:	ldr	w2, [x1], #6
  4479d4:	bl	4464a0 <ferror@plt+0x42ed0>
  4479d8:	cmp	x10, x0
  4479dc:	b.ne	44798c <ferror@plt+0x443bc>  // b.any
  4479e0:	mov	x2, x10
  4479e4:	mov	x1, x22
  4479e8:	mov	x0, x19
  4479ec:	bl	4031e0 <memcmp@plt>
  4479f0:	cbnz	w0, 44798c <ferror@plt+0x443bc>
  4479f4:	ldrh	w0, [x20, #4]
  4479f8:	cbz	w0, 447a68 <ferror@plt+0x44498>
  4479fc:	ldr	w0, [x20]
  447a00:	add	x0, x0, #0xd
  447a04:	and	x0, x0, #0xfffffffffffffff8
  447a08:	add	x20, x20, x0
  447a0c:	ldr	w0, [x21]
  447a10:	add	x0, x0, #0xd
  447a14:	and	x0, x0, #0xfffffffffffffff8
  447a18:	add	x21, x21, x0
  447a1c:	b	44797c <ferror@plt+0x443ac>
  447a20:	ldr	x1, [x20, #24]
  447a24:	add	x3, sp, #0x3e
  447a28:	bl	4464a0 <ferror@plt+0x42ed0>
  447a2c:	mov	x10, x0
  447a30:	ldr	w2, [x21, #12]
  447a34:	add	x3, sp, #0x3f
  447a38:	ldr	x1, [x21, #24]
  447a3c:	mov	x0, x22
  447a40:	bl	4464a0 <ferror@plt+0x42ed0>
  447a44:	cmp	x10, x0
  447a48:	b.ne	44798c <ferror@plt+0x443bc>  // b.any
  447a4c:	mov	x2, x10
  447a50:	mov	x1, x22
  447a54:	mov	x0, x19
  447a58:	bl	4031e0 <memcmp@plt>
  447a5c:	cmp	w0, #0x0
  447a60:	cset	w20, ne  // ne = any
  447a64:	b	447990 <ferror@plt+0x443c0>
  447a68:	mov	w20, #0x0                   	// #0
  447a6c:	b	447990 <ferror@plt+0x443c0>
  447a70:	stp	x29, x30, [sp, #-48]!
  447a74:	mov	x29, sp
  447a78:	stp	x19, x20, [sp, #16]
  447a7c:	mov	x19, x0
  447a80:	str	x21, [sp, #32]
  447a84:	bl	43db44 <ferror@plt+0x3a574>
  447a88:	ldrb	w0, [x0, #4]
  447a8c:	cmp	w0, #0x25
  447a90:	b.eq	447ab4 <ferror@plt+0x444e4>  // b.none
  447a94:	mov	w1, #0x1                   	// #1
  447a98:	mov	x0, x19
  447a9c:	bl	442800 <ferror@plt+0x3f230>
  447aa0:	mov	sp, x29
  447aa4:	ldp	x19, x20, [sp, #16]
  447aa8:	ldr	x21, [sp, #32]
  447aac:	ldp	x29, x30, [sp], #48
  447ab0:	ret
  447ab4:	mov	x0, x19
  447ab8:	bl	43db44 <ferror@plt+0x3a574>
  447abc:	ldrb	w0, [x0, #4]
  447ac0:	cmp	w0, #0x37
  447ac4:	b.eq	447ad0 <ferror@plt+0x44500>  // b.none
  447ac8:	mov	w1, #0x2                   	// #2
  447acc:	b	447a98 <ferror@plt+0x444c8>
  447ad0:	mov	x0, x19
  447ad4:	bl	43db44 <ferror@plt+0x3a574>
  447ad8:	mov	x20, x0
  447adc:	ldrb	w0, [x0, #4]
  447ae0:	cmp	w0, #0x3e
  447ae4:	b.ne	447b18 <ferror@plt+0x44548>  // b.any
  447ae8:	ldr	w2, [x20, #8]
  447aec:	cmp	w2, #0x4
  447af0:	b.ls	447b18 <ferror@plt+0x44548>  // b.plast
  447af4:	ldr	x1, [x20, #16]
  447af8:	sub	w0, w2, #0x2
  447afc:	ldrb	w0, [x1, x0]
  447b00:	cmp	w0, #0x2f
  447b04:	b.ne	447b18 <ferror@plt+0x44548>  // b.any
  447b08:	sub	w0, w2, #0x3
  447b0c:	ldrb	w3, [x1, x0]
  447b10:	cmp	w3, #0x2f
  447b14:	b.eq	447b20 <ferror@plt+0x44550>  // b.none
  447b18:	mov	w1, #0x3                   	// #3
  447b1c:	b	447a98 <ferror@plt+0x444c8>
  447b20:	ldr	x21, [x19, #920]
  447b24:	cbz	x21, 447aa0 <ferror@plt+0x444d0>
  447b28:	add	x0, x0, #0xf
  447b2c:	sub	w2, w2, #0x4
  447b30:	and	x0, x0, #0x1fffffff0
  447b34:	add	x1, x1, #0x1
  447b38:	sub	sp, sp, x0
  447b3c:	mov	x3, sp
  447b40:	mov	x0, x3
  447b44:	bl	402cd0 <memcpy@plt>
  447b48:	mov	x3, x0
  447b4c:	mov	x1, x0
  447b50:	ldr	w0, [x20, #8]
  447b54:	sub	w0, w0, #0x4
  447b58:	strb	wzr, [x3, x0]
  447b5c:	mov	x0, x19
  447b60:	blr	x21
  447b64:	b	447aa0 <ferror@plt+0x444d0>
  447b68:	str	w1, [x0, #1116]
  447b6c:	sxtw	x1, w1
  447b70:	mov	x2, #0xf                   	// #15
  447b74:	adrp	x3, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  447b78:	add	x3, x3, #0x138
  447b7c:	mul	x2, x1, x2
  447b80:	add	x1, x3, x2
  447b84:	ldrb	w2, [x3, x2]
  447b88:	strb	w2, [x0, #1152]
  447b8c:	ldrb	w2, [x1, #1]
  447b90:	strb	w2, [x0, #1120]
  447b94:	ldrb	w2, [x1, #2]
  447b98:	strb	w2, [x0, #1127]
  447b9c:	ldrb	w2, [x1, #3]
  447ba0:	strb	w2, [x0, #1147]
  447ba4:	ldrb	w2, [x1, #4]
  447ba8:	strb	w2, [x0, #1164]
  447bac:	ldrb	w2, [x1, #5]
  447bb0:	strb	w2, [x0, #1153]
  447bb4:	ldrb	w2, [x1, #6]
  447bb8:	strb	w2, [x0, #1126]
  447bbc:	ldrb	w2, [x1, #7]
  447bc0:	strb	w2, [x0, #1128]
  447bc4:	ldrb	w2, [x1, #8]
  447bc8:	strb	w2, [x0, #1130]
  447bcc:	ldrb	w2, [x1, #9]
  447bd0:	strb	w2, [x0, #1161]
  447bd4:	add	x2, x0, #0x400
  447bd8:	ldrh	w3, [x1, #10]
  447bdc:	sturh	w3, [x2, #141]
  447be0:	ldrb	w2, [x1, #12]
  447be4:	strb	w2, [x0, #1125]
  447be8:	ldrb	w2, [x1, #13]
  447bec:	ldrb	w1, [x1, #14]
  447bf0:	strb	w2, [x0, #1129]
  447bf4:	strb	w1, [x0, #1167]
  447bf8:	ret
  447bfc:	stp	x29, x30, [sp, #-64]!
  447c00:	mov	x29, sp
  447c04:	str	x23, [sp, #48]
  447c08:	mov	w23, w0
  447c0c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  447c10:	stp	x21, x22, [sp, #32]
  447c14:	mov	x21, x1
  447c18:	ldr	w1, [x0, #616]
  447c1c:	mov	x22, x2
  447c20:	stp	x19, x20, [sp, #16]
  447c24:	cbnz	w1, 447c84 <ferror@plt+0x446b4>
  447c28:	mov	w1, #0x1                   	// #1
  447c2c:	add	x19, x0, #0x268
  447c30:	str	w1, [x0, #616]
  447c34:	bl	43b810 <ferror@plt+0x38240>
  447c38:	mov	w0, #0x7c                  	// #124
  447c3c:	strb	w0, [x19, #37]
  447c40:	mov	w0, #0x5b5e                	// #23390
  447c44:	sturh	w0, [x19, #43]
  447c48:	mov	w0, #0x5d                  	// #93
  447c4c:	strb	w0, [x19, #45]
  447c50:	mov	w0, #0x5c                  	// #92
  447c54:	strb	w0, [x19, #51]
  447c58:	mov	w0, #0x237b                	// #9083
  447c5c:	strh	w0, [x19, #64]
  447c60:	mov	w0, #0x7d                  	// #125
  447c64:	strb	w0, [x19, #66]
  447c68:	mov	w0, #0x7e                  	// #126
  447c6c:	strb	w0, [x19, #49]
  447c70:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  447c74:	adrp	x0, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  447c78:	add	x1, x1, #0x938
  447c7c:	add	x0, x0, #0x910
  447c80:	bl	402f90 <bindtextdomain@plt>
  447c84:	mov	x1, #0x588                 	// #1416
  447c88:	mov	x0, #0x1                   	// #1
  447c8c:	bl	45d6f0 <_obstack_memory_used@@Base+0x1300>
  447c90:	stp	xzr, xzr, [x0, #80]
  447c94:	mov	x19, x0
  447c98:	stp	xzr, xzr, [x0, #96]
  447c9c:	add	x20, x0, #0x50
  447ca0:	mov	w1, w23
  447ca4:	stp	xzr, xzr, [x0, #112]
  447ca8:	str	xzr, [x0, #128]
  447cac:	bl	447b68 <ferror@plt+0x44598>
  447cb0:	add	x2, x0, #0x400
  447cb4:	mov	w1, #0x101                 	// #257
  447cb8:	mov	w0, #0x8                   	// #8
  447cbc:	mov	w4, #0x102                 	// #258
  447cc0:	mov	w3, #0x100                 	// #256
  447cc4:	sturh	w1, [x2, #99]
  447cc8:	str	w0, [x19, #1112]
  447ccc:	mov	w0, #0xff                  	// #255
  447cd0:	strh	w4, [x19, #1136]
  447cd4:	strh	w0, [x19, #1198]
  447cd8:	mov	w0, #0x1                   	// #1
  447cdc:	strb	w0, [x19, #1132]
  447ce0:	sturh	w3, [x2, #115]
  447ce4:	strh	w1, [x19, #1142]
  447ce8:	strb	wzr, [x19, #1144]
  447cec:	strb	w0, [x19, #1146]
  447cf0:	strb	w0, [x19, #1148]
  447cf4:	sturh	w4, [x2, #133]
  447cf8:	mov	w2, #0x1                   	// #1
  447cfc:	strh	w1, [x19, #1162]
  447d00:	mov	x1, #0x40                  	// #64
  447d04:	str	x1, [x19, #1208]
  447d08:	mov	x1, #0x8                   	// #8
  447d0c:	strb	wzr, [x19, #1134]
  447d10:	str	w2, [x19, #1192]
  447d14:	str	x1, [x19, #1216]
  447d18:	mov	x1, #0x20                  	// #32
  447d1c:	str	x1, [x19, #1224]
  447d20:	str	x1, [x19, #1232]
  447d24:	strh	w3, [x19, #1240]
  447d28:	strb	w0, [x19, #1242]
  447d2c:	strb	w2, [x19, #1245]
  447d30:	bl	42ec7c <ferror@plt+0x2b6ac>
  447d34:	str	x0, [x19, #1168]
  447d38:	str	xzr, [x19, #1176]
  447d3c:	bl	42ec7c <ferror@plt+0x2b6ac>
  447d40:	str	x0, [x19, #1184]
  447d44:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  447d48:	add	x0, x0, #0x122
  447d4c:	str	x0, [x19, #224]
  447d50:	mov	w1, #0xfa                  	// #250
  447d54:	ldrb	w0, [x19, #1123]
  447d58:	str	x22, [x19, #40]
  447d5c:	add	x22, x19, #0x1c8
  447d60:	cmp	w0, #0x0
  447d64:	str	xzr, [x19, #672]
  447d68:	cset	w0, eq  // eq = none
  447d6c:	strb	w0, [x19, #21]
  447d70:	mov	w0, #0x53                  	// #83
  447d74:	strb	w0, [x19, #668]
  447d78:	mov	w0, #0x16                  	// #22
  447d7c:	strb	w0, [x19, #692]
  447d80:	strh	wzr, [x19, #694]
  447d84:	mov	x0, x22
  447d88:	bl	43c064 <ferror@plt+0x38a94>
  447d8c:	stp	xzr, xzr, [x19, #80]
  447d90:	mov	x1, #0x0                   	// #0
  447d94:	ldr	x0, [x19, #472]
  447d98:	str	xzr, [x19, #120]
  447d9c:	str	x20, [x19, #136]
  447da0:	str	x0, [x19, #448]
  447da4:	mov	x0, x19
  447da8:	str	x22, [x19, #488]
  447dac:	bl	43cbdc <ferror@plt+0x3960c>
  447db0:	str	x0, [x19, #56]
  447db4:	mov	x1, #0x0                   	// #0
  447db8:	mov	x0, x19
  447dbc:	bl	43cbdc <ferror@plt+0x3960c>
  447dc0:	str	x0, [x19, #64]
  447dc4:	mov	x0, #0xfffffffffffffffe    	// #-2
  447dc8:	str	x0, [x19, #656]
  447dcc:	str	xzr, [x19, #1400]
  447dd0:	mov	x0, x19
  447dd4:	str	wzr, [x19, #1408]
  447dd8:	bl	437b04 <ferror@plt+0x34534>
  447ddc:	adrp	x4, 403000 <memset@plt>
  447de0:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0xc10>
  447de4:	add	x4, x4, #0x2a0
  447de8:	add	x3, x3, #0x6bc
  447dec:	mov	x2, #0x0                   	// #0
  447df0:	mov	x1, #0x0                   	// #0
  447df4:	add	x0, x19, #0x328
  447df8:	bl	45c200 <_obstack_begin@@Base>
  447dfc:	mov	x0, x19
  447e00:	bl	43a9ec <ferror@plt+0x3741c>
  447e04:	mov	x1, x21
  447e08:	mov	x0, x19
  447e0c:	bl	43b17c <ferror@plt+0x37bac>
  447e10:	mov	x0, x19
  447e14:	ldp	x19, x20, [sp, #16]
  447e18:	ldp	x21, x22, [sp, #32]
  447e1c:	ldr	x23, [sp, #48]
  447e20:	ldp	x29, x30, [sp], #64
  447e24:	ret
  447e28:	str	x1, [x0, #40]
  447e2c:	ret
  447e30:	stp	x29, x30, [sp, #-48]!
  447e34:	mov	x29, sp
  447e38:	stp	x19, x20, [sp, #16]
  447e3c:	mov	x19, x0
  447e40:	ldr	x0, [x0, #1096]
  447e44:	stp	x21, x22, [sp, #32]
  447e48:	bl	4032a0 <free@plt>
  447e4c:	ldr	x0, [x19]
  447e50:	cbz	x0, 447e60 <ferror@plt+0x44890>
  447e54:	mov	x0, x19
  447e58:	bl	434ea4 <ferror@plt+0x318d4>
  447e5c:	b	447e4c <ferror@plt+0x4487c>
  447e60:	ldr	x0, [x19, #1312]
  447e64:	bl	4032a0 <free@plt>
  447e68:	ldr	x0, [x19, #504]
  447e6c:	cbz	x0, 447e7c <ferror@plt+0x448ac>
  447e70:	bl	4032a0 <free@plt>
  447e74:	str	xzr, [x19, #504]
  447e78:	str	wzr, [x19, #512]
  447e7c:	ldr	x0, [x19, #712]
  447e80:	cbz	x0, 447e88 <ferror@plt+0x448b8>
  447e84:	bl	44556c <ferror@plt+0x41f9c>
  447e88:	mov	x1, #0x0                   	// #0
  447e8c:	add	x0, x19, #0x328
  447e90:	bl	45c37c <_obstack_free@@Base>
  447e94:	add	x22, x19, #0x1c8
  447e98:	mov	x0, x19
  447e9c:	bl	43b12c <ferror@plt+0x37b5c>
  447ea0:	mov	x0, x19
  447ea4:	bl	43aad0 <ferror@plt+0x37500>
  447ea8:	mov	x0, x19
  447eac:	bl	42e7ac <ferror@plt+0x2b1dc>
  447eb0:	ldr	x0, [x19, #56]
  447eb4:	mov	x20, x22
  447eb8:	bl	43cddc <ferror@plt+0x3980c>
  447ebc:	ldr	x0, [x19, #64]
  447ec0:	bl	43cddc <ferror@plt+0x3980c>
  447ec4:	ldr	x0, [x19, #72]
  447ec8:	bl	43cddc <ferror@plt+0x3980c>
  447ecc:	mov	x21, x20
  447ed0:	ldr	x20, [x20]
  447ed4:	ldr	x0, [x21, #16]
  447ed8:	bl	4032a0 <free@plt>
  447edc:	cmp	x22, x21
  447ee0:	b.eq	447eec <ferror@plt+0x4491c>  // b.none
  447ee4:	mov	x0, x21
  447ee8:	bl	4032a0 <free@plt>
  447eec:	cbnz	x20, 447ecc <ferror@plt+0x448fc>
  447ef0:	ldr	x0, [x19, #80]
  447ef4:	cbz	x0, 447f08 <ferror@plt+0x44938>
  447ef8:	ldr	x20, [x0]
  447efc:	bl	4032a0 <free@plt>
  447f00:	mov	x0, x20
  447f04:	b	447ef4 <ferror@plt+0x44924>
  447f08:	ldr	x0, [x19, #1384]
  447f0c:	cbz	x0, 447f54 <ferror@plt+0x44984>
  447f10:	mov	x20, #0x0                   	// #0
  447f14:	ldr	w1, [x19, #1392]
  447f18:	ldr	x0, [x19, #1384]
  447f1c:	cmp	w1, w20
  447f20:	b.le	447f50 <ferror@plt+0x44980>
  447f24:	lsl	x1, x20, #4
  447f28:	add	x20, x20, #0x1
  447f2c:	ldr	x0, [x0, x1]
  447f30:	bl	4032a0 <free@plt>
  447f34:	b	447f14 <ferror@plt+0x44944>
  447f38:	ldr	x20, [x19, #1400]
  447f3c:	ldr	x0, [x20]
  447f40:	str	x0, [x19, #1400]
  447f44:	ldr	x0, [x20, #8]
  447f48:	bl	4032a0 <free@plt>
  447f4c:	mov	x0, x20
  447f50:	bl	4032a0 <free@plt>
  447f54:	ldr	x0, [x19, #1400]
  447f58:	cbnz	x0, 447f38 <ferror@plt+0x44968>
  447f5c:	mov	x0, x19
  447f60:	ldp	x19, x20, [sp, #16]
  447f64:	ldp	x21, x22, [sp, #32]
  447f68:	ldp	x29, x30, [sp], #48
  447f6c:	b	4032a0 <free@plt>
  447f70:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  447f74:	add	x1, x1, #0x138
  447f78:	add	x1, x1, #0x150
  447f7c:	mov	x2, #0xb                   	// #11
  447f80:	ldrh	w3, [x1, #10]
  447f84:	cmp	w3, w0
  447f88:	b.ne	447f94 <ferror@plt+0x449c4>  // b.any
  447f8c:	ldr	x0, [x1]
  447f90:	ret
  447f94:	add	x1, x1, #0x10
  447f98:	subs	x2, x2, #0x1
  447f9c:	b.ne	447f80 <ferror@plt+0x449b0>  // b.any
  447fa0:	mov	x0, #0x0                   	// #0
  447fa4:	b	447f90 <ferror@plt+0x449c0>
  447fa8:	stp	x29, x30, [sp, #-48]!
  447fac:	mov	x29, sp
  447fb0:	stp	x19, x20, [sp, #16]
  447fb4:	mov	x20, x0
  447fb8:	str	x21, [sp, #32]
  447fbc:	ldrb	w0, [x0, #1160]
  447fc0:	cbnz	w0, 448054 <ferror@plt+0x44a84>
  447fc4:	ldrb	w0, [x20, #1243]
  447fc8:	cbz	w0, 44805c <ferror@plt+0x44a8c>
  447fcc:	ldrb	w0, [x20, #1153]
  447fd0:	cmp	w0, #0x0
  447fd4:	cset	x0, eq  // eq = none
  447fd8:	add	x0, x0, #0xb
  447fdc:	adrp	x19, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  447fe0:	add	x19, x19, #0x138
  447fe4:	add	x19, x19, #0x200
  447fe8:	add	x21, x19, x0, lsl #4
  447fec:	cmp	x21, x19
  447ff0:	b.ls	448064 <ferror@plt+0x44a94>  // b.plast
  447ff4:	ldrh	w0, [x19, #10]
  447ff8:	cmp	w0, #0xa
  447ffc:	b.ne	448014 <ferror@plt+0x44a44>  // b.any
  448000:	ldr	w0, [x20, #1116]
  448004:	cmp	w0, #0x15
  448008:	b.eq	44804c <ferror@plt+0x44a7c>  // b.none
  44800c:	ldr	x0, [x20, #1040]
  448010:	cbz	x0, 44804c <ferror@plt+0x44a7c>
  448014:	ldrh	w2, [x19, #8]
  448018:	mov	x0, x20
  44801c:	ldr	x1, [x19]
  448020:	bl	43b16c <ferror@plt+0x37b9c>
  448024:	ldrb	w1, [x0, #18]
  448028:	orr	w1, w1, #0x3
  44802c:	strb	w1, [x0, #18]
  448030:	ldrb	w1, [x19, #12]
  448034:	cbz	w1, 448044 <ferror@plt+0x44a74>
  448038:	ldrh	w1, [x0, #18]
  44803c:	orr	w1, w1, #0x20
  448040:	strh	w1, [x0, #18]
  448044:	ldrh	w1, [x19, #10]
  448048:	str	w1, [x0, #24]
  44804c:	add	x19, x19, #0x10
  448050:	b	447fec <ferror@plt+0x44a1c>
  448054:	mov	x0, #0xa                   	// #10
  448058:	b	447fdc <ferror@plt+0x44a0c>
  44805c:	mov	x0, #0xb                   	// #11
  448060:	b	447fdc <ferror@plt+0x44a0c>
  448064:	ldp	x19, x20, [sp, #16]
  448068:	ldr	x21, [sp, #32]
  44806c:	ldp	x29, x30, [sp], #48
  448070:	ret
  448074:	stp	x29, x30, [sp, #-32]!
  448078:	mov	x29, sp
  44807c:	stp	x19, x20, [sp, #16]
  448080:	mov	x19, x0
  448084:	mov	w20, w1
  448088:	bl	447fa8 <ferror@plt+0x449d8>
  44808c:	ldrb	w0, [x19, #1160]
  448090:	cbnz	w0, 4480b4 <ferror@plt+0x44ae4>
  448094:	ldrb	w0, [x19, #1243]
  448098:	cbz	w0, 4480a4 <ferror@plt+0x44ad4>
  44809c:	ldrb	w0, [x19, #1153]
  4480a0:	cbz	w0, 4480b4 <ferror@plt+0x44ae4>
  4480a4:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4480a8:	mov	x0, x19
  4480ac:	add	x1, x1, #0xf21
  4480b0:	bl	435728 <ferror@plt+0x32158>
  4480b4:	ldrb	w1, [x19, #1120]
  4480b8:	ldr	w0, [x19, #1116]
  4480bc:	cbz	w1, 4481a4 <ferror@plt+0x44bd4>
  4480c0:	sub	w1, w0, #0x13
  4480c4:	cmp	w1, #0x1
  4480c8:	b.hi	448150 <ferror@plt+0x44b80>  // b.pmore
  4480cc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4480d0:	add	x1, x1, #0xf2c
  4480d4:	mov	x0, x19
  4480d8:	bl	435728 <ferror@plt+0x32158>
  4480dc:	ldrb	w0, [x19, #1128]
  4480e0:	cbz	w0, 44811c <ferror@plt+0x44b4c>
  4480e4:	ldrb	w0, [x19, #1120]
  4480e8:	cbz	w0, 4480fc <ferror@plt+0x44b2c>
  4480ec:	ldr	w0, [x19, #1116]
  4480f0:	sub	w0, w0, #0xb
  4480f4:	cmp	w0, #0x1
  4480f8:	b.ls	44811c <ferror@plt+0x44b4c>  // b.plast
  4480fc:	mov	x0, x19
  448100:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448104:	add	x1, x1, #0x1d
  448108:	bl	435728 <ferror@plt+0x32158>
  44810c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448110:	mov	x0, x19
  448114:	add	x1, x1, #0x2f
  448118:	bl	435728 <ferror@plt+0x32158>
  44811c:	cbz	w20, 448234 <ferror@plt+0x44c64>
  448120:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448124:	add	x1, x1, #0x41
  448128:	mov	x0, x19
  44812c:	bl	435728 <ferror@plt+0x32158>
  448130:	ldrb	w0, [x19, #1122]
  448134:	cbz	w0, 448240 <ferror@plt+0x44c70>
  448138:	mov	x0, x19
  44813c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448140:	ldp	x19, x20, [sp, #16]
  448144:	add	x1, x1, #0x65
  448148:	ldp	x29, x30, [sp], #32
  44814c:	b	435728 <ferror@plt+0x32158>
  448150:	sub	w1, w0, #0x11
  448154:	cmp	w1, #0x1
  448158:	b.hi	448168 <ferror@plt+0x44b98>  // b.pmore
  44815c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  448160:	add	x1, x1, #0xf40
  448164:	b	4480d4 <ferror@plt+0x44b04>
  448168:	sub	w1, w0, #0xf
  44816c:	cmp	w1, #0x1
  448170:	b.hi	448180 <ferror@plt+0x44bb0>  // b.pmore
  448174:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  448178:	add	x1, x1, #0xf54
  44817c:	b	4480d4 <ferror@plt+0x44b04>
  448180:	sub	w0, w0, #0xd
  448184:	cmp	w0, #0x1
  448188:	b.hi	448198 <ferror@plt+0x44bc8>  // b.pmore
  44818c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  448190:	add	x1, x1, #0xf68
  448194:	b	4480d4 <ferror@plt+0x44b04>
  448198:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  44819c:	add	x1, x1, #0xf7c
  4481a0:	b	4480d4 <ferror@plt+0x44b04>
  4481a4:	cmp	w0, #0x15
  4481a8:	b.ne	4481b8 <ferror@plt+0x44be8>  // b.any
  4481ac:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4481b0:	add	x1, x1, #0xf90
  4481b4:	b	4480d4 <ferror@plt+0x44b04>
  4481b8:	cmp	w0, #0x6
  4481bc:	b.ne	4481cc <ferror@plt+0x44bfc>  // b.any
  4481c0:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4481c4:	add	x1, x1, #0xfa0
  4481c8:	b	4480d4 <ferror@plt+0x44b04>
  4481cc:	cmp	w0, #0xa
  4481d0:	b.eq	4481dc <ferror@plt+0x44c0c>  // b.none
  4481d4:	cmp	w0, #0x4
  4481d8:	b.ne	4481e8 <ferror@plt+0x44c18>  // b.any
  4481dc:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4481e0:	add	x1, x1, #0xfb9
  4481e4:	b	4480d4 <ferror@plt+0x44b04>
  4481e8:	cmp	w0, #0x9
  4481ec:	b.eq	4481f8 <ferror@plt+0x44c28>  // b.none
  4481f0:	cmp	w0, #0x3
  4481f4:	b.ne	448204 <ferror@plt+0x44c34>  // b.any
  4481f8:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  4481fc:	add	x1, x1, #0xfd2
  448200:	b	4480d4 <ferror@plt+0x44b04>
  448204:	cmp	w0, #0x8
  448208:	b.eq	448214 <ferror@plt+0x44c44>  // b.none
  44820c:	cmp	w0, #0x2
  448210:	b.ne	448220 <ferror@plt+0x44c50>  // b.any
  448214:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  448218:	add	x1, x1, #0xfeb
  44821c:	b	4480d4 <ferror@plt+0x44b04>
  448220:	ldrb	w0, [x19, #1152]
  448224:	cbz	w0, 4480dc <ferror@plt+0x44b0c>
  448228:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44822c:	add	x1, x1, #0x4
  448230:	b	4480d4 <ferror@plt+0x44b04>
  448234:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448238:	add	x1, x1, #0x53
  44823c:	b	448128 <ferror@plt+0x44b58>
  448240:	ldp	x19, x20, [sp, #16]
  448244:	ldp	x29, x30, [sp], #32
  448248:	ret
  44824c:	stp	x29, x30, [sp, #-48]!
  448250:	mov	x29, sp
  448254:	stp	x19, x20, [sp, #16]
  448258:	mov	x19, x0
  44825c:	stp	x21, x22, [sp, #32]
  448260:	ldrb	w0, [x0, #1120]
  448264:	cbz	w0, 44826c <ferror@plt+0x44c9c>
  448268:	strb	wzr, [x19, #1138]
  44826c:	ldrb	w1, [x19, #1155]
  448270:	cbz	w1, 448288 <ferror@plt+0x44cb8>
  448274:	ldrb	w1, [x19, #1244]
  448278:	cbnz	w1, 448284 <ferror@plt+0x44cb4>
  44827c:	mov	w1, #0x1                   	// #1
  448280:	strb	w1, [x19, #24]
  448284:	strb	wzr, [x19, #1160]
  448288:	ldrb	w1, [x19, #1136]
  44828c:	cmp	w1, #0x2
  448290:	b.ne	4482a4 <ferror@plt+0x44cd4>  // b.any
  448294:	ldrb	w1, [x19, #1125]
  448298:	cmp	w1, #0x0
  44829c:	cset	w1, eq  // eq = none
  4482a0:	strb	w1, [x19, #1136]
  4482a4:	ldrb	w1, [x19, #1160]
  4482a8:	cbz	w1, 4482b4 <ferror@plt+0x44ce4>
  4482ac:	strb	wzr, [x19, #1125]
  4482b0:	strb	wzr, [x19, #1136]
  4482b4:	cbz	w0, 448330 <ferror@plt+0x44d60>
  4482b8:	ldrb	w0, [x19, #1158]
  4482bc:	cmp	w0, #0x0
  4482c0:	cset	w21, ne  // ne = any
  4482c4:	ldrb	w0, [x19, #1159]
  4482c8:	cbz	w0, 448338 <ferror@plt+0x44d68>
  4482cc:	mov	w0, #0x84                  	// #132
  4482d0:	orr	w21, w21, w0
  4482d4:	adrp	x20, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  4482d8:	add	x20, x20, #0x138
  4482dc:	add	x20, x20, #0x150
  4482e0:	mov	x22, #0xb                   	// #11
  4482e4:	ldrh	w2, [x20, #8]
  4482e8:	mov	x0, x19
  4482ec:	ldr	x1, [x20]
  4482f0:	add	x20, x20, #0x10
  4482f4:	bl	43b16c <ferror@plt+0x37b9c>
  4482f8:	ldrh	w1, [x0, #18]
  4482fc:	subs	x22, x22, #0x1
  448300:	ubfx	x2, x1, #2, #8
  448304:	orr	w2, w21, w2
  448308:	bfi	w1, w2, #2, #8
  44830c:	strh	w1, [x0, #18]
  448310:	ldrb	w1, [x0, #16]
  448314:	and	w1, w1, #0xfffffffe
  448318:	strb	w1, [x0, #16]
  44831c:	ldurh	w2, [x20, #-6]
  448320:	bfi	w1, w2, #1, #7
  448324:	strb	w1, [x0, #16]
  448328:	b.ne	4482e4 <ferror@plt+0x44d14>  // b.any
  44832c:	b	44833c <ferror@plt+0x44d6c>
  448330:	mov	w21, #0x0                   	// #0
  448334:	b	4482c4 <ferror@plt+0x44cf4>
  448338:	cbnz	w21, 4482d4 <ferror@plt+0x44d04>
  44833c:	ldp	x19, x20, [sp, #16]
  448340:	ldp	x21, x22, [sp, #32]
  448344:	ldp	x29, x30, [sp], #48
  448348:	ret
  44834c:	stp	x29, x30, [sp, #-48]!
  448350:	mov	x29, sp
  448354:	stp	x19, x20, [sp, #16]
  448358:	mov	x19, x0
  44835c:	ldr	w0, [x0, #1200]
  448360:	str	x21, [sp, #32]
  448364:	mov	x20, x1
  448368:	cbz	w0, 448388 <ferror@plt+0x44db8>
  44836c:	ldr	x0, [x19, #712]
  448370:	cbnz	x0, 44837c <ferror@plt+0x44dac>
  448374:	bl	445560 <ferror@plt+0x41f90>
  448378:	str	x0, [x19, #712]
  44837c:	ldr	x0, [x19, #712]
  448380:	mov	x1, x20
  448384:	bl	4456ac <ferror@plt+0x420dc>
  448388:	add	x2, x19, #0xd8
  44838c:	mov	x1, x20
  448390:	mov	w6, #0x0                   	// #0
  448394:	mov	w5, #0x0                   	// #0
  448398:	mov	w4, #0x0                   	// #0
  44839c:	mov	w3, #0x0                   	// #0
  4483a0:	mov	x0, x19
  4483a4:	bl	439ca4 <ferror@plt+0x366d4>
  4483a8:	str	x0, [x19, #288]
  4483ac:	bl	439c94 <ferror@plt+0x366c4>
  4483b0:	tst	w0, #0xff
  4483b4:	b.ne	448478 <ferror@plt+0x44ea8>  // b.any
  4483b8:	ldr	x1, [x19, #288]
  4483bc:	mov	x0, x19
  4483c0:	mov	w3, #0x0                   	// #0
  4483c4:	mov	w2, #0x0                   	// #0
  4483c8:	bl	43a478 <ferror@plt+0x36ea8>
  4483cc:	ldrb	w0, [x19, #1155]
  4483d0:	cbz	w0, 448454 <ferror@plt+0x44e84>
  4483d4:	mov	x0, x19
  4483d8:	bl	43db44 <ferror@plt+0x3a574>
  4483dc:	mov	x20, x0
  4483e0:	ldrb	w0, [x0, #4]
  4483e4:	cmp	w0, #0x25
  4483e8:	b.ne	448468 <ferror@plt+0x44e98>  // b.any
  4483ec:	mov	w0, #0x1                   	// #1
  4483f0:	strb	w0, [x19, #16]
  4483f4:	mov	x0, x19
  4483f8:	bl	43db44 <ferror@plt+0x3a574>
  4483fc:	mov	x21, x0
  448400:	mov	w1, #0x1                   	// #1
  448404:	mov	x0, x19
  448408:	bl	442800 <ferror@plt+0x3f230>
  44840c:	strb	wzr, [x19, #16]
  448410:	ldrb	w0, [x21, #4]
  448414:	cmp	w0, #0x37
  448418:	b.ne	448468 <ferror@plt+0x44e98>  // b.any
  44841c:	ldrh	w1, [x20, #6]
  448420:	mov	x0, x19
  448424:	and	w1, w1, #0x1
  448428:	bl	434264 <ferror@plt+0x30c94>
  44842c:	cbz	w0, 448468 <ferror@plt+0x44e98>
  448430:	mov	x0, x19
  448434:	bl	447a70 <ferror@plt+0x444a0>
  448438:	ldr	x1, [x19, #40]
  44843c:	mov	w2, #0x18                  	// #24
  448440:	ldr	w0, [x1, #12]
  448444:	ldr	x1, [x1]
  448448:	sub	w0, w0, #0x1
  44844c:	smaddl	x0, w0, w2, x1
  448450:	ldr	x20, [x0, #8]
  448454:	mov	x0, x20
  448458:	ldp	x19, x20, [sp, #16]
  44845c:	ldr	x21, [sp, #32]
  448460:	ldp	x29, x30, [sp], #48
  448464:	ret
  448468:	mov	x0, x19
  44846c:	mov	w1, #0x1                   	// #1
  448470:	bl	442800 <ferror@plt+0x3f230>
  448474:	b	448438 <ferror@plt+0x44e68>
  448478:	mov	x20, #0x0                   	// #0
  44847c:	b	448454 <ferror@plt+0x44e84>
  448480:	stp	x29, x30, [sp, #-32]!
  448484:	mov	x29, sp
  448488:	stp	x19, x20, [sp, #16]
  44848c:	mov	x20, x1
  448490:	mov	x19, x0
  448494:	ldrb	w1, [x0, #1151]
  448498:	cbz	w1, 4484ac <ferror@plt+0x44edc>
  44849c:	adrp	x1, 441000 <ferror@plt+0x3da30>
  4484a0:	mov	x2, #0x0                   	// #0
  4484a4:	add	x1, x1, #0xeb4
  4484a8:	bl	43b2f0 <ferror@plt+0x37d20>
  4484ac:	ldr	x0, [x19]
  4484b0:	cbz	x0, 4484c0 <ferror@plt+0x44ef0>
  4484b4:	mov	x0, x19
  4484b8:	bl	434ea4 <ferror@plt+0x318d4>
  4484bc:	b	4484ac <ferror@plt+0x44edc>
  4484c0:	ldr	w0, [x19, #1200]
  4484c4:	cbz	w0, 4484f0 <ferror@plt+0x44f20>
  4484c8:	cbz	x20, 4484f0 <ferror@plt+0x44f20>
  4484cc:	ldr	x0, [x19, #712]
  4484d0:	mov	x1, x20
  4484d4:	mov	w2, #0x48                  	// #72
  4484d8:	bl	4458a8 <ferror@plt+0x422d8>
  4484dc:	ldrb	w0, [x19, #1205]
  4484e0:	cbz	w0, 4484f0 <ferror@plt+0x44f20>
  4484e4:	ldr	x0, [x19, #712]
  4484e8:	mov	x1, x20
  4484ec:	bl	4459f8 <ferror@plt+0x42428>
  4484f0:	ldrb	w0, [x19, #1131]
  4484f4:	cbz	w0, 448508 <ferror@plt+0x44f38>
  4484f8:	mov	x0, x19
  4484fc:	ldp	x19, x20, [sp, #16]
  448500:	ldp	x29, x30, [sp], #32
  448504:	b	43abf8 <ferror@plt+0x37628>
  448508:	ldp	x19, x20, [sp, #16]
  44850c:	ldp	x29, x30, [sp], #32
  448510:	ret
  448514:	stp	x29, x30, [sp, #-112]!
  448518:	mov	x29, sp
  44851c:	stp	x19, x20, [sp, #16]
  448520:	add	x20, sp, #0x28
  448524:	stp	xzr, xzr, [sp, #48]
  448528:	str	x0, [sp, #40]
  44852c:	mov	x0, x20
  448530:	str	w1, [sp, #48]
  448534:	mov	x1, #0x48                  	// #72
  448538:	stp	xzr, xzr, [sp, #64]
  44853c:	stp	xzr, xzr, [sp, #80]
  448540:	stp	xzr, xzr, [sp, #96]
  448544:	bl	4487bc <ferror@plt+0x451ec>
  448548:	mov	x19, x0
  44854c:	cbz	x0, 44855c <ferror@plt+0x44f8c>
  448550:	mov	x1, x20
  448554:	mov	x2, #0x48                  	// #72
  448558:	bl	402cd0 <memcpy@plt>
  44855c:	mov	x0, x19
  448560:	ldp	x19, x20, [sp, #16]
  448564:	ldp	x29, x30, [sp], #112
  448568:	ret
  44856c:	stp	x29, x30, [sp, #-48]!
  448570:	mov	x29, sp
  448574:	str	x19, [sp, #16]
  448578:	mov	x19, x1
  44857c:	add	x1, sp, #0x2c
  448580:	str	wzr, [sp, #44]
  448584:	bl	4741f8 <_obstack_memory_used@@Base+0x17e08>
  448588:	mov	x1, x0
  44858c:	ldr	w0, [x19]
  448590:	cmp	w0, #0x0
  448594:	b.le	4485b0 <ferror@plt+0x44fe0>
  448598:	sub	w0, w0, #0x1
  44859c:	str	w0, [x19]
  4485a0:	mov	w0, #0x0                   	// #0
  4485a4:	ldr	x19, [sp, #16]
  4485a8:	ldp	x29, x30, [sp], #48
  4485ac:	ret
  4485b0:	ldr	w0, [sp, #44]
  4485b4:	ldr	w2, [x19, #44]
  4485b8:	cmp	w0, #0x0
  4485bc:	cset	x0, eq  // eq = none
  4485c0:	sub	x1, x1, x0
  4485c4:	ldr	x5, [x19, #16]
  4485c8:	ldr	x0, [x19, #32]
  4485cc:	cbnz	w2, 4485f8 <ferror@plt+0x45028>
  4485d0:	mov	x4, #0x0                   	// #0
  4485d4:	mov	w3, #0x0                   	// #0
  4485d8:	mov	x2, #0x0                   	// #0
  4485dc:	blr	x5
  4485e0:	str	w0, [x19, #40]
  4485e4:	ldr	w0, [x19, #40]
  4485e8:	cmp	w0, #0x0
  4485ec:	mov	w0, #0x5                   	// #5
  4485f0:	csel	w0, wzr, w0, eq  // eq = none
  4485f4:	b	4485a4 <ferror@plt+0x44fd4>
  4485f8:	mov	x4, x0
  4485fc:	mov	x2, x5
  448600:	ldr	x0, [x19, #8]
  448604:	ldr	x3, [x19, #24]
  448608:	bl	448c54 <ferror@plt+0x45684>
  44860c:	b	4485e0 <ferror@plt+0x45010>
  448610:	stp	x29, x30, [sp, #-80]!
  448614:	add	w1, w1, #0x1
  448618:	mov	x29, sp
  44861c:	str	x19, [sp, #16]
  448620:	mov	x19, x0
  448624:	str	w1, [sp, #32]
  448628:	mov	x1, #0x1000                	// #4096
  44862c:	stp	x0, x2, [sp, #40]
  448630:	mov	x2, #0x0                   	// #0
  448634:	stp	x3, x4, [sp, #56]
  448638:	mov	x3, #0x0                   	// #0
  44863c:	str	wzr, [sp, #72]
  448640:	bl	4487bc <ferror@plt+0x451ec>
  448644:	cbnz	x0, 44866c <ferror@plt+0x4509c>
  448648:	str	wzr, [sp, #76]
  44864c:	add	x1, sp, #0x20
  448650:	adrp	x0, 448000 <ferror@plt+0x44a30>
  448654:	add	x0, x0, #0x56c
  448658:	bl	474840 <_obstack_memory_used@@Base+0x18450>
  44865c:	ldr	w0, [sp, #72]
  448660:	ldr	x19, [sp, #16]
  448664:	ldp	x29, x30, [sp], #80
  448668:	ret
  44866c:	mov	x1, x0
  448670:	mov	x4, #0x0                   	// #0
  448674:	mov	x0, x19
  448678:	mov	x3, #0x0                   	// #0
  44867c:	mov	x2, #0x1000                	// #4096
  448680:	bl	448700 <ferror@plt+0x45130>
  448684:	mov	w0, #0x1                   	// #1
  448688:	str	w0, [sp, #76]
  44868c:	b	44864c <ferror@plt+0x4507c>
  448690:	ldr	x4, [x0, #64]
  448694:	add	x5, x0, #0x40
  448698:	mov	x3, #0x0                   	// #0
  44869c:	mov	x6, #0x0                   	// #0
  4486a0:	cbnz	x4, 4486d4 <ferror@plt+0x45104>
  4486a4:	cmp	x6, #0xf
  4486a8:	b.ls	4486c4 <ferror@plt+0x450f4>  // b.plast
  4486ac:	ldr	x4, [x3]
  4486b0:	ldr	x5, [x4, #8]
  4486b4:	cmp	x5, x2
  4486b8:	b.cs	4486d0 <ferror@plt+0x45100>  // b.hs, b.nlast
  4486bc:	ldr	x4, [x4]
  4486c0:	str	x4, [x3]
  4486c4:	ldr	x3, [x0, #64]
  4486c8:	stp	x3, x2, [x1]
  4486cc:	str	x1, [x0, #64]
  4486d0:	ret
  4486d4:	cbz	x3, 4486ec <ferror@plt+0x4511c>
  4486d8:	ldr	x7, [x3]
  4486dc:	ldr	x8, [x4, #8]
  4486e0:	ldr	x7, [x7, #8]
  4486e4:	cmp	x8, x7
  4486e8:	csel	x5, x5, x3, cc  // cc = lo, ul, last
  4486ec:	mov	x3, x5
  4486f0:	add	x6, x6, #0x1
  4486f4:	mov	x5, x4
  4486f8:	ldr	x4, [x4]
  4486fc:	b	4486a0 <ferror@plt+0x450d0>
  448700:	stp	x29, x30, [sp, #-48]!
  448704:	mov	x29, sp
  448708:	stp	x19, x20, [sp, #16]
  44870c:	mov	x19, x0
  448710:	mov	x20, x2
  448714:	str	x21, [sp, #32]
  448718:	mov	x0, #0xffff                	// #65535
  44871c:	mov	x21, x1
  448720:	cmp	x2, x0
  448724:	b.hi	448778 <ferror@plt+0x451a8>  // b.pmore
  448728:	ldr	w0, [x19, #8]
  44872c:	cbz	w0, 4487b0 <ferror@plt+0x451e0>
  448730:	add	x0, x19, #0x3c
  448734:	mov	w2, #0x1                   	// #1
  448738:	ldxr	w1, [x0]
  44873c:	stxr	w3, w2, [x0]
  448740:	cbnz	w3, 448738 <ferror@plt+0x45168>
  448744:	dmb	ish
  448748:	cbnz	w1, 4487a0 <ferror@plt+0x451d0>
  44874c:	cmp	x20, #0xf
  448750:	b.ls	448764 <ferror@plt+0x45194>  // b.plast
  448754:	mov	x2, x20
  448758:	mov	x1, x21
  44875c:	mov	x0, x19
  448760:	bl	448690 <ferror@plt+0x450c0>
  448764:	ldr	w0, [x19, #8]
  448768:	cbz	w0, 4487a0 <ferror@plt+0x451d0>
  44876c:	add	x19, x19, #0x3c
  448770:	stlr	wzr, [x19]
  448774:	b	4487a0 <ferror@plt+0x451d0>
  448778:	bl	4030c0 <getpagesize@plt>
  44877c:	sxtw	x0, w0
  448780:	sub	x0, x0, #0x1
  448784:	orr	x1, x21, x20
  448788:	tst	x0, x1
  44878c:	b.ne	448728 <ferror@plt+0x45158>  // b.any
  448790:	mov	x1, x20
  448794:	mov	x0, x21
  448798:	bl	403340 <munmap@plt>
  44879c:	cbnz	w0, 448728 <ferror@plt+0x45158>
  4487a0:	ldp	x19, x20, [sp, #16]
  4487a4:	ldr	x21, [sp, #32]
  4487a8:	ldp	x29, x30, [sp], #48
  4487ac:	ret
  4487b0:	cmp	x20, #0xf
  4487b4:	b.hi	448754 <ferror@plt+0x45184>  // b.pmore
  4487b8:	b	4487a0 <ferror@plt+0x451d0>
  4487bc:	stp	x29, x30, [sp, #-64]!
  4487c0:	mov	x29, sp
  4487c4:	stp	x21, x22, [sp, #32]
  4487c8:	mov	x21, x0
  4487cc:	ldr	w0, [x0, #8]
  4487d0:	stp	x19, x20, [sp, #16]
  4487d4:	mov	x19, x1
  4487d8:	stp	x23, x24, [sp, #48]
  4487dc:	mov	x23, x2
  4487e0:	mov	x24, x3
  4487e4:	cbnz	w0, 448858 <ferror@plt+0x45288>
  4487e8:	ldr	x20, [x21, #64]
  4487ec:	add	x0, x21, #0x40
  4487f0:	cbz	x20, 44882c <ferror@plt+0x4525c>
  4487f4:	ldp	x1, x2, [x20]
  4487f8:	cmp	x2, x19
  4487fc:	b.cc	4488d8 <ferror@plt+0x45308>  // b.lo, b.ul, b.last
  448800:	add	x19, x19, #0x7
  448804:	str	x1, [x0]
  448808:	and	x19, x19, #0xfffffffffffffff8
  44880c:	cmp	x2, x19
  448810:	b.ls	44882c <ferror@plt+0x4525c>  // b.plast
  448814:	sub	x2, x2, x19
  448818:	cmp	x2, #0xf
  44881c:	b.ls	44882c <ferror@plt+0x4525c>  // b.plast
  448820:	add	x1, x20, x19
  448824:	mov	x0, x21
  448828:	bl	448690 <ferror@plt+0x450c0>
  44882c:	ldr	w0, [x21, #8]
  448830:	cbz	w0, 44883c <ferror@plt+0x4526c>
  448834:	add	x0, x21, #0x3c
  448838:	stlr	wzr, [x0]
  44883c:	cbz	x20, 448874 <ferror@plt+0x452a4>
  448840:	mov	x0, x20
  448844:	ldp	x19, x20, [sp, #16]
  448848:	ldp	x21, x22, [sp, #32]
  44884c:	ldp	x23, x24, [sp, #48]
  448850:	ldp	x29, x30, [sp], #64
  448854:	ret
  448858:	add	x0, x21, #0x3c
  44885c:	mov	w2, #0x1                   	// #1
  448860:	ldxr	w1, [x0]
  448864:	stxr	w3, w2, [x0]
  448868:	cbnz	w3, 448860 <ferror@plt+0x45290>
  44886c:	dmb	ish
  448870:	cbz	w1, 4487e8 <ferror@plt+0x45218>
  448874:	bl	4030c0 <getpagesize@plt>
  448878:	sub	x22, x19, #0x1
  44887c:	sxtw	x2, w0
  448880:	add	x0, x22, w0, sxtw
  448884:	neg	x22, x2
  448888:	mov	x5, #0x0                   	// #0
  44888c:	and	x22, x0, x22
  448890:	mov	w4, #0xffffffff            	// #-1
  448894:	mov	x1, x22
  448898:	mov	w3, #0x22                  	// #34
  44889c:	mov	w2, #0x3                   	// #3
  4488a0:	mov	x0, #0x0                   	// #0
  4488a4:	bl	403250 <mmap@plt>
  4488a8:	mov	x20, x0
  4488ac:	cmn	x0, #0x1
  4488b0:	b.ne	4488e4 <ferror@plt+0x45314>  // b.any
  4488b4:	cbz	x23, 4488d0 <ferror@plt+0x45300>
  4488b8:	bl	4034e0 <__errno_location@plt>
  4488bc:	ldr	w2, [x0]
  4488c0:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  4488c4:	mov	x0, x24
  4488c8:	add	x1, x1, #0x3f8
  4488cc:	blr	x23
  4488d0:	mov	x20, #0x0                   	// #0
  4488d4:	b	448840 <ferror@plt+0x45270>
  4488d8:	mov	x0, x20
  4488dc:	mov	x20, x1
  4488e0:	b	4487f0 <ferror@plt+0x45220>
  4488e4:	add	x19, x19, #0x7
  4488e8:	and	x19, x19, #0xfffffffffffffff8
  4488ec:	cmp	x22, x19
  4488f0:	b.ls	448840 <ferror@plt+0x45270>  // b.plast
  4488f4:	add	x1, x0, x19
  4488f8:	mov	x4, x24
  4488fc:	mov	x3, x23
  448900:	sub	x2, x22, x19
  448904:	mov	x0, x21
  448908:	bl	448700 <ferror@plt+0x45130>
  44890c:	b	448840 <ferror@plt+0x45270>
  448910:	stp	x29, x30, [sp, #-96]!
  448914:	mov	x29, sp
  448918:	stp	x23, x24, [sp, #48]
  44891c:	mov	x23, x0
  448920:	ldr	x0, [x4, #16]
  448924:	stp	x19, x20, [sp, #16]
  448928:	mov	x19, x4
  44892c:	stp	x21, x22, [sp, #32]
  448930:	cmp	x0, x1
  448934:	mov	x22, x1
  448938:	stp	x25, x26, [sp, #64]
  44893c:	str	x27, [sp, #80]
  448940:	b.cs	4489bc <ferror@plt+0x453ec>  // b.hs, b.nlast
  448944:	ldr	x0, [x4, #8]
  448948:	mov	x24, x2
  44894c:	mov	x25, x3
  448950:	add	x21, x1, x0
  448954:	cbnz	x0, 4489f4 <ferror@plt+0x45424>
  448958:	lsl	x20, x21, #4
  44895c:	mov	x3, x25
  448960:	mov	x2, x24
  448964:	mov	x1, x20
  448968:	mov	x0, x23
  44896c:	bl	4487bc <ferror@plt+0x451ec>
  448970:	mov	x21, x0
  448974:	cbz	x0, 4489d4 <ferror@plt+0x45404>
  448978:	ldr	x26, [x19]
  44897c:	cbz	x26, 4489ac <ferror@plt+0x453dc>
  448980:	ldr	x27, [x19, #8]
  448984:	mov	x1, x26
  448988:	mov	x2, x27
  44898c:	bl	402cd0 <memcpy@plt>
  448990:	ldr	x2, [x19, #16]
  448994:	mov	x4, x25
  448998:	mov	x3, x24
  44899c:	mov	x1, x26
  4489a0:	mov	x0, x23
  4489a4:	add	x2, x27, x2
  4489a8:	bl	448700 <ferror@plt+0x45130>
  4489ac:	ldr	x0, [x19, #8]
  4489b0:	str	x21, [x19]
  4489b4:	sub	x20, x20, x0
  4489b8:	str	x20, [x19, #16]
  4489bc:	ldp	x21, x0, [x19]
  4489c0:	ldr	x1, [x19, #16]
  4489c4:	add	x21, x21, x0
  4489c8:	add	x0, x0, x22
  4489cc:	sub	x22, x1, x22
  4489d0:	stp	x0, x22, [x19, #8]
  4489d4:	mov	x0, x21
  4489d8:	ldp	x19, x20, [sp, #16]
  4489dc:	ldp	x21, x22, [sp, #32]
  4489e0:	ldp	x23, x24, [sp, #48]
  4489e4:	ldp	x25, x26, [sp, #64]
  4489e8:	ldr	x27, [sp, #80]
  4489ec:	ldp	x29, x30, [sp], #96
  4489f0:	ret
  4489f4:	bl	4030c0 <getpagesize@plt>
  4489f8:	lsl	x20, x21, #1
  4489fc:	sxtw	x1, w0
  448a00:	cmp	x21, w0, sxtw
  448a04:	b.cs	448a14 <ferror@plt+0x45444>  // b.hs, b.nlast
  448a08:	cmp	x1, x20
  448a0c:	csel	x20, x1, x20, ls  // ls = plast
  448a10:	b	44895c <ferror@plt+0x4538c>
  448a14:	sub	x20, x20, #0x1
  448a18:	add	x20, x20, x1
  448a1c:	neg	x1, x1
  448a20:	and	x20, x20, x1
  448a24:	b	44895c <ferror@plt+0x4538c>
  448a28:	ldp	x0, x2, [x1]
  448a2c:	add	x2, x0, x2
  448a30:	stp	x2, xzr, [x1]
  448a34:	ret
  448a38:	stp	x29, x30, [sp, #-32]!
  448a3c:	mov	x29, sp
  448a40:	ldr	x5, [x1, #8]
  448a44:	str	x19, [sp, #16]
  448a48:	mov	x19, x1
  448a4c:	add	x1, x5, #0x7
  448a50:	and	x1, x1, #0xfffffffffffffff8
  448a54:	ldr	x4, [x19, #16]
  448a58:	ldr	x6, [x19]
  448a5c:	add	x5, x5, x4
  448a60:	mov	x4, x3
  448a64:	mov	x3, x2
  448a68:	sub	x2, x5, x1
  448a6c:	add	x1, x6, x1
  448a70:	bl	448700 <ferror@plt+0x45130>
  448a74:	str	xzr, [x19, #16]
  448a78:	ldr	x0, [x19, #8]
  448a7c:	cbnz	x0, 448a84 <ferror@plt+0x454b4>
  448a80:	str	xzr, [x19]
  448a84:	mov	w0, #0x1                   	// #1
  448a88:	ldr	x19, [sp, #16]
  448a8c:	ldp	x29, x30, [sp], #32
  448a90:	ret
  448a94:	stp	x29, x30, [sp, #-160]!
  448a98:	mov	x29, sp
  448a9c:	stp	x19, x20, [sp, #16]
  448aa0:	mov	x19, x0
  448aa4:	ldr	w0, [x0, #8]
  448aa8:	stp	x21, x22, [sp, #32]
  448aac:	mov	x21, x1
  448ab0:	mov	x22, x2
  448ab4:	stp	x23, x24, [sp, #48]
  448ab8:	stp	x25, x26, [sp, #64]
  448abc:	cbnz	w0, 448b28 <ferror@plt+0x45558>
  448ac0:	ldr	w0, [x19, #56]
  448ac4:	cbnz	w0, 448b0c <ferror@plt+0x4553c>
  448ac8:	ldr	x0, [x19, #24]
  448acc:	str	x0, [sp, #88]
  448ad0:	ldr	x0, [sp, #88]
  448ad4:	cbnz	x0, 448c18 <ferror@plt+0x45648>
  448ad8:	adrp	x23, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448adc:	adrp	x24, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448ae0:	add	x25, sp, #0x54
  448ae4:	add	x23, x23, #0x48c
  448ae8:	add	x24, x24, #0x410
  448aec:	mov	w26, #0x0                   	// #0
  448af0:	sub	w0, w26, #0x1
  448af4:	cmp	w0, #0x3
  448af8:	b.hi	448b48 <ferror@plt+0x45578>  // b.pmore
  448afc:	ldrb	w0, [x23, w0, uxtw]
  448b00:	adr	x1, 448b0c <ferror@plt+0x4553c>
  448b04:	add	x0, x1, w0, sxtb #2
  448b08:	br	x0
  448b0c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448b10:	mov	x0, x22
  448b14:	add	x1, x1, #0x41f
  448b18:	mov	w2, #0xffffffff            	// #-1
  448b1c:	blr	x21
  448b20:	mov	w0, #0x0                   	// #0
  448b24:	b	448ba4 <ferror@plt+0x455d4>
  448b28:	add	x0, x19, #0x38
  448b2c:	ldar	w0, [x0]
  448b30:	cbnz	w0, 448b0c <ferror@plt+0x4553c>
  448b34:	ldr	w0, [x19, #8]
  448b38:	cbz	w0, 448ac8 <ferror@plt+0x454f8>
  448b3c:	add	x0, x19, #0x18
  448b40:	ldar	x0, [x0]
  448b44:	b	448acc <ferror@plt+0x454fc>
  448b48:	ldr	x20, [x19]
  448b4c:	cbz	x20, 448b74 <ferror@plt+0x455a4>
  448b50:	mov	x2, x22
  448b54:	mov	x3, x25
  448b58:	mov	x1, x21
  448b5c:	mov	x0, x20
  448b60:	bl	448d58 <ferror@plt+0x45788>
  448b64:	mov	w2, w0
  448b68:	tbz	w0, #31, 448c20 <ferror@plt+0x45650>
  448b6c:	ldr	w0, [sp, #84]
  448b70:	cbz	w0, 448b94 <ferror@plt+0x455c4>
  448b74:	add	w26, w26, #0x1
  448b78:	cmp	w26, #0x5
  448b7c:	b.ne	448af0 <ferror@plt+0x45520>  // b.any
  448b80:	ldr	x1, [x19]
  448b84:	cbz	x1, 448bf4 <ferror@plt+0x45624>
  448b88:	mov	w2, #0x2                   	// #2
  448b8c:	mov	x0, x22
  448b90:	blr	x21
  448b94:	ldr	w0, [x19, #8]
  448b98:	cbnz	w0, 448c04 <ferror@plt+0x45634>
  448b9c:	mov	w1, #0x1                   	// #1
  448ba0:	str	w1, [x19, #56]
  448ba4:	ldp	x19, x20, [sp, #16]
  448ba8:	ldp	x21, x22, [sp, #32]
  448bac:	ldp	x23, x24, [sp, #48]
  448bb0:	ldp	x25, x26, [sp, #64]
  448bb4:	ldp	x29, x30, [sp], #160
  448bb8:	ret
  448bbc:	bl	402f00 <getpid@plt>
  448bc0:	add	x20, sp, #0x60
  448bc4:	sxtw	x3, w0
  448bc8:	adrp	x2, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448bcc:	mov	x0, x20
  448bd0:	add	x2, x2, #0x445
  448bd4:	mov	x1, #0x40                  	// #64
  448bd8:	bl	402ea0 <snprintf@plt>
  448bdc:	b	448b50 <ferror@plt+0x45580>
  448be0:	adrp	x20, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448be4:	add	x20, x20, #0x3fd
  448be8:	b	448b50 <ferror@plt+0x45580>
  448bec:	mov	x20, x24
  448bf0:	b	448b50 <ferror@plt+0x45580>
  448bf4:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448bf8:	mov	w2, #0x0                   	// #0
  448bfc:	add	x1, x1, #0x45c
  448c00:	b	448b8c <ferror@plt+0x455bc>
  448c04:	mov	w0, #0x1                   	// #1
  448c08:	add	x19, x19, #0x38
  448c0c:	stlr	w0, [x19]
  448c10:	b	448b20 <ferror@plt+0x45550>
  448c14:	str	x1, [x19, #24]
  448c18:	mov	w0, #0x1                   	// #1
  448c1c:	b	448ba4 <ferror@plt+0x455d4>
  448c20:	add	x5, sp, #0x58
  448c24:	mov	x4, x22
  448c28:	mov	x3, x21
  448c2c:	mov	x1, x20
  448c30:	mov	x0, x19
  448c34:	bl	44b870 <ferror@plt+0x482a0>
  448c38:	cbz	w0, 448b94 <ferror@plt+0x455c4>
  448c3c:	ldr	w0, [x19, #8]
  448c40:	ldr	x1, [sp, #88]
  448c44:	cbz	w0, 448c14 <ferror@plt+0x45644>
  448c48:	add	x19, x19, #0x18
  448c4c:	stlr	x1, [x19]
  448c50:	b	448c18 <ferror@plt+0x45648>
  448c54:	stp	x29, x30, [sp, #-64]!
  448c58:	mov	x29, sp
  448c5c:	stp	x19, x20, [sp, #16]
  448c60:	mov	x19, x0
  448c64:	mov	x20, x3
  448c68:	stp	x21, x22, [sp, #32]
  448c6c:	mov	x22, x1
  448c70:	mov	x21, x4
  448c74:	mov	x1, x3
  448c78:	str	x23, [sp, #48]
  448c7c:	mov	x23, x2
  448c80:	mov	x2, x4
  448c84:	bl	448a94 <ferror@plt+0x454c4>
  448c88:	cbz	w0, 448cc4 <ferror@plt+0x456f4>
  448c8c:	ldr	w0, [x19, #56]
  448c90:	cbnz	w0, 448cc4 <ferror@plt+0x456f4>
  448c94:	mov	x4, x21
  448c98:	mov	x3, x20
  448c9c:	mov	x2, x23
  448ca0:	mov	x1, x22
  448ca4:	mov	x0, x19
  448ca8:	ldr	x5, [x19, #24]
  448cac:	ldp	x19, x20, [sp, #16]
  448cb0:	mov	x16, x5
  448cb4:	ldp	x21, x22, [sp, #32]
  448cb8:	ldr	x23, [sp, #48]
  448cbc:	ldp	x29, x30, [sp], #64
  448cc0:	br	x16
  448cc4:	mov	w0, #0x0                   	// #0
  448cc8:	ldp	x19, x20, [sp, #16]
  448ccc:	ldp	x21, x22, [sp, #32]
  448cd0:	ldr	x23, [sp, #48]
  448cd4:	ldp	x29, x30, [sp], #64
  448cd8:	ret
  448cdc:	stp	x29, x30, [sp, #-64]!
  448ce0:	mov	x29, sp
  448ce4:	stp	x19, x20, [sp, #16]
  448ce8:	mov	x19, x0
  448cec:	mov	x20, x3
  448cf0:	stp	x21, x22, [sp, #32]
  448cf4:	mov	x22, x1
  448cf8:	mov	x21, x4
  448cfc:	mov	x1, x3
  448d00:	str	x23, [sp, #48]
  448d04:	mov	x23, x2
  448d08:	mov	x2, x4
  448d0c:	bl	448a94 <ferror@plt+0x454c4>
  448d10:	cbz	w0, 448d3c <ferror@plt+0x4576c>
  448d14:	ldr	w0, [x19, #56]
  448d18:	cbnz	w0, 448d50 <ferror@plt+0x45780>
  448d1c:	ldr	x5, [x19, #40]
  448d20:	mov	x0, x19
  448d24:	mov	x4, x21
  448d28:	mov	x3, x20
  448d2c:	mov	x2, x23
  448d30:	mov	x1, x22
  448d34:	blr	x5
  448d38:	mov	w0, #0x1                   	// #1
  448d3c:	ldp	x19, x20, [sp, #16]
  448d40:	ldp	x21, x22, [sp, #32]
  448d44:	ldr	x23, [sp, #48]
  448d48:	ldp	x29, x30, [sp], #64
  448d4c:	ret
  448d50:	mov	w0, #0x0                   	// #0
  448d54:	b	448d3c <ferror@plt+0x4576c>
  448d58:	stp	x29, x30, [sp, #-64]!
  448d5c:	mov	x29, sp
  448d60:	stp	x19, x20, [sp, #16]
  448d64:	mov	x20, x3
  448d68:	stp	x21, x22, [sp, #32]
  448d6c:	mov	x21, x0
  448d70:	mov	x22, x1
  448d74:	str	x23, [sp, #48]
  448d78:	mov	x23, x2
  448d7c:	cbz	x3, 448d84 <ferror@plt+0x457b4>
  448d80:	str	wzr, [x3]
  448d84:	mov	x0, x21
  448d88:	mov	w1, #0x80000               	// #524288
  448d8c:	bl	402f50 <open@plt>
  448d90:	mov	w19, w0
  448d94:	tbz	w0, #31, 448de0 <ferror@plt+0x45810>
  448d98:	bl	4034e0 <__errno_location@plt>
  448d9c:	ldr	w2, [x0]
  448da0:	cbz	x20, 448dd0 <ferror@plt+0x45800>
  448da4:	cmp	w2, #0x2
  448da8:	b.ne	448dd0 <ferror@plt+0x45800>  // b.any
  448dac:	mov	w0, #0x1                   	// #1
  448db0:	str	w0, [x20]
  448db4:	mov	w19, #0xffffffff            	// #-1
  448db8:	mov	w0, w19
  448dbc:	ldp	x19, x20, [sp, #16]
  448dc0:	ldp	x21, x22, [sp, #32]
  448dc4:	ldr	x23, [sp, #48]
  448dc8:	ldp	x29, x30, [sp], #64
  448dcc:	ret
  448dd0:	mov	x1, x21
  448dd4:	mov	x0, x23
  448dd8:	blr	x22
  448ddc:	b	448db4 <ferror@plt+0x457e4>
  448de0:	mov	w2, #0x1                   	// #1
  448de4:	mov	w1, #0x2                   	// #2
  448de8:	bl	403330 <fcntl@plt>
  448dec:	b	448db8 <ferror@plt+0x457e8>
  448df0:	stp	x29, x30, [sp, #-32]!
  448df4:	mov	x29, sp
  448df8:	stp	x19, x20, [sp, #16]
  448dfc:	mov	x19, x1
  448e00:	mov	x20, x2
  448e04:	bl	403120 <close@plt>
  448e08:	tbz	w0, #31, 448e34 <ferror@plt+0x45864>
  448e0c:	bl	4034e0 <__errno_location@plt>
  448e10:	ldr	w2, [x0]
  448e14:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448e18:	mov	x0, x20
  448e1c:	add	x1, x1, #0x490
  448e20:	blr	x19
  448e24:	mov	w0, #0x0                   	// #0
  448e28:	ldp	x19, x20, [sp, #16]
  448e2c:	ldp	x29, x30, [sp], #32
  448e30:	ret
  448e34:	mov	w0, #0x1                   	// #1
  448e38:	b	448e28 <ferror@plt+0x45858>
  448e3c:	stp	x29, x30, [sp, #-16]!
  448e40:	mov	x0, x4
  448e44:	mov	w2, #0xffffffff            	// #-1
  448e48:	mov	x29, sp
  448e4c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448e50:	add	x1, x1, #0x496
  448e54:	blr	x3
  448e58:	mov	w0, #0x0                   	// #0
  448e5c:	ldp	x29, x30, [sp], #16
  448e60:	ret
  448e64:	mov	x16, x3
  448e68:	mov	x0, x4
  448e6c:	mov	w2, #0xffffffff            	// #-1
  448e70:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  448e74:	add	x1, x1, #0x4b6
  448e78:	br	x16
  448e7c:	ldr	x2, [x0, #8]
  448e80:	ldr	x1, [x1, #8]
  448e84:	cmp	x2, x1
  448e88:	cset	w0, hi  // hi = pmore
  448e8c:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  448e90:	ret
  448e94:	ldr	x2, [x0]
  448e98:	ldr	x0, [x1, #8]
  448e9c:	cmp	x0, x2
  448ea0:	b.hi	448eb8 <ferror@plt+0x458e8>  // b.pmore
  448ea4:	ldr	x1, [x1, #16]
  448ea8:	add	x0, x0, x1
  448eac:	cmp	x0, x2
  448eb0:	cset	w0, ls  // ls = plast
  448eb4:	ret
  448eb8:	mov	w0, #0xffffffff            	// #-1
  448ebc:	b	448eb4 <ferror@plt+0x458e4>
  448ec0:	stp	x29, x30, [sp, #-192]!
  448ec4:	mov	x4, #0x0                   	// #0
  448ec8:	mov	x29, sp
  448ecc:	add	x6, sp, #0xa0
  448ed0:	add	x8, sp, #0x80
  448ed4:	stp	x19, x20, [sp, #16]
  448ed8:	add	x20, x2, #0x1, lsl #12
  448edc:	add	x19, sp, #0x60
  448ee0:	stp	x21, x22, [sp, #32]
  448ee4:	stp	x23, x24, [sp, #48]
  448ee8:	str	x25, [sp, #64]
  448eec:	stp	xzr, xzr, [sp, #96]
  448ef0:	stp	xzr, xzr, [sp, #112]
  448ef4:	ldrb	w7, [x0, x4]
  448ef8:	cmp	w7, #0xf
  448efc:	b.ls	448f1c <ferror@plt+0x4594c>  // b.plast
  448f00:	mov	w0, #0x0                   	// #0
  448f04:	ldp	x19, x20, [sp, #16]
  448f08:	ldp	x21, x22, [sp, #32]
  448f0c:	ldp	x23, x24, [sp, #48]
  448f10:	ldr	x25, [sp, #64]
  448f14:	ldp	x29, x30, [sp], #192
  448f18:	ret
  448f1c:	sbfiz	x5, x7, #1, #32
  448f20:	ldrh	w7, [x19, w7, sxtw #1]
  448f24:	and	w2, w4, #0xffff
  448f28:	cbnz	w7, 449088 <ferror@plt+0x45ab8>
  448f2c:	strh	w2, [x8, x5]
  448f30:	strh	w2, [x6, x5]
  448f34:	ldrb	w2, [x0, x4]
  448f38:	add	x4, x4, #0x1
  448f3c:	cmp	x1, x4
  448f40:	lsl	x2, x2, #1
  448f44:	ldrh	w5, [x19, x2]
  448f48:	add	w5, w5, #0x1
  448f4c:	strh	w5, [x19, x2]
  448f50:	b.ne	448ef4 <ferror@plt+0x45924>  // b.any
  448f54:	mov	x0, x3
  448f58:	mov	w1, #0x0                   	// #0
  448f5c:	mov	x2, #0x800                 	// #2048
  448f60:	bl	403000 <memset@plt>
  448f64:	add	x12, sp, #0x80
  448f68:	mov	x3, x0
  448f6c:	mov	x0, #0x1                   	// #1
  448f70:	mov	w11, w0
  448f74:	mov	w1, #0x0                   	// #0
  448f78:	ldrh	w4, [x19, x0, lsl #1]
  448f7c:	cbz	w4, 448fb8 <ferror@plt+0x459e8>
  448f80:	lsl	w5, w11, w0
  448f84:	cmp	w5, w4
  448f88:	b.cc	448f00 <ferror@plt+0x45930>  // b.lo, b.ul, b.last
  448f8c:	ubfiz	w2, w0, #9, #7
  448f90:	sub	w9, w0, #0x1
  448f94:	sub	w2, w2, #0x200
  448f98:	ldrh	w6, [x12, x0, lsl #1]
  448f9c:	sxtw	x8, w5
  448fa0:	and	w2, w2, #0xffff
  448fa4:	and	x5, x4, #0xffff
  448fa8:	lsl	w9, w11, w9
  448fac:	mov	x7, #0x0                   	// #0
  448fb0:	cmp	x5, x7
  448fb4:	b.hi	44909c <ferror@plt+0x45acc>  // b.pmore
  448fb8:	add	x0, x0, #0x1
  448fbc:	cmp	x0, #0x9
  448fc0:	b.ne	448f78 <ferror@plt+0x459a8>  // b.any
  448fc4:	add	x10, sp, #0x50
  448fc8:	mov	x6, #0x0                   	// #0
  448fcc:	mov	w9, #0x1                   	// #1
  448fd0:	ldrh	w2, [x19, x0, lsl #1]
  448fd4:	cbz	w2, 448ff4 <ferror@plt+0x45a24>
  448fd8:	sub	w11, w0, #0x1
  448fdc:	mov	w4, #0x0                   	// #0
  448fe0:	strh	w1, [x6, x10]
  448fe4:	mov	w7, w4
  448fe8:	cmp	x0, w4, uxtw
  448fec:	b.hi	449108 <ferror@plt+0x45b38>  // b.pmore
  448ff0:	cbnz	w2, 448f00 <ferror@plt+0x45930>
  448ff4:	add	x0, x0, #0x1
  448ff8:	add	x6, x6, #0x2
  448ffc:	cmp	x0, #0x10
  449000:	b.ne	448fd0 <ferror@plt+0x45a00>  // b.any
  449004:	add	x17, sp, #0x80
  449008:	add	x18, sp, #0x50
  44900c:	mov	x11, #0x6                   	// #6
  449010:	mov	x8, #0x0                   	// #0
  449014:	mov	x0, #0xf                   	// #15
  449018:	mov	w12, #0x1                   	// #1
  44901c:	ldrh	w2, [x19, x0, lsl #1]
  449020:	cbz	w2, 449070 <ferror@plt+0x45aa0>
  449024:	sub	w1, w0, #0x8
  449028:	ubfiz	w15, w0, #9, #7
  44902c:	sub	w13, w15, #0x1, lsl #12
  449030:	sub	w14, w0, #0x1
  449034:	ldrh	w9, [x17, x0, lsl #1]
  449038:	lsl	w1, w12, w1
  44903c:	ldrh	w7, [x18, x11, lsl #1]
  449040:	sub	x16, x0, #0x8
  449044:	and	w13, w13, #0xffff
  449048:	and	x2, x2, #0xffff
  44904c:	sxtw	x30, w1
  449050:	mov	w6, w1
  449054:	lsl	w14, w12, w14
  449058:	mov	x1, #0x0                   	// #0
  44905c:	mov	x21, #0x0                   	// #0
  449060:	mov	x5, #0x100                 	// #256
  449064:	mov	x10, #0x0                   	// #0
  449068:	cmp	x2, x10
  44906c:	b.hi	449154 <ferror@plt+0x45b84>  // b.pmore
  449070:	sub	x0, x0, #0x1
  449074:	sub	x11, x11, #0x1
  449078:	cmp	x0, #0x8
  44907c:	b.ne	44901c <ferror@plt+0x45a4c>  // b.any
  449080:	mov	w0, #0x1                   	// #1
  449084:	b	448f04 <ferror@plt+0x45934>
  449088:	ldrh	w5, [x6, x5]
  44908c:	strh	w2, [x20, x5, lsl #1]
  449090:	ldrb	w5, [x0, x4]
  449094:	strh	w2, [x6, x5, lsl #1]
  449098:	b	448f34 <ferror@plt+0x45964>
  44909c:	tst	w6, #0xfe00
  4490a0:	b.ne	448f00 <ferror@plt+0x45930>  // b.any
  4490a4:	orr	w10, w2, w6
  4490a8:	mov	w4, w1
  4490ac:	cmp	x4, #0xff
  4490b0:	b.ls	4490ec <ferror@plt+0x45b1c>  // b.plast
  4490b4:	add	x7, x7, #0x1
  4490b8:	cmp	x7, x5
  4490bc:	b.cs	4490c8 <ferror@plt+0x45af8>  // b.hs, b.nlast
  4490c0:	ubfiz	x6, x6, #1, #16
  4490c4:	ldrh	w6, [x20, x6]
  4490c8:	mov	w4, w9
  4490cc:	tst	w1, w4
  4490d0:	b.ne	449100 <ferror@plt+0x45b30>  // b.any
  4490d4:	cbz	w4, 4490e4 <ferror@plt+0x45b14>
  4490d8:	sub	w10, w4, #0x1
  4490dc:	and	w1, w10, w1
  4490e0:	add	w4, w4, w1
  4490e4:	mov	w1, w4
  4490e8:	b	448fb0 <ferror@plt+0x459e0>
  4490ec:	ldrh	w13, [x3, x4, lsl #1]
  4490f0:	cbnz	w13, 448f00 <ferror@plt+0x45930>
  4490f4:	strh	w10, [x3, x4, lsl #1]
  4490f8:	add	x4, x4, x8
  4490fc:	b	4490ac <ferror@plt+0x45adc>
  449100:	lsr	w4, w4, #1
  449104:	b	4490cc <ferror@plt+0x45afc>
  449108:	lsr	w5, w2, w4
  44910c:	tbz	w5, #0, 44913c <ferror@plt+0x45b6c>
  449110:	sub	w5, w11, w4
  449114:	sub	x7, x0, x7
  449118:	mov	w8, #0x0                   	// #0
  44911c:	lsl	w5, w9, w5
  449120:	cmp	x7, w8, uxtw
  449124:	b.ls	449134 <ferror@plt+0x45b64>  // b.plast
  449128:	tst	w1, w5
  44912c:	b.ne	449144 <ferror@plt+0x45b74>  // b.any
  449130:	add	w1, w1, w5
  449134:	lsl	w5, w9, w4
  449138:	bic	w2, w2, w5
  44913c:	add	w4, w4, #0x1
  449140:	b	448fe4 <ferror@plt+0x45a14>
  449144:	bic	w1, w1, w5
  449148:	add	w8, w8, #0x1
  44914c:	lsr	w5, w5, #1
  449150:	b	449120 <ferror@plt+0x45b50>
  449154:	and	x22, x7, #0xff
  449158:	cmp	x5, w7, uxtb
  44915c:	b.eq	4491f8 <ferror@plt+0x45c28>  // b.none
  449160:	ldrh	w1, [x3, x22, lsl #1]
  449164:	lsl	x4, x22, #1
  449168:	cbnz	w1, 4491e0 <ferror@plt+0x45c10>
  44916c:	tst	x8, #0xfffffffffffffe00
  449170:	b.ne	448f00 <ferror@plt+0x45930>  // b.any
  449174:	add	w1, w15, w8
  449178:	mov	x21, x8
  44917c:	add	x8, x30, x8
  449180:	strh	w1, [x3, x4]
  449184:	mov	x1, x16
  449188:	add	x5, x3, x21, lsl #1
  44918c:	orr	w24, w13, w9
  449190:	lsr	w4, w7, #8
  449194:	add	x5, x5, #0x200
  449198:	lsl	w23, w12, w1
  44919c:	cmp	x23, x4
  4491a0:	b.hi	449200 <ferror@plt+0x45c30>  // b.pmore
  4491a4:	add	x10, x10, #0x1
  4491a8:	cmp	x10, x2
  4491ac:	b.cs	4491b8 <ferror@plt+0x45be8>  // b.hs, b.nlast
  4491b0:	ubfiz	x9, x9, #1, #16
  4491b4:	ldrh	w9, [x20, x9]
  4491b8:	mov	w4, w14
  4491bc:	tst	w7, w4
  4491c0:	b.ne	449214 <ferror@plt+0x45c44>  // b.any
  4491c4:	cbz	w4, 4491d4 <ferror@plt+0x45c04>
  4491c8:	sub	w5, w4, #0x1
  4491cc:	and	w7, w5, w7
  4491d0:	add	w4, w4, w7
  4491d4:	mov	x5, x22
  4491d8:	mov	w7, w4
  4491dc:	b	449068 <ferror@plt+0x45a98>
  4491e0:	tbz	w1, #12, 448f00 <ferror@plt+0x45930>
  4491e4:	and	x21, x1, #0x1ff
  4491e8:	ubfx	x1, x1, #9, #3
  4491ec:	cmp	x1, x16
  4491f0:	b.cs	449188 <ferror@plt+0x45bb8>  // b.hs, b.nlast
  4491f4:	b	448f00 <ferror@plt+0x45930>
  4491f8:	mov	x22, x5
  4491fc:	b	449188 <ferror@plt+0x45bb8>
  449200:	ldrh	w25, [x5, x4, lsl #1]
  449204:	cbnz	w25, 448f00 <ferror@plt+0x45930>
  449208:	strh	w24, [x5, x4, lsl #1]
  44920c:	add	x4, x4, x6
  449210:	b	44919c <ferror@plt+0x45bcc>
  449214:	lsr	w4, w4, #1
  449218:	b	4491bc <ferror@plt+0x45bec>
  44921c:	ldr	w4, [x3]
  449220:	mov	x6, x1
  449224:	cmp	w4, #0xe
  449228:	b.hi	449260 <ferror@plt+0x45c90>  // b.pmore
  44922c:	ldr	x1, [x0]
  449230:	ldr	x7, [x2]
  449234:	sub	x6, x6, x1
  449238:	cmp	x6, #0x3
  44923c:	b.le	449268 <ferror@plt+0x45c98>
  449240:	ldr	w5, [x1], #4
  449244:	lsl	x5, x5, x4
  449248:	orr	x5, x5, x7
  44924c:	prfm	pldl1strm, [x1]
  449250:	add	w4, w4, #0x20
  449254:	str	x1, [x0]
  449258:	str	x5, [x2]
  44925c:	str	w4, [x3]
  449260:	mov	w0, #0x1                   	// #1
  449264:	ret
  449268:	mov	w0, #0x0                   	// #0
  44926c:	b	449264 <ferror@plt+0x45c94>
  449270:	stp	x29, x30, [sp, #-80]!
  449274:	mov	x29, sp
  449278:	str	x1, [sp, #72]
  44927c:	ldr	w1, [x0, #8]
  449280:	stp	x19, x20, [sp, #16]
  449284:	mov	x20, x2
  449288:	stp	x21, x22, [sp, #32]
  44928c:	mov	x21, x4
  449290:	str	x23, [sp, #48]
  449294:	cbnz	w1, 4492f8 <ferror@plt+0x45d28>
  449298:	ldr	x19, [x0, #48]
  44929c:	adrp	x22, 448000 <ferror@plt+0x44a30>
  4492a0:	add	x23, sp, #0x48
  4492a4:	add	x22, x22, #0xe94
  4492a8:	cbnz	x19, 4492d8 <ferror@plt+0x45d08>
  4492ac:	mov	x4, #0x0                   	// #0
  4492b0:	mov	x3, #0x0                   	// #0
  4492b4:	mov	x2, #0x0                   	// #0
  4492b8:	ldr	x1, [sp, #72]
  4492bc:	mov	x0, x21
  4492c0:	blr	x20
  4492c4:	ldp	x19, x20, [sp, #16]
  4492c8:	ldp	x21, x22, [sp, #32]
  4492cc:	ldr	x23, [sp, #48]
  4492d0:	ldp	x29, x30, [sp], #80
  4492d4:	ret
  4492d8:	ldp	x1, x2, [x19, #8]
  4492dc:	mov	x4, x22
  4492e0:	mov	x0, x23
  4492e4:	mov	x3, #0x18                  	// #24
  4492e8:	bl	403060 <bsearch@plt>
  4492ec:	cbnz	x0, 449328 <ferror@plt+0x45d58>
  4492f0:	ldr	x19, [x19]
  4492f4:	b	4492a8 <ferror@plt+0x45cd8>
  4492f8:	adrp	x22, 448000 <ferror@plt+0x44a30>
  4492fc:	add	x19, x0, #0x30
  449300:	add	x22, x22, #0xe94
  449304:	add	x23, sp, #0x48
  449308:	ldar	x19, [x19]
  44930c:	cbz	x19, 4492ac <ferror@plt+0x45cdc>
  449310:	ldp	x1, x2, [x19, #8]
  449314:	mov	x4, x22
  449318:	mov	x0, x23
  44931c:	mov	x3, #0x18                  	// #24
  449320:	bl	403060 <bsearch@plt>
  449324:	cbz	x0, 449308 <ferror@plt+0x45d38>
  449328:	ldp	x2, x3, [x0]
  44932c:	ldr	x4, [x0, #16]
  449330:	b	4492b8 <ferror@plt+0x45ce8>
  449334:	stp	x29, x30, [sp, #-144]!
  449338:	mov	x29, sp
  44933c:	stp	x27, x28, [sp, #80]
  449340:	add	x28, x2, x4
  449344:	mov	x27, x5
  449348:	stp	x19, x20, [sp, #16]
  44934c:	mov	x20, x6
  449350:	stp	x21, x22, [sp, #32]
  449354:	mov	x22, x2
  449358:	mov	x21, x7
  44935c:	stp	x23, x24, [sp, #48]
  449360:	mov	x23, x0
  449364:	mov	x0, x5
  449368:	stp	x25, x26, [sp, #64]
  44936c:	mov	x25, x4
  449370:	stp	x3, x1, [sp, #112]
  449374:	bl	402d50 <strlen@plt>
  449378:	mov	x24, x0
  44937c:	add	x0, x28, x0
  449380:	mov	x3, x21
  449384:	add	x26, x0, #0x1
  449388:	mov	x2, x20
  44938c:	mov	x1, x26
  449390:	str	x0, [sp, #104]
  449394:	mov	x0, x23
  449398:	bl	4487bc <ferror@plt+0x451ec>
  44939c:	cbz	x0, 44942c <ferror@plt+0x45e5c>
  4493a0:	ldr	x8, [sp, #120]
  4493a4:	mov	x19, x0
  4493a8:	mov	x2, x22
  4493ac:	mov	x1, x8
  4493b0:	bl	402cd0 <memcpy@plt>
  4493b4:	ldr	x1, [sp, #112]
  4493b8:	mov	x2, x25
  4493bc:	add	x0, x19, x22
  4493c0:	bl	402cd0 <memcpy@plt>
  4493c4:	mov	x2, x24
  4493c8:	mov	x1, x27
  4493cc:	add	x0, x19, x28
  4493d0:	bl	402cd0 <memcpy@plt>
  4493d4:	ldr	x0, [sp, #104]
  4493d8:	add	x3, sp, #0x8c
  4493dc:	mov	x2, x21
  4493e0:	mov	x1, x20
  4493e4:	strb	wzr, [x19, x0]
  4493e8:	mov	x0, x19
  4493ec:	bl	448d58 <ferror@plt+0x45788>
  4493f0:	mov	w22, w0
  4493f4:	mov	x4, x21
  4493f8:	mov	x3, x20
  4493fc:	mov	x2, x26
  449400:	mov	x1, x19
  449404:	mov	x0, x23
  449408:	bl	448700 <ferror@plt+0x45130>
  44940c:	mov	w0, w22
  449410:	ldp	x19, x20, [sp, #16]
  449414:	ldp	x21, x22, [sp, #32]
  449418:	ldp	x23, x24, [sp, #48]
  44941c:	ldp	x25, x26, [sp, #64]
  449420:	ldp	x27, x28, [sp, #80]
  449424:	ldp	x29, x30, [sp], #144
  449428:	ret
  44942c:	mov	w22, #0xffffffff            	// #-1
  449430:	b	44940c <ferror@plt+0x45e3c>
  449434:	stp	x29, x30, [sp, #-256]!
  449438:	mov	x29, sp
  44943c:	stp	x21, x22, [sp, #32]
  449440:	mov	x21, x3
  449444:	mov	x22, x4
  449448:	stp	x25, x26, [sp, #64]
  44944c:	mov	x25, x1
  449450:	mov	x26, x2
  449454:	stp	x19, x20, [sp, #16]
  449458:	mov	x20, x0
  44945c:	add	x0, sp, #0x80
  449460:	stp	x23, x24, [sp, #48]
  449464:	mov	x24, #0x0                   	// #0
  449468:	mov	x23, #0x0                   	// #0
  44946c:	stp	x27, x28, [sp, #80]
  449470:	str	x0, [sp, #112]
  449474:	ldr	x1, [sp, #112]
  449478:	mov	x0, x25
  44947c:	bl	476498 <_obstack_memory_used@@Base+0x1a0a8>
  449480:	tbnz	w0, #31, 4494e0 <ferror@plt+0x45f10>
  449484:	ldr	w0, [sp, #144]
  449488:	and	w0, w0, #0xf000
  44948c:	cmp	w0, #0xa, lsl #12
  449490:	b.ne	4494e0 <ferror@plt+0x45f10>  // b.any
  449494:	mov	x27, #0x80                  	// #128
  449498:	mov	x3, x22
  44949c:	mov	x2, x21
  4494a0:	mov	x1, x27
  4494a4:	mov	x0, x20
  4494a8:	bl	4487bc <ferror@plt+0x451ec>
  4494ac:	mov	x28, x0
  4494b0:	cbz	x0, 4494e0 <ferror@plt+0x45f10>
  4494b4:	mov	x1, x0
  4494b8:	mov	x2, x27
  4494bc:	mov	x0, x25
  4494c0:	bl	402de0 <readlink@plt>
  4494c4:	tbz	x0, #63, 4495cc <ferror@plt+0x45ffc>
  4494c8:	mov	x4, x22
  4494cc:	mov	x3, x21
  4494d0:	mov	x2, x27
  4494d4:	mov	x1, x28
  4494d8:	mov	x0, x20
  4494dc:	bl	448700 <ferror@plt+0x45130>
  4494e0:	mov	x0, x25
  4494e4:	mov	w1, #0x2f                  	// #47
  4494e8:	bl	403130 <strrchr@plt>
  4494ec:	adrp	x3, 485000 <_obstack_memory_used@@Base+0x28c10>
  4494f0:	cbz	x0, 4496dc <ferror@plt+0x4610c>
  4494f4:	add	x0, x0, #0x1
  4494f8:	sub	x27, x0, x25
  4494fc:	mov	x7, x22
  449500:	mov	x6, x21
  449504:	mov	x5, x26
  449508:	add	x3, x3, #0x122
  44950c:	mov	x2, x27
  449510:	mov	x1, x25
  449514:	mov	x0, x20
  449518:	mov	x4, #0x0                   	// #0
  44951c:	bl	449334 <ferror@plt+0x45d64>
  449520:	mov	w19, w0
  449524:	tbz	w0, #31, 449588 <ferror@plt+0x45fb8>
  449528:	mov	x7, x22
  44952c:	mov	x6, x21
  449530:	mov	x5, x26
  449534:	mov	x2, x27
  449538:	mov	x1, x25
  44953c:	mov	x0, x20
  449540:	mov	x4, #0x7                   	// #7
  449544:	adrp	x3, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  449548:	add	x3, x3, #0x4d8
  44954c:	bl	449334 <ferror@plt+0x45d64>
  449550:	mov	w19, w0
  449554:	tbz	w0, #31, 449588 <ferror@plt+0x45fb8>
  449558:	mov	x7, x22
  44955c:	mov	x6, x21
  449560:	mov	x5, x26
  449564:	mov	x4, x27
  449568:	mov	x3, x25
  44956c:	mov	x0, x20
  449570:	mov	x2, #0xf                   	// #15
  449574:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  449578:	add	x1, x1, #0x4e0
  44957c:	bl	449334 <ferror@plt+0x45d64>
  449580:	cmp	w0, #0x0
  449584:	csinv	w19, w0, wzr, ge  // ge = tcont
  449588:	cmp	x23, #0x0
  44958c:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  449590:	b.eq	4495ac <ferror@plt+0x45fdc>  // b.none
  449594:	mov	x4, x22
  449598:	mov	x3, x21
  44959c:	mov	x2, x24
  4495a0:	mov	x1, x23
  4495a4:	mov	x0, x20
  4495a8:	bl	448700 <ferror@plt+0x45130>
  4495ac:	mov	w0, w19
  4495b0:	ldp	x19, x20, [sp, #16]
  4495b4:	ldp	x21, x22, [sp, #32]
  4495b8:	ldp	x23, x24, [sp, #48]
  4495bc:	ldp	x25, x26, [sp, #64]
  4495c0:	ldp	x27, x28, [sp, #80]
  4495c4:	ldp	x29, x30, [sp], #256
  4495c8:	ret
  4495cc:	sub	x1, x27, #0x1
  4495d0:	cmp	x1, x0
  4495d4:	b.ls	449614 <ferror@plt+0x46044>  // b.plast
  4495d8:	strb	wzr, [x28, x0]
  4495dc:	ldrb	w0, [x28]
  4495e0:	cmp	w0, #0x2f
  4495e4:	b.ne	449634 <ferror@plt+0x46064>  // b.any
  4495e8:	cbz	x23, 449604 <ferror@plt+0x46034>
  4495ec:	mov	x4, x22
  4495f0:	mov	x3, x21
  4495f4:	mov	x2, x24
  4495f8:	mov	x1, x23
  4495fc:	mov	x0, x20
  449600:	bl	448700 <ferror@plt+0x45130>
  449604:	mov	x24, x27
  449608:	mov	x23, x28
  44960c:	mov	x25, x28
  449610:	b	449474 <ferror@plt+0x45ea4>
  449614:	mov	x2, x27
  449618:	mov	x4, x22
  44961c:	mov	x3, x21
  449620:	mov	x1, x28
  449624:	mov	x0, x20
  449628:	lsl	x27, x27, #1
  44962c:	bl	448700 <ferror@plt+0x45130>
  449630:	b	449498 <ferror@plt+0x45ec8>
  449634:	mov	x0, x25
  449638:	mov	w1, #0x2f                  	// #47
  44963c:	bl	403130 <strrchr@plt>
  449640:	cbz	x0, 4495e8 <ferror@plt+0x46018>
  449644:	add	x0, x0, #0x1
  449648:	sub	x19, x0, x25
  44964c:	mov	x0, x28
  449650:	bl	402d50 <strlen@plt>
  449654:	add	x1, x19, #0x1
  449658:	mov	x3, x22
  44965c:	add	x0, x1, x0
  449660:	mov	x2, x21
  449664:	mov	x1, x0
  449668:	str	x0, [sp, #104]
  44966c:	mov	x0, x20
  449670:	bl	4487bc <ferror@plt+0x451ec>
  449674:	str	x0, [sp, #120]
  449678:	cbz	x0, 4496e8 <ferror@plt+0x46118>
  44967c:	mov	x2, x19
  449680:	mov	x1, x25
  449684:	bl	402cd0 <memcpy@plt>
  449688:	mov	x0, x28
  44968c:	bl	402d50 <strlen@plt>
  449690:	mov	x2, x0
  449694:	ldr	x7, [sp, #120]
  449698:	mov	x1, x28
  44969c:	add	x19, x7, x19
  4496a0:	mov	x0, x19
  4496a4:	bl	402cd0 <memcpy@plt>
  4496a8:	mov	x0, x28
  4496ac:	bl	402d50 <strlen@plt>
  4496b0:	strb	wzr, [x19, x0]
  4496b4:	mov	x2, x27
  4496b8:	mov	x1, x28
  4496bc:	mov	x4, x22
  4496c0:	mov	x3, x21
  4496c4:	mov	x0, x20
  4496c8:	bl	448700 <ferror@plt+0x45130>
  4496cc:	ldr	x7, [sp, #120]
  4496d0:	ldr	x27, [sp, #104]
  4496d4:	mov	x28, x7
  4496d8:	b	4495e8 <ferror@plt+0x46018>
  4496dc:	add	x25, x3, #0x122
  4496e0:	mov	x27, #0x0                   	// #0
  4496e4:	b	4494fc <ferror@plt+0x45f2c>
  4496e8:	mov	w19, #0xffffffff            	// #-1
  4496ec:	b	449588 <ferror@plt+0x45fb8>
  4496f0:	stp	x29, x30, [sp, #-240]!
  4496f4:	mov	x29, sp
  4496f8:	stp	x21, x22, [sp, #32]
  4496fc:	add	x21, x0, x1
  449700:	mov	x22, x2
  449704:	stp	x0, x1, [sp, #128]
  449708:	str	x0, [sp, #200]
  44970c:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  449710:	add	x0, x0, #0x6e4
  449714:	stp	x19, x20, [sp, #16]
  449718:	mov	x19, x3
  44971c:	mov	x20, x3
  449720:	stp	x25, x26, [sp, #64]
  449724:	mov	x26, x4
  449728:	stp	x27, x28, [sp, #80]
  44972c:	add	x27, x3, x4
  449730:	str	x0, [sp, #144]
  449734:	add	x0, x0, #0x200
  449738:	stp	x23, x24, [sp, #48]
  44973c:	str	x0, [sp, #152]
  449740:	add	x0, sp, #0xd8
  449744:	str	x0, [sp, #96]
  449748:	ldr	x0, [sp, #200]
  44974c:	sub	x1, x21, x0
  449750:	cmp	x1, #0x4
  449754:	b.gt	449780 <ferror@plt+0x461b0>
  449758:	cmp	x27, x20
  44975c:	b.eq	44a184 <ferror@plt+0x46bb4>  // b.none
  449760:	mov	w0, #0x0                   	// #0
  449764:	ldp	x19, x20, [sp, #16]
  449768:	ldp	x21, x22, [sp, #32]
  44976c:	ldp	x23, x24, [sp, #48]
  449770:	ldp	x25, x26, [sp, #64]
  449774:	ldp	x27, x28, [sp, #80]
  449778:	ldp	x29, x30, [sp], #240
  44977c:	ret
  449780:	ldrb	w1, [x0]
  449784:	and	w2, w1, #0xf
  449788:	cmp	w2, #0x8
  44978c:	b.ne	449760 <ferror@plt+0x46190>  // b.any
  449790:	cmp	w1, #0x7f
  449794:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449798:	ldrb	w2, [x0, #1]
  44979c:	ldrh	w1, [x0]
  4497a0:	rev16	w1, w1
  4497a4:	tbnz	w2, #5, 449760 <ferror@plt+0x46190>
  4497a8:	and	x1, x1, #0xffff
  4497ac:	mov	x3, #0x1f                  	// #31
  4497b0:	udiv	x2, x1, x3
  4497b4:	msub	x1, x2, x3, x1
  4497b8:	cbnz	x1, 449760 <ferror@plt+0x46190>
  4497bc:	add	x0, x0, #0x2
  4497c0:	str	wzr, [sp, #196]
  4497c4:	stp	x0, xzr, [sp, #200]
  4497c8:	ldr	x0, [sp, #200]
  4497cc:	tst	x0, #0x3
  4497d0:	b.ne	4498e0 <ferror@plt+0x46310>  // b.any
  4497d4:	add	x23, sp, #0xc4
  4497d8:	add	x24, sp, #0xd0
  4497dc:	add	x25, sp, #0xc8
  4497e0:	mov	x3, x23
  4497e4:	mov	x2, x24
  4497e8:	mov	x1, x21
  4497ec:	mov	x0, x25
  4497f0:	bl	44921c <ferror@plt+0x45c4c>
  4497f4:	cbz	w0, 449760 <ferror@plt+0x46190>
  4497f8:	ldr	x0, [sp, #208]
  4497fc:	str	x0, [sp, #104]
  449800:	ldr	w0, [sp, #104]
  449804:	ubfx	w1, w0, #1, #2
  449808:	ldr	x0, [sp, #104]
  44980c:	cmp	w1, #0x3
  449810:	lsr	x0, x0, #3
  449814:	str	x0, [sp, #208]
  449818:	ldr	w0, [sp, #196]
  44981c:	sub	w0, w0, #0x3
  449820:	str	w0, [sp, #196]
  449824:	b.eq	449760 <ferror@plt+0x46190>  // b.none
  449828:	cbnz	w1, 449934 <ferror@plt+0x46364>
  44982c:	ldr	x1, [sp, #200]
  449830:	mov	w2, #0x0                   	// #0
  449834:	mov	x3, x1
  449838:	cmp	w0, #0x8
  44983c:	sub	x1, x1, #0x1
  449840:	b.hi	449904 <ferror@plt+0x46334>  // b.pmore
  449844:	cbz	w2, 44984c <ferror@plt+0x4627c>
  449848:	str	x3, [sp, #200]
  44984c:	ldr	x1, [sp, #200]
  449850:	str	wzr, [sp, #196]
  449854:	str	xzr, [sp, #208]
  449858:	sub	x0, x21, x1
  44985c:	cmp	x0, #0x3
  449860:	b.le	449760 <ferror@plt+0x46190>
  449864:	ldrb	w0, [x1]
  449868:	add	x1, x1, #0x4
  44986c:	ldurb	w2, [x1, #-3]
  449870:	ldurb	w3, [x1, #-2]
  449874:	orr	w2, w0, w2, lsl #8
  449878:	ldurb	w0, [x1, #-1]
  44987c:	str	x1, [sp, #200]
  449880:	orr	w0, w3, w0, lsl #8
  449884:	mvn	w0, w0
  449888:	cmp	w2, w0, uxth
  44988c:	b.ne	449760 <ferror@plt+0x46190>  // b.any
  449890:	sub	x0, x21, x1
  449894:	cmp	w2, w0
  449898:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  44989c:	sub	x0, x27, x20
  4498a0:	cmp	w2, w0
  4498a4:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  4498a8:	and	x23, x2, #0xffff
  4498ac:	mov	x0, x20
  4498b0:	mov	x2, x23
  4498b4:	bl	402cd0 <memcpy@plt>
  4498b8:	ldr	x2, [sp, #200]
  4498bc:	add	x20, x20, x23
  4498c0:	add	x2, x2, x23
  4498c4:	str	x2, [sp, #200]
  4498c8:	ldr	x0, [sp, #200]
  4498cc:	tst	x0, #0x3
  4498d0:	b.ne	449910 <ferror@plt+0x46340>  // b.any
  4498d4:	ldr	x0, [sp, #104]
  4498d8:	tbz	w0, #0, 4497d4 <ferror@plt+0x46204>
  4498dc:	b	449748 <ferror@plt+0x46178>
  4498e0:	ldrb	w2, [x0], #1
  4498e4:	ldr	w1, [sp, #196]
  4498e8:	lsl	x3, x2, x1
  4498ec:	add	w1, w1, #0x8
  4498f0:	ldr	x2, [sp, #208]
  4498f4:	str	w1, [sp, #196]
  4498f8:	orr	x2, x2, x3
  4498fc:	stp	x0, x2, [sp, #200]
  449900:	b	4497c8 <ferror@plt+0x461f8>
  449904:	sub	w0, w0, #0x8
  449908:	mov	w2, #0x1                   	// #1
  44990c:	b	449834 <ferror@plt+0x46264>
  449910:	ldrb	w2, [x0], #1
  449914:	ldr	w1, [sp, #196]
  449918:	lsl	x3, x2, x1
  44991c:	add	w1, w1, #0x8
  449920:	ldr	x2, [sp, #208]
  449924:	str	w1, [sp, #196]
  449928:	orr	x2, x2, x3
  44992c:	stp	x0, x2, [sp, #200]
  449930:	b	4498c8 <ferror@plt+0x462f8>
  449934:	cmp	w1, #0x1
  449938:	b.eq	449ee0 <ferror@plt+0x46910>  // b.none
  44993c:	mov	x1, x21
  449940:	mov	x0, x25
  449944:	bl	44921c <ferror@plt+0x45c4c>
  449948:	cbz	w0, 449760 <ferror@plt+0x46190>
  44994c:	ldr	x0, [sp, #208]
  449950:	and	w28, w0, #0x1f
  449954:	ubfx	w1, w0, #5, #5
  449958:	ubfx	w8, w0, #10, #4
  44995c:	lsr	x0, x0, #14
  449960:	str	x0, [sp, #208]
  449964:	ldr	w0, [sp, #196]
  449968:	add	w1, w1, #0x1
  44996c:	add	w28, w28, #0x101
  449970:	str	w1, [sp, #112]
  449974:	sub	w0, w0, #0xe
  449978:	str	w0, [sp, #196]
  44997c:	cmp	w28, #0x11e
  449980:	mov	w0, w1
  449984:	add	w8, w8, #0x4
  449988:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
  44998c:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449990:	ldr	x0, [sp, #96]
  449994:	mov	x1, x21
  449998:	stp	xzr, xzr, [x0]
  44999c:	strh	wzr, [x0, #16]
  4499a0:	strb	wzr, [x0, #18]
  4499a4:	mov	x0, x25
  4499a8:	bl	44921c <ferror@plt+0x45c4c>
  4499ac:	cbz	w0, 449760 <ferror@plt+0x46190>
  4499b0:	ldr	x0, [sp, #208]
  4499b4:	cmp	w8, #0x4
  4499b8:	and	w1, w0, #0x7
  4499bc:	strb	w1, [sp, #232]
  4499c0:	ubfx	w1, w0, #3, #3
  4499c4:	strb	w1, [sp, #233]
  4499c8:	ubfx	w1, w0, #6, #3
  4499cc:	strb	w1, [sp, #234]
  4499d0:	ubfx	w1, w0, #9, #3
  4499d4:	strb	w1, [sp, #216]
  4499d8:	ldr	w1, [sp, #196]
  4499dc:	lsr	x2, x0, #12
  4499e0:	str	x2, [sp, #208]
  4499e4:	sub	w3, w1, #0xc
  4499e8:	str	w3, [sp, #196]
  4499ec:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  4499f0:	and	w2, w2, #0x7
  4499f4:	lsr	x0, x0, #15
  4499f8:	sub	w1, w1, #0xf
  4499fc:	str	w1, [sp, #196]
  449a00:	str	x0, [sp, #208]
  449a04:	cmp	w8, #0x5
  449a08:	strb	w2, [sp, #224]
  449a0c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449a10:	mov	x3, x23
  449a14:	mov	x2, x24
  449a18:	mov	x1, x21
  449a1c:	mov	x0, x25
  449a20:	bl	44921c <ferror@plt+0x45c4c>
  449a24:	cbz	w0, 449760 <ferror@plt+0x46190>
  449a28:	ldr	x0, [sp, #208]
  449a2c:	cmp	w8, #0x6
  449a30:	and	w1, w0, #0x7
  449a34:	strb	w1, [sp, #223]
  449a38:	ldr	w1, [sp, #196]
  449a3c:	lsr	x2, x0, #3
  449a40:	str	x2, [sp, #208]
  449a44:	sub	w3, w1, #0x3
  449a48:	str	w3, [sp, #196]
  449a4c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449a50:	and	w2, w2, #0x7
  449a54:	sub	w3, w1, #0x6
  449a58:	str	w3, [sp, #196]
  449a5c:	cmp	w8, #0x7
  449a60:	strb	w2, [sp, #225]
  449a64:	lsr	x2, x0, #6
  449a68:	str	x2, [sp, #208]
  449a6c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449a70:	and	w2, w2, #0x7
  449a74:	sub	w3, w1, #0x9
  449a78:	str	w3, [sp, #196]
  449a7c:	cmp	w8, #0x8
  449a80:	strb	w2, [sp, #222]
  449a84:	lsr	x2, x0, #9
  449a88:	str	x2, [sp, #208]
  449a8c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449a90:	and	w2, w2, #0x7
  449a94:	sub	w3, w1, #0xc
  449a98:	str	w3, [sp, #196]
  449a9c:	cmp	w8, #0x9
  449aa0:	strb	w2, [sp, #226]
  449aa4:	lsr	x2, x0, #12
  449aa8:	str	x2, [sp, #208]
  449aac:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449ab0:	and	w2, w2, #0x7
  449ab4:	lsr	x0, x0, #15
  449ab8:	sub	w1, w1, #0xf
  449abc:	str	w1, [sp, #196]
  449ac0:	str	x0, [sp, #208]
  449ac4:	cmp	w8, #0xa
  449ac8:	strb	w2, [sp, #221]
  449acc:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449ad0:	mov	x3, x23
  449ad4:	mov	x2, x24
  449ad8:	mov	x1, x21
  449adc:	mov	x0, x25
  449ae0:	bl	44921c <ferror@plt+0x45c4c>
  449ae4:	cbz	w0, 449760 <ferror@plt+0x46190>
  449ae8:	ldr	x0, [sp, #208]
  449aec:	cmp	w8, #0xb
  449af0:	and	w1, w0, #0x7
  449af4:	strb	w1, [sp, #227]
  449af8:	ldr	w1, [sp, #196]
  449afc:	lsr	x2, x0, #3
  449b00:	str	x2, [sp, #208]
  449b04:	sub	w3, w1, #0x3
  449b08:	str	w3, [sp, #196]
  449b0c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449b10:	and	w2, w2, #0x7
  449b14:	sub	w3, w1, #0x6
  449b18:	str	w3, [sp, #196]
  449b1c:	cmp	w8, #0xc
  449b20:	strb	w2, [sp, #220]
  449b24:	lsr	x2, x0, #6
  449b28:	str	x2, [sp, #208]
  449b2c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449b30:	and	w2, w2, #0x7
  449b34:	sub	w3, w1, #0x9
  449b38:	str	w3, [sp, #196]
  449b3c:	cmp	w8, #0xd
  449b40:	strb	w2, [sp, #228]
  449b44:	lsr	x2, x0, #9
  449b48:	str	x2, [sp, #208]
  449b4c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449b50:	and	w2, w2, #0x7
  449b54:	sub	w3, w1, #0xc
  449b58:	str	w3, [sp, #196]
  449b5c:	cmp	w8, #0xe
  449b60:	strb	w2, [sp, #219]
  449b64:	lsr	x2, x0, #12
  449b68:	str	x2, [sp, #208]
  449b6c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449b70:	and	w2, w2, #0x7
  449b74:	lsr	x0, x0, #15
  449b78:	sub	w1, w1, #0xf
  449b7c:	str	w1, [sp, #196]
  449b80:	str	x0, [sp, #208]
  449b84:	cmp	w8, #0xf
  449b88:	strb	w2, [sp, #229]
  449b8c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449b90:	mov	x3, x23
  449b94:	mov	x2, x24
  449b98:	mov	x1, x21
  449b9c:	mov	x0, x25
  449ba0:	bl	44921c <ferror@plt+0x45c4c>
  449ba4:	cbz	w0, 449760 <ferror@plt+0x46190>
  449ba8:	ldr	x0, [sp, #208]
  449bac:	cmp	w8, #0x10
  449bb0:	and	w1, w0, #0x7
  449bb4:	strb	w1, [sp, #218]
  449bb8:	ldr	w1, [sp, #196]
  449bbc:	lsr	x2, x0, #3
  449bc0:	str	x2, [sp, #208]
  449bc4:	sub	w3, w1, #0x3
  449bc8:	str	w3, [sp, #196]
  449bcc:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449bd0:	and	w2, w2, #0x7
  449bd4:	sub	w3, w1, #0x6
  449bd8:	str	w3, [sp, #196]
  449bdc:	cmp	w8, #0x11
  449be0:	strb	w2, [sp, #230]
  449be4:	lsr	x2, x0, #6
  449be8:	str	x2, [sp, #208]
  449bec:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449bf0:	and	w2, w2, #0x7
  449bf4:	sub	w3, w1, #0x9
  449bf8:	str	w3, [sp, #196]
  449bfc:	cmp	w8, #0x12
  449c00:	strb	w2, [sp, #217]
  449c04:	lsr	x2, x0, #9
  449c08:	str	x2, [sp, #208]
  449c0c:	b.eq	449c28 <ferror@plt+0x46658>  // b.none
  449c10:	and	w2, w2, #0x7
  449c14:	lsr	x0, x0, #12
  449c18:	sub	w1, w1, #0xc
  449c1c:	str	w1, [sp, #196]
  449c20:	str	x0, [sp, #208]
  449c24:	strb	w2, [sp, #231]
  449c28:	ldr	x0, [sp, #96]
  449c2c:	mov	x3, x22
  449c30:	mov	x2, x22
  449c34:	mov	x1, #0x13                  	// #19
  449c38:	bl	448ec0 <ferror@plt+0x458f0>
  449c3c:	cbz	w0, 449760 <ferror@plt+0x46190>
  449c40:	mov	x0, #0x1278                	// #4728
  449c44:	add	x6, x22, x0
  449c48:	ldr	w0, [sp, #112]
  449c4c:	mov	x4, x6
  449c50:	str	x0, [sp, #120]
  449c54:	add	x5, x28, x0
  449c58:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  449c5c:	add	x5, x6, x5
  449c60:	add	x0, x0, #0x6dc
  449c64:	str	x0, [sp, #112]
  449c68:	cmp	x5, x4
  449c6c:	b.hi	449d30 <ferror@plt+0x46760>  // b.pmore
  449c70:	add	x0, x22, #0x1, lsl #12
  449c74:	ldrb	w0, [x0, #888]
  449c78:	cbz	w0, 449760 <ferror@plt+0x46190>
  449c7c:	mov	x3, x22
  449c80:	mov	x2, x22
  449c84:	mov	x1, x28
  449c88:	mov	x0, x6
  449c8c:	str	x6, [sp, #160]
  449c90:	bl	448ec0 <ferror@plt+0x458f0>
  449c94:	cbz	w0, 449760 <ferror@plt+0x46190>
  449c98:	ldr	x1, [sp, #120]
  449c9c:	add	x0, x22, #0x800
  449ca0:	ldr	x6, [sp, #160]
  449ca4:	mov	x3, x0
  449ca8:	mov	x2, x22
  449cac:	str	x0, [sp, #112]
  449cb0:	add	x0, x6, x28
  449cb4:	bl	448ec0 <ferror@plt+0x458f0>
  449cb8:	cbz	w0, 449760 <ferror@plt+0x46190>
  449cbc:	str	x22, [sp, #120]
  449cc0:	mov	x3, x23
  449cc4:	mov	x2, x24
  449cc8:	mov	x1, x21
  449ccc:	mov	x0, x25
  449cd0:	bl	44921c <ferror@plt+0x45c4c>
  449cd4:	cbz	w0, 449760 <ferror@plt+0x46190>
  449cd8:	ldr	x3, [sp, #208]
  449cdc:	ldr	x1, [sp, #120]
  449ce0:	and	x0, x3, #0xff
  449ce4:	ldrh	w2, [x1, x0, lsl #1]
  449ce8:	ldr	w0, [sp, #196]
  449cec:	and	w4, w2, #0x1ff
  449cf0:	ubfx	x1, x2, #9, #3
  449cf4:	tbnz	w2, #12, 449ef4 <ferror@plt+0x46924>
  449cf8:	add	w2, w1, #0x1
  449cfc:	mov	w28, w4
  449d00:	sub	w0, w0, #0x1
  449d04:	lsr	x3, x3, x2
  449d08:	str	x3, [sp, #208]
  449d0c:	sub	w0, w0, w1
  449d10:	str	w0, [sp, #196]
  449d14:	cmp	w28, #0xff
  449d18:	b.hi	449f30 <ferror@plt+0x46960>  // b.pmore
  449d1c:	cmp	x27, x20
  449d20:	b.eq	449760 <ferror@plt+0x46190>  // b.none
  449d24:	strb	w28, [x20], #1
  449d28:	prfm	pstl1keep, [x20]
  449d2c:	b	449cc0 <ferror@plt+0x466f0>
  449d30:	mov	x3, x23
  449d34:	mov	x2, x24
  449d38:	mov	x1, x21
  449d3c:	mov	x0, x25
  449d40:	stp	x6, x5, [sp, #160]
  449d44:	str	x4, [sp, #176]
  449d48:	bl	44921c <ferror@plt+0x45c4c>
  449d4c:	cbz	w0, 449760 <ferror@plt+0x46190>
  449d50:	ldr	x0, [sp, #208]
  449d54:	and	x1, x0, #0xff
  449d58:	ldrh	w3, [x22, x1, lsl #1]
  449d5c:	tbnz	w3, #12, 449760 <ferror@plt+0x46190>
  449d60:	ubfx	x2, x3, #9, #3
  449d64:	tst	w3, #0x1f0
  449d68:	add	w1, w2, #0x1
  449d6c:	ldp	x6, x5, [sp, #160]
  449d70:	lsr	x0, x0, x1
  449d74:	ldr	w1, [sp, #196]
  449d78:	str	x0, [sp, #208]
  449d7c:	sub	w1, w1, w2
  449d80:	sub	w2, w1, #0x1
  449d84:	str	w2, [sp, #196]
  449d88:	and	w2, w3, #0x1ff
  449d8c:	ldr	x4, [sp, #176]
  449d90:	b.ne	449d9c <ferror@plt+0x467cc>  // b.any
  449d94:	strb	w2, [x4], #1
  449d98:	b	449c68 <ferror@plt+0x46698>
  449d9c:	cmp	w2, #0x10
  449da0:	b.ne	449e10 <ferror@plt+0x46840>  // b.any
  449da4:	cmp	x6, x4
  449da8:	b.eq	449760 <ferror@plt+0x46190>  // b.none
  449dac:	and	w2, w0, #0x3
  449db0:	sub	w1, w1, #0x3
  449db4:	lsr	x0, x0, #2
  449db8:	str	w1, [sp, #196]
  449dbc:	str	x0, [sp, #208]
  449dc0:	add	w2, w2, #0x3
  449dc4:	sub	x0, x5, x4
  449dc8:	cmp	w2, w0
  449dcc:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449dd0:	ldurb	w0, [x4, #-1]
  449dd4:	cmp	w2, #0x5
  449dd8:	b.eq	449e08 <ferror@plt+0x46838>  // b.none
  449ddc:	cmp	w2, #0x6
  449de0:	b.eq	449e04 <ferror@plt+0x46834>  // b.none
  449de4:	cmp	w2, #0x4
  449de8:	b.ne	449df0 <ferror@plt+0x46820>  // b.any
  449dec:	strb	w0, [x4], #1
  449df0:	add	x4, x4, #0x3
  449df4:	sturb	w0, [x4, #-3]
  449df8:	sturb	w0, [x4, #-2]
  449dfc:	sturb	w0, [x4, #-1]
  449e00:	b	449c68 <ferror@plt+0x46698>
  449e04:	strb	w0, [x4], #1
  449e08:	strb	w0, [x4], #1
  449e0c:	b	449dec <ferror@plt+0x4681c>
  449e10:	cmp	w2, #0x11
  449e14:	b.ne	449e8c <ferror@plt+0x468bc>  // b.any
  449e18:	and	w2, w0, #0x7
  449e1c:	sub	w1, w1, #0x4
  449e20:	lsr	x0, x0, #3
  449e24:	str	w1, [sp, #196]
  449e28:	str	x0, [sp, #208]
  449e2c:	add	w3, w2, #0x3
  449e30:	sub	x0, x5, x4
  449e34:	cmp	w3, w0
  449e38:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449e3c:	sub	w0, w2, #0x1
  449e40:	cmp	w0, #0x6
  449e44:	b.hi	449e78 <ferror@plt+0x468a8>  // b.pmore
  449e48:	ldr	x1, [sp, #112]
  449e4c:	ldrb	w0, [x1, w0, uxtw]
  449e50:	adr	x1, 449e5c <ferror@plt+0x4688c>
  449e54:	add	x0, x1, w0, sxtb #2
  449e58:	br	x0
  449e5c:	strb	wzr, [x4], #1
  449e60:	strb	wzr, [x4], #1
  449e64:	strb	wzr, [x4], #1
  449e68:	strb	wzr, [x4], #1
  449e6c:	strb	wzr, [x4], #1
  449e70:	strb	wzr, [x4], #1
  449e74:	strb	wzr, [x4], #1
  449e78:	mov	x0, x4
  449e7c:	strh	wzr, [x0], #3
  449e80:	strb	wzr, [x4, #2]
  449e84:	mov	x4, x0
  449e88:	b	449c68 <ferror@plt+0x46698>
  449e8c:	str	x6, [sp, #176]
  449e90:	cmp	w2, #0x12
  449e94:	b.ne	449760 <ferror@plt+0x46190>  // b.any
  449e98:	and	w2, w0, #0x7f
  449e9c:	sub	w1, w1, #0x8
  449ea0:	lsr	x0, x0, #7
  449ea4:	str	x5, [sp, #168]
  449ea8:	str	w1, [sp, #196]
  449eac:	add	w2, w2, #0xb
  449eb0:	str	x0, [sp, #208]
  449eb4:	sub	x0, x5, x4
  449eb8:	cmp	w2, w0
  449ebc:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449ec0:	mov	x0, x4
  449ec4:	mov	w1, #0x0                   	// #0
  449ec8:	str	x2, [sp, #160]
  449ecc:	bl	403000 <memset@plt>
  449ed0:	ldp	x2, x5, [sp, #160]
  449ed4:	ldr	x6, [sp, #176]
  449ed8:	add	x4, x0, x2
  449edc:	b	449c68 <ferror@plt+0x46698>
  449ee0:	ldr	x0, [sp, #144]
  449ee4:	str	x0, [sp, #112]
  449ee8:	ldr	x0, [sp, #152]
  449eec:	str	x0, [sp, #120]
  449ef0:	b	449cc0 <ferror@plt+0x466f0>
  449ef4:	mov	w2, #0x1                   	// #1
  449ef8:	add	w4, w4, #0x100
  449efc:	lsl	w1, w2, w1
  449f00:	sub	w1, w1, #0x1
  449f04:	and	x1, x1, x3, lsr #8
  449f08:	sub	w0, w0, #0x8
  449f0c:	ldr	x2, [sp, #120]
  449f10:	add	x1, x1, w4, sxtw
  449f14:	ldrh	w4, [x2, x1, lsl #1]
  449f18:	and	w28, w4, #0x1ff
  449f1c:	ubfx	x1, x4, #9, #3
  449f20:	add	w2, w1, #0x8
  449f24:	lsr	x3, x3, x2
  449f28:	str	x3, [sp, #208]
  449f2c:	b	449d0c <ferror@plt+0x4673c>
  449f30:	cmp	w28, #0x100
  449f34:	b.eq	4498d4 <ferror@plt+0x46304>  // b.none
  449f38:	cmp	w28, #0x108
  449f3c:	b.hi	449fc8 <ferror@plt+0x469f8>  // b.pmore
  449f40:	sub	w28, w28, #0xfe
  449f44:	mov	x3, x23
  449f48:	mov	x2, x24
  449f4c:	mov	x1, x21
  449f50:	mov	x0, x25
  449f54:	bl	44921c <ferror@plt+0x45c4c>
  449f58:	cbz	w0, 449760 <ferror@plt+0x46190>
  449f5c:	ldr	x2, [sp, #208]
  449f60:	ldr	x1, [sp, #112]
  449f64:	and	x0, x2, #0xff
  449f68:	ldrh	w5, [x1, x0, lsl #1]
  449f6c:	ldr	w0, [sp, #196]
  449f70:	and	w3, w5, #0x1ff
  449f74:	ubfx	x1, x5, #9, #3
  449f78:	tbnz	w5, #12, 44a048 <ferror@plt+0x46a78>
  449f7c:	mov	w8, w3
  449f80:	sub	w0, w0, #0x1
  449f84:	add	w3, w1, #0x1
  449f88:	sub	w0, w0, w1
  449f8c:	lsr	x2, x2, x3
  449f90:	str	x2, [sp, #208]
  449f94:	str	w0, [sp, #196]
  449f98:	cbnz	w8, 44a088 <ferror@plt+0x46ab8>
  449f9c:	cmp	x19, x20
  449fa0:	b.eq	449760 <ferror@plt+0x46190>  // b.none
  449fa4:	sub	x0, x27, x20
  449fa8:	cmp	w28, w0
  449fac:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449fb0:	ldurb	w1, [x20, #-1]
  449fb4:	mov	x2, x28
  449fb8:	mov	x0, x20
  449fbc:	bl	403000 <memset@plt>
  449fc0:	add	x20, x20, x28
  449fc4:	b	449cc0 <ferror@plt+0x466f0>
  449fc8:	cmp	w28, #0x11d
  449fcc:	b.eq	44a040 <ferror@plt+0x46a70>  // b.none
  449fd0:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  449fd4:	mov	x3, x23
  449fd8:	mov	x2, x24
  449fdc:	mov	x1, x21
  449fe0:	mov	x0, x25
  449fe4:	bl	44921c <ferror@plt+0x45c4c>
  449fe8:	cbz	w0, 449760 <ferror@plt+0x46190>
  449fec:	sub	w4, w28, #0x109
  449ff0:	mov	w2, #0x1                   	// #1
  449ff4:	ldr	x3, [sp, #208]
  449ff8:	lsr	w0, w4, #2
  449ffc:	add	w1, w0, #0x1
  44a000:	and	w4, w4, #0x3
  44a004:	lsl	w4, w4, w1
  44a008:	add	w8, w4, #0xb
  44a00c:	lsl	w4, w2, w0
  44a010:	mov	w0, #0xffffffff            	// #-1
  44a014:	sub	w4, w4, #0x1
  44a018:	lsl	w2, w0, w1
  44a01c:	ldr	w0, [sp, #196]
  44a020:	bic	w2, w3, w2
  44a024:	add	w4, w2, w4, lsl #3
  44a028:	lsr	x3, x3, x1
  44a02c:	add	w28, w4, w8
  44a030:	sub	w1, w0, w1
  44a034:	str	w1, [sp, #196]
  44a038:	str	x3, [sp, #208]
  44a03c:	b	449f44 <ferror@plt+0x46974>
  44a040:	mov	x28, #0x102                 	// #258
  44a044:	b	449f44 <ferror@plt+0x46974>
  44a048:	mov	w4, #0x1                   	// #1
  44a04c:	add	w3, w3, #0x100
  44a050:	lsl	w1, w4, w1
  44a054:	sub	w1, w1, #0x1
  44a058:	and	x1, x1, x2, lsr #8
  44a05c:	sub	w0, w0, #0x8
  44a060:	add	x1, x1, w3, sxtw
  44a064:	ldr	x3, [sp, #112]
  44a068:	ldrh	w3, [x3, x1, lsl #1]
  44a06c:	and	w8, w3, #0x1ff
  44a070:	ubfx	x5, x3, #9, #3
  44a074:	add	w1, w5, #0x8
  44a078:	sub	w0, w0, w5
  44a07c:	lsr	x2, x2, x1
  44a080:	str	x2, [sp, #208]
  44a084:	b	449f94 <ferror@plt+0x469c4>
  44a088:	cmp	w8, #0x1d
  44a08c:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  44a090:	cmp	w8, #0x3
  44a094:	b.hi	44a0d8 <ferror@plt+0x46b08>  // b.pmore
  44a098:	add	w3, w8, #0x1
  44a09c:	sub	x0, x20, x19
  44a0a0:	cmp	w3, w0
  44a0a4:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  44a0a8:	sub	x0, x27, x20
  44a0ac:	cmp	w28, w0
  44a0b0:	b.hi	449760 <ferror@plt+0x46190>  // b.pmore
  44a0b4:	mov	w5, w3
  44a0b8:	cmp	w28, w3
  44a0bc:	neg	x5, x5
  44a0c0:	b.hi	44a144 <ferror@plt+0x46b74>  // b.pmore
  44a0c4:	mov	x2, x28
  44a0c8:	add	x1, x20, x5
  44a0cc:	mov	x0, x20
  44a0d0:	bl	402cd0 <memcpy@plt>
  44a0d4:	b	449fc0 <ferror@plt+0x469f0>
  44a0d8:	mov	x3, x23
  44a0dc:	mov	x2, x24
  44a0e0:	mov	x1, x21
  44a0e4:	mov	x0, x25
  44a0e8:	bl	44921c <ferror@plt+0x45c4c>
  44a0ec:	cbz	w0, 449760 <ferror@plt+0x46190>
  44a0f0:	sub	w3, w8, #0x4
  44a0f4:	ldr	x5, [sp, #208]
  44a0f8:	lsr	w0, w3, #1
  44a0fc:	add	w2, w0, #0x1
  44a100:	and	w3, w3, #0x1
  44a104:	lsl	w3, w3, w2
  44a108:	add	w1, w3, #0x5
  44a10c:	mov	w3, #0x1                   	// #1
  44a110:	lsl	w3, w3, w0
  44a114:	mov	w0, #0xffffffff            	// #-1
  44a118:	sub	w3, w3, #0x1
  44a11c:	lsl	w0, w0, w2
  44a120:	bic	w0, w5, w0
  44a124:	lsr	x5, x5, x2
  44a128:	add	w3, w0, w3, lsl #2
  44a12c:	ldr	w0, [sp, #196]
  44a130:	add	w3, w3, w1
  44a134:	str	x5, [sp, #208]
  44a138:	sub	w2, w0, w2
  44a13c:	str	w2, [sp, #196]
  44a140:	b	44a09c <ferror@plt+0x46acc>
  44a144:	cmp	w3, w28
  44a148:	add	x1, x20, x5
  44a14c:	csel	w6, w3, w28, ls  // ls = plast
  44a150:	csel	w2, w3, w28, ls  // ls = plast
  44a154:	mov	x0, x20
  44a158:	stp	x5, x2, [sp, #160]
  44a15c:	str	w3, [sp, #176]
  44a160:	str	w6, [sp, #188]
  44a164:	bl	402cd0 <memcpy@plt>
  44a168:	ldp	x5, x2, [sp, #160]
  44a16c:	ldr	w6, [sp, #188]
  44a170:	ldr	w3, [sp, #176]
  44a174:	subs	w28, w28, w6
  44a178:	add	x20, x20, x2
  44a17c:	b.ne	44a144 <ferror@plt+0x46b74>  // b.any
  44a180:	b	449cc0 <ferror@plt+0x466f0>
  44a184:	ldp	x1, x0, [sp, #128]
  44a188:	mov	w8, #0x0                   	// #0
  44a18c:	sub	x0, x0, #0x4
  44a190:	add	x0, x1, x0
  44a194:	ldrb	w1, [x0], #1
  44a198:	cmp	x21, x0
  44a19c:	orr	w8, w1, w8, lsl #8
  44a1a0:	b.ne	44a194 <ferror@plt+0x46bc4>  // b.any
  44a1a4:	mov	w13, #0x0                   	// #0
  44a1a8:	mov	w12, #0x1                   	// #1
  44a1ac:	mov	x15, #0x15af                	// #5551
  44a1b0:	mov	x14, #0x15b0                	// #5552
  44a1b4:	mov	w1, #0xfff1                	// #65521
  44a1b8:	cmp	x26, x15
  44a1bc:	b.hi	44a20c <ferror@plt+0x46c3c>  // b.pmore
  44a1c0:	and	x14, x26, #0xfffffffffffffff0
  44a1c4:	lsr	x4, x26, #4
  44a1c8:	add	x14, x19, x14
  44a1cc:	cmp	x19, x14
  44a1d0:	b.ne	44a2f4 <ferror@plt+0x46d24>  // b.any
  44a1d4:	mov	x0, #0xfffffffffffffff0    	// #-16
  44a1d8:	mov	x3, #0x0                   	// #0
  44a1dc:	madd	x26, x4, x0, x26
  44a1e0:	cmp	x26, w3, uxtw
  44a1e4:	b.hi	44a3bc <ferror@plt+0x46dec>  // b.pmore
  44a1e8:	mov	w2, #0xfff1                	// #65521
  44a1ec:	udiv	w1, w13, w2
  44a1f0:	udiv	w0, w12, w2
  44a1f4:	msub	w1, w1, w2, w13
  44a1f8:	msub	w2, w0, w2, w12
  44a1fc:	add	w1, w2, w1, lsl #16
  44a200:	cmp	w1, w8
  44a204:	cset	w0, eq  // eq = none
  44a208:	b	449764 <ferror@plt+0x46194>
  44a20c:	add	x16, x19, x14
  44a210:	ldrb	w11, [x19]
  44a214:	add	x19, x19, #0x10
  44a218:	ldurb	w24, [x19, #-15]
  44a21c:	ldurb	w4, [x19, #-14]
  44a220:	add	w11, w11, w12
  44a224:	add	w24, w24, w11
  44a228:	ldurb	w10, [x19, #-12]
  44a22c:	add	w3, w4, w24
  44a230:	ldurb	w4, [x19, #-13]
  44a234:	ldurb	w23, [x19, #-11]
  44a238:	add	w11, w11, w24
  44a23c:	add	w25, w4, w3
  44a240:	ldurb	w9, [x19, #-10]
  44a244:	add	w10, w10, w25
  44a248:	ldurb	w22, [x19, #-9]
  44a24c:	add	w23, w23, w10
  44a250:	ldurb	w7, [x19, #-8]
  44a254:	add	w9, w9, w23
  44a258:	ldurb	w21, [x19, #-7]
  44a25c:	add	w22, w22, w9
  44a260:	ldurb	w6, [x19, #-6]
  44a264:	add	w7, w7, w22
  44a268:	ldurb	w20, [x19, #-5]
  44a26c:	add	w21, w21, w7
  44a270:	ldurb	w5, [x19, #-4]
  44a274:	add	w6, w6, w21
  44a278:	ldurb	w18, [x19, #-3]
  44a27c:	add	w20, w20, w6
  44a280:	ldurb	w4, [x19, #-2]
  44a284:	add	w5, w5, w20
  44a288:	add	w10, w10, w23
  44a28c:	add	w18, w18, w5
  44a290:	add	w9, w9, w22
  44a294:	add	w0, w4, w18
  44a298:	add	w4, w3, w25
  44a29c:	add	w4, w4, w11
  44a2a0:	ldurb	w17, [x19, #-1]
  44a2a4:	add	w4, w4, w10
  44a2a8:	add	w7, w7, w21
  44a2ac:	add	w4, w4, w9
  44a2b0:	add	w6, w6, w20
  44a2b4:	add	w2, w4, w7
  44a2b8:	add	w5, w5, w18
  44a2bc:	add	w2, w2, w6
  44a2c0:	add	w4, w17, w0, lsl #1
  44a2c4:	add	w2, w2, w5
  44a2c8:	add	w12, w17, w0
  44a2cc:	add	w2, w2, w4
  44a2d0:	cmp	x19, x16
  44a2d4:	add	w13, w13, w2
  44a2d8:	b.ne	44a210 <ferror@plt+0x46c40>  // b.any
  44a2dc:	udiv	w0, w12, w1
  44a2e0:	sub	x26, x26, x14
  44a2e4:	msub	w12, w0, w1, w12
  44a2e8:	udiv	w0, w13, w1
  44a2ec:	msub	w13, w0, w1, w13
  44a2f0:	b	44a1b8 <ferror@plt+0x46be8>
  44a2f4:	ldrb	w1, [x19]
  44a2f8:	add	x19, x19, #0x10
  44a2fc:	ldurb	w11, [x19, #-15]
  44a300:	add	w2, w1, w12
  44a304:	ldurb	w22, [x19, #-14]
  44a308:	add	w11, w11, w2
  44a30c:	ldurb	w10, [x19, #-13]
  44a310:	ldurb	w21, [x19, #-12]
  44a314:	add	w22, w22, w11
  44a318:	ldurb	w9, [x19, #-11]
  44a31c:	add	w10, w10, w22
  44a320:	ldurb	w20, [x19, #-10]
  44a324:	add	w21, w21, w10
  44a328:	ldurb	w7, [x19, #-9]
  44a32c:	add	w9, w9, w21
  44a330:	ldurb	w18, [x19, #-8]
  44a334:	add	w20, w20, w9
  44a338:	ldurb	w6, [x19, #-7]
  44a33c:	add	w7, w7, w20
  44a340:	ldurb	w17, [x19, #-6]
  44a344:	add	w18, w18, w7
  44a348:	add	w1, w2, w13
  44a34c:	ldurb	w5, [x19, #-5]
  44a350:	add	w6, w6, w18
  44a354:	add	w11, w11, w22
  44a358:	ldurb	w16, [x19, #-2]
  44a35c:	add	w17, w17, w6
  44a360:	ldurb	w15, [x19, #-4]
  44a364:	add	w1, w1, w11
  44a368:	ldurb	w3, [x19, #-3]
  44a36c:	add	w10, w10, w21
  44a370:	add	w5, w5, w17
  44a374:	add	w1, w1, w10
  44a378:	add	w9, w9, w20
  44a37c:	add	w15, w15, w5
  44a380:	add	w1, w1, w9
  44a384:	add	w7, w7, w18
  44a388:	add	w3, w3, w15
  44a38c:	add	w0, w1, w7
  44a390:	add	w6, w6, w17
  44a394:	ldurb	w2, [x19, #-1]
  44a398:	add	w0, w0, w6
  44a39c:	add	w5, w5, w15
  44a3a0:	add	w12, w16, w3
  44a3a4:	add	w0, w0, w5
  44a3a8:	add	w3, w16, w3, lsl #1
  44a3ac:	add	w12, w2, w12
  44a3b0:	add	w0, w0, w3
  44a3b4:	add	w13, w12, w0
  44a3b8:	b	44a1cc <ferror@plt+0x46bfc>
  44a3bc:	ldrb	w0, [x19, x3]
  44a3c0:	add	x3, x3, #0x1
  44a3c4:	add	w12, w12, w0
  44a3c8:	add	w13, w13, w12
  44a3cc:	b	44a1e0 <ferror@plt+0x46c10>
  44a3d0:	stp	x29, x30, [sp, #-80]!
  44a3d4:	mov	x29, sp
  44a3d8:	stp	x21, x22, [sp, #32]
  44a3dc:	mov	x21, x1
  44a3e0:	mov	x22, x7
  44a3e4:	stp	x23, x24, [sp, #48]
  44a3e8:	mov	x24, x2
  44a3ec:	mov	x23, x6
  44a3f0:	mov	x2, x4
  44a3f4:	str	x25, [sp, #64]
  44a3f8:	mov	x25, x3
  44a3fc:	mov	x3, x5
  44a400:	add	x5, x21, #0x4
  44a404:	mov	x1, #0x0                   	// #0
  44a408:	stp	x19, x20, [sp, #16]
  44a40c:	mov	x19, #0x0                   	// #0
  44a410:	ldrb	w4, [x5, x1]
  44a414:	add	x1, x1, #0x1
  44a418:	cmp	x1, #0x8
  44a41c:	orr	x19, x4, x19, lsl #8
  44a420:	b.ne	44a410 <ferror@plt+0x46e40>  // b.any
  44a424:	mov	x1, x19
  44a428:	bl	4487bc <ferror@plt+0x451ec>
  44a42c:	mov	x20, x0
  44a430:	cbz	x0, 44a460 <ferror@plt+0x46e90>
  44a434:	mov	x3, x0
  44a438:	mov	x4, x19
  44a43c:	mov	x2, x25
  44a440:	sub	x1, x24, #0xc
  44a444:	add	x0, x21, #0xc
  44a448:	bl	4496f0 <ferror@plt+0x46120>
  44a44c:	cbz	w0, 44a458 <ferror@plt+0x46e88>
  44a450:	str	x20, [x23]
  44a454:	str	x19, [x22]
  44a458:	mov	w0, #0x1                   	// #1
  44a45c:	b	44a464 <ferror@plt+0x46e94>
  44a460:	mov	w0, #0x0                   	// #0
  44a464:	ldp	x19, x20, [sp, #16]
  44a468:	ldp	x21, x22, [sp, #32]
  44a46c:	ldp	x23, x24, [sp, #48]
  44a470:	ldr	x25, [sp, #64]
  44a474:	ldp	x29, x30, [sp], #80
  44a478:	ret
  44a47c:	sub	sp, sp, #0x4a0
  44a480:	stp	x29, x30, [sp, #80]
  44a484:	add	x29, sp, #0x50
  44a488:	stp	x27, x28, [sp, #160]
  44a48c:	mov	x27, x0
  44a490:	ldr	w0, [sp, #1208]
  44a494:	stp	x19, x20, [sp, #96]
  44a498:	mov	x19, x4
  44a49c:	mov	x20, x5
  44a4a0:	stp	x21, x22, [sp, #112]
  44a4a4:	stp	x23, x24, [sp, #128]
  44a4a8:	mov	w24, w2
  44a4ac:	stp	x25, x26, [sp, #144]
  44a4b0:	stp	x3, x7, [sp, #240]
  44a4b4:	str	x6, [sp, #272]
  44a4b8:	str	x1, [sp, #296]
  44a4bc:	cbnz	w0, 44a4cc <ferror@plt+0x46efc>
  44a4c0:	ldr	x0, [sp, #1184]
  44a4c4:	str	wzr, [x7]
  44a4c8:	str	wzr, [x0]
  44a4cc:	add	x25, sp, #0x198
  44a4d0:	mov	x5, x20
  44a4d4:	mov	x6, x25
  44a4d8:	mov	x4, x19
  44a4dc:	mov	w1, w24
  44a4e0:	mov	x0, x27
  44a4e4:	mov	x3, #0x40                  	// #64
  44a4e8:	mov	x2, #0x0                   	// #0
  44a4ec:	bl	44b9e0 <ferror@plt+0x48410>
  44a4f0:	cbz	w0, 44a594 <ferror@plt+0x46fc4>
  44a4f4:	ldr	x0, [sp, #408]
  44a4f8:	add	x1, sp, #0x200
  44a4fc:	ldp	x2, x3, [x0]
  44a500:	stp	x2, x3, [x1, #160]
  44a504:	ldrb	w4, [x0, #6]
  44a508:	ldp	x2, x3, [x0, #16]
  44a50c:	stp	x2, x3, [x1, #176]
  44a510:	ldrb	w23, [x0, #4]
  44a514:	ldp	x2, x3, [x0, #32]
  44a518:	stp	x2, x3, [x1, #192]
  44a51c:	add	x1, sp, #0x2d0
  44a520:	ldp	x2, x3, [x0, #48]
  44a524:	str	w4, [sp, #184]
  44a528:	stp	x2, x3, [x1]
  44a52c:	ldrb	w1, [x0, #5]
  44a530:	str	w1, [sp, #316]
  44a534:	mov	x3, x20
  44a538:	ldrh	w1, [x0, #18]
  44a53c:	mov	x2, x19
  44a540:	str	w1, [sp, #376]
  44a544:	ldr	w1, [x0, #48]
  44a548:	ldrh	w26, [x0, #16]
  44a54c:	ldrh	w28, [x0, #60]
  44a550:	ldrh	w22, [x0, #62]
  44a554:	str	w1, [sp, #336]
  44a558:	mov	x1, x25
  44a55c:	ldr	x21, [x0, #40]
  44a560:	mov	x0, x27
  44a564:	bl	44ba9c <ferror@plt+0x484cc>
  44a568:	ldr	w1, [sp, #672]
  44a56c:	mov	w0, #0x457f                	// #17791
  44a570:	movk	w0, #0x464c, lsl #16
  44a574:	ldr	w4, [sp, #184]
  44a578:	cmp	w1, w0
  44a57c:	b.eq	44a5a0 <ferror@plt+0x46fd0>  // b.none
  44a580:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a584:	add	x1, x1, #0x4f0
  44a588:	mov	w2, #0x0                   	// #0
  44a58c:	mov	x0, x20
  44a590:	blr	x19
  44a594:	mov	w28, #0x0                   	// #0
  44a598:	mov	x22, #0x0                   	// #0
  44a59c:	b	44a8fc <ferror@plt+0x4732c>
  44a5a0:	cmp	w4, #0x1
  44a5a4:	b.eq	44a5b8 <ferror@plt+0x46fe8>  // b.none
  44a5a8:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a5ac:	mov	w2, #0x0                   	// #0
  44a5b0:	add	x1, x1, #0x50b
  44a5b4:	b	44a58c <ferror@plt+0x46fbc>
  44a5b8:	cmp	w23, #0x2
  44a5bc:	b.eq	44a5d0 <ferror@plt+0x47000>  // b.none
  44a5c0:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a5c4:	mov	w2, #0x0                   	// #0
  44a5c8:	add	x1, x1, #0x537
  44a5cc:	b	44a58c <ferror@plt+0x46fbc>
  44a5d0:	ldr	w0, [sp, #316]
  44a5d4:	sub	w0, w0, #0x1
  44a5d8:	and	w0, w0, #0xff
  44a5dc:	cmp	w0, #0x1
  44a5e0:	b.ls	44a5f4 <ferror@plt+0x47024>  // b.plast
  44a5e4:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a5e8:	mov	w2, #0x0                   	// #0
  44a5ec:	add	x1, x1, #0x55f
  44a5f0:	b	44a58c <ferror@plt+0x46fbc>
  44a5f4:	ldr	w0, [sp, #1200]
  44a5f8:	cbz	w0, 44a604 <ferror@plt+0x47034>
  44a5fc:	cmp	w26, #0x3
  44a600:	b.eq	44b628 <ferror@plt+0x48058>  // b.none
  44a604:	mov	w0, w28
  44a608:	str	w28, [sp, #192]
  44a60c:	cmp	w0, #0x0
  44a610:	mov	w25, #0xffff                	// #65535
  44a614:	ccmp	w22, w25, #0x4, ne  // ne = any
  44a618:	b.ne	44a698 <ferror@plt+0x470c8>  // b.any
  44a61c:	cbz	x21, 44a698 <ferror@plt+0x470c8>
  44a620:	add	x23, sp, #0x360
  44a624:	mov	x5, x20
  44a628:	mov	x6, x23
  44a62c:	mov	x4, x19
  44a630:	mov	x2, x21
  44a634:	mov	w1, w24
  44a638:	mov	x0, x27
  44a63c:	mov	x3, #0x8                   	// #8
  44a640:	bl	44b9e0 <ferror@plt+0x48410>
  44a644:	cbz	w0, 44a594 <ferror@plt+0x46fc4>
  44a648:	ldr	w1, [sp, #192]
  44a64c:	ldr	x0, [sp, #864]
  44a650:	cbnz	w1, 44a664 <ferror@plt+0x47094>
  44a654:	ldr	w1, [x0, #32]
  44a658:	cmp	w22, w25
  44a65c:	str	w1, [sp, #192]
  44a660:	b.ne	44a684 <ferror@plt+0x470b4>  // b.any
  44a664:	ldr	w22, [x0, #40]
  44a668:	ldr	w0, [sp, #192]
  44a66c:	cmp	w22, w0
  44a670:	mov	w0, #0xffff                	// #65535
  44a674:	ccmp	w22, w0, #0x0, cs  // cs = hs, nlast
  44a678:	mov	w0, w22
  44a67c:	sub	w22, w22, #0x100
  44a680:	csel	w22, w22, w0, hi  // hi = pmore
  44a684:	mov	x3, x20
  44a688:	mov	x2, x19
  44a68c:	mov	x1, x23
  44a690:	mov	x0, x27
  44a694:	bl	44ba9c <ferror@plt+0x484cc>
  44a698:	ldr	w0, [sp, #192]
  44a69c:	add	x6, sp, #0x1b0
  44a6a0:	mov	x5, x20
  44a6a4:	mov	x4, x19
  44a6a8:	sub	w3, w0, #0x1
  44a6ac:	add	x2, x21, #0x40
  44a6b0:	mov	w1, w24
  44a6b4:	mov	x0, x27
  44a6b8:	lsl	x3, x3, #6
  44a6bc:	bl	44b9e0 <ferror@plt+0x48410>
  44a6c0:	cbz	w0, 44a594 <ferror@plt+0x46fc4>
  44a6c4:	ldr	x0, [sp, #432]
  44a6c8:	sub	w22, w22, #0x1
  44a6cc:	str	x0, [sp, #264]
  44a6d0:	add	x6, sp, #0x1c8
  44a6d4:	mov	x5, x20
  44a6d8:	mov	x4, x19
  44a6dc:	add	x22, x0, x22, lsl #6
  44a6e0:	mov	w1, w24
  44a6e4:	ldr	x2, [x22, #24]
  44a6e8:	ldr	x0, [x22, #32]
  44a6ec:	str	x0, [sp, #320]
  44a6f0:	mov	x3, x0
  44a6f4:	mov	x0, x27
  44a6f8:	bl	44b9e0 <ferror@plt+0x48410>
  44a6fc:	mov	w21, w0
  44a700:	cbz	w0, 44b630 <ferror@plt+0x48060>
  44a704:	add	x3, sp, #0x360
  44a708:	mov	x2, #0x140                 	// #320
  44a70c:	ldr	x0, [sp, #456]
  44a710:	mov	w1, #0x0                   	// #0
  44a714:	str	x0, [sp, #344]
  44a718:	mov	x0, x3
  44a71c:	bl	403000 <memset@plt>
  44a720:	mov	x3, x0
  44a724:	mov	w0, #0x1                   	// #1
  44a728:	str	w0, [sp, #208]
  44a72c:	adrp	x0, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  44a730:	add	x0, x0, #0x9c8
  44a734:	ldr	x23, [sp, #264]
  44a738:	str	x0, [sp, #352]
  44a73c:	add	x0, sp, #0x270
  44a740:	mov	x22, #0x0                   	// #0
  44a744:	mov	w26, #0x0                   	// #0
  44a748:	mov	w25, #0x0                   	// #0
  44a74c:	str	wzr, [sp, #184]
  44a750:	str	wzr, [sp, #200]
  44a754:	str	wzr, [sp, #216]
  44a758:	str	xzr, [sp, #224]
  44a75c:	str	xzr, [sp, #256]
  44a760:	str	xzr, [sp, #280]
  44a764:	str	wzr, [sp, #288]
  44a768:	str	wzr, [sp, #292]
  44a76c:	str	xzr, [sp, #304]
  44a770:	str	wzr, [sp, #312]
  44a774:	str	x0, [sp, #328]
  44a778:	add	x0, x0, #0x18
  44a77c:	str	x3, [sp, #360]
  44a780:	str	x0, [sp, #368]
  44a784:	ldr	w0, [sp, #192]
  44a788:	ldr	w1, [sp, #208]
  44a78c:	cmp	w0, w1
  44a790:	b.hi	44a7f0 <ferror@plt+0x47220>  // b.pmore
  44a794:	ldr	w0, [sp, #200]
  44a798:	ldr	w1, [sp, #288]
  44a79c:	cmp	w0, #0x0
  44a7a0:	csel	w0, w0, w1, ne  // ne = any
  44a7a4:	str	w0, [sp, #200]
  44a7a8:	cmp	w0, #0x0
  44a7ac:	ldr	w0, [sp, #1208]
  44a7b0:	eor	w0, w0, #0x1
  44a7b4:	and	w0, w0, #0x1
  44a7b8:	csel	w0, w0, wzr, ne  // ne = any
  44a7bc:	cbz	w0, 44b064 <ferror@plt+0x47a94>
  44a7c0:	ldr	w0, [sp, #200]
  44a7c4:	sub	w21, w0, #0x1
  44a7c8:	ldr	x0, [sp, #264]
  44a7cc:	add	x21, x0, x21, lsl #6
  44a7d0:	ldr	w0, [sp, #192]
  44a7d4:	ldr	w23, [x21, #40]
  44a7d8:	cmp	w0, w23
  44a7dc:	b.hi	44ac34 <ferror@plt+0x47664>  // b.pmore
  44a7e0:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a7e4:	mov	w2, #0x0                   	// #0
  44a7e8:	add	x1, x1, #0x5e1
  44a7ec:	b	44a82c <ferror@plt+0x4725c>
  44a7f0:	ldr	w0, [x23, #4]
  44a7f4:	cmp	w0, #0x2
  44a7f8:	b.eq	44a94c <ferror@plt+0x4737c>  // b.none
  44a7fc:	cmp	w0, #0xb
  44a800:	ldr	w1, [sp, #208]
  44a804:	ldr	w0, [sp, #288]
  44a808:	csel	w0, w0, w1, ne  // ne = any
  44a80c:	str	w0, [sp, #288]
  44a810:	ldr	x1, [sp, #320]
  44a814:	ldr	w0, [x23]
  44a818:	cmp	x0, x1
  44a81c:	b.cc	44a958 <ferror@plt+0x47388>  // b.lo, b.ul, b.last
  44a820:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a824:	add	x1, x1, #0x586
  44a828:	mov	w2, #0x0                   	// #0
  44a82c:	mov	w28, #0x0                   	// #0
  44a830:	mov	x0, x20
  44a834:	blr	x19
  44a838:	mov	w7, #0x0                   	// #0
  44a83c:	mov	w21, #0x1                   	// #1
  44a840:	mov	x3, x20
  44a844:	mov	x2, x19
  44a848:	add	x1, sp, #0x1b0
  44a84c:	mov	x0, x27
  44a850:	str	w7, [sp, #192]
  44a854:	bl	44ba9c <ferror@plt+0x484cc>
  44a858:	ldr	w7, [sp, #192]
  44a85c:	cbz	w21, 44a87c <ferror@plt+0x472ac>
  44a860:	mov	x3, x20
  44a864:	mov	x2, x19
  44a868:	add	x1, sp, #0x1c8
  44a86c:	mov	x0, x27
  44a870:	str	w7, [sp, #192]
  44a874:	bl	44ba9c <ferror@plt+0x484cc>
  44a878:	ldr	w7, [sp, #192]
  44a87c:	cbz	w7, 44a894 <ferror@plt+0x472c4>
  44a880:	mov	x3, x20
  44a884:	mov	x2, x19
  44a888:	add	x1, sp, #0x1e0
  44a88c:	mov	x0, x27
  44a890:	bl	44ba9c <ferror@plt+0x484cc>
  44a894:	cbz	w28, 44a8b0 <ferror@plt+0x472e0>
  44a898:	mov	w28, #0x0                   	// #0
  44a89c:	mov	x3, x20
  44a8a0:	mov	x2, x19
  44a8a4:	add	x1, sp, #0x1f8
  44a8a8:	mov	x0, x27
  44a8ac:	bl	44ba9c <ferror@plt+0x484cc>
  44a8b0:	cbz	w26, 44a8c8 <ferror@plt+0x472f8>
  44a8b4:	mov	x3, x20
  44a8b8:	mov	x2, x19
  44a8bc:	add	x1, sp, #0x228
  44a8c0:	mov	x0, x27
  44a8c4:	bl	44ba9c <ferror@plt+0x484cc>
  44a8c8:	ldr	w0, [sp, #184]
  44a8cc:	cbz	w0, 44a8e4 <ferror@plt+0x47314>
  44a8d0:	mov	x3, x20
  44a8d4:	mov	x2, x19
  44a8d8:	add	x1, sp, #0x240
  44a8dc:	mov	x0, x27
  44a8e0:	bl	44ba9c <ferror@plt+0x484cc>
  44a8e4:	cbz	w25, 44a8fc <ferror@plt+0x4732c>
  44a8e8:	mov	x3, x20
  44a8ec:	mov	x2, x19
  44a8f0:	add	x1, sp, #0x210
  44a8f4:	mov	x0, x27
  44a8f8:	bl	44ba9c <ferror@plt+0x484cc>
  44a8fc:	cbz	w28, 44a914 <ferror@plt+0x47344>
  44a900:	mov	x3, x20
  44a904:	mov	x2, x19
  44a908:	add	x1, sp, #0x2e0
  44a90c:	mov	x0, x27
  44a910:	bl	44ba9c <ferror@plt+0x484cc>
  44a914:	cbz	x22, 44a92c <ferror@plt+0x4735c>
  44a918:	mov	x3, x20
  44a91c:	mov	x2, x19
  44a920:	add	x1, x22, #0x18
  44a924:	mov	x0, x27
  44a928:	bl	44ba9c <ferror@plt+0x484cc>
  44a92c:	cmn	w24, #0x1
  44a930:	b.eq	44a944 <ferror@plt+0x47374>  // b.none
  44a934:	mov	x2, x20
  44a938:	mov	x1, x19
  44a93c:	mov	w0, w24
  44a940:	bl	448df0 <ferror@plt+0x45820>
  44a944:	mov	w22, #0x0                   	// #0
  44a948:	b	44b0c8 <ferror@plt+0x47af8>
  44a94c:	ldr	w0, [sp, #208]
  44a950:	str	w0, [sp, #200]
  44a954:	b	44a810 <ferror@plt+0x47240>
  44a958:	ldr	x1, [sp, #344]
  44a95c:	mov	x21, #0x0                   	// #0
  44a960:	add	x0, x1, x0
  44a964:	str	x0, [sp, #232]
  44a968:	ldr	x0, [sp, #352]
  44a96c:	ldr	x1, [x0, x21, lsl #3]
  44a970:	ldr	x0, [sp, #232]
  44a974:	bl	403220 <strcmp@plt>
  44a978:	cbnz	w0, 44ab1c <ferror@plt+0x4754c>
  44a97c:	ldr	x2, [sp, #360]
  44a980:	sbfiz	x0, x21, #5, #32
  44a984:	ldr	x1, [x23, #24]
  44a988:	str	x1, [x2, x0]
  44a98c:	add	x1, sp, #0x368
  44a990:	ldr	x2, [x23, #32]
  44a994:	str	x2, [x1, x0]
  44a998:	add	x2, sp, #0x378
  44a99c:	ldr	x1, [x23, #8]
  44a9a0:	ubfx	w1, w1, #11, #1
  44a9a4:	str	w1, [x2, x0]
  44a9a8:	ldr	w0, [sp, #1208]
  44a9ac:	ldr	x1, [sp, #1216]
  44a9b0:	eor	w0, w0, #0x1
  44a9b4:	and	w0, w0, #0x1
  44a9b8:	cmp	x1, #0x0
  44a9bc:	csinc	w0, w0, wzr, eq  // eq = none
  44a9c0:	cbz	w0, 44aa9c <ferror@plt+0x474cc>
  44a9c4:	cbnz	w25, 44aa9c <ferror@plt+0x474cc>
  44a9c8:	ldr	x0, [sp, #232]
  44a9cc:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44a9d0:	add	x1, x1, #0x5a4
  44a9d4:	bl	403220 <strcmp@plt>
  44a9d8:	mov	w7, w0
  44a9dc:	cbnz	w0, 44aa9c <ferror@plt+0x474cc>
  44a9e0:	ldp	x2, x3, [x23, #24]
  44a9e4:	add	x6, sp, #0x210
  44a9e8:	mov	x5, x20
  44a9ec:	mov	x4, x19
  44a9f0:	mov	w1, w24
  44a9f4:	mov	x0, x27
  44a9f8:	str	w7, [sp, #380]
  44a9fc:	bl	44b9e0 <ferror@plt+0x48410>
  44aa00:	mov	w28, w0
  44aa04:	cbz	w0, 44a838 <ferror@plt+0x47268>
  44aa08:	ldr	x21, [sp, #528]
  44aa0c:	ldr	w7, [sp, #380]
  44aa10:	ldr	w0, [x21, #8]
  44aa14:	cmp	w0, #0x3
  44aa18:	b.ne	44aa64 <ferror@plt+0x47494>  // b.any
  44aa1c:	ldr	w0, [x21]
  44aa20:	cmp	w0, #0x4
  44aa24:	b.ne	44aa64 <ferror@plt+0x47494>  // b.any
  44aa28:	add	x0, x21, #0xc
  44aa2c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44aa30:	add	x1, x1, #0x5b7
  44aa34:	str	w7, [sp, #380]
  44aa38:	bl	403220 <strcmp@plt>
  44aa3c:	ldr	w7, [sp, #380]
  44aa40:	cbnz	w0, 44aa64 <ferror@plt+0x47494>
  44aa44:	ldr	w0, [x21, #4]
  44aa48:	ldr	x2, [x23, #32]
  44aa4c:	add	w1, w0, #0x10
  44aa50:	cmp	x2, x1
  44aa54:	b.hi	44aa64 <ferror@plt+0x47494>  // b.pmore
  44aa58:	add	x1, x21, #0x10
  44aa5c:	str	w0, [sp, #216]
  44aa60:	str	x1, [sp, #256]
  44aa64:	ldr	w0, [sp, #1224]
  44aa68:	cbz	w0, 44aa98 <ferror@plt+0x474c8>
  44aa6c:	ldr	w0, [sp, #216]
  44aa70:	ldr	w1, [sp, #1224]
  44aa74:	cmp	w0, w1
  44aa78:	b.ne	44b64c <ferror@plt+0x4807c>  // b.any
  44aa7c:	mov	x2, x0
  44aa80:	str	w7, [sp, #380]
  44aa84:	ldr	x0, [sp, #256]
  44aa88:	ldr	x1, [sp, #1216]
  44aa8c:	bl	4031e0 <memcmp@plt>
  44aa90:	ldr	w7, [sp, #380]
  44aa94:	cbnz	w0, 44b64c <ferror@plt+0x4807c>
  44aa98:	mov	w25, #0x1                   	// #1
  44aa9c:	ldr	w0, [sp, #1208]
  44aaa0:	orr	w0, w26, w0
  44aaa4:	cbnz	w0, 44ab30 <ferror@plt+0x47560>
  44aaa8:	ldr	x0, [sp, #232]
  44aaac:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44aab0:	add	x1, x1, #0x5bb
  44aab4:	bl	403220 <strcmp@plt>
  44aab8:	cbnz	w0, 44ab2c <ferror@plt+0x4755c>
  44aabc:	ldp	x2, x3, [x23, #24]
  44aac0:	add	x6, sp, #0x228
  44aac4:	mov	x5, x20
  44aac8:	mov	x4, x19
  44aacc:	mov	w1, w24
  44aad0:	mov	x0, x27
  44aad4:	bl	44b9e0 <ferror@plt+0x48410>
  44aad8:	mov	w7, w0
  44aadc:	cbz	w0, 44b658 <ferror@plt+0x48088>
  44aae0:	ldr	x26, [x23, #32]
  44aae4:	ldr	x21, [sp, #552]
  44aae8:	mov	x1, x26
  44aaec:	mov	x0, x21
  44aaf0:	bl	402da0 <strnlen@plt>
  44aaf4:	add	x0, x0, #0x3
  44aaf8:	and	x0, x0, #0xfffffffffffffffc
  44aafc:	add	x1, x0, #0x4
  44ab00:	cmp	x26, x1
  44ab04:	b.cc	44ab14 <ferror@plt+0x47544>  // b.lo, b.ul, b.last
  44ab08:	ldr	w0, [x21, x0]
  44ab0c:	str	x21, [sp, #280]
  44ab10:	str	w0, [sp, #292]
  44ab14:	mov	w26, #0x1                   	// #1
  44ab18:	b	44ab30 <ferror@plt+0x47560>
  44ab1c:	add	x21, x21, #0x1
  44ab20:	cmp	x21, #0xa
  44ab24:	b.ne	44a968 <ferror@plt+0x47398>  // b.any
  44ab28:	b	44a9a8 <ferror@plt+0x473d8>
  44ab2c:	mov	w26, #0x0                   	// #0
  44ab30:	ldr	w0, [sp, #184]
  44ab34:	cbnz	w0, 44abac <ferror@plt+0x475dc>
  44ab38:	ldr	x0, [sp, #232]
  44ab3c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44ab40:	add	x1, x1, #0x5ca
  44ab44:	bl	403220 <strcmp@plt>
  44ab48:	cbnz	w0, 44abac <ferror@plt+0x475dc>
  44ab4c:	ldp	x2, x3, [x23, #24]
  44ab50:	add	x6, sp, #0x240
  44ab54:	mov	x5, x20
  44ab58:	mov	x4, x19
  44ab5c:	mov	w1, w24
  44ab60:	mov	x0, x27
  44ab64:	bl	44b9e0 <ferror@plt+0x48410>
  44ab68:	mov	w7, w0
  44ab6c:	cbz	w0, 44b65c <ferror@plt+0x4808c>
  44ab70:	ldr	x0, [sp, #576]
  44ab74:	str	x0, [sp, #224]
  44ab78:	ldr	x21, [x23, #32]
  44ab7c:	mov	x1, x21
  44ab80:	bl	402da0 <strnlen@plt>
  44ab84:	cmp	x21, x0
  44ab88:	b.ls	44aba4 <ferror@plt+0x475d4>  // b.plast
  44ab8c:	ldr	x1, [sp, #224]
  44ab90:	add	x0, x0, #0x1
  44ab94:	add	x1, x1, x0
  44ab98:	sub	w0, w21, w0
  44ab9c:	str	x1, [sp, #304]
  44aba0:	str	w0, [sp, #312]
  44aba4:	mov	w0, #0x1                   	// #1
  44aba8:	str	w0, [sp, #184]
  44abac:	ldr	w0, [sp, #376]
  44abb0:	cmp	w0, #0x15
  44abb4:	b.ne	44ac20 <ferror@plt+0x47650>  // b.any
  44abb8:	ldr	x0, [sp, #336]
  44abbc:	tbnz	w0, #1, 44ac20 <ferror@plt+0x47650>
  44abc0:	ldr	w21, [x23, #4]
  44abc4:	cmp	w21, #0x1
  44abc8:	b.ne	44ac20 <ferror@plt+0x47650>  // b.any
  44abcc:	ldr	x0, [sp, #232]
  44abd0:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44abd4:	add	x1, x1, #0x5dc
  44abd8:	bl	403220 <strcmp@plt>
  44abdc:	cbnz	w0, 44ac20 <ferror@plt+0x47650>
  44abe0:	ldp	x2, x3, [x23, #24]
  44abe4:	mov	x5, x20
  44abe8:	ldr	x6, [sp, #368]
  44abec:	mov	x4, x19
  44abf0:	mov	w1, w24
  44abf4:	mov	x0, x27
  44abf8:	bl	44b9e0 <ferror@plt+0x48410>
  44abfc:	mov	w7, w0
  44ac00:	cbz	w0, 44b664 <ferror@plt+0x48094>
  44ac04:	ldr	x0, [x23, #16]
  44ac08:	str	x0, [sp, #624]
  44ac0c:	ldr	x22, [sp, #328]
  44ac10:	ldr	x0, [sp, #648]
  44ac14:	str	x0, [sp, #632]
  44ac18:	ldr	x0, [x23, #32]
  44ac1c:	str	x0, [sp, #640]
  44ac20:	ldr	w0, [sp, #208]
  44ac24:	add	x23, x23, #0x40
  44ac28:	add	w0, w0, #0x1
  44ac2c:	str	w0, [sp, #208]
  44ac30:	b	44a784 <ferror@plt+0x471b4>
  44ac34:	ldp	x2, x3, [x21, #24]
  44ac38:	add	x6, sp, #0x1e0
  44ac3c:	mov	x5, x20
  44ac40:	mov	x4, x19
  44ac44:	mov	w1, w24
  44ac48:	mov	x0, x27
  44ac4c:	bl	44b9e0 <ferror@plt+0x48410>
  44ac50:	mov	w7, w0
  44ac54:	cbz	w0, 44b65c <ferror@plt+0x4808c>
  44ac58:	ldr	x0, [sp, #264]
  44ac5c:	sub	w7, w23, #0x1
  44ac60:	add	x6, sp, #0x1f8
  44ac64:	mov	x5, x20
  44ac68:	mov	x4, x19
  44ac6c:	mov	w1, w24
  44ac70:	add	x7, x0, x7, lsl #6
  44ac74:	mov	x0, x27
  44ac78:	str	x7, [sp, #192]
  44ac7c:	ldp	x2, x3, [x7, #24]
  44ac80:	bl	44b9e0 <ferror@plt+0x48410>
  44ac84:	mov	w28, w0
  44ac88:	cbz	w0, 44b66c <ferror@plt+0x4809c>
  44ac8c:	mov	x3, x20
  44ac90:	mov	x2, x19
  44ac94:	mov	x0, x27
  44ac98:	mov	x1, #0x18                  	// #24
  44ac9c:	bl	4487bc <ferror@plt+0x451ec>
  44aca0:	mov	x28, x0
  44aca4:	cbz	x0, 44ae34 <ferror@plt+0x47864>
  44aca8:	ldr	x0, [x21, #32]
  44acac:	mov	x1, #0x18                  	// #24
  44acb0:	ldr	x7, [sp, #192]
  44acb4:	mov	x5, #0x0                   	// #0
  44acb8:	udiv	x0, x0, x1
  44acbc:	ldr	x23, [sp, #480]
  44acc0:	ldr	x7, [x7, #32]
  44acc4:	mov	x4, x23
  44acc8:	madd	x0, x0, x1, x23
  44accc:	ldr	x8, [sp, #504]
  44acd0:	cmp	x0, x4
  44acd4:	b.ne	44ad98 <ferror@plt+0x477c8>  // b.any
  44acd8:	mov	x9, #0x18                  	// #24
  44acdc:	mov	x3, x20
  44ace0:	mov	x2, x19
  44ace4:	mov	x0, x27
  44ace8:	mul	x6, x5, x9
  44acec:	str	x8, [sp, #208]
  44acf0:	stp	x6, x5, [sp, #192]
  44acf4:	mov	x1, x6
  44acf8:	str	x7, [sp, #232]
  44acfc:	str	x4, [sp, #264]
  44ad00:	bl	4487bc <ferror@plt+0x451ec>
  44ad04:	mov	x21, x0
  44ad08:	cbz	x0, 44ae1c <ferror@plt+0x4784c>
  44ad0c:	ldp	x6, x5, [sp, #192]
  44ad10:	mov	x9, #0x18                  	// #24
  44ad14:	ldr	x8, [sp, #208]
  44ad18:	mov	w2, w9
  44ad1c:	ldr	x7, [sp, #232]
  44ad20:	mov	w3, #0x0                   	// #0
  44ad24:	ldr	x4, [sp, #264]
  44ad28:	cmp	x4, x23
  44ad2c:	b.ne	44adc0 <ferror@plt+0x477f0>  // b.any
  44ad30:	mov	x1, x5
  44ad34:	mov	x0, x21
  44ad38:	mov	x2, #0x18                  	// #24
  44ad3c:	adrp	x3, 448000 <ferror@plt+0x44a30>
  44ad40:	add	x3, x3, #0xe7c
  44ad44:	str	x5, [sp, #192]
  44ad48:	bl	44eae8 <ferror@plt+0x4b518>
  44ad4c:	stp	xzr, x21, [x28]
  44ad50:	add	x1, sp, #0x1e0
  44ad54:	ldr	x5, [sp, #192]
  44ad58:	str	x5, [x28, #16]
  44ad5c:	mov	x0, x27
  44ad60:	mov	x3, x20
  44ad64:	mov	x2, x19
  44ad68:	bl	44ba9c <ferror@plt+0x484cc>
  44ad6c:	ldr	x1, [sp, #248]
  44ad70:	mov	w0, #0x1                   	// #1
  44ad74:	str	w0, [x1]
  44ad78:	add	x1, x27, #0x30
  44ad7c:	ldr	w0, [x27, #8]
  44ad80:	cbz	w0, 44aea4 <ferror@plt+0x478d4>
  44ad84:	mov	x0, x1
  44ad88:	ldar	x2, [x0]
  44ad8c:	cbz	x2, 44b044 <ferror@plt+0x47a74>
  44ad90:	mov	x0, x2
  44ad94:	b	44ad88 <ferror@plt+0x477b8>
  44ad98:	ldrb	w1, [x4, #4]
  44ad9c:	and	w1, w1, #0xf
  44ada0:	sub	w1, w1, #0x1
  44ada4:	cmp	w1, #0x1
  44ada8:	b.hi	44adb8 <ferror@plt+0x477e8>  // b.pmore
  44adac:	ldrh	w1, [x4, #6]
  44adb0:	cbz	w1, 44adb8 <ferror@plt+0x477e8>
  44adb4:	add	x5, x5, #0x1
  44adb8:	add	x4, x4, #0x18
  44adbc:	b	44acd0 <ferror@plt+0x47700>
  44adc0:	ldrb	w0, [x23, #4]
  44adc4:	and	w0, w0, #0xf
  44adc8:	sub	w0, w0, #0x1
  44adcc:	cmp	w0, #0x1
  44add0:	b.hi	44ae9c <ferror@plt+0x478cc>  // b.pmore
  44add4:	ldrh	w0, [x23, #6]
  44add8:	cbz	w0, 44ae9c <ferror@plt+0x478cc>
  44addc:	ldr	w0, [x23]
  44ade0:	cmp	x7, x0
  44ade4:	b.hi	44ae44 <ferror@plt+0x47874>  // b.pmore
  44ade8:	str	x6, [sp, #192]
  44adec:	mov	x0, x20
  44adf0:	mov	w2, #0x0                   	// #0
  44adf4:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44adf8:	add	x1, x1, #0x60b
  44adfc:	blr	x19
  44ae00:	ldr	x6, [sp, #192]
  44ae04:	mov	x4, x20
  44ae08:	mov	x3, x19
  44ae0c:	mov	x1, x21
  44ae10:	mov	x0, x27
  44ae14:	mov	x2, x6
  44ae18:	bl	448700 <ferror@plt+0x45130>
  44ae1c:	mov	x4, x20
  44ae20:	mov	x3, x19
  44ae24:	mov	x1, x28
  44ae28:	mov	x0, x27
  44ae2c:	mov	x2, #0x18                  	// #24
  44ae30:	bl	448700 <ferror@plt+0x45130>
  44ae34:	mov	w28, #0x1                   	// #1
  44ae38:	mov	w7, w28
  44ae3c:	mov	w21, w28
  44ae40:	b	44a840 <ferror@plt+0x47270>
  44ae44:	umull	x1, w3, w2
  44ae48:	add	x0, x8, x0
  44ae4c:	add	x10, x21, x1
  44ae50:	str	x0, [x21, x1]
  44ae54:	ldr	x1, [x23, #8]
  44ae58:	cbz	x22, 44ae84 <ferror@plt+0x478b4>
  44ae5c:	ldr	x0, [x22]
  44ae60:	cmp	x0, x1
  44ae64:	b.hi	44ae84 <ferror@plt+0x478b4>  // b.pmore
  44ae68:	ldr	x9, [x22, #16]
  44ae6c:	add	x9, x0, x9
  44ae70:	cmp	x9, x1
  44ae74:	b.ls	44ae84 <ferror@plt+0x478b4>  // b.plast
  44ae78:	sub	x1, x1, x0
  44ae7c:	ldr	x0, [x22, #8]
  44ae80:	ldr	x1, [x0, x1]
  44ae84:	add	w3, w3, #0x1
  44ae88:	ldr	x0, [sp, #240]
  44ae8c:	add	x1, x0, x1
  44ae90:	str	x1, [x10, #8]
  44ae94:	ldr	x0, [x23, #16]
  44ae98:	str	x0, [x10, #16]
  44ae9c:	add	x23, x23, #0x18
  44aea0:	b	44ad28 <ferror@plt+0x47758>
  44aea4:	ldr	x0, [x27, #48]
  44aea8:	cbnz	x0, 44b038 <ferror@plt+0x47a68>
  44aeac:	str	x28, [x1]
  44aeb0:	mov	w0, #0x1                   	// #1
  44aeb4:	str	w0, [sp, #192]
  44aeb8:	mov	x3, x20
  44aebc:	mov	x2, x19
  44aec0:	add	x1, sp, #0x1b0
  44aec4:	mov	x0, x27
  44aec8:	bl	44ba9c <ferror@plt+0x484cc>
  44aecc:	mov	x0, x27
  44aed0:	mov	x3, x20
  44aed4:	mov	x2, x19
  44aed8:	add	x1, sp, #0x1c8
  44aedc:	bl	44ba9c <ferror@plt+0x484cc>
  44aee0:	ldr	x0, [sp, #256]
  44aee4:	cbz	x0, 44b0ec <ferror@plt+0x47b1c>
  44aee8:	ldr	w21, [sp, #216]
  44aeec:	mov	x5, #0x21                  	// #33
  44aef0:	mov	x3, x20
  44aef4:	mov	x2, x19
  44aef8:	mov	x0, x27
  44aefc:	add	x23, x5, w21, uxtw #1
  44af00:	mov	x1, x23
  44af04:	bl	4487bc <ferror@plt+0x451ec>
  44af08:	mov	x28, x0
  44af0c:	cbz	x0, 44b0ec <ferror@plt+0x47b1c>
  44af10:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44af14:	add	x0, x0, #0x62c
  44af18:	mov	w6, #0x2f                  	// #47
  44af1c:	ldp	x2, x3, [x0]
  44af20:	stp	x2, x3, [x28]
  44af24:	ldr	x1, [x0, #16]
  44af28:	str	x1, [x28, #16]
  44af2c:	ldrb	w0, [x0, #24]
  44af30:	add	x1, x28, #0x19
  44af34:	mov	x2, #0x0                   	// #0
  44af38:	strb	w0, [x28, #24]
  44af3c:	cmp	x21, x2
  44af40:	b.hi	44b06c <ferror@plt+0x47a9c>  // b.pmore
  44af44:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44af48:	add	x0, x0, #0x646
  44af4c:	strb	wzr, [x1, #6]
  44af50:	add	x3, sp, #0x2e0
  44af54:	ldr	w2, [x0]
  44af58:	ldrh	w0, [x0, #4]
  44af5c:	str	w2, [x1]
  44af60:	mov	x2, x20
  44af64:	strh	w0, [x1, #4]
  44af68:	mov	x1, x19
  44af6c:	mov	x0, x28
  44af70:	bl	448d58 <ferror@plt+0x45788>
  44af74:	mov	w21, w0
  44af78:	mov	x4, x20
  44af7c:	mov	x3, x19
  44af80:	mov	x2, x23
  44af84:	mov	x1, x28
  44af88:	mov	x0, x27
  44af8c:	bl	448700 <ferror@plt+0x45130>
  44af90:	tbnz	w21, #31, 44b0ec <ferror@plt+0x47b1c>
  44af94:	mov	x3, x20
  44af98:	mov	x2, x19
  44af9c:	add	x1, sp, #0x210
  44afa0:	mov	x0, x27
  44afa4:	bl	44ba9c <ferror@plt+0x484cc>
  44afa8:	cbz	w26, 44afc0 <ferror@plt+0x479f0>
  44afac:	mov	x3, x20
  44afb0:	mov	x2, x19
  44afb4:	add	x1, sp, #0x228
  44afb8:	mov	x0, x27
  44afbc:	bl	44ba9c <ferror@plt+0x484cc>
  44afc0:	ldr	w0, [sp, #184]
  44afc4:	cbz	w0, 44afdc <ferror@plt+0x47a0c>
  44afc8:	mov	x3, x20
  44afcc:	mov	x2, x19
  44afd0:	add	x1, sp, #0x240
  44afd4:	mov	x0, x27
  44afd8:	bl	44ba9c <ferror@plt+0x484cc>
  44afdc:	ldp	x3, x7, [sp, #240]
  44afe0:	mov	w0, #0x1                   	// #1
  44afe4:	ldr	x6, [sp, #272]
  44afe8:	str	w0, [sp, #24]
  44afec:	ldr	x0, [sp, #1184]
  44aff0:	str	x0, [sp]
  44aff4:	str	xzr, [sp, #8]
  44aff8:	mov	w2, w21
  44affc:	str	wzr, [sp, #16]
  44b000:	mov	x5, x20
  44b004:	str	xzr, [sp, #32]
  44b008:	mov	x4, x19
  44b00c:	str	wzr, [sp, #40]
  44b010:	mov	x0, x27
  44b014:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x28c10>
  44b018:	add	x1, x1, #0x122
  44b01c:	bl	44a47c <ferror@plt+0x46eac>
  44b020:	mov	w22, w0
  44b024:	mov	x2, x20
  44b028:	mov	x1, x19
  44b02c:	tbz	w0, #31, 44b0c0 <ferror@plt+0x47af0>
  44b030:	mov	w0, w21
  44b034:	b	44b0c4 <ferror@plt+0x47af4>
  44b038:	mov	x1, x0
  44b03c:	ldr	x0, [x0]
  44b040:	b	44aea8 <ferror@plt+0x478d8>
  44b044:	ldxr	x2, [x0]
  44b048:	cbnz	x2, 44b054 <ferror@plt+0x47a84>
  44b04c:	stlxr	w3, x28, [x0]
  44b050:	cbnz	w3, 44b044 <ferror@plt+0x47a74>
  44b054:	dmb	ish
  44b058:	cmp	x2, #0x0
  44b05c:	b.eq	44aeb0 <ferror@plt+0x478e0>  // b.none
  44b060:	b	44ad84 <ferror@plt+0x477b4>
  44b064:	str	wzr, [sp, #192]
  44b068:	b	44aeb8 <ferror@plt+0x478e8>
  44b06c:	ldr	x0, [sp, #256]
  44b070:	ldrb	w0, [x0, x2]
  44b074:	lsr	w4, w0, #4
  44b078:	and	w0, w0, #0xf
  44b07c:	cmp	w4, #0x9
  44b080:	add	w7, w4, #0x30
  44b084:	add	w3, w4, #0x57
  44b088:	add	w4, w0, #0x30
  44b08c:	csel	w3, w3, w7, hi  // hi = pmore
  44b090:	cmp	w0, #0x9
  44b094:	strb	w3, [x1]
  44b098:	add	w3, w0, #0x57
  44b09c:	csel	w0, w3, w4, hi  // hi = pmore
  44b0a0:	strb	w0, [x1, #1]
  44b0a4:	cbz	x2, 44b0b4 <ferror@plt+0x47ae4>
  44b0a8:	add	x1, x1, #0x2
  44b0ac:	add	x2, x2, #0x1
  44b0b0:	b	44af3c <ferror@plt+0x4796c>
  44b0b4:	add	x1, x1, #0x3
  44b0b8:	sturb	w6, [x1, #-1]
  44b0bc:	b	44b0ac <ferror@plt+0x47adc>
  44b0c0:	mov	w0, w24
  44b0c4:	bl	448df0 <ferror@plt+0x45820>
  44b0c8:	mov	w0, w22
  44b0cc:	ldp	x29, x30, [sp, #80]
  44b0d0:	ldp	x19, x20, [sp, #96]
  44b0d4:	ldp	x21, x22, [sp, #112]
  44b0d8:	ldp	x23, x24, [sp, #128]
  44b0dc:	ldp	x25, x26, [sp, #144]
  44b0e0:	ldp	x27, x28, [sp, #160]
  44b0e4:	add	sp, sp, #0x4a0
  44b0e8:	ret
  44b0ec:	cbz	w25, 44b104 <ferror@plt+0x47b34>
  44b0f0:	mov	x3, x20
  44b0f4:	mov	x2, x19
  44b0f8:	add	x1, sp, #0x210
  44b0fc:	mov	x0, x27
  44b100:	bl	44ba9c <ferror@plt+0x484cc>
  44b104:	cbz	x22, 44b11c <ferror@plt+0x47b4c>
  44b108:	mov	x3, x20
  44b10c:	mov	x2, x19
  44b110:	add	x1, x22, #0x18
  44b114:	mov	x0, x27
  44b118:	bl	44ba9c <ferror@plt+0x484cc>
  44b11c:	ldr	x0, [sp, #280]
  44b120:	cbz	x0, 44b180 <ferror@plt+0x47bb0>
  44b124:	ldr	x1, [sp, #296]
  44b128:	mov	x2, x0
  44b12c:	mov	x4, x20
  44b130:	mov	x3, x19
  44b134:	mov	x0, x27
  44b138:	bl	449434 <ferror@plt+0x45e64>
  44b13c:	mov	w21, w0
  44b140:	tbnz	w0, #31, 44b180 <ferror@plt+0x47bb0>
  44b144:	ldr	w1, [sp, #292]
  44b148:	cbz	w1, 44afac <ferror@plt+0x479dc>
  44b14c:	add	x1, sp, #0x2e0
  44b150:	bl	476488 <_obstack_memory_used@@Base+0x1a098>
  44b154:	tbz	w0, #31, 44b238 <ferror@plt+0x47c68>
  44b158:	bl	4034e0 <__errno_location@plt>
  44b15c:	ldr	w2, [x0]
  44b160:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44b164:	mov	x0, x20
  44b168:	add	x1, x1, #0x64d
  44b16c:	blr	x19
  44b170:	mov	x2, x20
  44b174:	mov	x1, x19
  44b178:	mov	w0, w21
  44b17c:	bl	448df0 <ferror@plt+0x45820>
  44b180:	cbz	w26, 44b198 <ferror@plt+0x47bc8>
  44b184:	mov	x3, x20
  44b188:	mov	x2, x19
  44b18c:	add	x1, sp, #0x228
  44b190:	mov	x0, x27
  44b194:	bl	44ba9c <ferror@plt+0x484cc>
  44b198:	ldr	x0, [sp, #224]
  44b19c:	str	xzr, [sp, #392]
  44b1a0:	cbz	x0, 44b2c4 <ferror@plt+0x47cf4>
  44b1a4:	ldr	x1, [sp, #296]
  44b1a8:	mov	x2, x0
  44b1ac:	mov	x4, x20
  44b1b0:	mov	x3, x19
  44b1b4:	mov	x0, x27
  44b1b8:	bl	449434 <ferror@plt+0x45e64>
  44b1bc:	mov	w21, w0
  44b1c0:	tbnz	w0, #31, 44b2c4 <ferror@plt+0x47cf4>
  44b1c4:	mov	w2, w0
  44b1c8:	ldr	w0, [sp, #312]
  44b1cc:	str	w0, [sp, #40]
  44b1d0:	mov	x5, x20
  44b1d4:	ldr	x0, [sp, #304]
  44b1d8:	str	x0, [sp, #32]
  44b1dc:	ldp	x3, x7, [sp, #240]
  44b1e0:	mov	w0, #0x1                   	// #1
  44b1e4:	str	w0, [sp, #24]
  44b1e8:	add	x0, sp, #0x188
  44b1ec:	ldr	x6, [sp, #272]
  44b1f0:	str	x0, [sp, #8]
  44b1f4:	ldr	x1, [sp, #296]
  44b1f8:	mov	x4, x19
  44b1fc:	ldr	x0, [sp, #1184]
  44b200:	str	x0, [sp]
  44b204:	str	wzr, [sp, #16]
  44b208:	mov	x0, x27
  44b20c:	bl	44a47c <ferror@plt+0x46eac>
  44b210:	mov	w22, w0
  44b214:	mov	x3, x20
  44b218:	mov	x2, x19
  44b21c:	add	x1, sp, #0x240
  44b220:	mov	x0, x27
  44b224:	bl	44ba9c <ferror@plt+0x484cc>
  44b228:	tbz	w22, #31, 44b2e0 <ferror@plt+0x47d10>
  44b22c:	mov	x2, x20
  44b230:	mov	x1, x19
  44b234:	b	44b030 <ferror@plt+0x47a60>
  44b238:	ldr	x3, [sp, #784]
  44b23c:	add	x25, sp, #0x258
  44b240:	mov	x6, x25
  44b244:	mov	x5, x20
  44b248:	mov	x4, x19
  44b24c:	mov	w1, w21
  44b250:	mov	x0, x27
  44b254:	mov	x2, #0x0                   	// #0
  44b258:	bl	44b9e0 <ferror@plt+0x48410>
  44b25c:	cbz	w0, 44b170 <ferror@plt+0x47ba0>
  44b260:	ldr	x2, [sp, #600]
  44b264:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44b268:	ldr	x3, [sp, #784]
  44b26c:	add	x0, x0, #0x6e4
  44b270:	add	x0, x0, #0x4e0
  44b274:	mov	w22, #0xffffffff            	// #-1
  44b278:	add	x3, x2, x3
  44b27c:	cmp	x3, x2
  44b280:	b.hi	44b2ac <ferror@plt+0x47cdc>  // b.pmore
  44b284:	mov	x0, x27
  44b288:	mov	x3, x20
  44b28c:	mov	x2, x19
  44b290:	mov	x1, x25
  44b294:	bl	44ba9c <ferror@plt+0x484cc>
  44b298:	mvn	w22, w22
  44b29c:	ldr	w0, [sp, #292]
  44b2a0:	cmp	w0, w22
  44b2a4:	b.eq	44afac <ferror@plt+0x479dc>  // b.none
  44b2a8:	b	44b170 <ferror@plt+0x47ba0>
  44b2ac:	ldrb	w1, [x2], #1
  44b2b0:	eor	w1, w1, w22
  44b2b4:	and	x1, x1, #0xff
  44b2b8:	ldr	w1, [x0, x1, lsl #2]
  44b2bc:	eor	w22, w1, w22, lsr #8
  44b2c0:	b	44b27c <ferror@plt+0x47cac>
  44b2c4:	ldr	w0, [sp, #184]
  44b2c8:	cbz	w0, 44b2e0 <ferror@plt+0x47d10>
  44b2cc:	mov	x3, x20
  44b2d0:	mov	x2, x19
  44b2d4:	add	x1, sp, #0x240
  44b2d8:	mov	x0, x27
  44b2dc:	bl	44ba9c <ferror@plt+0x484cc>
  44b2e0:	add	x21, sp, #0x360
  44b2e4:	mov	w22, #0xa                   	// #10
  44b2e8:	mov	x1, x21
  44b2ec:	mov	x3, #0x0                   	// #0
  44b2f0:	mov	x25, #0x0                   	// #0
  44b2f4:	ldr	x2, [x1, #8]
  44b2f8:	cbz	x2, 44b318 <ferror@plt+0x47d48>
  44b2fc:	ldr	x0, [x1]
  44b300:	cbz	x25, 44b350 <ferror@plt+0x47d80>
  44b304:	cmp	x0, x25
  44b308:	csel	x25, x25, x0, ge  // ge = tcont
  44b30c:	add	x0, x0, x2
  44b310:	cmp	x3, x0
  44b314:	csel	x3, x3, x0, ge  // ge = tcont
  44b318:	add	x1, x1, #0x20
  44b31c:	subs	w22, w22, #0x1
  44b320:	b.ne	44b2f4 <ferror@plt+0x47d24>  // b.any
  44b324:	cmp	x25, #0x0
  44b328:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  44b32c:	b.ne	44b358 <ferror@plt+0x47d88>  // b.any
  44b330:	mov	x2, x20
  44b334:	mov	x1, x19
  44b338:	mov	w0, w24
  44b33c:	bl	448df0 <ferror@plt+0x45820>
  44b340:	mov	w28, w0
  44b344:	cbz	w0, 44b684 <ferror@plt+0x480b4>
  44b348:	mov	w22, #0x1                   	// #1
  44b34c:	b	44b0c8 <ferror@plt+0x47af8>
  44b350:	mov	x25, x0
  44b354:	b	44b30c <ferror@plt+0x47d3c>
  44b358:	add	x26, sp, #0x2e0
  44b35c:	mov	x5, x20
  44b360:	mov	x6, x26
  44b364:	mov	x4, x19
  44b368:	sub	x3, x3, x25
  44b36c:	mov	x2, x25
  44b370:	mov	w1, w24
  44b374:	mov	x0, x27
  44b378:	bl	44b9e0 <ferror@plt+0x48410>
  44b37c:	mov	w28, w0
  44b380:	cbz	w0, 44b684 <ferror@plt+0x480b4>
  44b384:	mov	x2, x20
  44b388:	mov	x1, x19
  44b38c:	mov	w0, w24
  44b390:	bl	448df0 <ferror@plt+0x45820>
  44b394:	cbz	w0, 44b680 <ferror@plt+0x480b0>
  44b398:	ldr	x3, [sp, #736]
  44b39c:	mov	x0, x21
  44b3a0:	mov	w2, #0x0                   	// #0
  44b3a4:	ldr	x1, [x0, #8]
  44b3a8:	cbnz	x1, 44b5b4 <ferror@plt+0x47fe4>
  44b3ac:	str	xzr, [x0, #16]
  44b3b0:	add	w2, w2, #0x1
  44b3b4:	add	x0, x0, #0x20
  44b3b8:	cmp	w2, #0xa
  44b3bc:	b.ne	44b3a4 <ferror@plt+0x47dd4>  // b.any
  44b3c0:	adrp	x25, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44b3c4:	add	x0, x25, #0x653
  44b3c8:	mov	x28, x21
  44b3cc:	str	x0, [sp, #184]
  44b3d0:	add	x0, sp, #0x258
  44b3d4:	mov	w24, #0x5                   	// #5
  44b3d8:	mov	x23, #0x0                   	// #0
  44b3dc:	str	x0, [sp, #200]
  44b3e0:	add	x0, sp, #0x190
  44b3e4:	str	x0, [sp, #208]
  44b3e8:	ldr	x0, [x28, #8]
  44b3ec:	cbnz	x0, 44b43c <ferror@plt+0x47e6c>
  44b3f0:	ldr	x25, [x28, #168]
  44b3f4:	cbz	x25, 44b43c <ferror@plt+0x47e6c>
  44b3f8:	cbnz	x23, 44b418 <ferror@plt+0x47e48>
  44b3fc:	mov	x3, x20
  44b400:	mov	x2, x19
  44b404:	mov	x0, x27
  44b408:	mov	x1, #0x13b4                	// #5044
  44b40c:	bl	4487bc <ferror@plt+0x451ec>
  44b410:	mov	x23, x0
  44b414:	cbz	x0, 44b614 <ferror@plt+0x48044>
  44b418:	str	xzr, [sp, #400]
  44b41c:	cmp	x25, #0xb
  44b420:	str	xzr, [sp, #600]
  44b424:	b.hi	44b5d0 <ferror@plt+0x48000>  // b.pmore
  44b428:	ldr	x0, [sp, #400]
  44b42c:	str	x0, [x28, #16]
  44b430:	ldr	x0, [sp, #600]
  44b434:	str	x0, [x28, #8]
  44b438:	str	wzr, [x28, #24]
  44b43c:	add	x28, x28, #0x20
  44b440:	subs	w24, w24, #0x1
  44b444:	b.ne	44b3e8 <ferror@plt+0x47e18>  // b.any
  44b448:	mov	w0, #0x5                   	// #5
  44b44c:	str	w0, [sp, #184]
  44b450:	ldr	x28, [x21, #8]
  44b454:	cbz	x28, 44b4e8 <ferror@plt+0x47f18>
  44b458:	ldr	w0, [x21, #24]
  44b45c:	cbz	w0, 44b4e8 <ferror@plt+0x47f18>
  44b460:	cbnz	x23, 44b480 <ferror@plt+0x47eb0>
  44b464:	mov	x3, x20
  44b468:	mov	x2, x19
  44b46c:	mov	x0, x27
  44b470:	mov	x1, #0x13b4                	// #5044
  44b474:	bl	4487bc <ferror@plt+0x451ec>
  44b478:	mov	x23, x0
  44b47c:	cbz	x0, 44b614 <ferror@plt+0x48044>
  44b480:	cmp	x28, #0x17
  44b484:	b.ls	44b674 <ferror@plt+0x480a4>  // b.plast
  44b488:	ldr	x24, [x21, #16]
  44b48c:	ldr	w8, [x24]
  44b490:	cmp	w8, #0x1
  44b494:	b.ne	44b674 <ferror@plt+0x480a4>  // b.any
  44b498:	ldr	x1, [x24, #8]
  44b49c:	mov	x3, x20
  44b4a0:	mov	x2, x19
  44b4a4:	mov	x0, x27
  44b4a8:	str	w8, [sp, #200]
  44b4ac:	bl	4487bc <ferror@plt+0x451ec>
  44b4b0:	mov	x25, x0
  44b4b4:	ldr	w8, [sp, #200]
  44b4b8:	cbz	x0, 44b6a0 <ferror@plt+0x480d0>
  44b4bc:	ldr	x4, [x24, #8]
  44b4c0:	mov	x3, x0
  44b4c4:	mov	x2, x23
  44b4c8:	sub	x1, x28, #0x18
  44b4cc:	add	x0, x24, #0x18
  44b4d0:	bl	4496f0 <ferror@plt+0x46120>
  44b4d4:	cbz	w0, 44b674 <ferror@plt+0x480a4>
  44b4d8:	ldr	x0, [x24, #8]
  44b4dc:	sub	w22, w22, #0x1
  44b4e0:	stp	x0, x25, [x21, #8]
  44b4e4:	str	wzr, [x21, #24]
  44b4e8:	ldr	w0, [sp, #184]
  44b4ec:	add	x21, x21, #0x20
  44b4f0:	subs	w0, w0, #0x1
  44b4f4:	str	w0, [sp, #184]
  44b4f8:	b.ne	44b450 <ferror@plt+0x47e80>  // b.any
  44b4fc:	cbz	x23, 44b518 <ferror@plt+0x47f48>
  44b500:	mov	x4, x20
  44b504:	mov	x3, x19
  44b508:	mov	x1, x23
  44b50c:	mov	x0, x27
  44b510:	mov	x2, #0x13b4                	// #5044
  44b514:	bl	448700 <ferror@plt+0x45130>
  44b518:	cbnz	w22, 44b620 <ferror@plt+0x48050>
  44b51c:	mov	w28, #0x0                   	// #0
  44b520:	mov	x3, x20
  44b524:	mov	x2, x19
  44b528:	mov	x1, x26
  44b52c:	mov	x0, x27
  44b530:	bl	44ba9c <ferror@plt+0x484cc>
  44b534:	add	x0, sp, #0x368
  44b538:	ldr	x1, [sp, #240]
  44b53c:	ldp	x3, x2, [x0]
  44b540:	ldp	x5, x4, [x0, #32]
  44b544:	stp	x19, x20, [sp, #48]
  44b548:	ldr	x0, [sp, #1192]
  44b54c:	str	x0, [sp, #72]
  44b550:	ldr	x0, [sp, #272]
  44b554:	str	x0, [sp, #64]
  44b558:	ldr	x0, [sp, #392]
  44b55c:	str	x0, [sp, #40]
  44b560:	ldr	w0, [sp, #316]
  44b564:	ldr	x7, [sp, #936]
  44b568:	cmp	w0, #0x2
  44b56c:	cset	w0, eq  // eq = none
  44b570:	str	w0, [sp, #32]
  44b574:	ldr	x0, [sp, #1000]
  44b578:	str	x0, [sp, #24]
  44b57c:	ldr	x0, [sp, #1008]
  44b580:	str	x0, [sp, #16]
  44b584:	ldr	x6, [sp, #944]
  44b588:	ldr	x0, [sp, #968]
  44b58c:	str	x0, [sp, #8]
  44b590:	ldr	x0, [sp, #976]
  44b594:	str	x0, [sp]
  44b598:	mov	x0, x27
  44b59c:	bl	44e3b8 <ferror@plt+0x4ade8>
  44b5a0:	cbz	w0, 44b618 <ferror@plt+0x48048>
  44b5a4:	ldr	x0, [sp, #1184]
  44b5a8:	mov	w22, #0x1                   	// #1
  44b5ac:	str	w22, [x0]
  44b5b0:	b	44b0c8 <ferror@plt+0x47af8>
  44b5b4:	ldr	x1, [x0]
  44b5b8:	cmp	w2, #0x5
  44b5bc:	cinc	w22, w22, cc  // cc = lo, ul, last
  44b5c0:	sub	x1, x1, x25
  44b5c4:	add	x1, x3, x1
  44b5c8:	str	x1, [x0, #16]
  44b5cc:	b	44b3b0 <ferror@plt+0x47de0>
  44b5d0:	ldr	x11, [x28, #176]
  44b5d4:	mov	x2, #0x4                   	// #4
  44b5d8:	ldr	x1, [sp, #184]
  44b5dc:	mov	x0, x11
  44b5e0:	str	x11, [sp, #216]
  44b5e4:	bl	4031e0 <memcmp@plt>
  44b5e8:	cbnz	w0, 44b428 <ferror@plt+0x47e58>
  44b5ec:	ldp	x7, x6, [sp, #200]
  44b5f0:	mov	x5, x20
  44b5f4:	ldr	x11, [sp, #216]
  44b5f8:	mov	x4, x19
  44b5fc:	mov	x3, x23
  44b600:	mov	x2, x25
  44b604:	mov	x0, x27
  44b608:	mov	x1, x11
  44b60c:	bl	44a3d0 <ferror@plt+0x46e00>
  44b610:	cbnz	w0, 44b428 <ferror@plt+0x47e58>
  44b614:	mov	w28, #0x1                   	// #1
  44b618:	mov	w24, #0xffffffff            	// #-1
  44b61c:	b	44b684 <ferror@plt+0x480b4>
  44b620:	mov	w28, #0x1                   	// #1
  44b624:	b	44b534 <ferror@plt+0x47f64>
  44b628:	mov	w22, #0xffffffff            	// #-1
  44b62c:	b	44b0c8 <ferror@plt+0x47af8>
  44b630:	mov	w26, #0x0                   	// #0
  44b634:	mov	w25, #0x0                   	// #0
  44b638:	mov	w28, #0x0                   	// #0
  44b63c:	mov	w7, #0x0                   	// #0
  44b640:	mov	x22, #0x0                   	// #0
  44b644:	str	wzr, [sp, #184]
  44b648:	b	44a840 <ferror@plt+0x47270>
  44b64c:	mov	w28, #0x0                   	// #0
  44b650:	mov	w25, #0x1                   	// #1
  44b654:	b	44a83c <ferror@plt+0x4726c>
  44b658:	mov	w26, #0x0                   	// #0
  44b65c:	mov	w28, #0x0                   	// #0
  44b660:	b	44a83c <ferror@plt+0x4726c>
  44b664:	mov	w28, #0x0                   	// #0
  44b668:	b	44a840 <ferror@plt+0x47270>
  44b66c:	mov	w7, #0x1                   	// #1
  44b670:	b	44a83c <ferror@plt+0x4726c>
  44b674:	mov	x0, #0x0                   	// #0
  44b678:	mov	x25, #0x0                   	// #0
  44b67c:	b	44b4dc <ferror@plt+0x47f0c>
  44b680:	mov	w28, #0x1                   	// #1
  44b684:	ldr	w0, [sp, #192]
  44b688:	cbz	w0, 44a598 <ferror@plt+0x46fc8>
  44b68c:	mov	w26, #0x0                   	// #0
  44b690:	mov	x22, #0x0                   	// #0
  44b694:	mov	w25, #0x0                   	// #0
  44b698:	str	wzr, [sp, #184]
  44b69c:	b	44a89c <ferror@plt+0x472cc>
  44b6a0:	mov	w28, w8
  44b6a4:	b	44b618 <ferror@plt+0x48048>
  44b6a8:	sub	sp, sp, #0x70
  44b6ac:	stp	x29, x30, [sp, #48]
  44b6b0:	add	x29, sp, #0x30
  44b6b4:	ldr	x1, [x0, #8]
  44b6b8:	stp	x19, x20, [sp, #64]
  44b6bc:	mov	x20, x0
  44b6c0:	ldr	w0, [x2, #56]
  44b6c4:	mov	x19, x2
  44b6c8:	str	x21, [sp, #80]
  44b6cc:	cmn	w0, #0x1
  44b6d0:	cbz	x1, 44b6dc <ferror@plt+0x4810c>
  44b6d4:	ldrb	w1, [x1]
  44b6d8:	cbnz	w1, 44b74c <ferror@plt+0x4817c>
  44b6dc:	b.eq	44b778 <ferror@plt+0x481a8>  // b.none
  44b6e0:	ldr	x21, [x19, #48]
  44b6e4:	mov	w1, #0xffffffff            	// #-1
  44b6e8:	str	w1, [x19, #56]
  44b6ec:	mov	w2, w0
  44b6f0:	add	x1, sp, #0x64
  44b6f4:	ldp	x0, x4, [x19]
  44b6f8:	add	x6, sp, #0x68
  44b6fc:	ldr	x3, [x20]
  44b700:	ldr	x5, [x19, #16]
  44b704:	ldr	x7, [x19, #32]
  44b708:	stp	x1, xzr, [sp]
  44b70c:	mov	x1, x21
  44b710:	str	wzr, [sp, #16]
  44b714:	str	wzr, [sp, #24]
  44b718:	str	xzr, [sp, #32]
  44b71c:	str	wzr, [sp, #40]
  44b720:	bl	44a47c <ferror@plt+0x46eac>
  44b724:	cbz	w0, 44b778 <ferror@plt+0x481a8>
  44b728:	ldr	w0, [sp, #100]
  44b72c:	cbz	w0, 44b778 <ferror@plt+0x481a8>
  44b730:	ldr	x0, [x19, #40]
  44b734:	mov	w1, #0x1                   	// #1
  44b738:	str	w1, [x0]
  44b73c:	ldr	x0, [x19, #24]
  44b740:	ldr	x1, [sp, #104]
  44b744:	str	x1, [x0]
  44b748:	b	44b778 <ferror@plt+0x481a8>
  44b74c:	b.eq	44b760 <ferror@plt+0x48190>  // b.none
  44b750:	ldp	x1, x2, [x2, #8]
  44b754:	bl	448df0 <ferror@plt+0x45820>
  44b758:	mov	w0, #0xffffffff            	// #-1
  44b75c:	str	w0, [x19, #56]
  44b760:	ldp	x1, x2, [x19, #8]
  44b764:	add	x3, sp, #0x60
  44b768:	ldr	x21, [x20, #8]
  44b76c:	mov	x0, x21
  44b770:	bl	448d58 <ferror@plt+0x45788>
  44b774:	tbz	w0, #31, 44b6ec <ferror@plt+0x4811c>
  44b778:	mov	w0, #0x0                   	// #0
  44b77c:	ldp	x29, x30, [sp, #48]
  44b780:	ldp	x19, x20, [sp, #64]
  44b784:	ldr	x21, [sp, #80]
  44b788:	add	sp, sp, #0x70
  44b78c:	ret
  44b790:	stp	x29, x30, [sp, #-80]!
  44b794:	mov	x29, sp
  44b798:	stp	x21, x22, [sp, #32]
  44b79c:	mov	x21, x3
  44b7a0:	mov	x22, x4
  44b7a4:	mov	x3, x4
  44b7a8:	stp	x19, x20, [sp, #16]
  44b7ac:	mov	x19, x1
  44b7b0:	mov	x1, #0x13b4                	// #5044
  44b7b4:	stp	x23, x24, [sp, #48]
  44b7b8:	mov	x24, x2
  44b7bc:	mov	x23, x0
  44b7c0:	mov	x2, x21
  44b7c4:	stp	x25, x26, [sp, #64]
  44b7c8:	mov	x25, x5
  44b7cc:	mov	x26, x6
  44b7d0:	bl	4487bc <ferror@plt+0x451ec>
  44b7d4:	cbz	x0, 44b868 <ferror@plt+0x48298>
  44b7d8:	str	xzr, [x25]
  44b7dc:	mov	x20, x0
  44b7e0:	str	xzr, [x26]
  44b7e4:	cmp	x24, #0xb
  44b7e8:	b.ls	44b860 <ferror@plt+0x48290>  // b.plast
  44b7ec:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44b7f0:	mov	x0, x19
  44b7f4:	add	x1, x1, #0x653
  44b7f8:	mov	x2, #0x4                   	// #4
  44b7fc:	bl	4031e0 <memcmp@plt>
  44b800:	cbnz	w0, 44b860 <ferror@plt+0x48290>
  44b804:	mov	x1, x19
  44b808:	mov	x7, x26
  44b80c:	mov	x6, x25
  44b810:	mov	x5, x22
  44b814:	mov	x4, x21
  44b818:	mov	x3, x20
  44b81c:	mov	x2, x24
  44b820:	mov	x0, x23
  44b824:	bl	44a3d0 <ferror@plt+0x46e00>
  44b828:	mov	w19, w0
  44b82c:	mov	x4, x22
  44b830:	mov	x3, x21
  44b834:	mov	x1, x20
  44b838:	mov	x0, x23
  44b83c:	mov	x2, #0x13b4                	// #5044
  44b840:	bl	448700 <ferror@plt+0x45130>
  44b844:	mov	w0, w19
  44b848:	ldp	x19, x20, [sp, #16]
  44b84c:	ldp	x21, x22, [sp, #32]
  44b850:	ldp	x23, x24, [sp, #48]
  44b854:	ldp	x25, x26, [sp, #64]
  44b858:	ldp	x29, x30, [sp], #80
  44b85c:	ret
  44b860:	mov	w19, #0x1                   	// #1
  44b864:	b	44b82c <ferror@plt+0x4825c>
  44b868:	mov	w19, #0x0                   	// #0
  44b86c:	b	44b844 <ferror@plt+0x48274>
  44b870:	sub	sp, sp, #0xe0
  44b874:	stp	x29, x30, [sp, #48]
  44b878:	add	x29, sp, #0x30
  44b87c:	stp	x23, x24, [sp, #96]
  44b880:	mov	x23, x3
  44b884:	mov	x24, x1
  44b888:	stp	x27, x28, [sp, #128]
  44b88c:	adrp	x28, 448000 <ferror@plt+0x44a30>
  44b890:	add	x3, x28, #0xe3c
  44b894:	str	wzr, [sp, #24]
  44b898:	add	x27, sp, #0x98
  44b89c:	str	xzr, [sp, #32]
  44b8a0:	mov	x6, x27
  44b8a4:	str	wzr, [sp, #40]
  44b8a8:	stp	x25, x26, [sp, #112]
  44b8ac:	add	x25, sp, #0x94
  44b8b0:	add	x26, sp, #0x90
  44b8b4:	stp	x25, xzr, [sp]
  44b8b8:	mov	x7, x26
  44b8bc:	str	x3, [sp, #152]
  44b8c0:	mov	w3, #0x1                   	// #1
  44b8c4:	str	w3, [sp, #16]
  44b8c8:	mov	x3, #0x0                   	// #0
  44b8cc:	stp	x19, x20, [sp, #64]
  44b8d0:	mov	x20, x5
  44b8d4:	mov	x19, x0
  44b8d8:	mov	x5, x4
  44b8dc:	stp	x21, x22, [sp, #80]
  44b8e0:	mov	x22, x4
  44b8e4:	mov	w21, w2
  44b8e8:	mov	x4, x23
  44b8ec:	bl	44a47c <ferror@plt+0x46eac>
  44b8f0:	cbz	w0, 44b9a0 <ferror@plt+0x483d0>
  44b8f4:	cmp	w0, #0x0
  44b8f8:	add	x1, sp, #0xa0
  44b8fc:	csinv	w21, w21, wzr, lt  // lt = tstop
  44b900:	adrp	x0, 44b000 <ferror@plt+0x47a30>
  44b904:	add	x0, x0, #0x6a8
  44b908:	stp	x19, x23, [sp, #160]
  44b90c:	stp	x22, x27, [sp, #176]
  44b910:	stp	x26, x25, [sp, #192]
  44b914:	str	x24, [sp, #208]
  44b918:	str	w21, [sp, #216]
  44b91c:	bl	403280 <dl_iterate_phdr@plt>
  44b920:	ldr	w0, [x19, #8]
  44b924:	ldr	w1, [sp, #144]
  44b928:	cbnz	w0, 44b958 <ferror@plt+0x48388>
  44b92c:	cbz	w1, 44b944 <ferror@plt+0x48374>
  44b930:	adrp	x0, 449000 <ferror@plt+0x45a30>
  44b934:	add	x0, x0, #0x270
  44b938:	str	x0, [x19, #40]
  44b93c:	ldr	x0, [x19, #24]
  44b940:	b	44b97c <ferror@plt+0x483ac>
  44b944:	ldr	x0, [x19, #40]
  44b948:	cbnz	x0, 44b93c <ferror@plt+0x4836c>
  44b94c:	adrp	x0, 448000 <ferror@plt+0x44a30>
  44b950:	add	x0, x0, #0xe64
  44b954:	b	44b938 <ferror@plt+0x48368>
  44b958:	add	x0, x19, #0x28
  44b95c:	cbz	w1, 44b9c0 <ferror@plt+0x483f0>
  44b960:	adrp	x1, 449000 <ferror@plt+0x45a30>
  44b964:	add	x1, x1, #0x270
  44b968:	stlr	x1, [x0]
  44b96c:	ldr	w0, [x19, #8]
  44b970:	cbz	w0, 44b93c <ferror@plt+0x4836c>
  44b974:	add	x19, x19, #0x18
  44b978:	ldar	x0, [x19]
  44b97c:	str	x0, [x20]
  44b980:	ldr	x0, [x20]
  44b984:	cbz	x0, 44b994 <ferror@plt+0x483c4>
  44b988:	add	x28, x28, #0xe3c
  44b98c:	cmp	x0, x28
  44b990:	b.ne	44b99c <ferror@plt+0x483cc>  // b.any
  44b994:	ldr	x0, [sp, #152]
  44b998:	str	x0, [x20]
  44b99c:	mov	w0, #0x1                   	// #1
  44b9a0:	ldp	x29, x30, [sp, #48]
  44b9a4:	ldp	x19, x20, [sp, #64]
  44b9a8:	ldp	x21, x22, [sp, #80]
  44b9ac:	ldp	x23, x24, [sp, #96]
  44b9b0:	ldp	x25, x26, [sp, #112]
  44b9b4:	ldp	x27, x28, [sp, #128]
  44b9b8:	add	sp, sp, #0xe0
  44b9bc:	ret
  44b9c0:	adrp	x1, 448000 <ferror@plt+0x44a30>
  44b9c4:	add	x1, x1, #0xe64
  44b9c8:	ldxr	x2, [x0]
  44b9cc:	cbnz	x2, 44b9d8 <ferror@plt+0x48408>
  44b9d0:	stlxr	w3, x1, [x0]
  44b9d4:	cbnz	w3, 44b9c8 <ferror@plt+0x483f8>
  44b9d8:	dmb	ish
  44b9dc:	b	44b96c <ferror@plt+0x4839c>
  44b9e0:	stp	x29, x30, [sp, #-80]!
  44b9e4:	mov	x29, sp
  44b9e8:	stp	x19, x20, [sp, #16]
  44b9ec:	sub	x19, x3, #0x1
  44b9f0:	stp	x21, x22, [sp, #32]
  44b9f4:	mov	x21, x4
  44b9f8:	mov	x22, x5
  44b9fc:	stp	x23, x24, [sp, #48]
  44ba00:	mov	x24, x2
  44ba04:	mov	x23, x6
  44ba08:	str	x25, [sp, #64]
  44ba0c:	mov	w25, w1
  44ba10:	bl	4030c0 <getpagesize@plt>
  44ba14:	sxtw	x0, w0
  44ba18:	mov	w4, w25
  44ba1c:	mov	w3, #0x2                   	// #2
  44ba20:	mov	w2, #0x1                   	// #1
  44ba24:	udiv	x20, x24, x0
  44ba28:	msub	w20, w20, w0, w24
  44ba2c:	add	x1, x0, x20
  44ba30:	neg	x0, x0
  44ba34:	add	x19, x19, x1
  44ba38:	sub	x5, x24, x20
  44ba3c:	and	x19, x0, x19
  44ba40:	mov	x0, #0x0                   	// #0
  44ba44:	mov	x1, x19
  44ba48:	bl	403250 <mmap@plt>
  44ba4c:	cmn	x0, #0x1
  44ba50:	b.ne	44ba88 <ferror@plt+0x484b8>  // b.any
  44ba54:	bl	4034e0 <__errno_location@plt>
  44ba58:	ldr	w2, [x0]
  44ba5c:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44ba60:	mov	x0, x22
  44ba64:	add	x1, x1, #0x3f8
  44ba68:	blr	x21
  44ba6c:	mov	w0, #0x0                   	// #0
  44ba70:	ldp	x19, x20, [sp, #16]
  44ba74:	ldp	x21, x22, [sp, #32]
  44ba78:	ldp	x23, x24, [sp, #48]
  44ba7c:	ldr	x25, [sp, #64]
  44ba80:	ldp	x29, x30, [sp], #80
  44ba84:	ret
  44ba88:	add	x20, x0, x20
  44ba8c:	stp	x20, x0, [x23]
  44ba90:	mov	w0, #0x1                   	// #1
  44ba94:	str	x19, [x23, #16]
  44ba98:	b	44ba70 <ferror@plt+0x484a0>
  44ba9c:	mov	x4, x1
  44baa0:	stp	x29, x30, [sp, #-32]!
  44baa4:	mov	x29, sp
  44baa8:	ldr	x0, [x4, #8]
  44baac:	stp	x19, x20, [sp, #16]
  44bab0:	mov	x19, x2
  44bab4:	ldr	x1, [x1, #16]
  44bab8:	mov	x20, x3
  44babc:	bl	403340 <munmap@plt>
  44bac0:	tbz	w0, #31, 44bae8 <ferror@plt+0x48518>
  44bac4:	bl	4034e0 <__errno_location@plt>
  44bac8:	ldr	w2, [x0]
  44bacc:	mov	x16, x19
  44bad0:	mov	x0, x20
  44bad4:	ldp	x19, x20, [sp, #16]
  44bad8:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44badc:	ldp	x29, x30, [sp], #32
  44bae0:	add	x1, x1, #0xfc4
  44bae4:	br	x16
  44bae8:	ldp	x19, x20, [sp, #16]
  44baec:	ldp	x29, x30, [sp], #32
  44baf0:	ret
  44baf4:	sub	w1, w1, #0x1
  44baf8:	cmp	w1, #0x7
  44bafc:	b.hi	44bb40 <ferror@plt+0x48570>  // b.pmore
  44bb00:	adrp	x2, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44bb04:	add	x2, x2, #0xfcc
  44bb08:	ldrb	w1, [x2, w1, uxtw]
  44bb0c:	adr	x2, 44bb18 <ferror@plt+0x48548>
  44bb10:	add	x1, x2, w1, sxtb #2
  44bb14:	br	x1
  44bb18:	cmp	x0, #0xff
  44bb1c:	cset	w0, eq  // eq = none
  44bb20:	ret
  44bb24:	mov	x1, #0xffff                	// #65535
  44bb28:	cmp	x0, x1
  44bb2c:	b	44bb1c <ferror@plt+0x4854c>
  44bb30:	mov	x1, #0xffffffff            	// #4294967295
  44bb34:	b	44bb28 <ferror@plt+0x48558>
  44bb38:	cmn	x0, #0x1
  44bb3c:	b	44bb1c <ferror@plt+0x4854c>
  44bb40:	mov	w0, #0x0                   	// #0
  44bb44:	b	44bb20 <ferror@plt+0x48550>
  44bb48:	ldr	x1, [x1]
  44bb4c:	ldr	x0, [x0]
  44bb50:	ldr	x2, [x1, #24]
  44bb54:	cmp	x2, x0
  44bb58:	b.hi	44bb6c <ferror@plt+0x4859c>  // b.pmore
  44bb5c:	ldr	x1, [x1, #32]
  44bb60:	cmp	x1, x0
  44bb64:	cset	w0, ls  // ls = plast
  44bb68:	ret
  44bb6c:	mov	w0, #0xffffffff            	// #-1
  44bb70:	b	44bb68 <ferror@plt+0x48598>
  44bb74:	ldr	x0, [x0]
  44bb78:	ldr	x2, [x1]
  44bb7c:	cmp	x2, x0
  44bb80:	b.hi	44bb94 <ferror@plt+0x485c4>  // b.pmore
  44bb84:	ldr	x1, [x1, #8]
  44bb88:	cmp	x1, x0
  44bb8c:	cset	w0, ls  // ls = plast
  44bb90:	ret
  44bb94:	mov	w0, #0xffffffff            	// #-1
  44bb98:	b	44bb90 <ferror@plt+0x485c0>
  44bb9c:	ldr	x0, [x0]
  44bba0:	ldr	x2, [x1]
  44bba4:	cmp	x2, x0
  44bba8:	b.hi	44bbbc <ferror@plt+0x485ec>  // b.pmore
  44bbac:	ldr	x1, [x1, #8]
  44bbb0:	cmp	x1, x0
  44bbb4:	cset	w0, ls  // ls = plast
  44bbb8:	ret
  44bbbc:	mov	w0, #0xffffffff            	// #-1
  44bbc0:	b	44bbb8 <ferror@plt+0x485e8>
  44bbc4:	ldr	x0, [x0]
  44bbc8:	ldr	x2, [x1]
  44bbcc:	cmp	x2, x0
  44bbd0:	b.hi	44bbe4 <ferror@plt+0x48614>  // b.pmore
  44bbd4:	ldr	x1, [x1, #24]
  44bbd8:	cmp	x1, x0
  44bbdc:	cset	w0, ls  // ls = plast
  44bbe0:	ret
  44bbe4:	mov	w0, #0xffffffff            	// #-1
  44bbe8:	b	44bbe0 <ferror@plt+0x48610>
  44bbec:	ldr	x2, [x0]
  44bbf0:	ldr	x1, [x1]
  44bbf4:	cmp	x2, x1
  44bbf8:	cset	w0, hi  // hi = pmore
  44bbfc:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  44bc00:	ret
  44bc04:	stp	x29, x30, [sp, #-80]!
  44bc08:	mov	x29, sp
  44bc0c:	stp	x21, x22, [sp, #32]
  44bc10:	mov	x21, x2
  44bc14:	ldr	x2, [x1, #32]
  44bc18:	stp	x19, x20, [sp, #16]
  44bc1c:	str	x23, [sp, #48]
  44bc20:	str	x0, [sp, #72]
  44bc24:	cbnz	x2, 44bc40 <ferror@plt+0x48670>
  44bc28:	mov	w0, #0x0                   	// #0
  44bc2c:	ldp	x19, x20, [sp, #16]
  44bc30:	ldp	x21, x22, [sp, #32]
  44bc34:	ldr	x23, [sp, #48]
  44bc38:	ldp	x29, x30, [sp], #80
  44bc3c:	ret
  44bc40:	mov	x22, x1
  44bc44:	mov	x23, x3
  44bc48:	ldr	x1, [x1, #24]
  44bc4c:	mov	x20, x4
  44bc50:	mov	x19, x5
  44bc54:	add	x0, sp, #0x48
  44bc58:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44bc5c:	mov	x3, #0x18                  	// #24
  44bc60:	add	x4, x4, #0xb74
  44bc64:	bl	403060 <bsearch@plt>
  44bc68:	mov	x6, x0
  44bc6c:	cbz	x0, 44bc28 <ferror@plt+0x48658>
  44bc70:	ldp	x2, x3, [x22, #24]
  44bc74:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44bc78:	ldr	x0, [sp, #72]
  44bc7c:	movk	x4, #0xaaab
  44bc80:	sub	x1, x6, x2
  44bc84:	asr	x1, x1, #3
  44bc88:	mul	x1, x1, x4
  44bc8c:	add	x1, x1, #0x1
  44bc90:	cmp	x1, x3
  44bc94:	b.cs	44bcb0 <ferror@plt+0x486e0>  // b.hs, b.nlast
  44bc98:	ldr	x1, [x6, #24]
  44bc9c:	cmp	x1, x0
  44bca0:	b.hi	44bcb0 <ferror@plt+0x486e0>  // b.pmore
  44bca4:	ldr	x1, [x6, #32]
  44bca8:	cmp	x0, x1
  44bcac:	b.cc	44bd00 <ferror@plt+0x48730>  // b.lo, b.ul, b.last
  44bcb0:	ldr	x22, [x6, #16]
  44bcb4:	mov	x5, x19
  44bcb8:	mov	x4, x20
  44bcbc:	mov	x3, x23
  44bcc0:	mov	x2, x21
  44bcc4:	mov	x1, x22
  44bcc8:	bl	44bc04 <ferror@plt+0x48634>
  44bccc:	cbnz	w0, 44bc2c <ferror@plt+0x4865c>
  44bcd0:	ldr	w3, [x19]
  44bcd4:	mov	x0, x23
  44bcd8:	ldr	x2, [x20]
  44bcdc:	ldr	x4, [x22]
  44bce0:	ldr	x1, [sp, #72]
  44bce4:	blr	x21
  44bce8:	cbnz	w0, 44bc2c <ferror@plt+0x4865c>
  44bcec:	ldr	x1, [x22, #8]
  44bcf0:	str	x1, [x20]
  44bcf4:	ldr	w1, [x22, #16]
  44bcf8:	str	w1, [x19]
  44bcfc:	b	44bc2c <ferror@plt+0x4865c>
  44bd00:	add	x6, x6, #0x18
  44bd04:	b	44bc80 <ferror@plt+0x486b0>
  44bd08:	stp	x29, x30, [sp, #-48]!
  44bd0c:	mov	x29, sp
  44bd10:	stp	x19, x20, [sp, #16]
  44bd14:	mov	x19, x2
  44bd18:	mov	x2, x3
  44bd1c:	stp	x21, x22, [sp, #32]
  44bd20:	mov	x3, x4
  44bd24:	mov	x21, x5
  44bd28:	ldp	x22, x20, [x19]
  44bd2c:	add	x22, x1, x22
  44bd30:	add	x20, x1, x20
  44bd34:	ldr	x1, [x5, #24]
  44bd38:	cbz	x1, 44bd98 <ferror@plt+0x487c8>
  44bd3c:	mov	x4, #0x18                  	// #24
  44bd40:	ldr	x5, [x5]
  44bd44:	mul	x1, x1, x4
  44bd48:	sub	x1, x1, #0x18
  44bd4c:	add	x1, x5, x1
  44bd50:	ldr	x4, [x1, #8]
  44bd54:	cmp	x22, x4
  44bd58:	b.eq	44bd68 <ferror@plt+0x48798>  // b.none
  44bd5c:	add	x5, x4, #0x1
  44bd60:	cmp	x22, x5
  44bd64:	b.ne	44bd98 <ferror@plt+0x487c8>  // b.any
  44bd68:	ldr	x5, [x1, #16]
  44bd6c:	ldr	x6, [x19, #16]
  44bd70:	cmp	x6, x5
  44bd74:	b.ne	44bd98 <ferror@plt+0x487c8>  // b.any
  44bd78:	cmp	x20, x4
  44bd7c:	b.ls	44bd84 <ferror@plt+0x487b4>  // b.plast
  44bd80:	str	x20, [x1, #8]
  44bd84:	mov	w0, #0x1                   	// #1
  44bd88:	ldp	x19, x20, [sp, #16]
  44bd8c:	ldp	x21, x22, [sp, #32]
  44bd90:	ldp	x29, x30, [sp], #48
  44bd94:	ret
  44bd98:	mov	x4, x21
  44bd9c:	mov	x1, #0x18                  	// #24
  44bda0:	bl	448910 <ferror@plt+0x45340>
  44bda4:	cbz	x0, 44bdcc <ferror@plt+0x487fc>
  44bda8:	stp	x22, x20, [x19]
  44bdac:	ldp	x2, x3, [x19]
  44bdb0:	stp	x2, x3, [x0]
  44bdb4:	ldr	x1, [x19, #16]
  44bdb8:	str	x1, [x0, #16]
  44bdbc:	ldr	x0, [x21, #24]
  44bdc0:	add	x0, x0, #0x1
  44bdc4:	str	x0, [x21, #24]
  44bdc8:	b	44bd84 <ferror@plt+0x487b4>
  44bdcc:	mov	w0, #0x0                   	// #0
  44bdd0:	b	44bd88 <ferror@plt+0x487b8>
  44bdd4:	stp	x29, x30, [sp, #-240]!
  44bdd8:	mov	x3, x1
  44bddc:	adrp	x2, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44bde0:	mov	x29, sp
  44bde4:	stp	x19, x20, [sp, #16]
  44bde8:	mov	x19, x0
  44bdec:	add	x20, sp, #0x28
  44bdf0:	ldp	x4, x0, [x0]
  44bdf4:	add	x2, x2, #0x48
  44bdf8:	ldr	x5, [x19, #16]
  44bdfc:	mov	x1, #0xc8                  	// #200
  44be00:	sub	w5, w5, w0
  44be04:	mov	x0, x20
  44be08:	bl	402ea0 <snprintf@plt>
  44be0c:	ldp	x3, x0, [x19, #40]
  44be10:	mov	x1, x20
  44be14:	mov	w2, #0x0                   	// #0
  44be18:	blr	x3
  44be1c:	ldp	x19, x20, [sp, #16]
  44be20:	ldp	x29, x30, [sp], #240
  44be24:	ret
  44be28:	stp	x29, x30, [sp, #-48]!
  44be2c:	mov	x29, sp
  44be30:	stp	x19, x20, [sp, #16]
  44be34:	mov	x20, x2
  44be38:	mov	x19, x1
  44be3c:	ldr	x2, [x1, #32]
  44be40:	stp	x21, x22, [sp, #32]
  44be44:	mov	x22, x0
  44be48:	mov	x21, x3
  44be4c:	cbz	x2, 44be64 <ferror@plt+0x48894>
  44be50:	ldr	x1, [x1, #40]
  44be54:	mov	x4, x3
  44be58:	lsl	x2, x2, #3
  44be5c:	mov	x3, x20
  44be60:	bl	448700 <ferror@plt+0x45130>
  44be64:	mov	x4, x21
  44be68:	mov	x3, x20
  44be6c:	mov	x0, x22
  44be70:	ldp	x21, x22, [sp, #32]
  44be74:	ldp	x2, x1, [x19, #48]
  44be78:	ldp	x19, x20, [sp, #16]
  44be7c:	ldp	x29, x30, [sp], #48
  44be80:	lsl	x2, x2, #3
  44be84:	b	448700 <ferror@plt+0x45130>
  44be88:	stp	x29, x30, [sp, #-64]!
  44be8c:	mov	x29, sp
  44be90:	stp	x19, x20, [sp, #16]
  44be94:	mov	x20, x0
  44be98:	mov	x19, x1
  44be9c:	stp	x21, x22, [sp, #32]
  44bea0:	mov	x21, x2
  44bea4:	mov	x22, x3
  44bea8:	str	x23, [sp, #48]
  44beac:	mov	x23, #0x0                   	// #0
  44beb0:	ldp	x2, x1, [x19]
  44beb4:	cmp	x2, x23
  44beb8:	b.hi	44bee8 <ferror@plt+0x48918>  // b.pmore
  44bebc:	mov	x4, x22
  44bec0:	mov	x3, x21
  44bec4:	mov	x0, x20
  44bec8:	lsl	x2, x2, #5
  44becc:	bl	448700 <ferror@plt+0x45130>
  44bed0:	ldp	x21, x22, [sp, #32]
  44bed4:	ldr	x23, [sp, #48]
  44bed8:	stp	xzr, xzr, [x19]
  44bedc:	ldp	x19, x20, [sp, #16]
  44bee0:	ldp	x29, x30, [sp], #64
  44bee4:	ret
  44bee8:	add	x1, x1, x23, lsl #5
  44beec:	mov	x4, x22
  44bef0:	mov	x3, x21
  44bef4:	mov	x0, x20
  44bef8:	add	x23, x23, #0x1
  44befc:	ldp	x2, x1, [x1, #16]
  44bf00:	lsl	x2, x2, #3
  44bf04:	bl	448700 <ferror@plt+0x45130>
  44bf08:	b	44beb0 <ferror@plt+0x488e0>
  44bf0c:	ldr	x3, [x0]
  44bf10:	ldr	x2, [x1]
  44bf14:	cmp	x3, x2
  44bf18:	b.cc	44bf5c <ferror@plt+0x4898c>  // b.lo, b.ul, b.last
  44bf1c:	b.hi	44bf54 <ferror@plt+0x48984>  // b.pmore
  44bf20:	ldr	x3, [x0, #8]
  44bf24:	ldr	x2, [x1, #8]
  44bf28:	cmp	x3, x2
  44bf2c:	b.cc	44bf54 <ferror@plt+0x48984>  // b.lo, b.ul, b.last
  44bf30:	b.hi	44bf5c <ferror@plt+0x4898c>  // b.pmore
  44bf34:	ldr	x0, [x0, #16]
  44bf38:	ldr	x2, [x0, #56]
  44bf3c:	ldr	x0, [x1, #16]
  44bf40:	ldr	x1, [x0, #56]
  44bf44:	cmp	x2, x1
  44bf48:	cset	w0, gt
  44bf4c:	csinv	w0, w0, wzr, ge  // ge = tcont
  44bf50:	ret
  44bf54:	mov	w0, #0x1                   	// #1
  44bf58:	b	44bf50 <ferror@plt+0x48980>
  44bf5c:	mov	w0, #0xffffffff            	// #-1
  44bf60:	b	44bf50 <ferror@plt+0x48980>
  44bf64:	ldr	x3, [x0]
  44bf68:	ldr	x2, [x1]
  44bf6c:	cmp	x3, x2
  44bf70:	b.cc	44bf90 <ferror@plt+0x489c0>  // b.lo, b.ul, b.last
  44bf74:	b.hi	44bf98 <ferror@plt+0x489c8>  // b.pmore
  44bf78:	ldr	w2, [x0, #20]
  44bf7c:	ldr	w1, [x1, #20]
  44bf80:	cmp	w2, w1
  44bf84:	cset	w0, gt
  44bf88:	csinv	w0, w0, wzr, ge  // ge = tcont
  44bf8c:	ret
  44bf90:	mov	w0, #0xffffffff            	// #-1
  44bf94:	b	44bf8c <ferror@plt+0x489bc>
  44bf98:	mov	w0, #0x1                   	// #1
  44bf9c:	b	44bf8c <ferror@plt+0x489bc>
  44bfa0:	stp	x29, x30, [sp, #-80]!
  44bfa4:	mov	x5, x0
  44bfa8:	mov	x29, sp
  44bfac:	stp	x19, x20, [sp, #16]
  44bfb0:	mov	x20, x2
  44bfb4:	ldr	x2, [x0]
  44bfb8:	str	x21, [sp, #32]
  44bfbc:	sub	x0, x1, #0x1
  44bfc0:	mov	x21, x3
  44bfc4:	cmp	x0, x2
  44bfc8:	b.cs	44bfe8 <ferror@plt+0x48a18>  // b.hs, b.nlast
  44bfcc:	lsl	x0, x1, #5
  44bfd0:	ldr	x3, [x5, #8]
  44bfd4:	sub	x0, x0, #0x20
  44bfd8:	add	x19, x3, x0
  44bfdc:	ldr	x0, [x3, x0]
  44bfe0:	cmp	x0, x1
  44bfe4:	b.eq	44c028 <ferror@plt+0x48a58>  // b.none
  44bfe8:	add	x0, sp, #0x30
  44bfec:	str	x1, [sp, #48]
  44bff0:	ldr	x1, [x5, #8]
  44bff4:	stp	xzr, xzr, [sp, #56]
  44bff8:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44bffc:	str	xzr, [x0, #24]
  44c000:	add	x4, x4, #0xbec
  44c004:	mov	x3, #0x20                  	// #32
  44c008:	bl	403060 <bsearch@plt>
  44c00c:	mov	x19, x0
  44c010:	cbnz	x0, 44c028 <ferror@plt+0x48a58>
  44c014:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c018:	mov	x0, x21
  44c01c:	add	x1, x1, #0x57
  44c020:	mov	w2, #0x0                   	// #0
  44c024:	blr	x20
  44c028:	mov	x0, x19
  44c02c:	ldp	x19, x20, [sp, #16]
  44c030:	ldr	x21, [sp, #32]
  44c034:	ldp	x29, x30, [sp], #80
  44c038:	ret
  44c03c:	stp	x29, x30, [sp, #-64]!
  44c040:	mov	x29, sp
  44c044:	stp	x19, x20, [sp, #16]
  44c048:	mov	x19, x7
  44c04c:	mov	w20, w4
  44c050:	ldr	x7, [x7, #24]
  44c054:	stp	x21, x22, [sp, #32]
  44c058:	mov	x22, x2
  44c05c:	str	x23, [sp, #48]
  44c060:	mov	x21, x3
  44c064:	mov	x2, x5
  44c068:	mov	x3, x6
  44c06c:	mov	x23, x1
  44c070:	cbz	x7, 44c0ac <ferror@plt+0x48adc>
  44c074:	mov	x1, #0x18                  	// #24
  44c078:	ldr	x4, [x19]
  44c07c:	mul	x7, x7, x1
  44c080:	sub	x7, x7, #0x18
  44c084:	add	x1, x4, x7
  44c088:	ldr	x4, [x4, x7]
  44c08c:	cmp	x4, x22
  44c090:	b.ne	44c0ac <ferror@plt+0x48adc>  // b.any
  44c094:	ldr	x4, [x1, #8]
  44c098:	cmp	x4, x21
  44c09c:	b.ne	44c0ac <ferror@plt+0x48adc>  // b.any
  44c0a0:	ldr	w1, [x1, #16]
  44c0a4:	cmp	w1, w20
  44c0a8:	b.eq	44c0d8 <ferror@plt+0x48b08>  // b.none
  44c0ac:	mov	x4, x19
  44c0b0:	mov	x1, #0x18                  	// #24
  44c0b4:	bl	448910 <ferror@plt+0x45340>
  44c0b8:	cbz	x0, 44c0f0 <ferror@plt+0x48b20>
  44c0bc:	ldr	x2, [x23]
  44c0c0:	ldr	x1, [x19, #24]
  44c0c4:	add	x22, x2, x22
  44c0c8:	stp	x22, x21, [x0]
  44c0cc:	stp	w20, w1, [x0, #16]
  44c0d0:	add	x1, x1, #0x1
  44c0d4:	str	x1, [x19, #24]
  44c0d8:	mov	w0, #0x1                   	// #1
  44c0dc:	ldp	x19, x20, [sp, #16]
  44c0e0:	ldp	x21, x22, [sp, #32]
  44c0e4:	ldr	x23, [sp, #48]
  44c0e8:	ldp	x29, x30, [sp], #64
  44c0ec:	ret
  44c0f0:	mov	w0, #0x0                   	// #0
  44c0f4:	b	44c0dc <ferror@plt+0x48b0c>
  44c0f8:	stp	x29, x30, [sp, #-48]!
  44c0fc:	mov	x29, sp
  44c100:	stp	x21, x22, [sp, #32]
  44c104:	mov	x21, x3
  44c108:	add	x21, x21, x1
  44c10c:	stp	x19, x20, [sp, #16]
  44c110:	add	x20, x4, x1
  44c114:	mov	x22, x2
  44c118:	ldr	x1, [x7, #24]
  44c11c:	mov	x2, x5
  44c120:	mov	x3, x6
  44c124:	mov	x19, x7
  44c128:	cbz	x1, 44c184 <ferror@plt+0x48bb4>
  44c12c:	mov	x4, #0x18                  	// #24
  44c130:	mul	x1, x1, x4
  44c134:	ldr	x4, [x7]
  44c138:	sub	x1, x1, #0x18
  44c13c:	add	x1, x4, x1
  44c140:	ldr	x4, [x1, #8]
  44c144:	cmp	x21, x4
  44c148:	b.eq	44c158 <ferror@plt+0x48b88>  // b.none
  44c14c:	add	x5, x4, #0x1
  44c150:	cmp	x21, x5
  44c154:	b.ne	44c184 <ferror@plt+0x48bb4>  // b.any
  44c158:	ldr	x5, [x1, #16]
  44c15c:	cmp	x5, x22
  44c160:	b.ne	44c184 <ferror@plt+0x48bb4>  // b.any
  44c164:	cmp	x20, x4
  44c168:	b.ls	44c170 <ferror@plt+0x48ba0>  // b.plast
  44c16c:	str	x20, [x1, #8]
  44c170:	mov	w0, #0x1                   	// #1
  44c174:	ldp	x19, x20, [sp, #16]
  44c178:	ldp	x21, x22, [sp, #32]
  44c17c:	ldp	x29, x30, [sp], #48
  44c180:	ret
  44c184:	mov	x4, x19
  44c188:	mov	x1, #0x18                  	// #24
  44c18c:	bl	448910 <ferror@plt+0x45340>
  44c190:	cbz	x0, 44c1ac <ferror@plt+0x48bdc>
  44c194:	stp	x21, x20, [x0]
  44c198:	str	x22, [x0, #16]
  44c19c:	ldr	x0, [x19, #24]
  44c1a0:	add	x0, x0, #0x1
  44c1a4:	str	x0, [x19, #24]
  44c1a8:	b	44c170 <ferror@plt+0x48ba0>
  44c1ac:	mov	w0, #0x0                   	// #0
  44c1b0:	b	44c174 <ferror@plt+0x48ba4>
  44c1b4:	stp	x29, x30, [sp, #-32]!
  44c1b8:	mov	x29, sp
  44c1bc:	ldr	x2, [x0, #24]
  44c1c0:	stp	x19, x20, [sp, #16]
  44c1c4:	mov	x19, x0
  44c1c8:	cmp	x1, x2
  44c1cc:	b.hi	44c1f4 <ferror@plt+0x48c24>  // b.pmore
  44c1d0:	ldr	x0, [x0, #16]
  44c1d4:	mov	w20, #0x1                   	// #1
  44c1d8:	add	x0, x0, x1
  44c1dc:	sub	x1, x2, x1
  44c1e0:	stp	x0, x1, [x19, #16]
  44c1e4:	mov	w0, w20
  44c1e8:	ldp	x19, x20, [sp, #16]
  44c1ec:	ldp	x29, x30, [sp], #32
  44c1f0:	ret
  44c1f4:	ldr	w20, [x0, #56]
  44c1f8:	cbnz	w20, 44c214 <ferror@plt+0x48c44>
  44c1fc:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c200:	add	x1, x1, #0x71
  44c204:	bl	44bdd4 <ferror@plt+0x48804>
  44c208:	mov	w0, #0x1                   	// #1
  44c20c:	str	w0, [x19, #56]
  44c210:	b	44c1e4 <ferror@plt+0x48c14>
  44c214:	mov	w20, #0x0                   	// #0
  44c218:	b	44c1e4 <ferror@plt+0x48c14>
  44c21c:	stp	x29, x30, [sp, #-32]!
  44c220:	mov	x1, #0x4                   	// #4
  44c224:	mov	x29, sp
  44c228:	stp	x19, x20, [sp, #16]
  44c22c:	mov	x19, x0
  44c230:	ldr	x20, [x0, #16]
  44c234:	bl	44c1b4 <ferror@plt+0x48be4>
  44c238:	cbz	w0, 44c258 <ferror@plt+0x48c88>
  44c23c:	ldr	w1, [x19, #32]
  44c240:	ldr	w0, [x20]
  44c244:	cbz	w1, 44c24c <ferror@plt+0x48c7c>
  44c248:	rev	w0, w0
  44c24c:	ldp	x19, x20, [sp, #16]
  44c250:	ldp	x29, x30, [sp], #32
  44c254:	ret
  44c258:	mov	w0, #0x0                   	// #0
  44c25c:	b	44c24c <ferror@plt+0x48c7c>
  44c260:	stp	x29, x30, [sp, #-32]!
  44c264:	mov	x1, #0x8                   	// #8
  44c268:	mov	x29, sp
  44c26c:	stp	x19, x20, [sp, #16]
  44c270:	mov	x19, x0
  44c274:	ldr	x20, [x0, #16]
  44c278:	bl	44c1b4 <ferror@plt+0x48be4>
  44c27c:	cbz	w0, 44c29c <ferror@plt+0x48ccc>
  44c280:	ldr	w1, [x19, #32]
  44c284:	ldr	x0, [x20]
  44c288:	cbz	w1, 44c290 <ferror@plt+0x48cc0>
  44c28c:	rev	x0, x0
  44c290:	ldp	x19, x20, [sp, #16]
  44c294:	ldp	x29, x30, [sp], #32
  44c298:	ret
  44c29c:	mov	x0, #0x0                   	// #0
  44c2a0:	b	44c290 <ferror@plt+0x48cc0>
  44c2a4:	cbz	w1, 44c2ac <ferror@plt+0x48cdc>
  44c2a8:	b	44c260 <ferror@plt+0x48c90>
  44c2ac:	stp	x29, x30, [sp, #-16]!
  44c2b0:	mov	x29, sp
  44c2b4:	bl	44c21c <ferror@plt+0x48c4c>
  44c2b8:	mov	w0, w0
  44c2bc:	ldp	x29, x30, [sp], #16
  44c2c0:	ret
  44c2c4:	stp	x29, x30, [sp, #-32]!
  44c2c8:	mov	x1, #0x2                   	// #2
  44c2cc:	mov	x29, sp
  44c2d0:	stp	x19, x20, [sp, #16]
  44c2d4:	mov	x19, x0
  44c2d8:	ldr	x20, [x0, #16]
  44c2dc:	bl	44c1b4 <ferror@plt+0x48be4>
  44c2e0:	cbz	w0, 44c30c <ferror@plt+0x48d3c>
  44c2e4:	ldrb	w1, [x20, #1]
  44c2e8:	ldrb	w0, [x20]
  44c2ec:	ldr	w3, [x19, #32]
  44c2f0:	orr	w2, w1, w0, lsl #8
  44c2f4:	cmp	w3, #0x0
  44c2f8:	orr	w0, w0, w1, lsl #8
  44c2fc:	csel	w0, w0, w2, eq  // eq = none
  44c300:	ldp	x19, x20, [sp, #16]
  44c304:	ldp	x29, x30, [sp], #32
  44c308:	ret
  44c30c:	mov	w0, #0x0                   	// #0
  44c310:	b	44c300 <ferror@plt+0x48d30>
  44c314:	stp	x29, x30, [sp, #-32]!
  44c318:	mov	x1, #0x1                   	// #1
  44c31c:	mov	x29, sp
  44c320:	str	x19, [sp, #16]
  44c324:	ldr	x19, [x0, #16]
  44c328:	bl	44c1b4 <ferror@plt+0x48be4>
  44c32c:	cbz	w0, 44c340 <ferror@plt+0x48d70>
  44c330:	ldrb	w0, [x19]
  44c334:	ldr	x19, [sp, #16]
  44c338:	ldp	x29, x30, [sp], #32
  44c33c:	ret
  44c340:	mov	w0, #0x0                   	// #0
  44c344:	b	44c334 <ferror@plt+0x48d64>
  44c348:	stp	x29, x30, [sp, #-16]!
  44c34c:	sub	w1, w1, #0x1
  44c350:	cmp	w1, #0x7
  44c354:	mov	x29, sp
  44c358:	b.hi	44c3a4 <ferror@plt+0x48dd4>  // b.pmore
  44c35c:	adrp	x2, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44c360:	add	x2, x2, #0xfd4
  44c364:	ldrb	w1, [x2, w1, uxtw]
  44c368:	adr	x2, 44c374 <ferror@plt+0x48da4>
  44c36c:	add	x1, x2, w1, sxtb #2
  44c370:	br	x1
  44c374:	bl	44c314 <ferror@plt+0x48d44>
  44c378:	and	x0, x0, #0xff
  44c37c:	ldp	x29, x30, [sp], #16
  44c380:	ret
  44c384:	bl	44c2c4 <ferror@plt+0x48cf4>
  44c388:	and	x0, x0, #0xffff
  44c38c:	b	44c37c <ferror@plt+0x48dac>
  44c390:	bl	44c21c <ferror@plt+0x48c4c>
  44c394:	mov	w0, w0
  44c398:	b	44c37c <ferror@plt+0x48dac>
  44c39c:	ldp	x29, x30, [sp], #16
  44c3a0:	b	44c260 <ferror@plt+0x48c90>
  44c3a4:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c3a8:	add	x1, x1, #0x81
  44c3ac:	bl	44bdd4 <ferror@plt+0x48804>
  44c3b0:	mov	x0, #0x0                   	// #0
  44c3b4:	b	44c37c <ferror@plt+0x48dac>
  44c3b8:	stp	x29, x30, [sp, #-64]!
  44c3bc:	mov	x29, sp
  44c3c0:	stp	x19, x20, [sp, #16]
  44c3c4:	mov	x19, x0
  44c3c8:	mov	x20, #0x0                   	// #0
  44c3cc:	stp	x21, x22, [sp, #32]
  44c3d0:	adrp	x22, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c3d4:	add	x22, x22, #0xa2
  44c3d8:	mov	w21, #0x0                   	// #0
  44c3dc:	stp	x23, x24, [sp, #48]
  44c3e0:	mov	w24, #0x0                   	// #0
  44c3e4:	mov	x0, x19
  44c3e8:	mov	x1, #0x1                   	// #1
  44c3ec:	ldr	x23, [x19, #16]
  44c3f0:	bl	44c1b4 <ferror@plt+0x48be4>
  44c3f4:	cbz	w0, 44c448 <ferror@plt+0x48e78>
  44c3f8:	ldrb	w23, [x23]
  44c3fc:	cmp	w21, #0x3f
  44c400:	b.hi	44c430 <ferror@plt+0x48e60>  // b.pmore
  44c404:	and	x0, x23, #0x7f
  44c408:	lsl	x0, x0, x21
  44c40c:	orr	x20, x20, x0
  44c410:	add	w21, w21, #0x7
  44c414:	tbnz	w23, #7, 44c3e4 <ferror@plt+0x48e14>
  44c418:	mov	x0, x20
  44c41c:	ldp	x19, x20, [sp, #16]
  44c420:	ldp	x21, x22, [sp, #32]
  44c424:	ldp	x23, x24, [sp, #48]
  44c428:	ldp	x29, x30, [sp], #64
  44c42c:	ret
  44c430:	cbnz	w24, 44c410 <ferror@plt+0x48e40>
  44c434:	mov	x1, x22
  44c438:	mov	x0, x19
  44c43c:	mov	w24, #0x1                   	// #1
  44c440:	bl	44bdd4 <ferror@plt+0x48804>
  44c444:	b	44c410 <ferror@plt+0x48e40>
  44c448:	mov	x20, #0x0                   	// #0
  44c44c:	b	44c418 <ferror@plt+0x48e48>
  44c450:	stp	x29, x30, [sp, #-64]!
  44c454:	mov	x29, sp
  44c458:	stp	x21, x22, [sp, #32]
  44c45c:	mov	x21, x0
  44c460:	stp	x23, x24, [sp, #48]
  44c464:	adrp	x23, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c468:	add	x23, x23, #0x9b
  44c46c:	mov	w24, #0x0                   	// #0
  44c470:	stp	x19, x20, [sp, #16]
  44c474:	mov	w20, #0x0                   	// #0
  44c478:	mov	x19, #0x0                   	// #0
  44c47c:	mov	x0, x21
  44c480:	mov	x1, #0x1                   	// #1
  44c484:	ldr	x22, [x21, #16]
  44c488:	bl	44c1b4 <ferror@plt+0x48be4>
  44c48c:	cbz	w0, 44c4f8 <ferror@plt+0x48f28>
  44c490:	ldrb	w22, [x22]
  44c494:	cmp	w20, #0x3f
  44c498:	b.hi	44c4e0 <ferror@plt+0x48f10>  // b.pmore
  44c49c:	and	x0, x22, #0x7f
  44c4a0:	lsl	x0, x0, x20
  44c4a4:	orr	x19, x19, x0
  44c4a8:	add	w20, w20, #0x7
  44c4ac:	tbnz	w22, #7, 44c47c <ferror@plt+0x48eac>
  44c4b0:	tbz	w22, #6, 44c4c8 <ferror@plt+0x48ef8>
  44c4b4:	cmp	w20, #0x3f
  44c4b8:	b.hi	44c4c8 <ferror@plt+0x48ef8>  // b.pmore
  44c4bc:	mov	x0, #0xffffffffffffffff    	// #-1
  44c4c0:	lsl	x20, x0, x20
  44c4c4:	orr	x19, x19, x20
  44c4c8:	mov	x0, x19
  44c4cc:	ldp	x19, x20, [sp, #16]
  44c4d0:	ldp	x21, x22, [sp, #32]
  44c4d4:	ldp	x23, x24, [sp, #48]
  44c4d8:	ldp	x29, x30, [sp], #64
  44c4dc:	ret
  44c4e0:	cbnz	w24, 44c4a8 <ferror@plt+0x48ed8>
  44c4e4:	mov	x1, x23
  44c4e8:	mov	x0, x21
  44c4ec:	mov	w24, #0x1                   	// #1
  44c4f0:	bl	44bdd4 <ferror@plt+0x48804>
  44c4f4:	b	44c4a8 <ferror@plt+0x48ed8>
  44c4f8:	mov	x0, #0x0                   	// #0
  44c4fc:	b	44c4cc <ferror@plt+0x48efc>
  44c500:	stp	x29, x30, [sp, #-32]!
  44c504:	mov	x29, sp
  44c508:	stp	x19, x20, [sp, #16]
  44c50c:	mov	x19, x0
  44c510:	ldp	x20, x1, [x0, #16]
  44c514:	mov	x0, x20
  44c518:	bl	402da0 <strnlen@plt>
  44c51c:	add	x1, x0, #0x1
  44c520:	mov	x0, x19
  44c524:	bl	44c1b4 <ferror@plt+0x48be4>
  44c528:	cmp	w0, #0x0
  44c52c:	csel	x0, x20, xzr, ne  // ne = any
  44c530:	ldp	x19, x20, [sp, #16]
  44c534:	ldp	x29, x30, [sp], #32
  44c538:	ret
  44c53c:	stp	x29, x30, [sp, #-96]!
  44c540:	mov	x29, sp
  44c544:	stp	x19, x20, [sp, #16]
  44c548:	mov	x20, x1
  44c54c:	ldr	x19, [sp, #96]
  44c550:	stp	x21, x22, [sp, #32]
  44c554:	mov	w21, w2
  44c558:	mov	x22, x7
  44c55c:	stp	x23, x24, [sp, #48]
  44c560:	mov	x23, x5
  44c564:	mov	x24, x6
  44c568:	stp	x25, x26, [sp, #64]
  44c56c:	mov	w26, w3
  44c570:	mov	w25, w4
  44c574:	str	x27, [sp, #80]
  44c578:	adrp	x27, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44c57c:	add	x27, x27, #0xfdc
  44c580:	stp	xzr, xzr, [x19]
  44c584:	cmp	w0, #0x20
  44c588:	b.hi	44c5ac <ferror@plt+0x48fdc>  // b.pmore
  44c58c:	cbz	w0, 44c5cc <ferror@plt+0x48ffc>
  44c590:	sub	w0, w0, #0x1
  44c594:	cmp	w0, #0x1f
  44c598:	b.hi	44c5cc <ferror@plt+0x48ffc>  // b.pmore
  44c59c:	ldrh	w0, [x27, w0, uxtw #1]
  44c5a0:	adr	x1, 44c5ac <ferror@plt+0x48fdc>
  44c5a4:	add	x0, x1, w0, sxth #2
  44c5a8:	br	x0
  44c5ac:	mov	w1, #0x1f20                	// #7968
  44c5b0:	cmp	w0, w1
  44c5b4:	b.eq	44c828 <ferror@plt+0x49258>  // b.none
  44c5b8:	b.hi	44c5d8 <ferror@plt+0x49008>  // b.pmore
  44c5bc:	mov	w1, #0xffffe0ff            	// #-7937
  44c5c0:	add	w0, w0, w1
  44c5c4:	cmp	w0, #0x1
  44c5c8:	b.ls	44c820 <ferror@plt+0x49250>  // b.plast
  44c5cc:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c5d0:	add	x1, x1, #0xf8
  44c5d4:	b	44c768 <ferror@plt+0x49198>
  44c5d8:	mov	w1, #0x1f21                	// #7969
  44c5dc:	cmp	w0, w1
  44c5e0:	b.ne	44c5cc <ferror@plt+0x48ffc>  // b.any
  44c5e4:	mov	w1, w21
  44c5e8:	mov	x0, x20
  44c5ec:	bl	44c2a4 <ferror@plt+0x48cd4>
  44c5f0:	cbz	x22, 44c83c <ferror@plt+0x4926c>
  44c5f4:	ldr	x1, [x22, #112]
  44c5f8:	cmp	x1, x0
  44c5fc:	b.hi	44c854 <ferror@plt+0x49284>  // b.pmore
  44c600:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c604:	add	x1, x1, #0xd6
  44c608:	b	44c768 <ferror@plt+0x49198>
  44c60c:	mov	w21, #0x1                   	// #1
  44c610:	str	w21, [x19]
  44c614:	mov	w1, w25
  44c618:	mov	x0, x20
  44c61c:	bl	44c348 <ferror@plt+0x48d78>
  44c620:	b	44c744 <ferror@plt+0x49174>
  44c624:	mov	w0, #0xa                   	// #10
  44c628:	str	w0, [x19]
  44c62c:	mov	x0, x20
  44c630:	bl	44c2c4 <ferror@plt+0x48cf4>
  44c634:	and	x1, x0, #0xffff
  44c638:	mov	x0, x20
  44c63c:	ldp	x19, x20, [sp, #16]
  44c640:	ldp	x21, x22, [sp, #32]
  44c644:	ldp	x23, x24, [sp, #48]
  44c648:	ldp	x25, x26, [sp, #64]
  44c64c:	ldr	x27, [sp, #80]
  44c650:	ldp	x29, x30, [sp], #96
  44c654:	b	44c1b4 <ferror@plt+0x48be4>
  44c658:	mov	w0, #0xa                   	// #10
  44c65c:	str	w0, [x19]
  44c660:	mov	x0, x20
  44c664:	bl	44c21c <ferror@plt+0x48c4c>
  44c668:	mov	w1, w0
  44c66c:	b	44c638 <ferror@plt+0x49068>
  44c670:	mov	w0, #0x2                   	// #2
  44c674:	str	w0, [x19]
  44c678:	mov	x0, x20
  44c67c:	bl	44c2c4 <ferror@plt+0x48cf4>
  44c680:	and	x0, x0, #0xffff
  44c684:	b	44c744 <ferror@plt+0x49174>
  44c688:	mov	w0, #0x2                   	// #2
  44c68c:	str	w0, [x19]
  44c690:	mov	x0, x20
  44c694:	bl	44c21c <ferror@plt+0x48c4c>
  44c698:	mov	w0, w0
  44c69c:	b	44c744 <ferror@plt+0x49174>
  44c6a0:	mov	w0, #0x2                   	// #2
  44c6a4:	str	w0, [x19]
  44c6a8:	mov	x0, x20
  44c6ac:	bl	44c260 <ferror@plt+0x48c90>
  44c6b0:	b	44c744 <ferror@plt+0x49174>
  44c6b4:	mov	w0, #0x4                   	// #4
  44c6b8:	str	w0, [x19]
  44c6bc:	mov	x0, x20
  44c6c0:	bl	44c500 <ferror@plt+0x48f30>
  44c6c4:	cmp	x0, #0x0
  44c6c8:	str	x0, [x19, #8]
  44c6cc:	cset	w0, ne  // ne = any
  44c6d0:	ldp	x19, x20, [sp, #16]
  44c6d4:	ldp	x21, x22, [sp, #32]
  44c6d8:	ldp	x23, x24, [sp, #48]
  44c6dc:	ldp	x25, x26, [sp, #64]
  44c6e0:	ldr	x27, [sp, #80]
  44c6e4:	ldp	x29, x30, [sp], #96
  44c6e8:	ret
  44c6ec:	mov	w0, #0xa                   	// #10
  44c6f0:	str	w0, [x19]
  44c6f4:	mov	x0, x20
  44c6f8:	bl	44c3b8 <ferror@plt+0x48de8>
  44c6fc:	mov	x1, x0
  44c700:	b	44c638 <ferror@plt+0x49068>
  44c704:	mov	w0, #0xa                   	// #10
  44c708:	str	w0, [x19]
  44c70c:	mov	x0, x20
  44c710:	bl	44c314 <ferror@plt+0x48d44>
  44c714:	and	x1, x0, #0xff
  44c718:	b	44c638 <ferror@plt+0x49068>
  44c71c:	mov	w0, #0x2                   	// #2
  44c720:	str	w0, [x19]
  44c724:	mov	x0, x20
  44c728:	bl	44c314 <ferror@plt+0x48d44>
  44c72c:	and	x0, x0, #0xff
  44c730:	b	44c744 <ferror@plt+0x49174>
  44c734:	mov	w0, #0x3                   	// #3
  44c738:	str	w0, [x19]
  44c73c:	mov	x0, x20
  44c740:	bl	44c450 <ferror@plt+0x48e80>
  44c744:	str	x0, [x19, #8]
  44c748:	b	44c840 <ferror@plt+0x49270>
  44c74c:	mov	w1, w21
  44c750:	mov	x0, x20
  44c754:	bl	44c2a4 <ferror@plt+0x48cd4>
  44c758:	cmp	x24, x0
  44c75c:	b.hi	44c778 <ferror@plt+0x491a8>  // b.pmore
  44c760:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c764:	add	x1, x1, #0xbc
  44c768:	mov	x0, x20
  44c76c:	bl	44bdd4 <ferror@plt+0x48804>
  44c770:	mov	w0, #0x0                   	// #0
  44c774:	b	44c6d0 <ferror@plt+0x49100>
  44c778:	mov	w1, #0x4                   	// #4
  44c77c:	add	x0, x23, x0
  44c780:	str	w1, [x19]
  44c784:	b	44c744 <ferror@plt+0x49174>
  44c788:	mov	w0, #0x2                   	// #2
  44c78c:	str	w0, [x19]
  44c790:	mov	x0, x20
  44c794:	bl	44c3b8 <ferror@plt+0x48de8>
  44c798:	b	44c744 <ferror@plt+0x49174>
  44c79c:	mov	w0, #0x6                   	// #6
  44c7a0:	str	w0, [x19]
  44c7a4:	cmp	w26, #0x2
  44c7a8:	b.eq	44c614 <ferror@plt+0x49044>  // b.none
  44c7ac:	mov	w1, w21
  44c7b0:	mov	x0, x20
  44c7b4:	bl	44c2a4 <ferror@plt+0x48cd4>
  44c7b8:	b	44c744 <ferror@plt+0x49174>
  44c7bc:	mov	w0, #0x5                   	// #5
  44c7c0:	b	44c720 <ferror@plt+0x49150>
  44c7c4:	mov	w0, #0x5                   	// #5
  44c7c8:	b	44c674 <ferror@plt+0x490a4>
  44c7cc:	mov	w0, #0x5                   	// #5
  44c7d0:	b	44c68c <ferror@plt+0x490bc>
  44c7d4:	mov	w0, #0x5                   	// #5
  44c7d8:	b	44c6a4 <ferror@plt+0x490d4>
  44c7dc:	mov	w0, #0x5                   	// #5
  44c7e0:	b	44c78c <ferror@plt+0x491bc>
  44c7e4:	mov	x0, x20
  44c7e8:	bl	44c3b8 <ferror@plt+0x48de8>
  44c7ec:	b	44c580 <ferror@plt+0x48fb0>
  44c7f0:	mov	w0, #0x8                   	// #8
  44c7f4:	str	w0, [x19]
  44c7f8:	b	44c7ac <ferror@plt+0x491dc>
  44c7fc:	mov	w0, #0xb                   	// #11
  44c800:	b	44c6f0 <ferror@plt+0x49120>
  44c804:	mov	w0, #0x2                   	// #2
  44c808:	str	w0, [x19]
  44c80c:	mov	x0, #0x1                   	// #1
  44c810:	str	x0, [x19, #8]
  44c814:	b	44c6d0 <ferror@plt+0x49100>
  44c818:	mov	w0, #0x9                   	// #9
  44c81c:	b	44c6a4 <ferror@plt+0x490d4>
  44c820:	mov	w0, #0x8                   	// #8
  44c824:	b	44c78c <ferror@plt+0x491bc>
  44c828:	mov	w1, w21
  44c82c:	mov	x0, x20
  44c830:	bl	44c2a4 <ferror@plt+0x48cd4>
  44c834:	str	x0, [x19, #8]
  44c838:	cbnz	x22, 44c848 <ferror@plt+0x49278>
  44c83c:	str	wzr, [x19]
  44c840:	mov	w0, #0x1                   	// #1
  44c844:	b	44c6d0 <ferror@plt+0x49100>
  44c848:	mov	w0, #0x7                   	// #7
  44c84c:	str	w0, [x19]
  44c850:	b	44c840 <ferror@plt+0x49270>
  44c854:	mov	w1, #0x4                   	// #4
  44c858:	str	w1, [x19]
  44c85c:	ldr	x1, [x22, #104]
  44c860:	add	x0, x1, x0
  44c864:	b	44c744 <ferror@plt+0x49174>
  44c868:	sub	sp, sp, #0x170
  44c86c:	stp	x29, x30, [sp, #48]
  44c870:	add	x29, sp, #0x30
  44c874:	stp	x21, x22, [sp, #80]
  44c878:	ldp	x21, x22, [sp, #376]
  44c87c:	stp	x19, x20, [sp, #64]
  44c880:	mov	x20, x2
  44c884:	ldr	x19, [sp, #392]
  44c888:	stp	x23, x24, [sp, #96]
  44c88c:	add	x23, sp, #0xf0
  44c890:	stp	x25, x26, [sp, #112]
  44c894:	mov	x25, x0
  44c898:	mov	x26, x1
  44c89c:	stp	x27, x28, [sp, #128]
  44c8a0:	add	x27, sp, #0x130
  44c8a4:	stp	x5, x6, [sp, #160]
  44c8a8:	stp	x3, x4, [sp, #176]
  44c8ac:	str	w7, [sp, #224]
  44c8b0:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44c8b4:	add	x0, x0, #0x1c
  44c8b8:	str	x0, [sp, #192]
  44c8bc:	ldr	x0, [x20, #24]
  44c8c0:	cbz	x0, 44c8d4 <ferror@plt+0x49304>
  44c8c4:	mov	x0, x20
  44c8c8:	bl	44c3b8 <ferror@plt+0x48de8>
  44c8cc:	mov	x1, x0
  44c8d0:	cbnz	x0, 44c8f8 <ferror@plt+0x49328>
  44c8d4:	mov	w0, #0x1                   	// #1
  44c8d8:	ldp	x29, x30, [sp, #48]
  44c8dc:	ldp	x19, x20, [sp, #64]
  44c8e0:	ldp	x21, x22, [sp, #80]
  44c8e4:	ldp	x23, x24, [sp, #96]
  44c8e8:	ldp	x25, x26, [sp, #112]
  44c8ec:	ldp	x27, x28, [sp, #128]
  44c8f0:	add	sp, sp, #0x170
  44c8f4:	ret
  44c8f8:	mov	x3, x22
  44c8fc:	mov	x2, x21
  44c900:	add	x0, x19, #0x58
  44c904:	bl	44bfa0 <ferror@plt+0x489d0>
  44c908:	mov	x28, x0
  44c90c:	cbnz	x0, 44c918 <ferror@plt+0x49348>
  44c910:	mov	w0, #0x0                   	// #0
  44c914:	b	44c8d8 <ferror@plt+0x49308>
  44c918:	ldr	x0, [sp, #408]
  44c91c:	cbz	x0, 44c92c <ferror@plt+0x4935c>
  44c920:	ldr	x1, [sp, #408]
  44c924:	ldr	w0, [x28, #8]
  44c928:	str	w0, [x1]
  44c92c:	mov	x11, #0x0                   	// #0
  44c930:	mov	x9, #0x0                   	// #0
  44c934:	mov	w12, #0x0                   	// #0
  44c938:	mov	x10, #0x0                   	// #0
  44c93c:	mov	x24, #0x0                   	// #0
  44c940:	stp	wzr, wzr, [sp, #148]
  44c944:	str	wzr, [sp, #156]
  44c948:	ldr	x0, [x28, #16]
  44c94c:	cmp	x0, x11
  44c950:	b.hi	44c9a8 <ferror@plt+0x493d8>  // b.pmore
  44c954:	ldr	w0, [x28, #8]
  44c958:	cmp	w0, #0x2e
  44c95c:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  44c960:	b.eq	44cb20 <ferror@plt+0x49550>  // b.none
  44c964:	ldr	w0, [x28, #12]
  44c968:	cbz	w0, 44c8bc <ferror@plt+0x492ec>
  44c96c:	ldp	x5, x6, [sp, #160]
  44c970:	stp	x21, x22, [sp, #8]
  44c974:	ldr	w7, [sp, #224]
  44c978:	ldp	x3, x4, [sp, #176]
  44c97c:	str	xzr, [sp, #40]
  44c980:	ldr	x0, [sp, #400]
  44c984:	stp	x19, x0, [sp, #24]
  44c988:	mov	x2, x20
  44c98c:	ldr	x0, [sp, #368]
  44c990:	str	x0, [sp]
  44c994:	mov	x1, x26
  44c998:	mov	x0, x25
  44c99c:	bl	44c868 <ferror@plt+0x49298>
  44c9a0:	cbnz	w0, 44c8b0 <ferror@plt+0x492e0>
  44c9a4:	b	44c910 <ferror@plt+0x49340>
  44c9a8:	ldr	x0, [x28, #24]
  44c9ac:	str	x27, [sp]
  44c9b0:	ldp	x5, x6, [sp, #176]
  44c9b4:	lsl	x13, x11, #3
  44c9b8:	add	x0, x0, x11, lsl #3
  44c9bc:	ldr	w4, [x19, #48]
  44c9c0:	ldp	w3, w2, [x19, #40]
  44c9c4:	mov	x1, x20
  44c9c8:	ldr	w0, [x0, #4]
  44c9cc:	ldr	x7, [sp, #368]
  44c9d0:	stp	x11, x13, [sp, #200]
  44c9d4:	str	x10, [sp, #216]
  44c9d8:	str	w12, [sp, #228]
  44c9dc:	str	x9, [sp, #232]
  44c9e0:	bl	44c53c <ferror@plt+0x48f6c>
  44c9e4:	cbz	w0, 44c8d8 <ferror@plt+0x49308>
  44c9e8:	ldp	x11, x13, [sp, #200]
  44c9ec:	ldr	x0, [x28, #24]
  44c9f0:	ldr	w12, [sp, #228]
  44c9f4:	ldr	x10, [sp, #216]
  44c9f8:	ldr	w0, [x0, x13]
  44c9fc:	ldr	x9, [sp, #232]
  44ca00:	cmp	w0, #0x1b
  44ca04:	b.hi	44ca40 <ferror@plt+0x49470>  // b.pmore
  44ca08:	cmp	w0, #0xf
  44ca0c:	b.hi	44ca20 <ferror@plt+0x49450>  // b.pmore
  44ca10:	cmp	w0, #0x3
  44ca14:	b.eq	44cad8 <ferror@plt+0x49508>  // b.none
  44ca18:	add	x11, x11, #0x1
  44ca1c:	b	44c948 <ferror@plt+0x49378>
  44ca20:	sub	w0, w0, #0x10
  44ca24:	cmp	w0, #0xb
  44ca28:	b.hi	44ca18 <ferror@plt+0x49448>  // b.pmore
  44ca2c:	ldr	x1, [sp, #192]
  44ca30:	ldrb	w0, [x1, w0, uxtw]
  44ca34:	adr	x1, 44ca40 <ferror@plt+0x49470>
  44ca38:	add	x0, x1, w0, sxtb #2
  44ca3c:	br	x0
  44ca40:	cmp	w0, #0x55
  44ca44:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44ca48:	ldr	w0, [sp, #304]
  44ca4c:	cmp	w0, #0x2
  44ca50:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  44ca54:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44ca58:	mov	w0, #0x1                   	// #1
  44ca5c:	str	w0, [sp, #156]
  44ca60:	ldr	x9, [sp, #312]
  44ca64:	b	44ca18 <ferror@plt+0x49448>
  44ca68:	ldr	w0, [sp, #304]
  44ca6c:	cmp	w0, #0x1
  44ca70:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44ca74:	str	w0, [sp, #152]
  44ca78:	ldr	x24, [sp, #312]
  44ca7c:	b	44ca18 <ferror@plt+0x49448>
  44ca80:	ldr	w0, [sp, #304]
  44ca84:	cmp	w0, #0x1
  44ca88:	b.ne	44ca98 <ferror@plt+0x494c8>  // b.any
  44ca8c:	str	w0, [sp, #148]
  44ca90:	ldr	x10, [sp, #312]
  44ca94:	b	44ca18 <ferror@plt+0x49448>
  44ca98:	cmp	w0, #0x2
  44ca9c:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44caa0:	mov	w12, #0x1                   	// #1
  44caa4:	str	w12, [sp, #148]
  44caa8:	ldr	x10, [sp, #312]
  44caac:	b	44ca18 <ferror@plt+0x49448>
  44cab0:	ldr	w0, [x28, #8]
  44cab4:	cmp	w0, #0x11
  44cab8:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44cabc:	ldr	w0, [sp, #304]
  44cac0:	cmp	w0, #0x2
  44cac4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  44cac8:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44cacc:	ldr	x0, [sp, #312]
  44cad0:	str	x0, [x19, #56]
  44cad4:	b	44ca18 <ferror@plt+0x49448>
  44cad8:	ldr	w0, [x28, #8]
  44cadc:	cmp	w0, #0x11
  44cae0:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44cae4:	ldr	w0, [sp, #304]
  44cae8:	cmp	w0, #0x4
  44caec:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44caf0:	ldr	x0, [sp, #312]
  44caf4:	str	x0, [x19, #64]
  44caf8:	b	44ca18 <ferror@plt+0x49448>
  44cafc:	ldr	w0, [x28, #8]
  44cb00:	cmp	w0, #0x11
  44cb04:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44cb08:	ldr	w0, [sp, #304]
  44cb0c:	cmp	w0, #0x4
  44cb10:	b.ne	44ca18 <ferror@plt+0x49448>  // b.any
  44cb14:	ldr	x0, [sp, #312]
  44cb18:	str	x0, [x19, #72]
  44cb1c:	b	44ca18 <ferror@plt+0x49448>
  44cb20:	ldr	w0, [sp, #156]
  44cb24:	cbz	w0, 44cc48 <ferror@plt+0x49678>
  44cb28:	ldr	x0, [sp, #168]
  44cb2c:	cmp	x9, x0
  44cb30:	b.cc	44cb4c <ferror@plt+0x4957c>  // b.lo, b.ul, b.last
  44cb34:	mov	x0, x22
  44cb38:	mov	w2, #0x0                   	// #0
  44cb3c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44cb40:	add	x1, x1, #0x1a1
  44cb44:	blr	x21
  44cb48:	b	44c910 <ferror@plt+0x49340>
  44cb4c:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44cb50:	add	x0, x0, #0x67e
  44cb54:	str	x0, [sp, #304]
  44cb58:	ldr	x0, [sp, #160]
  44cb5c:	str	x0, [sp, #312]
  44cb60:	stp	x21, x22, [sp, #344]
  44cb64:	add	x0, x0, x9
  44cb68:	str	x0, [sp, #320]
  44cb6c:	ldr	x0, [sp, #168]
  44cb70:	str	wzr, [sp, #360]
  44cb74:	sub	x9, x0, x9
  44cb78:	ldr	w0, [sp, #224]
  44cb7c:	str	x9, [sp, #328]
  44cb80:	str	w0, [sp, #336]
  44cb84:	ldr	w0, [sp, #360]
  44cb88:	cbnz	w0, 44c910 <ferror@plt+0x49340>
  44cb8c:	ldr	w1, [x19, #48]
  44cb90:	mov	x0, x27
  44cb94:	bl	44c348 <ferror@plt+0x48d78>
  44cb98:	mov	x2, x0
  44cb9c:	ldr	w1, [x19, #48]
  44cba0:	mov	x0, x27
  44cba4:	str	x2, [sp, #200]
  44cba8:	bl	44c348 <ferror@plt+0x48d78>
  44cbac:	mov	x3, x0
  44cbb0:	ldr	x2, [sp, #200]
  44cbb4:	orr	x0, x2, x0
  44cbb8:	cbz	x0, 44cc1c <ferror@plt+0x4964c>
  44cbbc:	ldr	w1, [x19, #48]
  44cbc0:	mov	x0, x2
  44cbc4:	bl	44baf4 <ferror@plt+0x48524>
  44cbc8:	ldr	x2, [sp, #200]
  44cbcc:	cbnz	w0, 44cc14 <ferror@plt+0x49644>
  44cbd0:	add	x0, sp, #0x200
  44cbd4:	add	x2, x2, x24
  44cbd8:	add	x3, x3, x24
  44cbdc:	stp	x2, x3, [sp, #280]
  44cbe0:	mov	x4, x22
  44cbe4:	ldr	x5, [sp, #400]
  44cbe8:	str	x19, [sp, #296]
  44cbec:	ldp	x0, x1, [x0, #-232]
  44cbf0:	mov	x3, x21
  44cbf4:	mov	x2, x23
  44cbf8:	stp	x0, x1, [x23]
  44cbfc:	mov	x1, x26
  44cc00:	mov	x0, x25
  44cc04:	str	x19, [x23, #16]
  44cc08:	bl	44bd08 <ferror@plt+0x48738>
  44cc0c:	cbnz	w0, 44cb84 <ferror@plt+0x495b4>
  44cc10:	b	44c8d8 <ferror@plt+0x49308>
  44cc14:	mov	x24, x3
  44cc18:	b	44cb84 <ferror@plt+0x495b4>
  44cc1c:	ldr	w0, [sp, #360]
  44cc20:	cbnz	w0, 44c910 <ferror@plt+0x49340>
  44cc24:	ldr	w0, [x28, #8]
  44cc28:	cmp	w0, #0x11
  44cc2c:	b.ne	44c964 <ferror@plt+0x49394>  // b.any
  44cc30:	ldr	w0, [sp, #156]
  44cc34:	cbnz	w0, 44c8d4 <ferror@plt+0x49304>
  44cc38:	ldp	w1, w0, [sp, #148]
  44cc3c:	tst	w0, w1
  44cc40:	b.eq	44c964 <ferror@plt+0x49394>  // b.none
  44cc44:	b	44c8d4 <ferror@plt+0x49304>
  44cc48:	ldp	w1, w0, [sp, #148]
  44cc4c:	tst	w0, w1
  44cc50:	b.eq	44cc24 <ferror@plt+0x49654>  // b.none
  44cc54:	cbz	w12, 44cc5c <ferror@plt+0x4968c>
  44cc58:	add	x10, x10, x24
  44cc5c:	stp	x24, x10, [sp, #304]
  44cc60:	mov	x4, x22
  44cc64:	mov	x3, x21
  44cc68:	ldr	x5, [sp, #400]
  44cc6c:	str	x19, [sp, #320]
  44cc70:	ldp	x0, x1, [x27]
  44cc74:	mov	x2, x23
  44cc78:	stp	x0, x1, [x23]
  44cc7c:	mov	x1, x26
  44cc80:	mov	x0, x25
  44cc84:	str	x19, [x23, #16]
  44cc88:	bl	44bd08 <ferror@plt+0x48738>
  44cc8c:	cbnz	w0, 44cc24 <ferror@plt+0x49654>
  44cc90:	b	44c8d8 <ferror@plt+0x49308>
  44cc94:	ldr	x3, [x0]
  44cc98:	ldr	x2, [x1]
  44cc9c:	cmp	x3, x2
  44cca0:	b.cc	44ccd8 <ferror@plt+0x49708>  // b.lo, b.ul, b.last
  44cca4:	b.hi	44ccd0 <ferror@plt+0x49700>  // b.pmore
  44cca8:	ldr	x3, [x0, #8]
  44ccac:	ldr	x2, [x1, #8]
  44ccb0:	cmp	x3, x2
  44ccb4:	b.cc	44ccd0 <ferror@plt+0x49700>  // b.lo, b.ul, b.last
  44ccb8:	b.hi	44ccd8 <ferror@plt+0x49708>  // b.pmore
  44ccbc:	ldr	x0, [x0, #16]
  44ccc0:	ldr	x1, [x1, #16]
  44ccc4:	ldr	x0, [x0]
  44ccc8:	ldr	x1, [x1]
  44cccc:	b	403220 <strcmp@plt>
  44ccd0:	mov	w0, #0x1                   	// #1
  44ccd4:	ret
  44ccd8:	mov	w0, #0xffffffff            	// #-1
  44ccdc:	b	44ccd4 <ferror@plt+0x49704>
  44cce0:	sub	sp, sp, #0xd0
  44cce4:	stp	x29, x30, [sp, #16]
  44cce8:	add	x29, sp, #0x10
  44ccec:	stp	x21, x22, [sp, #48]
  44ccf0:	mov	x21, x0
  44ccf4:	ldr	x0, [x1, #16]
  44ccf8:	stp	x19, x20, [sp, #32]
  44ccfc:	stp	x23, x24, [sp, #64]
  44cd00:	cmp	x0, x2
  44cd04:	mov	x23, x3
  44cd08:	stp	x25, x26, [sp, #80]
  44cd0c:	mov	x24, x4
  44cd10:	stp	x27, x28, [sp, #96]
  44cd14:	b.hi	44cd2c <ferror@plt+0x4975c>  // b.pmore
  44cd18:	ldr	x4, [x1, #8]
  44cd1c:	sub	x5, x2, x0
  44cd20:	mov	x20, x1
  44cd24:	cmp	x5, x4
  44cd28:	b.cc	44cd48 <ferror@plt+0x49778>  // b.lo, b.ul, b.last
  44cd2c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44cd30:	mov	x0, x24
  44cd34:	add	x1, x1, #0x110
  44cd38:	mov	w2, #0x0                   	// #0
  44cd3c:	blr	x23
  44cd40:	mov	x19, #0x0                   	// #0
  44cd44:	b	44ce5c <ferror@plt+0x4988c>
  44cd48:	ldr	x1, [x21, #56]
  44cd4c:	adrp	x3, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44cd50:	add	x3, x3, #0x658
  44cd54:	stp	x3, x1, [sp, #144]
  44cd58:	add	x0, x0, x4
  44cd5c:	ldr	x1, [x20]
  44cd60:	sub	x0, x0, x2
  44cd64:	add	x26, sp, #0x90
  44cd68:	str	x0, [sp, #168]
  44cd6c:	add	x1, x1, x5
  44cd70:	ldr	w0, [x21, #120]
  44cd74:	str	x1, [sp, #160]
  44cd78:	str	w0, [sp, #176]
  44cd7c:	mov	x0, x26
  44cd80:	stp	x23, x24, [sp, #184]
  44cd84:	str	wzr, [sp, #200]
  44cd88:	bl	44c3b8 <ferror@plt+0x48de8>
  44cd8c:	mov	x1, x0
  44cd90:	cbnz	x0, 44cda8 <ferror@plt+0x497d8>
  44cd94:	mov	x0, x26
  44cd98:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44cd9c:	add	x1, x1, #0x13e
  44cda0:	bl	44bdd4 <ferror@plt+0x48804>
  44cda4:	b	44cd40 <ferror@plt+0x49770>
  44cda8:	mov	x3, x24
  44cdac:	mov	x2, x23
  44cdb0:	add	x0, x20, #0x58
  44cdb4:	bl	44bfa0 <ferror@plt+0x489d0>
  44cdb8:	mov	x22, x0
  44cdbc:	cbz	x0, 44cd40 <ferror@plt+0x49770>
  44cdc0:	add	x27, sp, #0x80
  44cdc4:	mov	x25, #0x0                   	// #0
  44cdc8:	mov	x19, #0x0                   	// #0
  44cdcc:	mov	w28, #0x2007                	// #8199
  44cdd0:	ldr	x0, [x22, #16]
  44cdd4:	cmp	x0, x25
  44cdd8:	b.ls	44ce5c <ferror@plt+0x4988c>  // b.plast
  44cddc:	ldr	x0, [x22, #24]
  44cde0:	lsl	x8, x25, #3
  44cde4:	ldr	x7, [x21, #8]
  44cde8:	mov	x1, x26
  44cdec:	add	x0, x0, x25, lsl #3
  44cdf0:	str	x8, [sp, #120]
  44cdf4:	ldp	x5, x6, [x21, #104]
  44cdf8:	str	x27, [sp]
  44cdfc:	ldr	w0, [x0, #4]
  44ce00:	ldp	w3, w2, [x20, #40]
  44ce04:	ldr	w4, [x20, #48]
  44ce08:	bl	44c53c <ferror@plt+0x48f6c>
  44ce0c:	cbz	w0, 44cd40 <ferror@plt+0x49770>
  44ce10:	ldr	x0, [x22, #24]
  44ce14:	ldr	x8, [sp, #120]
  44ce18:	add	x1, x0, x8
  44ce1c:	ldr	w0, [x0, x8]
  44ce20:	cmp	w0, #0x47
  44ce24:	b.eq	44ce98 <ferror@plt+0x498c8>  // b.none
  44ce28:	b.hi	44ce3c <ferror@plt+0x4986c>  // b.pmore
  44ce2c:	cmp	w0, #0x3
  44ce30:	b.eq	44ce80 <ferror@plt+0x498b0>  // b.none
  44ce34:	add	x25, x25, #0x1
  44ce38:	b	44cdd0 <ferror@plt+0x49800>
  44ce3c:	cmp	w0, #0x6e
  44ce40:	b.eq	44ce4c <ferror@plt+0x4987c>  // b.none
  44ce44:	cmp	w0, w28
  44ce48:	b.ne	44ce34 <ferror@plt+0x49864>  // b.any
  44ce4c:	ldr	w0, [sp, #128]
  44ce50:	cmp	w0, #0x4
  44ce54:	b.ne	44ce34 <ferror@plt+0x49864>  // b.any
  44ce58:	ldr	x19, [sp, #136]
  44ce5c:	mov	x0, x19
  44ce60:	ldp	x29, x30, [sp, #16]
  44ce64:	ldp	x19, x20, [sp, #32]
  44ce68:	ldp	x21, x22, [sp, #48]
  44ce6c:	ldp	x23, x24, [sp, #64]
  44ce70:	ldp	x25, x26, [sp, #80]
  44ce74:	ldp	x27, x28, [sp, #96]
  44ce78:	add	sp, sp, #0xd0
  44ce7c:	ret
  44ce80:	cbnz	x19, 44ce34 <ferror@plt+0x49864>
  44ce84:	ldr	w0, [sp, #128]
  44ce88:	cmp	w0, #0x4
  44ce8c:	b.ne	44ce34 <ferror@plt+0x49864>  // b.any
  44ce90:	ldr	x19, [sp, #136]
  44ce94:	b	44ce34 <ferror@plt+0x49864>
  44ce98:	ldr	w0, [x1, #4]
  44ce9c:	cmp	w0, #0x20
  44cea0:	b.eq	44ce34 <ferror@plt+0x49864>  // b.none
  44cea4:	mov	x4, x24
  44cea8:	mov	x3, x23
  44ceac:	mov	x2, x27
  44ceb0:	mov	x1, x20
  44ceb4:	mov	x0, x21
  44ceb8:	bl	44cec8 <ferror@plt+0x498f8>
  44cebc:	cmp	x0, #0x0
  44cec0:	csel	x19, x19, x0, eq  // eq = none
  44cec4:	b	44ce34 <ferror@plt+0x49864>
  44cec8:	stp	x29, x30, [sp, #-64]!
  44cecc:	mov	x29, sp
  44ced0:	stp	x19, x20, [sp, #16]
  44ced4:	mov	x19, x2
  44ced8:	ldr	w2, [x2]
  44cedc:	stp	x21, x22, [sp, #32]
  44cee0:	mov	x20, x0
  44cee4:	mov	x21, x3
  44cee8:	mov	x22, x4
  44ceec:	cmp	w2, #0x6
  44cef0:	b.ne	44cf54 <ferror@plt+0x49984>  // b.any
  44cef4:	ldp	x1, x2, [x20, #40]
  44cef8:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44cefc:	ldr	x0, [x19, #8]
  44cf00:	add	x4, x4, #0xb48
  44cf04:	mov	x3, #0x8                   	// #8
  44cf08:	str	x0, [sp, #56]
  44cf0c:	add	x0, sp, #0x38
  44cf10:	bl	403060 <bsearch@plt>
  44cf14:	cbz	x0, 44cf24 <ferror@plt+0x49954>
  44cf18:	ldr	x1, [x0]
  44cf1c:	cbnz	x1, 44cf34 <ferror@plt+0x49964>
  44cf20:	mov	x0, #0x0                   	// #0
  44cf24:	ldp	x19, x20, [sp, #16]
  44cf28:	ldp	x21, x22, [sp, #32]
  44cf2c:	ldp	x29, x30, [sp], #64
  44cf30:	ret
  44cf34:	ldr	x2, [x19, #8]
  44cf38:	mov	x4, x22
  44cf3c:	ldr	x0, [x1, #24]
  44cf40:	mov	x3, x21
  44cf44:	sub	x2, x2, x0
  44cf48:	mov	x0, x20
  44cf4c:	bl	44cce0 <ferror@plt+0x49710>
  44cf50:	b	44cf24 <ferror@plt+0x49954>
  44cf54:	cmp	w2, #0x2
  44cf58:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  44cf5c:	b.ne	44cf68 <ferror@plt+0x49998>  // b.any
  44cf60:	ldr	x2, [x19, #8]
  44cf64:	b	44cf4c <ferror@plt+0x4997c>
  44cf68:	cmp	w2, #0x7
  44cf6c:	b.ne	44cf20 <ferror@plt+0x49950>  // b.any
  44cf70:	ldr	x0, [x0, #8]
  44cf74:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44cf78:	mov	x3, #0x8                   	// #8
  44cf7c:	add	x4, x4, #0xb48
  44cf80:	ldp	x1, x2, [x0, #40]
  44cf84:	ldr	x0, [x19, #8]
  44cf88:	str	x0, [sp, #56]
  44cf8c:	add	x0, sp, #0x38
  44cf90:	bl	403060 <bsearch@plt>
  44cf94:	cbz	x0, 44cf24 <ferror@plt+0x49954>
  44cf98:	ldr	x1, [x0]
  44cf9c:	cbz	x1, 44cf20 <ferror@plt+0x49950>
  44cfa0:	ldr	x2, [x19, #8]
  44cfa4:	mov	x4, x22
  44cfa8:	ldr	x0, [x1, #24]
  44cfac:	mov	x3, x21
  44cfb0:	sub	x2, x2, x0
  44cfb4:	ldr	x0, [x20, #8]
  44cfb8:	b	44cf4c <ferror@plt+0x4997c>
  44cfbc:	sub	sp, sp, #0x120
  44cfc0:	stp	x29, x30, [sp, #16]
  44cfc4:	add	x29, sp, #0x10
  44cfc8:	stp	x19, x20, [sp, #32]
  44cfcc:	mov	x19, x6
  44cfd0:	mov	x20, x7
  44cfd4:	stp	x21, x22, [sp, #48]
  44cfd8:	mov	x21, x1
  44cfdc:	mov	x22, x2
  44cfe0:	stp	x25, x26, [sp, #80]
  44cfe4:	mov	x25, x4
  44cfe8:	add	x26, sp, #0xe0
  44cfec:	stp	x23, x24, [sp, #64]
  44cff0:	mov	x24, x0
  44cff4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  44cff8:	add	x0, x0, #0x122
  44cffc:	stp	x27, x28, [sp, #96]
  44d000:	stp	x3, x5, [sp, #128]
  44d004:	str	x0, [sp, #160]
  44d008:	ldr	x0, [x25, #24]
  44d00c:	cbz	x0, 44d020 <ferror@plt+0x49a50>
  44d010:	mov	x0, x25
  44d014:	bl	44c3b8 <ferror@plt+0x48de8>
  44d018:	mov	x1, x0
  44d01c:	cbnz	x0, 44d044 <ferror@plt+0x49a74>
  44d020:	mov	w0, #0x1                   	// #1
  44d024:	ldp	x29, x30, [sp, #16]
  44d028:	ldp	x19, x20, [sp, #32]
  44d02c:	ldp	x21, x22, [sp, #48]
  44d030:	ldp	x23, x24, [sp, #64]
  44d034:	ldp	x25, x26, [sp, #80]
  44d038:	ldp	x27, x28, [sp, #96]
  44d03c:	add	sp, sp, #0x120
  44d040:	ret
  44d044:	mov	x3, x20
  44d048:	mov	x2, x19
  44d04c:	add	x0, x22, #0x58
  44d050:	bl	44bfa0 <ferror@plt+0x489d0>
  44d054:	mov	x23, x0
  44d058:	cbnz	x0, 44d064 <ferror@plt+0x49a94>
  44d05c:	mov	w0, #0x0                   	// #0
  44d060:	b	44d024 <ferror@plt+0x49a54>
  44d064:	ldr	w0, [x0, #8]
  44d068:	cmp	w0, #0x2e
  44d06c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  44d070:	b.eq	44d590 <ferror@plt+0x49fc0>  // b.none
  44d074:	cmp	w0, #0x1d
  44d078:	b.ne	44d148 <ferror@plt+0x49b78>  // b.any
  44d07c:	ldr	x0, [sp, #296]
  44d080:	mov	x3, x20
  44d084:	mov	x2, x19
  44d088:	mov	x1, #0x28                  	// #40
  44d08c:	str	x0, [sp, #120]
  44d090:	mov	x0, x24
  44d094:	bl	4487bc <ferror@plt+0x451ec>
  44d098:	mov	x27, x0
  44d09c:	cbz	x0, 44d05c <ferror@plt+0x49a8c>
  44d0a0:	mov	w28, #0x1                   	// #1
  44d0a4:	stp	xzr, xzr, [x0]
  44d0a8:	stp	xzr, xzr, [x0, #16]
  44d0ac:	str	xzr, [x0, #32]
  44d0b0:	mov	w10, #0x0                   	// #0
  44d0b4:	mov	x14, #0x0                   	// #0
  44d0b8:	mov	w13, #0x0                   	// #0
  44d0bc:	mov	x12, #0x0                   	// #0
  44d0c0:	mov	x15, #0x0                   	// #0
  44d0c4:	mov	x11, #0x0                   	// #0
  44d0c8:	stp	wzr, wzr, [sp, #148]
  44d0cc:	str	wzr, [sp, #216]
  44d0d0:	ldr	x0, [x23, #16]
  44d0d4:	cmp	x0, x11
  44d0d8:	b.hi	44d15c <ferror@plt+0x49b8c>  // b.pmore
  44d0dc:	cbz	w28, 44d104 <ferror@plt+0x49b34>
  44d0e0:	ldr	x0, [x27]
  44d0e4:	cbnz	x0, 44d3c4 <ferror@plt+0x49df4>
  44d0e8:	mov	w28, #0x0                   	// #0
  44d0ec:	mov	x4, x20
  44d0f0:	mov	x3, x19
  44d0f4:	mov	x1, x27
  44d0f8:	mov	x0, x24
  44d0fc:	mov	x2, #0x28                  	// #40
  44d100:	bl	448700 <ferror@plt+0x45130>
  44d104:	ldr	w0, [x23, #12]
  44d108:	cbz	w0, 44d008 <ferror@plt+0x49a38>
  44d10c:	cbnz	w28, 44d514 <ferror@plt+0x49f44>
  44d110:	ldp	x3, x5, [sp, #128]
  44d114:	mov	x7, x20
  44d118:	ldr	x0, [sp, #296]
  44d11c:	str	x0, [sp, #8]
  44d120:	ldr	x0, [sp, #288]
  44d124:	str	x0, [sp]
  44d128:	mov	x6, x19
  44d12c:	mov	x4, x25
  44d130:	mov	x2, x22
  44d134:	mov	x1, x21
  44d138:	mov	x0, x24
  44d13c:	bl	44cfbc <ferror@plt+0x499ec>
  44d140:	cbnz	w0, 44d008 <ferror@plt+0x49a38>
  44d144:	b	44d05c <ferror@plt+0x49a8c>
  44d148:	ldr	x0, [sp, #288]
  44d14c:	mov	w28, #0x0                   	// #0
  44d150:	mov	x27, #0x0                   	// #0
  44d154:	str	x0, [sp, #120]
  44d158:	b	44d0b0 <ferror@plt+0x49ae0>
  44d15c:	ldr	x0, [x23, #24]
  44d160:	lsl	x18, x11, #3
  44d164:	ldp	w3, w2, [x22, #40]
  44d168:	mov	x1, x25
  44d16c:	add	x0, x0, x11, lsl #3
  44d170:	ldr	w4, [x22, #48]
  44d174:	ldr	x7, [x21, #8]
  44d178:	stp	x11, x18, [sp, #168]
  44d17c:	ldp	x5, x6, [x21, #104]
  44d180:	str	x26, [sp]
  44d184:	stp	x15, x12, [sp, #184]
  44d188:	ldr	w0, [x0, #4]
  44d18c:	str	w13, [sp, #200]
  44d190:	str	x14, [sp, #208]
  44d194:	str	w10, [sp, #220]
  44d198:	bl	44c53c <ferror@plt+0x48f6c>
  44d19c:	cbz	w0, 44d05c <ferror@plt+0x49a8c>
  44d1a0:	ldr	w0, [x23, #8]
  44d1a4:	ldr	w13, [sp, #200]
  44d1a8:	ldr	w10, [sp, #220]
  44d1ac:	cmp	w0, #0x11
  44d1b0:	ldp	x11, x18, [sp, #168]
  44d1b4:	ldp	x15, x12, [sp, #184]
  44d1b8:	ldr	x14, [sp, #208]
  44d1bc:	b.ne	44d1e4 <ferror@plt+0x49c14>  // b.any
  44d1c0:	ldr	x0, [x23, #24]
  44d1c4:	ldr	w0, [x0, x18]
  44d1c8:	cmp	w0, #0x11
  44d1cc:	b.ne	44d1e4 <ferror@plt+0x49c14>  // b.any
  44d1d0:	ldr	w0, [sp, #224]
  44d1d4:	cmp	w0, #0x1
  44d1d8:	b.ne	44d1e4 <ferror@plt+0x49c14>  // b.any
  44d1dc:	ldr	x0, [sp, #232]
  44d1e0:	str	x0, [sp, #128]
  44d1e4:	cbz	w28, 44d21c <ferror@plt+0x49c4c>
  44d1e8:	ldr	x0, [x23, #24]
  44d1ec:	add	x1, x0, x18
  44d1f0:	ldr	w0, [x0, x18]
  44d1f4:	cmp	w0, #0x55
  44d1f8:	b.eq	44d3a8 <ferror@plt+0x49dd8>  // b.none
  44d1fc:	b.hi	44d28c <ferror@plt+0x49cbc>  // b.pmore
  44d200:	cmp	w0, #0x12
  44d204:	b.eq	44d37c <ferror@plt+0x49dac>  // b.none
  44d208:	b.hi	44d224 <ferror@plt+0x49c54>  // b.pmore
  44d20c:	cmp	w0, #0x3
  44d210:	b.eq	44d344 <ferror@plt+0x49d74>  // b.none
  44d214:	cmp	w0, #0x11
  44d218:	b.eq	44d364 <ferror@plt+0x49d94>  // b.none
  44d21c:	add	x11, x11, #0x1
  44d220:	b	44d0d0 <ferror@plt+0x49b00>
  44d224:	cmp	w0, #0x31
  44d228:	b.eq	44d234 <ferror@plt+0x49c64>  // b.none
  44d22c:	cmp	w0, #0x47
  44d230:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d234:	cbnz	w10, 44d21c <ferror@plt+0x49c4c>
  44d238:	ldr	w0, [x1, #4]
  44d23c:	cmp	w0, #0x20
  44d240:	b.eq	44d284 <ferror@plt+0x49cb4>  // b.none
  44d244:	mov	x4, x20
  44d248:	mov	x3, x19
  44d24c:	mov	x2, x26
  44d250:	mov	x1, x22
  44d254:	mov	x0, x21
  44d258:	stp	x11, x15, [sp, #168]
  44d25c:	str	x12, [sp, #184]
  44d260:	str	w13, [sp, #192]
  44d264:	str	x14, [sp, #200]
  44d268:	bl	44cec8 <ferror@plt+0x498f8>
  44d26c:	ldr	w13, [sp, #192]
  44d270:	ldp	x11, x15, [sp, #168]
  44d274:	ldr	x12, [sp, #184]
  44d278:	ldr	x14, [sp, #200]
  44d27c:	cbz	x0, 44d284 <ferror@plt+0x49cb4>
  44d280:	str	x0, [x27]
  44d284:	mov	w10, #0x0                   	// #0
  44d288:	b	44d21c <ferror@plt+0x49c4c>
  44d28c:	cmp	w0, #0x59
  44d290:	b.eq	44d32c <ferror@plt+0x49d5c>  // b.none
  44d294:	b.hi	44d2c0 <ferror@plt+0x49cf0>  // b.pmore
  44d298:	cmp	w0, #0x58
  44d29c:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d2a0:	ldr	w0, [sp, #224]
  44d2a4:	cmp	w0, #0x2
  44d2a8:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d2ac:	ldr	x0, [sp, #232]
  44d2b0:	cbnz	x0, 44d2f0 <ferror@plt+0x49d20>
  44d2b4:	ldr	x0, [sp, #160]
  44d2b8:	str	x0, [x27, #8]
  44d2bc:	b	44d21c <ferror@plt+0x49c4c>
  44d2c0:	cmp	w0, #0x6e
  44d2c4:	b.eq	44d2d4 <ferror@plt+0x49d04>  // b.none
  44d2c8:	mov	w1, #0x2007                	// #8199
  44d2cc:	cmp	w0, w1
  44d2d0:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d2d4:	ldr	w0, [sp, #224]
  44d2d8:	cmp	w0, #0x4
  44d2dc:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d2e0:	ldr	x0, [sp, #232]
  44d2e4:	mov	w10, w28
  44d2e8:	str	x0, [x27]
  44d2ec:	b	44d21c <ferror@plt+0x49c4c>
  44d2f0:	ldr	x2, [sp, #136]
  44d2f4:	sub	x1, x0, #0x1
  44d2f8:	ldr	x2, [x2, #48]
  44d2fc:	cmp	x1, x2
  44d300:	b.cc	44d318 <ferror@plt+0x49d48>  // b.lo, b.ul, b.last
  44d304:	mov	x0, x25
  44d308:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44d30c:	add	x1, x1, #0x167
  44d310:	bl	44bdd4 <ferror@plt+0x48804>
  44d314:	b	44d05c <ferror@plt+0x49a8c>
  44d318:	ldr	x1, [sp, #136]
  44d31c:	ldr	x1, [x1, #56]
  44d320:	add	x0, x1, x0, lsl #3
  44d324:	ldur	x0, [x0, #-8]
  44d328:	b	44d2b8 <ferror@plt+0x49ce8>
  44d32c:	ldr	w0, [sp, #224]
  44d330:	cmp	w0, #0x2
  44d334:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d338:	ldr	x0, [sp, #232]
  44d33c:	str	w0, [x27, #16]
  44d340:	b	44d21c <ferror@plt+0x49c4c>
  44d344:	ldr	x0, [x27]
  44d348:	cbnz	x0, 44d21c <ferror@plt+0x49c4c>
  44d34c:	ldr	w0, [sp, #224]
  44d350:	cmp	w0, #0x4
  44d354:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d358:	ldr	x0, [sp, #232]
  44d35c:	str	x0, [x27]
  44d360:	b	44d21c <ferror@plt+0x49c4c>
  44d364:	ldr	w0, [sp, #224]
  44d368:	cmp	w0, #0x1
  44d36c:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d370:	str	w28, [sp, #152]
  44d374:	ldr	x15, [sp, #232]
  44d378:	b	44d21c <ferror@plt+0x49c4c>
  44d37c:	ldr	w0, [sp, #224]
  44d380:	cmp	w0, #0x1
  44d384:	b.ne	44d394 <ferror@plt+0x49dc4>  // b.any
  44d388:	ldr	x12, [sp, #232]
  44d38c:	mov	w13, w28
  44d390:	b	44d21c <ferror@plt+0x49c4c>
  44d394:	cmp	w0, #0x2
  44d398:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d39c:	str	w28, [sp, #216]
  44d3a0:	ldr	x12, [sp, #232]
  44d3a4:	b	44d38c <ferror@plt+0x49dbc>
  44d3a8:	ldr	w0, [sp, #224]
  44d3ac:	cmp	w0, #0x2
  44d3b0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  44d3b4:	b.ne	44d21c <ferror@plt+0x49c4c>  // b.any
  44d3b8:	str	w28, [sp, #148]
  44d3bc:	ldr	x14, [sp, #232]
  44d3c0:	b	44d21c <ferror@plt+0x49c4c>
  44d3c4:	ldr	w0, [sp, #148]
  44d3c8:	cbz	w0, 44d4b4 <ferror@plt+0x49ee4>
  44d3cc:	ldr	x0, [x21, #96]
  44d3d0:	cmp	x14, x0
  44d3d4:	b.cc	44d3f0 <ferror@plt+0x49e20>  // b.lo, b.ul, b.last
  44d3d8:	mov	x0, x20
  44d3dc:	mov	w2, #0x0                   	// #0
  44d3e0:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44d3e4:	add	x1, x1, #0x198
  44d3e8:	blr	x19
  44d3ec:	b	44d05c <ferror@plt+0x49a8c>
  44d3f0:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44d3f4:	add	x1, x1, #0x67e
  44d3f8:	str	x1, [sp, #224]
  44d3fc:	ldr	x1, [x21, #88]
  44d400:	str	x1, [sp, #232]
  44d404:	ldr	x28, [sp, #128]
  44d408:	add	x1, x1, x14
  44d40c:	sub	x14, x0, x14
  44d410:	ldr	w0, [x21, #120]
  44d414:	stp	x1, x14, [sp, #240]
  44d418:	str	w0, [sp, #256]
  44d41c:	stp	x19, x20, [sp, #264]
  44d420:	str	wzr, [sp, #280]
  44d424:	ldr	w0, [sp, #280]
  44d428:	cbnz	w0, 44d05c <ferror@plt+0x49a8c>
  44d42c:	ldr	w1, [x22, #48]
  44d430:	mov	x0, x26
  44d434:	bl	44c348 <ferror@plt+0x48d78>
  44d438:	mov	x3, x0
  44d43c:	ldr	w1, [x22, #48]
  44d440:	mov	x0, x26
  44d444:	str	x3, [sp, #152]
  44d448:	bl	44c348 <ferror@plt+0x48d78>
  44d44c:	mov	x4, x0
  44d450:	ldr	x3, [sp, #152]
  44d454:	orr	x0, x3, x0
  44d458:	cbz	x0, 44d4a4 <ferror@plt+0x49ed4>
  44d45c:	ldr	w1, [x22, #48]
  44d460:	mov	x0, x3
  44d464:	bl	44baf4 <ferror@plt+0x48524>
  44d468:	ldr	x3, [sp, #152]
  44d46c:	cbnz	w0, 44d49c <ferror@plt+0x49ecc>
  44d470:	ldr	x1, [x21, #16]
  44d474:	mov	x6, x20
  44d478:	ldr	x7, [sp, #120]
  44d47c:	mov	x5, x19
  44d480:	add	x4, x4, x28
  44d484:	add	x3, x3, x28
  44d488:	mov	x2, x27
  44d48c:	mov	x0, x24
  44d490:	bl	44c0f8 <ferror@plt+0x48b28>
  44d494:	cbnz	w0, 44d424 <ferror@plt+0x49e54>
  44d498:	b	44d05c <ferror@plt+0x49a8c>
  44d49c:	mov	x28, x4
  44d4a0:	b	44d424 <ferror@plt+0x49e54>
  44d4a4:	ldr	w0, [sp, #280]
  44d4a8:	cbnz	w0, 44d05c <ferror@plt+0x49a8c>
  44d4ac:	ldr	w28, [sp, #148]
  44d4b0:	b	44d104 <ferror@plt+0x49b34>
  44d4b4:	ldr	w0, [sp, #152]
  44d4b8:	ands	w28, w0, w13
  44d4bc:	b.eq	44d4f8 <ferror@plt+0x49f28>  // b.none
  44d4c0:	ldr	w0, [sp, #216]
  44d4c4:	cbz	w0, 44d4cc <ferror@plt+0x49efc>
  44d4c8:	add	x12, x12, x15
  44d4cc:	ldr	x1, [x21, #16]
  44d4d0:	mov	x6, x20
  44d4d4:	ldr	x7, [sp, #120]
  44d4d8:	mov	x5, x19
  44d4dc:	mov	x4, x12
  44d4e0:	mov	x3, x15
  44d4e4:	mov	x2, x27
  44d4e8:	mov	x0, x24
  44d4ec:	bl	44c0f8 <ferror@plt+0x48b28>
  44d4f0:	cbnz	w0, 44d104 <ferror@plt+0x49b34>
  44d4f4:	b	44d05c <ferror@plt+0x49a8c>
  44d4f8:	mov	x4, x20
  44d4fc:	mov	x3, x19
  44d500:	mov	x1, x27
  44d504:	mov	x0, x24
  44d508:	mov	x2, #0x28                  	// #40
  44d50c:	bl	448700 <ferror@plt+0x45130>
  44d510:	b	44d104 <ferror@plt+0x49b34>
  44d514:	ldp	x3, x5, [sp, #128]
  44d518:	stp	xzr, xzr, [x26]
  44d51c:	mov	x7, x20
  44d520:	stp	xzr, xzr, [x26, #16]
  44d524:	mov	x6, x19
  44d528:	mov	x4, x25
  44d52c:	ldr	x0, [sp, #288]
  44d530:	stp	x0, x26, [sp]
  44d534:	mov	x2, x22
  44d538:	mov	x1, x21
  44d53c:	mov	x0, x24
  44d540:	bl	44cfbc <ferror@plt+0x499ec>
  44d544:	cbz	w0, 44d05c <ferror@plt+0x49a8c>
  44d548:	ldr	x0, [sp, #248]
  44d54c:	cbz	x0, 44d008 <ferror@plt+0x49a38>
  44d550:	mov	x3, x20
  44d554:	mov	x2, x19
  44d558:	mov	x1, x26
  44d55c:	mov	x0, x24
  44d560:	bl	448a38 <ferror@plt+0x45468>
  44d564:	cbz	w0, 44d05c <ferror@plt+0x49a8c>
  44d568:	ldr	x1, [sp, #248]
  44d56c:	adrp	x3, 44c000 <ferror@plt+0x48a30>
  44d570:	ldr	x23, [sp, #224]
  44d574:	add	x3, x3, #0xc94
  44d578:	mov	x2, #0x18                  	// #24
  44d57c:	mov	x0, x23
  44d580:	bl	44eae8 <ferror@plt+0x4b518>
  44d584:	ldr	x0, [sp, #248]
  44d588:	stp	x23, x0, [x27, #24]
  44d58c:	b	44d008 <ferror@plt+0x49a38>
  44d590:	cmp	w0, #0x1d
  44d594:	ldp	x1, x0, [sp, #288]
  44d598:	csel	x0, x0, x1, eq  // eq = none
  44d59c:	b	44d080 <ferror@plt+0x49ab0>
  44d5a0:	sub	sp, sp, #0x1d0
  44d5a4:	stp	x29, x30, [sp, #16]
  44d5a8:	add	x29, sp, #0x10
  44d5ac:	str	x2, [sp, #232]
  44d5b0:	ldr	x2, [x1, #32]
  44d5b4:	stp	x19, x20, [sp, #32]
  44d5b8:	stp	x21, x22, [sp, #48]
  44d5bc:	mov	x21, x0
  44d5c0:	mov	w0, #0x1                   	// #1
  44d5c4:	stp	x23, x24, [sp, #64]
  44d5c8:	mov	x23, x1
  44d5cc:	stp	x25, x26, [sp, #80]
  44d5d0:	stp	x27, x28, [sp, #96]
  44d5d4:	str	w0, [x6]
  44d5d8:	str	x3, [sp, #144]
  44d5dc:	str	x6, [sp, #168]
  44d5e0:	cbz	x2, 44d770 <ferror@plt+0x4a1a0>
  44d5e4:	ldr	x1, [x1, #24]
  44d5e8:	add	x0, sp, #0xe8
  44d5ec:	mov	x24, x4
  44d5f0:	mov	x22, x5
  44d5f4:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44d5f8:	mov	x3, #0x18                  	// #24
  44d5fc:	add	x4, x4, #0xb9c
  44d600:	str	x0, [sp, #176]
  44d604:	bl	403060 <bsearch@plt>
  44d608:	mov	x20, x0
  44d60c:	cbz	x0, 44d770 <ferror@plt+0x4a1a0>
  44d610:	ldp	x2, x3, [x23, #24]
  44d614:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44d618:	ldr	x1, [sp, #232]
  44d61c:	movk	x4, #0xaaab
  44d620:	sub	x0, x20, x2
  44d624:	asr	x0, x0, #3
  44d628:	mul	x0, x0, x4
  44d62c:	add	x0, x0, #0x1
  44d630:	cmp	x0, x3
  44d634:	b.cs	44d650 <ferror@plt+0x4a080>  // b.hs, b.nlast
  44d638:	ldr	x0, [x20, #24]
  44d63c:	cmp	x0, x1
  44d640:	b.hi	44d650 <ferror@plt+0x4a080>  // b.pmore
  44d644:	ldr	x0, [x20, #32]
  44d648:	cmp	x1, x0
  44d64c:	b.cc	44d79c <ferror@plt+0x4a1cc>  // b.lo, b.ul, b.last
  44d650:	ldr	x0, [x20, #16]
  44d654:	ldr	w3, [x21, #8]
  44d658:	ldr	x1, [x0, #104]
  44d65c:	str	x0, [sp, #120]
  44d660:	ldr	x0, [x23, #24]
  44d664:	cmp	x0, x20
  44d668:	b.cs	44d688 <ferror@plt+0x4a0b8>  // b.hs, b.nlast
  44d66c:	ldur	x2, [x20, #-24]
  44d670:	ldr	x0, [sp, #232]
  44d674:	cmp	x2, x0
  44d678:	b.hi	44d688 <ferror@plt+0x4a0b8>  // b.pmore
  44d67c:	ldur	x2, [x20, #-16]
  44d680:	cmp	x0, x2
  44d684:	b.cc	44d7a4 <ferror@plt+0x4a1d4>  // b.lo, b.ul, b.last
  44d688:	ldr	w0, [x21, #8]
  44d68c:	cbz	w0, 44d69c <ferror@plt+0x4a0cc>
  44d690:	ldr	x0, [sp, #120]
  44d694:	add	x0, x0, #0x68
  44d698:	ldar	x1, [x0]
  44d69c:	cbnz	x1, 44e2a4 <ferror@plt+0x4acd4>
  44d6a0:	ldr	x0, [x20, #16]
  44d6a4:	stp	xzr, xzr, [sp, #272]
  44d6a8:	stp	xzr, xzr, [sp, #288]
  44d6ac:	stp	xzr, xzr, [sp, #304]
  44d6b0:	stp	xzr, xzr, [sp, #320]
  44d6b4:	str	x0, [sp, #152]
  44d6b8:	ldr	x2, [x0, #56]
  44d6bc:	stp	xzr, xzr, [sp, #240]
  44d6c0:	ldr	x0, [x23, #80]
  44d6c4:	stp	xzr, xzr, [sp, #256]
  44d6c8:	cmp	x2, x0
  44d6cc:	b.cc	44d7c4 <ferror@plt+0x4a1f4>  // b.lo, b.ul, b.last
  44d6d0:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44d6d4:	mov	x0, x22
  44d6d8:	add	x1, x1, #0x1bc
  44d6dc:	mov	w2, #0x0                   	// #0
  44d6e0:	blr	x24
  44d6e4:	ldp	x1, x0, [sp, #248]
  44d6e8:	mov	x3, x22
  44d6ec:	mov	x2, x24
  44d6f0:	mov	x19, #0x0                   	// #0
  44d6f4:	mov	x26, #0x0                   	// #0
  44d6f8:	mov	x25, #0x0                   	// #0
  44d6fc:	add	x0, x0, x1
  44d700:	add	x1, sp, #0xf0
  44d704:	stp	xzr, x0, [sp, #248]
  44d708:	mov	x0, x21
  44d70c:	bl	448a38 <ferror@plt+0x45468>
  44d710:	add	x1, sp, #0x110
  44d714:	mov	x0, x21
  44d718:	mov	x3, x22
  44d71c:	mov	x2, x24
  44d720:	bl	44be28 <ferror@plt+0x48858>
  44d724:	mov	x1, #0xffffffffffffffff    	// #-1
  44d728:	mov	w0, #0x0                   	// #0
  44d72c:	ldr	w2, [x21, #8]
  44d730:	cbnz	w2, 44e0e0 <ferror@plt+0x4ab10>
  44d734:	ldr	x2, [sp, #120]
  44d738:	stp	x1, x26, [x2, #104]
  44d73c:	stp	x19, x25, [x2, #120]
  44d740:	cmn	x1, #0x1
  44d744:	b.ne	44e114 <ferror@plt+0x4ab44>  // b.any
  44d748:	cbz	w0, 44e2ac <ferror@plt+0x4acdc>
  44d74c:	ldr	x3, [sp, #144]
  44d750:	mov	x5, x22
  44d754:	ldr	x6, [sp, #168]
  44d758:	mov	x4, x24
  44d75c:	ldr	x2, [sp, #232]
  44d760:	mov	x1, x23
  44d764:	mov	x0, x21
  44d768:	bl	44d5a0 <ferror@plt+0x49fd0>
  44d76c:	b	44d77c <ferror@plt+0x4a1ac>
  44d770:	ldr	x0, [sp, #168]
  44d774:	str	wzr, [x0]
  44d778:	mov	w0, #0x0                   	// #0
  44d77c:	ldp	x29, x30, [sp, #16]
  44d780:	ldp	x19, x20, [sp, #32]
  44d784:	ldp	x21, x22, [sp, #48]
  44d788:	ldp	x23, x24, [sp, #64]
  44d78c:	ldp	x25, x26, [sp, #80]
  44d790:	ldp	x27, x28, [sp, #96]
  44d794:	add	sp, sp, #0x1d0
  44d798:	ret
  44d79c:	add	x20, x20, #0x18
  44d7a0:	b	44d620 <ferror@plt+0x4a050>
  44d7a4:	cbz	w3, 44d7b4 <ferror@plt+0x4a1e4>
  44d7a8:	ldr	x0, [sp, #120]
  44d7ac:	add	x0, x0, #0x68
  44d7b0:	ldar	x1, [x0]
  44d7b4:	cmn	x1, #0x1
  44d7b8:	b.ne	44d688 <ferror@plt+0x4a0b8>  // b.any
  44d7bc:	sub	x20, x20, #0x18
  44d7c0:	b	44d650 <ferror@plt+0x4a080>
  44d7c4:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44d7c8:	add	x1, x1, #0x664
  44d7cc:	str	x1, [sp, #336]
  44d7d0:	sub	x0, x0, x2
  44d7d4:	ldr	x1, [x23, #72]
  44d7d8:	str	x1, [sp, #344]
  44d7dc:	add	x19, sp, #0x150
  44d7e0:	str	x0, [sp, #360]
  44d7e4:	add	x1, x1, x2
  44d7e8:	ldr	w0, [x23, #120]
  44d7ec:	str	x1, [sp, #352]
  44d7f0:	str	w0, [sp, #368]
  44d7f4:	mov	x0, x19
  44d7f8:	stp	x24, x22, [sp, #376]
  44d7fc:	str	wzr, [sp, #392]
  44d800:	bl	44c21c <ferror@plt+0x48c4c>
  44d804:	mov	x1, #0xffffffff            	// #4294967295
  44d808:	mov	w2, w0
  44d80c:	cmp	x1, w0, uxtw
  44d810:	b.ne	44d858 <ferror@plt+0x4a288>  // b.any
  44d814:	mov	x0, x19
  44d818:	bl	44c260 <ferror@plt+0x48c90>
  44d81c:	mov	x2, x0
  44d820:	mov	w25, #0x1                   	// #1
  44d824:	mov	x0, x19
  44d828:	str	x2, [sp, #360]
  44d82c:	bl	44c2c4 <ferror@plt+0x48cf4>
  44d830:	and	w0, w0, #0xffff
  44d834:	str	w0, [sp, #272]
  44d838:	sub	w0, w0, #0x2
  44d83c:	cmp	w0, #0x2
  44d840:	b.ls	44d860 <ferror@plt+0x4a290>  // b.plast
  44d844:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44d848:	add	x1, x1, #0x1da
  44d84c:	mov	x0, x19
  44d850:	bl	44bdd4 <ferror@plt+0x48804>
  44d854:	b	44d6e4 <ferror@plt+0x4a114>
  44d858:	mov	w25, #0x0                   	// #0
  44d85c:	b	44d824 <ferror@plt+0x4a254>
  44d860:	mov	w1, w25
  44d864:	mov	x0, x19
  44d868:	bl	44c2a4 <ferror@plt+0x48cd4>
  44d86c:	add	x25, sp, #0x190
  44d870:	ldp	x2, x3, [sp, #336]
  44d874:	stp	x2, x3, [sp, #400]
  44d878:	mov	x1, x0
  44d87c:	ldp	x2, x3, [sp, #352]
  44d880:	stp	x2, x3, [sp, #416]
  44d884:	mov	x0, x19
  44d888:	ldp	x2, x3, [sp, #368]
  44d88c:	stp	x2, x3, [sp, #432]
  44d890:	ldp	x2, x3, [sp, #384]
  44d894:	str	x1, [sp, #424]
  44d898:	stp	x2, x3, [sp, #448]
  44d89c:	bl	44c1b4 <ferror@plt+0x48be4>
  44d8a0:	cbz	w0, 44d6e4 <ferror@plt+0x4a114>
  44d8a4:	mov	x0, x25
  44d8a8:	bl	44c314 <ferror@plt+0x48d44>
  44d8ac:	and	w0, w0, #0xff
  44d8b0:	str	w0, [sp, #276]
  44d8b4:	ldr	w0, [sp, #272]
  44d8b8:	cmp	w0, #0x3
  44d8bc:	b.gt	44daa4 <ferror@plt+0x4a4d4>
  44d8c0:	mov	w0, #0x1                   	// #1
  44d8c4:	str	w0, [sp, #280]
  44d8c8:	mov	x0, x25
  44d8cc:	bl	44c314 <ferror@plt+0x48d44>
  44d8d0:	mov	x0, x25
  44d8d4:	mov	x1, #0x1                   	// #1
  44d8d8:	ldr	x26, [sp, #416]
  44d8dc:	bl	44c1b4 <ferror@plt+0x48be4>
  44d8e0:	cbz	w0, 44dab4 <ferror@plt+0x4a4e4>
  44d8e4:	ldrb	w0, [x26]
  44d8e8:	eor	w0, w0, #0xffffff80
  44d8ec:	sub	w0, w0, #0x80
  44d8f0:	sxtb	w0, w0
  44d8f4:	str	w0, [sp, #284]
  44d8f8:	mov	x0, x25
  44d8fc:	bl	44c314 <ferror@plt+0x48d44>
  44d900:	and	w0, w0, #0xff
  44d904:	str	w0, [sp, #288]
  44d908:	mov	x0, x25
  44d90c:	bl	44c314 <ferror@plt+0x48d44>
  44d910:	and	w1, w0, #0xff
  44d914:	ldr	x0, [sp, #416]
  44d918:	str	w1, [sp, #292]
  44d91c:	sub	w1, w1, #0x1
  44d920:	str	x0, [sp, #296]
  44d924:	mov	x0, x25
  44d928:	bl	44c1b4 <ferror@plt+0x48be4>
  44d92c:	cbz	w0, 44d6e4 <ferror@plt+0x4a114>
  44d930:	ldp	x26, x28, [sp, #416]
  44d934:	str	xzr, [sp, #304]
  44d938:	add	x28, x26, x28
  44d93c:	cmp	x28, x26
  44d940:	ldr	x27, [sp, #304]
  44d944:	b.ls	44d950 <ferror@plt+0x4a380>  // b.plast
  44d948:	ldrb	w0, [x26]
  44d94c:	cbnz	w0, 44dabc <ferror@plt+0x4a4ec>
  44d950:	str	xzr, [sp, #312]
  44d954:	cbnz	x27, 44dadc <ferror@plt+0x4a50c>
  44d958:	mov	x26, #0x0                   	// #0
  44d95c:	ldr	x0, [sp, #416]
  44d960:	ldrb	w0, [x0]
  44d964:	cbnz	w0, 44daf8 <ferror@plt+0x4a528>
  44d968:	mov	x0, x25
  44d96c:	mov	x1, #0x1                   	// #1
  44d970:	bl	44c1b4 <ferror@plt+0x48be4>
  44d974:	cbz	w0, 44d6e4 <ferror@plt+0x4a114>
  44d978:	ldp	x26, x27, [sp, #416]
  44d97c:	str	xzr, [sp, #320]
  44d980:	add	x27, x26, x27
  44d984:	cmp	x27, x26
  44d988:	b.ls	44d994 <ferror@plt+0x4a3c4>  // b.plast
  44d98c:	ldrb	w0, [x26]
  44d990:	cbnz	w0, 44db24 <ferror@plt+0x4a554>
  44d994:	ldp	x2, x3, [sp, #376]
  44d998:	mov	x0, x21
  44d99c:	ldr	x1, [sp, #320]
  44d9a0:	lsl	x1, x1, #3
  44d9a4:	bl	4487bc <ferror@plt+0x451ec>
  44d9a8:	str	x0, [sp, #328]
  44d9ac:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44d9b0:	mov	x28, #0x0                   	// #0
  44d9b4:	ldr	x1, [sp, #416]
  44d9b8:	ldr	w0, [sp, #456]
  44d9bc:	ldrb	w1, [x1]
  44d9c0:	cbnz	w1, 44db9c <ferror@plt+0x4a5cc>
  44d9c4:	cbnz	w0, 44d6e4 <ferror@plt+0x4a114>
  44d9c8:	ldr	x0, [sp, #320]
  44d9cc:	cbz	x0, 44dc98 <ferror@plt+0x4a6c8>
  44d9d0:	ldr	x0, [sp, #328]
  44d9d4:	ldr	x0, [x0]
  44d9d8:	str	x0, [sp, #160]
  44d9dc:	mov	w0, #0x1                   	// #1
  44d9e0:	str	w0, [sp, #136]
  44d9e4:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44d9e8:	add	x0, x0, #0x30
  44d9ec:	ldr	x27, [sp, #160]
  44d9f0:	str	x0, [sp, #200]
  44d9f4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  44d9f8:	add	x0, x0, #0x122
  44d9fc:	mov	x26, #0x0                   	// #0
  44da00:	str	wzr, [sp, #128]
  44da04:	str	x0, [sp, #208]
  44da08:	add	x0, sp, #0xf0
  44da0c:	str	x0, [sp, #192]
  44da10:	ldr	x0, [sp, #360]
  44da14:	cbnz	x0, 44dca4 <ferror@plt+0x4a6d4>
  44da18:	ldr	w0, [sp, #392]
  44da1c:	cbnz	w0, 44d6e4 <ferror@plt+0x4a114>
  44da20:	ldr	x0, [sp, #264]
  44da24:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44da28:	add	x26, sp, #0xf0
  44da2c:	mov	x3, x22
  44da30:	mov	x4, x26
  44da34:	mov	x2, x24
  44da38:	mov	x0, x21
  44da3c:	mov	x1, #0x18                  	// #24
  44da40:	bl	448910 <ferror@plt+0x45340>
  44da44:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44da48:	mov	x1, #0xffffffffffffffff    	// #-1
  44da4c:	stp	x1, xzr, [x0]
  44da50:	mov	x3, x22
  44da54:	str	xzr, [x0, #16]
  44da58:	mov	x2, x24
  44da5c:	mov	x1, x26
  44da60:	mov	x0, x21
  44da64:	bl	448a38 <ferror@plt+0x45468>
  44da68:	cbz	w0, 44d6e4 <ferror@plt+0x4a114>
  44da6c:	ldr	x0, [sp, #240]
  44da70:	mov	x2, #0x18                  	// #24
  44da74:	ldr	x1, [sp, #264]
  44da78:	adrp	x3, 44b000 <ferror@plt+0x47a30>
  44da7c:	add	x3, x3, #0xf64
  44da80:	str	x0, [sp, #128]
  44da84:	bl	44eae8 <ferror@plt+0x4b518>
  44da88:	ldr	w0, [x21, #8]
  44da8c:	ldr	x2, [x20, #16]
  44da90:	ldr	x26, [sp, #264]
  44da94:	cbnz	w0, 44dfc0 <ferror@plt+0x4a9f0>
  44da98:	add	x8, x23, #0x80
  44da9c:	mov	x28, x8
  44daa0:	b	44dfd0 <ferror@plt+0x4aa00>
  44daa4:	mov	x0, x25
  44daa8:	bl	44c314 <ferror@plt+0x48d44>
  44daac:	and	w0, w0, #0xff
  44dab0:	b	44d8c4 <ferror@plt+0x4a2f4>
  44dab4:	mov	w0, #0x0                   	// #0
  44dab8:	b	44d8f4 <ferror@plt+0x4a324>
  44dabc:	sub	x1, x28, x26
  44dac0:	mov	x0, x26
  44dac4:	bl	402da0 <strnlen@plt>
  44dac8:	add	x0, x0, #0x1
  44dacc:	add	x27, x27, #0x1
  44dad0:	add	x26, x26, x0
  44dad4:	str	x27, [sp, #304]
  44dad8:	b	44d93c <ferror@plt+0x4a36c>
  44dadc:	ldp	x2, x3, [sp, #376]
  44dae0:	lsl	x1, x27, #3
  44dae4:	mov	x0, x21
  44dae8:	bl	4487bc <ferror@plt+0x451ec>
  44daec:	str	x0, [sp, #312]
  44daf0:	cbnz	x0, 44d958 <ferror@plt+0x4a388>
  44daf4:	b	44d6e4 <ferror@plt+0x4a114>
  44daf8:	ldr	w0, [sp, #456]
  44dafc:	cbnz	w0, 44d6e4 <ferror@plt+0x4a114>
  44db00:	ldr	x27, [sp, #312]
  44db04:	mov	x0, x25
  44db08:	bl	44c500 <ferror@plt+0x48f30>
  44db0c:	str	x0, [x27, x26]
  44db10:	ldr	x0, [sp, #312]
  44db14:	ldr	x0, [x0, x26]
  44db18:	add	x26, x26, #0x8
  44db1c:	cbnz	x0, 44d95c <ferror@plt+0x4a38c>
  44db20:	b	44d6e4 <ferror@plt+0x4a114>
  44db24:	sub	x1, x27, x26
  44db28:	mov	x0, x26
  44db2c:	bl	402da0 <strnlen@plt>
  44db30:	add	x2, x0, #0x1
  44db34:	add	x0, x26, x0
  44db38:	mov	x1, #0x1                   	// #1
  44db3c:	ldrsb	w3, [x0, x1]
  44db40:	tbnz	w3, #31, 44db84 <ferror@plt+0x4a5b4>
  44db44:	add	x1, x2, x1
  44db48:	mov	x0, #0x1                   	// #1
  44db4c:	add	x26, x26, x1
  44db50:	sub	x2, x26, #0x1
  44db54:	ldrsb	w1, [x2, x0]
  44db58:	tbnz	w1, #31, 44db8c <ferror@plt+0x4a5bc>
  44db5c:	add	x26, x26, x0
  44db60:	mov	x0, #0x1                   	// #1
  44db64:	sub	x2, x26, #0x1
  44db68:	ldrsb	w1, [x2, x0]
  44db6c:	tbnz	w1, #31, 44db94 <ferror@plt+0x4a5c4>
  44db70:	add	x26, x26, x0
  44db74:	ldr	x0, [sp, #320]
  44db78:	add	x0, x0, #0x1
  44db7c:	str	x0, [sp, #320]
  44db80:	b	44d984 <ferror@plt+0x4a3b4>
  44db84:	add	x1, x1, #0x1
  44db88:	b	44db3c <ferror@plt+0x4a56c>
  44db8c:	add	x0, x0, #0x1
  44db90:	b	44db54 <ferror@plt+0x4a584>
  44db94:	add	x0, x0, #0x1
  44db98:	b	44db68 <ferror@plt+0x4a598>
  44db9c:	cbnz	w0, 44d6e4 <ferror@plt+0x4a114>
  44dba0:	mov	x0, x25
  44dba4:	bl	44c500 <ferror@plt+0x48f30>
  44dba8:	mov	x27, x0
  44dbac:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44dbb0:	mov	x0, x25
  44dbb4:	bl	44c3b8 <ferror@plt+0x48de8>
  44dbb8:	ldrb	w1, [x27]
  44dbbc:	cmp	w1, #0x2f
  44dbc0:	b.eq	44dbd4 <ferror@plt+0x4a604>  // b.none
  44dbc4:	cbnz	x0, 44dbf4 <ferror@plt+0x4a624>
  44dbc8:	ldr	x0, [sp, #152]
  44dbcc:	ldr	x4, [x0, #72]
  44dbd0:	cbnz	x4, 44dc10 <ferror@plt+0x4a640>
  44dbd4:	ldr	x0, [sp, #328]
  44dbd8:	str	x27, [x0, x28]
  44dbdc:	mov	x0, x25
  44dbe0:	bl	44c3b8 <ferror@plt+0x48de8>
  44dbe4:	mov	x0, x25
  44dbe8:	add	x28, x28, #0x8
  44dbec:	bl	44c3b8 <ferror@plt+0x48de8>
  44dbf0:	b	44d9b4 <ferror@plt+0x4a3e4>
  44dbf4:	ldr	x2, [sp, #304]
  44dbf8:	sub	x1, x0, #0x1
  44dbfc:	cmp	x1, x2
  44dc00:	b.cs	44dc8c <ferror@plt+0x4a6bc>  // b.hs, b.nlast
  44dc04:	ldr	x1, [sp, #312]
  44dc08:	add	x0, x1, x0, lsl #3
  44dc0c:	ldur	x4, [x0, #-8]
  44dc10:	mov	x0, x4
  44dc14:	str	x4, [sp, #160]
  44dc18:	bl	402d50 <strlen@plt>
  44dc1c:	mov	x26, x0
  44dc20:	mov	x0, x27
  44dc24:	bl	402d50 <strlen@plt>
  44dc28:	add	x1, x26, x0
  44dc2c:	ldp	x2, x3, [sp, #376]
  44dc30:	add	x1, x1, #0x2
  44dc34:	str	x0, [sp, #128]
  44dc38:	mov	x0, x21
  44dc3c:	bl	4487bc <ferror@plt+0x451ec>
  44dc40:	str	x0, [sp, #136]
  44dc44:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44dc48:	ldr	x4, [sp, #160]
  44dc4c:	mov	x2, x26
  44dc50:	mov	x1, x4
  44dc54:	bl	402cd0 <memcpy@plt>
  44dc58:	ldp	x1, x3, [sp, #128]
  44dc5c:	mov	w0, #0x2f                  	// #47
  44dc60:	str	x3, [sp, #128]
  44dc64:	strb	w0, [x3, x26]
  44dc68:	add	x0, x26, #0x1
  44dc6c:	add	x2, x1, #0x1
  44dc70:	add	x0, x3, x0
  44dc74:	mov	x1, x27
  44dc78:	bl	402cd0 <memcpy@plt>
  44dc7c:	ldr	x0, [sp, #328]
  44dc80:	ldr	x3, [sp, #128]
  44dc84:	str	x3, [x0, x28]
  44dc88:	b	44dbdc <ferror@plt+0x4a60c>
  44dc8c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44dc90:	add	x1, x1, #0x1fa
  44dc94:	b	44d84c <ferror@plt+0x4a27c>
  44dc98:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x28c10>
  44dc9c:	add	x0, x0, #0x122
  44dca0:	b	44d9d8 <ferror@plt+0x4a408>
  44dca4:	mov	x0, x19
  44dca8:	bl	44c314 <ferror@plt+0x48d44>
  44dcac:	ldr	w2, [sp, #292]
  44dcb0:	and	w1, w0, #0xff
  44dcb4:	cmp	w2, w0, uxtb
  44dcb8:	b.hi	44dd28 <ferror@plt+0x4a758>  // b.pmore
  44dcbc:	ldr	w5, [sp, #288]
  44dcc0:	sub	w1, w1, w2
  44dcc4:	ldr	w0, [sp, #128]
  44dcc8:	ldr	w3, [sp, #276]
  44dccc:	ldr	x7, [sp, #192]
  44dcd0:	udiv	w2, w1, w5
  44dcd4:	add	w4, w2, w0
  44dcd8:	ldr	w0, [sp, #280]
  44dcdc:	msub	w1, w2, w5, w1
  44dce0:	ldr	w2, [sp, #284]
  44dce4:	ldp	x5, x6, [sp, #376]
  44dce8:	mul	w3, w4, w3
  44dcec:	add	w1, w1, w2
  44dcf0:	udiv	w3, w3, w0
  44dcf4:	add	x26, x26, x3
  44dcf8:	udiv	w3, w4, w0
  44dcfc:	msub	w0, w3, w0, w4
  44dd00:	str	w0, [sp, #128]
  44dd04:	ldr	w0, [sp, #136]
  44dd08:	add	w4, w0, w1
  44dd0c:	str	w4, [sp, #136]
  44dd10:	mov	x3, x27
  44dd14:	mov	x2, x26
  44dd18:	add	x1, x23, #0x10
  44dd1c:	mov	x0, x21
  44dd20:	bl	44c03c <ferror@plt+0x48a6c>
  44dd24:	b	44da10 <ferror@plt+0x4a440>
  44dd28:	cbnz	w1, 44de7c <ferror@plt+0x4a8ac>
  44dd2c:	mov	x0, x19
  44dd30:	bl	44c3b8 <ferror@plt+0x48de8>
  44dd34:	mov	x28, x0
  44dd38:	mov	x0, x19
  44dd3c:	bl	44c314 <ferror@plt+0x48d44>
  44dd40:	and	w2, w0, #0xff
  44dd44:	sub	w2, w2, #0x1
  44dd48:	cmp	w2, #0x3
  44dd4c:	b.hi	44de68 <ferror@plt+0x4a898>  // b.pmore
  44dd50:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44dd54:	add	x0, x0, #0x28
  44dd58:	ldrh	w0, [x0, w2, uxtw #1]
  44dd5c:	adr	x1, 44dd68 <ferror@plt+0x4a798>
  44dd60:	add	x0, x1, w0, sxth #2
  44dd64:	br	x0
  44dd68:	ldr	x0, [sp, #152]
  44dd6c:	ldr	w1, [x0, #48]
  44dd70:	mov	x0, x19
  44dd74:	bl	44c348 <ferror@plt+0x48d78>
  44dd78:	mov	x26, x0
  44dd7c:	b	44da10 <ferror@plt+0x4a440>
  44dd80:	mov	x0, x19
  44dd84:	bl	44c500 <ferror@plt+0x48f30>
  44dd88:	mov	x27, x0
  44dd8c:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44dd90:	mov	x0, x19
  44dd94:	bl	44c3b8 <ferror@plt+0x48de8>
  44dd98:	mov	x28, x0
  44dd9c:	mov	x0, x19
  44dda0:	bl	44c3b8 <ferror@plt+0x48de8>
  44dda4:	mov	x0, x19
  44dda8:	bl	44c3b8 <ferror@plt+0x48de8>
  44ddac:	ldrb	w0, [x27]
  44ddb0:	cmp	w0, #0x2f
  44ddb4:	b.eq	44da10 <ferror@plt+0x4a440>  // b.none
  44ddb8:	cbnz	w28, 44de40 <ferror@plt+0x4a870>
  44ddbc:	ldr	x0, [sp, #152]
  44ddc0:	ldr	x4, [x0, #72]
  44ddc4:	mov	x0, x4
  44ddc8:	str	x4, [sp, #224]
  44ddcc:	bl	402d50 <strlen@plt>
  44ddd0:	mov	x28, x0
  44ddd4:	mov	x0, x27
  44ddd8:	bl	402d50 <strlen@plt>
  44dddc:	add	x1, x28, x0
  44dde0:	ldp	x2, x3, [sp, #376]
  44dde4:	add	x1, x1, #0x2
  44dde8:	str	x0, [sp, #184]
  44ddec:	mov	x0, x21
  44ddf0:	bl	4487bc <ferror@plt+0x451ec>
  44ddf4:	str	x0, [sp, #216]
  44ddf8:	cbz	x0, 44d6e4 <ferror@plt+0x4a114>
  44ddfc:	ldr	x4, [sp, #224]
  44de00:	mov	x2, x28
  44de04:	mov	x1, x4
  44de08:	bl	402cd0 <memcpy@plt>
  44de0c:	ldr	x3, [sp, #216]
  44de10:	mov	w0, #0x2f                  	// #47
  44de14:	ldr	x1, [sp, #184]
  44de18:	str	x3, [sp, #184]
  44de1c:	strb	w0, [x3, x28]
  44de20:	add	x0, x28, #0x1
  44de24:	add	x2, x1, #0x1
  44de28:	add	x0, x3, x0
  44de2c:	mov	x1, x27
  44de30:	bl	402cd0 <memcpy@plt>
  44de34:	ldr	x3, [sp, #184]
  44de38:	mov	x27, x3
  44de3c:	b	44da10 <ferror@plt+0x4a440>
  44de40:	ldr	x0, [sp, #304]
  44de44:	sub	w28, w28, #0x1
  44de48:	cmp	x28, x0
  44de4c:	b.cs	44de5c <ferror@plt+0x4a88c>  // b.hs, b.nlast
  44de50:	ldr	x0, [sp, #312]
  44de54:	ldr	x4, [x0, x28, lsl #3]
  44de58:	b	44ddc4 <ferror@plt+0x4a7f4>
  44de5c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44de60:	add	x1, x1, #0x230
  44de64:	b	44d84c <ferror@plt+0x4a27c>
  44de68:	sub	x1, x28, #0x1
  44de6c:	mov	x0, x19
  44de70:	bl	44c1b4 <ferror@plt+0x48be4>
  44de74:	cbnz	w0, 44da10 <ferror@plt+0x4a440>
  44de78:	b	44d6e4 <ferror@plt+0x4a114>
  44de7c:	sub	w1, w1, #0x1
  44de80:	cmp	w1, #0xb
  44de84:	b.hi	44df84 <ferror@plt+0x4a9b4>  // b.pmore
  44de88:	ldr	x0, [sp, #200]
  44de8c:	ldrh	w0, [x0, w1, uxtw #1]
  44de90:	adr	x1, 44de9c <ferror@plt+0x4a8cc>
  44de94:	add	x0, x1, w0, sxth #2
  44de98:	br	x0
  44de9c:	ldr	w4, [sp, #136]
  44dea0:	ldr	x7, [sp, #192]
  44dea4:	ldp	x5, x6, [sp, #376]
  44dea8:	b	44dd10 <ferror@plt+0x4a740>
  44deac:	mov	x0, x19
  44deb0:	bl	44c3b8 <ferror@plt+0x48de8>
  44deb4:	ldr	w1, [sp, #128]
  44deb8:	ldr	w2, [sp, #280]
  44debc:	add	x0, x0, w1, uxtw
  44dec0:	ldr	w1, [sp, #276]
  44dec4:	mul	x1, x1, x0
  44dec8:	udiv	x1, x1, x2
  44decc:	add	x26, x26, x1
  44ded0:	udiv	x1, x0, x2
  44ded4:	msub	w0, w1, w2, w0
  44ded8:	str	w0, [sp, #128]
  44dedc:	b	44da10 <ferror@plt+0x4a440>
  44dee0:	mov	x0, x19
  44dee4:	bl	44c450 <ferror@plt+0x48e80>
  44dee8:	ldr	w1, [sp, #136]
  44deec:	add	w0, w1, w0
  44def0:	str	w0, [sp, #136]
  44def4:	b	44da10 <ferror@plt+0x4a440>
  44def8:	mov	x0, x19
  44defc:	bl	44c3b8 <ferror@plt+0x48de8>
  44df00:	cbz	x0, 44dfb8 <ferror@plt+0x4a9e8>
  44df04:	ldr	x2, [sp, #320]
  44df08:	sub	x1, x0, #0x1
  44df0c:	cmp	x1, x2
  44df10:	b.cc	44df20 <ferror@plt+0x4a950>  // b.lo, b.ul, b.last
  44df14:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44df18:	add	x1, x1, #0x25f
  44df1c:	b	44d84c <ferror@plt+0x4a27c>
  44df20:	ldr	x1, [sp, #328]
  44df24:	add	x0, x1, x0, lsl #3
  44df28:	ldur	x27, [x0, #-8]
  44df2c:	b	44da10 <ferror@plt+0x4a440>
  44df30:	ldr	w1, [sp, #288]
  44df34:	mov	w0, #0xff                  	// #255
  44df38:	sub	w0, w0, w2
  44df3c:	ldr	w2, [sp, #280]
  44df40:	udiv	w0, w0, w1
  44df44:	ldr	w1, [sp, #128]
  44df48:	add	w0, w0, w1
  44df4c:	ldr	w1, [sp, #276]
  44df50:	mul	w1, w0, w1
  44df54:	udiv	w1, w1, w2
  44df58:	add	x26, x26, x1
  44df5c:	udiv	w1, w0, w2
  44df60:	b	44ded4 <ferror@plt+0x4a904>
  44df64:	mov	x0, x19
  44df68:	bl	44c2c4 <ferror@plt+0x48cf4>
  44df6c:	add	x26, x26, w0, uxth
  44df70:	str	wzr, [sp, #128]
  44df74:	b	44da10 <ferror@plt+0x4a440>
  44df78:	mov	x0, x19
  44df7c:	bl	44c3b8 <ferror@plt+0x48de8>
  44df80:	b	44da10 <ferror@plt+0x4a440>
  44df84:	ldr	x0, [sp, #296]
  44df88:	ldrb	w28, [x0, w1, uxtw]
  44df8c:	cbz	w28, 44da10 <ferror@plt+0x4a440>
  44df90:	mov	x0, x19
  44df94:	sub	w28, w28, #0x1
  44df98:	bl	44c3b8 <ferror@plt+0x48de8>
  44df9c:	b	44df8c <ferror@plt+0x4a9bc>
  44dfa0:	mov	w0, #0x1                   	// #1
  44dfa4:	mov	x26, #0x0                   	// #0
  44dfa8:	str	wzr, [sp, #128]
  44dfac:	str	w0, [sp, #136]
  44dfb0:	ldr	x27, [sp, #160]
  44dfb4:	b	44da10 <ferror@plt+0x4a440>
  44dfb8:	ldr	x27, [sp, #208]
  44dfbc:	b	44da10 <ferror@plt+0x4a440>
  44dfc0:	mov	x8, x19
  44dfc4:	mov	x28, #0x0                   	// #0
  44dfc8:	stp	xzr, xzr, [sp, #336]
  44dfcc:	stp	xzr, xzr, [sp, #352]
  44dfd0:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44dfd4:	add	x0, x0, #0x658
  44dfd8:	str	x0, [sp, #400]
  44dfdc:	ldr	x0, [x23, #56]
  44dfe0:	str	x0, [sp, #408]
  44dfe4:	ldr	x0, [x2]
  44dfe8:	str	x0, [sp, #416]
  44dfec:	ldr	x0, [x2, #8]
  44dff0:	add	x27, sp, #0x110
  44dff4:	str	x0, [sp, #424]
  44dff8:	ldr	w0, [x23, #120]
  44dffc:	str	w0, [sp, #432]
  44e000:	stp	x24, x22, [sp, #440]
  44e004:	str	wzr, [sp, #456]
  44e008:	ldr	x0, [sp, #424]
  44e00c:	cbnz	x0, 44e078 <ferror@plt+0x4aaa8>
  44e010:	ldr	x25, [x8, #24]
  44e014:	cbz	x25, 44e0b0 <ferror@plt+0x4aae0>
  44e018:	cbnz	x28, 44e0bc <ferror@plt+0x4aaec>
  44e01c:	mov	x3, x22
  44e020:	mov	x2, x24
  44e024:	mov	x1, x19
  44e028:	mov	x0, x21
  44e02c:	str	x8, [sp, #136]
  44e030:	bl	448a38 <ferror@plt+0x45468>
  44e034:	cbz	w0, 44e0b0 <ferror@plt+0x4aae0>
  44e038:	ldr	x8, [sp, #136]
  44e03c:	ldr	x19, [x8]
  44e040:	adrp	x3, 44c000 <ferror@plt+0x48a30>
  44e044:	mov	x1, x25
  44e048:	add	x3, x3, #0xc94
  44e04c:	mov	x0, x19
  44e050:	mov	x2, #0x18                  	// #24
  44e054:	bl	44eae8 <ferror@plt+0x4b518>
  44e058:	mov	x1, x27
  44e05c:	mov	x0, x21
  44e060:	mov	x3, x22
  44e064:	mov	x2, x24
  44e068:	bl	44be28 <ferror@plt+0x48858>
  44e06c:	mov	w0, #0x1                   	// #1
  44e070:	ldr	x1, [sp, #128]
  44e074:	b	44d72c <ferror@plt+0x4a15c>
  44e078:	stp	x8, x8, [sp]
  44e07c:	mov	x7, x22
  44e080:	mov	x6, x24
  44e084:	mov	x5, x27
  44e088:	mov	x4, x25
  44e08c:	mov	x1, x23
  44e090:	mov	x0, x21
  44e094:	mov	x3, #0x0                   	// #0
  44e098:	str	x2, [sp, #136]
  44e09c:	str	x8, [sp, #152]
  44e0a0:	bl	44cfbc <ferror@plt+0x499ec>
  44e0a4:	ldr	x2, [sp, #136]
  44e0a8:	ldr	x8, [sp, #152]
  44e0ac:	cbnz	w0, 44e008 <ferror@plt+0x4aa38>
  44e0b0:	mov	x25, #0x0                   	// #0
  44e0b4:	mov	x19, #0x0                   	// #0
  44e0b8:	b	44e058 <ferror@plt+0x4aa88>
  44e0bc:	mov	x3, x22
  44e0c0:	mov	x2, x24
  44e0c4:	mov	x1, x28
  44e0c8:	mov	x0, x21
  44e0cc:	bl	448a28 <ferror@plt+0x45458>
  44e0d0:	mov	x19, x0
  44e0d4:	cbz	x0, 44e0b0 <ferror@plt+0x4aae0>
  44e0d8:	str	xzr, [x28, #24]
  44e0dc:	b	44e040 <ferror@plt+0x4aa70>
  44e0e0:	ldr	x2, [sp, #120]
  44e0e4:	add	x2, x2, #0x70
  44e0e8:	stlr	x26, [x2]
  44e0ec:	ldr	x2, [sp, #120]
  44e0f0:	add	x2, x2, #0x78
  44e0f4:	stlr	x19, [x2]
  44e0f8:	ldr	x2, [sp, #120]
  44e0fc:	add	x2, x2, #0x80
  44e100:	stlr	x25, [x2]
  44e104:	ldr	x2, [sp, #120]
  44e108:	add	x2, x2, #0x68
  44e10c:	stlr	x1, [x2]
  44e110:	b	44d740 <ferror@plt+0x4a170>
  44e114:	ldr	x0, [x20, #16]
  44e118:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44e11c:	mov	x3, #0x18                  	// #24
  44e120:	add	x4, x4, #0xbc4
  44e124:	ldr	x2, [x0, #112]
  44e128:	ldr	x0, [sp, #176]
  44e12c:	bl	403060 <bsearch@plt>
  44e130:	mov	x19, x0
  44e134:	ldr	x0, [x20, #16]
  44e138:	cbnz	x19, 44e1e0 <ferror@plt+0x4ac10>
  44e13c:	ldr	x1, [x0, #80]
  44e140:	cbnz	x1, 44e1cc <ferror@plt+0x4abfc>
  44e144:	ldr	x25, [x0, #64]
  44e148:	cbz	x25, 44e1c4 <ferror@plt+0x4abf4>
  44e14c:	ldrb	w1, [x25]
  44e150:	cmp	w1, #0x2f
  44e154:	b.eq	44e1c4 <ferror@plt+0x4abf4>  // b.none
  44e158:	ldr	x26, [x0, #72]
  44e15c:	cbz	x26, 44e1c4 <ferror@plt+0x4abf4>
  44e160:	mov	x0, x25
  44e164:	bl	402d50 <strlen@plt>
  44e168:	mov	x23, x0
  44e16c:	mov	x0, x26
  44e170:	bl	402d50 <strlen@plt>
  44e174:	add	x1, x23, x0
  44e178:	mov	x19, x0
  44e17c:	mov	x3, x22
  44e180:	mov	x0, x21
  44e184:	mov	x2, x24
  44e188:	add	x1, x1, #0x2
  44e18c:	bl	4487bc <ferror@plt+0x451ec>
  44e190:	mov	x21, x0
  44e194:	cbz	x0, 44d770 <ferror@plt+0x4a1a0>
  44e198:	mov	x2, x19
  44e19c:	mov	x1, x26
  44e1a0:	bl	402cd0 <memcpy@plt>
  44e1a4:	mov	x1, x25
  44e1a8:	mov	x25, x21
  44e1ac:	mov	w0, #0x2f                  	// #47
  44e1b0:	strb	w0, [x21, x19]
  44e1b4:	add	x19, x19, #0x1
  44e1b8:	add	x2, x23, #0x1
  44e1bc:	add	x0, x21, x19
  44e1c0:	bl	402cd0 <memcpy@plt>
  44e1c4:	ldr	x0, [x20, #16]
  44e1c8:	str	x25, [x0, #80]
  44e1cc:	ldr	x0, [x20, #16]
  44e1d0:	mov	x4, #0x0                   	// #0
  44e1d4:	mov	w3, #0x0                   	// #0
  44e1d8:	ldr	x2, [x0, #80]
  44e1dc:	b	44e2b8 <ferror@plt+0x4ace8>
  44e1e0:	ldr	x2, [x0, #128]
  44e1e4:	cbnz	x2, 44e1f8 <ferror@plt+0x4ac28>
  44e1e8:	ldr	w3, [x19, #16]
  44e1ec:	mov	x4, #0x0                   	// #0
  44e1f0:	ldr	x2, [x19, #8]
  44e1f4:	b	44e2b8 <ferror@plt+0x4ace8>
  44e1f8:	ldr	x1, [x0, #120]
  44e1fc:	adrp	x4, 44b000 <ferror@plt+0x47a30>
  44e200:	ldr	x0, [sp, #176]
  44e204:	add	x4, x4, #0xb74
  44e208:	mov	x3, #0x18                  	// #24
  44e20c:	bl	403060 <bsearch@plt>
  44e210:	mov	x1, x0
  44e214:	cbz	x0, 44e1e8 <ferror@plt+0x4ac18>
  44e218:	ldr	x0, [x20, #16]
  44e21c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44e220:	movk	x5, #0xaaab
  44e224:	ldp	x3, x4, [x0, #120]
  44e228:	ldr	x0, [sp, #232]
  44e22c:	sub	x2, x1, x3
  44e230:	asr	x2, x2, #3
  44e234:	mul	x2, x2, x5
  44e238:	add	x2, x2, #0x1
  44e23c:	cmp	x2, x4
  44e240:	b.cs	44e25c <ferror@plt+0x4ac8c>  // b.hs, b.nlast
  44e244:	ldr	x2, [x1, #24]
  44e248:	cmp	x2, x0
  44e24c:	b.hi	44e25c <ferror@plt+0x4ac8c>  // b.pmore
  44e250:	ldr	x2, [x1, #32]
  44e254:	cmp	x0, x2
  44e258:	b.cc	44e29c <ferror@plt+0x4accc>  // b.lo, b.ul, b.last
  44e25c:	ldr	x2, [sp, #144]
  44e260:	add	x5, sp, #0x150
  44e264:	ldr	x20, [x1, #16]
  44e268:	add	x4, sp, #0x190
  44e26c:	ldr	x1, [x19, #8]
  44e270:	str	x1, [sp, #400]
  44e274:	ldr	w1, [x19, #16]
  44e278:	mov	x3, x22
  44e27c:	str	w1, [sp, #336]
  44e280:	mov	x1, x20
  44e284:	bl	44bc04 <ferror@plt+0x48634>
  44e288:	cbnz	w0, 44d77c <ferror@plt+0x4a1ac>
  44e28c:	ldr	w3, [sp, #336]
  44e290:	ldr	x4, [x20]
  44e294:	ldr	x2, [sp, #400]
  44e298:	b	44e2b8 <ferror@plt+0x4ace8>
  44e29c:	add	x1, x1, #0x18
  44e2a0:	b	44e22c <ferror@plt+0x4ac5c>
  44e2a4:	cmn	x1, #0x1
  44e2a8:	b.ne	44e114 <ferror@plt+0x4ab44>  // b.any
  44e2ac:	mov	x4, #0x0                   	// #0
  44e2b0:	mov	w3, #0x0                   	// #0
  44e2b4:	mov	x2, #0x0                   	// #0
  44e2b8:	ldr	x5, [sp, #144]
  44e2bc:	mov	x0, x22
  44e2c0:	ldr	x1, [sp, #232]
  44e2c4:	blr	x5
  44e2c8:	b	44d77c <ferror@plt+0x4a1ac>
  44e2cc:	stp	x29, x30, [sp, #-96]!
  44e2d0:	mov	x29, sp
  44e2d4:	stp	x19, x20, [sp, #16]
  44e2d8:	mov	x19, x0
  44e2dc:	ldr	w0, [x0, #8]
  44e2e0:	stp	x21, x22, [sp, #32]
  44e2e4:	mov	x21, x2
  44e2e8:	mov	x22, x4
  44e2ec:	stp	x23, x24, [sp, #48]
  44e2f0:	mov	x23, x1
  44e2f4:	mov	x24, x3
  44e2f8:	str	x25, [sp, #64]
  44e2fc:	cbnz	w0, 44e378 <ferror@plt+0x4ada8>
  44e300:	ldr	x20, [x19, #32]
  44e304:	add	x25, sp, #0x5c
  44e308:	cbnz	x20, 44e328 <ferror@plt+0x4ad58>
  44e30c:	mov	x1, x23
  44e310:	mov	x0, x22
  44e314:	mov	x4, #0x0                   	// #0
  44e318:	mov	w3, #0x0                   	// #0
  44e31c:	mov	x2, #0x0                   	// #0
  44e320:	blr	x21
  44e324:	b	44e358 <ferror@plt+0x4ad88>
  44e328:	mov	x6, x25
  44e32c:	mov	x5, x22
  44e330:	mov	x4, x24
  44e334:	mov	x3, x21
  44e338:	mov	x2, x23
  44e33c:	mov	x1, x20
  44e340:	mov	x0, x19
  44e344:	bl	44d5a0 <ferror@plt+0x49fd0>
  44e348:	cbnz	w0, 44e358 <ferror@plt+0x4ad88>
  44e34c:	ldr	w0, [sp, #92]
  44e350:	cbz	w0, 44e370 <ferror@plt+0x4ada0>
  44e354:	mov	w0, #0x0                   	// #0
  44e358:	ldp	x19, x20, [sp, #16]
  44e35c:	ldp	x21, x22, [sp, #32]
  44e360:	ldp	x23, x24, [sp, #48]
  44e364:	ldr	x25, [sp, #64]
  44e368:	ldp	x29, x30, [sp], #96
  44e36c:	ret
  44e370:	ldr	x20, [x20]
  44e374:	b	44e308 <ferror@plt+0x4ad38>
  44e378:	add	x20, x19, #0x20
  44e37c:	add	x25, sp, #0x5c
  44e380:	ldar	x20, [x20]
  44e384:	cbz	x20, 44e30c <ferror@plt+0x4ad3c>
  44e388:	mov	x6, x25
  44e38c:	mov	x5, x22
  44e390:	mov	x4, x24
  44e394:	mov	x3, x21
  44e398:	mov	x2, x23
  44e39c:	mov	x1, x20
  44e3a0:	mov	x0, x19
  44e3a4:	bl	44d5a0 <ferror@plt+0x49fd0>
  44e3a8:	cbnz	w0, 44e358 <ferror@plt+0x4ad88>
  44e3ac:	ldr	w0, [sp, #92]
  44e3b0:	cbz	w0, 44e380 <ferror@plt+0x4adb0>
  44e3b4:	b	44e354 <ferror@plt+0x4ad84>
  44e3b8:	sub	sp, sp, #0x290
  44e3bc:	stp	x29, x30, [sp, #48]
  44e3c0:	add	x29, sp, #0x30
  44e3c4:	stp	x19, x20, [sp, #64]
  44e3c8:	mov	x20, x0
  44e3cc:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44e3d0:	add	x0, x0, #0x658
  44e3d4:	stp	x21, x22, [sp, #80]
  44e3d8:	add	x21, sp, #0x250
  44e3dc:	stp	x23, x24, [sp, #96]
  44e3e0:	add	x24, sp, #0x1d0
  44e3e4:	stp	x25, x26, [sp, #112]
  44e3e8:	add	x25, sp, #0x190
  44e3ec:	stp	x27, x28, [sp, #128]
  44e3f0:	str	x2, [sp, #176]
  44e3f4:	stp	x1, x3, [sp, #192]
  44e3f8:	stp	x6, x7, [sp, #208]
  44e3fc:	stp	x4, x5, [sp, #256]
  44e400:	stp	xzr, xzr, [sp, #336]
  44e404:	stp	xzr, xzr, [sp, #352]
  44e408:	stp	xzr, xzr, [sp, #368]
  44e40c:	stp	xzr, xzr, [sp, #384]
  44e410:	stp	x0, x2, [sp, #400]
  44e414:	stp	x2, x3, [sp, #416]
  44e418:	ldr	x22, [sp, #704]
  44e41c:	ldr	x23, [sp, #712]
  44e420:	ldr	w0, [sp, #688]
  44e424:	str	w0, [sp, #432]
  44e428:	add	x0, sp, #0x200
  44e42c:	stp	xzr, xzr, [sp, #144]
  44e430:	stp	xzr, xzr, [x0, #-200]
  44e434:	add	x0, sp, #0x138
  44e438:	str	x0, [sp, #272]
  44e43c:	str	xzr, [sp, #328]
  44e440:	stp	x22, x23, [sp, #440]
  44e444:	str	wzr, [sp, #456]
  44e448:	ldr	x0, [sp, #424]
  44e44c:	ldr	w26, [sp, #456]
  44e450:	cbnz	x0, 44e4b0 <ferror@plt+0x4aee0>
  44e454:	cbnz	w26, 44e54c <ferror@plt+0x4af7c>
  44e458:	add	x0, sp, #0x200
  44e45c:	mov	x3, x23
  44e460:	mov	x2, x22
  44e464:	ldp	x0, x1, [x0, #-200]
  44e468:	stp	x0, x1, [sp, #368]
  44e46c:	ldr	x0, [sp, #328]
  44e470:	str	x0, [sp, #384]
  44e474:	ldr	x0, [sp, #144]
  44e478:	add	x1, sp, #0x150
  44e47c:	str	x0, [sp, #392]
  44e480:	mov	x0, x20
  44e484:	bl	448a38 <ferror@plt+0x45468>
  44e488:	cbnz	w0, 44e98c <ferror@plt+0x4b3bc>
  44e48c:	mov	w0, #0x0                   	// #0
  44e490:	ldp	x29, x30, [sp, #48]
  44e494:	ldp	x19, x20, [sp, #64]
  44e498:	ldp	x21, x22, [sp, #80]
  44e49c:	ldp	x23, x24, [sp, #96]
  44e4a0:	ldp	x25, x26, [sp, #112]
  44e4a4:	ldp	x27, x28, [sp, #128]
  44e4a8:	add	sp, sp, #0x290
  44e4ac:	ret
  44e4b0:	cbnz	w26, 44e54c <ferror@plt+0x4af7c>
  44e4b4:	ldr	x0, [sp, #416]
  44e4b8:	str	x0, [sp, #224]
  44e4bc:	mov	x0, x25
  44e4c0:	bl	44c21c <ferror@plt+0x48c4c>
  44e4c4:	mov	w1, w0
  44e4c8:	str	x1, [sp, #160]
  44e4cc:	mov	x1, #0xffffffff            	// #4294967295
  44e4d0:	cmp	x1, w0, uxtw
  44e4d4:	b.ne	44e4e8 <ferror@plt+0x4af18>  // b.any
  44e4d8:	mov	x0, x25
  44e4dc:	mov	w26, #0x1                   	// #1
  44e4e0:	bl	44c260 <ferror@plt+0x48c90>
  44e4e4:	str	x0, [sp, #160]
  44e4e8:	ldp	x0, x1, [x25]
  44e4ec:	stp	x0, x1, [x24]
  44e4f0:	ldp	x0, x1, [x25, #16]
  44e4f4:	stp	x0, x1, [x24, #16]
  44e4f8:	ldp	x0, x1, [x25, #32]
  44e4fc:	stp	x0, x1, [x24, #32]
  44e500:	ldp	x0, x1, [x25, #48]
  44e504:	stp	x0, x1, [x24, #48]
  44e508:	ldr	x0, [sp, #160]
  44e50c:	str	x0, [sp, #488]
  44e510:	mov	x1, x0
  44e514:	mov	x0, x25
  44e518:	bl	44c1b4 <ferror@plt+0x48be4>
  44e51c:	cbz	w0, 44e54c <ferror@plt+0x4af7c>
  44e520:	mov	x0, x24
  44e524:	bl	44c2c4 <ferror@plt+0x48cf4>
  44e528:	and	w0, w0, #0xffff
  44e52c:	str	w0, [sp, #248]
  44e530:	sub	w0, w0, #0x2
  44e534:	cmp	w0, #0x2
  44e538:	b.ls	44e5e8 <ferror@plt+0x4b018>  // b.plast
  44e53c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44e540:	mov	x0, x24
  44e544:	add	x1, x1, #0x28a
  44e548:	bl	44bdd4 <ferror@plt+0x48804>
  44e54c:	ldr	x0, [sp, #144]
  44e550:	cbz	x0, 44e5bc <ferror@plt+0x4afec>
  44e554:	ldr	x21, [sp, #312]
  44e558:	mov	x19, #0x0                   	// #0
  44e55c:	ldr	x1, [x21, x19, lsl #3]
  44e560:	mov	x3, x23
  44e564:	mov	x2, x22
  44e568:	mov	x0, x20
  44e56c:	add	x1, x1, #0x58
  44e570:	bl	44be88 <ferror@plt+0x488b8>
  44e574:	ldr	x1, [x21, x19, lsl #3]
  44e578:	mov	x0, x20
  44e57c:	mov	x4, x23
  44e580:	mov	x3, x22
  44e584:	mov	x2, #0x88                  	// #136
  44e588:	add	x19, x19, #0x1
  44e58c:	bl	448700 <ferror@plt+0x45130>
  44e590:	ldr	x0, [sp, #144]
  44e594:	cmp	x0, x19
  44e598:	b.ne	44e55c <ferror@plt+0x4af8c>  // b.any
  44e59c:	ldp	x1, x0, [sp, #320]
  44e5a0:	mov	x3, x23
  44e5a4:	mov	x2, x22
  44e5a8:	add	x0, x0, x1
  44e5ac:	add	x1, sp, #0x138
  44e5b0:	stp	xzr, x0, [sp, #320]
  44e5b4:	mov	x0, x20
  44e5b8:	bl	448a38 <ferror@plt+0x45468>
  44e5bc:	ldr	x0, [sp, #360]
  44e5c0:	cbz	x0, 44e48c <ferror@plt+0x4aebc>
  44e5c4:	ldp	x1, x0, [sp, #344]
  44e5c8:	mov	x3, x23
  44e5cc:	mov	x2, x22
  44e5d0:	add	x0, x0, x1
  44e5d4:	add	x1, sp, #0x150
  44e5d8:	stp	xzr, x0, [sp, #344]
  44e5dc:	mov	x0, x20
  44e5e0:	bl	448a38 <ferror@plt+0x45468>
  44e5e4:	b	44e48c <ferror@plt+0x4aebc>
  44e5e8:	ldr	x4, [sp, #272]
  44e5ec:	mov	x3, x23
  44e5f0:	mov	x2, x22
  44e5f4:	mov	x0, x20
  44e5f8:	mov	x1, #0x8                   	// #8
  44e5fc:	bl	448910 <ferror@plt+0x45340>
  44e600:	mov	x27, x0
  44e604:	cbz	x0, 44e54c <ferror@plt+0x4af7c>
  44e608:	mov	x3, x23
  44e60c:	mov	x2, x22
  44e610:	mov	x0, x20
  44e614:	mov	x1, #0x88                  	// #136
  44e618:	bl	4487bc <ferror@plt+0x451ec>
  44e61c:	mov	x19, x0
  44e620:	cbz	x0, 44e54c <ferror@plt+0x4af7c>
  44e624:	ldr	x0, [sp, #144]
  44e628:	str	x19, [x27]
  44e62c:	stp	xzr, xzr, [x19, #88]
  44e630:	mov	w1, w26
  44e634:	add	x0, x0, #0x1
  44e638:	str	x0, [sp, #144]
  44e63c:	add	x0, x19, #0x58
  44e640:	str	x0, [sp, #232]
  44e644:	mov	x0, x24
  44e648:	bl	44c2a4 <ferror@plt+0x48cd4>
  44e64c:	stp	xzr, xzr, [x19, #88]
  44e650:	ldr	x1, [sp, #216]
  44e654:	cmp	x1, x0
  44e658:	b.hi	44e674 <ferror@plt+0x4b0a4>  // b.pmore
  44e65c:	mov	x0, x23
  44e660:	mov	w2, #0x0                   	// #0
  44e664:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44e668:	add	x1, x1, #0x2a5
  44e66c:	blr	x22
  44e670:	b	44e54c <ferror@plt+0x4af7c>
  44e674:	adrp	x1, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  44e678:	add	x1, x1, #0x670
  44e67c:	str	x1, [sp, #528]
  44e680:	mov	x27, #0x0                   	// #0
  44e684:	ldr	x1, [sp, #208]
  44e688:	str	x1, [sp, #536]
  44e68c:	str	x22, [sp, #568]
  44e690:	add	x1, x1, x0
  44e694:	str	x1, [sp, #544]
  44e698:	ldr	x1, [sp, #216]
  44e69c:	str	x23, [sp, #576]
  44e6a0:	str	wzr, [sp, #584]
  44e6a4:	sub	x0, x1, x0
  44e6a8:	str	x0, [sp, #552]
  44e6ac:	ldr	w0, [sp, #688]
  44e6b0:	str	w0, [sp, #560]
  44e6b4:	add	x0, sp, #0x200
  44e6b8:	ldp	x0, x1, [x0, #16]
  44e6bc:	stp	x0, x1, [x21]
  44e6c0:	add	x0, sp, #0x200
  44e6c4:	ldp	x0, x1, [x0, #32]
  44e6c8:	stp	x0, x1, [x21, #16]
  44e6cc:	add	x0, sp, #0x200
  44e6d0:	ldp	x0, x1, [x0, #48]
  44e6d4:	stp	x0, x1, [x21, #32]
  44e6d8:	add	x0, sp, #0x200
  44e6dc:	ldp	x0, x1, [x0, #64]
  44e6e0:	stp	x0, x1, [x21, #48]
  44e6e4:	mov	x0, x21
  44e6e8:	bl	44c3b8 <ferror@plt+0x48de8>
  44e6ec:	ldr	w1, [sp, #648]
  44e6f0:	cbnz	x0, 44e7f0 <ferror@plt+0x4b220>
  44e6f4:	cbnz	w1, 44e54c <ferror@plt+0x4af7c>
  44e6f8:	cbz	x27, 44e8d0 <ferror@plt+0x4b300>
  44e6fc:	lsl	x28, x27, #5
  44e700:	mov	x3, x23
  44e704:	mov	x2, x22
  44e708:	mov	x1, x28
  44e70c:	mov	x0, x20
  44e710:	bl	4487bc <ferror@plt+0x451ec>
  44e714:	str	x0, [x19, #96]
  44e718:	cbz	x0, 44e54c <ferror@plt+0x4af7c>
  44e71c:	str	x27, [x19, #88]
  44e720:	add	x27, sp, #0x210
  44e724:	mov	x2, x28
  44e728:	mov	x28, #0x0                   	// #0
  44e72c:	mov	w1, #0x0                   	// #0
  44e730:	bl	403000 <memset@plt>
  44e734:	ldr	w0, [sp, #584]
  44e738:	cbnz	w0, 44e8a4 <ferror@plt+0x4b2d4>
  44e73c:	mov	x0, x27
  44e740:	bl	44c3b8 <ferror@plt+0x48de8>
  44e744:	str	x0, [sp, #184]
  44e748:	cbz	x0, 44e8bc <ferror@plt+0x4b2ec>
  44e74c:	mov	x0, x27
  44e750:	bl	44c3b8 <ferror@plt+0x48de8>
  44e754:	str	x0, [sp, #240]
  44e758:	mov	x0, x27
  44e75c:	bl	44c314 <ferror@plt+0x48d44>
  44e760:	and	w0, w0, #0xff
  44e764:	str	w0, [sp, #252]
  44e768:	ldp	x0, x1, [x27]
  44e76c:	stp	x0, x1, [x21]
  44e770:	ldp	x0, x1, [x27, #16]
  44e774:	stp	x0, x1, [x21, #16]
  44e778:	ldp	x0, x1, [x27, #32]
  44e77c:	stp	x0, x1, [x21, #32]
  44e780:	ldp	x0, x1, [x27, #48]
  44e784:	stp	x0, x1, [x21, #48]
  44e788:	mov	x1, #0x0                   	// #0
  44e78c:	mov	x0, x21
  44e790:	str	x1, [sp, #280]
  44e794:	bl	44c3b8 <ferror@plt+0x48de8>
  44e798:	str	x0, [sp, #168]
  44e79c:	ldr	x1, [sp, #280]
  44e7a0:	cbnz	x0, 44e82c <ferror@plt+0x4b25c>
  44e7a4:	cbnz	x1, 44e844 <ferror@plt+0x4b274>
  44e7a8:	mov	x0, x27
  44e7ac:	bl	44c3b8 <ferror@plt+0x48de8>
  44e7b0:	mov	x0, x27
  44e7b4:	bl	44c3b8 <ferror@plt+0x48de8>
  44e7b8:	mov	x1, #0x0                   	// #0
  44e7bc:	ldr	x2, [x19, #96]
  44e7c0:	ldr	x3, [sp, #184]
  44e7c4:	add	x0, x2, x28
  44e7c8:	str	x3, [x2, x28]
  44e7cc:	add	x28, x28, #0x20
  44e7d0:	ldr	w2, [sp, #240]
  44e7d4:	str	w2, [x0, #8]
  44e7d8:	ldr	w2, [sp, #252]
  44e7dc:	str	w2, [x0, #12]
  44e7e0:	ldr	x2, [sp, #168]
  44e7e4:	str	x2, [x0, #16]
  44e7e8:	str	x1, [x0, #24]
  44e7ec:	b	44e734 <ferror@plt+0x4b164>
  44e7f0:	cbnz	w1, 44e54c <ferror@plt+0x4af7c>
  44e7f4:	mov	x0, x21
  44e7f8:	bl	44c3b8 <ferror@plt+0x48de8>
  44e7fc:	add	x27, x27, #0x1
  44e800:	mov	x0, x21
  44e804:	bl	44c314 <ferror@plt+0x48d44>
  44e808:	mov	x0, x21
  44e80c:	bl	44c3b8 <ferror@plt+0x48de8>
  44e810:	cbnz	x0, 44e820 <ferror@plt+0x4b250>
  44e814:	mov	x0, x21
  44e818:	bl	44c3b8 <ferror@plt+0x48de8>
  44e81c:	b	44e6e4 <ferror@plt+0x4b114>
  44e820:	mov	x0, x21
  44e824:	bl	44c3b8 <ferror@plt+0x48de8>
  44e828:	b	44e808 <ferror@plt+0x4b238>
  44e82c:	add	x1, x1, #0x1
  44e830:	mov	x0, x21
  44e834:	str	x1, [sp, #168]
  44e838:	bl	44c3b8 <ferror@plt+0x48de8>
  44e83c:	ldr	x1, [sp, #168]
  44e840:	b	44e78c <ferror@plt+0x4b1bc>
  44e844:	lsl	x1, x1, #3
  44e848:	mov	x3, x23
  44e84c:	mov	x2, x22
  44e850:	mov	x0, x20
  44e854:	bl	4487bc <ferror@plt+0x451ec>
  44e858:	mov	x1, x0
  44e85c:	cbz	x0, 44e8a4 <ferror@plt+0x4b2d4>
  44e860:	mov	x2, x0
  44e864:	mov	x0, x27
  44e868:	stp	x1, x2, [sp, #288]
  44e86c:	bl	44c3b8 <ferror@plt+0x48de8>
  44e870:	mov	x3, x0
  44e874:	mov	x0, x27
  44e878:	str	x3, [sp, #280]
  44e87c:	bl	44c3b8 <ferror@plt+0x48de8>
  44e880:	ldp	x3, x1, [sp, #280]
  44e884:	cbz	x3, 44e7bc <ferror@plt+0x4b1ec>
  44e888:	ldr	x2, [sp, #296]
  44e88c:	stp	w3, w0, [x2]
  44e890:	add	x2, x2, #0x8
  44e894:	ldr	x0, [sp, #168]
  44e898:	add	x0, x0, #0x1
  44e89c:	str	x0, [sp, #168]
  44e8a0:	b	44e864 <ferror@plt+0x4b294>
  44e8a4:	ldr	x1, [sp, #232]
  44e8a8:	mov	x3, x23
  44e8ac:	mov	x2, x22
  44e8b0:	mov	x0, x20
  44e8b4:	bl	44be88 <ferror@plt+0x488b8>
  44e8b8:	b	44e54c <ferror@plt+0x4af7c>
  44e8bc:	ldp	x1, x0, [x19, #88]
  44e8c0:	adrp	x3, 44b000 <ferror@plt+0x47a30>
  44e8c4:	mov	x2, #0x20                  	// #32
  44e8c8:	add	x3, x3, #0xbec
  44e8cc:	bl	44eae8 <ferror@plt+0x4b518>
  44e8d0:	mov	x0, x24
  44e8d4:	bl	44c314 <ferror@plt+0x48d44>
  44e8d8:	and	w2, w0, #0xff
  44e8dc:	mov	x1, #0x4                   	// #4
  44e8e0:	ldr	x0, [sp, #152]
  44e8e4:	cmp	w26, #0x0
  44e8e8:	str	x0, [x19, #24]
  44e8ec:	mov	x0, #0xc                   	// #12
  44e8f0:	csel	x0, x0, x1, ne  // ne = any
  44e8f4:	stp	w26, w2, [x19, #44]
  44e8f8:	ldr	x1, [sp, #160]
  44e8fc:	stp	xzr, xzr, [x19, #56]
  44e900:	ldr	w7, [sp, #688]
  44e904:	add	x0, x0, x1
  44e908:	stp	xzr, xzr, [x19, #72]
  44e90c:	mov	x2, x24
  44e910:	ldr	x1, [sp, #152]
  44e914:	stp	xzr, xzr, [x19, #104]
  44e918:	add	x0, x1, x0
  44e91c:	str	x0, [x19, #32]
  44e920:	str	x0, [sp, #152]
  44e924:	ldr	x0, [sp, #488]
  44e928:	str	x0, [x19, #8]
  44e92c:	ldr	x0, [sp, #224]
  44e930:	stp	xzr, xzr, [x19, #120]
  44e934:	ldr	x1, [sp, #480]
  44e938:	str	x1, [x19]
  44e93c:	sub	x1, x1, x0
  44e940:	ldr	w0, [sp, #248]
  44e944:	str	x1, [x19, #16]
  44e948:	add	x1, sp, #0x290
  44e94c:	str	w0, [x19, #40]
  44e950:	add	x0, sp, #0x150
  44e954:	stp	x19, x0, [sp, #24]
  44e958:	ldr	x0, [sp, #696]
  44e95c:	str	x0, [sp]
  44e960:	stp	x22, x23, [sp, #8]
  44e964:	mov	x0, x20
  44e968:	str	x21, [sp, #40]
  44e96c:	ldp	x5, x6, [x1]
  44e970:	ldp	x3, x4, [x1, #16]
  44e974:	ldr	x1, [sp, #192]
  44e978:	bl	44c868 <ferror@plt+0x49298>
  44e97c:	cbz	w0, 44e54c <ferror@plt+0x4af7c>
  44e980:	ldr	w0, [sp, #520]
  44e984:	cbz	w0, 44e448 <ferror@plt+0x4ae78>
  44e988:	b	44e54c <ferror@plt+0x4af7c>
  44e98c:	mov	x3, x23
  44e990:	mov	x2, x22
  44e994:	add	x1, sp, #0x170
  44e998:	mov	x0, x20
  44e99c:	bl	448a38 <ferror@plt+0x45468>
  44e9a0:	cbz	w0, 44e48c <ferror@plt+0x4aebc>
  44e9a4:	ldp	x19, x25, [sp, #360]
  44e9a8:	mov	x2, #0x18                  	// #24
  44e9ac:	ldr	x21, [sp, #336]
  44e9b0:	adrp	x3, 44b000 <ferror@plt+0x47a30>
  44e9b4:	add	x3, x3, #0xf0c
  44e9b8:	mov	x0, x21
  44e9bc:	mov	x1, x19
  44e9c0:	ldr	x24, [sp, #392]
  44e9c4:	bl	44eae8 <ferror@plt+0x4b518>
  44e9c8:	mov	x3, x23
  44e9cc:	mov	x2, x22
  44e9d0:	mov	x0, x20
  44e9d4:	mov	x1, #0xa0                  	// #160
  44e9d8:	bl	4487bc <ferror@plt+0x451ec>
  44e9dc:	cbz	x0, 44e48c <ferror@plt+0x4aebc>
  44e9e0:	ldr	x1, [sp, #696]
  44e9e4:	stp	xzr, x1, [x0]
  44e9e8:	ldr	x1, [sp, #192]
  44e9ec:	str	x1, [x0, #16]
  44e9f0:	ldr	x1, [sp, #176]
  44e9f4:	str	x1, [x0, #56]
  44e9f8:	ldr	x1, [sp, #200]
  44e9fc:	str	x1, [x0, #64]
  44ea00:	ldr	x1, [sp, #256]
  44ea04:	str	x1, [x0, #72]
  44ea08:	ldr	x1, [sp, #264]
  44ea0c:	str	x1, [x0, #80]
  44ea10:	ldr	x1, [sp, #656]
  44ea14:	str	x1, [x0, #88]
  44ea18:	ldr	x1, [sp, #664]
  44ea1c:	str	x1, [x0, #96]
  44ea20:	ldr	x1, [sp, #672]
  44ea24:	str	x1, [x0, #104]
  44ea28:	ldr	x1, [sp, #680]
  44ea2c:	str	x1, [x0, #112]
  44ea30:	ldr	w1, [sp, #688]
  44ea34:	str	w1, [x0, #120]
  44ea38:	ldr	x1, [sp, #728]
  44ea3c:	stp	x21, x19, [x0, #24]
  44ea40:	stp	x25, x24, [x0, #40]
  44ea44:	stp	xzr, xzr, [x0, #128]
  44ea48:	stp	xzr, xzr, [x0, #144]
  44ea4c:	cbz	x1, 44ea54 <ferror@plt+0x4b484>
  44ea50:	str	x0, [x1]
  44ea54:	ldr	w1, [x20, #8]
  44ea58:	add	x2, x20, #0x20
  44ea5c:	cbnz	w1, 44eaac <ferror@plt+0x4b4dc>
  44ea60:	ldr	x1, [x20, #32]
  44ea64:	cbnz	x1, 44ea84 <ferror@plt+0x4b4b4>
  44ea68:	str	x0, [x2]
  44ea6c:	ldr	x1, [sp, #720]
  44ea70:	adrp	x0, 44e000 <ferror@plt+0x4aa30>
  44ea74:	add	x0, x0, #0x2cc
  44ea78:	str	x0, [x1]
  44ea7c:	mov	w0, #0x1                   	// #1
  44ea80:	b	44e490 <ferror@plt+0x4aec0>
  44ea84:	mov	x2, x1
  44ea88:	ldr	x1, [x1]
  44ea8c:	b	44ea64 <ferror@plt+0x4b494>
  44ea90:	ldxr	x3, [x1]
  44ea94:	cbnz	x3, 44eaa0 <ferror@plt+0x4b4d0>
  44ea98:	stlxr	w4, x0, [x1]
  44ea9c:	cbnz	w4, 44ea90 <ferror@plt+0x4b4c0>
  44eaa0:	dmb	ish
  44eaa4:	cmp	x3, #0x0
  44eaa8:	b.eq	44ea6c <ferror@plt+0x4b49c>  // b.none
  44eaac:	mov	x1, x2
  44eab0:	ldar	x3, [x1]
  44eab4:	cbz	x3, 44ea90 <ferror@plt+0x4b4c0>
  44eab8:	mov	x1, x3
  44eabc:	b	44eab0 <ferror@plt+0x4b4e0>
  44eac0:	mov	x3, #0x0                   	// #0
  44eac4:	cmp	x3, x2
  44eac8:	b.ne	44ead0 <ferror@plt+0x4b500>  // b.any
  44eacc:	ret
  44ead0:	ldrb	w5, [x1, x3]
  44ead4:	ldrb	w4, [x0, x3]
  44ead8:	strb	w5, [x0, x3]
  44eadc:	strb	w4, [x1, x3]
  44eae0:	add	x3, x3, #0x1
  44eae4:	b	44eac4 <ferror@plt+0x4b4f4>
  44eae8:	stp	x29, x30, [sp, #-80]!
  44eaec:	mov	x29, sp
  44eaf0:	stp	x19, x20, [sp, #16]
  44eaf4:	mov	x20, x0
  44eaf8:	mov	x19, x2
  44eafc:	stp	x21, x22, [sp, #32]
  44eb00:	mov	x22, x1
  44eb04:	stp	x23, x24, [sp, #48]
  44eb08:	mov	x24, x3
  44eb0c:	str	x25, [sp, #64]
  44eb10:	cmp	x22, #0x1
  44eb14:	b.ls	44ebe4 <ferror@plt+0x4b614>  // b.plast
  44eb18:	lsr	x1, x22, #1
  44eb1c:	add	x25, x20, x19
  44eb20:	mov	x21, #0x0                   	// #0
  44eb24:	mov	x23, #0x1                   	// #1
  44eb28:	mov	x2, x19
  44eb2c:	mov	x0, x20
  44eb30:	madd	x1, x1, x19, x20
  44eb34:	bl	44eac0 <ferror@plt+0x4b4f0>
  44eb38:	mov	x1, x25
  44eb3c:	mov	x0, x20
  44eb40:	blr	x24
  44eb44:	cmp	w0, #0x0
  44eb48:	b.le	44eb68 <ferror@plt+0x4b598>
  44eb4c:	add	x21, x21, #0x1
  44eb50:	cmp	x21, x23
  44eb54:	b.eq	44eb68 <ferror@plt+0x4b598>  // b.none
  44eb58:	madd	x0, x21, x19, x20
  44eb5c:	mov	x2, x19
  44eb60:	mov	x1, x25
  44eb64:	bl	44eac0 <ferror@plt+0x4b4f0>
  44eb68:	add	x23, x23, #0x1
  44eb6c:	add	x25, x25, x19
  44eb70:	cmp	x22, x23
  44eb74:	b.ne	44eb38 <ferror@plt+0x4b568>  // b.any
  44eb78:	madd	x1, x21, x19, x19
  44eb7c:	sub	x23, x22, #0x1
  44eb80:	sub	x23, x23, x21
  44eb84:	add	x25, x20, x1
  44eb88:	cbnz	x21, 44ebac <ferror@plt+0x4b5dc>
  44eb8c:	mov	x3, x24
  44eb90:	mov	x2, x19
  44eb94:	mov	x1, x21
  44eb98:	mov	x0, x20
  44eb9c:	bl	44eae8 <ferror@plt+0x4b518>
  44eba0:	mov	x20, x25
  44eba4:	mov	x22, x23
  44eba8:	b	44eb10 <ferror@plt+0x4b540>
  44ebac:	sub	x1, x1, x19
  44ebb0:	mov	x2, x19
  44ebb4:	add	x1, x20, x1
  44ebb8:	mov	x0, x20
  44ebbc:	bl	44eac0 <ferror@plt+0x4b4f0>
  44ebc0:	cmp	x22, x21, lsl #1
  44ebc4:	b.hi	44eb8c <ferror@plt+0x4b5bc>  // b.pmore
  44ebc8:	mov	x1, x23
  44ebcc:	mov	x0, x25
  44ebd0:	mov	x3, x24
  44ebd4:	mov	x25, x20
  44ebd8:	mov	x23, x21
  44ebdc:	bl	44eae8 <ferror@plt+0x4b518>
  44ebe0:	b	44eba0 <ferror@plt+0x4b5d0>
  44ebe4:	ldp	x19, x20, [sp, #16]
  44ebe8:	ldp	x21, x22, [sp, #32]
  44ebec:	ldp	x23, x24, [sp, #48]
  44ebf0:	ldr	x25, [sp, #64]
  44ebf4:	ldp	x29, x30, [sp], #80
  44ebf8:	ret
  44ebfc:	cmp	x3, x1
  44ec00:	b.ne	44ec10 <ferror@plt+0x4b640>  // b.any
  44ec04:	strb	w0, [x3]
  44ec08:	sturh	w2, [x3, #1]
  44ec0c:	ret
  44ec10:	ldrb	w4, [x3, #-1]!
  44ec14:	strb	w4, [x3, #3]
  44ec18:	b	44ebfc <ferror@plt+0x4b62c>
  44ec1c:	ldr	x7, [x1]
  44ec20:	mov	w6, w0
  44ec24:	cmp	x7, x2
  44ec28:	b.eq	44ecc0 <ferror@plt+0x4b6f0>  // b.none
  44ec2c:	add	x0, x7, #0x1
  44ec30:	str	x0, [x1]
  44ec34:	tst	x4, #0x10000
  44ec38:	mov	w0, #0xb                   	// #11
  44ec3c:	ldrb	w2, [x7]
  44ec40:	csel	w0, w0, wzr, ne  // ne = any
  44ec44:	cbz	x3, 44ec68 <ferror@plt+0x4b698>
  44ec48:	and	x6, x6, #0xff
  44ec4c:	and	x2, x2, #0xff
  44ec50:	ldrb	w1, [x3, x6]
  44ec54:	ldrb	w2, [x3, x2]
  44ec58:	mov	w6, #0x1                   	// #1
  44ec5c:	cmp	w2, w1
  44ec60:	b.cs	44ec70 <ferror@plt+0x4b6a0>  // b.hs, b.nlast
  44ec64:	ret
  44ec68:	and	w1, w6, #0xff
  44ec6c:	b	44ec58 <ferror@plt+0x4b688>
  44ec70:	cbz	x3, 44ecac <ferror@plt+0x4b6dc>
  44ec74:	ldrb	w0, [x3, x1]
  44ec78:	ubfx	x0, x0, #3, #5
  44ec7c:	ldrsb	w4, [x5, x0]
  44ec80:	add	x7, x5, x0
  44ec84:	cbz	x3, 44ecb8 <ferror@plt+0x4b6e8>
  44ec88:	ldrb	w0, [x3, x1]
  44ec8c:	and	w0, w0, #0x7
  44ec90:	lsl	w0, w6, w0
  44ec94:	add	x1, x1, #0x1
  44ec98:	sxtb	w0, w0
  44ec9c:	orr	w0, w4, w0
  44eca0:	strb	w0, [x7]
  44eca4:	mov	w0, #0x0                   	// #0
  44eca8:	b	44ec5c <ferror@plt+0x4b68c>
  44ecac:	asr	w0, w1, #3
  44ecb0:	sxtw	x0, w0
  44ecb4:	b	44ec7c <ferror@plt+0x4b6ac>
  44ecb8:	and	w0, w1, #0x7
  44ecbc:	b	44ec90 <ferror@plt+0x4b6c0>
  44ecc0:	mov	w0, #0xb                   	// #11
  44ecc4:	b	44ec64 <ferror@plt+0x4b694>
  44ecc8:	stp	x29, x30, [sp, #-64]!
  44eccc:	mov	x29, sp
  44ecd0:	ldr	x3, [x0]
  44ecd4:	stp	x19, x20, [sp, #16]
  44ecd8:	mov	x19, x2
  44ecdc:	add	x4, x3, #0x1
  44ece0:	str	x21, [sp, #32]
  44ece4:	str	x4, [sp, #56]
  44ece8:	mov	x20, x0
  44ecec:	ldrb	w2, [x3]
  44ecf0:	cbz	w2, 44ed7c <ferror@plt+0x4b7ac>
  44ecf4:	sub	w2, w2, #0x6
  44ecf8:	and	w0, w2, #0xff
  44ecfc:	cmp	w0, #0x17
  44ed00:	b.hi	44ed58 <ferror@plt+0x4b788>  // b.pmore
  44ed04:	cmp	w2, #0x17
  44ed08:	b.hi	44ed58 <ferror@plt+0x4b788>  // b.pmore
  44ed0c:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44ed10:	add	x0, x0, #0x2c0
  44ed14:	ldrb	w0, [x0, w2, uxtw]
  44ed18:	adr	x2, 44ed24 <ferror@plt+0x4b754>
  44ed1c:	add	x0, x2, w0, sxtb #2
  44ed20:	br	x0
  44ed24:	ldrb	w21, [x3, #1]
  44ed28:	mov	x2, x19
  44ed2c:	add	x0, sp, #0x38
  44ed30:	bl	44ee60 <ferror@plt+0x4b890>
  44ed34:	and	w0, w0, #0xff
  44ed38:	ubfiz	x2, x21, #3, #8
  44ed3c:	ldrb	w1, [x19, x2]
  44ed40:	and	w3, w1, #0x3
  44ed44:	cmp	w3, #0x3
  44ed48:	b.ne	44ed54 <ferror@plt+0x4b784>  // b.any
  44ed4c:	bfxil	w1, w0, #0, #2
  44ed50:	strb	w1, [x19, x2]
  44ed54:	cbnz	w0, 44ed7c <ferror@plt+0x4b7ac>
  44ed58:	mov	w0, #0x0                   	// #0
  44ed5c:	b	44ed88 <ferror@plt+0x4b7b8>
  44ed60:	ldrsb	w1, [x3, #2]
  44ed64:	ldrb	w0, [x3, #1]
  44ed68:	adds	w1, w0, w1, lsl #8
  44ed6c:	b.mi	44ed58 <ferror@plt+0x4b788>  // b.first
  44ed70:	add	x3, x3, #0x3
  44ed74:	add	x3, x3, w1, sxtw
  44ed78:	str	x3, [sp, #56]
  44ed7c:	ldr	x0, [sp, #56]
  44ed80:	str	x0, [x20]
  44ed84:	mov	w0, #0x1                   	// #1
  44ed88:	ldp	x19, x20, [sp, #16]
  44ed8c:	ldr	x21, [sp, #32]
  44ed90:	ldp	x29, x30, [sp], #64
  44ed94:	ret
  44ed98:	add	x2, x3, #0x3
  44ed9c:	str	x2, [sp, #56]
  44eda0:	ldrsb	w0, [x3, #4]
  44eda4:	ldrb	w1, [x3, #3]
  44eda8:	add	w0, w1, w0, lsl #8
  44edac:	cbnz	w0, 44ed58 <ferror@plt+0x4b788>
  44edb0:	str	x4, [sp, #56]
  44edb4:	ldrsb	w1, [x3, #2]
  44edb8:	ldrb	w0, [x3, #1]
  44edbc:	add	w1, w0, w1, lsl #8
  44edc0:	add	x1, x2, w1, sxtw
  44edc4:	str	x1, [sp, #56]
  44edc8:	b	44ed7c <ferror@plt+0x4b7ac>
  44edcc:	ldrb	w0, [x3, #1]
  44edd0:	lsl	x0, x0, #3
  44edd4:	ldrb	w0, [x19, x0]
  44edd8:	tst	x0, #0x3
  44eddc:	b.ne	44ed7c <ferror@plt+0x4b7ac>  // b.any
  44ede0:	b	44ed58 <ferror@plt+0x4b788>
  44ede4:	stp	x29, x30, [sp, #-48]!
  44ede8:	mov	x29, sp
  44edec:	stp	x19, x20, [sp, #16]
  44edf0:	mov	x19, x1
  44edf4:	mov	x20, x2
  44edf8:	str	x0, [sp, #40]
  44edfc:	ldr	x0, [sp, #40]
  44ee00:	cmp	x0, x19
  44ee04:	b.cc	44ee10 <ferror@plt+0x4b840>  // b.lo, b.ul, b.last
  44ee08:	mov	w0, #0x1                   	// #1
  44ee0c:	b	44ee54 <ferror@plt+0x4b884>
  44ee10:	ldrb	w1, [x0]
  44ee14:	cmp	w1, #0xf
  44ee18:	b.ne	44ee3c <ferror@plt+0x4b86c>  // b.any
  44ee1c:	add	x1, x0, #0x1
  44ee20:	str	x1, [sp, #40]
  44ee24:	add	x1, x0, #0x3
  44ee28:	ldrsb	w3, [x0, #2]
  44ee2c:	ldrb	w0, [x0, #1]
  44ee30:	add	w0, w0, w3, lsl #8
  44ee34:	add	x0, x1, w0, sxtw
  44ee38:	b	44edf8 <ferror@plt+0x4b828>
  44ee3c:	mov	x2, x20
  44ee40:	mov	x1, x19
  44ee44:	add	x0, sp, #0x28
  44ee48:	bl	44ecc8 <ferror@plt+0x4b6f8>
  44ee4c:	ands	w0, w0, #0xff
  44ee50:	b.ne	44edfc <ferror@plt+0x4b82c>  // b.any
  44ee54:	ldp	x19, x20, [sp, #16]
  44ee58:	ldp	x29, x30, [sp], #48
  44ee5c:	ret
  44ee60:	stp	x29, x30, [sp, #-64]!
  44ee64:	mov	x29, sp
  44ee68:	stp	x21, x22, [sp, #32]
  44ee6c:	mov	x21, x0
  44ee70:	mov	x22, x1
  44ee74:	ldr	x0, [x0]
  44ee78:	stp	x19, x20, [sp, #16]
  44ee7c:	mov	x20, x2
  44ee80:	add	x0, x0, #0x2
  44ee84:	str	x0, [sp, #56]
  44ee88:	ldr	x3, [sp, #56]
  44ee8c:	cmp	x3, x22
  44ee90:	b.cs	44eef4 <ferror@plt+0x4b924>  // b.hs, b.nlast
  44ee94:	ldrb	w0, [x3]
  44ee98:	cmp	w0, #0x7
  44ee9c:	b.eq	44ef84 <ferror@plt+0x4b9b4>  // b.none
  44eea0:	cmp	w0, #0xf
  44eea4:	b.ne	44ef94 <ferror@plt+0x4b9c4>  // b.any
  44eea8:	add	x0, x3, #0x1
  44eeac:	str	x0, [sp, #56]
  44eeb0:	add	x3, x3, #0x3
  44eeb4:	ldursb	w19, [x3, #-1]
  44eeb8:	ldurb	w0, [x3, #-2]
  44eebc:	str	x3, [sp, #56]
  44eec0:	adds	w19, w0, w19, lsl #8
  44eec4:	b.mi	44ee88 <ferror@plt+0x4b8b8>  // b.first
  44eec8:	sxtw	x19, w19
  44eecc:	ldr	x0, [sp, #56]
  44eed0:	sub	x2, x19, #0x3
  44eed4:	add	x1, x0, x2
  44eed8:	ldrb	w2, [x0, x2]
  44eedc:	cmp	w2, #0xe
  44eee0:	b.ne	44ef50 <ferror@plt+0x4b980>  // b.any
  44eee4:	mov	x2, x20
  44eee8:	bl	44ede4 <ferror@plt+0x4b814>
  44eeec:	tst	w0, #0xff
  44eef0:	b.ne	44ef08 <ferror@plt+0x4b938>  // b.any
  44eef4:	mov	w0, #0x0                   	// #0
  44eef8:	ldp	x19, x20, [sp, #16]
  44eefc:	ldp	x21, x22, [sp, #32]
  44ef00:	ldp	x29, x30, [sp], #64
  44ef04:	ret
  44ef08:	ldr	x0, [sp, #56]
  44ef0c:	add	x3, x0, x19
  44ef10:	str	x3, [sp, #56]
  44ef14:	ldrb	w0, [x0, x19]
  44ef18:	cmp	w0, #0xf
  44ef1c:	b.ne	44ef50 <ferror@plt+0x4b980>  // b.any
  44ef20:	add	x0, x3, #0x1
  44ef24:	str	x0, [sp, #56]
  44ef28:	ldrb	w0, [x3, #1]
  44ef2c:	ldrsb	w19, [x3, #2]
  44ef30:	add	w19, w0, w19, lsl #8
  44ef34:	add	x0, x3, #0x3
  44ef38:	str	x0, [sp, #56]
  44ef3c:	add	x0, x0, w19, sxtw
  44ef40:	ldurb	w0, [x0, #-3]
  44ef44:	cmp	w0, #0xe
  44ef48:	b.eq	44eec8 <ferror@plt+0x4b8f8>  // b.none
  44ef4c:	str	x3, [sp, #56]
  44ef50:	ldr	x0, [sp, #56]
  44ef54:	ldurb	w2, [x0, #-2]
  44ef58:	ldursb	w1, [x0, #-1]
  44ef5c:	add	w1, w2, w1, lsl #8
  44ef60:	mov	x2, x20
  44ef64:	sxtw	x19, w1
  44ef68:	add	x1, x0, w1, sxtw
  44ef6c:	bl	44ede4 <ferror@plt+0x4b814>
  44ef70:	tst	w0, #0xff
  44ef74:	b.eq	44eef4 <ferror@plt+0x4b924>  // b.none
  44ef78:	ldr	x0, [sp, #56]
  44ef7c:	add	x0, x0, x19
  44ef80:	b	44ee84 <ferror@plt+0x4b8b4>
  44ef84:	add	x3, x3, #0x2
  44ef88:	mov	w0, #0x1                   	// #1
  44ef8c:	str	x3, [x21]
  44ef90:	b	44eef8 <ferror@plt+0x4b928>
  44ef94:	mov	x2, x20
  44ef98:	mov	x1, x22
  44ef9c:	add	x0, sp, #0x38
  44efa0:	bl	44ecc8 <ferror@plt+0x4b6f8>
  44efa4:	tst	w0, #0xff
  44efa8:	b.ne	44ee88 <ferror@plt+0x4b8b8>  // b.any
  44efac:	b	44eef4 <ferror@plt+0x4b924>
  44efb0:	stp	x29, x30, [sp, #-112]!
  44efb4:	mov	x2, #0x100                 	// #256
  44efb8:	mov	w1, #0x0                   	// #0
  44efbc:	mov	x29, sp
  44efc0:	stp	x23, x24, [sp, #48]
  44efc4:	ldr	x24, [x0, #32]
  44efc8:	stp	x21, x22, [sp, #32]
  44efcc:	mov	x21, x0
  44efd0:	stp	x19, x20, [sp, #16]
  44efd4:	mov	w22, #0x0                   	// #0
  44efd8:	stp	x25, x26, [sp, #64]
  44efdc:	mov	w25, #0x1                   	// #1
  44efe0:	stp	x27, x28, [sp, #80]
  44efe4:	sub	sp, sp, #0x30
  44efe8:	adrp	x27, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44efec:	ldr	x19, [x0]
  44eff0:	adrp	x28, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  44eff4:	ldr	x23, [x0, #16]
  44eff8:	mov	x0, x24
  44effc:	bl	403000 <memset@plt>
  44f000:	mov	x26, sp
  44f004:	ldrb	w0, [x21, #56]
  44f008:	mov	w1, #0xfffffff6            	// #-10
  44f00c:	add	x27, x27, #0x2d8
  44f010:	add	x28, x28, #0x4a0
  44f014:	and	w0, w0, w1
  44f018:	add	x23, x19, x23
  44f01c:	orr	w0, w0, #0x8
  44f020:	mov	w2, #0x5                   	// #5
  44f024:	strb	w0, [x21, #56]
  44f028:	cmp	x19, x23
  44f02c:	b.eq	44f03c <ferror@plt+0x4ba6c>  // b.none
  44f030:	ldrb	w0, [x19]
  44f034:	cmp	w0, #0x1
  44f038:	b.ne	44f074 <ferror@plt+0x4baa4>  // b.any
  44f03c:	ldrb	w1, [x21, #56]
  44f040:	ubfx	x0, x1, #0, #1
  44f044:	orr	w25, w25, w0
  44f048:	and	w25, w25, #0x1
  44f04c:	bfxil	w1, w25, #0, #1
  44f050:	strb	w1, [x21, #56]
  44f054:	cbz	w22, 44f098 <ferror@plt+0x4bac8>
  44f058:	sub	w22, w22, #0x1
  44f05c:	mov	w25, #0x1                   	// #1
  44f060:	ldr	x20, [x26, w22, uxtw #3]
  44f064:	b	44f06c <ferror@plt+0x4ba9c>
  44f068:	add	x20, x19, #0x1
  44f06c:	mov	x19, x20
  44f070:	b	44f028 <ferror@plt+0x4ba58>
  44f074:	cmp	w0, #0x1d
  44f078:	b.hi	44f324 <ferror@plt+0x4bd54>  // b.pmore
  44f07c:	ldrh	w0, [x27, w0, uxtw #1]
  44f080:	adr	x1, 44f08c <ferror@plt+0x4babc>
  44f084:	add	x0, x1, w0, sxth #2
  44f088:	br	x0
  44f08c:	ldrb	w0, [x21, #56]
  44f090:	orr	w0, w0, #0x1
  44f094:	strb	w0, [x21, #56]
  44f098:	mov	w0, #0x0                   	// #0
  44f09c:	mov	sp, x29
  44f0a0:	ldp	x19, x20, [sp, #16]
  44f0a4:	ldp	x21, x22, [sp, #32]
  44f0a8:	ldp	x23, x24, [sp, #48]
  44f0ac:	ldp	x25, x26, [sp, #64]
  44f0b0:	ldp	x27, x28, [sp, #80]
  44f0b4:	ldp	x29, x30, [sp], #112
  44f0b8:	ret
  44f0bc:	ldrb	w0, [x19, #2]
  44f0c0:	mov	w1, #0x1                   	// #1
  44f0c4:	strb	w1, [x24, x0]
  44f0c8:	mov	x20, x23
  44f0cc:	mov	w25, #0x0                   	// #0
  44f0d0:	b	44f06c <ferror@plt+0x4ba9c>
  44f0d4:	ldrb	w1, [x19, #1]
  44f0d8:	mov	w3, #0x1                   	// #1
  44f0dc:	lsl	w1, w1, #3
  44f0e0:	sub	w1, w1, #0x1
  44f0e4:	sxtw	x1, w1
  44f0e8:	cmn	w1, #0x1
  44f0ec:	b.eq	44f0c8 <ferror@plt+0x4baf8>  // b.none
  44f0f0:	asr	w0, w1, #3
  44f0f4:	and	w4, w1, #0x7
  44f0f8:	add	x0, x19, w0, sxtw
  44f0fc:	ldrb	w0, [x0, #2]
  44f100:	asr	w0, w0, w4
  44f104:	tbz	w0, #0, 44f10c <ferror@plt+0x4bb3c>
  44f108:	strb	w3, [x24, x1]
  44f10c:	sub	x1, x1, #0x1
  44f110:	b	44f0e8 <ferror@plt+0x4bb18>
  44f114:	ldrb	w0, [x19, #1]
  44f118:	mov	w1, #0x1                   	// #1
  44f11c:	ubfiz	x0, x0, #3, #8
  44f120:	cmp	w0, #0xff
  44f124:	b.le	44f168 <ferror@plt+0x4bb98>
  44f128:	ldrb	w1, [x19, #1]
  44f12c:	mov	w3, #0x1                   	// #1
  44f130:	lsl	w1, w1, #3
  44f134:	sub	w1, w1, #0x1
  44f138:	sxtw	x1, w1
  44f13c:	cmn	w1, #0x1
  44f140:	b.eq	44f0c8 <ferror@plt+0x4baf8>  // b.none
  44f144:	asr	w0, w1, #3
  44f148:	and	w4, w1, #0x7
  44f14c:	add	x0, x19, w0, sxtw
  44f150:	ldrb	w0, [x0, #2]
  44f154:	asr	w0, w0, w4
  44f158:	tbnz	w0, #0, 44f160 <ferror@plt+0x4bb90>
  44f15c:	strb	w3, [x24, x1]
  44f160:	sub	x1, x1, #0x1
  44f164:	b	44f13c <ferror@plt+0x4bb6c>
  44f168:	strb	w1, [x24, x0]
  44f16c:	add	x0, x0, #0x1
  44f170:	b	44f120 <ferror@plt+0x4bb50>
  44f174:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  44f178:	add	x1, x1, #0x370
  44f17c:	mov	x0, #0x0                   	// #0
  44f180:	ldrb	w3, [x0, x1]
  44f184:	cmp	w3, #0x1
  44f188:	b.ne	44f190 <ferror@plt+0x4bbc0>  // b.any
  44f18c:	strb	w3, [x24, x0]
  44f190:	add	x0, x0, #0x1
  44f194:	cmp	x0, #0x100
  44f198:	b.ne	44f180 <ferror@plt+0x4bbb0>  // b.any
  44f19c:	b	44f0c8 <ferror@plt+0x4baf8>
  44f1a0:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  44f1a4:	add	x1, x1, #0x370
  44f1a8:	mov	x0, #0x0                   	// #0
  44f1ac:	mov	w3, #0x1                   	// #1
  44f1b0:	ldrb	w4, [x0, x1]
  44f1b4:	cmp	w4, #0x1
  44f1b8:	b.eq	44f1c0 <ferror@plt+0x4bbf0>  // b.none
  44f1bc:	strb	w3, [x24, x0]
  44f1c0:	add	x0, x0, #0x1
  44f1c4:	cmp	x0, #0x100
  44f1c8:	b.ne	44f1b0 <ferror@plt+0x4bbe0>  // b.any
  44f1cc:	b	44f0c8 <ferror@plt+0x4baf8>
  44f1d0:	ldrb	w1, [x24, #10]
  44f1d4:	mov	x0, #0x0                   	// #0
  44f1d8:	mov	w3, #0x1                   	// #1
  44f1dc:	strb	w3, [x24, x0]
  44f1e0:	add	x0, x0, #0x1
  44f1e4:	cmp	x0, #0x100
  44f1e8:	b.ne	44f1dc <ferror@plt+0x4bc0c>  // b.any
  44f1ec:	ldr	x0, [x21, #24]
  44f1f0:	tbnz	w0, #6, 44f1fc <ferror@plt+0x4bc2c>
  44f1f4:	strb	w1, [x24, #10]
  44f1f8:	b	44f0c8 <ferror@plt+0x4baf8>
  44f1fc:	ldrb	w0, [x21, #56]
  44f200:	and	w25, w0, #0x1
  44f204:	tbnz	w0, #0, 44f098 <ferror@plt+0x4bac8>
  44f208:	mov	x20, x23
  44f20c:	b	44f06c <ferror@plt+0x4ba9c>
  44f210:	ldrb	w0, [x19, #1]
  44f214:	ldrsb	w1, [x19, #2]
  44f218:	add	w1, w0, w1, lsl #8
  44f21c:	cmp	w1, #0x0
  44f220:	sxtw	x0, w1
  44f224:	add	x0, x0, #0x3
  44f228:	add	x20, x19, x0
  44f22c:	b.gt	44f06c <ferror@plt+0x4ba9c>
  44f230:	ldrb	w0, [x19, x0]
  44f234:	cmp	w0, #0xf
  44f238:	ccmp	w0, #0x15, #0x4, ne  // ne = any
  44f23c:	b.ne	44f06c <ferror@plt+0x4ba9c>  // b.any
  44f240:	ldrsb	w0, [x20, #2]
  44f244:	add	x1, x20, #0x3
  44f248:	ldrb	w20, [x20, #1]
  44f24c:	add	w20, w20, w0, lsl #8
  44f250:	add	x20, x1, w20, sxtw
  44f254:	cbz	w22, 44f06c <ferror@plt+0x4ba9c>
  44f258:	sub	w0, w22, #0x1
  44f25c:	ldr	x1, [x26, w0, uxtw #3]
  44f260:	cmp	x1, x20
  44f264:	csel	w22, w22, w0, ne  // ne = any
  44f268:	b	44f06c <ferror@plt+0x4ba9c>
  44f26c:	mov	w4, #0x0                   	// #0
  44f270:	ldrsb	w3, [x19, #2]
  44f274:	add	x20, x19, #0x3
  44f278:	ldrb	w0, [x19, #1]
  44f27c:	add	w3, w0, w3, lsl #8
  44f280:	add	x3, x20, w3, sxtw
  44f284:	cmp	x3, x23
  44f288:	b.cs	44f2f4 <ferror@plt+0x4bd24>  // b.hs, b.nlast
  44f28c:	cmp	w2, w22
  44f290:	b.ne	44f2e0 <ferror@plt+0x4bd10>  // b.any
  44f294:	ldr	w0, [x28]
  44f298:	mov	w1, #0x13                  	// #19
  44f29c:	str	x3, [x29, #96]
  44f2a0:	str	w4, [x29, #104]
  44f2a4:	mul	w0, w0, w1
  44f2a8:	cmp	w2, w0
  44f2ac:	b.hi	44f328 <ferror@plt+0x4bd58>  // b.pmore
  44f2b0:	lsl	w5, w2, #1
  44f2b4:	ubfiz	x0, x2, #4, #31
  44f2b8:	sub	sp, sp, x0
  44f2bc:	ubfiz	x2, x2, #3, #32
  44f2c0:	mov	x1, x26
  44f2c4:	mov	x0, sp
  44f2c8:	str	w5, [x29, #108]
  44f2cc:	bl	402cd0 <memcpy@plt>
  44f2d0:	ldp	w4, w5, [x29, #104]
  44f2d4:	mov	x26, x0
  44f2d8:	ldr	x3, [x29, #96]
  44f2dc:	mov	w2, w5
  44f2e0:	str	x3, [x26, w22, uxtw #3]
  44f2e4:	add	w22, w22, #0x1
  44f2e8:	cbz	w4, 44f06c <ferror@plt+0x4ba9c>
  44f2ec:	add	x20, x19, #0x5
  44f2f0:	b	44f06c <ferror@plt+0x4ba9c>
  44f2f4:	ldrb	w0, [x21, #56]
  44f2f8:	orr	w0, w0, #0x1
  44f2fc:	strb	w0, [x21, #56]
  44f300:	b	44f2e8 <ferror@plt+0x4bd18>
  44f304:	ldrsb	w0, [x19, #4]
  44f308:	ldrb	w1, [x19, #3]
  44f30c:	add	w0, w1, w0, lsl #8
  44f310:	cbnz	w0, 44f2ec <ferror@plt+0x4bd1c>
  44f314:	mov	w4, #0x1                   	// #1
  44f318:	b	44f270 <ferror@plt+0x4bca0>
  44f31c:	add	x20, x19, #0x3
  44f320:	b	44f06c <ferror@plt+0x4ba9c>
  44f324:	bl	403180 <abort@plt>
  44f328:	mov	w0, #0xfffffffe            	// #-2
  44f32c:	b	44f09c <ferror@plt+0x4bacc>
  44f330:	stp	x29, x30, [sp, #-384]!
  44f334:	mov	x29, sp
  44f338:	ldr	x11, [x0]
  44f33c:	stp	x19, x20, [sp, #16]
  44f340:	str	x0, [x29, #352]
  44f344:	ldr	x0, [x0, #16]
  44f348:	stp	x21, x22, [sp, #32]
  44f34c:	mov	x22, x1
  44f350:	add	x0, x11, x0
  44f354:	str	x0, [x29, #304]
  44f358:	ldr	x0, [x29, #352]
  44f35c:	stp	x23, x24, [sp, #48]
  44f360:	stp	x25, x26, [sp, #64]
  44f364:	ldr	x0, [x0, #40]
  44f368:	str	x0, [x29, #344]
  44f36c:	ldr	x0, [x29, #352]
  44f370:	stp	x27, x28, [sp, #80]
  44f374:	sub	sp, sp, #0x30
  44f378:	str	w2, [x29, #328]
  44f37c:	mov	x28, x6
  44f380:	ldr	x0, [x0, #48]
  44f384:	str	x0, [x29, #272]
  44f388:	str	w5, [x29, #360]
  44f38c:	mov	x20, sp
  44f390:	add	x0, x0, #0x1
  44f394:	str	x0, [x29, #320]
  44f398:	ldr	x0, [x29, #272]
  44f39c:	cbz	x0, 44f438 <ferror@plt+0x4be68>
  44f3a0:	ldr	x0, [x29, #320]
  44f3a4:	lsl	x0, x0, #3
  44f3a8:	add	x0, x0, #0xf
  44f3ac:	and	x0, x0, #0xfffffffffffffff0
  44f3b0:	sub	sp, sp, x0
  44f3b4:	mov	x8, sp
  44f3b8:	sub	sp, sp, x0
  44f3bc:	mov	x9, sp
  44f3c0:	sub	sp, sp, x0
  44f3c4:	mov	x1, sp
  44f3c8:	sub	sp, sp, x0
  44f3cc:	str	x1, [x29, #264]
  44f3d0:	mov	x1, sp
  44f3d4:	sub	sp, sp, x0
  44f3d8:	str	x1, [x29, #256]
  44f3dc:	mov	x1, sp
  44f3e0:	sub	sp, sp, x0
  44f3e4:	str	x1, [x29, #232]
  44f3e8:	mov	x1, sp
  44f3ec:	sub	sp, sp, x0
  44f3f0:	str	x1, [x29, #224]
  44f3f4:	mov	x24, sp
  44f3f8:	sub	sp, sp, x0
  44f3fc:	mov	x1, sp
  44f400:	sub	sp, sp, x0
  44f404:	mov	x0, sp
  44f408:	stp	x0, x1, [x29, #192]
  44f40c:	ldr	w0, [x29, #360]
  44f410:	tbz	w0, #31, 44f454 <ferror@plt+0x4be84>
  44f414:	mov	w0, #0xffffffff            	// #-1
  44f418:	mov	sp, x29
  44f41c:	ldp	x19, x20, [sp, #16]
  44f420:	ldp	x21, x22, [sp, #32]
  44f424:	ldp	x23, x24, [sp, #48]
  44f428:	ldp	x25, x26, [sp, #64]
  44f42c:	ldp	x27, x28, [sp, #80]
  44f430:	ldp	x29, x30, [sp], #384
  44f434:	ret
  44f438:	mov	x24, #0x0                   	// #0
  44f43c:	mov	x9, #0x0                   	// #0
  44f440:	mov	x8, #0x0                   	// #0
  44f444:	stp	xzr, xzr, [x29, #192]
  44f448:	stp	xzr, xzr, [x29, #224]
  44f44c:	stp	xzr, xzr, [x29, #256]
  44f450:	b	44f40c <ferror@plt+0x4be3c>
  44f454:	ldr	w0, [x29, #328]
  44f458:	ldr	w1, [x29, #360]
  44f45c:	add	w0, w0, w4
  44f460:	cmp	w0, w1
  44f464:	b.lt	44f414 <ferror@plt+0x4be44>  // b.tstop
  44f468:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  44f46c:	add	x1, x1, #0x370
  44f470:	add	x1, x1, #0x100
  44f474:	mov	x0, #0x0                   	// #0
  44f478:	ldr	x2, [x29, #320]
  44f47c:	add	x0, x0, #0x1
  44f480:	cmp	x0, x2
  44f484:	b.cc	44f5b0 <ferror@plt+0x4bfe0>  // b.lo, b.ul, b.last
  44f488:	cmp	w4, #0x0
  44f48c:	ccmp	x22, #0x0, #0x4, eq  // eq = none
  44f490:	b.ne	44f5e0 <ferror@plt+0x4c010>  // b.any
  44f494:	ldr	w0, [x29, #328]
  44f498:	mov	x5, x22
  44f49c:	mov	x22, x3
  44f4a0:	str	w4, [x29, #328]
  44f4a4:	str	w0, [x29, #364]
  44f4a8:	ldrsw	x0, [x29, #364]
  44f4ac:	sxtw	x3, w7
  44f4b0:	str	x0, [x29, #240]
  44f4b4:	ldr	w0, [x29, #364]
  44f4b8:	add	x27, x5, w0, sxtw
  44f4bc:	ldr	w0, [x29, #328]
  44f4c0:	add	x0, x22, w0, sxtw
  44f4c4:	str	x0, [x29, #288]
  44f4c8:	ldr	w0, [x29, #364]
  44f4cc:	cmp	w0, w7
  44f4d0:	b.lt	44f5ec <ferror@plt+0x4c01c>  // b.tstop
  44f4d4:	add	x0, x5, x3
  44f4d8:	mov	x3, x22
  44f4dc:	str	x0, [x29, #336]
  44f4e0:	ldrsw	x0, [x29, #360]
  44f4e4:	str	x0, [x29, #216]
  44f4e8:	ldr	w0, [x29, #364]
  44f4ec:	ldr	w1, [x29, #360]
  44f4f0:	cmp	w0, #0x0
  44f4f4:	ccmp	w0, w1, #0x1, gt
  44f4f8:	ldr	x0, [x29, #216]
  44f4fc:	b.lt	44f600 <ferror@plt+0x4c030>  // b.tstop
  44f500:	ldr	x4, [x29, #336]
  44f504:	add	x19, x5, x0
  44f508:	ldr	w0, [x29, #364]
  44f50c:	mov	w21, #0x0                   	// #0
  44f510:	mov	w26, #0x5                   	// #5
  44f514:	mov	w10, #0x0                   	// #0
  44f518:	cmp	w0, #0x0
  44f51c:	mov	x23, #0x100                 	// #256
  44f520:	csel	x0, x5, x22, ne  // ne = any
  44f524:	mov	x25, #0x101                 	// #257
  44f528:	str	xzr, [x29, #208]
  44f52c:	str	wzr, [x29, #252]
  44f530:	str	x0, [x29, #296]
  44f534:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  44f538:	add	x0, x0, #0x4a0
  44f53c:	str	x0, [x29, #280]
  44f540:	str	xzr, [x29, #312]
  44f544:	ldr	x0, [x29, #304]
  44f548:	cmp	x11, x0
  44f54c:	b.ne	44f99c <ferror@plt+0x4c3cc>  // b.any
  44f550:	cmp	x3, x19
  44f554:	b.eq	44f724 <ferror@plt+0x4c154>  // b.none
  44f558:	ldr	w0, [x29, #364]
  44f55c:	cmp	w0, #0x0
  44f560:	ldr	x0, [x29, #312]
  44f564:	ccmp	x5, x0, #0x2, ne  // ne = any
  44f568:	b.hi	44f614 <ferror@plt+0x4c044>  // b.pmore
  44f56c:	cmp	x0, x27
  44f570:	cset	w0, ls  // ls = plast
  44f574:	ldr	x1, [x29, #336]
  44f578:	cmp	x1, x4
  44f57c:	cset	w1, eq  // eq = none
  44f580:	cmp	w1, w0
  44f584:	b.ne	44f61c <ferror@plt+0x4c04c>  // b.any
  44f588:	ldr	x0, [x29, #312]
  44f58c:	cmp	x19, x0
  44f590:	cset	w0, hi  // hi = pmore
  44f594:	cbz	w21, 44f6e8 <ferror@plt+0x4c118>
  44f598:	ldr	w1, [x29, #252]
  44f59c:	eor	w1, w1, #0x1
  44f5a0:	orr	w0, w1, w0
  44f5a4:	cbz	w0, 44f660 <ferror@plt+0x4c090>
  44f5a8:	mov	x0, #0x0                   	// #0
  44f5ac:	b	44f644 <ferror@plt+0x4c074>
  44f5b0:	ldr	x2, [x29, #256]
  44f5b4:	lsl	x5, x0, #3
  44f5b8:	str	x1, [x9, x0, lsl #3]
  44f5bc:	str	x1, [x8, x0, lsl #3]
  44f5c0:	str	x1, [x2, x0, lsl #3]
  44f5c4:	ldr	x2, [x29, #264]
  44f5c8:	str	x1, [x2, x0, lsl #3]
  44f5cc:	ldrb	w2, [x24, x5]
  44f5d0:	and	w2, w2, #0xffffffe0
  44f5d4:	orr	w2, w2, #0x3
  44f5d8:	strb	w2, [x24, x5]
  44f5dc:	b	44f478 <ferror@plt+0x4bea8>
  44f5e0:	mov	x5, #0x0                   	// #0
  44f5e4:	str	wzr, [x29, #364]
  44f5e8:	b	44f4a8 <ferror@plt+0x4bed8>
  44f5ec:	ldr	x0, [x29, #240]
  44f5f0:	str	x27, [x29, #336]
  44f5f4:	sub	x3, x3, x0
  44f5f8:	add	x3, x22, x3
  44f5fc:	b	44f4e0 <ferror@plt+0x4bf10>
  44f600:	ldr	x1, [x29, #240]
  44f604:	mov	x4, x3
  44f608:	sub	x19, x0, x1
  44f60c:	add	x19, x22, x19
  44f610:	b	44f508 <ferror@plt+0x4bf38>
  44f614:	mov	w0, #0x0                   	// #0
  44f618:	b	44f574 <ferror@plt+0x4bfa4>
  44f61c:	ldr	x0, [x29, #336]
  44f620:	cmp	x0, x4
  44f624:	cset	w0, ne  // ne = any
  44f628:	b	44f594 <ferror@plt+0x4bfc4>
  44f62c:	ldr	x2, [x29, #232]
  44f630:	ldr	x1, [x8, x0, lsl #3]
  44f634:	str	x1, [x2, x0, lsl #3]
  44f638:	ldr	x2, [x29, #224]
  44f63c:	ldr	x1, [x9, x0, lsl #3]
  44f640:	str	x1, [x2, x0, lsl #3]
  44f644:	ldr	x1, [x29, #320]
  44f648:	add	x0, x0, #0x1
  44f64c:	cmp	x0, x1
  44f650:	b.cc	44f62c <ferror@plt+0x4c05c>  // b.lo, b.ul, b.last
  44f654:	mov	w0, #0x1                   	// #1
  44f658:	str	w0, [x29, #252]
  44f65c:	str	x19, [x29, #312]
  44f660:	cbz	w21, 450ce8 <ferror@plt+0x4d718>
  44f664:	sub	w0, w21, #0x1
  44f668:	ldr	x0, [x20, x0, lsl #3]
  44f66c:	cmp	x0, #0x0
  44f670:	csel	x19, x19, x0, eq  // eq = none
  44f674:	sub	w0, w21, #0x2
  44f678:	ldr	x7, [x20, x0, lsl #3]
  44f67c:	sub	w0, w21, #0x3
  44f680:	sub	w21, w21, #0x4
  44f684:	lsl	x0, x0, #3
  44f688:	ldrsw	x23, [x20, x0]
  44f68c:	ubfiz	x0, x21, #3, #32
  44f690:	ldrsw	x25, [x20, x0]
  44f694:	mov	x0, x23
  44f698:	sub	w1, w21, #0x3
  44f69c:	cmp	x0, x25
  44f6a0:	b.cs	450c6c <ferror@plt+0x4d69c>  // b.hs, b.nlast
  44f6a4:	cbz	x7, 44f660 <ferror@plt+0x4c090>
  44f6a8:	ldr	x0, [x29, #304]
  44f6ac:	cmp	x0, x7
  44f6b0:	b.ls	44f6d0 <ferror@plt+0x4c100>  // b.plast
  44f6b4:	ldrb	w0, [x7]
  44f6b8:	cmp	w0, #0x12
  44f6bc:	b.hi	450c98 <ferror@plt+0x4d6c8>  // b.pmore
  44f6c0:	cmp	w0, #0x10
  44f6c4:	b.hi	450cd8 <ferror@plt+0x4d708>  // b.pmore
  44f6c8:	cmp	w0, #0xd
  44f6cc:	b.eq	450cd8 <ferror@plt+0x4d708>  // b.none
  44f6d0:	ldr	x0, [x29, #336]
  44f6d4:	cmp	x5, x19
  44f6d8:	ccmp	x19, x27, #0x2, ls  // ls = plast
  44f6dc:	mov	w10, #0x0                   	// #0
  44f6e0:	csel	x4, x0, x4, ls  // ls = plast
  44f6e4:	b	44fd54 <ferror@plt+0x4c784>
  44f6e8:	ldr	w1, [x29, #252]
  44f6ec:	eor	w0, w0, #0x1
  44f6f0:	tst	w1, w0
  44f6f4:	b.eq	44f724 <ferror@plt+0x4c154>  // b.none
  44f6f8:	ldr	x19, [x29, #312]
  44f6fc:	ldr	x0, [x29, #312]
  44f700:	cmp	x5, x0
  44f704:	ccmp	x0, x27, #0x2, ls  // ls = plast
  44f708:	ldr	x0, [x29, #336]
  44f70c:	csel	x4, x0, x3, ls  // ls = plast
  44f710:	mov	x0, #0x0                   	// #0
  44f714:	ldr	x1, [x29, #320]
  44f718:	add	x0, x0, #0x1
  44f71c:	cmp	x0, x1
  44f720:	b.cc	44f744 <ferror@plt+0x4c174>  // b.lo, b.ul, b.last
  44f724:	cbnz	x28, 44f760 <ferror@plt+0x4c190>
  44f728:	ldr	x0, [x29, #216]
  44f72c:	sub	x19, x19, x0
  44f730:	ldr	x0, [x29, #336]
  44f734:	cmp	x0, x4
  44f738:	b.ne	44f990 <ferror@plt+0x4c3c0>  // b.any
  44f73c:	sub	w0, w19, w5
  44f740:	b	44f418 <ferror@plt+0x4be48>
  44f744:	ldr	x1, [x29, #232]
  44f748:	ldr	x1, [x1, x0, lsl #3]
  44f74c:	str	x1, [x8, x0, lsl #3]
  44f750:	ldr	x1, [x29, #224]
  44f754:	ldr	x1, [x1, x0, lsl #3]
  44f758:	str	x1, [x9, x0, lsl #3]
  44f75c:	b	44f714 <ferror@plt+0x4c144>
  44f760:	ldr	x0, [x29, #352]
  44f764:	ldrb	w0, [x0, #56]
  44f768:	tbnz	w0, #4, 44f728 <ferror@plt+0x4c158>
  44f76c:	ands	w0, w0, #0x6
  44f770:	b.ne	44f88c <ferror@plt+0x4c2bc>  // b.any
  44f774:	ldr	x0, [x29, #272]
  44f778:	mov	x1, #0x1e                  	// #30
  44f77c:	stp	x9, x8, [x29, #304]
  44f780:	add	x0, x0, #0x2
  44f784:	cmp	x0, #0x1e
  44f788:	str	x4, [x29, #328]
  44f78c:	csel	x0, x0, x1, cs  // cs = hs, nlast
  44f790:	str	w0, [x28]
  44f794:	str	x5, [x29, #344]
  44f798:	ubfiz	x20, x0, #2, #32
  44f79c:	mov	x0, x20
  44f7a0:	bl	402f40 <malloc@plt>
  44f7a4:	mov	x21, x0
  44f7a8:	str	x21, [x28, #8]
  44f7ac:	mov	x0, x20
  44f7b0:	bl	402f40 <malloc@plt>
  44f7b4:	str	x0, [x28, #16]
  44f7b8:	ldp	x9, x8, [x29, #304]
  44f7bc:	ldr	x4, [x29, #328]
  44f7c0:	ldr	x5, [x29, #344]
  44f7c4:	cbnz	x21, 44f7d0 <ferror@plt+0x4c200>
  44f7c8:	mov	w0, #0xfffffffe            	// #-2
  44f7cc:	b	44f418 <ferror@plt+0x4be48>
  44f7d0:	cbz	x0, 44f7c8 <ferror@plt+0x4c1f8>
  44f7d4:	ldr	x0, [x29, #352]
  44f7d8:	mov	w1, #0x1                   	// #1
  44f7dc:	ldrb	w0, [x0, #56]
  44f7e0:	bfi	w0, w1, #1, #2
  44f7e4:	ldr	x1, [x29, #352]
  44f7e8:	strb	w0, [x1, #56]
  44f7ec:	ldr	w0, [x28]
  44f7f0:	cbz	w0, 44f854 <ferror@plt+0x4c284>
  44f7f4:	ldr	x0, [x28, #8]
  44f7f8:	adrp	x3, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  44f7fc:	ldr	w1, [x29, #360]
  44f800:	add	x3, x3, #0x370
  44f804:	ldr	w2, [x29, #364]
  44f808:	add	x3, x3, #0x100
  44f80c:	ldp	x10, x11, [x28, #8]
  44f810:	str	w1, [x0]
  44f814:	sub	x1, x19, x22
  44f818:	sub	x0, x19, x5
  44f81c:	add	w1, w2, w1
  44f820:	mov	w12, #0xffffffff            	// #-1
  44f824:	ldr	x2, [x29, #336]
  44f828:	cmp	x2, x4
  44f82c:	mov	x2, #0x1                   	// #1
  44f830:	csel	w0, w1, w0, ne  // ne = any
  44f834:	ldr	x1, [x28, #16]
  44f838:	str	w0, [x1]
  44f83c:	ldr	x1, [x29, #320]
  44f840:	ldr	w0, [x28]
  44f844:	cmp	x0, x1
  44f848:	csel	x0, x0, x1, ls  // ls = plast
  44f84c:	cmp	x0, x2
  44f850:	b.hi	44f900 <ferror@plt+0x4c330>  // b.pmore
  44f854:	ldr	x0, [x29, #320]
  44f858:	mov	w2, #0xffffffff            	// #-1
  44f85c:	ldr	w1, [x29, #320]
  44f860:	lsl	x0, x0, #2
  44f864:	ldr	w3, [x28]
  44f868:	cmp	w3, w1
  44f86c:	b.ls	44f728 <ferror@plt+0x4c158>  // b.plast
  44f870:	ldr	x3, [x28, #16]
  44f874:	add	w1, w1, #0x1
  44f878:	str	w2, [x3, x0]
  44f87c:	ldr	x3, [x28, #8]
  44f880:	str	w2, [x3, x0]
  44f884:	add	x0, x0, #0x4
  44f888:	b	44f864 <ferror@plt+0x4c294>
  44f88c:	cmp	w0, #0x2
  44f890:	b.ne	44f7ec <ferror@plt+0x4c21c>  // b.any
  44f894:	ldr	x0, [x29, #272]
  44f898:	ldr	w1, [x28]
  44f89c:	add	x0, x0, #0x2
  44f8a0:	cmp	x1, x0
  44f8a4:	b.cs	44f7ec <ferror@plt+0x4c21c>  // b.hs, b.nlast
  44f8a8:	ldr	w0, [x29, #320]
  44f8ac:	str	x9, [x29, #312]
  44f8b0:	add	w1, w0, #0x1
  44f8b4:	str	w1, [x28]
  44f8b8:	ldr	x0, [x28, #8]
  44f8bc:	ubfiz	x1, x1, #2, #32
  44f8c0:	str	x8, [x29, #328]
  44f8c4:	stp	x4, x5, [x29, #344]
  44f8c8:	bl	4030b0 <realloc@plt>
  44f8cc:	str	x0, [x28, #8]
  44f8d0:	ldr	x0, [x28, #16]
  44f8d4:	ldr	w1, [x28]
  44f8d8:	lsl	x1, x1, #2
  44f8dc:	bl	4030b0 <realloc@plt>
  44f8e0:	ldr	x1, [x28, #8]
  44f8e4:	str	x0, [x28, #16]
  44f8e8:	cbz	x1, 44f7c8 <ferror@plt+0x4c1f8>
  44f8ec:	ldr	x9, [x29, #312]
  44f8f0:	ldr	x8, [x29, #328]
  44f8f4:	ldp	x4, x5, [x29, #344]
  44f8f8:	cbnz	x0, 44f7ec <ferror@plt+0x4c21c>
  44f8fc:	b	44f7c8 <ferror@plt+0x4c1f8>
  44f900:	ldr	x1, [x8, x2, lsl #3]
  44f904:	lsl	x7, x2, #2
  44f908:	cmp	x1, x3
  44f90c:	b.eq	44f91c <ferror@plt+0x4c34c>  // b.none
  44f910:	ldr	x0, [x9, x2, lsl #3]
  44f914:	cmp	x0, x3
  44f918:	b.ne	44f92c <ferror@plt+0x4c35c>  // b.any
  44f91c:	str	w12, [x11, x7]
  44f920:	str	w12, [x10, x7]
  44f924:	add	x2, x2, #0x1
  44f928:	b	44f83c <ferror@plt+0x4c26c>
  44f92c:	ldr	w6, [x29, #364]
  44f930:	cbz	w6, 44f970 <ferror@plt+0x4c3a0>
  44f934:	cmp	x1, x5
  44f938:	b.cc	44f970 <ferror@plt+0x4c3a0>  // b.lo, b.ul, b.last
  44f93c:	cmp	x1, x27
  44f940:	b.hi	44f970 <ferror@plt+0x4c3a0>  // b.pmore
  44f944:	sub	w1, w1, w5
  44f948:	str	w1, [x10, x7]
  44f94c:	ldr	w1, [x29, #364]
  44f950:	cbz	w1, 44f980 <ferror@plt+0x4c3b0>
  44f954:	cmp	x0, x5
  44f958:	b.cc	44f980 <ferror@plt+0x4c3b0>  // b.lo, b.ul, b.last
  44f95c:	cmp	x0, x27
  44f960:	b.hi	44f980 <ferror@plt+0x4c3b0>  // b.pmore
  44f964:	sub	w0, w0, w5
  44f968:	str	w0, [x11, x7]
  44f96c:	b	44f924 <ferror@plt+0x4c354>
  44f970:	ldr	w6, [x29, #364]
  44f974:	sub	x1, x1, x22
  44f978:	add	w1, w6, w1
  44f97c:	b	44f948 <ferror@plt+0x4c378>
  44f980:	ldr	w1, [x29, #364]
  44f984:	sub	x0, x0, x22
  44f988:	add	w0, w1, w0
  44f98c:	b	44f968 <ferror@plt+0x4c398>
  44f990:	ldr	x0, [x29, #240]
  44f994:	sub	x5, x22, x0
  44f998:	b	44f73c <ferror@plt+0x4c16c>
  44f99c:	mov	x7, x11
  44f9a0:	ldrb	w2, [x7], #1
  44f9a4:	cmp	w2, #0x1d
  44f9a8:	b.hi	450c60 <ferror@plt+0x4d690>  // b.pmore
  44f9ac:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  44f9b0:	add	x0, x0, #0x314
  44f9b4:	ldrh	w0, [x0, w2, uxtw #1]
  44f9b8:	adr	x1, 44f9c4 <ferror@plt+0x4c3f4>
  44f9bc:	add	x0, x1, w0, sxth #2
  44f9c0:	br	x0
  44f9c4:	add	x11, x23, #0x1
  44f9c8:	sub	x11, x11, x25
  44f9cc:	add	x11, x11, x11, lsl #1
  44f9d0:	add	x11, x11, #0x4
  44f9d4:	sub	w0, w26, w21
  44f9d8:	mov	w12, #0x13                  	// #19
  44f9dc:	cmp	x0, x11
  44f9e0:	b.cc	4507a8 <ferror@plt+0x4d1d8>  // b.lo, b.ul, b.last
  44f9e4:	mov	x0, x25
  44f9e8:	add	w2, w21, #0x1
  44f9ec:	add	w1, w21, #0x2
  44f9f0:	ubfiz	x12, x21, #3, #32
  44f9f4:	add	w11, w21, #0x3
  44f9f8:	lsl	x15, x2, #3
  44f9fc:	lsl	x14, x1, #3
  44fa00:	add	x13, x20, x12
  44fa04:	add	x2, x20, x2, lsl #3
  44fa08:	add	x1, x20, x1, lsl #3
  44fa0c:	cmp	x23, x0
  44fa10:	b.cs	450814 <ferror@plt+0x4d244>  // b.hs, b.nlast
  44fa14:	str	w25, [x13]
  44fa18:	str	w23, [x2]
  44fa1c:	str	xzr, [x1]
  44fa20:	b	4502fc <ferror@plt+0x4cd2c>
  44fa24:	add	x7, x23, #0x1
  44fa28:	sub	x7, x7, x25
  44fa2c:	add	x7, x7, x7, lsl #1
  44fa30:	add	x7, x7, #0x4
  44fa34:	sub	w0, w26, w21
  44fa38:	mov	w12, #0x13                  	// #19
  44fa3c:	cmp	x0, x7
  44fa40:	b.cc	450718 <ferror@plt+0x4d148>  // b.lo, b.ul, b.last
  44fa44:	mov	x0, x25
  44fa48:	add	w2, w21, #0x1
  44fa4c:	add	w1, w21, #0x2
  44fa50:	ubfiz	x12, x21, #3, #32
  44fa54:	add	w7, w21, #0x3
  44fa58:	lsl	x15, x2, #3
  44fa5c:	lsl	x14, x1, #3
  44fa60:	add	x13, x20, x12
  44fa64:	add	x2, x20, x2, lsl #3
  44fa68:	add	x1, x20, x1, lsl #3
  44fa6c:	cmp	x23, x0
  44fa70:	b.cs	450784 <ferror@plt+0x4d1b4>  // b.hs, b.nlast
  44fa74:	str	w25, [x13]
  44fa78:	add	w21, w21, #0x4
  44fa7c:	str	w23, [x2]
  44fa80:	str	xzr, [x1]
  44fa84:	str	xzr, [x20, w7, uxtw #3]
  44fa88:	b	450590 <ferror@plt+0x4cfc0>
  44fa8c:	ldr	x1, [x29, #344]
  44fa90:	add	x7, x11, #0x2
  44fa94:	ldrb	w0, [x11, #1]
  44fa98:	cbnz	x1, 44fad8 <ferror@plt+0x4c508>
  44fa9c:	mov	x1, x19
  44faa0:	cmp	x19, x4
  44faa4:	b.eq	44fb14 <ferror@plt+0x4c544>  // b.none
  44faa8:	ldrb	w2, [x1]
  44faac:	add	x19, x19, #0x1
  44fab0:	ldrb	w1, [x7], #1
  44fab4:	cmp	w2, w1
  44fab8:	b.ne	44f660 <ferror@plt+0x4c090>  // b.any
  44fabc:	subs	w0, w0, #0x1
  44fac0:	b.ne	44fa9c <ferror@plt+0x4c4cc>  // b.any
  44fac4:	b	44fb08 <ferror@plt+0x4c538>
  44fac8:	cmp	x3, x19
  44facc:	b.eq	450c64 <ferror@plt+0x4d694>  // b.none
  44fad0:	mov	x4, x3
  44fad4:	mov	x19, x22
  44fad8:	mov	x1, x19
  44fadc:	cmp	x19, x4
  44fae0:	b.eq	44fac8 <ferror@plt+0x4c4f8>  // b.none
  44fae4:	ldrb	w1, [x1]
  44fae8:	add	x19, x19, #0x1
  44faec:	ldr	x2, [x29, #344]
  44faf0:	ldrb	w2, [x2, x1]
  44faf4:	ldrb	w1, [x7], #1
  44faf8:	cmp	w2, w1
  44fafc:	b.ne	44f660 <ferror@plt+0x4c090>  // b.any
  44fb00:	subs	w0, w0, #0x1
  44fb04:	b.ne	44fad8 <ferror@plt+0x4c508>  // b.any
  44fb08:	cbnz	w10, 44fd54 <ferror@plt+0x4c784>
  44fb0c:	mov	x0, x25
  44fb10:	b	44fb3c <ferror@plt+0x4c56c>
  44fb14:	cmp	x3, x19
  44fb18:	b.eq	450c64 <ferror@plt+0x4d694>  // b.none
  44fb1c:	mov	x4, x3
  44fb20:	mov	x19, x22
  44fb24:	b	44fa9c <ferror@plt+0x4c4cc>
  44fb28:	lsl	x2, x0, #3
  44fb2c:	add	x0, x0, #0x1
  44fb30:	ldrb	w1, [x24, x2]
  44fb34:	orr	w1, w1, #0x18
  44fb38:	strb	w1, [x24, x2]
  44fb3c:	cmp	x23, x0
  44fb40:	b.cs	44fb28 <ferror@plt+0x4c558>  // b.hs, b.nlast
  44fb44:	mov	w10, #0x1                   	// #1
  44fb48:	b	44fd54 <ferror@plt+0x4c784>
  44fb4c:	cmp	x3, x19
  44fb50:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  44fb54:	mov	x4, x3
  44fb58:	mov	x19, x22
  44fb5c:	cmp	x19, x4
  44fb60:	b.eq	44fb4c <ferror@plt+0x4c57c>  // b.none
  44fb64:	ldr	x0, [x29, #352]
  44fb68:	ldr	x1, [x0, #24]
  44fb6c:	tbnz	w1, #6, 44fb8c <ferror@plt+0x4c5bc>
  44fb70:	ldr	x2, [x29, #344]
  44fb74:	ldrb	w0, [x19]
  44fb78:	cbz	x2, 44fb84 <ferror@plt+0x4c5b4>
  44fb7c:	and	x0, x0, #0xff
  44fb80:	ldrb	w0, [x2, x0]
  44fb84:	cmp	w0, #0xa
  44fb88:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  44fb8c:	tbz	w1, #7, 44fba8 <ferror@plt+0x4c5d8>
  44fb90:	ldr	x1, [x29, #344]
  44fb94:	ldrb	w0, [x19]
  44fb98:	cbz	x1, 44fba4 <ferror@plt+0x4c5d4>
  44fb9c:	and	x0, x0, #0xff
  44fba0:	ldrb	w0, [x1, x0]
  44fba4:	cbz	w0, 44f660 <ferror@plt+0x4c090>
  44fba8:	cbz	w10, 44fbd4 <ferror@plt+0x4c604>
  44fbac:	add	x19, x19, #0x1
  44fbb0:	b	44fb44 <ferror@plt+0x4c574>
  44fbb4:	lsl	x2, x0, #3
  44fbb8:	add	x0, x0, #0x1
  44fbbc:	ldrb	w1, [x24, x2]
  44fbc0:	orr	w1, w1, #0x18
  44fbc4:	strb	w1, [x24, x2]
  44fbc8:	cmp	x23, x0
  44fbcc:	b.cs	44fbb4 <ferror@plt+0x4c5e4>  // b.hs, b.nlast
  44fbd0:	b	44fbac <ferror@plt+0x4c5dc>
  44fbd4:	mov	x0, x25
  44fbd8:	b	44fbc8 <ferror@plt+0x4c5f8>
  44fbdc:	cmp	w2, #0x5
  44fbe0:	cset	w12, eq  // eq = none
  44fbe4:	cmp	x19, x4
  44fbe8:	b.eq	44fc40 <ferror@plt+0x4c670>  // b.none
  44fbec:	ldr	x1, [x29, #344]
  44fbf0:	ldrb	w0, [x19]
  44fbf4:	cbz	x1, 44fc00 <ferror@plt+0x4c630>
  44fbf8:	and	x0, x0, #0xff
  44fbfc:	ldrb	w0, [x1, x0]
  44fc00:	ldrb	w1, [x11, #1]
  44fc04:	cmp	w0, w1, lsl #3
  44fc08:	b.cs	44fc2c <ferror@plt+0x4c65c>  // b.hs, b.nlast
  44fc0c:	lsr	w11, w0, #3
  44fc10:	and	w0, w0, #0x7
  44fc14:	add	w11, w11, #0x1
  44fc18:	ldrb	w11, [x7, w11, sxtw]
  44fc1c:	asr	w0, w11, w0
  44fc20:	tbz	w0, #0, 44fc2c <ferror@plt+0x4c65c>
  44fc24:	cmp	w2, #0x5
  44fc28:	cset	w12, ne  // ne = any
  44fc2c:	cbz	w12, 44f660 <ferror@plt+0x4c090>
  44fc30:	cbz	w10, 44fc74 <ferror@plt+0x4c6a4>
  44fc34:	add	w1, w1, #0x1
  44fc38:	add	x7, x7, w1, sxtw
  44fc3c:	b	44fbac <ferror@plt+0x4c5dc>
  44fc40:	cmp	x3, x19
  44fc44:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  44fc48:	mov	x4, x3
  44fc4c:	mov	x19, x22
  44fc50:	b	44fbe4 <ferror@plt+0x4c614>
  44fc54:	lsl	x10, x0, #3
  44fc58:	add	x0, x0, #0x1
  44fc5c:	ldrb	w2, [x24, x10]
  44fc60:	orr	w2, w2, #0x18
  44fc64:	strb	w2, [x24, x10]
  44fc68:	cmp	x23, x0
  44fc6c:	b.cs	44fc54 <ferror@plt+0x4c684>  // b.hs, b.nlast
  44fc70:	b	44fc34 <ferror@plt+0x4c664>
  44fc74:	mov	x0, x25
  44fc78:	b	44fc68 <ferror@plt+0x4c698>
  44fc7c:	str	x7, [x29, #376]
  44fc80:	ldrb	w0, [x11, #1]
  44fc84:	lsl	x0, x0, #3
  44fc88:	ldrb	w0, [x24, x0]
  44fc8c:	and	w0, w0, #0x3
  44fc90:	cmp	w0, #0x3
  44fc94:	b.ne	44fcdc <ferror@plt+0x4c70c>  // b.any
  44fc98:	ldr	x1, [x29, #304]
  44fc9c:	mov	x2, x24
  44fca0:	add	x0, x29, #0x178
  44fca4:	stp	x9, x8, [x29, #152]
  44fca8:	stp	x11, x4, [x29, #168]
  44fcac:	str	x3, [x29, #184]
  44fcb0:	str	x5, [x29, #208]
  44fcb4:	bl	44ee60 <ferror@plt+0x4b890>
  44fcb8:	ldp	x11, x4, [x29, #168]
  44fcbc:	ldp	x9, x8, [x29, #152]
  44fcc0:	ldr	x3, [x29, #184]
  44fcc4:	ldrb	w1, [x11, #1]
  44fcc8:	ldr	x5, [x29, #208]
  44fccc:	lsl	x1, x1, #3
  44fcd0:	ldrb	w2, [x24, x1]
  44fcd4:	bfxil	w2, w0, #0, #2
  44fcd8:	strb	w2, [x24, x1]
  44fcdc:	ldrb	w0, [x11, #1]
  44fce0:	lsl	x7, x0, #3
  44fce4:	add	x10, x24, x0, lsl #3
  44fce8:	add	x0, x8, x0, lsl #3
  44fcec:	ldrb	w1, [x24, x7]
  44fcf0:	ldr	x2, [x8, x7]
  44fcf4:	tst	x1, #0x3
  44fcf8:	b.eq	44fd10 <ferror@plt+0x4c740>  // b.none
  44fcfc:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  44fd00:	add	x1, x1, #0x370
  44fd04:	add	x1, x1, #0x100
  44fd08:	cmp	x2, x1
  44fd0c:	csel	x2, x2, x19, ne  // ne = any
  44fd10:	str	x19, [x0]
  44fd14:	cmp	x25, #0x101
  44fd18:	ldrb	w0, [x10]
  44fd1c:	ldr	x1, [x29, #264]
  44fd20:	orr	w0, w0, #0x4
  44fd24:	strb	w0, [x10]
  44fd28:	ldrb	w0, [x11, #1]
  44fd2c:	str	x2, [x1, x7]
  44fd30:	add	x7, x11, #0x3
  44fd34:	str	x7, [x29, #208]
  44fd38:	lsl	x0, x0, #3
  44fd3c:	ldrb	w1, [x24, x0]
  44fd40:	and	w1, w1, #0xfffffff7
  44fd44:	strb	w1, [x24, x0]
  44fd48:	ldrb	w23, [x11, #1]
  44fd4c:	csel	x25, x25, x23, ne  // ne = any
  44fd50:	mov	w10, #0x0                   	// #0
  44fd54:	mov	x11, x7
  44fd58:	b	44f544 <ferror@plt+0x4bf74>
  44fd5c:	ldrb	w0, [x11, #1]
  44fd60:	lsl	x7, x0, #3
  44fd64:	add	x10, x24, x0, lsl #3
  44fd68:	add	x0, x9, x0, lsl #3
  44fd6c:	ldrb	w1, [x24, x7]
  44fd70:	ldr	x2, [x9, x7]
  44fd74:	tst	x1, #0x3
  44fd78:	b.eq	44fd90 <ferror@plt+0x4c7c0>  // b.none
  44fd7c:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  44fd80:	add	x1, x1, #0x370
  44fd84:	add	x1, x1, #0x100
  44fd88:	cmp	x2, x1
  44fd8c:	csel	x2, x2, x19, ne  // ne = any
  44fd90:	ldr	x1, [x29, #256]
  44fd94:	str	x19, [x0]
  44fd98:	ldrb	w0, [x10]
  44fd9c:	cmp	x25, x23
  44fda0:	and	w0, w0, #0xfffffffb
  44fda4:	str	x2, [x1, x7]
  44fda8:	strb	w0, [x10]
  44fdac:	b.eq	44fe30 <ferror@plt+0x4c860>  // b.none
  44fdb0:	ldrb	w23, [x11, #1]
  44fdb4:	sub	w23, w23, #0x1
  44fdb8:	and	x23, x23, #0xff
  44fdbc:	cbz	x23, 44fe30 <ferror@plt+0x4c860>
  44fdc0:	lsl	x0, x23, #3
  44fdc4:	sub	x1, x23, #0x1
  44fdc8:	ldrb	w0, [x24, x0]
  44fdcc:	tbz	w0, #2, 44fe28 <ferror@plt+0x4c858>
  44fdd0:	ldrb	w0, [x11, #1]
  44fdd4:	lsl	x0, x0, #3
  44fdd8:	ldrb	w0, [x24, x0]
  44fddc:	tbz	w0, #3, 44fdec <ferror@plt+0x4c81c>
  44fde0:	ldr	x0, [x29, #208]
  44fde4:	cmp	x11, x0
  44fde8:	b.ne	450044 <ferror@plt+0x4ca74>  // b.any
  44fdec:	ldr	x1, [x29, #304]
  44fdf0:	add	x0, x11, #0x3
  44fdf4:	cmp	x1, x0
  44fdf8:	b.ls	450044 <ferror@plt+0x4ca74>  // b.plast
  44fdfc:	add	x0, x11, #0x4
  44fe00:	str	x0, [x29, #376]
  44fe04:	ldrb	w0, [x11, #3]
  44fe08:	cmp	w0, #0x13
  44fe0c:	b.hi	44fe3c <ferror@plt+0x4c86c>  // b.pmore
  44fe10:	cmp	w0, #0x10
  44fe14:	b.hi	44ff58 <ferror@plt+0x4c988>  // b.pmore
  44fe18:	cmp	w0, #0xd
  44fe1c:	b.eq	44ff58 <ferror@plt+0x4c988>  // b.none
  44fe20:	mov	w0, #0x0                   	// #0
  44fe24:	b	44fe68 <ferror@plt+0x4c898>
  44fe28:	mov	x23, x1
  44fe2c:	b	44fdbc <ferror@plt+0x4c7ec>
  44fe30:	mov	x23, #0x100                 	// #256
  44fe34:	mov	x25, #0x101                 	// #257
  44fe38:	b	44fdd0 <ferror@plt+0x4c800>
  44fe3c:	cmp	w0, #0x16
  44fe40:	b.ne	44fe20 <ferror@plt+0x4c850>  // b.any
  44fe44:	mov	w7, #0x1                   	// #1
  44fe48:	ldrsb	w1, [x11, #5]
  44fe4c:	add	x2, x11, #0x6
  44fe50:	ldrb	w0, [x11, #4]
  44fe54:	cmp	w7, #0x0
  44fe58:	add	w0, w0, w1, lsl #8
  44fe5c:	add	x1, x11, #0x8
  44fe60:	csel	x1, x2, x1, eq  // eq = none
  44fe64:	str	x1, [x29, #376]
  44fe68:	ldr	x1, [x29, #376]
  44fe6c:	sxtw	x2, w0
  44fe70:	add	x7, x1, w0, sxtw
  44fe74:	str	x7, [x29, #376]
  44fe78:	tbz	w0, #31, 450044 <ferror@plt+0x4ca74>
  44fe7c:	ldrb	w0, [x1, x2]
  44fe80:	cmp	w0, #0xf
  44fe84:	b.ne	450044 <ferror@plt+0x4ca74>  // b.any
  44fe88:	ldrb	w0, [x7, #3]
  44fe8c:	cmp	w0, #0x6
  44fe90:	b.ne	450044 <ferror@plt+0x4ca74>  // b.any
  44fe94:	ldrb	w1, [x11, #1]
  44fe98:	ldrb	w0, [x7, #4]
  44fe9c:	cmp	w0, w1
  44fea0:	b.ne	450044 <ferror@plt+0x4ca74>  // b.any
  44fea4:	ubfiz	x0, x0, #3, #8
  44fea8:	ldrb	w1, [x24, x0]
  44feac:	tbnz	w1, #4, 44ff60 <ferror@plt+0x4c990>
  44feb0:	add	x13, x23, #0x1
  44feb4:	add	x0, x7, #0x1
  44feb8:	sub	x10, x13, x25
  44febc:	str	x0, [x29, #376]
  44fec0:	add	x7, x7, #0x3
  44fec4:	add	x12, x10, x10, lsl #1
  44fec8:	ldurb	w14, [x7, #-2]
  44fecc:	add	x12, x12, #0x4
  44fed0:	ldurb	w11, [x7, #-1]
  44fed4:	str	x7, [x29, #376]
  44fed8:	sub	w0, w26, w21
  44fedc:	mov	w15, #0x13                  	// #19
  44fee0:	cmp	x0, x12
  44fee4:	b.cc	44ffa8 <ferror@plt+0x4c9d8>  // b.lo, b.ul, b.last
  44fee8:	mov	w1, w21
  44feec:	mov	x0, x25
  44fef0:	add	w12, w1, #0x1
  44fef4:	add	w2, w1, #0x2
  44fef8:	ubfiz	x15, x1, #3, #32
  44fefc:	cmp	x23, x0
  44ff00:	lsl	x18, x12, #3
  44ff04:	lsl	x17, x2, #3
  44ff08:	add	x16, x20, x15
  44ff0c:	add	x12, x20, x12, lsl #3
  44ff10:	add	x2, x20, x2, lsl #3
  44ff14:	add	w1, w1, #0x3
  44ff18:	b.cs	450024 <ferror@plt+0x4ca54>  // b.hs, b.nlast
  44ff1c:	add	w10, w10, w10, lsl #1
  44ff20:	cmp	x25, x13
  44ff24:	csel	w10, w10, wzr, ls  // ls = plast
  44ff28:	add	w0, w21, #0x3
  44ff2c:	sbfiz	w11, w11, #8, #8
  44ff30:	add	w21, w21, #0x4
  44ff34:	add	w14, w11, w14
  44ff38:	add	w21, w21, w10
  44ff3c:	add	w10, w0, w10
  44ff40:	str	w25, [x16]
  44ff44:	str	w23, [x12]
  44ff48:	add	x7, x7, w14, sxtw
  44ff4c:	str	x7, [x2]
  44ff50:	str	x19, [x20, x10, lsl #3]
  44ff54:	b	44f660 <ferror@plt+0x4c090>
  44ff58:	mov	w7, #0x0                   	// #0
  44ff5c:	b	44fe48 <ferror@plt+0x4c878>
  44ff60:	and	w1, w1, #0xffffffef
  44ff64:	strb	w1, [x24, x0]
  44ff68:	ldrb	w0, [x11, #1]
  44ff6c:	ldrb	w1, [x11, #2]
  44ff70:	add	w1, w1, w0
  44ff74:	and	x0, x0, #0xff
  44ff78:	cmp	w1, w0
  44ff7c:	b.ls	44feb0 <ferror@plt+0x4c8e0>  // b.plast
  44ff80:	ldr	x2, [x29, #264]
  44ff84:	ldr	x10, [x2, x0, lsl #3]
  44ff88:	str	x10, [x8, x0, lsl #3]
  44ff8c:	ldr	x2, [x29, #256]
  44ff90:	ldr	x2, [x2, x0, lsl #3]
  44ff94:	cmp	x10, x2
  44ff98:	b.hi	44ffa0 <ferror@plt+0x4c9d0>  // b.pmore
  44ff9c:	str	x2, [x9, x0, lsl #3]
  44ffa0:	add	x0, x0, #0x1
  44ffa4:	b	44ff78 <ferror@plt+0x4c9a8>
  44ffa8:	ldr	x0, [x29, #280]
  44ffac:	stp	x13, x9, [x29, #96]
  44ffb0:	stp	x8, x4, [x29, #112]
  44ffb4:	ldr	w0, [x0]
  44ffb8:	stp	x3, x5, [x29, #128]
  44ffbc:	stp	x12, x10, [x29, #144]
  44ffc0:	mul	w0, w0, w15
  44ffc4:	str	x7, [x29, #160]
  44ffc8:	str	w11, [x29, #168]
  44ffcc:	cmp	w0, w26
  44ffd0:	str	w14, [x29, #176]
  44ffd4:	b.cc	44f7c8 <ferror@plt+0x4c1f8>  // b.lo, b.ul, b.last
  44ffd8:	lsl	w18, w26, #1
  44ffdc:	ubfiz	x0, x26, #4, #31
  44ffe0:	sub	sp, sp, x0
  44ffe4:	ubfiz	x2, x26, #3, #32
  44ffe8:	mov	x1, x20
  44ffec:	mov	x0, sp
  44fff0:	str	w18, [x29, #184]
  44fff4:	bl	402cd0 <memcpy@plt>
  44fff8:	ldr	w18, [x29, #184]
  44fffc:	mov	x20, x0
  450000:	ldr	w11, [x29, #168]
  450004:	ldr	w14, [x29, #176]
  450008:	mov	w26, w18
  45000c:	ldp	x13, x9, [x29, #96]
  450010:	ldp	x8, x4, [x29, #112]
  450014:	ldp	x3, x5, [x29, #128]
  450018:	ldp	x12, x10, [x29, #144]
  45001c:	ldr	x7, [x29, #160]
  450020:	b	44fed8 <ferror@plt+0x4c908>
  450024:	ldr	x2, [x8, x0, lsl #3]
  450028:	str	x2, [x20, x15]
  45002c:	ldr	x2, [x9, x0, lsl #3]
  450030:	str	x2, [x20, x18]
  450034:	ldr	x2, [x24, x0, lsl #3]
  450038:	add	x0, x0, #0x1
  45003c:	str	x2, [x20, x17]
  450040:	b	44fef0 <ferror@plt+0x4c920>
  450044:	add	x7, x11, #0x3
  450048:	b	44fd50 <ferror@plt+0x4c780>
  45004c:	ldrb	w2, [x11, #1]
  450050:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450054:	add	x0, x0, #0x370
  450058:	add	x7, x11, #0x2
  45005c:	add	x0, x0, #0x100
  450060:	lsl	x2, x2, #3
  450064:	ldr	x1, [x8, x2]
  450068:	cmp	x1, x0
  45006c:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450070:	ldr	x11, [x9, x2]
  450074:	cmp	x11, x0
  450078:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  45007c:	ldr	w0, [x29, #364]
  450080:	cbz	w0, 4500a0 <ferror@plt+0x4cad0>
  450084:	cmp	x1, x5
  450088:	b.cc	450094 <ferror@plt+0x4cac4>  // b.lo, b.ul, b.last
  45008c:	cmp	x1, x27
  450090:	b.ls	450cf8 <ferror@plt+0x4d728>  // b.plast
  450094:	cmp	x11, x5
  450098:	mov	w0, #0x0                   	// #0
  45009c:	b.cs	4500ac <ferror@plt+0x4cadc>  // b.hs, b.nlast
  4500a0:	mov	x13, x11
  4500a4:	b	4500c0 <ferror@plt+0x4caf0>
  4500a8:	mov	w0, #0x1                   	// #1
  4500ac:	cmp	x11, x27
  4500b0:	cset	w2, ls  // ls = plast
  4500b4:	cmp	w0, w2
  4500b8:	ldr	x0, [x29, #336]
  4500bc:	csel	x13, x0, x11, ne  // ne = any
  4500c0:	cmp	x1, x13
  4500c4:	b.ne	4500f4 <ferror@plt+0x4cb24>  // b.any
  4500c8:	cmp	x3, x1
  4500cc:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  4500d0:	cmp	x11, x1
  4500d4:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  4500d8:	mov	x13, x11
  4500dc:	mov	x1, x22
  4500e0:	b	4500c0 <ferror@plt+0x4caf0>
  4500e4:	cmp	x3, x19
  4500e8:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  4500ec:	mov	x4, x3
  4500f0:	mov	x19, x22
  4500f4:	cmp	x19, x4
  4500f8:	b.eq	4500e4 <ferror@plt+0x4cb14>  // b.none
  4500fc:	sub	x12, x4, x19
  450100:	sub	x0, x13, x1
  450104:	cmp	x0, w12, sxtw
  450108:	csel	w12, w12, w0, ge  // ge = tcont
  45010c:	ldr	x0, [x29, #344]
  450110:	cbz	x0, 450168 <ferror@plt+0x4cb98>
  450114:	mov	w2, w12
  450118:	mov	x0, #0x0                   	// #0
  45011c:	cmp	x0, x2
  450120:	b.ne	450140 <ferror@plt+0x4cb70>  // b.any
  450124:	mov	w0, #0x0                   	// #0
  450128:	cbnz	w0, 44f660 <ferror@plt+0x4c090>
  45012c:	add	x19, x19, w12, sxtw
  450130:	add	x1, x1, w12, sxtw
  450134:	cbnz	w10, 4500c0 <ferror@plt+0x4caf0>
  450138:	mov	x0, x25
  45013c:	b	4501d4 <ferror@plt+0x4cc04>
  450140:	ldrb	w14, [x19, x0]
  450144:	ldr	x6, [x29, #344]
  450148:	ldrb	w15, [x6, x14]
  45014c:	ldrb	w14, [x1, x0]
  450150:	add	x0, x0, #0x1
  450154:	ldrb	w14, [x6, x14]
  450158:	cmp	w15, w14
  45015c:	b.eq	45011c <ferror@plt+0x4cb4c>  // b.none
  450160:	mov	w0, #0x1                   	// #1
  450164:	b	450128 <ferror@plt+0x4cb58>
  450168:	sxtw	x2, w12
  45016c:	mov	x0, x19
  450170:	str	x7, [x29, #104]
  450174:	str	w10, [x29, #112]
  450178:	stp	x9, x8, [x29, #120]
  45017c:	stp	x4, x3, [x29, #136]
  450180:	stp	x5, x13, [x29, #152]
  450184:	str	x11, [x29, #168]
  450188:	str	w12, [x29, #176]
  45018c:	str	x1, [x29, #184]
  450190:	bl	4031e0 <memcmp@plt>
  450194:	cmp	w0, #0x0
  450198:	ldr	w10, [x29, #112]
  45019c:	ldr	w12, [x29, #176]
  4501a0:	cset	w0, ne  // ne = any
  4501a4:	ldr	x7, [x29, #104]
  4501a8:	ldp	x9, x8, [x29, #120]
  4501ac:	ldp	x4, x3, [x29, #136]
  4501b0:	ldp	x5, x13, [x29, #152]
  4501b4:	ldr	x11, [x29, #168]
  4501b8:	ldr	x1, [x29, #184]
  4501bc:	b	450128 <ferror@plt+0x4cb58>
  4501c0:	lsl	x10, x0, #3
  4501c4:	add	x0, x0, #0x1
  4501c8:	ldrb	w2, [x24, x10]
  4501cc:	orr	w2, w2, #0x18
  4501d0:	strb	w2, [x24, x10]
  4501d4:	cmp	x23, x0
  4501d8:	b.cs	4501c0 <ferror@plt+0x4cbf0>  // b.hs, b.nlast
  4501dc:	mov	w10, #0x1                   	// #1
  4501e0:	b	4500c0 <ferror@plt+0x4caf0>
  4501e4:	ldr	x0, [x29, #296]
  4501e8:	cmp	x19, x0
  4501ec:	b.eq	4501f8 <ferror@plt+0x4cc28>  // b.none
  4501f0:	ldr	w0, [x29, #328]
  4501f4:	cbnz	w0, 450208 <ferror@plt+0x4cc38>
  4501f8:	ldr	x0, [x29, #352]
  4501fc:	ldrb	w0, [x0, #56]
  450200:	tbz	w0, #5, 44fd54 <ferror@plt+0x4c784>
  450204:	b	44f660 <ferror@plt+0x4c090>
  450208:	ldurb	w0, [x19, #-1]
  45020c:	cmp	w0, #0xa
  450210:	b.ne	44f660 <ferror@plt+0x4c090>  // b.any
  450214:	ldr	x0, [x29, #352]
  450218:	ldrsb	w0, [x0, #56]
  45021c:	tbnz	w0, #31, 44fd54 <ferror@plt+0x4c784>
  450220:	b	44f660 <ferror@plt+0x4c090>
  450224:	ldr	x0, [x29, #288]
  450228:	cmp	x19, x0
  45022c:	b.ne	450240 <ferror@plt+0x4cc70>  // b.any
  450230:	ldr	x0, [x29, #352]
  450234:	ldrb	w0, [x0, #56]
  450238:	tbz	w0, #6, 44fd54 <ferror@plt+0x4c784>
  45023c:	b	44f660 <ferror@plt+0x4c090>
  450240:	cmp	x19, x27
  450244:	b.ne	45025c <ferror@plt+0x4cc8c>  // b.any
  450248:	ldrb	w0, [x22]
  45024c:	cmp	w0, #0xa
  450250:	cset	w0, eq  // eq = none
  450254:	cbnz	w0, 450214 <ferror@plt+0x4cc44>
  450258:	b	44f660 <ferror@plt+0x4c090>
  45025c:	ldrb	w0, [x19]
  450260:	b	45024c <ferror@plt+0x4cc7c>
  450264:	ldr	x0, [x29, #296]
  450268:	cmp	x19, x0
  45026c:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  450270:	ldr	w0, [x29, #328]
  450274:	cbz	w0, 44fd54 <ferror@plt+0x4c784>
  450278:	b	44f660 <ferror@plt+0x4c090>
  45027c:	ldr	x0, [x29, #288]
  450280:	cmp	x19, x0
  450284:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  450288:	b	44f660 <ferror@plt+0x4c090>
  45028c:	ldrsb	w12, [x11, #2]
  450290:	add	x7, x11, #0x3
  450294:	ldrb	w0, [x11, #1]
  450298:	add	x11, x23, #0x1
  45029c:	sub	x11, x11, x25
  4502a0:	add	x11, x11, x11, lsl #1
  4502a4:	add	w12, w0, w12, lsl #8
  4502a8:	add	x11, x11, #0x4
  4502ac:	sub	w0, w26, w21
  4502b0:	mov	w13, #0x13                  	// #19
  4502b4:	cmp	x0, x11
  4502b8:	b.cc	450308 <ferror@plt+0x4cd38>  // b.lo, b.ul, b.last
  4502bc:	mov	x0, x25
  4502c0:	add	w2, w21, #0x1
  4502c4:	add	w1, w21, #0x2
  4502c8:	ubfiz	x13, x21, #3, #32
  4502cc:	add	w11, w21, #0x3
  4502d0:	lsl	x16, x2, #3
  4502d4:	lsl	x15, x1, #3
  4502d8:	add	x14, x20, x13
  4502dc:	add	x2, x20, x2, lsl #3
  4502e0:	add	x1, x20, x1, lsl #3
  4502e4:	cmp	x23, x0
  4502e8:	b.cs	45037c <ferror@plt+0x4cdac>  // b.hs, b.nlast
  4502ec:	str	w25, [x14]
  4502f0:	add	x12, x7, w12, sxtw
  4502f4:	str	w23, [x2]
  4502f8:	str	x12, [x1]
  4502fc:	add	w21, w21, #0x4
  450300:	str	xzr, [x20, w11, uxtw #3]
  450304:	b	44fd54 <ferror@plt+0x4c784>
  450308:	ldr	x0, [x29, #280]
  45030c:	str	w12, [x29, #112]
  450310:	str	x7, [x29, #120]
  450314:	str	w10, [x29, #128]
  450318:	ldr	w0, [x0]
  45031c:	stp	x9, x8, [x29, #136]
  450320:	stp	x4, x3, [x29, #152]
  450324:	mul	w0, w0, w13
  450328:	stp	x5, x11, [x29, #168]
  45032c:	cmp	w0, w26
  450330:	b.cc	44f7c8 <ferror@plt+0x4c1f8>  // b.lo, b.ul, b.last
  450334:	lsl	w14, w26, #1
  450338:	ubfiz	x0, x26, #4, #31
  45033c:	sub	sp, sp, x0
  450340:	ubfiz	x2, x26, #3, #32
  450344:	mov	x1, x20
  450348:	mov	x0, sp
  45034c:	str	w14, [x29, #184]
  450350:	bl	402cd0 <memcpy@plt>
  450354:	ldr	w14, [x29, #184]
  450358:	mov	x20, x0
  45035c:	ldr	w12, [x29, #112]
  450360:	ldr	w10, [x29, #128]
  450364:	mov	w26, w14
  450368:	ldr	x7, [x29, #120]
  45036c:	ldp	x9, x8, [x29, #136]
  450370:	ldp	x4, x3, [x29, #152]
  450374:	ldp	x5, x11, [x29, #168]
  450378:	b	4502ac <ferror@plt+0x4ccdc>
  45037c:	ldr	x1, [x8, x0, lsl #3]
  450380:	str	x1, [x20, x13]
  450384:	ldr	x1, [x9, x0, lsl #3]
  450388:	str	x1, [x20, x16]
  45038c:	ldr	x1, [x24, x0, lsl #3]
  450390:	mov	w21, w11
  450394:	add	x0, x0, #0x1
  450398:	str	x1, [x20, x15]
  45039c:	b	4502c0 <ferror@plt+0x4ccf0>
  4503a0:	add	x0, x0, #0x1
  4503a4:	str	x0, [x29, #376]
  4503a8:	b	450878 <ferror@plt+0x4d2a8>
  4503ac:	ldr	x0, [x29, #280]
  4503b0:	str	w12, [x29, #112]
  4503b4:	str	x7, [x29, #120]
  4503b8:	str	w10, [x29, #128]
  4503bc:	ldr	w0, [x0]
  4503c0:	stp	x9, x8, [x29, #136]
  4503c4:	stp	x4, x3, [x29, #152]
  4503c8:	mul	w0, w0, w13
  4503cc:	stp	x5, x11, [x29, #168]
  4503d0:	cmp	w0, w26
  4503d4:	b.cc	44f7c8 <ferror@plt+0x4c1f8>  // b.lo, b.ul, b.last
  4503d8:	lsl	w14, w26, #1
  4503dc:	ubfiz	x0, x26, #4, #31
  4503e0:	sub	sp, sp, x0
  4503e4:	ubfiz	x2, x26, #3, #32
  4503e8:	mov	x1, x20
  4503ec:	mov	x0, sp
  4503f0:	str	w14, [x29, #184]
  4503f4:	bl	402cd0 <memcpy@plt>
  4503f8:	ldp	x9, x8, [x29, #136]
  4503fc:	mov	x20, x0
  450400:	ldp	x4, x3, [x29, #152]
  450404:	mov	w13, #0x13                  	// #19
  450408:	ldp	x5, x11, [x29, #168]
  45040c:	ldr	w14, [x29, #184]
  450410:	ldr	w12, [x29, #112]
  450414:	ldr	w10, [x29, #128]
  450418:	mov	w26, w14
  45041c:	ldr	x7, [x29, #120]
  450420:	sub	w0, w26, w21
  450424:	cmp	x0, x11
  450428:	b.cc	4503ac <ferror@plt+0x4cddc>  // b.lo, b.ul, b.last
  45042c:	mov	x0, x25
  450430:	add	w2, w21, #0x1
  450434:	add	w1, w21, #0x2
  450438:	ubfiz	x13, x21, #3, #32
  45043c:	add	w11, w21, #0x3
  450440:	lsl	x16, x2, #3
  450444:	lsl	x15, x1, #3
  450448:	add	x14, x20, x13
  45044c:	add	x2, x20, x2, lsl #3
  450450:	add	x1, x20, x1, lsl #3
  450454:	cmp	x0, x23
  450458:	b.ls	450478 <ferror@plt+0x4cea8>  // b.plast
  45045c:	str	w25, [x14]
  450460:	add	x12, x7, w12, sxtw
  450464:	str	w23, [x2]
  450468:	add	w21, w21, #0x4
  45046c:	str	x12, [x1]
  450470:	str	x19, [x20, w11, uxtw #3]
  450474:	b	44fd54 <ferror@plt+0x4c784>
  450478:	ldr	x1, [x8, x0, lsl #3]
  45047c:	str	x1, [x20, x13]
  450480:	ldr	x1, [x9, x0, lsl #3]
  450484:	str	x1, [x20, x16]
  450488:	ldr	x1, [x24, x0, lsl #3]
  45048c:	mov	w21, w11
  450490:	add	x0, x0, #0x1
  450494:	str	x1, [x20, x15]
  450498:	b	450430 <ferror@plt+0x4ce60>
  45049c:	ldrsb	w1, [x11, #2]
  4504a0:	add	x12, x11, #0x3
  4504a4:	ldrb	w0, [x11, #1]
  4504a8:	add	w0, w0, w1, lsl #8
  4504ac:	mov	x1, x12
  4504b0:	ldr	x6, [x29, #304]
  4504b4:	add	x2, x1, #0x2
  4504b8:	cmp	x2, x6
  4504bc:	b.cs	4504e0 <ferror@plt+0x4cf10>  // b.hs, b.nlast
  4504c0:	ldrb	w7, [x1]
  4504c4:	sub	w7, w7, #0x6
  4504c8:	and	w7, w7, #0xff
  4504cc:	cmp	w7, #0x1
  4504d0:	b.hi	4504e0 <ferror@plt+0x4cf10>  // b.pmore
  4504d4:	add	x7, x1, #0x3
  4504d8:	mov	x1, x7
  4504dc:	b	4504b0 <ferror@plt+0x4cee0>
  4504e0:	ldr	x6, [x29, #304]
  4504e4:	add	x7, x1, #0x6
  4504e8:	cmp	x7, x6
  4504ec:	b.cs	4504fc <ferror@plt+0x4cf2c>  // b.hs, b.nlast
  4504f0:	ldrb	w13, [x1]
  4504f4:	cmp	w13, #0x13
  4504f8:	b.eq	4504d8 <ferror@plt+0x4cf08>  // b.none
  4504fc:	ldr	x6, [x29, #304]
  450500:	add	x0, x12, w0, sxtw
  450504:	str	x0, [x29, #376]
  450508:	cmp	x1, x6
  45050c:	b.ne	450544 <ferror@plt+0x4cf74>  // b.any
  450510:	mov	w0, #0x11                  	// #17
  450514:	strb	w0, [x11]
  450518:	sub	w0, w21, #0x3
  45051c:	sub	w21, w21, #0x4
  450520:	lsl	x0, x0, #3
  450524:	ubfiz	x1, x21, #3, #32
  450528:	ldrsw	x0, [x20, x0]
  45052c:	ldrsw	x2, [x20, x1]
  450530:	sub	w1, w21, #0x3
  450534:	cmp	x0, x2
  450538:	b.cs	4506f0 <ferror@plt+0x4d120>  // b.hs, b.nlast
  45053c:	mov	w10, #0x0                   	// #0
  450540:	b	450590 <ferror@plt+0x4cfc0>
  450544:	ldrb	w7, [x1]
  450548:	cmp	w7, #0x2
  45054c:	b.eq	4505a8 <ferror@plt+0x4cfd8>  // b.none
  450550:	ldr	x6, [x29, #352]
  450554:	ldrsb	w12, [x6, #56]
  450558:	tbz	w12, #31, 4505fc <ferror@plt+0x4d02c>
  45055c:	cmp	w7, #0xa
  450560:	b.ne	4505fc <ferror@plt+0x4d02c>  // b.any
  450564:	ldrb	w1, [x0, #3]
  450568:	cmp	w1, #0x2
  45056c:	b.ne	4505b0 <ferror@plt+0x4cfe0>  // b.any
  450570:	ldrb	w0, [x0, #5]
  450574:	cmp	w0, w7
  450578:	b.ne	450510 <ferror@plt+0x4cf40>  // b.any
  45057c:	ldrb	w0, [x11]
  450580:	cmp	w0, #0x11
  450584:	b.eq	450518 <ferror@plt+0x4cf48>  // b.none
  450588:	mov	w0, #0xd                   	// #13
  45058c:	strb	w0, [x11]
  450590:	ldrsb	w7, [x11, #2]
  450594:	add	x0, x11, #0x3
  450598:	ldrb	w1, [x11, #1]
  45059c:	add	w7, w1, w7, lsl #8
  4505a0:	add	x7, x0, w7, sxtw
  4505a4:	b	44fd54 <ferror@plt+0x4c784>
  4505a8:	ldrb	w7, [x1, #2]
  4505ac:	b	450564 <ferror@plt+0x4cf94>
  4505b0:	sub	w2, w1, #0x4
  4505b4:	and	w2, w2, #0xff
  4505b8:	cmp	w2, #0x1
  4505bc:	b.hi	45057c <ferror@plt+0x4cfac>  // b.pmore
  4505c0:	ldrb	w12, [x0, #4]
  4505c4:	cmp	w1, #0x5
  4505c8:	cset	w2, eq  // eq = none
  4505cc:	cmp	w7, w12, lsl #3
  4505d0:	b.cs	4505f4 <ferror@plt+0x4d024>  // b.hs, b.nlast
  4505d4:	lsr	w12, w7, #3
  4505d8:	and	w7, w7, #0x7
  4505dc:	add	w12, w12, #0x5
  4505e0:	ldrb	w0, [x0, w12, sxtw]
  4505e4:	asr	w7, w0, w7
  4505e8:	tbz	w7, #0, 4505f4 <ferror@plt+0x4d024>
  4505ec:	cmp	w1, #0x5
  4505f0:	cset	w2, ne  // ne = any
  4505f4:	cbnz	w2, 45057c <ferror@plt+0x4cfac>
  4505f8:	b	450510 <ferror@plt+0x4cf40>
  4505fc:	cmp	w7, #0x4
  450600:	b.ne	45057c <ferror@plt+0x4cfac>  // b.any
  450604:	ldrb	w7, [x0, #3]
  450608:	cmp	w7, #0x2
  45060c:	b.ne	45063c <ferror@plt+0x4d06c>  // b.any
  450610:	ldrb	w0, [x0, #5]
  450614:	ldrb	w2, [x1, #1]
  450618:	cmp	w0, w2, lsl #3
  45061c:	b.ge	450510 <ferror@plt+0x4cf40>  // b.tcont
  450620:	lsr	w2, w0, #3
  450624:	and	w0, w0, #0x7
  450628:	add	w2, w2, #0x2
  45062c:	ldrb	w1, [x1, w2, sxtw]
  450630:	asr	w0, w1, w0
  450634:	tbnz	w0, #0, 45057c <ferror@plt+0x4cfac>
  450638:	b	450510 <ferror@plt+0x4cf40>
  45063c:	cmp	w7, #0x5
  450640:	b.ne	450690 <ferror@plt+0x4d0c0>  // b.any
  450644:	add	x14, x0, #0x5
  450648:	ldrb	w12, [x1, #1]
  45064c:	mov	x1, #0x0                   	// #0
  450650:	mov	w7, w1
  450654:	cmp	w12, w1
  450658:	b.gt	450668 <ferror@plt+0x4d098>
  45065c:	cmp	w12, w1
  450660:	b.eq	450510 <ferror@plt+0x4cf40>  // b.none
  450664:	b	45057c <ferror@plt+0x4cfac>
  450668:	ldrb	w13, [x2, x1]
  45066c:	cbz	w13, 450688 <ferror@plt+0x4d0b8>
  450670:	ldrb	w15, [x0, #4]
  450674:	cmp	w15, w7
  450678:	b.le	45057c <ferror@plt+0x4cfac>
  45067c:	ldrb	w7, [x14, x1]
  450680:	bics	wzr, w13, w7
  450684:	b.ne	45057c <ferror@plt+0x4cfac>  // b.any
  450688:	add	x1, x1, #0x1
  45068c:	b	450650 <ferror@plt+0x4d080>
  450690:	cmp	w7, #0x4
  450694:	b.ne	45057c <ferror@plt+0x4cfac>  // b.any
  450698:	add	x13, x0, #0x5
  45069c:	ldrb	w12, [x1, #1]
  4506a0:	mov	x1, #0x0                   	// #0
  4506a4:	mov	w7, w1
  4506a8:	cmp	w12, w1
  4506ac:	b.le	4506e4 <ferror@plt+0x4d114>
  4506b0:	ldrb	w14, [x0, #4]
  4506b4:	cmp	w14, w1
  4506b8:	b.gt	4506c8 <ferror@plt+0x4d0f8>
  4506bc:	ldrb	w0, [x0, #4]
  4506c0:	cmp	w0, w7
  4506c4:	b	450660 <ferror@plt+0x4d090>
  4506c8:	ldrb	w7, [x13, x1]
  4506cc:	ldrb	w14, [x2, x1]
  4506d0:	add	x1, x1, #0x1
  4506d4:	and	w7, w7, w14
  4506d8:	tst	w7, #0xff
  4506dc:	b.eq	4506a4 <ferror@plt+0x4d0d4>  // b.none
  4506e0:	b	45057c <ferror@plt+0x4cfac>
  4506e4:	cmp	w12, w1
  4506e8:	b.eq	450510 <ferror@plt+0x4cf40>  // b.none
  4506ec:	b	4506bc <ferror@plt+0x4d0ec>
  4506f0:	sub	w21, w21, #0x1
  4506f4:	ldr	x6, [x29, #192]
  4506f8:	ldr	x7, [x20, x21, lsl #3]
  4506fc:	mov	w21, w1
  450700:	str	x7, [x6, x0, lsl #3]
  450704:	ldr	x6, [x29, #200]
  450708:	ldr	x7, [x20, w1, uxtw #3]
  45070c:	str	x7, [x6, x0, lsl #3]
  450710:	sub	x0, x0, #0x1
  450714:	b	450530 <ferror@plt+0x4cf60>
  450718:	ldr	x0, [x29, #280]
  45071c:	str	w10, [x29, #120]
  450720:	stp	x9, x8, [x29, #128]
  450724:	ldr	w0, [x0]
  450728:	stp	x11, x4, [x29, #144]
  45072c:	stp	x3, x5, [x29, #160]
  450730:	mul	w0, w0, w12
  450734:	str	x7, [x29, #176]
  450738:	cmp	w0, w26
  45073c:	b.cc	44f7c8 <ferror@plt+0x4c1f8>  // b.lo, b.ul, b.last
  450740:	lsl	w13, w26, #1
  450744:	ubfiz	x0, x26, #4, #31
  450748:	sub	sp, sp, x0
  45074c:	ubfiz	x2, x26, #3, #32
  450750:	mov	x1, x20
  450754:	mov	x0, sp
  450758:	str	w13, [x29, #184]
  45075c:	bl	402cd0 <memcpy@plt>
  450760:	ldr	w13, [x29, #184]
  450764:	mov	x20, x0
  450768:	ldr	w10, [x29, #120]
  45076c:	mov	w26, w13
  450770:	ldp	x9, x8, [x29, #128]
  450774:	ldp	x11, x4, [x29, #144]
  450778:	ldp	x3, x5, [x29, #160]
  45077c:	ldr	x7, [x29, #176]
  450780:	b	44fa34 <ferror@plt+0x4c464>
  450784:	ldr	x1, [x8, x0, lsl #3]
  450788:	str	x1, [x20, x12]
  45078c:	ldr	x1, [x9, x0, lsl #3]
  450790:	str	x1, [x20, x15]
  450794:	ldr	x1, [x24, x0, lsl #3]
  450798:	mov	w21, w7
  45079c:	add	x0, x0, #0x1
  4507a0:	str	x1, [x20, x14]
  4507a4:	b	44fa48 <ferror@plt+0x4c478>
  4507a8:	ldr	x0, [x29, #280]
  4507ac:	str	x7, [x29, #120]
  4507b0:	str	w10, [x29, #128]
  4507b4:	stp	x9, x8, [x29, #136]
  4507b8:	ldr	w0, [x0]
  4507bc:	stp	x4, x3, [x29, #152]
  4507c0:	stp	x5, x11, [x29, #168]
  4507c4:	mul	w0, w0, w12
  4507c8:	cmp	w0, w26
  4507cc:	b.cc	44f7c8 <ferror@plt+0x4c1f8>  // b.lo, b.ul, b.last
  4507d0:	lsl	w13, w26, #1
  4507d4:	ubfiz	x0, x26, #4, #31
  4507d8:	sub	sp, sp, x0
  4507dc:	ubfiz	x2, x26, #3, #32
  4507e0:	mov	x1, x20
  4507e4:	mov	x0, sp
  4507e8:	str	w13, [x29, #184]
  4507ec:	bl	402cd0 <memcpy@plt>
  4507f0:	ldr	w13, [x29, #184]
  4507f4:	mov	x20, x0
  4507f8:	ldr	w10, [x29, #128]
  4507fc:	mov	w26, w13
  450800:	ldr	x7, [x29, #120]
  450804:	ldp	x9, x8, [x29, #136]
  450808:	ldp	x4, x3, [x29, #152]
  45080c:	ldp	x5, x11, [x29, #168]
  450810:	b	44f9d4 <ferror@plt+0x4c404>
  450814:	ldr	x1, [x8, x0, lsl #3]
  450818:	str	x1, [x20, x12]
  45081c:	ldr	x1, [x9, x0, lsl #3]
  450820:	str	x1, [x20, x15]
  450824:	ldr	x1, [x24, x0, lsl #3]
  450828:	mov	w21, w11
  45082c:	add	x0, x0, #0x1
  450830:	str	x1, [x20, x14]
  450834:	b	44f9e8 <ferror@plt+0x4c418>
  450838:	ldrsb	w0, [x11, #4]
  45083c:	ldrb	w1, [x11, #3]
  450840:	add	w0, w1, w0, lsl #8
  450844:	cmp	w0, #0x0
  450848:	b.le	45085c <ferror@plt+0x4d28c>
  45084c:	sub	w0, w0, #0x1
  450850:	sturh	w0, [x11, #3]
  450854:	add	x7, x11, #0x5
  450858:	b	44fd54 <ferror@plt+0x4c784>
  45085c:	b.ne	44fd54 <ferror@plt+0x4c784>  // b.any
  450860:	sturh	wzr, [x11, #3]
  450864:	ldrsb	w12, [x11, #2]
  450868:	add	x7, x11, #0x3
  45086c:	ldrb	w0, [x11, #1]
  450870:	str	x7, [x29, #376]
  450874:	add	w12, w0, w12, lsl #8
  450878:	ldr	x1, [x29, #304]
  45087c:	ldr	x0, [x29, #376]
  450880:	cmp	x0, x1
  450884:	b.cs	4508b4 <ferror@plt+0x4d2e4>  // b.hs, b.nlast
  450888:	ldrb	w1, [x0]
  45088c:	cbz	w1, 4503a0 <ferror@plt+0x4cdd0>
  450890:	cmp	w1, #0x6
  450894:	b.ne	4508b4 <ferror@plt+0x4d2e4>  // b.any
  450898:	ldrb	w1, [x0, #1]
  45089c:	cmp	x25, #0x101
  4508a0:	ldrb	w23, [x0, #2]
  4508a4:	add	w23, w23, w1
  4508a8:	sxtw	x23, w23
  4508ac:	b.ne	4508b4 <ferror@plt+0x4d2e4>  // b.any
  4508b0:	and	x25, x1, #0xff
  4508b4:	add	x11, x23, #0x1
  4508b8:	mov	w13, #0x13                  	// #19
  4508bc:	sub	x11, x11, x25
  4508c0:	add	x11, x11, x11, lsl #1
  4508c4:	add	x11, x11, #0x4
  4508c8:	b	450420 <ferror@plt+0x4ce50>
  4508cc:	ldrsb	w0, [x11, #4]
  4508d0:	ldrb	w1, [x11, #3]
  4508d4:	adds	w0, w1, w0, lsl #8
  4508d8:	b.eq	450854 <ferror@plt+0x4d284>  // b.none
  4508dc:	sub	w0, w0, #0x1
  4508e0:	sturh	w0, [x11, #3]
  4508e4:	b	450590 <ferror@plt+0x4cfc0>
  4508e8:	ldrb	w0, [x11, #1]
  4508ec:	add	x2, x11, #0x3
  4508f0:	ldrsb	w1, [x11, #2]
  4508f4:	add	w1, w0, w1, lsl #8
  4508f8:	add	x0, x2, w1, sxtw
  4508fc:	str	x0, [x29, #376]
  450900:	ldrb	w7, [x11, #3]
  450904:	ldrsb	w0, [x11, #4]
  450908:	add	w0, w7, w0, lsl #8
  45090c:	strb	w0, [x2, w1, sxtw]
  450910:	add	x7, x11, #0x5
  450914:	ldr	x1, [x29, #376]
  450918:	asr	w0, w0, #8
  45091c:	strb	w0, [x1, #1]
  450920:	b	44fd54 <ferror@plt+0x4c784>
  450924:	ldr	x0, [x29, #296]
  450928:	cmp	x19, x0
  45092c:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  450930:	ldr	w0, [x29, #328]
  450934:	cmp	w0, #0x0
  450938:	ldr	x0, [x29, #288]
  45093c:	ccmp	x19, x0, #0x4, ne  // ne = any
  450940:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  450944:	sub	x0, x19, #0x1
  450948:	cmp	x27, x0
  45094c:	b.ne	45098c <ferror@plt+0x4d3bc>  // b.any
  450950:	ldrb	w1, [x22]
  450954:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450958:	add	x0, x0, #0x370
  45095c:	ldrb	w1, [x0, w1, sxtw]
  450960:	cmp	w1, #0x1
  450964:	cset	w2, eq  // eq = none
  450968:	cmp	x19, x27
  45096c:	b.ne	4509a4 <ferror@plt+0x4d3d4>  // b.any
  450970:	ldrb	w1, [x22]
  450974:	ldrb	w0, [x0, w1, sxtw]
  450978:	cmp	w0, #0x1
  45097c:	cset	w0, eq  // eq = none
  450980:	cmp	w0, w2
  450984:	b.ne	44fd54 <ferror@plt+0x4c784>  // b.any
  450988:	b	44f660 <ferror@plt+0x4c090>
  45098c:	cmp	x22, x19
  450990:	b.ne	45099c <ferror@plt+0x4d3cc>  // b.any
  450994:	ldurb	w1, [x27, #-1]
  450998:	b	450954 <ferror@plt+0x4d384>
  45099c:	ldurb	w1, [x19, #-1]
  4509a0:	b	450954 <ferror@plt+0x4d384>
  4509a4:	sub	x1, x22, #0x1
  4509a8:	cmp	x19, x1
  4509ac:	b.ne	4509b8 <ferror@plt+0x4d3e8>  // b.any
  4509b0:	ldurb	w1, [x27, #-1]
  4509b4:	b	450974 <ferror@plt+0x4d3a4>
  4509b8:	ldrb	w1, [x19]
  4509bc:	b	450974 <ferror@plt+0x4d3a4>
  4509c0:	ldr	x0, [x29, #296]
  4509c4:	cmp	x19, x0
  4509c8:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  4509cc:	ldr	w0, [x29, #328]
  4509d0:	cmp	w0, #0x0
  4509d4:	ldr	x0, [x29, #288]
  4509d8:	ccmp	x19, x0, #0x4, ne  // ne = any
  4509dc:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  4509e0:	sub	x0, x19, #0x1
  4509e4:	cmp	x27, x0
  4509e8:	b.ne	450a24 <ferror@plt+0x4d454>  // b.any
  4509ec:	ldrb	w1, [x22]
  4509f0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4509f4:	add	x0, x0, #0x370
  4509f8:	ldrb	w1, [x0, w1, sxtw]
  4509fc:	cmp	w1, #0x1
  450a00:	cset	w2, eq  // eq = none
  450a04:	cmp	x19, x27
  450a08:	b.ne	450a3c <ferror@plt+0x4d46c>  // b.any
  450a0c:	ldrb	w1, [x22]
  450a10:	ldrb	w0, [x0, w1, sxtw]
  450a14:	cmp	w0, #0x1
  450a18:	cset	w0, eq  // eq = none
  450a1c:	cmp	w0, w2
  450a20:	b	450284 <ferror@plt+0x4ccb4>
  450a24:	cmp	x22, x19
  450a28:	b.ne	450a34 <ferror@plt+0x4d464>  // b.any
  450a2c:	ldurb	w1, [x27, #-1]
  450a30:	b	4509f0 <ferror@plt+0x4d420>
  450a34:	ldurb	w1, [x19, #-1]
  450a38:	b	4509f0 <ferror@plt+0x4d420>
  450a3c:	sub	x1, x22, #0x1
  450a40:	cmp	x19, x1
  450a44:	b.ne	450a50 <ferror@plt+0x4d480>  // b.any
  450a48:	ldurb	w1, [x27, #-1]
  450a4c:	b	450a10 <ferror@plt+0x4d440>
  450a50:	ldrb	w1, [x19]
  450a54:	b	450a10 <ferror@plt+0x4d440>
  450a58:	ldr	x0, [x29, #288]
  450a5c:	cmp	x19, x0
  450a60:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450a64:	cmp	x19, x27
  450a68:	b.ne	450aac <ferror@plt+0x4d4dc>  // b.any
  450a6c:	ldrb	w1, [x22]
  450a70:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450a74:	add	x0, x0, #0x370
  450a78:	ldrb	w1, [x0, w1, sxtw]
  450a7c:	cmp	w1, #0x1
  450a80:	b.ne	44f660 <ferror@plt+0x4c090>  // b.any
  450a84:	ldr	x1, [x29, #296]
  450a88:	cmp	x19, x1
  450a8c:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  450a90:	ldr	w1, [x29, #328]
  450a94:	cbz	w1, 44fd54 <ferror@plt+0x4c784>
  450a98:	sub	x1, x19, #0x1
  450a9c:	cmp	x27, x1
  450aa0:	b.ne	450ac8 <ferror@plt+0x4d4f8>  // b.any
  450aa4:	ldrb	w1, [x22]
  450aa8:	b	450adc <ferror@plt+0x4d50c>
  450aac:	sub	x0, x22, #0x1
  450ab0:	cmp	x19, x0
  450ab4:	b.ne	450ac0 <ferror@plt+0x4d4f0>  // b.any
  450ab8:	ldurb	w1, [x27, #-1]
  450abc:	b	450a70 <ferror@plt+0x4d4a0>
  450ac0:	ldrb	w1, [x19]
  450ac4:	b	450a70 <ferror@plt+0x4d4a0>
  450ac8:	cmp	x22, x19
  450acc:	b.ne	450ad8 <ferror@plt+0x4d508>  // b.any
  450ad0:	ldurb	w1, [x27, #-1]
  450ad4:	b	450adc <ferror@plt+0x4d50c>
  450ad8:	ldurb	w1, [x19, #-1]
  450adc:	ldrb	w0, [x0, w1, sxtw]
  450ae0:	cmp	w0, #0x1
  450ae4:	b	450984 <ferror@plt+0x4d3b4>
  450ae8:	ldr	x0, [x29, #296]
  450aec:	cmp	x19, x0
  450af0:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450af4:	ldr	w0, [x29, #328]
  450af8:	cbz	w0, 44f660 <ferror@plt+0x4c090>
  450afc:	sub	x0, x19, #0x1
  450b00:	cmp	x27, x0
  450b04:	b.ne	450b48 <ferror@plt+0x4d578>  // b.any
  450b08:	ldrb	w1, [x22]
  450b0c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450b10:	add	x0, x0, #0x370
  450b14:	ldrb	w1, [x0, w1, sxtw]
  450b18:	cmp	w1, #0x1
  450b1c:	b.ne	44f660 <ferror@plt+0x4c090>  // b.any
  450b20:	ldr	x1, [x29, #288]
  450b24:	cmp	x19, x1
  450b28:	b.eq	44fd54 <ferror@plt+0x4c784>  // b.none
  450b2c:	cmp	x19, x27
  450b30:	b.eq	450aa4 <ferror@plt+0x4d4d4>  // b.none
  450b34:	sub	x1, x22, #0x1
  450b38:	cmp	x19, x1
  450b3c:	b.eq	450ad0 <ferror@plt+0x4d500>  // b.none
  450b40:	ldrb	w1, [x19]
  450b44:	b	450adc <ferror@plt+0x4d50c>
  450b48:	cmp	x22, x19
  450b4c:	b.ne	450b58 <ferror@plt+0x4d588>  // b.any
  450b50:	ldurb	w1, [x27, #-1]
  450b54:	b	450b0c <ferror@plt+0x4d53c>
  450b58:	ldurb	w1, [x19, #-1]
  450b5c:	b	450b0c <ferror@plt+0x4d53c>
  450b60:	cmp	x3, x19
  450b64:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450b68:	mov	x4, x3
  450b6c:	mov	x19, x22
  450b70:	cmp	x19, x4
  450b74:	b.eq	450b60 <ferror@plt+0x4d590>  // b.none
  450b78:	cmp	x19, x27
  450b7c:	b.ne	450ba4 <ferror@plt+0x4d5d4>  // b.any
  450b80:	ldrb	w1, [x22]
  450b84:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450b88:	add	x0, x0, #0x370
  450b8c:	ldrb	w0, [x0, w1, sxtw]
  450b90:	cmp	w0, #0x1
  450b94:	b.ne	44f660 <ferror@plt+0x4c090>  // b.any
  450b98:	cbnz	w10, 44fbac <ferror@plt+0x4c5dc>
  450b9c:	mov	x0, x25
  450ba0:	b	450bd4 <ferror@plt+0x4d604>
  450ba4:	sub	x0, x22, #0x1
  450ba8:	cmp	x19, x0
  450bac:	b.ne	450bb8 <ferror@plt+0x4d5e8>  // b.any
  450bb0:	ldurb	w1, [x27, #-1]
  450bb4:	b	450b84 <ferror@plt+0x4d5b4>
  450bb8:	ldrb	w1, [x19]
  450bbc:	b	450b84 <ferror@plt+0x4d5b4>
  450bc0:	lsl	x2, x0, #3
  450bc4:	add	x0, x0, #0x1
  450bc8:	ldrb	w1, [x24, x2]
  450bcc:	orr	w1, w1, #0x18
  450bd0:	strb	w1, [x24, x2]
  450bd4:	cmp	x23, x0
  450bd8:	b.cs	450bc0 <ferror@plt+0x4d5f0>  // b.hs, b.nlast
  450bdc:	b	44fbac <ferror@plt+0x4c5dc>
  450be0:	cmp	x3, x19
  450be4:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450be8:	mov	x4, x3
  450bec:	mov	x19, x22
  450bf0:	cmp	x19, x4
  450bf4:	b.eq	450be0 <ferror@plt+0x4d610>  // b.none
  450bf8:	cmp	x19, x27
  450bfc:	b.ne	450c24 <ferror@plt+0x4d654>  // b.any
  450c00:	ldrb	w1, [x22]
  450c04:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450c08:	add	x0, x0, #0x370
  450c0c:	ldrb	w0, [x0, w1, sxtw]
  450c10:	cmp	w0, #0x1
  450c14:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450c18:	cbnz	w10, 44fbac <ferror@plt+0x4c5dc>
  450c1c:	mov	x0, x25
  450c20:	b	450c54 <ferror@plt+0x4d684>
  450c24:	sub	x0, x22, #0x1
  450c28:	cmp	x19, x0
  450c2c:	b.ne	450c38 <ferror@plt+0x4d668>  // b.any
  450c30:	ldurb	w1, [x27, #-1]
  450c34:	b	450c04 <ferror@plt+0x4d634>
  450c38:	ldrb	w1, [x19]
  450c3c:	b	450c04 <ferror@plt+0x4d634>
  450c40:	lsl	x2, x0, #3
  450c44:	add	x0, x0, #0x1
  450c48:	ldrb	w1, [x24, x2]
  450c4c:	orr	w1, w1, #0x18
  450c50:	strb	w1, [x24, x2]
  450c54:	cmp	x23, x0
  450c58:	b.cs	450c40 <ferror@plt+0x4d670>  // b.hs, b.nlast
  450c5c:	b	44fbac <ferror@plt+0x4c5dc>
  450c60:	bl	403180 <abort@plt>
  450c64:	mov	x19, x3
  450c68:	b	44f660 <ferror@plt+0x4c090>
  450c6c:	sub	w2, w21, #0x1
  450c70:	sub	w21, w21, #0x2
  450c74:	ldr	x2, [x20, x2, lsl #3]
  450c78:	str	x2, [x24, x0, lsl #3]
  450c7c:	ldr	x2, [x20, x21, lsl #3]
  450c80:	str	x2, [x9, x0, lsl #3]
  450c84:	ldr	x2, [x20, w1, uxtw #3]
  450c88:	mov	w21, w1
  450c8c:	str	x2, [x8, x0, lsl #3]
  450c90:	sub	x0, x0, #0x1
  450c94:	b	44f698 <ferror@plt+0x4c0c8>
  450c98:	cmp	w0, #0x16
  450c9c:	b.ne	44f6d0 <ferror@plt+0x4c100>  // b.any
  450ca0:	mov	w2, #0x1                   	// #1
  450ca4:	add	x0, x7, #0x1
  450ca8:	str	x0, [x29, #376]
  450cac:	add	x0, x7, #0x3
  450cb0:	ldrb	w10, [x7, #1]
  450cb4:	ldrsb	w1, [x7, #2]
  450cb8:	add	w1, w10, w1, lsl #8
  450cbc:	add	x10, x0, w1, sxtw
  450cc0:	str	x10, [x29, #376]
  450cc4:	ldrb	w0, [x0, w1, sxtw]
  450cc8:	cbz	w2, 450ce0 <ferror@plt+0x4d710>
  450ccc:	cmp	w0, #0x15
  450cd0:	b.eq	44f660 <ferror@plt+0x4c090>  // b.none
  450cd4:	b	44f6d0 <ferror@plt+0x4c100>
  450cd8:	mov	w2, #0x0                   	// #0
  450cdc:	b	450ca4 <ferror@plt+0x4d6d4>
  450ce0:	cmp	w0, #0xf
  450ce4:	b	450cd0 <ferror@plt+0x4d700>
  450ce8:	ldr	w0, [x29, #252]
  450cec:	ldr	x19, [x29, #312]
  450cf0:	cbnz	w0, 44f6fc <ferror@plt+0x4c12c>
  450cf4:	b	44f414 <ferror@plt+0x4be44>
  450cf8:	cmp	x11, x5
  450cfc:	b.cs	4500a8 <ferror@plt+0x4cad8>  // b.hs, b.nlast
  450d00:	ldr	x13, [x29, #336]
  450d04:	b	4500c0 <ferror@plt+0x4caf0>
  450d08:	stp	x29, x30, [sp, #-112]!
  450d0c:	cmp	w5, #0x0
  450d10:	mov	x29, sp
  450d14:	stp	x19, x20, [sp, #16]
  450d18:	stp	x21, x22, [sp, #32]
  450d1c:	mov	x21, x0
  450d20:	stp	x23, x24, [sp, #48]
  450d24:	stp	x25, x26, [sp, #64]
  450d28:	add	w26, w2, w4
  450d2c:	ccmp	w26, w5, #0x1, ge  // ge = tcont
  450d30:	stp	x27, x28, [sp, #80]
  450d34:	str	x7, [sp, #96]
  450d38:	ldp	x25, x28, [x0, #32]
  450d3c:	add	w0, w5, w6
  450d40:	b.lt	450f10 <ferror@plt+0x4d940>  // b.tstop
  450d44:	mov	x27, x1
  450d48:	mov	w22, w2
  450d4c:	mov	x23, x3
  450d50:	mov	w24, w4
  450d54:	mov	w19, w5
  450d58:	tbz	w0, #31, 450e04 <ferror@plt+0x4d834>
  450d5c:	neg	w20, w5
  450d60:	ldr	x0, [x21, #16]
  450d64:	cbz	x0, 450d98 <ferror@plt+0x4d7c8>
  450d68:	cmp	w20, #0x0
  450d6c:	b.le	450d98 <ferror@plt+0x4d7c8>
  450d70:	ldr	x0, [x21]
  450d74:	ldrb	w0, [x0]
  450d78:	cmp	w0, #0xb
  450d7c:	b.eq	450d90 <ferror@plt+0x4d7c0>  // b.none
  450d80:	cmp	w0, #0x9
  450d84:	b.ne	450d98 <ferror@plt+0x4d7c8>  // b.any
  450d88:	ldrsb	w0, [x21, #56]
  450d8c:	tbnz	w0, #31, 450d98 <ferror@plt+0x4d7c8>
  450d90:	cbnz	w19, 450f10 <ferror@plt+0x4d940>
  450d94:	mov	w20, #0x1                   	// #1
  450d98:	cbnz	x25, 450e18 <ferror@plt+0x4d848>
  450d9c:	sub	x8, x23, w22, sxtw
  450da0:	cmp	x25, #0x0
  450da4:	ccmp	w19, w26, #0x0, ne  // ne = any
  450da8:	b.ge	450e7c <ferror@plt+0x4d8ac>  // b.tcont
  450dac:	ldrb	w0, [x21, #56]
  450db0:	tbnz	w0, #0, 450e7c <ferror@plt+0x4d8ac>
  450db4:	cmp	w20, #0x0
  450db8:	b.le	450ee4 <ferror@plt+0x4d914>
  450dbc:	cmp	w19, w22
  450dc0:	b.ge	450f2c <ferror@plt+0x4d95c>  // b.tcont
  450dc4:	add	w0, w19, w20
  450dc8:	sub	w4, w22, w19
  450dcc:	cmp	w0, w22
  450dd0:	sub	w4, w20, w4
  450dd4:	csel	w4, w4, wzr, ge  // ge = tcont
  450dd8:	mov	x0, x27
  450ddc:	add	x0, x0, w19, sxtw
  450de0:	mov	w2, w20
  450de4:	cbnz	x28, 450e58 <ferror@plt+0x4d888>
  450de8:	cmp	w4, w2
  450dec:	b.ge	450e70 <ferror@plt+0x4d8a0>  // b.tcont
  450df0:	ldrb	w1, [x0], #1
  450df4:	ldrb	w1, [x25, x1]
  450df8:	cbnz	w1, 450e70 <ferror@plt+0x4d8a0>
  450dfc:	sub	w2, w2, #0x1
  450e00:	b	450de8 <ferror@plt+0x4d818>
  450e04:	mov	w20, w6
  450e08:	cmp	w26, w0
  450e0c:	b.ge	450d60 <ferror@plt+0x4d790>  // b.tcont
  450e10:	sub	w20, w26, w5
  450e14:	b	450d60 <ferror@plt+0x4d790>
  450e18:	ldrb	w0, [x21, #56]
  450e1c:	tbnz	w0, #3, 450d9c <ferror@plt+0x4d7cc>
  450e20:	mov	x0, x21
  450e24:	bl	44efb0 <ferror@plt+0x4b9e0>
  450e28:	cmn	w0, #0x2
  450e2c:	b.ne	450d9c <ferror@plt+0x4d7cc>  // b.any
  450e30:	mov	w19, #0xfffffffe            	// #-2
  450e34:	mov	w0, w19
  450e38:	ldp	x19, x20, [sp, #16]
  450e3c:	ldp	x21, x22, [sp, #32]
  450e40:	ldp	x23, x24, [sp, #48]
  450e44:	ldp	x25, x26, [sp, #64]
  450e48:	ldp	x27, x28, [sp, #80]
  450e4c:	ldp	x29, x30, [sp], #112
  450e50:	ret
  450e54:	sub	w2, w2, #0x1
  450e58:	cmp	w4, w2
  450e5c:	b.ge	450e70 <ferror@plt+0x4d8a0>  // b.tcont
  450e60:	ldrb	w1, [x0], #1
  450e64:	ldrb	w1, [x28, x1]
  450e68:	ldrb	w1, [x25, x1]
  450e6c:	cbz	w1, 450e54 <ferror@plt+0x4d884>
  450e70:	sub	w20, w20, w2
  450e74:	add	w19, w19, w20
  450e78:	mov	w20, w2
  450e7c:	cmp	w20, #0x0
  450e80:	ccmp	w19, w26, #0x0, ge  // ge = tcont
  450e84:	b.ne	450e94 <ferror@plt+0x4d8c4>  // b.any
  450e88:	cbz	x25, 450e94 <ferror@plt+0x4d8c4>
  450e8c:	ldrb	w0, [x21, #56]
  450e90:	tbz	w0, #0, 450f10 <ferror@plt+0x4d940>
  450e94:	ldr	w7, [sp, #112]
  450e98:	mov	w5, w19
  450e9c:	ldr	x6, [sp, #96]
  450ea0:	mov	w4, w24
  450ea4:	mov	x3, x23
  450ea8:	mov	w2, w22
  450eac:	mov	x1, x27
  450eb0:	mov	x0, x21
  450eb4:	str	x8, [sp, #104]
  450eb8:	bl	44f330 <ferror@plt+0x4bd60>
  450ebc:	tbz	w0, #31, 450e34 <ferror@plt+0x4d864>
  450ec0:	cmn	w0, #0x2
  450ec4:	b.eq	450e30 <ferror@plt+0x4d860>  // b.none
  450ec8:	cmp	w20, #0x0
  450ecc:	cbz	w20, 450f10 <ferror@plt+0x4d940>
  450ed0:	ldr	x8, [sp, #104]
  450ed4:	b.le	450f20 <ferror@plt+0x4d950>
  450ed8:	sub	w20, w20, #0x1
  450edc:	add	w19, w19, #0x1
  450ee0:	b	450da0 <ferror@plt+0x4d7d0>
  450ee4:	cmp	w22, #0x0
  450ee8:	ccmp	w19, w22, #0x0, ne  // ne = any
  450eec:	b.lt	450f18 <ferror@plt+0x4d948>  // b.tstop
  450ef0:	sub	w0, w19, w22
  450ef4:	ldrb	w0, [x23, w0, sxtw]
  450ef8:	and	x0, x0, #0xff
  450efc:	cbz	x28, 450f04 <ferror@plt+0x4d934>
  450f00:	ldrb	w0, [x28, x0]
  450f04:	ldrb	w0, [x25, x0]
  450f08:	cbnz	w0, 450e7c <ferror@plt+0x4d8ac>
  450f0c:	cbnz	w20, 450f20 <ferror@plt+0x4d950>
  450f10:	mov	w19, #0xffffffff            	// #-1
  450f14:	b	450e34 <ferror@plt+0x4d864>
  450f18:	ldrb	w0, [x27, w19, sxtw]
  450f1c:	b	450ef8 <ferror@plt+0x4d928>
  450f20:	add	w20, w20, #0x1
  450f24:	sub	w19, w19, #0x1
  450f28:	b	450da0 <ferror@plt+0x4d7d0>
  450f2c:	mov	x0, x8
  450f30:	mov	w4, #0x0                   	// #0
  450f34:	b	450ddc <ferror@plt+0x4d80c>
  450f38:	stp	x29, x30, [sp, #-368]!
  450f3c:	mov	x29, sp
  450f40:	str	x0, [sp, #144]
  450f44:	str	x0, [sp, #232]
  450f48:	add	x0, x0, x1
  450f4c:	str	x0, [sp, #112]
  450f50:	ldr	x0, [x3, #40]
  450f54:	stp	x19, x20, [sp, #16]
  450f58:	mov	x20, x3
  450f5c:	stp	x21, x22, [sp, #32]
  450f60:	stp	x23, x24, [sp, #48]
  450f64:	stp	x25, x26, [sp, #64]
  450f68:	stp	x27, x28, [sp, #80]
  450f6c:	str	x2, [sp, #104]
  450f70:	str	x0, [sp, #120]
  450f74:	mov	x0, #0x500                 	// #1280
  450f78:	bl	402f40 <malloc@plt>
  450f7c:	cbnz	x0, 450fa4 <ferror@plt+0x4d9d4>
  450f80:	mov	w27, #0xc                   	// #12
  450f84:	mov	w0, w27
  450f88:	ldp	x19, x20, [sp, #16]
  450f8c:	ldp	x21, x22, [sp, #32]
  450f90:	ldp	x23, x24, [sp, #48]
  450f94:	ldp	x25, x26, [sp, #64]
  450f98:	ldp	x27, x28, [sp, #80]
  450f9c:	ldp	x29, x30, [sp], #368
  450fa0:	ret
  450fa4:	mov	x21, x0
  450fa8:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  450fac:	ldr	x0, [sp, #104]
  450fb0:	add	x19, x19, #0x370
  450fb4:	stp	xzr, x0, [x20, #16]
  450fb8:	mov	w1, #0xffffff97            	// #-105
  450fbc:	ldrb	w0, [x20, #56]
  450fc0:	str	xzr, [x20, #48]
  450fc4:	and	w0, w0, w1
  450fc8:	strb	w0, [x20, #56]
  450fcc:	ldr	w0, [x19, #260]
  450fd0:	cbnz	w0, 45101c <ferror@plt+0x4da4c>
  450fd4:	mov	x2, #0x100                 	// #256
  450fd8:	mov	w1, #0x0                   	// #0
  450fdc:	mov	x0, x19
  450fe0:	bl	403000 <memset@plt>
  450fe4:	bl	403240 <__ctype_b_loc@plt>
  450fe8:	mov	x1, #0x0                   	// #0
  450fec:	mov	w2, #0x1                   	// #1
  450ff0:	ldr	x3, [x0]
  450ff4:	ldrh	w3, [x3, x1, lsl #1]
  450ff8:	tbz	w3, #3, 451000 <ferror@plt+0x4da30>
  450ffc:	strb	w2, [x19, x1]
  451000:	add	x1, x1, #0x1
  451004:	cmp	x1, #0x100
  451008:	b.ne	450ff0 <ferror@plt+0x4da20>  // b.any
  45100c:	mov	w0, #0x1                   	// #1
  451010:	strb	w0, [x19, #95]
  451014:	mov	w0, #0x1                   	// #1
  451018:	str	w0, [x19, #260]
  45101c:	ldr	x0, [x20, #8]
  451020:	cbnz	x0, 451060 <ferror@plt+0x4da90>
  451024:	ldr	x0, [x20]
  451028:	cbz	x0, 45104c <ferror@plt+0x4da7c>
  45102c:	mov	x1, #0x20                  	// #32
  451030:	bl	4030b0 <realloc@plt>
  451034:	str	x0, [x20]
  451038:	ldr	x0, [x20]
  45103c:	cbnz	x0, 451058 <ferror@plt+0x4da88>
  451040:	mov	x0, x21
  451044:	bl	4032a0 <free@plt>
  451048:	b	450f80 <ferror@plt+0x4d9b0>
  45104c:	mov	x0, #0x20                  	// #32
  451050:	bl	402f40 <malloc@plt>
  451054:	b	451034 <ferror@plt+0x4da64>
  451058:	mov	x0, #0x20                  	// #32
  45105c:	str	x0, [x20, #8]
  451060:	ldr	x24, [x20]
  451064:	mov	w0, #0x20                  	// #32
  451068:	str	wzr, [sp, #132]
  45106c:	mov	x19, x24
  451070:	stp	wzr, w0, [sp, #152]
  451074:	mov	x22, #0x0                   	// #0
  451078:	mov	x23, #0x0                   	// #0
  45107c:	b	4516b4 <ferror@plt+0x4e0e4>
  451080:	ldr	x2, [sp, #120]
  451084:	add	x1, x0, #0x1
  451088:	str	x1, [sp, #232]
  45108c:	ldrb	w28, [x0]
  451090:	cbz	x2, 45109c <ferror@plt+0x4dacc>
  451094:	and	x28, x28, #0xff
  451098:	ldrb	w28, [x2, x28]
  45109c:	cmp	w28, #0x2e
  4510a0:	b.hi	45115c <ferror@plt+0x4db8c>  // b.pmore
  4510a4:	cmp	w28, #0x23
  4510a8:	b.hi	451138 <ferror@plt+0x4db68>  // b.pmore
  4510ac:	cmp	w28, #0xa
  4510b0:	b.eq	4523c8 <ferror@plt+0x4edf8>  // b.none
  4510b4:	cbz	x26, 451128 <ferror@plt+0x4db58>
  4510b8:	ldrb	w0, [x26]
  4510bc:	ldrb	w1, [x26]
  4510c0:	add	x0, x0, #0x1
  4510c4:	add	x0, x26, x0
  4510c8:	cmp	x24, x0
  4510cc:	b.ne	451128 <ferror@plt+0x4db58>  // b.any
  4510d0:	cmp	w1, #0xff
  4510d4:	b.eq	451128 <ferror@plt+0x4db58>  // b.none
  4510d8:	ldr	x1, [sp, #232]
  4510dc:	ldrb	w0, [x1]
  4510e0:	cmp	w0, #0x2a
  4510e4:	b.eq	451128 <ferror@plt+0x4db58>  // b.none
  4510e8:	cmp	w0, #0x5e
  4510ec:	b.eq	451128 <ferror@plt+0x4db58>  // b.none
  4510f0:	ldr	x2, [sp, #104]
  4510f4:	tbz	w2, #1, 452fc8 <ferror@plt+0x4f9f8>
  4510f8:	cmp	w0, #0x5c
  4510fc:	b.ne	451114 <ferror@plt+0x4db44>  // b.any
  451100:	ldrb	w2, [x1, #1]
  451104:	mov	w3, #0x3f                  	// #63
  451108:	cmp	w2, #0x2b
  45110c:	ccmp	w2, w3, #0x4, ne  // ne = any
  451110:	b.eq	451128 <ferror@plt+0x4db58>  // b.none
  451114:	ldr	x2, [sp, #104]
  451118:	tbz	w2, #9, 453060 <ferror@plt+0x4fa90>
  45111c:	tbz	w2, #12, 452fd8 <ferror@plt+0x4fa08>
  451120:	cmp	w0, #0x7b
  451124:	b.ne	453060 <ferror@plt+0x4fa90>  // b.any
  451128:	mov	x23, x24
  45112c:	mov	x27, #0x10000               	// #65536
  451130:	mov	w2, #0x10001               	// #65537
  451134:	b	453040 <ferror@plt+0x4fa70>
  451138:	sub	w3, w28, #0x24
  45113c:	cmp	w3, #0xa
  451140:	b.hi	4510b4 <ferror@plt+0x4dae4>  // b.pmore
  451144:	adrp	x2, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451148:	add	x2, x2, #0x350
  45114c:	ldrh	w2, [x2, w3, uxtw #1]
  451150:	adr	x3, 45115c <ferror@plt+0x4db8c>
  451154:	add	x2, x3, w2, sxth #2
  451158:	br	x2
  45115c:	cmp	w28, #0x5e
  451160:	b.eq	4511cc <ferror@plt+0x4dbfc>  // b.none
  451164:	b.hi	4511ac <ferror@plt+0x4dbdc>  // b.pmore
  451168:	cmp	w28, #0x5b
  45116c:	b.eq	451788 <ferror@plt+0x4e1b8>  // b.none
  451170:	cmp	w28, #0x5c
  451174:	b.eq	45250c <ferror@plt+0x4ef3c>  // b.none
  451178:	cmp	w28, #0x3f
  45117c:	b.ne	4510b4 <ferror@plt+0x4dae4>  // b.any
  451180:	ldr	x1, [sp, #104]
  451184:	mov	x0, #0x402                 	// #1026
  451188:	tst	x1, x0
  45118c:	b.ne	4510b4 <ferror@plt+0x4dae4>  // b.any
  451190:	cbnz	x23, 4513fc <ferror@plt+0x4de2c>
  451194:	ldr	x0, [sp, #104]
  451198:	tbz	w0, #5, 4513f4 <ferror@plt+0x4de24>
  45119c:	mov	x0, x21
  4511a0:	mov	w27, #0xd                   	// #13
  4511a4:	bl	4032a0 <free@plt>
  4511a8:	b	450f84 <ferror@plt+0x4d9b4>
  4511ac:	cmp	w28, #0x7b
  4511b0:	b.eq	452438 <ferror@plt+0x4ee68>  // b.none
  4511b4:	cmp	w28, #0x7c
  4511b8:	b.ne	4510b4 <ferror@plt+0x4dae4>  // b.any
  4511bc:	ldr	x0, [sp, #104]
  4511c0:	tbz	w0, #15, 4510b4 <ferror@plt+0x4dae4>
  4511c4:	mov	w28, #0x7c                  	// #124
  4511c8:	b	4523d0 <ferror@plt+0x4ee00>
  4511cc:	ldr	x2, [sp, #144]
  4511d0:	add	x2, x2, #0x1
  4511d4:	cmp	x1, x2
  4511d8:	b.eq	451234 <ferror@plt+0x4dc64>  // b.none
  4511dc:	ldr	x1, [sp, #104]
  4511e0:	tbnz	w1, #3, 451234 <ferror@plt+0x4dc64>
  4511e4:	ldr	x2, [sp, #144]
  4511e8:	sub	x1, x0, #0x1
  4511ec:	cmp	x2, x1
  4511f0:	b.cs	45121c <ferror@plt+0x4dc4c>  // b.hs, b.nlast
  4511f4:	ldurb	w1, [x0, #-2]
  4511f8:	cmp	w1, #0x5c
  4511fc:	cset	w1, eq  // eq = none
  451200:	ldurb	w0, [x0, #-1]
  451204:	cmp	w0, #0x28
  451208:	b.ne	451224 <ferror@plt+0x4dc54>  // b.any
  45120c:	ldr	x0, [sp, #104]
  451210:	tbnz	w0, #13, 451234 <ferror@plt+0x4dc64>
  451214:	cbz	w1, 4510b4 <ferror@plt+0x4dae4>
  451218:	b	451234 <ferror@plt+0x4dc64>
  45121c:	mov	w1, #0x0                   	// #0
  451220:	b	451200 <ferror@plt+0x4dc30>
  451224:	cmp	w0, #0x7c
  451228:	b.ne	4510b4 <ferror@plt+0x4dae4>  // b.any
  45122c:	ldr	x0, [sp, #104]
  451230:	tbz	w0, #15, 451214 <ferror@plt+0x4dc44>
  451234:	mov	x27, #0x10000               	// #65536
  451238:	mov	w28, #0x10001               	// #65537
  45123c:	b	45129c <ferror@plt+0x4dccc>
  451240:	cmp	x1, #0x10, lsl #12
  451244:	b.ne	451250 <ferror@plt+0x4dc80>  // b.any
  451248:	mov	w27, #0xf                   	// #15
  45124c:	b	450f84 <ferror@plt+0x4d9b4>
  451250:	lsl	x1, x1, #1
  451254:	mov	x0, x25
  451258:	cmp	x1, x28
  45125c:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  451260:	str	x1, [x20, #8]
  451264:	bl	4030b0 <realloc@plt>
  451268:	str	x0, [x20]
  45126c:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  451270:	cmp	x0, x25
  451274:	b.eq	45129c <ferror@plt+0x4dccc>  // b.none
  451278:	sub	x0, x0, x25
  45127c:	add	x24, x24, x0
  451280:	add	x19, x19, x0
  451284:	cbz	x22, 45128c <ferror@plt+0x4dcbc>
  451288:	add	x22, x22, x0
  45128c:	cbz	x23, 451294 <ferror@plt+0x4dcc4>
  451290:	add	x23, x23, x0
  451294:	cbz	x26, 45129c <ferror@plt+0x4dccc>
  451298:	add	x26, x26, x0
  45129c:	ldp	x25, x1, [x20]
  4512a0:	sub	x0, x24, x25
  4512a4:	add	x0, x0, #0x1
  4512a8:	cmp	x0, x1
  4512ac:	b.hi	451240 <ferror@plt+0x4dc70>  // b.pmore
  4512b0:	mov	w0, #0x9                   	// #9
  4512b4:	strb	w0, [x24], #1
  4512b8:	ldr	x1, [sp, #112]
  4512bc:	ldr	x0, [sp, #232]
  4512c0:	cmp	x0, x1
  4512c4:	b.ne	451080 <ferror@plt+0x4dab0>  // b.any
  4512c8:	cbz	x22, 4512e0 <ferror@plt+0x4dd10>
  4512cc:	mov	w0, #0xe                   	// #14
  4512d0:	strb	w0, [x22]
  4512d4:	sub	x0, x24, x22
  4512d8:	sub	w0, w0, #0x3
  4512dc:	sturh	w0, [x22, #1]
  4512e0:	ldr	w0, [sp, #132]
  4512e4:	cbz	w0, 4530e8 <ferror@plt+0x4fb18>
  4512e8:	mov	x0, x21
  4512ec:	mov	w27, #0x8                   	// #8
  4512f0:	bl	4032a0 <free@plt>
  4512f4:	b	450f84 <ferror@plt+0x4d9b4>
  4512f8:	ldr	x2, [sp, #112]
  4512fc:	cmp	x1, x2
  451300:	b.eq	451348 <ferror@plt+0x4dd78>  // b.none
  451304:	ldr	x1, [sp, #104]
  451308:	tbnz	w1, #3, 451348 <ferror@plt+0x4dd78>
  45130c:	ldrb	w1, [x0, #1]
  451310:	add	x0, x0, #0x2
  451314:	ldr	x3, [sp, #112]
  451318:	cmp	w1, #0x5c
  45131c:	cset	w2, eq  // eq = none
  451320:	cmp	x3, x0
  451324:	ldr	x3, [sp, #104]
  451328:	csel	x0, x0, xzr, hi  // hi = pmore
  45132c:	tbz	w3, #13, 451354 <ferror@plt+0x4dd84>
  451330:	cmp	w1, #0x29
  451334:	b.eq	451348 <ferror@plt+0x4dd78>  // b.none
  451338:	ldr	x3, [sp, #104]
  45133c:	tbz	w3, #15, 45136c <ferror@plt+0x4dd9c>
  451340:	cmp	w1, #0x7c
  451344:	b.ne	4510b4 <ferror@plt+0x4dae4>  // b.any
  451348:	mov	x27, #0x10000               	// #65536
  45134c:	mov	w28, #0x10001               	// #65537
  451350:	b	4513d8 <ferror@plt+0x4de08>
  451354:	cmp	x0, #0x0
  451358:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  45135c:	b.eq	451338 <ferror@plt+0x4dd68>  // b.none
  451360:	ldrb	w3, [x0]
  451364:	cmp	w3, #0x29
  451368:	b	451334 <ferror@plt+0x4dd64>
  45136c:	cmp	x0, #0x0
  451370:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  451374:	b.eq	4510b4 <ferror@plt+0x4dae4>  // b.none
  451378:	ldrb	w0, [x0]
  45137c:	cmp	w0, #0x7c
  451380:	b	451344 <ferror@plt+0x4dd74>
  451384:	cmp	x1, #0x10, lsl #12
  451388:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  45138c:	lsl	x1, x1, #1
  451390:	mov	x0, x25
  451394:	cmp	x1, x28
  451398:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  45139c:	str	x1, [x20, #8]
  4513a0:	bl	4030b0 <realloc@plt>
  4513a4:	str	x0, [x20]
  4513a8:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4513ac:	cmp	x0, x25
  4513b0:	b.eq	4513d8 <ferror@plt+0x4de08>  // b.none
  4513b4:	sub	x0, x0, x25
  4513b8:	add	x24, x24, x0
  4513bc:	add	x19, x19, x0
  4513c0:	cbz	x22, 4513c8 <ferror@plt+0x4ddf8>
  4513c4:	add	x22, x22, x0
  4513c8:	cbz	x23, 4513d0 <ferror@plt+0x4de00>
  4513cc:	add	x23, x23, x0
  4513d0:	cbz	x26, 4513d8 <ferror@plt+0x4de08>
  4513d4:	add	x26, x26, x0
  4513d8:	ldp	x25, x1, [x20]
  4513dc:	sub	x0, x24, x25
  4513e0:	add	x0, x0, #0x1
  4513e4:	cmp	x0, x1
  4513e8:	b.hi	451384 <ferror@plt+0x4ddb4>  // b.pmore
  4513ec:	mov	w0, #0xa                   	// #10
  4513f0:	b	4512b4 <ferror@plt+0x4dce4>
  4513f4:	ldr	x0, [sp, #104]
  4513f8:	tbz	w0, #4, 4510b4 <ferror@plt+0x4dae4>
  4513fc:	ldr	x0, [sp, #104]
  451400:	mov	w25, #0x0                   	// #0
  451404:	mov	w27, #0x0                   	// #0
  451408:	mov	w1, #0x3f                  	// #63
  45140c:	and	x4, x0, #0x2
  451410:	cmp	w28, #0x2b
  451414:	cset	w0, ne  // ne = any
  451418:	cmp	w28, #0x3f
  45141c:	orr	w27, w0, w27
  451420:	cset	w0, ne  // ne = any
  451424:	orr	w25, w0, w25
  451428:	ldr	x3, [sp, #112]
  45142c:	sxtb	w2, w27
  451430:	ldr	x0, [sp, #232]
  451434:	cmp	x0, x3
  451438:	b.eq	451474 <ferror@plt+0x4dea4>  // b.none
  45143c:	ldr	x5, [sp, #120]
  451440:	add	x3, x0, #0x1
  451444:	str	x3, [sp, #232]
  451448:	ldrb	w28, [x0]
  45144c:	cbz	x5, 451458 <ferror@plt+0x4de88>
  451450:	and	x28, x28, #0xff
  451454:	ldrb	w28, [x5, x28]
  451458:	cmp	w28, #0x2a
  45145c:	b.eq	451410 <ferror@plt+0x4de40>  // b.none
  451460:	cbnz	x4, 451520 <ferror@plt+0x4df50>
  451464:	cmp	w28, #0x2b
  451468:	ccmp	w28, w1, #0x4, ne  // ne = any
  45146c:	b.eq	451410 <ferror@plt+0x4de40>  // b.none
  451470:	str	x0, [sp, #232]
  451474:	cbz	x23, 4512b8 <ferror@plt+0x4dce8>
  451478:	cbz	w25, 451510 <ferror@plt+0x4df40>
  45147c:	mov	x28, #0x10000               	// #65536
  451480:	mov	w3, #0x10001               	// #65537
  451484:	ldp	x4, x1, [x20]
  451488:	sub	x0, x24, x4
  45148c:	add	x0, x0, #0x3
  451490:	cmp	x0, x1
  451494:	b.hi	451564 <ferror@plt+0x4df94>  // b.pmore
  451498:	ldr	x3, [sp, #120]
  45149c:	ldr	x1, [sp, #232]
  4514a0:	ldurb	w0, [x1, #-2]
  4514a4:	cbz	x3, 4515cc <ferror@plt+0x4dffc>
  4514a8:	and	x0, x0, #0xff
  4514ac:	ldrb	w0, [x3, x0]
  4514b0:	ldrb	w3, [x3, #46]
  4514b4:	cmp	w3, w0
  4514b8:	b.ne	4515dc <ferror@plt+0x4e00c>  // b.any
  4514bc:	ldr	x0, [sp, #112]
  4514c0:	cmp	x0, x1
  4514c4:	cset	w0, hi  // hi = pmore
  4514c8:	tst	w2, w0
  4514cc:	b.eq	4515dc <ferror@plt+0x4e00c>  // b.none
  4514d0:	ldrb	w0, [x1]
  4514d4:	ldr	x1, [sp, #120]
  4514d8:	cbz	x1, 4515d4 <ferror@plt+0x4e004>
  4514dc:	and	x0, x0, #0xff
  4514e0:	ldrb	w0, [x1, x0]
  4514e4:	ldrb	w1, [x1, #10]
  4514e8:	cmp	w1, w0
  4514ec:	b.ne	4515dc <ferror@plt+0x4e00c>  // b.any
  4514f0:	ldr	x0, [sp, #104]
  4514f4:	tbnz	w0, #6, 4515dc <ferror@plt+0x4e00c>
  4514f8:	mov	w0, #0xd                   	// #13
  4514fc:	strb	w0, [x24]
  451500:	sub	x0, x23, x24
  451504:	sub	w0, w0, #0x3
  451508:	sturh	w0, [x24, #1]
  45150c:	add	x24, x24, #0x3
  451510:	mov	x28, x24
  451514:	mov	x2, #0x10000               	// #65536
  451518:	mov	w3, #0x10001               	// #65537
  45151c:	b	451650 <ferror@plt+0x4e080>
  451520:	cmp	w28, #0x5c
  451524:	b.ne	451470 <ferror@plt+0x4dea0>  // b.any
  451528:	ldr	x5, [sp, #112]
  45152c:	cmp	x3, x5
  451530:	b.ne	451544 <ferror@plt+0x4df74>  // b.any
  451534:	mov	x0, x21
  451538:	mov	w27, #0x5                   	// #5
  45153c:	bl	4032a0 <free@plt>
  451540:	b	450f84 <ferror@plt+0x4d9b4>
  451544:	add	x3, x0, #0x2
  451548:	str	x3, [sp, #232]
  45154c:	ldr	x3, [sp, #120]
  451550:	ldrb	w28, [x0, #1]
  451554:	cbz	x3, 451464 <ferror@plt+0x4de94>
  451558:	and	x28, x28, #0xff
  45155c:	ldrb	w28, [x3, x28]
  451560:	b	451464 <ferror@plt+0x4de94>
  451564:	str	w2, [sp, #160]
  451568:	cmp	x1, #0x10, lsl #12
  45156c:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  451570:	lsl	x1, x1, #1
  451574:	mov	x0, x4
  451578:	cmp	x1, x3
  45157c:	str	x4, [sp, #136]
  451580:	csel	x1, x1, x28, cc  // cc = lo, ul, last
  451584:	str	x1, [x20, #8]
  451588:	bl	4030b0 <realloc@plt>
  45158c:	str	x0, [x20]
  451590:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  451594:	ldr	x4, [sp, #136]
  451598:	mov	w3, #0x10001               	// #65537
  45159c:	ldr	w2, [sp, #160]
  4515a0:	cmp	x0, x4
  4515a4:	b.eq	451484 <ferror@plt+0x4deb4>  // b.none
  4515a8:	sub	x0, x0, x4
  4515ac:	add	x24, x24, x0
  4515b0:	add	x19, x19, x0
  4515b4:	cbz	x22, 4515bc <ferror@plt+0x4dfec>
  4515b8:	add	x22, x22, x0
  4515bc:	add	x23, x23, x0
  4515c0:	cbz	x26, 451484 <ferror@plt+0x4deb4>
  4515c4:	add	x26, x26, x0
  4515c8:	b	451484 <ferror@plt+0x4deb4>
  4515cc:	mov	w3, #0x2e                  	// #46
  4515d0:	b	4514b4 <ferror@plt+0x4dee4>
  4515d4:	mov	w1, #0xa                   	// #10
  4515d8:	b	4514e8 <ferror@plt+0x4df18>
  4515dc:	mov	w0, #0x12                  	// #18
  4515e0:	strb	w0, [x24]
  4515e4:	sub	w0, w23, w24
  4515e8:	mov	w25, #0x0                   	// #0
  4515ec:	sub	w0, w0, #0x6
  4515f0:	sturh	w0, [x24, #1]
  4515f4:	b	45150c <ferror@plt+0x4df3c>
  4515f8:	cmp	x1, #0x10, lsl #12
  4515fc:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  451600:	lsl	x1, x1, #1
  451604:	mov	x0, x24
  451608:	cmp	x1, x3
  45160c:	csel	x1, x1, x2, cc  // cc = lo, ul, last
  451610:	str	x1, [x20, #8]
  451614:	bl	4030b0 <realloc@plt>
  451618:	str	x0, [x20]
  45161c:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  451620:	cmp	x0, x24
  451624:	mov	x2, #0x10000               	// #65536
  451628:	mov	w3, #0x10001               	// #65537
  45162c:	b.eq	451650 <ferror@plt+0x4e080>  // b.none
  451630:	sub	x0, x0, x24
  451634:	add	x28, x28, x0
  451638:	add	x19, x19, x0
  45163c:	cbz	x22, 451644 <ferror@plt+0x4e074>
  451640:	add	x22, x22, x0
  451644:	add	x23, x23, x0
  451648:	cbz	x26, 451650 <ferror@plt+0x4e080>
  45164c:	add	x26, x26, x0
  451650:	ldp	x24, x1, [x20]
  451654:	sub	x0, x28, x24
  451658:	add	x0, x0, #0x3
  45165c:	cmp	x0, x1
  451660:	b.hi	4515f8 <ferror@plt+0x4e028>  // b.pmore
  451664:	add	x24, x28, #0x3
  451668:	mov	x3, x28
  45166c:	sub	w2, w28, w23
  451670:	mov	x1, x23
  451674:	add	w0, w25, #0xf
  451678:	bl	44ebfc <ferror@plt+0x4b62c>
  45167c:	cbnz	w27, 4516b4 <ferror@plt+0x4e0e4>
  451680:	mov	x27, #0x10000               	// #65536
  451684:	mov	w28, #0x10001               	// #65537
  451688:	ldp	x25, x1, [x20]
  45168c:	sub	x0, x24, x25
  451690:	add	x0, x0, #0x3
  451694:	cmp	x0, x1
  451698:	b.hi	4516bc <ferror@plt+0x4e0ec>  // b.pmore
  45169c:	mov	x3, x24
  4516a0:	mov	x1, x23
  4516a4:	mov	w2, #0x3                   	// #3
  4516a8:	mov	w0, #0x13                  	// #19
  4516ac:	bl	44ebfc <ferror@plt+0x4b62c>
  4516b0:	add	x24, x24, #0x3
  4516b4:	mov	x26, #0x0                   	// #0
  4516b8:	b	4512b8 <ferror@plt+0x4dce8>
  4516bc:	cmp	x1, #0x10, lsl #12
  4516c0:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  4516c4:	lsl	x1, x1, #1
  4516c8:	mov	x0, x25
  4516cc:	cmp	x1, x28
  4516d0:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  4516d4:	str	x1, [x20, #8]
  4516d8:	bl	4030b0 <realloc@plt>
  4516dc:	str	x0, [x20]
  4516e0:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4516e4:	cmp	x0, x25
  4516e8:	b.eq	451688 <ferror@plt+0x4e0b8>  // b.none
  4516ec:	sub	x0, x0, x25
  4516f0:	cbz	x22, 4516f8 <ferror@plt+0x4e128>
  4516f4:	add	x22, x22, x0
  4516f8:	add	x24, x24, x0
  4516fc:	add	x19, x19, x0
  451700:	add	x23, x23, x0
  451704:	b	451688 <ferror@plt+0x4e0b8>
  451708:	cmp	x1, #0x10, lsl #12
  45170c:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  451710:	lsl	x1, x1, #1
  451714:	mov	x0, x25
  451718:	cmp	x1, x28
  45171c:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  451720:	str	x1, [x20, #8]
  451724:	bl	4030b0 <realloc@plt>
  451728:	str	x0, [x20]
  45172c:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  451730:	cmp	x0, x25
  451734:	b.eq	45175c <ferror@plt+0x4e18c>  // b.none
  451738:	sub	x0, x0, x25
  45173c:	add	x24, x24, x0
  451740:	add	x19, x19, x0
  451744:	cbz	x22, 45174c <ferror@plt+0x4e17c>
  451748:	add	x22, x22, x0
  45174c:	cbz	x23, 451754 <ferror@plt+0x4e184>
  451750:	add	x23, x23, x0
  451754:	cbz	x26, 45175c <ferror@plt+0x4e18c>
  451758:	add	x26, x26, x0
  45175c:	ldp	x25, x1, [x20]
  451760:	sub	x0, x24, x25
  451764:	add	x0, x0, #0x1
  451768:	cmp	x0, x1
  45176c:	b.hi	451708 <ferror@plt+0x4e138>  // b.pmore
  451770:	mov	w0, #0x3                   	// #3
  451774:	b	4512b4 <ferror@plt+0x4dce4>
  451778:	mov	x23, x24
  45177c:	mov	x27, #0x10000               	// #65536
  451780:	mov	w28, #0x10001               	// #65537
  451784:	b	45175c <ferror@plt+0x4e18c>
  451788:	ldr	x0, [sp, #112]
  45178c:	cmp	x1, x0
  451790:	b.eq	451978 <ferror@plt+0x4e3a8>  // b.none
  451794:	mov	x27, #0x10000               	// #65536
  451798:	mov	w28, #0x10001               	// #65537
  45179c:	ldp	x25, x1, [x20]
  4517a0:	sub	x0, x24, x25
  4517a4:	add	x0, x0, #0x22
  4517a8:	cmp	x0, x1
  4517ac:	b.hi	451860 <ferror@plt+0x4e290>  // b.pmore
  4517b0:	mov	x23, x24
  4517b4:	mov	x27, #0x10000               	// #65536
  4517b8:	mov	w28, #0x10001               	// #65537
  4517bc:	ldp	x25, x1, [x20]
  4517c0:	sub	x0, x24, x25
  4517c4:	add	x0, x0, #0x1
  4517c8:	cmp	x0, x1
  4517cc:	b.hi	4518b0 <ferror@plt+0x4e2e0>  // b.pmore
  4517d0:	ldr	x0, [sp, #232]
  4517d4:	ldrb	w0, [x0]
  4517d8:	cmp	w0, #0x5e
  4517dc:	cset	w0, eq  // eq = none
  4517e0:	add	w0, w0, #0x4
  4517e4:	strb	w0, [x24], #1
  4517e8:	ldr	x0, [sp, #232]
  4517ec:	ldrb	w1, [x0]
  4517f0:	cmp	w1, #0x5e
  4517f4:	b.ne	451800 <ferror@plt+0x4e230>  // b.any
  4517f8:	add	x0, x0, #0x1
  4517fc:	str	x0, [sp, #232]
  451800:	ldr	x0, [sp, #232]
  451804:	mov	x27, #0x10000               	// #65536
  451808:	mov	w28, #0x10001               	// #65537
  45180c:	str	x0, [sp, #216]
  451810:	ldp	x25, x1, [x20]
  451814:	sub	x0, x24, x25
  451818:	add	x0, x0, #0x1
  45181c:	cmp	x0, x1
  451820:	b.hi	451908 <ferror@plt+0x4e338>  // b.pmore
  451824:	mov	x25, x24
  451828:	mov	w0, #0x20                  	// #32
  45182c:	strb	w0, [x25], #1
  451830:	stp	xzr, xzr, [x25]
  451834:	stp	xzr, xzr, [x25, #16]
  451838:	ldurb	w0, [x24, #-1]
  45183c:	cmp	w0, #0x5
  451840:	b.ne	451854 <ferror@plt+0x4e284>  // b.any
  451844:	ldr	x0, [sp, #104]
  451848:	tbz	w0, #8, 451854 <ferror@plt+0x4e284>
  45184c:	mov	w0, #0x4                   	// #4
  451850:	strb	w0, [x24, #2]
  451854:	mov	w0, #0xffffffff            	// #-1
  451858:	str	w0, [sp, #136]
  45185c:	b	4521f4 <ferror@plt+0x4ec24>
  451860:	cmp	x1, #0x10, lsl #12
  451864:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  451868:	lsl	x1, x1, #1
  45186c:	mov	x0, x25
  451870:	cmp	x1, x28
  451874:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  451878:	str	x1, [x20, #8]
  45187c:	bl	4030b0 <realloc@plt>
  451880:	str	x0, [x20]
  451884:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  451888:	cmp	x0, x25
  45188c:	b.eq	45179c <ferror@plt+0x4e1cc>  // b.none
  451890:	sub	x0, x0, x25
  451894:	add	x24, x24, x0
  451898:	add	x19, x19, x0
  45189c:	cbz	x22, 4518a4 <ferror@plt+0x4e2d4>
  4518a0:	add	x22, x22, x0
  4518a4:	cbz	x26, 45179c <ferror@plt+0x4e1cc>
  4518a8:	add	x26, x26, x0
  4518ac:	b	45179c <ferror@plt+0x4e1cc>
  4518b0:	cmp	x1, #0x10, lsl #12
  4518b4:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  4518b8:	lsl	x1, x1, #1
  4518bc:	mov	x0, x25
  4518c0:	cmp	x1, x28
  4518c4:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  4518c8:	str	x1, [x20, #8]
  4518cc:	bl	4030b0 <realloc@plt>
  4518d0:	str	x0, [x20]
  4518d4:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4518d8:	cmp	x0, x25
  4518dc:	b.eq	4517bc <ferror@plt+0x4e1ec>  // b.none
  4518e0:	sub	x0, x0, x25
  4518e4:	add	x24, x24, x0
  4518e8:	add	x19, x19, x0
  4518ec:	cbz	x22, 4518f4 <ferror@plt+0x4e324>
  4518f0:	add	x22, x22, x0
  4518f4:	cbz	x23, 4518fc <ferror@plt+0x4e32c>
  4518f8:	add	x23, x23, x0
  4518fc:	cbz	x26, 4517bc <ferror@plt+0x4e1ec>
  451900:	add	x26, x26, x0
  451904:	b	4517bc <ferror@plt+0x4e1ec>
  451908:	cmp	x1, #0x10, lsl #12
  45190c:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  451910:	lsl	x1, x1, #1
  451914:	mov	x0, x25
  451918:	cmp	x1, x28
  45191c:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  451920:	str	x1, [x20, #8]
  451924:	bl	4030b0 <realloc@plt>
  451928:	str	x0, [x20]
  45192c:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  451930:	cmp	x0, x25
  451934:	b.eq	451810 <ferror@plt+0x4e240>  // b.none
  451938:	sub	x0, x0, x25
  45193c:	add	x24, x24, x0
  451940:	add	x19, x19, x0
  451944:	cbz	x22, 45194c <ferror@plt+0x4e37c>
  451948:	add	x22, x22, x0
  45194c:	cbz	x23, 451954 <ferror@plt+0x4e384>
  451950:	add	x23, x23, x0
  451954:	cbz	x26, 451810 <ferror@plt+0x4e240>
  451958:	add	x26, x26, x0
  45195c:	b	451810 <ferror@plt+0x4e240>
  451960:	mov	w0, #0xffffffff            	// #-1
  451964:	str	w0, [sp, #136]
  451968:	ldr	x0, [sp, #112]
  45196c:	ldr	x1, [sp, #232]
  451970:	cmp	x1, x0
  451974:	b.ne	451988 <ferror@plt+0x4e3b8>  // b.any
  451978:	mov	x0, x21
  45197c:	mov	w27, #0x7                   	// #7
  451980:	bl	4032a0 <free@plt>
  451984:	b	450f84 <ferror@plt+0x4d9b4>
  451988:	ldr	x3, [sp, #120]
  45198c:	add	x2, x1, #0x1
  451990:	str	x2, [sp, #232]
  451994:	ldrb	w0, [x1]
  451998:	cbz	x3, 4519a4 <ferror@plt+0x4e3d4>
  45199c:	and	x0, x0, #0xff
  4519a0:	ldrb	w0, [x3, x0]
  4519a4:	ldr	x3, [sp, #104]
  4519a8:	tbz	w3, #0, 4519fc <ferror@plt+0x4e42c>
  4519ac:	cmp	w0, #0x5c
  4519b0:	b.ne	4519fc <ferror@plt+0x4e42c>  // b.any
  4519b4:	ldr	x0, [sp, #112]
  4519b8:	cmp	x2, x0
  4519bc:	b.eq	451534 <ferror@plt+0x4df64>  // b.none
  4519c0:	add	x0, x1, #0x2
  4519c4:	str	x0, [sp, #232]
  4519c8:	ldrb	w0, [x1, #1]
  4519cc:	ldr	x1, [sp, #120]
  4519d0:	cbz	x1, 4519dc <ferror@plt+0x4e40c>
  4519d4:	and	x0, x0, #0xff
  4519d8:	ldrb	w0, [x1, x0]
  4519dc:	ubfx	x2, x0, #3, #5
  4519e0:	and	w1, w0, #0x7
  4519e4:	mov	w3, #0x1                   	// #1
  4519e8:	lsl	w1, w3, w1
  4519ec:	ldrb	w3, [x25, x2]
  4519f0:	orr	w1, w1, w3
  4519f4:	strb	w1, [x25, x2]
  4519f8:	b	451964 <ferror@plt+0x4e394>
  4519fc:	cmp	w0, #0x5d
  451a00:	b.ne	451a30 <ferror@plt+0x4e460>  // b.any
  451a04:	ldr	x3, [sp, #216]
  451a08:	add	x3, x3, #0x1
  451a0c:	cmp	x2, x3
  451a10:	b.eq	451ad8 <ferror@plt+0x4e508>  // b.none
  451a14:	ldrb	w0, [x24]
  451a18:	ldrb	w1, [x24]
  451a1c:	cbz	w0, 451a28 <ferror@plt+0x4e458>
  451a20:	ldrb	w2, [x24, x1]
  451a24:	cbz	w2, 452270 <ferror@plt+0x4eca0>
  451a28:	add	x24, x25, x1
  451a2c:	b	4512b8 <ferror@plt+0x4dce8>
  451a30:	cmp	w0, #0x2d
  451a34:	ldrb	w3, [x1, #1]
  451a38:	ccmp	w10, #0x0, #0x4, eq  // eq = none
  451a3c:	b.eq	451a58 <ferror@plt+0x4e488>  // b.none
  451a40:	cmp	w3, #0x5d
  451a44:	b.eq	451a60 <ferror@plt+0x4e490>  // b.none
  451a48:	mov	x0, x21
  451a4c:	mov	w27, #0xb                   	// #11
  451a50:	bl	4032a0 <free@plt>
  451a54:	b	450f84 <ferror@plt+0x4d9b4>
  451a58:	cmp	w0, #0x2d
  451a5c:	b.ne	451ad8 <ferror@plt+0x4e508>  // b.any
  451a60:	ldr	x5, [sp, #144]
  451a64:	sub	x4, x1, #0x1
  451a68:	cmp	x5, x4
  451a6c:	b.hi	451a7c <ferror@plt+0x4e4ac>  // b.pmore
  451a70:	ldurb	w4, [x1, #-1]
  451a74:	cmp	w4, #0x5b
  451a78:	b.eq	451ad8 <ferror@plt+0x4e508>  // b.none
  451a7c:	ldr	x5, [sp, #144]
  451a80:	sub	x4, x1, #0x2
  451a84:	cmp	x5, x4
  451a88:	b.hi	451aa4 <ferror@plt+0x4e4d4>  // b.pmore
  451a8c:	ldurb	w4, [x1, #-2]
  451a90:	cmp	w4, #0x5b
  451a94:	b.ne	451aa4 <ferror@plt+0x4e4d4>  // b.any
  451a98:	ldurb	w4, [x1, #-1]
  451a9c:	cmp	w4, #0x5e
  451aa0:	b.eq	451ad8 <ferror@plt+0x4e508>  // b.none
  451aa4:	cmp	w3, #0x5d
  451aa8:	b.eq	451ad8 <ferror@plt+0x4e508>  // b.none
  451aac:	ldp	x4, x2, [sp, #104]
  451ab0:	mov	x5, x25
  451ab4:	ldr	w0, [sp, #136]
  451ab8:	add	x1, sp, #0xe8
  451abc:	ldr	x3, [sp, #120]
  451ac0:	bl	44ec1c <ferror@plt+0x4b64c>
  451ac4:	mov	w27, w0
  451ac8:	cbz	w0, 451960 <ferror@plt+0x4e390>
  451acc:	mov	x0, x21
  451ad0:	bl	4032a0 <free@plt>
  451ad4:	b	450f84 <ferror@plt+0x4d9b4>
  451ad8:	ldrb	w3, [x1, #1]
  451adc:	cmp	w3, #0x2d
  451ae0:	b.ne	451b18 <ferror@plt+0x4e548>  // b.any
  451ae4:	ldrb	w4, [x1, #2]
  451ae8:	cmp	w4, #0x5d
  451aec:	b.eq	451b18 <ferror@plt+0x4e548>  // b.none
  451af0:	ldr	x3, [sp, #112]
  451af4:	cmp	x2, x3
  451af8:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  451afc:	add	x1, x1, #0x2
  451b00:	mov	x5, x25
  451b04:	str	x1, [sp, #232]
  451b08:	add	x1, sp, #0xe8
  451b0c:	ldp	x4, x2, [sp, #104]
  451b10:	ldr	x3, [sp, #120]
  451b14:	b	451ac0 <ferror@plt+0x4e4f0>
  451b18:	ldr	x4, [sp, #104]
  451b1c:	tbz	w4, #2, 452250 <ferror@plt+0x4ec80>
  451b20:	cmp	w0, #0x5b
  451b24:	b.ne	452250 <ferror@plt+0x4ec80>  // b.any
  451b28:	cmp	w3, #0x3a
  451b2c:	b.ne	451fac <ferror@plt+0x4e9dc>  // b.any
  451b30:	ldr	x0, [sp, #112]
  451b34:	cmp	x2, x0
  451b38:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  451b3c:	add	x1, x1, #0x2
  451b40:	str	x1, [sp, #232]
  451b44:	cmp	x1, x0
  451b48:	b.eq	451978 <ferror@plt+0x4e3a8>  // b.none
  451b4c:	mov	w0, #0x0                   	// #0
  451b50:	ldr	x1, [sp, #112]
  451b54:	ldr	x27, [sp, #232]
  451b58:	cmp	x27, x1
  451b5c:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  451b60:	ldr	x2, [sp, #120]
  451b64:	add	x28, x27, #0x1
  451b68:	str	x28, [sp, #232]
  451b6c:	ldrb	w1, [x27]
  451b70:	cbz	x2, 451b7c <ferror@plt+0x4e5ac>
  451b74:	and	x1, x1, #0xff
  451b78:	ldrb	w1, [x2, x1]
  451b7c:	cmp	w1, #0x3a
  451b80:	b.ne	451b90 <ferror@plt+0x4e5c0>  // b.any
  451b84:	ldrb	w2, [x27, #1]
  451b88:	cmp	w2, #0x5d
  451b8c:	b.eq	451bc0 <ferror@plt+0x4e5f0>  // b.none
  451b90:	ldr	x2, [sp, #112]
  451b94:	cmp	x28, x2
  451b98:	b.eq	451bc0 <ferror@plt+0x4e5f0>  // b.none
  451b9c:	cmp	w0, #0x5
  451ba0:	b.hi	451bb8 <ferror@plt+0x4e5e8>  // b.pmore
  451ba4:	add	x3, sp, #0xf0
  451ba8:	add	w2, w0, #0x1
  451bac:	strb	w1, [x3, w0, sxtw]
  451bb0:	and	w0, w2, #0xff
  451bb4:	b	451b50 <ferror@plt+0x4e580>
  451bb8:	strb	wzr, [sp, #240]
  451bbc:	b	451b50 <ferror@plt+0x4e580>
  451bc0:	add	x2, sp, #0xf0
  451bc4:	cmp	w1, #0x3a
  451bc8:	strb	wzr, [x2, w0, sxtw]
  451bcc:	b.ne	451f58 <ferror@plt+0x4e988>  // b.any
  451bd0:	ldrb	w1, [x27, #1]
  451bd4:	cmp	w1, #0x5d
  451bd8:	b.ne	451f58 <ferror@plt+0x4e988>  // b.any
  451bdc:	mov	x0, x2
  451be0:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451be4:	add	x1, x1, #0x428
  451be8:	bl	403220 <strcmp@plt>
  451bec:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451bf0:	add	x1, x1, #0x42e
  451bf4:	str	w0, [sp, #168]
  451bf8:	add	x0, sp, #0xf0
  451bfc:	bl	403220 <strcmp@plt>
  451c00:	str	w0, [sp, #172]
  451c04:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451c08:	add	x0, sp, #0xf0
  451c0c:	add	x1, x1, #0x434
  451c10:	bl	403220 <strcmp@plt>
  451c14:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451c18:	add	x1, x1, #0x43a
  451c1c:	str	w0, [sp, #176]
  451c20:	add	x0, sp, #0xf0
  451c24:	bl	403220 <strcmp@plt>
  451c28:	str	w0, [sp, #180]
  451c2c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451c30:	add	x0, sp, #0xf0
  451c34:	add	x1, x1, #0x459
  451c38:	bl	403220 <strcmp@plt>
  451c3c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451c40:	add	x1, x1, #0x440
  451c44:	str	w0, [sp, #184]
  451c48:	add	x0, sp, #0xf0
  451c4c:	bl	403220 <strcmp@plt>
  451c50:	str	w0, [sp, #188]
  451c54:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451c58:	add	x0, sp, #0xf0
  451c5c:	add	x1, x1, #0x446
  451c60:	bl	403220 <strcmp@plt>
  451c64:	str	w0, [sp, #160]
  451c68:	mov	w0, w0
  451c6c:	cmp	w0, #0x0
  451c70:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  451c74:	cset	w0, eq  // eq = none
  451c78:	add	x1, x1, #0x65c
  451c7c:	str	w0, [sp, #208]
  451c80:	add	x0, sp, #0xf0
  451c84:	bl	403220 <strcmp@plt>
  451c88:	str	w0, [sp, #192]
  451c8c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451c90:	add	x0, sp, #0xf0
  451c94:	add	x1, x1, #0x44c
  451c98:	bl	403220 <strcmp@plt>
  451c9c:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  451ca0:	add	x1, x1, #0x5cd
  451ca4:	str	w0, [sp, #196]
  451ca8:	add	x0, sp, #0xf0
  451cac:	bl	403220 <strcmp@plt>
  451cb0:	str	w0, [sp, #200]
  451cb4:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451cb8:	add	x0, sp, #0xf0
  451cbc:	add	x1, x1, #0x452
  451cc0:	bl	403220 <strcmp@plt>
  451cc4:	str	w0, [sp, #164]
  451cc8:	mov	w0, w0
  451ccc:	cmp	w0, #0x0
  451cd0:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  451cd4:	cset	w0, eq  // eq = none
  451cd8:	add	x1, x1, #0x458
  451cdc:	str	w0, [sp, #212]
  451ce0:	add	x0, sp, #0xf0
  451ce4:	bl	403220 <strcmp@plt>
  451ce8:	str	w0, [sp, #204]
  451cec:	ldr	w0, [sp, #172]
  451cf0:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451cf4:	ldr	w0, [sp, #164]
  451cf8:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451cfc:	ldr	w0, [sp, #160]
  451d00:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d04:	ldr	w0, [sp, #184]
  451d08:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d0c:	ldr	w0, [sp, #168]
  451d10:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d14:	ldr	w0, [sp, #204]
  451d18:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d1c:	ldr	w0, [sp, #200]
  451d20:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d24:	ldr	w0, [sp, #192]
  451d28:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d2c:	ldr	w0, [sp, #196]
  451d30:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d34:	ldr	w0, [sp, #188]
  451d38:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d3c:	ldr	w0, [sp, #180]
  451d40:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d44:	ldr	w0, [sp, #176]
  451d48:	cbz	w0, 451d5c <ferror@plt+0x4e78c>
  451d4c:	mov	x0, x21
  451d50:	mov	w27, #0x4                   	// #4
  451d54:	bl	4032a0 <free@plt>
  451d58:	b	450f84 <ferror@plt+0x4d9b4>
  451d5c:	ldr	x0, [sp, #112]
  451d60:	cmp	x0, x28
  451d64:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  451d68:	add	x27, x27, #0x2
  451d6c:	str	x27, [sp, #232]
  451d70:	cmp	x27, x0
  451d74:	b.eq	451978 <ferror@plt+0x4e3a8>  // b.none
  451d78:	mov	x27, #0x0                   	// #0
  451d7c:	mov	w28, #0x0                   	// #0
  451d80:	ldr	w0, [sp, #168]
  451d84:	cbnz	w0, 451d98 <ferror@plt+0x4e7c8>
  451d88:	bl	403240 <__ctype_b_loc@plt>
  451d8c:	ldr	x0, [x0]
  451d90:	ldrh	w0, [x0, x27]
  451d94:	tbnz	w0, #3, 451de0 <ferror@plt+0x4e810>
  451d98:	ldr	w0, [sp, #172]
  451d9c:	cbnz	w0, 451db0 <ferror@plt+0x4e7e0>
  451da0:	bl	403240 <__ctype_b_loc@plt>
  451da4:	ldr	x0, [x0]
  451da8:	ldrh	w0, [x0, x27]
  451dac:	tbnz	w0, #10, 451de0 <ferror@plt+0x4e810>
  451db0:	ldr	w0, [sp, #176]
  451db4:	cbnz	w0, 451dc8 <ferror@plt+0x4e7f8>
  451db8:	bl	403240 <__ctype_b_loc@plt>
  451dbc:	ldr	x0, [x0]
  451dc0:	ldrh	w0, [x0, x27]
  451dc4:	tbnz	w0, #0, 451de0 <ferror@plt+0x4e810>
  451dc8:	ldr	w0, [sp, #180]
  451dcc:	cbnz	w0, 451dfc <ferror@plt+0x4e82c>
  451dd0:	bl	403240 <__ctype_b_loc@plt>
  451dd4:	ldr	x0, [x0]
  451dd8:	ldrh	w0, [x0, x27]
  451ddc:	tbz	w0, #1, 451dfc <ferror@plt+0x4e82c>
  451de0:	ubfx	x1, x28, #3, #5
  451de4:	and	w0, w28, #0x7
  451de8:	mov	w2, #0x1                   	// #1
  451dec:	lsl	w0, w2, w0
  451df0:	ldrb	w2, [x25, x1]
  451df4:	orr	w0, w0, w2
  451df8:	strb	w0, [x25, x1]
  451dfc:	ldr	w0, [sp, #184]
  451e00:	cbnz	w0, 451e14 <ferror@plt+0x4e844>
  451e04:	bl	403240 <__ctype_b_loc@plt>
  451e08:	ldr	x0, [x0]
  451e0c:	ldrh	w0, [x0, x27]
  451e10:	tbnz	w0, #11, 451e5c <ferror@plt+0x4e88c>
  451e14:	ldr	w0, [sp, #188]
  451e18:	cbnz	w0, 451e2c <ferror@plt+0x4e85c>
  451e1c:	bl	403240 <__ctype_b_loc@plt>
  451e20:	ldr	x0, [x0]
  451e24:	ldrsh	w0, [x0, x27]
  451e28:	tbnz	w0, #31, 451e5c <ferror@plt+0x4e88c>
  451e2c:	ldr	w0, [sp, #160]
  451e30:	cbnz	w0, 451e44 <ferror@plt+0x4e874>
  451e34:	bl	403240 <__ctype_b_loc@plt>
  451e38:	ldr	x0, [x0]
  451e3c:	ldrh	w0, [x0, x27]
  451e40:	tbnz	w0, #9, 451e5c <ferror@plt+0x4e88c>
  451e44:	ldr	w0, [sp, #192]
  451e48:	cbnz	w0, 451e78 <ferror@plt+0x4e8a8>
  451e4c:	bl	403240 <__ctype_b_loc@plt>
  451e50:	ldr	x0, [x0]
  451e54:	ldrh	w0, [x0, x27]
  451e58:	tbz	w0, #14, 451e78 <ferror@plt+0x4e8a8>
  451e5c:	ubfx	x1, x28, #3, #5
  451e60:	and	w0, w28, #0x7
  451e64:	mov	w2, #0x1                   	// #1
  451e68:	lsl	w0, w2, w0
  451e6c:	ldrb	w2, [x25, x1]
  451e70:	orr	w0, w0, w2
  451e74:	strb	w0, [x25, x1]
  451e78:	ldr	w0, [sp, #196]
  451e7c:	cbnz	w0, 451e90 <ferror@plt+0x4e8c0>
  451e80:	bl	403240 <__ctype_b_loc@plt>
  451e84:	ldr	x0, [x0]
  451e88:	ldrh	w0, [x0, x27]
  451e8c:	tbnz	w0, #2, 451ed8 <ferror@plt+0x4e908>
  451e90:	ldr	w0, [sp, #200]
  451e94:	cbnz	w0, 451ea8 <ferror@plt+0x4e8d8>
  451e98:	bl	403240 <__ctype_b_loc@plt>
  451e9c:	ldr	x0, [x0]
  451ea0:	ldrh	w0, [x0, x27]
  451ea4:	tbnz	w0, #13, 451ed8 <ferror@plt+0x4e908>
  451ea8:	ldr	w0, [sp, #164]
  451eac:	cbnz	w0, 451ec0 <ferror@plt+0x4e8f0>
  451eb0:	bl	403240 <__ctype_b_loc@plt>
  451eb4:	ldr	x0, [x0]
  451eb8:	ldrh	w0, [x0, x27]
  451ebc:	tbnz	w0, #8, 451ed8 <ferror@plt+0x4e908>
  451ec0:	ldr	w0, [sp, #204]
  451ec4:	cbnz	w0, 451ef4 <ferror@plt+0x4e924>
  451ec8:	bl	403240 <__ctype_b_loc@plt>
  451ecc:	ldr	x0, [x0]
  451ed0:	ldrh	w0, [x0, x27]
  451ed4:	tbz	w0, #12, 451ef4 <ferror@plt+0x4e924>
  451ed8:	ubfx	x1, x28, #3, #5
  451edc:	and	w0, w28, #0x7
  451ee0:	mov	w2, #0x1                   	// #1
  451ee4:	lsl	w0, w2, w0
  451ee8:	ldrb	w2, [x25, x1]
  451eec:	orr	w0, w0, w2
  451ef0:	strb	w0, [x25, x1]
  451ef4:	ldr	x0, [sp, #120]
  451ef8:	cbz	x0, 451f40 <ferror@plt+0x4e970>
  451efc:	ldr	w0, [sp, #208]
  451f00:	cmp	w0, #0x0
  451f04:	ldr	w0, [sp, #212]
  451f08:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  451f0c:	b.eq	451f40 <ferror@plt+0x4e970>  // b.none
  451f10:	bl	403240 <__ctype_b_loc@plt>
  451f14:	ldr	x0, [x0]
  451f18:	ldrh	w0, [x0, x27]
  451f1c:	tst	w0, #0x300
  451f20:	b.eq	451f40 <ferror@plt+0x4e970>  // b.none
  451f24:	ubfx	x1, x28, #3, #5
  451f28:	and	w0, w28, #0x7
  451f2c:	mov	w2, #0x1                   	// #1
  451f30:	lsl	w0, w2, w0
  451f34:	ldrb	w2, [x25, x1]
  451f38:	orr	w0, w0, w2
  451f3c:	strb	w0, [x25, x1]
  451f40:	add	w28, w28, #0x1
  451f44:	add	x27, x27, #0x2
  451f48:	cmp	w28, #0x100
  451f4c:	b.ne	451d80 <ferror@plt+0x4e7b0>  // b.any
  451f50:	mov	w10, #0x1                   	// #1
  451f54:	b	451968 <ferror@plt+0x4e398>
  451f58:	add	w0, w0, #0x1
  451f5c:	mov	w2, #0x0                   	// #0
  451f60:	and	w0, w0, #0xff
  451f64:	mov	w1, w0
  451f68:	sub	w1, w1, #0x1
  451f6c:	and	w1, w1, #0xff
  451f70:	cmp	w1, #0xff
  451f74:	b.ne	451fa4 <ferror@plt+0x4e9d4>  // b.any
  451f78:	sub	x0, x28, w0, uxtb
  451f7c:	cbz	w2, 451f84 <ferror@plt+0x4e9b4>
  451f80:	str	x0, [sp, #232]
  451f84:	ldrb	w0, [x24, #12]
  451f88:	orr	w0, w0, #0x8
  451f8c:	strb	w0, [x24, #12]
  451f90:	ldrb	w0, [x24, #8]
  451f94:	orr	w0, w0, #0x4
  451f98:	strb	w0, [x24, #8]
  451f9c:	mov	w0, #0x3a                  	// #58
  451fa0:	b	451858 <ferror@plt+0x4e288>
  451fa4:	mov	w2, #0x1                   	// #1
  451fa8:	b	451f68 <ferror@plt+0x4e998>
  451fac:	cmp	w3, #0x3d
  451fb0:	b.ne	452104 <ferror@plt+0x4eb34>  // b.any
  451fb4:	ldr	x0, [sp, #112]
  451fb8:	cmp	x2, x0
  451fbc:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  451fc0:	add	x1, x1, #0x2
  451fc4:	str	x1, [sp, #232]
  451fc8:	cmp	x1, x0
  451fcc:	b.eq	451978 <ferror@plt+0x4e3a8>  // b.none
  451fd0:	mov	w10, #0x0                   	// #0
  451fd4:	ldr	x0, [sp, #112]
  451fd8:	ldr	x1, [sp, #232]
  451fdc:	cmp	x1, x0
  451fe0:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  451fe4:	ldr	x3, [sp, #120]
  451fe8:	add	x2, x1, #0x1
  451fec:	str	x2, [sp, #232]
  451ff0:	ldrb	w0, [x1]
  451ff4:	cbz	x3, 452000 <ferror@plt+0x4ea30>
  451ff8:	and	x0, x0, #0xff
  451ffc:	ldrb	w0, [x3, x0]
  452000:	cmp	w0, #0x3d
  452004:	b.ne	452014 <ferror@plt+0x4ea44>  // b.any
  452008:	ldrb	w3, [x1, #1]
  45200c:	cmp	w3, #0x5d
  452010:	b.eq	452044 <ferror@plt+0x4ea74>  // b.none
  452014:	ldr	x3, [sp, #112]
  452018:	cmp	x2, x3
  45201c:	b.eq	452044 <ferror@plt+0x4ea74>  // b.none
  452020:	cmp	w10, #0xf
  452024:	b.hi	45203c <ferror@plt+0x4ea6c>  // b.pmore
  452028:	add	x2, sp, #0xf0
  45202c:	add	w1, w10, #0x1
  452030:	strb	w0, [x2, w10, sxtw]
  452034:	and	w10, w1, #0xff
  452038:	b	451fd4 <ferror@plt+0x4ea04>
  45203c:	strb	wzr, [sp, #240]
  452040:	b	451fd4 <ferror@plt+0x4ea04>
  452044:	add	x3, sp, #0xf0
  452048:	cmp	w0, #0x3d
  45204c:	strb	wzr, [x3, w10, sxtw]
  452050:	b.ne	4520b0 <ferror@plt+0x4eae0>  // b.any
  452054:	ldrb	w0, [x1, #1]
  452058:	cmp	w0, #0x5d
  45205c:	b.ne	4520b0 <ferror@plt+0x4eae0>  // b.any
  452060:	ldrb	w0, [sp, #240]
  452064:	cbz	w0, 4520b0 <ferror@plt+0x4eae0>
  452068:	cmp	w10, #0x1
  45206c:	b.eq	452080 <ferror@plt+0x4eab0>  // b.none
  452070:	mov	x0, x21
  452074:	mov	w27, #0x3                   	// #3
  452078:	bl	4032a0 <free@plt>
  45207c:	b	450f84 <ferror@plt+0x4d9b4>
  452080:	ldr	x3, [sp, #112]
  452084:	cmp	x3, x2
  452088:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  45208c:	add	x1, x1, #0x2
  452090:	str	x1, [sp, #232]
  452094:	ubfx	x1, x0, #3, #5
  452098:	and	w0, w0, #0x7
  45209c:	lsl	w0, w10, w0
  4520a0:	ldrb	w2, [x25, x1]
  4520a4:	orr	w0, w0, w2
  4520a8:	strb	w0, [x25, x1]
  4520ac:	b	451968 <ferror@plt+0x4e398>
  4520b0:	add	w10, w10, #0x1
  4520b4:	mov	w1, #0x0                   	// #0
  4520b8:	and	w10, w10, #0xff
  4520bc:	mov	w0, w10
  4520c0:	sub	w0, w0, #0x1
  4520c4:	and	w0, w0, #0xff
  4520c8:	cmp	w0, #0xff
  4520cc:	b.ne	4520fc <ferror@plt+0x4eb2c>  // b.any
  4520d0:	sub	x2, x2, w10, uxtb
  4520d4:	cbz	w1, 4520dc <ferror@plt+0x4eb0c>
  4520d8:	str	x2, [sp, #232]
  4520dc:	ldrb	w0, [x24, #12]
  4520e0:	orr	w0, w0, #0x8
  4520e4:	strb	w0, [x24, #12]
  4520e8:	ldrb	w0, [x24, #8]
  4520ec:	orr	w0, w0, #0x20
  4520f0:	strb	w0, [x24, #8]
  4520f4:	mov	w0, #0x3d                  	// #61
  4520f8:	b	451858 <ferror@plt+0x4e288>
  4520fc:	mov	w1, #0x1                   	// #1
  452100:	b	4520c0 <ferror@plt+0x4eaf0>
  452104:	cmp	w3, #0x2e
  452108:	b.ne	452250 <ferror@plt+0x4ec80>  // b.any
  45210c:	ldr	x0, [sp, #112]
  452110:	cmp	x2, x0
  452114:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  452118:	add	x1, x1, #0x2
  45211c:	str	x1, [sp, #232]
  452120:	cmp	x1, x0
  452124:	b.eq	451978 <ferror@plt+0x4e3a8>  // b.none
  452128:	mov	w0, #0x0                   	// #0
  45212c:	ldr	x2, [sp, #112]
  452130:	ldr	x1, [sp, #232]
  452134:	cmp	x1, x2
  452138:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  45213c:	ldr	x4, [sp, #120]
  452140:	add	x3, x1, #0x1
  452144:	str	x3, [sp, #232]
  452148:	ldrb	w2, [x1]
  45214c:	cbz	x4, 452158 <ferror@plt+0x4eb88>
  452150:	and	x2, x2, #0xff
  452154:	ldrb	w2, [x4, x2]
  452158:	cmp	w2, #0x2e
  45215c:	b.ne	45216c <ferror@plt+0x4eb9c>  // b.any
  452160:	ldrb	w4, [x1, #1]
  452164:	cmp	w4, #0x5d
  452168:	b.eq	452198 <ferror@plt+0x4ebc8>  // b.none
  45216c:	ldr	x4, [sp, #112]
  452170:	cmp	x3, x4
  452174:	b.eq	452198 <ferror@plt+0x4ebc8>  // b.none
  452178:	tbnz	w0, #7, 452190 <ferror@plt+0x4ebc0>
  45217c:	add	x3, sp, #0xf0
  452180:	add	w1, w0, #0x1
  452184:	strb	w2, [x3, w0, sxtw]
  452188:	and	w0, w1, #0xff
  45218c:	b	45212c <ferror@plt+0x4eb5c>
  452190:	strb	wzr, [sp, #240]
  452194:	b	45212c <ferror@plt+0x4eb5c>
  452198:	add	x4, sp, #0xf0
  45219c:	cmp	w2, #0x2e
  4521a0:	strb	wzr, [x4, w0, sxtw]
  4521a4:	b.ne	4521fc <ferror@plt+0x4ec2c>  // b.any
  4521a8:	ldrb	w2, [x1, #1]
  4521ac:	cmp	w2, #0x5d
  4521b0:	b.ne	4521fc <ferror@plt+0x4ec2c>  // b.any
  4521b4:	ldrb	w2, [sp, #240]
  4521b8:	cbz	w2, 4521fc <ferror@plt+0x4ec2c>
  4521bc:	cmp	w0, #0x1
  4521c0:	b.ne	452070 <ferror@plt+0x4eaa0>  // b.any
  4521c4:	ldr	x4, [sp, #112]
  4521c8:	cmp	x4, x3
  4521cc:	b.eq	453174 <ferror@plt+0x4fba4>  // b.none
  4521d0:	add	x1, x1, #0x2
  4521d4:	str	x1, [sp, #232]
  4521d8:	ubfx	x1, x2, #3, #5
  4521dc:	and	w3, w2, #0x7
  4521e0:	str	w2, [sp, #136]
  4521e4:	lsl	w0, w0, w3
  4521e8:	ldrb	w3, [x25, x1]
  4521ec:	orr	w0, w0, w3
  4521f0:	strb	w0, [x25, x1]
  4521f4:	mov	w10, #0x0                   	// #0
  4521f8:	b	451968 <ferror@plt+0x4e398>
  4521fc:	add	w0, w0, #0x1
  452200:	mov	w2, #0x0                   	// #0
  452204:	and	w0, w0, #0xff
  452208:	mov	w1, w0
  45220c:	sub	w1, w1, #0x1
  452210:	and	w1, w1, #0xff
  452214:	cmp	w1, #0xff
  452218:	b.ne	452248 <ferror@plt+0x4ec78>  // b.any
  45221c:	sub	x0, x3, w0, uxtb
  452220:	cbz	w2, 452228 <ferror@plt+0x4ec58>
  452224:	str	x0, [sp, #232]
  452228:	ldrb	w0, [x24, #12]
  45222c:	orr	w0, w0, #0x8
  452230:	strb	w0, [x24, #12]
  452234:	ldrb	w0, [x24, #6]
  452238:	orr	w0, w0, #0x40
  45223c:	strb	w0, [x24, #6]
  452240:	mov	w0, #0x2e                  	// #46
  452244:	b	451858 <ferror@plt+0x4e288>
  452248:	mov	w2, #0x1                   	// #1
  45224c:	b	45220c <ferror@plt+0x4ec3c>
  452250:	ubfx	x2, x0, #3, #5
  452254:	and	w1, w0, #0x7
  452258:	mov	w3, #0x1                   	// #1
  45225c:	lsl	w1, w3, w1
  452260:	ldrb	w3, [x25, x2]
  452264:	orr	w1, w1, w3
  452268:	strb	w1, [x25, x2]
  45226c:	b	451858 <ferror@plt+0x4e288>
  452270:	sub	w0, w0, #0x1
  452274:	strb	w0, [x24]
  452278:	b	451a14 <ferror@plt+0x4e444>
  45227c:	ldr	x0, [sp, #104]
  452280:	tbz	w0, #13, 4510b4 <ferror@plt+0x4dae4>
  452284:	ldr	x0, [x20, #48]
  452288:	ldr	w1, [sp, #156]
  45228c:	add	x0, x0, #0x1
  452290:	str	x0, [x20, #48]
  452294:	ldr	w0, [sp, #152]
  452298:	add	w0, w0, #0x1
  45229c:	str	w0, [sp, #152]
  4522a0:	ldr	w0, [sp, #132]
  4522a4:	cmp	w0, w1
  4522a8:	b.ne	4522d0 <ferror@plt+0x4ed00>  // b.any
  4522ac:	ldr	w0, [sp, #132]
  4522b0:	mov	w1, #0x28                  	// #40
  4522b4:	lsl	w0, w0, #1
  4522b8:	str	w0, [sp, #156]
  4522bc:	umull	x1, w0, w1
  4522c0:	mov	x0, x21
  4522c4:	bl	4030b0 <realloc@plt>
  4522c8:	mov	x21, x0
  4522cc:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4522d0:	ldr	w1, [sp, #132]
  4522d4:	mov	w2, #0x28                  	// #40
  4522d8:	ldr	x0, [x20]
  4522dc:	cmp	x22, #0x0
  4522e0:	umull	x2, w1, w2
  4522e4:	sub	x19, x19, x0
  4522e8:	add	x1, x21, x2
  4522ec:	str	x19, [x21, x2]
  4522f0:	sub	x2, x22, x0
  4522f4:	csinc	x2, xzr, x2, eq  // eq = none
  4522f8:	str	x2, [x1, #8]
  4522fc:	ldr	w2, [sp, #152]
  452300:	sub	x0, x24, x0
  452304:	str	x0, [x1, #24]
  452308:	str	w2, [x1, #32]
  45230c:	cmp	w2, #0xff
  452310:	b.hi	452350 <ferror@plt+0x4ed80>  // b.pmore
  452314:	add	x0, x0, #0x2
  452318:	mov	x25, #0x10000               	// #65536
  45231c:	mov	w27, #0x10001               	// #65537
  452320:	str	x0, [x1, #16]
  452324:	ldp	x19, x1, [x20]
  452328:	sub	x0, x24, x19
  45232c:	add	x0, x0, #0x3
  452330:	cmp	x0, x1
  452334:	b.hi	4525c0 <ferror@plt+0x4eff0>  // b.pmore
  452338:	mov	w0, #0x6                   	// #6
  45233c:	strb	w0, [x24]
  452340:	ldrb	w0, [sp, #152]
  452344:	add	x24, x24, #0x3
  452348:	sturb	w0, [x24, #-2]
  45234c:	sturb	wzr, [x24, #-1]
  452350:	ldr	w0, [sp, #132]
  452354:	mov	x19, x24
  452358:	add	w0, w0, #0x1
  45235c:	str	w0, [sp, #132]
  452360:	b	451074 <ferror@plt+0x4daa4>
  452364:	ldr	x0, [sp, #104]
  452368:	tbz	w0, #13, 4510b4 <ferror@plt+0x4dae4>
  45236c:	cbz	x22, 4523b0 <ferror@plt+0x4ede0>
  452370:	mov	x27, #0x10000               	// #65536
  452374:	mov	w28, #0x10001               	// #65537
  452378:	ldp	x25, x1, [x20]
  45237c:	sub	x0, x24, x25
  452380:	add	x0, x0, #0x1
  452384:	cmp	x0, x1
  452388:	b.hi	45262c <ferror@plt+0x4f05c>  // b.pmore
  45238c:	mov	x0, x24
  452390:	mov	w1, #0x14                  	// #20
  452394:	sub	x24, x24, x22
  452398:	sub	w24, w24, #0x3
  45239c:	strb	w1, [x0], #1
  4523a0:	mov	w1, #0xe                   	// #14
  4523a4:	sturh	w24, [x22, #1]
  4523a8:	mov	x24, x0
  4523ac:	strb	w1, [x22]
  4523b0:	ldr	w0, [sp, #132]
  4523b4:	cbnz	w0, 453180 <ferror@plt+0x4fbb0>
  4523b8:	ldr	x0, [sp, #104]
  4523bc:	tbz	w0, #17, 45261c <ferror@plt+0x4f04c>
  4523c0:	mov	w28, #0x29                  	// #41
  4523c4:	b	4510b4 <ferror@plt+0x4dae4>
  4523c8:	ldr	x0, [sp, #104]
  4523cc:	tbz	w0, #11, 4510b4 <ferror@plt+0x4dae4>
  4523d0:	ldr	x0, [sp, #104]
  4523d4:	tbnz	w0, #10, 4510b4 <ferror@plt+0x4dae4>
  4523d8:	mov	x27, #0x10000               	// #65536
  4523dc:	mov	w28, #0x10001               	// #65537
  4523e0:	ldp	x25, x1, [x20]
  4523e4:	sub	x0, x24, x25
  4523e8:	add	x0, x0, #0x3
  4523ec:	cmp	x0, x1
  4523f0:	b.hi	4526d4 <ferror@plt+0x4f104>  // b.pmore
  4523f4:	sub	w2, w24, w19
  4523f8:	mov	x3, x24
  4523fc:	add	w2, w2, #0x3
  452400:	mov	x1, x19
  452404:	mov	w0, #0xf                   	// #15
  452408:	add	x24, x24, #0x3
  45240c:	bl	44ebfc <ferror@plt+0x4b62c>
  452410:	cbz	x22, 452428 <ferror@plt+0x4ee58>
  452414:	mov	w0, #0xe                   	// #14
  452418:	strb	w0, [x22]
  45241c:	sub	x0, x24, x22
  452420:	sub	w0, w0, #0x3
  452424:	sturh	w0, [x22, #1]
  452428:	mov	x22, x24
  45242c:	mov	w25, #0x10001               	// #65537
  452430:	mov	x24, #0x10000               	// #65536
  452434:	b	45276c <ferror@plt+0x4f19c>
  452438:	ldr	x1, [sp, #104]
  45243c:	mov	x0, #0x1200                	// #4608
  452440:	bics	xzr, x0, x1
  452444:	b.ne	4510b4 <ferror@plt+0x4dae4>  // b.any
  452448:	ldr	x0, [sp, #112]
  45244c:	ldr	x2, [sp, #232]
  452450:	cmp	x0, x2
  452454:	b.eq	452a68 <ferror@plt+0x4f498>  // b.none
  452458:	mov	w27, #0xffffffff            	// #-1
  45245c:	mov	w0, #0x7b                  	// #123
  452460:	mov	w3, #0x7fff                	// #32767
  452464:	mov	w4, #0xa                   	// #10
  452468:	ldr	x5, [sp, #112]
  45246c:	ldr	x1, [sp, #232]
  452470:	cmp	x1, x5
  452474:	b.ne	4527a8 <ferror@plt+0x4f1d8>  // b.any
  452478:	mov	w25, w27
  45247c:	cmp	w27, #0x0
  452480:	ccmp	w27, w25, #0x0, ge  // ge = tcont
  452484:	b.gt	452a68 <ferror@plt+0x4f498>
  452488:	ldr	x1, [sp, #104]
  45248c:	tbnz	w1, #12, 4524c4 <ferror@plt+0x4eef4>
  452490:	cmp	w0, #0x5c
  452494:	b.ne	452a68 <ferror@plt+0x4f498>  // b.any
  452498:	ldr	x1, [sp, #112]
  45249c:	ldr	x0, [sp, #232]
  4524a0:	cmp	x0, x1
  4524a4:	b.eq	452a68 <ferror@plt+0x4f498>  // b.none
  4524a8:	add	x1, x0, #0x1
  4524ac:	str	x1, [sp, #232]
  4524b0:	ldr	x1, [sp, #120]
  4524b4:	ldrb	w0, [x0]
  4524b8:	cbz	x1, 4524c4 <ferror@plt+0x4eef4>
  4524bc:	and	x0, x0, #0xff
  4524c0:	ldrb	w0, [x1, x0]
  4524c4:	cmp	w0, #0x7d
  4524c8:	b.ne	452a68 <ferror@plt+0x4f498>  // b.any
  4524cc:	cbnz	x23, 4524f0 <ferror@plt+0x4ef20>
  4524d0:	ldr	x0, [sp, #104]
  4524d4:	and	x0, x0, #0x3fffe0
  4524d8:	and	x0, x0, #0xffffffffffe0003f
  4524dc:	cmp	x0, #0x20
  4524e0:	b.eq	45119c <ferror@plt+0x4dbcc>  // b.none
  4524e4:	ldr	x0, [sp, #104]
  4524e8:	tbz	w0, #4, 452a90 <ferror@plt+0x4f4c0>
  4524ec:	mov	x23, x24
  4524f0:	mov	w0, #0x7fff                	// #32767
  4524f4:	cmp	w25, w0
  4524f8:	b.le	45286c <ferror@plt+0x4f29c>
  4524fc:	mov	x0, x21
  452500:	mov	w27, #0xa                   	// #10
  452504:	bl	4032a0 <free@plt>
  452508:	b	450f84 <ferror@plt+0x4d9b4>
  45250c:	ldr	x2, [sp, #112]
  452510:	cmp	x1, x2
  452514:	b.eq	451534 <ferror@plt+0x4df64>  // b.none
  452518:	add	x1, x0, #0x2
  45251c:	str	x1, [sp, #232]
  452520:	ldrb	w28, [x0, #1]
  452524:	cmp	w28, #0x42
  452528:	b.hi	452558 <ferror@plt+0x4ef88>  // b.pmore
  45252c:	cmp	w28, #0x26
  452530:	b.ls	45257c <ferror@plt+0x4efac>  // b.plast
  452534:	sub	w1, w28, #0x27
  452538:	cmp	w1, #0x1b
  45253c:	b.hi	45257c <ferror@plt+0x4efac>  // b.pmore
  452540:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  452544:	add	x0, x0, #0x368
  452548:	ldrh	w0, [x0, w1, uxtw #1]
  45254c:	adr	x1, 452558 <ferror@plt+0x4ef88>
  452550:	add	x0, x1, w0, sxth #2
  452554:	br	x0
  452558:	cmp	w28, #0x77
  45255c:	b.eq	452aa4 <ferror@plt+0x4f4d4>  // b.none
  452560:	b.hi	452590 <ferror@plt+0x4efc0>  // b.pmore
  452564:	cmp	w28, #0x60
  452568:	b.eq	452dc4 <ferror@plt+0x4f7f4>  // b.none
  45256c:	cmp	w28, #0x62
  452570:	b.eq	452cbc <ferror@plt+0x4f6ec>  // b.none
  452574:	cmp	w28, #0x57
  452578:	b.eq	452b2c <ferror@plt+0x4f55c>  // b.none
  45257c:	ldr	x0, [sp, #120]
  452580:	cbz	x0, 4510b4 <ferror@plt+0x4dae4>
  452584:	and	x28, x28, #0xff
  452588:	ldrb	w28, [x0, x28]
  45258c:	b	4510b4 <ferror@plt+0x4dae4>
  452590:	cmp	w28, #0x7b
  452594:	b.eq	45278c <ferror@plt+0x4f1bc>  // b.none
  452598:	cmp	w28, #0x7c
  45259c:	b.ne	45257c <ferror@plt+0x4efac>  // b.any
  4525a0:	ldr	x1, [sp, #104]
  4525a4:	mov	x0, #0x8400                	// #33792
  4525a8:	tst	x1, x0
  4525ac:	b.eq	4511c4 <ferror@plt+0x4dbf4>  // b.none
  4525b0:	b	45257c <ferror@plt+0x4efac>
  4525b4:	ldr	x0, [sp, #104]
  4525b8:	tbz	w0, #13, 452284 <ferror@plt+0x4ecb4>
  4525bc:	b	45257c <ferror@plt+0x4efac>
  4525c0:	cmp	x1, #0x10, lsl #12
  4525c4:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  4525c8:	lsl	x1, x1, #1
  4525cc:	mov	x0, x19
  4525d0:	cmp	x1, x27
  4525d4:	csel	x1, x1, x25, cc  // cc = lo, ul, last
  4525d8:	str	x1, [x20, #8]
  4525dc:	bl	4030b0 <realloc@plt>
  4525e0:	str	x0, [x20]
  4525e4:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4525e8:	cmp	x0, x19
  4525ec:	b.eq	452324 <ferror@plt+0x4ed54>  // b.none
  4525f0:	sub	x0, x0, x19
  4525f4:	add	x24, x24, x0
  4525f8:	cbz	x26, 452324 <ferror@plt+0x4ed54>
  4525fc:	add	x26, x26, x0
  452600:	b	452324 <ferror@plt+0x4ed54>
  452604:	ldr	x0, [sp, #104]
  452608:	tbnz	w0, #13, 45257c <ferror@plt+0x4efac>
  45260c:	ldr	w0, [sp, #132]
  452610:	cbnz	w0, 45317c <ferror@plt+0x4fbac>
  452614:	ldr	x0, [sp, #104]
  452618:	tbnz	w0, #17, 45257c <ferror@plt+0x4efac>
  45261c:	mov	x0, x21
  452620:	mov	w27, #0x10                  	// #16
  452624:	bl	4032a0 <free@plt>
  452628:	b	450f84 <ferror@plt+0x4d9b4>
  45262c:	cmp	x1, #0x10, lsl #12
  452630:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452634:	lsl	x1, x1, #1
  452638:	mov	x0, x25
  45263c:	cmp	x1, x28
  452640:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452644:	str	x1, [x20, #8]
  452648:	bl	4030b0 <realloc@plt>
  45264c:	str	x0, [x20]
  452650:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452654:	cmp	x0, x25
  452658:	b.eq	452378 <ferror@plt+0x4eda8>  // b.none
  45265c:	sub	x0, x0, x25
  452660:	add	x24, x24, x0
  452664:	add	x19, x19, x0
  452668:	add	x22, x22, x0
  45266c:	cbz	x23, 452674 <ferror@plt+0x4f0a4>
  452670:	add	x23, x23, x0
  452674:	cbz	x26, 452378 <ferror@plt+0x4eda8>
  452678:	add	x26, x26, x0
  45267c:	b	452378 <ferror@plt+0x4eda8>
  452680:	cmp	x1, #0x10, lsl #12
  452684:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452688:	lsl	x1, x1, #1
  45268c:	mov	x0, x27
  452690:	cmp	x1, x3
  452694:	csel	x1, x1, x26, cc  // cc = lo, ul, last
  452698:	str	x1, [x20, #8]
  45269c:	bl	4030b0 <realloc@plt>
  4526a0:	str	x0, [x20]
  4526a4:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4526a8:	cmp	x0, x27
  4526ac:	mov	w3, #0x10001               	// #65537
  4526b0:	b.eq	4531f0 <ferror@plt+0x4fc20>  // b.none
  4526b4:	sub	x0, x0, x27
  4526b8:	add	x24, x24, x0
  4526bc:	add	x19, x19, x0
  4526c0:	cbz	x22, 4526c8 <ferror@plt+0x4f0f8>
  4526c4:	add	x22, x22, x0
  4526c8:	cbz	x23, 4531f0 <ferror@plt+0x4fc20>
  4526cc:	add	x23, x23, x0
  4526d0:	b	4531f0 <ferror@plt+0x4fc20>
  4526d4:	cmp	x1, #0x10, lsl #12
  4526d8:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  4526dc:	lsl	x1, x1, #1
  4526e0:	mov	x0, x25
  4526e4:	cmp	x1, x28
  4526e8:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  4526ec:	str	x1, [x20, #8]
  4526f0:	bl	4030b0 <realloc@plt>
  4526f4:	str	x0, [x20]
  4526f8:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4526fc:	cmp	x0, x25
  452700:	b.eq	4523e0 <ferror@plt+0x4ee10>  // b.none
  452704:	sub	x0, x0, x25
  452708:	add	x24, x24, x0
  45270c:	add	x19, x19, x0
  452710:	cbz	x22, 452718 <ferror@plt+0x4f148>
  452714:	add	x22, x22, x0
  452718:	cbz	x23, 452720 <ferror@plt+0x4f150>
  45271c:	add	x23, x23, x0
  452720:	cbz	x26, 4523e0 <ferror@plt+0x4ee10>
  452724:	add	x26, x26, x0
  452728:	b	4523e0 <ferror@plt+0x4ee10>
  45272c:	cmp	x1, #0x10, lsl #12
  452730:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452734:	lsl	x1, x1, #1
  452738:	mov	x0, x19
  45273c:	cmp	x1, x25
  452740:	csel	x1, x1, x24, cc  // cc = lo, ul, last
  452744:	str	x1, [x20, #8]
  452748:	bl	4030b0 <realloc@plt>
  45274c:	str	x0, [x20]
  452750:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452754:	cmp	x0, x19
  452758:	b.eq	45276c <ferror@plt+0x4f19c>  // b.none
  45275c:	sub	x0, x0, x19
  452760:	add	x22, x22, x0
  452764:	cbz	x23, 45276c <ferror@plt+0x4f19c>
  452768:	add	x23, x23, x0
  45276c:	ldp	x19, x1, [x20]
  452770:	sub	x0, x22, x19
  452774:	add	x0, x0, #0x3
  452778:	cmp	x0, x1
  45277c:	b.hi	45272c <ferror@plt+0x4f15c>  // b.pmore
  452780:	add	x24, x22, #0x3
  452784:	mov	x19, x24
  452788:	b	451078 <ferror@plt+0x4daa8>
  45278c:	ldr	x1, [sp, #104]
  452790:	mov	x0, #0x1200                	// #4608
  452794:	and	x0, x1, x0
  452798:	cmp	x0, #0x200
  45279c:	b.eq	452448 <ferror@plt+0x4ee78>  // b.none
  4527a0:	mov	w28, #0x7b                  	// #123
  4527a4:	b	45257c <ferror@plt+0x4efac>
  4527a8:	add	x0, x1, #0x1
  4527ac:	str	x0, [sp, #232]
  4527b0:	ldrb	w0, [x1]
  4527b4:	ldr	x1, [sp, #120]
  4527b8:	cbz	x1, 4527c4 <ferror@plt+0x4f1f4>
  4527bc:	and	x0, x0, #0xff
  4527c0:	ldrb	w0, [x1, x0]
  4527c4:	sub	w1, w0, #0x30
  4527c8:	and	w1, w1, #0xff
  4527cc:	cmp	w1, #0x9
  4527d0:	b.hi	4527f0 <ferror@plt+0x4f220>  // b.pmore
  4527d4:	cmp	w27, w3
  4527d8:	b.gt	452468 <ferror@plt+0x4ee98>
  4527dc:	cmp	w27, #0x0
  4527e0:	csel	w27, w27, wzr, ge  // ge = tcont
  4527e4:	madd	w27, w27, w4, w0
  4527e8:	sub	w27, w27, #0x30
  4527ec:	b	452468 <ferror@plt+0x4ee98>
  4527f0:	cmp	w0, #0x2c
  4527f4:	b.ne	452478 <ferror@plt+0x4eea8>  // b.any
  4527f8:	mov	w25, #0xffffffff            	// #-1
  4527fc:	mov	w3, #0x7fff                	// #32767
  452800:	mov	w4, #0xa                   	// #10
  452804:	b	45284c <ferror@plt+0x4f27c>
  452808:	add	x0, x1, #0x1
  45280c:	str	x0, [sp, #232]
  452810:	ldrb	w0, [x1]
  452814:	ldr	x1, [sp, #120]
  452818:	cbz	x1, 452824 <ferror@plt+0x4f254>
  45281c:	and	x0, x0, #0xff
  452820:	ldrb	w0, [x1, x0]
  452824:	sub	w1, w0, #0x30
  452828:	and	w1, w1, #0xff
  45282c:	cmp	w1, #0x9
  452830:	b.hi	45285c <ferror@plt+0x4f28c>  // b.pmore
  452834:	cmp	w25, w3
  452838:	b.gt	45284c <ferror@plt+0x4f27c>
  45283c:	cmp	w25, #0x0
  452840:	csel	w25, w25, wzr, ge  // ge = tcont
  452844:	madd	w25, w25, w4, w0
  452848:	sub	w25, w25, #0x30
  45284c:	ldr	x5, [sp, #112]
  452850:	ldr	x1, [sp, #232]
  452854:	cmp	x1, x5
  452858:	b.ne	452808 <ferror@plt+0x4f238>  // b.any
  45285c:	cmn	w25, #0x1
  452860:	b.ne	45247c <ferror@plt+0x4eeac>  // b.any
  452864:	mov	w25, #0x7fff                	// #32767
  452868:	b	45247c <ferror@plt+0x4eeac>
  45286c:	cbnz	w25, 452904 <ferror@plt+0x4f334>
  452870:	mov	x27, #0x10000               	// #65536
  452874:	mov	w28, #0x10001               	// #65537
  452878:	ldp	x25, x1, [x20]
  45287c:	sub	x0, x24, x25
  452880:	add	x0, x0, #0x3
  452884:	cmp	x0, x1
  452888:	b.hi	4528ac <ferror@plt+0x4f2dc>  // b.pmore
  45288c:	add	x5, x24, #0x3
  452890:	mov	x3, x24
  452894:	sub	w2, w24, w23
  452898:	mov	x1, x23
  45289c:	mov	w0, #0xd                   	// #13
  4528a0:	bl	44ebfc <ferror@plt+0x4b62c>
  4528a4:	mov	x24, x5
  4528a8:	b	4516b4 <ferror@plt+0x4e0e4>
  4528ac:	cmp	x1, #0x10, lsl #12
  4528b0:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  4528b4:	lsl	x1, x1, #1
  4528b8:	mov	x0, x25
  4528bc:	cmp	x1, x28
  4528c0:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  4528c4:	str	x1, [x20, #8]
  4528c8:	bl	4030b0 <realloc@plt>
  4528cc:	str	x0, [x20]
  4528d0:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4528d4:	cmp	x0, x25
  4528d8:	b.eq	452878 <ferror@plt+0x4f2a8>  // b.none
  4528dc:	sub	x0, x0, x25
  4528e0:	add	x24, x24, x0
  4528e4:	add	x19, x19, x0
  4528e8:	cbz	x22, 4528f0 <ferror@plt+0x4f320>
  4528ec:	add	x22, x22, x0
  4528f0:	cbz	x23, 4528f8 <ferror@plt+0x4f328>
  4528f4:	add	x23, x23, x0
  4528f8:	cbz	x26, 452878 <ferror@plt+0x4f2a8>
  4528fc:	add	x26, x26, x0
  452900:	b	452878 <ferror@plt+0x4f2a8>
  452904:	cmp	w25, #0x1
  452908:	mov	w0, #0x14                  	// #20
  45290c:	mov	w1, #0xa                   	// #10
  452910:	csel	w0, w0, w1, gt
  452914:	mov	x28, x24
  452918:	mov	w24, w0
  45291c:	mov	x2, #0x10000               	// #65536
  452920:	mov	w3, #0x10001               	// #65537
  452924:	ldp	x4, x1, [x20]
  452928:	sub	x0, x28, x4
  45292c:	add	x0, x0, x24
  452930:	cmp	x0, x1
  452934:	b.hi	4529dc <ferror@plt+0x4f40c>  // b.pmore
  452938:	cmp	w25, #0x1
  45293c:	mov	x1, #0x5                   	// #5
  452940:	mov	x0, #0xa                   	// #10
  452944:	csel	x0, x0, x1, gt
  452948:	add	x0, x28, x0
  45294c:	add	x1, x28, x1
  452950:	sub	x0, x0, x23
  452954:	mov	x2, x28
  452958:	sub	w0, w0, #0x3
  45295c:	cmp	x23, x2
  452960:	b.ne	452a44 <ferror@plt+0x4f474>  // b.any
  452964:	add	x24, x28, #0xa
  452968:	mov	w2, #0x15                  	// #21
  45296c:	strb	w2, [x23]
  452970:	sturh	w0, [x23, #1]
  452974:	sturh	w27, [x23, #3]
  452978:	cmp	x23, x1
  45297c:	b.ne	452a50 <ferror@plt+0x4f480>  // b.any
  452980:	mov	w0, #0x517                 	// #1303
  452984:	strh	w0, [x23]
  452988:	strb	wzr, [x23, #2]
  45298c:	cmp	w25, #0x1
  452990:	sturh	w27, [x23, #3]
  452994:	b.le	4516b4 <ferror@plt+0x4e0e4>
  452998:	mov	w1, #0x16                  	// #22
  45299c:	sub	w24, w23, w24
  4529a0:	add	w24, w24, #0x2
  4529a4:	strb	w1, [x28, #10]
  4529a8:	add	x1, x28, #0xf
  4529ac:	sturh	w24, [x28, #11]
  4529b0:	sub	x2, x1, x23
  4529b4:	add	x24, x28, #0x14
  4529b8:	sub	w0, w25, #0x1
  4529bc:	sturh	w0, [x28, #13]
  4529c0:	cmp	x23, x1
  4529c4:	b.ne	452a5c <ferror@plt+0x4f48c>  // b.any
  4529c8:	mov	w1, #0x17                  	// #23
  4529cc:	strb	w1, [x23]
  4529d0:	sturh	w2, [x23, #1]
  4529d4:	sturh	w0, [x23, #3]
  4529d8:	b	4516b4 <ferror@plt+0x4e0e4>
  4529dc:	cmp	x1, #0x10, lsl #12
  4529e0:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  4529e4:	lsl	x1, x1, #1
  4529e8:	mov	x0, x4
  4529ec:	cmp	x1, x3
  4529f0:	str	x4, [sp, #136]
  4529f4:	csel	x1, x1, x2, cc  // cc = lo, ul, last
  4529f8:	str	x1, [x20, #8]
  4529fc:	bl	4030b0 <realloc@plt>
  452a00:	str	x0, [x20]
  452a04:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452a08:	ldr	x4, [sp, #136]
  452a0c:	mov	x2, #0x10000               	// #65536
  452a10:	mov	w3, #0x10001               	// #65537
  452a14:	cmp	x0, x4
  452a18:	b.eq	452924 <ferror@plt+0x4f354>  // b.none
  452a1c:	sub	x0, x0, x4
  452a20:	add	x28, x28, x0
  452a24:	add	x19, x19, x0
  452a28:	cbz	x22, 452a30 <ferror@plt+0x4f460>
  452a2c:	add	x22, x22, x0
  452a30:	cbz	x23, 452a38 <ferror@plt+0x4f468>
  452a34:	add	x23, x23, x0
  452a38:	cbz	x26, 452924 <ferror@plt+0x4f354>
  452a3c:	add	x26, x26, x0
  452a40:	b	452924 <ferror@plt+0x4f354>
  452a44:	ldrb	w3, [x2, #-1]!
  452a48:	strb	w3, [x2, #5]
  452a4c:	b	45295c <ferror@plt+0x4f38c>
  452a50:	ldrb	w0, [x1, #-1]!
  452a54:	strb	w0, [x1, #5]
  452a58:	b	452978 <ferror@plt+0x4f3a8>
  452a5c:	ldrb	w3, [x1, #-1]!
  452a60:	strb	w3, [x1, #5]
  452a64:	b	4529c0 <ferror@plt+0x4f3f0>
  452a68:	ldr	x0, [sp, #104]
  452a6c:	tbnz	w0, #21, 452a90 <ferror@plt+0x4f4c0>
  452a70:	mov	x0, x21
  452a74:	bl	4032a0 <free@plt>
  452a78:	ldr	x1, [sp, #112]
  452a7c:	ldr	x0, [sp, #232]
  452a80:	cmp	x0, x1
  452a84:	cset	w27, ne  // ne = any
  452a88:	add	w27, w27, #0x9
  452a8c:	b	450f84 <ferror@plt+0x4d9b4>
  452a90:	ldr	x0, [sp, #104]
  452a94:	str	x2, [sp, #232]
  452a98:	tbz	w0, #12, 4527a0 <ferror@plt+0x4f1d0>
  452a9c:	mov	w28, #0x7b                  	// #123
  452aa0:	b	4510b4 <ferror@plt+0x4dae4>
  452aa4:	ldr	x0, [sp, #104]
  452aa8:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452aac:	mov	x23, x24
  452ab0:	mov	x27, #0x10000               	// #65536
  452ab4:	mov	w28, #0x10001               	// #65537
  452ab8:	ldp	x25, x1, [x20]
  452abc:	sub	x0, x24, x25
  452ac0:	add	x0, x0, #0x1
  452ac4:	cmp	x0, x1
  452ac8:	b.hi	452ad4 <ferror@plt+0x4f504>  // b.pmore
  452acc:	mov	w0, #0x18                  	// #24
  452ad0:	b	4512b4 <ferror@plt+0x4dce4>
  452ad4:	cmp	x1, #0x10, lsl #12
  452ad8:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452adc:	lsl	x1, x1, #1
  452ae0:	mov	x0, x25
  452ae4:	cmp	x1, x28
  452ae8:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452aec:	str	x1, [x20, #8]
  452af0:	bl	4030b0 <realloc@plt>
  452af4:	str	x0, [x20]
  452af8:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452afc:	cmp	x0, x25
  452b00:	b.eq	452ab8 <ferror@plt+0x4f4e8>  // b.none
  452b04:	sub	x0, x0, x25
  452b08:	add	x24, x24, x0
  452b0c:	add	x19, x19, x0
  452b10:	cbz	x22, 452b18 <ferror@plt+0x4f548>
  452b14:	add	x22, x22, x0
  452b18:	cbz	x23, 452b20 <ferror@plt+0x4f550>
  452b1c:	add	x23, x23, x0
  452b20:	cbz	x26, 452ab8 <ferror@plt+0x4f4e8>
  452b24:	add	x26, x26, x0
  452b28:	b	452ab8 <ferror@plt+0x4f4e8>
  452b2c:	ldr	x0, [sp, #104]
  452b30:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452b34:	mov	x23, x24
  452b38:	mov	x27, #0x10000               	// #65536
  452b3c:	mov	w28, #0x10001               	// #65537
  452b40:	ldp	x25, x1, [x20]
  452b44:	sub	x0, x24, x25
  452b48:	add	x0, x0, #0x1
  452b4c:	cmp	x0, x1
  452b50:	b.hi	452b5c <ferror@plt+0x4f58c>  // b.pmore
  452b54:	mov	w0, #0x19                  	// #25
  452b58:	b	4512b4 <ferror@plt+0x4dce4>
  452b5c:	cmp	x1, #0x10, lsl #12
  452b60:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452b64:	lsl	x1, x1, #1
  452b68:	mov	x0, x25
  452b6c:	cmp	x1, x28
  452b70:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452b74:	str	x1, [x20, #8]
  452b78:	bl	4030b0 <realloc@plt>
  452b7c:	str	x0, [x20]
  452b80:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452b84:	cmp	x0, x25
  452b88:	b.eq	452b40 <ferror@plt+0x4f570>  // b.none
  452b8c:	sub	x0, x0, x25
  452b90:	add	x24, x24, x0
  452b94:	add	x19, x19, x0
  452b98:	cbz	x22, 452ba0 <ferror@plt+0x4f5d0>
  452b9c:	add	x22, x22, x0
  452ba0:	cbz	x23, 452ba8 <ferror@plt+0x4f5d8>
  452ba4:	add	x23, x23, x0
  452ba8:	cbz	x26, 452b40 <ferror@plt+0x4f570>
  452bac:	add	x26, x26, x0
  452bb0:	b	452b40 <ferror@plt+0x4f570>
  452bb4:	ldr	x0, [sp, #104]
  452bb8:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452bbc:	mov	x27, #0x10000               	// #65536
  452bc0:	mov	w28, #0x10001               	// #65537
  452bc4:	ldp	x25, x1, [x20]
  452bc8:	sub	x0, x24, x25
  452bcc:	add	x0, x0, #0x1
  452bd0:	cmp	x0, x1
  452bd4:	b.hi	452be0 <ferror@plt+0x4f610>  // b.pmore
  452bd8:	mov	w0, #0x1a                  	// #26
  452bdc:	b	4512b4 <ferror@plt+0x4dce4>
  452be0:	cmp	x1, #0x10, lsl #12
  452be4:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452be8:	lsl	x1, x1, #1
  452bec:	mov	x0, x25
  452bf0:	cmp	x1, x28
  452bf4:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452bf8:	str	x1, [x20, #8]
  452bfc:	bl	4030b0 <realloc@plt>
  452c00:	str	x0, [x20]
  452c04:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452c08:	cmp	x0, x25
  452c0c:	b.eq	452bc4 <ferror@plt+0x4f5f4>  // b.none
  452c10:	sub	x0, x0, x25
  452c14:	add	x24, x24, x0
  452c18:	add	x19, x19, x0
  452c1c:	cbz	x22, 452c24 <ferror@plt+0x4f654>
  452c20:	add	x22, x22, x0
  452c24:	cbz	x23, 452c2c <ferror@plt+0x4f65c>
  452c28:	add	x23, x23, x0
  452c2c:	cbz	x26, 452bc4 <ferror@plt+0x4f5f4>
  452c30:	add	x26, x26, x0
  452c34:	b	452bc4 <ferror@plt+0x4f5f4>
  452c38:	ldr	x0, [sp, #104]
  452c3c:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452c40:	mov	x27, #0x10000               	// #65536
  452c44:	mov	w28, #0x10001               	// #65537
  452c48:	ldp	x25, x1, [x20]
  452c4c:	sub	x0, x24, x25
  452c50:	add	x0, x0, #0x1
  452c54:	cmp	x0, x1
  452c58:	b.hi	452c64 <ferror@plt+0x4f694>  // b.pmore
  452c5c:	mov	w0, #0x1b                  	// #27
  452c60:	b	4512b4 <ferror@plt+0x4dce4>
  452c64:	cmp	x1, #0x10, lsl #12
  452c68:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452c6c:	lsl	x1, x1, #1
  452c70:	mov	x0, x25
  452c74:	cmp	x1, x28
  452c78:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452c7c:	str	x1, [x20, #8]
  452c80:	bl	4030b0 <realloc@plt>
  452c84:	str	x0, [x20]
  452c88:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452c8c:	cmp	x0, x25
  452c90:	b.eq	452c48 <ferror@plt+0x4f678>  // b.none
  452c94:	sub	x0, x0, x25
  452c98:	add	x24, x24, x0
  452c9c:	add	x19, x19, x0
  452ca0:	cbz	x22, 452ca8 <ferror@plt+0x4f6d8>
  452ca4:	add	x22, x22, x0
  452ca8:	cbz	x23, 452cb0 <ferror@plt+0x4f6e0>
  452cac:	add	x23, x23, x0
  452cb0:	cbz	x26, 452c48 <ferror@plt+0x4f678>
  452cb4:	add	x26, x26, x0
  452cb8:	b	452c48 <ferror@plt+0x4f678>
  452cbc:	ldr	x0, [sp, #104]
  452cc0:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452cc4:	mov	x27, #0x10000               	// #65536
  452cc8:	mov	w28, #0x10001               	// #65537
  452ccc:	ldp	x25, x1, [x20]
  452cd0:	sub	x0, x24, x25
  452cd4:	add	x0, x0, #0x1
  452cd8:	cmp	x0, x1
  452cdc:	b.hi	452ce8 <ferror@plt+0x4f718>  // b.pmore
  452ce0:	mov	w0, #0x1c                  	// #28
  452ce4:	b	4512b4 <ferror@plt+0x4dce4>
  452ce8:	cmp	x1, #0x10, lsl #12
  452cec:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452cf0:	lsl	x1, x1, #1
  452cf4:	mov	x0, x25
  452cf8:	cmp	x1, x28
  452cfc:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452d00:	str	x1, [x20, #8]
  452d04:	bl	4030b0 <realloc@plt>
  452d08:	str	x0, [x20]
  452d0c:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452d10:	cmp	x0, x25
  452d14:	b.eq	452ccc <ferror@plt+0x4f6fc>  // b.none
  452d18:	sub	x0, x0, x25
  452d1c:	add	x24, x24, x0
  452d20:	add	x19, x19, x0
  452d24:	cbz	x22, 452d2c <ferror@plt+0x4f75c>
  452d28:	add	x22, x22, x0
  452d2c:	cbz	x23, 452d34 <ferror@plt+0x4f764>
  452d30:	add	x23, x23, x0
  452d34:	cbz	x26, 452ccc <ferror@plt+0x4f6fc>
  452d38:	add	x26, x26, x0
  452d3c:	b	452ccc <ferror@plt+0x4f6fc>
  452d40:	ldr	x0, [sp, #104]
  452d44:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452d48:	mov	x27, #0x10000               	// #65536
  452d4c:	mov	w28, #0x10001               	// #65537
  452d50:	ldp	x25, x1, [x20]
  452d54:	sub	x0, x24, x25
  452d58:	add	x0, x0, #0x1
  452d5c:	cmp	x0, x1
  452d60:	b.hi	452d6c <ferror@plt+0x4f79c>  // b.pmore
  452d64:	mov	w0, #0x1d                  	// #29
  452d68:	b	4512b4 <ferror@plt+0x4dce4>
  452d6c:	cmp	x1, #0x10, lsl #12
  452d70:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452d74:	lsl	x1, x1, #1
  452d78:	mov	x0, x25
  452d7c:	cmp	x1, x28
  452d80:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452d84:	str	x1, [x20, #8]
  452d88:	bl	4030b0 <realloc@plt>
  452d8c:	str	x0, [x20]
  452d90:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452d94:	cmp	x0, x25
  452d98:	b.eq	452d50 <ferror@plt+0x4f780>  // b.none
  452d9c:	sub	x0, x0, x25
  452da0:	add	x24, x24, x0
  452da4:	add	x19, x19, x0
  452da8:	cbz	x22, 452db0 <ferror@plt+0x4f7e0>
  452dac:	add	x22, x22, x0
  452db0:	cbz	x23, 452db8 <ferror@plt+0x4f7e8>
  452db4:	add	x23, x23, x0
  452db8:	cbz	x26, 452d50 <ferror@plt+0x4f780>
  452dbc:	add	x26, x26, x0
  452dc0:	b	452d50 <ferror@plt+0x4f780>
  452dc4:	ldr	x0, [sp, #104]
  452dc8:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452dcc:	mov	x27, #0x10000               	// #65536
  452dd0:	mov	w28, #0x10001               	// #65537
  452dd4:	ldp	x25, x1, [x20]
  452dd8:	sub	x0, x24, x25
  452ddc:	add	x0, x0, #0x1
  452de0:	cmp	x0, x1
  452de4:	b.hi	452df0 <ferror@plt+0x4f820>  // b.pmore
  452de8:	mov	w0, #0xb                   	// #11
  452dec:	b	4512b4 <ferror@plt+0x4dce4>
  452df0:	cmp	x1, #0x10, lsl #12
  452df4:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452df8:	lsl	x1, x1, #1
  452dfc:	mov	x0, x25
  452e00:	cmp	x1, x28
  452e04:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452e08:	str	x1, [x20, #8]
  452e0c:	bl	4030b0 <realloc@plt>
  452e10:	str	x0, [x20]
  452e14:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452e18:	cmp	x0, x25
  452e1c:	b.eq	452dd4 <ferror@plt+0x4f804>  // b.none
  452e20:	sub	x0, x0, x25
  452e24:	add	x24, x24, x0
  452e28:	add	x19, x19, x0
  452e2c:	cbz	x22, 452e34 <ferror@plt+0x4f864>
  452e30:	add	x22, x22, x0
  452e34:	cbz	x23, 452e3c <ferror@plt+0x4f86c>
  452e38:	add	x23, x23, x0
  452e3c:	cbz	x26, 452dd4 <ferror@plt+0x4f804>
  452e40:	add	x26, x26, x0
  452e44:	b	452dd4 <ferror@plt+0x4f804>
  452e48:	ldr	x0, [sp, #104]
  452e4c:	tbnz	w0, #19, 4510b4 <ferror@plt+0x4dae4>
  452e50:	mov	x27, #0x10000               	// #65536
  452e54:	mov	w28, #0x10001               	// #65537
  452e58:	ldp	x25, x1, [x20]
  452e5c:	sub	x0, x24, x25
  452e60:	add	x0, x0, #0x1
  452e64:	cmp	x0, x1
  452e68:	b.hi	452e74 <ferror@plt+0x4f8a4>  // b.pmore
  452e6c:	mov	w0, #0xc                   	// #12
  452e70:	b	4512b4 <ferror@plt+0x4dce4>
  452e74:	cmp	x1, #0x10, lsl #12
  452e78:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452e7c:	lsl	x1, x1, #1
  452e80:	mov	x0, x25
  452e84:	cmp	x1, x28
  452e88:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  452e8c:	str	x1, [x20, #8]
  452e90:	bl	4030b0 <realloc@plt>
  452e94:	str	x0, [x20]
  452e98:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452e9c:	cmp	x0, x25
  452ea0:	b.eq	452e58 <ferror@plt+0x4f888>  // b.none
  452ea4:	sub	x0, x0, x25
  452ea8:	add	x24, x24, x0
  452eac:	add	x19, x19, x0
  452eb0:	cbz	x22, 452eb8 <ferror@plt+0x4f8e8>
  452eb4:	add	x22, x22, x0
  452eb8:	cbz	x23, 452ec0 <ferror@plt+0x4f8f0>
  452ebc:	add	x23, x23, x0
  452ec0:	cbz	x26, 452e58 <ferror@plt+0x4f888>
  452ec4:	add	x26, x26, x0
  452ec8:	b	452e58 <ferror@plt+0x4f888>
  452ecc:	ldr	x0, [sp, #104]
  452ed0:	tbnz	w0, #14, 4510b4 <ferror@plt+0x4dae4>
  452ed4:	ldr	w1, [sp, #152]
  452ed8:	sub	w0, w28, #0x30
  452edc:	and	w25, w0, #0xff
  452ee0:	cmp	w1, w0, uxtb
  452ee4:	b.cs	452ef8 <ferror@plt+0x4f928>  // b.hs, b.nlast
  452ee8:	mov	x0, x21
  452eec:	mov	w27, #0x6                   	// #6
  452ef0:	bl	4032a0 <free@plt>
  452ef4:	b	450f84 <ferror@plt+0x4d9b4>
  452ef8:	ldr	w0, [sp, #132]
  452efc:	add	x1, x21, #0x48
  452f00:	mov	x2, #0x28                  	// #40
  452f04:	sub	w0, w0, #0x1
  452f08:	sxtw	x0, w0
  452f0c:	tbz	w0, #31, 452f48 <ferror@plt+0x4f978>
  452f10:	mov	x23, x24
  452f14:	mov	x28, #0x10000               	// #65536
  452f18:	mov	w2, #0x10001               	// #65537
  452f1c:	ldp	x27, x1, [x20]
  452f20:	sub	x0, x24, x27
  452f24:	add	x0, x0, #0x2
  452f28:	cmp	x0, x1
  452f2c:	b.hi	452f60 <ferror@plt+0x4f990>  // b.pmore
  452f30:	mov	x0, x24
  452f34:	mov	w1, #0x8                   	// #8
  452f38:	strb	w1, [x0], #2
  452f3c:	strb	w25, [x24, #1]
  452f40:	mov	x24, x0
  452f44:	b	4512b8 <ferror@plt+0x4dce8>
  452f48:	sub	x0, x0, #0x1
  452f4c:	mul	x3, x0, x2
  452f50:	ldr	w3, [x1, x3]
  452f54:	cmp	w25, w3
  452f58:	b.ne	452f0c <ferror@plt+0x4f93c>  // b.any
  452f5c:	b	4510b4 <ferror@plt+0x4dae4>
  452f60:	cmp	x1, #0x10, lsl #12
  452f64:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452f68:	lsl	x1, x1, #1
  452f6c:	mov	x0, x27
  452f70:	cmp	x1, x2
  452f74:	csel	x1, x1, x28, cc  // cc = lo, ul, last
  452f78:	str	x1, [x20, #8]
  452f7c:	bl	4030b0 <realloc@plt>
  452f80:	str	x0, [x20]
  452f84:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  452f88:	cmp	x0, x27
  452f8c:	mov	w2, #0x10001               	// #65537
  452f90:	b.eq	452f1c <ferror@plt+0x4f94c>  // b.none
  452f94:	sub	x0, x0, x27
  452f98:	add	x24, x24, x0
  452f9c:	add	x19, x19, x0
  452fa0:	cbz	x22, 452fa8 <ferror@plt+0x4f9d8>
  452fa4:	add	x22, x22, x0
  452fa8:	cbz	x23, 452fb0 <ferror@plt+0x4f9e0>
  452fac:	add	x23, x23, x0
  452fb0:	cbz	x26, 452f1c <ferror@plt+0x4f94c>
  452fb4:	add	x26, x26, x0
  452fb8:	b	452f1c <ferror@plt+0x4f94c>
  452fbc:	ldr	x0, [sp, #104]
  452fc0:	tbnz	w0, #1, 451190 <ferror@plt+0x4dbc0>
  452fc4:	b	45257c <ferror@plt+0x4efac>
  452fc8:	cmp	w0, #0x2b
  452fcc:	mov	w2, #0x3f                  	// #63
  452fd0:	ccmp	w0, w2, #0x4, ne  // ne = any
  452fd4:	b	451110 <ferror@plt+0x4db40>
  452fd8:	cmp	w0, #0x5c
  452fdc:	b.ne	453060 <ferror@plt+0x4fa90>  // b.any
  452fe0:	ldrb	w0, [x1, #1]
  452fe4:	b	451120 <ferror@plt+0x4db50>
  452fe8:	cmp	x1, #0x10, lsl #12
  452fec:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  452ff0:	lsl	x1, x1, #1
  452ff4:	mov	x0, x25
  452ff8:	cmp	x1, x2
  452ffc:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  453000:	str	x1, [x20, #8]
  453004:	bl	4030b0 <realloc@plt>
  453008:	str	x0, [x20]
  45300c:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  453010:	cmp	x0, x25
  453014:	mov	w2, #0x10001               	// #65537
  453018:	b.eq	453040 <ferror@plt+0x4fa70>  // b.none
  45301c:	sub	x0, x0, x25
  453020:	add	x24, x24, x0
  453024:	add	x19, x19, x0
  453028:	cbz	x22, 453030 <ferror@plt+0x4fa60>
  45302c:	add	x22, x22, x0
  453030:	cbz	x23, 453038 <ferror@plt+0x4fa68>
  453034:	add	x23, x23, x0
  453038:	cbz	x26, 453040 <ferror@plt+0x4fa70>
  45303c:	add	x26, x26, x0
  453040:	ldp	x25, x1, [x20]
  453044:	sub	x0, x24, x25
  453048:	add	x0, x0, #0x2
  45304c:	cmp	x0, x1
  453050:	b.hi	452fe8 <ferror@plt+0x4fa18>  // b.pmore
  453054:	add	x26, x24, #0x1
  453058:	mov	w0, #0x2                   	// #2
  45305c:	strh	w0, [x24], #2
  453060:	mov	x27, #0x10000               	// #65536
  453064:	mov	w2, #0x10001               	// #65537
  453068:	ldp	x25, x1, [x20]
  45306c:	sub	x0, x24, x25
  453070:	add	x0, x0, #0x1
  453074:	cmp	x0, x1
  453078:	b.hi	453090 <ferror@plt+0x4fac0>  // b.pmore
  45307c:	strb	w28, [x24], #1
  453080:	ldrb	w0, [x26]
  453084:	add	w0, w0, #0x1
  453088:	strb	w0, [x26]
  45308c:	b	4512b8 <ferror@plt+0x4dce8>
  453090:	cmp	x1, #0x10, lsl #12
  453094:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  453098:	lsl	x1, x1, #1
  45309c:	mov	x0, x25
  4530a0:	cmp	x1, x2
  4530a4:	csel	x1, x1, x27, cc  // cc = lo, ul, last
  4530a8:	str	x1, [x20, #8]
  4530ac:	bl	4030b0 <realloc@plt>
  4530b0:	str	x0, [x20]
  4530b4:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  4530b8:	cmp	x0, x25
  4530bc:	mov	w2, #0x10001               	// #65537
  4530c0:	b.eq	453068 <ferror@plt+0x4fa98>  // b.none
  4530c4:	sub	x0, x0, x25
  4530c8:	cbz	x22, 4530d0 <ferror@plt+0x4fb00>
  4530cc:	add	x22, x22, x0
  4530d0:	cbz	x23, 4530d8 <ferror@plt+0x4fb08>
  4530d4:	add	x23, x23, x0
  4530d8:	add	x24, x24, x0
  4530dc:	add	x19, x19, x0
  4530e0:	add	x26, x26, x0
  4530e4:	b	453068 <ferror@plt+0x4fa98>
  4530e8:	ldr	x0, [sp, #104]
  4530ec:	tbz	w0, #18, 453114 <ferror@plt+0x4fb44>
  4530f0:	mov	x23, #0x10000               	// #65536
  4530f4:	mov	w22, #0x10001               	// #65537
  4530f8:	ldp	x19, x1, [x20]
  4530fc:	sub	x0, x24, x19
  453100:	add	x0, x0, #0x1
  453104:	cmp	x0, x1
  453108:	b.hi	453130 <ferror@plt+0x4fb60>  // b.pmore
  45310c:	mov	w0, #0x1                   	// #1
  453110:	strb	w0, [x24], #1
  453114:	mov	x0, x21
  453118:	bl	4032a0 <free@plt>
  45311c:	ldr	x25, [x20]
  453120:	mov	w27, #0x0                   	// #0
  453124:	sub	x24, x24, x25
  453128:	str	x24, [x20, #16]
  45312c:	b	450f84 <ferror@plt+0x4d9b4>
  453130:	cmp	x1, #0x10, lsl #12
  453134:	b.eq	451248 <ferror@plt+0x4dc78>  // b.none
  453138:	lsl	x1, x1, #1
  45313c:	mov	x0, x19
  453140:	cmp	x1, x22
  453144:	csel	x1, x1, x23, cc  // cc = lo, ul, last
  453148:	str	x1, [x20, #8]
  45314c:	bl	4030b0 <realloc@plt>
  453150:	str	x0, [x20]
  453154:	cbz	x0, 450f80 <ferror@plt+0x4d9b0>
  453158:	cmp	x0, x19
  45315c:	b.eq	4530f8 <ferror@plt+0x4fb28>  // b.none
  453160:	sub	x0, x0, x19
  453164:	add	x24, x24, x0
  453168:	cbz	x26, 4530f8 <ferror@plt+0x4fb28>
  45316c:	add	x26, x26, x0
  453170:	b	4530f8 <ferror@plt+0x4fb28>
  453174:	mov	w27, #0xe                   	// #14
  453178:	b	450f84 <ferror@plt+0x4d9b4>
  45317c:	cbnz	x22, 452370 <ferror@plt+0x4eda0>
  453180:	ldr	w0, [sp, #132]
  453184:	ldr	x1, [x20]
  453188:	sub	w0, w0, #0x1
  45318c:	str	w0, [sp, #132]
  453190:	mov	w0, #0x28                  	// #40
  453194:	ldr	w2, [sp, #132]
  453198:	umull	x0, w2, w0
  45319c:	add	x2, x21, x0
  4531a0:	ldr	x19, [x21, x0]
  4531a4:	ldr	x0, [x2, #8]
  4531a8:	add	x19, x1, x19
  4531ac:	ldr	x7, [x2, #24]
  4531b0:	cmp	x0, #0x0
  4531b4:	sub	x8, x0, #0x1
  4531b8:	ldr	w0, [x2, #32]
  4531bc:	add	x8, x1, x8
  4531c0:	add	x23, x1, x7
  4531c4:	csel	x22, x8, xzr, ne  // ne = any
  4531c8:	cmp	w0, #0xff
  4531cc:	b.hi	4516b4 <ferror@plt+0x4e0e4>  // b.pmore
  4531d0:	ldr	w3, [sp, #152]
  4531d4:	and	w28, w0, #0xff
  4531d8:	mov	x26, #0x10000               	// #65536
  4531dc:	sub	w0, w3, w0, uxtb
  4531e0:	mov	w3, #0x10001               	// #65537
  4531e4:	and	w25, w0, #0xff
  4531e8:	ldr	x0, [x2, #16]
  4531ec:	strb	w25, [x1, x0]
  4531f0:	ldp	x27, x1, [x20]
  4531f4:	sub	x0, x24, x27
  4531f8:	add	x0, x0, #0x3
  4531fc:	cmp	x0, x1
  453200:	b.hi	452680 <ferror@plt+0x4f0b0>  // b.pmore
  453204:	mov	w0, #0x7                   	// #7
  453208:	strb	w0, [x24]
  45320c:	strb	w28, [x24, #1]
  453210:	strb	w25, [x24, #2]
  453214:	b	4516b0 <ferror@plt+0x4e0e0>
  453218:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45321c:	mov	x2, x0
  453220:	ldr	x0, [x1, #1976]
  453224:	str	x2, [x1, #1976]
  453228:	ret
  45322c:	b	44efb0 <ferror@plt+0x4b9e0>
  453230:	ldrb	w5, [x0, #56]
  453234:	cbz	w2, 453250 <ferror@plt+0x4fc80>
  453238:	mov	w6, #0x1                   	// #1
  45323c:	bfi	w5, w6, #1, #2
  453240:	strb	w5, [x0, #56]
  453244:	str	w2, [x1]
  453248:	stp	x3, x4, [x1, #8]
  45324c:	ret
  453250:	and	w5, w5, #0xfffffff9
  453254:	strb	w5, [x0, #56]
  453258:	str	wzr, [x1]
  45325c:	stp	xzr, xzr, [x1, #8]
  453260:	b	45324c <ferror@plt+0x4fc7c>
  453264:	sub	sp, sp, #0x20
  453268:	mov	x7, x5
  45326c:	mov	w6, w4
  453270:	mov	w5, w3
  453274:	mov	w4, w2
  453278:	mov	x3, x1
  45327c:	stp	x29, x30, [sp, #16]
  453280:	add	x29, sp, #0x10
  453284:	mov	x1, #0x0                   	// #0
  453288:	str	w2, [sp]
  45328c:	mov	w2, #0x0                   	// #0
  453290:	bl	450d08 <ferror@plt+0x4d738>
  453294:	ldp	x29, x30, [sp, #16]
  453298:	add	sp, sp, #0x20
  45329c:	ret
  4532a0:	b	450d08 <ferror@plt+0x4d738>
  4532a4:	mov	w7, w2
  4532a8:	mov	x6, x4
  4532ac:	mov	w5, w3
  4532b0:	mov	w4, w2
  4532b4:	mov	x3, x1
  4532b8:	mov	w2, #0x0                   	// #0
  4532bc:	mov	x1, #0x0                   	// #0
  4532c0:	b	44f330 <ferror@plt+0x4bd60>
  4532c4:	b	44f330 <ferror@plt+0x4bd60>
  4532c8:	stp	x29, x30, [sp, #-16]!
  4532cc:	mov	x3, x2
  4532d0:	mov	w4, #0x69                  	// #105
  4532d4:	mov	x29, sp
  4532d8:	ldrb	w2, [x2, #56]
  4532dc:	and	w2, w2, w4
  4532e0:	orr	w2, w2, #0xffffff80
  4532e4:	strb	w2, [x3, #56]
  4532e8:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4532ec:	ldr	x2, [x2, #1976]
  4532f0:	bl	450f38 <ferror@plt+0x4d968>
  4532f4:	cbz	w0, 45330c <ferror@plt+0x4fd3c>
  4532f8:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4532fc:	add	x1, x1, #0x3a0
  453300:	ldr	x0, [x1, w0, sxtw #3]
  453304:	ldp	x29, x30, [sp], #16
  453308:	ret
  45330c:	mov	x0, #0x0                   	// #0
  453310:	b	453304 <ferror@plt+0x4fd34>
  453314:	stp	x29, x30, [sp, #-48]!
  453318:	mov	x29, sp
  45331c:	stp	x19, x20, [sp, #16]
  453320:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  453324:	add	x19, x19, #0x370
  453328:	mov	x20, x0
  45332c:	ldr	x0, [x19, #264]
  453330:	str	x21, [sp, #32]
  453334:	cbnz	x20, 453350 <ferror@plt+0x4fd80>
  453338:	cbz	x0, 4533d4 <ferror@plt+0x4fe04>
  45333c:	mov	x0, #0x0                   	// #0
  453340:	ldp	x19, x20, [sp, #16]
  453344:	ldr	x21, [sp, #32]
  453348:	ldp	x29, x30, [sp], #48
  45334c:	ret
  453350:	cbz	x0, 453398 <ferror@plt+0x4fdc8>
  453354:	ldrb	w0, [x19, #320]
  453358:	add	x19, x19, #0x108
  45335c:	orr	w0, w0, #0xffffff80
  453360:	strb	w0, [x19, #56]
  453364:	mov	x0, x20
  453368:	bl	402d50 <strlen@plt>
  45336c:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  453370:	mov	x3, x19
  453374:	ldr	x2, [x1, #1976]
  453378:	mov	x1, x0
  45337c:	mov	x0, x20
  453380:	bl	450f38 <ferror@plt+0x4d968>
  453384:	cbz	w0, 45333c <ferror@plt+0x4fd6c>
  453388:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  45338c:	add	x1, x1, #0x3a0
  453390:	ldr	x0, [x1, w0, sxtw #3]
  453394:	b	453340 <ferror@plt+0x4fd70>
  453398:	mov	x0, #0xc8                  	// #200
  45339c:	bl	402f40 <malloc@plt>
  4533a0:	str	x0, [x19, #264]
  4533a4:	cbnz	x0, 4533b4 <ferror@plt+0x4fde4>
  4533a8:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4533ac:	add	x0, x0, #0x45f
  4533b0:	b	453340 <ferror@plt+0x4fd70>
  4533b4:	add	x21, x19, #0x108
  4533b8:	mov	x0, #0xc8                  	// #200
  4533bc:	str	x0, [x21, #8]
  4533c0:	mov	x0, #0x100                 	// #256
  4533c4:	bl	402f40 <malloc@plt>
  4533c8:	str	x0, [x21, #32]
  4533cc:	cbnz	x0, 453354 <ferror@plt+0x4fd84>
  4533d0:	b	4533a8 <ferror@plt+0x4fdd8>
  4533d4:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4533d8:	add	x0, x0, #0x470
  4533dc:	b	453340 <ferror@plt+0x4fd70>
  4533e0:	stp	x29, x30, [sp, #-32]!
  4533e4:	mov	x29, sp
  4533e8:	str	x19, [sp, #16]
  4533ec:	mov	x19, x0
  4533f0:	bl	402d50 <strlen@plt>
  4533f4:	mov	x2, x0
  4533f8:	mov	w4, w0
  4533fc:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  453400:	add	x0, x0, #0x370
  453404:	mov	x1, x19
  453408:	mov	x5, #0x0                   	// #0
  45340c:	mov	w3, #0x0                   	// #0
  453410:	add	x0, x0, #0x108
  453414:	bl	453264 <ferror@plt+0x4fc94>
  453418:	mvn	w0, w0
  45341c:	ldr	x19, [sp, #16]
  453420:	lsr	w0, w0, #31
  453424:	ldp	x29, x30, [sp], #32
  453428:	ret
  45342c:	stp	x29, x30, [sp, #-64]!
  453430:	mov	x29, sp
  453434:	stp	x19, x20, [sp, #16]
  453438:	mov	x19, x0
  45343c:	mov	w20, w2
  453440:	stp	x21, x22, [sp, #32]
  453444:	mov	x0, #0x2c6                 	// #710
  453448:	tst	x20, #0x1
  45344c:	stp	x23, x24, [sp, #48]
  453450:	movk	x0, #0x1, lsl #16
  453454:	mov	x21, #0xb2fc                	// #45820
  453458:	stp	xzr, xzr, [x19]
  45345c:	mov	x23, x1
  453460:	movk	x21, #0x3, lsl #16
  453464:	str	xzr, [x19, #16]
  453468:	csel	x21, x21, x0, ne  // ne = any
  45346c:	mov	x0, #0x100                 	// #256
  453470:	bl	402f40 <malloc@plt>
  453474:	str	x0, [x19, #32]
  453478:	tbz	w20, #1, 453568 <ferror@plt+0x4ff98>
  45347c:	mov	x0, #0x100                 	// #256
  453480:	bl	402f40 <malloc@plt>
  453484:	str	x0, [x19, #40]
  453488:	cbz	x0, 453578 <ferror@plt+0x4ffa8>
  45348c:	bl	403240 <__ctype_b_loc@plt>
  453490:	mov	x24, x0
  453494:	mov	x22, #0x0                   	// #0
  453498:	ldr	x0, [x24]
  45349c:	ldrh	w0, [x0, x22, lsl #1]
  4534a0:	tbz	w0, #8, 453560 <ferror@plt+0x4ff90>
  4534a4:	bl	402e90 <__ctype_tolower_loc@plt>
  4534a8:	ldr	x0, [x0]
  4534ac:	ldr	w1, [x0, x22, lsl #2]
  4534b0:	and	w1, w1, #0xff
  4534b4:	ldr	x0, [x19, #40]
  4534b8:	strb	w1, [x0, x22]
  4534bc:	add	x22, x22, #0x1
  4534c0:	cmp	x22, #0x100
  4534c4:	b.ne	453498 <ferror@plt+0x4fec8>  // b.any
  4534c8:	tbz	w20, #2, 453570 <ferror@plt+0x4ffa0>
  4534cc:	and	x21, x21, #0xffffffffffffffbf
  4534d0:	mov	w0, #0x1                   	// #1
  4534d4:	orr	x21, x21, #0x100
  4534d8:	ubfx	x20, x20, #3, #1
  4534dc:	ubfiz	w0, w0, #7, #1
  4534e0:	mov	w1, #0x6f                  	// #111
  4534e4:	orr	w20, w0, w20, lsl #4
  4534e8:	ldrb	w0, [x19, #56]
  4534ec:	and	w0, w0, w1
  4534f0:	orr	w20, w20, w0
  4534f4:	strb	w20, [x19, #56]
  4534f8:	mov	x0, x23
  4534fc:	bl	402d50 <strlen@plt>
  453500:	mov	x1, x0
  453504:	mov	x3, x19
  453508:	mov	x2, x21
  45350c:	mov	x0, x23
  453510:	bl	450f38 <ferror@plt+0x4d968>
  453514:	mov	w20, w0
  453518:	cmp	w0, #0x10
  45351c:	b.eq	453580 <ferror@plt+0x4ffb0>  // b.none
  453520:	cbnz	w0, 453548 <ferror@plt+0x4ff78>
  453524:	ldr	x0, [x19, #32]
  453528:	cbz	x0, 453548 <ferror@plt+0x4ff78>
  45352c:	mov	x0, x19
  453530:	bl	44efb0 <ferror@plt+0x4b9e0>
  453534:	cmn	w0, #0x2
  453538:	b.ne	453548 <ferror@plt+0x4ff78>  // b.any
  45353c:	ldr	x0, [x19, #32]
  453540:	bl	4032a0 <free@plt>
  453544:	str	xzr, [x19, #32]
  453548:	mov	w0, w20
  45354c:	ldp	x19, x20, [sp, #16]
  453550:	ldp	x21, x22, [sp, #32]
  453554:	ldp	x23, x24, [sp, #48]
  453558:	ldp	x29, x30, [sp], #64
  45355c:	ret
  453560:	and	w1, w22, #0xff
  453564:	b	4534b4 <ferror@plt+0x4fee4>
  453568:	str	xzr, [x19, #40]
  45356c:	b	4534c8 <ferror@plt+0x4fef8>
  453570:	mov	w0, #0x0                   	// #0
  453574:	b	4534d8 <ferror@plt+0x4ff08>
  453578:	mov	w20, #0xc                   	// #12
  45357c:	b	453548 <ferror@plt+0x4ff78>
  453580:	mov	w20, #0x8                   	// #8
  453584:	b	453548 <ferror@plt+0x4ff78>
  453588:	stp	x29, x30, [sp, #-176]!
  45358c:	mov	x29, sp
  453590:	stp	x21, x22, [sp, #32]
  453594:	mov	x22, x0
  453598:	mov	x21, x3
  45359c:	mov	x0, x1
  4535a0:	stp	x19, x20, [sp, #16]
  4535a4:	mov	x20, x2
  4535a8:	mov	w19, w4
  4535ac:	stp	x23, x24, [sp, #48]
  4535b0:	mov	x24, x1
  4535b4:	str	x25, [sp, #64]
  4535b8:	bl	402d50 <strlen@plt>
  4535bc:	mov	x25, x0
  4535c0:	ldrb	w0, [x22, #56]
  4535c4:	tbnz	w0, #4, 453688 <ferror@plt+0x500b8>
  4535c8:	cmp	x20, #0x0
  4535cc:	cset	w23, ne  // ne = any
  4535d0:	ldp	x0, x1, [x22]
  4535d4:	stp	x0, x1, [sp, #112]
  4535d8:	ubfx	x3, x19, #1, #1
  4535dc:	ldp	x0, x1, [x22, #16]
  4535e0:	stp	x0, x1, [sp, #128]
  4535e4:	and	w19, w19, #0x1
  4535e8:	ldp	x0, x1, [x22, #32]
  4535ec:	stp	x0, x1, [sp, #144]
  4535f0:	ubfiz	w19, w19, #5, #3
  4535f4:	ldp	x0, x1, [x22, #48]
  4535f8:	stp	x0, x1, [sp, #160]
  4535fc:	orr	w19, w19, #0x4
  453600:	ldrb	w0, [sp, #168]
  453604:	orr	w19, w19, w3, lsl #6
  453608:	mov	w1, #0xffffff99            	// #-103
  45360c:	and	w0, w0, w1
  453610:	orr	w19, w19, w0
  453614:	strb	w19, [sp, #168]
  453618:	cbz	w23, 453690 <ferror@plt+0x500c0>
  45361c:	lsl	x0, x20, #3
  453620:	str	w20, [sp, #88]
  453624:	bl	402f40 <malloc@plt>
  453628:	str	x0, [sp, #96]
  45362c:	cbz	x0, 45366c <ferror@plt+0x5009c>
  453630:	add	x5, sp, #0x58
  453634:	add	x4, x0, x20, lsl #2
  453638:	str	x4, [sp, #104]
  45363c:	mov	w4, w25
  453640:	mov	w2, w25
  453644:	mov	x1, x24
  453648:	add	x0, sp, #0x70
  45364c:	mov	w3, #0x0                   	// #0
  453650:	bl	453264 <ferror@plt+0x4fc94>
  453654:	mov	w19, w0
  453658:	cbz	w23, 453668 <ferror@plt+0x50098>
  45365c:	ldr	x0, [sp, #96]
  453660:	tbz	w19, #31, 453698 <ferror@plt+0x500c8>
  453664:	bl	4032a0 <free@plt>
  453668:	lsr	w23, w19, #31
  45366c:	mov	w0, w23
  453670:	ldp	x19, x20, [sp, #16]
  453674:	ldp	x21, x22, [sp, #32]
  453678:	ldp	x23, x24, [sp, #48]
  45367c:	ldr	x25, [sp, #64]
  453680:	ldp	x29, x30, [sp], #176
  453684:	ret
  453688:	mov	w23, #0x0                   	// #0
  45368c:	b	4535d0 <ferror@plt+0x50000>
  453690:	mov	x5, #0x0                   	// #0
  453694:	b	45363c <ferror@plt+0x5006c>
  453698:	ldr	x4, [sp, #104]
  45369c:	mov	w2, #0x0                   	// #0
  4536a0:	mov	w1, w2
  4536a4:	cmp	x20, w2, uxtw
  4536a8:	b.ls	453664 <ferror@plt+0x50094>  // b.plast
  4536ac:	lsl	x3, x1, #2
  4536b0:	lsl	x5, x1, #3
  4536b4:	add	x1, x21, x1, lsl #3
  4536b8:	add	w2, w2, #0x1
  4536bc:	ldr	w6, [x0, x3]
  4536c0:	str	w6, [x21, x5]
  4536c4:	ldr	w3, [x4, x3]
  4536c8:	str	w3, [x1, #4]
  4536cc:	b	4536a0 <ferror@plt+0x500d0>
  4536d0:	stp	x29, x30, [sp, #-48]!
  4536d4:	cmp	w0, #0x10
  4536d8:	mov	x29, sp
  4536dc:	stp	x19, x20, [sp, #16]
  4536e0:	stp	x21, x22, [sp, #32]
  4536e4:	b.ls	4536ec <ferror@plt+0x5011c>  // b.plast
  4536e8:	bl	403180 <abort@plt>
  4536ec:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4536f0:	add	x1, x1, #0x3a0
  4536f4:	mov	x21, x2
  4536f8:	mov	x19, x3
  4536fc:	ldr	x22, [x1, w0, sxtw #3]
  453700:	mov	x0, x22
  453704:	bl	402d50 <strlen@plt>
  453708:	add	x20, x0, #0x1
  45370c:	cbz	x19, 453730 <ferror@plt+0x50160>
  453710:	cmp	x20, x19
  453714:	b.ls	453744 <ferror@plt+0x50174>  // b.plast
  453718:	sub	x19, x19, #0x1
  45371c:	mov	x1, x22
  453720:	mov	x2, x19
  453724:	mov	x0, x21
  453728:	bl	402cd0 <memcpy@plt>
  45372c:	strb	wzr, [x21, x19]
  453730:	mov	x0, x20
  453734:	ldp	x19, x20, [sp, #16]
  453738:	ldp	x21, x22, [sp, #32]
  45373c:	ldp	x29, x30, [sp], #48
  453740:	ret
  453744:	mov	x2, x20
  453748:	mov	x1, x22
  45374c:	mov	x0, x21
  453750:	bl	402cd0 <memcpy@plt>
  453754:	b	453730 <ferror@plt+0x50160>
  453758:	stp	x29, x30, [sp, #-32]!
  45375c:	mov	x29, sp
  453760:	str	x19, [sp, #16]
  453764:	mov	x19, x0
  453768:	ldr	x0, [x0]
  45376c:	bl	4032a0 <free@plt>
  453770:	stp	xzr, xzr, [x19]
  453774:	ldr	x0, [x19, #32]
  453778:	str	xzr, [x19, #16]
  45377c:	bl	4032a0 <free@plt>
  453780:	str	xzr, [x19, #32]
  453784:	ldrb	w0, [x19, #56]
  453788:	and	w0, w0, #0xfffffff7
  45378c:	strb	w0, [x19, #56]
  453790:	ldr	x0, [x19, #40]
  453794:	bl	4032a0 <free@plt>
  453798:	str	xzr, [x19, #40]
  45379c:	ldr	x19, [sp, #16]
  4537a0:	ldp	x29, x30, [sp], #32
  4537a4:	ret
  4537a8:	sub	w0, w0, #0x1c
  4537ac:	cmp	w0, #0x34
  4537b0:	b.hi	4537d0 <ferror@plt+0x50200>  // b.pmore
  4537b4:	mov	x1, #0x1                   	// #1
  4537b8:	lsl	x0, x1, x0
  4537bc:	mov	x1, #0x1f                  	// #31
  4537c0:	movk	x1, #0x1a, lsl #48
  4537c4:	tst	x0, x1
  4537c8:	cset	w0, ne  // ne = any
  4537cc:	ret
  4537d0:	mov	w0, #0x0                   	// #0
  4537d4:	b	4537cc <ferror@plt+0x501fc>
  4537d8:	mov	x1, x0
  4537dc:	ldp	w2, w0, [x0, #40]
  4537e0:	cmp	w2, w0
  4537e4:	b.ge	453804 <ferror@plt+0x50234>  // b.tcont
  4537e8:	ldr	x3, [x1, #32]
  4537ec:	mov	w0, #0x18                  	// #24
  4537f0:	smaddl	x0, w2, w0, x3
  4537f4:	add	w2, w2, #0x1
  4537f8:	str	wzr, [x0, #4]
  4537fc:	str	w2, [x1, #40]
  453800:	ret
  453804:	mov	x0, #0x0                   	// #0
  453808:	b	453800 <ferror@plt+0x50230>
  45380c:	mov	x5, x2
  453810:	sub	w2, w1, #0x1
  453814:	cmp	w2, #0x4f
  453818:	b.hi	453848 <ferror@plt+0x50278>  // b.pmore
  45381c:	mov	w6, w1
  453820:	mov	x4, x3
  453824:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  453828:	add	x1, x1, #0x5f0
  45382c:	ldrb	w1, [x1, w2, uxtw]
  453830:	adr	x2, 45383c <ferror@plt+0x5026c>
  453834:	add	x1, x2, w1, sxtb #2
  453838:	br	x1
  45383c:	cmp	x5, #0x0
  453840:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  453844:	b.ne	453854 <ferror@plt+0x50284>  // b.any
  453848:	mov	x0, #0x0                   	// #0
  45384c:	ret
  453850:	cbz	x5, 453848 <ferror@plt+0x50278>
  453854:	stp	x29, x30, [sp, #-16]!
  453858:	mov	x29, sp
  45385c:	bl	4537d8 <ferror@plt+0x50208>
  453860:	cbz	x0, 45386c <ferror@plt+0x5029c>
  453864:	str	w6, [x0]
  453868:	stp	x5, x4, [x0, #8]
  45386c:	ldp	x29, x30, [sp], #16
  453870:	ret
  453874:	cbnz	x3, 453854 <ferror@plt+0x50284>
  453878:	b	453848 <ferror@plt+0x50278>
  45387c:	mov	x4, x1
  453880:	stp	x29, x30, [sp, #-16]!
  453884:	mov	x29, sp
  453888:	bl	4537d8 <ferror@plt+0x50208>
  45388c:	cbz	x0, 45389c <ferror@plt+0x502cc>
  453890:	mov	w1, #0x27                  	// #39
  453894:	str	w1, [x0]
  453898:	str	x4, [x0, #8]
  45389c:	ldp	x29, x30, [sp], #16
  4538a0:	ret
  4538a4:	ldr	x4, [x0, #24]
  4538a8:	mov	x2, x1
  4538ac:	mov	w3, #0x4f                  	// #79
  4538b0:	ldrb	w1, [x4]
  4538b4:	cmp	w1, #0x52
  4538b8:	ccmp	w1, w3, #0x4, ne  // ne = any
  4538bc:	b.ne	4538f4 <ferror@plt+0x50324>  // b.any
  4538c0:	ldr	w3, [x0, #72]
  4538c4:	cmp	w1, #0x52
  4538c8:	b.ne	4538e8 <ferror@plt+0x50318>  // b.any
  4538cc:	add	w3, w3, #0x2
  4538d0:	mov	w1, #0x1f                  	// #31
  4538d4:	add	x4, x4, #0x1
  4538d8:	str	x4, [x0, #24]
  4538dc:	str	w3, [x0, #72]
  4538e0:	mov	x3, #0x0                   	// #0
  4538e4:	b	45380c <ferror@plt+0x5023c>
  4538e8:	add	w3, w3, #0x3
  4538ec:	mov	w1, #0x20                  	// #32
  4538f0:	b	4538d4 <ferror@plt+0x50304>
  4538f4:	mov	x0, x2
  4538f8:	ret
  4538fc:	cbz	x1, 453924 <ferror@plt+0x50354>
  453900:	ldp	w2, w3, [x0, #56]
  453904:	cmp	w2, w3
  453908:	b.ge	453924 <ferror@plt+0x50354>  // b.tcont
  45390c:	ldr	x3, [x0, #48]
  453910:	str	x1, [x3, w2, sxtw #3]
  453914:	add	w2, w2, #0x1
  453918:	str	w2, [x0, #56]
  45391c:	mov	w0, #0x1                   	// #1
  453920:	ret
  453924:	mov	w0, #0x0                   	// #0
  453928:	b	453920 <ferror@plt+0x50350>
  45392c:	stp	x29, x30, [sp, #-32]!
  453930:	mov	x29, sp
  453934:	stp	x19, x20, [sp, #16]
  453938:	mov	x19, x1
  45393c:	mov	x20, x0
  453940:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  453944:	add	x1, x1, #0x640
  453948:	cbz	x19, 4539b0 <ferror@plt+0x503e0>
  45394c:	ldr	w0, [x19]
  453950:	sub	w0, w0, #0x1
  453954:	cmp	w0, #0x4f
  453958:	b.hi	4539b0 <ferror@plt+0x503e0>  // b.pmore
  45395c:	ldrb	w0, [x1, w0, uxtw]
  453960:	adr	x2, 45396c <ferror@plt+0x5039c>
  453964:	add	x0, x2, w0, sxtb #2
  453968:	br	x0
  45396c:	ldr	w0, [x20, #364]
  453970:	add	w0, w0, #0x1
  453974:	str	w0, [x20, #364]
  453978:	ldr	w0, [x20, #308]
  45397c:	cmp	w0, #0x800
  453980:	b.gt	4539b0 <ferror@plt+0x503e0>
  453984:	ldr	x1, [x19, #8]
  453988:	add	w0, w0, #0x1
  45398c:	str	w0, [x20, #308]
  453990:	mov	x0, x20
  453994:	bl	45392c <ferror@plt+0x5035c>
  453998:	ldr	x1, [x19, #16]
  45399c:	mov	x0, x20
  4539a0:	bl	45392c <ferror@plt+0x5035c>
  4539a4:	ldr	w0, [x20, #308]
  4539a8:	sub	w0, w0, #0x1
  4539ac:	str	w0, [x20, #308]
  4539b0:	ldp	x19, x20, [sp, #16]
  4539b4:	ldp	x29, x30, [sp], #32
  4539b8:	ret
  4539bc:	ldr	x0, [x19, #8]
  4539c0:	ldr	w0, [x0]
  4539c4:	cmp	w0, #0x5
  4539c8:	b.ne	453978 <ferror@plt+0x503a8>  // b.any
  4539cc:	ldr	w0, [x20, #348]
  4539d0:	add	w0, w0, #0x1
  4539d4:	str	w0, [x20, #348]
  4539d8:	b	453978 <ferror@plt+0x503a8>
  4539dc:	ldr	x19, [x19, #16]
  4539e0:	b	453948 <ferror@plt+0x50378>
  4539e4:	ldr	x19, [x19, #8]
  4539e8:	b	453948 <ferror@plt+0x50378>
  4539ec:	stp	x29, x30, [sp, #-32]!
  4539f0:	mov	x29, sp
  4539f4:	ldr	x1, [x0, #256]
  4539f8:	str	x19, [sp, #16]
  4539fc:	mov	x19, x0
  453a00:	strb	wzr, [x0, x1]
  453a04:	ldp	x3, x2, [x0, #272]
  453a08:	blr	x3
  453a0c:	str	xzr, [x19, #256]
  453a10:	ldr	x0, [x19, #320]
  453a14:	add	x0, x0, #0x1
  453a18:	str	x0, [x19, #320]
  453a1c:	ldr	x19, [sp, #16]
  453a20:	ldp	x29, x30, [sp], #32
  453a24:	ret
  453a28:	stp	x29, x30, [sp, #-32]!
  453a2c:	mov	x29, sp
  453a30:	stp	x19, x20, [sp, #16]
  453a34:	and	w20, w1, #0xff
  453a38:	mov	x19, x0
  453a3c:	ldr	x1, [x0, #256]
  453a40:	cmp	x1, #0xff
  453a44:	b.ne	453a4c <ferror@plt+0x5047c>  // b.any
  453a48:	bl	4539ec <ferror@plt+0x5041c>
  453a4c:	ldr	x0, [x19, #256]
  453a50:	add	x1, x0, #0x1
  453a54:	str	x1, [x19, #256]
  453a58:	strb	w20, [x19, x0]
  453a5c:	strb	w20, [x19, #264]
  453a60:	ldp	x19, x20, [sp, #16]
  453a64:	ldp	x29, x30, [sp], #32
  453a68:	ret
  453a6c:	stp	x29, x30, [sp, #-48]!
  453a70:	mov	x29, sp
  453a74:	stp	x19, x20, [sp, #16]
  453a78:	mov	x19, x1
  453a7c:	add	x20, x1, x2
  453a80:	str	x21, [sp, #32]
  453a84:	mov	x21, x0
  453a88:	cmp	x19, x20
  453a8c:	b.ne	453aa0 <ferror@plt+0x504d0>  // b.any
  453a90:	ldp	x19, x20, [sp, #16]
  453a94:	ldr	x21, [sp, #32]
  453a98:	ldp	x29, x30, [sp], #48
  453a9c:	ret
  453aa0:	ldrb	w1, [x19], #1
  453aa4:	mov	x0, x21
  453aa8:	bl	453a28 <ferror@plt+0x50458>
  453aac:	b	453a88 <ferror@plt+0x504b8>
  453ab0:	mov	x1, x0
  453ab4:	mov	w0, #0x0                   	// #0
  453ab8:	cbz	x1, 453ad0 <ferror@plt+0x50500>
  453abc:	ldr	w2, [x1]
  453ac0:	cmp	w2, #0x2f
  453ac4:	b.ne	453ad0 <ferror@plt+0x50500>  // b.any
  453ac8:	ldr	x2, [x1, #8]
  453acc:	cbnz	x2, 453ad4 <ferror@plt+0x50504>
  453ad0:	ret
  453ad4:	add	w0, w0, #0x1
  453ad8:	ldr	x1, [x1, #16]
  453adc:	b	453ab8 <ferror@plt+0x504e8>
  453ae0:	stp	x29, x30, [sp, #-32]!
  453ae4:	mov	x29, sp
  453ae8:	stp	x19, x20, [sp, #16]
  453aec:	mov	x20, x0
  453af0:	mov	x19, x1
  453af4:	mov	x0, x1
  453af8:	bl	402d50 <strlen@plt>
  453afc:	mov	x1, x19
  453b00:	mov	x2, x0
  453b04:	mov	x0, x20
  453b08:	ldp	x19, x20, [sp, #16]
  453b0c:	ldp	x29, x30, [sp], #32
  453b10:	b	453a6c <ferror@plt+0x5049c>
  453b14:	stp	x29, x30, [sp, #-64]!
  453b18:	mov	w2, w1
  453b1c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  453b20:	mov	x29, sp
  453b24:	add	x1, x1, #0xe23
  453b28:	str	x19, [sp, #16]
  453b2c:	mov	x19, x0
  453b30:	add	x0, sp, #0x20
  453b34:	bl	402e00 <sprintf@plt>
  453b38:	add	x1, sp, #0x20
  453b3c:	mov	x0, x19
  453b40:	bl	453ae0 <ferror@plt+0x50510>
  453b44:	ldr	x19, [sp, #16]
  453b48:	ldp	x29, x30, [sp], #64
  453b4c:	ret
  453b50:	mov	x1, x0
  453b54:	ldr	x0, [x0]
  453b58:	ldrb	w3, [x0]
  453b5c:	cmp	w3, #0x6e
  453b60:	b.ne	453b9c <ferror@plt+0x505cc>  // b.any
  453b64:	add	x2, x0, #0x1
  453b68:	str	x2, [x1]
  453b6c:	mov	w5, #0x1                   	// #1
  453b70:	ldrb	w3, [x0, #1]
  453b74:	mov	w0, #0x0                   	// #0
  453b78:	mov	w6, #0x7fffffff            	// #2147483647
  453b7c:	mov	w4, #0xa                   	// #10
  453b80:	sub	w2, w3, #0x30
  453b84:	and	w7, w2, #0xff
  453b88:	cmp	w7, #0x9
  453b8c:	b.ls	453ba4 <ferror@plt+0x505d4>  // b.plast
  453b90:	cbz	w5, 453b98 <ferror@plt+0x505c8>
  453b94:	neg	w0, w0
  453b98:	ret
  453b9c:	mov	w5, #0x0                   	// #0
  453ba0:	b	453b74 <ferror@plt+0x505a4>
  453ba4:	sub	w2, w6, w2
  453ba8:	udiv	w2, w2, w4
  453bac:	cmp	w2, w0
  453bb0:	b.lt	453bd0 <ferror@plt+0x50600>  // b.tstop
  453bb4:	ldr	x2, [x1]
  453bb8:	madd	w0, w0, w4, w3
  453bbc:	add	x3, x2, #0x1
  453bc0:	str	x3, [x1]
  453bc4:	sub	w0, w0, #0x30
  453bc8:	ldrb	w3, [x2, #1]
  453bcc:	b	453b80 <ferror@plt+0x505b0>
  453bd0:	mov	w0, #0xffffffff            	// #-1
  453bd4:	b	453b98 <ferror@plt+0x505c8>
  453bd8:	mov	x4, x0
  453bdc:	stp	x29, x30, [sp, #-16]!
  453be0:	mov	x29, sp
  453be4:	bl	4537d8 <ferror@plt+0x50208>
  453be8:	mov	x8, x0
  453bec:	cbz	x0, 453c08 <ferror@plt+0x50638>
  453bf0:	mov	w0, #0x42                  	// #66
  453bf4:	str	w0, [x8]
  453bf8:	add	x0, x4, #0x18
  453bfc:	bl	453b50 <ferror@plt+0x50580>
  453c00:	sxtw	x0, w0
  453c04:	str	x0, [x8, #8]
  453c08:	mov	x0, x8
  453c0c:	ldp	x29, x30, [sp], #16
  453c10:	ret
  453c14:	mov	x8, x0
  453c18:	ldr	x0, [x0, #24]
  453c1c:	ldrb	w0, [x0]
  453c20:	cmp	w0, #0x5f
  453c24:	b.eq	453c78 <ferror@plt+0x506a8>  // b.none
  453c28:	cmp	w0, #0x6e
  453c2c:	b.ne	453c44 <ferror@plt+0x50674>  // b.any
  453c30:	mov	w0, #0xffffffff            	// #-1
  453c34:	ret
  453c38:	mov	w0, #0xffffffff            	// #-1
  453c3c:	ldp	x29, x30, [sp], #16
  453c40:	ret
  453c44:	stp	x29, x30, [sp, #-16]!
  453c48:	add	x0, x8, #0x18
  453c4c:	mov	x29, sp
  453c50:	bl	453b50 <ferror@plt+0x50580>
  453c54:	adds	w0, w0, #0x1
  453c58:	b.mi	453c38 <ferror@plt+0x50668>  // b.first
  453c5c:	ldr	x1, [x8, #24]
  453c60:	ldrb	w2, [x1]
  453c64:	cmp	w2, #0x5f
  453c68:	b.ne	453c38 <ferror@plt+0x50668>  // b.any
  453c6c:	add	x1, x1, #0x1
  453c70:	str	x1, [x8, #24]
  453c74:	b	453c3c <ferror@plt+0x5066c>
  453c78:	ldr	x1, [x8, #24]
  453c7c:	mov	w0, #0x0                   	// #0
  453c80:	ldrb	w2, [x1]
  453c84:	cmp	w2, #0x5f
  453c88:	b.ne	453c30 <ferror@plt+0x50660>  // b.any
  453c8c:	add	x1, x1, #0x1
  453c90:	str	x1, [x8, #24]
  453c94:	ret
  453c98:	ldr	x1, [x0, #24]
  453c9c:	ldrb	w2, [x1]
  453ca0:	cmp	w2, #0x54
  453ca4:	b.eq	453cbc <ferror@plt+0x506ec>  // b.none
  453ca8:	mov	x0, #0x0                   	// #0
  453cac:	ret
  453cb0:	mov	x0, #0x0                   	// #0
  453cb4:	ldp	x29, x30, [sp], #16
  453cb8:	ret
  453cbc:	stp	x29, x30, [sp, #-16]!
  453cc0:	add	x1, x1, #0x1
  453cc4:	mov	x9, x0
  453cc8:	mov	x29, sp
  453ccc:	str	x1, [x0, #24]
  453cd0:	bl	453c14 <ferror@plt+0x50644>
  453cd4:	sxtw	x4, w0
  453cd8:	tbnz	w4, #31, 453cb0 <ferror@plt+0x506e0>
  453cdc:	mov	x0, x9
  453ce0:	bl	4537d8 <ferror@plt+0x50208>
  453ce4:	cbz	x0, 453cb4 <ferror@plt+0x506e4>
  453ce8:	mov	w1, #0x5                   	// #5
  453cec:	str	w1, [x0]
  453cf0:	str	x4, [x0, #8]
  453cf4:	b	453cb4 <ferror@plt+0x506e4>
  453cf8:	mov	x8, x0
  453cfc:	cbnz	w1, 453d2c <ferror@plt+0x5075c>
  453d00:	ldr	x0, [x0, #24]
  453d04:	ldrb	w1, [x0]
  453d08:	cbnz	w1, 453d20 <ferror@plt+0x50750>
  453d0c:	mov	w0, #0x0                   	// #0
  453d10:	ret
  453d14:	mov	w0, #0x0                   	// #0
  453d18:	ldp	x29, x30, [sp], #16
  453d1c:	ret
  453d20:	add	x1, x0, #0x1
  453d24:	str	x1, [x8, #24]
  453d28:	ldrb	w1, [x0]
  453d2c:	stp	x29, x30, [sp, #-16]!
  453d30:	cmp	w1, #0x68
  453d34:	mov	x29, sp
  453d38:	b.ne	453d64 <ferror@plt+0x50794>  // b.any
  453d3c:	add	x0, x8, #0x18
  453d40:	bl	453b50 <ferror@plt+0x50580>
  453d44:	ldr	x0, [x8, #24]
  453d48:	ldrb	w1, [x0]
  453d4c:	cmp	w1, #0x5f
  453d50:	b.ne	453d14 <ferror@plt+0x50744>  // b.any
  453d54:	add	x0, x0, #0x1
  453d58:	str	x0, [x8, #24]
  453d5c:	mov	w0, #0x1                   	// #1
  453d60:	b	453d18 <ferror@plt+0x50748>
  453d64:	cmp	w1, #0x76
  453d68:	b.ne	453d14 <ferror@plt+0x50744>  // b.any
  453d6c:	add	x9, x8, #0x18
  453d70:	mov	x0, x9
  453d74:	bl	453b50 <ferror@plt+0x50580>
  453d78:	ldr	x0, [x8, #24]
  453d7c:	ldrb	w1, [x0]
  453d80:	cmp	w1, #0x5f
  453d84:	b.ne	453d14 <ferror@plt+0x50744>  // b.any
  453d88:	add	x0, x0, #0x1
  453d8c:	str	x0, [x8, #24]
  453d90:	mov	x0, x9
  453d94:	b	453d40 <ferror@plt+0x50770>
  453d98:	ldrb	w2, [x0]
  453d9c:	sub	w1, w2, #0x4b
  453da0:	and	w1, w1, #0xff
  453da4:	cmp	w1, #0x27
  453da8:	b.ls	453dbc <ferror@plt+0x507ec>  // b.plast
  453dac:	cmp	w2, #0x44
  453db0:	b.eq	453dd0 <ferror@plt+0x50800>  // b.none
  453db4:	mov	w0, #0x0                   	// #0
  453db8:	ret
  453dbc:	mov	x0, #0x801                 	// #2049
  453dc0:	movk	x0, #0x80, lsl #32
  453dc4:	lsr	x0, x0, x1
  453dc8:	and	w0, w0, #0x1
  453dcc:	b	453db8 <ferror@plt+0x507e8>
  453dd0:	ldrb	w0, [x0, #1]
  453dd4:	and	w1, w0, #0xffffffdf
  453dd8:	sub	w0, w0, #0x77
  453ddc:	and	w0, w0, #0xff
  453de0:	cmp	w1, #0x4f
  453de4:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  453de8:	cset	w0, ls  // ls = plast
  453dec:	b	453db8 <ferror@plt+0x507e8>
  453df0:	ldr	x0, [x0]
  453df4:	ldrb	w1, [x0, #1]
  453df8:	cmp	w1, #0x63
  453dfc:	b.ne	453e28 <ferror@plt+0x50858>  // b.any
  453e00:	ldrb	w0, [x0]
  453e04:	sub	w1, w0, #0x63
  453e08:	and	w1, w1, #0xff
  453e0c:	cmp	w1, #0x1
  453e10:	b.ls	453e30 <ferror@plt+0x50860>  // b.plast
  453e14:	sub	w0, w0, #0x72
  453e18:	and	w0, w0, #0xff
  453e1c:	cmp	w0, #0x1
  453e20:	cset	w0, ls  // ls = plast
  453e24:	ret
  453e28:	mov	w0, #0x0                   	// #0
  453e2c:	b	453e24 <ferror@plt+0x50854>
  453e30:	mov	w0, #0x1                   	// #1
  453e34:	b	453e24 <ferror@plt+0x50854>
  453e38:	mov	x8, x0
  453e3c:	ldr	x0, [x0, #24]
  453e40:	ldrb	w1, [x0]
  453e44:	cmp	w1, #0x5f
  453e48:	b.eq	453e54 <ferror@plt+0x50884>  // b.none
  453e4c:	mov	w0, #0x1                   	// #1
  453e50:	ret
  453e54:	stp	x29, x30, [sp, #-16]!
  453e58:	add	x1, x0, #0x1
  453e5c:	mov	x29, sp
  453e60:	str	x1, [x8, #24]
  453e64:	ldrb	w1, [x0, #1]
  453e68:	cmp	w1, #0x5f
  453e6c:	b.ne	453eb8 <ferror@plt+0x508e8>  // b.any
  453e70:	add	x0, x0, #0x2
  453e74:	mov	w9, #0x2                   	// #2
  453e78:	str	x0, [x8, #24]
  453e7c:	add	x0, x8, #0x18
  453e80:	bl	453b50 <ferror@plt+0x50580>
  453e84:	tbnz	w0, #31, 453ec0 <ferror@plt+0x508f0>
  453e88:	cmp	w9, #0x1
  453e8c:	ccmp	w0, #0x9, #0x4, gt
  453e90:	b.le	453eac <ferror@plt+0x508dc>
  453e94:	ldr	x0, [x8, #24]
  453e98:	ldrb	w1, [x0]
  453e9c:	cmp	w1, #0x5f
  453ea0:	b.ne	453ec0 <ferror@plt+0x508f0>  // b.any
  453ea4:	add	x0, x0, #0x1
  453ea8:	str	x0, [x8, #24]
  453eac:	mov	w0, #0x1                   	// #1
  453eb0:	ldp	x29, x30, [sp], #16
  453eb4:	ret
  453eb8:	mov	w9, #0x1                   	// #1
  453ebc:	b	453e7c <ferror@plt+0x508ac>
  453ec0:	mov	w0, #0x0                   	// #0
  453ec4:	b	453eb0 <ferror@plt+0x508e0>
  453ec8:	cbnz	x0, 453ed0 <ferror@plt+0x50900>
  453ecc:	ret
  453ed0:	ldr	w2, [x0]
  453ed4:	cmp	w2, #0x2f
  453ed8:	b.ne	453efc <ferror@plt+0x5092c>  // b.any
  453edc:	cmp	w1, #0x0
  453ee0:	b.le	453ef0 <ferror@plt+0x50920>
  453ee4:	sub	w1, w1, #0x1
  453ee8:	ldr	x0, [x0, #16]
  453eec:	b	453ec8 <ferror@plt+0x508f8>
  453ef0:	b.ne	453efc <ferror@plt+0x5092c>  // b.any
  453ef4:	ldr	x0, [x0, #8]
  453ef8:	b	453ecc <ferror@plt+0x508fc>
  453efc:	mov	x0, #0x0                   	// #0
  453f00:	b	453ecc <ferror@plt+0x508fc>
  453f04:	stp	x29, x30, [sp, #-32]!
  453f08:	mov	x29, sp
  453f0c:	stp	x19, x20, [sp, #16]
  453f10:	mov	x19, x0
  453f14:	ldr	w0, [x0, #24]
  453f18:	cbnz	w0, 453f5c <ferror@plt+0x5098c>
  453f1c:	ldr	x20, [x19, #16]
  453f20:	mov	x0, #0x2                   	// #2
  453f24:	cmp	x20, #0x0
  453f28:	csel	x20, x20, x0, ne  // ne = any
  453f2c:	cmp	x20, x1
  453f30:	b.cc	453f68 <ferror@plt+0x50998>  // b.lo, b.ul, b.last
  453f34:	ldr	x0, [x19]
  453f38:	mov	x1, x20
  453f3c:	bl	4030b0 <realloc@plt>
  453f40:	cbnz	x0, 453f70 <ferror@plt+0x509a0>
  453f44:	ldr	x0, [x19]
  453f48:	bl	4032a0 <free@plt>
  453f4c:	stp	xzr, xzr, [x19]
  453f50:	mov	w0, #0x1                   	// #1
  453f54:	str	xzr, [x19, #16]
  453f58:	str	w0, [x19, #24]
  453f5c:	ldp	x19, x20, [sp, #16]
  453f60:	ldp	x29, x30, [sp], #32
  453f64:	ret
  453f68:	lsl	x20, x20, #1
  453f6c:	b	453f2c <ferror@plt+0x5095c>
  453f70:	str	x0, [x19]
  453f74:	str	x20, [x19, #16]
  453f78:	b	453f5c <ferror@plt+0x5098c>
  453f7c:	stp	x29, x30, [sp, #-48]!
  453f80:	mov	x29, sp
  453f84:	str	x21, [sp, #32]
  453f88:	mov	x21, x0
  453f8c:	ldr	x0, [x2, #8]
  453f90:	stp	x19, x20, [sp, #16]
  453f94:	mov	x20, x1
  453f98:	add	x1, x1, #0x1
  453f9c:	mov	x19, x2
  453fa0:	add	x1, x1, x0
  453fa4:	ldr	x0, [x2, #16]
  453fa8:	cmp	x1, x0
  453fac:	b.ls	453fb8 <ferror@plt+0x509e8>  // b.plast
  453fb0:	mov	x0, x2
  453fb4:	bl	453f04 <ferror@plt+0x50934>
  453fb8:	ldr	w0, [x19, #24]
  453fbc:	cbnz	w0, 453fec <ferror@plt+0x50a1c>
  453fc0:	ldp	x3, x0, [x19]
  453fc4:	mov	x2, x20
  453fc8:	mov	x1, x21
  453fcc:	add	x0, x3, x0
  453fd0:	bl	402cd0 <memcpy@plt>
  453fd4:	ldp	x0, x1, [x19]
  453fd8:	add	x0, x0, x20
  453fdc:	strb	wzr, [x0, x1]
  453fe0:	ldr	x1, [x19, #8]
  453fe4:	add	x20, x1, x20
  453fe8:	str	x20, [x19, #8]
  453fec:	ldp	x19, x20, [sp, #16]
  453ff0:	ldr	x21, [sp, #32]
  453ff4:	ldp	x29, x30, [sp], #48
  453ff8:	ret
  453ffc:	mov	x2, x0
  454000:	ldr	x0, [x0, #288]
  454004:	cbnz	x0, 454014 <ferror@plt+0x50a44>
  454008:	mov	w1, #0x1                   	// #1
  45400c:	str	w1, [x2, #304]
  454010:	ret
  454014:	ldr	x1, [x1]
  454018:	ldr	x0, [x0, #8]
  45401c:	ldr	x0, [x0, #16]
  454020:	tbnz	w1, #31, 454010 <ferror@plt+0x50a40>
  454024:	b	453ec8 <ferror@plt+0x508f8>
  454028:	stp	x29, x30, [sp, #-64]!
  45402c:	mov	x29, sp
  454030:	str	x23, [sp, #48]
  454034:	mov	x23, #0x8001                	// #32769
  454038:	movk	x23, #0x410, lsl #16
  45403c:	stp	x19, x20, [sp, #16]
  454040:	movk	x23, #0xc600, lsl #32
  454044:	mov	x20, x0
  454048:	mov	x19, x1
  45404c:	stp	x21, x22, [sp, #32]
  454050:	adrp	x21, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  454054:	add	x21, x21, #0x690
  454058:	mov	x22, #0x1                   	// #1
  45405c:	movk	x23, #0x19, lsl #48
  454060:	cbz	x19, 4540e8 <ferror@plt+0x50b18>
  454064:	ldr	w1, [x19]
  454068:	cmp	w1, #0x8
  45406c:	b.ls	4540a8 <ferror@plt+0x50ad8>  // b.plast
  454070:	sub	w1, w1, #0x18
  454074:	cmp	w1, #0x34
  454078:	b.ls	454090 <ferror@plt+0x50ac0>  // b.plast
  45407c:	ldr	x1, [x19, #8]
  454080:	mov	x0, x20
  454084:	bl	454028 <ferror@plt+0x50a58>
  454088:	cbz	x0, 4540a0 <ferror@plt+0x50ad0>
  45408c:	b	4540d4 <ferror@plt+0x50b04>
  454090:	lsl	x1, x22, x1
  454094:	tst	x1, x23
  454098:	b.ne	4540e8 <ferror@plt+0x50b18>  // b.any
  45409c:	tbz	w1, #27, 45407c <ferror@plt+0x50aac>
  4540a0:	ldr	x19, [x19, #16]
  4540a4:	b	454060 <ferror@plt+0x50a90>
  4540a8:	ldrb	w0, [x21, w1, uxtw]
  4540ac:	adr	x1, 4540b8 <ferror@plt+0x50ae8>
  4540b0:	add	x0, x1, w0, sxtb #2
  4540b4:	br	x0
  4540b8:	add	x1, x19, #0x8
  4540bc:	mov	x0, x20
  4540c0:	bl	453ffc <ferror@plt+0x50a2c>
  4540c4:	cbz	x0, 4540e8 <ferror@plt+0x50b18>
  4540c8:	ldr	w1, [x0]
  4540cc:	cmp	w1, #0x2f
  4540d0:	b.ne	4540e8 <ferror@plt+0x50b18>  // b.any
  4540d4:	ldp	x19, x20, [sp, #16]
  4540d8:	ldp	x21, x22, [sp, #32]
  4540dc:	ldr	x23, [sp, #48]
  4540e0:	ldp	x29, x30, [sp], #64
  4540e4:	ret
  4540e8:	mov	x0, #0x0                   	// #0
  4540ec:	b	4540d4 <ferror@plt+0x50b04>
  4540f0:	stp	x29, x30, [sp, #-224]!
  4540f4:	mov	x29, sp
  4540f8:	stp	x19, x20, [sp, #16]
  4540fc:	mov	x19, x0
  454100:	stp	x21, x22, [sp, #32]
  454104:	stp	x23, x24, [sp, #48]
  454108:	str	x25, [sp, #64]
  45410c:	cbnz	x2, 454130 <ferror@plt+0x50b60>
  454110:	mov	w0, #0x1                   	// #1
  454114:	str	w0, [x19, #304]
  454118:	ldp	x19, x20, [sp, #16]
  45411c:	ldp	x21, x22, [sp, #32]
  454120:	ldp	x23, x24, [sp, #48]
  454124:	ldr	x25, [sp, #64]
  454128:	ldp	x29, x30, [sp], #224
  45412c:	ret
  454130:	ldr	w22, [x0, #304]
  454134:	cbnz	w22, 454118 <ferror@plt+0x50b48>
  454138:	ldr	w0, [x2]
  45413c:	mov	x20, x2
  454140:	cmp	w0, #0x50
  454144:	b.hi	4552f8 <ferror@plt+0x51d28>  // b.pmore
  454148:	mov	w21, w1
  45414c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  454150:	add	x1, x1, #0x69c
  454154:	ldrh	w1, [x1, w0, uxtw #1]
  454158:	adr	x2, 454164 <ferror@plt+0x50b94>
  45415c:	add	x1, x2, w1, sxth #2
  454160:	br	x1
  454164:	ldrsw	x2, [x20, #16]
  454168:	ldr	x20, [x20, #8]
  45416c:	tbnz	w21, #2, 454180 <ferror@plt+0x50bb0>
  454170:	mov	x1, x20
  454174:	mov	x0, x19
  454178:	bl	453a6c <ferror@plt+0x5049c>
  45417c:	b	454118 <ferror@plt+0x50b48>
  454180:	add	x21, x20, x2
  454184:	cmp	x21, x20
  454188:	b.ls	454118 <ferror@plt+0x50b48>  // b.plast
  45418c:	sub	x0, x21, x20
  454190:	ldrb	w3, [x20]
  454194:	cmp	x0, #0x3
  454198:	b.le	4541cc <ferror@plt+0x50bfc>
  45419c:	cmp	w3, #0x5f
  4541a0:	b.ne	4541cc <ferror@plt+0x50bfc>  // b.any
  4541a4:	ldrb	w0, [x20, #1]
  4541a8:	cmp	w0, #0x5f
  4541ac:	b.ne	4541cc <ferror@plt+0x50bfc>  // b.any
  4541b0:	ldrb	w0, [x20, #2]
  4541b4:	cmp	w0, #0x55
  4541b8:	b.ne	4541cc <ferror@plt+0x50bfc>  // b.any
  4541bc:	add	x22, x20, #0x3
  4541c0:	mov	x1, #0x0                   	// #0
  4541c4:	cmp	x21, x22
  4541c8:	b.hi	4541e0 <ferror@plt+0x50c10>  // b.pmore
  4541cc:	mov	w1, w3
  4541d0:	mov	x0, x19
  4541d4:	mov	x22, x20
  4541d8:	bl	453a28 <ferror@plt+0x50458>
  4541dc:	b	454248 <ferror@plt+0x50c78>
  4541e0:	ldrb	w2, [x22]
  4541e4:	sub	w0, w2, #0x30
  4541e8:	and	w4, w0, #0xff
  4541ec:	cmp	w4, #0x9
  4541f0:	b.ls	454208 <ferror@plt+0x50c38>  // b.plast
  4541f4:	sub	w0, w2, #0x41
  4541f8:	and	w0, w0, #0xff
  4541fc:	cmp	w0, #0x5
  454200:	b.hi	454218 <ferror@plt+0x50c48>  // b.pmore
  454204:	sub	w0, w2, #0x37
  454208:	sxtw	x0, w0
  45420c:	add	x22, x22, #0x1
  454210:	add	x1, x0, x1, lsl #4
  454214:	b	4541c4 <ferror@plt+0x50bf4>
  454218:	sub	w0, w2, #0x61
  45421c:	and	w0, w0, #0xff
  454220:	cmp	w0, #0x5
  454224:	b.hi	454230 <ferror@plt+0x50c60>  // b.pmore
  454228:	sub	w0, w2, #0x57
  45422c:	b	454208 <ferror@plt+0x50c38>
  454230:	cmp	w2, #0x5f
  454234:	b.ne	4541cc <ferror@plt+0x50bfc>  // b.any
  454238:	cmp	x1, #0xff
  45423c:	b.hi	4541cc <ferror@plt+0x50bfc>  // b.pmore
  454240:	mov	x0, x19
  454244:	bl	453a28 <ferror@plt+0x50458>
  454248:	add	x20, x22, #0x1
  45424c:	b	454184 <ferror@plt+0x50bb4>
  454250:	ldr	x2, [x20, #8]
  454254:	mov	w1, w21
  454258:	mov	x0, x19
  45425c:	bl	455900 <ferror@plt+0x52330>
  454260:	mov	x0, x19
  454264:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454268:	add	x1, x1, #0x4d0
  45426c:	bl	453ae0 <ferror@plt+0x50510>
  454270:	ldr	x2, [x20, #16]
  454274:	mov	w1, w21
  454278:	mov	x0, x19
  45427c:	bl	455900 <ferror@plt+0x52330>
  454280:	mov	x0, x19
  454284:	mov	w1, #0x5d                  	// #93
  454288:	bl	453a28 <ferror@plt+0x50458>
  45428c:	b	454118 <ferror@plt+0x50b48>
  454290:	ldr	x2, [x20, #8]
  454294:	mov	w1, w21
  454298:	mov	x0, x19
  45429c:	bl	455900 <ferror@plt+0x52330>
  4542a0:	tbnz	w21, #2, 45430c <ferror@plt+0x50d3c>
  4542a4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4542a8:	mov	x0, x19
  4542ac:	add	x1, x1, #0x4e5
  4542b0:	bl	453ae0 <ferror@plt+0x50510>
  4542b4:	ldr	x20, [x20, #16]
  4542b8:	ldr	w0, [x20]
  4542bc:	cmp	w0, #0x47
  4542c0:	b.ne	4542f8 <ferror@plt+0x50d28>  // b.any
  4542c4:	mov	x0, x19
  4542c8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4542cc:	add	x1, x1, #0x4d6
  4542d0:	bl	453ae0 <ferror@plt+0x50510>
  4542d4:	ldr	w1, [x20, #16]
  4542d8:	mov	x0, x19
  4542dc:	add	w1, w1, #0x1
  4542e0:	bl	453b14 <ferror@plt+0x50544>
  4542e4:	mov	x0, x19
  4542e8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4542ec:	add	x1, x1, #0x4e4
  4542f0:	bl	453ae0 <ferror@plt+0x50510>
  4542f4:	ldr	x20, [x20, #8]
  4542f8:	mov	x2, x20
  4542fc:	mov	w1, w21
  454300:	mov	x0, x19
  454304:	bl	455900 <ferror@plt+0x52330>
  454308:	b	454118 <ferror@plt+0x50b48>
  45430c:	mov	x0, x19
  454310:	mov	w1, #0x2e                  	// #46
  454314:	bl	453a28 <ferror@plt+0x50458>
  454318:	b	4542b4 <ferror@plt+0x50ce4>
  45431c:	add	x3, sp, #0x60
  454320:	mov	w23, #0x0                   	// #0
  454324:	mov	x2, x3
  454328:	ldr	x22, [x20, #8]
  45432c:	ldr	x24, [x19, #296]
  454330:	str	xzr, [x19, #296]
  454334:	cbz	x22, 454340 <ferror@plt+0x50d70>
  454338:	cmp	w23, #0x4
  45433c:	b.ne	45434c <ferror@plt+0x50d7c>  // b.any
  454340:	mov	w0, #0x1                   	// #1
  454344:	str	w0, [x19, #304]
  454348:	b	454118 <ferror@plt+0x50b48>
  45434c:	str	wzr, [x3, #16]
  454350:	add	w23, w23, #0x1
  454354:	ldp	x4, x0, [x19, #288]
  454358:	stp	x0, x22, [x3]
  45435c:	ldr	w5, [x22]
  454360:	str	x4, [x3, #24]
  454364:	str	x3, [x19, #296]
  454368:	mov	w0, w5
  45436c:	bl	4537a8 <ferror@plt+0x501d8>
  454370:	add	x3, x3, #0x20
  454374:	cbz	w0, 455850 <ferror@plt+0x52280>
  454378:	ldr	x22, [x22, #8]
  45437c:	b	454334 <ferror@plt+0x50d64>
  454380:	cmp	w23, #0x4
  454384:	b.eq	454340 <ferror@plt+0x50d70>  // b.none
  454388:	ldp	x0, x1, [x2, #-32]
  45438c:	stur	x22, [x2, #-24]
  454390:	stp	x0, x1, [x2]
  454394:	sub	x3, x2, #0x20
  454398:	add	w23, w23, #0x1
  45439c:	ldp	x0, x1, [x2, #-16]
  4543a0:	stur	wzr, [x2, #-16]
  4543a4:	stp	x4, x3, [x2, #-8]
  4543a8:	stp	x0, x1, [x2, #16]
  4543ac:	ldr	x22, [x22, #8]
  4543b0:	str	x2, [x19, #296]
  4543b4:	add	x2, x2, #0x20
  4543b8:	b	455878 <ferror@plt+0x522a8>
  4543bc:	ldr	x22, [x20, #8]
  4543c0:	ldr	x24, [x19, #296]
  4543c4:	str	xzr, [x19, #296]
  4543c8:	ldr	x23, [x19, #368]
  4543cc:	str	x20, [x19, #368]
  4543d0:	tbz	w21, #2, 45442c <ferror@plt+0x50e5c>
  4543d4:	ldr	w0, [x22]
  4543d8:	cbnz	w0, 45442c <ferror@plt+0x50e5c>
  4543dc:	ldr	w0, [x22, #16]
  4543e0:	cmp	w0, #0x6
  4543e4:	b.ne	45442c <ferror@plt+0x50e5c>  // b.any
  4543e8:	ldr	x0, [x22, #8]
  4543ec:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4543f0:	mov	x2, #0x6                   	// #6
  4543f4:	add	x1, x1, #0x4e8
  4543f8:	bl	402f80 <strncmp@plt>
  4543fc:	cbnz	w0, 45442c <ferror@plt+0x50e5c>
  454400:	ldr	x2, [x20, #16]
  454404:	mov	w1, w21
  454408:	mov	x0, x19
  45440c:	bl	455900 <ferror@plt+0x52330>
  454410:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  454414:	mov	x0, x19
  454418:	add	x1, x1, #0x7d7
  45441c:	bl	453ae0 <ferror@plt+0x50510>
  454420:	str	x24, [x19, #296]
  454424:	str	x23, [x19, #368]
  454428:	b	454118 <ferror@plt+0x50b48>
  45442c:	mov	x0, x19
  454430:	mov	x2, x22
  454434:	mov	w1, w21
  454438:	bl	455900 <ferror@plt+0x52330>
  45443c:	ldrb	w0, [x19, #264]
  454440:	cmp	w0, #0x3c
  454444:	b.ne	454454 <ferror@plt+0x50e84>  // b.any
  454448:	mov	x0, x19
  45444c:	mov	w1, #0x20                  	// #32
  454450:	bl	453a28 <ferror@plt+0x50458>
  454454:	mov	x0, x19
  454458:	mov	w1, #0x3c                  	// #60
  45445c:	bl	453a28 <ferror@plt+0x50458>
  454460:	ldr	x2, [x20, #16]
  454464:	mov	x0, x19
  454468:	mov	w1, w21
  45446c:	bl	455900 <ferror@plt+0x52330>
  454470:	ldrb	w0, [x19, #264]
  454474:	cmp	w0, #0x3e
  454478:	b.ne	454488 <ferror@plt+0x50eb8>  // b.any
  45447c:	mov	x0, x19
  454480:	mov	w1, #0x20                  	// #32
  454484:	bl	453a28 <ferror@plt+0x50458>
  454488:	mov	x0, x19
  45448c:	mov	w1, #0x3e                  	// #62
  454490:	bl	453a28 <ferror@plt+0x50458>
  454494:	b	454420 <ferror@plt+0x50e50>
  454498:	ldr	w0, [x19, #312]
  45449c:	cbz	w0, 4544c8 <ferror@plt+0x50ef8>
  4544a0:	mov	x0, x19
  4544a4:	mov	x2, #0x5                   	// #5
  4544a8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4544ac:	add	x1, x1, #0x4ef
  4544b0:	bl	453a6c <ferror@plt+0x5049c>
  4544b4:	ldr	x1, [x20, #8]
  4544b8:	mov	x0, x19
  4544bc:	add	w1, w1, #0x1
  4544c0:	bl	453b14 <ferror@plt+0x50544>
  4544c4:	b	454118 <ferror@plt+0x50b48>
  4544c8:	add	x1, x20, #0x8
  4544cc:	mov	x0, x19
  4544d0:	bl	453ffc <ferror@plt+0x50a2c>
  4544d4:	mov	x2, x0
  4544d8:	cbz	x0, 454110 <ferror@plt+0x50b40>
  4544dc:	ldr	w1, [x0]
  4544e0:	cmp	w1, #0x2f
  4544e4:	b.ne	4544fc <ferror@plt+0x50f2c>  // b.any
  4544e8:	ldr	w1, [x19, #316]
  4544ec:	tbnz	w1, #31, 4544fc <ferror@plt+0x50f2c>
  4544f0:	bl	453ec8 <ferror@plt+0x508f8>
  4544f4:	mov	x2, x0
  4544f8:	cbz	x0, 454110 <ferror@plt+0x50b40>
  4544fc:	ldr	x20, [x19, #288]
  454500:	mov	w1, w21
  454504:	ldr	x0, [x20]
  454508:	str	x0, [x19, #288]
  45450c:	mov	x0, x19
  454510:	bl	455900 <ferror@plt+0x52330>
  454514:	str	x20, [x19, #288]
  454518:	b	454118 <ferror@plt+0x50b48>
  45451c:	mov	x0, x19
  454520:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454524:	add	x1, x1, #0x4f5
  454528:	bl	453ae0 <ferror@plt+0x50510>
  45452c:	ldr	x2, [x20, #8]
  454530:	mov	w1, w21
  454534:	mov	x0, x19
  454538:	bl	455900 <ferror@plt+0x52330>
  45453c:	b	454118 <ferror@plt+0x50b48>
  454540:	ldr	x2, [x20, #16]
  454544:	mov	w1, w21
  454548:	mov	x0, x19
  45454c:	bl	455900 <ferror@plt+0x52330>
  454550:	b	454118 <ferror@plt+0x50b48>
  454554:	mov	x0, x19
  454558:	mov	w1, #0x7e                  	// #126
  45455c:	bl	453a28 <ferror@plt+0x50458>
  454560:	ldr	x2, [x20, #16]
  454564:	mov	w1, w21
  454568:	mov	x0, x19
  45456c:	bl	455900 <ferror@plt+0x52330>
  454570:	b	454118 <ferror@plt+0x50b48>
  454574:	mov	x0, x19
  454578:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45457c:	add	x1, x1, #0x52a
  454580:	bl	453ae0 <ferror@plt+0x50510>
  454584:	ldr	x2, [x20, #8]
  454588:	mov	w1, w21
  45458c:	mov	x0, x19
  454590:	bl	455900 <ferror@plt+0x52330>
  454594:	b	454118 <ferror@plt+0x50b48>
  454598:	mov	x0, x19
  45459c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4545a0:	add	x1, x1, #0x514
  4545a4:	bl	453ae0 <ferror@plt+0x50510>
  4545a8:	ldr	x2, [x20, #8]
  4545ac:	mov	w1, w21
  4545b0:	mov	x0, x19
  4545b4:	bl	455900 <ferror@plt+0x52330>
  4545b8:	b	454118 <ferror@plt+0x50b48>
  4545bc:	mov	x0, x19
  4545c0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4545c4:	add	x1, x1, #0x51d
  4545c8:	bl	453ae0 <ferror@plt+0x50510>
  4545cc:	ldr	x2, [x20, #8]
  4545d0:	mov	w1, w21
  4545d4:	mov	x0, x19
  4545d8:	bl	455900 <ferror@plt+0x52330>
  4545dc:	mov	x0, x19
  4545e0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4545e4:	add	x1, x1, #0x536
  4545e8:	bl	453ae0 <ferror@plt+0x50510>
  4545ec:	ldr	x2, [x20, #16]
  4545f0:	mov	w1, w21
  4545f4:	mov	x0, x19
  4545f8:	bl	455900 <ferror@plt+0x52330>
  4545fc:	b	454118 <ferror@plt+0x50b48>
  454600:	mov	x0, x19
  454604:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454608:	add	x1, x1, #0x53b
  45460c:	bl	453ae0 <ferror@plt+0x50510>
  454610:	ldr	x2, [x20, #8]
  454614:	mov	w1, w21
  454618:	mov	x0, x19
  45461c:	bl	455900 <ferror@plt+0x52330>
  454620:	b	454118 <ferror@plt+0x50b48>
  454624:	mov	x0, x19
  454628:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45462c:	add	x1, x1, #0x549
  454630:	bl	453ae0 <ferror@plt+0x50510>
  454634:	ldr	x2, [x20, #8]
  454638:	mov	w1, w21
  45463c:	mov	x0, x19
  454640:	bl	455900 <ferror@plt+0x52330>
  454644:	b	454118 <ferror@plt+0x50b48>
  454648:	mov	x0, x19
  45464c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454650:	add	x1, x1, #0x55c
  454654:	bl	453ae0 <ferror@plt+0x50510>
  454658:	ldr	x2, [x20, #8]
  45465c:	mov	w1, w21
  454660:	mov	x0, x19
  454664:	bl	455900 <ferror@plt+0x52330>
  454668:	b	454118 <ferror@plt+0x50b48>
  45466c:	mov	x0, x19
  454670:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454674:	add	x1, x1, #0x56d
  454678:	bl	453ae0 <ferror@plt+0x50510>
  45467c:	ldr	x2, [x20, #8]
  454680:	mov	w1, w21
  454684:	mov	x0, x19
  454688:	bl	455900 <ferror@plt+0x52330>
  45468c:	b	454118 <ferror@plt+0x50b48>
  454690:	mov	x0, x19
  454694:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454698:	add	x1, x1, #0x571
  45469c:	bl	453ae0 <ferror@plt+0x50510>
  4546a0:	ldr	x2, [x20, #8]
  4546a4:	mov	w1, w21
  4546a8:	mov	x0, x19
  4546ac:	bl	455900 <ferror@plt+0x52330>
  4546b0:	b	454118 <ferror@plt+0x50b48>
  4546b4:	mov	x0, x19
  4546b8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4546bc:	add	x1, x1, #0x583
  4546c0:	bl	453ae0 <ferror@plt+0x50510>
  4546c4:	ldr	x2, [x20, #8]
  4546c8:	mov	w1, w21
  4546cc:	mov	x0, x19
  4546d0:	bl	455900 <ferror@plt+0x52330>
  4546d4:	b	454118 <ferror@plt+0x50b48>
  4546d8:	mov	x0, x19
  4546dc:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4546e0:	add	x1, x1, #0x59e
  4546e4:	bl	453ae0 <ferror@plt+0x50510>
  4546e8:	ldr	x2, [x20, #8]
  4546ec:	mov	w1, w21
  4546f0:	mov	x0, x19
  4546f4:	bl	455900 <ferror@plt+0x52330>
  4546f8:	b	454118 <ferror@plt+0x50b48>
  4546fc:	mov	x0, x19
  454700:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454704:	add	x1, x1, #0x5ae
  454708:	bl	453ae0 <ferror@plt+0x50510>
  45470c:	ldr	x2, [x20, #8]
  454710:	mov	w1, w21
  454714:	mov	x0, x19
  454718:	bl	455900 <ferror@plt+0x52330>
  45471c:	b	454118 <ferror@plt+0x50b48>
  454720:	mov	x0, x19
  454724:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454728:	add	x1, x1, #0x5c2
  45472c:	bl	453ae0 <ferror@plt+0x50510>
  454730:	ldr	x2, [x20, #8]
  454734:	mov	w1, w21
  454738:	mov	x0, x19
  45473c:	bl	455900 <ferror@plt+0x52330>
  454740:	b	454118 <ferror@plt+0x50b48>
  454744:	mov	x0, x19
  454748:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45474c:	add	x1, x1, #0x5d9
  454750:	bl	453ae0 <ferror@plt+0x50510>
  454754:	ldr	x2, [x20, #8]
  454758:	mov	w1, w21
  45475c:	mov	x0, x19
  454760:	bl	455900 <ferror@plt+0x52330>
  454764:	b	454118 <ferror@plt+0x50b48>
  454768:	mov	x0, x19
  45476c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454770:	add	x1, x1, #0x5f3
  454774:	bl	453ae0 <ferror@plt+0x50510>
  454778:	ldr	x2, [x20, #16]
  45477c:	mov	w1, w21
  454780:	mov	x0, x19
  454784:	bl	455900 <ferror@plt+0x52330>
  454788:	mov	x0, x19
  45478c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454790:	add	x1, x1, #0x517
  454794:	bl	453ae0 <ferror@plt+0x50510>
  454798:	ldr	x2, [x20, #8]
  45479c:	mov	w1, w21
  4547a0:	mov	x0, x19
  4547a4:	bl	455900 <ferror@plt+0x52330>
  4547a8:	b	454118 <ferror@plt+0x50b48>
  4547ac:	mov	x0, x19
  4547b0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4547b4:	add	x1, x1, #0x609
  4547b8:	bl	453ae0 <ferror@plt+0x50510>
  4547bc:	ldr	x2, [x20, #8]
  4547c0:	mov	w1, w21
  4547c4:	mov	x0, x19
  4547c8:	bl	455900 <ferror@plt+0x52330>
  4547cc:	b	454118 <ferror@plt+0x50b48>
  4547d0:	mov	x0, x19
  4547d4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4547d8:	add	x1, x1, #0x61f
  4547dc:	bl	453ae0 <ferror@plt+0x50510>
  4547e0:	ldr	x2, [x20, #8]
  4547e4:	mov	w1, w21
  4547e8:	mov	x0, x19
  4547ec:	bl	455900 <ferror@plt+0x52330>
  4547f0:	b	454118 <ferror@plt+0x50b48>
  4547f4:	mov	x0, x19
  4547f8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4547fc:	add	x1, x1, #0x61b
  454800:	bl	453ae0 <ferror@plt+0x50510>
  454804:	ldr	x2, [x20, #8]
  454808:	mov	w1, w21
  45480c:	mov	x0, x19
  454810:	bl	455900 <ferror@plt+0x52330>
  454814:	b	454118 <ferror@plt+0x50b48>
  454818:	ldrsw	x2, [x20, #16]
  45481c:	mov	x0, x19
  454820:	ldr	x1, [x20, #8]
  454824:	bl	453a6c <ferror@plt+0x5049c>
  454828:	b	454118 <ferror@plt+0x50b48>
  45482c:	ldr	x2, [x19, #296]
  454830:	cbnz	x2, 454894 <ferror@plt+0x512c4>
  454834:	mov	w22, #0x0                   	// #0
  454838:	ldr	x0, [x19, #296]
  45483c:	stp	x0, x20, [sp, #96]
  454840:	add	x0, sp, #0x60
  454844:	str	x0, [x19, #296]
  454848:	ldr	x0, [x19, #288]
  45484c:	str	wzr, [sp, #112]
  454850:	str	x0, [sp, #120]
  454854:	cbnz	x2, 45485c <ferror@plt+0x5128c>
  454858:	ldr	x2, [x20, #8]
  45485c:	mov	x0, x19
  454860:	mov	w1, w21
  454864:	bl	455900 <ferror@plt+0x52330>
  454868:	ldr	w0, [sp, #112]
  45486c:	cbnz	w0, 454880 <ferror@plt+0x512b0>
  454870:	mov	x2, x20
  454874:	mov	w1, w21
  454878:	mov	x0, x19
  45487c:	bl	45598c <ferror@plt+0x523bc>
  454880:	ldr	x0, [sp, #96]
  454884:	str	x0, [x19, #296]
  454888:	cbz	w22, 454118 <ferror@plt+0x50b48>
  45488c:	str	x23, [x19, #288]
  454890:	b	454118 <ferror@plt+0x50b48>
  454894:	ldr	w22, [x2, #16]
  454898:	cbnz	w22, 4548cc <ferror@plt+0x512fc>
  45489c:	ldr	x1, [x2, #8]
  4548a0:	ldr	w1, [x1]
  4548a4:	sub	w3, w1, #0x19
  4548a8:	cmp	w3, #0x2
  4548ac:	b.hi	454a44 <ferror@plt+0x51474>  // b.pmore
  4548b0:	cmp	w0, w1
  4548b4:	b.ne	4548cc <ferror@plt+0x512fc>  // b.any
  4548b8:	ldr	x2, [x20, #8]
  4548bc:	mov	w1, w21
  4548c0:	mov	x0, x19
  4548c4:	bl	455900 <ferror@plt+0x52330>
  4548c8:	b	454118 <ferror@plt+0x50b48>
  4548cc:	ldr	x2, [x2]
  4548d0:	b	454830 <ferror@plt+0x51260>
  4548d4:	ldr	w22, [x19, #312]
  4548d8:	ldr	x2, [x20, #8]
  4548dc:	cbnz	w22, 454a14 <ferror@plt+0x51444>
  4548e0:	ldr	w0, [x2]
  4548e4:	cmp	w0, #0x5
  4548e8:	b.ne	454a18 <ferror@plt+0x51448>  // b.any
  4548ec:	ldr	w0, [x19, #344]
  4548f0:	mov	x1, #0x0                   	// #0
  4548f4:	cmp	w0, w1
  4548f8:	b.gt	454914 <ferror@plt+0x51344>
  4548fc:	ldr	w1, [x19, #348]
  454900:	cmp	w0, w1
  454904:	b.lt	45493c <ferror@plt+0x5136c>  // b.tstop
  454908:	mov	w0, #0x1                   	// #1
  45490c:	str	w0, [x19, #304]
  454910:	b	454118 <ferror@plt+0x50b48>
  454914:	ldr	x4, [x19, #336]
  454918:	lsl	x3, x1, #4
  45491c:	ldr	x3, [x4, x3]
  454920:	add	x5, x4, x1, lsl #4
  454924:	add	x1, x1, #0x1
  454928:	cmp	x2, x3
  45492c:	b.ne	4548f4 <ferror@plt+0x51324>  // b.any
  454930:	ldr	x1, [x19, #328]
  454934:	mov	x0, x1
  454938:	b	4549fc <ferror@plt+0x5142c>
  45493c:	ldr	x3, [x19, #336]
  454940:	sbfiz	x4, x0, #4, #32
  454944:	add	x1, x3, w0, sxtw #4
  454948:	add	w0, w0, #0x1
  45494c:	str	w0, [x19, #344]
  454950:	add	x0, x1, #0x8
  454954:	str	x2, [x3, x4]
  454958:	ldr	x4, [x19, #288]
  45495c:	cbnz	x4, 4549a4 <ferror@plt+0x513d4>
  454960:	str	xzr, [x0]
  454964:	add	x1, x2, #0x8
  454968:	mov	x0, x19
  45496c:	bl	453ffc <ferror@plt+0x50a2c>
  454970:	mov	x2, x0
  454974:	cbz	x0, 454998 <ferror@plt+0x513c8>
  454978:	ldr	w1, [x0]
  45497c:	cmp	w1, #0x2f
  454980:	b.ne	454a18 <ferror@plt+0x51448>  // b.any
  454984:	ldr	w1, [x19, #316]
  454988:	tbnz	w1, #31, 454a18 <ferror@plt+0x51448>
  45498c:	bl	453ec8 <ferror@plt+0x508f8>
  454990:	mov	x2, x0
  454994:	cbnz	x0, 454a18 <ferror@plt+0x51448>
  454998:	cbz	w22, 454110 <ferror@plt+0x50b40>
  45499c:	str	x23, [x19, #288]
  4549a0:	b	454110 <ferror@plt+0x50b40>
  4549a4:	ldr	w3, [x19, #360]
  4549a8:	ldr	w1, [x19, #364]
  4549ac:	cmp	w3, w1
  4549b0:	b.ge	454908 <ferror@plt+0x51338>  // b.tcont
  4549b4:	ldr	x1, [x19, #352]
  4549b8:	add	x1, x1, w3, sxtw #4
  4549bc:	add	w3, w3, #0x1
  4549c0:	str	w3, [x19, #360]
  4549c4:	ldr	x3, [x4, #8]
  4549c8:	str	x3, [x1, #8]
  4549cc:	str	x1, [x0]
  4549d0:	mov	x0, x1
  4549d4:	ldr	x4, [x4]
  4549d8:	b	45495c <ferror@plt+0x5138c>
  4549dc:	ldr	x3, [x0]
  4549e0:	cmp	x3, x2
  4549e4:	b.eq	454964 <ferror@plt+0x51394>  // b.none
  4549e8:	cmp	x3, x20
  4549ec:	b.ne	4549f8 <ferror@plt+0x51428>  // b.any
  4549f0:	cmp	x0, x1
  4549f4:	b.ne	454964 <ferror@plt+0x51394>  // b.any
  4549f8:	ldr	x0, [x0, #8]
  4549fc:	cbnz	x0, 4549dc <ferror@plt+0x5140c>
  454a00:	ldr	x0, [x5, #8]
  454a04:	mov	w22, #0x1                   	// #1
  454a08:	ldr	x23, [x19, #288]
  454a0c:	str	x0, [x19, #288]
  454a10:	b	454964 <ferror@plt+0x51394>
  454a14:	mov	w22, #0x0                   	// #0
  454a18:	ldr	w0, [x2]
  454a1c:	cmp	w0, #0x23
  454a20:	b.eq	454a4c <ferror@plt+0x5147c>  // b.none
  454a24:	ldr	w1, [x20]
  454a28:	cmp	w0, w1
  454a2c:	b.eq	454a4c <ferror@plt+0x5147c>  // b.none
  454a30:	cmp	w0, #0x24
  454a34:	b.ne	454a44 <ferror@plt+0x51474>  // b.any
  454a38:	ldr	x2, [x2, #8]
  454a3c:	b	454838 <ferror@plt+0x51268>
  454a40:	mov	w22, #0x0                   	// #0
  454a44:	mov	x2, #0x0                   	// #0
  454a48:	b	454838 <ferror@plt+0x51268>
  454a4c:	mov	x20, x2
  454a50:	b	454a44 <ferror@plt+0x51474>
  454a54:	ldr	x0, [x20, #8]
  454a58:	tbnz	w21, #2, 454a70 <ferror@plt+0x514a0>
  454a5c:	ldrsw	x2, [x0, #8]
  454a60:	ldr	x1, [x0]
  454a64:	mov	x0, x19
  454a68:	bl	453a6c <ferror@plt+0x5049c>
  454a6c:	b	454118 <ferror@plt+0x50b48>
  454a70:	ldrsw	x2, [x0, #24]
  454a74:	ldr	x1, [x0, #16]
  454a78:	mov	x0, x19
  454a7c:	bl	453a6c <ferror@plt+0x5049c>
  454a80:	b	454118 <ferror@plt+0x50b48>
  454a84:	ldr	x2, [x20, #8]
  454a88:	mov	w1, w21
  454a8c:	mov	x0, x19
  454a90:	bl	455900 <ferror@plt+0x52330>
  454a94:	b	454118 <ferror@plt+0x50b48>
  454a98:	and	w22, w21, #0x20
  454a9c:	tbz	w21, #5, 454ab4 <ferror@plt+0x514e4>
  454aa0:	ldr	x3, [x19, #296]
  454aa4:	add	x2, x20, #0x10
  454aa8:	and	w1, w21, #0xffffff9f
  454aac:	mov	x0, x19
  454ab0:	bl	455b54 <ferror@plt+0x52584>
  454ab4:	ldr	x2, [x20, #8]
  454ab8:	cbz	x2, 454b2c <ferror@plt+0x5155c>
  454abc:	and	w1, w21, #0xffffff9f
  454ac0:	cbz	w22, 454ad0 <ferror@plt+0x51500>
  454ac4:	mov	x0, x19
  454ac8:	bl	455900 <ferror@plt+0x52330>
  454acc:	b	454118 <ferror@plt+0x50b48>
  454ad0:	tbnz	w21, #6, 454b14 <ferror@plt+0x51544>
  454ad4:	ldr	x0, [x19, #296]
  454ad8:	stp	x0, x20, [sp, #96]
  454adc:	add	x0, sp, #0x60
  454ae0:	str	x0, [x19, #296]
  454ae4:	ldr	x0, [x19, #288]
  454ae8:	str	wzr, [sp, #112]
  454aec:	str	x0, [sp, #120]
  454af0:	mov	x0, x19
  454af4:	bl	455900 <ferror@plt+0x52330>
  454af8:	ldr	x0, [sp, #96]
  454afc:	str	x0, [x19, #296]
  454b00:	ldr	w0, [sp, #112]
  454b04:	cbnz	w0, 454118 <ferror@plt+0x50b48>
  454b08:	mov	x0, x19
  454b0c:	mov	w1, #0x20                  	// #32
  454b10:	bl	453a28 <ferror@plt+0x50458>
  454b14:	ldr	x3, [x19, #296]
  454b18:	add	x2, x20, #0x10
  454b1c:	and	w1, w21, #0xffffff9f
  454b20:	mov	x0, x19
  454b24:	bl	455b54 <ferror@plt+0x52584>
  454b28:	b	454118 <ferror@plt+0x50b48>
  454b2c:	cbnz	w22, 454118 <ferror@plt+0x50b48>
  454b30:	b	454b14 <ferror@plt+0x51544>
  454b34:	ldp	x0, x23, [x19, #288]
  454b38:	mov	w22, #0x1                   	// #1
  454b3c:	mov	w6, w22
  454b40:	str	x0, [sp, #120]
  454b44:	add	x4, sp, #0x60
  454b48:	stp	x23, x20, [sp, #96]
  454b4c:	str	wzr, [sp, #112]
  454b50:	mov	x0, x23
  454b54:	str	x4, [x19, #296]
  454b58:	cbz	x0, 454b70 <ferror@plt+0x515a0>
  454b5c:	ldr	x1, [x0, #8]
  454b60:	ldr	w1, [x1]
  454b64:	sub	w1, w1, #0x19
  454b68:	cmp	w1, #0x2
  454b6c:	b.ls	454bb0 <ferror@plt+0x515e0>  // b.plast
  454b70:	ldr	x2, [x20, #16]
  454b74:	mov	x0, x19
  454b78:	mov	w1, w21
  454b7c:	bl	455900 <ferror@plt+0x52330>
  454b80:	str	x23, [x19, #296]
  454b84:	ldr	w0, [sp, #112]
  454b88:	cbnz	w0, 454118 <ferror@plt+0x50b48>
  454b8c:	add	x23, sp, #0x68
  454b90:	cmp	w22, #0x1
  454b94:	b.ne	454c00 <ferror@plt+0x51630>  // b.any
  454b98:	ldr	x3, [x19, #296]
  454b9c:	add	x2, x20, #0x8
  454ba0:	mov	w1, w21
  454ba4:	mov	x0, x19
  454ba8:	bl	455e08 <ferror@plt+0x52838>
  454bac:	b	454118 <ferror@plt+0x50b48>
  454bb0:	ldr	w1, [x0, #16]
  454bb4:	cbnz	w1, 454bf8 <ferror@plt+0x51628>
  454bb8:	cmp	w22, #0x3
  454bbc:	b.ls	454bcc <ferror@plt+0x515fc>  // b.plast
  454bc0:	mov	w0, #0x1                   	// #1
  454bc4:	str	w0, [x19, #304]
  454bc8:	b	454118 <ferror@plt+0x50b48>
  454bcc:	ubfiz	x5, x22, #5, #32
  454bd0:	add	w22, w22, #0x1
  454bd4:	add	x1, x4, x5
  454bd8:	ldp	x2, x3, [x0]
  454bdc:	stp	x2, x3, [x1]
  454be0:	ldp	x2, x3, [x0, #16]
  454be4:	stp	x2, x3, [x1, #16]
  454be8:	ldr	x2, [x19, #296]
  454bec:	str	x2, [x4, x5]
  454bf0:	str	x1, [x19, #296]
  454bf4:	str	w6, [x0, #16]
  454bf8:	ldr	x0, [x0]
  454bfc:	b	454b58 <ferror@plt+0x51588>
  454c00:	sub	w22, w22, #0x1
  454c04:	mov	w1, w21
  454c08:	ubfiz	x0, x22, #5, #32
  454c0c:	ldr	x2, [x23, x0]
  454c10:	mov	x0, x19
  454c14:	bl	45598c <ferror@plt+0x523bc>
  454c18:	b	454b90 <ferror@plt+0x515c0>
  454c1c:	ldr	x2, [x20, #16]
  454c20:	mov	w1, w21
  454c24:	ldr	x0, [x19, #296]
  454c28:	stp	x0, x20, [sp, #96]
  454c2c:	add	x0, sp, #0x60
  454c30:	str	x0, [x19, #296]
  454c34:	ldr	x0, [x19, #288]
  454c38:	str	wzr, [sp, #112]
  454c3c:	str	x0, [sp, #120]
  454c40:	mov	x0, x19
  454c44:	bl	455900 <ferror@plt+0x52330>
  454c48:	ldr	w0, [sp, #112]
  454c4c:	cbnz	w0, 454c60 <ferror@plt+0x51690>
  454c50:	mov	x2, x20
  454c54:	mov	w1, w21
  454c58:	mov	x0, x19
  454c5c:	bl	45598c <ferror@plt+0x523bc>
  454c60:	ldr	x0, [sp, #96]
  454c64:	str	x0, [x19, #296]
  454c68:	b	454118 <ferror@plt+0x50b48>
  454c6c:	ldrsh	w0, [x20, #18]
  454c70:	cbz	w0, 454c84 <ferror@plt+0x516b4>
  454c74:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454c78:	mov	x0, x19
  454c7c:	add	x1, x1, #0x636
  454c80:	bl	453ae0 <ferror@plt+0x50510>
  454c84:	ldr	x2, [x20, #8]
  454c88:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  454c8c:	add	x0, x0, #0x8a8
  454c90:	add	x0, x0, #0x100
  454c94:	ldr	x1, [x2, #8]
  454c98:	cmp	x1, x0
  454c9c:	b.eq	454cb8 <ferror@plt+0x516e8>  // b.none
  454ca0:	mov	w1, w21
  454ca4:	mov	x0, x19
  454ca8:	bl	455900 <ferror@plt+0x52330>
  454cac:	mov	x0, x19
  454cb0:	mov	w1, #0x20                  	// #32
  454cb4:	bl	453a28 <ferror@plt+0x50458>
  454cb8:	ldrsh	w0, [x20, #16]
  454cbc:	cbz	w0, 454cd4 <ferror@plt+0x51704>
  454cc0:	mov	x0, x19
  454cc4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454cc8:	add	x1, x1, #0x63c
  454ccc:	bl	453ae0 <ferror@plt+0x50510>
  454cd0:	b	454118 <ferror@plt+0x50b48>
  454cd4:	mov	x0, x19
  454cd8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454cdc:	add	x1, x1, #0x643
  454ce0:	bl	453ae0 <ferror@plt+0x50510>
  454ce4:	b	454118 <ferror@plt+0x50b48>
  454ce8:	ldr	x2, [x20, #8]
  454cec:	cbz	x2, 454cfc <ferror@plt+0x5172c>
  454cf0:	mov	w1, w21
  454cf4:	mov	x0, x19
  454cf8:	bl	455900 <ferror@plt+0x52330>
  454cfc:	ldr	x0, [x20, #16]
  454d00:	cbz	x0, 454118 <ferror@plt+0x50b48>
  454d04:	ldr	x0, [x19, #256]
  454d08:	cmp	x0, #0xfd
  454d0c:	b.ls	454d18 <ferror@plt+0x51748>  // b.plast
  454d10:	mov	x0, x19
  454d14:	bl	4539ec <ferror@plt+0x5041c>
  454d18:	mov	x0, x19
  454d1c:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  454d20:	add	x1, x1, #0x674
  454d24:	bl	453ae0 <ferror@plt+0x50510>
  454d28:	ldr	x2, [x20, #16]
  454d2c:	mov	x0, x19
  454d30:	mov	w1, w21
  454d34:	ldr	x22, [x19, #256]
  454d38:	ldr	x23, [x19, #320]
  454d3c:	bl	455900 <ferror@plt+0x52330>
  454d40:	ldr	x0, [x19, #320]
  454d44:	cmp	x0, x23
  454d48:	b.ne	454118 <ferror@plt+0x50b48>  // b.any
  454d4c:	ldr	x0, [x19, #256]
  454d50:	cmp	x0, x22
  454d54:	b.ne	454118 <ferror@plt+0x50b48>  // b.any
  454d58:	sub	x0, x0, #0x2
  454d5c:	str	x0, [x19, #256]
  454d60:	b	454118 <ferror@plt+0x50b48>
  454d64:	ldp	x2, x20, [x20, #8]
  454d68:	cbz	x2, 454d78 <ferror@plt+0x517a8>
  454d6c:	mov	w1, w21
  454d70:	mov	x0, x19
  454d74:	bl	455900 <ferror@plt+0x52330>
  454d78:	mov	x0, x19
  454d7c:	mov	w1, #0x7b                  	// #123
  454d80:	bl	453a28 <ferror@plt+0x50458>
  454d84:	mov	x2, x20
  454d88:	mov	w1, w21
  454d8c:	mov	x0, x19
  454d90:	bl	455900 <ferror@plt+0x52330>
  454d94:	mov	x0, x19
  454d98:	mov	w1, #0x7d                  	// #125
  454d9c:	bl	453a28 <ferror@plt+0x50458>
  454da0:	b	454118 <ferror@plt+0x50b48>
  454da4:	ldr	x21, [x20, #8]
  454da8:	mov	x0, x19
  454dac:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  454db0:	add	x1, x1, #0x21a
  454db4:	ldr	w20, [x21, #16]
  454db8:	bl	453ae0 <ferror@plt+0x50510>
  454dbc:	ldr	x0, [x21, #8]
  454dc0:	ldrb	w0, [x0]
  454dc4:	sub	w0, w0, #0x61
  454dc8:	and	w0, w0, #0xff
  454dcc:	cmp	w0, #0x19
  454dd0:	b.hi	454de0 <ferror@plt+0x51810>  // b.pmore
  454dd4:	mov	x0, x19
  454dd8:	mov	w1, #0x20                  	// #32
  454ddc:	bl	453a28 <ferror@plt+0x50458>
  454de0:	ldr	x1, [x21, #8]
  454de4:	add	x0, x1, w20, sxtw
  454de8:	ldurb	w0, [x0, #-1]
  454dec:	cmp	w0, #0x20
  454df0:	cset	w0, eq  // eq = none
  454df4:	sub	w20, w20, w0
  454df8:	mov	x0, x19
  454dfc:	sxtw	x2, w20
  454e00:	bl	453a6c <ferror@plt+0x5049c>
  454e04:	b	454118 <ferror@plt+0x50b48>
  454e08:	mov	x0, x19
  454e0c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454e10:	add	x1, x1, #0x64a
  454e14:	bl	453ae0 <ferror@plt+0x50510>
  454e18:	ldr	x2, [x20, #16]
  454e1c:	mov	w1, w21
  454e20:	mov	x0, x19
  454e24:	bl	455900 <ferror@plt+0x52330>
  454e28:	b	454118 <ferror@plt+0x50b48>
  454e2c:	mov	x0, x19
  454e30:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454e34:	add	x1, x1, #0x64a
  454e38:	bl	453ae0 <ferror@plt+0x50510>
  454e3c:	ldr	x0, [x19, #368]
  454e40:	cbz	x0, 454e54 <ferror@plt+0x51884>
  454e44:	ldr	x1, [x19, #288]
  454e48:	stp	x1, x0, [sp, #96]
  454e4c:	add	x1, sp, #0x60
  454e50:	str	x1, [x19, #288]
  454e54:	ldr	x2, [x20, #8]
  454e58:	ldr	w0, [x2]
  454e5c:	cmp	w0, #0x4
  454e60:	b.eq	454e84 <ferror@plt+0x518b4>  // b.none
  454e64:	mov	x0, x19
  454e68:	mov	w1, w21
  454e6c:	bl	455900 <ferror@plt+0x52330>
  454e70:	ldr	x0, [x19, #368]
  454e74:	cbz	x0, 454118 <ferror@plt+0x50b48>
  454e78:	ldr	x0, [sp, #96]
  454e7c:	str	x0, [x19, #288]
  454e80:	b	454118 <ferror@plt+0x50b48>
  454e84:	ldr	x2, [x2, #8]
  454e88:	mov	x0, x19
  454e8c:	mov	w1, w21
  454e90:	bl	455900 <ferror@plt+0x52330>
  454e94:	ldr	x0, [x19, #368]
  454e98:	cbz	x0, 454ea4 <ferror@plt+0x518d4>
  454e9c:	ldr	x0, [sp, #96]
  454ea0:	str	x0, [x19, #288]
  454ea4:	ldrb	w0, [x19, #264]
  454ea8:	cmp	w0, #0x3c
  454eac:	b.ne	454ebc <ferror@plt+0x518ec>  // b.any
  454eb0:	mov	x0, x19
  454eb4:	mov	w1, #0x20                  	// #32
  454eb8:	bl	453a28 <ferror@plt+0x50458>
  454ebc:	mov	x0, x19
  454ec0:	mov	w1, #0x3c                  	// #60
  454ec4:	bl	453a28 <ferror@plt+0x50458>
  454ec8:	ldr	x0, [x20, #8]
  454ecc:	mov	w1, w21
  454ed0:	ldr	x2, [x0, #16]
  454ed4:	mov	x0, x19
  454ed8:	bl	455900 <ferror@plt+0x52330>
  454edc:	ldrb	w0, [x19, #264]
  454ee0:	cmp	w0, #0x3e
  454ee4:	b.ne	454ef4 <ferror@plt+0x51924>  // b.any
  454ee8:	mov	x0, x19
  454eec:	mov	w1, #0x20                  	// #32
  454ef0:	bl	453a28 <ferror@plt+0x50458>
  454ef4:	mov	x0, x19
  454ef8:	mov	w1, #0x3e                  	// #62
  454efc:	bl	453a28 <ferror@plt+0x50458>
  454f00:	b	454118 <ferror@plt+0x50b48>
  454f04:	ldr	x2, [x20, #8]
  454f08:	mov	w1, w21
  454f0c:	mov	x0, x19
  454f10:	bl	455ef0 <ferror@plt+0x52920>
  454f14:	b	454118 <ferror@plt+0x50b48>
  454f18:	ldp	x23, x20, [x20, #8]
  454f1c:	ldr	w0, [x23]
  454f20:	cmp	w0, #0x32
  454f24:	b.ne	454fd4 <ferror@plt+0x51a04>  // b.any
  454f28:	ldr	x0, [x23, #8]
  454f2c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x23c10>
  454f30:	add	x1, x1, #0x17c
  454f34:	ldr	x22, [x0]
  454f38:	mov	x0, x22
  454f3c:	bl	403220 <strcmp@plt>
  454f40:	cbnz	w0, 454f70 <ferror@plt+0x519a0>
  454f44:	ldr	w0, [x20]
  454f48:	cmp	w0, #0x3
  454f4c:	b.ne	454f70 <ferror@plt+0x519a0>  // b.any
  454f50:	ldr	x0, [x20, #8]
  454f54:	ldr	w1, [x0]
  454f58:	cmp	w1, #0x1
  454f5c:	b.ne	454f70 <ferror@plt+0x519a0>  // b.any
  454f60:	ldr	x1, [x20, #16]
  454f64:	ldr	w1, [x1]
  454f68:	cmp	w1, #0x29
  454f6c:	csel	x20, x20, x0, ne  // ne = any
  454f70:	ldr	w0, [x20]
  454f74:	cmp	w0, #0x39
  454f78:	b.ne	454fa0 <ferror@plt+0x519d0>  // b.any
  454f7c:	ldr	x2, [x20, #8]
  454f80:	mov	w1, w21
  454f84:	mov	x0, x19
  454f88:	bl	455f10 <ferror@plt+0x52940>
  454f8c:	mov	x2, x23
  454f90:	mov	w1, w21
  454f94:	mov	x0, x19
  454f98:	bl	455ef0 <ferror@plt+0x52920>
  454f9c:	b	454118 <ferror@plt+0x50b48>
  454fa0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  454fa4:	mov	x0, x22
  454fa8:	add	x1, x1, #0x654
  454fac:	bl	403220 <strcmp@plt>
  454fb0:	cbnz	w0, 455008 <ferror@plt+0x51a38>
  454fb4:	mov	x1, x20
  454fb8:	mov	x0, x19
  454fbc:	bl	454028 <ferror@plt+0x50a58>
  454fc0:	bl	453ab0 <ferror@plt+0x504e0>
  454fc4:	mov	w1, w0
  454fc8:	mov	x0, x19
  454fcc:	bl	453b14 <ferror@plt+0x50544>
  454fd0:	b	454118 <ferror@plt+0x50b48>
  454fd4:	cmp	w0, #0x34
  454fd8:	b.eq	455074 <ferror@plt+0x51aa4>  // b.none
  454fdc:	mov	x22, #0x0                   	// #0
  454fe0:	mov	x2, x23
  454fe4:	mov	w1, w21
  454fe8:	mov	x0, x19
  454fec:	bl	455ef0 <ferror@plt+0x52920>
  454ff0:	cbnz	x22, 4550a0 <ferror@plt+0x51ad0>
  454ff4:	mov	x2, x20
  454ff8:	mov	w1, w21
  454ffc:	mov	x0, x19
  455000:	bl	455f10 <ferror@plt+0x52940>
  455004:	b	454118 <ferror@plt+0x50b48>
  455008:	mov	x0, x22
  45500c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455010:	add	x1, x1, #0x657
  455014:	bl	403220 <strcmp@plt>
  455018:	mov	w3, w0
  45501c:	cbnz	w0, 454fe0 <ferror@plt+0x51a10>
  455020:	ldr	w0, [x20]
  455024:	cmp	w0, #0x2f
  455028:	b.ne	45505c <ferror@plt+0x51a8c>  // b.any
  45502c:	ldr	x0, [x20, #8]
  455030:	cbz	x0, 45505c <ferror@plt+0x51a8c>
  455034:	ldr	w1, [x0]
  455038:	cmp	w1, #0x4b
  45503c:	b.ne	45506c <ferror@plt+0x51a9c>  // b.any
  455040:	ldr	x1, [x0, #8]
  455044:	mov	x0, x19
  455048:	bl	454028 <ferror@plt+0x50a58>
  45504c:	bl	453ab0 <ferror@plt+0x504e0>
  455050:	add	w3, w3, w0
  455054:	ldr	x20, [x20, #16]
  455058:	cbnz	x20, 455020 <ferror@plt+0x51a50>
  45505c:	mov	w1, w3
  455060:	mov	x0, x19
  455064:	bl	453b14 <ferror@plt+0x50544>
  455068:	b	454118 <ferror@plt+0x50b48>
  45506c:	add	w3, w3, #0x1
  455070:	b	455054 <ferror@plt+0x51a84>
  455074:	mov	x0, x19
  455078:	mov	w1, #0x28                  	// #40
  45507c:	bl	453a28 <ferror@plt+0x50458>
  455080:	ldr	x2, [x23, #8]
  455084:	mov	w1, w21
  455088:	mov	x0, x19
  45508c:	bl	455900 <ferror@plt+0x52330>
  455090:	mov	x0, x19
  455094:	mov	w1, #0x29                  	// #41
  455098:	bl	453a28 <ferror@plt+0x50458>
  45509c:	b	454ff4 <ferror@plt+0x51a24>
  4550a0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x39c10>
  4550a4:	mov	x0, x22
  4550a8:	add	x1, x1, #0x47a
  4550ac:	bl	403220 <strcmp@plt>
  4550b0:	cbnz	w0, 4550c8 <ferror@plt+0x51af8>
  4550b4:	mov	x2, x20
  4550b8:	mov	w1, w21
  4550bc:	mov	x0, x19
  4550c0:	bl	455900 <ferror@plt+0x52330>
  4550c4:	b	454118 <ferror@plt+0x50b48>
  4550c8:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x2fc10>
  4550cc:	mov	x0, x22
  4550d0:	add	x1, x1, #0x678
  4550d4:	bl	403220 <strcmp@plt>
  4550d8:	cbnz	w0, 454ff4 <ferror@plt+0x51a24>
  4550dc:	mov	x0, x19
  4550e0:	mov	w1, #0x28                  	// #40
  4550e4:	bl	453a28 <ferror@plt+0x50458>
  4550e8:	mov	x2, x20
  4550ec:	mov	w1, w21
  4550f0:	mov	x0, x19
  4550f4:	bl	455900 <ferror@plt+0x52330>
  4550f8:	mov	x0, x19
  4550fc:	mov	w1, #0x29                  	// #41
  455100:	bl	453a28 <ferror@plt+0x50458>
  455104:	b	454118 <ferror@plt+0x50b48>
  455108:	ldr	x0, [x20, #16]
  45510c:	ldr	w0, [x0]
  455110:	cmp	w0, #0x39
  455114:	b.ne	454110 <ferror@plt+0x50b40>  // b.any
  455118:	ldr	x2, [x20, #8]
  45511c:	ldr	x0, [x2, #8]
  455120:	bl	453df0 <ferror@plt+0x50820>
  455124:	cbz	w0, 455188 <ferror@plt+0x51bb8>
  455128:	mov	w1, w21
  45512c:	mov	x0, x19
  455130:	bl	455ef0 <ferror@plt+0x52920>
  455134:	mov	x0, x19
  455138:	mov	w1, #0x3c                  	// #60
  45513c:	bl	453a28 <ferror@plt+0x50458>
  455140:	ldr	x0, [x20, #16]
  455144:	mov	w1, w21
  455148:	ldr	x2, [x0, #8]
  45514c:	mov	x0, x19
  455150:	bl	455900 <ferror@plt+0x52330>
  455154:	mov	x0, x19
  455158:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45515c:	add	x1, x1, #0x65a
  455160:	bl	453ae0 <ferror@plt+0x50510>
  455164:	ldr	x0, [x20, #16]
  455168:	mov	w1, w21
  45516c:	ldr	x2, [x0, #16]
  455170:	mov	x0, x19
  455174:	bl	455900 <ferror@plt+0x52330>
  455178:	mov	x0, x19
  45517c:	mov	w1, #0x29                  	// #41
  455180:	bl	453a28 <ferror@plt+0x50458>
  455184:	b	454118 <ferror@plt+0x50b48>
  455188:	mov	x2, x20
  45518c:	mov	w1, w21
  455190:	mov	x0, x19
  455194:	bl	455f9c <ferror@plt+0x529cc>
  455198:	cbnz	w0, 454118 <ferror@plt+0x50b48>
  45519c:	ldr	x0, [x20, #8]
  4551a0:	ldr	w1, [x0]
  4551a4:	cmp	w1, #0x32
  4551a8:	b.ne	4551d8 <ferror@plt+0x51c08>  // b.any
  4551ac:	ldr	x0, [x0, #8]
  4551b0:	ldr	w1, [x0, #16]
  4551b4:	cmp	w1, #0x1
  4551b8:	b.ne	4551d8 <ferror@plt+0x51c08>  // b.any
  4551bc:	ldr	x0, [x0, #8]
  4551c0:	ldrb	w0, [x0]
  4551c4:	cmp	w0, #0x3e
  4551c8:	b.ne	4551d8 <ferror@plt+0x51c08>  // b.any
  4551cc:	mov	x0, x19
  4551d0:	mov	w1, #0x28                  	// #40
  4551d4:	bl	453a28 <ferror@plt+0x50458>
  4551d8:	ldr	x0, [x20, #8]
  4551dc:	adrp	x22, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4551e0:	add	x22, x22, #0x65d
  4551e4:	mov	x1, x22
  4551e8:	ldr	x0, [x0, #8]
  4551ec:	ldr	x0, [x0]
  4551f0:	bl	403220 <strcmp@plt>
  4551f4:	ldr	x1, [x20, #16]
  4551f8:	ldr	x2, [x1, #8]
  4551fc:	cbnz	w0, 455228 <ferror@plt+0x51c58>
  455200:	ldr	w0, [x2]
  455204:	cmp	w0, #0x3
  455208:	b.ne	455228 <ferror@plt+0x51c58>  // b.any
  45520c:	ldr	x0, [x2, #16]
  455210:	ldr	w0, [x0]
  455214:	cmp	w0, #0x29
  455218:	b.eq	455224 <ferror@plt+0x51c54>  // b.none
  45521c:	mov	w0, #0x1                   	// #1
  455220:	str	w0, [x19, #304]
  455224:	ldr	x2, [x2, #8]
  455228:	mov	w1, w21
  45522c:	mov	x0, x19
  455230:	bl	455f10 <ferror@plt+0x52940>
  455234:	ldr	x23, [x20, #8]
  455238:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2bc10>
  45523c:	add	x1, x1, #0x559
  455240:	ldr	x0, [x23, #8]
  455244:	ldr	x24, [x0]
  455248:	mov	x0, x24
  45524c:	bl	403220 <strcmp@plt>
  455250:	cbnz	w0, 4552c0 <ferror@plt+0x51cf0>
  455254:	mov	x0, x19
  455258:	mov	w1, #0x5b                  	// #91
  45525c:	bl	453a28 <ferror@plt+0x50458>
  455260:	ldr	x0, [x20, #16]
  455264:	mov	w1, w21
  455268:	ldr	x2, [x0, #16]
  45526c:	mov	x0, x19
  455270:	bl	455900 <ferror@plt+0x52330>
  455274:	mov	x0, x19
  455278:	mov	w1, #0x5d                  	// #93
  45527c:	bl	453a28 <ferror@plt+0x50458>
  455280:	ldr	x0, [x20, #8]
  455284:	ldr	w1, [x0]
  455288:	cmp	w1, #0x32
  45528c:	b.ne	454118 <ferror@plt+0x50b48>  // b.any
  455290:	ldr	x0, [x0, #8]
  455294:	ldr	w1, [x0, #16]
  455298:	cmp	w1, #0x1
  45529c:	b.ne	454118 <ferror@plt+0x50b48>  // b.any
  4552a0:	ldr	x0, [x0, #8]
  4552a4:	ldrb	w0, [x0]
  4552a8:	cmp	w0, #0x3e
  4552ac:	b.ne	454118 <ferror@plt+0x50b48>  // b.any
  4552b0:	mov	x0, x19
  4552b4:	mov	w1, #0x29                  	// #41
  4552b8:	bl	453a28 <ferror@plt+0x50458>
  4552bc:	b	454118 <ferror@plt+0x50b48>
  4552c0:	mov	x1, x22
  4552c4:	mov	x0, x24
  4552c8:	bl	403220 <strcmp@plt>
  4552cc:	cbz	w0, 4552e0 <ferror@plt+0x51d10>
  4552d0:	mov	x2, x23
  4552d4:	mov	w1, w21
  4552d8:	mov	x0, x19
  4552dc:	bl	455ef0 <ferror@plt+0x52920>
  4552e0:	ldr	x0, [x20, #16]
  4552e4:	mov	w1, w21
  4552e8:	ldr	x2, [x0, #16]
  4552ec:	mov	x0, x19
  4552f0:	bl	455f10 <ferror@plt+0x52940>
  4552f4:	b	455280 <ferror@plt+0x51cb0>
  4552f8:	mov	w0, #0x1                   	// #1
  4552fc:	str	w0, [x19, #304]
  455300:	b	454118 <ferror@plt+0x50b48>
  455304:	ldr	x0, [x20, #16]
  455308:	ldr	w1, [x0]
  45530c:	cmp	w1, #0x3b
  455310:	b.ne	454110 <ferror@plt+0x50b40>  // b.any
  455314:	ldr	x0, [x0, #16]
  455318:	ldr	w0, [x0]
  45531c:	cmp	w0, #0x3c
  455320:	b.ne	454110 <ferror@plt+0x50b40>  // b.any
  455324:	mov	x2, x20
  455328:	mov	w1, w21
  45532c:	mov	x0, x19
  455330:	bl	455f9c <ferror@plt+0x529cc>
  455334:	cbnz	w0, 454118 <ferror@plt+0x50b48>
  455338:	ldp	x24, x0, [x20, #8]
  45533c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455340:	add	x1, x1, #0x660
  455344:	ldp	x22, x0, [x0, #8]
  455348:	ldp	x23, x20, [x0, #8]
  45534c:	ldr	x0, [x24, #8]
  455350:	ldr	x0, [x0]
  455354:	bl	403220 <strcmp@plt>
  455358:	cbnz	w0, 4553b0 <ferror@plt+0x51de0>
  45535c:	mov	x2, x22
  455360:	mov	w1, w21
  455364:	mov	x0, x19
  455368:	bl	455f10 <ferror@plt+0x52940>
  45536c:	mov	x2, x24
  455370:	mov	w1, w21
  455374:	mov	x0, x19
  455378:	bl	455ef0 <ferror@plt+0x52920>
  45537c:	mov	x2, x23
  455380:	mov	w1, w21
  455384:	mov	x0, x19
  455388:	bl	455f10 <ferror@plt+0x52940>
  45538c:	mov	x0, x19
  455390:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455394:	add	x1, x1, #0x663
  455398:	bl	453ae0 <ferror@plt+0x50510>
  45539c:	mov	x2, x20
  4553a0:	mov	w1, w21
  4553a4:	mov	x0, x19
  4553a8:	bl	455f10 <ferror@plt+0x52940>
  4553ac:	b	454118 <ferror@plt+0x50b48>
  4553b0:	mov	x0, x19
  4553b4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4553b8:	add	x1, x1, #0x667
  4553bc:	bl	453ae0 <ferror@plt+0x50510>
  4553c0:	ldr	x0, [x22, #8]
  4553c4:	cbz	x0, 4553e4 <ferror@plt+0x51e14>
  4553c8:	mov	x2, x22
  4553cc:	mov	w1, w21
  4553d0:	mov	x0, x19
  4553d4:	bl	455f10 <ferror@plt+0x52940>
  4553d8:	mov	x0, x19
  4553dc:	mov	w1, #0x20                  	// #32
  4553e0:	bl	453a28 <ferror@plt+0x50458>
  4553e4:	mov	x2, x23
  4553e8:	mov	w1, w21
  4553ec:	mov	x0, x19
  4553f0:	bl	455900 <ferror@plt+0x52330>
  4553f4:	cbz	x20, 454118 <ferror@plt+0x50b48>
  4553f8:	mov	x2, x20
  4553fc:	mov	w1, w21
  455400:	mov	x0, x19
  455404:	bl	455f10 <ferror@plt+0x52940>
  455408:	b	454118 <ferror@plt+0x50b48>
  45540c:	ldr	x1, [x20, #8]
  455410:	ldr	w2, [x1]
  455414:	cmp	w2, #0x27
  455418:	b.ne	4555c4 <ferror@plt+0x51ff4>  // b.any
  45541c:	ldr	x1, [x1, #8]
  455420:	ldr	w22, [x1, #28]
  455424:	cmp	w22, #0x6
  455428:	b.hi	455484 <ferror@plt+0x51eb4>  // b.pmore
  45542c:	cbz	w22, 45548c <ferror@plt+0x51ebc>
  455430:	ldr	x1, [x20, #16]
  455434:	ldr	w1, [x1]
  455438:	cbnz	w1, 45548c <ferror@plt+0x51ebc>
  45543c:	cmp	w0, #0x3e
  455440:	b.ne	455450 <ferror@plt+0x51e80>  // b.any
  455444:	mov	x0, x19
  455448:	mov	w1, #0x2d                  	// #45
  45544c:	bl	453a28 <ferror@plt+0x50458>
  455450:	ldr	x2, [x20, #16]
  455454:	mov	w1, w21
  455458:	mov	x0, x19
  45545c:	sub	w22, w22, #0x2
  455460:	bl	455900 <ferror@plt+0x52330>
  455464:	cmp	w22, #0x4
  455468:	b.hi	454118 <ferror@plt+0x50b48>  // b.pmore
  45546c:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  455470:	add	x0, x0, #0x740
  455474:	ldrb	w0, [x0, w22, uxtw]
  455478:	adr	x1, 455484 <ferror@plt+0x51eb4>
  45547c:	add	x0, x1, w0, sxtb #2
  455480:	br	x0
  455484:	cmp	w22, #0x7
  455488:	b.eq	455564 <ferror@plt+0x51f94>  // b.none
  45548c:	mov	x0, x19
  455490:	mov	w1, #0x28                  	// #40
  455494:	bl	453a28 <ferror@plt+0x50458>
  455498:	ldr	x2, [x20, #8]
  45549c:	mov	w1, w21
  4554a0:	mov	x0, x19
  4554a4:	bl	455900 <ferror@plt+0x52330>
  4554a8:	mov	x0, x19
  4554ac:	mov	w1, #0x29                  	// #41
  4554b0:	bl	453a28 <ferror@plt+0x50458>
  4554b4:	ldr	w0, [x20]
  4554b8:	cmp	w0, #0x3e
  4554bc:	b.ne	4554cc <ferror@plt+0x51efc>  // b.any
  4554c0:	mov	x0, x19
  4554c4:	mov	w1, #0x2d                  	// #45
  4554c8:	bl	453a28 <ferror@plt+0x50458>
  4554cc:	cmp	w22, #0x8
  4554d0:	b.ne	4554e0 <ferror@plt+0x51f10>  // b.any
  4554d4:	mov	x0, x19
  4554d8:	mov	w1, #0x5b                  	// #91
  4554dc:	bl	453a28 <ferror@plt+0x50458>
  4554e0:	ldr	x2, [x20, #16]
  4554e4:	mov	w1, w21
  4554e8:	mov	x0, x19
  4554ec:	bl	455900 <ferror@plt+0x52330>
  4554f0:	cmp	w22, #0x8
  4554f4:	b.ne	454118 <ferror@plt+0x50b48>  // b.any
  4554f8:	mov	x0, x19
  4554fc:	mov	w1, #0x5d                  	// #93
  455500:	bl	453a28 <ferror@plt+0x50458>
  455504:	b	454118 <ferror@plt+0x50b48>
  455508:	mov	x0, x19
  45550c:	mov	w1, #0x75                  	// #117
  455510:	bl	453a28 <ferror@plt+0x50458>
  455514:	b	454118 <ferror@plt+0x50b48>
  455518:	mov	x0, x19
  45551c:	mov	w1, #0x6c                  	// #108
  455520:	bl	453a28 <ferror@plt+0x50458>
  455524:	b	454118 <ferror@plt+0x50b48>
  455528:	mov	x0, x19
  45552c:	adrp	x1, 4ca000 <_obstack_memory_used@@Base+0x6dc10>
  455530:	add	x1, x1, #0xc28
  455534:	bl	453ae0 <ferror@plt+0x50510>
  455538:	b	454118 <ferror@plt+0x50b48>
  45553c:	mov	x0, x19
  455540:	adrp	x1, 495000 <_obstack_memory_used@@Base+0x38c10>
  455544:	add	x1, x1, #0x1b1
  455548:	bl	453ae0 <ferror@plt+0x50510>
  45554c:	b	454118 <ferror@plt+0x50b48>
  455550:	mov	x0, x19
  455554:	adrp	x1, 490000 <_obstack_memory_used@@Base+0x33c10>
  455558:	add	x1, x1, #0x205
  45555c:	bl	453ae0 <ferror@plt+0x50510>
  455560:	b	454118 <ferror@plt+0x50b48>
  455564:	ldr	x1, [x20, #16]
  455568:	ldr	w2, [x1]
  45556c:	cbnz	w2, 45548c <ferror@plt+0x51ebc>
  455570:	ldr	w2, [x1, #16]
  455574:	cmp	w2, #0x1
  455578:	b.ne	45548c <ferror@plt+0x51ebc>  // b.any
  45557c:	cmp	w0, #0x3d
  455580:	b.ne	45548c <ferror@plt+0x51ebc>  // b.any
  455584:	ldr	x0, [x1, #8]
  455588:	ldrb	w0, [x0]
  45558c:	cmp	w0, #0x30
  455590:	b.eq	4555b0 <ferror@plt+0x51fe0>  // b.none
  455594:	cmp	w0, #0x31
  455598:	b.ne	45548c <ferror@plt+0x51ebc>  // b.any
  45559c:	mov	x0, x19
  4555a0:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4555a4:	add	x1, x1, #0x651
  4555a8:	bl	453ae0 <ferror@plt+0x50510>
  4555ac:	b	454118 <ferror@plt+0x50b48>
  4555b0:	mov	x0, x19
  4555b4:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4555b8:	add	x1, x1, #0x656
  4555bc:	bl	453ae0 <ferror@plt+0x50510>
  4555c0:	b	454118 <ferror@plt+0x50b48>
  4555c4:	mov	w22, #0x0                   	// #0
  4555c8:	b	45548c <ferror@plt+0x51ebc>
  4555cc:	ldr	w1, [x20, #8]
  4555d0:	mov	x0, x19
  4555d4:	bl	453b14 <ferror@plt+0x50544>
  4555d8:	b	454118 <ferror@plt+0x50b48>
  4555dc:	mov	x0, x19
  4555e0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4555e4:	add	x1, x1, #0x66c
  4555e8:	bl	453ae0 <ferror@plt+0x50510>
  4555ec:	ldr	x2, [x20, #8]
  4555f0:	mov	w1, w21
  4555f4:	mov	x0, x19
  4555f8:	bl	455900 <ferror@plt+0x52330>
  4555fc:	b	454118 <ferror@plt+0x50b48>
  455600:	ldr	x2, [x20, #8]
  455604:	mov	w1, w21
  455608:	mov	x0, x19
  45560c:	bl	455900 <ferror@plt+0x52330>
  455610:	ldr	x2, [x20, #16]
  455614:	mov	w1, w21
  455618:	mov	x0, x19
  45561c:	bl	455900 <ferror@plt+0x52330>
  455620:	b	454118 <ferror@plt+0x50b48>
  455624:	ldrb	w1, [x20, #8]
  455628:	mov	x0, x19
  45562c:	bl	453a28 <ferror@plt+0x50458>
  455630:	b	454118 <ferror@plt+0x50b48>
  455634:	mov	x0, x19
  455638:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45563c:	add	x1, x1, #0x67b
  455640:	bl	453ae0 <ferror@plt+0x50510>
  455644:	ldr	x2, [x20, #8]
  455648:	mov	w1, w21
  45564c:	mov	x0, x19
  455650:	bl	455900 <ferror@plt+0x52330>
  455654:	mov	x0, x19
  455658:	mov	w1, #0x29                  	// #41
  45565c:	bl	453a28 <ferror@plt+0x50458>
  455660:	b	454118 <ferror@plt+0x50b48>
  455664:	ldr	x1, [x20, #8]
  455668:	mov	x0, x19
  45566c:	bl	454028 <ferror@plt+0x50a58>
  455670:	cbnz	x0, 455698 <ferror@plt+0x520c8>
  455674:	ldr	x2, [x20, #8]
  455678:	mov	w1, w21
  45567c:	mov	x0, x19
  455680:	bl	455f10 <ferror@plt+0x52940>
  455684:	mov	x0, x19
  455688:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45568c:	add	x1, x1, #0x753
  455690:	bl	453ae0 <ferror@plt+0x50510>
  455694:	b	454118 <ferror@plt+0x50b48>
  455698:	bl	453ab0 <ferror@plt+0x504e0>
  45569c:	mov	w23, w0
  4556a0:	sub	w25, w0, #0x1
  4556a4:	ldr	x24, [x20, #8]
  4556a8:	adrp	x20, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  4556ac:	add	x20, x20, #0x674
  4556b0:	cmp	w22, w23
  4556b4:	b.ge	454118 <ferror@plt+0x50b48>  // b.tcont
  4556b8:	str	w22, [x19, #316]
  4556bc:	mov	x2, x24
  4556c0:	mov	w1, w21
  4556c4:	mov	x0, x19
  4556c8:	bl	455900 <ferror@plt+0x52330>
  4556cc:	cmp	w25, w22
  4556d0:	b.le	4556e0 <ferror@plt+0x52110>
  4556d4:	mov	x1, x20
  4556d8:	mov	x0, x19
  4556dc:	bl	453ae0 <ferror@plt+0x50510>
  4556e0:	add	w22, w22, #0x1
  4556e4:	b	4556b0 <ferror@plt+0x520e0>
  4556e8:	ldr	x20, [x20, #8]
  4556ec:	cbnz	x20, 455704 <ferror@plt+0x52134>
  4556f0:	mov	x0, x19
  4556f4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4556f8:	add	x1, x1, #0x686
  4556fc:	bl	453ae0 <ferror@plt+0x50510>
  455700:	b	454118 <ferror@plt+0x50b48>
  455704:	mov	x0, x19
  455708:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45570c:	add	x1, x1, #0x68b
  455710:	bl	453ae0 <ferror@plt+0x50510>
  455714:	mov	w1, w20
  455718:	mov	x0, x19
  45571c:	bl	453b14 <ferror@plt+0x50544>
  455720:	mov	x0, x19
  455724:	mov	w1, #0x7d                  	// #125
  455728:	bl	453a28 <ferror@plt+0x50458>
  45572c:	b	454118 <ferror@plt+0x50b48>
  455730:	mov	x0, x19
  455734:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455738:	add	x1, x1, #0x692
  45573c:	bl	453ae0 <ferror@plt+0x50510>
  455740:	ldr	x2, [x20, #8]
  455744:	mov	w1, w21
  455748:	mov	x0, x19
  45574c:	bl	455900 <ferror@plt+0x52330>
  455750:	b	454118 <ferror@plt+0x50b48>
  455754:	mov	x0, x19
  455758:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45575c:	add	x1, x1, #0x6b0
  455760:	bl	453ae0 <ferror@plt+0x50510>
  455764:	ldr	x2, [x20, #8]
  455768:	mov	w1, w21
  45576c:	mov	x0, x19
  455770:	bl	455900 <ferror@plt+0x52330>
  455774:	b	454118 <ferror@plt+0x50b48>
  455778:	mov	x0, x19
  45577c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455780:	add	x1, x1, #0x6cd
  455784:	bl	453ae0 <ferror@plt+0x50510>
  455788:	ldr	w0, [x19, #312]
  45578c:	mov	w1, w21
  455790:	ldr	x2, [x20, #8]
  455794:	add	w0, w0, #0x1
  455798:	str	w0, [x19, #312]
  45579c:	mov	x0, x19
  4557a0:	bl	455900 <ferror@plt+0x52330>
  4557a4:	ldr	w0, [x19, #312]
  4557a8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4557ac:	add	x1, x1, #0x6d6
  4557b0:	sub	w0, w0, #0x1
  4557b4:	str	w0, [x19, #312]
  4557b8:	mov	x0, x19
  4557bc:	bl	453ae0 <ferror@plt+0x50510>
  4557c0:	ldr	w1, [x20, #16]
  4557c4:	mov	x0, x19
  4557c8:	add	w1, w1, #0x1
  4557cc:	bl	453b14 <ferror@plt+0x50544>
  4557d0:	mov	x0, x19
  4557d4:	mov	w1, #0x7d                  	// #125
  4557d8:	bl	453a28 <ferror@plt+0x50458>
  4557dc:	b	454118 <ferror@plt+0x50b48>
  4557e0:	mov	x0, x19
  4557e4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4557e8:	add	x1, x1, #0x6d9
  4557ec:	bl	453ae0 <ferror@plt+0x50510>
  4557f0:	ldr	x1, [x20, #8]
  4557f4:	mov	x0, x19
  4557f8:	add	w1, w1, #0x1
  4557fc:	bl	453b14 <ferror@plt+0x50544>
  455800:	mov	x0, x19
  455804:	mov	w1, #0x7d                  	// #125
  455808:	bl	453a28 <ferror@plt+0x50458>
  45580c:	b	454118 <ferror@plt+0x50b48>
  455810:	ldr	x2, [x20, #8]
  455814:	mov	w1, w21
  455818:	mov	x0, x19
  45581c:	bl	455900 <ferror@plt+0x52330>
  455820:	mov	x0, x19
  455824:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455828:	add	x1, x1, #0x6e8
  45582c:	bl	453ae0 <ferror@plt+0x50510>
  455830:	ldr	x2, [x20, #16]
  455834:	mov	w1, w21
  455838:	mov	x0, x19
  45583c:	bl	455900 <ferror@plt+0x52330>
  455840:	mov	x0, x19
  455844:	mov	w1, #0x5d                  	// #93
  455848:	bl	453a28 <ferror@plt+0x50458>
  45584c:	b	454118 <ferror@plt+0x50b48>
  455850:	cmp	w5, #0x2
  455854:	b.ne	455884 <ferror@plt+0x522b4>  // b.any
  455858:	ldr	x22, [x22, #16]
  45585c:	ldr	w0, [x22]
  455860:	cmp	w0, #0x47
  455864:	b.ne	455870 <ferror@plt+0x522a0>  // b.any
  455868:	ldr	x22, [x22, #8]
  45586c:	cbz	x22, 454340 <ferror@plt+0x50d70>
  455870:	ubfiz	x0, x23, #5, #32
  455874:	add	x2, x2, x0
  455878:	ldr	w0, [x22]
  45587c:	bl	4537a8 <ferror@plt+0x501d8>
  455880:	cbnz	w0, 454380 <ferror@plt+0x50db0>
  455884:	ldr	w0, [x22]
  455888:	cmp	w0, #0x4
  45588c:	b.ne	45589c <ferror@plt+0x522cc>  // b.any
  455890:	add	x0, sp, #0x50
  455894:	stp	x4, x22, [sp, #80]
  455898:	str	x0, [x19, #288]
  45589c:	ldr	x2, [x20, #16]
  4558a0:	mov	x0, x19
  4558a4:	mov	w1, w21
  4558a8:	bl	455900 <ferror@plt+0x52330>
  4558ac:	ldr	w0, [x22]
  4558b0:	cmp	w0, #0x4
  4558b4:	b.ne	4558c0 <ferror@plt+0x522f0>  // b.any
  4558b8:	ldr	x0, [sp, #80]
  4558bc:	str	x0, [x19, #288]
  4558c0:	add	x22, sp, #0x70
  4558c4:	add	x25, sp, #0x68
  4558c8:	sub	w23, w23, #0x1
  4558cc:	ubfiz	x20, x23, #5, #32
  4558d0:	ldr	w0, [x22, x20]
  4558d4:	cbnz	w0, 4558f4 <ferror@plt+0x52324>
  4558d8:	mov	x0, x19
  4558dc:	mov	w1, #0x20                  	// #32
  4558e0:	bl	453a28 <ferror@plt+0x50458>
  4558e4:	ldr	x2, [x25, x20]
  4558e8:	mov	w1, w21
  4558ec:	mov	x0, x19
  4558f0:	bl	45598c <ferror@plt+0x523bc>
  4558f4:	cbnz	w23, 4558c8 <ferror@plt+0x522f8>
  4558f8:	str	x24, [x19, #296]
  4558fc:	b	454118 <ferror@plt+0x50b48>
  455900:	stp	x29, x30, [sp, #-48]!
  455904:	mov	x29, sp
  455908:	stp	x19, x20, [sp, #16]
  45590c:	mov	x19, x0
  455910:	cbz	x2, 455930 <ferror@plt+0x52360>
  455914:	ldr	w4, [x2, #4]
  455918:	mov	x20, x2
  45591c:	cmp	w4, #0x1
  455920:	b.gt	455930 <ferror@plt+0x52360>
  455924:	ldr	w3, [x0, #308]
  455928:	cmp	w3, #0x400
  45592c:	b.le	455944 <ferror@plt+0x52374>
  455930:	mov	w0, #0x1                   	// #1
  455934:	str	w0, [x19, #304]
  455938:	ldp	x19, x20, [sp, #16]
  45593c:	ldp	x29, x30, [sp], #48
  455940:	ret
  455944:	add	w4, w4, #0x1
  455948:	add	w3, w3, #0x1
  45594c:	str	w4, [x2, #4]
  455950:	str	w3, [x0, #308]
  455954:	ldr	x3, [x0, #328]
  455958:	stp	x2, x3, [sp, #32]
  45595c:	add	x3, sp, #0x20
  455960:	str	x3, [x0, #328]
  455964:	bl	4540f0 <ferror@plt+0x50b20>
  455968:	ldr	x0, [sp, #40]
  45596c:	str	x0, [x19, #328]
  455970:	ldr	w0, [x20, #4]
  455974:	sub	w0, w0, #0x1
  455978:	str	w0, [x20, #4]
  45597c:	ldr	w0, [x19, #308]
  455980:	sub	w0, w0, #0x1
  455984:	str	w0, [x19, #308]
  455988:	b	455938 <ferror@plt+0x52368>
  45598c:	stp	x29, x30, [sp, #-48]!
  455990:	mov	x29, sp
  455994:	stp	x19, x20, [sp, #16]
  455998:	mov	x20, x2
  45599c:	ldr	w2, [x2]
  4559a0:	str	x21, [sp, #32]
  4559a4:	cmp	w2, #0x3
  4559a8:	b.eq	455b10 <ferror@plt+0x52540>  // b.none
  4559ac:	sub	w2, w2, #0x19
  4559b0:	mov	x19, x0
  4559b4:	mov	w21, w1
  4559b8:	cmp	w2, #0x37
  4559bc:	b.hi	455b3c <ferror@plt+0x5256c>  // b.pmore
  4559c0:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4559c4:	add	x0, x0, #0x748
  4559c8:	ldrb	w0, [x0, w2, uxtw]
  4559cc:	adr	x1, 4559d8 <ferror@plt+0x52408>
  4559d0:	add	x0, x1, w0, sxtb #2
  4559d4:	br	x0
  4559d8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4559dc:	add	x1, x1, #0x6f1
  4559e0:	mov	x0, x19
  4559e4:	ldp	x19, x20, [sp, #16]
  4559e8:	ldr	x21, [sp, #32]
  4559ec:	ldp	x29, x30, [sp], #48
  4559f0:	b	453ae0 <ferror@plt+0x50510>
  4559f4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4559f8:	add	x1, x1, #0x6fb
  4559fc:	b	4559e0 <ferror@plt+0x52410>
  455a00:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455a04:	add	x1, x1, #0x705
  455a08:	b	4559e0 <ferror@plt+0x52410>
  455a0c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455a10:	add	x1, x1, #0x70c
  455a14:	b	4559e0 <ferror@plt+0x52410>
  455a18:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455a1c:	add	x1, x1, #0x71e
  455a20:	mov	x0, x19
  455a24:	bl	453ae0 <ferror@plt+0x50510>
  455a28:	ldr	x0, [x20, #16]
  455a2c:	cbz	x0, 455b44 <ferror@plt+0x52574>
  455a30:	mov	x0, x19
  455a34:	mov	w1, #0x28                  	// #40
  455a38:	bl	453a28 <ferror@plt+0x50458>
  455a3c:	ldr	x2, [x20, #16]
  455a40:	mov	w1, w21
  455a44:	mov	x0, x19
  455a48:	bl	455900 <ferror@plt+0x52330>
  455a4c:	mov	w1, #0x29                  	// #41
  455a50:	b	455a84 <ferror@plt+0x524b4>
  455a54:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455a58:	add	x1, x1, #0x728
  455a5c:	b	455a20 <ferror@plt+0x52450>
  455a60:	mov	x0, x19
  455a64:	mov	w1, #0x20                  	// #32
  455a68:	bl	453a28 <ferror@plt+0x50458>
  455a6c:	ldr	x2, [x20, #16]
  455a70:	mov	w1, w21
  455a74:	mov	x0, x19
  455a78:	b	455b14 <ferror@plt+0x52544>
  455a7c:	tbnz	w21, #2, 455b44 <ferror@plt+0x52574>
  455a80:	mov	w1, #0x2a                  	// #42
  455a84:	mov	x0, x19
  455a88:	ldp	x19, x20, [sp, #16]
  455a8c:	ldr	x21, [sp, #32]
  455a90:	ldp	x29, x30, [sp], #48
  455a94:	b	453a28 <ferror@plt+0x50458>
  455a98:	mov	x0, x19
  455a9c:	mov	w1, #0x20                  	// #32
  455aa0:	bl	453a28 <ferror@plt+0x50458>
  455aa4:	mov	w1, #0x26                  	// #38
  455aa8:	b	455a84 <ferror@plt+0x524b4>
  455aac:	mov	x0, x19
  455ab0:	mov	w1, #0x20                  	// #32
  455ab4:	bl	453a28 <ferror@plt+0x50458>
  455ab8:	adrp	x1, 4c9000 <_obstack_memory_used@@Base+0x6cc10>
  455abc:	add	x1, x1, #0x9dd
  455ac0:	b	4559e0 <ferror@plt+0x52410>
  455ac4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455ac8:	add	x1, x1, #0x72f
  455acc:	b	4559e0 <ferror@plt+0x52410>
  455ad0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455ad4:	add	x1, x1, #0x738
  455ad8:	b	4559e0 <ferror@plt+0x52410>
  455adc:	ldrb	w0, [x19, #264]
  455ae0:	cmp	w0, #0x28
  455ae4:	b.eq	455af4 <ferror@plt+0x52524>  // b.none
  455ae8:	mov	x0, x19
  455aec:	mov	w1, #0x20                  	// #32
  455af0:	bl	453a28 <ferror@plt+0x50458>
  455af4:	ldr	x2, [x20, #8]
  455af8:	mov	w1, w21
  455afc:	mov	x0, x19
  455b00:	bl	455900 <ferror@plt+0x52330>
  455b04:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455b08:	add	x1, x1, #0x743
  455b0c:	b	4559e0 <ferror@plt+0x52410>
  455b10:	ldr	x2, [x20, #8]
  455b14:	ldp	x19, x20, [sp, #16]
  455b18:	ldr	x21, [sp, #32]
  455b1c:	ldp	x29, x30, [sp], #48
  455b20:	b	455900 <ferror@plt+0x52330>
  455b24:	mov	x0, x19
  455b28:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455b2c:	add	x1, x1, #0x747
  455b30:	bl	453ae0 <ferror@plt+0x50510>
  455b34:	ldr	x2, [x20, #8]
  455b38:	b	455a40 <ferror@plt+0x52470>
  455b3c:	mov	x2, x20
  455b40:	b	455a70 <ferror@plt+0x524a0>
  455b44:	ldp	x19, x20, [sp, #16]
  455b48:	ldr	x21, [sp, #32]
  455b4c:	ldp	x29, x30, [sp], #48
  455b50:	ret
  455b54:	stp	x29, x30, [sp, #-64]!
  455b58:	mov	x29, sp
  455b5c:	stp	x19, x20, [sp, #16]
  455b60:	mov	x19, x0
  455b64:	mov	w20, w1
  455b68:	mov	x0, x3
  455b6c:	stp	x21, x22, [sp, #32]
  455b70:	mov	x22, x2
  455b74:	mov	x21, x3
  455b78:	adrp	x2, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  455b7c:	add	x2, x2, #0x780
  455b80:	stp	x23, x24, [sp, #48]
  455b84:	cbnz	x0, 455b90 <ferror@plt+0x525c0>
  455b88:	mov	w23, #0x0                   	// #0
  455b8c:	b	455c00 <ferror@plt+0x52630>
  455b90:	ldr	w1, [x0, #16]
  455b94:	cbnz	w1, 455b88 <ferror@plt+0x525b8>
  455b98:	ldr	x1, [x0, #8]
  455b9c:	ldr	w1, [x1]
  455ba0:	sub	w1, w1, #0x19
  455ba4:	cmp	w1, #0x12
  455ba8:	b.hi	455bbc <ferror@plt+0x525ec>  // b.pmore
  455bac:	ldrb	w1, [x2, w1, uxtw]
  455bb0:	adr	x3, 455bbc <ferror@plt+0x525ec>
  455bb4:	add	x1, x3, w1, sxtb #2
  455bb8:	br	x1
  455bbc:	ldr	x0, [x0]
  455bc0:	b	455b84 <ferror@plt+0x525b4>
  455bc4:	ldrb	w0, [x19, #264]
  455bc8:	and	w0, w0, #0xfffffffd
  455bcc:	and	w0, w0, #0xff
  455bd0:	cmp	w0, #0x28
  455bd4:	b.eq	455bf0 <ferror@plt+0x52620>  // b.none
  455bd8:	ldrb	w0, [x19, #264]
  455bdc:	cmp	w0, #0x20
  455be0:	b.eq	455bf0 <ferror@plt+0x52620>  // b.none
  455be4:	mov	x0, x19
  455be8:	mov	w1, #0x20                  	// #32
  455bec:	bl	453a28 <ferror@plt+0x50458>
  455bf0:	mov	w23, #0x1                   	// #1
  455bf4:	mov	x0, x19
  455bf8:	mov	w1, #0x28                  	// #40
  455bfc:	bl	453a28 <ferror@plt+0x50458>
  455c00:	ldr	x24, [x19, #296]
  455c04:	str	xzr, [x19, #296]
  455c08:	mov	x2, x21
  455c0c:	mov	w1, w20
  455c10:	mov	x0, x19
  455c14:	mov	w3, #0x0                   	// #0
  455c18:	bl	455c84 <ferror@plt+0x526b4>
  455c1c:	cbz	w23, 455c2c <ferror@plt+0x5265c>
  455c20:	mov	x0, x19
  455c24:	mov	w1, #0x29                  	// #41
  455c28:	bl	453a28 <ferror@plt+0x50458>
  455c2c:	mov	x0, x19
  455c30:	mov	w1, #0x28                  	// #40
  455c34:	bl	453a28 <ferror@plt+0x50458>
  455c38:	ldr	x2, [x22]
  455c3c:	cbz	x2, 455c4c <ferror@plt+0x5267c>
  455c40:	mov	w1, w20
  455c44:	mov	x0, x19
  455c48:	bl	455900 <ferror@plt+0x52330>
  455c4c:	mov	x0, x19
  455c50:	mov	w1, #0x29                  	// #41
  455c54:	bl	453a28 <ferror@plt+0x50458>
  455c58:	mov	x2, x21
  455c5c:	mov	w1, w20
  455c60:	mov	x0, x19
  455c64:	mov	w3, #0x1                   	// #1
  455c68:	bl	455c84 <ferror@plt+0x526b4>
  455c6c:	ldp	x21, x22, [sp, #32]
  455c70:	str	x24, [x19, #296]
  455c74:	ldp	x19, x20, [sp, #16]
  455c78:	ldp	x23, x24, [sp, #48]
  455c7c:	ldp	x29, x30, [sp], #64
  455c80:	ret
  455c84:	stp	x29, x30, [sp, #-64]!
  455c88:	mov	x29, sp
  455c8c:	stp	x19, x20, [sp, #16]
  455c90:	mov	x19, x0
  455c94:	mov	x20, x2
  455c98:	stp	x21, x22, [sp, #32]
  455c9c:	mov	w21, w1
  455ca0:	stp	x23, x24, [sp, #48]
  455ca4:	mov	w23, w3
  455ca8:	mov	w24, #0x1                   	// #1
  455cac:	cbz	x20, 455d10 <ferror@plt+0x52740>
  455cb0:	ldr	w0, [x19, #304]
  455cb4:	cbnz	w0, 455d10 <ferror@plt+0x52740>
  455cb8:	ldr	w0, [x20, #16]
  455cbc:	cbnz	w0, 455cd8 <ferror@plt+0x52708>
  455cc0:	ldr	x2, [x20, #8]
  455cc4:	ldr	w4, [x2]
  455cc8:	cbnz	w23, 455ce0 <ferror@plt+0x52710>
  455ccc:	mov	w0, w4
  455cd0:	bl	4537a8 <ferror@plt+0x501d8>
  455cd4:	cbz	w0, 455ce0 <ferror@plt+0x52710>
  455cd8:	ldr	x20, [x20]
  455cdc:	b	455cac <ferror@plt+0x526dc>
  455ce0:	ldr	x0, [x20, #24]
  455ce4:	cmp	w4, #0x29
  455ce8:	ldr	x22, [x19, #288]
  455cec:	str	w24, [x20, #16]
  455cf0:	str	x0, [x19, #288]
  455cf4:	b.ne	455d24 <ferror@plt+0x52754>  // b.any
  455cf8:	ldr	x3, [x20]
  455cfc:	add	x2, x2, #0x10
  455d00:	mov	w1, w21
  455d04:	mov	x0, x19
  455d08:	bl	455b54 <ferror@plt+0x52584>
  455d0c:	str	x22, [x19, #288]
  455d10:	ldp	x19, x20, [sp, #16]
  455d14:	ldp	x21, x22, [sp, #32]
  455d18:	ldp	x23, x24, [sp, #48]
  455d1c:	ldp	x29, x30, [sp], #64
  455d20:	ret
  455d24:	cmp	w4, #0x2a
  455d28:	b.ne	455d44 <ferror@plt+0x52774>  // b.any
  455d2c:	ldr	x3, [x20]
  455d30:	add	x2, x2, #0x8
  455d34:	mov	w1, w21
  455d38:	mov	x0, x19
  455d3c:	bl	455e08 <ferror@plt+0x52838>
  455d40:	b	455d0c <ferror@plt+0x5273c>
  455d44:	cmp	w4, #0x2
  455d48:	b.ne	455df4 <ferror@plt+0x52824>  // b.any
  455d4c:	ldr	x2, [x2, #8]
  455d50:	mov	w1, w21
  455d54:	ldr	x23, [x19, #296]
  455d58:	str	xzr, [x19, #296]
  455d5c:	mov	x0, x19
  455d60:	bl	455900 <ferror@plt+0x52330>
  455d64:	str	x23, [x19, #296]
  455d68:	tbnz	w21, #2, 455de4 <ferror@plt+0x52814>
  455d6c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455d70:	mov	x0, x19
  455d74:	add	x1, x1, #0x4e5
  455d78:	bl	453ae0 <ferror@plt+0x50510>
  455d7c:	ldr	x0, [x20, #8]
  455d80:	ldr	x20, [x0, #16]
  455d84:	ldr	w0, [x20]
  455d88:	cmp	w0, #0x47
  455d8c:	b.ne	455dc4 <ferror@plt+0x527f4>  // b.any
  455d90:	mov	x0, x19
  455d94:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455d98:	add	x1, x1, #0x4d6
  455d9c:	bl	453ae0 <ferror@plt+0x50510>
  455da0:	ldr	w1, [x20, #16]
  455da4:	mov	x0, x19
  455da8:	add	w1, w1, #0x1
  455dac:	bl	453b14 <ferror@plt+0x50544>
  455db0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455db4:	mov	x0, x19
  455db8:	add	x1, x1, #0x4e4
  455dbc:	bl	453ae0 <ferror@plt+0x50510>
  455dc0:	ldr	x20, [x20, #8]
  455dc4:	ldr	w0, [x20]
  455dc8:	bl	4537a8 <ferror@plt+0x501d8>
  455dcc:	cbnz	w0, 455dc0 <ferror@plt+0x527f0>
  455dd0:	mov	x2, x20
  455dd4:	mov	w1, w21
  455dd8:	mov	x0, x19
  455ddc:	bl	455900 <ferror@plt+0x52330>
  455de0:	b	455d0c <ferror@plt+0x5273c>
  455de4:	mov	x0, x19
  455de8:	mov	w1, #0x2e                  	// #46
  455dec:	bl	453a28 <ferror@plt+0x50458>
  455df0:	b	455d7c <ferror@plt+0x527ac>
  455df4:	mov	w1, w21
  455df8:	mov	x0, x19
  455dfc:	bl	45598c <ferror@plt+0x523bc>
  455e00:	str	x22, [x19, #288]
  455e04:	b	455cd8 <ferror@plt+0x52708>
  455e08:	stp	x29, x30, [sp, #-64]!
  455e0c:	mov	x29, sp
  455e10:	stp	x19, x20, [sp, #16]
  455e14:	mov	x19, x0
  455e18:	stp	x21, x22, [sp, #32]
  455e1c:	mov	w21, w1
  455e20:	stp	x23, x24, [sp, #48]
  455e24:	mov	x24, x2
  455e28:	cbnz	x3, 455e74 <ferror@plt+0x528a4>
  455e2c:	mov	x0, x19
  455e30:	mov	w1, #0x20                  	// #32
  455e34:	bl	453a28 <ferror@plt+0x50458>
  455e38:	mov	x0, x19
  455e3c:	mov	w1, #0x5b                  	// #91
  455e40:	bl	453a28 <ferror@plt+0x50458>
  455e44:	ldr	x2, [x24]
  455e48:	cbz	x2, 455e58 <ferror@plt+0x52888>
  455e4c:	mov	w1, w21
  455e50:	mov	x0, x19
  455e54:	bl	455900 <ferror@plt+0x52330>
  455e58:	mov	x0, x19
  455e5c:	mov	w1, #0x5d                  	// #93
  455e60:	ldp	x19, x20, [sp, #16]
  455e64:	ldp	x21, x22, [sp, #32]
  455e68:	ldp	x23, x24, [sp, #48]
  455e6c:	ldp	x29, x30, [sp], #64
  455e70:	b	453a28 <ferror@plt+0x50458>
  455e74:	mov	x20, x3
  455e78:	mov	x0, x3
  455e7c:	ldr	w22, [x0, #16]
  455e80:	cbnz	w22, 455eac <ferror@plt+0x528dc>
  455e84:	ldr	x0, [x0, #8]
  455e88:	ldr	w0, [x0]
  455e8c:	cmp	w0, #0x2a
  455e90:	b.eq	455ee8 <ferror@plt+0x52918>  // b.none
  455e94:	mov	x0, x19
  455e98:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  455e9c:	mov	w23, #0x1                   	// #1
  455ea0:	add	x1, x1, #0x683
  455ea4:	bl	453ae0 <ferror@plt+0x50510>
  455ea8:	b	455eb8 <ferror@plt+0x528e8>
  455eac:	ldr	x0, [x0]
  455eb0:	cbnz	x0, 455e7c <ferror@plt+0x528ac>
  455eb4:	mov	w23, #0x0                   	// #0
  455eb8:	mov	w22, #0x1                   	// #1
  455ebc:	mov	x2, x20
  455ec0:	mov	w1, w21
  455ec4:	mov	x0, x19
  455ec8:	mov	w3, #0x0                   	// #0
  455ecc:	bl	455c84 <ferror@plt+0x526b4>
  455ed0:	cbz	w23, 455ee0 <ferror@plt+0x52910>
  455ed4:	mov	x0, x19
  455ed8:	mov	w1, #0x29                  	// #41
  455edc:	bl	453a28 <ferror@plt+0x50458>
  455ee0:	cbnz	w22, 455e2c <ferror@plt+0x5285c>
  455ee4:	b	455e38 <ferror@plt+0x52868>
  455ee8:	mov	w23, #0x0                   	// #0
  455eec:	b	455ebc <ferror@plt+0x528ec>
  455ef0:	ldr	w4, [x2]
  455ef4:	cmp	w4, #0x32
  455ef8:	b.ne	455f0c <ferror@plt+0x5293c>  // b.any
  455efc:	ldr	x1, [x2, #8]
  455f00:	ldrsw	x2, [x1, #16]
  455f04:	ldr	x1, [x1, #8]
  455f08:	b	453a6c <ferror@plt+0x5049c>
  455f0c:	b	455900 <ferror@plt+0x52330>
  455f10:	stp	x29, x30, [sp, #-48]!
  455f14:	mov	x29, sp
  455f18:	stp	x19, x20, [sp, #16]
  455f1c:	mov	x19, x0
  455f20:	mov	x20, x2
  455f24:	stp	x21, x22, [sp, #32]
  455f28:	mov	w21, w1
  455f2c:	ldr	w1, [x2]
  455f30:	cmp	w1, #0x31
  455f34:	b.hi	455f48 <ferror@plt+0x52978>  // b.pmore
  455f38:	mov	x0, #0x43                  	// #67
  455f3c:	movk	x0, #0x2, lsl #48
  455f40:	lsr	x0, x0, x1
  455f44:	tbnz	w0, #0, 455f84 <ferror@plt+0x529b4>
  455f48:	mov	w22, #0x0                   	// #0
  455f4c:	mov	x0, x19
  455f50:	mov	w1, #0x28                  	// #40
  455f54:	bl	453a28 <ferror@plt+0x50458>
  455f58:	mov	x2, x20
  455f5c:	mov	w1, w21
  455f60:	mov	x0, x19
  455f64:	bl	455900 <ferror@plt+0x52330>
  455f68:	cbnz	w22, 455f8c <ferror@plt+0x529bc>
  455f6c:	mov	x0, x19
  455f70:	mov	w1, #0x29                  	// #41
  455f74:	ldp	x19, x20, [sp, #16]
  455f78:	ldp	x21, x22, [sp, #32]
  455f7c:	ldp	x29, x30, [sp], #48
  455f80:	b	453a28 <ferror@plt+0x50458>
  455f84:	mov	w22, #0x1                   	// #1
  455f88:	b	455f58 <ferror@plt+0x52988>
  455f8c:	ldp	x19, x20, [sp, #16]
  455f90:	ldp	x21, x22, [sp, #32]
  455f94:	ldp	x29, x30, [sp], #48
  455f98:	ret
  455f9c:	stp	x29, x30, [sp, #-64]!
  455fa0:	mov	x29, sp
  455fa4:	stp	x19, x20, [sp, #16]
  455fa8:	mov	x19, x0
  455fac:	mov	w20, w1
  455fb0:	ldr	x0, [x2, #8]
  455fb4:	stp	x21, x22, [sp, #32]
  455fb8:	stp	x23, x24, [sp, #48]
  455fbc:	ldr	x0, [x0, #8]
  455fc0:	ldr	x0, [x0]
  455fc4:	ldrb	w1, [x0]
  455fc8:	cmp	w1, #0x66
  455fcc:	b.ne	456118 <ferror@plt+0x52b48>  // b.any
  455fd0:	ldr	x1, [x2, #16]
  455fd4:	ldp	x22, x21, [x1, #8]
  455fd8:	ldr	w1, [x21]
  455fdc:	cmp	w1, #0x3c
  455fe0:	b.ne	456034 <ferror@plt+0x52a64>  // b.any
  455fe4:	ldr	x23, [x21, #16]
  455fe8:	ldr	x21, [x21, #8]
  455fec:	mov	w1, #0xffffffff            	// #-1
  455ff0:	ldr	w24, [x19, #316]
  455ff4:	str	w1, [x19, #316]
  455ff8:	ldrb	w0, [x0, #1]
  455ffc:	cmp	w0, #0x6c
  456000:	b.eq	456084 <ferror@plt+0x52ab4>  // b.none
  456004:	b.hi	45603c <ferror@plt+0x52a6c>  // b.pmore
  456008:	cmp	w0, #0x4c
  45600c:	b.eq	4560c4 <ferror@plt+0x52af4>  // b.none
  456010:	cmp	w0, #0x52
  456014:	b.eq	4560c4 <ferror@plt+0x52af4>  // b.none
  456018:	mov	w0, #0x1                   	// #1
  45601c:	str	w24, [x19, #316]
  456020:	ldp	x19, x20, [sp, #16]
  456024:	ldp	x21, x22, [sp, #32]
  456028:	ldp	x23, x24, [sp, #48]
  45602c:	ldp	x29, x30, [sp], #64
  456030:	ret
  456034:	mov	x23, #0x0                   	// #0
  456038:	b	455fec <ferror@plt+0x52a1c>
  45603c:	cmp	w0, #0x72
  456040:	b.ne	456018 <ferror@plt+0x52a48>  // b.any
  456044:	mov	x0, x19
  456048:	mov	w1, #0x28                  	// #40
  45604c:	bl	453a28 <ferror@plt+0x50458>
  456050:	mov	x2, x21
  456054:	mov	w1, w20
  456058:	mov	x0, x19
  45605c:	bl	455f10 <ferror@plt+0x52940>
  456060:	mov	x2, x22
  456064:	mov	w1, w20
  456068:	mov	x0, x19
  45606c:	bl	455ef0 <ferror@plt+0x52920>
  456070:	mov	x0, x19
  456074:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  456078:	add	x1, x1, #0x757
  45607c:	bl	453ae0 <ferror@plt+0x50510>
  456080:	b	456018 <ferror@plt+0x52a48>
  456084:	mov	x0, x19
  456088:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45608c:	add	x1, x1, #0x752
  456090:	bl	453ae0 <ferror@plt+0x50510>
  456094:	mov	x2, x22
  456098:	mov	w1, w20
  45609c:	mov	x0, x19
  4560a0:	bl	455ef0 <ferror@plt+0x52920>
  4560a4:	mov	x2, x21
  4560a8:	mov	w1, w20
  4560ac:	mov	x0, x19
  4560b0:	bl	455f10 <ferror@plt+0x52940>
  4560b4:	mov	x0, x19
  4560b8:	mov	w1, #0x29                  	// #41
  4560bc:	bl	453a28 <ferror@plt+0x50458>
  4560c0:	b	456018 <ferror@plt+0x52a48>
  4560c4:	mov	x0, x19
  4560c8:	mov	w1, #0x28                  	// #40
  4560cc:	bl	453a28 <ferror@plt+0x50458>
  4560d0:	mov	x2, x21
  4560d4:	mov	w1, w20
  4560d8:	mov	x0, x19
  4560dc:	bl	455f10 <ferror@plt+0x52940>
  4560e0:	mov	x2, x22
  4560e4:	mov	w1, w20
  4560e8:	mov	x0, x19
  4560ec:	bl	455ef0 <ferror@plt+0x52920>
  4560f0:	mov	x0, x19
  4560f4:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4560f8:	add	x1, x1, #0x753
  4560fc:	bl	453ae0 <ferror@plt+0x50510>
  456100:	mov	x2, x22
  456104:	mov	w1, w20
  456108:	mov	x0, x19
  45610c:	bl	455ef0 <ferror@plt+0x52920>
  456110:	mov	x2, x23
  456114:	b	4560a8 <ferror@plt+0x52ad8>
  456118:	mov	w0, #0x0                   	// #0
  45611c:	b	456020 <ferror@plt+0x52a50>
  456120:	cmp	x0, #0x0
  456124:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  456128:	b.eq	456144 <ferror@plt+0x52b74>  // b.none
  45612c:	cmp	w2, #0x0
  456130:	b.le	456144 <ferror@plt+0x52b74>
  456134:	stp	xzr, x1, [x0]
  456138:	str	w2, [x0, #16]
  45613c:	mov	w0, #0x1                   	// #1
  456140:	ret
  456144:	mov	w0, #0x0                   	// #0
  456148:	b	456140 <ferror@plt+0x52b70>
  45614c:	mov	x4, x1
  456150:	mov	w5, w2
  456154:	stp	x29, x30, [sp, #-16]!
  456158:	mov	x29, sp
  45615c:	bl	4537d8 <ferror@plt+0x50208>
  456160:	mov	x3, x0
  456164:	mov	w2, w5
  456168:	mov	x1, x4
  45616c:	bl	456120 <ferror@plt+0x52b50>
  456170:	cmp	w0, #0x0
  456174:	csel	x0, x3, xzr, ne  // ne = any
  456178:	ldp	x29, x30, [sp], #16
  45617c:	ret
  456180:	stp	x29, x30, [sp, #-48]!
  456184:	mov	x29, sp
  456188:	stp	x19, x20, [sp, #16]
  45618c:	mov	x19, x0
  456190:	add	x0, x0, #0x18
  456194:	str	x21, [sp, #32]
  456198:	bl	453b50 <ferror@plt+0x50580>
  45619c:	cmp	w0, #0x0
  4561a0:	b.le	456280 <ferror@plt+0x52cb0>
  4561a4:	mov	w20, w0
  4561a8:	sxtw	x1, w0
  4561ac:	ldr	x0, [x19, #8]
  4561b0:	ldr	x21, [x19, #24]
  4561b4:	sub	x0, x0, x21
  4561b8:	cmp	x0, w20, sxtw
  4561bc:	b.lt	456278 <ferror@plt+0x52ca8>  // b.tstop
  4561c0:	ldr	w2, [x19, #16]
  4561c4:	add	x0, x21, x1
  4561c8:	str	x0, [x19, #24]
  4561cc:	tbz	w2, #2, 4561e4 <ferror@plt+0x52c14>
  4561d0:	ldrb	w1, [x21, x1]
  4561d4:	cmp	w1, #0x24
  4561d8:	b.ne	4561e4 <ferror@plt+0x52c14>  // b.any
  4561dc:	add	x0, x0, #0x1
  4561e0:	str	x0, [x19, #24]
  4561e4:	cmp	w20, #0x9
  4561e8:	b.le	45626c <ferror@plt+0x52c9c>
  4561ec:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  4561f0:	mov	x0, x21
  4561f4:	add	x1, x1, #0x75c
  4561f8:	mov	x2, #0x8                   	// #8
  4561fc:	bl	4031e0 <memcmp@plt>
  456200:	cbnz	w0, 45626c <ferror@plt+0x52c9c>
  456204:	ldrb	w0, [x21, #8]
  456208:	sub	w0, w0, #0x24
  45620c:	and	w0, w0, #0xff
  456210:	cmp	w0, #0x3b
  456214:	b.hi	45626c <ferror@plt+0x52c9c>  // b.pmore
  456218:	mov	x1, #0x401                 	// #1025
  45621c:	movk	x1, #0x800, lsl #48
  456220:	lsr	x0, x1, x0
  456224:	tbz	w0, #0, 45626c <ferror@plt+0x52c9c>
  456228:	ldrb	w0, [x21, #9]
  45622c:	cmp	w0, #0x4e
  456230:	b.ne	45626c <ferror@plt+0x52c9c>  // b.any
  456234:	ldr	w0, [x19, #72]
  456238:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45623c:	add	x1, x1, #0x765
  456240:	mov	w2, #0x15                  	// #21
  456244:	add	w0, w0, #0x16
  456248:	sub	w20, w0, w20
  45624c:	str	w20, [x19, #72]
  456250:	mov	x0, x19
  456254:	bl	45614c <ferror@plt+0x52b7c>
  456258:	str	x0, [x19, #64]
  45625c:	ldp	x19, x20, [sp, #16]
  456260:	ldr	x21, [sp, #32]
  456264:	ldp	x29, x30, [sp], #48
  456268:	ret
  45626c:	mov	w2, w20
  456270:	mov	x1, x21
  456274:	b	456250 <ferror@plt+0x52c80>
  456278:	mov	x0, #0x0                   	// #0
  45627c:	b	456258 <ferror@plt+0x52c88>
  456280:	mov	x0, #0x0                   	// #0
  456284:	b	45625c <ferror@plt+0x52c8c>
  456288:	stp	x29, x30, [sp, #-48]!
  45628c:	mov	x29, sp
  456290:	str	x21, [sp, #32]
  456294:	ldr	x21, [x0, #64]
  456298:	stp	x19, x20, [sp, #16]
  45629c:	mov	x19, x0
  4562a0:	mov	x20, x1
  4562a4:	ldr	x0, [x19, #24]
  4562a8:	ldrb	w1, [x0]
  4562ac:	cmp	w1, #0x42
  4562b0:	b.eq	4562cc <ferror@plt+0x52cfc>  // b.none
  4562b4:	str	x21, [x19, #64]
  4562b8:	mov	x0, x20
  4562bc:	ldp	x19, x20, [sp, #16]
  4562c0:	ldr	x21, [sp, #32]
  4562c4:	ldp	x29, x30, [sp], #48
  4562c8:	ret
  4562cc:	add	x0, x0, #0x1
  4562d0:	str	x0, [x19, #24]
  4562d4:	mov	x0, x19
  4562d8:	bl	456180 <ferror@plt+0x52bb0>
  4562dc:	mov	x3, x0
  4562e0:	mov	x2, x20
  4562e4:	mov	x0, x19
  4562e8:	mov	w1, #0x4c                  	// #76
  4562ec:	bl	45380c <ferror@plt+0x5023c>
  4562f0:	mov	x20, x0
  4562f4:	b	4562a4 <ferror@plt+0x52cd4>
  4562f8:	stp	x29, x30, [sp, #-32]!
  4562fc:	mov	x29, sp
  456300:	ldr	x2, [x0, #24]
  456304:	str	x19, [sp, #16]
  456308:	mov	x19, x0
  45630c:	ldrb	w0, [x2]
  456310:	cmp	w0, #0x53
  456314:	b.ne	4564d0 <ferror@plt+0x52f00>  // b.any
  456318:	add	x0, x2, #0x1
  45631c:	str	x0, [x19, #24]
  456320:	ldrb	w0, [x2, #1]
  456324:	cbz	w0, 4563f8 <ferror@plt+0x52e28>
  456328:	add	x0, x2, #0x2
  45632c:	str	x0, [x19, #24]
  456330:	ldrb	w0, [x2, #1]
  456334:	sub	w2, w0, #0x30
  456338:	and	w2, w2, #0xff
  45633c:	cmp	w2, #0x2f
  456340:	b.hi	4563f8 <ferror@plt+0x52e28>  // b.pmore
  456344:	mov	w3, #0xfffe03ff            	// #-130049
  456348:	movk	x3, #0x87ff, lsl #32
  45634c:	lsr	x2, x3, x2
  456350:	tbz	w2, #0, 4563f8 <ferror@plt+0x52e28>
  456354:	cmp	w0, #0x5f
  456358:	b.ne	4563d0 <ferror@plt+0x52e00>  // b.any
  45635c:	mov	w0, #0x0                   	// #0
  456360:	ldr	w1, [x19, #56]
  456364:	cmp	w1, w0
  456368:	b.ls	4564d0 <ferror@plt+0x52f00>  // b.plast
  45636c:	ldr	x1, [x19, #48]
  456370:	ldr	x1, [x1, w0, uxtw #3]
  456374:	mov	x0, x1
  456378:	ldr	x19, [sp, #16]
  45637c:	ldp	x29, x30, [sp], #32
  456380:	ret
  456384:	mov	w2, w1
  456388:	sub	w1, w0, #0x30
  45638c:	and	w1, w1, #0xff
  456390:	cmp	w1, #0x9
  456394:	b.hi	4563dc <ferror@plt+0x52e0c>  // b.pmore
  456398:	madd	w0, w2, w3, w0
  45639c:	sub	w1, w0, #0x30
  4563a0:	cmp	w2, w1
  4563a4:	b.hi	4564d0 <ferror@plt+0x52f00>  // b.pmore
  4563a8:	ldr	x2, [x19, #24]
  4563ac:	ldrb	w0, [x2]
  4563b0:	cbz	w0, 456384 <ferror@plt+0x52db4>
  4563b4:	add	x0, x2, #0x1
  4563b8:	str	x0, [x19, #24]
  4563bc:	ldrb	w0, [x2]
  4563c0:	cmp	w0, #0x5f
  4563c4:	b.ne	456384 <ferror@plt+0x52db4>  // b.any
  4563c8:	add	w0, w1, #0x1
  4563cc:	b	456360 <ferror@plt+0x52d90>
  4563d0:	mov	w2, #0x0                   	// #0
  4563d4:	mov	w3, #0x24                  	// #36
  4563d8:	b	456388 <ferror@plt+0x52db8>
  4563dc:	sub	w1, w0, #0x41
  4563e0:	and	w1, w1, #0xff
  4563e4:	cmp	w1, #0x19
  4563e8:	b.hi	4564d0 <ferror@plt+0x52f00>  // b.pmore
  4563ec:	madd	w0, w2, w3, w0
  4563f0:	sub	w1, w0, #0x37
  4563f4:	b	4563a0 <ferror@plt+0x52dd0>
  4563f8:	ldr	w5, [x19, #16]
  4563fc:	and	w1, w1, #0x1
  456400:	ands	w2, w5, #0x8
  456404:	csel	w1, w1, wzr, eq  // eq = none
  456408:	ubfx	x5, x5, #3, #1
  45640c:	cbz	w1, 456428 <ferror@plt+0x52e58>
  456410:	ldr	x1, [x19, #24]
  456414:	ldrb	w1, [x1]
  456418:	sub	w1, w1, #0x43
  45641c:	and	w1, w1, #0xff
  456420:	cmp	w1, #0x1
  456424:	csinc	w5, w5, wzr, hi  // hi = pmore
  456428:	adrp	x4, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  45642c:	add	x4, x4, #0x8a8
  456430:	add	x4, x4, #0x440
  456434:	mov	x1, #0x7                   	// #7
  456438:	ldrb	w2, [x4]
  45643c:	cmp	w2, w0
  456440:	b.ne	4564e4 <ferror@plt+0x52f14>  // b.any
  456444:	ldr	x6, [x4, #40]
  456448:	cbz	x6, 456470 <ferror@plt+0x52ea0>
  45644c:	ldr	w7, [x4, #48]
  456450:	mov	x0, x19
  456454:	bl	4537d8 <ferror@plt+0x50208>
  456458:	cbz	x0, 45646c <ferror@plt+0x52e9c>
  45645c:	mov	w1, #0x18                  	// #24
  456460:	str	w1, [x0]
  456464:	str	x6, [x0, #8]
  456468:	str	w7, [x0, #16]
  45646c:	str	x0, [x19, #64]
  456470:	cbz	w5, 4564d8 <ferror@plt+0x52f08>
  456474:	ldr	x5, [x4, #24]
  456478:	ldr	w4, [x4, #32]
  45647c:	ldr	w0, [x19, #72]
  456480:	add	w0, w0, w4
  456484:	str	w0, [x19, #72]
  456488:	mov	x0, x19
  45648c:	bl	4537d8 <ferror@plt+0x50208>
  456490:	mov	x1, x0
  456494:	cbz	x0, 4564a8 <ferror@plt+0x52ed8>
  456498:	mov	w0, #0x18                  	// #24
  45649c:	str	w0, [x1]
  4564a0:	str	x5, [x1, #8]
  4564a4:	str	w4, [x1, #16]
  4564a8:	ldr	x0, [x19, #24]
  4564ac:	ldrb	w0, [x0]
  4564b0:	cmp	w0, #0x42
  4564b4:	b.ne	456374 <ferror@plt+0x52da4>  // b.any
  4564b8:	mov	x0, x19
  4564bc:	bl	456288 <ferror@plt+0x52cb8>
  4564c0:	mov	x1, x0
  4564c4:	mov	x0, x19
  4564c8:	bl	4538fc <ferror@plt+0x5032c>
  4564cc:	cbnz	w0, 456374 <ferror@plt+0x52da4>
  4564d0:	mov	x1, #0x0                   	// #0
  4564d4:	b	456374 <ferror@plt+0x52da4>
  4564d8:	ldr	x5, [x4, #8]
  4564dc:	ldr	w4, [x4, #16]
  4564e0:	b	45647c <ferror@plt+0x52eac>
  4564e4:	add	x4, x4, #0x38
  4564e8:	subs	x1, x1, #0x1
  4564ec:	b.ne	456438 <ferror@plt+0x52e68>  // b.any
  4564f0:	b	4564d0 <ferror@plt+0x52f00>
  4564f4:	cmp	x0, #0x0
  4564f8:	ccmp	w1, #0x0, #0x1, ne  // ne = any
  4564fc:	b.lt	45651c <ferror@plt+0x52f4c>  // b.tstop
  456500:	cbz	x2, 45651c <ferror@plt+0x52f4c>
  456504:	mov	x3, #0x33                  	// #51
  456508:	str	x3, [x0]
  45650c:	str	w1, [x0, #8]
  456510:	str	x2, [x0, #16]
  456514:	mov	w0, #0x1                   	// #1
  456518:	ret
  45651c:	mov	w0, #0x0                   	// #0
  456520:	b	456518 <ferror@plt+0x52f48>
  456524:	cmp	x0, #0x0
  456528:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  45652c:	b.eq	456554 <ferror@plt+0x52f84>  // b.none
  456530:	sub	w3, w1, #0x1
  456534:	cmp	w3, #0x4
  456538:	b.hi	456554 <ferror@plt+0x52f84>  // b.pmore
  45653c:	mov	x3, #0x7                   	// #7
  456540:	str	x3, [x0]
  456544:	str	w1, [x0, #8]
  456548:	str	x2, [x0, #16]
  45654c:	mov	w0, #0x1                   	// #1
  456550:	ret
  456554:	mov	w0, #0x0                   	// #0
  456558:	b	456550 <ferror@plt+0x52f80>
  45655c:	cmp	x0, #0x0
  456560:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  456564:	b.eq	45658c <ferror@plt+0x52fbc>  // b.none
  456568:	sub	w3, w1, #0x1
  45656c:	cmp	w3, #0x4
  456570:	b.hi	45658c <ferror@plt+0x52fbc>  // b.pmore
  456574:	mov	x3, #0x8                   	// #8
  456578:	str	x3, [x0]
  45657c:	str	w1, [x0, #8]
  456580:	str	x2, [x0, #16]
  456584:	mov	w0, #0x1                   	// #1
  456588:	ret
  45658c:	mov	w0, #0x0                   	// #0
  456590:	b	456588 <ferror@plt+0x52fb8>
  456594:	stp	x29, x30, [sp, #-80]!
  456598:	mov	x29, sp
  45659c:	ldr	x3, [x0, #24]
  4565a0:	stp	x19, x20, [sp, #16]
  4565a4:	mov	x19, x0
  4565a8:	mov	x0, x3
  4565ac:	stp	x21, x22, [sp, #32]
  4565b0:	str	x23, [sp, #48]
  4565b4:	bl	453d98 <ferror@plt+0x507c8>
  4565b8:	cbz	w0, 456654 <ferror@plt+0x53084>
  4565bc:	add	x1, sp, #0x48
  4565c0:	mov	x0, x19
  4565c4:	mov	w2, #0x0                   	// #0
  4565c8:	bl	4587f8 <ferror@plt+0x55228>
  4565cc:	mov	x20, x0
  4565d0:	cbnz	x0, 4565ec <ferror@plt+0x5301c>
  4565d4:	mov	x0, #0x0                   	// #0
  4565d8:	ldp	x19, x20, [sp, #16]
  4565dc:	ldp	x21, x22, [sp, #32]
  4565e0:	ldr	x23, [sp, #48]
  4565e4:	ldp	x29, x30, [sp], #80
  4565e8:	ret
  4565ec:	ldr	x0, [x19, #24]
  4565f0:	ldrb	w0, [x0]
  4565f4:	cmp	w0, #0x46
  4565f8:	mov	x0, x19
  4565fc:	b.ne	45664c <ferror@plt+0x5307c>  // b.any
  456600:	bl	45729c <ferror@plt+0x53ccc>
  456604:	str	x0, [x20]
  456608:	ldr	x0, [x20]
  45660c:	cbz	x0, 4565d4 <ferror@plt+0x53004>
  456610:	ldr	w1, [x0]
  456614:	sub	w1, w1, #0x1f
  456618:	cmp	w1, #0x1
  45661c:	b.hi	456638 <ferror@plt+0x53068>  // b.pmore
  456620:	ldr	x2, [sp, #72]
  456624:	ldr	x1, [x0, #8]
  456628:	str	x2, [x0, #8]
  45662c:	ldr	x0, [x20]
  456630:	str	x0, [sp, #72]
  456634:	str	x1, [x20]
  456638:	ldr	x1, [sp, #72]
  45663c:	mov	x0, x19
  456640:	bl	4538fc <ferror@plt+0x5032c>
  456644:	cbnz	w0, 4566bc <ferror@plt+0x530ec>
  456648:	b	4565d4 <ferror@plt+0x53004>
  45664c:	bl	456594 <ferror@plt+0x52fc4>
  456650:	b	456604 <ferror@plt+0x53034>
  456654:	ldrb	w1, [x3]
  456658:	sub	w2, w1, #0x30
  45665c:	cmp	w2, #0x4a
  456660:	b.hi	4565d4 <ferror@plt+0x53004>  // b.pmore
  456664:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456668:	add	x0, x0, #0x794
  45666c:	ldrh	w0, [x0, w2, uxtw #1]
  456670:	adr	x2, 45667c <ferror@plt+0x530ac>
  456674:	add	x0, x2, w0, sxth #2
  456678:	br	x0
  45667c:	sub	w1, w1, #0x61
  456680:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456684:	add	x0, x0, #0x8a8
  456688:	sbfiz	x1, x1, #5, #32
  45668c:	add	x1, x0, x1
  456690:	mov	x0, x19
  456694:	bl	45387c <ferror@plt+0x502ac>
  456698:	str	x0, [sp, #72]
  45669c:	ldr	x1, [x0, #8]
  4566a0:	ldr	w0, [x19, #72]
  4566a4:	ldr	w1, [x1, #8]
  4566a8:	add	w0, w0, w1
  4566ac:	str	w0, [x19, #72]
  4566b0:	ldr	x0, [x19, #24]
  4566b4:	add	x0, x0, #0x1
  4566b8:	str	x0, [x19, #24]
  4566bc:	ldr	x0, [sp, #72]
  4566c0:	b	4565d8 <ferror@plt+0x53008>
  4566c4:	add	x3, x3, #0x1
  4566c8:	str	x3, [x19, #24]
  4566cc:	mov	x0, x19
  4566d0:	bl	456180 <ferror@plt+0x52bb0>
  4566d4:	mov	x2, x0
  4566d8:	mov	x3, #0x0                   	// #0
  4566dc:	mov	w1, #0x28                  	// #40
  4566e0:	mov	x0, x19
  4566e4:	bl	45380c <ferror@plt+0x5023c>
  4566e8:	b	4566f4 <ferror@plt+0x53124>
  4566ec:	mov	x0, x19
  4566f0:	bl	45729c <ferror@plt+0x53ccc>
  4566f4:	str	x0, [sp, #72]
  4566f8:	b	456638 <ferror@plt+0x53068>
  4566fc:	mov	x0, x19
  456700:	bl	457354 <ferror@plt+0x53d84>
  456704:	b	4566f4 <ferror@plt+0x53124>
  456708:	add	x1, x3, #0x1
  45670c:	str	x1, [x19, #24]
  456710:	ldrb	w0, [x3, #1]
  456714:	cmp	w0, #0x5f
  456718:	b.eq	456774 <ferror@plt+0x531a4>  // b.none
  45671c:	sub	w0, w0, #0x30
  456720:	and	w0, w0, #0xff
  456724:	cmp	w0, #0x9
  456728:	b.hi	456768 <ferror@plt+0x53198>  // b.pmore
  45672c:	ldr	x0, [x19, #24]
  456730:	add	x2, x0, #0x1
  456734:	str	x2, [x19, #24]
  456738:	ldrb	w0, [x0, #1]
  45673c:	sub	w0, w0, #0x30
  456740:	and	w0, w0, #0xff
  456744:	cmp	w0, #0x9
  456748:	b.ls	45672c <ferror@plt+0x5315c>  // b.plast
  45674c:	sub	w2, w2, w1
  456750:	mov	x0, x19
  456754:	bl	45614c <ferror@plt+0x52b7c>
  456758:	mov	x20, x0
  45675c:	cbnz	x0, 456778 <ferror@plt+0x531a8>
  456760:	mov	x0, #0x0                   	// #0
  456764:	b	4566f4 <ferror@plt+0x53124>
  456768:	mov	x0, x19
  45676c:	bl	45859c <ferror@plt+0x54fcc>
  456770:	b	456758 <ferror@plt+0x53188>
  456774:	mov	x20, #0x0                   	// #0
  456778:	ldr	x0, [x19, #24]
  45677c:	ldrb	w1, [x0]
  456780:	cmp	w1, #0x5f
  456784:	b.ne	456760 <ferror@plt+0x53190>  // b.any
  456788:	add	x0, x0, #0x1
  45678c:	str	x0, [x19, #24]
  456790:	mov	x0, x19
  456794:	bl	456594 <ferror@plt+0x52fc4>
  456798:	mov	x3, x0
  45679c:	mov	x2, x20
  4567a0:	mov	w1, #0x2a                  	// #42
  4567a4:	b	4566e0 <ferror@plt+0x53110>
  4567a8:	add	x3, x3, #0x1
  4567ac:	str	x3, [x19, #24]
  4567b0:	mov	x0, x19
  4567b4:	bl	456594 <ferror@plt+0x52fc4>
  4567b8:	mov	x20, x0
  4567bc:	cbz	x0, 456760 <ferror@plt+0x53190>
  4567c0:	mov	x0, x19
  4567c4:	bl	456594 <ferror@plt+0x52fc4>
  4567c8:	mov	x3, x0
  4567cc:	cbz	x0, 456760 <ferror@plt+0x53190>
  4567d0:	mov	x2, x20
  4567d4:	mov	w1, #0x2b                  	// #43
  4567d8:	b	4566e0 <ferror@plt+0x53110>
  4567dc:	mov	x0, x19
  4567e0:	bl	453c98 <ferror@plt+0x506c8>
  4567e4:	ldr	x20, [x19, #24]
  4567e8:	str	x0, [sp, #72]
  4567ec:	mov	x1, x0
  4567f0:	ldrb	w0, [x20]
  4567f4:	cmp	w0, #0x49
  4567f8:	b.ne	456638 <ferror@plt+0x53068>  // b.any
  4567fc:	ldr	w0, [x19, #80]
  456800:	cbnz	w0, 456828 <ferror@plt+0x53258>
  456804:	mov	x0, x19
  456808:	bl	4538fc <ferror@plt+0x5032c>
  45680c:	cbz	w0, 4565d4 <ferror@plt+0x53004>
  456810:	ldr	x20, [sp, #72]
  456814:	mov	x0, x19
  456818:	bl	458718 <ferror@plt+0x55148>
  45681c:	mov	x3, x0
  456820:	mov	x2, x20
  456824:	b	456868 <ferror@plt+0x53298>
  456828:	ldr	w23, [x19, #40]
  45682c:	mov	x0, x19
  456830:	ldr	w22, [x19, #56]
  456834:	ldr	w21, [x19, #72]
  456838:	bl	458718 <ferror@plt+0x55148>
  45683c:	mov	x4, x0
  456840:	ldr	x0, [x19, #24]
  456844:	ldrb	w0, [x0]
  456848:	cmp	w0, #0x49
  45684c:	b.ne	456870 <ferror@plt+0x532a0>  // b.any
  456850:	ldr	x1, [sp, #72]
  456854:	mov	x0, x19
  456858:	bl	4538fc <ferror@plt+0x5032c>
  45685c:	cbz	w0, 4565d4 <ferror@plt+0x53004>
  456860:	ldr	x2, [sp, #72]
  456864:	mov	x3, x4
  456868:	mov	w1, #0x4                   	// #4
  45686c:	b	4566e0 <ferror@plt+0x53110>
  456870:	str	x20, [x19, #24]
  456874:	str	w23, [x19, #40]
  456878:	str	w22, [x19, #56]
  45687c:	str	w21, [x19, #72]
  456880:	b	456638 <ferror@plt+0x53068>
  456884:	ldrb	w0, [x3, #1]
  456888:	sub	w0, w0, #0x30
  45688c:	and	w0, w0, #0xff
  456890:	cmp	w0, #0x2f
  456894:	b.hi	4568a8 <ferror@plt+0x532d8>  // b.pmore
  456898:	mov	w1, #0xfffe03ff            	// #-130049
  45689c:	movk	x1, #0x87ff, lsl #32
  4568a0:	lsr	x0, x1, x0
  4568a4:	tbnz	w0, #0, 4568c8 <ferror@plt+0x532f8>
  4568a8:	mov	x0, x19
  4568ac:	bl	457354 <ferror@plt+0x53d84>
  4568b0:	str	x0, [sp, #72]
  4568b4:	cbz	x0, 456638 <ferror@plt+0x53068>
  4568b8:	ldr	w0, [x0]
  4568bc:	cmp	w0, #0x18
  4568c0:	b.ne	456638 <ferror@plt+0x53068>  // b.any
  4568c4:	b	4566bc <ferror@plt+0x530ec>
  4568c8:	mov	x0, x19
  4568cc:	mov	w1, #0x0                   	// #0
  4568d0:	bl	4562f8 <ferror@plt+0x52d28>
  4568d4:	mov	x20, x0
  4568d8:	ldr	x0, [x19, #24]
  4568dc:	str	x20, [sp, #72]
  4568e0:	ldrb	w0, [x0]
  4568e4:	cmp	w0, #0x49
  4568e8:	b.ne	4566bc <ferror@plt+0x530ec>  // b.any
  4568ec:	b	456814 <ferror@plt+0x53244>
  4568f0:	add	x3, x3, #0x1
  4568f4:	str	x3, [x19, #24]
  4568f8:	mov	x0, x19
  4568fc:	bl	456594 <ferror@plt+0x52fc4>
  456900:	mov	x2, x0
  456904:	mov	x3, #0x0                   	// #0
  456908:	mov	w1, #0x24                  	// #36
  45690c:	b	4566e0 <ferror@plt+0x53110>
  456910:	add	x3, x3, #0x1
  456914:	str	x3, [x19, #24]
  456918:	mov	x0, x19
  45691c:	bl	456594 <ferror@plt+0x52fc4>
  456920:	mov	x2, x0
  456924:	mov	x3, #0x0                   	// #0
  456928:	mov	w1, #0x22                  	// #34
  45692c:	b	4566e0 <ferror@plt+0x53110>
  456930:	add	x3, x3, #0x1
  456934:	str	x3, [x19, #24]
  456938:	mov	x0, x19
  45693c:	bl	456594 <ferror@plt+0x52fc4>
  456940:	mov	x2, x0
  456944:	mov	x3, #0x0                   	// #0
  456948:	mov	w1, #0x23                  	// #35
  45694c:	b	4566e0 <ferror@plt+0x53110>
  456950:	add	x3, x3, #0x1
  456954:	str	x3, [x19, #24]
  456958:	mov	x0, x19
  45695c:	bl	456594 <ferror@plt+0x52fc4>
  456960:	mov	x2, x0
  456964:	mov	x3, #0x0                   	// #0
  456968:	mov	w1, #0x25                  	// #37
  45696c:	b	4566e0 <ferror@plt+0x53110>
  456970:	add	x3, x3, #0x1
  456974:	str	x3, [x19, #24]
  456978:	mov	x0, x19
  45697c:	bl	456594 <ferror@plt+0x52fc4>
  456980:	mov	x2, x0
  456984:	mov	x3, #0x0                   	// #0
  456988:	mov	w1, #0x26                  	// #38
  45698c:	b	4566e0 <ferror@plt+0x53110>
  456990:	add	x3, x3, #0x1
  456994:	str	x3, [x19, #24]
  456998:	mov	x0, x19
  45699c:	bl	456180 <ferror@plt+0x52bb0>
  4569a0:	mov	x20, x0
  4569a4:	ldr	x0, [x19, #24]
  4569a8:	str	x20, [sp, #72]
  4569ac:	ldrb	w0, [x0]
  4569b0:	cmp	w0, #0x49
  4569b4:	b.ne	4569d8 <ferror@plt+0x53408>  // b.any
  4569b8:	mov	x0, x19
  4569bc:	bl	458718 <ferror@plt+0x55148>
  4569c0:	mov	x2, x20
  4569c4:	mov	x3, x0
  4569c8:	mov	w1, #0x4                   	// #4
  4569cc:	mov	x0, x19
  4569d0:	bl	45380c <ferror@plt+0x5023c>
  4569d4:	str	x0, [sp, #72]
  4569d8:	mov	x0, x19
  4569dc:	bl	456594 <ferror@plt+0x52fc4>
  4569e0:	mov	w1, #0x21                  	// #33
  4569e4:	mov	x2, x0
  4569e8:	ldr	x3, [sp, #72]
  4569ec:	b	4566e0 <ferror@plt+0x53110>
  4569f0:	add	x0, x3, #0x1
  4569f4:	str	x0, [x19, #24]
  4569f8:	ldrb	w0, [x3, #1]
  4569fc:	cbz	w0, 4565d4 <ferror@plt+0x53004>
  456a00:	add	x0, x3, #0x2
  456a04:	str	x0, [x19, #24]
  456a08:	ldrb	w0, [x3, #1]
  456a0c:	cmp	w0, #0x46
  456a10:	b.eq	456b68 <ferror@plt+0x53598>  // b.none
  456a14:	sub	w0, w0, #0x54
  456a18:	and	w1, w0, #0xff
  456a1c:	cmp	w1, #0x22
  456a20:	b.hi	4565d4 <ferror@plt+0x53004>  // b.pmore
  456a24:	cmp	w0, #0x22
  456a28:	b.hi	4565d4 <ferror@plt+0x53004>  // b.pmore
  456a2c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456a30:	add	x1, x1, #0x82c
  456a34:	ldrh	w0, [x1, w0, uxtw #1]
  456a38:	adr	x1, 456a44 <ferror@plt+0x53474>
  456a3c:	add	x0, x1, w0, sxth #2
  456a40:	br	x0
  456a44:	mov	x0, x19
  456a48:	bl	45859c <ferror@plt+0x54fcc>
  456a4c:	mov	x3, #0x0                   	// #0
  456a50:	mov	x2, x0
  456a54:	mov	w1, #0x43                  	// #67
  456a58:	mov	x0, x19
  456a5c:	bl	45380c <ferror@plt+0x5023c>
  456a60:	str	x0, [sp, #72]
  456a64:	cbz	x0, 456638 <ferror@plt+0x53068>
  456a68:	ldr	x0, [x19, #24]
  456a6c:	ldrb	w1, [x0]
  456a70:	cbnz	w1, 456a7c <ferror@plt+0x534ac>
  456a74:	str	xzr, [sp, #72]
  456a78:	b	456638 <ferror@plt+0x53068>
  456a7c:	add	x1, x0, #0x1
  456a80:	str	x1, [x19, #24]
  456a84:	ldrb	w0, [x0]
  456a88:	cmp	w0, #0x45
  456a8c:	b.ne	456a74 <ferror@plt+0x534a4>  // b.any
  456a90:	b	456638 <ferror@plt+0x53068>
  456a94:	mov	x0, x19
  456a98:	bl	456594 <ferror@plt+0x52fc4>
  456a9c:	mov	x3, #0x0                   	// #0
  456aa0:	mov	x2, x0
  456aa4:	mov	w1, #0x4b                  	// #75
  456aa8:	b	4566e0 <ferror@plt+0x53110>
  456aac:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x20c10>
  456ab0:	add	x1, x1, #0x8d3
  456ab4:	mov	w2, #0x4                   	// #4
  456ab8:	mov	x0, x19
  456abc:	bl	45614c <ferror@plt+0x52b7c>
  456ac0:	str	x0, [sp, #72]
  456ac4:	b	4566bc <ferror@plt+0x530ec>
  456ac8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  456acc:	mov	w2, #0xe                   	// #14
  456ad0:	add	x1, x1, #0x77b
  456ad4:	b	456ab8 <ferror@plt+0x534e8>
  456ad8:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456adc:	add	x1, x1, #0x8a8
  456ae0:	add	x1, x1, #0x340
  456ae4:	mov	x0, x19
  456ae8:	bl	45387c <ferror@plt+0x502ac>
  456aec:	str	x0, [sp, #72]
  456af0:	ldr	x1, [x0, #8]
  456af4:	ldr	w0, [x19, #72]
  456af8:	ldr	w1, [x1, #8]
  456afc:	add	w0, w0, w1
  456b00:	str	w0, [x19, #72]
  456b04:	b	4566bc <ferror@plt+0x530ec>
  456b08:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456b0c:	add	x1, x1, #0x8a8
  456b10:	add	x1, x1, #0x360
  456b14:	b	456ae4 <ferror@plt+0x53514>
  456b18:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456b1c:	add	x1, x1, #0x8a8
  456b20:	add	x1, x1, #0x380
  456b24:	b	456ae4 <ferror@plt+0x53514>
  456b28:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456b2c:	add	x1, x1, #0x8a8
  456b30:	add	x1, x1, #0x3a0
  456b34:	b	456ae4 <ferror@plt+0x53514>
  456b38:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456b3c:	add	x1, x1, #0x8a8
  456b40:	add	x1, x1, #0x3c0
  456b44:	b	456ae4 <ferror@plt+0x53514>
  456b48:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456b4c:	add	x1, x1, #0x8a8
  456b50:	add	x1, x1, #0x3e0
  456b54:	b	456ae4 <ferror@plt+0x53514>
  456b58:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456b5c:	add	x1, x1, #0x8a8
  456b60:	add	x1, x1, #0x400
  456b64:	b	456ae4 <ferror@plt+0x53514>
  456b68:	mov	x0, x19
  456b6c:	bl	4537d8 <ferror@plt+0x50208>
  456b70:	mov	w1, #0x2c                  	// #44
  456b74:	str	x0, [sp, #72]
  456b78:	str	w1, [x0]
  456b7c:	ldr	x1, [x19, #24]
  456b80:	ldrb	w1, [x1]
  456b84:	sub	w1, w1, #0x30
  456b88:	and	w1, w1, #0xff
  456b8c:	cmp	w1, #0x9
  456b90:	cset	w2, ls  // ls = plast
  456b94:	strh	w2, [x0, #16]
  456b98:	b.hi	456ba4 <ferror@plt+0x535d4>  // b.pmore
  456b9c:	add	x0, x19, #0x18
  456ba0:	bl	453b50 <ferror@plt+0x50580>
  456ba4:	ldr	x20, [sp, #72]
  456ba8:	mov	x0, x19
  456bac:	bl	456594 <ferror@plt+0x52fc4>
  456bb0:	str	x0, [x20, #8]
  456bb4:	ldr	x0, [sp, #72]
  456bb8:	ldr	x0, [x0, #8]
  456bbc:	cbz	x0, 4565d4 <ferror@plt+0x53004>
  456bc0:	add	x0, x19, #0x18
  456bc4:	bl	453b50 <ferror@plt+0x50580>
  456bc8:	ldr	x1, [x19, #24]
  456bcc:	ldrb	w0, [x1]
  456bd0:	cbz	w0, 456be0 <ferror@plt+0x53610>
  456bd4:	add	x0, x1, #0x1
  456bd8:	str	x0, [x19, #24]
  456bdc:	ldrb	w0, [x1]
  456be0:	cmp	w0, #0x73
  456be4:	ldr	x0, [sp, #72]
  456be8:	cset	w1, eq  // eq = none
  456bec:	strh	w1, [x0, #18]
  456bf0:	b	4566bc <ferror@plt+0x530ec>
  456bf4:	ldrb	w0, [x3, #2]
  456bf8:	cmp	w0, #0x5f
  456bfc:	b.ne	456c58 <ferror@plt+0x53688>  // b.any
  456c00:	add	x3, x3, #0x3
  456c04:	str	x3, [x19, #24]
  456c08:	mov	x0, x19
  456c0c:	bl	45859c <ferror@plt+0x54fcc>
  456c10:	mov	x20, x0
  456c14:	cbz	x0, 456c50 <ferror@plt+0x53680>
  456c18:	ldr	x0, [x19, #24]
  456c1c:	ldrb	w1, [x0]
  456c20:	cmp	w1, #0x5f
  456c24:	b.ne	456c64 <ferror@plt+0x53694>  // b.any
  456c28:	add	x0, x0, #0x1
  456c2c:	str	x0, [x19, #24]
  456c30:	mov	x0, x19
  456c34:	bl	456594 <ferror@plt+0x52fc4>
  456c38:	mov	x3, x0
  456c3c:	mov	x2, x20
  456c40:	mov	x0, x19
  456c44:	mov	w1, #0x2d                  	// #45
  456c48:	bl	45380c <ferror@plt+0x5023c>
  456c4c:	mov	x20, x0
  456c50:	str	x20, [sp, #72]
  456c54:	b	456638 <ferror@plt+0x53068>
  456c58:	mov	x0, x19
  456c5c:	bl	453bd8 <ferror@plt+0x50608>
  456c60:	b	456c10 <ferror@plt+0x53640>
  456c64:	mov	x20, #0x0                   	// #0
  456c68:	b	456c50 <ferror@plt+0x53680>
  456c6c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456c70:	add	x1, x1, #0x8a8
  456c74:	add	x1, x1, #0x420
  456c78:	b	456ae4 <ferror@plt+0x53514>
  456c7c:	stp	x29, x30, [sp, #-64]!
  456c80:	mov	x29, sp
  456c84:	stp	x19, x20, [sp, #16]
  456c88:	mov	x19, x0
  456c8c:	add	x20, sp, #0x38
  456c90:	str	x21, [sp, #32]
  456c94:	mov	w21, #0x4f                  	// #79
  456c98:	str	xzr, [sp, #56]
  456c9c:	ldr	x1, [x19, #24]
  456ca0:	ldrb	w0, [x1]
  456ca4:	cmp	w0, #0x45
  456ca8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  456cac:	b.eq	456d14 <ferror@plt+0x53744>  // b.none
  456cb0:	cmp	w0, #0x2e
  456cb4:	b.eq	456d14 <ferror@plt+0x53744>  // b.none
  456cb8:	cmp	w0, #0x52
  456cbc:	ccmp	w0, w21, #0x4, ne  // ne = any
  456cc0:	b.ne	456cd0 <ferror@plt+0x53700>  // b.any
  456cc4:	ldrb	w0, [x1, #1]
  456cc8:	cmp	w0, #0x45
  456ccc:	b.eq	456d14 <ferror@plt+0x53744>  // b.none
  456cd0:	mov	x0, x19
  456cd4:	bl	456594 <ferror@plt+0x52fc4>
  456cd8:	mov	x2, x0
  456cdc:	cbnz	x0, 456cf4 <ferror@plt+0x53724>
  456ce0:	mov	x0, #0x0                   	// #0
  456ce4:	ldp	x19, x20, [sp, #16]
  456ce8:	ldr	x21, [sp, #32]
  456cec:	ldp	x29, x30, [sp], #64
  456cf0:	ret
  456cf4:	mov	x0, x19
  456cf8:	mov	x3, #0x0                   	// #0
  456cfc:	mov	w1, #0x2e                  	// #46
  456d00:	bl	45380c <ferror@plt+0x5023c>
  456d04:	str	x0, [x20]
  456d08:	cbz	x0, 456ce0 <ferror@plt+0x53710>
  456d0c:	add	x20, x0, #0x10
  456d10:	b	456c9c <ferror@plt+0x536cc>
  456d14:	ldr	x0, [sp, #56]
  456d18:	cbz	x0, 456ce0 <ferror@plt+0x53710>
  456d1c:	ldr	x1, [x0, #16]
  456d20:	cbnz	x1, 456ce4 <ferror@plt+0x53714>
  456d24:	ldr	x1, [x0, #8]
  456d28:	ldr	w2, [x1]
  456d2c:	cmp	w2, #0x27
  456d30:	b.ne	456ce4 <ferror@plt+0x53714>  // b.any
  456d34:	ldr	x2, [x1, #8]
  456d38:	ldr	w1, [x2, #28]
  456d3c:	cmp	w1, #0x9
  456d40:	b.ne	456ce4 <ferror@plt+0x53714>  // b.any
  456d44:	ldr	w2, [x2, #8]
  456d48:	ldr	w1, [x19, #72]
  456d4c:	sub	w1, w1, w2
  456d50:	str	w1, [x19, #72]
  456d54:	str	xzr, [x0, #8]
  456d58:	b	456ce4 <ferror@plt+0x53714>
  456d5c:	stp	x29, x30, [sp, #-32]!
  456d60:	mov	x29, sp
  456d64:	stp	x19, x20, [sp, #16]
  456d68:	mov	x19, x0
  456d6c:	ldr	x0, [x0, #24]
  456d70:	ldrb	w2, [x0]
  456d74:	cbz	w2, 456d84 <ferror@plt+0x537b4>
  456d78:	add	x1, x0, #0x1
  456d7c:	str	x1, [x19, #24]
  456d80:	ldrb	w2, [x0]
  456d84:	ldr	x0, [x19, #24]
  456d88:	ldrb	w3, [x0]
  456d8c:	cbz	w3, 456e48 <ferror@plt+0x53878>
  456d90:	add	x1, x0, #0x1
  456d94:	str	x1, [x19, #24]
  456d98:	cmp	w2, #0x76
  456d9c:	ldrb	w3, [x0]
  456da0:	b.ne	456df0 <ferror@plt+0x53820>  // b.any
  456da4:	sub	w20, w3, #0x30
  456da8:	and	w0, w20, #0xff
  456dac:	cmp	w0, #0x9
  456db0:	b.hi	456e48 <ferror@plt+0x53878>  // b.pmore
  456db4:	mov	x0, x19
  456db8:	bl	456180 <ferror@plt+0x52bb0>
  456dbc:	mov	x5, x0
  456dc0:	mov	x0, x19
  456dc4:	bl	4537d8 <ferror@plt+0x50208>
  456dc8:	mov	x4, x0
  456dcc:	mov	x2, x5
  456dd0:	mov	w1, w20
  456dd4:	bl	4564f4 <ferror@plt+0x52f24>
  456dd8:	cbnz	w0, 456de0 <ferror@plt+0x53810>
  456ddc:	mov	x4, #0x0                   	// #0
  456de0:	mov	x0, x4
  456de4:	ldp	x19, x20, [sp, #16]
  456de8:	ldp	x29, x30, [sp], #32
  456dec:	ret
  456df0:	cmp	w2, #0x63
  456df4:	mov	w0, #0x76                  	// #118
  456df8:	ccmp	w3, w0, #0x0, eq  // eq = none
  456dfc:	b.ne	456e48 <ferror@plt+0x53878>  // b.any
  456e00:	ldp	w0, w20, [x19, #76]
  456e04:	cmp	w0, #0x0
  456e08:	cset	w0, eq  // eq = none
  456e0c:	str	w0, [x19, #80]
  456e10:	mov	x0, x19
  456e14:	bl	456594 <ferror@plt+0x52fc4>
  456e18:	mov	x2, x0
  456e1c:	ldr	w0, [x19, #80]
  456e20:	mov	x3, #0x0                   	// #0
  456e24:	cbz	w0, 456e40 <ferror@plt+0x53870>
  456e28:	mov	w1, #0x35                  	// #53
  456e2c:	mov	x0, x19
  456e30:	bl	45380c <ferror@plt+0x5023c>
  456e34:	mov	x4, x0
  456e38:	str	w20, [x19, #80]
  456e3c:	b	456de0 <ferror@plt+0x53810>
  456e40:	mov	w1, #0x34                  	// #52
  456e44:	b	456e2c <ferror@plt+0x5385c>
  456e48:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  456e4c:	add	x1, x1, #0x8a8
  456e50:	add	x1, x1, #0x5c8
  456e54:	mov	w5, #0x43                  	// #67
  456e58:	mov	w4, #0x0                   	// #0
  456e5c:	mov	w7, #0x2                   	// #2
  456e60:	mov	w8, #0x18                  	// #24
  456e64:	sub	w0, w5, w4
  456e68:	sdiv	w0, w0, w7
  456e6c:	add	w0, w0, w4
  456e70:	smull	x6, w0, w8
  456e74:	add	x9, x1, x6
  456e78:	ldr	x6, [x1, x6]
  456e7c:	ldrb	w10, [x6]
  456e80:	cmp	w10, w2
  456e84:	b.ne	456eb4 <ferror@plt+0x538e4>  // b.any
  456e88:	ldrb	w6, [x6, #1]
  456e8c:	cmp	w6, w3
  456e90:	b.ne	456eb4 <ferror@plt+0x538e4>  // b.any
  456e94:	mov	x0, x19
  456e98:	bl	4537d8 <ferror@plt+0x50208>
  456e9c:	mov	x4, x0
  456ea0:	cbz	x0, 456de0 <ferror@plt+0x53810>
  456ea4:	mov	w0, #0x32                  	// #50
  456ea8:	str	w0, [x4]
  456eac:	str	x9, [x4, #8]
  456eb0:	b	456de0 <ferror@plt+0x53810>
  456eb4:	b.hi	456ec0 <ferror@plt+0x538f0>  // b.pmore
  456eb8:	add	w4, w0, #0x1
  456ebc:	mov	w0, w5
  456ec0:	cmp	w4, w0
  456ec4:	b.eq	456ddc <ferror@plt+0x5380c>  // b.none
  456ec8:	mov	w5, w0
  456ecc:	b	456e64 <ferror@plt+0x53894>
  456ed0:	stp	x29, x30, [sp, #-48]!
  456ed4:	mov	x29, sp
  456ed8:	ldr	x3, [x0, #24]
  456edc:	stp	x19, x20, [sp, #16]
  456ee0:	mov	x20, x0
  456ee4:	str	x21, [sp, #32]
  456ee8:	ldrb	w1, [x3]
  456eec:	sub	w2, w1, #0x30
  456ef0:	and	w2, w2, #0xff
  456ef4:	cmp	w2, #0x9
  456ef8:	b.hi	456f2c <ferror@plt+0x5395c>  // b.pmore
  456efc:	bl	456180 <ferror@plt+0x52bb0>
  456f00:	mov	x19, x0
  456f04:	ldr	x0, [x20, #24]
  456f08:	ldrb	w0, [x0]
  456f0c:	cmp	w0, #0x42
  456f10:	b.ne	45711c <ferror@plt+0x53b4c>  // b.any
  456f14:	mov	x1, x19
  456f18:	mov	x0, x20
  456f1c:	ldp	x19, x20, [sp, #16]
  456f20:	ldr	x21, [sp, #32]
  456f24:	ldp	x29, x30, [sp], #48
  456f28:	b	456288 <ferror@plt+0x52cb8>
  456f2c:	sub	w2, w1, #0x61
  456f30:	and	w2, w2, #0xff
  456f34:	cmp	w2, #0x19
  456f38:	b.hi	456fc0 <ferror@plt+0x539f0>  // b.pmore
  456f3c:	cmp	w1, #0x6f
  456f40:	b.ne	456f58 <ferror@plt+0x53988>  // b.any
  456f44:	ldrb	w0, [x3, #1]
  456f48:	cmp	w0, #0x6e
  456f4c:	b.ne	456f58 <ferror@plt+0x53988>  // b.any
  456f50:	add	x3, x3, #0x2
  456f54:	str	x3, [x20, #24]
  456f58:	mov	x0, x20
  456f5c:	bl	456d5c <ferror@plt+0x5378c>
  456f60:	mov	x19, x0
  456f64:	cbz	x0, 457010 <ferror@plt+0x53a40>
  456f68:	ldr	w0, [x0]
  456f6c:	cmp	w0, #0x32
  456f70:	b.ne	456f04 <ferror@plt+0x53934>  // b.any
  456f74:	ldr	x2, [x19, #8]
  456f78:	ldr	w0, [x20, #72]
  456f7c:	ldr	w1, [x2, #16]
  456f80:	add	w0, w0, #0x7
  456f84:	add	w0, w0, w1
  456f88:	str	w0, [x20, #72]
  456f8c:	ldr	x0, [x2]
  456f90:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  456f94:	add	x1, x1, #0x78a
  456f98:	bl	403220 <strcmp@plt>
  456f9c:	cbnz	w0, 456f04 <ferror@plt+0x53934>
  456fa0:	mov	x0, x20
  456fa4:	bl	456180 <ferror@plt+0x52bb0>
  456fa8:	mov	x2, x19
  456fac:	mov	x3, x0
  456fb0:	mov	w1, #0x37                  	// #55
  456fb4:	mov	x0, x20
  456fb8:	bl	45380c <ferror@plt+0x5023c>
  456fbc:	b	456f00 <ferror@plt+0x53930>
  456fc0:	sub	w2, w1, #0x43
  456fc4:	and	w2, w2, #0xff
  456fc8:	cmp	w2, #0x1
  456fcc:	b.hi	4570fc <ferror@plt+0x53b2c>  // b.pmore
  456fd0:	ldr	x5, [x0, #64]
  456fd4:	cbz	x5, 456ffc <ferror@plt+0x53a2c>
  456fd8:	ldr	w0, [x5]
  456fdc:	cbnz	w0, 456ff4 <ferror@plt+0x53a24>
  456fe0:	ldr	w1, [x5, #16]
  456fe4:	ldr	w0, [x20, #72]
  456fe8:	add	w0, w0, w1
  456fec:	str	w0, [x20, #72]
  456ff0:	b	456ffc <ferror@plt+0x53a2c>
  456ff4:	cmp	w0, #0x18
  456ff8:	b.eq	456fe0 <ferror@plt+0x53a10>  // b.none
  456ffc:	ldrb	w0, [x3]
  457000:	cmp	w0, #0x43
  457004:	b.eq	457018 <ferror@plt+0x53a48>  // b.none
  457008:	cmp	w0, #0x44
  45700c:	b.eq	45708c <ferror@plt+0x53abc>  // b.none
  457010:	mov	x19, #0x0                   	// #0
  457014:	b	456f04 <ferror@plt+0x53934>
  457018:	ldrb	w0, [x3, #1]
  45701c:	cmp	w0, #0x49
  457020:	b.ne	457084 <ferror@plt+0x53ab4>  // b.any
  457024:	add	x3, x3, #0x1
  457028:	str	x3, [x20, #24]
  45702c:	mov	w3, #0x1                   	// #1
  457030:	ldr	x0, [x20, #24]
  457034:	ldrb	w1, [x0, #1]
  457038:	sub	w2, w1, #0x31
  45703c:	and	w2, w2, #0xff
  457040:	cmp	w2, #0x4
  457044:	b.hi	457010 <ferror@plt+0x53a40>  // b.pmore
  457048:	add	x0, x0, #0x2
  45704c:	str	x0, [x20, #24]
  457050:	sub	w21, w1, #0x30
  457054:	cbz	w3, 457060 <ferror@plt+0x53a90>
  457058:	mov	x0, x20
  45705c:	bl	456594 <ferror@plt+0x52fc4>
  457060:	ldr	x4, [x20, #64]
  457064:	mov	x0, x20
  457068:	bl	4537d8 <ferror@plt+0x50208>
  45706c:	mov	x19, x0
  457070:	mov	x2, x4
  457074:	mov	w1, w21
  457078:	bl	456524 <ferror@plt+0x52f54>
  45707c:	cbnz	w0, 456f04 <ferror@plt+0x53934>
  457080:	b	457010 <ferror@plt+0x53a40>
  457084:	mov	w3, #0x0                   	// #0
  457088:	b	457030 <ferror@plt+0x53a60>
  45708c:	ldrb	w0, [x3, #1]
  457090:	sub	w0, w0, #0x30
  457094:	cmp	w0, #0x5
  457098:	b.hi	457010 <ferror@plt+0x53a40>  // b.pmore
  45709c:	adrp	x1, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4570a0:	add	x1, x1, #0x874
  4570a4:	ldrb	w0, [x1, w0, uxtw]
  4570a8:	adr	x1, 4570b4 <ferror@plt+0x53ae4>
  4570ac:	add	x0, x1, w0, sxtb #2
  4570b0:	br	x0
  4570b4:	mov	w4, #0x2                   	// #2
  4570b8:	add	x3, x3, #0x2
  4570bc:	str	x3, [x20, #24]
  4570c0:	mov	x0, x20
  4570c4:	bl	4537d8 <ferror@plt+0x50208>
  4570c8:	mov	x19, x0
  4570cc:	mov	x2, x5
  4570d0:	mov	w1, w4
  4570d4:	bl	45655c <ferror@plt+0x52f8c>
  4570d8:	b	45707c <ferror@plt+0x53aac>
  4570dc:	mov	w4, #0x3                   	// #3
  4570e0:	b	4570b8 <ferror@plt+0x53ae8>
  4570e4:	mov	w4, #0x4                   	// #4
  4570e8:	b	4570b8 <ferror@plt+0x53ae8>
  4570ec:	mov	w4, #0x5                   	// #5
  4570f0:	b	4570b8 <ferror@plt+0x53ae8>
  4570f4:	mov	w4, #0x1                   	// #1
  4570f8:	b	4570b8 <ferror@plt+0x53ae8>
  4570fc:	cmp	w1, #0x4c
  457100:	b.ne	457140 <ferror@plt+0x53b70>  // b.any
  457104:	add	x3, x3, #0x1
  457108:	str	x3, [x0, #24]
  45710c:	bl	456180 <ferror@plt+0x52bb0>
  457110:	mov	x19, x0
  457114:	cbnz	x0, 457130 <ferror@plt+0x53b60>
  457118:	mov	x19, #0x0                   	// #0
  45711c:	mov	x0, x19
  457120:	ldp	x19, x20, [sp, #16]
  457124:	ldr	x21, [sp, #32]
  457128:	ldp	x29, x30, [sp], #48
  45712c:	ret
  457130:	mov	x0, x20
  457134:	bl	453e38 <ferror@plt+0x50868>
  457138:	cbnz	w0, 456f04 <ferror@plt+0x53934>
  45713c:	b	457118 <ferror@plt+0x53b48>
  457140:	cmp	w1, #0x55
  457144:	b.ne	457118 <ferror@plt+0x53b48>  // b.any
  457148:	ldrb	w1, [x3, #1]
  45714c:	cmp	w1, #0x6c
  457150:	b.eq	4571a4 <ferror@plt+0x53bd4>  // b.none
  457154:	cmp	w1, #0x74
  457158:	b.ne	457118 <ferror@plt+0x53b48>  // b.any
  45715c:	add	x1, x3, #0x1
  457160:	str	x1, [x0, #24]
  457164:	ldrb	w1, [x3, #1]
  457168:	cmp	w1, #0x74
  45716c:	b.ne	457010 <ferror@plt+0x53a40>  // b.any
  457170:	add	x3, x3, #0x2
  457174:	str	x3, [x0, #24]
  457178:	bl	453c14 <ferror@plt+0x50644>
  45717c:	sxtw	x4, w0
  457180:	tbnz	w4, #31, 457010 <ferror@plt+0x53a40>
  457184:	mov	x0, x20
  457188:	bl	4537d8 <ferror@plt+0x50208>
  45718c:	mov	x19, x0
  457190:	cbz	x0, 457214 <ferror@plt+0x53c44>
  457194:	mov	w0, #0x48                  	// #72
  457198:	str	w0, [x19]
  45719c:	str	x4, [x19, #8]
  4571a0:	b	457214 <ferror@plt+0x53c44>
  4571a4:	add	x1, x3, #0x1
  4571a8:	str	x1, [x0, #24]
  4571ac:	ldrb	w1, [x3, #1]
  4571b0:	cmp	w1, #0x6c
  4571b4:	b.ne	457010 <ferror@plt+0x53a40>  // b.any
  4571b8:	add	x3, x3, #0x2
  4571bc:	str	x3, [x0, #24]
  4571c0:	bl	456c7c <ferror@plt+0x536ac>
  4571c4:	mov	x9, x0
  4571c8:	cbz	x0, 457010 <ferror@plt+0x53a40>
  4571cc:	ldr	x0, [x20, #24]
  4571d0:	ldrb	w1, [x0]
  4571d4:	cmp	w1, #0x45
  4571d8:	b.ne	457010 <ferror@plt+0x53a40>  // b.any
  4571dc:	add	x0, x0, #0x1
  4571e0:	str	x0, [x20, #24]
  4571e4:	mov	x0, x20
  4571e8:	bl	453c14 <ferror@plt+0x50644>
  4571ec:	mov	w4, w0
  4571f0:	tbnz	w0, #31, 457010 <ferror@plt+0x53a40>
  4571f4:	mov	x0, x20
  4571f8:	bl	4537d8 <ferror@plt+0x50208>
  4571fc:	mov	x19, x0
  457200:	cbz	x0, 457214 <ferror@plt+0x53c44>
  457204:	mov	w0, #0x46                  	// #70
  457208:	str	w0, [x19]
  45720c:	str	x9, [x19, #8]
  457210:	str	w4, [x19, #16]
  457214:	mov	x1, x19
  457218:	mov	x0, x20
  45721c:	bl	4538fc <ferror@plt+0x5032c>
  457220:	b	45707c <ferror@plt+0x53aac>
  457224:	stp	x29, x30, [sp, #-32]!
  457228:	mov	x29, sp
  45722c:	stp	x19, x20, [sp, #16]
  457230:	mov	x19, x0
  457234:	ldr	x0, [x0, #24]
  457238:	ldrb	w2, [x0]
  45723c:	cmp	w2, #0x4a
  457240:	b.ne	45726c <ferror@plt+0x53c9c>  // b.any
  457244:	add	x0, x0, #0x1
  457248:	str	x0, [x19, #24]
  45724c:	mov	x0, x19
  457250:	bl	456594 <ferror@plt+0x52fc4>
  457254:	mov	x20, x0
  457258:	cbnz	x0, 457274 <ferror@plt+0x53ca4>
  45725c:	mov	x0, #0x0                   	// #0
  457260:	ldp	x19, x20, [sp, #16]
  457264:	ldp	x29, x30, [sp], #32
  457268:	ret
  45726c:	cbnz	w1, 45724c <ferror@plt+0x53c7c>
  457270:	mov	x20, #0x0                   	// #0
  457274:	mov	x0, x19
  457278:	bl	456c7c <ferror@plt+0x536ac>
  45727c:	mov	x3, x0
  457280:	cbz	x0, 45725c <ferror@plt+0x53c8c>
  457284:	mov	x2, x20
  457288:	mov	x0, x19
  45728c:	ldp	x19, x20, [sp, #16]
  457290:	mov	w1, #0x29                  	// #41
  457294:	ldp	x29, x30, [sp], #32
  457298:	b	45380c <ferror@plt+0x5023c>
  45729c:	stp	x29, x30, [sp, #-32]!
  4572a0:	mov	x29, sp
  4572a4:	str	x19, [sp, #16]
  4572a8:	mov	x19, x0
  4572ac:	ldr	w0, [x0, #16]
  4572b0:	tbnz	w0, #18, 4572c8 <ferror@plt+0x53cf8>
  4572b4:	ldr	w0, [x19, #84]
  4572b8:	cmp	w0, #0x800
  4572bc:	b.hi	45734c <ferror@plt+0x53d7c>  // b.pmore
  4572c0:	add	w0, w0, #0x1
  4572c4:	str	w0, [x19, #84]
  4572c8:	ldr	x0, [x19, #24]
  4572cc:	ldrb	w1, [x0]
  4572d0:	cmp	w1, #0x46
  4572d4:	b.eq	4572fc <ferror@plt+0x53d2c>  // b.none
  4572d8:	mov	x0, #0x0                   	// #0
  4572dc:	ldr	w1, [x19, #16]
  4572e0:	tbnz	w1, #18, 4572f0 <ferror@plt+0x53d20>
  4572e4:	ldr	w1, [x19, #84]
  4572e8:	sub	w1, w1, #0x1
  4572ec:	str	w1, [x19, #84]
  4572f0:	ldr	x19, [sp, #16]
  4572f4:	ldp	x29, x30, [sp], #32
  4572f8:	ret
  4572fc:	add	x1, x0, #0x1
  457300:	str	x1, [x19, #24]
  457304:	add	x0, x0, #0x2
  457308:	ldurb	w2, [x0, #-1]
  45730c:	cmp	w2, #0x59
  457310:	csel	x0, x0, x1, eq  // eq = none
  457314:	str	x0, [x19, #24]
  457318:	mov	w1, #0x1                   	// #1
  45731c:	mov	x0, x19
  457320:	bl	457224 <ferror@plt+0x53c54>
  457324:	mov	x1, x0
  457328:	mov	x0, x19
  45732c:	bl	4538a4 <ferror@plt+0x502d4>
  457330:	ldr	x1, [x19, #24]
  457334:	ldrb	w2, [x1]
  457338:	cmp	w2, #0x45
  45733c:	b.ne	4572d8 <ferror@plt+0x53d08>  // b.any
  457340:	add	x1, x1, #0x1
  457344:	str	x1, [x19, #24]
  457348:	b	4572dc <ferror@plt+0x53d0c>
  45734c:	mov	x0, #0x0                   	// #0
  457350:	b	4572f0 <ferror@plt+0x53d20>
  457354:	stp	x29, x30, [sp, #-96]!
  457358:	mov	x29, sp
  45735c:	ldr	x1, [x0, #24]
  457360:	stp	x19, x20, [sp, #16]
  457364:	stp	x21, x22, [sp, #32]
  457368:	stp	x23, x24, [sp, #48]
  45736c:	str	x25, [sp, #64]
  457370:	ldrb	w2, [x1]
  457374:	cmp	w2, #0x55
  457378:	b.eq	4576e0 <ferror@plt+0x54110>  // b.none
  45737c:	mov	x19, x0
  457380:	b.hi	4573c4 <ferror@plt+0x53df4>  // b.pmore
  457384:	cmp	w2, #0x4e
  457388:	b.eq	457468 <ferror@plt+0x53e98>  // b.none
  45738c:	cmp	w2, #0x53
  457390:	b.eq	4576ec <ferror@plt+0x5411c>  // b.none
  457394:	mov	x0, x19
  457398:	bl	456ed0 <ferror@plt+0x53900>
  45739c:	mov	x20, x0
  4573a0:	ldr	x0, [x19, #24]
  4573a4:	ldrb	w0, [x0]
  4573a8:	cmp	w0, #0x49
  4573ac:	b.ne	457634 <ferror@plt+0x54064>  // b.any
  4573b0:	mov	x1, x20
  4573b4:	mov	x0, x19
  4573b8:	bl	4538fc <ferror@plt+0x5032c>
  4573bc:	cbnz	w0, 45771c <ferror@plt+0x5414c>
  4573c0:	b	457484 <ferror@plt+0x53eb4>
  4573c4:	cmp	w2, #0x5a
  4573c8:	b.ne	457394 <ferror@plt+0x53dc4>  // b.any
  4573cc:	add	x1, x1, #0x1
  4573d0:	str	x1, [x0, #24]
  4573d4:	mov	w1, #0x0                   	// #0
  4573d8:	bl	457784 <ferror@plt+0x541b4>
  4573dc:	mov	x20, x0
  4573e0:	cbz	x0, 457484 <ferror@plt+0x53eb4>
  4573e4:	ldr	x1, [x19, #24]
  4573e8:	ldrb	w0, [x1]
  4573ec:	cmp	w0, #0x45
  4573f0:	b.ne	457484 <ferror@plt+0x53eb4>  // b.any
  4573f4:	add	x0, x1, #0x1
  4573f8:	str	x0, [x19, #24]
  4573fc:	ldrb	w0, [x1, #1]
  457400:	cmp	w0, #0x73
  457404:	b.ne	457650 <ferror@plt+0x54080>  // b.any
  457408:	add	x1, x1, #0x2
  45740c:	str	x1, [x19, #24]
  457410:	mov	x0, x19
  457414:	bl	453e38 <ferror@plt+0x50868>
  457418:	cbz	w0, 457484 <ferror@plt+0x53eb4>
  45741c:	mov	x0, x19
  457420:	mov	w2, #0xe                   	// #14
  457424:	adrp	x1, 4c8000 <_obstack_memory_used@@Base+0x6bc10>
  457428:	add	x1, x1, #0x616
  45742c:	bl	45614c <ferror@plt+0x52b7c>
  457430:	mov	x3, x0
  457434:	ldr	w0, [x20]
  457438:	cmp	w0, #0x3
  45743c:	b.ne	457454 <ferror@plt+0x53e84>  // b.any
  457440:	ldr	x0, [x20, #16]
  457444:	ldr	w1, [x0]
  457448:	cmp	w1, #0x29
  45744c:	b.ne	457454 <ferror@plt+0x53e84>  // b.any
  457450:	str	xzr, [x0, #8]
  457454:	mov	x2, x20
  457458:	mov	w1, #0x2                   	// #2
  45745c:	mov	x0, x19
  457460:	bl	45380c <ferror@plt+0x5023c>
  457464:	b	4576e4 <ferror@plt+0x54114>
  457468:	add	x1, x1, #0x1
  45746c:	str	x1, [x0, #24]
  457470:	mov	w2, #0x1                   	// #1
  457474:	add	x1, sp, #0x58
  457478:	bl	4587f8 <ferror@plt+0x55228>
  45747c:	mov	x21, x0
  457480:	cbnz	x0, 45748c <ferror@plt+0x53ebc>
  457484:	mov	x20, #0x0                   	// #0
  457488:	b	457634 <ferror@plt+0x54064>
  45748c:	mov	x24, #0x3ff                 	// #1023
  457490:	mov	x0, x19
  457494:	mov	x1, #0x0                   	// #0
  457498:	movk	x24, #0x1008, lsl #16
  45749c:	bl	4538a4 <ferror@plt+0x502d4>
  4574a0:	mov	x22, x0
  4574a4:	mov	x25, #0x0                   	// #0
  4574a8:	mov	w23, #0x1                   	// #1
  4574ac:	movk	x24, #0x20, lsl #32
  4574b0:	ldr	x1, [x19, #24]
  4574b4:	ldrb	w20, [x1]
  4574b8:	cbnz	w20, 4574c4 <ferror@plt+0x53ef4>
  4574bc:	str	xzr, [x21]
  4574c0:	b	457484 <ferror@plt+0x53eb4>
  4574c4:	cmp	w20, #0x44
  4574c8:	b.ne	45751c <ferror@plt+0x53f4c>  // b.any
  4574cc:	ldrb	w0, [x1, #1]
  4574d0:	and	w0, w0, #0xffffffdf
  4574d4:	and	w0, w0, #0xff
  4574d8:	cmp	w0, #0x54
  4574dc:	mov	x0, x19
  4574e0:	b.ne	457514 <ferror@plt+0x53f44>  // b.any
  4574e4:	bl	456594 <ferror@plt+0x52fc4>
  4574e8:	mov	x4, x0
  4574ec:	cbnz	x25, 457588 <ferror@plt+0x53fb8>
  4574f0:	ldr	x0, [x19, #24]
  4574f4:	ldrb	w0, [x0]
  4574f8:	cmp	w0, #0x45
  4574fc:	b.eq	457570 <ferror@plt+0x53fa0>  // b.none
  457500:	mov	x1, x4
  457504:	mov	x0, x19
  457508:	bl	4538fc <ferror@plt+0x5032c>
  45750c:	cbnz	w0, 457570 <ferror@plt+0x53fa0>
  457510:	b	4574bc <ferror@plt+0x53eec>
  457514:	bl	456ed0 <ferror@plt+0x53900>
  457518:	b	4574e8 <ferror@plt+0x53f18>
  45751c:	sub	w0, w20, #0x30
  457520:	and	w2, w0, #0xff
  457524:	cmp	w2, #0x26
  457528:	lsr	x0, x24, x0
  45752c:	sub	w2, w20, #0x61
  457530:	mvn	x0, x0
  457534:	and	w2, w2, #0xff
  457538:	and	w0, w0, #0x1
  45753c:	csel	w0, w0, w23, cc  // cc = lo, ul, last
  457540:	cmp	w2, #0x19
  457544:	cset	w2, ls  // ls = plast
  457548:	eor	w0, w0, #0x1
  45754c:	orr	w0, w2, w0
  457550:	cbnz	w0, 457578 <ferror@plt+0x53fa8>
  457554:	cmp	w20, #0x53
  457558:	b.ne	457590 <ferror@plt+0x53fc0>  // b.any
  45755c:	mov	x0, x19
  457560:	mov	w1, #0x1                   	// #1
  457564:	bl	4562f8 <ferror@plt+0x52d28>
  457568:	mov	x4, x0
  45756c:	cbnz	x25, 457588 <ferror@plt+0x53fb8>
  457570:	mov	x25, x4
  457574:	b	4574b0 <ferror@plt+0x53ee0>
  457578:	mov	x0, x19
  45757c:	bl	456ed0 <ferror@plt+0x53900>
  457580:	mov	x4, x0
  457584:	cbz	x25, 4575c0 <ferror@plt+0x53ff0>
  457588:	mov	w1, #0x1                   	// #1
  45758c:	b	4575ac <ferror@plt+0x53fdc>
  457590:	cmp	w20, #0x49
  457594:	b.ne	4575cc <ferror@plt+0x53ffc>  // b.any
  457598:	cbz	x25, 4574bc <ferror@plt+0x53eec>
  45759c:	mov	x0, x19
  4575a0:	bl	458718 <ferror@plt+0x55148>
  4575a4:	mov	x4, x0
  4575a8:	mov	w1, #0x4                   	// #4
  4575ac:	mov	x3, x4
  4575b0:	mov	x2, x25
  4575b4:	mov	x0, x19
  4575b8:	bl	45380c <ferror@plt+0x5023c>
  4575bc:	mov	x4, x0
  4575c0:	cmp	w20, #0x53
  4575c4:	b.ne	4574f0 <ferror@plt+0x53f20>  // b.any
  4575c8:	b	457570 <ferror@plt+0x53fa0>
  4575cc:	cmp	w20, #0x54
  4575d0:	b.ne	4575e0 <ferror@plt+0x54010>  // b.any
  4575d4:	mov	x0, x19
  4575d8:	bl	453c98 <ferror@plt+0x506c8>
  4575dc:	b	4574e8 <ferror@plt+0x53f18>
  4575e0:	cmp	w20, #0x45
  4575e4:	b.eq	457604 <ferror@plt+0x54034>  // b.none
  4575e8:	cmp	w20, #0x4d
  4575ec:	b.ne	4574bc <ferror@plt+0x53eec>  // b.any
  4575f0:	cbz	x25, 4574bc <ferror@plt+0x53eec>
  4575f4:	add	x1, x1, #0x1
  4575f8:	mov	x4, x25
  4575fc:	str	x1, [x19, #24]
  457600:	b	457570 <ferror@plt+0x53fa0>
  457604:	str	x25, [x21]
  457608:	cbz	x25, 457484 <ferror@plt+0x53eb4>
  45760c:	cbz	x22, 45761c <ferror@plt+0x5404c>
  457610:	ldr	x0, [sp, #88]
  457614:	str	x0, [x22, #8]
  457618:	str	x22, [sp, #88]
  45761c:	ldrb	w0, [x1]
  457620:	cmp	w0, #0x45
  457624:	b.ne	457484 <ferror@plt+0x53eb4>  // b.any
  457628:	ldr	x20, [sp, #88]
  45762c:	add	x1, x1, #0x1
  457630:	str	x1, [x19, #24]
  457634:	mov	x0, x20
  457638:	ldp	x19, x20, [sp, #16]
  45763c:	ldp	x21, x22, [sp, #32]
  457640:	ldp	x23, x24, [sp, #48]
  457644:	ldr	x25, [sp, #64]
  457648:	ldp	x29, x30, [sp], #96
  45764c:	ret
  457650:	cmp	w0, #0x64
  457654:	b.ne	457690 <ferror@plt+0x540c0>  // b.any
  457658:	add	x1, x1, #0x2
  45765c:	str	x1, [x19, #24]
  457660:	mov	x0, x19
  457664:	bl	453c14 <ferror@plt+0x50644>
  457668:	mov	w21, w0
  45766c:	tbnz	w0, #31, 457484 <ferror@plt+0x53eb4>
  457670:	mov	x0, x19
  457674:	bl	457354 <ferror@plt+0x53d84>
  457678:	mov	x10, x0
  45767c:	cbnz	x0, 457698 <ferror@plt+0x540c8>
  457680:	cmn	w21, #0x1
  457684:	b.ne	4576bc <ferror@plt+0x540ec>  // b.any
  457688:	mov	x3, x10
  45768c:	b	457434 <ferror@plt+0x53e64>
  457690:	mov	w21, #0xffffffff            	// #-1
  457694:	b	457670 <ferror@plt+0x540a0>
  457698:	ldr	w0, [x0]
  45769c:	cmp	w0, #0x46
  4576a0:	b.eq	457680 <ferror@plt+0x540b0>  // b.none
  4576a4:	cmp	w0, #0x48
  4576a8:	b.eq	457680 <ferror@plt+0x540b0>  // b.none
  4576ac:	mov	x0, x19
  4576b0:	bl	453e38 <ferror@plt+0x50868>
  4576b4:	cbnz	w0, 457680 <ferror@plt+0x540b0>
  4576b8:	b	457484 <ferror@plt+0x53eb4>
  4576bc:	mov	x0, x19
  4576c0:	bl	4537d8 <ferror@plt+0x50208>
  4576c4:	mov	x3, x0
  4576c8:	cbz	x0, 457434 <ferror@plt+0x53e64>
  4576cc:	mov	w0, #0x47                  	// #71
  4576d0:	str	w0, [x3]
  4576d4:	str	x10, [x3, #8]
  4576d8:	str	w21, [x3, #16]
  4576dc:	b	457434 <ferror@plt+0x53e64>
  4576e0:	bl	456ed0 <ferror@plt+0x53900>
  4576e4:	mov	x20, x0
  4576e8:	b	457634 <ferror@plt+0x54064>
  4576ec:	ldrb	w2, [x1, #1]
  4576f0:	cmp	w2, #0x74
  4576f4:	b.eq	457734 <ferror@plt+0x54164>  // b.none
  4576f8:	mov	w1, #0x0                   	// #0
  4576fc:	bl	4562f8 <ferror@plt+0x52d28>
  457700:	mov	x20, x0
  457704:	mov	w0, #0x1                   	// #1
  457708:	ldr	x1, [x19, #24]
  45770c:	ldrb	w1, [x1]
  457710:	cmp	w1, #0x49
  457714:	b.ne	457634 <ferror@plt+0x54064>  // b.any
  457718:	cbz	w0, 4573b0 <ferror@plt+0x53de0>
  45771c:	mov	x0, x19
  457720:	bl	458718 <ferror@plt+0x55148>
  457724:	mov	x2, x20
  457728:	mov	x3, x0
  45772c:	mov	w1, #0x4                   	// #4
  457730:	b	45745c <ferror@plt+0x53e8c>
  457734:	add	x1, x1, #0x2
  457738:	str	x1, [x0, #24]
  45773c:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x2ac10>
  457740:	add	x1, x1, #0xcf6
  457744:	mov	w2, #0x3                   	// #3
  457748:	bl	45614c <ferror@plt+0x52b7c>
  45774c:	mov	x20, x0
  457750:	mov	x0, x19
  457754:	bl	456ed0 <ferror@plt+0x53900>
  457758:	mov	x3, x0
  45775c:	mov	x2, x20
  457760:	mov	x0, x19
  457764:	mov	w1, #0x1                   	// #1
  457768:	bl	45380c <ferror@plt+0x5023c>
  45776c:	mov	x20, x0
  457770:	ldr	w0, [x19, #72]
  457774:	add	w0, w0, #0x3
  457778:	str	w0, [x19, #72]
  45777c:	mov	w0, #0x0                   	// #0
  457780:	b	457708 <ferror@plt+0x54138>
  457784:	stp	x29, x30, [sp, #-48]!
  457788:	mov	w3, #0x54                  	// #84
  45778c:	mov	x29, sp
  457790:	ldr	x2, [x0, #24]
  457794:	stp	x19, x20, [sp, #16]
  457798:	mov	x19, x0
  45779c:	str	x21, [sp, #32]
  4577a0:	mov	w21, w1
  4577a4:	ldrb	w1, [x2]
  4577a8:	cmp	w1, #0x47
  4577ac:	ccmp	w1, w3, #0x4, ne  // ne = any
  4577b0:	b.ne	457c2c <ferror@plt+0x5465c>  // b.any
  4577b4:	ldr	w3, [x0, #72]
  4577b8:	add	w1, w3, #0x14
  4577bc:	str	w1, [x0, #72]
  4577c0:	ldrb	w1, [x2]
  4577c4:	cmp	w1, #0x54
  4577c8:	b.ne	4577f4 <ferror@plt+0x54224>  // b.any
  4577cc:	add	x1, x2, #0x1
  4577d0:	str	x1, [x0, #24]
  4577d4:	ldrb	w1, [x2, #1]
  4577d8:	cbnz	w1, 457854 <ferror@plt+0x54284>
  4577dc:	mov	x20, #0x0                   	// #0
  4577e0:	mov	x0, x20
  4577e4:	ldp	x19, x20, [sp, #16]
  4577e8:	ldr	x21, [sp, #32]
  4577ec:	ldp	x29, x30, [sp], #48
  4577f0:	ret
  4577f4:	cmp	w1, #0x47
  4577f8:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  4577fc:	add	x1, x2, #0x1
  457800:	str	x1, [x0, #24]
  457804:	ldrb	w1, [x2, #1]
  457808:	cbz	w1, 4577dc <ferror@plt+0x5420c>
  45780c:	add	x1, x2, #0x2
  457810:	str	x1, [x0, #24]
  457814:	ldrb	w1, [x2, #1]
  457818:	cmp	w1, #0x54
  45781c:	b.eq	457b78 <ferror@plt+0x545a8>  // b.none
  457820:	b.hi	457a78 <ferror@plt+0x544a8>  // b.pmore
  457824:	cmp	w1, #0x41
  457828:	b.eq	457b60 <ferror@plt+0x54590>  // b.none
  45782c:	cmp	w1, #0x52
  457830:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  457834:	bl	457354 <ferror@plt+0x53d84>
  457838:	mov	x9, x0
  45783c:	mov	x0, x19
  457840:	bl	453bd8 <ferror@plt+0x50608>
  457844:	mov	x3, x0
  457848:	mov	x2, x9
  45784c:	mov	w1, #0x16                  	// #22
  457850:	b	457900 <ferror@plt+0x54330>
  457854:	add	x1, x2, #0x2
  457858:	str	x1, [x0, #24]
  45785c:	ldrb	w1, [x2, #1]
  457860:	cmp	w1, #0x57
  457864:	b.hi	457894 <ferror@plt+0x542c4>  // b.pmore
  457868:	cmp	w1, #0x40
  45786c:	b.ls	4577dc <ferror@plt+0x5420c>  // b.plast
  457870:	sub	w1, w1, #0x41
  457874:	cmp	w1, #0x16
  457878:	b.hi	4577dc <ferror@plt+0x5420c>  // b.pmore
  45787c:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  457880:	add	x0, x0, #0x87c
  457884:	ldrb	w0, [x0, w1, uxtw]
  457888:	adr	x1, 457894 <ferror@plt+0x542c4>
  45788c:	add	x0, x1, w0, sxtb #2
  457890:	br	x0
  457894:	cmp	w1, #0x68
  457898:	b.eq	457964 <ferror@plt+0x54394>  // b.none
  45789c:	cmp	w1, #0x76
  4578a0:	b.eq	457988 <ferror@plt+0x543b8>  // b.none
  4578a4:	cmp	w1, #0x63
  4578a8:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  4578ac:	mov	w1, #0x0                   	// #0
  4578b0:	bl	453cf8 <ferror@plt+0x50728>
  4578b4:	cbz	w0, 4577dc <ferror@plt+0x5420c>
  4578b8:	mov	x0, x19
  4578bc:	mov	w1, #0x0                   	// #0
  4578c0:	bl	453cf8 <ferror@plt+0x50728>
  4578c4:	cbz	w0, 4577dc <ferror@plt+0x5420c>
  4578c8:	mov	w1, #0x0                   	// #0
  4578cc:	mov	x0, x19
  4578d0:	bl	457784 <ferror@plt+0x541b4>
  4578d4:	mov	x2, x0
  4578d8:	mov	x3, #0x0                   	// #0
  4578dc:	mov	w1, #0x11                  	// #17
  4578e0:	b	457900 <ferror@plt+0x54330>
  4578e4:	add	w3, w3, #0xf
  4578e8:	str	w3, [x19, #72]
  4578ec:	mov	x0, x19
  4578f0:	bl	456594 <ferror@plt+0x52fc4>
  4578f4:	mov	x2, x0
  4578f8:	mov	x3, #0x0                   	// #0
  4578fc:	mov	w1, #0x9                   	// #9
  457900:	mov	x0, x19
  457904:	ldp	x19, x20, [sp, #16]
  457908:	ldr	x21, [sp, #32]
  45790c:	ldp	x29, x30, [sp], #48
  457910:	b	45380c <ferror@plt+0x5023c>
  457914:	add	w3, w3, #0xa
  457918:	str	w3, [x19, #72]
  45791c:	mov	x0, x19
  457920:	bl	456594 <ferror@plt+0x52fc4>
  457924:	mov	x2, x0
  457928:	mov	x3, #0x0                   	// #0
  45792c:	mov	w1, #0xa                   	// #10
  457930:	b	457900 <ferror@plt+0x54330>
  457934:	mov	x0, x19
  457938:	bl	456594 <ferror@plt+0x52fc4>
  45793c:	mov	x3, #0x0                   	// #0
  457940:	mov	x2, x0
  457944:	mov	w1, #0xc                   	// #12
  457948:	b	457900 <ferror@plt+0x54330>
  45794c:	mov	x0, x19
  457950:	bl	456594 <ferror@plt+0x52fc4>
  457954:	mov	x3, #0x0                   	// #0
  457958:	mov	x2, x0
  45795c:	mov	w1, #0xd                   	// #13
  457960:	b	457900 <ferror@plt+0x54330>
  457964:	bl	453cf8 <ferror@plt+0x50728>
  457968:	cbz	w0, 4577dc <ferror@plt+0x5420c>
  45796c:	mov	w1, #0x0                   	// #0
  457970:	mov	x0, x19
  457974:	bl	457784 <ferror@plt+0x541b4>
  457978:	mov	x2, x0
  45797c:	mov	x3, #0x0                   	// #0
  457980:	mov	w1, #0xf                   	// #15
  457984:	b	457900 <ferror@plt+0x54330>
  457988:	bl	453cf8 <ferror@plt+0x50728>
  45798c:	cbz	w0, 4577dc <ferror@plt+0x5420c>
  457990:	mov	w1, #0x0                   	// #0
  457994:	mov	x0, x19
  457998:	bl	457784 <ferror@plt+0x541b4>
  45799c:	mov	x2, x0
  4579a0:	mov	x3, #0x0                   	// #0
  4579a4:	mov	w1, #0x10                  	// #16
  4579a8:	b	457900 <ferror@plt+0x54330>
  4579ac:	mov	x0, x19
  4579b0:	bl	456594 <ferror@plt+0x52fc4>
  4579b4:	mov	x20, x0
  4579b8:	add	x0, x19, #0x18
  4579bc:	bl	453b50 <ferror@plt+0x50580>
  4579c0:	tbnz	w0, #31, 4577dc <ferror@plt+0x5420c>
  4579c4:	ldr	x1, [x19, #24]
  4579c8:	ldrb	w0, [x1]
  4579cc:	cmp	w0, #0x5f
  4579d0:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  4579d4:	add	x1, x1, #0x1
  4579d8:	str	x1, [x19, #24]
  4579dc:	mov	x0, x19
  4579e0:	bl	456594 <ferror@plt+0x52fc4>
  4579e4:	mov	x2, x0
  4579e8:	ldr	w1, [x19, #72]
  4579ec:	mov	x3, x20
  4579f0:	add	w1, w1, #0x5
  4579f4:	str	w1, [x19, #72]
  4579f8:	mov	w1, #0xb                   	// #11
  4579fc:	b	457900 <ferror@plt+0x54330>
  457a00:	mov	x0, x19
  457a04:	bl	456594 <ferror@plt+0x52fc4>
  457a08:	mov	x3, #0x0                   	// #0
  457a0c:	mov	x2, x0
  457a10:	mov	w1, #0xe                   	// #14
  457a14:	b	457900 <ferror@plt+0x54330>
  457a18:	mov	x0, x19
  457a1c:	bl	456594 <ferror@plt+0x52fc4>
  457a20:	mov	x3, #0x0                   	// #0
  457a24:	mov	x2, x0
  457a28:	mov	w1, #0x12                  	// #18
  457a2c:	b	457900 <ferror@plt+0x54330>
  457a30:	mov	x0, x19
  457a34:	bl	457354 <ferror@plt+0x53d84>
  457a38:	mov	x3, #0x0                   	// #0
  457a3c:	mov	x2, x0
  457a40:	mov	w1, #0x14                  	// #20
  457a44:	b	457900 <ferror@plt+0x54330>
  457a48:	mov	x0, x19
  457a4c:	bl	457354 <ferror@plt+0x53d84>
  457a50:	mov	x3, #0x0                   	// #0
  457a54:	mov	x2, x0
  457a58:	mov	w1, #0x15                  	// #21
  457a5c:	b	457900 <ferror@plt+0x54330>
  457a60:	mov	x0, x19
  457a64:	bl	4585cc <ferror@plt+0x54ffc>
  457a68:	mov	x3, #0x0                   	// #0
  457a6c:	mov	x2, x0
  457a70:	mov	w1, #0x30                  	// #48
  457a74:	b	457900 <ferror@plt+0x54330>
  457a78:	cmp	w1, #0x56
  457a7c:	b.eq	457b4c <ferror@plt+0x5457c>  // b.none
  457a80:	cmp	w1, #0x72
  457a84:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  457a88:	add	x0, x0, #0x18
  457a8c:	bl	453b50 <ferror@plt+0x50580>
  457a90:	cmp	w0, #0x1
  457a94:	b.le	4577dc <ferror@plt+0x5420c>
  457a98:	ldr	x1, [x19, #24]
  457a9c:	ldrb	w2, [x1]
  457aa0:	cbz	w2, 4577dc <ferror@plt+0x5420c>
  457aa4:	add	x7, x1, #0x1
  457aa8:	str	x7, [x19, #24]
  457aac:	ldrb	w1, [x1]
  457ab0:	cmp	w1, #0x5f
  457ab4:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  457ab8:	sub	w8, w0, #0x1
  457abc:	mov	x9, #0x0                   	// #0
  457ac0:	mov	w10, #0x41                  	// #65
  457ac4:	ldrb	w0, [x7]
  457ac8:	cbz	w0, 4577dc <ferror@plt+0x5420c>
  457acc:	cmp	w0, #0x24
  457ad0:	b.ne	457be0 <ferror@plt+0x54610>  // b.any
  457ad4:	ldrb	w4, [x7, #1]
  457ad8:	cmp	w4, #0x53
  457adc:	b.eq	457bd0 <ferror@plt+0x54600>  // b.none
  457ae0:	cmp	w4, #0x5f
  457ae4:	b.eq	457bd8 <ferror@plt+0x54608>  // b.none
  457ae8:	cmp	w4, #0x24
  457aec:	b.ne	4577dc <ferror@plt+0x5420c>  // b.any
  457af0:	mov	x0, x19
  457af4:	bl	4537d8 <ferror@plt+0x50208>
  457af8:	cbz	x0, 457b04 <ferror@plt+0x54534>
  457afc:	str	w10, [x0]
  457b00:	str	w4, [x0, #8]
  457b04:	ldr	x7, [x19, #24]
  457b08:	sub	w8, w8, #0x2
  457b0c:	add	x7, x7, #0x2
  457b10:	str	x7, [x19, #24]
  457b14:	cbz	x0, 4577dc <ferror@plt+0x5420c>
  457b18:	cbz	x9, 457b34 <ferror@plt+0x54564>
  457b1c:	mov	x3, x0
  457b20:	mov	x2, x9
  457b24:	mov	x0, x19
  457b28:	mov	w1, #0x40                  	// #64
  457b2c:	bl	45380c <ferror@plt+0x5023c>
  457b30:	cbz	x0, 4577dc <ferror@plt+0x5420c>
  457b34:	cmp	w8, #0x0
  457b38:	b.gt	457bc8 <ferror@plt+0x545f8>
  457b3c:	mov	x2, x0
  457b40:	mov	x3, #0x0                   	// #0
  457b44:	mov	w1, #0x3f                  	// #63
  457b48:	b	457900 <ferror@plt+0x54330>
  457b4c:	bl	457354 <ferror@plt+0x53d84>
  457b50:	mov	x2, x0
  457b54:	mov	x3, #0x0                   	// #0
  457b58:	mov	w1, #0x13                  	// #19
  457b5c:	b	457900 <ferror@plt+0x54330>
  457b60:	mov	w1, #0x0                   	// #0
  457b64:	bl	457784 <ferror@plt+0x541b4>
  457b68:	mov	x3, #0x0                   	// #0
  457b6c:	mov	x2, x0
  457b70:	mov	w1, #0x17                  	// #23
  457b74:	b	457900 <ferror@plt+0x54330>
  457b78:	ldrb	w1, [x2, #2]
  457b7c:	cbz	w1, 457bac <ferror@plt+0x545dc>
  457b80:	add	x1, x2, #0x3
  457b84:	str	x1, [x0, #24]
  457b88:	ldrb	w1, [x2, #2]
  457b8c:	cmp	w1, #0x6e
  457b90:	b.ne	457bac <ferror@plt+0x545dc>  // b.any
  457b94:	mov	w1, #0x0                   	// #0
  457b98:	bl	457784 <ferror@plt+0x541b4>
  457b9c:	mov	x3, #0x0                   	// #0
  457ba0:	mov	x2, x0
  457ba4:	mov	w1, #0x4a                  	// #74
  457ba8:	b	457900 <ferror@plt+0x54330>
  457bac:	mov	w1, #0x0                   	// #0
  457bb0:	mov	x0, x19
  457bb4:	bl	457784 <ferror@plt+0x541b4>
  457bb8:	mov	x2, x0
  457bbc:	mov	x3, #0x0                   	// #0
  457bc0:	mov	w1, #0x49                  	// #73
  457bc4:	b	457900 <ferror@plt+0x54330>
  457bc8:	mov	x9, x0
  457bcc:	b	457ac4 <ferror@plt+0x544f4>
  457bd0:	mov	w4, #0x2f                  	// #47
  457bd4:	b	457af0 <ferror@plt+0x54520>
  457bd8:	mov	w4, #0x2e                  	// #46
  457bdc:	b	457af0 <ferror@plt+0x54520>
  457be0:	mov	x0, #0x0                   	// #0
  457be4:	ldrb	w1, [x7, x0]
  457be8:	mov	w6, w0
  457bec:	cbz	w1, 457c08 <ferror@plt+0x54638>
  457bf0:	cmp	w1, #0x24
  457bf4:	b.eq	457c08 <ferror@plt+0x54638>  // b.none
  457bf8:	add	x0, x0, #0x1
  457bfc:	add	w6, w6, #0x1
  457c00:	cmp	w8, w0
  457c04:	b.gt	457be4 <ferror@plt+0x54614>
  457c08:	mov	x1, x7
  457c0c:	mov	w2, w6
  457c10:	mov	x0, x19
  457c14:	bl	45614c <ferror@plt+0x52b7c>
  457c18:	ldr	x7, [x19, #24]
  457c1c:	sub	w8, w8, w6
  457c20:	add	x7, x7, w6, sxtw
  457c24:	str	x7, [x19, #24]
  457c28:	b	457b14 <ferror@plt+0x54544>
  457c2c:	bl	457354 <ferror@plt+0x53d84>
  457c30:	mov	x20, x0
  457c34:	cbz	x0, 4577dc <ferror@plt+0x5420c>
  457c38:	cbz	w21, 457c44 <ferror@plt+0x54674>
  457c3c:	ldr	w0, [x19, #16]
  457c40:	tbz	w0, #0, 457c94 <ferror@plt+0x546c4>
  457c44:	ldr	x0, [x19, #24]
  457c48:	ldrb	w0, [x0]
  457c4c:	cmp	w0, #0x45
  457c50:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  457c54:	b.eq	4577e0 <ferror@plt+0x54210>  // b.none
  457c58:	mov	x3, #0x1f                  	// #31
  457c5c:	mov	x2, x20
  457c60:	mov	x1, #0x1                   	// #1
  457c64:	movk	x3, #0x1a, lsl #48
  457c68:	ldr	w0, [x2]
  457c6c:	cmp	w0, #0x4
  457c70:	b.eq	457ce8 <ferror@plt+0x54718>  // b.none
  457c74:	b.hi	457cc8 <ferror@plt+0x546f8>  // b.pmore
  457c78:	cmp	w0, #0x2
  457c7c:	b.ne	457c88 <ferror@plt+0x546b8>  // b.any
  457c80:	ldr	x2, [x2, #16]
  457c84:	cbnz	x2, 457c68 <ferror@plt+0x54698>
  457c88:	mov	w1, #0x0                   	// #0
  457c8c:	b	457d24 <ferror@plt+0x54754>
  457c90:	ldr	x20, [x20, #8]
  457c94:	ldr	w2, [x20]
  457c98:	mov	w0, w2
  457c9c:	bl	4537a8 <ferror@plt+0x501d8>
  457ca0:	cbnz	w0, 457c90 <ferror@plt+0x546c0>
  457ca4:	cmp	w2, #0x2
  457ca8:	b.ne	4577e0 <ferror@plt+0x54210>  // b.any
  457cac:	ldr	x2, [x20, #16]
  457cb0:	ldr	w0, [x2]
  457cb4:	bl	4537a8 <ferror@plt+0x501d8>
  457cb8:	cbz	w0, 4577e0 <ferror@plt+0x54210>
  457cbc:	ldr	x0, [x2, #8]
  457cc0:	str	x0, [x20, #16]
  457cc4:	b	457cac <ferror@plt+0x546dc>
  457cc8:	sub	w0, w0, #0x1c
  457ccc:	cmp	w0, #0x34
  457cd0:	b.hi	457c88 <ferror@plt+0x546b8>  // b.pmore
  457cd4:	lsl	x0, x1, x0
  457cd8:	tst	x0, x3
  457cdc:	b.eq	457c88 <ferror@plt+0x546b8>  // b.none
  457ce0:	ldr	x2, [x2, #8]
  457ce4:	b	457c84 <ferror@plt+0x546b4>
  457ce8:	ldr	x1, [x2, #8]
  457cec:	cbz	x1, 457d10 <ferror@plt+0x54740>
  457cf0:	ldr	w0, [x1]
  457cf4:	cmp	w0, #0x8
  457cf8:	b.hi	457d18 <ferror@plt+0x54748>  // b.pmore
  457cfc:	cmp	w0, #0x6
  457d00:	b.hi	457d68 <ferror@plt+0x54798>  // b.pmore
  457d04:	sub	w0, w0, #0x1
  457d08:	cmp	w0, #0x1
  457d0c:	b.ls	457d60 <ferror@plt+0x54790>  // b.plast
  457d10:	mov	w0, #0x0                   	// #0
  457d14:	b	457d20 <ferror@plt+0x54750>
  457d18:	cmp	w0, #0x35
  457d1c:	cset	w0, eq  // eq = none
  457d20:	eor	w1, w0, #0x1
  457d24:	mov	x0, x19
  457d28:	bl	457224 <ferror@plt+0x53c54>
  457d2c:	mov	x3, x0
  457d30:	cbz	x0, 4577dc <ferror@plt+0x5420c>
  457d34:	cbnz	w21, 457d54 <ferror@plt+0x54784>
  457d38:	ldr	w0, [x20]
  457d3c:	cmp	w0, #0x2
  457d40:	b.ne	457d54 <ferror@plt+0x54784>  // b.any
  457d44:	ldr	w0, [x3]
  457d48:	cmp	w0, #0x29
  457d4c:	b.ne	457d54 <ferror@plt+0x54784>  // b.any
  457d50:	str	xzr, [x3, #8]
  457d54:	mov	x2, x20
  457d58:	mov	w1, #0x3                   	// #3
  457d5c:	b	457900 <ferror@plt+0x54330>
  457d60:	ldr	x1, [x1, #16]
  457d64:	b	457cec <ferror@plt+0x5471c>
  457d68:	mov	w0, #0x1                   	// #1
  457d6c:	b	457d20 <ferror@plt+0x54750>
  457d70:	stp	x29, x30, [sp, #-32]!
  457d74:	mov	x29, sp
  457d78:	stp	x19, x20, [sp, #16]
  457d7c:	mov	x19, x0
  457d80:	mov	w20, w1
  457d84:	ldr	x0, [x0, #24]
  457d88:	ldrb	w1, [x0]
  457d8c:	cmp	w1, #0x5f
  457d90:	b.ne	457e10 <ferror@plt+0x54840>  // b.any
  457d94:	add	x0, x0, #0x1
  457d98:	str	x0, [x19, #24]
  457d9c:	ldr	x0, [x19, #24]
  457da0:	ldrb	w1, [x0]
  457da4:	cmp	w1, #0x5a
  457da8:	b.ne	457e14 <ferror@plt+0x54844>  // b.any
  457dac:	add	x0, x0, #0x1
  457db0:	str	x0, [x19, #24]
  457db4:	mov	w1, w20
  457db8:	mov	x0, x19
  457dbc:	bl	457784 <ferror@plt+0x541b4>
  457dc0:	mov	x6, x0
  457dc4:	cbz	w20, 457e18 <ferror@plt+0x54848>
  457dc8:	ldr	w0, [x19, #16]
  457dcc:	tbz	w0, #0, 457e18 <ferror@plt+0x54848>
  457dd0:	ldr	x1, [x19, #24]
  457dd4:	ldrb	w0, [x1]
  457dd8:	cmp	w0, #0x2e
  457ddc:	b.ne	457e18 <ferror@plt+0x54848>  // b.any
  457de0:	ldrb	w0, [x1, #1]
  457de4:	sub	w2, w0, #0x61
  457de8:	cmp	w0, #0x5f
  457dec:	and	w2, w2, #0xff
  457df0:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  457df4:	b.ls	457e28 <ferror@plt+0x54858>  // b.plast
  457df8:	sub	w0, w0, #0x30
  457dfc:	and	w0, w0, #0xff
  457e00:	cmp	w0, #0x9
  457e04:	b.hi	457e18 <ferror@plt+0x54848>  // b.pmore
  457e08:	mov	x2, x1
  457e0c:	b	457e44 <ferror@plt+0x54874>
  457e10:	cbz	w20, 457d9c <ferror@plt+0x547cc>
  457e14:	mov	x6, #0x0                   	// #0
  457e18:	mov	x0, x6
  457e1c:	ldp	x19, x20, [sp, #16]
  457e20:	ldp	x29, x30, [sp], #32
  457e24:	ret
  457e28:	add	x2, x1, #0x2
  457e2c:	ldrb	w3, [x2]
  457e30:	sub	w0, w3, #0x61
  457e34:	cmp	w3, #0x5f
  457e38:	and	w0, w0, #0xff
  457e3c:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  457e40:	b.ls	457e7c <ferror@plt+0x548ac>  // b.plast
  457e44:	ldrb	w0, [x2]
  457e48:	cmp	w0, #0x2e
  457e4c:	b.eq	457e84 <ferror@plt+0x548b4>  // b.none
  457e50:	str	x2, [x19, #24]
  457e54:	mov	x0, x19
  457e58:	sub	w2, w2, w1
  457e5c:	bl	45614c <ferror@plt+0x52b7c>
  457e60:	mov	x3, x0
  457e64:	mov	x2, x6
  457e68:	mov	x0, x19
  457e6c:	mov	w1, #0x4e                  	// #78
  457e70:	bl	45380c <ferror@plt+0x5023c>
  457e74:	mov	x6, x0
  457e78:	b	457dd0 <ferror@plt+0x54800>
  457e7c:	add	x2, x2, #0x1
  457e80:	b	457e2c <ferror@plt+0x5485c>
  457e84:	ldrb	w0, [x2, #1]
  457e88:	sub	w0, w0, #0x30
  457e8c:	and	w0, w0, #0xff
  457e90:	cmp	w0, #0x9
  457e94:	b.hi	457e50 <ferror@plt+0x54880>  // b.pmore
  457e98:	add	x2, x2, #0x2
  457e9c:	ldrb	w0, [x2]
  457ea0:	sub	w0, w0, #0x30
  457ea4:	and	w0, w0, #0xff
  457ea8:	cmp	w0, #0x9
  457eac:	b.hi	457e44 <ferror@plt+0x54874>  // b.pmore
  457eb0:	add	x2, x2, #0x1
  457eb4:	b	457e9c <ferror@plt+0x548cc>
  457eb8:	ldr	x1, [x0, #24]
  457ebc:	ldrb	w2, [x1]
  457ec0:	cmp	w2, #0x4c
  457ec4:	b.eq	457ee0 <ferror@plt+0x54910>  // b.none
  457ec8:	mov	x0, #0x0                   	// #0
  457ecc:	ret
  457ed0:	mov	x0, #0x0                   	// #0
  457ed4:	ldr	x19, [sp, #16]
  457ed8:	ldp	x29, x30, [sp], #32
  457edc:	ret
  457ee0:	stp	x29, x30, [sp, #-32]!
  457ee4:	add	x2, x1, #0x1
  457ee8:	mov	x29, sp
  457eec:	str	x19, [sp, #16]
  457ef0:	mov	x19, x0
  457ef4:	str	x2, [x0, #24]
  457ef8:	mov	w2, #0x5a                  	// #90
  457efc:	ldrb	w1, [x1, #1]
  457f00:	cmp	w1, #0x5f
  457f04:	ccmp	w1, w2, #0x4, ne  // ne = any
  457f08:	b.ne	457f30 <ferror@plt+0x54960>  // b.any
  457f0c:	mov	w1, #0x0                   	// #0
  457f10:	bl	457d70 <ferror@plt+0x547a0>
  457f14:	ldr	x1, [x19, #24]
  457f18:	ldrb	w2, [x1]
  457f1c:	cmp	w2, #0x45
  457f20:	b.ne	457ed0 <ferror@plt+0x54900>  // b.any
  457f24:	add	x1, x1, #0x1
  457f28:	str	x1, [x19, #24]
  457f2c:	b	457ed4 <ferror@plt+0x54904>
  457f30:	bl	456594 <ferror@plt+0x52fc4>
  457f34:	mov	x6, x0
  457f38:	cbz	x0, 457ed0 <ferror@plt+0x54900>
  457f3c:	ldr	w0, [x0]
  457f40:	cmp	w0, #0x27
  457f44:	b.ne	457f64 <ferror@plt+0x54994>  // b.any
  457f48:	ldr	x1, [x6, #8]
  457f4c:	ldr	w0, [x1, #28]
  457f50:	cbz	w0, 457f64 <ferror@plt+0x54994>
  457f54:	ldr	w1, [x1, #8]
  457f58:	ldr	w0, [x19, #72]
  457f5c:	sub	w0, w0, w1
  457f60:	str	w0, [x19, #72]
  457f64:	ldr	x0, [x19, #24]
  457f68:	ldrb	w1, [x0]
  457f6c:	cmp	w1, #0x6e
  457f70:	b.ne	457fb8 <ferror@plt+0x549e8>  // b.any
  457f74:	add	x0, x0, #0x1
  457f78:	mov	w7, #0x3e                  	// #62
  457f7c:	str	x0, [x19, #24]
  457f80:	ldr	x1, [x19, #24]
  457f84:	ldr	x2, [x19, #24]
  457f88:	ldrb	w0, [x2]
  457f8c:	cmp	w0, #0x45
  457f90:	b.ne	457fc0 <ferror@plt+0x549f0>  // b.any
  457f94:	sub	w2, w2, w1
  457f98:	mov	x0, x19
  457f9c:	bl	45614c <ferror@plt+0x52b7c>
  457fa0:	mov	x3, x0
  457fa4:	mov	x2, x6
  457fa8:	mov	w1, w7
  457fac:	mov	x0, x19
  457fb0:	bl	45380c <ferror@plt+0x5023c>
  457fb4:	b	457f14 <ferror@plt+0x54944>
  457fb8:	mov	w7, #0x3d                  	// #61
  457fbc:	b	457f80 <ferror@plt+0x549b0>
  457fc0:	cbz	w0, 457ed0 <ferror@plt+0x54900>
  457fc4:	add	x2, x2, #0x1
  457fc8:	str	x2, [x19, #24]
  457fcc:	b	457f84 <ferror@plt+0x549b4>
  457fd0:	ldr	x1, [x0, #24]
  457fd4:	ldrb	w2, [x1]
  457fd8:	cmp	w2, #0x4c
  457fdc:	b.ne	457fe4 <ferror@plt+0x54a14>  // b.any
  457fe0:	b	457eb8 <ferror@plt+0x548e8>
  457fe4:	cmp	w2, #0x54
  457fe8:	b.ne	457ff0 <ferror@plt+0x54a20>  // b.any
  457fec:	b	453c98 <ferror@plt+0x506c8>
  457ff0:	stp	x29, x30, [sp, #-48]!
  457ff4:	cmp	w2, #0x73
  457ff8:	mov	x29, sp
  457ffc:	stp	x19, x20, [sp, #16]
  458000:	mov	x19, x0
  458004:	stp	x21, x22, [sp, #32]
  458008:	b.ne	4580ac <ferror@plt+0x54adc>  // b.any
  45800c:	ldrb	w3, [x1, #1]
  458010:	cmp	w3, #0x72
  458014:	b.ne	458088 <ferror@plt+0x54ab8>  // b.any
  458018:	add	x1, x1, #0x2
  45801c:	str	x1, [x0, #24]
  458020:	bl	456594 <ferror@plt+0x52fc4>
  458024:	mov	x20, x0
  458028:	mov	x0, x19
  45802c:	bl	456ed0 <ferror@plt+0x53900>
  458030:	mov	x21, x0
  458034:	ldr	x0, [x19, #24]
  458038:	ldrb	w0, [x0]
  45803c:	cmp	w0, #0x49
  458040:	b.eq	458064 <ferror@plt+0x54a94>  // b.none
  458044:	mov	x3, x21
  458048:	mov	x2, x20
  45804c:	mov	w1, #0x1                   	// #1
  458050:	mov	x0, x19
  458054:	ldp	x19, x20, [sp, #16]
  458058:	ldp	x21, x22, [sp, #32]
  45805c:	ldp	x29, x30, [sp], #48
  458060:	b	45380c <ferror@plt+0x5023c>
  458064:	mov	x0, x19
  458068:	bl	458718 <ferror@plt+0x55148>
  45806c:	mov	x3, x0
  458070:	mov	x2, x21
  458074:	mov	x0, x19
  458078:	mov	w1, #0x4                   	// #4
  45807c:	bl	45380c <ferror@plt+0x5023c>
  458080:	mov	x3, x0
  458084:	b	458048 <ferror@plt+0x54a78>
  458088:	cmp	w3, #0x70
  45808c:	b.ne	458198 <ferror@plt+0x54bc8>  // b.any
  458090:	add	x1, x1, #0x2
  458094:	str	x1, [x0, #24]
  458098:	bl	457fd0 <ferror@plt+0x54a00>
  45809c:	mov	x2, x0
  4580a0:	mov	x3, #0x0                   	// #0
  4580a4:	mov	w1, #0x4b                  	// #75
  4580a8:	b	458050 <ferror@plt+0x54a80>
  4580ac:	cmp	w2, #0x66
  4580b0:	b.ne	458134 <ferror@plt+0x54b64>  // b.any
  4580b4:	ldrb	w3, [x1, #1]
  4580b8:	cmp	w3, #0x70
  4580bc:	b.ne	458198 <ferror@plt+0x54bc8>  // b.any
  4580c0:	add	x2, x1, #0x2
  4580c4:	str	x2, [x0, #24]
  4580c8:	ldrb	w2, [x1, #2]
  4580cc:	cmp	w2, #0x54
  4580d0:	b.ne	458114 <ferror@plt+0x54b44>  // b.any
  4580d4:	add	x1, x1, #0x3
  4580d8:	mov	w4, #0x0                   	// #0
  4580dc:	str	x1, [x0, #24]
  4580e0:	mov	x0, x19
  4580e4:	bl	4537d8 <ferror@plt+0x50208>
  4580e8:	mov	x20, x0
  4580ec:	cbz	x0, 458100 <ferror@plt+0x54b30>
  4580f0:	sxtw	x4, w4
  4580f4:	mov	w0, #0x6                   	// #6
  4580f8:	str	w0, [x20]
  4580fc:	str	x4, [x20, #8]
  458100:	mov	x0, x20
  458104:	ldp	x19, x20, [sp, #16]
  458108:	ldp	x21, x22, [sp, #32]
  45810c:	ldp	x29, x30, [sp], #48
  458110:	ret
  458114:	bl	453c14 <ferror@plt+0x50644>
  458118:	mvn	x1, x0
  45811c:	tst	x1, #0x7fffffff
  458120:	b.ne	45812c <ferror@plt+0x54b5c>  // b.any
  458124:	mov	x20, #0x0                   	// #0
  458128:	b	458100 <ferror@plt+0x54b30>
  45812c:	add	w4, w0, #0x1
  458130:	b	4580e0 <ferror@plt+0x54b10>
  458134:	sub	w0, w2, #0x30
  458138:	and	w0, w0, #0xff
  45813c:	cmp	w0, #0x9
  458140:	b.ls	458160 <ferror@plt+0x54b90>  // b.plast
  458144:	cmp	w2, #0x6f
  458148:	b.ne	458198 <ferror@plt+0x54bc8>  // b.any
  45814c:	ldrb	w0, [x1, #1]
  458150:	cmp	w0, #0x6e
  458154:	b.ne	458200 <ferror@plt+0x54c30>  // b.any
  458158:	add	x1, x1, #0x2
  45815c:	str	x1, [x19, #24]
  458160:	mov	x0, x19
  458164:	bl	456ed0 <ferror@plt+0x53900>
  458168:	mov	x20, x0
  45816c:	cbz	x0, 458124 <ferror@plt+0x54b54>
  458170:	ldr	x0, [x19, #24]
  458174:	ldrb	w0, [x0]
  458178:	cmp	w0, #0x49
  45817c:	b.ne	458100 <ferror@plt+0x54b30>  // b.any
  458180:	mov	x0, x19
  458184:	bl	458718 <ferror@plt+0x55148>
  458188:	mov	x2, x20
  45818c:	mov	x3, x0
  458190:	mov	w1, #0x4                   	// #4
  458194:	b	458050 <ferror@plt+0x54a80>
  458198:	cmp	w2, #0x69
  45819c:	mov	w0, #0x74                  	// #116
  4581a0:	ccmp	w2, w0, #0x4, ne  // ne = any
  4581a4:	b.ne	458200 <ferror@plt+0x54c30>  // b.any
  4581a8:	ldrb	w0, [x1, #1]
  4581ac:	cmp	w0, #0x6c
  4581b0:	b.ne	458200 <ferror@plt+0x54c30>  // b.any
  4581b4:	add	x1, x1, #0x2
  4581b8:	str	x1, [x19, #24]
  4581bc:	cmp	w2, #0x74
  4581c0:	b.ne	4581f8 <ferror@plt+0x54c28>  // b.any
  4581c4:	mov	x0, x19
  4581c8:	bl	456594 <ferror@plt+0x52fc4>
  4581cc:	mov	x20, x0
  4581d0:	ldr	x0, [x19, #24]
  4581d4:	ldrb	w0, [x0, #1]
  4581d8:	cbz	w0, 458124 <ferror@plt+0x54b54>
  4581dc:	mov	w1, #0x45                  	// #69
  4581e0:	mov	x0, x19
  4581e4:	bl	458744 <ferror@plt+0x55174>
  4581e8:	mov	x3, x0
  4581ec:	mov	x2, x20
  4581f0:	mov	w1, #0x31                  	// #49
  4581f4:	b	458050 <ferror@plt+0x54a80>
  4581f8:	mov	x20, #0x0                   	// #0
  4581fc:	b	4581d0 <ferror@plt+0x54c00>
  458200:	mov	x0, x19
  458204:	bl	456d5c <ferror@plt+0x5378c>
  458208:	mov	x20, x0
  45820c:	cbz	x0, 458124 <ferror@plt+0x54b54>
  458210:	ldr	w0, [x0]
  458214:	cmp	w0, #0x32
  458218:	b.ne	458268 <ferror@plt+0x54c98>  // b.any
  45821c:	ldr	x0, [x20, #8]
  458220:	ldr	x21, [x0]
  458224:	ldr	w0, [x0, #16]
  458228:	sub	w1, w0, #0x2
  45822c:	ldr	w0, [x19, #72]
  458230:	add	w0, w0, w1
  458234:	str	w0, [x19, #72]
  458238:	adrp	x1, 48c000 <_obstack_memory_used@@Base+0x2fc10>
  45823c:	mov	x0, x21
  458240:	add	x1, x1, #0x678
  458244:	bl	403220 <strcmp@plt>
  458248:	ldr	x1, [x20, #8]
  45824c:	cbnz	w0, 4582a0 <ferror@plt+0x54cd0>
  458250:	mov	x0, x19
  458254:	bl	456594 <ferror@plt+0x52fc4>
  458258:	mov	x3, x0
  45825c:	mov	x2, x20
  458260:	mov	w1, #0x37                  	// #55
  458264:	b	458050 <ferror@plt+0x54a80>
  458268:	cmp	w0, #0x34
  45826c:	b.eq	458348 <ferror@plt+0x54d78>  // b.none
  458270:	b.hi	458124 <ferror@plt+0x54b54>  // b.pmore
  458274:	cmp	w0, #0x33
  458278:	b.ne	458124 <ferror@plt+0x54b54>  // b.any
  45827c:	ldr	w1, [x20, #8]
  458280:	cmp	w1, #0x3
  458284:	b.hi	458124 <ferror@plt+0x54b54>  // b.pmore
  458288:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  45828c:	add	x0, x0, #0x894
  458290:	ldrb	w0, [x0, w1, uxtw]
  458294:	adr	x1, 4582a0 <ferror@plt+0x54cd0>
  458298:	add	x0, x1, w0, sxtb #2
  45829c:	br	x0
  4582a0:	ldr	w22, [x1, #20]
  4582a4:	cmp	w22, #0x3
  4582a8:	b.hi	458124 <ferror@plt+0x54b54>  // b.pmore
  4582ac:	adrp	x0, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  4582b0:	add	x0, x0, #0x898
  4582b4:	ldrb	w0, [x0, w22, uxtw]
  4582b8:	adr	x1, 4582c4 <ferror@plt+0x54cf4>
  4582bc:	add	x0, x1, w0, sxtb #2
  4582c0:	br	x0
  4582c4:	mov	x2, x20
  4582c8:	mov	x3, #0x0                   	// #0
  4582cc:	mov	w1, #0x36                  	// #54
  4582d0:	b	458050 <ferror@plt+0x54a80>
  4582d4:	ldrb	w0, [x21]
  4582d8:	mov	w1, #0x6d                  	// #109
  4582dc:	cmp	w0, #0x70
  4582e0:	ccmp	w0, w1, #0x4, ne  // ne = any
  4582e4:	b.ne	45830c <ferror@plt+0x54d3c>  // b.any
  4582e8:	ldrb	w1, [x21, #1]
  4582ec:	cmp	w1, w0
  4582f0:	b.ne	45830c <ferror@plt+0x54d3c>  // b.any
  4582f4:	ldr	x0, [x19, #24]
  4582f8:	ldrb	w1, [x0]
  4582fc:	cmp	w1, #0x5f
  458300:	b.ne	458310 <ferror@plt+0x54d40>  // b.any
  458304:	add	x0, x0, #0x1
  458308:	str	x0, [x19, #24]
  45830c:	mov	w22, #0x0                   	// #0
  458310:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  458314:	mov	x0, x21
  458318:	add	x1, x1, #0x657
  45831c:	bl	403220 <strcmp@plt>
  458320:	cbnz	w0, 458374 <ferror@plt+0x54da4>
  458324:	mov	x0, x19
  458328:	bl	458660 <ferror@plt+0x55090>
  45832c:	mov	x3, x0
  458330:	cbz	w22, 45825c <ferror@plt+0x54c8c>
  458334:	mov	x2, x0
  458338:	mov	w1, #0x39                  	// #57
  45833c:	mov	x0, x19
  458340:	bl	45380c <ferror@plt+0x5023c>
  458344:	b	458258 <ferror@plt+0x54c88>
  458348:	ldr	x0, [x19, #24]
  45834c:	ldrb	w1, [x0]
  458350:	cmp	w1, #0x5f
  458354:	b.ne	458370 <ferror@plt+0x54da0>  // b.any
  458358:	add	x0, x0, #0x1
  45835c:	str	x0, [x19, #24]
  458360:	mov	w1, #0x45                  	// #69
  458364:	mov	x0, x19
  458368:	bl	458744 <ferror@plt+0x55174>
  45836c:	b	458258 <ferror@plt+0x54c88>
  458370:	mov	w22, #0x0                   	// #0
  458374:	mov	x0, x19
  458378:	bl	457fd0 <ferror@plt+0x54a00>
  45837c:	b	45832c <ferror@plt+0x54d5c>
  458380:	ldr	x0, [x20, #8]
  458384:	bl	453df0 <ferror@plt+0x50820>
  458388:	cbz	w0, 4583e0 <ferror@plt+0x54e10>
  45838c:	mov	x0, x19
  458390:	bl	456594 <ferror@plt+0x52fc4>
  458394:	mov	x22, x0
  458398:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45839c:	mov	x0, x21
  4583a0:	add	x1, x1, #0x65d
  4583a4:	bl	403220 <strcmp@plt>
  4583a8:	cbnz	w0, 458400 <ferror@plt+0x54e30>
  4583ac:	mov	x0, x19
  4583b0:	mov	w1, #0x45                  	// #69
  4583b4:	bl	458744 <ferror@plt+0x55174>
  4583b8:	mov	x21, x0
  4583bc:	mov	x3, x21
  4583c0:	mov	x2, x22
  4583c4:	mov	w1, #0x39                  	// #57
  4583c8:	mov	x0, x19
  4583cc:	bl	45380c <ferror@plt+0x5023c>
  4583d0:	mov	x3, x0
  4583d4:	mov	x2, x20
  4583d8:	mov	w1, #0x38                  	// #56
  4583dc:	b	458050 <ferror@plt+0x54a80>
  4583e0:	ldrb	w0, [x21]
  4583e4:	cmp	w0, #0x66
  4583e8:	mov	x0, x19
  4583ec:	b.ne	4583f8 <ferror@plt+0x54e28>  // b.any
  4583f0:	bl	456d5c <ferror@plt+0x5378c>
  4583f4:	b	458394 <ferror@plt+0x54dc4>
  4583f8:	bl	457fd0 <ferror@plt+0x54a00>
  4583fc:	b	458394 <ferror@plt+0x54dc4>
  458400:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  458404:	mov	x0, x21
  458408:	add	x1, x1, #0x78d
  45840c:	bl	403220 <strcmp@plt>
  458410:	cbz	w0, 458428 <ferror@plt+0x54e58>
  458414:	adrp	x1, 489000 <_obstack_memory_used@@Base+0x2cc10>
  458418:	mov	x0, x21
  45841c:	add	x1, x1, #0x4c6
  458420:	bl	403220 <strcmp@plt>
  458424:	cbnz	w0, 458464 <ferror@plt+0x54e94>
  458428:	mov	x0, x19
  45842c:	bl	456ed0 <ferror@plt+0x53900>
  458430:	mov	x21, x0
  458434:	ldr	x0, [x19, #24]
  458438:	ldrb	w0, [x0]
  45843c:	cmp	w0, #0x49
  458440:	b.ne	4583bc <ferror@plt+0x54dec>  // b.any
  458444:	mov	x0, x19
  458448:	bl	458718 <ferror@plt+0x55148>
  45844c:	mov	x2, x21
  458450:	mov	x3, x0
  458454:	mov	w1, #0x4                   	// #4
  458458:	mov	x0, x19
  45845c:	bl	45380c <ferror@plt+0x5023c>
  458460:	b	4583b8 <ferror@plt+0x54de8>
  458464:	mov	x0, x19
  458468:	bl	457fd0 <ferror@plt+0x54a00>
  45846c:	b	4583b8 <ferror@plt+0x54de8>
  458470:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  458474:	mov	x0, x21
  458478:	add	x1, x1, #0x660
  45847c:	bl	403220 <strcmp@plt>
  458480:	cbnz	w0, 4584e0 <ferror@plt+0x54f10>
  458484:	mov	x0, x19
  458488:	bl	457fd0 <ferror@plt+0x54a00>
  45848c:	mov	x21, x0
  458490:	mov	x0, x19
  458494:	bl	457fd0 <ferror@plt+0x54a00>
  458498:	mov	x22, x0
  45849c:	mov	x0, x19
  4584a0:	bl	457fd0 <ferror@plt+0x54a00>
  4584a4:	cbz	x0, 458124 <ferror@plt+0x54b54>
  4584a8:	mov	x3, x0
  4584ac:	mov	x2, x22
  4584b0:	mov	w1, #0x3c                  	// #60
  4584b4:	mov	x0, x19
  4584b8:	bl	45380c <ferror@plt+0x5023c>
  4584bc:	mov	x3, x0
  4584c0:	mov	x2, x21
  4584c4:	mov	w1, #0x3b                  	// #59
  4584c8:	mov	x0, x19
  4584cc:	bl	45380c <ferror@plt+0x5023c>
  4584d0:	mov	x2, x20
  4584d4:	mov	x3, x0
  4584d8:	mov	w1, #0x3a                  	// #58
  4584dc:	b	458050 <ferror@plt+0x54a80>
  4584e0:	ldrb	w0, [x21]
  4584e4:	cmp	w0, #0x66
  4584e8:	b.ne	4584f8 <ferror@plt+0x54f28>  // b.any
  4584ec:	mov	x0, x19
  4584f0:	bl	456d5c <ferror@plt+0x5378c>
  4584f4:	b	45848c <ferror@plt+0x54ebc>
  4584f8:	cmp	w0, #0x6e
  4584fc:	b.ne	458124 <ferror@plt+0x54b54>  // b.any
  458500:	ldrb	w0, [x21, #1]
  458504:	mov	w1, #0x61                  	// #97
  458508:	cmp	w0, #0x77
  45850c:	ccmp	w0, w1, #0x4, ne  // ne = any
  458510:	b.ne	458124 <ferror@plt+0x54b54>  // b.any
  458514:	mov	w1, #0x5f                  	// #95
  458518:	mov	x0, x19
  45851c:	bl	458744 <ferror@plt+0x55174>
  458520:	mov	x21, x0
  458524:	mov	x0, x19
  458528:	bl	456594 <ferror@plt+0x52fc4>
  45852c:	mov	x22, x0
  458530:	ldr	x0, [x19, #24]
  458534:	ldrb	w1, [x0]
  458538:	cmp	w1, #0x45
  45853c:	b.ne	458550 <ferror@plt+0x54f80>  // b.any
  458540:	add	x0, x0, #0x1
  458544:	str	x0, [x19, #24]
  458548:	mov	x0, #0x0                   	// #0
  45854c:	b	4584a8 <ferror@plt+0x54ed8>
  458550:	cmp	w1, #0x70
  458554:	b.ne	45857c <ferror@plt+0x54fac>  // b.any
  458558:	ldrb	w1, [x0, #1]
  45855c:	cmp	w1, #0x69
  458560:	b.ne	458124 <ferror@plt+0x54b54>  // b.any
  458564:	add	x0, x0, #0x2
  458568:	str	x0, [x19, #24]
  45856c:	mov	w1, #0x45                  	// #69
  458570:	mov	x0, x19
  458574:	bl	458744 <ferror@plt+0x55174>
  458578:	b	4584a8 <ferror@plt+0x54ed8>
  45857c:	cmp	w1, #0x69
  458580:	b.ne	458124 <ferror@plt+0x54b54>  // b.any
  458584:	ldrb	w0, [x0, #1]
  458588:	cmp	w0, #0x6c
  45858c:	b.ne	458124 <ferror@plt+0x54b54>  // b.any
  458590:	mov	x0, x19
  458594:	bl	457fd0 <ferror@plt+0x54a00>
  458598:	b	4584a8 <ferror@plt+0x54ed8>
  45859c:	stp	x29, x30, [sp, #-32]!
  4585a0:	mov	w1, #0x1                   	// #1
  4585a4:	mov	x29, sp
  4585a8:	stp	x19, x20, [sp, #16]
  4585ac:	mov	x19, x0
  4585b0:	ldr	w20, [x0, #76]
  4585b4:	str	w1, [x0, #76]
  4585b8:	bl	457fd0 <ferror@plt+0x54a00>
  4585bc:	str	w20, [x19, #76]
  4585c0:	ldp	x19, x20, [sp, #16]
  4585c4:	ldp	x29, x30, [sp], #32
  4585c8:	ret
  4585cc:	ldr	x2, [x0, #24]
  4585d0:	ldrb	w1, [x2]
  4585d4:	cmp	w1, #0x4c
  4585d8:	b.eq	458648 <ferror@plt+0x55078>  // b.none
  4585dc:	stp	x29, x30, [sp, #-32]!
  4585e0:	mov	x29, sp
  4585e4:	str	x19, [sp, #16]
  4585e8:	mov	x19, x0
  4585ec:	b.hi	458610 <ferror@plt+0x55040>  // b.pmore
  4585f0:	sub	w1, w1, #0x49
  4585f4:	and	w1, w1, #0xff
  4585f8:	cmp	w1, #0x1
  4585fc:	b.ls	45864c <ferror@plt+0x5507c>  // b.plast
  458600:	mov	x0, x19
  458604:	ldr	x19, [sp, #16]
  458608:	ldp	x29, x30, [sp], #32
  45860c:	b	456594 <ferror@plt+0x52fc4>
  458610:	cmp	w1, #0x58
  458614:	b.ne	458600 <ferror@plt+0x55030>  // b.any
  458618:	add	x2, x2, #0x1
  45861c:	str	x2, [x0, #24]
  458620:	bl	45859c <ferror@plt+0x54fcc>
  458624:	ldr	x1, [x19, #24]
  458628:	ldrb	w2, [x1]
  45862c:	cmp	w2, #0x45
  458630:	b.ne	458658 <ferror@plt+0x55088>  // b.any
  458634:	add	x1, x1, #0x1
  458638:	str	x1, [x19, #24]
  45863c:	ldr	x19, [sp, #16]
  458640:	ldp	x29, x30, [sp], #32
  458644:	ret
  458648:	b	457eb8 <ferror@plt+0x548e8>
  45864c:	ldr	x19, [sp, #16]
  458650:	ldp	x29, x30, [sp], #32
  458654:	b	458718 <ferror@plt+0x55148>
  458658:	mov	x0, #0x0                   	// #0
  45865c:	b	45863c <ferror@plt+0x5506c>
  458660:	stp	x29, x30, [sp, #-64]!
  458664:	mov	x29, sp
  458668:	ldr	x1, [x0, #24]
  45866c:	stp	x19, x20, [sp, #16]
  458670:	mov	x19, x0
  458674:	str	x21, [sp, #32]
  458678:	ldr	x21, [x0, #64]
  45867c:	ldrb	w2, [x1]
  458680:	cmp	w2, #0x45
  458684:	b.ne	4586ac <ferror@plt+0x550dc>  // b.any
  458688:	add	x1, x1, #0x1
  45868c:	mov	x3, #0x0                   	// #0
  458690:	ldr	x21, [sp, #32]
  458694:	str	x1, [x0, #24]
  458698:	ldp	x19, x20, [sp, #16]
  45869c:	mov	x2, #0x0                   	// #0
  4586a0:	ldp	x29, x30, [sp], #64
  4586a4:	mov	w1, #0x2f                  	// #47
  4586a8:	b	45380c <ferror@plt+0x5023c>
  4586ac:	add	x20, sp, #0x38
  4586b0:	str	xzr, [sp, #56]
  4586b4:	mov	x0, x19
  4586b8:	bl	4585cc <ferror@plt+0x54ffc>
  4586bc:	mov	x2, x0
  4586c0:	cbnz	x0, 4586d8 <ferror@plt+0x55108>
  4586c4:	mov	x0, #0x0                   	// #0
  4586c8:	ldp	x19, x20, [sp, #16]
  4586cc:	ldr	x21, [sp, #32]
  4586d0:	ldp	x29, x30, [sp], #64
  4586d4:	ret
  4586d8:	mov	x0, x19
  4586dc:	mov	x3, #0x0                   	// #0
  4586e0:	mov	w1, #0x2f                  	// #47
  4586e4:	bl	45380c <ferror@plt+0x5023c>
  4586e8:	str	x0, [x20]
  4586ec:	cbz	x0, 4586c4 <ferror@plt+0x550f4>
  4586f0:	add	x20, x0, #0x10
  4586f4:	ldr	x0, [x19, #24]
  4586f8:	ldrb	w1, [x0]
  4586fc:	cmp	w1, #0x45
  458700:	b.ne	4586b4 <ferror@plt+0x550e4>  // b.any
  458704:	add	x0, x0, #0x1
  458708:	str	x0, [x19, #24]
  45870c:	str	x21, [x19, #64]
  458710:	ldr	x0, [sp, #56]
  458714:	b	4586c8 <ferror@plt+0x550f8>
  458718:	ldr	x3, [x0, #24]
  45871c:	ldrb	w1, [x3]
  458720:	sub	w1, w1, #0x49
  458724:	and	w1, w1, #0xff
  458728:	cmp	w1, #0x1
  45872c:	b.hi	45873c <ferror@plt+0x5516c>  // b.pmore
  458730:	add	x3, x3, #0x1
  458734:	str	x3, [x0, #24]
  458738:	b	458660 <ferror@plt+0x55090>
  45873c:	mov	x0, #0x0                   	// #0
  458740:	ret
  458744:	stp	x29, x30, [sp, #-64]!
  458748:	mov	x29, sp
  45874c:	ldr	x2, [x0, #24]
  458750:	stp	x19, x20, [sp, #16]
  458754:	mov	x19, x0
  458758:	str	x21, [sp, #32]
  45875c:	str	xzr, [sp, #56]
  458760:	ldrb	w3, [x2]
  458764:	cmp	w3, w1, uxtb
  458768:	b.ne	458790 <ferror@plt+0x551c0>  // b.any
  45876c:	add	x2, x2, #0x1
  458770:	mov	x3, #0x0                   	// #0
  458774:	ldr	x21, [sp, #32]
  458778:	str	x2, [x0, #24]
  45877c:	ldp	x19, x20, [sp, #16]
  458780:	mov	w1, #0x2e                  	// #46
  458784:	ldp	x29, x30, [sp], #64
  458788:	mov	x2, #0x0                   	// #0
  45878c:	b	45380c <ferror@plt+0x5023c>
  458790:	and	w21, w1, #0xff
  458794:	add	x20, sp, #0x38
  458798:	mov	x0, x19
  45879c:	bl	45859c <ferror@plt+0x54fcc>
  4587a0:	mov	x2, x0
  4587a4:	cbnz	x0, 4587bc <ferror@plt+0x551ec>
  4587a8:	mov	x0, #0x0                   	// #0
  4587ac:	ldp	x19, x20, [sp, #16]
  4587b0:	ldr	x21, [sp, #32]
  4587b4:	ldp	x29, x30, [sp], #64
  4587b8:	ret
  4587bc:	mov	x0, x19
  4587c0:	mov	x3, #0x0                   	// #0
  4587c4:	mov	w1, #0x2e                  	// #46
  4587c8:	bl	45380c <ferror@plt+0x5023c>
  4587cc:	str	x0, [x20]
  4587d0:	cbz	x0, 4587a8 <ferror@plt+0x551d8>
  4587d4:	add	x20, x0, #0x10
  4587d8:	ldr	x0, [x19, #24]
  4587dc:	ldrb	w1, [x0]
  4587e0:	cmp	w1, w21
  4587e4:	b.ne	458798 <ferror@plt+0x551c8>  // b.any
  4587e8:	add	x0, x0, #0x1
  4587ec:	str	x0, [x19, #24]
  4587f0:	ldr	x0, [sp, #56]
  4587f4:	b	4587ac <ferror@plt+0x551dc>
  4587f8:	stp	x29, x30, [sp, #-80]!
  4587fc:	cmp	w2, #0x0
  458800:	mov	x29, sp
  458804:	stp	x19, x20, [sp, #16]
  458808:	mov	x19, x0
  45880c:	mov	x20, x1
  458810:	ldr	x0, [x0, #24]
  458814:	stp	x21, x22, [sp, #32]
  458818:	mov	w21, w2
  45881c:	stp	x23, x24, [sp, #48]
  458820:	mov	x22, x1
  458824:	mov	w24, #0x1d                  	// #29
  458828:	str	x25, [sp, #64]
  45882c:	mov	w25, #0x1e                  	// #30
  458830:	mov	w23, #0x1c                  	// #28
  458834:	ldrb	w3, [x0]
  458838:	mov	w0, #0x1b                  	// #27
  45883c:	csel	w25, w25, w0, ne  // ne = any
  458840:	mov	w0, #0x1a                  	// #26
  458844:	csel	w24, w24, w0, ne  // ne = any
  458848:	mov	w0, #0x19                  	// #25
  45884c:	csel	w23, w23, w0, ne  // ne = any
  458850:	ldr	x4, [x19, #24]
  458854:	mov	x0, x4
  458858:	bl	453d98 <ferror@plt+0x507c8>
  45885c:	cbnz	w0, 4588b4 <ferror@plt+0x552e4>
  458860:	cmp	w3, #0x46
  458864:	eor	w21, w21, #0x1
  458868:	cset	w0, eq  // eq = none
  45886c:	tst	w21, w0
  458870:	b.eq	458a20 <ferror@plt+0x55450>  // b.none
  458874:	mov	w1, #0x1d                  	// #29
  458878:	mov	w2, #0x1e                  	// #30
  45887c:	mov	w3, #0x1c                  	// #28
  458880:	cmp	x22, x20
  458884:	b.eq	458920 <ferror@plt+0x55350>  // b.none
  458888:	ldr	x20, [x20]
  45888c:	ldr	w0, [x20]
  458890:	cmp	w0, #0x1a
  458894:	b.eq	458a28 <ferror@plt+0x55458>  // b.none
  458898:	cmp	w0, #0x1b
  45889c:	b.eq	458a30 <ferror@plt+0x55460>  // b.none
  4588a0:	cmp	w0, #0x19
  4588a4:	b.ne	4588ac <ferror@plt+0x552dc>  // b.any
  4588a8:	str	w3, [x20]
  4588ac:	add	x20, x20, #0x8
  4588b0:	b	458880 <ferror@plt+0x552b0>
  4588b4:	add	x0, x4, #0x1
  4588b8:	str	x0, [x19, #24]
  4588bc:	cmp	w3, #0x72
  4588c0:	b.ne	4588dc <ferror@plt+0x5530c>  // b.any
  4588c4:	ldr	w0, [x19, #72]
  4588c8:	mov	w1, w23
  4588cc:	add	w0, w0, #0x9
  4588d0:	str	w0, [x19, #72]
  4588d4:	mov	x3, #0x0                   	// #0
  4588d8:	b	458964 <ferror@plt+0x55394>
  4588dc:	cmp	w3, #0x56
  4588e0:	b.ne	4588f8 <ferror@plt+0x55328>  // b.any
  4588e4:	ldr	w0, [x19, #72]
  4588e8:	mov	w1, w24
  4588ec:	add	w0, w0, #0x9
  4588f0:	str	w0, [x19, #72]
  4588f4:	b	4588d4 <ferror@plt+0x55304>
  4588f8:	cmp	w3, #0x4b
  4588fc:	b.ne	458914 <ferror@plt+0x55344>  // b.any
  458900:	ldr	w0, [x19, #72]
  458904:	mov	w1, w25
  458908:	add	w0, w0, #0x6
  45890c:	str	w0, [x19, #72]
  458910:	b	4588d4 <ferror@plt+0x55304>
  458914:	ldrb	w0, [x4, #1]
  458918:	cbnz	w0, 45893c <ferror@plt+0x5536c>
  45891c:	mov	x20, #0x0                   	// #0
  458920:	mov	x0, x20
  458924:	ldp	x19, x20, [sp, #16]
  458928:	ldp	x21, x22, [sp, #32]
  45892c:	ldp	x23, x24, [sp, #48]
  458930:	ldr	x25, [sp, #64]
  458934:	ldp	x29, x30, [sp], #80
  458938:	ret
  45893c:	add	x0, x4, #0x2
  458940:	str	x0, [x19, #24]
  458944:	ldrb	w0, [x4, #1]
  458948:	cmp	w0, #0x78
  45894c:	b.ne	458988 <ferror@plt+0x553b8>  // b.any
  458950:	ldr	w0, [x19, #72]
  458954:	mov	x3, #0x0                   	// #0
  458958:	mov	w1, #0x4d                  	// #77
  45895c:	add	w0, w0, #0x11
  458960:	str	w0, [x19, #72]
  458964:	mov	x0, x19
  458968:	mov	x2, #0x0                   	// #0
  45896c:	bl	45380c <ferror@plt+0x5023c>
  458970:	str	x0, [x22]
  458974:	cbz	x0, 45891c <ferror@plt+0x5534c>
  458978:	add	x22, x0, #0x8
  45897c:	ldr	x0, [x19, #24]
  458980:	ldrb	w3, [x0]
  458984:	b	458850 <ferror@plt+0x55280>
  458988:	and	w2, w0, #0xffffffdf
  45898c:	and	w1, w2, #0xff
  458990:	cmp	w2, #0x4f
  458994:	b.ne	4589dc <ferror@plt+0x5540c>  // b.any
  458998:	ldr	w2, [x19, #72]
  45899c:	cmp	w0, #0x4f
  4589a0:	add	w2, w2, #0x9
  4589a4:	str	w2, [x19, #72]
  4589a8:	b.ne	4588d4 <ferror@plt+0x55304>  // b.any
  4589ac:	mov	x0, x19
  4589b0:	bl	45859c <ferror@plt+0x54fcc>
  4589b4:	mov	x3, x0
  4589b8:	cbz	x0, 45891c <ferror@plt+0x5534c>
  4589bc:	ldr	x0, [x19, #24]
  4589c0:	ldrb	w1, [x0]
  4589c4:	cmp	w1, #0x45
  4589c8:	b.ne	45891c <ferror@plt+0x5534c>  // b.any
  4589cc:	add	x0, x0, #0x1
  4589d0:	mov	w1, #0x4f                  	// #79
  4589d4:	str	x0, [x19, #24]
  4589d8:	b	458964 <ferror@plt+0x55394>
  4589dc:	cmp	w0, #0x77
  4589e0:	b.ne	45891c <ferror@plt+0x5534c>  // b.any
  4589e4:	ldr	w0, [x19, #72]
  4589e8:	add	w0, w0, #0x6
  4589ec:	str	w0, [x19, #72]
  4589f0:	mov	x0, x19
  4589f4:	bl	456c7c <ferror@plt+0x536ac>
  4589f8:	mov	x3, x0
  4589fc:	cbz	x0, 45891c <ferror@plt+0x5534c>
  458a00:	ldr	x0, [x19, #24]
  458a04:	ldrb	w1, [x0]
  458a08:	cmp	w1, #0x45
  458a0c:	b.ne	45891c <ferror@plt+0x5534c>  // b.any
  458a10:	add	x0, x0, #0x1
  458a14:	mov	w1, #0x50                  	// #80
  458a18:	str	x0, [x19, #24]
  458a1c:	b	458964 <ferror@plt+0x55394>
  458a20:	mov	x20, x22
  458a24:	b	458920 <ferror@plt+0x55350>
  458a28:	str	w1, [x20]
  458a2c:	b	4588ac <ferror@plt+0x552dc>
  458a30:	str	w2, [x20]
  458a34:	b	4588ac <ferror@plt+0x552dc>
  458a38:	stp	x29, x30, [sp, #-416]!
  458a3c:	mov	w4, w0
  458a40:	mov	x5, x1
  458a44:	mov	x29, sp
  458a48:	str	x19, [sp, #16]
  458a4c:	add	x0, x29, #0x28
  458a50:	str	xzr, [x29, #296]
  458a54:	strb	wzr, [x29, #304]
  458a58:	stp	x2, x3, [x29, #312]
  458a5c:	stp	xzr, xzr, [x29, #328]
  458a60:	stp	xzr, xzr, [x29, #344]
  458a64:	stp	xzr, xzr, [x29, #360]
  458a68:	stp	xzr, xzr, [x29, #376]
  458a6c:	stp	xzr, xzr, [x29, #392]
  458a70:	bl	45392c <ferror@plt+0x5035c>
  458a74:	ldr	w0, [x29, #348]
  458a78:	cmp	w0, #0x7ff
  458a7c:	b.gt	458a84 <ferror@plt+0x554b4>
  458a80:	str	wzr, [x29, #348]
  458a84:	ldr	w3, [x29, #388]
  458a88:	mov	w0, #0x1                   	// #1
  458a8c:	ldr	w2, [x29, #404]
  458a90:	mov	x19, sp
  458a94:	cmp	w3, #0x0
  458a98:	str	xzr, [x29, #408]
  458a9c:	mul	w2, w3, w2
  458aa0:	csel	w3, w3, w0, gt
  458aa4:	str	w2, [x29, #404]
  458aa8:	cmp	w2, #0x0
  458aac:	sub	sp, sp, w3, sxtw #4
  458ab0:	csel	w2, w2, w0, gt
  458ab4:	mov	x1, sp
  458ab8:	str	x1, [x29, #376]
  458abc:	mov	w1, w4
  458ac0:	sub	sp, sp, w2, sxtw #4
  458ac4:	mov	x2, x5
  458ac8:	mov	x0, sp
  458acc:	str	x0, [x29, #392]
  458ad0:	add	x0, x29, #0x28
  458ad4:	bl	455900 <ferror@plt+0x52330>
  458ad8:	add	x0, x29, #0x28
  458adc:	mov	sp, x19
  458ae0:	bl	4539ec <ferror@plt+0x5041c>
  458ae4:	ldr	w0, [x29, #344]
  458ae8:	mov	sp, x29
  458aec:	cmp	w0, #0x0
  458af0:	cset	w0, eq  // eq = none
  458af4:	ldr	x19, [sp, #16]
  458af8:	ldp	x29, x30, [sp], #416
  458afc:	ret
  458b00:	stp	x29, x30, [sp, #-80]!
  458b04:	mov	x29, sp
  458b08:	stp	x19, x20, [sp, #16]
  458b0c:	mov	w20, w0
  458b10:	mov	x19, x3
  458b14:	str	x21, [sp, #32]
  458b18:	mov	x21, x1
  458b1c:	stp	xzr, xzr, [sp, #48]
  458b20:	str	xzr, [sp, #64]
  458b24:	str	wzr, [sp, #72]
  458b28:	cbz	w2, 458b38 <ferror@plt+0x55568>
  458b2c:	sxtw	x1, w2
  458b30:	add	x0, sp, #0x30
  458b34:	bl	453f04 <ferror@plt+0x50934>
  458b38:	adrp	x2, 453000 <ferror@plt+0x4fa30>
  458b3c:	add	x3, sp, #0x30
  458b40:	add	x2, x2, #0xf7c
  458b44:	mov	x1, x21
  458b48:	mov	w0, w20
  458b4c:	bl	458a38 <ferror@plt+0x55468>
  458b50:	cbnz	w0, 458b74 <ferror@plt+0x555a4>
  458b54:	ldr	x0, [sp, #48]
  458b58:	bl	4032a0 <free@plt>
  458b5c:	str	xzr, [x19]
  458b60:	mov	x0, #0x0                   	// #0
  458b64:	ldp	x19, x20, [sp, #16]
  458b68:	ldr	x21, [sp, #32]
  458b6c:	ldp	x29, x30, [sp], #80
  458b70:	ret
  458b74:	ldr	w0, [sp, #72]
  458b78:	cmp	w0, #0x0
  458b7c:	ldr	x0, [sp, #64]
  458b80:	csinc	x0, x0, xzr, eq  // eq = none
  458b84:	str	x0, [x19]
  458b88:	ldr	x0, [sp, #48]
  458b8c:	b	458b64 <ferror@plt+0x55594>
  458b90:	add	x4, x0, x2
  458b94:	stp	x0, x4, [x3]
  458b98:	str	w1, [x3, #16]
  458b9c:	str	x0, [x3, #24]
  458ba0:	lsl	w0, w2, #1
  458ba4:	str	wzr, [x3, #40]
  458ba8:	str	w0, [x3, #44]
  458bac:	stp	wzr, w2, [x3, #56]
  458bb0:	stp	xzr, xzr, [x3, #64]
  458bb4:	str	xzr, [x3, #80]
  458bb8:	ret
  458bbc:	stp	x29, x30, [sp, #-176]!
  458bc0:	mov	x29, sp
  458bc4:	stp	x19, x20, [sp, #16]
  458bc8:	mov	x19, x0
  458bcc:	stp	x21, x22, [sp, #32]
  458bd0:	mov	w21, w1
  458bd4:	mov	x22, x2
  458bd8:	stp	x23, x24, [sp, #48]
  458bdc:	mov	x23, x3
  458be0:	str	x25, [sp, #64]
  458be4:	ldrb	w0, [x0]
  458be8:	cmp	w0, #0x5f
  458bec:	b.ne	458bfc <ferror@plt+0x5562c>  // b.any
  458bf0:	ldrb	w0, [x19, #1]
  458bf4:	cmp	w0, #0x5a
  458bf8:	b.eq	458d70 <ferror@plt+0x557a0>  // b.none
  458bfc:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  458c00:	mov	x0, x19
  458c04:	add	x1, x1, #0x75c
  458c08:	mov	x2, #0x8                   	// #8
  458c0c:	bl	402f80 <strncmp@plt>
  458c10:	cbnz	w0, 458d4c <ferror@plt+0x5577c>
  458c14:	ldrb	w0, [x19, #8]
  458c18:	sub	w0, w0, #0x24
  458c1c:	and	w0, w0, #0xff
  458c20:	cmp	w0, #0x3b
  458c24:	b.hi	458d4c <ferror@plt+0x5577c>  // b.pmore
  458c28:	mov	x1, #0x401                 	// #1025
  458c2c:	movk	x1, #0x800, lsl #48
  458c30:	lsr	x0, x1, x0
  458c34:	tbz	w0, #0, 458d4c <ferror@plt+0x5577c>
  458c38:	ldrb	w0, [x19, #9]
  458c3c:	mov	w1, #0x49                  	// #73
  458c40:	cmp	w0, #0x44
  458c44:	ccmp	w0, w1, #0x4, ne  // ne = any
  458c48:	b.ne	458d4c <ferror@plt+0x5577c>  // b.any
  458c4c:	ldrb	w1, [x19, #10]
  458c50:	cmp	w1, #0x5f
  458c54:	b.ne	458d4c <ferror@plt+0x5577c>  // b.any
  458c58:	cmp	w0, #0x49
  458c5c:	cset	w20, ne  // ne = any
  458c60:	add	w20, w20, #0x2
  458c64:	mov	x0, x19
  458c68:	bl	402d50 <strlen@plt>
  458c6c:	add	x3, x29, #0x58
  458c70:	mov	x2, x0
  458c74:	mov	w1, w21
  458c78:	mov	x0, x19
  458c7c:	bl	458b90 <ferror@plt+0x555c0>
  458c80:	ldr	w0, [x29, #132]
  458c84:	tbnz	w21, #18, 458c90 <ferror@plt+0x556c0>
  458c88:	cmp	w0, #0x800
  458c8c:	b.hi	458d50 <ferror@plt+0x55780>  // b.pmore
  458c90:	mov	w1, #0x18                  	// #24
  458c94:	mov	x24, sp
  458c98:	cmp	w20, #0x1
  458c9c:	smull	x0, w0, w1
  458ca0:	add	x0, x0, #0xf
  458ca4:	and	x0, x0, #0xfffffffffffffff0
  458ca8:	sub	sp, sp, x0
  458cac:	ldrsw	x0, [x29, #148]
  458cb0:	mov	x1, sp
  458cb4:	str	x1, [x29, #120]
  458cb8:	lsl	x0, x0, #3
  458cbc:	add	x0, x0, #0xf
  458cc0:	and	x0, x0, #0xfffffffffffffff0
  458cc4:	sub	sp, sp, x0
  458cc8:	mov	x0, sp
  458ccc:	str	x0, [x29, #136]
  458cd0:	b.eq	458dbc <ferror@plt+0x557ec>  // b.none
  458cd4:	sub	w0, w20, #0x2
  458cd8:	cmp	w0, #0x1
  458cdc:	b.hi	458d80 <ferror@plt+0x557b0>  // b.pmore
  458ce0:	ldr	x0, [x29, #112]
  458ce4:	cmp	w20, #0x2
  458ce8:	cset	w19, ne  // ne = any
  458cec:	add	x25, x0, #0xb
  458cf0:	str	x25, [x29, #112]
  458cf4:	add	w19, w19, #0x44
  458cf8:	ldrb	w1, [x0, #11]
  458cfc:	cmp	w1, #0x5f
  458d00:	b.eq	458dcc <ferror@plt+0x557fc>  // b.none
  458d04:	mov	x0, x25
  458d08:	bl	402d50 <strlen@plt>
  458d0c:	mov	x1, x25
  458d10:	mov	w2, w0
  458d14:	add	x0, x29, #0x58
  458d18:	bl	45614c <ferror@plt+0x52b7c>
  458d1c:	mov	x2, x0
  458d20:	mov	w1, w19
  458d24:	mov	x3, #0x0                   	// #0
  458d28:	add	x0, x29, #0x58
  458d2c:	bl	45380c <ferror@plt+0x5023c>
  458d30:	mov	x19, x0
  458d34:	ldr	x20, [x29, #112]
  458d38:	mov	x0, x20
  458d3c:	bl	402d50 <strlen@plt>
  458d40:	add	x20, x20, x0
  458d44:	str	x20, [x29, #112]
  458d48:	b	458d8c <ferror@plt+0x557bc>
  458d4c:	tbnz	w21, #4, 458d78 <ferror@plt+0x557a8>
  458d50:	mov	w0, #0x0                   	// #0
  458d54:	mov	sp, x29
  458d58:	ldp	x19, x20, [sp, #16]
  458d5c:	ldp	x21, x22, [sp, #32]
  458d60:	ldp	x23, x24, [sp, #48]
  458d64:	ldr	x25, [sp, #64]
  458d68:	ldp	x29, x30, [sp], #176
  458d6c:	ret
  458d70:	mov	w20, #0x1                   	// #1
  458d74:	b	458c64 <ferror@plt+0x55694>
  458d78:	mov	w20, #0x0                   	// #0
  458d7c:	b	458c64 <ferror@plt+0x55694>
  458d80:	add	x0, x29, #0x58
  458d84:	bl	456594 <ferror@plt+0x52fc4>
  458d88:	mov	x19, x0
  458d8c:	tbz	w21, #0, 458d9c <ferror@plt+0x557cc>
  458d90:	ldr	x0, [x29, #112]
  458d94:	ldrb	w0, [x0]
  458d98:	cbnz	w0, 458df0 <ferror@plt+0x55820>
  458d9c:	cbz	x19, 458df0 <ferror@plt+0x55820>
  458da0:	mov	x3, x23
  458da4:	mov	x2, x22
  458da8:	mov	x1, x19
  458dac:	mov	w0, w21
  458db0:	bl	458a38 <ferror@plt+0x55468>
  458db4:	mov	sp, x24
  458db8:	b	458d54 <ferror@plt+0x55784>
  458dbc:	mov	w1, w20
  458dc0:	add	x0, x29, #0x58
  458dc4:	bl	457d70 <ferror@plt+0x547a0>
  458dc8:	b	458d88 <ferror@plt+0x557b8>
  458dcc:	ldrb	w1, [x0, #12]
  458dd0:	cmp	w1, #0x5a
  458dd4:	b.ne	458d04 <ferror@plt+0x55734>  // b.any
  458dd8:	add	x0, x0, #0xd
  458ddc:	mov	w1, #0x0                   	// #0
  458de0:	str	x0, [x29, #112]
  458de4:	add	x0, x29, #0x58
  458de8:	bl	457784 <ferror@plt+0x541b4>
  458dec:	b	458d1c <ferror@plt+0x5574c>
  458df0:	mov	w0, #0x0                   	// #0
  458df4:	b	458db4 <ferror@plt+0x557e4>
  458df8:	stp	x29, x30, [sp, #-64]!
  458dfc:	mov	x29, sp
  458e00:	add	x3, sp, #0x20
  458e04:	str	x19, [sp, #16]
  458e08:	mov	x19, x2
  458e0c:	adrp	x2, 453000 <ferror@plt+0x4fa30>
  458e10:	add	x2, x2, #0xf7c
  458e14:	stp	xzr, xzr, [sp, #32]
  458e18:	str	xzr, [sp, #48]
  458e1c:	str	wzr, [sp, #56]
  458e20:	bl	458bbc <ferror@plt+0x555ec>
  458e24:	cbnz	w0, 458e44 <ferror@plt+0x55874>
  458e28:	ldr	x0, [sp, #32]
  458e2c:	bl	4032a0 <free@plt>
  458e30:	str	xzr, [x19]
  458e34:	mov	x0, #0x0                   	// #0
  458e38:	ldr	x19, [sp, #16]
  458e3c:	ldp	x29, x30, [sp], #64
  458e40:	ret
  458e44:	ldr	w0, [sp, #56]
  458e48:	cmp	w0, #0x0
  458e4c:	ldr	x0, [sp, #48]
  458e50:	csinc	x0, x0, xzr, eq  // eq = none
  458e54:	str	x0, [x19]
  458e58:	ldr	x0, [sp, #32]
  458e5c:	b	458e38 <ferror@plt+0x55868>
  458e60:	stp	x29, x30, [sp, #-144]!
  458e64:	mov	x29, sp
  458e68:	stp	x19, x20, [sp, #16]
  458e6c:	mov	x19, x1
  458e70:	mov	x20, x2
  458e74:	str	x21, [sp, #32]
  458e78:	mov	x21, x0
  458e7c:	str	wzr, [x1]
  458e80:	str	wzr, [x2]
  458e84:	bl	402d50 <strlen@plt>
  458e88:	mov	x2, x0
  458e8c:	add	x3, x29, #0x38
  458e90:	mov	x0, x21
  458e94:	mov	w1, #0x4000                	// #16384
  458e98:	bl	458b90 <ferror@plt+0x555c0>
  458e9c:	ldr	w0, [x29, #100]
  458ea0:	mov	w1, #0x18                  	// #24
  458ea4:	smull	x0, w0, w1
  458ea8:	add	x0, x0, #0xf
  458eac:	and	x0, x0, #0xfffffffffffffff0
  458eb0:	sub	sp, sp, x0
  458eb4:	ldrsw	x0, [x29, #116]
  458eb8:	mov	x1, sp
  458ebc:	str	x1, [x29, #88]
  458ec0:	mov	w1, #0x1                   	// #1
  458ec4:	lsl	x0, x0, #3
  458ec8:	add	x0, x0, #0xf
  458ecc:	and	x0, x0, #0xfffffffffffffff0
  458ed0:	sub	sp, sp, x0
  458ed4:	mov	x0, sp
  458ed8:	str	x0, [x29, #104]
  458edc:	add	x0, x29, #0x38
  458ee0:	bl	457d70 <ferror@plt+0x547a0>
  458ee4:	adrp	x2, 4cc000 <_obstack_memory_used@@Base+0x6fc10>
  458ee8:	add	x2, x2, #0x89c
  458eec:	cbz	x0, 458f2c <ferror@plt+0x5595c>
  458ef0:	ldr	w1, [x0]
  458ef4:	sub	w1, w1, #0x1
  458ef8:	cmp	w1, #0x7
  458efc:	b.hi	458f4c <ferror@plt+0x5597c>  // b.pmore
  458f00:	ldrb	w1, [x2, w1, uxtw]
  458f04:	adr	x3, 458f10 <ferror@plt+0x55940>
  458f08:	add	x1, x3, w1, sxtb #2
  458f0c:	br	x1
  458f10:	ldr	x0, [x0, #8]
  458f14:	b	458eec <ferror@plt+0x5591c>
  458f18:	ldr	x0, [x0, #16]
  458f1c:	b	458eec <ferror@plt+0x5591c>
  458f20:	ldr	w0, [x0, #8]
  458f24:	str	w0, [x19]
  458f28:	mov	w0, #0x1                   	// #1
  458f2c:	mov	sp, x29
  458f30:	ldp	x19, x20, [sp, #16]
  458f34:	ldr	x21, [sp, #32]
  458f38:	ldp	x29, x30, [sp], #144
  458f3c:	ret
  458f40:	ldr	w0, [x0, #8]
  458f44:	str	w0, [x20]
  458f48:	b	458f28 <ferror@plt+0x55958>
  458f4c:	mov	w0, #0x0                   	// #0
  458f50:	b	458f2c <ferror@plt+0x5595c>
  458f54:	stp	x29, x30, [sp, #-32]!
  458f58:	mov	x29, sp
  458f5c:	add	x2, sp, #0x18
  458f60:	bl	458df8 <ferror@plt+0x55828>
  458f64:	ldp	x29, x30, [sp], #32
  458f68:	ret
  458f6c:	b	458bbc <ferror@plt+0x555ec>
  458f70:	stp	x29, x30, [sp, #-32]!
  458f74:	mov	w1, #0x25                  	// #37
  458f78:	mov	x29, sp
  458f7c:	add	x2, sp, #0x18
  458f80:	bl	458df8 <ferror@plt+0x55828>
  458f84:	ldp	x29, x30, [sp], #32
  458f88:	ret
  458f8c:	mov	x3, x2
  458f90:	mov	x2, x1
  458f94:	mov	w1, #0x25                  	// #37
  458f98:	b	458bbc <ferror@plt+0x555ec>
  458f9c:	stp	x29, x30, [sp, #-32]!
  458fa0:	mov	x29, sp
  458fa4:	add	x2, sp, #0x1c
  458fa8:	add	x1, sp, #0x18
  458fac:	bl	458e60 <ferror@plt+0x55890>
  458fb0:	cmp	w0, #0x0
  458fb4:	ldr	w0, [sp, #24]
  458fb8:	ldp	x29, x30, [sp], #32
  458fbc:	csel	w0, w0, wzr, ne  // ne = any
  458fc0:	ret
  458fc4:	stp	x29, x30, [sp, #-32]!
  458fc8:	mov	x29, sp
  458fcc:	add	x2, sp, #0x1c
  458fd0:	add	x1, sp, #0x18
  458fd4:	bl	458e60 <ferror@plt+0x55890>
  458fd8:	cmp	w0, #0x0
  458fdc:	ldr	w0, [sp, #28]
  458fe0:	ldp	x29, x30, [sp], #32
  458fe4:	csel	w0, w0, wzr, ne  // ne = any
  458fe8:	ret
  458fec:	mov	x1, #0x2301                	// #8961
  458ff0:	str	xzr, [x0, #16]
  458ff4:	movk	x1, #0x6745, lsl #16
  458ff8:	str	wzr, [x0, #24]
  458ffc:	movk	x1, #0xab89, lsl #32
  459000:	movk	x1, #0xefcd, lsl #48
  459004:	str	x1, [x0]
  459008:	mov	x1, #0xdcfe                	// #56574
  45900c:	movk	x1, #0x98ba, lsl #16
  459010:	movk	x1, #0x5476, lsl #32
  459014:	movk	x1, #0x1032, lsl #48
  459018:	str	x1, [x0, #8]
  45901c:	ret
  459020:	mov	x2, x0
  459024:	mov	x0, x1
  459028:	ldp	x3, x1, [x2]
  45902c:	stp	x3, x1, [x0]
  459030:	ret
  459034:	stp	x29, x30, [sp, #-112]!
  459038:	and	x3, x1, #0xfffffffffffffffc
  45903c:	add	x3, x0, x3
  459040:	mov	x29, sp
  459044:	ldr	w4, [x2, #16]
  459048:	lsr	x5, x1, #32
  45904c:	str	x3, [sp, #104]
  459050:	add	w4, w4, w1
  459054:	ldr	w3, [x2, #20]
  459058:	stp	x21, x22, [sp, #32]
  45905c:	cmp	x1, w4, uxtw
  459060:	stp	x23, x24, [sp, #48]
  459064:	add	w3, w3, w5
  459068:	cinc	w1, w3, hi  // hi = pmore
  45906c:	ldp	w23, w24, [x2, #8]
  459070:	stp	x25, x26, [sp, #64]
  459074:	ldp	w26, w22, [x2]
  459078:	stp	x27, x28, [sp, #80]
  45907c:	mov	w27, #0xcde6                	// #52710
  459080:	mov	w28, #0x7d6                 	// #2006
  459084:	movk	w27, #0x21e1, lsl #16
  459088:	movk	w28, #0xc337, lsl #16
  45908c:	stp	x19, x20, [sp, #16]
  459090:	str	w4, [x2, #16]
  459094:	str	w1, [x2, #20]
  459098:	mov	w1, #0xa478                	// #42104
  45909c:	movk	w1, #0xd76a, lsl #16
  4590a0:	add	w5, w26, w1
  4590a4:	mov	w1, #0xb756                	// #46934
  4590a8:	movk	w1, #0xe8c7, lsl #16
  4590ac:	add	w4, w24, w1
  4590b0:	mov	w1, #0x70db                	// #28891
  4590b4:	movk	w1, #0x2420, lsl #16
  4590b8:	add	w8, w23, w1
  4590bc:	mov	w1, #0xceee                	// #52974
  4590c0:	movk	w1, #0xc1bd, lsl #16
  4590c4:	add	w10, w22, w1
  4590c8:	ldr	x1, [sp, #104]
  4590cc:	cmp	x0, x1
  4590d0:	b.cc	4590f8 <ferror@plt+0x55b28>  // b.lo, b.ul, b.last
  4590d4:	stp	w26, w22, [x2]
  4590d8:	stp	w23, w24, [x2, #8]
  4590dc:	ldp	x19, x20, [sp, #16]
  4590e0:	ldp	x21, x22, [sp, #32]
  4590e4:	ldp	x23, x24, [sp, #48]
  4590e8:	ldp	x25, x26, [sp, #64]
  4590ec:	ldp	x27, x28, [sp, #80]
  4590f0:	ldp	x29, x30, [sp], #112
  4590f4:	ret
  4590f8:	ldp	w14, w7, [x0]
  4590fc:	eor	w3, w23, w24
  459100:	and	w3, w3, w22
  459104:	mov	w6, #0xfaf                 	// #4015
  459108:	eor	w3, w3, w24
  45910c:	movk	w6, #0xf57c, lsl #16
  459110:	add	w3, w3, w14
  459114:	ldr	w11, [x0, #20]
  459118:	add	w3, w3, w5
  45911c:	ldr	w20, [x0, #36]
  459120:	ldp	w16, w9, [x0, #8]
  459124:	ror	w3, w3, #25
  459128:	add	w1, w22, w3
  45912c:	eor	w3, w22, w23
  459130:	and	w3, w3, w1
  459134:	mov	w12, #0xffff5bb1            	// #-42063
  459138:	eor	w3, w3, w23
  45913c:	mov	w17, #0xd7be                	// #55230
  459140:	add	w3, w3, w7
  459144:	movk	w17, #0x895c, lsl #16
  459148:	add	w3, w3, w4
  45914c:	mov	w19, #0x7193                	// #29075
  459150:	movk	w19, #0xfd98, lsl #16
  459154:	mov	w21, #0x438e                	// #17294
  459158:	movk	w21, #0xa679, lsl #16
  45915c:	ror	w3, w3, #20
  459160:	add	w5, w1, w3
  459164:	eor	w3, w22, w1
  459168:	and	w3, w3, w5
  45916c:	mov	w25, #0x821                 	// #2081
  459170:	eor	w3, w3, w22
  459174:	movk	w25, #0x49b4, lsl #16
  459178:	add	w3, w3, w16
  45917c:	add	x0, x0, #0x40
  459180:	add	w3, w3, w8
  459184:	ror	w3, w3, #15
  459188:	add	w4, w5, w3
  45918c:	eor	w3, w1, w5
  459190:	and	w3, w3, w4
  459194:	eor	w3, w3, w1
  459198:	add	w3, w3, w9
  45919c:	add	w3, w3, w10
  4591a0:	ror	w3, w3, #10
  4591a4:	add	w13, w4, w3
  4591a8:	eor	w3, w5, w4
  4591ac:	and	w3, w3, w13
  4591b0:	eor	w3, w3, w5
  4591b4:	add	w3, w3, w1
  4591b8:	ldur	w1, [x0, #-48]
  4591bc:	add	w6, w1, w6
  4591c0:	add	w3, w6, w3
  4591c4:	ror	w3, w3, #25
  4591c8:	add	w6, w13, w3
  4591cc:	eor	w3, w4, w13
  4591d0:	and	w3, w3, w6
  4591d4:	eor	w3, w3, w4
  4591d8:	add	w3, w3, w5
  4591dc:	mov	w5, #0xc62a                	// #50730
  4591e0:	movk	w5, #0x4787, lsl #16
  4591e4:	add	w18, w11, w5
  4591e8:	add	w3, w18, w3
  4591ec:	mov	w5, #0x4613                	// #17939
  4591f0:	movk	w5, #0xa830, lsl #16
  4591f4:	ror	w3, w3, #20
  4591f8:	add	w18, w6, w3
  4591fc:	eor	w3, w13, w6
  459200:	and	w3, w3, w18
  459204:	eor	w3, w3, w13
  459208:	add	w3, w3, w4
  45920c:	ldur	w4, [x0, #-40]
  459210:	add	w5, w4, w5
  459214:	add	w5, w5, w3
  459218:	eor	w3, w6, w18
  45921c:	ror	w5, w5, #15
  459220:	add	w8, w18, w5
  459224:	mov	w5, #0x9501                	// #38145
  459228:	and	w3, w3, w8
  45922c:	movk	w5, #0xfd46, lsl #16
  459230:	eor	w3, w3, w6
  459234:	add	w3, w3, w13
  459238:	ldur	w13, [x0, #-36]
  45923c:	add	w5, w13, w5
  459240:	add	w5, w5, w3
  459244:	eor	w3, w18, w8
  459248:	ror	w5, w5, #10
  45924c:	add	w15, w8, w5
  459250:	mov	w5, #0x98d8                	// #39128
  459254:	and	w3, w3, w15
  459258:	movk	w5, #0x6980, lsl #16
  45925c:	eor	w3, w3, w18
  459260:	add	w3, w3, w6
  459264:	ldur	w6, [x0, #-32]
  459268:	add	w10, w6, w5
  45926c:	mov	w5, #0xf7af                	// #63407
  459270:	add	w10, w10, w3
  459274:	eor	w3, w8, w15
  459278:	movk	w5, #0x8b44, lsl #16
  45927c:	ror	w10, w10, #25
  459280:	add	w10, w15, w10
  459284:	and	w3, w3, w10
  459288:	eor	w3, w3, w8
  45928c:	add	w3, w3, w18
  459290:	add	w18, w20, w5
  459294:	add	w3, w18, w3
  459298:	eor	w5, w15, w10
  45929c:	ror	w18, w3, #20
  4592a0:	add	w3, w10, w18
  4592a4:	and	w5, w5, w3
  4592a8:	eor	w5, w5, w15
  4592ac:	add	w5, w5, w8
  4592b0:	ldur	w8, [x0, #-24]
  4592b4:	add	w12, w8, w12
  4592b8:	add	w12, w12, w5
  4592bc:	eor	w5, w10, w3
  4592c0:	ror	w12, w12, #15
  4592c4:	add	w12, w3, w12
  4592c8:	and	w5, w5, w12
  4592cc:	eor	w5, w5, w10
  4592d0:	add	w5, w5, w15
  4592d4:	ldur	w15, [x0, #-20]
  4592d8:	add	w18, w15, w17
  4592dc:	eor	w17, w3, w12
  4592e0:	add	w5, w18, w5
  4592e4:	ror	w18, w5, #10
  4592e8:	add	w5, w12, w18
  4592ec:	mov	w18, #0x1122                	// #4386
  4592f0:	and	w17, w17, w5
  4592f4:	movk	w18, #0x6b90, lsl #16
  4592f8:	eor	w17, w17, w3
  4592fc:	add	w17, w17, w10
  459300:	ldur	w10, [x0, #-16]
  459304:	add	w18, w10, w18
  459308:	add	w17, w18, w17
  45930c:	eor	w18, w12, w5
  459310:	ror	w17, w17, #25
  459314:	add	w17, w5, w17
  459318:	and	w18, w18, w17
  45931c:	eor	w18, w18, w12
  459320:	add	w18, w18, w3
  459324:	ldur	w3, [x0, #-12]
  459328:	add	w19, w3, w19
  45932c:	add	w19, w19, w18
  459330:	eor	w18, w5, w17
  459334:	ror	w19, w19, #20
  459338:	add	w19, w17, w19
  45933c:	and	w18, w18, w19
  459340:	eor	w18, w18, w5
  459344:	add	w18, w18, w12
  459348:	ldur	w12, [x0, #-8]
  45934c:	add	w21, w12, w21
  459350:	add	w21, w21, w18
  459354:	eor	w18, w17, w19
  459358:	ror	w21, w21, #15
  45935c:	add	w21, w19, w21
  459360:	and	w18, w18, w21
  459364:	eor	w18, w18, w17
  459368:	add	w18, w18, w5
  45936c:	ldur	w5, [x0, #-4]
  459370:	add	w25, w5, w25
  459374:	add	w18, w25, w18
  459378:	ror	w18, w18, #10
  45937c:	add	w18, w21, w18
  459380:	eor	w25, w21, w18
  459384:	and	w25, w25, w19
  459388:	eor	w25, w25, w21
  45938c:	add	w17, w25, w17
  459390:	mov	w25, #0x2562                	// #9570
  459394:	movk	w25, #0xf61e, lsl #16
  459398:	add	w25, w7, w25
  45939c:	add	w17, w25, w17
  4593a0:	ror	w17, w17, #27
  4593a4:	add	w17, w18, w17
  4593a8:	eor	w25, w18, w17
  4593ac:	and	w25, w25, w21
  4593b0:	eor	w25, w25, w18
  4593b4:	add	w19, w25, w19
  4593b8:	mov	w25, #0xb340                	// #45888
  4593bc:	movk	w25, #0xc040, lsl #16
  4593c0:	add	w25, w4, w25
  4593c4:	add	w19, w25, w19
  4593c8:	ror	w19, w19, #23
  4593cc:	add	w19, w17, w19
  4593d0:	eor	w25, w17, w19
  4593d4:	and	w25, w25, w18
  4593d8:	eor	w25, w25, w17
  4593dc:	add	w21, w25, w21
  4593e0:	mov	w25, #0x5a51                	// #23121
  4593e4:	movk	w25, #0x265e, lsl #16
  4593e8:	add	w25, w15, w25
  4593ec:	add	w21, w25, w21
  4593f0:	ror	w21, w21, #18
  4593f4:	add	w21, w19, w21
  4593f8:	eor	w25, w19, w21
  4593fc:	and	w25, w25, w17
  459400:	eor	w25, w25, w19
  459404:	add	w18, w25, w18
  459408:	mov	w25, #0xc7aa                	// #51114
  45940c:	movk	w25, #0xe9b6, lsl #16
  459410:	add	w25, w14, w25
  459414:	add	w18, w25, w18
  459418:	ror	w18, w18, #12
  45941c:	add	w18, w21, w18
  459420:	eor	w25, w21, w18
  459424:	and	w25, w25, w19
  459428:	eor	w25, w25, w21
  45942c:	add	w17, w25, w17
  459430:	mov	w25, #0x105d                	// #4189
  459434:	movk	w25, #0xd62f, lsl #16
  459438:	add	w25, w11, w25
  45943c:	add	w17, w25, w17
  459440:	ror	w17, w17, #27
  459444:	add	w17, w18, w17
  459448:	eor	w25, w18, w17
  45944c:	and	w25, w25, w21
  459450:	eor	w25, w25, w18
  459454:	add	w19, w25, w19
  459458:	mov	w25, #0x1453                	// #5203
  45945c:	movk	w25, #0x244, lsl #16
  459460:	add	w25, w8, w25
  459464:	add	w19, w25, w19
  459468:	ror	w19, w19, #23
  45946c:	add	w19, w17, w19
  459470:	eor	w25, w17, w19
  459474:	and	w25, w25, w18
  459478:	eor	w25, w25, w17
  45947c:	add	w21, w25, w21
  459480:	mov	w25, #0xe681                	// #59009
  459484:	movk	w25, #0xd8a1, lsl #16
  459488:	add	w25, w5, w25
  45948c:	add	w21, w25, w21
  459490:	ror	w21, w21, #18
  459494:	add	w21, w19, w21
  459498:	eor	w25, w19, w21
  45949c:	and	w25, w25, w17
  4594a0:	eor	w25, w25, w19
  4594a4:	add	w18, w25, w18
  4594a8:	mov	w25, #0xfbc8                	// #64456
  4594ac:	movk	w25, #0xe7d3, lsl #16
  4594b0:	add	w25, w1, w25
  4594b4:	add	w18, w25, w18
  4594b8:	ror	w18, w18, #12
  4594bc:	add	w18, w21, w18
  4594c0:	eor	w25, w21, w18
  4594c4:	and	w25, w25, w19
  4594c8:	eor	w25, w25, w21
  4594cc:	add	w17, w25, w17
  4594d0:	add	w25, w20, w27
  4594d4:	add	w17, w25, w17
  4594d8:	ror	w17, w17, #27
  4594dc:	add	w17, w18, w17
  4594e0:	eor	w25, w18, w17
  4594e4:	and	w25, w25, w21
  4594e8:	eor	w25, w25, w18
  4594ec:	add	w19, w25, w19
  4594f0:	add	w25, w12, w28
  4594f4:	add	w19, w25, w19
  4594f8:	ror	w19, w19, #23
  4594fc:	add	w19, w17, w19
  459500:	eor	w25, w17, w19
  459504:	and	w25, w25, w18
  459508:	eor	w25, w25, w17
  45950c:	add	w21, w25, w21
  459510:	mov	w25, #0xd87                 	// #3463
  459514:	movk	w25, #0xf4d5, lsl #16
  459518:	add	w25, w9, w25
  45951c:	add	w21, w25, w21
  459520:	ror	w21, w21, #18
  459524:	add	w21, w19, w21
  459528:	eor	w25, w19, w21
  45952c:	and	w25, w25, w17
  459530:	eor	w25, w25, w19
  459534:	add	w18, w25, w18
  459538:	mov	w25, #0x14ed                	// #5357
  45953c:	movk	w25, #0x455a, lsl #16
  459540:	add	w25, w6, w25
  459544:	add	w18, w25, w18
  459548:	ror	w18, w18, #12
  45954c:	add	w18, w21, w18
  459550:	eor	w25, w21, w18
  459554:	and	w25, w25, w19
  459558:	eor	w25, w25, w21
  45955c:	add	w17, w25, w17
  459560:	mov	w25, #0xe905                	// #59653
  459564:	movk	w25, #0xa9e3, lsl #16
  459568:	add	w25, w3, w25
  45956c:	add	w17, w25, w17
  459570:	ror	w17, w17, #27
  459574:	add	w17, w18, w17
  459578:	eor	w25, w18, w17
  45957c:	and	w25, w25, w21
  459580:	eor	w25, w25, w18
  459584:	add	w19, w25, w19
  459588:	mov	w25, #0xa3f8                	// #41976
  45958c:	movk	w25, #0xfcef, lsl #16
  459590:	add	w25, w16, w25
  459594:	add	w19, w25, w19
  459598:	ror	w19, w19, #23
  45959c:	add	w19, w17, w19
  4595a0:	eor	w25, w17, w19
  4595a4:	and	w25, w25, w18
  4595a8:	eor	w25, w25, w17
  4595ac:	add	w21, w25, w21
  4595b0:	mov	w25, #0x2d9                 	// #729
  4595b4:	movk	w25, #0x676f, lsl #16
  4595b8:	add	w25, w13, w25
  4595bc:	add	w21, w25, w21
  4595c0:	ror	w21, w21, #18
  4595c4:	add	w21, w19, w21
  4595c8:	eor	w25, w19, w21
  4595cc:	and	w30, w25, w17
  4595d0:	eor	w30, w30, w19
  4595d4:	add	w18, w30, w18
  4595d8:	mov	w30, #0x4c8a                	// #19594
  4595dc:	movk	w30, #0x8d2a, lsl #16
  4595e0:	add	w30, w10, w30
  4595e4:	add	w18, w30, w18
  4595e8:	ror	w18, w18, #12
  4595ec:	add	w18, w21, w18
  4595f0:	eor	w25, w25, w18
  4595f4:	add	w17, w25, w17
  4595f8:	sub	w25, w11, #0x5c, lsl #12
  4595fc:	sub	w25, w25, #0x6be
  459600:	add	w17, w25, w17
  459604:	eor	w25, w21, w18
  459608:	ror	w17, w17, #28
  45960c:	add	w17, w18, w17
  459610:	eor	w25, w25, w17
  459614:	add	w19, w25, w19
  459618:	mov	w25, #0xf681                	// #63105
  45961c:	movk	w25, #0x8771, lsl #16
  459620:	add	w25, w6, w25
  459624:	add	w19, w25, w19
  459628:	eor	w25, w18, w17
  45962c:	ror	w19, w19, #21
  459630:	add	w19, w17, w19
  459634:	eor	w25, w25, w19
  459638:	add	w21, w25, w21
  45963c:	mov	w25, #0x6122                	// #24866
  459640:	movk	w25, #0x6d9d, lsl #16
  459644:	add	w25, w15, w25
  459648:	add	w21, w25, w21
  45964c:	eor	w25, w17, w19
  459650:	ror	w21, w21, #16
  459654:	add	w21, w19, w21
  459658:	eor	w25, w25, w21
  45965c:	add	w18, w25, w18
  459660:	mov	w25, #0x380c                	// #14348
  459664:	movk	w25, #0xfde5, lsl #16
  459668:	add	w25, w12, w25
  45966c:	add	w25, w25, w18
  459670:	eor	w18, w19, w21
  459674:	ror	w25, w25, #9
  459678:	add	w25, w21, w25
  45967c:	eor	w18, w18, w25
  459680:	add	w17, w18, w17
  459684:	mov	w18, #0xea44                	// #59972
  459688:	movk	w18, #0xa4be, lsl #16
  45968c:	add	w18, w7, w18
  459690:	add	w17, w18, w17
  459694:	eor	w18, w21, w25
  459698:	ror	w17, w17, #28
  45969c:	add	w17, w25, w17
  4596a0:	eor	w18, w18, w17
  4596a4:	add	w19, w18, w19
  4596a8:	mov	w18, #0xcfa9                	// #53161
  4596ac:	movk	w18, #0x4bde, lsl #16
  4596b0:	add	w18, w1, w18
  4596b4:	add	w19, w18, w19
  4596b8:	eor	w18, w25, w17
  4596bc:	ror	w19, w19, #21
  4596c0:	add	w19, w17, w19
  4596c4:	eor	w18, w18, w19
  4596c8:	add	w21, w18, w21
  4596cc:	mov	w18, #0x4b60                	// #19296
  4596d0:	movk	w18, #0xf6bb, lsl #16
  4596d4:	add	w18, w13, w18
  4596d8:	add	w18, w18, w21
  4596dc:	eor	w21, w17, w19
  4596e0:	ror	w18, w18, #16
  4596e4:	add	w18, w19, w18
  4596e8:	eor	w21, w21, w18
  4596ec:	add	w25, w21, w25
  4596f0:	mov	w21, #0xbc70                	// #48240
  4596f4:	movk	w21, #0xbebf, lsl #16
  4596f8:	add	w21, w8, w21
  4596fc:	add	w25, w21, w25
  459700:	eor	w21, w19, w18
  459704:	sub	w8, w8, #0x100, lsl #12
  459708:	sub	w8, w8, #0xb83
  45970c:	ror	w25, w25, #9
  459710:	add	w25, w18, w25
  459714:	eor	w21, w21, w25
  459718:	add	w17, w21, w17
  45971c:	mov	w21, #0x7ec6                	// #32454
  459720:	movk	w21, #0x289b, lsl #16
  459724:	add	w21, w3, w21
  459728:	add	w21, w21, w17
  45972c:	eor	w17, w18, w25
  459730:	ror	w21, w21, #28
  459734:	add	w21, w25, w21
  459738:	eor	w17, w17, w21
  45973c:	add	w19, w17, w19
  459740:	mov	w17, #0x27fa                	// #10234
  459744:	movk	w17, #0xeaa1, lsl #16
  459748:	add	w17, w14, w17
  45974c:	add	w17, w17, w19
  459750:	eor	w19, w25, w21
  459754:	ror	w17, w17, #21
  459758:	add	w17, w21, w17
  45975c:	eor	w19, w19, w17
  459760:	add	w18, w19, w18
  459764:	mov	w19, #0x3085                	// #12421
  459768:	movk	w19, #0xd4ef, lsl #16
  45976c:	add	w19, w9, w19
  459770:	add	w19, w19, w18
  459774:	eor	w18, w21, w17
  459778:	ror	w19, w19, #16
  45977c:	add	w19, w17, w19
  459780:	eor	w18, w18, w19
  459784:	add	w25, w18, w25
  459788:	mov	w18, #0x1d05                	// #7429
  45978c:	movk	w18, #0x488, lsl #16
  459790:	add	w18, w4, w18
  459794:	add	w25, w18, w25
  459798:	eor	w18, w17, w19
  45979c:	ror	w25, w25, #9
  4597a0:	add	w25, w19, w25
  4597a4:	eor	w18, w18, w25
  4597a8:	add	w21, w18, w21
  4597ac:	mov	w18, #0xd039                	// #53305
  4597b0:	movk	w18, #0xd9d4, lsl #16
  4597b4:	add	w18, w20, w18
  4597b8:	add	w18, w18, w21
  4597bc:	eor	w21, w19, w25
  4597c0:	ror	w18, w18, #28
  4597c4:	add	w18, w25, w18
  4597c8:	eor	w21, w21, w18
  4597cc:	add	w17, w21, w17
  4597d0:	mov	w21, #0x99e5                	// #39397
  4597d4:	movk	w21, #0xe6db, lsl #16
  4597d8:	add	w21, w10, w21
  4597dc:	add	w21, w21, w17
  4597e0:	eor	w17, w25, w18
  4597e4:	ror	w21, w21, #21
  4597e8:	add	w21, w18, w21
  4597ec:	eor	w17, w17, w21
  4597f0:	add	w19, w17, w19
  4597f4:	mov	w17, #0x7cf8                	// #31992
  4597f8:	movk	w17, #0x1fa2, lsl #16
  4597fc:	add	w17, w5, w17
  459800:	add	w19, w17, w19
  459804:	eor	w17, w18, w21
  459808:	ror	w19, w19, #16
  45980c:	add	w19, w21, w19
  459810:	eor	w17, w17, w19
  459814:	add	w25, w17, w25
  459818:	mov	w17, #0x5665                	// #22117
  45981c:	movk	w17, #0xc4ac, lsl #16
  459820:	add	w17, w16, w17
  459824:	add	w17, w17, w25
  459828:	ror	w17, w17, #9
  45982c:	add	w17, w19, w17
  459830:	orn	w25, w17, w21
  459834:	eor	w25, w25, w19
  459838:	add	w18, w25, w18
  45983c:	mov	w25, #0x2244                	// #8772
  459840:	movk	w25, #0xf429, lsl #16
  459844:	add	w14, w14, w25
  459848:	add	w18, w14, w18
  45984c:	ror	w18, w18, #26
  459850:	add	w18, w17, w18
  459854:	orn	w14, w18, w19
  459858:	eor	w14, w14, w17
  45985c:	add	w21, w14, w21
  459860:	mov	w14, #0xff97                	// #65431
  459864:	movk	w14, #0x432a, lsl #16
  459868:	add	w13, w13, w14
  45986c:	add	w21, w13, w21
  459870:	ror	w21, w21, #22
  459874:	add	w21, w18, w21
  459878:	orn	w13, w21, w17
  45987c:	eor	w13, w13, w18
  459880:	add	w19, w13, w19
  459884:	mov	w13, #0x23a7                	// #9127
  459888:	movk	w13, #0xab94, lsl #16
  45988c:	add	w12, w12, w13
  459890:	add	w19, w12, w19
  459894:	ror	w19, w19, #17
  459898:	add	w19, w21, w19
  45989c:	orn	w12, w19, w18
  4598a0:	eor	w12, w12, w21
  4598a4:	add	w17, w12, w17
  4598a8:	mov	w12, #0xa039                	// #41017
  4598ac:	movk	w12, #0xfc93, lsl #16
  4598b0:	add	w11, w11, w12
  4598b4:	add	w17, w11, w17
  4598b8:	ror	w17, w17, #11
  4598bc:	add	w17, w19, w17
  4598c0:	orn	w11, w17, w21
  4598c4:	eor	w11, w11, w19
  4598c8:	add	w18, w11, w18
  4598cc:	mov	w11, #0x59c3                	// #22979
  4598d0:	movk	w11, #0x655b, lsl #16
  4598d4:	add	w10, w10, w11
  4598d8:	add	w18, w10, w18
  4598dc:	ror	w18, w18, #26
  4598e0:	add	w18, w17, w18
  4598e4:	orn	w10, w18, w19
  4598e8:	eor	w10, w10, w17
  4598ec:	add	w21, w10, w21
  4598f0:	mov	w10, #0xcc92                	// #52370
  4598f4:	movk	w10, #0x8f0c, lsl #16
  4598f8:	add	w9, w9, w10
  4598fc:	add	w21, w9, w21
  459900:	ror	w21, w21, #22
  459904:	add	w21, w18, w21
  459908:	orn	w9, w21, w17
  45990c:	eor	w9, w9, w18
  459910:	add	w19, w9, w19
  459914:	add	w8, w8, w19
  459918:	ror	w8, w8, #17
  45991c:	add	w8, w21, w8
  459920:	orn	w9, w8, w18
  459924:	eor	w9, w9, w21
  459928:	add	w17, w9, w17
  45992c:	mov	w9, #0x5dd1                	// #24017
  459930:	movk	w9, #0x8584, lsl #16
  459934:	add	w7, w7, w9
  459938:	add	w17, w7, w17
  45993c:	ror	w17, w17, #11
  459940:	add	w17, w8, w17
  459944:	orn	w7, w17, w21
  459948:	eor	w7, w7, w8
  45994c:	add	w18, w7, w18
  459950:	mov	w7, #0x7e4f                	// #32335
  459954:	movk	w7, #0x6fa8, lsl #16
  459958:	add	w6, w6, w7
  45995c:	add	w18, w6, w18
  459960:	ror	w18, w18, #26
  459964:	add	w18, w17, w18
  459968:	orn	w6, w18, w8
  45996c:	eor	w6, w6, w17
  459970:	add	w21, w6, w21
  459974:	mov	w6, #0xe6e0                	// #59104
  459978:	movk	w6, #0xfe2c, lsl #16
  45997c:	add	w5, w5, w6
  459980:	add	w21, w5, w21
  459984:	ror	w21, w21, #22
  459988:	add	w21, w18, w21
  45998c:	orn	w5, w21, w17
  459990:	eor	w5, w5, w18
  459994:	add	w8, w5, w8
  459998:	mov	w5, #0x4314                	// #17172
  45999c:	movk	w5, #0xa301, lsl #16
  4599a0:	add	w4, w4, w5
  4599a4:	add	w8, w4, w8
  4599a8:	ror	w8, w8, #17
  4599ac:	add	w8, w21, w8
  4599b0:	orn	w4, w8, w18
  4599b4:	eor	w4, w4, w21
  4599b8:	add	w17, w4, w17
  4599bc:	mov	w4, #0x11a1                	// #4513
  4599c0:	movk	w4, #0x4e08, lsl #16
  4599c4:	add	w3, w3, w4
  4599c8:	add	w17, w3, w17
  4599cc:	ror	w17, w17, #11
  4599d0:	add	w17, w8, w17
  4599d4:	orn	w3, w17, w21
  4599d8:	eor	w3, w3, w8
  4599dc:	add	w18, w3, w18
  4599e0:	mov	w3, #0x7e82                	// #32386
  4599e4:	movk	w3, #0xf753, lsl #16
  4599e8:	add	w1, w1, w3
  4599ec:	add	w18, w1, w18
  4599f0:	ror	w18, w18, #26
  4599f4:	add	w18, w17, w18
  4599f8:	orn	w1, w18, w8
  4599fc:	add	w26, w26, w18
  459a00:	eor	w1, w1, w17
  459a04:	add	w21, w1, w21
  459a08:	mov	w1, #0xf235                	// #62005
  459a0c:	movk	w1, #0xbd3a, lsl #16
  459a10:	add	w15, w15, w1
  459a14:	add	w21, w15, w21
  459a18:	ror	w21, w21, #22
  459a1c:	add	w21, w18, w21
  459a20:	orn	w1, w21, w17
  459a24:	add	w24, w24, w21
  459a28:	eor	w1, w1, w18
  459a2c:	add	w8, w1, w8
  459a30:	mov	w1, #0xd2bb                	// #53947
  459a34:	movk	w1, #0x2ad7, lsl #16
  459a38:	add	w16, w16, w1
  459a3c:	add	w8, w16, w8
  459a40:	ror	w8, w8, #17
  459a44:	add	w8, w21, w8
  459a48:	orn	w1, w8, w18
  459a4c:	add	w23, w23, w8
  459a50:	eor	w1, w1, w21
  459a54:	add	w17, w1, w17
  459a58:	mov	w1, #0xd391                	// #54161
  459a5c:	movk	w1, #0xeb86, lsl #16
  459a60:	add	w20, w20, w1
  459a64:	add	w17, w20, w17
  459a68:	ror	w17, w17, #11
  459a6c:	add	w17, w8, w17
  459a70:	add	w22, w22, w17
  459a74:	b	459098 <ferror@plt+0x55ac8>
  459a78:	stp	x29, x30, [sp, #-48]!
  459a7c:	mov	x29, sp
  459a80:	stp	x19, x20, [sp, #16]
  459a84:	mov	x19, x0
  459a88:	ldr	w0, [x0, #24]
  459a8c:	stp	x21, x22, [sp, #32]
  459a90:	mov	x22, x1
  459a94:	ldr	w2, [x19, #16]
  459a98:	adds	w2, w2, w0
  459a9c:	str	w2, [x19, #16]
  459aa0:	b.cc	459ab0 <ferror@plt+0x564e0>  // b.lo, b.ul, b.last
  459aa4:	ldr	w1, [x19, #20]
  459aa8:	add	w1, w1, #0x1
  459aac:	str	w1, [x19, #20]
  459ab0:	cmp	w0, #0x38
  459ab4:	mov	w20, #0x78                  	// #120
  459ab8:	mov	w21, w0
  459abc:	sub	w1, w20, w0
  459ac0:	mov	w20, #0x38                  	// #56
  459ac4:	sub	w20, w20, w0
  459ac8:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  459acc:	add	x0, x21, #0x1c
  459ad0:	mov	x2, x20
  459ad4:	add	x0, x19, x0
  459ad8:	add	x20, x20, x21
  459adc:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  459ae0:	add	x1, x1, #0xa9c
  459ae4:	bl	402cd0 <memcpy@plt>
  459ae8:	ldr	w2, [x19, #16]
  459aec:	add	x1, x19, x20
  459af0:	lsl	w0, w2, #3
  459af4:	str	w0, [x1, #28]
  459af8:	ldr	w0, [x19, #20]
  459afc:	extr	w0, w0, w2, #29
  459b00:	str	w0, [x1, #32]
  459b04:	mov	x2, x19
  459b08:	add	x1, x20, #0x8
  459b0c:	add	x0, x19, #0x1c
  459b10:	bl	459034 <ferror@plt+0x55a64>
  459b14:	mov	x1, x22
  459b18:	mov	x0, x19
  459b1c:	ldp	x19, x20, [sp, #16]
  459b20:	ldp	x21, x22, [sp, #32]
  459b24:	ldp	x29, x30, [sp], #48
  459b28:	b	459020 <ferror@plt+0x55a50>
  459b2c:	stp	x29, x30, [sp, #-80]!
  459b30:	mov	x29, sp
  459b34:	stp	x21, x22, [sp, #32]
  459b38:	ldr	w21, [x2, #24]
  459b3c:	stp	x19, x20, [sp, #16]
  459b40:	mov	x19, x1
  459b44:	stp	x23, x24, [sp, #48]
  459b48:	stp	x25, x26, [sp, #64]
  459b4c:	mov	x26, x0
  459b50:	mov	x25, x2
  459b54:	cbz	w21, 459bd8 <ferror@plt+0x56608>
  459b58:	mov	x20, #0x80                  	// #128
  459b5c:	mov	w22, w21
  459b60:	sub	x20, x20, w21, uxtw
  459b64:	add	x0, x22, #0x1c
  459b68:	cmp	x20, x1
  459b6c:	add	x0, x25, x0
  459b70:	csel	x20, x20, x1, ls  // ls = plast
  459b74:	mov	x1, x26
  459b78:	mov	x2, x20
  459b7c:	add	x22, x22, x20
  459b80:	bl	402cd0 <memcpy@plt>
  459b84:	ldr	w1, [x25, #24]
  459b88:	cmp	x22, #0x40
  459b8c:	add	w1, w1, w20
  459b90:	str	w1, [x25, #24]
  459b94:	b.ls	459bd0 <ferror@plt+0x56600>  // b.plast
  459b98:	add	x23, x25, #0x1c
  459b9c:	and	x24, x22, #0xffffffffffffffc0
  459ba0:	mov	x2, x25
  459ba4:	mov	x1, x24
  459ba8:	mov	x0, x23
  459bac:	bl	459034 <ferror@plt+0x55a64>
  459bb0:	add	x1, x24, #0x1c
  459bb4:	add	w21, w21, w20
  459bb8:	and	x2, x22, #0x3f
  459bbc:	add	x1, x25, x1
  459bc0:	mov	x0, x23
  459bc4:	and	w21, w21, #0x3f
  459bc8:	bl	402cd0 <memcpy@plt>
  459bcc:	str	w21, [x25, #24]
  459bd0:	add	x26, x26, x20
  459bd4:	sub	x19, x19, x20
  459bd8:	cmp	x19, #0x40
  459bdc:	b.ls	459c84 <ferror@plt+0x566b4>  // b.plast
  459be0:	tst	x26, #0x3
  459be4:	b.eq	459c68 <ferror@plt+0x56698>  // b.none
  459be8:	mov	x20, x26
  459bec:	add	x21, x25, #0x1c
  459bf0:	add	x22, x26, x19
  459bf4:	ldp	x0, x1, [x20]
  459bf8:	stp	x0, x1, [x21]
  459bfc:	mov	x2, x25
  459c00:	ldp	x0, x1, [x20, #16]
  459c04:	stp	x0, x1, [x21, #16]
  459c08:	add	x20, x20, #0x40
  459c0c:	ldp	x0, x1, [x20, #-32]
  459c10:	stp	x0, x1, [x21, #32]
  459c14:	ldp	x0, x1, [x20, #-16]
  459c18:	stp	x0, x1, [x21, #48]
  459c1c:	mov	x0, x21
  459c20:	mov	x1, #0x40                  	// #64
  459c24:	bl	459034 <ferror@plt+0x55a64>
  459c28:	sub	x0, x22, x20
  459c2c:	cmp	x0, #0x40
  459c30:	b.hi	459bf4 <ferror@plt+0x56624>  // b.pmore
  459c34:	sub	x3, x19, #0x41
  459c38:	sub	x19, x19, #0x40
  459c3c:	mov	x1, #0xffffffffffffffc0    	// #-64
  459c40:	lsr	x3, x3, #6
  459c44:	add	x0, x3, #0x1
  459c48:	madd	x19, x3, x1, x19
  459c4c:	add	x26, x26, x0, lsl #6
  459c50:	mov	x2, x19
  459c54:	mov	x1, x26
  459c58:	add	x0, x25, #0x1c
  459c5c:	bl	402cd0 <memcpy@plt>
  459c60:	str	w19, [x25, #24]
  459c64:	b	459c88 <ferror@plt+0x566b8>
  459c68:	and	x20, x19, #0xffffffffffffffc0
  459c6c:	mov	x0, x26
  459c70:	and	x19, x19, #0x3f
  459c74:	add	x26, x26, x20
  459c78:	mov	x2, x25
  459c7c:	mov	x1, x20
  459c80:	bl	459034 <ferror@plt+0x55a64>
  459c84:	cbnz	x19, 459c50 <ferror@plt+0x56680>
  459c88:	ldp	x19, x20, [sp, #16]
  459c8c:	ldp	x21, x22, [sp, #32]
  459c90:	ldp	x23, x24, [sp, #48]
  459c94:	ldp	x25, x26, [sp, #64]
  459c98:	ldp	x29, x30, [sp], #80
  459c9c:	ret
  459ca0:	stp	x29, x30, [sp, #-192]!
  459ca4:	mov	x3, x0
  459ca8:	mov	x4, x1
  459cac:	mov	x29, sp
  459cb0:	add	x0, sp, #0x20
  459cb4:	str	x19, [sp, #16]
  459cb8:	mov	x19, x2
  459cbc:	bl	458fec <ferror@plt+0x55a1c>
  459cc0:	add	x2, sp, #0x20
  459cc4:	mov	x1, x4
  459cc8:	mov	x0, x3
  459ccc:	bl	459b2c <ferror@plt+0x5655c>
  459cd0:	mov	x1, x19
  459cd4:	add	x0, sp, #0x20
  459cd8:	bl	459a78 <ferror@plt+0x564a8>
  459cdc:	ldr	x19, [sp, #16]
  459ce0:	ldp	x29, x30, [sp], #192
  459ce4:	ret
  459ce8:	mov	x12, #0x1120                	// #4384
  459cec:	sub	sp, sp, x12
  459cf0:	stp	x29, x30, [sp]
  459cf4:	mov	x29, sp
  459cf8:	stp	x21, x22, [sp, #32]
  459cfc:	mov	x22, #0x1000                	// #4096
  459d00:	mov	x21, x1
  459d04:	stp	x19, x20, [sp, #16]
  459d08:	mov	x20, x0
  459d0c:	add	x0, sp, #0x38
  459d10:	bl	458fec <ferror@plt+0x55a1c>
  459d14:	mov	x19, #0x0                   	// #0
  459d18:	add	x0, sp, #0xd8
  459d1c:	sub	x2, x22, x19
  459d20:	add	x0, x0, x19
  459d24:	mov	x3, x20
  459d28:	mov	x1, #0x1                   	// #1
  459d2c:	bl	403270 <fread@plt>
  459d30:	add	x19, x19, x0
  459d34:	cmp	x19, #0xfff
  459d38:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  459d3c:	b.ne	459d18 <ferror@plt+0x56748>  // b.any
  459d40:	cbnz	x0, 459d5c <ferror@plt+0x5678c>
  459d44:	mov	x0, x20
  459d48:	bl	4035d0 <ferror@plt>
  459d4c:	mov	w20, w0
  459d50:	cbz	w0, 459d70 <ferror@plt+0x567a0>
  459d54:	mov	w20, #0x1                   	// #1
  459d58:	b	459d90 <ferror@plt+0x567c0>
  459d5c:	add	x2, sp, #0x38
  459d60:	add	x0, sp, #0xd8
  459d64:	mov	x1, #0x1000                	// #4096
  459d68:	bl	459034 <ferror@plt+0x55a64>
  459d6c:	b	459d14 <ferror@plt+0x56744>
  459d70:	cbz	x19, 459d84 <ferror@plt+0x567b4>
  459d74:	add	x2, sp, #0x38
  459d78:	mov	x1, x19
  459d7c:	add	x0, sp, #0xd8
  459d80:	bl	459b2c <ferror@plt+0x5655c>
  459d84:	mov	x1, x21
  459d88:	add	x0, sp, #0x38
  459d8c:	bl	459a78 <ferror@plt+0x564a8>
  459d90:	mov	w0, w20
  459d94:	mov	x12, #0x1120                	// #4384
  459d98:	ldp	x29, x30, [sp]
  459d9c:	ldp	x19, x20, [sp, #16]
  459da0:	ldp	x21, x22, [sp, #32]
  459da4:	add	sp, sp, x12
  459da8:	ret
  459dac:	stp	x29, x30, [sp, #-48]!
  459db0:	mov	x29, sp
  459db4:	stp	x19, x20, [sp, #16]
  459db8:	mov	x19, x0
  459dbc:	str	x21, [sp, #32]
  459dc0:	cbz	x0, 459dfc <ferror@plt+0x5682c>
  459dc4:	mov	x1, #0x0                   	// #0
  459dc8:	ldr	x2, [x19, x1, lsl #3]
  459dcc:	add	w0, w1, #0x1
  459dd0:	add	x1, x1, #0x1
  459dd4:	cbnz	x2, 459dc8 <ferror@plt+0x567f8>
  459dd8:	sbfiz	x0, x0, #3, #32
  459ddc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  459de0:	mov	x20, x0
  459de4:	mov	x21, #0x0                   	// #0
  459de8:	ldr	x0, [x19, x21]
  459dec:	add	x1, x20, x21
  459df0:	cbnz	x0, 459e10 <ferror@plt+0x56840>
  459df4:	mov	x19, x20
  459df8:	str	xzr, [x1]
  459dfc:	mov	x0, x19
  459e00:	ldp	x19, x20, [sp, #16]
  459e04:	ldr	x21, [sp, #32]
  459e08:	ldp	x29, x30, [sp], #48
  459e0c:	ret
  459e10:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  459e14:	str	x0, [x20, x21]
  459e18:	add	x21, x21, #0x8
  459e1c:	b	459de8 <ferror@plt+0x56818>
  459e20:	cbnz	x0, 459e48 <ferror@plt+0x56878>
  459e24:	ret
  459e28:	add	x20, x20, #0x8
  459e2c:	bl	4032a0 <free@plt>
  459e30:	ldr	x0, [x20]
  459e34:	cbnz	x0, 459e28 <ferror@plt+0x56858>
  459e38:	mov	x0, x19
  459e3c:	ldp	x19, x20, [sp, #16]
  459e40:	ldp	x29, x30, [sp], #32
  459e44:	b	4032a0 <free@plt>
  459e48:	stp	x29, x30, [sp, #-32]!
  459e4c:	mov	x29, sp
  459e50:	stp	x19, x20, [sp, #16]
  459e54:	mov	x19, x0
  459e58:	mov	x20, x0
  459e5c:	b	459e30 <ferror@plt+0x56860>
  459e60:	stp	x29, x30, [sp, #-112]!
  459e64:	mov	x29, sp
  459e68:	stp	x19, x20, [sp, #16]
  459e6c:	mov	x19, x0
  459e70:	stp	x21, x22, [sp, #32]
  459e74:	stp	x23, x24, [sp, #48]
  459e78:	stp	x25, x26, [sp, #64]
  459e7c:	stp	x27, x28, [sp, #80]
  459e80:	cbz	x0, 459f44 <ferror@plt+0x56974>
  459e84:	bl	402d50 <strlen@plt>
  459e88:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  459e8c:	add	x0, x0, #0x1
  459e90:	add	x22, x22, #0x228
  459e94:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  459e98:	mov	x21, x0
  459e9c:	mov	x26, #0x0                   	// #0
  459ea0:	mov	x20, #0x0                   	// #0
  459ea4:	mov	w27, #0x0                   	// #0
  459ea8:	mov	w25, #0x0                   	// #0
  459eac:	mov	w23, #0x0                   	// #0
  459eb0:	mov	w24, #0x0                   	// #0
  459eb4:	ldrb	w0, [x19]
  459eb8:	ldrh	w0, [x22, x0, lsl #1]
  459ebc:	tbnz	w0, #6, 459f64 <ferror@plt+0x56994>
  459ec0:	cbz	w27, 459ed0 <ferror@plt+0x56900>
  459ec4:	sub	w0, w27, #0x1
  459ec8:	cmp	w0, w26
  459ecc:	b.gt	459ee8 <ferror@plt+0x56918>
  459ed0:	cbnz	x20, 459f6c <ferror@plt+0x5699c>
  459ed4:	mov	x0, #0x40                  	// #64
  459ed8:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  459edc:	mov	x20, x0
  459ee0:	mov	w27, #0x8                   	// #8
  459ee4:	str	xzr, [x20, x26, lsl #3]
  459ee8:	mov	w2, w25
  459eec:	mov	x1, x21
  459ef0:	ldrb	w0, [x19]
  459ef4:	cbnz	w0, 459f84 <ferror@plt+0x569b4>
  459ef8:	mov	w25, w2
  459efc:	strb	wzr, [x1]
  459f00:	lsl	x1, x26, #3
  459f04:	mov	x0, x21
  459f08:	str	x1, [sp, #104]
  459f0c:	add	x28, x20, x26, lsl #3
  459f10:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  459f14:	ldr	x1, [sp, #104]
  459f18:	str	x0, [x20, x1]
  459f1c:	str	xzr, [x28, #8]
  459f20:	ldrb	w1, [x19]
  459f24:	ldrb	w0, [x19]
  459f28:	ldrh	w1, [x22, x1, lsl #1]
  459f2c:	tbnz	w1, #6, 45a030 <ferror@plt+0x56a60>
  459f30:	add	x26, x26, #0x1
  459f34:	cbnz	w0, 459eb4 <ferror@plt+0x568e4>
  459f38:	mov	x19, x20
  459f3c:	mov	x0, x21
  459f40:	bl	4032a0 <free@plt>
  459f44:	mov	x0, x19
  459f48:	ldp	x19, x20, [sp, #16]
  459f4c:	ldp	x21, x22, [sp, #32]
  459f50:	ldp	x23, x24, [sp, #48]
  459f54:	ldp	x25, x26, [sp, #64]
  459f58:	ldp	x27, x28, [sp, #80]
  459f5c:	ldp	x29, x30, [sp], #112
  459f60:	ret
  459f64:	add	x19, x19, #0x1
  459f68:	b	459eb4 <ferror@plt+0x568e4>
  459f6c:	lsl	w27, w27, #1
  459f70:	mov	x0, x20
  459f74:	sbfiz	x1, x27, #3, #32
  459f78:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  459f7c:	mov	x20, x0
  459f80:	b	459ee4 <ferror@plt+0x56914>
  459f84:	ldrh	w3, [x22, w0, sxtw #1]
  459f88:	tbz	w3, #6, 459f98 <ferror@plt+0x569c8>
  459f8c:	orr	w25, w24, w23
  459f90:	orr	w25, w25, w2
  459f94:	cbz	w25, 45a024 <ferror@plt+0x56a54>
  459f98:	cbz	w2, 459fac <ferror@plt+0x569dc>
  459f9c:	mov	w2, #0x0                   	// #0
  459fa0:	strb	w0, [x1], #1
  459fa4:	add	x19, x19, #0x1
  459fa8:	b	459ef0 <ferror@plt+0x56920>
  459fac:	cmp	w0, #0x5c
  459fb0:	b.eq	45a000 <ferror@plt+0x56a30>  // b.none
  459fb4:	cbz	w24, 459fc8 <ferror@plt+0x569f8>
  459fb8:	cmp	w0, #0x27
  459fbc:	b.eq	459ff8 <ferror@plt+0x56a28>  // b.none
  459fc0:	strb	w0, [x1], #1
  459fc4:	b	459fa4 <ferror@plt+0x569d4>
  459fc8:	cbz	w23, 459fe0 <ferror@plt+0x56a10>
  459fcc:	cmp	w0, #0x22
  459fd0:	b.ne	459f9c <ferror@plt+0x569cc>  // b.any
  459fd4:	mov	w2, w24
  459fd8:	mov	w23, #0x0                   	// #0
  459fdc:	b	459fa4 <ferror@plt+0x569d4>
  459fe0:	cmp	w0, #0x27
  459fe4:	b.eq	45a008 <ferror@plt+0x56a38>  // b.none
  459fe8:	cmp	w0, #0x22
  459fec:	b.eq	45a014 <ferror@plt+0x56a44>  // b.none
  459ff0:	mov	w2, w23
  459ff4:	strb	w0, [x1], #1
  459ff8:	mov	w24, #0x0                   	// #0
  459ffc:	b	459fa4 <ferror@plt+0x569d4>
  45a000:	mov	w2, #0x1                   	// #1
  45a004:	b	459fa4 <ferror@plt+0x569d4>
  45a008:	mov	w2, w23
  45a00c:	mov	w24, #0x1                   	// #1
  45a010:	b	459fa4 <ferror@plt+0x569d4>
  45a014:	mov	w2, w23
  45a018:	mov	w24, w23
  45a01c:	mov	w23, #0x1                   	// #1
  45a020:	b	459fa4 <ferror@plt+0x569d4>
  45a024:	mov	w23, #0x0                   	// #0
  45a028:	mov	w24, #0x0                   	// #0
  45a02c:	b	459efc <ferror@plt+0x5692c>
  45a030:	add	x19, x19, #0x1
  45a034:	b	459f20 <ferror@plt+0x56950>
  45a038:	cbz	x1, 45a104 <ferror@plt+0x56b34>
  45a03c:	stp	x29, x30, [sp, #-64]!
  45a040:	mov	x29, sp
  45a044:	stp	x19, x20, [sp, #16]
  45a048:	mov	x20, x0
  45a04c:	mov	x19, x1
  45a050:	stp	x23, x24, [sp, #48]
  45a054:	adrp	x23, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45a058:	mov	x24, #0x21                  	// #33
  45a05c:	add	x23, x23, #0x228
  45a060:	movk	x24, #0x400, lsl #48
  45a064:	stp	x21, x22, [sp, #32]
  45a068:	ldr	x21, [x20]
  45a06c:	cbnz	x21, 45a0e0 <ferror@plt+0x56b10>
  45a070:	mov	w0, #0x0                   	// #0
  45a074:	b	45a0b0 <ferror@plt+0x56ae0>
  45a078:	ldrh	w0, [x23, w22, sxtw #1]
  45a07c:	tbnz	w0, #6, 45a0c4 <ferror@plt+0x56af4>
  45a080:	sub	w1, w22, #0x22
  45a084:	and	w1, w1, #0xff
  45a088:	cmp	w1, #0x3a
  45a08c:	b.hi	45a098 <ferror@plt+0x56ac8>  // b.pmore
  45a090:	lsr	x1, x24, x1
  45a094:	tbnz	w1, #0, 45a0c4 <ferror@plt+0x56af4>
  45a098:	mov	x1, x19
  45a09c:	mov	w0, w22
  45a0a0:	bl	402e40 <fputc@plt>
  45a0a4:	cmn	w0, #0x1
  45a0a8:	b.ne	45a0dc <ferror@plt+0x56b0c>  // b.any
  45a0ac:	mov	w0, #0x1                   	// #1
  45a0b0:	ldp	x19, x20, [sp, #16]
  45a0b4:	ldp	x21, x22, [sp, #32]
  45a0b8:	ldp	x23, x24, [sp, #48]
  45a0bc:	ldp	x29, x30, [sp], #64
  45a0c0:	ret
  45a0c4:	mov	x1, x19
  45a0c8:	mov	w0, #0x5c                  	// #92
  45a0cc:	bl	402e40 <fputc@plt>
  45a0d0:	cmn	w0, #0x1
  45a0d4:	b.ne	45a098 <ferror@plt+0x56ac8>  // b.any
  45a0d8:	b	45a0ac <ferror@plt+0x56adc>
  45a0dc:	add	x21, x21, #0x1
  45a0e0:	ldrb	w22, [x21]
  45a0e4:	cbnz	w22, 45a078 <ferror@plt+0x56aa8>
  45a0e8:	mov	x1, x19
  45a0ec:	mov	w0, #0xa                   	// #10
  45a0f0:	bl	402e40 <fputc@plt>
  45a0f4:	cmn	w0, #0x1
  45a0f8:	b.eq	45a0ac <ferror@plt+0x56adc>  // b.none
  45a0fc:	add	x20, x20, #0x8
  45a100:	b	45a068 <ferror@plt+0x56a98>
  45a104:	mov	w0, #0x1                   	// #1
  45a108:	ret
  45a10c:	stp	x29, x30, [sp, #-256]!
  45a110:	mov	x29, sp
  45a114:	stp	x27, x28, [sp, #80]
  45a118:	ldr	x28, [x1]
  45a11c:	stp	x19, x20, [sp, #16]
  45a120:	mov	x19, x1
  45a124:	stp	x21, x22, [sp, #32]
  45a128:	mov	x21, x0
  45a12c:	mov	w0, #0x7d0                 	// #2000
  45a130:	stp	x23, x24, [sp, #48]
  45a134:	stp	x25, x26, [sp, #64]
  45a138:	mov	w26, #0x0                   	// #0
  45a13c:	str	w0, [sp, #100]
  45a140:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45a144:	add	x0, x0, #0x228
  45a148:	str	x0, [sp, #112]
  45a14c:	ldr	w0, [x21]
  45a150:	add	w22, w26, #0x1
  45a154:	cmp	w0, w22
  45a158:	b.gt	45a178 <ferror@plt+0x56ba8>
  45a15c:	ldp	x19, x20, [sp, #16]
  45a160:	ldp	x21, x22, [sp, #32]
  45a164:	ldp	x23, x24, [sp, #48]
  45a168:	ldp	x25, x26, [sp, #64]
  45a16c:	ldp	x27, x28, [sp, #80]
  45a170:	ldp	x29, x30, [sp], #256
  45a174:	ret
  45a178:	ldr	x0, [x19]
  45a17c:	sbfiz	x25, x22, #3, #32
  45a180:	sxtw	x1, w22
  45a184:	str	x1, [sp, #104]
  45a188:	ldr	x20, [x0, x25]
  45a18c:	ldrb	w1, [x20]
  45a190:	cmp	w1, #0x40
  45a194:	b.ne	45a374 <ferror@plt+0x56da4>  // b.any
  45a198:	ldr	w1, [sp, #100]
  45a19c:	subs	w1, w1, #0x1
  45a1a0:	str	w1, [sp, #100]
  45a1a4:	b.ne	45a1c8 <ferror@plt+0x56bf8>  // b.any
  45a1a8:	ldr	x2, [x0]
  45a1ac:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45a1b0:	add	x1, x1, #0xadc
  45a1b4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45a1b8:	ldr	x0, [x0, #1264]
  45a1bc:	bl	403590 <fprintf@plt>
  45a1c0:	mov	w0, #0x1                   	// #1
  45a1c4:	bl	45d5e0 <_obstack_memory_used@@Base+0x11f0>
  45a1c8:	add	x20, x20, #0x1
  45a1cc:	add	x1, sp, #0x80
  45a1d0:	mov	x0, x20
  45a1d4:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  45a1d8:	tbnz	w0, #31, 45a374 <ferror@plt+0x56da4>
  45a1dc:	ldr	w0, [sp, #144]
  45a1e0:	and	w0, w0, #0xf000
  45a1e4:	cmp	w0, #0x4, lsl #12
  45a1e8:	b.ne	45a200 <ferror@plt+0x56c30>  // b.any
  45a1ec:	ldr	x0, [x19]
  45a1f0:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45a1f4:	add	x1, x1, #0xb05
  45a1f8:	ldr	x2, [x0]
  45a1fc:	b	45a1b4 <ferror@plt+0x56be4>
  45a200:	adrp	x0, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  45a204:	add	x1, x0, #0xc1a
  45a208:	mov	x0, x20
  45a20c:	bl	402f20 <fopen@plt>
  45a210:	mov	x20, x0
  45a214:	cbz	x0, 45a374 <ferror@plt+0x56da4>
  45a218:	mov	w2, #0x2                   	// #2
  45a21c:	mov	x1, #0x0                   	// #0
  45a220:	bl	403170 <fseek@plt>
  45a224:	cmn	w0, #0x1
  45a228:	b.eq	45a36c <ferror@plt+0x56d9c>  // b.none
  45a22c:	mov	x0, x20
  45a230:	bl	402df0 <ftell@plt>
  45a234:	mov	x24, x0
  45a238:	cmn	x0, #0x1
  45a23c:	b.eq	45a36c <ferror@plt+0x56d9c>  // b.none
  45a240:	mov	x0, x20
  45a244:	mov	w2, #0x0                   	// #0
  45a248:	mov	x1, #0x0                   	// #0
  45a24c:	bl	403170 <fseek@plt>
  45a250:	cmn	w0, #0x1
  45a254:	b.eq	45a36c <ferror@plt+0x56d9c>  // b.none
  45a258:	add	x0, x24, #0x1
  45a25c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45a260:	mov	x3, x20
  45a264:	mov	x23, x0
  45a268:	mov	x2, x24
  45a26c:	mov	x1, #0x1                   	// #1
  45a270:	bl	403270 <fread@plt>
  45a274:	mov	x27, x0
  45a278:	cmp	x24, x0
  45a27c:	b.ne	45a360 <ferror@plt+0x56d90>  // b.any
  45a280:	mov	x0, x23
  45a284:	strb	wzr, [x23, x27]
  45a288:	ldrb	w1, [x0]
  45a28c:	cbz	w1, 45a38c <ferror@plt+0x56dbc>
  45a290:	ldr	x2, [sp, #112]
  45a294:	ldrh	w1, [x2, w1, sxtw #1]
  45a298:	tbnz	w1, #6, 45a37c <ferror@plt+0x56dac>
  45a29c:	mov	x0, x23
  45a2a0:	bl	459e60 <ferror@plt+0x56890>
  45a2a4:	mov	x24, x0
  45a2a8:	ldr	x0, [x19]
  45a2ac:	cmp	x0, x28
  45a2b0:	b.ne	45a2c0 <ferror@plt+0x56cf0>  // b.any
  45a2b4:	mov	x0, x28
  45a2b8:	bl	459dac <ferror@plt+0x567dc>
  45a2bc:	str	x0, [x19]
  45a2c0:	mov	x27, #0x0                   	// #0
  45a2c4:	ldr	x0, [x24, x27, lsl #3]
  45a2c8:	lsl	x4, x27, #3
  45a2cc:	cbnz	x0, 45a384 <ferror@plt+0x56db4>
  45a2d0:	ldr	x0, [x19]
  45a2d4:	str	x4, [sp, #120]
  45a2d8:	ldr	x0, [x0, x25]
  45a2dc:	bl	4032a0 <free@plt>
  45a2e0:	ldrsw	x1, [x21]
  45a2e4:	ldr	x0, [x19]
  45a2e8:	add	x1, x1, #0x1
  45a2ec:	add	x1, x1, x27
  45a2f0:	lsl	x1, x1, #3
  45a2f4:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  45a2f8:	ldr	x3, [sp, #104]
  45a2fc:	add	x1, x25, #0x8
  45a300:	ldr	w2, [x21]
  45a304:	add	x1, x0, x1
  45a308:	add	x5, x3, x27
  45a30c:	str	x0, [x19]
  45a310:	sub	w2, w2, w22
  45a314:	mov	w22, w26
  45a318:	add	x0, x0, x5, lsl #3
  45a31c:	sbfiz	x2, x2, #3, #32
  45a320:	bl	402ce0 <memmove@plt>
  45a324:	ldr	x4, [sp, #120]
  45a328:	mov	x1, x24
  45a32c:	ldr	x0, [x19]
  45a330:	mov	x2, x4
  45a334:	add	x0, x0, x25
  45a338:	bl	402cd0 <memcpy@plt>
  45a33c:	ldr	w0, [x21]
  45a340:	sub	w0, w0, #0x1
  45a344:	add	w3, w0, w27
  45a348:	str	w3, [x21]
  45a34c:	mov	x0, x24
  45a350:	bl	4032a0 <free@plt>
  45a354:	mov	x0, x23
  45a358:	bl	4032a0 <free@plt>
  45a35c:	b	45a36c <ferror@plt+0x56d9c>
  45a360:	mov	x0, x20
  45a364:	bl	4035d0 <ferror@plt>
  45a368:	cbz	w0, 45a280 <ferror@plt+0x56cb0>
  45a36c:	mov	x0, x20
  45a370:	bl	402ee0 <fclose@plt>
  45a374:	mov	w26, w22
  45a378:	b	45a14c <ferror@plt+0x56b7c>
  45a37c:	add	x0, x0, #0x1
  45a380:	b	45a288 <ferror@plt+0x56cb8>
  45a384:	add	x27, x27, #0x1
  45a388:	b	45a2c4 <ferror@plt+0x56cf4>
  45a38c:	mov	x0, #0x8                   	// #8
  45a390:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45a394:	mov	x24, x0
  45a398:	str	xzr, [x0]
  45a39c:	b	45a2a8 <ferror@plt+0x56cd8>
  45a3a0:	cbz	x0, 45a3c0 <ferror@plt+0x56df0>
  45a3a4:	sub	x1, x0, #0x8
  45a3a8:	mov	x2, #0x0                   	// #0
  45a3ac:	mov	w0, w2
  45a3b0:	add	x2, x2, #0x1
  45a3b4:	ldr	x3, [x1, x2, lsl #3]
  45a3b8:	cbnz	x3, 45a3ac <ferror@plt+0x56ddc>
  45a3bc:	ret
  45a3c0:	mov	w0, #0x0                   	// #0
  45a3c4:	b	45a3bc <ferror@plt+0x56dec>
  45a3c8:	stp	x29, x30, [sp, #-80]!
  45a3cc:	mov	x29, sp
  45a3d0:	stp	x19, x20, [sp, #16]
  45a3d4:	mov	x19, x1
  45a3d8:	stp	x21, x22, [sp, #32]
  45a3dc:	mov	x22, x2
  45a3e0:	ldr	w21, [x2, #24]
  45a3e4:	stp	x23, x24, [sp, #48]
  45a3e8:	mov	x23, x0
  45a3ec:	mov	x24, x0
  45a3f0:	ldr	x20, [x2]
  45a3f4:	str	x25, [sp, #64]
  45a3f8:	cbnz	x19, 45a41c <ferror@plt+0x56e4c>
  45a3fc:	strb	wzr, [x24]
  45a400:	mov	x0, x23
  45a404:	ldp	x19, x20, [sp, #16]
  45a408:	ldp	x21, x22, [sp, #32]
  45a40c:	ldp	x23, x24, [sp, #48]
  45a410:	ldr	x25, [sp, #64]
  45a414:	ldp	x29, x30, [sp], #80
  45a418:	ret
  45a41c:	mov	x0, x19
  45a420:	bl	402d50 <strlen@plt>
  45a424:	mov	x25, x0
  45a428:	mov	x2, x0
  45a42c:	mov	x1, x19
  45a430:	mov	x0, x24
  45a434:	add	x24, x24, x25
  45a438:	bl	402cd0 <memcpy@plt>
  45a43c:	tbnz	w21, #31, 45a45c <ferror@plt+0x56e8c>
  45a440:	add	x3, x20, #0xf
  45a444:	mov	w0, w21
  45a448:	and	x3, x3, #0xfffffffffffffff8
  45a44c:	mov	w21, w0
  45a450:	ldr	x19, [x20]
  45a454:	mov	x20, x3
  45a458:	b	45a3f8 <ferror@plt+0x56e28>
  45a45c:	add	w0, w21, #0x8
  45a460:	cmp	w0, #0x0
  45a464:	b.le	45a474 <ferror@plt+0x56ea4>
  45a468:	add	x3, x20, #0xf
  45a46c:	and	x3, x3, #0xfffffffffffffff8
  45a470:	b	45a44c <ferror@plt+0x56e7c>
  45a474:	ldr	x1, [x22, #8]
  45a478:	mov	x3, x20
  45a47c:	add	x20, x1, w21, sxtw
  45a480:	b	45a44c <ferror@plt+0x56e7c>
  45a484:	stp	x29, x30, [sp, #-272]!
  45a488:	mov	x29, sp
  45a48c:	stp	x1, x2, [sp, #216]
  45a490:	add	x1, sp, #0x110
  45a494:	stp	x19, x20, [sp, #16]
  45a498:	add	x20, sp, #0x110
  45a49c:	mov	w19, #0xffffffc8            	// #-56
  45a4a0:	stp	x1, x1, [sp, #48]
  45a4a4:	add	x1, sp, #0xd0
  45a4a8:	str	x21, [sp, #32]
  45a4ac:	mov	x21, #0x0                   	// #0
  45a4b0:	str	x1, [sp, #64]
  45a4b4:	mov	w1, #0xffffff80            	// #-128
  45a4b8:	str	w19, [sp, #72]
  45a4bc:	str	w1, [sp, #76]
  45a4c0:	str	q0, [sp, #80]
  45a4c4:	str	q1, [sp, #96]
  45a4c8:	str	q2, [sp, #112]
  45a4cc:	str	q3, [sp, #128]
  45a4d0:	str	q4, [sp, #144]
  45a4d4:	str	q5, [sp, #160]
  45a4d8:	str	q6, [sp, #176]
  45a4dc:	str	q7, [sp, #192]
  45a4e0:	stp	x3, x4, [sp, #232]
  45a4e4:	stp	x5, x6, [sp, #248]
  45a4e8:	str	x7, [sp, #264]
  45a4ec:	cbnz	x0, 45a504 <ferror@plt+0x56f34>
  45a4f0:	mov	x0, x21
  45a4f4:	ldp	x19, x20, [sp, #16]
  45a4f8:	ldr	x21, [sp, #32]
  45a4fc:	ldp	x29, x30, [sp], #272
  45a500:	ret
  45a504:	bl	402d50 <strlen@plt>
  45a508:	add	x21, x21, x0
  45a50c:	tbnz	w19, #31, 45a52c <ferror@plt+0x56f5c>
  45a510:	add	x1, x20, #0xf
  45a514:	mov	w2, w19
  45a518:	and	x1, x1, #0xfffffffffffffff8
  45a51c:	mov	w19, w2
  45a520:	ldr	x0, [x20]
  45a524:	mov	x20, x1
  45a528:	b	45a4ec <ferror@plt+0x56f1c>
  45a52c:	add	w2, w19, #0x8
  45a530:	cmp	w2, #0x0
  45a534:	b.le	45a544 <ferror@plt+0x56f74>
  45a538:	add	x1, x20, #0xf
  45a53c:	and	x1, x1, #0xfffffffffffffff8
  45a540:	b	45a51c <ferror@plt+0x56f4c>
  45a544:	add	x0, sp, #0x110
  45a548:	mov	x1, x20
  45a54c:	add	x20, x0, w19, sxtw
  45a550:	b	45a51c <ferror@plt+0x56f4c>
  45a554:	stp	x29, x30, [sp, #-272]!
  45a558:	mov	x29, sp
  45a55c:	stp	x2, x3, [sp, #224]
  45a560:	add	x2, sp, #0x110
  45a564:	stp	x2, x2, [sp, #64]
  45a568:	add	x2, sp, #0xe0
  45a56c:	str	x2, [sp, #80]
  45a570:	mov	w2, #0xffffffd0            	// #-48
  45a574:	str	w2, [sp, #88]
  45a578:	mov	w2, #0xffffff80            	// #-128
  45a57c:	str	w2, [sp, #92]
  45a580:	ldp	x2, x3, [sp, #64]
  45a584:	stp	x2, x3, [sp, #32]
  45a588:	ldp	x2, x3, [sp, #80]
  45a58c:	str	x19, [sp, #16]
  45a590:	mov	x19, x0
  45a594:	stp	x2, x3, [sp, #48]
  45a598:	add	x2, sp, #0x20
  45a59c:	str	q0, [sp, #96]
  45a5a0:	str	q1, [sp, #112]
  45a5a4:	str	q2, [sp, #128]
  45a5a8:	str	q3, [sp, #144]
  45a5ac:	str	q4, [sp, #160]
  45a5b0:	str	q5, [sp, #176]
  45a5b4:	str	q6, [sp, #192]
  45a5b8:	str	q7, [sp, #208]
  45a5bc:	stp	x4, x5, [sp, #240]
  45a5c0:	stp	x6, x7, [sp, #256]
  45a5c4:	bl	45a3c8 <ferror@plt+0x56df8>
  45a5c8:	mov	x0, x19
  45a5cc:	ldr	x19, [sp, #16]
  45a5d0:	ldp	x29, x30, [sp], #272
  45a5d4:	ret
  45a5d8:	stp	x29, x30, [sp, #-288]!
  45a5dc:	mov	x29, sp
  45a5e0:	stp	x1, x2, [sp, #232]
  45a5e4:	add	x1, sp, #0x120
  45a5e8:	stp	x1, x1, [sp, #64]
  45a5ec:	add	x1, sp, #0xe0
  45a5f0:	str	x1, [sp, #80]
  45a5f4:	mov	w1, #0xffffffc8            	// #-56
  45a5f8:	str	w1, [sp, #88]
  45a5fc:	mov	w1, #0xffffff80            	// #-128
  45a600:	str	w1, [sp, #92]
  45a604:	mov	x1, x0
  45a608:	stp	x3, x4, [sp, #248]
  45a60c:	ldp	x2, x3, [sp, #64]
  45a610:	str	x19, [sp, #16]
  45a614:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45a618:	stp	x2, x3, [sp, #32]
  45a61c:	ldp	x2, x3, [sp, #80]
  45a620:	stp	x2, x3, [sp, #48]
  45a624:	ldr	x0, [x19, #1984]
  45a628:	add	x2, sp, #0x20
  45a62c:	str	q0, [sp, #96]
  45a630:	str	q1, [sp, #112]
  45a634:	str	q2, [sp, #128]
  45a638:	str	q3, [sp, #144]
  45a63c:	str	q4, [sp, #160]
  45a640:	str	q5, [sp, #176]
  45a644:	str	q6, [sp, #192]
  45a648:	str	q7, [sp, #208]
  45a64c:	stp	x5, x6, [sp, #264]
  45a650:	str	x7, [sp, #280]
  45a654:	bl	45a3c8 <ferror@plt+0x56df8>
  45a658:	ldr	x0, [x19, #1984]
  45a65c:	ldr	x19, [sp, #16]
  45a660:	ldp	x29, x30, [sp], #288
  45a664:	ret
  45a668:	stp	x29, x30, [sp, #-320]!
  45a66c:	mov	x29, sp
  45a670:	stp	x21, x22, [sp, #32]
  45a674:	mov	x21, x0
  45a678:	add	x0, sp, #0x140
  45a67c:	stp	x0, x0, [sp, #96]
  45a680:	mov	w0, #0xffffff80            	// #-128
  45a684:	add	x22, sp, #0x100
  45a688:	stp	x19, x20, [sp, #16]
  45a68c:	add	x20, sp, #0x140
  45a690:	mov	w19, #0xffffffc8            	// #-56
  45a694:	str	w0, [sp, #124]
  45a698:	mov	x0, x21
  45a69c:	str	x23, [sp, #48]
  45a6a0:	mov	x23, #0x0                   	// #0
  45a6a4:	str	x22, [sp, #112]
  45a6a8:	str	w19, [sp, #120]
  45a6ac:	str	q0, [sp, #128]
  45a6b0:	str	q1, [sp, #144]
  45a6b4:	str	q2, [sp, #160]
  45a6b8:	str	q3, [sp, #176]
  45a6bc:	str	q4, [sp, #192]
  45a6c0:	str	q5, [sp, #208]
  45a6c4:	str	q6, [sp, #224]
  45a6c8:	str	q7, [sp, #240]
  45a6cc:	stp	x1, x2, [sp, #264]
  45a6d0:	stp	x3, x4, [sp, #280]
  45a6d4:	stp	x5, x6, [sp, #296]
  45a6d8:	str	x7, [sp, #312]
  45a6dc:	cbnz	x0, 45a73c <ferror@plt+0x5716c>
  45a6e0:	add	x0, x23, #0x1
  45a6e4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45a6e8:	add	x1, sp, #0x140
  45a6ec:	stp	x1, x1, [sp, #96]
  45a6f0:	mov	w1, #0xffffffc8            	// #-56
  45a6f4:	str	x22, [sp, #112]
  45a6f8:	mov	x19, x0
  45a6fc:	str	w1, [sp, #120]
  45a700:	mov	w1, #0xffffff80            	// #-128
  45a704:	str	w1, [sp, #124]
  45a708:	mov	x1, x21
  45a70c:	ldp	x2, x3, [sp, #96]
  45a710:	stp	x2, x3, [sp, #64]
  45a714:	ldp	x2, x3, [sp, #112]
  45a718:	stp	x2, x3, [sp, #80]
  45a71c:	add	x2, sp, #0x40
  45a720:	bl	45a3c8 <ferror@plt+0x56df8>
  45a724:	mov	x0, x19
  45a728:	ldp	x19, x20, [sp, #16]
  45a72c:	ldp	x21, x22, [sp, #32]
  45a730:	ldr	x23, [sp, #48]
  45a734:	ldp	x29, x30, [sp], #320
  45a738:	ret
  45a73c:	bl	402d50 <strlen@plt>
  45a740:	add	x23, x23, x0
  45a744:	tbnz	w19, #31, 45a764 <ferror@plt+0x57194>
  45a748:	add	x1, x20, #0xf
  45a74c:	mov	w2, w19
  45a750:	and	x1, x1, #0xfffffffffffffff8
  45a754:	mov	w19, w2
  45a758:	ldr	x0, [x20]
  45a75c:	mov	x20, x1
  45a760:	b	45a6dc <ferror@plt+0x5710c>
  45a764:	add	w2, w19, #0x8
  45a768:	cmp	w2, #0x0
  45a76c:	b.le	45a77c <ferror@plt+0x571ac>
  45a770:	add	x1, x20, #0xf
  45a774:	and	x1, x1, #0xfffffffffffffff8
  45a778:	b	45a754 <ferror@plt+0x57184>
  45a77c:	add	x0, sp, #0x140
  45a780:	mov	x1, x20
  45a784:	add	x20, x0, w19, sxtw
  45a788:	b	45a754 <ferror@plt+0x57184>
  45a78c:	stp	x29, x30, [sp, #-304]!
  45a790:	mov	x29, sp
  45a794:	stp	x21, x22, [sp, #32]
  45a798:	mov	x21, x0
  45a79c:	add	x0, sp, #0x130
  45a7a0:	stp	x0, x0, [sp, #96]
  45a7a4:	mov	w0, #0xffffff80            	// #-128
  45a7a8:	mov	x22, x1
  45a7ac:	stp	x19, x20, [sp, #16]
  45a7b0:	add	x20, sp, #0x130
  45a7b4:	mov	w19, #0xffffffd0            	// #-48
  45a7b8:	str	w0, [sp, #124]
  45a7bc:	mov	x0, x1
  45a7c0:	stp	x23, x24, [sp, #48]
  45a7c4:	add	x23, sp, #0x100
  45a7c8:	mov	x24, #0x0                   	// #0
  45a7cc:	str	x23, [sp, #112]
  45a7d0:	str	w19, [sp, #120]
  45a7d4:	str	q0, [sp, #128]
  45a7d8:	str	q1, [sp, #144]
  45a7dc:	str	q2, [sp, #160]
  45a7e0:	str	q3, [sp, #176]
  45a7e4:	str	q4, [sp, #192]
  45a7e8:	str	q5, [sp, #208]
  45a7ec:	str	q6, [sp, #224]
  45a7f0:	str	q7, [sp, #240]
  45a7f4:	stp	x2, x3, [sp, #256]
  45a7f8:	stp	x4, x5, [sp, #272]
  45a7fc:	stp	x6, x7, [sp, #288]
  45a800:	cbnz	x0, 45a86c <ferror@plt+0x5729c>
  45a804:	add	x0, x24, #0x1
  45a808:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45a80c:	add	x1, sp, #0x130
  45a810:	stp	x1, x1, [sp, #96]
  45a814:	mov	w1, #0xffffffd0            	// #-48
  45a818:	str	x23, [sp, #112]
  45a81c:	mov	x19, x0
  45a820:	str	w1, [sp, #120]
  45a824:	mov	w1, #0xffffff80            	// #-128
  45a828:	str	w1, [sp, #124]
  45a82c:	mov	x1, x22
  45a830:	ldp	x2, x3, [sp, #96]
  45a834:	stp	x2, x3, [sp, #64]
  45a838:	ldp	x2, x3, [sp, #112]
  45a83c:	stp	x2, x3, [sp, #80]
  45a840:	add	x2, sp, #0x40
  45a844:	bl	45a3c8 <ferror@plt+0x56df8>
  45a848:	cbz	x21, 45a854 <ferror@plt+0x57284>
  45a84c:	mov	x0, x21
  45a850:	bl	4032a0 <free@plt>
  45a854:	mov	x0, x19
  45a858:	ldp	x19, x20, [sp, #16]
  45a85c:	ldp	x21, x22, [sp, #32]
  45a860:	ldp	x23, x24, [sp, #48]
  45a864:	ldp	x29, x30, [sp], #304
  45a868:	ret
  45a86c:	bl	402d50 <strlen@plt>
  45a870:	add	x24, x24, x0
  45a874:	tbnz	w19, #31, 45a894 <ferror@plt+0x572c4>
  45a878:	add	x2, x20, #0xf
  45a87c:	mov	w1, w19
  45a880:	and	x2, x2, #0xfffffffffffffff8
  45a884:	mov	w19, w1
  45a888:	ldr	x0, [x20]
  45a88c:	mov	x20, x2
  45a890:	b	45a800 <ferror@plt+0x57230>
  45a894:	add	w1, w19, #0x8
  45a898:	cmp	w1, #0x0
  45a89c:	b.le	45a8ac <ferror@plt+0x572dc>
  45a8a0:	add	x2, x20, #0xf
  45a8a4:	and	x2, x2, #0xfffffffffffffff8
  45a8a8:	b	45a884 <ferror@plt+0x572b4>
  45a8ac:	add	x0, sp, #0x130
  45a8b0:	mov	x2, x20
  45a8b4:	add	x20, x0, w19, sxtw
  45a8b8:	b	45a884 <ferror@plt+0x572b4>
  45a8bc:	b	403220 <strcmp@plt>
  45a8c0:	b	402f80 <strncmp@plt>
  45a8c4:	adrp	x4, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45a8c8:	add	x4, x4, #0x128
  45a8cc:	mov	x3, x0
  45a8d0:	mov	w5, #0x2f                  	// #47
  45a8d4:	mov	w0, #0x0                   	// #0
  45a8d8:	mov	w6, #0x43                  	// #67
  45a8dc:	ldrb	w2, [x3], #1
  45a8e0:	cbnz	w2, 45a8e8 <ferror@plt+0x57318>
  45a8e4:	ret
  45a8e8:	cmp	w2, #0x5c
  45a8ec:	mul	w1, w0, w6
  45a8f0:	csel	w2, w2, w5, ne  // ne = any
  45a8f4:	sub	w1, w1, #0x71
  45a8f8:	ldrb	w0, [x4, w2, sxtw]
  45a8fc:	add	w0, w0, w1
  45a900:	b	45a8dc <ferror@plt+0x5730c>
  45a904:	stp	x29, x30, [sp, #-16]!
  45a908:	mov	x29, sp
  45a90c:	bl	403220 <strcmp@plt>
  45a910:	cmp	w0, #0x0
  45a914:	cset	w0, eq  // eq = none
  45a918:	ldp	x29, x30, [sp], #16
  45a91c:	ret
  45a920:	stp	x29, x30, [sp, #-48]!
  45a924:	mov	x29, sp
  45a928:	stp	x19, x20, [sp, #16]
  45a92c:	mov	x19, x1
  45a930:	str	x21, [sp, #32]
  45a934:	bl	45b8d4 <ferror@plt+0x58304>
  45a938:	mov	x20, x0
  45a93c:	mov	x0, x19
  45a940:	bl	45b8d4 <ferror@plt+0x58304>
  45a944:	mov	x1, x0
  45a948:	mov	x19, x0
  45a94c:	mov	x0, x20
  45a950:	bl	45a904 <ferror@plt+0x57334>
  45a954:	mov	w21, w0
  45a958:	mov	x0, x20
  45a95c:	bl	4032a0 <free@plt>
  45a960:	mov	x0, x19
  45a964:	bl	4032a0 <free@plt>
  45a968:	mov	w0, w21
  45a96c:	ldp	x19, x20, [sp, #16]
  45a970:	ldr	x21, [sp, #32]
  45a974:	ldp	x29, x30, [sp], #48
  45a978:	ret
  45a97c:	cbz	x0, 45a988 <ferror@plt+0x573b8>
  45a980:	mov	w1, #0x2                   	// #2
  45a984:	b	403470 <__fsetlocking@plt>
  45a988:	ret
  45a98c:	b	45a97c <ferror@plt+0x573ac>
  45a990:	stp	x29, x30, [sp, #-16]!
  45a994:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45a998:	mov	x29, sp
  45a99c:	ldr	x0, [x0, #1280]
  45a9a0:	bl	45a97c <ferror@plt+0x573ac>
  45a9a4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45a9a8:	ldr	x0, [x0, #1272]
  45a9ac:	bl	45a97c <ferror@plt+0x573ac>
  45a9b0:	ldp	x29, x30, [sp], #16
  45a9b4:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45a9b8:	ldr	x0, [x0, #1264]
  45a9bc:	b	45a97c <ferror@plt+0x573ac>
  45a9c0:	stp	x29, x30, [sp, #-32]!
  45a9c4:	mov	x29, sp
  45a9c8:	str	x19, [sp, #16]
  45a9cc:	bl	402f20 <fopen@plt>
  45a9d0:	mov	x19, x0
  45a9d4:	bl	45a97c <ferror@plt+0x573ac>
  45a9d8:	mov	x0, x19
  45a9dc:	ldr	x19, [sp, #16]
  45a9e0:	ldp	x29, x30, [sp], #32
  45a9e4:	ret
  45a9e8:	stp	x29, x30, [sp, #-32]!
  45a9ec:	mov	x29, sp
  45a9f0:	str	x19, [sp, #16]
  45a9f4:	bl	403010 <fdopen@plt>
  45a9f8:	mov	x19, x0
  45a9fc:	bl	45a97c <ferror@plt+0x573ac>
  45aa00:	mov	x0, x19
  45aa04:	ldr	x19, [sp, #16]
  45aa08:	ldp	x29, x30, [sp], #32
  45aa0c:	ret
  45aa10:	stp	x29, x30, [sp, #-32]!
  45aa14:	mov	x29, sp
  45aa18:	str	x19, [sp, #16]
  45aa1c:	bl	4032d0 <freopen@plt>
  45aa20:	mov	x19, x0
  45aa24:	bl	45a97c <ferror@plt+0x573ac>
  45aa28:	mov	x0, x19
  45aa2c:	ldr	x19, [sp, #16]
  45aa30:	ldp	x29, x30, [sp], #32
  45aa34:	ret
  45aa38:	cmp	x1, x0
  45aa3c:	cset	w0, eq  // eq = none
  45aa40:	ret
  45aa44:	asr	x1, x0, #32
  45aa48:	mov	w2, #0xadcc                	// #44492
  45aa4c:	sub	w1, w1, w0
  45aa50:	movk	w2, #0xbdec, lsl #16
  45aa54:	add	w1, w1, w2
  45aa58:	mov	w2, #0x109a                	// #4250
  45aa5c:	movk	w2, #0x2, lsl #16
  45aa60:	eor	w1, w1, w2
  45aa64:	mov	w2, #0x2785                	// #10117
  45aa68:	mov	w3, #0x5234                	// #21044
  45aa6c:	movk	w2, #0x5c24, lsl #16
  45aa70:	add	w0, w2, w0
  45aa74:	sub	w0, w0, w1
  45aa78:	movk	w3, #0x4213, lsl #16
  45aa7c:	eor	w0, w0, w1, lsl #8
  45aa80:	sub	w3, w3, w1
  45aa84:	sub	w3, w3, w0
  45aa88:	sub	w1, w1, w0
  45aa8c:	eor	w3, w3, w0, lsr #13
  45aa90:	sub	w1, w1, w3
  45aa94:	sub	w0, w0, w3
  45aa98:	eor	w1, w1, w3, lsr #12
  45aa9c:	sub	w0, w0, w1
  45aaa0:	sub	w3, w3, w1
  45aaa4:	eor	w0, w0, w1, lsl #16
  45aaa8:	sub	w3, w3, w0
  45aaac:	sub	w1, w1, w0
  45aab0:	eor	w3, w3, w0, lsr #5
  45aab4:	sub	w1, w1, w3
  45aab8:	sub	w2, w0, w3
  45aabc:	eor	w1, w1, w3, lsr #3
  45aac0:	sub	w2, w2, w1
  45aac4:	eor	w2, w2, w1, lsl #10
  45aac8:	sub	w1, w3, w1
  45aacc:	sub	w0, w1, w2
  45aad0:	eor	w0, w0, w2, lsr #15
  45aad4:	ret
  45aad8:	ubfiz	x1, x1, #4, #32
  45aadc:	adrp	x4, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45aae0:	add	x4, x4, #0xb60
  45aae4:	add	w6, w0, #0x1
  45aae8:	add	x5, x4, x1
  45aaec:	ldr	w2, [x5, #8]
  45aaf0:	umull	x2, w0, w2
  45aaf4:	lsr	x3, x2, #32
  45aaf8:	sub	w2, w0, w3
  45aafc:	ldr	w0, [x5, #12]
  45ab00:	add	w2, w3, w2, lsr #1
  45ab04:	lsr	w2, w2, w0
  45ab08:	ldr	w0, [x4, x1]
  45ab0c:	sub	w0, w0, #0x2
  45ab10:	msub	w0, w2, w0, w6
  45ab14:	ret
  45ab18:	adrp	x4, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45ab1c:	add	x4, x4, #0xb60
  45ab20:	mov	x2, x0
  45ab24:	mov	w3, #0x0                   	// #0
  45ab28:	mov	w0, #0x1e                  	// #30
  45ab2c:	cmp	w0, w3
  45ab30:	b.ne	45ab64 <ferror@plt+0x57594>  // b.any
  45ab34:	ubfiz	x1, x0, #4, #32
  45ab38:	ldr	w1, [x4, x1]
  45ab3c:	cmp	x1, x2
  45ab40:	b.cs	45ab90 <ferror@plt+0x575c0>  // b.hs, b.nlast
  45ab44:	stp	x29, x30, [sp, #-16]!
  45ab48:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45ab4c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45ab50:	mov	x29, sp
  45ab54:	ldr	x0, [x0, #1264]
  45ab58:	add	x1, x1, #0xb2e
  45ab5c:	bl	403590 <fprintf@plt>
  45ab60:	bl	403180 <abort@plt>
  45ab64:	sub	w1, w0, w3
  45ab68:	add	w5, w3, w1, lsr #1
  45ab6c:	add	w1, w3, w1, lsr #1
  45ab70:	lsl	x1, x1, #4
  45ab74:	ldr	w1, [x4, x1]
  45ab78:	cmp	x1, x2
  45ab7c:	b.cs	45ab88 <ferror@plt+0x575b8>  // b.hs, b.nlast
  45ab80:	add	w3, w5, #0x1
  45ab84:	b	45ab2c <ferror@plt+0x5755c>
  45ab88:	mov	w0, w5
  45ab8c:	b	45ab2c <ferror@plt+0x5755c>
  45ab90:	ret
  45ab94:	ubfiz	x1, x1, #4, #32
  45ab98:	adrp	x4, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45ab9c:	add	x4, x4, #0xb60
  45aba0:	add	x5, x4, x1
  45aba4:	ldr	w1, [x4, x1]
  45aba8:	ldr	w2, [x5, #4]
  45abac:	umull	x2, w0, w2
  45abb0:	lsr	x2, x2, #32
  45abb4:	sub	w3, w0, w2
  45abb8:	add	w2, w2, w3, lsr #1
  45abbc:	ldr	w3, [x5, #12]
  45abc0:	lsr	w2, w2, w3
  45abc4:	msub	w0, w2, w1, w0
  45abc8:	ret
  45abcc:	stp	x29, x30, [sp, #-64]!
  45abd0:	mov	x29, sp
  45abd4:	stp	x19, x20, [sp, #16]
  45abd8:	mov	x19, x0
  45abdc:	stp	x21, x22, [sp, #32]
  45abe0:	ldr	w21, [x0, #104]
  45abe4:	ldp	x22, x20, [x0, #24]
  45abe8:	ldp	x1, x0, [x0, #40]
  45abec:	str	x23, [sp, #48]
  45abf0:	add	x23, x22, x20, lsl #3
  45abf4:	sub	x1, x1, x0
  45abf8:	lsl	x0, x1, #1
  45abfc:	cmp	x20, x1, lsl #1
  45ac00:	b.cc	45ac14 <ferror@plt+0x57644>  // b.lo, b.ul, b.last
  45ac04:	cmp	x20, x1, lsl #3
  45ac08:	b.ls	45ac2c <ferror@plt+0x5765c>  // b.plast
  45ac0c:	cmp	x20, #0x20
  45ac10:	b.ls	45ac2c <ferror@plt+0x5765c>  // b.plast
  45ac14:	bl	45ab18 <ferror@plt+0x57548>
  45ac18:	mov	w21, w0
  45ac1c:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45ac20:	add	x0, x0, #0xb60
  45ac24:	ubfiz	x1, x21, #4, #32
  45ac28:	ldr	w20, [x0, x1]
  45ac2c:	ldr	x3, [x19, #88]
  45ac30:	cbz	x3, 45acb4 <ferror@plt+0x576e4>
  45ac34:	ldr	x0, [x19, #80]
  45ac38:	mov	x1, x20
  45ac3c:	mov	x2, #0x8                   	// #8
  45ac40:	blr	x3
  45ac44:	cbz	x0, 45ad44 <ferror@plt+0x57774>
  45ac48:	stp	x0, x20, [x19, #24]
  45ac4c:	mov	x20, x22
  45ac50:	ldr	x0, [x19, #40]
  45ac54:	str	w21, [x19, #104]
  45ac58:	ldr	x1, [x19, #48]
  45ac5c:	str	xzr, [x19, #48]
  45ac60:	sub	x0, x0, x1
  45ac64:	str	x0, [x19, #40]
  45ac68:	ldr	x21, [x20]
  45ac6c:	cmp	x21, #0x1
  45ac70:	b.ls	45ad08 <ferror@plt+0x57738>  // b.plast
  45ac74:	ldr	x1, [x19]
  45ac78:	mov	x0, x21
  45ac7c:	blr	x1
  45ac80:	mov	w6, w0
  45ac84:	ldr	w10, [x19, #104]
  45ac88:	mov	w1, w10
  45ac8c:	bl	45ab94 <ferror@plt+0x575c4>
  45ac90:	mov	w7, w0
  45ac94:	ldr	x8, [x19, #24]
  45ac98:	ubfiz	x0, x7, #3, #32
  45ac9c:	add	x2, x8, x0
  45aca0:	ldr	x0, [x8, x0]
  45aca4:	cbz	x0, 45ad04 <ferror@plt+0x57734>
  45aca8:	cmp	x0, #0x1
  45acac:	b.ne	45acc8 <ferror@plt+0x576f8>  // b.any
  45acb0:	bl	403180 <abort@plt>
  45acb4:	ldr	x2, [x19, #64]
  45acb8:	mov	x0, x20
  45acbc:	mov	x1, #0x8                   	// #8
  45acc0:	blr	x2
  45acc4:	b	45ac44 <ferror@plt+0x57674>
  45acc8:	ldr	x9, [x19, #32]
  45accc:	mov	w1, w10
  45acd0:	mov	w0, w6
  45acd4:	bl	45aad8 <ferror@plt+0x57508>
  45acd8:	add	w7, w7, w0
  45acdc:	cmp	x9, w7, uxtw
  45ace0:	b.hi	45ace8 <ferror@plt+0x57718>  // b.pmore
  45ace4:	sub	w7, w7, w9
  45ace8:	ubfiz	x1, x7, #3, #32
  45acec:	add	x2, x8, x1
  45acf0:	ldr	x1, [x8, x1]
  45acf4:	cbz	x1, 45ad04 <ferror@plt+0x57734>
  45acf8:	cmp	x1, #0x1
  45acfc:	b.ne	45acd8 <ferror@plt+0x57708>  // b.any
  45ad00:	b	45acb0 <ferror@plt+0x576e0>
  45ad04:	str	x21, [x2]
  45ad08:	add	x20, x20, #0x8
  45ad0c:	cmp	x23, x20
  45ad10:	b.hi	45ac68 <ferror@plt+0x57698>  // b.pmore
  45ad14:	ldr	x1, [x19, #72]
  45ad18:	cbz	x1, 45ad2c <ferror@plt+0x5775c>
  45ad1c:	mov	x0, x22
  45ad20:	blr	x1
  45ad24:	mov	w0, #0x1                   	// #1
  45ad28:	b	45ad48 <ferror@plt+0x57778>
  45ad2c:	ldr	x2, [x19, #96]
  45ad30:	cbz	x2, 45ad24 <ferror@plt+0x57754>
  45ad34:	ldr	x0, [x19, #80]
  45ad38:	mov	x1, x22
  45ad3c:	blr	x2
  45ad40:	b	45ad24 <ferror@plt+0x57754>
  45ad44:	mov	w0, #0x0                   	// #0
  45ad48:	ldp	x19, x20, [sp, #16]
  45ad4c:	ldp	x21, x22, [sp, #32]
  45ad50:	ldr	x23, [sp, #48]
  45ad54:	ldp	x29, x30, [sp], #64
  45ad58:	ret
  45ad5c:	ldr	x0, [x0, #32]
  45ad60:	ret
  45ad64:	ldp	x1, x0, [x0, #40]
  45ad68:	sub	x0, x1, x0
  45ad6c:	ret
  45ad70:	stp	x29, x30, [sp, #-96]!
  45ad74:	mov	x29, sp
  45ad78:	stp	x19, x20, [sp, #16]
  45ad7c:	stp	x21, x22, [sp, #32]
  45ad80:	mov	x21, x5
  45ad84:	stp	x23, x24, [sp, #48]
  45ad88:	mov	x24, x2
  45ad8c:	mov	x23, x3
  45ad90:	stp	x25, x26, [sp, #64]
  45ad94:	mov	x25, x1
  45ad98:	stp	x27, x28, [sp, #80]
  45ad9c:	mov	x27, x4
  45ada0:	mov	x28, x6
  45ada4:	bl	45ab18 <ferror@plt+0x57548>
  45ada8:	mov	w22, w0
  45adac:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45adb0:	add	x0, x0, #0xb60
  45adb4:	ubfiz	x1, x22, #4, #32
  45adb8:	mov	x2, #0x70                  	// #112
  45adbc:	ldr	w26, [x0, x1]
  45adc0:	mov	x0, x27
  45adc4:	mov	x1, #0x1                   	// #1
  45adc8:	blr	x21
  45adcc:	cbnz	x0, 45adf4 <ferror@plt+0x57824>
  45add0:	mov	x20, #0x0                   	// #0
  45add4:	mov	x0, x20
  45add8:	ldp	x19, x20, [sp, #16]
  45addc:	ldp	x21, x22, [sp, #32]
  45ade0:	ldp	x23, x24, [sp, #48]
  45ade4:	ldp	x25, x26, [sp, #64]
  45ade8:	ldp	x27, x28, [sp, #80]
  45adec:	ldp	x29, x30, [sp], #96
  45adf0:	ret
  45adf4:	mov	x19, x0
  45adf8:	mov	x1, x26
  45adfc:	mov	x0, x27
  45ae00:	mov	x2, #0x8                   	// #8
  45ae04:	blr	x21
  45ae08:	mov	x20, x0
  45ae0c:	str	x0, [x19, #24]
  45ae10:	cbnz	x0, 45ae28 <ferror@plt+0x57858>
  45ae14:	cbz	x28, 45add0 <ferror@plt+0x57800>
  45ae18:	mov	x1, x19
  45ae1c:	mov	x0, x27
  45ae20:	blr	x28
  45ae24:	b	45add4 <ferror@plt+0x57804>
  45ae28:	mov	x20, x19
  45ae2c:	stp	x25, x24, [x19]
  45ae30:	str	x23, [x19, #16]
  45ae34:	str	x26, [x19, #32]
  45ae38:	stp	x27, x21, [x19, #80]
  45ae3c:	str	x28, [x19, #96]
  45ae40:	str	w22, [x19, #104]
  45ae44:	b	45add4 <ferror@plt+0x57804>
  45ae48:	stp	x29, x30, [sp, #-96]!
  45ae4c:	mov	x29, sp
  45ae50:	stp	x19, x20, [sp, #16]
  45ae54:	mov	x19, x4
  45ae58:	stp	x21, x22, [sp, #32]
  45ae5c:	mov	x21, x5
  45ae60:	stp	x23, x24, [sp, #48]
  45ae64:	mov	x24, x2
  45ae68:	mov	x23, x3
  45ae6c:	stp	x25, x26, [sp, #64]
  45ae70:	mov	x25, x1
  45ae74:	str	x27, [sp, #80]
  45ae78:	mov	x27, x6
  45ae7c:	bl	45ab18 <ferror@plt+0x57548>
  45ae80:	mov	w22, w0
  45ae84:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45ae88:	add	x0, x0, #0xb60
  45ae8c:	ubfiz	x1, x22, #4, #32
  45ae90:	ldr	w26, [x0, x1]
  45ae94:	mov	x1, #0x70                  	// #112
  45ae98:	mov	x0, #0x1                   	// #1
  45ae9c:	blr	x19
  45aea0:	cbnz	x0, 45aec8 <ferror@plt+0x578f8>
  45aea4:	mov	x20, #0x0                   	// #0
  45aea8:	mov	x0, x20
  45aeac:	ldp	x19, x20, [sp, #16]
  45aeb0:	ldp	x21, x22, [sp, #32]
  45aeb4:	ldp	x23, x24, [sp, #48]
  45aeb8:	ldp	x25, x26, [sp, #64]
  45aebc:	ldr	x27, [sp, #80]
  45aec0:	ldp	x29, x30, [sp], #96
  45aec4:	ret
  45aec8:	mov	x19, x0
  45aecc:	mov	x1, #0x8                   	// #8
  45aed0:	mov	x0, x26
  45aed4:	blr	x21
  45aed8:	mov	x20, x0
  45aedc:	str	x0, [x19, #24]
  45aee0:	cbnz	x0, 45aef4 <ferror@plt+0x57924>
  45aee4:	cbz	x27, 45aea4 <ferror@plt+0x578d4>
  45aee8:	mov	x0, x19
  45aeec:	blr	x27
  45aef0:	b	45aea8 <ferror@plt+0x578d8>
  45aef4:	mov	x20, x19
  45aef8:	stp	x25, x24, [x19]
  45aefc:	str	x23, [x19, #16]
  45af00:	str	x26, [x19, #32]
  45af04:	stp	x21, x27, [x19, #64]
  45af08:	str	w22, [x19, #104]
  45af0c:	b	45aea8 <ferror@plt+0x578d8>
  45af10:	mov	x6, x5
  45af14:	mov	x5, x4
  45af18:	b	45ae48 <ferror@plt+0x57878>
  45af1c:	stp	x1, x2, [x0]
  45af20:	str	x3, [x0, #16]
  45af24:	stp	x4, x5, [x0, #80]
  45af28:	str	x6, [x0, #96]
  45af2c:	ret
  45af30:	adrp	x5, 403000 <memset@plt>
  45af34:	adrp	x4, 45d000 <_obstack_memory_used@@Base+0xc10>
  45af38:	add	x5, x5, #0x2a0
  45af3c:	add	x4, x4, #0x6f0
  45af40:	b	45af10 <ferror@plt+0x57940>
  45af44:	adrp	x5, 403000 <memset@plt>
  45af48:	adrp	x4, 403000 <memset@plt>
  45af4c:	add	x5, x5, #0x2a0
  45af50:	add	x4, x4, #0x50
  45af54:	b	45af10 <ferror@plt+0x57940>
  45af58:	stp	x29, x30, [sp, #-48]!
  45af5c:	mov	x29, sp
  45af60:	stp	x19, x20, [sp, #16]
  45af64:	mov	x19, x0
  45af68:	str	x21, [sp, #32]
  45af6c:	ldr	x21, [x0, #24]
  45af70:	ldr	x0, [x0, #16]
  45af74:	cbnz	x0, 45afb4 <ferror@plt+0x579e4>
  45af78:	ldr	x1, [x19, #72]
  45af7c:	cbnz	x1, 45afe0 <ferror@plt+0x57a10>
  45af80:	ldr	x2, [x19, #96]
  45af84:	cbz	x2, 45b004 <ferror@plt+0x57a34>
  45af88:	ldr	x0, [x19, #80]
  45af8c:	mov	x1, x21
  45af90:	blr	x2
  45af94:	mov	x1, x19
  45af98:	ldr	x21, [sp, #32]
  45af9c:	ldr	x0, [x19, #80]
  45afa0:	ldr	x2, [x19, #96]
  45afa4:	ldp	x19, x20, [sp, #16]
  45afa8:	mov	x16, x2
  45afac:	ldp	x29, x30, [sp], #48
  45afb0:	br	x16
  45afb4:	ldr	x20, [x19, #32]
  45afb8:	sub	w20, w20, #0x1
  45afbc:	sxtw	x20, w20
  45afc0:	tbnz	w20, #31, 45af78 <ferror@plt+0x579a8>
  45afc4:	ldr	x0, [x21, x20, lsl #3]
  45afc8:	cmp	x0, #0x1
  45afcc:	b.ls	45afd8 <ferror@plt+0x57a08>  // b.plast
  45afd0:	ldr	x1, [x19, #16]
  45afd4:	blr	x1
  45afd8:	sub	x20, x20, #0x1
  45afdc:	b	45afc0 <ferror@plt+0x579f0>
  45afe0:	mov	x0, x21
  45afe4:	blr	x1
  45afe8:	mov	x0, x19
  45afec:	ldr	x21, [sp, #32]
  45aff0:	ldr	x1, [x19, #72]
  45aff4:	ldp	x19, x20, [sp, #16]
  45aff8:	mov	x16, x1
  45affc:	ldp	x29, x30, [sp], #48
  45b000:	br	x16
  45b004:	ldp	x19, x20, [sp, #16]
  45b008:	ldr	x21, [sp, #32]
  45b00c:	ldp	x29, x30, [sp], #48
  45b010:	ret
  45b014:	stp	x29, x30, [sp, #-48]!
  45b018:	mov	x29, sp
  45b01c:	stp	x19, x20, [sp, #16]
  45b020:	mov	x19, x0
  45b024:	stp	x21, x22, [sp, #32]
  45b028:	ldp	x22, x21, [x0, #24]
  45b02c:	ldr	x0, [x0, #16]
  45b030:	cbnz	x0, 45b050 <ferror@plt+0x57a80>
  45b034:	cmp	x21, #0x20, lsl #12
  45b038:	b.hi	45b078 <ferror@plt+0x57aa8>  // b.pmore
  45b03c:	lsl	x2, x21, #3
  45b040:	mov	x0, x22
  45b044:	mov	w1, #0x0                   	// #0
  45b048:	bl	403000 <memset@plt>
  45b04c:	b	45b0c8 <ferror@plt+0x57af8>
  45b050:	sub	w20, w21, #0x1
  45b054:	sxtw	x20, w20
  45b058:	tbnz	w20, #31, 45b034 <ferror@plt+0x57a64>
  45b05c:	ldr	x0, [x22, x20, lsl #3]
  45b060:	cmp	x0, #0x1
  45b064:	b.ls	45b070 <ferror@plt+0x57aa0>  // b.plast
  45b068:	ldr	x1, [x19, #16]
  45b06c:	blr	x1
  45b070:	sub	x20, x20, #0x1
  45b074:	b	45b058 <ferror@plt+0x57a88>
  45b078:	mov	x0, #0x80                  	// #128
  45b07c:	bl	45ab18 <ferror@plt+0x57548>
  45b080:	sbfiz	x1, x0, #4, #32
  45b084:	mov	w21, w0
  45b088:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45b08c:	add	x0, x0, #0xb60
  45b090:	ldr	w20, [x0, x1]
  45b094:	ldr	x1, [x19, #72]
  45b098:	cbz	x1, 45b0dc <ferror@plt+0x57b0c>
  45b09c:	ldr	x0, [x19, #24]
  45b0a0:	blr	x1
  45b0a4:	ldr	x3, [x19, #88]
  45b0a8:	sxtw	x20, w20
  45b0ac:	cbz	x3, 45b0f4 <ferror@plt+0x57b24>
  45b0b0:	ldr	x0, [x19, #80]
  45b0b4:	mov	x1, x20
  45b0b8:	mov	x2, #0x8                   	// #8
  45b0bc:	blr	x3
  45b0c0:	stp	x0, x20, [x19, #24]
  45b0c4:	str	w21, [x19, #104]
  45b0c8:	ldp	x21, x22, [sp, #32]
  45b0cc:	stp	xzr, xzr, [x19, #40]
  45b0d0:	ldp	x19, x20, [sp, #16]
  45b0d4:	ldp	x29, x30, [sp], #48
  45b0d8:	ret
  45b0dc:	ldr	x2, [x19, #96]
  45b0e0:	cbz	x2, 45b0a4 <ferror@plt+0x57ad4>
  45b0e4:	ldr	x1, [x19, #24]
  45b0e8:	ldr	x0, [x19, #80]
  45b0ec:	blr	x2
  45b0f0:	b	45b0a4 <ferror@plt+0x57ad4>
  45b0f4:	ldr	x2, [x19, #64]
  45b0f8:	mov	x0, x20
  45b0fc:	mov	x1, #0x8                   	// #8
  45b100:	blr	x2
  45b104:	b	45b0c0 <ferror@plt+0x57af0>
  45b108:	stp	x29, x30, [sp, #-64]!
  45b10c:	mov	x29, sp
  45b110:	stp	x19, x20, [sp, #16]
  45b114:	mov	x19, x0
  45b118:	ldr	w0, [x0, #56]
  45b11c:	stp	x21, x22, [sp, #32]
  45b120:	mov	x22, x1
  45b124:	ldr	w1, [x19, #104]
  45b128:	stp	x23, x24, [sp, #48]
  45b12c:	add	w0, w0, #0x1
  45b130:	mov	w23, w2
  45b134:	str	w0, [x19, #56]
  45b138:	mov	w0, w2
  45b13c:	bl	45ab94 <ferror@plt+0x575c4>
  45b140:	mov	w21, w0
  45b144:	ldr	x0, [x19, #24]
  45b148:	ldr	x20, [x0, w21, uxtw #3]
  45b14c:	cbnz	x20, 45b16c <ferror@plt+0x57b9c>
  45b150:	mov	x20, #0x0                   	// #0
  45b154:	mov	x0, x20
  45b158:	ldp	x19, x20, [sp, #16]
  45b15c:	ldp	x21, x22, [sp, #32]
  45b160:	ldp	x23, x24, [sp, #48]
  45b164:	ldp	x29, x30, [sp], #64
  45b168:	ret
  45b16c:	cmp	x20, #0x1
  45b170:	ldr	x24, [x19, #32]
  45b174:	b.ne	45b1d0 <ferror@plt+0x57c00>  // b.any
  45b178:	ldr	w1, [x19, #104]
  45b17c:	mov	w0, w23
  45b180:	bl	45aad8 <ferror@plt+0x57508>
  45b184:	mov	w23, w0
  45b188:	ldr	w0, [x19, #60]
  45b18c:	add	w21, w21, w23
  45b190:	add	w0, w0, #0x1
  45b194:	str	w0, [x19, #60]
  45b198:	cmp	x24, w21, uxtw
  45b19c:	b.hi	45b1a4 <ferror@plt+0x57bd4>  // b.pmore
  45b1a0:	sub	w21, w21, w24
  45b1a4:	ldr	x0, [x19, #24]
  45b1a8:	ldr	x20, [x0, w21, uxtw #3]
  45b1ac:	cbz	x20, 45b150 <ferror@plt+0x57b80>
  45b1b0:	cmp	x20, #0x1
  45b1b4:	b.eq	45b188 <ferror@plt+0x57bb8>  // b.none
  45b1b8:	ldr	x2, [x19, #8]
  45b1bc:	mov	x1, x22
  45b1c0:	mov	x0, x20
  45b1c4:	blr	x2
  45b1c8:	cbz	w0, 45b188 <ferror@plt+0x57bb8>
  45b1cc:	b	45b154 <ferror@plt+0x57b84>
  45b1d0:	ldr	x2, [x19, #8]
  45b1d4:	mov	x1, x22
  45b1d8:	mov	x0, x20
  45b1dc:	blr	x2
  45b1e0:	cbnz	w0, 45b154 <ferror@plt+0x57b84>
  45b1e4:	b	45b178 <ferror@plt+0x57ba8>
  45b1e8:	stp	x29, x30, [sp, #-32]!
  45b1ec:	mov	x29, sp
  45b1f0:	stp	x19, x20, [sp, #16]
  45b1f4:	mov	x19, x0
  45b1f8:	mov	x20, x1
  45b1fc:	mov	x0, x1
  45b200:	ldr	x1, [x19]
  45b204:	blr	x1
  45b208:	mov	w2, w0
  45b20c:	mov	x1, x20
  45b210:	mov	x0, x19
  45b214:	ldp	x19, x20, [sp, #16]
  45b218:	ldp	x29, x30, [sp], #32
  45b21c:	b	45b108 <ferror@plt+0x57b38>
  45b220:	stp	x29, x30, [sp, #-80]!
  45b224:	cmp	w3, #0x1
  45b228:	mov	x29, sp
  45b22c:	stp	x19, x20, [sp, #16]
  45b230:	mov	x19, x0
  45b234:	stp	x21, x22, [sp, #32]
  45b238:	mov	w22, w3
  45b23c:	stp	x23, x24, [sp, #48]
  45b240:	mov	x24, x1
  45b244:	stp	x25, x26, [sp, #64]
  45b248:	mov	w25, w2
  45b24c:	ldr	x23, [x0, #32]
  45b250:	b.ne	45b290 <ferror@plt+0x57cc0>  // b.any
  45b254:	ldr	x2, [x0, #40]
  45b258:	add	x1, x23, x23, lsl #1
  45b25c:	cmp	x1, x2, lsl #2
  45b260:	b.hi	45b290 <ferror@plt+0x57cc0>  // b.pmore
  45b264:	bl	45abcc <ferror@plt+0x575fc>
  45b268:	cbnz	w0, 45b28c <ferror@plt+0x57cbc>
  45b26c:	mov	x20, #0x0                   	// #0
  45b270:	mov	x0, x20
  45b274:	ldp	x19, x20, [sp, #16]
  45b278:	ldp	x21, x22, [sp, #32]
  45b27c:	ldp	x23, x24, [sp, #48]
  45b280:	ldp	x25, x26, [sp, #64]
  45b284:	ldp	x29, x30, [sp], #80
  45b288:	ret
  45b28c:	ldr	x23, [x19, #32]
  45b290:	mov	w0, w25
  45b294:	ldr	w1, [x19, #104]
  45b298:	bl	45ab94 <ferror@plt+0x575c4>
  45b29c:	mov	w21, w0
  45b2a0:	ldr	w0, [x19, #56]
  45b2a4:	ubfiz	x26, x21, #3, #32
  45b2a8:	add	w0, w0, #0x1
  45b2ac:	str	w0, [x19, #56]
  45b2b0:	ldr	x0, [x19, #24]
  45b2b4:	add	x20, x0, x26
  45b2b8:	ldr	x0, [x0, x26]
  45b2bc:	cbz	x0, 45b374 <ferror@plt+0x57da4>
  45b2c0:	cmp	x0, #0x1
  45b2c4:	b.eq	45b2e8 <ferror@plt+0x57d18>  // b.none
  45b2c8:	ldr	x2, [x19, #8]
  45b2cc:	mov	x1, x24
  45b2d0:	blr	x2
  45b2d4:	cbz	w0, 45b2e4 <ferror@plt+0x57d14>
  45b2d8:	ldr	x20, [x19, #24]
  45b2dc:	add	x20, x20, x26
  45b2e0:	b	45b270 <ferror@plt+0x57ca0>
  45b2e4:	mov	x20, #0x0                   	// #0
  45b2e8:	ldr	w1, [x19, #104]
  45b2ec:	mov	w0, w25
  45b2f0:	bl	45aad8 <ferror@plt+0x57508>
  45b2f4:	mov	w26, w0
  45b2f8:	ldr	w0, [x19, #60]
  45b2fc:	add	w21, w21, w26
  45b300:	add	w0, w0, #0x1
  45b304:	str	w0, [x19, #60]
  45b308:	cmp	x23, w21, uxtw
  45b30c:	b.hi	45b314 <ferror@plt+0x57d44>  // b.pmore
  45b310:	sub	w21, w21, w23
  45b314:	ldr	x0, [x19, #24]
  45b318:	ubfiz	x25, x21, #3, #32
  45b31c:	add	x1, x0, x25
  45b320:	ldr	x0, [x0, x25]
  45b324:	cbz	x0, 45b358 <ferror@plt+0x57d88>
  45b328:	cmp	x0, #0x1
  45b32c:	b.ne	45b33c <ferror@plt+0x57d6c>  // b.any
  45b330:	cmp	x20, #0x0
  45b334:	csel	x20, x20, x1, ne  // ne = any
  45b338:	b	45b2f8 <ferror@plt+0x57d28>
  45b33c:	ldr	x2, [x19, #8]
  45b340:	mov	x1, x24
  45b344:	blr	x2
  45b348:	cbz	w0, 45b2f8 <ferror@plt+0x57d28>
  45b34c:	ldr	x20, [x19, #24]
  45b350:	add	x20, x20, x25
  45b354:	b	45b270 <ferror@plt+0x57ca0>
  45b358:	cbz	w22, 45b26c <ferror@plt+0x57c9c>
  45b35c:	cbz	x20, 45b378 <ferror@plt+0x57da8>
  45b360:	ldr	x0, [x19, #48]
  45b364:	sub	x0, x0, #0x1
  45b368:	str	x0, [x19, #48]
  45b36c:	str	xzr, [x20]
  45b370:	b	45b270 <ferror@plt+0x57ca0>
  45b374:	cbz	w22, 45b26c <ferror@plt+0x57c9c>
  45b378:	ldr	x20, [x19, #24]
  45b37c:	ldr	x0, [x19, #40]
  45b380:	add	x20, x20, w21, uxtw #3
  45b384:	add	x0, x0, #0x1
  45b388:	str	x0, [x19, #40]
  45b38c:	b	45b270 <ferror@plt+0x57ca0>
  45b390:	stp	x29, x30, [sp, #-48]!
  45b394:	mov	x29, sp
  45b398:	stp	x19, x20, [sp, #16]
  45b39c:	mov	x19, x0
  45b3a0:	mov	x20, x1
  45b3a4:	mov	x0, x1
  45b3a8:	ldr	x1, [x19]
  45b3ac:	str	x21, [sp, #32]
  45b3b0:	mov	w21, w2
  45b3b4:	blr	x1
  45b3b8:	mov	w2, w0
  45b3bc:	mov	w3, w21
  45b3c0:	mov	x1, x20
  45b3c4:	mov	x0, x19
  45b3c8:	ldp	x19, x20, [sp, #16]
  45b3cc:	ldr	x21, [sp, #32]
  45b3d0:	ldp	x29, x30, [sp], #48
  45b3d4:	b	45b220 <ferror@plt+0x57c50>
  45b3d8:	stp	x29, x30, [sp, #-32]!
  45b3dc:	mov	w3, #0x0                   	// #0
  45b3e0:	mov	x29, sp
  45b3e4:	stp	x19, x20, [sp, #16]
  45b3e8:	mov	x19, x0
  45b3ec:	bl	45b220 <ferror@plt+0x57c50>
  45b3f0:	cbz	x0, 45b41c <ferror@plt+0x57e4c>
  45b3f4:	ldr	x1, [x19, #16]
  45b3f8:	mov	x20, x0
  45b3fc:	cbz	x1, 45b408 <ferror@plt+0x57e38>
  45b400:	ldr	x0, [x0]
  45b404:	blr	x1
  45b408:	mov	x0, #0x1                   	// #1
  45b40c:	str	x0, [x20]
  45b410:	ldr	x0, [x19, #48]
  45b414:	add	x0, x0, #0x1
  45b418:	str	x0, [x19, #48]
  45b41c:	ldp	x19, x20, [sp, #16]
  45b420:	ldp	x29, x30, [sp], #32
  45b424:	ret
  45b428:	stp	x29, x30, [sp, #-32]!
  45b42c:	mov	x29, sp
  45b430:	stp	x19, x20, [sp, #16]
  45b434:	mov	x19, x0
  45b438:	mov	x20, x1
  45b43c:	mov	x0, x1
  45b440:	ldr	x1, [x19]
  45b444:	blr	x1
  45b448:	mov	w2, w0
  45b44c:	mov	x1, x20
  45b450:	mov	x0, x19
  45b454:	ldp	x19, x20, [sp, #16]
  45b458:	ldp	x29, x30, [sp], #32
  45b45c:	b	45b3d8 <ferror@plt+0x57e08>
  45b460:	stp	x29, x30, [sp, #-32]!
  45b464:	mov	x29, sp
  45b468:	stp	x19, x20, [sp, #16]
  45b46c:	mov	x20, x1
  45b470:	ldr	x1, [x0, #24]
  45b474:	cmp	x1, x20
  45b478:	b.hi	45b4a0 <ferror@plt+0x57ed0>  // b.pmore
  45b47c:	mov	x19, x0
  45b480:	ldr	x0, [x0, #32]
  45b484:	add	x0, x1, x0, lsl #3
  45b488:	cmp	x20, x0
  45b48c:	b.cs	45b4a0 <ferror@plt+0x57ed0>  // b.hs, b.nlast
  45b490:	ldr	x0, [x20]
  45b494:	cbz	x0, 45b4a0 <ferror@plt+0x57ed0>
  45b498:	cmp	x0, #0x1
  45b49c:	b.ne	45b4a4 <ferror@plt+0x57ed4>  // b.any
  45b4a0:	bl	403180 <abort@plt>
  45b4a4:	ldr	x1, [x19, #16]
  45b4a8:	cbz	x1, 45b4b0 <ferror@plt+0x57ee0>
  45b4ac:	blr	x1
  45b4b0:	mov	x0, #0x1                   	// #1
  45b4b4:	str	x0, [x20]
  45b4b8:	ldr	x0, [x19, #48]
  45b4bc:	add	x0, x0, #0x1
  45b4c0:	str	x0, [x19, #48]
  45b4c4:	ldp	x19, x20, [sp, #16]
  45b4c8:	ldp	x29, x30, [sp], #32
  45b4cc:	ret
  45b4d0:	stp	x29, x30, [sp, #-48]!
  45b4d4:	mov	x29, sp
  45b4d8:	stp	x19, x20, [sp, #16]
  45b4dc:	mov	x20, x1
  45b4e0:	stp	x21, x22, [sp, #32]
  45b4e4:	mov	x21, x2
  45b4e8:	ldp	x19, x22, [x0, #24]
  45b4ec:	add	x22, x19, x22, lsl #3
  45b4f0:	ldr	x0, [x19]
  45b4f4:	cmp	x0, #0x1
  45b4f8:	b.hi	45b518 <ferror@plt+0x57f48>  // b.pmore
  45b4fc:	add	x19, x19, #0x8
  45b500:	cmp	x22, x19
  45b504:	b.hi	45b4f0 <ferror@plt+0x57f20>  // b.pmore
  45b508:	ldp	x19, x20, [sp, #16]
  45b50c:	ldp	x21, x22, [sp, #32]
  45b510:	ldp	x29, x30, [sp], #48
  45b514:	ret
  45b518:	mov	x1, x21
  45b51c:	mov	x0, x19
  45b520:	blr	x20
  45b524:	cbnz	w0, 45b4fc <ferror@plt+0x57f2c>
  45b528:	b	45b508 <ferror@plt+0x57f38>
  45b52c:	stp	x29, x30, [sp, #-48]!
  45b530:	mov	x29, sp
  45b534:	stp	x19, x20, [sp, #16]
  45b538:	mov	x20, x1
  45b53c:	mov	x19, x0
  45b540:	ldp	x1, x3, [x0, #40]
  45b544:	str	x21, [sp, #32]
  45b548:	mov	x21, x2
  45b54c:	ldr	x2, [x0, #32]
  45b550:	sub	x1, x1, x3
  45b554:	cmp	x2, x1, lsl #3
  45b558:	b.ls	45b568 <ferror@plt+0x57f98>  // b.plast
  45b55c:	cmp	x2, #0x20
  45b560:	b.ls	45b568 <ferror@plt+0x57f98>  // b.plast
  45b564:	bl	45abcc <ferror@plt+0x575fc>
  45b568:	mov	x2, x21
  45b56c:	mov	x1, x20
  45b570:	mov	x0, x19
  45b574:	ldp	x19, x20, [sp, #16]
  45b578:	ldr	x21, [sp, #32]
  45b57c:	ldp	x29, x30, [sp], #48
  45b580:	b	45b4d0 <ferror@plt+0x57f00>
  45b584:	ldr	w1, [x0, #56]
  45b588:	cbz	w1, 45b5a0 <ferror@plt+0x57fd0>
  45b58c:	ldr	w0, [x0, #60]
  45b590:	ucvtf	d1, w1
  45b594:	ucvtf	d0, w0
  45b598:	fdiv	d0, d0, d1
  45b59c:	ret
  45b5a0:	movi	d0, #0x0
  45b5a4:	b	45b59c <ferror@plt+0x57fcc>
  45b5a8:	mov	x2, x0
  45b5ac:	mov	w3, #0x43                  	// #67
  45b5b0:	mov	w0, #0x0                   	// #0
  45b5b4:	ldrb	w1, [x2], #1
  45b5b8:	cbnz	w1, 45b5c0 <ferror@plt+0x57ff0>
  45b5bc:	ret
  45b5c0:	sub	w1, w1, #0x71
  45b5c4:	madd	w0, w0, w3, w1
  45b5c8:	b	45b5b4 <ferror@plt+0x57fe4>
  45b5cc:	mov	w3, #0x79b9                	// #31161
  45b5d0:	mov	w4, w1
  45b5d4:	movk	w3, #0x9e37, lsl #16
  45b5d8:	tst	x0, #0x3
  45b5dc:	mov	w5, w3
  45b5e0:	b.eq	45b75c <ferror@plt+0x5818c>  // b.none
  45b5e4:	cmp	w4, #0xb
  45b5e8:	b.ls	45b764 <ferror@plt+0x58194>  // b.plast
  45b5ec:	ldrb	w7, [x0, #6]
  45b5f0:	sub	w4, w4, #0xc
  45b5f4:	ldrb	w6, [x0, #5]
  45b5f8:	add	x0, x0, #0xc
  45b5fc:	lsl	w7, w7, #16
  45b600:	add	w6, w7, w6, lsl #8
  45b604:	ldurb	w7, [x0, #-8]
  45b608:	add	w3, w7, w3
  45b60c:	ldurb	w7, [x0, #-2]
  45b610:	add	w6, w6, w3
  45b614:	ldurb	w3, [x0, #-5]
  45b618:	lsl	w7, w7, #16
  45b61c:	add	w3, w6, w3, lsl #24
  45b620:	ldurb	w6, [x0, #-3]
  45b624:	add	w6, w7, w6, lsl #8
  45b628:	ldurb	w7, [x0, #-4]
  45b62c:	add	w2, w7, w2
  45b630:	ldurb	w7, [x0, #-10]
  45b634:	add	w6, w6, w2
  45b638:	ldurb	w2, [x0, #-1]
  45b63c:	lsl	w7, w7, #16
  45b640:	add	w2, w6, w2, lsl #24
  45b644:	ldurb	w6, [x0, #-11]
  45b648:	add	w6, w7, w6, lsl #8
  45b64c:	ldurb	w7, [x0, #-12]
  45b650:	add	w5, w7, w5
  45b654:	add	w5, w6, w5
  45b658:	add	w6, w3, w2
  45b65c:	sub	w6, w5, w6
  45b660:	ldurb	w5, [x0, #-9]
  45b664:	sub	w3, w3, w2
  45b668:	add	w5, w6, w5, lsl #24
  45b66c:	eor	w5, w5, w2, lsr #13
  45b670:	sub	w3, w3, w5
  45b674:	sub	w2, w2, w5
  45b678:	eor	w3, w3, w5, lsl #8
  45b67c:	sub	w2, w2, w3
  45b680:	sub	w5, w5, w3
  45b684:	eor	w2, w2, w3, lsr #13
  45b688:	sub	w5, w5, w2
  45b68c:	sub	w3, w3, w2
  45b690:	eor	w5, w5, w2, lsr #12
  45b694:	sub	w3, w3, w5
  45b698:	sub	w2, w2, w5
  45b69c:	eor	w3, w3, w5, lsl #16
  45b6a0:	sub	w2, w2, w3
  45b6a4:	sub	w5, w5, w3
  45b6a8:	eor	w2, w2, w3, lsr #5
  45b6ac:	sub	w5, w5, w2
  45b6b0:	sub	w3, w3, w2
  45b6b4:	eor	w5, w5, w2, lsr #3
  45b6b8:	sub	w3, w3, w5
  45b6bc:	sub	w2, w2, w5
  45b6c0:	eor	w3, w3, w5, lsl #10
  45b6c4:	sub	w2, w2, w3
  45b6c8:	eor	w2, w2, w3, lsr #15
  45b6cc:	b	45b5e4 <ferror@plt+0x58014>
  45b6d0:	ldr	w6, [x0]
  45b6d4:	sub	w4, w4, #0xc
  45b6d8:	add	x0, x0, #0xc
  45b6dc:	add	w5, w5, w6
  45b6e0:	ldur	w6, [x0, #-8]
  45b6e4:	add	w3, w3, w6
  45b6e8:	ldur	w6, [x0, #-4]
  45b6ec:	add	w2, w2, w6
  45b6f0:	add	w6, w3, w2
  45b6f4:	sub	w3, w3, w2
  45b6f8:	sub	w5, w5, w6
  45b6fc:	eor	w5, w5, w2, lsr #13
  45b700:	sub	w3, w3, w5
  45b704:	sub	w2, w2, w5
  45b708:	eor	w3, w3, w5, lsl #8
  45b70c:	sub	w2, w2, w3
  45b710:	sub	w5, w5, w3
  45b714:	eor	w2, w2, w3, lsr #13
  45b718:	sub	w5, w5, w2
  45b71c:	sub	w3, w3, w2
  45b720:	eor	w5, w5, w2, lsr #12
  45b724:	sub	w3, w3, w5
  45b728:	sub	w2, w2, w5
  45b72c:	eor	w3, w3, w5, lsl #16
  45b730:	sub	w2, w2, w3
  45b734:	sub	w5, w5, w3
  45b738:	eor	w2, w2, w3, lsr #5
  45b73c:	sub	w5, w5, w2
  45b740:	sub	w3, w3, w2
  45b744:	eor	w5, w5, w2, lsr #3
  45b748:	sub	w3, w3, w5
  45b74c:	sub	w2, w2, w5
  45b750:	eor	w3, w3, w5, lsl #10
  45b754:	sub	w2, w2, w3
  45b758:	eor	w2, w2, w3, lsr #15
  45b75c:	cmp	w4, #0xb
  45b760:	b.hi	45b6d0 <ferror@plt+0x58100>  // b.pmore
  45b764:	sub	w4, w4, #0x1
  45b768:	add	w1, w2, w1
  45b76c:	cmp	w4, #0xa
  45b770:	b.hi	45b7e4 <ferror@plt+0x58214>  // b.pmore
  45b774:	adrp	x2, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45b778:	add	x2, x2, #0xb54
  45b77c:	ldrb	w2, [x2, w4, uxtw]
  45b780:	adr	x4, 45b78c <ferror@plt+0x581bc>
  45b784:	add	x2, x4, w2, sxtb #2
  45b788:	br	x2
  45b78c:	ldrb	w2, [x0, #10]
  45b790:	add	w1, w1, w2, lsl #24
  45b794:	ldrb	w2, [x0, #9]
  45b798:	add	w1, w1, w2, lsl #16
  45b79c:	ldrb	w2, [x0, #8]
  45b7a0:	add	w1, w1, w2, lsl #8
  45b7a4:	ldrb	w2, [x0, #7]
  45b7a8:	add	w3, w3, w2, lsl #24
  45b7ac:	ldrb	w2, [x0, #6]
  45b7b0:	add	w3, w3, w2, lsl #16
  45b7b4:	ldrb	w2, [x0, #5]
  45b7b8:	add	w3, w3, w2, lsl #8
  45b7bc:	ldrb	w2, [x0, #4]
  45b7c0:	add	w3, w3, w2
  45b7c4:	ldrb	w2, [x0, #3]
  45b7c8:	add	w5, w5, w2, lsl #24
  45b7cc:	ldrb	w2, [x0, #2]
  45b7d0:	add	w5, w5, w2, lsl #16
  45b7d4:	ldrb	w2, [x0, #1]
  45b7d8:	add	w5, w5, w2, lsl #8
  45b7dc:	ldrb	w0, [x0]
  45b7e0:	add	w5, w5, w0
  45b7e4:	add	w0, w3, w1
  45b7e8:	sub	w2, w3, w1
  45b7ec:	sub	w0, w5, w0
  45b7f0:	eor	w0, w0, w1, lsr #13
  45b7f4:	sub	w2, w2, w0
  45b7f8:	sub	w1, w1, w0
  45b7fc:	eor	w2, w2, w0, lsl #8
  45b800:	sub	w1, w1, w2
  45b804:	sub	w0, w0, w2
  45b808:	eor	w1, w1, w2, lsr #13
  45b80c:	sub	w0, w0, w1
  45b810:	sub	w2, w2, w1
  45b814:	eor	w0, w0, w1, lsr #12
  45b818:	sub	w2, w2, w0
  45b81c:	sub	w1, w1, w0
  45b820:	eor	w2, w2, w0, lsl #16
  45b824:	sub	w1, w1, w2
  45b828:	sub	w3, w0, w2
  45b82c:	eor	w1, w1, w2, lsr #5
  45b830:	sub	w3, w3, w1
  45b834:	sub	w0, w2, w1
  45b838:	eor	w3, w3, w1, lsr #3
  45b83c:	sub	w0, w0, w3
  45b840:	sub	w1, w1, w3
  45b844:	eor	w0, w0, w3, lsl #10
  45b848:	sub	w1, w1, w0
  45b84c:	eor	w0, w1, w0, lsr #15
  45b850:	ret
  45b854:	ret
  45b858:	mov	x1, x0
  45b85c:	ldrb	w2, [x1]
  45b860:	cbnz	w2, 45b868 <ferror@plt+0x58298>
  45b864:	ret
  45b868:	add	x1, x1, #0x1
  45b86c:	cmp	w2, #0x2f
  45b870:	csel	x0, x0, x1, ne  // ne = any
  45b874:	b	45b85c <ferror@plt+0x5828c>
  45b878:	ldrb	w2, [x0]
  45b87c:	mov	x1, x0
  45b880:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45b884:	add	x0, x0, #0x228
  45b888:	ldrh	w0, [x0, x2, lsl #1]
  45b88c:	mov	w2, #0x88                  	// #136
  45b890:	tst	w2, w0
  45b894:	b.eq	45b8a8 <ferror@plt+0x582d8>  // b.none
  45b898:	ldrb	w0, [x1, #1]
  45b89c:	cmp	w0, #0x3a
  45b8a0:	b.ne	45b8a8 <ferror@plt+0x582d8>  // b.any
  45b8a4:	add	x1, x1, #0x2
  45b8a8:	mov	x0, x1
  45b8ac:	mov	w3, #0x5c                  	// #92
  45b8b0:	ldrb	w2, [x1]
  45b8b4:	cbnz	w2, 45b8bc <ferror@plt+0x582ec>
  45b8b8:	ret
  45b8bc:	cmp	w2, #0x2f
  45b8c0:	add	x1, x1, #0x1
  45b8c4:	ccmp	w2, w3, #0x4, ne  // ne = any
  45b8c8:	csel	x0, x0, x1, ne  // ne = any
  45b8cc:	b	45b8b0 <ferror@plt+0x582e0>
  45b8d0:	b	45b858 <ferror@plt+0x58288>
  45b8d4:	mov	x12, #0x1020                	// #4128
  45b8d8:	sub	sp, sp, x12
  45b8dc:	add	x1, sp, #0x20
  45b8e0:	stp	x29, x30, [sp]
  45b8e4:	mov	x29, sp
  45b8e8:	str	x19, [sp, #16]
  45b8ec:	mov	x19, x0
  45b8f0:	bl	403440 <realpath@plt>
  45b8f4:	cmp	x0, #0x0
  45b8f8:	csel	x0, x0, x19, ne  // ne = any
  45b8fc:	bl	4030e0 <strdup@plt>
  45b900:	mov	x12, #0x1020                	// #4128
  45b904:	ldp	x29, x30, [sp]
  45b908:	ldr	x19, [sp, #16]
  45b90c:	add	sp, sp, x12
  45b910:	ret
  45b914:	cbz	x0, 45b94c <ferror@plt+0x5837c>
  45b918:	stp	x29, x30, [sp, #-32]!
  45b91c:	mov	x29, sp
  45b920:	stp	x19, x20, [sp, #16]
  45b924:	mov	x19, x0
  45b928:	mov	x20, x0
  45b92c:	ldr	x0, [x20], #8
  45b930:	cbnz	x0, 45b944 <ferror@plt+0x58374>
  45b934:	mov	x0, x19
  45b938:	ldp	x19, x20, [sp, #16]
  45b93c:	ldp	x29, x30, [sp], #32
  45b940:	b	4032a0 <free@plt>
  45b944:	bl	4032a0 <free@plt>
  45b948:	b	45b92c <ferror@plt+0x5835c>
  45b94c:	ret
  45b950:	stp	x29, x30, [sp, #-80]!
  45b954:	mov	x29, sp
  45b958:	stp	x19, x20, [sp, #16]
  45b95c:	mov	x20, x0
  45b960:	stp	x21, x22, [sp, #32]
  45b964:	stp	x23, x24, [sp, #48]
  45b968:	mov	x24, x1
  45b96c:	mov	x1, x0
  45b970:	mov	w0, #0x0                   	// #0
  45b974:	stp	x25, x26, [sp, #64]
  45b978:	mov	x2, x1
  45b97c:	ldrb	w1, [x2], #1
  45b980:	cbnz	w1, 45ba0c <ferror@plt+0x5843c>
  45b984:	add	w0, w0, #0x2
  45b988:	sbfiz	x0, x0, #3, #32
  45b98c:	bl	402f40 <malloc@plt>
  45b990:	mov	x19, x0
  45b994:	cbz	x0, 45ba90 <ferror@plt+0x584c0>
  45b998:	sub	x26, x0, #0x8
  45b99c:	mov	x23, #0x0                   	// #0
  45b9a0:	mov	w25, w23
  45b9a4:	mov	x22, x20
  45b9a8:	mov	x21, x22
  45b9ac:	ldrb	w0, [x22], #1
  45b9b0:	cbnz	w0, 45ba30 <ferror@plt+0x58460>
  45b9b4:	sub	x21, x21, x20
  45b9b8:	cmp	x21, #0x0
  45b9bc:	b.le	45b9f0 <ferror@plt+0x58420>
  45b9c0:	add	w0, w21, #0x1
  45b9c4:	sxtw	x21, w21
  45b9c8:	add	w23, w25, #0x1
  45b9cc:	sxtw	x0, w0
  45b9d0:	bl	402f40 <malloc@plt>
  45b9d4:	mov	x22, x0
  45b9d8:	mov	x2, x21
  45b9dc:	mov	x1, x20
  45b9e0:	bl	402cd0 <memcpy@plt>
  45b9e4:	str	x22, [x19, w25, sxtw #3]
  45b9e8:	mov	w25, w23
  45b9ec:	strb	wzr, [x22, x21]
  45b9f0:	sbfiz	x0, x25, #3, #32
  45b9f4:	str	xzr, [x19, x0]
  45b9f8:	add	x0, x19, x0
  45b9fc:	ldur	x0, [x0, #-8]
  45ba00:	cbz	x0, 45ba84 <ferror@plt+0x584b4>
  45ba04:	str	w25, [x24]
  45ba08:	b	45ba90 <ferror@plt+0x584c0>
  45ba0c:	cmp	w1, #0x2f
  45ba10:	b.ne	45b97c <ferror@plt+0x583ac>  // b.any
  45ba14:	add	w0, w0, #0x1
  45ba18:	ldrb	w3, [x2]
  45ba1c:	mov	x1, x2
  45ba20:	add	x2, x2, #0x1
  45ba24:	cmp	w3, #0x2f
  45ba28:	b.eq	45ba18 <ferror@plt+0x58448>  // b.none
  45ba2c:	b	45b978 <ferror@plt+0x583a8>
  45ba30:	cmp	w0, #0x2f
  45ba34:	b.ne	45b9a8 <ferror@plt+0x583d8>  // b.any
  45ba38:	ldrb	w0, [x22]
  45ba3c:	cmp	w0, #0x2f
  45ba40:	b.eq	45baac <ferror@plt+0x584dc>  // b.none
  45ba44:	sub	x21, x22, x20
  45ba48:	add	w0, w21, #0x1
  45ba4c:	sxtw	x21, w21
  45ba50:	sxtw	x0, w0
  45ba54:	bl	402f40 <malloc@plt>
  45ba58:	mov	x1, x20
  45ba5c:	mov	x25, x0
  45ba60:	mov	x2, x21
  45ba64:	bl	402cd0 <memcpy@plt>
  45ba68:	str	x25, [x19, x23, lsl #3]
  45ba6c:	add	x23, x23, #0x1
  45ba70:	strb	wzr, [x25, x21]
  45ba74:	lsl	x0, x23, #3
  45ba78:	ldr	x1, [x26, x23, lsl #3]
  45ba7c:	cbnz	x1, 45bab4 <ferror@plt+0x584e4>
  45ba80:	str	xzr, [x19, x0]
  45ba84:	mov	x0, x19
  45ba88:	mov	x19, #0x0                   	// #0
  45ba8c:	bl	45b914 <ferror@plt+0x58344>
  45ba90:	mov	x0, x19
  45ba94:	ldp	x19, x20, [sp, #16]
  45ba98:	ldp	x21, x22, [sp, #32]
  45ba9c:	ldp	x23, x24, [sp, #48]
  45baa0:	ldp	x25, x26, [sp, #64]
  45baa4:	ldp	x29, x30, [sp], #80
  45baa8:	ret
  45baac:	add	x22, x22, #0x1
  45bab0:	b	45ba38 <ferror@plt+0x58468>
  45bab4:	mov	x20, x22
  45bab8:	b	45b9a0 <ferror@plt+0x583d0>
  45babc:	stp	x29, x30, [sp, #-256]!
  45bac0:	cmp	x0, #0x0
  45bac4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  45bac8:	mov	x29, sp
  45bacc:	stp	x19, x20, [sp, #16]
  45bad0:	stp	x21, x22, [sp, #32]
  45bad4:	stp	x23, x24, [sp, #48]
  45bad8:	stp	x25, x26, [sp, #64]
  45badc:	stp	x27, x28, [sp, #80]
  45bae0:	b.eq	45be68 <ferror@plt+0x58898>  // b.none
  45bae4:	mov	x19, x2
  45bae8:	cbz	x2, 45bc04 <ferror@plt+0x58634>
  45baec:	mov	x21, x0
  45baf0:	mov	x24, x1
  45baf4:	mov	w26, w3
  45baf8:	bl	45b8d0 <ferror@plt+0x58300>
  45bafc:	cmp	x21, x0
  45bb00:	b.ne	45bc88 <ferror@plt+0x586b8>  // b.any
  45bb04:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x1bc10>
  45bb08:	add	x0, x0, #0xcb4
  45bb0c:	bl	4034f0 <getenv@plt>
  45bb10:	mov	x22, x0
  45bb14:	cbz	x0, 45bc88 <ferror@plt+0x586b8>
  45bb18:	bl	402d50 <strlen@plt>
  45bb1c:	cmp	x0, #0x0
  45bb20:	mov	x1, #0x2                   	// #2
  45bb24:	csinc	x20, x1, x0, eq  // eq = none
  45bb28:	mov	x0, x21
  45bb2c:	bl	402d50 <strlen@plt>
  45bb30:	add	x1, x0, x20
  45bb34:	add	x0, x1, #0x1
  45bb38:	cmp	x0, #0xfbf
  45bb3c:	b.hi	45bc28 <ferror@plt+0x58658>  // b.pmore
  45bb40:	add	x1, x1, #0x10
  45bb44:	mov	x23, #0x0                   	// #0
  45bb48:	and	x1, x1, #0xfffffffffffffff0
  45bb4c:	sub	sp, sp, x1
  45bb50:	mov	x20, sp
  45bb54:	mov	x25, x22
  45bb58:	mov	w27, #0x2f                  	// #47
  45bb5c:	mov	w28, #0x2f2e                	// #12078
  45bb60:	ldrb	w0, [x25]
  45bb64:	cmp	w0, #0x3a
  45bb68:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  45bb6c:	b.ne	45bc80 <ferror@plt+0x586b0>  // b.any
  45bb70:	cmp	x22, x25
  45bb74:	b.ne	45bc38 <ferror@plt+0x58668>  // b.any
  45bb78:	strh	w28, [x20]
  45bb7c:	strb	wzr, [x20, #2]
  45bb80:	mov	x1, x21
  45bb84:	mov	x0, x20
  45bb88:	bl	402fe0 <strcat@plt>
  45bb8c:	mov	x0, x20
  45bb90:	mov	w1, #0x1                   	// #1
  45bb94:	bl	403190 <access@plt>
  45bb98:	cbnz	w0, 45bc74 <ferror@plt+0x586a4>
  45bb9c:	add	x1, x29, #0x80
  45bba0:	mov	x0, x20
  45bba4:	bl	476478 <_obstack_memory_used@@Base+0x1a088>
  45bba8:	tbnz	w0, #31, 45bc74 <ferror@plt+0x586a4>
  45bbac:	ldr	w0, [x29, #144]
  45bbb0:	and	w0, w0, #0xf000
  45bbb4:	cmp	w0, #0x8, lsl #12
  45bbb8:	b.ne	45bc74 <ferror@plt+0x586a4>  // b.any
  45bbbc:	mov	x21, x20
  45bbc0:	mov	x0, x21
  45bbc4:	cbz	w26, 45bc90 <ferror@plt+0x586c0>
  45bbc8:	bl	45b8d4 <ferror@plt+0x58304>
  45bbcc:	mov	x20, x0
  45bbd0:	cbnz	x0, 45bc98 <ferror@plt+0x586c8>
  45bbd4:	mov	x19, #0x0                   	// #0
  45bbd8:	mov	x20, #0x0                   	// #0
  45bbdc:	mov	x22, #0x0                   	// #0
  45bbe0:	mov	x21, #0x0                   	// #0
  45bbe4:	mov	x0, x21
  45bbe8:	bl	45b914 <ferror@plt+0x58344>
  45bbec:	mov	x0, x22
  45bbf0:	bl	45b914 <ferror@plt+0x58344>
  45bbf4:	mov	x0, x20
  45bbf8:	bl	45b914 <ferror@plt+0x58344>
  45bbfc:	mov	x0, x23
  45bc00:	bl	4032a0 <free@plt>
  45bc04:	mov	sp, x29
  45bc08:	mov	x0, x19
  45bc0c:	ldp	x19, x20, [sp, #16]
  45bc10:	ldp	x21, x22, [sp, #32]
  45bc14:	ldp	x23, x24, [sp, #48]
  45bc18:	ldp	x25, x26, [sp, #64]
  45bc1c:	ldp	x27, x28, [sp, #80]
  45bc20:	ldp	x29, x30, [sp], #256
  45bc24:	ret
  45bc28:	bl	402f40 <malloc@plt>
  45bc2c:	mov	x23, x0
  45bc30:	mov	x20, x0
  45bc34:	b	45bb54 <ferror@plt+0x58584>
  45bc38:	sub	x2, x25, x22
  45bc3c:	mov	x1, x22
  45bc40:	mov	x0, x20
  45bc44:	str	x2, [x29, #104]
  45bc48:	bl	402cd0 <memcpy@plt>
  45bc4c:	ldr	x2, [x29, #104]
  45bc50:	ldurb	w1, [x25, #-1]
  45bc54:	add	x0, x20, x2
  45bc58:	cmp	w1, #0x2f
  45bc5c:	b.eq	45bc6c <ferror@plt+0x5869c>  // b.none
  45bc60:	strb	w27, [x20, x2]
  45bc64:	strb	wzr, [x0, #1]
  45bc68:	b	45bb80 <ferror@plt+0x585b0>
  45bc6c:	strb	wzr, [x20, x2]
  45bc70:	b	45bb80 <ferror@plt+0x585b0>
  45bc74:	ldrb	w0, [x25]
  45bc78:	cbz	w0, 45bbc0 <ferror@plt+0x585f0>
  45bc7c:	add	x22, x25, #0x1
  45bc80:	add	x25, x25, #0x1
  45bc84:	b	45bb60 <ferror@plt+0x58590>
  45bc88:	mov	x23, #0x0                   	// #0
  45bc8c:	b	45bbc0 <ferror@plt+0x585f0>
  45bc90:	bl	4030e0 <strdup@plt>
  45bc94:	b	45bbcc <ferror@plt+0x585fc>
  45bc98:	add	x1, x29, #0x78
  45bc9c:	bl	45b950 <ferror@plt+0x58380>
  45bca0:	mov	x21, x0
  45bca4:	mov	x0, x20
  45bca8:	bl	4032a0 <free@plt>
  45bcac:	cbz	x21, 45bbd4 <ferror@plt+0x58604>
  45bcb0:	add	x1, x29, #0x7c
  45bcb4:	mov	x0, x24
  45bcb8:	bl	45b950 <ferror@plt+0x58380>
  45bcbc:	mov	x22, x0
  45bcc0:	cbz	x0, 45bdfc <ferror@plt+0x5882c>
  45bcc4:	ldp	w20, w25, [x29, #120]
  45bcc8:	sub	w20, w20, #0x1
  45bccc:	str	w20, [x29, #120]
  45bcd0:	cmp	w20, w25
  45bcd4:	b.eq	45bde0 <ferror@plt+0x58810>  // b.none
  45bcd8:	add	x1, x29, #0x80
  45bcdc:	mov	x0, x19
  45bce0:	bl	45b950 <ferror@plt+0x58380>
  45bce4:	mov	x20, x0
  45bce8:	cbz	x0, 45be60 <ferror@plt+0x58890>
  45bcec:	ldp	w19, w25, [x29, #124]
  45bcf0:	mov	x26, #0x0                   	// #0
  45bcf4:	cmp	w19, w25
  45bcf8:	csel	w27, w19, w25, le
  45bcfc:	mov	w24, w26
  45bd00:	cmp	w27, w26
  45bd04:	b.le	45bd1c <ferror@plt+0x5874c>
  45bd08:	ldr	x1, [x20, x26, lsl #3]
  45bd0c:	ldr	x0, [x22, x26, lsl #3]
  45bd10:	add	x26, x26, #0x1
  45bd14:	bl	403220 <strcmp@plt>
  45bd18:	cbz	w0, 45bcfc <ferror@plt+0x5872c>
  45bd1c:	cbz	w24, 45be60 <ferror@plt+0x58890>
  45bd20:	ldr	w28, [x29, #120]
  45bd24:	mov	x26, #0x0                   	// #0
  45bd28:	mov	w27, #0x0                   	// #0
  45bd2c:	cmp	w28, w26
  45bd30:	b.gt	45be08 <ferror@plt+0x58838>
  45bd34:	sub	w19, w19, w24
  45bd38:	sxtw	x26, w24
  45bd3c:	add	w19, w19, w19, lsl #1
  45bd40:	add	w19, w19, w27
  45bd44:	mov	x27, x26
  45bd48:	cmp	w25, w27
  45bd4c:	b.gt	45be1c <ferror@plt+0x5884c>
  45bd50:	add	w19, w19, #0x1
  45bd54:	sxtw	x0, w19
  45bd58:	bl	402f40 <malloc@plt>
  45bd5c:	mov	x19, x0
  45bd60:	cbz	x0, 45bbe4 <ferror@plt+0x58614>
  45bd64:	mov	x25, #0x0                   	// #0
  45bd68:	strb	wzr, [x0]
  45bd6c:	ldr	w0, [x29, #120]
  45bd70:	cmp	w0, w25
  45bd74:	b.gt	45be30 <ferror@plt+0x58860>
  45bd78:	mov	x0, x19
  45bd7c:	adrp	x25, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45bd80:	bl	402d50 <strlen@plt>
  45bd84:	add	x25, x25, #0x754
  45bd88:	add	x2, x19, x0
  45bd8c:	mov	w27, #0x2f                  	// #47
  45bd90:	ldr	w0, [x29, #124]
  45bd94:	cmp	w0, w24
  45bd98:	b.gt	45be44 <ferror@plt+0x58874>
  45bd9c:	strb	wzr, [x2]
  45bda0:	ldr	w0, [x29, #128]
  45bda4:	cmp	w0, w26
  45bda8:	b.le	45bbe4 <ferror@plt+0x58614>
  45bdac:	ldr	x1, [x20, x26, lsl #3]
  45bdb0:	mov	x0, x19
  45bdb4:	add	x26, x26, #0x1
  45bdb8:	bl	402fe0 <strcat@plt>
  45bdbc:	b	45bda0 <ferror@plt+0x587d0>
  45bdc0:	ldr	x1, [x22, x24, lsl #3]
  45bdc4:	ldr	x0, [x21, x24, lsl #3]
  45bdc8:	add	x24, x24, #0x1
  45bdcc:	bl	403220 <strcmp@plt>
  45bdd0:	cbz	w0, 45bde4 <ferror@plt+0x58814>
  45bdd4:	cmp	w20, #0x0
  45bdd8:	b.gt	45bcd8 <ferror@plt+0x58708>
  45bddc:	b	45bdfc <ferror@plt+0x5882c>
  45bde0:	mov	x24, #0x0                   	// #0
  45bde4:	cmp	w25, w24
  45bde8:	b.gt	45bdc0 <ferror@plt+0x587f0>
  45bdec:	cmp	w20, #0x0
  45bdf0:	b.le	45bdfc <ferror@plt+0x5882c>
  45bdf4:	cmp	w25, w24
  45bdf8:	b.ne	45bcd8 <ferror@plt+0x58708>  // b.any
  45bdfc:	mov	x19, #0x0                   	// #0
  45be00:	mov	x20, #0x0                   	// #0
  45be04:	b	45bbe4 <ferror@plt+0x58614>
  45be08:	ldr	x0, [x21, x26, lsl #3]
  45be0c:	add	x26, x26, #0x1
  45be10:	bl	402d50 <strlen@plt>
  45be14:	add	w27, w27, w0
  45be18:	b	45bd2c <ferror@plt+0x5875c>
  45be1c:	ldr	x0, [x20, x27, lsl #3]
  45be20:	add	x27, x27, #0x1
  45be24:	bl	402d50 <strlen@plt>
  45be28:	add	w19, w19, w0
  45be2c:	b	45bd48 <ferror@plt+0x58778>
  45be30:	ldr	x1, [x21, x25, lsl #3]
  45be34:	mov	x0, x19
  45be38:	add	x25, x25, #0x1
  45be3c:	bl	402fe0 <strcat@plt>
  45be40:	b	45bd6c <ferror@plt+0x5879c>
  45be44:	mov	x0, x2
  45be48:	mov	x1, x25
  45be4c:	bl	403360 <strcpy@plt>
  45be50:	add	w24, w24, #0x1
  45be54:	add	x2, x0, #0x3
  45be58:	sturb	w27, [x2, #-1]
  45be5c:	b	45bd90 <ferror@plt+0x587c0>
  45be60:	mov	x19, #0x0                   	// #0
  45be64:	b	45bbe4 <ferror@plt+0x58614>
  45be68:	mov	x19, #0x0                   	// #0
  45be6c:	b	45bc04 <ferror@plt+0x58634>
  45be70:	mov	w3, #0x1                   	// #1
  45be74:	b	45babc <ferror@plt+0x584ec>
  45be78:	mov	w3, #0x0                   	// #0
  45be7c:	b	45babc <ferror@plt+0x584ec>
  45be80:	cbnz	x1, 45beb8 <ferror@plt+0x588e8>
  45be84:	stp	x29, x30, [sp, #-32]!
  45be88:	mov	x29, sp
  45be8c:	str	x19, [sp, #16]
  45be90:	mov	x19, x0
  45be94:	cbz	x0, 45bea8 <ferror@plt+0x588d8>
  45be98:	mov	w1, #0x7                   	// #7
  45be9c:	bl	403190 <access@plt>
  45bea0:	cmp	w0, #0x0
  45bea4:	csel	x1, xzr, x19, ne  // ne = any
  45bea8:	mov	x0, x1
  45beac:	ldr	x19, [sp, #16]
  45beb0:	ldp	x29, x30, [sp], #32
  45beb4:	ret
  45beb8:	mov	x0, x1
  45bebc:	ret
  45bec0:	stp	x29, x30, [sp, #-48]!
  45bec4:	mov	x29, sp
  45bec8:	stp	x21, x22, [sp, #32]
  45becc:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45bed0:	ldr	x0, [x21, #1208]
  45bed4:	stp	x19, x20, [sp, #16]
  45bed8:	cbnz	x0, 45bfa0 <ferror@plt+0x589d0>
  45bedc:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45bee0:	add	x0, x0, #0xe40
  45bee4:	bl	4034f0 <getenv@plt>
  45bee8:	mov	x1, #0x0                   	// #0
  45beec:	bl	45be80 <ferror@plt+0x588b0>
  45bef0:	mov	x19, x0
  45bef4:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45bef8:	add	x0, x0, #0xe47
  45befc:	bl	4034f0 <getenv@plt>
  45bf00:	mov	x1, x19
  45bf04:	bl	45be80 <ferror@plt+0x588b0>
  45bf08:	mov	x19, x0
  45bf0c:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45bf10:	add	x0, x0, #0xe4b
  45bf14:	bl	4034f0 <getenv@plt>
  45bf18:	mov	x1, x19
  45bf1c:	bl	45be80 <ferror@plt+0x588b0>
  45bf20:	adrp	x19, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45bf24:	mov	x1, x0
  45bf28:	add	x19, x19, #0xe84
  45bf2c:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45bf30:	add	x0, x0, #0xe50
  45bf34:	bl	45be80 <ferror@plt+0x588b0>
  45bf38:	mov	x1, x0
  45bf3c:	mov	x0, x19
  45bf40:	bl	45be80 <ferror@plt+0x588b0>
  45bf44:	mov	x1, x0
  45bf48:	add	x0, x19, #0x9
  45bf4c:	bl	45be80 <ferror@plt+0x588b0>
  45bf50:	mov	x1, x0
  45bf54:	add	x0, x19, #0x12
  45bf58:	bl	45be80 <ferror@plt+0x588b0>
  45bf5c:	mov	x19, x0
  45bf60:	cbnz	x0, 45bf6c <ferror@plt+0x5899c>
  45bf64:	adrp	x19, 48a000 <_obstack_memory_used@@Base+0x2dc10>
  45bf68:	add	x19, x19, #0x66b
  45bf6c:	mov	x0, x19
  45bf70:	bl	402d50 <strlen@plt>
  45bf74:	mov	x20, x0
  45bf78:	add	w0, w0, #0x2
  45bf7c:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45bf80:	mov	x22, x0
  45bf84:	mov	x1, x19
  45bf88:	bl	403360 <strcpy@plt>
  45bf8c:	mov	w0, #0x2f                  	// #47
  45bf90:	str	x22, [x21, #1208]
  45bf94:	strb	w0, [x22, w20, uxtw]
  45bf98:	add	w20, w20, #0x1
  45bf9c:	strb	wzr, [x22, x20]
  45bfa0:	ldr	x0, [x21, #1208]
  45bfa4:	ldp	x19, x20, [sp, #16]
  45bfa8:	ldp	x21, x22, [sp, #32]
  45bfac:	ldp	x29, x30, [sp], #48
  45bfb0:	ret
  45bfb4:	stp	x29, x30, [sp, #-80]!
  45bfb8:	mov	x29, sp
  45bfbc:	stp	x19, x20, [sp, #16]
  45bfc0:	mov	x20, x0
  45bfc4:	mov	x19, x1
  45bfc8:	stp	x21, x22, [sp, #32]
  45bfcc:	stp	x23, x24, [sp, #48]
  45bfd0:	str	x25, [sp, #64]
  45bfd4:	bl	45bec0 <ferror@plt+0x588f0>
  45bfd8:	mov	x24, x0
  45bfdc:	cbnz	x20, 45bfe8 <ferror@plt+0x58a18>
  45bfe0:	adrp	x20, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  45bfe4:	add	x20, x20, #0x587
  45bfe8:	cbnz	x19, 45bff4 <ferror@plt+0x58a24>
  45bfec:	adrp	x19, 485000 <_obstack_memory_used@@Base+0x28c10>
  45bff0:	add	x19, x19, #0x122
  45bff4:	mov	x0, x24
  45bff8:	bl	402d50 <strlen@plt>
  45bffc:	mov	x21, x0
  45c000:	mov	x0, x20
  45c004:	bl	402d50 <strlen@plt>
  45c008:	mov	x23, x0
  45c00c:	mov	x0, x19
  45c010:	bl	402d50 <strlen@plt>
  45c014:	mov	x25, x0
  45c018:	sxtw	x23, w23
  45c01c:	sxtw	x22, w21
  45c020:	add	x0, x23, #0x7
  45c024:	sxtw	x1, w25
  45c028:	add	x21, x1, w21, sxtw
  45c02c:	add	x0, x0, x21
  45c030:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45c034:	mov	x21, x0
  45c038:	mov	x1, x24
  45c03c:	bl	403360 <strcpy@plt>
  45c040:	mov	x1, x20
  45c044:	add	x0, x21, x22
  45c048:	add	x22, x22, x23
  45c04c:	bl	403360 <strcpy@plt>
  45c050:	add	x0, x21, x22
  45c054:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c058:	add	x22, x22, #0x6
  45c05c:	add	x1, x1, #0xe55
  45c060:	bl	403360 <strcpy@plt>
  45c064:	mov	x1, x19
  45c068:	add	x0, x21, x22
  45c06c:	bl	403360 <strcpy@plt>
  45c070:	mov	w1, w25
  45c074:	mov	x0, x21
  45c078:	bl	402d10 <mkstemps@plt>
  45c07c:	cmn	w0, #0x1
  45c080:	b.ne	45c0b4 <ferror@plt+0x58ae4>  // b.any
  45c084:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45c088:	ldr	x19, [x0, #1264]
  45c08c:	bl	4034e0 <__errno_location@plt>
  45c090:	ldr	w0, [x0]
  45c094:	bl	403110 <strerror@plt>
  45c098:	mov	x3, x0
  45c09c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c0a0:	mov	x2, x24
  45c0a4:	add	x1, x1, #0xe5c
  45c0a8:	mov	x0, x19
  45c0ac:	bl	403590 <fprintf@plt>
  45c0b0:	bl	403180 <abort@plt>
  45c0b4:	bl	403120 <close@plt>
  45c0b8:	cbnz	w0, 45c0b0 <ferror@plt+0x58ae0>
  45c0bc:	mov	x0, x21
  45c0c0:	ldp	x19, x20, [sp, #16]
  45c0c4:	ldp	x21, x22, [sp, #32]
  45c0c8:	ldp	x23, x24, [sp, #48]
  45c0cc:	ldr	x25, [sp, #64]
  45c0d0:	ldp	x29, x30, [sp], #80
  45c0d4:	ret
  45c0d8:	mov	x1, x0
  45c0dc:	mov	x0, #0x0                   	// #0
  45c0e0:	b	45bfb4 <ferror@plt+0x589e4>
  45c0e4:	stp	x29, x30, [sp, #-16]!
  45c0e8:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45c0ec:	adrp	x2, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c0f0:	mov	x29, sp
  45c0f4:	ldr	x0, [x0, #1264]
  45c0f8:	add	x2, x2, #0xe9b
  45c0fc:	adrp	x1, 4c2000 <_obstack_memory_used@@Base+0x65c10>
  45c100:	add	x1, x1, #0x816
  45c104:	bl	403590 <fprintf@plt>
  45c108:	mov	w0, #0x1                   	// #1
  45c10c:	bl	402d80 <exit@plt>
  45c110:	mov	x2, x0
  45c114:	mov	x0, x1
  45c118:	ldrb	w4, [x2, #80]
  45c11c:	ldr	x3, [x2, #56]
  45c120:	tbz	w4, #0, 45c130 <ferror@plt+0x58b60>
  45c124:	ldr	x0, [x2, #72]
  45c128:	mov	x16, x3
  45c12c:	br	x16
  45c130:	mov	x16, x3
  45c134:	br	x16
  45c138:	stp	x29, x30, [sp, #-48]!
  45c13c:	cmp	x2, #0x0
  45c140:	mov	x29, sp
  45c144:	stp	x19, x20, [sp, #16]
  45c148:	mov	x20, x2
  45c14c:	mov	x2, #0x10                  	// #16
  45c150:	csel	x20, x20, x2, ne  // ne = any
  45c154:	cmp	x1, #0x0
  45c158:	stp	x21, x22, [sp, #32]
  45c15c:	mov	x2, #0xfe0                 	// #4064
  45c160:	sub	x22, x20, #0x1
  45c164:	csel	x1, x1, x2, ne  // ne = any
  45c168:	str	x1, [x0]
  45c16c:	str	x22, [x0, #48]
  45c170:	mov	x19, x0
  45c174:	bl	45c110 <ferror@plt+0x58b40>
  45c178:	mov	x21, x0
  45c17c:	cbnz	x0, 45c18c <ferror@plt+0x58bbc>
  45c180:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45c184:	ldr	x0, [x0, #1208]
  45c188:	blr	x0
  45c18c:	add	x2, x21, #0x10
  45c190:	neg	x20, x20
  45c194:	ldr	x0, [x19]
  45c198:	add	x2, x2, x22
  45c19c:	and	x20, x2, x20
  45c1a0:	stp	x21, x20, [x19, #8]
  45c1a4:	add	x0, x21, x0
  45c1a8:	str	x20, [x19, #24]
  45c1ac:	str	x0, [x21]
  45c1b0:	str	x0, [x19, #32]
  45c1b4:	ldrb	w0, [x19, #80]
  45c1b8:	str	xzr, [x21, #8]
  45c1bc:	and	w0, w0, #0xfffffff9
  45c1c0:	strb	w0, [x19, #80]
  45c1c4:	mov	w0, #0x1                   	// #1
  45c1c8:	ldp	x19, x20, [sp, #16]
  45c1cc:	ldp	x21, x22, [sp, #32]
  45c1d0:	ldp	x29, x30, [sp], #48
  45c1d4:	ret
  45c1d8:	mov	x2, x0
  45c1dc:	mov	x0, x1
  45c1e0:	ldrb	w4, [x2, #80]
  45c1e4:	ldr	x3, [x2, #64]
  45c1e8:	tbz	w4, #0, 45c1f8 <ferror@plt+0x58c28>
  45c1ec:	ldr	x0, [x2, #72]
  45c1f0:	mov	x16, x3
  45c1f4:	br	x16
  45c1f8:	mov	x16, x3
  45c1fc:	br	x16

000000000045c200 <_obstack_begin@@Base>:
  45c200:	stp	x3, x4, [x0, #56]
  45c204:	ldrb	w3, [x0, #80]
  45c208:	and	w3, w3, #0xfffffffe
  45c20c:	strb	w3, [x0, #80]
  45c210:	b	45c138 <ferror@plt+0x58b68>

000000000045c214 <_obstack_begin_1@@Base>:
  45c214:	stp	x3, x4, [x0, #56]
  45c218:	ldrb	w3, [x0, #80]
  45c21c:	str	x5, [x0, #72]
  45c220:	orr	w3, w3, #0x1
  45c224:	strb	w3, [x0, #80]
  45c228:	b	45c138 <ferror@plt+0x58b68>

000000000045c22c <_obstack_newchunk@@Base>:
  45c22c:	stp	x29, x30, [sp, #-64]!
  45c230:	mov	x29, sp
  45c234:	stp	x19, x20, [sp, #16]
  45c238:	mov	x19, x0
  45c23c:	ldp	x2, x20, [x0, #16]
  45c240:	stp	x21, x22, [sp, #32]
  45c244:	sub	x21, x20, x2
  45c248:	ldr	x20, [x0, #48]
  45c24c:	adds	x1, x21, x1
  45c250:	cset	x3, cs  // cs = hs, nlast
  45c254:	str	x23, [sp, #48]
  45c258:	adds	x1, x20, x1
  45c25c:	cset	x2, cs  // cs = hs, nlast
  45c260:	cmp	x3, #0x0
  45c264:	ccmp	x2, #0x0, #0x0, eq  // eq = none
  45c268:	ldr	x23, [x0, #8]
  45c26c:	b.eq	45c28c <_obstack_newchunk@@Base+0x60>  // b.none
  45c270:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45c274:	ldr	x0, [x0, #1208]
  45c278:	blr	x0
  45c27c:	str	xzr, [x19, #8]
  45c280:	mov	x0, #0x0                   	// #0
  45c284:	str	x23, [x0, #8]
  45c288:	brk	#0x3e8
  45c28c:	lsr	x20, x21, #3
  45c290:	add	x20, x20, #0x64
  45c294:	add	x2, x20, x1
  45c298:	ldr	x20, [x0]
  45c29c:	cmp	x20, x1
  45c2a0:	csel	x20, x20, x1, cs  // cs = hs, nlast
  45c2a4:	cmp	x20, x2
  45c2a8:	csel	x20, x20, x2, cs  // cs = hs, nlast
  45c2ac:	mov	x1, x20
  45c2b0:	bl	45c110 <ferror@plt+0x58b40>
  45c2b4:	mov	x22, x0
  45c2b8:	cbz	x0, 45c270 <_obstack_newchunk@@Base+0x44>
  45c2bc:	mov	x2, x0
  45c2c0:	str	x0, [x19, #8]
  45c2c4:	ldr	x1, [x19, #16]
  45c2c8:	str	x23, [x0, #8]
  45c2cc:	add	x20, x0, x20
  45c2d0:	str	x20, [x19, #32]
  45c2d4:	str	x20, [x2], #16
  45c2d8:	ldr	x20, [x19, #48]
  45c2dc:	add	x2, x2, x20
  45c2e0:	bic	x20, x2, x20
  45c2e4:	mov	x2, x21
  45c2e8:	mov	x0, x20
  45c2ec:	bl	402cd0 <memcpy@plt>
  45c2f0:	ldrb	w0, [x19, #80]
  45c2f4:	tbnz	w0, #1, 45c328 <_obstack_newchunk@@Base+0xfc>
  45c2f8:	ldr	x0, [x19, #48]
  45c2fc:	add	x1, x23, #0x10
  45c300:	add	x1, x1, x0
  45c304:	bic	x0, x1, x0
  45c308:	ldr	x1, [x19, #16]
  45c30c:	cmp	x1, x0
  45c310:	b.ne	45c328 <_obstack_newchunk@@Base+0xfc>  // b.any
  45c314:	ldr	x0, [x23, #8]
  45c318:	str	x0, [x22, #8]
  45c31c:	mov	x1, x23
  45c320:	mov	x0, x19
  45c324:	bl	45c1d8 <ferror@plt+0x58c08>
  45c328:	ldrb	w0, [x19, #80]
  45c32c:	ldr	x23, [sp, #48]
  45c330:	and	w0, w0, #0xfffffffd
  45c334:	str	x20, [x19, #16]
  45c338:	add	x20, x20, x21
  45c33c:	strb	w0, [x19, #80]
  45c340:	ldp	x21, x22, [sp, #32]
  45c344:	str	x20, [x19, #24]
  45c348:	ldp	x19, x20, [sp, #16]
  45c34c:	ldp	x29, x30, [sp], #64
  45c350:	ret

000000000045c354 <_obstack_allocated_p@@Base>:
  45c354:	ldr	x0, [x0, #8]
  45c358:	cbz	x0, 45c370 <_obstack_allocated_p@@Base+0x1c>
  45c35c:	cmp	x0, x1
  45c360:	b.cs	45c354 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  45c364:	ldr	x2, [x0]
  45c368:	cmp	x2, x1
  45c36c:	b.cc	45c354 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  45c370:	cmp	x0, #0x0
  45c374:	cset	w0, ne  // ne = any
  45c378:	ret

000000000045c37c <_obstack_free@@Base>:
  45c37c:	stp	x29, x30, [sp, #-48]!
  45c380:	mov	x29, sp
  45c384:	stp	x19, x20, [sp, #16]
  45c388:	mov	x19, x0
  45c38c:	mov	x20, x1
  45c390:	ldr	x1, [x0, #8]
  45c394:	str	x21, [sp, #32]
  45c398:	cbz	x1, 45c3e8 <_obstack_free@@Base+0x6c>
  45c39c:	cmp	x1, x20
  45c3a0:	b.cs	45c3c8 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  45c3a4:	ldr	x0, [x1]
  45c3a8:	cmp	x0, x20
  45c3ac:	b.cc	45c3c8 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  45c3b0:	stp	x1, x20, [x19, #8]
  45c3b4:	stp	x20, x0, [x19, #24]
  45c3b8:	ldp	x19, x20, [sp, #16]
  45c3bc:	ldr	x21, [sp, #32]
  45c3c0:	ldp	x29, x30, [sp], #48
  45c3c4:	ret
  45c3c8:	mov	x0, x19
  45c3cc:	ldr	x21, [x1, #8]
  45c3d0:	bl	45c1d8 <ferror@plt+0x58c08>
  45c3d4:	ldrb	w0, [x19, #80]
  45c3d8:	mov	x1, x21
  45c3dc:	orr	w0, w0, #0x2
  45c3e0:	strb	w0, [x19, #80]
  45c3e4:	b	45c398 <_obstack_free@@Base+0x1c>
  45c3e8:	cbz	x20, 45c3b8 <_obstack_free@@Base+0x3c>
  45c3ec:	bl	403180 <abort@plt>

000000000045c3f0 <_obstack_memory_used@@Base>:
  45c3f0:	ldr	x1, [x0, #8]
  45c3f4:	mov	x0, #0x0                   	// #0
  45c3f8:	cbnz	x1, 45c400 <_obstack_memory_used@@Base+0x10>
  45c3fc:	ret
  45c400:	ldr	x2, [x1]
  45c404:	sub	x2, x2, x1
  45c408:	add	x0, x0, x2
  45c40c:	ldr	x1, [x1, #8]
  45c410:	b	45c3f8 <_obstack_memory_used@@Base+0x8>
  45c414:	stp	x29, x30, [sp, #-80]!
  45c418:	mov	x29, sp
  45c41c:	stp	x19, x20, [sp, #16]
  45c420:	mov	x19, x0
  45c424:	stp	x21, x22, [sp, #32]
  45c428:	stp	x23, x24, [sp, #48]
  45c42c:	mov	w23, w1
  45c430:	ldr	w1, [x0, #48]
  45c434:	ldr	w0, [x0, #80]
  45c438:	str	x25, [sp, #64]
  45c43c:	cmp	w0, w1
  45c440:	b.eq	45c4f8 <_obstack_memory_used@@Base+0x108>  // b.none
  45c444:	ldr	x0, [x19, #64]
  45c448:	mov	x24, x2
  45c44c:	mov	x25, x3
  45c450:	sbfiz	x1, x1, #2, #32
  45c454:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  45c458:	str	x0, [x19, #64]
  45c45c:	ldr	w0, [x19]
  45c460:	tbz	w0, #0, 45c478 <_obstack_memory_used@@Base+0x88>
  45c464:	ldr	x0, [x19, #72]
  45c468:	ldrsw	x1, [x19, #48]
  45c46c:	lsl	x1, x1, #5
  45c470:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  45c474:	str	x0, [x19, #72]
  45c478:	ldr	w20, [x19, #80]
  45c47c:	mov	w22, #0x1                   	// #1
  45c480:	sbfiz	x21, x20, #2, #32
  45c484:	ldr	w0, [x19, #48]
  45c488:	cmp	w20, w0
  45c48c:	b.lt	45c4b0 <_obstack_memory_used@@Base+0xc0>  // b.tstop
  45c490:	str	w20, [x19, #80]
  45c494:	mov	w0, w22
  45c498:	ldp	x19, x20, [sp, #16]
  45c49c:	ldp	x21, x22, [sp, #32]
  45c4a0:	ldp	x23, x24, [sp, #48]
  45c4a4:	ldr	x25, [sp, #64]
  45c4a8:	ldp	x29, x30, [sp], #80
  45c4ac:	ret
  45c4b0:	ldr	x0, [x19, #128]
  45c4b4:	ldp	x2, x3, [x19, #64]
  45c4b8:	ldr	x7, [x0, #32]
  45c4bc:	ldr	x0, [x19, #56]
  45c4c0:	add	x2, x2, x21
  45c4c4:	ldr	w1, [x0, x21]
  45c4c8:	cbz	x3, 45c4d0 <_obstack_memory_used@@Base+0xe0>
  45c4cc:	add	x3, x3, x21, lsl #3
  45c4d0:	mov	x6, x25
  45c4d4:	mov	x5, x24
  45c4d8:	mov	w4, w23
  45c4dc:	mov	x0, x19
  45c4e0:	blr	x7
  45c4e4:	cmp	w0, #0x0
  45c4e8:	csel	w22, w22, wzr, ge  // ge = tcont
  45c4ec:	add	w20, w20, #0x1
  45c4f0:	add	x21, x21, #0x4
  45c4f4:	b	45c484 <_obstack_memory_used@@Base+0x94>
  45c4f8:	mov	w22, #0x1                   	// #1
  45c4fc:	b	45c494 <_obstack_memory_used@@Base+0xa4>
  45c500:	stp	x29, x30, [sp, #-48]!
  45c504:	mov	x29, sp
  45c508:	stp	x19, x20, [sp, #16]
  45c50c:	mov	x20, x2
  45c510:	str	x21, [sp, #32]
  45c514:	cbnz	x2, 45c5b8 <_obstack_memory_used@@Base+0x1c8>
  45c518:	ldr	x19, [x0]
  45c51c:	cbnz	x19, 45c534 <_obstack_memory_used@@Base+0x144>
  45c520:	mov	x0, #0x0                   	// #0
  45c524:	ldp	x19, x20, [sp, #16]
  45c528:	ldr	x21, [sp, #32]
  45c52c:	ldp	x29, x30, [sp], #48
  45c530:	b	45c0d8 <ferror@plt+0x58b08>
  45c534:	mov	x0, x19
  45c538:	adrp	x21, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c53c:	bl	402d50 <strlen@plt>
  45c540:	add	x21, x21, #0xe55
  45c544:	cmp	w0, #0x5
  45c548:	b.le	45c598 <_obstack_memory_used@@Base+0x1a8>
  45c54c:	sxtw	x0, w0
  45c550:	mov	x1, x21
  45c554:	sub	x0, x0, #0x6
  45c558:	add	x0, x19, x0
  45c55c:	bl	403220 <strcmp@plt>
  45c560:	cbnz	w0, 45c598 <_obstack_memory_used@@Base+0x1a8>
  45c564:	mov	x0, x19
  45c568:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  45c56c:	mov	x19, x0
  45c570:	mov	w1, #0x0                   	// #0
  45c574:	bl	402d10 <mkstemps@plt>
  45c578:	tbz	w0, #31, 45c5ac <_obstack_memory_used@@Base+0x1bc>
  45c57c:	mov	x0, x19
  45c580:	bl	4032a0 <free@plt>
  45c584:	mov	x0, x20
  45c588:	ldp	x19, x20, [sp, #16]
  45c58c:	ldr	x21, [sp, #32]
  45c590:	ldp	x29, x30, [sp], #48
  45c594:	ret
  45c598:	mov	x1, x21
  45c59c:	mov	x0, x19
  45c5a0:	mov	x2, #0x0                   	// #0
  45c5a4:	bl	45a668 <ferror@plt+0x57098>
  45c5a8:	b	45c56c <_obstack_memory_used@@Base+0x17c>
  45c5ac:	mov	x20, x19
  45c5b0:	bl	403120 <close@plt>
  45c5b4:	b	45c584 <_obstack_memory_used@@Base+0x194>
  45c5b8:	tbz	w1, #2, 45c584 <_obstack_memory_used@@Base+0x194>
  45c5bc:	ldr	x0, [x0]
  45c5c0:	cbnz	x0, 45c5cc <_obstack_memory_used@@Base+0x1dc>
  45c5c4:	mov	x0, x2
  45c5c8:	b	45c524 <_obstack_memory_used@@Base+0x134>
  45c5cc:	mov	x1, x20
  45c5d0:	mov	x2, #0x0                   	// #0
  45c5d4:	ldp	x19, x20, [sp, #16]
  45c5d8:	ldr	x21, [sp, #32]
  45c5dc:	ldp	x29, x30, [sp], #48
  45c5e0:	b	45a668 <ferror@plt+0x57098>
  45c5e4:	stp	x29, x30, [sp, #-48]!
  45c5e8:	mov	x29, sp
  45c5ec:	stp	x19, x20, [sp, #16]
  45c5f0:	mov	x20, x2
  45c5f4:	mov	x19, x3
  45c5f8:	stp	x21, x22, [sp, #32]
  45c5fc:	mov	x21, x1
  45c600:	mov	w22, w0
  45c604:	mov	x0, #0x90                  	// #144
  45c608:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45c60c:	mov	x1, #0xffffffff00000000    	// #-4294967296
  45c610:	str	w22, [x0]
  45c614:	stp	x21, x20, [x0, #8]
  45c618:	str	wzr, [x0, #24]
  45c61c:	stp	xzr, x1, [x0, #32]
  45c620:	str	wzr, [x0, #48]
  45c624:	stp	xzr, xzr, [x0, #56]
  45c628:	str	xzr, [x0, #72]
  45c62c:	str	wzr, [x0, #80]
  45c630:	stp	xzr, xzr, [x0, #88]
  45c634:	str	xzr, [x0, #104]
  45c638:	str	wzr, [x0, #112]
  45c63c:	stp	xzr, x19, [x0, #120]
  45c640:	str	xzr, [x0, #136]
  45c644:	ldp	x19, x20, [sp, #16]
  45c648:	ldp	x21, x22, [sp, #32]
  45c64c:	ldp	x29, x30, [sp], #48
  45c650:	ret
  45c654:	sub	sp, sp, #0xa0
  45c658:	stp	x29, x30, [sp, #32]
  45c65c:	add	x29, sp, #0x20
  45c660:	stp	x25, x26, [sp, #96]
  45c664:	mov	x25, x0
  45c668:	ldr	x0, [x0, #88]
  45c66c:	stp	x19, x20, [sp, #48]
  45c670:	mov	w19, w1
  45c674:	stp	x21, x22, [sp, #64]
  45c678:	mov	x21, x5
  45c67c:	mov	x22, x7
  45c680:	stp	x23, x24, [sp, #80]
  45c684:	mov	x24, x6
  45c688:	stp	x27, x28, [sp, #112]
  45c68c:	mov	x27, x4
  45c690:	stp	x2, x3, [sp, #128]
  45c694:	cbz	x0, 45c714 <_obstack_memory_used@@Base+0x324>
  45c698:	bl	402ee0 <fclose@plt>
  45c69c:	mov	w28, w0
  45c6a0:	cmn	w0, #0x1
  45c6a4:	b.ne	45c710 <_obstack_memory_used@@Base+0x320>  // b.any
  45c6a8:	mov	w24, w28
  45c6ac:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c6b0:	mov	w20, #0x0                   	// #0
  45c6b4:	add	x0, x0, #0xeac
  45c6b8:	str	x0, [sp, #144]
  45c6bc:	cmp	w28, #0x0
  45c6c0:	ccmp	w28, #0x1, #0x4, ge  // ge = tcont
  45c6c4:	b.eq	45c6dc <_obstack_memory_used@@Base+0x2ec>  // b.none
  45c6c8:	ldr	x0, [x25, #128]
  45c6cc:	mov	w1, w28
  45c6d0:	ldr	x2, [x0, #24]
  45c6d4:	mov	x0, x25
  45c6d8:	blr	x2
  45c6dc:	cmp	w24, #0x0
  45c6e0:	ccmp	w24, #0x2, #0x4, ge  // ge = tcont
  45c6e4:	b.eq	45c6fc <_obstack_memory_used@@Base+0x30c>  // b.none
  45c6e8:	ldr	x0, [x25, #128]
  45c6ec:	mov	w1, w24
  45c6f0:	ldr	x2, [x0, #24]
  45c6f4:	mov	x0, x25
  45c6f8:	blr	x2
  45c6fc:	cbz	w20, 45c708 <_obstack_memory_used@@Base+0x318>
  45c700:	mov	x0, x21
  45c704:	bl	4032a0 <free@plt>
  45c708:	ldr	x0, [sp, #144]
  45c70c:	b	45ca48 <_obstack_memory_used@@Base+0x658>
  45c710:	str	xzr, [x25, #88]
  45c714:	ldr	x0, [x25, #32]
  45c718:	cbz	x0, 45c7cc <_obstack_memory_used@@Base+0x3dc>
  45c71c:	mov	x3, x22
  45c720:	add	x2, sp, #0x90
  45c724:	mov	x0, x25
  45c728:	mov	w1, #0x0                   	// #0
  45c72c:	bl	45c414 <_obstack_memory_used@@Base+0x24>
  45c730:	mov	w20, w0
  45c734:	cbz	w0, 45c774 <_obstack_memory_used@@Base+0x384>
  45c738:	ldr	x0, [x25, #128]
  45c73c:	ubfx	x2, x19, #4, #1
  45c740:	ldr	x1, [x25, #32]
  45c744:	ldr	x3, [x0]
  45c748:	mov	x0, x25
  45c74c:	blr	x3
  45c750:	mov	w23, w0
  45c754:	tbz	w0, #31, 45c780 <_obstack_memory_used@@Base+0x390>
  45c758:	bl	4034e0 <__errno_location@plt>
  45c75c:	ldr	w0, [x0]
  45c760:	str	w0, [x22]
  45c764:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c768:	add	x0, x0, #0xec8
  45c76c:	mov	w20, #0x0                   	// #0
  45c770:	str	x0, [sp, #144]
  45c774:	mov	w24, #0xffffffff            	// #-1
  45c778:	mov	w28, w24
  45c77c:	b	45c6bc <_obstack_memory_used@@Base+0x2cc>
  45c780:	ldr	w0, [x25, #40]
  45c784:	cbz	w0, 45c794 <_obstack_memory_used@@Base+0x3a4>
  45c788:	ldr	x0, [x25, #32]
  45c78c:	bl	4032a0 <free@plt>
  45c790:	str	wzr, [x25, #40]
  45c794:	str	xzr, [x25, #32]
  45c798:	and	w28, w19, #0x1
  45c79c:	tbz	w19, #0, 45c83c <_obstack_memory_used@@Base+0x44c>
  45c7a0:	cbz	x21, 45c7e4 <_obstack_memory_used@@Base+0x3f4>
  45c7a4:	and	w20, w19, #0x4
  45c7a8:	tbz	w19, #2, 45c7c4 <_obstack_memory_used@@Base+0x3d4>
  45c7ac:	ldr	x0, [x25, #16]
  45c7b0:	mov	x1, x21
  45c7b4:	mov	x2, #0x0                   	// #0
  45c7b8:	mov	w20, w28
  45c7bc:	bl	45a668 <ferror@plt+0x57098>
  45c7c0:	mov	x21, x0
  45c7c4:	mov	w28, #0xffffffff            	// #-1
  45c7c8:	b	45c7e8 <_obstack_memory_used@@Base+0x3f8>
  45c7cc:	ldr	w23, [x25, #24]
  45c7d0:	tbz	w23, #31, 45c798 <_obstack_memory_used@@Base+0x3a8>
  45c7d4:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c7d8:	add	x0, x0, #0xedc
  45c7dc:	str	wzr, [x22]
  45c7e0:	b	45c76c <_obstack_memory_used@@Base+0x37c>
  45c7e4:	mov	w20, #0x0                   	// #0
  45c7e8:	mov	w0, #0xffffffff            	// #-1
  45c7ec:	str	w0, [x25, #24]
  45c7f0:	tbnz	w28, #31, 45c8a4 <_obstack_memory_used@@Base+0x4b4>
  45c7f4:	cbz	w20, 45c800 <_obstack_memory_used@@Base+0x410>
  45c7f8:	mov	x0, x21
  45c7fc:	bl	4032a0 <free@plt>
  45c800:	cbz	x24, 45c974 <_obstack_memory_used@@Base+0x584>
  45c804:	tbz	w19, #6, 45c974 <_obstack_memory_used@@Base+0x584>
  45c808:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c80c:	add	x0, x0, #0xf31
  45c810:	str	wzr, [x22]
  45c814:	mov	w24, #0xffffffff            	// #-1
  45c818:	str	x0, [sp, #144]
  45c81c:	mov	w20, #0x0                   	// #0
  45c820:	cbz	w23, 45c6bc <_obstack_memory_used@@Base+0x2cc>
  45c824:	ldr	x0, [x25, #128]
  45c828:	mov	w1, w23
  45c82c:	ldr	x2, [x0, #24]
  45c830:	mov	x0, x25
  45c834:	blr	x2
  45c838:	b	45c6bc <_obstack_memory_used@@Base+0x2cc>
  45c83c:	ldr	w0, [x25]
  45c840:	and	w20, w0, #0x2
  45c844:	tbnz	w0, #1, 45c928 <_obstack_memory_used@@Base+0x538>
  45c848:	mov	x2, x21
  45c84c:	mov	w1, w19
  45c850:	add	x0, x25, #0x10
  45c854:	bl	45c500 <_obstack_memory_used@@Base+0x110>
  45c858:	mov	x26, x0
  45c85c:	cbnz	x0, 45c884 <_obstack_memory_used@@Base+0x494>
  45c860:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c864:	mov	x21, #0x0                   	// #0
  45c868:	add	x0, x0, #0xef6
  45c86c:	str	wzr, [x22]
  45c870:	str	x0, [sp, #144]
  45c874:	mov	w28, #0xffffffff            	// #-1
  45c878:	mov	w24, #0xffffffff            	// #-1
  45c87c:	cbnz	w23, 45c824 <_obstack_memory_used@@Base+0x434>
  45c880:	b	45c6dc <_obstack_memory_used@@Base+0x2ec>
  45c884:	ldr	w0, [x25]
  45c888:	and	w28, w0, #0x4
  45c88c:	tbz	w0, #2, 45c8e4 <_obstack_memory_used@@Base+0x4f4>
  45c890:	cmp	x21, x26
  45c894:	cset	w28, ne  // ne = any
  45c898:	mov	x21, x26
  45c89c:	str	x26, [x25, #32]
  45c8a0:	str	w28, [x25, #40]
  45c8a4:	ldr	x0, [x25, #128]
  45c8a8:	ubfx	x3, x19, #8, #1
  45c8ac:	ubfx	x2, x19, #5, #1
  45c8b0:	mov	x1, x21
  45c8b4:	ldr	x4, [x0, #8]
  45c8b8:	mov	x0, x25
  45c8bc:	blr	x4
  45c8c0:	mov	w28, w0
  45c8c4:	tbz	w0, #31, 45c7f4 <_obstack_memory_used@@Base+0x404>
  45c8c8:	bl	4034e0 <__errno_location@plt>
  45c8cc:	ldr	w0, [x0]
  45c8d0:	str	w0, [x22]
  45c8d4:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c8d8:	add	x0, x0, #0xf16
  45c8dc:	str	x0, [sp, #144]
  45c8e0:	b	45c878 <_obstack_memory_used@@Base+0x488>
  45c8e4:	ldr	w1, [x25, #112]
  45c8e8:	ldr	x0, [x25, #120]
  45c8ec:	add	w1, w1, #0x1
  45c8f0:	str	w1, [x25, #112]
  45c8f4:	sbfiz	x1, x1, #3, #32
  45c8f8:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  45c8fc:	str	x0, [x25, #120]
  45c900:	cmp	x21, x26
  45c904:	mov	x0, x26
  45c908:	b.ne	45c910 <_obstack_memory_used@@Base+0x520>  // b.any
  45c90c:	bl	45d7e0 <_obstack_memory_used@@Base+0x13f0>
  45c910:	ldr	w1, [x25, #112]
  45c914:	mov	x3, #0xfffffffffffffff8    	// #-8
  45c918:	add	x1, x3, w1, sxtw #3
  45c91c:	ldr	x3, [x25, #120]
  45c920:	str	x0, [x3, x1]
  45c924:	b	45c898 <_obstack_memory_used@@Base+0x4a8>
  45c928:	ldr	x0, [x25, #128]
  45c92c:	ubfx	x2, x19, #5, #1
  45c930:	add	x1, sp, #0x98
  45c934:	ldr	x3, [x0, #40]
  45c938:	mov	x0, x25
  45c93c:	blr	x3
  45c940:	tbz	w0, #31, 45c964 <_obstack_memory_used@@Base+0x574>
  45c944:	bl	4034e0 <__errno_location@plt>
  45c948:	ldr	w0, [x0]
  45c94c:	mov	w20, #0x0                   	// #0
  45c950:	str	w0, [x22]
  45c954:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2bc10>
  45c958:	add	x0, x0, #0x54e
  45c95c:	str	x0, [sp, #144]
  45c960:	b	45c874 <_obstack_memory_used@@Base+0x484>
  45c964:	ldp	w0, w28, [sp, #152]
  45c968:	mov	w20, #0x0                   	// #0
  45c96c:	str	w0, [x25, #24]
  45c970:	b	45c7f0 <_obstack_memory_used@@Base+0x400>
  45c974:	ldr	w20, [x25, #44]
  45c978:	cmn	w20, #0x1
  45c97c:	b.eq	45c990 <_obstack_memory_used@@Base+0x5a0>  // b.none
  45c980:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45c984:	add	x0, x0, #0xf60
  45c988:	str	wzr, [x22]
  45c98c:	b	45c814 <_obstack_memory_used@@Base+0x424>
  45c990:	ldr	x0, [x25, #128]
  45c994:	cbnz	x24, 45ca68 <_obstack_memory_used@@Base+0x678>
  45c998:	tbz	w19, #6, 45caa4 <_obstack_memory_used@@Base+0x6b4>
  45c99c:	ldr	x3, [x0, #40]
  45c9a0:	ubfx	x2, x19, #7, #1
  45c9a4:	add	x1, sp, #0x98
  45c9a8:	mov	x0, x25
  45c9ac:	blr	x3
  45c9b0:	tbz	w0, #31, 45c9cc <_obstack_memory_used@@Base+0x5dc>
  45c9b4:	bl	4034e0 <__errno_location@plt>
  45c9b8:	ldr	w0, [x0]
  45c9bc:	str	w0, [x22]
  45c9c0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2bc10>
  45c9c4:	add	x0, x0, #0x54e
  45c9c8:	b	45c814 <_obstack_memory_used@@Base+0x424>
  45c9cc:	ldp	w0, w24, [sp, #152]
  45c9d0:	str	w0, [x25, #44]
  45c9d4:	ldr	w0, [x25]
  45c9d8:	tbz	w0, #1, 45c9e0 <_obstack_memory_used@@Base+0x5f0>
  45c9dc:	ldr	w20, [x25, #24]
  45c9e0:	ldr	x0, [x25, #128]
  45c9e4:	add	x1, sp, #0x90
  45c9e8:	str	w20, [sp]
  45c9ec:	mov	w7, w24
  45c9f0:	stp	x1, x22, [sp, #8]
  45c9f4:	mov	w6, w28
  45c9f8:	mov	w1, w19
  45c9fc:	ldp	x2, x3, [sp, #128]
  45ca00:	mov	w5, w23
  45ca04:	ldr	x9, [x0, #16]
  45ca08:	mov	x4, x27
  45ca0c:	mov	x0, x25
  45ca10:	blr	x9
  45ca14:	mov	w19, w0
  45ca18:	tbnz	w0, #31, 45c81c <_obstack_memory_used@@Base+0x42c>
  45ca1c:	ldr	w1, [x25, #48]
  45ca20:	ldr	x0, [x25, #56]
  45ca24:	add	w1, w1, #0x1
  45ca28:	str	w1, [x25, #48]
  45ca2c:	sbfiz	x1, x1, #2, #32
  45ca30:	bl	45d740 <_obstack_memory_used@@Base+0x1350>
  45ca34:	str	x0, [x25, #56]
  45ca38:	ldr	w1, [x25, #48]
  45ca3c:	add	x0, x0, w1, sxtw #2
  45ca40:	stur	w19, [x0, #-4]
  45ca44:	mov	x0, #0x0                   	// #0
  45ca48:	ldp	x29, x30, [sp, #32]
  45ca4c:	ldp	x19, x20, [sp, #48]
  45ca50:	ldp	x21, x22, [sp, #64]
  45ca54:	ldp	x23, x24, [sp, #80]
  45ca58:	ldp	x25, x26, [sp, #96]
  45ca5c:	ldp	x27, x28, [sp, #112]
  45ca60:	add	sp, sp, #0xa0
  45ca64:	ret
  45ca68:	ldr	x4, [x0, #8]
  45ca6c:	mov	x1, x24
  45ca70:	ubfx	x3, x19, #9, #1
  45ca74:	ubfx	x2, x19, #7, #1
  45ca78:	mov	x0, x25
  45ca7c:	blr	x4
  45ca80:	mov	w24, w0
  45ca84:	tbz	w0, #31, 45c9d4 <_obstack_memory_used@@Base+0x5e4>
  45ca88:	bl	4034e0 <__errno_location@plt>
  45ca8c:	ldr	w0, [x0]
  45ca90:	str	w0, [x22]
  45ca94:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45ca98:	add	x0, x0, #0xf92
  45ca9c:	str	x0, [sp, #144]
  45caa0:	b	45c81c <_obstack_memory_used@@Base+0x42c>
  45caa4:	mov	w24, #0x2                   	// #2
  45caa8:	b	45c9d4 <_obstack_memory_used@@Base+0x5e4>
  45caac:	mov	x7, x6
  45cab0:	mov	x6, x5
  45cab4:	mov	x5, x4
  45cab8:	mov	x4, #0x0                   	// #0
  45cabc:	b	45c654 <_obstack_memory_used@@Base+0x264>
  45cac0:	stp	x29, x30, [sp, #-48]!
  45cac4:	mov	x29, sp
  45cac8:	stp	x19, x20, [sp, #16]
  45cacc:	mov	x19, x0
  45cad0:	ldr	w0, [x0, #48]
  45cad4:	stp	x21, x22, [sp, #32]
  45cad8:	cbnz	w0, 45caf0 <_obstack_memory_used@@Base+0x700>
  45cadc:	ldr	w0, [x19, #24]
  45cae0:	cmp	w0, #0x0
  45cae4:	b.gt	45caf0 <_obstack_memory_used@@Base+0x700>
  45cae8:	ldr	x0, [x19, #32]
  45caec:	cbz	x0, 45cb04 <_obstack_memory_used@@Base+0x714>
  45caf0:	bl	4034e0 <__errno_location@plt>
  45caf4:	mov	w1, #0x16                  	// #22
  45caf8:	str	w1, [x0]
  45cafc:	mov	x20, #0x0                   	// #0
  45cb00:	b	45cb48 <_obstack_memory_used@@Base+0x758>
  45cb04:	mov	w20, w1
  45cb08:	mov	x22, x2
  45cb0c:	add	x0, x19, #0x10
  45cb10:	bl	45c500 <_obstack_memory_used@@Base+0x110>
  45cb14:	mov	x21, x0
  45cb18:	cbz	x0, 45cafc <_obstack_memory_used@@Base+0x70c>
  45cb1c:	tst	x20, #0x20
  45cb20:	adrp	x2, 49d000 <_obstack_memory_used@@Base+0x40c10>
  45cb24:	add	x2, x2, #0x935
  45cb28:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  45cb2c:	add	x1, x1, #0x904
  45cb30:	csel	x1, x1, x2, ne  // ne = any
  45cb34:	bl	402f20 <fopen@plt>
  45cb38:	mov	x20, x0
  45cb3c:	cbnz	x0, 45cb5c <_obstack_memory_used@@Base+0x76c>
  45cb40:	mov	x0, x21
  45cb44:	bl	4032a0 <free@plt>
  45cb48:	mov	x0, x20
  45cb4c:	ldp	x19, x20, [sp, #16]
  45cb50:	ldp	x21, x22, [sp, #32]
  45cb54:	ldp	x29, x30, [sp], #48
  45cb58:	ret
  45cb5c:	cmp	x22, x21
  45cb60:	str	x21, [x19, #32]
  45cb64:	cset	w0, ne  // ne = any
  45cb68:	str	w0, [x19, #40]
  45cb6c:	str	x20, [x19, #88]
  45cb70:	b	45cb48 <_obstack_memory_used@@Base+0x758>
  45cb74:	stp	x29, x30, [sp, #-64]!
  45cb78:	mov	x29, sp
  45cb7c:	ldr	w2, [x0, #48]
  45cb80:	stp	x19, x20, [sp, #16]
  45cb84:	cmp	w2, #0x0
  45cb88:	stp	x21, x22, [sp, #32]
  45cb8c:	b.gt	45cc48 <_obstack_memory_used@@Base+0x858>
  45cb90:	ldr	w2, [x0]
  45cb94:	mov	x19, x0
  45cb98:	tbz	w2, #1, 45cc48 <_obstack_memory_used@@Base+0x858>
  45cb9c:	ldr	w2, [x0, #24]
  45cba0:	cmp	w2, #0x0
  45cba4:	b.gt	45cc48 <_obstack_memory_used@@Base+0x858>
  45cba8:	ldr	x20, [x0, #32]
  45cbac:	cbnz	x20, 45cc48 <_obstack_memory_used@@Base+0x858>
  45cbb0:	cmp	w1, #0x0
  45cbb4:	ldr	x1, [x0, #128]
  45cbb8:	cset	w21, ne  // ne = any
  45cbbc:	mov	w2, w21
  45cbc0:	ldr	x3, [x1, #40]
  45cbc4:	add	x1, sp, #0x38
  45cbc8:	blr	x3
  45cbcc:	tbnz	w0, #31, 45cc28 <_obstack_memory_used@@Base+0x838>
  45cbd0:	ldr	x0, [x19, #128]
  45cbd4:	mov	w2, w21
  45cbd8:	ldr	w1, [sp, #60]
  45cbdc:	ldr	x3, [x0, #56]
  45cbe0:	mov	x0, x19
  45cbe4:	blr	x3
  45cbe8:	mov	x20, x0
  45cbec:	cbnz	x0, 45cc3c <_obstack_memory_used@@Base+0x84c>
  45cbf0:	bl	4034e0 <__errno_location@plt>
  45cbf4:	ldr	w22, [x0]
  45cbf8:	mov	x21, x0
  45cbfc:	ldr	w1, [sp, #56]
  45cc00:	ldr	x0, [x19, #128]
  45cc04:	ldr	x2, [x0, #24]
  45cc08:	mov	x0, x19
  45cc0c:	blr	x2
  45cc10:	ldr	x0, [x19, #128]
  45cc14:	ldr	w1, [sp, #60]
  45cc18:	ldr	x2, [x0, #24]
  45cc1c:	mov	x0, x19
  45cc20:	blr	x2
  45cc24:	str	w22, [x21]
  45cc28:	mov	x0, x20
  45cc2c:	ldp	x19, x20, [sp, #16]
  45cc30:	ldp	x21, x22, [sp, #32]
  45cc34:	ldp	x29, x30, [sp], #64
  45cc38:	ret
  45cc3c:	ldr	w0, [sp, #56]
  45cc40:	str	w0, [x19, #24]
  45cc44:	b	45cc28 <_obstack_memory_used@@Base+0x838>
  45cc48:	bl	4034e0 <__errno_location@plt>
  45cc4c:	mov	x20, #0x0                   	// #0
  45cc50:	mov	w1, #0x16                  	// #22
  45cc54:	str	w1, [x0]
  45cc58:	b	45cc28 <_obstack_memory_used@@Base+0x838>
  45cc5c:	stp	x29, x30, [sp, #-48]!
  45cc60:	mov	x29, sp
  45cc64:	ldr	x2, [x0, #32]
  45cc68:	stp	x19, x20, [sp, #16]
  45cc6c:	mov	x19, x0
  45cc70:	mov	w20, w1
  45cc74:	cbz	x2, 45ccf0 <_obstack_memory_used@@Base+0x900>
  45cc78:	add	x3, sp, #0x24
  45cc7c:	add	x2, sp, #0x28
  45cc80:	mov	w1, #0x0                   	// #0
  45cc84:	bl	45c414 <_obstack_memory_used@@Base+0x24>
  45cc88:	cbnz	w0, 45ccac <_obstack_memory_used@@Base+0x8bc>
  45cc8c:	bl	4034e0 <__errno_location@plt>
  45cc90:	ldr	w1, [sp, #36]
  45cc94:	mov	x2, #0x0                   	// #0
  45cc98:	str	w1, [x0]
  45cc9c:	mov	x0, x2
  45cca0:	ldp	x19, x20, [sp, #16]
  45cca4:	ldp	x29, x30, [sp], #48
  45cca8:	ret
  45ccac:	cmp	w20, #0x0
  45ccb0:	adrp	x0, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  45ccb4:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x19c10>
  45ccb8:	add	x0, x0, #0xc1a
  45ccbc:	add	x1, x1, #0x901
  45ccc0:	csel	x1, x1, x0, ne  // ne = any
  45ccc4:	ldr	x0, [x19, #32]
  45ccc8:	bl	402f20 <fopen@plt>
  45cccc:	str	x0, [x19, #96]
  45ccd0:	ldr	w0, [x19, #40]
  45ccd4:	cbz	w0, 45cce4 <_obstack_memory_used@@Base+0x8f4>
  45ccd8:	ldr	x0, [x19, #32]
  45ccdc:	bl	4032a0 <free@plt>
  45cce0:	str	wzr, [x19, #40]
  45cce4:	str	xzr, [x19, #32]
  45cce8:	ldr	x2, [x19, #96]
  45ccec:	b	45cc9c <_obstack_memory_used@@Base+0x8ac>
  45ccf0:	ldr	w1, [x0, #24]
  45ccf4:	cmp	w1, #0x0
  45ccf8:	b.le	45cc9c <_obstack_memory_used@@Base+0x8ac>
  45ccfc:	ldr	x2, [x0, #128]
  45cd00:	ldr	x3, [x2, #48]
  45cd04:	mov	w2, w20
  45cd08:	blr	x3
  45cd0c:	str	x0, [x19, #96]
  45cd10:	mov	w0, #0xffffffff            	// #-1
  45cd14:	str	w0, [x19, #24]
  45cd18:	b	45cce8 <_obstack_memory_used@@Base+0x8f8>
  45cd1c:	mov	w2, w1
  45cd20:	ldr	w1, [x0, #44]
  45cd24:	cmp	w1, #0x0
  45cd28:	b.le	45cd60 <_obstack_memory_used@@Base+0x970>
  45cd2c:	stp	x29, x30, [sp, #-32]!
  45cd30:	mov	x29, sp
  45cd34:	ldr	x3, [x0, #128]
  45cd38:	str	x19, [sp, #16]
  45cd3c:	mov	x19, x0
  45cd40:	ldr	x3, [x3, #48]
  45cd44:	blr	x3
  45cd48:	str	x0, [x19, #104]
  45cd4c:	mov	w1, #0xffffffff            	// #-1
  45cd50:	str	w1, [x19, #44]
  45cd54:	ldr	x19, [sp, #16]
  45cd58:	ldp	x29, x30, [sp], #32
  45cd5c:	ret
  45cd60:	mov	x0, #0x0                   	// #0
  45cd64:	ret
  45cd68:	stp	x29, x30, [sp, #-64]!
  45cd6c:	mov	x29, sp
  45cd70:	stp	x19, x20, [sp, #16]
  45cd74:	mov	w19, w1
  45cd78:	mov	x20, x0
  45cd7c:	ldr	x1, [x0, #64]
  45cd80:	str	x21, [sp, #32]
  45cd84:	mov	x21, x2
  45cd88:	cbnz	x1, 45cd9c <_obstack_memory_used@@Base+0x9ac>
  45cd8c:	add	x3, sp, #0x34
  45cd90:	add	x2, sp, #0x38
  45cd94:	bl	45c414 <_obstack_memory_used@@Base+0x24>
  45cd98:	cbz	w0, 45cdd4 <_obstack_memory_used@@Base+0x9e4>
  45cd9c:	ldr	w0, [x20, #48]
  45cda0:	cmp	w0, w19
  45cda4:	b.ge	45cdc0 <_obstack_memory_used@@Base+0x9d0>  // b.tcont
  45cda8:	sub	w19, w19, w0
  45cdac:	mov	w1, #0x0                   	// #0
  45cdb0:	add	x0, x21, w0, sxtw #2
  45cdb4:	sbfiz	x2, x19, #2, #32
  45cdb8:	bl	403000 <memset@plt>
  45cdbc:	ldr	w19, [x20, #48]
  45cdc0:	ldr	x1, [x20, #64]
  45cdc4:	sbfiz	x2, x19, #2, #32
  45cdc8:	mov	x0, x21
  45cdcc:	bl	402cd0 <memcpy@plt>
  45cdd0:	mov	w0, #0x1                   	// #1
  45cdd4:	ldp	x19, x20, [sp, #16]
  45cdd8:	ldr	x21, [sp, #32]
  45cddc:	ldp	x29, x30, [sp], #64
  45cde0:	ret
  45cde4:	stp	x29, x30, [sp, #-64]!
  45cde8:	mov	x29, sp
  45cdec:	stp	x19, x20, [sp, #16]
  45cdf0:	mov	w19, w1
  45cdf4:	mov	x20, x0
  45cdf8:	ldr	x1, [x0, #64]
  45cdfc:	str	x21, [sp, #32]
  45ce00:	mov	x21, x2
  45ce04:	cbnz	x1, 45ce18 <_obstack_memory_used@@Base+0xa28>
  45ce08:	add	x3, sp, #0x34
  45ce0c:	add	x2, sp, #0x38
  45ce10:	bl	45c414 <_obstack_memory_used@@Base+0x24>
  45ce14:	cbz	w0, 45ce5c <_obstack_memory_used@@Base+0xa6c>
  45ce18:	ldr	x0, [x20, #72]
  45ce1c:	cbz	x0, 45ce6c <_obstack_memory_used@@Base+0xa7c>
  45ce20:	ldr	w0, [x20, #48]
  45ce24:	cmp	w0, w19
  45ce28:	b.ge	45ce48 <_obstack_memory_used@@Base+0xa58>  // b.tcont
  45ce2c:	sub	w19, w19, w0
  45ce30:	sbfiz	x0, x0, #5, #32
  45ce34:	add	x0, x21, x0
  45ce38:	mov	w1, #0x0                   	// #0
  45ce3c:	sbfiz	x2, x19, #5, #32
  45ce40:	bl	403000 <memset@plt>
  45ce44:	ldr	w19, [x20, #48]
  45ce48:	ldr	x1, [x20, #72]
  45ce4c:	sbfiz	x2, x19, #5, #32
  45ce50:	mov	x0, x21
  45ce54:	bl	402cd0 <memcpy@plt>
  45ce58:	mov	w0, #0x1                   	// #1
  45ce5c:	ldp	x19, x20, [sp, #16]
  45ce60:	ldr	x21, [sp, #32]
  45ce64:	ldp	x29, x30, [sp], #64
  45ce68:	ret
  45ce6c:	mov	w0, #0x0                   	// #0
  45ce70:	b	45ce5c <_obstack_memory_used@@Base+0xa6c>
  45ce74:	stp	x29, x30, [sp, #-64]!
  45ce78:	mov	x29, sp
  45ce7c:	ldr	w1, [x0, #24]
  45ce80:	stp	x19, x20, [sp, #16]
  45ce84:	mov	x19, x0
  45ce88:	cmp	w1, #0x0
  45ce8c:	str	x21, [sp, #32]
  45ce90:	b.le	45cea0 <_obstack_memory_used@@Base+0xab0>
  45ce94:	ldr	x2, [x0, #128]
  45ce98:	ldr	x2, [x2, #24]
  45ce9c:	blr	x2
  45cea0:	ldr	w1, [x19, #44]
  45cea4:	cmp	w1, #0x0
  45cea8:	b.le	45cebc <_obstack_memory_used@@Base+0xacc>
  45ceac:	ldr	x0, [x19, #128]
  45ceb0:	ldr	x2, [x0, #24]
  45ceb4:	mov	x0, x19
  45ceb8:	blr	x2
  45cebc:	ldr	x0, [x19, #96]
  45cec0:	cbz	x0, 45cec8 <_obstack_memory_used@@Base+0xad8>
  45cec4:	bl	402ee0 <fclose@plt>
  45cec8:	ldr	x0, [x19, #104]
  45cecc:	cbz	x0, 45ced4 <_obstack_memory_used@@Base+0xae4>
  45ced0:	bl	402ee0 <fclose@plt>
  45ced4:	ldr	x0, [x19, #64]
  45ced8:	cbnz	x0, 45cefc <_obstack_memory_used@@Base+0xb0c>
  45cedc:	ldr	w0, [x19]
  45cee0:	add	x3, sp, #0x34
  45cee4:	add	x2, sp, #0x38
  45cee8:	mov	w1, #0x1                   	// #1
  45ceec:	and	w0, w0, #0xfffffffe
  45cef0:	str	w0, [x19]
  45cef4:	mov	x0, x19
  45cef8:	bl	45c414 <_obstack_memory_used@@Base+0x24>
  45cefc:	ldr	w0, [x19, #40]
  45cf00:	cbz	w0, 45cf0c <_obstack_memory_used@@Base+0xb1c>
  45cf04:	ldr	x0, [x19, #32]
  45cf08:	bl	4032a0 <free@plt>
  45cf0c:	ldr	x0, [x19, #56]
  45cf10:	bl	4032a0 <free@plt>
  45cf14:	ldr	x0, [x19, #64]
  45cf18:	bl	4032a0 <free@plt>
  45cf1c:	ldr	x0, [x19, #72]
  45cf20:	bl	4032a0 <free@plt>
  45cf24:	ldr	w0, [x19, #112]
  45cf28:	cmp	w0, #0x0
  45cf2c:	b.le	45cf68 <_obstack_memory_used@@Base+0xb78>
  45cf30:	mov	x20, #0x0                   	// #0
  45cf34:	ldr	x0, [x19, #120]
  45cf38:	lsl	x21, x20, #3
  45cf3c:	add	x20, x20, #0x1
  45cf40:	ldr	x0, [x0, x21]
  45cf44:	bl	402dc0 <remove@plt>
  45cf48:	ldr	x0, [x19, #120]
  45cf4c:	ldr	x0, [x0, x21]
  45cf50:	bl	4032a0 <free@plt>
  45cf54:	ldr	w0, [x19, #112]
  45cf58:	cmp	w0, w20
  45cf5c:	b.gt	45cf34 <_obstack_memory_used@@Base+0xb44>
  45cf60:	ldr	x0, [x19, #120]
  45cf64:	bl	4032a0 <free@plt>
  45cf68:	ldr	x0, [x19, #128]
  45cf6c:	ldr	x1, [x0, #64]
  45cf70:	cbz	x1, 45cf7c <_obstack_memory_used@@Base+0xb8c>
  45cf74:	mov	x0, x19
  45cf78:	blr	x1
  45cf7c:	mov	x0, x19
  45cf80:	ldp	x19, x20, [sp, #16]
  45cf84:	ldr	x21, [sp, #32]
  45cf88:	ldp	x29, x30, [sp], #64
  45cf8c:	b	4032a0 <free@plt>
  45cf90:	ret
  45cf94:	stp	x29, x30, [sp, #-32]!
  45cf98:	mov	w2, #0x1                   	// #1
  45cf9c:	mov	x29, sp
  45cfa0:	str	x19, [sp, #16]
  45cfa4:	mov	w19, w1
  45cfa8:	mov	w0, w19
  45cfac:	mov	w1, #0x2                   	// #2
  45cfb0:	bl	403330 <fcntl@plt>
  45cfb4:	tbnz	w0, #31, 45cfd0 <_obstack_memory_used@@Base+0xbe0>
  45cfb8:	mov	w0, w19
  45cfbc:	adrp	x1, 49d000 <_obstack_memory_used@@Base+0x40c10>
  45cfc0:	ldr	x19, [sp, #16]
  45cfc4:	add	x1, x1, #0x935
  45cfc8:	ldp	x29, x30, [sp], #32
  45cfcc:	b	403010 <fdopen@plt>
  45cfd0:	mov	x0, #0x0                   	// #0
  45cfd4:	ldr	x19, [sp, #16]
  45cfd8:	ldp	x29, x30, [sp], #32
  45cfdc:	ret
  45cfe0:	mov	w0, w1
  45cfe4:	adrp	x1, 49c000 <_obstack_memory_used@@Base+0x3fc10>
  45cfe8:	add	x1, x1, #0xc1a
  45cfec:	b	403010 <fdopen@plt>
  45cff0:	mov	x0, x1
  45cff4:	b	402e10 <pipe@plt>
  45cff8:	mov	w0, w1
  45cffc:	b	403120 <close@plt>
  45d000:	stp	x29, x30, [sp, #-160]!
  45d004:	mov	x29, sp
  45d008:	str	wzr, [sp, #100]
  45d00c:	str	x0, [sp, #88]
  45d010:	mov	w0, #0x1                   	// #1
  45d014:	str	w0, [sp, #100]
  45d018:	stp	x19, x20, [sp, #16]
  45d01c:	ldr	w0, [sp, #100]
  45d020:	stp	w5, w6, [sp, #44]
  45d024:	str	w7, [sp, #52]
  45d028:	str	x2, [sp, #56]
  45d02c:	str	w1, [sp, #64]
  45d030:	stp	x3, x4, [sp, #72]
  45d034:	cbz	w0, 45d04c <_obstack_memory_used@@Base+0xc5c>
  45d038:	add	x0, sp, #0x70
  45d03c:	mov	w1, #0x80000               	// #524288
  45d040:	bl	4031c0 <pipe2@plt>
  45d044:	cbz	w0, 45d04c <_obstack_memory_used@@Base+0xc5c>
  45d048:	str	wzr, [sp, #100]
  45d04c:	mov	w0, #0x1                   	// #1
  45d050:	str	w0, [sp, #104]
  45d054:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d058:	mov	w19, #0xffffffff            	// #-1
  45d05c:	ldr	x0, [x0, #1288]
  45d060:	str	x0, [sp, #120]
  45d064:	str	wzr, [sp, #108]
  45d068:	ldr	w0, [sp, #108]
  45d06c:	cmp	w0, #0x3
  45d070:	b.gt	45d430 <_obstack_memory_used@@Base+0x1040>
  45d074:	bl	403030 <vfork@plt>
  45d078:	mov	w19, w0
  45d07c:	cmp	w0, #0x0
  45d080:	b.ge	45d0a8 <_obstack_memory_used@@Base+0xcb8>  // b.tcont
  45d084:	ldr	w0, [sp, #104]
  45d088:	bl	403040 <sleep@plt>
  45d08c:	ldr	w0, [sp, #104]
  45d090:	lsl	w0, w0, #1
  45d094:	str	w0, [sp, #104]
  45d098:	ldr	w0, [sp, #108]
  45d09c:	add	w0, w0, #0x1
  45d0a0:	str	w0, [sp, #108]
  45d0a4:	b	45d068 <_obstack_memory_used@@Base+0xc78>
  45d0a8:	b.eq	45d108 <_obstack_memory_used@@Base+0xd18>  // b.none
  45d0ac:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d0b0:	str	xzr, [sp, #144]
  45d0b4:	ldr	x1, [sp, #120]
  45d0b8:	str	x1, [x0, #1288]
  45d0bc:	ldr	w0, [sp, #100]
  45d0c0:	cbnz	w0, 45d398 <_obstack_memory_used@@Base+0xfa8>
  45d0c4:	ldr	w0, [sp, #44]
  45d0c8:	cbz	w0, 45d3f4 <_obstack_memory_used@@Base+0x1004>
  45d0cc:	ldr	w0, [sp, #44]
  45d0d0:	bl	403120 <close@plt>
  45d0d4:	tbz	w0, #31, 45d3ec <_obstack_memory_used@@Base+0xffc>
  45d0d8:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  45d0dc:	add	x0, x0, #0x490
  45d0e0:	str	x0, [sp, #144]
  45d0e4:	bl	4034e0 <__errno_location@plt>
  45d0e8:	ldr	w0, [x0]
  45d0ec:	str	w0, [sp, #152]
  45d0f0:	b	45d3c8 <_obstack_memory_used@@Base+0xfd8>
  45d0f4:	ldr	w0, [sp, #112]
  45d0f8:	bl	403120 <close@plt>
  45d0fc:	ldr	w0, [sp, #116]
  45d100:	bl	403120 <close@plt>
  45d104:	b	45d440 <_obstack_memory_used@@Base+0x1050>
  45d108:	ldr	w0, [sp, #100]
  45d10c:	str	xzr, [sp, #128]
  45d110:	cbnz	w0, 45d138 <_obstack_memory_used@@Base+0xd48>
  45d114:	ldr	w0, [sp, #44]
  45d118:	cbz	w0, 45d284 <_obstack_memory_used@@Base+0xe94>
  45d11c:	ldr	w0, [sp, #44]
  45d120:	mov	w1, #0x0                   	// #0
  45d124:	bl	403480 <dup2@plt>
  45d128:	tbz	w0, #31, 45d254 <_obstack_memory_used@@Base+0xe64>
  45d12c:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d130:	add	x0, x0, #0xfa8
  45d134:	b	45d268 <_obstack_memory_used@@Base+0xe78>
  45d138:	ldr	w0, [sp, #112]
  45d13c:	bl	403120 <close@plt>
  45d140:	ldr	x0, [sp, #128]
  45d144:	cbz	x0, 45d114 <_obstack_memory_used@@Base+0xd24>
  45d148:	ldr	w0, [sp, #100]
  45d14c:	cbnz	w0, 45d378 <_obstack_memory_used@@Base+0xf88>
  45d150:	ldr	x0, [sp, #88]
  45d154:	ldr	x19, [x0, #8]
  45d158:	mov	x0, x19
  45d15c:	bl	402d50 <strlen@plt>
  45d160:	mov	x1, x19
  45d164:	mov	x2, x0
  45d168:	mov	w0, #0x2                   	// #2
  45d16c:	bl	403160 <write@plt>
  45d170:	mov	x2, #0x18                  	// #24
  45d174:	mov	x20, x0
  45d178:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d17c:	mov	w0, #0x2                   	// #2
  45d180:	add	x1, x1, #0xfba
  45d184:	bl	403160 <write@plt>
  45d188:	orr	x20, x20, x0
  45d18c:	ldr	x0, [sp, #56]
  45d190:	bl	402d50 <strlen@plt>
  45d194:	mov	x2, x0
  45d198:	ldr	x1, [sp, #56]
  45d19c:	mov	w0, #0x2                   	// #2
  45d1a0:	bl	403160 <write@plt>
  45d1a4:	mov	x19, x0
  45d1a8:	mov	x2, #0x3                   	// #3
  45d1ac:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d1b0:	mov	w0, #0x2                   	// #2
  45d1b4:	add	x1, x1, #0xfd3
  45d1b8:	bl	403160 <write@plt>
  45d1bc:	orr	x19, x19, x0
  45d1c0:	orr	x20, x19, x20
  45d1c4:	ldr	x19, [sp, #128]
  45d1c8:	mov	x0, x19
  45d1cc:	bl	402d50 <strlen@plt>
  45d1d0:	mov	x1, x19
  45d1d4:	mov	x2, x0
  45d1d8:	mov	w0, #0x2                   	// #2
  45d1dc:	bl	403160 <write@plt>
  45d1e0:	mov	x2, #0x2                   	// #2
  45d1e4:	mov	x19, x0
  45d1e8:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d1ec:	mov	w0, w2
  45d1f0:	add	x1, x1, #0x664
  45d1f4:	bl	403160 <write@plt>
  45d1f8:	orr	x19, x19, x0
  45d1fc:	ldr	w0, [sp, #136]
  45d200:	orr	x19, x19, x20
  45d204:	bl	45d814 <_obstack_memory_used@@Base+0x1424>
  45d208:	mov	x20, x0
  45d20c:	ldr	w0, [sp, #136]
  45d210:	bl	45d814 <_obstack_memory_used@@Base+0x1424>
  45d214:	bl	402d50 <strlen@plt>
  45d218:	mov	x2, x0
  45d21c:	mov	x1, x20
  45d220:	mov	w0, #0x2                   	// #2
  45d224:	bl	403160 <write@plt>
  45d228:	mov	x20, x0
  45d22c:	mov	x2, #0x1                   	// #1
  45d230:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x1bc10>
  45d234:	mov	w0, #0x2                   	// #2
  45d238:	add	x1, x1, #0x68
  45d23c:	bl	403160 <write@plt>
  45d240:	orr	x19, x0, x19
  45d244:	orr	x19, x19, x20
  45d248:	tbz	x19, #63, 45d390 <_obstack_memory_used@@Base+0xfa0>
  45d24c:	mov	w0, #0xfffffffe            	// #-2
  45d250:	b	45d394 <_obstack_memory_used@@Base+0xfa4>
  45d254:	ldr	w0, [sp, #44]
  45d258:	bl	403120 <close@plt>
  45d25c:	tbz	w0, #31, 45d27c <_obstack_memory_used@@Base+0xe8c>
  45d260:	adrp	x0, 4cb000 <_obstack_memory_used@@Base+0x6ec10>
  45d264:	add	x0, x0, #0x490
  45d268:	str	x0, [sp, #128]
  45d26c:	bl	4034e0 <__errno_location@plt>
  45d270:	ldr	w0, [x0]
  45d274:	str	w0, [sp, #136]
  45d278:	b	45d148 <_obstack_memory_used@@Base+0xd58>
  45d27c:	ldr	x0, [sp, #128]
  45d280:	cbnz	x0, 45d148 <_obstack_memory_used@@Base+0xd58>
  45d284:	ldr	w0, [sp, #48]
  45d288:	cmp	w0, #0x1
  45d28c:	b.eq	45d2b4 <_obstack_memory_used@@Base+0xec4>  // b.none
  45d290:	ldr	w0, [sp, #48]
  45d294:	mov	w1, #0x1                   	// #1
  45d298:	bl	403480 <dup2@plt>
  45d29c:	tbnz	w0, #31, 45d12c <_obstack_memory_used@@Base+0xd3c>
  45d2a0:	ldr	w0, [sp, #48]
  45d2a4:	bl	403120 <close@plt>
  45d2a8:	tbnz	w0, #31, 45d260 <_obstack_memory_used@@Base+0xe70>
  45d2ac:	ldr	x0, [sp, #128]
  45d2b0:	cbnz	x0, 45d148 <_obstack_memory_used@@Base+0xd58>
  45d2b4:	ldr	w0, [sp, #52]
  45d2b8:	cmp	w0, #0x2
  45d2bc:	b.eq	45d2e4 <_obstack_memory_used@@Base+0xef4>  // b.none
  45d2c0:	ldr	w0, [sp, #52]
  45d2c4:	mov	w1, #0x2                   	// #2
  45d2c8:	bl	403480 <dup2@plt>
  45d2cc:	tbnz	w0, #31, 45d12c <_obstack_memory_used@@Base+0xd3c>
  45d2d0:	ldr	w0, [sp, #52]
  45d2d4:	bl	403120 <close@plt>
  45d2d8:	tbnz	w0, #31, 45d260 <_obstack_memory_used@@Base+0xe70>
  45d2dc:	ldr	x0, [sp, #128]
  45d2e0:	cbnz	x0, 45d148 <_obstack_memory_used@@Base+0xd58>
  45d2e4:	ldr	w0, [sp, #160]
  45d2e8:	tbnz	w0, #31, 45d300 <_obstack_memory_used@@Base+0xf10>
  45d2ec:	ldr	w0, [sp, #160]
  45d2f0:	bl	403120 <close@plt>
  45d2f4:	tbnz	w0, #31, 45d260 <_obstack_memory_used@@Base+0xe70>
  45d2f8:	ldr	x0, [sp, #128]
  45d2fc:	cbnz	x0, 45d148 <_obstack_memory_used@@Base+0xd58>
  45d300:	ldr	x0, [sp, #64]
  45d304:	tbz	w0, #3, 45d320 <_obstack_memory_used@@Base+0xf30>
  45d308:	mov	w1, #0x2                   	// #2
  45d30c:	mov	w0, #0x1                   	// #1
  45d310:	bl	403480 <dup2@plt>
  45d314:	tbnz	w0, #31, 45d12c <_obstack_memory_used@@Base+0xd3c>
  45d318:	ldr	x0, [sp, #128]
  45d31c:	cbnz	x0, 45d148 <_obstack_memory_used@@Base+0xd58>
  45d320:	ldr	x0, [sp, #80]
  45d324:	cbnz	x0, 45d354 <_obstack_memory_used@@Base+0xf64>
  45d328:	bl	4034e0 <__errno_location@plt>
  45d32c:	mov	x19, x0
  45d330:	ldp	x0, x1, [sp, #64]
  45d334:	tbz	w0, #1, 45d364 <_obstack_memory_used@@Base+0xf74>
  45d338:	ldr	x0, [sp, #56]
  45d33c:	bl	403210 <execvp@plt>
  45d340:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d344:	add	x0, x0, #0xfad
  45d348:	str	x0, [sp, #128]
  45d34c:	ldr	w0, [x19]
  45d350:	b	45d274 <_obstack_memory_used@@Base+0xe84>
  45d354:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d358:	ldr	x1, [sp, #80]
  45d35c:	str	x1, [x0, #1288]
  45d360:	b	45d328 <_obstack_memory_used@@Base+0xf38>
  45d364:	ldr	x0, [sp, #56]
  45d368:	bl	403070 <execv@plt>
  45d36c:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d370:	add	x0, x0, #0xfb4
  45d374:	b	45d348 <_obstack_memory_used@@Base+0xf58>
  45d378:	ldr	w0, [sp, #116]
  45d37c:	add	x1, sp, #0x80
  45d380:	mov	x2, #0x10                  	// #16
  45d384:	bl	403160 <write@plt>
  45d388:	cmp	x0, #0x10
  45d38c:	b.ne	45d150 <_obstack_memory_used@@Base+0xd60>  // b.any
  45d390:	mov	w0, #0xffffffff            	// #-1
  45d394:	bl	402d00 <_exit@plt>
  45d398:	ldr	w0, [sp, #116]
  45d39c:	bl	403120 <close@plt>
  45d3a0:	ldr	w0, [sp, #112]
  45d3a4:	add	x1, sp, #0x90
  45d3a8:	mov	x2, #0x10                  	// #16
  45d3ac:	bl	4033c0 <read@plt>
  45d3b0:	tbz	x0, #63, 45d3b8 <_obstack_memory_used@@Base+0xfc8>
  45d3b4:	str	xzr, [sp, #144]
  45d3b8:	ldr	w0, [sp, #112]
  45d3bc:	bl	403120 <close@plt>
  45d3c0:	ldr	x0, [sp, #144]
  45d3c4:	cbz	x0, 45d0c4 <_obstack_memory_used@@Base+0xcd4>
  45d3c8:	ldr	x0, [sp, #144]
  45d3cc:	cbz	x0, 45d460 <_obstack_memory_used@@Base+0x1070>
  45d3d0:	ldr	x2, [sp, #176]
  45d3d4:	mov	w19, #0xffffffff            	// #-1
  45d3d8:	ldr	w1, [sp, #152]
  45d3dc:	str	w1, [x2]
  45d3e0:	ldr	x1, [sp, #168]
  45d3e4:	str	x0, [x1]
  45d3e8:	b	45d460 <_obstack_memory_used@@Base+0x1070>
  45d3ec:	ldr	x0, [sp, #144]
  45d3f0:	cbnz	x0, 45d3c8 <_obstack_memory_used@@Base+0xfd8>
  45d3f4:	ldr	w0, [sp, #48]
  45d3f8:	cmp	w0, #0x1
  45d3fc:	b.eq	45d414 <_obstack_memory_used@@Base+0x1024>  // b.none
  45d400:	ldr	w0, [sp, #48]
  45d404:	bl	403120 <close@plt>
  45d408:	tbnz	w0, #31, 45d0d8 <_obstack_memory_used@@Base+0xce8>
  45d40c:	ldr	x0, [sp, #144]
  45d410:	cbnz	x0, 45d3c8 <_obstack_memory_used@@Base+0xfd8>
  45d414:	ldr	w0, [sp, #52]
  45d418:	cmp	w0, #0x2
  45d41c:	b.eq	45d3c8 <_obstack_memory_used@@Base+0xfd8>  // b.none
  45d420:	ldr	w0, [sp, #52]
  45d424:	bl	403120 <close@plt>
  45d428:	tbz	w0, #31, 45d3c8 <_obstack_memory_used@@Base+0xfd8>
  45d42c:	b	45d0d8 <_obstack_memory_used@@Base+0xce8>
  45d430:	cmn	w19, #0x1
  45d434:	b.ne	45d0ac <_obstack_memory_used@@Base+0xcbc>  // b.any
  45d438:	ldr	w0, [sp, #100]
  45d43c:	cbnz	w0, 45d0f4 <_obstack_memory_used@@Base+0xd04>
  45d440:	bl	4034e0 <__errno_location@plt>
  45d444:	ldr	w0, [x0]
  45d448:	ldr	x1, [sp, #176]
  45d44c:	str	w0, [x1]
  45d450:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d454:	ldr	x1, [sp, #168]
  45d458:	add	x0, x0, #0xfa2
  45d45c:	str	x0, [x1]
  45d460:	mov	w0, w19
  45d464:	ldp	x19, x20, [sp, #16]
  45d468:	ldp	x29, x30, [sp], #160
  45d46c:	ret
  45d470:	cmp	w3, #0x0
  45d474:	mov	x0, x1
  45d478:	mov	w3, #0x441                 	// #1089
  45d47c:	mov	w2, #0x1b6                 	// #438
  45d480:	mov	w1, #0x241                 	// #577
  45d484:	csel	w1, w3, w1, ne  // ne = any
  45d488:	b	402f50 <open@plt>
  45d48c:	mov	x0, x1
  45d490:	mov	w1, #0x0                   	// #0
  45d494:	b	402f50 <open@plt>
  45d498:	stp	x29, x30, [sp, #-208]!
  45d49c:	mov	x29, sp
  45d4a0:	stp	x19, x20, [sp, #16]
  45d4a4:	mov	w20, w1
  45d4a8:	mov	x19, x3
  45d4ac:	stp	x21, x22, [sp, #32]
  45d4b0:	mov	x21, x2
  45d4b4:	mov	x22, x5
  45d4b8:	str	x23, [sp, #48]
  45d4bc:	mov	x23, x6
  45d4c0:	cbz	w4, 45d4d0 <_obstack_memory_used@@Base+0x10e0>
  45d4c4:	mov	w0, w20
  45d4c8:	mov	w1, #0xf                   	// #15
  45d4cc:	bl	402e70 <kill@plt>
  45d4d0:	cbnz	x19, 45d520 <_obstack_memory_used@@Base+0x1130>
  45d4d4:	mov	x1, x21
  45d4d8:	mov	w0, w20
  45d4dc:	mov	w2, #0x0                   	// #0
  45d4e0:	bl	403560 <waitpid@plt>
  45d4e4:	mov	w1, w0
  45d4e8:	mov	w0, #0x0                   	// #0
  45d4ec:	tbz	w1, #31, 45d50c <_obstack_memory_used@@Base+0x111c>
  45d4f0:	bl	4034e0 <__errno_location@plt>
  45d4f4:	ldr	w0, [x0]
  45d4f8:	str	w0, [x23]
  45d4fc:	adrp	x0, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d500:	add	x0, x0, #0xfd7
  45d504:	str	x0, [x22]
  45d508:	mov	w0, #0xffffffff            	// #-1
  45d50c:	ldp	x19, x20, [sp, #16]
  45d510:	ldp	x21, x22, [sp, #32]
  45d514:	ldr	x23, [sp, #48]
  45d518:	ldp	x29, x30, [sp], #208
  45d51c:	ret
  45d520:	mov	x1, x21
  45d524:	add	x3, sp, #0x40
  45d528:	mov	w0, w20
  45d52c:	mov	w2, #0x0                   	// #0
  45d530:	bl	4032e0 <wait4@plt>
  45d534:	mov	w1, w0
  45d538:	ldr	x0, [sp, #64]
  45d53c:	str	x0, [x19]
  45d540:	ldr	x0, [sp, #72]
  45d544:	str	x0, [x19, #8]
  45d548:	ldr	x0, [sp, #80]
  45d54c:	str	x0, [x19, #16]
  45d550:	ldr	x0, [sp, #88]
  45d554:	str	x0, [x19, #24]
  45d558:	b	45d4e8 <_obstack_memory_used@@Base+0x10f8>
  45d55c:	adrp	x3, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d560:	add	x3, x3, #0xfe0
  45d564:	b	45c5e4 <_obstack_memory_used@@Base+0x1f4>
  45d568:	stp	x29, x30, [sp, #-48]!
  45d56c:	mov	x29, sp
  45d570:	add	x1, sp, #0x20
  45d574:	str	x19, [sp, #16]
  45d578:	mov	x19, x0
  45d57c:	mov	w0, #0x3                   	// #3
  45d580:	bl	403370 <getrlimit@plt>
  45d584:	cbnz	w0, 45d5b0 <_obstack_memory_used@@Base+0x11c0>
  45d588:	ldr	x1, [sp, #32]
  45d58c:	cmn	x1, #0x1
  45d590:	b.eq	45d5b0 <_obstack_memory_used@@Base+0x11c0>  // b.none
  45d594:	cmp	x1, x19
  45d598:	b.cs	45d5b0 <_obstack_memory_used@@Base+0x11c0>  // b.hs, b.nlast
  45d59c:	ldr	x0, [sp, #40]
  45d5a0:	cmn	x0, #0x1
  45d5a4:	b.eq	45d5bc <_obstack_memory_used@@Base+0x11cc>  // b.none
  45d5a8:	cmp	x1, x0
  45d5ac:	b.cc	45d5d0 <_obstack_memory_used@@Base+0x11e0>  // b.lo, b.ul, b.last
  45d5b0:	ldr	x19, [sp, #16]
  45d5b4:	ldp	x29, x30, [sp], #48
  45d5b8:	ret
  45d5bc:	str	x19, [sp, #32]
  45d5c0:	add	x1, sp, #0x20
  45d5c4:	mov	w0, #0x3                   	// #3
  45d5c8:	bl	402e50 <setrlimit@plt>
  45d5cc:	b	45d5b0 <_obstack_memory_used@@Base+0x11c0>
  45d5d0:	cmp	x0, x19
  45d5d4:	b.cs	45d5bc <_obstack_memory_used@@Base+0x11cc>  // b.hs, b.nlast
  45d5d8:	str	x0, [sp, #32]
  45d5dc:	b	45d5c0 <_obstack_memory_used@@Base+0x11d0>
  45d5e0:	stp	x29, x30, [sp, #-32]!
  45d5e4:	mov	x29, sp
  45d5e8:	str	x19, [sp, #16]
  45d5ec:	mov	w19, w0
  45d5f0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45d5f4:	ldr	x0, [x0, #1992]
  45d5f8:	cbz	x0, 45d600 <_obstack_memory_used@@Base+0x1210>
  45d5fc:	blr	x0
  45d600:	mov	w0, w19
  45d604:	bl	402d80 <exit@plt>
  45d608:	stp	x29, x30, [sp, #-32]!
  45d60c:	adrp	x1, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d610:	mov	x29, sp
  45d614:	str	x19, [sp, #16]
  45d618:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45d61c:	str	x0, [x1, #1216]
  45d620:	ldr	x0, [x19, #1216]
  45d624:	cbnz	x0, 45d630 <_obstack_memory_used@@Base+0x1240>
  45d628:	bl	402d90 <sbrk@plt>
  45d62c:	str	x0, [x19, #1216]
  45d630:	ldr	x19, [sp, #16]
  45d634:	ldp	x29, x30, [sp], #32
  45d638:	ret
  45d63c:	stp	x29, x30, [sp, #-32]!
  45d640:	mov	x29, sp
  45d644:	stp	x19, x20, [sp, #16]
  45d648:	mov	x19, x0
  45d64c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45d650:	ldr	x20, [x0, #1216]
  45d654:	mov	x0, #0x0                   	// #0
  45d658:	cbz	x20, 45d6a8 <_obstack_memory_used@@Base+0x12b8>
  45d65c:	bl	402d90 <sbrk@plt>
  45d660:	sub	x5, x0, x20
  45d664:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d668:	adrp	x3, 485000 <_obstack_memory_used@@Base+0x28c10>
  45d66c:	adrp	x1, 4cd000 <_obstack_memory_used@@Base+0x70c10>
  45d670:	add	x3, x3, #0x122
  45d674:	ldr	x2, [x0, #1216]
  45d678:	add	x1, x1, #0x664
  45d67c:	mov	x4, x19
  45d680:	ldrb	w0, [x2]
  45d684:	cmp	w0, #0x0
  45d688:	adrp	x0, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d68c:	csel	x3, x1, x3, ne  // ne = any
  45d690:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45d694:	ldr	x0, [x0, #1264]
  45d698:	add	x1, x1, #0x428
  45d69c:	bl	403590 <fprintf@plt>
  45d6a0:	mov	w0, #0x1                   	// #1
  45d6a4:	bl	45d5e0 <_obstack_memory_used@@Base+0x11f0>
  45d6a8:	bl	402d90 <sbrk@plt>
  45d6ac:	adrp	x5, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  45d6b0:	add	x5, x5, #0x508
  45d6b4:	sub	x5, x0, x5
  45d6b8:	b	45d664 <_obstack_memory_used@@Base+0x1274>
  45d6bc:	stp	x29, x30, [sp, #-32]!
  45d6c0:	cmp	x0, #0x0
  45d6c4:	mov	x29, sp
  45d6c8:	str	x19, [sp, #16]
  45d6cc:	csinc	x19, x0, xzr, ne  // ne = any
  45d6d0:	mov	x0, x19
  45d6d4:	bl	402f40 <malloc@plt>
  45d6d8:	cbnz	x0, 45d6e4 <_obstack_memory_used@@Base+0x12f4>
  45d6dc:	mov	x0, x19
  45d6e0:	bl	45d63c <_obstack_memory_used@@Base+0x124c>
  45d6e4:	ldr	x19, [sp, #16]
  45d6e8:	ldp	x29, x30, [sp], #32
  45d6ec:	ret
  45d6f0:	stp	x29, x30, [sp, #-32]!
  45d6f4:	cmp	x0, #0x0
  45d6f8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  45d6fc:	mov	x29, sp
  45d700:	stp	x19, x20, [sp, #16]
  45d704:	b.ne	45d728 <_obstack_memory_used@@Base+0x1338>  // b.any
  45d708:	mov	x19, #0x1                   	// #1
  45d70c:	mov	x20, x19
  45d710:	mov	x1, x19
  45d714:	mov	x0, x20
  45d718:	bl	403050 <calloc@plt>
  45d71c:	cbnz	x0, 45d734 <_obstack_memory_used@@Base+0x1344>
  45d720:	mul	x0, x20, x19
  45d724:	bl	45d63c <_obstack_memory_used@@Base+0x124c>
  45d728:	mov	x20, x0
  45d72c:	mov	x19, x1
  45d730:	b	45d710 <_obstack_memory_used@@Base+0x1320>
  45d734:	ldp	x19, x20, [sp, #16]
  45d738:	ldp	x29, x30, [sp], #32
  45d73c:	ret
  45d740:	stp	x29, x30, [sp, #-32]!
  45d744:	cmp	x1, #0x0
  45d748:	mov	x29, sp
  45d74c:	str	x19, [sp, #16]
  45d750:	csinc	x19, x1, xzr, ne  // ne = any
  45d754:	cbnz	x0, 45d76c <_obstack_memory_used@@Base+0x137c>
  45d758:	mov	x0, x19
  45d75c:	bl	402f40 <malloc@plt>
  45d760:	cbnz	x0, 45d778 <_obstack_memory_used@@Base+0x1388>
  45d764:	mov	x0, x19
  45d768:	bl	45d63c <_obstack_memory_used@@Base+0x124c>
  45d76c:	mov	x1, x19
  45d770:	bl	4030b0 <realloc@plt>
  45d774:	b	45d760 <_obstack_memory_used@@Base+0x1370>
  45d778:	ldr	x19, [sp, #16]
  45d77c:	ldp	x29, x30, [sp], #32
  45d780:	ret
  45d784:	stp	x29, x30, [sp, #-48]!
  45d788:	mov	x29, sp
  45d78c:	stp	x19, x20, [sp, #16]
  45d790:	mov	x19, x1
  45d794:	mov	x20, x2
  45d798:	stp	x21, x22, [sp, #32]
  45d79c:	mov	x22, x0
  45d7a0:	mov	x0, x2
  45d7a4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45d7a8:	mov	x21, x0
  45d7ac:	cmp	x20, x19
  45d7b0:	b.ls	45d7c4 <_obstack_memory_used@@Base+0x13d4>  // b.plast
  45d7b4:	sub	x2, x20, x19
  45d7b8:	add	x0, x0, x19
  45d7bc:	mov	w1, #0x0                   	// #0
  45d7c0:	bl	403000 <memset@plt>
  45d7c4:	mov	x2, x19
  45d7c8:	mov	x1, x22
  45d7cc:	mov	x0, x21
  45d7d0:	ldp	x19, x20, [sp, #16]
  45d7d4:	ldp	x21, x22, [sp, #32]
  45d7d8:	ldp	x29, x30, [sp], #48
  45d7dc:	b	402cd0 <memcpy@plt>
  45d7e0:	stp	x29, x30, [sp, #-32]!
  45d7e4:	mov	x29, sp
  45d7e8:	stp	x19, x20, [sp, #16]
  45d7ec:	mov	x20, x0
  45d7f0:	bl	402d50 <strlen@plt>
  45d7f4:	add	x19, x0, #0x1
  45d7f8:	mov	x0, x19
  45d7fc:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45d800:	mov	x2, x19
  45d804:	mov	x1, x20
  45d808:	ldp	x19, x20, [sp, #16]
  45d80c:	ldp	x29, x30, [sp], #32
  45d810:	b	402cd0 <memcpy@plt>
  45d814:	stp	x29, x30, [sp, #-32]!
  45d818:	mov	x29, sp
  45d81c:	stp	x19, x20, [sp, #16]
  45d820:	mov	w20, w0
  45d824:	bl	403110 <strerror@plt>
  45d828:	cbnz	x0, 45d84c <_obstack_memory_used@@Base+0x145c>
  45d82c:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  45d830:	add	x19, x19, #0x4c8
  45d834:	mov	w2, w20
  45d838:	mov	x0, x19
  45d83c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45d840:	add	x1, x1, #0x46c
  45d844:	bl	402e00 <sprintf@plt>
  45d848:	mov	x0, x19
  45d84c:	ldp	x19, x20, [sp, #16]
  45d850:	ldp	x29, x30, [sp], #32
  45d854:	ret
  45d858:	stp	x29, x30, [sp, #-32]!
  45d85c:	mov	x29, sp
  45d860:	stp	x19, x20, [sp, #16]
  45d864:	mov	x20, x0
  45d868:	bl	402da0 <strnlen@plt>
  45d86c:	mov	x19, x0
  45d870:	add	x0, x0, #0x1
  45d874:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45d878:	mov	x2, x19
  45d87c:	mov	x1, x20
  45d880:	strb	wzr, [x0, x19]
  45d884:	ldp	x19, x20, [sp, #16]
  45d888:	ldp	x29, x30, [sp], #32
  45d88c:	b	402cd0 <memcpy@plt>
  45d890:	stp	x29, x30, [sp, #-80]!
  45d894:	mov	x29, sp
  45d898:	ldp	x2, x3, [x1]
  45d89c:	stp	x2, x3, [sp, #48]
  45d8a0:	ldp	x2, x3, [x1, #16]
  45d8a4:	stp	x19, x20, [sp, #16]
  45d8a8:	mov	x19, x1
  45d8ac:	add	x1, sp, #0x30
  45d8b0:	str	x21, [sp, #32]
  45d8b4:	mov	x21, x0
  45d8b8:	stp	x2, x3, [sp, #64]
  45d8bc:	bl	45d8fc <_obstack_memory_used@@Base+0x150c>
  45d8c0:	sxtw	x0, w0
  45d8c4:	bl	45d6bc <_obstack_memory_used@@Base+0x12cc>
  45d8c8:	mov	x20, x0
  45d8cc:	ldp	x2, x3, [x19]
  45d8d0:	stp	x2, x3, [sp, #48]
  45d8d4:	mov	x1, x21
  45d8d8:	ldp	x2, x3, [x19, #16]
  45d8dc:	stp	x2, x3, [sp, #64]
  45d8e0:	add	x2, sp, #0x30
  45d8e4:	bl	4033a0 <vsprintf@plt>
  45d8e8:	mov	x0, x20
  45d8ec:	ldp	x19, x20, [sp, #16]
  45d8f0:	ldr	x21, [sp, #32]
  45d8f4:	ldp	x29, x30, [sp], #80
  45d8f8:	ret
  45d8fc:	stp	x29, x30, [sp, #-112]!
  45d900:	mov	x29, sp
  45d904:	stp	x19, x20, [sp, #16]
  45d908:	mov	x19, x1
  45d90c:	adrp	x20, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45d910:	stp	x21, x22, [sp, #32]
  45d914:	add	x20, x20, #0x483
  45d918:	adrp	x21, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45d91c:	stp	x23, x24, [sp, #48]
  45d920:	add	x21, x21, #0x489
  45d924:	str	x0, [sp, #72]
  45d928:	bl	402d50 <strlen@plt>
  45d92c:	add	w23, w0, #0x1
  45d930:	ldp	x0, x1, [x19]
  45d934:	stp	x0, x1, [sp, #80]
  45d938:	ldp	x0, x1, [x19, #16]
  45d93c:	stp	x0, x1, [sp, #96]
  45d940:	ldr	x0, [sp, #72]
  45d944:	ldrb	w1, [x0]
  45d948:	cbnz	w1, 45d964 <_obstack_memory_used@@Base+0x1574>
  45d94c:	mov	w0, w23
  45d950:	ldp	x19, x20, [sp, #16]
  45d954:	ldp	x21, x22, [sp, #32]
  45d958:	ldp	x23, x24, [sp, #48]
  45d95c:	ldp	x29, x30, [sp], #112
  45d960:	ret
  45d964:	add	x1, x0, #0x1
  45d968:	str	x1, [sp, #72]
  45d96c:	ldrb	w0, [x0]
  45d970:	cmp	w0, #0x25
  45d974:	b.ne	45d940 <_obstack_memory_used@@Base+0x1550>  // b.any
  45d978:	ldr	x19, [sp, #72]
  45d97c:	mov	x0, x20
  45d980:	ldrb	w22, [x19]
  45d984:	mov	w1, w22
  45d988:	bl	4032f0 <strchr@plt>
  45d98c:	cbnz	x0, 45da70 <_obstack_memory_used@@Base+0x1680>
  45d990:	cmp	w22, #0x2a
  45d994:	b.ne	45da98 <_obstack_memory_used@@Base+0x16a8>  // b.any
  45d998:	ldr	w1, [sp, #104]
  45d99c:	add	x19, x19, #0x1
  45d9a0:	str	x19, [sp, #72]
  45d9a4:	ldr	x0, [sp, #80]
  45d9a8:	tbnz	w1, #31, 45da7c <_obstack_memory_used@@Base+0x168c>
  45d9ac:	add	x1, x0, #0xb
  45d9b0:	and	x1, x1, #0xfffffffffffffff8
  45d9b4:	str	x1, [sp, #80]
  45d9b8:	ldr	w19, [x0]
  45d9bc:	cmp	w19, #0x0
  45d9c0:	cneg	w19, w19, lt  // lt = tstop
  45d9c4:	add	w19, w19, w23
  45d9c8:	ldr	x1, [sp, #72]
  45d9cc:	ldrb	w0, [x1]
  45d9d0:	cmp	w0, #0x2e
  45d9d4:	b.ne	45da1c <_obstack_memory_used@@Base+0x162c>  // b.any
  45d9d8:	add	x0, x1, #0x1
  45d9dc:	str	x0, [sp, #72]
  45d9e0:	ldrb	w2, [x1, #1]
  45d9e4:	cmp	w2, #0x2a
  45d9e8:	b.ne	45dacc <_obstack_memory_used@@Base+0x16dc>  // b.any
  45d9ec:	add	x1, x1, #0x2
  45d9f0:	str	x1, [sp, #72]
  45d9f4:	ldr	w1, [sp, #104]
  45d9f8:	ldr	x0, [sp, #80]
  45d9fc:	tbnz	w1, #31, 45dab0 <_obstack_memory_used@@Base+0x16c0>
  45da00:	add	x1, x0, #0xb
  45da04:	and	x1, x1, #0xfffffffffffffff8
  45da08:	str	x1, [sp, #80]
  45da0c:	ldr	w0, [x0]
  45da10:	cmp	w0, #0x0
  45da14:	cneg	w0, w0, lt  // lt = tstop
  45da18:	add	w19, w19, w0
  45da1c:	ldr	x24, [sp, #72]
  45da20:	mov	x0, x21
  45da24:	ldrb	w22, [x24], #1
  45da28:	mov	w1, w22
  45da2c:	bl	4032f0 <strchr@plt>
  45da30:	cbnz	x0, 45dadc <_obstack_memory_used@@Base+0x16ec>
  45da34:	add	w23, w19, #0x1e
  45da38:	cmp	w22, #0x78
  45da3c:	b.hi	45db34 <_obstack_memory_used@@Base+0x1744>  // b.pmore
  45da40:	cmp	w22, #0x57
  45da44:	b.hi	45dae4 <_obstack_memory_used@@Base+0x16f4>  // b.pmore
  45da48:	and	w22, w22, #0xfffffffd
  45da4c:	cmp	w22, #0x45
  45da50:	b.ne	45db34 <_obstack_memory_used@@Base+0x1744>  // b.any
  45da54:	ldr	w1, [sp, #108]
  45da58:	ldr	x0, [sp, #80]
  45da5c:	tbnz	w1, #31, 45db3c <_obstack_memory_used@@Base+0x174c>
  45da60:	add	x0, x0, #0xf
  45da64:	and	x0, x0, #0xfffffffffffffff8
  45da68:	str	x0, [sp, #80]
  45da6c:	b	45db4c <_obstack_memory_used@@Base+0x175c>
  45da70:	add	x19, x19, #0x1
  45da74:	str	x19, [sp, #72]
  45da78:	b	45d978 <_obstack_memory_used@@Base+0x1588>
  45da7c:	add	w2, w1, #0x8
  45da80:	str	w2, [sp, #104]
  45da84:	cmp	w2, #0x0
  45da88:	b.gt	45d9ac <_obstack_memory_used@@Base+0x15bc>
  45da8c:	ldr	x0, [sp, #88]
  45da90:	add	x0, x0, w1, sxtw
  45da94:	b	45d9b8 <_obstack_memory_used@@Base+0x15c8>
  45da98:	mov	x0, x19
  45da9c:	add	x1, sp, #0x48
  45daa0:	mov	w2, #0xa                   	// #10
  45daa4:	bl	402d40 <strtoul@plt>
  45daa8:	add	w19, w23, w0
  45daac:	b	45d9c8 <_obstack_memory_used@@Base+0x15d8>
  45dab0:	add	w2, w1, #0x8
  45dab4:	str	w2, [sp, #104]
  45dab8:	cmp	w2, #0x0
  45dabc:	b.gt	45da00 <_obstack_memory_used@@Base+0x1610>
  45dac0:	ldr	x0, [sp, #88]
  45dac4:	add	x0, x0, w1, sxtw
  45dac8:	b	45da0c <_obstack_memory_used@@Base+0x161c>
  45dacc:	add	x1, sp, #0x48
  45dad0:	mov	w2, #0xa                   	// #10
  45dad4:	bl	402d40 <strtoul@plt>
  45dad8:	b	45da18 <_obstack_memory_used@@Base+0x1628>
  45dadc:	str	x24, [sp, #72]
  45dae0:	b	45da1c <_obstack_memory_used@@Base+0x162c>
  45dae4:	sub	w22, w22, #0x58
  45dae8:	cmp	w22, #0x20
  45daec:	b.hi	45db34 <_obstack_memory_used@@Base+0x1744>  // b.pmore
  45daf0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45daf4:	add	x0, x0, #0x490
  45daf8:	ldrb	w0, [x0, w22, uxtw]
  45dafc:	adr	x1, 45db08 <_obstack_memory_used@@Base+0x1718>
  45db00:	add	x0, x1, w0, sxtb #2
  45db04:	br	x0
  45db08:	ldr	w0, [sp, #104]
  45db0c:	ldr	x1, [sp, #80]
  45db10:	tbnz	w0, #31, 45db24 <_obstack_memory_used@@Base+0x1734>
  45db14:	add	x1, x1, #0xb
  45db18:	and	x1, x1, #0xfffffffffffffff8
  45db1c:	str	x1, [sp, #80]
  45db20:	b	45db34 <_obstack_memory_used@@Base+0x1744>
  45db24:	add	w0, w0, #0x8
  45db28:	str	w0, [sp, #104]
  45db2c:	cmp	w0, #0x0
  45db30:	b.gt	45db14 <_obstack_memory_used@@Base+0x1724>
  45db34:	str	x24, [sp, #72]
  45db38:	b	45d940 <_obstack_memory_used@@Base+0x1550>
  45db3c:	add	w1, w1, #0x10
  45db40:	str	w1, [sp, #108]
  45db44:	cmp	w1, #0x0
  45db48:	b.gt	45da60 <_obstack_memory_used@@Base+0x1670>
  45db4c:	add	w23, w19, #0x151
  45db50:	b	45db34 <_obstack_memory_used@@Base+0x1744>
  45db54:	ldr	w1, [sp, #104]
  45db58:	ldr	x0, [sp, #80]
  45db5c:	tbnz	w1, #31, 45db7c <_obstack_memory_used@@Base+0x178c>
  45db60:	add	x1, x0, #0xf
  45db64:	and	x1, x1, #0xfffffffffffffff8
  45db68:	str	x1, [sp, #80]
  45db6c:	ldr	x0, [x0]
  45db70:	bl	402d50 <strlen@plt>
  45db74:	add	w23, w23, w0
  45db78:	b	45db34 <_obstack_memory_used@@Base+0x1744>
  45db7c:	add	w2, w1, #0x8
  45db80:	str	w2, [sp, #104]
  45db84:	cmp	w2, #0x0
  45db88:	b.gt	45db60 <_obstack_memory_used@@Base+0x1770>
  45db8c:	ldr	x0, [sp, #88]
  45db90:	add	x0, x0, w1, sxtw
  45db94:	b	45db6c <_obstack_memory_used@@Base+0x177c>
  45db98:	ldr	w0, [sp, #104]
  45db9c:	ldr	x1, [sp, #80]
  45dba0:	tbnz	w0, #31, 45dbac <_obstack_memory_used@@Base+0x17bc>
  45dba4:	add	x1, x1, #0xf
  45dba8:	b	45db18 <_obstack_memory_used@@Base+0x1728>
  45dbac:	add	w0, w0, #0x8
  45dbb0:	str	w0, [sp, #104]
  45dbb4:	cmp	w0, #0x0
  45dbb8:	b.gt	45dba4 <_obstack_memory_used@@Base+0x17b4>
  45dbbc:	b	45db34 <_obstack_memory_used@@Base+0x1744>
  45dbc0:	b	461928 <_obstack_memory_used@@Base+0x5538>
  45dbc4:	nop
  45dbc8:	b	461928 <_obstack_memory_used@@Base+0x5538>
  45dbcc:	nop
  45dbd0:	b	45dbc8 <_obstack_memory_used@@Base+0x17d8>
  45dbd4:	nop
  45dbd8:	stp	x29, x30, [sp, #-64]!
  45dbdc:	mov	x29, sp
  45dbe0:	str	x23, [sp, #48]
  45dbe4:	mov	x23, x0
  45dbe8:	ldarb	w0, [x0]
  45dbec:	tst	w0, #0xff
  45dbf0:	b.ne	45dc4c <_obstack_memory_used@@Base+0x185c>  // b.any
  45dbf4:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45dbf8:	ldr	x0, [x0, #3600]
  45dbfc:	cbz	x0, 45dc5c <_obstack_memory_used@@Base+0x186c>
  45dc00:	stp	x19, x20, [sp, #16]
  45dc04:	mov	w19, #0x100                 	// #256
  45dc08:	mov	w20, #0x1                   	// #1
  45dc0c:	stp	x21, x22, [sp, #32]
  45dc10:	mov	w21, w19
  45dc14:	ldaxr	w0, [x23]
  45dc18:	cbnz	w0, 45dc24 <_obstack_memory_used@@Base+0x1834>
  45dc1c:	stlxr	w1, w19, [x23]
  45dc20:	cbnz	w1, 45dc14 <_obstack_memory_used@@Base+0x1824>
  45dc24:	cmp	w0, #0x0
  45dc28:	b.ne	45dc84 <_obstack_memory_used@@Base+0x1894>  // b.any
  45dc2c:	mov	w0, #0x1                   	// #1
  45dc30:	ldp	x19, x20, [sp, #16]
  45dc34:	ldp	x21, x22, [sp, #32]
  45dc38:	ldr	x23, [sp, #48]
  45dc3c:	ldp	x29, x30, [sp], #64
  45dc40:	ret
  45dc44:	ldp	x19, x20, [sp, #16]
  45dc48:	ldp	x21, x22, [sp, #32]
  45dc4c:	mov	w0, #0x0                   	// #0
  45dc50:	ldr	x23, [sp, #48]
  45dc54:	ldp	x29, x30, [sp], #64
  45dc58:	ret
  45dc5c:	ldrb	w0, [x23]
  45dc60:	cbnz	w0, 45dc4c <_obstack_memory_used@@Base+0x185c>
  45dc64:	ldrb	w0, [x23, #1]
  45dc68:	cbnz	w0, 45dcfc <_obstack_memory_used@@Base+0x190c>
  45dc6c:	mov	w2, #0x1                   	// #1
  45dc70:	strb	w2, [x23, #1]
  45dc74:	mov	w0, #0x1                   	// #1
  45dc78:	ldr	x23, [sp, #48]
  45dc7c:	ldp	x29, x30, [sp], #64
  45dc80:	ret
  45dc84:	orr	w22, w19, #0x10000
  45dc88:	mov	w3, w0
  45dc8c:	cmp	w20, w3
  45dc90:	b.eq	45dc44 <_obstack_memory_used@@Base+0x1854>  // b.none
  45dc94:	cmp	w19, w3
  45dc98:	b.ne	45dcb8 <_obstack_memory_used@@Base+0x18c8>  // b.any
  45dc9c:	mov	w3, w22
  45dca0:	ldaxr	w2, [x23]
  45dca4:	cmp	w2, w0
  45dca8:	b.ne	45dcb4 <_obstack_memory_used@@Base+0x18c4>  // b.any
  45dcac:	stlxr	w1, w22, [x23]
  45dcb0:	cbnz	w1, 45dca0 <_obstack_memory_used@@Base+0x18b0>
  45dcb4:	b.ne	45dcec <_obstack_memory_used@@Base+0x18fc>  // b.any
  45dcb8:	mov	x1, x23
  45dcbc:	mov	w4, #0x0                   	// #0
  45dcc0:	mov	w2, #0x0                   	// #0
  45dcc4:	mov	x0, #0x62                  	// #98
  45dcc8:	bl	403540 <syscall@plt>
  45dccc:	ldaxr	w0, [x23]
  45dcd0:	cbnz	w0, 45dcdc <_obstack_memory_used@@Base+0x18ec>
  45dcd4:	stlxr	w1, w21, [x23]
  45dcd8:	cbnz	w1, 45dccc <_obstack_memory_used@@Base+0x18dc>
  45dcdc:	cmp	w0, #0x0
  45dce0:	mov	w3, w0
  45dce4:	b.eq	45dc2c <_obstack_memory_used@@Base+0x183c>  // b.none
  45dce8:	b	45dc8c <_obstack_memory_used@@Base+0x189c>
  45dcec:	cmp	w20, w2
  45dcf0:	b.eq	45dc44 <_obstack_memory_used@@Base+0x1854>  // b.none
  45dcf4:	cbnz	w2, 45dcb8 <_obstack_memory_used@@Base+0x18c8>
  45dcf8:	b	45dccc <_obstack_memory_used@@Base+0x18dc>
  45dcfc:	mov	x0, #0x8                   	// #8
  45dd00:	stp	x19, x20, [sp, #16]
  45dd04:	stp	x21, x22, [sp, #32]
  45dd08:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  45dd0c:	mov	x19, x0
  45dd10:	bl	45ddf0 <_obstack_memory_used@@Base+0x1a00>
  45dd14:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45dd18:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45dd1c:	mov	x0, x19
  45dd20:	ldr	x2, [x2, #3952]
  45dd24:	ldr	x1, [x1, #3640]
  45dd28:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  45dd2c:	nop
  45dd30:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45dd34:	ldr	x1, [x1, #3600]
  45dd38:	cbnz	x1, 45dd44 <_obstack_memory_used@@Base+0x1954>
  45dd3c:	strb	wzr, [x0, #1]
  45dd40:	ret
  45dd44:	ldaxr	w1, [x0]
  45dd48:	stlxr	w2, wzr, [x0]
  45dd4c:	cbnz	w2, 45dd44 <_obstack_memory_used@@Base+0x1954>
  45dd50:	tbz	w1, #16, 45dd40 <_obstack_memory_used@@Base+0x1950>
  45dd54:	mov	x1, x0
  45dd58:	mov	w3, #0x7fffffff            	// #2147483647
  45dd5c:	mov	w2, #0x1                   	// #1
  45dd60:	mov	x0, #0x62                  	// #98
  45dd64:	b	403540 <syscall@plt>
  45dd68:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45dd6c:	ldr	x1, [x1, #3600]
  45dd70:	cbz	x1, 45dd8c <_obstack_memory_used@@Base+0x199c>
  45dd74:	mov	w2, #0x1                   	// #1
  45dd78:	ldaxr	w1, [x0]
  45dd7c:	stlxr	w3, w2, [x0]
  45dd80:	cbnz	w3, 45dd78 <_obstack_memory_used@@Base+0x1988>
  45dd84:	tbnz	w1, #16, 45dd9c <_obstack_memory_used@@Base+0x19ac>
  45dd88:	ret
  45dd8c:	strb	wzr, [x0, #1]
  45dd90:	mov	w1, #0x1                   	// #1
  45dd94:	stlrb	w1, [x0]
  45dd98:	ret
  45dd9c:	mov	x1, x0
  45dda0:	mov	w3, #0x7fffffff            	// #2147483647
  45dda4:	mov	x0, #0x62                  	// #98
  45dda8:	b	403540 <syscall@plt>
  45ddac:	nop
  45ddb0:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45ddb4:	ldr	x1, [x1, #4048]
  45ddb8:	add	x1, x1, #0x10
  45ddbc:	str	x1, [x0]
  45ddc0:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  45ddc4:	nop
  45ddc8:	stp	x29, x30, [sp, #-32]!
  45ddcc:	mov	x29, sp
  45ddd0:	str	x19, [sp, #16]
  45ddd4:	mov	x19, x0
  45ddd8:	bl	45ddb0 <_obstack_memory_used@@Base+0x19c0>
  45dddc:	mov	x0, x19
  45dde0:	mov	x1, #0x8                   	// #8
  45dde4:	ldr	x19, [sp, #16]
  45dde8:	ldp	x29, x30, [sp], #32
  45ddec:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  45ddf0:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45ddf4:	ldr	x1, [x1, #4048]
  45ddf8:	add	x1, x1, #0x10
  45ddfc:	str	x1, [x0]
  45de00:	ret
  45de04:	nop
  45de08:	stp	x29, x30, [sp, #-32]!
  45de0c:	cmp	x0, #0x0
  45de10:	mov	x29, sp
  45de14:	str	x19, [sp, #16]
  45de18:	csinc	x19, x0, xzr, ne  // ne = any
  45de1c:	mov	x0, x19
  45de20:	bl	402f40 <malloc@plt>
  45de24:	cbz	x0, 45de34 <_obstack_memory_used@@Base+0x1a44>
  45de28:	ldr	x19, [sp, #16]
  45de2c:	ldp	x29, x30, [sp], #32
  45de30:	ret
  45de34:	bl	462d68 <_obstack_memory_used@@Base+0x6978>
  45de38:	cbz	x0, 45de44 <_obstack_memory_used@@Base+0x1a54>
  45de3c:	blr	x0
  45de40:	b	45de1c <_obstack_memory_used@@Base+0x1a2c>
  45de44:	mov	x0, #0x8                   	// #8
  45de48:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  45de4c:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45de50:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45de54:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45de58:	ldr	x3, [x3, #3912]
  45de5c:	ldr	x2, [x2, #3688]
  45de60:	add	x3, x3, #0x10
  45de64:	ldr	x1, [x1, #3656]
  45de68:	str	x3, [x0]
  45de6c:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  45de70:	b	45de08 <_obstack_memory_used@@Base+0x1a18>
  45de74:	nop
  45de78:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45de7c:	ldr	x1, [x1, #3944]
  45de80:	add	x1, x1, #0x10
  45de84:	str	x1, [x0]
  45de88:	b	4616e8 <_obstack_memory_used@@Base+0x52f8>
  45de8c:	nop
  45de90:	stp	x29, x30, [sp, #-32]!
  45de94:	mov	x29, sp
  45de98:	str	x19, [sp, #16]
  45de9c:	mov	x19, x0
  45dea0:	bl	45de78 <_obstack_memory_used@@Base+0x1a88>
  45dea4:	mov	x0, x19
  45dea8:	mov	x1, #0x18                  	// #24
  45deac:	ldr	x19, [sp, #16]
  45deb0:	ldp	x29, x30, [sp], #32
  45deb4:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  45deb8:	stp	x29, x30, [sp, #-64]!
  45debc:	cmp	x4, x2
  45dec0:	mov	x29, sp
  45dec4:	stp	x19, x20, [sp, #16]
  45dec8:	mov	x19, x0
  45decc:	mov	x20, x1
  45ded0:	b.eq	45def4 <_obstack_memory_used@@Base+0x1b04>  // b.none
  45ded4:	ldr	x0, [x19, #16]
  45ded8:	mov	x1, x20
  45dedc:	ldp	x19, x20, [sp, #16]
  45dee0:	ldr	x5, [x0]
  45dee4:	ldr	x5, [x5, #64]
  45dee8:	ldp	x29, x30, [sp], #64
  45deec:	mov	x16, x5
  45def0:	br	x16
  45def4:	ldr	x1, [x3, #8]
  45def8:	ldr	x0, [x0, #8]
  45defc:	cmp	x0, x1
  45df00:	b.eq	45df28 <_obstack_memory_used@@Base+0x1b38>  // b.none
  45df04:	ldrb	w5, [x0]
  45df08:	cmp	w5, #0x2a
  45df0c:	b.eq	45ded4 <_obstack_memory_used@@Base+0x1ae4>  // b.none
  45df10:	stp	x2, x3, [sp, #40]
  45df14:	str	x4, [sp, #56]
  45df18:	bl	403220 <strcmp@plt>
  45df1c:	ldp	x2, x3, [sp, #40]
  45df20:	ldr	x4, [sp, #56]
  45df24:	cbnz	w0, 45ded4 <_obstack_memory_used@@Base+0x1ae4>
  45df28:	mov	w0, #0x6                   	// #6
  45df2c:	ldp	x19, x20, [sp, #16]
  45df30:	ldp	x29, x30, [sp], #64
  45df34:	ret
  45df38:	stp	x29, x30, [sp, #-96]!
  45df3c:	mov	x29, sp
  45df40:	stp	x21, x22, [sp, #32]
  45df44:	mov	x22, x3
  45df48:	mov	x21, x1
  45df4c:	stp	x25, x26, [sp, #64]
  45df50:	mov	w26, w2
  45df54:	ldr	x25, [x0, #8]
  45df58:	stp	x19, x20, [sp, #16]
  45df5c:	mov	x19, x4
  45df60:	ldr	x3, [x3, #8]
  45df64:	stp	x23, x24, [sp, #48]
  45df68:	mov	x20, x7
  45df6c:	mov	x23, x6
  45df70:	cmp	x25, x3
  45df74:	b.eq	45dfa4 <_obstack_memory_used@@Base+0x1bb4>  // b.none
  45df78:	stp	x27, x28, [sp, #80]
  45df7c:	mov	x24, x5
  45df80:	mov	x27, x0
  45df84:	ldrb	w28, [x25]
  45df88:	cmp	w28, #0x2a
  45df8c:	b.eq	45dfe0 <_obstack_memory_used@@Base+0x1bf0>  // b.none
  45df90:	mov	x1, x3
  45df94:	mov	x0, x25
  45df98:	bl	403220 <strcmp@plt>
  45df9c:	cbnz	w0, 45dfe0 <_obstack_memory_used@@Base+0x1bf0>
  45dfa0:	ldp	x27, x28, [sp, #80]
  45dfa4:	str	x19, [x20]
  45dfa8:	str	w26, [x20, #8]
  45dfac:	tbnz	x21, #63, 45e030 <_obstack_memory_used@@Base+0x1c40>
  45dfb0:	add	x1, x19, x21
  45dfb4:	mov	w2, #0x6                   	// #6
  45dfb8:	cmp	x23, x1
  45dfbc:	mov	w0, #0x0                   	// #0
  45dfc0:	csinc	w2, w2, wzr, eq  // eq = none
  45dfc4:	str	w2, [x20, #16]
  45dfc8:	ldp	x19, x20, [sp, #16]
  45dfcc:	ldp	x21, x22, [sp, #32]
  45dfd0:	ldp	x23, x24, [sp, #48]
  45dfd4:	ldp	x25, x26, [sp, #64]
  45dfd8:	ldp	x29, x30, [sp], #96
  45dfdc:	ret
  45dfe0:	cmp	x19, x23
  45dfe4:	b.eq	45e048 <_obstack_memory_used@@Base+0x1c58>  // b.none
  45dfe8:	ldr	x0, [x27, #16]
  45dfec:	mov	x7, x20
  45dff0:	mov	x6, x23
  45dff4:	mov	x5, x24
  45dff8:	mov	x4, x19
  45dffc:	mov	x3, x22
  45e000:	ldr	x8, [x0]
  45e004:	mov	w2, w26
  45e008:	mov	x1, x21
  45e00c:	ldp	x19, x20, [sp, #16]
  45e010:	ldp	x21, x22, [sp, #32]
  45e014:	ldp	x23, x24, [sp, #48]
  45e018:	ldp	x25, x26, [sp, #64]
  45e01c:	ldp	x27, x28, [sp, #80]
  45e020:	ldp	x29, x30, [sp], #96
  45e024:	ldr	x8, [x8, #56]
  45e028:	mov	x16, x8
  45e02c:	br	x16
  45e030:	cmn	x21, #0x2
  45e034:	mov	w0, #0x0                   	// #0
  45e038:	b.ne	45dfc8 <_obstack_memory_used@@Base+0x1bd8>  // b.any
  45e03c:	mov	w1, #0x1                   	// #1
  45e040:	str	w1, [x20, #16]
  45e044:	b	45dfc8 <_obstack_memory_used@@Base+0x1bd8>
  45e048:	ldr	x1, [x24, #8]
  45e04c:	cmp	x25, x1
  45e050:	b.eq	45e068 <_obstack_memory_used@@Base+0x1c78>  // b.none
  45e054:	cmp	w28, #0x2a
  45e058:	b.eq	45dfe8 <_obstack_memory_used@@Base+0x1bf8>  // b.none
  45e05c:	mov	x0, x25
  45e060:	bl	403220 <strcmp@plt>
  45e064:	cbnz	w0, 45dfe8 <_obstack_memory_used@@Base+0x1bf8>
  45e068:	mov	w0, #0x0                   	// #0
  45e06c:	ldp	x27, x28, [sp, #80]
  45e070:	str	w26, [x20, #12]
  45e074:	b	45dfc8 <_obstack_memory_used@@Base+0x1bd8>
  45e078:	stp	x29, x30, [sp, #-48]!
  45e07c:	mov	x29, sp
  45e080:	stp	x19, x20, [sp, #16]
  45e084:	mov	x19, x1
  45e088:	mov	x20, x2
  45e08c:	stp	x21, x22, [sp, #32]
  45e090:	mov	x22, x0
  45e094:	mov	x21, x3
  45e098:	bl	461808 <_obstack_memory_used@@Base+0x5418>
  45e09c:	tst	w0, #0xff
  45e0a0:	b.ne	45e0d0 <_obstack_memory_used@@Base+0x1ce0>  // b.any
  45e0a4:	ldr	x0, [x22, #16]
  45e0a8:	mov	x3, x21
  45e0ac:	mov	x2, x20
  45e0b0:	mov	x1, x19
  45e0b4:	ldp	x19, x20, [sp, #16]
  45e0b8:	ldr	x4, [x0]
  45e0bc:	ldp	x21, x22, [sp, #32]
  45e0c0:	ldp	x29, x30, [sp], #48
  45e0c4:	ldr	x4, [x4, #48]
  45e0c8:	mov	x16, x4
  45e0cc:	br	x16
  45e0d0:	ldp	x19, x20, [sp, #16]
  45e0d4:	ldp	x21, x22, [sp, #32]
  45e0d8:	ldp	x29, x30, [sp], #48
  45e0dc:	ret
  45e0e0:	ret
  45e0e4:	nop
  45e0e8:	mov	w0, #0x0                   	// #0
  45e0ec:	ret
  45e0f0:	mov	w0, #0x0                   	// #0
  45e0f4:	ret
  45e0f8:	stp	x29, x30, [sp, #-32]!
  45e0fc:	mov	x29, sp
  45e100:	str	x19, [sp, #16]
  45e104:	mov	x19, x0
  45e108:	bl	45e0e0 <_obstack_memory_used@@Base+0x1cf0>
  45e10c:	mov	x0, x19
  45e110:	mov	x1, #0x10                  	// #16
  45e114:	ldr	x19, [sp, #16]
  45e118:	ldp	x29, x30, [sp], #32
  45e11c:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  45e120:	ldr	x2, [x0, #8]
  45e124:	ldr	x1, [x1, #8]
  45e128:	cmp	x2, x1
  45e12c:	b.eq	45e164 <_obstack_memory_used@@Base+0x1d74>  // b.none
  45e130:	ldrb	w3, [x2]
  45e134:	mov	w0, #0x0                   	// #0
  45e138:	cmp	w3, #0x2a
  45e13c:	b.eq	45e160 <_obstack_memory_used@@Base+0x1d70>  // b.none
  45e140:	stp	x29, x30, [sp, #-16]!
  45e144:	mov	x0, x2
  45e148:	mov	x29, sp
  45e14c:	bl	403220 <strcmp@plt>
  45e150:	cmp	w0, #0x0
  45e154:	cset	w0, eq  // eq = none
  45e158:	ldp	x29, x30, [sp], #16
  45e15c:	ret
  45e160:	ret
  45e164:	mov	w0, #0x1                   	// #1
  45e168:	ret
  45e16c:	nop
  45e170:	stp	x29, x30, [sp, #-288]!
  45e174:	mov	x29, sp
  45e178:	str	x19, [sp, #16]
  45e17c:	mov	x19, x0
  45e180:	str	q0, [x29, #96]
  45e184:	str	q1, [x29, #112]
  45e188:	str	q2, [x29, #128]
  45e18c:	str	q3, [x29, #144]
  45e190:	str	q4, [x29, #160]
  45e194:	str	q5, [x29, #176]
  45e198:	str	q6, [x29, #192]
  45e19c:	str	q7, [x29, #208]
  45e1a0:	stp	x1, x2, [x29, #232]
  45e1a4:	stp	x3, x4, [x29, #248]
  45e1a8:	stp	x5, x6, [x29, #264]
  45e1ac:	str	x7, [x29, #280]
  45e1b0:	bl	402d50 <strlen@plt>
  45e1b4:	add	x5, x29, #0xe0
  45e1b8:	add	x2, x29, #0x120
  45e1bc:	mov	w4, #0xffffffc8            	// #-56
  45e1c0:	mov	w3, #0xffffff80            	// #-128
  45e1c4:	stp	x2, x2, [x29, #64]
  45e1c8:	add	x1, x0, #0x20f
  45e1cc:	and	x1, x1, #0xfffffffffffffff0
  45e1d0:	str	x5, [x29, #80]
  45e1d4:	sub	sp, sp, x1
  45e1d8:	stp	w4, w3, [x29, #88]
  45e1dc:	add	x1, x0, #0x200
  45e1e0:	ldp	x6, x7, [x29, #64]
  45e1e4:	mov	x2, x19
  45e1e8:	ldp	x4, x5, [x29, #80]
  45e1ec:	add	x3, x29, #0x20
  45e1f0:	mov	x19, sp
  45e1f4:	stp	x6, x7, [x29, #32]
  45e1f8:	mov	x0, x19
  45e1fc:	stp	x4, x5, [x29, #48]
  45e200:	bl	45e380 <_obstack_memory_used@@Base+0x1f90>
  45e204:	mov	x0, #0x10                  	// #16
  45e208:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  45e20c:	mov	x1, x19
  45e210:	mov	x19, x0
  45e214:	bl	463580 <_obstack_memory_used@@Base+0x7190>
  45e218:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45e21c:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  45e220:	mov	x0, x19
  45e224:	ldr	x2, [x2, #3632]
  45e228:	ldr	x1, [x1, #3664]
  45e22c:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  45e230:	mov	x1, x0
  45e234:	mov	x0, x19
  45e238:	mov	x19, x1
  45e23c:	bl	461d00 <_obstack_memory_used@@Base+0x5910>
  45e240:	mov	x0, x19
  45e244:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  45e248:	stp	x29, x30, [sp, #-144]!
  45e24c:	adrp	x3, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45e250:	add	x3, x3, #0x518
  45e254:	mov	x29, sp
  45e258:	stp	x19, x20, [sp, #16]
  45e25c:	mov	x20, x1
  45e260:	sub	x20, x20, x0
  45e264:	mov	x1, x0
  45e268:	add	x0, x20, #0x78
  45e26c:	and	x0, x0, #0xfffffffffffffff0
  45e270:	mov	x2, x20
  45e274:	ldp	x14, x15, [x3]
  45e278:	sub	sp, sp, x0
  45e27c:	ldp	x12, x13, [x3, #16]
  45e280:	mov	x19, sp
  45e284:	ldp	x10, x11, [x3, #32]
  45e288:	add	x20, x19, x20
  45e28c:	ldp	x8, x9, [x3, #48]
  45e290:	stp	x14, x15, [x19]
  45e294:	ldrb	w0, [x3, #104]
  45e298:	ldp	x6, x7, [x3, #64]
  45e29c:	stp	x12, x13, [x19, #16]
  45e2a0:	ldp	x4, x5, [x3, #80]
  45e2a4:	stp	x14, x15, [x29, #32]
  45e2a8:	ldr	x3, [x3, #96]
  45e2ac:	stp	x10, x11, [x19, #32]
  45e2b0:	stp	x12, x13, [x29, #48]
  45e2b4:	stp	x8, x9, [x19, #48]
  45e2b8:	stp	x10, x11, [x29, #64]
  45e2bc:	stp	x6, x7, [x19, #64]
  45e2c0:	stp	x8, x9, [x29, #80]
  45e2c4:	stp	x4, x5, [x19, #80]
  45e2c8:	stp	x6, x7, [x29, #96]
  45e2cc:	str	x3, [x19, #96]
  45e2d0:	stp	x4, x5, [x29, #112]
  45e2d4:	str	x3, [x29, #128]
  45e2d8:	strb	w0, [x29, #136]
  45e2dc:	add	x0, x19, #0x68
  45e2e0:	bl	402cd0 <memcpy@plt>
  45e2e4:	strb	wzr, [x20, #104]
  45e2e8:	mov	x0, x19
  45e2ec:	bl	4036fc <ferror@plt+0x12c>
  45e2f0:	stp	x29, x30, [sp, #-32]!
  45e2f4:	adrp	x6, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45e2f8:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
  45e2fc:	mov	x29, sp
  45e300:	str	x19, [sp, #16]
  45e304:	sub	sp, sp, #0x20
  45e308:	mov	x8, sp
  45e30c:	add	x6, x6, #0x588
  45e310:	add	x19, x8, #0x18
  45e314:	movk	x7, #0xcccd
  45e318:	mov	x5, x19
  45e31c:	nop
  45e320:	umulh	x3, x2, x7
  45e324:	cmp	x2, #0x9
  45e328:	lsr	x3, x3, #3
  45e32c:	add	x4, x3, x3, lsl #2
  45e330:	sub	x4, x2, x4, lsl #1
  45e334:	mov	x2, x3
  45e338:	ldrb	w3, [x6, x4]
  45e33c:	strb	w3, [x5, #-1]!
  45e340:	b.hi	45e320 <_obstack_memory_used@@Base+0x1f30>  // b.pmore
  45e344:	sub	x19, x19, x5
  45e348:	cmp	x19, x1
  45e34c:	b.hi	45e374 <_obstack_memory_used@@Base+0x1f84>  // b.pmore
  45e350:	sub	x1, x8, x19
  45e354:	mov	x2, x19
  45e358:	add	x1, x1, #0x18
  45e35c:	bl	402cd0 <memcpy@plt>
  45e360:	mov	w0, w19
  45e364:	mov	sp, x29
  45e368:	ldr	x19, [sp, #16]
  45e36c:	ldp	x29, x30, [sp], #32
  45e370:	ret
  45e374:	mov	w0, #0xffffffff            	// #-1
  45e378:	b	45e364 <_obstack_memory_used@@Base+0x1f74>
  45e37c:	nop
  45e380:	stp	x29, x30, [sp, #-80]!
  45e384:	sub	x1, x1, #0x1
  45e388:	mov	x29, sp
  45e38c:	stp	x19, x20, [sp, #16]
  45e390:	mov	x20, x2
  45e394:	mov	x19, x0
  45e398:	stp	x21, x22, [sp, #32]
  45e39c:	add	x21, x0, x1
  45e3a0:	ldr	w22, [x3, #24]
  45e3a4:	stp	x23, x24, [sp, #48]
  45e3a8:	mov	x23, x0
  45e3ac:	ldr	x24, [x3]
  45e3b0:	str	x25, [sp, #64]
  45e3b4:	ldr	x25, [x3, #8]
  45e3b8:	ldrb	w2, [x2]
  45e3bc:	cbz	w2, 45e52c <_obstack_memory_used@@Base+0x213c>
  45e3c0:	cmp	x0, x21
  45e3c4:	b.cs	45e3ec <_obstack_memory_used@@Base+0x1ffc>  // b.hs, b.nlast
  45e3c8:	cmp	w2, #0x25
  45e3cc:	b.eq	45e3f8 <_obstack_memory_used@@Base+0x2008>  // b.none
  45e3d0:	ldrb	w1, [x20]
  45e3d4:	add	x20, x20, #0x1
  45e3d8:	strb	w1, [x19], #1
  45e3dc:	ldrb	w2, [x20]
  45e3e0:	cbz	w2, 45e460 <_obstack_memory_used@@Base+0x2070>
  45e3e4:	cmp	x19, x21
  45e3e8:	b.cc	45e3c8 <_obstack_memory_used@@Base+0x1fd8>  // b.lo, b.ul, b.last
  45e3ec:	mov	x1, x19
  45e3f0:	mov	x0, x23
  45e3f4:	bl	45e248 <_obstack_memory_used@@Base+0x1e58>
  45e3f8:	ldrb	w1, [x20, #1]
  45e3fc:	cmp	w1, #0x73
  45e400:	b.eq	45e480 <_obstack_memory_used@@Base+0x2090>  // b.none
  45e404:	cmp	w1, #0x7a
  45e408:	b.eq	45e41c <_obstack_memory_used@@Base+0x202c>  // b.none
  45e40c:	cmp	w1, #0x25
  45e410:	b.ne	45e3d0 <_obstack_memory_used@@Base+0x1fe0>  // b.any
  45e414:	add	x20, x20, #0x1
  45e418:	b	45e3d4 <_obstack_memory_used@@Base+0x1fe4>
  45e41c:	ldrb	w0, [x20, #2]
  45e420:	cmp	w0, #0x75
  45e424:	b.ne	45e3d0 <_obstack_memory_used@@Base+0x1fe0>  // b.any
  45e428:	sub	x1, x21, x19
  45e42c:	tbnz	w22, #31, 45e4f0 <_obstack_memory_used@@Base+0x2100>
  45e430:	add	x2, x24, #0xf
  45e434:	mov	x0, x24
  45e438:	and	x24, x2, #0xfffffffffffffff8
  45e43c:	ldr	x2, [x0]
  45e440:	mov	x0, x19
  45e444:	bl	45e2f0 <_obstack_memory_used@@Base+0x1f00>
  45e448:	cmp	w0, #0x0
  45e44c:	b.le	45e3ec <_obstack_memory_used@@Base+0x1ffc>
  45e450:	ldrb	w2, [x20, #3]
  45e454:	add	x20, x20, #0x3
  45e458:	add	x19, x19, w0, sxtw
  45e45c:	cbnz	w2, 45e3e4 <_obstack_memory_used@@Base+0x1ff4>
  45e460:	sub	w0, w19, w23
  45e464:	strb	wzr, [x19]
  45e468:	ldp	x19, x20, [sp, #16]
  45e46c:	ldp	x21, x22, [sp, #32]
  45e470:	ldp	x23, x24, [sp, #48]
  45e474:	ldr	x25, [sp, #64]
  45e478:	ldp	x29, x30, [sp], #80
  45e47c:	ret
  45e480:	tbnz	w22, #31, 45e4c4 <_obstack_memory_used@@Base+0x20d4>
  45e484:	add	x1, x24, #0xf
  45e488:	mov	x0, x24
  45e48c:	and	x24, x1, #0xfffffffffffffff8
  45e490:	ldr	x2, [x0]
  45e494:	ldrb	w1, [x2]
  45e498:	cbz	w1, 45e4bc <_obstack_memory_used@@Base+0x20cc>
  45e49c:	cmp	x21, x19
  45e4a0:	b.hi	45e4b0 <_obstack_memory_used@@Base+0x20c0>  // b.pmore
  45e4a4:	b	45e510 <_obstack_memory_used@@Base+0x2120>
  45e4a8:	cmp	x21, x19
  45e4ac:	b.eq	45e514 <_obstack_memory_used@@Base+0x2124>  // b.none
  45e4b0:	strb	w1, [x19], #1
  45e4b4:	ldrb	w1, [x2, #1]!
  45e4b8:	cbnz	w1, 45e4a8 <_obstack_memory_used@@Base+0x20b8>
  45e4bc:	add	x20, x20, #0x2
  45e4c0:	b	45e3dc <_obstack_memory_used@@Base+0x1fec>
  45e4c4:	add	w1, w22, #0x8
  45e4c8:	cmp	w1, #0x0
  45e4cc:	b.le	45e4e4 <_obstack_memory_used@@Base+0x20f4>
  45e4d0:	add	x2, x24, #0xf
  45e4d4:	mov	x0, x24
  45e4d8:	mov	w22, w1
  45e4dc:	and	x24, x2, #0xfffffffffffffff8
  45e4e0:	b	45e490 <_obstack_memory_used@@Base+0x20a0>
  45e4e4:	add	x0, x25, w22, sxtw
  45e4e8:	mov	w22, w1
  45e4ec:	b	45e490 <_obstack_memory_used@@Base+0x20a0>
  45e4f0:	add	w2, w22, #0x8
  45e4f4:	cmp	w2, #0x0
  45e4f8:	b.le	45e520 <_obstack_memory_used@@Base+0x2130>
  45e4fc:	add	x3, x24, #0xf
  45e500:	mov	x0, x24
  45e504:	mov	w22, w2
  45e508:	and	x24, x3, #0xfffffffffffffff8
  45e50c:	b	45e43c <_obstack_memory_used@@Base+0x204c>
  45e510:	mov	x21, x19
  45e514:	mov	x1, x21
  45e518:	mov	x0, x23
  45e51c:	bl	45e248 <_obstack_memory_used@@Base+0x1e58>
  45e520:	add	x0, x25, w22, sxtw
  45e524:	mov	w22, w2
  45e528:	b	45e43c <_obstack_memory_used@@Base+0x204c>
  45e52c:	mov	w0, #0x0                   	// #0
  45e530:	b	45e464 <_obstack_memory_used@@Base+0x2074>
  45e534:	nop
  45e538:	str	x1, [x0]
  45e53c:	ret
  45e540:	str	x1, [x0, #8]
  45e544:	ret
  45e548:	ldr	x0, [x0]
  45e54c:	ret
  45e550:	add	x0, x0, #0x10
  45e554:	ret
  45e558:	add	x0, x0, #0x10
  45e55c:	ret
  45e560:	str	x1, [x0, #16]
  45e564:	ret
  45e568:	ldr	x2, [x0]
  45e56c:	str	x1, [x0, #8]
  45e570:	strb	wzr, [x2, x1]
  45e574:	ret
  45e578:	ldr	x1, [x0], #16
  45e57c:	cmp	x1, x0
  45e580:	cset	w0, eq  // eq = none
  45e584:	ret
  45e588:	ldr	x0, [x1]
  45e58c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  45e590:	cmp	x0, x3
  45e594:	b.hi	45e5d0 <_obstack_memory_used@@Base+0x21e0>  // b.pmore
  45e598:	cmp	x0, x2
  45e59c:	b.ls	45e5c8 <_obstack_memory_used@@Base+0x21d8>  // b.plast
  45e5a0:	cmp	x0, x2, lsl #1
  45e5a4:	lsl	x2, x2, #1
  45e5a8:	b.cs	45e5c8 <_obstack_memory_used@@Base+0x21d8>  // b.hs, b.nlast
  45e5ac:	cmp	x2, x3
  45e5b0:	b.ls	45e5c0 <_obstack_memory_used@@Base+0x21d0>  // b.plast
  45e5b4:	str	x3, [x1]
  45e5b8:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  45e5bc:	b	45de08 <_obstack_memory_used@@Base+0x1a18>
  45e5c0:	mov	x0, x2
  45e5c4:	str	x2, [x1]
  45e5c8:	add	x0, x0, #0x1
  45e5cc:	b	45de08 <_obstack_memory_used@@Base+0x1a18>
  45e5d0:	stp	x29, x30, [sp, #-16]!
  45e5d4:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45e5d8:	add	x0, x0, #0x598
  45e5dc:	mov	x29, sp
  45e5e0:	bl	4037f8 <ferror@plt+0x228>
  45e5e4:	nop
  45e5e8:	mov	x1, x0
  45e5ec:	ldr	x0, [x1], #16
  45e5f0:	cmp	x0, x1
  45e5f4:	b.eq	45e5fc <_obstack_memory_used@@Base+0x220c>  // b.none
  45e5f8:	b	461928 <_obstack_memory_used@@Base+0x5538>
  45e5fc:	ret
  45e600:	ldr	x0, [x0]
  45e604:	b	461928 <_obstack_memory_used@@Base+0x5538>
  45e608:	stp	x29, x30, [sp, #-48]!
  45e60c:	cmp	x1, #0xf
  45e610:	mov	x29, sp
  45e614:	stp	x19, x20, [sp, #16]
  45e618:	and	w20, w2, #0xff
  45e61c:	mov	x19, x0
  45e620:	str	x1, [sp, #40]
  45e624:	b.hi	45e660 <_obstack_memory_used@@Base+0x2270>  // b.pmore
  45e628:	ldr	x0, [x0]
  45e62c:	cbz	x1, 45e64c <_obstack_memory_used@@Base+0x225c>
  45e630:	cmp	x1, #0x1
  45e634:	b.eq	45e67c <_obstack_memory_used@@Base+0x228c>  // b.none
  45e638:	mov	x2, x1
  45e63c:	mov	w1, w20
  45e640:	bl	403000 <memset@plt>
  45e644:	ldr	x0, [x19]
  45e648:	ldr	x1, [sp, #40]
  45e64c:	str	x1, [x19, #8]
  45e650:	strb	wzr, [x0, x1]
  45e654:	ldp	x19, x20, [sp, #16]
  45e658:	ldp	x29, x30, [sp], #48
  45e65c:	ret
  45e660:	add	x1, sp, #0x28
  45e664:	mov	x2, #0x0                   	// #0
  45e668:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  45e66c:	str	x0, [x19]
  45e670:	ldr	x1, [sp, #40]
  45e674:	str	x1, [x19, #16]
  45e678:	b	45e62c <_obstack_memory_used@@Base+0x223c>
  45e67c:	strb	w20, [x0]
  45e680:	ldr	x0, [x19]
  45e684:	ldr	x1, [sp, #40]
  45e688:	str	x1, [x19, #8]
  45e68c:	strb	wzr, [x0, x1]
  45e690:	ldp	x19, x20, [sp, #16]
  45e694:	ldp	x29, x30, [sp], #48
  45e698:	ret
  45e69c:	nop
  45e6a0:	b	45e608 <_obstack_memory_used@@Base+0x2218>
  45e6a4:	nop
  45e6a8:	ret
  45e6ac:	nop
  45e6b0:	ret
  45e6b4:	nop
  45e6b8:	ldr	x3, [x0, #8]
  45e6bc:	cmp	x1, x3
  45e6c0:	b.hi	45e6cc <_obstack_memory_used@@Base+0x22dc>  // b.pmore
  45e6c4:	mov	x0, x1
  45e6c8:	ret
  45e6cc:	mov	x4, x2
  45e6d0:	stp	x29, x30, [sp, #-16]!
  45e6d4:	mov	x2, x1
  45e6d8:	mov	x29, sp
  45e6dc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45e6e0:	mov	x1, x4
  45e6e4:	add	x0, x0, #0x5b0
  45e6e8:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45e6ec:	nop
  45e6f0:	ldr	x0, [x0, #8]
  45e6f4:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
  45e6f8:	add	x1, x1, x4
  45e6fc:	sub	x1, x1, x0
  45e700:	cmp	x1, x2
  45e704:	b.cc	45e70c <_obstack_memory_used@@Base+0x231c>  // b.lo, b.ul, b.last
  45e708:	ret
  45e70c:	stp	x29, x30, [sp, #-16]!
  45e710:	mov	x0, x3
  45e714:	mov	x29, sp
  45e718:	bl	4037f8 <ferror@plt+0x228>
  45e71c:	nop
  45e720:	ldr	x0, [x0, #8]
  45e724:	sub	x0, x0, x1
  45e728:	cmp	x0, x2
  45e72c:	csel	x0, x0, x2, ls  // ls = plast
  45e730:	ret
  45e734:	nop
  45e738:	ldr	x2, [x0]
  45e73c:	cmp	x2, x1
  45e740:	b.hi	45e758 <_obstack_memory_used@@Base+0x2368>  // b.pmore
  45e744:	ldr	x0, [x0, #8]
  45e748:	add	x2, x2, x0
  45e74c:	cmp	x2, x1
  45e750:	cset	w0, cc  // cc = lo, ul, last
  45e754:	ret
  45e758:	mov	w0, #0x1                   	// #1
  45e75c:	ret
  45e760:	cmp	x2, #0x1
  45e764:	mov	x4, x0
  45e768:	b.eq	45e778 <_obstack_memory_used@@Base+0x2388>  // b.none
  45e76c:	cbnz	x2, 45e774 <_obstack_memory_used@@Base+0x2384>
  45e770:	ret
  45e774:	b	402cd0 <memcpy@plt>
  45e778:	ldrb	w0, [x1]
  45e77c:	strb	w0, [x4]
  45e780:	ret
  45e784:	nop
  45e788:	cmp	x2, #0x1
  45e78c:	mov	x4, x0
  45e790:	b.eq	45e7a0 <_obstack_memory_used@@Base+0x23b0>  // b.none
  45e794:	cbnz	x2, 45e79c <_obstack_memory_used@@Base+0x23ac>
  45e798:	ret
  45e79c:	b	402ce0 <memmove@plt>
  45e7a0:	ldrb	w0, [x1]
  45e7a4:	strb	w0, [x4]
  45e7a8:	ret
  45e7ac:	nop
  45e7b0:	mov	x3, x1
  45e7b4:	and	w1, w2, #0xff
  45e7b8:	cmp	x3, #0x1
  45e7bc:	b.eq	45e7d0 <_obstack_memory_used@@Base+0x23e0>  // b.none
  45e7c0:	cbnz	x3, 45e7c8 <_obstack_memory_used@@Base+0x23d8>
  45e7c4:	ret
  45e7c8:	mov	x2, x3
  45e7cc:	b	403000 <memset@plt>
  45e7d0:	strb	w1, [x0]
  45e7d4:	ret
  45e7d8:	sub	x2, x2, x1
  45e7dc:	mov	x4, x0
  45e7e0:	cmp	x2, #0x1
  45e7e4:	b.eq	45e7f4 <_obstack_memory_used@@Base+0x2404>  // b.none
  45e7e8:	cbnz	x2, 45e7f0 <_obstack_memory_used@@Base+0x2400>
  45e7ec:	ret
  45e7f0:	b	402cd0 <memcpy@plt>
  45e7f4:	ldrb	w0, [x1]
  45e7f8:	strb	w0, [x4]
  45e7fc:	ret
  45e800:	sub	x2, x2, x1
  45e804:	mov	x4, x0
  45e808:	cmp	x2, #0x1
  45e80c:	b.eq	45e81c <_obstack_memory_used@@Base+0x242c>  // b.none
  45e810:	cbnz	x2, 45e818 <_obstack_memory_used@@Base+0x2428>
  45e814:	ret
  45e818:	b	402cd0 <memcpy@plt>
  45e81c:	ldrb	w0, [x1]
  45e820:	strb	w0, [x4]
  45e824:	ret
  45e828:	sub	x2, x2, x1
  45e82c:	mov	x4, x0
  45e830:	cmp	x2, #0x1
  45e834:	b.eq	45e844 <_obstack_memory_used@@Base+0x2454>  // b.none
  45e838:	cbnz	x2, 45e840 <_obstack_memory_used@@Base+0x2450>
  45e83c:	ret
  45e840:	b	402cd0 <memcpy@plt>
  45e844:	ldrb	w0, [x1]
  45e848:	strb	w0, [x4]
  45e84c:	ret
  45e850:	sub	x2, x2, x1
  45e854:	mov	x4, x0
  45e858:	cmp	x2, #0x1
  45e85c:	b.eq	45e86c <_obstack_memory_used@@Base+0x247c>  // b.none
  45e860:	cbnz	x2, 45e868 <_obstack_memory_used@@Base+0x2478>
  45e864:	ret
  45e868:	b	402cd0 <memcpy@plt>
  45e86c:	ldrb	w0, [x1]
  45e870:	strb	w0, [x4]
  45e874:	ret
  45e878:	sub	x0, x0, x1
  45e87c:	mov	x2, #0x7fffffff            	// #2147483647
  45e880:	cmp	x0, x2
  45e884:	b.gt	45e898 <_obstack_memory_used@@Base+0x24a8>
  45e888:	mov	x2, #0xffffffff80000000    	// #-2147483648
  45e88c:	cmp	x0, x2
  45e890:	csel	w0, w2, w0, lt  // lt = tstop
  45e894:	ret
  45e898:	mov	w0, w2
  45e89c:	ret
  45e8a0:	cmp	x0, x1
  45e8a4:	b.eq	45e95c <_obstack_memory_used@@Base+0x256c>  // b.none
  45e8a8:	stp	x29, x30, [sp, #-80]!
  45e8ac:	mov	x29, sp
  45e8b0:	stp	x21, x22, [sp, #32]
  45e8b4:	ldr	x21, [x1, #8]
  45e8b8:	str	x23, [sp, #48]
  45e8bc:	mov	x23, x0
  45e8c0:	stp	x19, x20, [sp, #16]
  45e8c4:	mov	x19, x0
  45e8c8:	mov	x20, x1
  45e8cc:	ldr	x22, [x23], #16
  45e8d0:	cmp	x23, x22
  45e8d4:	b.eq	45e960 <_obstack_memory_used@@Base+0x2570>  // b.none
  45e8d8:	ldr	x2, [x0, #16]
  45e8dc:	cmp	x2, x21
  45e8e0:	b.cc	45e920 <_obstack_memory_used@@Base+0x2530>  // b.lo, b.ul, b.last
  45e8e4:	cbz	x21, 45e904 <_obstack_memory_used@@Base+0x2514>
  45e8e8:	cmp	x21, #0x1
  45e8ec:	ldr	x1, [x20]
  45e8f0:	b.eq	45e968 <_obstack_memory_used@@Base+0x2578>  // b.none
  45e8f4:	mov	x0, x22
  45e8f8:	mov	x2, x21
  45e8fc:	bl	402cd0 <memcpy@plt>
  45e900:	ldr	x22, [x19]
  45e904:	str	x21, [x19, #8]
  45e908:	strb	wzr, [x22, x21]
  45e90c:	ldp	x19, x20, [sp, #16]
  45e910:	ldp	x21, x22, [sp, #32]
  45e914:	ldr	x23, [sp, #48]
  45e918:	ldp	x29, x30, [sp], #80
  45e91c:	ret
  45e920:	add	x1, sp, #0x48
  45e924:	mov	x0, x19
  45e928:	str	x21, [sp, #72]
  45e92c:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  45e930:	ldr	x1, [x19]
  45e934:	mov	x22, x0
  45e938:	cmp	x23, x1
  45e93c:	b.eq	45e948 <_obstack_memory_used@@Base+0x2558>  // b.none
  45e940:	mov	x0, x1
  45e944:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  45e948:	ldr	x0, [sp, #72]
  45e94c:	str	x22, [x19]
  45e950:	str	x0, [x19, #16]
  45e954:	cbz	x21, 45e904 <_obstack_memory_used@@Base+0x2514>
  45e958:	b	45e8e8 <_obstack_memory_used@@Base+0x24f8>
  45e95c:	ret
  45e960:	mov	x2, #0xf                   	// #15
  45e964:	b	45e8dc <_obstack_memory_used@@Base+0x24ec>
  45e968:	ldrb	w0, [x1]
  45e96c:	strb	w0, [x22]
  45e970:	str	x21, [x19, #8]
  45e974:	ldr	x22, [x19]
  45e978:	strb	wzr, [x22, x21]
  45e97c:	ldp	x19, x20, [sp, #16]
  45e980:	ldp	x21, x22, [sp, #32]
  45e984:	ldr	x23, [sp, #48]
  45e988:	ldp	x29, x30, [sp], #80
  45e98c:	ret
  45e990:	stp	x29, x30, [sp, #-96]!
  45e994:	mov	x29, sp
  45e998:	stp	x23, x24, [sp, #48]
  45e99c:	mov	x24, x0
  45e9a0:	stp	x21, x22, [sp, #32]
  45e9a4:	mov	x21, x4
  45e9a8:	ldr	x22, [x0, #8]
  45e9ac:	stp	x19, x20, [sp, #16]
  45e9b0:	mov	x19, x0
  45e9b4:	sub	x0, x4, x2
  45e9b8:	stp	x25, x26, [sp, #64]
  45e9bc:	add	x0, x0, x22
  45e9c0:	ldr	x4, [x24], #16
  45e9c4:	str	x0, [sp, #88]
  45e9c8:	add	x25, x1, x2
  45e9cc:	mov	x20, x1
  45e9d0:	mov	x26, x3
  45e9d4:	cmp	x24, x4
  45e9d8:	sub	x22, x22, x25
  45e9dc:	b.eq	45eab4 <_obstack_memory_used@@Base+0x26c4>  // b.none
  45e9e0:	ldr	x2, [x19, #16]
  45e9e4:	add	x1, sp, #0x58
  45e9e8:	mov	x0, x19
  45e9ec:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  45e9f0:	mov	x23, x0
  45e9f4:	cbz	x20, 45ea0c <_obstack_memory_used@@Base+0x261c>
  45e9f8:	cmp	x20, #0x1
  45e9fc:	ldr	x1, [x19]
  45ea00:	b.eq	45ea9c <_obstack_memory_used@@Base+0x26ac>  // b.none
  45ea04:	mov	x2, x20
  45ea08:	bl	402cd0 <memcpy@plt>
  45ea0c:	cmp	x26, #0x0
  45ea10:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  45ea14:	b.eq	45ea30 <_obstack_memory_used@@Base+0x2640>  // b.none
  45ea18:	cmp	x21, #0x1
  45ea1c:	add	x0, x23, x20
  45ea20:	b.eq	45eaa8 <_obstack_memory_used@@Base+0x26b8>  // b.none
  45ea24:	mov	x1, x26
  45ea28:	mov	x2, x21
  45ea2c:	bl	402cd0 <memcpy@plt>
  45ea30:	ldr	x0, [x19]
  45ea34:	cbz	x22, 45ea5c <_obstack_memory_used@@Base+0x266c>
  45ea38:	add	x4, x20, x21
  45ea3c:	cmp	x22, #0x1
  45ea40:	add	x3, x23, x4
  45ea44:	add	x1, x0, x25
  45ea48:	b.eq	45ea8c <_obstack_memory_used@@Base+0x269c>  // b.none
  45ea4c:	mov	x2, x22
  45ea50:	mov	x0, x3
  45ea54:	bl	402cd0 <memcpy@plt>
  45ea58:	ldr	x0, [x19]
  45ea5c:	cmp	x24, x0
  45ea60:	b.eq	45ea68 <_obstack_memory_used@@Base+0x2678>  // b.none
  45ea64:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  45ea68:	ldr	x0, [sp, #88]
  45ea6c:	str	x23, [x19]
  45ea70:	str	x0, [x19, #16]
  45ea74:	ldp	x19, x20, [sp, #16]
  45ea78:	ldp	x21, x22, [sp, #32]
  45ea7c:	ldp	x23, x24, [sp, #48]
  45ea80:	ldp	x25, x26, [sp, #64]
  45ea84:	ldp	x29, x30, [sp], #96
  45ea88:	ret
  45ea8c:	ldrb	w0, [x0, x25]
  45ea90:	strb	w0, [x23, x4]
  45ea94:	ldr	x0, [x19]
  45ea98:	b	45ea5c <_obstack_memory_used@@Base+0x266c>
  45ea9c:	ldrb	w0, [x1]
  45eaa0:	strb	w0, [x23]
  45eaa4:	b	45ea0c <_obstack_memory_used@@Base+0x261c>
  45eaa8:	ldrb	w0, [x26]
  45eaac:	strb	w0, [x23, x20]
  45eab0:	b	45ea30 <_obstack_memory_used@@Base+0x2640>
  45eab4:	mov	x2, #0xf                   	// #15
  45eab8:	b	45e9e4 <_obstack_memory_used@@Base+0x25f4>
  45eabc:	nop
  45eac0:	stp	x29, x30, [sp, #-32]!
  45eac4:	add	x6, x1, x2
  45eac8:	mov	x29, sp
  45eacc:	ldp	x5, x3, [x0]
  45ead0:	stp	x19, x20, [sp, #16]
  45ead4:	mov	x20, x2
  45ead8:	mov	x19, x0
  45eadc:	subs	x2, x3, x6
  45eae0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  45eae4:	b.eq	45eb04 <_obstack_memory_used@@Base+0x2714>  // b.none
  45eae8:	mov	x4, x1
  45eaec:	add	x0, x5, x1
  45eaf0:	cmp	x2, #0x1
  45eaf4:	add	x1, x5, x6
  45eaf8:	b.eq	45eb1c <_obstack_memory_used@@Base+0x272c>  // b.none
  45eafc:	bl	402ce0 <memmove@plt>
  45eb00:	ldp	x5, x3, [x19]
  45eb04:	sub	x3, x3, x20
  45eb08:	str	x3, [x19, #8]
  45eb0c:	strb	wzr, [x5, x3]
  45eb10:	ldp	x19, x20, [sp, #16]
  45eb14:	ldp	x29, x30, [sp], #32
  45eb18:	ret
  45eb1c:	ldrb	w0, [x5, x6]
  45eb20:	strb	w0, [x5, x4]
  45eb24:	ldp	x5, x3, [x19]
  45eb28:	sub	x3, x3, x20
  45eb2c:	str	x3, [x19, #8]
  45eb30:	strb	wzr, [x5, x3]
  45eb34:	ldp	x19, x20, [sp, #16]
  45eb38:	ldp	x29, x30, [sp], #32
  45eb3c:	ret
  45eb40:	add	x1, x0, #0x10
  45eb44:	stp	x1, xzr, [x0]
  45eb48:	strb	wzr, [x0, #16]
  45eb4c:	ret
  45eb50:	add	x1, x0, #0x10
  45eb54:	stp	x1, xzr, [x0]
  45eb58:	strb	wzr, [x0, #16]
  45eb5c:	ret
  45eb60:	add	x4, x0, #0x10
  45eb64:	str	x4, [x0]
  45eb68:	b	45e608 <_obstack_memory_used@@Base+0x2218>
  45eb6c:	nop
  45eb70:	mov	x2, x1
  45eb74:	add	x3, x0, #0x10
  45eb78:	str	x3, [x0]
  45eb7c:	ldr	x3, [x2], #16
  45eb80:	cmp	x2, x3
  45eb84:	b.eq	45eba8 <_obstack_memory_used@@Base+0x27b8>  // b.none
  45eb88:	str	x3, [x0]
  45eb8c:	ldr	x3, [x1, #8]
  45eb90:	stp	x2, xzr, [x1]
  45eb94:	ldr	x4, [x1, #16]
  45eb98:	str	x3, [x0, #8]
  45eb9c:	str	x4, [x0, #16]
  45eba0:	strb	wzr, [x1, #16]
  45eba4:	ret
  45eba8:	ldr	x3, [x1, #8]
  45ebac:	stp	x2, xzr, [x1]
  45ebb0:	ldp	x4, x5, [x1, #16]
  45ebb4:	str	x3, [x0, #8]
  45ebb8:	stp	x4, x5, [x0, #16]
  45ebbc:	strb	wzr, [x1, #16]
  45ebc0:	ret
  45ebc4:	nop
  45ebc8:	mov	x2, x1
  45ebcc:	add	x3, x0, #0x10
  45ebd0:	ldr	x4, [x1, #8]
  45ebd4:	str	x3, [x0]
  45ebd8:	ldr	x3, [x2], #16
  45ebdc:	cmp	x2, x3
  45ebe0:	b.eq	45ebfc <_obstack_memory_used@@Base+0x280c>  // b.none
  45ebe4:	ldr	x5, [x1, #16]
  45ebe8:	stp	x3, x4, [x0]
  45ebec:	str	x5, [x0, #16]
  45ebf0:	stp	x2, xzr, [x1]
  45ebf4:	strb	wzr, [x1, #16]
  45ebf8:	ret
  45ebfc:	ldp	x2, x3, [x1, #16]
  45ec00:	str	x4, [x0, #8]
  45ec04:	stp	x2, x3, [x0, #16]
  45ec08:	str	xzr, [x1, #8]
  45ec0c:	strb	wzr, [x1, #16]
  45ec10:	ret
  45ec14:	nop
  45ec18:	mov	x1, x0
  45ec1c:	ldr	x0, [x1], #16
  45ec20:	cmp	x0, x1
  45ec24:	b.eq	45ec2c <_obstack_memory_used@@Base+0x283c>  // b.none
  45ec28:	b	461928 <_obstack_memory_used@@Base+0x5538>
  45ec2c:	ret
  45ec30:	stp	x29, x30, [sp, #-32]!
  45ec34:	mov	x29, sp
  45ec38:	str	x19, [sp, #16]
  45ec3c:	mov	x19, x0
  45ec40:	bl	45e8a0 <_obstack_memory_used@@Base+0x24b0>
  45ec44:	mov	x0, x19
  45ec48:	ldr	x19, [sp, #16]
  45ec4c:	ldp	x29, x30, [sp], #32
  45ec50:	ret
  45ec54:	nop
  45ec58:	stp	x29, x30, [sp, #-32]!
  45ec5c:	mov	x29, sp
  45ec60:	stp	x19, x20, [sp, #16]
  45ec64:	mov	x20, x1
  45ec68:	mov	x19, x0
  45ec6c:	ldr	x3, [x0]
  45ec70:	ldr	x0, [x1], #16
  45ec74:	ldr	x2, [x20, #8]
  45ec78:	cmp	x1, x0
  45ec7c:	b.eq	45ece8 <_obstack_memory_used@@Base+0x28f8>  // b.none
  45ec80:	stp	x0, x2, [x19]
  45ec84:	add	x4, x19, #0x10
  45ec88:	cmp	x3, x4
  45ec8c:	b.eq	45ecc0 <_obstack_memory_used@@Base+0x28d0>  // b.none
  45ec90:	ldr	x2, [x20, #16]
  45ec94:	ldr	x0, [x19, #16]
  45ec98:	str	x2, [x19, #16]
  45ec9c:	cbz	x3, 45ecc8 <_obstack_memory_used@@Base+0x28d8>
  45eca0:	str	x3, [x20]
  45eca4:	str	xzr, [x20, #8]
  45eca8:	str	x0, [x20, #16]
  45ecac:	mov	x0, x19
  45ecb0:	strb	wzr, [x3]
  45ecb4:	ldp	x19, x20, [sp, #16]
  45ecb8:	ldp	x29, x30, [sp], #32
  45ecbc:	ret
  45ecc0:	ldr	x0, [x20, #16]
  45ecc4:	str	x0, [x19, #16]
  45ecc8:	mov	x3, x1
  45eccc:	str	x1, [x20]
  45ecd0:	str	xzr, [x20, #8]
  45ecd4:	mov	x0, x19
  45ecd8:	strb	wzr, [x3]
  45ecdc:	ldp	x19, x20, [sp, #16]
  45ece0:	ldp	x29, x30, [sp], #32
  45ece4:	ret
  45ece8:	cbz	x2, 45ed04 <_obstack_memory_used@@Base+0x2914>
  45ecec:	cmp	x2, #0x1
  45ecf0:	b.eq	45ed28 <_obstack_memory_used@@Base+0x2938>  // b.none
  45ecf4:	mov	x0, x3
  45ecf8:	bl	402cd0 <memcpy@plt>
  45ecfc:	ldr	x3, [x19]
  45ed00:	ldr	x2, [x20, #8]
  45ed04:	str	x2, [x19, #8]
  45ed08:	strb	wzr, [x3, x2]
  45ed0c:	mov	x0, x19
  45ed10:	str	xzr, [x20, #8]
  45ed14:	ldr	x3, [x20]
  45ed18:	strb	wzr, [x3]
  45ed1c:	ldp	x19, x20, [sp, #16]
  45ed20:	ldp	x29, x30, [sp], #32
  45ed24:	ret
  45ed28:	ldrb	w0, [x20, #16]
  45ed2c:	strb	w0, [x3]
  45ed30:	ldr	x3, [x19]
  45ed34:	ldr	x2, [x20, #8]
  45ed38:	b	45ed04 <_obstack_memory_used@@Base+0x2914>
  45ed3c:	nop
  45ed40:	ldr	x0, [x0]
  45ed44:	ret
  45ed48:	ldr	x0, [x0]
  45ed4c:	ret
  45ed50:	ldp	x1, x0, [x0]
  45ed54:	add	x0, x1, x0
  45ed58:	ret
  45ed5c:	nop
  45ed60:	ldp	x1, x0, [x0]
  45ed64:	add	x0, x1, x0
  45ed68:	ret
  45ed6c:	nop
  45ed70:	mov	x1, x0
  45ed74:	mov	x0, x8
  45ed78:	ldp	x2, x1, [x1]
  45ed7c:	add	x1, x2, x1
  45ed80:	str	x1, [x8]
  45ed84:	ret
  45ed88:	mov	x1, x0
  45ed8c:	mov	x0, x8
  45ed90:	ldp	x2, x1, [x1]
  45ed94:	add	x1, x2, x1
  45ed98:	str	x1, [x8]
  45ed9c:	ret
  45eda0:	mov	x1, x0
  45eda4:	mov	x0, x8
  45eda8:	ldr	x1, [x1]
  45edac:	str	x1, [x8]
  45edb0:	ret
  45edb4:	nop
  45edb8:	mov	x1, x0
  45edbc:	mov	x0, x8
  45edc0:	ldr	x1, [x1]
  45edc4:	str	x1, [x8]
  45edc8:	ret
  45edcc:	nop
  45edd0:	ldr	x0, [x0]
  45edd4:	ret
  45edd8:	ldp	x1, x0, [x0]
  45eddc:	add	x0, x1, x0
  45ede0:	ret
  45ede4:	nop
  45ede8:	mov	x1, x0
  45edec:	mov	x0, x8
  45edf0:	ldp	x2, x1, [x1]
  45edf4:	add	x1, x2, x1
  45edf8:	str	x1, [x8]
  45edfc:	ret
  45ee00:	mov	x1, x0
  45ee04:	mov	x0, x8
  45ee08:	ldr	x1, [x1]
  45ee0c:	str	x1, [x8]
  45ee10:	ret
  45ee14:	nop
  45ee18:	ldr	x0, [x0, #8]
  45ee1c:	ret
  45ee20:	ldr	x0, [x0, #8]
  45ee24:	ret
  45ee28:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  45ee2c:	ret
  45ee30:	mov	x1, x0
  45ee34:	ldr	x2, [x1], #16
  45ee38:	cmp	x2, x1
  45ee3c:	b.eq	45ee48 <_obstack_memory_used@@Base+0x2a58>  // b.none
  45ee40:	ldr	x0, [x0, #16]
  45ee44:	ret
  45ee48:	mov	x0, #0xf                   	// #15
  45ee4c:	ret
  45ee50:	stp	x29, x30, [sp, #-64]!
  45ee54:	mov	x29, sp
  45ee58:	stp	x19, x20, [sp, #16]
  45ee5c:	mov	x19, x0
  45ee60:	ldr	x0, [x0, #8]
  45ee64:	str	x21, [sp, #32]
  45ee68:	str	x1, [sp, #56]
  45ee6c:	cmp	x1, x0
  45ee70:	b.cs	45ee7c <_obstack_memory_used@@Base+0x2a8c>  // b.hs, b.nlast
  45ee74:	mov	x1, x0
  45ee78:	str	x0, [sp, #56]
  45ee7c:	mov	x20, x19
  45ee80:	ldr	x21, [x20], #16
  45ee84:	cmp	x20, x21
  45ee88:	b.eq	45ef40 <_obstack_memory_used@@Base+0x2b50>  // b.none
  45ee8c:	ldr	x2, [x19, #16]
  45ee90:	cmp	x2, x1
  45ee94:	b.eq	45eee8 <_obstack_memory_used@@Base+0x2af8>  // b.none
  45ee98:	cmp	x2, #0xf
  45ee9c:	mov	x3, #0xf                   	// #15
  45eea0:	csel	x3, x2, x3, ls  // ls = plast
  45eea4:	cmp	x3, x1
  45eea8:	b.cs	45eef8 <_obstack_memory_used@@Base+0x2b08>  // b.hs, b.nlast
  45eeac:	add	x1, sp, #0x38
  45eeb0:	mov	x0, x19
  45eeb4:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  45eeb8:	mov	x21, x0
  45eebc:	ldp	x1, x3, [x19]
  45eec0:	add	x2, x3, #0x1
  45eec4:	cbz	x3, 45ef48 <_obstack_memory_used@@Base+0x2b58>
  45eec8:	cbnz	x2, 45ef34 <_obstack_memory_used@@Base+0x2b44>
  45eecc:	cmp	x20, x1
  45eed0:	b.eq	45eedc <_obstack_memory_used@@Base+0x2aec>  // b.none
  45eed4:	mov	x0, x1
  45eed8:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  45eedc:	ldr	x0, [sp, #56]
  45eee0:	str	x21, [x19]
  45eee4:	str	x0, [x19, #16]
  45eee8:	ldp	x19, x20, [sp, #16]
  45eeec:	ldr	x21, [sp, #32]
  45eef0:	ldp	x29, x30, [sp], #64
  45eef4:	ret
  45eef8:	cmp	x20, x21
  45eefc:	b.eq	45eee8 <_obstack_memory_used@@Base+0x2af8>  // b.none
  45ef00:	add	x2, x0, #0x1
  45ef04:	cbz	x0, 45ef58 <_obstack_memory_used@@Base+0x2b68>
  45ef08:	cbz	x2, 45ef18 <_obstack_memory_used@@Base+0x2b28>
  45ef0c:	mov	x1, x21
  45ef10:	mov	x0, x20
  45ef14:	bl	402cd0 <memcpy@plt>
  45ef18:	mov	x0, x21
  45ef1c:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  45ef20:	str	x20, [x19]
  45ef24:	ldp	x19, x20, [sp, #16]
  45ef28:	ldr	x21, [sp, #32]
  45ef2c:	ldp	x29, x30, [sp], #64
  45ef30:	ret
  45ef34:	bl	402cd0 <memcpy@plt>
  45ef38:	ldr	x1, [x19]
  45ef3c:	b	45eecc <_obstack_memory_used@@Base+0x2adc>
  45ef40:	mov	x2, #0xf                   	// #15
  45ef44:	b	45ee90 <_obstack_memory_used@@Base+0x2aa0>
  45ef48:	ldrb	w0, [x1]
  45ef4c:	strb	w0, [x21]
  45ef50:	ldr	x1, [x19]
  45ef54:	b	45eecc <_obstack_memory_used@@Base+0x2adc>
  45ef58:	ldrb	w0, [x21]
  45ef5c:	strb	w0, [x19, #16]
  45ef60:	b	45ef18 <_obstack_memory_used@@Base+0x2b28>
  45ef64:	nop
  45ef68:	mov	x1, x0
  45ef6c:	ldr	x2, [x1], #16
  45ef70:	cmp	x2, x1
  45ef74:	b.eq	45efa4 <_obstack_memory_used@@Base+0x2bb4>  // b.none
  45ef78:	ldr	x2, [x0, #16]
  45ef7c:	ldr	x1, [x0, #8]
  45ef80:	cmp	x1, x2
  45ef84:	b.cc	45ef8c <_obstack_memory_used@@Base+0x2b9c>  // b.lo, b.ul, b.last
  45ef88:	ret
  45ef8c:	stp	x29, x30, [sp, #-16]!
  45ef90:	mov	x1, #0x0                   	// #0
  45ef94:	mov	x29, sp
  45ef98:	bl	45ee50 <_obstack_memory_used@@Base+0x2a60>
  45ef9c:	ldp	x29, x30, [sp], #16
  45efa0:	ret
  45efa4:	mov	x2, #0xf                   	// #15
  45efa8:	b	45ef7c <_obstack_memory_used@@Base+0x2b8c>
  45efac:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  45efb0:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  45efb4:	b	45ef9c <_obstack_memory_used@@Base+0x2bac>
  45efb8:	ldr	x1, [x0]
  45efbc:	str	xzr, [x0, #8]
  45efc0:	strb	wzr, [x1]
  45efc4:	ret
  45efc8:	ldr	x0, [x0, #8]
  45efcc:	cmp	x0, #0x0
  45efd0:	cset	w0, eq  // eq = none
  45efd4:	ret
  45efd8:	ldr	x0, [x0]
  45efdc:	add	x0, x0, x1
  45efe0:	ret
  45efe4:	nop
  45efe8:	ldr	x0, [x0]
  45efec:	add	x0, x0, x1
  45eff0:	ret
  45eff4:	nop
  45eff8:	ldr	x2, [x0, #8]
  45effc:	cmp	x1, x2
  45f000:	b.cs	45f010 <_obstack_memory_used@@Base+0x2c20>  // b.hs, b.nlast
  45f004:	ldr	x0, [x0]
  45f008:	add	x0, x0, x1
  45f00c:	ret
  45f010:	stp	x29, x30, [sp, #-16]!
  45f014:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f018:	add	x0, x0, #0x5e8
  45f01c:	mov	x29, sp
  45f020:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45f024:	nop
  45f028:	ldr	x2, [x0, #8]
  45f02c:	cmp	x1, x2
  45f030:	b.cs	45f040 <_obstack_memory_used@@Base+0x2c50>  // b.hs, b.nlast
  45f034:	ldr	x0, [x0]
  45f038:	add	x0, x0, x1
  45f03c:	ret
  45f040:	stp	x29, x30, [sp, #-16]!
  45f044:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f048:	add	x0, x0, #0x5e8
  45f04c:	mov	x29, sp
  45f050:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45f054:	nop
  45f058:	ldr	x0, [x0]
  45f05c:	ret
  45f060:	ldr	x0, [x0]
  45f064:	ret
  45f068:	ldp	x2, x1, [x0]
  45f06c:	sub	x0, x1, #0x1
  45f070:	add	x0, x2, x0
  45f074:	ret
  45f078:	ldp	x2, x1, [x0]
  45f07c:	sub	x0, x1, #0x1
  45f080:	add	x0, x2, x0
  45f084:	ret
  45f088:	stp	x29, x30, [sp, #-48]!
  45f08c:	mov	x29, sp
  45f090:	stp	x19, x20, [sp, #16]
  45f094:	mov	x19, x0
  45f098:	stp	x21, x22, [sp, #32]
  45f09c:	and	w22, w1, #0xff
  45f0a0:	ldr	x21, [x0, #8]
  45f0a4:	ldr	x1, [x0], #16
  45f0a8:	add	x20, x21, #0x1
  45f0ac:	cmp	x1, x0
  45f0b0:	b.eq	45f104 <_obstack_memory_used@@Base+0x2d14>  // b.none
  45f0b4:	ldr	x0, [x19, #16]
  45f0b8:	cmp	x20, x0
  45f0bc:	b.hi	45f0e4 <_obstack_memory_used@@Base+0x2cf4>  // b.pmore
  45f0c0:	strb	w22, [x1, x21]
  45f0c4:	mov	x0, x19
  45f0c8:	str	x20, [x19, #8]
  45f0cc:	ldr	x1, [x19]
  45f0d0:	strb	wzr, [x1, x20]
  45f0d4:	ldp	x19, x20, [sp, #16]
  45f0d8:	ldp	x21, x22, [sp, #32]
  45f0dc:	ldp	x29, x30, [sp], #48
  45f0e0:	ret
  45f0e4:	mov	x1, x21
  45f0e8:	mov	x0, x19
  45f0ec:	mov	x4, #0x1                   	// #1
  45f0f0:	mov	x3, #0x0                   	// #0
  45f0f4:	mov	x2, #0x0                   	// #0
  45f0f8:	bl	45e990 <_obstack_memory_used@@Base+0x25a0>
  45f0fc:	ldr	x1, [x19]
  45f100:	b	45f0c0 <_obstack_memory_used@@Base+0x2cd0>
  45f104:	mov	x0, #0xf                   	// #15
  45f108:	b	45f0b8 <_obstack_memory_used@@Base+0x2cc8>
  45f10c:	nop
  45f110:	stp	x29, x30, [sp, #-48]!
  45f114:	mov	x29, sp
  45f118:	stp	x19, x20, [sp, #16]
  45f11c:	mov	x19, x0
  45f120:	stp	x21, x22, [sp, #32]
  45f124:	and	w22, w1, #0xff
  45f128:	ldr	x21, [x0, #8]
  45f12c:	ldr	x1, [x0], #16
  45f130:	add	x20, x21, #0x1
  45f134:	cmp	x1, x0
  45f138:	b.eq	45f1a4 <_obstack_memory_used@@Base+0x2db4>  // b.none
  45f13c:	ldr	x0, [x19, #16]
  45f140:	cmp	x20, x0
  45f144:	b.hi	45f168 <_obstack_memory_used@@Base+0x2d78>  // b.pmore
  45f148:	strb	w22, [x1, x21]
  45f14c:	str	x20, [x19, #8]
  45f150:	ldr	x0, [x19]
  45f154:	strb	wzr, [x0, x20]
  45f158:	ldp	x19, x20, [sp, #16]
  45f15c:	ldp	x21, x22, [sp, #32]
  45f160:	ldp	x29, x30, [sp], #48
  45f164:	ret
  45f168:	mov	x1, x21
  45f16c:	mov	x0, x19
  45f170:	mov	x4, #0x1                   	// #1
  45f174:	mov	x3, #0x0                   	// #0
  45f178:	mov	x2, #0x0                   	// #0
  45f17c:	bl	45e990 <_obstack_memory_used@@Base+0x25a0>
  45f180:	ldr	x1, [x19]
  45f184:	strb	w22, [x1, x21]
  45f188:	str	x20, [x19, #8]
  45f18c:	ldr	x0, [x19]
  45f190:	strb	wzr, [x0, x20]
  45f194:	ldp	x19, x20, [sp, #16]
  45f198:	ldp	x21, x22, [sp, #32]
  45f19c:	ldp	x29, x30, [sp], #48
  45f1a0:	ret
  45f1a4:	mov	x0, #0xf                   	// #15
  45f1a8:	b	45f140 <_obstack_memory_used@@Base+0x2d50>
  45f1ac:	nop
  45f1b0:	stp	x29, x30, [sp, #-32]!
  45f1b4:	mov	x29, sp
  45f1b8:	str	x19, [sp, #16]
  45f1bc:	mov	x19, x0
  45f1c0:	bl	45e8a0 <_obstack_memory_used@@Base+0x24b0>
  45f1c4:	mov	x0, x19
  45f1c8:	ldr	x19, [sp, #16]
  45f1cc:	ldp	x29, x30, [sp], #32
  45f1d0:	ret
  45f1d4:	nop
  45f1d8:	stp	x29, x30, [sp, #-32]!
  45f1dc:	mov	x29, sp
  45f1e0:	stp	x19, x20, [sp, #16]
  45f1e4:	mov	x19, x0
  45f1e8:	mov	x0, x1
  45f1ec:	mov	x20, x1
  45f1f0:	ldr	x3, [x19]
  45f1f4:	ldr	x1, [x0], #16
  45f1f8:	ldr	x2, [x20, #8]
  45f1fc:	cmp	x1, x0
  45f200:	b.eq	45f26c <_obstack_memory_used@@Base+0x2e7c>  // b.none
  45f204:	stp	x1, x2, [x19]
  45f208:	add	x4, x19, #0x10
  45f20c:	cmp	x3, x4
  45f210:	b.eq	45f244 <_obstack_memory_used@@Base+0x2e54>  // b.none
  45f214:	ldr	x2, [x20, #16]
  45f218:	ldr	x1, [x19, #16]
  45f21c:	str	x2, [x19, #16]
  45f220:	cbz	x3, 45f24c <_obstack_memory_used@@Base+0x2e5c>
  45f224:	str	x3, [x20]
  45f228:	mov	x0, x19
  45f22c:	str	xzr, [x20, #8]
  45f230:	str	x1, [x20, #16]
  45f234:	strb	wzr, [x3]
  45f238:	ldp	x19, x20, [sp, #16]
  45f23c:	ldp	x29, x30, [sp], #32
  45f240:	ret
  45f244:	ldr	x1, [x20, #16]
  45f248:	str	x1, [x19, #16]
  45f24c:	mov	x3, x0
  45f250:	str	x0, [x20]
  45f254:	str	xzr, [x20, #8]
  45f258:	mov	x0, x19
  45f25c:	strb	wzr, [x3]
  45f260:	ldp	x19, x20, [sp, #16]
  45f264:	ldp	x29, x30, [sp], #32
  45f268:	ret
  45f26c:	cbz	x2, 45f288 <_obstack_memory_used@@Base+0x2e98>
  45f270:	cmp	x2, #0x1
  45f274:	b.eq	45f2ac <_obstack_memory_used@@Base+0x2ebc>  // b.none
  45f278:	mov	x0, x3
  45f27c:	bl	402cd0 <memcpy@plt>
  45f280:	ldr	x3, [x19]
  45f284:	ldr	x2, [x20, #8]
  45f288:	str	x2, [x19, #8]
  45f28c:	strb	wzr, [x3, x2]
  45f290:	mov	x0, x19
  45f294:	str	xzr, [x20, #8]
  45f298:	ldr	x3, [x20]
  45f29c:	strb	wzr, [x3]
  45f2a0:	ldp	x19, x20, [sp, #16]
  45f2a4:	ldp	x29, x30, [sp], #32
  45f2a8:	ret
  45f2ac:	ldrb	w0, [x20, #16]
  45f2b0:	strb	w0, [x3]
  45f2b4:	ldr	x3, [x19]
  45f2b8:	ldr	x2, [x20, #8]
  45f2bc:	b	45f288 <_obstack_memory_used@@Base+0x2e98>
  45f2c0:	stp	x29, x30, [sp, #-32]!
  45f2c4:	mov	x29, sp
  45f2c8:	ldr	x3, [x0, #8]
  45f2cc:	str	x19, [sp, #16]
  45f2d0:	cmp	x1, x3
  45f2d4:	b.hi	45f334 <_obstack_memory_used@@Base+0x2f44>  // b.pmore
  45f2d8:	mov	x19, x0
  45f2dc:	cmn	x2, #0x1
  45f2e0:	b.eq	45f318 <_obstack_memory_used@@Base+0x2f28>  // b.none
  45f2e4:	cbnz	x2, 45f2f8 <_obstack_memory_used@@Base+0x2f08>
  45f2e8:	mov	x0, x19
  45f2ec:	ldr	x19, [sp, #16]
  45f2f0:	ldp	x29, x30, [sp], #32
  45f2f4:	ret
  45f2f8:	sub	x3, x3, x1
  45f2fc:	cmp	x3, x2
  45f300:	csel	x2, x3, x2, ls  // ls = plast
  45f304:	bl	45eac0 <_obstack_memory_used@@Base+0x26d0>
  45f308:	mov	x0, x19
  45f30c:	ldr	x19, [sp, #16]
  45f310:	ldp	x29, x30, [sp], #32
  45f314:	ret
  45f318:	ldr	x0, [x0]
  45f31c:	str	x1, [x19, #8]
  45f320:	strb	wzr, [x0, x1]
  45f324:	mov	x0, x19
  45f328:	ldr	x19, [sp, #16]
  45f32c:	ldp	x29, x30, [sp], #32
  45f330:	ret
  45f334:	mov	x2, x1
  45f338:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f33c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f340:	add	x0, x0, #0x5b0
  45f344:	add	x1, x1, #0x630
  45f348:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45f34c:	nop
  45f350:	stp	x29, x30, [sp, #-32]!
  45f354:	mov	x2, #0x1                   	// #1
  45f358:	mov	x29, sp
  45f35c:	stp	x19, x20, [sp, #16]
  45f360:	mov	x20, x0
  45f364:	ldr	x19, [x0]
  45f368:	sub	x19, x1, x19
  45f36c:	mov	x1, x19
  45f370:	bl	45eac0 <_obstack_memory_used@@Base+0x26d0>
  45f374:	ldr	x0, [x20]
  45f378:	add	x0, x0, x19
  45f37c:	ldp	x19, x20, [sp, #16]
  45f380:	ldp	x29, x30, [sp], #32
  45f384:	ret
  45f388:	stp	x29, x30, [sp, #-32]!
  45f38c:	mov	x29, sp
  45f390:	ldp	x3, x4, [x0]
  45f394:	stp	x19, x20, [sp, #16]
  45f398:	mov	x19, x0
  45f39c:	sub	x20, x1, x3
  45f3a0:	add	x3, x3, x4
  45f3a4:	cmp	x2, x3
  45f3a8:	b.eq	45f3cc <_obstack_memory_used@@Base+0x2fdc>  // b.none
  45f3ac:	sub	x2, x2, x1
  45f3b0:	mov	x1, x20
  45f3b4:	bl	45eac0 <_obstack_memory_used@@Base+0x26d0>
  45f3b8:	ldr	x0, [x19]
  45f3bc:	add	x0, x0, x20
  45f3c0:	ldp	x19, x20, [sp, #16]
  45f3c4:	ldp	x29, x30, [sp], #32
  45f3c8:	ret
  45f3cc:	str	x20, [x0, #8]
  45f3d0:	strb	wzr, [x1]
  45f3d4:	ldr	x0, [x19]
  45f3d8:	add	x0, x0, x20
  45f3dc:	ldp	x19, x20, [sp, #16]
  45f3e0:	ldp	x29, x30, [sp], #32
  45f3e4:	ret
  45f3e8:	stp	x29, x30, [sp, #-16]!
  45f3ec:	mov	x2, #0x1                   	// #1
  45f3f0:	mov	x29, sp
  45f3f4:	ldr	x1, [x0, #8]
  45f3f8:	sub	x1, x1, #0x1
  45f3fc:	bl	45eac0 <_obstack_memory_used@@Base+0x26d0>
  45f400:	ldp	x29, x30, [sp], #16
  45f404:	ret
  45f408:	stp	x29, x30, [sp, #-64]!
  45f40c:	mov	x29, sp
  45f410:	stp	x19, x20, [sp, #16]
  45f414:	mov	x19, x0
  45f418:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  45f41c:	add	x0, x2, x0
  45f420:	stp	x21, x22, [sp, #32]
  45f424:	ldr	x5, [x19, #8]
  45f428:	str	x23, [sp, #48]
  45f42c:	sub	x0, x0, x5
  45f430:	cmp	x3, x0
  45f434:	b.hi	45f53c <_obstack_memory_used@@Base+0x314c>  // b.pmore
  45f438:	mov	x0, x19
  45f43c:	sub	x21, x3, x2
  45f440:	mov	x20, x3
  45f444:	mov	x22, x1
  45f448:	and	w23, w4, #0xff
  45f44c:	add	x21, x21, x5
  45f450:	ldr	x3, [x0], #16
  45f454:	cmp	x3, x0
  45f458:	b.eq	45f4f8 <_obstack_memory_used@@Base+0x3108>  // b.none
  45f45c:	ldr	x0, [x19, #16]
  45f460:	cmp	x0, x21
  45f464:	b.cc	45f4d8 <_obstack_memory_used@@Base+0x30e8>  // b.lo, b.ul, b.last
  45f468:	add	x0, x2, x22
  45f46c:	subs	x5, x5, x0
  45f470:	ccmp	x2, x20, #0x4, ne  // ne = any
  45f474:	b.eq	45f498 <_obstack_memory_used@@Base+0x30a8>  // b.none
  45f478:	add	x3, x3, x22
  45f47c:	cmp	x5, #0x1
  45f480:	add	x0, x3, x20
  45f484:	add	x1, x3, x2
  45f488:	b.eq	45f528 <_obstack_memory_used@@Base+0x3138>  // b.none
  45f48c:	mov	x2, x5
  45f490:	bl	402ce0 <memmove@plt>
  45f494:	ldr	x3, [x19]
  45f498:	cbz	x20, 45f4b8 <_obstack_memory_used@@Base+0x30c8>
  45f49c:	cmp	x20, #0x1
  45f4a0:	add	x0, x3, x22
  45f4a4:	b.eq	45f500 <_obstack_memory_used@@Base+0x3110>  // b.none
  45f4a8:	mov	x2, x20
  45f4ac:	mov	w1, w23
  45f4b0:	bl	403000 <memset@plt>
  45f4b4:	ldr	x3, [x19]
  45f4b8:	str	x21, [x19, #8]
  45f4bc:	strb	wzr, [x3, x21]
  45f4c0:	mov	x0, x19
  45f4c4:	ldp	x19, x20, [sp, #16]
  45f4c8:	ldp	x21, x22, [sp, #32]
  45f4cc:	ldr	x23, [sp, #48]
  45f4d0:	ldp	x29, x30, [sp], #64
  45f4d4:	ret
  45f4d8:	mov	x3, #0x0                   	// #0
  45f4dc:	mov	x4, x20
  45f4e0:	mov	x1, x22
  45f4e4:	mov	x0, x19
  45f4e8:	bl	45e990 <_obstack_memory_used@@Base+0x25a0>
  45f4ec:	ldr	x3, [x19]
  45f4f0:	cbz	x20, 45f4b8 <_obstack_memory_used@@Base+0x30c8>
  45f4f4:	b	45f49c <_obstack_memory_used@@Base+0x30ac>
  45f4f8:	mov	x0, #0xf                   	// #15
  45f4fc:	b	45f460 <_obstack_memory_used@@Base+0x3070>
  45f500:	strb	w23, [x3, x22]
  45f504:	mov	x0, x19
  45f508:	str	x21, [x19, #8]
  45f50c:	ldr	x3, [x19]
  45f510:	strb	wzr, [x3, x21]
  45f514:	ldp	x19, x20, [sp, #16]
  45f518:	ldp	x21, x22, [sp, #32]
  45f51c:	ldr	x23, [sp, #48]
  45f520:	ldp	x29, x30, [sp], #64
  45f524:	ret
  45f528:	ldrb	w0, [x3, x2]
  45f52c:	strb	w0, [x3, x20]
  45f530:	ldr	x3, [x19]
  45f534:	cbz	x20, 45f4b8 <_obstack_memory_used@@Base+0x30c8>
  45f538:	b	45f49c <_obstack_memory_used@@Base+0x30ac>
  45f53c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f540:	add	x0, x0, #0x648
  45f544:	bl	4037f8 <ferror@plt+0x228>
  45f548:	mov	x3, x1
  45f54c:	mov	w4, w2
  45f550:	ldr	x1, [x0, #8]
  45f554:	mov	x2, #0x0                   	// #0
  45f558:	b	45f408 <_obstack_memory_used@@Base+0x3018>
  45f55c:	nop
  45f560:	mov	x3, x1
  45f564:	mov	x5, x0
  45f568:	ldr	x1, [x0, #8]
  45f56c:	and	w4, w2, #0xff
  45f570:	cmp	x1, x3
  45f574:	b.cc	45f58c <_obstack_memory_used@@Base+0x319c>  // b.lo, b.ul, b.last
  45f578:	b.ls	45f588 <_obstack_memory_used@@Base+0x3198>  // b.plast
  45f57c:	ldr	x0, [x0]
  45f580:	str	x3, [x5, #8]
  45f584:	strb	wzr, [x0, x3]
  45f588:	ret
  45f58c:	sub	x3, x3, x1
  45f590:	mov	x2, #0x0                   	// #0
  45f594:	b	45f408 <_obstack_memory_used@@Base+0x3018>
  45f598:	mov	w2, #0x0                   	// #0
  45f59c:	b	45f560 <_obstack_memory_used@@Base+0x3170>
  45f5a0:	mov	w4, w2
  45f5a4:	mov	x3, x1
  45f5a8:	ldr	x2, [x0, #8]
  45f5ac:	mov	x1, #0x0                   	// #0
  45f5b0:	b	45f408 <_obstack_memory_used@@Base+0x3018>
  45f5b4:	nop
  45f5b8:	stp	x29, x30, [sp, #-32]!
  45f5bc:	mov	w4, w1
  45f5c0:	mov	x3, #0x1                   	// #1
  45f5c4:	mov	x29, sp
  45f5c8:	ldr	x2, [x0, #8]
  45f5cc:	mov	x1, #0x0                   	// #0
  45f5d0:	str	x19, [sp, #16]
  45f5d4:	mov	x19, x0
  45f5d8:	bl	45f408 <_obstack_memory_used@@Base+0x3018>
  45f5dc:	mov	x0, x19
  45f5e0:	ldr	x19, [sp, #16]
  45f5e4:	ldp	x29, x30, [sp], #32
  45f5e8:	ret
  45f5ec:	nop
  45f5f0:	and	w4, w3, #0xff
  45f5f4:	ldr	x3, [x0, #8]
  45f5f8:	cmp	x1, x3
  45f5fc:	b.hi	45f60c <_obstack_memory_used@@Base+0x321c>  // b.pmore
  45f600:	mov	x3, x2
  45f604:	mov	x2, #0x0                   	// #0
  45f608:	b	45f408 <_obstack_memory_used@@Base+0x3018>
  45f60c:	stp	x29, x30, [sp, #-16]!
  45f610:	mov	x2, x1
  45f614:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f618:	mov	x29, sp
  45f61c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f620:	add	x0, x0, #0x5b0
  45f624:	add	x1, x1, #0x668
  45f628:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45f62c:	nop
  45f630:	stp	x29, x30, [sp, #-32]!
  45f634:	mov	w4, w2
  45f638:	mov	x3, #0x1                   	// #1
  45f63c:	mov	x29, sp
  45f640:	stp	x19, x20, [sp, #16]
  45f644:	mov	x20, x0
  45f648:	mov	x2, #0x0                   	// #0
  45f64c:	ldr	x19, [x0]
  45f650:	sub	x19, x1, x19
  45f654:	mov	x1, x19
  45f658:	bl	45f408 <_obstack_memory_used@@Base+0x3018>
  45f65c:	ldr	x0, [x20]
  45f660:	add	x0, x0, x19
  45f664:	ldp	x19, x20, [sp, #16]
  45f668:	ldp	x29, x30, [sp], #32
  45f66c:	ret
  45f670:	ldr	x5, [x0, #8]
  45f674:	cmp	x1, x5
  45f678:	b.hi	45f690 <_obstack_memory_used@@Base+0x32a0>  // b.pmore
  45f67c:	sub	x5, x5, x1
  45f680:	and	w4, w4, #0xff
  45f684:	cmp	x5, x2
  45f688:	csel	x2, x5, x2, ls  // ls = plast
  45f68c:	b	45f408 <_obstack_memory_used@@Base+0x3018>
  45f690:	stp	x29, x30, [sp, #-16]!
  45f694:	mov	x2, x1
  45f698:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f69c:	mov	x29, sp
  45f6a0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f6a4:	mov	x3, x5
  45f6a8:	add	x1, x1, #0x680
  45f6ac:	add	x0, x0, #0x5b0
  45f6b0:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45f6b4:	nop
  45f6b8:	ldr	x5, [x0]
  45f6bc:	sub	x2, x2, x1
  45f6c0:	sub	x1, x1, x5
  45f6c4:	b	45f408 <_obstack_memory_used@@Base+0x3018>
  45f6c8:	stp	x29, x30, [sp, #-32]!
  45f6cc:	mov	x5, x2
  45f6d0:	mov	w4, w3
  45f6d4:	mov	x29, sp
  45f6d8:	stp	x19, x20, [sp, #16]
  45f6dc:	mov	x20, x0
  45f6e0:	mov	x3, x5
  45f6e4:	ldr	x19, [x0]
  45f6e8:	mov	x2, #0x0                   	// #0
  45f6ec:	sub	x19, x1, x19
  45f6f0:	mov	x1, x19
  45f6f4:	bl	45f408 <_obstack_memory_used@@Base+0x3018>
  45f6f8:	ldr	x0, [x20]
  45f6fc:	add	x0, x0, x19
  45f700:	ldp	x19, x20, [sp, #16]
  45f704:	ldp	x29, x30, [sp], #32
  45f708:	ret
  45f70c:	nop
  45f710:	stp	x29, x30, [sp, #-112]!
  45f714:	mov	x29, sp
  45f718:	stp	x19, x20, [sp, #16]
  45f71c:	mov	x19, x0
  45f720:	mov	x20, x4
  45f724:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  45f728:	add	x0, x2, x0
  45f72c:	ldr	x4, [x19, #8]
  45f730:	stp	x21, x22, [sp, #32]
  45f734:	stp	x23, x24, [sp, #48]
  45f738:	sub	x0, x0, x4
  45f73c:	cmp	x20, x0
  45f740:	stp	x25, x26, [sp, #64]
  45f744:	stp	x27, x28, [sp, #80]
  45f748:	b.hi	45f97c <_obstack_memory_used@@Base+0x358c>  // b.pmore
  45f74c:	mov	x0, x19
  45f750:	sub	x25, x20, x2
  45f754:	mov	x28, x2
  45f758:	mov	x26, x1
  45f75c:	mov	x21, x3
  45f760:	add	x27, x4, x25
  45f764:	ldr	x23, [x0], #16
  45f768:	cmp	x23, x0
  45f76c:	b.eq	45f8d4 <_obstack_memory_used@@Base+0x34e4>  // b.none
  45f770:	ldr	x0, [x19, #16]
  45f774:	cmp	x0, x27
  45f778:	b.cc	45f89c <_obstack_memory_used@@Base+0x34ac>  // b.lo, b.ul, b.last
  45f77c:	cmp	x28, x20
  45f780:	add	x0, x28, x26
  45f784:	cset	w24, ne  // ne = any
  45f788:	subs	x22, x4, x0
  45f78c:	csel	w24, w24, wzr, ne  // ne = any
  45f790:	add	x3, x23, x26
  45f794:	cmp	x23, x21
  45f798:	b.ls	45f808 <_obstack_memory_used@@Base+0x3418>  // b.plast
  45f79c:	cbz	w24, 45f7c0 <_obstack_memory_used@@Base+0x33d0>
  45f7a0:	cmp	x22, #0x1
  45f7a4:	add	x0, x3, x20
  45f7a8:	add	x1, x3, x28
  45f7ac:	b.eq	45f8c4 <_obstack_memory_used@@Base+0x34d4>  // b.none
  45f7b0:	mov	x2, x22
  45f7b4:	str	x3, [sp, #104]
  45f7b8:	bl	402ce0 <memmove@plt>
  45f7bc:	ldr	x3, [sp, #104]
  45f7c0:	cbz	x20, 45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f7c4:	cmp	x20, #0x1
  45f7c8:	b.eq	45f8b8 <_obstack_memory_used@@Base+0x34c8>  // b.none
  45f7cc:	mov	x2, x20
  45f7d0:	mov	x1, x21
  45f7d4:	mov	x0, x3
  45f7d8:	bl	402cd0 <memcpy@plt>
  45f7dc:	ldr	x1, [x19]
  45f7e0:	str	x27, [x19, #8]
  45f7e4:	mov	x0, x19
  45f7e8:	strb	wzr, [x1, x27]
  45f7ec:	ldp	x19, x20, [sp, #16]
  45f7f0:	ldp	x21, x22, [sp, #32]
  45f7f4:	ldp	x23, x24, [sp, #48]
  45f7f8:	ldp	x25, x26, [sp, #64]
  45f7fc:	ldp	x27, x28, [sp, #80]
  45f800:	ldp	x29, x30, [sp], #112
  45f804:	ret
  45f808:	add	x4, x23, x4
  45f80c:	cmp	x21, x4
  45f810:	b.hi	45f79c <_obstack_memory_used@@Base+0x33ac>  // b.pmore
  45f814:	cmp	x20, #0x0
  45f818:	ccmp	x28, x20, #0x0, ne  // ne = any
  45f81c:	b.cc	45f8e4 <_obstack_memory_used@@Base+0x34f4>  // b.lo, b.ul, b.last
  45f820:	cmp	x20, #0x1
  45f824:	b.eq	45f8dc <_obstack_memory_used@@Base+0x34ec>  // b.none
  45f828:	mov	x0, x3
  45f82c:	mov	x2, x20
  45f830:	mov	x1, x21
  45f834:	bl	402ce0 <memmove@plt>
  45f838:	mov	x3, x0
  45f83c:	cbz	w24, 45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f840:	cmp	x22, #0x1
  45f844:	add	x0, x3, x20
  45f848:	add	x1, x3, x28
  45f84c:	b.eq	45f908 <_obstack_memory_used@@Base+0x3518>  // b.none
  45f850:	mov	x2, x22
  45f854:	str	x3, [sp, #104]
  45f858:	bl	402ce0 <memmove@plt>
  45f85c:	ldr	x3, [sp, #104]
  45f860:	cmp	x28, x20
  45f864:	b.cs	45f7dc <_obstack_memory_used@@Base+0x33ec>  // b.hs, b.nlast
  45f868:	add	x28, x3, x28
  45f86c:	add	x0, x21, x20
  45f870:	cmp	x28, x0
  45f874:	b.cs	45f8ec <_obstack_memory_used@@Base+0x34fc>  // b.hs, b.nlast
  45f878:	cmp	x28, x21
  45f87c:	b.hi	45f914 <_obstack_memory_used@@Base+0x3524>  // b.pmore
  45f880:	cmp	x20, #0x1
  45f884:	add	x1, x21, x25
  45f888:	b.eq	45f970 <_obstack_memory_used@@Base+0x3580>  // b.none
  45f88c:	mov	x2, x20
  45f890:	mov	x0, x3
  45f894:	bl	402cd0 <memcpy@plt>
  45f898:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f89c:	mov	x4, x20
  45f8a0:	mov	x3, x21
  45f8a4:	mov	x2, x28
  45f8a8:	mov	x1, x26
  45f8ac:	mov	x0, x19
  45f8b0:	bl	45e990 <_obstack_memory_used@@Base+0x25a0>
  45f8b4:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f8b8:	ldrb	w0, [x21]
  45f8bc:	strb	w0, [x23, x26]
  45f8c0:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f8c4:	ldrb	w0, [x3, x28]
  45f8c8:	strb	w0, [x3, x20]
  45f8cc:	cbz	x20, 45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f8d0:	b	45f7c4 <_obstack_memory_used@@Base+0x33d4>
  45f8d4:	mov	x0, #0xf                   	// #15
  45f8d8:	b	45f774 <_obstack_memory_used@@Base+0x3384>
  45f8dc:	ldrb	w0, [x21]
  45f8e0:	strb	w0, [x23, x26]
  45f8e4:	cbz	w24, 45f860 <_obstack_memory_used@@Base+0x3470>
  45f8e8:	b	45f840 <_obstack_memory_used@@Base+0x3450>
  45f8ec:	cmp	x20, #0x1
  45f8f0:	b.eq	45f8b8 <_obstack_memory_used@@Base+0x34c8>  // b.none
  45f8f4:	mov	x2, x20
  45f8f8:	mov	x1, x21
  45f8fc:	mov	x0, x3
  45f900:	bl	402ce0 <memmove@plt>
  45f904:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f908:	ldrb	w0, [x3, x28]
  45f90c:	strb	w0, [x3, x20]
  45f910:	b	45f860 <_obstack_memory_used@@Base+0x3470>
  45f914:	sub	x28, x28, x21
  45f918:	cmp	x28, #0x1
  45f91c:	b.eq	45f958 <_obstack_memory_used@@Base+0x3568>  // b.none
  45f920:	cbz	x28, 45f938 <_obstack_memory_used@@Base+0x3548>
  45f924:	mov	x0, x3
  45f928:	mov	x1, x21
  45f92c:	mov	x2, x28
  45f930:	bl	402ce0 <memmove@plt>
  45f934:	mov	x3, x0
  45f938:	sub	x2, x20, x28
  45f93c:	add	x0, x3, x28
  45f940:	cmp	x2, #0x1
  45f944:	add	x1, x3, x20
  45f948:	b.eq	45f964 <_obstack_memory_used@@Base+0x3574>  // b.none
  45f94c:	cbz	x2, 45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f950:	bl	402cd0 <memcpy@plt>
  45f954:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f958:	ldrb	w0, [x21]
  45f95c:	strb	w0, [x23, x26]
  45f960:	b	45f938 <_obstack_memory_used@@Base+0x3548>
  45f964:	ldrb	w0, [x3, x20]
  45f968:	strb	w0, [x3, x28]
  45f96c:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f970:	ldrb	w0, [x21, x25]
  45f974:	strb	w0, [x23, x26]
  45f978:	b	45f7dc <_obstack_memory_used@@Base+0x33ec>
  45f97c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f980:	add	x0, x0, #0x698
  45f984:	bl	4037f8 <ferror@plt+0x228>
  45f988:	mov	x4, x3
  45f98c:	ldp	x3, x6, [x1]
  45f990:	ldr	x1, [x0, #8]
  45f994:	cmp	x2, x6
  45f998:	b.hi	45f9b8 <_obstack_memory_used@@Base+0x35c8>  // b.pmore
  45f99c:	sub	x6, x6, x2
  45f9a0:	add	x3, x3, x2
  45f9a4:	cmp	x6, x4
  45f9a8:	mov	x2, x1
  45f9ac:	csel	x4, x6, x4, ls  // ls = plast
  45f9b0:	mov	x1, #0x0                   	// #0
  45f9b4:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45f9b8:	stp	x29, x30, [sp, #-16]!
  45f9bc:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f9c0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45f9c4:	mov	x29, sp
  45f9c8:	mov	x3, x6
  45f9cc:	add	x1, x1, #0x6b8
  45f9d0:	add	x0, x0, #0x5b0
  45f9d4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45f9d8:	mov	x4, x2
  45f9dc:	mov	x3, x1
  45f9e0:	ldr	x2, [x0, #8]
  45f9e4:	mov	x1, #0x0                   	// #0
  45f9e8:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45f9ec:	nop
  45f9f0:	stp	x29, x30, [sp, #-32]!
  45f9f4:	mov	x4, x2
  45f9f8:	mov	x3, x1
  45f9fc:	mov	x29, sp
  45fa00:	ldr	x2, [x0, #8]
  45fa04:	mov	x1, #0x0                   	// #0
  45fa08:	str	x19, [sp, #16]
  45fa0c:	mov	x19, x0
  45fa10:	bl	45f710 <_obstack_memory_used@@Base+0x3320>
  45fa14:	mov	x0, x19
  45fa18:	ldr	x19, [sp, #16]
  45fa1c:	ldp	x29, x30, [sp], #32
  45fa20:	ret
  45fa24:	nop
  45fa28:	mov	x4, x2
  45fa2c:	mov	x3, x1
  45fa30:	ldr	x2, [x0, #8]
  45fa34:	mov	x1, #0x0                   	// #0
  45fa38:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fa3c:	nop
  45fa40:	stp	x29, x30, [sp, #-32]!
  45fa44:	mov	x29, sp
  45fa48:	stp	x19, x20, [sp, #16]
  45fa4c:	mov	x19, x0
  45fa50:	mov	x20, x1
  45fa54:	mov	x0, x1
  45fa58:	bl	402d50 <strlen@plt>
  45fa5c:	mov	x3, x20
  45fa60:	mov	x4, x0
  45fa64:	mov	x0, x19
  45fa68:	mov	x1, #0x0                   	// #0
  45fa6c:	ldr	x2, [x19, #8]
  45fa70:	ldp	x19, x20, [sp, #16]
  45fa74:	ldp	x29, x30, [sp], #32
  45fa78:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fa7c:	nop
  45fa80:	ldr	x5, [x0, #8]
  45fa84:	cmp	x1, x5
  45fa88:	b.hi	45fa9c <_obstack_memory_used@@Base+0x36ac>  // b.pmore
  45fa8c:	sub	x5, x5, x1
  45fa90:	cmp	x5, x2
  45fa94:	csel	x2, x5, x2, ls  // ls = plast
  45fa98:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fa9c:	stp	x29, x30, [sp, #-16]!
  45faa0:	mov	x2, x1
  45faa4:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45faa8:	mov	x29, sp
  45faac:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fab0:	mov	x3, x5
  45fab4:	add	x1, x1, #0x680
  45fab8:	add	x0, x0, #0x5b0
  45fabc:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fac0:	stp	x29, x30, [sp, #-32]!
  45fac4:	mov	x29, sp
  45fac8:	stp	x19, x20, [sp, #16]
  45facc:	mov	x19, x0
  45fad0:	mov	x20, x1
  45fad4:	mov	x0, x1
  45fad8:	bl	402d50 <strlen@plt>
  45fadc:	mov	x3, x20
  45fae0:	mov	x4, x0
  45fae4:	mov	x0, x19
  45fae8:	mov	x1, #0x0                   	// #0
  45faec:	ldr	x2, [x19, #8]
  45faf0:	ldp	x19, x20, [sp, #16]
  45faf4:	ldp	x29, x30, [sp], #32
  45faf8:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fafc:	nop
  45fb00:	ldr	x6, [x0, #8]
  45fb04:	cmp	x1, x6
  45fb08:	b.hi	45fb1c <_obstack_memory_used@@Base+0x372c>  // b.pmore
  45fb0c:	mov	x4, x3
  45fb10:	mov	x3, x2
  45fb14:	mov	x2, #0x0                   	// #0
  45fb18:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fb1c:	stp	x29, x30, [sp, #-16]!
  45fb20:	mov	x2, x1
  45fb24:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fb28:	mov	x29, sp
  45fb2c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fb30:	mov	x3, x6
  45fb34:	add	x1, x1, #0x680
  45fb38:	add	x0, x0, #0x5b0
  45fb3c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fb40:	mov	x4, x3
  45fb44:	ldr	x5, [x0, #8]
  45fb48:	ldr	x3, [x3]
  45fb4c:	cmp	x1, x5
  45fb50:	ldr	x4, [x4, #8]
  45fb54:	b.hi	45fb68 <_obstack_memory_used@@Base+0x3778>  // b.pmore
  45fb58:	sub	x5, x5, x1
  45fb5c:	cmp	x5, x2
  45fb60:	csel	x2, x5, x2, ls  // ls = plast
  45fb64:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fb68:	stp	x29, x30, [sp, #-16]!
  45fb6c:	mov	x2, x1
  45fb70:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fb74:	mov	x29, sp
  45fb78:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fb7c:	mov	x3, x5
  45fb80:	add	x1, x1, #0x680
  45fb84:	add	x0, x0, #0x5b0
  45fb88:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fb8c:	nop
  45fb90:	ldr	x6, [x0, #8]
  45fb94:	ldp	x3, x4, [x2]
  45fb98:	cmp	x1, x6
  45fb9c:	b.hi	45fba8 <_obstack_memory_used@@Base+0x37b8>  // b.pmore
  45fba0:	mov	x2, #0x0                   	// #0
  45fba4:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fba8:	stp	x29, x30, [sp, #-16]!
  45fbac:	mov	x2, x1
  45fbb0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fbb4:	mov	x29, sp
  45fbb8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fbbc:	mov	x3, x6
  45fbc0:	add	x1, x1, #0x680
  45fbc4:	add	x0, x0, #0x5b0
  45fbc8:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fbcc:	nop
  45fbd0:	stp	x29, x30, [sp, #-48]!
  45fbd4:	mov	x29, sp
  45fbd8:	stp	x19, x20, [sp, #16]
  45fbdc:	mov	x20, x0
  45fbe0:	mov	x19, x1
  45fbe4:	mov	x0, x3
  45fbe8:	stp	x21, x22, [sp, #32]
  45fbec:	mov	x21, x3
  45fbf0:	mov	x22, x2
  45fbf4:	bl	402d50 <strlen@plt>
  45fbf8:	ldr	x1, [x20, #8]
  45fbfc:	cmp	x19, x1
  45fc00:	b.hi	45fc30 <_obstack_memory_used@@Base+0x3840>  // b.pmore
  45fc04:	sub	x1, x1, x19
  45fc08:	mov	x4, x0
  45fc0c:	cmp	x1, x22
  45fc10:	mov	x3, x21
  45fc14:	csel	x2, x1, x22, ls  // ls = plast
  45fc18:	mov	x0, x20
  45fc1c:	mov	x1, x19
  45fc20:	ldp	x19, x20, [sp, #16]
  45fc24:	ldp	x21, x22, [sp, #32]
  45fc28:	ldp	x29, x30, [sp], #48
  45fc2c:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fc30:	mov	x3, x1
  45fc34:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fc38:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fc3c:	mov	x2, x19
  45fc40:	add	x1, x1, #0x680
  45fc44:	add	x0, x0, #0x5b0
  45fc48:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fc4c:	nop
  45fc50:	stp	x29, x30, [sp, #-48]!
  45fc54:	mov	x29, sp
  45fc58:	stp	x19, x20, [sp, #16]
  45fc5c:	mov	x20, x0
  45fc60:	mov	x19, x1
  45fc64:	mov	x0, x2
  45fc68:	str	x21, [sp, #32]
  45fc6c:	mov	x21, x2
  45fc70:	bl	402d50 <strlen@plt>
  45fc74:	ldr	x3, [x20, #8]
  45fc78:	cmp	x19, x3
  45fc7c:	b.hi	45fca4 <_obstack_memory_used@@Base+0x38b4>  // b.pmore
  45fc80:	mov	x4, x0
  45fc84:	mov	x3, x21
  45fc88:	mov	x1, x19
  45fc8c:	mov	x0, x20
  45fc90:	ldp	x19, x20, [sp, #16]
  45fc94:	mov	x2, #0x0                   	// #0
  45fc98:	ldr	x21, [sp, #32]
  45fc9c:	ldp	x29, x30, [sp], #48
  45fca0:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fca4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fca8:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fcac:	mov	x2, x19
  45fcb0:	add	x1, x1, #0x680
  45fcb4:	add	x0, x0, #0x5b0
  45fcb8:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fcbc:	nop
  45fcc0:	ldp	x6, x5, [x0]
  45fcc4:	sub	x2, x2, x1
  45fcc8:	sub	x1, x1, x6
  45fccc:	cmp	x1, x5
  45fcd0:	b.hi	45fce4 <_obstack_memory_used@@Base+0x38f4>  // b.pmore
  45fcd4:	sub	x5, x5, x1
  45fcd8:	cmp	x5, x2
  45fcdc:	csel	x2, x5, x2, ls  // ls = plast
  45fce0:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fce4:	stp	x29, x30, [sp, #-16]!
  45fce8:	mov	x2, x1
  45fcec:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fcf0:	mov	x29, sp
  45fcf4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fcf8:	mov	x3, x5
  45fcfc:	add	x1, x1, #0x680
  45fd00:	add	x0, x0, #0x5b0
  45fd04:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fd08:	ldp	x6, x5, [x0]
  45fd0c:	sub	x2, x2, x1
  45fd10:	sub	x4, x4, x3
  45fd14:	sub	x1, x1, x6
  45fd18:	cmp	x1, x5
  45fd1c:	b.hi	45fd30 <_obstack_memory_used@@Base+0x3940>  // b.pmore
  45fd20:	sub	x5, x5, x1
  45fd24:	cmp	x5, x2
  45fd28:	csel	x2, x5, x2, ls  // ls = plast
  45fd2c:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fd30:	stp	x29, x30, [sp, #-16]!
  45fd34:	mov	x2, x1
  45fd38:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fd3c:	mov	x29, sp
  45fd40:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fd44:	mov	x3, x5
  45fd48:	add	x1, x1, #0x680
  45fd4c:	add	x0, x0, #0x5b0
  45fd50:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fd54:	nop
  45fd58:	ldp	x6, x5, [x0]
  45fd5c:	sub	x2, x2, x1
  45fd60:	sub	x4, x4, x3
  45fd64:	sub	x1, x1, x6
  45fd68:	cmp	x1, x5
  45fd6c:	b.hi	45fd80 <_obstack_memory_used@@Base+0x3990>  // b.pmore
  45fd70:	sub	x5, x5, x1
  45fd74:	cmp	x5, x2
  45fd78:	csel	x2, x5, x2, ls  // ls = plast
  45fd7c:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fd80:	stp	x29, x30, [sp, #-16]!
  45fd84:	mov	x2, x1
  45fd88:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fd8c:	mov	x29, sp
  45fd90:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fd94:	mov	x3, x5
  45fd98:	add	x1, x1, #0x680
  45fd9c:	add	x0, x0, #0x5b0
  45fda0:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fda4:	nop
  45fda8:	mov	x4, x3
  45fdac:	sub	x2, x2, x1
  45fdb0:	ldp	x3, x5, [x0]
  45fdb4:	sub	x1, x1, x3
  45fdb8:	cmp	x1, x5
  45fdbc:	ldp	x3, x4, [x4]
  45fdc0:	b.hi	45fdd4 <_obstack_memory_used@@Base+0x39e4>  // b.pmore
  45fdc4:	sub	x5, x5, x1
  45fdc8:	cmp	x5, x2
  45fdcc:	csel	x2, x5, x2, ls  // ls = plast
  45fdd0:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fdd4:	stp	x29, x30, [sp, #-16]!
  45fdd8:	mov	x2, x1
  45fddc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fde0:	mov	x29, sp
  45fde4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fde8:	mov	x3, x5
  45fdec:	add	x1, x1, #0x680
  45fdf0:	add	x0, x0, #0x5b0
  45fdf4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fdf8:	ldp	x6, x5, [x0]
  45fdfc:	sub	x2, x2, x1
  45fe00:	sub	x1, x1, x6
  45fe04:	cmp	x1, x5
  45fe08:	b.hi	45fe1c <_obstack_memory_used@@Base+0x3a2c>  // b.pmore
  45fe0c:	sub	x5, x5, x1
  45fe10:	cmp	x5, x2
  45fe14:	csel	x2, x5, x2, ls  // ls = plast
  45fe18:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fe1c:	stp	x29, x30, [sp, #-16]!
  45fe20:	mov	x2, x1
  45fe24:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fe28:	mov	x29, sp
  45fe2c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fe30:	mov	x3, x5
  45fe34:	add	x1, x1, #0x680
  45fe38:	add	x0, x0, #0x5b0
  45fe3c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fe40:	ldp	x6, x5, [x0]
  45fe44:	sub	x2, x2, x1
  45fe48:	sub	x4, x4, x3
  45fe4c:	sub	x1, x1, x6
  45fe50:	cmp	x1, x5
  45fe54:	b.hi	45fe68 <_obstack_memory_used@@Base+0x3a78>  // b.pmore
  45fe58:	sub	x5, x5, x1
  45fe5c:	cmp	x5, x2
  45fe60:	csel	x2, x5, x2, ls  // ls = plast
  45fe64:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45fe68:	stp	x29, x30, [sp, #-16]!
  45fe6c:	mov	x2, x1
  45fe70:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fe74:	mov	x29, sp
  45fe78:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fe7c:	mov	x3, x5
  45fe80:	add	x1, x1, #0x680
  45fe84:	add	x0, x0, #0x5b0
  45fe88:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fe8c:	nop
  45fe90:	ldp	x6, x5, [x0]
  45fe94:	sub	x2, x2, x1
  45fe98:	sub	x4, x4, x3
  45fe9c:	sub	x1, x1, x6
  45fea0:	cmp	x1, x5
  45fea4:	b.hi	45feb8 <_obstack_memory_used@@Base+0x3ac8>  // b.pmore
  45fea8:	sub	x5, x5, x1
  45feac:	cmp	x5, x2
  45feb0:	csel	x2, x5, x2, ls  // ls = plast
  45feb4:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45feb8:	stp	x29, x30, [sp, #-16]!
  45febc:	mov	x2, x1
  45fec0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fec4:	mov	x29, sp
  45fec8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fecc:	mov	x3, x5
  45fed0:	add	x1, x1, #0x680
  45fed4:	add	x0, x0, #0x5b0
  45fed8:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45fedc:	nop
  45fee0:	stp	x29, x30, [sp, #-48]!
  45fee4:	mov	x29, sp
  45fee8:	stp	x21, x22, [sp, #32]
  45feec:	mov	x21, x0
  45fef0:	mov	x22, x3
  45fef4:	mov	x0, x3
  45fef8:	stp	x19, x20, [sp, #16]
  45fefc:	mov	x19, x1
  45ff00:	mov	x20, x2
  45ff04:	bl	402d50 <strlen@plt>
  45ff08:	ldp	x1, x5, [x21]
  45ff0c:	sub	x20, x20, x19
  45ff10:	sub	x1, x19, x1
  45ff14:	cmp	x1, x5
  45ff18:	b.hi	45ff44 <_obstack_memory_used@@Base+0x3b54>  // b.pmore
  45ff1c:	sub	x5, x5, x1
  45ff20:	mov	x4, x0
  45ff24:	cmp	x5, x20
  45ff28:	mov	x3, x22
  45ff2c:	csel	x2, x5, x20, ls  // ls = plast
  45ff30:	mov	x0, x21
  45ff34:	ldp	x19, x20, [sp, #16]
  45ff38:	ldp	x21, x22, [sp, #32]
  45ff3c:	ldp	x29, x30, [sp], #48
  45ff40:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45ff44:	mov	x2, x1
  45ff48:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45ff4c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45ff50:	mov	x3, x5
  45ff54:	add	x1, x1, #0x680
  45ff58:	add	x0, x0, #0x5b0
  45ff5c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45ff60:	mov	x4, x3
  45ff64:	ldp	x6, x3, [x0]
  45ff68:	sub	x1, x1, x6
  45ff6c:	cmp	x1, x3
  45ff70:	b.hi	45ff80 <_obstack_memory_used@@Base+0x3b90>  // b.pmore
  45ff74:	mov	x3, x2
  45ff78:	mov	x2, #0x0                   	// #0
  45ff7c:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45ff80:	stp	x29, x30, [sp, #-16]!
  45ff84:	mov	x2, x1
  45ff88:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45ff8c:	mov	x29, sp
  45ff90:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45ff94:	add	x0, x0, #0x5b0
  45ff98:	add	x1, x1, #0x680
  45ff9c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  45ffa0:	stp	x29, x30, [sp, #-16]!
  45ffa4:	mov	x29, sp
  45ffa8:	ldr	x6, [x3, #8]
  45ffac:	ldr	x3, [x3]
  45ffb0:	cmp	x4, x6
  45ffb4:	b.hi	45ffe8 <_obstack_memory_used@@Base+0x3bf8>  // b.pmore
  45ffb8:	ldr	x7, [x0, #8]
  45ffbc:	sub	x6, x6, x4
  45ffc0:	cmp	x6, x5
  45ffc4:	add	x3, x3, x4
  45ffc8:	csel	x4, x6, x5, ls  // ls = plast
  45ffcc:	cmp	x1, x7
  45ffd0:	b.hi	460004 <_obstack_memory_used@@Base+0x3c14>  // b.pmore
  45ffd4:	ldp	x29, x30, [sp], #16
  45ffd8:	sub	x7, x7, x1
  45ffdc:	cmp	x7, x2
  45ffe0:	csel	x2, x7, x2, ls  // ls = plast
  45ffe4:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  45ffe8:	mov	x3, x6
  45ffec:	mov	x2, x4
  45fff0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fff4:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  45fff8:	add	x1, x1, #0x680
  45fffc:	add	x0, x0, #0x5b0
  460000:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460004:	mov	x3, x7
  460008:	mov	x2, x1
  46000c:	b	45fff0 <_obstack_memory_used@@Base+0x3c00>
  460010:	stp	x29, x30, [sp, #-16]!
  460014:	mov	x6, x3
  460018:	mov	x29, sp
  46001c:	ldr	x5, [x2, #8]
  460020:	cmp	x3, x5
  460024:	ldr	x3, [x2]
  460028:	b.hi	460054 <_obstack_memory_used@@Base+0x3c64>  // b.pmore
  46002c:	ldr	x2, [x0, #8]
  460030:	sub	x5, x5, x6
  460034:	cmp	x5, x4
  460038:	add	x3, x3, x6
  46003c:	csel	x4, x5, x4, ls  // ls = plast
  460040:	cmp	x1, x2
  460044:	b.hi	460070 <_obstack_memory_used@@Base+0x3c80>  // b.pmore
  460048:	ldp	x29, x30, [sp], #16
  46004c:	mov	x2, #0x0                   	// #0
  460050:	b	45f710 <_obstack_memory_used@@Base+0x3320>
  460054:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460058:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46005c:	mov	x3, x5
  460060:	mov	x2, x6
  460064:	add	x1, x1, #0x668
  460068:	add	x0, x0, #0x5b0
  46006c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460070:	mov	x3, x2
  460074:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460078:	mov	x2, x1
  46007c:	add	x0, x0, #0x5b0
  460080:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460084:	add	x1, x1, #0x680
  460088:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  46008c:	nop
  460090:	stp	x29, x30, [sp, #-32]!
  460094:	mov	x4, x3
  460098:	mov	x29, sp
  46009c:	stp	x19, x20, [sp, #16]
  4600a0:	ldp	x19, x3, [x0]
  4600a4:	sub	x19, x1, x19
  4600a8:	cmp	x19, x3
  4600ac:	b.hi	4600d8 <_obstack_memory_used@@Base+0x3ce8>  // b.pmore
  4600b0:	mov	x20, x0
  4600b4:	mov	x3, x2
  4600b8:	mov	x1, x19
  4600bc:	mov	x2, #0x0                   	// #0
  4600c0:	bl	45f710 <_obstack_memory_used@@Base+0x3320>
  4600c4:	ldr	x0, [x20]
  4600c8:	add	x0, x0, x19
  4600cc:	ldp	x19, x20, [sp, #16]
  4600d0:	ldp	x29, x30, [sp], #32
  4600d4:	ret
  4600d8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4600dc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4600e0:	mov	x2, x19
  4600e4:	add	x1, x1, #0x680
  4600e8:	add	x0, x0, #0x5b0
  4600ec:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4600f0:	stp	x29, x30, [sp, #-32]!
  4600f4:	mov	x29, sp
  4600f8:	stp	x19, x20, [sp, #16]
  4600fc:	mov	x19, x0
  460100:	ldr	x5, [x0, #8]
  460104:	ldr	x4, [x0], #16
  460108:	add	x20, x5, x2
  46010c:	cmp	x4, x0
  460110:	b.eq	460184 <_obstack_memory_used@@Base+0x3d94>  // b.none
  460114:	ldr	x0, [x19, #16]
  460118:	cmp	x20, x0
  46011c:	b.hi	460150 <_obstack_memory_used@@Base+0x3d60>  // b.pmore
  460120:	cbz	x2, 460138 <_obstack_memory_used@@Base+0x3d48>
  460124:	cmp	x2, #0x1
  460128:	add	x0, x4, x5
  46012c:	b.eq	46018c <_obstack_memory_used@@Base+0x3d9c>  // b.none
  460130:	bl	402cd0 <memcpy@plt>
  460134:	ldr	x4, [x19]
  460138:	str	x20, [x19, #8]
  46013c:	strb	wzr, [x4, x20]
  460140:	mov	x0, x19
  460144:	ldp	x19, x20, [sp, #16]
  460148:	ldp	x29, x30, [sp], #32
  46014c:	ret
  460150:	mov	x4, x2
  460154:	mov	x3, x1
  460158:	mov	x0, x19
  46015c:	mov	x1, x5
  460160:	mov	x2, #0x0                   	// #0
  460164:	bl	45e990 <_obstack_memory_used@@Base+0x25a0>
  460168:	ldr	x4, [x19]
  46016c:	str	x20, [x19, #8]
  460170:	mov	x0, x19
  460174:	strb	wzr, [x4, x20]
  460178:	ldp	x19, x20, [sp, #16]
  46017c:	ldp	x29, x30, [sp], #32
  460180:	ret
  460184:	mov	x0, #0xf                   	// #15
  460188:	b	460118 <_obstack_memory_used@@Base+0x3d28>
  46018c:	ldrb	w0, [x1]
  460190:	strb	w0, [x4, x5]
  460194:	mov	x0, x19
  460198:	str	x20, [x19, #8]
  46019c:	ldr	x4, [x19]
  4601a0:	strb	wzr, [x4, x20]
  4601a4:	ldp	x19, x20, [sp, #16]
  4601a8:	ldp	x29, x30, [sp], #32
  4601ac:	ret
  4601b0:	ldp	x1, x2, [x1]
  4601b4:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  4601b8:	ldp	x1, x2, [x1]
  4601bc:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  4601c0:	ldr	x5, [x1, #8]
  4601c4:	ldr	x1, [x1]
  4601c8:	cmp	x2, x5
  4601cc:	b.hi	4601e8 <_obstack_memory_used@@Base+0x3df8>  // b.pmore
  4601d0:	mov	x4, x2
  4601d4:	sub	x2, x5, x2
  4601d8:	cmp	x2, x3
  4601dc:	add	x1, x1, x4
  4601e0:	csel	x2, x2, x3, ls  // ls = plast
  4601e4:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  4601e8:	stp	x29, x30, [sp, #-16]!
  4601ec:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4601f0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4601f4:	mov	x29, sp
  4601f8:	mov	x3, x5
  4601fc:	add	x1, x1, #0x6d0
  460200:	add	x0, x0, #0x5b0
  460204:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460208:	ldr	x4, [x0, #8]
  46020c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  460210:	sub	x3, x3, x4
  460214:	cmp	x2, x3
  460218:	b.hi	460220 <_obstack_memory_used@@Base+0x3e30>  // b.pmore
  46021c:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460220:	stp	x29, x30, [sp, #-16]!
  460224:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460228:	add	x0, x0, #0x6d0
  46022c:	mov	x29, sp
  460230:	bl	4037f8 <ferror@plt+0x228>
  460234:	nop
  460238:	stp	x29, x30, [sp, #-32]!
  46023c:	mov	x29, sp
  460240:	stp	x19, x20, [sp, #16]
  460244:	mov	x19, x0
  460248:	mov	x20, x1
  46024c:	mov	x0, x1
  460250:	bl	402d50 <strlen@plt>
  460254:	ldr	x3, [x19, #8]
  460258:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  46025c:	sub	x1, x1, x3
  460260:	cmp	x1, x0
  460264:	b.cc	460280 <_obstack_memory_used@@Base+0x3e90>  // b.lo, b.ul, b.last
  460268:	mov	x2, x0
  46026c:	mov	x1, x20
  460270:	mov	x0, x19
  460274:	ldp	x19, x20, [sp, #16]
  460278:	ldp	x29, x30, [sp], #32
  46027c:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460280:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460284:	add	x0, x0, #0x6d0
  460288:	bl	4037f8 <ferror@plt+0x228>
  46028c:	nop
  460290:	stp	x29, x30, [sp, #-32]!
  460294:	mov	x29, sp
  460298:	stp	x19, x20, [sp, #16]
  46029c:	mov	x19, x0
  4602a0:	mov	x20, x1
  4602a4:	mov	x0, x1
  4602a8:	bl	402d50 <strlen@plt>
  4602ac:	ldr	x3, [x19, #8]
  4602b0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  4602b4:	sub	x1, x1, x3
  4602b8:	cmp	x0, x1
  4602bc:	b.hi	4602d8 <_obstack_memory_used@@Base+0x3ee8>  // b.pmore
  4602c0:	mov	x2, x0
  4602c4:	mov	x1, x20
  4602c8:	mov	x0, x19
  4602cc:	ldp	x19, x20, [sp, #16]
  4602d0:	ldp	x29, x30, [sp], #32
  4602d4:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  4602d8:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4602dc:	add	x0, x0, #0x6d0
  4602e0:	bl	4037f8 <ferror@plt+0x228>
  4602e4:	nop
  4602e8:	ldr	x4, [x0, #8]
  4602ec:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  4602f0:	sub	x3, x3, x4
  4602f4:	cmp	x2, x3
  4602f8:	b.hi	460300 <_obstack_memory_used@@Base+0x3f10>  // b.pmore
  4602fc:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460300:	stp	x29, x30, [sp, #-16]!
  460304:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460308:	add	x0, x0, #0x6d0
  46030c:	mov	x29, sp
  460310:	bl	4037f8 <ferror@plt+0x228>
  460314:	nop
  460318:	ldr	x4, [x0, #8]
  46031c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
  460320:	sub	x3, x3, x4
  460324:	cmp	x2, x3
  460328:	b.hi	460330 <_obstack_memory_used@@Base+0x3f40>  // b.pmore
  46032c:	b	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460330:	stp	x29, x30, [sp, #-16]!
  460334:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460338:	add	x0, x0, #0x6d0
  46033c:	mov	x29, sp
  460340:	bl	4037f8 <ferror@plt+0x228>
  460344:	nop
  460348:	stp	x29, x30, [sp, #-32]!
  46034c:	mov	x6, x0
  460350:	mov	x5, x3
  460354:	mov	x29, sp
  460358:	ldr	x4, [x0, #8]
  46035c:	str	x19, [sp, #16]
  460360:	cmp	x3, x4
  460364:	b.hi	4603bc <_obstack_memory_used@@Base+0x3fcc>  // b.pmore
  460368:	sub	x4, x4, x3
  46036c:	cmp	x4, x2
  460370:	csel	x19, x4, x2, ls  // ls = plast
  460374:	cbz	x19, 460394 <_obstack_memory_used@@Base+0x3fa4>
  460378:	ldr	x2, [x6]
  46037c:	mov	x0, x1
  460380:	cmp	x19, #0x1
  460384:	add	x1, x2, x3
  460388:	b.eq	4603a4 <_obstack_memory_used@@Base+0x3fb4>  // b.none
  46038c:	mov	x2, x19
  460390:	bl	402cd0 <memcpy@plt>
  460394:	mov	x0, x19
  460398:	ldr	x19, [sp, #16]
  46039c:	ldp	x29, x30, [sp], #32
  4603a0:	ret
  4603a4:	ldrb	w1, [x2, x3]
  4603a8:	strb	w1, [x0]
  4603ac:	mov	x0, x19
  4603b0:	ldr	x19, [sp, #16]
  4603b4:	ldp	x29, x30, [sp], #32
  4603b8:	ret
  4603bc:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4603c0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4603c4:	mov	x3, x4
  4603c8:	mov	x2, x5
  4603cc:	add	x1, x1, #0x6e8
  4603d0:	add	x0, x0, #0x5b0
  4603d4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4603d8:	cmp	x0, x1
  4603dc:	b.eq	460428 <_obstack_memory_used@@Base+0x4038>  // b.none
  4603e0:	mov	x2, x0
  4603e4:	mov	x3, x1
  4603e8:	ldr	x4, [x2], #16
  4603ec:	ldr	x5, [x3], #16
  4603f0:	cmp	x2, x4
  4603f4:	b.eq	46042c <_obstack_memory_used@@Base+0x403c>  // b.none
  4603f8:	cmp	x3, x5
  4603fc:	ldr	x3, [x0, #16]
  460400:	b.eq	460458 <_obstack_memory_used@@Base+0x4068>  // b.none
  460404:	str	x5, [x0]
  460408:	str	x4, [x1]
  46040c:	ldr	x2, [x1, #16]
  460410:	str	x2, [x0, #16]
  460414:	str	x3, [x1, #16]
  460418:	ldr	x2, [x1, #8]
  46041c:	ldr	x3, [x0, #8]
  460420:	str	x2, [x0, #8]
  460424:	str	x3, [x1, #8]
  460428:	ret
  46042c:	cmp	x3, x5
  460430:	b.eq	46046c <_obstack_memory_used@@Base+0x407c>  // b.none
  460434:	ldp	x6, x7, [x0, #16]
  460438:	ldr	x2, [x1, #16]
  46043c:	stp	x6, x7, [x1, #16]
  460440:	str	x5, [x0]
  460444:	str	x3, [x1]
  460448:	str	x2, [x0, #16]
  46044c:	ldr	x3, [x0, #8]
  460450:	ldr	x2, [x1, #8]
  460454:	b	460420 <_obstack_memory_used@@Base+0x4030>
  460458:	ldp	x6, x7, [x1, #16]
  46045c:	stp	x6, x7, [x0, #16]
  460460:	str	x4, [x1]
  460464:	str	x2, [x0]
  460468:	b	460414 <_obstack_memory_used@@Base+0x4024>
  46046c:	ldr	x3, [x0, #8]
  460470:	ldr	x2, [x1, #8]
  460474:	cbz	x3, 460498 <_obstack_memory_used@@Base+0x40a8>
  460478:	ldp	x4, x5, [x0, #16]
  46047c:	cbz	x2, 4604bc <_obstack_memory_used@@Base+0x40cc>
  460480:	ldp	x2, x3, [x1, #16]
  460484:	stp	x4, x5, [x1, #16]
  460488:	stp	x2, x3, [x0, #16]
  46048c:	ldr	x3, [x0, #8]
  460490:	ldr	x2, [x1, #8]
  460494:	b	460420 <_obstack_memory_used@@Base+0x4030>
  460498:	mov	x3, #0x0                   	// #0
  46049c:	cbz	x2, 460420 <_obstack_memory_used@@Base+0x4030>
  4604a0:	ldp	x2, x3, [x1, #16]
  4604a4:	stp	x2, x3, [x0, #16]
  4604a8:	ldp	x2, x3, [x1]
  4604ac:	str	x3, [x0, #8]
  4604b0:	str	xzr, [x1, #8]
  4604b4:	strb	wzr, [x2]
  4604b8:	ret
  4604bc:	stp	x4, x5, [x1, #16]
  4604c0:	ldp	x2, x3, [x0]
  4604c4:	str	x3, [x1, #8]
  4604c8:	str	xzr, [x0, #8]
  4604cc:	strb	wzr, [x2]
  4604d0:	ret
  4604d4:	nop
  4604d8:	ldr	x0, [x0]
  4604dc:	ret
  4604e0:	ldr	x0, [x0]
  4604e4:	ret
  4604e8:	mov	x0, x8
  4604ec:	ret
  4604f0:	stp	x29, x30, [sp, #-80]!
  4604f4:	mov	x29, sp
  4604f8:	stp	x21, x22, [sp, #32]
  4604fc:	ldr	x21, [x0, #8]
  460500:	stp	x19, x20, [sp, #16]
  460504:	cmp	x21, x2
  460508:	csinv	x19, x2, xzr, cs  // cs = hs, nlast
  46050c:	cbz	x3, 46059c <_obstack_memory_used@@Base+0x41ac>
  460510:	mov	x19, #0xffffffffffffffff    	// #-1
  460514:	b.ls	46059c <_obstack_memory_used@@Base+0x41ac>  // b.plast
  460518:	stp	x23, x24, [sp, #48]
  46051c:	sub	x4, x21, x2
  460520:	cmp	x3, x4
  460524:	ldr	x23, [x0]
  460528:	str	x25, [sp, #64]
  46052c:	mov	x25, x3
  460530:	add	x0, x23, x2
  460534:	add	x21, x23, x21
  460538:	b.hi	4605b0 <_obstack_memory_used@@Base+0x41c0>  // b.pmore
  46053c:	mov	x20, #0x1                   	// #1
  460540:	sub	x20, x20, x3
  460544:	adds	x2, x20, x4
  460548:	b.eq	4605b0 <_obstack_memory_used@@Base+0x41c0>  // b.none
  46054c:	ldrb	w24, [x1]
  460550:	mov	x22, x1
  460554:	mov	w1, w24
  460558:	bl	4033d0 <memchr@plt>
  46055c:	mov	x2, x25
  460560:	mov	x19, x0
  460564:	cbz	x0, 460590 <_obstack_memory_used@@Base+0x41a0>
  460568:	mov	x1, x22
  46056c:	bl	4031e0 <memcmp@plt>
  460570:	mov	w1, w0
  460574:	add	x0, x19, #0x1
  460578:	sub	x2, x21, x0
  46057c:	cbz	w1, 4605cc <_obstack_memory_used@@Base+0x41dc>
  460580:	cmp	x25, x2
  460584:	b.hi	460590 <_obstack_memory_used@@Base+0x41a0>  // b.pmore
  460588:	adds	x2, x20, x2
  46058c:	b.ne	460554 <_obstack_memory_used@@Base+0x4164>  // b.any
  460590:	ldp	x23, x24, [sp, #48]
  460594:	mov	x19, #0xffffffffffffffff    	// #-1
  460598:	ldr	x25, [sp, #64]
  46059c:	mov	x0, x19
  4605a0:	ldp	x19, x20, [sp, #16]
  4605a4:	ldp	x21, x22, [sp, #32]
  4605a8:	ldp	x29, x30, [sp], #80
  4605ac:	ret
  4605b0:	mov	x0, x19
  4605b4:	ldp	x19, x20, [sp, #16]
  4605b8:	ldp	x21, x22, [sp, #32]
  4605bc:	ldp	x23, x24, [sp, #48]
  4605c0:	ldr	x25, [sp, #64]
  4605c4:	ldp	x29, x30, [sp], #80
  4605c8:	ret
  4605cc:	sub	x19, x19, x23
  4605d0:	ldp	x23, x24, [sp, #48]
  4605d4:	ldr	x25, [sp, #64]
  4605d8:	b	46059c <_obstack_memory_used@@Base+0x41ac>
  4605dc:	nop
  4605e0:	ldp	x1, x3, [x1]
  4605e4:	b	4604f0 <_obstack_memory_used@@Base+0x4100>
  4605e8:	stp	x29, x30, [sp, #-48]!
  4605ec:	mov	x29, sp
  4605f0:	stp	x19, x20, [sp, #16]
  4605f4:	mov	x19, x1
  4605f8:	mov	x20, x0
  4605fc:	mov	x0, x1
  460600:	str	x21, [sp, #32]
  460604:	mov	x21, x2
  460608:	bl	402d50 <strlen@plt>
  46060c:	mov	x2, x21
  460610:	mov	x3, x0
  460614:	mov	x1, x19
  460618:	mov	x0, x20
  46061c:	ldp	x19, x20, [sp, #16]
  460620:	ldr	x21, [sp, #32]
  460624:	ldp	x29, x30, [sp], #48
  460628:	b	4604f0 <_obstack_memory_used@@Base+0x4100>
  46062c:	nop
  460630:	mov	x3, x2
  460634:	ldr	x2, [x0, #8]
  460638:	cmp	x3, x2
  46063c:	b.cs	460678 <_obstack_memory_used@@Base+0x4288>  // b.hs, b.nlast
  460640:	stp	x29, x30, [sp, #-32]!
  460644:	and	w1, w1, #0xff
  460648:	sub	x2, x2, x3
  46064c:	mov	x29, sp
  460650:	str	x19, [sp, #16]
  460654:	ldr	x19, [x0]
  460658:	add	x0, x19, x3
  46065c:	bl	4033d0 <memchr@plt>
  460660:	sub	x19, x0, x19
  460664:	cmp	x0, #0x0
  460668:	csinv	x0, x19, xzr, ne  // ne = any
  46066c:	ldr	x19, [sp, #16]
  460670:	ldp	x29, x30, [sp], #32
  460674:	ret
  460678:	mov	x0, #0xffffffffffffffff    	// #-1
  46067c:	ret
  460680:	stp	x29, x30, [sp, #-48]!
  460684:	mov	x29, sp
  460688:	ldr	x4, [x0, #8]
  46068c:	stp	x19, x20, [sp, #16]
  460690:	mov	x19, #0xffffffffffffffff    	// #-1
  460694:	cmp	x3, x4
  460698:	b.hi	4606e4 <_obstack_memory_used@@Base+0x42f4>  // b.pmore
  46069c:	sub	x4, x4, x3
  4606a0:	stp	x21, x22, [sp, #32]
  4606a4:	cmp	x4, x2
  4606a8:	mov	x20, x3
  4606ac:	mov	x21, x1
  4606b0:	csel	x19, x4, x2, ls  // ls = plast
  4606b4:	ldr	x22, [x0]
  4606b8:	cbz	x20, 4606e0 <_obstack_memory_used@@Base+0x42f0>
  4606bc:	mov	x2, x20
  4606c0:	mov	x1, x21
  4606c4:	add	x0, x22, x19
  4606c8:	bl	4031e0 <memcmp@plt>
  4606cc:	cbz	w0, 4606e0 <_obstack_memory_used@@Base+0x42f0>
  4606d0:	sub	x0, x19, #0x1
  4606d4:	cbz	x19, 4606f4 <_obstack_memory_used@@Base+0x4304>
  4606d8:	mov	x19, x0
  4606dc:	cbnz	x20, 4606bc <_obstack_memory_used@@Base+0x42cc>
  4606e0:	ldp	x21, x22, [sp, #32]
  4606e4:	mov	x0, x19
  4606e8:	ldp	x19, x20, [sp, #16]
  4606ec:	ldp	x29, x30, [sp], #48
  4606f0:	ret
  4606f4:	mov	x19, #0xffffffffffffffff    	// #-1
  4606f8:	ldp	x21, x22, [sp, #32]
  4606fc:	b	4606e4 <_obstack_memory_used@@Base+0x42f4>
  460700:	ldp	x1, x3, [x1]
  460704:	b	460680 <_obstack_memory_used@@Base+0x4290>
  460708:	stp	x29, x30, [sp, #-48]!
  46070c:	mov	x29, sp
  460710:	stp	x19, x20, [sp, #16]
  460714:	mov	x19, x1
  460718:	mov	x20, x0
  46071c:	mov	x0, x1
  460720:	str	x21, [sp, #32]
  460724:	mov	x21, x2
  460728:	bl	402d50 <strlen@plt>
  46072c:	mov	x2, x21
  460730:	mov	x3, x0
  460734:	mov	x1, x19
  460738:	mov	x0, x20
  46073c:	ldp	x19, x20, [sp, #16]
  460740:	ldr	x21, [sp, #32]
  460744:	ldp	x29, x30, [sp], #48
  460748:	b	460680 <_obstack_memory_used@@Base+0x4290>
  46074c:	nop
  460750:	ldr	x3, [x0, #8]
  460754:	mov	x4, x0
  460758:	and	w1, w1, #0xff
  46075c:	mov	x0, #0xffffffffffffffff    	// #-1
  460760:	cbz	x3, 460790 <_obstack_memory_used@@Base+0x43a0>
  460764:	sub	x3, x3, #0x1
  460768:	cmp	x3, x2
  46076c:	csel	x0, x3, x2, ls  // ls = plast
  460770:	ldr	x3, [x4]
  460774:	nop
  460778:	ldrb	w2, [x3, x0]
  46077c:	cmp	w2, w1
  460780:	b.eq	460790 <_obstack_memory_used@@Base+0x43a0>  // b.none
  460784:	sub	x0, x0, #0x1
  460788:	cmn	x0, #0x1
  46078c:	b.ne	460778 <_obstack_memory_used@@Base+0x4388>  // b.any
  460790:	ret
  460794:	nop
  460798:	cbz	x3, 46081c <_obstack_memory_used@@Base+0x442c>
  46079c:	stp	x29, x30, [sp, #-64]!
  4607a0:	mov	x29, sp
  4607a4:	stp	x19, x20, [sp, #16]
  4607a8:	mov	x19, x2
  4607ac:	mov	x20, x3
  4607b0:	stp	x21, x22, [sp, #32]
  4607b4:	mov	x21, x0
  4607b8:	mov	x22, x1
  4607bc:	str	x23, [sp, #48]
  4607c0:	ldr	x23, [x0, #8]
  4607c4:	b	4607e4 <_obstack_memory_used@@Base+0x43f4>
  4607c8:	ldr	x4, [x21]
  4607cc:	mov	x2, x20
  4607d0:	mov	x0, x22
  4607d4:	ldrb	w1, [x4, x19]
  4607d8:	bl	4033d0 <memchr@plt>
  4607dc:	cbnz	x0, 460804 <_obstack_memory_used@@Base+0x4414>
  4607e0:	add	x19, x19, #0x1
  4607e4:	cmp	x23, x19
  4607e8:	b.hi	4607c8 <_obstack_memory_used@@Base+0x43d8>  // b.pmore
  4607ec:	mov	x0, #0xffffffffffffffff    	// #-1
  4607f0:	ldp	x19, x20, [sp, #16]
  4607f4:	ldp	x21, x22, [sp, #32]
  4607f8:	ldr	x23, [sp, #48]
  4607fc:	ldp	x29, x30, [sp], #64
  460800:	ret
  460804:	mov	x0, x19
  460808:	ldp	x19, x20, [sp, #16]
  46080c:	ldp	x21, x22, [sp, #32]
  460810:	ldr	x23, [sp, #48]
  460814:	ldp	x29, x30, [sp], #64
  460818:	ret
  46081c:	mov	x0, #0xffffffffffffffff    	// #-1
  460820:	ret
  460824:	nop
  460828:	ldp	x1, x3, [x1]
  46082c:	b	460798 <_obstack_memory_used@@Base+0x43a8>
  460830:	stp	x29, x30, [sp, #-48]!
  460834:	mov	x29, sp
  460838:	stp	x19, x20, [sp, #16]
  46083c:	mov	x19, x1
  460840:	mov	x20, x0
  460844:	mov	x0, x1
  460848:	str	x21, [sp, #32]
  46084c:	mov	x21, x2
  460850:	bl	402d50 <strlen@plt>
  460854:	mov	x2, x21
  460858:	mov	x3, x0
  46085c:	mov	x1, x19
  460860:	mov	x0, x20
  460864:	ldp	x19, x20, [sp, #16]
  460868:	ldr	x21, [sp, #32]
  46086c:	ldp	x29, x30, [sp], #48
  460870:	b	460798 <_obstack_memory_used@@Base+0x43a8>
  460874:	nop
  460878:	b	460630 <_obstack_memory_used@@Base+0x4240>
  46087c:	nop
  460880:	stp	x29, x30, [sp, #-48]!
  460884:	mov	x29, sp
  460888:	ldr	x4, [x0, #8]
  46088c:	stp	x19, x20, [sp, #16]
  460890:	mov	x19, #0xffffffffffffffff    	// #-1
  460894:	cmp	x4, #0x0
  460898:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  46089c:	b.eq	4608e4 <_obstack_memory_used@@Base+0x44f4>  // b.none
  4608a0:	sub	x4, x4, #0x1
  4608a4:	mov	x20, x3
  4608a8:	cmp	x4, x2
  4608ac:	stp	x21, x22, [sp, #32]
  4608b0:	csel	x19, x4, x2, ls  // ls = plast
  4608b4:	mov	x21, x1
  4608b8:	ldr	x22, [x0]
  4608bc:	b	4608cc <_obstack_memory_used@@Base+0x44dc>
  4608c0:	sub	x19, x19, #0x1
  4608c4:	cmn	x19, #0x1
  4608c8:	b.eq	4608e0 <_obstack_memory_used@@Base+0x44f0>  // b.none
  4608cc:	ldrb	w1, [x22, x19]
  4608d0:	mov	x2, x20
  4608d4:	mov	x0, x21
  4608d8:	bl	4033d0 <memchr@plt>
  4608dc:	cbz	x0, 4608c0 <_obstack_memory_used@@Base+0x44d0>
  4608e0:	ldp	x21, x22, [sp, #32]
  4608e4:	mov	x0, x19
  4608e8:	ldp	x19, x20, [sp, #16]
  4608ec:	ldp	x29, x30, [sp], #48
  4608f0:	ret
  4608f4:	nop
  4608f8:	ldp	x1, x3, [x1]
  4608fc:	b	460880 <_obstack_memory_used@@Base+0x4490>
  460900:	stp	x29, x30, [sp, #-48]!
  460904:	mov	x29, sp
  460908:	stp	x19, x20, [sp, #16]
  46090c:	mov	x19, x1
  460910:	mov	x20, x0
  460914:	mov	x0, x1
  460918:	str	x21, [sp, #32]
  46091c:	mov	x21, x2
  460920:	bl	402d50 <strlen@plt>
  460924:	mov	x2, x21
  460928:	mov	x3, x0
  46092c:	mov	x1, x19
  460930:	mov	x0, x20
  460934:	ldp	x19, x20, [sp, #16]
  460938:	ldr	x21, [sp, #32]
  46093c:	ldp	x29, x30, [sp], #48
  460940:	b	460880 <_obstack_memory_used@@Base+0x4490>
  460944:	nop
  460948:	b	460750 <_obstack_memory_used@@Base+0x4360>
  46094c:	nop
  460950:	stp	x29, x30, [sp, #-64]!
  460954:	mov	x29, sp
  460958:	stp	x21, x22, [sp, #32]
  46095c:	ldr	x22, [x0, #8]
  460960:	cmp	x2, x22
  460964:	b.cs	4609d8 <_obstack_memory_used@@Base+0x45e8>  // b.hs, b.nlast
  460968:	stp	x19, x20, [sp, #16]
  46096c:	mov	x21, x1
  460970:	mov	x19, x2
  460974:	str	x23, [sp, #48]
  460978:	mov	x20, x3
  46097c:	ldr	x23, [x0]
  460980:	cbnz	x3, 460994 <_obstack_memory_used@@Base+0x45a4>
  460984:	b	4609a8 <_obstack_memory_used@@Base+0x45b8>
  460988:	add	x19, x19, #0x1
  46098c:	cmp	x22, x19
  460990:	b.eq	4609c0 <_obstack_memory_used@@Base+0x45d0>  // b.none
  460994:	ldrb	w1, [x23, x19]
  460998:	mov	x2, x20
  46099c:	mov	x0, x21
  4609a0:	bl	4033d0 <memchr@plt>
  4609a4:	cbnz	x0, 460988 <_obstack_memory_used@@Base+0x4598>
  4609a8:	mov	x0, x19
  4609ac:	ldp	x19, x20, [sp, #16]
  4609b0:	ldr	x23, [sp, #48]
  4609b4:	ldp	x21, x22, [sp, #32]
  4609b8:	ldp	x29, x30, [sp], #64
  4609bc:	ret
  4609c0:	mov	x0, #0xffffffffffffffff    	// #-1
  4609c4:	ldp	x19, x20, [sp, #16]
  4609c8:	ldp	x21, x22, [sp, #32]
  4609cc:	ldr	x23, [sp, #48]
  4609d0:	ldp	x29, x30, [sp], #64
  4609d4:	ret
  4609d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4609dc:	b	4609b4 <_obstack_memory_used@@Base+0x45c4>
  4609e0:	ldp	x1, x3, [x1]
  4609e4:	b	460950 <_obstack_memory_used@@Base+0x4560>
  4609e8:	stp	x29, x30, [sp, #-48]!
  4609ec:	mov	x29, sp
  4609f0:	stp	x19, x20, [sp, #16]
  4609f4:	mov	x19, x1
  4609f8:	mov	x20, x0
  4609fc:	mov	x0, x1
  460a00:	str	x21, [sp, #32]
  460a04:	mov	x21, x2
  460a08:	bl	402d50 <strlen@plt>
  460a0c:	mov	x2, x21
  460a10:	mov	x3, x0
  460a14:	mov	x1, x19
  460a18:	mov	x0, x20
  460a1c:	ldp	x19, x20, [sp, #16]
  460a20:	ldr	x21, [sp, #32]
  460a24:	ldp	x29, x30, [sp], #48
  460a28:	b	460950 <_obstack_memory_used@@Base+0x4560>
  460a2c:	nop
  460a30:	mov	x4, x0
  460a34:	and	w1, w1, #0xff
  460a38:	mov	x0, x2
  460a3c:	ldr	x3, [x4, #8]
  460a40:	cmp	x2, x3
  460a44:	b.cs	460a6c <_obstack_memory_used@@Base+0x467c>  // b.hs, b.nlast
  460a48:	ldr	x4, [x4]
  460a4c:	b	460a5c <_obstack_memory_used@@Base+0x466c>
  460a50:	add	x0, x0, #0x1
  460a54:	cmp	x0, x3
  460a58:	b.eq	460a6c <_obstack_memory_used@@Base+0x467c>  // b.none
  460a5c:	ldrb	w2, [x4, x0]
  460a60:	cmp	w2, w1
  460a64:	b.eq	460a50 <_obstack_memory_used@@Base+0x4660>  // b.none
  460a68:	ret
  460a6c:	mov	x0, #0xffffffffffffffff    	// #-1
  460a70:	ret
  460a74:	nop
  460a78:	stp	x29, x30, [sp, #-48]!
  460a7c:	mov	x29, sp
  460a80:	ldr	x4, [x0, #8]
  460a84:	stp	x19, x20, [sp, #16]
  460a88:	mov	x19, #0xffffffffffffffff    	// #-1
  460a8c:	cbz	x4, 460ad4 <_obstack_memory_used@@Base+0x46e4>
  460a90:	sub	x4, x4, #0x1
  460a94:	stp	x21, x22, [sp, #32]
  460a98:	cmp	x4, x2
  460a9c:	ldr	x22, [x0]
  460aa0:	mov	x21, x1
  460aa4:	mov	x20, x3
  460aa8:	csel	x19, x4, x2, ls  // ls = plast
  460aac:	cbz	x20, 460ad0 <_obstack_memory_used@@Base+0x46e0>
  460ab0:	ldrb	w1, [x22, x19]
  460ab4:	mov	x2, x20
  460ab8:	mov	x0, x21
  460abc:	bl	4033d0 <memchr@plt>
  460ac0:	cbz	x0, 460ad0 <_obstack_memory_used@@Base+0x46e0>
  460ac4:	sub	x19, x19, #0x1
  460ac8:	cmn	x19, #0x1
  460acc:	b.ne	460aac <_obstack_memory_used@@Base+0x46bc>  // b.any
  460ad0:	ldp	x21, x22, [sp, #32]
  460ad4:	mov	x0, x19
  460ad8:	ldp	x19, x20, [sp, #16]
  460adc:	ldp	x29, x30, [sp], #48
  460ae0:	ret
  460ae4:	nop
  460ae8:	ldp	x1, x3, [x1]
  460aec:	b	460a78 <_obstack_memory_used@@Base+0x4688>
  460af0:	stp	x29, x30, [sp, #-48]!
  460af4:	mov	x29, sp
  460af8:	stp	x19, x20, [sp, #16]
  460afc:	mov	x19, x1
  460b00:	mov	x20, x0
  460b04:	mov	x0, x1
  460b08:	str	x21, [sp, #32]
  460b0c:	mov	x21, x2
  460b10:	bl	402d50 <strlen@plt>
  460b14:	mov	x2, x21
  460b18:	mov	x3, x0
  460b1c:	mov	x1, x19
  460b20:	mov	x0, x20
  460b24:	ldp	x19, x20, [sp, #16]
  460b28:	ldr	x21, [sp, #32]
  460b2c:	ldp	x29, x30, [sp], #48
  460b30:	b	460a78 <_obstack_memory_used@@Base+0x4688>
  460b34:	nop
  460b38:	ldr	x3, [x0, #8]
  460b3c:	and	w1, w1, #0xff
  460b40:	cbz	x3, 460b74 <_obstack_memory_used@@Base+0x4784>
  460b44:	sub	x3, x3, #0x1
  460b48:	cmp	x3, x2
  460b4c:	ldr	x4, [x0]
  460b50:	csel	x0, x3, x2, ls  // ls = plast
  460b54:	b	460b64 <_obstack_memory_used@@Base+0x4774>
  460b58:	sub	x0, x0, #0x1
  460b5c:	cmn	x0, #0x1
  460b60:	b.eq	460b70 <_obstack_memory_used@@Base+0x4780>  // b.none
  460b64:	ldrb	w2, [x4, x0]
  460b68:	cmp	w2, w1
  460b6c:	b.eq	460b58 <_obstack_memory_used@@Base+0x4768>  // b.none
  460b70:	ret
  460b74:	mov	x0, #0xffffffffffffffff    	// #-1
  460b78:	ret
  460b7c:	nop
  460b80:	stp	x29, x30, [sp, #-32]!
  460b84:	mov	x29, sp
  460b88:	stp	x19, x20, [sp, #16]
  460b8c:	ldr	x19, [x0, #8]
  460b90:	ldr	x20, [x1, #8]
  460b94:	cmp	x20, x19
  460b98:	csel	x2, x20, x19, ls  // ls = plast
  460b9c:	cbz	x2, 460bb0 <_obstack_memory_used@@Base+0x47c0>
  460ba0:	ldr	x0, [x0]
  460ba4:	ldr	x1, [x1]
  460ba8:	bl	4031e0 <memcmp@plt>
  460bac:	cbnz	w0, 460bcc <_obstack_memory_used@@Base+0x47dc>
  460bb0:	sub	x19, x19, x20
  460bb4:	mov	x0, #0x7fffffff            	// #2147483647
  460bb8:	cmp	x19, x0
  460bbc:	b.gt	460bcc <_obstack_memory_used@@Base+0x47dc>
  460bc0:	mov	x0, #0xffffffff80000000    	// #-2147483648
  460bc4:	cmp	x19, x0
  460bc8:	csel	w0, w0, w19, lt  // lt = tstop
  460bcc:	ldp	x19, x20, [sp, #16]
  460bd0:	ldp	x29, x30, [sp], #32
  460bd4:	ret
  460bd8:	stp	x29, x30, [sp, #-32]!
  460bdc:	mov	x29, sp
  460be0:	ldr	x4, [x0, #8]
  460be4:	stp	x19, x20, [sp, #16]
  460be8:	cmp	x1, x4
  460bec:	b.hi	460c48 <_obstack_memory_used@@Base+0x4858>  // b.pmore
  460bf0:	sub	x4, x4, x1
  460bf4:	ldr	x20, [x3, #8]
  460bf8:	cmp	x4, x2
  460bfc:	csel	x19, x4, x2, ls  // ls = plast
  460c00:	cmp	x20, x19
  460c04:	csel	x2, x20, x19, ls  // ls = plast
  460c08:	cbz	x2, 460c20 <_obstack_memory_used@@Base+0x4830>
  460c0c:	ldr	x0, [x0]
  460c10:	add	x0, x0, x1
  460c14:	ldr	x1, [x3]
  460c18:	bl	4031e0 <memcmp@plt>
  460c1c:	cbnz	w0, 460c3c <_obstack_memory_used@@Base+0x484c>
  460c20:	sub	x19, x19, x20
  460c24:	mov	x0, #0x7fffffff            	// #2147483647
  460c28:	cmp	x19, x0
  460c2c:	b.gt	460c3c <_obstack_memory_used@@Base+0x484c>
  460c30:	mov	x0, #0xffffffff80000000    	// #-2147483648
  460c34:	cmp	x19, x0
  460c38:	csel	w0, w0, w19, lt  // lt = tstop
  460c3c:	ldp	x19, x20, [sp, #16]
  460c40:	ldp	x29, x30, [sp], #32
  460c44:	ret
  460c48:	mov	x2, x1
  460c4c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460c50:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460c54:	mov	x3, x4
  460c58:	add	x1, x1, #0x700
  460c5c:	add	x0, x0, #0x5b0
  460c60:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460c64:	nop
  460c68:	stp	x29, x30, [sp, #-32]!
  460c6c:	mov	x29, sp
  460c70:	ldr	x6, [x0, #8]
  460c74:	stp	x19, x20, [sp, #16]
  460c78:	cmp	x1, x6
  460c7c:	b.hi	460cf0 <_obstack_memory_used@@Base+0x4900>  // b.pmore
  460c80:	ldr	x7, [x3, #8]
  460c84:	cmp	x4, x7
  460c88:	b.hi	460d0c <_obstack_memory_used@@Base+0x491c>  // b.pmore
  460c8c:	sub	x6, x6, x1
  460c90:	sub	x7, x7, x4
  460c94:	cmp	x6, x2
  460c98:	csel	x19, x6, x2, ls  // ls = plast
  460c9c:	cmp	x7, x5
  460ca0:	csel	x20, x7, x5, ls  // ls = plast
  460ca4:	cmp	x20, x19
  460ca8:	csel	x2, x20, x19, ls  // ls = plast
  460cac:	cbz	x2, 460cc8 <_obstack_memory_used@@Base+0x48d8>
  460cb0:	ldr	x0, [x0]
  460cb4:	add	x0, x0, x1
  460cb8:	ldr	x1, [x3]
  460cbc:	add	x1, x1, x4
  460cc0:	bl	4031e0 <memcmp@plt>
  460cc4:	cbnz	w0, 460ce4 <_obstack_memory_used@@Base+0x48f4>
  460cc8:	sub	x19, x19, x20
  460ccc:	mov	x0, #0x7fffffff            	// #2147483647
  460cd0:	cmp	x19, x0
  460cd4:	b.gt	460ce4 <_obstack_memory_used@@Base+0x48f4>
  460cd8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  460cdc:	cmp	x19, x0
  460ce0:	csel	w0, w0, w19, lt  // lt = tstop
  460ce4:	ldp	x19, x20, [sp, #16]
  460ce8:	ldp	x29, x30, [sp], #32
  460cec:	ret
  460cf0:	mov	x3, x6
  460cf4:	mov	x2, x1
  460cf8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460cfc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460d00:	add	x1, x1, #0x700
  460d04:	add	x0, x0, #0x5b0
  460d08:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460d0c:	mov	x3, x7
  460d10:	mov	x2, x4
  460d14:	b	460cf8 <_obstack_memory_used@@Base+0x4908>
  460d18:	stp	x29, x30, [sp, #-48]!
  460d1c:	mov	x29, sp
  460d20:	stp	x21, x22, [sp, #32]
  460d24:	mov	x22, x0
  460d28:	mov	x21, x1
  460d2c:	mov	x0, x1
  460d30:	stp	x19, x20, [sp, #16]
  460d34:	bl	402d50 <strlen@plt>
  460d38:	ldr	x19, [x22, #8]
  460d3c:	mov	x20, x0
  460d40:	cmp	x0, x19
  460d44:	csel	x2, x0, x19, ls  // ls = plast
  460d48:	cbz	x2, 460d5c <_obstack_memory_used@@Base+0x496c>
  460d4c:	ldr	x0, [x22]
  460d50:	mov	x1, x21
  460d54:	bl	4031e0 <memcmp@plt>
  460d58:	cbnz	w0, 460d78 <_obstack_memory_used@@Base+0x4988>
  460d5c:	sub	x19, x19, x20
  460d60:	mov	x0, #0x7fffffff            	// #2147483647
  460d64:	cmp	x19, x0
  460d68:	b.gt	460d78 <_obstack_memory_used@@Base+0x4988>
  460d6c:	mov	x0, #0xffffffff80000000    	// #-2147483648
  460d70:	cmp	x19, x0
  460d74:	csel	w0, w0, w19, lt  // lt = tstop
  460d78:	ldp	x19, x20, [sp, #16]
  460d7c:	ldp	x21, x22, [sp, #32]
  460d80:	ldp	x29, x30, [sp], #48
  460d84:	ret
  460d88:	stp	x29, x30, [sp, #-64]!
  460d8c:	mov	x29, sp
  460d90:	ldr	x4, [x0, #8]
  460d94:	stp	x19, x20, [sp, #16]
  460d98:	stp	x21, x22, [sp, #32]
  460d9c:	cmp	x1, x4
  460da0:	mov	x21, x1
  460da4:	str	x23, [sp, #48]
  460da8:	b.hi	460e1c <_obstack_memory_used@@Base+0x4a2c>  // b.pmore
  460dac:	sub	x4, x4, x1
  460db0:	mov	x22, x0
  460db4:	cmp	x4, x2
  460db8:	mov	x23, x3
  460dbc:	csel	x19, x4, x2, ls  // ls = plast
  460dc0:	mov	x0, x3
  460dc4:	bl	402d50 <strlen@plt>
  460dc8:	cmp	x0, x19
  460dcc:	mov	x20, x0
  460dd0:	csel	x2, x0, x19, ls  // ls = plast
  460dd4:	cbz	x2, 460dec <_obstack_memory_used@@Base+0x49fc>
  460dd8:	ldr	x0, [x22]
  460ddc:	mov	x1, x23
  460de0:	add	x0, x0, x21
  460de4:	bl	4031e0 <memcmp@plt>
  460de8:	cbnz	w0, 460e08 <_obstack_memory_used@@Base+0x4a18>
  460dec:	sub	x19, x19, x20
  460df0:	mov	x0, #0x7fffffff            	// #2147483647
  460df4:	cmp	x19, x0
  460df8:	b.gt	460e08 <_obstack_memory_used@@Base+0x4a18>
  460dfc:	mov	x0, #0xffffffff80000000    	// #-2147483648
  460e00:	cmp	x19, x0
  460e04:	csel	w0, w0, w19, lt  // lt = tstop
  460e08:	ldp	x19, x20, [sp, #16]
  460e0c:	ldp	x21, x22, [sp, #32]
  460e10:	ldr	x23, [sp, #48]
  460e14:	ldp	x29, x30, [sp], #64
  460e18:	ret
  460e1c:	mov	x2, x1
  460e20:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460e24:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460e28:	mov	x3, x4
  460e2c:	add	x1, x1, #0x700
  460e30:	add	x0, x0, #0x5b0
  460e34:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460e38:	stp	x29, x30, [sp, #-32]!
  460e3c:	mov	x6, x1
  460e40:	mov	x29, sp
  460e44:	ldr	x5, [x0, #8]
  460e48:	stp	x19, x20, [sp, #16]
  460e4c:	cmp	x1, x5
  460e50:	b.hi	460eac <_obstack_memory_used@@Base+0x4abc>  // b.pmore
  460e54:	sub	x5, x5, x1
  460e58:	mov	x20, x4
  460e5c:	cmp	x5, x2
  460e60:	csel	x19, x5, x2, ls  // ls = plast
  460e64:	cmp	x19, x4
  460e68:	csel	x2, x19, x4, ls  // ls = plast
  460e6c:	cbz	x2, 460e84 <_obstack_memory_used@@Base+0x4a94>
  460e70:	ldr	x0, [x0]
  460e74:	mov	x1, x3
  460e78:	add	x0, x0, x6
  460e7c:	bl	4031e0 <memcmp@plt>
  460e80:	cbnz	w0, 460ea0 <_obstack_memory_used@@Base+0x4ab0>
  460e84:	sub	x19, x19, x20
  460e88:	mov	x0, #0x7fffffff            	// #2147483647
  460e8c:	cmp	x19, x0
  460e90:	b.gt	460ea0 <_obstack_memory_used@@Base+0x4ab0>
  460e94:	mov	x0, #0xffffffff80000000    	// #-2147483648
  460e98:	cmp	x19, x0
  460e9c:	csel	w0, w0, w19, lt  // lt = tstop
  460ea0:	ldp	x19, x20, [sp, #16]
  460ea4:	ldp	x29, x30, [sp], #32
  460ea8:	ret
  460eac:	mov	x2, x1
  460eb0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460eb4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460eb8:	mov	x3, x5
  460ebc:	add	x1, x1, #0x700
  460ec0:	add	x0, x0, #0x5b0
  460ec4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  460ec8:	str	x1, [x0]
  460ecc:	ret
  460ed0:	str	x1, [x0]
  460ed4:	ret
  460ed8:	stp	x29, x30, [sp, #-64]!
  460edc:	mov	x29, sp
  460ee0:	stp	x19, x20, [sp, #16]
  460ee4:	mov	x19, x8
  460ee8:	stp	x21, x22, [sp, #32]
  460eec:	mov	x21, x1
  460ef0:	mov	x22, x0
  460ef4:	str	x23, [sp, #48]
  460ef8:	add	x23, x8, #0x10
  460efc:	bl	402d50 <strlen@plt>
  460f00:	stp	x23, xzr, [x19]
  460f04:	mov	x20, x0
  460f08:	strb	wzr, [x19, #16]
  460f0c:	mov	x0, x19
  460f10:	ldr	x1, [x21, #8]
  460f14:	add	x1, x20, x1
  460f18:	bl	45ee50 <_obstack_memory_used@@Base+0x2a60>
  460f1c:	ldr	x0, [x19, #8]
  460f20:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  460f24:	sub	x1, x1, x0
  460f28:	cmp	x20, x1
  460f2c:	b.hi	460f64 <_obstack_memory_used@@Base+0x4b74>  // b.pmore
  460f30:	mov	x2, x20
  460f34:	mov	x1, x22
  460f38:	mov	x0, x19
  460f3c:	bl	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460f40:	ldp	x1, x2, [x21]
  460f44:	mov	x0, x19
  460f48:	bl	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460f4c:	mov	x0, x19
  460f50:	ldp	x19, x20, [sp, #16]
  460f54:	ldp	x21, x22, [sp, #32]
  460f58:	ldr	x23, [sp, #48]
  460f5c:	ldp	x29, x30, [sp], #64
  460f60:	ret
  460f64:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  460f68:	add	x0, x0, #0x6d0
  460f6c:	bl	4037f8 <ferror@plt+0x228>
  460f70:	ldr	x1, [x19]
  460f74:	mov	x19, x0
  460f78:	cmp	x23, x1
  460f7c:	b.eq	460f88 <_obstack_memory_used@@Base+0x4b98>  // b.none
  460f80:	mov	x0, x1
  460f84:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  460f88:	mov	x0, x19
  460f8c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  460f90:	stp	x29, x30, [sp, #-48]!
  460f94:	mov	x29, sp
  460f98:	stp	x19, x20, [sp, #16]
  460f9c:	mov	x20, x1
  460fa0:	mov	x19, x8
  460fa4:	stp	x21, x22, [sp, #32]
  460fa8:	add	x21, x8, #0x10
  460fac:	and	w22, w0, #0xff
  460fb0:	stp	x21, xzr, [x8]
  460fb4:	mov	x0, x8
  460fb8:	strb	wzr, [x8, #16]
  460fbc:	ldr	x1, [x1, #8]
  460fc0:	add	x1, x1, #0x1
  460fc4:	bl	45ee50 <_obstack_memory_used@@Base+0x2a60>
  460fc8:	ldr	x1, [x19, #8]
  460fcc:	mov	w4, w22
  460fd0:	mov	x0, x19
  460fd4:	mov	x3, #0x1                   	// #1
  460fd8:	mov	x2, #0x0                   	// #0
  460fdc:	bl	45f408 <_obstack_memory_used@@Base+0x3018>
  460fe0:	ldp	x1, x2, [x20]
  460fe4:	mov	x0, x19
  460fe8:	bl	4600f0 <_obstack_memory_used@@Base+0x3d00>
  460fec:	mov	x0, x19
  460ff0:	ldp	x19, x20, [sp, #16]
  460ff4:	ldp	x21, x22, [sp, #32]
  460ff8:	ldp	x29, x30, [sp], #48
  460ffc:	ret
  461000:	ldr	x1, [x19]
  461004:	mov	x19, x0
  461008:	cmp	x21, x1
  46100c:	b.eq	461018 <_obstack_memory_used@@Base+0x4c28>  // b.none
  461010:	mov	x0, x1
  461014:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  461018:	mov	x0, x19
  46101c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  461020:	stp	x29, x30, [sp, #-64]!
  461024:	mov	x29, sp
  461028:	stp	x19, x20, [sp, #16]
  46102c:	sub	x19, x2, x1
  461030:	cmp	x19, #0xf
  461034:	str	x21, [sp, #32]
  461038:	mov	x20, x0
  46103c:	str	x19, [sp, #56]
  461040:	mov	x21, x1
  461044:	b.hi	461098 <_obstack_memory_used@@Base+0x4ca8>  // b.pmore
  461048:	cmp	x19, #0x1
  46104c:	ldr	x0, [x0]
  461050:	b.ne	46107c <_obstack_memory_used@@Base+0x4c8c>  // b.any
  461054:	ldrb	w1, [x1]
  461058:	strb	w1, [x0]
  46105c:	ldr	x0, [x20]
  461060:	ldr	x19, [sp, #56]
  461064:	str	x19, [x20, #8]
  461068:	strb	wzr, [x0, x19]
  46106c:	ldp	x19, x20, [sp, #16]
  461070:	ldr	x21, [sp, #32]
  461074:	ldp	x29, x30, [sp], #64
  461078:	ret
  46107c:	cbnz	x19, 4610b0 <_obstack_memory_used@@Base+0x4cc0>
  461080:	str	x19, [x20, #8]
  461084:	strb	wzr, [x0, x19]
  461088:	ldp	x19, x20, [sp, #16]
  46108c:	ldr	x21, [sp, #32]
  461090:	ldp	x29, x30, [sp], #64
  461094:	ret
  461098:	add	x1, sp, #0x38
  46109c:	mov	x2, #0x0                   	// #0
  4610a0:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  4610a4:	str	x0, [x20]
  4610a8:	ldr	x1, [sp, #56]
  4610ac:	str	x1, [x20, #16]
  4610b0:	mov	x2, x19
  4610b4:	mov	x1, x21
  4610b8:	bl	402cd0 <memcpy@plt>
  4610bc:	ldr	x0, [x20]
  4610c0:	ldr	x19, [sp, #56]
  4610c4:	str	x19, [x20, #8]
  4610c8:	strb	wzr, [x0, x19]
  4610cc:	ldp	x19, x20, [sp, #16]
  4610d0:	ldr	x21, [sp, #32]
  4610d4:	ldp	x29, x30, [sp], #64
  4610d8:	ret
  4610dc:	nop
  4610e0:	add	x5, x0, #0x10
  4610e4:	str	x5, [x0]
  4610e8:	mov	w3, #0x0                   	// #0
  4610ec:	b	461020 <_obstack_memory_used@@Base+0x4c30>
  4610f0:	stp	x29, x30, [sp, #-64]!
  4610f4:	mov	x29, sp
  4610f8:	stp	x19, x20, [sp, #16]
  4610fc:	sub	x19, x2, x1
  461100:	cmp	x19, #0xf
  461104:	str	x21, [sp, #32]
  461108:	mov	x20, x0
  46110c:	str	x19, [sp, #56]
  461110:	mov	x21, x1
  461114:	b.hi	461168 <_obstack_memory_used@@Base+0x4d78>  // b.pmore
  461118:	cmp	x19, #0x1
  46111c:	ldr	x0, [x0]
  461120:	b.ne	46114c <_obstack_memory_used@@Base+0x4d5c>  // b.any
  461124:	ldrb	w1, [x1]
  461128:	strb	w1, [x0]
  46112c:	ldr	x0, [x20]
  461130:	ldr	x19, [sp, #56]
  461134:	str	x19, [x20, #8]
  461138:	strb	wzr, [x0, x19]
  46113c:	ldp	x19, x20, [sp, #16]
  461140:	ldr	x21, [sp, #32]
  461144:	ldp	x29, x30, [sp], #64
  461148:	ret
  46114c:	cbnz	x19, 461180 <_obstack_memory_used@@Base+0x4d90>
  461150:	str	x19, [x20, #8]
  461154:	strb	wzr, [x0, x19]
  461158:	ldp	x19, x20, [sp, #16]
  46115c:	ldr	x21, [sp, #32]
  461160:	ldp	x29, x30, [sp], #64
  461164:	ret
  461168:	add	x1, sp, #0x38
  46116c:	mov	x2, #0x0                   	// #0
  461170:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  461174:	str	x0, [x20]
  461178:	ldr	x1, [sp, #56]
  46117c:	str	x1, [x20, #16]
  461180:	mov	x2, x19
  461184:	mov	x1, x21
  461188:	bl	402cd0 <memcpy@plt>
  46118c:	ldr	x0, [x20]
  461190:	ldr	x19, [sp, #56]
  461194:	str	x19, [x20, #8]
  461198:	strb	wzr, [x0, x19]
  46119c:	ldp	x19, x20, [sp, #16]
  4611a0:	ldr	x21, [sp, #32]
  4611a4:	ldp	x29, x30, [sp], #64
  4611a8:	ret
  4611ac:	nop
  4611b0:	add	x4, x0, #0x10
  4611b4:	str	x4, [x0]
  4611b8:	ldr	x2, [x1, #8]
  4611bc:	mov	w3, #0x0                   	// #0
  4611c0:	ldr	x1, [x1]
  4611c4:	add	x2, x1, x2
  4611c8:	b	4610f0 <_obstack_memory_used@@Base+0x4d00>
  4611cc:	nop
  4611d0:	stp	x29, x30, [sp, #-64]!
  4611d4:	cmp	x2, #0x0
  4611d8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4611dc:	mov	x29, sp
  4611e0:	stp	x19, x20, [sp, #16]
  4611e4:	str	x21, [sp, #32]
  4611e8:	b.eq	461298 <_obstack_memory_used@@Base+0x4ea8>  // b.none
  4611ec:	sub	x19, x2, x1
  4611f0:	str	x19, [sp, #56]
  4611f4:	mov	x21, x1
  4611f8:	mov	x20, x0
  4611fc:	cmp	x19, #0xf
  461200:	b.hi	461254 <_obstack_memory_used@@Base+0x4e64>  // b.pmore
  461204:	cmp	x19, #0x1
  461208:	ldr	x0, [x0]
  46120c:	b.ne	461238 <_obstack_memory_used@@Base+0x4e48>  // b.any
  461210:	ldrb	w1, [x1]
  461214:	strb	w1, [x0]
  461218:	ldr	x0, [x20]
  46121c:	ldr	x19, [sp, #56]
  461220:	str	x19, [x20, #8]
  461224:	strb	wzr, [x0, x19]
  461228:	ldp	x19, x20, [sp, #16]
  46122c:	ldr	x21, [sp, #32]
  461230:	ldp	x29, x30, [sp], #64
  461234:	ret
  461238:	cbnz	x19, 46126c <_obstack_memory_used@@Base+0x4e7c>
  46123c:	str	x19, [x20, #8]
  461240:	strb	wzr, [x0, x19]
  461244:	ldp	x19, x20, [sp, #16]
  461248:	ldr	x21, [sp, #32]
  46124c:	ldp	x29, x30, [sp], #64
  461250:	ret
  461254:	add	x1, sp, #0x38
  461258:	mov	x2, #0x0                   	// #0
  46125c:	bl	45e588 <_obstack_memory_used@@Base+0x2198>
  461260:	str	x0, [x20]
  461264:	ldr	x1, [sp, #56]
  461268:	str	x1, [x20, #16]
  46126c:	mov	x2, x19
  461270:	mov	x1, x21
  461274:	bl	402cd0 <memcpy@plt>
  461278:	ldr	x0, [x20]
  46127c:	ldr	x19, [sp, #56]
  461280:	str	x19, [x20, #8]
  461284:	strb	wzr, [x0, x19]
  461288:	ldp	x19, x20, [sp, #16]
  46128c:	ldr	x21, [sp, #32]
  461290:	ldp	x29, x30, [sp], #64
  461294:	ret
  461298:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46129c:	add	x0, x0, #0x718
  4612a0:	bl	4036fc <ferror@plt+0x12c>
  4612a4:	nop
  4612a8:	add	x4, x0, #0x10
  4612ac:	str	x4, [x0]
  4612b0:	ldr	x2, [x1, #8]
  4612b4:	mov	w3, #0x0                   	// #0
  4612b8:	ldr	x1, [x1]
  4612bc:	add	x2, x1, x2
  4612c0:	b	4611d0 <_obstack_memory_used@@Base+0x4de0>
  4612c4:	nop
  4612c8:	stp	x29, x30, [sp, #-48]!
  4612cc:	mov	x4, x0
  4612d0:	mov	w3, #0x0                   	// #0
  4612d4:	mov	x29, sp
  4612d8:	stp	x19, x20, [sp, #16]
  4612dc:	mov	x20, x1
  4612e0:	mov	x19, x8
  4612e4:	ldr	x2, [x4, #8]
  4612e8:	str	x21, [sp, #32]
  4612ec:	add	x21, x8, #0x10
  4612f0:	str	x21, [x8]
  4612f4:	mov	x0, x8
  4612f8:	ldr	x1, [x4]
  4612fc:	add	x2, x1, x2
  461300:	bl	4611d0 <_obstack_memory_used@@Base+0x4de0>
  461304:	ldp	x1, x2, [x20]
  461308:	mov	x0, x19
  46130c:	bl	4600f0 <_obstack_memory_used@@Base+0x3d00>
  461310:	mov	x0, x19
  461314:	ldp	x19, x20, [sp, #16]
  461318:	ldr	x21, [sp, #32]
  46131c:	ldp	x29, x30, [sp], #48
  461320:	ret
  461324:	ldr	x1, [x19]
  461328:	mov	x19, x0
  46132c:	cmp	x21, x1
  461330:	b.eq	46133c <_obstack_memory_used@@Base+0x4f4c>  // b.none
  461334:	mov	x0, x1
  461338:	bl	461928 <_obstack_memory_used@@Base+0x5538>
  46133c:	mov	x0, x19
  461340:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  461344:	nop
  461348:	add	x5, x0, #0x10
  46134c:	str	x5, [x0]
  461350:	mov	w3, #0x0                   	// #0
  461354:	b	4611d0 <_obstack_memory_used@@Base+0x4de0>
  461358:	ldr	x3, [x1, #8]
  46135c:	add	x6, x0, #0x10
  461360:	str	x6, [x0]
  461364:	cmp	x2, x3
  461368:	ldr	x1, [x1]
  46136c:	b.hi	461384 <_obstack_memory_used@@Base+0x4f94>  // b.pmore
  461370:	mov	x5, x2
  461374:	add	x2, x1, x3
  461378:	add	x1, x1, x5
  46137c:	mov	w3, #0x0                   	// #0
  461380:	b	411970 <ferror@plt+0xe3a0>
  461384:	stp	x29, x30, [sp, #-16]!
  461388:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46138c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461390:	mov	x29, sp
  461394:	add	x1, x1, #0x748
  461398:	add	x0, x0, #0x5b0
  46139c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4613a0:	ldr	x4, [x1, #8]
  4613a4:	add	x7, x0, #0x10
  4613a8:	str	x7, [x0]
  4613ac:	cmp	x2, x4
  4613b0:	ldr	x1, [x1]
  4613b4:	b.hi	4613d4 <_obstack_memory_used@@Base+0x4fe4>  // b.pmore
  4613b8:	sub	x4, x4, x2
  4613bc:	add	x1, x1, x2
  4613c0:	cmp	x4, x3
  4613c4:	csel	x4, x4, x3, ls  // ls = plast
  4613c8:	mov	w3, #0x0                   	// #0
  4613cc:	add	x2, x1, x4
  4613d0:	b	411970 <ferror@plt+0xe3a0>
  4613d4:	stp	x29, x30, [sp, #-16]!
  4613d8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4613dc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4613e0:	mov	x29, sp
  4613e4:	mov	x3, x4
  4613e8:	add	x1, x1, #0x748
  4613ec:	add	x0, x0, #0x5b0
  4613f0:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4613f4:	nop
  4613f8:	ldr	x4, [x1, #8]
  4613fc:	add	x7, x0, #0x10
  461400:	str	x7, [x0]
  461404:	cmp	x2, x4
  461408:	ldr	x1, [x1]
  46140c:	b.hi	46142c <_obstack_memory_used@@Base+0x503c>  // b.pmore
  461410:	sub	x4, x4, x2
  461414:	add	x1, x1, x2
  461418:	cmp	x4, x3
  46141c:	csel	x4, x4, x3, ls  // ls = plast
  461420:	mov	w3, #0x0                   	// #0
  461424:	add	x2, x1, x4
  461428:	b	411970 <ferror@plt+0xe3a0>
  46142c:	stp	x29, x30, [sp, #-16]!
  461430:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461434:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461438:	mov	x29, sp
  46143c:	mov	x3, x4
  461440:	add	x1, x1, #0x768
  461444:	add	x0, x0, #0x5b0
  461448:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  46144c:	nop
  461450:	add	x5, x0, #0x10
  461454:	str	x5, [x0]
  461458:	add	x2, x1, x2
  46145c:	mov	w3, #0x0                   	// #0
  461460:	b	411970 <ferror@plt+0xe3a0>
  461464:	nop
  461468:	stp	x29, x30, [sp, #-32]!
  46146c:	mov	x2, #0xffffffffffffffff    	// #-1
  461470:	mov	x29, sp
  461474:	stp	x19, x20, [sp, #16]
  461478:	mov	x20, x0
  46147c:	add	x0, x0, #0x10
  461480:	mov	x19, x1
  461484:	str	x0, [x20]
  461488:	cbz	x1, 461498 <_obstack_memory_used@@Base+0x50a8>
  46148c:	mov	x0, x1
  461490:	bl	402d50 <strlen@plt>
  461494:	add	x2, x19, x0
  461498:	mov	x1, x19
  46149c:	mov	x0, x20
  4614a0:	ldp	x19, x20, [sp, #16]
  4614a4:	mov	w3, #0x0                   	// #0
  4614a8:	ldp	x29, x30, [sp], #32
  4614ac:	b	411970 <ferror@plt+0xe3a0>
  4614b0:	add	x5, x0, #0x10
  4614b4:	str	x5, [x0]
  4614b8:	add	x2, x1, x2
  4614bc:	mov	w3, #0x0                   	// #0
  4614c0:	b	411970 <ferror@plt+0xe3a0>
  4614c4:	nop
  4614c8:	add	x5, x0, #0x10
  4614cc:	str	x5, [x0]
  4614d0:	mov	w3, #0x0                   	// #0
  4614d4:	b	411970 <ferror@plt+0xe3a0>
  4614d8:	stp	x29, x30, [sp, #-32]!
  4614dc:	mov	x29, sp
  4614e0:	ldr	x3, [x0, #8]
  4614e4:	str	x19, [sp, #16]
  4614e8:	cmp	x1, x3
  4614ec:	b.hi	461530 <_obstack_memory_used@@Base+0x5140>  // b.pmore
  4614f0:	add	x4, x8, #0x10
  4614f4:	str	x4, [x8]
  4614f8:	sub	x4, x3, x1
  4614fc:	mov	x19, x8
  461500:	ldr	x5, [x0]
  461504:	cmp	x4, x2
  461508:	csel	x2, x4, x2, ls  // ls = plast
  46150c:	mov	x0, x8
  461510:	add	x1, x5, x1
  461514:	mov	w3, #0x0                   	// #0
  461518:	add	x2, x1, x2
  46151c:	bl	411970 <ferror@plt+0xe3a0>
  461520:	mov	x0, x19
  461524:	ldr	x19, [sp, #16]
  461528:	ldp	x29, x30, [sp], #32
  46152c:	ret
  461530:	mov	x2, x1
  461534:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461538:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46153c:	add	x0, x0, #0x5b0
  461540:	add	x1, x1, #0x778
  461544:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  461548:	ldr	x2, [x0]
  46154c:	ldr	x0, [x1]
  461550:	cmp	x2, x0
  461554:	cset	w0, eq  // eq = none
  461558:	ret
  46155c:	nop
  461560:	ldr	x2, [x0]
  461564:	ldr	x0, [x1]
  461568:	cmp	x2, x0
  46156c:	cset	w0, eq  // eq = none
  461570:	ret
  461574:	nop
  461578:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46157c:	add	x0, x0, #0x798
  461580:	ret
  461584:	nop
  461588:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46158c:	ldr	x1, [x1, #3912]
  461590:	add	x1, x1, #0x10
  461594:	str	x1, [x0]
  461598:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  46159c:	nop
  4615a0:	stp	x29, x30, [sp, #-32]!
  4615a4:	mov	x29, sp
  4615a8:	str	x19, [sp, #16]
  4615ac:	mov	x19, x0
  4615b0:	bl	461588 <_obstack_memory_used@@Base+0x5198>
  4615b4:	mov	x0, x19
  4615b8:	mov	x1, #0x8                   	// #8
  4615bc:	ldr	x19, [sp, #16]
  4615c0:	ldp	x29, x30, [sp], #32
  4615c4:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  4615c8:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4615cc:	add	x0, x0, #0x7b8
  4615d0:	ret
  4615d4:	nop
  4615d8:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4615dc:	ldr	x1, [x1, #3616]
  4615e0:	add	x1, x1, #0x10
  4615e4:	str	x1, [x0]
  4615e8:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  4615ec:	nop
  4615f0:	stp	x29, x30, [sp, #-32]!
  4615f4:	mov	x29, sp
  4615f8:	str	x19, [sp, #16]
  4615fc:	mov	x19, x0
  461600:	bl	4615d8 <_obstack_memory_used@@Base+0x51e8>
  461604:	mov	x0, x19
  461608:	mov	x1, #0x8                   	// #8
  46160c:	ldr	x19, [sp, #16]
  461610:	ldp	x29, x30, [sp], #32
  461614:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  461618:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46161c:	add	x0, x0, #0x7d8
  461620:	ret
  461624:	nop
  461628:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46162c:	ldr	x1, [x1, #3728]
  461630:	add	x1, x1, #0x10
  461634:	str	x1, [x0]
  461638:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  46163c:	nop
  461640:	stp	x29, x30, [sp, #-32]!
  461644:	mov	x29, sp
  461648:	str	x19, [sp, #16]
  46164c:	mov	x19, x0
  461650:	bl	461628 <_obstack_memory_used@@Base+0x5238>
  461654:	mov	x0, x19
  461658:	mov	x1, #0x8                   	// #8
  46165c:	ldr	x19, [sp, #16]
  461660:	ldp	x29, x30, [sp], #32
  461664:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  461668:	stp	x29, x30, [sp, #-64]!
  46166c:	mov	x29, sp
  461670:	ldr	x4, [x0]
  461674:	str	xzr, [sp, #40]
  461678:	str	xzr, [sp, #56]
  46167c:	add	x3, sp, #0x28
  461680:	ldr	x4, [x4, #48]
  461684:	str	x19, [sp, #16]
  461688:	mov	x19, x2
  46168c:	mov	x2, #0x1000000000          	// #68719476736
  461690:	str	x2, [sp, #48]
  461694:	ldr	x2, [x19]
  461698:	blr	x4
  46169c:	ldr	w0, [sp, #48]
  4616a0:	and	w0, w0, #0x6
  4616a4:	cmp	w0, #0x6
  4616a8:	b.ne	4616c4 <_obstack_memory_used@@Base+0x52d4>  // b.any
  4616ac:	ldr	x1, [sp, #40]
  4616b0:	str	x1, [x19]
  4616b4:	mov	w0, #0x1                   	// #1
  4616b8:	ldr	x19, [sp, #16]
  4616bc:	ldp	x29, x30, [sp], #64
  4616c0:	ret
  4616c4:	mov	w0, #0x0                   	// #0
  4616c8:	ldr	x19, [sp, #16]
  4616cc:	ldp	x29, x30, [sp], #64
  4616d0:	ret
  4616d4:	nop
  4616d8:	cmp	x4, x2
  4616dc:	mov	w0, #0x6                   	// #6
  4616e0:	csinc	w0, w0, wzr, eq  // eq = none
  4616e4:	ret
  4616e8:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4616ec:	ldr	x1, [x1, #4032]
  4616f0:	add	x1, x1, #0x10
  4616f4:	str	x1, [x0]
  4616f8:	b	45e0e0 <_obstack_memory_used@@Base+0x1cf0>
  4616fc:	nop
  461700:	stp	x29, x30, [sp, #-32]!
  461704:	mov	x29, sp
  461708:	str	x19, [sp, #16]
  46170c:	mov	x19, x0
  461710:	bl	4616e8 <_obstack_memory_used@@Base+0x52f8>
  461714:	mov	x0, x19
  461718:	mov	x1, #0x10                  	// #16
  46171c:	ldr	x19, [sp, #16]
  461720:	ldp	x29, x30, [sp], #32
  461724:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  461728:	stp	x29, x30, [sp, #-64]!
  46172c:	cmp	x4, x6
  461730:	mov	x29, sp
  461734:	stp	x19, x20, [sp, #16]
  461738:	mov	x20, x4
  46173c:	mov	x19, x7
  461740:	stp	x21, x22, [sp, #32]
  461744:	mov	w21, w2
  461748:	ldr	x22, [x0, #8]
  46174c:	str	x23, [sp, #48]
  461750:	mov	x23, x3
  461754:	b.eq	4617a4 <_obstack_memory_used@@Base+0x53b4>  // b.none
  461758:	ldr	x1, [x3, #8]
  46175c:	cmp	x1, x22
  461760:	b.eq	46177c <_obstack_memory_used@@Base+0x538c>  // b.none
  461764:	ldrb	w0, [x22]
  461768:	cmp	w0, #0x2a
  46176c:	b.eq	46178c <_obstack_memory_used@@Base+0x539c>  // b.none
  461770:	mov	x0, x22
  461774:	bl	403220 <strcmp@plt>
  461778:	cbnz	w0, 46178c <_obstack_memory_used@@Base+0x539c>
  46177c:	mov	w0, #0x1                   	// #1
  461780:	str	x20, [x19]
  461784:	str	w21, [x19, #8]
  461788:	str	w0, [x19, #16]
  46178c:	mov	w0, #0x0                   	// #0
  461790:	ldp	x19, x20, [sp, #16]
  461794:	ldp	x21, x22, [sp, #32]
  461798:	ldr	x23, [sp, #48]
  46179c:	ldp	x29, x30, [sp], #64
  4617a0:	ret
  4617a4:	ldr	x1, [x5, #8]
  4617a8:	cmp	x1, x22
  4617ac:	b.eq	4617e8 <_obstack_memory_used@@Base+0x53f8>  // b.none
  4617b0:	ldrb	w0, [x22]
  4617b4:	cmp	w0, #0x2a
  4617b8:	b.eq	4617d8 <_obstack_memory_used@@Base+0x53e8>  // b.none
  4617bc:	mov	x0, x22
  4617c0:	bl	403220 <strcmp@plt>
  4617c4:	cbz	w0, 4617e8 <_obstack_memory_used@@Base+0x53f8>
  4617c8:	ldr	x1, [x23, #8]
  4617cc:	cmp	x22, x1
  4617d0:	b.ne	461770 <_obstack_memory_used@@Base+0x5380>  // b.any
  4617d4:	b	46177c <_obstack_memory_used@@Base+0x538c>
  4617d8:	ldr	x0, [x3, #8]
  4617dc:	cmp	x0, x22
  4617e0:	b.ne	46178c <_obstack_memory_used@@Base+0x539c>  // b.any
  4617e4:	b	46177c <_obstack_memory_used@@Base+0x538c>
  4617e8:	str	w21, [x19, #12]
  4617ec:	mov	w0, #0x0                   	// #0
  4617f0:	ldp	x19, x20, [sp, #16]
  4617f4:	ldp	x21, x22, [sp, #32]
  4617f8:	ldr	x23, [sp, #48]
  4617fc:	ldp	x29, x30, [sp], #64
  461800:	ret
  461804:	nop
  461808:	stp	x29, x30, [sp, #-48]!
  46180c:	mov	x29, sp
  461810:	ldr	x0, [x0, #8]
  461814:	stp	x19, x20, [sp, #16]
  461818:	mov	x20, x2
  46181c:	ldr	x1, [x1, #8]
  461820:	str	x21, [sp, #32]
  461824:	mov	x19, x3
  461828:	cmp	x0, x1
  46182c:	b.eq	461848 <_obstack_memory_used@@Base+0x5458>  // b.none
  461830:	ldrb	w2, [x0]
  461834:	mov	w21, #0x0                   	// #0
  461838:	cmp	w2, #0x2a
  46183c:	b.eq	461860 <_obstack_memory_used@@Base+0x5470>  // b.none
  461840:	bl	403220 <strcmp@plt>
  461844:	cbnz	w0, 461860 <_obstack_memory_used@@Base+0x5470>
  461848:	mov	x0, #0x10                  	// #16
  46184c:	mov	w1, #0x6                   	// #6
  461850:	mov	w21, #0x1                   	// #1
  461854:	str	x20, [x19]
  461858:	str	w1, [x19, #8]
  46185c:	str	x0, [x19, #16]
  461860:	mov	w0, w21
  461864:	ldp	x19, x20, [sp, #16]
  461868:	ldr	x21, [sp, #32]
  46186c:	ldp	x29, x30, [sp], #48
  461870:	ret
  461874:	nop
  461878:	stp	x29, x30, [sp, #-48]!
  46187c:	mov	x29, sp
  461880:	stp	x19, x20, [sp, #16]
  461884:	mov	x20, x0
  461888:	mov	x19, x1
  46188c:	ldr	x0, [x0, #8]
  461890:	ldr	x1, [x1, #8]
  461894:	cmp	x0, x1
  461898:	b.eq	461900 <_obstack_memory_used@@Base+0x5510>  // b.none
  46189c:	stp	x21, x22, [sp, #32]
  4618a0:	mov	x22, x2
  4618a4:	mov	w21, w3
  4618a8:	ldrb	w2, [x0]
  4618ac:	cmp	w2, #0x2a
  4618b0:	b.eq	4618d0 <_obstack_memory_used@@Base+0x54e0>  // b.none
  4618b4:	bl	403220 <strcmp@plt>
  4618b8:	cbnz	w0, 4618d0 <_obstack_memory_used@@Base+0x54e0>
  4618bc:	mov	w0, #0x1                   	// #1
  4618c0:	ldp	x19, x20, [sp, #16]
  4618c4:	ldp	x21, x22, [sp, #32]
  4618c8:	ldp	x29, x30, [sp], #48
  4618cc:	ret
  4618d0:	cmp	w21, #0x3
  4618d4:	b.hi	461910 <_obstack_memory_used@@Base+0x5520>  // b.pmore
  4618d8:	ldr	x3, [x19]
  4618dc:	mov	x2, x22
  4618e0:	mov	x1, x20
  4618e4:	mov	x0, x19
  4618e8:	ldp	x19, x20, [sp, #16]
  4618ec:	ldp	x21, x22, [sp, #32]
  4618f0:	ldp	x29, x30, [sp], #48
  4618f4:	ldr	x3, [x3, #40]
  4618f8:	mov	x16, x3
  4618fc:	br	x16
  461900:	mov	w0, #0x1                   	// #1
  461904:	ldp	x19, x20, [sp, #16]
  461908:	ldp	x29, x30, [sp], #48
  46190c:	ret
  461910:	mov	w0, #0x0                   	// #0
  461914:	ldp	x19, x20, [sp, #16]
  461918:	ldp	x21, x22, [sp, #32]
  46191c:	ldp	x29, x30, [sp], #48
  461920:	ret
  461924:	nop
  461928:	b	4032a0 <free@plt>
  46192c:	nop
  461930:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461934:	add	x0, x0, #0x820
  461938:	ret
  46193c:	nop
  461940:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461944:	add	x0, x0, #0x848
  461948:	ret
  46194c:	nop
  461950:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461954:	ldr	x1, [x1, #3936]
  461958:	add	x1, x1, #0x10
  46195c:	str	x1, [x0]
  461960:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  461964:	nop
  461968:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46196c:	ldr	x1, [x1, #3856]
  461970:	add	x1, x1, #0x10
  461974:	str	x1, [x0]
  461978:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  46197c:	nop
  461980:	stp	x29, x30, [sp, #-32]!
  461984:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461988:	mov	x29, sp
  46198c:	ldr	x1, [x1, #3936]
  461990:	str	x19, [sp, #16]
  461994:	mov	x19, x0
  461998:	add	x1, x1, #0x10
  46199c:	str	x1, [x0]
  4619a0:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  4619a4:	mov	x0, x19
  4619a8:	mov	x1, #0x8                   	// #8
  4619ac:	ldr	x19, [sp, #16]
  4619b0:	ldp	x29, x30, [sp], #32
  4619b4:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  4619b8:	stp	x29, x30, [sp, #-32]!
  4619bc:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4619c0:	mov	x29, sp
  4619c4:	ldr	x1, [x1, #3856]
  4619c8:	str	x19, [sp, #16]
  4619cc:	mov	x19, x0
  4619d0:	add	x1, x1, #0x10
  4619d4:	str	x1, [x0]
  4619d8:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  4619dc:	mov	x0, x19
  4619e0:	mov	x1, #0x8                   	// #8
  4619e4:	ldr	x19, [sp, #16]
  4619e8:	ldp	x29, x30, [sp], #32
  4619ec:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  4619f0:	stp	x29, x30, [sp, #-48]!
  4619f4:	mov	x29, sp
  4619f8:	stp	x19, x20, [sp, #16]
  4619fc:	adrp	x20, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461a00:	mov	x19, x0
  461a04:	ldr	x0, [x20, #3600]
  461a08:	str	x21, [sp, #32]
  461a0c:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  461a10:	cbz	x0, 461a20 <_obstack_memory_used@@Base+0x5630>
  461a14:	add	x0, x21, #0x4f8
  461a18:	bl	403530 <pthread_mutex_lock@plt>
  461a1c:	cbnz	w0, 461b18 <_obstack_memory_used@@Base+0x5728>
  461a20:	add	x0, x21, #0x4f8
  461a24:	sub	x5, x19, #0x10
  461a28:	ldr	x1, [x0, #48]
  461a2c:	cbz	x1, 461aa8 <_obstack_memory_used@@Base+0x56b8>
  461a30:	ldur	x6, [x19, #-16]
  461a34:	add	x4, x5, x6
  461a38:	cmp	x1, x4
  461a3c:	b.hi	461aa8 <_obstack_memory_used@@Base+0x56b8>  // b.pmore
  461a40:	ldr	x2, [x1, #8]
  461a44:	b.eq	461afc <_obstack_memory_used@@Base+0x570c>  // b.none
  461a48:	add	x0, x0, #0x30
  461a4c:	cbnz	x2, 461a68 <_obstack_memory_used@@Base+0x5678>
  461a50:	b	461a84 <_obstack_memory_used@@Base+0x5694>
  461a54:	ldr	x3, [x2, #8]
  461a58:	add	x0, x1, #0x8
  461a5c:	cbz	x3, 461ae4 <_obstack_memory_used@@Base+0x56f4>
  461a60:	mov	x1, x2
  461a64:	mov	x2, x3
  461a68:	cmp	x4, x2
  461a6c:	b.cc	461a54 <_obstack_memory_used@@Base+0x5664>  // b.lo, b.ul, b.last
  461a70:	b.ne	461b10 <_obstack_memory_used@@Base+0x5720>  // b.any
  461a74:	ldp	x2, x3, [x4]
  461a78:	str	x3, [x1, #8]
  461a7c:	ldr	x1, [x0]
  461a80:	add	x6, x6, x2
  461a84:	ldr	x2, [x1]
  461a88:	add	x3, x1, x2
  461a8c:	cmp	x5, x3
  461a90:	b.eq	461ad8 <_obstack_memory_used@@Base+0x56e8>  // b.none
  461a94:	ldr	x1, [x1, #8]
  461a98:	stp	x6, x1, [x19, #-16]
  461a9c:	ldr	x0, [x0]
  461aa0:	str	x5, [x0, #8]
  461aa4:	b	461ab4 <_obstack_memory_used@@Base+0x56c4>
  461aa8:	add	x0, x21, #0x4f8
  461aac:	stur	x1, [x19, #-8]
  461ab0:	str	x5, [x0, #48]
  461ab4:	ldr	x20, [x20, #3600]
  461ab8:	cbz	x20, 461ac8 <_obstack_memory_used@@Base+0x56d8>
  461abc:	add	x0, x21, #0x4f8
  461ac0:	bl	403550 <pthread_mutex_unlock@plt>
  461ac4:	cbnz	w0, 461b1c <_obstack_memory_used@@Base+0x572c>
  461ac8:	ldp	x19, x20, [sp, #16]
  461acc:	ldr	x21, [sp, #32]
  461ad0:	ldp	x29, x30, [sp], #48
  461ad4:	ret
  461ad8:	add	x6, x2, x6
  461adc:	str	x6, [x1]
  461ae0:	b	461ab4 <_obstack_memory_used@@Base+0x56c4>
  461ae4:	ldr	x1, [x1, #8]
  461ae8:	ldr	x2, [x1]
  461aec:	add	x3, x1, x2
  461af0:	cmp	x5, x3
  461af4:	b.ne	461a94 <_obstack_memory_used@@Base+0x56a4>  // b.any
  461af8:	b	461ad8 <_obstack_memory_used@@Base+0x56e8>
  461afc:	ldr	x1, [x1]
  461b00:	add	x6, x1, x6
  461b04:	stp	x6, x2, [x19, #-16]
  461b08:	str	x5, [x0, #48]
  461b0c:	b	461ab4 <_obstack_memory_used@@Base+0x56c4>
  461b10:	ldr	x1, [x0]
  461b14:	b	461a84 <_obstack_memory_used@@Base+0x5694>
  461b18:	bl	4039f0 <ferror@plt+0x420>
  461b1c:	mov	x0, #0x8                   	// #8
  461b20:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  461b24:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461b28:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461b2c:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461b30:	ldr	x3, [x3, #3856]
  461b34:	ldr	x2, [x2, #4064]
  461b38:	add	x3, x3, #0x10
  461b3c:	ldr	x1, [x1, #4016]
  461b40:	str	x3, [x0]
  461b44:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  461b48:	cmn	x1, #0x1
  461b4c:	b.ne	461b54 <_obstack_memory_used@@Base+0x5764>  // b.any
  461b50:	bl	462a18 <_obstack_memory_used@@Base+0x6628>
  461b54:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  461b58:	stp	x29, x30, [sp, #-48]!
  461b5c:	mov	x29, sp
  461b60:	stp	x19, x20, [sp, #16]
  461b64:	adrp	x20, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461b68:	mov	x19, x0
  461b6c:	ldr	x0, [x20, #3600]
  461b70:	str	x21, [sp, #32]
  461b74:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  461b78:	cbz	x0, 461b88 <_obstack_memory_used@@Base+0x5798>
  461b7c:	add	x0, x21, #0x4f8
  461b80:	bl	403530 <pthread_mutex_lock@plt>
  461b84:	cbnz	w0, 461c24 <_obstack_memory_used@@Base+0x5834>
  461b88:	add	x3, x21, #0x4f8
  461b8c:	adds	x0, x19, #0x10
  461b90:	mov	x19, #0x10                  	// #16
  461b94:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  461b98:	add	x0, x0, #0xf
  461b9c:	ldr	x19, [x3, #48]
  461ba0:	and	x0, x0, #0xfffffffffffffff0
  461ba4:	cbz	x19, 461bf0 <_obstack_memory_used@@Base+0x5800>
  461ba8:	add	x3, x3, #0x30
  461bac:	b	461bb8 <_obstack_memory_used@@Base+0x57c8>
  461bb0:	add	x3, x2, #0x8
  461bb4:	cbz	x19, 461bf0 <_obstack_memory_used@@Base+0x5800>
  461bb8:	mov	x2, x19
  461bbc:	ldp	x1, x19, [x19]
  461bc0:	cmp	x0, x1
  461bc4:	b.hi	461bb0 <_obstack_memory_used@@Base+0x57c0>  // b.pmore
  461bc8:	sub	x1, x1, x0
  461bcc:	cmp	x1, #0xf
  461bd0:	b.ls	461c18 <_obstack_memory_used@@Base+0x5828>  // b.plast
  461bd4:	add	x4, x2, x0
  461bd8:	str	x19, [x4, #8]
  461bdc:	str	x1, [x2, x0]
  461be0:	ldr	x2, [x3]
  461be4:	add	x19, x2, #0x10
  461be8:	str	x0, [x2]
  461bec:	str	x4, [x3]
  461bf0:	ldr	x20, [x20, #3600]
  461bf4:	cbz	x20, 461c04 <_obstack_memory_used@@Base+0x5814>
  461bf8:	add	x0, x21, #0x4f8
  461bfc:	bl	403550 <pthread_mutex_unlock@plt>
  461c00:	cbnz	w0, 461c28 <_obstack_memory_used@@Base+0x5838>
  461c04:	mov	x0, x19
  461c08:	ldp	x19, x20, [sp, #16]
  461c0c:	ldr	x21, [sp, #32]
  461c10:	ldp	x29, x30, [sp], #48
  461c14:	ret
  461c18:	str	x19, [x3]
  461c1c:	add	x19, x2, #0x10
  461c20:	b	461bf0 <_obstack_memory_used@@Base+0x5800>
  461c24:	bl	4039f0 <ferror@plt+0x420>
  461c28:	mov	x0, #0x8                   	// #8
  461c2c:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  461c30:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461c34:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461c38:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461c3c:	ldr	x3, [x3, #3856]
  461c40:	ldr	x2, [x2, #4064]
  461c44:	add	x3, x3, #0x10
  461c48:	ldr	x1, [x1, #4016]
  461c4c:	str	x3, [x0]
  461c50:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  461c54:	cmn	x1, #0x1
  461c58:	b.ne	461c60 <_obstack_memory_used@@Base+0x5870>  // b.any
  461c5c:	bl	462a18 <_obstack_memory_used@@Base+0x6628>
  461c60:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  461c64:	nop
  461c68:	stp	x29, x30, [sp, #-32]!
  461c6c:	mov	x29, sp
  461c70:	str	x19, [sp, #16]
  461c74:	adrp	x19, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  461c78:	add	x19, x19, #0x4f8
  461c7c:	ldr	x0, [x19, #56]
  461c80:	cbz	x0, 461c8c <_obstack_memory_used@@Base+0x589c>
  461c84:	bl	4032a0 <free@plt>
  461c88:	str	xzr, [x19, #56]
  461c8c:	ldr	x19, [sp, #16]
  461c90:	ldp	x29, x30, [sp], #32
  461c94:	ret
  461c98:	stp	x29, x30, [sp, #-32]!
  461c9c:	mov	x29, sp
  461ca0:	str	x19, [sp, #16]
  461ca4:	add	x19, x0, #0x80
  461ca8:	mov	x0, x19
  461cac:	bl	402f40 <malloc@plt>
  461cb0:	mov	x1, x0
  461cb4:	cbz	x0, 461ce8 <_obstack_memory_used@@Base+0x58f8>
  461cb8:	stp	xzr, xzr, [x1]
  461cbc:	add	x0, x1, #0x80
  461cc0:	stp	xzr, xzr, [x1, #16]
  461cc4:	stp	xzr, xzr, [x1, #32]
  461cc8:	stp	xzr, xzr, [x1, #48]
  461ccc:	stp	xzr, xzr, [x1, #64]
  461cd0:	stp	xzr, xzr, [x1, #80]
  461cd4:	stp	xzr, xzr, [x1, #96]
  461cd8:	stp	xzr, xzr, [x1, #112]
  461cdc:	ldr	x19, [sp, #16]
  461ce0:	ldp	x29, x30, [sp], #32
  461ce4:	ret
  461ce8:	mov	x0, x19
  461cec:	bl	461b58 <_obstack_memory_used@@Base+0x5768>
  461cf0:	mov	x1, x0
  461cf4:	cbnz	x0, 461cb8 <_obstack_memory_used@@Base+0x58c8>
  461cf8:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  461cfc:	nop
  461d00:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  461d04:	add	x1, x1, #0x4f8
  461d08:	sub	x0, x0, #0x80
  461d0c:	ldr	x2, [x1, #56]
  461d10:	cmp	x0, x2
  461d14:	b.ls	461d3c <_obstack_memory_used@@Base+0x594c>  // b.plast
  461d18:	ldr	x1, [x1, #64]
  461d1c:	add	x2, x2, x1
  461d20:	cmp	x0, x2
  461d24:	b.cs	461d3c <_obstack_memory_used@@Base+0x594c>  // b.hs, b.nlast
  461d28:	stp	x29, x30, [sp, #-16]!
  461d2c:	mov	x29, sp
  461d30:	bl	4619f0 <_obstack_memory_used@@Base+0x5600>
  461d34:	ldp	x29, x30, [sp], #16
  461d38:	ret
  461d3c:	b	4032a0 <free@plt>
  461d40:	stp	x29, x30, [sp, #-16]!
  461d44:	mov	x0, #0x70                  	// #112
  461d48:	mov	x29, sp
  461d4c:	bl	402f40 <malloc@plt>
  461d50:	cbz	x0, 461d78 <_obstack_memory_used@@Base+0x5988>
  461d54:	stp	xzr, xzr, [x0]
  461d58:	stp	xzr, xzr, [x0, #16]
  461d5c:	stp	xzr, xzr, [x0, #32]
  461d60:	stp	xzr, xzr, [x0, #48]
  461d64:	stp	xzr, xzr, [x0, #64]
  461d68:	stp	xzr, xzr, [x0, #80]
  461d6c:	stp	xzr, xzr, [x0, #96]
  461d70:	ldp	x29, x30, [sp], #16
  461d74:	ret
  461d78:	mov	x0, #0x70                  	// #112
  461d7c:	bl	461b58 <_obstack_memory_used@@Base+0x5768>
  461d80:	cbnz	x0, 461d54 <_obstack_memory_used@@Base+0x5964>
  461d84:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  461d88:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  461d8c:	add	x2, x2, #0x4f8
  461d90:	mov	x1, x0
  461d94:	ldr	x3, [x2, #56]
  461d98:	cmp	x0, x3
  461d9c:	b.ls	461dc4 <_obstack_memory_used@@Base+0x59d4>  // b.plast
  461da0:	ldr	x2, [x2, #64]
  461da4:	add	x3, x3, x2
  461da8:	cmp	x0, x3
  461dac:	b.cs	461dc4 <_obstack_memory_used@@Base+0x59d4>  // b.hs, b.nlast
  461db0:	stp	x29, x30, [sp, #-16]!
  461db4:	mov	x29, sp
  461db8:	bl	4619f0 <_obstack_memory_used@@Base+0x5600>
  461dbc:	ldp	x29, x30, [sp], #16
  461dc0:	ret
  461dc4:	mov	x0, x1
  461dc8:	b	4032a0 <free@plt>
  461dcc:	nop
  461dd0:	ldur	x0, [x0, #-8]
  461dd4:	ret
  461dd8:	stp	x29, x30, [sp, #-32]!
  461ddc:	mov	x29, sp
  461de0:	str	x19, [sp, #16]
  461de4:	mov	x19, x0
  461de8:	bl	462080 <_obstack_memory_used@@Base+0x5c90>
  461dec:	mov	x1, x0
  461df0:	mov	x2, x19
  461df4:	mov	x4, #0xd500                	// #54528
  461df8:	movk	x4, #0xbcd4, lsl #16
  461dfc:	movk	x4, #0xaabc, lsl #32
  461e00:	ldr	x3, [x2], #-80
  461e04:	movk	x4, #0xb8b1, lsl #48
  461e08:	ldr	x0, [x0]
  461e0c:	add	x3, x3, x4
  461e10:	cmp	x3, #0x1
  461e14:	b.ls	461e2c <_obstack_memory_used@@Base+0x5a3c>  // b.plast
  461e18:	cbnz	x0, 461e70 <_obstack_memory_used@@Base+0x5a80>
  461e1c:	str	x2, [x1]
  461e20:	ldr	x19, [sp, #16]
  461e24:	ldp	x29, x30, [sp], #32
  461e28:	ret
  461e2c:	ldur	w3, [x19, #-40]
  461e30:	mov	w5, #0x1                   	// #1
  461e34:	ldr	w4, [x1, #8]
  461e38:	cmp	w3, #0x0
  461e3c:	sub	w5, w5, w3
  461e40:	csinc	w3, w5, w3, lt  // lt = tstop
  461e44:	stur	w3, [x19, #-40]
  461e48:	sub	w3, w4, #0x1
  461e4c:	str	w3, [x1, #8]
  461e50:	cmp	x0, x2
  461e54:	b.eq	461e60 <_obstack_memory_used@@Base+0x5a70>  // b.none
  461e58:	stur	x0, [x19, #-48]
  461e5c:	str	x2, [x1]
  461e60:	ldur	x0, [x19, #-8]
  461e64:	ldr	x19, [sp, #16]
  461e68:	ldp	x29, x30, [sp], #32
  461e6c:	ret
  461e70:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  461e74:	nop
  461e78:	stp	x29, x30, [sp, #-16]!
  461e7c:	mov	x29, sp
  461e80:	bl	462058 <_obstack_memory_used@@Base+0x5c68>
  461e84:	ldr	x1, [x0]
  461e88:	cbz	x1, 461ec8 <_obstack_memory_used@@Base+0x5ad8>
  461e8c:	mov	x3, #0xd500                	// #54528
  461e90:	ldr	x2, [x1, #80]
  461e94:	movk	x3, #0xbcd4, lsl #16
  461e98:	movk	x3, #0xaabc, lsl #32
  461e9c:	movk	x3, #0xb8b1, lsl #48
  461ea0:	add	x2, x2, x3
  461ea4:	cmp	x2, #0x1
  461ea8:	b.hi	461ee8 <_obstack_memory_used@@Base+0x5af8>  // b.pmore
  461eac:	ldr	w2, [x1, #40]
  461eb0:	tbnz	w2, #31, 461ed0 <_obstack_memory_used@@Base+0x5ae0>
  461eb4:	subs	w2, w2, #0x1
  461eb8:	b.eq	461ef8 <_obstack_memory_used@@Base+0x5b08>  // b.none
  461ebc:	cmn	w2, #0x1
  461ec0:	b.eq	461f0c <_obstack_memory_used@@Base+0x5b1c>  // b.none
  461ec4:	str	w2, [x1, #40]
  461ec8:	ldp	x29, x30, [sp], #16
  461ecc:	ret
  461ed0:	adds	w2, w2, #0x1
  461ed4:	b.ne	461ec4 <_obstack_memory_used@@Base+0x5ad4>  // b.any
  461ed8:	ldr	x3, [x1, #32]
  461edc:	str	x3, [x0]
  461ee0:	str	w2, [x1, #40]
  461ee4:	b	461ec8 <_obstack_memory_used@@Base+0x5ad8>
  461ee8:	str	xzr, [x0]
  461eec:	add	x0, x1, #0x50
  461ef0:	ldp	x29, x30, [sp], #16
  461ef4:	b	474820 <_obstack_memory_used@@Base+0x18430>
  461ef8:	ldr	x2, [x1, #32]
  461efc:	str	x2, [x0]
  461f00:	add	x0, x1, #0x50
  461f04:	ldp	x29, x30, [sp], #16
  461f08:	b	474820 <_obstack_memory_used@@Base+0x18430>
  461f0c:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  461f10:	stp	x29, x30, [sp, #-16]!
  461f14:	mov	x29, sp
  461f18:	bl	462080 <_obstack_memory_used@@Base+0x5c90>
  461f1c:	ldr	w0, [x0, #8]
  461f20:	ldp	x29, x30, [sp], #16
  461f24:	cmp	w0, #0x0
  461f28:	cset	w0, ne  // ne = any
  461f2c:	ret
  461f30:	stp	x29, x30, [sp, #-16]!
  461f34:	mov	x29, sp
  461f38:	bl	462080 <_obstack_memory_used@@Base+0x5c90>
  461f3c:	ldr	w0, [x0, #8]
  461f40:	ldp	x29, x30, [sp], #16
  461f44:	ret
  461f48:	ret
  461f4c:	nop
  461f50:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  461f54:	ldr	x1, [x1, #3744]
  461f58:	add	x1, x1, #0x10
  461f5c:	str	x1, [x0]
  461f60:	b	461f48 <_obstack_memory_used@@Base+0x5b58>
  461f64:	nop
  461f68:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461f6c:	add	x0, x0, #0x8c8
  461f70:	ret
  461f74:	nop
  461f78:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  461f7c:	add	x0, x0, #0x8d8
  461f80:	ret
  461f84:	nop
  461f88:	stp	x29, x30, [sp, #-32]!
  461f8c:	mov	x29, sp
  461f90:	str	x19, [sp, #16]
  461f94:	mov	x19, x0
  461f98:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  461f9c:	mov	x0, x19
  461fa0:	mov	x1, #0x8                   	// #8
  461fa4:	ldr	x19, [sp, #16]
  461fa8:	ldp	x29, x30, [sp], #32
  461fac:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  461fb0:	stp	x29, x30, [sp, #-32]!
  461fb4:	mov	x29, sp
  461fb8:	str	x19, [sp, #16]
  461fbc:	mov	x19, x0
  461fc0:	bl	461f50 <_obstack_memory_used@@Base+0x5b60>
  461fc4:	mov	x0, x19
  461fc8:	mov	x1, #0x8                   	// #8
  461fcc:	ldr	x19, [sp, #16]
  461fd0:	ldp	x29, x30, [sp], #32
  461fd4:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  461fd8:	ret
  461fdc:	nop
  461fe0:	stp	x29, x30, [sp, #-32]!
  461fe4:	mov	x29, sp
  461fe8:	str	x19, [sp, #16]
  461fec:	mov	x19, x0
  461ff0:	bl	461fd8 <_obstack_memory_used@@Base+0x5be8>
  461ff4:	mov	x0, x19
  461ff8:	mov	x1, #0x8                   	// #8
  461ffc:	ldr	x19, [sp, #16]
  462000:	ldp	x29, x30, [sp], #32
  462004:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  462008:	ret
  46200c:	nop
  462010:	stp	x29, x30, [sp, #-32]!
  462014:	mov	x29, sp
  462018:	str	x19, [sp, #16]
  46201c:	mov	x19, x0
  462020:	bl	462008 <_obstack_memory_used@@Base+0x5c18>
  462024:	mov	x0, x19
  462028:	mov	x1, #0x8                   	// #8
  46202c:	ldr	x19, [sp, #16]
  462030:	ldp	x29, x30, [sp], #32
  462034:	b	45dbc0 <_obstack_memory_used@@Base+0x17d0>
  462038:	ret
  46203c:	nop
  462040:	b	461f68 <_obstack_memory_used@@Base+0x5b78>
  462044:	nop
  462048:	ret
  46204c:	nop
  462050:	b	461f78 <_obstack_memory_used@@Base+0x5b88>
  462054:	nop
  462058:	stp	x29, x30, [sp, #-16]!
  46205c:	mrs	x1, tpidr_el0
  462060:	movz	x0, #0x0, lsl #16
  462064:	movk	x0, #0x10
  462068:	nop
  46206c:	nop
  462070:	mov	x29, sp
  462074:	add	x0, x1, x0
  462078:	ldp	x29, x30, [sp], #16
  46207c:	ret
  462080:	stp	x29, x30, [sp, #-16]!
  462084:	mrs	x1, tpidr_el0
  462088:	movz	x0, #0x0, lsl #16
  46208c:	movk	x0, #0x10
  462090:	nop
  462094:	nop
  462098:	mov	x29, sp
  46209c:	add	x0, x1, x0
  4620a0:	ldp	x29, x30, [sp], #16
  4620a4:	ret
  4620a8:	stp	x29, x30, [sp, #-64]!
  4620ac:	mov	x29, sp
  4620b0:	stp	x19, x20, [sp, #16]
  4620b4:	mov	x19, x1
  4620b8:	mov	x20, x0
  4620bc:	mov	x0, x1
  4620c0:	ldr	x1, [x1]
  4620c4:	ldr	x1, [x1, #16]
  4620c8:	str	x21, [sp, #32]
  4620cc:	mov	x21, x2
  4620d0:	ldr	x2, [x2]
  4620d4:	str	x2, [sp, #56]
  4620d8:	blr	x1
  4620dc:	tst	w0, #0xff
  4620e0:	b.eq	4620f0 <_obstack_memory_used@@Base+0x5d00>  // b.none
  4620e4:	ldr	x0, [sp, #56]
  4620e8:	ldr	x0, [x0]
  4620ec:	str	x0, [sp, #56]
  4620f0:	ldr	x4, [x20]
  4620f4:	mov	x1, x19
  4620f8:	mov	x0, x20
  4620fc:	add	x2, sp, #0x38
  462100:	mov	w3, #0x1                   	// #1
  462104:	ldr	x4, [x4, #32]
  462108:	blr	x4
  46210c:	tst	w0, #0xff
  462110:	b.eq	46211c <_obstack_memory_used@@Base+0x5d2c>  // b.none
  462114:	ldr	x1, [sp, #56]
  462118:	str	x1, [x21]
  46211c:	ldp	x19, x20, [sp, #16]
  462120:	ldr	x21, [sp, #32]
  462124:	ldp	x29, x30, [sp], #64
  462128:	ret
  46212c:	nop
  462130:	and	w5, w0, #0xff
  462134:	cmp	w5, #0x50
  462138:	b.eq	462250 <_obstack_memory_used@@Base+0x5e60>  // b.none
  46213c:	and	w4, w5, #0xf
  462140:	cmp	w4, #0x4
  462144:	b.eq	462160 <_obstack_memory_used@@Base+0x5d70>  // b.none
  462148:	b.ls	462174 <_obstack_memory_used@@Base+0x5d84>  // b.plast
  46214c:	cmp	w4, #0xb
  462150:	b.eq	462274 <_obstack_memory_used@@Base+0x5e84>  // b.none
  462154:	b.ls	4621d0 <_obstack_memory_used@@Base+0x5de0>  // b.plast
  462158:	cmp	w4, #0xc
  46215c:	b.ne	462284 <_obstack_memory_used@@Base+0x5e94>  // b.any
  462160:	mov	x0, x2
  462164:	ldr	x4, [x0], #8
  462168:	cbnz	x4, 462230 <_obstack_memory_used@@Base+0x5e40>
  46216c:	str	x4, [x3]
  462170:	ret
  462174:	cmp	w4, #0x2
  462178:	b.eq	462264 <_obstack_memory_used@@Base+0x5e74>  // b.none
  46217c:	b.ls	462198 <_obstack_memory_used@@Base+0x5da8>  // b.plast
  462180:	cmp	w4, #0x3
  462184:	b.ne	462284 <_obstack_memory_used@@Base+0x5e94>  // b.any
  462188:	mov	x0, x2
  46218c:	ldr	w4, [x0], #4
  462190:	cbz	x4, 46216c <_obstack_memory_used@@Base+0x5d7c>
  462194:	b	462230 <_obstack_memory_used@@Base+0x5e40>
  462198:	cbz	w4, 462160 <_obstack_memory_used@@Base+0x5d70>
  46219c:	cmp	w4, #0x1
  4621a0:	b.ne	462284 <_obstack_memory_used@@Base+0x5e94>  // b.any
  4621a4:	mov	x0, x2
  4621a8:	mov	x4, #0x0                   	// #0
  4621ac:	mov	w7, #0x0                   	// #0
  4621b0:	ldrb	w8, [x0], #1
  4621b4:	and	x6, x8, #0x7f
  4621b8:	lsl	x6, x6, x7
  4621bc:	add	w7, w7, #0x7
  4621c0:	orr	x4, x4, x6
  4621c4:	tbnz	w8, #7, 4621b0 <_obstack_memory_used@@Base+0x5dc0>
  4621c8:	cbz	x4, 46216c <_obstack_memory_used@@Base+0x5d7c>
  4621cc:	b	462230 <_obstack_memory_used@@Base+0x5e40>
  4621d0:	cmp	w4, #0x9
  4621d4:	b.eq	4621f0 <_obstack_memory_used@@Base+0x5e00>  // b.none
  4621d8:	cmp	w4, #0xa
  4621dc:	b.ne	462284 <_obstack_memory_used@@Base+0x5e94>  // b.any
  4621e0:	mov	x0, x2
  4621e4:	ldrsh	x4, [x0], #2
  4621e8:	cbz	x4, 46216c <_obstack_memory_used@@Base+0x5d7c>
  4621ec:	b	462230 <_obstack_memory_used@@Base+0x5e40>
  4621f0:	mov	x0, x2
  4621f4:	mov	x4, #0x0                   	// #0
  4621f8:	mov	w7, #0x0                   	// #0
  4621fc:	ldrb	w8, [x0], #1
  462200:	and	x6, x8, #0x7f
  462204:	lsl	x6, x6, x7
  462208:	add	w7, w7, #0x7
  46220c:	orr	x4, x4, x6
  462210:	tbnz	w8, #7, 4621fc <_obstack_memory_used@@Base+0x5e0c>
  462214:	cmp	w7, #0x3f
  462218:	b.hi	462168 <_obstack_memory_used@@Base+0x5d78>  // b.pmore
  46221c:	tbz	w8, #6, 462168 <_obstack_memory_used@@Base+0x5d78>
  462220:	mov	x6, #0xffffffffffffffff    	// #-1
  462224:	lsl	x7, x6, x7
  462228:	orr	x4, x4, x7
  46222c:	nop
  462230:	and	w6, w5, #0x70
  462234:	cmp	w6, #0x10
  462238:	csel	x1, x2, x1, eq  // eq = none
  46223c:	add	x4, x4, x1
  462240:	tbz	w5, #7, 46216c <_obstack_memory_used@@Base+0x5d7c>
  462244:	ldr	x4, [x4]
  462248:	str	x4, [x3]
  46224c:	ret
  462250:	add	x0, x2, #0x7
  462254:	and	x0, x0, #0xfffffffffffffff8
  462258:	ldr	x4, [x0], #8
  46225c:	str	x4, [x3]
  462260:	ret
  462264:	mov	x0, x2
  462268:	ldrh	w4, [x0], #2
  46226c:	cbz	x4, 46216c <_obstack_memory_used@@Base+0x5d7c>
  462270:	b	462230 <_obstack_memory_used@@Base+0x5e40>
  462274:	mov	x0, x2
  462278:	ldrsw	x4, [x0], #4
  46227c:	cbz	x4, 46216c <_obstack_memory_used@@Base+0x5d7c>
  462280:	b	462230 <_obstack_memory_used@@Base+0x5e40>
  462284:	stp	x29, x30, [sp, #-16]!
  462288:	mov	x29, sp
  46228c:	bl	403180 <abort@plt>
  462290:	stp	x29, x30, [sp, #-32]!
  462294:	mov	x3, x0
  462298:	mov	x29, sp
  46229c:	ldrb	w0, [x0, #40]
  4622a0:	cmp	w0, #0xff
  4622a4:	b.eq	462330 <_obstack_memory_used@@Base+0x5f40>  // b.none
  4622a8:	and	w4, w0, #0x7
  4622ac:	cmp	w4, #0x2
  4622b0:	b.eq	462310 <_obstack_memory_used@@Base+0x5f20>  // b.none
  4622b4:	b.ls	4622e0 <_obstack_memory_used@@Base+0x5ef0>  // b.plast
  4622b8:	cmp	w4, #0x3
  4622bc:	neg	x2, x1, lsl #2
  4622c0:	b.ne	462304 <_obstack_memory_used@@Base+0x5f14>  // b.any
  4622c4:	ldp	x1, x4, [x3, #16]
  4622c8:	add	x3, sp, #0x18
  4622cc:	add	x2, x4, x2
  4622d0:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  4622d4:	ldr	x0, [sp, #24]
  4622d8:	ldp	x29, x30, [sp], #32
  4622dc:	ret
  4622e0:	cbnz	w4, 46230c <_obstack_memory_used@@Base+0x5f1c>
  4622e4:	neg	x2, x1, lsl #3
  4622e8:	ldp	x1, x4, [x3, #16]
  4622ec:	add	x3, sp, #0x18
  4622f0:	add	x2, x4, x2
  4622f4:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  4622f8:	ldr	x0, [sp, #24]
  4622fc:	ldp	x29, x30, [sp], #32
  462300:	ret
  462304:	cmp	w4, #0x4
  462308:	b.eq	4622e4 <_obstack_memory_used@@Base+0x5ef4>  // b.none
  46230c:	bl	403180 <abort@plt>
  462310:	neg	x2, x1, lsl #1
  462314:	ldp	x1, x4, [x3, #16]
  462318:	add	x3, sp, #0x18
  46231c:	add	x2, x4, x2
  462320:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  462324:	ldr	x0, [sp, #24]
  462328:	ldp	x29, x30, [sp], #32
  46232c:	ret
  462330:	ldp	x1, x4, [x3, #16]
  462334:	mov	x2, #0x0                   	// #0
  462338:	add	x3, sp, #0x18
  46233c:	add	x2, x4, x2
  462340:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  462344:	ldr	x0, [sp, #24]
  462348:	ldp	x29, x30, [sp], #32
  46234c:	ret
  462350:	stp	x29, x30, [sp, #-64]!
  462354:	mov	x29, sp
  462358:	stp	x21, x22, [sp, #32]
  46235c:	mov	x22, x0
  462360:	mvn	x0, x3
  462364:	stp	x19, x20, [sp, #16]
  462368:	add	x21, sp, #0x38
  46236c:	mov	x20, x1
  462370:	ldr	x19, [x22, #24]
  462374:	str	x2, [sp, #56]
  462378:	add	x19, x19, x0
  46237c:	nop
  462380:	mov	x1, #0x0                   	// #0
  462384:	mov	w3, #0x0                   	// #0
  462388:	ldrb	w4, [x19], #1
  46238c:	and	x2, x4, #0x7f
  462390:	lsl	x2, x2, x3
  462394:	add	w3, w3, #0x7
  462398:	orr	x1, x1, x2
  46239c:	tbnz	w4, #7, 462388 <_obstack_memory_used@@Base+0x5f98>
  4623a0:	cbz	x1, 4623d0 <_obstack_memory_used@@Base+0x5fe0>
  4623a4:	mov	x0, x22
  4623a8:	bl	462290 <_obstack_memory_used@@Base+0x5ea0>
  4623ac:	mov	x2, x21
  4623b0:	mov	x1, x20
  4623b4:	bl	4620a8 <_obstack_memory_used@@Base+0x5cb8>
  4623b8:	ands	w0, w0, #0xff
  4623bc:	b.eq	462380 <_obstack_memory_used@@Base+0x5f90>  // b.none
  4623c0:	ldp	x19, x20, [sp, #16]
  4623c4:	ldp	x21, x22, [sp, #32]
  4623c8:	ldp	x29, x30, [sp], #64
  4623cc:	ret
  4623d0:	mov	w0, #0x0                   	// #0
  4623d4:	ldp	x19, x20, [sp, #16]
  4623d8:	ldp	x21, x22, [sp, #32]
  4623dc:	ldp	x29, x30, [sp], #64
  4623e0:	ret
  4623e4:	nop
  4623e8:	and	w3, w0, #0xff
  4623ec:	cmp	w3, #0xff
  4623f0:	b.eq	462440 <_obstack_memory_used@@Base+0x6050>  // b.none
  4623f4:	and	w2, w3, #0x70
  4623f8:	mov	x0, x1
  4623fc:	cmp	w2, #0x30
  462400:	b.eq	462448 <_obstack_memory_used@@Base+0x6058>  // b.none
  462404:	b.hi	462414 <_obstack_memory_used@@Base+0x6024>  // b.pmore
  462408:	cmp	w2, #0x20
  46240c:	b.ne	462420 <_obstack_memory_used@@Base+0x6030>  // b.any
  462410:	b	474258 <_obstack_memory_used@@Base+0x17e68>
  462414:	cmp	w2, #0x40
  462418:	b.ne	462438 <_obstack_memory_used@@Base+0x6048>  // b.any
  46241c:	b	474220 <_obstack_memory_used@@Base+0x17e30>
  462420:	b.hi	46242c <_obstack_memory_used@@Base+0x603c>  // b.pmore
  462424:	tst	w3, #0x60
  462428:	b.eq	462440 <_obstack_memory_used@@Base+0x6050>  // b.none
  46242c:	stp	x29, x30, [sp, #-16]!
  462430:	mov	x29, sp
  462434:	bl	403180 <abort@plt>
  462438:	cmp	w2, #0x50
  46243c:	b.ne	46242c <_obstack_memory_used@@Base+0x603c>  // b.any
  462440:	mov	x0, #0x0                   	// #0
  462444:	ret
  462448:	b	474250 <_obstack_memory_used@@Base+0x17e60>
  46244c:	nop
  462450:	stp	x29, x30, [sp, #-48]!
  462454:	mov	x29, sp
  462458:	stp	x19, x20, [sp, #16]
  46245c:	mov	x19, x1
  462460:	mov	x20, x2
  462464:	stp	x21, x22, [sp, #32]
  462468:	mov	x1, #0x0                   	// #0
  46246c:	mov	x21, x0
  462470:	cbz	x0, 46247c <_obstack_memory_used@@Base+0x608c>
  462474:	bl	474220 <_obstack_memory_used@@Base+0x17e30>
  462478:	mov	x1, x0
  46247c:	str	x1, [x20]
  462480:	ldrb	w22, [x19], #1
  462484:	cmp	w22, #0xff
  462488:	b.ne	462510 <_obstack_memory_used@@Base+0x6120>  // b.any
  46248c:	mov	x0, x19
  462490:	str	x1, [x20, #8]
  462494:	ldrb	w1, [x0], #1
  462498:	strb	w1, [x20, #40]
  46249c:	cmp	w1, #0xff
  4624a0:	b.eq	462548 <_obstack_memory_used@@Base+0x6158>  // b.none
  4624a4:	mov	x5, #0x0                   	// #0
  4624a8:	mov	w3, #0x0                   	// #0
  4624ac:	nop
  4624b0:	ldrb	w4, [x0], #1
  4624b4:	and	x1, x4, #0x7f
  4624b8:	lsl	x1, x1, x3
  4624bc:	add	w3, w3, #0x7
  4624c0:	orr	x5, x5, x1
  4624c4:	tbnz	w4, #7, 4624b0 <_obstack_memory_used@@Base+0x60c0>
  4624c8:	add	x5, x0, x5
  4624cc:	str	x5, [x20, #24]
  4624d0:	ldrb	w1, [x0], #1
  4624d4:	mov	x5, #0x0                   	// #0
  4624d8:	mov	w3, #0x0                   	// #0
  4624dc:	strb	w1, [x20, #41]
  4624e0:	ldrb	w4, [x0], #1
  4624e4:	and	x1, x4, #0x7f
  4624e8:	lsl	x1, x1, x3
  4624ec:	add	w3, w3, #0x7
  4624f0:	orr	x5, x5, x1
  4624f4:	tbnz	w4, #7, 4624e0 <_obstack_memory_used@@Base+0x60f0>
  4624f8:	add	x5, x0, x5
  4624fc:	ldp	x21, x22, [sp, #32]
  462500:	str	x5, [x20, #32]
  462504:	ldp	x19, x20, [sp, #16]
  462508:	ldp	x29, x30, [sp], #48
  46250c:	ret
  462510:	mov	x1, x21
  462514:	mov	w0, w22
  462518:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  46251c:	mov	x1, x0
  462520:	mov	x2, x19
  462524:	mov	w0, w22
  462528:	add	x3, x20, #0x8
  46252c:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  462530:	mov	x19, x0
  462534:	mov	x0, x19
  462538:	ldrb	w1, [x0], #1
  46253c:	strb	w1, [x20, #40]
  462540:	cmp	w1, #0xff
  462544:	b.ne	4624a4 <_obstack_memory_used@@Base+0x60b4>  // b.any
  462548:	str	xzr, [x20, #24]
  46254c:	b	4624d0 <_obstack_memory_used@@Base+0x60e0>
  462550:	stp	x29, x30, [sp, #-240]!
  462554:	cmp	w0, #0x1
  462558:	mov	x29, sp
  46255c:	str	wzr, [sp, #156]
  462560:	str	xzr, [sp, #160]
  462564:	b.ne	4625c8 <_obstack_memory_used@@Base+0x61d8>  // b.any
  462568:	stp	x19, x20, [sp, #16]
  46256c:	mov	x20, #0xd500                	// #54528
  462570:	movk	x20, #0xbcd4, lsl #16
  462574:	movk	x20, #0xaabc, lsl #32
  462578:	stp	x21, x22, [sp, #32]
  46257c:	movk	x20, #0xb8b1, lsl #48
  462580:	add	x0, x2, x20
  462584:	stp	x23, x24, [sp, #48]
  462588:	cmp	x0, #0x1
  46258c:	stp	x25, x26, [sp, #64]
  462590:	mov	w22, w1
  462594:	mov	x21, x3
  462598:	stp	x27, x28, [sp, #80]
  46259c:	mov	x19, x4
  4625a0:	str	x0, [sp, #104]
  4625a4:	cset	w0, ls  // ls = plast
  4625a8:	str	w0, [sp, #128]
  4625ac:	cmp	w1, #0x6
  4625b0:	csel	w27, w0, wzr, eq  // eq = none
  4625b4:	cbz	w27, 4625d4 <_obstack_memory_used@@Base+0x61e4>
  4625b8:	ldur	x26, [x3, #-16]
  4625bc:	cbnz	x26, 462748 <_obstack_memory_used@@Base+0x6358>
  4625c0:	mov	x0, x21
  4625c4:	bl	467e10 <_obstack_memory_used@@Base+0xba20>
  4625c8:	mov	w0, #0x3                   	// #3
  4625cc:	ldp	x29, x30, [sp], #240
  4625d0:	ret
  4625d4:	mov	x0, x4
  4625d8:	bl	474218 <_obstack_memory_used@@Base+0x17e28>
  4625dc:	str	x0, [sp, #112]
  4625e0:	cbz	x0, 4627ac <_obstack_memory_used@@Base+0x63bc>
  4625e4:	ldr	x1, [sp, #112]
  4625e8:	add	x0, sp, #0xc0
  4625ec:	mov	x2, x0
  4625f0:	str	x0, [sp, #120]
  4625f4:	mov	x0, x19
  4625f8:	bl	462450 <_obstack_memory_used@@Base+0x6060>
  4625fc:	mov	x20, x0
  462600:	ldrb	w0, [sp, #232]
  462604:	mov	x1, x19
  462608:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  46260c:	mov	x3, x0
  462610:	add	x1, sp, #0x9c
  462614:	mov	x0, x19
  462618:	str	x3, [sp, #208]
  46261c:	bl	4741f8 <_obstack_memory_used@@Base+0x17e08>
  462620:	ldr	w3, [sp, #156]
  462624:	ldr	x1, [sp, #224]
  462628:	cmp	w3, #0x0
  46262c:	cset	x3, eq  // eq = none
  462630:	sub	x23, x0, x3
  462634:	cmp	x20, x1
  462638:	b.cs	462710 <_obstack_memory_used@@Base+0x6320>  // b.hs, b.nlast
  46263c:	add	x26, sp, #0xa8
  462640:	add	x25, sp, #0xb0
  462644:	add	x24, sp, #0xb8
  462648:	ldrb	w28, [sp, #233]
  46264c:	mov	x1, #0x0                   	// #0
  462650:	mov	w0, w28
  462654:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  462658:	mov	x2, x20
  46265c:	mov	x3, x26
  462660:	mov	x1, x0
  462664:	mov	w0, w28
  462668:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  46266c:	ldrb	w20, [sp, #233]
  462670:	mov	x28, x0
  462674:	mov	x1, #0x0                   	// #0
  462678:	mov	w0, w20
  46267c:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  462680:	mov	x2, x28
  462684:	mov	x3, x25
  462688:	mov	x1, x0
  46268c:	mov	w0, w20
  462690:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  462694:	ldrb	w20, [sp, #233]
  462698:	mov	x28, x0
  46269c:	mov	x1, #0x0                   	// #0
  4626a0:	mov	w0, w20
  4626a4:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  4626a8:	mov	x3, x24
  4626ac:	mov	x1, x0
  4626b0:	mov	x2, x28
  4626b4:	mov	w0, w20
  4626b8:	bl	462130 <_obstack_memory_used@@Base+0x5d40>
  4626bc:	mov	x20, x0
  4626c0:	mov	w3, #0x0                   	// #0
  4626c4:	mov	x0, #0x0                   	// #0
  4626c8:	ldrb	w4, [x20], #1
  4626cc:	and	x1, x4, #0x7f
  4626d0:	lsl	x1, x1, x3
  4626d4:	add	w3, w3, #0x7
  4626d8:	orr	x0, x0, x1
  4626dc:	tbnz	w4, #7, 4626c8 <_obstack_memory_used@@Base+0x62d8>
  4626e0:	ldr	x3, [sp, #168]
  4626e4:	ldr	x1, [sp, #192]
  4626e8:	add	x1, x1, x3
  4626ec:	cmp	x1, x23
  4626f0:	b.hi	462710 <_obstack_memory_used@@Base+0x6320>  // b.pmore
  4626f4:	ldr	x3, [sp, #176]
  4626f8:	add	x1, x1, x3
  4626fc:	cmp	x1, x23
  462700:	b.hi	46278c <_obstack_memory_used@@Base+0x639c>  // b.pmore
  462704:	ldr	x0, [sp, #224]
  462708:	cmp	x0, x20
  46270c:	b.hi	462648 <_obstack_memory_used@@Base+0x6258>  // b.pmore
  462710:	tbz	w22, #0, 4627cc <_obstack_memory_used@@Base+0x63dc>
  462714:	mov	w24, #0x0                   	// #0
  462718:	mov	x26, #0x0                   	// #0
  46271c:	mov	x23, #0x0                   	// #0
  462720:	ldr	x0, [sp, #104]
  462724:	cmp	x0, #0x1
  462728:	mov	w0, #0x6                   	// #6
  46272c:	b.hi	4627b0 <_obstack_memory_used@@Base+0x63c0>  // b.pmore
  462730:	ldr	x2, [sp, #112]
  462734:	stur	w24, [x21, #-36]
  462738:	ldr	x1, [sp, #160]
  46273c:	stp	x23, x2, [x21, #-32]
  462740:	stp	x26, x1, [x21, #-16]
  462744:	b	4627b0 <_obstack_memory_used@@Base+0x63c0>
  462748:	ldur	w24, [x3, #-36]
  46274c:	ldur	x0, [x3, #-24]
  462750:	str	x0, [sp, #112]
  462754:	tbnz	w24, #31, 4627e0 <_obstack_memory_used@@Base+0x63f0>
  462758:	mov	x2, x21
  46275c:	mov	x0, x19
  462760:	mov	w1, #0x0                   	// #0
  462764:	bl	474198 <_obstack_memory_used@@Base+0x17da8>
  462768:	sxtw	x2, w24
  46276c:	mov	x0, x19
  462770:	mov	w1, #0x1                   	// #1
  462774:	bl	474198 <_obstack_memory_used@@Base+0x17da8>
  462778:	mov	x0, x19
  46277c:	mov	x1, x26
  462780:	bl	474210 <_obstack_memory_used@@Base+0x17e20>
  462784:	mov	w0, #0x7                   	// #7
  462788:	b	4627b0 <_obstack_memory_used@@Base+0x63c0>
  46278c:	ldr	x26, [sp, #184]
  462790:	cbz	x26, 4627ac <_obstack_memory_used@@Base+0x63bc>
  462794:	ldr	x1, [sp, #200]
  462798:	add	x26, x26, x1
  46279c:	cbnz	x0, 462818 <_obstack_memory_used@@Base+0x6428>
  4627a0:	cbz	x26, 4627ac <_obstack_memory_used@@Base+0x63bc>
  4627a4:	and	w24, w22, #0x1
  4627a8:	tbz	w22, #0, 462758 <_obstack_memory_used@@Base+0x6368>
  4627ac:	mov	w0, #0x8                   	// #8
  4627b0:	ldp	x19, x20, [sp, #16]
  4627b4:	ldp	x21, x22, [sp, #32]
  4627b8:	ldp	x23, x24, [sp, #48]
  4627bc:	ldp	x25, x26, [sp, #64]
  4627c0:	ldp	x27, x28, [sp, #80]
  4627c4:	ldp	x29, x30, [sp], #240
  4627c8:	ret
  4627cc:	tbnz	w22, #3, 4627dc <_obstack_memory_used@@Base+0x63ec>
  4627d0:	ldr	x0, [sp, #104]
  4627d4:	cmp	x0, #0x1
  4627d8:	b.ls	4625c0 <_obstack_memory_used@@Base+0x61d0>  // b.plast
  4627dc:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  4627e0:	ldr	x1, [sp, #112]
  4627e4:	add	x2, sp, #0xc0
  4627e8:	mov	x0, x19
  4627ec:	bl	462450 <_obstack_memory_used@@Base+0x6060>
  4627f0:	ldrb	w0, [sp, #232]
  4627f4:	mov	x1, x19
  4627f8:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  4627fc:	mov	x2, x0
  462800:	ldrb	w0, [sp, #232]
  462804:	mov	x1, x19
  462808:	str	x2, [sp, #208]
  46280c:	bl	4623e8 <_obstack_memory_used@@Base+0x5ff8>
  462810:	stur	x0, [x21, #-16]
  462814:	b	462758 <_obstack_memory_used@@Base+0x6368>
  462818:	ldr	x4, [sp, #224]
  46281c:	sub	x0, x0, #0x1
  462820:	add	x23, x4, x0
  462824:	cbz	x26, 4627ac <_obstack_memory_used@@Base+0x63bc>
  462828:	cbz	x23, 4627a4 <_obstack_memory_used@@Base+0x63b4>
  46282c:	and	w0, w22, #0x8
  462830:	str	w0, [sp, #132]
  462834:	tbnz	w22, #3, 4629e4 <_obstack_memory_used@@Base+0x65f4>
  462838:	ldr	x0, [sp, #104]
  46283c:	adrp	x6, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462840:	cmp	x0, #0x1
  462844:	ldr	x6, [x6, #3848]
  462848:	b.ls	4629f0 <_obstack_memory_used@@Base+0x6600>  // b.plast
  46284c:	add	x28, sp, #0xa0
  462850:	mov	x5, #0x1                   	// #1
  462854:	nop
  462858:	mov	x25, x23
  46285c:	mov	x24, #0x0                   	// #0
  462860:	mov	w1, #0x0                   	// #0
  462864:	nop
  462868:	ldrb	w2, [x25], #1
  46286c:	and	x0, x2, #0x7f
  462870:	lsl	x0, x0, x1
  462874:	add	w1, w1, #0x7
  462878:	orr	x24, x24, x0
  46287c:	tbnz	w2, #7, 462868 <_obstack_memory_used@@Base+0x6478>
  462880:	cmp	w1, #0x3f
  462884:	b.hi	46289c <_obstack_memory_used@@Base+0x64ac>  // b.pmore
  462888:	lsl	x0, x5, x1
  46288c:	neg	x0, x0
  462890:	orr	x0, x24, x0
  462894:	tst	x2, #0x40
  462898:	csel	x24, x0, x24, ne  // ne = any
  46289c:	mov	x8, x25
  4628a0:	mov	x20, #0x0                   	// #0
  4628a4:	mov	w1, #0x0                   	// #0
  4628a8:	ldrb	w2, [x8], #1
  4628ac:	and	x0, x2, #0x7f
  4628b0:	lsl	x0, x0, x1
  4628b4:	add	w1, w1, #0x7
  4628b8:	orr	x20, x20, x0
  4628bc:	tbnz	w2, #7, 4628a8 <_obstack_memory_used@@Base+0x64b8>
  4628c0:	cmp	w1, #0x3f
  4628c4:	b.hi	4628dc <_obstack_memory_used@@Base+0x64ec>  // b.pmore
  4628c8:	lsl	x0, x5, x1
  4628cc:	neg	x0, x0
  4628d0:	orr	x0, x20, x0
  4628d4:	tst	x2, #0x40
  4628d8:	csel	x20, x0, x20, ne  // ne = any
  4628dc:	cmp	x24, #0x0
  4628e0:	cbz	x24, 4629a4 <_obstack_memory_used@@Base+0x65b4>
  4628e4:	b.gt	462948 <_obstack_memory_used@@Base+0x6558>
  4628e8:	ldr	w0, [sp, #132]
  4628ec:	cmp	w0, #0x0
  4628f0:	ldr	w0, [sp, #128]
  4628f4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4628f8:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  4628fc:	b.ne	4629ac <_obstack_memory_used@@Base+0x65bc>  // b.any
  462900:	ldr	x0, [sp, #216]
  462904:	mvn	x8, x24
  462908:	mov	x9, #0x0                   	// #0
  46290c:	mov	w1, #0x0                   	// #0
  462910:	add	x8, x0, x8
  462914:	nop
  462918:	ldrb	w2, [x8], #1
  46291c:	and	x0, x2, #0x7f
  462920:	lsl	x0, x0, x1
  462924:	add	w1, w1, #0x7
  462928:	orr	x9, x9, x0
  46292c:	tbnz	w2, #7, 462918 <_obstack_memory_used@@Base+0x6528>
  462930:	cmp	x9, #0x0
  462934:	cset	w0, eq  // eq = none
  462938:	cbnz	w0, 462984 <_obstack_memory_used@@Base+0x6594>
  46293c:	cbz	x20, 4629dc <_obstack_memory_used@@Base+0x65ec>
  462940:	add	x23, x25, x20
  462944:	b	462858 <_obstack_memory_used@@Base+0x6468>
  462948:	ldr	x0, [sp, #120]
  46294c:	mov	x1, x24
  462950:	str	x6, [sp, #136]
  462954:	bl	462290 <_obstack_memory_used@@Base+0x5ea0>
  462958:	cbz	x0, 462984 <_obstack_memory_used@@Base+0x6594>
  46295c:	ldr	x6, [sp, #136]
  462960:	mov	x5, #0x1                   	// #1
  462964:	cbz	x6, 46293c <_obstack_memory_used@@Base+0x654c>
  462968:	mov	x1, x6
  46296c:	mov	x2, x28
  462970:	bl	4620a8 <_obstack_memory_used@@Base+0x5cb8>
  462974:	tst	w0, #0xff
  462978:	mov	x5, #0x1                   	// #1
  46297c:	ldr	x6, [sp, #136]
  462980:	b.eq	46293c <_obstack_memory_used@@Base+0x654c>  // b.none
  462984:	tbnz	w22, #0, 462720 <_obstack_memory_used@@Base+0x6330>
  462988:	ldr	w0, [sp, #132]
  46298c:	cbnz	w0, 46299c <_obstack_memory_used@@Base+0x65ac>
  462990:	ldr	x0, [sp, #104]
  462994:	cmp	x0, #0x1
  462998:	b.ls	462754 <_obstack_memory_used@@Base+0x6364>  // b.plast
  46299c:	tbz	w24, #31, 462758 <_obstack_memory_used@@Base+0x6368>
  4629a0:	bl	462ba0 <_obstack_memory_used@@Base+0x67b0>
  4629a4:	mov	w27, #0x1                   	// #1
  4629a8:	b	46293c <_obstack_memory_used@@Base+0x654c>
  4629ac:	ldr	x0, [sp, #120]
  4629b0:	mov	x1, x6
  4629b4:	ldr	x2, [sp, #160]
  4629b8:	mov	x3, x24
  4629bc:	str	x6, [sp, #136]
  4629c0:	bl	462350 <_obstack_memory_used@@Base+0x5f60>
  4629c4:	and	w0, w0, #0xff
  4629c8:	eor	w0, w0, #0x1
  4629cc:	mov	x5, #0x1                   	// #1
  4629d0:	ldr	x6, [sp, #136]
  4629d4:	cbz	w0, 46293c <_obstack_memory_used@@Base+0x654c>
  4629d8:	b	462984 <_obstack_memory_used@@Base+0x6594>
  4629dc:	cbnz	w27, 4627a4 <_obstack_memory_used@@Base+0x63b4>
  4629e0:	b	4627ac <_obstack_memory_used@@Base+0x63bc>
  4629e4:	adrp	x6, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4629e8:	ldr	x6, [x6, #3784]
  4629ec:	b	46284c <_obstack_memory_used@@Base+0x645c>
  4629f0:	mov	x0, x21
  4629f4:	ldr	x1, [x0], #32
  4629f8:	tbz	w1, #0, 462a00 <_obstack_memory_used@@Base+0x6610>
  4629fc:	ldur	x0, [x21, #-80]
  462a00:	ldur	x6, [x0, #-112]
  462a04:	str	x0, [sp, #160]
  462a08:	b	46284c <_obstack_memory_used@@Base+0x645c>
  462a0c:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  462a10:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  462a14:	nop
  462a18:	stp	x29, x30, [sp, #-112]!
  462a1c:	mov	x29, sp
  462a20:	stp	x19, x20, [sp, #16]
  462a24:	mov	x19, x0
  462a28:	stp	x21, x22, [sp, #32]
  462a2c:	str	x23, [sp, #48]
  462a30:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  462a34:	ldp	x0, x21, [x19, #-64]
  462a38:	ldur	x1, [x19, #-16]
  462a3c:	str	x1, [sp, #80]
  462a40:	ldur	w20, [x19, #-36]
  462a44:	ldur	x19, [x19, #-24]
  462a48:	bl	462b60 <_obstack_memory_used@@Base+0x6770>
  462a4c:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  462a50:	bl	462058 <_obstack_memory_used@@Base+0x5c68>
  462a54:	ldr	x22, [x0]
  462a58:	ldr	x0, [x22, #80]
  462a5c:	tbz	w0, #0, 462ae0 <_obstack_memory_used@@Base+0x66f0>
  462a60:	ldr	x22, [x22]
  462a64:	add	x23, sp, #0x40
  462a68:	mov	x1, x19
  462a6c:	mov	x2, x23
  462a70:	mov	x0, #0x0                   	// #0
  462a74:	bl	462450 <_obstack_memory_used@@Base+0x6060>
  462a78:	ldur	x1, [x22, #-112]
  462a7c:	sxtw	x20, w20
  462a80:	mov	x3, x20
  462a84:	mov	x2, x22
  462a88:	mov	x0, x23
  462a8c:	bl	462350 <_obstack_memory_used@@Base+0x5f60>
  462a90:	tst	w0, #0xff
  462a94:	b.ne	462afc <_obstack_memory_used@@Base+0x670c>  // b.any
  462a98:	adrp	x19, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462a9c:	mov	x3, x20
  462aa0:	mov	x0, x23
  462aa4:	mov	x2, #0x0                   	// #0
  462aa8:	ldr	x1, [x19, #3976]
  462aac:	bl	462350 <_obstack_memory_used@@Base+0x5f60>
  462ab0:	tst	w0, #0xff
  462ab4:	b.eq	462b00 <_obstack_memory_used@@Base+0x6710>  // b.none
  462ab8:	mov	x0, #0x8                   	// #8
  462abc:	bl	461c98 <_obstack_memory_used@@Base+0x58a8>
  462ac0:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462ac4:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462ac8:	ldr	x1, [x19, #3976]
  462acc:	ldr	x3, [x3, #3744]
  462ad0:	ldr	x2, [x2, #3704]
  462ad4:	add	x3, x3, #0x10
  462ad8:	str	x3, [x0]
  462adc:	bl	462c78 <_obstack_memory_used@@Base+0x6888>
  462ae0:	add	x22, x22, #0x70
  462ae4:	b	462a64 <_obstack_memory_used@@Base+0x6674>
  462ae8:	mov	x19, x0
  462aec:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  462af0:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  462af4:	mov	x0, x19
  462af8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  462afc:	bl	462cd8 <_obstack_memory_used@@Base+0x68e8>
  462b00:	mov	x0, x21
  462b04:	bl	462b08 <_obstack_memory_used@@Base+0x6718>
  462b08:	stp	x29, x30, [sp, #-16]!
  462b0c:	mov	x29, sp
  462b10:	blr	x0
  462b14:	bl	403180 <abort@plt>
  462b18:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  462b1c:	bl	403180 <abort@plt>
  462b20:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462b24:	mov	x2, x0
  462b28:	ldr	x1, [x1, #3608]
  462b2c:	ldaxr	x0, [x1]
  462b30:	stlxr	w3, x2, [x1]
  462b34:	cbnz	w3, 462b2c <_obstack_memory_used@@Base+0x673c>
  462b38:	ret
  462b3c:	nop
  462b40:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462b44:	ldr	x0, [x0, #3608]
  462b48:	ldar	x0, [x0]
  462b4c:	ret
  462b50:	stp	x29, x30, [sp, #-16]!
  462b54:	mov	x29, sp
  462b58:	bl	462b40 <_obstack_memory_used@@Base+0x6750>
  462b5c:	bl	462b08 <_obstack_memory_used@@Base+0x6718>
  462b60:	stp	x29, x30, [sp, #-16]!
  462b64:	mov	x29, sp
  462b68:	blr	x0
  462b6c:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  462b70:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462b74:	mov	x2, x0
  462b78:	ldr	x1, [x1, #3832]
  462b7c:	ldaxr	x0, [x1]
  462b80:	stlxr	w3, x2, [x1]
  462b84:	cbnz	w3, 462b7c <_obstack_memory_used@@Base+0x678c>
  462b88:	ret
  462b8c:	nop
  462b90:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462b94:	ldr	x0, [x0, #3832]
  462b98:	ldar	x0, [x0]
  462b9c:	ret
  462ba0:	stp	x29, x30, [sp, #-16]!
  462ba4:	mov	x29, sp
  462ba8:	bl	462b90 <_obstack_memory_used@@Base+0x67a0>
  462bac:	bl	462b60 <_obstack_memory_used@@Base+0x6770>
  462bb0:	stp	x29, x30, [sp, #-32]!
  462bb4:	cmp	w0, #0x1
  462bb8:	mov	x29, sp
  462bbc:	b.hi	462c08 <_obstack_memory_used@@Base+0x6818>  // b.pmore
  462bc0:	sub	x0, x1, #0x60
  462bc4:	ldaxr	w2, [x0]
  462bc8:	sub	w2, w2, #0x1
  462bcc:	stlxr	w3, w2, [x0]
  462bd0:	cbnz	w3, 462bc4 <_obstack_memory_used@@Base+0x67d4>
  462bd4:	cbnz	w2, 462c00 <_obstack_memory_used@@Base+0x6810>
  462bd8:	ldur	x2, [x1, #-72]
  462bdc:	str	x19, [sp, #16]
  462be0:	add	x19, x1, #0x20
  462be4:	cbz	x2, 462bf0 <_obstack_memory_used@@Base+0x6800>
  462be8:	mov	x0, x19
  462bec:	blr	x2
  462bf0:	mov	x0, x19
  462bf4:	ldr	x19, [sp, #16]
  462bf8:	ldp	x29, x30, [sp], #32
  462bfc:	b	461d00 <_obstack_memory_used@@Base+0x5910>
  462c00:	ldp	x29, x30, [sp], #32
  462c04:	ret
  462c08:	ldur	x0, [x1, #-56]
  462c0c:	str	x19, [sp, #16]
  462c10:	bl	462b08 <_obstack_memory_used@@Base+0x6718>
  462c14:	nop
  462c18:	stp	x29, x30, [sp, #-32]!
  462c1c:	mov	x29, sp
  462c20:	stp	x19, x20, [sp, #16]
  462c24:	mov	x19, x0
  462c28:	sub	x20, x0, #0x80
  462c2c:	stur	wzr, [x0, #-128]
  462c30:	stp	x1, x2, [x0, #-112]
  462c34:	bl	462b90 <_obstack_memory_used@@Base+0x67a0>
  462c38:	stur	x0, [x19, #-96]
  462c3c:	bl	462b40 <_obstack_memory_used@@Base+0x6750>
  462c40:	mov	x3, x0
  462c44:	mov	x2, #0x2b00                	// #11008
  462c48:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x5c10>
  462c4c:	movk	x2, #0x432b, lsl #16
  462c50:	add	x1, x1, #0xbb0
  462c54:	movk	x2, #0x5543, lsl #32
  462c58:	stur	x3, [x19, #-88]
  462c5c:	movk	x2, #0x474e, lsl #48
  462c60:	stp	x2, x1, [x19, #-32]
  462c64:	mov	x0, x20
  462c68:	ldp	x19, x20, [sp, #16]
  462c6c:	ldp	x29, x30, [sp], #32
  462c70:	ret
  462c74:	nop
  462c78:	stp	x29, x30, [sp, #-48]!
  462c7c:	mov	x29, sp
  462c80:	stp	x19, x20, [sp, #16]
  462c84:	mov	x19, x0
  462c88:	mov	x20, x1
  462c8c:	str	x21, [sp, #32]
  462c90:	mov	x21, x2
  462c94:	bl	462080 <_obstack_memory_used@@Base+0x5c90>
  462c98:	mov	x3, x0
  462c9c:	mov	x2, x21
  462ca0:	mov	x1, x20
  462ca4:	mov	x0, x19
  462ca8:	ldr	w4, [x3, #8]
  462cac:	add	w4, w4, #0x1
  462cb0:	str	w4, [x3, #8]
  462cb4:	bl	462c18 <_obstack_memory_used@@Base+0x6828>
  462cb8:	mov	x19, x0
  462cbc:	mov	w0, #0x1                   	// #1
  462cc0:	str	w0, [x19], #96
  462cc4:	mov	x0, x19
  462cc8:	bl	474378 <_obstack_memory_used@@Base+0x17f88>
  462ccc:	mov	x0, x19
  462cd0:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  462cd4:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  462cd8:	stp	x29, x30, [sp, #-32]!
  462cdc:	mov	x29, sp
  462ce0:	str	x19, [sp, #16]
  462ce4:	bl	462080 <_obstack_memory_used@@Base+0x5c90>
  462ce8:	ldr	w2, [x0, #8]
  462cec:	ldr	x1, [x0]
  462cf0:	add	w2, w2, #0x1
  462cf4:	str	w2, [x0, #8]
  462cf8:	cbz	x1, 462d34 <_obstack_memory_used@@Base+0x6944>
  462cfc:	mov	x3, #0xd500                	// #54528
  462d00:	ldr	x2, [x1, #80]
  462d04:	movk	x3, #0xbcd4, lsl #16
  462d08:	movk	x3, #0xaabc, lsl #32
  462d0c:	movk	x3, #0xb8b1, lsl #48
  462d10:	add	x2, x2, x3
  462d14:	cmp	x2, #0x1
  462d18:	b.ls	462d38 <_obstack_memory_used@@Base+0x6948>  // b.plast
  462d1c:	str	xzr, [x0]
  462d20:	add	x19, x1, #0x50
  462d24:	mov	x0, x19
  462d28:	bl	474718 <_obstack_memory_used@@Base+0x18328>
  462d2c:	mov	x0, x19
  462d30:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  462d34:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  462d38:	ldr	w0, [x1, #40]
  462d3c:	neg	w0, w0
  462d40:	str	w0, [x1, #40]
  462d44:	b	462d20 <_obstack_memory_used@@Base+0x6930>
  462d48:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  462d4c:	mov	x2, x0
  462d50:	add	x1, x1, #0x540
  462d54:	ldaxr	x0, [x1]
  462d58:	stlxr	w3, x2, [x1]
  462d5c:	cbnz	w3, 462d54 <_obstack_memory_used@@Base+0x6964>
  462d60:	ret
  462d64:	nop
  462d68:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  462d6c:	add	x0, x0, #0x540
  462d70:	ldar	x0, [x0]
  462d74:	ret
  462d78:	stp	x29, x30, [sp, #-16]!
  462d7c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  462d80:	add	x1, x1, #0x968
  462d84:	mov	x2, #0x1b                  	// #27
  462d88:	mov	x29, sp
  462d8c:	mov	w0, #0x2                   	// #2
  462d90:	bl	403160 <write@plt>
  462d94:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  462d98:	stp	x29, x30, [sp, #-16]!
  462d9c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  462da0:	add	x1, x1, #0x988
  462da4:	mov	x2, #0x1e                  	// #30
  462da8:	mov	x29, sp
  462dac:	mov	w0, #0x2                   	// #2
  462db0:	bl	403160 <write@plt>
  462db4:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  462db8:	ldr	x0, [x0, #8]
  462dbc:	ret
  462dc0:	ldr	x0, [x0, #8]
  462dc4:	ret
  462dc8:	stp	x29, x30, [sp, #-48]!
  462dcc:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462dd0:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462dd4:	mov	x29, sp
  462dd8:	ldr	x1, [x1, #3792]
  462ddc:	ldr	x3, [x0, #8]
  462de0:	str	x19, [sp, #16]
  462de4:	ldr	x2, [x2, #3984]
  462de8:	add	x1, x1, #0x10
  462dec:	str	x1, [x0]
  462df0:	mov	x19, x0
  462df4:	sub	x0, x3, #0x18
  462df8:	cmp	x0, x2
  462dfc:	b.ne	462e14 <_obstack_memory_used@@Base+0x6a24>  // b.any
  462e00:	mov	x0, x19
  462e04:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  462e08:	ldr	x19, [sp, #16]
  462e0c:	ldp	x29, x30, [sp], #48
  462e10:	ret
  462e14:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462e18:	ldr	x1, [x1, #3600]
  462e1c:	cbz	x1, 462e48 <_obstack_memory_used@@Base+0x6a58>
  462e20:	sub	x3, x3, #0x8
  462e24:	ldaxr	w1, [x3]
  462e28:	sub	w2, w1, #0x1
  462e2c:	stlxr	w4, w2, [x3]
  462e30:	cbnz	w4, 462e24 <_obstack_memory_used@@Base+0x6a34>
  462e34:	cmp	w1, #0x0
  462e38:	b.gt	462e00 <_obstack_memory_used@@Base+0x6a10>
  462e3c:	add	x1, sp, #0x28
  462e40:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  462e44:	b	462e00 <_obstack_memory_used@@Base+0x6a10>
  462e48:	ldur	w1, [x3, #-8]
  462e4c:	sub	w2, w1, #0x1
  462e50:	stur	w2, [x3, #-8]
  462e54:	b	462e34 <_obstack_memory_used@@Base+0x6a44>
  462e58:	stp	x29, x30, [sp, #-32]!
  462e5c:	mov	x29, sp
  462e60:	str	x19, [sp, #16]
  462e64:	mov	x19, x0
  462e68:	bl	462dc8 <_obstack_memory_used@@Base+0x69d8>
  462e6c:	mov	x0, x19
  462e70:	ldr	x19, [sp, #16]
  462e74:	ldp	x29, x30, [sp], #32
  462e78:	b	461928 <_obstack_memory_used@@Base+0x5538>
  462e7c:	nop
  462e80:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462e84:	ldr	x1, [x1, #3824]
  462e88:	add	x1, x1, #0x10
  462e8c:	str	x1, [x0]
  462e90:	b	462dc8 <_obstack_memory_used@@Base+0x69d8>
  462e94:	nop
  462e98:	stp	x29, x30, [sp, #-32]!
  462e9c:	mov	x29, sp
  462ea0:	str	x19, [sp, #16]
  462ea4:	mov	x19, x0
  462ea8:	bl	462e80 <_obstack_memory_used@@Base+0x6a90>
  462eac:	mov	x0, x19
  462eb0:	ldr	x19, [sp, #16]
  462eb4:	ldp	x29, x30, [sp], #32
  462eb8:	b	461928 <_obstack_memory_used@@Base+0x5538>
  462ebc:	nop
  462ec0:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462ec4:	ldr	x1, [x1, #3920]
  462ec8:	add	x1, x1, #0x10
  462ecc:	str	x1, [x0]
  462ed0:	b	462dc8 <_obstack_memory_used@@Base+0x69d8>
  462ed4:	nop
  462ed8:	stp	x29, x30, [sp, #-32]!
  462edc:	mov	x29, sp
  462ee0:	str	x19, [sp, #16]
  462ee4:	mov	x19, x0
  462ee8:	bl	462ec0 <_obstack_memory_used@@Base+0x6ad0>
  462eec:	mov	x0, x19
  462ef0:	ldr	x19, [sp, #16]
  462ef4:	ldp	x29, x30, [sp], #32
  462ef8:	b	461928 <_obstack_memory_used@@Base+0x5538>
  462efc:	nop
  462f00:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462f04:	ldr	x1, [x1, #3864]
  462f08:	add	x1, x1, #0x10
  462f0c:	str	x1, [x0]
  462f10:	b	462dc8 <_obstack_memory_used@@Base+0x69d8>
  462f14:	nop
  462f18:	stp	x29, x30, [sp, #-32]!
  462f1c:	mov	x29, sp
  462f20:	str	x19, [sp, #16]
  462f24:	mov	x19, x0
  462f28:	bl	462f00 <_obstack_memory_used@@Base+0x6b10>
  462f2c:	mov	x0, x19
  462f30:	ldr	x19, [sp, #16]
  462f34:	ldp	x29, x30, [sp], #32
  462f38:	b	461928 <_obstack_memory_used@@Base+0x5538>
  462f3c:	nop
  462f40:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462f44:	ldr	x1, [x1, #3880]
  462f48:	add	x1, x1, #0x10
  462f4c:	str	x1, [x0]
  462f50:	b	462dc8 <_obstack_memory_used@@Base+0x69d8>
  462f54:	nop
  462f58:	stp	x29, x30, [sp, #-32]!
  462f5c:	mov	x29, sp
  462f60:	str	x19, [sp, #16]
  462f64:	mov	x19, x0
  462f68:	bl	462f40 <_obstack_memory_used@@Base+0x6b50>
  462f6c:	mov	x0, x19
  462f70:	ldr	x19, [sp, #16]
  462f74:	ldp	x29, x30, [sp], #32
  462f78:	b	461928 <_obstack_memory_used@@Base+0x5538>
  462f7c:	nop
  462f80:	stp	x29, x30, [sp, #-48]!
  462f84:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462f88:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462f8c:	mov	x29, sp
  462f90:	ldr	x1, [x1, #3992]
  462f94:	ldr	x3, [x0, #8]
  462f98:	str	x19, [sp, #16]
  462f9c:	ldr	x2, [x2, #3984]
  462fa0:	add	x1, x1, #0x10
  462fa4:	str	x1, [x0]
  462fa8:	mov	x19, x0
  462fac:	sub	x0, x3, #0x18
  462fb0:	cmp	x0, x2
  462fb4:	b.ne	462fcc <_obstack_memory_used@@Base+0x6bdc>  // b.any
  462fb8:	mov	x0, x19
  462fbc:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  462fc0:	ldr	x19, [sp, #16]
  462fc4:	ldp	x29, x30, [sp], #48
  462fc8:	ret
  462fcc:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  462fd0:	ldr	x1, [x1, #3600]
  462fd4:	cbz	x1, 463000 <_obstack_memory_used@@Base+0x6c10>
  462fd8:	sub	x3, x3, #0x8
  462fdc:	ldaxr	w1, [x3]
  462fe0:	sub	w2, w1, #0x1
  462fe4:	stlxr	w4, w2, [x3]
  462fe8:	cbnz	w4, 462fdc <_obstack_memory_used@@Base+0x6bec>
  462fec:	cmp	w1, #0x0
  462ff0:	b.gt	462fb8 <_obstack_memory_used@@Base+0x6bc8>
  462ff4:	add	x1, sp, #0x28
  462ff8:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  462ffc:	b	462fb8 <_obstack_memory_used@@Base+0x6bc8>
  463000:	ldur	w1, [x3, #-8]
  463004:	sub	w2, w1, #0x1
  463008:	stur	w2, [x3, #-8]
  46300c:	b	462fec <_obstack_memory_used@@Base+0x6bfc>
  463010:	stp	x29, x30, [sp, #-32]!
  463014:	mov	x29, sp
  463018:	str	x19, [sp, #16]
  46301c:	mov	x19, x0
  463020:	bl	462f80 <_obstack_memory_used@@Base+0x6b90>
  463024:	mov	x0, x19
  463028:	ldr	x19, [sp, #16]
  46302c:	ldp	x29, x30, [sp], #32
  463030:	b	461928 <_obstack_memory_used@@Base+0x5538>
  463034:	nop
  463038:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46303c:	ldr	x1, [x1, #3872]
  463040:	add	x1, x1, #0x10
  463044:	str	x1, [x0]
  463048:	b	462f80 <_obstack_memory_used@@Base+0x6b90>
  46304c:	nop
  463050:	stp	x29, x30, [sp, #-32]!
  463054:	mov	x29, sp
  463058:	str	x19, [sp, #16]
  46305c:	mov	x19, x0
  463060:	bl	463038 <_obstack_memory_used@@Base+0x6c48>
  463064:	mov	x0, x19
  463068:	ldr	x19, [sp, #16]
  46306c:	ldp	x29, x30, [sp], #32
  463070:	b	461928 <_obstack_memory_used@@Base+0x5538>
  463074:	nop
  463078:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46307c:	ldr	x1, [x1, #3928]
  463080:	add	x1, x1, #0x10
  463084:	str	x1, [x0]
  463088:	b	462f80 <_obstack_memory_used@@Base+0x6b90>
  46308c:	nop
  463090:	stp	x29, x30, [sp, #-32]!
  463094:	mov	x29, sp
  463098:	str	x19, [sp, #16]
  46309c:	mov	x19, x0
  4630a0:	bl	463078 <_obstack_memory_used@@Base+0x6c88>
  4630a4:	mov	x0, x19
  4630a8:	ldr	x19, [sp, #16]
  4630ac:	ldp	x29, x30, [sp], #32
  4630b0:	b	461928 <_obstack_memory_used@@Base+0x5538>
  4630b4:	nop
  4630b8:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4630bc:	ldr	x1, [x1, #4040]
  4630c0:	add	x1, x1, #0x10
  4630c4:	str	x1, [x0]
  4630c8:	b	462f80 <_obstack_memory_used@@Base+0x6b90>
  4630cc:	nop
  4630d0:	stp	x29, x30, [sp, #-32]!
  4630d4:	mov	x29, sp
  4630d8:	str	x19, [sp, #16]
  4630dc:	mov	x19, x0
  4630e0:	bl	4630b8 <_obstack_memory_used@@Base+0x6cc8>
  4630e4:	mov	x0, x19
  4630e8:	ldr	x19, [sp, #16]
  4630ec:	ldp	x29, x30, [sp], #32
  4630f0:	b	461928 <_obstack_memory_used@@Base+0x5538>
  4630f4:	nop
  4630f8:	stp	x29, x30, [sp, #-32]!
  4630fc:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463100:	mov	x29, sp
  463104:	ldr	x2, [x2, #3792]
  463108:	str	x19, [sp, #16]
  46310c:	mov	x19, x0
  463110:	add	x2, x2, #0x10
  463114:	str	x2, [x0], #8
  463118:	bl	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  46311c:	ldr	x19, [sp, #16]
  463120:	ldp	x29, x30, [sp], #32
  463124:	ret
  463128:	mov	x1, x0
  46312c:	mov	x0, x19
  463130:	mov	x19, x1
  463134:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  463138:	mov	x0, x19
  46313c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463140:	stp	x29, x30, [sp, #-32]!
  463144:	mov	x29, sp
  463148:	str	x19, [sp, #16]
  46314c:	mov	x19, x0
  463150:	bl	4630f8 <_obstack_memory_used@@Base+0x6d08>
  463154:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463158:	ldr	x1, [x1, #3824]
  46315c:	add	x1, x1, #0x10
  463160:	str	x1, [x19]
  463164:	ldr	x19, [sp, #16]
  463168:	ldp	x29, x30, [sp], #32
  46316c:	ret
  463170:	stp	x29, x30, [sp, #-32]!
  463174:	mov	x29, sp
  463178:	str	x19, [sp, #16]
  46317c:	mov	x19, x0
  463180:	bl	4630f8 <_obstack_memory_used@@Base+0x6d08>
  463184:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463188:	ldr	x1, [x1, #3920]
  46318c:	add	x1, x1, #0x10
  463190:	str	x1, [x19]
  463194:	ldr	x19, [sp, #16]
  463198:	ldp	x29, x30, [sp], #32
  46319c:	ret
  4631a0:	stp	x29, x30, [sp, #-32]!
  4631a4:	mov	x29, sp
  4631a8:	str	x19, [sp, #16]
  4631ac:	mov	x19, x0
  4631b0:	bl	4630f8 <_obstack_memory_used@@Base+0x6d08>
  4631b4:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4631b8:	ldr	x1, [x1, #3864]
  4631bc:	add	x1, x1, #0x10
  4631c0:	str	x1, [x19]
  4631c4:	ldr	x19, [sp, #16]
  4631c8:	ldp	x29, x30, [sp], #32
  4631cc:	ret
  4631d0:	stp	x29, x30, [sp, #-32]!
  4631d4:	mov	x29, sp
  4631d8:	str	x19, [sp, #16]
  4631dc:	mov	x19, x0
  4631e0:	bl	4630f8 <_obstack_memory_used@@Base+0x6d08>
  4631e4:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4631e8:	ldr	x1, [x1, #3880]
  4631ec:	add	x1, x1, #0x10
  4631f0:	str	x1, [x19]
  4631f4:	ldr	x19, [sp, #16]
  4631f8:	ldp	x29, x30, [sp], #32
  4631fc:	ret
  463200:	stp	x29, x30, [sp, #-32]!
  463204:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463208:	mov	x29, sp
  46320c:	ldr	x2, [x2, #3992]
  463210:	str	x19, [sp, #16]
  463214:	mov	x19, x0
  463218:	add	x2, x2, #0x10
  46321c:	str	x2, [x0], #8
  463220:	bl	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  463224:	ldr	x19, [sp, #16]
  463228:	ldp	x29, x30, [sp], #32
  46322c:	ret
  463230:	mov	x1, x0
  463234:	mov	x0, x19
  463238:	mov	x19, x1
  46323c:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  463240:	mov	x0, x19
  463244:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463248:	stp	x29, x30, [sp, #-32]!
  46324c:	mov	x29, sp
  463250:	str	x19, [sp, #16]
  463254:	mov	x19, x0
  463258:	bl	463200 <_obstack_memory_used@@Base+0x6e10>
  46325c:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463260:	ldr	x1, [x1, #3872]
  463264:	add	x1, x1, #0x10
  463268:	str	x1, [x19]
  46326c:	ldr	x19, [sp, #16]
  463270:	ldp	x29, x30, [sp], #32
  463274:	ret
  463278:	stp	x29, x30, [sp, #-32]!
  46327c:	mov	x29, sp
  463280:	str	x19, [sp, #16]
  463284:	mov	x19, x0
  463288:	bl	463200 <_obstack_memory_used@@Base+0x6e10>
  46328c:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463290:	ldr	x1, [x1, #3928]
  463294:	add	x1, x1, #0x10
  463298:	str	x1, [x19]
  46329c:	ldr	x19, [sp, #16]
  4632a0:	ldp	x29, x30, [sp], #32
  4632a4:	ret
  4632a8:	stp	x29, x30, [sp, #-32]!
  4632ac:	mov	x29, sp
  4632b0:	str	x19, [sp, #16]
  4632b4:	mov	x19, x0
  4632b8:	bl	463200 <_obstack_memory_used@@Base+0x6e10>
  4632bc:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4632c0:	ldr	x1, [x1, #4040]
  4632c4:	add	x1, x1, #0x10
  4632c8:	str	x1, [x19]
  4632cc:	ldr	x19, [sp, #16]
  4632d0:	ldp	x29, x30, [sp], #32
  4632d4:	ret
  4632d8:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4632dc:	ldr	x1, [x1, #3984]
  4632e0:	cmp	x0, x1
  4632e4:	b.ne	4632ec <_obstack_memory_used@@Base+0x6efc>  // b.any
  4632e8:	ret
  4632ec:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4632f0:	ldr	x1, [x1, #3600]
  4632f4:	cbz	x1, 46332c <_obstack_memory_used@@Base+0x6f3c>
  4632f8:	add	x2, x0, #0x10
  4632fc:	ldaxr	w1, [x2]
  463300:	sub	w3, w1, #0x1
  463304:	stlxr	w4, w3, [x2]
  463308:	cbnz	w4, 4632fc <_obstack_memory_used@@Base+0x6f0c>
  46330c:	cmp	w1, #0x0
  463310:	b.gt	4632e8 <_obstack_memory_used@@Base+0x6ef8>
  463314:	stp	x29, x30, [sp, #-32]!
  463318:	mov	x29, sp
  46331c:	add	x1, sp, #0x18
  463320:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  463324:	ldp	x29, x30, [sp], #32
  463328:	ret
  46332c:	ldr	w1, [x0, #16]
  463330:	sub	w2, w1, #0x1
  463334:	str	w2, [x0, #16]
  463338:	b	46330c <_obstack_memory_used@@Base+0x6f1c>
  46333c:	nop
  463340:	stp	x29, x30, [sp, #-16]!
  463344:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463348:	add	x1, x1, #0x8
  46334c:	mov	x29, sp
  463350:	ldr	x2, [x2, #3792]
  463354:	add	x2, x2, #0x10
  463358:	str	x2, [x0], #8
  46335c:	bl	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  463360:	ldp	x29, x30, [sp], #16
  463364:	ret
  463368:	stp	x29, x30, [sp, #-32]!
  46336c:	add	x1, x1, #0x8
  463370:	mov	x29, sp
  463374:	str	x19, [sp, #16]
  463378:	mov	x19, x0
  46337c:	add	x0, x0, #0x8
  463380:	bl	467028 <_obstack_memory_used@@Base+0xac38>
  463384:	mov	x0, x19
  463388:	ldr	x19, [sp, #16]
  46338c:	ldp	x29, x30, [sp], #32
  463390:	ret
  463394:	nop
  463398:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46339c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4633a0:	ldr	x4, [x1, #8]
  4633a4:	ldr	x3, [x3, #3792]
  4633a8:	ldr	x2, [x2, #3984]
  4633ac:	add	x3, x3, #0x10
  4633b0:	stp	x3, x4, [x0]
  4633b4:	add	x2, x2, #0x18
  4633b8:	str	x2, [x1, #8]
  4633bc:	ret
  4633c0:	stp	x29, x30, [sp, #-32]!
  4633c4:	add	x1, x1, #0x8
  4633c8:	mov	x29, sp
  4633cc:	str	x19, [sp, #16]
  4633d0:	mov	x19, x0
  4633d4:	add	x0, x0, #0x8
  4633d8:	bl	464a28 <_obstack_memory_used@@Base+0x8638>
  4633dc:	mov	x0, x19
  4633e0:	ldr	x19, [sp, #16]
  4633e4:	ldp	x29, x30, [sp], #32
  4633e8:	ret
  4633ec:	nop
  4633f0:	stp	x29, x30, [sp, #-16]!
  4633f4:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4633f8:	add	x1, x1, #0x8
  4633fc:	mov	x29, sp
  463400:	ldr	x2, [x2, #3992]
  463404:	add	x2, x2, #0x10
  463408:	str	x2, [x0], #8
  46340c:	bl	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  463410:	ldp	x29, x30, [sp], #16
  463414:	ret
  463418:	stp	x29, x30, [sp, #-32]!
  46341c:	add	x1, x1, #0x8
  463420:	mov	x29, sp
  463424:	str	x19, [sp, #16]
  463428:	mov	x19, x0
  46342c:	add	x0, x0, #0x8
  463430:	bl	467028 <_obstack_memory_used@@Base+0xac38>
  463434:	mov	x0, x19
  463438:	ldr	x19, [sp, #16]
  46343c:	ldp	x29, x30, [sp], #32
  463440:	ret
  463444:	nop
  463448:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46344c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463450:	ldr	x4, [x1, #8]
  463454:	ldr	x3, [x3, #3992]
  463458:	ldr	x2, [x2, #3984]
  46345c:	add	x3, x3, #0x10
  463460:	stp	x3, x4, [x0]
  463464:	add	x2, x2, #0x18
  463468:	str	x2, [x1, #8]
  46346c:	ret
  463470:	stp	x29, x30, [sp, #-32]!
  463474:	add	x1, x1, #0x8
  463478:	mov	x29, sp
  46347c:	str	x19, [sp, #16]
  463480:	mov	x19, x0
  463484:	add	x0, x0, #0x8
  463488:	bl	464a28 <_obstack_memory_used@@Base+0x8638>
  46348c:	mov	x0, x19
  463490:	ldr	x19, [sp, #16]
  463494:	ldp	x29, x30, [sp], #32
  463498:	ret
  46349c:	nop
  4634a0:	stp	x29, x30, [sp, #-48]!
  4634a4:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4634a8:	mov	x29, sp
  4634ac:	ldr	x3, [x3, #3792]
  4634b0:	str	x19, [sp, #16]
  4634b4:	mov	x19, x0
  4634b8:	add	x2, sp, #0x28
  4634bc:	add	x3, x3, #0x10
  4634c0:	str	x3, [x0], #8
  4634c4:	bl	4679e0 <_obstack_memory_used@@Base+0xb5f0>
  4634c8:	ldr	x19, [sp, #16]
  4634cc:	ldp	x29, x30, [sp], #48
  4634d0:	ret
  4634d4:	mov	x1, x0
  4634d8:	mov	x0, x19
  4634dc:	mov	x19, x1
  4634e0:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  4634e4:	mov	x0, x19
  4634e8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4634ec:	nop
  4634f0:	stp	x29, x30, [sp, #-32]!
  4634f4:	mov	x29, sp
  4634f8:	str	x19, [sp, #16]
  4634fc:	mov	x19, x0
  463500:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  463504:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463508:	ldr	x1, [x1, #3824]
  46350c:	add	x1, x1, #0x10
  463510:	str	x1, [x19]
  463514:	ldr	x19, [sp, #16]
  463518:	ldp	x29, x30, [sp], #32
  46351c:	ret
  463520:	stp	x29, x30, [sp, #-32]!
  463524:	mov	x29, sp
  463528:	str	x19, [sp, #16]
  46352c:	mov	x19, x0
  463530:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  463534:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463538:	ldr	x1, [x1, #3920]
  46353c:	add	x1, x1, #0x10
  463540:	str	x1, [x19]
  463544:	ldr	x19, [sp, #16]
  463548:	ldp	x29, x30, [sp], #32
  46354c:	ret
  463550:	stp	x29, x30, [sp, #-32]!
  463554:	mov	x29, sp
  463558:	str	x19, [sp, #16]
  46355c:	mov	x19, x0
  463560:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  463564:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463568:	ldr	x1, [x1, #3864]
  46356c:	add	x1, x1, #0x10
  463570:	str	x1, [x19]
  463574:	ldr	x19, [sp, #16]
  463578:	ldp	x29, x30, [sp], #32
  46357c:	ret
  463580:	stp	x29, x30, [sp, #-32]!
  463584:	mov	x29, sp
  463588:	str	x19, [sp, #16]
  46358c:	mov	x19, x0
  463590:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  463594:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463598:	ldr	x1, [x1, #3880]
  46359c:	add	x1, x1, #0x10
  4635a0:	str	x1, [x19]
  4635a4:	ldr	x19, [sp, #16]
  4635a8:	ldp	x29, x30, [sp], #32
  4635ac:	ret
  4635b0:	stp	x29, x30, [sp, #-48]!
  4635b4:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4635b8:	mov	x29, sp
  4635bc:	ldr	x3, [x3, #3992]
  4635c0:	str	x19, [sp, #16]
  4635c4:	mov	x19, x0
  4635c8:	add	x2, sp, #0x28
  4635cc:	add	x3, x3, #0x10
  4635d0:	str	x3, [x0], #8
  4635d4:	bl	4679e0 <_obstack_memory_used@@Base+0xb5f0>
  4635d8:	ldr	x19, [sp, #16]
  4635dc:	ldp	x29, x30, [sp], #48
  4635e0:	ret
  4635e4:	mov	x1, x0
  4635e8:	mov	x0, x19
  4635ec:	mov	x19, x1
  4635f0:	bl	461f48 <_obstack_memory_used@@Base+0x5b58>
  4635f4:	mov	x0, x19
  4635f8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4635fc:	nop
  463600:	stp	x29, x30, [sp, #-32]!
  463604:	mov	x29, sp
  463608:	str	x19, [sp, #16]
  46360c:	mov	x19, x0
  463610:	bl	4635b0 <_obstack_memory_used@@Base+0x71c0>
  463614:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463618:	ldr	x1, [x1, #3872]
  46361c:	add	x1, x1, #0x10
  463620:	str	x1, [x19]
  463624:	ldr	x19, [sp, #16]
  463628:	ldp	x29, x30, [sp], #32
  46362c:	ret
  463630:	stp	x29, x30, [sp, #-32]!
  463634:	mov	x29, sp
  463638:	str	x19, [sp, #16]
  46363c:	mov	x19, x0
  463640:	bl	4635b0 <_obstack_memory_used@@Base+0x71c0>
  463644:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463648:	ldr	x1, [x1, #3928]
  46364c:	add	x1, x1, #0x10
  463650:	str	x1, [x19]
  463654:	ldr	x19, [sp, #16]
  463658:	ldp	x29, x30, [sp], #32
  46365c:	ret
  463660:	stp	x29, x30, [sp, #-32]!
  463664:	mov	x29, sp
  463668:	str	x19, [sp, #16]
  46366c:	mov	x19, x0
  463670:	bl	4635b0 <_obstack_memory_used@@Base+0x71c0>
  463674:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463678:	ldr	x1, [x1, #4040]
  46367c:	add	x1, x1, #0x10
  463680:	str	x1, [x19]
  463684:	ldr	x19, [sp, #16]
  463688:	ldp	x29, x30, [sp], #32
  46368c:	ret
  463690:	ldr	x1, [x1]
  463694:	ldur	x2, [x1, #-24]
  463698:	b	467c48 <_obstack_memory_used@@Base+0xb858>
  46369c:	nop
  4636a0:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4636a4:	ldr	x1, [x1, #3984]
  4636a8:	add	x1, x1, #0x18
  4636ac:	str	x1, [x0]
  4636b0:	ret
  4636b4:	nop
  4636b8:	b	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  4636bc:	nop
  4636c0:	stp	x29, x30, [sp, #-32]!
  4636c4:	mov	x29, sp
  4636c8:	add	x3, sp, #0x18
  4636cc:	bl	467610 <_obstack_memory_used@@Base+0xb220>
  4636d0:	ldp	x29, x30, [sp], #32
  4636d4:	ret
  4636d8:	stp	x29, x30, [sp, #-16]!
  4636dc:	mov	x29, sp
  4636e0:	bl	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  4636e4:	ldp	x29, x30, [sp], #16
  4636e8:	ret
  4636ec:	nop
  4636f0:	stp	x29, x30, [sp, #-32]!
  4636f4:	mov	x29, sp
  4636f8:	str	x19, [sp, #16]
  4636fc:	mov	x19, x0
  463700:	bl	467028 <_obstack_memory_used@@Base+0xac38>
  463704:	mov	x0, x19
  463708:	ldr	x19, [sp, #16]
  46370c:	ldp	x29, x30, [sp], #32
  463710:	ret
  463714:	nop
  463718:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46371c:	ldr	x2, [x0]
  463720:	ldr	x1, [x1, #3984]
  463724:	sub	x0, x2, #0x18
  463728:	cmp	x0, x1
  46372c:	b.ne	463734 <_obstack_memory_used@@Base+0x7344>  // b.any
  463730:	ret
  463734:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463738:	ldr	x1, [x1, #3600]
  46373c:	cbz	x1, 463774 <_obstack_memory_used@@Base+0x7384>
  463740:	sub	x2, x2, #0x8
  463744:	ldaxr	w1, [x2]
  463748:	sub	w3, w1, #0x1
  46374c:	stlxr	w4, w3, [x2]
  463750:	cbnz	w4, 463744 <_obstack_memory_used@@Base+0x7354>
  463754:	cmp	w1, #0x0
  463758:	b.gt	463730 <_obstack_memory_used@@Base+0x7340>
  46375c:	stp	x29, x30, [sp, #-32]!
  463760:	mov	x29, sp
  463764:	add	x1, sp, #0x18
  463768:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  46376c:	ldp	x29, x30, [sp], #32
  463770:	ret
  463774:	ldur	w1, [x2, #-8]
  463778:	sub	w3, w1, #0x1
  46377c:	stur	w3, [x2, #-8]
  463780:	b	463754 <_obstack_memory_used@@Base+0x7364>
  463784:	nop
  463788:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46378c:	ldr	x3, [x1]
  463790:	str	x3, [x0]
  463794:	ldr	x2, [x2, #3984]
  463798:	add	x2, x2, #0x18
  46379c:	str	x2, [x1]
  4637a0:	ret
  4637a4:	nop
  4637a8:	stp	x29, x30, [sp, #-32]!
  4637ac:	mov	x29, sp
  4637b0:	str	x19, [sp, #16]
  4637b4:	mov	x19, x0
  4637b8:	bl	464a28 <_obstack_memory_used@@Base+0x8638>
  4637bc:	mov	x0, x19
  4637c0:	ldr	x19, [sp, #16]
  4637c4:	ldp	x29, x30, [sp], #32
  4637c8:	ret
  4637cc:	nop
  4637d0:	stp	x29, x30, [sp, #-48]!
  4637d4:	mov	x29, sp
  4637d8:	ldr	x2, [x0]
  4637dc:	ldr	x2, [x2, #24]
  4637e0:	str	x19, [sp, #16]
  4637e4:	mov	x19, x8
  4637e8:	add	x8, sp, #0x28
  4637ec:	blr	x2
  4637f0:	ldr	x1, [sp, #40]
  4637f4:	mov	x0, x19
  4637f8:	ldur	x2, [x1, #-24]
  4637fc:	bl	467c48 <_obstack_memory_used@@Base+0xb858>
  463800:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463804:	ldr	x2, [sp, #40]
  463808:	ldr	x1, [x1, #3984]
  46380c:	sub	x0, x2, #0x18
  463810:	cmp	x0, x1
  463814:	b.ne	463828 <_obstack_memory_used@@Base+0x7438>  // b.any
  463818:	mov	x0, x19
  46381c:	ldr	x19, [sp, #16]
  463820:	ldp	x29, x30, [sp], #48
  463824:	ret
  463828:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46382c:	ldr	x1, [x1, #3600]
  463830:	cbz	x1, 46385c <_obstack_memory_used@@Base+0x746c>
  463834:	sub	x2, x2, #0x8
  463838:	ldaxr	w1, [x2]
  46383c:	sub	w3, w1, #0x1
  463840:	stlxr	w4, w3, [x2]
  463844:	cbnz	w4, 463838 <_obstack_memory_used@@Base+0x7448>
  463848:	cmp	w1, #0x0
  46384c:	b.gt	463818 <_obstack_memory_used@@Base+0x7428>
  463850:	add	x1, sp, #0x20
  463854:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  463858:	b	463818 <_obstack_memory_used@@Base+0x7428>
  46385c:	ldur	w1, [x2, #-8]
  463860:	sub	w3, w1, #0x1
  463864:	stur	w3, [x2, #-8]
  463868:	b	463848 <_obstack_memory_used@@Base+0x7458>
  46386c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463870:	mov	x19, x0
  463874:	ldr	x1, [sp, #40]
  463878:	ldr	x2, [x2, #3984]
  46387c:	sub	x0, x1, #0x18
  463880:	cmp	x0, x2
  463884:	b.eq	4638b8 <_obstack_memory_used@@Base+0x74c8>  // b.none
  463888:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46388c:	ldr	x2, [x2, #3600]
  463890:	cbz	x2, 4638c0 <_obstack_memory_used@@Base+0x74d0>
  463894:	sub	x1, x1, #0x8
  463898:	ldaxr	w2, [x1]
  46389c:	sub	w3, w2, #0x1
  4638a0:	stlxr	w4, w3, [x1]
  4638a4:	cbnz	w4, 463898 <_obstack_memory_used@@Base+0x74a8>
  4638a8:	cmp	w2, #0x0
  4638ac:	b.gt	4638b8 <_obstack_memory_used@@Base+0x74c8>
  4638b0:	add	x1, sp, #0x20
  4638b4:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  4638b8:	mov	x0, x19
  4638bc:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4638c0:	ldur	w2, [x1, #-8]
  4638c4:	sub	w3, w2, #0x1
  4638c8:	stur	w3, [x1, #-8]
  4638cc:	b	4638a8 <_obstack_memory_used@@Base+0x74b8>
  4638d0:	stp	x29, x30, [sp, #-48]!
  4638d4:	mov	x29, sp
  4638d8:	stp	x19, x20, [sp, #16]
  4638dc:	sub	x20, x1, #0x1
  4638e0:	mov	x19, #0x1                   	// #1
  4638e4:	stp	x21, x22, [sp, #32]
  4638e8:	mov	x21, x1
  4638ec:	mov	x22, x0
  4638f0:	b	4638f8 <_obstack_memory_used@@Base+0x7508>
  4638f4:	add	x19, x19, #0x1
  4638f8:	add	x0, x20, x19
  4638fc:	bl	402e80 <_ITM_RU1@plt>
  463900:	tst	w0, #0xff
  463904:	b.ne	4638f4 <_obstack_memory_used@@Base+0x7504>  // b.any
  463908:	add	x0, x19, #0x18
  46390c:	bl	402cc0 <_ZGTtnam@plt>
  463910:	mov	x20, x0
  463914:	sub	x4, x19, #0x1
  463918:	str	x4, [x0, #8]
  46391c:	mov	x1, x21
  463920:	str	wzr, [x0, #16]
  463924:	mov	x2, x19
  463928:	str	x4, [x20], #24
  46392c:	mov	x0, x20
  463930:	bl	402fb0 <_ITM_memcpyRtWn@plt>
  463934:	str	x20, [x22]
  463938:	ldp	x19, x20, [sp, #16]
  46393c:	ldp	x21, x22, [sp, #32]
  463940:	ldp	x29, x30, [sp], #48
  463944:	ret
  463948:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  46394c:	bl	462cd8 <_obstack_memory_used@@Base+0x68e8>
  463950:	mov	x19, x0
  463954:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  463958:	mov	x0, x19
  46395c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463960:	b	403310 <_ITM_RU8@plt>
  463964:	nop
  463968:	b	403310 <_ITM_RU8@plt>
  46396c:	nop
  463970:	stp	x29, x30, [sp, #-16]!
  463974:	mov	x29, sp
  463978:	bl	463960 <_obstack_memory_used@@Base+0x7570>
  46397c:	sub	x2, x0, #0x18
  463980:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  463984:	mov	x1, #0x1                   	// #1
  463988:	ldp	x29, x30, [sp], #16
  46398c:	ldr	x0, [x3, #3760]
  463990:	b	402f60 <_ITM_addUserCommitAction@plt>
  463994:	nop
  463998:	add	x0, x0, #0x8
  46399c:	ret
  4639a0:	add	x0, x0, #0x8
  4639a4:	ret
  4639a8:	stp	x29, x30, [sp, #-64]!
  4639ac:	mov	x29, sp
  4639b0:	stp	x19, x20, [sp, #16]
  4639b4:	add	x20, sp, #0x30
  4639b8:	mov	x19, x0
  4639bc:	mov	x0, x20
  4639c0:	str	x21, [sp, #32]
  4639c4:	mov	x21, x1
  4639c8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4639cc:	add	x1, x1, #0x580
  4639d0:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  4639d4:	mov	x0, x19
  4639d8:	mov	x1, x20
  4639dc:	mov	x2, #0x10                  	// #16
  4639e0:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  4639e4:	mov	x0, x19
  4639e8:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  4639ec:	mov	x2, x19
  4639f0:	mov	x1, x21
  4639f4:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  4639f8:	mov	x0, x20
  4639fc:	bl	462dc8 <_obstack_memory_used@@Base+0x69d8>
  463a00:	ldp	x19, x20, [sp, #16]
  463a04:	ldr	x21, [sp, #32]
  463a08:	ldp	x29, x30, [sp], #64
  463a0c:	ret
  463a10:	mov	x19, x0
  463a14:	mov	x0, x20
  463a18:	bl	462dc8 <_obstack_memory_used@@Base+0x69d8>
  463a1c:	mov	x0, x19
  463a20:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463a24:	nop
  463a28:	stp	x29, x30, [sp, #-64]!
  463a2c:	mov	x29, sp
  463a30:	stp	x19, x20, [sp, #16]
  463a34:	add	x20, sp, #0x30
  463a38:	mov	x19, x0
  463a3c:	mov	x0, x20
  463a40:	stp	x21, x22, [sp, #32]
  463a44:	mov	x22, x1
  463a48:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463a4c:	add	x1, x1, #0x580
  463a50:	bl	4634a0 <_obstack_memory_used@@Base+0x70b0>
  463a54:	mov	x0, x19
  463a58:	mov	x1, x20
  463a5c:	mov	x2, #0x10                  	// #16
  463a60:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463a64:	mov	x0, x19
  463a68:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463a6c:	mov	x21, x0
  463a70:	mov	x0, x22
  463a74:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  463a78:	mov	x1, x0
  463a7c:	mov	x2, x19
  463a80:	mov	x0, x21
  463a84:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463a88:	mov	x0, x20
  463a8c:	bl	462dc8 <_obstack_memory_used@@Base+0x69d8>
  463a90:	ldp	x19, x20, [sp, #16]
  463a94:	ldp	x21, x22, [sp, #32]
  463a98:	ldp	x29, x30, [sp], #64
  463a9c:	ret
  463aa0:	mov	x19, x0
  463aa4:	mov	x0, x20
  463aa8:	bl	462dc8 <_obstack_memory_used@@Base+0x69d8>
  463aac:	mov	x0, x19
  463ab0:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463ab4:	nop
  463ab8:	stp	x29, x30, [sp, #-16]!
  463abc:	mov	x29, sp
  463ac0:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463ac4:	ldp	x29, x30, [sp], #16
  463ac8:	b	463970 <_obstack_memory_used@@Base+0x7580>
  463acc:	nop
  463ad0:	stp	x29, x30, [sp, #-32]!
  463ad4:	mov	x29, sp
  463ad8:	str	x19, [sp, #16]
  463adc:	mov	x19, x0
  463ae0:	bl	463ab8 <_obstack_memory_used@@Base+0x76c8>
  463ae4:	mov	x0, x19
  463ae8:	ldr	x19, [sp, #16]
  463aec:	ldp	x29, x30, [sp], #32
  463af0:	b	403520 <_ZGTtdlPv@plt>
  463af4:	nop
  463af8:	stp	x29, x30, [sp, #-16]!
  463afc:	mov	x29, sp
  463b00:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463b04:	ldp	x29, x30, [sp], #16
  463b08:	b	463960 <_obstack_memory_used@@Base+0x7570>
  463b0c:	nop
  463b10:	stp	x29, x30, [sp, #-64]!
  463b14:	mov	x29, sp
  463b18:	stp	x19, x20, [sp, #16]
  463b1c:	add	x20, sp, #0x30
  463b20:	mov	x19, x0
  463b24:	mov	x0, x20
  463b28:	str	x21, [sp, #32]
  463b2c:	mov	x21, x1
  463b30:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463b34:	add	x1, x1, #0x580
  463b38:	bl	4634f0 <_obstack_memory_used@@Base+0x7100>
  463b3c:	mov	x0, x19
  463b40:	mov	x1, x20
  463b44:	mov	x2, #0x10                  	// #16
  463b48:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463b4c:	mov	x0, x19
  463b50:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463b54:	mov	x2, x19
  463b58:	mov	x1, x21
  463b5c:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463b60:	mov	x0, x20
  463b64:	bl	462e80 <_obstack_memory_used@@Base+0x6a90>
  463b68:	ldp	x19, x20, [sp, #16]
  463b6c:	ldr	x21, [sp, #32]
  463b70:	ldp	x29, x30, [sp], #64
  463b74:	ret
  463b78:	mov	x19, x0
  463b7c:	mov	x0, x20
  463b80:	bl	462e80 <_obstack_memory_used@@Base+0x6a90>
  463b84:	mov	x0, x19
  463b88:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463b8c:	nop
  463b90:	stp	x29, x30, [sp, #-64]!
  463b94:	mov	x29, sp
  463b98:	stp	x19, x20, [sp, #16]
  463b9c:	add	x20, sp, #0x30
  463ba0:	mov	x19, x0
  463ba4:	mov	x0, x20
  463ba8:	stp	x21, x22, [sp, #32]
  463bac:	mov	x22, x1
  463bb0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463bb4:	add	x1, x1, #0x580
  463bb8:	bl	4634f0 <_obstack_memory_used@@Base+0x7100>
  463bbc:	mov	x0, x19
  463bc0:	mov	x1, x20
  463bc4:	mov	x2, #0x10                  	// #16
  463bc8:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463bcc:	mov	x0, x19
  463bd0:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463bd4:	mov	x21, x0
  463bd8:	mov	x0, x22
  463bdc:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  463be0:	mov	x1, x0
  463be4:	mov	x2, x19
  463be8:	mov	x0, x21
  463bec:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463bf0:	mov	x0, x20
  463bf4:	bl	462e80 <_obstack_memory_used@@Base+0x6a90>
  463bf8:	ldp	x19, x20, [sp, #16]
  463bfc:	ldp	x21, x22, [sp, #32]
  463c00:	ldp	x29, x30, [sp], #64
  463c04:	ret
  463c08:	mov	x19, x0
  463c0c:	mov	x0, x20
  463c10:	bl	462e80 <_obstack_memory_used@@Base+0x6a90>
  463c14:	mov	x0, x19
  463c18:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463c1c:	nop
  463c20:	stp	x29, x30, [sp, #-16]!
  463c24:	mov	x29, sp
  463c28:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463c2c:	ldp	x29, x30, [sp], #16
  463c30:	b	463970 <_obstack_memory_used@@Base+0x7580>
  463c34:	nop
  463c38:	stp	x29, x30, [sp, #-32]!
  463c3c:	mov	x29, sp
  463c40:	str	x19, [sp, #16]
  463c44:	mov	x19, x0
  463c48:	bl	463c20 <_obstack_memory_used@@Base+0x7830>
  463c4c:	mov	x0, x19
  463c50:	ldr	x19, [sp, #16]
  463c54:	ldp	x29, x30, [sp], #32
  463c58:	b	403520 <_ZGTtdlPv@plt>
  463c5c:	nop
  463c60:	stp	x29, x30, [sp, #-64]!
  463c64:	mov	x29, sp
  463c68:	stp	x19, x20, [sp, #16]
  463c6c:	add	x20, sp, #0x30
  463c70:	mov	x19, x0
  463c74:	mov	x0, x20
  463c78:	str	x21, [sp, #32]
  463c7c:	mov	x21, x1
  463c80:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463c84:	add	x1, x1, #0x580
  463c88:	bl	463520 <_obstack_memory_used@@Base+0x7130>
  463c8c:	mov	x0, x19
  463c90:	mov	x1, x20
  463c94:	mov	x2, #0x10                  	// #16
  463c98:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463c9c:	mov	x0, x19
  463ca0:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463ca4:	mov	x2, x19
  463ca8:	mov	x1, x21
  463cac:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463cb0:	mov	x0, x20
  463cb4:	bl	462ec0 <_obstack_memory_used@@Base+0x6ad0>
  463cb8:	ldp	x19, x20, [sp, #16]
  463cbc:	ldr	x21, [sp, #32]
  463cc0:	ldp	x29, x30, [sp], #64
  463cc4:	ret
  463cc8:	mov	x19, x0
  463ccc:	mov	x0, x20
  463cd0:	bl	462ec0 <_obstack_memory_used@@Base+0x6ad0>
  463cd4:	mov	x0, x19
  463cd8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463cdc:	nop
  463ce0:	stp	x29, x30, [sp, #-64]!
  463ce4:	mov	x29, sp
  463ce8:	stp	x19, x20, [sp, #16]
  463cec:	add	x20, sp, #0x30
  463cf0:	mov	x19, x0
  463cf4:	mov	x0, x20
  463cf8:	stp	x21, x22, [sp, #32]
  463cfc:	mov	x22, x1
  463d00:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463d04:	add	x1, x1, #0x580
  463d08:	bl	463520 <_obstack_memory_used@@Base+0x7130>
  463d0c:	mov	x0, x19
  463d10:	mov	x1, x20
  463d14:	mov	x2, #0x10                  	// #16
  463d18:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463d1c:	mov	x0, x19
  463d20:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463d24:	mov	x21, x0
  463d28:	mov	x0, x22
  463d2c:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  463d30:	mov	x1, x0
  463d34:	mov	x2, x19
  463d38:	mov	x0, x21
  463d3c:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463d40:	mov	x0, x20
  463d44:	bl	462ec0 <_obstack_memory_used@@Base+0x6ad0>
  463d48:	ldp	x19, x20, [sp, #16]
  463d4c:	ldp	x21, x22, [sp, #32]
  463d50:	ldp	x29, x30, [sp], #64
  463d54:	ret
  463d58:	mov	x19, x0
  463d5c:	mov	x0, x20
  463d60:	bl	462ec0 <_obstack_memory_used@@Base+0x6ad0>
  463d64:	mov	x0, x19
  463d68:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463d6c:	nop
  463d70:	stp	x29, x30, [sp, #-16]!
  463d74:	mov	x29, sp
  463d78:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463d7c:	ldp	x29, x30, [sp], #16
  463d80:	b	463970 <_obstack_memory_used@@Base+0x7580>
  463d84:	nop
  463d88:	stp	x29, x30, [sp, #-32]!
  463d8c:	mov	x29, sp
  463d90:	str	x19, [sp, #16]
  463d94:	mov	x19, x0
  463d98:	bl	463d70 <_obstack_memory_used@@Base+0x7980>
  463d9c:	mov	x0, x19
  463da0:	ldr	x19, [sp, #16]
  463da4:	ldp	x29, x30, [sp], #32
  463da8:	b	403520 <_ZGTtdlPv@plt>
  463dac:	nop
  463db0:	stp	x29, x30, [sp, #-64]!
  463db4:	mov	x29, sp
  463db8:	stp	x19, x20, [sp, #16]
  463dbc:	add	x20, sp, #0x30
  463dc0:	mov	x19, x0
  463dc4:	mov	x0, x20
  463dc8:	str	x21, [sp, #32]
  463dcc:	mov	x21, x1
  463dd0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463dd4:	add	x1, x1, #0x580
  463dd8:	bl	463550 <_obstack_memory_used@@Base+0x7160>
  463ddc:	mov	x0, x19
  463de0:	mov	x1, x20
  463de4:	mov	x2, #0x10                  	// #16
  463de8:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463dec:	mov	x0, x19
  463df0:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463df4:	mov	x2, x19
  463df8:	mov	x1, x21
  463dfc:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463e00:	mov	x0, x20
  463e04:	bl	462f00 <_obstack_memory_used@@Base+0x6b10>
  463e08:	ldp	x19, x20, [sp, #16]
  463e0c:	ldr	x21, [sp, #32]
  463e10:	ldp	x29, x30, [sp], #64
  463e14:	ret
  463e18:	mov	x19, x0
  463e1c:	mov	x0, x20
  463e20:	bl	462f00 <_obstack_memory_used@@Base+0x6b10>
  463e24:	mov	x0, x19
  463e28:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463e2c:	nop
  463e30:	stp	x29, x30, [sp, #-64]!
  463e34:	mov	x29, sp
  463e38:	stp	x19, x20, [sp, #16]
  463e3c:	add	x20, sp, #0x30
  463e40:	mov	x19, x0
  463e44:	mov	x0, x20
  463e48:	stp	x21, x22, [sp, #32]
  463e4c:	mov	x22, x1
  463e50:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463e54:	add	x1, x1, #0x580
  463e58:	bl	463550 <_obstack_memory_used@@Base+0x7160>
  463e5c:	mov	x0, x19
  463e60:	mov	x1, x20
  463e64:	mov	x2, #0x10                  	// #16
  463e68:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463e6c:	mov	x0, x19
  463e70:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463e74:	mov	x21, x0
  463e78:	mov	x0, x22
  463e7c:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  463e80:	mov	x1, x0
  463e84:	mov	x2, x19
  463e88:	mov	x0, x21
  463e8c:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463e90:	mov	x0, x20
  463e94:	bl	462f00 <_obstack_memory_used@@Base+0x6b10>
  463e98:	ldp	x19, x20, [sp, #16]
  463e9c:	ldp	x21, x22, [sp, #32]
  463ea0:	ldp	x29, x30, [sp], #64
  463ea4:	ret
  463ea8:	mov	x19, x0
  463eac:	mov	x0, x20
  463eb0:	bl	462f00 <_obstack_memory_used@@Base+0x6b10>
  463eb4:	mov	x0, x19
  463eb8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463ebc:	nop
  463ec0:	stp	x29, x30, [sp, #-16]!
  463ec4:	mov	x29, sp
  463ec8:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463ecc:	ldp	x29, x30, [sp], #16
  463ed0:	b	463970 <_obstack_memory_used@@Base+0x7580>
  463ed4:	nop
  463ed8:	stp	x29, x30, [sp, #-32]!
  463edc:	mov	x29, sp
  463ee0:	str	x19, [sp, #16]
  463ee4:	mov	x19, x0
  463ee8:	bl	463ec0 <_obstack_memory_used@@Base+0x7ad0>
  463eec:	mov	x0, x19
  463ef0:	ldr	x19, [sp, #16]
  463ef4:	ldp	x29, x30, [sp], #32
  463ef8:	b	403520 <_ZGTtdlPv@plt>
  463efc:	nop
  463f00:	stp	x29, x30, [sp, #-64]!
  463f04:	mov	x29, sp
  463f08:	stp	x19, x20, [sp, #16]
  463f0c:	add	x20, sp, #0x30
  463f10:	mov	x19, x0
  463f14:	mov	x0, x20
  463f18:	str	x21, [sp, #32]
  463f1c:	mov	x21, x1
  463f20:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463f24:	add	x1, x1, #0x580
  463f28:	bl	463580 <_obstack_memory_used@@Base+0x7190>
  463f2c:	mov	x0, x19
  463f30:	mov	x1, x20
  463f34:	mov	x2, #0x10                  	// #16
  463f38:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463f3c:	mov	x0, x19
  463f40:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463f44:	mov	x2, x19
  463f48:	mov	x1, x21
  463f4c:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463f50:	mov	x0, x20
  463f54:	bl	462f40 <_obstack_memory_used@@Base+0x6b50>
  463f58:	ldp	x19, x20, [sp, #16]
  463f5c:	ldr	x21, [sp, #32]
  463f60:	ldp	x29, x30, [sp], #64
  463f64:	ret
  463f68:	mov	x19, x0
  463f6c:	mov	x0, x20
  463f70:	bl	462f40 <_obstack_memory_used@@Base+0x6b50>
  463f74:	mov	x0, x19
  463f78:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  463f7c:	nop
  463f80:	stp	x29, x30, [sp, #-64]!
  463f84:	mov	x29, sp
  463f88:	stp	x19, x20, [sp, #16]
  463f8c:	add	x20, sp, #0x30
  463f90:	mov	x19, x0
  463f94:	mov	x0, x20
  463f98:	stp	x21, x22, [sp, #32]
  463f9c:	mov	x22, x1
  463fa0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  463fa4:	add	x1, x1, #0x580
  463fa8:	bl	463580 <_obstack_memory_used@@Base+0x7190>
  463fac:	mov	x0, x19
  463fb0:	mov	x1, x20
  463fb4:	mov	x2, #0x10                  	// #16
  463fb8:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  463fbc:	mov	x0, x19
  463fc0:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  463fc4:	mov	x21, x0
  463fc8:	mov	x0, x22
  463fcc:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  463fd0:	mov	x1, x0
  463fd4:	mov	x2, x19
  463fd8:	mov	x0, x21
  463fdc:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  463fe0:	mov	x0, x20
  463fe4:	bl	462f40 <_obstack_memory_used@@Base+0x6b50>
  463fe8:	ldp	x19, x20, [sp, #16]
  463fec:	ldp	x21, x22, [sp, #32]
  463ff0:	ldp	x29, x30, [sp], #64
  463ff4:	ret
  463ff8:	mov	x19, x0
  463ffc:	mov	x0, x20
  464000:	bl	462f40 <_obstack_memory_used@@Base+0x6b50>
  464004:	mov	x0, x19
  464008:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  46400c:	nop
  464010:	stp	x29, x30, [sp, #-16]!
  464014:	mov	x29, sp
  464018:	bl	463998 <_obstack_memory_used@@Base+0x75a8>
  46401c:	ldp	x29, x30, [sp], #16
  464020:	b	463970 <_obstack_memory_used@@Base+0x7580>
  464024:	nop
  464028:	stp	x29, x30, [sp, #-32]!
  46402c:	mov	x29, sp
  464030:	str	x19, [sp, #16]
  464034:	mov	x19, x0
  464038:	bl	464010 <_obstack_memory_used@@Base+0x7c20>
  46403c:	mov	x0, x19
  464040:	ldr	x19, [sp, #16]
  464044:	ldp	x29, x30, [sp], #32
  464048:	b	403520 <_ZGTtdlPv@plt>
  46404c:	nop
  464050:	stp	x29, x30, [sp, #-64]!
  464054:	mov	x29, sp
  464058:	stp	x19, x20, [sp, #16]
  46405c:	add	x20, sp, #0x30
  464060:	mov	x19, x0
  464064:	mov	x0, x20
  464068:	str	x21, [sp, #32]
  46406c:	mov	x21, x1
  464070:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  464074:	add	x1, x1, #0x580
  464078:	bl	4635b0 <_obstack_memory_used@@Base+0x71c0>
  46407c:	mov	x0, x19
  464080:	mov	x1, x20
  464084:	mov	x2, #0x10                  	// #16
  464088:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  46408c:	mov	x0, x19
  464090:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  464094:	mov	x2, x19
  464098:	mov	x1, x21
  46409c:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  4640a0:	mov	x0, x20
  4640a4:	bl	462f80 <_obstack_memory_used@@Base+0x6b90>
  4640a8:	ldp	x19, x20, [sp, #16]
  4640ac:	ldr	x21, [sp, #32]
  4640b0:	ldp	x29, x30, [sp], #64
  4640b4:	ret
  4640b8:	mov	x19, x0
  4640bc:	mov	x0, x20
  4640c0:	bl	462f80 <_obstack_memory_used@@Base+0x6b90>
  4640c4:	mov	x0, x19
  4640c8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4640cc:	nop
  4640d0:	stp	x29, x30, [sp, #-64]!
  4640d4:	mov	x29, sp
  4640d8:	stp	x19, x20, [sp, #16]
  4640dc:	add	x20, sp, #0x30
  4640e0:	mov	x19, x0
  4640e4:	mov	x0, x20
  4640e8:	stp	x21, x22, [sp, #32]
  4640ec:	mov	x22, x1
  4640f0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4640f4:	add	x1, x1, #0x580
  4640f8:	bl	4635b0 <_obstack_memory_used@@Base+0x71c0>
  4640fc:	mov	x0, x19
  464100:	mov	x1, x20
  464104:	mov	x2, #0x10                  	// #16
  464108:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  46410c:	mov	x0, x19
  464110:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  464114:	mov	x21, x0
  464118:	mov	x0, x22
  46411c:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  464120:	mov	x1, x0
  464124:	mov	x2, x19
  464128:	mov	x0, x21
  46412c:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  464130:	mov	x0, x20
  464134:	bl	462f80 <_obstack_memory_used@@Base+0x6b90>
  464138:	ldp	x19, x20, [sp, #16]
  46413c:	ldp	x21, x22, [sp, #32]
  464140:	ldp	x29, x30, [sp], #64
  464144:	ret
  464148:	mov	x19, x0
  46414c:	mov	x0, x20
  464150:	bl	462f80 <_obstack_memory_used@@Base+0x6b90>
  464154:	mov	x0, x19
  464158:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  46415c:	nop
  464160:	stp	x29, x30, [sp, #-16]!
  464164:	mov	x29, sp
  464168:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  46416c:	ldp	x29, x30, [sp], #16
  464170:	b	463970 <_obstack_memory_used@@Base+0x7580>
  464174:	nop
  464178:	stp	x29, x30, [sp, #-32]!
  46417c:	mov	x29, sp
  464180:	str	x19, [sp, #16]
  464184:	mov	x19, x0
  464188:	bl	464160 <_obstack_memory_used@@Base+0x7d70>
  46418c:	mov	x0, x19
  464190:	ldr	x19, [sp, #16]
  464194:	ldp	x29, x30, [sp], #32
  464198:	b	403520 <_ZGTtdlPv@plt>
  46419c:	nop
  4641a0:	stp	x29, x30, [sp, #-16]!
  4641a4:	mov	x29, sp
  4641a8:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  4641ac:	ldp	x29, x30, [sp], #16
  4641b0:	b	463960 <_obstack_memory_used@@Base+0x7570>
  4641b4:	nop
  4641b8:	stp	x29, x30, [sp, #-64]!
  4641bc:	mov	x29, sp
  4641c0:	stp	x19, x20, [sp, #16]
  4641c4:	add	x20, sp, #0x30
  4641c8:	mov	x19, x0
  4641cc:	mov	x0, x20
  4641d0:	str	x21, [sp, #32]
  4641d4:	mov	x21, x1
  4641d8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4641dc:	add	x1, x1, #0x580
  4641e0:	bl	463600 <_obstack_memory_used@@Base+0x7210>
  4641e4:	mov	x0, x19
  4641e8:	mov	x1, x20
  4641ec:	mov	x2, #0x10                  	// #16
  4641f0:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  4641f4:	mov	x0, x19
  4641f8:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  4641fc:	mov	x2, x19
  464200:	mov	x1, x21
  464204:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  464208:	mov	x0, x20
  46420c:	bl	463038 <_obstack_memory_used@@Base+0x6c48>
  464210:	ldp	x19, x20, [sp, #16]
  464214:	ldr	x21, [sp, #32]
  464218:	ldp	x29, x30, [sp], #64
  46421c:	ret
  464220:	mov	x19, x0
  464224:	mov	x0, x20
  464228:	bl	463038 <_obstack_memory_used@@Base+0x6c48>
  46422c:	mov	x0, x19
  464230:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  464234:	nop
  464238:	stp	x29, x30, [sp, #-64]!
  46423c:	mov	x29, sp
  464240:	stp	x19, x20, [sp, #16]
  464244:	add	x20, sp, #0x30
  464248:	mov	x19, x0
  46424c:	mov	x0, x20
  464250:	stp	x21, x22, [sp, #32]
  464254:	mov	x22, x1
  464258:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46425c:	add	x1, x1, #0x580
  464260:	bl	463600 <_obstack_memory_used@@Base+0x7210>
  464264:	mov	x0, x19
  464268:	mov	x1, x20
  46426c:	mov	x2, #0x10                  	// #16
  464270:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  464274:	mov	x0, x19
  464278:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  46427c:	mov	x21, x0
  464280:	mov	x0, x22
  464284:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  464288:	mov	x1, x0
  46428c:	mov	x2, x19
  464290:	mov	x0, x21
  464294:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  464298:	mov	x0, x20
  46429c:	bl	463038 <_obstack_memory_used@@Base+0x6c48>
  4642a0:	ldp	x19, x20, [sp, #16]
  4642a4:	ldp	x21, x22, [sp, #32]
  4642a8:	ldp	x29, x30, [sp], #64
  4642ac:	ret
  4642b0:	mov	x19, x0
  4642b4:	mov	x0, x20
  4642b8:	bl	463038 <_obstack_memory_used@@Base+0x6c48>
  4642bc:	mov	x0, x19
  4642c0:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4642c4:	nop
  4642c8:	stp	x29, x30, [sp, #-16]!
  4642cc:	mov	x29, sp
  4642d0:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  4642d4:	ldp	x29, x30, [sp], #16
  4642d8:	b	463970 <_obstack_memory_used@@Base+0x7580>
  4642dc:	nop
  4642e0:	stp	x29, x30, [sp, #-32]!
  4642e4:	mov	x29, sp
  4642e8:	str	x19, [sp, #16]
  4642ec:	mov	x19, x0
  4642f0:	bl	4642c8 <_obstack_memory_used@@Base+0x7ed8>
  4642f4:	mov	x0, x19
  4642f8:	ldr	x19, [sp, #16]
  4642fc:	ldp	x29, x30, [sp], #32
  464300:	b	403520 <_ZGTtdlPv@plt>
  464304:	nop
  464308:	stp	x29, x30, [sp, #-64]!
  46430c:	mov	x29, sp
  464310:	stp	x19, x20, [sp, #16]
  464314:	add	x20, sp, #0x30
  464318:	mov	x19, x0
  46431c:	mov	x0, x20
  464320:	str	x21, [sp, #32]
  464324:	mov	x21, x1
  464328:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46432c:	add	x1, x1, #0x580
  464330:	bl	463630 <_obstack_memory_used@@Base+0x7240>
  464334:	mov	x0, x19
  464338:	mov	x1, x20
  46433c:	mov	x2, #0x10                  	// #16
  464340:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  464344:	mov	x0, x19
  464348:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  46434c:	mov	x2, x19
  464350:	mov	x1, x21
  464354:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  464358:	mov	x0, x20
  46435c:	bl	463078 <_obstack_memory_used@@Base+0x6c88>
  464360:	ldp	x19, x20, [sp, #16]
  464364:	ldr	x21, [sp, #32]
  464368:	ldp	x29, x30, [sp], #64
  46436c:	ret
  464370:	mov	x19, x0
  464374:	mov	x0, x20
  464378:	bl	463078 <_obstack_memory_used@@Base+0x6c88>
  46437c:	mov	x0, x19
  464380:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  464384:	nop
  464388:	stp	x29, x30, [sp, #-64]!
  46438c:	mov	x29, sp
  464390:	stp	x19, x20, [sp, #16]
  464394:	add	x20, sp, #0x30
  464398:	mov	x19, x0
  46439c:	mov	x0, x20
  4643a0:	stp	x21, x22, [sp, #32]
  4643a4:	mov	x22, x1
  4643a8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4643ac:	add	x1, x1, #0x580
  4643b0:	bl	463630 <_obstack_memory_used@@Base+0x7240>
  4643b4:	mov	x0, x19
  4643b8:	mov	x1, x20
  4643bc:	mov	x2, #0x10                  	// #16
  4643c0:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  4643c4:	mov	x0, x19
  4643c8:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  4643cc:	mov	x21, x0
  4643d0:	mov	x0, x22
  4643d4:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  4643d8:	mov	x1, x0
  4643dc:	mov	x2, x19
  4643e0:	mov	x0, x21
  4643e4:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  4643e8:	mov	x0, x20
  4643ec:	bl	463078 <_obstack_memory_used@@Base+0x6c88>
  4643f0:	ldp	x19, x20, [sp, #16]
  4643f4:	ldp	x21, x22, [sp, #32]
  4643f8:	ldp	x29, x30, [sp], #64
  4643fc:	ret
  464400:	mov	x19, x0
  464404:	mov	x0, x20
  464408:	bl	463078 <_obstack_memory_used@@Base+0x6c88>
  46440c:	mov	x0, x19
  464410:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  464414:	nop
  464418:	stp	x29, x30, [sp, #-16]!
  46441c:	mov	x29, sp
  464420:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  464424:	ldp	x29, x30, [sp], #16
  464428:	b	463970 <_obstack_memory_used@@Base+0x7580>
  46442c:	nop
  464430:	stp	x29, x30, [sp, #-32]!
  464434:	mov	x29, sp
  464438:	str	x19, [sp, #16]
  46443c:	mov	x19, x0
  464440:	bl	464418 <_obstack_memory_used@@Base+0x8028>
  464444:	mov	x0, x19
  464448:	ldr	x19, [sp, #16]
  46444c:	ldp	x29, x30, [sp], #32
  464450:	b	403520 <_ZGTtdlPv@plt>
  464454:	nop
  464458:	stp	x29, x30, [sp, #-64]!
  46445c:	mov	x29, sp
  464460:	stp	x19, x20, [sp, #16]
  464464:	add	x20, sp, #0x30
  464468:	mov	x19, x0
  46446c:	mov	x0, x20
  464470:	str	x21, [sp, #32]
  464474:	mov	x21, x1
  464478:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46447c:	add	x1, x1, #0x580
  464480:	bl	463660 <_obstack_memory_used@@Base+0x7270>
  464484:	mov	x0, x19
  464488:	mov	x1, x20
  46448c:	mov	x2, #0x10                  	// #16
  464490:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  464494:	mov	x0, x19
  464498:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  46449c:	mov	x2, x19
  4644a0:	mov	x1, x21
  4644a4:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  4644a8:	mov	x0, x20
  4644ac:	bl	4630b8 <_obstack_memory_used@@Base+0x6cc8>
  4644b0:	ldp	x19, x20, [sp, #16]
  4644b4:	ldr	x21, [sp, #32]
  4644b8:	ldp	x29, x30, [sp], #64
  4644bc:	ret
  4644c0:	mov	x19, x0
  4644c4:	mov	x0, x20
  4644c8:	bl	4630b8 <_obstack_memory_used@@Base+0x6cc8>
  4644cc:	mov	x0, x19
  4644d0:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4644d4:	nop
  4644d8:	stp	x29, x30, [sp, #-64]!
  4644dc:	mov	x29, sp
  4644e0:	stp	x19, x20, [sp, #16]
  4644e4:	add	x20, sp, #0x30
  4644e8:	mov	x19, x0
  4644ec:	mov	x0, x20
  4644f0:	stp	x21, x22, [sp, #32]
  4644f4:	mov	x22, x1
  4644f8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4644fc:	add	x1, x1, #0x580
  464500:	bl	463660 <_obstack_memory_used@@Base+0x7270>
  464504:	mov	x0, x19
  464508:	mov	x1, x20
  46450c:	mov	x2, #0x10                  	// #16
  464510:	bl	4033f0 <_ITM_memcpyRnWt@plt>
  464514:	mov	x0, x19
  464518:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  46451c:	mov	x21, x0
  464520:	mov	x0, x22
  464524:	bl	463968 <_obstack_memory_used@@Base+0x7578>
  464528:	mov	x1, x0
  46452c:	mov	x2, x19
  464530:	mov	x0, x21
  464534:	bl	4638d0 <_obstack_memory_used@@Base+0x74e0>
  464538:	mov	x0, x20
  46453c:	bl	4630b8 <_obstack_memory_used@@Base+0x6cc8>
  464540:	ldp	x19, x20, [sp, #16]
  464544:	ldp	x21, x22, [sp, #32]
  464548:	ldp	x29, x30, [sp], #64
  46454c:	ret
  464550:	mov	x19, x0
  464554:	mov	x0, x20
  464558:	bl	4630b8 <_obstack_memory_used@@Base+0x6cc8>
  46455c:	mov	x0, x19
  464560:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  464564:	nop
  464568:	stp	x29, x30, [sp, #-16]!
  46456c:	mov	x29, sp
  464570:	bl	4639a0 <_obstack_memory_used@@Base+0x75b0>
  464574:	ldp	x29, x30, [sp], #16
  464578:	b	463970 <_obstack_memory_used@@Base+0x7580>
  46457c:	nop
  464580:	stp	x29, x30, [sp, #-32]!
  464584:	mov	x29, sp
  464588:	str	x19, [sp, #16]
  46458c:	mov	x19, x0
  464590:	bl	464568 <_obstack_memory_used@@Base+0x8178>
  464594:	mov	x0, x19
  464598:	ldr	x19, [sp, #16]
  46459c:	ldp	x29, x30, [sp], #32
  4645a0:	b	403520 <_ZGTtdlPv@plt>
  4645a4:	nop
  4645a8:	ldr	x0, [x0]
  4645ac:	ret
  4645b0:	mov	x2, x0
  4645b4:	mov	x0, x1
  4645b8:	str	x1, [x2]
  4645bc:	ret
  4645c0:	ldr	x0, [x0]
  4645c4:	sub	x0, x0, #0x18
  4645c8:	ret
  4645cc:	nop
  4645d0:	ldr	x0, [x0]
  4645d4:	ret
  4645d8:	ldr	x0, [x0]
  4645dc:	ldur	x1, [x0, #-24]
  4645e0:	add	x0, x0, x1
  4645e4:	ret
  4645e8:	ldr	x0, [x0]
  4645ec:	ldur	x3, [x0, #-24]
  4645f0:	cmp	x3, x1
  4645f4:	b.cc	464600 <_obstack_memory_used@@Base+0x8210>  // b.lo, b.ul, b.last
  4645f8:	mov	x0, x1
  4645fc:	ret
  464600:	mov	x4, x2
  464604:	stp	x29, x30, [sp, #-16]!
  464608:	mov	x2, x1
  46460c:	mov	x29, sp
  464610:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  464614:	mov	x1, x4
  464618:	add	x0, x0, #0x5b0
  46461c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  464620:	ldr	x0, [x0]
  464624:	mov	x4, #0xfffffffffffffff9    	// #-7
  464628:	movk	x4, #0x3fff, lsl #48
  46462c:	add	x1, x1, x4
  464630:	ldur	x0, [x0, #-24]
  464634:	sub	x1, x1, x0
  464638:	cmp	x1, x2
  46463c:	b.cc	464644 <_obstack_memory_used@@Base+0x8254>  // b.lo, b.ul, b.last
  464640:	ret
  464644:	stp	x29, x30, [sp, #-16]!
  464648:	mov	x0, x3
  46464c:	mov	x29, sp
  464650:	bl	4037f8 <ferror@plt+0x228>
  464654:	nop
  464658:	ldr	x0, [x0]
  46465c:	ldur	x0, [x0, #-24]
  464660:	sub	x0, x0, x1
  464664:	cmp	x0, x2
  464668:	csel	x0, x0, x2, ls  // ls = plast
  46466c:	ret
  464670:	ldr	x0, [x0]
  464674:	cmp	x0, x1
  464678:	b.hi	464690 <_obstack_memory_used@@Base+0x82a0>  // b.pmore
  46467c:	ldur	x2, [x0, #-24]
  464680:	add	x0, x0, x2
  464684:	cmp	x0, x1
  464688:	cset	w0, cc  // cc = lo, ul, last
  46468c:	ret
  464690:	mov	w0, #0x1                   	// #1
  464694:	ret
  464698:	cmp	x2, #0x1
  46469c:	mov	x4, x0
  4646a0:	b.eq	4646b0 <_obstack_memory_used@@Base+0x82c0>  // b.none
  4646a4:	cbnz	x2, 4646ac <_obstack_memory_used@@Base+0x82bc>
  4646a8:	ret
  4646ac:	b	402cd0 <memcpy@plt>
  4646b0:	ldrb	w0, [x1]
  4646b4:	strb	w0, [x4]
  4646b8:	ret
  4646bc:	nop
  4646c0:	cmp	x2, #0x1
  4646c4:	mov	x4, x0
  4646c8:	b.eq	4646d8 <_obstack_memory_used@@Base+0x82e8>  // b.none
  4646cc:	cbnz	x2, 4646d4 <_obstack_memory_used@@Base+0x82e4>
  4646d0:	ret
  4646d4:	b	402ce0 <memmove@plt>
  4646d8:	ldrb	w0, [x1]
  4646dc:	strb	w0, [x4]
  4646e0:	ret
  4646e4:	nop
  4646e8:	mov	x3, x1
  4646ec:	and	w1, w2, #0xff
  4646f0:	cmp	x3, #0x1
  4646f4:	b.eq	464708 <_obstack_memory_used@@Base+0x8318>  // b.none
  4646f8:	cbnz	x3, 464700 <_obstack_memory_used@@Base+0x8310>
  4646fc:	ret
  464700:	mov	x2, x3
  464704:	b	403000 <memset@plt>
  464708:	strb	w1, [x0]
  46470c:	ret
  464710:	sub	x2, x2, x1
  464714:	mov	x4, x0
  464718:	cmp	x2, #0x1
  46471c:	b.eq	46472c <_obstack_memory_used@@Base+0x833c>  // b.none
  464720:	cbnz	x2, 464728 <_obstack_memory_used@@Base+0x8338>
  464724:	ret
  464728:	b	402cd0 <memcpy@plt>
  46472c:	ldrb	w0, [x1]
  464730:	strb	w0, [x4]
  464734:	ret
  464738:	sub	x2, x2, x1
  46473c:	mov	x4, x0
  464740:	cmp	x2, #0x1
  464744:	b.eq	464754 <_obstack_memory_used@@Base+0x8364>  // b.none
  464748:	cbnz	x2, 464750 <_obstack_memory_used@@Base+0x8360>
  46474c:	ret
  464750:	b	402cd0 <memcpy@plt>
  464754:	ldrb	w0, [x1]
  464758:	strb	w0, [x4]
  46475c:	ret
  464760:	sub	x2, x2, x1
  464764:	mov	x4, x0
  464768:	cmp	x2, #0x1
  46476c:	b.eq	46477c <_obstack_memory_used@@Base+0x838c>  // b.none
  464770:	cbnz	x2, 464778 <_obstack_memory_used@@Base+0x8388>
  464774:	ret
  464778:	b	402cd0 <memcpy@plt>
  46477c:	ldrb	w0, [x1]
  464780:	strb	w0, [x4]
  464784:	ret
  464788:	sub	x2, x2, x1
  46478c:	mov	x4, x0
  464790:	cmp	x2, #0x1
  464794:	b.eq	4647a4 <_obstack_memory_used@@Base+0x83b4>  // b.none
  464798:	cbnz	x2, 4647a0 <_obstack_memory_used@@Base+0x83b0>
  46479c:	ret
  4647a0:	b	402cd0 <memcpy@plt>
  4647a4:	ldrb	w0, [x1]
  4647a8:	strb	w0, [x4]
  4647ac:	ret
  4647b0:	sub	x0, x0, x1
  4647b4:	mov	x2, #0x7fffffff            	// #2147483647
  4647b8:	cmp	x0, x2
  4647bc:	b.gt	4647d0 <_obstack_memory_used@@Base+0x83e0>
  4647c0:	mov	x2, #0xffffffff80000000    	// #-2147483648
  4647c4:	cmp	x0, x2
  4647c8:	csel	w0, w2, w0, lt  // lt = tstop
  4647cc:	ret
  4647d0:	mov	w0, w2
  4647d4:	ret
  4647d8:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4647dc:	ldr	x0, [x0, #3984]
  4647e0:	ret
  4647e4:	nop
  4647e8:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4647ec:	ldr	x1, [x1, #3984]
  4647f0:	add	x1, x1, #0x18
  4647f4:	str	x1, [x0]
  4647f8:	ret
  4647fc:	nop
  464800:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  464804:	ldr	x3, [x1]
  464808:	str	x3, [x0]
  46480c:	ldr	x2, [x2, #3984]
  464810:	add	x2, x2, #0x18
  464814:	str	x2, [x1]
  464818:	ret
  46481c:	nop
  464820:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  464824:	ldr	x3, [x1]
  464828:	str	x3, [x0]
  46482c:	ldr	x2, [x2, #3984]
  464830:	add	x2, x2, #0x18
  464834:	str	x2, [x1]
  464838:	ret
  46483c:	nop
  464840:	ldr	x0, [x0]
  464844:	ret
  464848:	ldr	x0, [x0]
  46484c:	ldur	x1, [x0, #-24]
  464850:	add	x0, x0, x1
  464854:	ret
  464858:	mov	x1, x0
  46485c:	mov	x0, x8
  464860:	ldr	x1, [x1]
  464864:	ldur	x2, [x1, #-24]
  464868:	add	x1, x1, x2
  46486c:	str	x1, [x8]
  464870:	ret
  464874:	nop
  464878:	mov	x1, x0
  46487c:	mov	x0, x8
  464880:	ldr	x1, [x1]
  464884:	str	x1, [x8]
  464888:	ret
  46488c:	nop
  464890:	ldr	x0, [x0]
  464894:	ret
  464898:	ldr	x0, [x0]
  46489c:	ldur	x1, [x0, #-24]
  4648a0:	add	x0, x0, x1
  4648a4:	ret
  4648a8:	mov	x1, x0
  4648ac:	mov	x0, x8
  4648b0:	ldr	x1, [x1]
  4648b4:	ldur	x2, [x1, #-24]
  4648b8:	add	x1, x1, x2
  4648bc:	str	x1, [x8]
  4648c0:	ret
  4648c4:	nop
  4648c8:	mov	x1, x0
  4648cc:	mov	x0, x8
  4648d0:	ldr	x1, [x1]
  4648d4:	str	x1, [x8]
  4648d8:	ret
  4648dc:	nop
  4648e0:	ldr	x0, [x0]
  4648e4:	ldur	x0, [x0, #-24]
  4648e8:	ret
  4648ec:	nop
  4648f0:	ldr	x0, [x0]
  4648f4:	ldur	x0, [x0, #-24]
  4648f8:	ret
  4648fc:	nop
  464900:	mov	x0, #0xfffffffffffffff9    	// #-7
  464904:	movk	x0, #0x3fff, lsl #48
  464908:	ret
  46490c:	nop
  464910:	ldr	x0, [x0]
  464914:	ldur	x0, [x0, #-16]
  464918:	ret
  46491c:	nop
  464920:	ldr	x0, [x0]
  464924:	ldur	x0, [x0, #-24]
  464928:	cmp	x0, #0x0
  46492c:	cset	w0, eq  // eq = none
  464930:	ret
  464934:	nop
  464938:	ldr	x0, [x0]
  46493c:	add	x0, x0, x1
  464940:	ret
  464944:	nop
  464948:	ldr	x0, [x0]
  46494c:	ldur	x2, [x0, #-24]
  464950:	cmp	x1, x2
  464954:	b.cs	464960 <_obstack_memory_used@@Base+0x8570>  // b.hs, b.nlast
  464958:	add	x0, x0, x1
  46495c:	ret
  464960:	stp	x29, x30, [sp, #-16]!
  464964:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  464968:	add	x0, x0, #0x5e8
  46496c:	mov	x29, sp
  464970:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  464974:	nop
  464978:	ldr	x0, [x0]
  46497c:	ret
  464980:	ldr	x1, [x0]
  464984:	ldur	x0, [x1, #-24]
  464988:	sub	x0, x0, #0x1
  46498c:	add	x0, x1, x0
  464990:	ret
  464994:	nop
  464998:	stp	x29, x30, [sp, #-32]!
  46499c:	mov	x5, x3
  4649a0:	mov	x29, sp
  4649a4:	ldr	x0, [x0]
  4649a8:	ldur	x4, [x0, #-24]
  4649ac:	str	x19, [sp, #16]
  4649b0:	cmp	x3, x4
  4649b4:	b.hi	464a0c <_obstack_memory_used@@Base+0x861c>  // b.pmore
  4649b8:	sub	x4, x4, x3
  4649bc:	cmp	x4, x2
  4649c0:	csel	x19, x4, x2, ls  // ls = plast
  4649c4:	cbz	x19, 4649e4 <_obstack_memory_used@@Base+0x85f4>
  4649c8:	mov	x3, x1
  4649cc:	cmp	x19, #0x1
  4649d0:	add	x1, x0, x5
  4649d4:	b.eq	4649f4 <_obstack_memory_used@@Base+0x8604>  // b.none
  4649d8:	mov	x0, x3
  4649dc:	mov	x2, x19
  4649e0:	bl	402cd0 <memcpy@plt>
  4649e4:	mov	x0, x19
  4649e8:	ldr	x19, [sp, #16]
  4649ec:	ldp	x29, x30, [sp], #32
  4649f0:	ret
  4649f4:	ldrb	w0, [x0, x5]
  4649f8:	strb	w0, [x3]
  4649fc:	mov	x0, x19
  464a00:	ldr	x19, [sp, #16]
  464a04:	ldp	x29, x30, [sp], #32
  464a08:	ret
  464a0c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  464a10:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  464a14:	mov	x3, x4
  464a18:	mov	x2, x5
  464a1c:	add	x1, x1, #0x6e8
  464a20:	add	x0, x0, #0x5b0
  464a24:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  464a28:	ldr	x2, [x0]
  464a2c:	sub	x3, x2, #0x8
  464a30:	ldr	w3, [x3]
  464a34:	tbz	w3, #31, 464a3c <_obstack_memory_used@@Base+0x864c>
  464a38:	stur	wzr, [x2, #-8]
  464a3c:	ldr	x3, [x1]
  464a40:	sub	x4, x3, #0x8
  464a44:	ldr	w4, [x4]
  464a48:	tbz	w4, #31, 464a50 <_obstack_memory_used@@Base+0x8660>
  464a4c:	stur	wzr, [x3, #-8]
  464a50:	str	x3, [x0]
  464a54:	str	x2, [x1]
  464a58:	ret
  464a5c:	nop
  464a60:	stp	x29, x30, [sp, #-32]!
  464a64:	mov	x29, sp
  464a68:	str	x19, [sp, #16]
  464a6c:	mov	x19, x0
  464a70:	bl	464a28 <_obstack_memory_used@@Base+0x8638>
  464a74:	mov	x0, x19
  464a78:	ldr	x19, [sp, #16]
  464a7c:	ldp	x29, x30, [sp], #32
  464a80:	ret
  464a84:	nop
  464a88:	stp	x29, x30, [sp, #-32]!
  464a8c:	mov	x29, sp
  464a90:	str	x19, [sp, #16]
  464a94:	mov	x19, x0
  464a98:	bl	464a28 <_obstack_memory_used@@Base+0x8638>
  464a9c:	mov	x0, x19
  464aa0:	ldr	x19, [sp, #16]
  464aa4:	ldp	x29, x30, [sp], #32
  464aa8:	ret
  464aac:	nop
  464ab0:	ldr	x0, [x0]
  464ab4:	ret
  464ab8:	ldr	x0, [x0]
  464abc:	ret
  464ac0:	mov	x0, x8
  464ac4:	ret
  464ac8:	stp	x29, x30, [sp, #-80]!
  464acc:	mov	x29, sp
  464ad0:	stp	x23, x24, [sp, #48]
  464ad4:	ldr	x23, [x0]
  464ad8:	stp	x21, x22, [sp, #32]
  464adc:	stp	x19, x20, [sp, #16]
  464ae0:	ldur	x21, [x23, #-24]
  464ae4:	cmp	x21, x2
  464ae8:	csinv	x19, x2, xzr, cs  // cs = hs, nlast
  464aec:	cbz	x3, 464b70 <_obstack_memory_used@@Base+0x8780>
  464af0:	mov	x19, #0xffffffffffffffff    	// #-1
  464af4:	b.ls	464b70 <_obstack_memory_used@@Base+0x8780>  // b.plast
  464af8:	str	x25, [sp, #64]
  464afc:	sub	x4, x21, x2
  464b00:	add	x0, x23, x2
  464b04:	add	x21, x23, x21
  464b08:	mov	x25, x3
  464b0c:	cmp	x3, x4
  464b10:	b.hi	464b88 <_obstack_memory_used@@Base+0x8798>  // b.pmore
  464b14:	mov	x20, #0x1                   	// #1
  464b18:	sub	x20, x20, x3
  464b1c:	adds	x2, x20, x4
  464b20:	b.eq	464b88 <_obstack_memory_used@@Base+0x8798>  // b.none
  464b24:	ldrb	w24, [x1]
  464b28:	mov	x22, x1
  464b2c:	mov	w1, w24
  464b30:	bl	4033d0 <memchr@plt>
  464b34:	mov	x2, x25
  464b38:	mov	x19, x0
  464b3c:	cbz	x0, 464b68 <_obstack_memory_used@@Base+0x8778>
  464b40:	mov	x1, x22
  464b44:	bl	4031e0 <memcmp@plt>
  464b48:	mov	w1, w0
  464b4c:	add	x0, x19, #0x1
  464b50:	sub	x2, x21, x0
  464b54:	cbz	w1, 464ba4 <_obstack_memory_used@@Base+0x87b4>
  464b58:	cmp	x25, x2
  464b5c:	b.hi	464b68 <_obstack_memory_used@@Base+0x8778>  // b.pmore
  464b60:	adds	x2, x20, x2
  464b64:	b.ne	464b2c <_obstack_memory_used@@Base+0x873c>  // b.any
  464b68:	ldr	x25, [sp, #64]
  464b6c:	mov	x19, #0xffffffffffffffff    	// #-1
  464b70:	mov	x0, x19
  464b74:	ldp	x19, x20, [sp, #16]
  464b78:	ldp	x21, x22, [sp, #32]
  464b7c:	ldp	x23, x24, [sp, #48]
  464b80:	ldp	x29, x30, [sp], #80
  464b84:	ret
  464b88:	mov	x0, x19
  464b8c:	ldp	x19, x20, [sp, #16]
  464b90:	ldp	x21, x22, [sp, #32]
  464b94:	ldp	x23, x24, [sp, #48]
  464b98:	ldr	x25, [sp, #64]
  464b9c:	ldp	x29, x30, [sp], #80
  464ba0:	ret
  464ba4:	sub	x19, x19, x23
  464ba8:	ldr	x25, [sp, #64]
  464bac:	b	464b70 <_obstack_memory_used@@Base+0x8780>
  464bb0:	ldr	x1, [x1]
  464bb4:	ldur	x3, [x1, #-24]
  464bb8:	b	464ac8 <_obstack_memory_used@@Base+0x86d8>
  464bbc:	nop
  464bc0:	stp	x29, x30, [sp, #-48]!
  464bc4:	mov	x29, sp
  464bc8:	stp	x19, x20, [sp, #16]
  464bcc:	mov	x19, x1
  464bd0:	mov	x20, x0
  464bd4:	mov	x0, x1
  464bd8:	str	x21, [sp, #32]
  464bdc:	mov	x21, x2
  464be0:	bl	402d50 <strlen@plt>
  464be4:	mov	x2, x21
  464be8:	mov	x3, x0
  464bec:	mov	x1, x19
  464bf0:	mov	x0, x20
  464bf4:	ldp	x19, x20, [sp, #16]
  464bf8:	ldr	x21, [sp, #32]
  464bfc:	ldp	x29, x30, [sp], #48
  464c00:	b	464ac8 <_obstack_memory_used@@Base+0x86d8>
  464c04:	nop
  464c08:	stp	x29, x30, [sp, #-32]!
  464c0c:	mov	x3, x2
  464c10:	mov	x29, sp
  464c14:	str	x19, [sp, #16]
  464c18:	ldr	x19, [x0]
  464c1c:	mov	x0, #0xffffffffffffffff    	// #-1
  464c20:	ldur	x2, [x19, #-24]
  464c24:	cmp	x3, x2
  464c28:	b.cs	464c48 <_obstack_memory_used@@Base+0x8858>  // b.hs, b.nlast
  464c2c:	add	x0, x19, x3
  464c30:	and	w1, w1, #0xff
  464c34:	sub	x2, x2, x3
  464c38:	bl	4033d0 <memchr@plt>
  464c3c:	sub	x19, x0, x19
  464c40:	cmp	x0, #0x0
  464c44:	csinv	x0, x19, xzr, ne  // ne = any
  464c48:	ldr	x19, [sp, #16]
  464c4c:	ldp	x29, x30, [sp], #32
  464c50:	ret
  464c54:	nop
  464c58:	stp	x29, x30, [sp, #-48]!
  464c5c:	mov	x29, sp
  464c60:	stp	x21, x22, [sp, #32]
  464c64:	ldr	x22, [x0]
  464c68:	stp	x19, x20, [sp, #16]
  464c6c:	ldur	x0, [x22, #-24]
  464c70:	cmp	x3, x0
  464c74:	b.hi	464cc8 <_obstack_memory_used@@Base+0x88d8>  // b.pmore
  464c78:	sub	x0, x0, x3
  464c7c:	mov	x20, x3
  464c80:	cmp	x0, x2
  464c84:	mov	x21, x1
  464c88:	csel	x19, x0, x2, ls  // ls = plast
  464c8c:	cbz	x20, 464cb4 <_obstack_memory_used@@Base+0x88c4>
  464c90:	mov	x2, x20
  464c94:	mov	x1, x21
  464c98:	add	x0, x22, x19
  464c9c:	bl	4031e0 <memcmp@plt>
  464ca0:	cbz	w0, 464cb4 <_obstack_memory_used@@Base+0x88c4>
  464ca4:	sub	x0, x19, #0x1
  464ca8:	cbz	x19, 464cc8 <_obstack_memory_used@@Base+0x88d8>
  464cac:	mov	x19, x0
  464cb0:	cbnz	x20, 464c90 <_obstack_memory_used@@Base+0x88a0>
  464cb4:	mov	x0, x19
  464cb8:	ldp	x19, x20, [sp, #16]
  464cbc:	ldp	x21, x22, [sp, #32]
  464cc0:	ldp	x29, x30, [sp], #48
  464cc4:	ret
  464cc8:	mov	x19, #0xffffffffffffffff    	// #-1
  464ccc:	mov	x0, x19
  464cd0:	ldp	x19, x20, [sp, #16]
  464cd4:	ldp	x21, x22, [sp, #32]
  464cd8:	ldp	x29, x30, [sp], #48
  464cdc:	ret
  464ce0:	ldr	x1, [x1]
  464ce4:	ldur	x3, [x1, #-24]
  464ce8:	b	464c58 <_obstack_memory_used@@Base+0x8868>
  464cec:	nop
  464cf0:	stp	x29, x30, [sp, #-48]!
  464cf4:	mov	x29, sp
  464cf8:	stp	x19, x20, [sp, #16]
  464cfc:	mov	x19, x1
  464d00:	mov	x20, x0
  464d04:	mov	x0, x1
  464d08:	str	x21, [sp, #32]
  464d0c:	mov	x21, x2
  464d10:	bl	402d50 <strlen@plt>
  464d14:	mov	x2, x21
  464d18:	mov	x3, x0
  464d1c:	mov	x1, x19
  464d20:	mov	x0, x20
  464d24:	ldp	x19, x20, [sp, #16]
  464d28:	ldr	x21, [sp, #32]
  464d2c:	ldp	x29, x30, [sp], #48
  464d30:	b	464c58 <_obstack_memory_used@@Base+0x8868>
  464d34:	nop
  464d38:	ldr	x4, [x0]
  464d3c:	and	w1, w1, #0xff
  464d40:	mov	x0, #0xffffffffffffffff    	// #-1
  464d44:	ldur	x3, [x4, #-24]
  464d48:	cbz	x3, 464d70 <_obstack_memory_used@@Base+0x8980>
  464d4c:	sub	x3, x3, #0x1
  464d50:	cmp	x3, x2
  464d54:	csel	x0, x3, x2, ls  // ls = plast
  464d58:	ldrb	w2, [x4, x0]
  464d5c:	cmp	w2, w1
  464d60:	b.eq	464d70 <_obstack_memory_used@@Base+0x8980>  // b.none
  464d64:	sub	x0, x0, #0x1
  464d68:	cmn	x0, #0x1
  464d6c:	b.ne	464d58 <_obstack_memory_used@@Base+0x8968>  // b.any
  464d70:	ret
  464d74:	nop
  464d78:	cbz	x3, 464df8 <_obstack_memory_used@@Base+0x8a08>
  464d7c:	stp	x29, x30, [sp, #-64]!
  464d80:	mov	x29, sp
  464d84:	stp	x21, x22, [sp, #32]
  464d88:	mov	x21, x1
  464d8c:	ldr	x22, [x0]
  464d90:	stp	x19, x20, [sp, #16]
  464d94:	mov	x19, x2
  464d98:	mov	x20, x3
  464d9c:	str	x23, [sp, #48]
  464da0:	ldur	x23, [x22, #-24]
  464da4:	b	464dc0 <_obstack_memory_used@@Base+0x89d0>
  464da8:	ldrb	w1, [x22, x19]
  464dac:	mov	x2, x20
  464db0:	mov	x0, x21
  464db4:	bl	4033d0 <memchr@plt>
  464db8:	cbnz	x0, 464de0 <_obstack_memory_used@@Base+0x89f0>
  464dbc:	add	x19, x19, #0x1
  464dc0:	cmp	x23, x19
  464dc4:	b.hi	464da8 <_obstack_memory_used@@Base+0x89b8>  // b.pmore
  464dc8:	mov	x0, #0xffffffffffffffff    	// #-1
  464dcc:	ldp	x19, x20, [sp, #16]
  464dd0:	ldp	x21, x22, [sp, #32]
  464dd4:	ldr	x23, [sp, #48]
  464dd8:	ldp	x29, x30, [sp], #64
  464ddc:	ret
  464de0:	mov	x0, x19
  464de4:	ldp	x19, x20, [sp, #16]
  464de8:	ldp	x21, x22, [sp, #32]
  464dec:	ldr	x23, [sp, #48]
  464df0:	ldp	x29, x30, [sp], #64
  464df4:	ret
  464df8:	mov	x0, #0xffffffffffffffff    	// #-1
  464dfc:	ret
  464e00:	ldr	x1, [x1]
  464e04:	ldur	x3, [x1, #-24]
  464e08:	b	464d78 <_obstack_memory_used@@Base+0x8988>
  464e0c:	nop
  464e10:	stp	x29, x30, [sp, #-48]!
  464e14:	mov	x29, sp
  464e18:	stp	x19, x20, [sp, #16]
  464e1c:	mov	x19, x1
  464e20:	mov	x20, x0
  464e24:	mov	x0, x1
  464e28:	str	x21, [sp, #32]
  464e2c:	mov	x21, x2
  464e30:	bl	402d50 <strlen@plt>
  464e34:	mov	x2, x21
  464e38:	mov	x3, x0
  464e3c:	mov	x1, x19
  464e40:	mov	x0, x20
  464e44:	ldp	x19, x20, [sp, #16]
  464e48:	ldr	x21, [sp, #32]
  464e4c:	ldp	x29, x30, [sp], #48
  464e50:	b	464d78 <_obstack_memory_used@@Base+0x8988>
  464e54:	nop
  464e58:	b	464c08 <_obstack_memory_used@@Base+0x8818>
  464e5c:	nop
  464e60:	stp	x29, x30, [sp, #-48]!
  464e64:	mov	x29, sp
  464e68:	stp	x21, x22, [sp, #32]
  464e6c:	ldr	x22, [x0]
  464e70:	stp	x19, x20, [sp, #16]
  464e74:	mov	x19, #0xffffffffffffffff    	// #-1
  464e78:	ldur	x0, [x22, #-24]
  464e7c:	cmp	x0, #0x0
  464e80:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  464e84:	b.eq	464ec0 <_obstack_memory_used@@Base+0x8ad0>  // b.none
  464e88:	sub	x0, x0, #0x1
  464e8c:	mov	x20, x3
  464e90:	cmp	x0, x2
  464e94:	mov	x21, x1
  464e98:	csel	x19, x0, x2, ls  // ls = plast
  464e9c:	b	464eac <_obstack_memory_used@@Base+0x8abc>
  464ea0:	sub	x19, x19, #0x1
  464ea4:	cmn	x19, #0x1
  464ea8:	b.eq	464ec0 <_obstack_memory_used@@Base+0x8ad0>  // b.none
  464eac:	ldrb	w1, [x22, x19]
  464eb0:	mov	x2, x20
  464eb4:	mov	x0, x21
  464eb8:	bl	4033d0 <memchr@plt>
  464ebc:	cbz	x0, 464ea0 <_obstack_memory_used@@Base+0x8ab0>
  464ec0:	mov	x0, x19
  464ec4:	ldp	x19, x20, [sp, #16]
  464ec8:	ldp	x21, x22, [sp, #32]
  464ecc:	ldp	x29, x30, [sp], #48
  464ed0:	ret
  464ed4:	nop
  464ed8:	ldr	x1, [x1]
  464edc:	ldur	x3, [x1, #-24]
  464ee0:	b	464e60 <_obstack_memory_used@@Base+0x8a70>
  464ee4:	nop
  464ee8:	stp	x29, x30, [sp, #-48]!
  464eec:	mov	x29, sp
  464ef0:	stp	x19, x20, [sp, #16]
  464ef4:	mov	x19, x1
  464ef8:	mov	x20, x0
  464efc:	mov	x0, x1
  464f00:	str	x21, [sp, #32]
  464f04:	mov	x21, x2
  464f08:	bl	402d50 <strlen@plt>
  464f0c:	mov	x2, x21
  464f10:	mov	x3, x0
  464f14:	mov	x1, x19
  464f18:	mov	x0, x20
  464f1c:	ldp	x19, x20, [sp, #16]
  464f20:	ldr	x21, [sp, #32]
  464f24:	ldp	x29, x30, [sp], #48
  464f28:	b	464e60 <_obstack_memory_used@@Base+0x8a70>
  464f2c:	nop
  464f30:	b	464d38 <_obstack_memory_used@@Base+0x8948>
  464f34:	nop
  464f38:	stp	x29, x30, [sp, #-64]!
  464f3c:	mov	x29, sp
  464f40:	stp	x21, x22, [sp, #32]
  464f44:	ldr	x22, [x0]
  464f48:	str	x23, [sp, #48]
  464f4c:	ldur	x23, [x22, #-24]
  464f50:	cmp	x2, x23
  464f54:	b.cs	464fc0 <_obstack_memory_used@@Base+0x8bd0>  // b.hs, b.nlast
  464f58:	stp	x19, x20, [sp, #16]
  464f5c:	mov	x21, x1
  464f60:	mov	x19, x2
  464f64:	mov	x20, x3
  464f68:	cbnz	x3, 464f7c <_obstack_memory_used@@Base+0x8b8c>
  464f6c:	b	464f90 <_obstack_memory_used@@Base+0x8ba0>
  464f70:	add	x19, x19, #0x1
  464f74:	cmp	x19, x23
  464f78:	b.eq	464fa8 <_obstack_memory_used@@Base+0x8bb8>  // b.none
  464f7c:	ldrb	w1, [x22, x19]
  464f80:	mov	x2, x20
  464f84:	mov	x0, x21
  464f88:	bl	4033d0 <memchr@plt>
  464f8c:	cbnz	x0, 464f70 <_obstack_memory_used@@Base+0x8b80>
  464f90:	mov	x0, x19
  464f94:	ldp	x19, x20, [sp, #16]
  464f98:	ldp	x21, x22, [sp, #32]
  464f9c:	ldr	x23, [sp, #48]
  464fa0:	ldp	x29, x30, [sp], #64
  464fa4:	ret
  464fa8:	mov	x0, #0xffffffffffffffff    	// #-1
  464fac:	ldp	x19, x20, [sp, #16]
  464fb0:	ldp	x21, x22, [sp, #32]
  464fb4:	ldr	x23, [sp, #48]
  464fb8:	ldp	x29, x30, [sp], #64
  464fbc:	ret
  464fc0:	mov	x0, #0xffffffffffffffff    	// #-1
  464fc4:	b	464f98 <_obstack_memory_used@@Base+0x8ba8>
  464fc8:	ldr	x1, [x1]
  464fcc:	ldur	x3, [x1, #-24]
  464fd0:	b	464f38 <_obstack_memory_used@@Base+0x8b48>
  464fd4:	nop
  464fd8:	stp	x29, x30, [sp, #-48]!
  464fdc:	mov	x29, sp
  464fe0:	stp	x19, x20, [sp, #16]
  464fe4:	mov	x19, x1
  464fe8:	mov	x20, x0
  464fec:	mov	x0, x1
  464ff0:	str	x21, [sp, #32]
  464ff4:	mov	x21, x2
  464ff8:	bl	402d50 <strlen@plt>
  464ffc:	mov	x2, x21
  465000:	mov	x3, x0
  465004:	mov	x1, x19
  465008:	mov	x0, x20
  46500c:	ldp	x19, x20, [sp, #16]
  465010:	ldr	x21, [sp, #32]
  465014:	ldp	x29, x30, [sp], #48
  465018:	b	464f38 <_obstack_memory_used@@Base+0x8b48>
  46501c:	nop
  465020:	ldr	x3, [x0]
  465024:	and	w1, w1, #0xff
  465028:	ldur	x4, [x3, #-24]
  46502c:	cmp	x2, x4
  465030:	b.cc	465044 <_obstack_memory_used@@Base+0x8c54>  // b.lo, b.ul, b.last
  465034:	b	465058 <_obstack_memory_used@@Base+0x8c68>
  465038:	add	x2, x2, #0x1
  46503c:	cmp	x2, x4
  465040:	b.eq	465058 <_obstack_memory_used@@Base+0x8c68>  // b.none
  465044:	ldrb	w0, [x3, x2]
  465048:	cmp	w0, w1
  46504c:	b.eq	465038 <_obstack_memory_used@@Base+0x8c48>  // b.none
  465050:	mov	x0, x2
  465054:	ret
  465058:	mov	x0, #0xffffffffffffffff    	// #-1
  46505c:	ret
  465060:	stp	x29, x30, [sp, #-48]!
  465064:	mov	x29, sp
  465068:	stp	x21, x22, [sp, #32]
  46506c:	ldr	x22, [x0]
  465070:	stp	x19, x20, [sp, #16]
  465074:	mov	x19, #0xffffffffffffffff    	// #-1
  465078:	ldur	x0, [x22, #-24]
  46507c:	cbz	x0, 4650b8 <_obstack_memory_used@@Base+0x8cc8>
  465080:	sub	x0, x0, #0x1
  465084:	mov	x21, x1
  465088:	cmp	x0, x2
  46508c:	mov	x20, x3
  465090:	csel	x19, x0, x2, ls  // ls = plast
  465094:	cbz	x20, 4650b8 <_obstack_memory_used@@Base+0x8cc8>
  465098:	ldrb	w1, [x22, x19]
  46509c:	mov	x2, x20
  4650a0:	mov	x0, x21
  4650a4:	bl	4033d0 <memchr@plt>
  4650a8:	cbz	x0, 4650b8 <_obstack_memory_used@@Base+0x8cc8>
  4650ac:	sub	x19, x19, #0x1
  4650b0:	cmn	x19, #0x1
  4650b4:	b.ne	465094 <_obstack_memory_used@@Base+0x8ca4>  // b.any
  4650b8:	mov	x0, x19
  4650bc:	ldp	x19, x20, [sp, #16]
  4650c0:	ldp	x21, x22, [sp, #32]
  4650c4:	ldp	x29, x30, [sp], #48
  4650c8:	ret
  4650cc:	nop
  4650d0:	ldr	x1, [x1]
  4650d4:	ldur	x3, [x1, #-24]
  4650d8:	b	465060 <_obstack_memory_used@@Base+0x8c70>
  4650dc:	nop
  4650e0:	stp	x29, x30, [sp, #-48]!
  4650e4:	mov	x29, sp
  4650e8:	stp	x19, x20, [sp, #16]
  4650ec:	mov	x19, x1
  4650f0:	mov	x20, x0
  4650f4:	mov	x0, x1
  4650f8:	str	x21, [sp, #32]
  4650fc:	mov	x21, x2
  465100:	bl	402d50 <strlen@plt>
  465104:	mov	x2, x21
  465108:	mov	x3, x0
  46510c:	mov	x1, x19
  465110:	mov	x0, x20
  465114:	ldp	x19, x20, [sp, #16]
  465118:	ldr	x21, [sp, #32]
  46511c:	ldp	x29, x30, [sp], #48
  465120:	b	465060 <_obstack_memory_used@@Base+0x8c70>
  465124:	nop
  465128:	ldr	x4, [x0]
  46512c:	and	w1, w1, #0xff
  465130:	mov	x0, #0xffffffffffffffff    	// #-1
  465134:	ldur	x3, [x4, #-24]
  465138:	cbz	x3, 465164 <_obstack_memory_used@@Base+0x8d74>
  46513c:	sub	x3, x3, #0x1
  465140:	cmp	x3, x2
  465144:	csel	x0, x3, x2, ls  // ls = plast
  465148:	b	465158 <_obstack_memory_used@@Base+0x8d68>
  46514c:	sub	x0, x0, #0x1
  465150:	cmn	x0, #0x1
  465154:	b.eq	465164 <_obstack_memory_used@@Base+0x8d74>  // b.none
  465158:	ldrb	w2, [x4, x0]
  46515c:	cmp	w2, w1
  465160:	b.eq	46514c <_obstack_memory_used@@Base+0x8d5c>  // b.none
  465164:	ret
  465168:	stp	x29, x30, [sp, #-32]!
  46516c:	mov	x29, sp
  465170:	ldr	x0, [x0]
  465174:	stp	x19, x20, [sp, #16]
  465178:	ldr	x1, [x1]
  46517c:	ldur	x19, [x0, #-24]
  465180:	ldur	x20, [x1, #-24]
  465184:	cmp	x20, x19
  465188:	csel	x2, x20, x19, ls  // ls = plast
  46518c:	cbz	x2, 465198 <_obstack_memory_used@@Base+0x8da8>
  465190:	bl	4031e0 <memcmp@plt>
  465194:	cbnz	w0, 4651b4 <_obstack_memory_used@@Base+0x8dc4>
  465198:	sub	x19, x19, x20
  46519c:	mov	x0, #0x7fffffff            	// #2147483647
  4651a0:	cmp	x19, x0
  4651a4:	b.gt	4651b4 <_obstack_memory_used@@Base+0x8dc4>
  4651a8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  4651ac:	cmp	x19, x0
  4651b0:	csel	w0, w0, w19, lt  // lt = tstop
  4651b4:	ldp	x19, x20, [sp, #16]
  4651b8:	ldp	x29, x30, [sp], #32
  4651bc:	ret
  4651c0:	stp	x29, x30, [sp, #-32]!
  4651c4:	mov	x5, x1
  4651c8:	mov	x29, sp
  4651cc:	ldr	x0, [x0]
  4651d0:	stp	x19, x20, [sp, #16]
  4651d4:	ldur	x4, [x0, #-24]
  4651d8:	cmp	x1, x4
  4651dc:	b.hi	465234 <_obstack_memory_used@@Base+0x8e44>  // b.pmore
  4651e0:	sub	x4, x4, x1
  4651e4:	ldr	x1, [x3]
  4651e8:	cmp	x4, x2
  4651ec:	csel	x19, x4, x2, ls  // ls = plast
  4651f0:	ldur	x20, [x1, #-24]
  4651f4:	cmp	x20, x19
  4651f8:	csel	x2, x20, x19, ls  // ls = plast
  4651fc:	cbz	x2, 46520c <_obstack_memory_used@@Base+0x8e1c>
  465200:	add	x0, x0, x5
  465204:	bl	4031e0 <memcmp@plt>
  465208:	cbnz	w0, 465228 <_obstack_memory_used@@Base+0x8e38>
  46520c:	sub	x19, x19, x20
  465210:	mov	x0, #0x7fffffff            	// #2147483647
  465214:	cmp	x19, x0
  465218:	b.gt	465228 <_obstack_memory_used@@Base+0x8e38>
  46521c:	mov	x0, #0xffffffff80000000    	// #-2147483648
  465220:	cmp	x19, x0
  465224:	csel	w0, w0, w19, lt  // lt = tstop
  465228:	ldp	x19, x20, [sp, #16]
  46522c:	ldp	x29, x30, [sp], #32
  465230:	ret
  465234:	mov	x2, x1
  465238:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46523c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465240:	mov	x3, x4
  465244:	add	x1, x1, #0x700
  465248:	add	x0, x0, #0x5b0
  46524c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  465250:	stp	x29, x30, [sp, #-32]!
  465254:	mov	x7, x1
  465258:	mov	x29, sp
  46525c:	ldr	x0, [x0]
  465260:	stp	x19, x20, [sp, #16]
  465264:	ldur	x6, [x0, #-24]
  465268:	cmp	x1, x6
  46526c:	b.hi	4652dc <_obstack_memory_used@@Base+0x8eec>  // b.pmore
  465270:	ldr	x1, [x3]
  465274:	ldur	x3, [x1, #-24]
  465278:	cmp	x4, x3
  46527c:	b.hi	4652f8 <_obstack_memory_used@@Base+0x8f08>  // b.pmore
  465280:	sub	x6, x6, x7
  465284:	sub	x3, x3, x4
  465288:	cmp	x6, x2
  46528c:	csel	x19, x6, x2, ls  // ls = plast
  465290:	cmp	x3, x5
  465294:	csel	x20, x3, x5, ls  // ls = plast
  465298:	cmp	x20, x19
  46529c:	csel	x2, x20, x19, ls  // ls = plast
  4652a0:	cbz	x2, 4652b4 <_obstack_memory_used@@Base+0x8ec4>
  4652a4:	add	x1, x1, x4
  4652a8:	add	x0, x0, x7
  4652ac:	bl	4031e0 <memcmp@plt>
  4652b0:	cbnz	w0, 4652d0 <_obstack_memory_used@@Base+0x8ee0>
  4652b4:	sub	x19, x19, x20
  4652b8:	mov	x0, #0x7fffffff            	// #2147483647
  4652bc:	cmp	x19, x0
  4652c0:	b.gt	4652d0 <_obstack_memory_used@@Base+0x8ee0>
  4652c4:	mov	x0, #0xffffffff80000000    	// #-2147483648
  4652c8:	cmp	x19, x0
  4652cc:	csel	w0, w0, w19, lt  // lt = tstop
  4652d0:	ldp	x19, x20, [sp, #16]
  4652d4:	ldp	x29, x30, [sp], #32
  4652d8:	ret
  4652dc:	mov	x3, x6
  4652e0:	mov	x2, x1
  4652e4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4652e8:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4652ec:	add	x1, x1, #0x700
  4652f0:	add	x0, x0, #0x5b0
  4652f4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4652f8:	mov	x2, x4
  4652fc:	b	4652e4 <_obstack_memory_used@@Base+0x8ef4>
  465300:	stp	x29, x30, [sp, #-48]!
  465304:	mov	x2, x0
  465308:	mov	x0, x1
  46530c:	mov	x29, sp
  465310:	stp	x21, x22, [sp, #32]
  465314:	mov	x21, x1
  465318:	ldr	x22, [x2]
  46531c:	stp	x19, x20, [sp, #16]
  465320:	bl	402d50 <strlen@plt>
  465324:	mov	x20, x0
  465328:	ldur	x19, [x22, #-24]
  46532c:	cmp	x0, x19
  465330:	csel	x2, x0, x19, ls  // ls = plast
  465334:	cbz	x2, 465348 <_obstack_memory_used@@Base+0x8f58>
  465338:	mov	x1, x21
  46533c:	mov	x0, x22
  465340:	bl	4031e0 <memcmp@plt>
  465344:	cbnz	w0, 465364 <_obstack_memory_used@@Base+0x8f74>
  465348:	sub	x19, x19, x20
  46534c:	mov	x0, #0x7fffffff            	// #2147483647
  465350:	cmp	x19, x0
  465354:	b.gt	465364 <_obstack_memory_used@@Base+0x8f74>
  465358:	mov	x0, #0xffffffff80000000    	// #-2147483648
  46535c:	cmp	x19, x0
  465360:	csel	w0, w0, w19, lt  // lt = tstop
  465364:	ldp	x19, x20, [sp, #16]
  465368:	ldp	x21, x22, [sp, #32]
  46536c:	ldp	x29, x30, [sp], #48
  465370:	ret
  465374:	nop
  465378:	stp	x29, x30, [sp, #-64]!
  46537c:	mov	x29, sp
  465380:	str	x23, [sp, #48]
  465384:	ldr	x23, [x0]
  465388:	stp	x19, x20, [sp, #16]
  46538c:	stp	x21, x22, [sp, #32]
  465390:	mov	x21, x1
  465394:	ldur	x19, [x23, #-24]
  465398:	cmp	x1, x19
  46539c:	b.hi	465408 <_obstack_memory_used@@Base+0x9018>  // b.pmore
  4653a0:	sub	x19, x19, x1
  4653a4:	mov	x22, x3
  4653a8:	cmp	x19, x2
  4653ac:	mov	x0, x3
  4653b0:	csel	x19, x19, x2, ls  // ls = plast
  4653b4:	bl	402d50 <strlen@plt>
  4653b8:	cmp	x0, x19
  4653bc:	mov	x20, x0
  4653c0:	csel	x2, x0, x19, ls  // ls = plast
  4653c4:	cbz	x2, 4653d8 <_obstack_memory_used@@Base+0x8fe8>
  4653c8:	mov	x1, x22
  4653cc:	add	x0, x23, x21
  4653d0:	bl	4031e0 <memcmp@plt>
  4653d4:	cbnz	w0, 4653f4 <_obstack_memory_used@@Base+0x9004>
  4653d8:	sub	x19, x19, x20
  4653dc:	mov	x0, #0x7fffffff            	// #2147483647
  4653e0:	cmp	x19, x0
  4653e4:	b.gt	4653f4 <_obstack_memory_used@@Base+0x9004>
  4653e8:	mov	x0, #0xffffffff80000000    	// #-2147483648
  4653ec:	cmp	x19, x0
  4653f0:	csel	w0, w0, w19, lt  // lt = tstop
  4653f4:	ldp	x19, x20, [sp, #16]
  4653f8:	ldp	x21, x22, [sp, #32]
  4653fc:	ldr	x23, [sp, #48]
  465400:	ldp	x29, x30, [sp], #64
  465404:	ret
  465408:	mov	x2, x1
  46540c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465410:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465414:	mov	x3, x19
  465418:	add	x1, x1, #0x700
  46541c:	add	x0, x0, #0x5b0
  465420:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  465424:	nop
  465428:	stp	x29, x30, [sp, #-32]!
  46542c:	mov	x6, x1
  465430:	mov	x29, sp
  465434:	ldr	x0, [x0]
  465438:	stp	x19, x20, [sp, #16]
  46543c:	ldur	x5, [x0, #-24]
  465440:	cmp	x1, x5
  465444:	b.hi	46549c <_obstack_memory_used@@Base+0x90ac>  // b.pmore
  465448:	sub	x5, x5, x1
  46544c:	mov	x20, x4
  465450:	cmp	x5, x2
  465454:	csel	x19, x5, x2, ls  // ls = plast
  465458:	cmp	x19, x4
  46545c:	csel	x2, x19, x4, ls  // ls = plast
  465460:	cbz	x2, 465474 <_obstack_memory_used@@Base+0x9084>
  465464:	mov	x1, x3
  465468:	add	x0, x0, x6
  46546c:	bl	4031e0 <memcmp@plt>
  465470:	cbnz	w0, 465490 <_obstack_memory_used@@Base+0x90a0>
  465474:	sub	x19, x19, x20
  465478:	mov	x0, #0x7fffffff            	// #2147483647
  46547c:	cmp	x19, x0
  465480:	b.gt	465490 <_obstack_memory_used@@Base+0x90a0>
  465484:	mov	x0, #0xffffffff80000000    	// #-2147483648
  465488:	cmp	x19, x0
  46548c:	csel	w0, w0, w19, lt  // lt = tstop
  465490:	ldp	x19, x20, [sp, #16]
  465494:	ldp	x29, x30, [sp], #32
  465498:	ret
  46549c:	mov	x2, x1
  4654a0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4654a4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4654a8:	mov	x3, x5
  4654ac:	add	x1, x1, #0x700
  4654b0:	add	x0, x0, #0x5b0
  4654b4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4654b8:	str	x1, [x0]
  4654bc:	ret
  4654c0:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4654c4:	ldr	x0, [x0, #3984]
  4654c8:	ret
  4654cc:	nop
  4654d0:	add	x0, x0, #0x10
  4654d4:	ldr	w0, [x0]
  4654d8:	lsr	w0, w0, #31
  4654dc:	ret
  4654e0:	add	x0, x0, #0x10
  4654e4:	ldar	w0, [x0]
  4654e8:	cmp	w0, #0x0
  4654ec:	cset	w0, gt
  4654f0:	ret
  4654f4:	nop
  4654f8:	mov	w1, #0xffffffff            	// #-1
  4654fc:	str	w1, [x0, #16]
  465500:	ret
  465504:	nop
  465508:	str	wzr, [x0, #16]
  46550c:	ret
  465510:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465514:	ldr	x2, [x2, #3984]
  465518:	cmp	x0, x2
  46551c:	b.ne	465524 <_obstack_memory_used@@Base+0x9134>  // b.any
  465520:	ret
  465524:	add	x2, x0, x1
  465528:	str	x1, [x0]
  46552c:	str	wzr, [x0, #16]
  465530:	strb	wzr, [x2, #24]
  465534:	ret
  465538:	add	x0, x0, #0x18
  46553c:	ret
  465540:	stp	x29, x30, [sp, #-32]!
  465544:	mov	x29, sp
  465548:	str	x19, [sp, #16]
  46554c:	mov	x19, x0
  465550:	mov	x0, #0xfffffffffffffff9    	// #-7
  465554:	movk	x0, #0x3fff, lsl #48
  465558:	cmp	x19, x0
  46555c:	b.hi	4655dc <_obstack_memory_used@@Base+0x91ec>  // b.pmore
  465560:	cmp	x19, x1
  465564:	b.ls	4655b4 <_obstack_memory_used@@Base+0x91c4>  // b.plast
  465568:	lsl	x2, x1, #1
  46556c:	cmp	x19, x2
  465570:	csel	x19, x19, x2, cs  // cs = hs, nlast
  465574:	add	x2, x19, #0x39
  465578:	cmp	x2, #0x1, lsl #12
  46557c:	ccmp	x19, x1, #0x0, hi  // hi = pmore
  465580:	b.ls	4655d0 <_obstack_memory_used@@Base+0x91e0>  // b.plast
  465584:	and	x2, x2, #0xfff
  465588:	add	x19, x19, #0x1, lsl #12
  46558c:	sub	x19, x19, x2
  465590:	cmp	x19, x0
  465594:	csel	x19, x19, x0, ls  // ls = plast
  465598:	add	x0, x19, #0x19
  46559c:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  4655a0:	str	x19, [x0, #8]
  4655a4:	str	wzr, [x0, #16]
  4655a8:	ldr	x19, [sp, #16]
  4655ac:	ldp	x29, x30, [sp], #32
  4655b0:	ret
  4655b4:	add	x0, x19, #0x19
  4655b8:	bl	45de08 <_obstack_memory_used@@Base+0x1a18>
  4655bc:	str	x19, [x0, #8]
  4655c0:	str	wzr, [x0, #16]
  4655c4:	ldr	x19, [sp, #16]
  4655c8:	ldp	x29, x30, [sp], #32
  4655cc:	ret
  4655d0:	adds	x0, x19, #0x19
  4655d4:	b.pl	4655b8 <_obstack_memory_used@@Base+0x91c8>  // b.nfrst
  4655d8:	bl	403660 <ferror@plt+0x90>
  4655dc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4655e0:	add	x0, x0, #0xa70
  4655e4:	bl	4037f8 <ferror@plt+0x228>
  4655e8:	cbnz	x0, 465600 <_obstack_memory_used@@Base+0x9210>
  4655ec:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4655f0:	ldr	x3, [x3, #3984]
  4655f4:	add	x3, x3, #0x18
  4655f8:	mov	x0, x3
  4655fc:	ret
  465600:	stp	x29, x30, [sp, #-48]!
  465604:	mov	x29, sp
  465608:	stp	x19, x20, [sp, #16]
  46560c:	mov	x19, x0
  465610:	str	x21, [sp, #32]
  465614:	and	w21, w1, #0xff
  465618:	mov	x1, #0x0                   	// #0
  46561c:	bl	465540 <_obstack_memory_used@@Base+0x9150>
  465620:	cmp	x19, #0x1
  465624:	mov	x20, x0
  465628:	add	x3, x0, #0x18
  46562c:	b.eq	465668 <_obstack_memory_used@@Base+0x9278>  // b.none
  465630:	mov	x0, x3
  465634:	mov	w1, w21
  465638:	mov	x2, x19
  46563c:	bl	403000 <memset@plt>
  465640:	mov	x3, x0
  465644:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465648:	ldr	x0, [x0, #3984]
  46564c:	cmp	x20, x0
  465650:	b.ne	465670 <_obstack_memory_used@@Base+0x9280>  // b.any
  465654:	mov	x0, x3
  465658:	ldp	x19, x20, [sp, #16]
  46565c:	ldr	x21, [sp, #32]
  465660:	ldp	x29, x30, [sp], #48
  465664:	ret
  465668:	strb	w21, [x0, #24]
  46566c:	b	465644 <_obstack_memory_used@@Base+0x9254>
  465670:	add	x0, x20, x19
  465674:	str	x19, [x20]
  465678:	str	wzr, [x20, #16]
  46567c:	strb	wzr, [x0, #24]
  465680:	b	465654 <_obstack_memory_used@@Base+0x9264>
  465684:	nop
  465688:	stp	x29, x30, [sp, #-32]!
  46568c:	mov	x2, x1
  465690:	mov	w1, #0x0                   	// #0
  465694:	mov	x29, sp
  465698:	str	x19, [sp, #16]
  46569c:	mov	x19, x0
  4656a0:	mov	x0, #0x0                   	// #0
  4656a4:	bl	4655e8 <_obstack_memory_used@@Base+0x91f8>
  4656a8:	str	x0, [x19]
  4656ac:	ldr	x19, [sp, #16]
  4656b0:	ldp	x29, x30, [sp], #32
  4656b4:	ret
  4656b8:	stp	x29, x30, [sp, #-32]!
  4656bc:	mov	x29, sp
  4656c0:	str	x19, [sp, #16]
  4656c4:	mov	x19, x0
  4656c8:	mov	x0, x1
  4656cc:	and	w1, w2, #0xff
  4656d0:	mov	x2, x3
  4656d4:	bl	4655e8 <_obstack_memory_used@@Base+0x91f8>
  4656d8:	str	x0, [x19]
  4656dc:	ldr	x19, [sp, #16]
  4656e0:	ldp	x29, x30, [sp], #32
  4656e4:	ret
  4656e8:	b	4655e8 <_obstack_memory_used@@Base+0x91f8>
  4656ec:	nop
  4656f0:	stp	x29, x30, [sp, #-48]!
  4656f4:	mov	x29, sp
  4656f8:	stp	x19, x20, [sp, #16]
  4656fc:	mov	x19, x1
  465700:	sub	x19, x19, x0
  465704:	mov	x1, #0x0                   	// #0
  465708:	str	x21, [sp, #32]
  46570c:	mov	x21, x0
  465710:	mov	x0, x19
  465714:	bl	465540 <_obstack_memory_used@@Base+0x9150>
  465718:	mov	x20, x0
  46571c:	cmp	x19, #0x1
  465720:	add	x3, x0, #0x18
  465724:	b.eq	465760 <_obstack_memory_used@@Base+0x9370>  // b.none
  465728:	mov	x0, x3
  46572c:	mov	x1, x21
  465730:	mov	x2, x19
  465734:	bl	402cd0 <memcpy@plt>
  465738:	mov	x3, x0
  46573c:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465740:	ldr	x0, [x0, #3984]
  465744:	cmp	x20, x0
  465748:	b.ne	465778 <_obstack_memory_used@@Base+0x9388>  // b.any
  46574c:	mov	x0, x3
  465750:	ldp	x19, x20, [sp, #16]
  465754:	ldr	x21, [sp, #32]
  465758:	ldp	x29, x30, [sp], #48
  46575c:	ret
  465760:	ldrb	w0, [x21]
  465764:	strb	w0, [x20, #24]
  465768:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46576c:	ldr	x0, [x0, #3984]
  465770:	cmp	x20, x0
  465774:	b.eq	46574c <_obstack_memory_used@@Base+0x935c>  // b.none
  465778:	add	x0, x20, x19
  46577c:	str	x19, [x20]
  465780:	str	wzr, [x20, #16]
  465784:	strb	wzr, [x0, #24]
  465788:	mov	x0, x3
  46578c:	ldp	x19, x20, [sp, #16]
  465790:	ldr	x21, [sp, #32]
  465794:	ldp	x29, x30, [sp], #48
  465798:	ret
  46579c:	nop
  4657a0:	b	461928 <_obstack_memory_used@@Base+0x5538>
  4657a4:	nop
  4657a8:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4657ac:	ldr	x2, [x2, #3600]
  4657b0:	cbz	x2, 4657d4 <_obstack_memory_used@@Base+0x93e4>
  4657b4:	add	x3, x0, #0x10
  4657b8:	ldaxr	w2, [x3]
  4657bc:	sub	w4, w2, #0x1
  4657c0:	stlxr	w5, w4, [x3]
  4657c4:	cbnz	w5, 4657b8 <_obstack_memory_used@@Base+0x93c8>
  4657c8:	cmp	w2, #0x0
  4657cc:	b.le	4657e8 <_obstack_memory_used@@Base+0x93f8>
  4657d0:	ret
  4657d4:	ldr	w2, [x0, #16]
  4657d8:	sub	w3, w2, #0x1
  4657dc:	str	w3, [x0, #16]
  4657e0:	cmp	w2, #0x0
  4657e4:	b.gt	4657d0 <_obstack_memory_used@@Base+0x93e0>
  4657e8:	b	4657a0 <_obstack_memory_used@@Base+0x93b0>
  4657ec:	nop
  4657f0:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4657f4:	ldr	x2, [x2, #3984]
  4657f8:	cmp	x0, x2
  4657fc:	b.ne	465804 <_obstack_memory_used@@Base+0x9414>  // b.any
  465800:	ret
  465804:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465808:	ldr	x2, [x2, #3600]
  46580c:	cbz	x2, 465830 <_obstack_memory_used@@Base+0x9440>
  465810:	add	x3, x0, #0x10
  465814:	ldaxr	w2, [x3]
  465818:	sub	w4, w2, #0x1
  46581c:	stlxr	w5, w4, [x3]
  465820:	cbnz	w5, 465814 <_obstack_memory_used@@Base+0x9424>
  465824:	cmp	w2, #0x0
  465828:	b.gt	465800 <_obstack_memory_used@@Base+0x9410>
  46582c:	b	4657a0 <_obstack_memory_used@@Base+0x93b0>
  465830:	ldr	w2, [x0, #16]
  465834:	sub	w3, w2, #0x1
  465838:	str	w3, [x0, #16]
  46583c:	b	465824 <_obstack_memory_used@@Base+0x9434>
  465840:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465844:	ldr	x2, [x0]
  465848:	ldr	x1, [x1, #3984]
  46584c:	sub	x0, x2, #0x18
  465850:	cmp	x0, x1
  465854:	b.ne	46585c <_obstack_memory_used@@Base+0x946c>  // b.any
  465858:	ret
  46585c:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465860:	ldr	x1, [x1, #3600]
  465864:	cbz	x1, 46589c <_obstack_memory_used@@Base+0x94ac>
  465868:	sub	x2, x2, #0x8
  46586c:	ldaxr	w1, [x2]
  465870:	sub	w3, w1, #0x1
  465874:	stlxr	w4, w3, [x2]
  465878:	cbnz	w4, 46586c <_obstack_memory_used@@Base+0x947c>
  46587c:	cmp	w1, #0x0
  465880:	b.gt	465858 <_obstack_memory_used@@Base+0x9468>
  465884:	stp	x29, x30, [sp, #-32]!
  465888:	mov	x29, sp
  46588c:	add	x1, sp, #0x18
  465890:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  465894:	ldp	x29, x30, [sp], #32
  465898:	ret
  46589c:	ldur	w1, [x2, #-8]
  4658a0:	sub	w3, w1, #0x1
  4658a4:	stur	w3, [x2, #-8]
  4658a8:	b	46587c <_obstack_memory_used@@Base+0x948c>
  4658ac:	nop
  4658b0:	stp	x29, x30, [sp, #-48]!
  4658b4:	mov	x29, sp
  4658b8:	stp	x19, x20, [sp, #16]
  4658bc:	mov	x19, x0
  4658c0:	ldr	x0, [x0]
  4658c4:	sub	x0, x0, #0x8
  4658c8:	ldar	w0, [x0]
  4658cc:	cmp	w0, #0x0
  4658d0:	b.le	465904 <_obstack_memory_used@@Base+0x9514>
  4658d4:	adrp	x20, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4658d8:	ldr	x1, [x19]
  4658dc:	ldr	x2, [x20, #3984]
  4658e0:	sub	x0, x1, #0x18
  4658e4:	cmp	x0, x2
  4658e8:	b.ne	46592c <_obstack_memory_used@@Base+0x953c>  // b.any
  4658ec:	ldr	x20, [x20, #3984]
  4658f0:	add	x20, x20, #0x18
  4658f4:	str	x20, [x19]
  4658f8:	ldp	x19, x20, [sp, #16]
  4658fc:	ldp	x29, x30, [sp], #48
  465900:	ret
  465904:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465908:	ldr	x1, [x19]
  46590c:	ldr	x0, [x0, #3984]
  465910:	sub	x2, x1, #0x18
  465914:	cmp	x2, x0
  465918:	b.eq	4658f8 <_obstack_memory_used@@Base+0x9508>  // b.none
  46591c:	stur	xzr, [x1, #-24]
  465920:	stur	wzr, [x1, #-8]
  465924:	strb	wzr, [x1]
  465928:	b	4658f8 <_obstack_memory_used@@Base+0x9508>
  46592c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465930:	ldr	x2, [x2, #3600]
  465934:	cbz	x2, 465960 <_obstack_memory_used@@Base+0x9570>
  465938:	sub	x1, x1, #0x8
  46593c:	ldaxr	w2, [x1]
  465940:	sub	w3, w2, #0x1
  465944:	stlxr	w4, w3, [x1]
  465948:	cbnz	w4, 46593c <_obstack_memory_used@@Base+0x954c>
  46594c:	cmp	w2, #0x0
  465950:	b.gt	4658ec <_obstack_memory_used@@Base+0x94fc>
  465954:	add	x1, sp, #0x28
  465958:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  46595c:	b	4658ec <_obstack_memory_used@@Base+0x94fc>
  465960:	ldur	w2, [x1, #-8]
  465964:	sub	w3, w2, #0x1
  465968:	stur	w3, [x1, #-8]
  46596c:	b	46594c <_obstack_memory_used@@Base+0x955c>
  465970:	stp	x29, x30, [sp, #-112]!
  465974:	mov	x29, sp
  465978:	stp	x19, x20, [sp, #16]
  46597c:	mov	x20, x0
  465980:	sub	x0, x3, x2
  465984:	stp	x21, x22, [sp, #32]
  465988:	mov	x21, x3
  46598c:	mov	x19, x1
  465990:	ldr	x3, [x20]
  465994:	stp	x23, x24, [sp, #48]
  465998:	stp	x25, x26, [sp, #64]
  46599c:	ldur	x4, [x3, #-24]
  4659a0:	str	x27, [sp, #80]
  4659a4:	add	x27, x2, x1
  4659a8:	ldur	x1, [x3, #-16]
  4659ac:	add	x25, x0, x4
  4659b0:	sub	x22, x4, x27
  4659b4:	cmp	x25, x1
  4659b8:	b.hi	4659d4 <_obstack_memory_used@@Base+0x95e4>  // b.pmore
  4659bc:	sub	x3, x3, #0x8
  4659c0:	ldar	w0, [x3]
  4659c4:	cmp	w0, #0x0
  4659c8:	b.le	465a78 <_obstack_memory_used@@Base+0x9688>
  4659cc:	ldr	x0, [x20]
  4659d0:	ldur	x1, [x0, #-16]
  4659d4:	add	x24, sp, #0x68
  4659d8:	mov	x2, x24
  4659dc:	mov	x0, x25
  4659e0:	bl	465540 <_obstack_memory_used@@Base+0x9150>
  4659e4:	mov	x23, x0
  4659e8:	add	x26, x0, #0x18
  4659ec:	cbz	x19, 465a0c <_obstack_memory_used@@Base+0x961c>
  4659f0:	cmp	x19, #0x1
  4659f4:	add	x26, x0, #0x18
  4659f8:	ldr	x1, [x20]
  4659fc:	b.eq	465b24 <_obstack_memory_used@@Base+0x9734>  // b.none
  465a00:	mov	x2, x19
  465a04:	mov	x0, x26
  465a08:	bl	402cd0 <memcpy@plt>
  465a0c:	ldr	x2, [x20]
  465a10:	cbz	x22, 465a38 <_obstack_memory_used@@Base+0x9648>
  465a14:	add	x19, x19, #0x18
  465a18:	cmp	x22, #0x1
  465a1c:	add	x19, x19, x21
  465a20:	add	x1, x2, x27
  465a24:	add	x0, x23, x19
  465a28:	b.eq	465b38 <_obstack_memory_used@@Base+0x9748>  // b.none
  465a2c:	mov	x2, x22
  465a30:	bl	402cd0 <memcpy@plt>
  465a34:	ldr	x2, [x20]
  465a38:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465a3c:	sub	x0, x2, #0x18
  465a40:	ldr	x1, [x21, #3984]
  465a44:	cmp	x0, x1
  465a48:	b.ne	465af0 <_obstack_memory_used@@Base+0x9700>  // b.any
  465a4c:	str	x26, [x20]
  465a50:	ldr	x21, [x21, #3984]
  465a54:	cmp	x23, x21
  465a58:	b.ne	465ac8 <_obstack_memory_used@@Base+0x96d8>  // b.any
  465a5c:	ldp	x19, x20, [sp, #16]
  465a60:	ldp	x21, x22, [sp, #32]
  465a64:	ldp	x23, x24, [sp, #48]
  465a68:	ldp	x25, x26, [sp, #64]
  465a6c:	ldr	x27, [sp, #80]
  465a70:	ldp	x29, x30, [sp], #112
  465a74:	ret
  465a78:	cmp	x22, #0x0
  465a7c:	ccmp	x21, x2, #0x4, ne  // ne = any
  465a80:	ldr	x26, [x20]
  465a84:	b.eq	465ab4 <_obstack_memory_used@@Base+0x96c4>  // b.none
  465a88:	add	x19, x21, x19
  465a8c:	cmp	x22, #0x1
  465a90:	add	x0, x26, x19
  465a94:	add	x1, x26, x27
  465a98:	b.eq	465b6c <_obstack_memory_used@@Base+0x977c>  // b.none
  465a9c:	mov	x2, x22
  465aa0:	bl	402ce0 <memmove@plt>
  465aa4:	ldr	x26, [x20]
  465aa8:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465aac:	sub	x23, x26, #0x18
  465ab0:	b	465a50 <_obstack_memory_used@@Base+0x9660>
  465ab4:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465ab8:	sub	x23, x26, #0x18
  465abc:	ldr	x21, [x21, #3984]
  465ac0:	cmp	x23, x21
  465ac4:	b.eq	465a5c <_obstack_memory_used@@Base+0x966c>  // b.none
  465ac8:	stur	x25, [x26, #-24]
  465acc:	stur	wzr, [x26, #-8]
  465ad0:	strb	wzr, [x26, x25]
  465ad4:	ldp	x19, x20, [sp, #16]
  465ad8:	ldp	x21, x22, [sp, #32]
  465adc:	ldp	x23, x24, [sp, #48]
  465ae0:	ldp	x25, x26, [sp, #64]
  465ae4:	ldr	x27, [sp, #80]
  465ae8:	ldp	x29, x30, [sp], #112
  465aec:	ret
  465af0:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465af4:	ldr	x1, [x1, #3600]
  465af8:	cbz	x1, 465b5c <_obstack_memory_used@@Base+0x976c>
  465afc:	sub	x2, x2, #0x8
  465b00:	ldaxr	w1, [x2]
  465b04:	sub	w3, w1, #0x1
  465b08:	stlxr	w4, w3, [x2]
  465b0c:	cbnz	w4, 465b00 <_obstack_memory_used@@Base+0x9710>
  465b10:	cmp	w1, #0x0
  465b14:	b.gt	465a4c <_obstack_memory_used@@Base+0x965c>
  465b18:	mov	x1, x24
  465b1c:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  465b20:	b	465a4c <_obstack_memory_used@@Base+0x965c>
  465b24:	ldrb	w0, [x1]
  465b28:	strb	w0, [x23, #24]
  465b2c:	ldr	x2, [x20]
  465b30:	cbz	x22, 465a38 <_obstack_memory_used@@Base+0x9648>
  465b34:	b	465a14 <_obstack_memory_used@@Base+0x9624>
  465b38:	ldrb	w0, [x2, x27]
  465b3c:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465b40:	strb	w0, [x23, x19]
  465b44:	ldr	x1, [x21, #3984]
  465b48:	ldr	x2, [x20]
  465b4c:	sub	x0, x2, #0x18
  465b50:	cmp	x0, x1
  465b54:	b.eq	465a4c <_obstack_memory_used@@Base+0x965c>  // b.none
  465b58:	b	465af0 <_obstack_memory_used@@Base+0x9700>
  465b5c:	ldur	w1, [x2, #-8]
  465b60:	sub	w3, w1, #0x1
  465b64:	stur	w3, [x2, #-8]
  465b68:	b	465b10 <_obstack_memory_used@@Base+0x9720>
  465b6c:	ldrb	w0, [x26, x27]
  465b70:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465b74:	strb	w0, [x26, x19]
  465b78:	ldr	x26, [x20]
  465b7c:	sub	x23, x26, #0x18
  465b80:	b	465a50 <_obstack_memory_used@@Base+0x9660>
  465b84:	nop
  465b88:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  465b8c:	ldr	x2, [x1, #3984]
  465b90:	ldr	x1, [x0]
  465b94:	sub	x3, x1, #0x18
  465b98:	cmp	x3, x2
  465b9c:	b.eq	465c00 <_obstack_memory_used@@Base+0x9810>  // b.none
  465ba0:	stp	x29, x30, [sp, #-32]!
  465ba4:	sub	x1, x1, #0x8
  465ba8:	mov	x29, sp
  465bac:	str	x19, [sp, #16]
  465bb0:	mov	x19, x0
  465bb4:	ldar	w1, [x1]
  465bb8:	cmp	w1, #0x0
  465bbc:	b.gt	465bd8 <_obstack_memory_used@@Base+0x97e8>
  465bc0:	ldr	x0, [x19]
  465bc4:	mov	w1, #0xffffffff            	// #-1
  465bc8:	ldr	x19, [sp, #16]
  465bcc:	stur	w1, [x0, #-8]
  465bd0:	ldp	x29, x30, [sp], #32
  465bd4:	ret
  465bd8:	mov	x3, #0x0                   	// #0
  465bdc:	mov	x2, #0x0                   	// #0
  465be0:	mov	x1, #0x0                   	// #0
  465be4:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  465be8:	ldr	x0, [x19]
  465bec:	mov	w1, #0xffffffff            	// #-1
  465bf0:	ldr	x19, [sp, #16]
  465bf4:	stur	w1, [x0, #-8]
  465bf8:	ldp	x29, x30, [sp], #32
  465bfc:	ret
  465c00:	ret
  465c04:	nop
  465c08:	ldr	x1, [x0]
  465c0c:	sub	x1, x1, #0x8
  465c10:	ldr	w1, [x1]
  465c14:	tbz	w1, #31, 465c1c <_obstack_memory_used@@Base+0x982c>
  465c18:	ret
  465c1c:	b	465b88 <_obstack_memory_used@@Base+0x9798>
  465c20:	ldr	x1, [x0]
  465c24:	sub	x2, x1, #0x8
  465c28:	ldr	w2, [x2]
  465c2c:	tbz	w2, #31, 465c38 <_obstack_memory_used@@Base+0x9848>
  465c30:	mov	x0, x1
  465c34:	ret
  465c38:	stp	x29, x30, [sp, #-32]!
  465c3c:	mov	x29, sp
  465c40:	str	x19, [sp, #16]
  465c44:	mov	x19, x0
  465c48:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465c4c:	ldr	x1, [x19]
  465c50:	ldr	x19, [sp, #16]
  465c54:	mov	x0, x1
  465c58:	ldp	x29, x30, [sp], #32
  465c5c:	ret
  465c60:	stp	x29, x30, [sp, #-32]!
  465c64:	mov	x29, sp
  465c68:	stp	x19, x20, [sp, #16]
  465c6c:	mov	x20, x1
  465c70:	ldr	x1, [x0]
  465c74:	sub	x2, x1, #0x8
  465c78:	ldr	w2, [x2]
  465c7c:	tbnz	w2, #31, 465c8c <_obstack_memory_used@@Base+0x989c>
  465c80:	mov	x19, x0
  465c84:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465c88:	ldr	x1, [x19]
  465c8c:	add	x0, x1, x20
  465c90:	ldp	x19, x20, [sp, #16]
  465c94:	ldp	x29, x30, [sp], #32
  465c98:	ret
  465c9c:	nop
  465ca0:	ldr	x1, [x0]
  465ca4:	sub	x2, x1, #0x8
  465ca8:	ldr	w2, [x2]
  465cac:	tbz	w2, #31, 465cb8 <_obstack_memory_used@@Base+0x98c8>
  465cb0:	mov	x0, x1
  465cb4:	ret
  465cb8:	stp	x29, x30, [sp, #-32]!
  465cbc:	mov	x29, sp
  465cc0:	str	x19, [sp, #16]
  465cc4:	mov	x19, x0
  465cc8:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465ccc:	ldr	x1, [x19]
  465cd0:	ldr	x19, [sp, #16]
  465cd4:	mov	x0, x1
  465cd8:	ldp	x29, x30, [sp], #32
  465cdc:	ret
  465ce0:	stp	x29, x30, [sp, #-32]!
  465ce4:	mov	x29, sp
  465ce8:	ldr	x1, [x0]
  465cec:	stp	x19, x20, [sp, #16]
  465cf0:	mov	x19, x8
  465cf4:	sub	x2, x1, #0x8
  465cf8:	ldr	w2, [x2]
  465cfc:	tbnz	w2, #31, 465d0c <_obstack_memory_used@@Base+0x991c>
  465d00:	mov	x20, x0
  465d04:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465d08:	ldr	x1, [x20]
  465d0c:	str	x1, [x19]
  465d10:	mov	x0, x19
  465d14:	ldp	x19, x20, [sp, #16]
  465d18:	ldp	x29, x30, [sp], #32
  465d1c:	ret
  465d20:	ldr	x1, [x0]
  465d24:	sub	x2, x1, #0x8
  465d28:	ldr	w2, [x2]
  465d2c:	tbz	w2, #31, 465d3c <_obstack_memory_used@@Base+0x994c>
  465d30:	ldur	x0, [x1, #-24]
  465d34:	add	x0, x1, x0
  465d38:	ret
  465d3c:	stp	x29, x30, [sp, #-32]!
  465d40:	mov	x29, sp
  465d44:	str	x19, [sp, #16]
  465d48:	mov	x19, x0
  465d4c:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465d50:	ldr	x1, [x19]
  465d54:	ldr	x19, [sp, #16]
  465d58:	ldur	x0, [x1, #-24]
  465d5c:	ldp	x29, x30, [sp], #32
  465d60:	add	x0, x1, x0
  465d64:	ret
  465d68:	stp	x29, x30, [sp, #-32]!
  465d6c:	mov	x29, sp
  465d70:	ldr	x1, [x0]
  465d74:	stp	x19, x20, [sp, #16]
  465d78:	mov	x19, x8
  465d7c:	sub	x2, x1, #0x8
  465d80:	ldr	w2, [x2]
  465d84:	tbnz	w2, #31, 465d94 <_obstack_memory_used@@Base+0x99a4>
  465d88:	mov	x20, x0
  465d8c:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465d90:	ldr	x1, [x20]
  465d94:	mov	x0, x19
  465d98:	ldur	x2, [x1, #-24]
  465d9c:	add	x1, x1, x2
  465da0:	str	x1, [x19]
  465da4:	ldp	x19, x20, [sp, #16]
  465da8:	ldp	x29, x30, [sp], #32
  465dac:	ret
  465db0:	stp	x29, x30, [sp, #-32]!
  465db4:	mov	x29, sp
  465db8:	ldr	x1, [x0]
  465dbc:	stp	x19, x20, [sp, #16]
  465dc0:	sub	x2, x1, #0x8
  465dc4:	ldur	x20, [x1, #-24]
  465dc8:	sub	x20, x20, #0x1
  465dcc:	ldr	w2, [x2]
  465dd0:	tbnz	w2, #31, 465de0 <_obstack_memory_used@@Base+0x99f0>
  465dd4:	mov	x19, x0
  465dd8:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465ddc:	ldr	x1, [x19]
  465de0:	add	x0, x1, x20
  465de4:	ldp	x19, x20, [sp, #16]
  465de8:	ldp	x29, x30, [sp], #32
  465dec:	ret
  465df0:	stp	x29, x30, [sp, #-32]!
  465df4:	mov	x29, sp
  465df8:	ldr	x3, [x0]
  465dfc:	stp	x19, x20, [sp, #16]
  465e00:	ldur	x2, [x3, #-24]
  465e04:	cmp	x1, x2
  465e08:	b.cs	465e38 <_obstack_memory_used@@Base+0x9a48>  // b.hs, b.nlast
  465e0c:	mov	x19, x1
  465e10:	sub	x1, x3, #0x8
  465e14:	ldr	w1, [x1]
  465e18:	tbnz	w1, #31, 465e28 <_obstack_memory_used@@Base+0x9a38>
  465e1c:	mov	x20, x0
  465e20:	bl	465b88 <_obstack_memory_used@@Base+0x9798>
  465e24:	ldr	x3, [x20]
  465e28:	add	x0, x3, x19
  465e2c:	ldp	x19, x20, [sp, #16]
  465e30:	ldp	x29, x30, [sp], #32
  465e34:	ret
  465e38:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465e3c:	add	x0, x0, #0x5e8
  465e40:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  465e44:	nop
  465e48:	stp	x29, x30, [sp, #-32]!
  465e4c:	mov	x29, sp
  465e50:	ldr	x3, [x0]
  465e54:	ldur	x3, [x3, #-24]
  465e58:	str	x19, [sp, #16]
  465e5c:	cmp	x1, x3
  465e60:	b.hi	465e8c <_obstack_memory_used@@Base+0x9a9c>  // b.pmore
  465e64:	sub	x4, x3, x1
  465e68:	mov	x19, x0
  465e6c:	cmp	x4, x2
  465e70:	mov	x3, #0x0                   	// #0
  465e74:	csel	x2, x4, x2, ls  // ls = plast
  465e78:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  465e7c:	mov	x0, x19
  465e80:	ldr	x19, [sp, #16]
  465e84:	ldp	x29, x30, [sp], #32
  465e88:	ret
  465e8c:	mov	x2, x1
  465e90:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465e94:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465e98:	add	x0, x0, #0x5b0
  465e9c:	add	x1, x1, #0x630
  465ea0:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  465ea4:	nop
  465ea8:	stp	x29, x30, [sp, #-32]!
  465eac:	mov	x3, #0x0                   	// #0
  465eb0:	mov	x2, #0x1                   	// #1
  465eb4:	mov	x29, sp
  465eb8:	stp	x19, x20, [sp, #16]
  465ebc:	mov	x20, x0
  465ec0:	ldr	x19, [x0]
  465ec4:	sub	x19, x1, x19
  465ec8:	mov	x1, x19
  465ecc:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  465ed0:	ldr	x1, [x20]
  465ed4:	mov	w2, #0xffffffff            	// #-1
  465ed8:	add	x0, x1, x19
  465edc:	ldp	x19, x20, [sp, #16]
  465ee0:	stur	w2, [x1, #-8]
  465ee4:	ldp	x29, x30, [sp], #32
  465ee8:	ret
  465eec:	nop
  465ef0:	subs	x2, x2, x1
  465ef4:	b.ne	465f00 <_obstack_memory_used@@Base+0x9b10>  // b.any
  465ef8:	mov	x0, x1
  465efc:	ret
  465f00:	stp	x29, x30, [sp, #-32]!
  465f04:	mov	x3, #0x0                   	// #0
  465f08:	mov	x29, sp
  465f0c:	stp	x19, x20, [sp, #16]
  465f10:	mov	x20, x0
  465f14:	ldr	x19, [x0]
  465f18:	sub	x19, x1, x19
  465f1c:	mov	x1, x19
  465f20:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  465f24:	ldr	x1, [x20]
  465f28:	mov	w2, #0xffffffff            	// #-1
  465f2c:	add	x0, x1, x19
  465f30:	ldp	x19, x20, [sp, #16]
  465f34:	stur	w2, [x1, #-8]
  465f38:	ldp	x29, x30, [sp], #32
  465f3c:	ret
  465f40:	stp	x29, x30, [sp, #-48]!
  465f44:	mov	x5, #0xfffffffffffffff9    	// #-7
  465f48:	movk	x5, #0x3fff, lsl #48
  465f4c:	mov	x29, sp
  465f50:	ldr	x6, [x0]
  465f54:	stp	x21, x22, [sp, #32]
  465f58:	and	w22, w4, #0xff
  465f5c:	add	x5, x2, x5
  465f60:	stp	x19, x20, [sp, #16]
  465f64:	ldur	x4, [x6, #-24]
  465f68:	sub	x5, x5, x4
  465f6c:	cmp	x3, x5
  465f70:	b.hi	465fd0 <_obstack_memory_used@@Base+0x9be0>  // b.pmore
  465f74:	mov	x19, x3
  465f78:	mov	x20, x0
  465f7c:	mov	x21, x1
  465f80:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  465f84:	cbz	x19, 465fa4 <_obstack_memory_used@@Base+0x9bb4>
  465f88:	ldr	x1, [x20]
  465f8c:	cmp	x19, #0x1
  465f90:	add	x0, x1, x21
  465f94:	b.eq	465fb8 <_obstack_memory_used@@Base+0x9bc8>  // b.none
  465f98:	mov	x2, x19
  465f9c:	mov	w1, w22
  465fa0:	bl	403000 <memset@plt>
  465fa4:	mov	x0, x20
  465fa8:	ldp	x19, x20, [sp, #16]
  465fac:	ldp	x21, x22, [sp, #32]
  465fb0:	ldp	x29, x30, [sp], #48
  465fb4:	ret
  465fb8:	strb	w22, [x1, x21]
  465fbc:	mov	x0, x20
  465fc0:	ldp	x19, x20, [sp, #16]
  465fc4:	ldp	x21, x22, [sp, #32]
  465fc8:	ldp	x29, x30, [sp], #48
  465fcc:	ret
  465fd0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  465fd4:	add	x0, x0, #0x648
  465fd8:	bl	4037f8 <ferror@plt+0x228>
  465fdc:	nop
  465fe0:	mov	w4, w2
  465fe4:	mov	x3, x1
  465fe8:	ldr	x2, [x0]
  465fec:	mov	x1, #0x0                   	// #0
  465ff0:	ldur	x2, [x2, #-24]
  465ff4:	b	465f40 <_obstack_memory_used@@Base+0x9b50>
  465ff8:	stp	x29, x30, [sp, #-32]!
  465ffc:	mov	w4, w1
  466000:	mov	x3, #0x1                   	// #1
  466004:	mov	x29, sp
  466008:	ldr	x2, [x0]
  46600c:	mov	x1, #0x0                   	// #0
  466010:	str	x19, [sp, #16]
  466014:	mov	x19, x0
  466018:	ldur	x2, [x2, #-24]
  46601c:	bl	465f40 <_obstack_memory_used@@Base+0x9b50>
  466020:	mov	x0, x19
  466024:	ldr	x19, [sp, #16]
  466028:	ldp	x29, x30, [sp], #32
  46602c:	ret
  466030:	ldr	x6, [x0]
  466034:	and	w4, w3, #0xff
  466038:	ldur	x3, [x6, #-24]
  46603c:	cmp	x1, x3
  466040:	b.hi	466050 <_obstack_memory_used@@Base+0x9c60>  // b.pmore
  466044:	mov	x3, x2
  466048:	mov	x2, #0x0                   	// #0
  46604c:	b	465f40 <_obstack_memory_used@@Base+0x9b50>
  466050:	stp	x29, x30, [sp, #-16]!
  466054:	mov	x2, x1
  466058:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46605c:	mov	x29, sp
  466060:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466064:	add	x0, x0, #0x5b0
  466068:	add	x1, x1, #0x668
  46606c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  466070:	stp	x29, x30, [sp, #-32]!
  466074:	mov	w4, w2
  466078:	mov	x3, #0x1                   	// #1
  46607c:	mov	x29, sp
  466080:	stp	x19, x20, [sp, #16]
  466084:	mov	x20, x0
  466088:	mov	x2, #0x0                   	// #0
  46608c:	ldr	x19, [x0]
  466090:	sub	x19, x1, x19
  466094:	mov	x1, x19
  466098:	bl	465f40 <_obstack_memory_used@@Base+0x9b50>
  46609c:	ldr	x1, [x20]
  4660a0:	mov	w2, #0xffffffff            	// #-1
  4660a4:	add	x0, x1, x19
  4660a8:	ldp	x19, x20, [sp, #16]
  4660ac:	stur	w2, [x1, #-8]
  4660b0:	ldp	x29, x30, [sp], #32
  4660b4:	ret
  4660b8:	ldr	x5, [x0]
  4660bc:	ldur	x5, [x5, #-24]
  4660c0:	cmp	x1, x5
  4660c4:	b.hi	4660dc <_obstack_memory_used@@Base+0x9cec>  // b.pmore
  4660c8:	sub	x5, x5, x1
  4660cc:	and	w4, w4, #0xff
  4660d0:	cmp	x5, x2
  4660d4:	csel	x2, x5, x2, ls  // ls = plast
  4660d8:	b	465f40 <_obstack_memory_used@@Base+0x9b50>
  4660dc:	stp	x29, x30, [sp, #-16]!
  4660e0:	mov	x2, x1
  4660e4:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4660e8:	mov	x29, sp
  4660ec:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4660f0:	mov	x3, x5
  4660f4:	add	x1, x1, #0x680
  4660f8:	add	x0, x0, #0x5b0
  4660fc:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  466100:	ldr	x5, [x0]
  466104:	sub	x2, x2, x1
  466108:	sub	x1, x1, x5
  46610c:	b	465f40 <_obstack_memory_used@@Base+0x9b50>
  466110:	mov	x5, x2
  466114:	mov	w4, w3
  466118:	mov	x3, x5
  46611c:	mov	x2, #0x0                   	// #0
  466120:	ldr	x5, [x0]
  466124:	sub	x1, x1, x5
  466128:	b	465f40 <_obstack_memory_used@@Base+0x9b50>
  46612c:	nop
  466130:	stp	x29, x30, [sp, #-48]!
  466134:	mov	x29, sp
  466138:	stp	x19, x20, [sp, #16]
  46613c:	mov	x19, x4
  466140:	mov	x20, x0
  466144:	stp	x21, x22, [sp, #32]
  466148:	mov	x22, x3
  46614c:	mov	x21, x1
  466150:	mov	x3, x4
  466154:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  466158:	cbz	x19, 466178 <_obstack_memory_used@@Base+0x9d88>
  46615c:	ldr	x1, [x20]
  466160:	cmp	x19, #0x1
  466164:	add	x0, x1, x21
  466168:	b.eq	46618c <_obstack_memory_used@@Base+0x9d9c>  // b.none
  46616c:	mov	x2, x19
  466170:	mov	x1, x22
  466174:	bl	402cd0 <memcpy@plt>
  466178:	mov	x0, x20
  46617c:	ldp	x19, x20, [sp, #16]
  466180:	ldp	x21, x22, [sp, #32]
  466184:	ldp	x29, x30, [sp], #48
  466188:	ret
  46618c:	ldrb	w0, [x22]
  466190:	strb	w0, [x1, x21]
  466194:	mov	x0, x20
  466198:	ldp	x19, x20, [sp, #16]
  46619c:	ldp	x21, x22, [sp, #32]
  4661a0:	ldp	x29, x30, [sp], #48
  4661a4:	ret
  4661a8:	stp	x29, x30, [sp, #-48]!
  4661ac:	mov	x29, sp
  4661b0:	str	x19, [sp, #16]
  4661b4:	mov	x19, x0
  4661b8:	mov	x0, #0xfffffffffffffff9    	// #-7
  4661bc:	movk	x0, #0x3fff, lsl #48
  4661c0:	cmp	x2, x0
  4661c4:	ldr	x0, [x19]
  4661c8:	ldur	x5, [x0, #-24]
  4661cc:	b.hi	4662ac <_obstack_memory_used@@Base+0x9ebc>  // b.pmore
  4661d0:	mov	x4, x2
  4661d4:	mov	x3, x1
  4661d8:	cmp	x0, x1
  4661dc:	b.hi	466204 <_obstack_memory_used@@Base+0x9e14>  // b.pmore
  4661e0:	add	x6, x0, x5
  4661e4:	cmp	x6, x1
  4661e8:	b.cc	466204 <_obstack_memory_used@@Base+0x9e14>  // b.lo, b.ul, b.last
  4661ec:	sub	x0, x0, #0x8
  4661f0:	ldar	w0, [x0]
  4661f4:	cmp	w0, #0x0
  4661f8:	ldr	x0, [x19]
  4661fc:	b.le	46621c <_obstack_memory_used@@Base+0x9e2c>
  466200:	ldur	x5, [x0, #-24]
  466204:	mov	x0, x19
  466208:	ldr	x19, [sp, #16]
  46620c:	mov	x2, x5
  466210:	ldp	x29, x30, [sp], #48
  466214:	mov	x1, #0x0                   	// #0
  466218:	b	466130 <_obstack_memory_used@@Base+0x9d40>
  46621c:	sub	x5, x1, x0
  466220:	cmp	x2, x5
  466224:	b.ls	46626c <_obstack_memory_used@@Base+0x9e7c>  // b.plast
  466228:	cbz	x5, 466248 <_obstack_memory_used@@Base+0x9e58>
  46622c:	cmp	x2, #0x1
  466230:	b.eq	46628c <_obstack_memory_used@@Base+0x9e9c>  // b.none
  466234:	str	x2, [sp, #40]
  466238:	bl	402ce0 <memmove@plt>
  46623c:	ldr	x0, [x19]
  466240:	ldr	x4, [sp, #40]
  466244:	nop
  466248:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46624c:	sub	x2, x0, #0x18
  466250:	ldr	x1, [x1, #3984]
  466254:	cmp	x2, x1
  466258:	b.ne	46629c <_obstack_memory_used@@Base+0x9eac>  // b.any
  46625c:	mov	x0, x19
  466260:	ldr	x19, [sp, #16]
  466264:	ldp	x29, x30, [sp], #48
  466268:	ret
  46626c:	cmp	x2, #0x1
  466270:	b.eq	46628c <_obstack_memory_used@@Base+0x9e9c>  // b.none
  466274:	cbz	x2, 466248 <_obstack_memory_used@@Base+0x9e58>
  466278:	str	x2, [sp, #40]
  46627c:	bl	402cd0 <memcpy@plt>
  466280:	ldr	x0, [x19]
  466284:	ldr	x4, [sp, #40]
  466288:	b	466248 <_obstack_memory_used@@Base+0x9e58>
  46628c:	ldrb	w1, [x3]
  466290:	strb	w1, [x0]
  466294:	ldr	x0, [x19]
  466298:	b	466248 <_obstack_memory_used@@Base+0x9e58>
  46629c:	stur	x4, [x0, #-24]
  4662a0:	stur	wzr, [x0, #-8]
  4662a4:	strb	wzr, [x0, x4]
  4662a8:	b	46625c <_obstack_memory_used@@Base+0x9e6c>
  4662ac:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4662b0:	add	x0, x0, #0x6b8
  4662b4:	bl	4037f8 <ferror@plt+0x228>
  4662b8:	stp	x29, x30, [sp, #-32]!
  4662bc:	mov	x29, sp
  4662c0:	str	x19, [sp, #16]
  4662c4:	mov	x19, x0
  4662c8:	bl	4661a8 <_obstack_memory_used@@Base+0x9db8>
  4662cc:	mov	x0, x19
  4662d0:	ldr	x19, [sp, #16]
  4662d4:	ldp	x29, x30, [sp], #32
  4662d8:	ret
  4662dc:	nop
  4662e0:	ldr	x1, [x1]
  4662e4:	ldur	x5, [x1, #-24]
  4662e8:	cmp	x2, x5
  4662ec:	b.hi	466308 <_obstack_memory_used@@Base+0x9f18>  // b.pmore
  4662f0:	mov	x4, x2
  4662f4:	sub	x2, x5, x2
  4662f8:	cmp	x2, x3
  4662fc:	add	x1, x1, x4
  466300:	csel	x2, x2, x3, ls  // ls = plast
  466304:	b	4661a8 <_obstack_memory_used@@Base+0x9db8>
  466308:	stp	x29, x30, [sp, #-16]!
  46630c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466310:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466314:	mov	x29, sp
  466318:	mov	x3, x5
  46631c:	add	x1, x1, #0x6b8
  466320:	add	x0, x0, #0x5b0
  466324:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  466328:	stp	x29, x30, [sp, #-32]!
  46632c:	mov	x29, sp
  466330:	stp	x19, x20, [sp, #16]
  466334:	mov	x19, x1
  466338:	mov	x20, x0
  46633c:	mov	x0, x1
  466340:	bl	402d50 <strlen@plt>
  466344:	mov	x1, x19
  466348:	mov	x2, x0
  46634c:	mov	x0, x20
  466350:	ldp	x19, x20, [sp, #16]
  466354:	ldp	x29, x30, [sp], #32
  466358:	b	4661a8 <_obstack_memory_used@@Base+0x9db8>
  46635c:	nop
  466360:	stp	x29, x30, [sp, #-32]!
  466364:	mov	x29, sp
  466368:	stp	x19, x20, [sp, #16]
  46636c:	mov	x19, x1
  466370:	mov	x20, x0
  466374:	mov	x0, x1
  466378:	bl	402d50 <strlen@plt>
  46637c:	mov	x1, x19
  466380:	mov	x2, x0
  466384:	mov	x0, x20
  466388:	ldp	x19, x20, [sp, #16]
  46638c:	ldp	x29, x30, [sp], #32
  466390:	b	4661a8 <_obstack_memory_used@@Base+0x9db8>
  466394:	nop
  466398:	b	4661a8 <_obstack_memory_used@@Base+0x9db8>
  46639c:	nop
  4663a0:	stp	x29, x30, [sp, #-64]!
  4663a4:	mov	x5, x2
  4663a8:	mov	x29, sp
  4663ac:	ldr	x6, [x0]
  4663b0:	stp	x19, x20, [sp, #16]
  4663b4:	stp	x21, x22, [sp, #32]
  4663b8:	mov	x21, x1
  4663bc:	ldur	x2, [x6, #-24]
  4663c0:	cmp	x1, x2
  4663c4:	b.hi	466530 <_obstack_memory_used@@Base+0xa140>  // b.pmore
  4663c8:	mov	x7, #0xfffffffffffffff9    	// #-7
  4663cc:	mov	x4, x3
  4663d0:	movk	x7, #0x3fff, lsl #48
  4663d4:	sub	x7, x7, x2
  4663d8:	cmp	x3, x7
  4663dc:	b.hi	466524 <_obstack_memory_used@@Base+0xa134>  // b.pmore
  4663e0:	mov	x20, x0
  4663e4:	cmp	x6, x5
  4663e8:	b.hi	466408 <_obstack_memory_used@@Base+0xa018>  // b.pmore
  4663ec:	add	x2, x6, x2
  4663f0:	cmp	x5, x2
  4663f4:	b.hi	466408 <_obstack_memory_used@@Base+0xa018>  // b.pmore
  4663f8:	sub	x6, x6, #0x8
  4663fc:	ldar	w2, [x6]
  466400:	cmp	w2, #0x0
  466404:	b.le	466428 <_obstack_memory_used@@Base+0xa038>
  466408:	mov	x1, x21
  46640c:	mov	x0, x20
  466410:	ldp	x19, x20, [sp, #16]
  466414:	mov	x3, x5
  466418:	ldp	x21, x22, [sp, #32]
  46641c:	mov	x2, #0x0                   	// #0
  466420:	ldp	x29, x30, [sp], #64
  466424:	b	466130 <_obstack_memory_used@@Base+0x9d40>
  466428:	ldr	x19, [x0]
  46642c:	mov	x2, #0x0                   	// #0
  466430:	str	x3, [sp, #56]
  466434:	sub	x19, x5, x19
  466438:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  46643c:	ldr	x0, [x20]
  466440:	ldr	x4, [sp, #56]
  466444:	add	x1, x0, x19
  466448:	add	x3, x0, x21
  46644c:	add	x5, x1, x4
  466450:	cmp	x5, x3
  466454:	b.hi	466484 <_obstack_memory_used@@Base+0xa094>  // b.pmore
  466458:	cmp	x4, #0x1
  46645c:	b.eq	4664f4 <_obstack_memory_used@@Base+0xa104>  // b.none
  466460:	cbz	x4, 466470 <_obstack_memory_used@@Base+0xa080>
  466464:	mov	x2, x4
  466468:	mov	x0, x3
  46646c:	bl	402cd0 <memcpy@plt>
  466470:	mov	x0, x20
  466474:	ldp	x19, x20, [sp, #16]
  466478:	ldp	x21, x22, [sp, #32]
  46647c:	ldp	x29, x30, [sp], #64
  466480:	ret
  466484:	cmp	x1, x3
  466488:	b.cc	4664ac <_obstack_memory_used@@Base+0xa0bc>  // b.lo, b.ul, b.last
  46648c:	cmp	x4, #0x1
  466490:	b.eq	46650c <_obstack_memory_used@@Base+0xa11c>  // b.none
  466494:	cbz	x4, 466470 <_obstack_memory_used@@Base+0xa080>
  466498:	mov	x2, x4
  46649c:	mov	x1, x5
  4664a0:	mov	x0, x3
  4664a4:	bl	402cd0 <memcpy@plt>
  4664a8:	b	466470 <_obstack_memory_used@@Base+0xa080>
  4664ac:	sub	x22, x21, x19
  4664b0:	cmp	x22, #0x1
  4664b4:	b.eq	466500 <_obstack_memory_used@@Base+0xa110>  // b.none
  4664b8:	cbz	x22, 4664d4 <_obstack_memory_used@@Base+0xa0e4>
  4664bc:	mov	x0, x3
  4664c0:	mov	x2, x22
  4664c4:	str	x4, [sp, #56]
  4664c8:	bl	402cd0 <memcpy@plt>
  4664cc:	ldr	x4, [sp, #56]
  4664d0:	mov	x3, x0
  4664d4:	sub	x2, x4, x22
  4664d8:	add	x0, x3, x22
  4664dc:	cmp	x2, #0x1
  4664e0:	add	x1, x3, x4
  4664e4:	b.eq	466518 <_obstack_memory_used@@Base+0xa128>  // b.none
  4664e8:	cbz	x2, 466470 <_obstack_memory_used@@Base+0xa080>
  4664ec:	bl	402cd0 <memcpy@plt>
  4664f0:	b	466470 <_obstack_memory_used@@Base+0xa080>
  4664f4:	ldrb	w1, [x0, x19]
  4664f8:	strb	w1, [x0, x21]
  4664fc:	b	466470 <_obstack_memory_used@@Base+0xa080>
  466500:	ldrb	w1, [x0, x19]
  466504:	strb	w1, [x0, x21]
  466508:	b	4664d4 <_obstack_memory_used@@Base+0xa0e4>
  46650c:	ldrb	w1, [x1, #1]
  466510:	strb	w1, [x0, x21]
  466514:	b	466470 <_obstack_memory_used@@Base+0xa080>
  466518:	ldrb	w0, [x3, x4]
  46651c:	strb	w0, [x3, x22]
  466520:	b	466470 <_obstack_memory_used@@Base+0xa080>
  466524:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466528:	add	x0, x0, #0x668
  46652c:	bl	4037f8 <ferror@plt+0x228>
  466530:	mov	x3, x2
  466534:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466538:	mov	x2, x1
  46653c:	add	x0, x0, #0x5b0
  466540:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466544:	add	x1, x1, #0x668
  466548:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  46654c:	nop
  466550:	ldr	x4, [x0]
  466554:	sub	x1, x1, x4
  466558:	b	4663a0 <_obstack_memory_used@@Base+0x9fb0>
  46655c:	nop
  466560:	ldr	x2, [x2]
  466564:	mov	x5, x3
  466568:	ldur	x6, [x2, #-24]
  46656c:	cmp	x3, x6
  466570:	b.hi	466588 <_obstack_memory_used@@Base+0xa198>  // b.pmore
  466574:	sub	x6, x6, x3
  466578:	add	x2, x2, x3
  46657c:	cmp	x6, x4
  466580:	csel	x3, x6, x4, ls  // ls = plast
  466584:	b	4663a0 <_obstack_memory_used@@Base+0x9fb0>
  466588:	stp	x29, x30, [sp, #-16]!
  46658c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466590:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466594:	mov	x29, sp
  466598:	mov	x3, x6
  46659c:	mov	x2, x5
  4665a0:	add	x1, x1, #0x668
  4665a4:	add	x0, x0, #0x5b0
  4665a8:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4665ac:	nop
  4665b0:	stp	x29, x30, [sp, #-48]!
  4665b4:	mov	x29, sp
  4665b8:	stp	x19, x20, [sp, #16]
  4665bc:	mov	x19, x2
  4665c0:	mov	x20, x0
  4665c4:	mov	x0, x2
  4665c8:	str	x21, [sp, #32]
  4665cc:	mov	x21, x1
  4665d0:	bl	402d50 <strlen@plt>
  4665d4:	mov	x2, x19
  4665d8:	mov	x3, x0
  4665dc:	mov	x1, x21
  4665e0:	mov	x0, x20
  4665e4:	ldp	x19, x20, [sp, #16]
  4665e8:	ldr	x21, [sp, #32]
  4665ec:	ldp	x29, x30, [sp], #48
  4665f0:	b	4663a0 <_obstack_memory_used@@Base+0x9fb0>
  4665f4:	nop
  4665f8:	ldr	x2, [x2]
  4665fc:	ldur	x3, [x2, #-24]
  466600:	b	4663a0 <_obstack_memory_used@@Base+0x9fb0>
  466604:	nop
  466608:	ldr	x1, [x0]
  46660c:	ldur	x2, [x1, #-24]
  466610:	sub	x1, x2, #0x1
  466614:	cmp	x1, x2
  466618:	b.hi	466628 <_obstack_memory_used@@Base+0xa238>  // b.pmore
  46661c:	mov	x3, #0x0                   	// #0
  466620:	mov	x2, #0x1                   	// #1
  466624:	b	465970 <_obstack_memory_used@@Base+0x9580>
  466628:	stp	x29, x30, [sp, #-16]!
  46662c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466630:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466634:	mov	x29, sp
  466638:	add	x1, x1, #0x630
  46663c:	add	x0, x0, #0x5b0
  466640:	mov	x3, #0x0                   	// #0
  466644:	mov	x2, #0xffffffffffffffff    	// #-1
  466648:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  46664c:	nop
  466650:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466654:	ldr	x1, [x1, #3984]
  466658:	cmp	x0, x1
  46665c:	b.ne	466668 <_obstack_memory_used@@Base+0xa278>  // b.any
  466660:	add	x0, x0, #0x18
  466664:	ret
  466668:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46666c:	ldr	x1, [x1, #3600]
  466670:	cbz	x1, 466690 <_obstack_memory_used@@Base+0xa2a0>
  466674:	add	x1, x0, #0x10
  466678:	ldaxr	w2, [x1]
  46667c:	add	w2, w2, #0x1
  466680:	stlxr	w3, w2, [x1]
  466684:	cbnz	w3, 466678 <_obstack_memory_used@@Base+0xa288>
  466688:	add	x0, x0, #0x18
  46668c:	ret
  466690:	ldr	w1, [x0, #16]
  466694:	add	w1, w1, #0x1
  466698:	str	w1, [x0, #16]
  46669c:	b	466660 <_obstack_memory_used@@Base+0xa270>
  4666a0:	stp	x29, x30, [sp, #-32]!
  4666a4:	mov	x3, x2
  4666a8:	mov	x2, x1
  4666ac:	mov	x29, sp
  4666b0:	ldr	x1, [x0, #8]
  4666b4:	stp	x19, x20, [sp, #16]
  4666b8:	mov	x19, x0
  4666bc:	ldr	x0, [x0]
  4666c0:	add	x0, x3, x0
  4666c4:	bl	465540 <_obstack_memory_used@@Base+0x9150>
  4666c8:	ldr	x2, [x19]
  4666cc:	mov	x20, x0
  4666d0:	add	x3, x0, #0x18
  4666d4:	cbz	x2, 4666f8 <_obstack_memory_used@@Base+0xa308>
  4666d8:	cmp	x2, #0x1
  4666dc:	add	x3, x0, #0x18
  4666e0:	b.eq	466718 <_obstack_memory_used@@Base+0xa328>  // b.none
  4666e4:	mov	x0, x3
  4666e8:	add	x1, x19, #0x18
  4666ec:	bl	402cd0 <memcpy@plt>
  4666f0:	mov	x3, x0
  4666f4:	ldr	x2, [x19]
  4666f8:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4666fc:	ldr	x0, [x0, #3984]
  466700:	cmp	x20, x0
  466704:	b.ne	466734 <_obstack_memory_used@@Base+0xa344>  // b.any
  466708:	mov	x0, x3
  46670c:	ldp	x19, x20, [sp, #16]
  466710:	ldp	x29, x30, [sp], #32
  466714:	ret
  466718:	ldrb	w0, [x19, #24]
  46671c:	strb	w0, [x20, #24]
  466720:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466724:	ldr	x2, [x19]
  466728:	ldr	x0, [x0, #3984]
  46672c:	cmp	x20, x0
  466730:	b.eq	466708 <_obstack_memory_used@@Base+0xa318>  // b.none
  466734:	add	x0, x20, x2
  466738:	str	x2, [x20]
  46673c:	str	wzr, [x20, #16]
  466740:	strb	wzr, [x0, #24]
  466744:	mov	x0, x3
  466748:	ldp	x19, x20, [sp, #16]
  46674c:	ldp	x29, x30, [sp], #32
  466750:	ret
  466754:	nop
  466758:	stp	x29, x30, [sp, #-64]!
  46675c:	mov	x3, x1
  466760:	mov	x29, sp
  466764:	stp	x19, x20, [sp, #16]
  466768:	mov	x19, x0
  46676c:	ldr	x0, [x0]
  466770:	ldur	x1, [x0, #-16]
  466774:	cmp	x3, x1
  466778:	b.eq	4667d0 <_obstack_memory_used@@Base+0xa3e0>  // b.none
  46677c:	str	x21, [sp, #32]
  466780:	ldur	x2, [x0, #-24]
  466784:	add	x21, sp, #0x38
  466788:	mov	x1, x21
  46678c:	sub	x0, x0, #0x18
  466790:	cmp	x3, x2
  466794:	csel	x3, x3, x2, cs  // cs = hs, nlast
  466798:	sub	x2, x3, x2
  46679c:	bl	4666a0 <_obstack_memory_used@@Base+0xa2b0>
  4667a0:	mov	x20, x0
  4667a4:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4667a8:	ldr	x3, [x19]
  4667ac:	ldr	x2, [x2, #3984]
  4667b0:	sub	x0, x3, #0x18
  4667b4:	cmp	x0, x2
  4667b8:	b.ne	4667ec <_obstack_memory_used@@Base+0xa3fc>  // b.any
  4667bc:	ldr	x21, [sp, #32]
  4667c0:	str	x20, [x19]
  4667c4:	ldp	x19, x20, [sp, #16]
  4667c8:	ldp	x29, x30, [sp], #64
  4667cc:	ret
  4667d0:	sub	x0, x0, #0x8
  4667d4:	ldar	w0, [x0]
  4667d8:	cmp	w0, #0x0
  4667dc:	b.le	4667c4 <_obstack_memory_used@@Base+0xa3d4>
  4667e0:	ldr	x0, [x19]
  4667e4:	str	x21, [sp, #32]
  4667e8:	b	466780 <_obstack_memory_used@@Base+0xa390>
  4667ec:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4667f0:	ldr	x1, [x1, #3600]
  4667f4:	cbz	x1, 466820 <_obstack_memory_used@@Base+0xa430>
  4667f8:	sub	x3, x3, #0x8
  4667fc:	ldaxr	w1, [x3]
  466800:	sub	w2, w1, #0x1
  466804:	stlxr	w4, w2, [x3]
  466808:	cbnz	w4, 4667fc <_obstack_memory_used@@Base+0xa40c>
  46680c:	cmp	w1, #0x0
  466810:	b.gt	4667bc <_obstack_memory_used@@Base+0xa3cc>
  466814:	mov	x1, x21
  466818:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  46681c:	b	4667bc <_obstack_memory_used@@Base+0xa3cc>
  466820:	ldur	w1, [x3, #-8]
  466824:	sub	w2, w1, #0x1
  466828:	stur	w2, [x3, #-8]
  46682c:	b	46680c <_obstack_memory_used@@Base+0xa41c>
  466830:	ldr	x1, [x0]
  466834:	ldp	x2, x1, [x1, #-24]
  466838:	cmp	x2, x1
  46683c:	b.cc	466844 <_obstack_memory_used@@Base+0xa454>  // b.lo, b.ul, b.last
  466840:	ret
  466844:	stp	x29, x30, [sp, #-16]!
  466848:	mov	x1, #0x0                   	// #0
  46684c:	mov	x29, sp
  466850:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  466854:	ldp	x29, x30, [sp], #16
  466858:	ret
  46685c:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  466860:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  466864:	b	466854 <_obstack_memory_used@@Base+0xa464>
  466868:	stp	x29, x30, [sp, #-48]!
  46686c:	mov	x29, sp
  466870:	stp	x19, x20, [sp, #16]
  466874:	mov	x19, x0
  466878:	ldr	x0, [x1]
  46687c:	stp	x21, x22, [sp, #32]
  466880:	ldur	x21, [x0, #-24]
  466884:	cbz	x21, 4668e4 <_obstack_memory_used@@Base+0xa4f4>
  466888:	ldr	x0, [x19]
  46688c:	mov	x20, x1
  466890:	ldp	x22, x1, [x0, #-24]
  466894:	add	x22, x21, x22
  466898:	cmp	x22, x1
  46689c:	b.ls	4668f8 <_obstack_memory_used@@Base+0xa508>  // b.plast
  4668a0:	mov	x1, x22
  4668a4:	mov	x0, x19
  4668a8:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  4668ac:	ldr	x2, [x19]
  4668b0:	cmp	x21, #0x1
  4668b4:	ldr	x1, [x20]
  4668b8:	ldur	x3, [x2, #-24]
  4668bc:	add	x0, x2, x3
  4668c0:	b.eq	466920 <_obstack_memory_used@@Base+0xa530>  // b.none
  4668c4:	mov	x2, x21
  4668c8:	bl	402cd0 <memcpy@plt>
  4668cc:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4668d0:	ldr	x1, [x19]
  4668d4:	ldr	x0, [x0, #3984]
  4668d8:	sub	x2, x1, #0x18
  4668dc:	cmp	x2, x0
  4668e0:	b.ne	46692c <_obstack_memory_used@@Base+0xa53c>  // b.any
  4668e4:	mov	x0, x19
  4668e8:	ldp	x19, x20, [sp, #16]
  4668ec:	ldp	x21, x22, [sp, #32]
  4668f0:	ldp	x29, x30, [sp], #48
  4668f4:	ret
  4668f8:	sub	x0, x0, #0x8
  4668fc:	ldar	w0, [x0]
  466900:	cmp	w0, #0x0
  466904:	b.gt	4668a0 <_obstack_memory_used@@Base+0xa4b0>
  466908:	ldr	x2, [x19]
  46690c:	cmp	x21, #0x1
  466910:	ldr	x1, [x20]
  466914:	ldur	x3, [x2, #-24]
  466918:	add	x0, x2, x3
  46691c:	b.ne	4668c4 <_obstack_memory_used@@Base+0xa4d4>  // b.any
  466920:	ldrb	w0, [x1]
  466924:	strb	w0, [x2, x3]
  466928:	b	4668cc <_obstack_memory_used@@Base+0xa4dc>
  46692c:	stur	x22, [x1, #-24]
  466930:	stur	wzr, [x1, #-8]
  466934:	strb	wzr, [x1, x22]
  466938:	b	4668e4 <_obstack_memory_used@@Base+0xa4f4>
  46693c:	nop
  466940:	b	466868 <_obstack_memory_used@@Base+0xa478>
  466944:	nop
  466948:	stp	x29, x30, [sp, #-64]!
  46694c:	mov	x29, sp
  466950:	stp	x19, x20, [sp, #16]
  466954:	mov	x20, x0
  466958:	ldr	x0, [x1]
  46695c:	ldur	x4, [x0, #-24]
  466960:	stp	x21, x22, [sp, #32]
  466964:	cmp	x2, x4
  466968:	b.hi	466a30 <_obstack_memory_used@@Base+0xa640>  // b.pmore
  46696c:	sub	x4, x4, x2
  466970:	mov	x21, x2
  466974:	cmp	x4, x3
  466978:	csel	x19, x4, x3, ls  // ls = plast
  46697c:	cbz	x19, 4669fc <_obstack_memory_used@@Base+0xa60c>
  466980:	ldr	x0, [x20]
  466984:	mov	x22, x1
  466988:	ldur	x1, [x0, #-16]
  46698c:	str	x23, [sp, #48]
  466990:	ldur	x23, [x0, #-24]
  466994:	add	x23, x19, x23
  466998:	cmp	x1, x23
  46699c:	b.cc	4669b0 <_obstack_memory_used@@Base+0xa5c0>  // b.lo, b.ul, b.last
  4669a0:	sub	x0, x0, #0x8
  4669a4:	ldar	w0, [x0]
  4669a8:	cmp	w0, #0x0
  4669ac:	b.le	4669bc <_obstack_memory_used@@Base+0xa5cc>
  4669b0:	mov	x1, x23
  4669b4:	mov	x0, x20
  4669b8:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  4669bc:	ldr	x2, [x20]
  4669c0:	cmp	x19, #0x1
  4669c4:	ldr	x4, [x22]
  4669c8:	ldur	x3, [x2, #-24]
  4669cc:	add	x1, x4, x21
  4669d0:	add	x0, x2, x3
  4669d4:	b.eq	466a10 <_obstack_memory_used@@Base+0xa620>  // b.none
  4669d8:	mov	x2, x19
  4669dc:	bl	402cd0 <memcpy@plt>
  4669e0:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4669e4:	ldr	x1, [x20]
  4669e8:	ldr	x0, [x0, #3984]
  4669ec:	sub	x2, x1, #0x18
  4669f0:	cmp	x2, x0
  4669f4:	b.ne	466a1c <_obstack_memory_used@@Base+0xa62c>  // b.any
  4669f8:	ldr	x23, [sp, #48]
  4669fc:	mov	x0, x20
  466a00:	ldp	x19, x20, [sp, #16]
  466a04:	ldp	x21, x22, [sp, #32]
  466a08:	ldp	x29, x30, [sp], #64
  466a0c:	ret
  466a10:	ldrb	w0, [x4, x21]
  466a14:	strb	w0, [x2, x3]
  466a18:	b	4669e0 <_obstack_memory_used@@Base+0xa5f0>
  466a1c:	stur	x23, [x1, #-24]
  466a20:	stur	wzr, [x1, #-8]
  466a24:	strb	wzr, [x1, x23]
  466a28:	ldr	x23, [sp, #48]
  466a2c:	b	4669fc <_obstack_memory_used@@Base+0xa60c>
  466a30:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466a34:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466a38:	mov	x3, x4
  466a3c:	add	x1, x1, #0x6d0
  466a40:	add	x0, x0, #0x5b0
  466a44:	str	x23, [sp, #48]
  466a48:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  466a4c:	nop
  466a50:	stp	x29, x30, [sp, #-48]!
  466a54:	mov	x29, sp
  466a58:	stp	x19, x20, [sp, #16]
  466a5c:	mov	x19, x0
  466a60:	cbz	x2, 466afc <_obstack_memory_used@@Base+0xa70c>
  466a64:	ldr	x0, [x0]
  466a68:	stp	x21, x22, [sp, #32]
  466a6c:	mov	x21, x1
  466a70:	mov	x1, #0xfffffffffffffff9    	// #-7
  466a74:	mov	x20, x2
  466a78:	ldur	x22, [x0, #-24]
  466a7c:	movk	x1, #0x3fff, lsl #48
  466a80:	sub	x1, x1, x22
  466a84:	cmp	x2, x1
  466a88:	b.hi	466b58 <_obstack_memory_used@@Base+0xa768>  // b.pmore
  466a8c:	ldur	x1, [x0, #-16]
  466a90:	add	x22, x2, x22
  466a94:	cmp	x22, x1
  466a98:	b.ls	466b40 <_obstack_memory_used@@Base+0xa750>  // b.plast
  466a9c:	cmp	x0, x21
  466aa0:	b.hi	466ab4 <_obstack_memory_used@@Base+0xa6c4>  // b.pmore
  466aa4:	ldur	x1, [x0, #-24]
  466aa8:	add	x1, x0, x1
  466aac:	cmp	x21, x1
  466ab0:	b.ls	466b0c <_obstack_memory_used@@Base+0xa71c>  // b.plast
  466ab4:	mov	x1, x22
  466ab8:	mov	x0, x19
  466abc:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  466ac0:	ldr	x1, [x19]
  466ac4:	cmp	x20, #0x1
  466ac8:	ldur	x2, [x1, #-24]
  466acc:	add	x0, x1, x2
  466ad0:	b.eq	466b34 <_obstack_memory_used@@Base+0xa744>  // b.none
  466ad4:	mov	x2, x20
  466ad8:	mov	x1, x21
  466adc:	bl	402cd0 <memcpy@plt>
  466ae0:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466ae4:	ldr	x1, [x19]
  466ae8:	ldr	x0, [x0, #3984]
  466aec:	sub	x2, x1, #0x18
  466af0:	cmp	x2, x0
  466af4:	b.ne	466b64 <_obstack_memory_used@@Base+0xa774>  // b.any
  466af8:	ldp	x21, x22, [sp, #32]
  466afc:	mov	x0, x19
  466b00:	ldp	x19, x20, [sp, #16]
  466b04:	ldp	x29, x30, [sp], #48
  466b08:	ret
  466b0c:	sub	x21, x21, x0
  466b10:	mov	x1, x22
  466b14:	mov	x0, x19
  466b18:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  466b1c:	ldr	x1, [x19]
  466b20:	cmp	x20, #0x1
  466b24:	add	x21, x1, x21
  466b28:	ldur	x2, [x1, #-24]
  466b2c:	add	x0, x1, x2
  466b30:	b.ne	466ad4 <_obstack_memory_used@@Base+0xa6e4>  // b.any
  466b34:	ldrb	w0, [x21]
  466b38:	strb	w0, [x1, x2]
  466b3c:	b	466ae0 <_obstack_memory_used@@Base+0xa6f0>
  466b40:	sub	x0, x0, #0x8
  466b44:	ldar	w0, [x0]
  466b48:	cmp	w0, #0x0
  466b4c:	b.le	466ac0 <_obstack_memory_used@@Base+0xa6d0>
  466b50:	ldr	x0, [x19]
  466b54:	b	466a9c <_obstack_memory_used@@Base+0xa6ac>
  466b58:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466b5c:	add	x0, x0, #0x6d0
  466b60:	bl	4037f8 <ferror@plt+0x228>
  466b64:	stur	x22, [x1, #-24]
  466b68:	stur	wzr, [x1, #-8]
  466b6c:	strb	wzr, [x1, x22]
  466b70:	ldp	x21, x22, [sp, #32]
  466b74:	b	466afc <_obstack_memory_used@@Base+0xa70c>
  466b78:	b	466a50 <_obstack_memory_used@@Base+0xa660>
  466b7c:	nop
  466b80:	stp	x29, x30, [sp, #-32]!
  466b84:	mov	x29, sp
  466b88:	stp	x19, x20, [sp, #16]
  466b8c:	mov	x19, x1
  466b90:	mov	x20, x0
  466b94:	mov	x0, x1
  466b98:	bl	402d50 <strlen@plt>
  466b9c:	mov	x1, x19
  466ba0:	mov	x2, x0
  466ba4:	mov	x0, x20
  466ba8:	ldp	x19, x20, [sp, #16]
  466bac:	ldp	x29, x30, [sp], #32
  466bb0:	b	466a50 <_obstack_memory_used@@Base+0xa660>
  466bb4:	nop
  466bb8:	stp	x29, x30, [sp, #-32]!
  466bbc:	mov	x29, sp
  466bc0:	stp	x19, x20, [sp, #16]
  466bc4:	mov	x19, x1
  466bc8:	mov	x20, x0
  466bcc:	mov	x0, x1
  466bd0:	bl	402d50 <strlen@plt>
  466bd4:	mov	x1, x19
  466bd8:	mov	x2, x0
  466bdc:	mov	x0, x20
  466be0:	ldp	x19, x20, [sp, #16]
  466be4:	ldp	x29, x30, [sp], #32
  466be8:	b	466a50 <_obstack_memory_used@@Base+0xa660>
  466bec:	nop
  466bf0:	b	466a50 <_obstack_memory_used@@Base+0xa660>
  466bf4:	nop
  466bf8:	stp	x29, x30, [sp, #-48]!
  466bfc:	mov	x29, sp
  466c00:	stp	x19, x20, [sp, #16]
  466c04:	mov	x19, x0
  466c08:	cbz	x1, 466c9c <_obstack_memory_used@@Base+0xa8ac>
  466c0c:	ldr	x0, [x0]
  466c10:	mov	x20, x1
  466c14:	stp	x21, x22, [sp, #32]
  466c18:	and	w22, w2, #0xff
  466c1c:	mov	x2, #0xfffffffffffffff9    	// #-7
  466c20:	ldur	x1, [x0, #-24]
  466c24:	movk	x2, #0x3fff, lsl #48
  466c28:	sub	x2, x2, x1
  466c2c:	cmp	x20, x2
  466c30:	b.hi	466cb4 <_obstack_memory_used@@Base+0xa8c4>  // b.pmore
  466c34:	ldur	x2, [x0, #-16]
  466c38:	add	x21, x20, x1
  466c3c:	cmp	x21, x2
  466c40:	b.hi	466c54 <_obstack_memory_used@@Base+0xa864>  // b.pmore
  466c44:	sub	x0, x0, #0x8
  466c48:	ldar	w0, [x0]
  466c4c:	cmp	w0, #0x0
  466c50:	b.le	466c60 <_obstack_memory_used@@Base+0xa870>
  466c54:	mov	x1, x21
  466c58:	mov	x0, x19
  466c5c:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  466c60:	ldr	x1, [x19]
  466c64:	cmp	x20, #0x1
  466c68:	ldur	x2, [x1, #-24]
  466c6c:	add	x0, x1, x2
  466c70:	b.eq	466cac <_obstack_memory_used@@Base+0xa8bc>  // b.none
  466c74:	mov	x2, x20
  466c78:	mov	w1, w22
  466c7c:	bl	403000 <memset@plt>
  466c80:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466c84:	ldr	x1, [x19]
  466c88:	ldr	x0, [x0, #3984]
  466c8c:	sub	x2, x1, #0x18
  466c90:	cmp	x2, x0
  466c94:	b.ne	466cc0 <_obstack_memory_used@@Base+0xa8d0>  // b.any
  466c98:	ldp	x21, x22, [sp, #32]
  466c9c:	mov	x0, x19
  466ca0:	ldp	x19, x20, [sp, #16]
  466ca4:	ldp	x29, x30, [sp], #48
  466ca8:	ret
  466cac:	strb	w22, [x1, x2]
  466cb0:	b	466c80 <_obstack_memory_used@@Base+0xa890>
  466cb4:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466cb8:	add	x0, x0, #0x6d0
  466cbc:	bl	4037f8 <ferror@plt+0x228>
  466cc0:	stur	x21, [x1, #-24]
  466cc4:	stur	wzr, [x1, #-8]
  466cc8:	strb	wzr, [x1, x21]
  466ccc:	ldp	x21, x22, [sp, #32]
  466cd0:	b	466c9c <_obstack_memory_used@@Base+0xa8ac>
  466cd4:	nop
  466cd8:	mov	x4, #0xfffffffffffffff9    	// #-7
  466cdc:	movk	x4, #0x3fff, lsl #48
  466ce0:	cmp	x1, x4
  466ce4:	ldr	x4, [x0]
  466ce8:	ldur	x4, [x4, #-24]
  466cec:	b.hi	466d18 <_obstack_memory_used@@Base+0xa928>  // b.pmore
  466cf0:	cmp	x1, x4
  466cf4:	b.hi	466d0c <_obstack_memory_used@@Base+0xa91c>  // b.pmore
  466cf8:	b.cc	466d00 <_obstack_memory_used@@Base+0xa910>  // b.lo, b.ul, b.last
  466cfc:	ret
  466d00:	sub	x2, x4, x1
  466d04:	mov	x3, #0x0                   	// #0
  466d08:	b	465970 <_obstack_memory_used@@Base+0x9580>
  466d0c:	and	w2, w2, #0xff
  466d10:	sub	x1, x1, x4
  466d14:	b	466bf8 <_obstack_memory_used@@Base+0xa808>
  466d18:	stp	x29, x30, [sp, #-16]!
  466d1c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  466d20:	add	x0, x0, #0xa88
  466d24:	mov	x29, sp
  466d28:	bl	4037f8 <ferror@plt+0x228>
  466d2c:	nop
  466d30:	mov	w2, #0x0                   	// #0
  466d34:	b	466cd8 <_obstack_memory_used@@Base+0xa8e8>
  466d38:	stp	x29, x30, [sp, #-48]!
  466d3c:	mov	x29, sp
  466d40:	stp	x19, x20, [sp, #16]
  466d44:	mov	x19, x0
  466d48:	ldr	x0, [x0]
  466d4c:	stp	x21, x22, [sp, #32]
  466d50:	and	w22, w1, #0xff
  466d54:	ldp	x21, x1, [x0, #-24]
  466d58:	add	x20, x21, #0x1
  466d5c:	cmp	x20, x1
  466d60:	b.hi	466d74 <_obstack_memory_used@@Base+0xa984>  // b.pmore
  466d64:	sub	x0, x0, #0x8
  466d68:	ldar	w0, [x0]
  466d6c:	cmp	w0, #0x0
  466d70:	b.le	466d80 <_obstack_memory_used@@Base+0xa990>
  466d74:	mov	x1, x20
  466d78:	mov	x0, x19
  466d7c:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  466d80:	ldr	x2, [x19]
  466d84:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466d88:	ldr	x0, [x0, #3984]
  466d8c:	ldur	x1, [x2, #-24]
  466d90:	strb	w22, [x2, x1]
  466d94:	ldr	x2, [x19]
  466d98:	sub	x1, x2, #0x18
  466d9c:	cmp	x1, x0
  466da0:	b.ne	466db4 <_obstack_memory_used@@Base+0xa9c4>  // b.any
  466da4:	ldp	x19, x20, [sp, #16]
  466da8:	ldp	x21, x22, [sp, #32]
  466dac:	ldp	x29, x30, [sp], #48
  466db0:	ret
  466db4:	add	x1, x1, x21
  466db8:	stur	x20, [x2, #-24]
  466dbc:	stur	wzr, [x2, #-8]
  466dc0:	strb	wzr, [x1, #25]
  466dc4:	ldp	x19, x20, [sp, #16]
  466dc8:	ldp	x21, x22, [sp, #32]
  466dcc:	ldp	x29, x30, [sp], #48
  466dd0:	ret
  466dd4:	nop
  466dd8:	stp	x29, x30, [sp, #-48]!
  466ddc:	mov	x29, sp
  466de0:	stp	x19, x20, [sp, #16]
  466de4:	mov	x19, x0
  466de8:	ldr	x0, [x0]
  466dec:	stp	x21, x22, [sp, #32]
  466df0:	and	w22, w1, #0xff
  466df4:	ldp	x21, x1, [x0, #-24]
  466df8:	add	x20, x21, #0x1
  466dfc:	cmp	x20, x1
  466e00:	b.hi	466e14 <_obstack_memory_used@@Base+0xaa24>  // b.pmore
  466e04:	sub	x0, x0, #0x8
  466e08:	ldar	w0, [x0]
  466e0c:	cmp	w0, #0x0
  466e10:	b.le	466e20 <_obstack_memory_used@@Base+0xaa30>
  466e14:	mov	x1, x20
  466e18:	mov	x0, x19
  466e1c:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  466e20:	ldr	x2, [x19]
  466e24:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466e28:	ldr	x0, [x0, #3984]
  466e2c:	ldur	x1, [x2, #-24]
  466e30:	strb	w22, [x2, x1]
  466e34:	ldr	x2, [x19]
  466e38:	sub	x1, x2, #0x18
  466e3c:	cmp	x1, x0
  466e40:	b.ne	466e58 <_obstack_memory_used@@Base+0xaa68>  // b.any
  466e44:	mov	x0, x19
  466e48:	ldp	x19, x20, [sp, #16]
  466e4c:	ldp	x21, x22, [sp, #32]
  466e50:	ldp	x29, x30, [sp], #48
  466e54:	ret
  466e58:	add	x1, x1, x21
  466e5c:	stur	x20, [x2, #-24]
  466e60:	stur	wzr, [x2, #-8]
  466e64:	mov	x0, x19
  466e68:	strb	wzr, [x1, #25]
  466e6c:	ldp	x19, x20, [sp, #16]
  466e70:	ldp	x21, x22, [sp, #32]
  466e74:	ldp	x29, x30, [sp], #48
  466e78:	ret
  466e7c:	nop
  466e80:	mov	x2, x0
  466e84:	add	x3, x0, #0x10
  466e88:	ldr	w4, [x3]
  466e8c:	tbnz	w4, #31, 466ea8 <_obstack_memory_used@@Base+0xaab8>
  466e90:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466e94:	ldr	x0, [x0, #3984]
  466e98:	cmp	x2, x0
  466e9c:	b.ne	466eb0 <_obstack_memory_used@@Base+0xaac0>  // b.any
  466ea0:	add	x0, x2, #0x18
  466ea4:	ret
  466ea8:	mov	x2, #0x0                   	// #0
  466eac:	b	4666a0 <_obstack_memory_used@@Base+0xa2b0>
  466eb0:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466eb4:	ldr	x0, [x0, #3600]
  466eb8:	cbz	x0, 466ed4 <_obstack_memory_used@@Base+0xaae4>
  466ebc:	ldaxr	w0, [x3]
  466ec0:	add	w0, w0, #0x1
  466ec4:	stlxr	w1, w0, [x3]
  466ec8:	cbnz	w1, 466ebc <_obstack_memory_used@@Base+0xaacc>
  466ecc:	add	x0, x2, #0x18
  466ed0:	ret
  466ed4:	ldr	w0, [x2, #16]
  466ed8:	add	w0, w0, #0x1
  466edc:	str	w0, [x2, #16]
  466ee0:	b	466ea0 <_obstack_memory_used@@Base+0xaab0>
  466ee4:	nop
  466ee8:	stp	x29, x30, [sp, #-48]!
  466eec:	mov	x29, sp
  466ef0:	ldr	x1, [x1]
  466ef4:	str	x19, [sp, #16]
  466ef8:	mov	x19, x0
  466efc:	sub	x0, x1, #0x18
  466f00:	add	x3, x0, #0x10
  466f04:	ldr	w2, [x3]
  466f08:	tbnz	w2, #31, 466f2c <_obstack_memory_used@@Base+0xab3c>
  466f0c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466f10:	ldr	x2, [x2, #3984]
  466f14:	cmp	x0, x2
  466f18:	b.ne	466f4c <_obstack_memory_used@@Base+0xab5c>  // b.any
  466f1c:	str	x1, [x19]
  466f20:	ldr	x19, [sp, #16]
  466f24:	ldp	x29, x30, [sp], #48
  466f28:	ret
  466f2c:	add	x1, sp, #0x28
  466f30:	mov	x2, #0x0                   	// #0
  466f34:	bl	4666a0 <_obstack_memory_used@@Base+0xa2b0>
  466f38:	mov	x1, x0
  466f3c:	str	x1, [x19]
  466f40:	ldr	x19, [sp, #16]
  466f44:	ldp	x29, x30, [sp], #48
  466f48:	ret
  466f4c:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466f50:	ldr	x0, [x0, #3600]
  466f54:	cbz	x0, 466f78 <_obstack_memory_used@@Base+0xab88>
  466f58:	ldaxr	w0, [x3]
  466f5c:	add	w0, w0, #0x1
  466f60:	stlxr	w2, w0, [x3]
  466f64:	cbnz	w2, 466f58 <_obstack_memory_used@@Base+0xab68>
  466f68:	str	x1, [x19]
  466f6c:	ldr	x19, [sp, #16]
  466f70:	ldp	x29, x30, [sp], #48
  466f74:	ret
  466f78:	ldur	w0, [x1, #-8]
  466f7c:	add	w0, w0, #0x1
  466f80:	stur	w0, [x1, #-8]
  466f84:	b	466f1c <_obstack_memory_used@@Base+0xab2c>
  466f88:	stp	x29, x30, [sp, #-32]!
  466f8c:	mov	x29, sp
  466f90:	ldr	x3, [x1]
  466f94:	str	x19, [sp, #16]
  466f98:	mov	x19, x0
  466f9c:	sub	x0, x3, #0x18
  466fa0:	add	x4, x0, #0x10
  466fa4:	ldr	w1, [x4]
  466fa8:	tbnz	w1, #31, 466fcc <_obstack_memory_used@@Base+0xabdc>
  466fac:	adrp	x1, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466fb0:	ldr	x1, [x1, #3984]
  466fb4:	cmp	x0, x1
  466fb8:	b.ne	466fec <_obstack_memory_used@@Base+0xabfc>  // b.any
  466fbc:	str	x3, [x19]
  466fc0:	ldr	x19, [sp, #16]
  466fc4:	ldp	x29, x30, [sp], #32
  466fc8:	ret
  466fcc:	mov	x1, x2
  466fd0:	mov	x2, #0x0                   	// #0
  466fd4:	bl	4666a0 <_obstack_memory_used@@Base+0xa2b0>
  466fd8:	mov	x3, x0
  466fdc:	str	x3, [x19]
  466fe0:	ldr	x19, [sp, #16]
  466fe4:	ldp	x29, x30, [sp], #32
  466fe8:	ret
  466fec:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  466ff0:	ldr	x0, [x0, #3600]
  466ff4:	cbz	x0, 467018 <_obstack_memory_used@@Base+0xac28>
  466ff8:	ldaxr	w0, [x4]
  466ffc:	add	w0, w0, #0x1
  467000:	stlxr	w1, w0, [x4]
  467004:	cbnz	w1, 466ff8 <_obstack_memory_used@@Base+0xac08>
  467008:	str	x3, [x19]
  46700c:	ldr	x19, [sp, #16]
  467010:	ldp	x29, x30, [sp], #32
  467014:	ret
  467018:	ldur	w0, [x3, #-8]
  46701c:	add	w0, w0, #0x1
  467020:	stur	w0, [x3, #-8]
  467024:	b	466fbc <_obstack_memory_used@@Base+0xabcc>
  467028:	stp	x29, x30, [sp, #-48]!
  46702c:	mov	x29, sp
  467030:	stp	x19, x20, [sp, #16]
  467034:	mov	x19, x0
  467038:	ldr	x20, [x1]
  46703c:	ldr	x1, [x0]
  467040:	cmp	x1, x20
  467044:	b.eq	46707c <_obstack_memory_used@@Base+0xac8c>  // b.none
  467048:	sub	x0, x20, #0x18
  46704c:	add	x3, x0, #0x10
  467050:	ldr	w2, [x3]
  467054:	tbnz	w2, #31, 46708c <_obstack_memory_used@@Base+0xac9c>
  467058:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46705c:	ldr	x4, [x2, #3984]
  467060:	cmp	x0, x4
  467064:	b.ne	4670f0 <_obstack_memory_used@@Base+0xad00>  // b.any
  467068:	ldr	x2, [x2, #3984]
  46706c:	sub	x0, x1, #0x18
  467070:	cmp	x0, x2
  467074:	b.ne	4670a8 <_obstack_memory_used@@Base+0xacb8>  // b.any
  467078:	str	x20, [x19]
  46707c:	mov	x0, x19
  467080:	ldp	x19, x20, [sp, #16]
  467084:	ldp	x29, x30, [sp], #48
  467088:	ret
  46708c:	add	x1, sp, #0x28
  467090:	mov	x2, #0x0                   	// #0
  467094:	bl	4666a0 <_obstack_memory_used@@Base+0xa2b0>
  467098:	mov	x20, x0
  46709c:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4670a0:	ldr	x1, [x19]
  4670a4:	b	467068 <_obstack_memory_used@@Base+0xac78>
  4670a8:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4670ac:	ldr	x2, [x2, #3600]
  4670b0:	cbz	x2, 4670e0 <_obstack_memory_used@@Base+0xacf0>
  4670b4:	sub	x1, x1, #0x8
  4670b8:	ldaxr	w2, [x1]
  4670bc:	sub	w3, w2, #0x1
  4670c0:	stlxr	w4, w3, [x1]
  4670c4:	cbnz	w4, 4670b8 <_obstack_memory_used@@Base+0xacc8>
  4670c8:	cmp	w2, #0x0
  4670cc:	b.gt	467078 <_obstack_memory_used@@Base+0xac88>
  4670d0:	add	x1, sp, #0x28
  4670d4:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  4670d8:	str	x20, [x19]
  4670dc:	b	46707c <_obstack_memory_used@@Base+0xac8c>
  4670e0:	ldur	w2, [x1, #-8]
  4670e4:	sub	w3, w2, #0x1
  4670e8:	stur	w3, [x1, #-8]
  4670ec:	b	4670c8 <_obstack_memory_used@@Base+0xacd8>
  4670f0:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4670f4:	ldr	x0, [x0, #3600]
  4670f8:	cbz	x0, 467114 <_obstack_memory_used@@Base+0xad24>
  4670fc:	ldaxr	w0, [x3]
  467100:	add	w0, w0, #0x1
  467104:	stlxr	w1, w0, [x3]
  467108:	cbnz	w1, 4670fc <_obstack_memory_used@@Base+0xad0c>
  46710c:	ldr	x1, [x19]
  467110:	b	467068 <_obstack_memory_used@@Base+0xac78>
  467114:	ldur	w0, [x20, #-8]
  467118:	add	w0, w0, #0x1
  46711c:	stur	w0, [x20, #-8]
  467120:	b	467068 <_obstack_memory_used@@Base+0xac78>
  467124:	nop
  467128:	b	467028 <_obstack_memory_used@@Base+0xac38>
  46712c:	nop
  467130:	stp	x29, x30, [sp, #-80]!
  467134:	mov	x29, sp
  467138:	str	x23, [sp, #48]
  46713c:	adrp	x23, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  467140:	stp	x19, x20, [sp, #16]
  467144:	mov	x19, x8
  467148:	mov	x20, x1
  46714c:	stp	x21, x22, [sp, #32]
  467150:	mov	x22, x0
  467154:	bl	402d50 <strlen@plt>
  467158:	ldr	x1, [x23, #3984]
  46715c:	mov	x21, x0
  467160:	mov	x0, x19
  467164:	add	x1, x1, #0x18
  467168:	str	x1, [x19]
  46716c:	ldr	x1, [x20]
  467170:	ldur	x1, [x1, #-24]
  467174:	add	x1, x21, x1
  467178:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  46717c:	mov	x2, x21
  467180:	mov	x1, x22
  467184:	mov	x0, x19
  467188:	bl	466a50 <_obstack_memory_used@@Base+0xa660>
  46718c:	mov	x1, x20
  467190:	mov	x0, x19
  467194:	bl	466868 <_obstack_memory_used@@Base+0xa478>
  467198:	mov	x0, x19
  46719c:	ldp	x19, x20, [sp, #16]
  4671a0:	ldp	x21, x22, [sp, #32]
  4671a4:	ldr	x23, [sp, #48]
  4671a8:	ldp	x29, x30, [sp], #80
  4671ac:	ret
  4671b0:	ldr	x1, [x19]
  4671b4:	mov	x19, x0
  4671b8:	ldr	x23, [x23, #3984]
  4671bc:	sub	x0, x1, #0x18
  4671c0:	cmp	x0, x23
  4671c4:	b.eq	4671d0 <_obstack_memory_used@@Base+0xade0>  // b.none
  4671c8:	add	x1, sp, #0x48
  4671cc:	bl	4657a8 <_obstack_memory_used@@Base+0x93b8>
  4671d0:	mov	x0, x19
  4671d4:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4671d8:	stp	x29, x30, [sp, #-64]!
  4671dc:	mov	x29, sp
  4671e0:	stp	x21, x22, [sp, #32]
  4671e4:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4671e8:	and	w22, w0, #0xff
  4671ec:	ldr	x2, [x21, #3984]
  4671f0:	stp	x19, x20, [sp, #16]
  4671f4:	mov	x20, x1
  4671f8:	add	x2, x2, #0x18
  4671fc:	str	x2, [x8]
  467200:	mov	x19, x8
  467204:	mov	x0, x8
  467208:	ldr	x1, [x1]
  46720c:	ldur	x1, [x1, #-24]
  467210:	add	x1, x1, #0x1
  467214:	bl	466758 <_obstack_memory_used@@Base+0xa368>
  467218:	mov	w2, w22
  46721c:	mov	x0, x19
  467220:	mov	x1, #0x1                   	// #1
  467224:	bl	466bf8 <_obstack_memory_used@@Base+0xa808>
  467228:	mov	x1, x20
  46722c:	mov	x0, x19
  467230:	bl	466868 <_obstack_memory_used@@Base+0xa478>
  467234:	mov	x0, x19
  467238:	ldp	x19, x20, [sp, #16]
  46723c:	ldp	x21, x22, [sp, #32]
  467240:	ldp	x29, x30, [sp], #64
  467244:	ret
  467248:	ldr	x1, [x19]
  46724c:	mov	x19, x0
  467250:	ldr	x21, [x21, #3984]
  467254:	sub	x0, x1, #0x18
  467258:	cmp	x0, x21
  46725c:	b.eq	467268 <_obstack_memory_used@@Base+0xae78>  // b.none
  467260:	add	x1, sp, #0x38
  467264:	bl	4657a8 <_obstack_memory_used@@Base+0x93b8>
  467268:	mov	x0, x19
  46726c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  467270:	stp	x29, x30, [sp, #-48]!
  467274:	mov	x29, sp
  467278:	stp	x19, x20, [sp, #16]
  46727c:	mov	x19, x8
  467280:	mov	x20, x1
  467284:	mov	x1, x0
  467288:	mov	x0, x8
  46728c:	bl	466ee8 <_obstack_memory_used@@Base+0xaaf8>
  467290:	mov	x1, x20
  467294:	mov	x0, x19
  467298:	bl	466868 <_obstack_memory_used@@Base+0xa478>
  46729c:	mov	x0, x19
  4672a0:	ldp	x19, x20, [sp, #16]
  4672a4:	ldp	x29, x30, [sp], #48
  4672a8:	ret
  4672ac:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4672b0:	ldr	x1, [x19]
  4672b4:	mov	x19, x0
  4672b8:	ldr	x2, [x2, #3984]
  4672bc:	sub	x0, x1, #0x18
  4672c0:	cmp	x0, x2
  4672c4:	b.eq	4672d0 <_obstack_memory_used@@Base+0xaee0>  // b.none
  4672c8:	add	x1, sp, #0x28
  4672cc:	bl	4657a8 <_obstack_memory_used@@Base+0x93b8>
  4672d0:	mov	x0, x19
  4672d4:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  4672d8:	cmp	x1, x0
  4672dc:	b.eq	46734c <_obstack_memory_used@@Base+0xaf5c>  // b.none
  4672e0:	stp	x29, x30, [sp, #-48]!
  4672e4:	mov	x29, sp
  4672e8:	stp	x19, x20, [sp, #16]
  4672ec:	sub	x19, x1, x0
  4672f0:	mov	x20, x0
  4672f4:	mov	x1, #0x0                   	// #0
  4672f8:	mov	x0, x19
  4672fc:	str	x21, [sp, #32]
  467300:	bl	465540 <_obstack_memory_used@@Base+0x9150>
  467304:	cmp	x19, #0x1
  467308:	mov	x21, x0
  46730c:	add	x3, x0, #0x18
  467310:	b.eq	467360 <_obstack_memory_used@@Base+0xaf70>  // b.none
  467314:	mov	x0, x3
  467318:	mov	x1, x20
  46731c:	mov	x2, x19
  467320:	bl	402cd0 <memcpy@plt>
  467324:	mov	x3, x0
  467328:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46732c:	ldr	x0, [x0, #3984]
  467330:	cmp	x21, x0
  467334:	b.ne	46736c <_obstack_memory_used@@Base+0xaf7c>  // b.any
  467338:	mov	x0, x3
  46733c:	ldp	x19, x20, [sp, #16]
  467340:	ldr	x21, [sp, #32]
  467344:	ldp	x29, x30, [sp], #48
  467348:	ret
  46734c:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  467350:	ldr	x3, [x3, #3984]
  467354:	add	x3, x3, #0x18
  467358:	mov	x0, x3
  46735c:	ret
  467360:	ldrb	w0, [x20]
  467364:	strb	w0, [x21, #24]
  467368:	b	467328 <_obstack_memory_used@@Base+0xaf38>
  46736c:	add	x0, x21, x19
  467370:	str	x19, [x21]
  467374:	str	wzr, [x21, #16]
  467378:	strb	wzr, [x0, #24]
  46737c:	b	467338 <_obstack_memory_used@@Base+0xaf48>
  467380:	stp	x29, x30, [sp, #-32]!
  467384:	mov	x29, sp
  467388:	str	x19, [sp, #16]
  46738c:	mov	x19, x0
  467390:	mov	x0, x1
  467394:	mov	x1, x2
  467398:	mov	x2, x3
  46739c:	mov	w3, #0x0                   	// #0
  4673a0:	bl	4672d8 <_obstack_memory_used@@Base+0xaee8>
  4673a4:	str	x0, [x19]
  4673a8:	ldr	x19, [sp, #16]
  4673ac:	ldp	x29, x30, [sp], #32
  4673b0:	ret
  4673b4:	nop
  4673b8:	cmp	x0, x1
  4673bc:	b.eq	4673c8 <_obstack_memory_used@@Base+0xafd8>  // b.none
  4673c0:	cbz	x0, 4673d8 <_obstack_memory_used@@Base+0xafe8>
  4673c4:	b	4656f0 <_obstack_memory_used@@Base+0x9300>
  4673c8:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4673cc:	ldr	x0, [x0, #3984]
  4673d0:	add	x0, x0, #0x18
  4673d4:	ret
  4673d8:	stp	x29, x30, [sp, #-16]!
  4673dc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4673e0:	add	x0, x0, #0xaa0
  4673e4:	mov	x29, sp
  4673e8:	bl	4036fc <ferror@plt+0x12c>
  4673ec:	nop
  4673f0:	stp	x29, x30, [sp, #-32]!
  4673f4:	mov	x29, sp
  4673f8:	str	x19, [sp, #16]
  4673fc:	mov	x19, x0
  467400:	ldr	x0, [x1]
  467404:	ldur	x1, [x0, #-24]
  467408:	cmp	x2, x1
  46740c:	b.hi	467438 <_obstack_memory_used@@Base+0xb048>  // b.pmore
  467410:	mov	x4, x2
  467414:	add	x1, x0, x1
  467418:	mov	x2, x3
  46741c:	add	x0, x0, x4
  467420:	mov	w3, #0x0                   	// #0
  467424:	bl	4673b8 <_obstack_memory_used@@Base+0xafc8>
  467428:	str	x0, [x19]
  46742c:	ldr	x19, [sp, #16]
  467430:	ldp	x29, x30, [sp], #32
  467434:	ret
  467438:	mov	x3, x1
  46743c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467440:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467444:	add	x0, x0, #0x5b0
  467448:	add	x1, x1, #0x748
  46744c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  467450:	stp	x29, x30, [sp, #-48]!
  467454:	mov	x29, sp
  467458:	ldr	x1, [x1]
  46745c:	ldur	x4, [x1, #-24]
  467460:	str	x19, [sp, #16]
  467464:	cmp	x4, x2
  467468:	b.cc	4674ac <_obstack_memory_used@@Base+0xb0bc>  // b.lo, b.ul, b.last
  46746c:	sub	x4, x4, x2
  467470:	mov	x6, x3
  467474:	cmp	x4, x3
  467478:	mov	x5, x2
  46747c:	csel	x4, x4, x6, ls  // ls = plast
  467480:	mov	x19, x0
  467484:	add	x4, x4, x5
  467488:	add	x0, x1, x2
  46748c:	mov	w3, #0x0                   	// #0
  467490:	add	x2, sp, #0x28
  467494:	add	x1, x1, x4
  467498:	bl	4673b8 <_obstack_memory_used@@Base+0xafc8>
  46749c:	str	x0, [x19]
  4674a0:	ldr	x19, [sp, #16]
  4674a4:	ldp	x29, x30, [sp], #48
  4674a8:	ret
  4674ac:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4674b0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  4674b4:	mov	x3, x4
  4674b8:	add	x1, x1, #0x748
  4674bc:	add	x0, x0, #0x5b0
  4674c0:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4674c4:	nop
  4674c8:	stp	x29, x30, [sp, #-32]!
  4674cc:	mov	x4, x1
  4674d0:	mov	x1, x0
  4674d4:	mov	x29, sp
  4674d8:	ldr	x0, [x0]
  4674dc:	ldur	x0, [x0, #-24]
  4674e0:	str	x19, [sp, #16]
  4674e4:	cmp	x4, x0
  4674e8:	b.hi	467510 <_obstack_memory_used@@Base+0xb120>  // b.pmore
  4674ec:	mov	x19, x8
  4674f0:	mov	x3, x2
  4674f4:	mov	x0, x8
  4674f8:	mov	x2, x4
  4674fc:	bl	467450 <_obstack_memory_used@@Base+0xb060>
  467500:	mov	x0, x19
  467504:	ldr	x19, [sp, #16]
  467508:	ldp	x29, x30, [sp], #32
  46750c:	ret
  467510:	mov	x3, x0
  467514:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467518:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46751c:	mov	x2, x4
  467520:	add	x1, x1, #0x778
  467524:	add	x0, x0, #0x5b0
  467528:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  46752c:	nop
  467530:	stp	x29, x30, [sp, #-32]!
  467534:	mov	x29, sp
  467538:	ldr	x1, [x1]
  46753c:	ldur	x5, [x1, #-24]
  467540:	str	x19, [sp, #16]
  467544:	cmp	x2, x5
  467548:	b.hi	467588 <_obstack_memory_used@@Base+0xb198>  // b.pmore
  46754c:	sub	x5, x5, x2
  467550:	mov	x6, x2
  467554:	cmp	x5, x3
  467558:	mov	x19, x0
  46755c:	csel	x5, x5, x3, ls  // ls = plast
  467560:	add	x0, x1, x6
  467564:	add	x5, x5, x6
  467568:	mov	x2, x4
  46756c:	add	x1, x1, x5
  467570:	mov	w3, #0x0                   	// #0
  467574:	bl	4673b8 <_obstack_memory_used@@Base+0xafc8>
  467578:	str	x0, [x19]
  46757c:	ldr	x19, [sp, #16]
  467580:	ldp	x29, x30, [sp], #32
  467584:	ret
  467588:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46758c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467590:	mov	x3, x5
  467594:	add	x1, x1, #0x748
  467598:	add	x0, x0, #0x5b0
  46759c:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4675a0:	stp	x29, x30, [sp, #-32]!
  4675a4:	mov	x29, sp
  4675a8:	str	x19, [sp, #16]
  4675ac:	mov	x19, x0
  4675b0:	mov	x0, x1
  4675b4:	mov	x1, x2
  4675b8:	mov	x2, x3
  4675bc:	mov	w3, #0x0                   	// #0
  4675c0:	bl	4673b8 <_obstack_memory_used@@Base+0xafc8>
  4675c4:	str	x0, [x19]
  4675c8:	ldr	x19, [sp, #16]
  4675cc:	ldp	x29, x30, [sp], #32
  4675d0:	ret
  4675d4:	nop
  4675d8:	cmp	x0, x1
  4675dc:	b.eq	4675e8 <_obstack_memory_used@@Base+0xb1f8>  // b.none
  4675e0:	cbz	x0, 4675f8 <_obstack_memory_used@@Base+0xb208>
  4675e4:	b	4656f0 <_obstack_memory_used@@Base+0x9300>
  4675e8:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4675ec:	ldr	x0, [x0, #3984]
  4675f0:	add	x0, x0, #0x18
  4675f4:	ret
  4675f8:	stp	x29, x30, [sp, #-16]!
  4675fc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467600:	add	x0, x0, #0xaa0
  467604:	mov	x29, sp
  467608:	bl	4036fc <ferror@plt+0x12c>
  46760c:	nop
  467610:	stp	x29, x30, [sp, #-32]!
  467614:	mov	x29, sp
  467618:	str	x19, [sp, #16]
  46761c:	mov	x19, x0
  467620:	mov	x0, x1
  467624:	add	x1, x1, x2
  467628:	mov	x2, x3
  46762c:	mov	w3, #0x0                   	// #0
  467630:	bl	4675d8 <_obstack_memory_used@@Base+0xb1e8>
  467634:	str	x0, [x19]
  467638:	ldr	x19, [sp, #16]
  46763c:	ldp	x29, x30, [sp], #32
  467640:	ret
  467644:	nop
  467648:	stp	x29, x30, [sp, #-80]!
  46764c:	mov	x29, sp
  467650:	ldr	x6, [x0]
  467654:	stp	x19, x20, [sp, #16]
  467658:	stp	x21, x22, [sp, #32]
  46765c:	mov	x22, x1
  467660:	ldur	x5, [x6, #-24]
  467664:	cmp	x1, x5
  467668:	b.hi	467808 <_obstack_memory_used@@Base+0xb418>  // b.pmore
  46766c:	sub	x20, x5, x1
  467670:	mov	x19, x0
  467674:	cmp	x20, x2
  467678:	mov	x0, #0xfffffffffffffff9    	// #-7
  46767c:	csel	x20, x20, x2, ls  // ls = plast
  467680:	movk	x0, #0x3fff, lsl #48
  467684:	sub	x0, x0, x5
  467688:	add	x0, x0, x20
  46768c:	cmp	x4, x0
  467690:	b.hi	4677fc <_obstack_memory_used@@Base+0xb40c>  // b.pmore
  467694:	cmp	x6, x3
  467698:	b.ls	4676c4 <_obstack_memory_used@@Base+0xb2d4>  // b.plast
  46769c:	mov	x0, x19
  4676a0:	mov	x2, x20
  4676a4:	mov	x1, x22
  4676a8:	bl	466130 <_obstack_memory_used@@Base+0x9d40>
  4676ac:	mov	x19, x0
  4676b0:	mov	x0, x19
  4676b4:	ldp	x19, x20, [sp, #16]
  4676b8:	ldp	x21, x22, [sp, #32]
  4676bc:	ldp	x29, x30, [sp], #80
  4676c0:	ret
  4676c4:	add	x5, x6, x5
  4676c8:	cmp	x3, x5
  4676cc:	b.hi	46769c <_obstack_memory_used@@Base+0xb2ac>  // b.pmore
  4676d0:	sub	x6, x6, #0x8
  4676d4:	ldar	w0, [x6]
  4676d8:	cmp	w0, #0x0
  4676dc:	b.gt	46769c <_obstack_memory_used@@Base+0xb2ac>
  4676e0:	ldr	x21, [x19]
  4676e4:	add	x0, x3, x4
  4676e8:	add	x1, x21, x1
  4676ec:	cmp	x0, x1
  4676f0:	b.ls	4677d8 <_obstack_memory_used@@Base+0xb3e8>  // b.plast
  4676f4:	add	x0, x22, x20
  4676f8:	add	x0, x21, x0
  4676fc:	cmp	x3, x0
  467700:	b.cc	467750 <_obstack_memory_used@@Base+0xb360>  // b.lo, b.ul, b.last
  467704:	sub	x3, x3, x21
  467708:	add	x3, x3, x4
  46770c:	sub	x21, x3, x20
  467710:	mov	x2, x20
  467714:	mov	x3, x4
  467718:	mov	x1, x22
  46771c:	mov	x0, x19
  467720:	str	x4, [sp, #56]
  467724:	bl	465970 <_obstack_memory_used@@Base+0x9580>
  467728:	ldr	x2, [x19]
  46772c:	ldr	x4, [sp, #56]
  467730:	add	x0, x2, x22
  467734:	add	x1, x2, x21
  467738:	cmp	x4, #0x1
  46773c:	b.eq	4677e0 <_obstack_memory_used@@Base+0xb3f0>  // b.none
  467740:	cbz	x4, 4676b0 <_obstack_memory_used@@Base+0xb2c0>
  467744:	mov	x2, x4
  467748:	bl	402cd0 <memcpy@plt>
  46774c:	b	4676b0 <_obstack_memory_used@@Base+0xb2c0>
  467750:	add	x21, sp, #0x40
  467754:	mov	x1, x3
  467758:	mov	x2, x4
  46775c:	mov	x3, x21
  467760:	add	x0, sp, #0x48
  467764:	str	x4, [sp, #56]
  467768:	bl	467610 <_obstack_memory_used@@Base+0xb220>
  46776c:	ldr	x4, [sp, #56]
  467770:	mov	x2, x20
  467774:	ldr	x3, [sp, #72]
  467778:	mov	x1, x22
  46777c:	mov	x0, x19
  467780:	bl	466130 <_obstack_memory_used@@Base+0x9d40>
  467784:	mov	x19, x0
  467788:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  46778c:	ldr	x1, [sp, #72]
  467790:	ldr	x0, [x0, #3984]
  467794:	sub	x2, x1, #0x18
  467798:	cmp	x2, x0
  46779c:	b.eq	4676b0 <_obstack_memory_used@@Base+0xb2c0>  // b.none
  4677a0:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4677a4:	ldr	x0, [x0, #3600]
  4677a8:	cbz	x0, 4677ec <_obstack_memory_used@@Base+0xb3fc>
  4677ac:	sub	x1, x1, #0x8
  4677b0:	ldaxr	w0, [x1]
  4677b4:	sub	w3, w0, #0x1
  4677b8:	stlxr	w4, w3, [x1]
  4677bc:	cbnz	w4, 4677b0 <_obstack_memory_used@@Base+0xb3c0>
  4677c0:	cmp	w0, #0x0
  4677c4:	b.gt	4676b0 <_obstack_memory_used@@Base+0xb2c0>
  4677c8:	mov	x1, x21
  4677cc:	mov	x0, x2
  4677d0:	bl	4657a0 <_obstack_memory_used@@Base+0x93b0>
  4677d4:	b	4676b0 <_obstack_memory_used@@Base+0xb2c0>
  4677d8:	sub	x21, x3, x21
  4677dc:	b	467710 <_obstack_memory_used@@Base+0xb320>
  4677e0:	ldrb	w0, [x2, x21]
  4677e4:	strb	w0, [x2, x22]
  4677e8:	b	4676b0 <_obstack_memory_used@@Base+0xb2c0>
  4677ec:	ldur	w0, [x1, #-8]
  4677f0:	sub	w3, w0, #0x1
  4677f4:	stur	w3, [x1, #-8]
  4677f8:	b	4677c0 <_obstack_memory_used@@Base+0xb3d0>
  4677fc:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467800:	add	x0, x0, #0x680
  467804:	bl	4037f8 <ferror@plt+0x228>
  467808:	mov	x2, x1
  46780c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467810:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467814:	mov	x3, x5
  467818:	add	x1, x1, #0x680
  46781c:	add	x0, x0, #0x5b0
  467820:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  467824:	adrp	x2, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  467828:	mov	x19, x0
  46782c:	ldr	x1, [sp, #72]
  467830:	ldr	x2, [x2, #3984]
  467834:	sub	x0, x1, #0x18
  467838:	cmp	x0, x2
  46783c:	b.eq	467848 <_obstack_memory_used@@Base+0xb458>  // b.none
  467840:	mov	x1, x21
  467844:	bl	4657a8 <_obstack_memory_used@@Base+0x93b8>
  467848:	mov	x0, x19
  46784c:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  467850:	ldr	x3, [x3]
  467854:	ldur	x4, [x3, #-24]
  467858:	b	467648 <_obstack_memory_used@@Base+0xb258>
  46785c:	nop
  467860:	ldr	x3, [x3]
  467864:	ldur	x6, [x3, #-24]
  467868:	cmp	x4, x6
  46786c:	b.hi	467884 <_obstack_memory_used@@Base+0xb494>  // b.pmore
  467870:	sub	x6, x6, x4
  467874:	add	x3, x3, x4
  467878:	cmp	x6, x5
  46787c:	csel	x4, x6, x5, ls  // ls = plast
  467880:	b	467648 <_obstack_memory_used@@Base+0xb258>
  467884:	stp	x29, x30, [sp, #-16]!
  467888:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46788c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467890:	mov	x29, sp
  467894:	mov	x3, x6
  467898:	mov	x2, x4
  46789c:	add	x1, x1, #0x680
  4678a0:	add	x0, x0, #0x5b0
  4678a4:	bl	45e170 <_obstack_memory_used@@Base+0x1d80>
  4678a8:	stp	x29, x30, [sp, #-48]!
  4678ac:	mov	x29, sp
  4678b0:	stp	x19, x20, [sp, #16]
  4678b4:	mov	x19, x3
  4678b8:	mov	x20, x0
  4678bc:	mov	x0, x3
  4678c0:	stp	x21, x22, [sp, #32]
  4678c4:	mov	x21, x1
  4678c8:	mov	x22, x2
  4678cc:	bl	402d50 <strlen@plt>
  4678d0:	mov	x3, x19
  4678d4:	mov	x4, x0
  4678d8:	mov	x2, x22
  4678dc:	mov	x1, x21
  4678e0:	mov	x0, x20
  4678e4:	ldp	x19, x20, [sp, #16]
  4678e8:	ldp	x21, x22, [sp, #32]
  4678ec:	ldp	x29, x30, [sp], #48
  4678f0:	b	467648 <_obstack_memory_used@@Base+0xb258>
  4678f4:	nop
  4678f8:	ldr	x5, [x0]
  4678fc:	sub	x2, x2, x1
  467900:	sub	x1, x1, x5
  467904:	b	467648 <_obstack_memory_used@@Base+0xb258>
  467908:	ldr	x3, [x3]
  46790c:	sub	x2, x2, x1
  467910:	ldr	x5, [x0]
  467914:	ldur	x4, [x3, #-24]
  467918:	sub	x1, x1, x5
  46791c:	b	467648 <_obstack_memory_used@@Base+0xb258>
  467920:	stp	x29, x30, [sp, #-48]!
  467924:	mov	x29, sp
  467928:	stp	x19, x20, [sp, #16]
  46792c:	mov	x20, x0
  467930:	mov	x19, x1
  467934:	mov	x0, x3
  467938:	stp	x21, x22, [sp, #32]
  46793c:	mov	x21, x3
  467940:	mov	x22, x2
  467944:	bl	402d50 <strlen@plt>
  467948:	ldr	x1, [x20]
  46794c:	sub	x2, x22, x19
  467950:	mov	x3, x21
  467954:	mov	x4, x0
  467958:	sub	x1, x19, x1
  46795c:	mov	x0, x20
  467960:	ldp	x19, x20, [sp, #16]
  467964:	ldp	x21, x22, [sp, #32]
  467968:	ldp	x29, x30, [sp], #48
  46796c:	b	467648 <_obstack_memory_used@@Base+0xb258>
  467970:	ldr	x5, [x0]
  467974:	sub	x2, x2, x1
  467978:	sub	x4, x4, x3
  46797c:	sub	x1, x1, x5
  467980:	b	467648 <_obstack_memory_used@@Base+0xb258>
  467984:	nop
  467988:	ldr	x5, [x0]
  46798c:	sub	x2, x2, x1
  467990:	sub	x4, x4, x3
  467994:	sub	x1, x1, x5
  467998:	b	467648 <_obstack_memory_used@@Base+0xb258>
  46799c:	nop
  4679a0:	ldr	x5, [x0]
  4679a4:	sub	x2, x2, x1
  4679a8:	sub	x1, x1, x5
  4679ac:	b	467648 <_obstack_memory_used@@Base+0xb258>
  4679b0:	ldr	x5, [x0]
  4679b4:	sub	x2, x2, x1
  4679b8:	sub	x4, x4, x3
  4679bc:	sub	x1, x1, x5
  4679c0:	b	467648 <_obstack_memory_used@@Base+0xb258>
  4679c4:	nop
  4679c8:	ldr	x5, [x0]
  4679cc:	sub	x2, x2, x1
  4679d0:	sub	x4, x4, x3
  4679d4:	sub	x1, x1, x5
  4679d8:	b	467648 <_obstack_memory_used@@Base+0xb258>
  4679dc:	nop
  4679e0:	stp	x29, x30, [sp, #-48]!
  4679e4:	mov	x29, sp
  4679e8:	stp	x19, x20, [sp, #16]
  4679ec:	mov	x19, x1
  4679f0:	mov	x20, x0
  4679f4:	str	x21, [sp, #32]
  4679f8:	mov	x1, #0xffffffffffffffff    	// #-1
  4679fc:	mov	x21, x2
  467a00:	cbz	x19, 467a10 <_obstack_memory_used@@Base+0xb620>
  467a04:	mov	x0, x19
  467a08:	bl	402d50 <strlen@plt>
  467a0c:	add	x1, x19, x0
  467a10:	mov	x2, x21
  467a14:	mov	x0, x19
  467a18:	mov	w3, #0x0                   	// #0
  467a1c:	bl	4675d8 <_obstack_memory_used@@Base+0xb1e8>
  467a20:	ldr	x21, [sp, #32]
  467a24:	str	x0, [x20]
  467a28:	ldp	x19, x20, [sp, #16]
  467a2c:	ldp	x29, x30, [sp], #48
  467a30:	ret
  467a34:	nop
  467a38:	stp	x29, x30, [sp, #-32]!
  467a3c:	mov	x29, sp
  467a40:	str	x19, [sp, #16]
  467a44:	mov	x19, x0
  467a48:	mov	x0, x1
  467a4c:	add	x1, x1, x2
  467a50:	mov	x2, x3
  467a54:	mov	w3, #0x0                   	// #0
  467a58:	bl	4675d8 <_obstack_memory_used@@Base+0xb1e8>
  467a5c:	str	x0, [x19]
  467a60:	ldr	x19, [sp, #16]
  467a64:	ldp	x29, x30, [sp], #32
  467a68:	ret
  467a6c:	nop
  467a70:	stp	x29, x30, [sp, #-32]!
  467a74:	mov	x29, sp
  467a78:	str	x19, [sp, #16]
  467a7c:	mov	x19, x0
  467a80:	mov	x0, x1
  467a84:	mov	x1, x2
  467a88:	mov	x2, x3
  467a8c:	mov	w3, #0x0                   	// #0
  467a90:	bl	4675d8 <_obstack_memory_used@@Base+0xb1e8>
  467a94:	str	x0, [x19]
  467a98:	ldr	x19, [sp, #16]
  467a9c:	ldp	x29, x30, [sp], #32
  467aa0:	ret
  467aa4:	nop
  467aa8:	ldr	x2, [x0]
  467aac:	ldr	x0, [x1]
  467ab0:	cmp	x2, x0
  467ab4:	cset	w0, eq  // eq = none
  467ab8:	ret
  467abc:	nop
  467ac0:	ldr	x2, [x0]
  467ac4:	ldr	x0, [x1]
  467ac8:	cmp	x2, x0
  467acc:	cset	w0, eq  // eq = none
  467ad0:	ret
  467ad4:	nop
  467ad8:	stp	x29, x30, [sp, #-48]!
  467adc:	mov	x29, sp
  467ae0:	stp	x19, x20, [sp, #16]
  467ae4:	mov	x19, x1
  467ae8:	ldr	x20, [x1]
  467aec:	str	x21, [sp, #32]
  467af0:	mov	x21, x0
  467af4:	mov	x0, x1
  467af8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467afc:	add	x1, x1, #0xae0
  467b00:	bl	465300 <_obstack_memory_used@@Base+0x8f10>
  467b04:	cbz	w0, 467b44 <_obstack_memory_used@@Base+0xb754>
  467b08:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467b0c:	mov	x0, x19
  467b10:	add	x1, x1, #0xad0
  467b14:	bl	465300 <_obstack_memory_used@@Base+0x8f10>
  467b18:	cbnz	w0, 467b50 <_obstack_memory_used@@Base+0xb760>
  467b1c:	mov	x0, x20
  467b20:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467b24:	add	x1, x1, #0xb30
  467b28:	bl	402f20 <fopen@plt>
  467b2c:	str	x0, [x21]
  467b30:	cbz	x0, 467b64 <_obstack_memory_used@@Base+0xb774>
  467b34:	ldp	x19, x20, [sp, #16]
  467b38:	ldr	x21, [sp, #32]
  467b3c:	ldp	x29, x30, [sp], #48
  467b40:	ret
  467b44:	adrp	x20, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467b48:	add	x20, x20, #0xad0
  467b4c:	b	467b1c <_obstack_memory_used@@Base+0xb72c>
  467b50:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467b54:	mov	x0, x19
  467b58:	add	x1, x1, #0xae8
  467b5c:	bl	465300 <_obstack_memory_used@@Base+0x8f10>
  467b60:	cbz	w0, 467b1c <_obstack_memory_used@@Base+0xb72c>
  467b64:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467b68:	add	x0, x0, #0xaf8
  467b6c:	bl	4038a0 <ferror@plt+0x2d0>
  467b70:	stp	x29, x30, [sp, #-48]!
  467b74:	mov	x29, sp
  467b78:	stp	x19, x20, [sp, #16]
  467b7c:	mov	x20, x1
  467b80:	mov	x19, x0
  467b84:	mov	x0, x1
  467b88:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467b8c:	add	x1, x1, #0xb38
  467b90:	bl	465300 <_obstack_memory_used@@Base+0x8f10>
  467b94:	mov	x2, #0x1571                	// #5489
  467b98:	cbnz	w0, 467bdc <_obstack_memory_used@@Base+0xb7ec>
  467b9c:	mov	x0, #0x8965                	// #35173
  467ba0:	mov	x1, #0x1                   	// #1
  467ba4:	movk	x0, #0x6c07, lsl #16
  467ba8:	str	x2, [x19]
  467bac:	b	467bb4 <_obstack_memory_used@@Base+0xb7c4>
  467bb0:	add	x1, x1, #0x1
  467bb4:	eor	x2, x2, x2, lsr #30
  467bb8:	cmp	x1, #0x26f
  467bbc:	madd	w2, w2, w0, w1
  467bc0:	str	x2, [x19, x1, lsl #3]
  467bc4:	b.ne	467bb0 <_obstack_memory_used@@Base+0xb7c0>  // b.any
  467bc8:	mov	x0, #0x270                 	// #624
  467bcc:	str	x0, [x19, #4992]
  467bd0:	ldp	x19, x20, [sp, #16]
  467bd4:	ldp	x29, x30, [sp], #48
  467bd8:	ret
  467bdc:	ldr	x20, [x20]
  467be0:	mov	w2, #0x0                   	// #0
  467be4:	add	x1, sp, #0x28
  467be8:	mov	x0, x20
  467bec:	bl	402d40 <strtoul@plt>
  467bf0:	mov	x2, x0
  467bf4:	ldrb	w0, [x20]
  467bf8:	cbz	w0, 467c0c <_obstack_memory_used@@Base+0xb81c>
  467bfc:	ldr	x0, [sp, #40]
  467c00:	and	x2, x2, #0xffffffff
  467c04:	ldrb	w0, [x0]
  467c08:	cbz	w0, 467b9c <_obstack_memory_used@@Base+0xb7ac>
  467c0c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467c10:	add	x0, x0, #0xaf8
  467c14:	bl	4038a0 <ferror@plt+0x2d0>
  467c18:	add	x1, x0, #0x10
  467c1c:	stp	x1, xzr, [x0]
  467c20:	strb	wzr, [x0, #16]
  467c24:	ret
  467c28:	add	x4, x0, #0x10
  467c2c:	str	x4, [x0]
  467c30:	ldr	x2, [x1, #8]
  467c34:	mov	w3, #0x0                   	// #0
  467c38:	ldr	x1, [x1]
  467c3c:	add	x2, x1, x2
  467c40:	b	4611d0 <_obstack_memory_used@@Base+0x4de0>
  467c44:	nop
  467c48:	add	x5, x0, #0x10
  467c4c:	str	x5, [x0]
  467c50:	add	x2, x1, x2
  467c54:	mov	w3, #0x0                   	// #0
  467c58:	b	411970 <ferror@plt+0xe3a0>
  467c5c:	nop
  467c60:	stp	x29, x30, [sp, #-16]!
  467c64:	add	x4, x0, #0x10
  467c68:	mov	w3, #0x0                   	// #0
  467c6c:	mov	x29, sp
  467c70:	str	x4, [x0]
  467c74:	ldr	x2, [x1, #8]
  467c78:	ldr	x1, [x1]
  467c7c:	add	x2, x1, x2
  467c80:	bl	4611d0 <_obstack_memory_used@@Base+0x4de0>
  467c84:	ldp	x29, x30, [sp], #16
  467c88:	ret
  467c8c:	nop
  467c90:	stp	x29, x30, [sp, #-32]!
  467c94:	mov	x29, sp
  467c98:	str	x19, [sp, #16]
  467c9c:	mov	x19, x0
  467ca0:	bl	45e8a0 <_obstack_memory_used@@Base+0x24b0>
  467ca4:	mov	x0, x19
  467ca8:	ldr	x19, [sp, #16]
  467cac:	ldp	x29, x30, [sp], #32
  467cb0:	ret
  467cb4:	nop
  467cb8:	mov	x1, x0
  467cbc:	ldr	x0, [x1], #16
  467cc0:	cmp	x0, x1
  467cc4:	b.eq	467ccc <_obstack_memory_used@@Base+0xb8dc>  // b.none
  467cc8:	b	461928 <_obstack_memory_used@@Base+0x5538>
  467ccc:	ret
  467cd0:	mov	x2, x1
  467cd4:	add	x3, x0, #0x10
  467cd8:	str	x3, [x0]
  467cdc:	ldr	x3, [x2], #16
  467ce0:	cmp	x3, x2
  467ce4:	b.eq	467d08 <_obstack_memory_used@@Base+0xb918>  // b.none
  467ce8:	str	x3, [x0]
  467cec:	ldr	x3, [x1, #8]
  467cf0:	str	x3, [x0, #8]
  467cf4:	ldr	x4, [x1, #16]
  467cf8:	str	x4, [x0, #16]
  467cfc:	stp	x2, xzr, [x1]
  467d00:	strb	wzr, [x1, #16]
  467d04:	ret
  467d08:	ldr	x3, [x1, #8]
  467d0c:	str	x3, [x0, #8]
  467d10:	ldp	x4, x5, [x1, #16]
  467d14:	stp	x4, x5, [x0, #16]
  467d18:	stp	x2, xzr, [x1]
  467d1c:	strb	wzr, [x1, #16]
  467d20:	ret
  467d24:	nop
  467d28:	stp	x29, x30, [sp, #-32]!
  467d2c:	mov	x29, sp
  467d30:	stp	x19, x20, [sp, #16]
  467d34:	mov	x19, x0
  467d38:	mov	x0, x1
  467d3c:	mov	x20, x1
  467d40:	ldr	x3, [x19]
  467d44:	ldr	x1, [x0], #16
  467d48:	ldr	x2, [x20, #8]
  467d4c:	cmp	x1, x0
  467d50:	b.eq	467dbc <_obstack_memory_used@@Base+0xb9cc>  // b.none
  467d54:	stp	x1, x2, [x19]
  467d58:	add	x4, x19, #0x10
  467d5c:	cmp	x3, x4
  467d60:	b.eq	467d94 <_obstack_memory_used@@Base+0xb9a4>  // b.none
  467d64:	ldr	x2, [x20, #16]
  467d68:	ldr	x1, [x19, #16]
  467d6c:	str	x2, [x19, #16]
  467d70:	cbz	x3, 467d9c <_obstack_memory_used@@Base+0xb9ac>
  467d74:	str	x3, [x20]
  467d78:	mov	x0, x19
  467d7c:	str	xzr, [x20, #8]
  467d80:	str	x1, [x20, #16]
  467d84:	strb	wzr, [x3]
  467d88:	ldp	x19, x20, [sp, #16]
  467d8c:	ldp	x29, x30, [sp], #32
  467d90:	ret
  467d94:	ldr	x1, [x20, #16]
  467d98:	str	x1, [x19, #16]
  467d9c:	mov	x3, x0
  467da0:	str	x0, [x20]
  467da4:	str	xzr, [x20, #8]
  467da8:	mov	x0, x19
  467dac:	strb	wzr, [x3]
  467db0:	ldp	x19, x20, [sp, #16]
  467db4:	ldp	x29, x30, [sp], #32
  467db8:	ret
  467dbc:	cbz	x2, 467dd8 <_obstack_memory_used@@Base+0xb9e8>
  467dc0:	cmp	x2, #0x1
  467dc4:	b.eq	467dfc <_obstack_memory_used@@Base+0xba0c>  // b.none
  467dc8:	mov	x0, x3
  467dcc:	bl	402cd0 <memcpy@plt>
  467dd0:	ldr	x3, [x19]
  467dd4:	ldr	x2, [x20, #8]
  467dd8:	str	x2, [x19, #8]
  467ddc:	strb	wzr, [x3, x2]
  467de0:	mov	x0, x19
  467de4:	str	xzr, [x20, #8]
  467de8:	ldr	x3, [x20]
  467dec:	strb	wzr, [x3]
  467df0:	ldp	x19, x20, [sp, #16]
  467df4:	ldp	x29, x30, [sp], #32
  467df8:	ret
  467dfc:	ldrb	w0, [x20, #16]
  467e00:	strb	w0, [x3]
  467e04:	ldr	x3, [x19]
  467e08:	ldr	x2, [x20, #8]
  467e0c:	b	467dd8 <_obstack_memory_used@@Base+0xb9e8>
  467e10:	stp	x29, x30, [sp, #-32]!
  467e14:	mov	x29, sp
  467e18:	str	x19, [sp, #16]
  467e1c:	cbz	x0, 467e48 <_obstack_memory_used@@Base+0xba58>
  467e20:	mov	x19, x0
  467e24:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  467e28:	mov	x1, #0xd500                	// #54528
  467e2c:	movk	x1, #0xbcd4, lsl #16
  467e30:	ldr	x0, [x19]
  467e34:	movk	x1, #0xaabc, lsl #32
  467e38:	movk	x1, #0xb8b1, lsl #48
  467e3c:	add	x0, x0, x1
  467e40:	cmp	x0, #0x1
  467e44:	b.ls	467e4c <_obstack_memory_used@@Base+0xba5c>  // b.plast
  467e48:	bl	462b50 <_obstack_memory_used@@Base+0x6760>
  467e4c:	ldur	x0, [x19, #-56]
  467e50:	bl	462b08 <_obstack_memory_used@@Base+0x6718>
  467e54:	nop
  467e58:	stp	x29, x30, [sp, #-64]!
  467e5c:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  467e60:	mov	x29, sp
  467e64:	ldrb	w1, [x0, #1384]
  467e68:	cbnz	w1, 467f50 <_obstack_memory_used@@Base+0xbb60>
  467e6c:	mov	w1, #0x1                   	// #1
  467e70:	strb	w1, [x0, #1384]
  467e74:	bl	471f90 <_obstack_memory_used@@Base+0x15ba0>
  467e78:	cbz	x0, 467f24 <_obstack_memory_used@@Base+0xbb34>
  467e7c:	stp	x19, x20, [sp, #16]
  467e80:	mov	w4, #0xffffffff            	// #-1
  467e84:	add	x3, sp, #0x3c
  467e88:	ldr	x19, [x0, #8]
  467e8c:	stp	x21, x22, [sp, #32]
  467e90:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  467e94:	mov	x2, #0x0                   	// #0
  467e98:	mov	x1, #0x0                   	// #0
  467e9c:	ldrb	w0, [x19]
  467ea0:	str	w4, [sp, #60]
  467ea4:	cmp	w0, #0x2a
  467ea8:	cinc	x19, x19, eq  // eq = none
  467eac:	mov	x0, x19
  467eb0:	bl	471dc8 <_obstack_memory_used@@Base+0x159d8>
  467eb4:	mov	x20, x0
  467eb8:	ldr	x22, [x21, #3680]
  467ebc:	mov	x1, #0x1                   	// #1
  467ec0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467ec4:	mov	x2, #0x30                  	// #48
  467ec8:	add	x0, x0, #0xb78
  467ecc:	ldr	x3, [x22]
  467ed0:	bl	403320 <fwrite@plt>
  467ed4:	ldr	w0, [sp, #60]
  467ed8:	ldr	x1, [x22]
  467edc:	cbz	w0, 467f18 <_obstack_memory_used@@Base+0xbb28>
  467ee0:	mov	x0, x19
  467ee4:	bl	402d60 <fputs@plt>
  467ee8:	ldr	x3, [x21, #3680]
  467eec:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467ef0:	mov	x2, #0x2                   	// #2
  467ef4:	add	x0, x0, #0xbb0
  467ef8:	mov	x1, #0x1                   	// #1
  467efc:	ldr	x3, [x3]
  467f00:	bl	403320 <fwrite@plt>
  467f04:	ldr	w0, [sp, #60]
  467f08:	cbnz	w0, 467f14 <_obstack_memory_used@@Base+0xbb24>
  467f0c:	mov	x0, x20
  467f10:	bl	4032a0 <free@plt>
  467f14:	bl	462cd8 <_obstack_memory_used@@Base+0x68e8>
  467f18:	mov	x0, x20
  467f1c:	bl	402d60 <fputs@plt>
  467f20:	b	467ee8 <_obstack_memory_used@@Base+0xbaf8>
  467f24:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  467f28:	mov	x2, #0x2d                  	// #45
  467f2c:	mov	x1, #0x1                   	// #1
  467f30:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467f34:	ldr	x3, [x3, #3680]
  467f38:	add	x0, x0, #0xbb8
  467f3c:	ldr	x3, [x3]
  467f40:	bl	403320 <fwrite@plt>
  467f44:	stp	x19, x20, [sp, #16]
  467f48:	stp	x21, x22, [sp, #32]
  467f4c:	bl	403180 <abort@plt>
  467f50:	adrp	x3, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  467f54:	mov	x2, #0x1d                  	// #29
  467f58:	mov	x1, #0x1                   	// #1
  467f5c:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467f60:	ldr	x3, [x3, #3680]
  467f64:	add	x0, x0, #0xb58
  467f68:	stp	x19, x20, [sp, #16]
  467f6c:	ldr	x3, [x3]
  467f70:	stp	x21, x22, [sp, #32]
  467f74:	bl	403320 <fwrite@plt>
  467f78:	bl	403180 <abort@plt>
  467f7c:	mov	x19, x1
  467f80:	cmp	x1, #0x1
  467f84:	b.ne	467fe0 <_obstack_memory_used@@Base+0xbbf0>  // b.any
  467f88:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  467f8c:	ldr	x1, [x0]
  467f90:	ldr	x1, [x1, #16]
  467f94:	blr	x1
  467f98:	mov	x20, x0
  467f9c:	ldr	x3, [x21, #3680]
  467fa0:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  467fa4:	mov	x1, x19
  467fa8:	add	x0, x0, #0xbe8
  467fac:	mov	x2, #0xb                   	// #11
  467fb0:	ldr	x3, [x3]
  467fb4:	bl	403320 <fwrite@plt>
  467fb8:	ldr	x1, [x21, #3680]
  467fbc:	mov	x0, x20
  467fc0:	ldr	x1, [x1]
  467fc4:	bl	402d60 <fputs@plt>
  467fc8:	ldr	x21, [x21, #3680]
  467fcc:	mov	w0, #0xa                   	// #10
  467fd0:	ldr	x1, [x21]
  467fd4:	bl	402e40 <fputc@plt>
  467fd8:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  467fdc:	bl	403180 <abort@plt>
  467fe0:	bl	461dd8 <_obstack_memory_used@@Base+0x59e8>
  467fe4:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  467fe8:	bl	403180 <abort@plt>
  467fec:	mov	x19, x0
  467ff0:	bl	461e78 <_obstack_memory_used@@Base+0x5a88>
  467ff4:	mov	x0, x19
  467ff8:	bl	474608 <_obstack_memory_used@@Base+0x18218>
  467ffc:	nop
  468000:	sub	w5, w1, #0x1
  468004:	mov	x4, x0
  468008:	cmp	w5, #0x4f
  46800c:	b.ls	468018 <_obstack_memory_used@@Base+0xbc28>  // b.plast
  468010:	mov	x0, #0x0                   	// #0
  468014:	ret
  468018:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46801c:	add	x0, x0, #0xbf4
  468020:	ldrb	w0, [x0, w5, uxtw]
  468024:	adr	x5, 468030 <_obstack_memory_used@@Base+0xbc40>
  468028:	add	x0, x5, w0, sxtb #2
  46802c:	br	x0
  468030:	cbz	x3, 468010 <_obstack_memory_used@@Base+0xbc20>
  468034:	ldp	w0, w5, [x4, #40]
  468038:	cmp	w0, w5
  46803c:	b.ge	468010 <_obstack_memory_used@@Base+0xbc20>  // b.tcont
  468040:	mov	w5, #0x18                  	// #24
  468044:	add	w7, w0, #0x1
  468048:	ldr	x6, [x4, #32]
  46804c:	smull	x5, w0, w5
  468050:	add	x0, x6, x5
  468054:	str	wzr, [x0, #4]
  468058:	str	w7, [x4, #40]
  46805c:	str	w1, [x6, x5]
  468060:	stp	x2, x3, [x0, #8]
  468064:	ret
  468068:	cbnz	x2, 468034 <_obstack_memory_used@@Base+0xbc44>
  46806c:	mov	x0, #0x0                   	// #0
  468070:	b	468014 <_obstack_memory_used@@Base+0xbc24>
  468074:	cmp	x2, #0x0
  468078:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  46807c:	b.ne	468034 <_obstack_memory_used@@Base+0xbc44>  // b.any
  468080:	mov	x0, #0x0                   	// #0
  468084:	b	468014 <_obstack_memory_used@@Base+0xbc24>
  468088:	ldr	x3, [x0, #24]
  46808c:	mov	x2, x1
  468090:	mov	w4, #0x4f                  	// #79
  468094:	ldrb	w1, [x3]
  468098:	cmp	w1, #0x52
  46809c:	ccmp	w1, w4, #0x4, ne  // ne = any
  4680a0:	b.ne	4680cc <_obstack_memory_used@@Base+0xbcdc>  // b.any
  4680a4:	ldr	w5, [x0, #72]
  4680a8:	cmp	w1, #0x52
  4680ac:	mov	w1, #0x20                  	// #32
  4680b0:	add	w4, w5, #0x3
  4680b4:	b.eq	4680d4 <_obstack_memory_used@@Base+0xbce4>  // b.none
  4680b8:	add	x3, x3, #0x1
  4680bc:	str	x3, [x0, #24]
  4680c0:	str	w4, [x0, #72]
  4680c4:	mov	x3, #0x0                   	// #0
  4680c8:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  4680cc:	mov	x0, x2
  4680d0:	ret
  4680d4:	add	w4, w5, #0x2
  4680d8:	add	x3, x3, #0x1
  4680dc:	str	x3, [x0, #24]
  4680e0:	mov	w1, #0x1f                  	// #31
  4680e4:	str	w4, [x0, #72]
  4680e8:	mov	x3, #0x0                   	// #0
  4680ec:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  4680f0:	cbz	x1, 4681d0 <_obstack_memory_used@@Base+0xbde0>
  4680f4:	stp	x29, x30, [sp, #-32]!
  4680f8:	mov	x29, sp
  4680fc:	stp	x19, x20, [sp, #16]
  468100:	mov	x20, x0
  468104:	mov	x19, x1
  468108:	adrp	x0, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46810c:	add	x0, x0, #0xc44
  468110:	ldr	w1, [x19]
  468114:	sub	w1, w1, #0x1
  468118:	cmp	w1, #0x4f
  46811c:	b.ls	46812c <_obstack_memory_used@@Base+0xbd3c>  // b.plast
  468120:	ldp	x19, x20, [sp, #16]
  468124:	ldp	x29, x30, [sp], #32
  468128:	ret
  46812c:	ldrb	w1, [x0, w1, uxtw]
  468130:	adr	x2, 46813c <_obstack_memory_used@@Base+0xbd4c>
  468134:	add	x1, x2, w1, sxtb #2
  468138:	br	x1
  46813c:	ldr	x0, [x19, #8]
  468140:	ldr	w0, [x0]
  468144:	cmp	w0, #0x5
  468148:	b.ne	468158 <_obstack_memory_used@@Base+0xbd68>  // b.any
  46814c:	ldr	w0, [x20, #348]
  468150:	add	w0, w0, #0x1
  468154:	str	w0, [x20, #348]
  468158:	ldr	w0, [x20, #308]
  46815c:	cmp	w0, #0x800
  468160:	b.gt	468120 <_obstack_memory_used@@Base+0xbd30>
  468164:	ldr	x1, [x19, #8]
  468168:	add	w0, w0, #0x1
  46816c:	str	w0, [x20, #308]
  468170:	mov	x0, x20
  468174:	bl	4680f0 <_obstack_memory_used@@Base+0xbd00>
  468178:	ldr	x1, [x19, #16]
  46817c:	mov	x0, x20
  468180:	bl	4680f0 <_obstack_memory_used@@Base+0xbd00>
  468184:	ldr	w0, [x20, #308]
  468188:	sub	w0, w0, #0x1
  46818c:	str	w0, [x20, #308]
  468190:	ldp	x19, x20, [sp, #16]
  468194:	ldp	x29, x30, [sp], #32
  468198:	ret
  46819c:	ldr	x19, [x19, #8]
  4681a0:	cbnz	x19, 468110 <_obstack_memory_used@@Base+0xbd20>
  4681a4:	b	468120 <_obstack_memory_used@@Base+0xbd30>
  4681a8:	ldr	x19, [x19, #16]
  4681ac:	cbnz	x19, 468110 <_obstack_memory_used@@Base+0xbd20>
  4681b0:	b	468120 <_obstack_memory_used@@Base+0xbd30>
  4681b4:	ldr	w0, [x20, #364]
  4681b8:	add	w0, w0, #0x1
  4681bc:	str	w0, [x20, #364]
  4681c0:	ldr	w0, [x20, #308]
  4681c4:	cmp	w0, #0x800
  4681c8:	b.gt	468120 <_obstack_memory_used@@Base+0xbd30>
  4681cc:	b	468164 <_obstack_memory_used@@Base+0xbd74>
  4681d0:	ret
  4681d4:	nop
  4681d8:	cbz	x2, 468278 <_obstack_memory_used@@Base+0xbe88>
  4681dc:	stp	x29, x30, [sp, #-48]!
  4681e0:	mov	x29, sp
  4681e4:	stp	x19, x20, [sp, #16]
  4681e8:	mov	x20, x1
  4681ec:	mov	x19, x0
  4681f0:	stp	x21, x22, [sp, #32]
  4681f4:	add	x22, x1, x2
  4681f8:	ldr	x1, [x0, #256]
  4681fc:	b	468220 <_obstack_memory_used@@Base+0xbe30>
  468200:	mov	x0, x1
  468204:	add	x1, x1, #0x1
  468208:	str	x1, [x19, #256]
  46820c:	add	x20, x20, #0x1
  468210:	cmp	x20, x22
  468214:	strb	w21, [x19, x0]
  468218:	strb	w21, [x19, #264]
  46821c:	b.eq	468268 <_obstack_memory_used@@Base+0xbe78>  // b.none
  468220:	ldrb	w21, [x20]
  468224:	cmp	x1, #0xff
  468228:	b.ne	468200 <_obstack_memory_used@@Base+0xbe10>  // b.any
  46822c:	ldp	x3, x2, [x19, #272]
  468230:	strb	wzr, [x19, #255]
  468234:	mov	x0, x19
  468238:	add	x20, x20, #0x1
  46823c:	blr	x3
  468240:	ldr	x2, [x19, #320]
  468244:	mov	x0, #0x0                   	// #0
  468248:	mov	x1, #0x1                   	// #1
  46824c:	str	x1, [x19, #256]
  468250:	add	x2, x2, x1
  468254:	str	x2, [x19, #320]
  468258:	strb	w21, [x19, x0]
  46825c:	cmp	x20, x22
  468260:	strb	w21, [x19, #264]
  468264:	b.ne	468220 <_obstack_memory_used@@Base+0xbe30>  // b.any
  468268:	ldp	x19, x20, [sp, #16]
  46826c:	ldp	x21, x22, [sp, #32]
  468270:	ldp	x29, x30, [sp], #48
  468274:	ret
  468278:	ret
  46827c:	nop
  468280:	ldr	x3, [x0]
  468284:	mov	x6, x0
  468288:	ldrb	w4, [x3]
  46828c:	cmp	w4, #0x6e
  468290:	b.eq	46831c <_obstack_memory_used@@Base+0xbf2c>  // b.none
  468294:	sub	w0, w4, #0x30
  468298:	and	w0, w0, #0xff
  46829c:	cmp	w0, #0x9
  4682a0:	b.hi	468344 <_obstack_memory_used@@Base+0xbf54>  // b.pmore
  4682a4:	mov	w9, #0x0                   	// #0
  4682a8:	mov	w8, #0xcccd                	// #52429
  4682ac:	add	x3, x3, #0x1
  4682b0:	mov	w0, #0x0                   	// #0
  4682b4:	mov	w7, #0x7fffffff            	// #2147483647
  4682b8:	movk	w8, #0xcccc, lsl #16
  4682bc:	b	4682d0 <_obstack_memory_used@@Base+0xbee0>
  4682c0:	umull	x1, w1, w8
  4682c4:	lsr	x1, x1, #35
  4682c8:	cmp	w1, w0
  4682cc:	b.lt	468314 <_obstack_memory_used@@Base+0xbf24>  // b.tstop
  4682d0:	str	x3, [x6]
  4682d4:	add	w0, w0, w0, lsl #2
  4682d8:	add	x3, x3, #0x1
  4682dc:	ldurb	w1, [x3, #-1]
  4682e0:	add	w5, w4, w0, lsl #1
  4682e4:	sub	w0, w5, #0x30
  4682e8:	sub	w2, w1, #0x30
  4682ec:	mov	w4, w1
  4682f0:	sub	w1, w7, w2
  4682f4:	and	w2, w2, #0xff
  4682f8:	cmp	w2, #0x9
  4682fc:	b.ls	4682c0 <_obstack_memory_used@@Base+0xbed0>  // b.plast
  468300:	cmp	w9, #0x0
  468304:	mov	w1, #0x30                  	// #48
  468308:	sub	w5, w1, w5
  46830c:	csel	w0, w5, w0, ne  // ne = any
  468310:	ret
  468314:	mov	w0, #0xffffffff            	// #-1
  468318:	ret
  46831c:	add	x1, x3, #0x1
  468320:	str	x1, [x0]
  468324:	ldrb	w4, [x3, #1]
  468328:	sub	w0, w4, #0x30
  46832c:	and	w0, w0, #0xff
  468330:	cmp	w0, #0x9
  468334:	b.hi	468344 <_obstack_memory_used@@Base+0xbf54>  // b.pmore
  468338:	mov	x3, x1
  46833c:	mov	w9, #0x1                   	// #1
  468340:	b	4682a8 <_obstack_memory_used@@Base+0xbeb8>
  468344:	mov	w0, #0x0                   	// #0
  468348:	ret
  46834c:	nop
  468350:	mov	x1, x0
  468354:	ldr	w0, [x0, #40]
  468358:	ldr	w2, [x1, #44]
  46835c:	cmp	w0, w2
  468360:	b.ge	4683ac <_obstack_memory_used@@Base+0xbfbc>  // b.tcont
  468364:	stp	x29, x30, [sp, #-16]!
  468368:	mov	w2, #0x18                  	// #24
  46836c:	add	w5, w0, #0x1
  468370:	mov	x29, sp
  468374:	ldr	x3, [x1, #32]
  468378:	smull	x2, w0, w2
  46837c:	mov	w4, #0x42                  	// #66
  468380:	add	x0, x1, #0x18
  468384:	add	x10, x3, x2
  468388:	str	wzr, [x10, #4]
  46838c:	str	w5, [x1, #40]
  468390:	str	w4, [x3, x2]
  468394:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  468398:	sxtw	x0, w0
  46839c:	str	x0, [x10, #8]
  4683a0:	mov	x0, x10
  4683a4:	ldp	x29, x30, [sp], #16
  4683a8:	ret
  4683ac:	mov	x10, #0x0                   	// #0
  4683b0:	mov	x0, x10
  4683b4:	ret
  4683b8:	ldr	x1, [x0, #24]
  4683bc:	mov	x10, x0
  4683c0:	ldrb	w0, [x1]
  4683c4:	cmp	w0, #0x5f
  4683c8:	b.eq	46840c <_obstack_memory_used@@Base+0xc01c>  // b.none
  4683cc:	cmp	w0, #0x6e
  4683d0:	b.eq	468424 <_obstack_memory_used@@Base+0xc034>  // b.none
  4683d4:	stp	x29, x30, [sp, #-16]!
  4683d8:	add	x0, x10, #0x18
  4683dc:	mov	x29, sp
  4683e0:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  4683e4:	adds	w0, w0, #0x1
  4683e8:	b.mi	46841c <_obstack_memory_used@@Base+0xc02c>  // b.first
  4683ec:	ldr	x1, [x10, #24]
  4683f0:	ldrb	w2, [x1]
  4683f4:	cmp	w2, #0x5f
  4683f8:	b.ne	46841c <_obstack_memory_used@@Base+0xc02c>  // b.any
  4683fc:	add	x1, x1, #0x1
  468400:	str	x1, [x10, #24]
  468404:	ldp	x29, x30, [sp], #16
  468408:	ret
  46840c:	add	x1, x1, #0x1
  468410:	mov	w0, #0x0                   	// #0
  468414:	str	x1, [x10, #24]
  468418:	ret
  46841c:	mov	w0, #0xffffffff            	// #-1
  468420:	b	468404 <_obstack_memory_used@@Base+0xc014>
  468424:	mov	w0, #0xffffffff            	// #-1
  468428:	ret
  46842c:	nop
  468430:	ldr	x1, [x0, #24]
  468434:	ldrb	w2, [x1]
  468438:	cmp	w2, #0x54
  46843c:	b.ne	4684a8 <_obstack_memory_used@@Base+0xc0b8>  // b.any
  468440:	stp	x29, x30, [sp, #-16]!
  468444:	add	x1, x1, #0x1
  468448:	mov	x11, x0
  46844c:	mov	x29, sp
  468450:	str	x1, [x0, #24]
  468454:	bl	4683b8 <_obstack_memory_used@@Base+0xbfc8>
  468458:	tbnz	w0, #31, 46849c <_obstack_memory_used@@Base+0xc0ac>
  46845c:	ldp	w1, w2, [x11, #40]
  468460:	cmp	w1, w2
  468464:	b.ge	46849c <_obstack_memory_used@@Base+0xc0ac>  // b.tcont
  468468:	mov	w2, #0x18                  	// #24
  46846c:	add	w5, w1, #0x1
  468470:	ldr	x3, [x11, #32]
  468474:	smull	x2, w1, w2
  468478:	sxtw	x1, w0
  46847c:	mov	w4, #0x5                   	// #5
  468480:	add	x0, x3, x2
  468484:	str	wzr, [x0, #4]
  468488:	str	w5, [x11, #40]
  46848c:	str	w4, [x3, x2]
  468490:	str	x1, [x0, #8]
  468494:	ldp	x29, x30, [sp], #16
  468498:	ret
  46849c:	mov	x0, #0x0                   	// #0
  4684a0:	ldp	x29, x30, [sp], #16
  4684a4:	ret
  4684a8:	mov	x0, #0x0                   	// #0
  4684ac:	ret
  4684b0:	mov	x10, x0
  4684b4:	stp	x29, x30, [sp, #-16]!
  4684b8:	add	x0, x0, #0x18
  4684bc:	mov	x29, sp
  4684c0:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  4684c4:	cmp	w0, #0x0
  4684c8:	b.le	4685c0 <_obstack_memory_used@@Base+0xc1d0>
  4684cc:	mov	w1, w0
  4684d0:	sxtw	x3, w0
  4684d4:	ldr	x0, [x10, #8]
  4684d8:	ldr	x2, [x10, #24]
  4684dc:	sub	x0, x0, x2
  4684e0:	cmp	x0, w1, sxtw
  4684e4:	b.lt	4685b8 <_obstack_memory_used@@Base+0xc1c8>  // b.tstop
  4684e8:	ldr	w0, [x10, #16]
  4684ec:	add	x3, x2, x3
  4684f0:	str	x3, [x10, #24]
  4684f4:	tbz	w0, #2, 468504 <_obstack_memory_used@@Base+0xc114>
  4684f8:	ldrb	w0, [x2, w1, sxtw]
  4684fc:	cmp	w0, #0x24
  468500:	b.eq	4685cc <_obstack_memory_used@@Base+0xc1dc>  // b.none
  468504:	ldp	w0, w3, [x10, #40]
  468508:	cmp	w1, #0x9
  46850c:	b.gt	468548 <_obstack_memory_used@@Base+0xc158>
  468510:	cmp	w3, w0
  468514:	b.le	4685b8 <_obstack_memory_used@@Base+0xc1c8>
  468518:	ldr	x4, [x10, #32]
  46851c:	mov	w5, #0x18                  	// #24
  468520:	add	w3, w0, #0x1
  468524:	smaddl	x0, w0, w5, x4
  468528:	str	wzr, [x0, #4]
  46852c:	str	w3, [x10, #40]
  468530:	cbz	x2, 4685b8 <_obstack_memory_used@@Base+0xc1c8>
  468534:	stp	xzr, x2, [x0]
  468538:	str	w1, [x0, #16]
  46853c:	str	x0, [x10, #64]
  468540:	ldp	x29, x30, [sp], #16
  468544:	ret
  468548:	mov	x4, #0x475f                	// #18271
  46854c:	ldr	x5, [x2]
  468550:	movk	x4, #0x4f4c, lsl #16
  468554:	movk	x4, #0x4142, lsl #32
  468558:	movk	x4, #0x5f4c, lsl #48
  46855c:	cmp	x5, x4
  468560:	b.ne	46858c <_obstack_memory_used@@Base+0xc19c>  // b.any
  468564:	ldrb	w4, [x2, #8]
  468568:	mov	w6, #0x5f                  	// #95
  46856c:	mov	w5, #0x24                  	// #36
  468570:	cmp	w4, #0x2e
  468574:	ccmp	w4, w6, #0x4, ne  // ne = any
  468578:	ccmp	w4, w5, #0x4, ne  // ne = any
  46857c:	b.ne	46858c <_obstack_memory_used@@Base+0xc19c>  // b.any
  468580:	ldrb	w4, [x2, #9]
  468584:	cmp	w4, #0x4e
  468588:	b.eq	4685e4 <_obstack_memory_used@@Base+0xc1f4>  // b.none
  46858c:	cmp	w3, w0
  468590:	b.le	4685b8 <_obstack_memory_used@@Base+0xc1c8>
  468594:	ldr	x4, [x10, #32]
  468598:	mov	w5, #0x18                  	// #24
  46859c:	add	w3, w0, #0x1
  4685a0:	smaddl	x0, w0, w5, x4
  4685a4:	str	wzr, [x0, #4]
  4685a8:	str	w3, [x10, #40]
  4685ac:	stp	xzr, x2, [x0]
  4685b0:	str	w1, [x0, #16]
  4685b4:	b	46853c <_obstack_memory_used@@Base+0xc14c>
  4685b8:	mov	x0, #0x0                   	// #0
  4685bc:	b	46853c <_obstack_memory_used@@Base+0xc14c>
  4685c0:	mov	x0, #0x0                   	// #0
  4685c4:	ldp	x29, x30, [sp], #16
  4685c8:	ret
  4685cc:	add	x3, x3, #0x1
  4685d0:	str	x3, [x10, #24]
  4685d4:	cmp	w1, #0x9
  4685d8:	ldp	w0, w3, [x10, #40]
  4685dc:	b.le	468510 <_obstack_memory_used@@Base+0xc120>
  4685e0:	b	468548 <_obstack_memory_used@@Base+0xc158>
  4685e4:	ldr	w2, [x10, #72]
  4685e8:	cmp	w3, w0
  4685ec:	add	w2, w2, #0x16
  4685f0:	sub	w1, w2, w1
  4685f4:	str	w1, [x10, #72]
  4685f8:	b.le	4685b8 <_obstack_memory_used@@Base+0xc1c8>
  4685fc:	mov	w1, #0x18                  	// #24
  468600:	add	w2, w0, #0x1
  468604:	ldr	x3, [x10, #32]
  468608:	smull	x1, w0, w1
  46860c:	str	w2, [x10, #40]
  468610:	mov	w4, #0x15                  	// #21
  468614:	add	x0, x3, x1
  468618:	adrp	x2, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46861c:	add	x2, x2, #0xe70
  468620:	str	xzr, [x3, x1]
  468624:	str	x2, [x0, #8]
  468628:	str	w4, [x0, #16]
  46862c:	b	46853c <_obstack_memory_used@@Base+0xc14c>
  468630:	ldr	x3, [x0, #24]
  468634:	mov	x11, x0
  468638:	ldr	x13, [x0, #64]
  46863c:	mov	x12, x1
  468640:	ldrb	w0, [x3]
  468644:	cmp	w0, #0x42
  468648:	b.ne	4686a0 <_obstack_memory_used@@Base+0xc2b0>  // b.any
  46864c:	stp	x29, x30, [sp, #-16]!
  468650:	mov	x29, sp
  468654:	nop
  468658:	add	x3, x3, #0x1
  46865c:	str	x3, [x11, #24]
  468660:	mov	x0, x11
  468664:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  468668:	mov	x3, x0
  46866c:	mov	x2, x12
  468670:	mov	x0, x11
  468674:	mov	w1, #0x4c                  	// #76
  468678:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46867c:	ldr	x3, [x11, #24]
  468680:	mov	x12, x0
  468684:	ldrb	w0, [x3]
  468688:	cmp	w0, #0x42
  46868c:	b.eq	468658 <_obstack_memory_used@@Base+0xc268>  // b.none
  468690:	str	x13, [x11, #64]
  468694:	mov	x0, x12
  468698:	ldp	x29, x30, [sp], #16
  46869c:	ret
  4686a0:	mov	x0, x1
  4686a4:	str	x13, [x11, #64]
  4686a8:	ret
  4686ac:	nop
  4686b0:	mov	x14, x0
  4686b4:	ldr	x0, [x0, #24]
  4686b8:	ldrb	w2, [x0]
  4686bc:	cmp	w2, #0x53
  4686c0:	b.ne	468730 <_obstack_memory_used@@Base+0xc340>  // b.any
  4686c4:	add	x2, x0, #0x1
  4686c8:	str	x2, [x14, #24]
  4686cc:	ldrb	w2, [x0, #1]
  4686d0:	cbnz	w2, 468738 <_obstack_memory_used@@Base+0xc348>
  4686d4:	ldr	w0, [x14, #16]
  4686d8:	and	w1, w1, #0x1
  4686dc:	ands	w3, w0, #0x8
  4686e0:	ubfx	x4, x0, #3, #1
  4686e4:	csel	w1, w1, wzr, eq  // eq = none
  4686e8:	cbz	w1, 468704 <_obstack_memory_used@@Base+0xc314>
  4686ec:	ldr	x0, [x14, #24]
  4686f0:	ldrb	w0, [x0]
  4686f4:	sub	w0, w0, #0x43
  4686f8:	and	w0, w0, #0xff
  4686fc:	cmp	w0, #0x1
  468700:	csinc	w4, w4, wzr, hi  // hi = pmore
  468704:	adrp	x0, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  468708:	add	x0, x0, #0xa18
  46870c:	add	x3, x0, #0x188
  468710:	mov	w1, #0x74                  	// #116
  468714:	b	46871c <_obstack_memory_used@@Base+0xc32c>
  468718:	ldrb	w1, [x0]
  46871c:	cmp	w1, w2
  468720:	b.eq	46880c <_obstack_memory_used@@Base+0xc41c>  // b.none
  468724:	add	x0, x0, #0x38
  468728:	cmp	x0, x3
  46872c:	b.ne	468718 <_obstack_memory_used@@Base+0xc328>  // b.any
  468730:	mov	x0, #0x0                   	// #0
  468734:	ret
  468738:	add	x2, x0, #0x2
  46873c:	str	x2, [x14, #24]
  468740:	ldrb	w2, [x0, #1]
  468744:	sub	w5, w2, #0x30
  468748:	cmp	w2, #0x5f
  46874c:	and	w0, w5, #0xff
  468750:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  468754:	b.hi	46877c <_obstack_memory_used@@Base+0xc38c>  // b.pmore
  468758:	cmp	w2, #0x5f
  46875c:	mov	w1, #0x0                   	// #0
  468760:	b.ne	468790 <_obstack_memory_used@@Base+0xc3a0>  // b.any
  468764:	ldr	w0, [x14, #56]
  468768:	cmp	w0, w1
  46876c:	b.ls	468730 <_obstack_memory_used@@Base+0xc340>  // b.plast
  468770:	ldr	x0, [x14, #48]
  468774:	ldr	x0, [x0, w1, uxtw #3]
  468778:	ret
  46877c:	sub	w0, w2, #0x41
  468780:	and	w0, w0, #0xff
  468784:	cmp	w0, #0x19
  468788:	b.hi	4686d4 <_obstack_memory_used@@Base+0xc2e4>  // b.pmore
  46878c:	nop
  468790:	mov	w3, #0x0                   	// #0
  468794:	nop
  468798:	add	w1, w3, w3, lsl #3
  46879c:	sub	w6, w2, #0x41
  4687a0:	mov	w4, w1
  4687a4:	and	w5, w5, #0xff
  4687a8:	add	w1, w2, w1, lsl #2
  4687ac:	and	w6, w6, #0xff
  4687b0:	sub	w1, w1, #0x37
  4687b4:	add	w2, w2, w4, lsl #2
  4687b8:	cmp	w5, #0x9
  4687bc:	b.hi	468800 <_obstack_memory_used@@Base+0xc410>  // b.pmore
  4687c0:	sub	w1, w2, #0x30
  4687c4:	cmp	w3, w1
  4687c8:	b.hi	468730 <_obstack_memory_used@@Base+0xc340>  // b.pmore
  4687cc:	ldr	x4, [x14, #24]
  4687d0:	mov	w3, w1
  4687d4:	add	x0, x4, #0x1
  4687d8:	ldrb	w2, [x4]
  4687dc:	cbz	w2, 4687f0 <_obstack_memory_used@@Base+0xc400>
  4687e0:	str	x0, [x14, #24]
  4687e4:	ldrb	w2, [x4]
  4687e8:	cmp	w2, #0x5f
  4687ec:	b.eq	4687f8 <_obstack_memory_used@@Base+0xc408>  // b.none
  4687f0:	sub	w5, w2, #0x30
  4687f4:	b	468798 <_obstack_memory_used@@Base+0xc3a8>
  4687f8:	add	w1, w1, #0x1
  4687fc:	b	468764 <_obstack_memory_used@@Base+0xc374>
  468800:	cmp	w6, #0x19
  468804:	b.ls	4687c4 <_obstack_memory_used@@Base+0xc3d4>  // b.plast
  468808:	b	468730 <_obstack_memory_used@@Base+0xc340>
  46880c:	ldr	x5, [x0, #40]
  468810:	ldp	w1, w3, [x14, #40]
  468814:	cbz	x5, 468850 <_obstack_memory_used@@Base+0xc460>
  468818:	ldr	w9, [x0, #48]
  46881c:	cmp	w3, w1
  468820:	b.le	468908 <_obstack_memory_used@@Base+0xc518>
  468824:	mov	w8, #0x18                  	// #24
  468828:	ldr	x7, [x14, #32]
  46882c:	smull	x6, w1, w8
  468830:	add	w1, w1, #0x1
  468834:	add	x2, x7, x6
  468838:	str	wzr, [x2, #4]
  46883c:	str	w1, [x14, #40]
  468840:	str	w8, [x7, x6]
  468844:	str	x5, [x2, #8]
  468848:	str	w9, [x2, #16]
  46884c:	str	x2, [x14, #64]
  468850:	cbz	w4, 4688ac <_obstack_memory_used@@Base+0xc4bc>
  468854:	ldr	w2, [x0, #32]
  468858:	ldr	x5, [x0, #24]
  46885c:	cmp	w1, w3
  468860:	ldr	w0, [x14, #72]
  468864:	add	w0, w0, w2
  468868:	str	w0, [x14, #72]
  46886c:	b.ge	468900 <_obstack_memory_used@@Base+0xc510>  // b.tcont
  468870:	mov	w4, #0x18                  	// #24
  468874:	add	w6, w1, #0x1
  468878:	ldr	x3, [x14, #32]
  46887c:	smull	x1, w1, w4
  468880:	add	x0, x3, x1
  468884:	str	wzr, [x0, #4]
  468888:	str	w6, [x14, #40]
  46888c:	str	w4, [x3, x1]
  468890:	str	x5, [x0, #8]
  468894:	str	w2, [x0, #16]
  468898:	ldr	x1, [x14, #24]
  46889c:	ldrb	w1, [x1]
  4688a0:	cmp	w1, #0x42
  4688a4:	b.eq	4688b8 <_obstack_memory_used@@Base+0xc4c8>  // b.none
  4688a8:	ret
  4688ac:	ldr	w2, [x0, #16]
  4688b0:	ldr	x5, [x0, #8]
  4688b4:	b	46885c <_obstack_memory_used@@Base+0xc46c>
  4688b8:	stp	x29, x30, [sp, #-16]!
  4688bc:	mov	x1, x0
  4688c0:	mov	x0, x14
  4688c4:	mov	x29, sp
  4688c8:	bl	468630 <_obstack_memory_used@@Base+0xc240>
  4688cc:	cbz	x0, 4688f4 <_obstack_memory_used@@Base+0xc504>
  4688d0:	ldp	w1, w2, [x14, #56]
  4688d4:	cmp	w1, w2
  4688d8:	b.ge	4688f4 <_obstack_memory_used@@Base+0xc504>  // b.tcont
  4688dc:	ldr	x3, [x14, #48]
  4688e0:	add	w2, w1, #0x1
  4688e4:	str	x0, [x3, w1, sxtw #3]
  4688e8:	str	w2, [x14, #56]
  4688ec:	ldp	x29, x30, [sp], #16
  4688f0:	ret
  4688f4:	mov	x0, #0x0                   	// #0
  4688f8:	ldp	x29, x30, [sp], #16
  4688fc:	ret
  468900:	mov	x0, #0x0                   	// #0
  468904:	b	468898 <_obstack_memory_used@@Base+0xc4a8>
  468908:	mov	x2, #0x0                   	// #0
  46890c:	str	x2, [x14, #64]
  468910:	b	468850 <_obstack_memory_used@@Base+0xc460>
  468914:	nop
  468918:	mov	x10, x0
  46891c:	cbnz	w1, 468938 <_obstack_memory_used@@Base+0xc548>
  468920:	ldr	x0, [x0, #24]
  468924:	ldrb	w1, [x0]
  468928:	cbz	w1, 468978 <_obstack_memory_used@@Base+0xc588>
  46892c:	add	x1, x0, #0x1
  468930:	str	x1, [x10, #24]
  468934:	ldrb	w1, [x0]
  468938:	stp	x29, x30, [sp, #-16]!
  46893c:	cmp	w1, #0x68
  468940:	mov	x29, sp
  468944:	b.eq	4689b4 <_obstack_memory_used@@Base+0xc5c4>  // b.none
  468948:	cmp	w1, #0x76
  46894c:	b.ne	46896c <_obstack_memory_used@@Base+0xc57c>  // b.any
  468950:	add	x11, x10, #0x18
  468954:	mov	x0, x11
  468958:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  46895c:	ldr	x0, [x10, #24]
  468960:	ldrb	w1, [x0]
  468964:	cmp	w1, #0x5f
  468968:	b.eq	468980 <_obstack_memory_used@@Base+0xc590>  // b.none
  46896c:	mov	w0, #0x0                   	// #0
  468970:	ldp	x29, x30, [sp], #16
  468974:	ret
  468978:	mov	w0, #0x0                   	// #0
  46897c:	ret
  468980:	add	x0, x0, #0x1
  468984:	str	x0, [x10, #24]
  468988:	mov	x0, x11
  46898c:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  468990:	ldr	x0, [x10, #24]
  468994:	ldrb	w1, [x0]
  468998:	cmp	w1, #0x5f
  46899c:	b.ne	46896c <_obstack_memory_used@@Base+0xc57c>  // b.any
  4689a0:	add	x1, x0, #0x1
  4689a4:	str	x1, [x10, #24]
  4689a8:	mov	w0, #0x1                   	// #1
  4689ac:	ldp	x29, x30, [sp], #16
  4689b0:	ret
  4689b4:	add	x0, x10, #0x18
  4689b8:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  4689bc:	b	468990 <_obstack_memory_used@@Base+0xc5a0>
  4689c0:	mov	x2, x0
  4689c4:	mov	w3, #0x56                  	// #86
  4689c8:	mov	w0, #0x4b                  	// #75
  4689cc:	ldrb	w1, [x2]
  4689d0:	cmp	w1, #0x72
  4689d4:	ccmp	w1, w3, #0x4, ne  // ne = any
  4689d8:	ccmp	w1, w0, #0x4, ne  // ne = any
  4689dc:	mov	w0, #0x1                   	// #1
  4689e0:	b.eq	4689f0 <_obstack_memory_used@@Base+0xc600>  // b.none
  4689e4:	cmp	w1, #0x44
  4689e8:	mov	w0, #0x0                   	// #0
  4689ec:	b.eq	4689f4 <_obstack_memory_used@@Base+0xc604>  // b.none
  4689f0:	ret
  4689f4:	ldrb	w0, [x2, #1]
  4689f8:	and	w1, w0, #0xffffffdf
  4689fc:	sub	w0, w0, #0x77
  468a00:	cmp	w1, #0x4f
  468a04:	and	w0, w0, #0xff
  468a08:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  468a0c:	cset	w0, ls  // ls = plast
  468a10:	ret
  468a14:	nop
  468a18:	ldr	x1, [x0, #24]
  468a1c:	mov	x10, x0
  468a20:	ldrb	w0, [x1]
  468a24:	cmp	w0, #0x5f
  468a28:	b.eq	468a34 <_obstack_memory_used@@Base+0xc644>  // b.none
  468a2c:	mov	w0, #0x1                   	// #1
  468a30:	ret
  468a34:	stp	x29, x30, [sp, #-16]!
  468a38:	add	x0, x1, #0x1
  468a3c:	mov	x29, sp
  468a40:	str	x0, [x10, #24]
  468a44:	ldrb	w0, [x1, #1]
  468a48:	cmp	w0, #0x5f
  468a4c:	b.eq	468a70 <_obstack_memory_used@@Base+0xc680>  // b.none
  468a50:	add	x0, x10, #0x18
  468a54:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  468a58:	mov	w1, w0
  468a5c:	mov	w0, #0x0                   	// #0
  468a60:	tbnz	w1, #31, 468a68 <_obstack_memory_used@@Base+0xc678>
  468a64:	mov	w0, #0x1                   	// #1
  468a68:	ldp	x29, x30, [sp], #16
  468a6c:	ret
  468a70:	mov	x0, x10
  468a74:	add	x1, x1, #0x2
  468a78:	str	x1, [x0, #24]!
  468a7c:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  468a80:	tbnz	w0, #31, 468ab0 <_obstack_memory_used@@Base+0xc6c0>
  468a84:	cmp	w0, #0x9
  468a88:	b.le	468a64 <_obstack_memory_used@@Base+0xc674>
  468a8c:	ldr	x1, [x10, #24]
  468a90:	mov	w0, #0x0                   	// #0
  468a94:	ldrb	w2, [x1]
  468a98:	cmp	w2, #0x5f
  468a9c:	b.ne	468a68 <_obstack_memory_used@@Base+0xc678>  // b.any
  468aa0:	add	x1, x1, #0x1
  468aa4:	mov	w0, #0x1                   	// #1
  468aa8:	str	x1, [x10, #24]
  468aac:	b	468a68 <_obstack_memory_used@@Base+0xc678>
  468ab0:	mov	w0, #0x0                   	// #0
  468ab4:	b	468a68 <_obstack_memory_used@@Base+0xc678>
  468ab8:	cbnz	x0, 468ad4 <_obstack_memory_used@@Base+0xc6e4>
  468abc:	b	468ae0 <_obstack_memory_used@@Base+0xc6f0>
  468ac0:	cmp	w1, #0x0
  468ac4:	b.le	468ae8 <_obstack_memory_used@@Base+0xc6f8>
  468ac8:	ldr	x0, [x0, #16]
  468acc:	sub	w1, w1, #0x1
  468ad0:	cbz	x0, 468ae4 <_obstack_memory_used@@Base+0xc6f4>
  468ad4:	ldr	w2, [x0]
  468ad8:	cmp	w2, #0x2f
  468adc:	b.eq	468ac0 <_obstack_memory_used@@Base+0xc6d0>  // b.none
  468ae0:	mov	x0, #0x0                   	// #0
  468ae4:	ret
  468ae8:	b.ne	468ae0 <_obstack_memory_used@@Base+0xc6f0>  // b.any
  468aec:	ldr	x0, [x0, #8]
  468af0:	ret
  468af4:	nop
  468af8:	mov	x2, x0
  468afc:	ldr	x0, [x0, #288]
  468b00:	cbz	x0, 468b18 <_obstack_memory_used@@Base+0xc728>
  468b04:	ldr	x1, [x1]
  468b08:	ldr	x0, [x0, #8]
  468b0c:	ldr	x0, [x0, #16]
  468b10:	tbnz	w1, #31, 468b20 <_obstack_memory_used@@Base+0xc730>
  468b14:	b	468ab8 <_obstack_memory_used@@Base+0xc6c8>
  468b18:	mov	w1, #0x1                   	// #1
  468b1c:	str	w1, [x2, #304]
  468b20:	ret
  468b24:	nop
  468b28:	cbz	x1, 468bfc <_obstack_memory_used@@Base+0xc80c>
  468b2c:	stp	x29, x30, [sp, #-48]!
  468b30:	mov	x29, sp
  468b34:	stp	x21, x22, [sp, #32]
  468b38:	mov	x21, #0x8001                	// #32769
  468b3c:	movk	x21, #0x410, lsl #16
  468b40:	movk	x21, #0xc600, lsl #32
  468b44:	stp	x19, x20, [sp, #16]
  468b48:	mov	x20, x0
  468b4c:	mov	x19, x1
  468b50:	mov	x22, #0x1                   	// #1
  468b54:	movk	x21, #0x19, lsl #48
  468b58:	ldr	w2, [x19]
  468b5c:	cmp	w2, #0x8
  468b60:	b.eq	468b78 <_obstack_memory_used@@Base+0xc788>  // b.none
  468b64:	b.hi	468bcc <_obstack_memory_used@@Base+0xc7dc>  // b.pmore
  468b68:	cmp	w2, #0x6
  468b6c:	b.eq	468b80 <_obstack_memory_used@@Base+0xc790>  // b.none
  468b70:	cmp	w2, #0x7
  468b74:	b.ne	468b94 <_obstack_memory_used@@Base+0xc7a4>  // b.any
  468b78:	ldr	x19, [x19, #16]
  468b7c:	cbnz	x19, 468b58 <_obstack_memory_used@@Base+0xc768>
  468b80:	mov	x0, #0x0                   	// #0
  468b84:	ldp	x19, x20, [sp, #16]
  468b88:	ldp	x21, x22, [sp, #32]
  468b8c:	ldp	x29, x30, [sp], #48
  468b90:	ret
  468b94:	cbz	w2, 468b80 <_obstack_memory_used@@Base+0xc790>
  468b98:	cmp	w2, #0x5
  468b9c:	b.ne	468be8 <_obstack_memory_used@@Base+0xc7f8>  // b.any
  468ba0:	add	x1, x19, #0x8
  468ba4:	mov	x0, x20
  468ba8:	bl	468af8 <_obstack_memory_used@@Base+0xc708>
  468bac:	cbz	x0, 468b80 <_obstack_memory_used@@Base+0xc790>
  468bb0:	ldr	w1, [x0]
  468bb4:	cmp	w1, #0x2f
  468bb8:	b.ne	468b80 <_obstack_memory_used@@Base+0xc790>  // b.any
  468bbc:	ldp	x19, x20, [sp, #16]
  468bc0:	ldp	x21, x22, [sp, #32]
  468bc4:	ldp	x29, x30, [sp], #48
  468bc8:	ret
  468bcc:	sub	w2, w2, #0x18
  468bd0:	cmp	w2, #0x34
  468bd4:	b.hi	468be8 <_obstack_memory_used@@Base+0xc7f8>  // b.pmore
  468bd8:	lsl	x2, x22, x2
  468bdc:	tst	x2, x21
  468be0:	b.ne	468b80 <_obstack_memory_used@@Base+0xc790>  // b.any
  468be4:	tbnz	w2, #27, 468b78 <_obstack_memory_used@@Base+0xc788>
  468be8:	ldr	x1, [x19, #8]
  468bec:	mov	x0, x20
  468bf0:	bl	468b28 <_obstack_memory_used@@Base+0xc738>
  468bf4:	cbz	x0, 468b78 <_obstack_memory_used@@Base+0xc788>
  468bf8:	b	468b84 <_obstack_memory_used@@Base+0xc794>
  468bfc:	mov	x0, #0x0                   	// #0
  468c00:	ret
  468c04:	nop
  468c08:	stp	x29, x30, [sp, #-48]!
  468c0c:	mov	x29, sp
  468c10:	stp	x19, x20, [sp, #16]
  468c14:	mov	x19, x2
  468c18:	add	x2, x1, #0x1
  468c1c:	stp	x21, x22, [sp, #32]
  468c20:	mov	x21, x1
  468c24:	mov	x22, x0
  468c28:	ldp	x1, x20, [x19, #8]
  468c2c:	add	x1, x2, x1
  468c30:	ldr	w2, [x19, #24]
  468c34:	cmp	x1, x20
  468c38:	b.hi	468c7c <_obstack_memory_used@@Base+0xc88c>  // b.pmore
  468c3c:	cbnz	w2, 468c6c <_obstack_memory_used@@Base+0xc87c>
  468c40:	ldp	x3, x0, [x19]
  468c44:	mov	x1, x22
  468c48:	mov	x2, x21
  468c4c:	add	x0, x3, x0
  468c50:	bl	402cd0 <memcpy@plt>
  468c54:	ldp	x0, x1, [x19]
  468c58:	add	x0, x0, x21
  468c5c:	strb	wzr, [x0, x1]
  468c60:	ldr	x1, [x19, #8]
  468c64:	add	x1, x1, x21
  468c68:	str	x1, [x19, #8]
  468c6c:	ldp	x19, x20, [sp, #16]
  468c70:	ldp	x21, x22, [sp, #32]
  468c74:	ldp	x29, x30, [sp], #48
  468c78:	ret
  468c7c:	cbnz	w2, 468c6c <_obstack_memory_used@@Base+0xc87c>
  468c80:	cbz	x20, 468cb8 <_obstack_memory_used@@Base+0xc8c8>
  468c84:	nop
  468c88:	lsl	x20, x20, #1
  468c8c:	cmp	x1, x20
  468c90:	b.hi	468c88 <_obstack_memory_used@@Base+0xc898>  // b.pmore
  468c94:	ldr	x0, [x19]
  468c98:	mov	x1, x20
  468c9c:	bl	4030b0 <realloc@plt>
  468ca0:	cbz	x0, 468cc8 <_obstack_memory_used@@Base+0xc8d8>
  468ca4:	ldr	w2, [x19, #24]
  468ca8:	str	x0, [x19]
  468cac:	str	x20, [x19, #16]
  468cb0:	cbz	w2, 468c40 <_obstack_memory_used@@Base+0xc850>
  468cb4:	b	468c6c <_obstack_memory_used@@Base+0xc87c>
  468cb8:	cmp	x1, #0x2
  468cbc:	mov	x20, #0x2                   	// #2
  468cc0:	b.hi	468c88 <_obstack_memory_used@@Base+0xc898>  // b.pmore
  468cc4:	b	468c94 <_obstack_memory_used@@Base+0xc8a4>
  468cc8:	ldr	x0, [x19]
  468ccc:	bl	4032a0 <free@plt>
  468cd0:	stp	xzr, xzr, [x19]
  468cd4:	mov	w0, #0x1                   	// #1
  468cd8:	str	xzr, [x19, #16]
  468cdc:	str	w0, [x19, #24]
  468ce0:	b	468c6c <_obstack_memory_used@@Base+0xc87c>
  468ce4:	nop
  468ce8:	stp	x29, x30, [sp, #-112]!
  468cec:	mov	x29, sp
  468cf0:	ldr	x2, [x0, #24]
  468cf4:	stp	x19, x20, [sp, #16]
  468cf8:	mov	x19, x0
  468cfc:	str	xzr, [sp, #104]
  468d00:	ldrb	w3, [x2]
  468d04:	cmp	w3, w1, uxtb
  468d08:	b.eq	469408 <_obstack_memory_used@@Base+0xd018>  // b.none
  468d0c:	stp	x21, x22, [sp, #32]
  468d10:	add	x21, sp, #0x68
  468d14:	mov	w22, #0x1                   	// #1
  468d18:	stp	x23, x24, [sp, #48]
  468d1c:	and	w23, w1, #0xff
  468d20:	mov	w24, #0x6d                  	// #109
  468d24:	stp	x25, x26, [sp, #64]
  468d28:	ldr	w25, [x19, #76]
  468d2c:	str	w22, [x19, #76]
  468d30:	ldrb	w0, [x2]
  468d34:	cmp	w0, #0x4c
  468d38:	b.eq	468f08 <_obstack_memory_used@@Base+0xcb18>  // b.none
  468d3c:	cmp	w0, #0x54
  468d40:	b.eq	468f98 <_obstack_memory_used@@Base+0xcba8>  // b.none
  468d44:	cmp	w0, #0x73
  468d48:	b.eq	468ec8 <_obstack_memory_used@@Base+0xcad8>  // b.none
  468d4c:	cmp	w0, #0x66
  468d50:	b.ne	468dec <_obstack_memory_used@@Base+0xc9fc>  // b.any
  468d54:	ldrb	w0, [x2, #1]
  468d58:	cmp	w0, #0x70
  468d5c:	b.eq	468fa8 <_obstack_memory_used@@Base+0xcbb8>  // b.none
  468d60:	mov	x0, x19
  468d64:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  468d68:	mov	x20, x0
  468d6c:	cbz	x0, 468dcc <_obstack_memory_used@@Base+0xc9dc>
  468d70:	ldr	w0, [x0]
  468d74:	cmp	w0, #0x32
  468d78:	b.eq	469010 <_obstack_memory_used@@Base+0xcc20>  // b.none
  468d7c:	cmp	w0, #0x34
  468d80:	b.eq	469428 <_obstack_memory_used@@Base+0xd038>  // b.none
  468d84:	b.hi	468dc8 <_obstack_memory_used@@Base+0xc9d8>  // b.pmore
  468d88:	cmp	w0, #0x33
  468d8c:	b.ne	468dc8 <_obstack_memory_used@@Base+0xc9d8>  // b.any
  468d90:	ldr	w0, [x20, #8]
  468d94:	cmp	w0, #0x2
  468d98:	b.eq	468dc8 <_obstack_memory_used@@Base+0xc9d8>  // b.none
  468d9c:	b.gt	468dc8 <_obstack_memory_used@@Base+0xc9d8>
  468da0:	cbnz	w0, 4691d8 <_obstack_memory_used@@Base+0xcde8>
  468da4:	mov	x2, x20
  468da8:	mov	x0, x19
  468dac:	mov	x3, #0x0                   	// #0
  468db0:	mov	w1, #0x36                  	// #54
  468db4:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  468db8:	mov	x20, x0
  468dbc:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  468dc0:	ldr	x27, [sp, #80]
  468dc4:	nop
  468dc8:	mov	x20, #0x0                   	// #0
  468dcc:	str	w25, [x19, #76]
  468dd0:	mov	x0, x20
  468dd4:	ldp	x19, x20, [sp, #16]
  468dd8:	ldp	x21, x22, [sp, #32]
  468ddc:	ldp	x23, x24, [sp, #48]
  468de0:	ldp	x25, x26, [sp, #64]
  468de4:	ldp	x29, x30, [sp], #112
  468de8:	ret
  468dec:	sub	w1, w0, #0x30
  468df0:	and	w1, w1, #0xff
  468df4:	cmp	w1, #0x9
  468df8:	b.hi	468f18 <_obstack_memory_used@@Base+0xcb28>  // b.pmore
  468dfc:	mov	x0, x19
  468e00:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  468e04:	mov	x20, x0
  468e08:	cbz	x0, 468dcc <_obstack_memory_used@@Base+0xc9dc>
  468e0c:	ldr	x0, [x19, #24]
  468e10:	ldrb	w1, [x0]
  468e14:	cmp	w1, #0x49
  468e18:	b.eq	468e78 <_obstack_memory_used@@Base+0xca88>  // b.none
  468e1c:	str	w25, [x19, #76]
  468e20:	mov	x2, x20
  468e24:	mov	x0, x19
  468e28:	mov	x3, #0x0                   	// #0
  468e2c:	mov	w1, #0x2e                  	// #46
  468e30:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  468e34:	str	x0, [x21]
  468e38:	cbz	x0, 468ea8 <_obstack_memory_used@@Base+0xcab8>
  468e3c:	ldr	x2, [x19, #24]
  468e40:	add	x21, x0, #0x10
  468e44:	ldrb	w0, [x2]
  468e48:	cmp	w0, w23
  468e4c:	b.ne	468d28 <_obstack_memory_used@@Base+0xc938>  // b.any
  468e50:	ldr	x20, [sp, #104]
  468e54:	add	x2, x2, #0x1
  468e58:	str	x2, [x19, #24]
  468e5c:	mov	x0, x20
  468e60:	ldp	x19, x20, [sp, #16]
  468e64:	ldp	x21, x22, [sp, #32]
  468e68:	ldp	x23, x24, [sp, #48]
  468e6c:	ldp	x25, x26, [sp, #64]
  468e70:	ldp	x29, x30, [sp], #112
  468e74:	ret
  468e78:	add	x0, x0, #0x1
  468e7c:	str	x0, [x19, #24]
  468e80:	mov	x0, x19
  468e84:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  468e88:	mov	x3, x0
  468e8c:	mov	x2, x20
  468e90:	mov	x0, x19
  468e94:	mov	w1, #0x4                   	// #4
  468e98:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  468e9c:	mov	x20, x0
  468ea0:	str	w25, [x19, #76]
  468ea4:	cbnz	x20, 468e20 <_obstack_memory_used@@Base+0xca30>
  468ea8:	mov	x20, #0x0                   	// #0
  468eac:	mov	x0, x20
  468eb0:	ldp	x19, x20, [sp, #16]
  468eb4:	ldp	x21, x22, [sp, #32]
  468eb8:	ldp	x23, x24, [sp, #48]
  468ebc:	ldp	x25, x26, [sp, #64]
  468ec0:	ldp	x29, x30, [sp], #112
  468ec4:	ret
  468ec8:	ldrb	w0, [x2, #1]
  468ecc:	cmp	w0, #0x72
  468ed0:	b.eq	469158 <_obstack_memory_used@@Base+0xcd68>  // b.none
  468ed4:	cmp	w0, #0x70
  468ed8:	b.ne	468d60 <_obstack_memory_used@@Base+0xc970>  // b.any
  468edc:	add	x2, x2, #0x2
  468ee0:	str	x2, [x19, #24]
  468ee4:	mov	x0, x19
  468ee8:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  468eec:	mov	x2, x0
  468ef0:	mov	x3, #0x0                   	// #0
  468ef4:	mov	x0, x19
  468ef8:	mov	w1, #0x4b                  	// #75
  468efc:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  468f00:	mov	x20, x0
  468f04:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  468f08:	mov	x0, x19
  468f0c:	bl	46c2b0 <_obstack_memory_used@@Base+0xfec0>
  468f10:	mov	x20, x0
  468f14:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  468f18:	cmp	w0, #0x6f
  468f1c:	b.ne	468f38 <_obstack_memory_used@@Base+0xcb48>  // b.any
  468f20:	ldrb	w0, [x2, #1]
  468f24:	cmp	w0, #0x6e
  468f28:	b.ne	468d60 <_obstack_memory_used@@Base+0xc970>  // b.any
  468f2c:	add	x2, x2, #0x2
  468f30:	str	x2, [x19, #24]
  468f34:	b	468dfc <_obstack_memory_used@@Base+0xca0c>
  468f38:	cmp	w0, #0x69
  468f3c:	mov	w1, #0x74                  	// #116
  468f40:	ccmp	w0, w1, #0x4, ne  // ne = any
  468f44:	b.ne	468d60 <_obstack_memory_used@@Base+0xc970>  // b.any
  468f48:	ldrb	w1, [x2, #1]
  468f4c:	cmp	w1, #0x6c
  468f50:	b.ne	468d60 <_obstack_memory_used@@Base+0xc970>  // b.any
  468f54:	add	x1, x2, #0x2
  468f58:	str	x1, [x19, #24]
  468f5c:	cmp	w0, #0x74
  468f60:	mov	x20, #0x0                   	// #0
  468f64:	b.eq	4692a8 <_obstack_memory_used@@Base+0xceb8>  // b.none
  468f68:	ldrb	w0, [x1, #1]
  468f6c:	cbz	w0, 468dc8 <_obstack_memory_used@@Base+0xc9d8>
  468f70:	mov	w1, #0x45                  	// #69
  468f74:	mov	x0, x19
  468f78:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  468f7c:	mov	x3, x0
  468f80:	mov	x2, x20
  468f84:	mov	x0, x19
  468f88:	mov	w1, #0x31                  	// #49
  468f8c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  468f90:	mov	x20, x0
  468f94:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  468f98:	mov	x0, x19
  468f9c:	bl	468430 <_obstack_memory_used@@Base+0xc040>
  468fa0:	mov	x20, x0
  468fa4:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  468fa8:	add	x0, x2, #0x2
  468fac:	str	x0, [x19, #24]
  468fb0:	ldrb	w0, [x2, #2]
  468fb4:	cmp	w0, #0x54
  468fb8:	b.eq	469148 <_obstack_memory_used@@Base+0xcd58>  // b.none
  468fbc:	mov	x0, x19
  468fc0:	bl	4683b8 <_obstack_memory_used@@Base+0xbfc8>
  468fc4:	mvn	x1, x0
  468fc8:	tst	x1, #0x7fffffff
  468fcc:	b.eq	468dc8 <_obstack_memory_used@@Base+0xc9d8>  // b.none
  468fd0:	add	w0, w0, #0x1
  468fd4:	ldp	w1, w2, [x19, #40]
  468fd8:	cmp	w1, w2
  468fdc:	b.ge	468dc8 <_obstack_memory_used@@Base+0xc9d8>  // b.tcont
  468fe0:	mov	w3, #0x18                  	// #24
  468fe4:	add	w4, w1, #0x1
  468fe8:	ldr	x2, [x19, #32]
  468fec:	smull	x1, w1, w3
  468ff0:	mov	w3, #0x6                   	// #6
  468ff4:	sxtw	x0, w0
  468ff8:	add	x20, x2, x1
  468ffc:	str	wzr, [x20, #4]
  469000:	str	w4, [x19, #40]
  469004:	str	w3, [x2, x1]
  469008:	str	x0, [x20, #8]
  46900c:	b	468e1c <_obstack_memory_used@@Base+0xca2c>
  469010:	ldr	x2, [x20, #8]
  469014:	ldr	w0, [x19, #72]
  469018:	ldr	w1, [x2, #16]
  46901c:	ldr	x26, [x2]
  469020:	sub	w1, w1, #0x2
  469024:	add	w0, w0, w1
  469028:	str	w0, [x19, #72]
  46902c:	ldrb	w1, [x26]
  469030:	cmp	w1, #0x73
  469034:	b.eq	469124 <_obstack_memory_used@@Base+0xcd34>  // b.none
  469038:	str	x27, [sp, #80]
  46903c:	ldr	w27, [x2, #20]
  469040:	cmp	w27, #0x1
  469044:	b.eq	4691f0 <_obstack_memory_used@@Base+0xce00>  // b.none
  469048:	b.le	4691cc <_obstack_memory_used@@Base+0xcddc>
  46904c:	cmp	w27, #0x2
  469050:	b.eq	469310 <_obstack_memory_used@@Base+0xcf20>  // b.none
  469054:	cmp	w27, #0x3
  469058:	b.ne	468dc0 <_obstack_memory_used@@Base+0xc9d0>  // b.any
  46905c:	cmp	w1, #0x71
  469060:	b.eq	4692c4 <_obstack_memory_used@@Base+0xced4>  // b.none
  469064:	ldrb	w0, [x26]
  469068:	cmp	w0, #0x66
  46906c:	b.eq	469494 <_obstack_memory_used@@Base+0xd0a4>  // b.none
  469070:	cmp	w0, #0x6e
  469074:	b.ne	469300 <_obstack_memory_used@@Base+0xcf10>  // b.any
  469078:	ldrb	w0, [x26, #1]
  46907c:	mov	w1, #0x61                  	// #97
  469080:	cmp	w0, #0x77
  469084:	ccmp	w0, w1, #0x4, ne  // ne = any
  469088:	b.ne	469300 <_obstack_memory_used@@Base+0xcf10>  // b.any
  46908c:	mov	w1, #0x5f                  	// #95
  469090:	mov	x0, x19
  469094:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  469098:	mov	x26, x0
  46909c:	mov	x0, x19
  4690a0:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  4690a4:	ldr	x1, [x19, #24]
  4690a8:	mov	x27, x0
  4690ac:	ldrb	w0, [x1]
  4690b0:	cmp	w0, #0x45
  4690b4:	b.eq	4694f4 <_obstack_memory_used@@Base+0xd104>  // b.none
  4690b8:	cmp	w0, #0x70
  4690bc:	b.eq	4694cc <_obstack_memory_used@@Base+0xd0dc>  // b.none
  4690c0:	cmp	w0, #0x69
  4690c4:	b.ne	469300 <_obstack_memory_used@@Base+0xcf10>  // b.any
  4690c8:	ldrb	w0, [x1, #1]
  4690cc:	cmp	w0, #0x6c
  4690d0:	b.ne	469300 <_obstack_memory_used@@Base+0xcf10>  // b.any
  4690d4:	mov	x0, x19
  4690d8:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4690dc:	mov	x3, x0
  4690e0:	mov	x2, x27
  4690e4:	mov	w1, #0x3c                  	// #60
  4690e8:	mov	x0, x19
  4690ec:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4690f0:	mov	x2, x26
  4690f4:	mov	x3, x0
  4690f8:	mov	w1, #0x3b                  	// #59
  4690fc:	mov	x0, x19
  469100:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  469104:	mov	x3, x0
  469108:	mov	x2, x20
  46910c:	mov	x0, x19
  469110:	mov	w1, #0x3a                  	// #58
  469114:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  469118:	mov	x20, x0
  46911c:	ldr	x27, [sp, #80]
  469120:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  469124:	ldrb	w0, [x26, #1]
  469128:	cmp	w0, #0x74
  46912c:	b.ne	469038 <_obstack_memory_used@@Base+0xcc48>  // b.any
  469130:	ldrb	w0, [x26, #2]
  469134:	cbnz	w0, 469038 <_obstack_memory_used@@Base+0xcc48>
  469138:	mov	x0, x19
  46913c:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  469140:	mov	x3, x0
  469144:	b	469234 <_obstack_memory_used@@Base+0xce44>
  469148:	add	x2, x2, #0x3
  46914c:	mov	w0, #0x0                   	// #0
  469150:	str	x2, [x19, #24]
  469154:	b	468fd4 <_obstack_memory_used@@Base+0xcbe4>
  469158:	add	x2, x2, #0x2
  46915c:	str	x2, [x19, #24]
  469160:	mov	x0, x19
  469164:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  469168:	mov	x20, x0
  46916c:	mov	x0, x19
  469170:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  469174:	ldr	x1, [x19, #24]
  469178:	mov	x26, x0
  46917c:	mov	x3, x26
  469180:	ldrb	w0, [x1]
  469184:	cmp	w0, #0x49
  469188:	b.ne	4691b4 <_obstack_memory_used@@Base+0xcdc4>  // b.any
  46918c:	add	x1, x1, #0x1
  469190:	str	x1, [x19, #24]
  469194:	mov	x0, x19
  469198:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  46919c:	mov	x3, x0
  4691a0:	mov	x2, x26
  4691a4:	mov	x0, x19
  4691a8:	mov	w1, #0x4                   	// #4
  4691ac:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4691b0:	mov	x3, x0
  4691b4:	mov	x2, x20
  4691b8:	mov	x0, x19
  4691bc:	mov	w1, #0x1                   	// #1
  4691c0:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4691c4:	mov	x20, x0
  4691c8:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  4691cc:	cbnz	w27, 468dc0 <_obstack_memory_used@@Base+0xc9d0>
  4691d0:	ldr	x27, [sp, #80]
  4691d4:	b	468da4 <_obstack_memory_used@@Base+0xc9b4>
  4691d8:	cmp	w0, #0x1
  4691dc:	b.ne	468dc8 <_obstack_memory_used@@Base+0xc9d8>  // b.any
  4691e0:	mov	x0, x19
  4691e4:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4691e8:	mov	x3, x0
  4691ec:	b	469234 <_obstack_memory_used@@Base+0xce44>
  4691f0:	ldrb	w0, [x26]
  4691f4:	cmp	w0, #0x70
  4691f8:	ccmp	w0, w24, #0x4, ne  // ne = any
  4691fc:	b.eq	469278 <_obstack_memory_used@@Base+0xce88>  // b.none
  469200:	mov	w27, #0x0                   	// #0
  469204:	cmp	w1, #0x73
  469208:	b.ne	46924c <_obstack_memory_used@@Base+0xce5c>  // b.any
  46920c:	ldrb	w0, [x26, #1]
  469210:	cmp	w0, #0x50
  469214:	b.ne	46924c <_obstack_memory_used@@Base+0xce5c>  // b.any
  469218:	ldrb	w0, [x26, #2]
  46921c:	cbnz	w0, 46924c <_obstack_memory_used@@Base+0xce5c>
  469220:	mov	x0, x19
  469224:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  469228:	mov	x3, x0
  46922c:	cbnz	w27, 46925c <_obstack_memory_used@@Base+0xce6c>
  469230:	ldr	x27, [sp, #80]
  469234:	mov	x2, x20
  469238:	mov	x0, x19
  46923c:	mov	w1, #0x37                  	// #55
  469240:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  469244:	mov	x20, x0
  469248:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  46924c:	mov	x0, x19
  469250:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469254:	mov	x3, x0
  469258:	cbz	w27, 469230 <_obstack_memory_used@@Base+0xce40>
  46925c:	mov	x2, x3
  469260:	mov	x0, x19
  469264:	mov	w1, #0x39                  	// #57
  469268:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46926c:	mov	x3, x0
  469270:	ldr	x27, [sp, #80]
  469274:	b	469234 <_obstack_memory_used@@Base+0xce44>
  469278:	ldrb	w2, [x26, #1]
  46927c:	cmp	w2, w0
  469280:	b.ne	469200 <_obstack_memory_used@@Base+0xce10>  // b.any
  469284:	ldr	x0, [x19, #24]
  469288:	ldrb	w2, [x0]
  46928c:	cmp	w2, #0x5f
  469290:	b.ne	469204 <_obstack_memory_used@@Base+0xce14>  // b.any
  469294:	add	x0, x0, #0x1
  469298:	str	x0, [x19, #24]
  46929c:	mov	w27, #0x0                   	// #0
  4692a0:	ldrb	w1, [x26]
  4692a4:	b	469204 <_obstack_memory_used@@Base+0xce14>
  4692a8:	mov	x0, x19
  4692ac:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  4692b0:	ldr	x1, [x19, #24]
  4692b4:	mov	x20, x0
  4692b8:	ldrb	w0, [x1, #1]
  4692bc:	cbnz	w0, 468f70 <_obstack_memory_used@@Base+0xcb80>
  4692c0:	b	468dc8 <_obstack_memory_used@@Base+0xc9d8>
  4692c4:	ldrb	w0, [x26, #1]
  4692c8:	cmp	w0, #0x75
  4692cc:	b.ne	469064 <_obstack_memory_used@@Base+0xcc74>  // b.any
  4692d0:	ldrb	w0, [x26, #2]
  4692d4:	cbnz	w0, 469064 <_obstack_memory_used@@Base+0xcc74>
  4692d8:	mov	x0, x19
  4692dc:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4692e0:	mov	x26, x0
  4692e4:	mov	x0, x19
  4692e8:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4692ec:	mov	x27, x0
  4692f0:	mov	x0, x19
  4692f4:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4692f8:	mov	x3, x0
  4692fc:	cbnz	x0, 4690e0 <_obstack_memory_used@@Base+0xccf0>
  469300:	mov	x20, #0x0                   	// #0
  469304:	ldr	x27, [sp, #80]
  469308:	str	w25, [x19, #76]
  46930c:	b	468dd0 <_obstack_memory_used@@Base+0xc9e0>
  469310:	ldr	x0, [x20, #8]
  469314:	ldr	x0, [x0]
  469318:	ldrb	w1, [x0, #1]
  46931c:	cmp	w1, #0x63
  469320:	b.eq	469454 <_obstack_memory_used@@Base+0xd064>  // b.none
  469324:	ldrb	w0, [x26]
  469328:	cmp	w0, #0x66
  46932c:	b.eq	469484 <_obstack_memory_used@@Base+0xd094>  // b.none
  469330:	mov	x0, x19
  469334:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469338:	mov	x27, x0
  46933c:	ldrb	w1, [x26]
  469340:	cmp	w1, #0x63
  469344:	b.ne	469370 <_obstack_memory_used@@Base+0xcf80>  // b.any
  469348:	ldrb	w0, [x26, #1]
  46934c:	cmp	w0, #0x6c
  469350:	b.ne	469370 <_obstack_memory_used@@Base+0xcf80>  // b.any
  469354:	ldrb	w0, [x26, #2]
  469358:	cbnz	w0, 469370 <_obstack_memory_used@@Base+0xcf80>
  46935c:	mov	x0, x19
  469360:	mov	w1, #0x45                  	// #69
  469364:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  469368:	mov	x26, x0
  46936c:	b	4693a8 <_obstack_memory_used@@Base+0xcfb8>
  469370:	cmp	w1, #0x64
  469374:	b.ne	4693dc <_obstack_memory_used@@Base+0xcfec>  // b.any
  469378:	ldrb	w0, [x26, #1]
  46937c:	cmp	w0, #0x74
  469380:	b.ne	4693dc <_obstack_memory_used@@Base+0xcfec>  // b.any
  469384:	ldrb	w0, [x26, #2]
  469388:	cbnz	w0, 4693dc <_obstack_memory_used@@Base+0xcfec>
  46938c:	mov	x0, x19
  469390:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  469394:	ldr	x1, [x19, #24]
  469398:	mov	x26, x0
  46939c:	ldrb	w0, [x1]
  4693a0:	cmp	w0, #0x49
  4693a4:	b.eq	4694a0 <_obstack_memory_used@@Base+0xd0b0>  // b.none
  4693a8:	mov	x2, x27
  4693ac:	mov	x3, x26
  4693b0:	mov	w1, #0x39                  	// #57
  4693b4:	mov	x0, x19
  4693b8:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4693bc:	mov	x3, x0
  4693c0:	mov	x2, x20
  4693c4:	mov	x0, x19
  4693c8:	mov	w1, #0x38                  	// #56
  4693cc:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4693d0:	mov	x20, x0
  4693d4:	ldr	x27, [sp, #80]
  4693d8:	b	468ea0 <_obstack_memory_used@@Base+0xcab0>
  4693dc:	cmp	w1, #0x70
  4693e0:	b.ne	4693f8 <_obstack_memory_used@@Base+0xd008>  // b.any
  4693e4:	ldrb	w0, [x26, #1]
  4693e8:	cmp	w0, #0x74
  4693ec:	b.ne	4693f8 <_obstack_memory_used@@Base+0xd008>  // b.any
  4693f0:	ldrb	w0, [x26, #2]
  4693f4:	cbz	w0, 46938c <_obstack_memory_used@@Base+0xcf9c>
  4693f8:	mov	x0, x19
  4693fc:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469400:	mov	x26, x0
  469404:	b	4693a8 <_obstack_memory_used@@Base+0xcfb8>
  469408:	add	x2, x2, #0x1
  46940c:	str	x2, [x0, #24]
  469410:	ldp	x19, x20, [sp, #16]
  469414:	mov	x3, #0x0                   	// #0
  469418:	ldp	x29, x30, [sp], #112
  46941c:	mov	w1, #0x2e                  	// #46
  469420:	mov	x2, #0x0                   	// #0
  469424:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469428:	ldr	x0, [x19, #24]
  46942c:	ldrb	w1, [x0]
  469430:	cmp	w1, #0x5f
  469434:	b.ne	4691e0 <_obstack_memory_used@@Base+0xcdf0>  // b.any
  469438:	add	x0, x0, #0x1
  46943c:	str	x0, [x19, #24]
  469440:	mov	w1, #0x45                  	// #69
  469444:	mov	x0, x19
  469448:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  46944c:	mov	x3, x0
  469450:	b	469234 <_obstack_memory_used@@Base+0xce44>
  469454:	ldrb	w0, [x0]
  469458:	sub	w1, w0, #0x72
  46945c:	sub	w0, w0, #0x63
  469460:	and	w1, w1, #0xff
  469464:	and	w0, w0, #0xff
  469468:	cmp	w1, #0x1
  46946c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  469470:	b.hi	469324 <_obstack_memory_used@@Base+0xcf34>  // b.pmore
  469474:	mov	x0, x19
  469478:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46947c:	mov	x27, x0
  469480:	b	46933c <_obstack_memory_used@@Base+0xcf4c>
  469484:	mov	x0, x19
  469488:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  46948c:	mov	x27, x0
  469490:	b	46933c <_obstack_memory_used@@Base+0xcf4c>
  469494:	mov	x0, x19
  469498:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  46949c:	b	4692e0 <_obstack_memory_used@@Base+0xcef0>
  4694a0:	add	x1, x1, #0x1
  4694a4:	str	x1, [x19, #24]
  4694a8:	mov	x0, x19
  4694ac:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  4694b0:	mov	x3, x0
  4694b4:	mov	x2, x26
  4694b8:	mov	x0, x19
  4694bc:	mov	w1, #0x4                   	// #4
  4694c0:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4694c4:	mov	x26, x0
  4694c8:	b	4693a8 <_obstack_memory_used@@Base+0xcfb8>
  4694cc:	ldrb	w0, [x1, #1]
  4694d0:	cmp	w0, #0x69
  4694d4:	b.ne	469300 <_obstack_memory_used@@Base+0xcf10>  // b.any
  4694d8:	add	x1, x1, #0x2
  4694dc:	str	x1, [x19, #24]
  4694e0:	mov	x0, x19
  4694e4:	mov	w1, #0x45                  	// #69
  4694e8:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  4694ec:	mov	x3, x0
  4694f0:	b	4690e0 <_obstack_memory_used@@Base+0xccf0>
  4694f4:	add	x1, x1, #0x1
  4694f8:	mov	x3, #0x0                   	// #0
  4694fc:	str	x1, [x19, #24]
  469500:	b	4690e0 <_obstack_memory_used@@Base+0xccf0>
  469504:	nop
  469508:	ldr	x2, [x0, #24]
  46950c:	ldrb	w1, [x2]
  469510:	cmp	w1, #0x4c
  469514:	b.eq	4696a4 <_obstack_memory_used@@Base+0xd2b4>  // b.none
  469518:	cmp	w1, #0x54
  46951c:	b.eq	469728 <_obstack_memory_used@@Base+0xd338>  // b.none
  469520:	stp	x29, x30, [sp, #-48]!
  469524:	cmp	w1, #0x73
  469528:	mov	x29, sp
  46952c:	stp	x19, x20, [sp, #16]
  469530:	mov	x19, x0
  469534:	b.eq	4695ec <_obstack_memory_used@@Base+0xd1fc>  // b.none
  469538:	cmp	w1, #0x66
  46953c:	b.eq	469580 <_obstack_memory_used@@Base+0xd190>  // b.none
  469540:	sub	w3, w1, #0x30
  469544:	and	w3, w3, #0xff
  469548:	cmp	w3, #0x9
  46954c:	b.hi	4696a8 <_obstack_memory_used@@Base+0xd2b8>  // b.pmore
  469550:	mov	x0, x19
  469554:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  469558:	mov	x20, x0
  46955c:	cbz	x0, 469690 <_obstack_memory_used@@Base+0xd2a0>
  469560:	ldr	x0, [x19, #24]
  469564:	ldrb	w1, [x0]
  469568:	cmp	w1, #0x49
  46956c:	b.eq	469800 <_obstack_memory_used@@Base+0xd410>  // b.none
  469570:	mov	x0, x20
  469574:	ldp	x19, x20, [sp, #16]
  469578:	ldp	x29, x30, [sp], #48
  46957c:	ret
  469580:	ldrb	w1, [x2, #1]
  469584:	cmp	w1, #0x70
  469588:	b.eq	469628 <_obstack_memory_used@@Base+0xd238>  // b.none
  46958c:	mov	x0, x19
  469590:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  469594:	mov	x20, x0
  469598:	cbz	x0, 469690 <_obstack_memory_used@@Base+0xd2a0>
  46959c:	ldr	w0, [x0]
  4695a0:	cmp	w0, #0x32
  4695a4:	b.eq	46972c <_obstack_memory_used@@Base+0xd33c>  // b.none
  4695a8:	cmp	w0, #0x34
  4695ac:	b.eq	469b58 <_obstack_memory_used@@Base+0xd768>  // b.none
  4695b0:	b.hi	469690 <_obstack_memory_used@@Base+0xd2a0>  // b.pmore
  4695b4:	cmp	w0, #0x33
  4695b8:	b.ne	469690 <_obstack_memory_used@@Base+0xd2a0>  // b.any
  4695bc:	ldr	w0, [x20, #8]
  4695c0:	cmp	w0, #0x2
  4695c4:	b.eq	469690 <_obstack_memory_used@@Base+0xd2a0>  // b.none
  4695c8:	b.gt	469690 <_obstack_memory_used@@Base+0xd2a0>
  4695cc:	cbnz	w0, 4698f4 <_obstack_memory_used@@Base+0xd504>
  4695d0:	mov	x2, x20
  4695d4:	mov	x0, x19
  4695d8:	ldp	x19, x20, [sp, #16]
  4695dc:	mov	x3, #0x0                   	// #0
  4695e0:	ldp	x29, x30, [sp], #48
  4695e4:	mov	w1, #0x36                  	// #54
  4695e8:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  4695ec:	ldrb	w1, [x2, #1]
  4695f0:	cmp	w1, #0x72
  4695f4:	b.eq	46982c <_obstack_memory_used@@Base+0xd43c>  // b.none
  4695f8:	cmp	w1, #0x70
  4695fc:	b.ne	46958c <_obstack_memory_used@@Base+0xd19c>  // b.any
  469600:	add	x2, x2, #0x2
  469604:	str	x2, [x0, #24]
  469608:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  46960c:	mov	x2, x0
  469610:	mov	x0, x19
  469614:	mov	x3, #0x0                   	// #0
  469618:	ldp	x19, x20, [sp, #16]
  46961c:	mov	w1, #0x4b                  	// #75
  469620:	ldp	x29, x30, [sp], #48
  469624:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469628:	add	x1, x2, #0x2
  46962c:	str	x1, [x0, #24]
  469630:	ldrb	w1, [x2, #2]
  469634:	cmp	w1, #0x54
  469638:	b.eq	4699b8 <_obstack_memory_used@@Base+0xd5c8>  // b.none
  46963c:	bl	4683b8 <_obstack_memory_used@@Base+0xbfc8>
  469640:	mvn	x1, x0
  469644:	add	w0, w0, #0x1
  469648:	tst	x1, #0x7fffffff
  46964c:	b.eq	469690 <_obstack_memory_used@@Base+0xd2a0>  // b.none
  469650:	ldp	w1, w2, [x19, #40]
  469654:	cmp	w1, w2
  469658:	b.ge	469690 <_obstack_memory_used@@Base+0xd2a0>  // b.tcont
  46965c:	mov	w3, #0x18                  	// #24
  469660:	add	w4, w1, #0x1
  469664:	ldr	x2, [x19, #32]
  469668:	smull	x1, w1, w3
  46966c:	mov	w3, #0x6                   	// #6
  469670:	sxtw	x0, w0
  469674:	add	x20, x2, x1
  469678:	str	wzr, [x20, #4]
  46967c:	str	w4, [x19, #40]
  469680:	str	w3, [x2, x1]
  469684:	str	x0, [x20, #8]
  469688:	b	469570 <_obstack_memory_used@@Base+0xd180>
  46968c:	ldp	x21, x22, [sp, #32]
  469690:	mov	x20, #0x0                   	// #0
  469694:	mov	x0, x20
  469698:	ldp	x19, x20, [sp, #16]
  46969c:	ldp	x29, x30, [sp], #48
  4696a0:	ret
  4696a4:	b	46c2b0 <_obstack_memory_used@@Base+0xfec0>
  4696a8:	cmp	w1, #0x6f
  4696ac:	b.ne	4696c8 <_obstack_memory_used@@Base+0xd2d8>  // b.any
  4696b0:	ldrb	w0, [x2, #1]
  4696b4:	cmp	w0, #0x6e
  4696b8:	b.ne	46958c <_obstack_memory_used@@Base+0xd19c>  // b.any
  4696bc:	add	x2, x2, #0x2
  4696c0:	str	x2, [x19, #24]
  4696c4:	b	469550 <_obstack_memory_used@@Base+0xd160>
  4696c8:	cmp	w1, #0x69
  4696cc:	mov	w3, #0x74                  	// #116
  4696d0:	ccmp	w1, w3, #0x4, ne  // ne = any
  4696d4:	b.ne	46958c <_obstack_memory_used@@Base+0xd19c>  // b.any
  4696d8:	ldrb	w3, [x2, #1]
  4696dc:	cmp	w3, #0x6c
  4696e0:	b.ne	46958c <_obstack_memory_used@@Base+0xd19c>  // b.any
  4696e4:	add	x3, x2, #0x2
  4696e8:	str	x3, [x0, #24]
  4696ec:	cmp	w1, #0x74
  4696f0:	mov	x20, #0x0                   	// #0
  4696f4:	b.eq	4698e4 <_obstack_memory_used@@Base+0xd4f4>  // b.none
  4696f8:	ldrb	w0, [x3, #1]
  4696fc:	cbz	w0, 469690 <_obstack_memory_used@@Base+0xd2a0>
  469700:	mov	x0, x19
  469704:	mov	w1, #0x45                  	// #69
  469708:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  46970c:	mov	x3, x0
  469710:	mov	x2, x20
  469714:	mov	x0, x19
  469718:	ldp	x19, x20, [sp, #16]
  46971c:	mov	w1, #0x31                  	// #49
  469720:	ldp	x29, x30, [sp], #48
  469724:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469728:	b	468430 <_obstack_memory_used@@Base+0xc040>
  46972c:	ldr	x2, [x20, #8]
  469730:	stp	x21, x22, [sp, #32]
  469734:	ldr	w0, [x19, #72]
  469738:	ldr	w1, [x2, #16]
  46973c:	ldr	x21, [x2]
  469740:	sub	w1, w1, #0x2
  469744:	add	w0, w0, w1
  469748:	str	w0, [x19, #72]
  46974c:	ldrb	w1, [x21]
  469750:	cmp	w1, #0x73
  469754:	b.eq	46987c <_obstack_memory_used@@Base+0xd48c>  // b.none
  469758:	ldr	w22, [x2, #20]
  46975c:	cmp	w22, #0x1
  469760:	b.eq	46992c <_obstack_memory_used@@Base+0xd53c>  // b.none
  469764:	b.le	469920 <_obstack_memory_used@@Base+0xd530>
  469768:	cmp	w22, #0x2
  46976c:	b.eq	4699e4 <_obstack_memory_used@@Base+0xd5f4>  // b.none
  469770:	cmp	w22, #0x3
  469774:	b.ne	46968c <_obstack_memory_used@@Base+0xd29c>  // b.any
  469778:	cmp	w1, #0x71
  46977c:	b.ne	469a74 <_obstack_memory_used@@Base+0xd684>  // b.any
  469780:	ldrb	w0, [x21, #1]
  469784:	cmp	w0, #0x75
  469788:	b.ne	469a74 <_obstack_memory_used@@Base+0xd684>  // b.any
  46978c:	ldrb	w0, [x21, #2]
  469790:	cbnz	w0, 469a74 <_obstack_memory_used@@Base+0xd684>
  469794:	mov	x0, x19
  469798:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  46979c:	mov	x21, x0
  4697a0:	mov	x0, x19
  4697a4:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4697a8:	mov	x22, x0
  4697ac:	mov	x0, x19
  4697b0:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4697b4:	mov	x3, x0
  4697b8:	cbz	x0, 46968c <_obstack_memory_used@@Base+0xd29c>
  4697bc:	mov	x2, x22
  4697c0:	mov	x0, x19
  4697c4:	mov	w1, #0x3c                  	// #60
  4697c8:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4697cc:	mov	x2, x21
  4697d0:	mov	x3, x0
  4697d4:	mov	w1, #0x3b                  	// #59
  4697d8:	mov	x0, x19
  4697dc:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4697e0:	mov	x3, x0
  4697e4:	mov	x2, x20
  4697e8:	mov	x0, x19
  4697ec:	ldp	x19, x20, [sp, #16]
  4697f0:	mov	w1, #0x3a                  	// #58
  4697f4:	ldp	x21, x22, [sp, #32]
  4697f8:	ldp	x29, x30, [sp], #48
  4697fc:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469800:	add	x0, x0, #0x1
  469804:	str	x0, [x19, #24]
  469808:	mov	x0, x19
  46980c:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  469810:	mov	x3, x0
  469814:	mov	x2, x20
  469818:	mov	x0, x19
  46981c:	ldp	x19, x20, [sp, #16]
  469820:	mov	w1, #0x4                   	// #4
  469824:	ldp	x29, x30, [sp], #48
  469828:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46982c:	add	x2, x2, #0x2
  469830:	stp	x21, x22, [sp, #32]
  469834:	str	x2, [x0, #24]
  469838:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46983c:	mov	x20, x0
  469840:	mov	x0, x19
  469844:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  469848:	ldr	x1, [x19, #24]
  46984c:	mov	x21, x0
  469850:	mov	x3, x21
  469854:	ldrb	w0, [x1]
  469858:	cmp	w0, #0x49
  46985c:	b.eq	4698b8 <_obstack_memory_used@@Base+0xd4c8>  // b.none
  469860:	mov	x2, x20
  469864:	mov	x0, x19
  469868:	ldp	x19, x20, [sp, #16]
  46986c:	mov	w1, #0x1                   	// #1
  469870:	ldp	x21, x22, [sp, #32]
  469874:	ldp	x29, x30, [sp], #48
  469878:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46987c:	ldrb	w0, [x21, #1]
  469880:	cmp	w0, #0x74
  469884:	b.ne	469758 <_obstack_memory_used@@Base+0xd368>  // b.any
  469888:	ldrb	w0, [x21, #2]
  46988c:	cbnz	w0, 469758 <_obstack_memory_used@@Base+0xd368>
  469890:	mov	x0, x19
  469894:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  469898:	mov	x2, x20
  46989c:	mov	x3, x0
  4698a0:	mov	x0, x19
  4698a4:	mov	w1, #0x37                  	// #55
  4698a8:	ldp	x19, x20, [sp, #16]
  4698ac:	ldp	x21, x22, [sp, #32]
  4698b0:	ldp	x29, x30, [sp], #48
  4698b4:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  4698b8:	add	x1, x1, #0x1
  4698bc:	str	x1, [x19, #24]
  4698c0:	mov	x0, x19
  4698c4:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  4698c8:	mov	x3, x0
  4698cc:	mov	x2, x21
  4698d0:	mov	x0, x19
  4698d4:	mov	w1, #0x4                   	// #4
  4698d8:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4698dc:	mov	x3, x0
  4698e0:	b	469860 <_obstack_memory_used@@Base+0xd470>
  4698e4:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  4698e8:	mov	x20, x0
  4698ec:	ldr	x3, [x19, #24]
  4698f0:	b	4696f8 <_obstack_memory_used@@Base+0xd308>
  4698f4:	cmp	w0, #0x1
  4698f8:	b.ne	469690 <_obstack_memory_used@@Base+0xd2a0>  // b.any
  4698fc:	mov	x0, x19
  469900:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469904:	mov	x3, x0
  469908:	mov	x2, x20
  46990c:	mov	x0, x19
  469910:	ldp	x19, x20, [sp, #16]
  469914:	mov	w1, #0x37                  	// #55
  469918:	ldp	x29, x30, [sp], #48
  46991c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469920:	cbnz	w22, 46968c <_obstack_memory_used@@Base+0xd29c>
  469924:	ldp	x21, x22, [sp, #32]
  469928:	b	4695d0 <_obstack_memory_used@@Base+0xd1e0>
  46992c:	ldrb	w0, [x21]
  469930:	mov	w2, #0x6d                  	// #109
  469934:	cmp	w0, #0x70
  469938:	ccmp	w0, w2, #0x4, ne  // ne = any
  46993c:	b.ne	46994c <_obstack_memory_used@@Base+0xd55c>  // b.any
  469940:	ldrb	w2, [x21, #1]
  469944:	cmp	w2, w0
  469948:	b.eq	469984 <_obstack_memory_used@@Base+0xd594>  // b.none
  46994c:	mov	w22, #0x0                   	// #0
  469950:	cmp	w1, #0x73
  469954:	b.ne	4699a8 <_obstack_memory_used@@Base+0xd5b8>  // b.any
  469958:	ldrb	w0, [x21, #1]
  46995c:	cmp	w0, #0x50
  469960:	b.ne	4699a8 <_obstack_memory_used@@Base+0xd5b8>  // b.any
  469964:	ldrb	w0, [x21, #2]
  469968:	cbnz	w0, 4699a8 <_obstack_memory_used@@Base+0xd5b8>
  46996c:	mov	x0, x19
  469970:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  469974:	mov	x3, x0
  469978:	cbnz	w22, 4699c8 <_obstack_memory_used@@Base+0xd5d8>
  46997c:	ldp	x21, x22, [sp, #32]
  469980:	b	469908 <_obstack_memory_used@@Base+0xd518>
  469984:	ldr	x0, [x19, #24]
  469988:	ldrb	w2, [x0]
  46998c:	cmp	w2, #0x5f
  469990:	b.ne	469950 <_obstack_memory_used@@Base+0xd560>  // b.any
  469994:	add	x0, x0, #0x1
  469998:	str	x0, [x19, #24]
  46999c:	mov	w22, #0x0                   	// #0
  4699a0:	ldrb	w1, [x21]
  4699a4:	b	469950 <_obstack_memory_used@@Base+0xd560>
  4699a8:	mov	x0, x19
  4699ac:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  4699b0:	mov	x3, x0
  4699b4:	b	469978 <_obstack_memory_used@@Base+0xd588>
  4699b8:	add	x2, x2, #0x3
  4699bc:	mov	w0, #0x0                   	// #0
  4699c0:	str	x2, [x19, #24]
  4699c4:	b	469650 <_obstack_memory_used@@Base+0xd260>
  4699c8:	mov	x2, x3
  4699cc:	mov	x0, x19
  4699d0:	mov	w1, #0x39                  	// #57
  4699d4:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  4699d8:	mov	x3, x0
  4699dc:	ldp	x21, x22, [sp, #32]
  4699e0:	b	469908 <_obstack_memory_used@@Base+0xd518>
  4699e4:	ldr	x0, [x20, #8]
  4699e8:	ldr	x0, [x0]
  4699ec:	ldrb	w1, [x0, #1]
  4699f0:	cmp	w1, #0x63
  4699f4:	b.eq	469b9c <_obstack_memory_used@@Base+0xd7ac>  // b.none
  4699f8:	ldrb	w0, [x21]
  4699fc:	cmp	w0, #0x66
  469a00:	b.eq	469bcc <_obstack_memory_used@@Base+0xd7dc>  // b.none
  469a04:	mov	x0, x19
  469a08:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469a0c:	mov	x22, x0
  469a10:	ldrb	w1, [x21]
  469a14:	cmp	w1, #0x63
  469a18:	b.ne	469af4 <_obstack_memory_used@@Base+0xd704>  // b.any
  469a1c:	ldrb	w0, [x21, #1]
  469a20:	cmp	w0, #0x6c
  469a24:	b.ne	469af4 <_obstack_memory_used@@Base+0xd704>  // b.any
  469a28:	ldrb	w0, [x21, #2]
  469a2c:	cbnz	w0, 469af4 <_obstack_memory_used@@Base+0xd704>
  469a30:	mov	x0, x19
  469a34:	mov	w1, #0x45                  	// #69
  469a38:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  469a3c:	mov	x21, x0
  469a40:	mov	x3, x21
  469a44:	mov	x2, x22
  469a48:	mov	x0, x19
  469a4c:	mov	w1, #0x39                  	// #57
  469a50:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  469a54:	mov	x3, x0
  469a58:	mov	x2, x20
  469a5c:	mov	x0, x19
  469a60:	ldp	x19, x20, [sp, #16]
  469a64:	mov	w1, #0x38                  	// #56
  469a68:	ldp	x21, x22, [sp, #32]
  469a6c:	ldp	x29, x30, [sp], #48
  469a70:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469a74:	ldrb	w0, [x21]
  469a78:	cmp	w0, #0x66
  469a7c:	b.eq	469bf4 <_obstack_memory_used@@Base+0xd804>  // b.none
  469a80:	cmp	w0, #0x6e
  469a84:	b.ne	46968c <_obstack_memory_used@@Base+0xd29c>  // b.any
  469a88:	ldrb	w0, [x21, #1]
  469a8c:	mov	w1, #0x61                  	// #97
  469a90:	cmp	w0, #0x77
  469a94:	ccmp	w0, w1, #0x4, ne  // ne = any
  469a98:	b.ne	46968c <_obstack_memory_used@@Base+0xd29c>  // b.any
  469a9c:	mov	w1, #0x5f                  	// #95
  469aa0:	mov	x0, x19
  469aa4:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  469aa8:	mov	x21, x0
  469aac:	mov	x0, x19
  469ab0:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  469ab4:	ldr	x1, [x19, #24]
  469ab8:	mov	x22, x0
  469abc:	ldrb	w0, [x1]
  469ac0:	cmp	w0, #0x45
  469ac4:	b.eq	469c28 <_obstack_memory_used@@Base+0xd838>  // b.none
  469ac8:	cmp	w0, #0x70
  469acc:	b.eq	469c00 <_obstack_memory_used@@Base+0xd810>  // b.none
  469ad0:	cmp	w0, #0x69
  469ad4:	b.ne	46968c <_obstack_memory_used@@Base+0xd29c>  // b.any
  469ad8:	ldrb	w0, [x1, #1]
  469adc:	cmp	w0, #0x6c
  469ae0:	b.ne	46968c <_obstack_memory_used@@Base+0xd29c>  // b.any
  469ae4:	mov	x0, x19
  469ae8:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469aec:	mov	x3, x0
  469af0:	b	4697bc <_obstack_memory_used@@Base+0xd3cc>
  469af4:	cmp	w1, #0x64
  469af8:	b.ne	469b84 <_obstack_memory_used@@Base+0xd794>  // b.any
  469afc:	ldrb	w0, [x21, #1]
  469b00:	cmp	w0, #0x74
  469b04:	b.ne	469b84 <_obstack_memory_used@@Base+0xd794>  // b.any
  469b08:	ldrb	w0, [x21, #2]
  469b0c:	cbnz	w0, 469b84 <_obstack_memory_used@@Base+0xd794>
  469b10:	mov	x0, x19
  469b14:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  469b18:	ldr	x1, [x19, #24]
  469b1c:	mov	x21, x0
  469b20:	ldrb	w0, [x1]
  469b24:	cmp	w0, #0x49
  469b28:	b.ne	469a40 <_obstack_memory_used@@Base+0xd650>  // b.any
  469b2c:	add	x1, x1, #0x1
  469b30:	str	x1, [x19, #24]
  469b34:	mov	x0, x19
  469b38:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  469b3c:	mov	x3, x0
  469b40:	mov	x2, x21
  469b44:	mov	x0, x19
  469b48:	mov	w1, #0x4                   	// #4
  469b4c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  469b50:	mov	x21, x0
  469b54:	b	469a40 <_obstack_memory_used@@Base+0xd650>
  469b58:	ldr	x0, [x19, #24]
  469b5c:	ldrb	w1, [x0]
  469b60:	cmp	w1, #0x5f
  469b64:	b.ne	4698fc <_obstack_memory_used@@Base+0xd50c>  // b.any
  469b68:	add	x0, x0, #0x1
  469b6c:	str	x0, [x19, #24]
  469b70:	mov	w1, #0x45                  	// #69
  469b74:	mov	x0, x19
  469b78:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  469b7c:	mov	x3, x0
  469b80:	b	469908 <_obstack_memory_used@@Base+0xd518>
  469b84:	cmp	w1, #0x70
  469b88:	b.eq	469bdc <_obstack_memory_used@@Base+0xd7ec>  // b.none
  469b8c:	mov	x0, x19
  469b90:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469b94:	mov	x21, x0
  469b98:	b	469a40 <_obstack_memory_used@@Base+0xd650>
  469b9c:	ldrb	w0, [x0]
  469ba0:	sub	w1, w0, #0x63
  469ba4:	sub	w0, w0, #0x72
  469ba8:	and	w1, w1, #0xff
  469bac:	and	w0, w0, #0xff
  469bb0:	cmp	w1, #0x1
  469bb4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  469bb8:	b.hi	4699f8 <_obstack_memory_used@@Base+0xd608>  // b.pmore
  469bbc:	mov	x0, x19
  469bc0:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  469bc4:	mov	x22, x0
  469bc8:	b	469a10 <_obstack_memory_used@@Base+0xd620>
  469bcc:	mov	x0, x19
  469bd0:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  469bd4:	mov	x22, x0
  469bd8:	b	469a10 <_obstack_memory_used@@Base+0xd620>
  469bdc:	ldrb	w0, [x21, #1]
  469be0:	cmp	w0, #0x74
  469be4:	b.ne	469b8c <_obstack_memory_used@@Base+0xd79c>  // b.any
  469be8:	ldrb	w0, [x21, #2]
  469bec:	cbz	w0, 469b10 <_obstack_memory_used@@Base+0xd720>
  469bf0:	b	469b8c <_obstack_memory_used@@Base+0xd79c>
  469bf4:	mov	x0, x19
  469bf8:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  469bfc:	b	46979c <_obstack_memory_used@@Base+0xd3ac>
  469c00:	ldrb	w0, [x1, #1]
  469c04:	cmp	w0, #0x69
  469c08:	b.ne	46968c <_obstack_memory_used@@Base+0xd29c>  // b.any
  469c0c:	add	x1, x1, #0x2
  469c10:	str	x1, [x19, #24]
  469c14:	mov	x0, x19
  469c18:	mov	w1, #0x45                  	// #69
  469c1c:	bl	468ce8 <_obstack_memory_used@@Base+0xc8f8>
  469c20:	mov	x3, x0
  469c24:	b	4697bc <_obstack_memory_used@@Base+0xd3cc>
  469c28:	add	x1, x1, #0x1
  469c2c:	mov	x3, #0x0                   	// #0
  469c30:	str	x1, [x19, #24]
  469c34:	b	4697bc <_obstack_memory_used@@Base+0xd3cc>
  469c38:	ldr	x2, [x0, #24]
  469c3c:	ldrb	w1, [x2]
  469c40:	cmp	w1, #0x4c
  469c44:	b.eq	469cd0 <_obstack_memory_used@@Base+0xd8e0>  // b.none
  469c48:	stp	x29, x30, [sp, #-32]!
  469c4c:	mov	x29, sp
  469c50:	stp	x19, x20, [sp, #16]
  469c54:	mov	x19, x0
  469c58:	b.hi	469c78 <_obstack_memory_used@@Base+0xd888>  // b.pmore
  469c5c:	sub	w1, w1, #0x49
  469c60:	and	w1, w1, #0xff
  469c64:	cmp	w1, #0x1
  469c68:	b.hi	469cc0 <_obstack_memory_used@@Base+0xd8d0>  // b.pmore
  469c6c:	ldp	x19, x20, [sp, #16]
  469c70:	ldp	x29, x30, [sp], #32
  469c74:	b	469da8 <_obstack_memory_used@@Base+0xd9b8>
  469c78:	cmp	w1, #0x58
  469c7c:	b.ne	469cc0 <_obstack_memory_used@@Base+0xd8d0>  // b.any
  469c80:	add	x2, x2, #0x1
  469c84:	ldr	w20, [x0, #76]
  469c88:	mov	w1, #0x1                   	// #1
  469c8c:	str	x2, [x0, #24]
  469c90:	str	w1, [x0, #76]
  469c94:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  469c98:	str	w20, [x19, #76]
  469c9c:	ldr	x1, [x19, #24]
  469ca0:	ldrb	w2, [x1]
  469ca4:	cmp	w2, #0x45
  469ca8:	b.ne	469cd4 <_obstack_memory_used@@Base+0xd8e4>  // b.any
  469cac:	add	x1, x1, #0x1
  469cb0:	str	x1, [x19, #24]
  469cb4:	ldp	x19, x20, [sp, #16]
  469cb8:	ldp	x29, x30, [sp], #32
  469cbc:	ret
  469cc0:	mov	x0, x19
  469cc4:	ldp	x19, x20, [sp, #16]
  469cc8:	ldp	x29, x30, [sp], #32
  469ccc:	b	46ab20 <_obstack_memory_used@@Base+0xe730>
  469cd0:	b	46c2b0 <_obstack_memory_used@@Base+0xfec0>
  469cd4:	mov	x0, #0x0                   	// #0
  469cd8:	b	469cb4 <_obstack_memory_used@@Base+0xd8c4>
  469cdc:	nop
  469ce0:	stp	x29, x30, [sp, #-64]!
  469ce4:	mov	x29, sp
  469ce8:	ldr	x1, [x0, #24]
  469cec:	stp	x19, x20, [sp, #16]
  469cf0:	mov	x19, x0
  469cf4:	str	x21, [sp, #32]
  469cf8:	ldr	x21, [x0, #64]
  469cfc:	ldrb	w2, [x1]
  469d00:	cmp	w2, #0x45
  469d04:	b.eq	469d84 <_obstack_memory_used@@Base+0xd994>  // b.none
  469d08:	add	x20, sp, #0x38
  469d0c:	str	xzr, [sp, #56]
  469d10:	b	469d34 <_obstack_memory_used@@Base+0xd944>
  469d14:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  469d18:	str	x0, [x20]
  469d1c:	add	x20, x0, #0x10
  469d20:	cbz	x0, 469d50 <_obstack_memory_used@@Base+0xd960>
  469d24:	ldr	x1, [x19, #24]
  469d28:	ldrb	w0, [x1]
  469d2c:	cmp	w0, #0x45
  469d30:	b.eq	469d64 <_obstack_memory_used@@Base+0xd974>  // b.none
  469d34:	mov	x0, x19
  469d38:	bl	469c38 <_obstack_memory_used@@Base+0xd848>
  469d3c:	mov	x3, #0x0                   	// #0
  469d40:	mov	x2, x0
  469d44:	mov	w1, #0x2f                  	// #47
  469d48:	mov	x0, x19
  469d4c:	cbnz	x2, 469d14 <_obstack_memory_used@@Base+0xd924>
  469d50:	mov	x0, #0x0                   	// #0
  469d54:	ldp	x19, x20, [sp, #16]
  469d58:	ldr	x21, [sp, #32]
  469d5c:	ldp	x29, x30, [sp], #64
  469d60:	ret
  469d64:	add	x1, x1, #0x1
  469d68:	str	x1, [x19, #24]
  469d6c:	str	x21, [x19, #64]
  469d70:	ldp	x19, x20, [sp, #16]
  469d74:	ldr	x21, [sp, #32]
  469d78:	ldr	x0, [sp, #56]
  469d7c:	ldp	x29, x30, [sp], #64
  469d80:	ret
  469d84:	add	x1, x1, #0x1
  469d88:	mov	x3, #0x0                   	// #0
  469d8c:	ldr	x21, [sp, #32]
  469d90:	str	x1, [x0, #24]
  469d94:	ldp	x19, x20, [sp, #16]
  469d98:	mov	x2, #0x0                   	// #0
  469d9c:	ldp	x29, x30, [sp], #64
  469da0:	mov	w1, #0x2f                  	// #47
  469da4:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469da8:	ldr	x3, [x0, #24]
  469dac:	ldrb	w1, [x3]
  469db0:	sub	w1, w1, #0x49
  469db4:	and	w1, w1, #0xff
  469db8:	cmp	w1, #0x1
  469dbc:	b.hi	469dcc <_obstack_memory_used@@Base+0xd9dc>  // b.pmore
  469dc0:	add	x3, x3, #0x1
  469dc4:	str	x3, [x0, #24]
  469dc8:	b	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  469dcc:	mov	x0, #0x0                   	// #0
  469dd0:	ret
  469dd4:	nop
  469dd8:	stp	x29, x30, [sp, #-48]!
  469ddc:	mov	w3, #0x54                  	// #84
  469de0:	mov	x29, sp
  469de4:	ldr	x2, [x0, #24]
  469de8:	stp	x19, x20, [sp, #16]
  469dec:	mov	x19, x0
  469df0:	str	x21, [sp, #32]
  469df4:	mov	w21, w1
  469df8:	ldrb	w1, [x2]
  469dfc:	cmp	w1, #0x47
  469e00:	ccmp	w1, w3, #0x4, ne  // ne = any
  469e04:	b.ne	469e90 <_obstack_memory_used@@Base+0xdaa0>  // b.any
  469e08:	ldr	w3, [x0, #72]
  469e0c:	add	w1, w3, #0x14
  469e10:	str	w1, [x0, #72]
  469e14:	ldrb	w1, [x2]
  469e18:	cmp	w1, #0x54
  469e1c:	b.eq	469fb4 <_obstack_memory_used@@Base+0xdbc4>  // b.none
  469e20:	cmp	w1, #0x47
  469e24:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  469e28:	add	x1, x2, #0x1
  469e2c:	str	x1, [x0, #24]
  469e30:	ldrb	w1, [x2, #1]
  469e34:	cbz	w1, 469f9c <_obstack_memory_used@@Base+0xdbac>
  469e38:	add	x1, x2, #0x2
  469e3c:	str	x1, [x0, #24]
  469e40:	ldrb	w1, [x2, #1]
  469e44:	cmp	w1, #0x54
  469e48:	b.eq	46a350 <_obstack_memory_used@@Base+0xdf60>  // b.none
  469e4c:	b.hi	46a01c <_obstack_memory_used@@Base+0xdc2c>  // b.pmore
  469e50:	cmp	w1, #0x41
  469e54:	b.eq	46a398 <_obstack_memory_used@@Base+0xdfa8>  // b.none
  469e58:	cmp	w1, #0x52
  469e5c:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  469e60:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  469e64:	mov	x11, x0
  469e68:	mov	x0, x19
  469e6c:	bl	468350 <_obstack_memory_used@@Base+0xbf60>
  469e70:	mov	x3, x0
  469e74:	mov	x0, x19
  469e78:	mov	x2, x11
  469e7c:	ldp	x19, x20, [sp, #16]
  469e80:	mov	w1, #0x16                  	// #22
  469e84:	ldr	x21, [sp, #32]
  469e88:	ldp	x29, x30, [sp], #48
  469e8c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469e90:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  469e94:	mov	x20, x0
  469e98:	cbz	x0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  469e9c:	cbz	w21, 469eec <_obstack_memory_used@@Base+0xdafc>
  469ea0:	ldr	w0, [x19, #16]
  469ea4:	tbnz	w0, #0, 469eec <_obstack_memory_used@@Base+0xdafc>
  469ea8:	mov	x1, #0x1f                  	// #31
  469eac:	mov	x2, #0x1                   	// #1
  469eb0:	movk	x1, #0x1a, lsl #48
  469eb4:	ldr	w3, [x20]
  469eb8:	sub	w0, w3, #0x1c
  469ebc:	cmp	w0, #0x34
  469ec0:	b.hi	469ed0 <_obstack_memory_used@@Base+0xdae0>  // b.pmore
  469ec4:	lsl	x0, x2, x0
  469ec8:	tst	x0, x1
  469ecc:	b.ne	46a204 <_obstack_memory_used@@Base+0xde14>  // b.any
  469ed0:	cmp	w3, #0x2
  469ed4:	b.eq	46a20c <_obstack_memory_used@@Base+0xde1c>  // b.none
  469ed8:	mov	x0, x20
  469edc:	ldp	x19, x20, [sp, #16]
  469ee0:	ldr	x21, [sp, #32]
  469ee4:	ldp	x29, x30, [sp], #48
  469ee8:	ret
  469eec:	ldr	x0, [x19, #24]
  469ef0:	ldrb	w0, [x0]
  469ef4:	cmp	w0, #0x45
  469ef8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  469efc:	b.eq	469ed8 <_obstack_memory_used@@Base+0xdae8>  // b.none
  469f00:	mov	x1, #0x1f                  	// #31
  469f04:	mov	x4, x20
  469f08:	mov	x2, #0x1                   	// #1
  469f0c:	movk	x1, #0x1a, lsl #48
  469f10:	ldr	w3, [x4]
  469f14:	cmp	w3, #0x4
  469f18:	b.eq	46a280 <_obstack_memory_used@@Base+0xde90>  // b.none
  469f1c:	sub	w0, w3, #0x1c
  469f20:	b.hi	46a110 <_obstack_memory_used@@Base+0xdd20>  // b.pmore
  469f24:	cmp	w3, #0x2
  469f28:	b.ne	469f34 <_obstack_memory_used@@Base+0xdb44>  // b.any
  469f2c:	ldr	x4, [x4, #16]
  469f30:	cbnz	x4, 469f10 <_obstack_memory_used@@Base+0xdb20>
  469f34:	mov	w1, #0x0                   	// #0
  469f38:	mov	x0, x19
  469f3c:	bl	46bc60 <_obstack_memory_used@@Base+0xf870>
  469f40:	mov	x3, x0
  469f44:	cbz	x0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  469f48:	cbnz	w21, 469f68 <_obstack_memory_used@@Base+0xdb78>
  469f4c:	ldr	w0, [x20]
  469f50:	cmp	w0, #0x2
  469f54:	b.ne	469f68 <_obstack_memory_used@@Base+0xdb78>  // b.any
  469f58:	ldr	w0, [x3]
  469f5c:	cmp	w0, #0x29
  469f60:	b.ne	469f68 <_obstack_memory_used@@Base+0xdb78>  // b.any
  469f64:	str	xzr, [x3, #8]
  469f68:	mov	x2, x20
  469f6c:	mov	x0, x19
  469f70:	ldp	x19, x20, [sp, #16]
  469f74:	mov	w1, #0x3                   	// #3
  469f78:	ldr	x21, [sp, #32]
  469f7c:	ldp	x29, x30, [sp], #48
  469f80:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  469f84:	cmp	w1, #0x68
  469f88:	b.eq	46a52c <_obstack_memory_used@@Base+0xe13c>  // b.none
  469f8c:	cmp	w1, #0x76
  469f90:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  469f94:	bl	468918 <_obstack_memory_used@@Base+0xc528>
  469f98:	cbnz	w0, 46a254 <_obstack_memory_used@@Base+0xde64>
  469f9c:	mov	x20, #0x0                   	// #0
  469fa0:	mov	x0, x20
  469fa4:	ldp	x19, x20, [sp, #16]
  469fa8:	ldr	x21, [sp, #32]
  469fac:	ldp	x29, x30, [sp], #48
  469fb0:	ret
  469fb4:	add	x1, x2, #0x1
  469fb8:	str	x1, [x0, #24]
  469fbc:	ldrb	w1, [x2, #1]
  469fc0:	cbz	w1, 469f9c <_obstack_memory_used@@Base+0xdbac>
  469fc4:	add	x1, x2, #0x2
  469fc8:	str	x1, [x0, #24]
  469fcc:	ldrb	w1, [x2, #1]
  469fd0:	cmp	w1, #0x53
  469fd4:	b.eq	46a49c <_obstack_memory_used@@Base+0xe0ac>  // b.none
  469fd8:	b.hi	46a190 <_obstack_memory_used@@Base+0xdda0>  // b.pmore
  469fdc:	cmp	w1, #0x48
  469fe0:	b.eq	46a478 <_obstack_memory_used@@Base+0xe088>  // b.none
  469fe4:	b.hi	46a15c <_obstack_memory_used@@Base+0xdd6c>  // b.pmore
  469fe8:	cmp	w1, #0x43
  469fec:	b.eq	46a418 <_obstack_memory_used@@Base+0xe028>  // b.none
  469ff0:	cmp	w1, #0x46
  469ff4:	b.ne	46a130 <_obstack_memory_used@@Base+0xdd40>  // b.any
  469ff8:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  469ffc:	mov	x2, x0
  46a000:	mov	x0, x19
  46a004:	mov	x3, #0x0                   	// #0
  46a008:	ldp	x19, x20, [sp, #16]
  46a00c:	mov	w1, #0xe                   	// #14
  46a010:	ldr	x21, [sp, #32]
  46a014:	ldp	x29, x30, [sp], #48
  46a018:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a01c:	cmp	w1, #0x56
  46a020:	b.eq	46a32c <_obstack_memory_used@@Base+0xdf3c>  // b.none
  46a024:	cmp	w1, #0x72
  46a028:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a02c:	add	x0, x0, #0x18
  46a030:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  46a034:	cmp	w0, #0x1
  46a038:	b.le	469f9c <_obstack_memory_used@@Base+0xdbac>
  46a03c:	ldr	x1, [x19, #24]
  46a040:	ldrb	w2, [x1]
  46a044:	cbz	w2, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a048:	add	x8, x1, #0x1
  46a04c:	str	x8, [x19, #24]
  46a050:	ldrb	w1, [x1]
  46a054:	cmp	w1, #0x5f
  46a058:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a05c:	sub	w9, w0, #0x1
  46a060:	mov	x2, #0x0                   	// #0
  46a064:	mov	w11, #0x18                  	// #24
  46a068:	mov	w10, #0x41                  	// #65
  46a06c:	ldrb	w0, [x8]
  46a070:	cbz	w0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a074:	cmp	w0, #0x24
  46a078:	b.ne	46a2c4 <_obstack_memory_used@@Base+0xded4>  // b.any
  46a07c:	ldrb	w0, [x8, #1]
  46a080:	cmp	w0, #0x53
  46a084:	b.eq	46a3d0 <_obstack_memory_used@@Base+0xdfe0>  // b.none
  46a088:	cmp	w0, #0x5f
  46a08c:	b.eq	46a3c8 <_obstack_memory_used@@Base+0xdfd8>  // b.none
  46a090:	cmp	w0, #0x24
  46a094:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a098:	ldp	w1, w3, [x19, #40]
  46a09c:	ldr	x8, [x19, #24]
  46a0a0:	cmp	w1, w3
  46a0a4:	add	x8, x8, #0x2
  46a0a8:	b.ge	46a560 <_obstack_memory_used@@Base+0xe170>  // b.tcont
  46a0ac:	ldr	x5, [x19, #32]
  46a0b0:	smull	x4, w1, w11
  46a0b4:	add	w1, w1, #0x1
  46a0b8:	sub	w9, w9, #0x2
  46a0bc:	add	x3, x5, x4
  46a0c0:	str	wzr, [x3, #4]
  46a0c4:	str	w1, [x19, #40]
  46a0c8:	str	w10, [x5, x4]
  46a0cc:	str	w0, [x3, #8]
  46a0d0:	str	x8, [x19, #24]
  46a0d4:	cbz	x2, 46a3c0 <_obstack_memory_used@@Base+0xdfd0>
  46a0d8:	mov	x0, x19
  46a0dc:	mov	w1, #0x40                  	// #64
  46a0e0:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46a0e4:	mov	x2, x0
  46a0e8:	cbz	x0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a0ec:	cmp	w9, #0x0
  46a0f0:	b.gt	46a06c <_obstack_memory_used@@Base+0xdc7c>
  46a0f4:	mov	x0, x19
  46a0f8:	mov	x3, #0x0                   	// #0
  46a0fc:	ldp	x19, x20, [sp, #16]
  46a100:	mov	w1, #0x3f                  	// #63
  46a104:	ldr	x21, [sp, #32]
  46a108:	ldp	x29, x30, [sp], #48
  46a10c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a110:	cmp	w0, #0x34
  46a114:	b.hi	469f34 <_obstack_memory_used@@Base+0xdb44>  // b.pmore
  46a118:	lsl	x0, x2, x0
  46a11c:	tst	x0, x1
  46a120:	b.eq	469f34 <_obstack_memory_used@@Base+0xdb44>  // b.none
  46a124:	ldr	x4, [x4, #8]
  46a128:	cbnz	x4, 469f10 <_obstack_memory_used@@Base+0xdb20>
  46a12c:	b	469f34 <_obstack_memory_used@@Base+0xdb44>
  46a130:	cmp	w1, #0x41
  46a134:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a138:	bl	469c38 <_obstack_memory_used@@Base+0xd848>
  46a13c:	mov	x2, x0
  46a140:	mov	x0, x19
  46a144:	mov	x3, #0x0                   	// #0
  46a148:	ldp	x19, x20, [sp, #16]
  46a14c:	mov	w1, #0x30                  	// #48
  46a150:	ldr	x21, [sp, #32]
  46a154:	ldp	x29, x30, [sp], #48
  46a158:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a15c:	cmp	w1, #0x49
  46a160:	b.eq	46a508 <_obstack_memory_used@@Base+0xe118>  // b.none
  46a164:	cmp	w1, #0x4a
  46a168:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a16c:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a170:	mov	x2, x0
  46a174:	mov	x0, x19
  46a178:	mov	x3, #0x0                   	// #0
  46a17c:	ldp	x19, x20, [sp, #16]
  46a180:	mov	w1, #0x12                  	// #18
  46a184:	ldr	x21, [sp, #32]
  46a188:	ldp	x29, x30, [sp], #48
  46a18c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a190:	cmp	w1, #0x63
  46a194:	b.eq	46a4c0 <_obstack_memory_used@@Base+0xe0d0>  // b.none
  46a198:	b.hi	469f84 <_obstack_memory_used@@Base+0xdb94>  // b.pmore
  46a19c:	cmp	w1, #0x56
  46a1a0:	b.eq	46a3ec <_obstack_memory_used@@Base+0xdffc>  // b.none
  46a1a4:	cmp	w1, #0x57
  46a1a8:	b.ne	46a1d0 <_obstack_memory_used@@Base+0xdde0>  // b.any
  46a1ac:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46a1b0:	mov	x2, x0
  46a1b4:	mov	x0, x19
  46a1b8:	mov	x3, #0x0                   	// #0
  46a1bc:	ldp	x19, x20, [sp, #16]
  46a1c0:	mov	w1, #0x15                  	// #21
  46a1c4:	ldr	x21, [sp, #32]
  46a1c8:	ldp	x29, x30, [sp], #48
  46a1cc:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a1d0:	cmp	w1, #0x54
  46a1d4:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a1d8:	add	w3, w3, #0xa
  46a1dc:	str	w3, [x0, #72]
  46a1e0:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a1e4:	mov	x2, x0
  46a1e8:	mov	x0, x19
  46a1ec:	mov	x3, #0x0                   	// #0
  46a1f0:	ldp	x19, x20, [sp, #16]
  46a1f4:	mov	w1, #0xa                   	// #10
  46a1f8:	ldr	x21, [sp, #32]
  46a1fc:	ldp	x29, x30, [sp], #48
  46a200:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a204:	ldr	x20, [x20, #8]
  46a208:	b	469eb4 <_obstack_memory_used@@Base+0xdac4>
  46a20c:	ldr	x3, [x20, #16]
  46a210:	mov	x1, #0x1f                  	// #31
  46a214:	mov	x2, #0x1                   	// #1
  46a218:	movk	x1, #0x1a, lsl #48
  46a21c:	ldr	w0, [x3]
  46a220:	sub	w0, w0, #0x1c
  46a224:	cmp	w0, #0x34
  46a228:	b.hi	469ed8 <_obstack_memory_used@@Base+0xdae8>  // b.pmore
  46a22c:	lsl	x0, x2, x0
  46a230:	tst	x0, x1
  46a234:	b.eq	469ed8 <_obstack_memory_used@@Base+0xdae8>  // b.none
  46a238:	ldr	x3, [x3, #8]
  46a23c:	str	x3, [x20, #16]
  46a240:	ldr	w0, [x3]
  46a244:	sub	w0, w0, #0x1c
  46a248:	cmp	w0, #0x34
  46a24c:	b.ls	46a22c <_obstack_memory_used@@Base+0xde3c>  // b.plast
  46a250:	b	469ed8 <_obstack_memory_used@@Base+0xdae8>
  46a254:	mov	x0, x19
  46a258:	mov	w1, #0x0                   	// #0
  46a25c:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a260:	mov	x2, x0
  46a264:	mov	x0, x19
  46a268:	mov	x3, #0x0                   	// #0
  46a26c:	ldp	x19, x20, [sp, #16]
  46a270:	mov	w1, #0x10                  	// #16
  46a274:	ldr	x21, [sp, #32]
  46a278:	ldp	x29, x30, [sp], #48
  46a27c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a280:	ldr	x1, [x4, #8]
  46a284:	cbz	x1, 46a2b0 <_obstack_memory_used@@Base+0xdec0>
  46a288:	ldr	w0, [x1]
  46a28c:	sub	w2, w0, #0x1
  46a290:	cmp	w0, #0x8
  46a294:	b.hi	46a2b8 <_obstack_memory_used@@Base+0xdec8>  // b.pmore
  46a298:	cmp	w0, #0x6
  46a29c:	b.hi	469f34 <_obstack_memory_used@@Base+0xdb44>  // b.pmore
  46a2a0:	cmp	w2, #0x1
  46a2a4:	b.hi	46a2b0 <_obstack_memory_used@@Base+0xdec0>  // b.pmore
  46a2a8:	ldr	x1, [x1, #16]
  46a2ac:	cbnz	x1, 46a288 <_obstack_memory_used@@Base+0xde98>
  46a2b0:	mov	w1, #0x1                   	// #1
  46a2b4:	b	469f38 <_obstack_memory_used@@Base+0xdb48>
  46a2b8:	cmp	w0, #0x35
  46a2bc:	cset	w1, ne  // ne = any
  46a2c0:	b	469f38 <_obstack_memory_used@@Base+0xdb48>
  46a2c4:	mov	x1, #0x1                   	// #1
  46a2c8:	b	46a2d0 <_obstack_memory_used@@Base+0xdee0>
  46a2cc:	mov	x1, x4
  46a2d0:	cmp	w9, w1
  46a2d4:	mov	w5, w1
  46a2d8:	b.le	46a2f0 <_obstack_memory_used@@Base+0xdf00>
  46a2dc:	ldrb	w3, [x8, x1]
  46a2e0:	add	x4, x1, #0x1
  46a2e4:	cmp	w3, #0x24
  46a2e8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  46a2ec:	b.ne	46a2cc <_obstack_memory_used@@Base+0xdedc>  // b.any
  46a2f0:	ldp	w3, w0, [x19, #40]
  46a2f4:	cmp	w3, w0
  46a2f8:	b.ge	46a3d8 <_obstack_memory_used@@Base+0xdfe8>  // b.tcont
  46a2fc:	ldr	x4, [x19, #32]
  46a300:	add	w0, w3, #0x1
  46a304:	sub	w9, w9, w5
  46a308:	smaddl	x3, w3, w11, x4
  46a30c:	str	wzr, [x3, #4]
  46a310:	str	w0, [x19, #40]
  46a314:	stp	xzr, x8, [x3]
  46a318:	ldr	x8, [x19, #24]
  46a31c:	str	w5, [x3, #16]
  46a320:	add	x8, x8, x1
  46a324:	str	x8, [x19, #24]
  46a328:	b	46a0d4 <_obstack_memory_used@@Base+0xdce4>
  46a32c:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46a330:	mov	x2, x0
  46a334:	mov	x0, x19
  46a338:	mov	x3, #0x0                   	// #0
  46a33c:	ldp	x19, x20, [sp, #16]
  46a340:	mov	w1, #0x13                  	// #19
  46a344:	ldr	x21, [sp, #32]
  46a348:	ldp	x29, x30, [sp], #48
  46a34c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a350:	ldrb	w1, [x2, #2]
  46a354:	cbz	w1, 46a36c <_obstack_memory_used@@Base+0xdf7c>
  46a358:	add	x1, x2, #0x3
  46a35c:	str	x1, [x0, #24]
  46a360:	ldrb	w1, [x2, #2]
  46a364:	cmp	w1, #0x6e
  46a368:	b.eq	46a56c <_obstack_memory_used@@Base+0xe17c>  // b.none
  46a36c:	mov	x0, x19
  46a370:	mov	w1, #0x0                   	// #0
  46a374:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a378:	mov	x2, x0
  46a37c:	mov	x0, x19
  46a380:	mov	x3, #0x0                   	// #0
  46a384:	ldp	x19, x20, [sp, #16]
  46a388:	mov	w1, #0x49                  	// #73
  46a38c:	ldr	x21, [sp, #32]
  46a390:	ldp	x29, x30, [sp], #48
  46a394:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a398:	mov	w1, #0x0                   	// #0
  46a39c:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a3a0:	mov	x2, x0
  46a3a4:	mov	x0, x19
  46a3a8:	ldp	x19, x20, [sp, #16]
  46a3ac:	mov	x3, #0x0                   	// #0
  46a3b0:	ldr	x21, [sp, #32]
  46a3b4:	mov	w1, #0x17                  	// #23
  46a3b8:	ldp	x29, x30, [sp], #48
  46a3bc:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a3c0:	mov	x2, x3
  46a3c4:	b	46a0ec <_obstack_memory_used@@Base+0xdcfc>
  46a3c8:	mov	w0, #0x2e                  	// #46
  46a3cc:	b	46a098 <_obstack_memory_used@@Base+0xdca8>
  46a3d0:	mov	w0, #0x2f                  	// #47
  46a3d4:	b	46a098 <_obstack_memory_used@@Base+0xdca8>
  46a3d8:	ldr	x0, [x19, #24]
  46a3dc:	mov	x20, #0x0                   	// #0
  46a3e0:	add	x1, x0, x1
  46a3e4:	str	x1, [x19, #24]
  46a3e8:	b	469ed8 <_obstack_memory_used@@Base+0xdae8>
  46a3ec:	add	w3, w3, #0xf
  46a3f0:	str	w3, [x0, #72]
  46a3f4:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a3f8:	mov	x2, x0
  46a3fc:	mov	x0, x19
  46a400:	mov	x3, #0x0                   	// #0
  46a404:	ldp	x19, x20, [sp, #16]
  46a408:	mov	w1, #0x9                   	// #9
  46a40c:	ldr	x21, [sp, #32]
  46a410:	ldp	x29, x30, [sp], #48
  46a414:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a418:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a41c:	mov	x20, x0
  46a420:	add	x0, x19, #0x18
  46a424:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  46a428:	tbnz	w0, #31, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a42c:	ldr	x0, [x19, #24]
  46a430:	ldrb	w1, [x0]
  46a434:	cmp	w1, #0x5f
  46a438:	b.ne	469f9c <_obstack_memory_used@@Base+0xdbac>  // b.any
  46a43c:	add	x0, x0, #0x1
  46a440:	str	x0, [x19, #24]
  46a444:	mov	x0, x19
  46a448:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a44c:	mov	x2, x0
  46a450:	ldr	w1, [x19, #72]
  46a454:	mov	x3, x20
  46a458:	ldr	x21, [sp, #32]
  46a45c:	add	w1, w1, #0x5
  46a460:	str	w1, [x19, #72]
  46a464:	mov	x0, x19
  46a468:	ldp	x19, x20, [sp, #16]
  46a46c:	mov	w1, #0xb                   	// #11
  46a470:	ldp	x29, x30, [sp], #48
  46a474:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a478:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46a47c:	mov	x2, x0
  46a480:	mov	x0, x19
  46a484:	mov	x3, #0x0                   	// #0
  46a488:	ldp	x19, x20, [sp, #16]
  46a48c:	mov	w1, #0x14                  	// #20
  46a490:	ldr	x21, [sp, #32]
  46a494:	ldp	x29, x30, [sp], #48
  46a498:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a49c:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a4a0:	mov	x2, x0
  46a4a4:	mov	x0, x19
  46a4a8:	mov	x3, #0x0                   	// #0
  46a4ac:	ldp	x19, x20, [sp, #16]
  46a4b0:	mov	w1, #0xd                   	// #13
  46a4b4:	ldr	x21, [sp, #32]
  46a4b8:	ldp	x29, x30, [sp], #48
  46a4bc:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a4c0:	mov	w1, #0x0                   	// #0
  46a4c4:	bl	468918 <_obstack_memory_used@@Base+0xc528>
  46a4c8:	cbz	w0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a4cc:	mov	x0, x19
  46a4d0:	mov	w1, #0x0                   	// #0
  46a4d4:	bl	468918 <_obstack_memory_used@@Base+0xc528>
  46a4d8:	cbz	w0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a4dc:	mov	x0, x19
  46a4e0:	mov	w1, #0x0                   	// #0
  46a4e4:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a4e8:	mov	x2, x0
  46a4ec:	mov	x0, x19
  46a4f0:	mov	x3, #0x0                   	// #0
  46a4f4:	ldp	x19, x20, [sp, #16]
  46a4f8:	mov	w1, #0x11                  	// #17
  46a4fc:	ldr	x21, [sp, #32]
  46a500:	ldp	x29, x30, [sp], #48
  46a504:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a508:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a50c:	mov	x2, x0
  46a510:	mov	x0, x19
  46a514:	mov	x3, #0x0                   	// #0
  46a518:	ldp	x19, x20, [sp, #16]
  46a51c:	mov	w1, #0xc                   	// #12
  46a520:	ldr	x21, [sp, #32]
  46a524:	ldp	x29, x30, [sp], #48
  46a528:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a52c:	bl	468918 <_obstack_memory_used@@Base+0xc528>
  46a530:	cbz	w0, 469f9c <_obstack_memory_used@@Base+0xdbac>
  46a534:	mov	x0, x19
  46a538:	mov	w1, #0x0                   	// #0
  46a53c:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a540:	mov	x2, x0
  46a544:	mov	x0, x19
  46a548:	mov	x3, #0x0                   	// #0
  46a54c:	ldp	x19, x20, [sp, #16]
  46a550:	mov	w1, #0xf                   	// #15
  46a554:	ldr	x21, [sp, #32]
  46a558:	ldp	x29, x30, [sp], #48
  46a55c:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a560:	mov	x20, #0x0                   	// #0
  46a564:	str	x8, [x19, #24]
  46a568:	b	469ed8 <_obstack_memory_used@@Base+0xdae8>
  46a56c:	mov	w1, #0x0                   	// #0
  46a570:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a574:	mov	x2, x0
  46a578:	mov	x0, x19
  46a57c:	ldp	x19, x20, [sp, #16]
  46a580:	mov	x3, #0x0                   	// #0
  46a584:	ldr	x21, [sp, #32]
  46a588:	mov	w1, #0x4a                  	// #74
  46a58c:	ldp	x29, x30, [sp], #48
  46a590:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46a594:	nop
  46a598:	stp	x29, x30, [sp, #-112]!
  46a59c:	mov	x29, sp
  46a5a0:	ldr	x2, [x0, #24]
  46a5a4:	stp	x19, x20, [sp, #16]
  46a5a8:	ldrb	w1, [x2]
  46a5ac:	cmp	w1, #0x55
  46a5b0:	b.eq	46a798 <_obstack_memory_used@@Base+0xe3a8>  // b.none
  46a5b4:	mov	x19, x0
  46a5b8:	b.hi	46a668 <_obstack_memory_used@@Base+0xe278>  // b.pmore
  46a5bc:	cmp	w1, #0x4e
  46a5c0:	b.eq	46a7b0 <_obstack_memory_used@@Base+0xe3c0>  // b.none
  46a5c4:	cmp	w1, #0x53
  46a5c8:	b.ne	46a738 <_obstack_memory_used@@Base+0xe348>  // b.any
  46a5cc:	ldrb	w1, [x2, #1]
  46a5d0:	cmp	w1, #0x74
  46a5d4:	b.ne	46a6f8 <_obstack_memory_used@@Base+0xe308>  // b.any
  46a5d8:	ldp	w0, w1, [x0, #40]
  46a5dc:	add	x2, x2, #0x2
  46a5e0:	str	x2, [x19, #24]
  46a5e4:	cmp	w0, w1
  46a5e8:	b.ge	46aa6c <_obstack_memory_used@@Base+0xe67c>  // b.tcont
  46a5ec:	mov	w3, #0x18                  	// #24
  46a5f0:	add	w1, w0, #0x1
  46a5f4:	ldr	x2, [x19, #32]
  46a5f8:	smull	x0, w0, w3
  46a5fc:	str	w1, [x19, #40]
  46a600:	mov	w3, #0x3                   	// #3
  46a604:	add	x20, x2, x0
  46a608:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46a60c:	add	x1, x1, #0xe98
  46a610:	str	xzr, [x2, x0]
  46a614:	str	x1, [x20, #8]
  46a618:	str	w3, [x20, #16]
  46a61c:	mov	x0, x19
  46a620:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  46a624:	mov	x2, x20
  46a628:	mov	x3, x0
  46a62c:	mov	w1, #0x1                   	// #1
  46a630:	mov	x0, x19
  46a634:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46a638:	mov	x20, x0
  46a63c:	ldr	w1, [x19, #72]
  46a640:	ldr	x2, [x19, #24]
  46a644:	add	w1, w1, #0x3
  46a648:	str	w1, [x19, #72]
  46a64c:	ldrb	w0, [x2]
  46a650:	cmp	w0, #0x49
  46a654:	b.eq	46aa18 <_obstack_memory_used@@Base+0xe628>  // b.none
  46a658:	mov	x0, x20
  46a65c:	ldp	x19, x20, [sp, #16]
  46a660:	ldp	x29, x30, [sp], #112
  46a664:	ret
  46a668:	cmp	w1, #0x5a
  46a66c:	b.ne	46a738 <_obstack_memory_used@@Base+0xe348>  // b.any
  46a670:	add	x2, x2, #0x1
  46a674:	str	x2, [x0, #24]
  46a678:	mov	w1, #0x0                   	// #0
  46a67c:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46a680:	mov	x20, x0
  46a684:	cbz	x0, 46a730 <_obstack_memory_used@@Base+0xe340>
  46a688:	ldr	x0, [x19, #24]
  46a68c:	ldrb	w1, [x0]
  46a690:	cmp	w1, #0x45
  46a694:	b.ne	46a730 <_obstack_memory_used@@Base+0xe340>  // b.any
  46a698:	add	x1, x0, #0x1
  46a69c:	str	x1, [x19, #24]
  46a6a0:	ldrb	w1, [x0, #1]
  46a6a4:	cmp	w1, #0x73
  46a6a8:	b.eq	46aa94 <_obstack_memory_used@@Base+0xe6a4>  // b.none
  46a6ac:	cmp	w1, #0x64
  46a6b0:	b.eq	46a93c <_obstack_memory_used@@Base+0xe54c>  // b.none
  46a6b4:	mov	x0, x19
  46a6b8:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46a6bc:	mov	x3, x0
  46a6c0:	cbz	x0, 46a6d4 <_obstack_memory_used@@Base+0xe2e4>
  46a6c4:	ldr	w0, [x0]
  46a6c8:	sub	w0, w0, #0x46
  46a6cc:	tst	w0, #0xfffffffd
  46a6d0:	b.ne	46aae8 <_obstack_memory_used@@Base+0xe6f8>  // b.any
  46a6d4:	ldr	w0, [x20]
  46a6d8:	cmp	w0, #0x3
  46a6dc:	b.eq	46aa54 <_obstack_memory_used@@Base+0xe664>  // b.none
  46a6e0:	mov	x2, x20
  46a6e4:	mov	x0, x19
  46a6e8:	mov	w1, #0x2                   	// #2
  46a6ec:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46a6f0:	mov	x20, x0
  46a6f4:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46a6f8:	mov	w1, #0x0                   	// #0
  46a6fc:	bl	4686b0 <_obstack_memory_used@@Base+0xc2c0>
  46a700:	ldr	x1, [x19, #24]
  46a704:	mov	x20, x0
  46a708:	ldrb	w0, [x1]
  46a70c:	cmp	w0, #0x49
  46a710:	b.ne	46a658 <_obstack_memory_used@@Base+0xe268>  // b.any
  46a714:	mov	x0, x19
  46a718:	b	46a778 <_obstack_memory_used@@Base+0xe388>
  46a71c:	mov	x0, x19
  46a720:	bl	468a18 <_obstack_memory_used@@Base+0xc628>
  46a724:	cbnz	w0, 46a978 <_obstack_memory_used@@Base+0xe588>
  46a728:	ldp	x21, x22, [sp, #32]
  46a72c:	nop
  46a730:	mov	x20, #0x0                   	// #0
  46a734:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46a738:	mov	x0, x19
  46a73c:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  46a740:	ldr	x1, [x19, #24]
  46a744:	mov	x20, x0
  46a748:	ldrb	w0, [x1]
  46a74c:	cmp	w0, #0x49
  46a750:	b.ne	46a658 <_obstack_memory_used@@Base+0xe268>  // b.any
  46a754:	cbz	x20, 46a730 <_obstack_memory_used@@Base+0xe340>
  46a758:	ldp	w1, w0, [x19, #56]
  46a75c:	cmp	w1, w0
  46a760:	b.ge	46a730 <_obstack_memory_used@@Base+0xe340>  // b.tcont
  46a764:	ldr	x3, [x19, #48]
  46a768:	mov	x0, x19
  46a76c:	add	w2, w1, #0x1
  46a770:	str	x20, [x3, w1, sxtw #3]
  46a774:	str	w2, [x19, #56]
  46a778:	bl	469da8 <_obstack_memory_used@@Base+0xd9b8>
  46a77c:	mov	x3, x0
  46a780:	mov	x2, x20
  46a784:	mov	x0, x19
  46a788:	mov	w1, #0x4                   	// #4
  46a78c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46a790:	mov	x20, x0
  46a794:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46a798:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  46a79c:	mov	x20, x0
  46a7a0:	mov	x0, x20
  46a7a4:	ldp	x19, x20, [sp, #16]
  46a7a8:	ldp	x29, x30, [sp], #112
  46a7ac:	ret
  46a7b0:	stp	x21, x22, [sp, #32]
  46a7b4:	add	x2, x2, #0x1
  46a7b8:	add	x1, sp, #0x68
  46a7bc:	str	x2, [x0, #24]
  46a7c0:	mov	w2, #0x1                   	// #1
  46a7c4:	bl	46b9d0 <_obstack_memory_used@@Base+0xf5e0>
  46a7c8:	mov	x22, x0
  46a7cc:	cbz	x0, 46aa48 <_obstack_memory_used@@Base+0xe658>
  46a7d0:	mov	x1, #0x0                   	// #0
  46a7d4:	mov	x0, x19
  46a7d8:	stp	x23, x24, [sp, #48]
  46a7dc:	bl	468088 <_obstack_memory_used@@Base+0xbc98>
  46a7e0:	mov	x23, x0
  46a7e4:	ldr	x1, [x19, #24]
  46a7e8:	ldrb	w20, [x1]
  46a7ec:	cbz	w20, 46a8a4 <_obstack_memory_used@@Base+0xe4b4>
  46a7f0:	mov	x21, #0x0                   	// #0
  46a7f4:	mov	w24, #0x4c                  	// #76
  46a7f8:	stp	x25, x26, [sp, #64]
  46a7fc:	mov	w25, #0x55                  	// #85
  46a800:	cmp	w20, #0x44
  46a804:	b.eq	46a8b8 <_obstack_memory_used@@Base+0xe4c8>  // b.none
  46a808:	sub	w2, w20, #0x30
  46a80c:	sub	w0, w20, #0x61
  46a810:	and	w2, w2, #0xff
  46a814:	and	w0, w0, #0xff
  46a818:	cmp	w2, #0x9
  46a81c:	mov	x26, x21
  46a820:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  46a824:	b.ls	46a838 <_obstack_memory_used@@Base+0xe448>  // b.plast
  46a828:	cmp	w20, #0x43
  46a82c:	ccmp	w20, w25, #0x4, ne  // ne = any
  46a830:	ccmp	w20, w24, #0x4, ne  // ne = any
  46a834:	b.ne	46a904 <_obstack_memory_used@@Base+0xe514>  // b.any
  46a838:	mov	x0, x19
  46a83c:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  46a840:	mov	x21, x0
  46a844:	cbz	x26, 46a860 <_obstack_memory_used@@Base+0xe470>
  46a848:	mov	w1, #0x1                   	// #1
  46a84c:	mov	x3, x21
  46a850:	mov	x2, x26
  46a854:	mov	x0, x19
  46a858:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46a85c:	mov	x21, x0
  46a860:	cmp	w20, #0x53
  46a864:	ldr	x1, [x19, #24]
  46a868:	b.eq	46a898 <_obstack_memory_used@@Base+0xe4a8>  // b.none
  46a86c:	ldrb	w20, [x1]
  46a870:	cmp	w20, #0x45
  46a874:	b.eq	46a8ec <_obstack_memory_used@@Base+0xe4fc>  // b.none
  46a878:	cbz	x21, 46a8a0 <_obstack_memory_used@@Base+0xe4b0>
  46a87c:	ldp	w0, w2, [x19, #56]
  46a880:	cmp	w0, w2
  46a884:	b.ge	46a8a0 <_obstack_memory_used@@Base+0xe4b0>  // b.tcont
  46a888:	ldr	x3, [x19, #48]
  46a88c:	add	w2, w0, #0x1
  46a890:	str	x21, [x3, w0, sxtw #3]
  46a894:	str	w2, [x19, #56]
  46a898:	ldrb	w20, [x1]
  46a89c:	cbnz	w20, 46a800 <_obstack_memory_used@@Base+0xe410>
  46a8a0:	ldp	x25, x26, [sp, #64]
  46a8a4:	mov	x20, #0x0                   	// #0
  46a8a8:	ldp	x23, x24, [sp, #48]
  46a8ac:	str	xzr, [x22]
  46a8b0:	ldp	x21, x22, [sp, #32]
  46a8b4:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46a8b8:	ldrb	w0, [x1, #1]
  46a8bc:	and	w0, w0, #0xffffffdf
  46a8c0:	and	w0, w0, #0xff
  46a8c4:	cmp	w0, #0x54
  46a8c8:	mov	x0, x19
  46a8cc:	b.ne	46a8f4 <_obstack_memory_used@@Base+0xe504>  // b.any
  46a8d0:	mov	x26, x21
  46a8d4:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46a8d8:	mov	x21, x0
  46a8dc:	mov	w1, #0x1                   	// #1
  46a8e0:	cbnz	x26, 46a84c <_obstack_memory_used@@Base+0xe45c>
  46a8e4:	ldr	x1, [x19, #24]
  46a8e8:	b	46a86c <_obstack_memory_used@@Base+0xe47c>
  46a8ec:	mov	x26, x21
  46a8f0:	b	46a828 <_obstack_memory_used@@Base+0xe438>
  46a8f4:	mov	x26, x21
  46a8f8:	bl	46bdd0 <_obstack_memory_used@@Base+0xf9e0>
  46a8fc:	mov	x21, x0
  46a900:	b	46a8dc <_obstack_memory_used@@Base+0xe4ec>
  46a904:	cmp	w20, #0x53
  46a908:	b.eq	46a9b8 <_obstack_memory_used@@Base+0xe5c8>  // b.none
  46a90c:	cmp	w20, #0x49
  46a910:	b.eq	46aa74 <_obstack_memory_used@@Base+0xe684>  // b.none
  46a914:	cmp	w20, #0x54
  46a918:	b.eq	46ab10 <_obstack_memory_used@@Base+0xe720>  // b.none
  46a91c:	cmp	w20, #0x45
  46a920:	b.eq	46a9d4 <_obstack_memory_used@@Base+0xe5e4>  // b.none
  46a924:	cmp	w20, #0x4d
  46a928:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  46a92c:	b.eq	46a8a0 <_obstack_memory_used@@Base+0xe4b0>  // b.none
  46a930:	add	x1, x1, #0x1
  46a934:	str	x1, [x19, #24]
  46a938:	b	46a898 <_obstack_memory_used@@Base+0xe4a8>
  46a93c:	stp	x21, x22, [sp, #32]
  46a940:	add	x0, x0, #0x2
  46a944:	str	x0, [x19, #24]
  46a948:	mov	x0, x19
  46a94c:	bl	4683b8 <_obstack_memory_used@@Base+0xbfc8>
  46a950:	mov	w21, w0
  46a954:	tbnz	w0, #31, 46a728 <_obstack_memory_used@@Base+0xe338>
  46a958:	mov	x0, x19
  46a95c:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46a960:	mov	x11, x0
  46a964:	cbz	x0, 46a978 <_obstack_memory_used@@Base+0xe588>
  46a968:	ldr	w0, [x0]
  46a96c:	sub	w0, w0, #0x46
  46a970:	tst	w0, #0xfffffffd
  46a974:	b.ne	46a71c <_obstack_memory_used@@Base+0xe32c>  // b.any
  46a978:	ldp	w1, w0, [x19, #40]
  46a97c:	cmp	w1, w0
  46a980:	b.ge	46ab04 <_obstack_memory_used@@Base+0xe714>  // b.tcont
  46a984:	mov	w2, #0x18                  	// #24
  46a988:	add	w4, w1, #0x1
  46a98c:	ldr	x0, [x19, #32]
  46a990:	smull	x1, w1, w2
  46a994:	mov	w2, #0x47                  	// #71
  46a998:	add	x3, x0, x1
  46a99c:	str	wzr, [x3, #4]
  46a9a0:	str	w4, [x19, #40]
  46a9a4:	str	w2, [x0, x1]
  46a9a8:	str	x11, [x3, #8]
  46a9ac:	str	w21, [x3, #16]
  46a9b0:	ldp	x21, x22, [sp, #32]
  46a9b4:	b	46a6d4 <_obstack_memory_used@@Base+0xe2e4>
  46a9b8:	mov	x0, x19
  46a9bc:	mov	w1, #0x1                   	// #1
  46a9c0:	bl	4686b0 <_obstack_memory_used@@Base+0xc2c0>
  46a9c4:	mov	x21, x0
  46a9c8:	cbnz	x26, 46a848 <_obstack_memory_used@@Base+0xe458>
  46a9cc:	ldr	x1, [x19, #24]
  46a9d0:	b	46a898 <_obstack_memory_used@@Base+0xe4a8>
  46a9d4:	str	x21, [x22]
  46a9d8:	cbz	x21, 46aa40 <_obstack_memory_used@@Base+0xe650>
  46a9dc:	cbz	x23, 46a9ec <_obstack_memory_used@@Base+0xe5fc>
  46a9e0:	ldr	x0, [sp, #104]
  46a9e4:	str	x0, [x23, #8]
  46a9e8:	str	x23, [sp, #104]
  46a9ec:	ldr	x0, [x19, #24]
  46a9f0:	ldrb	w1, [x0]
  46a9f4:	cmp	w1, #0x45
  46a9f8:	b.ne	46aa40 <_obstack_memory_used@@Base+0xe650>  // b.any
  46a9fc:	add	x0, x0, #0x1
  46aa00:	ldp	x21, x22, [sp, #32]
  46aa04:	ldp	x23, x24, [sp, #48]
  46aa08:	ldp	x25, x26, [sp, #64]
  46aa0c:	str	x0, [x19, #24]
  46aa10:	ldr	x20, [sp, #104]
  46aa14:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46aa18:	cbz	x20, 46a730 <_obstack_memory_used@@Base+0xe340>
  46aa1c:	ldp	w0, w1, [x19, #56]
  46aa20:	cmp	w0, w1
  46aa24:	b.ge	46a730 <_obstack_memory_used@@Base+0xe340>  // b.tcont
  46aa28:	ldr	x2, [x19, #48]
  46aa2c:	add	w1, w0, #0x1
  46aa30:	str	x20, [x2, w0, sxtw #3]
  46aa34:	mov	x0, x19
  46aa38:	str	w1, [x19, #56]
  46aa3c:	b	46a778 <_obstack_memory_used@@Base+0xe388>
  46aa40:	ldp	x23, x24, [sp, #48]
  46aa44:	ldp	x25, x26, [sp, #64]
  46aa48:	mov	x20, #0x0                   	// #0
  46aa4c:	ldp	x21, x22, [sp, #32]
  46aa50:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46aa54:	ldr	x0, [x20, #16]
  46aa58:	ldr	w1, [x0]
  46aa5c:	cmp	w1, #0x29
  46aa60:	b.ne	46a6e0 <_obstack_memory_used@@Base+0xe2f0>  // b.any
  46aa64:	str	xzr, [x0, #8]
  46aa68:	b	46a6e0 <_obstack_memory_used@@Base+0xe2f0>
  46aa6c:	mov	x20, #0x0                   	// #0
  46aa70:	b	46a61c <_obstack_memory_used@@Base+0xe22c>
  46aa74:	cbz	x21, 46a8a0 <_obstack_memory_used@@Base+0xe4b0>
  46aa78:	add	x1, x1, #0x1
  46aa7c:	str	x1, [x19, #24]
  46aa80:	mov	x0, x19
  46aa84:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  46aa88:	mov	x21, x0
  46aa8c:	mov	w1, #0x4                   	// #4
  46aa90:	b	46a84c <_obstack_memory_used@@Base+0xe45c>
  46aa94:	add	x0, x0, #0x2
  46aa98:	str	x0, [x19, #24]
  46aa9c:	mov	x0, x19
  46aaa0:	bl	468a18 <_obstack_memory_used@@Base+0xc628>
  46aaa4:	cbz	w0, 46a730 <_obstack_memory_used@@Base+0xe340>
  46aaa8:	ldp	w0, w1, [x19, #40]
  46aaac:	cmp	w0, w1
  46aab0:	b.ge	46ab08 <_obstack_memory_used@@Base+0xe718>  // b.tcont
  46aab4:	mov	w3, #0x18                  	// #24
  46aab8:	add	w1, w0, #0x1
  46aabc:	ldr	x2, [x19, #32]
  46aac0:	smull	x0, w0, w3
  46aac4:	str	w1, [x19, #40]
  46aac8:	mov	w4, #0xe                   	// #14
  46aacc:	add	x3, x2, x0
  46aad0:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46aad4:	add	x1, x1, #0xe88
  46aad8:	str	xzr, [x2, x0]
  46aadc:	str	x1, [x3, #8]
  46aae0:	str	w4, [x3, #16]
  46aae4:	b	46a6d4 <_obstack_memory_used@@Base+0xe2e4>
  46aae8:	mov	x0, x19
  46aaec:	str	x3, [sp, #88]
  46aaf0:	bl	468a18 <_obstack_memory_used@@Base+0xc628>
  46aaf4:	ldr	x3, [sp, #88]
  46aaf8:	cbnz	w0, 46a6d4 <_obstack_memory_used@@Base+0xe2e4>
  46aafc:	mov	x20, #0x0                   	// #0
  46ab00:	b	46a658 <_obstack_memory_used@@Base+0xe268>
  46ab04:	ldp	x21, x22, [sp, #32]
  46ab08:	mov	x3, #0x0                   	// #0
  46ab0c:	b	46a6d4 <_obstack_memory_used@@Base+0xe2e4>
  46ab10:	mov	x0, x19
  46ab14:	bl	468430 <_obstack_memory_used@@Base+0xc040>
  46ab18:	mov	x21, x0
  46ab1c:	b	46a8dc <_obstack_memory_used@@Base+0xe4ec>
  46ab20:	stp	x29, x30, [sp, #-80]!
  46ab24:	mov	x29, sp
  46ab28:	ldr	x4, [x0, #24]
  46ab2c:	stp	x19, x20, [sp, #16]
  46ab30:	mov	x19, x0
  46ab34:	mov	x0, x4
  46ab38:	bl	4689c0 <_obstack_memory_used@@Base+0xc5d0>
  46ab3c:	cbnz	w0, 46ab7c <_obstack_memory_used@@Base+0xe78c>
  46ab40:	ldrb	w1, [x4]
  46ab44:	sub	w0, w1, #0x30
  46ab48:	cmp	w0, #0x4a
  46ab4c:	b.ls	46ab64 <_obstack_memory_used@@Base+0xe774>  // b.plast
  46ab50:	mov	x20, #0x0                   	// #0
  46ab54:	mov	x0, x20
  46ab58:	ldp	x19, x20, [sp, #16]
  46ab5c:	ldp	x29, x30, [sp], #80
  46ab60:	ret
  46ab64:	adrp	x2, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46ab68:	add	x2, x2, #0xc94
  46ab6c:	ldrh	w0, [x2, w0, uxtw #1]
  46ab70:	adr	x2, 46ab7c <_obstack_memory_used@@Base+0xe78c>
  46ab74:	add	x0, x2, w0, sxth #2
  46ab78:	br	x0
  46ab7c:	add	x1, sp, #0x48
  46ab80:	mov	x0, x19
  46ab84:	mov	w2, #0x0                   	// #0
  46ab88:	stp	x21, x22, [sp, #32]
  46ab8c:	bl	46b9d0 <_obstack_memory_used@@Base+0xf5e0>
  46ab90:	mov	x21, x0
  46ab94:	cbz	x0, 46ac28 <_obstack_memory_used@@Base+0xe838>
  46ab98:	ldr	x0, [x19, #24]
  46ab9c:	ldrb	w0, [x0]
  46aba0:	cmp	w0, #0x46
  46aba4:	mov	x0, x19
  46aba8:	b.eq	46ac1c <_obstack_memory_used@@Base+0xe82c>  // b.none
  46abac:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46abb0:	str	x0, [x21]
  46abb4:	cbz	x0, 46ac28 <_obstack_memory_used@@Base+0xe838>
  46abb8:	ldr	w1, [x0]
  46abbc:	ldr	x20, [sp, #72]
  46abc0:	sub	w1, w1, #0x1f
  46abc4:	cmp	w1, #0x1
  46abc8:	b.ls	46ac00 <_obstack_memory_used@@Base+0xe810>  // b.plast
  46abcc:	cbz	x20, 46ac28 <_obstack_memory_used@@Base+0xe838>
  46abd0:	ldp	w0, w1, [x19, #56]
  46abd4:	cmp	w0, w1
  46abd8:	b.ge	46ac28 <_obstack_memory_used@@Base+0xe838>  // b.tcont
  46abdc:	ldr	x2, [x19, #48]
  46abe0:	add	w1, w0, #0x1
  46abe4:	ldp	x21, x22, [sp, #32]
  46abe8:	str	x20, [x2, w0, sxtw #3]
  46abec:	mov	x0, x20
  46abf0:	str	w1, [x19, #56]
  46abf4:	ldp	x19, x20, [sp, #16]
  46abf8:	ldp	x29, x30, [sp], #80
  46abfc:	ret
  46ac00:	ldr	x1, [x0, #8]
  46ac04:	str	x20, [x0, #8]
  46ac08:	ldr	x0, [x21]
  46ac0c:	str	x0, [sp, #72]
  46ac10:	str	x1, [x21]
  46ac14:	ldr	x20, [sp, #72]
  46ac18:	b	46abcc <_obstack_memory_used@@Base+0xe7dc>
  46ac1c:	bl	46bcf0 <_obstack_memory_used@@Base+0xf900>
  46ac20:	str	x0, [x21]
  46ac24:	b	46abb4 <_obstack_memory_used@@Base+0xe7c4>
  46ac28:	ldp	x21, x22, [sp, #32]
  46ac2c:	b	46ab50 <_obstack_memory_used@@Base+0xe760>
  46ac30:	ldp	w2, w3, [x19, #40]
  46ac34:	sub	w1, w1, #0x61
  46ac38:	adrp	x0, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46ac3c:	add	x0, x0, #0xa18
  46ac40:	sbfiz	x1, x1, #5, #32
  46ac44:	add	x0, x0, #0x188
  46ac48:	add	x1, x0, x1
  46ac4c:	cmp	w2, w3
  46ac50:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46ac54:	mov	w0, #0x18                  	// #24
  46ac58:	add	w6, w2, #0x1
  46ac5c:	ldr	x3, [x19, #32]
  46ac60:	smull	x2, w2, w0
  46ac64:	ldr	w7, [x1, #8]
  46ac68:	mov	w5, #0x27                  	// #39
  46ac6c:	add	x20, x3, x2
  46ac70:	ldr	w0, [x19, #72]
  46ac74:	add	x4, x4, #0x1
  46ac78:	add	w0, w0, w7
  46ac7c:	str	wzr, [x20, #4]
  46ac80:	str	w6, [x19, #40]
  46ac84:	str	w5, [x3, x2]
  46ac88:	str	x1, [x20, #8]
  46ac8c:	str	x4, [x19, #24]
  46ac90:	str	w0, [x19, #72]
  46ac94:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46ac98:	mov	x0, x19
  46ac9c:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46aca0:	mov	x20, x0
  46aca4:	str	x0, [sp, #72]
  46aca8:	cbz	x20, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46acac:	ldp	w0, w1, [x19, #56]
  46acb0:	cmp	w0, w1
  46acb4:	b.ge	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.tcont
  46acb8:	ldr	x2, [x19, #48]
  46acbc:	add	w1, w0, #0x1
  46acc0:	str	x20, [x2, w0, sxtw #3]
  46acc4:	str	w1, [x19, #56]
  46acc8:	ldr	x20, [sp, #72]
  46accc:	mov	x0, x20
  46acd0:	ldp	x19, x20, [sp, #16]
  46acd4:	ldp	x29, x30, [sp], #80
  46acd8:	ret
  46acdc:	mov	x0, x19
  46ace0:	bl	46bcf0 <_obstack_memory_used@@Base+0xf900>
  46ace4:	mov	x20, x0
  46ace8:	str	x0, [sp, #72]
  46acec:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46acf0:	add	x4, x4, #0x1
  46acf4:	str	x4, [x19, #24]
  46acf8:	mov	x0, x19
  46acfc:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46ad00:	mov	x2, x0
  46ad04:	mov	x3, #0x0                   	// #0
  46ad08:	mov	x0, x19
  46ad0c:	mov	w1, #0x26                  	// #38
  46ad10:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46ad14:	mov	x20, x0
  46ad18:	str	x0, [sp, #72]
  46ad1c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46ad20:	add	x4, x4, #0x1
  46ad24:	str	x4, [x19, #24]
  46ad28:	mov	x0, x19
  46ad2c:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46ad30:	mov	x2, x0
  46ad34:	mov	x3, #0x0                   	// #0
  46ad38:	mov	x0, x19
  46ad3c:	mov	w1, #0x24                  	// #36
  46ad40:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46ad44:	mov	x20, x0
  46ad48:	str	x0, [sp, #72]
  46ad4c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46ad50:	add	x4, x4, #0x1
  46ad54:	str	x4, [x19, #24]
  46ad58:	mov	x0, x19
  46ad5c:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46ad60:	mov	x2, x0
  46ad64:	mov	x3, #0x0                   	// #0
  46ad68:	mov	x0, x19
  46ad6c:	mov	w1, #0x25                  	// #37
  46ad70:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46ad74:	mov	x20, x0
  46ad78:	str	x0, [sp, #72]
  46ad7c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46ad80:	add	x0, x4, #0x1
  46ad84:	str	x0, [x19, #24]
  46ad88:	ldrb	w0, [x4, #1]
  46ad8c:	cbz	w0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46ad90:	add	x0, x4, #0x2
  46ad94:	str	x0, [x19, #24]
  46ad98:	ldrb	w0, [x4, #1]
  46ad9c:	cmp	w0, #0x68
  46ada0:	b.eq	46b518 <_obstack_memory_used@@Base+0xf128>  // b.none
  46ada4:	b.hi	46b0fc <_obstack_memory_used@@Base+0xed0c>  // b.pmore
  46ada8:	cmp	w0, #0x63
  46adac:	b.eq	46b4d8 <_obstack_memory_used@@Base+0xf0e8>  // b.none
  46adb0:	b.ls	46b0ac <_obstack_memory_used@@Base+0xecbc>  // b.plast
  46adb4:	cmp	w0, #0x65
  46adb8:	b.eq	46b5b8 <_obstack_memory_used@@Base+0xf1c8>  // b.none
  46adbc:	cmp	w0, #0x66
  46adc0:	b.ne	46b318 <_obstack_memory_used@@Base+0xef28>  // b.any
  46adc4:	ldp	w0, w1, [x19, #40]
  46adc8:	cmp	w0, w1
  46adcc:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46add0:	mov	w1, #0x18                  	// #24
  46add4:	add	w5, w0, #0x1
  46add8:	ldr	x3, [x19, #32]
  46addc:	smull	x0, w0, w1
  46ade0:	ldr	w2, [x19, #72]
  46ade4:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46ade8:	add	x1, x1, #0xa18
  46adec:	add	x20, x3, x0
  46adf0:	add	x1, x1, #0x4c8
  46adf4:	mov	w4, #0x27                  	// #39
  46adf8:	str	wzr, [x20, #4]
  46adfc:	add	w2, w2, #0x9
  46ae00:	str	w5, [x19, #40]
  46ae04:	str	w4, [x3, x0]
  46ae08:	str	x1, [x20, #8]
  46ae0c:	str	w2, [x19, #72]
  46ae10:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46ae14:	add	x4, x4, #0x1
  46ae18:	str	x4, [x19, #24]
  46ae1c:	mov	x0, x19
  46ae20:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  46ae24:	str	x0, [sp, #72]
  46ae28:	ldr	x1, [x19, #24]
  46ae2c:	mov	x20, x0
  46ae30:	ldrb	w0, [x1]
  46ae34:	cmp	w0, #0x49
  46ae38:	b.eq	46b3f8 <_obstack_memory_used@@Base+0xf008>  // b.none
  46ae3c:	mov	x0, x19
  46ae40:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46ae44:	ldr	x3, [sp, #72]
  46ae48:	mov	x2, x0
  46ae4c:	mov	w1, #0x21                  	// #33
  46ae50:	mov	x0, x19
  46ae54:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46ae58:	mov	x20, x0
  46ae5c:	str	x0, [sp, #72]
  46ae60:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46ae64:	add	x4, x4, #0x1
  46ae68:	str	x4, [x19, #24]
  46ae6c:	mov	x0, x19
  46ae70:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46ae74:	mov	x2, x0
  46ae78:	mov	x3, #0x0                   	// #0
  46ae7c:	mov	x0, x19
  46ae80:	mov	w1, #0x22                  	// #34
  46ae84:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46ae88:	mov	x20, x0
  46ae8c:	str	x0, [sp, #72]
  46ae90:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46ae94:	ldrb	w0, [x4, #1]
  46ae98:	sub	w1, w0, #0x30
  46ae9c:	cmp	w0, #0x5f
  46aea0:	and	w1, w1, #0xff
  46aea4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  46aea8:	b.ls	46aebc <_obstack_memory_used@@Base+0xeacc>  // b.plast
  46aeac:	sub	w0, w0, #0x41
  46aeb0:	and	w0, w0, #0xff
  46aeb4:	cmp	w0, #0x19
  46aeb8:	b.hi	46b3d4 <_obstack_memory_used@@Base+0xefe4>  // b.pmore
  46aebc:	mov	w1, #0x0                   	// #0
  46aec0:	mov	x0, x19
  46aec4:	bl	4686b0 <_obstack_memory_used@@Base+0xc2c0>
  46aec8:	str	x0, [sp, #72]
  46aecc:	ldr	x1, [x19, #24]
  46aed0:	mov	x20, x0
  46aed4:	ldrb	w0, [x1]
  46aed8:	cmp	w0, #0x49
  46aedc:	b.ne	46ab54 <_obstack_memory_used@@Base+0xe764>  // b.any
  46aee0:	add	x1, x1, #0x1
  46aee4:	str	x1, [x19, #24]
  46aee8:	mov	x0, x19
  46aeec:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  46aef0:	mov	x3, x0
  46aef4:	mov	x2, x20
  46aef8:	mov	x0, x19
  46aefc:	mov	w1, #0x4                   	// #4
  46af00:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46af04:	mov	x20, x0
  46af08:	str	x0, [sp, #72]
  46af0c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46af10:	mov	x0, x19
  46af14:	stp	x21, x22, [sp, #32]
  46af18:	bl	468430 <_obstack_memory_used@@Base+0xc040>
  46af1c:	ldr	x21, [x19, #24]
  46af20:	str	x0, [sp, #72]
  46af24:	mov	x20, x0
  46af28:	ldrb	w0, [x21]
  46af2c:	cmp	w0, #0x49
  46af30:	b.eq	46b358 <_obstack_memory_used@@Base+0xef68>  // b.none
  46af34:	ldp	x21, x22, [sp, #32]
  46af38:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46af3c:	add	x4, x4, #0x1
  46af40:	str	x4, [x19, #24]
  46af44:	mov	x0, x19
  46af48:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  46af4c:	mov	x2, x0
  46af50:	mov	x3, #0x0                   	// #0
  46af54:	mov	x0, x19
  46af58:	mov	w1, #0x28                  	// #40
  46af5c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46af60:	mov	x20, x0
  46af64:	str	x0, [sp, #72]
  46af68:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46af6c:	add	x4, x4, #0x1
  46af70:	str	x4, [x19, #24]
  46af74:	mov	x0, x19
  46af78:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46af7c:	mov	x2, x0
  46af80:	mov	x3, #0x0                   	// #0
  46af84:	mov	x0, x19
  46af88:	mov	w1, #0x23                  	// #35
  46af8c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46af90:	mov	x20, x0
  46af94:	str	x0, [sp, #72]
  46af98:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46af9c:	add	x3, x4, #0x1
  46afa0:	str	x3, [x19, #24]
  46afa4:	ldrb	w0, [x4, #1]
  46afa8:	cmp	w0, #0x5f
  46afac:	b.eq	46b3cc <_obstack_memory_used@@Base+0xefdc>  // b.none
  46afb0:	sub	w0, w0, #0x30
  46afb4:	and	w0, w0, #0xff
  46afb8:	cmp	w0, #0x9
  46afbc:	b.hi	46b424 <_obstack_memory_used@@Base+0xf034>  // b.pmore
  46afc0:	mov	x1, x3
  46afc4:	nop
  46afc8:	mov	x4, x1
  46afcc:	add	x1, x1, #0x1
  46afd0:	str	x1, [x19, #24]
  46afd4:	ldrb	w0, [x1]
  46afd8:	sub	w0, w0, #0x30
  46afdc:	and	w0, w0, #0xff
  46afe0:	cmp	w0, #0x9
  46afe4:	b.ls	46afc8 <_obstack_memory_used@@Base+0xebd8>  // b.plast
  46afe8:	ldp	w0, w5, [x19, #40]
  46afec:	sub	x2, x1, x3
  46aff0:	cmp	w0, w5
  46aff4:	b.ge	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.tcont
  46aff8:	mov	w7, #0x18                  	// #24
  46affc:	add	w6, w0, #0x1
  46b000:	ldr	x5, [x19, #32]
  46b004:	smull	x0, w0, w7
  46b008:	cmp	w2, #0x0
  46b00c:	add	x20, x5, x0
  46b010:	str	wzr, [x20, #4]
  46b014:	str	w6, [x19, #40]
  46b018:	b.le	46ab50 <_obstack_memory_used@@Base+0xe760>
  46b01c:	str	xzr, [x5, x0]
  46b020:	str	x3, [x20, #8]
  46b024:	str	w2, [x20, #16]
  46b028:	ldrb	w0, [x4, #1]
  46b02c:	mov	x3, x1
  46b030:	cmp	w0, #0x5f
  46b034:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b038:	add	x3, x3, #0x1
  46b03c:	str	x3, [x19, #24]
  46b040:	mov	x0, x19
  46b044:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b048:	mov	x3, x0
  46b04c:	mov	x2, x20
  46b050:	mov	x0, x19
  46b054:	mov	w1, #0x2a                  	// #42
  46b058:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b05c:	mov	x20, x0
  46b060:	str	x0, [sp, #72]
  46b064:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b068:	add	x4, x4, #0x1
  46b06c:	str	x4, [x19, #24]
  46b070:	mov	x0, x19
  46b074:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b078:	mov	x20, x0
  46b07c:	cbz	x0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b080:	mov	x0, x19
  46b084:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b088:	mov	x3, x0
  46b08c:	cbz	x0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b090:	mov	x2, x20
  46b094:	mov	x0, x19
  46b098:	mov	w1, #0x2b                  	// #43
  46b09c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b0a0:	mov	x20, x0
  46b0a4:	str	x0, [sp, #72]
  46b0a8:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b0ac:	cmp	w0, #0x54
  46b0b0:	b.eq	46b17c <_obstack_memory_used@@Base+0xed8c>  // b.none
  46b0b4:	cmp	w0, #0x61
  46b0b8:	b.ne	46b210 <_obstack_memory_used@@Base+0xee20>  // b.any
  46b0bc:	ldp	w0, w1, [x19, #40]
  46b0c0:	cmp	w0, w1
  46b0c4:	b.ge	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.tcont
  46b0c8:	mov	w3, #0x18                  	// #24
  46b0cc:	add	w1, w0, #0x1
  46b0d0:	ldr	x2, [x19, #32]
  46b0d4:	smull	x0, w0, w3
  46b0d8:	str	w1, [x19, #40]
  46b0dc:	mov	w3, #0x4                   	// #4
  46b0e0:	add	x20, x2, x0
  46b0e4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46b0e8:	add	x1, x1, #0xea0
  46b0ec:	str	xzr, [x2, x0]
  46b0f0:	str	x1, [x20, #8]
  46b0f4:	str	w3, [x20, #16]
  46b0f8:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b0fc:	cmp	w0, #0x73
  46b100:	b.eq	46b4a0 <_obstack_memory_used@@Base+0xf0b0>  // b.none
  46b104:	b.ls	46b1d8 <_obstack_memory_used@@Base+0xede8>  // b.plast
  46b108:	cmp	w0, #0x75
  46b10c:	b.eq	46b608 <_obstack_memory_used@@Base+0xf218>  // b.none
  46b110:	cmp	w0, #0x76
  46b114:	b.ne	46b174 <_obstack_memory_used@@Base+0xed84>  // b.any
  46b118:	ldrb	w0, [x4, #2]
  46b11c:	cmp	w0, #0x5f
  46b120:	b.eq	46b6a0 <_obstack_memory_used@@Base+0xf2b0>  // b.none
  46b124:	mov	x0, x19
  46b128:	bl	468350 <_obstack_memory_used@@Base+0xbf60>
  46b12c:	mov	x20, x0
  46b130:	cbz	x20, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b134:	ldr	x0, [x19, #24]
  46b138:	ldrb	w1, [x0]
  46b13c:	cmp	w1, #0x5f
  46b140:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b144:	add	x0, x0, #0x1
  46b148:	str	x0, [x19, #24]
  46b14c:	mov	x0, x19
  46b150:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b154:	mov	x3, x0
  46b158:	mov	x2, x20
  46b15c:	mov	x0, x19
  46b160:	mov	w1, #0x2d                  	// #45
  46b164:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b168:	mov	x20, x0
  46b16c:	str	x0, [sp, #72]
  46b170:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b174:	cmp	w0, #0x74
  46b178:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b17c:	ldr	w20, [x19, #76]
  46b180:	mov	w0, #0x1                   	// #1
  46b184:	str	w0, [x19, #76]
  46b188:	mov	x0, x19
  46b18c:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  46b190:	str	w20, [x19, #76]
  46b194:	mov	x2, x0
  46b198:	mov	x3, #0x0                   	// #0
  46b19c:	mov	x0, x19
  46b1a0:	mov	w1, #0x43                  	// #67
  46b1a4:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b1a8:	str	x0, [sp, #72]
  46b1ac:	mov	x20, x0
  46b1b0:	cbz	x0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b1b4:	ldr	x0, [x19, #24]
  46b1b8:	ldrb	w1, [x0]
  46b1bc:	cbz	w1, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b1c0:	add	x1, x0, #0x1
  46b1c4:	str	x1, [x19, #24]
  46b1c8:	ldrb	w0, [x0]
  46b1cc:	cmp	w0, #0x45
  46b1d0:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b1d4:	b	46acac <_obstack_memory_used@@Base+0xe8bc>
  46b1d8:	cmp	w0, #0x6e
  46b1dc:	b.eq	46b568 <_obstack_memory_used@@Base+0xf178>  // b.none
  46b1e0:	cmp	w0, #0x70
  46b1e4:	b.ne	46b2c0 <_obstack_memory_used@@Base+0xeed0>  // b.any
  46b1e8:	mov	x0, x19
  46b1ec:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b1f0:	mov	x3, #0x0                   	// #0
  46b1f4:	mov	x2, x0
  46b1f8:	mov	w1, #0x4b                  	// #75
  46b1fc:	mov	x0, x19
  46b200:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b204:	mov	x20, x0
  46b208:	str	x0, [sp, #72]
  46b20c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b210:	cmp	w0, #0x46
  46b214:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b218:	ldp	w0, w1, [x19, #40]
  46b21c:	cmp	w0, w1
  46b220:	b.ge	46b6dc <_obstack_memory_used@@Base+0xf2ec>  // b.tcont
  46b224:	mov	w2, #0x18                  	// #24
  46b228:	add	w3, w0, #0x1
  46b22c:	ldr	x1, [x19, #32]
  46b230:	smull	x0, w0, w2
  46b234:	mov	w2, #0x2c                  	// #44
  46b238:	add	x20, x1, x0
  46b23c:	str	wzr, [x20, #4]
  46b240:	str	w3, [x19, #40]
  46b244:	str	x20, [sp, #72]
  46b248:	str	w2, [x1, x0]
  46b24c:	ldrb	w0, [x4, #2]
  46b250:	sub	w0, w0, #0x30
  46b254:	and	w0, w0, #0xff
  46b258:	cmp	w0, #0x9
  46b25c:	cset	w1, ls  // ls = plast
  46b260:	strh	w1, [x20, #16]
  46b264:	b.hi	46b274 <_obstack_memory_used@@Base+0xee84>  // b.pmore
  46b268:	add	x0, x19, #0x18
  46b26c:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  46b270:	ldr	x20, [sp, #72]
  46b274:	mov	x0, x19
  46b278:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b27c:	str	x0, [x20, #8]
  46b280:	ldr	x1, [sp, #72]
  46b284:	ldr	x0, [x1, #8]
  46b288:	cbz	x0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b28c:	add	x0, x19, #0x18
  46b290:	bl	468280 <_obstack_memory_used@@Base+0xbe90>
  46b294:	ldr	x1, [x19, #24]
  46b298:	ldrb	w0, [x1]
  46b29c:	cbz	w0, 46b2ac <_obstack_memory_used@@Base+0xeebc>
  46b2a0:	add	x0, x1, #0x1
  46b2a4:	str	x0, [x19, #24]
  46b2a8:	ldrb	w0, [x1]
  46b2ac:	ldr	x20, [sp, #72]
  46b2b0:	cmp	w0, #0x73
  46b2b4:	cset	w0, eq  // eq = none
  46b2b8:	strh	w0, [x20, #18]
  46b2bc:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b2c0:	cmp	w0, #0x69
  46b2c4:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b2c8:	ldp	w0, w1, [x19, #40]
  46b2cc:	cmp	w0, w1
  46b2d0:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b2d4:	mov	w1, #0x18                  	// #24
  46b2d8:	add	w5, w0, #0x1
  46b2dc:	ldr	x3, [x19, #32]
  46b2e0:	smull	x0, w0, w1
  46b2e4:	ldr	w2, [x19, #72]
  46b2e8:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b2ec:	add	x1, x1, #0xa18
  46b2f0:	add	x20, x3, x0
  46b2f4:	add	x1, x1, #0x588
  46b2f8:	mov	w4, #0x27                  	// #39
  46b2fc:	str	wzr, [x20, #4]
  46b300:	add	w2, w2, #0x8
  46b304:	str	w5, [x19, #40]
  46b308:	str	w4, [x3, x0]
  46b30c:	str	x1, [x20, #8]
  46b310:	str	w2, [x19, #72]
  46b314:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b318:	cmp	w0, #0x64
  46b31c:	b.ne	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.any
  46b320:	ldp	w0, w1, [x19, #40]
  46b324:	cmp	w0, w1
  46b328:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b32c:	mov	w1, #0x18                  	// #24
  46b330:	add	w5, w0, #0x1
  46b334:	ldr	x3, [x19, #32]
  46b338:	smull	x0, w0, w1
  46b33c:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b340:	add	x1, x1, #0xa18
  46b344:	ldr	w2, [x19, #72]
  46b348:	add	x1, x1, #0x4e8
  46b34c:	add	x20, x3, x0
  46b350:	mov	w4, #0x27                  	// #39
  46b354:	b	46adf8 <_obstack_memory_used@@Base+0xea08>
  46b358:	ldr	w0, [x19, #80]
  46b35c:	cbnz	w0, 46b450 <_obstack_memory_used@@Base+0xf060>
  46b360:	cbz	x20, 46ac28 <_obstack_memory_used@@Base+0xe838>
  46b364:	ldp	w0, w1, [x19, #56]
  46b368:	cmp	w0, w1
  46b36c:	b.ge	46ac28 <_obstack_memory_used@@Base+0xe838>  // b.tcont
  46b370:	ldr	x2, [x19, #48]
  46b374:	add	w1, w0, #0x1
  46b378:	mov	x3, #0x0                   	// #0
  46b37c:	str	x20, [x2, w0, sxtw #3]
  46b380:	str	w1, [x19, #56]
  46b384:	ldrb	w0, [x21]
  46b388:	sub	w0, w0, #0x49
  46b38c:	and	w0, w0, #0xff
  46b390:	cmp	w0, #0x1
  46b394:	b.hi	46b3ac <_obstack_memory_used@@Base+0xefbc>  // b.pmore
  46b398:	add	x21, x21, #0x1
  46b39c:	str	x21, [x19, #24]
  46b3a0:	mov	x0, x19
  46b3a4:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  46b3a8:	mov	x3, x0
  46b3ac:	mov	x2, x20
  46b3b0:	mov	x0, x19
  46b3b4:	mov	w1, #0x4                   	// #4
  46b3b8:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b3bc:	mov	x20, x0
  46b3c0:	str	x0, [sp, #72]
  46b3c4:	ldp	x21, x22, [sp, #32]
  46b3c8:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b3cc:	mov	x20, #0x0                   	// #0
  46b3d0:	b	46b038 <_obstack_memory_used@@Base+0xec48>
  46b3d4:	mov	x0, x19
  46b3d8:	bl	46a598 <_obstack_memory_used@@Base+0xe1a8>
  46b3dc:	str	x0, [sp, #72]
  46b3e0:	mov	x20, x0
  46b3e4:	cbz	x0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b3e8:	ldr	w0, [x0]
  46b3ec:	cmp	w0, #0x18
  46b3f0:	b.ne	46acac <_obstack_memory_used@@Base+0xe8bc>  // b.any
  46b3f4:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b3f8:	add	x1, x1, #0x1
  46b3fc:	str	x1, [x19, #24]
  46b400:	mov	x0, x19
  46b404:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  46b408:	mov	x3, x0
  46b40c:	mov	x2, x20
  46b410:	mov	x0, x19
  46b414:	mov	w1, #0x4                   	// #4
  46b418:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b41c:	str	x0, [sp, #72]
  46b420:	b	46ae3c <_obstack_memory_used@@Base+0xea4c>
  46b424:	ldr	w20, [x19, #76]
  46b428:	mov	w0, #0x1                   	// #1
  46b42c:	str	w0, [x19, #76]
  46b430:	mov	x0, x19
  46b434:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  46b438:	str	w20, [x19, #76]
  46b43c:	mov	x20, x0
  46b440:	cbz	x0, 46ab50 <_obstack_memory_used@@Base+0xe760>
  46b444:	ldr	x1, [x19, #24]
  46b448:	ldrb	w0, [x1]
  46b44c:	b	46b02c <_obstack_memory_used@@Base+0xec3c>
  46b450:	ldr	w22, [x19, #56]
  46b454:	add	x0, x21, #0x1
  46b458:	ldr	w20, [x19, #72]
  46b45c:	str	x23, [sp, #48]
  46b460:	str	x0, [x19, #24]
  46b464:	mov	x0, x19
  46b468:	ldr	w23, [x19, #40]
  46b46c:	bl	469ce0 <_obstack_memory_used@@Base+0xd8f0>
  46b470:	ldr	x1, [x19, #24]
  46b474:	ldrb	w1, [x1]
  46b478:	cmp	w1, #0x49
  46b47c:	b.eq	46b658 <_obstack_memory_used@@Base+0xf268>  // b.none
  46b480:	str	x21, [x19, #24]
  46b484:	str	w23, [x19, #40]
  46b488:	str	w22, [x19, #56]
  46b48c:	str	w20, [x19, #72]
  46b490:	ldp	x21, x22, [sp, #32]
  46b494:	ldr	x23, [sp, #48]
  46b498:	ldr	x20, [sp, #72]
  46b49c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b4a0:	ldp	w0, w1, [x19, #40]
  46b4a4:	cmp	w0, w1
  46b4a8:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b4ac:	mov	w1, #0x18                  	// #24
  46b4b0:	add	w5, w0, #0x1
  46b4b4:	ldr	x3, [x19, #32]
  46b4b8:	smull	x0, w0, w1
  46b4bc:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b4c0:	add	x1, x1, #0xa18
  46b4c4:	ldr	w2, [x19, #72]
  46b4c8:	add	x1, x1, #0x568
  46b4cc:	add	x20, x3, x0
  46b4d0:	mov	w4, #0x27                  	// #39
  46b4d4:	b	46b2fc <_obstack_memory_used@@Base+0xef0c>
  46b4d8:	ldp	w0, w1, [x19, #40]
  46b4dc:	cmp	w0, w1
  46b4e0:	b.ge	46ab50 <_obstack_memory_used@@Base+0xe760>  // b.tcont
  46b4e4:	mov	w3, #0x18                  	// #24
  46b4e8:	add	w1, w0, #0x1
  46b4ec:	ldr	x2, [x19, #32]
  46b4f0:	smull	x0, w0, w3
  46b4f4:	str	w1, [x19, #40]
  46b4f8:	mov	w3, #0xe                   	// #14
  46b4fc:	add	x20, x2, x0
  46b500:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46b504:	add	x1, x1, #0xea8
  46b508:	str	xzr, [x2, x0]
  46b50c:	str	x1, [x20, #8]
  46b510:	str	w3, [x20, #16]
  46b514:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b518:	ldp	w0, w1, [x19, #40]
  46b51c:	cmp	w0, w1
  46b520:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b524:	mov	w1, #0x18                  	// #24
  46b528:	add	w5, w0, #0x1
  46b52c:	ldr	x3, [x19, #32]
  46b530:	smull	x0, w0, w1
  46b534:	ldr	w2, [x19, #72]
  46b538:	mov	w4, #0x27                  	// #39
  46b53c:	add	x20, x3, x0
  46b540:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b544:	add	x1, x1, #0xa18
  46b548:	add	w2, w2, #0x4
  46b54c:	add	x1, x1, #0x528
  46b550:	str	wzr, [x20, #4]
  46b554:	str	w5, [x19, #40]
  46b558:	str	w4, [x3, x0]
  46b55c:	str	x1, [x20, #8]
  46b560:	str	w2, [x19, #72]
  46b564:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b568:	ldp	w0, w1, [x19, #40]
  46b56c:	cmp	w0, w1
  46b570:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b574:	mov	w1, #0x18                  	// #24
  46b578:	add	w5, w0, #0x1
  46b57c:	ldr	x3, [x19, #32]
  46b580:	smull	x0, w0, w1
  46b584:	ldr	w2, [x19, #72]
  46b588:	mov	w4, #0x27                  	// #39
  46b58c:	add	x20, x3, x0
  46b590:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b594:	add	x1, x1, #0xa18
  46b598:	add	w2, w2, #0x11
  46b59c:	add	x1, x1, #0x5a8
  46b5a0:	str	wzr, [x20, #4]
  46b5a4:	str	w5, [x19, #40]
  46b5a8:	str	w4, [x3, x0]
  46b5ac:	str	x1, [x20, #8]
  46b5b0:	str	w2, [x19, #72]
  46b5b4:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b5b8:	ldp	w0, w1, [x19, #40]
  46b5bc:	cmp	w0, w1
  46b5c0:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b5c4:	mov	w1, #0x18                  	// #24
  46b5c8:	add	w5, w0, #0x1
  46b5cc:	ldr	x3, [x19, #32]
  46b5d0:	smull	x0, w0, w1
  46b5d4:	ldr	w2, [x19, #72]
  46b5d8:	mov	w4, #0x27                  	// #39
  46b5dc:	add	x20, x3, x0
  46b5e0:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b5e4:	add	x1, x1, #0xa18
  46b5e8:	add	w2, w2, #0xa
  46b5ec:	add	x1, x1, #0x508
  46b5f0:	str	wzr, [x20, #4]
  46b5f4:	str	w5, [x19, #40]
  46b5f8:	str	w4, [x3, x0]
  46b5fc:	str	x1, [x20, #8]
  46b600:	str	w2, [x19, #72]
  46b604:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b608:	ldp	w0, w1, [x19, #40]
  46b60c:	cmp	w0, w1
  46b610:	b.ge	46b6f0 <_obstack_memory_used@@Base+0xf300>  // b.tcont
  46b614:	mov	w1, #0x18                  	// #24
  46b618:	add	w5, w0, #0x1
  46b61c:	ldr	x3, [x19, #32]
  46b620:	smull	x0, w0, w1
  46b624:	ldr	w2, [x19, #72]
  46b628:	mov	w4, #0x27                  	// #39
  46b62c:	add	x20, x3, x0
  46b630:	adrp	x1, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b634:	add	x1, x1, #0xa18
  46b638:	add	w2, w2, #0x7
  46b63c:	add	x1, x1, #0x548
  46b640:	str	wzr, [x20, #4]
  46b644:	str	w5, [x19, #40]
  46b648:	str	w4, [x3, x0]
  46b64c:	str	x1, [x20, #8]
  46b650:	str	w2, [x19, #72]
  46b654:	b	46ab54 <_obstack_memory_used@@Base+0xe764>
  46b658:	ldr	x2, [sp, #72]
  46b65c:	cbz	x2, 46b6d0 <_obstack_memory_used@@Base+0xf2e0>
  46b660:	ldp	w4, w1, [x19, #56]
  46b664:	cmp	w4, w1
  46b668:	b.ge	46b6d0 <_obstack_memory_used@@Base+0xf2e0>  // b.tcont
  46b66c:	ldr	x6, [x19, #48]
  46b670:	add	w5, w4, #0x1
  46b674:	mov	x3, x0
  46b678:	mov	w1, #0x4                   	// #4
  46b67c:	mov	x0, x19
  46b680:	str	x2, [x6, w4, sxtw #3]
  46b684:	str	w5, [x19, #56]
  46b688:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b68c:	mov	x20, x0
  46b690:	str	x0, [sp, #72]
  46b694:	ldp	x21, x22, [sp, #32]
  46b698:	ldr	x23, [sp, #48]
  46b69c:	b	46aca8 <_obstack_memory_used@@Base+0xe8b8>
  46b6a0:	add	x4, x4, #0x3
  46b6a4:	stp	x21, x22, [sp, #32]
  46b6a8:	mov	w1, #0x1                   	// #1
  46b6ac:	ldr	w21, [x19, #76]
  46b6b0:	mov	x0, x19
  46b6b4:	str	x4, [x19, #24]
  46b6b8:	str	w1, [x19, #76]
  46b6bc:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  46b6c0:	mov	x20, x0
  46b6c4:	str	w21, [x19, #76]
  46b6c8:	ldp	x21, x22, [sp, #32]
  46b6cc:	b	46b130 <_obstack_memory_used@@Base+0xed40>
  46b6d0:	ldp	x21, x22, [sp, #32]
  46b6d4:	ldr	x23, [sp, #48]
  46b6d8:	b	46ab50 <_obstack_memory_used@@Base+0xe760>
  46b6dc:	mov	x0, #0x0                   	// #0
  46b6e0:	stp	x21, x22, [sp, #32]
  46b6e4:	str	x23, [sp, #48]
  46b6e8:	str	wzr, [x0]
  46b6ec:	brk	#0x3e8
  46b6f0:	mov	x0, #0x0                   	// #0
  46b6f4:	str	xzr, [sp, #72]
  46b6f8:	stp	x21, x22, [sp, #32]
  46b6fc:	str	x23, [sp, #48]
  46b700:	ldr	x0, [x0, #8]
  46b704:	brk	#0x3e8
  46b708:	stp	x29, x30, [sp, #-32]!
  46b70c:	mov	x29, sp
  46b710:	ldr	x1, [x0, #24]
  46b714:	stp	x19, x20, [sp, #16]
  46b718:	mov	x19, x0
  46b71c:	ldrb	w10, [x1]
  46b720:	cbz	w10, 46b7e4 <_obstack_memory_used@@Base+0xf3f4>
  46b724:	add	x2, x1, #0x1
  46b728:	str	x2, [x0, #24]
  46b72c:	ldrb	w10, [x1, #1]
  46b730:	ldrb	w8, [x1]
  46b734:	cbnz	w10, 46b7ec <_obstack_memory_used@@Base+0xf3fc>
  46b738:	adrp	x5, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46b73c:	add	x5, x5, #0xa18
  46b740:	add	x5, x5, #0x5c8
  46b744:	mov	w4, #0x43                  	// #67
  46b748:	mov	w2, #0x0                   	// #0
  46b74c:	mov	w7, #0x18                  	// #24
  46b750:	sub	w1, w4, w2
  46b754:	add	w1, w1, w1, lsr #31
  46b758:	add	w1, w2, w1, asr #1
  46b75c:	smull	x3, w1, w7
  46b760:	add	x9, x5, x3
  46b764:	ldr	x3, [x5, x3]
  46b768:	ldrb	w6, [x3]
  46b76c:	cmp	w6, w8
  46b770:	b.eq	46b794 <_obstack_memory_used@@Base+0xf3a4>  // b.none
  46b774:	b.ls	46b7dc <_obstack_memory_used@@Base+0xf3ec>  // b.plast
  46b778:	mov	w4, w1
  46b77c:	cmp	w2, w4
  46b780:	b.ne	46b750 <_obstack_memory_used@@Base+0xf360>  // b.any
  46b784:	mov	x0, #0x0                   	// #0
  46b788:	ldp	x19, x20, [sp, #16]
  46b78c:	ldp	x29, x30, [sp], #32
  46b790:	ret
  46b794:	ldrb	w3, [x3, #1]
  46b798:	cmp	w3, w10
  46b79c:	b.ne	46b774 <_obstack_memory_used@@Base+0xf384>  // b.any
  46b7a0:	ldp	w0, w1, [x19, #40]
  46b7a4:	cmp	w0, w1
  46b7a8:	b.ge	46b784 <_obstack_memory_used@@Base+0xf394>  // b.tcont
  46b7ac:	ldr	x2, [x19, #32]
  46b7b0:	smull	x7, w0, w7
  46b7b4:	add	w1, w0, #0x1
  46b7b8:	mov	w3, #0x32                  	// #50
  46b7bc:	add	x0, x2, x7
  46b7c0:	str	wzr, [x0, #4]
  46b7c4:	str	w1, [x19, #40]
  46b7c8:	str	w3, [x2, x7]
  46b7cc:	str	x9, [x0, #8]
  46b7d0:	ldp	x19, x20, [sp, #16]
  46b7d4:	ldp	x29, x30, [sp], #32
  46b7d8:	ret
  46b7dc:	add	w2, w1, #0x1
  46b7e0:	b	46b77c <_obstack_memory_used@@Base+0xf38c>
  46b7e4:	mov	w8, #0x0                   	// #0
  46b7e8:	b	46b738 <_obstack_memory_used@@Base+0xf348>
  46b7ec:	add	x2, x1, #0x2
  46b7f0:	str	x2, [x0, #24]
  46b7f4:	cmp	w8, #0x76
  46b7f8:	ldrb	w10, [x1, #1]
  46b7fc:	b.ne	46b858 <_obstack_memory_used@@Base+0xf468>  // b.any
  46b800:	sub	w11, w10, #0x30
  46b804:	and	w1, w11, #0xff
  46b808:	cmp	w1, #0x9
  46b80c:	b.hi	46b738 <_obstack_memory_used@@Base+0xf348>  // b.pmore
  46b810:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  46b814:	mov	x2, x0
  46b818:	ldp	w1, w0, [x19, #40]
  46b81c:	cmp	w1, w0
  46b820:	b.ge	46b784 <_obstack_memory_used@@Base+0xf394>  // b.tcont
  46b824:	mov	w0, #0x18                  	// #24
  46b828:	add	w4, w1, #0x1
  46b82c:	ldr	x3, [x19, #32]
  46b830:	smull	x1, w1, w0
  46b834:	add	x0, x3, x1
  46b838:	str	wzr, [x0, #4]
  46b83c:	str	w4, [x19, #40]
  46b840:	cbz	x2, 46b784 <_obstack_memory_used@@Base+0xf394>
  46b844:	mov	x4, #0x33                  	// #51
  46b848:	str	x4, [x3, x1]
  46b84c:	str	w11, [x0, #8]
  46b850:	str	x2, [x0, #16]
  46b854:	b	46b788 <_obstack_memory_used@@Base+0xf398>
  46b858:	cmp	w10, #0x76
  46b85c:	mov	w1, #0x63                  	// #99
  46b860:	ccmp	w8, w1, #0x0, eq  // eq = none
  46b864:	b.ne	46b738 <_obstack_memory_used@@Base+0xf348>  // b.any
  46b868:	ldp	w1, w20, [x0, #76]
  46b86c:	cmp	w1, #0x0
  46b870:	cset	w1, eq  // eq = none
  46b874:	str	w1, [x0, #80]
  46b878:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b87c:	mov	x2, x0
  46b880:	ldr	w1, [x19, #80]
  46b884:	mov	x3, #0x0                   	// #0
  46b888:	cbz	w1, 46b8a8 <_obstack_memory_used@@Base+0xf4b8>
  46b88c:	mov	x0, x19
  46b890:	mov	w1, #0x35                  	// #53
  46b894:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b898:	str	w20, [x19, #80]
  46b89c:	ldp	x19, x20, [sp, #16]
  46b8a0:	ldp	x29, x30, [sp], #32
  46b8a4:	ret
  46b8a8:	mov	x0, x19
  46b8ac:	mov	w1, #0x34                  	// #52
  46b8b0:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b8b4:	str	w20, [x19, #80]
  46b8b8:	b	46b89c <_obstack_memory_used@@Base+0xf4ac>
  46b8bc:	nop
  46b8c0:	stp	x29, x30, [sp, #-64]!
  46b8c4:	mov	x29, sp
  46b8c8:	stp	x19, x20, [sp, #16]
  46b8cc:	mov	x19, x0
  46b8d0:	mov	w0, #0x2e                  	// #46
  46b8d4:	str	xzr, [sp, #56]
  46b8d8:	ldr	x2, [x19, #24]
  46b8dc:	ldrb	w1, [x2]
  46b8e0:	cmp	w1, #0x45
  46b8e4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  46b8e8:	ccmp	w1, w0, #0x4, ne  // ne = any
  46b8ec:	b.eq	46b980 <_obstack_memory_used@@Base+0xf590>  // b.none
  46b8f0:	add	x20, sp, #0x38
  46b8f4:	stp	x21, x22, [sp, #32]
  46b8f8:	mov	w22, w0
  46b8fc:	mov	w21, #0x4f                  	// #79
  46b900:	cmp	w1, #0x52
  46b904:	mov	x0, x19
  46b908:	ccmp	w1, w21, #0x4, ne  // ne = any
  46b90c:	b.ne	46b91c <_obstack_memory_used@@Base+0xf52c>  // b.any
  46b910:	ldrb	w1, [x2, #1]
  46b914:	cmp	w1, #0x45
  46b918:	b.eq	46b95c <_obstack_memory_used@@Base+0xf56c>  // b.none
  46b91c:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46b920:	mov	x2, x0
  46b924:	mov	x3, #0x0                   	// #0
  46b928:	mov	x0, x19
  46b92c:	mov	w1, #0x2e                  	// #46
  46b930:	cbz	x2, 46b97c <_obstack_memory_used@@Base+0xf58c>
  46b934:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46b938:	str	x0, [x20]
  46b93c:	add	x20, x0, #0x10
  46b940:	cbz	x0, 46b97c <_obstack_memory_used@@Base+0xf58c>
  46b944:	ldr	x2, [x19, #24]
  46b948:	ldrb	w1, [x2]
  46b94c:	cmp	w1, #0x45
  46b950:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  46b954:	ccmp	w1, w22, #0x4, ne  // ne = any
  46b958:	b.ne	46b900 <_obstack_memory_used@@Base+0xf510>  // b.any
  46b95c:	ldr	x0, [sp, #56]
  46b960:	cbz	x0, 46b97c <_obstack_memory_used@@Base+0xf58c>
  46b964:	ldr	x1, [x0, #16]
  46b968:	cbz	x1, 46b990 <_obstack_memory_used@@Base+0xf5a0>
  46b96c:	ldp	x21, x22, [sp, #32]
  46b970:	ldp	x19, x20, [sp, #16]
  46b974:	ldp	x29, x30, [sp], #64
  46b978:	ret
  46b97c:	ldp	x21, x22, [sp, #32]
  46b980:	mov	x0, #0x0                   	// #0
  46b984:	ldp	x19, x20, [sp, #16]
  46b988:	ldp	x29, x30, [sp], #64
  46b98c:	ret
  46b990:	ldr	x1, [x0, #8]
  46b994:	ldr	w2, [x1]
  46b998:	cmp	w2, #0x27
  46b99c:	b.ne	46b96c <_obstack_memory_used@@Base+0xf57c>  // b.any
  46b9a0:	ldr	x1, [x1, #8]
  46b9a4:	ldr	w2, [x1, #28]
  46b9a8:	cmp	w2, #0x9
  46b9ac:	b.ne	46b96c <_obstack_memory_used@@Base+0xf57c>  // b.any
  46b9b0:	ldr	w2, [x1, #8]
  46b9b4:	ldr	w1, [x19, #72]
  46b9b8:	ldp	x21, x22, [sp, #32]
  46b9bc:	sub	w1, w1, w2
  46b9c0:	str	w1, [x19, #72]
  46b9c4:	str	xzr, [x0, #8]
  46b9c8:	b	46b970 <_obstack_memory_used@@Base+0xf580>
  46b9cc:	nop
  46b9d0:	stp	x29, x30, [sp, #-96]!
  46b9d4:	cmp	w2, #0x0
  46b9d8:	mov	x29, sp
  46b9dc:	stp	x19, x20, [sp, #16]
  46b9e0:	mov	x19, x0
  46b9e4:	mov	w0, #0x1b                  	// #27
  46b9e8:	stp	x21, x22, [sp, #32]
  46b9ec:	mov	x20, x1
  46b9f0:	mov	w22, #0x1c                  	// #28
  46b9f4:	ldr	x4, [x19, #24]
  46b9f8:	stp	x23, x24, [sp, #48]
  46b9fc:	mov	w23, #0x1d                  	// #29
  46ba00:	stp	x25, x26, [sp, #64]
  46ba04:	mov	w25, #0x1e                  	// #30
  46ba08:	csel	w25, w25, w0, ne  // ne = any
  46ba0c:	ldrb	w5, [x4]
  46ba10:	mov	w0, #0x1a                  	// #26
  46ba14:	csel	w23, w23, w0, ne  // ne = any
  46ba18:	mov	w0, #0x19                  	// #25
  46ba1c:	mov	w24, w2
  46ba20:	csel	w22, w22, w0, ne  // ne = any
  46ba24:	mov	x21, x1
  46ba28:	mov	x0, x4
  46ba2c:	mov	w26, #0x1                   	// #1
  46ba30:	bl	4689c0 <_obstack_memory_used@@Base+0xc5d0>
  46ba34:	cbz	w0, 46bb50 <_obstack_memory_used@@Base+0xf760>
  46ba38:	add	x0, x4, #0x1
  46ba3c:	str	x0, [x19, #24]
  46ba40:	cmp	w5, #0x72
  46ba44:	b.eq	46bb10 <_obstack_memory_used@@Base+0xf720>  // b.none
  46ba48:	cmp	w5, #0x56
  46ba4c:	b.eq	46bbb0 <_obstack_memory_used@@Base+0xf7c0>  // b.none
  46ba50:	cmp	w5, #0x4b
  46ba54:	b.eq	46bbc8 <_obstack_memory_used@@Base+0xf7d8>  // b.none
  46ba58:	ldrb	w0, [x4, #1]
  46ba5c:	cbz	w0, 46baf0 <_obstack_memory_used@@Base+0xf700>
  46ba60:	add	x0, x4, #0x2
  46ba64:	str	x0, [x19, #24]
  46ba68:	ldrb	w0, [x4, #1]
  46ba6c:	cmp	w0, #0x78
  46ba70:	b.eq	46bbe0 <_obstack_memory_used@@Base+0xf7f0>  // b.none
  46ba74:	and	w1, w0, #0xffffffdf
  46ba78:	cmp	w1, #0x4f
  46ba7c:	and	w1, w1, #0xff
  46ba80:	b.ne	46bbf8 <_obstack_memory_used@@Base+0xf808>  // b.any
  46ba84:	ldr	w2, [x19, #72]
  46ba88:	cmp	w0, #0x4f
  46ba8c:	add	w0, w2, #0x9
  46ba90:	str	w0, [x19, #72]
  46ba94:	b.ne	46bc3c <_obstack_memory_used@@Base+0xf84c>  // b.any
  46ba98:	str	x27, [sp, #80]
  46ba9c:	mov	x0, x19
  46baa0:	ldr	w27, [x19, #76]
  46baa4:	str	w26, [x19, #76]
  46baa8:	bl	469508 <_obstack_memory_used@@Base+0xd118>
  46baac:	str	w27, [x19, #76]
  46bab0:	mov	x3, x0
  46bab4:	cbz	x0, 46bc54 <_obstack_memory_used@@Base+0xf864>
  46bab8:	ldr	x0, [x19, #24]
  46babc:	ldrb	w1, [x0]
  46bac0:	cmp	w1, #0x45
  46bac4:	b.ne	46bc54 <_obstack_memory_used@@Base+0xf864>  // b.any
  46bac8:	add	x0, x0, #0x1
  46bacc:	mov	w1, #0x4f                  	// #79
  46bad0:	ldr	x27, [sp, #80]
  46bad4:	str	x0, [x19, #24]
  46bad8:	mov	x2, #0x0                   	// #0
  46badc:	mov	x0, x19
  46bae0:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46bae4:	str	x0, [x20]
  46bae8:	cbnz	x0, 46bb38 <_obstack_memory_used@@Base+0xf748>
  46baec:	nop
  46baf0:	mov	x20, #0x0                   	// #0
  46baf4:	mov	x0, x20
  46baf8:	ldp	x19, x20, [sp, #16]
  46bafc:	ldp	x21, x22, [sp, #32]
  46bb00:	ldp	x23, x24, [sp, #48]
  46bb04:	ldp	x25, x26, [sp, #64]
  46bb08:	ldp	x29, x30, [sp], #96
  46bb0c:	ret
  46bb10:	ldr	w0, [x19, #72]
  46bb14:	mov	w1, w22
  46bb18:	mov	x3, #0x0                   	// #0
  46bb1c:	add	w0, w0, #0x9
  46bb20:	str	w0, [x19, #72]
  46bb24:	mov	x0, x19
  46bb28:	mov	x2, #0x0                   	// #0
  46bb2c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46bb30:	str	x0, [x20]
  46bb34:	cbz	x0, 46baf0 <_obstack_memory_used@@Base+0xf700>
  46bb38:	ldr	x4, [x19, #24]
  46bb3c:	add	x20, x0, #0x8
  46bb40:	mov	x0, x4
  46bb44:	ldrb	w5, [x4]
  46bb48:	bl	4689c0 <_obstack_memory_used@@Base+0xc5d0>
  46bb4c:	cbnz	w0, 46ba38 <_obstack_memory_used@@Base+0xf648>
  46bb50:	cmp	w5, #0x46
  46bb54:	eor	w24, w24, #0x1
  46bb58:	cset	w0, eq  // eq = none
  46bb5c:	tst	w24, w0
  46bb60:	b.eq	46baf4 <_obstack_memory_used@@Base+0xf704>  // b.none
  46bb64:	cmp	x20, x21
  46bb68:	b.eq	46baf4 <_obstack_memory_used@@Base+0xf704>  // b.none
  46bb6c:	mov	w3, #0x1d                  	// #29
  46bb70:	mov	w2, #0x1e                  	// #30
  46bb74:	mov	w1, #0x1c                  	// #28
  46bb78:	b	46bb90 <_obstack_memory_used@@Base+0xf7a0>
  46bb7c:	cmp	w0, #0x19
  46bb80:	b.eq	46bc4c <_obstack_memory_used@@Base+0xf85c>  // b.none
  46bb84:	add	x21, x21, #0x8
  46bb88:	cmp	x20, x21
  46bb8c:	b.eq	46baf4 <_obstack_memory_used@@Base+0xf704>  // b.none
  46bb90:	ldr	x21, [x21]
  46bb94:	ldr	w0, [x21]
  46bb98:	cmp	w0, #0x1a
  46bb9c:	b.eq	46bc44 <_obstack_memory_used@@Base+0xf854>  // b.none
  46bba0:	cmp	w0, #0x1b
  46bba4:	b.ne	46bb7c <_obstack_memory_used@@Base+0xf78c>  // b.any
  46bba8:	str	w2, [x21]
  46bbac:	b	46bb84 <_obstack_memory_used@@Base+0xf794>
  46bbb0:	ldr	w0, [x19, #72]
  46bbb4:	mov	w1, w23
  46bbb8:	mov	x3, #0x0                   	// #0
  46bbbc:	add	w0, w0, #0x9
  46bbc0:	str	w0, [x19, #72]
  46bbc4:	b	46bb24 <_obstack_memory_used@@Base+0xf734>
  46bbc8:	ldr	w0, [x19, #72]
  46bbcc:	mov	w1, w25
  46bbd0:	mov	x3, #0x0                   	// #0
  46bbd4:	add	w0, w0, #0x6
  46bbd8:	str	w0, [x19, #72]
  46bbdc:	b	46bb24 <_obstack_memory_used@@Base+0xf734>
  46bbe0:	ldr	w0, [x19, #72]
  46bbe4:	mov	x3, #0x0                   	// #0
  46bbe8:	mov	w1, #0x4d                  	// #77
  46bbec:	add	w0, w0, #0x11
  46bbf0:	str	w0, [x19, #72]
  46bbf4:	b	46bb24 <_obstack_memory_used@@Base+0xf734>
  46bbf8:	cmp	w0, #0x77
  46bbfc:	b.ne	46baf0 <_obstack_memory_used@@Base+0xf700>  // b.any
  46bc00:	ldr	w1, [x19, #72]
  46bc04:	mov	x0, x19
  46bc08:	add	w1, w1, #0x6
  46bc0c:	str	w1, [x19, #72]
  46bc10:	bl	46b8c0 <_obstack_memory_used@@Base+0xf4d0>
  46bc14:	mov	x3, x0
  46bc18:	cbz	x0, 46baf0 <_obstack_memory_used@@Base+0xf700>
  46bc1c:	ldr	x0, [x19, #24]
  46bc20:	ldrb	w1, [x0]
  46bc24:	cmp	w1, #0x45
  46bc28:	b.ne	46baf0 <_obstack_memory_used@@Base+0xf700>  // b.any
  46bc2c:	add	x0, x0, #0x1
  46bc30:	mov	w1, #0x50                  	// #80
  46bc34:	str	x0, [x19, #24]
  46bc38:	b	46bb24 <_obstack_memory_used@@Base+0xf734>
  46bc3c:	mov	x3, #0x0                   	// #0
  46bc40:	b	46bb24 <_obstack_memory_used@@Base+0xf734>
  46bc44:	str	w3, [x21]
  46bc48:	b	46bb84 <_obstack_memory_used@@Base+0xf794>
  46bc4c:	str	w1, [x21]
  46bc50:	b	46bb84 <_obstack_memory_used@@Base+0xf794>
  46bc54:	ldr	x27, [sp, #80]
  46bc58:	b	46baf0 <_obstack_memory_used@@Base+0xf700>
  46bc5c:	nop
  46bc60:	stp	x29, x30, [sp, #-32]!
  46bc64:	mov	x29, sp
  46bc68:	stp	x19, x20, [sp, #16]
  46bc6c:	mov	x19, x0
  46bc70:	ldr	x0, [x0, #24]
  46bc74:	ldrb	w2, [x0]
  46bc78:	cmp	w2, #0x4a
  46bc7c:	b.eq	46bce0 <_obstack_memory_used@@Base+0xf8f0>  // b.none
  46bc80:	cbz	w1, 46bcbc <_obstack_memory_used@@Base+0xf8cc>
  46bc84:	mov	x0, x19
  46bc88:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46bc8c:	mov	x20, x0
  46bc90:	cbz	x0, 46bcd0 <_obstack_memory_used@@Base+0xf8e0>
  46bc94:	mov	x0, x19
  46bc98:	bl	46b8c0 <_obstack_memory_used@@Base+0xf4d0>
  46bc9c:	mov	x3, x0
  46bca0:	cbz	x0, 46bcd0 <_obstack_memory_used@@Base+0xf8e0>
  46bca4:	mov	x2, x20
  46bca8:	mov	x0, x19
  46bcac:	ldp	x19, x20, [sp, #16]
  46bcb0:	mov	w1, #0x29                  	// #41
  46bcb4:	ldp	x29, x30, [sp], #32
  46bcb8:	b	468000 <_obstack_memory_used@@Base+0xbc10>
  46bcbc:	mov	x0, x19
  46bcc0:	mov	x20, #0x0                   	// #0
  46bcc4:	bl	46b8c0 <_obstack_memory_used@@Base+0xf4d0>
  46bcc8:	mov	x3, x0
  46bccc:	cbnz	x0, 46bca4 <_obstack_memory_used@@Base+0xf8b4>
  46bcd0:	mov	x0, #0x0                   	// #0
  46bcd4:	ldp	x19, x20, [sp, #16]
  46bcd8:	ldp	x29, x30, [sp], #32
  46bcdc:	ret
  46bce0:	add	x0, x0, #0x1
  46bce4:	str	x0, [x19, #24]
  46bce8:	b	46bc84 <_obstack_memory_used@@Base+0xf894>
  46bcec:	nop
  46bcf0:	stp	x29, x30, [sp, #-32]!
  46bcf4:	mov	x29, sp
  46bcf8:	str	x19, [sp, #16]
  46bcfc:	mov	x19, x0
  46bd00:	ldr	w0, [x0, #16]
  46bd04:	tbnz	w0, #18, 46bd40 <_obstack_memory_used@@Base+0xf950>
  46bd08:	ldr	w1, [x19, #84]
  46bd0c:	cmp	w1, #0x800
  46bd10:	b.hi	46bd50 <_obstack_memory_used@@Base+0xf960>  // b.pmore
  46bd14:	ldr	x2, [x19, #24]
  46bd18:	add	w0, w1, #0x1
  46bd1c:	str	w0, [x19, #84]
  46bd20:	mov	x0, #0x0                   	// #0
  46bd24:	ldrb	w3, [x2]
  46bd28:	cmp	w3, #0x46
  46bd2c:	b.eq	46bd60 <_obstack_memory_used@@Base+0xf970>  // b.none
  46bd30:	str	w1, [x19, #84]
  46bd34:	ldr	x19, [sp, #16]
  46bd38:	ldp	x29, x30, [sp], #32
  46bd3c:	ret
  46bd40:	ldr	x2, [x19, #24]
  46bd44:	ldrb	w0, [x2]
  46bd48:	cmp	w0, #0x46
  46bd4c:	b.eq	46bd60 <_obstack_memory_used@@Base+0xf970>  // b.none
  46bd50:	mov	x0, #0x0                   	// #0
  46bd54:	ldr	x19, [sp, #16]
  46bd58:	ldp	x29, x30, [sp], #32
  46bd5c:	ret
  46bd60:	add	x4, x2, #0x1
  46bd64:	str	x4, [x19, #24]
  46bd68:	add	x3, x2, #0x2
  46bd6c:	mov	w1, #0x1                   	// #1
  46bd70:	ldrb	w2, [x2, #1]
  46bd74:	mov	x0, x19
  46bd78:	cmp	w2, #0x59
  46bd7c:	csel	x2, x3, x4, eq  // eq = none
  46bd80:	str	x2, [x19, #24]
  46bd84:	bl	46bc60 <_obstack_memory_used@@Base+0xf870>
  46bd88:	mov	x1, x0
  46bd8c:	mov	x0, x19
  46bd90:	bl	468088 <_obstack_memory_used@@Base+0xbc98>
  46bd94:	ldr	x1, [x19, #24]
  46bd98:	ldrb	w2, [x1]
  46bd9c:	cmp	w2, #0x45
  46bda0:	b.eq	46bdc0 <_obstack_memory_used@@Base+0xf9d0>  // b.none
  46bda4:	mov	x0, #0x0                   	// #0
  46bda8:	ldr	w1, [x19, #16]
  46bdac:	tbnz	w1, #18, 46bd54 <_obstack_memory_used@@Base+0xf964>
  46bdb0:	ldr	w1, [x19, #84]
  46bdb4:	sub	w1, w1, #0x1
  46bdb8:	str	w1, [x19, #84]
  46bdbc:	b	46bd34 <_obstack_memory_used@@Base+0xf944>
  46bdc0:	add	x1, x1, #0x1
  46bdc4:	str	x1, [x19, #24]
  46bdc8:	b	46bda8 <_obstack_memory_used@@Base+0xf9b8>
  46bdcc:	nop
  46bdd0:	stp	x29, x30, [sp, #-48]!
  46bdd4:	mov	x29, sp
  46bdd8:	ldr	x3, [x0, #24]
  46bddc:	stp	x19, x20, [sp, #16]
  46bde0:	mov	x19, x0
  46bde4:	ldrb	w2, [x3]
  46bde8:	sub	w1, w2, #0x30
  46bdec:	and	w1, w1, #0xff
  46bdf0:	cmp	w1, #0x9
  46bdf4:	b.ls	46bf04 <_obstack_memory_used@@Base+0xfb14>  // b.plast
  46bdf8:	sub	w1, w2, #0x61
  46bdfc:	and	w1, w1, #0xff
  46be00:	cmp	w1, #0x19
  46be04:	b.hi	46be4c <_obstack_memory_used@@Base+0xfa5c>  // b.pmore
  46be08:	cmp	w2, #0x6f
  46be0c:	b.eq	46bfcc <_obstack_memory_used@@Base+0xfbdc>  // b.none
  46be10:	mov	x0, x19
  46be14:	bl	46b708 <_obstack_memory_used@@Base+0xf318>
  46be18:	mov	x20, x0
  46be1c:	cbz	x0, 46be2c <_obstack_memory_used@@Base+0xfa3c>
  46be20:	ldr	w0, [x0]
  46be24:	cmp	w0, #0x32
  46be28:	b.eq	46bf30 <_obstack_memory_used@@Base+0xfb40>  // b.none
  46be2c:	ldr	x0, [x19, #24]
  46be30:	ldrb	w1, [x0]
  46be34:	cmp	w1, #0x42
  46be38:	b.eq	46bf1c <_obstack_memory_used@@Base+0xfb2c>  // b.none
  46be3c:	mov	x0, x20
  46be40:	ldp	x19, x20, [sp, #16]
  46be44:	ldp	x29, x30, [sp], #48
  46be48:	ret
  46be4c:	sub	w1, w2, #0x43
  46be50:	and	w1, w1, #0xff
  46be54:	cmp	w1, #0x1
  46be58:	b.ls	46bfe4 <_obstack_memory_used@@Base+0xfbf4>  // b.plast
  46be5c:	cmp	w2, #0x4c
  46be60:	b.eq	46bf98 <_obstack_memory_used@@Base+0xfba8>  // b.none
  46be64:	cmp	w2, #0x55
  46be68:	b.ne	46bfb8 <_obstack_memory_used@@Base+0xfbc8>  // b.any
  46be6c:	ldrb	w1, [x3, #1]
  46be70:	cmp	w1, #0x6c
  46be74:	b.eq	46c0a8 <_obstack_memory_used@@Base+0xfcb8>  // b.none
  46be78:	cmp	w1, #0x74
  46be7c:	b.ne	46bfb8 <_obstack_memory_used@@Base+0xfbc8>  // b.any
  46be80:	add	x1, x3, #0x1
  46be84:	str	x1, [x0, #24]
  46be88:	mov	x20, #0x0                   	// #0
  46be8c:	ldrb	w1, [x3, #1]
  46be90:	cmp	w1, #0x74
  46be94:	b.ne	46be34 <_obstack_memory_used@@Base+0xfa44>  // b.any
  46be98:	add	x3, x3, #0x2
  46be9c:	str	x3, [x0, #24]
  46bea0:	bl	4683b8 <_obstack_memory_used@@Base+0xbfc8>
  46bea4:	tbnz	w0, #31, 46be2c <_obstack_memory_used@@Base+0xfa3c>
  46bea8:	ldp	w1, w2, [x19, #40]
  46beac:	cmp	w1, w2
  46beb0:	b.ge	46c270 <_obstack_memory_used@@Base+0xfe80>  // b.tcont
  46beb4:	ldp	x7, x3, [x19, #24]
  46beb8:	mov	w2, #0x18                  	// #24
  46bebc:	add	w6, w1, #0x1
  46bec0:	mov	w4, #0x48                  	// #72
  46bec4:	smull	x1, w1, w2
  46bec8:	sxtw	x0, w0
  46becc:	ldp	w2, w5, [x19, #56]
  46bed0:	add	x20, x3, x1
  46bed4:	cmp	w2, w5
  46bed8:	str	wzr, [x20, #4]
  46bedc:	str	w6, [x19, #40]
  46bee0:	str	w4, [x3, x1]
  46bee4:	str	x0, [x20, #8]
  46bee8:	b.ge	46c264 <_obstack_memory_used@@Base+0xfe74>  // b.tcont
  46beec:	ldr	x1, [x19, #48]
  46bef0:	add	w0, w2, #0x1
  46bef4:	str	x20, [x1, w2, sxtw #3]
  46bef8:	str	w0, [x19, #56]
  46befc:	ldrb	w1, [x7]
  46bf00:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46bf04:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  46bf08:	mov	x20, x0
  46bf0c:	ldr	x3, [x19, #24]
  46bf10:	ldrb	w1, [x3]
  46bf14:	cmp	w1, #0x42
  46bf18:	b.ne	46be3c <_obstack_memory_used@@Base+0xfa4c>  // b.any
  46bf1c:	mov	x1, x20
  46bf20:	mov	x0, x19
  46bf24:	ldp	x19, x20, [sp, #16]
  46bf28:	ldp	x29, x30, [sp], #48
  46bf2c:	b	468630 <_obstack_memory_used@@Base+0xc240>
  46bf30:	ldr	x1, [x20, #8]
  46bf34:	ldr	w0, [x19, #72]
  46bf38:	ldr	x2, [x1]
  46bf3c:	add	w0, w0, #0x7
  46bf40:	ldr	w1, [x1, #16]
  46bf44:	add	w0, w0, w1
  46bf48:	str	w0, [x19, #72]
  46bf4c:	ldrb	w0, [x2]
  46bf50:	cmp	w0, #0x6c
  46bf54:	b.ne	46be2c <_obstack_memory_used@@Base+0xfa3c>  // b.any
  46bf58:	ldrb	w0, [x2, #1]
  46bf5c:	cmp	w0, #0x69
  46bf60:	b.ne	46be2c <_obstack_memory_used@@Base+0xfa3c>  // b.any
  46bf64:	ldrb	w0, [x2, #2]
  46bf68:	cbnz	w0, 46be2c <_obstack_memory_used@@Base+0xfa3c>
  46bf6c:	mov	x0, x19
  46bf70:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  46bf74:	mov	x2, x20
  46bf78:	mov	x3, x0
  46bf7c:	mov	w1, #0x37                  	// #55
  46bf80:	mov	x0, x19
  46bf84:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46bf88:	mov	x20, x0
  46bf8c:	ldr	x3, [x19, #24]
  46bf90:	ldrb	w1, [x3]
  46bf94:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46bf98:	add	x3, x3, #0x1
  46bf9c:	str	x3, [x0, #24]
  46bfa0:	bl	4684b0 <_obstack_memory_used@@Base+0xc0c0>
  46bfa4:	mov	x20, x0
  46bfa8:	cbz	x0, 46bfb8 <_obstack_memory_used@@Base+0xfbc8>
  46bfac:	mov	x0, x19
  46bfb0:	bl	468a18 <_obstack_memory_used@@Base+0xc628>
  46bfb4:	cbnz	w0, 46be2c <_obstack_memory_used@@Base+0xfa3c>
  46bfb8:	mov	x20, #0x0                   	// #0
  46bfbc:	mov	x0, x20
  46bfc0:	ldp	x19, x20, [sp, #16]
  46bfc4:	ldp	x29, x30, [sp], #48
  46bfc8:	ret
  46bfcc:	ldrb	w0, [x3, #1]
  46bfd0:	cmp	w0, #0x6e
  46bfd4:	b.ne	46be10 <_obstack_memory_used@@Base+0xfa20>  // b.any
  46bfd8:	add	x3, x3, #0x2
  46bfdc:	str	x3, [x19, #24]
  46bfe0:	b	46be10 <_obstack_memory_used@@Base+0xfa20>
  46bfe4:	ldr	x0, [x0, #64]
  46bfe8:	cbz	x0, 46bffc <_obstack_memory_used@@Base+0xfc0c>
  46bfec:	ldr	w1, [x0]
  46bff0:	cbz	w1, 46c078 <_obstack_memory_used@@Base+0xfc88>
  46bff4:	cmp	w1, #0x18
  46bff8:	b.eq	46c078 <_obstack_memory_used@@Base+0xfc88>  // b.none
  46bffc:	cmp	w2, #0x43
  46c000:	b.eq	46c158 <_obstack_memory_used@@Base+0xfd68>  // b.none
  46c004:	ldrb	w1, [x3, #1]
  46c008:	cmp	w1, #0x32
  46c00c:	b.eq	46c25c <_obstack_memory_used@@Base+0xfe6c>  // b.none
  46c010:	b.hi	46c1cc <_obstack_memory_used@@Base+0xfddc>  // b.pmore
  46c014:	cmp	w1, #0x30
  46c018:	b.eq	46c1f8 <_obstack_memory_used@@Base+0xfe08>  // b.none
  46c01c:	cmp	w1, #0x31
  46c020:	mov	w4, #0x2                   	// #2
  46c024:	b.ne	46c1e0 <_obstack_memory_used@@Base+0xfdf0>  // b.any
  46c028:	add	x1, x3, #0x2
  46c02c:	ldr	w2, [x19, #44]
  46c030:	str	x1, [x19, #24]
  46c034:	ldr	w1, [x19, #40]
  46c038:	cmp	w1, w2
  46c03c:	b.ge	46c1ec <_obstack_memory_used@@Base+0xfdfc>  // b.tcont
  46c040:	mov	w6, #0x18                  	// #24
  46c044:	add	w5, w1, #0x1
  46c048:	ldr	x2, [x19, #32]
  46c04c:	smull	x1, w1, w6
  46c050:	add	x20, x2, x1
  46c054:	str	wzr, [x20, #4]
  46c058:	str	w5, [x19, #40]
  46c05c:	cbz	x0, 46c1ec <_obstack_memory_used@@Base+0xfdfc>
  46c060:	mov	x5, #0x8                   	// #8
  46c064:	str	x5, [x2, x1]
  46c068:	str	w4, [x20, #8]
  46c06c:	str	x0, [x20, #16]
  46c070:	ldrb	w1, [x3, #2]
  46c074:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c078:	ldr	w2, [x0, #16]
  46c07c:	ldr	w1, [x19, #72]
  46c080:	add	w1, w1, w2
  46c084:	str	w1, [x19, #72]
  46c088:	ldrb	w1, [x3]
  46c08c:	cmp	w1, #0x43
  46c090:	mov	w2, w1
  46c094:	b.eq	46c158 <_obstack_memory_used@@Base+0xfd68>  // b.none
  46c098:	cmp	w1, #0x44
  46c09c:	b.eq	46c004 <_obstack_memory_used@@Base+0xfc14>  // b.none
  46c0a0:	mov	x20, #0x0                   	// #0
  46c0a4:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c0a8:	add	x1, x3, #0x1
  46c0ac:	str	x1, [x0, #24]
  46c0b0:	mov	x20, #0x0                   	// #0
  46c0b4:	ldrb	w1, [x3, #1]
  46c0b8:	cmp	w1, #0x6c
  46c0bc:	b.ne	46be34 <_obstack_memory_used@@Base+0xfa44>  // b.any
  46c0c0:	add	x3, x3, #0x2
  46c0c4:	str	x3, [x0, #24]
  46c0c8:	bl	46b8c0 <_obstack_memory_used@@Base+0xf4d0>
  46c0cc:	mov	x11, x0
  46c0d0:	ldr	x0, [x19, #24]
  46c0d4:	ldrb	w1, [x0]
  46c0d8:	cbz	x11, 46be34 <_obstack_memory_used@@Base+0xfa44>
  46c0dc:	cmp	w1, #0x45
  46c0e0:	b.ne	46be34 <_obstack_memory_used@@Base+0xfa44>  // b.any
  46c0e4:	add	x0, x0, #0x1
  46c0e8:	str	x0, [x19, #24]
  46c0ec:	mov	x0, x19
  46c0f0:	bl	4683b8 <_obstack_memory_used@@Base+0xbfc8>
  46c0f4:	tbnz	w0, #31, 46c270 <_obstack_memory_used@@Base+0xfe80>
  46c0f8:	ldp	w1, w2, [x19, #40]
  46c0fc:	ldr	x4, [x19, #24]
  46c100:	cmp	w1, w2
  46c104:	b.ge	46c280 <_obstack_memory_used@@Base+0xfe90>  // b.tcont
  46c108:	mov	w2, #0x18                  	// #24
  46c10c:	add	w6, w1, #0x1
  46c110:	ldr	x3, [x19, #32]
  46c114:	smull	x1, w1, w2
  46c118:	ldp	w2, w7, [x19, #56]
  46c11c:	add	x20, x3, x1
  46c120:	mov	w5, #0x46                  	// #70
  46c124:	cmp	w2, w7
  46c128:	str	wzr, [x20, #4]
  46c12c:	str	w6, [x19, #40]
  46c130:	str	w5, [x3, x1]
  46c134:	str	x11, [x20, #8]
  46c138:	str	w0, [x20, #16]
  46c13c:	b.ge	46c280 <_obstack_memory_used@@Base+0xfe90>  // b.tcont
  46c140:	ldr	x1, [x19, #48]
  46c144:	add	w0, w2, #0x1
  46c148:	str	x20, [x1, w2, sxtw #3]
  46c14c:	str	w0, [x19, #56]
  46c150:	ldrb	w1, [x4]
  46c154:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c158:	str	x21, [sp, #32]
  46c15c:	ldrb	w1, [x3, #1]
  46c160:	cmp	w1, #0x49
  46c164:	b.eq	46c208 <_obstack_memory_used@@Base+0xfe18>  // b.none
  46c168:	sub	w2, w1, #0x31
  46c16c:	and	w2, w2, #0xff
  46c170:	cmp	w2, #0x4
  46c174:	b.hi	46c250 <_obstack_memory_used@@Base+0xfe60>  // b.pmore
  46c178:	sub	w21, w1, #0x30
  46c17c:	add	x3, x3, #0x2
  46c180:	str	x3, [x19, #24]
  46c184:	ldp	w1, w2, [x19, #40]
  46c188:	cmp	w1, w2
  46c18c:	b.ge	46c28c <_obstack_memory_used@@Base+0xfe9c>  // b.tcont
  46c190:	mov	w4, #0x18                  	// #24
  46c194:	add	w3, w1, #0x1
  46c198:	smull	x1, w1, w4
  46c19c:	ldp	x4, x2, [x19, #24]
  46c1a0:	add	x20, x2, x1
  46c1a4:	str	wzr, [x20, #4]
  46c1a8:	str	w3, [x19, #40]
  46c1ac:	cbz	x0, 46c240 <_obstack_memory_used@@Base+0xfe50>
  46c1b0:	mov	x3, #0x7                   	// #7
  46c1b4:	str	x3, [x2, x1]
  46c1b8:	str	w21, [x20, #8]
  46c1bc:	str	x0, [x20, #16]
  46c1c0:	ldr	x21, [sp, #32]
  46c1c4:	ldrb	w1, [x4]
  46c1c8:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c1cc:	cmp	w1, #0x34
  46c1d0:	b.eq	46c200 <_obstack_memory_used@@Base+0xfe10>  // b.none
  46c1d4:	cmp	w1, #0x35
  46c1d8:	mov	w4, #0x5                   	// #5
  46c1dc:	b.eq	46c028 <_obstack_memory_used@@Base+0xfc38>  // b.none
  46c1e0:	mov	w1, w2
  46c1e4:	mov	x20, #0x0                   	// #0
  46c1e8:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c1ec:	ldrb	w1, [x3, #2]
  46c1f0:	mov	x20, #0x0                   	// #0
  46c1f4:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c1f8:	mov	w4, #0x1                   	// #1
  46c1fc:	b	46c028 <_obstack_memory_used@@Base+0xfc38>
  46c200:	mov	w4, #0x4                   	// #4
  46c204:	b	46c028 <_obstack_memory_used@@Base+0xfc38>
  46c208:	add	x0, x3, #0x1
  46c20c:	str	x0, [x19, #24]
  46c210:	ldrb	w1, [x3, #2]
  46c214:	sub	w0, w1, #0x31
  46c218:	and	w0, w0, #0xff
  46c21c:	cmp	w0, #0x4
  46c220:	b.hi	46c2a0 <_obstack_memory_used@@Base+0xfeb0>  // b.pmore
  46c224:	add	x3, x3, #0x3
  46c228:	str	x3, [x19, #24]
  46c22c:	sub	w21, w1, #0x30
  46c230:	mov	x0, x19
  46c234:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46c238:	ldr	x0, [x19, #64]
  46c23c:	b	46c184 <_obstack_memory_used@@Base+0xfd94>
  46c240:	ldrb	w1, [x4]
  46c244:	mov	x20, #0x0                   	// #0
  46c248:	ldr	x21, [sp, #32]
  46c24c:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c250:	mov	x20, #0x0                   	// #0
  46c254:	ldr	x21, [sp, #32]
  46c258:	b	46bfbc <_obstack_memory_used@@Base+0xfbcc>
  46c25c:	mov	w4, #0x3                   	// #3
  46c260:	b	46c028 <_obstack_memory_used@@Base+0xfc38>
  46c264:	ldrb	w1, [x7]
  46c268:	mov	x20, #0x0                   	// #0
  46c26c:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c270:	ldr	x0, [x19, #24]
  46c274:	mov	x20, #0x0                   	// #0
  46c278:	ldrb	w1, [x0]
  46c27c:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c280:	ldrb	w1, [x4]
  46c284:	mov	x20, #0x0                   	// #0
  46c288:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c28c:	ldr	x0, [x19, #24]
  46c290:	mov	x20, #0x0                   	// #0
  46c294:	ldr	x21, [sp, #32]
  46c298:	ldrb	w1, [x0]
  46c29c:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c2a0:	ldrb	w1, [x3, #1]
  46c2a4:	mov	x20, #0x0                   	// #0
  46c2a8:	ldr	x21, [sp, #32]
  46c2ac:	b	46be34 <_obstack_memory_used@@Base+0xfa44>
  46c2b0:	ldr	x2, [x0, #24]
  46c2b4:	ldrb	w1, [x2]
  46c2b8:	cmp	w1, #0x4c
  46c2bc:	b.ne	46c3a4 <_obstack_memory_used@@Base+0xffb4>  // b.any
  46c2c0:	stp	x29, x30, [sp, #-32]!
  46c2c4:	add	x1, x2, #0x1
  46c2c8:	mov	w4, #0x5a                  	// #90
  46c2cc:	mov	x29, sp
  46c2d0:	str	x19, [sp, #16]
  46c2d4:	mov	x19, x0
  46c2d8:	str	x1, [x0, #24]
  46c2dc:	ldrb	w3, [x2, #1]
  46c2e0:	cmp	w3, #0x5f
  46c2e4:	ccmp	w3, w4, #0x4, ne  // ne = any
  46c2e8:	b.eq	46c364 <_obstack_memory_used@@Base+0xff74>  // b.none
  46c2ec:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  46c2f0:	mov	x2, x0
  46c2f4:	cbz	x0, 46c354 <_obstack_memory_used@@Base+0xff64>
  46c2f8:	ldr	w0, [x0]
  46c2fc:	cmp	w0, #0x27
  46c300:	b.eq	46c41c <_obstack_memory_used@@Base+0x1002c>  // b.none
  46c304:	ldr	x0, [x19, #24]
  46c308:	mov	w1, #0x3d                  	// #61
  46c30c:	ldrb	w4, [x0]
  46c310:	cmp	w4, #0x6e
  46c314:	b.ne	46c32c <_obstack_memory_used@@Base+0xff3c>  // b.any
  46c318:	add	x3, x0, #0x1
  46c31c:	str	x3, [x19, #24]
  46c320:	mov	w1, #0x3e                  	// #62
  46c324:	ldrb	w4, [x0, #1]
  46c328:	mov	x0, x3
  46c32c:	cmp	w4, #0x45
  46c330:	b.eq	46c444 <_obstack_memory_used@@Base+0x10054>  // b.none
  46c334:	add	x3, x0, #0x1
  46c338:	b	46c34c <_obstack_memory_used@@Base+0xff5c>
  46c33c:	str	x3, [x19, #24]
  46c340:	ldrb	w4, [x3], #1
  46c344:	cmp	w4, #0x45
  46c348:	b.eq	46c3c8 <_obstack_memory_used@@Base+0xffd8>  // b.none
  46c34c:	mov	x5, x3
  46c350:	cbnz	w4, 46c33c <_obstack_memory_used@@Base+0xff4c>
  46c354:	mov	x0, #0x0                   	// #0
  46c358:	ldr	x19, [sp, #16]
  46c35c:	ldp	x29, x30, [sp], #32
  46c360:	ret
  46c364:	cmp	w3, #0x5f
  46c368:	b.eq	46c3ac <_obstack_memory_used@@Base+0xffbc>  // b.none
  46c36c:	add	x1, x1, #0x1
  46c370:	str	x1, [x19, #24]
  46c374:	mov	x0, x19
  46c378:	mov	w1, #0x0                   	// #0
  46c37c:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  46c380:	ldr	x1, [x19, #24]
  46c384:	ldrb	w2, [x1]
  46c388:	cmp	w2, #0x45
  46c38c:	b.ne	46c354 <_obstack_memory_used@@Base+0xff64>  // b.any
  46c390:	add	x1, x1, #0x1
  46c394:	str	x1, [x19, #24]
  46c398:	ldr	x19, [sp, #16]
  46c39c:	ldp	x29, x30, [sp], #32
  46c3a0:	ret
  46c3a4:	mov	x0, #0x0                   	// #0
  46c3a8:	ret
  46c3ac:	add	x1, x2, #0x2
  46c3b0:	str	x1, [x19, #24]
  46c3b4:	mov	x0, #0x0                   	// #0
  46c3b8:	ldrb	w2, [x2, #2]
  46c3bc:	cmp	w2, w4
  46c3c0:	b.ne	46c388 <_obstack_memory_used@@Base+0xff98>  // b.any
  46c3c4:	b	46c36c <_obstack_memory_used@@Base+0xff7c>
  46c3c8:	sub	w5, w5, w0
  46c3cc:	ldp	w3, w4, [x19, #40]
  46c3d0:	cmp	w3, w4
  46c3d4:	b.ge	46c43c <_obstack_memory_used@@Base+0x1004c>  // b.tcont
  46c3d8:	mov	w4, #0x18                  	// #24
  46c3dc:	add	w7, w3, #0x1
  46c3e0:	ldr	x6, [x19, #32]
  46c3e4:	smull	x4, w3, w4
  46c3e8:	cmp	w5, #0x0
  46c3ec:	add	x3, x6, x4
  46c3f0:	str	wzr, [x3, #4]
  46c3f4:	str	w7, [x19, #40]
  46c3f8:	b.le	46c43c <_obstack_memory_used@@Base+0x1004c>
  46c3fc:	str	xzr, [x6, x4]
  46c400:	str	x0, [x3, #8]
  46c404:	str	w5, [x3, #16]
  46c408:	mov	x0, x19
  46c40c:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  46c410:	ldr	x1, [x19, #24]
  46c414:	ldrb	w2, [x1]
  46c418:	b	46c388 <_obstack_memory_used@@Base+0xff98>
  46c41c:	ldr	x0, [x2, #8]
  46c420:	ldr	w1, [x0, #28]
  46c424:	cbz	w1, 46c304 <_obstack_memory_used@@Base+0xff14>
  46c428:	ldr	w1, [x0, #8]
  46c42c:	ldr	w0, [x19, #72]
  46c430:	sub	w0, w0, w1
  46c434:	str	w0, [x19, #72]
  46c438:	b	46c304 <_obstack_memory_used@@Base+0xff14>
  46c43c:	mov	x3, #0x0                   	// #0
  46c440:	b	46c408 <_obstack_memory_used@@Base+0x10018>
  46c444:	mov	w5, #0x0                   	// #0
  46c448:	b	46c3cc <_obstack_memory_used@@Base+0xffdc>
  46c44c:	nop
  46c450:	stp	x29, x30, [sp, #-224]!
  46c454:	mov	x29, sp
  46c458:	stp	x19, x20, [sp, #16]
  46c45c:	mov	x19, x0
  46c460:	cbz	x2, 46c4e8 <_obstack_memory_used@@Base+0x100f8>
  46c464:	stp	x21, x22, [sp, #32]
  46c468:	ldr	w22, [x0, #304]
  46c46c:	cbnz	w22, 46c4b0 <_obstack_memory_used@@Base+0x100c0>
  46c470:	ldr	w0, [x2]
  46c474:	mov	x20, x2
  46c478:	cmp	w0, #0x50
  46c47c:	b.ls	46c490 <_obstack_memory_used@@Base+0x100a0>  // b.plast
  46c480:	mov	w0, #0x1                   	// #1
  46c484:	ldp	x21, x22, [sp, #32]
  46c488:	str	w0, [x19, #304]
  46c48c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46c490:	mov	w21, w1
  46c494:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46c498:	add	x1, x1, #0xd2c
  46c49c:	stp	x23, x24, [sp, #48]
  46c4a0:	ldrh	w1, [x1, w0, uxtw #1]
  46c4a4:	adr	x2, 46c4b0 <_obstack_memory_used@@Base+0x100c0>
  46c4a8:	add	x1, x2, w1, sxth #2
  46c4ac:	br	x1
  46c4b0:	ldp	x21, x22, [sp, #32]
  46c4b4:	ldp	x19, x20, [sp, #16]
  46c4b8:	ldp	x29, x30, [sp], #224
  46c4bc:	ret
  46c4c0:	ldr	x0, [x20, #16]
  46c4c4:	ldr	w1, [x0]
  46c4c8:	cmp	w1, #0x3b
  46c4cc:	b.ne	46c4e0 <_obstack_memory_used@@Base+0x100f0>  // b.any
  46c4d0:	ldr	x0, [x0, #16]
  46c4d4:	ldr	w0, [x0]
  46c4d8:	cmp	w0, #0x3c
  46c4dc:	b.eq	46f9c8 <_obstack_memory_used@@Base+0x135d8>  // b.none
  46c4e0:	ldp	x21, x22, [sp, #32]
  46c4e4:	ldp	x23, x24, [sp, #48]
  46c4e8:	mov	w0, #0x1                   	// #1
  46c4ec:	str	w0, [x19, #304]
  46c4f0:	ldp	x19, x20, [sp, #16]
  46c4f4:	ldp	x29, x30, [sp], #224
  46c4f8:	ret
  46c4fc:	ldp	x1, x2, [x19, #288]
  46c500:	add	x0, sp, #0x60
  46c504:	stp	x2, x20, [sp, #96]
  46c508:	str	wzr, [sp, #112]
  46c50c:	str	x1, [sp, #120]
  46c510:	str	x0, [x19, #296]
  46c514:	ldr	x2, [x20, #8]
  46c518:	mov	x0, x19
  46c51c:	mov	w1, w21
  46c520:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c524:	ldr	w0, [sp, #112]
  46c528:	cbz	w0, 46e8d4 <_obstack_memory_used@@Base+0x124e4>
  46c52c:	ldr	x0, [sp, #96]
  46c530:	str	x0, [x19, #296]
  46c534:	cbz	w22, 46e108 <_obstack_memory_used@@Base+0x11d18>
  46c538:	ldp	x21, x22, [sp, #32]
  46c53c:	str	x23, [x19, #288]
  46c540:	ldp	x23, x24, [sp, #48]
  46c544:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46c548:	ldr	x4, [x19, #296]
  46c54c:	cbz	x4, 46c688 <_obstack_memory_used@@Base+0x10298>
  46c550:	mov	x1, x4
  46c554:	nop
  46c558:	ldr	w2, [x1, #16]
  46c55c:	cbnz	w2, 46c57c <_obstack_memory_used@@Base+0x1018c>
  46c560:	ldr	x2, [x1, #8]
  46c564:	ldr	w2, [x2]
  46c568:	sub	w3, w2, #0x19
  46c56c:	cmp	w3, #0x2
  46c570:	b.hi	46f528 <_obstack_memory_used@@Base+0x13138>  // b.pmore
  46c574:	cmp	w0, w2
  46c578:	b.eq	46f548 <_obstack_memory_used@@Base+0x13158>  // b.none
  46c57c:	ldr	x1, [x1]
  46c580:	cbnz	x1, 46c558 <_obstack_memory_used@@Base+0x10168>
  46c584:	b	46c688 <_obstack_memory_used@@Base+0x10298>
  46c588:	ldp	x23, x24, [sp, #48]
  46c58c:	b	46c480 <_obstack_memory_used@@Base+0x10090>
  46c590:	ldr	x2, [x20, #8]
  46c594:	mov	w22, #0x0                   	// #0
  46c598:	ldr	w1, [x2]
  46c59c:	cmp	w1, #0x27
  46c5a0:	b.eq	46edb0 <_obstack_memory_used@@Base+0x129c0>  // b.none
  46c5a4:	ldr	x1, [x19, #256]
  46c5a8:	add	x0, x1, #0x1
  46c5ac:	cmp	x1, #0xff
  46c5b0:	b.ne	46c5dc <_obstack_memory_used@@Base+0x101ec>  // b.any
  46c5b4:	ldp	x3, x2, [x19, #272]
  46c5b8:	strb	wzr, [x19, #255]
  46c5bc:	mov	x0, x19
  46c5c0:	blr	x3
  46c5c4:	ldr	x3, [x19, #320]
  46c5c8:	mov	x0, #0x1                   	// #1
  46c5cc:	mov	x1, #0x0                   	// #0
  46c5d0:	add	x3, x3, x0
  46c5d4:	ldr	x2, [x20, #8]
  46c5d8:	str	x3, [x19, #320]
  46c5dc:	str	x0, [x19, #256]
  46c5e0:	mov	w0, #0x28                  	// #40
  46c5e4:	strb	w0, [x19, x1]
  46c5e8:	mov	w1, w21
  46c5ec:	strb	w0, [x19, #264]
  46c5f0:	mov	x0, x19
  46c5f4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c5f8:	ldr	x1, [x19, #256]
  46c5fc:	cmp	x1, #0xff
  46c600:	b.eq	46f4a0 <_obstack_memory_used@@Base+0x130b0>  // b.none
  46c604:	add	x3, x1, #0x1
  46c608:	str	x3, [x19, #256]
  46c60c:	mov	w0, #0x29                  	// #41
  46c610:	strb	w0, [x19, x1]
  46c614:	strb	w0, [x19, #264]
  46c618:	ldr	w0, [x20]
  46c61c:	cmp	w0, #0x3e
  46c620:	b.eq	46f564 <_obstack_memory_used@@Base+0x13174>  // b.none
  46c624:	cmp	w22, #0x8
  46c628:	b.eq	46f344 <_obstack_memory_used@@Base+0x12f54>  // b.none
  46c62c:	ldr	x2, [x20, #16]
  46c630:	mov	w1, w21
  46c634:	mov	x0, x19
  46c638:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c63c:	ldp	x21, x22, [sp, #32]
  46c640:	ldp	x23, x24, [sp, #48]
  46c644:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46c648:	ldr	w2, [x19, #312]
  46c64c:	ldr	x0, [x20, #8]
  46c650:	ldr	w1, [x0]
  46c654:	cbnz	w2, 46c664 <_obstack_memory_used@@Base+0x10274>
  46c658:	cmp	w1, #0x5
  46c65c:	mov	w22, #0x0                   	// #0
  46c660:	b.eq	46f924 <_obstack_memory_used@@Base+0x13534>  // b.none
  46c664:	cmp	w1, #0x23
  46c668:	ldr	x4, [x19, #296]
  46c66c:	b.eq	46e97c <_obstack_memory_used@@Base+0x1258c>  // b.none
  46c670:	ldr	w2, [x20]
  46c674:	cmp	w2, w1
  46c678:	b.eq	46e97c <_obstack_memory_used@@Base+0x1258c>  // b.none
  46c67c:	cmp	w1, #0x24
  46c680:	b.eq	46e0e4 <_obstack_memory_used@@Base+0x11cf4>  // b.none
  46c684:	nop
  46c688:	ldr	x1, [x19, #288]
  46c68c:	add	x0, sp, #0x60
  46c690:	stp	x4, x20, [sp, #96]
  46c694:	str	wzr, [sp, #112]
  46c698:	str	x1, [sp, #120]
  46c69c:	str	x0, [x19, #296]
  46c6a0:	b	46c514 <_obstack_memory_used@@Base+0x10124>
  46c6a4:	ldr	x2, [x20, #8]
  46c6a8:	mov	w1, w21
  46c6ac:	mov	x0, x19
  46c6b0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c6b4:	tbz	w21, #2, 46f2e8 <_obstack_memory_used@@Base+0x12ef8>
  46c6b8:	ldr	x1, [x19, #256]
  46c6bc:	add	x0, x1, #0x1
  46c6c0:	cmp	x1, #0xff
  46c6c4:	b.ne	46c6ec <_obstack_memory_used@@Base+0x102fc>  // b.any
  46c6c8:	ldp	x3, x2, [x19, #272]
  46c6cc:	strb	wzr, [x19, #255]
  46c6d0:	mov	x0, x19
  46c6d4:	blr	x3
  46c6d8:	ldr	x2, [x19, #320]
  46c6dc:	mov	x0, #0x1                   	// #1
  46c6e0:	mov	x1, #0x0                   	// #0
  46c6e4:	add	x2, x2, x0
  46c6e8:	str	x2, [x19, #320]
  46c6ec:	str	x0, [x19, #256]
  46c6f0:	mov	w0, #0x2e                  	// #46
  46c6f4:	strb	w0, [x19, x1]
  46c6f8:	strb	w0, [x19, #264]
  46c6fc:	ldr	x23, [x20, #16]
  46c700:	ldr	w0, [x23]
  46c704:	cmp	w0, #0x47
  46c708:	b.eq	46f5a0 <_obstack_memory_used@@Base+0x131b0>  // b.none
  46c70c:	mov	x2, x23
  46c710:	mov	w1, w21
  46c714:	mov	x0, x19
  46c718:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c71c:	ldp	x21, x22, [sp, #32]
  46c720:	ldp	x23, x24, [sp, #48]
  46c724:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46c728:	ldp	x3, x4, [x19, #288]
  46c72c:	add	x0, sp, #0x60
  46c730:	ldr	x2, [x20, #16]
  46c734:	str	x0, [x19, #296]
  46c738:	mov	w1, w21
  46c73c:	mov	x0, x19
  46c740:	stp	x4, x20, [sp, #96]
  46c744:	str	wzr, [sp, #112]
  46c748:	str	x3, [sp, #120]
  46c74c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c750:	ldr	w0, [sp, #112]
  46c754:	cbz	w0, 46f264 <_obstack_memory_used@@Base+0x12e74>
  46c758:	ldr	x0, [sp, #96]
  46c75c:	ldp	x21, x22, [sp, #32]
  46c760:	ldp	x23, x24, [sp, #48]
  46c764:	str	x0, [x19, #296]
  46c768:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46c76c:	ldr	x2, [x20, #8]
  46c770:	cbz	x2, 46c780 <_obstack_memory_used@@Base+0x10390>
  46c774:	mov	w1, w21
  46c778:	mov	x0, x19
  46c77c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c780:	ldr	x0, [x20, #16]
  46c784:	cbz	x0, 46f510 <_obstack_memory_used@@Base+0x13120>
  46c788:	ldr	x22, [x19, #256]
  46c78c:	cmp	x22, #0xfd
  46c790:	b.ls	46c7bc <_obstack_memory_used@@Base+0x103cc>  // b.plast
  46c794:	strb	wzr, [x19, x22]
  46c798:	mov	x1, x22
  46c79c:	mov	x0, x19
  46c7a0:	mov	x22, #0x0                   	// #0
  46c7a4:	ldp	x3, x2, [x19, #272]
  46c7a8:	blr	x3
  46c7ac:	str	xzr, [x19, #256]
  46c7b0:	ldr	x0, [x19, #320]
  46c7b4:	add	x0, x0, #0x1
  46c7b8:	str	x0, [x19, #320]
  46c7bc:	mov	w23, #0x2c                  	// #44
  46c7c0:	mov	x24, #0x0                   	// #0
  46c7c4:	b	46c7e8 <_obstack_memory_used@@Base+0x103f8>
  46c7c8:	mov	x0, x22
  46c7cc:	add	x22, x22, #0x1
  46c7d0:	str	x22, [x19, #256]
  46c7d4:	strb	w23, [x19, x0]
  46c7d8:	strb	w23, [x19, #264]
  46c7dc:	mov	w23, #0x20                  	// #32
  46c7e0:	cbnz	x24, 46e91c <_obstack_memory_used@@Base+0x1252c>
  46c7e4:	mov	x24, #0x1                   	// #1
  46c7e8:	cmp	x22, #0xff
  46c7ec:	b.ne	46c7c8 <_obstack_memory_used@@Base+0x103d8>  // b.any
  46c7f0:	ldp	x3, x2, [x19, #272]
  46c7f4:	strb	wzr, [x19, #255]
  46c7f8:	mov	x1, x22
  46c7fc:	mov	x0, x19
  46c800:	mov	x22, #0x1                   	// #1
  46c804:	blr	x3
  46c808:	ldr	x1, [x19, #320]
  46c80c:	mov	x0, #0x0                   	// #0
  46c810:	add	x1, x1, x22
  46c814:	str	x1, [x19, #320]
  46c818:	b	46c7d0 <_obstack_memory_used@@Base+0x103e0>
  46c81c:	ldr	x2, [x20, #16]
  46c820:	mov	w1, w21
  46c824:	mov	x0, x19
  46c828:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46c82c:	ldp	x21, x22, [sp, #32]
  46c830:	ldp	x23, x24, [sp, #48]
  46c834:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46c838:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c83c:	add	x24, x24, #0x188
  46c840:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c844:	add	x24, x24, #0x1c
  46c848:	add	x22, x22, #0x189
  46c84c:	mov	w23, #0x67                  	// #103
  46c850:	ldr	x1, [x19, #256]
  46c854:	b	46c878 <_obstack_memory_used@@Base+0x10488>
  46c858:	mov	x0, x1
  46c85c:	add	x1, x1, #0x1
  46c860:	str	x1, [x19, #256]
  46c864:	cmp	x22, x24
  46c868:	strb	w23, [x19, x0]
  46c86c:	strb	w23, [x19, #264]
  46c870:	b.eq	46e51c <_obstack_memory_used@@Base+0x1212c>  // b.none
  46c874:	ldrb	w23, [x22], #1
  46c878:	cmp	x1, #0xff
  46c87c:	b.ne	46c858 <_obstack_memory_used@@Base+0x10468>  // b.any
  46c880:	ldp	x3, x2, [x19, #272]
  46c884:	strb	wzr, [x19, #255]
  46c888:	mov	x0, x19
  46c88c:	blr	x3
  46c890:	ldr	x2, [x19, #320]
  46c894:	mov	x1, #0x1                   	// #1
  46c898:	mov	x0, #0x0                   	// #0
  46c89c:	add	x2, x2, x1
  46c8a0:	str	x2, [x19, #320]
  46c8a4:	b	46c860 <_obstack_memory_used@@Base+0x10470>
  46c8a8:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c8ac:	add	x22, x22, #0x1a8
  46c8b0:	add	x24, x22, #0x8
  46c8b4:	mov	w23, #0x7b                  	// #123
  46c8b8:	ldr	x1, [x19, #256]
  46c8bc:	b	46c8e4 <_obstack_memory_used@@Base+0x104f4>
  46c8c0:	mov	x0, x1
  46c8c4:	add	x1, x1, #0x1
  46c8c8:	str	x1, [x19, #256]
  46c8cc:	add	x22, x22, #0x1
  46c8d0:	strb	w23, [x19, x0]
  46c8d4:	cmp	x24, x22
  46c8d8:	strb	w23, [x19, #264]
  46c8dc:	b.eq	46e538 <_obstack_memory_used@@Base+0x12148>  // b.none
  46c8e0:	ldrb	w23, [x22]
  46c8e4:	cmp	x1, #0xff
  46c8e8:	b.ne	46c8c0 <_obstack_memory_used@@Base+0x104d0>  // b.any
  46c8ec:	ldp	x3, x2, [x19, #272]
  46c8f0:	strb	wzr, [x19, #255]
  46c8f4:	mov	x0, x19
  46c8f8:	blr	x3
  46c8fc:	ldr	x2, [x19, #320]
  46c900:	mov	x1, #0x1                   	// #1
  46c904:	mov	x0, #0x0                   	// #0
  46c908:	add	x2, x2, x1
  46c90c:	str	x2, [x19, #320]
  46c910:	b	46c8c8 <_obstack_memory_used@@Base+0x104d8>
  46c914:	adrp	x23, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c918:	add	x23, x23, #0x1b8
  46c91c:	adrp	x21, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c920:	add	x23, x23, #0xe
  46c924:	add	x21, x21, #0x1b9
  46c928:	mov	w22, #0x7b                  	// #123
  46c92c:	ldr	x1, [x19, #256]
  46c930:	b	46c954 <_obstack_memory_used@@Base+0x10564>
  46c934:	mov	x0, x1
  46c938:	add	x1, x1, #0x1
  46c93c:	str	x1, [x19, #256]
  46c940:	cmp	x23, x21
  46c944:	strb	w22, [x19, x0]
  46c948:	strb	w22, [x19, #264]
  46c94c:	b.eq	46e42c <_obstack_memory_used@@Base+0x1203c>  // b.none
  46c950:	ldrb	w22, [x21], #1
  46c954:	cmp	x1, #0xff
  46c958:	b.ne	46c934 <_obstack_memory_used@@Base+0x10544>  // b.any
  46c95c:	ldp	x3, x2, [x19, #272]
  46c960:	strb	wzr, [x19, #255]
  46c964:	mov	x0, x19
  46c968:	blr	x3
  46c96c:	ldr	x2, [x19, #320]
  46c970:	mov	x1, #0x1                   	// #1
  46c974:	mov	x0, #0x0                   	// #0
  46c978:	add	x2, x2, x1
  46c97c:	str	x2, [x19, #320]
  46c980:	b	46c93c <_obstack_memory_used@@Base+0x1054c>
  46c984:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c988:	add	x24, x24, #0x80
  46c98c:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46c990:	add	x24, x24, #0x16
  46c994:	add	x22, x22, #0x81
  46c998:	mov	w23, #0x74                  	// #116
  46c99c:	ldr	x1, [x19, #256]
  46c9a0:	b	46c9c4 <_obstack_memory_used@@Base+0x105d4>
  46c9a4:	mov	x0, x1
  46c9a8:	add	x1, x1, #0x1
  46c9ac:	str	x1, [x19, #256]
  46c9b0:	cmp	x24, x22
  46c9b4:	strb	w23, [x19, x0]
  46c9b8:	strb	w23, [x19, #264]
  46c9bc:	b.eq	46e500 <_obstack_memory_used@@Base+0x12110>  // b.none
  46c9c0:	ldrb	w23, [x22], #1
  46c9c4:	cmp	x1, #0xff
  46c9c8:	b.ne	46c9a4 <_obstack_memory_used@@Base+0x105b4>  // b.any
  46c9cc:	ldp	x3, x2, [x19, #272]
  46c9d0:	strb	wzr, [x19, #255]
  46c9d4:	mov	x0, x19
  46c9d8:	blr	x3
  46c9dc:	ldr	x2, [x19, #320]
  46c9e0:	mov	x1, #0x1                   	// #1
  46c9e4:	mov	x0, #0x0                   	// #0
  46c9e8:	add	x2, x2, x1
  46c9ec:	str	x2, [x19, #320]
  46c9f0:	b	46c9ac <_obstack_memory_used@@Base+0x105bc>
  46c9f4:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46c9f8:	add	x24, x24, #0xef8
  46c9fc:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46ca00:	add	x24, x24, #0x1e
  46ca04:	add	x22, x22, #0xef9
  46ca08:	mov	w23, #0x74                  	// #116
  46ca0c:	ldr	x1, [x19, #256]
  46ca10:	b	46ca34 <_obstack_memory_used@@Base+0x10644>
  46ca14:	mov	x0, x1
  46ca18:	add	x1, x1, #0x1
  46ca1c:	str	x1, [x19, #256]
  46ca20:	cmp	x24, x22
  46ca24:	strb	w23, [x19, x0]
  46ca28:	strb	w23, [x19, #264]
  46ca2c:	b.eq	46e410 <_obstack_memory_used@@Base+0x12020>  // b.none
  46ca30:	ldrb	w23, [x22], #1
  46ca34:	cmp	x1, #0xff
  46ca38:	b.ne	46ca14 <_obstack_memory_used@@Base+0x10624>  // b.any
  46ca3c:	ldp	x3, x2, [x19, #272]
  46ca40:	strb	wzr, [x19, #255]
  46ca44:	mov	x0, x19
  46ca48:	blr	x3
  46ca4c:	ldr	x2, [x19, #320]
  46ca50:	mov	x1, #0x1                   	// #1
  46ca54:	mov	x0, #0x0                   	// #0
  46ca58:	add	x2, x2, x1
  46ca5c:	str	x2, [x19, #320]
  46ca60:	b	46ca1c <_obstack_memory_used@@Base+0x1062c>
  46ca64:	ldp	x2, x20, [x20, #8]
  46ca68:	cbz	x2, 46ca78 <_obstack_memory_used@@Base+0x10688>
  46ca6c:	mov	w1, w21
  46ca70:	mov	x0, x19
  46ca74:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46ca78:	ldr	x1, [x19, #256]
  46ca7c:	add	x0, x1, #0x1
  46ca80:	cmp	x1, #0xff
  46ca84:	b.ne	46caac <_obstack_memory_used@@Base+0x106bc>  // b.any
  46ca88:	ldp	x3, x2, [x19, #272]
  46ca8c:	strb	wzr, [x19, #255]
  46ca90:	mov	x0, x19
  46ca94:	blr	x3
  46ca98:	ldr	x2, [x19, #320]
  46ca9c:	mov	x0, #0x1                   	// #1
  46caa0:	mov	x1, #0x0                   	// #0
  46caa4:	add	x2, x2, x0
  46caa8:	str	x2, [x19, #320]
  46caac:	str	x0, [x19, #256]
  46cab0:	mov	w0, #0x7b                  	// #123
  46cab4:	strb	w0, [x19, x1]
  46cab8:	mov	x2, x20
  46cabc:	strb	w0, [x19, #264]
  46cac0:	mov	w1, w21
  46cac4:	mov	x0, x19
  46cac8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46cacc:	ldr	x1, [x19, #256]
  46cad0:	add	x0, x1, #0x1
  46cad4:	cmp	x1, #0xff
  46cad8:	b.ne	46cb00 <_obstack_memory_used@@Base+0x10710>  // b.any
  46cadc:	ldp	x3, x2, [x19, #272]
  46cae0:	strb	wzr, [x19, #255]
  46cae4:	mov	x0, x19
  46cae8:	blr	x3
  46caec:	ldr	x2, [x19, #320]
  46caf0:	mov	x0, #0x1                   	// #1
  46caf4:	mov	x1, #0x0                   	// #0
  46caf8:	add	x2, x2, x0
  46cafc:	str	x2, [x19, #320]
  46cb00:	str	x0, [x19, #256]
  46cb04:	mov	w0, #0x7d                  	// #125
  46cb08:	strb	w0, [x19, x1]
  46cb0c:	strb	w0, [x19, #264]
  46cb10:	ldp	x21, x22, [sp, #32]
  46cb14:	ldp	x23, x24, [sp, #48]
  46cb18:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46cb1c:	ldr	x22, [x20, #8]
  46cb20:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46cb24:	add	x20, x20, #0xd0
  46cb28:	mov	w21, #0x6f                  	// #111
  46cb2c:	add	x24, x20, #0x8
  46cb30:	ldr	w23, [x22, #16]
  46cb34:	ldr	x1, [x19, #256]
  46cb38:	b	46cb60 <_obstack_memory_used@@Base+0x10770>
  46cb3c:	mov	x0, x1
  46cb40:	add	x1, x1, #0x1
  46cb44:	str	x1, [x19, #256]
  46cb48:	add	x20, x20, #0x1
  46cb4c:	strb	w21, [x19, x0]
  46cb50:	cmp	x24, x20
  46cb54:	strb	w21, [x19, #264]
  46cb58:	b.eq	46e334 <_obstack_memory_used@@Base+0x11f44>  // b.none
  46cb5c:	ldrb	w21, [x20]
  46cb60:	cmp	x1, #0xff
  46cb64:	b.ne	46cb3c <_obstack_memory_used@@Base+0x1074c>  // b.any
  46cb68:	ldp	x3, x2, [x19, #272]
  46cb6c:	strb	wzr, [x19, #255]
  46cb70:	mov	x0, x19
  46cb74:	blr	x3
  46cb78:	ldr	x2, [x19, #320]
  46cb7c:	mov	x1, #0x1                   	// #1
  46cb80:	mov	x0, #0x0                   	// #0
  46cb84:	add	x2, x2, x1
  46cb88:	str	x2, [x19, #320]
  46cb8c:	b	46cb44 <_obstack_memory_used@@Base+0x10754>
  46cb90:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46cb94:	add	x22, x22, #0xe0
  46cb98:	add	x24, x22, #0x9
  46cb9c:	mov	w23, #0x6f                  	// #111
  46cba0:	ldr	x1, [x19, #256]
  46cba4:	b	46cbcc <_obstack_memory_used@@Base+0x107dc>
  46cba8:	mov	x0, x1
  46cbac:	add	x1, x1, #0x1
  46cbb0:	str	x1, [x19, #256]
  46cbb4:	add	x22, x22, #0x1
  46cbb8:	strb	w23, [x19, x0]
  46cbbc:	cmp	x22, x24
  46cbc0:	strb	w23, [x19, #264]
  46cbc4:	b.eq	46e174 <_obstack_memory_used@@Base+0x11d84>  // b.none
  46cbc8:	ldrb	w23, [x22]
  46cbcc:	cmp	x1, #0xff
  46cbd0:	b.ne	46cba8 <_obstack_memory_used@@Base+0x107b8>  // b.any
  46cbd4:	ldp	x3, x2, [x19, #272]
  46cbd8:	strb	wzr, [x19, #255]
  46cbdc:	mov	x0, x19
  46cbe0:	blr	x3
  46cbe4:	ldr	x2, [x19, #320]
  46cbe8:	mov	x1, #0x1                   	// #1
  46cbec:	mov	x0, #0x0                   	// #0
  46cbf0:	add	x2, x2, x1
  46cbf4:	str	x2, [x19, #320]
  46cbf8:	b	46cbb0 <_obstack_memory_used@@Base+0x107c0>
  46cbfc:	ldr	x2, [x20, #8]
  46cc00:	mov	w1, w21
  46cc04:	mov	x0, x19
  46cc08:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46cc0c:	add	x22, x22, #0x1c8
  46cc10:	mov	w23, #0x20                  	// #32
  46cc14:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46cc18:	add	x24, x22, #0x8
  46cc1c:	ldr	x1, [x19, #256]
  46cc20:	b	46cc48 <_obstack_memory_used@@Base+0x10858>
  46cc24:	mov	x0, x1
  46cc28:	add	x1, x1, #0x1
  46cc2c:	str	x1, [x19, #256]
  46cc30:	add	x22, x22, #0x1
  46cc34:	strb	w23, [x19, x0]
  46cc38:	cmp	x24, x22
  46cc3c:	strb	w23, [x19, #264]
  46cc40:	b.eq	46e114 <_obstack_memory_used@@Base+0x11d24>  // b.none
  46cc44:	ldrb	w23, [x22]
  46cc48:	cmp	x1, #0xff
  46cc4c:	b.ne	46cc24 <_obstack_memory_used@@Base+0x10834>  // b.any
  46cc50:	ldp	x3, x2, [x19, #272]
  46cc54:	strb	wzr, [x19, #255]
  46cc58:	mov	x0, x19
  46cc5c:	blr	x3
  46cc60:	ldr	x2, [x19, #320]
  46cc64:	mov	x1, #0x1                   	// #1
  46cc68:	mov	x0, #0x0                   	// #0
  46cc6c:	add	x2, x2, x1
  46cc70:	str	x2, [x19, #320]
  46cc74:	b	46cc2c <_obstack_memory_used@@Base+0x1083c>
  46cc78:	ldr	x2, [x20, #8]
  46cc7c:	mov	w1, w21
  46cc80:	mov	x0, x19
  46cc84:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46cc88:	ldp	x21, x22, [sp, #32]
  46cc8c:	ldp	x23, x24, [sp, #48]
  46cc90:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46cc94:	and	w22, w21, #0xffffff9f
  46cc98:	ldr	x3, [x19, #296]
  46cc9c:	tbnz	w21, #5, 46f470 <_obstack_memory_used@@Base+0x13080>
  46cca0:	ldr	x2, [x20, #8]
  46cca4:	cbz	x2, 46ccac <_obstack_memory_used@@Base+0x108bc>
  46cca8:	tbz	w21, #6, 46f7a4 <_obstack_memory_used@@Base+0x133b4>
  46ccac:	mov	w1, w22
  46ccb0:	add	x2, x20, #0x10
  46ccb4:	mov	x0, x19
  46ccb8:	bl	470af8 <_obstack_memory_used@@Base+0x14708>
  46ccbc:	ldp	x21, x22, [sp, #32]
  46ccc0:	ldp	x23, x24, [sp, #48]
  46ccc4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ccc8:	ldr	x23, [x20, #8]
  46cccc:	ldr	x1, [x19, #256]
  46ccd0:	cbz	x23, 46eb3c <_obstack_memory_used@@Base+0x1274c>
  46ccd4:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46ccd8:	add	x20, x20, #0x158
  46ccdc:	add	x22, x20, #0x6
  46cce0:	mov	w21, #0x7b                  	// #123
  46cce4:	b	46cd0c <_obstack_memory_used@@Base+0x1091c>
  46cce8:	mov	x0, x1
  46ccec:	add	x1, x1, #0x1
  46ccf0:	str	x1, [x19, #256]
  46ccf4:	add	x20, x20, #0x1
  46ccf8:	strb	w21, [x19, x0]
  46ccfc:	cmp	x22, x20
  46cd00:	strb	w21, [x19, #264]
  46cd04:	b.eq	46ebb0 <_obstack_memory_used@@Base+0x127c0>  // b.none
  46cd08:	ldrb	w21, [x20]
  46cd0c:	cmp	x1, #0xff
  46cd10:	b.ne	46cce8 <_obstack_memory_used@@Base+0x108f8>  // b.any
  46cd14:	ldp	x3, x2, [x19, #272]
  46cd18:	strb	wzr, [x19, #255]
  46cd1c:	mov	x0, x19
  46cd20:	blr	x3
  46cd24:	ldr	x2, [x19, #320]
  46cd28:	mov	x1, #0x1                   	// #1
  46cd2c:	mov	x0, #0x0                   	// #0
  46cd30:	add	x2, x2, x1
  46cd34:	str	x2, [x19, #320]
  46cd38:	b	46ccf0 <_obstack_memory_used@@Base+0x10900>
  46cd3c:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46cd40:	add	x24, x24, #0x68
  46cd44:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46cd48:	add	x24, x24, #0x11
  46cd4c:	add	x22, x22, #0x69
  46cd50:	mov	w23, #0x68                  	// #104
  46cd54:	ldr	x1, [x19, #256]
  46cd58:	b	46cd7c <_obstack_memory_used@@Base+0x1098c>
  46cd5c:	mov	x0, x1
  46cd60:	add	x1, x1, #0x1
  46cd64:	str	x1, [x19, #256]
  46cd68:	cmp	x22, x24
  46cd6c:	strb	w23, [x19, x0]
  46cd70:	strb	w23, [x19, #264]
  46cd74:	b.eq	46e7dc <_obstack_memory_used@@Base+0x123ec>  // b.none
  46cd78:	ldrb	w23, [x22], #1
  46cd7c:	cmp	x1, #0xff
  46cd80:	b.ne	46cd5c <_obstack_memory_used@@Base+0x1096c>  // b.any
  46cd84:	ldp	x3, x2, [x19, #272]
  46cd88:	strb	wzr, [x19, #255]
  46cd8c:	mov	x0, x19
  46cd90:	blr	x3
  46cd94:	ldr	x2, [x19, #320]
  46cd98:	mov	x1, #0x1                   	// #1
  46cd9c:	mov	x0, #0x0                   	// #0
  46cda0:	add	x2, x2, x1
  46cda4:	str	x2, [x19, #320]
  46cda8:	b	46cd64 <_obstack_memory_used@@Base+0x10974>
  46cdac:	ldrsw	x22, [x20, #16]
  46cdb0:	ldr	x20, [x20, #8]
  46cdb4:	cbz	x22, 46fca4 <_obstack_memory_used@@Base+0x138b4>
  46cdb8:	add	x22, x20, x22
  46cdbc:	ldr	x1, [x19, #256]
  46cdc0:	b	46cde4 <_obstack_memory_used@@Base+0x109f4>
  46cdc4:	mov	x0, x1
  46cdc8:	add	x1, x1, #0x1
  46cdcc:	str	x1, [x19, #256]
  46cdd0:	add	x20, x20, #0x1
  46cdd4:	strb	w21, [x19, x0]
  46cdd8:	cmp	x22, x20
  46cddc:	strb	w21, [x19, #264]
  46cde0:	b.eq	46e8e8 <_obstack_memory_used@@Base+0x124f8>  // b.none
  46cde4:	ldrb	w21, [x20]
  46cde8:	cmp	x1, #0xff
  46cdec:	b.ne	46cdc4 <_obstack_memory_used@@Base+0x109d4>  // b.any
  46cdf0:	ldp	x3, x2, [x19, #272]
  46cdf4:	strb	wzr, [x19, #255]
  46cdf8:	mov	x0, x19
  46cdfc:	blr	x3
  46ce00:	ldr	x2, [x19, #320]
  46ce04:	mov	x1, #0x1                   	// #1
  46ce08:	mov	x0, #0x0                   	// #0
  46ce0c:	add	x2, x2, x1
  46ce10:	str	x2, [x19, #320]
  46ce14:	b	46cdcc <_obstack_memory_used@@Base+0x109dc>
  46ce18:	ldp	x1, x5, [x19, #288]
  46ce1c:	add	x23, sp, #0x60
  46ce20:	stp	x5, x20, [sp, #96]
  46ce24:	mov	w22, #0x1                   	// #1
  46ce28:	mov	w6, w22
  46ce2c:	str	wzr, [sp, #112]
  46ce30:	str	x1, [sp, #120]
  46ce34:	str	x23, [x19, #296]
  46ce38:	mov	x24, x5
  46ce3c:	mov	x0, x5
  46ce40:	mov	x5, x23
  46ce44:	cbnz	x24, 46ce90 <_obstack_memory_used@@Base+0x10aa0>
  46ce48:	b	46ffd4 <_obstack_memory_used@@Base+0x13be4>
  46ce4c:	ldr	w1, [x0, #16]
  46ce50:	cbnz	w1, 46ce88 <_obstack_memory_used@@Base+0x10a98>
  46ce54:	cmp	w22, #0x3
  46ce58:	b.hi	46f790 <_obstack_memory_used@@Base+0x133a0>  // b.pmore
  46ce5c:	ubfiz	x1, x22, #5, #32
  46ce60:	add	w22, w22, #0x1
  46ce64:	add	x4, x23, x1
  46ce68:	ldp	x2, x3, [x0]
  46ce6c:	stp	x2, x3, [x4]
  46ce70:	ldp	x2, x3, [x0, #16]
  46ce74:	stp	x2, x3, [x4, #16]
  46ce78:	str	x5, [x23, x1]
  46ce7c:	mov	x5, x4
  46ce80:	str	x4, [x19, #296]
  46ce84:	str	w6, [x0, #16]
  46ce88:	ldr	x0, [x0]
  46ce8c:	cbz	x0, 46cea4 <_obstack_memory_used@@Base+0x10ab4>
  46ce90:	ldr	x1, [x0, #8]
  46ce94:	ldr	w1, [x1]
  46ce98:	sub	w1, w1, #0x19
  46ce9c:	cmp	w1, #0x2
  46cea0:	b.ls	46ce4c <_obstack_memory_used@@Base+0x10a5c>  // b.plast
  46cea4:	ldr	x2, [x20, #16]
  46cea8:	mov	x0, x19
  46ceac:	mov	w1, w21
  46ceb0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46ceb4:	str	x24, [x19, #296]
  46ceb8:	ldr	w0, [sp, #112]
  46cebc:	cbnz	w0, 46f51c <_obstack_memory_used@@Base+0x1312c>
  46cec0:	ubfiz	x0, x22, #5, #32
  46cec4:	cmp	w22, #0x1
  46cec8:	add	x23, x23, x0
  46cecc:	b.eq	46cef0 <_obstack_memory_used@@Base+0x10b00>  // b.none
  46ced0:	ldur	x2, [x23, #-24]
  46ced4:	sub	w22, w22, #0x1
  46ced8:	mov	w1, w21
  46cedc:	mov	x0, x19
  46cee0:	sub	x23, x23, #0x20
  46cee4:	bl	4702f8 <_obstack_memory_used@@Base+0x13f08>
  46cee8:	cmp	w22, #0x1
  46ceec:	b.ne	46ced0 <_obstack_memory_used@@Base+0x10ae0>  // b.any
  46cef0:	ldr	x3, [x19, #296]
  46cef4:	mov	w1, w21
  46cef8:	add	x2, x20, #0x8
  46cefc:	mov	x0, x19
  46cf00:	bl	471178 <_obstack_memory_used@@Base+0x14d88>
  46cf04:	ldp	x21, x22, [sp, #32]
  46cf08:	ldp	x23, x24, [sp, #48]
  46cf0c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46cf10:	ldrsh	w0, [x20, #18]
  46cf14:	cbnz	w0, 46f278 <_obstack_memory_used@@Base+0x12e88>
  46cf18:	ldr	x2, [x20, #8]
  46cf1c:	adrp	x0, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  46cf20:	add	x0, x0, #0xa18
  46cf24:	add	x0, x0, #0x288
  46cf28:	ldr	x1, [x2, #8]
  46cf2c:	cmp	x1, x0
  46cf30:	b.eq	46ed6c <_obstack_memory_used@@Base+0x1297c>  // b.none
  46cf34:	mov	w1, w21
  46cf38:	mov	x0, x19
  46cf3c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46cf40:	ldr	x0, [x19, #256]
  46cf44:	add	x1, x0, #0x1
  46cf48:	cmp	x0, #0xff
  46cf4c:	b.ne	46cf78 <_obstack_memory_used@@Base+0x10b88>  // b.any
  46cf50:	ldp	x3, x2, [x19, #272]
  46cf54:	strb	wzr, [x19, #255]
  46cf58:	mov	x1, x0
  46cf5c:	mov	x0, x19
  46cf60:	blr	x3
  46cf64:	ldr	x2, [x19, #320]
  46cf68:	mov	x1, #0x1                   	// #1
  46cf6c:	mov	x0, #0x0                   	// #0
  46cf70:	add	x2, x2, x1
  46cf74:	str	x2, [x19, #320]
  46cf78:	str	x1, [x19, #256]
  46cf7c:	mov	w2, #0x20                  	// #32
  46cf80:	strb	w2, [x19, x0]
  46cf84:	strb	w2, [x19, #264]
  46cf88:	ldrsh	w0, [x20, #16]
  46cf8c:	cbnz	w0, 46ec80 <_obstack_memory_used@@Base+0x12890>
  46cf90:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46cf94:	add	x20, x20, #0xc0
  46cf98:	add	x22, x20, #0x6
  46cf9c:	mov	w21, #0x5f                  	// #95
  46cfa0:	b	46cfc8 <_obstack_memory_used@@Base+0x10bd8>
  46cfa4:	mov	x0, x1
  46cfa8:	add	x1, x1, #0x1
  46cfac:	str	x1, [x19, #256]
  46cfb0:	add	x20, x20, #0x1
  46cfb4:	strb	w21, [x19, x0]
  46cfb8:	cmp	x20, x22
  46cfbc:	strb	w21, [x19, #264]
  46cfc0:	b.eq	46ecf4 <_obstack_memory_used@@Base+0x12904>  // b.none
  46cfc4:	ldrb	w21, [x20]
  46cfc8:	cmp	x1, #0xff
  46cfcc:	b.ne	46cfa4 <_obstack_memory_used@@Base+0x10bb4>  // b.any
  46cfd0:	ldp	x3, x2, [x19, #272]
  46cfd4:	strb	wzr, [x19, #255]
  46cfd8:	mov	x0, x19
  46cfdc:	blr	x3
  46cfe0:	ldr	x2, [x19, #320]
  46cfe4:	mov	x1, #0x1                   	// #1
  46cfe8:	mov	x0, #0x0                   	// #0
  46cfec:	add	x2, x2, x1
  46cff0:	str	x2, [x19, #320]
  46cff4:	b	46cfac <_obstack_memory_used@@Base+0x10bbc>
  46cff8:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46cffc:	add	x24, x24, #0xfa0
  46d000:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d004:	add	x24, x24, #0x15
  46d008:	add	x22, x22, #0xfa1
  46d00c:	mov	w23, #0x6e                  	// #110
  46d010:	ldr	x1, [x19, #256]
  46d014:	b	46d038 <_obstack_memory_used@@Base+0x10c48>
  46d018:	mov	x0, x1
  46d01c:	add	x1, x1, #0x1
  46d020:	str	x1, [x19, #256]
  46d024:	cmp	x24, x22
  46d028:	strb	w23, [x19, x0]
  46d02c:	strb	w23, [x19, #264]
  46d030:	b.eq	46e7f8 <_obstack_memory_used@@Base+0x12408>  // b.none
  46d034:	ldrb	w23, [x22], #1
  46d038:	cmp	x1, #0xff
  46d03c:	b.ne	46d018 <_obstack_memory_used@@Base+0x10c28>  // b.any
  46d040:	ldp	x3, x2, [x19, #272]
  46d044:	strb	wzr, [x19, #255]
  46d048:	mov	x0, x19
  46d04c:	blr	x3
  46d050:	ldr	x2, [x19, #320]
  46d054:	mov	x1, #0x1                   	// #1
  46d058:	mov	x0, #0x0                   	// #0
  46d05c:	add	x2, x2, x1
  46d060:	str	x2, [x19, #320]
  46d064:	b	46d020 <_obstack_memory_used@@Base+0x10c30>
  46d068:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d06c:	add	x24, x24, #0xfb8
  46d070:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d074:	add	x24, x24, #0x11
  46d078:	add	x22, x22, #0xfb9
  46d07c:	mov	w23, #0x76                  	// #118
  46d080:	ldr	x1, [x19, #256]
  46d084:	b	46d0a8 <_obstack_memory_used@@Base+0x10cb8>
  46d088:	mov	x0, x1
  46d08c:	add	x1, x1, #0x1
  46d090:	str	x1, [x19, #256]
  46d094:	cmp	x24, x22
  46d098:	strb	w23, [x19, x0]
  46d09c:	strb	w23, [x19, #264]
  46d0a0:	b.eq	46e814 <_obstack_memory_used@@Base+0x12424>  // b.none
  46d0a4:	ldrb	w23, [x22], #1
  46d0a8:	cmp	x1, #0xff
  46d0ac:	b.ne	46d088 <_obstack_memory_used@@Base+0x10c98>  // b.any
  46d0b0:	ldp	x3, x2, [x19, #272]
  46d0b4:	strb	wzr, [x19, #255]
  46d0b8:	mov	x0, x19
  46d0bc:	blr	x3
  46d0c0:	ldr	x2, [x19, #320]
  46d0c4:	mov	x1, #0x1                   	// #1
  46d0c8:	mov	x0, #0x0                   	// #0
  46d0cc:	add	x2, x2, x1
  46d0d0:	str	x2, [x19, #320]
  46d0d4:	b	46d090 <_obstack_memory_used@@Base+0x10ca0>
  46d0d8:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d0dc:	add	x24, x24, #0xfd0
  46d0e0:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d0e4:	add	x24, x24, #0x1a
  46d0e8:	add	x22, x22, #0xfd1
  46d0ec:	mov	w23, #0x63                  	// #99
  46d0f0:	ldr	x1, [x19, #256]
  46d0f4:	b	46d118 <_obstack_memory_used@@Base+0x10d28>
  46d0f8:	mov	x0, x1
  46d0fc:	add	x1, x1, #0x1
  46d100:	str	x1, [x19, #256]
  46d104:	cmp	x24, x22
  46d108:	strb	w23, [x19, x0]
  46d10c:	strb	w23, [x19, #264]
  46d110:	b.eq	46e830 <_obstack_memory_used@@Base+0x12440>  // b.none
  46d114:	ldrb	w23, [x22], #1
  46d118:	cmp	x1, #0xff
  46d11c:	b.ne	46d0f8 <_obstack_memory_used@@Base+0x10d08>  // b.any
  46d120:	ldp	x3, x2, [x19, #272]
  46d124:	strb	wzr, [x19, #255]
  46d128:	mov	x0, x19
  46d12c:	blr	x3
  46d130:	ldr	x2, [x19, #320]
  46d134:	mov	x1, #0x1                   	// #1
  46d138:	mov	x0, #0x0                   	// #0
  46d13c:	add	x2, x2, x1
  46d140:	str	x2, [x19, #320]
  46d144:	b	46d100 <_obstack_memory_used@@Base+0x10d10>
  46d148:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d14c:	add	x24, x24, #0xff0
  46d150:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d154:	add	x24, x24, #0xf
  46d158:	add	x22, x22, #0xff1
  46d15c:	mov	w23, #0x6a                  	// #106
  46d160:	ldr	x1, [x19, #256]
  46d164:	b	46d188 <_obstack_memory_used@@Base+0x10d98>
  46d168:	mov	x0, x1
  46d16c:	add	x1, x1, #0x1
  46d170:	str	x1, [x19, #256]
  46d174:	cmp	x22, x24
  46d178:	strb	w23, [x19, x0]
  46d17c:	strb	w23, [x19, #264]
  46d180:	b.eq	46e190 <_obstack_memory_used@@Base+0x11da0>  // b.none
  46d184:	ldrb	w23, [x22], #1
  46d188:	cmp	x1, #0xff
  46d18c:	b.ne	46d168 <_obstack_memory_used@@Base+0x10d78>  // b.any
  46d190:	ldp	x3, x2, [x19, #272]
  46d194:	strb	wzr, [x19, #255]
  46d198:	mov	x0, x19
  46d19c:	blr	x3
  46d1a0:	ldr	x2, [x19, #320]
  46d1a4:	mov	x1, #0x1                   	// #1
  46d1a8:	mov	x0, #0x0                   	// #0
  46d1ac:	add	x2, x2, x1
  46d1b0:	str	x2, [x19, #320]
  46d1b4:	b	46d170 <_obstack_memory_used@@Base+0x10d80>
  46d1b8:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d1bc:	add	x24, x24, #0x50
  46d1c0:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d1c4:	add	x24, x24, #0x15
  46d1c8:	add	x22, x22, #0x51
  46d1cc:	mov	w23, #0x72                  	// #114
  46d1d0:	ldr	x1, [x19, #256]
  46d1d4:	b	46d1f8 <_obstack_memory_used@@Base+0x10e08>
  46d1d8:	mov	x0, x1
  46d1dc:	add	x1, x1, #0x1
  46d1e0:	str	x1, [x19, #256]
  46d1e4:	cmp	x24, x22
  46d1e8:	strb	w23, [x19, x0]
  46d1ec:	strb	w23, [x19, #264]
  46d1f0:	b.eq	46e1c8 <_obstack_memory_used@@Base+0x11dd8>  // b.none
  46d1f4:	ldrb	w23, [x22], #1
  46d1f8:	cmp	x1, #0xff
  46d1fc:	b.ne	46d1d8 <_obstack_memory_used@@Base+0x10de8>  // b.any
  46d200:	ldp	x3, x2, [x19, #272]
  46d204:	strb	wzr, [x19, #255]
  46d208:	mov	x0, x19
  46d20c:	blr	x3
  46d210:	ldr	x2, [x19, #320]
  46d214:	mov	x1, #0x1                   	// #1
  46d218:	mov	x0, #0x0                   	// #0
  46d21c:	add	x2, x2, x1
  46d220:	str	x2, [x19, #320]
  46d224:	b	46d1e0 <_obstack_memory_used@@Base+0x10df0>
  46d228:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d22c:	add	x24, x24, #0x18
  46d230:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d234:	add	x24, x24, #0x16
  46d238:	add	x22, x22, #0x19
  46d23c:	mov	w23, #0x54                  	// #84
  46d240:	ldr	x1, [x19, #256]
  46d244:	b	46d268 <_obstack_memory_used@@Base+0x10e78>
  46d248:	mov	x0, x1
  46d24c:	add	x1, x1, #0x1
  46d250:	str	x1, [x19, #256]
  46d254:	cmp	x22, x24
  46d258:	strb	w23, [x19, x0]
  46d25c:	strb	w23, [x19, #264]
  46d260:	b.eq	46e788 <_obstack_memory_used@@Base+0x12398>  // b.none
  46d264:	ldrb	w23, [x22], #1
  46d268:	cmp	x1, #0xff
  46d26c:	b.ne	46d248 <_obstack_memory_used@@Base+0x10e58>  // b.any
  46d270:	ldp	x3, x2, [x19, #272]
  46d274:	strb	wzr, [x19, #255]
  46d278:	mov	x0, x19
  46d27c:	blr	x3
  46d280:	ldr	x2, [x19, #320]
  46d284:	mov	x1, #0x1                   	// #1
  46d288:	mov	x0, #0x0                   	// #0
  46d28c:	add	x2, x2, x1
  46d290:	str	x2, [x19, #320]
  46d294:	b	46d250 <_obstack_memory_used@@Base+0x10e60>
  46d298:	ldr	x1, [x20, #8]
  46d29c:	mov	x0, x19
  46d2a0:	mov	w24, #0x0                   	// #0
  46d2a4:	bl	468b28 <_obstack_memory_used@@Base+0xc738>
  46d2a8:	cbz	x0, 46fcbc <_obstack_memory_used@@Base+0x138cc>
  46d2ac:	stp	x25, x26, [sp, #64]
  46d2b0:	ldr	w1, [x0]
  46d2b4:	cmp	w1, #0x2f
  46d2b8:	b.ne	46e964 <_obstack_memory_used@@Base+0x12574>  // b.any
  46d2bc:	ldr	x1, [x0, #8]
  46d2c0:	cbz	x1, 46e964 <_obstack_memory_used@@Base+0x12574>
  46d2c4:	ldr	x0, [x0, #16]
  46d2c8:	add	w24, w24, #0x1
  46d2cc:	cbnz	x0, 46d2b0 <_obstack_memory_used@@Base+0x10ec0>
  46d2d0:	ldr	x25, [x20, #8]
  46d2d4:	sub	w26, w24, #0x1
  46d2d8:	b	46d2e8 <_obstack_memory_used@@Base+0x10ef8>
  46d2dc:	add	w22, w22, #0x1
  46d2e0:	cmp	w22, w24
  46d2e4:	b.ge	46e90c <_obstack_memory_used@@Base+0x1251c>  // b.tcont
  46d2e8:	str	w22, [x19, #316]
  46d2ec:	mov	x2, x25
  46d2f0:	mov	w1, w21
  46d2f4:	mov	x0, x19
  46d2f8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46d2fc:	cmp	w26, w22
  46d300:	b.le	46d2dc <_obstack_memory_used@@Base+0x10eec>
  46d304:	mov	w20, #0x2c                  	// #44
  46d308:	mov	x23, #0x0                   	// #0
  46d30c:	ldr	x1, [x19, #256]
  46d310:	b	46d334 <_obstack_memory_used@@Base+0x10f44>
  46d314:	mov	x0, x1
  46d318:	add	x1, x1, #0x1
  46d31c:	str	x1, [x19, #256]
  46d320:	strb	w20, [x19, x0]
  46d324:	strb	w20, [x19, #264]
  46d328:	mov	w20, #0x20                  	// #32
  46d32c:	cbnz	x23, 46d2dc <_obstack_memory_used@@Base+0x10eec>
  46d330:	mov	x23, #0x1                   	// #1
  46d334:	cmp	x1, #0xff
  46d338:	b.ne	46d314 <_obstack_memory_used@@Base+0x10f24>  // b.any
  46d33c:	ldp	x3, x2, [x19, #272]
  46d340:	strb	wzr, [x19, #255]
  46d344:	mov	x0, x19
  46d348:	blr	x3
  46d34c:	ldr	x2, [x19, #320]
  46d350:	mov	x1, #0x1                   	// #1
  46d354:	mov	x0, #0x0                   	// #0
  46d358:	add	x2, x2, x1
  46d35c:	str	x2, [x19, #320]
  46d360:	b	46d31c <_obstack_memory_used@@Base+0x10f2c>
  46d364:	ldr	x2, [x20, #8]
  46d368:	mov	w1, w21
  46d36c:	mov	x0, x19
  46d370:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d374:	add	x24, x24, #0xeb8
  46d378:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d37c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46d380:	add	x24, x24, #0x5
  46d384:	add	x22, x22, #0xeb9
  46d388:	mov	w23, #0x5b                  	// #91
  46d38c:	ldr	x1, [x19, #256]
  46d390:	b	46d3b4 <_obstack_memory_used@@Base+0x10fc4>
  46d394:	mov	x0, x1
  46d398:	add	x1, x1, #0x1
  46d39c:	str	x1, [x19, #256]
  46d3a0:	cmp	x24, x22
  46d3a4:	strb	w23, [x19, x0]
  46d3a8:	strb	w23, [x19, #264]
  46d3ac:	b.eq	46e2d4 <_obstack_memory_used@@Base+0x11ee4>  // b.none
  46d3b0:	ldrb	w23, [x22], #1
  46d3b4:	cmp	x1, #0xff
  46d3b8:	b.ne	46d394 <_obstack_memory_used@@Base+0x10fa4>  // b.any
  46d3bc:	ldp	x3, x2, [x19, #272]
  46d3c0:	strb	wzr, [x19, #255]
  46d3c4:	mov	x0, x19
  46d3c8:	blr	x3
  46d3cc:	ldr	x2, [x19, #320]
  46d3d0:	mov	x1, #0x1                   	// #1
  46d3d4:	mov	x0, #0x0                   	// #0
  46d3d8:	add	x2, x2, x1
  46d3dc:	str	x2, [x19, #320]
  46d3e0:	b	46d39c <_obstack_memory_used@@Base+0x10fac>
  46d3e4:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d3e8:	add	x24, x24, #0x98
  46d3ec:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d3f0:	add	x24, x24, #0x1a
  46d3f4:	add	x22, x22, #0x99
  46d3f8:	mov	w23, #0x6e                  	// #110
  46d3fc:	ldr	x1, [x19, #256]
  46d400:	b	46d424 <_obstack_memory_used@@Base+0x11034>
  46d404:	mov	x0, x1
  46d408:	add	x1, x1, #0x1
  46d40c:	str	x1, [x19, #256]
  46d410:	cmp	x24, x22
  46d414:	strb	w23, [x19, x0]
  46d418:	strb	w23, [x19, #264]
  46d41c:	b.eq	46e29c <_obstack_memory_used@@Base+0x11eac>  // b.none
  46d420:	ldrb	w23, [x22], #1
  46d424:	cmp	x1, #0xff
  46d428:	b.ne	46d404 <_obstack_memory_used@@Base+0x11014>  // b.any
  46d42c:	ldp	x3, x2, [x19, #272]
  46d430:	strb	wzr, [x19, #255]
  46d434:	mov	x0, x19
  46d438:	blr	x3
  46d43c:	ldr	x2, [x19, #320]
  46d440:	mov	x1, #0x1                   	// #1
  46d444:	mov	x0, #0x0                   	// #0
  46d448:	add	x2, x2, x1
  46d44c:	str	x2, [x19, #320]
  46d450:	b	46d40c <_obstack_memory_used@@Base+0x1101c>
  46d454:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d458:	add	x24, x24, #0x0
  46d45c:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d460:	add	x24, x24, #0x13
  46d464:	add	x22, x22, #0x1
  46d468:	mov	w23, #0x67                  	// #103
  46d46c:	ldr	x1, [x19, #256]
  46d470:	b	46d494 <_obstack_memory_used@@Base+0x110a4>
  46d474:	mov	x0, x1
  46d478:	add	x1, x1, #0x1
  46d47c:	str	x1, [x19, #256]
  46d480:	cmp	x24, x22
  46d484:	strb	w23, [x19, x0]
  46d488:	strb	w23, [x19, #264]
  46d48c:	b.eq	46e1ac <_obstack_memory_used@@Base+0x11dbc>  // b.none
  46d490:	ldrb	w23, [x22], #1
  46d494:	cmp	x1, #0xff
  46d498:	b.ne	46d474 <_obstack_memory_used@@Base+0x11084>  // b.any
  46d49c:	ldp	x3, x2, [x19, #272]
  46d4a0:	strb	wzr, [x19, #255]
  46d4a4:	mov	x0, x19
  46d4a8:	blr	x3
  46d4ac:	ldr	x2, [x19, #320]
  46d4b0:	mov	x1, #0x1                   	// #1
  46d4b4:	mov	x0, #0x0                   	// #0
  46d4b8:	add	x2, x2, x1
  46d4bc:	str	x2, [x19, #320]
  46d4c0:	b	46d47c <_obstack_memory_used@@Base+0x1108c>
  46d4c4:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d4c8:	add	x24, x24, #0x30
  46d4cc:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46d4d0:	add	x24, x24, #0x19
  46d4d4:	add	x22, x22, #0x31
  46d4d8:	mov	w23, #0x54                  	// #84
  46d4dc:	ldr	x1, [x19, #256]
  46d4e0:	b	46d504 <_obstack_memory_used@@Base+0x11114>
  46d4e4:	mov	x0, x1
  46d4e8:	add	x1, x1, #0x1
  46d4ec:	str	x1, [x19, #256]
  46d4f0:	cmp	x24, x22
  46d4f4:	strb	w23, [x19, x0]
  46d4f8:	strb	w23, [x19, #264]
  46d4fc:	b.eq	46e7a4 <_obstack_memory_used@@Base+0x123b4>  // b.none
  46d500:	ldrb	w23, [x22], #1
  46d504:	cmp	x1, #0xff
  46d508:	b.ne	46d4e4 <_obstack_memory_used@@Base+0x110f4>  // b.any
  46d50c:	ldp	x3, x2, [x19, #272]
  46d510:	strb	wzr, [x19, #255]
  46d514:	mov	x0, x19
  46d518:	blr	x3
  46d51c:	ldr	x2, [x19, #320]
  46d520:	mov	x1, #0x1                   	// #1
  46d524:	mov	x0, #0x0                   	// #0
  46d528:	add	x2, x2, x1
  46d52c:	str	x2, [x19, #320]
  46d530:	b	46d4ec <_obstack_memory_used@@Base+0x110fc>
  46d534:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d538:	add	x22, x22, #0xf28
  46d53c:	add	x24, x22, #0x8
  46d540:	mov	w23, #0x56                  	// #86
  46d544:	ldr	x1, [x19, #256]
  46d548:	b	46d570 <_obstack_memory_used@@Base+0x11180>
  46d54c:	mov	x0, x1
  46d550:	add	x1, x1, #0x1
  46d554:	str	x1, [x19, #256]
  46d558:	add	x22, x22, #0x1
  46d55c:	strb	w23, [x19, x0]
  46d560:	cmp	x24, x22
  46d564:	strb	w23, [x19, #264]
  46d568:	b.eq	46e6f0 <_obstack_memory_used@@Base+0x12300>  // b.none
  46d56c:	ldrb	w23, [x22]
  46d570:	cmp	x1, #0xff
  46d574:	b.ne	46d54c <_obstack_memory_used@@Base+0x1115c>  // b.any
  46d578:	ldp	x3, x2, [x19, #272]
  46d57c:	strb	wzr, [x19, #255]
  46d580:	mov	x0, x19
  46d584:	blr	x3
  46d588:	ldr	x2, [x19, #320]
  46d58c:	mov	x1, #0x1                   	// #1
  46d590:	mov	x0, #0x0                   	// #0
  46d594:	add	x2, x2, x1
  46d598:	str	x2, [x19, #320]
  46d59c:	b	46d554 <_obstack_memory_used@@Base+0x11164>
  46d5a0:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d5a4:	add	x24, x24, #0xf38
  46d5a8:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d5ac:	add	x24, x24, #0x18
  46d5b0:	add	x22, x22, #0xf39
  46d5b4:	mov	w23, #0x63                  	// #99
  46d5b8:	ldr	x1, [x19, #256]
  46d5bc:	b	46d5e0 <_obstack_memory_used@@Base+0x111f0>
  46d5c0:	mov	x0, x1
  46d5c4:	add	x1, x1, #0x1
  46d5c8:	str	x1, [x19, #256]
  46d5cc:	cmp	x24, x22
  46d5d0:	strb	w23, [x19, x0]
  46d5d4:	strb	w23, [x19, #264]
  46d5d8:	b.eq	46e70c <_obstack_memory_used@@Base+0x1231c>  // b.none
  46d5dc:	ldrb	w23, [x22], #1
  46d5e0:	cmp	x1, #0xff
  46d5e4:	b.ne	46d5c0 <_obstack_memory_used@@Base+0x111d0>  // b.any
  46d5e8:	ldp	x3, x2, [x19, #272]
  46d5ec:	strb	wzr, [x19, #255]
  46d5f0:	mov	x0, x19
  46d5f4:	blr	x3
  46d5f8:	ldr	x2, [x19, #320]
  46d5fc:	mov	x1, #0x1                   	// #1
  46d600:	mov	x0, #0x0                   	// #0
  46d604:	add	x2, x2, x1
  46d608:	str	x2, [x19, #320]
  46d60c:	b	46d5c8 <_obstack_memory_used@@Base+0x111d8>
  46d610:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d614:	add	x24, x24, #0xf60
  46d618:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d61c:	add	x24, x24, #0xd
  46d620:	add	x22, x22, #0xf61
  46d624:	mov	w23, #0x74                  	// #116
  46d628:	ldr	x1, [x19, #256]
  46d62c:	b	46d650 <_obstack_memory_used@@Base+0x11260>
  46d630:	mov	x0, x1
  46d634:	add	x1, x1, #0x1
  46d638:	str	x1, [x19, #256]
  46d63c:	cmp	x24, x22
  46d640:	strb	w23, [x19, x0]
  46d644:	strb	w23, [x19, #264]
  46d648:	b.eq	46e264 <_obstack_memory_used@@Base+0x11e74>  // b.none
  46d64c:	ldrb	w23, [x22], #1
  46d650:	cmp	x1, #0xff
  46d654:	b.ne	46d630 <_obstack_memory_used@@Base+0x11240>  // b.any
  46d658:	ldp	x3, x2, [x19, #272]
  46d65c:	strb	wzr, [x19, #255]
  46d660:	mov	x0, x19
  46d664:	blr	x3
  46d668:	ldr	x2, [x19, #320]
  46d66c:	mov	x1, #0x1                   	// #1
  46d670:	mov	x0, #0x0                   	// #0
  46d674:	add	x2, x2, x1
  46d678:	str	x2, [x19, #320]
  46d67c:	b	46d638 <_obstack_memory_used@@Base+0x11248>
  46d680:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d684:	add	x24, x24, #0xf70
  46d688:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d68c:	add	x24, x24, #0x12
  46d690:	add	x22, x22, #0xf71
  46d694:	mov	w23, #0x74                  	// #116
  46d698:	ldr	x1, [x19, #256]
  46d69c:	b	46d6c0 <_obstack_memory_used@@Base+0x112d0>
  46d6a0:	mov	x0, x1
  46d6a4:	add	x1, x1, #0x1
  46d6a8:	str	x1, [x19, #256]
  46d6ac:	cmp	x24, x22
  46d6b0:	strb	w23, [x19, x0]
  46d6b4:	strb	w23, [x19, #264]
  46d6b8:	b.eq	46e280 <_obstack_memory_used@@Base+0x11e90>  // b.none
  46d6bc:	ldrb	w23, [x22], #1
  46d6c0:	cmp	x1, #0xff
  46d6c4:	b.ne	46d6a0 <_obstack_memory_used@@Base+0x112b0>  // b.any
  46d6c8:	ldp	x3, x2, [x19, #272]
  46d6cc:	strb	wzr, [x19, #255]
  46d6d0:	mov	x0, x19
  46d6d4:	blr	x3
  46d6d8:	ldr	x2, [x19, #320]
  46d6dc:	mov	x1, #0x1                   	// #1
  46d6e0:	mov	x0, #0x0                   	// #0
  46d6e4:	add	x2, x2, x1
  46d6e8:	str	x2, [x19, #320]
  46d6ec:	b	46d6a8 <_obstack_memory_used@@Base+0x112b8>
  46d6f0:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d6f4:	add	x24, x24, #0xf88
  46d6f8:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d6fc:	add	x24, x24, #0x10
  46d700:	add	x22, x22, #0xf89
  46d704:	mov	w23, #0x74                  	// #116
  46d708:	ldr	x1, [x19, #256]
  46d70c:	b	46d730 <_obstack_memory_used@@Base+0x11340>
  46d710:	mov	x0, x1
  46d714:	add	x1, x1, #0x1
  46d718:	str	x1, [x19, #256]
  46d71c:	cmp	x24, x22
  46d720:	strb	w23, [x19, x0]
  46d724:	strb	w23, [x19, #264]
  46d728:	b.eq	46e6d4 <_obstack_memory_used@@Base+0x122e4>  // b.none
  46d72c:	ldrb	w23, [x22], #1
  46d730:	cmp	x1, #0xff
  46d734:	b.ne	46d710 <_obstack_memory_used@@Base+0x11320>  // b.any
  46d738:	ldp	x3, x2, [x19, #272]
  46d73c:	strb	wzr, [x19, #255]
  46d740:	mov	x0, x19
  46d744:	blr	x3
  46d748:	ldr	x2, [x19, #320]
  46d74c:	mov	x1, #0x1                   	// #1
  46d750:	mov	x0, #0x0                   	// #0
  46d754:	add	x2, x2, x1
  46d758:	str	x2, [x19, #320]
  46d75c:	b	46d718 <_obstack_memory_used@@Base+0x11328>
  46d760:	stp	x25, x26, [sp, #64]
  46d764:	ldr	x25, [x20, #8]
  46d768:	ldr	x22, [x19, #296]
  46d76c:	str	xzr, [x19, #296]
  46d770:	cbz	x25, 46f828 <_obstack_memory_used@@Base+0x13438>
  46d774:	add	x23, sp, #0x60
  46d778:	mov	x2, #0x1f                  	// #31
  46d77c:	ldr	x6, [x19, #288]
  46d780:	mov	x3, x23
  46d784:	mov	x0, #0x0                   	// #0
  46d788:	mov	w24, #0x0                   	// #0
  46d78c:	mov	x1, #0x1                   	// #1
  46d790:	movk	x2, #0x1a, lsl #48
  46d794:	str	wzr, [x3, #16]
  46d798:	add	w24, w24, #0x1
  46d79c:	str	x0, [x3]
  46d7a0:	mov	x4, x3
  46d7a4:	ldr	w5, [x25]
  46d7a8:	str	x25, [x3, #8]
  46d7ac:	str	x6, [x3, #24]
  46d7b0:	sub	w0, w5, #0x1c
  46d7b4:	cmp	w0, #0x34
  46d7b8:	b.hi	46d7c8 <_obstack_memory_used@@Base+0x113d8>  // b.pmore
  46d7bc:	lsl	x0, x1, x0
  46d7c0:	tst	x0, x2
  46d7c4:	b.ne	46e948 <_obstack_memory_used@@Base+0x12558>  // b.any
  46d7c8:	str	x3, [x19, #296]
  46d7cc:	cmp	w5, #0x2
  46d7d0:	b.eq	46f708 <_obstack_memory_used@@Base+0x13318>  // b.none
  46d7d4:	cmp	w5, #0x4
  46d7d8:	b.ne	46d7e8 <_obstack_memory_used@@Base+0x113f8>  // b.any
  46d7dc:	add	x0, sp, #0x50
  46d7e0:	stp	x6, x25, [sp, #80]
  46d7e4:	str	x0, [x19, #288]
  46d7e8:	ldr	x2, [x20, #16]
  46d7ec:	mov	x0, x19
  46d7f0:	mov	w1, w21
  46d7f4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46d7f8:	ldr	w0, [x25]
  46d7fc:	cmp	w0, #0x4
  46d800:	b.ne	46d80c <_obstack_memory_used@@Base+0x1141c>  // b.any
  46d804:	ldr	x0, [sp, #80]
  46d808:	str	x0, [x19, #288]
  46d80c:	sub	w20, w24, #0x1
  46d810:	mov	w24, #0x20                  	// #32
  46d814:	ubfiz	x0, x20, #5, #32
  46d818:	add	x23, x23, x0
  46d81c:	b	46d824 <_obstack_memory_used@@Base+0x11434>
  46d820:	sub	w20, w20, #0x1
  46d824:	ldr	w0, [x23, #16]
  46d828:	cbnz	w0, 46d880 <_obstack_memory_used@@Base+0x11490>
  46d82c:	ldr	x0, [x19, #256]
  46d830:	add	x1, x0, #0x1
  46d834:	cmp	x0, #0xff
  46d838:	b.ne	46d864 <_obstack_memory_used@@Base+0x11474>  // b.any
  46d83c:	ldp	x3, x2, [x19, #272]
  46d840:	strb	wzr, [x19, #255]
  46d844:	mov	x1, x0
  46d848:	mov	x0, x19
  46d84c:	blr	x3
  46d850:	ldr	x2, [x19, #320]
  46d854:	mov	x1, #0x1                   	// #1
  46d858:	mov	x0, #0x0                   	// #0
  46d85c:	add	x2, x2, x1
  46d860:	str	x2, [x19, #320]
  46d864:	str	x1, [x19, #256]
  46d868:	mov	w1, w21
  46d86c:	ldr	x2, [x23, #8]
  46d870:	strb	w24, [x19, x0]
  46d874:	strb	w24, [x19, #264]
  46d878:	mov	x0, x19
  46d87c:	bl	4702f8 <_obstack_memory_used@@Base+0x13f08>
  46d880:	sub	x23, x23, #0x20
  46d884:	cbnz	w20, 46d820 <_obstack_memory_used@@Base+0x11430>
  46d888:	ldp	x23, x24, [sp, #48]
  46d88c:	ldp	x25, x26, [sp, #64]
  46d890:	str	x22, [x19, #296]
  46d894:	ldp	x21, x22, [sp, #32]
  46d898:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46d89c:	ldr	x22, [x20, #8]
  46d8a0:	ldr	x24, [x19, #296]
  46d8a4:	str	xzr, [x19, #296]
  46d8a8:	ldr	x23, [x19, #368]
  46d8ac:	str	x20, [x19, #368]
  46d8b0:	tbz	w21, #2, 46d8c8 <_obstack_memory_used@@Base+0x114d8>
  46d8b4:	ldr	w0, [x22]
  46d8b8:	cbnz	w0, 46d8c8 <_obstack_memory_used@@Base+0x114d8>
  46d8bc:	ldr	w0, [x22, #16]
  46d8c0:	cmp	w0, #0x6
  46d8c4:	b.eq	46fbc0 <_obstack_memory_used@@Base+0x137d0>  // b.none
  46d8c8:	mov	x0, x19
  46d8cc:	mov	x2, x22
  46d8d0:	mov	w1, w21
  46d8d4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46d8d8:	ldrb	w0, [x19, #264]
  46d8dc:	cmp	w0, #0x3c
  46d8e0:	b.eq	46f428 <_obstack_memory_used@@Base+0x13038>  // b.none
  46d8e4:	ldr	x1, [x19, #256]
  46d8e8:	add	x0, x1, #0x1
  46d8ec:	cmp	x1, #0xff
  46d8f0:	b.ne	46d918 <_obstack_memory_used@@Base+0x11528>  // b.any
  46d8f4:	ldp	x3, x2, [x19, #272]
  46d8f8:	strb	wzr, [x19, #255]
  46d8fc:	mov	x0, x19
  46d900:	blr	x3
  46d904:	ldr	x2, [x19, #320]
  46d908:	mov	x0, #0x1                   	// #1
  46d90c:	mov	x1, #0x0                   	// #0
  46d910:	add	x2, x2, x0
  46d914:	str	x2, [x19, #320]
  46d918:	str	x0, [x19, #256]
  46d91c:	mov	w0, #0x3c                  	// #60
  46d920:	strb	w0, [x19, x1]
  46d924:	mov	w1, w21
  46d928:	strb	w0, [x19, #264]
  46d92c:	mov	x0, x19
  46d930:	ldr	x2, [x20, #16]
  46d934:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46d938:	ldrb	w0, [x19, #264]
  46d93c:	cmp	w0, #0x3e
  46d940:	b.eq	46f3e0 <_obstack_memory_used@@Base+0x12ff0>  // b.none
  46d944:	ldr	x1, [x19, #256]
  46d948:	add	x0, x1, #0x1
  46d94c:	cmp	x1, #0xff
  46d950:	b.ne	46d978 <_obstack_memory_used@@Base+0x11588>  // b.any
  46d954:	ldp	x3, x2, [x19, #272]
  46d958:	strb	wzr, [x19, #255]
  46d95c:	mov	x0, x19
  46d960:	blr	x3
  46d964:	ldr	x2, [x19, #320]
  46d968:	mov	x0, #0x1                   	// #1
  46d96c:	mov	x1, #0x0                   	// #0
  46d970:	add	x2, x2, x0
  46d974:	str	x2, [x19, #320]
  46d978:	str	x0, [x19, #256]
  46d97c:	mov	w0, #0x3e                  	// #62
  46d980:	strb	w0, [x19, x1]
  46d984:	strb	w0, [x19, #264]
  46d988:	ldp	x21, x22, [sp, #32]
  46d98c:	str	x24, [x19, #296]
  46d990:	str	x23, [x19, #368]
  46d994:	ldp	x23, x24, [sp, #48]
  46d998:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46d99c:	ldr	w0, [x19, #312]
  46d9a0:	cbz	w0, 46ea6c <_obstack_memory_used@@Base+0x1267c>
  46d9a4:	adrp	x23, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d9a8:	add	x23, x23, #0xef0
  46d9ac:	adrp	x21, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46d9b0:	add	x23, x23, #0x5
  46d9b4:	add	x21, x21, #0xef1
  46d9b8:	mov	w22, #0x61                  	// #97
  46d9bc:	ldr	x1, [x19, #256]
  46d9c0:	b	46d9e4 <_obstack_memory_used@@Base+0x115f4>
  46d9c4:	mov	x0, x1
  46d9c8:	add	x1, x1, #0x1
  46d9cc:	str	x1, [x19, #256]
  46d9d0:	cmp	x23, x21
  46d9d4:	strb	w22, [x19, x0]
  46d9d8:	strb	w22, [x19, #264]
  46d9dc:	b.eq	46eab4 <_obstack_memory_used@@Base+0x126c4>  // b.none
  46d9e0:	ldrb	w22, [x21], #1
  46d9e4:	cmp	x1, #0xff
  46d9e8:	b.ne	46d9c4 <_obstack_memory_used@@Base+0x115d4>  // b.any
  46d9ec:	ldp	x3, x2, [x19, #272]
  46d9f0:	strb	wzr, [x19, #255]
  46d9f4:	mov	x0, x19
  46d9f8:	blr	x3
  46d9fc:	ldr	x2, [x19, #320]
  46da00:	mov	x1, #0x1                   	// #1
  46da04:	mov	x0, #0x0                   	// #0
  46da08:	add	x2, x2, x1
  46da0c:	str	x2, [x19, #320]
  46da10:	b	46d9cc <_obstack_memory_used@@Base+0x115dc>
  46da14:	ldr	x1, [x19, #256]
  46da18:	add	x0, x1, #0x1
  46da1c:	cmp	x1, #0xff
  46da20:	b.ne	46da48 <_obstack_memory_used@@Base+0x11658>  // b.any
  46da24:	ldp	x3, x2, [x19, #272]
  46da28:	strb	wzr, [x19, #255]
  46da2c:	mov	x0, x19
  46da30:	blr	x3
  46da34:	ldr	x2, [x19, #320]
  46da38:	mov	x0, #0x1                   	// #1
  46da3c:	mov	x1, #0x0                   	// #0
  46da40:	add	x2, x2, x0
  46da44:	str	x2, [x19, #320]
  46da48:	str	x0, [x19, #256]
  46da4c:	mov	w0, #0x7e                  	// #126
  46da50:	strb	w0, [x19, x1]
  46da54:	mov	w1, w21
  46da58:	strb	w0, [x19, #264]
  46da5c:	mov	x0, x19
  46da60:	ldr	x2, [x20, #16]
  46da64:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46da68:	ldp	x21, x22, [sp, #32]
  46da6c:	ldp	x23, x24, [sp, #48]
  46da70:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46da74:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46da78:	add	x24, x24, #0xf18
  46da7c:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46da80:	add	x24, x24, #0xb
  46da84:	add	x22, x22, #0xf19
  46da88:	mov	w23, #0x76                  	// #118
  46da8c:	ldr	x1, [x19, #256]
  46da90:	b	46dab4 <_obstack_memory_used@@Base+0x116c4>
  46da94:	mov	x0, x1
  46da98:	add	x1, x1, #0x1
  46da9c:	str	x1, [x19, #256]
  46daa0:	cmp	x24, x22
  46daa4:	strb	w23, [x19, x0]
  46daa8:	strb	w23, [x19, #264]
  46daac:	b.eq	46e248 <_obstack_memory_used@@Base+0x11e58>  // b.none
  46dab0:	ldrb	w23, [x22], #1
  46dab4:	cmp	x1, #0xff
  46dab8:	b.ne	46da94 <_obstack_memory_used@@Base+0x116a4>  // b.any
  46dabc:	ldp	x3, x2, [x19, #272]
  46dac0:	strb	wzr, [x19, #255]
  46dac4:	mov	x0, x19
  46dac8:	blr	x3
  46dacc:	ldr	x2, [x19, #320]
  46dad0:	mov	x1, #0x1                   	// #1
  46dad4:	mov	x0, #0x0                   	// #0
  46dad8:	add	x2, x2, x1
  46dadc:	str	x2, [x19, #320]
  46dae0:	b	46da9c <_obstack_memory_used@@Base+0x116ac>
  46dae4:	ldr	x0, [x20, #16]
  46dae8:	ldr	w0, [x0]
  46daec:	cmp	w0, #0x39
  46daf0:	b.ne	46c4e0 <_obstack_memory_used@@Base+0x100f0>  // b.any
  46daf4:	ldr	x2, [x20, #8]
  46daf8:	ldr	x0, [x2, #8]
  46dafc:	ldr	x0, [x0]
  46db00:	ldrb	w1, [x0, #1]
  46db04:	cmp	w1, #0x63
  46db08:	b.eq	46f840 <_obstack_memory_used@@Base+0x13450>  // b.none
  46db0c:	add	x3, x20, #0x10
  46db10:	mov	w1, w21
  46db14:	mov	x0, x19
  46db18:	bl	4715b0 <_obstack_memory_used@@Base+0x151c0>
  46db1c:	cbnz	w0, 46fba8 <_obstack_memory_used@@Base+0x137b8>
  46db20:	ldr	x0, [x20, #8]
  46db24:	ldr	w1, [x0]
  46db28:	cmp	w1, #0x32
  46db2c:	b.eq	46fd1c <_obstack_memory_used@@Base+0x1392c>  // b.none
  46db30:	ldr	x0, [x0, #8]
  46db34:	ldr	x1, [x0]
  46db38:	ldrb	w0, [x1]
  46db3c:	subs	w0, w0, #0x63
  46db40:	b.ne	46db54 <_obstack_memory_used@@Base+0x11764>  // b.any
  46db44:	ldrb	w0, [x1, #1]
  46db48:	subs	w0, w0, #0x6c
  46db4c:	b.ne	46db54 <_obstack_memory_used@@Base+0x11764>  // b.any
  46db50:	ldrb	w0, [x1, #2]
  46db54:	ldr	x1, [x20, #16]
  46db58:	ldr	x2, [x1, #8]
  46db5c:	cbnz	w0, 46db6c <_obstack_memory_used@@Base+0x1177c>
  46db60:	ldr	w0, [x2]
  46db64:	cmp	w0, #0x3
  46db68:	b.eq	46fde0 <_obstack_memory_used@@Base+0x139f0>  // b.none
  46db6c:	mov	w1, w21
  46db70:	mov	x0, x19
  46db74:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46db78:	ldr	x2, [x20, #8]
  46db7c:	ldr	x0, [x2, #8]
  46db80:	ldr	x0, [x0]
  46db84:	ldrb	w1, [x0]
  46db88:	cmp	w1, #0x69
  46db8c:	b.ne	46faf8 <_obstack_memory_used@@Base+0x13708>  // b.any
  46db90:	ldrb	w3, [x0, #1]
  46db94:	cmp	w3, #0x78
  46db98:	b.ne	46faf8 <_obstack_memory_used@@Base+0x13708>  // b.any
  46db9c:	ldrb	w3, [x0, #2]
  46dba0:	cbnz	w3, 46faf8 <_obstack_memory_used@@Base+0x13708>
  46dba4:	ldr	x1, [x19, #256]
  46dba8:	cmp	x1, #0xff
  46dbac:	b.ne	46dbd4 <_obstack_memory_used@@Base+0x117e4>  // b.any
  46dbb0:	ldp	x3, x2, [x19, #272]
  46dbb4:	strb	wzr, [x19, #255]
  46dbb8:	mov	x0, x19
  46dbbc:	blr	x3
  46dbc0:	str	xzr, [x19, #256]
  46dbc4:	ldr	x0, [x19, #320]
  46dbc8:	mov	x1, #0x0                   	// #0
  46dbcc:	add	x0, x0, #0x1
  46dbd0:	str	x0, [x19, #320]
  46dbd4:	add	x0, x1, #0x1
  46dbd8:	str	x0, [x19, #256]
  46dbdc:	mov	w0, #0x5b                  	// #91
  46dbe0:	strb	w0, [x19, x1]
  46dbe4:	strb	w0, [x19, #264]
  46dbe8:	mov	w1, w21
  46dbec:	mov	x0, x19
  46dbf0:	ldr	x2, [x20, #16]
  46dbf4:	ldr	x2, [x2, #16]
  46dbf8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46dbfc:	ldr	x1, [x19, #256]
  46dc00:	cmp	x1, #0xff
  46dc04:	b.ne	46dc2c <_obstack_memory_used@@Base+0x1183c>  // b.any
  46dc08:	ldp	x3, x2, [x19, #272]
  46dc0c:	strb	wzr, [x19, #255]
  46dc10:	mov	x0, x19
  46dc14:	blr	x3
  46dc18:	str	xzr, [x19, #256]
  46dc1c:	ldr	x0, [x19, #320]
  46dc20:	mov	x1, #0x0                   	// #0
  46dc24:	add	x0, x0, #0x1
  46dc28:	str	x0, [x19, #320]
  46dc2c:	add	x0, x1, #0x1
  46dc30:	str	x0, [x19, #256]
  46dc34:	mov	w0, #0x5d                  	// #93
  46dc38:	strb	w0, [x19, x1]
  46dc3c:	strb	w0, [x19, #264]
  46dc40:	ldr	x0, [x20, #8]
  46dc44:	ldr	w1, [x0]
  46dc48:	cmp	w1, #0x32
  46dc4c:	b.eq	46fd00 <_obstack_memory_used@@Base+0x13910>  // b.none
  46dc50:	ldp	x21, x22, [sp, #32]
  46dc54:	ldp	x23, x24, [sp, #48]
  46dc58:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46dc5c:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46dc60:	add	x24, x24, #0x130
  46dc64:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46dc68:	add	x24, x24, #0xe
  46dc6c:	add	x22, x22, #0x131
  46dc70:	mov	w23, #0x6a                  	// #106
  46dc74:	ldr	x1, [x19, #256]
  46dc78:	b	46dc9c <_obstack_memory_used@@Base+0x118ac>
  46dc7c:	mov	x0, x1
  46dc80:	add	x1, x1, #0x1
  46dc84:	str	x1, [x19, #256]
  46dc88:	cmp	x24, x22
  46dc8c:	strb	w23, [x19, x0]
  46dc90:	strb	w23, [x19, #264]
  46dc94:	b.eq	46e84c <_obstack_memory_used@@Base+0x1245c>  // b.none
  46dc98:	ldrb	w23, [x22], #1
  46dc9c:	cmp	x1, #0xff
  46dca0:	b.ne	46dc7c <_obstack_memory_used@@Base+0x1188c>  // b.any
  46dca4:	ldp	x3, x2, [x19, #272]
  46dca8:	strb	wzr, [x19, #255]
  46dcac:	mov	x0, x19
  46dcb0:	blr	x3
  46dcb4:	ldr	x2, [x19, #320]
  46dcb8:	mov	x1, #0x1                   	// #1
  46dcbc:	mov	x0, #0x0                   	// #0
  46dcc0:	add	x2, x2, x1
  46dcc4:	str	x2, [x19, #320]
  46dcc8:	b	46dc84 <_obstack_memory_used@@Base+0x11894>
  46dccc:	ldr	x2, [x20, #8]
  46dcd0:	mov	w1, w21
  46dcd4:	mov	x0, x19
  46dcd8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46dcdc:	ldr	x2, [x20, #16]
  46dce0:	mov	w1, w21
  46dce4:	mov	x0, x19
  46dce8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46dcec:	ldp	x21, x22, [sp, #32]
  46dcf0:	ldp	x23, x24, [sp, #48]
  46dcf4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46dcf8:	ldr	x1, [x19, #256]
  46dcfc:	ldrb	w20, [x20, #8]
  46dd00:	add	x0, x1, #0x1
  46dd04:	cmp	x1, #0xff
  46dd08:	b.ne	46dd30 <_obstack_memory_used@@Base+0x11940>  // b.any
  46dd0c:	ldp	x3, x2, [x19, #272]
  46dd10:	strb	wzr, [x19, #255]
  46dd14:	mov	x0, x19
  46dd18:	blr	x3
  46dd1c:	ldr	x2, [x19, #320]
  46dd20:	mov	x0, #0x1                   	// #1
  46dd24:	mov	x1, #0x0                   	// #0
  46dd28:	add	x2, x2, x0
  46dd2c:	str	x2, [x19, #320]
  46dd30:	str	x0, [x19, #256]
  46dd34:	strb	w20, [x19, x1]
  46dd38:	strb	w20, [x19, #264]
  46dd3c:	ldp	x21, x22, [sp, #32]
  46dd40:	ldp	x23, x24, [sp, #48]
  46dd44:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46dd48:	ldr	w2, [x20, #8]
  46dd4c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46dd50:	add	x1, x1, #0xed0
  46dd54:	add	x20, sp, #0x60
  46dd58:	mov	x0, x20
  46dd5c:	bl	402e00 <sprintf@plt>
  46dd60:	mov	x0, x20
  46dd64:	bl	402d50 <strlen@plt>
  46dd68:	cbz	x0, 46fc98 <_obstack_memory_used@@Base+0x138a8>
  46dd6c:	add	x22, x20, x0
  46dd70:	ldr	x1, [x19, #256]
  46dd74:	b	46dd98 <_obstack_memory_used@@Base+0x119a8>
  46dd78:	mov	x0, x1
  46dd7c:	add	x1, x1, #0x1
  46dd80:	str	x1, [x19, #256]
  46dd84:	add	x20, x20, #0x1
  46dd88:	strb	w21, [x19, x0]
  46dd8c:	cmp	x20, x22
  46dd90:	strb	w21, [x19, #264]
  46dd94:	b.eq	46e900 <_obstack_memory_used@@Base+0x12510>  // b.none
  46dd98:	ldrb	w21, [x20]
  46dd9c:	cmp	x1, #0xff
  46dda0:	b.ne	46dd78 <_obstack_memory_used@@Base+0x11988>  // b.any
  46dda4:	ldp	x3, x2, [x19, #272]
  46dda8:	strb	wzr, [x19, #255]
  46ddac:	mov	x0, x19
  46ddb0:	blr	x3
  46ddb4:	ldr	x2, [x19, #320]
  46ddb8:	mov	x1, #0x1                   	// #1
  46ddbc:	mov	x0, #0x0                   	// #0
  46ddc0:	add	x2, x2, x1
  46ddc4:	str	x2, [x19, #320]
  46ddc8:	b	46dd80 <_obstack_memory_used@@Base+0x11990>
  46ddcc:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46ddd0:	add	x24, x24, #0x140
  46ddd4:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46ddd8:	add	x24, x24, #0xa
  46dddc:	add	x22, x22, #0x141
  46dde0:	mov	w23, #0x64                  	// #100
  46dde4:	ldr	x1, [x19, #256]
  46dde8:	b	46de0c <_obstack_memory_used@@Base+0x11a1c>
  46ddec:	mov	x0, x1
  46ddf0:	add	x1, x1, #0x1
  46ddf4:	str	x1, [x19, #256]
  46ddf8:	cmp	x22, x24
  46ddfc:	strb	w23, [x19, x0]
  46de00:	strb	w23, [x19, #264]
  46de04:	b.eq	46e674 <_obstack_memory_used@@Base+0x12284>  // b.none
  46de08:	ldrb	w23, [x22], #1
  46de0c:	cmp	x1, #0xff
  46de10:	b.ne	46ddec <_obstack_memory_used@@Base+0x119fc>  // b.any
  46de14:	ldp	x3, x2, [x19, #272]
  46de18:	strb	wzr, [x19, #255]
  46de1c:	mov	x0, x19
  46de20:	blr	x3
  46de24:	ldr	x2, [x19, #320]
  46de28:	mov	x1, #0x1                   	// #1
  46de2c:	mov	x0, #0x0                   	// #0
  46de30:	add	x2, x2, x1
  46de34:	str	x2, [x19, #320]
  46de38:	b	46ddf4 <_obstack_memory_used@@Base+0x11a04>
  46de3c:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46de40:	add	x24, x24, #0x168
  46de44:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46de48:	add	x24, x24, #0x1d
  46de4c:	add	x22, x22, #0x169
  46de50:	mov	w23, #0x67                  	// #103
  46de54:	ldr	x1, [x19, #256]
  46de58:	b	46de7c <_obstack_memory_used@@Base+0x11a8c>
  46de5c:	mov	x0, x1
  46de60:	add	x1, x1, #0x1
  46de64:	str	x1, [x19, #256]
  46de68:	cmp	x22, x24
  46de6c:	strb	w23, [x19, x0]
  46de70:	strb	w23, [x19, #264]
  46de74:	b.eq	46e8b8 <_obstack_memory_used@@Base+0x124c8>  // b.none
  46de78:	ldrb	w23, [x22], #1
  46de7c:	cmp	x1, #0xff
  46de80:	b.ne	46de5c <_obstack_memory_used@@Base+0x11a6c>  // b.any
  46de84:	ldp	x3, x2, [x19, #272]
  46de88:	strb	wzr, [x19, #255]
  46de8c:	mov	x0, x19
  46de90:	blr	x3
  46de94:	ldr	x2, [x19, #320]
  46de98:	mov	x1, #0x1                   	// #1
  46de9c:	mov	x0, #0x0                   	// #0
  46dea0:	add	x2, x2, x1
  46dea4:	str	x2, [x19, #320]
  46dea8:	b	46de64 <_obstack_memory_used@@Base+0x11a74>
  46deac:	ldrsw	x22, [x20, #16]
  46deb0:	ldr	x20, [x20, #8]
  46deb4:	tbnz	w21, #2, 46e984 <_obstack_memory_used@@Base+0x12594>
  46deb8:	cbz	x22, 46fdc8 <_obstack_memory_used@@Base+0x139d8>
  46debc:	add	x22, x20, x22
  46dec0:	ldr	x1, [x19, #256]
  46dec4:	b	46dee8 <_obstack_memory_used@@Base+0x11af8>
  46dec8:	mov	x0, x1
  46decc:	add	x1, x1, #0x1
  46ded0:	str	x1, [x19, #256]
  46ded4:	add	x20, x20, #0x1
  46ded8:	strb	w21, [x19, x0]
  46dedc:	cmp	x22, x20
  46dee0:	strb	w21, [x19, #264]
  46dee4:	b.eq	46ed8c <_obstack_memory_used@@Base+0x1299c>  // b.none
  46dee8:	ldrb	w21, [x20]
  46deec:	cmp	x1, #0xff
  46def0:	b.ne	46dec8 <_obstack_memory_used@@Base+0x11ad8>  // b.any
  46def4:	ldp	x3, x2, [x19, #272]
  46def8:	strb	wzr, [x19, #255]
  46defc:	mov	x0, x19
  46df00:	blr	x3
  46df04:	ldr	x2, [x19, #320]
  46df08:	mov	x1, #0x1                   	// #1
  46df0c:	mov	x0, #0x0                   	// #0
  46df10:	add	x2, x2, x1
  46df14:	str	x2, [x19, #320]
  46df18:	b	46ded0 <_obstack_memory_used@@Base+0x11ae0>
  46df1c:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46df20:	add	x22, x22, #0xe0
  46df24:	add	x24, x22, #0x9
  46df28:	mov	w23, #0x6f                  	// #111
  46df2c:	ldr	x1, [x19, #256]
  46df30:	b	46df58 <_obstack_memory_used@@Base+0x11b68>
  46df34:	mov	x0, x1
  46df38:	add	x1, x1, #0x1
  46df3c:	str	x1, [x19, #256]
  46df40:	add	x22, x22, #0x1
  46df44:	strb	w23, [x19, x0]
  46df48:	cmp	x22, x24
  46df4c:	strb	w23, [x19, #264]
  46df50:	b.eq	46e868 <_obstack_memory_used@@Base+0x12478>  // b.none
  46df54:	ldrb	w23, [x22]
  46df58:	cmp	x1, #0xff
  46df5c:	b.ne	46df34 <_obstack_memory_used@@Base+0x11b44>  // b.any
  46df60:	ldp	x3, x2, [x19, #272]
  46df64:	strb	wzr, [x19, #255]
  46df68:	mov	x0, x19
  46df6c:	blr	x3
  46df70:	ldr	x2, [x19, #320]
  46df74:	mov	x1, #0x1                   	// #1
  46df78:	mov	x0, #0x0                   	// #0
  46df7c:	add	x2, x2, x1
  46df80:	str	x2, [x19, #320]
  46df84:	b	46df3c <_obstack_memory_used@@Base+0x11b4c>
  46df88:	ldr	x2, [x20, #8]
  46df8c:	mov	w1, w21
  46df90:	mov	x0, x19
  46df94:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  46df98:	ldp	x21, x22, [sp, #32]
  46df9c:	ldp	x23, x24, [sp, #48]
  46dfa0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46dfa4:	ldp	x22, x20, [x20, #8]
  46dfa8:	ldr	w0, [x22]
  46dfac:	cmp	w0, #0x32
  46dfb0:	b.eq	46eed4 <_obstack_memory_used@@Base+0x12ae4>  // b.none
  46dfb4:	cmp	w0, #0x34
  46dfb8:	b.ne	47021c <_obstack_memory_used@@Base+0x13e2c>  // b.any
  46dfbc:	ldr	x1, [x19, #256]
  46dfc0:	add	x0, x1, #0x1
  46dfc4:	cmp	x1, #0xff
  46dfc8:	b.ne	46dff0 <_obstack_memory_used@@Base+0x11c00>  // b.any
  46dfcc:	ldp	x3, x2, [x19, #272]
  46dfd0:	strb	wzr, [x19, #255]
  46dfd4:	mov	x0, x19
  46dfd8:	blr	x3
  46dfdc:	ldr	x2, [x19, #320]
  46dfe0:	mov	x0, #0x1                   	// #1
  46dfe4:	mov	x1, #0x0                   	// #0
  46dfe8:	add	x2, x2, x0
  46dfec:	str	x2, [x19, #320]
  46dff0:	str	x0, [x19, #256]
  46dff4:	mov	w0, #0x28                  	// #40
  46dff8:	strb	w0, [x19, x1]
  46dffc:	mov	w1, w21
  46e000:	strb	w0, [x19, #264]
  46e004:	mov	x0, x19
  46e008:	ldr	x2, [x22, #8]
  46e00c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e010:	ldr	x1, [x19, #256]
  46e014:	add	x0, x1, #0x1
  46e018:	cmp	x1, #0xff
  46e01c:	b.ne	46e044 <_obstack_memory_used@@Base+0x11c54>  // b.any
  46e020:	ldp	x3, x2, [x19, #272]
  46e024:	strb	wzr, [x19, #255]
  46e028:	mov	x0, x19
  46e02c:	blr	x3
  46e030:	ldr	x2, [x19, #320]
  46e034:	mov	x0, #0x1                   	// #1
  46e038:	mov	x1, #0x0                   	// #0
  46e03c:	add	x2, x2, x0
  46e040:	str	x2, [x19, #320]
  46e044:	str	x0, [x19, #256]
  46e048:	mov	w0, #0x29                  	// #41
  46e04c:	strb	w0, [x19, x1]
  46e050:	strb	w0, [x19, #264]
  46e054:	mov	w1, w21
  46e058:	mov	x2, x20
  46e05c:	mov	x0, x19
  46e060:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46e064:	ldp	x21, x22, [sp, #32]
  46e068:	ldp	x23, x24, [sp, #48]
  46e06c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e070:	ldr	x0, [x20, #8]
  46e074:	tbnz	w21, #2, 46ed00 <_obstack_memory_used@@Base+0x12910>
  46e078:	ldrsw	x22, [x0, #8]
  46e07c:	ldr	x20, [x0]
  46e080:	cbz	x22, 46fee8 <_obstack_memory_used@@Base+0x13af8>
  46e084:	add	x22, x20, x22
  46e088:	ldr	x1, [x19, #256]
  46e08c:	b	46e0b0 <_obstack_memory_used@@Base+0x11cc0>
  46e090:	mov	x0, x1
  46e094:	add	x1, x1, #0x1
  46e098:	str	x1, [x19, #256]
  46e09c:	add	x20, x20, #0x1
  46e0a0:	strb	w21, [x19, x0]
  46e0a4:	cmp	x22, x20
  46e0a8:	strb	w21, [x19, #264]
  46e0ac:	b.eq	46ed74 <_obstack_memory_used@@Base+0x12984>  // b.none
  46e0b0:	ldrb	w21, [x20]
  46e0b4:	cmp	x1, #0xff
  46e0b8:	b.ne	46e090 <_obstack_memory_used@@Base+0x11ca0>  // b.any
  46e0bc:	ldp	x3, x2, [x19, #272]
  46e0c0:	strb	wzr, [x19, #255]
  46e0c4:	mov	x0, x19
  46e0c8:	blr	x3
  46e0cc:	ldr	x2, [x19, #320]
  46e0d0:	mov	x1, #0x1                   	// #1
  46e0d4:	mov	x0, #0x0                   	// #0
  46e0d8:	add	x2, x2, x1
  46e0dc:	str	x2, [x19, #320]
  46e0e0:	b	46e098 <_obstack_memory_used@@Base+0x11ca8>
  46e0e4:	ldr	x2, [x0, #8]
  46e0e8:	add	x0, sp, #0x60
  46e0ec:	ldr	x1, [x19, #288]
  46e0f0:	stp	x4, x20, [sp, #96]
  46e0f4:	str	wzr, [sp, #112]
  46e0f8:	str	x1, [sp, #120]
  46e0fc:	str	x0, [x19, #296]
  46e100:	cbnz	x2, 46c518 <_obstack_memory_used@@Base+0x10128>
  46e104:	b	46c514 <_obstack_memory_used@@Base+0x10124>
  46e108:	ldp	x21, x22, [sp, #32]
  46e10c:	ldp	x23, x24, [sp, #48]
  46e110:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e114:	ldr	x2, [x20, #16]
  46e118:	mov	w1, w21
  46e11c:	mov	x0, x19
  46e120:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e124:	ldr	x1, [x19, #256]
  46e128:	add	x0, x1, #0x1
  46e12c:	cmp	x1, #0xff
  46e130:	b.ne	46e158 <_obstack_memory_used@@Base+0x11d68>  // b.any
  46e134:	ldp	x3, x2, [x19, #272]
  46e138:	strb	wzr, [x19, #255]
  46e13c:	mov	x0, x19
  46e140:	blr	x3
  46e144:	ldr	x2, [x19, #320]
  46e148:	mov	x0, #0x1                   	// #1
  46e14c:	mov	x1, #0x0                   	// #0
  46e150:	add	x2, x2, x0
  46e154:	str	x2, [x19, #320]
  46e158:	str	x0, [x19, #256]
  46e15c:	mov	w0, #0x5d                  	// #93
  46e160:	strb	w0, [x19, x1]
  46e164:	strb	w0, [x19, #264]
  46e168:	ldp	x21, x22, [sp, #32]
  46e16c:	ldp	x23, x24, [sp, #48]
  46e170:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e174:	ldr	x2, [x20, #16]
  46e178:	mov	w1, w21
  46e17c:	mov	x0, x19
  46e180:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e184:	ldp	x21, x22, [sp, #32]
  46e188:	ldp	x23, x24, [sp, #48]
  46e18c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e190:	ldr	x2, [x20, #8]
  46e194:	mov	w1, w21
  46e198:	mov	x0, x19
  46e19c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e1a0:	ldp	x21, x22, [sp, #32]
  46e1a4:	ldp	x23, x24, [sp, #48]
  46e1a8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e1ac:	ldr	x2, [x20, #8]
  46e1b0:	mov	w1, w21
  46e1b4:	mov	x0, x19
  46e1b8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e1bc:	ldp	x21, x22, [sp, #32]
  46e1c0:	ldp	x23, x24, [sp, #48]
  46e1c4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e1c8:	ldr	x2, [x20, #16]
  46e1cc:	mov	w1, w21
  46e1d0:	mov	x0, x19
  46e1d4:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46e1d8:	add	x24, x24, #0xf68
  46e1dc:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46e1e0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e1e4:	add	x24, x24, #0x5
  46e1e8:	add	x22, x22, #0xf69
  46e1ec:	mov	w23, #0x20                  	// #32
  46e1f0:	ldr	x1, [x19, #256]
  46e1f4:	b	46e218 <_obstack_memory_used@@Base+0x11e28>
  46e1f8:	mov	x0, x1
  46e1fc:	add	x1, x1, #0x1
  46e200:	str	x1, [x19, #256]
  46e204:	cmp	x22, x24
  46e208:	strb	w23, [x19, x0]
  46e20c:	strb	w23, [x19, #264]
  46e210:	b.eq	46e2b8 <_obstack_memory_used@@Base+0x11ec8>  // b.none
  46e214:	ldrb	w23, [x22], #1
  46e218:	cmp	x1, #0xff
  46e21c:	b.ne	46e1f8 <_obstack_memory_used@@Base+0x11e08>  // b.any
  46e220:	ldp	x3, x2, [x19, #272]
  46e224:	strb	wzr, [x19, #255]
  46e228:	mov	x0, x19
  46e22c:	blr	x3
  46e230:	ldr	x2, [x19, #320]
  46e234:	mov	x1, #0x1                   	// #1
  46e238:	mov	x0, #0x0                   	// #0
  46e23c:	add	x2, x2, x1
  46e240:	str	x2, [x19, #320]
  46e244:	b	46e200 <_obstack_memory_used@@Base+0x11e10>
  46e248:	ldr	x2, [x20, #8]
  46e24c:	mov	w1, w21
  46e250:	mov	x0, x19
  46e254:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e258:	ldp	x21, x22, [sp, #32]
  46e25c:	ldp	x23, x24, [sp, #48]
  46e260:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e264:	ldr	x2, [x20, #8]
  46e268:	mov	w1, w21
  46e26c:	mov	x0, x19
  46e270:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e274:	ldp	x21, x22, [sp, #32]
  46e278:	ldp	x23, x24, [sp, #48]
  46e27c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e280:	ldr	x2, [x20, #8]
  46e284:	mov	w1, w21
  46e288:	mov	x0, x19
  46e28c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e290:	ldp	x21, x22, [sp, #32]
  46e294:	ldp	x23, x24, [sp, #48]
  46e298:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e29c:	ldr	x2, [x20, #8]
  46e2a0:	mov	w1, w21
  46e2a4:	mov	x0, x19
  46e2a8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e2ac:	ldp	x21, x22, [sp, #32]
  46e2b0:	ldp	x23, x24, [sp, #48]
  46e2b4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e2b8:	ldr	x2, [x20, #8]
  46e2bc:	mov	w1, w21
  46e2c0:	mov	x0, x19
  46e2c4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e2c8:	ldp	x21, x22, [sp, #32]
  46e2cc:	ldp	x23, x24, [sp, #48]
  46e2d0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e2d4:	ldr	x2, [x20, #16]
  46e2d8:	mov	w1, w21
  46e2dc:	mov	x0, x19
  46e2e0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e2e4:	ldr	x1, [x19, #256]
  46e2e8:	add	x0, x1, #0x1
  46e2ec:	cmp	x1, #0xff
  46e2f0:	b.ne	46e318 <_obstack_memory_used@@Base+0x11f28>  // b.any
  46e2f4:	ldp	x3, x2, [x19, #272]
  46e2f8:	strb	wzr, [x19, #255]
  46e2fc:	mov	x0, x19
  46e300:	blr	x3
  46e304:	ldr	x2, [x19, #320]
  46e308:	mov	x0, #0x1                   	// #1
  46e30c:	mov	x1, #0x0                   	// #0
  46e310:	add	x2, x2, x0
  46e314:	str	x2, [x19, #320]
  46e318:	str	x0, [x19, #256]
  46e31c:	mov	w0, #0x5d                  	// #93
  46e320:	strb	w0, [x19, x1]
  46e324:	strb	w0, [x19, #264]
  46e328:	ldp	x21, x22, [sp, #32]
  46e32c:	ldp	x23, x24, [sp, #48]
  46e330:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e334:	ldr	x20, [x22, #8]
  46e338:	ldrb	w0, [x20]
  46e33c:	sub	w0, w0, #0x61
  46e340:	and	w0, w0, #0xff
  46e344:	cmp	w0, #0x19
  46e348:	b.hi	46e390 <_obstack_memory_used@@Base+0x11fa0>  // b.pmore
  46e34c:	add	x0, x1, #0x1
  46e350:	cmp	x1, #0xff
  46e354:	b.ne	46e380 <_obstack_memory_used@@Base+0x11f90>  // b.any
  46e358:	ldp	x3, x2, [x19, #272]
  46e35c:	strb	wzr, [x19, #255]
  46e360:	mov	x0, x19
  46e364:	blr	x3
  46e368:	ldr	x2, [x19, #320]
  46e36c:	mov	x0, #0x1                   	// #1
  46e370:	mov	x1, #0x0                   	// #0
  46e374:	add	x2, x2, x0
  46e378:	ldr	x20, [x22, #8]
  46e37c:	str	x2, [x19, #320]
  46e380:	str	x0, [x19, #256]
  46e384:	mov	w0, #0x20                  	// #32
  46e388:	strb	w0, [x19, x1]
  46e38c:	strb	w0, [x19, #264]
  46e390:	sxtw	x22, w23
  46e394:	sub	w0, w23, #0x1
  46e398:	add	x1, x20, x22
  46e39c:	sxtw	x0, w0
  46e3a0:	ldurb	w1, [x1, #-1]
  46e3a4:	cmp	w1, #0x20
  46e3a8:	csel	x22, x22, x0, ne  // ne = any
  46e3ac:	cbz	x22, 46fc8c <_obstack_memory_used@@Base+0x1389c>
  46e3b0:	add	x22, x20, x22
  46e3b4:	ldr	x1, [x19, #256]
  46e3b8:	b	46e3dc <_obstack_memory_used@@Base+0x11fec>
  46e3bc:	mov	x0, x1
  46e3c0:	add	x1, x1, #0x1
  46e3c4:	str	x1, [x19, #256]
  46e3c8:	add	x20, x20, #0x1
  46e3cc:	strb	w21, [x19, x0]
  46e3d0:	cmp	x22, x20
  46e3d4:	strb	w21, [x19, #264]
  46e3d8:	b.eq	46e8f4 <_obstack_memory_used@@Base+0x12504>  // b.none
  46e3dc:	ldrb	w21, [x20]
  46e3e0:	cmp	x1, #0xff
  46e3e4:	b.ne	46e3bc <_obstack_memory_used@@Base+0x11fcc>  // b.any
  46e3e8:	ldp	x3, x2, [x19, #272]
  46e3ec:	strb	wzr, [x19, #255]
  46e3f0:	mov	x0, x19
  46e3f4:	blr	x3
  46e3f8:	ldr	x2, [x19, #320]
  46e3fc:	mov	x1, #0x1                   	// #1
  46e400:	mov	x0, #0x0                   	// #0
  46e404:	add	x2, x2, x1
  46e408:	str	x2, [x19, #320]
  46e40c:	b	46e3c4 <_obstack_memory_used@@Base+0x11fd4>
  46e410:	ldr	x2, [x20, #8]
  46e414:	mov	w1, w21
  46e418:	mov	x0, x19
  46e41c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e420:	ldp	x21, x22, [sp, #32]
  46e424:	ldp	x23, x24, [sp, #48]
  46e428:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e42c:	ldr	x2, [x20, #8]
  46e430:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46e434:	add	x1, x1, #0xed0
  46e438:	add	x20, sp, #0x60
  46e43c:	add	w2, w2, #0x1
  46e440:	mov	x0, x20
  46e444:	bl	402e00 <sprintf@plt>
  46e448:	mov	x0, x20
  46e44c:	bl	402d50 <strlen@plt>
  46e450:	ldr	x1, [x19, #256]
  46e454:	cbz	x0, 46e4b4 <_obstack_memory_used@@Base+0x120c4>
  46e458:	add	x22, x20, x0
  46e45c:	b	46e480 <_obstack_memory_used@@Base+0x12090>
  46e460:	mov	x0, x1
  46e464:	add	x1, x1, #0x1
  46e468:	str	x1, [x19, #256]
  46e46c:	add	x20, x20, #0x1
  46e470:	strb	w21, [x19, x0]
  46e474:	cmp	x22, x20
  46e478:	strb	w21, [x19, #264]
  46e47c:	b.eq	46e4b4 <_obstack_memory_used@@Base+0x120c4>  // b.none
  46e480:	ldrb	w21, [x20]
  46e484:	cmp	x1, #0xff
  46e488:	b.ne	46e460 <_obstack_memory_used@@Base+0x12070>  // b.any
  46e48c:	ldp	x3, x2, [x19, #272]
  46e490:	strb	wzr, [x19, #255]
  46e494:	mov	x0, x19
  46e498:	blr	x3
  46e49c:	ldr	x2, [x19, #320]
  46e4a0:	mov	x1, #0x1                   	// #1
  46e4a4:	mov	x0, #0x0                   	// #0
  46e4a8:	add	x2, x2, x1
  46e4ac:	str	x2, [x19, #320]
  46e4b0:	b	46e468 <_obstack_memory_used@@Base+0x12078>
  46e4b4:	add	x0, x1, #0x1
  46e4b8:	cmp	x1, #0xff
  46e4bc:	b.ne	46e4e4 <_obstack_memory_used@@Base+0x120f4>  // b.any
  46e4c0:	ldp	x3, x2, [x19, #272]
  46e4c4:	strb	wzr, [x19, #255]
  46e4c8:	mov	x0, x19
  46e4cc:	blr	x3
  46e4d0:	ldr	x2, [x19, #320]
  46e4d4:	mov	x0, #0x1                   	// #1
  46e4d8:	mov	x1, #0x0                   	// #0
  46e4dc:	add	x2, x2, x0
  46e4e0:	str	x2, [x19, #320]
  46e4e4:	str	x0, [x19, #256]
  46e4e8:	mov	w0, #0x7d                  	// #125
  46e4ec:	strb	w0, [x19, x1]
  46e4f0:	strb	w0, [x19, #264]
  46e4f4:	ldp	x21, x22, [sp, #32]
  46e4f8:	ldp	x23, x24, [sp, #48]
  46e4fc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e500:	ldr	x2, [x20, #8]
  46e504:	mov	w1, w21
  46e508:	mov	x0, x19
  46e50c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e510:	ldp	x21, x22, [sp, #32]
  46e514:	ldp	x23, x24, [sp, #48]
  46e518:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e51c:	ldr	x2, [x20, #8]
  46e520:	mov	w1, w21
  46e524:	mov	x0, x19
  46e528:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e52c:	ldp	x21, x22, [sp, #32]
  46e530:	ldp	x23, x24, [sp, #48]
  46e534:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e538:	ldr	w3, [x19, #312]
  46e53c:	mov	w1, w21
  46e540:	ldr	x2, [x20, #8]
  46e544:	add	w3, w3, #0x1
  46e548:	str	w3, [x19, #312]
  46e54c:	mov	x0, x19
  46e550:	mov	w21, #0x29                  	// #41
  46e554:	mov	x22, #0x0                   	// #0
  46e558:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e55c:	ldr	w0, [x19, #312]
  46e560:	ldr	x1, [x19, #256]
  46e564:	sub	w0, w0, #0x1
  46e568:	str	w0, [x19, #312]
  46e56c:	b	46e594 <_obstack_memory_used@@Base+0x121a4>
  46e570:	mov	x0, x1
  46e574:	add	x1, x1, #0x1
  46e578:	str	x1, [x19, #256]
  46e57c:	cmp	x22, #0x1
  46e580:	strb	w21, [x19, x0]
  46e584:	strb	w21, [x19, #264]
  46e588:	mov	w21, #0x23                  	// #35
  46e58c:	b.eq	46e5c4 <_obstack_memory_used@@Base+0x121d4>  // b.none
  46e590:	mov	x22, #0x1                   	// #1
  46e594:	cmp	x1, #0xff
  46e598:	b.ne	46e570 <_obstack_memory_used@@Base+0x12180>  // b.any
  46e59c:	ldp	x3, x2, [x19, #272]
  46e5a0:	strb	wzr, [x19, #255]
  46e5a4:	mov	x0, x19
  46e5a8:	blr	x3
  46e5ac:	ldr	x2, [x19, #320]
  46e5b0:	mov	x1, #0x1                   	// #1
  46e5b4:	mov	x0, #0x0                   	// #0
  46e5b8:	add	x2, x2, x1
  46e5bc:	str	x2, [x19, #320]
  46e5c0:	b	46e578 <_obstack_memory_used@@Base+0x12188>
  46e5c4:	ldr	w2, [x20, #16]
  46e5c8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46e5cc:	add	x1, x1, #0xed0
  46e5d0:	add	x20, sp, #0x60
  46e5d4:	add	w2, w2, #0x1
  46e5d8:	mov	x0, x20
  46e5dc:	bl	402e00 <sprintf@plt>
  46e5e0:	mov	x0, x20
  46e5e4:	bl	402d50 <strlen@plt>
  46e5e8:	ldr	x1, [x19, #256]
  46e5ec:	cbz	x0, 46e64c <_obstack_memory_used@@Base+0x1225c>
  46e5f0:	add	x23, x20, x0
  46e5f4:	b	46e618 <_obstack_memory_used@@Base+0x12228>
  46e5f8:	mov	x0, x1
  46e5fc:	add	x1, x1, #0x1
  46e600:	str	x1, [x19, #256]
  46e604:	add	x20, x20, #0x1
  46e608:	strb	w21, [x19, x0]
  46e60c:	cmp	x23, x20
  46e610:	strb	w21, [x19, #264]
  46e614:	b.eq	46e64c <_obstack_memory_used@@Base+0x1225c>  // b.none
  46e618:	ldrb	w21, [x20]
  46e61c:	cmp	x1, #0xff
  46e620:	b.ne	46e5f8 <_obstack_memory_used@@Base+0x12208>  // b.any
  46e624:	ldp	x3, x2, [x19, #272]
  46e628:	strb	wzr, [x19, #255]
  46e62c:	mov	x0, x19
  46e630:	blr	x3
  46e634:	ldr	x2, [x19, #320]
  46e638:	mov	x1, #0x1                   	// #1
  46e63c:	mov	x0, #0x0                   	// #0
  46e640:	add	x2, x2, x1
  46e644:	str	x2, [x19, #320]
  46e648:	b	46e600 <_obstack_memory_used@@Base+0x12210>
  46e64c:	cmp	x1, #0xff
  46e650:	b.eq	46eeb0 <_obstack_memory_used@@Base+0x12ac0>  // b.none
  46e654:	add	x22, x1, #0x1
  46e658:	str	x22, [x19, #256]
  46e65c:	mov	w0, #0x7d                  	// #125
  46e660:	strb	w0, [x19, x1]
  46e664:	strb	w0, [x19, #264]
  46e668:	ldp	x21, x22, [sp, #32]
  46e66c:	ldp	x23, x24, [sp, #48]
  46e670:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e674:	ldr	x2, [x20, #8]
  46e678:	mov	w1, w21
  46e67c:	mov	x0, x19
  46e680:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e684:	ldr	x1, [x19, #256]
  46e688:	add	x0, x1, #0x1
  46e68c:	cmp	x1, #0xff
  46e690:	b.ne	46e6b8 <_obstack_memory_used@@Base+0x122c8>  // b.any
  46e694:	ldp	x3, x2, [x19, #272]
  46e698:	strb	wzr, [x19, #255]
  46e69c:	mov	x0, x19
  46e6a0:	blr	x3
  46e6a4:	ldr	x2, [x19, #320]
  46e6a8:	mov	x0, #0x1                   	// #1
  46e6ac:	mov	x1, #0x0                   	// #0
  46e6b0:	add	x2, x2, x0
  46e6b4:	str	x2, [x19, #320]
  46e6b8:	str	x0, [x19, #256]
  46e6bc:	mov	w0, #0x29                  	// #41
  46e6c0:	strb	w0, [x19, x1]
  46e6c4:	strb	w0, [x19, #264]
  46e6c8:	ldp	x21, x22, [sp, #32]
  46e6cc:	ldp	x23, x24, [sp, #48]
  46e6d0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e6d4:	ldr	x2, [x20, #8]
  46e6d8:	mov	w1, w21
  46e6dc:	mov	x0, x19
  46e6e0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e6e4:	ldp	x21, x22, [sp, #32]
  46e6e8:	ldp	x23, x24, [sp, #48]
  46e6ec:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e6f0:	ldr	x2, [x20, #8]
  46e6f4:	mov	w1, w21
  46e6f8:	mov	x0, x19
  46e6fc:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e700:	ldp	x21, x22, [sp, #32]
  46e704:	ldp	x23, x24, [sp, #48]
  46e708:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e70c:	ldr	x2, [x20, #8]
  46e710:	mov	w1, w21
  46e714:	mov	x0, x19
  46e718:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46e71c:	add	x22, x22, #0xf58
  46e720:	mov	w23, #0x2d                  	// #45
  46e724:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e728:	add	x24, x22, #0x4
  46e72c:	ldr	x1, [x19, #256]
  46e730:	b	46e758 <_obstack_memory_used@@Base+0x12368>
  46e734:	mov	x0, x1
  46e738:	add	x1, x1, #0x1
  46e73c:	str	x1, [x19, #256]
  46e740:	add	x22, x22, #0x1
  46e744:	strb	w23, [x19, x0]
  46e748:	cmp	x24, x22
  46e74c:	strb	w23, [x19, #264]
  46e750:	b.eq	46e7c0 <_obstack_memory_used@@Base+0x123d0>  // b.none
  46e754:	ldrb	w23, [x22]
  46e758:	cmp	x1, #0xff
  46e75c:	b.ne	46e734 <_obstack_memory_used@@Base+0x12344>  // b.any
  46e760:	ldp	x3, x2, [x19, #272]
  46e764:	strb	wzr, [x19, #255]
  46e768:	mov	x0, x19
  46e76c:	blr	x3
  46e770:	ldr	x2, [x19, #320]
  46e774:	mov	x1, #0x1                   	// #1
  46e778:	mov	x0, #0x0                   	// #0
  46e77c:	add	x2, x2, x1
  46e780:	str	x2, [x19, #320]
  46e784:	b	46e73c <_obstack_memory_used@@Base+0x1234c>
  46e788:	ldr	x2, [x20, #8]
  46e78c:	mov	w1, w21
  46e790:	mov	x0, x19
  46e794:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e798:	ldp	x21, x22, [sp, #32]
  46e79c:	ldp	x23, x24, [sp, #48]
  46e7a0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e7a4:	ldr	x2, [x20, #8]
  46e7a8:	mov	w1, w21
  46e7ac:	mov	x0, x19
  46e7b0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e7b4:	ldp	x21, x22, [sp, #32]
  46e7b8:	ldp	x23, x24, [sp, #48]
  46e7bc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e7c0:	ldr	x2, [x20, #16]
  46e7c4:	mov	w1, w21
  46e7c8:	mov	x0, x19
  46e7cc:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e7d0:	ldp	x21, x22, [sp, #32]
  46e7d4:	ldp	x23, x24, [sp, #48]
  46e7d8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e7dc:	ldr	x2, [x20, #8]
  46e7e0:	mov	w1, w21
  46e7e4:	mov	x0, x19
  46e7e8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e7ec:	ldp	x21, x22, [sp, #32]
  46e7f0:	ldp	x23, x24, [sp, #48]
  46e7f4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e7f8:	ldr	x2, [x20, #8]
  46e7fc:	mov	w1, w21
  46e800:	mov	x0, x19
  46e804:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e808:	ldp	x21, x22, [sp, #32]
  46e80c:	ldp	x23, x24, [sp, #48]
  46e810:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e814:	ldr	x2, [x20, #8]
  46e818:	mov	w1, w21
  46e81c:	mov	x0, x19
  46e820:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e824:	ldp	x21, x22, [sp, #32]
  46e828:	ldp	x23, x24, [sp, #48]
  46e82c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e830:	ldr	x2, [x20, #8]
  46e834:	mov	w1, w21
  46e838:	mov	x0, x19
  46e83c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e840:	ldp	x21, x22, [sp, #32]
  46e844:	ldp	x23, x24, [sp, #48]
  46e848:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e84c:	ldr	x2, [x20, #8]
  46e850:	mov	w1, w21
  46e854:	mov	x0, x19
  46e858:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e85c:	ldp	x21, x22, [sp, #32]
  46e860:	ldp	x23, x24, [sp, #48]
  46e864:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e868:	ldr	x1, [x19, #368]
  46e86c:	cbz	x1, 46e880 <_obstack_memory_used@@Base+0x12490>
  46e870:	ldr	x2, [x19, #288]
  46e874:	add	x0, sp, #0x60
  46e878:	stp	x2, x1, [sp, #96]
  46e87c:	str	x0, [x19, #288]
  46e880:	ldr	x2, [x20, #8]
  46e884:	ldr	w0, [x2]
  46e888:	cmp	w0, #0x4
  46e88c:	b.eq	46f178 <_obstack_memory_used@@Base+0x12d88>  // b.none
  46e890:	mov	x0, x19
  46e894:	mov	w1, w21
  46e898:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e89c:	ldr	x0, [x19, #368]
  46e8a0:	cbz	x0, 46f594 <_obstack_memory_used@@Base+0x131a4>
  46e8a4:	ldr	x0, [sp, #96]
  46e8a8:	ldp	x21, x22, [sp, #32]
  46e8ac:	ldp	x23, x24, [sp, #48]
  46e8b0:	str	x0, [x19, #288]
  46e8b4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e8b8:	ldr	x2, [x20, #8]
  46e8bc:	mov	w1, w21
  46e8c0:	mov	x0, x19
  46e8c4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e8c8:	ldp	x21, x22, [sp, #32]
  46e8cc:	ldp	x23, x24, [sp, #48]
  46e8d0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e8d4:	mov	x2, x20
  46e8d8:	mov	w1, w21
  46e8dc:	mov	x0, x19
  46e8e0:	bl	4702f8 <_obstack_memory_used@@Base+0x13f08>
  46e8e4:	b	46c52c <_obstack_memory_used@@Base+0x1013c>
  46e8e8:	ldp	x21, x22, [sp, #32]
  46e8ec:	ldp	x23, x24, [sp, #48]
  46e8f0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e8f4:	ldp	x21, x22, [sp, #32]
  46e8f8:	ldp	x23, x24, [sp, #48]
  46e8fc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e900:	ldp	x21, x22, [sp, #32]
  46e904:	ldp	x23, x24, [sp, #48]
  46e908:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e90c:	ldp	x21, x22, [sp, #32]
  46e910:	ldp	x23, x24, [sp, #48]
  46e914:	ldp	x25, x26, [sp, #64]
  46e918:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e91c:	ldr	x2, [x20, #16]
  46e920:	mov	x0, x19
  46e924:	mov	w1, w21
  46e928:	ldr	x20, [x19, #320]
  46e92c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46e930:	ldr	x0, [x19, #320]
  46e934:	cmp	x0, x20
  46e938:	b.eq	46f530 <_obstack_memory_used@@Base+0x13140>  // b.none
  46e93c:	ldp	x21, x22, [sp, #32]
  46e940:	ldp	x23, x24, [sp, #48]
  46e944:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e948:	ldr	x25, [x25, #8]
  46e94c:	cbz	x25, 46f824 <_obstack_memory_used@@Base+0x13434>
  46e950:	add	x3, x3, #0x20
  46e954:	cmp	w24, #0x4
  46e958:	b.eq	46f4f8 <_obstack_memory_used@@Base+0x13108>  // b.none
  46e95c:	mov	x0, x4
  46e960:	b	46d794 <_obstack_memory_used@@Base+0x113a4>
  46e964:	ldr	x25, [x20, #8]
  46e968:	cbnz	w24, 46d2d4 <_obstack_memory_used@@Base+0x10ee4>
  46e96c:	ldp	x21, x22, [sp, #32]
  46e970:	ldp	x23, x24, [sp, #48]
  46e974:	ldp	x25, x26, [sp, #64]
  46e978:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46e97c:	mov	x20, x0
  46e980:	b	46c688 <_obstack_memory_used@@Base+0x10298>
  46e984:	add	x21, x20, x22
  46e988:	cmp	x21, x20
  46e98c:	b.ls	46fdd4 <_obstack_memory_used@@Base+0x139e4>  // b.plast
  46e990:	mov	w23, #0x5f                  	// #95
  46e994:	b	46e9e4 <_obstack_memory_used@@Base+0x125f4>
  46e998:	ldr	x1, [x19, #256]
  46e99c:	add	x0, x1, #0x1
  46e9a0:	cmp	x1, #0xff
  46e9a4:	b.ne	46e9cc <_obstack_memory_used@@Base+0x125dc>  // b.any
  46e9a8:	ldp	x3, x2, [x19, #272]
  46e9ac:	strb	wzr, [x19, #255]
  46e9b0:	mov	x0, x19
  46e9b4:	blr	x3
  46e9b8:	ldr	x2, [x19, #320]
  46e9bc:	mov	x0, #0x1                   	// #1
  46e9c0:	mov	x1, #0x0                   	// #0
  46e9c4:	add	x2, x2, x0
  46e9c8:	str	x2, [x19, #320]
  46e9cc:	str	x0, [x19, #256]
  46e9d0:	strb	w22, [x19, x1]
  46e9d4:	strb	w22, [x19, #264]
  46e9d8:	add	x20, x20, #0x1
  46e9dc:	cmp	x21, x20
  46e9e0:	b.ls	46ed98 <_obstack_memory_used@@Base+0x129a8>  // b.plast
  46e9e4:	sub	x0, x21, x20
  46e9e8:	ldrb	w22, [x20]
  46e9ec:	cmp	x0, #0x3
  46e9f0:	b.le	46e998 <_obstack_memory_used@@Base+0x125a8>
  46e9f4:	cmp	w22, #0x5f
  46e9f8:	b.ne	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.any
  46e9fc:	ldrb	w0, [x20, #1]
  46ea00:	cmp	w0, #0x5f
  46ea04:	b.ne	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.any
  46ea08:	ldrb	w0, [x20, #2]
  46ea0c:	cmp	w0, #0x55
  46ea10:	b.ne	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.any
  46ea14:	add	x24, x20, #0x3
  46ea18:	cmp	x21, x24
  46ea1c:	b.ls	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.plast
  46ea20:	mov	x2, #0x0                   	// #0
  46ea24:	b	46ea40 <_obstack_memory_used@@Base+0x12650>
  46ea28:	mov	w0, w1
  46ea2c:	sxtw	x0, w0
  46ea30:	add	x24, x24, #0x1
  46ea34:	add	x2, x0, x2, lsl #4
  46ea38:	cmp	x21, x24
  46ea3c:	b.eq	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.none
  46ea40:	ldrb	w0, [x24]
  46ea44:	sub	w1, w0, #0x30
  46ea48:	and	w3, w1, #0xff
  46ea4c:	cmp	w3, #0x9
  46ea50:	b.ls	46ea28 <_obstack_memory_used@@Base+0x12638>  // b.plast
  46ea54:	sub	w1, w0, #0x41
  46ea58:	and	w1, w1, #0xff
  46ea5c:	cmp	w1, #0x5
  46ea60:	b.hi	46fa64 <_obstack_memory_used@@Base+0x13674>  // b.pmore
  46ea64:	sub	w0, w0, #0x37
  46ea68:	b	46ea2c <_obstack_memory_used@@Base+0x1263c>
  46ea6c:	add	x1, x20, #0x8
  46ea70:	mov	x0, x19
  46ea74:	bl	468af8 <_obstack_memory_used@@Base+0xc708>
  46ea78:	mov	x2, x0
  46ea7c:	cbz	x0, 46c4e0 <_obstack_memory_used@@Base+0x100f0>
  46ea80:	ldr	w1, [x0]
  46ea84:	cmp	w1, #0x2f
  46ea88:	b.eq	46fae0 <_obstack_memory_used@@Base+0x136f0>  // b.none
  46ea8c:	ldr	x20, [x19, #288]
  46ea90:	mov	w1, w21
  46ea94:	mov	x0, x19
  46ea98:	ldr	x3, [x20]
  46ea9c:	str	x3, [x19, #288]
  46eaa0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46eaa4:	ldp	x21, x22, [sp, #32]
  46eaa8:	ldp	x23, x24, [sp, #48]
  46eaac:	str	x20, [x19, #288]
  46eab0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46eab4:	ldr	x2, [x20, #8]
  46eab8:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46eabc:	add	x1, x1, #0xed0
  46eac0:	add	x20, sp, #0x60
  46eac4:	add	w2, w2, #0x1
  46eac8:	mov	x0, x20
  46eacc:	bl	402e00 <sprintf@plt>
  46ead0:	mov	x0, x20
  46ead4:	bl	402d50 <strlen@plt>
  46ead8:	cbz	x0, 46fedc <_obstack_memory_used@@Base+0x13aec>
  46eadc:	add	x22, x20, x0
  46eae0:	ldr	x1, [x19, #256]
  46eae4:	b	46eb08 <_obstack_memory_used@@Base+0x12718>
  46eae8:	mov	x0, x1
  46eaec:	add	x1, x1, #0x1
  46eaf0:	str	x1, [x19, #256]
  46eaf4:	add	x20, x20, #0x1
  46eaf8:	strb	w21, [x19, x0]
  46eafc:	cmp	x22, x20
  46eb00:	strb	w21, [x19, #264]
  46eb04:	b.eq	46eda4 <_obstack_memory_used@@Base+0x129b4>  // b.none
  46eb08:	ldrb	w21, [x20]
  46eb0c:	cmp	x1, #0xff
  46eb10:	b.ne	46eae8 <_obstack_memory_used@@Base+0x126f8>  // b.any
  46eb14:	ldp	x3, x2, [x19, #272]
  46eb18:	strb	wzr, [x19, #255]
  46eb1c:	mov	x0, x19
  46eb20:	blr	x3
  46eb24:	ldr	x2, [x19, #320]
  46eb28:	mov	x1, #0x1                   	// #1
  46eb2c:	mov	x0, #0x0                   	// #0
  46eb30:	add	x2, x2, x1
  46eb34:	str	x2, [x19, #320]
  46eb38:	b	46eaf0 <_obstack_memory_used@@Base+0x12700>
  46eb3c:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46eb40:	add	x20, x20, #0x160
  46eb44:	add	x22, x20, #0x4
  46eb48:	mov	w21, #0x74                  	// #116
  46eb4c:	b	46eb74 <_obstack_memory_used@@Base+0x12784>
  46eb50:	mov	x0, x1
  46eb54:	add	x1, x1, #0x1
  46eb58:	str	x1, [x19, #256]
  46eb5c:	add	x20, x20, #0x1
  46eb60:	strb	w21, [x19, x0]
  46eb64:	cmp	x20, x22
  46eb68:	strb	w21, [x19, #264]
  46eb6c:	b.eq	46eba4 <_obstack_memory_used@@Base+0x127b4>  // b.none
  46eb70:	ldrb	w21, [x20]
  46eb74:	cmp	x1, #0xff
  46eb78:	b.ne	46eb50 <_obstack_memory_used@@Base+0x12760>  // b.any
  46eb7c:	ldp	x3, x2, [x19, #272]
  46eb80:	strb	wzr, [x19, #255]
  46eb84:	mov	x0, x19
  46eb88:	blr	x3
  46eb8c:	ldr	x2, [x19, #320]
  46eb90:	mov	x1, #0x1                   	// #1
  46eb94:	mov	x0, #0x0                   	// #0
  46eb98:	add	x2, x2, x1
  46eb9c:	str	x2, [x19, #320]
  46eba0:	b	46eb58 <_obstack_memory_used@@Base+0x12768>
  46eba4:	ldp	x21, x22, [sp, #32]
  46eba8:	ldp	x23, x24, [sp, #48]
  46ebac:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ebb0:	mov	w2, w23
  46ebb4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46ebb8:	add	x1, x1, #0xed0
  46ebbc:	add	x20, sp, #0x60
  46ebc0:	mov	x0, x20
  46ebc4:	bl	402e00 <sprintf@plt>
  46ebc8:	mov	x0, x20
  46ebcc:	bl	402d50 <strlen@plt>
  46ebd0:	ldr	x1, [x19, #256]
  46ebd4:	cbz	x0, 46ec34 <_obstack_memory_used@@Base+0x12844>
  46ebd8:	add	x22, x20, x0
  46ebdc:	b	46ec00 <_obstack_memory_used@@Base+0x12810>
  46ebe0:	mov	x0, x1
  46ebe4:	add	x1, x1, #0x1
  46ebe8:	str	x1, [x19, #256]
  46ebec:	add	x20, x20, #0x1
  46ebf0:	strb	w21, [x19, x0]
  46ebf4:	cmp	x20, x22
  46ebf8:	strb	w21, [x19, #264]
  46ebfc:	b.eq	46ec34 <_obstack_memory_used@@Base+0x12844>  // b.none
  46ec00:	ldrb	w21, [x20]
  46ec04:	cmp	x1, #0xff
  46ec08:	b.ne	46ebe0 <_obstack_memory_used@@Base+0x127f0>  // b.any
  46ec0c:	ldp	x3, x2, [x19, #272]
  46ec10:	strb	wzr, [x19, #255]
  46ec14:	mov	x0, x19
  46ec18:	blr	x3
  46ec1c:	ldr	x2, [x19, #320]
  46ec20:	mov	x1, #0x1                   	// #1
  46ec24:	mov	x0, #0x0                   	// #0
  46ec28:	add	x2, x2, x1
  46ec2c:	str	x2, [x19, #320]
  46ec30:	b	46ebe8 <_obstack_memory_used@@Base+0x127f8>
  46ec34:	add	x0, x1, #0x1
  46ec38:	cmp	x1, #0xff
  46ec3c:	b.ne	46ec64 <_obstack_memory_used@@Base+0x12874>  // b.any
  46ec40:	ldp	x3, x2, [x19, #272]
  46ec44:	strb	wzr, [x19, #255]
  46ec48:	mov	x0, x19
  46ec4c:	blr	x3
  46ec50:	ldr	x2, [x19, #320]
  46ec54:	mov	x0, #0x1                   	// #1
  46ec58:	mov	x1, #0x0                   	// #0
  46ec5c:	add	x2, x2, x0
  46ec60:	str	x2, [x19, #320]
  46ec64:	str	x0, [x19, #256]
  46ec68:	mov	w0, #0x7d                  	// #125
  46ec6c:	strb	w0, [x19, x1]
  46ec70:	strb	w0, [x19, #264]
  46ec74:	ldp	x21, x22, [sp, #32]
  46ec78:	ldp	x23, x24, [sp, #48]
  46ec7c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ec80:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46ec84:	add	x20, x20, #0xc8
  46ec88:	add	x22, x20, #0x6
  46ec8c:	mov	w21, #0x5f                  	// #95
  46ec90:	b	46ecb8 <_obstack_memory_used@@Base+0x128c8>
  46ec94:	mov	x0, x1
  46ec98:	add	x1, x1, #0x1
  46ec9c:	str	x1, [x19, #256]
  46eca0:	add	x20, x20, #0x1
  46eca4:	strb	w21, [x19, x0]
  46eca8:	cmp	x20, x22
  46ecac:	strb	w21, [x19, #264]
  46ecb0:	b.eq	46ece8 <_obstack_memory_used@@Base+0x128f8>  // b.none
  46ecb4:	ldrb	w21, [x20]
  46ecb8:	cmp	x1, #0xff
  46ecbc:	b.ne	46ec94 <_obstack_memory_used@@Base+0x128a4>  // b.any
  46ecc0:	ldp	x3, x2, [x19, #272]
  46ecc4:	strb	wzr, [x19, #255]
  46ecc8:	mov	x0, x19
  46eccc:	blr	x3
  46ecd0:	ldr	x2, [x19, #320]
  46ecd4:	mov	x1, #0x1                   	// #1
  46ecd8:	mov	x0, #0x0                   	// #0
  46ecdc:	add	x2, x2, x1
  46ece0:	str	x2, [x19, #320]
  46ece4:	b	46ec9c <_obstack_memory_used@@Base+0x128ac>
  46ece8:	ldp	x21, x22, [sp, #32]
  46ecec:	ldp	x23, x24, [sp, #48]
  46ecf0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ecf4:	ldp	x21, x22, [sp, #32]
  46ecf8:	ldp	x23, x24, [sp, #48]
  46ecfc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ed00:	ldrsw	x22, [x0, #24]
  46ed04:	ldr	x20, [x0, #16]
  46ed08:	cbz	x22, 46fdbc <_obstack_memory_used@@Base+0x139cc>
  46ed0c:	add	x22, x20, x22
  46ed10:	ldr	x1, [x19, #256]
  46ed14:	b	46ed38 <_obstack_memory_used@@Base+0x12948>
  46ed18:	mov	x0, x1
  46ed1c:	add	x1, x1, #0x1
  46ed20:	str	x1, [x19, #256]
  46ed24:	add	x20, x20, #0x1
  46ed28:	strb	w21, [x19, x0]
  46ed2c:	cmp	x20, x22
  46ed30:	strb	w21, [x19, #264]
  46ed34:	b.eq	46ed80 <_obstack_memory_used@@Base+0x12990>  // b.none
  46ed38:	ldrb	w21, [x20]
  46ed3c:	cmp	x1, #0xff
  46ed40:	b.ne	46ed18 <_obstack_memory_used@@Base+0x12928>  // b.any
  46ed44:	ldp	x3, x2, [x19, #272]
  46ed48:	strb	wzr, [x19, #255]
  46ed4c:	mov	x0, x19
  46ed50:	blr	x3
  46ed54:	ldr	x2, [x19, #320]
  46ed58:	mov	x1, #0x1                   	// #1
  46ed5c:	mov	x0, #0x0                   	// #0
  46ed60:	add	x2, x2, x1
  46ed64:	str	x2, [x19, #320]
  46ed68:	b	46ed20 <_obstack_memory_used@@Base+0x12930>
  46ed6c:	ldr	x1, [x19, #256]
  46ed70:	b	46cf88 <_obstack_memory_used@@Base+0x10b98>
  46ed74:	ldp	x21, x22, [sp, #32]
  46ed78:	ldp	x23, x24, [sp, #48]
  46ed7c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ed80:	ldp	x21, x22, [sp, #32]
  46ed84:	ldp	x23, x24, [sp, #48]
  46ed88:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ed8c:	ldp	x21, x22, [sp, #32]
  46ed90:	ldp	x23, x24, [sp, #48]
  46ed94:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ed98:	ldp	x21, x22, [sp, #32]
  46ed9c:	ldp	x23, x24, [sp, #48]
  46eda0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46eda4:	ldp	x21, x22, [sp, #32]
  46eda8:	ldp	x23, x24, [sp, #48]
  46edac:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46edb0:	ldr	x1, [x2, #8]
  46edb4:	ldr	w22, [x1, #28]
  46edb8:	cmp	w22, #0x6
  46edbc:	b.hi	46ee54 <_obstack_memory_used@@Base+0x12a64>  // b.pmore
  46edc0:	cbz	w22, 46c5a4 <_obstack_memory_used@@Base+0x101b4>
  46edc4:	ldr	x1, [x20, #16]
  46edc8:	ldr	w1, [x1]
  46edcc:	cbnz	w1, 46c5a4 <_obstack_memory_used@@Base+0x101b4>
  46edd0:	cmp	w0, #0x3e
  46edd4:	b.eq	470158 <_obstack_memory_used@@Base+0x13d68>  // b.none
  46edd8:	ldr	x2, [x20, #16]
  46eddc:	mov	w1, w21
  46ede0:	mov	x0, x19
  46ede4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46ede8:	cmp	w22, #0x4
  46edec:	b.eq	470138 <_obstack_memory_used@@Base+0x13d48>  // b.none
  46edf0:	b.hi	46fffc <_obstack_memory_used@@Base+0x13c0c>  // b.pmore
  46edf4:	cmp	w22, #0x2
  46edf8:	b.eq	4700e8 <_obstack_memory_used@@Base+0x13cf8>  // b.none
  46edfc:	cmp	w22, #0x3
  46ee00:	b.ne	470230 <_obstack_memory_used@@Base+0x13e40>  // b.any
  46ee04:	ldr	x1, [x19, #256]
  46ee08:	cmp	x1, #0xff
  46ee0c:	b.ne	46ee34 <_obstack_memory_used@@Base+0x12a44>  // b.any
  46ee10:	ldp	x3, x2, [x19, #272]
  46ee14:	strb	wzr, [x19, #255]
  46ee18:	mov	x0, x19
  46ee1c:	blr	x3
  46ee20:	str	xzr, [x19, #256]
  46ee24:	ldr	x0, [x19, #320]
  46ee28:	mov	x1, #0x0                   	// #0
  46ee2c:	add	x0, x0, #0x1
  46ee30:	str	x0, [x19, #320]
  46ee34:	add	x0, x1, #0x1
  46ee38:	str	x0, [x19, #256]
  46ee3c:	mov	w0, #0x6c                  	// #108
  46ee40:	strb	w0, [x19, x1]
  46ee44:	strb	w0, [x19, #264]
  46ee48:	ldp	x21, x22, [sp, #32]
  46ee4c:	ldp	x23, x24, [sp, #48]
  46ee50:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ee54:	cmp	w22, #0x7
  46ee58:	b.ne	46c5a4 <_obstack_memory_used@@Base+0x101b4>  // b.any
  46ee5c:	ldr	x1, [x20, #16]
  46ee60:	ldr	w3, [x1]
  46ee64:	cbnz	w3, 46c5a4 <_obstack_memory_used@@Base+0x101b4>
  46ee68:	ldr	w3, [x1, #16]
  46ee6c:	cmp	w0, #0x3d
  46ee70:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  46ee74:	b.ne	46c5a4 <_obstack_memory_used@@Base+0x101b4>  // b.any
  46ee78:	ldr	x0, [x1, #8]
  46ee7c:	ldrb	w0, [x0]
  46ee80:	cmp	w0, #0x30
  46ee84:	b.eq	47023c <_obstack_memory_used@@Base+0x13e4c>  // b.none
  46ee88:	cmp	w0, #0x31
  46ee8c:	b.ne	46c5a4 <_obstack_memory_used@@Base+0x101b4>  // b.any
  46ee90:	mov	x0, x19
  46ee94:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46ee98:	mov	x2, #0x4                   	// #4
  46ee9c:	add	x1, x1, #0x128
  46eea0:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  46eea4:	ldp	x21, x22, [sp, #32]
  46eea8:	ldp	x23, x24, [sp, #48]
  46eeac:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46eeb0:	ldp	x3, x2, [x19, #272]
  46eeb4:	strb	wzr, [x19, #255]
  46eeb8:	mov	x0, x19
  46eebc:	blr	x3
  46eec0:	ldr	x0, [x19, #320]
  46eec4:	mov	x1, #0x0                   	// #0
  46eec8:	add	x0, x0, #0x1
  46eecc:	str	x0, [x19, #320]
  46eed0:	b	46e658 <_obstack_memory_used@@Base+0x12268>
  46eed4:	ldr	x0, [x22, #8]
  46eed8:	ldr	x23, [x0]
  46eedc:	ldrb	w0, [x23]
  46eee0:	subs	w1, w0, #0x61
  46eee4:	b.ne	46eef8 <_obstack_memory_used@@Base+0x12b08>  // b.any
  46eee8:	ldrb	w1, [x23, #1]
  46eeec:	subs	w1, w1, #0x64
  46eef0:	b.ne	46eef8 <_obstack_memory_used@@Base+0x12b08>  // b.any
  46eef4:	ldrb	w1, [x23, #2]
  46eef8:	ldr	w2, [x20]
  46eefc:	cbnz	w1, 46ef08 <_obstack_memory_used@@Base+0x12b18>
  46ef00:	cmp	w2, #0x3
  46ef04:	b.eq	46ff00 <_obstack_memory_used@@Base+0x13b10>  // b.none
  46ef08:	cmp	w2, #0x39
  46ef0c:	b.eq	46ffa8 <_obstack_memory_used@@Base+0x13bb8>  // b.none
  46ef10:	cmp	w0, #0x73
  46ef14:	b.ne	46efe4 <_obstack_memory_used@@Base+0x12bf4>  // b.any
  46ef18:	ldrb	w1, [x23, #1]
  46ef1c:	cmp	w1, #0x5a
  46ef20:	b.ne	46f030 <_obstack_memory_used@@Base+0x12c40>  // b.any
  46ef24:	ldrb	w3, [x23, #2]
  46ef28:	cbnz	w3, 46f030 <_obstack_memory_used@@Base+0x12c40>
  46ef2c:	mov	x1, x20
  46ef30:	mov	x0, x19
  46ef34:	bl	468b28 <_obstack_memory_used@@Base+0xc738>
  46ef38:	cbnz	x0, 46ef54 <_obstack_memory_used@@Base+0x12b64>
  46ef3c:	b	46ef60 <_obstack_memory_used@@Base+0x12b70>
  46ef40:	ldr	x1, [x0, #8]
  46ef44:	cbz	x1, 46ef60 <_obstack_memory_used@@Base+0x12b70>
  46ef48:	ldr	x0, [x0, #16]
  46ef4c:	add	w3, w3, #0x1
  46ef50:	cbz	x0, 46ef60 <_obstack_memory_used@@Base+0x12b70>
  46ef54:	ldr	w1, [x0]
  46ef58:	cmp	w1, #0x2f
  46ef5c:	b.eq	46ef40 <_obstack_memory_used@@Base+0x12b50>  // b.none
  46ef60:	mov	w2, w3
  46ef64:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46ef68:	add	x1, x1, #0xed0
  46ef6c:	add	x20, sp, #0x60
  46ef70:	mov	x0, x20
  46ef74:	bl	402e00 <sprintf@plt>
  46ef78:	mov	x0, x20
  46ef7c:	bl	402d50 <strlen@plt>
  46ef80:	cbz	x0, 4700b4 <_obstack_memory_used@@Base+0x13cc4>
  46ef84:	add	x22, x20, x0
  46ef88:	ldr	x1, [x19, #256]
  46ef8c:	b	46efb0 <_obstack_memory_used@@Base+0x12bc0>
  46ef90:	mov	x0, x1
  46ef94:	add	x1, x1, #0x1
  46ef98:	str	x1, [x19, #256]
  46ef9c:	add	x20, x20, #0x1
  46efa0:	strb	w21, [x19, x0]
  46efa4:	cmp	x20, x22
  46efa8:	strb	w21, [x19, #264]
  46efac:	b.eq	46feb8 <_obstack_memory_used@@Base+0x13ac8>  // b.none
  46efb0:	ldrb	w21, [x20]
  46efb4:	cmp	x1, #0xff
  46efb8:	b.ne	46ef90 <_obstack_memory_used@@Base+0x12ba0>  // b.any
  46efbc:	ldp	x3, x2, [x19, #272]
  46efc0:	strb	wzr, [x19, #255]
  46efc4:	mov	x0, x19
  46efc8:	blr	x3
  46efcc:	ldr	x2, [x19, #320]
  46efd0:	mov	x1, #0x1                   	// #1
  46efd4:	mov	x0, #0x0                   	// #0
  46efd8:	add	x2, x2, x1
  46efdc:	str	x2, [x19, #320]
  46efe0:	b	46ef98 <_obstack_memory_used@@Base+0x12ba8>
  46efe4:	mov	x0, x19
  46efe8:	mov	x2, x22
  46efec:	mov	w1, w21
  46eff0:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  46eff4:	ldrb	w0, [x23]
  46eff8:	cmp	w0, #0x67
  46effc:	b.ne	46f0c0 <_obstack_memory_used@@Base+0x12cd0>  // b.any
  46f000:	ldrb	w1, [x23, #1]
  46f004:	cmp	w1, #0x73
  46f008:	b.ne	46f0c0 <_obstack_memory_used@@Base+0x12cd0>  // b.any
  46f00c:	ldrb	w1, [x23, #2]
  46f010:	cbnz	w1, 46f0c0 <_obstack_memory_used@@Base+0x12cd0>
  46f014:	mov	w1, w21
  46f018:	mov	x2, x20
  46f01c:	mov	x0, x19
  46f020:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f024:	ldp	x21, x22, [sp, #32]
  46f028:	ldp	x23, x24, [sp, #48]
  46f02c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f030:	cmp	w0, #0x73
  46f034:	b.ne	46efe4 <_obstack_memory_used@@Base+0x12bf4>  // b.any
  46f038:	ldrb	w0, [x23, #1]
  46f03c:	cmp	w0, #0x50
  46f040:	b.ne	46efe4 <_obstack_memory_used@@Base+0x12bf4>  // b.any
  46f044:	ldrb	w0, [x23, #2]
  46f048:	mov	w3, #0x0                   	// #0
  46f04c:	cbz	w0, 46f060 <_obstack_memory_used@@Base+0x12c70>
  46f050:	b	46efe4 <_obstack_memory_used@@Base+0x12bf4>
  46f054:	add	w3, w3, #0x1
  46f058:	ldr	x20, [x20, #16]
  46f05c:	cbz	x20, 46fb24 <_obstack_memory_used@@Base+0x13734>
  46f060:	ldr	w0, [x20]
  46f064:	cmp	w0, #0x2f
  46f068:	b.ne	46fb24 <_obstack_memory_used@@Base+0x13734>  // b.any
  46f06c:	ldr	x0, [x20, #8]
  46f070:	cbz	x0, 46fb24 <_obstack_memory_used@@Base+0x13734>
  46f074:	ldr	w1, [x0]
  46f078:	cmp	w1, #0x4b
  46f07c:	b.ne	46f054 <_obstack_memory_used@@Base+0x12c64>  // b.any
  46f080:	ldr	x1, [x0, #8]
  46f084:	mov	x0, x19
  46f088:	bl	468b28 <_obstack_memory_used@@Base+0xc738>
  46f08c:	mov	w1, #0x0                   	// #0
  46f090:	cbnz	x0, 46f0ac <_obstack_memory_used@@Base+0x12cbc>
  46f094:	b	46f0b8 <_obstack_memory_used@@Base+0x12cc8>
  46f098:	ldr	x2, [x0, #8]
  46f09c:	cbz	x2, 46f0b8 <_obstack_memory_used@@Base+0x12cc8>
  46f0a0:	ldr	x0, [x0, #16]
  46f0a4:	add	w1, w1, #0x1
  46f0a8:	cbz	x0, 46f0b8 <_obstack_memory_used@@Base+0x12cc8>
  46f0ac:	ldr	w2, [x0]
  46f0b0:	cmp	w2, #0x2f
  46f0b4:	b.eq	46f098 <_obstack_memory_used@@Base+0x12ca8>  // b.none
  46f0b8:	add	w3, w3, w1
  46f0bc:	b	46f058 <_obstack_memory_used@@Base+0x12c68>
  46f0c0:	cmp	w0, #0x73
  46f0c4:	b.ne	46e054 <_obstack_memory_used@@Base+0x11c64>  // b.any
  46f0c8:	ldrb	w0, [x23, #1]
  46f0cc:	cmp	w0, #0x74
  46f0d0:	b.ne	46e054 <_obstack_memory_used@@Base+0x11c64>  // b.any
  46f0d4:	ldrb	w0, [x23, #2]
  46f0d8:	cbnz	w0, 46e054 <_obstack_memory_used@@Base+0x11c64>
  46f0dc:	ldr	x1, [x19, #256]
  46f0e0:	cmp	x1, #0xff
  46f0e4:	b.ne	46f108 <_obstack_memory_used@@Base+0x12d18>  // b.any
  46f0e8:	ldp	x3, x2, [x19, #272]
  46f0ec:	strb	wzr, [x19, #255]
  46f0f0:	mov	x0, x19
  46f0f4:	blr	x3
  46f0f8:	ldr	x0, [x19, #320]
  46f0fc:	mov	x1, #0x0                   	// #0
  46f100:	add	x0, x0, #0x1
  46f104:	str	x0, [x19, #320]
  46f108:	add	x0, x1, #0x1
  46f10c:	str	x0, [x19, #256]
  46f110:	mov	w0, #0x28                  	// #40
  46f114:	strb	w0, [x19, x1]
  46f118:	strb	w0, [x19, #264]
  46f11c:	mov	w1, w21
  46f120:	mov	x2, x20
  46f124:	mov	x0, x19
  46f128:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f12c:	ldr	x1, [x19, #256]
  46f130:	cmp	x1, #0xff
  46f134:	b.ne	46f158 <_obstack_memory_used@@Base+0x12d68>  // b.any
  46f138:	ldp	x3, x2, [x19, #272]
  46f13c:	strb	wzr, [x19, #255]
  46f140:	mov	x0, x19
  46f144:	blr	x3
  46f148:	ldr	x0, [x19, #320]
  46f14c:	mov	x1, #0x0                   	// #0
  46f150:	add	x0, x0, #0x1
  46f154:	str	x0, [x19, #320]
  46f158:	add	x0, x1, #0x1
  46f15c:	str	x0, [x19, #256]
  46f160:	mov	w0, #0x29                  	// #41
  46f164:	strb	w0, [x19, x1]
  46f168:	strb	w0, [x19, #264]
  46f16c:	ldp	x21, x22, [sp, #32]
  46f170:	ldp	x23, x24, [sp, #48]
  46f174:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f178:	ldr	x2, [x2, #8]
  46f17c:	mov	x0, x19
  46f180:	mov	w1, w21
  46f184:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f188:	ldr	x0, [x19, #368]
  46f18c:	cbz	x0, 46f198 <_obstack_memory_used@@Base+0x12da8>
  46f190:	ldr	x0, [sp, #96]
  46f194:	str	x0, [x19, #288]
  46f198:	ldr	x1, [x19, #256]
  46f19c:	ldrb	w2, [x19, #264]
  46f1a0:	mov	x0, x1
  46f1a4:	cmp	w2, #0x3c
  46f1a8:	b.eq	46fc00 <_obstack_memory_used@@Base+0x13810>  // b.none
  46f1ac:	add	x1, x0, #0x1
  46f1b0:	cmp	x0, #0xff
  46f1b4:	b.ne	46f1e0 <_obstack_memory_used@@Base+0x12df0>  // b.any
  46f1b8:	ldp	x3, x2, [x19, #272]
  46f1bc:	strb	wzr, [x19, #255]
  46f1c0:	mov	x1, x0
  46f1c4:	mov	x0, x19
  46f1c8:	blr	x3
  46f1cc:	ldr	x2, [x19, #320]
  46f1d0:	mov	x1, #0x1                   	// #1
  46f1d4:	mov	x0, #0x0                   	// #0
  46f1d8:	add	x2, x2, x1
  46f1dc:	str	x2, [x19, #320]
  46f1e0:	str	x1, [x19, #256]
  46f1e4:	mov	w2, #0x3c                  	// #60
  46f1e8:	strb	w2, [x19, x0]
  46f1ec:	mov	w1, w21
  46f1f0:	strb	w2, [x19, #264]
  46f1f4:	mov	x0, x19
  46f1f8:	ldr	x2, [x20, #8]
  46f1fc:	ldr	x2, [x2, #16]
  46f200:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f204:	ldrb	w0, [x19, #264]
  46f208:	cmp	w0, #0x3e
  46f20c:	b.eq	46fc44 <_obstack_memory_used@@Base+0x13854>  // b.none
  46f210:	ldr	x0, [x19, #256]
  46f214:	add	x1, x0, #0x1
  46f218:	cmp	x0, #0xff
  46f21c:	b.ne	46f248 <_obstack_memory_used@@Base+0x12e58>  // b.any
  46f220:	ldp	x3, x2, [x19, #272]
  46f224:	strb	wzr, [x19, #255]
  46f228:	mov	x1, x0
  46f22c:	mov	x0, x19
  46f230:	blr	x3
  46f234:	ldr	x2, [x19, #320]
  46f238:	mov	x1, #0x1                   	// #1
  46f23c:	mov	x0, #0x0                   	// #0
  46f240:	add	x2, x2, x1
  46f244:	str	x2, [x19, #320]
  46f248:	str	x1, [x19, #256]
  46f24c:	mov	w1, #0x3e                  	// #62
  46f250:	strb	w1, [x19, x0]
  46f254:	strb	w1, [x19, #264]
  46f258:	ldp	x21, x22, [sp, #32]
  46f25c:	ldp	x23, x24, [sp, #48]
  46f260:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f264:	mov	x2, x20
  46f268:	mov	w1, w21
  46f26c:	mov	x0, x19
  46f270:	bl	4702f8 <_obstack_memory_used@@Base+0x13f08>
  46f274:	b	46c758 <_obstack_memory_used@@Base+0x10368>
  46f278:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46f27c:	add	x24, x24, #0xb8
  46f280:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46f284:	add	x24, x24, #0x5
  46f288:	add	x22, x22, #0xb9
  46f28c:	mov	w23, #0x5f                  	// #95
  46f290:	ldr	x1, [x19, #256]
  46f294:	b	46f2b8 <_obstack_memory_used@@Base+0x12ec8>
  46f298:	mov	x0, x1
  46f29c:	add	x1, x1, #0x1
  46f2a0:	str	x1, [x19, #256]
  46f2a4:	cmp	x24, x22
  46f2a8:	strb	w23, [x19, x0]
  46f2ac:	strb	w23, [x19, #264]
  46f2b0:	b.eq	46cf18 <_obstack_memory_used@@Base+0x10b28>  // b.none
  46f2b4:	ldrb	w23, [x22], #1
  46f2b8:	cmp	x1, #0xff
  46f2bc:	b.ne	46f298 <_obstack_memory_used@@Base+0x12ea8>  // b.any
  46f2c0:	ldp	x3, x2, [x19, #272]
  46f2c4:	strb	wzr, [x19, #255]
  46f2c8:	mov	x0, x19
  46f2cc:	blr	x3
  46f2d0:	ldr	x2, [x19, #320]
  46f2d4:	mov	x1, #0x1                   	// #1
  46f2d8:	mov	x0, #0x0                   	// #0
  46f2dc:	add	x2, x2, x1
  46f2e0:	str	x2, [x19, #320]
  46f2e4:	b	46f2a0 <_obstack_memory_used@@Base+0x12eb0>
  46f2e8:	mov	x23, #0x0                   	// #0
  46f2ec:	mov	w22, #0x3a                  	// #58
  46f2f0:	ldr	x1, [x19, #256]
  46f2f4:	b	46f314 <_obstack_memory_used@@Base+0x12f24>
  46f2f8:	mov	x0, x1
  46f2fc:	add	x1, x1, #0x1
  46f300:	str	x1, [x19, #256]
  46f304:	strb	w22, [x19, x0]
  46f308:	strb	w22, [x19, #264]
  46f30c:	cbnz	x23, 46c6fc <_obstack_memory_used@@Base+0x1030c>
  46f310:	mov	x23, #0x1                   	// #1
  46f314:	cmp	x1, #0xff
  46f318:	b.ne	46f2f8 <_obstack_memory_used@@Base+0x12f08>  // b.any
  46f31c:	ldp	x3, x2, [x19, #272]
  46f320:	strb	wzr, [x19, #255]
  46f324:	mov	x0, x19
  46f328:	blr	x3
  46f32c:	ldr	x2, [x19, #320]
  46f330:	mov	x1, #0x1                   	// #1
  46f334:	mov	x0, #0x0                   	// #0
  46f338:	add	x2, x2, x1
  46f33c:	str	x2, [x19, #320]
  46f340:	b	46f300 <_obstack_memory_used@@Base+0x12f10>
  46f344:	ldr	x1, [x19, #256]
  46f348:	cmp	x1, #0xff
  46f34c:	b.ne	46f370 <_obstack_memory_used@@Base+0x12f80>  // b.any
  46f350:	ldp	x3, x2, [x19, #272]
  46f354:	strb	wzr, [x19, #255]
  46f358:	mov	x0, x19
  46f35c:	blr	x3
  46f360:	ldr	x0, [x19, #320]
  46f364:	mov	x1, #0x0                   	// #0
  46f368:	add	x0, x0, #0x1
  46f36c:	str	x0, [x19, #320]
  46f370:	add	x0, x1, #0x1
  46f374:	str	x0, [x19, #256]
  46f378:	mov	w0, #0x5b                  	// #91
  46f37c:	strb	w0, [x19, x1]
  46f380:	strb	w0, [x19, #264]
  46f384:	mov	w1, w21
  46f388:	mov	x0, x19
  46f38c:	ldr	x2, [x20, #16]
  46f390:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f394:	ldr	x1, [x19, #256]
  46f398:	cmp	x1, #0xff
  46f39c:	b.ne	46f3c0 <_obstack_memory_used@@Base+0x12fd0>  // b.any
  46f3a0:	ldp	x3, x2, [x19, #272]
  46f3a4:	strb	wzr, [x19, #255]
  46f3a8:	mov	x0, x19
  46f3ac:	blr	x3
  46f3b0:	ldr	x0, [x19, #320]
  46f3b4:	mov	x1, #0x0                   	// #0
  46f3b8:	add	x0, x0, #0x1
  46f3bc:	str	x0, [x19, #320]
  46f3c0:	add	x0, x1, #0x1
  46f3c4:	str	x0, [x19, #256]
  46f3c8:	mov	w0, #0x5d                  	// #93
  46f3cc:	strb	w0, [x19, x1]
  46f3d0:	strb	w0, [x19, #264]
  46f3d4:	ldp	x21, x22, [sp, #32]
  46f3d8:	ldp	x23, x24, [sp, #48]
  46f3dc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f3e0:	ldr	x0, [x19, #256]
  46f3e4:	cmp	x0, #0xff
  46f3e8:	b.ne	46f410 <_obstack_memory_used@@Base+0x13020>  // b.any
  46f3ec:	ldp	x3, x2, [x19, #272]
  46f3f0:	strb	wzr, [x19, #255]
  46f3f4:	mov	x1, x0
  46f3f8:	mov	x0, x19
  46f3fc:	blr	x3
  46f400:	ldr	x1, [x19, #320]
  46f404:	mov	x0, #0x0                   	// #0
  46f408:	add	x1, x1, #0x1
  46f40c:	str	x1, [x19, #320]
  46f410:	add	x1, x0, #0x1
  46f414:	str	x1, [x19, #256]
  46f418:	mov	w2, #0x20                  	// #32
  46f41c:	strb	w2, [x19, x0]
  46f420:	strb	w2, [x19, #264]
  46f424:	b	46d948 <_obstack_memory_used@@Base+0x11558>
  46f428:	ldr	x0, [x19, #256]
  46f42c:	cmp	x0, #0xff
  46f430:	b.ne	46f458 <_obstack_memory_used@@Base+0x13068>  // b.any
  46f434:	ldp	x3, x2, [x19, #272]
  46f438:	strb	wzr, [x19, #255]
  46f43c:	mov	x1, x0
  46f440:	mov	x0, x19
  46f444:	blr	x3
  46f448:	ldr	x1, [x19, #320]
  46f44c:	mov	x0, #0x0                   	// #0
  46f450:	add	x1, x1, #0x1
  46f454:	str	x1, [x19, #320]
  46f458:	add	x1, x0, #0x1
  46f45c:	str	x1, [x19, #256]
  46f460:	mov	w2, #0x20                  	// #32
  46f464:	strb	w2, [x19, x0]
  46f468:	strb	w2, [x19, #264]
  46f46c:	b	46d8e8 <_obstack_memory_used@@Base+0x114f8>
  46f470:	add	x2, x20, #0x10
  46f474:	mov	w1, w22
  46f478:	mov	x0, x19
  46f47c:	bl	470af8 <_obstack_memory_used@@Base+0x14708>
  46f480:	ldr	x2, [x20, #8]
  46f484:	cbz	x2, 46fcb0 <_obstack_memory_used@@Base+0x138c0>
  46f488:	mov	w1, w22
  46f48c:	mov	x0, x19
  46f490:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f494:	ldp	x21, x22, [sp, #32]
  46f498:	ldp	x23, x24, [sp, #48]
  46f49c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f4a0:	ldp	x3, x2, [x19, #272]
  46f4a4:	strb	wzr, [x19, #255]
  46f4a8:	mov	x0, x19
  46f4ac:	blr	x3
  46f4b0:	ldr	x0, [x19, #320]
  46f4b4:	mov	w1, #0x29                  	// #41
  46f4b8:	strb	w1, [x19]
  46f4bc:	strb	w1, [x19, #264]
  46f4c0:	mov	x1, #0x1                   	// #1
  46f4c4:	add	x0, x0, x1
  46f4c8:	str	x1, [x19, #256]
  46f4cc:	str	x0, [x19, #320]
  46f4d0:	ldr	w0, [x20]
  46f4d4:	cmp	w0, #0x3e
  46f4d8:	b.ne	46c624 <_obstack_memory_used@@Base+0x10234>  // b.any
  46f4dc:	ldr	x1, [x19, #256]
  46f4e0:	mov	w0, #0x2d                  	// #45
  46f4e4:	add	x2, x1, #0x1
  46f4e8:	str	x2, [x19, #256]
  46f4ec:	strb	w0, [x19, x1]
  46f4f0:	strb	w0, [x19, #264]
  46f4f4:	b	46c624 <_obstack_memory_used@@Base+0x10234>
  46f4f8:	ldp	x21, x22, [sp, #32]
  46f4fc:	ldp	x23, x24, [sp, #48]
  46f500:	ldp	x25, x26, [sp, #64]
  46f504:	str	x4, [x19, #296]
  46f508:	str	w1, [x19, #304]
  46f50c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f510:	ldp	x21, x22, [sp, #32]
  46f514:	ldp	x23, x24, [sp, #48]
  46f518:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f51c:	ldp	x21, x22, [sp, #32]
  46f520:	ldp	x23, x24, [sp, #48]
  46f524:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f528:	mov	w22, #0x0                   	// #0
  46f52c:	b	46c688 <_obstack_memory_used@@Base+0x10298>
  46f530:	ldr	x0, [x19, #256]
  46f534:	cmp	x0, x22
  46f538:	b.eq	46fcec <_obstack_memory_used@@Base+0x138fc>  // b.none
  46f53c:	ldp	x21, x22, [sp, #32]
  46f540:	ldp	x23, x24, [sp, #48]
  46f544:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f548:	ldr	x2, [x20, #8]
  46f54c:	mov	w1, w21
  46f550:	mov	x0, x19
  46f554:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f558:	ldp	x21, x22, [sp, #32]
  46f55c:	ldp	x23, x24, [sp, #48]
  46f560:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f564:	cmp	x3, #0xff
  46f568:	b.ne	46f4dc <_obstack_memory_used@@Base+0x130ec>  // b.any
  46f56c:	ldp	x4, x2, [x19, #272]
  46f570:	strb	wzr, [x19, #255]
  46f574:	mov	x0, x19
  46f578:	mov	x1, x3
  46f57c:	blr	x4
  46f580:	str	xzr, [x19, #256]
  46f584:	ldr	x0, [x19, #320]
  46f588:	add	x0, x0, #0x1
  46f58c:	str	x0, [x19, #320]
  46f590:	b	46f4dc <_obstack_memory_used@@Base+0x130ec>
  46f594:	ldp	x21, x22, [sp, #32]
  46f598:	ldp	x23, x24, [sp, #48]
  46f59c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f5a0:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46f5a4:	add	x24, x24, #0xec0
  46f5a8:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46f5ac:	add	x24, x24, #0xd
  46f5b0:	add	x22, x22, #0xec1
  46f5b4:	mov	w20, #0x7b                  	// #123
  46f5b8:	ldr	x1, [x19, #256]
  46f5bc:	b	46f5e0 <_obstack_memory_used@@Base+0x131f0>
  46f5c0:	mov	x0, x1
  46f5c4:	add	x1, x1, #0x1
  46f5c8:	str	x1, [x19, #256]
  46f5cc:	cmp	x24, x22
  46f5d0:	strb	w20, [x19, x0]
  46f5d4:	strb	w20, [x19, #264]
  46f5d8:	b.eq	46f610 <_obstack_memory_used@@Base+0x13220>  // b.none
  46f5dc:	ldrb	w20, [x22], #1
  46f5e0:	cmp	x1, #0xff
  46f5e4:	b.ne	46f5c0 <_obstack_memory_used@@Base+0x131d0>  // b.any
  46f5e8:	ldp	x3, x2, [x19, #272]
  46f5ec:	strb	wzr, [x19, #255]
  46f5f0:	mov	x0, x19
  46f5f4:	blr	x3
  46f5f8:	ldr	x2, [x19, #320]
  46f5fc:	mov	x1, #0x1                   	// #1
  46f600:	mov	x0, #0x0                   	// #0
  46f604:	add	x2, x2, x1
  46f608:	str	x2, [x19, #320]
  46f60c:	b	46f5c8 <_obstack_memory_used@@Base+0x131d8>
  46f610:	ldr	w2, [x23, #16]
  46f614:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46f618:	add	x1, x1, #0xed0
  46f61c:	add	x20, sp, #0x60
  46f620:	add	w2, w2, #0x1
  46f624:	mov	x0, x20
  46f628:	bl	402e00 <sprintf@plt>
  46f62c:	mov	x0, x20
  46f630:	bl	402d50 <strlen@plt>
  46f634:	ldr	x1, [x19, #256]
  46f638:	cbz	x0, 46f698 <_obstack_memory_used@@Base+0x132a8>
  46f63c:	add	x24, x20, x0
  46f640:	b	46f664 <_obstack_memory_used@@Base+0x13274>
  46f644:	mov	x0, x1
  46f648:	add	x1, x1, #0x1
  46f64c:	str	x1, [x19, #256]
  46f650:	add	x20, x20, #0x1
  46f654:	strb	w22, [x19, x0]
  46f658:	cmp	x24, x20
  46f65c:	strb	w22, [x19, #264]
  46f660:	b.eq	46f698 <_obstack_memory_used@@Base+0x132a8>  // b.none
  46f664:	ldrb	w22, [x20]
  46f668:	cmp	x1, #0xff
  46f66c:	b.ne	46f644 <_obstack_memory_used@@Base+0x13254>  // b.any
  46f670:	ldp	x3, x2, [x19, #272]
  46f674:	strb	wzr, [x19, #255]
  46f678:	mov	x0, x19
  46f67c:	blr	x3
  46f680:	ldr	x2, [x19, #320]
  46f684:	mov	x1, #0x1                   	// #1
  46f688:	mov	x0, #0x0                   	// #0
  46f68c:	add	x2, x2, x1
  46f690:	str	x2, [x19, #320]
  46f694:	b	46f64c <_obstack_memory_used@@Base+0x1325c>
  46f698:	adrp	x20, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46f69c:	add	x20, x20, #0xed8
  46f6a0:	add	x24, x20, #0x3
  46f6a4:	mov	w22, #0x7d                  	// #125
  46f6a8:	b	46f6d0 <_obstack_memory_used@@Base+0x132e0>
  46f6ac:	mov	x0, x1
  46f6b0:	add	x1, x1, #0x1
  46f6b4:	str	x1, [x19, #256]
  46f6b8:	add	x20, x20, #0x1
  46f6bc:	strb	w22, [x19, x0]
  46f6c0:	cmp	x24, x20
  46f6c4:	strb	w22, [x19, #264]
  46f6c8:	b.eq	46f700 <_obstack_memory_used@@Base+0x13310>  // b.none
  46f6cc:	ldrb	w22, [x20]
  46f6d0:	cmp	x1, #0xff
  46f6d4:	b.ne	46f6ac <_obstack_memory_used@@Base+0x132bc>  // b.any
  46f6d8:	ldp	x3, x2, [x19, #272]
  46f6dc:	strb	wzr, [x19, #255]
  46f6e0:	mov	x0, x19
  46f6e4:	blr	x3
  46f6e8:	ldr	x2, [x19, #320]
  46f6ec:	mov	x1, #0x1                   	// #1
  46f6f0:	mov	x0, #0x0                   	// #0
  46f6f4:	add	x2, x2, x1
  46f6f8:	str	x2, [x19, #320]
  46f6fc:	b	46f6b4 <_obstack_memory_used@@Base+0x132c4>
  46f700:	ldr	x23, [x23, #8]
  46f704:	b	46c70c <_obstack_memory_used@@Base+0x1031c>
  46f708:	ldr	x25, [x25, #16]
  46f70c:	ldr	w5, [x25]
  46f710:	cmp	w5, #0x47
  46f714:	b.eq	46fdac <_obstack_memory_used@@Base+0x139bc>  // b.none
  46f718:	ubfiz	x3, x24, #5, #32
  46f71c:	sub	w0, w5, #0x1c
  46f720:	mov	x1, #0x1f                  	// #31
  46f724:	add	x3, x23, x3
  46f728:	cmp	w0, #0x34
  46f72c:	mov	x2, #0x1                   	// #1
  46f730:	movk	x1, #0x1a, lsl #48
  46f734:	b.hi	46d7d4 <_obstack_memory_used@@Base+0x113e4>  // b.pmore
  46f738:	lsl	x0, x2, x0
  46f73c:	tst	x0, x1
  46f740:	b.eq	46d7d4 <_obstack_memory_used@@Base+0x113e4>  // b.none
  46f744:	cmp	w24, #0x4
  46f748:	b.eq	46f828 <_obstack_memory_used@@Base+0x13438>  // b.none
  46f74c:	ldp	x8, x9, [x3, #-32]
  46f750:	stur	x25, [x3, #-24]
  46f754:	ldp	x4, x5, [x3, #-16]
  46f758:	stur	wzr, [x3, #-16]
  46f75c:	stp	x8, x9, [x3]
  46f760:	sub	x0, x3, #0x20
  46f764:	add	w24, w24, #0x1
  46f768:	ldr	x25, [x25, #8]
  46f76c:	stp	x4, x5, [x3, #16]
  46f770:	ldr	w5, [x25]
  46f774:	stp	x6, x0, [x3, #-8]
  46f778:	sub	w0, w5, #0x1c
  46f77c:	str	x3, [x19, #296]
  46f780:	cmp	w0, #0x34
  46f784:	add	x3, x3, #0x20
  46f788:	b.ls	46f738 <_obstack_memory_used@@Base+0x13348>  // b.plast
  46f78c:	b	46d7d4 <_obstack_memory_used@@Base+0x113e4>
  46f790:	mov	w0, #0x1                   	// #1
  46f794:	ldp	x21, x22, [sp, #32]
  46f798:	ldp	x23, x24, [sp, #48]
  46f79c:	str	w0, [x19, #304]
  46f7a0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f7a4:	ldr	x4, [x19, #288]
  46f7a8:	add	x0, sp, #0x60
  46f7ac:	str	x0, [x19, #296]
  46f7b0:	mov	w1, w22
  46f7b4:	mov	x0, x19
  46f7b8:	stp	x3, x20, [sp, #96]
  46f7bc:	str	wzr, [sp, #112]
  46f7c0:	str	x4, [sp, #120]
  46f7c4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f7c8:	ldr	w0, [sp, #112]
  46f7cc:	ldr	x1, [sp, #96]
  46f7d0:	str	x1, [x19, #296]
  46f7d4:	cbnz	w0, 46fef4 <_obstack_memory_used@@Base+0x13b04>
  46f7d8:	ldr	x1, [x19, #256]
  46f7dc:	cmp	x1, #0xff
  46f7e0:	b.ne	46f808 <_obstack_memory_used@@Base+0x13418>  // b.any
  46f7e4:	ldp	x3, x2, [x19, #272]
  46f7e8:	strb	wzr, [x19, #255]
  46f7ec:	mov	x0, x19
  46f7f0:	blr	x3
  46f7f4:	str	xzr, [x19, #256]
  46f7f8:	ldr	x0, [x19, #320]
  46f7fc:	mov	x1, #0x0                   	// #0
  46f800:	add	x0, x0, #0x1
  46f804:	str	x0, [x19, #320]
  46f808:	add	x0, x1, #0x1
  46f80c:	str	x0, [x19, #256]
  46f810:	mov	w0, #0x20                  	// #32
  46f814:	strb	w0, [x19, x1]
  46f818:	strb	w0, [x19, #264]
  46f81c:	ldr	x3, [x19, #296]
  46f820:	b	46ccac <_obstack_memory_used@@Base+0x108bc>
  46f824:	str	x3, [x19, #296]
  46f828:	mov	w0, #0x1                   	// #1
  46f82c:	ldp	x21, x22, [sp, #32]
  46f830:	ldp	x23, x24, [sp, #48]
  46f834:	ldp	x25, x26, [sp, #64]
  46f838:	str	w0, [x19, #304]
  46f83c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46f840:	ldrb	w0, [x0]
  46f844:	sub	w1, w0, #0x63
  46f848:	sub	w0, w0, #0x72
  46f84c:	and	w1, w1, #0xff
  46f850:	and	w0, w0, #0xff
  46f854:	cmp	w1, #0x1
  46f858:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  46f85c:	b.hi	46db0c <_obstack_memory_used@@Base+0x1171c>  // b.pmore
  46f860:	mov	w1, w21
  46f864:	mov	x0, x19
  46f868:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  46f86c:	ldr	x1, [x19, #256]
  46f870:	cmp	x1, #0xff
  46f874:	b.ne	46f89c <_obstack_memory_used@@Base+0x134ac>  // b.any
  46f878:	ldp	x3, x2, [x19, #272]
  46f87c:	strb	wzr, [x19, #255]
  46f880:	mov	x0, x19
  46f884:	blr	x3
  46f888:	str	xzr, [x19, #256]
  46f88c:	ldr	x0, [x19, #320]
  46f890:	mov	x1, #0x0                   	// #0
  46f894:	add	x0, x0, #0x1
  46f898:	str	x0, [x19, #320]
  46f89c:	add	x0, x1, #0x1
  46f8a0:	str	x0, [x19, #256]
  46f8a4:	mov	w0, #0x3c                  	// #60
  46f8a8:	strb	w0, [x19, x1]
  46f8ac:	strb	w0, [x19, #264]
  46f8b0:	mov	w1, w21
  46f8b4:	mov	x0, x19
  46f8b8:	mov	w22, #0x3e                  	// #62
  46f8bc:	ldr	x2, [x20, #16]
  46f8c0:	mov	x23, #0x0                   	// #0
  46f8c4:	ldr	x2, [x2, #8]
  46f8c8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46f8cc:	ldr	x1, [x19, #256]
  46f8d0:	b	46f8f4 <_obstack_memory_used@@Base+0x13504>
  46f8d4:	mov	x0, x1
  46f8d8:	add	x1, x1, #0x1
  46f8dc:	str	x1, [x19, #256]
  46f8e0:	strb	w22, [x19, x0]
  46f8e4:	strb	w22, [x19, #264]
  46f8e8:	mov	w22, #0x28                  	// #40
  46f8ec:	cbnz	x23, 46fa7c <_obstack_memory_used@@Base+0x1368c>
  46f8f0:	mov	x23, #0x1                   	// #1
  46f8f4:	cmp	x1, #0xff
  46f8f8:	b.ne	46f8d4 <_obstack_memory_used@@Base+0x134e4>  // b.any
  46f8fc:	ldp	x3, x2, [x19, #272]
  46f900:	strb	wzr, [x19, #255]
  46f904:	mov	x0, x19
  46f908:	blr	x3
  46f90c:	ldr	x2, [x19, #320]
  46f910:	mov	x1, #0x1                   	// #1
  46f914:	mov	x0, #0x0                   	// #0
  46f918:	add	x2, x2, x1
  46f91c:	str	x2, [x19, #320]
  46f920:	b	46f8dc <_obstack_memory_used@@Base+0x134ec>
  46f924:	ldr	w4, [x19, #344]
  46f928:	ldr	x5, [x19, #336]
  46f92c:	cmp	w4, #0x0
  46f930:	b.le	46ff24 <_obstack_memory_used@@Base+0x13b34>
  46f934:	sub	w3, w4, #0x1
  46f938:	add	x1, x5, #0x10
  46f93c:	mov	x2, x5
  46f940:	add	x3, x1, w3, uxtw #4
  46f944:	b	46f954 <_obstack_memory_used@@Base+0x13564>
  46f948:	add	x2, x2, #0x10
  46f94c:	cmp	x3, x2
  46f950:	b.eq	46ff24 <_obstack_memory_used@@Base+0x13b34>  // b.none
  46f954:	ldr	x1, [x2]
  46f958:	cmp	x0, x1
  46f95c:	b.ne	46f948 <_obstack_memory_used@@Base+0x13558>  // b.any
  46f960:	ldr	x4, [x19, #328]
  46f964:	mov	x1, x4
  46f968:	cbnz	x4, 46f984 <_obstack_memory_used@@Base+0x13594>
  46f96c:	b	46fd88 <_obstack_memory_used@@Base+0x13998>
  46f970:	cmp	x3, x20
  46f974:	ccmp	x4, x1, #0x4, eq  // eq = none
  46f978:	b.ne	46f990 <_obstack_memory_used@@Base+0x135a0>  // b.any
  46f97c:	ldr	x1, [x1, #8]
  46f980:	cbz	x1, 46fd88 <_obstack_memory_used@@Base+0x13998>
  46f984:	ldr	x3, [x1]
  46f988:	cmp	x3, x0
  46f98c:	b.ne	46f970 <_obstack_memory_used@@Base+0x13580>  // b.any
  46f990:	add	x1, x0, #0x8
  46f994:	mov	x0, x19
  46f998:	bl	468af8 <_obstack_memory_used@@Base+0xc708>
  46f99c:	cbz	x0, 46c4e0 <_obstack_memory_used@@Base+0x100f0>
  46f9a0:	mov	w22, #0x0                   	// #0
  46f9a4:	ldr	w1, [x0]
  46f9a8:	cmp	w1, #0x2f
  46f9ac:	b.ne	46c664 <_obstack_memory_used@@Base+0x10274>  // b.any
  46f9b0:	ldr	w1, [x19, #316]
  46f9b4:	tbnz	w1, #31, 4700c0 <_obstack_memory_used@@Base+0x13cd0>
  46f9b8:	bl	468ab8 <_obstack_memory_used@@Base+0xc6c8>
  46f9bc:	cbz	x0, 4700d4 <_obstack_memory_used@@Base+0x13ce4>
  46f9c0:	ldr	w1, [x0]
  46f9c4:	b	46c664 <_obstack_memory_used@@Base+0x10274>
  46f9c8:	ldr	x2, [x20, #8]
  46f9cc:	add	x3, x20, #0x10
  46f9d0:	mov	w1, w21
  46f9d4:	mov	x0, x19
  46f9d8:	bl	4715b0 <_obstack_memory_used@@Base+0x151c0>
  46f9dc:	cbnz	w0, 46feac <_obstack_memory_used@@Base+0x13abc>
  46f9e0:	ldp	x24, x3, [x20, #8]
  46f9e4:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46f9e8:	add	x1, x1, #0xf0
  46f9ec:	ldr	x0, [x24, #8]
  46f9f0:	ldp	x22, x2, [x3, #8]
  46f9f4:	ldr	x0, [x0]
  46f9f8:	ldp	x23, x20, [x2, #8]
  46f9fc:	bl	403220 <strcmp@plt>
  46fa00:	cbnz	w0, 46fe0c <_obstack_memory_used@@Base+0x13a1c>
  46fa04:	mov	x2, x22
  46fa08:	mov	w1, w21
  46fa0c:	mov	x0, x19
  46fa10:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fa14:	mov	x2, x24
  46fa18:	mov	w1, w21
  46fa1c:	mov	x0, x19
  46fa20:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  46fa24:	mov	x2, x23
  46fa28:	mov	w1, w21
  46fa2c:	mov	x0, x19
  46fa30:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fa34:	mov	x0, x19
  46fa38:	mov	x2, #0x3                   	// #3
  46fa3c:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46fa40:	add	x1, x1, #0xf8
  46fa44:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  46fa48:	mov	w1, w21
  46fa4c:	mov	x2, x20
  46fa50:	mov	x0, x19
  46fa54:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fa58:	ldp	x21, x22, [sp, #32]
  46fa5c:	ldp	x23, x24, [sp, #48]
  46fa60:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fa64:	sub	w1, w0, #0x61
  46fa68:	and	w1, w1, #0xff
  46fa6c:	cmp	w1, #0x5
  46fa70:	b.hi	470030 <_obstack_memory_used@@Base+0x13c40>  // b.pmore
  46fa74:	sub	w0, w0, #0x57
  46fa78:	b	46ea2c <_obstack_memory_used@@Base+0x1263c>
  46fa7c:	ldr	x2, [x20, #16]
  46fa80:	mov	w1, w21
  46fa84:	mov	x0, x19
  46fa88:	ldr	x2, [x2, #16]
  46fa8c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46fa90:	ldr	x1, [x19, #256]
  46fa94:	cmp	x1, #0xff
  46fa98:	b.ne	46fac0 <_obstack_memory_used@@Base+0x136d0>  // b.any
  46fa9c:	ldp	x3, x2, [x19, #272]
  46faa0:	strb	wzr, [x19, #255]
  46faa4:	mov	x0, x19
  46faa8:	blr	x3
  46faac:	str	xzr, [x19, #256]
  46fab0:	ldr	x0, [x19, #320]
  46fab4:	mov	x1, #0x0                   	// #0
  46fab8:	add	x0, x0, #0x1
  46fabc:	str	x0, [x19, #320]
  46fac0:	add	x0, x1, #0x1
  46fac4:	str	x0, [x19, #256]
  46fac8:	mov	w0, #0x29                  	// #41
  46facc:	strb	w0, [x19, x1]
  46fad0:	strb	w0, [x19, #264]
  46fad4:	ldp	x21, x22, [sp, #32]
  46fad8:	ldp	x23, x24, [sp, #48]
  46fadc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fae0:	ldr	w1, [x19, #316]
  46fae4:	tbnz	w1, #31, 46ea8c <_obstack_memory_used@@Base+0x1269c>
  46fae8:	bl	468ab8 <_obstack_memory_used@@Base+0xc6c8>
  46faec:	mov	x2, x0
  46faf0:	cbnz	x0, 46ea8c <_obstack_memory_used@@Base+0x1269c>
  46faf4:	b	46c4e0 <_obstack_memory_used@@Base+0x100f0>
  46faf8:	cmp	w1, #0x63
  46fafc:	b.eq	46fec4 <_obstack_memory_used@@Base+0x13ad4>  // b.none
  46fb00:	mov	w1, w21
  46fb04:	mov	x0, x19
  46fb08:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  46fb0c:	ldr	x2, [x20, #16]
  46fb10:	mov	w1, w21
  46fb14:	mov	x0, x19
  46fb18:	ldr	x2, [x2, #16]
  46fb1c:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fb20:	b	46dc40 <_obstack_memory_used@@Base+0x11850>
  46fb24:	mov	w2, w3
  46fb28:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46fb2c:	add	x1, x1, #0xed0
  46fb30:	add	x20, sp, #0x60
  46fb34:	mov	x0, x20
  46fb38:	bl	402e00 <sprintf@plt>
  46fb3c:	mov	x0, x20
  46fb40:	bl	402d50 <strlen@plt>
  46fb44:	cbz	x0, 4701a0 <_obstack_memory_used@@Base+0x13db0>
  46fb48:	add	x22, x20, x0
  46fb4c:	ldr	x1, [x19, #256]
  46fb50:	b	46fb74 <_obstack_memory_used@@Base+0x13784>
  46fb54:	mov	x0, x1
  46fb58:	add	x1, x1, #0x1
  46fb5c:	str	x1, [x19, #256]
  46fb60:	add	x20, x20, #0x1
  46fb64:	strb	w21, [x19, x0]
  46fb68:	cmp	x22, x20
  46fb6c:	strb	w21, [x19, #264]
  46fb70:	b.eq	46fbb4 <_obstack_memory_used@@Base+0x137c4>  // b.none
  46fb74:	ldrb	w21, [x20]
  46fb78:	cmp	x1, #0xff
  46fb7c:	b.ne	46fb54 <_obstack_memory_used@@Base+0x13764>  // b.any
  46fb80:	ldp	x3, x2, [x19, #272]
  46fb84:	strb	wzr, [x19, #255]
  46fb88:	mov	x0, x19
  46fb8c:	blr	x3
  46fb90:	ldr	x2, [x19, #320]
  46fb94:	mov	x1, #0x1                   	// #1
  46fb98:	mov	x0, #0x0                   	// #0
  46fb9c:	add	x2, x2, x1
  46fba0:	str	x2, [x19, #320]
  46fba4:	b	46fb5c <_obstack_memory_used@@Base+0x1376c>
  46fba8:	ldp	x21, x22, [sp, #32]
  46fbac:	ldp	x23, x24, [sp, #48]
  46fbb0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fbb4:	ldp	x21, x22, [sp, #32]
  46fbb8:	ldp	x23, x24, [sp, #48]
  46fbbc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fbc0:	ldr	x0, [x22, #8]
  46fbc4:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46fbc8:	mov	x2, #0x6                   	// #6
  46fbcc:	add	x1, x1, #0xee0
  46fbd0:	bl	402f80 <strncmp@plt>
  46fbd4:	cbnz	w0, 46d8c8 <_obstack_memory_used@@Base+0x114d8>
  46fbd8:	ldr	x2, [x20, #16]
  46fbdc:	mov	w1, w21
  46fbe0:	mov	x0, x19
  46fbe4:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46fbe8:	mov	x0, x19
  46fbec:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  46fbf0:	mov	x2, #0x2                   	// #2
  46fbf4:	add	x1, x1, #0xee8
  46fbf8:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  46fbfc:	b	46d988 <_obstack_memory_used@@Base+0x11598>
  46fc00:	cmp	x1, #0xff
  46fc04:	b.ne	46fc2c <_obstack_memory_used@@Base+0x1383c>  // b.any
  46fc08:	ldp	x3, x2, [x19, #272]
  46fc0c:	strb	wzr, [x19, #255]
  46fc10:	mov	x0, x19
  46fc14:	blr	x3
  46fc18:	str	xzr, [x19, #256]
  46fc1c:	ldr	x0, [x19, #320]
  46fc20:	mov	x1, #0x0                   	// #0
  46fc24:	add	x0, x0, #0x1
  46fc28:	str	x0, [x19, #320]
  46fc2c:	add	x0, x1, #0x1
  46fc30:	str	x0, [x19, #256]
  46fc34:	mov	w2, #0x20                  	// #32
  46fc38:	strb	w2, [x19, x1]
  46fc3c:	strb	w2, [x19, #264]
  46fc40:	b	46f1ac <_obstack_memory_used@@Base+0x12dbc>
  46fc44:	ldr	x1, [x19, #256]
  46fc48:	cmp	x1, #0xff
  46fc4c:	b.ne	46fc74 <_obstack_memory_used@@Base+0x13884>  // b.any
  46fc50:	ldp	x3, x2, [x19, #272]
  46fc54:	strb	wzr, [x19, #255]
  46fc58:	mov	x0, x19
  46fc5c:	blr	x3
  46fc60:	str	xzr, [x19, #256]
  46fc64:	ldr	x0, [x19, #320]
  46fc68:	mov	x1, #0x0                   	// #0
  46fc6c:	add	x0, x0, #0x1
  46fc70:	str	x0, [x19, #320]
  46fc74:	add	x0, x1, #0x1
  46fc78:	str	x0, [x19, #256]
  46fc7c:	mov	w2, #0x20                  	// #32
  46fc80:	strb	w2, [x19, x1]
  46fc84:	strb	w2, [x19, #264]
  46fc88:	b	46f214 <_obstack_memory_used@@Base+0x12e24>
  46fc8c:	ldp	x21, x22, [sp, #32]
  46fc90:	ldp	x23, x24, [sp, #48]
  46fc94:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fc98:	ldp	x21, x22, [sp, #32]
  46fc9c:	ldp	x23, x24, [sp, #48]
  46fca0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fca4:	ldp	x21, x22, [sp, #32]
  46fca8:	ldp	x23, x24, [sp, #48]
  46fcac:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fcb0:	ldp	x21, x22, [sp, #32]
  46fcb4:	ldp	x23, x24, [sp, #48]
  46fcb8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fcbc:	ldr	x2, [x20, #8]
  46fcc0:	mov	w1, w21
  46fcc4:	mov	x0, x19
  46fcc8:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fccc:	mov	x0, x19
  46fcd0:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46fcd4:	mov	x2, #0x3                   	// #3
  46fcd8:	add	x1, x1, #0x150
  46fcdc:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  46fce0:	ldp	x21, x22, [sp, #32]
  46fce4:	ldp	x23, x24, [sp, #48]
  46fce8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fcec:	sub	x22, x22, #0x2
  46fcf0:	ldp	x23, x24, [sp, #48]
  46fcf4:	str	x22, [x19, #256]
  46fcf8:	ldp	x21, x22, [sp, #32]
  46fcfc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fd00:	ldr	x0, [x0, #8]
  46fd04:	ldr	w1, [x0, #16]
  46fd08:	cmp	w1, #0x1
  46fd0c:	b.eq	470090 <_obstack_memory_used@@Base+0x13ca0>  // b.none
  46fd10:	ldp	x21, x22, [sp, #32]
  46fd14:	ldp	x23, x24, [sp, #48]
  46fd18:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fd1c:	ldr	x1, [x0, #8]
  46fd20:	ldr	w2, [x1, #16]
  46fd24:	cmp	w2, #0x1
  46fd28:	b.ne	46db30 <_obstack_memory_used@@Base+0x11740>  // b.any
  46fd2c:	ldr	x1, [x1, #8]
  46fd30:	ldrb	w1, [x1]
  46fd34:	cmp	w1, #0x3e
  46fd38:	b.ne	46db30 <_obstack_memory_used@@Base+0x11740>  // b.any
  46fd3c:	ldr	x1, [x19, #256]
  46fd40:	cmp	x1, #0xff
  46fd44:	b.ne	46fd6c <_obstack_memory_used@@Base+0x1397c>  // b.any
  46fd48:	ldp	x3, x2, [x19, #272]
  46fd4c:	strb	wzr, [x19, #255]
  46fd50:	mov	x0, x19
  46fd54:	blr	x3
  46fd58:	str	xzr, [x19, #256]
  46fd5c:	ldr	x0, [x19, #320]
  46fd60:	mov	x1, #0x0                   	// #0
  46fd64:	add	x0, x0, #0x1
  46fd68:	str	x0, [x19, #320]
  46fd6c:	add	x0, x1, #0x1
  46fd70:	str	x0, [x19, #256]
  46fd74:	mov	w0, #0x28                  	// #40
  46fd78:	strb	w0, [x19, x1]
  46fd7c:	strb	w0, [x19, #264]
  46fd80:	ldr	x0, [x20, #8]
  46fd84:	b	46db30 <_obstack_memory_used@@Base+0x11740>
  46fd88:	ldr	x2, [x2, #8]
  46fd8c:	add	x1, x0, #0x8
  46fd90:	ldr	x23, [x19, #288]
  46fd94:	str	x2, [x19, #288]
  46fd98:	mov	x0, x19
  46fd9c:	bl	468af8 <_obstack_memory_used@@Base+0xc708>
  46fda0:	cbz	x0, 4700d8 <_obstack_memory_used@@Base+0x13ce8>
  46fda4:	mov	w22, #0x1                   	// #1
  46fda8:	b	46f9a4 <_obstack_memory_used@@Base+0x135b4>
  46fdac:	ldr	x25, [x25, #8]
  46fdb0:	cbz	x25, 46f828 <_obstack_memory_used@@Base+0x13438>
  46fdb4:	ldr	w5, [x25]
  46fdb8:	b	46f718 <_obstack_memory_used@@Base+0x13328>
  46fdbc:	ldp	x21, x22, [sp, #32]
  46fdc0:	ldp	x23, x24, [sp, #48]
  46fdc4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fdc8:	ldp	x21, x22, [sp, #32]
  46fdcc:	ldp	x23, x24, [sp, #48]
  46fdd0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fdd4:	ldp	x21, x22, [sp, #32]
  46fdd8:	ldp	x23, x24, [sp, #48]
  46fddc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fde0:	ldr	x0, [x2, #16]
  46fde4:	ldr	w0, [x0]
  46fde8:	cmp	w0, #0x29
  46fdec:	b.eq	46fdf8 <_obstack_memory_used@@Base+0x13a08>  // b.none
  46fdf0:	mov	w0, #0x1                   	// #1
  46fdf4:	str	w0, [x19, #304]
  46fdf8:	ldr	x2, [x2, #8]
  46fdfc:	mov	w1, w21
  46fe00:	mov	x0, x19
  46fe04:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fe08:	b	46db78 <_obstack_memory_used@@Base+0x11788>
  46fe0c:	mov	x0, x19
  46fe10:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  46fe14:	mov	x2, #0x4                   	// #4
  46fe18:	add	x1, x1, #0x100
  46fe1c:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  46fe20:	ldr	x0, [x22, #8]
  46fe24:	cbz	x0, 46fe7c <_obstack_memory_used@@Base+0x13a8c>
  46fe28:	mov	w1, w21
  46fe2c:	mov	x2, x22
  46fe30:	mov	x0, x19
  46fe34:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fe38:	ldr	x1, [x19, #256]
  46fe3c:	cmp	x1, #0xff
  46fe40:	b.ne	46fe68 <_obstack_memory_used@@Base+0x13a78>  // b.any
  46fe44:	ldp	x3, x2, [x19, #272]
  46fe48:	strb	wzr, [x19, #255]
  46fe4c:	mov	x0, x19
  46fe50:	blr	x3
  46fe54:	str	xzr, [x19, #256]
  46fe58:	ldr	x0, [x19, #320]
  46fe5c:	mov	x1, #0x0                   	// #0
  46fe60:	add	x0, x0, #0x1
  46fe64:	str	x0, [x19, #320]
  46fe68:	add	x0, x1, #0x1
  46fe6c:	str	x0, [x19, #256]
  46fe70:	mov	w0, #0x20                  	// #32
  46fe74:	strb	w0, [x19, x1]
  46fe78:	strb	w0, [x19, #264]
  46fe7c:	mov	x2, x23
  46fe80:	mov	w1, w21
  46fe84:	mov	x0, x19
  46fe88:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46fe8c:	cbz	x20, 470024 <_obstack_memory_used@@Base+0x13c34>
  46fe90:	mov	w1, w21
  46fe94:	mov	x2, x20
  46fe98:	mov	x0, x19
  46fe9c:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46fea0:	ldp	x21, x22, [sp, #32]
  46fea4:	ldp	x23, x24, [sp, #48]
  46fea8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46feac:	ldp	x21, x22, [sp, #32]
  46feb0:	ldp	x23, x24, [sp, #48]
  46feb4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46feb8:	ldp	x21, x22, [sp, #32]
  46febc:	ldp	x23, x24, [sp, #48]
  46fec0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fec4:	ldrb	w1, [x0, #1]
  46fec8:	cmp	w1, #0x6c
  46fecc:	b.ne	46fb00 <_obstack_memory_used@@Base+0x13710>  // b.any
  46fed0:	ldrb	w0, [x0, #2]
  46fed4:	cbz	w0, 46fb0c <_obstack_memory_used@@Base+0x1371c>
  46fed8:	b	46fb00 <_obstack_memory_used@@Base+0x13710>
  46fedc:	ldp	x21, x22, [sp, #32]
  46fee0:	ldp	x23, x24, [sp, #48]
  46fee4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fee8:	ldp	x21, x22, [sp, #32]
  46feec:	ldp	x23, x24, [sp, #48]
  46fef0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fef4:	ldp	x21, x22, [sp, #32]
  46fef8:	ldp	x23, x24, [sp, #48]
  46fefc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ff00:	ldr	x1, [x20, #8]
  46ff04:	ldr	w2, [x1]
  46ff08:	cmp	w2, #0x1
  46ff0c:	b.ne	46ef10 <_obstack_memory_used@@Base+0x12b20>  // b.any
  46ff10:	ldr	x2, [x20, #16]
  46ff14:	ldr	w2, [x2]
  46ff18:	cmp	w2, #0x29
  46ff1c:	csel	x20, x20, x1, ne  // ne = any
  46ff20:	b	46ef10 <_obstack_memory_used@@Base+0x12b20>
  46ff24:	ldr	w1, [x19, #348]
  46ff28:	cmp	w4, w1
  46ff2c:	b.ge	46ff94 <_obstack_memory_used@@Base+0x13ba4>  // b.tcont
  46ff30:	sbfiz	x1, x4, #4, #32
  46ff34:	add	w2, w4, #0x1
  46ff38:	ldr	x3, [x19, #288]
  46ff3c:	str	w2, [x19, #344]
  46ff40:	str	x0, [x5, x1]
  46ff44:	add	x1, x5, w4, sxtw #4
  46ff48:	add	x1, x1, #0x8
  46ff4c:	cbz	x3, 4700ac <_obstack_memory_used@@Base+0x13cbc>
  46ff50:	ldr	w2, [x19, #360]
  46ff54:	ldr	w6, [x19, #364]
  46ff58:	sbfiz	x5, x2, #4, #32
  46ff5c:	b	46ff8c <_obstack_memory_used@@Base+0x13b9c>
  46ff60:	ldr	x4, [x19, #352]
  46ff64:	add	w2, w2, #0x1
  46ff68:	ldr	x7, [x3, #8]
  46ff6c:	add	x4, x4, x5
  46ff70:	str	w2, [x19, #360]
  46ff74:	add	x5, x5, #0x10
  46ff78:	str	x7, [x4, #8]
  46ff7c:	str	x4, [x1]
  46ff80:	mov	x1, x4
  46ff84:	ldr	x3, [x3]
  46ff88:	cbz	x3, 4700ac <_obstack_memory_used@@Base+0x13cbc>
  46ff8c:	cmp	w6, w2
  46ff90:	b.gt	46ff60 <_obstack_memory_used@@Base+0x13b70>
  46ff94:	mov	w0, #0x1                   	// #1
  46ff98:	ldp	x21, x22, [sp, #32]
  46ff9c:	ldp	x23, x24, [sp, #48]
  46ffa0:	str	w0, [x19, #304]
  46ffa4:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ffa8:	ldr	x2, [x20, #8]
  46ffac:	mov	w1, w21
  46ffb0:	mov	x0, x19
  46ffb4:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  46ffb8:	mov	x2, x22
  46ffbc:	mov	w1, w21
  46ffc0:	mov	x0, x19
  46ffc4:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  46ffc8:	ldp	x21, x22, [sp, #32]
  46ffcc:	ldp	x23, x24, [sp, #48]
  46ffd0:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46ffd4:	ldr	x2, [x20, #16]
  46ffd8:	mov	x0, x19
  46ffdc:	mov	w1, w21
  46ffe0:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  46ffe4:	str	xzr, [x19, #296]
  46ffe8:	ldr	w0, [sp, #112]
  46ffec:	cbz	w0, 46cef0 <_obstack_memory_used@@Base+0x10b00>
  46fff0:	ldp	x21, x22, [sp, #32]
  46fff4:	ldp	x23, x24, [sp, #48]
  46fff8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  46fffc:	cmp	w22, #0x5
  470000:	b.eq	4701ac <_obstack_memory_used@@Base+0x13dbc>  // b.none
  470004:	mov	x0, x19
  470008:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  47000c:	mov	x2, #0x3                   	// #3
  470010:	add	x1, x1, #0x118
  470014:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  470018:	ldp	x21, x22, [sp, #32]
  47001c:	ldp	x23, x24, [sp, #48]
  470020:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  470024:	ldp	x21, x22, [sp, #32]
  470028:	ldp	x23, x24, [sp, #48]
  47002c:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  470030:	cmp	x21, x24
  470034:	b.ls	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.plast
  470038:	cmp	x2, #0xff
  47003c:	ccmp	w0, w23, #0x0, ls  // ls = plast
  470040:	b.ne	46e998 <_obstack_memory_used@@Base+0x125a8>  // b.any
  470044:	ldr	x1, [x19, #256]
  470048:	and	w22, w2, #0xff
  47004c:	cmp	x1, #0xff
  470050:	b.ne	470078 <_obstack_memory_used@@Base+0x13c88>  // b.any
  470054:	ldp	x3, x2, [x19, #272]
  470058:	strb	wzr, [x19, #255]
  47005c:	mov	x0, x19
  470060:	blr	x3
  470064:	str	xzr, [x19, #256]
  470068:	ldr	x0, [x19, #320]
  47006c:	mov	x1, #0x0                   	// #0
  470070:	add	x0, x0, #0x1
  470074:	str	x0, [x19, #320]
  470078:	add	x0, x1, #0x1
  47007c:	str	x0, [x19, #256]
  470080:	strb	w22, [x19, x1]
  470084:	mov	x20, x24
  470088:	strb	w22, [x19, #264]
  47008c:	b	46e9d8 <_obstack_memory_used@@Base+0x125e8>
  470090:	ldr	x0, [x0, #8]
  470094:	ldrb	w0, [x0]
  470098:	cmp	w0, #0x3e
  47009c:	b.eq	4701cc <_obstack_memory_used@@Base+0x13ddc>  // b.none
  4700a0:	ldp	x21, x22, [sp, #32]
  4700a4:	ldp	x23, x24, [sp, #48]
  4700a8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  4700ac:	str	xzr, [x1]
  4700b0:	b	46f990 <_obstack_memory_used@@Base+0x135a0>
  4700b4:	ldp	x21, x22, [sp, #32]
  4700b8:	ldp	x23, x24, [sp, #48]
  4700bc:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  4700c0:	ldr	w1, [x20]
  4700c4:	ldr	x4, [x19, #296]
  4700c8:	cmp	w1, #0x2f
  4700cc:	csel	x20, x20, x0, ne  // ne = any
  4700d0:	b	46c688 <_obstack_memory_used@@Base+0x10298>
  4700d4:	cbz	w22, 46c4e0 <_obstack_memory_used@@Base+0x100f0>
  4700d8:	ldp	x21, x22, [sp, #32]
  4700dc:	str	x23, [x19, #288]
  4700e0:	ldp	x23, x24, [sp, #48]
  4700e4:	b	46c4e8 <_obstack_memory_used@@Base+0x100f8>
  4700e8:	ldr	x1, [x19, #256]
  4700ec:	cmp	x1, #0xff
  4700f0:	b.ne	470118 <_obstack_memory_used@@Base+0x13d28>  // b.any
  4700f4:	ldp	x3, x2, [x19, #272]
  4700f8:	strb	wzr, [x19, #255]
  4700fc:	mov	x0, x19
  470100:	blr	x3
  470104:	str	xzr, [x19, #256]
  470108:	ldr	x0, [x19, #320]
  47010c:	mov	x1, #0x0                   	// #0
  470110:	add	x0, x0, #0x1
  470114:	str	x0, [x19, #320]
  470118:	add	x0, x1, #0x1
  47011c:	str	x0, [x19, #256]
  470120:	mov	w0, #0x75                  	// #117
  470124:	strb	w0, [x19, x1]
  470128:	strb	w0, [x19, #264]
  47012c:	ldp	x21, x22, [sp, #32]
  470130:	ldp	x23, x24, [sp, #48]
  470134:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  470138:	mov	x0, x19
  47013c:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470140:	mov	x2, #0x2                   	// #2
  470144:	add	x1, x1, #0x108
  470148:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  47014c:	ldp	x21, x22, [sp, #32]
  470150:	ldp	x23, x24, [sp, #48]
  470154:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  470158:	ldr	x1, [x19, #256]
  47015c:	cmp	x1, #0xff
  470160:	b.ne	470188 <_obstack_memory_used@@Base+0x13d98>  // b.any
  470164:	ldp	x3, x2, [x19, #272]
  470168:	strb	wzr, [x19, #255]
  47016c:	mov	x0, x19
  470170:	blr	x3
  470174:	str	xzr, [x19, #256]
  470178:	ldr	x0, [x19, #320]
  47017c:	mov	x1, #0x0                   	// #0
  470180:	add	x0, x0, #0x1
  470184:	str	x0, [x19, #320]
  470188:	add	x0, x1, #0x1
  47018c:	str	x0, [x19, #256]
  470190:	mov	w0, #0x2d                  	// #45
  470194:	strb	w0, [x19, x1]
  470198:	strb	w0, [x19, #264]
  47019c:	b	46edd8 <_obstack_memory_used@@Base+0x129e8>
  4701a0:	ldp	x21, x22, [sp, #32]
  4701a4:	ldp	x23, x24, [sp, #48]
  4701a8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  4701ac:	mov	x0, x19
  4701b0:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4701b4:	mov	x2, #0x2                   	// #2
  4701b8:	add	x1, x1, #0x110
  4701bc:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  4701c0:	ldp	x21, x22, [sp, #32]
  4701c4:	ldp	x23, x24, [sp, #48]
  4701c8:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  4701cc:	ldr	x1, [x19, #256]
  4701d0:	cmp	x1, #0xff
  4701d4:	b.ne	4701fc <_obstack_memory_used@@Base+0x13e0c>  // b.any
  4701d8:	ldp	x3, x2, [x19, #272]
  4701dc:	strb	wzr, [x19, #255]
  4701e0:	mov	x0, x19
  4701e4:	blr	x3
  4701e8:	str	xzr, [x19, #256]
  4701ec:	ldr	x0, [x19, #320]
  4701f0:	mov	x1, #0x0                   	// #0
  4701f4:	add	x0, x0, #0x1
  4701f8:	str	x0, [x19, #320]
  4701fc:	add	x0, x1, #0x1
  470200:	str	x0, [x19, #256]
  470204:	mov	w0, #0x29                  	// #41
  470208:	strb	w0, [x19, x1]
  47020c:	strb	w0, [x19, #264]
  470210:	ldp	x21, x22, [sp, #32]
  470214:	ldp	x23, x24, [sp, #48]
  470218:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  47021c:	mov	x2, x22
  470220:	mov	w1, w21
  470224:	mov	x0, x19
  470228:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  47022c:	b	46e054 <_obstack_memory_used@@Base+0x11c64>
  470230:	ldp	x21, x22, [sp, #32]
  470234:	ldp	x23, x24, [sp, #48]
  470238:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  47023c:	mov	x0, x19
  470240:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470244:	mov	x2, #0x5                   	// #5
  470248:	add	x1, x1, #0x120
  47024c:	bl	4681d8 <_obstack_memory_used@@Base+0xbde8>
  470250:	ldp	x21, x22, [sp, #32]
  470254:	ldp	x23, x24, [sp, #48]
  470258:	b	46c4b4 <_obstack_memory_used@@Base+0x100c4>
  47025c:	nop
  470260:	stp	x29, x30, [sp, #-48]!
  470264:	mov	x29, sp
  470268:	stp	x19, x20, [sp, #16]
  47026c:	mov	x20, x0
  470270:	cbz	x2, 4702e0 <_obstack_memory_used@@Base+0x13ef0>
  470274:	ldr	w3, [x2, #4]
  470278:	mov	x19, x2
  47027c:	cmp	w3, #0x1
  470280:	b.gt	4702e0 <_obstack_memory_used@@Base+0x13ef0>
  470284:	ldr	w4, [x0, #308]
  470288:	cmp	w4, #0x400
  47028c:	b.gt	4702e0 <_obstack_memory_used@@Base+0x13ef0>
  470290:	add	w3, w3, #0x1
  470294:	add	w4, w4, #0x1
  470298:	str	w3, [x2, #4]
  47029c:	add	x3, sp, #0x20
  4702a0:	str	w4, [x0, #308]
  4702a4:	ldr	x4, [x0, #328]
  4702a8:	str	x3, [x0, #328]
  4702ac:	stp	x2, x4, [sp, #32]
  4702b0:	bl	46c450 <_obstack_memory_used@@Base+0x10060>
  4702b4:	ldr	w1, [x19, #4]
  4702b8:	ldr	x0, [sp, #40]
  4702bc:	str	x0, [x20, #328]
  4702c0:	ldr	w0, [x20, #308]
  4702c4:	sub	w1, w1, #0x1
  4702c8:	str	w1, [x19, #4]
  4702cc:	sub	w0, w0, #0x1
  4702d0:	str	w0, [x20, #308]
  4702d4:	ldp	x19, x20, [sp, #16]
  4702d8:	ldp	x29, x30, [sp], #48
  4702dc:	ret
  4702e0:	mov	w0, #0x1                   	// #1
  4702e4:	str	w0, [x20, #304]
  4702e8:	ldp	x19, x20, [sp, #16]
  4702ec:	ldp	x29, x30, [sp], #48
  4702f0:	ret
  4702f4:	nop
  4702f8:	stp	x29, x30, [sp, #-64]!
  4702fc:	mov	x29, sp
  470300:	stp	x19, x20, [sp, #16]
  470304:	mov	x19, x0
  470308:	ldr	w0, [x2]
  47030c:	stp	x21, x22, [sp, #32]
  470310:	mov	x20, x2
  470314:	sub	w0, w0, #0x3
  470318:	mov	w21, w1
  47031c:	cmp	w0, #0x4d
  470320:	b.ls	470340 <_obstack_memory_used@@Base+0x13f50>  // b.plast
  470324:	mov	x2, x20
  470328:	mov	w1, w21
  47032c:	mov	x0, x19
  470330:	ldp	x19, x20, [sp, #16]
  470334:	ldp	x21, x22, [sp, #32]
  470338:	ldp	x29, x30, [sp], #64
  47033c:	b	470260 <_obstack_memory_used@@Base+0x13e70>
  470340:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  470344:	add	x1, x1, #0xdd0
  470348:	ldrh	w0, [x1, w0, uxtw #1]
  47034c:	adr	x1, 470358 <_obstack_memory_used@@Base+0x13f68>
  470350:	add	x0, x1, w0, sxth #2
  470354:	br	x0
  470358:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  47035c:	add	x20, x20, #0x1d8
  470360:	add	x22, x20, #0x9
  470364:	mov	w21, #0x20                  	// #32
  470368:	ldr	x1, [x19, #256]
  47036c:	b	470394 <_obstack_memory_used@@Base+0x13fa4>
  470370:	mov	x0, x1
  470374:	add	x1, x1, #0x1
  470378:	str	x1, [x19, #256]
  47037c:	add	x20, x20, #0x1
  470380:	strb	w21, [x19, x0]
  470384:	cmp	x22, x20
  470388:	strb	w21, [x19, #264]
  47038c:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  470390:	ldrb	w21, [x20]
  470394:	cmp	x1, #0xff
  470398:	b.ne	470370 <_obstack_memory_used@@Base+0x13f80>  // b.any
  47039c:	ldp	x3, x2, [x19, #272]
  4703a0:	strb	wzr, [x19, #255]
  4703a4:	mov	x0, x19
  4703a8:	blr	x3
  4703ac:	ldr	x2, [x19, #320]
  4703b0:	mov	x1, #0x1                   	// #1
  4703b4:	mov	x0, #0x0                   	// #0
  4703b8:	add	x2, x2, x1
  4703bc:	str	x2, [x19, #320]
  4703c0:	b	470378 <_obstack_memory_used@@Base+0x13f88>
  4703c4:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4703c8:	add	x20, x20, #0x1e8
  4703cc:	add	x22, x20, #0x9
  4703d0:	mov	w21, #0x20                  	// #32
  4703d4:	ldr	x1, [x19, #256]
  4703d8:	b	470400 <_obstack_memory_used@@Base+0x14010>
  4703dc:	mov	x0, x1
  4703e0:	add	x1, x1, #0x1
  4703e4:	str	x1, [x19, #256]
  4703e8:	add	x20, x20, #0x1
  4703ec:	strb	w21, [x19, x0]
  4703f0:	cmp	x20, x22
  4703f4:	strb	w21, [x19, #264]
  4703f8:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  4703fc:	ldrb	w21, [x20]
  470400:	cmp	x1, #0xff
  470404:	b.ne	4703dc <_obstack_memory_used@@Base+0x13fec>  // b.any
  470408:	ldp	x3, x2, [x19, #272]
  47040c:	strb	wzr, [x19, #255]
  470410:	mov	x0, x19
  470414:	blr	x3
  470418:	ldr	x2, [x19, #320]
  47041c:	mov	x1, #0x1                   	// #1
  470420:	mov	x0, #0x0                   	// #0
  470424:	add	x2, x2, x1
  470428:	str	x2, [x19, #320]
  47042c:	b	4703e4 <_obstack_memory_used@@Base+0x13ff4>
  470430:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470434:	add	x20, x20, #0x1f8
  470438:	add	x22, x20, #0x6
  47043c:	mov	w21, #0x20                  	// #32
  470440:	ldr	x1, [x19, #256]
  470444:	b	47046c <_obstack_memory_used@@Base+0x1407c>
  470448:	mov	x0, x1
  47044c:	add	x1, x1, #0x1
  470450:	str	x1, [x19, #256]
  470454:	add	x20, x20, #0x1
  470458:	strb	w21, [x19, x0]
  47045c:	cmp	x22, x20
  470460:	strb	w21, [x19, #264]
  470464:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  470468:	ldrb	w21, [x20]
  47046c:	cmp	x1, #0xff
  470470:	b.ne	470448 <_obstack_memory_used@@Base+0x14058>  // b.any
  470474:	ldp	x3, x2, [x19, #272]
  470478:	strb	wzr, [x19, #255]
  47047c:	mov	x0, x19
  470480:	blr	x3
  470484:	ldr	x2, [x19, #320]
  470488:	mov	x1, #0x1                   	// #1
  47048c:	mov	x0, #0x0                   	// #0
  470490:	add	x2, x2, x1
  470494:	str	x2, [x19, #320]
  470498:	b	470450 <_obstack_memory_used@@Base+0x14060>
  47049c:	ldr	x2, [x2, #8]
  4704a0:	b	470328 <_obstack_memory_used@@Base+0x13f38>
  4704a4:	ldr	x0, [x19, #256]
  4704a8:	cmp	x0, #0xff
  4704ac:	b.eq	470a68 <_obstack_memory_used@@Base+0x14678>  // b.none
  4704b0:	add	x1, x0, #0x1
  4704b4:	str	x1, [x19, #256]
  4704b8:	mov	w2, #0x20                  	// #32
  4704bc:	strb	w2, [x19, x0]
  4704c0:	strb	w2, [x19, #264]
  4704c4:	b	4706b4 <_obstack_memory_used@@Base+0x142c4>
  4704c8:	ldr	x0, [x19, #256]
  4704cc:	add	x1, x0, #0x1
  4704d0:	cmp	x0, #0xff
  4704d4:	b.eq	470ac0 <_obstack_memory_used@@Base+0x146d0>  // b.none
  4704d8:	str	x1, [x19, #256]
  4704dc:	mov	w2, #0x20                  	// #32
  4704e0:	strb	w2, [x19, x0]
  4704e4:	strb	w2, [x19, #264]
  4704e8:	mov	x21, #0x0                   	// #0
  4704ec:	mov	w20, #0x26                  	// #38
  4704f0:	b	470510 <_obstack_memory_used@@Base+0x14120>
  4704f4:	mov	x0, x1
  4704f8:	add	x1, x1, #0x1
  4704fc:	str	x1, [x19, #256]
  470500:	strb	w20, [x19, x0]
  470504:	strb	w20, [x19, #264]
  470508:	cbnz	x21, 47054c <_obstack_memory_used@@Base+0x1415c>
  47050c:	mov	x21, #0x1                   	// #1
  470510:	cmp	x1, #0xff
  470514:	b.ne	4704f4 <_obstack_memory_used@@Base+0x14104>  // b.any
  470518:	ldp	x3, x2, [x19, #272]
  47051c:	strb	wzr, [x19, #255]
  470520:	mov	x0, x19
  470524:	blr	x3
  470528:	ldr	x2, [x19, #320]
  47052c:	mov	x0, #0x0                   	// #0
  470530:	mov	x1, #0x1                   	// #1
  470534:	str	x1, [x19, #256]
  470538:	add	x2, x2, x1
  47053c:	str	x2, [x19, #320]
  470540:	strb	w20, [x19, x0]
  470544:	strb	w20, [x19, #264]
  470548:	cbz	x21, 47050c <_obstack_memory_used@@Base+0x1411c>
  47054c:	ldp	x19, x20, [sp, #16]
  470550:	ldp	x21, x22, [sp, #32]
  470554:	ldp	x29, x30, [sp], #64
  470558:	ret
  47055c:	ldr	x1, [x19, #256]
  470560:	add	x0, x1, #0x1
  470564:	cmp	x1, #0xff
  470568:	b.eq	470a98 <_obstack_memory_used@@Base+0x146a8>  // b.none
  47056c:	str	x0, [x19, #256]
  470570:	mov	w0, #0x20                  	// #32
  470574:	strb	w0, [x19, x1]
  470578:	mov	w1, w21
  47057c:	strb	w0, [x19, #264]
  470580:	mov	x0, x19
  470584:	ldr	x2, [x20, #16]
  470588:	ldp	x19, x20, [sp, #16]
  47058c:	ldp	x21, x22, [sp, #32]
  470590:	ldp	x29, x30, [sp], #64
  470594:	b	470260 <_obstack_memory_used@@Base+0x13e70>
  470598:	tbnz	w21, #2, 47054c <_obstack_memory_used@@Base+0x1415c>
  47059c:	ldr	x1, [x19, #256]
  4705a0:	add	x0, x1, #0x1
  4705a4:	cmp	x1, #0xff
  4705a8:	b.ne	4705d0 <_obstack_memory_used@@Base+0x141e0>  // b.any
  4705ac:	ldp	x3, x2, [x19, #272]
  4705b0:	strb	wzr, [x19, #255]
  4705b4:	mov	x0, x19
  4705b8:	blr	x3
  4705bc:	ldr	x2, [x19, #320]
  4705c0:	mov	x0, #0x1                   	// #1
  4705c4:	mov	x1, #0x0                   	// #0
  4705c8:	add	x2, x2, x0
  4705cc:	str	x2, [x19, #320]
  4705d0:	str	x0, [x19, #256]
  4705d4:	mov	w0, #0x2a                  	// #42
  4705d8:	strb	w0, [x19, x1]
  4705dc:	strb	w0, [x19, #264]
  4705e0:	b	47054c <_obstack_memory_used@@Base+0x1415c>
  4705e4:	ldrb	w0, [x19, #264]
  4705e8:	cmp	w0, #0x28
  4705ec:	b.eq	470634 <_obstack_memory_used@@Base+0x14244>  // b.none
  4705f0:	ldr	x1, [x19, #256]
  4705f4:	add	x0, x1, #0x1
  4705f8:	cmp	x1, #0xff
  4705fc:	b.ne	470624 <_obstack_memory_used@@Base+0x14234>  // b.any
  470600:	ldp	x3, x2, [x19, #272]
  470604:	strb	wzr, [x19, #255]
  470608:	mov	x0, x19
  47060c:	blr	x3
  470610:	ldr	x2, [x19, #320]
  470614:	mov	x0, #0x1                   	// #1
  470618:	mov	x1, #0x0                   	// #0
  47061c:	add	x2, x2, x0
  470620:	str	x2, [x19, #320]
  470624:	str	x0, [x19, #256]
  470628:	mov	w0, #0x20                  	// #32
  47062c:	strb	w0, [x19, x1]
  470630:	strb	w0, [x19, #264]
  470634:	ldr	x2, [x20, #8]
  470638:	mov	w1, w21
  47063c:	mov	x0, x19
  470640:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470644:	add	x20, x20, #0x250
  470648:	mov	w21, #0x3a                  	// #58
  47064c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  470650:	add	x22, x20, #0x3
  470654:	ldr	x1, [x19, #256]
  470658:	b	470680 <_obstack_memory_used@@Base+0x14290>
  47065c:	mov	x0, x1
  470660:	add	x1, x1, #0x1
  470664:	str	x1, [x19, #256]
  470668:	add	x20, x20, #0x1
  47066c:	strb	w21, [x19, x0]
  470670:	cmp	x22, x20
  470674:	strb	w21, [x19, #264]
  470678:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  47067c:	ldrb	w21, [x20]
  470680:	cmp	x1, #0xff
  470684:	b.ne	47065c <_obstack_memory_used@@Base+0x1426c>  // b.any
  470688:	ldp	x3, x2, [x19, #272]
  47068c:	strb	wzr, [x19, #255]
  470690:	mov	x0, x19
  470694:	blr	x3
  470698:	ldr	x2, [x19, #320]
  47069c:	mov	x1, #0x1                   	// #1
  4706a0:	mov	x0, #0x0                   	// #0
  4706a4:	add	x2, x2, x1
  4706a8:	str	x2, [x19, #320]
  4706ac:	b	470664 <_obstack_memory_used@@Base+0x14274>
  4706b0:	ldr	x1, [x19, #256]
  4706b4:	cmp	x1, #0xff
  4706b8:	b.eq	470a40 <_obstack_memory_used@@Base+0x14650>  // b.none
  4706bc:	add	x0, x1, #0x1
  4706c0:	str	x0, [x19, #256]
  4706c4:	mov	w0, #0x26                  	// #38
  4706c8:	strb	w0, [x19, x1]
  4706cc:	strb	w0, [x19, #264]
  4706d0:	ldp	x19, x20, [sp, #16]
  4706d4:	ldp	x21, x22, [sp, #32]
  4706d8:	ldp	x29, x30, [sp], #64
  4706dc:	ret
  4706e0:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4706e4:	add	x22, x22, #0x228
  4706e8:	stp	x23, x24, [sp, #48]
  4706ec:	add	x24, x22, #0x6
  4706f0:	mov	w23, #0x20                  	// #32
  4706f4:	ldr	x1, [x19, #256]
  4706f8:	b	470720 <_obstack_memory_used@@Base+0x14330>
  4706fc:	mov	x0, x1
  470700:	add	x1, x1, #0x1
  470704:	str	x1, [x19, #256]
  470708:	add	x22, x22, #0x1
  47070c:	strb	w23, [x19, x0]
  470710:	cmp	x24, x22
  470714:	strb	w23, [x19, #264]
  470718:	b.eq	470988 <_obstack_memory_used@@Base+0x14598>  // b.none
  47071c:	ldrb	w23, [x22]
  470720:	cmp	x1, #0xff
  470724:	b.ne	4706fc <_obstack_memory_used@@Base+0x1430c>  // b.any
  470728:	ldp	x3, x2, [x19, #272]
  47072c:	strb	wzr, [x19, #255]
  470730:	mov	x0, x19
  470734:	blr	x3
  470738:	ldr	x2, [x19, #320]
  47073c:	mov	x1, #0x1                   	// #1
  470740:	mov	x0, #0x0                   	// #0
  470744:	add	x2, x2, x1
  470748:	str	x2, [x19, #320]
  47074c:	b	470704 <_obstack_memory_used@@Base+0x14314>
  470750:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470754:	add	x22, x22, #0x218
  470758:	stp	x23, x24, [sp, #48]
  47075c:	add	x24, x22, #0x9
  470760:	mov	w23, #0x20                  	// #32
  470764:	ldr	x1, [x19, #256]
  470768:	b	470790 <_obstack_memory_used@@Base+0x143a0>
  47076c:	mov	x0, x1
  470770:	add	x1, x1, #0x1
  470774:	str	x1, [x19, #256]
  470778:	add	x22, x22, #0x1
  47077c:	strb	w23, [x19, x0]
  470780:	cmp	x22, x24
  470784:	strb	w23, [x19, #264]
  470788:	b.eq	470988 <_obstack_memory_used@@Base+0x14598>  // b.none
  47078c:	ldrb	w23, [x22]
  470790:	cmp	x1, #0xff
  470794:	b.ne	47076c <_obstack_memory_used@@Base+0x1437c>  // b.any
  470798:	ldp	x3, x2, [x19, #272]
  47079c:	strb	wzr, [x19, #255]
  4707a0:	mov	x0, x19
  4707a4:	blr	x3
  4707a8:	ldr	x2, [x19, #320]
  4707ac:	mov	x1, #0x1                   	// #1
  4707b0:	mov	x0, #0x0                   	// #0
  4707b4:	add	x2, x2, x1
  4707b8:	str	x2, [x19, #320]
  4707bc:	b	470774 <_obstack_memory_used@@Base+0x14384>
  4707c0:	stp	x23, x24, [sp, #48]
  4707c4:	adrp	x24, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4707c8:	add	x24, x24, #0x258
  4707cc:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4707d0:	add	x24, x24, #0xa
  4707d4:	add	x22, x22, #0x259
  4707d8:	mov	w23, #0x20                  	// #32
  4707dc:	ldr	x1, [x19, #256]
  4707e0:	b	470804 <_obstack_memory_used@@Base+0x14414>
  4707e4:	mov	x0, x1
  4707e8:	add	x1, x1, #0x1
  4707ec:	str	x1, [x19, #256]
  4707f0:	cmp	x22, x24
  4707f4:	strb	w23, [x19, x0]
  4707f8:	strb	w23, [x19, #264]
  4707fc:	b.eq	470a38 <_obstack_memory_used@@Base+0x14648>  // b.none
  470800:	ldrb	w23, [x22], #1
  470804:	cmp	x1, #0xff
  470808:	b.ne	4707e4 <_obstack_memory_used@@Base+0x143f4>  // b.any
  47080c:	ldp	x3, x2, [x19, #272]
  470810:	strb	wzr, [x19, #255]
  470814:	mov	x0, x19
  470818:	blr	x3
  47081c:	ldr	x2, [x19, #320]
  470820:	mov	x1, #0x1                   	// #1
  470824:	mov	x0, #0x0                   	// #0
  470828:	add	x2, x2, x1
  47082c:	str	x2, [x19, #320]
  470830:	b	4707ec <_obstack_memory_used@@Base+0x143fc>
  470834:	ldr	x1, [x19, #256]
  470838:	b	4704e8 <_obstack_memory_used@@Base+0x140f8>
  47083c:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470840:	add	x20, x20, #0x230
  470844:	add	x22, x20, #0x8
  470848:	mov	w21, #0x63                  	// #99
  47084c:	ldr	x1, [x19, #256]
  470850:	b	470878 <_obstack_memory_used@@Base+0x14488>
  470854:	mov	x0, x1
  470858:	add	x1, x1, #0x1
  47085c:	str	x1, [x19, #256]
  470860:	add	x20, x20, #0x1
  470864:	strb	w21, [x19, x0]
  470868:	cmp	x22, x20
  47086c:	strb	w21, [x19, #264]
  470870:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  470874:	ldrb	w21, [x20]
  470878:	cmp	x1, #0xff
  47087c:	b.ne	470854 <_obstack_memory_used@@Base+0x14464>  // b.any
  470880:	ldp	x3, x2, [x19, #272]
  470884:	strb	wzr, [x19, #255]
  470888:	mov	x0, x19
  47088c:	blr	x3
  470890:	ldr	x2, [x19, #320]
  470894:	mov	x1, #0x1                   	// #1
  470898:	mov	x0, #0x0                   	// #0
  47089c:	add	x2, x2, x1
  4708a0:	str	x2, [x19, #320]
  4708a4:	b	47085c <_obstack_memory_used@@Base+0x1446c>
  4708a8:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4708ac:	add	x22, x22, #0x240
  4708b0:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4708b4:	add	x22, x22, #0xa
  4708b8:	add	x20, x20, #0x241
  4708bc:	mov	w21, #0x69                  	// #105
  4708c0:	ldr	x1, [x19, #256]
  4708c4:	b	4708e8 <_obstack_memory_used@@Base+0x144f8>
  4708c8:	mov	x0, x1
  4708cc:	add	x1, x1, #0x1
  4708d0:	str	x1, [x19, #256]
  4708d4:	cmp	x20, x22
  4708d8:	strb	w21, [x19, x0]
  4708dc:	strb	w21, [x19, #264]
  4708e0:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  4708e4:	ldrb	w21, [x20], #1
  4708e8:	cmp	x1, #0xff
  4708ec:	b.ne	4708c8 <_obstack_memory_used@@Base+0x144d8>  // b.any
  4708f0:	ldp	x3, x2, [x19, #272]
  4708f4:	strb	wzr, [x19, #255]
  4708f8:	mov	x0, x19
  4708fc:	blr	x3
  470900:	ldr	x2, [x19, #320]
  470904:	mov	x1, #0x1                   	// #1
  470908:	mov	x0, #0x0                   	// #0
  47090c:	add	x2, x2, x1
  470910:	str	x2, [x19, #320]
  470914:	b	4708d0 <_obstack_memory_used@@Base+0x144e0>
  470918:	adrp	x22, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  47091c:	add	x22, x22, #0x200
  470920:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  470924:	add	x22, x22, #0x11
  470928:	add	x20, x20, #0x201
  47092c:	mov	w21, #0x20                  	// #32
  470930:	ldr	x1, [x19, #256]
  470934:	b	470958 <_obstack_memory_used@@Base+0x14568>
  470938:	mov	x0, x1
  47093c:	add	x1, x1, #0x1
  470940:	str	x1, [x19, #256]
  470944:	cmp	x22, x20
  470948:	strb	w21, [x19, x0]
  47094c:	strb	w21, [x19, #264]
  470950:	b.eq	47054c <_obstack_memory_used@@Base+0x1415c>  // b.none
  470954:	ldrb	w21, [x20], #1
  470958:	cmp	x1, #0xff
  47095c:	b.ne	470938 <_obstack_memory_used@@Base+0x14548>  // b.any
  470960:	ldp	x3, x2, [x19, #272]
  470964:	strb	wzr, [x19, #255]
  470968:	mov	x0, x19
  47096c:	blr	x3
  470970:	ldr	x2, [x19, #320]
  470974:	mov	x1, #0x1                   	// #1
  470978:	mov	x0, #0x0                   	// #0
  47097c:	add	x2, x2, x1
  470980:	str	x2, [x19, #320]
  470984:	b	470940 <_obstack_memory_used@@Base+0x14550>
  470988:	ldr	x2, [x20, #16]
  47098c:	cbz	x2, 470aec <_obstack_memory_used@@Base+0x146fc>
  470990:	add	x0, x1, #0x1
  470994:	cmp	x1, #0xff
  470998:	b.ne	4709c4 <_obstack_memory_used@@Base+0x145d4>  // b.any
  47099c:	ldp	x3, x2, [x19, #272]
  4709a0:	strb	wzr, [x19, #255]
  4709a4:	mov	x0, x19
  4709a8:	blr	x3
  4709ac:	ldr	x3, [x19, #320]
  4709b0:	mov	x0, #0x1                   	// #1
  4709b4:	mov	x1, #0x0                   	// #0
  4709b8:	add	x3, x3, x0
  4709bc:	ldr	x2, [x20, #16]
  4709c0:	str	x3, [x19, #320]
  4709c4:	str	x0, [x19, #256]
  4709c8:	mov	w0, #0x28                  	// #40
  4709cc:	strb	w0, [x19, x1]
  4709d0:	strb	w0, [x19, #264]
  4709d4:	mov	w1, w21
  4709d8:	mov	x0, x19
  4709dc:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  4709e0:	ldr	x1, [x19, #256]
  4709e4:	add	x0, x1, #0x1
  4709e8:	cmp	x1, #0xff
  4709ec:	b.ne	470a14 <_obstack_memory_used@@Base+0x14624>  // b.any
  4709f0:	ldp	x3, x2, [x19, #272]
  4709f4:	strb	wzr, [x19, #255]
  4709f8:	mov	x0, x19
  4709fc:	blr	x3
  470a00:	ldr	x2, [x19, #320]
  470a04:	mov	x0, #0x1                   	// #1
  470a08:	mov	x1, #0x0                   	// #0
  470a0c:	add	x2, x2, x0
  470a10:	str	x2, [x19, #320]
  470a14:	str	x0, [x19, #256]
  470a18:	mov	w0, #0x29                  	// #41
  470a1c:	strb	w0, [x19, x1]
  470a20:	strb	w0, [x19, #264]
  470a24:	ldp	x19, x20, [sp, #16]
  470a28:	ldp	x21, x22, [sp, #32]
  470a2c:	ldp	x23, x24, [sp, #48]
  470a30:	ldp	x29, x30, [sp], #64
  470a34:	ret
  470a38:	ldr	x2, [x20, #8]
  470a3c:	b	4709d4 <_obstack_memory_used@@Base+0x145e4>
  470a40:	ldp	x3, x2, [x19, #272]
  470a44:	strb	wzr, [x19, #255]
  470a48:	mov	x0, x19
  470a4c:	blr	x3
  470a50:	ldr	x2, [x19, #320]
  470a54:	mov	x0, #0x1                   	// #1
  470a58:	mov	x1, #0x0                   	// #0
  470a5c:	add	x2, x2, x0
  470a60:	str	x2, [x19, #320]
  470a64:	b	4706c0 <_obstack_memory_used@@Base+0x142d0>
  470a68:	ldp	x3, x2, [x19, #272]
  470a6c:	strb	wzr, [x19, #255]
  470a70:	mov	x1, x0
  470a74:	mov	x0, x19
  470a78:	blr	x3
  470a7c:	ldr	x0, [x19, #320]
  470a80:	mov	w2, #0x20                  	// #32
  470a84:	mov	x1, #0x1                   	// #1
  470a88:	strb	w2, [x19]
  470a8c:	add	x0, x0, x1
  470a90:	str	x0, [x19, #320]
  470a94:	b	4706bc <_obstack_memory_used@@Base+0x142cc>
  470a98:	ldp	x3, x2, [x19, #272]
  470a9c:	strb	wzr, [x19, #255]
  470aa0:	mov	x0, x19
  470aa4:	blr	x3
  470aa8:	ldr	x2, [x19, #320]
  470aac:	mov	x0, #0x1                   	// #1
  470ab0:	mov	x1, #0x0                   	// #0
  470ab4:	add	x2, x2, x0
  470ab8:	str	x2, [x19, #320]
  470abc:	b	47056c <_obstack_memory_used@@Base+0x1417c>
  470ac0:	ldp	x3, x2, [x19, #272]
  470ac4:	strb	wzr, [x19, #255]
  470ac8:	mov	x1, x0
  470acc:	mov	x0, x19
  470ad0:	blr	x3
  470ad4:	ldr	x2, [x19, #320]
  470ad8:	mov	x1, #0x1                   	// #1
  470adc:	mov	x0, #0x0                   	// #0
  470ae0:	add	x2, x2, x1
  470ae4:	str	x2, [x19, #320]
  470ae8:	b	4704d8 <_obstack_memory_used@@Base+0x140e8>
  470aec:	ldp	x23, x24, [sp, #48]
  470af0:	b	47054c <_obstack_memory_used@@Base+0x1415c>
  470af4:	nop
  470af8:	stp	x29, x30, [sp, #-64]!
  470afc:	mov	x29, sp
  470b00:	stp	x19, x20, [sp, #16]
  470b04:	mov	x19, x0
  470b08:	mov	x20, x3
  470b0c:	stp	x21, x22, [sp, #32]
  470b10:	mov	x21, x2
  470b14:	stp	x23, x24, [sp, #48]
  470b18:	mov	w23, w1
  470b1c:	cbz	x3, 470b60 <_obstack_memory_used@@Base+0x14770>
  470b20:	mov	x2, #0xe000000             	// #234881024
  470b24:	mov	x4, #0x1                   	// #1
  470b28:	movk	x2, #0x862, lsl #32
  470b2c:	ldr	w0, [x3, #16]
  470b30:	cbnz	w0, 470b60 <_obstack_memory_used@@Base+0x14770>
  470b34:	ldr	x0, [x3, #8]
  470b38:	ldr	w0, [x0]
  470b3c:	cmp	w0, #0x2b
  470b40:	b.hi	470b58 <_obstack_memory_used@@Base+0x14768>  // b.pmore
  470b44:	lsl	x0, x4, x0
  470b48:	tst	x0, x2
  470b4c:	b.ne	470c28 <_obstack_memory_used@@Base+0x14838>  // b.any
  470b50:	tst	x0, #0x1c00000000
  470b54:	b.ne	470cf4 <_obstack_memory_used@@Base+0x14904>  // b.any
  470b58:	ldr	x3, [x3]
  470b5c:	cbnz	x3, 470b2c <_obstack_memory_used@@Base+0x1473c>
  470b60:	ldr	x22, [x19, #296]
  470b64:	str	xzr, [x19, #296]
  470b68:	mov	w1, w23
  470b6c:	mov	x2, x20
  470b70:	mov	x0, x19
  470b74:	mov	w3, #0x0                   	// #0
  470b78:	bl	470da8 <_obstack_memory_used@@Base+0x149b8>
  470b7c:	ldr	x1, [x19, #256]
  470b80:	cmp	x1, #0xff
  470b84:	b.eq	470cb8 <_obstack_memory_used@@Base+0x148c8>  // b.none
  470b88:	add	x0, x1, #0x1
  470b8c:	str	x0, [x19, #256]
  470b90:	mov	w2, #0x28                  	// #40
  470b94:	strb	w2, [x19, x1]
  470b98:	strb	w2, [x19, #264]
  470b9c:	ldr	x2, [x21]
  470ba0:	cbz	x2, 470bb4 <_obstack_memory_used@@Base+0x147c4>
  470ba4:	mov	x0, x19
  470ba8:	mov	w1, w23
  470bac:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  470bb0:	ldr	x0, [x19, #256]
  470bb4:	cmp	x0, #0xff
  470bb8:	b.eq	470bfc <_obstack_memory_used@@Base+0x1480c>  // b.none
  470bbc:	add	x1, x0, #0x1
  470bc0:	str	x1, [x19, #256]
  470bc4:	mov	w3, #0x29                  	// #41
  470bc8:	strb	w3, [x19, x0]
  470bcc:	mov	x2, x20
  470bd0:	strb	w3, [x19, #264]
  470bd4:	mov	w1, w23
  470bd8:	mov	x0, x19
  470bdc:	mov	w3, #0x1                   	// #1
  470be0:	bl	470da8 <_obstack_memory_used@@Base+0x149b8>
  470be4:	ldp	x23, x24, [sp, #48]
  470be8:	str	x22, [x19, #296]
  470bec:	ldp	x19, x20, [sp, #16]
  470bf0:	ldp	x21, x22, [sp, #32]
  470bf4:	ldp	x29, x30, [sp], #64
  470bf8:	ret
  470bfc:	ldp	x3, x2, [x19, #272]
  470c00:	strb	wzr, [x19, #255]
  470c04:	mov	x1, x0
  470c08:	mov	x0, x19
  470c0c:	blr	x3
  470c10:	ldr	x2, [x19, #320]
  470c14:	mov	x1, #0x1                   	// #1
  470c18:	mov	x0, #0x0                   	// #0
  470c1c:	add	x2, x2, x1
  470c20:	str	x2, [x19, #320]
  470c24:	b	470bc0 <_obstack_memory_used@@Base+0x147d0>
  470c28:	ldrb	w0, [x19, #264]
  470c2c:	ldr	x1, [x19, #256]
  470c30:	cmp	w0, #0x20
  470c34:	b.eq	470c58 <_obstack_memory_used@@Base+0x14868>  // b.none
  470c38:	cmp	x1, #0xff
  470c3c:	b.eq	470d38 <_obstack_memory_used@@Base+0x14948>  // b.none
  470c40:	add	x2, x1, #0x1
  470c44:	str	x2, [x19, #256]
  470c48:	mov	w0, #0x20                  	// #32
  470c4c:	strb	w0, [x19, x1]
  470c50:	mov	x1, x2
  470c54:	strb	w0, [x19, #264]
  470c58:	cmp	x1, #0xff
  470c5c:	b.eq	470d10 <_obstack_memory_used@@Base+0x14920>  // b.none
  470c60:	add	x0, x1, #0x1
  470c64:	str	x0, [x19, #256]
  470c68:	mov	w24, #0x28                  	// #40
  470c6c:	strb	w24, [x19, x1]
  470c70:	mov	x0, x19
  470c74:	strb	w24, [x19, #264]
  470c78:	mov	x2, x20
  470c7c:	ldr	x22, [x19, #296]
  470c80:	str	xzr, [x19, #296]
  470c84:	mov	w1, w23
  470c88:	mov	w3, #0x0                   	// #0
  470c8c:	bl	470da8 <_obstack_memory_used@@Base+0x149b8>
  470c90:	ldr	x0, [x19, #256]
  470c94:	cmp	x0, #0xff
  470c98:	b.eq	470d64 <_obstack_memory_used@@Base+0x14974>  // b.none
  470c9c:	add	x1, x0, #0x1
  470ca0:	str	x1, [x19, #256]
  470ca4:	mov	w2, #0x29                  	// #41
  470ca8:	strb	w2, [x19, x0]
  470cac:	strb	w2, [x19, #264]
  470cb0:	cmp	x1, #0xff
  470cb4:	b.ne	470b88 <_obstack_memory_used@@Base+0x14798>  // b.any
  470cb8:	ldp	x3, x2, [x19, #272]
  470cbc:	strb	wzr, [x19, #255]
  470cc0:	mov	x0, x19
  470cc4:	blr	x3
  470cc8:	mov	w1, #0x28                  	// #40
  470ccc:	strb	w1, [x19]
  470cd0:	strb	w1, [x19, #264]
  470cd4:	mov	x0, #0x1                   	// #1
  470cd8:	ldr	x1, [x19, #320]
  470cdc:	ldr	x2, [x21]
  470ce0:	add	x1, x1, x0
  470ce4:	str	x0, [x19, #256]
  470ce8:	str	x1, [x19, #320]
  470cec:	cbnz	x2, 470ba4 <_obstack_memory_used@@Base+0x147b4>
  470cf0:	b	470bbc <_obstack_memory_used@@Base+0x147cc>
  470cf4:	ldrb	w0, [x19, #264]
  470cf8:	ldr	x1, [x19, #256]
  470cfc:	and	w2, w0, #0xfffffffd
  470d00:	cmp	w2, #0x28
  470d04:	b.ne	470c30 <_obstack_memory_used@@Base+0x14840>  // b.any
  470d08:	cmp	x1, #0xff
  470d0c:	b.ne	470c60 <_obstack_memory_used@@Base+0x14870>  // b.any
  470d10:	ldp	x3, x2, [x19, #272]
  470d14:	strb	wzr, [x19, #255]
  470d18:	mov	x0, x19
  470d1c:	blr	x3
  470d20:	ldr	x2, [x19, #320]
  470d24:	mov	x0, #0x1                   	// #1
  470d28:	mov	x1, #0x0                   	// #0
  470d2c:	add	x2, x2, x0
  470d30:	str	x2, [x19, #320]
  470d34:	b	470c64 <_obstack_memory_used@@Base+0x14874>
  470d38:	ldp	x3, x2, [x19, #272]
  470d3c:	strb	wzr, [x19, #255]
  470d40:	mov	x0, x19
  470d44:	blr	x3
  470d48:	ldr	x0, [x19, #320]
  470d4c:	mov	w2, #0x20                  	// #32
  470d50:	mov	x1, #0x1                   	// #1
  470d54:	strb	w2, [x19]
  470d58:	add	x0, x0, x1
  470d5c:	str	x0, [x19, #320]
  470d60:	b	470c60 <_obstack_memory_used@@Base+0x14870>
  470d64:	ldp	x3, x2, [x19, #272]
  470d68:	strb	wzr, [x19, #255]
  470d6c:	mov	x1, x0
  470d70:	mov	x0, x19
  470d74:	blr	x3
  470d78:	strb	w24, [x19, #264]
  470d7c:	mov	w0, #0x2829                	// #10281
  470d80:	strh	w0, [x19]
  470d84:	ldr	x1, [x19, #320]
  470d88:	mov	x0, #0x2                   	// #2
  470d8c:	ldr	x2, [x21]
  470d90:	add	x1, x1, #0x1
  470d94:	str	x0, [x19, #256]
  470d98:	str	x1, [x19, #320]
  470d9c:	cbnz	x2, 470ba4 <_obstack_memory_used@@Base+0x147b4>
  470da0:	b	470bbc <_obstack_memory_used@@Base+0x147cc>
  470da4:	nop
  470da8:	cbz	x2, 471004 <_obstack_memory_used@@Base+0x14c14>
  470dac:	stp	x29, x30, [sp, #-112]!
  470db0:	mov	x29, sp
  470db4:	stp	x23, x24, [sp, #48]
  470db8:	mov	x24, #0x1f                  	// #31
  470dbc:	movk	x24, #0x1a, lsl #48
  470dc0:	stp	x19, x20, [sp, #16]
  470dc4:	mov	w20, w1
  470dc8:	mov	x19, x2
  470dcc:	stp	x21, x22, [sp, #32]
  470dd0:	mov	w21, w3
  470dd4:	mov	w22, #0x1                   	// #1
  470dd8:	stp	x25, x26, [sp, #64]
  470ddc:	mov	x26, x0
  470de0:	mov	x25, #0x1                   	// #1
  470de4:	b	470e28 <_obstack_memory_used@@Base+0x14a38>
  470de8:	ldr	x1, [x19, #24]
  470dec:	cmp	w5, #0x29
  470df0:	ldr	x23, [x26, #288]
  470df4:	str	w22, [x19, #16]
  470df8:	str	x1, [x26, #288]
  470dfc:	b.eq	470e74 <_obstack_memory_used@@Base+0x14a84>  // b.none
  470e00:	cmp	w5, #0x2a
  470e04:	b.eq	470ea4 <_obstack_memory_used@@Base+0x14ab4>  // b.none
  470e08:	cmp	w5, #0x2
  470e0c:	b.eq	470ed4 <_obstack_memory_used@@Base+0x14ae4>  // b.none
  470e10:	mov	w1, w20
  470e14:	mov	x0, x26
  470e18:	bl	4702f8 <_obstack_memory_used@@Base+0x13f08>
  470e1c:	str	x23, [x26, #288]
  470e20:	ldr	x19, [x19]
  470e24:	cbz	x19, 470e8c <_obstack_memory_used@@Base+0x14a9c>
  470e28:	ldr	w2, [x26, #304]
  470e2c:	cbnz	w2, 470e8c <_obstack_memory_used@@Base+0x14a9c>
  470e30:	ldr	w2, [x19, #16]
  470e34:	cbnz	w2, 470e20 <_obstack_memory_used@@Base+0x14a30>
  470e38:	ldr	x2, [x19, #8]
  470e3c:	ldr	w5, [x2]
  470e40:	cbnz	w21, 470de8 <_obstack_memory_used@@Base+0x149f8>
  470e44:	sub	w4, w5, #0x1c
  470e48:	cmp	w4, #0x34
  470e4c:	b.hi	470de8 <_obstack_memory_used@@Base+0x149f8>  // b.pmore
  470e50:	lsl	x4, x25, x4
  470e54:	tst	x4, x24
  470e58:	b.ne	470e20 <_obstack_memory_used@@Base+0x14a30>  // b.any
  470e5c:	ldr	x1, [x19, #24]
  470e60:	cmp	w5, #0x29
  470e64:	ldr	x23, [x26, #288]
  470e68:	str	w22, [x19, #16]
  470e6c:	str	x1, [x26, #288]
  470e70:	b.ne	470e00 <_obstack_memory_used@@Base+0x14a10>  // b.any
  470e74:	ldr	x3, [x19]
  470e78:	add	x2, x2, #0x10
  470e7c:	mov	w1, w20
  470e80:	mov	x0, x26
  470e84:	bl	470af8 <_obstack_memory_used@@Base+0x14708>
  470e88:	str	x23, [x26, #288]
  470e8c:	ldp	x19, x20, [sp, #16]
  470e90:	ldp	x21, x22, [sp, #32]
  470e94:	ldp	x23, x24, [sp, #48]
  470e98:	ldp	x25, x26, [sp, #64]
  470e9c:	ldp	x29, x30, [sp], #112
  470ea0:	ret
  470ea4:	ldr	x3, [x19]
  470ea8:	mov	w1, w20
  470eac:	mov	x0, x26
  470eb0:	add	x2, x2, #0x8
  470eb4:	bl	471178 <_obstack_memory_used@@Base+0x14d88>
  470eb8:	str	x23, [x26, #288]
  470ebc:	ldp	x19, x20, [sp, #16]
  470ec0:	ldp	x21, x22, [sp, #32]
  470ec4:	ldp	x23, x24, [sp, #48]
  470ec8:	ldp	x25, x26, [sp, #64]
  470ecc:	ldp	x29, x30, [sp], #112
  470ed0:	ret
  470ed4:	ldr	x2, [x2, #8]
  470ed8:	mov	w1, w20
  470edc:	ldr	x21, [x26, #296]
  470ee0:	str	xzr, [x26, #296]
  470ee4:	mov	x0, x26
  470ee8:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  470eec:	str	x21, [x26, #296]
  470ef0:	tbz	w20, #2, 470fa8 <_obstack_memory_used@@Base+0x14bb8>
  470ef4:	ldr	x1, [x26, #256]
  470ef8:	add	x0, x1, #0x1
  470efc:	cmp	x1, #0xff
  470f00:	b.ne	470f28 <_obstack_memory_used@@Base+0x14b38>  // b.any
  470f04:	ldp	x3, x2, [x26, #272]
  470f08:	strb	wzr, [x26, #255]
  470f0c:	mov	x0, x26
  470f10:	blr	x3
  470f14:	ldr	x2, [x26, #320]
  470f18:	mov	x0, #0x1                   	// #1
  470f1c:	mov	x1, #0x0                   	// #0
  470f20:	add	x2, x2, x0
  470f24:	str	x2, [x26, #320]
  470f28:	str	x0, [x26, #256]
  470f2c:	mov	w0, #0x2e                  	// #46
  470f30:	strb	w0, [x26, x1]
  470f34:	strb	w0, [x26, #264]
  470f38:	ldr	x0, [x19, #8]
  470f3c:	ldr	x21, [x0, #16]
  470f40:	ldr	w2, [x21]
  470f44:	cmp	w2, #0x47
  470f48:	b.eq	471008 <_obstack_memory_used@@Base+0x14c18>  // b.none
  470f4c:	mov	x1, #0x1f                  	// #31
  470f50:	mov	x3, #0x1                   	// #1
  470f54:	movk	x1, #0x1a, lsl #48
  470f58:	sub	w2, w2, #0x1c
  470f5c:	cmp	w2, #0x34
  470f60:	b.hi	470f70 <_obstack_memory_used@@Base+0x14b80>  // b.pmore
  470f64:	lsl	x2, x3, x2
  470f68:	tst	x2, x1
  470f6c:	b.ne	470f9c <_obstack_memory_used@@Base+0x14bac>  // b.any
  470f70:	mov	x2, x21
  470f74:	mov	w1, w20
  470f78:	mov	x0, x26
  470f7c:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  470f80:	str	x23, [x26, #288]
  470f84:	ldp	x19, x20, [sp, #16]
  470f88:	ldp	x21, x22, [sp, #32]
  470f8c:	ldp	x23, x24, [sp, #48]
  470f90:	ldp	x25, x26, [sp, #64]
  470f94:	ldp	x29, x30, [sp], #112
  470f98:	ret
  470f9c:	ldr	x21, [x21, #8]
  470fa0:	ldr	w2, [x21]
  470fa4:	b	470f58 <_obstack_memory_used@@Base+0x14b68>
  470fa8:	mov	x22, #0x0                   	// #0
  470fac:	mov	w21, #0x3a                  	// #58
  470fb0:	ldr	x1, [x26, #256]
  470fb4:	b	470fd4 <_obstack_memory_used@@Base+0x14be4>
  470fb8:	mov	x0, x1
  470fbc:	add	x1, x1, #0x1
  470fc0:	str	x1, [x26, #256]
  470fc4:	strb	w21, [x26, x0]
  470fc8:	strb	w21, [x26, #264]
  470fcc:	cbnz	x22, 470f38 <_obstack_memory_used@@Base+0x14b48>
  470fd0:	mov	x22, #0x1                   	// #1
  470fd4:	cmp	x1, #0xff
  470fd8:	b.ne	470fb8 <_obstack_memory_used@@Base+0x14bc8>  // b.any
  470fdc:	ldp	x3, x2, [x26, #272]
  470fe0:	strb	wzr, [x26, #255]
  470fe4:	mov	x0, x26
  470fe8:	blr	x3
  470fec:	ldr	x2, [x26, #320]
  470ff0:	mov	x1, #0x1                   	// #1
  470ff4:	mov	x0, #0x0                   	// #0
  470ff8:	add	x2, x2, x1
  470ffc:	str	x2, [x26, #320]
  471000:	b	470fc0 <_obstack_memory_used@@Base+0x14bd0>
  471004:	ret
  471008:	adrp	x24, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  47100c:	add	x24, x24, #0xec0
  471010:	adrp	x22, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  471014:	add	x24, x24, #0xd
  471018:	add	x22, x22, #0xec1
  47101c:	mov	w19, #0x7b                  	// #123
  471020:	ldr	x1, [x26, #256]
  471024:	b	471048 <_obstack_memory_used@@Base+0x14c58>
  471028:	mov	x0, x1
  47102c:	add	x1, x1, #0x1
  471030:	str	x1, [x26, #256]
  471034:	cmp	x22, x24
  471038:	strb	w19, [x26, x0]
  47103c:	strb	w19, [x26, #264]
  471040:	b.eq	471078 <_obstack_memory_used@@Base+0x14c88>  // b.none
  471044:	ldrb	w19, [x22], #1
  471048:	cmp	x1, #0xff
  47104c:	b.ne	471028 <_obstack_memory_used@@Base+0x14c38>  // b.any
  471050:	ldp	x3, x2, [x26, #272]
  471054:	strb	wzr, [x26, #255]
  471058:	mov	x0, x26
  47105c:	blr	x3
  471060:	ldr	x2, [x26, #320]
  471064:	mov	x1, #0x1                   	// #1
  471068:	mov	x0, #0x0                   	// #0
  47106c:	add	x2, x2, x1
  471070:	str	x2, [x26, #320]
  471074:	b	471030 <_obstack_memory_used@@Base+0x14c40>
  471078:	ldr	w2, [x21, #16]
  47107c:	adrp	x1, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  471080:	add	x1, x1, #0xed0
  471084:	add	x19, sp, #0x50
  471088:	add	w2, w2, #0x1
  47108c:	mov	x0, x19
  471090:	bl	402e00 <sprintf@plt>
  471094:	mov	x0, x19
  471098:	bl	402d50 <strlen@plt>
  47109c:	ldr	x1, [x26, #256]
  4710a0:	cbz	x0, 471100 <_obstack_memory_used@@Base+0x14d10>
  4710a4:	add	x24, x19, x0
  4710a8:	b	4710cc <_obstack_memory_used@@Base+0x14cdc>
  4710ac:	mov	x0, x1
  4710b0:	add	x1, x1, #0x1
  4710b4:	str	x1, [x26, #256]
  4710b8:	add	x19, x19, #0x1
  4710bc:	strb	w22, [x26, x0]
  4710c0:	cmp	x24, x19
  4710c4:	strb	w22, [x26, #264]
  4710c8:	b.eq	471100 <_obstack_memory_used@@Base+0x14d10>  // b.none
  4710cc:	ldrb	w22, [x19]
  4710d0:	cmp	x1, #0xff
  4710d4:	b.ne	4710ac <_obstack_memory_used@@Base+0x14cbc>  // b.any
  4710d8:	ldp	x3, x2, [x26, #272]
  4710dc:	strb	wzr, [x26, #255]
  4710e0:	mov	x0, x26
  4710e4:	blr	x3
  4710e8:	ldr	x2, [x26, #320]
  4710ec:	mov	x1, #0x1                   	// #1
  4710f0:	mov	x0, #0x0                   	// #0
  4710f4:	add	x2, x2, x1
  4710f8:	str	x2, [x26, #320]
  4710fc:	b	4710b4 <_obstack_memory_used@@Base+0x14cc4>
  471100:	adrp	x19, 4ce000 <_obstack_memory_used@@Base+0x71c10>
  471104:	add	x19, x19, #0xed8
  471108:	add	x24, x19, #0x3
  47110c:	mov	w22, #0x7d                  	// #125
  471110:	b	471138 <_obstack_memory_used@@Base+0x14d48>
  471114:	mov	x0, x1
  471118:	add	x1, x1, #0x1
  47111c:	str	x1, [x26, #256]
  471120:	add	x19, x19, #0x1
  471124:	strb	w22, [x26, x0]
  471128:	cmp	x24, x19
  47112c:	strb	w22, [x26, #264]
  471130:	b.eq	471168 <_obstack_memory_used@@Base+0x14d78>  // b.none
  471134:	ldrb	w22, [x19]
  471138:	cmp	x1, #0xff
  47113c:	b.ne	471114 <_obstack_memory_used@@Base+0x14d24>  // b.any
  471140:	ldp	x3, x2, [x26, #272]
  471144:	strb	wzr, [x26, #255]
  471148:	mov	x0, x26
  47114c:	blr	x3
  471150:	ldr	x2, [x26, #320]
  471154:	mov	x1, #0x1                   	// #1
  471158:	mov	x0, #0x0                   	// #0
  47115c:	add	x2, x2, x1
  471160:	str	x2, [x26, #320]
  471164:	b	47111c <_obstack_memory_used@@Base+0x14d2c>
  471168:	ldr	x21, [x21, #8]
  47116c:	ldr	w2, [x21]
  471170:	b	470f4c <_obstack_memory_used@@Base+0x14b5c>
  471174:	nop
  471178:	stp	x29, x30, [sp, #-64]!
  47117c:	mov	x29, sp
  471180:	stp	x19, x20, [sp, #16]
  471184:	mov	x19, x0
  471188:	mov	x20, x3
  47118c:	stp	x21, x22, [sp, #32]
  471190:	mov	x0, x3
  471194:	mov	w21, w1
  471198:	stp	x23, x24, [sp, #48]
  47119c:	mov	x22, x2
  4711a0:	cbz	x3, 4711cc <_obstack_memory_used@@Base+0x14ddc>
  4711a4:	nop
  4711a8:	ldr	w4, [x0, #16]
  4711ac:	cbz	w4, 4712b8 <_obstack_memory_used@@Base+0x14ec8>
  4711b0:	ldr	x0, [x0]
  4711b4:	cbnz	x0, 4711a8 <_obstack_memory_used@@Base+0x14db8>
  4711b8:	mov	x2, x20
  4711bc:	mov	w1, w21
  4711c0:	mov	x0, x19
  4711c4:	mov	w3, #0x0                   	// #0
  4711c8:	bl	470da8 <_obstack_memory_used@@Base+0x149b8>
  4711cc:	ldr	x23, [x19, #256]
  4711d0:	cmp	x23, #0xff
  4711d4:	b.eq	4712e4 <_obstack_memory_used@@Base+0x14ef4>  // b.none
  4711d8:	add	x1, x23, #0x1
  4711dc:	str	x1, [x19, #256]
  4711e0:	mov	w0, #0x20                  	// #32
  4711e4:	strb	w0, [x19, x23]
  4711e8:	strb	w0, [x19, #264]
  4711ec:	cmp	x1, #0xff
  4711f0:	b.eq	47127c <_obstack_memory_used@@Base+0x14e8c>  // b.none
  4711f4:	add	x0, x1, #0x1
  4711f8:	str	x0, [x19, #256]
  4711fc:	mov	w2, #0x5b                  	// #91
  471200:	strb	w2, [x19, x1]
  471204:	strb	w2, [x19, #264]
  471208:	ldr	x2, [x22]
  47120c:	cbz	x2, 471220 <_obstack_memory_used@@Base+0x14e30>
  471210:	mov	x0, x19
  471214:	mov	w1, w21
  471218:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  47121c:	ldr	x0, [x19, #256]
  471220:	cmp	x0, #0xff
  471224:	b.eq	471250 <_obstack_memory_used@@Base+0x14e60>  // b.none
  471228:	add	x1, x0, #0x1
  47122c:	str	x1, [x19, #256]
  471230:	mov	w1, #0x5d                  	// #93
  471234:	strb	w1, [x19, x0]
  471238:	strb	w1, [x19, #264]
  47123c:	ldp	x19, x20, [sp, #16]
  471240:	ldp	x21, x22, [sp, #32]
  471244:	ldp	x23, x24, [sp, #48]
  471248:	ldp	x29, x30, [sp], #64
  47124c:	ret
  471250:	ldp	x3, x2, [x19, #272]
  471254:	strb	wzr, [x19, #255]
  471258:	mov	x1, x0
  47125c:	mov	x0, x19
  471260:	blr	x3
  471264:	ldr	x2, [x19, #320]
  471268:	mov	x1, #0x1                   	// #1
  47126c:	mov	x0, #0x0                   	// #0
  471270:	add	x2, x2, x1
  471274:	str	x2, [x19, #320]
  471278:	b	47122c <_obstack_memory_used@@Base+0x14e3c>
  47127c:	ldp	x3, x2, [x19, #272]
  471280:	strb	wzr, [x19, #255]
  471284:	mov	x0, x19
  471288:	blr	x3
  47128c:	mov	w1, #0x5b                  	// #91
  471290:	strb	w1, [x19]
  471294:	strb	w1, [x19, #264]
  471298:	mov	x0, #0x1                   	// #1
  47129c:	ldr	x1, [x19, #320]
  4712a0:	ldr	x2, [x22]
  4712a4:	add	x1, x1, x0
  4712a8:	str	x0, [x19, #256]
  4712ac:	str	x1, [x19, #320]
  4712b0:	cbnz	x2, 471210 <_obstack_memory_used@@Base+0x14e20>
  4712b4:	b	471228 <_obstack_memory_used@@Base+0x14e38>
  4712b8:	ldr	x0, [x0, #8]
  4712bc:	ldr	w0, [x0]
  4712c0:	cmp	w0, #0x2a
  4712c4:	b.ne	471328 <_obstack_memory_used@@Base+0x14f38>  // b.any
  4712c8:	mov	w1, w21
  4712cc:	mov	x2, x20
  4712d0:	mov	x0, x19
  4712d4:	mov	w3, #0x0                   	// #0
  4712d8:	bl	470da8 <_obstack_memory_used@@Base+0x149b8>
  4712dc:	ldr	x1, [x19, #256]
  4712e0:	b	4711ec <_obstack_memory_used@@Base+0x14dfc>
  4712e4:	ldp	x3, x2, [x19, #272]
  4712e8:	strb	wzr, [x19, #255]
  4712ec:	mov	x1, x23
  4712f0:	mov	x0, x19
  4712f4:	blr	x3
  4712f8:	mov	w1, #0x5b20                	// #23328
  4712fc:	mov	w0, #0x5b                  	// #91
  471300:	strh	w1, [x19]
  471304:	strb	w0, [x19, #264]
  471308:	mov	x0, #0x2                   	// #2
  47130c:	ldr	x1, [x19, #320]
  471310:	ldr	x2, [x22]
  471314:	add	x1, x1, #0x1
  471318:	str	x0, [x19, #256]
  47131c:	str	x1, [x19, #320]
  471320:	cbnz	x2, 471210 <_obstack_memory_used@@Base+0x14e20>
  471324:	b	471228 <_obstack_memory_used@@Base+0x14e38>
  471328:	mov	w24, #0x20                  	// #32
  47132c:	mov	x23, #0x0                   	// #0
  471330:	ldr	x1, [x19, #256]
  471334:	b	47135c <_obstack_memory_used@@Base+0x14f6c>
  471338:	mov	x0, x1
  47133c:	add	x1, x1, #0x1
  471340:	str	x1, [x19, #256]
  471344:	cmp	x23, #0x1
  471348:	strb	w24, [x19, x0]
  47134c:	strb	w24, [x19, #264]
  471350:	mov	w24, #0x28                  	// #40
  471354:	b.eq	4713a0 <_obstack_memory_used@@Base+0x14fb0>  // b.none
  471358:	mov	x23, #0x1                   	// #1
  47135c:	cmp	x1, #0xff
  471360:	b.ne	471338 <_obstack_memory_used@@Base+0x14f48>  // b.any
  471364:	ldp	x3, x2, [x19, #272]
  471368:	strb	wzr, [x19, #255]
  47136c:	mov	x0, x19
  471370:	blr	x3
  471374:	ldr	x2, [x19, #320]
  471378:	mov	x0, #0x0                   	// #0
  47137c:	mov	x1, #0x1                   	// #1
  471380:	str	x1, [x19, #256]
  471384:	add	x2, x2, x1
  471388:	str	x2, [x19, #320]
  47138c:	strb	w24, [x19, x0]
  471390:	cmp	x23, #0x1
  471394:	strb	w24, [x19, #264]
  471398:	mov	w24, #0x28                  	// #40
  47139c:	b.ne	471358 <_obstack_memory_used@@Base+0x14f68>  // b.any
  4713a0:	mov	w1, w21
  4713a4:	mov	x2, x20
  4713a8:	mov	x0, x19
  4713ac:	mov	w3, #0x0                   	// #0
  4713b0:	bl	470da8 <_obstack_memory_used@@Base+0x149b8>
  4713b4:	ldr	x1, [x19, #256]
  4713b8:	cmp	x1, #0xff
  4713bc:	b.eq	4713d8 <_obstack_memory_used@@Base+0x14fe8>  // b.none
  4713c0:	add	x23, x1, #0x1
  4713c4:	str	x23, [x19, #256]
  4713c8:	mov	w0, #0x29                  	// #41
  4713cc:	strb	w0, [x19, x1]
  4713d0:	strb	w0, [x19, #264]
  4713d4:	b	4711d0 <_obstack_memory_used@@Base+0x14de0>
  4713d8:	ldp	x3, x2, [x19, #272]
  4713dc:	strb	wzr, [x19, #255]
  4713e0:	mov	x0, x19
  4713e4:	blr	x3
  4713e8:	ldr	x0, [x19, #320]
  4713ec:	mov	w1, #0x29                  	// #41
  4713f0:	strb	w1, [x19]
  4713f4:	add	x0, x0, #0x1
  4713f8:	str	x0, [x19, #320]
  4713fc:	b	4711d8 <_obstack_memory_used@@Base+0x14de8>
  471400:	ldr	w4, [x2]
  471404:	cmp	w4, #0x32
  471408:	b.eq	471410 <_obstack_memory_used@@Base+0x15020>  // b.none
  47140c:	b	470260 <_obstack_memory_used@@Base+0x13e70>
  471410:	stp	x29, x30, [sp, #-48]!
  471414:	mov	x29, sp
  471418:	stp	x19, x20, [sp, #16]
  47141c:	mov	x19, x0
  471420:	ldr	x0, [x2, #8]
  471424:	stp	x21, x22, [sp, #32]
  471428:	ldrsw	x22, [x0, #16]
  47142c:	ldr	x20, [x0, #8]
  471430:	cbz	x22, 4714a8 <_obstack_memory_used@@Base+0x150b8>
  471434:	add	x22, x20, x22
  471438:	ldr	x1, [x19, #256]
  47143c:	b	471460 <_obstack_memory_used@@Base+0x15070>
  471440:	mov	x2, x1
  471444:	add	x1, x1, #0x1
  471448:	str	x1, [x19, #256]
  47144c:	add	x20, x20, #0x1
  471450:	cmp	x20, x22
  471454:	strb	w21, [x19, x2]
  471458:	strb	w21, [x19, #264]
  47145c:	b.eq	4714a8 <_obstack_memory_used@@Base+0x150b8>  // b.none
  471460:	ldrb	w21, [x20]
  471464:	cmp	x1, #0xff
  471468:	b.ne	471440 <_obstack_memory_used@@Base+0x15050>  // b.any
  47146c:	ldp	x3, x2, [x19, #272]
  471470:	strb	wzr, [x19, #255]
  471474:	mov	x0, x19
  471478:	add	x20, x20, #0x1
  47147c:	blr	x3
  471480:	ldr	x0, [x19, #320]
  471484:	mov	x2, #0x0                   	// #0
  471488:	mov	x1, #0x1                   	// #1
  47148c:	str	x1, [x19, #256]
  471490:	add	x0, x0, x1
  471494:	str	x0, [x19, #320]
  471498:	strb	w21, [x19, x2]
  47149c:	cmp	x20, x22
  4714a0:	strb	w21, [x19, #264]
  4714a4:	b.ne	471460 <_obstack_memory_used@@Base+0x15070>  // b.any
  4714a8:	ldp	x19, x20, [sp, #16]
  4714ac:	ldp	x21, x22, [sp, #32]
  4714b0:	ldp	x29, x30, [sp], #48
  4714b4:	ret
  4714b8:	stp	x29, x30, [sp, #-48]!
  4714bc:	mov	x29, sp
  4714c0:	str	x21, [sp, #32]
  4714c4:	mov	w21, w1
  4714c8:	ldr	w1, [x2]
  4714cc:	stp	x19, x20, [sp, #16]
  4714d0:	mov	x20, x2
  4714d4:	cmp	w1, #0x31
  4714d8:	mov	x19, x0
  4714dc:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4714e0:	b.ls	471570 <_obstack_memory_used@@Base+0x15180>  // b.plast
  4714e4:	cmp	w1, #0x6
  4714e8:	b.eq	471570 <_obstack_memory_used@@Base+0x15180>  // b.none
  4714ec:	ldr	x1, [x0, #256]
  4714f0:	cmp	x1, #0xff
  4714f4:	b.eq	47158c <_obstack_memory_used@@Base+0x1519c>  // b.none
  4714f8:	add	x0, x1, #0x1
  4714fc:	str	x0, [x19, #256]
  471500:	mov	w0, #0x28                  	// #40
  471504:	strb	w0, [x19, x1]
  471508:	mov	x2, x20
  47150c:	strb	w0, [x19, #264]
  471510:	mov	w1, w21
  471514:	mov	x0, x19
  471518:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  47151c:	ldr	x1, [x19, #256]
  471520:	add	x0, x1, #0x1
  471524:	cmp	x1, #0xff
  471528:	b.ne	471550 <_obstack_memory_used@@Base+0x15160>  // b.any
  47152c:	ldp	x3, x2, [x19, #272]
  471530:	strb	wzr, [x19, #255]
  471534:	mov	x0, x19
  471538:	blr	x3
  47153c:	ldr	x2, [x19, #320]
  471540:	mov	x0, #0x1                   	// #1
  471544:	mov	x1, #0x0                   	// #0
  471548:	add	x2, x2, x0
  47154c:	str	x2, [x19, #320]
  471550:	str	x0, [x19, #256]
  471554:	mov	w0, #0x29                  	// #41
  471558:	strb	w0, [x19, x1]
  47155c:	strb	w0, [x19, #264]
  471560:	ldp	x19, x20, [sp, #16]
  471564:	ldr	x21, [sp, #32]
  471568:	ldp	x29, x30, [sp], #48
  47156c:	ret
  471570:	mov	x2, x20
  471574:	mov	w1, w21
  471578:	mov	x0, x19
  47157c:	ldp	x19, x20, [sp, #16]
  471580:	ldr	x21, [sp, #32]
  471584:	ldp	x29, x30, [sp], #48
  471588:	b	470260 <_obstack_memory_used@@Base+0x13e70>
  47158c:	ldp	x3, x2, [x0, #272]
  471590:	strb	wzr, [x0, #255]
  471594:	blr	x3
  471598:	ldr	x2, [x19, #320]
  47159c:	mov	x0, #0x1                   	// #1
  4715a0:	mov	x1, #0x0                   	// #0
  4715a4:	add	x2, x2, x0
  4715a8:	str	x2, [x19, #320]
  4715ac:	b	4714fc <_obstack_memory_used@@Base+0x1510c>
  4715b0:	stp	x29, x30, [sp, #-80]!
  4715b4:	mov	x29, sp
  4715b8:	stp	x19, x20, [sp, #16]
  4715bc:	mov	x19, x0
  4715c0:	ldr	x0, [x2, #8]
  4715c4:	stp	x21, x22, [sp, #32]
  4715c8:	mov	w22, w1
  4715cc:	ldr	x0, [x0]
  4715d0:	ldrb	w1, [x0]
  4715d4:	cmp	w1, #0x66
  4715d8:	b.ne	47176c <_obstack_memory_used@@Base+0x1537c>  // b.any
  4715dc:	ldr	x1, [x3]
  4715e0:	stp	x23, x24, [sp, #48]
  4715e4:	stp	x25, x26, [sp, #64]
  4715e8:	mov	x25, #0x0                   	// #0
  4715ec:	ldp	x23, x26, [x1, #8]
  4715f0:	ldr	w1, [x26]
  4715f4:	cmp	w1, #0x3c
  4715f8:	b.eq	471834 <_obstack_memory_used@@Base+0x15444>  // b.none
  4715fc:	ldr	w21, [x19, #316]
  471600:	mov	w1, #0xffffffff            	// #-1
  471604:	str	w1, [x19, #316]
  471608:	ldrb	w0, [x0, #1]
  47160c:	cmp	w0, #0x6c
  471610:	b.eq	471854 <_obstack_memory_used@@Base+0x15464>  // b.none
  471614:	b.hi	471780 <_obstack_memory_used@@Base+0x15390>  // b.pmore
  471618:	cmp	w0, #0x4c
  47161c:	b.eq	471628 <_obstack_memory_used@@Base+0x15238>  // b.none
  471620:	cmp	w0, #0x52
  471624:	b.ne	47174c <_obstack_memory_used@@Base+0x1535c>  // b.any
  471628:	ldr	x1, [x19, #256]
  47162c:	add	x0, x1, #0x1
  471630:	cmp	x1, #0xff
  471634:	b.eq	471914 <_obstack_memory_used@@Base+0x15524>  // b.none
  471638:	str	x0, [x19, #256]
  47163c:	mov	w0, #0x28                  	// #40
  471640:	strb	w0, [x19, x1]
  471644:	mov	x2, x26
  471648:	strb	w0, [x19, #264]
  47164c:	mov	w1, w22
  471650:	mov	x0, x19
  471654:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  471658:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  47165c:	add	x20, x20, #0x150
  471660:	mov	w1, w22
  471664:	mov	x2, x23
  471668:	mov	x0, x19
  47166c:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  471670:	add	x26, x20, #0x3
  471674:	mov	w24, #0x2e                  	// #46
  471678:	ldr	x1, [x19, #256]
  47167c:	b	4716a4 <_obstack_memory_used@@Base+0x152b4>
  471680:	mov	x0, x1
  471684:	add	x1, x1, #0x1
  471688:	str	x1, [x19, #256]
  47168c:	add	x20, x20, #0x1
  471690:	cmp	x26, x20
  471694:	strb	w24, [x19, x0]
  471698:	strb	w24, [x19, #264]
  47169c:	b.eq	4716e8 <_obstack_memory_used@@Base+0x152f8>  // b.none
  4716a0:	ldrb	w24, [x20]
  4716a4:	cmp	x1, #0xff
  4716a8:	b.ne	471680 <_obstack_memory_used@@Base+0x15290>  // b.any
  4716ac:	ldp	x3, x2, [x19, #272]
  4716b0:	strb	wzr, [x19, #255]
  4716b4:	mov	x0, x19
  4716b8:	add	x20, x20, #0x1
  4716bc:	blr	x3
  4716c0:	ldr	x2, [x19, #320]
  4716c4:	mov	x0, #0x0                   	// #0
  4716c8:	mov	x1, #0x1                   	// #1
  4716cc:	str	x1, [x19, #256]
  4716d0:	add	x2, x2, x1
  4716d4:	str	x2, [x19, #320]
  4716d8:	strb	w24, [x19, x0]
  4716dc:	cmp	x26, x20
  4716e0:	strb	w24, [x19, #264]
  4716e4:	b.ne	4716a0 <_obstack_memory_used@@Base+0x152b0>  // b.any
  4716e8:	mov	x2, x23
  4716ec:	mov	w1, w22
  4716f0:	mov	x0, x19
  4716f4:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  4716f8:	mov	x2, x25
  4716fc:	mov	w1, w22
  471700:	mov	x0, x19
  471704:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  471708:	ldr	x1, [x19, #256]
  47170c:	add	x0, x1, #0x1
  471710:	cmp	x1, #0xff
  471714:	b.ne	47173c <_obstack_memory_used@@Base+0x1534c>  // b.any
  471718:	ldp	x3, x2, [x19, #272]
  47171c:	strb	wzr, [x19, #255]
  471720:	mov	x0, x19
  471724:	blr	x3
  471728:	ldr	x2, [x19, #320]
  47172c:	mov	x0, #0x1                   	// #1
  471730:	mov	x1, #0x0                   	// #0
  471734:	add	x2, x2, x0
  471738:	str	x2, [x19, #320]
  47173c:	str	x0, [x19, #256]
  471740:	mov	w0, #0x29                  	// #41
  471744:	strb	w0, [x19, x1]
  471748:	strb	w0, [x19, #264]
  47174c:	ldp	x23, x24, [sp, #48]
  471750:	mov	w0, #0x1                   	// #1
  471754:	ldp	x25, x26, [sp, #64]
  471758:	str	w21, [x19, #316]
  47175c:	ldp	x19, x20, [sp, #16]
  471760:	ldp	x21, x22, [sp, #32]
  471764:	ldp	x29, x30, [sp], #80
  471768:	ret
  47176c:	mov	w0, #0x0                   	// #0
  471770:	ldp	x19, x20, [sp, #16]
  471774:	ldp	x21, x22, [sp, #32]
  471778:	ldp	x29, x30, [sp], #80
  47177c:	ret
  471780:	cmp	w0, #0x72
  471784:	b.ne	47174c <_obstack_memory_used@@Base+0x1535c>  // b.any
  471788:	ldr	x1, [x19, #256]
  47178c:	add	x0, x1, #0x1
  471790:	cmp	x1, #0xff
  471794:	b.eq	4718ec <_obstack_memory_used@@Base+0x154fc>  // b.none
  471798:	str	x0, [x19, #256]
  47179c:	mov	w0, #0x28                  	// #40
  4717a0:	strb	w0, [x19, x1]
  4717a4:	mov	x2, x26
  4717a8:	strb	w0, [x19, #264]
  4717ac:	mov	w1, w22
  4717b0:	mov	x0, x19
  4717b4:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4717b8:	bl	4714b8 <_obstack_memory_used@@Base+0x150c8>
  4717bc:	add	x20, x20, #0x270
  4717c0:	mov	w1, w22
  4717c4:	mov	x2, x23
  4717c8:	mov	x0, x19
  4717cc:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  4717d0:	add	x22, x20, #0x4
  4717d4:	mov	w24, #0x2e                  	// #46
  4717d8:	ldr	x1, [x19, #256]
  4717dc:	b	471804 <_obstack_memory_used@@Base+0x15414>
  4717e0:	mov	x0, x1
  4717e4:	add	x1, x1, #0x1
  4717e8:	str	x1, [x19, #256]
  4717ec:	add	x20, x20, #0x1
  4717f0:	strb	w24, [x19, x0]
  4717f4:	cmp	x20, x22
  4717f8:	strb	w24, [x19, #264]
  4717fc:	b.eq	47174c <_obstack_memory_used@@Base+0x1535c>  // b.none
  471800:	ldrb	w24, [x20]
  471804:	cmp	x1, #0xff
  471808:	b.ne	4717e0 <_obstack_memory_used@@Base+0x153f0>  // b.any
  47180c:	ldp	x3, x2, [x19, #272]
  471810:	strb	wzr, [x19, #255]
  471814:	mov	x0, x19
  471818:	blr	x3
  47181c:	ldr	x2, [x19, #320]
  471820:	mov	x1, #0x1                   	// #1
  471824:	mov	x0, #0x0                   	// #0
  471828:	add	x2, x2, x1
  47182c:	str	x2, [x19, #320]
  471830:	b	4717e8 <_obstack_memory_used@@Base+0x153f8>
  471834:	ldr	w21, [x19, #316]
  471838:	mov	w1, #0xffffffff            	// #-1
  47183c:	ldr	x25, [x26, #16]
  471840:	ldr	x26, [x26, #8]
  471844:	str	w1, [x19, #316]
  471848:	ldrb	w0, [x0, #1]
  47184c:	cmp	w0, #0x6c
  471850:	b.ne	471614 <_obstack_memory_used@@Base+0x15224>  // b.any
  471854:	adrp	x20, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  471858:	add	x20, x20, #0x268
  47185c:	add	x25, x20, #0x4
  471860:	mov	w24, #0x28                  	// #40
  471864:	ldr	x1, [x19, #256]
  471868:	b	471890 <_obstack_memory_used@@Base+0x154a0>
  47186c:	mov	x0, x1
  471870:	add	x1, x1, #0x1
  471874:	str	x1, [x19, #256]
  471878:	add	x20, x20, #0x1
  47187c:	cmp	x25, x20
  471880:	strb	w24, [x19, x0]
  471884:	strb	w24, [x19, #264]
  471888:	b.eq	4718d4 <_obstack_memory_used@@Base+0x154e4>  // b.none
  47188c:	ldrb	w24, [x20]
  471890:	cmp	x1, #0xff
  471894:	b.ne	47186c <_obstack_memory_used@@Base+0x1547c>  // b.any
  471898:	ldp	x3, x2, [x19, #272]
  47189c:	strb	wzr, [x19, #255]
  4718a0:	mov	x0, x19
  4718a4:	add	x20, x20, #0x1
  4718a8:	blr	x3
  4718ac:	ldr	x2, [x19, #320]
  4718b0:	mov	x0, #0x0                   	// #0
  4718b4:	mov	x1, #0x1                   	// #1
  4718b8:	str	x1, [x19, #256]
  4718bc:	add	x2, x2, x1
  4718c0:	str	x2, [x19, #320]
  4718c4:	strb	w24, [x19, x0]
  4718c8:	cmp	x25, x20
  4718cc:	strb	w24, [x19, #264]
  4718d0:	b.ne	47188c <_obstack_memory_used@@Base+0x1549c>  // b.any
  4718d4:	mov	x2, x23
  4718d8:	mov	w1, w22
  4718dc:	mov	x0, x19
  4718e0:	bl	471400 <_obstack_memory_used@@Base+0x15010>
  4718e4:	mov	x2, x26
  4718e8:	b	4716fc <_obstack_memory_used@@Base+0x1530c>
  4718ec:	ldp	x3, x2, [x19, #272]
  4718f0:	strb	wzr, [x19, #255]
  4718f4:	mov	x0, x19
  4718f8:	blr	x3
  4718fc:	ldr	x2, [x19, #320]
  471900:	mov	x0, #0x1                   	// #1
  471904:	mov	x1, #0x0                   	// #0
  471908:	add	x2, x2, x0
  47190c:	str	x2, [x19, #320]
  471910:	b	471798 <_obstack_memory_used@@Base+0x153a8>
  471914:	ldp	x3, x2, [x19, #272]
  471918:	strb	wzr, [x19, #255]
  47191c:	mov	x0, x19
  471920:	blr	x3
  471924:	ldr	x2, [x19, #320]
  471928:	mov	x0, #0x1                   	// #1
  47192c:	mov	x1, #0x0                   	// #0
  471930:	add	x2, x2, x0
  471934:	str	x2, [x19, #320]
  471938:	b	471638 <_obstack_memory_used@@Base+0x15248>
  47193c:	nop
  471940:	sub	sp, sp, #0x230
  471944:	stp	x29, x30, [sp]
  471948:	mov	x29, sp
  47194c:	stp	x19, x20, [sp, #16]
  471950:	mov	x19, x0
  471954:	mov	x20, x1
  471958:	stp	x21, x22, [sp, #32]
  47195c:	mov	x21, x2
  471960:	stp	x23, x24, [sp, #48]
  471964:	stp	x25, x26, [sp, #64]
  471968:	str	x27, [sp, #80]
  47196c:	ldrb	w24, [x0]
  471970:	cmp	w24, #0x5f
  471974:	b.eq	471b20 <_obstack_memory_used@@Base+0x15730>  // b.none
  471978:	adrp	x1, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  47197c:	mov	x0, x19
  471980:	add	x1, x1, #0x278
  471984:	mov	x2, #0x8                   	// #8
  471988:	mov	w23, #0x0                   	// #0
  47198c:	bl	402f80 <strncmp@plt>
  471990:	cbnz	w0, 4719e0 <_obstack_memory_used@@Base+0x155f0>
  471994:	ldrb	w0, [x19, #8]
  471998:	mov	w2, #0x5f                  	// #95
  47199c:	mov	w1, #0x24                  	// #36
  4719a0:	cmp	w0, #0x2e
  4719a4:	ccmp	w0, w2, #0x4, ne  // ne = any
  4719a8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4719ac:	b.ne	4719e0 <_obstack_memory_used@@Base+0x155f0>  // b.any
  4719b0:	ldrb	w0, [x19, #9]
  4719b4:	mov	w1, #0x49                  	// #73
  4719b8:	cmp	w0, #0x44
  4719bc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4719c0:	b.ne	4719e0 <_obstack_memory_used@@Base+0x155f0>  // b.any
  4719c4:	ldrb	w1, [x19, #10]
  4719c8:	cmp	w1, w2
  4719cc:	b.ne	4719e0 <_obstack_memory_used@@Base+0x155f0>  // b.any
  4719d0:	cmp	w0, #0x49
  4719d4:	cset	w23, ne  // ne = any
  4719d8:	add	w23, w23, #0x2
  4719dc:	nop
  4719e0:	mov	x0, x19
  4719e4:	bl	402d50 <strlen@plt>
  4719e8:	mov	x3, x0
  4719ec:	mov	w1, #0x11                  	// #17
  4719f0:	add	x0, x19, x0
  4719f4:	stp	x19, x0, [x29, #96]
  4719f8:	lsl	w4, w3, #1
  4719fc:	str	w1, [x29, #112]
  471a00:	cmp	w4, #0x800
  471a04:	str	x19, [x29, #120]
  471a08:	mov	w0, #0x0                   	// #0
  471a0c:	stp	wzr, w4, [x29, #136]
  471a10:	stp	wzr, w3, [x29, #152]
  471a14:	stp	xzr, xzr, [x29, #160]
  471a18:	str	xzr, [x29, #176]
  471a1c:	b.hi	471afc <_obstack_memory_used@@Base+0x1570c>  // b.pmore
  471a20:	mov	x22, sp
  471a24:	mov	w27, #0x18                  	// #24
  471a28:	sbfiz	x3, x3, #3, #32
  471a2c:	cmp	w23, #0x1
  471a30:	add	x3, x3, #0xf
  471a34:	smsubl	x0, w4, w27, x22
  471a38:	and	x3, x3, #0xfffffffffffffff0
  471a3c:	mov	sp, x0
  471a40:	mov	x25, sp
  471a44:	sub	sp, sp, x3
  471a48:	mov	x0, sp
  471a4c:	str	x25, [x29, #128]
  471a50:	str	x0, [x29, #144]
  471a54:	b.eq	471b60 <_obstack_memory_used@@Base+0x15770>  // b.none
  471a58:	sub	w0, w23, #0x2
  471a5c:	cmp	w0, #0x1
  471a60:	b.hi	471ba4 <_obstack_memory_used@@Base+0x157b4>  // b.pmore
  471a64:	cmp	w23, #0x2
  471a68:	ldrb	w0, [x19, #11]
  471a6c:	add	x24, x19, #0xb
  471a70:	str	x24, [x29, #120]
  471a74:	cset	w1, ne  // ne = any
  471a78:	cmp	w0, #0x5f
  471a7c:	add	w23, w1, #0x44
  471a80:	b.eq	471b34 <_obstack_memory_used@@Base+0x15744>  // b.none
  471a84:	cmp	w4, #0x0
  471a88:	b.le	471c88 <_obstack_memory_used@@Base+0x15898>
  471a8c:	mov	x0, x24
  471a90:	bl	402d50 <strlen@plt>
  471a94:	mov	w1, #0x1                   	// #1
  471a98:	str	wzr, [x25, #4]
  471a9c:	str	w1, [x29, #136]
  471aa0:	cmp	w0, #0x0
  471aa4:	b.le	471c88 <_obstack_memory_used@@Base+0x15898>
  471aa8:	add	x26, x29, #0x60
  471aac:	str	wzr, [x25]
  471ab0:	str	x24, [x25, #8]
  471ab4:	str	w0, [x25, #16]
  471ab8:	mov	w1, w23
  471abc:	mov	x2, x25
  471ac0:	mov	x3, #0x0                   	// #0
  471ac4:	mov	x0, x26
  471ac8:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  471acc:	mov	x19, x0
  471ad0:	ldr	x23, [x29, #120]
  471ad4:	mov	x0, x23
  471ad8:	bl	402d50 <strlen@plt>
  471adc:	add	x1, x23, x0
  471ae0:	str	x1, [x29, #120]
  471ae4:	ldrb	w0, [x23, x0]
  471ae8:	cmp	w0, #0x0
  471aec:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  471af0:	b.ne	471bc4 <_obstack_memory_used@@Base+0x157d4>  // b.any
  471af4:	mov	sp, x22
  471af8:	mov	w0, #0x0                   	// #0
  471afc:	mov	sp, x29
  471b00:	ldp	x29, x30, [sp]
  471b04:	ldp	x19, x20, [sp, #16]
  471b08:	ldp	x21, x22, [sp, #32]
  471b0c:	ldp	x23, x24, [sp, #48]
  471b10:	ldp	x25, x26, [sp, #64]
  471b14:	ldr	x27, [sp, #80]
  471b18:	add	sp, sp, #0x230
  471b1c:	ret
  471b20:	ldrb	w0, [x0, #1]
  471b24:	mov	w23, #0x1                   	// #1
  471b28:	cmp	w0, #0x5a
  471b2c:	b.ne	471978 <_obstack_memory_used@@Base+0x15588>  // b.any
  471b30:	b	4719e0 <_obstack_memory_used@@Base+0x155f0>
  471b34:	ldrb	w0, [x19, #12]
  471b38:	cmp	w0, #0x5a
  471b3c:	b.ne	471a84 <_obstack_memory_used@@Base+0x15694>  // b.any
  471b40:	add	x26, x29, #0x60
  471b44:	add	x19, x19, #0xd
  471b48:	mov	x0, x26
  471b4c:	mov	w1, #0x0                   	// #0
  471b50:	str	x19, [x29, #120]
  471b54:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  471b58:	mov	x25, x0
  471b5c:	b	471ab8 <_obstack_memory_used@@Base+0x156c8>
  471b60:	cmp	w24, #0x5f
  471b64:	b.ne	471af4 <_obstack_memory_used@@Base+0x15704>  // b.any
  471b68:	ldrb	w0, [x19, #1]
  471b6c:	cmp	w0, #0x5a
  471b70:	b.ne	471af4 <_obstack_memory_used@@Base+0x15704>  // b.any
  471b74:	add	x26, x29, #0x60
  471b78:	add	x19, x19, #0x2
  471b7c:	mov	w1, w23
  471b80:	mov	x0, x26
  471b84:	str	x19, [x29, #120]
  471b88:	bl	469dd8 <_obstack_memory_used@@Base+0xd9e8>
  471b8c:	ldr	w3, [x29, #112]
  471b90:	mov	x19, x0
  471b94:	tbnz	w3, #0, 471c94 <_obstack_memory_used@@Base+0x158a4>
  471b98:	ldr	x0, [x29, #120]
  471b9c:	ldrb	w0, [x0]
  471ba0:	b	471ae8 <_obstack_memory_used@@Base+0x156f8>
  471ba4:	add	x0, x29, #0x60
  471ba8:	bl	46ab20 <_obstack_memory_used@@Base+0xe730>
  471bac:	ldr	x3, [x29, #120]
  471bb0:	mov	x19, x0
  471bb4:	ldrb	w0, [x3]
  471bb8:	cmp	w0, #0x0
  471bbc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  471bc0:	b.eq	471af4 <_obstack_memory_used@@Base+0x15704>  // b.none
  471bc4:	add	x2, x29, #0x208
  471bc8:	add	x23, x29, #0xb8
  471bcc:	mov	x0, x23
  471bd0:	mov	x1, x19
  471bd4:	str	xzr, [x29, #440]
  471bd8:	stp	xzr, xzr, [x2]
  471bdc:	stp	xzr, xzr, [x2, #16]
  471be0:	strb	wzr, [x29, #448]
  471be4:	stp	x20, x21, [x29, #456]
  471be8:	stp	xzr, xzr, [x29, #472]
  471bec:	stp	xzr, xzr, [x29, #488]
  471bf0:	stp	xzr, xzr, [x29, #504]
  471bf4:	bl	4680f0 <_obstack_memory_used@@Base+0xbd00>
  471bf8:	ldr	w0, [x29, #492]
  471bfc:	cmp	w0, #0x7ff
  471c00:	b.gt	471c08 <_obstack_memory_used@@Base+0x15818>
  471c04:	str	wzr, [x29, #492]
  471c08:	ldr	w3, [x29, #532]
  471c0c:	mov	w4, #0x1                   	// #1
  471c10:	ldr	w6, [x29, #548]
  471c14:	mov	x20, sp
  471c18:	cmp	w3, #0x0
  471c1c:	mov	x2, x19
  471c20:	csel	w5, w3, w4, gt
  471c24:	mov	x0, x23
  471c28:	mov	w1, #0x11                  	// #17
  471c2c:	str	xzr, [x29, #552]
  471c30:	mul	w3, w3, w6
  471c34:	sub	sp, sp, w5, sxtw #4
  471c38:	str	w3, [x29, #548]
  471c3c:	mov	x5, sp
  471c40:	cmp	w3, #0x0
  471c44:	str	x5, [x29, #520]
  471c48:	csel	w3, w3, w4, gt
  471c4c:	sub	sp, sp, w3, sxtw #4
  471c50:	mov	x3, sp
  471c54:	str	x3, [x29, #536]
  471c58:	bl	470260 <_obstack_memory_used@@Base+0x13e70>
  471c5c:	mov	sp, x20
  471c60:	ldr	x1, [x29, #440]
  471c64:	mov	x0, x23
  471c68:	ldp	x3, x2, [x29, #456]
  471c6c:	strb	wzr, [x23, x1]
  471c70:	blr	x3
  471c74:	ldr	w0, [x29, #488]
  471c78:	mov	sp, x22
  471c7c:	cmp	w0, #0x0
  471c80:	cset	w0, eq  // eq = none
  471c84:	b	471afc <_obstack_memory_used@@Base+0x1570c>
  471c88:	add	x26, x29, #0x60
  471c8c:	mov	x25, #0x0                   	// #0
  471c90:	b	471ab8 <_obstack_memory_used@@Base+0x156c8>
  471c94:	ldr	x6, [x29, #120]
  471c98:	ldrb	w0, [x6]
  471c9c:	cmp	w0, #0x2e
  471ca0:	b.ne	471ae8 <_obstack_memory_used@@Base+0x156f8>  // b.any
  471ca4:	nop
  471ca8:	ldrb	w0, [x6, #1]
  471cac:	sub	w1, w0, #0x61
  471cb0:	cmp	w0, #0x5f
  471cb4:	and	w1, w1, #0xff
  471cb8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  471cbc:	b.ls	471d9c <_obstack_memory_used@@Base+0x159ac>  // b.plast
  471cc0:	sub	w0, w0, #0x30
  471cc4:	and	w0, w0, #0xff
  471cc8:	cmp	w0, #0x9
  471ccc:	ldrb	w0, [x6]
  471cd0:	b.hi	471ae8 <_obstack_memory_used@@Base+0x156f8>  // b.pmore
  471cd4:	mov	x3, x6
  471cd8:	cmp	w0, #0x2e
  471cdc:	b.ne	471d2c <_obstack_memory_used@@Base+0x1593c>  // b.any
  471ce0:	ldrb	w4, [x3, #1]
  471ce4:	sub	w4, w4, #0x30
  471ce8:	and	w4, w4, #0xff
  471cec:	cmp	w4, #0x9
  471cf0:	b.hi	471d2c <_obstack_memory_used@@Base+0x1593c>  // b.pmore
  471cf4:	ldrb	w4, [x3, #2]
  471cf8:	add	x3, x3, #0x2
  471cfc:	sub	w5, w4, #0x30
  471d00:	and	w5, w5, #0xff
  471d04:	cmp	w5, #0x9
  471d08:	b.hi	471d24 <_obstack_memory_used@@Base+0x15934>  // b.pmore
  471d0c:	nop
  471d10:	ldrb	w4, [x3, #1]!
  471d14:	sub	w5, w4, #0x30
  471d18:	and	w5, w5, #0xff
  471d1c:	cmp	w5, #0x9
  471d20:	b.ls	471d10 <_obstack_memory_used@@Base+0x15920>  // b.plast
  471d24:	cmp	w4, #0x2e
  471d28:	b.eq	471ce0 <_obstack_memory_used@@Base+0x158f0>  // b.none
  471d2c:	ldp	w0, w1, [x29, #136]
  471d30:	str	x3, [x29, #120]
  471d34:	sub	x4, x3, x6
  471d38:	cmp	w0, w1
  471d3c:	b.ge	471d94 <_obstack_memory_used@@Base+0x159a4>  // b.tcont
  471d40:	ldr	x2, [x29, #128]
  471d44:	smull	x1, w0, w27
  471d48:	add	w0, w0, #0x1
  471d4c:	cmp	w4, #0x0
  471d50:	add	x3, x2, x1
  471d54:	str	wzr, [x3, #4]
  471d58:	str	w0, [x29, #136]
  471d5c:	b.le	471d94 <_obstack_memory_used@@Base+0x159a4>
  471d60:	str	xzr, [x2, x1]
  471d64:	str	x6, [x3, #8]
  471d68:	str	w4, [x3, #16]
  471d6c:	mov	x2, x19
  471d70:	mov	x0, x26
  471d74:	mov	w1, #0x4e                  	// #78
  471d78:	bl	468000 <_obstack_memory_used@@Base+0xbc10>
  471d7c:	ldr	x6, [x29, #120]
  471d80:	mov	x19, x0
  471d84:	ldrb	w0, [x6]
  471d88:	cmp	w0, #0x2e
  471d8c:	b.eq	471ca8 <_obstack_memory_used@@Base+0x158b8>  // b.none
  471d90:	b	471ae8 <_obstack_memory_used@@Base+0x156f8>
  471d94:	mov	x3, #0x0                   	// #0
  471d98:	b	471d6c <_obstack_memory_used@@Base+0x1597c>
  471d9c:	ldrb	w0, [x6, #2]
  471da0:	add	x3, x6, #0x2
  471da4:	b	471dac <_obstack_memory_used@@Base+0x159bc>
  471da8:	ldrb	w0, [x3, #1]!
  471dac:	sub	w1, w0, #0x61
  471db0:	cmp	w0, #0x5f
  471db4:	and	w1, w1, #0xff
  471db8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  471dbc:	b.ls	471da8 <_obstack_memory_used@@Base+0x159b8>  // b.plast
  471dc0:	b	471cd8 <_obstack_memory_used@@Base+0x158e8>
  471dc4:	nop
  471dc8:	stp	x29, x30, [sp, #-96]!
  471dcc:	mov	x29, sp
  471dd0:	stp	x21, x22, [sp, #32]
  471dd4:	mov	x21, x3
  471dd8:	cbz	x0, 471ea8 <_obstack_memory_used@@Base+0x15ab8>
  471ddc:	stp	x19, x20, [sp, #16]
  471de0:	cmp	x1, #0x0
  471de4:	mov	x19, x1
  471de8:	mov	x20, x2
  471dec:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  471df0:	b.eq	471ea4 <_obstack_memory_used@@Base+0x15ab4>  // b.none
  471df4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0xbc10>
  471df8:	add	x2, sp, #0x40
  471dfc:	add	x1, x1, #0xc08
  471e00:	stp	xzr, xzr, [sp, #64]
  471e04:	str	xzr, [sp, #80]
  471e08:	str	wzr, [sp, #88]
  471e0c:	bl	471940 <_obstack_memory_used@@Base+0x15550>
  471e10:	cbz	w0, 471efc <_obstack_memory_used@@Base+0x15b0c>
  471e14:	ldr	w0, [sp, #88]
  471e18:	str	x23, [sp, #48]
  471e1c:	ldr	x22, [sp, #64]
  471e20:	cbnz	w0, 471e80 <_obstack_memory_used@@Base+0x15a90>
  471e24:	ldr	x23, [sp, #80]
  471e28:	cbz	x22, 471f20 <_obstack_memory_used@@Base+0x15b30>
  471e2c:	cbz	x19, 471ef0 <_obstack_memory_used@@Base+0x15b00>
  471e30:	mov	x0, x22
  471e34:	bl	402d50 <strlen@plt>
  471e38:	ldr	x1, [x20]
  471e3c:	cmp	x0, x1
  471e40:	b.cs	471ec8 <_obstack_memory_used@@Base+0x15ad8>  // b.hs, b.nlast
  471e44:	add	x2, x0, #0x1
  471e48:	mov	x1, x22
  471e4c:	mov	x0, x19
  471e50:	bl	402cd0 <memcpy@plt>
  471e54:	mov	x0, x22
  471e58:	mov	x22, x19
  471e5c:	bl	4032a0 <free@plt>
  471e60:	cbz	x21, 471ed8 <_obstack_memory_used@@Base+0x15ae8>
  471e64:	ldp	x19, x20, [sp, #16]
  471e68:	ldr	x23, [sp, #48]
  471e6c:	str	wzr, [x21]
  471e70:	mov	x0, x22
  471e74:	ldp	x21, x22, [sp, #32]
  471e78:	ldp	x29, x30, [sp], #96
  471e7c:	ret
  471e80:	mov	x23, #0x1                   	// #1
  471e84:	cbnz	x22, 471e2c <_obstack_memory_used@@Base+0x15a3c>
  471e88:	cbz	x21, 471f44 <_obstack_memory_used@@Base+0x15b54>
  471e8c:	mov	w0, #0xffffffff            	// #-1
  471e90:	mov	x22, #0x0                   	// #0
  471e94:	ldp	x19, x20, [sp, #16]
  471e98:	ldr	x23, [sp, #48]
  471e9c:	str	w0, [x21]
  471ea0:	b	471e70 <_obstack_memory_used@@Base+0x15a80>
  471ea4:	ldp	x19, x20, [sp, #16]
  471ea8:	cbz	x21, 471f0c <_obstack_memory_used@@Base+0x15b1c>
  471eac:	mov	w0, #0xfffffffd            	// #-3
  471eb0:	str	w0, [x21]
  471eb4:	mov	x22, #0x0                   	// #0
  471eb8:	mov	x0, x22
  471ebc:	ldp	x21, x22, [sp, #32]
  471ec0:	ldp	x29, x30, [sp], #96
  471ec4:	ret
  471ec8:	mov	x0, x19
  471ecc:	bl	4032a0 <free@plt>
  471ed0:	str	x23, [x20]
  471ed4:	cbnz	x21, 471e64 <_obstack_memory_used@@Base+0x15a74>
  471ed8:	mov	x0, x22
  471edc:	ldp	x19, x20, [sp, #16]
  471ee0:	ldp	x21, x22, [sp, #32]
  471ee4:	ldr	x23, [sp, #48]
  471ee8:	ldp	x29, x30, [sp], #96
  471eec:	ret
  471ef0:	cbz	x20, 471e60 <_obstack_memory_used@@Base+0x15a70>
  471ef4:	str	x23, [x20]
  471ef8:	b	471ed4 <_obstack_memory_used@@Base+0x15ae4>
  471efc:	ldr	x0, [sp, #64]
  471f00:	bl	4032a0 <free@plt>
  471f04:	cbnz	x21, 471f30 <_obstack_memory_used@@Base+0x15b40>
  471f08:	ldp	x19, x20, [sp, #16]
  471f0c:	mov	x22, #0x0                   	// #0
  471f10:	mov	x0, x22
  471f14:	ldp	x21, x22, [sp, #32]
  471f18:	ldp	x29, x30, [sp], #96
  471f1c:	ret
  471f20:	cbz	x21, 471f44 <_obstack_memory_used@@Base+0x15b54>
  471f24:	cmp	x23, #0x1
  471f28:	b.eq	471e8c <_obstack_memory_used@@Base+0x15a9c>  // b.none
  471f2c:	ldr	x23, [sp, #48]
  471f30:	mov	w0, #0xfffffffe            	// #-2
  471f34:	mov	x22, #0x0                   	// #0
  471f38:	ldp	x19, x20, [sp, #16]
  471f3c:	str	w0, [x21]
  471f40:	b	471e70 <_obstack_memory_used@@Base+0x15a80>
  471f44:	mov	x22, #0x0                   	// #0
  471f48:	ldp	x19, x20, [sp, #16]
  471f4c:	ldr	x23, [sp, #48]
  471f50:	b	471f10 <_obstack_memory_used@@Base+0x15b20>
  471f54:	nop
  471f58:	cmp	x0, #0x0
  471f5c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  471f60:	b.eq	471f84 <_obstack_memory_used@@Base+0x15b94>  // b.none
  471f64:	stp	x29, x30, [sp, #-16]!
  471f68:	mov	x29, sp
  471f6c:	bl	471940 <_obstack_memory_used@@Base+0x15550>
  471f70:	cmp	w0, #0x0
  471f74:	ldp	x29, x30, [sp], #16
  471f78:	mov	w0, #0xfffffffe            	// #-2
  471f7c:	csel	w0, wzr, w0, ne  // ne = any
  471f80:	ret
  471f84:	mov	w0, #0xfffffffd            	// #-3
  471f88:	ret
  471f8c:	nop
  471f90:	stp	x29, x30, [sp, #-16]!
  471f94:	mov	x29, sp
  471f98:	bl	462080 <_obstack_memory_used@@Base+0x5c90>
  471f9c:	ldr	x0, [x0]
  471fa0:	cbz	x0, 471fb4 <_obstack_memory_used@@Base+0x15bc4>
  471fa4:	ldr	x1, [x0, #80]
  471fa8:	ldr	x0, [x0]
  471fac:	tbz	w1, #0, 471fb4 <_obstack_memory_used@@Base+0x15bc4>
  471fb0:	ldur	x0, [x0, #-112]
  471fb4:	ldp	x29, x30, [sp], #16
  471fb8:	ret
  471fbc:	nop
  471fc0:	and	w5, w0, #0xff
  471fc4:	cmp	w5, #0x50
  471fc8:	b.eq	4720e0 <_obstack_memory_used@@Base+0x15cf0>  // b.none
  471fcc:	and	w4, w5, #0xf
  471fd0:	cmp	w4, #0x4
  471fd4:	b.eq	471ff0 <_obstack_memory_used@@Base+0x15c00>  // b.none
  471fd8:	b.ls	472004 <_obstack_memory_used@@Base+0x15c14>  // b.plast
  471fdc:	cmp	w4, #0xb
  471fe0:	b.eq	472104 <_obstack_memory_used@@Base+0x15d14>  // b.none
  471fe4:	b.ls	472060 <_obstack_memory_used@@Base+0x15c70>  // b.plast
  471fe8:	cmp	w4, #0xc
  471fec:	b.ne	472114 <_obstack_memory_used@@Base+0x15d24>  // b.any
  471ff0:	mov	x0, x2
  471ff4:	ldr	x4, [x0], #8
  471ff8:	cbnz	x4, 4720c0 <_obstack_memory_used@@Base+0x15cd0>
  471ffc:	str	x4, [x3]
  472000:	ret
  472004:	cmp	w4, #0x2
  472008:	b.eq	4720f4 <_obstack_memory_used@@Base+0x15d04>  // b.none
  47200c:	b.ls	472028 <_obstack_memory_used@@Base+0x15c38>  // b.plast
  472010:	cmp	w4, #0x3
  472014:	b.ne	472114 <_obstack_memory_used@@Base+0x15d24>  // b.any
  472018:	mov	x0, x2
  47201c:	ldr	w4, [x0], #4
  472020:	cbz	x4, 471ffc <_obstack_memory_used@@Base+0x15c0c>
  472024:	b	4720c0 <_obstack_memory_used@@Base+0x15cd0>
  472028:	cbz	w4, 471ff0 <_obstack_memory_used@@Base+0x15c00>
  47202c:	cmp	w4, #0x1
  472030:	b.ne	472114 <_obstack_memory_used@@Base+0x15d24>  // b.any
  472034:	mov	x0, x2
  472038:	mov	x4, #0x0                   	// #0
  47203c:	mov	w7, #0x0                   	// #0
  472040:	ldrb	w8, [x0], #1
  472044:	and	x6, x8, #0x7f
  472048:	lsl	x6, x6, x7
  47204c:	add	w7, w7, #0x7
  472050:	orr	x4, x4, x6
  472054:	tbnz	w8, #7, 472040 <_obstack_memory_used@@Base+0x15c50>
  472058:	cbz	x4, 471ffc <_obstack_memory_used@@Base+0x15c0c>
  47205c:	b	4720c0 <_obstack_memory_used@@Base+0x15cd0>
  472060:	cmp	w4, #0x9
  472064:	b.eq	472080 <_obstack_memory_used@@Base+0x15c90>  // b.none
  472068:	cmp	w4, #0xa
  47206c:	b.ne	472114 <_obstack_memory_used@@Base+0x15d24>  // b.any
  472070:	mov	x0, x2
  472074:	ldrsh	x4, [x0], #2
  472078:	cbz	x4, 471ffc <_obstack_memory_used@@Base+0x15c0c>
  47207c:	b	4720c0 <_obstack_memory_used@@Base+0x15cd0>
  472080:	mov	x0, x2
  472084:	mov	x4, #0x0                   	// #0
  472088:	mov	w7, #0x0                   	// #0
  47208c:	ldrb	w8, [x0], #1
  472090:	and	x6, x8, #0x7f
  472094:	lsl	x6, x6, x7
  472098:	add	w7, w7, #0x7
  47209c:	orr	x4, x4, x6
  4720a0:	tbnz	w8, #7, 47208c <_obstack_memory_used@@Base+0x15c9c>
  4720a4:	cmp	w7, #0x3f
  4720a8:	b.hi	471ff8 <_obstack_memory_used@@Base+0x15c08>  // b.pmore
  4720ac:	tbz	w8, #6, 471ff8 <_obstack_memory_used@@Base+0x15c08>
  4720b0:	mov	x6, #0xffffffffffffffff    	// #-1
  4720b4:	lsl	x7, x6, x7
  4720b8:	orr	x4, x4, x7
  4720bc:	nop
  4720c0:	and	w6, w5, #0x70
  4720c4:	cmp	w6, #0x10
  4720c8:	csel	x1, x2, x1, eq  // eq = none
  4720cc:	add	x4, x4, x1
  4720d0:	tbz	w5, #7, 471ffc <_obstack_memory_used@@Base+0x15c0c>
  4720d4:	ldr	x4, [x4]
  4720d8:	str	x4, [x3]
  4720dc:	ret
  4720e0:	add	x0, x2, #0x7
  4720e4:	and	x0, x0, #0xfffffffffffffff8
  4720e8:	ldr	x4, [x0], #8
  4720ec:	str	x4, [x3]
  4720f0:	ret
  4720f4:	mov	x0, x2
  4720f8:	ldrh	w4, [x0], #2
  4720fc:	cbz	x4, 471ffc <_obstack_memory_used@@Base+0x15c0c>
  472100:	b	4720c0 <_obstack_memory_used@@Base+0x15cd0>
  472104:	mov	x0, x2
  472108:	ldrsw	x4, [x0], #4
  47210c:	cbz	x4, 471ffc <_obstack_memory_used@@Base+0x15c0c>
  472110:	b	4720c0 <_obstack_memory_used@@Base+0x15cd0>
  472114:	stp	x29, x30, [sp, #-16]!
  472118:	mov	x29, sp
  47211c:	bl	403180 <abort@plt>
  472120:	and	w0, w0, #0xff
  472124:	cmp	w0, #0xff
  472128:	b.eq	472174 <_obstack_memory_used@@Base+0x15d84>  // b.none
  47212c:	and	w2, w0, #0x70
  472130:	cmp	w2, #0x30
  472134:	b.eq	47218c <_obstack_memory_used@@Base+0x15d9c>  // b.none
  472138:	b.hi	47214c <_obstack_memory_used@@Base+0x15d5c>  // b.pmore
  47213c:	cmp	w2, #0x20
  472140:	b.ne	47215c <_obstack_memory_used@@Base+0x15d6c>  // b.any
  472144:	ldr	x0, [x1, #808]
  472148:	ret
  47214c:	cmp	w2, #0x40
  472150:	b.ne	47217c <_obstack_memory_used@@Base+0x15d8c>  // b.any
  472154:	ldr	x0, [x1, #824]
  472158:	ret
  47215c:	b.hi	472168 <_obstack_memory_used@@Base+0x15d78>  // b.pmore
  472160:	tst	w0, #0x60
  472164:	b.eq	472174 <_obstack_memory_used@@Base+0x15d84>  // b.none
  472168:	stp	x29, x30, [sp, #-16]!
  47216c:	mov	x29, sp
  472170:	bl	403180 <abort@plt>
  472174:	mov	x0, #0x0                   	// #0
  472178:	ret
  47217c:	cmp	w2, #0x50
  472180:	mov	x0, #0x0                   	// #0
  472184:	b.ne	472168 <_obstack_memory_used@@Base+0x15d78>  // b.any
  472188:	ret
  47218c:	ldr	x0, [x1, #816]
  472190:	ret
  472194:	nop
  472198:	str	xzr, [x3, #1568]
  47219c:	cmp	x0, x1
  4721a0:	b.cs	472930 <_obstack_memory_used@@Base+0x16540>  // b.hs, b.nlast
  4721a4:	stp	x29, x30, [sp, #-112]!
  4721a8:	mov	x29, sp
  4721ac:	stp	x21, x22, [sp, #32]
  4721b0:	mov	x21, x2
  4721b4:	mov	x22, x1
  4721b8:	stp	x19, x20, [sp, #16]
  4721bc:	mov	x20, x3
  4721c0:	ldr	x2, [x21, #792]
  4721c4:	stp	x23, x24, [sp, #48]
  4721c8:	adrp	x23, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4721cc:	ldr	x5, [x21, #832]
  4721d0:	stp	x25, x26, [sp, #64]
  4721d4:	add	x23, x23, #0x9bc
  4721d8:	ldr	x1, [x20, #1608]
  4721dc:	stp	x27, x28, [sp, #80]
  4721e0:	add	x5, x2, x5, lsr #63
  4721e4:	add	x27, x29, #0x68
  4721e8:	cmp	x1, x5
  4721ec:	mov	x25, #0x0                   	// #0
  4721f0:	mov	w24, #0x1                   	// #1
  4721f4:	mov	w26, #0x5                   	// #5
  4721f8:	b.cs	4722c8 <_obstack_memory_used@@Base+0x15ed8>  // b.hs, b.nlast
  4721fc:	nop
  472200:	mov	x19, x0
  472204:	ldrb	w4, [x19], #1
  472208:	and	w5, w4, #0xc0
  47220c:	cmp	w5, #0x40
  472210:	b.eq	4727c4 <_obstack_memory_used@@Base+0x163d4>  // b.none
  472214:	cmp	w5, #0x80
  472218:	b.eq	4727e8 <_obstack_memory_used@@Base+0x163f8>  // b.none
  47221c:	cmp	w5, #0xc0
  472220:	b.eq	4727d8 <_obstack_memory_used@@Base+0x163e8>  // b.none
  472224:	cmp	w4, #0x2f
  472228:	b.hi	472940 <_obstack_memory_used@@Base+0x16550>  // b.pmore
  47222c:	ldrh	w2, [x23, w4, uxtw #1]
  472230:	adr	x3, 47223c <_obstack_memory_used@@Base+0x15e4c>
  472234:	add	x2, x3, w2, sxth #2
  472238:	br	x2
  47223c:	mov	x1, #0x0                   	// #0
  472240:	mov	w0, #0x0                   	// #0
  472244:	ldrb	w3, [x19], #1
  472248:	and	x2, x3, #0x7f
  47224c:	lsl	x2, x2, x0
  472250:	add	w0, w0, #0x7
  472254:	orr	x1, x1, x2
  472258:	tbnz	w3, #7, 472244 <_obstack_memory_used@@Base+0x15e54>
  47225c:	mov	x4, #0x0                   	// #0
  472260:	mov	w2, #0x0                   	// #0
  472264:	nop
  472268:	ldrb	w3, [x19], #1
  47226c:	and	x0, x3, #0x7f
  472270:	lsl	x0, x0, x2
  472274:	add	w2, w2, #0x7
  472278:	orr	x4, x4, x0
  47227c:	tbnz	w3, #7, 472268 <_obstack_memory_used@@Base+0x15e78>
  472280:	ldr	x0, [x20, #1624]
  472284:	cmp	x1, #0x61
  472288:	mul	x4, x4, x0
  47228c:	b.hi	4722a4 <_obstack_memory_used@@Base+0x15eb4>  // b.pmore
  472290:	lsl	x1, x1, #4
  472294:	neg	x4, x4
  472298:	add	x0, x20, x1
  47229c:	str	w24, [x0, #8]
  4722a0:	str	x4, [x20, x1]
  4722a4:	cmp	x22, x19
  4722a8:	b.ls	4722c8 <_obstack_memory_used@@Base+0x15ed8>  // b.plast
  4722ac:	ldr	x2, [x21, #792]
  4722b0:	mov	x0, x19
  4722b4:	ldr	x5, [x21, #832]
  4722b8:	ldr	x1, [x20, #1608]
  4722bc:	add	x5, x2, x5, lsr #63
  4722c0:	cmp	x1, x5
  4722c4:	b.cc	472200 <_obstack_memory_used@@Base+0x15e10>  // b.lo, b.ul, b.last
  4722c8:	mov	sp, x29
  4722cc:	ldp	x19, x20, [sp, #16]
  4722d0:	ldp	x21, x22, [sp, #32]
  4722d4:	ldp	x23, x24, [sp, #48]
  4722d8:	ldp	x25, x26, [sp, #64]
  4722dc:	ldp	x27, x28, [sp, #80]
  4722e0:	ldp	x29, x30, [sp], #112
  4722e4:	ret
  4722e8:	mov	x1, #0x0                   	// #0
  4722ec:	mov	w0, #0x0                   	// #0
  4722f0:	ldrb	w3, [x19], #1
  4722f4:	and	x2, x3, #0x7f
  4722f8:	lsl	x2, x2, x0
  4722fc:	add	w0, w0, #0x7
  472300:	orr	x1, x1, x2
  472304:	tbnz	w3, #7, 4722f0 <_obstack_memory_used@@Base+0x15f00>
  472308:	str	x1, [x21, #848]
  47230c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472310:	mov	x1, #0x0                   	// #0
  472314:	mov	w0, #0x0                   	// #0
  472318:	ldrb	w3, [x19], #1
  47231c:	and	x2, x3, #0x7f
  472320:	lsl	x2, x2, x0
  472324:	add	w0, w0, #0x7
  472328:	orr	x1, x1, x2
  47232c:	tbnz	w3, #7, 472318 <_obstack_memory_used@@Base+0x15f28>
  472330:	cmp	x1, #0x61
  472334:	b.hi	472348 <_obstack_memory_used@@Base+0x15f58>  // b.pmore
  472338:	lsl	x1, x1, #4
  47233c:	add	x0, x20, x1
  472340:	str	w26, [x0, #8]
  472344:	str	x19, [x20, x1]
  472348:	mov	x3, #0x0                   	// #0
  47234c:	mov	w1, #0x0                   	// #0
  472350:	ldrb	w2, [x19], #1
  472354:	and	x0, x2, #0x7f
  472358:	lsl	x0, x0, x1
  47235c:	add	w1, w1, #0x7
  472360:	orr	x3, x3, x0
  472364:	tbnz	w2, #7, 472350 <_obstack_memory_used@@Base+0x15f60>
  472368:	add	x19, x19, x3
  47236c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472370:	mov	x1, #0x0                   	// #0
  472374:	mov	w0, #0x0                   	// #0
  472378:	ldrb	w3, [x19], #1
  47237c:	and	x2, x3, #0x7f
  472380:	lsl	x2, x2, x0
  472384:	add	w0, w0, #0x7
  472388:	orr	x1, x1, x2
  47238c:	tbnz	w3, #7, 472378 <_obstack_memory_used@@Base+0x15f88>
  472390:	mov	x4, #0x0                   	// #0
  472394:	mov	w2, #0x0                   	// #0
  472398:	ldrb	w3, [x19], #1
  47239c:	and	x0, x3, #0x7f
  4723a0:	lsl	x0, x0, x2
  4723a4:	add	w2, w2, #0x7
  4723a8:	orr	x4, x4, x0
  4723ac:	tbnz	w3, #7, 472398 <_obstack_memory_used@@Base+0x15fa8>
  4723b0:	cmp	w2, #0x3f
  4723b4:	b.hi	4723cc <_obstack_memory_used@@Base+0x15fdc>  // b.pmore
  4723b8:	mov	x0, #0xffffffffffffffff    	// #-1
  4723bc:	tst	x3, #0x40
  4723c0:	lsl	x0, x0, x2
  4723c4:	orr	x0, x4, x0
  4723c8:	csel	x4, x0, x4, ne  // ne = any
  4723cc:	ldr	x0, [x20, #1624]
  4723d0:	cmp	x1, #0x61
  4723d4:	mul	x4, x4, x0
  4723d8:	b.hi	4722a4 <_obstack_memory_used@@Base+0x15eb4>  // b.pmore
  4723dc:	lsl	x1, x1, #4
  4723e0:	mov	w2, #0x4                   	// #4
  4723e4:	add	x0, x20, x1
  4723e8:	str	w2, [x0, #8]
  4723ec:	str	x4, [x20, x1]
  4723f0:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4723f4:	mov	x1, #0x0                   	// #0
  4723f8:	mov	w0, #0x0                   	// #0
  4723fc:	ldrb	w3, [x19], #1
  472400:	and	x2, x3, #0x7f
  472404:	lsl	x2, x2, x0
  472408:	add	w0, w0, #0x7
  47240c:	orr	x1, x1, x2
  472410:	tbnz	w3, #7, 4723fc <_obstack_memory_used@@Base+0x1600c>
  472414:	mov	x4, #0x0                   	// #0
  472418:	mov	w2, #0x0                   	// #0
  47241c:	nop
  472420:	ldrb	w3, [x19], #1
  472424:	and	x0, x3, #0x7f
  472428:	lsl	x0, x0, x2
  47242c:	add	w2, w2, #0x7
  472430:	orr	x4, x4, x0
  472434:	tbnz	w3, #7, 472420 <_obstack_memory_used@@Base+0x16030>
  472438:	b	4723cc <_obstack_memory_used@@Base+0x15fdc>
  47243c:	mov	x1, #0x0                   	// #0
  472440:	mov	w0, #0x0                   	// #0
  472444:	ldrb	w3, [x19], #1
  472448:	and	x2, x3, #0x7f
  47244c:	lsl	x2, x2, x0
  472450:	add	w0, w0, #0x7
  472454:	orr	x1, x1, x2
  472458:	tbnz	w3, #7, 472444 <_obstack_memory_used@@Base+0x16054>
  47245c:	cmp	w0, #0x3f
  472460:	b.hi	472478 <_obstack_memory_used@@Base+0x16088>  // b.pmore
  472464:	mov	x2, #0xffffffffffffffff    	// #-1
  472468:	tst	x3, #0x40
  47246c:	lsl	x0, x2, x0
  472470:	orr	x0, x1, x0
  472474:	csel	x1, x0, x1, ne  // ne = any
  472478:	ldr	x0, [x20, #1624]
  47247c:	mul	x1, x0, x1
  472480:	str	x1, [x20, #1576]
  472484:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472488:	mov	x1, #0x0                   	// #0
  47248c:	mov	w0, #0x0                   	// #0
  472490:	ldrb	w3, [x19], #1
  472494:	and	x2, x3, #0x7f
  472498:	lsl	x2, x2, x0
  47249c:	add	w0, w0, #0x7
  4724a0:	orr	x1, x1, x2
  4724a4:	tbnz	w3, #7, 472490 <_obstack_memory_used@@Base+0x160a0>
  4724a8:	mov	x3, #0x0                   	// #0
  4724ac:	mov	w2, #0x0                   	// #0
  4724b0:	str	x1, [x20, #1584]
  4724b4:	nop
  4724b8:	ldrb	w1, [x19], #1
  4724bc:	and	x0, x1, #0x7f
  4724c0:	lsl	x0, x0, x2
  4724c4:	add	w2, w2, #0x7
  4724c8:	orr	x3, x3, x0
  4724cc:	tbnz	w1, #7, 4724b8 <_obstack_memory_used@@Base+0x160c8>
  4724d0:	cmp	w2, #0x3f
  4724d4:	b.hi	4724ec <_obstack_memory_used@@Base+0x160fc>  // b.pmore
  4724d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4724dc:	tst	x1, #0x40
  4724e0:	lsl	x0, x0, x2
  4724e4:	orr	x0, x3, x0
  4724e8:	csel	x3, x0, x3, ne  // ne = any
  4724ec:	ldr	x0, [x20, #1624]
  4724f0:	str	w24, [x20, #1600]
  4724f4:	mul	x3, x0, x3
  4724f8:	str	x3, [x20, #1576]
  4724fc:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472500:	mov	x1, #0x0                   	// #0
  472504:	mov	w0, #0x0                   	// #0
  472508:	ldrb	w3, [x19], #1
  47250c:	and	x2, x3, #0x7f
  472510:	lsl	x2, x2, x0
  472514:	add	w0, w0, #0x7
  472518:	orr	x1, x1, x2
  47251c:	tbnz	w3, #7, 472508 <_obstack_memory_used@@Base+0x16118>
  472520:	mov	x4, #0x0                   	// #0
  472524:	mov	w2, #0x0                   	// #0
  472528:	ldrb	w3, [x19], #1
  47252c:	and	x0, x3, #0x7f
  472530:	lsl	x0, x0, x2
  472534:	add	w2, w2, #0x7
  472538:	orr	x4, x4, x0
  47253c:	tbnz	w3, #7, 472528 <_obstack_memory_used@@Base+0x16138>
  472540:	cmp	w2, #0x3f
  472544:	b.hi	47255c <_obstack_memory_used@@Base+0x1616c>  // b.pmore
  472548:	mov	x0, #0xffffffffffffffff    	// #-1
  47254c:	tst	x3, #0x40
  472550:	lsl	x0, x0, x2
  472554:	orr	x0, x4, x0
  472558:	csel	x4, x0, x4, ne  // ne = any
  47255c:	ldr	x0, [x20, #1624]
  472560:	cmp	x1, #0x61
  472564:	mul	x4, x4, x0
  472568:	b.hi	4722a4 <_obstack_memory_used@@Base+0x15eb4>  // b.pmore
  47256c:	lsl	x1, x1, #4
  472570:	add	x0, x20, x1
  472574:	str	w24, [x0, #8]
  472578:	str	x4, [x20, x1]
  47257c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472580:	mov	x1, #0x0                   	// #0
  472584:	mov	w0, #0x0                   	// #0
  472588:	ldrb	w3, [x19], #1
  47258c:	and	x2, x3, #0x7f
  472590:	lsl	x2, x2, x0
  472594:	add	w0, w0, #0x7
  472598:	orr	x1, x1, x2
  47259c:	tbnz	w3, #7, 472588 <_obstack_memory_used@@Base+0x16198>
  4725a0:	cmp	x1, #0x61
  4725a4:	b.hi	4725bc <_obstack_memory_used@@Base+0x161cc>  // b.pmore
  4725a8:	lsl	x1, x1, #4
  4725ac:	mov	w2, #0x3                   	// #3
  4725b0:	add	x0, x20, x1
  4725b4:	str	w2, [x0, #8]
  4725b8:	str	x19, [x20, x1]
  4725bc:	mov	x3, #0x0                   	// #0
  4725c0:	mov	w1, #0x0                   	// #0
  4725c4:	nop
  4725c8:	ldrb	w2, [x19], #1
  4725cc:	and	x0, x2, #0x7f
  4725d0:	lsl	x0, x0, x1
  4725d4:	add	w1, w1, #0x7
  4725d8:	orr	x3, x3, x0
  4725dc:	tbnz	w2, #7, 4725c8 <_obstack_memory_used@@Base+0x161d8>
  4725e0:	add	x19, x19, x3
  4725e4:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4725e8:	mov	x1, #0x0                   	// #0
  4725ec:	mov	w0, #0x0                   	// #0
  4725f0:	ldrb	w3, [x19], #1
  4725f4:	and	x2, x3, #0x7f
  4725f8:	lsl	x2, x2, x0
  4725fc:	add	w0, w0, #0x7
  472600:	orr	x1, x1, x2
  472604:	tbnz	w3, #7, 4725f0 <_obstack_memory_used@@Base+0x16200>
  472608:	str	x1, [x20, #1576]
  47260c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472610:	mov	x1, #0x0                   	// #0
  472614:	mov	w0, #0x0                   	// #0
  472618:	ldrb	w3, [x19], #1
  47261c:	and	x2, x3, #0x7f
  472620:	lsl	x2, x2, x0
  472624:	add	w0, w0, #0x7
  472628:	orr	x1, x1, x2
  47262c:	tbnz	w3, #7, 472618 <_obstack_memory_used@@Base+0x16228>
  472630:	str	x1, [x20, #1584]
  472634:	str	w24, [x20, #1600]
  472638:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  47263c:	mov	x1, #0x0                   	// #0
  472640:	mov	w0, #0x0                   	// #0
  472644:	ldrb	w3, [x19], #1
  472648:	and	x2, x3, #0x7f
  47264c:	lsl	x2, x2, x0
  472650:	add	w0, w0, #0x7
  472654:	orr	x1, x1, x2
  472658:	tbnz	w3, #7, 472644 <_obstack_memory_used@@Base+0x16254>
  47265c:	mov	x3, #0x0                   	// #0
  472660:	mov	w2, #0x0                   	// #0
  472664:	str	x1, [x20, #1584]
  472668:	ldrb	w1, [x19], #1
  47266c:	and	x0, x1, #0x7f
  472670:	lsl	x0, x0, x2
  472674:	add	w2, w2, #0x7
  472678:	orr	x3, x3, x0
  47267c:	tbnz	w1, #7, 472668 <_obstack_memory_used@@Base+0x16278>
  472680:	str	x3, [x20, #1576]
  472684:	str	w24, [x20, #1600]
  472688:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  47268c:	mov	x1, #0x0                   	// #0
  472690:	mov	w0, #0x0                   	// #0
  472694:	ldrb	w3, [x19], #1
  472698:	and	x2, x3, #0x7f
  47269c:	lsl	x2, x2, x0
  4726a0:	add	w0, w0, #0x7
  4726a4:	orr	x1, x1, x2
  4726a8:	tbnz	w3, #7, 472694 <_obstack_memory_used@@Base+0x162a4>
  4726ac:	mov	x4, #0x0                   	// #0
  4726b0:	mov	w2, #0x0                   	// #0
  4726b4:	nop
  4726b8:	ldrb	w3, [x19], #1
  4726bc:	and	x0, x3, #0x7f
  4726c0:	lsl	x0, x0, x2
  4726c4:	add	w2, w2, #0x7
  4726c8:	orr	x4, x4, x0
  4726cc:	tbnz	w3, #7, 4726b8 <_obstack_memory_used@@Base+0x162c8>
  4726d0:	cmp	x1, #0x61
  4726d4:	b.hi	4722a4 <_obstack_memory_used@@Base+0x15eb4>  // b.pmore
  4726d8:	lsl	x1, x1, #4
  4726dc:	mov	w2, #0x2                   	// #2
  4726e0:	add	x0, x20, x1
  4726e4:	str	w2, [x0, #8]
  4726e8:	str	x4, [x20, x1]
  4726ec:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4726f0:	mov	x1, #0x0                   	// #0
  4726f4:	mov	w0, #0x0                   	// #0
  4726f8:	ldrb	w3, [x19], #1
  4726fc:	and	x2, x3, #0x7f
  472700:	lsl	x2, x2, x0
  472704:	add	w0, w0, #0x7
  472708:	orr	x1, x1, x2
  47270c:	tbnz	w3, #7, 4726f8 <_obstack_memory_used@@Base+0x16308>
  472710:	cmp	x1, #0x61
  472714:	b.hi	4722a4 <_obstack_memory_used@@Base+0x15eb4>  // b.pmore
  472718:	add	x1, x20, x1, lsl #4
  47271c:	str	wzr, [x1, #8]
  472720:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472724:	mov	x1, #0x0                   	// #0
  472728:	mov	w0, #0x0                   	// #0
  47272c:	ldrb	w3, [x19], #1
  472730:	and	x2, x3, #0x7f
  472734:	lsl	x2, x2, x0
  472738:	add	w0, w0, #0x7
  47273c:	orr	x1, x1, x2
  472740:	tbnz	w3, #7, 47272c <_obstack_memory_used@@Base+0x1633c>
  472744:	cmp	x1, #0x61
  472748:	b.hi	4722a4 <_obstack_memory_used@@Base+0x15eb4>  // b.pmore
  47274c:	add	x1, x20, x1, lsl #4
  472750:	mov	w0, #0x6                   	// #6
  472754:	str	w0, [x1, #8]
  472758:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  47275c:	mov	x1, #0x0                   	// #0
  472760:	mov	w0, #0x0                   	// #0
  472764:	ldrb	w3, [x19], #1
  472768:	and	x2, x3, #0x7f
  47276c:	lsl	x2, x2, x0
  472770:	add	w0, w0, #0x7
  472774:	orr	x1, x1, x2
  472778:	tbnz	w3, #7, 472764 <_obstack_memory_used@@Base+0x16374>
  47277c:	b	472710 <_obstack_memory_used@@Base+0x16320>
  472780:	mov	x1, #0x0                   	// #0
  472784:	mov	w0, #0x0                   	// #0
  472788:	ldrb	w3, [x19], #1
  47278c:	and	x2, x3, #0x7f
  472790:	lsl	x2, x2, x0
  472794:	add	w0, w0, #0x7
  472798:	orr	x1, x1, x2
  47279c:	tbnz	w3, #7, 472788 <_obstack_memory_used@@Base+0x16398>
  4727a0:	mov	x4, #0x0                   	// #0
  4727a4:	mov	w2, #0x0                   	// #0
  4727a8:	ldrb	w3, [x19], #1
  4727ac:	and	x0, x3, #0x7f
  4727b0:	lsl	x0, x0, x2
  4727b4:	add	w2, w2, #0x7
  4727b8:	orr	x4, x4, x0
  4727bc:	tbnz	w3, #7, 4727a8 <_obstack_memory_used@@Base+0x163b8>
  4727c0:	b	47255c <_obstack_memory_used@@Base+0x1616c>
  4727c4:	ldr	x0, [x20, #1632]
  4727c8:	and	x4, x4, #0x3f
  4727cc:	madd	x4, x4, x0, x1
  4727d0:	str	x4, [x20, #1608]
  4727d4:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4727d8:	ubfiz	x4, x4, #4, #6
  4727dc:	add	x4, x20, x4
  4727e0:	str	wzr, [x4, #8]
  4727e4:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4727e8:	and	w4, w4, #0x3f
  4727ec:	mov	x1, #0x0                   	// #0
  4727f0:	mov	w5, #0x0                   	// #0
  4727f4:	nop
  4727f8:	ldrb	w6, [x19], #1
  4727fc:	and	x0, x6, #0x7f
  472800:	lsl	x0, x0, x5
  472804:	add	w5, w5, #0x7
  472808:	orr	x1, x1, x0
  47280c:	tbnz	w6, #7, 4727f8 <_obstack_memory_used@@Base+0x16408>
  472810:	ubfiz	x4, x4, #4, #6
  472814:	ldr	x2, [x20, #1624]
  472818:	add	x0, x20, x4
  47281c:	mul	x1, x1, x2
  472820:	str	w24, [x0, #8]
  472824:	str	x1, [x20, x4]
  472828:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  47282c:	ldr	x0, [x20, #544]
  472830:	eor	x0, x0, #0x1
  472834:	str	x0, [x20, #544]
  472838:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  47283c:	ldrb	w28, [x20, #1648]
  472840:	mov	x1, x21
  472844:	mov	w0, w28
  472848:	bl	472120 <_obstack_memory_used@@Base+0x15d30>
  47284c:	mov	x2, x19
  472850:	mov	x1, x0
  472854:	mov	x3, x27
  472858:	mov	w0, w28
  47285c:	bl	471fc0 <_obstack_memory_used@@Base+0x15bd0>
  472860:	mov	x19, x0
  472864:	ldr	x1, [x29, #104]
  472868:	str	x1, [x20, #1608]
  47286c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472870:	ldrb	w2, [x0, #1]
  472874:	add	x19, x0, #0x2
  472878:	ldr	x0, [x20, #1632]
  47287c:	madd	x1, x2, x0, x1
  472880:	str	x1, [x20, #1608]
  472884:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472888:	ldurh	w2, [x0, #1]
  47288c:	add	x19, x0, #0x3
  472890:	ldr	x0, [x20, #1632]
  472894:	madd	x1, x2, x0, x1
  472898:	str	x1, [x20, #1608]
  47289c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4728a0:	ldur	w2, [x0, #1]
  4728a4:	add	x19, x0, #0x5
  4728a8:	ldr	x0, [x20, #1632]
  4728ac:	madd	x1, x2, x0, x1
  4728b0:	str	x1, [x20, #1608]
  4728b4:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4728b8:	cbz	x25, 472934 <_obstack_memory_used@@Base+0x16544>
  4728bc:	mov	x3, x25
  4728c0:	ldr	x25, [x25, #1568]
  4728c4:	mov	x1, x20
  4728c8:	mov	x0, x3
  4728cc:	mov	x2, #0x648                 	// #1608
  4728d0:	bl	402cd0 <memcpy@plt>
  4728d4:	str	x0, [x20, #1568]
  4728d8:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4728dc:	ldr	x28, [x20, #1568]
  4728e0:	mov	x0, x20
  4728e4:	mov	x2, #0x648                 	// #1608
  4728e8:	mov	x1, x28
  4728ec:	bl	402cd0 <memcpy@plt>
  4728f0:	str	x25, [x28, #1568]
  4728f4:	mov	x25, x28
  4728f8:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  4728fc:	mov	w0, #0x2                   	// #2
  472900:	mov	x3, #0x0                   	// #0
  472904:	mov	w1, #0x0                   	// #0
  472908:	str	x19, [x20, #1592]
  47290c:	str	w0, [x20, #1600]
  472910:	ldrb	w2, [x19], #1
  472914:	and	x0, x2, #0x7f
  472918:	lsl	x0, x0, x1
  47291c:	add	w1, w1, #0x7
  472920:	orr	x3, x3, x0
  472924:	tbnz	w2, #7, 472910 <_obstack_memory_used@@Base+0x16520>
  472928:	add	x19, x19, x3
  47292c:	b	4722a4 <_obstack_memory_used@@Base+0x15eb4>
  472930:	ret
  472934:	sub	sp, sp, #0x650
  472938:	mov	x3, sp
  47293c:	b	4728c4 <_obstack_memory_used@@Base+0x164d4>
  472940:	bl	403180 <abort@plt>
  472944:	nop
  472948:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  47294c:	add	x1, x2, #0x570
  472950:	mov	w0, #0x8                   	// #8
  472954:	strb	w0, [x2, #1392]
  472958:	strb	w0, [x1, #1]
  47295c:	strb	w0, [x1, #2]
  472960:	strb	w0, [x1, #3]
  472964:	strb	w0, [x1, #4]
  472968:	strb	w0, [x1, #5]
  47296c:	strb	w0, [x1, #6]
  472970:	strb	w0, [x1, #7]
  472974:	strb	w0, [x1, #8]
  472978:	strb	w0, [x1, #9]
  47297c:	strb	w0, [x1, #10]
  472980:	strb	w0, [x1, #11]
  472984:	strb	w0, [x1, #12]
  472988:	strb	w0, [x1, #13]
  47298c:	strb	w0, [x1, #14]
  472990:	strb	w0, [x1, #15]
  472994:	strb	w0, [x1, #16]
  472998:	strb	w0, [x1, #17]
  47299c:	strb	w0, [x1, #18]
  4729a0:	strb	w0, [x1, #19]
  4729a4:	strb	w0, [x1, #20]
  4729a8:	strb	w0, [x1, #21]
  4729ac:	strb	w0, [x1, #22]
  4729b0:	strb	w0, [x1, #23]
  4729b4:	strb	w0, [x1, #24]
  4729b8:	strb	w0, [x1, #25]
  4729bc:	strb	w0, [x1, #26]
  4729c0:	strb	w0, [x1, #27]
  4729c4:	strb	w0, [x1, #28]
  4729c8:	strb	w0, [x1, #29]
  4729cc:	strb	w0, [x1, #30]
  4729d0:	strb	w0, [x1, #31]
  4729d4:	strb	w0, [x1, #64]
  4729d8:	strb	w0, [x1, #46]
  4729dc:	strb	w0, [x1, #65]
  4729e0:	strb	w0, [x1, #66]
  4729e4:	strb	w0, [x1, #67]
  4729e8:	strb	w0, [x1, #68]
  4729ec:	strb	w0, [x1, #69]
  4729f0:	strb	w0, [x1, #70]
  4729f4:	strb	w0, [x1, #71]
  4729f8:	strb	w0, [x1, #72]
  4729fc:	strb	w0, [x1, #73]
  472a00:	strb	w0, [x1, #74]
  472a04:	strb	w0, [x1, #75]
  472a08:	strb	w0, [x1, #76]
  472a0c:	strb	w0, [x1, #77]
  472a10:	strb	w0, [x1, #78]
  472a14:	strb	w0, [x1, #79]
  472a18:	strb	w0, [x1, #80]
  472a1c:	strb	w0, [x1, #81]
  472a20:	strb	w0, [x1, #82]
  472a24:	strb	w0, [x1, #83]
  472a28:	strb	w0, [x1, #84]
  472a2c:	strb	w0, [x1, #85]
  472a30:	strb	w0, [x1, #86]
  472a34:	strb	w0, [x1, #87]
  472a38:	strb	w0, [x1, #88]
  472a3c:	strb	w0, [x1, #89]
  472a40:	strb	w0, [x1, #90]
  472a44:	strb	w0, [x1, #91]
  472a48:	strb	w0, [x1, #92]
  472a4c:	strb	w0, [x1, #93]
  472a50:	strb	w0, [x1, #94]
  472a54:	strb	w0, [x1, #95]
  472a58:	strb	w0, [x1, #48]
  472a5c:	strb	w0, [x1, #49]
  472a60:	strb	w0, [x1, #50]
  472a64:	strb	w0, [x1, #51]
  472a68:	strb	w0, [x1, #52]
  472a6c:	strb	w0, [x1, #53]
  472a70:	strb	w0, [x1, #54]
  472a74:	strb	w0, [x1, #55]
  472a78:	strb	w0, [x1, #56]
  472a7c:	strb	w0, [x1, #57]
  472a80:	strb	w0, [x1, #58]
  472a84:	strb	w0, [x1, #59]
  472a88:	strb	w0, [x1, #60]
  472a8c:	strb	w0, [x1, #61]
  472a90:	strb	w0, [x1, #62]
  472a94:	strb	w0, [x1, #63]
  472a98:	strb	w0, [x1, #96]
  472a9c:	ret
  472aa0:	stp	x29, x30, [sp, #-112]!
  472aa4:	mov	x2, #0x680                 	// #1664
  472aa8:	mov	x29, sp
  472aac:	stp	x19, x20, [sp, #16]
  472ab0:	mov	x20, x0
  472ab4:	mov	x19, x1
  472ab8:	mov	x0, x1
  472abc:	mov	w1, #0x0                   	// #0
  472ac0:	bl	403000 <memset@plt>
  472ac4:	str	xzr, [x20, #800]
  472ac8:	ldr	x2, [x20, #792]
  472acc:	str	xzr, [x20, #848]
  472ad0:	cbz	x2, 472e44 <_obstack_memory_used@@Base+0x16a54>
  472ad4:	ldr	d0, [x20, #832]
  472ad8:	add	x1, x20, #0x328
  472adc:	stp	x21, x22, [sp, #32]
  472ae0:	cmge	d0, d0, #0
  472ae4:	fmov	x0, d0
  472ae8:	add	x0, x2, x0
  472aec:	bl	4761e0 <_obstack_memory_used@@Base+0x19df0>
  472af0:	mov	x22, x0
  472af4:	cbz	x0, 472ea8 <_obstack_memory_used@@Base+0x16ab8>
  472af8:	ldrsw	x1, [x0, #4]
  472afc:	stp	x23, x24, [sp, #48]
  472b00:	add	x23, x0, #0x4
  472b04:	sub	x23, x23, x1
  472b08:	ldr	x0, [x20, #824]
  472b0c:	str	x0, [x19, #1608]
  472b10:	add	x21, x23, #0x9
  472b14:	mov	x0, x21
  472b18:	bl	402d50 <strlen@plt>
  472b1c:	ldrb	w1, [x23, #9]
  472b20:	add	x2, x0, #0x1
  472b24:	add	x2, x21, x2
  472b28:	cmp	w1, #0x65
  472b2c:	b.eq	472d18 <_obstack_memory_used@@Base+0x16928>  // b.none
  472b30:	ldrb	w6, [x23, #8]
  472b34:	ldrb	w3, [x2]
  472b38:	cmp	w6, #0x3
  472b3c:	b.hi	472f88 <_obstack_memory_used@@Base+0x16b98>  // b.pmore
  472b40:	stp	x25, x26, [sp, #64]
  472b44:	stp	x27, x28, [sp, #80]
  472b48:	mov	x5, #0x0                   	// #0
  472b4c:	mov	w4, #0x0                   	// #0
  472b50:	b	472b58 <_obstack_memory_used@@Base+0x16768>
  472b54:	ldrb	w3, [x2]
  472b58:	and	x1, x3, #0x7f
  472b5c:	add	x2, x2, #0x1
  472b60:	lsl	x1, x1, x4
  472b64:	add	w4, w4, #0x7
  472b68:	orr	x5, x5, x1
  472b6c:	tbnz	w3, #7, 472b54 <_obstack_memory_used@@Base+0x16764>
  472b70:	mov	x0, #0x0                   	// #0
  472b74:	mov	w3, #0x0                   	// #0
  472b78:	str	x5, [x19, #1632]
  472b7c:	nop
  472b80:	mov	x5, x2
  472b84:	ldrb	w4, [x2], #1
  472b88:	and	x1, x4, #0x7f
  472b8c:	lsl	x1, x1, x3
  472b90:	add	w3, w3, #0x7
  472b94:	orr	x0, x0, x1
  472b98:	tbnz	w4, #7, 472b80 <_obstack_memory_used@@Base+0x16790>
  472b9c:	cmp	w3, #0x3f
  472ba0:	b.hi	472bb8 <_obstack_memory_used@@Base+0x167c8>  // b.pmore
  472ba4:	mov	x1, #0xffffffffffffffff    	// #-1
  472ba8:	tst	x4, #0x40
  472bac:	lsl	x3, x1, x3
  472bb0:	orr	x3, x0, x3
  472bb4:	csel	x0, x3, x0, ne  // ne = any
  472bb8:	str	x0, [x19, #1624]
  472bbc:	cmp	w6, #0x1
  472bc0:	mov	x4, #0x0                   	// #0
  472bc4:	mov	w3, #0x0                   	// #0
  472bc8:	b.eq	472d34 <_obstack_memory_used@@Base+0x16944>  // b.none
  472bcc:	nop
  472bd0:	ldrb	w0, [x2], #1
  472bd4:	and	x1, x0, #0x7f
  472bd8:	lsl	x1, x1, x3
  472bdc:	add	w3, w3, #0x7
  472be0:	orr	x4, x4, x1
  472be4:	tbnz	w0, #7, 472bd0 <_obstack_memory_used@@Base+0x167e0>
  472be8:	mov	w0, #0xffffffff            	// #-1
  472bec:	str	x4, [x19, #1640]
  472bf0:	strb	w0, [x19, #1649]
  472bf4:	ldrb	w3, [x21]
  472bf8:	cmp	w3, #0x7a
  472bfc:	b.eq	472d54 <_obstack_memory_used@@Base+0x16964>  // b.none
  472c00:	mov	x24, #0x0                   	// #0
  472c04:	cbz	w3, 472fec <_obstack_memory_used@@Base+0x16bfc>
  472c08:	add	x21, x21, #0x1
  472c0c:	add	x25, sp, #0x68
  472c10:	mov	w26, #0x1                   	// #1
  472c14:	b	472c3c <_obstack_memory_used@@Base+0x1684c>
  472c18:	cmp	w3, #0x52
  472c1c:	b.eq	472d98 <_obstack_memory_used@@Base+0x169a8>  // b.none
  472c20:	cmp	w3, #0x50
  472c24:	b.eq	472da4 <_obstack_memory_used@@Base+0x169b4>  // b.none
  472c28:	cmp	w3, #0x53
  472c2c:	b.ne	472e58 <_obstack_memory_used@@Base+0x16a68>  // b.any
  472c30:	strb	w26, [x19, #1651]
  472c34:	ldrb	w3, [x21], #1
  472c38:	cbz	w3, 472c54 <_obstack_memory_used@@Base+0x16864>
  472c3c:	cmp	w3, #0x4c
  472c40:	b.ne	472c18 <_obstack_memory_used@@Base+0x16828>  // b.any
  472c44:	ldrb	w0, [x2], #1
  472c48:	strb	w0, [x19, #1649]
  472c4c:	ldrb	w3, [x21], #1
  472c50:	cbnz	w3, 472c3c <_obstack_memory_used@@Base+0x1684c>
  472c54:	cbz	x24, 472e54 <_obstack_memory_used@@Base+0x16a64>
  472c58:	ldr	w1, [x23]
  472c5c:	mov	x0, x24
  472c60:	mov	x3, x19
  472c64:	mov	x2, x20
  472c68:	add	x1, x1, #0x4
  472c6c:	add	x1, x23, x1
  472c70:	bl	472198 <_obstack_memory_used@@Base+0x15da8>
  472c74:	ldrb	w0, [x19, #1648]
  472c78:	cmp	w0, #0xff
  472c7c:	b.eq	472f80 <_obstack_memory_used@@Base+0x16b90>  // b.none
  472c80:	and	w0, w0, #0x7
  472c84:	cmp	w0, #0x2
  472c88:	b.eq	472f78 <_obstack_memory_used@@Base+0x16b88>  // b.none
  472c8c:	b.ls	472dec <_obstack_memory_used@@Base+0x169fc>  // b.plast
  472c90:	cmp	w0, #0x3
  472c94:	mov	x21, #0x10                  	// #16
  472c98:	b.ne	472ddc <_obstack_memory_used@@Base+0x169ec>  // b.any
  472c9c:	ldrb	w0, [x19, #1650]
  472ca0:	add	x21, x22, x21
  472ca4:	ldrb	w24, [x19, #1649]
  472ca8:	cbz	w0, 472e04 <_obstack_memory_used@@Base+0x16a14>
  472cac:	mov	x0, #0x0                   	// #0
  472cb0:	mov	w2, #0x0                   	// #0
  472cb4:	nop
  472cb8:	ldrb	w3, [x21], #1
  472cbc:	and	x1, x3, #0x7f
  472cc0:	lsl	x1, x1, x2
  472cc4:	add	w2, w2, #0x7
  472cc8:	orr	x0, x0, x1
  472ccc:	tbnz	w3, #7, 472cb8 <_obstack_memory_used@@Base+0x168c8>
  472cd0:	add	x23, x21, x0
  472cd4:	cmp	w24, #0xff
  472cd8:	b.ne	472e7c <_obstack_memory_used@@Base+0x16a8c>  // b.any
  472cdc:	ldr	w1, [x22]
  472ce0:	mov	x0, x23
  472ce4:	mov	x3, x19
  472ce8:	mov	x2, x20
  472cec:	add	x1, x1, #0x4
  472cf0:	add	x1, x22, x1
  472cf4:	bl	472198 <_obstack_memory_used@@Base+0x15da8>
  472cf8:	ldp	x21, x22, [sp, #32]
  472cfc:	mov	w0, #0x0                   	// #0
  472d00:	ldp	x23, x24, [sp, #48]
  472d04:	ldp	x25, x26, [sp, #64]
  472d08:	ldp	x27, x28, [sp, #80]
  472d0c:	ldp	x19, x20, [sp, #16]
  472d10:	ldp	x29, x30, [sp], #112
  472d14:	ret
  472d18:	ldrb	w0, [x23, #10]
  472d1c:	cmp	w0, #0x68
  472d20:	b.ne	472b30 <_obstack_memory_used@@Base+0x16740>  // b.any
  472d24:	ldr	x0, [x2], #8
  472d28:	add	x21, x23, #0xb
  472d2c:	str	x0, [x19, #1656]
  472d30:	b	472b30 <_obstack_memory_used@@Base+0x16740>
  472d34:	ldrb	w0, [x2]
  472d38:	add	x2, x5, #0x2
  472d3c:	str	x0, [x19, #1640]
  472d40:	mov	w0, #0xffffffff            	// #-1
  472d44:	strb	w0, [x19, #1649]
  472d48:	ldrb	w3, [x21]
  472d4c:	cmp	w3, #0x7a
  472d50:	b.ne	472c00 <_obstack_memory_used@@Base+0x16810>  // b.any
  472d54:	mov	x0, #0x0                   	// #0
  472d58:	mov	w3, #0x0                   	// #0
  472d5c:	nop
  472d60:	ldrb	w4, [x2], #1
  472d64:	and	x1, x4, #0x7f
  472d68:	lsl	x1, x1, x3
  472d6c:	add	w3, w3, #0x7
  472d70:	orr	x0, x0, x1
  472d74:	tbnz	w4, #7, 472d60 <_obstack_memory_used@@Base+0x16970>
  472d78:	mov	w1, #0x1                   	// #1
  472d7c:	strb	w1, [x19, #1650]
  472d80:	add	x24, x2, x0
  472d84:	add	x0, x21, #0x1
  472d88:	ldrb	w3, [x21, #1]
  472d8c:	cbz	w3, 472c58 <_obstack_memory_used@@Base+0x16868>
  472d90:	mov	x21, x0
  472d94:	b	472c08 <_obstack_memory_used@@Base+0x16818>
  472d98:	ldrb	w0, [x2], #1
  472d9c:	strb	w0, [x19, #1648]
  472da0:	b	472c34 <_obstack_memory_used@@Base+0x16844>
  472da4:	mov	x27, x2
  472da8:	mov	x1, x20
  472dac:	ldrb	w28, [x27], #1
  472db0:	mov	w0, w28
  472db4:	bl	472120 <_obstack_memory_used@@Base+0x15d30>
  472db8:	mov	x2, x27
  472dbc:	mov	x1, x0
  472dc0:	mov	x3, x25
  472dc4:	mov	w0, w28
  472dc8:	bl	471fc0 <_obstack_memory_used@@Base+0x15bd0>
  472dcc:	mov	x2, x0
  472dd0:	ldr	x1, [sp, #104]
  472dd4:	str	x1, [x19, #1616]
  472dd8:	b	472c34 <_obstack_memory_used@@Base+0x16844>
  472ddc:	cmp	w0, #0x4
  472de0:	mov	x21, #0x18                  	// #24
  472de4:	b.eq	472c9c <_obstack_memory_used@@Base+0x168ac>  // b.none
  472de8:	bl	403180 <abort@plt>
  472dec:	mov	x21, #0x18                  	// #24
  472df0:	cbnz	w0, 472de8 <_obstack_memory_used@@Base+0x169f8>
  472df4:	ldrb	w0, [x19, #1650]
  472df8:	add	x21, x22, x21
  472dfc:	ldrb	w24, [x19, #1649]
  472e00:	cbnz	w0, 472cac <_obstack_memory_used@@Base+0x168bc>
  472e04:	mov	x23, x21
  472e08:	cmp	w24, #0xff
  472e0c:	b.eq	472cdc <_obstack_memory_used@@Base+0x168ec>  // b.none
  472e10:	mov	x1, x20
  472e14:	mov	w0, w24
  472e18:	bl	472120 <_obstack_memory_used@@Base+0x15d30>
  472e1c:	mov	x1, x0
  472e20:	mov	x2, x21
  472e24:	mov	w0, w24
  472e28:	add	x3, sp, #0x68
  472e2c:	bl	471fc0 <_obstack_memory_used@@Base+0x15bd0>
  472e30:	ldr	x1, [sp, #104]
  472e34:	mov	x23, x0
  472e38:	str	x1, [x20, #800]
  472e3c:	b	472cdc <_obstack_memory_used@@Base+0x168ec>
  472e40:	ldp	x21, x22, [sp, #32]
  472e44:	mov	w0, #0x5                   	// #5
  472e48:	ldp	x19, x20, [sp, #16]
  472e4c:	ldp	x29, x30, [sp], #112
  472e50:	ret
  472e54:	mov	x24, x2
  472e58:	cbnz	x24, 472c58 <_obstack_memory_used@@Base+0x16868>
  472e5c:	ldp	x25, x26, [sp, #64]
  472e60:	ldp	x27, x28, [sp, #80]
  472e64:	mov	w0, #0x3                   	// #3
  472e68:	ldp	x19, x20, [sp, #16]
  472e6c:	ldp	x21, x22, [sp, #32]
  472e70:	ldp	x23, x24, [sp, #48]
  472e74:	ldp	x29, x30, [sp], #112
  472e78:	ret
  472e7c:	mov	x1, x20
  472e80:	mov	w0, w24
  472e84:	bl	472120 <_obstack_memory_used@@Base+0x15d30>
  472e88:	mov	x1, x0
  472e8c:	mov	x2, x21
  472e90:	mov	w0, w24
  472e94:	add	x3, sp, #0x68
  472e98:	bl	471fc0 <_obstack_memory_used@@Base+0x15bd0>
  472e9c:	ldr	x0, [sp, #104]
  472ea0:	str	x0, [x20, #800]
  472ea4:	b	472cdc <_obstack_memory_used@@Base+0x168ec>
  472ea8:	ldr	x0, [x20, #792]
  472eac:	mov	w1, #0x1168                	// #4456
  472eb0:	movk	w1, #0xd280, lsl #16
  472eb4:	ldr	w2, [x0]
  472eb8:	cmp	w2, w1
  472ebc:	b.ne	472e40 <_obstack_memory_used@@Base+0x16a50>  // b.any
  472ec0:	ldr	w1, [x0, #4]
  472ec4:	mov	w0, #0x1                   	// #1
  472ec8:	movk	w0, #0xd400, lsl #16
  472ecc:	cmp	w1, w0
  472ed0:	b.ne	472e40 <_obstack_memory_used@@Base+0x16a50>  // b.any
  472ed4:	ldr	x6, [x20, #784]
  472ed8:	mov	w3, #0x1                   	// #1
  472edc:	mov	x1, x19
  472ee0:	mov	w2, w3
  472ee4:	add	x8, x6, #0x130
  472ee8:	mov	x4, #0x1f                  	// #31
  472eec:	mov	x5, #0x130                 	// #304
  472ef0:	mov	x0, #0x8                   	// #8
  472ef4:	str	x5, [x19, #1576]
  472ef8:	str	x4, [x19, #1584]
  472efc:	str	w3, [x19, #1600]
  472f00:	str	w2, [x1, #8]
  472f04:	str	x0, [x1], #16
  472f08:	add	x0, x0, #0x8
  472f0c:	cmp	x0, #0x100
  472f10:	b.ne	472f00 <_obstack_memory_used@@Base+0x16b10>  // b.any
  472f14:	ldr	w0, [x6, #592]
  472f18:	add	x5, x6, #0x250
  472f1c:	cbz	w0, 472fac <_obstack_memory_used@@Base+0x16bbc>
  472f20:	mov	w7, #0x8001                	// #32769
  472f24:	add	x4, x19, #0x600
  472f28:	add	x9, x6, x19
  472f2c:	movk	w7, #0x4650, lsl #16
  472f30:	mov	w3, #0x1                   	// #1
  472f34:	b	472f48 <_obstack_memory_used@@Base+0x16b58>
  472f38:	ldr	w0, [x5, #4]
  472f3c:	add	x5, x5, x0
  472f40:	ldr	w0, [x5]
  472f44:	cbz	w0, 472fac <_obstack_memory_used@@Base+0x16bbc>
  472f48:	cmp	w0, w7
  472f4c:	b.ne	472f38 <_obstack_memory_used@@Base+0x16b48>  // b.any
  472f50:	sub	x2, x5, #0x520
  472f54:	add	x0, x19, #0x400
  472f58:	sub	x2, x2, x9
  472f5c:	nop
  472f60:	str	w3, [x0, #8]
  472f64:	add	x1, x2, x0
  472f68:	str	x1, [x0], #16
  472f6c:	cmp	x4, x0
  472f70:	b.ne	472f60 <_obstack_memory_used@@Base+0x16b70>  // b.any
  472f74:	b	472f38 <_obstack_memory_used@@Base+0x16b48>
  472f78:	mov	x21, #0xc                   	// #12
  472f7c:	b	472c9c <_obstack_memory_used@@Base+0x168ac>
  472f80:	mov	x21, #0x8                   	// #8
  472f84:	b	472c9c <_obstack_memory_used@@Base+0x168ac>
  472f88:	cmp	w3, #0x8
  472f8c:	b.ne	472e64 <_obstack_memory_used@@Base+0x16a74>  // b.any
  472f90:	ldrb	w0, [x2, #1]
  472f94:	cbnz	w0, 472e64 <_obstack_memory_used@@Base+0x16a74>
  472f98:	stp	x25, x26, [sp, #64]
  472f9c:	add	x2, x2, #0x2
  472fa0:	stp	x27, x28, [sp, #80]
  472fa4:	ldrb	w3, [x2]
  472fa8:	b	472b48 <_obstack_memory_used@@Base+0x16758>
  472fac:	mov	w3, #0x1                   	// #1
  472fb0:	strb	w3, [x19, #1651]
  472fb4:	add	x1, x6, #0x230
  472fb8:	mov	w5, #0x4                   	// #4
  472fbc:	ldr	x2, [x8, #264]
  472fc0:	sub	x1, x1, x8
  472fc4:	mov	x4, #0x60                  	// #96
  472fc8:	mov	w0, #0x0                   	// #0
  472fcc:	sub	x8, x2, x8
  472fd0:	ldp	x21, x22, [sp, #32]
  472fd4:	str	x1, [x19, #496]
  472fd8:	str	w3, [x19, #504]
  472fdc:	str	x8, [x19, #1536]
  472fe0:	str	w5, [x19, #1544]
  472fe4:	str	x4, [x19, #1640]
  472fe8:	b	472d0c <_obstack_memory_used@@Base+0x1691c>
  472fec:	mov	x24, x2
  472ff0:	b	472c58 <_obstack_memory_used@@Base+0x16868>
  472ff4:	nop
  472ff8:	stp	x29, x30, [sp, #-80]!
  472ffc:	mov	x29, sp
  473000:	stp	x21, x22, [sp, #32]
  473004:	mov	x21, x0
  473008:	ldr	x0, [x1, #832]
  47300c:	stp	x19, x20, [sp, #16]
  473010:	mov	x20, x1
  473014:	stp	x23, x24, [sp, #48]
  473018:	tbz	x0, #62, 473024 <_obstack_memory_used@@Base+0x16c34>
  47301c:	ldrb	w1, [x1, #887]
  473020:	cbnz	w1, 47302c <_obstack_memory_used@@Base+0x16c3c>
  473024:	ldr	x1, [x20, #248]
  473028:	cbz	x1, 4730e8 <_obstack_memory_used@@Base+0x16cf8>
  47302c:	adrp	x24, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  473030:	add	x23, x21, #0x358
  473034:	add	x24, x24, #0x570
  473038:	add	x22, x20, #0x358
  47303c:	mov	x19, #0x0                   	// #0
  473040:	b	473064 <_obstack_memory_used@@Base+0x16c74>
  473044:	cbz	x0, 473058 <_obstack_memory_used@@Base+0x16c68>
  473048:	ldrb	w2, [x19, x24]
  47304c:	cmp	w2, #0x8
  473050:	b.ne	473154 <_obstack_memory_used@@Base+0x16d64>  // b.any
  473054:	str	x1, [x0]
  473058:	add	x19, x19, #0x1
  47305c:	cmp	x19, #0x61
  473060:	b.eq	4730a0 <_obstack_memory_used@@Base+0x16cb0>  // b.none
  473064:	ldrb	w2, [x23, x19]
  473068:	ldr	x0, [x21, x19, lsl #3]
  47306c:	ldr	x1, [x20, x19, lsl #3]
  473070:	cbnz	w2, 473154 <_obstack_memory_used@@Base+0x16d64>
  473074:	ldrb	w2, [x22, x19]
  473078:	cbnz	w2, 473044 <_obstack_memory_used@@Base+0x16c54>
  47307c:	cmp	x1, #0x0
  473080:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  473084:	ccmp	x0, x1, #0x4, ne  // ne = any
  473088:	b.eq	473058 <_obstack_memory_used@@Base+0x16c68>  // b.none
  47308c:	ldrb	w2, [x24, x19]
  473090:	add	x19, x19, #0x1
  473094:	bl	402cd0 <memcpy@plt>
  473098:	cmp	x19, #0x61
  47309c:	b.ne	473064 <_obstack_memory_used@@Base+0x16c74>  // b.any
  4730a0:	ldr	x0, [x21, #832]
  4730a4:	tbz	x0, #62, 4730b0 <_obstack_memory_used@@Base+0x16cc0>
  4730a8:	ldrb	w0, [x21, #887]
  4730ac:	cbnz	w0, 4730d0 <_obstack_memory_used@@Base+0x16ce0>
  4730b0:	ldr	x1, [x21, #248]
  4730b4:	mov	x0, #0x0                   	// #0
  4730b8:	cbz	x1, 473114 <_obstack_memory_used@@Base+0x16d24>
  4730bc:	ldp	x19, x20, [sp, #16]
  4730c0:	ldp	x21, x22, [sp, #32]
  4730c4:	ldp	x23, x24, [sp, #48]
  4730c8:	ldp	x29, x30, [sp], #80
  4730cc:	ret
  4730d0:	mov	x0, #0x0                   	// #0
  4730d4:	ldp	x19, x20, [sp, #16]
  4730d8:	ldp	x21, x22, [sp, #32]
  4730dc:	ldp	x23, x24, [sp, #48]
  4730e0:	ldp	x29, x30, [sp], #80
  4730e4:	ret
  4730e8:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4730ec:	ldr	x2, [x20, #784]
  4730f0:	ldrb	w1, [x1, #1423]
  4730f4:	cmp	w1, #0x8
  4730f8:	b.ne	473154 <_obstack_memory_used@@Base+0x16d64>  // b.any
  4730fc:	str	x2, [sp, #72]
  473100:	tbz	x0, #62, 473108 <_obstack_memory_used@@Base+0x16d18>
  473104:	strb	wzr, [x20, #887]
  473108:	add	x0, sp, #0x48
  47310c:	str	x0, [x20, #248]
  473110:	b	47302c <_obstack_memory_used@@Base+0x16c3c>
  473114:	ldr	x1, [x20, #832]
  473118:	ldr	x0, [x20, #248]
  47311c:	tbnz	x1, #62, 473148 <_obstack_memory_used@@Base+0x16d58>
  473120:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  473124:	ldrb	w1, [x1, #1423]
  473128:	cmp	w1, #0x8
  47312c:	b.ne	473154 <_obstack_memory_used@@Base+0x16d64>  // b.any
  473130:	ldr	x0, [x0]
  473134:	ldr	x2, [x21, #784]
  473138:	ldr	x1, [x20, #848]
  47313c:	sub	x0, x0, x2
  473140:	add	x0, x0, x1
  473144:	b	4730bc <_obstack_memory_used@@Base+0x16ccc>
  473148:	ldrb	w1, [x20, #887]
  47314c:	cbz	w1, 473120 <_obstack_memory_used@@Base+0x16d30>
  473150:	b	473134 <_obstack_memory_used@@Base+0x16d44>
  473154:	bl	403180 <abort@plt>
  473158:	sub	sp, sp, #0x260
  47315c:	cmp	x0, x1
  473160:	stp	x29, x30, [sp]
  473164:	mov	x29, sp
  473168:	str	x3, [sp, #96]
  47316c:	b.cs	4735c4 <_obstack_memory_used@@Base+0x171d4>  // b.hs, b.nlast
  473170:	stp	x19, x20, [sp, #16]
  473174:	mov	x19, x0
  473178:	mov	w20, #0x1                   	// #1
  47317c:	stp	x21, x22, [sp, #32]
  473180:	mov	x21, x1
  473184:	add	x22, sp, #0x60
  473188:	stp	x23, x24, [sp, #48]
  47318c:	adrp	x23, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  473190:	mov	x24, x2
  473194:	add	x23, x23, #0xa1c
  473198:	stp	x25, x26, [sp, #64]
  47319c:	adrp	x25, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4731a0:	add	x25, x25, #0xbfc
  4731a4:	nop
  4731a8:	mov	x4, x19
  4731ac:	ldrb	w5, [x4], #1
  4731b0:	sub	w0, w5, #0x3
  4731b4:	cmp	w0, #0xee
  4731b8:	b.ls	4731c0 <_obstack_memory_used@@Base+0x16dd0>  // b.plast
  4731bc:	bl	403180 <abort@plt>
  4731c0:	ldrh	w0, [x23, w0, uxtw #1]
  4731c4:	adr	x1, 4731d0 <_obstack_memory_used@@Base+0x16de0>
  4731c8:	add	x0, x1, w0, sxth #2
  4731cc:	br	x0
  4731d0:	mov	x3, #0x0                   	// #0
  4731d4:	mov	w1, #0x0                   	// #0
  4731d8:	ldrb	w2, [x4], #1
  4731dc:	and	x0, x2, #0x7f
  4731e0:	lsl	x0, x0, x1
  4731e4:	add	w1, w1, #0x7
  4731e8:	orr	x3, x3, x0
  4731ec:	tbnz	w2, #7, 4731d8 <_obstack_memory_used@@Base+0x16de8>
  4731f0:	cmp	w1, #0x3f
  4731f4:	b.ls	473558 <_obstack_memory_used@@Base+0x17168>  // b.plast
  4731f8:	sub	w5, w5, #0x70
  4731fc:	cmp	w5, #0x61
  473200:	b.gt	4731bc <_obstack_memory_used@@Base+0x16dcc>
  473204:	ldr	x2, [x24, #832]
  473208:	sxtw	x1, w5
  47320c:	ldr	x0, [x24, x1, lsl #3]
  473210:	tbz	x2, #62, 473220 <_obstack_memory_used@@Base+0x16e30>
  473214:	add	x1, x24, x1
  473218:	ldrb	w1, [x1, #856]
  47321c:	cbnz	w1, 473240 <_obstack_memory_used@@Base+0x16e50>
  473220:	cmp	w5, #0x2e
  473224:	b.eq	4735b8 <_obstack_memory_used@@Base+0x171c8>  // b.none
  473228:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  47322c:	add	x1, x1, #0x570
  473230:	ldrb	w1, [x1, w5, sxtw]
  473234:	cmp	w1, #0x8
  473238:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  47323c:	ldr	x0, [x0]
  473240:	add	x0, x3, x0
  473244:	mov	w3, w20
  473248:	mov	x19, x4
  47324c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473250:	mov	w3, w20
  473254:	add	x19, x19, #0x9
  473258:	ldur	x0, [x19, #-8]
  47325c:	nop
  473260:	cmp	w3, #0x3f
  473264:	b.gt	4731bc <_obstack_memory_used@@Base+0x16dcc>
  473268:	add	w20, w3, #0x1
  47326c:	str	x0, [x22, w3, sxtw #3]
  473270:	cmp	x21, x19
  473274:	b.hi	4731a8 <_obstack_memory_used@@Base+0x16db8>  // b.pmore
  473278:	cbz	w20, 4731bc <_obstack_memory_used@@Base+0x16dcc>
  47327c:	sub	w20, w20, #0x1
  473280:	add	x0, sp, #0x60
  473284:	ldp	x29, x30, [sp]
  473288:	ldr	x0, [x0, w20, sxtw #3]
  47328c:	ldp	x19, x20, [sp, #16]
  473290:	ldp	x21, x22, [sp, #32]
  473294:	ldp	x23, x24, [sp, #48]
  473298:	ldp	x25, x26, [sp, #64]
  47329c:	add	sp, sp, #0x260
  4732a0:	ret
  4732a4:	sub	w5, w5, #0x50
  4732a8:	cmp	w5, #0x61
  4732ac:	b.gt	4731bc <_obstack_memory_used@@Base+0x16dcc>
  4732b0:	ldr	x2, [x24, #832]
  4732b4:	sxtw	x1, w5
  4732b8:	ldr	x0, [x24, x1, lsl #3]
  4732bc:	tbz	x2, #62, 4732cc <_obstack_memory_used@@Base+0x16edc>
  4732c0:	add	x1, x24, x1
  4732c4:	ldrb	w1, [x1, #856]
  4732c8:	cbnz	w1, 473244 <_obstack_memory_used@@Base+0x16e54>
  4732cc:	cmp	w5, #0x2e
  4732d0:	b.eq	4735a4 <_obstack_memory_used@@Base+0x171b4>  // b.none
  4732d4:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4732d8:	add	x1, x1, #0x570
  4732dc:	ldrb	w1, [x1, w5, sxtw]
  4732e0:	cmp	w1, #0x8
  4732e4:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  4732e8:	mov	w3, w20
  4732ec:	mov	x19, x4
  4732f0:	ldr	x0, [x0]
  4732f4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4732f8:	sub	w0, w5, #0x30
  4732fc:	mov	w3, w20
  473300:	mov	x19, x4
  473304:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473308:	cmp	w20, #0x1
  47330c:	b.le	4731bc <_obstack_memory_used@@Base+0x16dcc>
  473310:	sub	w3, w20, #0x2
  473314:	sub	w20, w20, #0x1
  473318:	sub	w5, w5, #0x1a
  47331c:	cmp	w5, #0x14
  473320:	ldr	x1, [x22, w20, sxtw #3]
  473324:	ldr	x0, [x22, w3, sxtw #3]
  473328:	b.hi	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.pmore
  47332c:	ldrh	w2, [x25, w5, uxtw #1]
  473330:	adr	x5, 47333c <_obstack_memory_used@@Base+0x16f4c>
  473334:	add	x2, x5, w2, sxth #2
  473338:	br	x2
  47333c:	cbz	w20, 4731bc <_obstack_memory_used@@Base+0x16dcc>
  473340:	sub	w3, w20, #0x1
  473344:	cmp	w5, #0x20
  473348:	ldr	x0, [x22, w3, sxtw #3]
  47334c:	b.eq	4738a0 <_obstack_memory_used@@Base+0x174b0>  // b.none
  473350:	b.hi	473370 <_obstack_memory_used@@Base+0x16f80>  // b.pmore
  473354:	cmp	w5, #0x19
  473358:	b.eq	4735d4 <_obstack_memory_used@@Base+0x171e4>  // b.none
  47335c:	cmp	w5, #0x1f
  473360:	b.ne	473544 <_obstack_memory_used@@Base+0x17154>  // b.any
  473364:	neg	x0, x0
  473368:	mov	x19, x4
  47336c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473370:	cmp	w5, #0x23
  473374:	b.eq	473578 <_obstack_memory_used@@Base+0x17188>  // b.none
  473378:	cmp	w5, #0x94
  47337c:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  473380:	ldrb	w1, [x19, #1]
  473384:	add	x19, x19, #0x2
  473388:	cmp	w1, #0x4
  47338c:	b.eq	473790 <_obstack_memory_used@@Base+0x173a0>  // b.none
  473390:	b.hi	4738bc <_obstack_memory_used@@Base+0x174cc>  // b.pmore
  473394:	cmp	w1, #0x1
  473398:	b.ne	4738ac <_obstack_memory_used@@Base+0x174bc>  // b.any
  47339c:	ldrb	w0, [x0]
  4733a0:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4733a4:	cmp	w20, #0x2
  4733a8:	b.le	4731bc <_obstack_memory_used@@Base+0x16dcc>
  4733ac:	sub	w1, w20, #0x2
  4733b0:	sub	w2, w20, #0x1
  4733b4:	sub	w0, w20, #0x3
  4733b8:	mov	x19, x4
  4733bc:	sxtw	x1, w1
  4733c0:	sxtw	x2, w2
  4733c4:	sxtw	x0, w0
  4733c8:	ldr	x5, [x22, x1, lsl #3]
  4733cc:	ldr	x3, [x22, x2, lsl #3]
  4733d0:	ldr	x4, [x22, x0, lsl #3]
  4733d4:	str	x5, [x22, x2, lsl #3]
  4733d8:	str	x4, [x22, x1, lsl #3]
  4733dc:	str	x3, [x22, x0, lsl #3]
  4733e0:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  4733e4:	cmp	w20, #0x1
  4733e8:	b.le	4731bc <_obstack_memory_used@@Base+0x16dcc>
  4733ec:	sub	w0, w20, #0x2
  4733f0:	sub	w1, w20, #0x1
  4733f4:	mov	x19, x4
  4733f8:	sxtw	x0, w0
  4733fc:	sxtw	x1, w1
  473400:	ldr	x3, [x22, x0, lsl #3]
  473404:	ldr	x2, [x22, x1, lsl #3]
  473408:	str	x3, [x22, x1, lsl #3]
  47340c:	str	x2, [x22, x0, lsl #3]
  473410:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  473414:	ldrb	w3, [x19, #1]
  473418:	sub	w1, w20, #0x1
  47341c:	add	x19, x19, #0x2
  473420:	sxtw	x2, w1
  473424:	cmp	x3, w1, sxtw
  473428:	b.ge	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.tcont
  47342c:	sub	x1, x2, x3
  473430:	mov	w3, w20
  473434:	ldr	x0, [x22, x1, lsl #3]
  473438:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  47343c:	cmp	w20, #0x1
  473440:	b.le	4731bc <_obstack_memory_used@@Base+0x16dcc>
  473444:	sub	w0, w20, #0x2
  473448:	mov	x19, x4
  47344c:	mov	w3, w20
  473450:	ldr	x0, [x22, w0, sxtw #3]
  473454:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473458:	cbz	w20, 4731bc <_obstack_memory_used@@Base+0x16dcc>
  47345c:	sub	w20, w20, #0x1
  473460:	mov	x19, x4
  473464:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  473468:	cbz	w20, 4731bc <_obstack_memory_used@@Base+0x16dcc>
  47346c:	sub	w0, w20, #0x1
  473470:	mov	x19, x4
  473474:	mov	w3, w20
  473478:	ldr	x0, [x22, w0, sxtw #3]
  47347c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473480:	ldursh	x1, [x19, #1]
  473484:	add	x19, x19, #0x3
  473488:	add	x19, x19, x1
  47348c:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  473490:	ldrb	w0, [x19, #1]
  473494:	mov	w3, w20
  473498:	add	x19, x19, #0x2
  47349c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4734a0:	ldrb	w26, [x19, #1]
  4734a4:	mov	x1, x24
  4734a8:	mov	w0, w26
  4734ac:	bl	472120 <_obstack_memory_used@@Base+0x15d30>
  4734b0:	add	x2, x19, #0x2
  4734b4:	mov	x1, x0
  4734b8:	add	x3, sp, #0x58
  4734bc:	mov	w0, w26
  4734c0:	bl	471fc0 <_obstack_memory_used@@Base+0x15bd0>
  4734c4:	mov	x19, x0
  4734c8:	mov	w3, w20
  4734cc:	ldr	x0, [sp, #88]
  4734d0:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4734d4:	cbz	w20, 4731bc <_obstack_memory_used@@Base+0x16dcc>
  4734d8:	sub	w20, w20, #0x1
  4734dc:	add	x1, x19, #0x3
  4734e0:	ldr	x0, [x22, w20, sxtw #3]
  4734e4:	cbz	x0, 473570 <_obstack_memory_used@@Base+0x17180>
  4734e8:	ldursh	x19, [x19, #1]
  4734ec:	add	x19, x1, x19
  4734f0:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  4734f4:	ldursw	x0, [x19, #1]
  4734f8:	mov	w3, w20
  4734fc:	add	x19, x19, #0x5
  473500:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473504:	ldur	w0, [x19, #1]
  473508:	mov	w3, w20
  47350c:	add	x19, x19, #0x5
  473510:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473514:	ldursh	x0, [x19, #1]
  473518:	mov	w3, w20
  47351c:	add	x19, x19, #0x3
  473520:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473524:	ldurh	w0, [x19, #1]
  473528:	mov	w3, w20
  47352c:	add	x19, x19, #0x3
  473530:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473534:	ldrsb	x0, [x19, #1]
  473538:	mov	w3, w20
  47353c:	add	x19, x19, #0x2
  473540:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473544:	cmp	w5, #0x6
  473548:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  47354c:	mov	x19, x4
  473550:	ldr	x0, [x0]
  473554:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473558:	mov	x0, #0xffffffffffffffff    	// #-1
  47355c:	tst	x2, #0x40
  473560:	lsl	x0, x0, x1
  473564:	orr	x0, x3, x0
  473568:	csel	x3, x0, x3, ne  // ne = any
  47356c:	b	4731f8 <_obstack_memory_used@@Base+0x16e08>
  473570:	mov	x19, x1
  473574:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  473578:	mov	x6, #0x0                   	// #0
  47357c:	mov	w2, #0x0                   	// #0
  473580:	ldrb	w5, [x4], #1
  473584:	and	x1, x5, #0x7f
  473588:	lsl	x1, x1, x2
  47358c:	add	w2, w2, #0x7
  473590:	orr	x6, x6, x1
  473594:	tbnz	w5, #7, 473580 <_obstack_memory_used@@Base+0x17190>
  473598:	add	x0, x0, x6
  47359c:	mov	x19, x4
  4735a0:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4735a4:	cntd	x0
  4735a8:	mov	w3, w20
  4735ac:	mov	x19, x4
  4735b0:	sxtw	x0, w0
  4735b4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4735b8:	cntd	x0
  4735bc:	sxtw	x0, w0
  4735c0:	b	473240 <_obstack_memory_used@@Base+0x16e50>
  4735c4:	mov	x0, x3
  4735c8:	ldp	x29, x30, [sp]
  4735cc:	add	sp, sp, #0x260
  4735d0:	ret
  4735d4:	cmp	x0, #0x0
  4735d8:	mov	x19, x4
  4735dc:	cneg	x0, x0, lt  // lt = tstop
  4735e0:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4735e4:	mov	x19, x4
  4735e8:	mov	w1, #0x0                   	// #0
  4735ec:	mov	x4, #0x0                   	// #0
  4735f0:	ldrb	w2, [x19], #1
  4735f4:	and	x0, x2, #0x7f
  4735f8:	lsl	x0, x0, x1
  4735fc:	add	w1, w1, #0x7
  473600:	orr	x4, x4, x0
  473604:	tbnz	w2, #7, 4735f0 <_obstack_memory_used@@Base+0x17200>
  473608:	mov	x3, #0x0                   	// #0
  47360c:	mov	w1, #0x0                   	// #0
  473610:	ldrb	w2, [x19], #1
  473614:	and	x0, x2, #0x7f
  473618:	lsl	x0, x0, x1
  47361c:	add	w1, w1, #0x7
  473620:	orr	x3, x3, x0
  473624:	tbnz	w2, #7, 473610 <_obstack_memory_used@@Base+0x17220>
  473628:	cmp	w1, #0x3f
  47362c:	b.hi	473644 <_obstack_memory_used@@Base+0x17254>  // b.pmore
  473630:	mov	x0, #0xffffffffffffffff    	// #-1
  473634:	tst	x2, #0x40
  473638:	lsl	x0, x0, x1
  47363c:	orr	x0, x3, x0
  473640:	csel	x3, x0, x3, ne  // ne = any
  473644:	cmp	w4, #0x61
  473648:	mov	w1, w4
  47364c:	b.gt	4731bc <_obstack_memory_used@@Base+0x16dcc>
  473650:	ldr	x2, [x24, #832]
  473654:	sxtw	x4, w4
  473658:	ldr	x0, [x24, x4, lsl #3]
  47365c:	tbz	x2, #62, 47366c <_obstack_memory_used@@Base+0x1727c>
  473660:	add	x4, x24, x4
  473664:	ldrb	w2, [x4, #856]
  473668:	cbnz	w2, 47368c <_obstack_memory_used@@Base+0x1729c>
  47366c:	cmp	w1, #0x2e
  473670:	b.eq	473880 <_obstack_memory_used@@Base+0x17490>  // b.none
  473674:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  473678:	add	x2, x2, #0x570
  47367c:	ldrb	w1, [x2, w1, sxtw]
  473680:	cmp	w1, #0x8
  473684:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  473688:	ldr	x0, [x0]
  47368c:	add	x0, x3, x0
  473690:	mov	w3, w20
  473694:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473698:	mov	x19, x4
  47369c:	mov	x0, #0x0                   	// #0
  4736a0:	mov	w2, #0x0                   	// #0
  4736a4:	nop
  4736a8:	ldrb	w4, [x19], #1
  4736ac:	and	x1, x4, #0x7f
  4736b0:	lsl	x1, x1, x2
  4736b4:	add	w2, w2, #0x7
  4736b8:	orr	x0, x0, x1
  4736bc:	tbnz	w4, #7, 4736a8 <_obstack_memory_used@@Base+0x172b8>
  4736c0:	mov	w3, w20
  4736c4:	cmp	w2, #0x3f
  4736c8:	b.hi	473260 <_obstack_memory_used@@Base+0x16e70>  // b.pmore
  4736cc:	tbz	w4, #6, 473260 <_obstack_memory_used@@Base+0x16e70>
  4736d0:	mov	x1, #0xffffffffffffffff    	// #-1
  4736d4:	lsl	x2, x1, x2
  4736d8:	orr	x0, x0, x2
  4736dc:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4736e0:	mov	x19, x4
  4736e4:	mov	x0, #0x0                   	// #0
  4736e8:	mov	w2, #0x0                   	// #0
  4736ec:	nop
  4736f0:	ldrb	w3, [x19], #1
  4736f4:	and	x1, x3, #0x7f
  4736f8:	lsl	x1, x1, x2
  4736fc:	add	w2, w2, #0x7
  473700:	orr	x0, x0, x1
  473704:	tbnz	w3, #7, 4736f0 <_obstack_memory_used@@Base+0x17300>
  473708:	mov	w3, w20
  47370c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473710:	mov	x19, x4
  473714:	mov	x3, #0x0                   	// #0
  473718:	mov	w1, #0x0                   	// #0
  47371c:	nop
  473720:	ldrb	w2, [x19], #1
  473724:	and	x0, x2, #0x7f
  473728:	lsl	x0, x0, x1
  47372c:	add	w1, w1, #0x7
  473730:	orr	x3, x3, x0
  473734:	tbnz	w2, #7, 473720 <_obstack_memory_used@@Base+0x17330>
  473738:	cmp	w3, #0x61
  47373c:	mov	w1, w3
  473740:	b.gt	4731bc <_obstack_memory_used@@Base+0x16dcc>
  473744:	ldr	x2, [x24, #832]
  473748:	sxtw	x3, w3
  47374c:	ldr	x0, [x24, x3, lsl #3]
  473750:	tbz	x2, #62, 473760 <_obstack_memory_used@@Base+0x17370>
  473754:	add	x3, x24, x3
  473758:	ldrb	w2, [x3, #856]
  47375c:	cbnz	w2, 473690 <_obstack_memory_used@@Base+0x172a0>
  473760:	cmp	w1, #0x2e
  473764:	b.eq	473890 <_obstack_memory_used@@Base+0x174a0>  // b.none
  473768:	adrp	x2, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  47376c:	add	x2, x2, #0x570
  473770:	ldrb	w1, [x2, w1, sxtw]
  473774:	cmp	w1, #0x8
  473778:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  47377c:	mov	w3, w20
  473780:	ldr	x0, [x0]
  473784:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473788:	mov	x19, x4
  47378c:	b	473270 <_obstack_memory_used@@Base+0x16e80>
  473790:	ldr	w0, [x0]
  473794:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473798:	cmp	x0, x1
  47379c:	mov	x19, x4
  4737a0:	cset	x0, ne  // ne = any
  4737a4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4737a8:	cmp	x0, x1
  4737ac:	mov	x19, x4
  4737b0:	cset	x0, lt  // lt = tstop
  4737b4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4737b8:	cmp	x0, x1
  4737bc:	mov	x19, x4
  4737c0:	cset	x0, le
  4737c4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4737c8:	cmp	x0, x1
  4737cc:	mov	x19, x4
  4737d0:	cset	x0, gt
  4737d4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4737d8:	cmp	x0, x1
  4737dc:	mov	x19, x4
  4737e0:	cset	x0, ge  // ge = tcont
  4737e4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4737e8:	cmp	x0, x1
  4737ec:	mov	x19, x4
  4737f0:	cset	x0, eq  // eq = none
  4737f4:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4737f8:	eor	x0, x0, x1
  4737fc:	mov	x19, x4
  473800:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473804:	mov	x19, x4
  473808:	asr	x0, x0, x1
  47380c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473810:	mov	x19, x4
  473814:	lsr	x0, x0, x1
  473818:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  47381c:	mov	x19, x4
  473820:	lsl	x0, x0, x1
  473824:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473828:	add	x0, x0, x1
  47382c:	mov	x19, x4
  473830:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473834:	orr	x0, x0, x1
  473838:	mov	x19, x4
  47383c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473840:	mul	x0, x0, x1
  473844:	mov	x19, x4
  473848:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  47384c:	udiv	x2, x0, x1
  473850:	mov	x19, x4
  473854:	msub	x0, x2, x1, x0
  473858:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  47385c:	sub	x0, x0, x1
  473860:	mov	x19, x4
  473864:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473868:	sdiv	x0, x0, x1
  47386c:	mov	x19, x4
  473870:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473874:	and	x0, x0, x1
  473878:	mov	x19, x4
  47387c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  473880:	cntd	x0
  473884:	sxtw	x0, w0
  473888:	add	x0, x3, x0
  47388c:	b	473690 <_obstack_memory_used@@Base+0x172a0>
  473890:	cntd	x0
  473894:	mov	w3, w20
  473898:	sxtw	x0, w0
  47389c:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4738a0:	mvn	x0, x0
  4738a4:	mov	x19, x4
  4738a8:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4738ac:	cmp	w1, #0x2
  4738b0:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  4738b4:	ldrh	w0, [x0]
  4738b8:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4738bc:	cmp	w1, #0x8
  4738c0:	b.ne	4731bc <_obstack_memory_used@@Base+0x16dcc>  // b.any
  4738c4:	ldr	x0, [x0]
  4738c8:	b	473260 <_obstack_memory_used@@Base+0x16e70>
  4738cc:	nop
  4738d0:	sub	sp, sp, #0x440
  4738d4:	mov	x2, #0x3c0                 	// #960
  4738d8:	stp	x29, x30, [sp]
  4738dc:	mov	x29, sp
  4738e0:	stp	x27, x28, [sp, #80]
  4738e4:	add	x28, sp, #0x80
  4738e8:	mov	x27, x0
  4738ec:	stp	x19, x20, [sp, #16]
  4738f0:	stp	x21, x22, [sp, #32]
  4738f4:	stp	x23, x24, [sp, #48]
  4738f8:	stp	x25, x26, [sp, #64]
  4738fc:	str	x1, [sp, #104]
  473900:	mov	x1, x0
  473904:	mov	x0, x28
  473908:	bl	402cd0 <memcpy@plt>
  47390c:	ldr	x1, [sp, #960]
  473910:	tbz	x1, #62, 47391c <_obstack_memory_used@@Base+0x1752c>
  473914:	ldrb	w0, [sp, #1015]
  473918:	cbnz	w0, 473924 <_obstack_memory_used@@Base+0x17534>
  47391c:	ldr	x0, [x28, #248]
  473920:	cbz	x0, 473bf0 <_obstack_memory_used@@Base+0x17800>
  473924:	ldr	x0, [x27, #832]
  473928:	tbz	x0, #62, 473930 <_obstack_memory_used@@Base+0x17540>
  47392c:	strb	wzr, [x27, #887]
  473930:	ldr	x0, [sp, #104]
  473934:	ldr	w0, [x0, #1600]
  473938:	str	xzr, [x27, #248]
  47393c:	cmp	w0, #0x1
  473940:	b.ne	473990 <_obstack_memory_used@@Base+0x175a0>  // b.any
  473944:	ldr	x0, [sp, #104]
  473948:	ldr	x0, [x0, #1584]
  47394c:	cmp	w0, #0x61
  473950:	b.gt	473b58 <_obstack_memory_used@@Base+0x17768>
  473954:	sxtw	x2, w0
  473958:	ldr	x3, [x28, x2, lsl #3]
  47395c:	tbnz	x1, #62, 473bd0 <_obstack_memory_used@@Base+0x177e0>
  473960:	cmp	w0, #0x2e
  473964:	b.eq	473be4 <_obstack_memory_used@@Base+0x177f4>  // b.none
  473968:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  47396c:	add	x0, x0, #0x570
  473970:	ldrb	w0, [x0, x2]
  473974:	cmp	w0, #0x8
  473978:	b.ne	473b58 <_obstack_memory_used@@Base+0x17768>  // b.any
  47397c:	ldr	x3, [x3]
  473980:	ldr	x0, [sp, #104]
  473984:	ldr	x0, [x0, #1576]
  473988:	add	x22, x3, x0
  47398c:	b	4739d4 <_obstack_memory_used@@Base+0x175e4>
  473990:	cmp	w0, #0x2
  473994:	b.ne	473b58 <_obstack_memory_used@@Base+0x17768>  // b.any
  473998:	ldr	x0, [sp, #104]
  47399c:	mov	x1, #0x0                   	// #0
  4739a0:	mov	w3, #0x0                   	// #0
  4739a4:	ldr	x0, [x0, #1592]
  4739a8:	ldrb	w4, [x0], #1
  4739ac:	and	x2, x4, #0x7f
  4739b0:	lsl	x2, x2, x3
  4739b4:	add	w3, w3, #0x7
  4739b8:	orr	x1, x1, x2
  4739bc:	tbnz	w4, #7, 4739a8 <_obstack_memory_used@@Base+0x175b8>
  4739c0:	add	x1, x0, x1
  4739c4:	mov	x2, x28
  4739c8:	mov	x3, #0x0                   	// #0
  4739cc:	bl	473158 <_obstack_memory_used@@Base+0x16d68>
  4739d0:	mov	x22, x0
  4739d4:	ldr	x25, [sp, #104]
  4739d8:	adrp	x23, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4739dc:	add	x26, x27, #0x358
  4739e0:	add	x20, x23, #0x570
  4739e4:	add	x21, sp, #0x3d8
  4739e8:	mov	x24, #0x0                   	// #0
  4739ec:	mov	w19, #0x1                   	// #1
  4739f0:	str	x22, [x27, #784]
  4739f4:	nop
  4739f8:	ldr	w2, [x25, #8]
  4739fc:	cmp	w2, #0x3
  473a00:	b.eq	473aa4 <_obstack_memory_used@@Base+0x176b4>  // b.none
  473a04:	b.hi	473ae8 <_obstack_memory_used@@Base+0x176f8>  // b.pmore
  473a08:	cmp	w2, #0x1
  473a0c:	b.eq	473b5c <_obstack_memory_used@@Base+0x1776c>  // b.none
  473a10:	cmp	w2, #0x2
  473a14:	b.ne	473a3c <_obstack_memory_used@@Base+0x1764c>  // b.any
  473a18:	ldr	x0, [x25]
  473a1c:	ldrb	w2, [x21, w0, sxtw]
  473a20:	sxtw	x1, w0
  473a24:	cbnz	w2, 473b74 <_obstack_memory_used@@Base+0x17784>
  473a28:	ldr	x2, [x27, #832]
  473a2c:	ldr	x0, [x28, x1, lsl #3]
  473a30:	tbnz	x2, #62, 473ae0 <_obstack_memory_used@@Base+0x176f0>
  473a34:	nop
  473a38:	str	x0, [x27, x24, lsl #3]
  473a3c:	add	x24, x24, #0x1
  473a40:	add	x25, x25, #0x10
  473a44:	cmp	x24, #0x62
  473a48:	add	x26, x26, #0x1
  473a4c:	b.ne	4739f8 <_obstack_memory_used@@Base+0x17608>  // b.any
  473a50:	ldr	x3, [sp, #104]
  473a54:	ldr	x0, [x27, #832]
  473a58:	ldrb	w2, [x3, #1651]
  473a5c:	orr	x1, x0, #0x8000000000000000
  473a60:	and	x0, x0, #0x7fffffffffffffff
  473a64:	cmp	w2, #0x0
  473a68:	csel	x0, x0, x1, eq  // eq = none
  473a6c:	ldp	x29, x30, [sp]
  473a70:	orr	x1, x0, #0x2000000000000000
  473a74:	ldp	x19, x20, [sp, #16]
  473a78:	ldp	x21, x22, [sp, #32]
  473a7c:	ldp	x23, x24, [sp, #48]
  473a80:	ldp	x25, x26, [sp, #64]
  473a84:	str	x0, [x27, #832]
  473a88:	ldr	x2, [x3, #544]
  473a8c:	tst	x2, #0x1
  473a90:	csel	x0, x1, x0, ne  // ne = any
  473a94:	str	x0, [x27, #832]
  473a98:	ldp	x27, x28, [sp, #80]
  473a9c:	add	sp, sp, #0x440
  473aa0:	ret
  473aa4:	ldr	x0, [x25]
  473aa8:	mov	x1, #0x0                   	// #0
  473aac:	mov	w4, #0x0                   	// #0
  473ab0:	ldrb	w5, [x0], #1
  473ab4:	and	x2, x5, #0x7f
  473ab8:	lsl	x2, x2, x4
  473abc:	add	w4, w4, #0x7
  473ac0:	orr	x1, x1, x2
  473ac4:	tbnz	w5, #7, 473ab0 <_obstack_memory_used@@Base+0x176c0>
  473ac8:	add	x1, x0, x1
  473acc:	mov	x3, x22
  473ad0:	mov	x2, x28
  473ad4:	bl	473158 <_obstack_memory_used@@Base+0x16d68>
  473ad8:	ldr	x1, [x27, #832]
  473adc:	tbz	x1, #62, 473a38 <_obstack_memory_used@@Base+0x17648>
  473ae0:	strb	wzr, [x26]
  473ae4:	b	473a38 <_obstack_memory_used@@Base+0x17648>
  473ae8:	cmp	w2, #0x4
  473aec:	b.eq	473b44 <_obstack_memory_used@@Base+0x17754>  // b.none
  473af0:	cmp	w2, #0x5
  473af4:	b.ne	473a3c <_obstack_memory_used@@Base+0x1764c>  // b.any
  473af8:	ldr	x0, [x25]
  473afc:	mov	x1, #0x0                   	// #0
  473b00:	mov	w4, #0x0                   	// #0
  473b04:	nop
  473b08:	ldrb	w5, [x0], #1
  473b0c:	and	x2, x5, #0x7f
  473b10:	lsl	x2, x2, x4
  473b14:	add	w4, w4, #0x7
  473b18:	orr	x1, x1, x2
  473b1c:	tbnz	w5, #7, 473b08 <_obstack_memory_used@@Base+0x17718>
  473b20:	add	x1, x0, x1
  473b24:	mov	x3, x22
  473b28:	mov	x2, x28
  473b2c:	bl	473158 <_obstack_memory_used@@Base+0x16d68>
  473b30:	ldrb	w1, [x24, x20]
  473b34:	cmp	w1, #0x8
  473b38:	b.hi	473b58 <_obstack_memory_used@@Base+0x17768>  // b.pmore
  473b3c:	strb	w19, [x26]
  473b40:	b	473a38 <_obstack_memory_used@@Base+0x17648>
  473b44:	ldr	x0, [x25]
  473b48:	ldrb	w1, [x24, x20]
  473b4c:	add	x0, x22, x0
  473b50:	cmp	w1, #0x8
  473b54:	b.ls	473b3c <_obstack_memory_used@@Base+0x1774c>  // b.plast
  473b58:	bl	403180 <abort@plt>
  473b5c:	ldr	x1, [x27, #832]
  473b60:	ldr	x0, [x25]
  473b64:	add	x0, x22, x0
  473b68:	tbz	x1, #62, 473a38 <_obstack_memory_used@@Base+0x17648>
  473b6c:	strb	wzr, [x26]
  473b70:	b	473a38 <_obstack_memory_used@@Base+0x17648>
  473b74:	cmp	w0, #0x61
  473b78:	b.gt	473b58 <_obstack_memory_used@@Base+0x17768>
  473b7c:	ldr	x4, [sp, #960]
  473b80:	ldr	x2, [x28, x1, lsl #3]
  473b84:	tbz	x4, #62, 473ba8 <_obstack_memory_used@@Base+0x177b8>
  473b88:	mov	x0, x2
  473b8c:	nop
  473b90:	add	x1, x23, #0x570
  473b94:	ldrb	w1, [x24, x1]
  473b98:	cmp	w1, #0x8
  473b9c:	b.hi	473b58 <_obstack_memory_used@@Base+0x17768>  // b.pmore
  473ba0:	strb	w19, [x26]
  473ba4:	b	473a38 <_obstack_memory_used@@Base+0x17648>
  473ba8:	cmp	w0, #0x2e
  473bac:	b.eq	473bc4 <_obstack_memory_used@@Base+0x177d4>  // b.none
  473bb0:	ldrb	w0, [x20, x1]
  473bb4:	cmp	w0, #0x8
  473bb8:	b.ne	473b58 <_obstack_memory_used@@Base+0x17768>  // b.any
  473bbc:	ldr	x0, [x2]
  473bc0:	b	473b90 <_obstack_memory_used@@Base+0x177a0>
  473bc4:	cntd	x0
  473bc8:	sxtw	x0, w0
  473bcc:	b	473b90 <_obstack_memory_used@@Base+0x177a0>
  473bd0:	add	x1, sp, #0x3d8
  473bd4:	ldrb	w1, [x1, x2]
  473bd8:	cbnz	w1, 473980 <_obstack_memory_used@@Base+0x17590>
  473bdc:	cmp	w0, #0x2e
  473be0:	b.ne	473968 <_obstack_memory_used@@Base+0x17578>  // b.any
  473be4:	cntd	x0
  473be8:	sxtw	x3, w0
  473bec:	b	473980 <_obstack_memory_used@@Base+0x17590>
  473bf0:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  473bf4:	ldr	x2, [x27, #784]
  473bf8:	ldrb	w0, [x0, #1423]
  473bfc:	cmp	w0, #0x8
  473c00:	b.ne	473b58 <_obstack_memory_used@@Base+0x17768>  // b.any
  473c04:	str	x2, [sp, #120]
  473c08:	tbz	x1, #62, 473c10 <_obstack_memory_used@@Base+0x17820>
  473c0c:	strb	wzr, [sp, #1015]
  473c10:	add	x0, sp, #0x78
  473c14:	str	x0, [x28, #248]
  473c18:	b	473924 <_obstack_memory_used@@Base+0x17534>
  473c1c:	nop
  473c20:	sub	sp, sp, #0x6d0
  473c24:	stp	x29, x30, [sp]
  473c28:	mov	x29, sp
  473c2c:	xpaclri
  473c30:	stp	x19, x20, [sp, #16]
  473c34:	mov	x19, x0
  473c38:	mov	x20, x30
  473c3c:	stp	x21, x22, [sp, #32]
  473c40:	mov	x22, x1
  473c44:	mov	x21, x2
  473c48:	mov	w1, #0x0                   	// #0
  473c4c:	mov	x2, #0x3c0                 	// #960
  473c50:	str	x23, [sp, #48]
  473c54:	bl	403000 <memset@plt>
  473c58:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  473c5c:	str	x20, [x19, #792]
  473c60:	str	x0, [x19, #832]
  473c64:	add	x23, sp, #0x50
  473c68:	mov	x1, x23
  473c6c:	mov	x0, x19
  473c70:	bl	472aa0 <_obstack_memory_used@@Base+0x166b0>
  473c74:	cbnz	w0, 473e68 <_obstack_memory_used@@Base+0x17a78>
  473c78:	adrp	x0, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  473c7c:	adrp	x20, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  473c80:	ldr	x0, [x0, #3600]
  473c84:	cbz	x0, 473d0c <_obstack_memory_used@@Base+0x1791c>
  473c88:	add	x0, x20, #0x570
  473c8c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x15c10>
  473c90:	add	x0, x0, #0x64
  473c94:	add	x1, x1, #0x948
  473c98:	bl	4031f0 <pthread_once@plt>
  473c9c:	cbnz	w0, 473d0c <_obstack_memory_used@@Base+0x1791c>
  473ca0:	add	x20, x20, #0x570
  473ca4:	ldrb	w0, [x20, #31]
  473ca8:	cmp	w0, #0x8
  473cac:	b.ne	473e68 <_obstack_memory_used@@Base+0x17a78>  // b.any
  473cb0:	ldr	x0, [x19, #832]
  473cb4:	str	x22, [sp, #72]
  473cb8:	tbz	x0, #62, 473cc0 <_obstack_memory_used@@Base+0x178d0>
  473cbc:	strb	wzr, [x19, #887]
  473cc0:	add	x0, sp, #0x48
  473cc4:	mov	x3, #0x1f                  	// #31
  473cc8:	mov	w2, #0x1                   	// #1
  473ccc:	str	x0, [x19, #248]
  473cd0:	mov	x1, x23
  473cd4:	mov	x0, x19
  473cd8:	str	xzr, [sp, #1656]
  473cdc:	str	x3, [sp, #1664]
  473ce0:	str	w2, [sp, #1680]
  473ce4:	bl	4738d0 <_obstack_memory_used@@Base+0x174e0>
  473ce8:	mov	x30, x21
  473cec:	xpaclri
  473cf0:	ldp	x21, x22, [sp, #32]
  473cf4:	ldr	x23, [sp, #48]
  473cf8:	str	x30, [x19, #792]
  473cfc:	ldp	x29, x30, [sp]
  473d00:	ldp	x19, x20, [sp, #16]
  473d04:	add	sp, sp, #0x6d0
  473d08:	ret
  473d0c:	ldrb	w0, [x20, #1392]
  473d10:	add	x3, x20, #0x570
  473d14:	cbnz	w0, 473ca0 <_obstack_memory_used@@Base+0x178b0>
  473d18:	mov	w4, #0x8                   	// #8
  473d1c:	strb	w4, [x20, #1392]
  473d20:	strb	w4, [x3, #1]
  473d24:	strb	w4, [x3, #2]
  473d28:	strb	w4, [x3, #3]
  473d2c:	strb	w4, [x3, #4]
  473d30:	strb	w4, [x3, #5]
  473d34:	strb	w4, [x3, #6]
  473d38:	strb	w4, [x3, #7]
  473d3c:	strb	w4, [x3, #8]
  473d40:	strb	w4, [x3, #9]
  473d44:	strb	w4, [x3, #10]
  473d48:	strb	w4, [x3, #11]
  473d4c:	strb	w4, [x3, #12]
  473d50:	strb	w4, [x3, #13]
  473d54:	strb	w4, [x3, #14]
  473d58:	strb	w4, [x3, #15]
  473d5c:	strb	w4, [x3, #16]
  473d60:	strb	w4, [x3, #17]
  473d64:	strb	w4, [x3, #18]
  473d68:	strb	w4, [x3, #19]
  473d6c:	strb	w4, [x3, #20]
  473d70:	strb	w4, [x3, #21]
  473d74:	strb	w4, [x3, #22]
  473d78:	strb	w4, [x3, #23]
  473d7c:	strb	w4, [x3, #24]
  473d80:	strb	w4, [x3, #25]
  473d84:	strb	w4, [x3, #26]
  473d88:	strb	w4, [x3, #27]
  473d8c:	strb	w4, [x3, #28]
  473d90:	strb	w4, [x3, #29]
  473d94:	strb	w4, [x3, #30]
  473d98:	strb	w4, [x3, #31]
  473d9c:	strb	w4, [x3, #64]
  473da0:	strb	w4, [x3, #46]
  473da4:	strb	w4, [x3, #65]
  473da8:	strb	w4, [x3, #66]
  473dac:	strb	w4, [x3, #67]
  473db0:	strb	w4, [x3, #68]
  473db4:	strb	w4, [x3, #69]
  473db8:	strb	w4, [x3, #70]
  473dbc:	strb	w4, [x3, #71]
  473dc0:	strb	w4, [x3, #72]
  473dc4:	strb	w4, [x3, #73]
  473dc8:	strb	w4, [x3, #74]
  473dcc:	strb	w4, [x3, #75]
  473dd0:	strb	w4, [x3, #76]
  473dd4:	strb	w4, [x3, #77]
  473dd8:	strb	w4, [x3, #78]
  473ddc:	strb	w4, [x3, #79]
  473de0:	strb	w4, [x3, #80]
  473de4:	strb	w4, [x3, #81]
  473de8:	strb	w4, [x3, #82]
  473dec:	strb	w4, [x3, #83]
  473df0:	strb	w4, [x3, #84]
  473df4:	strb	w4, [x3, #85]
  473df8:	strb	w4, [x3, #86]
  473dfc:	strb	w4, [x3, #87]
  473e00:	strb	w4, [x3, #88]
  473e04:	strb	w4, [x3, #89]
  473e08:	strb	w4, [x3, #90]
  473e0c:	strb	w4, [x3, #91]
  473e10:	strb	w4, [x3, #92]
  473e14:	strb	w4, [x3, #93]
  473e18:	strb	w4, [x3, #94]
  473e1c:	strb	w4, [x3, #95]
  473e20:	strb	w4, [x3, #48]
  473e24:	strb	w4, [x3, #49]
  473e28:	strb	w4, [x3, #50]
  473e2c:	strb	w4, [x3, #51]
  473e30:	strb	w4, [x3, #52]
  473e34:	strb	w4, [x3, #53]
  473e38:	strb	w4, [x3, #54]
  473e3c:	strb	w4, [x3, #55]
  473e40:	strb	w4, [x3, #56]
  473e44:	strb	w4, [x3, #57]
  473e48:	strb	w4, [x3, #58]
  473e4c:	strb	w4, [x3, #59]
  473e50:	strb	w4, [x3, #60]
  473e54:	strb	w4, [x3, #61]
  473e58:	strb	w4, [x3, #62]
  473e5c:	strb	w4, [x3, #63]
  473e60:	strb	w4, [x3, #96]
  473e64:	b	473ca0 <_obstack_memory_used@@Base+0x178b0>
  473e68:	bl	403180 <abort@plt>
  473e6c:	nop
  473e70:	stp	x29, x30, [sp, #-32]!
  473e74:	mov	x29, sp
  473e78:	stp	x19, x20, [sp, #16]
  473e7c:	mov	x20, x1
  473e80:	mov	x19, x0
  473e84:	bl	4738d0 <_obstack_memory_used@@Base+0x174e0>
  473e88:	ldr	x0, [x20, #1640]
  473e8c:	add	x1, x20, x0, lsl #4
  473e90:	ldr	w1, [x1, #8]
  473e94:	cmp	w1, #0x6
  473e98:	b.ne	473eac <_obstack_memory_used@@Base+0x17abc>  // b.any
  473e9c:	str	xzr, [x19, #792]
  473ea0:	ldp	x19, x20, [sp, #16]
  473ea4:	ldp	x29, x30, [sp], #32
  473ea8:	ret
  473eac:	cmp	w0, #0x61
  473eb0:	b.gt	473f20 <_obstack_memory_used@@Base+0x17b30>
  473eb4:	ldr	x2, [x19, #832]
  473eb8:	sxtw	x1, w0
  473ebc:	ldr	x17, [x19, x1, lsl #3]
  473ec0:	tbz	x2, #62, 473ed0 <_obstack_memory_used@@Base+0x17ae0>
  473ec4:	add	x2, x19, x1
  473ec8:	ldrb	w2, [x2, #856]
  473ecc:	cbnz	w2, 473ef0 <_obstack_memory_used@@Base+0x17b00>
  473ed0:	cmp	w0, #0x2e
  473ed4:	b.eq	473f14 <_obstack_memory_used@@Base+0x17b24>  // b.none
  473ed8:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  473edc:	add	x0, x0, #0x570
  473ee0:	ldrb	w0, [x0, x1]
  473ee4:	cmp	w0, #0x8
  473ee8:	b.ne	473f20 <_obstack_memory_used@@Base+0x17b30>  // b.any
  473eec:	ldr	x17, [x17]
  473ef0:	ldr	x0, [x20, #544]
  473ef4:	str	x17, [x19, #792]
  473ef8:	tbz	w0, #0, 473f04 <_obstack_memory_used@@Base+0x17b14>
  473efc:	ldr	x16, [x19, #784]
  473f00:	autia1716
  473f04:	str	x17, [x19, #792]
  473f08:	ldp	x19, x20, [sp, #16]
  473f0c:	ldp	x29, x30, [sp], #32
  473f10:	ret
  473f14:	cntd	x0
  473f18:	sxtw	x17, w0
  473f1c:	b	473ef0 <_obstack_memory_used@@Base+0x17b00>
  473f20:	bl	403180 <abort@plt>
  473f24:	nop
  473f28:	sub	sp, sp, #0x6c0
  473f2c:	stp	x29, x30, [sp]
  473f30:	mov	x29, sp
  473f34:	stp	x19, x20, [sp, #16]
  473f38:	mov	x19, x1
  473f3c:	stp	x21, x22, [sp, #32]
  473f40:	mov	x21, x0
  473f44:	add	x22, sp, #0x40
  473f48:	stp	x23, x24, [sp, #48]
  473f4c:	mov	x24, x2
  473f50:	mov	x23, #0x1                   	// #1
  473f54:	nop
  473f58:	mov	x1, x22
  473f5c:	mov	x0, x19
  473f60:	bl	472aa0 <_obstack_memory_used@@Base+0x166b0>
  473f64:	ldr	x3, [x19, #784]
  473f68:	ldr	x1, [x19, #832]
  473f6c:	ldr	x2, [x21, #24]
  473f70:	sub	x1, x3, x1, lsr #63
  473f74:	cmp	x2, x1
  473f78:	cset	w20, eq  // eq = none
  473f7c:	lsl	w20, w20, #2
  473f80:	cbnz	w0, 473fcc <_obstack_memory_used@@Base+0x17bdc>
  473f84:	ldr	x5, [sp, #1680]
  473f88:	cbz	x5, 473fb4 <_obstack_memory_used@@Base+0x17bc4>
  473f8c:	ldr	x2, [x21]
  473f90:	mov	x4, x19
  473f94:	mov	x3, x21
  473f98:	orr	w1, w20, #0x2
  473f9c:	mov	w0, #0x1                   	// #1
  473fa0:	blr	x5
  473fa4:	cmp	w0, #0x7
  473fa8:	b.eq	473fe8 <_obstack_memory_used@@Base+0x17bf8>  // b.none
  473fac:	cmp	w0, #0x8
  473fb0:	b.ne	473fcc <_obstack_memory_used@@Base+0x17bdc>  // b.any
  473fb4:	cbnz	w20, 474004 <_obstack_memory_used@@Base+0x17c14>
  473fb8:	add	x23, x23, #0x1
  473fbc:	mov	x1, x22
  473fc0:	mov	x0, x19
  473fc4:	bl	473e70 <_obstack_memory_used@@Base+0x17a80>
  473fc8:	b	473f58 <_obstack_memory_used@@Base+0x17b68>
  473fcc:	mov	w0, #0x2                   	// #2
  473fd0:	ldp	x29, x30, [sp]
  473fd4:	ldp	x19, x20, [sp, #16]
  473fd8:	ldp	x21, x22, [sp, #32]
  473fdc:	ldp	x23, x24, [sp, #48]
  473fe0:	add	sp, sp, #0x6c0
  473fe4:	ret
  473fe8:	str	x23, [x24]
  473fec:	ldp	x29, x30, [sp]
  473ff0:	ldp	x19, x20, [sp, #16]
  473ff4:	ldp	x21, x22, [sp, #32]
  473ff8:	ldp	x23, x24, [sp, #48]
  473ffc:	add	sp, sp, #0x6c0
  474000:	ret
  474004:	bl	403180 <abort@plt>
  474008:	sub	sp, sp, #0x6d0
  47400c:	stp	x29, x30, [sp]
  474010:	mov	x29, sp
  474014:	stp	x19, x20, [sp, #16]
  474018:	mov	x20, x0
  47401c:	stp	x21, x22, [sp, #32]
  474020:	mov	x21, x1
  474024:	add	x22, sp, #0x50
  474028:	stp	x23, x24, [sp, #48]
  47402c:	mov	x23, #0x1                   	// #1
  474030:	stp	x25, x26, [sp, #64]
  474034:	mov	x26, x2
  474038:	ldp	x25, x24, [x0, #16]
  47403c:	b	474090 <_obstack_memory_used@@Base+0x17ca0>
  474040:	blr	x25
  474044:	mov	w2, w0
  474048:	mov	x4, x21
  47404c:	mov	x3, x20
  474050:	mov	w1, #0xa                   	// #10
  474054:	mov	w0, #0x1                   	// #1
  474058:	cbnz	w2, 4740dc <_obstack_memory_used@@Base+0x17cec>
  47405c:	ldr	x5, [sp, #1696]
  474060:	cbz	x5, 474080 <_obstack_memory_used@@Base+0x17c90>
  474064:	ldr	x2, [x20]
  474068:	blr	x5
  47406c:	mov	w19, w0
  474070:	cmp	w0, #0x7
  474074:	b.eq	474100 <_obstack_memory_used@@Base+0x17d10>  // b.none
  474078:	cmp	w0, #0x8
  47407c:	b.ne	4740dc <_obstack_memory_used@@Base+0x17cec>  // b.any
  474080:	add	x23, x23, #0x1
  474084:	mov	x1, x22
  474088:	mov	x0, x21
  47408c:	bl	473e70 <_obstack_memory_used@@Base+0x17a80>
  474090:	mov	x1, x22
  474094:	mov	x0, x21
  474098:	bl	472aa0 <_obstack_memory_used@@Base+0x166b0>
  47409c:	cmp	w0, #0x0
  4740a0:	mov	w19, w0
  4740a4:	mov	x5, x24
  4740a8:	mov	x4, x21
  4740ac:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  4740b0:	b.ne	4740dc <_obstack_memory_used@@Base+0x17cec>  // b.any
  4740b4:	cmp	w0, #0x5
  4740b8:	mov	x3, x20
  4740bc:	mov	w1, #0xa                   	// #10
  4740c0:	mov	w0, #0x1                   	// #1
  4740c4:	ldr	x2, [x20]
  4740c8:	b.ne	474040 <_obstack_memory_used@@Base+0x17c50>  // b.any
  4740cc:	mov	w1, #0x1a                  	// #26
  4740d0:	mov	w0, #0x1                   	// #1
  4740d4:	blr	x25
  4740d8:	cbz	w0, 474100 <_obstack_memory_used@@Base+0x17d10>
  4740dc:	mov	w19, #0x2                   	// #2
  4740e0:	mov	w0, w19
  4740e4:	ldp	x29, x30, [sp]
  4740e8:	ldp	x19, x20, [sp, #16]
  4740ec:	ldp	x21, x22, [sp, #32]
  4740f0:	ldp	x23, x24, [sp, #48]
  4740f4:	ldp	x25, x26, [sp, #64]
  4740f8:	add	sp, sp, #0x6d0
  4740fc:	ret
  474100:	str	x23, [x26]
  474104:	mov	w0, w19
  474108:	ldp	x29, x30, [sp]
  47410c:	ldp	x19, x20, [sp, #16]
  474110:	ldp	x21, x22, [sp, #32]
  474114:	ldp	x23, x24, [sp, #48]
  474118:	ldp	x25, x26, [sp, #64]
  47411c:	add	sp, sp, #0x6d0
  474120:	ret
  474124:	nop
  474128:	cmp	w1, #0x61
  47412c:	b.gt	474184 <_obstack_memory_used@@Base+0x17d94>
  474130:	ldr	x4, [x0, #832]
  474134:	sxtw	x3, w1
  474138:	ldr	x2, [x0, x3, lsl #3]
  47413c:	tbz	x4, #62, 47414c <_obstack_memory_used@@Base+0x17d5c>
  474140:	add	x0, x0, x3
  474144:	ldrb	w0, [x0, #856]
  474148:	cbnz	w0, 47417c <_obstack_memory_used@@Base+0x17d8c>
  47414c:	cmp	w1, #0x2e
  474150:	b.eq	474170 <_obstack_memory_used@@Base+0x17d80>  // b.none
  474154:	adrp	x0, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  474158:	add	x0, x0, #0x570
  47415c:	ldrb	w0, [x0, w1, sxtw]
  474160:	cmp	w0, #0x8
  474164:	b.ne	474184 <_obstack_memory_used@@Base+0x17d94>  // b.any
  474168:	ldr	x0, [x2]
  47416c:	ret
  474170:	cntd	x0
  474174:	sxtw	x0, w0
  474178:	ret
  47417c:	mov	x0, x2
  474180:	ret
  474184:	stp	x29, x30, [sp, #-16]!
  474188:	mov	x29, sp
  47418c:	bl	403180 <abort@plt>
  474190:	ldr	x0, [x0, #784]
  474194:	ret
  474198:	cmp	w1, #0x61
  47419c:	b.gt	4741e0 <_obstack_memory_used@@Base+0x17df0>
  4741a0:	ldr	x5, [x0, #832]
  4741a4:	adrp	x3, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4741a8:	add	x3, x3, #0x570
  4741ac:	sxtw	x4, w1
  4741b0:	ldrb	w1, [x3, w1, sxtw]
  4741b4:	tbz	x5, #62, 4741c4 <_obstack_memory_used@@Base+0x17dd4>
  4741b8:	add	x3, x0, x4
  4741bc:	ldrb	w3, [x3, #856]
  4741c0:	cbnz	w3, 4741d8 <_obstack_memory_used@@Base+0x17de8>
  4741c4:	cmp	w1, #0x8
  4741c8:	ldr	x0, [x0, x4, lsl #3]
  4741cc:	b.ne	4741e0 <_obstack_memory_used@@Base+0x17df0>  // b.any
  4741d0:	str	x2, [x0]
  4741d4:	ret
  4741d8:	str	x2, [x0, x4, lsl #3]
  4741dc:	ret
  4741e0:	stp	x29, x30, [sp, #-16]!
  4741e4:	mov	x29, sp
  4741e8:	bl	403180 <abort@plt>
  4741ec:	nop
  4741f0:	ldr	x0, [x0, #792]
  4741f4:	ret
  4741f8:	ldr	x2, [x0, #832]
  4741fc:	ldr	x0, [x0, #792]
  474200:	lsr	x2, x2, #63
  474204:	str	w2, [x1]
  474208:	ret
  47420c:	nop
  474210:	str	x1, [x0, #792]
  474214:	ret
  474218:	ldr	x0, [x0, #800]
  47421c:	ret
  474220:	ldr	x0, [x0, #824]
  474224:	ret
  474228:	stp	x29, x30, [sp, #-48]!
  47422c:	sub	x0, x0, #0x1
  474230:	mov	x29, sp
  474234:	add	x1, sp, #0x18
  474238:	bl	4761e0 <_obstack_memory_used@@Base+0x19df0>
  47423c:	ldr	x1, [sp, #40]
  474240:	cmp	x0, #0x0
  474244:	ldp	x29, x30, [sp], #48
  474248:	csel	x0, x1, x0, ne  // ne = any
  47424c:	ret
  474250:	ldr	x0, [x0, #816]
  474254:	ret
  474258:	ldr	x0, [x0, #808]
  47425c:	ret
  474260:	sub	sp, sp, #0xa70
  474264:	mov	x2, #0x3c0                 	// #960
  474268:	add	x3, sp, #0x30
  47426c:	stp	x29, x30, [sp]
  474270:	mov	x29, sp
  474274:	stp	x19, x20, [sp, #16]
  474278:	mov	x20, x1
  47427c:	mov	w1, #0x0                   	// #0
  474280:	str	x21, [sp, #32]
  474284:	mov	x21, x0
  474288:	mov	x0, x3
  47428c:	bl	403000 <memset@plt>
  474290:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  474294:	add	x19, sp, #0x3f0
  474298:	add	x21, x21, #0x1
  47429c:	mov	x1, x19
  4742a0:	str	x21, [sp, #840]
  4742a4:	str	x2, [sp, #880]
  4742a8:	bl	472aa0 <_obstack_memory_used@@Base+0x166b0>
  4742ac:	cbnz	w0, 474358 <_obstack_memory_used@@Base+0x17f68>
  4742b0:	ldr	w0, [sp, #2608]
  4742b4:	cmp	w0, #0x2
  4742b8:	b.eq	474358 <_obstack_memory_used@@Base+0x17f68>  // b.none
  4742bc:	sub	x4, x20, x20, lsl #3
  4742c0:	mov	x1, #0xffffffffffffe680    	// #-6528
  4742c4:	mov	x0, x19
  4742c8:	add	x5, x19, #0x620
  4742cc:	add	x4, x4, x1
  4742d0:	add	x2, x20, #0x334
  4742d4:	b	4742ec <_obstack_memory_used@@Base+0x17efc>
  4742d8:	str	xzr, [x4, x2, lsl #3]
  4742dc:	add	x0, x0, #0x10
  4742e0:	add	x2, x2, #0x1
  4742e4:	cmp	x0, x5
  4742e8:	b.eq	47431c <_obstack_memory_used@@Base+0x17f2c>  // b.none
  4742ec:	ldrb	w3, [x0, #8]
  4742f0:	strb	w3, [x2]
  4742f4:	cmp	w3, #0x1
  4742f8:	b.eq	474304 <_obstack_memory_used@@Base+0x17f14>  // b.none
  4742fc:	cmp	w3, #0x2
  474300:	b.ne	4742d8 <_obstack_memory_used@@Base+0x17ee8>  // b.any
  474304:	ldr	x3, [x0]
  474308:	str	x3, [x4, x2, lsl #3]
  47430c:	add	x0, x0, #0x10
  474310:	add	x2, x2, #0x1
  474314:	cmp	x0, x5
  474318:	b.ne	4742ec <_obstack_memory_used@@Base+0x17efc>  // b.any
  47431c:	ldr	x1, [sp, #896]
  474320:	mov	x0, x20
  474324:	ldr	x2, [sp, #2584]
  474328:	stp	x2, x1, [x20, #16]
  47432c:	ldr	x2, [sp, #2592]
  474330:	strh	w2, [x20, #816]
  474334:	ldr	x1, [sp, #2648]
  474338:	strh	w1, [x20, #818]
  47433c:	ldr	x2, [sp, #2664]
  474340:	str	x2, [x20, #8]
  474344:	ldp	x29, x30, [sp]
  474348:	ldp	x19, x20, [sp, #16]
  47434c:	ldr	x21, [sp, #32]
  474350:	add	sp, sp, #0xa70
  474354:	ret
  474358:	mov	x0, #0x0                   	// #0
  47435c:	ldp	x29, x30, [sp]
  474360:	ldp	x19, x20, [sp, #16]
  474364:	ldr	x21, [sp, #32]
  474368:	add	sp, sp, #0xa70
  47436c:	ret
  474370:	ret
  474374:	nop
  474378:	sub	sp, sp, #0xec0
  47437c:	stp	x29, x30, [sp]
  474380:	mov	x29, sp
  474384:	stp	x21, x22, [sp, #64]
  474388:	add	x21, sp, #0xc0
  47438c:	add	x22, sp, #0x840
  474390:	stp	x0, x1, [sp, #16]
  474394:	add	x1, sp, #0xec0
  474398:	stp	x2, x3, [sp, #32]
  47439c:	mov	x2, x30
  4743a0:	stp	x19, x20, [sp, #48]
  4743a4:	mov	x20, x0
  4743a8:	add	x19, sp, #0x480
  4743ac:	mov	x0, x21
  4743b0:	stp	x23, x24, [sp, #80]
  4743b4:	stp	x25, x26, [sp, #96]
  4743b8:	stp	x27, x28, [sp, #112]
  4743bc:	stp	d8, d9, [sp, #128]
  4743c0:	stp	d10, d11, [sp, #144]
  4743c4:	stp	d12, d13, [sp, #160]
  4743c8:	stp	d14, d15, [sp, #176]
  4743cc:	bl	473c20 <_obstack_memory_used@@Base+0x17830>
  4743d0:	mov	x1, x21
  4743d4:	mov	x0, x19
  4743d8:	mov	x2, #0x3c0                 	// #960
  4743dc:	bl	402cd0 <memcpy@plt>
  4743e0:	b	474414 <_obstack_memory_used@@Base+0x18024>
  4743e4:	cbnz	w2, 474480 <_obstack_memory_used@@Base+0x18090>
  4743e8:	ldr	x5, [sp, #3728]
  4743ec:	cbz	x5, 474408 <_obstack_memory_used@@Base+0x18018>
  4743f0:	ldr	x2, [x20]
  4743f4:	blr	x5
  4743f8:	cmp	w0, #0x6
  4743fc:	b.eq	474488 <_obstack_memory_used@@Base+0x18098>  // b.none
  474400:	cmp	w0, #0x8
  474404:	b.ne	474480 <_obstack_memory_used@@Base+0x18090>  // b.any
  474408:	mov	x1, x22
  47440c:	mov	x0, x19
  474410:	bl	473e70 <_obstack_memory_used@@Base+0x17a80>
  474414:	mov	x1, x22
  474418:	mov	x0, x19
  47441c:	bl	472aa0 <_obstack_memory_used@@Base+0x166b0>
  474420:	mov	w2, w0
  474424:	mov	w1, #0x1                   	// #1
  474428:	mov	x4, x19
  47442c:	mov	x3, x20
  474430:	mov	w0, w1
  474434:	cmp	w2, #0x5
  474438:	b.ne	4743e4 <_obstack_memory_used@@Base+0x17ff4>  // b.any
  47443c:	mov	x4, #0x0                   	// #0
  474440:	mov	w0, w2
  474444:	ldp	x29, x30, [sp]
  474448:	ldp	x0, x1, [sp, #16]
  47444c:	ldp	x2, x3, [sp, #32]
  474450:	ldp	x19, x20, [sp, #48]
  474454:	ldp	x21, x22, [sp, #64]
  474458:	ldp	x23, x24, [sp, #80]
  47445c:	ldp	x25, x26, [sp, #96]
  474460:	ldp	x27, x28, [sp, #112]
  474464:	ldp	d8, d9, [sp, #128]
  474468:	ldp	d10, d11, [sp, #144]
  47446c:	ldp	d12, d13, [sp, #160]
  474470:	ldp	d14, d15, [sp, #176]
  474474:	add	sp, sp, #0xec0
  474478:	add	sp, sp, x4
  47447c:	ret
  474480:	mov	w2, #0x3                   	// #3
  474484:	b	47443c <_obstack_memory_used@@Base+0x1804c>
  474488:	ldr	x4, [sp, #1936]
  47448c:	mov	x1, x21
  474490:	ldr	x3, [sp, #1984]
  474494:	mov	x2, #0x3c0                 	// #960
  474498:	mov	x0, x19
  47449c:	sub	x3, x4, x3, lsr #63
  4744a0:	stp	xzr, x3, [x20, #16]
  4744a4:	bl	402cd0 <memcpy@plt>
  4744a8:	mov	x2, x22
  4744ac:	mov	x1, x19
  4744b0:	mov	x0, x20
  4744b4:	bl	473f28 <_obstack_memory_used@@Base+0x17b38>
  4744b8:	mov	w2, w0
  4744bc:	cmp	w0, #0x7
  4744c0:	b.ne	47443c <_obstack_memory_used@@Base+0x1804c>  // b.any
  4744c4:	mov	x1, x19
  4744c8:	mov	x0, x21
  4744cc:	bl	472ff8 <_obstack_memory_used@@Base+0x16c08>
  4744d0:	mov	x4, x0
  4744d4:	ldr	x2, [sp, #1024]
  4744d8:	ldr	x1, [sp, #1944]
  4744dc:	tbz	x2, #61, 4744f0 <_obstack_memory_used@@Base+0x18100>
  4744e0:	mov	x17, x1
  4744e4:	ldr	x16, [sp, #976]
  4744e8:	pacia1716
  4744ec:	mov	x1, x17
  4744f0:	ldr	x0, [sp, #1936]
  4744f4:	bl	474370 <_obstack_memory_used@@Base+0x17f80>
  4744f8:	str	x1, [x29, #8]
  4744fc:	b	474440 <_obstack_memory_used@@Base+0x18050>
  474500:	sub	sp, sp, #0x850
  474504:	stp	x29, x30, [sp]
  474508:	mov	x29, sp
  47450c:	stp	x19, x20, [sp, #48]
  474510:	mov	x19, x0
  474514:	mov	x20, x2
  474518:	stp	x21, x22, [sp, #64]
  47451c:	add	x22, sp, #0xd0
  474520:	mov	x21, x1
  474524:	stp	x0, x1, [sp, #16]
  474528:	mov	x0, x22
  47452c:	add	x1, sp, #0x850
  474530:	stp	x2, x3, [sp, #32]
  474534:	mov	x2, x30
  474538:	stp	x23, x24, [sp, #80]
  47453c:	add	x23, sp, #0x490
  474540:	stp	x25, x26, [sp, #96]
  474544:	stp	x27, x28, [sp, #112]
  474548:	stp	d8, d9, [sp, #128]
  47454c:	stp	d10, d11, [sp, #144]
  474550:	stp	d12, d13, [sp, #160]
  474554:	stp	d14, d15, [sp, #176]
  474558:	bl	473c20 <_obstack_memory_used@@Base+0x17830>
  47455c:	mov	x1, x22
  474560:	mov	x2, #0x3c0                 	// #960
  474564:	mov	x0, x23
  474568:	bl	402cd0 <memcpy@plt>
  47456c:	stp	x21, x20, [x19, #16]
  474570:	mov	x0, x19
  474574:	mov	x1, x23
  474578:	add	x2, sp, #0xc8
  47457c:	bl	474008 <_obstack_memory_used@@Base+0x17c18>
  474580:	cmp	w0, #0x7
  474584:	mov	x4, #0x0                   	// #0
  474588:	b.eq	4745c8 <_obstack_memory_used@@Base+0x181d8>  // b.none
  47458c:	ldp	x29, x30, [sp]
  474590:	ldp	x0, x1, [sp, #16]
  474594:	ldp	x2, x3, [sp, #32]
  474598:	ldp	x19, x20, [sp, #48]
  47459c:	ldp	x21, x22, [sp, #64]
  4745a0:	ldp	x23, x24, [sp, #80]
  4745a4:	ldp	x25, x26, [sp, #96]
  4745a8:	ldp	x27, x28, [sp, #112]
  4745ac:	ldp	d8, d9, [sp, #128]
  4745b0:	ldp	d10, d11, [sp, #144]
  4745b4:	ldp	d12, d13, [sp, #160]
  4745b8:	ldp	d14, d15, [sp, #176]
  4745bc:	add	sp, sp, #0x850
  4745c0:	add	sp, sp, x4
  4745c4:	ret
  4745c8:	mov	x1, x23
  4745cc:	mov	x0, x22
  4745d0:	bl	472ff8 <_obstack_memory_used@@Base+0x16c08>
  4745d4:	mov	x4, x0
  4745d8:	ldr	x2, [sp, #1040]
  4745dc:	ldr	x1, [sp, #1960]
  4745e0:	tbz	x2, #61, 4745f4 <_obstack_memory_used@@Base+0x18204>
  4745e4:	mov	x17, x1
  4745e8:	ldr	x16, [sp, #992]
  4745ec:	pacia1716
  4745f0:	mov	x1, x17
  4745f4:	ldr	x0, [sp, #1952]
  4745f8:	bl	474370 <_obstack_memory_used@@Base+0x17f80>
  4745fc:	str	x1, [x29, #8]
  474600:	b	47458c <_obstack_memory_used@@Base+0x1819c>
  474604:	nop
  474608:	sub	sp, sp, #0x850
  47460c:	stp	x29, x30, [sp]
  474610:	mov	x29, sp
  474614:	stp	x19, x20, [sp, #48]
  474618:	mov	x19, x0
  47461c:	add	x20, sp, #0xd0
  474620:	stp	x0, x1, [sp, #16]
  474624:	mov	x0, x20
  474628:	add	x1, sp, #0x850
  47462c:	stp	x2, x3, [sp, #32]
  474630:	mov	x2, x30
  474634:	stp	x21, x22, [sp, #64]
  474638:	add	x21, sp, #0x490
  47463c:	stp	x23, x24, [sp, #80]
  474640:	stp	x25, x26, [sp, #96]
  474644:	stp	x27, x28, [sp, #112]
  474648:	stp	d8, d9, [sp, #128]
  47464c:	stp	d10, d11, [sp, #144]
  474650:	stp	d12, d13, [sp, #160]
  474654:	stp	d14, d15, [sp, #176]
  474658:	bl	473c20 <_obstack_memory_used@@Base+0x17830>
  47465c:	mov	x1, x20
  474660:	mov	x0, x21
  474664:	mov	x2, #0x3c0                 	// #960
  474668:	bl	402cd0 <memcpy@plt>
  47466c:	ldr	x0, [x19, #16]
  474670:	cbnz	x0, 474700 <_obstack_memory_used@@Base+0x18310>
  474674:	mov	x0, x19
  474678:	add	x2, sp, #0xc8
  47467c:	mov	x1, x21
  474680:	bl	473f28 <_obstack_memory_used@@Base+0x17b38>
  474684:	cmp	w0, #0x7
  474688:	b.ne	474714 <_obstack_memory_used@@Base+0x18324>  // b.any
  47468c:	mov	x1, x21
  474690:	mov	x0, x20
  474694:	bl	472ff8 <_obstack_memory_used@@Base+0x16c08>
  474698:	mov	x4, x0
  47469c:	ldr	x2, [sp, #1040]
  4746a0:	ldr	x1, [sp, #1960]
  4746a4:	tbz	x2, #61, 4746b8 <_obstack_memory_used@@Base+0x182c8>
  4746a8:	mov	x17, x1
  4746ac:	ldr	x16, [sp, #992]
  4746b0:	pacia1716
  4746b4:	mov	x1, x17
  4746b8:	ldr	x0, [sp, #1952]
  4746bc:	bl	474370 <_obstack_memory_used@@Base+0x17f80>
  4746c0:	str	x1, [x29, #8]
  4746c4:	ldp	x29, x30, [sp]
  4746c8:	ldp	x0, x1, [sp, #16]
  4746cc:	ldp	x2, x3, [sp, #32]
  4746d0:	ldp	x19, x20, [sp, #48]
  4746d4:	ldp	x21, x22, [sp, #64]
  4746d8:	ldp	x23, x24, [sp, #80]
  4746dc:	ldp	x25, x26, [sp, #96]
  4746e0:	ldp	x27, x28, [sp, #112]
  4746e4:	ldp	d8, d9, [sp, #128]
  4746e8:	ldp	d10, d11, [sp, #144]
  4746ec:	ldp	d12, d13, [sp, #160]
  4746f0:	ldp	d14, d15, [sp, #176]
  4746f4:	add	sp, sp, #0x850
  4746f8:	add	sp, sp, x4
  4746fc:	ret
  474700:	mov	x0, x19
  474704:	add	x2, sp, #0xc8
  474708:	mov	x1, x21
  47470c:	bl	474008 <_obstack_memory_used@@Base+0x17c18>
  474710:	b	474684 <_obstack_memory_used@@Base+0x18294>
  474714:	bl	403180 <abort@plt>
  474718:	sub	sp, sp, #0x850
  47471c:	stp	x29, x30, [sp]
  474720:	mov	x29, sp
  474724:	stp	x0, x1, [sp, #16]
  474728:	ldr	x1, [x0, #16]
  47472c:	stp	x2, x3, [sp, #32]
  474730:	stp	x19, x20, [sp, #48]
  474734:	mov	x19, x0
  474738:	stp	x21, x22, [sp, #64]
  47473c:	stp	x23, x24, [sp, #80]
  474740:	stp	x25, x26, [sp, #96]
  474744:	stp	x27, x28, [sp, #112]
  474748:	stp	d8, d9, [sp, #128]
  47474c:	stp	d10, d11, [sp, #144]
  474750:	stp	d12, d13, [sp, #160]
  474754:	stp	d14, d15, [sp, #176]
  474758:	cbnz	x1, 4747a0 <_obstack_memory_used@@Base+0x183b0>
  47475c:	bl	474378 <_obstack_memory_used@@Base+0x17f88>
  474760:	mov	x4, #0x0                   	// #0
  474764:	ldp	x29, x30, [sp]
  474768:	ldp	x0, x1, [sp, #16]
  47476c:	ldp	x2, x3, [sp, #32]
  474770:	ldp	x19, x20, [sp, #48]
  474774:	ldp	x21, x22, [sp, #64]
  474778:	ldp	x23, x24, [sp, #80]
  47477c:	ldp	x25, x26, [sp, #96]
  474780:	ldp	x27, x28, [sp, #112]
  474784:	ldp	d8, d9, [sp, #128]
  474788:	ldp	d10, d11, [sp, #144]
  47478c:	ldp	d12, d13, [sp, #160]
  474790:	ldp	d14, d15, [sp, #176]
  474794:	add	sp, sp, #0x850
  474798:	add	sp, sp, x4
  47479c:	ret
  4747a0:	add	x20, sp, #0xd0
  4747a4:	mov	x2, x30
  4747a8:	mov	x0, x20
  4747ac:	add	x1, sp, #0x850
  4747b0:	add	x21, sp, #0x490
  4747b4:	bl	473c20 <_obstack_memory_used@@Base+0x17830>
  4747b8:	mov	x1, x20
  4747bc:	mov	x2, #0x3c0                 	// #960
  4747c0:	mov	x0, x21
  4747c4:	bl	402cd0 <memcpy@plt>
  4747c8:	mov	x0, x19
  4747cc:	mov	x1, x21
  4747d0:	add	x2, sp, #0xc8
  4747d4:	bl	474008 <_obstack_memory_used@@Base+0x17c18>
  4747d8:	cmp	w0, #0x7
  4747dc:	b.ne	47481c <_obstack_memory_used@@Base+0x1842c>  // b.any
  4747e0:	mov	x1, x21
  4747e4:	mov	x0, x20
  4747e8:	bl	472ff8 <_obstack_memory_used@@Base+0x16c08>
  4747ec:	mov	x4, x0
  4747f0:	ldr	x2, [sp, #1040]
  4747f4:	ldr	x1, [sp, #1960]
  4747f8:	tbz	x2, #61, 47480c <_obstack_memory_used@@Base+0x1841c>
  4747fc:	mov	x17, x1
  474800:	ldr	x16, [sp, #992]
  474804:	pacia1716
  474808:	mov	x1, x17
  47480c:	ldr	x0, [sp, #1952]
  474810:	bl	474370 <_obstack_memory_used@@Base+0x17f80>
  474814:	str	x1, [x29, #8]
  474818:	b	474764 <_obstack_memory_used@@Base+0x18374>
  47481c:	bl	403180 <abort@plt>
  474820:	ldr	x2, [x0, #8]
  474824:	mov	x1, x0
  474828:	cbz	x2, 474838 <_obstack_memory_used@@Base+0x18448>
  47482c:	mov	x16, x2
  474830:	mov	w0, #0x1                   	// #1
  474834:	br	x16
  474838:	ret
  47483c:	nop
  474840:	sub	sp, sp, #0xae0
  474844:	mov	x2, x30
  474848:	stp	x29, x30, [sp]
  47484c:	mov	x29, sp
  474850:	stp	x19, x20, [sp, #16]
  474854:	add	x20, sp, #0xa0
  474858:	stp	x21, x22, [sp, #32]
  47485c:	mov	x22, x1
  474860:	add	x21, sp, #0x460
  474864:	add	x1, sp, #0xae0
  474868:	stp	x23, x24, [sp, #48]
  47486c:	mov	x23, x0
  474870:	mov	x0, x20
  474874:	stp	x25, x26, [sp, #64]
  474878:	stp	x27, x28, [sp, #80]
  47487c:	stp	d8, d9, [sp, #96]
  474880:	stp	d10, d11, [sp, #112]
  474884:	stp	d12, d13, [sp, #128]
  474888:	stp	d14, d15, [sp, #144]
  47488c:	bl	473c20 <_obstack_memory_used@@Base+0x17830>
  474890:	b	4748b0 <_obstack_memory_used@@Base+0x184c0>
  474894:	blr	x23
  474898:	cbnz	w0, 4748d4 <_obstack_memory_used@@Base+0x184e4>
  47489c:	cmp	w19, #0x5
  4748a0:	b.eq	4748d8 <_obstack_memory_used@@Base+0x184e8>  // b.none
  4748a4:	mov	x1, x21
  4748a8:	mov	x0, x20
  4748ac:	bl	473e70 <_obstack_memory_used@@Base+0x17a80>
  4748b0:	mov	x1, x21
  4748b4:	mov	x0, x20
  4748b8:	bl	472aa0 <_obstack_memory_used@@Base+0x166b0>
  4748bc:	mov	w19, w0
  4748c0:	cmp	w0, #0x0
  4748c4:	mov	x1, x22
  4748c8:	mov	x0, x20
  4748cc:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  4748d0:	b.eq	474894 <_obstack_memory_used@@Base+0x184a4>  // b.none
  4748d4:	mov	w19, #0x3                   	// #3
  4748d8:	mov	w0, w19
  4748dc:	ldp	x29, x30, [sp]
  4748e0:	ldp	x19, x20, [sp, #16]
  4748e4:	ldp	x21, x22, [sp, #32]
  4748e8:	ldp	x23, x24, [sp, #48]
  4748ec:	ldp	x25, x26, [sp, #64]
  4748f0:	ldp	x27, x28, [sp, #80]
  4748f4:	ldp	d8, d9, [sp, #96]
  4748f8:	ldp	d10, d11, [sp, #112]
  4748fc:	ldp	d12, d13, [sp, #128]
  474900:	ldp	d14, d15, [sp, #144]
  474904:	add	sp, sp, #0xae0
  474908:	ret
  47490c:	nop
  474910:	ldr	x3, [x1, #8]
  474914:	mov	w4, #0x1                   	// #1
  474918:	ldr	x1, [x2, #8]
  47491c:	cmp	x3, x1
  474920:	csetm	w0, cc  // cc = lo, ul, last
  474924:	csel	w0, w0, w4, ls  // ls = plast
  474928:	ret
  47492c:	nop
  474930:	stp	x29, x30, [sp, #-112]!
  474934:	mov	x29, sp
  474938:	stp	x21, x22, [sp, #32]
  47493c:	lsl	w21, w3, #1
  474940:	stp	x25, x26, [sp, #64]
  474944:	add	w25, w21, #0x1
  474948:	cmp	w25, w4
  47494c:	b.ge	474a24 <_obstack_memory_used@@Base+0x18634>  // b.tcont
  474950:	mov	w22, w3
  474954:	stp	x19, x20, [sp, #16]
  474958:	mov	x20, x2
  47495c:	stp	x23, x24, [sp, #48]
  474960:	mov	w23, w4
  474964:	mov	x24, x1
  474968:	stp	x27, x28, [sp, #80]
  47496c:	mov	x27, x0
  474970:	b	4749c8 <_obstack_memory_used@@Base+0x185d8>
  474974:	ldr	x2, [x20, x26]
  474978:	blr	x24
  47497c:	ldr	x3, [sp, #104]
  474980:	tbnz	w0, #31, 474a34 <_obstack_memory_used@@Base+0x18644>
  474984:	ldr	x1, [x20, x28, lsl #3]
  474988:	mov	w21, w25
  47498c:	sxtw	x26, w22
  474990:	mov	x2, x1
  474994:	mov	w22, w21
  474998:	mov	x0, x27
  47499c:	lsl	w21, w21, #1
  4749a0:	ldr	x1, [x20, x26, lsl #3]
  4749a4:	blr	x24
  4749a8:	tbz	w0, #31, 474a18 <_obstack_memory_used@@Base+0x18628>
  4749ac:	ldr	x1, [x19]
  4749b0:	add	w25, w21, #0x1
  4749b4:	ldr	x0, [x20, x26, lsl #3]
  4749b8:	str	x1, [x20, x26, lsl #3]
  4749bc:	str	x0, [x19]
  4749c0:	cmp	w23, w25
  4749c4:	b.le	474a18 <_obstack_memory_used@@Base+0x18628>
  4749c8:	sbfiz	x19, x25, #3, #32
  4749cc:	sxtw	x28, w25
  4749d0:	add	x26, x19, #0x8
  4749d4:	add	w21, w25, #0x1
  4749d8:	add	x3, x20, x26
  4749dc:	str	x3, [sp, #104]
  4749e0:	cmp	w21, w23
  4749e4:	add	x19, x20, x19
  4749e8:	mov	x0, x27
  4749ec:	ldr	x1, [x20, x28, lsl #3]
  4749f0:	b.lt	474974 <_obstack_memory_used@@Base+0x18584>  // b.tstop
  4749f4:	sxtw	x26, w22
  4749f8:	mov	x2, x1
  4749fc:	mov	w21, w25
  474a00:	mov	x0, x27
  474a04:	mov	w22, w21
  474a08:	ldr	x1, [x20, x26, lsl #3]
  474a0c:	lsl	w21, w21, #1
  474a10:	blr	x24
  474a14:	tbnz	w0, #31, 4749ac <_obstack_memory_used@@Base+0x185bc>
  474a18:	ldp	x19, x20, [sp, #16]
  474a1c:	ldp	x23, x24, [sp, #48]
  474a20:	ldp	x27, x28, [sp, #80]
  474a24:	ldp	x21, x22, [sp, #32]
  474a28:	ldp	x25, x26, [sp, #64]
  474a2c:	ldp	x29, x30, [sp], #112
  474a30:	ret
  474a34:	mov	x19, x3
  474a38:	ldr	x1, [x20, x26]
  474a3c:	b	47498c <_obstack_memory_used@@Base+0x1859c>
  474a40:	stp	x29, x30, [sp, #-80]!
  474a44:	mov	x29, sp
  474a48:	stp	x19, x20, [sp, #16]
  474a4c:	ldr	x19, [x2, #8]
  474a50:	stp	x21, x22, [sp, #32]
  474a54:	mov	x22, x2
  474a58:	stp	x23, x24, [sp, #48]
  474a5c:	add	x21, x2, #0x10
  474a60:	lsr	x20, x19, #1
  474a64:	mov	x23, x0
  474a68:	mov	x24, x1
  474a6c:	subs	w20, w20, #0x1
  474a70:	b.mi	474aa8 <_obstack_memory_used@@Base+0x186b8>  // b.first
  474a74:	str	x25, [sp, #64]
  474a78:	mov	w25, w19
  474a7c:	nop
  474a80:	mov	w3, w20
  474a84:	mov	w4, w25
  474a88:	mov	x2, x21
  474a8c:	sub	w20, w20, #0x1
  474a90:	mov	x1, x24
  474a94:	mov	x0, x23
  474a98:	bl	474930 <_obstack_memory_used@@Base+0x18540>
  474a9c:	cmn	w20, #0x1
  474aa0:	b.ne	474a80 <_obstack_memory_used@@Base+0x18690>  // b.any
  474aa4:	ldr	x25, [sp, #64]
  474aa8:	sub	w19, w19, #0x1
  474aac:	cmp	w19, #0x0
  474ab0:	sxtw	x19, w19
  474ab4:	b.le	474aec <_obstack_memory_used@@Base+0x186fc>
  474ab8:	ldr	x1, [x21, x19, lsl #3]
  474abc:	mov	w4, w19
  474ac0:	ldr	x0, [x22, #16]
  474ac4:	str	x1, [x22, #16]
  474ac8:	str	x0, [x21, x19, lsl #3]
  474acc:	mov	x2, x21
  474ad0:	sub	x19, x19, #0x1
  474ad4:	mov	x1, x24
  474ad8:	mov	x0, x23
  474adc:	mov	w3, #0x0                   	// #0
  474ae0:	bl	474930 <_obstack_memory_used@@Base+0x18540>
  474ae4:	cmp	w19, #0x0
  474ae8:	b.gt	474ab8 <_obstack_memory_used@@Base+0x186c8>
  474aec:	ldp	x19, x20, [sp, #16]
  474af0:	ldp	x21, x22, [sp, #32]
  474af4:	ldp	x23, x24, [sp, #48]
  474af8:	ldp	x29, x30, [sp], #80
  474afc:	ret
  474b00:	and	w0, w0, #0xff
  474b04:	cmp	w0, #0xff
  474b08:	b.eq	474b58 <_obstack_memory_used@@Base+0x18768>  // b.none
  474b0c:	and	w1, w0, #0x7
  474b10:	cmp	w1, #0x2
  474b14:	b.eq	474b50 <_obstack_memory_used@@Base+0x18760>  // b.none
  474b18:	b.ls	474b44 <_obstack_memory_used@@Base+0x18754>  // b.plast
  474b1c:	cmp	w1, #0x3
  474b20:	mov	w0, #0x4                   	// #4
  474b24:	b.ne	474b2c <_obstack_memory_used@@Base+0x1873c>  // b.any
  474b28:	ret
  474b2c:	cmp	w1, w0
  474b30:	mov	w0, #0x8                   	// #8
  474b34:	b.eq	474b28 <_obstack_memory_used@@Base+0x18738>  // b.none
  474b38:	stp	x29, x30, [sp, #-16]!
  474b3c:	mov	x29, sp
  474b40:	bl	403180 <abort@plt>
  474b44:	mov	w0, #0x8                   	// #8
  474b48:	cbnz	w1, 474b38 <_obstack_memory_used@@Base+0x18748>
  474b4c:	ret
  474b50:	mov	w0, w1
  474b54:	ret
  474b58:	mov	w0, #0x0                   	// #0
  474b5c:	ret
  474b60:	and	w5, w0, #0xff
  474b64:	cmp	w5, #0x50
  474b68:	b.eq	474c80 <_obstack_memory_used@@Base+0x18890>  // b.none
  474b6c:	and	w4, w5, #0xf
  474b70:	cmp	w4, #0x4
  474b74:	b.eq	474b90 <_obstack_memory_used@@Base+0x187a0>  // b.none
  474b78:	b.ls	474ba4 <_obstack_memory_used@@Base+0x187b4>  // b.plast
  474b7c:	cmp	w4, #0xb
  474b80:	b.eq	474ca4 <_obstack_memory_used@@Base+0x188b4>  // b.none
  474b84:	b.ls	474c00 <_obstack_memory_used@@Base+0x18810>  // b.plast
  474b88:	cmp	w4, #0xc
  474b8c:	b.ne	474cb4 <_obstack_memory_used@@Base+0x188c4>  // b.any
  474b90:	mov	x0, x2
  474b94:	ldr	x4, [x0], #8
  474b98:	cbnz	x4, 474c60 <_obstack_memory_used@@Base+0x18870>
  474b9c:	str	x4, [x3]
  474ba0:	ret
  474ba4:	cmp	w4, #0x2
  474ba8:	b.eq	474c94 <_obstack_memory_used@@Base+0x188a4>  // b.none
  474bac:	b.ls	474bc8 <_obstack_memory_used@@Base+0x187d8>  // b.plast
  474bb0:	cmp	w4, #0x3
  474bb4:	b.ne	474cb4 <_obstack_memory_used@@Base+0x188c4>  // b.any
  474bb8:	mov	x0, x2
  474bbc:	ldr	w4, [x0], #4
  474bc0:	cbz	x4, 474b9c <_obstack_memory_used@@Base+0x187ac>
  474bc4:	b	474c60 <_obstack_memory_used@@Base+0x18870>
  474bc8:	cbz	w4, 474b90 <_obstack_memory_used@@Base+0x187a0>
  474bcc:	cmp	w4, #0x1
  474bd0:	b.ne	474cb4 <_obstack_memory_used@@Base+0x188c4>  // b.any
  474bd4:	mov	x0, x2
  474bd8:	mov	x4, #0x0                   	// #0
  474bdc:	mov	w7, #0x0                   	// #0
  474be0:	ldrb	w8, [x0], #1
  474be4:	and	x6, x8, #0x7f
  474be8:	lsl	x6, x6, x7
  474bec:	add	w7, w7, #0x7
  474bf0:	orr	x4, x4, x6
  474bf4:	tbnz	w8, #7, 474be0 <_obstack_memory_used@@Base+0x187f0>
  474bf8:	cbz	x4, 474b9c <_obstack_memory_used@@Base+0x187ac>
  474bfc:	b	474c60 <_obstack_memory_used@@Base+0x18870>
  474c00:	cmp	w4, #0x9
  474c04:	b.eq	474c20 <_obstack_memory_used@@Base+0x18830>  // b.none
  474c08:	cmp	w4, #0xa
  474c0c:	b.ne	474cb4 <_obstack_memory_used@@Base+0x188c4>  // b.any
  474c10:	mov	x0, x2
  474c14:	ldrsh	x4, [x0], #2
  474c18:	cbz	x4, 474b9c <_obstack_memory_used@@Base+0x187ac>
  474c1c:	b	474c60 <_obstack_memory_used@@Base+0x18870>
  474c20:	mov	x0, x2
  474c24:	mov	x4, #0x0                   	// #0
  474c28:	mov	w7, #0x0                   	// #0
  474c2c:	ldrb	w8, [x0], #1
  474c30:	and	x6, x8, #0x7f
  474c34:	lsl	x6, x6, x7
  474c38:	add	w7, w7, #0x7
  474c3c:	orr	x4, x4, x6
  474c40:	tbnz	w8, #7, 474c2c <_obstack_memory_used@@Base+0x1883c>
  474c44:	cmp	w7, #0x3f
  474c48:	b.hi	474b98 <_obstack_memory_used@@Base+0x187a8>  // b.pmore
  474c4c:	tbz	w8, #6, 474b98 <_obstack_memory_used@@Base+0x187a8>
  474c50:	mov	x6, #0xffffffffffffffff    	// #-1
  474c54:	lsl	x7, x6, x7
  474c58:	orr	x4, x4, x7
  474c5c:	nop
  474c60:	and	w6, w5, #0x70
  474c64:	cmp	w6, #0x10
  474c68:	csel	x1, x2, x1, eq  // eq = none
  474c6c:	add	x4, x4, x1
  474c70:	tbz	w5, #7, 474b9c <_obstack_memory_used@@Base+0x187ac>
  474c74:	ldr	x4, [x4]
  474c78:	str	x4, [x3]
  474c7c:	ret
  474c80:	add	x0, x2, #0x7
  474c84:	and	x0, x0, #0xfffffffffffffff8
  474c88:	ldr	x4, [x0], #8
  474c8c:	str	x4, [x3]
  474c90:	ret
  474c94:	mov	x0, x2
  474c98:	ldrh	w4, [x0], #2
  474c9c:	cbz	x4, 474b9c <_obstack_memory_used@@Base+0x187ac>
  474ca0:	b	474c60 <_obstack_memory_used@@Base+0x18870>
  474ca4:	mov	x0, x2
  474ca8:	ldrsw	x4, [x0], #4
  474cac:	cbz	x4, 474b9c <_obstack_memory_used@@Base+0x187ac>
  474cb0:	b	474c60 <_obstack_memory_used@@Base+0x18870>
  474cb4:	stp	x29, x30, [sp, #-16]!
  474cb8:	mov	x29, sp
  474cbc:	bl	403180 <abort@plt>
  474cc0:	stp	x29, x30, [sp, #-48]!
  474cc4:	mov	x29, sp
  474cc8:	stp	x19, x20, [sp, #16]
  474ccc:	mov	x20, x0
  474cd0:	add	x19, x0, #0x9
  474cd4:	mov	x0, x19
  474cd8:	bl	402d50 <strlen@plt>
  474cdc:	ldrb	w3, [x20, #8]
  474ce0:	add	x0, x0, #0x1
  474ce4:	add	x2, x19, x0
  474ce8:	cmp	w3, #0x3
  474cec:	b.hi	474db8 <_obstack_memory_used@@Base+0x189c8>  // b.pmore
  474cf0:	ldrb	w0, [x20, #9]
  474cf4:	cmp	w0, #0x7a
  474cf8:	b.eq	474d0c <_obstack_memory_used@@Base+0x1891c>  // b.none
  474cfc:	mov	w0, #0x0                   	// #0
  474d00:	ldp	x19, x20, [sp, #16]
  474d04:	ldp	x29, x30, [sp], #48
  474d08:	ret
  474d0c:	ldrsb	w1, [x2], #1
  474d10:	tbnz	w1, #31, 474d0c <_obstack_memory_used@@Base+0x1891c>
  474d14:	nop
  474d18:	mov	x0, x2
  474d1c:	ldrsb	w1, [x2], #1
  474d20:	tbnz	w1, #31, 474d18 <_obstack_memory_used@@Base+0x18928>
  474d24:	cmp	w3, #0x1
  474d28:	b.eq	474db0 <_obstack_memory_used@@Base+0x189c0>  // b.none
  474d2c:	nop
  474d30:	ldrsb	w0, [x2], #1
  474d34:	tbnz	w0, #31, 474d30 <_obstack_memory_used@@Base+0x18940>
  474d38:	add	x19, x20, #0xa
  474d3c:	nop
  474d40:	ldrsb	w1, [x2], #1
  474d44:	tbnz	w1, #31, 474d40 <_obstack_memory_used@@Base+0x18950>
  474d48:	ldrb	w0, [x20, #10]
  474d4c:	add	x20, sp, #0x28
  474d50:	cmp	w0, #0x52
  474d54:	b.ne	474d74 <_obstack_memory_used@@Base+0x18984>  // b.any
  474d58:	b	474da0 <_obstack_memory_used@@Base+0x189b0>
  474d5c:	add	x2, x2, #0x1
  474d60:	cmp	w0, #0x4c
  474d64:	b.ne	474cfc <_obstack_memory_used@@Base+0x1890c>  // b.any
  474d68:	ldrb	w0, [x19, #1]!
  474d6c:	cmp	w0, #0x52
  474d70:	b.eq	474da0 <_obstack_memory_used@@Base+0x189b0>  // b.none
  474d74:	cmp	w0, #0x50
  474d78:	b.ne	474d5c <_obstack_memory_used@@Base+0x1896c>  // b.any
  474d7c:	ldrb	w0, [x2], #1
  474d80:	mov	x3, x20
  474d84:	mov	x1, #0x0                   	// #0
  474d88:	and	w0, w0, #0x7f
  474d8c:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  474d90:	mov	x2, x0
  474d94:	ldrb	w0, [x19, #1]!
  474d98:	cmp	w0, #0x52
  474d9c:	b.ne	474d74 <_obstack_memory_used@@Base+0x18984>  // b.any
  474da0:	ldrb	w0, [x2]
  474da4:	ldp	x19, x20, [sp, #16]
  474da8:	ldp	x29, x30, [sp], #48
  474dac:	ret
  474db0:	add	x2, x0, #0x2
  474db4:	b	474d38 <_obstack_memory_used@@Base+0x18948>
  474db8:	ldrb	w1, [x19, x0]
  474dbc:	mov	w0, #0xff                  	// #255
  474dc0:	cmp	w1, #0x8
  474dc4:	b.ne	474d00 <_obstack_memory_used@@Base+0x18910>  // b.any
  474dc8:	ldrb	w1, [x2, #1]
  474dcc:	cbnz	w1, 474d00 <_obstack_memory_used@@Base+0x18910>
  474dd0:	add	x2, x2, #0x2
  474dd4:	b	474cf0 <_obstack_memory_used@@Base+0x18900>
  474dd8:	and	w0, w0, #0xff
  474ddc:	cmp	w0, #0xff
  474de0:	b.eq	474e18 <_obstack_memory_used@@Base+0x18a28>  // b.none
  474de4:	and	w3, w0, #0x70
  474de8:	cmp	w3, #0x20
  474dec:	b.eq	474e30 <_obstack_memory_used@@Base+0x18a40>  // b.none
  474df0:	b.ls	474e04 <_obstack_memory_used@@Base+0x18a14>  // b.plast
  474df4:	cmp	w3, #0x30
  474df8:	b.ne	474e20 <_obstack_memory_used@@Base+0x18a30>  // b.any
  474dfc:	ldr	x0, [x2]
  474e00:	ret
  474e04:	tst	w0, #0x60
  474e08:	b.eq	474e18 <_obstack_memory_used@@Base+0x18a28>  // b.none
  474e0c:	stp	x29, x30, [sp, #-16]!
  474e10:	mov	x29, sp
  474e14:	bl	403180 <abort@plt>
  474e18:	mov	x0, #0x0                   	// #0
  474e1c:	ret
  474e20:	cmp	w3, #0x50
  474e24:	mov	x0, #0x0                   	// #0
  474e28:	b.ne	474e0c <_obstack_memory_used@@Base+0x18a1c>  // b.any
  474e2c:	ret
  474e30:	ldr	x0, [x1]
  474e34:	ret
  474e38:	stp	x29, x30, [sp, #-64]!
  474e3c:	mov	x29, sp
  474e40:	stp	x21, x22, [sp, #32]
  474e44:	mov	x22, x2
  474e48:	ldrh	w21, [x0, #32]
  474e4c:	add	x2, x0, #0x10
  474e50:	stp	x19, x20, [sp, #16]
  474e54:	mov	x19, x0
  474e58:	ubfx	x21, x21, #3, #8
  474e5c:	mov	x20, x1
  474e60:	add	x1, x0, #0x8
  474e64:	mov	w0, w21
  474e68:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  474e6c:	add	x2, x20, #0x8
  474e70:	mov	x20, x0
  474e74:	mov	x1, x20
  474e78:	add	x3, sp, #0x30
  474e7c:	mov	w0, w21
  474e80:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  474e84:	ldrh	w0, [x19, #32]
  474e88:	add	x2, x22, #0x8
  474e8c:	mov	x1, x20
  474e90:	add	x3, sp, #0x38
  474e94:	ubfx	x0, x0, #3, #8
  474e98:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  474e9c:	ldp	x2, x1, [sp, #48]
  474ea0:	mov	w3, #0x1                   	// #1
  474ea4:	ldp	x19, x20, [sp, #16]
  474ea8:	ldp	x21, x22, [sp, #32]
  474eac:	cmp	x2, x1
  474eb0:	csetm	w0, cc  // cc = lo, ul, last
  474eb4:	csel	w0, w0, w3, ls  // ls = plast
  474eb8:	ldp	x29, x30, [sp], #64
  474ebc:	ret
  474ec0:	stp	x29, x30, [sp, #-128]!
  474ec4:	mov	x29, sp
  474ec8:	stp	x21, x22, [sp, #32]
  474ecc:	add	x22, x0, #0x8
  474ed0:	stp	x23, x24, [sp, #48]
  474ed4:	add	x23, x0, #0x10
  474ed8:	stp	x25, x26, [sp, #64]
  474edc:	mov	x26, x0
  474ee0:	ldrh	w0, [x0, #32]
  474ee4:	stp	x19, x20, [sp, #16]
  474ee8:	mov	x19, x1
  474eec:	mov	x20, x2
  474ef0:	ubfx	x24, x0, #3, #8
  474ef4:	mov	x1, x22
  474ef8:	mov	x2, x23
  474efc:	mov	x0, x24
  474f00:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  474f04:	ldr	w1, [x19]
  474f08:	cbz	w1, 474f9c <_obstack_memory_used@@Base+0x18bac>
  474f0c:	stp	x27, x28, [sp, #80]
  474f10:	add	x27, sp, #0x70
  474f14:	mov	x25, x0
  474f18:	mov	x21, #0x0                   	// #0
  474f1c:	add	x0, sp, #0x78
  474f20:	str	x0, [sp, #104]
  474f24:	nop
  474f28:	ldr	w1, [x19, #4]
  474f2c:	cbz	w1, 474f84 <_obstack_memory_used@@Base+0x18b94>
  474f30:	ldrb	w0, [x26, #32]
  474f34:	tbz	w0, #2, 474f68 <_obstack_memory_used@@Base+0x18b78>
  474f38:	add	x28, x19, #0x4
  474f3c:	sub	x28, x28, w1, sxtw
  474f40:	cmp	x28, x21
  474f44:	b.eq	474f68 <_obstack_memory_used@@Base+0x18b78>  // b.none
  474f48:	mov	x0, x28
  474f4c:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  474f50:	mov	x2, x23
  474f54:	mov	w24, w0
  474f58:	mov	x1, x22
  474f5c:	mov	x21, x28
  474f60:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  474f64:	mov	x25, x0
  474f68:	cbnz	w24, 474fb8 <_obstack_memory_used@@Base+0x18bc8>
  474f6c:	ldp	x1, x0, [x19, #8]
  474f70:	stp	x1, x0, [sp, #112]
  474f74:	cbz	x1, 474f84 <_obstack_memory_used@@Base+0x18b94>
  474f78:	sub	x1, x20, x1
  474f7c:	cmp	x1, x0
  474f80:	b.cc	475020 <_obstack_memory_used@@Base+0x18c30>  // b.lo, b.ul, b.last
  474f84:	ldr	w1, [x19]
  474f88:	add	x1, x1, #0x4
  474f8c:	add	x19, x19, x1
  474f90:	ldr	w1, [x19]
  474f94:	cbnz	w1, 474f28 <_obstack_memory_used@@Base+0x18b38>
  474f98:	ldp	x27, x28, [sp, #80]
  474f9c:	mov	x0, #0x0                   	// #0
  474fa0:	ldp	x19, x20, [sp, #16]
  474fa4:	ldp	x21, x22, [sp, #32]
  474fa8:	ldp	x23, x24, [sp, #48]
  474fac:	ldp	x25, x26, [sp, #64]
  474fb0:	ldp	x29, x30, [sp], #128
  474fb4:	ret
  474fb8:	and	w28, w24, #0xff
  474fbc:	mov	x3, x27
  474fc0:	add	x2, x19, #0x8
  474fc4:	mov	x1, x25
  474fc8:	mov	w0, w28
  474fcc:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  474fd0:	ldr	x3, [sp, #104]
  474fd4:	mov	x2, x0
  474fd8:	mov	x1, #0x0                   	// #0
  474fdc:	and	w0, w28, #0xf
  474fe0:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  474fe4:	mov	w0, w28
  474fe8:	bl	474b00 <_obstack_memory_used@@Base+0x18710>
  474fec:	lsl	w2, w0, #3
  474ff0:	cmp	w0, #0x8
  474ff4:	mov	x0, #0x1                   	// #1
  474ff8:	ldr	x1, [sp, #112]
  474ffc:	lsl	x2, x0, x2
  475000:	sub	x2, x2, #0x1
  475004:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  475008:	tst	x1, x2
  47500c:	b.eq	474f84 <_obstack_memory_used@@Base+0x18b94>  // b.none
  475010:	ldr	x0, [sp, #120]
  475014:	sub	x1, x20, x1
  475018:	cmp	x1, x0
  47501c:	b.cs	474f84 <_obstack_memory_used@@Base+0x18b94>  // b.hs, b.nlast
  475020:	mov	x0, x19
  475024:	ldp	x19, x20, [sp, #16]
  475028:	ldp	x21, x22, [sp, #32]
  47502c:	ldp	x23, x24, [sp, #48]
  475030:	ldp	x25, x26, [sp, #64]
  475034:	ldp	x27, x28, [sp, #80]
  475038:	ldp	x29, x30, [sp], #128
  47503c:	ret
  475040:	stp	x29, x30, [sp, #-80]!
  475044:	add	x3, x1, #0x4
  475048:	mov	x29, sp
  47504c:	stp	x21, x22, [sp, #32]
  475050:	mov	x21, x1
  475054:	ldrsw	x1, [x1, #4]
  475058:	stp	x19, x20, [sp, #16]
  47505c:	mov	x20, x2
  475060:	add	x19, x0, #0x10
  475064:	str	x23, [sp, #48]
  475068:	add	x23, x0, #0x8
  47506c:	sub	x0, x3, x1
  475070:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  475074:	and	w22, w0, #0xff
  475078:	mov	x2, x19
  47507c:	mov	x1, x23
  475080:	mov	w0, w22
  475084:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  475088:	mov	x1, x0
  47508c:	add	x3, sp, #0x40
  475090:	add	x2, x21, #0x8
  475094:	mov	w0, w22
  475098:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  47509c:	add	x1, x20, #0x4
  4750a0:	ldrsw	x0, [x20, #4]
  4750a4:	sub	x0, x1, x0
  4750a8:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  4750ac:	mov	x2, x19
  4750b0:	and	w19, w0, #0xff
  4750b4:	mov	x1, x23
  4750b8:	mov	w0, w19
  4750bc:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  4750c0:	mov	x1, x0
  4750c4:	add	x2, x20, #0x8
  4750c8:	add	x3, sp, #0x48
  4750cc:	mov	w0, w19
  4750d0:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  4750d4:	ldp	x2, x1, [sp, #64]
  4750d8:	mov	w3, #0x1                   	// #1
  4750dc:	ldp	x19, x20, [sp, #16]
  4750e0:	ldp	x21, x22, [sp, #32]
  4750e4:	cmp	x2, x1
  4750e8:	csetm	w0, cc  // cc = lo, ul, last
  4750ec:	csel	w0, w0, w3, ls  // ls = plast
  4750f0:	ldr	x23, [sp, #48]
  4750f4:	ldp	x29, x30, [sp], #80
  4750f8:	ret
  4750fc:	nop
  475100:	stp	x29, x30, [sp, #-112]!
  475104:	mov	x29, sp
  475108:	stp	x21, x22, [sp, #32]
  47510c:	mov	x21, x0
  475110:	ldr	w0, [x1]
  475114:	cbz	w0, 475278 <_obstack_memory_used@@Base+0x18e88>
  475118:	stp	x19, x20, [sp, #16]
  47511c:	mov	x19, x1
  475120:	mov	w20, #0x0                   	// #0
  475124:	stp	x25, x26, [sp, #64]
  475128:	add	x25, sp, #0x68
  47512c:	add	x26, x21, #0x8
  475130:	stp	x27, x28, [sp, #80]
  475134:	add	x27, x21, #0x10
  475138:	mov	x22, #0x0                   	// #0
  47513c:	mov	x4, #0x0                   	// #0
  475140:	stp	x23, x24, [sp, #48]
  475144:	mov	x23, #0x0                   	// #0
  475148:	ldr	w2, [x19, #4]
  47514c:	cbz	w2, 475214 <_obstack_memory_used@@Base+0x18e24>
  475150:	add	x28, x19, #0x4
  475154:	and	w24, w20, #0xff
  475158:	sub	x28, x28, w2, sxtw
  47515c:	cmp	x28, x4
  475160:	b.eq	4751b8 <_obstack_memory_used@@Base+0x18dc8>  // b.none
  475164:	mov	x0, x28
  475168:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  47516c:	mov	w20, w0
  475170:	cmp	w0, #0xff
  475174:	b.eq	475254 <_obstack_memory_used@@Base+0x18e64>  // b.none
  475178:	and	w24, w0, #0xff
  47517c:	mov	x2, x27
  475180:	mov	w0, w24
  475184:	mov	x1, x26
  475188:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  47518c:	mov	x23, x0
  475190:	ldrh	w2, [x21, #32]
  475194:	and	w0, w2, #0x7f8
  475198:	cmp	w0, #0x7f8
  47519c:	b.eq	475248 <_obstack_memory_used@@Base+0x18e58>  // b.none
  4751a0:	ubfx	x2, x2, #3, #8
  4751a4:	cmp	w2, w20
  4751a8:	b.eq	4751b8 <_obstack_memory_used@@Base+0x18dc8>  // b.none
  4751ac:	ldrb	w0, [x21, #32]
  4751b0:	orr	w0, w0, #0x4
  4751b4:	strb	w0, [x21, #32]
  4751b8:	mov	x3, x25
  4751bc:	add	x2, x19, #0x8
  4751c0:	mov	x1, x23
  4751c4:	mov	w0, w24
  4751c8:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  4751cc:	mov	w0, w24
  4751d0:	bl	474b00 <_obstack_memory_used@@Base+0x18710>
  4751d4:	lsl	w2, w0, #3
  4751d8:	cmp	w0, #0x8
  4751dc:	mov	x0, #0x1                   	// #1
  4751e0:	ldr	x3, [sp, #104]
  4751e4:	lsl	x2, x0, x2
  4751e8:	sub	x2, x2, #0x1
  4751ec:	mov	x4, x28
  4751f0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  4751f4:	tst	x3, x2
  4751f8:	b.eq	475214 <_obstack_memory_used@@Base+0x18e24>  // b.none
  4751fc:	ldr	x0, [x21]
  475200:	add	x22, x22, #0x1
  475204:	cmp	x0, x3
  475208:	b.ls	475210 <_obstack_memory_used@@Base+0x18e20>  // b.plast
  47520c:	str	x3, [x21]
  475210:	mov	x4, x28
  475214:	ldr	w2, [x19]
  475218:	add	x2, x2, #0x4
  47521c:	add	x19, x19, x2
  475220:	ldr	w0, [x19]
  475224:	cbnz	w0, 475148 <_obstack_memory_used@@Base+0x18d58>
  475228:	ldp	x19, x20, [sp, #16]
  47522c:	ldp	x23, x24, [sp, #48]
  475230:	ldp	x25, x26, [sp, #64]
  475234:	ldp	x27, x28, [sp, #80]
  475238:	mov	x0, x22
  47523c:	ldp	x21, x22, [sp, #32]
  475240:	ldp	x29, x30, [sp], #112
  475244:	ret
  475248:	bfi	w2, w24, #3, #8
  47524c:	strh	w2, [x21, #32]
  475250:	b	4751b8 <_obstack_memory_used@@Base+0x18dc8>
  475254:	mov	x22, #0xffffffffffffffff    	// #-1
  475258:	mov	x0, x22
  47525c:	ldp	x19, x20, [sp, #16]
  475260:	ldp	x21, x22, [sp, #32]
  475264:	ldp	x23, x24, [sp, #48]
  475268:	ldp	x25, x26, [sp, #64]
  47526c:	ldp	x27, x28, [sp, #80]
  475270:	ldp	x29, x30, [sp], #112
  475274:	ret
  475278:	mov	x22, #0x0                   	// #0
  47527c:	b	475238 <_obstack_memory_used@@Base+0x18e48>
  475280:	stp	x29, x30, [sp, #-112]!
  475284:	mov	x29, sp
  475288:	stp	x21, x22, [sp, #32]
  47528c:	add	x21, x0, #0x8
  475290:	add	x22, x0, #0x10
  475294:	stp	x27, x28, [sp, #80]
  475298:	mov	x28, x0
  47529c:	ldrh	w0, [x0, #32]
  4752a0:	stp	x19, x20, [sp, #16]
  4752a4:	mov	x19, x2
  4752a8:	mov	x20, x1
  4752ac:	stp	x25, x26, [sp, #64]
  4752b0:	ubfx	x26, x0, #3, #8
  4752b4:	mov	x2, x22
  4752b8:	mov	x1, x21
  4752bc:	mov	x0, x26
  4752c0:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  4752c4:	ldr	w2, [x19]
  4752c8:	cbz	w2, 475360 <_obstack_memory_used@@Base+0x18f70>
  4752cc:	add	x25, sp, #0x68
  4752d0:	stp	x23, x24, [sp, #48]
  4752d4:	mov	x24, x0
  4752d8:	mov	x23, #0x0                   	// #0
  4752dc:	nop
  4752e0:	ldr	w2, [x19, #4]
  4752e4:	cbz	w2, 475348 <_obstack_memory_used@@Base+0x18f58>
  4752e8:	ldrb	w0, [x28, #32]
  4752ec:	tbz	w0, #2, 475320 <_obstack_memory_used@@Base+0x18f30>
  4752f0:	add	x27, x19, #0x4
  4752f4:	sub	x27, x27, w2, sxtw
  4752f8:	cmp	x27, x23
  4752fc:	b.eq	475320 <_obstack_memory_used@@Base+0x18f30>  // b.none
  475300:	mov	x0, x27
  475304:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  475308:	mov	x2, x22
  47530c:	mov	w26, w0
  475310:	mov	x1, x21
  475314:	mov	x23, x27
  475318:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  47531c:	mov	x24, x0
  475320:	cbnz	w26, 475378 <_obstack_memory_used@@Base+0x18f88>
  475324:	ldr	x0, [x19, #8]
  475328:	cbz	x0, 475348 <_obstack_memory_used@@Base+0x18f58>
  47532c:	ldr	x2, [x20]
  475330:	cbz	x2, 475348 <_obstack_memory_used@@Base+0x18f58>
  475334:	ldr	x3, [x2, #8]
  475338:	add	x0, x3, #0x2
  47533c:	add	x3, x3, #0x1
  475340:	str	x3, [x2, #8]
  475344:	str	x19, [x2, x0, lsl #3]
  475348:	ldr	w2, [x19]
  47534c:	add	x2, x2, #0x4
  475350:	add	x19, x19, x2
  475354:	ldr	w2, [x19]
  475358:	cbnz	w2, 4752e0 <_obstack_memory_used@@Base+0x18ef0>
  47535c:	ldp	x23, x24, [sp, #48]
  475360:	ldp	x19, x20, [sp, #16]
  475364:	ldp	x21, x22, [sp, #32]
  475368:	ldp	x25, x26, [sp, #64]
  47536c:	ldp	x27, x28, [sp, #80]
  475370:	ldp	x29, x30, [sp], #112
  475374:	ret
  475378:	mov	x3, x25
  47537c:	add	x2, x19, #0x8
  475380:	mov	x1, x24
  475384:	and	w27, w26, #0xff
  475388:	mov	w0, w27
  47538c:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  475390:	mov	w0, w27
  475394:	bl	474b00 <_obstack_memory_used@@Base+0x18710>
  475398:	lsl	w2, w0, #3
  47539c:	cmp	w0, #0x8
  4753a0:	mov	x0, #0x1                   	// #1
  4753a4:	ldr	x3, [sp, #104]
  4753a8:	lsl	x2, x0, x2
  4753ac:	sub	x2, x2, #0x1
  4753b0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  4753b4:	tst	x2, x3
  4753b8:	b.ne	47532c <_obstack_memory_used@@Base+0x18f3c>  // b.any
  4753bc:	b	475348 <_obstack_memory_used@@Base+0x18f58>
  4753c0:	stp	x29, x30, [sp, #-128]!
  4753c4:	cmp	x1, #0x2f
  4753c8:	mov	x29, sp
  4753cc:	stp	x19, x20, [sp, #16]
  4753d0:	mov	x19, x2
  4753d4:	ldr	w2, [x2, #40]
  4753d8:	ldr	x13, [x0]
  4753dc:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  4753e0:	ldr	x3, [x0, #16]
  4753e4:	b.ne	475524 <_obstack_memory_used@@Base+0x19134>  // b.any
  4753e8:	cmp	x1, #0x19
  4753ec:	b.ls	4754fc <_obstack_memory_used@@Base+0x1910c>  // b.plast
  4753f0:	mov	x10, #0x0                   	// #0
  4753f4:	mov	x15, #0x0                   	// #0
  4753f8:	ldrh	w4, [x0, #24]
  4753fc:	cbz	w4, 475514 <_obstack_memory_used@@Base+0x19124>
  475400:	mov	w0, #0x38                  	// #56
  475404:	mov	w7, #0xe550                	// #58704
  475408:	mov	x11, #0x0                   	// #0
  47540c:	mov	x12, #0x0                   	// #0
  475410:	umaddl	x4, w4, w0, x3
  475414:	mov	x8, #0x0                   	// #0
  475418:	mov	x6, #0x0                   	// #0
  47541c:	mov	x9, #0x0                   	// #0
  475420:	movk	w7, #0x6474, lsl #16
  475424:	mov	x14, #0x1                   	// #1
  475428:	b	475448 <_obstack_memory_used@@Base+0x19058>
  47542c:	cmp	w0, w7
  475430:	b.eq	47550c <_obstack_memory_used@@Base+0x1911c>  // b.none
  475434:	cmp	w0, #0x2
  475438:	csel	x6, x6, x3, ne  // ne = any
  47543c:	add	x3, x3, #0x38
  475440:	cmp	x4, x3
  475444:	b.eq	475490 <_obstack_memory_used@@Base+0x190a0>  // b.none
  475448:	ldr	w0, [x3]
  47544c:	cmp	w0, #0x1
  475450:	b.ne	47542c <_obstack_memory_used@@Base+0x1903c>  // b.any
  475454:	ldr	x0, [x3, #16]
  475458:	ldr	x5, [x19]
  47545c:	add	x0, x13, x0
  475460:	cmp	x5, x0
  475464:	b.cc	47543c <_obstack_memory_used@@Base+0x1904c>  // b.lo, b.ul, b.last
  475468:	ldr	x2, [x3, #40]
  47546c:	add	x3, x3, #0x38
  475470:	add	x2, x0, x2
  475474:	cmp	x5, x2
  475478:	csel	x11, x11, x2, cs  // cs = hs, nlast
  47547c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  475480:	csel	x8, x8, x14, cs  // cs = hs, nlast
  475484:	cmp	x4, x3
  475488:	b.ne	475448 <_obstack_memory_used@@Base+0x19058>  // b.any
  47548c:	nop
  475490:	cbz	x8, 475514 <_obstack_memory_used@@Base+0x19124>
  475494:	cmp	x1, #0x2f
  475498:	b.ls	4754d4 <_obstack_memory_used@@Base+0x190e4>  // b.plast
  47549c:	adrp	x1, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4754a0:	add	x1, x1, #0x5d8
  4754a4:	cmp	x10, #0x0
  4754a8:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  4754ac:	ldr	x0, [x1, #8]
  4754b0:	b.eq	4754c8 <_obstack_memory_used@@Base+0x190d8>  // b.none
  4754b4:	ldr	x2, [x10, #40]
  4754b8:	str	x2, [x15, #40]
  4754bc:	str	x0, [x10, #40]
  4754c0:	mov	x0, x10
  4754c4:	str	x10, [x1, #8]
  4754c8:	stp	x12, x11, [x0]
  4754cc:	stp	x13, x9, [x0, #16]
  4754d0:	str	x6, [x0, #32]
  4754d4:	cbz	x9, 475514 <_obstack_memory_used@@Base+0x19124>
  4754d8:	ldr	x0, [x9, #16]
  4754dc:	add	x20, x13, x0
  4754e0:	ldrb	w0, [x13, x0]
  4754e4:	cmp	w0, #0x1
  4754e8:	b.eq	475584 <_obstack_memory_used@@Base+0x19194>  // b.none
  4754ec:	mov	w0, #0x1                   	// #1
  4754f0:	ldp	x19, x20, [sp, #16]
  4754f4:	ldp	x29, x30, [sp], #128
  4754f8:	ret
  4754fc:	mov	w0, #0xffffffff            	// #-1
  475500:	ldp	x19, x20, [sp, #16]
  475504:	ldp	x29, x30, [sp], #128
  475508:	ret
  47550c:	mov	x9, x3
  475510:	b	47543c <_obstack_memory_used@@Base+0x1904c>
  475514:	mov	w0, #0x0                   	// #0
  475518:	ldp	x19, x20, [sp, #16]
  47551c:	ldp	x29, x30, [sp], #128
  475520:	ret
  475524:	ldp	x6, x7, [x0, #32]
  475528:	adrp	x4, 4fb000 <_obstack_memory_used@@Base+0x9ec10>
  47552c:	adrp	x5, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  475530:	ldr	x2, [x4, #1256]
  475534:	cmp	x6, x2
  475538:	b.eq	475658 <_obstack_memory_used@@Base+0x19268>  // b.none
  47553c:	add	x2, x5, #0x5d8
  475540:	str	x6, [x4, #1256]
  475544:	add	x4, x2, #0x40
  475548:	add	x2, x2, #0x1c0
  47554c:	str	x7, [x5, #1496]
  475550:	stp	xzr, xzr, [x4, #-48]
  475554:	stur	x4, [x4, #-8]
  475558:	add	x4, x4, #0x30
  47555c:	cmp	x2, x4
  475560:	b.ne	475550 <_obstack_memory_used@@Base+0x19160>  // b.any
  475564:	add	x5, x5, #0x5d8
  475568:	mov	x10, #0x0                   	// #0
  47556c:	add	x2, x5, #0x10
  475570:	mov	x15, #0x0                   	// #0
  475574:	str	xzr, [x5, #392]
  475578:	str	x2, [x5, #8]
  47557c:	str	wzr, [x19, #40]
  475580:	b	4753f8 <_obstack_memory_used@@Base+0x19008>
  475584:	stp	x21, x22, [sp, #32]
  475588:	add	x22, x19, #0x8
  47558c:	mov	x1, x22
  475590:	stp	x23, x24, [sp, #48]
  475594:	add	x23, x19, #0x10
  475598:	mov	x2, x23
  47559c:	ldrb	w21, [x20, #1]
  4755a0:	mov	w0, w21
  4755a4:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  4755a8:	add	x3, sp, #0x40
  4755ac:	mov	x1, x0
  4755b0:	add	x2, x20, #0x4
  4755b4:	mov	w0, w21
  4755b8:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  4755bc:	ldrb	w24, [x20, #2]
  4755c0:	mov	x21, x0
  4755c4:	cmp	w24, #0xff
  4755c8:	b.eq	4755d8 <_obstack_memory_used@@Base+0x191e8>  // b.none
  4755cc:	ldrb	w0, [x20, #3]
  4755d0:	cmp	w0, #0x3b
  4755d4:	b.eq	4756b8 <_obstack_memory_used@@Base+0x192c8>  // b.none
  4755d8:	ldr	x2, [x19]
  4755dc:	mov	x3, #0x4                   	// #4
  4755e0:	ldp	x5, x4, [x19, #8]
  4755e4:	add	x0, sp, #0x50
  4755e8:	ldr	x1, [sp, #64]
  4755ec:	stp	xzr, x5, [sp, #80]
  4755f0:	stp	x4, x1, [sp, #96]
  4755f4:	str	x3, [sp, #112]
  4755f8:	bl	474ec0 <_obstack_memory_used@@Base+0x18ad0>
  4755fc:	str	x0, [x19, #32]
  475600:	cbz	x0, 4757d0 <_obstack_memory_used@@Base+0x193e0>
  475604:	ldrsw	x1, [x0, #4]
  475608:	add	x0, x0, #0x4
  47560c:	sub	x0, x0, x1
  475610:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  475614:	and	w20, w0, #0xff
  475618:	mov	x2, x23
  47561c:	mov	x1, x22
  475620:	mov	w0, w20
  475624:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  475628:	ldr	x2, [x19, #32]
  47562c:	mov	x1, x0
  475630:	add	x3, sp, #0x48
  475634:	mov	w0, w20
  475638:	add	x2, x2, #0x8
  47563c:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  475640:	ldr	x1, [sp, #72]
  475644:	mov	w0, #0x1                   	// #1
  475648:	ldp	x21, x22, [sp, #32]
  47564c:	ldp	x23, x24, [sp, #48]
  475650:	str	x1, [x19, #24]
  475654:	b	475500 <_obstack_memory_used@@Base+0x19110>
  475658:	ldr	x2, [x5, #1496]
  47565c:	add	x8, x5, #0x5d8
  475660:	cmp	x2, x7
  475664:	b.ne	47553c <_obstack_memory_used@@Base+0x1914c>  // b.any
  475668:	ldr	x7, [x8, #8]
  47566c:	cbz	x7, 4753f0 <_obstack_memory_used@@Base+0x19000>
  475670:	mov	x10, x7
  475674:	mov	x15, #0x0                   	// #0
  475678:	ldr	x6, [x19]
  47567c:	ldp	x2, x4, [x10]
  475680:	cmp	x6, x2
  475684:	b.cc	475690 <_obstack_memory_used@@Base+0x192a0>  // b.lo, b.ul, b.last
  475688:	cmp	x6, x4
  47568c:	b.cc	4757e8 <_obstack_memory_used@@Base+0x193f8>  // b.lo, b.ul, b.last
  475690:	orr	x2, x2, x4
  475694:	cbz	x2, 4753f8 <_obstack_memory_used@@Base+0x19008>
  475698:	ldr	x2, [x10, #40]
  47569c:	cbz	x2, 4753f8 <_obstack_memory_used@@Base+0x19008>
  4756a0:	mov	x15, x10
  4756a4:	mov	x10, x2
  4756a8:	ldp	x2, x4, [x10]
  4756ac:	cmp	x6, x2
  4756b0:	b.cc	475690 <_obstack_memory_used@@Base+0x192a0>  // b.lo, b.ul, b.last
  4756b4:	b	475688 <_obstack_memory_used@@Base+0x19298>
  4756b8:	mov	x2, x23
  4756bc:	mov	x1, x22
  4756c0:	mov	w0, w24
  4756c4:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  4756c8:	add	x3, sp, #0x48
  4756cc:	mov	x1, x0
  4756d0:	mov	x2, x21
  4756d4:	mov	w0, w24
  4756d8:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  4756dc:	ldr	x3, [sp, #72]
  4756e0:	cbz	x3, 4757c0 <_obstack_memory_used@@Base+0x193d0>
  4756e4:	ands	x5, x0, #0x3
  4756e8:	ldr	x2, [x19]
  4756ec:	b.ne	4755dc <_obstack_memory_used@@Base+0x191ec>  // b.any
  4756f0:	ldrsw	x1, [x0]
  4756f4:	add	x1, x1, x20
  4756f8:	cmp	x1, x2
  4756fc:	b.hi	4757c0 <_obstack_memory_used@@Base+0x193d0>  // b.pmore
  475700:	sub	x3, x3, #0x1
  475704:	lsl	x1, x3, #3
  475708:	add	x21, x0, x1
  47570c:	ldrsw	x1, [x0, x1]
  475710:	add	x1, x1, x20
  475714:	cmp	x1, x2
  475718:	b.ls	47575c <_obstack_memory_used@@Base+0x1936c>  // b.plast
  47571c:	cmp	x5, x3
  475720:	b.cs	47580c <_obstack_memory_used@@Base+0x1941c>  // b.hs, b.nlast
  475724:	add	x1, x5, x3
  475728:	lsr	x1, x1, #1
  47572c:	lsl	x4, x1, #3
  475730:	add	x21, x0, x4
  475734:	ldrsw	x4, [x0, x4]
  475738:	add	x4, x4, x20
  47573c:	cmp	x4, x2
  475740:	b.hi	4757e0 <_obstack_memory_used@@Base+0x193f0>  // b.pmore
  475744:	add	x5, x1, #0x1
  475748:	lsl	x1, x5, #3
  47574c:	ldrsw	x1, [x0, x1]
  475750:	add	x1, x1, x20
  475754:	cmp	x1, x2
  475758:	b.ls	47571c <_obstack_memory_used@@Base+0x1932c>  // b.plast
  47575c:	ldrsw	x22, [x21, #4]
  475760:	add	x22, x22, x20
  475764:	add	x1, x22, #0x4
  475768:	ldrsw	x0, [x22, #4]
  47576c:	sub	x0, x1, x0
  475770:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  475774:	and	w23, w0, #0xff
  475778:	mov	w0, w23
  47577c:	bl	474b00 <_obstack_memory_used@@Base+0x18710>
  475780:	mov	w2, w0
  475784:	mov	x1, #0x0                   	// #0
  475788:	add	x2, x2, #0x8
  47578c:	add	x3, sp, #0x50
  475790:	add	x2, x22, x2
  475794:	and	w0, w23, #0xf
  475798:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  47579c:	ldrsw	x0, [x21]
  4757a0:	ldr	x1, [sp, #80]
  4757a4:	add	x20, x0, x20
  4757a8:	ldr	x2, [x19]
  4757ac:	add	x0, x20, x1
  4757b0:	cmp	x2, x0
  4757b4:	b.cs	4757bc <_obstack_memory_used@@Base+0x193cc>  // b.hs, b.nlast
  4757b8:	str	x22, [x19, #32]
  4757bc:	str	x20, [x19, #24]
  4757c0:	mov	w0, #0x1                   	// #1
  4757c4:	ldp	x21, x22, [sp, #32]
  4757c8:	ldp	x23, x24, [sp, #48]
  4757cc:	b	475500 <_obstack_memory_used@@Base+0x19110>
  4757d0:	mov	w0, #0x1                   	// #1
  4757d4:	ldp	x21, x22, [sp, #32]
  4757d8:	ldp	x23, x24, [sp, #48]
  4757dc:	b	4754f0 <_obstack_memory_used@@Base+0x19100>
  4757e0:	mov	x3, x1
  4757e4:	b	47571c <_obstack_memory_used@@Base+0x1932c>
  4757e8:	cmp	x10, x7
  4757ec:	ldp	x13, x9, [x10, #16]
  4757f0:	b.eq	4754d4 <_obstack_memory_used@@Base+0x190e4>  // b.none
  4757f4:	add	x5, x5, #0x5d8
  4757f8:	ldr	x0, [x10, #40]
  4757fc:	str	x0, [x15, #40]
  475800:	str	x10, [x5, #8]
  475804:	str	x7, [x10, #40]
  475808:	b	4754d4 <_obstack_memory_used@@Base+0x190e4>
  47580c:	bl	403180 <abort@plt>
  475810:	stp	x29, x30, [sp, #-160]!
  475814:	mov	x29, sp
  475818:	stp	x19, x20, [sp, #16]
  47581c:	mov	x19, x1
  475820:	ldrb	w1, [x0, #32]
  475824:	stp	x23, x24, [sp, #48]
  475828:	mov	x24, x0
  47582c:	tbz	w1, #0, 475898 <_obstack_memory_used@@Base+0x194a8>
  475830:	stp	x27, x28, [sp, #80]
  475834:	ldr	x27, [x24, #24]
  475838:	tbnz	w1, #2, 47590c <_obstack_memory_used@@Base+0x1951c>
  47583c:	ldrh	w0, [x24, #32]
  475840:	tst	w0, #0x7f8
  475844:	b.ne	475a6c <_obstack_memory_used@@Base+0x1967c>  // b.any
  475848:	mov	x2, #0x0                   	// #0
  47584c:	ldr	x1, [x27, #8]
  475850:	b	475874 <_obstack_memory_used@@Base+0x19484>
  475854:	add	x0, x1, x2
  475858:	lsr	x0, x0, #1
  47585c:	add	x3, x0, #0x2
  475860:	ldr	x20, [x27, x3, lsl #3]
  475864:	ldr	x3, [x20, #8]
  475868:	cmp	x19, x3
  47586c:	b.cs	4758f4 <_obstack_memory_used@@Base+0x19504>  // b.hs, b.nlast
  475870:	mov	x1, x0
  475874:	cmp	x1, x2
  475878:	b.hi	475854 <_obstack_memory_used@@Base+0x19464>  // b.pmore
  47587c:	ldp	x27, x28, [sp, #80]
  475880:	mov	x20, #0x0                   	// #0
  475884:	mov	x0, x20
  475888:	ldp	x19, x20, [sp, #16]
  47588c:	ldp	x23, x24, [sp, #48]
  475890:	ldp	x29, x30, [sp], #160
  475894:	ret
  475898:	stp	x25, x26, [sp, #64]
  47589c:	ldr	w25, [x0, #32]
  4758a0:	stp	x21, x22, [sp, #32]
  4758a4:	tst	x25, #0xfffff800
  4758a8:	lsr	w25, w25, #11
  4758ac:	b.ne	475b14 <_obstack_memory_used@@Base+0x19724>  // b.any
  4758b0:	ldr	x20, [x0, #24]
  4758b4:	tbz	w1, #1, 4759c4 <_obstack_memory_used@@Base+0x195d4>
  4758b8:	ldr	x1, [x20]
  4758bc:	cbnz	x1, 4758d0 <_obstack_memory_used@@Base+0x194e0>
  4758c0:	b	4759f0 <_obstack_memory_used@@Base+0x19600>
  4758c4:	ldr	x1, [x20, #8]!
  4758c8:	add	x25, x25, x0
  4758cc:	cbz	x1, 4759d8 <_obstack_memory_used@@Base+0x195e8>
  4758d0:	mov	x0, x24
  4758d4:	bl	475100 <_obstack_memory_used@@Base+0x18d10>
  4758d8:	cmn	x0, #0x1
  4758dc:	b.ne	4758c4 <_obstack_memory_used@@Base+0x194d4>  // b.any
  4758e0:	adrp	x0, 4cf000 <_obstack_memory_used@@Base+0x72c10>
  4758e4:	mov	x1, #0x7f8                 	// #2040
  4758e8:	add	x0, x0, #0xc28
  4758ec:	stp	x0, x1, [x24, #24]
  4758f0:	b	4759f0 <_obstack_memory_used@@Base+0x19600>
  4758f4:	ldr	x2, [x20, #16]
  4758f8:	add	x3, x3, x2
  4758fc:	cmp	x19, x3
  475900:	b.cc	475de8 <_obstack_memory_used@@Base+0x199f8>  // b.lo, b.ul, b.last
  475904:	add	x2, x0, #0x1
  475908:	b	475874 <_obstack_memory_used@@Base+0x19484>
  47590c:	ldr	x28, [x27, #8]
  475910:	cbz	x28, 47587c <_obstack_memory_used@@Base+0x1948c>
  475914:	add	x0, x24, #0x8
  475918:	add	x23, sp, #0x88
  47591c:	stp	x21, x22, [sp, #32]
  475920:	add	x22, sp, #0x90
  475924:	stp	x25, x26, [sp, #64]
  475928:	add	x26, x24, #0x10
  47592c:	mov	x25, #0x0                   	// #0
  475930:	str	x0, [sp, #96]
  475934:	b	475954 <_obstack_memory_used@@Base+0x19564>
  475938:	ldr	x1, [sp, #144]
  47593c:	add	x0, x0, x1
  475940:	cmp	x0, x19
  475944:	b.hi	475de0 <_obstack_memory_used@@Base+0x199f0>  // b.pmore
  475948:	add	x25, x24, #0x1
  47594c:	cmp	x25, x28
  475950:	b.cs	475a5c <_obstack_memory_used@@Base+0x1966c>  // b.hs, b.nlast
  475954:	add	x24, x25, x28
  475958:	lsr	x24, x24, #1
  47595c:	add	x0, x24, #0x2
  475960:	ldr	x20, [x27, x0, lsl #3]
  475964:	add	x1, x20, #0x4
  475968:	ldrsw	x0, [x20, #4]
  47596c:	sub	x0, x1, x0
  475970:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  475974:	ldr	x1, [sp, #96]
  475978:	and	w21, w0, #0xff
  47597c:	mov	x2, x26
  475980:	mov	w0, w21
  475984:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  475988:	mov	x1, x0
  47598c:	mov	x3, x23
  475990:	add	x2, x20, #0x8
  475994:	mov	w0, w21
  475998:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  47599c:	mov	x3, x22
  4759a0:	mov	x2, x0
  4759a4:	mov	x1, #0x0                   	// #0
  4759a8:	and	w0, w21, #0xf
  4759ac:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  4759b0:	ldr	x0, [sp, #136]
  4759b4:	cmp	x0, x19
  4759b8:	b.ls	475938 <_obstack_memory_used@@Base+0x19548>  // b.plast
  4759bc:	mov	x28, x24
  4759c0:	b	47594c <_obstack_memory_used@@Base+0x1955c>
  4759c4:	mov	x1, x20
  4759c8:	bl	475100 <_obstack_memory_used@@Base+0x18d10>
  4759cc:	mov	x25, x0
  4759d0:	cmn	x0, #0x1
  4759d4:	b.eq	4758e0 <_obstack_memory_used@@Base+0x194f0>  // b.none
  4759d8:	ldr	w0, [x24, #32]
  4759dc:	tst	x25, #0xffffffffffe00000
  4759e0:	b.eq	475e24 <_obstack_memory_used@@Base+0x19a34>  // b.none
  4759e4:	and	w0, w0, #0x7ff
  4759e8:	str	w0, [x24, #32]
  4759ec:	cbnz	x25, 475b14 <_obstack_memory_used@@Base+0x19724>
  4759f0:	ldr	x0, [x24]
  4759f4:	cmp	x0, x19
  4759f8:	b.hi	475a50 <_obstack_memory_used@@Base+0x19660>  // b.pmore
  4759fc:	ldrb	w1, [x24, #32]
  475a00:	ldr	x21, [x24, #24]
  475a04:	tbnz	w1, #0, 475e68 <_obstack_memory_used@@Base+0x19a78>
  475a08:	tbz	w1, #1, 475dc0 <_obstack_memory_used@@Base+0x199d0>
  475a0c:	ldr	x1, [x21]
  475a10:	cbnz	x1, 475a20 <_obstack_memory_used@@Base+0x19630>
  475a14:	b	475a50 <_obstack_memory_used@@Base+0x19660>
  475a18:	ldr	x1, [x21, #8]!
  475a1c:	cbz	x1, 475a50 <_obstack_memory_used@@Base+0x19660>
  475a20:	mov	x2, x19
  475a24:	mov	x0, x24
  475a28:	bl	474ec0 <_obstack_memory_used@@Base+0x18ad0>
  475a2c:	mov	x20, x0
  475a30:	cbz	x0, 475a18 <_obstack_memory_used@@Base+0x19628>
  475a34:	mov	x0, x20
  475a38:	ldp	x19, x20, [sp, #16]
  475a3c:	ldp	x21, x22, [sp, #32]
  475a40:	ldp	x23, x24, [sp, #48]
  475a44:	ldp	x25, x26, [sp, #64]
  475a48:	ldp	x29, x30, [sp], #160
  475a4c:	ret
  475a50:	ldp	x21, x22, [sp, #32]
  475a54:	ldp	x25, x26, [sp, #64]
  475a58:	b	475880 <_obstack_memory_used@@Base+0x19490>
  475a5c:	ldp	x21, x22, [sp, #32]
  475a60:	ldp	x25, x26, [sp, #64]
  475a64:	ldp	x27, x28, [sp, #80]
  475a68:	b	475880 <_obstack_memory_used@@Base+0x19490>
  475a6c:	stp	x25, x26, [sp, #64]
  475a70:	ubfx	x25, x0, #3, #8
  475a74:	add	x2, x24, #0x10
  475a78:	add	x1, x24, #0x8
  475a7c:	mov	x0, x25
  475a80:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  475a84:	mov	x24, x0
  475a88:	ldr	x28, [x27, #8]
  475a8c:	cbz	x28, 475a60 <_obstack_memory_used@@Base+0x19670>
  475a90:	and	w0, w25, #0xf
  475a94:	add	x23, sp, #0x88
  475a98:	mov	x26, #0x0                   	// #0
  475a9c:	stp	x21, x22, [sp, #32]
  475aa0:	add	x22, sp, #0x90
  475aa4:	str	w0, [sp, #96]
  475aa8:	b	475ac8 <_obstack_memory_used@@Base+0x196d8>
  475aac:	ldr	x1, [sp, #144]
  475ab0:	add	x0, x0, x1
  475ab4:	cmp	x0, x19
  475ab8:	b.hi	475de0 <_obstack_memory_used@@Base+0x199f0>  // b.pmore
  475abc:	add	x26, x21, #0x1
  475ac0:	cmp	x26, x28
  475ac4:	b.cs	475a5c <_obstack_memory_used@@Base+0x1966c>  // b.hs, b.nlast
  475ac8:	add	x21, x28, x26
  475acc:	mov	x3, x23
  475ad0:	mov	x1, x24
  475ad4:	mov	w0, w25
  475ad8:	lsr	x21, x21, #1
  475adc:	add	x2, x21, #0x2
  475ae0:	ldr	x20, [x27, x2, lsl #3]
  475ae4:	add	x2, x20, #0x8
  475ae8:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  475aec:	mov	x2, x0
  475af0:	ldrb	w0, [sp, #96]
  475af4:	mov	x3, x22
  475af8:	mov	x1, #0x0                   	// #0
  475afc:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  475b00:	ldr	x0, [sp, #136]
  475b04:	cmp	x0, x19
  475b08:	b.ls	475aac <_obstack_memory_used@@Base+0x196bc>  // b.plast
  475b0c:	mov	x28, x21
  475b10:	b	475ac0 <_obstack_memory_used@@Base+0x196d0>
  475b14:	add	x20, x25, #0x2
  475b18:	lsl	x20, x20, #3
  475b1c:	mov	x0, x20
  475b20:	bl	402f40 <malloc@plt>
  475b24:	str	x0, [sp, #144]
  475b28:	mov	x1, x0
  475b2c:	cbz	x0, 4759f0 <_obstack_memory_used@@Base+0x19600>
  475b30:	str	xzr, [x1, #8]
  475b34:	mov	x0, x20
  475b38:	bl	402f40 <malloc@plt>
  475b3c:	str	x0, [sp, #152]
  475b40:	cbz	x0, 475b48 <_obstack_memory_used@@Base+0x19758>
  475b44:	str	xzr, [x0, #8]
  475b48:	ldrb	w0, [x24, #32]
  475b4c:	ldr	x20, [x24, #24]
  475b50:	tbz	w0, #1, 475dfc <_obstack_memory_used@@Base+0x19a0c>
  475b54:	ldr	x2, [x20]
  475b58:	cbz	x2, 475e60 <_obstack_memory_used@@Base+0x19a70>
  475b5c:	add	x22, sp, #0x90
  475b60:	mov	x1, x22
  475b64:	mov	x0, x24
  475b68:	bl	475280 <_obstack_memory_used@@Base+0x18e90>
  475b6c:	ldr	x2, [x20, #8]!
  475b70:	cbnz	x2, 475b60 <_obstack_memory_used@@Base+0x19770>
  475b74:	ldr	x0, [sp, #144]
  475b78:	str	x0, [sp, #96]
  475b7c:	str	x0, [sp, #120]
  475b80:	cbz	x0, 475b90 <_obstack_memory_used@@Base+0x197a0>
  475b84:	ldr	x0, [x0, #8]
  475b88:	cmp	x0, x25
  475b8c:	b.ne	475e60 <_obstack_memory_used@@Base+0x19a70>  // b.any
  475b90:	ldrb	w0, [x24, #32]
  475b94:	tbnz	w0, #2, 475df0 <_obstack_memory_used@@Base+0x19a00>
  475b98:	ldrh	w1, [x24, #32]
  475b9c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x17c10>
  475ba0:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x17c10>
  475ba4:	add	x0, x0, #0xe38
  475ba8:	tst	w1, #0x7f8
  475bac:	add	x20, x20, #0x910
  475bb0:	csel	x20, x20, x0, eq  // eq = none
  475bb4:	ldr	x22, [sp, #152]
  475bb8:	cbz	x22, 475e10 <_obstack_memory_used@@Base+0x19a20>
  475bbc:	ldr	x1, [sp, #96]
  475bc0:	stp	x27, x28, [sp, #80]
  475bc4:	ldr	x0, [x1, #8]
  475bc8:	str	x0, [sp, #104]
  475bcc:	cbz	x0, 475e50 <_obstack_memory_used@@Base+0x19a60>
  475bd0:	adrp	x3, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  475bd4:	add	x3, x3, #0x5d8
  475bd8:	add	x0, x0, #0x1
  475bdc:	add	x28, x1, #0x10
  475be0:	add	x27, x3, #0x190
  475be4:	mov	x21, x28
  475be8:	mov	x23, x27
  475bec:	lsl	x0, x0, #3
  475bf0:	mov	x26, #0x10                  	// #16
  475bf4:	str	x0, [sp, #112]
  475bf8:	ldr	x0, [sp, #112]
  475bfc:	str	x27, [x22, x26]
  475c00:	cmp	x0, x26
  475c04:	b.eq	475c60 <_obstack_memory_used@@Base+0x19870>  // b.none
  475c08:	cmp	x21, x23
  475c0c:	mov	x27, x21
  475c10:	b.ne	475c30 <_obstack_memory_used@@Base+0x19840>  // b.any
  475c14:	b	475c50 <_obstack_memory_used@@Base+0x19860>
  475c18:	sub	x3, x27, x28
  475c1c:	add	x0, x22, x3
  475c20:	ldr	x27, [x0, #16]
  475c24:	str	xzr, [x0, #16]
  475c28:	cmp	x27, x23
  475c2c:	b.eq	475c50 <_obstack_memory_used@@Base+0x19860>  // b.none
  475c30:	ldr	x2, [x27]
  475c34:	mov	x0, x24
  475c38:	ldr	x1, [x21, #8]
  475c3c:	blr	x20
  475c40:	tbnz	w0, #31, 475c18 <_obstack_memory_used@@Base+0x19828>
  475c44:	add	x21, x21, #0x8
  475c48:	add	x26, x26, #0x8
  475c4c:	b	475bf8 <_obstack_memory_used@@Base+0x19808>
  475c50:	mov	x27, x23
  475c54:	add	x21, x21, #0x8
  475c58:	add	x26, x26, #0x8
  475c5c:	b	475bf8 <_obstack_memory_used@@Base+0x19808>
  475c60:	add	x6, x22, #0x10
  475c64:	mov	x5, #0x0                   	// #0
  475c68:	mov	x3, #0x0                   	// #0
  475c6c:	mov	x0, #0x0                   	// #0
  475c70:	b	475c94 <_obstack_memory_used@@Base+0x198a4>
  475c74:	ldr	x4, [sp, #96]
  475c78:	add	x1, x3, #0x2
  475c7c:	add	x3, x3, #0x1
  475c80:	str	x2, [x4, x1, lsl #3]
  475c84:	ldr	x1, [sp, #104]
  475c88:	add	x0, x0, #0x1
  475c8c:	cmp	x1, x0
  475c90:	b.eq	475cb0 <_obstack_memory_used@@Base+0x198c0>  // b.none
  475c94:	ldr	x1, [x6, x0, lsl #3]
  475c98:	ldr	x2, [x28, x0, lsl #3]
  475c9c:	cbnz	x1, 475c74 <_obstack_memory_used@@Base+0x19884>
  475ca0:	add	x1, x5, #0x2
  475ca4:	add	x5, x5, #0x1
  475ca8:	str	x2, [x22, x1, lsl #3]
  475cac:	b	475c84 <_obstack_memory_used@@Base+0x19894>
  475cb0:	ldp	x0, x2, [sp, #144]
  475cb4:	str	x0, [sp, #96]
  475cb8:	ldr	x0, [sp, #120]
  475cbc:	str	x3, [x0, #8]
  475cc0:	ldr	x0, [sp, #96]
  475cc4:	str	x5, [x22, #8]
  475cc8:	ldr	x1, [x2, #8]
  475ccc:	ldr	x0, [x0, #8]
  475cd0:	add	x0, x0, x1
  475cd4:	cmp	x0, x25
  475cd8:	b.ne	475e64 <_obstack_memory_used@@Base+0x19a74>  // b.any
  475cdc:	mov	x1, x20
  475ce0:	mov	x0, x24
  475ce4:	bl	474a40 <_obstack_memory_used@@Base+0x18650>
  475ce8:	ldr	x25, [sp, #152]
  475cec:	ldr	x22, [x25, #8]
  475cf0:	cbz	x22, 475d94 <_obstack_memory_used@@Base+0x199a4>
  475cf4:	ldr	x0, [sp, #144]
  475cf8:	str	x0, [sp, #96]
  475cfc:	add	x27, x0, #0x10
  475d00:	ldr	x28, [x0, #8]
  475d04:	nop
  475d08:	add	x0, x25, x22, lsl #3
  475d0c:	sub	x23, x22, #0x1
  475d10:	ldr	x26, [x0, #8]
  475d14:	cbz	x28, 475e30 <_obstack_memory_used@@Base+0x19a40>
  475d18:	add	x22, x22, x28
  475d1c:	mov	x21, x28
  475d20:	sub	x22, x22, #0x1
  475d24:	b	475d38 <_obstack_memory_used@@Base+0x19948>
  475d28:	ldr	x0, [x27, x21, lsl #3]
  475d2c:	str	x0, [x27, x22, lsl #3]
  475d30:	sub	x22, x22, #0x1
  475d34:	cbz	x21, 475d70 <_obstack_memory_used@@Base+0x19980>
  475d38:	mov	x28, x21
  475d3c:	sub	x21, x21, #0x1
  475d40:	mov	x2, x26
  475d44:	mov	x0, x24
  475d48:	ldr	x1, [x27, x21, lsl #3]
  475d4c:	blr	x20
  475d50:	cmp	w0, #0x0
  475d54:	b.gt	475d28 <_obstack_memory_used@@Base+0x19938>
  475d58:	ldr	x0, [sp, #96]
  475d5c:	add	x22, x22, #0x2
  475d60:	str	x26, [x0, x22, lsl #3]
  475d64:	cbz	x23, 475d7c <_obstack_memory_used@@Base+0x1998c>
  475d68:	mov	x22, x23
  475d6c:	b	475d08 <_obstack_memory_used@@Base+0x19918>
  475d70:	mov	x22, x23
  475d74:	mov	x28, #0x0                   	// #0
  475d78:	b	475d58 <_obstack_memory_used@@Base+0x19968>
  475d7c:	ldr	x2, [sp, #96]
  475d80:	ldr	x1, [x25, #8]
  475d84:	ldr	x0, [x2, #8]
  475d88:	ldr	x25, [sp, #152]
  475d8c:	add	x0, x0, x1
  475d90:	str	x0, [x2, #8]
  475d94:	mov	x0, x25
  475d98:	bl	4032a0 <free@plt>
  475d9c:	ldp	x27, x28, [sp, #80]
  475da0:	ldr	x1, [sp, #144]
  475da4:	ldrb	w0, [x24, #32]
  475da8:	ldr	x2, [x24, #24]
  475dac:	str	x2, [x1]
  475db0:	orr	w0, w0, #0x1
  475db4:	str	x1, [x24, #24]
  475db8:	strb	w0, [x24, #32]
  475dbc:	b	4759f0 <_obstack_memory_used@@Base+0x19600>
  475dc0:	mov	x1, x21
  475dc4:	mov	x2, x19
  475dc8:	mov	x0, x24
  475dcc:	bl	474ec0 <_obstack_memory_used@@Base+0x18ad0>
  475dd0:	mov	x20, x0
  475dd4:	ldp	x21, x22, [sp, #32]
  475dd8:	ldp	x25, x26, [sp, #64]
  475ddc:	b	475884 <_obstack_memory_used@@Base+0x19494>
  475de0:	ldp	x21, x22, [sp, #32]
  475de4:	ldp	x25, x26, [sp, #64]
  475de8:	ldp	x27, x28, [sp, #80]
  475dec:	b	475884 <_obstack_memory_used@@Base+0x19494>
  475df0:	adrp	x20, 475000 <_obstack_memory_used@@Base+0x18c10>
  475df4:	add	x20, x20, #0x40
  475df8:	b	475bb4 <_obstack_memory_used@@Base+0x197c4>
  475dfc:	mov	x2, x20
  475e00:	add	x1, sp, #0x90
  475e04:	mov	x0, x24
  475e08:	bl	475280 <_obstack_memory_used@@Base+0x18e90>
  475e0c:	b	475b74 <_obstack_memory_used@@Base+0x19784>
  475e10:	ldr	x2, [sp, #96]
  475e14:	mov	x1, x20
  475e18:	mov	x0, x24
  475e1c:	bl	474a40 <_obstack_memory_used@@Base+0x18650>
  475e20:	b	475da0 <_obstack_memory_used@@Base+0x199b0>
  475e24:	bfi	w0, w25, #11, #21
  475e28:	str	w0, [x24, #32]
  475e2c:	b	4759ec <_obstack_memory_used@@Base+0x195fc>
  475e30:	ldr	x2, [sp, #96]
  475e34:	add	x1, x22, #0x1
  475e38:	str	x26, [x2, x1, lsl #3]
  475e3c:	cbz	x23, 475d7c <_obstack_memory_used@@Base+0x1998c>
  475e40:	sub	x23, x22, #0x2
  475e44:	mov	x22, x23
  475e48:	ldr	x26, [x0]
  475e4c:	b	475d58 <_obstack_memory_used@@Base+0x19968>
  475e50:	mov	x2, x22
  475e54:	mov	x5, #0x0                   	// #0
  475e58:	mov	x3, #0x0                   	// #0
  475e5c:	b	475cb8 <_obstack_memory_used@@Base+0x198c8>
  475e60:	stp	x27, x28, [sp, #80]
  475e64:	bl	403180 <abort@plt>
  475e68:	ldp	x21, x22, [sp, #32]
  475e6c:	ldp	x25, x26, [sp, #64]
  475e70:	b	475830 <_obstack_memory_used@@Base+0x19440>
  475e74:	nop
  475e78:	stp	x29, x30, [sp, #-48]!
  475e7c:	mov	x5, #0xffffffffffffffff    	// #-1
  475e80:	mov	x4, #0x7f8                 	// #2040
  475e84:	mov	x29, sp
  475e88:	stp	x19, x20, [sp, #16]
  475e8c:	adrp	x20, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  475e90:	mov	x19, x1
  475e94:	ldr	x1, [x20, #3600]
  475e98:	str	x21, [sp, #32]
  475e9c:	stp	x5, x2, [x19]
  475ea0:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  475ea4:	stp	x3, x0, [x19, #16]
  475ea8:	str	x4, [x19, #32]
  475eac:	cbz	x1, 475ebc <_obstack_memory_used@@Base+0x19acc>
  475eb0:	add	x0, x21, #0x5d8
  475eb4:	add	x0, x0, #0x198
  475eb8:	bl	403530 <pthread_mutex_lock@plt>
  475ebc:	add	x1, x21, #0x5d8
  475ec0:	ldr	w0, [x1, #464]
  475ec4:	ldr	x2, [x1, #456]
  475ec8:	str	x2, [x19, #40]
  475ecc:	str	x19, [x1, #456]
  475ed0:	cbz	w0, 475f04 <_obstack_memory_used@@Base+0x19b14>
  475ed4:	ldr	x20, [x20, #3600]
  475ed8:	cbz	x20, 475ef4 <_obstack_memory_used@@Base+0x19b04>
  475edc:	add	x0, x21, #0x5d8
  475ee0:	ldp	x19, x20, [sp, #16]
  475ee4:	add	x0, x0, #0x198
  475ee8:	ldr	x21, [sp, #32]
  475eec:	ldp	x29, x30, [sp], #48
  475ef0:	b	403550 <pthread_mutex_unlock@plt>
  475ef4:	ldp	x19, x20, [sp, #16]
  475ef8:	ldr	x21, [sp, #32]
  475efc:	ldp	x29, x30, [sp], #48
  475f00:	ret
  475f04:	add	x1, x1, #0x1d0
  475f08:	mov	w0, #0x1                   	// #1
  475f0c:	str	w0, [x1]
  475f10:	b	475ed4 <_obstack_memory_used@@Base+0x19ae4>
  475f14:	nop
  475f18:	cbz	x0, 475f28 <_obstack_memory_used@@Base+0x19b38>
  475f1c:	ldr	w4, [x0]
  475f20:	cbz	w4, 475f28 <_obstack_memory_used@@Base+0x19b38>
  475f24:	b	475e78 <_obstack_memory_used@@Base+0x19a88>
  475f28:	ret
  475f2c:	nop
  475f30:	cbz	x0, 475f48 <_obstack_memory_used@@Base+0x19b58>
  475f34:	ldr	w2, [x0]
  475f38:	cbz	w2, 475f48 <_obstack_memory_used@@Base+0x19b58>
  475f3c:	mov	x3, #0x0                   	// #0
  475f40:	mov	x2, #0x0                   	// #0
  475f44:	b	475e78 <_obstack_memory_used@@Base+0x19a88>
  475f48:	ret
  475f4c:	nop
  475f50:	stp	x29, x30, [sp, #-32]!
  475f54:	mov	x29, sp
  475f58:	str	x19, [sp, #16]
  475f5c:	mov	x19, x0
  475f60:	ldr	w0, [x0]
  475f64:	cbnz	w0, 475f74 <_obstack_memory_used@@Base+0x19b84>
  475f68:	ldr	x19, [sp, #16]
  475f6c:	ldp	x29, x30, [sp], #32
  475f70:	ret
  475f74:	mov	x0, #0x30                  	// #48
  475f78:	bl	402f40 <malloc@plt>
  475f7c:	mov	x1, x0
  475f80:	mov	x0, x19
  475f84:	ldr	x19, [sp, #16]
  475f88:	mov	x3, #0x0                   	// #0
  475f8c:	ldp	x29, x30, [sp], #32
  475f90:	mov	x2, #0x0                   	// #0
  475f94:	b	475e78 <_obstack_memory_used@@Base+0x19a88>
  475f98:	stp	x29, x30, [sp, #-48]!
  475f9c:	mov	x5, #0xffffffffffffffff    	// #-1
  475fa0:	mov	x4, #0x7fa                 	// #2042
  475fa4:	mov	x29, sp
  475fa8:	stp	x19, x20, [sp, #16]
  475fac:	adrp	x20, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  475fb0:	mov	x19, x1
  475fb4:	ldr	x1, [x20, #3600]
  475fb8:	str	x21, [sp, #32]
  475fbc:	stp	x5, x2, [x19]
  475fc0:	adrp	x21, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  475fc4:	stp	x3, x0, [x19, #16]
  475fc8:	str	x4, [x19, #32]
  475fcc:	cbz	x1, 475fdc <_obstack_memory_used@@Base+0x19bec>
  475fd0:	add	x0, x21, #0x5d8
  475fd4:	add	x0, x0, #0x198
  475fd8:	bl	403530 <pthread_mutex_lock@plt>
  475fdc:	add	x1, x21, #0x5d8
  475fe0:	ldr	w0, [x1, #464]
  475fe4:	ldr	x2, [x1, #456]
  475fe8:	str	x2, [x19, #40]
  475fec:	str	x19, [x1, #456]
  475ff0:	cbz	w0, 476024 <_obstack_memory_used@@Base+0x19c34>
  475ff4:	ldr	x20, [x20, #3600]
  475ff8:	cbz	x20, 476014 <_obstack_memory_used@@Base+0x19c24>
  475ffc:	add	x0, x21, #0x5d8
  476000:	ldp	x19, x20, [sp, #16]
  476004:	add	x0, x0, #0x198
  476008:	ldr	x21, [sp, #32]
  47600c:	ldp	x29, x30, [sp], #48
  476010:	b	403550 <pthread_mutex_unlock@plt>
  476014:	ldp	x19, x20, [sp, #16]
  476018:	ldr	x21, [sp, #32]
  47601c:	ldp	x29, x30, [sp], #48
  476020:	ret
  476024:	add	x1, x1, #0x1d0
  476028:	mov	w0, #0x1                   	// #1
  47602c:	str	w0, [x1]
  476030:	b	475ff4 <_obstack_memory_used@@Base+0x19c04>
  476034:	nop
  476038:	mov	x3, #0x0                   	// #0
  47603c:	mov	x2, #0x0                   	// #0
  476040:	b	475f98 <_obstack_memory_used@@Base+0x19ba8>
  476044:	nop
  476048:	stp	x29, x30, [sp, #-32]!
  47604c:	mov	x29, sp
  476050:	str	x19, [sp, #16]
  476054:	mov	x19, x0
  476058:	mov	x0, #0x30                  	// #48
  47605c:	bl	402f40 <malloc@plt>
  476060:	mov	x1, x0
  476064:	mov	x0, x19
  476068:	ldr	x19, [sp, #16]
  47606c:	mov	x3, #0x0                   	// #0
  476070:	ldp	x29, x30, [sp], #32
  476074:	mov	x2, #0x0                   	// #0
  476078:	b	475f98 <_obstack_memory_used@@Base+0x19ba8>
  47607c:	nop
  476080:	stp	x29, x30, [sp, #-48]!
  476084:	mov	x29, sp
  476088:	stp	x19, x20, [sp, #16]
  47608c:	cbz	x0, 476158 <_obstack_memory_used@@Base+0x19d68>
  476090:	mov	x20, x0
  476094:	ldr	w0, [x0]
  476098:	cbz	w0, 476158 <_obstack_memory_used@@Base+0x19d68>
  47609c:	stp	x21, x22, [sp, #32]
  4760a0:	adrp	x21, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  4760a4:	adrp	x22, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4760a8:	ldr	x0, [x21, #3600]
  4760ac:	cbz	x0, 4760bc <_obstack_memory_used@@Base+0x19ccc>
  4760b0:	add	x0, x22, #0x5d8
  4760b4:	add	x0, x0, #0x198
  4760b8:	bl	403530 <pthread_mutex_lock@plt>
  4760bc:	add	x2, x22, #0x5d8
  4760c0:	ldr	x1, [x2, #456]
  4760c4:	cbz	x1, 47610c <_obstack_memory_used@@Base+0x19d1c>
  4760c8:	add	x2, x2, #0x1c8
  4760cc:	b	4760d8 <_obstack_memory_used@@Base+0x19ce8>
  4760d0:	add	x2, x19, #0x28
  4760d4:	cbz	x1, 47610c <_obstack_memory_used@@Base+0x19d1c>
  4760d8:	ldr	x0, [x1, #24]
  4760dc:	mov	x19, x1
  4760e0:	ldr	x1, [x1, #40]
  4760e4:	cmp	x20, x0
  4760e8:	b.ne	4760d0 <_obstack_memory_used@@Base+0x19ce0>  // b.any
  4760ec:	str	x1, [x2]
  4760f0:	ldr	x21, [x21, #3600]
  4760f4:	cbnz	x21, 47616c <_obstack_memory_used@@Base+0x19d7c>
  4760f8:	mov	x0, x19
  4760fc:	ldp	x19, x20, [sp, #16]
  476100:	ldp	x21, x22, [sp, #32]
  476104:	ldp	x29, x30, [sp], #48
  476108:	ret
  47610c:	add	x2, x22, #0x5d8
  476110:	ldr	x19, [x2, #472]
  476114:	cbz	x19, 47618c <_obstack_memory_used@@Base+0x19d9c>
  476118:	add	x2, x2, #0x1d8
  47611c:	b	476138 <_obstack_memory_used@@Base+0x19d48>
  476120:	ldr	x1, [x0]
  476124:	cmp	x20, x1
  476128:	b.eq	4761a4 <_obstack_memory_used@@Base+0x19db4>  // b.none
  47612c:	add	x2, x19, #0x28
  476130:	ldr	x19, [x19, #40]
  476134:	cbz	x19, 47618c <_obstack_memory_used@@Base+0x19d9c>
  476138:	ldrb	w1, [x19, #32]
  47613c:	ldr	x0, [x19, #24]
  476140:	tbnz	w1, #0, 476120 <_obstack_memory_used@@Base+0x19d30>
  476144:	cmp	x20, x0
  476148:	b.ne	47612c <_obstack_memory_used@@Base+0x19d3c>  // b.any
  47614c:	ldr	x0, [x19, #40]
  476150:	str	x0, [x2]
  476154:	b	4760f0 <_obstack_memory_used@@Base+0x19d00>
  476158:	mov	x19, #0x0                   	// #0
  47615c:	mov	x0, x19
  476160:	ldp	x19, x20, [sp, #16]
  476164:	ldp	x29, x30, [sp], #48
  476168:	ret
  47616c:	add	x0, x22, #0x5d8
  476170:	add	x0, x0, #0x198
  476174:	bl	403550 <pthread_mutex_unlock@plt>
  476178:	mov	x0, x19
  47617c:	ldp	x19, x20, [sp, #16]
  476180:	ldp	x21, x22, [sp, #32]
  476184:	ldp	x29, x30, [sp], #48
  476188:	ret
  47618c:	ldr	x21, [x21, #3600]
  476190:	cbz	x21, 4761a0 <_obstack_memory_used@@Base+0x19db0>
  476194:	add	x0, x22, #0x5d8
  476198:	add	x0, x0, #0x198
  47619c:	bl	403550 <pthread_mutex_unlock@plt>
  4761a0:	bl	403180 <abort@plt>
  4761a4:	ldr	x1, [x19, #40]
  4761a8:	str	x1, [x2]
  4761ac:	bl	4032a0 <free@plt>
  4761b0:	b	4760f0 <_obstack_memory_used@@Base+0x19d00>
  4761b4:	nop
  4761b8:	b	476080 <_obstack_memory_used@@Base+0x19c90>
  4761bc:	nop
  4761c0:	ldr	w1, [x0]
  4761c4:	cbnz	w1, 4761cc <_obstack_memory_used@@Base+0x19ddc>
  4761c8:	ret
  4761cc:	stp	x29, x30, [sp, #-16]!
  4761d0:	mov	x29, sp
  4761d4:	bl	476080 <_obstack_memory_used@@Base+0x19c90>
  4761d8:	ldp	x29, x30, [sp], #16
  4761dc:	b	4032a0 <free@plt>
  4761e0:	stp	x29, x30, [sp, #-128]!
  4761e4:	mov	x29, sp
  4761e8:	stp	x23, x24, [sp, #48]
  4761ec:	adrp	x23, 4fe000 <__environ@@GLIBC_2.17+0x2af8>
  4761f0:	add	x2, x23, #0x5d8
  4761f4:	stp	x19, x20, [sp, #16]
  4761f8:	mov	x20, x0
  4761fc:	add	x0, x2, #0x1d0
  476200:	stp	x21, x22, [sp, #32]
  476204:	mov	x22, x1
  476208:	ldr	w0, [x0]
  47620c:	cbnz	w0, 476270 <_obstack_memory_used@@Base+0x19e80>
  476210:	mov	w2, #0x1                   	// #1
  476214:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x18c10>
  476218:	add	x1, sp, #0x50
  47621c:	add	x0, x0, #0x3c0
  476220:	stp	x20, xzr, [sp, #80]
  476224:	stp	xzr, xzr, [sp, #96]
  476228:	str	xzr, [sp, #112]
  47622c:	str	w2, [sp, #120]
  476230:	bl	403280 <dl_iterate_phdr@plt>
  476234:	tbnz	w0, #31, 476384 <_obstack_memory_used@@Base+0x19f94>
  476238:	ldr	x21, [sp, #112]
  47623c:	cbz	x21, 476258 <_obstack_memory_used@@Base+0x19e68>
  476240:	ldr	x0, [sp, #88]
  476244:	str	x0, [x22]
  476248:	ldr	x0, [sp, #96]
  47624c:	str	x0, [x22, #8]
  476250:	ldr	x0, [sp, #104]
  476254:	str	x0, [x22, #16]
  476258:	mov	x0, x21
  47625c:	ldp	x19, x20, [sp, #16]
  476260:	ldp	x21, x22, [sp, #32]
  476264:	ldp	x23, x24, [sp, #48]
  476268:	ldp	x29, x30, [sp], #128
  47626c:	ret
  476270:	stp	x25, x26, [sp, #64]
  476274:	adrp	x25, 4f9000 <_obstack_memory_used@@Base+0x9cc10>
  476278:	ldr	x0, [x25, #3600]
  47627c:	cbz	x0, 476288 <_obstack_memory_used@@Base+0x19e98>
  476280:	add	x0, x2, #0x198
  476284:	bl	403530 <pthread_mutex_lock@plt>
  476288:	add	x0, x23, #0x5d8
  47628c:	ldr	x19, [x0, #472]
  476290:	cbnz	x19, 4762a0 <_obstack_memory_used@@Base+0x19eb0>
  476294:	b	47631c <_obstack_memory_used@@Base+0x19f2c>
  476298:	ldr	x19, [x19, #40]
  47629c:	cbz	x19, 47631c <_obstack_memory_used@@Base+0x19f2c>
  4762a0:	ldr	x0, [x19]
  4762a4:	cmp	x20, x0
  4762a8:	b.cc	476298 <_obstack_memory_used@@Base+0x19ea8>  // b.lo, b.ul, b.last
  4762ac:	mov	x1, x20
  4762b0:	mov	x0, x19
  4762b4:	bl	475810 <_obstack_memory_used@@Base+0x19420>
  4762b8:	mov	x21, x0
  4762bc:	cbz	x0, 47631c <_obstack_memory_used@@Base+0x19f2c>
  4762c0:	ldr	x25, [x25, #3600]
  4762c4:	cbnz	x25, 47638c <_obstack_memory_used@@Base+0x19f9c>
  4762c8:	ldrb	w0, [x19, #32]
  4762cc:	ldr	x1, [x19, #8]
  4762d0:	str	x1, [x22]
  4762d4:	ldr	x1, [x19, #16]
  4762d8:	str	x1, [x22, #8]
  4762dc:	tbnz	w0, #2, 47639c <_obstack_memory_used@@Base+0x19fac>
  4762e0:	ldrh	w20, [x19, #32]
  4762e4:	ubfx	x20, x20, #3, #8
  4762e8:	add	x2, x19, #0x10
  4762ec:	add	x1, x19, #0x8
  4762f0:	mov	w0, w20
  4762f4:	bl	474dd8 <_obstack_memory_used@@Base+0x189e8>
  4762f8:	add	x3, sp, #0x50
  4762fc:	mov	x1, x0
  476300:	add	x2, x21, #0x8
  476304:	mov	w0, w20
  476308:	bl	474b60 <_obstack_memory_used@@Base+0x18770>
  47630c:	ldr	x0, [sp, #80]
  476310:	ldp	x25, x26, [sp, #64]
  476314:	str	x0, [x22, #16]
  476318:	b	476258 <_obstack_memory_used@@Base+0x19e68>
  47631c:	add	x24, x23, #0x5d8
  476320:	add	x26, x24, #0x1d8
  476324:	nop
  476328:	ldr	x19, [x24, #456]
  47632c:	cbz	x19, 4763b4 <_obstack_memory_used@@Base+0x19fc4>
  476330:	ldr	x2, [x19, #40]
  476334:	mov	x1, x20
  476338:	mov	x0, x19
  47633c:	str	x2, [x24, #456]
  476340:	bl	475810 <_obstack_memory_used@@Base+0x19420>
  476344:	mov	x21, x0
  476348:	ldr	x2, [x24, #472]
  47634c:	cbz	x2, 4763cc <_obstack_memory_used@@Base+0x19fdc>
  476350:	mov	x0, x26
  476354:	ldr	x3, [x19]
  476358:	b	476368 <_obstack_memory_used@@Base+0x19f78>
  47635c:	add	x0, x2, #0x28
  476360:	ldr	x2, [x2, #40]
  476364:	cbz	x2, 476374 <_obstack_memory_used@@Base+0x19f84>
  476368:	ldr	x1, [x2]
  47636c:	cmp	x1, x3
  476370:	b.cs	47635c <_obstack_memory_used@@Base+0x19f6c>  // b.hs, b.nlast
  476374:	str	x2, [x19, #40]
  476378:	str	x19, [x0]
  47637c:	cbz	x21, 476328 <_obstack_memory_used@@Base+0x19f38>
  476380:	b	4762c0 <_obstack_memory_used@@Base+0x19ed0>
  476384:	mov	x21, #0x0                   	// #0
  476388:	b	476258 <_obstack_memory_used@@Base+0x19e68>
  47638c:	add	x0, x23, #0x5d8
  476390:	add	x0, x0, #0x198
  476394:	bl	403550 <pthread_mutex_unlock@plt>
  476398:	b	4762c8 <_obstack_memory_used@@Base+0x19ed8>
  47639c:	add	x1, x21, #0x4
  4763a0:	ldrsw	x0, [x21, #4]
  4763a4:	sub	x0, x1, x0
  4763a8:	bl	474cc0 <_obstack_memory_used@@Base+0x188d0>
  4763ac:	and	w20, w0, #0xff
  4763b0:	b	4762e8 <_obstack_memory_used@@Base+0x19ef8>
  4763b4:	ldr	x25, [x25, #3600]
  4763b8:	cbz	x25, 4763d4 <_obstack_memory_used@@Base+0x19fe4>
  4763bc:	add	x0, x24, #0x198
  4763c0:	bl	403550 <pthread_mutex_unlock@plt>
  4763c4:	ldp	x25, x26, [sp, #64]
  4763c8:	b	476210 <_obstack_memory_used@@Base+0x19e20>
  4763cc:	mov	x0, x26
  4763d0:	b	476374 <_obstack_memory_used@@Base+0x19f84>
  4763d4:	ldp	x25, x26, [sp, #64]
  4763d8:	b	476210 <_obstack_memory_used@@Base+0x19e20>
  4763dc:	nop
  4763e0:	stp	x29, x30, [sp, #-64]!
  4763e4:	mov	x29, sp
  4763e8:	stp	x19, x20, [sp, #16]
  4763ec:	adrp	x20, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  4763f0:	add	x20, x20, #0x9c0
  4763f4:	stp	x21, x22, [sp, #32]
  4763f8:	adrp	x21, 4f8000 <_obstack_memory_used@@Base+0x9bc10>
  4763fc:	add	x21, x21, #0x990
  476400:	sub	x20, x20, x21
  476404:	mov	w22, w0
  476408:	stp	x23, x24, [sp, #48]
  47640c:	mov	x23, x1
  476410:	mov	x24, x2
  476414:	bl	402c80 <_ZGTtnam@plt-0x40>
  476418:	cmp	xzr, x20, asr #3
  47641c:	b.eq	476448 <_obstack_memory_used@@Base+0x1a058>  // b.none
  476420:	asr	x20, x20, #3
  476424:	mov	x19, #0x0                   	// #0
  476428:	ldr	x3, [x21, x19, lsl #3]
  47642c:	mov	x2, x24
  476430:	add	x19, x19, #0x1
  476434:	mov	x1, x23
  476438:	mov	w0, w22
  47643c:	blr	x3
  476440:	cmp	x20, x19
  476444:	b.ne	476428 <_obstack_memory_used@@Base+0x1a038>  // b.any
  476448:	ldp	x19, x20, [sp, #16]
  47644c:	ldp	x21, x22, [sp, #32]
  476450:	ldp	x23, x24, [sp, #48]
  476454:	ldp	x29, x30, [sp], #64
  476458:	ret
  47645c:	nop
  476460:	ret
  476464:	nop
  476468:	adrp	x2, 4fa000 <_obstack_memory_used@@Base+0x9dc10>
  47646c:	mov	x1, #0x0                   	// #0
  476470:	ldr	x2, [x2, #1176]
  476474:	b	402e30 <__cxa_atexit@plt>
  476478:	mov	x2, x1
  47647c:	mov	x1, x0
  476480:	mov	w0, #0x0                   	// #0
  476484:	b	403510 <__xstat@plt>
  476488:	mov	x2, x1
  47648c:	mov	w1, w0
  476490:	mov	w0, #0x0                   	// #0
  476494:	b	403420 <__fxstat@plt>
  476498:	mov	x2, x1
  47649c:	mov	x1, x0
  4764a0:	mov	w0, #0x0                   	// #0
  4764a4:	b	4033b0 <__lxstat@plt>

Disassembly of section .fini:

00000000004764a8 <.fini>:
  4764a8:	stp	x29, x30, [sp, #-16]!
  4764ac:	mov	x29, sp
  4764b0:	ldp	x29, x30, [sp], #16
  4764b4:	ret
