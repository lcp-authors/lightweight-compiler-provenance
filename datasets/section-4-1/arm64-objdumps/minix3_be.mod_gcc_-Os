
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix3_be.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x8e0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	sub	w2, w1, #0x1
  24:	add	x4, x0, #0x20
  28:	mov	x29, sp
  2c:	ldrb	w3, [x0, #7]
  30:	str	w1, [x0, #100]
  34:	ldrh	w1, [x0, #6]
  38:	ldrh	w5, [x0, #8]
  3c:	ldr	x6, [x0, #128]
  40:	orr	w1, w3, w1, lsl #8
  44:	ldrb	w3, [x0, #9]
  48:	and	w1, w1, #0xffff
  4c:	add	w1, w1, #0x2
  50:	ldr	x0, [x0, #112]
  54:	orr	w5, w3, w5, lsl #8
  58:	mov	x3, #0x40                  	// #64
  5c:	add	w5, w1, w5, uxth
  60:	lsr	w1, w2, #3
  64:	ubfiz	x2, x2, #6, #3
  68:	sxtw	x5, w5
  6c:	madd	x1, x5, x6, x1
  70:	bl	0 <grub_disk_read>
  74:	mov	w0, #0x0                   	// #0
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	stp	x29, x30, [sp, #-32]!
  84:	mov	w1, w1
  88:	ubfiz	x2, x2, #2, #32
  8c:	mov	x29, sp
  90:	ldr	x5, [x0, #128]
  94:	add	x4, sp, #0x1c
  98:	ldr	x0, [x0, #112]
  9c:	mov	x3, #0x4                   	// #4
  a0:	mul	x1, x1, x5
  a4:	bl	0 <grub_disk_read>
  a8:	ldr	w0, [sp, #28]
  ac:	ldp	x29, x30, [sp], #32
  b0:	rev	w0, w0
  b4:	ret
  b8:	stp	x29, x30, [sp, #-144]!
  bc:	mov	x29, sp
  c0:	stp	x25, x26, [sp, #64]
  c4:	mov	x26, x0
  c8:	ldr	w0, [x0, #40]
  cc:	stp	x19, x20, [sp, #16]
  d0:	rev	w0, w0
  d4:	stp	x21, x22, [sp, #32]
  d8:	cmp	x0, x3
  dc:	stp	x23, x24, [sp, #48]
  e0:	stp	x27, x28, [sp, #80]
  e4:	stp	x1, x2, [sp, #128]
  e8:	b.cs	11c <grub_mod_init-0x7c4>  // b.hs, b.nlast
  ec:	adrp	x0, 0 <grub_mod_init-0x8e0>
  f0:	ldr	x1, [x0]
  f4:	mov	w0, #0xb                   	// #11
  f8:	bl	0 <grub_error>
  fc:	mov	x0, #0xffffffffffffffff    	// #-1
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x23, x24, [sp, #48]
 10c:	ldp	x25, x26, [sp, #64]
 110:	ldp	x27, x28, [sp, #80]
 114:	ldp	x29, x30, [sp], #144
 118:	ret
 11c:	add	x1, x3, x4
 120:	mov	x19, x4
 124:	mov	x23, x5
 128:	cmp	x0, x1
 12c:	b.cs	134 <grub_mod_init-0x7ac>  // b.hs, b.nlast
 130:	sub	x19, x0, x3
 134:	cbz	x19, 314 <grub_mod_init-0x5cc>
 138:	add	x24, x19, x3
 13c:	adrp	x27, 0 <grub_mod_init-0x8e0>
 140:	sub	x0, x24, #0x1
 144:	and	x24, x24, #0xffffffff
 148:	ldr	x22, [x26, #128]
 14c:	ubfx	x0, x0, #9, #32
 150:	adrp	x28, 0 <grub_mod_init-0x8e0>
 154:	udiv	x0, x0, x22
 158:	lsl	x22, x22, #9
 15c:	udiv	x20, x3, x22
 160:	str	w0, [sp, #108]
 164:	add	w0, w0, #0x1
 168:	str	w0, [sp, #120]
 16c:	msub	x22, x20, x22, x3
 170:	add	x25, x26, x20, lsl #2
 174:	str	w20, [sp, #124]
 178:	ldr	w0, [sp, #120]
 17c:	cmp	w20, w0
 180:	b.cc	18c <grub_mod_init-0x754>  // b.lo, b.ul, b.last
 184:	mov	x0, x19
 188:	b	100 <grub_mod_init-0x7e0>
 18c:	ldr	x0, [x26, #128]
 190:	str	x0, [sp, #112]
 194:	cmp	w20, #0x6
 198:	b.hi	238 <grub_mod_init-0x6a8>  // b.pmore
 19c:	ldr	w4, [x25, #56]
 1a0:	rev	w4, w4
 1a4:	ldr	x5, [x28]
 1a8:	ldr	w0, [x5]
 1ac:	cbnz	w0, fc <grub_mod_init-0x7e4>
 1b0:	ldr	w0, [sp, #108]
 1b4:	ldr	x7, [x26, #128]
 1b8:	cmp	w0, w20
 1bc:	b.eq	2f4 <grub_mod_init-0x5ec>  // b.none
 1c0:	ldr	x0, [sp, #112]
 1c4:	lsl	x3, x0, #9
 1c8:	ldr	w0, [sp, #124]
 1cc:	cmp	w20, w0
 1d0:	b.ne	30c <grub_mod_init-0x5d4>  // b.any
 1d4:	sub	x3, x3, x22
 1d8:	mov	x21, x22
 1dc:	ldr	x0, [x26, #112]
 1e0:	mov	x2, x21
 1e4:	ldr	x1, [sp, #128]
 1e8:	add	x25, x25, #0x4
 1ec:	str	x1, [x0, #48]
 1f0:	ldr	x1, [sp, #136]
 1f4:	str	x1, [x0, #56]
 1f8:	mov	w1, w4
 1fc:	mov	x4, x23
 200:	mul	x1, x1, x7
 204:	bl	0 <grub_disk_read>
 208:	ldr	x0, [x26, #112]
 20c:	str	xzr, [x0, #48]
 210:	adrp	x0, 0 <grub_mod_init-0x8e0>
 214:	add	x0, x0, #0x0
 218:	ldr	x5, [x0]
 21c:	ldr	w0, [x5]
 220:	cbnz	w0, fc <grub_mod_init-0x7e4>
 224:	ldr	x5, [x26, #128]
 228:	add	w20, w20, #0x1
 22c:	add	x23, x23, x5, lsl #9
 230:	sub	x23, x23, x21
 234:	b	178 <grub_mod_init-0x768>
 238:	ldr	w0, [x26, #96]
 23c:	sub	w2, w20, #0x7
 240:	cmp	w0, w2
 244:	b.ls	260 <grub_mod_init-0x680>  // b.plast
 248:	ldr	w1, [x26, #84]
 24c:	rev	w1, w1
 250:	mov	x0, x26
 254:	bl	80 <grub_mod_init-0x860>
 258:	mov	w4, w0
 25c:	b	1a4 <grub_mod_init-0x73c>
 260:	umull	x4, w0, w0
 264:	sub	w21, w2, w0
 268:	sub	w2, w2, w0
 26c:	mov	w1, w0
 270:	cmp	x2, x4
 274:	b.cs	2a0 <grub_mod_init-0x640>  // b.hs, b.nlast
 278:	udiv	w2, w21, w0
 27c:	ldr	w1, [x26, #88]
 280:	rev	w1, w1
 284:	mov	x0, x26
 288:	bl	80 <grub_mod_init-0x860>
 28c:	ldr	w2, [x26, #96]
 290:	udiv	w1, w21, w2
 294:	msub	w2, w1, w2, w21
 298:	mov	w1, w0
 29c:	b	250 <grub_mod_init-0x690>
 2a0:	msub	w21, w0, w0, w21
 2a4:	mul	x1, x1, x4
 2a8:	cmp	x1, w21, uxtw
 2ac:	b.ls	2e0 <grub_mod_init-0x600>  // b.plast
 2b0:	udiv	w2, w21, w0
 2b4:	ldr	w1, [x26, #92]
 2b8:	rev	w1, w1
 2bc:	udiv	w2, w2, w0
 2c0:	mov	x0, x26
 2c4:	bl	80 <grub_mod_init-0x860>
 2c8:	ldr	w4, [x26, #96]
 2cc:	udiv	w2, w21, w4
 2d0:	udiv	w1, w2, w4
 2d4:	msub	w2, w1, w4, w2
 2d8:	mov	w1, w0
 2dc:	b	284 <grub_mod_init-0x65c>
 2e0:	ldr	x1, [x27]
 2e4:	mov	w0, #0xb                   	// #11
 2e8:	bl	0 <grub_error>
 2ec:	mov	w4, #0x0                   	// #0
 2f0:	b	1a4 <grub_mod_init-0x73c>
 2f4:	lsl	x0, x7, #9
 2f8:	udiv	x3, x24, x0
 2fc:	msub	x3, x3, x0, x24
 300:	cmp	x3, #0x0
 304:	csel	x3, x3, x0, ne  // ne = any
 308:	b	1c8 <grub_mod_init-0x718>
 30c:	mov	x21, #0x0                   	// #0
 310:	b	1dc <grub_mod_init-0x704>
 314:	mov	x0, #0x0                   	// #0
 318:	b	100 <grub_mod_init-0x7e0>
 31c:	nop
	...
 338:	mov	x5, x1
 33c:	mov	x4, x2
 340:	ldp	x1, x2, [x0, #88]
 344:	ldr	x3, [x0, #24]
 348:	ldr	x0, [x0, #80]
 34c:	b	b8 <grub_mod_init-0x828>
 350:	stp	x29, x30, [sp, #-32]!
 354:	mov	x29, sp
 358:	stp	x19, x20, [sp, #16]
 35c:	mov	x20, x0
 360:	mov	x0, #0x88                  	// #136
 364:	bl	0 <grub_malloc>
 368:	mov	x19, x0
 36c:	cbz	x0, 3b4 <grub_mod_init-0x52c>
 370:	mov	x4, x0
 374:	mov	x3, #0x20                  	// #32
 378:	mov	x0, x20
 37c:	mov	x2, #0x0                   	// #0
 380:	mov	x1, #0x2                   	// #2
 384:	bl	0 <grub_disk_read>
 388:	adrp	x0, 0 <grub_mod_init-0x8e0>
 38c:	ldr	x0, [x0]
 390:	ldr	w0, [x0]
 394:	cbz	w0, 3c4 <grub_mod_init-0x51c>
 398:	mov	x0, x19
 39c:	bl	0 <grub_free>
 3a0:	adrp	x0, 0 <grub_mod_init-0x8e0>
 3a4:	mov	x19, #0x0                   	// #0
 3a8:	ldr	x1, [x0]
 3ac:	mov	w0, #0x9                   	// #9
 3b0:	bl	0 <grub_error>
 3b4:	mov	x0, x19
 3b8:	ldp	x19, x20, [sp, #16]
 3bc:	ldp	x29, x30, [sp], #32
 3c0:	ret
 3c4:	ldrh	w1, [x19, #24]
 3c8:	mov	w0, #0x5a4d                	// #23117
 3cc:	cmp	w1, w0
 3d0:	b.ne	398 <grub_mod_init-0x548>  // b.any
 3d4:	mov	w0, #0x3c                  	// #60
 3d8:	ldrh	w1, [x19, #12]
 3dc:	str	w0, [x19, #120]
 3e0:	ldrb	w0, [x19, #13]
 3e4:	orr	w1, w0, w1, lsl #8
 3e8:	and	w1, w1, #0xffff
 3ec:	cmp	w1, #0x13
 3f0:	b.hi	398 <grub_mod_init-0x548>  // b.pmore
 3f4:	ldrh	w0, [x19, #28]
 3f8:	mov	w2, #0xffff                	// #65535
 3fc:	str	wzr, [x19, #104]
 400:	str	x20, [x19, #112]
 404:	cmp	w0, w2
 408:	b.ne	430 <grub_mod_init-0x4b0>  // b.any
 40c:	mov	x0, #0x2                   	// #2
 410:	str	x0, [x19, #128]
 414:	add	w1, w1, #0x9
 418:	ldr	x0, [x19, #128]
 41c:	lsl	x1, x0, x1
 420:	lsr	x1, x1, #2
 424:	str	w1, [x19, #96]
 428:	cbnz	w1, 3b4 <grub_mod_init-0x52c>
 42c:	b	398 <grub_mod_init-0x548>
 430:	and	w2, w0, #0xfffffffd
 434:	cbz	w2, 398 <grub_mod_init-0x548>
 438:	and	w2, w0, #0xffffff01
 43c:	cbnz	w2, 398 <grub_mod_init-0x548>
 440:	ubfx	x0, x0, #1, #7
 444:	b	410 <grub_mod_init-0x4d0>
	...
 458:	stp	x29, x30, [sp, #-160]!
 45c:	mov	x29, sp
 460:	stp	x19, x20, [sp, #16]
 464:	mov	x19, x0
 468:	stp	x21, x22, [sp, #32]
 46c:	mov	x22, x1
 470:	mov	x21, x1
 474:	stp	x23, x24, [sp, #48]
 478:	add	x23, sp, #0x60
 47c:	stp	x25, x26, [sp, #64]
 480:	mov	x20, x21
 484:	ldrb	w0, [x20]
 488:	cmp	w0, #0x2f
 48c:	b.eq	4c4 <grub_mod_init-0x41c>  // b.none
 490:	cbz	w0, 658 <grub_mod_init-0x288>
 494:	ldrh	w0, [x19, #32]
 498:	tbnz	w0, #6, 4cc <grub_mod_init-0x414>
 49c:	adrp	x0, 0 <grub_mod_init-0x8e0>
 4a0:	ldr	x1, [x0]
 4a4:	mov	w0, #0x4                   	// #4
 4a8:	bl	0 <grub_error>
 4ac:	ldp	x19, x20, [sp, #16]
 4b0:	ldp	x21, x22, [sp, #32]
 4b4:	ldp	x23, x24, [sp, #48]
 4b8:	ldp	x25, x26, [sp, #64]
 4bc:	ldp	x29, x30, [sp], #160
 4c0:	ret
 4c4:	add	x20, x20, #0x1
 4c8:	b	484 <grub_mod_init-0x45c>
 4cc:	mov	x21, x20
 4d0:	ldrb	w0, [x21, #1]!
 4d4:	cmp	w0, #0x2f
 4d8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 4dc:	b.ne	4d0 <grub_mod_init-0x410>  // b.any
 4e0:	sub	x25, x21, x20
 4e4:	mov	w24, #0x0                   	// #0
 4e8:	ldr	w0, [x19, #40]
 4ec:	rev	w0, w0
 4f0:	cmp	w24, w0
 4f4:	b.cc	51c <grub_mod_init-0x3c4>  // b.lo, b.ul, b.last
 4f8:	adrp	x0, 0 <grub_mod_init-0x8e0>
 4fc:	mov	x2, x22
 500:	ldr	x1, [x0]
 504:	mov	w0, #0x5                   	// #5
 508:	bl	0 <grub_error>
 50c:	adrp	x0, 0 <grub_mod_init-0x8e0>
 510:	ldr	x0, [x0]
 514:	ldr	w0, [x0]
 518:	b	4ac <grub_mod_init-0x434>
 51c:	mov	w26, w24
 520:	add	x5, sp, #0x5c
 524:	mov	x3, x26
 528:	mov	x0, x19
 52c:	mov	x4, #0x4                   	// #4
 530:	mov	x2, #0x0                   	// #0
 534:	mov	x1, #0x0                   	// #0
 538:	bl	b8 <grub_mod_init-0x828>
 53c:	tbnz	x0, #63, 50c <grub_mod_init-0x3d4>
 540:	ldrsw	x4, [x19, #120]
 544:	mov	x5, x23
 548:	add	x3, x26, #0x4
 54c:	mov	x0, x19
 550:	mov	x2, #0x0                   	// #0
 554:	mov	x1, #0x0                   	// #0
 558:	bl	b8 <grub_mod_init-0x828>
 55c:	tbnz	x0, #63, 50c <grub_mod_init-0x3d4>
 560:	ldr	w0, [x19, #120]
 564:	mov	x2, x25
 568:	add	w1, w0, #0x4
 56c:	add	w24, w24, w1
 570:	mov	x1, x23
 574:	strb	wzr, [x23, w0, sxtw]
 578:	mov	x0, x20
 57c:	bl	0 <grub_strncmp>
 580:	cbnz	w0, 4e8 <grub_mod_init-0x3f8>
 584:	ldrb	w0, [x23, x25]
 588:	cbnz	w0, 4e8 <grub_mod_init-0x3f8>
 58c:	ldr	w1, [sp, #92]
 590:	mov	x0, x19
 594:	ldr	w24, [x19, #100]
 598:	rev	w1, w1
 59c:	bl	1c <grub_mod_init-0x8c4>
 5a0:	ldrh	w0, [x19, #32]
 5a4:	lsl	w0, w0, #8
 5a8:	and	w0, w0, #0xffe000
 5ac:	and	w0, w0, #0xffffbfff
 5b0:	and	w0, w0, #0xffff
 5b4:	cmp	w0, #0xa, lsl #12
 5b8:	b.ne	480 <grub_mod_init-0x460>  // b.any
 5bc:	ldr	w0, [x19, #104]
 5c0:	ldr	w25, [x19, #40]
 5c4:	add	w0, w0, #0x1
 5c8:	str	w0, [x19, #104]
 5cc:	cmp	w0, #0x8
 5d0:	b.le	5f8 <grub_mod_init-0x2e8>
 5d4:	adrp	x0, 0 <grub_mod_init-0x8e0>
 5d8:	ldr	x1, [x0]
 5dc:	mov	w0, #0x19                  	// #25
 5e0:	bl	0 <grub_error>
 5e4:	adrp	x0, 0 <grub_mod_init-0x8e0>
 5e8:	ldr	x0, [x0]
 5ec:	ldr	w0, [x0]
 5f0:	cbz	w0, 480 <grub_mod_init-0x460>
 5f4:	b	4ac <grub_mod_init-0x434>
 5f8:	rev	w25, w25
 5fc:	add	x0, x25, #0x1
 600:	bl	0 <grub_malloc>
 604:	mov	x20, x0
 608:	cbz	x0, 5e4 <grub_mod_init-0x2fc>
 60c:	mov	x5, x0
 610:	mov	x4, x25
 614:	mov	x0, x19
 618:	mov	x3, #0x0                   	// #0
 61c:	mov	x2, #0x0                   	// #0
 620:	mov	x1, #0x0                   	// #0
 624:	bl	b8 <grub_mod_init-0x828>
 628:	tbnz	x0, #63, 5e4 <grub_mod_init-0x2fc>
 62c:	strb	wzr, [x20, x25]
 630:	ldrb	w0, [x20]
 634:	cmp	w0, #0x2f
 638:	mov	x0, x19
 63c:	csinc	w1, w24, wzr, ne  // ne = any
 640:	bl	1c <grub_mod_init-0x8c4>
 644:	cbnz	w0, 5e4 <grub_mod_init-0x2fc>
 648:	mov	x1, x20
 64c:	mov	x0, x19
 650:	bl	458 <grub_mod_init-0x488>
 654:	b	5e4 <grub_mod_init-0x2fc>
 658:	mov	w0, #0x0                   	// #0
 65c:	b	4ac <grub_mod_init-0x434>
	...
 680:	stp	x29, x30, [sp, #-176]!
 684:	mov	x29, sp
 688:	ldr	x0, [x0]
 68c:	stp	x19, x20, [sp, #16]
 690:	mov	x20, x1
 694:	stp	x21, x22, [sp, #32]
 698:	mov	x22, x2
 69c:	stp	x23, x24, [sp, #48]
 6a0:	mov	x23, x3
 6a4:	stp	x25, x26, [sp, #64]
 6a8:	bl	350 <grub_mod_init-0x590>
 6ac:	adrp	x1, 0 <grub_mod_init-0x8e0>
 6b0:	ldr	x21, [x1]
 6b4:	cbnz	x0, 6d4 <grub_mod_init-0x20c>
 6b8:	ldr	w0, [x21]
 6bc:	ldp	x19, x20, [sp, #16]
 6c0:	ldp	x21, x22, [sp, #32]
 6c4:	ldp	x23, x24, [sp, #48]
 6c8:	ldp	x25, x26, [sp, #64]
 6cc:	ldp	x29, x30, [sp], #176
 6d0:	ret
 6d4:	mov	x19, x0
 6d8:	mov	w1, #0x1                   	// #1
 6dc:	bl	1c <grub_mod_init-0x8c4>
 6e0:	ldr	w0, [x21]
 6e4:	cbnz	w0, 79c <grub_mod_init-0x144>
 6e8:	mov	x1, x20
 6ec:	mov	x0, x19
 6f0:	bl	458 <grub_mod_init-0x488>
 6f4:	ldr	w20, [x21]
 6f8:	cbnz	w20, 79c <grub_mod_init-0x144>
 6fc:	ldrh	w0, [x19, #32]
 700:	tbz	w0, #6, 78c <grub_mod_init-0x154>
 704:	add	x24, sp, #0x70
 708:	ldr	w0, [x19, #40]
 70c:	rev	w0, w0
 710:	cmp	w20, w0
 714:	b.cs	79c <grub_mod_init-0x144>  // b.hs, b.nlast
 718:	mov	x2, #0x10                  	// #16
 71c:	mov	w1, #0x0                   	// #0
 720:	ldr	w25, [x19, #100]
 724:	add	x0, sp, #0x60
 728:	mov	w26, w20
 72c:	bl	0 <grub_memset>
 730:	add	x5, sp, #0x5c
 734:	mov	x3, x26
 738:	mov	x0, x19
 73c:	mov	x4, #0x4                   	// #4
 740:	mov	x2, #0x0                   	// #0
 744:	mov	x1, #0x0                   	// #0
 748:	bl	b8 <grub_mod_init-0x828>
 74c:	tbnz	x0, #63, 6b8 <grub_mod_init-0x228>
 750:	ldrsw	x4, [x19, #120]
 754:	mov	x5, x24
 758:	add	x3, x26, #0x4
 75c:	mov	x0, x19
 760:	mov	x2, #0x0                   	// #0
 764:	mov	x1, #0x0                   	// #0
 768:	bl	b8 <grub_mod_init-0x828>
 76c:	tbnz	x0, #63, 6b8 <grub_mod_init-0x228>
 770:	ldr	w0, [x19, #120]
 774:	ldr	w1, [sp, #92]
 778:	strb	wzr, [x24, w0, sxtw]
 77c:	cbnz	w1, 7a8 <grub_mod_init-0x138>
 780:	add	w0, w0, #0x4
 784:	add	w20, w20, w0
 788:	b	708 <grub_mod_init-0x1d8>
 78c:	adrp	x0, 0 <grub_mod_init-0x8e0>
 790:	ldr	x1, [x0]
 794:	mov	w0, #0x4                   	// #4
 798:	bl	0 <grub_error>
 79c:	mov	x0, x19
 7a0:	bl	0 <grub_free>
 7a4:	b	6b8 <grub_mod_init-0x228>
 7a8:	rev	w1, w1
 7ac:	mov	x0, x19
 7b0:	bl	1c <grub_mod_init-0x8c4>
 7b4:	ldrh	w0, [x19, #32]
 7b8:	mov	x2, x23
 7bc:	ldrb	w1, [sp, #96]
 7c0:	ubfx	x0, x0, #6, #1
 7c4:	and	w1, w1, #0xfffffffc
 7c8:	orr	w0, w0, #0x2
 7cc:	orr	w0, w0, w1
 7d0:	strb	w0, [sp, #96]
 7d4:	ldr	w0, [x19, #48]
 7d8:	add	x1, sp, #0x60
 7dc:	rev	w0, w0
 7e0:	str	w0, [sp, #100]
 7e4:	mov	x0, x24
 7e8:	blr	x22
 7ec:	cbnz	w0, 79c <grub_mod_init-0x144>
 7f0:	mov	w1, w25
 7f4:	mov	x0, x19
 7f8:	bl	1c <grub_mod_init-0x8c4>
 7fc:	ldr	w0, [x19, #120]
 800:	b	780 <grub_mod_init-0x160>
 804:	nop
	...
 818:	stp	x29, x30, [sp, #-48]!
 81c:	mov	x29, sp
 820:	stp	x21, x22, [sp, #32]
 824:	mov	x22, x0
 828:	mov	x21, x1
 82c:	ldr	x0, [x0, #8]
 830:	stp	x19, x20, [sp, #16]
 834:	ldr	x0, [x0]
 838:	bl	350 <grub_mod_init-0x590>
 83c:	adrp	x1, 0 <grub_mod_init-0x8e0>
 840:	ldr	x20, [x1]
 844:	cbnz	x0, 85c <grub_mod_init-0x84>
 848:	ldr	w0, [x20]
 84c:	ldp	x19, x20, [sp, #16]
 850:	ldp	x21, x22, [sp, #32]
 854:	ldp	x29, x30, [sp], #48
 858:	ret
 85c:	mov	x19, x0
 860:	mov	w1, #0x1                   	// #1
 864:	bl	1c <grub_mod_init-0x8c4>
 868:	ldr	w0, [x20]
 86c:	cbz	w0, 87c <grub_mod_init-0x64>
 870:	mov	x0, x19
 874:	bl	0 <grub_free>
 878:	b	848 <grub_mod_init-0x98>
 87c:	cbz	x21, 88c <grub_mod_init-0x54>
 880:	ldrb	w0, [x21]
 884:	cmp	w0, #0x2f
 888:	b.eq	8a4 <grub_mod_init-0x3c>  // b.none
 88c:	adrp	x0, 0 <grub_mod_init-0x8e0>
 890:	mov	x2, x21
 894:	ldr	x1, [x0]
 898:	mov	w0, #0x7                   	// #7
 89c:	bl	0 <grub_error>
 8a0:	b	848 <grub_mod_init-0x98>
 8a4:	mov	x1, x21
 8a8:	mov	x0, x19
 8ac:	bl	458 <grub_mod_init-0x488>
 8b0:	ldr	w0, [x20]
 8b4:	cbnz	w0, 870 <grub_mod_init-0x70>
 8b8:	ldr	w1, [x19, #40]
 8bc:	str	x19, [x22, #80]
 8c0:	rev	w1, w1
 8c4:	str	x1, [x22, #64]
 8c8:	b	84c <grub_mod_init-0x94>
 8cc:	nop
	...

00000000000008e0 <grub_mod_init>:
 8e0:	adrp	x0, 0 <grub_mod_init-0x8e0>
 8e4:	ldr	x1, [x0]
 8e8:	adrp	x0, 0 <grub_mod_init-0x8e0>
 8ec:	ldr	x0, [x0]
 8f0:	b	0 <grub_list_push>
 8f4:	nop
	...

0000000000000908 <grub_mod_fini>:
 908:	adrp	x0, 0 <grub_mod_init-0x8e0>
 90c:	ldr	x0, [x0]
 910:	b	0 <grub_list_remove>
 914:	nop
	...
