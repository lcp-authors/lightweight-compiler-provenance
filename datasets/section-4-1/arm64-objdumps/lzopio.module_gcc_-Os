
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lzopio.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_lzopio_close>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x20, [x0, #80]
  14:	ldr	x0, [x20]
  18:	bl	0 <grub_file_close>
  1c:	ldr	x0, [x20, #64]
  20:	bl	0 <grub_free>
  24:	ldr	x0, [x20, #72]
  28:	bl	0 <grub_free>
  2c:	mov	x0, x20
  30:	bl	0 <grub_free>
  34:	adrp	x0, 0 <grub_lzopio_close>
  38:	ldr	x0, [x0]
  3c:	ldr	w0, [x0]
  40:	stp	xzr, xzr, [x19]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
	...

0000000000000058 <read_block_header>:
  58:	stp	x29, x30, [sp, #-32]!
  5c:	mov	x29, sp
  60:	ldr	w1, [x0, #48]
  64:	str	x19, [sp, #16]
  68:	mov	x19, x0
  6c:	ldr	x0, [x0, #32]
  70:	add	x0, x0, x1
  74:	str	x0, [x19, #32]
  78:	ldr	x0, [x19, #72]
  7c:	bl	0 <grub_free>
  80:	ldr	x0, [x19, #64]
  84:	bl	0 <grub_free>
  88:	stp	xzr, xzr, [x19, #64]
  8c:	add	x1, x19, #0x30
  90:	ldr	x0, [x19]
  94:	mov	x2, #0x4                   	// #4
  98:	bl	0 <grub_file_read>
  9c:	cmp	x0, #0x4
  a0:	b.eq	b4 <read_block_header+0x5c>  // b.none
  a4:	mov	w0, #0xffffffff            	// #-1
  a8:	ldr	x19, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret
  b4:	ldr	w1, [x19, #48]
  b8:	mov	x2, x0
  bc:	ldr	x0, [x19]
  c0:	rev	w1, w1
  c4:	str	w1, [x19, #48]
  c8:	cbnz	w1, e0 <read_block_header+0x88>
  cc:	ldr	x1, [x0, #64]
  d0:	ldr	x0, [x0, #24]
  d4:	cmp	x1, x0
  d8:	csetm	w0, ne  // ne = any
  dc:	b	a8 <read_block_header+0x50>
  e0:	add	x1, x19, #0x34
  e4:	bl	0 <grub_file_read>
  e8:	mov	x2, x0
  ec:	cmp	x0, #0x4
  f0:	b.ne	a4 <read_block_header+0x4c>  // b.any
  f4:	ldp	w1, w0, [x19, #48]
  f8:	rev	w0, w0
  fc:	str	w0, [x19, #52]
 100:	cmp	w0, w1
 104:	b.hi	a4 <read_block_header+0x4c>  // b.pmore
 108:	ldr	w0, [x19, #12]
 10c:	cbnz	w0, 134 <read_block_header+0xdc>
 110:	ldr	w0, [x19, #8]
 114:	cbz	w0, a8 <read_block_header+0x50>
 118:	ldp	w0, w1, [x19, #48]
 11c:	cmp	w1, w0
 120:	b.ne	14c <read_block_header+0xf4>  // b.any
 124:	ldr	w0, [x19, #56]
 128:	str	w0, [x19, #60]
 12c:	mov	w0, #0x0                   	// #0
 130:	b	a8 <read_block_header+0x50>
 134:	ldr	x0, [x19]
 138:	add	x1, x19, #0x38
 13c:	bl	0 <grub_file_read>
 140:	cmp	x0, #0x4
 144:	b.eq	110 <read_block_header+0xb8>  // b.none
 148:	b	a4 <read_block_header+0x4c>
 14c:	ldr	x0, [x19]
 150:	add	x1, x19, #0x3c
 154:	mov	x2, #0x4                   	// #4
 158:	bl	0 <grub_file_read>
 15c:	cmp	x0, #0x4
 160:	b	d8 <read_block_header+0x80>

0000000000000164 <jump_block>:
 164:	stp	x29, x30, [sp, #-32]!
 168:	mov	x29, sp
 16c:	str	x19, [sp, #16]
 170:	mov	x19, x0
 174:	ldr	x0, [x0, #72]
 178:	cbz	x0, 18c <jump_block+0x28>
 17c:	mov	x0, x19
 180:	ldr	x19, [sp, #16]
 184:	ldp	x29, x30, [sp], #32
 188:	b	58 <read_block_header>
 18c:	ldr	x0, [x19]
 190:	ldr	w2, [x19, #52]
 194:	ldr	x1, [x0, #24]
 198:	add	x1, x2, x1
 19c:	bl	0 <grub_file_seek>
 1a0:	cmn	x0, #0x1
 1a4:	b.ne	17c <jump_block+0x18>  // b.any
 1a8:	ldr	x19, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	ret

00000000000001b4 <grub_lzopio_read>:
 1b4:	stp	x29, x30, [sp, #-160]!
 1b8:	mov	x29, sp
 1bc:	stp	x19, x20, [sp, #16]
 1c0:	mov	x20, x0
 1c4:	ldr	x19, [x0, #80]
 1c8:	stp	x23, x24, [sp, #48]
 1cc:	mov	x24, x1
 1d0:	ldr	x0, [x0, #24]
 1d4:	stp	x21, x22, [sp, #32]
 1d8:	mov	x21, x2
 1dc:	ldr	x1, [x19, #32]
 1e0:	stp	x25, x26, [sp, #64]
 1e4:	cmp	x1, x0
 1e8:	b.ls	208 <grub_lzopio_read+0x54>  // b.plast
 1ec:	ldr	x0, [x19]
 1f0:	ldr	x1, [x19, #40]
 1f4:	bl	0 <grub_file_seek>
 1f8:	mov	x0, x19
 1fc:	bl	58 <read_block_header>
 200:	tbnz	w0, #31, 268 <grub_lzopio_read+0xb4>
 204:	str	xzr, [x19, #32]
 208:	ldr	x0, [x19, #32]
 20c:	ldr	w1, [x19, #48]
 210:	ldr	x22, [x20, #24]
 214:	add	x2, x0, w1, uxtw
 218:	cmp	x2, x22
 21c:	b.ls	258 <grub_lzopio_read+0xa4>  // b.plast
 220:	sub	x22, x22, x0
 224:	add	x25, x19, #0x38
 228:	add	x26, x19, #0x3c
 22c:	mov	x23, #0x0                   	// #0
 230:	cbz	x21, 23c <grub_lzopio_read+0x88>
 234:	ldr	w0, [x19, #48]
 238:	cbnz	w0, 280 <grub_lzopio_read+0xcc>
 23c:	mov	x0, x23
 240:	ldp	x19, x20, [sp, #16]
 244:	ldp	x21, x22, [sp, #32]
 248:	ldp	x23, x24, [sp, #48]
 24c:	ldp	x25, x26, [sp, #64]
 250:	ldp	x29, x30, [sp], #160
 254:	ret
 258:	cbz	w1, 3c4 <grub_lzopio_read+0x210>
 25c:	mov	x0, x19
 260:	bl	164 <jump_block>
 264:	tbz	w0, #31, 208 <grub_lzopio_read+0x54>
 268:	adrp	x0, 0 <grub_lzopio_close>
 26c:	mov	x23, #0xffffffffffffffff    	// #-1
 270:	ldr	x1, [x0]
 274:	mov	w0, #0x1a                  	// #26
 278:	bl	0 <grub_error>
 27c:	b	23c <grub_lzopio_read+0x88>
 280:	ldr	x1, [x19, #72]
 284:	cbnz	x1, 30c <grub_lzopio_read+0x158>
 288:	mov	w0, w0
 28c:	str	x0, [sp, #88]
 290:	ldr	w0, [x19, #52]
 294:	bl	0 <grub_malloc>
 298:	str	x0, [x19, #64]
 29c:	mov	x1, x0
 2a0:	cbz	x0, 268 <grub_lzopio_read+0xb4>
 2a4:	ldr	w2, [x19, #52]
 2a8:	ldr	x0, [x19]
 2ac:	bl	0 <grub_file_read>
 2b0:	mov	x3, x0
 2b4:	ldr	w0, [x19, #52]
 2b8:	cmp	x3, x0
 2bc:	b.ne	268 <grub_lzopio_read+0xb4>  // b.any
 2c0:	ldr	x0, [x19, #24]
 2c4:	cbz	x0, 2f4 <grub_lzopio_read+0x140>
 2c8:	ldr	x1, [x0, #32]
 2cc:	cmp	x1, #0x40
 2d0:	b.hi	268 <grub_lzopio_read+0xb4>  // b.pmore
 2d4:	ldr	x2, [x19, #64]
 2d8:	add	x1, sp, #0x60
 2dc:	bl	0 <grub_crypto_hash>
 2e0:	mov	x1, x26
 2e4:	add	x0, sp, #0x60
 2e8:	mov	x2, #0x4                   	// #4
 2ec:	bl	0 <grub_memcmp>
 2f0:	cbnz	w0, 268 <grub_lzopio_read+0xb4>
 2f4:	ldp	w0, w1, [x19, #48]
 2f8:	cmp	w1, w0
 2fc:	b.ne	354 <grub_lzopio_read+0x1a0>  // b.any
 300:	ldr	x0, [x19, #64]
 304:	str	x0, [x19, #72]
 308:	str	xzr, [x19, #64]
 30c:	ldr	w20, [x19, #48]
 310:	mov	x0, x24
 314:	ldr	x1, [x19, #72]
 318:	sub	x20, x20, x22
 31c:	cmp	x21, x20
 320:	csel	x20, x21, x20, ls  // ls = plast
 324:	add	x1, x1, x22
 328:	mov	x2, x20
 32c:	add	x24, x24, x20
 330:	bl	0 <grub_memmove>
 334:	add	x23, x23, x20
 338:	subs	x21, x21, x20
 33c:	b.eq	34c <grub_lzopio_read+0x198>  // b.none
 340:	mov	x0, x19
 344:	bl	58 <read_block_header>
 348:	tbnz	w0, #31, 268 <grub_lzopio_read+0xb4>
 34c:	mov	x22, #0x0                   	// #0
 350:	b	230 <grub_lzopio_read+0x7c>
 354:	mov	w0, w0
 358:	bl	0 <grub_malloc>
 35c:	str	x0, [x19, #72]
 360:	mov	x2, x0
 364:	cbz	x0, 268 <grub_lzopio_read+0xb4>
 368:	ldr	w1, [x19, #52]
 36c:	add	x3, sp, #0x58
 370:	ldr	x0, [x19, #64]
 374:	mov	x4, #0x0                   	// #0
 378:	bl	790 <lzo1x_decompress_safe>
 37c:	cbnz	w0, 268 <grub_lzopio_read+0xb4>
 380:	ldr	x0, [x19, #16]
 384:	cbz	x0, 3b8 <grub_lzopio_read+0x204>
 388:	ldr	x1, [x0, #32]
 38c:	cmp	x1, #0x40
 390:	b.hi	268 <grub_lzopio_read+0xb4>  // b.pmore
 394:	ldr	w3, [x19, #48]
 398:	add	x1, sp, #0x60
 39c:	ldr	x2, [x19, #72]
 3a0:	bl	0 <grub_crypto_hash>
 3a4:	mov	x1, x25
 3a8:	add	x0, sp, #0x60
 3ac:	mov	x2, #0x4                   	// #4
 3b0:	bl	0 <grub_memcmp>
 3b4:	cbnz	w0, 268 <grub_lzopio_read+0xb4>
 3b8:	ldr	x0, [x19, #64]
 3bc:	bl	0 <grub_free>
 3c0:	b	308 <grub_lzopio_read+0x154>
 3c4:	mov	x23, #0x0                   	// #0
 3c8:	b	23c <grub_lzopio_read+0x88>
 3cc:	nop
	...

00000000000003d8 <grub_lzopio_open>:
 3d8:	stp	x29, x30, [sp, #-128]!
 3dc:	mov	x29, sp
 3e0:	stp	x19, x20, [sp, #16]
 3e4:	stp	x21, x22, [sp, #32]
 3e8:	mov	x22, x0
 3ec:	stp	x23, x24, [sp, #48]
 3f0:	str	x25, [sp, #64]
 3f4:	tbnz	w1, #17, 5b0 <grub_lzopio_open+0x1d8>
 3f8:	mov	x0, #0x68                  	// #104
 3fc:	bl	0 <grub_zalloc>
 400:	mov	x19, x0
 404:	cbz	x0, 424 <grub_lzopio_open+0x4c>
 408:	mov	x0, #0x50                  	// #80
 40c:	bl	0 <grub_zalloc>
 410:	mov	x25, x0
 414:	cbnz	x0, 440 <grub_lzopio_open+0x68>
 418:	mov	x0, x19
 41c:	mov	x19, #0x0                   	// #0
 420:	bl	0 <grub_free>
 424:	mov	x0, x19
 428:	ldp	x19, x20, [sp, #16]
 42c:	ldp	x21, x22, [sp, #32]
 430:	ldp	x23, x24, [sp, #48]
 434:	ldr	x25, [sp, #64]
 438:	ldp	x29, x30, [sp], #128
 43c:	ret
 440:	ldr	x0, [x22, #8]
 444:	str	x22, [x25]
 448:	str	x0, [x19, #8]
 44c:	adrp	x0, 0 <grub_lzopio_close>
 450:	str	x25, [x19, #80]
 454:	ldr	x0, [x0]
 458:	str	x0, [x19, #16]
 45c:	mov	x0, #0xffffffffffffffff    	// #-1
 460:	str	x0, [x19, #64]
 464:	mov	w0, #0x1                   	// #1
 468:	str	w0, [x19, #72]
 46c:	ldr	x0, [x22, #24]
 470:	cbz	x0, 480 <grub_lzopio_open+0xa8>
 474:	mov	x0, x22
 478:	mov	x1, #0x0                   	// #0
 47c:	bl	0 <grub_file_seek>
 480:	ldr	x20, [x19, #80]
 484:	add	x1, sp, #0x58
 488:	mov	x2, #0x22                  	// #34
 48c:	ldr	x0, [x20]
 490:	bl	0 <grub_file_read>
 494:	cmp	x0, #0x22
 498:	b.ne	588 <grub_lzopio_open+0x1b0>  // b.any
 49c:	adrp	x0, 0 <grub_lzopio_close>
 4a0:	mov	x2, #0x9                   	// #9
 4a4:	ldr	x1, [x0]
 4a8:	add	x0, sp, #0x58
 4ac:	bl	0 <grub_memcmp>
 4b0:	cbnz	w0, 588 <grub_lzopio_open+0x1b0>
 4b4:	ldurh	w0, [sp, #99]
 4b8:	ldrb	w1, [sp, #100]
 4bc:	orr	w0, w1, w0, lsl #8
 4c0:	and	w0, w0, #0xffff
 4c4:	cmp	w0, #0x93f
 4c8:	b.ls	588 <grub_lzopio_open+0x1b0>  // b.plast
 4cc:	ldrb	w1, [sp, #102]
 4d0:	ldurh	w0, [sp, #101]
 4d4:	orr	w0, w1, w0, lsl #8
 4d8:	mov	w1, #0x2050                	// #8272
 4dc:	cmp	w1, w0, uxth
 4e0:	b.cc	588 <grub_lzopio_open+0x1b0>  // b.lo, b.ul, b.last
 4e4:	ldur	w21, [sp, #105]
 4e8:	rev	w21, w21
 4ec:	tbz	w21, #8, 5b8 <grub_lzopio_open+0x1e0>
 4f0:	mov	w0, #0x1                   	// #1
 4f4:	str	w0, [x20, #12]
 4f8:	adrp	x0, 0 <grub_lzopio_close>
 4fc:	ldr	x0, [x0]
 500:	bl	0 <grub_crypto_lookup_md_by_name>
 504:	str	x0, [x20, #16]
 508:	tbz	w21, #9, 5d0 <grub_lzopio_open+0x1f8>
 50c:	mov	w0, #0x1                   	// #1
 510:	str	w0, [x20, #8]
 514:	adrp	x0, 0 <grub_lzopio_close>
 518:	ldr	x0, [x0]
 51c:	bl	0 <grub_crypto_lookup_md_by_name>
 520:	str	x0, [x20, #24]
 524:	tbz	w21, #12, 5e8 <grub_lzopio_open+0x210>
 528:	adrp	x0, 0 <grub_lzopio_close>
 52c:	ldr	x0, [x0]
 530:	bl	0 <grub_crypto_lookup_md_by_name>
 534:	mov	x21, x0
 538:	cbz	x0, 5f4 <grub_lzopio_open+0x21c>
 53c:	ldr	x0, [x0, #72]
 540:	bl	0 <grub_malloc>
 544:	mov	x23, x0
 548:	cbz	x0, 588 <grub_lzopio_open+0x1b0>
 54c:	ldr	x1, [x21, #40]
 550:	blr	x1
 554:	ldr	x3, [x21, #48]
 558:	add	x1, sp, #0x61
 55c:	mov	x0, x23
 560:	mov	x2, #0x19                  	// #25
 564:	blr	x3
 568:	ldrb	w0, [sp, #121]
 56c:	cbz	w0, 640 <grub_lzopio_open+0x268>
 570:	and	x0, x0, #0xff
 574:	bl	0 <grub_malloc>
 578:	mov	x24, x0
 57c:	cbnz	x0, 5fc <grub_lzopio_open+0x224>
 580:	mov	x0, x23
 584:	bl	0 <grub_free>
 588:	adrp	x0, 0 <grub_lzopio_close>
 58c:	mov	x1, #0x0                   	// #0
 590:	ldr	x0, [x0]
 594:	str	wzr, [x0]
 598:	mov	x0, x22
 59c:	bl	0 <grub_file_seek>
 5a0:	mov	x0, x25
 5a4:	bl	0 <grub_free>
 5a8:	mov	x0, x19
 5ac:	bl	0 <grub_free>
 5b0:	mov	x19, x22
 5b4:	b	424 <grub_lzopio_open+0x4c>
 5b8:	tbz	w21, #0, 508 <grub_lzopio_open+0x130>
 5bc:	mov	w0, #0x1                   	// #1
 5c0:	str	w0, [x20, #12]
 5c4:	adrp	x0, 0 <grub_lzopio_close>
 5c8:	ldr	x0, [x0]
 5cc:	b	500 <grub_lzopio_open+0x128>
 5d0:	tbz	w21, #1, 524 <grub_lzopio_open+0x14c>
 5d4:	mov	w0, #0x1                   	// #1
 5d8:	str	w0, [x20, #8]
 5dc:	adrp	x0, 0 <grub_lzopio_close>
 5e0:	ldr	x0, [x0]
 5e4:	b	51c <grub_lzopio_open+0x144>
 5e8:	adrp	x0, 0 <grub_lzopio_close>
 5ec:	ldr	x0, [x0]
 5f0:	b	530 <grub_lzopio_open+0x158>
 5f4:	mov	x23, #0x0                   	// #0
 5f8:	b	568 <grub_lzopio_open+0x190>
 5fc:	ldrb	w2, [sp, #121]
 600:	mov	x1, x0
 604:	ldr	x0, [x20]
 608:	bl	0 <grub_file_read>
 60c:	mov	x2, x0
 610:	ldrb	w0, [sp, #121]
 614:	cmp	x2, x0
 618:	b.eq	624 <grub_lzopio_open+0x24c>  // b.none
 61c:	mov	x0, x24
 620:	b	584 <grub_lzopio_open+0x1ac>
 624:	cbz	x21, 638 <grub_lzopio_open+0x260>
 628:	ldr	x3, [x21, #48]
 62c:	mov	x1, x24
 630:	mov	x0, x23
 634:	blr	x3
 638:	mov	x0, x24
 63c:	bl	0 <grub_free>
 640:	cbz	x21, 650 <grub_lzopio_open+0x278>
 644:	ldr	x1, [x21, #56]
 648:	mov	x0, x23
 64c:	blr	x1
 650:	ldr	x0, [x20]
 654:	add	x1, sp, #0x54
 658:	mov	x2, #0x4                   	// #4
 65c:	bl	0 <grub_file_read>
 660:	mov	x24, x0
 664:	cmp	x0, #0x4
 668:	b.ne	588 <grub_lzopio_open+0x1b0>  // b.any
 66c:	cbnz	x21, 6bc <grub_lzopio_open+0x2e4>
 670:	ldr	x0, [x20]
 674:	ldr	x23, [x19, #80]
 678:	ldr	x0, [x0, #24]
 67c:	str	x0, [x20, #40]
 680:	mov	x0, x23
 684:	bl	58 <read_block_header>
 688:	tbnz	w0, #31, 588 <grub_lzopio_open+0x1b0>
 68c:	mov	x21, #0x0                   	// #0
 690:	ldr	w0, [x23, #48]
 694:	cbnz	w0, 6e0 <grub_lzopio_open+0x308>
 698:	ldr	x0, [x20]
 69c:	ldr	x1, [x20, #40]
 6a0:	str	x21, [x19, #64]
 6a4:	bl	0 <grub_file_seek>
 6a8:	mov	x0, x20
 6ac:	bl	58 <read_block_header>
 6b0:	tbnz	w0, #31, 588 <grub_lzopio_open+0x1b0>
 6b4:	str	xzr, [x20, #32]
 6b8:	b	424 <grub_lzopio_open+0x4c>
 6bc:	ldr	x1, [x21, #64]
 6c0:	mov	x0, x23
 6c4:	blr	x1
 6c8:	mov	x1, x0
 6cc:	mov	x2, x24
 6d0:	add	x0, sp, #0x54
 6d4:	bl	0 <grub_memcmp>
 6d8:	cbz	w0, 670 <grub_lzopio_open+0x298>
 6dc:	b	588 <grub_lzopio_open+0x1b0>
 6e0:	add	x21, x21, w0, uxtw
 6e4:	mov	x0, x23
 6e8:	bl	164 <jump_block>
 6ec:	tbz	w0, #31, 690 <grub_lzopio_open+0x2b8>
 6f0:	b	588 <grub_lzopio_open+0x1b0>
 6f4:	nop
	...

0000000000000720 <grub_mod_init>:
 720:	adrp	x0, 0 <grub_lzopio_close>
 724:	adrp	x1, 0 <grub_lzopio_close>
 728:	ldr	x0, [x0]
 72c:	ldr	x1, [x1]
 730:	str	x1, [x0, #24]
 734:	ret
	...

0000000000000748 <grub_mod_fini>:
 748:	adrp	x0, 0 <grub_lzopio_close>
 74c:	ldr	x0, [x0]
 750:	str	xzr, [x0, #24]
 754:	ret
	...

0000000000000760 <assert_real.constprop.0>:
 760:	mov	w2, w0
 764:	cbnz	w1, 77c <assert_real.constprop.0+0x1c>
 768:	adrp	x0, 0 <grub_lzopio_close>
 76c:	ldr	x1, [x0]
 770:	adrp	x0, 0 <grub_lzopio_close>
 774:	ldr	x0, [x0]
 778:	b	0 <grub_printf>
 77c:	ret
	...

0000000000000790 <lzo1x_decompress_safe>:
 790:	stp	x29, x30, [sp, #-96]!
 794:	mov	x29, sp
 798:	stp	x19, x20, [sp, #16]
 79c:	mov	x20, x0
 7a0:	stp	x21, x22, [sp, #32]
 7a4:	stp	x23, x24, [sp, #48]
 7a8:	mov	x23, x2
 7ac:	add	x24, x0, x1
 7b0:	stp	x25, x26, [sp, #64]
 7b4:	mov	x25, x3
 7b8:	ldr	x2, [x3]
 7bc:	str	x27, [sp, #80]
 7c0:	str	xzr, [x3]
 7c4:	add	x26, x23, x2
 7c8:	ldrb	w0, [x0]
 7cc:	cmp	w0, #0x11
 7d0:	b.ls	bbc <lzo1x_decompress_safe+0x42c>  // b.plast
 7d4:	sub	w3, w0, #0x11
 7d8:	add	x20, x20, #0x1
 7dc:	cmp	w3, #0x3
 7e0:	sxtw	x21, w3
 7e4:	b.le	b84 <lzo1x_decompress_safe+0x3f4>
 7e8:	cmp	x2, x21
 7ec:	b.cc	bec <lzo1x_decompress_safe+0x45c>  // b.lo, b.ul, b.last
 7f0:	sub	x1, x1, #0x1
 7f4:	add	x2, x21, #0x1
 7f8:	cmp	x1, x2
 7fc:	b.cc	bd8 <lzo1x_decompress_safe+0x448>  // b.lo, b.ul, b.last
 800:	and	x0, x0, #0xff
 804:	mov	x1, #0x0                   	// #0
 808:	sub	x0, x0, #0x11
 80c:	ldrb	w2, [x20, x1]
 810:	strb	w2, [x23, x1]
 814:	add	x1, x1, #0x1
 818:	cmp	x0, x1
 81c:	b.ne	80c <lzo1x_decompress_safe+0x7c>  // b.any
 820:	add	x0, x20, x21
 824:	add	x19, x23, x21
 828:	b	8c4 <lzo1x_decompress_safe+0x134>
 82c:	ldrb	w27, [x20], #1
 830:	cmp	x27, #0xf
 834:	b.hi	8d4 <lzo1x_decompress_safe+0x144>  // b.pmore
 838:	cbnz	x27, 854 <lzo1x_decompress_safe+0xc4>
 83c:	cmp	x24, x20
 840:	b.eq	bdc <lzo1x_decompress_safe+0x44c>  // b.none
 844:	ldrb	w0, [x20], #1
 848:	cbz	w0, 94c <lzo1x_decompress_safe+0x1bc>
 84c:	add	w0, w0, #0xf
 850:	add	x27, x27, w0, sxtw
 854:	cmp	x27, #0x0
 858:	mov	w0, #0x106b                	// #4203
 85c:	cset	w1, ne  // ne = any
 860:	bl	760 <assert_real.constprop.0>
 864:	add	x2, x27, #0x3
 868:	sub	x0, x26, x19
 86c:	cmp	x0, x2
 870:	b.cc	bf0 <lzo1x_decompress_safe+0x460>  // b.lo, b.ul, b.last
 874:	sub	x0, x24, x20
 878:	add	x1, x27, #0x4
 87c:	cmp	x0, x1
 880:	b.cc	bdc <lzo1x_decompress_safe+0x44c>  // b.lo, b.ul, b.last
 884:	ldrb	w0, [x20]
 888:	add	x3, x19, #0x3
 88c:	strb	w0, [x19]
 890:	ldrb	w0, [x20, #1]
 894:	strb	w0, [x19, #1]
 898:	add	x0, x20, #0x3
 89c:	ldrb	w1, [x20, #2]
 8a0:	strb	w1, [x19, #2]
 8a4:	mov	x1, #0x3                   	// #3
 8a8:	ldrb	w4, [x20, x1]
 8ac:	strb	w4, [x19, x1]
 8b0:	add	x1, x1, #0x1
 8b4:	cmp	x2, x1
 8b8:	b.ne	8a8 <lzo1x_decompress_safe+0x118>  // b.any
 8bc:	add	x0, x0, x27
 8c0:	add	x19, x3, x27
 8c4:	ldrb	w27, [x0]
 8c8:	cmp	x27, #0xf
 8cc:	b.ls	954 <lzo1x_decompress_safe+0x1c4>  // b.plast
 8d0:	add	x20, x0, #0x1
 8d4:	cmp	x27, #0x3f
 8d8:	b.ls	a10 <lzo1x_decompress_safe+0x280>  // b.plast
 8dc:	ubfx	x22, x27, #2, #3
 8e0:	lsr	x21, x27, #5
 8e4:	mvn	x0, x22
 8e8:	ldrb	w22, [x20], #1
 8ec:	sub	x27, x21, #0x1
 8f0:	sub	x22, x0, w22, uxtb #3
 8f4:	add	x22, x19, x22
 8f8:	cmp	x23, x22
 8fc:	ccmp	x19, x22, #0x0, ls  // ls = plast
 900:	b.ls	c00 <lzo1x_decompress_safe+0x470>  // b.plast
 904:	sub	x0, x26, x19
 908:	add	x21, x21, #0x1
 90c:	cmp	x0, x21
 910:	b.cc	bf0 <lzo1x_decompress_safe+0x460>  // b.lo, b.ul, b.last
 914:	mov	x1, x19
 918:	ldrb	w0, [x22]
 91c:	add	x2, x27, #0x2
 920:	strb	w0, [x1], #2
 924:	ldrb	w0, [x22, #1]
 928:	strb	w0, [x19, #1]
 92c:	mov	x0, #0x2                   	// #2
 930:	ldrb	w3, [x22, x0]
 934:	strb	w3, [x19, x0]
 938:	add	x0, x0, #0x1
 93c:	cmp	x2, x0
 940:	b.ne	930 <lzo1x_decompress_safe+0x1a0>  // b.any
 944:	add	x19, x1, x27
 948:	b	9a0 <lzo1x_decompress_safe+0x210>
 94c:	add	x27, x27, #0xff
 950:	b	83c <lzo1x_decompress_safe+0xac>
 954:	ldrb	w21, [x0, #1]
 958:	mov	x1, #0xfffffffffffff7ff    	// #-2049
 95c:	sub	x1, x1, x27, lsr #2
 960:	add	x20, x0, #0x2
 964:	sub	x21, x1, w21, uxtb #2
 968:	add	x21, x19, x21
 96c:	cmp	x23, x21
 970:	ccmp	x19, x21, #0x0, ls  // ls = plast
 974:	b.ls	c00 <lzo1x_decompress_safe+0x470>  // b.plast
 978:	sub	x0, x26, x19
 97c:	cmp	x0, #0x2
 980:	b.ls	bf0 <lzo1x_decompress_safe+0x460>  // b.plast
 984:	ldrb	w0, [x21]
 988:	add	x19, x19, #0x3
 98c:	sturb	w0, [x19, #-3]
 990:	ldrb	w0, [x21, #1]
 994:	sturb	w0, [x19, #-2]
 998:	ldrb	w0, [x21, #2]
 99c:	sturb	w0, [x19, #-1]
 9a0:	ldurb	w21, [x20, #-2]
 9a4:	ands	w21, w21, #0x3
 9a8:	b.eq	bc0 <lzo1x_decompress_safe+0x430>  // b.none
 9ac:	and	x21, x21, #0xff
 9b0:	mov	w1, #0x1                   	// #1
 9b4:	mov	w0, #0x11a6                	// #4518
 9b8:	bl	760 <assert_real.constprop.0>
 9bc:	mov	w0, #0x11a6                	// #4518
 9c0:	mov	w1, #0x1                   	// #1
 9c4:	bl	760 <assert_real.constprop.0>
 9c8:	sub	x0, x26, x19
 9cc:	cmp	x0, x21
 9d0:	b.cc	bf0 <lzo1x_decompress_safe+0x460>  // b.lo, b.ul, b.last
 9d4:	sub	x0, x24, x20
 9d8:	add	x1, x21, #0x1
 9dc:	cmp	x0, x1
 9e0:	b.cc	bdc <lzo1x_decompress_safe+0x44c>  // b.lo, b.ul, b.last
 9e4:	ldrb	w0, [x20]
 9e8:	cmp	x21, #0x1
 9ec:	strb	w0, [x19]
 9f0:	b.ne	b8c <lzo1x_decompress_safe+0x3fc>  // b.any
 9f4:	add	x0, x20, #0x1
 9f8:	add	x19, x19, #0x1
 9fc:	add	x20, x0, #0x1
 a00:	cmp	x24, x20
 a04:	b.ls	bc8 <lzo1x_decompress_safe+0x438>  // b.plast
 a08:	ldrb	w27, [x0]
 a0c:	b	8d4 <lzo1x_decompress_safe+0x144>
 a10:	cmp	x27, #0x1f
 a14:	b.ls	a90 <lzo1x_decompress_safe+0x300>  // b.plast
 a18:	ands	x27, x27, #0x1f
 a1c:	b.ne	a38 <lzo1x_decompress_safe+0x2a8>  // b.any
 a20:	cmp	x20, x24
 a24:	b.eq	bdc <lzo1x_decompress_safe+0x44c>  // b.none
 a28:	ldrb	w0, [x20], #1
 a2c:	cbz	w0, a84 <lzo1x_decompress_safe+0x2f4>
 a30:	add	w0, w0, #0x1f
 a34:	add	x27, x27, w0, sxtw
 a38:	ldrb	w0, [x20, #1]
 a3c:	add	x20, x20, #0x2
 a40:	ldurb	w22, [x20, #-2]
 a44:	lsl	w0, w0, #6
 a48:	add	w22, w0, w22, lsr #2
 a4c:	sxtw	x22, w22
 a50:	mvn	x22, x22
 a54:	add	x22, x19, x22
 a58:	cmp	x22, x23
 a5c:	ccmp	x19, x22, #0x0, cs  // cs = hs, nlast
 a60:	b.ls	c00 <lzo1x_decompress_safe+0x470>  // b.plast
 a64:	cmp	x27, #0x0
 a68:	mov	w0, #0x116b                	// #4459
 a6c:	cset	w1, ne  // ne = any
 a70:	bl	760 <assert_real.constprop.0>
 a74:	sub	x0, x26, x19
 a78:	add	x1, x27, #0x2
 a7c:	cmp	x0, x1
 a80:	b	910 <lzo1x_decompress_safe+0x180>
 a84:	add	x27, x27, #0xff
 a88:	cmp	x24, x20
 a8c:	b	a24 <lzo1x_decompress_safe+0x294>
 a90:	cmp	x27, #0xf
 a94:	b.ls	b40 <lzo1x_decompress_safe+0x3b0>  // b.plast
 a98:	lsl	x22, x27, #11
 a9c:	ands	x27, x27, #0x7
 aa0:	and	x1, x22, #0x4000
 aa4:	b.ne	ac0 <lzo1x_decompress_safe+0x330>  // b.any
 aa8:	cmp	x20, x24
 aac:	b.eq	bdc <lzo1x_decompress_safe+0x44c>  // b.none
 ab0:	ldrb	w0, [x20], #1
 ab4:	cbz	w0, b2c <lzo1x_decompress_safe+0x39c>
 ab8:	add	w0, w0, #0x7
 abc:	add	x27, x27, w0, sxtw
 ac0:	ldrb	w0, [x20, #1]
 ac4:	add	x20, x20, #0x2
 ac8:	ldurb	w22, [x20, #-2]
 acc:	lsl	w0, w0, #6
 ad0:	add	w22, w0, w22, lsr #2
 ad4:	add	x22, x1, w22, sxtw
 ad8:	sub	x22, x19, x22
 adc:	cmp	x19, x22
 ae0:	b.ne	b38 <lzo1x_decompress_safe+0x3a8>  // b.any
 ae4:	cmp	x27, #0x1
 ae8:	mov	w0, #0x11b7                	// #4535
 aec:	cset	w1, eq  // eq = none
 af0:	sub	x19, x19, x23
 af4:	bl	760 <assert_real.constprop.0>
 af8:	str	x19, [x25]
 afc:	cmp	x24, x20
 b00:	mov	w0, #0xfffffff8            	// #-8
 b04:	mov	w1, #0xfffffffc            	// #-4
 b08:	csel	w0, w0, w1, hi  // hi = pmore
 b0c:	csel	w0, w0, wzr, ne  // ne = any
 b10:	ldp	x19, x20, [sp, #16]
 b14:	ldp	x21, x22, [sp, #32]
 b18:	ldp	x23, x24, [sp, #48]
 b1c:	ldp	x25, x26, [sp, #64]
 b20:	ldr	x27, [sp, #80]
 b24:	ldp	x29, x30, [sp], #96
 b28:	ret
 b2c:	add	x27, x27, #0xff
 b30:	cmp	x24, x20
 b34:	b	aac <lzo1x_decompress_safe+0x31c>
 b38:	sub	x22, x22, #0x4, lsl #12
 b3c:	b	a58 <lzo1x_decompress_safe+0x2c8>
 b40:	ldrb	w21, [x20], #1
 b44:	mvn	x0, x27, lsr #2
 b48:	sub	x21, x0, w21, uxtb #2
 b4c:	add	x21, x19, x21
 b50:	cmp	x23, x21
 b54:	ccmp	x19, x21, #0x0, ls  // ls = plast
 b58:	b.ls	c00 <lzo1x_decompress_safe+0x470>  // b.plast
 b5c:	sub	x0, x26, x19
 b60:	cmp	x0, #0x1
 b64:	b.ls	bf0 <lzo1x_decompress_safe+0x460>  // b.plast
 b68:	mov	x0, x19
 b6c:	ldrb	w1, [x21]
 b70:	strb	w1, [x0], #2
 b74:	ldrb	w1, [x21, #1]
 b78:	strb	w1, [x19, #1]
 b7c:	mov	x19, x0
 b80:	b	9a0 <lzo1x_decompress_safe+0x210>
 b84:	mov	x19, x23
 b88:	b	9b0 <lzo1x_decompress_safe+0x220>
 b8c:	ldrb	w0, [x20, #1]
 b90:	cmp	x21, #0x2
 b94:	strb	w0, [x19, #1]
 b98:	b.ne	ba8 <lzo1x_decompress_safe+0x418>  // b.any
 b9c:	add	x0, x20, #0x2
 ba0:	add	x19, x19, #0x2
 ba4:	b	9fc <lzo1x_decompress_safe+0x26c>
 ba8:	ldrb	w1, [x20, #2]
 bac:	add	x0, x20, #0x3
 bb0:	add	x19, x19, #0x3
 bb4:	sturb	w1, [x19, #-1]
 bb8:	b	9fc <lzo1x_decompress_safe+0x26c>
 bbc:	mov	x19, x23
 bc0:	cmp	x20, x24
 bc4:	b.cc	82c <lzo1x_decompress_safe+0x9c>  // b.lo, b.ul, b.last
 bc8:	sub	x19, x19, x23
 bcc:	mov	w0, #0xfffffff9            	// #-7
 bd0:	str	x19, [x25]
 bd4:	b	b10 <lzo1x_decompress_safe+0x380>
 bd8:	mov	x19, x23
 bdc:	sub	x19, x19, x23
 be0:	mov	w0, #0xfffffffc            	// #-4
 be4:	str	x19, [x25]
 be8:	b	b10 <lzo1x_decompress_safe+0x380>
 bec:	mov	x19, x23
 bf0:	sub	x19, x19, x23
 bf4:	mov	w0, #0xfffffffb            	// #-5
 bf8:	str	x19, [x25]
 bfc:	b	b10 <lzo1x_decompress_safe+0x380>
 c00:	sub	x19, x19, x23
 c04:	mov	w0, #0xfffffffa            	// #-6
 c08:	str	x19, [x25]
 c0c:	b	b10 <lzo1x_decompress_safe+0x380>
