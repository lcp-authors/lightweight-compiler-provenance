
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-done_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400900 <_init>:
  400900:	stp	x29, x30, [sp, #-16]!
  400904:	mov	x29, sp
  400908:	bl	400a80 <call_weak_fn>
  40090c:	ldp	x29, x30, [sp], #16
  400910:	ret

Disassembly of section .plt:

0000000000400920 <.plt>:
  400920:	stp	x16, x30, [sp, #-16]!
  400924:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400928:	ldr	x17, [x16, #3952]
  40092c:	add	x16, x16, #0xf70
  400930:	br	x17
  400934:	nop
  400938:	nop
  40093c:	nop

0000000000400940 <mac_selinux_init@plt>:
  400940:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400944:	ldr	x17, [x16, #3960]
  400948:	add	x16, x16, #0xf78
  40094c:	br	x17

0000000000400950 <__libc_start_main@plt>:
  400950:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400954:	ldr	x17, [x16, #3968]
  400958:	add	x16, x16, #0xf80
  40095c:	br	x17

0000000000400960 <__gmon_start__@plt>:
  400960:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400964:	ldr	x17, [x16, #3976]
  400968:	add	x16, x16, #0xf88
  40096c:	br	x17

0000000000400970 <write_string_file_atomic_label_ts@plt>:
  400970:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400974:	ldr	x17, [x16, #3984]
  400978:	add	x16, x16, #0xf90
  40097c:	br	x17

0000000000400980 <log_setup_service@plt>:
  400980:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400984:	ldr	x17, [x16, #3992]
  400988:	add	x16, x16, #0xf98
  40098c:	br	x17

0000000000400990 <abort@plt>:
  400990:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400994:	ldr	x17, [x16, #4000]
  400998:	add	x16, x16, #0xfa0
  40099c:	br	x17

00000000004009a0 <__errno_location@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  4009a4:	ldr	x17, [x16, #4008]
  4009a8:	add	x16, x16, #0xfa8
  4009ac:	br	x17

00000000004009b0 <__stack_chk_fail@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  4009b4:	ldr	x17, [x16, #4016]
  4009b8:	add	x16, x16, #0xfb0
  4009bc:	br	x17

00000000004009c0 <__xstat64@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  4009c4:	ldr	x17, [x16, #4024]
  4009c8:	add	x16, x16, #0xfb8
  4009cc:	br	x17

00000000004009d0 <log_internal_realm@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  4009d4:	ldr	x17, [x16, #4032]
  4009d8:	add	x16, x16, #0xfc0
  4009dc:	br	x17

00000000004009e0 <asprintf@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  4009e4:	ldr	x17, [x16, #4040]
  4009e8:	add	x16, x16, #0xfc8
  4009ec:	br	x17

00000000004009f0 <free@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  4009f4:	ldr	x17, [x16, #4048]
  4009f8:	add	x16, x16, #0xfd0
  4009fc:	br	x17

0000000000400a00 <log_oom_internal@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400a04:	ldr	x17, [x16, #4056]
  400a08:	add	x16, x16, #0xfd8
  400a0c:	br	x17

0000000000400a10 <timespec_load_nsec@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400a14:	ldr	x17, [x16, #4064]
  400a18:	add	x16, x16, #0xfe0
  400a1c:	br	x17

0000000000400a20 <log_get_max_level_realm@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfbc4>
  400a24:	ldr	x17, [x16, #4072]
  400a28:	add	x16, x16, #0xfe8
  400a2c:	br	x17

Disassembly of section .text:

0000000000400a30 <_start>:
  400a30:	mov	x29, #0x0                   	// #0
  400a34:	mov	x30, #0x0                   	// #0
  400a38:	mov	x5, x0
  400a3c:	ldr	x1, [sp]
  400a40:	add	x2, sp, #0x8
  400a44:	mov	x6, sp
  400a48:	movz	x0, #0x0, lsl #48
  400a4c:	movk	x0, #0x0, lsl #32
  400a50:	movk	x0, #0x40, lsl #16
  400a54:	movk	x0, #0xe20
  400a58:	movz	x3, #0x0, lsl #48
  400a5c:	movk	x3, #0x0, lsl #32
  400a60:	movk	x3, #0x40, lsl #16
  400a64:	movk	x3, #0x1010
  400a68:	movz	x4, #0x0, lsl #48
  400a6c:	movk	x4, #0x0, lsl #32
  400a70:	movk	x4, #0x40, lsl #16
  400a74:	movk	x4, #0x1090
  400a78:	bl	400950 <__libc_start_main@plt>
  400a7c:	bl	400990 <abort@plt>

0000000000400a80 <call_weak_fn>:
  400a80:	adrp	x0, 411000 <__FRAME_END__+0xfbc4>
  400a84:	ldr	x0, [x0, #4088]
  400a88:	cbz	x0, 400a90 <call_weak_fn+0x10>
  400a8c:	b	400960 <__gmon_start__@plt>
  400a90:	ret

0000000000400a94 <deregister_tm_clones>:
  400a94:	stp	x29, x30, [sp, #-32]!
  400a98:	mov	x29, sp
  400a9c:	adrp	x0, 412000 <__TMC_END__>
  400aa0:	add	x0, x0, #0x0
  400aa4:	str	x0, [sp, #24]
  400aa8:	ldr	x0, [sp, #24]
  400aac:	str	x0, [sp, #24]
  400ab0:	ldr	x1, [sp, #24]
  400ab4:	adrp	x0, 412000 <__TMC_END__>
  400ab8:	add	x0, x0, #0x0
  400abc:	cmp	x1, x0
  400ac0:	b.eq	400afc <deregister_tm_clones+0x68>  // b.none
  400ac4:	adrp	x0, 401000 <main+0x1e0>
  400ac8:	add	x0, x0, #0xb8
  400acc:	ldr	x0, [x0]
  400ad0:	str	x0, [sp, #16]
  400ad4:	ldr	x0, [sp, #16]
  400ad8:	str	x0, [sp, #16]
  400adc:	ldr	x0, [sp, #16]
  400ae0:	cmp	x0, #0x0
  400ae4:	b.eq	400b00 <deregister_tm_clones+0x6c>  // b.none
  400ae8:	ldr	x1, [sp, #16]
  400aec:	adrp	x0, 412000 <__TMC_END__>
  400af0:	add	x0, x0, #0x0
  400af4:	blr	x1
  400af8:	b	400b00 <deregister_tm_clones+0x6c>
  400afc:	nop
  400b00:	ldp	x29, x30, [sp], #32
  400b04:	ret

0000000000400b08 <register_tm_clones>:
  400b08:	stp	x29, x30, [sp, #-48]!
  400b0c:	mov	x29, sp
  400b10:	adrp	x0, 412000 <__TMC_END__>
  400b14:	add	x0, x0, #0x0
  400b18:	str	x0, [sp, #40]
  400b1c:	ldr	x0, [sp, #40]
  400b20:	str	x0, [sp, #40]
  400b24:	ldr	x1, [sp, #40]
  400b28:	adrp	x0, 412000 <__TMC_END__>
  400b2c:	add	x0, x0, #0x0
  400b30:	sub	x0, x1, x0
  400b34:	asr	x0, x0, #3
  400b38:	lsr	x1, x0, #63
  400b3c:	add	x0, x1, x0
  400b40:	asr	x0, x0, #1
  400b44:	str	x0, [sp, #32]
  400b48:	ldr	x0, [sp, #32]
  400b4c:	cmp	x0, #0x0
  400b50:	b.eq	400b90 <register_tm_clones+0x88>  // b.none
  400b54:	adrp	x0, 401000 <main+0x1e0>
  400b58:	add	x0, x0, #0xc0
  400b5c:	ldr	x0, [x0]
  400b60:	str	x0, [sp, #24]
  400b64:	ldr	x0, [sp, #24]
  400b68:	str	x0, [sp, #24]
  400b6c:	ldr	x0, [sp, #24]
  400b70:	cmp	x0, #0x0
  400b74:	b.eq	400b94 <register_tm_clones+0x8c>  // b.none
  400b78:	ldr	x2, [sp, #24]
  400b7c:	ldr	x1, [sp, #32]
  400b80:	adrp	x0, 412000 <__TMC_END__>
  400b84:	add	x0, x0, #0x0
  400b88:	blr	x2
  400b8c:	b	400b94 <register_tm_clones+0x8c>
  400b90:	nop
  400b94:	ldp	x29, x30, [sp], #48
  400b98:	ret

0000000000400b9c <__do_global_dtors_aux>:
  400b9c:	stp	x29, x30, [sp, #-16]!
  400ba0:	mov	x29, sp
  400ba4:	adrp	x0, 412000 <__TMC_END__>
  400ba8:	add	x0, x0, #0x0
  400bac:	ldrb	w0, [x0]
  400bb0:	and	x0, x0, #0xff
  400bb4:	cmp	x0, #0x0
  400bb8:	b.ne	400bd4 <__do_global_dtors_aux+0x38>  // b.any
  400bbc:	bl	400a94 <deregister_tm_clones>
  400bc0:	adrp	x0, 412000 <__TMC_END__>
  400bc4:	add	x0, x0, #0x0
  400bc8:	mov	w1, #0x1                   	// #1
  400bcc:	strb	w1, [x0]
  400bd0:	b	400bd8 <__do_global_dtors_aux+0x3c>
  400bd4:	nop
  400bd8:	ldp	x29, x30, [sp], #16
  400bdc:	ret

0000000000400be0 <frame_dummy>:
  400be0:	stp	x29, x30, [sp, #-16]!
  400be4:	mov	x29, sp
  400be8:	bl	400b08 <register_tm_clones>
  400bec:	nop
  400bf0:	ldp	x29, x30, [sp], #16
  400bf4:	ret

0000000000400bf8 <freep>:
  400bf8:	stp	x29, x30, [sp, #-32]!
  400bfc:	mov	x29, sp
  400c00:	str	x0, [sp, #24]
  400c04:	ldr	x0, [sp, #24]
  400c08:	ldr	x0, [x0]
  400c0c:	bl	4009f0 <free@plt>
  400c10:	nop
  400c14:	ldp	x29, x30, [sp], #32
  400c18:	ret

0000000000400c1c <apply_timestamp>:
  400c1c:	stp	x29, x30, [sp, #-96]!
  400c20:	mov	x29, sp
  400c24:	str	x19, [sp, #16]
  400c28:	str	x0, [sp, #40]
  400c2c:	str	x1, [sp, #32]
  400c30:	adrp	x0, 411000 <__FRAME_END__+0xfbc4>
  400c34:	add	x0, x0, #0xd28
  400c38:	ldr	x1, [x0]
  400c3c:	str	x1, [sp, #88]
  400c40:	mov	x1, #0x0                   	// #0
  400c44:	str	xzr, [sp, #80]
  400c48:	ldr	x0, [sp, #32]
  400c4c:	bl	400a10 <timespec_load_nsec@plt>
  400c50:	add	x3, sp, #0x50
  400c54:	mov	x2, x0
  400c58:	adrp	x0, 401000 <main+0x1e0>
  400c5c:	add	x1, x0, #0xc8
  400c60:	mov	x0, x3
  400c64:	bl	4009e0 <asprintf@plt>
  400c68:	cmp	w0, #0x0
  400c6c:	b.ge	400c94 <apply_timestamp+0x78>  // b.tcont
  400c70:	adrp	x0, 401000 <main+0x1e0>
  400c74:	add	x1, x0, #0x193
  400c78:	adrp	x0, 401000 <main+0x1e0>
  400c7c:	add	x3, x0, #0x268
  400c80:	mov	w2, #0x1e                  	// #30
  400c84:	mov	w0, #0x0                   	// #0
  400c88:	bl	400a00 <log_oom_internal@plt>
  400c8c:	mov	w19, w0
  400c90:	b	400de4 <apply_timestamp+0x1c8>
  400c94:	ldr	x0, [sp, #80]
  400c98:	ldr	x2, [sp, #32]
  400c9c:	mov	x1, x0
  400ca0:	ldr	x0, [sp, #40]
  400ca4:	bl	400970 <write_string_file_atomic_label_ts@plt>
  400ca8:	str	w0, [sp, #52]
  400cac:	ldr	w0, [sp, #52]
  400cb0:	cmn	w0, #0x1e
  400cb4:	b.ne	400d44 <apply_timestamp+0x128>  // b.any
  400cb8:	mov	w0, #0x7                   	// #7
  400cbc:	str	w0, [sp, #68]
  400cc0:	str	wzr, [sp, #72]
  400cc4:	str	wzr, [sp, #76]
  400cc8:	ldr	w0, [sp, #76]
  400ccc:	bl	400a20 <log_get_max_level_realm@plt>
  400cd0:	mov	w1, w0
  400cd4:	ldr	w0, [sp, #68]
  400cd8:	and	w0, w0, #0x7
  400cdc:	cmp	w1, w0
  400ce0:	b.lt	400d2c <apply_timestamp+0x110>  // b.tstop
  400ce4:	ldr	w0, [sp, #76]
  400ce8:	lsl	w1, w0, #10
  400cec:	ldr	w0, [sp, #68]
  400cf0:	orr	w7, w1, w0
  400cf4:	adrp	x0, 401000 <main+0x1e0>
  400cf8:	add	x1, x0, #0x193
  400cfc:	ldr	x6, [sp, #40]
  400d00:	adrp	x0, 401000 <main+0x1e0>
  400d04:	add	x5, x0, #0x1b8
  400d08:	adrp	x0, 401000 <main+0x1e0>
  400d0c:	add	x4, x0, #0x268
  400d10:	mov	w3, #0x22                  	// #34
  400d14:	mov	x2, x1
  400d18:	ldr	w1, [sp, #72]
  400d1c:	mov	w0, w7
  400d20:	bl	4009d0 <log_internal_realm@plt>
  400d24:	mov	w19, w0
  400d28:	b	400de4 <apply_timestamp+0x1c8>
  400d2c:	ldr	w0, [sp, #72]
  400d30:	cmp	w0, #0x0
  400d34:	cneg	w0, w0, lt  // lt = tstop
  400d38:	and	w0, w0, #0xff
  400d3c:	neg	w19, w0
  400d40:	b	400de4 <apply_timestamp+0x1c8>
  400d44:	ldr	w0, [sp, #52]
  400d48:	cmp	w0, #0x0
  400d4c:	b.ge	400de0 <apply_timestamp+0x1c4>  // b.tcont
  400d50:	mov	w0, #0x3                   	// #3
  400d54:	str	w0, [sp, #56]
  400d58:	ldr	w0, [sp, #52]
  400d5c:	str	w0, [sp, #60]
  400d60:	str	wzr, [sp, #64]
  400d64:	ldr	w0, [sp, #64]
  400d68:	bl	400a20 <log_get_max_level_realm@plt>
  400d6c:	mov	w1, w0
  400d70:	ldr	w0, [sp, #56]
  400d74:	and	w0, w0, #0x7
  400d78:	cmp	w1, w0
  400d7c:	b.lt	400dc8 <apply_timestamp+0x1ac>  // b.tstop
  400d80:	ldr	w0, [sp, #64]
  400d84:	lsl	w1, w0, #10
  400d88:	ldr	w0, [sp, #56]
  400d8c:	orr	w7, w1, w0
  400d90:	adrp	x0, 401000 <main+0x1e0>
  400d94:	add	x1, x0, #0x193
  400d98:	ldr	x6, [sp, #40]
  400d9c:	adrp	x0, 401000 <main+0x1e0>
  400da0:	add	x5, x0, #0x1e8
  400da4:	adrp	x0, 401000 <main+0x1e0>
  400da8:	add	x4, x0, #0x268
  400dac:	mov	w3, #0x24                  	// #36
  400db0:	mov	x2, x1
  400db4:	ldr	w1, [sp, #60]
  400db8:	mov	w0, w7
  400dbc:	bl	4009d0 <log_internal_realm@plt>
  400dc0:	mov	w19, w0
  400dc4:	b	400de4 <apply_timestamp+0x1c8>
  400dc8:	ldr	w0, [sp, #60]
  400dcc:	cmp	w0, #0x0
  400dd0:	cneg	w0, w0, lt  // lt = tstop
  400dd4:	and	w0, w0, #0xff
  400dd8:	neg	w19, w0
  400ddc:	b	400de4 <apply_timestamp+0x1c8>
  400de0:	mov	w19, #0x0                   	// #0
  400de4:	add	x0, sp, #0x50
  400de8:	bl	400bf8 <freep>
  400dec:	mov	w1, w19
  400df0:	adrp	x0, 411000 <__FRAME_END__+0xfbc4>
  400df4:	add	x0, x0, #0xd28
  400df8:	ldr	x2, [sp, #88]
  400dfc:	ldr	x0, [x0]
  400e00:	eor	x0, x2, x0
  400e04:	cmp	x0, #0x0
  400e08:	b.eq	400e10 <apply_timestamp+0x1f4>  // b.none
  400e0c:	bl	4009b0 <__stack_chk_fail@plt>
  400e10:	mov	w0, w1
  400e14:	ldr	x19, [sp, #16]
  400e18:	ldp	x29, x30, [sp], #96
  400e1c:	ret

0000000000400e20 <main>:
  400e20:	stp	x29, x30, [sp, #-208]!
  400e24:	mov	x29, sp
  400e28:	str	w0, [sp, #28]
  400e2c:	str	x1, [sp, #16]
  400e30:	adrp	x0, 411000 <__FRAME_END__+0xfbc4>
  400e34:	add	x0, x0, #0xd28
  400e38:	ldr	x1, [x0]
  400e3c:	str	x1, [sp, #200]
  400e40:	mov	x1, #0x0                   	// #0
  400e44:	str	wzr, [sp, #40]
  400e48:	bl	400980 <log_setup_service@plt>
  400e4c:	add	x0, sp, #0x48
  400e50:	mov	x1, x0
  400e54:	adrp	x0, 401000 <main+0x1e0>
  400e58:	add	x0, x0, #0x208
  400e5c:	bl	401098 <stat64>
  400e60:	cmp	w0, #0x0
  400e64:	b.ge	400eec <main+0xcc>  // b.tcont
  400e68:	mov	w0, #0x3                   	// #3
  400e6c:	str	w0, [sp, #60]
  400e70:	bl	4009a0 <__errno_location@plt>
  400e74:	ldr	w0, [x0]
  400e78:	str	w0, [sp, #64]
  400e7c:	str	wzr, [sp, #68]
  400e80:	ldr	w0, [sp, #68]
  400e84:	bl	400a20 <log_get_max_level_realm@plt>
  400e88:	mov	w1, w0
  400e8c:	ldr	w0, [sp, #60]
  400e90:	and	w0, w0, #0x7
  400e94:	cmp	w1, w0
  400e98:	b.lt	400edc <main+0xbc>  // b.tstop
  400e9c:	ldr	w0, [sp, #68]
  400ea0:	lsl	w1, w0, #10
  400ea4:	ldr	w0, [sp, #60]
  400ea8:	orr	w6, w1, w0
  400eac:	adrp	x0, 401000 <main+0x1e0>
  400eb0:	add	x1, x0, #0x193
  400eb4:	adrp	x0, 401000 <main+0x1e0>
  400eb8:	add	x5, x0, #0x210
  400ebc:	adrp	x0, 401000 <main+0x1e0>
  400ec0:	add	x4, x0, #0x278
  400ec4:	mov	w3, #0x2f                  	// #47
  400ec8:	mov	x2, x1
  400ecc:	ldr	w1, [sp, #64]
  400ed0:	mov	w0, w6
  400ed4:	bl	4009d0 <log_internal_realm@plt>
  400ed8:	b	400ee4 <main+0xc4>
  400edc:	ldr	w0, [sp, #64]
  400ee0:	cmp	w0, #0x0
  400ee4:	mov	w0, #0x1                   	// #1
  400ee8:	b	400fdc <main+0x1bc>
  400eec:	bl	400940 <mac_selinux_init@plt>
  400ef0:	str	w0, [sp, #44]
  400ef4:	ldr	w0, [sp, #44]
  400ef8:	cmp	w0, #0x0
  400efc:	b.ge	400f80 <main+0x160>  // b.tcont
  400f00:	mov	w0, #0x3                   	// #3
  400f04:	str	w0, [sp, #48]
  400f08:	ldr	w0, [sp, #44]
  400f0c:	str	w0, [sp, #52]
  400f10:	str	wzr, [sp, #56]
  400f14:	ldr	w0, [sp, #56]
  400f18:	bl	400a20 <log_get_max_level_realm@plt>
  400f1c:	mov	w1, w0
  400f20:	ldr	w0, [sp, #48]
  400f24:	and	w0, w0, #0x7
  400f28:	cmp	w1, w0
  400f2c:	b.lt	400f70 <main+0x150>  // b.tstop
  400f30:	ldr	w0, [sp, #56]
  400f34:	lsl	w1, w0, #10
  400f38:	ldr	w0, [sp, #48]
  400f3c:	orr	w6, w1, w0
  400f40:	adrp	x0, 401000 <main+0x1e0>
  400f44:	add	x1, x0, #0x193
  400f48:	adrp	x0, 401000 <main+0x1e0>
  400f4c:	add	x5, x0, #0x228
  400f50:	adrp	x0, 401000 <main+0x1e0>
  400f54:	add	x4, x0, #0x278
  400f58:	mov	w3, #0x35                  	// #53
  400f5c:	mov	x2, x1
  400f60:	ldr	w1, [sp, #52]
  400f64:	mov	w0, w6
  400f68:	bl	4009d0 <log_internal_realm@plt>
  400f6c:	b	400f78 <main+0x158>
  400f70:	ldr	w0, [sp, #52]
  400f74:	cmp	w0, #0x0
  400f78:	mov	w0, #0x1                   	// #1
  400f7c:	b	400fdc <main+0x1bc>
  400f80:	add	x0, sp, #0x48
  400f84:	add	x0, x0, #0x58
  400f88:	mov	x1, x0
  400f8c:	adrp	x0, 401000 <main+0x1e0>
  400f90:	add	x0, x0, #0x248
  400f94:	bl	400c1c <apply_timestamp>
  400f98:	str	w0, [sp, #44]
  400f9c:	add	x0, sp, #0x48
  400fa0:	add	x0, x0, #0x58
  400fa4:	mov	x1, x0
  400fa8:	adrp	x0, 401000 <main+0x1e0>
  400fac:	add	x0, x0, #0x258
  400fb0:	bl	400c1c <apply_timestamp>
  400fb4:	str	w0, [sp, #40]
  400fb8:	ldr	w0, [sp, #44]
  400fbc:	cmp	w0, #0x0
  400fc0:	b.lt	400fd0 <main+0x1b0>  // b.tstop
  400fc4:	ldr	w0, [sp, #40]
  400fc8:	cmp	w0, #0x0
  400fcc:	b.ge	400fd8 <main+0x1b8>  // b.tcont
  400fd0:	mov	w0, #0x1                   	// #1
  400fd4:	b	400fdc <main+0x1bc>
  400fd8:	mov	w0, #0x0                   	// #0
  400fdc:	mov	w1, w0
  400fe0:	adrp	x0, 411000 <__FRAME_END__+0xfbc4>
  400fe4:	add	x0, x0, #0xd28
  400fe8:	ldr	x2, [sp, #200]
  400fec:	ldr	x0, [x0]
  400ff0:	eor	x0, x2, x0
  400ff4:	cmp	x0, #0x0
  400ff8:	b.eq	401000 <main+0x1e0>  // b.none
  400ffc:	bl	4009b0 <__stack_chk_fail@plt>
  401000:	mov	w0, w1
  401004:	ldp	x29, x30, [sp], #208
  401008:	ret
  40100c:	nop

0000000000401010 <__libc_csu_init>:
  401010:	stp	x29, x30, [sp, #-64]!
  401014:	mov	x29, sp
  401018:	stp	x19, x20, [sp, #16]
  40101c:	adrp	x20, 411000 <__FRAME_END__+0xfbc4>
  401020:	add	x20, x20, #0xd20
  401024:	stp	x21, x22, [sp, #32]
  401028:	adrp	x21, 411000 <__FRAME_END__+0xfbc4>
  40102c:	add	x21, x21, #0xd18
  401030:	sub	x20, x20, x21
  401034:	mov	w22, w0
  401038:	stp	x23, x24, [sp, #48]
  40103c:	mov	x23, x1
  401040:	mov	x24, x2
  401044:	bl	400900 <_init>
  401048:	cmp	xzr, x20, asr #3
  40104c:	b.eq	401078 <__libc_csu_init+0x68>  // b.none
  401050:	asr	x20, x20, #3
  401054:	mov	x19, #0x0                   	// #0
  401058:	ldr	x3, [x21, x19, lsl #3]
  40105c:	mov	x2, x24
  401060:	add	x19, x19, #0x1
  401064:	mov	x1, x23
  401068:	mov	w0, w22
  40106c:	blr	x3
  401070:	cmp	x20, x19
  401074:	b.ne	401058 <__libc_csu_init+0x48>  // b.any
  401078:	ldp	x19, x20, [sp, #16]
  40107c:	ldp	x21, x22, [sp, #32]
  401080:	ldp	x23, x24, [sp, #48]
  401084:	ldp	x29, x30, [sp], #64
  401088:	ret
  40108c:	nop

0000000000401090 <__libc_csu_fini>:
  401090:	ret
  401094:	nop

0000000000401098 <stat64>:
  401098:	mov	x2, x1
  40109c:	mov	x1, x0
  4010a0:	mov	w0, #0x0                   	// #0
  4010a4:	b	4009c0 <__xstat64@plt>

Disassembly of section .fini:

00000000004010a8 <_fini>:
  4010a8:	stp	x29, x30, [sp, #-16]!
  4010ac:	mov	x29, sp
  4010b0:	ldp	x29, x30, [sp], #16
  4010b4:	ret
