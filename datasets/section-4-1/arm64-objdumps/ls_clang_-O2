
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ls_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402378 <.init>:
  402378:	stp	x29, x30, [sp, #-16]!
  40237c:	mov	x29, sp
  402380:	bl	402ab0 <__fxstatat@plt+0x60>
  402384:	ldp	x29, x30, [sp], #16
  402388:	ret

Disassembly of section .plt:

0000000000402390 <mbrtowc@plt-0x20>:
  402390:	stp	x16, x30, [sp, #-16]!
  402394:	adrp	x16, 42b000 <_obstack_memory_used@@Base+0x17060>
  402398:	ldr	x17, [x16, #4088]
  40239c:	add	x16, x16, #0xff8
  4023a0:	br	x17
  4023a4:	nop
  4023a8:	nop
  4023ac:	nop

00000000004023b0 <mbrtowc@plt>:
  4023b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16]
  4023b8:	add	x16, x16, #0x0
  4023bc:	br	x17

00000000004023c0 <memcpy@plt>:
  4023c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #8]
  4023c8:	add	x16, x16, #0x8
  4023cc:	br	x17

00000000004023d0 <memmove@plt>:
  4023d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #16]
  4023d8:	add	x16, x16, #0x10
  4023dc:	br	x17

00000000004023e0 <cap_to_text@plt>:
  4023e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #24]
  4023e8:	add	x16, x16, #0x18
  4023ec:	br	x17

00000000004023f0 <_exit@plt>:
  4023f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #32]
  4023f8:	add	x16, x16, #0x20
  4023fc:	br	x17

0000000000402400 <getcwd@plt>:
  402400:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #40]
  402408:	add	x16, x16, #0x28
  40240c:	br	x17

0000000000402410 <fwrite_unlocked@plt>:
  402410:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #48]
  402418:	add	x16, x16, #0x30
  40241c:	br	x17

0000000000402420 <strtoul@plt>:
  402420:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #56]
  402428:	add	x16, x16, #0x38
  40242c:	br	x17

0000000000402430 <strlen@plt>:
  402430:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #64]
  402438:	add	x16, x16, #0x40
  40243c:	br	x17

0000000000402440 <__sprintf_chk@plt>:
  402440:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #72]
  402448:	add	x16, x16, #0x48
  40244c:	br	x17

0000000000402450 <mbstowcs@plt>:
  402450:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #80]
  402458:	add	x16, x16, #0x50
  40245c:	br	x17

0000000000402460 <exit@plt>:
  402460:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #88]
  402468:	add	x16, x16, #0x58
  40246c:	br	x17

0000000000402470 <_setjmp@plt>:
  402470:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #96]
  402478:	add	x16, x16, #0x60
  40247c:	br	x17

0000000000402480 <raise@plt>:
  402480:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #104]
  402488:	add	x16, x16, #0x68
  40248c:	br	x17

0000000000402490 <error@plt>:
  402490:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #112]
  402498:	add	x16, x16, #0x70
  40249c:	br	x17

00000000004024a0 <sigprocmask@plt>:
  4024a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #120]
  4024a8:	add	x16, x16, #0x78
  4024ac:	br	x17

00000000004024b0 <localtime_r@plt>:
  4024b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #128]
  4024b8:	add	x16, x16, #0x80
  4024bc:	br	x17

00000000004024c0 <setenv@plt>:
  4024c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #136]
  4024c8:	add	x16, x16, #0x88
  4024cc:	br	x17

00000000004024d0 <readlink@plt>:
  4024d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #144]
  4024d8:	add	x16, x16, #0x90
  4024dc:	br	x17

00000000004024e0 <getgrnam@plt>:
  4024e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #152]
  4024e8:	add	x16, x16, #0x98
  4024ec:	br	x17

00000000004024f0 <opendir@plt>:
  4024f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #160]
  4024f8:	add	x16, x16, #0xa0
  4024fc:	br	x17

0000000000402500 <strftime@plt>:
  402500:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #168]
  402508:	add	x16, x16, #0xa8
  40250c:	br	x17

0000000000402510 <__cxa_atexit@plt>:
  402510:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #176]
  402518:	add	x16, x16, #0xb0
  40251c:	br	x17

0000000000402520 <iswcntrl@plt>:
  402520:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #184]
  402528:	add	x16, x16, #0xb8
  40252c:	br	x17

0000000000402530 <clock_gettime@plt>:
  402530:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #192]
  402538:	add	x16, x16, #0xc0
  40253c:	br	x17

0000000000402540 <lseek@plt>:
  402540:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #200]
  402548:	add	x16, x16, #0xc8
  40254c:	br	x17

0000000000402550 <__fpending@plt>:
  402550:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #208]
  402558:	add	x16, x16, #0xd0
  40255c:	br	x17

0000000000402560 <__ctype_tolower_loc@plt>:
  402560:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #216]
  402568:	add	x16, x16, #0xd8
  40256c:	br	x17

0000000000402570 <localeconv@plt>:
  402570:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #224]
  402578:	add	x16, x16, #0xe0
  40257c:	br	x17

0000000000402580 <stpcpy@plt>:
  402580:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #232]
  402588:	add	x16, x16, #0xe8
  40258c:	br	x17

0000000000402590 <fileno@plt>:
  402590:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #240]
  402598:	add	x16, x16, #0xf0
  40259c:	br	x17

00000000004025a0 <__memcpy_chk@plt>:
  4025a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #248]
  4025a8:	add	x16, x16, #0xf8
  4025ac:	br	x17

00000000004025b0 <signal@plt>:
  4025b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #256]
  4025b8:	add	x16, x16, #0x100
  4025bc:	br	x17

00000000004025c0 <__snprintf_chk@plt>:
  4025c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #264]
  4025c8:	add	x16, x16, #0x108
  4025cc:	br	x17

00000000004025d0 <fclose@plt>:
  4025d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #272]
  4025d8:	add	x16, x16, #0x110
  4025dc:	br	x17

00000000004025e0 <nl_langinfo@plt>:
  4025e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #280]
  4025e8:	add	x16, x16, #0x118
  4025ec:	br	x17

00000000004025f0 <malloc@plt>:
  4025f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #288]
  4025f8:	add	x16, x16, #0x120
  4025fc:	br	x17

0000000000402600 <wcwidth@plt>:
  402600:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #296]
  402608:	add	x16, x16, #0x128
  40260c:	br	x17

0000000000402610 <tzset@plt>:
  402610:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #304]
  402618:	add	x16, x16, #0x130
  40261c:	br	x17

0000000000402620 <wcswidth@plt>:
  402620:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #312]
  402628:	add	x16, x16, #0x138
  40262c:	br	x17

0000000000402630 <sigemptyset@plt>:
  402630:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #320]
  402638:	add	x16, x16, #0x140
  40263c:	br	x17

0000000000402640 <strncmp@plt>:
  402640:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #328]
  402648:	add	x16, x16, #0x148
  40264c:	br	x17

0000000000402650 <bindtextdomain@plt>:
  402650:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #336]
  402658:	add	x16, x16, #0x150
  40265c:	br	x17

0000000000402660 <__libc_start_main@plt>:
  402660:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #344]
  402668:	add	x16, x16, #0x158
  40266c:	br	x17

0000000000402670 <__printf_chk@plt>:
  402670:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #352]
  402678:	add	x16, x16, #0x160
  40267c:	br	x17

0000000000402680 <memset@plt>:
  402680:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #360]
  402688:	add	x16, x16, #0x168
  40268c:	br	x17

0000000000402690 <getpwnam@plt>:
  402690:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #368]
  402698:	add	x16, x16, #0x170
  40269c:	br	x17

00000000004026a0 <gmtime_r@plt>:
  4026a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #376]
  4026a8:	add	x16, x16, #0x178
  4026ac:	br	x17

00000000004026b0 <__strtoul_internal@plt>:
  4026b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #384]
  4026b8:	add	x16, x16, #0x180
  4026bc:	br	x17

00000000004026c0 <calloc@plt>:
  4026c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #392]
  4026c8:	add	x16, x16, #0x188
  4026cc:	br	x17

00000000004026d0 <bcmp@plt>:
  4026d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #400]
  4026d8:	add	x16, x16, #0x190
  4026dc:	br	x17

00000000004026e0 <readdir@plt>:
  4026e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #408]
  4026e8:	add	x16, x16, #0x198
  4026ec:	br	x17

00000000004026f0 <realloc@plt>:
  4026f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #416]
  4026f8:	add	x16, x16, #0x1a0
  4026fc:	br	x17

0000000000402700 <__ctype_toupper_loc@plt>:
  402700:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #424]
  402708:	add	x16, x16, #0x1a8
  40270c:	br	x17

0000000000402710 <closedir@plt>:
  402710:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #432]
  402718:	add	x16, x16, #0x1b0
  40271c:	br	x17

0000000000402720 <sigaction@plt>:
  402720:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #440]
  402728:	add	x16, x16, #0x1b8
  40272c:	br	x17

0000000000402730 <strrchr@plt>:
  402730:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #448]
  402738:	add	x16, x16, #0x1c0
  40273c:	br	x17

0000000000402740 <tcgetpgrp@plt>:
  402740:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #456]
  402748:	add	x16, x16, #0x1c8
  40274c:	br	x17

0000000000402750 <__gmon_start__@plt>:
  402750:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #464]
  402758:	add	x16, x16, #0x1d0
  40275c:	br	x17

0000000000402760 <mktime@plt>:
  402760:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #472]
  402768:	add	x16, x16, #0x1d8
  40276c:	br	x17

0000000000402770 <abort@plt>:
  402770:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #480]
  402778:	add	x16, x16, #0x1e0
  40277c:	br	x17

0000000000402780 <mbsinit@plt>:
  402780:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #488]
  402788:	add	x16, x16, #0x1e8
  40278c:	br	x17

0000000000402790 <__overflow@plt>:
  402790:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #496]
  402798:	add	x16, x16, #0x1f0
  40279c:	br	x17

00000000004027a0 <getxattr@plt>:
  4027a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #504]
  4027a8:	add	x16, x16, #0x1f8
  4027ac:	br	x17

00000000004027b0 <textdomain@plt>:
  4027b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #512]
  4027b8:	add	x16, x16, #0x200
  4027bc:	br	x17

00000000004027c0 <stpncpy@plt>:
  4027c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #520]
  4027c8:	add	x16, x16, #0x208
  4027cc:	br	x17

00000000004027d0 <getopt_long@plt>:
  4027d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #528]
  4027d8:	add	x16, x16, #0x210
  4027dc:	br	x17

00000000004027e0 <__fprintf_chk@plt>:
  4027e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #536]
  4027e8:	add	x16, x16, #0x218
  4027ec:	br	x17

00000000004027f0 <sigismember@plt>:
  4027f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #544]
  4027f8:	add	x16, x16, #0x220
  4027fc:	br	x17

0000000000402800 <strcmp@plt>:
  402800:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #552]
  402808:	add	x16, x16, #0x228
  40280c:	br	x17

0000000000402810 <getpwuid@plt>:
  402810:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #560]
  402818:	add	x16, x16, #0x230
  40281c:	br	x17

0000000000402820 <__ctype_b_loc@plt>:
  402820:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #568]
  402828:	add	x16, x16, #0x238
  40282c:	br	x17

0000000000402830 <fseeko@plt>:
  402830:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #576]
  402838:	add	x16, x16, #0x240
  40283c:	br	x17

0000000000402840 <free@plt>:
  402840:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #584]
  402848:	add	x16, x16, #0x248
  40284c:	br	x17

0000000000402850 <__ctype_get_mb_cur_max@plt>:
  402850:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #592]
  402858:	add	x16, x16, #0x250
  40285c:	br	x17

0000000000402860 <strspn@plt>:
  402860:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #600]
  402868:	add	x16, x16, #0x258
  40286c:	br	x17

0000000000402870 <strchr@plt>:
  402870:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #608]
  402878:	add	x16, x16, #0x260
  40287c:	br	x17

0000000000402880 <fwrite@plt>:
  402880:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #616]
  402888:	add	x16, x16, #0x268
  40288c:	br	x17

0000000000402890 <fnmatch@plt>:
  402890:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #624]
  402898:	add	x16, x16, #0x270
  40289c:	br	x17

00000000004028a0 <fflush_unlocked@plt>:
  4028a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #632]
  4028a8:	add	x16, x16, #0x278
  4028ac:	br	x17

00000000004028b0 <fflush@plt>:
  4028b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #640]
  4028b8:	add	x16, x16, #0x280
  4028bc:	br	x17

00000000004028c0 <strcpy@plt>:
  4028c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #648]
  4028c8:	add	x16, x16, #0x288
  4028cc:	br	x17

00000000004028d0 <dirfd@plt>:
  4028d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #656]
  4028d8:	add	x16, x16, #0x290
  4028dc:	br	x17

00000000004028e0 <unsetenv@plt>:
  4028e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #664]
  4028e8:	add	x16, x16, #0x298
  4028ec:	br	x17

00000000004028f0 <__lxstat@plt>:
  4028f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #672]
  4028f8:	add	x16, x16, #0x2a0
  4028fc:	br	x17

0000000000402900 <cap_get_file@plt>:
  402900:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #680]
  402908:	add	x16, x16, #0x2a8
  40290c:	br	x17

0000000000402910 <isatty@plt>:
  402910:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #688]
  402918:	add	x16, x16, #0x2b0
  40291c:	br	x17

0000000000402920 <wcstombs@plt>:
  402920:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #696]
  402928:	add	x16, x16, #0x2b8
  40292c:	br	x17

0000000000402930 <gethostname@plt>:
  402930:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #704]
  402938:	add	x16, x16, #0x2c0
  40293c:	br	x17

0000000000402940 <__mempcpy_chk@plt>:
  402940:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #712]
  402948:	add	x16, x16, #0x2c8
  40294c:	br	x17

0000000000402950 <cap_free@plt>:
  402950:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #720]
  402958:	add	x16, x16, #0x2d0
  40295c:	br	x17

0000000000402960 <__fxstat@plt>:
  402960:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #728]
  402968:	add	x16, x16, #0x2d8
  40296c:	br	x17

0000000000402970 <dcgettext@plt>:
  402970:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #736]
  402978:	add	x16, x16, #0x2e0
  40297c:	br	x17

0000000000402980 <fputs_unlocked@plt>:
  402980:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #744]
  402988:	add	x16, x16, #0x2e8
  40298c:	br	x17

0000000000402990 <strcoll@plt>:
  402990:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #752]
  402998:	add	x16, x16, #0x2f0
  40299c:	br	x17

00000000004029a0 <__freading@plt>:
  4029a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #760]
  4029a8:	add	x16, x16, #0x2f8
  4029ac:	br	x17

00000000004029b0 <sigaddset@plt>:
  4029b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #768]
  4029b8:	add	x16, x16, #0x300
  4029bc:	br	x17

00000000004029c0 <iswprint@plt>:
  4029c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #776]
  4029c8:	add	x16, x16, #0x308
  4029cc:	br	x17

00000000004029d0 <__assert_fail@plt>:
  4029d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #784]
  4029d8:	add	x16, x16, #0x310
  4029dc:	br	x17

00000000004029e0 <__errno_location@plt>:
  4029e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #792]
  4029e8:	add	x16, x16, #0x318
  4029ec:	br	x17

00000000004029f0 <getenv@plt>:
  4029f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #800]
  4029f8:	add	x16, x16, #0x320
  4029fc:	br	x17

0000000000402a00 <__xstat@plt>:
  402a00:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #808]
  402a08:	add	x16, x16, #0x328
  402a0c:	br	x17

0000000000402a10 <getgrgid@plt>:
  402a10:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #816]
  402a18:	add	x16, x16, #0x330
  402a1c:	br	x17

0000000000402a20 <timegm@plt>:
  402a20:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #824]
  402a28:	add	x16, x16, #0x338
  402a2c:	br	x17

0000000000402a30 <ioctl@plt>:
  402a30:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #832]
  402a38:	add	x16, x16, #0x340
  402a3c:	br	x17

0000000000402a40 <setlocale@plt>:
  402a40:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #840]
  402a48:	add	x16, x16, #0x348
  402a4c:	br	x17

0000000000402a50 <__fxstatat@plt>:
  402a50:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #848]
  402a58:	add	x16, x16, #0x350
  402a5c:	br	x17

Disassembly of section .text:

0000000000402a60 <_obstack_begin@@Base-0x111d8>:
  402a60:	mov	x29, #0x0                   	// #0
  402a64:	mov	x30, #0x0                   	// #0
  402a68:	mov	x5, x0
  402a6c:	ldr	x1, [sp]
  402a70:	add	x2, sp, #0x8
  402a74:	mov	x6, sp
  402a78:	movz	x0, #0x0, lsl #48
  402a7c:	movk	x0, #0x0, lsl #32
  402a80:	movk	x0, #0x40, lsl #16
  402a84:	movk	x0, #0x2b6c
  402a88:	movz	x3, #0x0, lsl #48
  402a8c:	movk	x3, #0x0, lsl #32
  402a90:	movk	x3, #0x41, lsl #16
  402a94:	movk	x3, #0x5ef0
  402a98:	movz	x4, #0x0, lsl #48
  402a9c:	movk	x4, #0x0, lsl #32
  402aa0:	movk	x4, #0x41, lsl #16
  402aa4:	movk	x4, #0x5f70
  402aa8:	bl	402660 <__libc_start_main@plt>
  402aac:	bl	402770 <abort@plt>
  402ab0:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x17060>
  402ab4:	ldr	x0, [x0, #4064]
  402ab8:	cbz	x0, 402ac0 <__fxstatat@plt+0x70>
  402abc:	b	402750 <__gmon_start__@plt>
  402ac0:	ret
  402ac4:	nop
  402ac8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  402acc:	add	x0, x0, #0x588
  402ad0:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ad4:	add	x1, x1, #0x588
  402ad8:	cmp	x1, x0
  402adc:	b.eq	402af4 <__fxstatat@plt+0xa4>  // b.none
  402ae0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1060>
  402ae4:	ldr	x1, [x1, #4008]
  402ae8:	cbz	x1, 402af4 <__fxstatat@plt+0xa4>
  402aec:	mov	x16, x1
  402af0:	br	x16
  402af4:	ret
  402af8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  402afc:	add	x0, x0, #0x588
  402b00:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  402b04:	add	x1, x1, #0x588
  402b08:	sub	x1, x1, x0
  402b0c:	lsr	x2, x1, #63
  402b10:	add	x1, x2, x1, asr #3
  402b14:	cmp	xzr, x1, asr #1
  402b18:	asr	x1, x1, #1
  402b1c:	b.eq	402b34 <__fxstatat@plt+0xe4>  // b.none
  402b20:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x1060>
  402b24:	ldr	x2, [x2, #4016]
  402b28:	cbz	x2, 402b34 <__fxstatat@plt+0xe4>
  402b2c:	mov	x16, x2
  402b30:	br	x16
  402b34:	ret
  402b38:	stp	x29, x30, [sp, #-32]!
  402b3c:	mov	x29, sp
  402b40:	str	x19, [sp, #16]
  402b44:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  402b48:	ldrb	w0, [x19, #1472]
  402b4c:	cbnz	w0, 402b5c <__fxstatat@plt+0x10c>
  402b50:	bl	402ac8 <__fxstatat@plt+0x78>
  402b54:	mov	w0, #0x1                   	// #1
  402b58:	strb	w0, [x19, #1472]
  402b5c:	ldr	x19, [sp, #16]
  402b60:	ldp	x29, x30, [sp], #32
  402b64:	ret
  402b68:	b	402af8 <__fxstatat@plt+0xa8>
  402b6c:	stp	x29, x30, [sp, #-96]!
  402b70:	stp	x28, x27, [sp, #16]
  402b74:	stp	x26, x25, [sp, #32]
  402b78:	stp	x24, x23, [sp, #48]
  402b7c:	stp	x22, x21, [sp, #64]
  402b80:	stp	x20, x19, [sp, #80]
  402b84:	mov	x29, sp
  402b88:	sub	sp, sp, #0x640
  402b8c:	ldr	x8, [x1]
  402b90:	mov	w20, w0
  402b94:	mov	x19, x1
  402b98:	mov	x0, x8
  402b9c:	bl	410c74 <__fxstatat@plt+0xe224>
  402ba0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  402ba4:	add	x1, x1, #0x2c1
  402ba8:	mov	w0, #0x6                   	// #6
  402bac:	bl	402a40 <setlocale@plt>
  402bb0:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x5060>
  402bb4:	add	x22, x22, #0xde2
  402bb8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  402bbc:	add	x1, x1, #0xf20
  402bc0:	mov	x0, x22
  402bc4:	bl	402650 <bindtextdomain@plt>
  402bc8:	mov	x0, x22
  402bcc:	bl	4027b0 <textdomain@plt>
  402bd0:	adrp	x0, 40c000 <__fxstatat@plt+0x95b0>
  402bd4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402bd8:	mov	w9, #0x2                   	// #2
  402bdc:	add	x0, x0, #0x480
  402be0:	str	w9, [x8, #1312]
  402be4:	bl	415f78 <_obstack_memory_used@@Base+0x1fd8>
  402be8:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x18060>
  402bec:	mov	w8, #0x1                   	// #1
  402bf0:	strb	w8, [x12, #1492]
  402bf4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402bf8:	adrp	x9, 415000 <_obstack_memory_used@@Base+0x1060>
  402bfc:	ldr	w8, [x8, #1288]
  402c00:	ldr	q0, [x9, #4032]
  402c04:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c08:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c0c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c10:	adrp	x14, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c14:	cmp	w8, #0x1
  402c18:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c1c:	str	wzr, [x11, #1488]
  402c20:	str	xzr, [x13, #1496]
  402c24:	strb	wzr, [x14, #2296]
  402c28:	str	q0, [x10, #1504]
  402c2c:	b.eq	402c5c <__fxstatat@plt+0x20c>  // b.none
  402c30:	cmp	w8, #0x3
  402c34:	b.eq	402c48 <__fxstatat@plt+0x1f8>  // b.none
  402c38:	cmp	w8, #0x2
  402c3c:	b.ne	404f84 <__fxstatat@plt+0x2534>  // b.any
  402c40:	str	w8, [x22, #1524]
  402c44:	b	402c4c <__fxstatat@plt+0x1fc>
  402c48:	str	wzr, [x22, #1524]
  402c4c:	mov	w1, #0x7                   	// #7
  402c50:	mov	x0, xzr
  402c54:	bl	410d84 <__fxstatat@plt+0xe334>
  402c58:	b	402c98 <__fxstatat@plt+0x248>
  402c5c:	mov	w0, #0x1                   	// #1
  402c60:	mov	w21, #0x1                   	// #1
  402c64:	bl	402910 <isatty@plt>
  402c68:	cbz	w0, 402c8c <__fxstatat@plt+0x23c>
  402c6c:	mov	w8, #0x2                   	// #2
  402c70:	mov	w1, #0x3                   	// #3
  402c74:	mov	x0, xzr
  402c78:	str	w8, [x22, #1524]
  402c7c:	bl	410d84 <__fxstatat@plt+0xe334>
  402c80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c84:	strb	w21, [x8, #2296]
  402c88:	b	402c98 <__fxstatat@plt+0x248>
  402c8c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c90:	str	w21, [x22, #1524]
  402c94:	strb	wzr, [x8, #2296]
  402c98:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  402c9c:	adrp	x17, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ca0:	mov	w8, #0x1                   	// #1
  402ca4:	strb	wzr, [x0, #2304]
  402ca8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  402cac:	adrp	x18, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cb0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cb4:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cb8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cbc:	adrp	x16, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cc0:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cc4:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cc8:	adrp	x15, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ccc:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cd0:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cd4:	adrp	x14, 42c000 <_obstack_memory_used@@Base+0x18060>
  402cd8:	str	w8, [x17, #1528]
  402cdc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ce0:	add	x0, x0, #0xee4
  402ce4:	str	wzr, [x18, #2300]
  402ce8:	str	wzr, [x9, #1648]
  402cec:	strb	wzr, [x1, #2305]
  402cf0:	strb	wzr, [x10, #1653]
  402cf4:	str	wzr, [x16, #1536]
  402cf8:	strb	wzr, [x2, #2306]
  402cfc:	strb	wzr, [x11, #1540]
  402d00:	strb	wzr, [x15, #1532]
  402d04:	str	wzr, [x12, #2308]
  402d08:	str	xzr, [x13, #2312]
  402d0c:	str	xzr, [x14, #2320]
  402d10:	strb	wzr, [x8, #1652]
  402d14:	bl	4029f0 <getenv@plt>
  402d18:	cbz	x0, 402d88 <__fxstatat@plt+0x338>
  402d1c:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x6060>
  402d20:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  402d24:	add	x23, x23, #0xa90
  402d28:	add	x1, x1, #0xa38
  402d2c:	mov	w3, #0x4                   	// #4
  402d30:	mov	x2, x23
  402d34:	mov	x22, x0
  402d38:	bl	40b864 <__fxstatat@plt+0x8e14>
  402d3c:	tbnz	w0, #31, 402d54 <__fxstatat@plt+0x304>
  402d40:	sbfiz	x8, x0, #2, #32
  402d44:	ldr	w1, [x23, x8]
  402d48:	mov	x0, xzr
  402d4c:	bl	410d84 <__fxstatat@plt+0xe334>
  402d50:	b	402d88 <__fxstatat@plt+0x338>
  402d54:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  402d58:	add	x1, x1, #0xef2
  402d5c:	mov	w2, #0x5                   	// #5
  402d60:	mov	x0, xzr
  402d64:	bl	402970 <dcgettext@plt>
  402d68:	mov	x23, x0
  402d6c:	mov	x0, x22
  402d70:	bl	412440 <__fxstatat@plt+0xf9f0>
  402d74:	mov	x3, x0
  402d78:	mov	w0, wzr
  402d7c:	mov	w1, wzr
  402d80:	mov	x2, x23
  402d84:	bl	402490 <error@plt>
  402d88:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  402d8c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402d90:	mov	w8, #0x50                  	// #80
  402d94:	add	x0, x0, #0xca4
  402d98:	str	x8, [x9, #2328]
  402d9c:	bl	4029f0 <getenv@plt>
  402da0:	cbz	x0, 402e24 <__fxstatat@plt+0x3d4>
  402da4:	ldrb	w8, [x0]
  402da8:	mov	x22, x0
  402dac:	cbz	w8, 402e24 <__fxstatat@plt+0x3d4>
  402db0:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x6060>
  402db4:	add	x4, x4, #0x2c1
  402db8:	add	x3, sp, #0x20
  402dbc:	mov	x0, x22
  402dc0:	mov	x1, xzr
  402dc4:	mov	w2, wzr
  402dc8:	bl	4137dc <__fxstatat@plt+0x10d8c>
  402dcc:	cmp	w0, #0x1
  402dd0:	b.eq	402de0 <__fxstatat@plt+0x390>  // b.none
  402dd4:	cbnz	w0, 402df0 <__fxstatat@plt+0x3a0>
  402dd8:	ldr	x8, [sp, #32]
  402ddc:	b	402de4 <__fxstatat@plt+0x394>
  402de0:	mov	x8, #0xffffffffffffffff    	// #-1
  402de4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402de8:	str	x8, [x9, #2328]
  402dec:	b	402e24 <__fxstatat@plt+0x3d4>
  402df0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  402df4:	add	x1, x1, #0xcac
  402df8:	mov	w2, #0x5                   	// #5
  402dfc:	mov	x0, xzr
  402e00:	bl	402970 <dcgettext@plt>
  402e04:	mov	x23, x0
  402e08:	mov	x0, x22
  402e0c:	bl	412440 <__fxstatat@plt+0xf9f0>
  402e10:	mov	x3, x0
  402e14:	mov	w0, wzr
  402e18:	mov	w1, wzr
  402e1c:	mov	x2, x23
  402e20:	bl	402490 <error@plt>
  402e24:	add	x2, sp, #0x20
  402e28:	mov	w0, #0x1                   	// #1
  402e2c:	mov	w1, #0x5413                	// #21523
  402e30:	bl	402a30 <ioctl@plt>
  402e34:	cmn	w0, #0x1
  402e38:	b.eq	402e4c <__fxstatat@plt+0x3fc>  // b.none
  402e3c:	ldrh	w8, [sp, #34]
  402e40:	cbz	x8, 402e4c <__fxstatat@plt+0x3fc>
  402e44:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402e48:	str	x8, [x9, #2328]
  402e4c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  402e50:	add	x0, x0, #0xce7
  402e54:	bl	4029f0 <getenv@plt>
  402e58:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402e5c:	mov	w8, #0x8                   	// #8
  402e60:	str	x8, [x9, #2336]
  402e64:	cbz	x0, 402ec8 <__fxstatat@plt+0x478>
  402e68:	add	x3, sp, #0x20
  402e6c:	mov	x1, xzr
  402e70:	mov	w2, wzr
  402e74:	mov	x4, xzr
  402e78:	mov	x22, x0
  402e7c:	bl	41337c <__fxstatat@plt+0x1092c>
  402e80:	cbz	w0, 402ebc <__fxstatat@plt+0x46c>
  402e84:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  402e88:	add	x1, x1, #0xcef
  402e8c:	mov	w2, #0x5                   	// #5
  402e90:	mov	x0, xzr
  402e94:	bl	402970 <dcgettext@plt>
  402e98:	mov	x23, x0
  402e9c:	mov	x0, x22
  402ea0:	bl	412440 <__fxstatat@plt+0xf9f0>
  402ea4:	mov	x3, x0
  402ea8:	mov	w0, wzr
  402eac:	mov	w1, wzr
  402eb0:	mov	x2, x23
  402eb4:	bl	402490 <error@plt>
  402eb8:	b	402ec8 <__fxstatat@plt+0x478>
  402ebc:	ldr	x8, [sp, #32]
  402ec0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ec4:	str	x8, [x9, #2336]
  402ec8:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x5060>
  402ecc:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x2060>
  402ed0:	adrp	x28, 415000 <_obstack_memory_used@@Base+0x1060>
  402ed4:	mov	w27, wzr
  402ed8:	mov	w21, wzr
  402edc:	mov	x22, xzr
  402ee0:	mov	w23, #0xffffffff            	// #-1
  402ee4:	add	x24, x24, #0xd2d
  402ee8:	add	x25, x25, #0x368
  402eec:	add	x28, x28, #0xfe0
  402ef0:	sub	x4, x29, #0x10
  402ef4:	mov	w0, w20
  402ef8:	mov	x1, x19
  402efc:	mov	x2, x24
  402f00:	mov	x3, x25
  402f04:	stur	w23, [x29, #-16]
  402f08:	bl	4027d0 <getopt_long@plt>
  402f0c:	add	w8, w0, #0x3
  402f10:	cmp	w8, #0x113
  402f14:	b.hi	404ecc <__fxstatat@plt+0x247c>  // b.pmore
  402f18:	adr	x9, 402f2c <__fxstatat@plt+0x4dc>
  402f1c:	ldrh	w10, [x28, x8, lsl #1]
  402f20:	add	x9, x9, x10, lsl #2
  402f24:	mov	w8, #0x1                   	// #1
  402f28:	br	x9
  402f2c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402f30:	ldr	w8, [x9, #1524]
  402f34:	cbz	w8, 4034c4 <__fxstatat@plt+0xa74>
  402f38:	mov	w8, #0x1                   	// #1
  402f3c:	str	w8, [x9, #1524]
  402f40:	b	4034c4 <__fxstatat@plt+0xa74>
  402f44:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402f48:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x5060>
  402f4c:	str	wzr, [x8, #1524]
  402f50:	add	x22, x22, #0xd9f
  402f54:	b	4034c4 <__fxstatat@plt+0xa74>
  402f58:	mov	w8, #0x1                   	// #1
  402f5c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402f60:	strb	w8, [x9, #2304]
  402f64:	b	4034c4 <__fxstatat@plt+0xa74>
  402f68:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402f6c:	strb	wzr, [x8, #2296]
  402f70:	b	4034c4 <__fxstatat@plt+0xa74>
  402f74:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402f78:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402f7c:	ldr	x1, [x8, #1440]
  402f80:	ldr	x5, [x9, #1304]
  402f84:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x2060>
  402f88:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  402f8c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  402f90:	add	x26, x26, #0x930
  402f94:	add	x0, x0, #0xd8f
  402f98:	add	x2, x2, #0x948
  402f9c:	mov	w4, #0x4                   	// #4
  402fa0:	mov	x3, x26
  402fa4:	bl	40bb14 <__fxstatat@plt+0x90c4>
  402fa8:	ldr	w8, [x26, x0, lsl #2]
  402fac:	b	403384 <__fxstatat@plt+0x934>
  402fb0:	mov	w8, #0x1                   	// #1
  402fb4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  402fb8:	strb	w8, [x9, #2296]
  402fbc:	b	4034c4 <__fxstatat@plt+0xa74>
  402fc0:	mov	w8, #0x4                   	// #4
  402fc4:	b	4032d8 <__fxstatat@plt+0x888>
  402fc8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402fcc:	str	wzr, [x8, #1524]
  402fd0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402fd4:	mov	w9, #0x1                   	// #1
  402fd8:	strb	w9, [x8, #2344]
  402fdc:	b	4034c4 <__fxstatat@plt+0xa74>
  402fe0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  402fe4:	ldr	w8, [x8, #1524]
  402fe8:	mov	w9, #0x2                   	// #2
  402fec:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ff0:	str	w9, [x10, #2308]
  402ff4:	mov	w9, #0xffffffff            	// #-1
  402ff8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  402ffc:	str	w9, [x10, #1648]
  403000:	cbnz	w8, 403020 <__fxstatat@plt+0x5d0>
  403004:	mov	w0, #0x1                   	// #1
  403008:	mov	w21, #0x1                   	// #1
  40300c:	bl	402910 <isatty@plt>
  403010:	cmp	w0, #0x0
  403014:	cinc	w8, w21, ne  // ne = any
  403018:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40301c:	str	w8, [x9, #1524]
  403020:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403024:	strb	wzr, [x8, #1653]
  403028:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40302c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403030:	strb	wzr, [x8, #1520]
  403034:	strb	wzr, [x9, #1840]
  403038:	mov	w21, #0x1                   	// #1
  40303c:	b	4034c4 <__fxstatat@plt+0xa74>
  403040:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403044:	mov	w9, #0x1                   	// #1
  403048:	strb	w9, [x8, #1521]
  40304c:	b	4034c4 <__fxstatat@plt+0xa74>
  403050:	mov	w8, #0xffffffff            	// #-1
  403054:	b	403370 <__fxstatat@plt+0x920>
  403058:	mov	w8, #0x3                   	// #3
  40305c:	b	4033c8 <__fxstatat@plt+0x978>
  403060:	mov	w8, #0x2                   	// #2
  403064:	b	403210 <__fxstatat@plt+0x7c0>
  403068:	mov	w1, #0x7                   	// #7
  40306c:	b	40340c <__fxstatat@plt+0x9bc>
  403070:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403074:	str	wzr, [x8, #1524]
  403078:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40307c:	mov	w9, #0x1                   	// #1
  403080:	strb	w9, [x8, #2368]
  403084:	b	4034c4 <__fxstatat@plt+0xa74>
  403088:	mov	w21, #0x1                   	// #1
  40308c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403090:	str	w21, [x8, #1648]
  403094:	b	4034c4 <__fxstatat@plt+0xa74>
  403098:	mov	w0, #0x10                  	// #16
  40309c:	bl	412e10 <__fxstatat@plt+0x103c0>
  4030a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4030a4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4030a8:	ldr	x8, [x8, #1440]
  4030ac:	ldr	x9, [x10, #2320]
  4030b0:	str	x0, [x10, #2320]
  4030b4:	stp	x8, x9, [x0]
  4030b8:	b	4034c4 <__fxstatat@plt+0xa74>
  4030bc:	mov	w8, #0x1                   	// #1
  4030c0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4030c4:	strb	w8, [x9, #2305]
  4030c8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4030cc:	str	wzr, [x8, #1524]
  4030d0:	b	4034c4 <__fxstatat@plt+0xa74>
  4030d4:	mov	w8, #0x1                   	// #1
  4030d8:	b	4034bc <__fxstatat@plt+0xa6c>
  4030dc:	mov	w8, #0x1                   	// #1
  4030e0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4030e4:	strb	w8, [x9, #1540]
  4030e8:	b	4034c4 <__fxstatat@plt+0xa74>
  4030ec:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4030f0:	mov	w9, #0x1                   	// #1
  4030f4:	strb	w9, [x8, #2369]
  4030f8:	b	4034c4 <__fxstatat@plt+0xa74>
  4030fc:	mov	w8, #0x2                   	// #2
  403100:	b	4033c8 <__fxstatat@plt+0x978>
  403104:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403108:	ldr	x26, [x8, #1440]
  40310c:	mov	w0, #0x10                  	// #16
  403110:	bl	412e10 <__fxstatat@plt+0x103c0>
  403114:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403118:	ldr	x8, [x9, #2312]
  40311c:	str	x0, [x9, #2312]
  403120:	stp	x26, x8, [x0]
  403124:	b	4034c4 <__fxstatat@plt+0xa74>
  403128:	mov	w8, #0x1                   	// #1
  40312c:	b	403384 <__fxstatat@plt+0x934>
  403130:	mov	x0, xzr
  403134:	mov	w1, wzr
  403138:	bl	410d84 <__fxstatat@plt+0xe334>
  40313c:	b	4034c4 <__fxstatat@plt+0xa74>
  403140:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403144:	mov	w9, #0x1                   	// #1
  403148:	strb	w9, [x8, #1661]
  40314c:	b	4034c4 <__fxstatat@plt+0xa74>
  403150:	mov	w0, #0x10                  	// #16
  403154:	bl	412e10 <__fxstatat@plt+0x103c0>
  403158:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  40315c:	ldr	x8, [x26, #2312]
  403160:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  403164:	add	x9, x9, #0xd74
  403168:	str	x0, [x26, #2312]
  40316c:	stp	x9, x8, [x0]
  403170:	mov	w0, #0x10                  	// #16
  403174:	bl	412e10 <__fxstatat@plt+0x103c0>
  403178:	ldr	x8, [x26, #2312]
  40317c:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  403180:	add	x9, x9, #0xd73
  403184:	str	x0, [x26, #2312]
  403188:	stp	x9, x8, [x0]
  40318c:	b	4034c4 <__fxstatat@plt+0xa74>
  403190:	mov	w8, #0x1                   	// #1
  403194:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403198:	strb	w8, [x9, #1652]
  40319c:	b	4034c4 <__fxstatat@plt+0xa74>
  4031a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4031a4:	ldr	x26, [x8, #1440]
  4031a8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4031ac:	add	x1, x1, #0xd77
  4031b0:	mov	w2, #0x5                   	// #5
  4031b4:	mov	x0, xzr
  4031b8:	bl	402970 <dcgettext@plt>
  4031bc:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x6060>
  4031c0:	mov	x5, x0
  4031c4:	add	x4, x4, #0x2c1
  4031c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4031cc:	mov	w6, #0x2                   	// #2
  4031d0:	mov	x0, x26
  4031d4:	mov	w1, wzr
  4031d8:	mov	x2, xzr
  4031dc:	bl	413168 <__fxstatat@plt+0x10718>
  4031e0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4031e4:	str	x0, [x8, #2336]
  4031e8:	b	4034c4 <__fxstatat@plt+0xa74>
  4031ec:	mov	w8, #0x1                   	// #1
  4031f0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4031f4:	strb	w8, [x9, #1532]
  4031f8:	b	4034c4 <__fxstatat@plt+0xa74>
  4031fc:	mov	w8, #0x3                   	// #3
  403200:	b	4032d8 <__fxstatat@plt+0x888>
  403204:	mov	w8, #0x4                   	// #4
  403208:	b	4033c8 <__fxstatat@plt+0x978>
  40320c:	mov	w8, #0x1                   	// #1
  403210:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403214:	str	w8, [x9, #2308]
  403218:	b	4034c4 <__fxstatat@plt+0xa74>
  40321c:	mov	w8, #0x2                   	// #2
  403220:	b	4034bc <__fxstatat@plt+0xa6c>
  403224:	mov	w8, #0x3                   	// #3
  403228:	b	4034bc <__fxstatat@plt+0xa6c>
  40322c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  403230:	ldr	x0, [x26, #1440]
  403234:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x6060>
  403238:	add	x4, x4, #0x2c1
  40323c:	add	x3, sp, #0x20
  403240:	mov	x1, xzr
  403244:	mov	w2, wzr
  403248:	bl	4137dc <__fxstatat@plt+0x10d8c>
  40324c:	cmp	w0, #0x1
  403250:	b.eq	403548 <__fxstatat@plt+0xaf8>  // b.none
  403254:	cbnz	w0, 404f8c <__fxstatat@plt+0x253c>
  403258:	ldr	x8, [sp, #32]
  40325c:	b	40354c <__fxstatat@plt+0xafc>
  403260:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403264:	mov	w9, #0xb0                  	// #176
  403268:	b	4032fc <__fxstatat@plt+0x8ac>
  40326c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  403270:	ldr	x0, [x26, #1440]
  403274:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  403278:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x18060>
  40327c:	add	x1, x1, #0x92c
  403280:	add	x2, x2, #0x938
  403284:	bl	40e898 <__fxstatat@plt+0xbe48>
  403288:	cbnz	w0, 404fcc <__fxstatat@plt+0x257c>
  40328c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403290:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403294:	ldr	w8, [x8, #2348]
  403298:	ldr	x9, [x9, #2360]
  40329c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4032a0:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  4032a4:	str	w8, [x10, #2352]
  4032a8:	str	x9, [x11, #1256]
  4032ac:	b	4034c4 <__fxstatat@plt+0xa74>
  4032b0:	mov	w1, #0x5                   	// #5
  4032b4:	b	40340c <__fxstatat@plt+0x9bc>
  4032b8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4032bc:	ldr	x22, [x8, #1440]
  4032c0:	b	4034c4 <__fxstatat@plt+0xa74>
  4032c4:	mov	w8, #0x2                   	// #2
  4032c8:	b	403370 <__fxstatat@plt+0x920>
  4032cc:	mov	w8, #0x3                   	// #3
  4032d0:	b	403370 <__fxstatat@plt+0x920>
  4032d4:	mov	w8, #0x5                   	// #5
  4032d8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4032dc:	str	w8, [x9, #1528]
  4032e0:	b	4034c4 <__fxstatat@plt+0xa74>
  4032e4:	mov	w8, #0x1                   	// #1
  4032e8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4032ec:	strb	w8, [x9, #2306]
  4032f0:	b	4034c4 <__fxstatat@plt+0xa74>
  4032f4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4032f8:	mov	w9, #0x90                  	// #144
  4032fc:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  403300:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  403304:	mov	w12, #0x1                   	// #1
  403308:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x18060>
  40330c:	str	w9, [x8, #2348]
  403310:	str	w9, [x10, #2352]
  403314:	str	x12, [x11, #2360]
  403318:	str	x12, [x13, #1256]
  40331c:	b	4034c4 <__fxstatat@plt+0xa74>
  403320:	mov	w8, #0x1                   	// #1
  403324:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403328:	strb	w8, [x9, #1653]
  40332c:	b	4034c4 <__fxstatat@plt+0xa74>
  403330:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403334:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403338:	ldr	x1, [x8, #1440]
  40333c:	ldr	x5, [x9, #1304]
  403340:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x2060>
  403344:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  403348:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  40334c:	add	x26, x26, #0x8e8
  403350:	add	x0, x0, #0xd88
  403354:	add	x2, x2, #0x900
  403358:	mov	w4, #0x4                   	// #4
  40335c:	mov	x3, x26
  403360:	bl	40bb14 <__fxstatat@plt+0x90c4>
  403364:	ldr	w8, [x26, x0, lsl #2]
  403368:	b	403370 <__fxstatat@plt+0x920>
  40336c:	mov	w8, #0x4                   	// #4
  403370:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403374:	str	w8, [x9, #1648]
  403378:	mov	w21, #0x1                   	// #1
  40337c:	b	4034c4 <__fxstatat@plt+0xa74>
  403380:	mov	w8, #0x2                   	// #2
  403384:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403388:	str	w8, [x9, #2300]
  40338c:	b	4034c4 <__fxstatat@plt+0xa74>
  403390:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403394:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403398:	ldr	x1, [x8, #1440]
  40339c:	ldr	x5, [x9, #1304]
  4033a0:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x2060>
  4033a4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  4033a8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  4033ac:	add	x26, x26, #0x978
  4033b0:	add	x0, x0, #0xd96
  4033b4:	add	x2, x2, #0x998
  4033b8:	mov	w4, #0x4                   	// #4
  4033bc:	mov	x3, x26
  4033c0:	bl	40bb14 <__fxstatat@plt+0x90c4>
  4033c4:	ldr	w8, [x26, x0, lsl #2]
  4033c8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4033cc:	str	w8, [x9, #1524]
  4033d0:	b	4034c4 <__fxstatat@plt+0xa74>
  4033d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4033d8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4033dc:	ldr	x1, [x8, #1440]
  4033e0:	ldr	x5, [x9, #1304]
  4033e4:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x6060>
  4033e8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  4033ec:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  4033f0:	add	x26, x26, #0xa90
  4033f4:	add	x0, x0, #0xdce
  4033f8:	add	x2, x2, #0xa38
  4033fc:	mov	w4, #0x4                   	// #4
  403400:	mov	x3, x26
  403404:	bl	40bb14 <__fxstatat@plt+0x90c4>
  403408:	ldr	w1, [x26, x0, lsl #2]
  40340c:	mov	x0, xzr
  403410:	bl	410d84 <__fxstatat@plt+0xe334>
  403414:	b	4034c4 <__fxstatat@plt+0xa74>
  403418:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40341c:	ldr	x1, [x8, #1440]
  403420:	cbz	x1, 403530 <__fxstatat@plt+0xae0>
  403424:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403428:	ldr	x5, [x8, #1304]
  40342c:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x2060>
  403430:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  403434:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  403438:	add	x26, x26, #0x9d8
  40343c:	add	x0, x0, #0xda8
  403440:	add	x2, x2, #0xa00
  403444:	mov	w4, #0x4                   	// #4
  403448:	mov	x3, x26
  40344c:	bl	40bb14 <__fxstatat@plt+0x90c4>
  403450:	ldr	w8, [x26, x0, lsl #2]
  403454:	cmp	w8, #0x1
  403458:	b.eq	403530 <__fxstatat@plt+0xae0>  // b.none
  40345c:	cmp	w8, #0x2
  403460:	b.ne	403560 <__fxstatat@plt+0xb10>  // b.any
  403464:	mov	w0, #0x1                   	// #1
  403468:	bl	402910 <isatty@plt>
  40346c:	cmp	w0, #0x0
  403470:	cset	w8, ne  // ne = any
  403474:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403478:	strb	w8, [x9, #1520]
  40347c:	cbnz	w0, 40353c <__fxstatat@plt+0xaec>
  403480:	b	4034c4 <__fxstatat@plt+0xa74>
  403484:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403488:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40348c:	ldr	x1, [x8, #1440]
  403490:	ldr	x5, [x9, #1304]
  403494:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x2060>
  403498:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  40349c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  4034a0:	add	x26, x26, #0xa50
  4034a4:	add	x0, x0, #0xdbc
  4034a8:	add	x2, x2, #0xa60
  4034ac:	mov	w4, #0x4                   	// #4
  4034b0:	mov	x3, x26
  4034b4:	bl	40bb14 <__fxstatat@plt+0x90c4>
  4034b8:	ldr	w8, [x26, x0, lsl #2]
  4034bc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4034c0:	str	w8, [x9, #1536]
  4034c4:	mov	w8, w27
  4034c8:	mov	w27, w8
  4034cc:	b	402ef0 <__fxstatat@plt+0x4a0>
  4034d0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4034d4:	ldr	x1, [x8, #1440]
  4034d8:	cbz	x1, 403558 <__fxstatat@plt+0xb08>
  4034dc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4034e0:	ldr	x5, [x8, #1304]
  4034e4:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x2060>
  4034e8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  4034ec:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  4034f0:	add	x26, x26, #0x9d8
  4034f4:	add	x0, x0, #0xdb0
  4034f8:	add	x2, x2, #0xa00
  4034fc:	mov	w4, #0x4                   	// #4
  403500:	mov	x3, x26
  403504:	bl	40bb14 <__fxstatat@plt+0x90c4>
  403508:	ldr	w8, [x26, x0, lsl #2]
  40350c:	cmp	w8, #0x1
  403510:	b.eq	403570 <__fxstatat@plt+0xb20>  // b.none
  403514:	cmp	w8, #0x2
  403518:	b.ne	40356c <__fxstatat@plt+0xb1c>  // b.any
  40351c:	mov	w0, #0x1                   	// #1
  403520:	bl	402910 <isatty@plt>
  403524:	cmp	w0, #0x0
  403528:	cset	w8, ne  // ne = any
  40352c:	b	403570 <__fxstatat@plt+0xb20>
  403530:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403534:	mov	w9, #0x1                   	// #1
  403538:	strb	w9, [x8, #1520]
  40353c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403540:	str	xzr, [x8, #2336]
  403544:	b	4034c4 <__fxstatat@plt+0xa74>
  403548:	mov	x8, #0xffffffffffffffff    	// #-1
  40354c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403550:	str	x8, [x9, #2328]
  403554:	b	4034c4 <__fxstatat@plt+0xa74>
  403558:	mov	w8, #0x1                   	// #1
  40355c:	b	403570 <__fxstatat@plt+0xb20>
  403560:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403564:	strb	wzr, [x8, #1520]
  403568:	b	4034c4 <__fxstatat@plt+0xa74>
  40356c:	mov	w8, wzr
  403570:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403574:	strb	w8, [x9, #1840]
  403578:	b	4034c4 <__fxstatat@plt+0xa74>
  40357c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403580:	ldr	x8, [x8, #2360]
  403584:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  403588:	cbnz	x8, 4035fc <__fxstatat@plt+0xbac>
  40358c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  403590:	add	x0, x0, #0xe10
  403594:	bl	4029f0 <getenv@plt>
  403598:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  40359c:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035a0:	add	x1, x1, #0x92c
  4035a4:	add	x2, x2, #0x938
  4035a8:	mov	x23, x0
  4035ac:	bl	40e898 <__fxstatat@plt+0xbe48>
  4035b0:	cbnz	x23, 4035c4 <__fxstatat@plt+0xb74>
  4035b4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  4035b8:	add	x0, x0, #0xe13
  4035bc:	bl	4029f0 <getenv@plt>
  4035c0:	cbz	x0, 4035e4 <__fxstatat@plt+0xb94>
  4035c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035c8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035cc:	ldr	w8, [x8, #2348]
  4035d0:	ldr	x9, [x9, #2360]
  4035d4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035d8:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035dc:	str	w8, [x10, #2352]
  4035e0:	str	x9, [x11, #1256]
  4035e4:	tbz	w27, #0, 4035fc <__fxstatat@plt+0xbac>
  4035e8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035ec:	mov	w9, #0x400                 	// #1024
  4035f0:	str	wzr, [x8, #2348]
  4035f4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4035f8:	str	x9, [x8, #2360]
  4035fc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403600:	ldr	x8, [x8, #2328]
  403604:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  403608:	movk	x9, #0xaaab
  40360c:	mov	x0, xzr
  403610:	umulh	x9, x8, x9
  403614:	lsr	x9, x9, #1
  403618:	add	x10, x9, x9, lsl #1
  40361c:	cmp	x8, x10
  403620:	cinc	x8, x9, ne  // ne = any
  403624:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403628:	str	x8, [x9, #2376]
  40362c:	bl	410d6c <__fxstatat@plt+0xe31c>
  403630:	ldr	w9, [x24, #1524]
  403634:	mov	w23, w0
  403638:	mov	w8, wzr
  40363c:	cmp	w9, #0x1
  403640:	b.eq	403674 <__fxstatat@plt+0xc24>  // b.none
  403644:	cmp	w9, #0x4
  403648:	b.eq	403674 <__fxstatat@plt+0xc24>  // b.none
  40364c:	cbz	w9, 40365c <__fxstatat@plt+0xc0c>
  403650:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403654:	ldr	x8, [x8, #2328]
  403658:	cbz	x8, 403674 <__fxstatat@plt+0xc24>
  40365c:	orr	w8, w23, #0x2
  403660:	cmp	w8, #0x3
  403664:	cset	w8, eq  // eq = none
  403668:	cmp	w23, #0x6
  40366c:	cset	w9, eq  // eq = none
  403670:	orr	w8, w9, w8
  403674:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403678:	mov	x0, xzr
  40367c:	strb	w8, [x9, #2384]
  403680:	bl	410d20 <__fxstatat@plt+0xe2d0>
  403684:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403688:	cmp	w23, #0x7
  40368c:	str	x0, [x8, #1904]
  403690:	b.ne	4036a0 <__fxstatat@plt+0xc50>  // b.any
  403694:	mov	w1, #0x20                  	// #32
  403698:	mov	w2, #0x1                   	// #1
  40369c:	bl	410d9c <__fxstatat@plt+0xe34c>
  4036a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4036a4:	ldr	w8, [x8, #1536]
  4036a8:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  4036ac:	subs	w8, w8, #0x2
  4036b0:	b.cc	4036e0 <__fxstatat@plt+0xc90>  // b.lo, b.ul, b.last
  4036b4:	cmp	w8, #0x5
  4036b8:	b.eq	4036e0 <__fxstatat@plt+0xc90>  // b.none
  4036bc:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  4036c0:	add	x9, x9, #0xe1e
  4036c4:	add	x23, x9, x8
  4036c8:	ldrb	w1, [x23], #1
  4036cc:	ldr	x0, [x25, #1904]
  4036d0:	mov	w2, #0x1                   	// #1
  4036d4:	bl	410d9c <__fxstatat@plt+0xe34c>
  4036d8:	ldrb	w1, [x23], #1
  4036dc:	cbnz	w1, 4036cc <__fxstatat@plt+0xc7c>
  4036e0:	mov	x0, xzr
  4036e4:	bl	410d20 <__fxstatat@plt+0xe2d0>
  4036e8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4036ec:	mov	w1, #0x3a                  	// #58
  4036f0:	mov	w2, #0x1                   	// #1
  4036f4:	str	x0, [x8, #2392]
  4036f8:	bl	410d9c <__fxstatat@plt+0xe34c>
  4036fc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403700:	ldrb	w8, [x8, #1661]
  403704:	cmp	w8, #0x1
  403708:	b.ne	403728 <__fxstatat@plt+0xcd8>  // b.any
  40370c:	ldr	w8, [x24, #1524]
  403710:	cbnz	w8, 403720 <__fxstatat@plt+0xcd0>
  403714:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403718:	ldrb	w8, [x8, #1840]
  40371c:	cbz	w8, 403728 <__fxstatat@plt+0xcd8>
  403720:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403724:	strb	wzr, [x8, #1661]
  403728:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40372c:	ldr	w8, [x8, #2300]
  403730:	sub	w8, w8, #0x1
  403734:	cmp	w8, #0x1
  403738:	b.hi	40375c <__fxstatat@plt+0xd0c>  // b.pmore
  40373c:	ldr	w8, [x24, #1524]
  403740:	cbz	w8, 403760 <__fxstatat@plt+0xd10>
  403744:	eor	w9, w21, #0x1
  403748:	tbz	w9, #0, 403760 <__fxstatat@plt+0xd10>
  40374c:	mov	w8, #0x4                   	// #4
  403750:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403754:	str	w8, [x9, #1648]
  403758:	b	403764 <__fxstatat@plt+0xd14>
  40375c:	ldr	w8, [x24, #1524]
  403760:	cbz	w8, 403a28 <__fxstatat@plt+0xfd8>
  403764:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403768:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40376c:	ldrb	w9, [x9, #1520]
  403770:	ldrsw	x21, [x8, #1448]
  403774:	cbz	w9, 403b6c <__fxstatat@plt+0x111c>
  403778:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40377c:	add	x0, x0, #0x149
  403780:	bl	4029f0 <getenv@plt>
  403784:	str	x0, [sp, #32]
  403788:	cbz	x0, 403990 <__fxstatat@plt+0xf40>
  40378c:	ldrb	w8, [x0]
  403790:	cbz	w8, 403990 <__fxstatat@plt+0xf40>
  403794:	mov	w8, #0x3f3f                	// #16191
  403798:	sturb	wzr, [x29, #-18]
  40379c:	sturh	w8, [x29, #-20]
  4037a0:	bl	4130cc <__fxstatat@plt+0x1067c>
  4037a4:	adrp	x27, 416000 <_obstack_memory_used@@Base+0x2060>
  4037a8:	adrp	x23, 416000 <_obstack_memory_used@@Base+0x2060>
  4037ac:	mov	x22, xzr
  4037b0:	adrp	x25, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4037b4:	mov	w8, #0x1                   	// #1
  4037b8:	add	x27, x27, #0x210
  4037bc:	adrp	x26, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4037c0:	add	x23, x23, #0xac8
  4037c4:	stur	x0, [x29, #-16]
  4037c8:	str	x0, [x25, #1384]
  4037cc:	sub	w8, w8, #0x1
  4037d0:	cmp	w8, #0x5
  4037d4:	b.hi	404f84 <__fxstatat@plt+0x2534>  // b.pmore
  4037d8:	adr	x9, 4037e8 <__fxstatat@plt+0xd98>
  4037dc:	ldrh	w10, [x27, x8, lsl #1]
  4037e0:	add	x9, x9, x10, lsl #2
  4037e4:	br	x9
  4037e8:	ldr	x24, [sp, #32]
  4037ec:	ldrb	w8, [x24]
  4037f0:	cmp	w8, #0x2a
  4037f4:	b.eq	4038e0 <__fxstatat@plt+0xe90>  // b.none
  4037f8:	cmp	w8, #0x3a
  4037fc:	b.eq	4038d0 <__fxstatat@plt+0xe80>  // b.none
  403800:	cbz	w8, 403b28 <__fxstatat@plt+0x10d8>
  403804:	add	x9, x24, #0x1
  403808:	sturb	w8, [x29, #-20]
  40380c:	str	x9, [sp, #32]
  403810:	mov	w8, #0x2                   	// #2
  403814:	b	4037cc <__fxstatat@plt+0xd7c>
  403818:	ldr	x8, [sp, #32]
  40381c:	add	x9, x8, #0x1
  403820:	str	x9, [sp, #32]
  403824:	ldrb	w8, [x8]
  403828:	cmp	w8, #0x3d
  40382c:	mov	w8, #0x6                   	// #6
  403830:	b.ne	4037cc <__fxstatat@plt+0xd7c>  // b.any
  403834:	ldur	x8, [x29, #-16]
  403838:	add	x3, x22, #0x10
  40383c:	sub	x0, x29, #0x10
  403840:	add	x1, sp, #0x20
  403844:	mov	w2, wzr
  403848:	str	x8, [x22, #24]
  40384c:	bl	407dd4 <__fxstatat@plt+0x5384>
  403850:	tst	w0, #0x1
  403854:	mov	w8, #0x6                   	// #6
  403858:	csinc	w8, w8, wzr, eq  // eq = none
  40385c:	b	4037cc <__fxstatat@plt+0xd7c>
  403860:	ldr	x10, [sp, #32]
  403864:	mov	w8, #0x6                   	// #6
  403868:	ldrb	w9, [x10]
  40386c:	cbz	w9, 4037cc <__fxstatat@plt+0xd7c>
  403870:	add	x8, x10, #0x1
  403874:	sturb	w9, [x29, #-19]
  403878:	str	x8, [sp, #32]
  40387c:	mov	w8, #0x3                   	// #3
  403880:	b	4037cc <__fxstatat@plt+0xd7c>
  403884:	ldr	x8, [sp, #32]
  403888:	add	x9, x8, #0x1
  40388c:	str	x9, [sp, #32]
  403890:	ldrb	w8, [x8]
  403894:	cmp	w8, #0x3d
  403898:	mov	w8, #0x6                   	// #6
  40389c:	b.ne	4037cc <__fxstatat@plt+0xd7c>  // b.any
  4038a0:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  4038a4:	mov	x28, xzr
  4038a8:	add	x24, x24, #0x368
  4038ac:	ldr	x1, [x23, x28]
  4038b0:	sub	x0, x29, #0x14
  4038b4:	bl	402800 <strcmp@plt>
  4038b8:	cbz	w0, 403930 <__fxstatat@plt+0xee0>
  4038bc:	add	x28, x28, #0x8
  4038c0:	cmp	x28, #0xc0
  4038c4:	add	x24, x24, #0x10
  4038c8:	b.ne	4038ac <__fxstatat@plt+0xe5c>  // b.any
  4038cc:	b	403954 <__fxstatat@plt+0xf04>
  4038d0:	add	x8, x24, #0x1
  4038d4:	str	x8, [sp, #32]
  4038d8:	mov	w8, #0x1                   	// #1
  4038dc:	b	4037cc <__fxstatat@plt+0xd7c>
  4038e0:	mov	w0, #0x28                  	// #40
  4038e4:	bl	412e10 <__fxstatat@plt+0x103c0>
  4038e8:	ldr	x8, [x26, #1392]
  4038ec:	ldur	x9, [x29, #-16]
  4038f0:	mov	x22, x0
  4038f4:	str	x0, [x26, #1392]
  4038f8:	add	x10, x24, #0x1
  4038fc:	str	x8, [x0, #32]
  403900:	str	x9, [x0, #8]
  403904:	sub	x0, x29, #0x10
  403908:	add	x1, sp, #0x20
  40390c:	mov	w2, #0x1                   	// #1
  403910:	mov	x3, x22
  403914:	str	x10, [sp, #32]
  403918:	bl	407dd4 <__fxstatat@plt+0x5384>
  40391c:	tst	w0, #0x1
  403920:	mov	w8, #0x6                   	// #6
  403924:	mov	w9, #0x4                   	// #4
  403928:	csel	w8, w9, w8, ne  // ne = any
  40392c:	b	4037cc <__fxstatat@plt+0xd7c>
  403930:	ldur	x8, [x29, #-16]
  403934:	sub	x0, x29, #0x10
  403938:	add	x1, sp, #0x20
  40393c:	mov	w2, wzr
  403940:	mov	x3, x24
  403944:	str	x8, [x24, #8]
  403948:	bl	407dd4 <__fxstatat@plt+0x5384>
  40394c:	mov	w8, #0x1                   	// #1
  403950:	tbnz	w0, #0, 4037cc <__fxstatat@plt+0xd7c>
  403954:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  403958:	mov	w2, #0x5                   	// #5
  40395c:	mov	x0, xzr
  403960:	add	x1, x1, #0x160
  403964:	bl	402970 <dcgettext@plt>
  403968:	mov	x24, x0
  40396c:	sub	x0, x29, #0x14
  403970:	bl	412440 <__fxstatat@plt+0xf9f0>
  403974:	mov	x3, x0
  403978:	mov	w0, wzr
  40397c:	mov	w1, wzr
  403980:	mov	x2, x24
  403984:	bl	402490 <error@plt>
  403988:	mov	w8, #0x6                   	// #6
  40398c:	b	4037cc <__fxstatat@plt+0xd7c>
  403990:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  403994:	add	x0, x0, #0x153
  403998:	bl	4029f0 <getenv@plt>
  40399c:	cbz	x0, 4039a8 <__fxstatat@plt+0xf58>
  4039a0:	ldrb	w8, [x0]
  4039a4:	cbnz	w8, 403b6c <__fxstatat@plt+0x111c>
  4039a8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  4039ac:	add	x0, x0, #0x158
  4039b0:	bl	4029f0 <getenv@plt>
  4039b4:	cbz	x0, 403b64 <__fxstatat@plt+0x1114>
  4039b8:	ldrb	w8, [x0]
  4039bc:	mov	x22, x0
  4039c0:	cbz	w8, 403b64 <__fxstatat@plt+0x1114>
  4039c4:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x2060>
  4039c8:	add	x25, x25, #0xb90
  4039cc:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x6060>
  4039d0:	add	x23, x23, #0x1b3
  4039d4:	mov	x24, x25
  4039d8:	b	4039fc <__fxstatat@plt+0xfac>
  4039dc:	mov	x0, x24
  4039e0:	bl	402430 <strlen@plt>
  4039e4:	add	x8, x0, x24
  4039e8:	add	x24, x8, #0x1
  4039ec:	sub	x8, x24, x25
  4039f0:	lsr	x8, x8, #2
  4039f4:	cmp	x8, #0x431
  4039f8:	b.cs	403b64 <__fxstatat@plt+0x1114>  // b.hs, b.nlast
  4039fc:	mov	w2, #0x5                   	// #5
  403a00:	mov	x0, x24
  403a04:	mov	x1, x23
  403a08:	bl	402640 <strncmp@plt>
  403a0c:	cbnz	w0, 4039dc <__fxstatat@plt+0xf8c>
  403a10:	add	x0, x24, #0x5
  403a14:	mov	x1, x22
  403a18:	mov	w2, wzr
  403a1c:	bl	402890 <fnmatch@plt>
  403a20:	cbnz	w0, 4039dc <__fxstatat@plt+0xf8c>
  403a24:	b	403b6c <__fxstatat@plt+0x111c>
  403a28:	cbnz	x22, 403a48 <__fxstatat@plt+0xff8>
  403a2c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  403a30:	add	x0, x0, #0xe24
  403a34:	bl	4029f0 <getenv@plt>
  403a38:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x3060>
  403a3c:	add	x8, x8, #0xf2b
  403a40:	cmp	x0, #0x0
  403a44:	csel	x22, x8, x0, eq  // eq = none
  403a48:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2060>
  403a4c:	add	x1, x1, #0xa88
  403a50:	mov	w2, #0x6                   	// #6
  403a54:	mov	x0, x22
  403a58:	bl	402640 <strncmp@plt>
  403a5c:	cbnz	w0, 403a8c <__fxstatat@plt+0x103c>
  403a60:	adrp	x23, 416000 <_obstack_memory_used@@Base+0x2060>
  403a64:	add	x23, x23, #0xa88
  403a68:	mov	w0, #0x2                   	// #2
  403a6c:	bl	40ced4 <__fxstatat@plt+0xa484>
  403a70:	tbz	w0, #0, 403764 <__fxstatat@plt+0xd14>
  403a74:	add	x22, x22, #0x6
  403a78:	mov	w2, #0x6                   	// #6
  403a7c:	mov	x0, x22
  403a80:	mov	x1, x23
  403a84:	bl	402640 <strncmp@plt>
  403a88:	cbz	w0, 403a68 <__fxstatat@plt+0x1018>
  403a8c:	ldrb	w8, [x22]
  403a90:	cmp	w8, #0x2b
  403a94:	b.ne	403bd0 <__fxstatat@plt+0x1180>  // b.any
  403a98:	add	x22, x22, #0x1
  403a9c:	mov	w1, #0xa                   	// #10
  403aa0:	mov	x0, x22
  403aa4:	bl	402870 <strchr@plt>
  403aa8:	mov	x23, x22
  403aac:	cbz	x0, 403acc <__fxstatat@plt+0x107c>
  403ab0:	add	x23, x0, #0x1
  403ab4:	mov	x24, x0
  403ab8:	mov	w1, #0xa                   	// #10
  403abc:	mov	x0, x23
  403ac0:	bl	402870 <strchr@plt>
  403ac4:	cbnz	x0, 4050c0 <__fxstatat@plt+0x2670>
  403ac8:	strb	wzr, [x24]
  403acc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403ad0:	add	x8, x8, #0x4f0
  403ad4:	stp	x22, x23, [x8]
  403ad8:	b	404c44 <__fxstatat@plt+0x21f4>
  403adc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  403ae0:	add	x1, x1, #0x178
  403ae4:	mov	w2, #0x5                   	// #5
  403ae8:	mov	x0, xzr
  403aec:	bl	402970 <dcgettext@plt>
  403af0:	mov	x2, x0
  403af4:	mov	w0, wzr
  403af8:	mov	w1, wzr
  403afc:	bl	402490 <error@plt>
  403b00:	ldr	x0, [x25, #1384]
  403b04:	bl	402840 <free@plt>
  403b08:	ldr	x0, [x26, #1392]
  403b0c:	cbz	x0, 403b20 <__fxstatat@plt+0x10d0>
  403b10:	ldr	x22, [x0, #32]
  403b14:	bl	402840 <free@plt>
  403b18:	mov	x0, x22
  403b1c:	cbnz	x22, 403b10 <__fxstatat@plt+0x10c0>
  403b20:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b24:	strb	wzr, [x8, #1520]
  403b28:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b2c:	ldr	x8, [x8, #984]
  403b30:	cmp	x8, #0x6
  403b34:	b.ne	403b6c <__fxstatat@plt+0x111c>  // b.any
  403b38:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b3c:	ldr	x0, [x8, #992]
  403b40:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  403b44:	add	x1, x1, #0x1ac
  403b48:	mov	w2, #0x6                   	// #6
  403b4c:	bl	402640 <strncmp@plt>
  403b50:	cbnz	w0, 403b6c <__fxstatat@plt+0x111c>
  403b54:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b58:	mov	w9, #0x1                   	// #1
  403b5c:	strb	w9, [x8, #1523]
  403b60:	b	403b6c <__fxstatat@plt+0x111c>
  403b64:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b68:	strb	wzr, [x8, #1520]
  403b6c:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b70:	ldrb	w8, [x22, #1521]
  403b74:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b78:	cmp	w8, #0x1
  403b7c:	b.ne	403b90 <__fxstatat@plt+0x1140>  // b.any
  403b80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b84:	mov	w9, #0x1                   	// #1
  403b88:	strb	w9, [x8, #1522]
  403b8c:	b	403cf4 <__fxstatat@plt+0x12a4>
  403b90:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403b94:	ldrb	w8, [x8, #1520]
  403b98:	cbz	w8, 403cf4 <__fxstatat@plt+0x12a4>
  403b9c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403ba0:	add	x9, x9, #0x438
  403ba4:	ldr	x8, [x9]
  403ba8:	cbz	x8, 403c3c <__fxstatat@plt+0x11ec>
  403bac:	ldr	x0, [x9, #8]
  403bb0:	cmp	x8, #0x2
  403bb4:	b.eq	403c28 <__fxstatat@plt+0x11d8>  // b.none
  403bb8:	cmp	x8, #0x1
  403bbc:	b.ne	403b80 <__fxstatat@plt+0x1130>  // b.any
  403bc0:	ldrb	w8, [x0]
  403bc4:	cmp	w8, #0x30
  403bc8:	b.ne	403b80 <__fxstatat@plt+0x1130>  // b.any
  403bcc:	b	403c3c <__fxstatat@plt+0x11ec>
  403bd0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2060>
  403bd4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2060>
  403bd8:	add	x1, x1, #0xa90
  403bdc:	add	x2, x2, #0xab8
  403be0:	mov	w3, #0x4                   	// #4
  403be4:	mov	x0, x22
  403be8:	bl	40b864 <__fxstatat@plt+0x8e14>
  403bec:	mov	x2, x0
  403bf0:	tbnz	x0, #63, 405004 <__fxstatat@plt+0x25b4>
  403bf4:	cmp	x2, #0x3
  403bf8:	b.hi	404c44 <__fxstatat@plt+0x21f4>  // b.pmore
  403bfc:	adrp	x8, 416000 <_obstack_memory_used@@Base+0x2060>
  403c00:	add	x8, x8, #0x208
  403c04:	adr	x9, 403c14 <__fxstatat@plt+0x11c4>
  403c08:	ldrh	w10, [x8, x2, lsl #1]
  403c0c:	add	x9, x9, x10, lsl #2
  403c10:	br	x9
  403c14:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403c18:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  403c1c:	add	x8, x8, #0x4f0
  403c20:	add	x9, x9, #0xeb3
  403c24:	b	404c40 <__fxstatat@plt+0x21f0>
  403c28:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  403c2c:	add	x1, x1, #0xbfe
  403c30:	mov	w2, #0x2                   	// #2
  403c34:	bl	402640 <strncmp@plt>
  403c38:	cbnz	w0, 403b80 <__fxstatat@plt+0x1130>
  403c3c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403c40:	add	x9, x9, #0x448
  403c44:	ldr	x8, [x9]
  403c48:	cbz	x8, 403c90 <__fxstatat@plt+0x1240>
  403c4c:	ldr	x0, [x9, #8]
  403c50:	cmp	x8, #0x2
  403c54:	b.eq	403c70 <__fxstatat@plt+0x1220>  // b.none
  403c58:	cmp	x8, #0x1
  403c5c:	b.ne	403c84 <__fxstatat@plt+0x1234>  // b.any
  403c60:	ldrb	w8, [x0]
  403c64:	cmp	w8, #0x30
  403c68:	b.ne	403c84 <__fxstatat@plt+0x1234>  // b.any
  403c6c:	b	403c90 <__fxstatat@plt+0x1240>
  403c70:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  403c74:	add	x1, x1, #0xbfe
  403c78:	mov	w2, #0x2                   	// #2
  403c7c:	bl	402640 <strncmp@plt>
  403c80:	cbz	w0, 403c90 <__fxstatat@plt+0x1240>
  403c84:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403c88:	ldrb	w8, [x8, #1523]
  403c8c:	tbnz	w8, #0, 403b80 <__fxstatat@plt+0x1130>
  403c90:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403c94:	add	x9, x9, #0x428
  403c98:	ldr	x8, [x9]
  403c9c:	cbz	x8, 403cf4 <__fxstatat@plt+0x12a4>
  403ca0:	ldr	x0, [x9, #8]
  403ca4:	cmp	x8, #0x2
  403ca8:	b.eq	403ccc <__fxstatat@plt+0x127c>  // b.none
  403cac:	cmp	x8, #0x1
  403cb0:	b.ne	403cc0 <__fxstatat@plt+0x1270>  // b.any
  403cb4:	ldrb	w8, [x0]
  403cb8:	cmp	w8, #0x30
  403cbc:	b.eq	403cf4 <__fxstatat@plt+0x12a4>  // b.none
  403cc0:	mov	w8, #0x1                   	// #1
  403cc4:	cbnz	w8, 403ce8 <__fxstatat@plt+0x1298>
  403cc8:	b	403cf4 <__fxstatat@plt+0x12a4>
  403ccc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  403cd0:	add	x1, x1, #0xbfe
  403cd4:	mov	w2, #0x2                   	// #2
  403cd8:	bl	402640 <strncmp@plt>
  403cdc:	cmp	w0, #0x0
  403ce0:	cset	w8, ne  // ne = any
  403ce4:	cbz	w8, 403cf4 <__fxstatat@plt+0x12a4>
  403ce8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403cec:	ldr	w8, [x8, #1524]
  403cf0:	cbz	w8, 403b80 <__fxstatat@plt+0x1130>
  403cf4:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x18060>
  403cf8:	ldr	w8, [x12, #1528]
  403cfc:	cmp	w8, #0x1
  403d00:	b.ne	403d48 <__fxstatat@plt+0x12f8>  // b.any
  403d04:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403d08:	ldr	w8, [x8, #1536]
  403d0c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  403d10:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403d14:	ldr	w10, [x10, #1524]
  403d18:	ldrb	w9, [x9, #1532]
  403d1c:	cmp	w8, #0x3
  403d20:	cset	w8, eq  // eq = none
  403d24:	cmp	w10, #0x0
  403d28:	orr	w8, w9, w8
  403d2c:	cset	w9, eq  // eq = none
  403d30:	orr	w8, w8, w9
  403d34:	mov	w11, #0x4                   	// #4
  403d38:	tst	w8, #0x1
  403d3c:	mov	w8, #0x2                   	// #2
  403d40:	csel	w8, w8, w11, ne  // ne = any
  403d44:	str	w8, [x12, #1528]
  403d48:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403d4c:	ldrb	w8, [x8, #1540]
  403d50:	cmp	w8, #0x1
  403d54:	b.ne	403dac <__fxstatat@plt+0x135c>  // b.any
  403d58:	adrp	x2, 405000 <__fxstatat@plt+0x25b0>
  403d5c:	adrp	x3, 405000 <__fxstatat@plt+0x25b0>
  403d60:	adrp	x4, 405000 <__fxstatat@plt+0x25b0>
  403d64:	add	x2, x2, #0xf4
  403d68:	add	x3, x3, #0x104
  403d6c:	add	x4, x4, #0x130
  403d70:	mov	w0, #0x1e                  	// #30
  403d74:	mov	x1, xzr
  403d78:	bl	40d3c0 <__fxstatat@plt+0xa970>
  403d7c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403d80:	str	x0, [x8, #1544]
  403d84:	cbz	x0, 404f88 <__fxstatat@plt+0x2538>
  403d88:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  403d8c:	adrp	x3, 402000 <mbrtowc@plt-0x3b0>
  403d90:	adrp	x4, 402000 <mbrtowc@plt-0x3b0>
  403d94:	add	x0, x0, #0x610
  403d98:	add	x3, x3, #0x5f0
  403d9c:	add	x4, x4, #0x840
  403da0:	mov	x1, xzr
  403da4:	mov	x2, xzr
  403da8:	bl	413c38 <_obstack_begin@@Base>
  403dac:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  403db0:	add	x0, x0, #0xf32
  403db4:	bl	4029f0 <getenv@plt>
  403db8:	bl	414014 <_obstack_memory_used@@Base+0x74>
  403dbc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403dc0:	ldr	w8, [x8, #1524]
  403dc4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403dc8:	str	x0, [x9, #1640]
  403dcc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403dd0:	cbz	w8, 403dec <__fxstatat@plt+0x139c>
  403dd4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403dd8:	ldr	w8, [x8, #1648]
  403ddc:	cmp	w8, #0x4
  403de0:	b.eq	403dec <__fxstatat@plt+0x139c>  // b.none
  403de4:	cmp	w8, #0x2
  403de8:	b.ne	403fd4 <__fxstatat@plt+0x1584>  // b.any
  403dec:	mov	w10, #0x1                   	// #1
  403df0:	mov	w8, wzr
  403df4:	strb	w10, [x9, #1656]
  403df8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403dfc:	ldrb	w9, [x9, #1661]
  403e00:	and	w8, w8, #0x1
  403e04:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  403e08:	strb	w8, [x10, #1660]
  403e0c:	cmp	w9, #0x1
  403e10:	b.ne	403e5c <__fxstatat@plt+0x140c>  // b.any
  403e14:	adrp	x22, 402000 <mbrtowc@plt-0x3b0>
  403e18:	adrp	x23, 402000 <mbrtowc@plt-0x3b0>
  403e1c:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  403e20:	add	x22, x22, #0x5f0
  403e24:	add	x23, x23, #0x840
  403e28:	add	x0, x0, #0x680
  403e2c:	mov	x1, xzr
  403e30:	mov	x2, xzr
  403e34:	mov	x3, x22
  403e38:	mov	x4, x23
  403e3c:	bl	413c38 <_obstack_begin@@Base>
  403e40:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  403e44:	add	x0, x0, #0x6d8
  403e48:	mov	x1, xzr
  403e4c:	mov	x2, xzr
  403e50:	mov	x3, x22
  403e54:	mov	x4, x23
  403e58:	bl	413c38 <_obstack_begin@@Base>
  403e5c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403e60:	ldrb	w8, [x8, #1840]
  403e64:	cbz	w8, 403ee4 <__fxstatat@plt+0x1494>
  403e68:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  403e6c:	mov	x22, xzr
  403e70:	add	x23, x23, #0x778
  403e74:	b	403e94 <__fxstatat@plt+0x1444>
  403e78:	mov	w8, #0x1                   	// #1
  403e7c:	ldrb	w9, [x23, x22]
  403e80:	orr	w8, w9, w8
  403e84:	strb	w8, [x23, x22]
  403e88:	add	x22, x22, #0x1
  403e8c:	cmp	x22, #0x100
  403e90:	b.eq	403ec8 <__fxstatat@plt+0x1478>  // b.none
  403e94:	mov	w0, w22
  403e98:	bl	40bd2c <__fxstatat@plt+0x92dc>
  403e9c:	tbnz	w0, #0, 403e78 <__fxstatat@plt+0x1428>
  403ea0:	sub	w8, w22, #0x2d
  403ea4:	cmp	w8, #0x2
  403ea8:	mov	w8, #0x1                   	// #1
  403eac:	b.cc	403e7c <__fxstatat@plt+0x142c>  // b.lo, b.ul, b.last
  403eb0:	cmp	w22, #0x5f
  403eb4:	b.eq	403e7c <__fxstatat@plt+0x142c>  // b.none
  403eb8:	cmp	w22, #0x7e
  403ebc:	b.eq	403e7c <__fxstatat@plt+0x142c>  // b.none
  403ec0:	mov	w8, wzr
  403ec4:	b	403e7c <__fxstatat@plt+0x142c>
  403ec8:	bl	4132bc <__fxstatat@plt+0x1086c>
  403ecc:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  403ed0:	cmp	x0, #0x0
  403ed4:	add	x8, x8, #0x2c1
  403ed8:	csel	x8, x8, x0, eq  // eq = none
  403edc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403ee0:	str	x8, [x9, #1848]
  403ee4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403ee8:	mov	w9, #0x64                  	// #100
  403eec:	mov	w0, #0x47e0                	// #18400
  403ef0:	str	x9, [x8, #1856]
  403ef4:	bl	412e10 <__fxstatat@plt+0x103c0>
  403ef8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403efc:	sub	w22, w20, w21
  403f00:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  403f04:	adrp	x10, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f08:	adrp	x11, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f0c:	adrp	x12, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f10:	adrp	x13, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f14:	adrp	x14, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f18:	adrp	x15, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f1c:	adrp	x16, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f20:	adrp	x17, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f24:	adrp	x18, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f28:	adrp	x1, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f2c:	adrp	x2, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f30:	str	x0, [x8, #1864]
  403f34:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  403f38:	cmp	w22, #0x1
  403f3c:	str	xzr, [x9, #1872]
  403f40:	strb	wzr, [x10, #1401]
  403f44:	strb	wzr, [x11, #1416]
  403f48:	str	wzr, [x12, #1420]
  403f4c:	str	wzr, [x13, #1424]
  403f50:	str	wzr, [x14, #1428]
  403f54:	str	wzr, [x15, #1432]
  403f58:	str	wzr, [x16, #1436]
  403f5c:	str	wzr, [x17, #1440]
  403f60:	str	wzr, [x18, #1444]
  403f64:	str	wzr, [x1, #1448]
  403f68:	str	wzr, [x2, #1452]
  403f6c:	str	wzr, [x8, #1456]
  403f70:	b.lt	403fa4 <__fxstatat@plt+0x1554>  // b.tstop
  403f74:	sxtw	x23, w20
  403f78:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x6060>
  403f7c:	add	x20, x20, #0x2c1
  403f80:	ldr	x0, [x19, x21, lsl #3]
  403f84:	mov	w2, #0x1                   	// #1
  403f88:	mov	w1, wzr
  403f8c:	mov	x3, x20
  403f90:	add	x21, x21, #0x1
  403f94:	bl	405134 <__fxstatat@plt+0x26e4>
  403f98:	cmp	x21, x23
  403f9c:	b.lt	403f80 <__fxstatat@plt+0x1530>  // b.tstop
  403fa0:	b	404030 <__fxstatat@plt+0x15e0>
  403fa4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403fa8:	ldrb	w8, [x8, #1532]
  403fac:	cmp	w8, #0x1
  403fb0:	b.ne	403ffc <__fxstatat@plt+0x15ac>  // b.any
  403fb4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  403fb8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  403fbc:	add	x0, x0, #0x6aa
  403fc0:	add	x3, x3, #0x2c1
  403fc4:	mov	w1, #0x3                   	// #3
  403fc8:	mov	w2, #0x1                   	// #1
  403fcc:	bl	405134 <__fxstatat@plt+0x26e4>
  403fd0:	b	404030 <__fxstatat@plt+0x15e0>
  403fd4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  403fd8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  403fdc:	ldrb	w8, [x8, #1652]
  403fe0:	ldrb	w10, [x10, #1653]
  403fe4:	orr	w8, w8, w10
  403fe8:	and	w10, w8, #0x1
  403fec:	strb	w10, [x9, #1656]
  403ff0:	tbz	w8, #0, 404b94 <__fxstatat@plt+0x2144>
  403ff4:	mov	w8, wzr
  403ff8:	b	403df8 <__fxstatat@plt+0x13a8>
  403ffc:	mov	w0, #0x20                  	// #32
  404000:	bl	412e10 <__fxstatat@plt+0x103c0>
  404004:	mov	x19, x0
  404008:	str	xzr, [x0, #8]
  40400c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  404010:	add	x0, x0, #0x6aa
  404014:	bl	4130cc <__fxstatat@plt+0x1067c>
  404018:	ldr	x8, [x24, #1496]
  40401c:	mov	w9, #0x1                   	// #1
  404020:	str	x0, [x19]
  404024:	strb	w9, [x19, #16]
  404028:	str	x8, [x19, #24]
  40402c:	str	x19, [x24, #1496]
  404030:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  404034:	ldr	x8, [x23, #1872]
  404038:	cbz	x8, 4040a4 <__fxstatat@plt+0x1654>
  40403c:	bl	4060d0 <__fxstatat@plt+0x3680>
  404040:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404044:	ldrb	w8, [x8, #1532]
  404048:	tbnz	w8, #0, 404058 <__fxstatat@plt+0x1608>
  40404c:	mov	w1, #0x1                   	// #1
  404050:	mov	x0, xzr
  404054:	bl	40634c <__fxstatat@plt+0x38fc>
  404058:	ldr	x8, [x23, #1872]
  40405c:	cbz	x8, 4040a4 <__fxstatat@plt+0x1654>
  404060:	bl	406584 <__fxstatat@plt+0x3b34>
  404064:	ldr	x19, [x24, #1496]
  404068:	cbz	x19, 404a2c <__fxstatat@plt+0x1fdc>
  40406c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404070:	ldr	x0, [x8, #1456]
  404074:	ldp	x8, x9, [x0, #40]
  404078:	cmp	x8, x9
  40407c:	b.cs	404ebc <__fxstatat@plt+0x246c>  // b.hs, b.nlast
  404080:	add	x9, x8, #0x1
  404084:	mov	w10, #0xa                   	// #10
  404088:	str	x9, [x0, #40]
  40408c:	strb	w10, [x8]
  404090:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404094:	ldr	x9, [x8, #1880]
  404098:	add	x9, x9, #0x1
  40409c:	str	x9, [x8, #1880]
  4040a0:	b	4040c8 <__fxstatat@plt+0x1678>
  4040a4:	ldr	x19, [x24, #1496]
  4040a8:	cmp	w22, #0x1
  4040ac:	b.gt	4040c8 <__fxstatat@plt+0x1678>
  4040b0:	cbz	x19, 4040c8 <__fxstatat@plt+0x1678>
  4040b4:	ldr	x8, [x19, #24]
  4040b8:	cbnz	x8, 4040cc <__fxstatat@plt+0x167c>
  4040bc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4040c0:	strb	wzr, [x8, #1492]
  4040c4:	b	4040cc <__fxstatat@plt+0x167c>
  4040c8:	cbz	x19, 404a2c <__fxstatat@plt+0x1fdc>
  4040cc:	adrp	x20, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4040d0:	b	404170 <__fxstatat@plt+0x1720>
  4040d4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4040d8:	mov	w2, #0x5                   	// #5
  4040dc:	add	x1, x1, #0x1f2
  4040e0:	bl	402970 <dcgettext@plt>
  4040e4:	ldr	w21, [x26]
  4040e8:	mov	x22, x0
  4040ec:	mov	w0, #0x4                   	// #4
  4040f0:	mov	x1, x28
  4040f4:	bl	411fd4 <__fxstatat@plt+0xf584>
  4040f8:	mov	x3, x0
  4040fc:	mov	w0, wzr
  404100:	mov	w1, w21
  404104:	mov	x2, x22
  404108:	bl	402490 <error@plt>
  40410c:	cbz	w27, 404150 <__fxstatat@plt+0x1700>
  404110:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404114:	mov	w9, #0x2                   	// #2
  404118:	str	w9, [x8, #1488]
  40411c:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  404120:	ldr	x0, [x19]
  404124:	bl	402840 <free@plt>
  404128:	ldr	x0, [x19, #8]
  40412c:	bl	402840 <free@plt>
  404130:	mov	x0, x19
  404134:	bl	402840 <free@plt>
  404138:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40413c:	mov	w9, #0x1                   	// #1
  404140:	strb	w9, [x8, #1492]
  404144:	ldr	x19, [x24, #1496]
  404148:	cbnz	x19, 404170 <__fxstatat@plt+0x1720>
  40414c:	b	404a2c <__fxstatat@plt+0x1fdc>
  404150:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404154:	ldr	w8, [x8, #1488]
  404158:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  40415c:	cbnz	w8, 404120 <__fxstatat@plt+0x16d0>
  404160:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404164:	mov	w9, #0x1                   	// #1
  404168:	str	w9, [x8, #1488]
  40416c:	b	404120 <__fxstatat@plt+0x16d0>
  404170:	ldr	x8, [x19, #24]
  404174:	str	x8, [x24, #1496]
  404178:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40417c:	ldr	x0, [x8, #1544]
  404180:	ldr	x28, [x19]
  404184:	cbz	x0, 4041ec <__fxstatat@plt+0x179c>
  404188:	cbnz	x28, 4041ec <__fxstatat@plt+0x179c>
  40418c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404190:	add	x9, x9, #0x620
  404194:	ldp	x9, x8, [x9]
  404198:	sub	x9, x8, x9
  40419c:	cmp	x9, #0xf
  4041a0:	b.ls	404f44 <__fxstatat@plt+0x24f4>  // b.plast
  4041a4:	sub	x9, x8, #0x10
  4041a8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4041ac:	str	x9, [x10, #1576]
  4041b0:	ldur	q0, [x8, #-16]
  4041b4:	add	x1, sp, #0x20
  4041b8:	str	q0, [sp, #32]
  4041bc:	bl	40de10 <__fxstatat@plt+0xb3c0>
  4041c0:	cbz	x0, 404f64 <__fxstatat@plt+0x2514>
  4041c4:	bl	402840 <free@plt>
  4041c8:	ldr	x0, [x19]
  4041cc:	bl	402840 <free@plt>
  4041d0:	ldr	x0, [x19, #8]
  4041d4:	bl	402840 <free@plt>
  4041d8:	mov	x0, x19
  4041dc:	bl	402840 <free@plt>
  4041e0:	ldr	x19, [x24, #1496]
  4041e4:	cbnz	x19, 404170 <__fxstatat@plt+0x1720>
  4041e8:	b	404a2c <__fxstatat@plt+0x1fdc>
  4041ec:	ldr	x25, [x19, #8]
  4041f0:	ldrb	w27, [x19, #16]
  4041f4:	bl	4029e0 <__errno_location@plt>
  4041f8:	mov	x26, x0
  4041fc:	str	wzr, [x0]
  404200:	mov	x0, x28
  404204:	bl	4024f0 <opendir@plt>
  404208:	cbz	x0, 4040d4 <__fxstatat@plt+0x1684>
  40420c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404210:	ldr	x8, [x8, #1544]
  404214:	mov	x24, x0
  404218:	cbz	x8, 404374 <__fxstatat@plt+0x1924>
  40421c:	mov	x0, x24
  404220:	bl	4028d0 <dirfd@plt>
  404224:	tbnz	w0, #31, 4042c0 <__fxstatat@plt+0x1870>
  404228:	mov	w1, w0
  40422c:	add	x2, sp, #0x20
  404230:	mov	w0, wzr
  404234:	bl	402960 <__fxstat@plt>
  404238:	tbnz	w0, #31, 4042d4 <__fxstatat@plt+0x1884>
  40423c:	ldp	x22, x23, [sp, #32]
  404240:	mov	w0, #0x10                  	// #16
  404244:	bl	412e10 <__fxstatat@plt+0x103c0>
  404248:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40424c:	mov	x21, x0
  404250:	ldr	x0, [x8, #1544]
  404254:	mov	x1, x21
  404258:	stp	x23, x22, [x21]
  40425c:	bl	40ddd8 <__fxstatat@plt+0xb388>
  404260:	cbz	x0, 404f88 <__fxstatat@plt+0x2538>
  404264:	cmp	x0, x21
  404268:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  40426c:	b.eq	404324 <__fxstatat@plt+0x18d4>  // b.none
  404270:	mov	x0, x21
  404274:	bl	402840 <free@plt>
  404278:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40427c:	mov	w2, #0x5                   	// #5
  404280:	mov	x0, xzr
  404284:	add	x1, x1, #0x233
  404288:	bl	402970 <dcgettext@plt>
  40428c:	mov	x21, x0
  404290:	mov	w1, #0x3                   	// #3
  404294:	mov	w0, wzr
  404298:	mov	x2, x28
  40429c:	bl	412200 <__fxstatat@plt+0xf7b0>
  4042a0:	mov	x3, x0
  4042a4:	mov	w0, wzr
  4042a8:	mov	w1, wzr
  4042ac:	mov	x2, x21
  4042b0:	bl	402490 <error@plt>
  4042b4:	mov	x0, x24
  4042b8:	bl	402710 <closedir@plt>
  4042bc:	b	404110 <__fxstatat@plt+0x16c0>
  4042c0:	add	x2, sp, #0x20
  4042c4:	mov	w0, wzr
  4042c8:	mov	x1, x28
  4042cc:	bl	402a00 <__xstat@plt>
  4042d0:	tbz	w0, #31, 40423c <__fxstatat@plt+0x17ec>
  4042d4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4042d8:	mov	w2, #0x5                   	// #5
  4042dc:	mov	x0, xzr
  4042e0:	add	x1, x1, #0x20b
  4042e4:	bl	402970 <dcgettext@plt>
  4042e8:	ldr	w21, [x26]
  4042ec:	mov	x22, x0
  4042f0:	mov	w0, #0x4                   	// #4
  4042f4:	mov	x1, x28
  4042f8:	bl	411fd4 <__fxstatat@plt+0xf584>
  4042fc:	mov	x3, x0
  404300:	mov	w0, wzr
  404304:	mov	w1, w21
  404308:	mov	x2, x22
  40430c:	bl	402490 <error@plt>
  404310:	cbz	w27, 404524 <__fxstatat@plt+0x1ad4>
  404314:	mov	w8, #0x2                   	// #2
  404318:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40431c:	str	w8, [x9, #1488]
  404320:	b	404530 <__fxstatat@plt+0x1ae0>
  404324:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404328:	add	x8, x8, #0x628
  40432c:	ldp	x8, x9, [x8]
  404330:	ldr	q0, [sp, #32]
  404334:	sub	x9, x9, x8
  404338:	cmp	x9, #0xf
  40433c:	ext	v0.16b, v0.16b, v0.16b, #8
  404340:	b.hi	404364 <__fxstatat@plt+0x1914>  // b.pmore
  404344:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  404348:	add	x21, x21, #0x610
  40434c:	mov	w1, #0x10                  	// #16
  404350:	mov	x0, x21
  404354:	str	q0, [sp, #16]
  404358:	bl	413d8c <_obstack_newchunk@@Base>
  40435c:	ldr	q0, [sp, #16]
  404360:	ldr	x8, [x21, #24]
  404364:	add	x9, x8, #0x10
  404368:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  40436c:	str	x9, [x10, #1576]
  404370:	str	q0, [x8]
  404374:	ldr	x8, [x23, #1872]
  404378:	cbz	x8, 4043b0 <__fxstatat@plt+0x1960>
  40437c:	mov	x21, xzr
  404380:	ldr	x8, [x20, #1408]
  404384:	ldr	x22, [x8, x21, lsl #3]
  404388:	ldr	x0, [x22]
  40438c:	bl	402840 <free@plt>
  404390:	ldr	x0, [x22, #8]
  404394:	bl	402840 <free@plt>
  404398:	ldr	x0, [x22, #16]
  40439c:	bl	402840 <free@plt>
  4043a0:	ldr	x8, [x23, #1872]
  4043a4:	add	x21, x21, #0x1
  4043a8:	cmp	x21, x8
  4043ac:	b.cc	404380 <__fxstatat@plt+0x1930>  // b.lo, b.ul, b.last
  4043b0:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043b4:	strb	wzr, [x8, #1401]
  4043b8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043bc:	strb	wzr, [x8, #1416]
  4043c0:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043c4:	str	wzr, [x8, #1420]
  4043c8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043cc:	str	wzr, [x8, #1424]
  4043d0:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043d4:	str	wzr, [x8, #1428]
  4043d8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043dc:	str	wzr, [x8, #1432]
  4043e0:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043e4:	str	wzr, [x8, #1436]
  4043e8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043ec:	str	wzr, [x8, #1440]
  4043f0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4043f4:	ldrb	w8, [x8, #1540]
  4043f8:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4043fc:	str	wzr, [x9, #1444]
  404400:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404404:	str	wzr, [x9, #1448]
  404408:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40440c:	str	wzr, [x9, #1452]
  404410:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404414:	str	xzr, [x23, #1872]
  404418:	str	wzr, [x9, #1456]
  40441c:	tbnz	w8, #0, 404430 <__fxstatat@plt+0x19e0>
  404420:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404424:	ldrb	w8, [x8, #1492]
  404428:	cmp	w8, #0x1
  40442c:	b.ne	4045a4 <__fxstatat@plt+0x1b54>  // b.any
  404430:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404434:	ldrb	w8, [x8, #1400]
  404438:	cmp	w8, #0x1
  40443c:	b.ne	404474 <__fxstatat@plt+0x1a24>  // b.any
  404440:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404444:	ldr	x0, [x8, #1456]
  404448:	ldp	x8, x9, [x0, #40]
  40444c:	cmp	x8, x9
  404450:	b.cs	404a20 <__fxstatat@plt+0x1fd0>  // b.hs, b.nlast
  404454:	add	x9, x8, #0x1
  404458:	str	x9, [x0, #40]
  40445c:	mov	w9, #0xa                   	// #10
  404460:	strb	w9, [x8]
  404464:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404468:	ldr	x8, [x9, #1880]
  40446c:	add	x8, x8, #0x1
  404470:	str	x8, [x9, #1880]
  404474:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404478:	ldrb	w8, [x8, #1661]
  40447c:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404480:	cmp	w8, #0x1
  404484:	mov	w8, #0x1                   	// #1
  404488:	strb	w8, [x9, #1400]
  40448c:	b.ne	4044b4 <__fxstatat@plt+0x1a64>  // b.any
  404490:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404494:	ldr	x1, [x8, #1456]
  404498:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40449c:	add	x0, x0, #0x25c
  4044a0:	bl	402980 <fputs_unlocked@plt>
  4044a4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4044a8:	ldr	x8, [x9, #1880]
  4044ac:	add	x8, x8, #0x2
  4044b0:	str	x8, [x9, #1880]
  4044b4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4044b8:	ldrb	w8, [x8, #1840]
  4044bc:	cbz	w8, 404548 <__fxstatat@plt+0x1af8>
  4044c0:	mov	w1, #0x2                   	// #2
  4044c4:	mov	x0, x28
  4044c8:	bl	40bf38 <__fxstatat@plt+0x94e8>
  4044cc:	mov	x21, x0
  4044d0:	cbnz	x0, 40454c <__fxstatat@plt+0x1afc>
  4044d4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4044d8:	mov	w2, #0x5                   	// #5
  4044dc:	add	x1, x1, #0x25f
  4044e0:	bl	402970 <dcgettext@plt>
  4044e4:	ldr	w21, [x26]
  4044e8:	mov	x22, x0
  4044ec:	mov	w0, #0x4                   	// #4
  4044f0:	mov	x1, x28
  4044f4:	bl	411fd4 <__fxstatat@plt+0xf584>
  4044f8:	mov	x3, x0
  4044fc:	mov	w0, wzr
  404500:	mov	w1, w21
  404504:	mov	x2, x22
  404508:	bl	402490 <error@plt>
  40450c:	cbz	w27, 40453c <__fxstatat@plt+0x1aec>
  404510:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404514:	mov	w9, #0x2                   	// #2
  404518:	mov	x21, xzr
  40451c:	str	w9, [x8, #1488]
  404520:	b	40454c <__fxstatat@plt+0x1afc>
  404524:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404528:	ldr	w8, [x9, #1488]
  40452c:	cbz	w8, 4049f0 <__fxstatat@plt+0x1fa0>
  404530:	mov	x0, x24
  404534:	bl	402710 <closedir@plt>
  404538:	b	40411c <__fxstatat@plt+0x16cc>
  40453c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404540:	ldr	w8, [x9, #1488]
  404544:	cbz	w8, 4049f8 <__fxstatat@plt+0x1fa8>
  404548:	mov	x21, xzr
  40454c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404550:	ldr	x1, [x8, #2392]
  404554:	cmp	x25, #0x0
  404558:	adrp	x5, 42c000 <_obstack_memory_used@@Base+0x18060>
  40455c:	csel	x0, x28, x25, eq  // eq = none
  404560:	mov	w2, #0xffffffff            	// #-1
  404564:	mov	w4, #0x1                   	// #1
  404568:	mov	x3, xzr
  40456c:	add	x5, x5, #0x6d8
  404570:	mov	x6, x21
  404574:	bl	408038 <__fxstatat@plt+0x55e8>
  404578:	mov	x0, x21
  40457c:	bl	402840 <free@plt>
  404580:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404584:	ldr	x1, [x8, #1456]
  404588:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  40458c:	add	x0, x0, #0xe6a
  404590:	bl	402980 <fputs_unlocked@plt>
  404594:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404598:	ldr	x8, [x9, #1880]
  40459c:	add	x8, x8, #0x2
  4045a0:	str	x8, [x9, #1880]
  4045a4:	mov	x25, xzr
  4045a8:	b	4045c8 <__fxstatat@plt+0x1b78>
  4045ac:	mov	w8, #0x2                   	// #2
  4045b0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4045b4:	str	w8, [x9, #1488]
  4045b8:	ldr	w8, [x26]
  4045bc:	cmp	w8, #0x4b
  4045c0:	b.ne	404814 <__fxstatat@plt+0x1dc4>  // b.any
  4045c4:	bl	4084a0 <__fxstatat@plt+0x5a50>
  4045c8:	mov	x0, x24
  4045cc:	str	wzr, [x26]
  4045d0:	bl	4026e0 <readdir@plt>
  4045d4:	cbz	x0, 404670 <__fxstatat@plt+0x1c20>
  4045d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4045dc:	ldr	w8, [x8, #2308]
  4045e0:	mov	x22, x0
  4045e4:	add	x21, x0, #0x13
  4045e8:	cmp	w8, #0x2
  4045ec:	b.eq	404624 <__fxstatat@plt+0x1bd4>  // b.none
  4045f0:	ldrb	w9, [x21]
  4045f4:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  4045f8:	cmp	w9, #0x2e
  4045fc:	b.ne	404620 <__fxstatat@plt+0x1bd0>  // b.any
  404600:	cbz	w8, 4045c4 <__fxstatat@plt+0x1b74>
  404604:	ldrb	w9, [x22, #20]
  404608:	cmp	w9, #0x2e
  40460c:	mov	w9, #0x1                   	// #1
  404610:	cinc	x9, x9, eq  // eq = none
  404614:	add	x9, x22, x9
  404618:	ldrb	w9, [x9, #19]
  40461c:	cbz	w9, 4045c4 <__fxstatat@plt+0x1b74>
  404620:	cbz	w8, 4047dc <__fxstatat@plt+0x1d8c>
  404624:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404628:	ldr	x23, [x8, #2312]
  40462c:	cbz	x23, 40464c <__fxstatat@plt+0x1bfc>
  404630:	ldr	x0, [x23]
  404634:	mov	w2, #0x4                   	// #4
  404638:	mov	x1, x21
  40463c:	bl	402890 <fnmatch@plt>
  404640:	cbz	w0, 4047d0 <__fxstatat@plt+0x1d80>
  404644:	ldr	x23, [x23, #8]
  404648:	cbnz	x23, 404630 <__fxstatat@plt+0x1be0>
  40464c:	ldrb	w8, [x22, #18]
  404650:	sub	w8, w8, #0x1
  404654:	cmp	w8, #0xd
  404658:	b.hi	4046cc <__fxstatat@plt+0x1c7c>  // b.pmore
  40465c:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x3060>
  404660:	sxtb	x8, w8
  404664:	add	x9, x9, #0xeb0
  404668:	ldr	w1, [x9, x8, lsl #2]
  40466c:	b	4046d0 <__fxstatat@plt+0x1c80>
  404670:	ldr	w8, [x26]
  404674:	cbz	w8, 404814 <__fxstatat@plt+0x1dc4>
  404678:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40467c:	mov	w2, #0x5                   	// #5
  404680:	mov	x0, xzr
  404684:	add	x1, x1, #0x277
  404688:	bl	402970 <dcgettext@plt>
  40468c:	ldr	w21, [x26]
  404690:	mov	x22, x0
  404694:	mov	w0, #0x4                   	// #4
  404698:	mov	x1, x28
  40469c:	bl	411fd4 <__fxstatat@plt+0xf584>
  4046a0:	mov	x3, x0
  4046a4:	mov	w0, wzr
  4046a8:	mov	w1, w21
  4046ac:	mov	x2, x22
  4046b0:	bl	402490 <error@plt>
  4046b4:	cbnz	w27, 4045ac <__fxstatat@plt+0x1b5c>
  4046b8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4046bc:	ldr	w8, [x9, #1488]
  4046c0:	cbnz	w8, 4045b8 <__fxstatat@plt+0x1b68>
  4046c4:	mov	w8, #0x1                   	// #1
  4046c8:	b	4045b4 <__fxstatat@plt+0x1b64>
  4046cc:	mov	w1, wzr
  4046d0:	mov	x0, x21
  4046d4:	mov	w2, wzr
  4046d8:	mov	x3, x28
  4046dc:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  4046e0:	bl	405134 <__fxstatat@plt+0x26e4>
  4046e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4046e8:	ldr	w8, [x8, #1524]
  4046ec:	add	x25, x0, x25
  4046f0:	cmp	w8, #0x1
  4046f4:	b.ne	4045c4 <__fxstatat@plt+0x1b74>  // b.any
  4046f8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4046fc:	ldr	w8, [x8, #1648]
  404700:	cmn	w8, #0x1
  404704:	b.ne	4045c4 <__fxstatat@plt+0x1b74>  // b.any
  404708:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40470c:	ldrb	w8, [x8, #1653]
  404710:	tbnz	w8, #0, 4045c4 <__fxstatat@plt+0x1b74>
  404714:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404718:	ldrb	w8, [x8, #1540]
  40471c:	tbnz	w8, #0, 4045c4 <__fxstatat@plt+0x1b74>
  404720:	bl	4060d0 <__fxstatat@plt+0x3680>
  404724:	bl	406584 <__fxstatat@plt+0x3b34>
  404728:	ldr	x8, [x23, #1872]
  40472c:	cbz	x8, 404764 <__fxstatat@plt+0x1d14>
  404730:	mov	x21, xzr
  404734:	ldr	x8, [x20, #1408]
  404738:	ldr	x22, [x8, x21, lsl #3]
  40473c:	ldr	x0, [x22]
  404740:	bl	402840 <free@plt>
  404744:	ldr	x0, [x22, #8]
  404748:	bl	402840 <free@plt>
  40474c:	ldr	x0, [x22, #16]
  404750:	bl	402840 <free@plt>
  404754:	ldr	x8, [x23, #1872]
  404758:	add	x21, x21, #0x1
  40475c:	cmp	x21, x8
  404760:	b.cc	404734 <__fxstatat@plt+0x1ce4>  // b.lo, b.ul, b.last
  404764:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404768:	strb	wzr, [x8, #1401]
  40476c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404770:	strb	wzr, [x8, #1416]
  404774:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404778:	str	wzr, [x8, #1420]
  40477c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404780:	str	wzr, [x8, #1424]
  404784:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404788:	str	wzr, [x8, #1428]
  40478c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404790:	str	wzr, [x8, #1432]
  404794:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404798:	str	wzr, [x8, #1436]
  40479c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4047a0:	str	wzr, [x8, #1440]
  4047a4:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4047a8:	str	wzr, [x8, #1444]
  4047ac:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4047b0:	str	wzr, [x8, #1448]
  4047b4:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4047b8:	str	wzr, [x8, #1452]
  4047bc:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4047c0:	str	xzr, [x23, #1872]
  4047c4:	str	wzr, [x8, #1456]
  4047c8:	bl	4084a0 <__fxstatat@plt+0x5a50>
  4047cc:	b	4045c8 <__fxstatat@plt+0x1b78>
  4047d0:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  4047d4:	bl	4084a0 <__fxstatat@plt+0x5a50>
  4047d8:	b	4045c8 <__fxstatat@plt+0x1b78>
  4047dc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4047e0:	ldr	x23, [x8, #2320]
  4047e4:	cbz	x23, 404624 <__fxstatat@plt+0x1bd4>
  4047e8:	ldr	x0, [x23]
  4047ec:	mov	w2, #0x4                   	// #4
  4047f0:	mov	x1, x21
  4047f4:	bl	402890 <fnmatch@plt>
  4047f8:	cbz	w0, 404808 <__fxstatat@plt+0x1db8>
  4047fc:	ldr	x23, [x23, #8]
  404800:	cbnz	x23, 4047e8 <__fxstatat@plt+0x1d98>
  404804:	b	404624 <__fxstatat@plt+0x1bd4>
  404808:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  40480c:	bl	4084a0 <__fxstatat@plt+0x5a50>
  404810:	b	4045c8 <__fxstatat@plt+0x1b78>
  404814:	mov	x0, x24
  404818:	bl	402710 <closedir@plt>
  40481c:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  404820:	cbz	w0, 404888 <__fxstatat@plt+0x1e38>
  404824:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  404828:	mov	w2, #0x5                   	// #5
  40482c:	mov	x0, xzr
  404830:	add	x1, x1, #0x28c
  404834:	bl	402970 <dcgettext@plt>
  404838:	ldr	w21, [x26]
  40483c:	mov	x22, x0
  404840:	mov	w0, #0x4                   	// #4
  404844:	mov	x1, x28
  404848:	bl	411fd4 <__fxstatat@plt+0xf584>
  40484c:	mov	x3, x0
  404850:	mov	w0, wzr
  404854:	mov	w1, w21
  404858:	mov	x2, x22
  40485c:	bl	402490 <error@plt>
  404860:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404864:	cbz	w27, 404874 <__fxstatat@plt+0x1e24>
  404868:	mov	w9, #0x2                   	// #2
  40486c:	str	w9, [x8, #1488]
  404870:	b	404888 <__fxstatat@plt+0x1e38>
  404874:	ldr	w8, [x8, #1488]
  404878:	cbnz	w8, 404888 <__fxstatat@plt+0x1e38>
  40487c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404880:	mov	w9, #0x1                   	// #1
  404884:	str	w9, [x8, #1488]
  404888:	bl	4060d0 <__fxstatat@plt+0x3680>
  40488c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404890:	ldrb	w8, [x8, #1540]
  404894:	cmp	w8, #0x1
  404898:	b.ne	4048a8 <__fxstatat@plt+0x1e58>  // b.any
  40489c:	mov	x0, x28
  4048a0:	mov	w1, wzr
  4048a4:	bl	40634c <__fxstatat@plt+0x38fc>
  4048a8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4048ac:	ldr	w8, [x8, #1524]
  4048b0:	cbz	w8, 4048c4 <__fxstatat@plt+0x1e74>
  4048b4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4048b8:	ldrb	w8, [x8, #1653]
  4048bc:	cmp	w8, #0x1
  4048c0:	b.ne	4049e0 <__fxstatat@plt+0x1f90>  // b.any
  4048c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4048c8:	ldrb	w8, [x8, #1661]
  4048cc:	cmp	w8, #0x1
  4048d0:	b.ne	4048f8 <__fxstatat@plt+0x1ea8>  // b.any
  4048d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4048d8:	ldr	x1, [x8, #1456]
  4048dc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  4048e0:	add	x0, x0, #0x25c
  4048e4:	bl	402980 <fputs_unlocked@plt>
  4048e8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4048ec:	ldr	x8, [x9, #1880]
  4048f0:	add	x8, x8, #0x2
  4048f4:	str	x8, [x9, #1880]
  4048f8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4048fc:	mov	w2, #0x5                   	// #5
  404900:	mov	x0, xzr
  404904:	add	x1, x1, #0x2a1
  404908:	bl	402970 <dcgettext@plt>
  40490c:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  404910:	ldr	x1, [x22, #1456]
  404914:	mov	x21, x0
  404918:	bl	402980 <fputs_unlocked@plt>
  40491c:	mov	x0, x21
  404920:	bl	402430 <strlen@plt>
  404924:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  404928:	ldr	x9, [x10, #1880]
  40492c:	mov	x8, x0
  404930:	ldr	x0, [x22, #1456]
  404934:	add	x8, x9, x8
  404938:	str	x8, [x10, #1880]
  40493c:	ldp	x8, x9, [x0, #40]
  404940:	cmp	x8, x9
  404944:	b.cs	404a08 <__fxstatat@plt+0x1fb8>  // b.hs, b.nlast
  404948:	add	x9, x8, #0x1
  40494c:	str	x9, [x0, #40]
  404950:	mov	w9, #0x20                  	// #32
  404954:	strb	w9, [x8]
  404958:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  40495c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404960:	ldr	x8, [x26, #1880]
  404964:	ldr	w2, [x9, #2348]
  404968:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40496c:	ldr	x4, [x9, #2360]
  404970:	add	x8, x8, #0x1
  404974:	add	x1, sp, #0x20
  404978:	mov	w3, #0x200                 	// #512
  40497c:	mov	x0, x25
  404980:	str	x8, [x26, #1880]
  404984:	bl	40e13c <__fxstatat@plt+0xb6ec>
  404988:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  40498c:	ldr	x1, [x22, #1456]
  404990:	mov	x21, x0
  404994:	bl	402980 <fputs_unlocked@plt>
  404998:	mov	x0, x21
  40499c:	bl	402430 <strlen@plt>
  4049a0:	ldr	x9, [x26, #1880]
  4049a4:	mov	x8, x0
  4049a8:	ldr	x0, [x22, #1456]
  4049ac:	add	x8, x9, x8
  4049b0:	str	x8, [x26, #1880]
  4049b4:	ldp	x8, x9, [x0, #40]
  4049b8:	cmp	x8, x9
  4049bc:	b.cs	404a14 <__fxstatat@plt+0x1fc4>  // b.hs, b.nlast
  4049c0:	add	x9, x8, #0x1
  4049c4:	str	x9, [x0, #40]
  4049c8:	mov	w9, #0xa                   	// #10
  4049cc:	strb	w9, [x8]
  4049d0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4049d4:	ldr	x8, [x9, #1880]
  4049d8:	add	x8, x8, #0x1
  4049dc:	str	x8, [x9, #1880]
  4049e0:	ldr	x8, [x23, #1872]
  4049e4:	cbz	x8, 404120 <__fxstatat@plt+0x16d0>
  4049e8:	bl	406584 <__fxstatat@plt+0x3b34>
  4049ec:	b	404120 <__fxstatat@plt+0x16d0>
  4049f0:	mov	w8, #0x1                   	// #1
  4049f4:	b	40431c <__fxstatat@plt+0x18cc>
  4049f8:	mov	x21, xzr
  4049fc:	mov	w8, #0x1                   	// #1
  404a00:	str	w8, [x9, #1488]
  404a04:	b	40454c <__fxstatat@plt+0x1afc>
  404a08:	mov	w1, #0x20                  	// #32
  404a0c:	bl	402790 <__overflow@plt>
  404a10:	b	404958 <__fxstatat@plt+0x1f08>
  404a14:	mov	w1, #0xa                   	// #10
  404a18:	bl	402790 <__overflow@plt>
  404a1c:	b	4049d0 <__fxstatat@plt+0x1f80>
  404a20:	mov	w1, #0xa                   	// #10
  404a24:	bl	402790 <__overflow@plt>
  404a28:	b	404464 <__fxstatat@plt+0x1a14>
  404a2c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404a30:	ldrb	w8, [x8, #1520]
  404a34:	cbz	w8, 404aec <__fxstatat@plt+0x209c>
  404a38:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404a3c:	ldrb	w8, [x8, #1888]
  404a40:	cmp	w8, #0x1
  404a44:	b.ne	404aec <__fxstatat@plt+0x209c>  // b.any
  404a48:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404a4c:	ldr	x8, [x8, #872]
  404a50:	cmp	x8, #0x2
  404a54:	b.ne	404a94 <__fxstatat@plt+0x2044>  // b.any
  404a58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404a5c:	add	x8, x8, #0x370
  404a60:	ldr	x9, [x8]
  404a64:	mov	w10, #0x5b1b                	// #23323
  404a68:	ldrh	w9, [x9]
  404a6c:	cmp	w9, w10
  404a70:	b.ne	404a94 <__fxstatat@plt+0x2044>  // b.any
  404a74:	ldr	x8, [x8, #8]
  404a78:	cmp	x8, #0x1
  404a7c:	b.ne	404a94 <__fxstatat@plt+0x2044>  // b.any
  404a80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404a84:	ldr	x8, [x8, #896]
  404a88:	ldrb	w8, [x8]
  404a8c:	cmp	w8, #0x6d
  404a90:	b.eq	404aac <__fxstatat@plt+0x205c>  // b.none
  404a94:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  404a98:	add	x19, x19, #0x368
  404a9c:	mov	x0, x19
  404aa0:	bl	407a6c <__fxstatat@plt+0x501c>
  404aa4:	add	x0, x19, #0x10
  404aa8:	bl	407a6c <__fxstatat@plt+0x501c>
  404aac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404ab0:	ldr	x0, [x8, #1456]
  404ab4:	bl	4028a0 <fflush_unlocked@plt>
  404ab8:	mov	w0, wzr
  404abc:	bl	407af0 <__fxstatat@plt+0x50a0>
  404ac0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404ac4:	ldr	w19, [x8, #1892]
  404ac8:	cbz	w19, 404adc <__fxstatat@plt+0x208c>
  404acc:	mov	w0, #0x13                  	// #19
  404ad0:	bl	402480 <raise@plt>
  404ad4:	subs	w19, w19, #0x1
  404ad8:	b.ne	404acc <__fxstatat@plt+0x207c>  // b.any
  404adc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404ae0:	ldr	w0, [x8, #1896]
  404ae4:	cbz	w0, 404aec <__fxstatat@plt+0x209c>
  404ae8:	bl	402480 <raise@plt>
  404aec:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404af0:	ldrb	w8, [x8, #1661]
  404af4:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  404af8:	cmp	w8, #0x1
  404afc:	b.ne	404b4c <__fxstatat@plt+0x20fc>  // b.any
  404b00:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  404b04:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  404b08:	add	x0, x0, #0xf5e
  404b0c:	add	x1, x1, #0x680
  404b10:	bl	407450 <__fxstatat@plt+0x4a00>
  404b14:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  404b18:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x18060>
  404b1c:	add	x0, x0, #0xf68
  404b20:	add	x1, x1, #0x6d8
  404b24:	bl	407450 <__fxstatat@plt+0x4a00>
  404b28:	ldr	x0, [x19, #1904]
  404b2c:	bl	410d6c <__fxstatat@plt+0xe31c>
  404b30:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  404b34:	add	x8, x8, #0xa38
  404b38:	ldr	x2, [x8, w0, uxtw #3]
  404b3c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  404b40:	add	x1, x1, #0xf75
  404b44:	mov	w0, #0x1                   	// #1
  404b48:	bl	402670 <__printf_chk@plt>
  404b4c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404b50:	ldr	x19, [x8, #1544]
  404b54:	cbz	x19, 404b6c <__fxstatat@plt+0x211c>
  404b58:	mov	x0, x19
  404b5c:	bl	40cf3c <__fxstatat@plt+0xa4ec>
  404b60:	cbnz	x0, 404fe4 <__fxstatat@plt+0x2594>
  404b64:	mov	x0, x19
  404b68:	bl	40d66c <__fxstatat@plt+0xac1c>
  404b6c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404b70:	ldr	w0, [x8, #1488]
  404b74:	add	sp, sp, #0x640
  404b78:	ldp	x20, x19, [sp, #80]
  404b7c:	ldp	x22, x21, [sp, #64]
  404b80:	ldp	x24, x23, [sp, #48]
  404b84:	ldp	x26, x25, [sp, #32]
  404b88:	ldp	x28, x27, [sp, #16]
  404b8c:	ldp	x29, x30, [sp], #96
  404b90:	ret
  404b94:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404b98:	ldrb	w8, [x8, #1540]
  404b9c:	tbz	w8, #0, 404ba8 <__fxstatat@plt+0x2158>
  404ba0:	mov	w8, #0x1                   	// #1
  404ba4:	b	403df8 <__fxstatat@plt+0x13a8>
  404ba8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404bac:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404bb0:	ldrb	w8, [x8, #1520]
  404bb4:	ldr	w9, [x9, #1536]
  404bb8:	ldrb	w10, [x22, #1521]
  404bbc:	orr	w8, w8, w9
  404bc0:	cmp	w8, #0x0
  404bc4:	cset	w8, ne  // ne = any
  404bc8:	orr	w8, w10, w8
  404bcc:	b	403df8 <__fxstatat@plt+0x13a8>
  404bd0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404bd4:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  404bd8:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x5060>
  404bdc:	add	x8, x8, #0x4f0
  404be0:	add	x9, x9, #0xeda
  404be4:	add	x10, x10, #0xece
  404be8:	stp	x9, x10, [x8]
  404bec:	b	404c44 <__fxstatat@plt+0x21f4>
  404bf0:	mov	w0, #0x2                   	// #2
  404bf4:	bl	40ced4 <__fxstatat@plt+0xa484>
  404bf8:	tbz	w0, #0, 404c44 <__fxstatat@plt+0x21f4>
  404bfc:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  404c00:	add	x21, x21, #0x4f0
  404c04:	ldr	x1, [x21]
  404c08:	mov	w2, #0x2                   	// #2
  404c0c:	mov	x0, xzr
  404c10:	bl	402970 <dcgettext@plt>
  404c14:	ldr	x1, [x21, #8]
  404c18:	str	x0, [x21]
  404c1c:	mov	w2, #0x2                   	// #2
  404c20:	mov	x0, xzr
  404c24:	bl	402970 <dcgettext@plt>
  404c28:	str	x0, [x21, #8]
  404c2c:	b	404c44 <__fxstatat@plt+0x21f4>
  404c30:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404c34:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  404c38:	add	x8, x8, #0x4f0
  404c3c:	add	x9, x9, #0xecb
  404c40:	stp	x9, x9, [x8]
  404c44:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404c48:	ldr	x24, [x8, #1264]
  404c4c:	b	404c58 <__fxstatat@plt+0x2208>
  404c50:	cbz	w8, 404c88 <__fxstatat@plt+0x2238>
  404c54:	add	x24, x24, #0x1
  404c58:	ldrb	w8, [x24]
  404c5c:	cmp	w8, #0x25
  404c60:	b.ne	404c50 <__fxstatat@plt+0x2200>  // b.any
  404c64:	mov	x8, x24
  404c68:	ldrb	w9, [x8, #1]!
  404c6c:	cmp	w9, #0x25
  404c70:	b.eq	404c80 <__fxstatat@plt+0x2230>  // b.none
  404c74:	cmp	w9, #0x62
  404c78:	b.ne	404c54 <__fxstatat@plt+0x2204>  // b.any
  404c7c:	b	404c8c <__fxstatat@plt+0x223c>
  404c80:	mov	x24, x8
  404c84:	b	404c54 <__fxstatat@plt+0x2204>
  404c88:	mov	x24, xzr
  404c8c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404c90:	ldr	x26, [x8, #1272]
  404c94:	b	404ca0 <__fxstatat@plt+0x2250>
  404c98:	cbz	w8, 404cd0 <__fxstatat@plt+0x2280>
  404c9c:	add	x26, x26, #0x1
  404ca0:	ldrb	w8, [x26]
  404ca4:	cmp	w8, #0x25
  404ca8:	b.ne	404c98 <__fxstatat@plt+0x2248>  // b.any
  404cac:	mov	x8, x26
  404cb0:	ldrb	w9, [x8, #1]!
  404cb4:	cmp	w9, #0x25
  404cb8:	b.eq	404cc8 <__fxstatat@plt+0x2278>  // b.none
  404cbc:	cmp	w9, #0x62
  404cc0:	b.ne	404c9c <__fxstatat@plt+0x224c>  // b.any
  404cc4:	b	404ce4 <__fxstatat@plt+0x2294>
  404cc8:	mov	x26, x8
  404ccc:	b	404c9c <__fxstatat@plt+0x224c>
  404cd0:	cbz	x24, 403764 <__fxstatat@plt+0xd14>
  404cd4:	mov	x26, xzr
  404cd8:	mov	w8, #0x1                   	// #1
  404cdc:	stp	w8, wzr, [sp, #12]
  404ce0:	b	404cf0 <__fxstatat@plt+0x22a0>
  404ce4:	cmp	x24, #0x0
  404ce8:	cset	w8, eq  // eq = none
  404cec:	stp	wzr, w8, [sp, #12]
  404cf0:	mov	w27, #0xe                   	// #14
  404cf4:	mov	w28, #0xc                   	// #12
  404cf8:	movk	w27, #0x2, lsl #16
  404cfc:	mov	x25, xzr
  404d00:	mov	x21, xzr
  404d04:	add	x22, sp, #0x20
  404d08:	add	w0, w25, w27
  404d0c:	stur	x28, [x29, #-16]
  404d10:	bl	4025e0 <nl_langinfo@plt>
  404d14:	mov	w1, #0x25                  	// #37
  404d18:	mov	x23, x0
  404d1c:	bl	402870 <strchr@plt>
  404d20:	cbnz	x0, 403764 <__fxstatat@plt+0xd14>
  404d24:	bl	402820 <__ctype_b_loc@plt>
  404d28:	ldr	x8, [x0]
  404d2c:	ldrb	w9, [x23]
  404d30:	sub	x3, x29, #0x10
  404d34:	mov	w2, #0x80                  	// #128
  404d38:	mov	x0, x23
  404d3c:	ldrh	w8, [x8, x9, lsl #1]
  404d40:	mov	x1, x22
  404d44:	mov	w5, wzr
  404d48:	ubfx	w4, w8, #11, #1
  404d4c:	bl	40ee2c <__fxstatat@plt+0xc3dc>
  404d50:	cmp	x0, #0x7f
  404d54:	b.hi	403764 <__fxstatat@plt+0xd14>  // b.pmore
  404d58:	ldur	x8, [x29, #-16]
  404d5c:	add	x25, x25, #0x1
  404d60:	add	x22, x22, #0x80
  404d64:	cmp	x21, x8
  404d68:	csel	x21, x21, x8, hi  // hi = pmore
  404d6c:	cmp	x25, #0xc
  404d70:	b.ne	404d08 <__fxstatat@plt+0x22b8>  // b.any
  404d74:	cmp	x28, x21
  404d78:	mov	x28, x21
  404d7c:	b.hi	404cfc <__fxstatat@plt+0x22ac>  // b.pmore
  404d80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404d84:	ldr	x22, [x8, #1264]
  404d88:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  404d8c:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x6060>
  404d90:	mov	x21, xzr
  404d94:	add	x27, x24, #0x2
  404d98:	add	x23, x23, #0x960
  404d9c:	add	x28, sp, #0x20
  404da0:	sub	x24, x24, x22
  404da4:	add	x25, x25, #0x140
  404da8:	ldr	w8, [sp, #16]
  404dac:	add	x0, x23, x21
  404db0:	cbz	w8, 404dd4 <__fxstatat@plt+0x2384>
  404db4:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x6060>
  404db8:	mov	w1, #0x80                  	// #128
  404dbc:	mov	w2, #0x1                   	// #1
  404dc0:	mov	x3, #0xffffffffffffffff    	// #-1
  404dc4:	add	x4, x4, #0x5ff
  404dc8:	mov	x5, x22
  404dcc:	bl	4025c0 <__snprintf_chk@plt>
  404dd0:	b	404e00 <__fxstatat@plt+0x23b0>
  404dd4:	cmp	x24, #0x80
  404dd8:	b.gt	403764 <__fxstatat@plt+0xd14>
  404ddc:	add	x7, x28, x21
  404de0:	mov	w1, #0x80                  	// #128
  404de4:	mov	w2, #0x1                   	// #1
  404de8:	mov	x3, #0xffffffffffffffff    	// #-1
  404dec:	mov	x4, x25
  404df0:	mov	w5, w24
  404df4:	mov	x6, x22
  404df8:	str	x27, [sp]
  404dfc:	bl	4025c0 <__snprintf_chk@plt>
  404e00:	cmp	w0, #0x80
  404e04:	b.cs	403764 <__fxstatat@plt+0xd14>  // b.hs, b.nlast
  404e08:	add	x21, x21, #0x80
  404e0c:	cmp	x21, #0x600
  404e10:	b.ne	404da8 <__fxstatat@plt+0x2358>  // b.any
  404e14:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404e18:	ldr	x22, [x8, #1272]
  404e1c:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  404e20:	add	x8, x8, #0x5ff
  404e24:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x6060>
  404e28:	mov	x21, xzr
  404e2c:	add	x28, x26, #0x2
  404e30:	add	x27, sp, #0x20
  404e34:	sub	x24, x26, x22
  404e38:	mov	x26, x8
  404e3c:	add	x25, x25, #0x140
  404e40:	add	x8, x23, x21
  404e44:	add	x0, x8, #0x600
  404e48:	ldr	w8, [sp, #12]
  404e4c:	tbz	w8, #0, 404e6c <__fxstatat@plt+0x241c>
  404e50:	mov	w1, #0x80                  	// #128
  404e54:	mov	w2, #0x1                   	// #1
  404e58:	mov	x3, #0xffffffffffffffff    	// #-1
  404e5c:	mov	x4, x26
  404e60:	mov	x5, x22
  404e64:	bl	4025c0 <__snprintf_chk@plt>
  404e68:	b	404e98 <__fxstatat@plt+0x2448>
  404e6c:	cmp	x24, #0x80
  404e70:	b.gt	403764 <__fxstatat@plt+0xd14>
  404e74:	add	x7, x27, x21
  404e78:	mov	w1, #0x80                  	// #128
  404e7c:	mov	w2, #0x1                   	// #1
  404e80:	mov	x3, #0xffffffffffffffff    	// #-1
  404e84:	mov	x4, x25
  404e88:	mov	w5, w24
  404e8c:	mov	x6, x22
  404e90:	str	x28, [sp]
  404e94:	bl	4025c0 <__snprintf_chk@plt>
  404e98:	cmp	w0, #0x7f
  404e9c:	b.hi	403764 <__fxstatat@plt+0xd14>  // b.pmore
  404ea0:	add	x21, x21, #0x80
  404ea4:	cmp	x21, #0x600
  404ea8:	b.ne	404e40 <__fxstatat@plt+0x23f0>  // b.any
  404eac:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  404eb0:	mov	w9, #0x1                   	// #1
  404eb4:	strb	w9, [x8, #1376]
  404eb8:	b	403764 <__fxstatat@plt+0xd14>
  404ebc:	mov	w1, #0xa                   	// #10
  404ec0:	bl	402790 <__overflow@plt>
  404ec4:	ldr	x19, [x24, #1496]
  404ec8:	b	404090 <__fxstatat@plt+0x1640>
  404ecc:	mov	w0, #0x2                   	// #2
  404ed0:	bl	407538 <__fxstatat@plt+0x4ae8>
  404ed4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  404ed8:	ldr	w9, [x9, #1288]
  404edc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  404ee0:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x18060>
  404ee4:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x5060>
  404ee8:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x6060>
  404eec:	ldr	x0, [x8, #1456]
  404ef0:	ldr	x3, [x13, #1296]
  404ef4:	add	x10, x10, #0xbf9
  404ef8:	add	x11, x11, #0x1b
  404efc:	adrp	x12, 419000 <_obstack_memory_used@@Base+0x5060>
  404f00:	cmp	w9, #0x2
  404f04:	add	x12, x12, #0xde9
  404f08:	csel	x8, x11, x10, eq  // eq = none
  404f0c:	cmp	w9, #0x1
  404f10:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5060>
  404f14:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x5060>
  404f18:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x5060>
  404f1c:	csel	x1, x12, x8, eq  // eq = none
  404f20:	add	x2, x2, #0xdde
  404f24:	add	x4, x4, #0xdec
  404f28:	add	x5, x5, #0xe00
  404f2c:	mov	x6, xzr
  404f30:	bl	412ce8 <__fxstatat@plt+0x10298>
  404f34:	mov	w0, wzr
  404f38:	bl	402460 <exit@plt>
  404f3c:	mov	w0, wzr
  404f40:	bl	407538 <__fxstatat@plt+0x4ae8>
  404f44:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  404f48:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  404f4c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5060>
  404f50:	add	x0, x0, #0xc01
  404f54:	add	x1, x1, #0xf3b
  404f58:	add	x3, x3, #0xc38
  404f5c:	mov	w2, #0x403                 	// #1027
  404f60:	bl	4029d0 <__assert_fail@plt>
  404f64:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  404f68:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  404f6c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3060>
  404f70:	add	x0, x0, #0xf35
  404f74:	add	x1, x1, #0xf3b
  404f78:	add	x3, x3, #0xf44
  404f7c:	mov	w2, #0x640                 	// #1600
  404f80:	bl	4029d0 <__assert_fail@plt>
  404f84:	bl	402770 <abort@plt>
  404f88:	bl	413124 <__fxstatat@plt+0x106d4>
  404f8c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  404f90:	add	x1, x1, #0xd60
  404f94:	mov	w2, #0x5                   	// #5
  404f98:	mov	x0, xzr
  404f9c:	bl	402970 <dcgettext@plt>
  404fa0:	ldr	x8, [x26, #1440]
  404fa4:	mov	x19, x0
  404fa8:	mov	x0, x8
  404fac:	bl	412440 <__fxstatat@plt+0xf9f0>
  404fb0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5060>
  404fb4:	mov	x4, x0
  404fb8:	add	x2, x2, #0xd59
  404fbc:	mov	w0, #0x2                   	// #2
  404fc0:	mov	w1, wzr
  404fc4:	mov	x3, x19
  404fc8:	bl	402490 <error@plt>
  404fcc:	ldur	w1, [x29, #-16]
  404fd0:	ldr	x4, [x26, #1440]
  404fd4:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x2060>
  404fd8:	add	x3, x3, #0x368
  404fdc:	mov	w2, wzr
  404fe0:	bl	413718 <__fxstatat@plt+0x10cc8>
  404fe4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  404fe8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  404fec:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3060>
  404ff0:	add	x0, x0, #0xf9b
  404ff4:	add	x1, x1, #0xf3b
  404ff8:	add	x3, x3, #0xf44
  404ffc:	mov	w2, #0x674                 	// #1652
  405000:	bl	4029d0 <__assert_fail@plt>
  405004:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  405008:	add	x0, x0, #0xe4c
  40500c:	mov	x1, x22
  405010:	bl	40b94c <__fxstatat@plt+0x8efc>
  405014:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  405018:	add	x1, x1, #0xe57
  40501c:	mov	w2, #0x5                   	// #5
  405020:	mov	x0, xzr
  405024:	bl	402970 <dcgettext@plt>
  405028:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  40502c:	ldr	x1, [x20, #1432]
  405030:	bl	402980 <fputs_unlocked@plt>
  405034:	ldr	x0, [x20, #1432]
  405038:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x5060>
  40503c:	add	x19, x19, #0xe6d
  405040:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5060>
  405044:	add	x3, x3, #0xd9f
  405048:	mov	w1, #0x1                   	// #1
  40504c:	mov	x2, x19
  405050:	bl	4027e0 <__fprintf_chk@plt>
  405054:	ldr	x0, [x20, #1432]
  405058:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40505c:	add	x3, x3, #0x137
  405060:	mov	w1, #0x1                   	// #1
  405064:	mov	x2, x19
  405068:	bl	4027e0 <__fprintf_chk@plt>
  40506c:	ldr	x0, [x20, #1432]
  405070:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  405074:	add	x3, x3, #0x13c
  405078:	mov	w1, #0x1                   	// #1
  40507c:	mov	x2, x19
  405080:	bl	4027e0 <__fprintf_chk@plt>
  405084:	ldr	x0, [x20, #1432]
  405088:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3060>
  40508c:	add	x3, x3, #0xf2b
  405090:	mov	w1, #0x1                   	// #1
  405094:	mov	x2, x19
  405098:	bl	4027e0 <__fprintf_chk@plt>
  40509c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4050a0:	add	x1, x1, #0xe7d
  4050a4:	mov	w2, #0x5                   	// #5
  4050a8:	mov	x0, xzr
  4050ac:	bl	402970 <dcgettext@plt>
  4050b0:	ldr	x1, [x20, #1432]
  4050b4:	bl	402980 <fputs_unlocked@plt>
  4050b8:	mov	w0, #0x2                   	// #2
  4050bc:	bl	407538 <__fxstatat@plt+0x4ae8>
  4050c0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4050c4:	add	x1, x1, #0xe2f
  4050c8:	mov	w2, #0x5                   	// #5
  4050cc:	mov	x0, xzr
  4050d0:	bl	402970 <dcgettext@plt>
  4050d4:	mov	x19, x0
  4050d8:	mov	x0, x22
  4050dc:	bl	412440 <__fxstatat@plt+0xf9f0>
  4050e0:	mov	x3, x0
  4050e4:	mov	w0, #0x2                   	// #2
  4050e8:	mov	w1, wzr
  4050ec:	mov	x2, x19
  4050f0:	bl	402490 <error@plt>
  4050f4:	ldr	x8, [x0]
  4050f8:	udiv	x9, x8, x1
  4050fc:	msub	x0, x9, x1, x8
  405100:	ret
  405104:	ldr	x8, [x0]
  405108:	ldr	x9, [x1]
  40510c:	cmp	x8, x9
  405110:	b.ne	405128 <__fxstatat@plt+0x26d8>  // b.any
  405114:	ldr	x8, [x0, #8]
  405118:	ldr	x9, [x1, #8]
  40511c:	cmp	x8, x9
  405120:	cset	w0, eq  // eq = none
  405124:	ret
  405128:	mov	w0, wzr
  40512c:	ret
  405130:	b	402840 <free@plt>
  405134:	stp	x29, x30, [sp, #-96]!
  405138:	stp	x28, x27, [sp, #16]
  40513c:	stp	x26, x25, [sp, #32]
  405140:	stp	x24, x23, [sp, #48]
  405144:	stp	x22, x21, [sp, #64]
  405148:	stp	x20, x19, [sp, #80]
  40514c:	mov	x29, sp
  405150:	sub	sp, sp, #0x2e0
  405154:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  405158:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  40515c:	ldr	x26, [x21, #1872]
  405160:	ldr	x8, [x22, #1856]
  405164:	mov	x19, sp
  405168:	mov	x25, x3
  40516c:	mov	w23, w1
  405170:	cmp	x26, x8
  405174:	mov	x20, x0
  405178:	str	w2, [x19, #36]
  40517c:	b.ne	4051cc <__fxstatat@plt+0x277c>  // b.any
  405180:	mov	x8, #0x8591                	// #34193
  405184:	movk	x8, #0x642c, lsl #16
  405188:	movk	x8, #0xb21, lsl #32
  40518c:	movk	x8, #0x59, lsl #48
  405190:	cmp	x26, x8
  405194:	b.cs	4060cc <__fxstatat@plt+0x367c>  // b.hs, b.nlast
  405198:	mov	x24, x20
  40519c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  4051a0:	ldr	x0, [x20, #1864]
  4051a4:	mov	w8, #0x170                 	// #368
  4051a8:	mul	x1, x26, x8
  4051ac:	bl	412e90 <__fxstatat@plt+0x10440>
  4051b0:	ldr	x8, [x22, #1856]
  4051b4:	ldr	x26, [x21, #1872]
  4051b8:	str	x0, [x20, #1864]
  4051bc:	mov	x20, x24
  4051c0:	lsl	x8, x8, #1
  4051c4:	str	x8, [x22, #1856]
  4051c8:	b	4051d4 <__fxstatat@plt+0x2784>
  4051cc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4051d0:	ldr	x0, [x8, #1864]
  4051d4:	mov	w8, #0xb8                  	// #184
  4051d8:	madd	x28, x26, x8, x0
  4051dc:	movi	v0.2d, #0x0
  4051e0:	mov	x27, x28
  4051e4:	mov	w9, #0xffffffff            	// #-1
  4051e8:	str	x0, [x19, #40]
  4051ec:	stp	q0, q0, [x28, #144]
  4051f0:	stp	q0, q0, [x28, #112]
  4051f4:	stp	q0, q0, [x28, #80]
  4051f8:	stp	q0, q0, [x28, #48]
  4051fc:	stp	q0, q0, [x28]
  405200:	mov	x8, x28
  405204:	mov	x10, x28
  405208:	str	q0, [x27, #32]!
  40520c:	str	xzr, [x28, #176]
  405210:	str	xzr, [x27]
  405214:	str	w23, [x8, #152]!
  405218:	str	w9, [x10, #180]!
  40521c:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405220:	stp	x8, x10, [x19, #8]
  405224:	ldrb	w8, [x22, #1401]
  405228:	tbnz	w8, #0, 40529c <__fxstatat@plt+0x284c>
  40522c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405230:	ldrb	w8, [x8, #2384]
  405234:	cbz	w8, 40529c <__fxstatat@plt+0x284c>
  405238:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40523c:	ldr	x4, [x8, #1904]
  405240:	add	x0, x19, #0x48
  405244:	mov	w1, #0x2                   	// #2
  405248:	mov	x3, #0xffffffffffffffff    	// #-1
  40524c:	mov	x2, x20
  405250:	bl	410e2c <__fxstatat@plt+0xe3dc>
  405254:	ldrb	w8, [x20]
  405258:	ldrb	w9, [x19, #72]
  40525c:	cmp	w8, w9
  405260:	b.ne	405288 <__fxstatat@plt+0x2838>  // b.any
  405264:	mov	x24, x0
  405268:	mov	x0, x20
  40526c:	bl	402430 <strlen@plt>
  405270:	ldr	x9, [x19, #16]
  405274:	cmp	x0, x24
  405278:	cset	w8, ne  // ne = any
  40527c:	str	w8, [x9]
  405280:	b.ne	405294 <__fxstatat@plt+0x2844>  // b.any
  405284:	b	40529c <__fxstatat@plt+0x284c>
  405288:	ldr	x9, [x19, #16]
  40528c:	mov	w8, #0x1                   	// #1
  405290:	str	w8, [x9]
  405294:	mov	w8, #0x1                   	// #1
  405298:	strb	w8, [x22, #1401]
  40529c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4052a0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4052a4:	str	x26, [x19, #24]
  4052a8:	ldrb	w26, [x8, #1840]
  4052ac:	ldrb	w8, [x9, #1656]
  4052b0:	orr	w8, w8, w26
  4052b4:	tst	w8, #0xff
  4052b8:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  4052bc:	ldr	w8, [x19, #36]
  4052c0:	tbnz	w8, #0, 405428 <__fxstatat@plt+0x29d8>
  4052c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4052c8:	ldrb	w24, [x8, #1520]
  4052cc:	cmp	w23, #0x3
  4052d0:	b.ne	4053b0 <__fxstatat@plt+0x2960>  // b.any
  4052d4:	cbz	w24, 4053b0 <__fxstatat@plt+0x2960>
  4052d8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4052dc:	add	x9, x9, #0x498
  4052e0:	ldr	x8, [x9]
  4052e4:	cbz	x8, 405320 <__fxstatat@plt+0x28d0>
  4052e8:	ldr	x0, [x9, #8]
  4052ec:	cmp	x8, #0x2
  4052f0:	b.eq	40530c <__fxstatat@plt+0x28bc>  // b.none
  4052f4:	cmp	x8, #0x1
  4052f8:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  4052fc:	ldrb	w8, [x0]
  405300:	cmp	w8, #0x30
  405304:	b.eq	405320 <__fxstatat@plt+0x28d0>  // b.none
  405308:	b	405428 <__fxstatat@plt+0x29d8>
  40530c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  405310:	add	x1, x1, #0xbfe
  405314:	mov	w2, #0x2                   	// #2
  405318:	bl	402640 <strncmp@plt>
  40531c:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  405320:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  405324:	add	x9, x9, #0x488
  405328:	ldr	x8, [x9]
  40532c:	cbz	x8, 405368 <__fxstatat@plt+0x2918>
  405330:	ldr	x0, [x9, #8]
  405334:	cmp	x8, #0x2
  405338:	b.eq	405354 <__fxstatat@plt+0x2904>  // b.none
  40533c:	cmp	x8, #0x1
  405340:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  405344:	ldrb	w8, [x0]
  405348:	cmp	w8, #0x30
  40534c:	b.eq	405368 <__fxstatat@plt+0x2918>  // b.none
  405350:	b	405428 <__fxstatat@plt+0x29d8>
  405354:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  405358:	add	x1, x1, #0xbfe
  40535c:	mov	w2, #0x2                   	// #2
  405360:	bl	402640 <strncmp@plt>
  405364:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  405368:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40536c:	add	x9, x9, #0x4a8
  405370:	ldr	x8, [x9]
  405374:	cbz	x8, 4053b0 <__fxstatat@plt+0x2960>
  405378:	ldr	x0, [x9, #8]
  40537c:	cmp	x8, #0x2
  405380:	b.eq	40539c <__fxstatat@plt+0x294c>  // b.none
  405384:	cmp	x8, #0x1
  405388:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  40538c:	ldrb	w8, [x0]
  405390:	cmp	w8, #0x30
  405394:	b.eq	4053b0 <__fxstatat@plt+0x2960>  // b.none
  405398:	b	405428 <__fxstatat@plt+0x29d8>
  40539c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4053a0:	add	x1, x1, #0xbfe
  4053a4:	mov	w2, #0x2                   	// #2
  4053a8:	bl	402640 <strncmp@plt>
  4053ac:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  4053b0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4053b4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4053b8:	ldrb	w8, [x8, #1660]
  4053bc:	ldrb	w9, [x9, #2306]
  4053c0:	cbnz	w8, 4053c8 <__fxstatat@plt+0x2978>
  4053c4:	cbz	w9, 4053fc <__fxstatat@plt+0x29ac>
  4053c8:	cmp	w23, #0x6
  4053cc:	b.eq	4053d4 <__fxstatat@plt+0x2984>  // b.none
  4053d0:	cbnz	w23, 4053fc <__fxstatat@plt+0x29ac>
  4053d4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4053d8:	ldr	w10, [x10, #1528]
  4053dc:	cmp	w10, #0x5
  4053e0:	b.eq	405428 <__fxstatat@plt+0x29d8>  // b.none
  4053e4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4053e8:	ldrb	w10, [x10, #1523]
  4053ec:	tbnz	w10, #0, 405428 <__fxstatat@plt+0x29d8>
  4053f0:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4053f4:	ldrb	w10, [x10, #1522]
  4053f8:	orr	w9, w9, w10
  4053fc:	tbnz	w9, #0, 405428 <__fxstatat@plt+0x29d8>
  405400:	cbz	w8, 406058 <__fxstatat@plt+0x3608>
  405404:	cbz	w23, 405428 <__fxstatat@plt+0x29d8>
  405408:	ldr	w8, [x19, #36]
  40540c:	tbnz	w8, #0, 405428 <__fxstatat@plt+0x29d8>
  405410:	cmp	w23, #0x5
  405414:	b.ne	406058 <__fxstatat@plt+0x3608>  // b.any
  405418:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40541c:	ldr	w8, [x8, #1536]
  405420:	cmp	w8, #0x3
  405424:	b.ne	4057cc <__fxstatat@plt+0x2d7c>  // b.any
  405428:	ldrb	w8, [x20]
  40542c:	mov	x24, x20
  405430:	cmp	w8, #0x2f
  405434:	b.eq	4054d0 <__fxstatat@plt+0x2a80>  // b.none
  405438:	ldrb	w22, [x25]
  40543c:	mov	x24, x20
  405440:	cbz	w22, 4054d0 <__fxstatat@plt+0x2a80>
  405444:	mov	x0, x20
  405448:	bl	402430 <strlen@plt>
  40544c:	mov	x24, x0
  405450:	mov	x0, x25
  405454:	bl	402430 <strlen@plt>
  405458:	add	x8, x24, x0
  40545c:	add	x8, x8, #0x11
  405460:	and	x8, x8, #0xfffffffffffffff0
  405464:	mov	x9, sp
  405468:	sub	x24, x9, x8
  40546c:	mov	sp, x24
  405470:	cmp	w22, #0x2e
  405474:	b.ne	405484 <__fxstatat@plt+0x2a34>  // b.any
  405478:	ldrb	w9, [x25, #1]
  40547c:	mov	x8, x24
  405480:	cbz	w9, 4054b4 <__fxstatat@plt+0x2a64>
  405484:	mov	x9, x25
  405488:	mov	x8, x24
  40548c:	strb	w22, [x8], #1
  405490:	ldrb	w22, [x9, #1]!
  405494:	cbnz	w22, 40548c <__fxstatat@plt+0x2a3c>
  405498:	cmp	x9, x25
  40549c:	b.ls	4054b4 <__fxstatat@plt+0x2a64>  // b.plast
  4054a0:	ldurb	w9, [x9, #-1]
  4054a4:	cmp	w9, #0x2f
  4054a8:	b.eq	4054b4 <__fxstatat@plt+0x2a64>  // b.none
  4054ac:	mov	w9, #0x2f                  	// #47
  4054b0:	strb	w9, [x8], #1
  4054b4:	ldrb	w9, [x20]
  4054b8:	cbz	w9, 4054cc <__fxstatat@plt+0x2a7c>
  4054bc:	add	x10, x20, #0x1
  4054c0:	strb	w9, [x8], #1
  4054c4:	ldrb	w9, [x10], #1
  4054c8:	cbnz	w9, 4054c0 <__fxstatat@plt+0x2a70>
  4054cc:	strb	wzr, [x8]
  4054d0:	ldr	x22, [x19, #40]
  4054d4:	cbz	w26, 40555c <__fxstatat@plt+0x2b0c>
  4054d8:	mov	w1, #0x2                   	// #2
  4054dc:	mov	x0, x24
  4054e0:	bl	40bf38 <__fxstatat@plt+0x94e8>
  4054e4:	ldr	x9, [x19, #24]
  4054e8:	mov	w8, #0xb8                  	// #184
  4054ec:	madd	x8, x9, x8, x22
  4054f0:	str	x0, [x8, #16]
  4054f4:	cbnz	x0, 40555c <__fxstatat@plt+0x2b0c>
  4054f8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4054fc:	add	x1, x1, #0x25f
  405500:	mov	w2, #0x5                   	// #5
  405504:	bl	402970 <dcgettext@plt>
  405508:	mov	x25, x0
  40550c:	bl	4029e0 <__errno_location@plt>
  405510:	ldr	w26, [x0]
  405514:	mov	w0, #0x4                   	// #4
  405518:	mov	x1, x24
  40551c:	bl	411fd4 <__fxstatat@plt+0xf584>
  405520:	mov	x3, x0
  405524:	mov	w0, wzr
  405528:	mov	w1, w26
  40552c:	mov	x2, x25
  405530:	bl	402490 <error@plt>
  405534:	ldr	w8, [x19, #36]
  405538:	tbz	w8, #0, 405548 <__fxstatat@plt+0x2af8>
  40553c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405540:	mov	w9, #0x2                   	// #2
  405544:	b	405558 <__fxstatat@plt+0x2b08>
  405548:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40554c:	ldr	w9, [x8, #1488]
  405550:	cbnz	w9, 40555c <__fxstatat@plt+0x2b0c>
  405554:	mov	w9, #0x1                   	// #1
  405558:	str	w9, [x8, #1488]
  40555c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405560:	ldr	w8, [x8, #1528]
  405564:	add	x25, x28, #0x18
  405568:	sub	w9, w8, #0x3
  40556c:	cmp	w9, #0x2
  405570:	b.cs	4055c0 <__fxstatat@plt+0x2b70>  // b.hs, b.nlast
  405574:	ldr	x26, [x19, #24]
  405578:	ldr	w8, [x19, #36]
  40557c:	tbz	w8, #0, 4055f4 <__fxstatat@plt+0x2ba4>
  405580:	mov	w0, wzr
  405584:	mov	x1, x24
  405588:	mov	x2, x25
  40558c:	bl	402a00 <__xstat@plt>
  405590:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405594:	ldr	w8, [x8, #1528]
  405598:	cmp	w8, #0x3
  40559c:	b.eq	4055dc <__fxstatat@plt+0x2b8c>  // b.none
  4055a0:	tbnz	w0, #31, 4055e4 <__fxstatat@plt+0x2b94>
  4055a4:	mov	w8, #0xb8                  	// #184
  4055a8:	madd	x8, x26, x8, x22
  4055ac:	ldr	w8, [x8, #40]
  4055b0:	and	w8, w8, #0xf000
  4055b4:	cmp	w8, #0x4, lsl #12
  4055b8:	b.eq	4055dc <__fxstatat@plt+0x2b8c>  // b.none
  4055bc:	b	4055f4 <__fxstatat@plt+0x2ba4>
  4055c0:	ldr	x26, [x19, #24]
  4055c4:	cmp	w8, #0x5
  4055c8:	b.ne	4055f4 <__fxstatat@plt+0x2ba4>  // b.any
  4055cc:	mov	w0, wzr
  4055d0:	mov	x1, x24
  4055d4:	mov	x2, x25
  4055d8:	bl	402a00 <__xstat@plt>
  4055dc:	cbnz	w0, 405608 <__fxstatat@plt+0x2bb8>
  4055e0:	b	40566c <__fxstatat@plt+0x2c1c>
  4055e4:	bl	4029e0 <__errno_location@plt>
  4055e8:	ldr	w8, [x0]
  4055ec:	cmp	w8, #0x2
  4055f0:	b.ne	405608 <__fxstatat@plt+0x2bb8>  // b.any
  4055f4:	mov	w0, wzr
  4055f8:	mov	x1, x24
  4055fc:	mov	x2, x25
  405600:	bl	4028f0 <__lxstat@plt>
  405604:	cbz	w0, 40566c <__fxstatat@plt+0x2c1c>
  405608:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40560c:	add	x1, x1, #0x2c9
  405610:	mov	w2, #0x5                   	// #5
  405614:	mov	x0, xzr
  405618:	mov	x22, x20
  40561c:	mov	x20, x21
  405620:	bl	402970 <dcgettext@plt>
  405624:	mov	x21, x0
  405628:	bl	4029e0 <__errno_location@plt>
  40562c:	ldr	w23, [x0]
  405630:	mov	w0, #0x4                   	// #4
  405634:	mov	x1, x24
  405638:	bl	411fd4 <__fxstatat@plt+0xf584>
  40563c:	mov	x3, x0
  405640:	mov	w0, wzr
  405644:	mov	w1, w23
  405648:	mov	x2, x21
  40564c:	bl	402490 <error@plt>
  405650:	ldr	w8, [x19, #36]
  405654:	tbz	w8, #0, 4056dc <__fxstatat@plt+0x2c8c>
  405658:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40565c:	mov	w9, #0x2                   	// #2
  405660:	mov	x24, xzr
  405664:	str	w9, [x8, #1488]
  405668:	b	4060a8 <__fxstatat@plt+0x3658>
  40566c:	mov	w8, #0xb8                  	// #184
  405670:	mov	w9, #0x1                   	// #1
  405674:	madd	x8, x26, x8, x22
  405678:	cmp	w23, #0x5
  40567c:	strb	w9, [x8, #168]
  405680:	b.eq	40569c <__fxstatat@plt+0x2c4c>  // b.none
  405684:	mov	w8, #0xb8                  	// #184
  405688:	madd	x8, x26, x8, x22
  40568c:	ldr	w8, [x8, #40]
  405690:	and	w8, w8, #0xf000
  405694:	cmp	w8, #0x8, lsl #12
  405698:	b.ne	405820 <__fxstatat@plt+0x2dd0>  // b.any
  40569c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4056a0:	ldrb	w8, [x8, #1520]
  4056a4:	cbz	w8, 405820 <__fxstatat@plt+0x2dd0>
  4056a8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4056ac:	add	x9, x9, #0x4b8
  4056b0:	ldr	x8, [x9]
  4056b4:	cbz	x8, 405820 <__fxstatat@plt+0x2dd0>
  4056b8:	ldr	x0, [x9, #8]
  4056bc:	cmp	x8, #0x2
  4056c0:	b.eq	405710 <__fxstatat@plt+0x2cc0>  // b.none
  4056c4:	cmp	x8, #0x1
  4056c8:	b.ne	405724 <__fxstatat@plt+0x2cd4>  // b.any
  4056cc:	ldrb	w8, [x0]
  4056d0:	cmp	w8, #0x30
  4056d4:	b.ne	405724 <__fxstatat@plt+0x2cd4>  // b.any
  4056d8:	b	405820 <__fxstatat@plt+0x2dd0>
  4056dc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4056e0:	ldr	w9, [x8, #1488]
  4056e4:	cbnz	w9, 4056f0 <__fxstatat@plt+0x2ca0>
  4056e8:	mov	w9, #0x1                   	// #1
  4056ec:	str	w9, [x8, #1488]
  4056f0:	mov	x0, x22
  4056f4:	bl	4130cc <__fxstatat@plt+0x1067c>
  4056f8:	str	x0, [x28]
  4056fc:	ldr	x8, [x20, #1872]
  405700:	mov	x24, xzr
  405704:	add	x8, x8, #0x1
  405708:	str	x8, [x20, #1872]
  40570c:	b	4060a8 <__fxstatat@plt+0x3658>
  405710:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  405714:	add	x1, x1, #0xbfe
  405718:	mov	w2, #0x2                   	// #2
  40571c:	bl	402640 <strncmp@plt>
  405720:	cbz	w0, 405820 <__fxstatat@plt+0x2dd0>
  405724:	mov	w8, #0xb8                  	// #184
  405728:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40572c:	madd	x22, x26, x8, x22
  405730:	ldr	x8, [x22, #24]!
  405734:	ldr	x9, [x9, #1464]
  405738:	cmp	x8, x9
  40573c:	b.ne	405754 <__fxstatat@plt+0x2d04>  // b.any
  405740:	bl	4029e0 <__errno_location@plt>
  405744:	mov	w9, #0x5f                  	// #95
  405748:	mov	w8, wzr
  40574c:	str	w9, [x0]
  405750:	b	405810 <__fxstatat@plt+0x2dc0>
  405754:	mov	x0, x24
  405758:	str	x20, [x19]
  40575c:	bl	402900 <cap_get_file@plt>
  405760:	cbz	x0, 405798 <__fxstatat@plt+0x2d48>
  405764:	mov	x1, xzr
  405768:	mov	x23, x0
  40576c:	bl	4023e0 <cap_to_text@plt>
  405770:	mov	x26, x0
  405774:	mov	x0, x23
  405778:	bl	402950 <cap_free@plt>
  40577c:	cbz	x26, 405798 <__fxstatat@plt+0x2d48>
  405780:	ldrb	w20, [x26]
  405784:	mov	x0, x26
  405788:	bl	402950 <cap_free@plt>
  40578c:	cbz	w20, 405798 <__fxstatat@plt+0x2d48>
  405790:	mov	w8, #0x1                   	// #1
  405794:	b	405808 <__fxstatat@plt+0x2db8>
  405798:	bl	4029e0 <__errno_location@plt>
  40579c:	ldr	w8, [x0]
  4057a0:	cmp	w8, #0x16
  4057a4:	b.eq	4057b8 <__fxstatat@plt+0x2d68>  // b.none
  4057a8:	cmp	w8, #0x5f
  4057ac:	b.eq	4057b8 <__fxstatat@plt+0x2d68>  // b.none
  4057b0:	cmp	w8, #0x26
  4057b4:	b.ne	405804 <__fxstatat@plt+0x2db4>  // b.any
  4057b8:	ldr	x9, [x22]
  4057bc:	mov	w8, wzr
  4057c0:	adrp	x10, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4057c4:	str	x9, [x10, #1464]
  4057c8:	b	405808 <__fxstatat@plt+0x2db8>
  4057cc:	cbz	w24, 406058 <__fxstatat@plt+0x3608>
  4057d0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4057d4:	add	x9, x9, #0x448
  4057d8:	ldr	x8, [x9]
  4057dc:	cbz	x8, 405f80 <__fxstatat@plt+0x3530>
  4057e0:	ldr	x0, [x9, #8]
  4057e4:	cmp	x8, #0x2
  4057e8:	b.eq	405f6c <__fxstatat@plt+0x351c>  // b.none
  4057ec:	cmp	x8, #0x1
  4057f0:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  4057f4:	ldrb	w8, [x0]
  4057f8:	cmp	w8, #0x30
  4057fc:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  405800:	b	405f80 <__fxstatat@plt+0x3530>
  405804:	mov	w8, wzr
  405808:	ldr	x20, [x19]
  40580c:	ldr	x26, [x19, #24]
  405810:	ldr	x10, [x19, #40]
  405814:	mov	w9, #0xb8                  	// #184
  405818:	madd	x9, x26, x9, x10
  40581c:	strb	w8, [x9, #176]
  405820:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405824:	ldr	w22, [x8, #1524]
  405828:	cbz	w22, 40583c <__fxstatat@plt+0x2dec>
  40582c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405830:	ldrb	w8, [x8, #1652]
  405834:	cmp	w8, #0x1
  405838:	b.ne	4059b0 <__fxstatat@plt+0x2f60>  // b.any
  40583c:	ldr	x9, [x19, #40]
  405840:	mov	w8, #0xb8                  	// #184
  405844:	str	x27, [x19]
  405848:	mov	x27, x20
  40584c:	adrp	x20, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405850:	madd	x8, x26, x8, x9
  405854:	ldr	x26, [x8, #24]
  405858:	ldr	x21, [x20, #1472]
  40585c:	bl	4029e0 <__errno_location@plt>
  405860:	mov	x23, x0
  405864:	mov	w8, #0x5f                  	// #95
  405868:	cmp	x26, x21
  40586c:	str	w8, [x0]
  405870:	b.eq	405878 <__fxstatat@plt+0x2e28>  // b.none
  405874:	str	x26, [x20, #1472]
  405878:	ldr	x9, [x19, #24]
  40587c:	ldr	x10, [x19, #40]
  405880:	mov	w8, #0xb8                  	// #184
  405884:	madd	x8, x9, x8, x10
  405888:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40588c:	add	x9, x9, #0x500
  405890:	str	x9, [x8, #160]
  405894:	cbz	w22, 4058bc <__fxstatat@plt+0x2e6c>
  405898:	mov	x20, x27
  40589c:	ldr	x27, [x19]
  4058a0:	ldr	x26, [x19, #24]
  4058a4:	ldr	x12, [x19, #40]
  4058a8:	mov	w8, wzr
  4058ac:	mov	w10, wzr
  4058b0:	mov	w9, wzr
  4058b4:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  4058b8:	b	405964 <__fxstatat@plt+0x2f14>
  4058bc:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4058c0:	ldr	x8, [x22, #1480]
  4058c4:	cmp	x26, x8
  4058c8:	b.ne	4058ec <__fxstatat@plt+0x2e9c>  // b.any
  4058cc:	mov	x20, x27
  4058d0:	ldr	x27, [x19]
  4058d4:	ldr	x26, [x19, #24]
  4058d8:	mov	w8, #0x5f                  	// #95
  4058dc:	mov	w0, wzr
  4058e0:	str	w8, [x23]
  4058e4:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  4058e8:	b	405950 <__fxstatat@plt+0x2f00>
  4058ec:	mov	x0, x24
  4058f0:	mov	x1, x25
  4058f4:	str	wzr, [x23]
  4058f8:	bl	40c6d4 <__fxstatat@plt+0x9c84>
  4058fc:	ldr	x26, [x19, #24]
  405900:	cmp	w0, #0x0
  405904:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  405908:	mov	x20, x27
  40590c:	b.le	405928 <__fxstatat@plt+0x2ed8>
  405910:	ldr	x27, [x19]
  405914:	ldr	x12, [x19, #40]
  405918:	mov	w8, wzr
  40591c:	mov	w9, #0x2                   	// #2
  405920:	mov	w10, #0x1                   	// #1
  405924:	b	405964 <__fxstatat@plt+0x2f14>
  405928:	ldr	w8, [x23]
  40592c:	ldr	x27, [x19]
  405930:	cmp	w8, #0x16
  405934:	b.eq	405948 <__fxstatat@plt+0x2ef8>  // b.none
  405938:	cmp	w8, #0x5f
  40593c:	b.eq	405948 <__fxstatat@plt+0x2ef8>  // b.none
  405940:	cmp	w8, #0x26
  405944:	b.ne	405950 <__fxstatat@plt+0x2f00>  // b.any
  405948:	ldr	x8, [x25]
  40594c:	str	x8, [x22, #1480]
  405950:	ldr	x12, [x19, #40]
  405954:	cmp	w0, #0x0
  405958:	mov	w9, wzr
  40595c:	lsr	w8, w0, #31
  405960:	cset	w10, gt
  405964:	mov	w11, #0xb8                  	// #184
  405968:	madd	x11, x26, x11, x12
  40596c:	str	w9, [x11, #172]
  405970:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405974:	ldrb	w11, [x9, #1416]
  405978:	orr	w10, w11, w10
  40597c:	strb	w10, [x9, #1416]
  405980:	cbz	w8, 4059b0 <__fxstatat@plt+0x2f60>
  405984:	ldr	w23, [x23]
  405988:	mov	w1, #0x3                   	// #3
  40598c:	mov	w0, wzr
  405990:	mov	x2, x24
  405994:	bl	412200 <__fxstatat@plt+0xf7b0>
  405998:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40599c:	mov	x3, x0
  4059a0:	add	x2, x2, #0x5ff
  4059a4:	mov	w0, wzr
  4059a8:	mov	w1, w23
  4059ac:	bl	402490 <error@plt>
  4059b0:	ldr	x22, [x19, #40]
  4059b4:	mov	w8, #0xb8                  	// #184
  4059b8:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  4059bc:	madd	x9, x26, x8, x22
  4059c0:	ldr	w8, [x9, #40]!
  4059c4:	str	x9, [x19]
  4059c8:	and	w9, w8, #0xf000
  4059cc:	cmp	w9, #0xa, lsl #12
  4059d0:	b.ne	405bdc <__fxstatat@plt+0x318c>  // b.any
  4059d4:	ldr	w9, [x25, #1524]
  4059d8:	cbz	w9, 4059ec <__fxstatat@plt+0x2f9c>
  4059dc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4059e0:	ldrb	w9, [x9, #1522]
  4059e4:	cmp	w9, #0x1
  4059e8:	b.ne	405bdc <__fxstatat@plt+0x318c>  // b.any
  4059ec:	mov	w8, #0xb8                  	// #184
  4059f0:	madd	x22, x26, x8, x22
  4059f4:	ldr	x1, [x22, #72]
  4059f8:	mov	x0, x24
  4059fc:	bl	40b788 <__fxstatat@plt+0x8d38>
  405a00:	mov	x25, x0
  405a04:	str	x0, [x22, #8]!
  405a08:	cbnz	x0, 405a78 <__fxstatat@plt+0x3028>
  405a0c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  405a10:	add	x1, x1, #0x2da
  405a14:	mov	w2, #0x5                   	// #5
  405a18:	bl	402970 <dcgettext@plt>
  405a1c:	mov	x23, x0
  405a20:	bl	4029e0 <__errno_location@plt>
  405a24:	ldr	w25, [x0]
  405a28:	mov	w0, #0x4                   	// #4
  405a2c:	mov	x1, x24
  405a30:	bl	411fd4 <__fxstatat@plt+0xf584>
  405a34:	mov	x3, x0
  405a38:	mov	w0, wzr
  405a3c:	mov	w1, w25
  405a40:	mov	x2, x23
  405a44:	bl	402490 <error@plt>
  405a48:	ldr	w8, [x19, #36]
  405a4c:	tbz	w8, #0, 405a58 <__fxstatat@plt+0x3008>
  405a50:	mov	w8, #0x2                   	// #2
  405a54:	b	405a68 <__fxstatat@plt+0x3018>
  405a58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405a5c:	ldr	w8, [x8, #1488]
  405a60:	cbnz	w8, 405a70 <__fxstatat@plt+0x3020>
  405a64:	mov	w8, #0x1                   	// #1
  405a68:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  405a6c:	str	w8, [x9, #1488]
  405a70:	ldr	x25, [x22]
  405a74:	cbz	x25, 405b5c <__fxstatat@plt+0x310c>
  405a78:	ldrb	w8, [x25]
  405a7c:	cmp	w8, #0x2f
  405a80:	b.ne	405af0 <__fxstatat@plt+0x30a0>  // b.any
  405a84:	mov	x0, x25
  405a88:	bl	4130cc <__fxstatat@plt+0x1067c>
  405a8c:	mov	x23, x0
  405a90:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  405a94:	cbz	x23, 405b54 <__fxstatat@plt+0x3104>
  405a98:	ldr	x8, [x19, #16]
  405a9c:	ldr	w8, [x8]
  405aa0:	cbnz	w8, 405b7c <__fxstatat@plt+0x312c>
  405aa4:	ldr	x24, [x22]
  405aa8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405aac:	ldr	x4, [x8, #1904]
  405ab0:	add	x0, x19, #0x48
  405ab4:	mov	w1, #0x2                   	// #2
  405ab8:	mov	x3, #0xffffffffffffffff    	// #-1
  405abc:	mov	x2, x24
  405ac0:	bl	410e2c <__fxstatat@plt+0xe3dc>
  405ac4:	ldrb	w8, [x24]
  405ac8:	ldrb	w9, [x19, #72]
  405acc:	cmp	w8, w9
  405ad0:	b.ne	405b6c <__fxstatat@plt+0x311c>  // b.any
  405ad4:	mov	x25, x0
  405ad8:	mov	x0, x24
  405adc:	bl	402430 <strlen@plt>
  405ae0:	cmp	x0, x25
  405ae4:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  405ae8:	b.ne	405b70 <__fxstatat@plt+0x3120>  // b.any
  405aec:	b	405b7c <__fxstatat@plt+0x312c>
  405af0:	mov	x0, x24
  405af4:	bl	40c554 <__fxstatat@plt+0x9b04>
  405af8:	cbz	x0, 405b3c <__fxstatat@plt+0x30ec>
  405afc:	mov	x26, x0
  405b00:	mov	x0, x25
  405b04:	bl	402430 <strlen@plt>
  405b08:	add	x8, x26, x0
  405b0c:	add	x0, x8, #0x2
  405b10:	bl	412e10 <__fxstatat@plt+0x103c0>
  405b14:	add	x8, x26, x24
  405b18:	ldurb	w8, [x8, #-1]
  405b1c:	mov	x1, x24
  405b20:	mov	x23, x0
  405b24:	cmp	w8, #0x2f
  405b28:	cinc	x2, x26, ne  // ne = any
  405b2c:	bl	4027c0 <stpncpy@plt>
  405b30:	mov	x1, x25
  405b34:	bl	402580 <stpcpy@plt>
  405b38:	b	405b48 <__fxstatat@plt+0x30f8>
  405b3c:	mov	x0, x25
  405b40:	bl	4130cc <__fxstatat@plt+0x1067c>
  405b44:	mov	x23, x0
  405b48:	ldr	x26, [x19, #24]
  405b4c:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  405b50:	cbnz	x23, 405a98 <__fxstatat@plt+0x3048>
  405b54:	ldr	x22, [x19, #40]
  405b58:	b	405bcc <__fxstatat@plt+0x317c>
  405b5c:	ldr	x22, [x19, #40]
  405b60:	mov	x23, xzr
  405b64:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  405b68:	b	405bcc <__fxstatat@plt+0x317c>
  405b6c:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  405b70:	ldr	x9, [x19, #16]
  405b74:	mov	w8, #0xffffffff            	// #-1
  405b78:	str	w8, [x9]
  405b7c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405b80:	ldr	w8, [x8, #1536]
  405b84:	ldr	x22, [x19, #40]
  405b88:	cmp	w8, #0x1
  405b8c:	b.hi	405ba0 <__fxstatat@plt+0x3150>  // b.pmore
  405b90:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405b94:	ldrb	w8, [x8, #1522]
  405b98:	cmp	w8, #0x1
  405b9c:	b.ne	405bcc <__fxstatat@plt+0x317c>  // b.any
  405ba0:	add	x2, x19, #0x48
  405ba4:	mov	w0, wzr
  405ba8:	mov	x1, x23
  405bac:	bl	402a00 <__xstat@plt>
  405bb0:	cbnz	w0, 405bcc <__fxstatat@plt+0x317c>
  405bb4:	mov	w8, #0xb8                  	// #184
  405bb8:	madd	x8, x26, x8, x22
  405bbc:	mov	w9, #0x1                   	// #1
  405bc0:	strb	w9, [x8, #169]
  405bc4:	ldr	w9, [x19, #88]
  405bc8:	str	w9, [x8, #156]
  405bcc:	mov	x0, x23
  405bd0:	bl	402840 <free@plt>
  405bd4:	ldr	x8, [x19]
  405bd8:	ldr	w8, [x8]
  405bdc:	and	w8, w8, #0xf000
  405be0:	cmp	w8, #0xa, lsl #12
  405be4:	b.eq	405c10 <__fxstatat@plt+0x31c0>  // b.none
  405be8:	cmp	w8, #0x4, lsl #12
  405bec:	b.ne	405c18 <__fxstatat@plt+0x31c8>  // b.any
  405bf0:	ldr	w8, [x19, #36]
  405bf4:	tbz	w8, #0, 405c08 <__fxstatat@plt+0x31b8>
  405bf8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405bfc:	ldrb	w8, [x8, #1532]
  405c00:	cmp	w8, #0x1
  405c04:	b.ne	405c20 <__fxstatat@plt+0x31d0>  // b.any
  405c08:	mov	w8, #0x3                   	// #3
  405c0c:	b	405c24 <__fxstatat@plt+0x31d4>
  405c10:	mov	w8, #0x6                   	// #6
  405c14:	b	405c24 <__fxstatat@plt+0x31d4>
  405c18:	mov	w8, #0x5                   	// #5
  405c1c:	b	405c24 <__fxstatat@plt+0x31d4>
  405c20:	mov	w8, #0x9                   	// #9
  405c24:	ldr	x9, [x19, #8]
  405c28:	str	w8, [x9]
  405c2c:	mov	w8, #0xb8                  	// #184
  405c30:	madd	x8, x26, x8, x22
  405c34:	ldr	w9, [x25, #1524]
  405c38:	ldr	x24, [x8, #88]
  405c3c:	cbz	w9, 405c50 <__fxstatat@plt+0x3200>
  405c40:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405c44:	ldrb	w8, [x8, #1653]
  405c48:	cmp	w8, #0x1
  405c4c:	b.ne	405e04 <__fxstatat@plt+0x33b4>  // b.any
  405c50:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405c54:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  405c58:	ldr	w2, [x8, #2348]
  405c5c:	ldr	x4, [x9, #2360]
  405c60:	add	x1, x19, #0x48
  405c64:	mov	w3, #0x200                 	// #512
  405c68:	mov	x0, x24
  405c6c:	bl	40e13c <__fxstatat@plt+0xb6ec>
  405c70:	mov	w1, wzr
  405c74:	bl	40f288 <__fxstatat@plt+0xc838>
  405c78:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405c7c:	ldr	w9, [x8, #1424]
  405c80:	cmp	w9, w0
  405c84:	b.ge	405c8c <__fxstatat@plt+0x323c>  // b.tcont
  405c88:	str	w0, [x8, #1424]
  405c8c:	ldr	w8, [x25, #1524]
  405c90:	cbnz	w8, 405e04 <__fxstatat@plt+0x33b4>
  405c94:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405c98:	ldrb	w8, [x8, #2344]
  405c9c:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  405ca0:	tbnz	w8, #0, 405d10 <__fxstatat@plt+0x32c0>
  405ca4:	mov	w8, #0xb8                  	// #184
  405ca8:	madd	x8, x26, x8, x22
  405cac:	ldrb	w9, [x23, #2305]
  405cb0:	ldr	w22, [x8, #48]
  405cb4:	tbnz	w9, #0, 405cd4 <__fxstatat@plt+0x3284>
  405cb8:	mov	w0, w22
  405cbc:	bl	40ea24 <__fxstatat@plt+0xbfd4>
  405cc0:	cbz	x0, 405cd4 <__fxstatat@plt+0x3284>
  405cc4:	mov	w1, wzr
  405cc8:	bl	40f288 <__fxstatat@plt+0xc838>
  405ccc:	bic	w0, w0, w0, asr #31
  405cd0:	b	405cf8 <__fxstatat@plt+0x32a8>
  405cd4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5060>
  405cd8:	add	x3, x3, #0xca0
  405cdc:	add	x0, x19, #0x48
  405ce0:	mov	w1, #0x1                   	// #1
  405ce4:	mov	w2, #0x15                  	// #21
  405ce8:	mov	x4, x22
  405cec:	bl	402440 <__sprintf_chk@plt>
  405cf0:	add	x0, x19, #0x48
  405cf4:	bl	402430 <strlen@plt>
  405cf8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405cfc:	ldr	w9, [x8, #1432]
  405d00:	ldr	x22, [x19, #40]
  405d04:	cmp	w9, w0
  405d08:	b.ge	405d10 <__fxstatat@plt+0x32c0>  // b.tcont
  405d0c:	str	w0, [x8, #1432]
  405d10:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405d14:	ldrb	w8, [x8, #2368]
  405d18:	tbnz	w8, #0, 405d88 <__fxstatat@plt+0x3338>
  405d1c:	mov	w8, #0xb8                  	// #184
  405d20:	madd	x8, x26, x8, x22
  405d24:	ldrb	w9, [x23, #2305]
  405d28:	ldr	w22, [x8, #52]
  405d2c:	tbnz	w9, #0, 405d4c <__fxstatat@plt+0x32fc>
  405d30:	mov	w0, w22
  405d34:	bl	40ebc4 <__fxstatat@plt+0xc174>
  405d38:	cbz	x0, 405d4c <__fxstatat@plt+0x32fc>
  405d3c:	mov	w1, wzr
  405d40:	bl	40f288 <__fxstatat@plt+0xc838>
  405d44:	bic	w0, w0, w0, asr #31
  405d48:	b	405d70 <__fxstatat@plt+0x3320>
  405d4c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5060>
  405d50:	add	x3, x3, #0xca0
  405d54:	add	x0, x19, #0x48
  405d58:	mov	w1, #0x1                   	// #1
  405d5c:	mov	w2, #0x15                  	// #21
  405d60:	mov	x4, x22
  405d64:	bl	402440 <__sprintf_chk@plt>
  405d68:	add	x0, x19, #0x48
  405d6c:	bl	402430 <strlen@plt>
  405d70:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405d74:	ldr	w9, [x8, #1436]
  405d78:	ldr	x22, [x19, #40]
  405d7c:	cmp	w9, w0
  405d80:	b.ge	405d88 <__fxstatat@plt+0x3338>  // b.tcont
  405d84:	str	w0, [x8, #1436]
  405d88:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405d8c:	ldrb	w8, [x8, #2369]
  405d90:	cmp	w8, #0x1
  405d94:	b.ne	405e04 <__fxstatat@plt+0x33b4>  // b.any
  405d98:	mov	w8, #0xb8                  	// #184
  405d9c:	madd	x8, x26, x8, x22
  405da0:	ldrb	w9, [x23, #2305]
  405da4:	ldr	w22, [x8, #48]
  405da8:	tbnz	w9, #0, 405dc8 <__fxstatat@plt+0x3378>
  405dac:	mov	w0, w22
  405db0:	bl	40ea24 <__fxstatat@plt+0xbfd4>
  405db4:	cbz	x0, 405dc8 <__fxstatat@plt+0x3378>
  405db8:	mov	w1, wzr
  405dbc:	bl	40f288 <__fxstatat@plt+0xc838>
  405dc0:	bic	w0, w0, w0, asr #31
  405dc4:	b	405dec <__fxstatat@plt+0x339c>
  405dc8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5060>
  405dcc:	add	x3, x3, #0xca0
  405dd0:	add	x0, x19, #0x48
  405dd4:	mov	w1, #0x1                   	// #1
  405dd8:	mov	w2, #0x15                  	// #21
  405ddc:	mov	x4, x22
  405de0:	bl	402440 <__sprintf_chk@plt>
  405de4:	add	x0, x19, #0x48
  405de8:	bl	402430 <strlen@plt>
  405dec:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405df0:	ldr	w9, [x8, #1440]
  405df4:	ldr	x22, [x19, #40]
  405df8:	cmp	w9, w0
  405dfc:	b.ge	405e04 <__fxstatat@plt+0x33b4>  // b.tcont
  405e00:	str	w0, [x8, #1440]
  405e04:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  405e08:	ldrb	w8, [x8, #1652]
  405e0c:	cmp	w8, #0x1
  405e10:	b.ne	405e38 <__fxstatat@plt+0x33e8>  // b.any
  405e14:	mov	w8, #0xb8                  	// #184
  405e18:	madd	x8, x26, x8, x22
  405e1c:	ldr	x0, [x8, #160]
  405e20:	bl	402430 <strlen@plt>
  405e24:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405e28:	ldr	w9, [x8, #1444]
  405e2c:	cmp	w9, w0
  405e30:	b.ge	405e38 <__fxstatat@plt+0x33e8>  // b.tcont
  405e34:	str	w0, [x8, #1444]
  405e38:	ldr	w8, [x25, #1524]
  405e3c:	cbnz	w8, 40605c <__fxstatat@plt+0x360c>
  405e40:	mov	w8, #0xb8                  	// #184
  405e44:	madd	x8, x26, x8, x22
  405e48:	ldr	w0, [x8, #44]
  405e4c:	add	x1, x19, #0x30
  405e50:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  405e54:	bl	402430 <strlen@plt>
  405e58:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405e5c:	ldr	w9, [x8, #1428]
  405e60:	cmp	w9, w0
  405e64:	b.ge	405e6c <__fxstatat@plt+0x341c>  // b.tcont
  405e68:	str	w0, [x8, #1428]
  405e6c:	ldr	x8, [x19]
  405e70:	ldr	w8, [x8]
  405e74:	and	w8, w8, #0xf000
  405e78:	orr	w8, w8, #0x4000
  405e7c:	cmp	w8, #0x6, lsl #12
  405e80:	b.ne	405f24 <__fxstatat@plt+0x34d4>  // b.any
  405e84:	mov	w8, #0xb8                  	// #184
  405e88:	madd	x22, x26, x8, x22
  405e8c:	ldr	x8, [x22, #56]!
  405e90:	add	x1, x19, #0x48
  405e94:	mov	x23, x20
  405e98:	mov	x20, x21
  405e9c:	lsr	x9, x8, #32
  405ea0:	and	x0, x9, #0xfffff000
  405ea4:	bfxil	x0, x8, #8, #12
  405ea8:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  405eac:	bl	402430 <strlen@plt>
  405eb0:	adrp	x21, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405eb4:	ldr	w8, [x21, #1448]
  405eb8:	cmp	w8, w0
  405ebc:	b.ge	405ec4 <__fxstatat@plt+0x3474>  // b.tcont
  405ec0:	str	w0, [x21, #1448]
  405ec4:	ldr	x8, [x22]
  405ec8:	add	x1, x19, #0x48
  405ecc:	lsr	x9, x8, #12
  405ed0:	and	x0, x9, #0xffffff00
  405ed4:	bfxil	x0, x8, #0, #8
  405ed8:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  405edc:	bl	402430 <strlen@plt>
  405ee0:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405ee4:	ldr	w8, [x9, #1452]
  405ee8:	cmp	w8, w0
  405eec:	b.ge	405ef8 <__fxstatat@plt+0x34a8>  // b.tcont
  405ef0:	mov	w8, w0
  405ef4:	str	w0, [x9, #1452]
  405ef8:	ldr	w10, [x21, #1448]
  405efc:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405f00:	ldr	w11, [x9, #1456]
  405f04:	add	w8, w10, w8
  405f08:	add	w8, w8, #0x2
  405f0c:	cmp	w11, w8
  405f10:	b.ge	405f18 <__fxstatat@plt+0x34c8>  // b.tcont
  405f14:	str	w8, [x9, #1456]
  405f18:	mov	x21, x20
  405f1c:	mov	x20, x23
  405f20:	b	40605c <__fxstatat@plt+0x360c>
  405f24:	mov	w8, #0xb8                  	// #184
  405f28:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  405f2c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  405f30:	madd	x8, x26, x8, x22
  405f34:	ldr	w2, [x9, #2352]
  405f38:	ldr	x0, [x8, #72]
  405f3c:	ldr	x4, [x10, #1256]
  405f40:	add	x1, x19, #0x48
  405f44:	mov	w3, #0x1                   	// #1
  405f48:	bl	40e13c <__fxstatat@plt+0xb6ec>
  405f4c:	mov	w1, wzr
  405f50:	bl	40f288 <__fxstatat@plt+0xc838>
  405f54:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  405f58:	ldr	w9, [x8, #1456]
  405f5c:	cmp	w9, w0
  405f60:	b.ge	40605c <__fxstatat@plt+0x360c>  // b.tcont
  405f64:	str	w0, [x8, #1456]
  405f68:	b	40605c <__fxstatat@plt+0x360c>
  405f6c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  405f70:	add	x1, x1, #0xbfe
  405f74:	mov	w2, #0x2                   	// #2
  405f78:	bl	402640 <strncmp@plt>
  405f7c:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  405f80:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  405f84:	add	x9, x9, #0x468
  405f88:	ldr	x8, [x9]
  405f8c:	cbz	x8, 405fc8 <__fxstatat@plt+0x3578>
  405f90:	ldr	x0, [x9, #8]
  405f94:	cmp	x8, #0x2
  405f98:	b.eq	405fb4 <__fxstatat@plt+0x3564>  // b.none
  405f9c:	cmp	x8, #0x1
  405fa0:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  405fa4:	ldrb	w8, [x0]
  405fa8:	cmp	w8, #0x30
  405fac:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  405fb0:	b	405fc8 <__fxstatat@plt+0x3578>
  405fb4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  405fb8:	add	x1, x1, #0xbfe
  405fbc:	mov	w2, #0x2                   	// #2
  405fc0:	bl	402640 <strncmp@plt>
  405fc4:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  405fc8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  405fcc:	add	x9, x9, #0x478
  405fd0:	ldr	x8, [x9]
  405fd4:	cbz	x8, 406010 <__fxstatat@plt+0x35c0>
  405fd8:	ldr	x0, [x9, #8]
  405fdc:	cmp	x8, #0x2
  405fe0:	b.eq	405ffc <__fxstatat@plt+0x35ac>  // b.none
  405fe4:	cmp	x8, #0x1
  405fe8:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  405fec:	ldrb	w8, [x0]
  405ff0:	cmp	w8, #0x30
  405ff4:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  405ff8:	b	406010 <__fxstatat@plt+0x35c0>
  405ffc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  406000:	add	x1, x1, #0xbfe
  406004:	mov	w2, #0x2                   	// #2
  406008:	bl	402640 <strncmp@plt>
  40600c:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  406010:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406014:	add	x8, x8, #0x4b8
  406018:	ldr	x24, [x8]
  40601c:	cbz	x24, 40605c <__fxstatat@plt+0x360c>
  406020:	ldr	x0, [x8, #8]
  406024:	cmp	x24, #0x2
  406028:	b.eq	406044 <__fxstatat@plt+0x35f4>  // b.none
  40602c:	cmp	x24, #0x1
  406030:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  406034:	ldrb	w8, [x0]
  406038:	cmp	w8, #0x30
  40603c:	b.ne	405428 <__fxstatat@plt+0x29d8>  // b.any
  406040:	b	406058 <__fxstatat@plt+0x3608>
  406044:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  406048:	add	x1, x1, #0xbfe
  40604c:	mov	w2, #0x2                   	// #2
  406050:	bl	402640 <strncmp@plt>
  406054:	cbnz	w0, 405428 <__fxstatat@plt+0x29d8>
  406058:	mov	x24, xzr
  40605c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406060:	ldrb	w8, [x8, #2306]
  406064:	cmp	w8, #0x1
  406068:	b.ne	406090 <__fxstatat@plt+0x3640>  // b.any
  40606c:	ldr	x0, [x27]
  406070:	add	x1, x19, #0x48
  406074:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  406078:	bl	402430 <strlen@plt>
  40607c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406080:	ldr	w9, [x8, #1420]
  406084:	cmp	w9, w0
  406088:	b.ge	406090 <__fxstatat@plt+0x3640>  // b.tcont
  40608c:	str	w0, [x8, #1420]
  406090:	mov	x0, x20
  406094:	bl	4130cc <__fxstatat@plt+0x1067c>
  406098:	str	x0, [x28]
  40609c:	ldr	x8, [x21, #1872]
  4060a0:	add	x8, x8, #0x1
  4060a4:	str	x8, [x21, #1872]
  4060a8:	mov	x0, x24
  4060ac:	mov	sp, x29
  4060b0:	ldp	x20, x19, [sp, #80]
  4060b4:	ldp	x22, x21, [sp, #64]
  4060b8:	ldp	x24, x23, [sp, #48]
  4060bc:	ldp	x26, x25, [sp, #32]
  4060c0:	ldp	x28, x27, [sp, #16]
  4060c4:	ldp	x29, x30, [sp], #96
  4060c8:	ret
  4060cc:	bl	413124 <__fxstatat@plt+0x106d4>
  4060d0:	stp	x29, x30, [sp, #-48]!
  4060d4:	stp	x20, x19, [sp, #32]
  4060d8:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  4060dc:	str	x21, [sp, #16]
  4060e0:	adrp	x21, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4060e4:	ldr	x8, [x20, #1872]
  4060e8:	ldr	x9, [x21, #1488]
  4060ec:	adrp	x19, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4060f0:	mov	x29, sp
  4060f4:	add	x10, x8, x8, lsr #1
  4060f8:	cmp	x9, x10
  4060fc:	b.cs	40613c <__fxstatat@plt+0x36ec>  // b.hs, b.nlast
  406100:	ldr	x0, [x19, #1408]
  406104:	bl	402840 <free@plt>
  406108:	ldr	x8, [x20, #1872]
  40610c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  406110:	movk	x9, #0x5556
  406114:	movk	x9, #0x555, lsl #48
  406118:	cmp	x8, x9
  40611c:	b.cs	406328 <__fxstatat@plt+0x38d8>  // b.hs, b.nlast
  406120:	add	x8, x8, x8, lsl #1
  406124:	lsl	x0, x8, #3
  406128:	bl	412e10 <__fxstatat@plt+0x103c0>
  40612c:	ldr	x8, [x20, #1872]
  406130:	str	x0, [x19, #1408]
  406134:	add	x9, x8, x8, lsl #1
  406138:	str	x9, [x21, #1488]
  40613c:	cbz	x8, 4061e4 <__fxstatat@plt+0x3794>
  406140:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406144:	ldr	x9, [x9, #1864]
  406148:	ldr	x10, [x19, #1408]
  40614c:	cmp	x8, #0x4
  406150:	b.cs	40615c <__fxstatat@plt+0x370c>  // b.hs, b.nlast
  406154:	mov	x11, xzr
  406158:	b	4061c4 <__fxstatat@plt+0x3774>
  40615c:	adrp	x14, 415000 <_obstack_memory_used@@Base+0x1060>
  406160:	ldr	q1, [x14, #4048]
  406164:	mov	w14, #0x170                 	// #368
  406168:	and	x11, x8, #0xfffffffffffffffc
  40616c:	dup	v2.2d, x14
  406170:	mov	w14, #0x4                   	// #4
  406174:	add	x12, x10, #0x10
  406178:	mov	w13, #0xb8                  	// #184
  40617c:	dup	v0.2d, x9
  406180:	dup	v3.2d, x14
  406184:	mov	x14, x11
  406188:	fmov	x16, d1
  40618c:	mov	x15, v1.d[1]
  406190:	mul	x16, x16, x13
  406194:	mul	x15, x15, x13
  406198:	fmov	d4, x16
  40619c:	mov	v4.d[1], x15
  4061a0:	add	v4.2d, v0.2d, v4.2d
  4061a4:	add	v5.2d, v4.2d, v2.2d
  4061a8:	add	v1.2d, v1.2d, v3.2d
  4061ac:	subs	x14, x14, #0x4
  4061b0:	stp	q4, q5, [x12, #-16]
  4061b4:	add	x12, x12, #0x20
  4061b8:	b.ne	406188 <__fxstatat@plt+0x3738>  // b.any
  4061bc:	cmp	x8, x11
  4061c0:	b.eq	4061e4 <__fxstatat@plt+0x3794>  // b.none
  4061c4:	mov	w12, #0xb8                  	// #184
  4061c8:	sub	x8, x8, x11
  4061cc:	add	x10, x10, x11, lsl #3
  4061d0:	madd	x9, x11, x12, x9
  4061d4:	str	x9, [x10], #8
  4061d8:	subs	x8, x8, #0x1
  4061dc:	add	x9, x9, #0xb8
  4061e0:	b.ne	4061d4 <__fxstatat@plt+0x3784>  // b.any
  4061e4:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  4061e8:	ldr	w8, [x21, #1648]
  4061ec:	cmn	w8, #0x1
  4061f0:	b.eq	406318 <__fxstatat@plt+0x38c8>  // b.none
  4061f4:	adrp	x0, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4061f8:	add	x0, x0, #0x5d8
  4061fc:	bl	402470 <_setjmp@plt>
  406200:	cbz	w0, 406234 <__fxstatat@plt+0x37e4>
  406204:	ldr	w8, [x21, #1648]
  406208:	cmp	w8, #0x3
  40620c:	b.eq	40632c <__fxstatat@plt+0x38dc>  // b.none
  406210:	ldr	x1, [x20, #1872]
  406214:	cbz	x1, 4062ac <__fxstatat@plt+0x385c>
  406218:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40621c:	ldr	x11, [x9, #1864]
  406220:	ldr	x9, [x19, #1408]
  406224:	cmp	x1, #0x4
  406228:	b.cs	406244 <__fxstatat@plt+0x37f4>  // b.hs, b.nlast
  40622c:	mov	x10, xzr
  406230:	b	4062b4 <__fxstatat@plt+0x3864>
  406234:	ldr	x1, [x20, #1872]
  406238:	ldr	w8, [x21, #1648]
  40623c:	mov	x11, xzr
  406240:	b	4062d4 <__fxstatat@plt+0x3884>
  406244:	adrp	x14, 415000 <_obstack_memory_used@@Base+0x1060>
  406248:	ldr	q1, [x14, #4048]
  40624c:	mov	w14, #0x170                 	// #368
  406250:	and	x10, x1, #0xfffffffffffffffc
  406254:	dup	v2.2d, x14
  406258:	mov	w14, #0x4                   	// #4
  40625c:	add	x12, x9, #0x10
  406260:	mov	w13, #0xb8                  	// #184
  406264:	dup	v0.2d, x11
  406268:	dup	v3.2d, x14
  40626c:	mov	x14, x10
  406270:	fmov	x16, d1
  406274:	mov	x15, v1.d[1]
  406278:	mul	x16, x16, x13
  40627c:	mul	x15, x15, x13
  406280:	fmov	d4, x16
  406284:	mov	v4.d[1], x15
  406288:	add	v4.2d, v0.2d, v4.2d
  40628c:	add	v5.2d, v4.2d, v2.2d
  406290:	add	v1.2d, v1.2d, v3.2d
  406294:	subs	x14, x14, #0x4
  406298:	stp	q4, q5, [x12, #-16]
  40629c:	add	x12, x12, #0x20
  4062a0:	b.ne	406270 <__fxstatat@plt+0x3820>  // b.any
  4062a4:	cmp	x1, x10
  4062a8:	b.ne	4062b4 <__fxstatat@plt+0x3864>  // b.any
  4062ac:	mov	w11, #0x1                   	// #1
  4062b0:	b	4062d4 <__fxstatat@plt+0x3884>
  4062b4:	mov	w12, #0xb8                  	// #184
  4062b8:	madd	x12, x10, x12, x11
  4062bc:	mov	w11, #0x1                   	// #1
  4062c0:	str	x12, [x9, x10, lsl #3]
  4062c4:	add	x10, x10, #0x1
  4062c8:	cmp	x1, x10
  4062cc:	add	x12, x12, #0xb8
  4062d0:	b.ne	4062c0 <__fxstatat@plt+0x3870>  // b.any
  4062d4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4062d8:	ldr	w9, [x9, #2300]
  4062dc:	cmp	w8, #0x4
  4062e0:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  4062e4:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x18060>
  4062e8:	csel	w9, w9, wzr, eq  // eq = none
  4062ec:	ldrb	w10, [x10, #2304]
  4062f0:	add	w8, w9, w8
  4062f4:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x3060>
  4062f8:	ldrb	w12, [x12, #1521]
  4062fc:	add	x9, x9, #0xc58
  406300:	add	x8, x9, x8, lsl #6
  406304:	add	x8, x8, x11, lsl #5
  406308:	add	x8, x8, x10, lsl #4
  40630c:	ldr	x0, [x19, #1408]
  406310:	ldr	x2, [x8, x12, lsl #3]
  406314:	bl	40f450 <__fxstatat@plt+0xca00>
  406318:	ldp	x20, x19, [sp, #32]
  40631c:	ldr	x21, [sp, #16]
  406320:	ldp	x29, x30, [sp], #48
  406324:	ret
  406328:	bl	413124 <__fxstatat@plt+0x106d4>
  40632c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  406330:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  406334:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  406338:	add	x0, x0, #0x2f7
  40633c:	add	x1, x1, #0xf3b
  406340:	add	x3, x3, #0x311
  406344:	mov	w2, #0xeea                 	// #3818
  406348:	bl	4029d0 <__assert_fail@plt>
  40634c:	stp	x29, x30, [sp, #-96]!
  406350:	stp	x24, x23, [sp, #48]
  406354:	stp	x20, x19, [sp, #80]
  406358:	mov	w20, w1
  40635c:	mov	x19, x0
  406360:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  406364:	stp	x28, x27, [sp, #16]
  406368:	stp	x26, x25, [sp, #32]
  40636c:	stp	x22, x21, [sp, #64]
  406370:	mov	x29, sp
  406374:	cbz	x0, 4063ac <__fxstatat@plt+0x395c>
  406378:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40637c:	ldr	x8, [x8, #1544]
  406380:	cbz	x8, 4063ac <__fxstatat@plt+0x395c>
  406384:	mov	w0, #0x20                  	// #32
  406388:	bl	412e10 <__fxstatat@plt+0x103c0>
  40638c:	mov	x21, x0
  406390:	mov	x0, x19
  406394:	bl	4130cc <__fxstatat@plt+0x1067c>
  406398:	ldr	x8, [x24, #1496]
  40639c:	stp	xzr, x0, [x21]
  4063a0:	strb	wzr, [x21, #16]
  4063a4:	str	x21, [x24, #1496]
  4063a8:	str	x8, [x21, #24]
  4063ac:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x18060>
  4063b0:	ldr	x8, [x13, #1872]
  4063b4:	cbz	x8, 406560 <__fxstatat@plt+0x3b10>
  4063b8:	and	w26, w20, #0x1
  4063bc:	sub	x27, x8, #0x1
  4063c0:	adrp	x25, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4063c4:	mov	w28, #0x1                   	// #1
  4063c8:	b	4063d8 <__fxstatat@plt+0x3988>
  4063cc:	sub	x27, x27, #0x1
  4063d0:	cmn	x27, #0x1
  4063d4:	b.eq	406524 <__fxstatat@plt+0x3ad4>  // b.none
  4063d8:	ldr	x8, [x25, #1408]
  4063dc:	ldr	x23, [x8, x27, lsl #3]
  4063e0:	ldr	w8, [x23, #152]
  4063e4:	cmp	w8, #0x9
  4063e8:	ccmp	w8, #0x3, #0x4, ne  // ne = any
  4063ec:	b.ne	4063cc <__fxstatat@plt+0x397c>  // b.any
  4063f0:	ldr	x20, [x23]
  4063f4:	cbz	x19, 406434 <__fxstatat@plt+0x39e4>
  4063f8:	mov	x0, x20
  4063fc:	bl	40c644 <__fxstatat@plt+0x9bf4>
  406400:	ldrb	w8, [x0]
  406404:	cmp	w8, #0x2e
  406408:	b.ne	406428 <__fxstatat@plt+0x39d8>  // b.any
  40640c:	ldrb	w8, [x0, #1]
  406410:	cmp	w8, #0x2e
  406414:	cinc	x8, x28, eq  // eq = none
  406418:	ldrb	w8, [x0, x8]
  40641c:	cbz	w8, 4063cc <__fxstatat@plt+0x397c>
  406420:	cmp	w8, #0x2f
  406424:	b.eq	4063cc <__fxstatat@plt+0x397c>  // b.none
  406428:	ldrb	w8, [x20]
  40642c:	cmp	w8, #0x2f
  406430:	b.ne	40648c <__fxstatat@plt+0x3a3c>  // b.any
  406434:	ldr	x22, [x23, #8]
  406438:	mov	w0, #0x20                  	// #32
  40643c:	bl	412e10 <__fxstatat@plt+0x103c0>
  406440:	mov	x21, x0
  406444:	cbz	x22, 406464 <__fxstatat@plt+0x3a14>
  406448:	mov	x0, x22
  40644c:	bl	4130cc <__fxstatat@plt+0x1067c>
  406450:	str	x0, [x21, #8]
  406454:	cbz	x20, 406470 <__fxstatat@plt+0x3a20>
  406458:	mov	x0, x20
  40645c:	bl	4130cc <__fxstatat@plt+0x1067c>
  406460:	b	406474 <__fxstatat@plt+0x3a24>
  406464:	mov	x0, xzr
  406468:	str	x0, [x21, #8]
  40646c:	cbnz	x20, 406458 <__fxstatat@plt+0x3a08>
  406470:	mov	x0, xzr
  406474:	ldr	x8, [x24, #1496]
  406478:	str	x0, [x21]
  40647c:	strb	w26, [x21, #16]
  406480:	str	x21, [x24, #1496]
  406484:	str	x8, [x21, #24]
  406488:	b	4064fc <__fxstatat@plt+0x3aac>
  40648c:	mov	x0, x19
  406490:	mov	x1, x20
  406494:	mov	x2, xzr
  406498:	bl	40c97c <__fxstatat@plt+0x9f2c>
  40649c:	ldr	x22, [x23, #8]
  4064a0:	mov	x20, x0
  4064a4:	mov	w0, #0x20                  	// #32
  4064a8:	bl	412e10 <__fxstatat@plt+0x103c0>
  4064ac:	mov	x21, x0
  4064b0:	cbz	x22, 4064d0 <__fxstatat@plt+0x3a80>
  4064b4:	mov	x0, x22
  4064b8:	bl	4130cc <__fxstatat@plt+0x1067c>
  4064bc:	str	x0, [x21, #8]
  4064c0:	cbz	x20, 4064dc <__fxstatat@plt+0x3a8c>
  4064c4:	mov	x0, x20
  4064c8:	bl	4130cc <__fxstatat@plt+0x1067c>
  4064cc:	b	4064e0 <__fxstatat@plt+0x3a90>
  4064d0:	mov	x0, xzr
  4064d4:	str	x0, [x21, #8]
  4064d8:	cbnz	x20, 4064c4 <__fxstatat@plt+0x3a74>
  4064dc:	mov	x0, xzr
  4064e0:	ldr	x8, [x24, #1496]
  4064e4:	str	x0, [x21]
  4064e8:	mov	x0, x20
  4064ec:	strb	w26, [x21, #16]
  4064f0:	str	x8, [x21, #24]
  4064f4:	str	x21, [x24, #1496]
  4064f8:	bl	402840 <free@plt>
  4064fc:	ldr	w8, [x23, #152]
  406500:	cmp	w8, #0x9
  406504:	b.ne	4063cc <__fxstatat@plt+0x397c>  // b.any
  406508:	ldr	x0, [x23]
  40650c:	bl	402840 <free@plt>
  406510:	ldr	x0, [x23, #8]
  406514:	bl	402840 <free@plt>
  406518:	ldr	x0, [x23, #16]
  40651c:	bl	402840 <free@plt>
  406520:	b	4063cc <__fxstatat@plt+0x397c>
  406524:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x18060>
  406528:	ldr	x8, [x13, #1872]
  40652c:	cbz	x8, 406560 <__fxstatat@plt+0x3b10>
  406530:	ldr	x11, [x25, #1408]
  406534:	mov	x10, xzr
  406538:	mov	x9, xzr
  40653c:	ldr	x12, [x11, x10, lsl #3]
  406540:	add	x10, x10, #0x1
  406544:	str	x12, [x11, x9, lsl #3]
  406548:	ldr	w12, [x12, #152]
  40654c:	cmp	w12, #0x9
  406550:	cinc	x9, x9, ne  // ne = any
  406554:	cmp	x10, x8
  406558:	b.cc	40653c <__fxstatat@plt+0x3aec>  // b.lo, b.ul, b.last
  40655c:	b	406564 <__fxstatat@plt+0x3b14>
  406560:	mov	x9, xzr
  406564:	ldp	x20, x19, [sp, #80]
  406568:	ldp	x22, x21, [sp, #64]
  40656c:	ldp	x24, x23, [sp, #48]
  406570:	ldp	x26, x25, [sp, #32]
  406574:	ldp	x28, x27, [sp, #16]
  406578:	str	x9, [x13, #1872]
  40657c:	ldp	x29, x30, [sp], #96
  406580:	ret
  406584:	stp	x29, x30, [sp, #-96]!
  406588:	stp	x28, x27, [sp, #16]
  40658c:	stp	x26, x25, [sp, #32]
  406590:	stp	x24, x23, [sp, #48]
  406594:	stp	x22, x21, [sp, #64]
  406598:	stp	x20, x19, [sp, #80]
  40659c:	mov	x29, sp
  4065a0:	sub	sp, sp, #0x1, lsl #12
  4065a4:	sub	sp, sp, #0x2e0
  4065a8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4065ac:	ldr	w8, [x8, #1524]
  4065b0:	cmp	w8, #0x4
  4065b4:	b.hi	407400 <__fxstatat@plt+0x49b0>  // b.pmore
  4065b8:	adrp	x9, 416000 <_obstack_memory_used@@Base+0x2060>
  4065bc:	add	x9, x9, #0x21c
  4065c0:	adr	x10, 4065d0 <__fxstatat@plt+0x3b80>
  4065c4:	ldrh	w11, [x9, x8, lsl #1]
  4065c8:	add	x10, x10, x11, lsl #2
  4065cc:	br	x10
  4065d0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4065d4:	ldr	x8, [x8, #1872]
  4065d8:	cbz	x8, 407400 <__fxstatat@plt+0x49b0>
  4065dc:	add	x8, sp, #0xea0
  4065e0:	mov	x22, xzr
  4065e4:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  4065e8:	adrp	x20, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4065ec:	adrp	x27, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4065f0:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  4065f4:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  4065f8:	orr	x8, x8, #0x1
  4065fc:	str	x8, [sp, #8]
  406600:	ldrb	w8, [x25, #1520]
  406604:	cbz	w8, 406678 <__fxstatat@plt+0x3c28>
  406608:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40660c:	add	x8, x8, #0x3a8
  406610:	ldr	x8, [x8]
  406614:	cbz	x8, 406678 <__fxstatat@plt+0x3c28>
  406618:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40661c:	add	x9, x9, #0x3a8
  406620:	ldr	x0, [x9, #8]
  406624:	cmp	x8, #0x2
  406628:	b.eq	406644 <__fxstatat@plt+0x3bf4>  // b.none
  40662c:	cmp	x8, #0x1
  406630:	b.ne	406658 <__fxstatat@plt+0x3c08>  // b.any
  406634:	ldrb	w8, [x0]
  406638:	cmp	w8, #0x30
  40663c:	b.ne	406658 <__fxstatat@plt+0x3c08>  // b.any
  406640:	b	406678 <__fxstatat@plt+0x3c28>
  406644:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  406648:	mov	w2, #0x2                   	// #2
  40664c:	add	x1, x1, #0xbfe
  406650:	bl	402640 <strncmp@plt>
  406654:	cbz	w0, 406678 <__fxstatat@plt+0x3c28>
  406658:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  40665c:	add	x21, x21, #0x368
  406660:	mov	x0, x21
  406664:	bl	407a6c <__fxstatat@plt+0x501c>
  406668:	add	x0, x21, #0x40
  40666c:	bl	407a6c <__fxstatat@plt+0x501c>
  406670:	add	x0, x21, #0x10
  406674:	bl	407a6c <__fxstatat@plt+0x501c>
  406678:	ldr	x8, [x20, #1408]
  40667c:	ldr	x28, [x8, x22, lsl #3]
  406680:	ldrb	w8, [x28, #168]
  406684:	cbz	w8, 4066a0 <__fxstatat@plt+0x3c50>
  406688:	add	x0, x28, #0x18
  40668c:	add	x1, sp, #0xea0
  406690:	bl	40c974 <__fxstatat@plt+0x9f24>
  406694:	ldrb	w8, [x27, #1416]
  406698:	cbnz	w8, 4066d0 <__fxstatat@plt+0x3c80>
  40669c:	b	4066f0 <__fxstatat@plt+0x3ca0>
  4066a0:	ldr	w8, [x28, #152]
  4066a4:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  4066a8:	add	x9, x9, #0x327
  4066ac:	ldrb	w8, [x9, x8]
  4066b0:	ldr	x9, [sp, #8]
  4066b4:	strb	w8, [sp, #3744]
  4066b8:	mov	x8, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  4066bc:	strh	w8, [x9, #8]
  4066c0:	str	x8, [x9]
  4066c4:	strb	wzr, [sp, #3755]
  4066c8:	ldrb	w8, [x27, #1416]
  4066cc:	cbz	w8, 4066f0 <__fxstatat@plt+0x3ca0>
  4066d0:	ldr	w8, [x28, #172]
  4066d4:	cmp	w8, #0x1
  4066d8:	b.eq	4066ec <__fxstatat@plt+0x3c9c>  // b.none
  4066dc:	cmp	w8, #0x2
  4066e0:	b.ne	4066f4 <__fxstatat@plt+0x3ca4>  // b.any
  4066e4:	mov	w8, #0x2b                  	// #43
  4066e8:	b	4066f0 <__fxstatat@plt+0x3ca0>
  4066ec:	mov	w8, #0x2e                  	// #46
  4066f0:	strb	w8, [sp, #3754]
  4066f4:	ldr	w8, [x24, #2300]
  4066f8:	cbz	w8, 40671c <__fxstatat@plt+0x3ccc>
  4066fc:	cmp	w8, #0x2
  406700:	b.eq	406714 <__fxstatat@plt+0x3cc4>  // b.none
  406704:	cmp	w8, #0x1
  406708:	b.ne	40744c <__fxstatat@plt+0x49fc>  // b.any
  40670c:	ldp	x9, x8, [x28, #128]
  406710:	b	406720 <__fxstatat@plt+0x3cd0>
  406714:	ldp	x9, x8, [x28, #96]
  406718:	b	406720 <__fxstatat@plt+0x3cd0>
  40671c:	ldp	x9, x8, [x28, #112]
  406720:	stp	x9, x8, [sp, #80]
  406724:	ldrb	w9, [x19, #2306]
  406728:	cmp	w9, #0x1
  40672c:	b.ne	406758 <__fxstatat@plt+0x3d08>  // b.any
  406730:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406734:	ldrb	w8, [x28, #168]
  406738:	ldr	w23, [x9, #1420]
  40673c:	cbz	w8, 406760 <__fxstatat@plt+0x3d10>
  406740:	ldr	x0, [x28, #32]
  406744:	cbz	x0, 406760 <__fxstatat@plt+0x3d10>
  406748:	add	x1, sp, #0xeac
  40674c:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  406750:	mov	x5, x0
  406754:	b	406768 <__fxstatat@plt+0x3d18>
  406758:	add	x26, sp, #0x64
  40675c:	b	406794 <__fxstatat@plt+0x3d44>
  406760:	adrp	x5, 41a000 <_obstack_memory_used@@Base+0x6060>
  406764:	add	x5, x5, #0x15e
  406768:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40676c:	add	x0, sp, #0x64
  406770:	mov	w1, #0x1                   	// #1
  406774:	mov	w2, #0xe3b                 	// #3643
  406778:	add	x3, x3, #0x33f
  40677c:	mov	w4, w23
  406780:	bl	402440 <__sprintf_chk@plt>
  406784:	add	x0, sp, #0x64
  406788:	bl	402430 <strlen@plt>
  40678c:	add	x8, sp, #0x64
  406790:	add	x26, x8, x0
  406794:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406798:	ldrb	w8, [x8, #1653]
  40679c:	cmp	w8, #0x1
  4067a0:	b.ne	406828 <__fxstatat@plt+0x3dd8>  // b.any
  4067a4:	ldrb	w8, [x28, #168]
  4067a8:	cbz	w8, 4067d4 <__fxstatat@plt+0x3d84>
  4067ac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4067b0:	ldr	w2, [x8, #2348]
  4067b4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4067b8:	ldr	x0, [x28, #88]
  4067bc:	ldr	x4, [x8, #2360]
  4067c0:	add	x1, sp, #0xeac
  4067c4:	mov	w3, #0x200                 	// #512
  4067c8:	bl	40e13c <__fxstatat@plt+0xb6ec>
  4067cc:	mov	x23, x0
  4067d0:	b	4067dc <__fxstatat@plt+0x3d8c>
  4067d4:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x6060>
  4067d8:	add	x23, x23, #0x15e
  4067dc:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4067e0:	ldr	w21, [x8, #1424]
  4067e4:	mov	x0, x23
  4067e8:	mov	w1, wzr
  4067ec:	bl	40f288 <__fxstatat@plt+0xc838>
  4067f0:	sub	w8, w21, w0
  4067f4:	subs	w21, w8, #0x1
  4067f8:	b.lt	406814 <__fxstatat@plt+0x3dc4>  // b.tstop
  4067fc:	add	x2, x21, #0x1
  406800:	mov	w1, #0x20                  	// #32
  406804:	mov	x0, x26
  406808:	bl	402680 <memset@plt>
  40680c:	add	x8, x26, x21
  406810:	add	x26, x8, #0x1
  406814:	ldrb	w8, [x23], #1
  406818:	strb	w8, [x26], #1
  40681c:	cbnz	w8, 406814 <__fxstatat@plt+0x3dc4>
  406820:	mov	w8, #0x20                  	// #32
  406824:	sturb	w8, [x26, #-1]
  406828:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40682c:	ldrb	w8, [x28, #168]
  406830:	ldr	w23, [x9, #1428]
  406834:	cbz	w8, 40684c <__fxstatat@plt+0x3dfc>
  406838:	ldr	w0, [x28, #44]
  40683c:	add	x1, sp, #0xeac
  406840:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  406844:	mov	x6, x0
  406848:	b	406854 <__fxstatat@plt+0x3e04>
  40684c:	adrp	x6, 41a000 <_obstack_memory_used@@Base+0x6060>
  406850:	add	x6, x6, #0x15e
  406854:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  406858:	add	x4, sp, #0xea0
  40685c:	mov	w1, #0x1                   	// #1
  406860:	mov	x2, #0xffffffffffffffff    	// #-1
  406864:	mov	x0, x26
  406868:	add	x3, x3, #0x332
  40686c:	mov	w5, w23
  406870:	bl	402440 <__sprintf_chk@plt>
  406874:	mov	x0, x26
  406878:	bl	402430 <strlen@plt>
  40687c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406880:	ldrb	w8, [x8, #1661]
  406884:	mov	x23, x0
  406888:	cmp	w8, #0x1
  40688c:	b.ne	4068b4 <__fxstatat@plt+0x3e64>  // b.any
  406890:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406894:	ldr	x1, [x8, #1456]
  406898:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40689c:	add	x0, x0, #0x25c
  4068a0:	bl	402980 <fputs_unlocked@plt>
  4068a4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4068a8:	ldr	x8, [x9, #1880]
  4068ac:	add	x8, x8, #0x2
  4068b0:	str	x8, [x9, #1880]
  4068b4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4068b8:	ldrb	w8, [x8, #2344]
  4068bc:	add	x26, x26, x23
  4068c0:	cmp	w8, #0x1
  4068c4:	b.ne	4068f4 <__fxstatat@plt+0x3ea4>  // b.any
  4068c8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4068cc:	ldrb	w8, [x8, #2368]
  4068d0:	cmp	w8, #0x1
  4068d4:	b.ne	4068f4 <__fxstatat@plt+0x3ea4>  // b.any
  4068d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4068dc:	ldrb	w8, [x8, #2369]
  4068e0:	tbnz	w8, #0, 4068f4 <__fxstatat@plt+0x3ea4>
  4068e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4068e8:	ldrb	w8, [x8, #1652]
  4068ec:	cmp	w8, #0x1
  4068f0:	b.ne	406a44 <__fxstatat@plt+0x3ff4>  // b.any
  4068f4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4068f8:	ldr	x1, [x8, #1456]
  4068fc:	add	x0, sp, #0x64
  406900:	bl	402980 <fputs_unlocked@plt>
  406904:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  406908:	ldr	x8, [x11, #1880]
  40690c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406910:	ldrb	w9, [x9, #2344]
  406914:	add	x10, sp, #0x64
  406918:	sub	x10, x26, x10
  40691c:	add	x8, x10, x8
  406920:	str	x8, [x11, #1880]
  406924:	tbnz	w9, #0, 406970 <__fxstatat@plt+0x3f20>
  406928:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40692c:	ldr	w23, [x28, #48]
  406930:	ldrb	w8, [x28, #168]
  406934:	ldr	w26, [x9, #1432]
  406938:	cbz	w8, 406950 <__fxstatat@plt+0x3f00>
  40693c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406940:	ldrb	w8, [x8, #2305]
  406944:	tbz	w8, #0, 40695c <__fxstatat@plt+0x3f0c>
  406948:	mov	x0, xzr
  40694c:	b	406964 <__fxstatat@plt+0x3f14>
  406950:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  406954:	add	x0, x0, #0x15e
  406958:	b	406964 <__fxstatat@plt+0x3f14>
  40695c:	mov	w0, w23
  406960:	bl	40ea24 <__fxstatat@plt+0xbfd4>
  406964:	mov	x1, x23
  406968:	mov	w2, w26
  40696c:	bl	40b6b0 <__fxstatat@plt+0x8c60>
  406970:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406974:	ldrb	w8, [x8, #2368]
  406978:	tbnz	w8, #0, 4069c4 <__fxstatat@plt+0x3f74>
  40697c:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406980:	ldr	w23, [x28, #52]
  406984:	ldrb	w8, [x28, #168]
  406988:	ldr	w26, [x9, #1436]
  40698c:	cbz	w8, 4069a4 <__fxstatat@plt+0x3f54>
  406990:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406994:	ldrb	w8, [x8, #2305]
  406998:	tbz	w8, #0, 4069b0 <__fxstatat@plt+0x3f60>
  40699c:	mov	x0, xzr
  4069a0:	b	4069b8 <__fxstatat@plt+0x3f68>
  4069a4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  4069a8:	add	x0, x0, #0x15e
  4069ac:	b	4069b8 <__fxstatat@plt+0x3f68>
  4069b0:	mov	w0, w23
  4069b4:	bl	40ebc4 <__fxstatat@plt+0xc174>
  4069b8:	mov	x1, x23
  4069bc:	mov	w2, w26
  4069c0:	bl	40b6b0 <__fxstatat@plt+0x8c60>
  4069c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4069c8:	ldrb	w8, [x8, #2369]
  4069cc:	cmp	w8, #0x1
  4069d0:	b.ne	406a1c <__fxstatat@plt+0x3fcc>  // b.any
  4069d4:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4069d8:	ldr	w23, [x28, #48]
  4069dc:	ldrb	w8, [x28, #168]
  4069e0:	ldr	w26, [x9, #1440]
  4069e4:	cbz	w8, 4069fc <__fxstatat@plt+0x3fac>
  4069e8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4069ec:	ldrb	w8, [x8, #2305]
  4069f0:	tbz	w8, #0, 406a08 <__fxstatat@plt+0x3fb8>
  4069f4:	mov	x0, xzr
  4069f8:	b	406a10 <__fxstatat@plt+0x3fc0>
  4069fc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  406a00:	add	x0, x0, #0x15e
  406a04:	b	406a10 <__fxstatat@plt+0x3fc0>
  406a08:	mov	w0, w23
  406a0c:	bl	40ea24 <__fxstatat@plt+0xbfd4>
  406a10:	mov	x1, x23
  406a14:	mov	w2, w26
  406a18:	bl	40b6b0 <__fxstatat@plt+0x8c60>
  406a1c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406a20:	ldrb	w8, [x8, #1652]
  406a24:	cmp	w8, #0x1
  406a28:	b.ne	406b38 <__fxstatat@plt+0x40e8>  // b.any
  406a2c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406a30:	ldr	x0, [x28, #160]
  406a34:	ldr	w2, [x8, #1444]
  406a38:	mov	x1, xzr
  406a3c:	add	x26, sp, #0x64
  406a40:	bl	40b6b0 <__fxstatat@plt+0x8c60>
  406a44:	ldrb	w8, [x28, #168]
  406a48:	cbz	w8, 406b44 <__fxstatat@plt+0x40f4>
  406a4c:	ldr	w8, [x28, #40]
  406a50:	and	w8, w8, #0xf000
  406a54:	orr	w8, w8, #0x4000
  406a58:	cmp	w8, #0x6, lsl #12
  406a5c:	b.ne	406b50 <__fxstatat@plt+0x4100>  // b.any
  406a60:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406a64:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406a68:	ldr	w8, [x8, #1456]
  406a6c:	ldr	w9, [x9, #1448]
  406a70:	adrp	x21, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406a74:	ldr	w11, [x21, #1452]
  406a78:	ldr	x10, [x28, #56]
  406a7c:	sub	w8, w8, w9
  406a80:	add	x1, sp, #0xeac
  406a84:	sub	w8, w8, w11
  406a88:	lsr	x12, x10, #32
  406a8c:	sub	w8, w8, #0x2
  406a90:	and	x0, x12, #0xfffff000
  406a94:	bic	w8, w8, w8, asr #31
  406a98:	add	w8, w8, w9
  406a9c:	bfxil	x0, x10, #8, #12
  406aa0:	str	w8, [sp, #16]
  406aa4:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  406aa8:	ldr	x8, [x28, #56]
  406aac:	ldr	w21, [x21, #1452]
  406ab0:	mov	x23, x22
  406ab4:	mov	x22, x19
  406ab8:	lsr	x9, x8, #12
  406abc:	mov	x19, x24
  406ac0:	mov	x24, x27
  406ac4:	mov	x27, x20
  406ac8:	mov	x20, x25
  406acc:	mov	x25, x0
  406ad0:	and	x0, x9, #0xffffff00
  406ad4:	bfxil	x0, x8, #0, #8
  406ad8:	sub	x1, x29, #0x48
  406adc:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  406ae0:	ldr	w4, [sp, #16]
  406ae4:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  406ae8:	mov	x7, x0
  406aec:	mov	w1, #0x1                   	// #1
  406af0:	mov	x2, #0xffffffffffffffff    	// #-1
  406af4:	mov	x0, x26
  406af8:	add	x3, x3, #0x33a
  406afc:	mov	x5, x25
  406b00:	mov	w6, w21
  406b04:	mov	x25, x20
  406b08:	mov	x20, x27
  406b0c:	mov	x27, x24
  406b10:	mov	x24, x19
  406b14:	mov	x19, x22
  406b18:	mov	x22, x23
  406b1c:	bl	402440 <__sprintf_chk@plt>
  406b20:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406b24:	ldrsw	x8, [x8, #1456]
  406b28:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406b2c:	add	x8, x8, x26
  406b30:	add	x26, x8, #0x1
  406b34:	b	406bc4 <__fxstatat@plt+0x4174>
  406b38:	add	x26, sp, #0x64
  406b3c:	ldrb	w8, [x28, #168]
  406b40:	cbnz	w8, 406a4c <__fxstatat@plt+0x3ffc>
  406b44:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x6060>
  406b48:	add	x23, x23, #0x15e
  406b4c:	b	406b74 <__fxstatat@plt+0x4124>
  406b50:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406b54:	ldr	w2, [x8, #2352]
  406b58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406b5c:	ldr	x0, [x28, #72]
  406b60:	ldr	x4, [x8, #1256]
  406b64:	add	x1, sp, #0xeac
  406b68:	mov	w3, #0x1                   	// #1
  406b6c:	bl	40e13c <__fxstatat@plt+0xb6ec>
  406b70:	mov	x23, x0
  406b74:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406b78:	ldr	w21, [x8, #1456]
  406b7c:	mov	x0, x23
  406b80:	mov	w1, wzr
  406b84:	bl	40f288 <__fxstatat@plt+0xc838>
  406b88:	sub	w8, w21, w0
  406b8c:	subs	w21, w8, #0x1
  406b90:	b.lt	406bac <__fxstatat@plt+0x415c>  // b.tstop
  406b94:	add	x2, x21, #0x1
  406b98:	mov	w1, #0x20                  	// #32
  406b9c:	mov	x0, x26
  406ba0:	bl	402680 <memset@plt>
  406ba4:	add	x8, x26, x21
  406ba8:	add	x26, x8, #0x1
  406bac:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406bb0:	ldrb	w8, [x23], #1
  406bb4:	strb	w8, [x26], #1
  406bb8:	cbnz	w8, 406bb0 <__fxstatat@plt+0x4160>
  406bbc:	mov	w8, #0x20                  	// #32
  406bc0:	sturb	w8, [x26, #-1]
  406bc4:	mov	w8, #0x1                   	// #1
  406bc8:	strb	w8, [x26]
  406bcc:	ldrb	w8, [x28, #168]
  406bd0:	cbz	w8, 406ce4 <__fxstatat@plt+0x4294>
  406bd4:	ldr	x0, [x9, #1640]
  406bd8:	add	x1, sp, #0x50
  406bdc:	add	x2, sp, #0x18
  406be0:	bl	4140d4 <_obstack_memory_used@@Base+0x134>
  406be4:	cbz	x0, 406cd8 <__fxstatat@plt+0x4288>
  406be8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406bec:	add	x8, x8, #0x5e0
  406bf0:	ldr	x8, [x8]
  406bf4:	ldr	x10, [sp, #80]
  406bf8:	cmp	x8, x10
  406bfc:	b.ge	406c1c <__fxstatat@plt+0x41cc>  // b.tcont
  406c00:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  406c04:	add	x21, x21, #0x5e0
  406c08:	mov	x0, x21
  406c0c:	bl	40cea0 <__fxstatat@plt+0xa450>
  406c10:	ldp	x8, x9, [x21]
  406c14:	ldp	x10, x5, [sp, #80]
  406c18:	b	406c38 <__fxstatat@plt+0x41e8>
  406c1c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406c20:	add	x9, x9, #0x5e0
  406c24:	ldr	x9, [x9, #8]
  406c28:	ldr	x5, [sp, #88]
  406c2c:	b.gt	406c38 <__fxstatat@plt+0x41e8>
  406c30:	cmp	w9, w5
  406c34:	b.mi	406c00 <__fxstatat@plt+0x41b0>  // b.first
  406c38:	mov	x11, #0xffffffffffff3d54    	// #-49836
  406c3c:	movk	x11, #0xff0f, lsl #16
  406c40:	add	x11, x8, x11
  406c44:	cmp	x11, x10
  406c48:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  406c4c:	b.ge	406c60 <__fxstatat@plt+0x4210>  // b.tcont
  406c50:	cmp	x10, x8
  406c54:	b.ge	406c74 <__fxstatat@plt+0x4224>  // b.tcont
  406c58:	mov	w8, #0xffffffff            	// #-1
  406c5c:	b	406c84 <__fxstatat@plt+0x4234>
  406c60:	b.gt	406c6c <__fxstatat@plt+0x421c>
  406c64:	cmp	w9, w5
  406c68:	b.mi	406c50 <__fxstatat@plt+0x4200>  // b.first
  406c6c:	mov	w8, wzr
  406c70:	b	406c88 <__fxstatat@plt+0x4238>
  406c74:	b.le	406c80 <__fxstatat@plt+0x4230>
  406c78:	mov	w8, #0x1                   	// #1
  406c7c:	b	406c84 <__fxstatat@plt+0x4234>
  406c80:	sub	w8, w5, w9
  406c84:	lsr	w8, w8, #31
  406c88:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406c8c:	ldrb	w9, [x9, #1376]
  406c90:	ldr	x4, [x11, #1640]
  406c94:	cmp	w9, #0x1
  406c98:	b.ne	406cb8 <__fxstatat@plt+0x4268>  // b.any
  406c9c:	ldrsw	x9, [sp, #40]
  406ca0:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  406ca4:	add	x10, x10, #0x960
  406ca8:	mov	w11, #0x600                 	// #1536
  406cac:	madd	x8, x8, x11, x10
  406cb0:	add	x2, x8, x9, lsl #7
  406cb4:	b	406cc4 <__fxstatat@plt+0x4274>
  406cb8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406cbc:	add	x9, x9, #0x4f0
  406cc0:	ldr	x2, [x9, x8, lsl #3]
  406cc4:	add	x3, sp, #0x18
  406cc8:	mov	w1, #0x3e9                 	// #1001
  406ccc:	mov	x0, x26
  406cd0:	bl	40f69c <__fxstatat@plt+0xcc4c>
  406cd4:	cbnz	x0, 406d94 <__fxstatat@plt+0x4344>
  406cd8:	ldrb	w8, [x26]
  406cdc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406ce0:	cbz	w8, 406d90 <__fxstatat@plt+0x4340>
  406ce4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406ce8:	ldr	w23, [x8, #1284]
  406cec:	tbnz	w23, #31, 406d0c <__fxstatat@plt+0x42bc>
  406cf0:	ldrb	w8, [x28, #168]
  406cf4:	cbz	w8, 406dc4 <__fxstatat@plt+0x4374>
  406cf8:	ldr	x0, [sp, #80]
  406cfc:	add	x1, sp, #0xeac
  406d00:	bl	40ed64 <__fxstatat@plt+0xc314>
  406d04:	mov	x5, x0
  406d08:	b	406dcc <__fxstatat@plt+0x437c>
  406d0c:	ldr	x0, [x9, #1640]
  406d10:	sub	x1, x29, #0x10
  406d14:	sub	x2, x29, #0x48
  406d18:	mov	x21, x9
  406d1c:	stur	xzr, [x29, #-16]
  406d20:	bl	4140d4 <_obstack_memory_used@@Base+0x134>
  406d24:	cbz	x0, 406da4 <__fxstatat@plt+0x4354>
  406d28:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406d2c:	ldursw	x8, [x29, #-56]
  406d30:	ldrb	w9, [x9, #1376]
  406d34:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  406d38:	ldr	x10, [x10, #1264]
  406d3c:	ldr	x4, [x21, #1640]
  406d40:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x18060>
  406d44:	add	x11, x11, #0x960
  406d48:	add	x8, x11, x8, lsl #7
  406d4c:	cmp	w9, #0x0
  406d50:	csel	x2, x8, x10, ne  // ne = any
  406d54:	add	x0, sp, #0xeac
  406d58:	sub	x3, x29, #0x48
  406d5c:	mov	w1, #0x3e9                 	// #1001
  406d60:	mov	w5, wzr
  406d64:	bl	40f69c <__fxstatat@plt+0xcc4c>
  406d68:	cbz	x0, 406da4 <__fxstatat@plt+0x4354>
  406d6c:	mov	x1, x0
  406d70:	add	x0, sp, #0xeac
  406d74:	mov	w2, wzr
  406d78:	bl	40f2b8 <__fxstatat@plt+0xc868>
  406d7c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406d80:	mov	w23, w0
  406d84:	str	w0, [x8, #1284]
  406d88:	tbz	w23, #31, 406cf0 <__fxstatat@plt+0x42a0>
  406d8c:	b	406db0 <__fxstatat@plt+0x4360>
  406d90:	mov	x0, xzr
  406d94:	add	x21, x26, x0
  406d98:	mov	w8, #0x20                  	// #32
  406d9c:	strh	w8, [x21], #1
  406da0:	b	406df4 <__fxstatat@plt+0x43a4>
  406da4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406da8:	ldr	w23, [x8, #1284]
  406dac:	tbz	w23, #31, 406cf0 <__fxstatat@plt+0x42a0>
  406db0:	mov	w23, wzr
  406db4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406db8:	str	wzr, [x8, #1284]
  406dbc:	ldrb	w8, [x28, #168]
  406dc0:	cbnz	w8, 406cf8 <__fxstatat@plt+0x42a8>
  406dc4:	adrp	x5, 41a000 <_obstack_memory_used@@Base+0x6060>
  406dc8:	add	x5, x5, #0x15e
  406dcc:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  406dd0:	mov	w1, #0x1                   	// #1
  406dd4:	mov	x2, #0xffffffffffffffff    	// #-1
  406dd8:	mov	x0, x26
  406ddc:	add	x3, x3, #0x33f
  406de0:	mov	w4, w23
  406de4:	bl	402440 <__sprintf_chk@plt>
  406de8:	mov	x0, x26
  406dec:	bl	402430 <strlen@plt>
  406df0:	add	x21, x26, x0
  406df4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406df8:	ldr	x1, [x8, #1456]
  406dfc:	add	x0, sp, #0x64
  406e00:	bl	402980 <fputs_unlocked@plt>
  406e04:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  406e08:	ldr	x8, [x10, #1880]
  406e0c:	add	x9, sp, #0x64
  406e10:	sub	x23, x21, x9
  406e14:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x18060>
  406e18:	add	x8, x8, x23
  406e1c:	mov	x0, x28
  406e20:	mov	w1, wzr
  406e24:	add	x2, x2, #0x680
  406e28:	mov	x3, x23
  406e2c:	str	x8, [x10, #1880]
  406e30:	bl	40aa00 <__fxstatat@plt+0x7fb0>
  406e34:	ldr	w2, [x28, #152]
  406e38:	cmp	w2, #0x6
  406e3c:	b.ne	406ec8 <__fxstatat@plt+0x4478>  // b.any
  406e40:	ldr	x8, [x28, #8]
  406e44:	cbz	x8, 406f4c <__fxstatat@plt+0x44fc>
  406e48:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406e4c:	ldr	x1, [x8, #1456]
  406e50:	mov	x26, x0
  406e54:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  406e58:	add	x0, x0, #0x344
  406e5c:	bl	402980 <fputs_unlocked@plt>
  406e60:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  406e64:	ldr	x8, [x10, #1880]
  406e68:	add	x9, x23, x26
  406e6c:	add	x3, x9, #0x4
  406e70:	mov	w1, #0x1                   	// #1
  406e74:	add	x8, x8, #0x4
  406e78:	mov	x0, x28
  406e7c:	mov	x2, xzr
  406e80:	str	x8, [x10, #1880]
  406e84:	bl	40aa00 <__fxstatat@plt+0x7fb0>
  406e88:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406e8c:	ldr	w9, [x8, #1536]
  406e90:	cbz	w9, 406f4c <__fxstatat@plt+0x44fc>
  406e94:	ldr	w8, [x28, #156]
  406e98:	and	w10, w8, #0xf000
  406e9c:	cmp	w10, #0x4, lsl #12
  406ea0:	b.eq	406ee4 <__fxstatat@plt+0x4494>  // b.none
  406ea4:	cmp	w10, #0x8, lsl #12
  406ea8:	b.ne	406f1c <__fxstatat@plt+0x44cc>  // b.any
  406eac:	cmp	w9, #0x3
  406eb0:	b.ne	406f4c <__fxstatat@plt+0x44fc>  // b.any
  406eb4:	mov	w9, #0x49                  	// #73
  406eb8:	and	w8, w8, w9
  406ebc:	cbz	w8, 406f4c <__fxstatat@plt+0x44fc>
  406ec0:	mov	w1, #0x2a                  	// #42
  406ec4:	b	406ee8 <__fxstatat@plt+0x4498>
  406ec8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406ecc:	ldr	w8, [x8, #1536]
  406ed0:	cbz	w8, 406f4c <__fxstatat@plt+0x44fc>
  406ed4:	ldrb	w0, [x28, #168]
  406ed8:	ldr	w1, [x28, #40]
  406edc:	bl	40b084 <__fxstatat@plt+0x8634>
  406ee0:	b	406f4c <__fxstatat@plt+0x44fc>
  406ee4:	mov	w1, #0x2f                  	// #47
  406ee8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406eec:	ldr	x0, [x8, #1456]
  406ef0:	ldp	x8, x9, [x0, #40]
  406ef4:	cmp	x8, x9
  406ef8:	b.cs	406fb4 <__fxstatat@plt+0x4564>  // b.hs, b.nlast
  406efc:	add	x9, x8, #0x1
  406f00:	str	x9, [x0, #40]
  406f04:	strb	w1, [x8]
  406f08:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406f0c:	ldr	x8, [x9, #1880]
  406f10:	add	x8, x8, #0x1
  406f14:	str	x8, [x9, #1880]
  406f18:	b	406f4c <__fxstatat@plt+0x44fc>
  406f1c:	cmp	w9, #0x1
  406f20:	b.eq	406f4c <__fxstatat@plt+0x44fc>  // b.none
  406f24:	and	w8, w8, #0xfffff000
  406f28:	and	w8, w8, #0xffff
  406f2c:	cmp	w8, #0xc, lsl #12
  406f30:	b.eq	406f98 <__fxstatat@plt+0x4548>  // b.none
  406f34:	cmp	w8, #0xa, lsl #12
  406f38:	b.eq	406fa0 <__fxstatat@plt+0x4550>  // b.none
  406f3c:	cmp	w8, #0x1, lsl #12
  406f40:	b.ne	406f4c <__fxstatat@plt+0x44fc>  // b.any
  406f44:	mov	w1, #0x7c                  	// #124
  406f48:	b	406ee8 <__fxstatat@plt+0x4498>
  406f4c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  406f50:	ldr	x0, [x8, #1456]
  406f54:	ldp	x8, x9, [x0, #40]
  406f58:	cmp	x8, x9
  406f5c:	b.cs	406fa8 <__fxstatat@plt+0x4558>  // b.hs, b.nlast
  406f60:	add	x9, x8, #0x1
  406f64:	str	x9, [x0, #40]
  406f68:	mov	w9, #0xa                   	// #10
  406f6c:	strb	w9, [x8]
  406f70:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  406f74:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  406f78:	ldr	x8, [x10, #1880]
  406f7c:	ldr	x9, [x9, #1872]
  406f80:	add	x22, x22, #0x1
  406f84:	add	x8, x8, #0x1
  406f88:	cmp	x22, x9
  406f8c:	str	x8, [x10, #1880]
  406f90:	b.cc	406600 <__fxstatat@plt+0x3bb0>  // b.lo, b.ul, b.last
  406f94:	b	407400 <__fxstatat@plt+0x49b0>
  406f98:	mov	w1, #0x3d                  	// #61
  406f9c:	b	406ee8 <__fxstatat@plt+0x4498>
  406fa0:	mov	w1, #0x40                  	// #64
  406fa4:	b	406ee8 <__fxstatat@plt+0x4498>
  406fa8:	mov	w1, #0xa                   	// #10
  406fac:	bl	402790 <__overflow@plt>
  406fb0:	b	406f70 <__fxstatat@plt+0x4520>
  406fb4:	bl	402790 <__overflow@plt>
  406fb8:	b	406f08 <__fxstatat@plt+0x44b8>
  406fbc:	mov	w0, #0x2c                  	// #44
  406fc0:	b	4073bc <__fxstatat@plt+0x496c>
  406fc4:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  406fc8:	ldr	x8, [x19, #1872]
  406fcc:	cbz	x8, 407400 <__fxstatat@plt+0x49b0>
  406fd0:	mov	x20, xzr
  406fd4:	adrp	x21, 42d000 <__progname@@GLIBC_2.17+0xa48>
  406fd8:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  406fdc:	mov	w23, #0xa                   	// #10
  406fe0:	ldr	x8, [x21, #1408]
  406fe4:	mov	x1, xzr
  406fe8:	ldr	x0, [x8, x20, lsl #3]
  406fec:	bl	40a660 <__fxstatat@plt+0x7c10>
  406ff0:	ldr	x0, [x22, #1456]
  406ff4:	ldp	x8, x9, [x0, #40]
  406ff8:	cmp	x8, x9
  406ffc:	b.cs	407020 <__fxstatat@plt+0x45d0>  // b.hs, b.nlast
  407000:	add	x9, x8, #0x1
  407004:	str	x9, [x0, #40]
  407008:	strb	w23, [x8]
  40700c:	ldr	x8, [x19, #1872]
  407010:	add	x20, x20, #0x1
  407014:	cmp	x20, x8
  407018:	b.cc	406fe0 <__fxstatat@plt+0x4590>  // b.lo, b.ul, b.last
  40701c:	b	407400 <__fxstatat@plt+0x49b0>
  407020:	mov	w1, #0xa                   	// #10
  407024:	bl	402790 <__overflow@plt>
  407028:	b	40700c <__fxstatat@plt+0x45bc>
  40702c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407030:	ldr	x8, [x8, #2328]
  407034:	cbz	x8, 4073b8 <__fxstatat@plt+0x4968>
  407038:	mov	w0, #0x1                   	// #1
  40703c:	bl	40b3f8 <__fxstatat@plt+0x89a8>
  407040:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407044:	ldr	x8, [x8, #1872]
  407048:	udiv	x9, x8, x0
  40704c:	msub	x8, x9, x0, x8
  407050:	cmp	x8, #0x0
  407054:	cinc	x22, x9, ne  // ne = any
  407058:	cbz	x22, 407400 <__fxstatat@plt+0x49b0>
  40705c:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  407060:	ldr	x9, [x9, #1808]
  407064:	mov	w8, #0x18                  	// #24
  407068:	mov	x21, xzr
  40706c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  407070:	madd	x8, x0, x8, x9
  407074:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x18060>
  407078:	mov	w28, #0x20                  	// #32
  40707c:	sub	x8, x8, #0x8
  407080:	str	x8, [sp, #16]
  407084:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  407088:	ldr	x8, [x8, #1408]
  40708c:	ldr	x19, [x8, x21, lsl #3]
  407090:	mov	x0, x19
  407094:	bl	40b1a8 <__fxstatat@plt+0x8758>
  407098:	ldr	x8, [sp, #16]
  40709c:	mov	x20, x0
  4070a0:	mov	x0, x19
  4070a4:	mov	x1, xzr
  4070a8:	ldr	x8, [x8]
  4070ac:	ldr	x25, [x8]
  4070b0:	bl	40a660 <__fxstatat@plt+0x7c10>
  4070b4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4070b8:	ldr	x8, [x8, #1872]
  4070bc:	add	x24, x21, x22
  4070c0:	str	x21, [sp, #8]
  4070c4:	cmp	x24, x8
  4070c8:	b.cs	4071cc <__fxstatat@plt+0x477c>  // b.hs, b.nlast
  4070cc:	mov	x19, xzr
  4070d0:	mov	w23, #0x1                   	// #1
  4070d4:	b	407120 <__fxstatat@plt+0x46d0>
  4070d8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4070dc:	ldr	x8, [x8, #1408]
  4070e0:	ldr	x21, [x8, x24, lsl #3]
  4070e4:	mov	x0, x21
  4070e8:	bl	40b1a8 <__fxstatat@plt+0x8758>
  4070ec:	ldr	x8, [sp, #16]
  4070f0:	mov	x20, x0
  4070f4:	mov	x0, x21
  4070f8:	mov	x1, x19
  4070fc:	ldr	x8, [x8]
  407100:	ldr	x25, [x8, x23, lsl #3]
  407104:	add	x23, x23, #0x1
  407108:	bl	40a660 <__fxstatat@plt+0x7c10>
  40710c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407110:	ldr	x8, [x8, #1872]
  407114:	add	x24, x24, x22
  407118:	cmp	x24, x8
  40711c:	b.cs	4071cc <__fxstatat@plt+0x477c>  // b.hs, b.nlast
  407120:	add	x20, x19, x20
  407124:	add	x19, x19, x25
  407128:	cmp	x20, x19
  40712c:	mov	w21, #0x9                   	// #9
  407130:	b.cc	407164 <__fxstatat@plt+0x4714>  // b.lo, b.ul, b.last
  407134:	b	4070d8 <__fxstatat@plt+0x4688>
  407138:	ldr	x0, [x27, #1456]
  40713c:	ldp	x8, x9, [x0, #40]
  407140:	cmp	x8, x9
  407144:	b.cs	4071b0 <__fxstatat@plt+0x4760>  // b.hs, b.nlast
  407148:	add	x9, x8, #0x1
  40714c:	str	x9, [x0, #40]
  407150:	strb	w28, [x8]
  407154:	mov	w8, #0x1                   	// #1
  407158:	add	x20, x8, x20
  40715c:	cmp	x20, x19
  407160:	b.cs	4070d8 <__fxstatat@plt+0x4688>  // b.hs, b.nlast
  407164:	ldr	x8, [x26, #2336]
  407168:	cbz	x8, 407138 <__fxstatat@plt+0x46e8>
  40716c:	add	x10, x20, #0x1
  407170:	udiv	x9, x19, x8
  407174:	udiv	x10, x10, x8
  407178:	cmp	x9, x10
  40717c:	b.ls	407138 <__fxstatat@plt+0x46e8>  // b.plast
  407180:	ldr	x0, [x27, #1456]
  407184:	ldp	x9, x10, [x0, #40]
  407188:	cmp	x9, x10
  40718c:	b.cs	4071bc <__fxstatat@plt+0x476c>  // b.hs, b.nlast
  407190:	add	x10, x9, #0x1
  407194:	str	x10, [x0, #40]
  407198:	strb	w21, [x9]
  40719c:	udiv	x9, x20, x8
  4071a0:	neg	x10, x20
  4071a4:	madd	x9, x9, x8, x10
  4071a8:	add	x8, x8, x9
  4071ac:	b	407158 <__fxstatat@plt+0x4708>
  4071b0:	mov	w1, #0x20                  	// #32
  4071b4:	bl	402790 <__overflow@plt>
  4071b8:	b	407154 <__fxstatat@plt+0x4704>
  4071bc:	mov	w1, #0x9                   	// #9
  4071c0:	bl	402790 <__overflow@plt>
  4071c4:	ldr	x8, [x26, #2336]
  4071c8:	b	40719c <__fxstatat@plt+0x474c>
  4071cc:	ldr	x0, [x27, #1456]
  4071d0:	ldp	x8, x9, [x0, #40]
  4071d4:	cmp	x8, x9
  4071d8:	b.cs	407200 <__fxstatat@plt+0x47b0>  // b.hs, b.nlast
  4071dc:	add	x9, x8, #0x1
  4071e0:	str	x9, [x0, #40]
  4071e4:	mov	w9, #0xa                   	// #10
  4071e8:	strb	w9, [x8]
  4071ec:	ldr	x21, [sp, #8]
  4071f0:	add	x21, x21, #0x1
  4071f4:	cmp	x21, x22
  4071f8:	b.cc	407084 <__fxstatat@plt+0x4634>  // b.lo, b.ul, b.last
  4071fc:	b	407400 <__fxstatat@plt+0x49b0>
  407200:	mov	w1, #0xa                   	// #10
  407204:	bl	402790 <__overflow@plt>
  407208:	b	4071ec <__fxstatat@plt+0x479c>
  40720c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407210:	ldr	x8, [x8, #2328]
  407214:	cbz	x8, 4073b8 <__fxstatat@plt+0x4968>
  407218:	mov	w0, wzr
  40721c:	bl	40b3f8 <__fxstatat@plt+0x89a8>
  407220:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  407224:	ldr	x8, [x8, #1408]
  407228:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40722c:	ldr	x21, [x9, #1808]
  407230:	mov	x19, x0
  407234:	ldr	x20, [x8]
  407238:	mov	w22, #0x18                  	// #24
  40723c:	mov	x0, x20
  407240:	bl	40b1a8 <__fxstatat@plt+0x8758>
  407244:	madd	x9, x19, x22, x21
  407248:	ldr	x8, [x9, #-8]!
  40724c:	mov	x21, x0
  407250:	mov	x0, x20
  407254:	mov	x1, xzr
  407258:	ldr	x23, [x8]
  40725c:	str	x9, [sp, #16]
  407260:	bl	40a660 <__fxstatat@plt+0x7c10>
  407264:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407268:	ldr	x8, [x8, #1872]
  40726c:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  407270:	cmp	x8, #0x2
  407274:	b.cc	4073e0 <__fxstatat@plt+0x4990>  // b.lo, b.ul, b.last
  407278:	mov	x20, xzr
  40727c:	mov	w26, #0x1                   	// #1
  407280:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x18060>
  407284:	mov	w27, #0x20                  	// #32
  407288:	mov	w22, #0x9                   	// #9
  40728c:	b	4072f8 <__fxstatat@plt+0x48a8>
  407290:	ldr	x0, [x25, #1456]
  407294:	ldp	x8, x9, [x0, #40]
  407298:	cmp	x8, x9
  40729c:	b.cs	4073a8 <__fxstatat@plt+0x4958>  // b.hs, b.nlast
  4072a0:	add	x9, x8, #0x1
  4072a4:	mov	x20, xzr
  4072a8:	str	x9, [x0, #40]
  4072ac:	mov	w9, #0xa                   	// #10
  4072b0:	strb	w9, [x8]
  4072b4:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4072b8:	ldr	x8, [x8, #1408]
  4072bc:	mov	x1, x20
  4072c0:	ldr	x21, [x8, x26, lsl #3]
  4072c4:	mov	x0, x21
  4072c8:	bl	40a660 <__fxstatat@plt+0x7c10>
  4072cc:	mov	x0, x21
  4072d0:	bl	40b1a8 <__fxstatat@plt+0x8758>
  4072d4:	ldr	x8, [sp, #16]
  4072d8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4072dc:	ldr	x9, [x9, #1872]
  4072e0:	add	x26, x26, #0x1
  4072e4:	ldr	x8, [x8]
  4072e8:	mov	x21, x0
  4072ec:	cmp	x26, x9
  4072f0:	ldr	x23, [x8, x24, lsl #3]
  4072f4:	b.cs	4073e0 <__fxstatat@plt+0x4990>  // b.hs, b.nlast
  4072f8:	udiv	x8, x26, x19
  4072fc:	msub	x24, x8, x19, x26
  407300:	cbz	x24, 407290 <__fxstatat@plt+0x4840>
  407304:	add	x21, x20, x21
  407308:	add	x20, x20, x23
  40730c:	cmp	x21, x20
  407310:	b.cs	4072b4 <__fxstatat@plt+0x4864>  // b.hs, b.nlast
  407314:	ldr	x8, [x28, #2336]
  407318:	cbz	x8, 407364 <__fxstatat@plt+0x4914>
  40731c:	add	x10, x21, #0x1
  407320:	udiv	x9, x20, x8
  407324:	udiv	x10, x10, x8
  407328:	cmp	x9, x10
  40732c:	b.ls	407364 <__fxstatat@plt+0x4914>  // b.plast
  407330:	ldr	x0, [x25, #1456]
  407334:	ldp	x9, x10, [x0, #40]
  407338:	cmp	x9, x10
  40733c:	b.cs	407398 <__fxstatat@plt+0x4948>  // b.hs, b.nlast
  407340:	add	x10, x9, #0x1
  407344:	str	x10, [x0, #40]
  407348:	strb	w22, [x9]
  40734c:	udiv	x9, x21, x8
  407350:	neg	x10, x21
  407354:	madd	x9, x9, x8, x10
  407358:	add	x8, x8, x9
  40735c:	add	x21, x8, x21
  407360:	b	40730c <__fxstatat@plt+0x48bc>
  407364:	ldr	x0, [x25, #1456]
  407368:	ldp	x8, x9, [x0, #40]
  40736c:	cmp	x8, x9
  407370:	b.cs	40738c <__fxstatat@plt+0x493c>  // b.hs, b.nlast
  407374:	add	x9, x8, #0x1
  407378:	str	x9, [x0, #40]
  40737c:	strb	w27, [x8]
  407380:	mov	w8, #0x1                   	// #1
  407384:	add	x21, x8, x21
  407388:	b	40730c <__fxstatat@plt+0x48bc>
  40738c:	mov	w1, #0x20                  	// #32
  407390:	bl	402790 <__overflow@plt>
  407394:	b	407380 <__fxstatat@plt+0x4930>
  407398:	mov	w1, #0x9                   	// #9
  40739c:	bl	402790 <__overflow@plt>
  4073a0:	ldr	x8, [x28, #2336]
  4073a4:	b	40734c <__fxstatat@plt+0x48fc>
  4073a8:	mov	w1, #0xa                   	// #10
  4073ac:	bl	402790 <__overflow@plt>
  4073b0:	mov	x20, xzr
  4073b4:	b	4072b4 <__fxstatat@plt+0x4864>
  4073b8:	mov	w0, #0x20                  	// #32
  4073bc:	add	sp, sp, #0x1, lsl #12
  4073c0:	add	sp, sp, #0x2e0
  4073c4:	ldp	x20, x19, [sp, #80]
  4073c8:	ldp	x22, x21, [sp, #64]
  4073cc:	ldp	x24, x23, [sp, #48]
  4073d0:	ldp	x26, x25, [sp, #32]
  4073d4:	ldp	x28, x27, [sp, #16]
  4073d8:	ldp	x29, x30, [sp], #96
  4073dc:	b	40a848 <__fxstatat@plt+0x7df8>
  4073e0:	ldr	x0, [x25, #1456]
  4073e4:	ldp	x8, x9, [x0, #40]
  4073e8:	cmp	x8, x9
  4073ec:	b.cs	407424 <__fxstatat@plt+0x49d4>  // b.hs, b.nlast
  4073f0:	add	x9, x8, #0x1
  4073f4:	mov	w10, #0xa                   	// #10
  4073f8:	str	x9, [x0, #40]
  4073fc:	strb	w10, [x8]
  407400:	add	sp, sp, #0x1, lsl #12
  407404:	add	sp, sp, #0x2e0
  407408:	ldp	x20, x19, [sp, #80]
  40740c:	ldp	x22, x21, [sp, #64]
  407410:	ldp	x24, x23, [sp, #48]
  407414:	ldp	x26, x25, [sp, #32]
  407418:	ldp	x28, x27, [sp, #16]
  40741c:	ldp	x29, x30, [sp], #96
  407420:	ret
  407424:	mov	w1, #0xa                   	// #10
  407428:	add	sp, sp, #0x1, lsl #12
  40742c:	add	sp, sp, #0x2e0
  407430:	ldp	x20, x19, [sp, #80]
  407434:	ldp	x22, x21, [sp, #64]
  407438:	ldp	x24, x23, [sp, #48]
  40743c:	ldp	x26, x25, [sp, #32]
  407440:	ldp	x28, x27, [sp, #16]
  407444:	ldp	x29, x30, [sp], #96
  407448:	b	402790 <__overflow@plt>
  40744c:	bl	402770 <abort@plt>
  407450:	stp	x29, x30, [sp, #-64]!
  407454:	str	x23, [sp, #16]
  407458:	stp	x22, x21, [sp, #32]
  40745c:	stp	x20, x19, [sp, #48]
  407460:	ldp	x20, x8, [x1, #16]
  407464:	mov	x29, sp
  407468:	subs	x9, x8, x20
  40746c:	lsr	x21, x9, #3
  407470:	cbz	x21, 40750c <__fxstatat@plt+0x4abc>
  407474:	b.ne	407484 <__fxstatat@plt+0x4a34>  // b.any
  407478:	ldrb	w9, [x1, #80]
  40747c:	orr	w9, w9, #0x2
  407480:	strb	w9, [x1, #80]
  407484:	ldr	x10, [x1, #48]
  407488:	ldr	x11, [x1, #8]
  40748c:	ldr	x9, [x1, #32]
  407490:	add	x8, x10, x8
  407494:	bic	x8, x8, x10
  407498:	sub	x10, x8, x11
  40749c:	sub	x11, x9, x11
  4074a0:	cmp	x10, x11
  4074a4:	str	x8, [x1, #24]
  4074a8:	b.ls	4074b4 <__fxstatat@plt+0x4a64>  // b.plast
  4074ac:	mov	x8, x9
  4074b0:	str	x9, [x1, #24]
  4074b4:	str	x8, [x1, #16]
  4074b8:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  4074bc:	ldr	x1, [x22, #1456]
  4074c0:	bl	402980 <fputs_unlocked@plt>
  4074c4:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x5060>
  4074c8:	mov	x23, xzr
  4074cc:	add	x19, x19, #0xc9f
  4074d0:	ldr	x2, [x20, x23, lsl #3]
  4074d4:	mov	w0, #0x1                   	// #1
  4074d8:	mov	x1, x19
  4074dc:	bl	402670 <__printf_chk@plt>
  4074e0:	add	x23, x23, #0x1
  4074e4:	cmp	x23, x21
  4074e8:	b.cc	4074d0 <__fxstatat@plt+0x4a80>  // b.lo, b.ul, b.last
  4074ec:	ldr	x0, [x22, #1456]
  4074f0:	ldp	x8, x9, [x0, #40]
  4074f4:	cmp	x8, x9
  4074f8:	b.cs	407520 <__fxstatat@plt+0x4ad0>  // b.hs, b.nlast
  4074fc:	add	x9, x8, #0x1
  407500:	mov	w10, #0xa                   	// #10
  407504:	str	x9, [x0, #40]
  407508:	strb	w10, [x8]
  40750c:	ldp	x20, x19, [sp, #48]
  407510:	ldp	x22, x21, [sp, #32]
  407514:	ldr	x23, [sp, #16]
  407518:	ldp	x29, x30, [sp], #64
  40751c:	ret
  407520:	ldp	x20, x19, [sp, #48]
  407524:	ldp	x22, x21, [sp, #32]
  407528:	ldr	x23, [sp, #16]
  40752c:	mov	w1, #0xa                   	// #10
  407530:	ldp	x29, x30, [sp], #64
  407534:	b	402790 <__overflow@plt>
  407538:	sub	sp, sp, #0xa0
  40753c:	stp	x20, x19, [sp, #144]
  407540:	mov	w19, w0
  407544:	stp	x29, x30, [sp, #112]
  407548:	stp	x22, x21, [sp, #128]
  40754c:	add	x29, sp, #0x70
  407550:	cbnz	w0, 407a30 <__fxstatat@plt+0x4fe0>
  407554:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  407558:	add	x1, x1, #0xfeb
  40755c:	mov	w2, #0x5                   	// #5
  407560:	mov	x0, xzr
  407564:	bl	402970 <dcgettext@plt>
  407568:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40756c:	ldr	x2, [x8, #1872]
  407570:	mov	x1, x0
  407574:	mov	w0, #0x1                   	// #1
  407578:	bl	402670 <__printf_chk@plt>
  40757c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407580:	add	x1, x1, #0xc
  407584:	mov	w2, #0x5                   	// #5
  407588:	mov	x0, xzr
  40758c:	bl	402970 <dcgettext@plt>
  407590:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  407594:	ldr	x1, [x22, #1456]
  407598:	bl	402980 <fputs_unlocked@plt>
  40759c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4075a0:	add	x1, x1, #0x34f
  4075a4:	mov	w2, #0x5                   	// #5
  4075a8:	mov	x0, xzr
  4075ac:	bl	402970 <dcgettext@plt>
  4075b0:	ldr	x1, [x22, #1456]
  4075b4:	bl	402980 <fputs_unlocked@plt>
  4075b8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  4075bc:	add	x1, x1, #0x9c
  4075c0:	mov	w2, #0x5                   	// #5
  4075c4:	mov	x0, xzr
  4075c8:	bl	402970 <dcgettext@plt>
  4075cc:	ldr	x1, [x22, #1456]
  4075d0:	bl	402980 <fputs_unlocked@plt>
  4075d4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  4075d8:	add	x1, x1, #0x1ab
  4075dc:	mov	w2, #0x5                   	// #5
  4075e0:	mov	x0, xzr
  4075e4:	bl	402970 <dcgettext@plt>
  4075e8:	ldr	x1, [x22, #1456]
  4075ec:	bl	402980 <fputs_unlocked@plt>
  4075f0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  4075f4:	add	x1, x1, #0x247
  4075f8:	mov	w2, #0x5                   	// #5
  4075fc:	mov	x0, xzr
  407600:	bl	402970 <dcgettext@plt>
  407604:	ldr	x1, [x22, #1456]
  407608:	bl	402980 <fputs_unlocked@plt>
  40760c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407610:	add	x1, x1, #0x3b1
  407614:	mov	w2, #0x5                   	// #5
  407618:	mov	x0, xzr
  40761c:	bl	402970 <dcgettext@plt>
  407620:	ldr	x1, [x22, #1456]
  407624:	bl	402980 <fputs_unlocked@plt>
  407628:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  40762c:	add	x1, x1, #0x520
  407630:	mov	w2, #0x5                   	// #5
  407634:	mov	x0, xzr
  407638:	bl	402970 <dcgettext@plt>
  40763c:	ldr	x1, [x22, #1456]
  407640:	bl	402980 <fputs_unlocked@plt>
  407644:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407648:	add	x1, x1, #0x6c3
  40764c:	mov	w2, #0x5                   	// #5
  407650:	mov	x0, xzr
  407654:	bl	402970 <dcgettext@plt>
  407658:	ldr	x1, [x22, #1456]
  40765c:	bl	402980 <fputs_unlocked@plt>
  407660:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407664:	add	x1, x1, #0x700
  407668:	mov	w2, #0x5                   	// #5
  40766c:	mov	x0, xzr
  407670:	bl	402970 <dcgettext@plt>
  407674:	ldr	x1, [x22, #1456]
  407678:	bl	402980 <fputs_unlocked@plt>
  40767c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407680:	add	x1, x1, #0x7f5
  407684:	mov	w2, #0x5                   	// #5
  407688:	mov	x0, xzr
  40768c:	bl	402970 <dcgettext@plt>
  407690:	ldr	x1, [x22, #1456]
  407694:	bl	402980 <fputs_unlocked@plt>
  407698:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  40769c:	add	x1, x1, #0x83e
  4076a0:	mov	w2, #0x5                   	// #5
  4076a4:	mov	x0, xzr
  4076a8:	bl	402970 <dcgettext@plt>
  4076ac:	ldr	x1, [x22, #1456]
  4076b0:	bl	402980 <fputs_unlocked@plt>
  4076b4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  4076b8:	add	x1, x1, #0x8d4
  4076bc:	mov	w2, #0x5                   	// #5
  4076c0:	mov	x0, xzr
  4076c4:	bl	402970 <dcgettext@plt>
  4076c8:	ldr	x1, [x22, #1456]
  4076cc:	bl	402980 <fputs_unlocked@plt>
  4076d0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  4076d4:	add	x1, x1, #0xa7a
  4076d8:	mov	w2, #0x5                   	// #5
  4076dc:	mov	x0, xzr
  4076e0:	bl	402970 <dcgettext@plt>
  4076e4:	ldr	x1, [x22, #1456]
  4076e8:	bl	402980 <fputs_unlocked@plt>
  4076ec:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  4076f0:	add	x1, x1, #0xb0b
  4076f4:	mov	w2, #0x5                   	// #5
  4076f8:	mov	x0, xzr
  4076fc:	bl	402970 <dcgettext@plt>
  407700:	ldr	x1, [x22, #1456]
  407704:	bl	402980 <fputs_unlocked@plt>
  407708:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  40770c:	add	x1, x1, #0xc6d
  407710:	mov	w2, #0x5                   	// #5
  407714:	mov	x0, xzr
  407718:	bl	402970 <dcgettext@plt>
  40771c:	ldr	x1, [x22, #1456]
  407720:	bl	402980 <fputs_unlocked@plt>
  407724:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407728:	add	x1, x1, #0xd01
  40772c:	mov	w2, #0x5                   	// #5
  407730:	mov	x0, xzr
  407734:	bl	402970 <dcgettext@plt>
  407738:	ldr	x1, [x22, #1456]
  40773c:	bl	402980 <fputs_unlocked@plt>
  407740:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407744:	add	x1, x1, #0xe68
  407748:	mov	w2, #0x5                   	// #5
  40774c:	mov	x0, xzr
  407750:	bl	402970 <dcgettext@plt>
  407754:	ldr	x1, [x22, #1456]
  407758:	bl	402980 <fputs_unlocked@plt>
  40775c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x4060>
  407760:	add	x1, x1, #0xf97
  407764:	mov	w2, #0x5                   	// #5
  407768:	mov	x0, xzr
  40776c:	bl	402970 <dcgettext@plt>
  407770:	ldr	x1, [x22, #1456]
  407774:	bl	402980 <fputs_unlocked@plt>
  407778:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40777c:	add	x1, x1, #0x1e0
  407780:	mov	w2, #0x5                   	// #5
  407784:	mov	x0, xzr
  407788:	bl	402970 <dcgettext@plt>
  40778c:	ldr	x1, [x22, #1456]
  407790:	bl	402980 <fputs_unlocked@plt>
  407794:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  407798:	add	x1, x1, #0x2a5
  40779c:	mov	w2, #0x5                   	// #5
  4077a0:	mov	x0, xzr
  4077a4:	bl	402970 <dcgettext@plt>
  4077a8:	ldr	x1, [x22, #1456]
  4077ac:	bl	402980 <fputs_unlocked@plt>
  4077b0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4077b4:	add	x1, x1, #0x4ac
  4077b8:	mov	w2, #0x5                   	// #5
  4077bc:	mov	x0, xzr
  4077c0:	bl	402970 <dcgettext@plt>
  4077c4:	ldr	x1, [x22, #1456]
  4077c8:	bl	402980 <fputs_unlocked@plt>
  4077cc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4077d0:	add	x1, x1, #0x4fb
  4077d4:	mov	w2, #0x5                   	// #5
  4077d8:	mov	x0, xzr
  4077dc:	bl	402970 <dcgettext@plt>
  4077e0:	ldr	x1, [x22, #1456]
  4077e4:	bl	402980 <fputs_unlocked@plt>
  4077e8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4077ec:	add	x1, x1, #0x589
  4077f0:	mov	w2, #0x5                   	// #5
  4077f4:	mov	x0, xzr
  4077f8:	bl	402970 <dcgettext@plt>
  4077fc:	ldr	x1, [x22, #1456]
  407800:	bl	402980 <fputs_unlocked@plt>
  407804:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  407808:	add	x1, x1, #0x6fd
  40780c:	mov	w2, #0x5                   	// #5
  407810:	mov	x0, xzr
  407814:	bl	402970 <dcgettext@plt>
  407818:	ldr	x1, [x22, #1456]
  40781c:	bl	402980 <fputs_unlocked@plt>
  407820:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  407824:	add	x1, x1, #0x868
  407828:	mov	w2, #0x5                   	// #5
  40782c:	mov	x0, xzr
  407830:	bl	402970 <dcgettext@plt>
  407834:	ldr	x1, [x22, #1456]
  407838:	bl	402980 <fputs_unlocked@plt>
  40783c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  407840:	add	x1, x1, #0x895
  407844:	mov	w2, #0x5                   	// #5
  407848:	mov	x0, xzr
  40784c:	bl	402970 <dcgettext@plt>
  407850:	ldr	x1, [x22, #1456]
  407854:	bl	402980 <fputs_unlocked@plt>
  407858:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40785c:	add	x1, x1, #0x39a
  407860:	mov	w2, #0x5                   	// #5
  407864:	mov	x0, xzr
  407868:	bl	402970 <dcgettext@plt>
  40786c:	ldr	x1, [x22, #1456]
  407870:	bl	402980 <fputs_unlocked@plt>
  407874:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  407878:	add	x1, x1, #0x8cb
  40787c:	mov	w2, #0x5                   	// #5
  407880:	mov	x0, xzr
  407884:	bl	402970 <dcgettext@plt>
  407888:	ldr	x1, [x22, #1456]
  40788c:	bl	402980 <fputs_unlocked@plt>
  407890:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  407894:	add	x1, x1, #0xa43
  407898:	mov	w2, #0x5                   	// #5
  40789c:	mov	x0, xzr
  4078a0:	bl	402970 <dcgettext@plt>
  4078a4:	ldr	x1, [x22, #1456]
  4078a8:	bl	402980 <fputs_unlocked@plt>
  4078ac:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  4078b0:	add	x1, x1, #0xb61
  4078b4:	mov	w2, #0x5                   	// #5
  4078b8:	mov	x0, xzr
  4078bc:	bl	402970 <dcgettext@plt>
  4078c0:	ldr	x1, [x22, #1456]
  4078c4:	bl	402980 <fputs_unlocked@plt>
  4078c8:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x3060>
  4078cc:	add	x9, x9, #0xe40
  4078d0:	ldp	q0, q1, [x9, #48]
  4078d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4078d8:	ldr	w8, [x8, #1288]
  4078dc:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  4078e0:	str	q0, [sp, #48]
  4078e4:	ldp	q2, q0, [x9, #80]
  4078e8:	add	x10, x10, #0x1b
  4078ec:	cmp	w8, #0x2
  4078f0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  4078f4:	stp	q1, q2, [sp, #64]
  4078f8:	ldr	q1, [x9]
  4078fc:	str	q0, [sp, #96]
  407900:	ldp	q0, q3, [x9, #16]
  407904:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x5060>
  407908:	add	x9, x9, #0xbf9
  40790c:	csel	x9, x10, x9, eq  // eq = none
  407910:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x5060>
  407914:	add	x10, x10, #0xde9
  407918:	cmp	w8, #0x1
  40791c:	add	x1, x1, #0xf5c
  407920:	csel	x20, x10, x9, eq  // eq = none
  407924:	mov	x21, sp
  407928:	stp	q1, q0, [sp]
  40792c:	str	q3, [sp, #32]
  407930:	mov	x0, x20
  407934:	bl	402800 <strcmp@plt>
  407938:	cbz	w0, 407944 <__fxstatat@plt+0x4ef4>
  40793c:	ldr	x1, [x21, #16]!
  407940:	cbnz	x1, 407930 <__fxstatat@plt+0x4ee0>
  407944:	ldr	x8, [x21, #8]
  407948:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40794c:	add	x1, x1, #0x4cb
  407950:	mov	w2, #0x5                   	// #5
  407954:	cmp	x8, #0x0
  407958:	mov	x0, xzr
  40795c:	csel	x21, x20, x8, eq  // eq = none
  407960:	bl	402970 <dcgettext@plt>
  407964:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5060>
  407968:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40796c:	mov	x1, x0
  407970:	add	x2, x2, #0xdde
  407974:	add	x3, x3, #0x4e2
  407978:	mov	w0, #0x1                   	// #1
  40797c:	bl	402670 <__printf_chk@plt>
  407980:	mov	w0, #0x5                   	// #5
  407984:	mov	x1, xzr
  407988:	bl	402a40 <setlocale@plt>
  40798c:	cbz	x0, 4079c0 <__fxstatat@plt+0x4f70>
  407990:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  407994:	add	x1, x1, #0x50a
  407998:	mov	w2, #0x3                   	// #3
  40799c:	bl	402640 <strncmp@plt>
  4079a0:	cbz	w0, 4079c0 <__fxstatat@plt+0x4f70>
  4079a4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4079a8:	add	x1, x1, #0x50e
  4079ac:	mov	w2, #0x5                   	// #5
  4079b0:	mov	x0, xzr
  4079b4:	bl	402970 <dcgettext@plt>
  4079b8:	ldr	x1, [x22, #1456]
  4079bc:	bl	402980 <fputs_unlocked@plt>
  4079c0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4079c4:	add	x1, x1, #0x555
  4079c8:	mov	w2, #0x5                   	// #5
  4079cc:	mov	x0, xzr
  4079d0:	bl	402970 <dcgettext@plt>
  4079d4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  4079d8:	mov	x1, x0
  4079dc:	add	x2, x2, #0x4e2
  4079e0:	mov	w0, #0x1                   	// #1
  4079e4:	mov	x3, x20
  4079e8:	bl	402670 <__printf_chk@plt>
  4079ec:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4079f0:	add	x1, x1, #0x570
  4079f4:	mov	w2, #0x5                   	// #5
  4079f8:	mov	x0, xzr
  4079fc:	bl	402970 <dcgettext@plt>
  407a00:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  407a04:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  407a08:	add	x8, x8, #0x2c1
  407a0c:	add	x9, x9, #0x488
  407a10:	cmp	x21, x20
  407a14:	mov	x1, x0
  407a18:	csel	x3, x9, x8, eq  // eq = none
  407a1c:	mov	w0, #0x1                   	// #1
  407a20:	mov	x2, x21
  407a24:	bl	402670 <__printf_chk@plt>
  407a28:	mov	w0, w19
  407a2c:	bl	402460 <exit@plt>
  407a30:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407a34:	ldr	x20, [x8, #1432]
  407a38:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  407a3c:	add	x1, x1, #0xfc4
  407a40:	mov	w2, #0x5                   	// #5
  407a44:	mov	x0, xzr
  407a48:	bl	402970 <dcgettext@plt>
  407a4c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  407a50:	ldr	x3, [x8, #1872]
  407a54:	mov	x2, x0
  407a58:	mov	w1, #0x1                   	// #1
  407a5c:	mov	x0, x20
  407a60:	bl	4027e0 <__fprintf_chk@plt>
  407a64:	mov	w0, w19
  407a68:	bl	402460 <exit@plt>
  407a6c:	stp	x29, x30, [sp, #-32]!
  407a70:	stp	x20, x19, [sp, #16]
  407a74:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407a78:	ldrb	w9, [x8, #1888]
  407a7c:	mov	x19, x0
  407a80:	mov	x29, sp
  407a84:	tbnz	w9, #0, 407ad4 <__fxstatat@plt+0x5084>
  407a88:	mov	w9, #0x1                   	// #1
  407a8c:	mov	w0, #0x1                   	// #1
  407a90:	strb	w9, [x8, #1888]
  407a94:	bl	402740 <tcgetpgrp@plt>
  407a98:	tbnz	w0, #31, 407aa4 <__fxstatat@plt+0x5054>
  407a9c:	mov	w0, #0x1                   	// #1
  407aa0:	bl	407af0 <__fxstatat@plt+0x50a0>
  407aa4:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407aa8:	add	x0, x0, #0x388
  407aac:	ldr	x8, [x0, #8]
  407ab0:	cbnz	x8, 407ad0 <__fxstatat@plt+0x5080>
  407ab4:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  407ab8:	add	x20, x20, #0x368
  407abc:	mov	x0, x20
  407ac0:	bl	407a6c <__fxstatat@plt+0x501c>
  407ac4:	add	x0, x20, #0x30
  407ac8:	bl	407a6c <__fxstatat@plt+0x501c>
  407acc:	add	x0, x20, #0x10
  407ad0:	bl	407a6c <__fxstatat@plt+0x501c>
  407ad4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407ad8:	ldp	x1, x0, [x19]
  407adc:	ldr	x3, [x8, #1456]
  407ae0:	ldp	x20, x19, [sp, #16]
  407ae4:	mov	w2, #0x1                   	// #1
  407ae8:	ldp	x29, x30, [sp], #32
  407aec:	b	402410 <fwrite_unlocked@plt>
  407af0:	sub	sp, sp, #0xe0
  407af4:	stp	x29, x30, [sp, #160]
  407af8:	stp	x24, x23, [sp, #176]
  407afc:	stp	x22, x21, [sp, #192]
  407b00:	stp	x20, x19, [sp, #208]
  407b04:	add	x29, sp, #0xa0
  407b08:	tbz	w0, #0, 407b68 <__fxstatat@plt+0x5118>
  407b0c:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  407b10:	add	x19, x19, #0x878
  407b14:	mov	x0, x19
  407b18:	bl	402630 <sigemptyset@plt>
  407b1c:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x2060>
  407b20:	mov	x22, xzr
  407b24:	add	x21, x21, #0x334
  407b28:	b	407b38 <__fxstatat@plt+0x50e8>
  407b2c:	add	x22, x22, #0x4
  407b30:	cmp	x22, #0x30
  407b34:	b.eq	407cfc <__fxstatat@plt+0x52ac>  // b.none
  407b38:	ldr	w20, [x21, x22]
  407b3c:	add	x2, sp, #0x8
  407b40:	mov	x1, xzr
  407b44:	mov	w0, w20
  407b48:	bl	402720 <sigaction@plt>
  407b4c:	ldr	x8, [sp, #8]
  407b50:	cmp	x8, #0x1
  407b54:	b.eq	407b2c <__fxstatat@plt+0x50dc>  // b.none
  407b58:	mov	x0, x19
  407b5c:	mov	w1, w20
  407b60:	bl	4029b0 <sigaddset@plt>
  407b64:	b	407b2c <__fxstatat@plt+0x50dc>
  407b68:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407b6c:	add	x0, x0, #0x878
  407b70:	mov	w1, #0x14                  	// #20
  407b74:	bl	4027f0 <sigismember@plt>
  407b78:	cbz	w0, 407b88 <__fxstatat@plt+0x5138>
  407b7c:	mov	w0, #0x14                  	// #20
  407b80:	mov	x1, xzr
  407b84:	bl	4025b0 <signal@plt>
  407b88:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407b8c:	add	x0, x0, #0x878
  407b90:	mov	w1, #0xe                   	// #14
  407b94:	bl	4027f0 <sigismember@plt>
  407b98:	cbz	w0, 407ba8 <__fxstatat@plt+0x5158>
  407b9c:	mov	w0, #0xe                   	// #14
  407ba0:	mov	x1, xzr
  407ba4:	bl	4025b0 <signal@plt>
  407ba8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407bac:	add	x0, x0, #0x878
  407bb0:	mov	w1, #0x1                   	// #1
  407bb4:	bl	4027f0 <sigismember@plt>
  407bb8:	cbz	w0, 407bc8 <__fxstatat@plt+0x5178>
  407bbc:	mov	w0, #0x1                   	// #1
  407bc0:	mov	x1, xzr
  407bc4:	bl	4025b0 <signal@plt>
  407bc8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407bcc:	add	x0, x0, #0x878
  407bd0:	mov	w1, #0x2                   	// #2
  407bd4:	bl	4027f0 <sigismember@plt>
  407bd8:	cbz	w0, 407be8 <__fxstatat@plt+0x5198>
  407bdc:	mov	w0, #0x2                   	// #2
  407be0:	mov	x1, xzr
  407be4:	bl	4025b0 <signal@plt>
  407be8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407bec:	add	x0, x0, #0x878
  407bf0:	mov	w1, #0xd                   	// #13
  407bf4:	bl	4027f0 <sigismember@plt>
  407bf8:	cbz	w0, 407c08 <__fxstatat@plt+0x51b8>
  407bfc:	mov	w0, #0xd                   	// #13
  407c00:	mov	x1, xzr
  407c04:	bl	4025b0 <signal@plt>
  407c08:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407c0c:	add	x0, x0, #0x878
  407c10:	mov	w1, #0x3                   	// #3
  407c14:	bl	4027f0 <sigismember@plt>
  407c18:	cbz	w0, 407c28 <__fxstatat@plt+0x51d8>
  407c1c:	mov	w0, #0x3                   	// #3
  407c20:	mov	x1, xzr
  407c24:	bl	4025b0 <signal@plt>
  407c28:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407c2c:	add	x0, x0, #0x878
  407c30:	mov	w1, #0xf                   	// #15
  407c34:	bl	4027f0 <sigismember@plt>
  407c38:	cbz	w0, 407c48 <__fxstatat@plt+0x51f8>
  407c3c:	mov	w0, #0xf                   	// #15
  407c40:	mov	x1, xzr
  407c44:	bl	4025b0 <signal@plt>
  407c48:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407c4c:	add	x0, x0, #0x878
  407c50:	mov	w1, #0x1d                  	// #29
  407c54:	bl	4027f0 <sigismember@plt>
  407c58:	cbz	w0, 407c68 <__fxstatat@plt+0x5218>
  407c5c:	mov	w0, #0x1d                  	// #29
  407c60:	mov	x1, xzr
  407c64:	bl	4025b0 <signal@plt>
  407c68:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407c6c:	add	x0, x0, #0x878
  407c70:	mov	w1, #0x1b                  	// #27
  407c74:	bl	4027f0 <sigismember@plt>
  407c78:	cbz	w0, 407c88 <__fxstatat@plt+0x5238>
  407c7c:	mov	w0, #0x1b                  	// #27
  407c80:	mov	x1, xzr
  407c84:	bl	4025b0 <signal@plt>
  407c88:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407c8c:	add	x0, x0, #0x878
  407c90:	mov	w1, #0x1a                  	// #26
  407c94:	bl	4027f0 <sigismember@plt>
  407c98:	cbz	w0, 407ca8 <__fxstatat@plt+0x5258>
  407c9c:	mov	w0, #0x1a                  	// #26
  407ca0:	mov	x1, xzr
  407ca4:	bl	4025b0 <signal@plt>
  407ca8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407cac:	add	x0, x0, #0x878
  407cb0:	mov	w1, #0x18                  	// #24
  407cb4:	bl	4027f0 <sigismember@plt>
  407cb8:	cbz	w0, 407cc8 <__fxstatat@plt+0x5278>
  407cbc:	mov	w0, #0x18                  	// #24
  407cc0:	mov	x1, xzr
  407cc4:	bl	4025b0 <signal@plt>
  407cc8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  407ccc:	add	x0, x0, #0x878
  407cd0:	mov	w1, #0x19                  	// #25
  407cd4:	bl	4027f0 <sigismember@plt>
  407cd8:	cbz	w0, 407d80 <__fxstatat@plt+0x5330>
  407cdc:	ldp	x20, x19, [sp, #208]
  407ce0:	ldp	x22, x21, [sp, #192]
  407ce4:	ldp	x24, x23, [sp, #176]
  407ce8:	ldp	x29, x30, [sp, #160]
  407cec:	mov	w0, #0x19                  	// #25
  407cf0:	mov	x1, xzr
  407cf4:	add	sp, sp, #0xe0
  407cf8:	b	4025b0 <signal@plt>
  407cfc:	ldp	q0, q1, [x19, #64]
  407d00:	adrp	x23, 407000 <__fxstatat@plt+0x45b0>
  407d04:	adrp	x24, 407000 <__fxstatat@plt+0x45b0>
  407d08:	mov	x22, xzr
  407d0c:	stur	q0, [sp, #80]
  407d10:	ldp	q2, q0, [x19, #96]
  407d14:	mov	w8, #0x10000000            	// #268435456
  407d18:	add	x23, x23, #0xdbc
  407d1c:	add	x24, x24, #0xd98
  407d20:	stp	q1, q2, [sp, #96]
  407d24:	ldp	q1, q2, [x19]
  407d28:	stur	q0, [sp, #128]
  407d2c:	str	w8, [sp, #144]
  407d30:	stp	q1, q2, [sp, #16]
  407d34:	ldp	q0, q1, [x19, #32]
  407d38:	stp	q0, q1, [sp, #48]
  407d3c:	b	407d4c <__fxstatat@plt+0x52fc>
  407d40:	add	x22, x22, #0x4
  407d44:	cmp	x22, #0x30
  407d48:	b.eq	407d80 <__fxstatat@plt+0x5330>  // b.none
  407d4c:	ldr	w20, [x21, x22]
  407d50:	mov	x0, x19
  407d54:	mov	w1, w20
  407d58:	bl	4027f0 <sigismember@plt>
  407d5c:	cbz	w0, 407d40 <__fxstatat@plt+0x52f0>
  407d60:	cmp	x22, #0x0
  407d64:	csel	x8, x24, x23, eq  // eq = none
  407d68:	add	x1, sp, #0x8
  407d6c:	mov	w0, w20
  407d70:	mov	x2, xzr
  407d74:	str	x8, [sp, #8]
  407d78:	bl	402720 <sigaction@plt>
  407d7c:	b	407d40 <__fxstatat@plt+0x52f0>
  407d80:	ldp	x20, x19, [sp, #208]
  407d84:	ldp	x22, x21, [sp, #192]
  407d88:	ldp	x24, x23, [sp, #176]
  407d8c:	ldp	x29, x30, [sp, #160]
  407d90:	add	sp, sp, #0xe0
  407d94:	ret
  407d98:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407d9c:	ldr	w8, [x8, #1896]
  407da0:	cbz	w8, 407da8 <__fxstatat@plt+0x5358>
  407da4:	ret
  407da8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407dac:	ldr	w9, [x8, #1892]
  407db0:	add	w9, w9, #0x1
  407db4:	str	w9, [x8, #1892]
  407db8:	ret
  407dbc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  407dc0:	ldr	w9, [x8, #1896]
  407dc4:	cbz	w9, 407dcc <__fxstatat@plt+0x537c>
  407dc8:	ret
  407dcc:	str	w0, [x8, #1896]
  407dd0:	ret
  407dd4:	stp	x29, x30, [sp, #-16]!
  407dd8:	ldr	x9, [x1]
  407ddc:	ldr	x10, [x0]
  407de0:	adrp	x11, 416000 <_obstack_memory_used@@Base+0x2060>
  407de4:	adrp	x12, 416000 <_obstack_memory_used@@Base+0x2060>
  407de8:	adrp	x13, 416000 <_obstack_memory_used@@Base+0x2060>
  407dec:	mov	w17, wzr
  407df0:	mov	x8, xzr
  407df4:	mov	w16, wzr
  407df8:	add	x11, x11, #0x226
  407dfc:	add	x12, x12, #0x2a4
  407e00:	add	x13, x13, #0x22b
  407e04:	mov	w14, #0x1                   	// #1
  407e08:	mov	w15, #0x7f                  	// #127
  407e0c:	mov	x29, sp
  407e10:	b	407e28 <__fxstatat@plt+0x53d8>
  407e14:	mov	w17, wzr
  407e18:	strb	w16, [x10], #1
  407e1c:	add	x8, x8, #0x1
  407e20:	cmp	w17, #0x5
  407e24:	b.cs	408018 <__fxstatat@plt+0x55c8>  // b.hs, b.nlast
  407e28:	cmp	w17, #0x4
  407e2c:	b.hi	408034 <__fxstatat@plt+0x55e4>  // b.pmore
  407e30:	mov	w17, w17
  407e34:	adr	x18, 407e44 <__fxstatat@plt+0x53f4>
  407e38:	ldrb	w4, [x11, x17]
  407e3c:	add	x18, x18, x4, lsl #2
  407e40:	br	x18
  407e44:	ldrb	w18, [x9]
  407e48:	mov	w17, #0x5                   	// #5
  407e4c:	sub	w4, w18, #0x3a
  407e50:	cmp	w4, #0x24
  407e54:	b.hi	407f84 <__fxstatat@plt+0x5534>  // b.pmore
  407e58:	adr	x5, 407e68 <__fxstatat@plt+0x5418>
  407e5c:	ldrb	w6, [x12, x4]
  407e60:	add	x5, x5, x6, lsl #2
  407e64:	br	x5
  407e68:	tbz	w2, #0, 407f88 <__fxstatat@plt+0x5538>
  407e6c:	b	408014 <__fxstatat@plt+0x55c4>
  407e70:	ldrb	w18, [x9]
  407e74:	sub	w17, w18, #0x40
  407e78:	cmp	w17, #0x3e
  407e7c:	b.hi	407f30 <__fxstatat@plt+0x54e0>  // b.pmore
  407e80:	mov	w17, wzr
  407e84:	add	x9, x9, #0x1
  407e88:	and	w18, w18, #0x1f
  407e8c:	b	407f90 <__fxstatat@plt+0x5540>
  407e90:	ldrb	w17, [x9]
  407e94:	and	w18, w17, #0xf8
  407e98:	cmp	w18, #0x30
  407e9c:	b.ne	407e14 <__fxstatat@plt+0x53c4>  // b.any
  407ea0:	add	w16, w17, w16, lsl #3
  407ea4:	add	x9, x9, #0x1
  407ea8:	sub	w16, w16, #0x30
  407eac:	mov	w17, #0x2                   	// #2
  407eb0:	b	407e20 <__fxstatat@plt+0x53d0>
  407eb4:	ldrb	w17, [x9]
  407eb8:	sub	w18, w17, #0x30
  407ebc:	cmp	w18, #0x36
  407ec0:	b.hi	407e14 <__fxstatat@plt+0x53c4>  // b.pmore
  407ec4:	lsl	x4, x14, x18
  407ec8:	tst	x4, #0x3ff
  407ecc:	b.ne	407f44 <__fxstatat@plt+0x54f4>  // b.any
  407ed0:	lsl	x4, x14, x18
  407ed4:	tst	x4, #0x7e0000
  407ed8:	b.ne	407f58 <__fxstatat@plt+0x5508>  // b.any
  407edc:	lsl	x18, x14, x18
  407ee0:	tst	x18, #0x7e000000000000
  407ee4:	b.eq	407e14 <__fxstatat@plt+0x53c4>  // b.none
  407ee8:	add	w16, w17, w16, lsl #4
  407eec:	add	x9, x9, #0x1
  407ef0:	sub	w16, w16, #0x57
  407ef4:	mov	w17, #0x3                   	// #3
  407ef8:	b	407e20 <__fxstatat@plt+0x53d0>
  407efc:	ldrb	w5, [x9]
  407f00:	cmp	w5, #0x78
  407f04:	b.hi	407f98 <__fxstatat@plt+0x5548>  // b.pmore
  407f08:	adr	x6, 407f24 <__fxstatat@plt+0x54d4>
  407f0c:	ldrb	w17, [x13, x5]
  407f10:	add	x6, x6, x17, lsl #2
  407f14:	mov	w4, wzr
  407f18:	mov	w18, #0x7                   	// #7
  407f1c:	mov	w17, #0x3                   	// #3
  407f20:	br	x6
  407f24:	sub	w4, w5, #0x30
  407f28:	mov	w17, #0x2                   	// #2
  407f2c:	b	408000 <__fxstatat@plt+0x55b0>
  407f30:	cmp	w18, #0x3f
  407f34:	b.ne	40800c <__fxstatat@plt+0x55bc>  // b.any
  407f38:	mov	w17, wzr
  407f3c:	strb	w15, [x10], #1
  407f40:	b	407e1c <__fxstatat@plt+0x53cc>
  407f44:	add	w16, w17, w16, lsl #4
  407f48:	add	x9, x9, #0x1
  407f4c:	sub	w16, w16, #0x30
  407f50:	mov	w17, #0x3                   	// #3
  407f54:	b	407e20 <__fxstatat@plt+0x53d0>
  407f58:	add	w16, w17, w16, lsl #4
  407f5c:	add	x9, x9, #0x1
  407f60:	sub	w16, w16, #0x37
  407f64:	mov	w17, #0x3                   	// #3
  407f68:	b	407e20 <__fxstatat@plt+0x53d0>
  407f6c:	add	x9, x9, #0x1
  407f70:	mov	w17, #0x1                   	// #1
  407f74:	b	407e20 <__fxstatat@plt+0x53d0>
  407f78:	add	x9, x9, #0x1
  407f7c:	mov	w17, #0x4                   	// #4
  407f80:	b	407e20 <__fxstatat@plt+0x53d0>
  407f84:	cbz	w18, 408018 <__fxstatat@plt+0x55c8>
  407f88:	mov	w17, wzr
  407f8c:	add	x9, x9, #0x1
  407f90:	strb	w18, [x10], #1
  407f94:	b	407e1c <__fxstatat@plt+0x53cc>
  407f98:	mov	w18, w5
  407f9c:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fa0:	mov	w18, #0x8                   	// #8
  407fa4:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fa8:	mov	w18, #0x1b                  	// #27
  407fac:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fb0:	mov	w18, #0xc                   	// #12
  407fb4:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fb8:	mov	w18, #0xa                   	// #10
  407fbc:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fc0:	mov	w18, #0x9                   	// #9
  407fc4:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fc8:	mov	w17, #0x6                   	// #6
  407fcc:	mov	w4, w16
  407fd0:	b	408000 <__fxstatat@plt+0x55b0>
  407fd4:	mov	w18, #0x7f                  	// #127
  407fd8:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fdc:	mov	w18, #0x20                  	// #32
  407fe0:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fe4:	mov	w18, #0xd                   	// #13
  407fe8:	b	407ff0 <__fxstatat@plt+0x55a0>
  407fec:	mov	w18, #0xb                   	// #11
  407ff0:	mov	w17, wzr
  407ff4:	strb	w18, [x10], #1
  407ff8:	add	x8, x8, #0x1
  407ffc:	mov	w4, w18
  408000:	add	x9, x9, #0x1
  408004:	mov	w16, w4
  408008:	b	407e20 <__fxstatat@plt+0x53d0>
  40800c:	mov	w17, #0x6                   	// #6
  408010:	b	408018 <__fxstatat@plt+0x55c8>
  408014:	mov	w17, #0x5                   	// #5
  408018:	cmp	w17, #0x6
  40801c:	str	x10, [x0]
  408020:	str	x9, [x1]
  408024:	cset	w0, ne  // ne = any
  408028:	str	x8, [x3]
  40802c:	ldp	x29, x30, [sp], #16
  408030:	ret
  408034:	bl	402770 <abort@plt>
  408038:	stp	x29, x30, [sp, #-96]!
  40803c:	stp	x28, x27, [sp, #16]
  408040:	stp	x26, x25, [sp, #32]
  408044:	stp	x24, x23, [sp, #48]
  408048:	stp	x22, x21, [sp, #64]
  40804c:	stp	x20, x19, [sp, #80]
  408050:	mov	x29, sp
  408054:	sub	sp, sp, #0x2, lsl #12
  408058:	sub	sp, sp, #0x30
  40805c:	mov	x20, x0
  408060:	mov	x22, x5
  408064:	mov	w24, w4
  408068:	mov	x23, x3
  40806c:	mov	w3, w2
  408070:	mov	x2, x1
  408074:	add	x8, sp, #0x28
  408078:	add	x0, sp, #0x20
  40807c:	add	x5, sp, #0x1c
  408080:	mov	x1, x20
  408084:	mov	x4, xzr
  408088:	mov	x21, x6
  40808c:	str	x8, [sp, #32]
  408090:	bl	408580 <__fxstatat@plt+0x5b30>
  408094:	ldrb	w25, [sp, #28]
  408098:	mov	x19, x0
  40809c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  4080a0:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x18060>
  4080a4:	cbz	w25, 4080d8 <__fxstatat@plt+0x5688>
  4080a8:	tbz	w24, #0, 4080d8 <__fxstatat@plt+0x5688>
  4080ac:	ldr	x0, [x26, #1456]
  4080b0:	ldp	x8, x9, [x0, #40]
  4080b4:	cmp	x8, x9
  4080b8:	b.cs	408480 <__fxstatat@plt+0x5a30>  // b.hs, b.nlast
  4080bc:	add	x9, x8, #0x1
  4080c0:	mov	w10, #0x20                  	// #32
  4080c4:	str	x9, [x0, #40]
  4080c8:	strb	w10, [x8]
  4080cc:	ldr	x8, [x28, #1880]
  4080d0:	add	x8, x8, #0x1
  4080d4:	str	x8, [x28, #1880]
  4080d8:	cbz	x23, 408154 <__fxstatat@plt+0x5704>
  4080dc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  4080e0:	add	x9, x9, #0x3a8
  4080e4:	ldr	x8, [x9]
  4080e8:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  4080ec:	add	x24, x24, #0x368
  4080f0:	cbz	x8, 40813c <__fxstatat@plt+0x56ec>
  4080f4:	ldr	x0, [x9, #8]
  4080f8:	cmp	x8, #0x2
  4080fc:	b.eq	408118 <__fxstatat@plt+0x56c8>  // b.none
  408100:	cmp	x8, #0x1
  408104:	b.ne	40812c <__fxstatat@plt+0x56dc>  // b.any
  408108:	ldrb	w8, [x0]
  40810c:	cmp	w8, #0x30
  408110:	b.ne	40812c <__fxstatat@plt+0x56dc>  // b.any
  408114:	b	40813c <__fxstatat@plt+0x56ec>
  408118:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40811c:	add	x1, x1, #0xbfe
  408120:	mov	w2, #0x2                   	// #2
  408124:	bl	402640 <strncmp@plt>
  408128:	cbz	w0, 40813c <__fxstatat@plt+0x56ec>
  40812c:	mov	x0, x24
  408130:	bl	407a6c <__fxstatat@plt+0x501c>
  408134:	add	x0, x24, #0x10
  408138:	bl	407a6c <__fxstatat@plt+0x501c>
  40813c:	mov	x0, x24
  408140:	bl	407a6c <__fxstatat@plt+0x501c>
  408144:	mov	x0, x23
  408148:	bl	407a6c <__fxstatat@plt+0x501c>
  40814c:	add	x0, x24, #0x10
  408150:	bl	407a6c <__fxstatat@plt+0x501c>
  408154:	cbz	x21, 408328 <__fxstatat@plt+0x58d8>
  408158:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40815c:	ldrb	w8, [x8, #2384]
  408160:	mov	w27, wzr
  408164:	cbz	w8, 4081a0 <__fxstatat@plt+0x5750>
  408168:	cbnz	w25, 4081a0 <__fxstatat@plt+0x5750>
  40816c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  408170:	ldrb	w8, [x8, #1401]
  408174:	cbz	w8, 4081a0 <__fxstatat@plt+0x5750>
  408178:	ldr	x0, [x26, #1456]
  40817c:	ldr	x9, [sp, #32]
  408180:	ldp	x8, x10, [x0, #40]
  408184:	ldrb	w1, [x9]
  408188:	cmp	x8, x10
  40818c:	b.cs	40848c <__fxstatat@plt+0x5a3c>  // b.hs, b.nlast
  408190:	add	x9, x8, #0x1
  408194:	str	x9, [x0, #40]
  408198:	strb	w1, [x8]
  40819c:	mov	w27, #0x1                   	// #1
  4081a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4081a4:	ldr	x25, [x8, #1848]
  4081a8:	mov	x26, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4081ac:	movk	x26, #0x2aaa, lsl #48
  4081b0:	mov	x0, x25
  4081b4:	bl	402430 <strlen@plt>
  4081b8:	add	x8, x0, #0x1
  4081bc:	cmp	x8, x26
  4081c0:	b.hi	40849c <__fxstatat@plt+0x5a4c>  // b.pmore
  4081c4:	add	x0, x8, x8, lsl #1
  4081c8:	str	x19, [sp, #8]
  4081cc:	bl	412e10 <__fxstatat@plt+0x103c0>
  4081d0:	ldrb	w8, [x25]
  4081d4:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x18060>
  4081d8:	mov	x23, x0
  4081dc:	add	x28, x28, #0x778
  4081e0:	mov	x24, x0
  4081e4:	cbz	w8, 408238 <__fxstatat@plt+0x57e8>
  4081e8:	add	x19, x25, #0x1
  4081ec:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x6060>
  4081f0:	add	x25, x25, #0x2c2
  4081f4:	mov	x24, x23
  4081f8:	b	408220 <__fxstatat@plt+0x57d0>
  4081fc:	and	w4, w8, #0xff
  408200:	mov	w1, #0x1                   	// #1
  408204:	mov	x2, #0xffffffffffffffff    	// #-1
  408208:	mov	x0, x24
  40820c:	mov	x3, x25
  408210:	bl	402440 <__sprintf_chk@plt>
  408214:	add	x24, x24, w0, sxtw
  408218:	ldrb	w8, [x19], #1
  40821c:	cbz	w8, 408238 <__fxstatat@plt+0x57e8>
  408220:	and	x9, x8, #0xff
  408224:	ldrb	w9, [x28, x9]
  408228:	cbz	w9, 4081fc <__fxstatat@plt+0x57ac>
  40822c:	strb	w8, [x24], #1
  408230:	ldrb	w8, [x19], #1
  408234:	cbnz	w8, 408220 <__fxstatat@plt+0x57d0>
  408238:	mov	x0, x21
  40823c:	str	x20, [sp, #16]
  408240:	strb	wzr, [x24]
  408244:	bl	402430 <strlen@plt>
  408248:	add	x8, x0, #0x1
  40824c:	cmp	x8, x26
  408250:	b.hi	40849c <__fxstatat@plt+0x5a4c>  // b.pmore
  408254:	add	x0, x8, x8, lsl #1
  408258:	bl	412e10 <__fxstatat@plt+0x103c0>
  40825c:	ldrb	w8, [x21]
  408260:	mov	x24, x0
  408264:	mov	x25, x0
  408268:	cbz	w8, 4082d0 <__fxstatat@plt+0x5880>
  40826c:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x6060>
  408270:	add	x19, x21, #0x1
  408274:	mov	w20, #0x2f                  	// #47
  408278:	add	x26, x26, #0x2c2
  40827c:	mov	x25, x24
  408280:	b	408290 <__fxstatat@plt+0x5840>
  408284:	strb	w20, [x25], #1
  408288:	ldrb	w8, [x19], #1
  40828c:	cbz	w8, 4082d0 <__fxstatat@plt+0x5880>
  408290:	and	w9, w8, #0xff
  408294:	cmp	w9, #0x2f
  408298:	b.eq	408284 <__fxstatat@plt+0x5834>  // b.none
  40829c:	and	x9, x8, #0xff
  4082a0:	ldrb	w9, [x28, x9]
  4082a4:	cbz	w9, 4082b0 <__fxstatat@plt+0x5860>
  4082a8:	strb	w8, [x25], #1
  4082ac:	b	408288 <__fxstatat@plt+0x5838>
  4082b0:	and	w4, w8, #0xff
  4082b4:	mov	w1, #0x1                   	// #1
  4082b8:	mov	x2, #0xffffffffffffffff    	// #-1
  4082bc:	mov	x0, x25
  4082c0:	mov	x3, x26
  4082c4:	bl	402440 <__sprintf_chk@plt>
  4082c8:	add	x25, x25, w0, sxtw
  4082cc:	b	408288 <__fxstatat@plt+0x5838>
  4082d0:	strb	wzr, [x25]
  4082d4:	ldrb	w8, [x24]
  4082d8:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x3060>
  4082dc:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  4082e0:	add	x9, x9, #0xf66
  4082e4:	add	x10, x10, #0x2c1
  4082e8:	cmp	w8, #0x2f
  4082ec:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4082f0:	csel	x3, x10, x9, eq  // eq = none
  4082f4:	add	x1, x1, #0x2a7
  4082f8:	mov	w0, #0x1                   	// #1
  4082fc:	mov	x2, x23
  408300:	mov	x4, x24
  408304:	bl	402670 <__printf_chk@plt>
  408308:	mov	x0, x23
  40830c:	bl	402840 <free@plt>
  408310:	mov	x0, x24
  408314:	bl	402840 <free@plt>
  408318:	ldp	x19, x20, [sp, #8]
  40831c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  408320:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x18060>
  408324:	b	40832c <__fxstatat@plt+0x58dc>
  408328:	mov	w27, wzr
  40832c:	cmp	x22, #0x0
  408330:	cset	w24, ne  // ne = any
  408334:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  408338:	cbz	x22, 408380 <__fxstatat@plt+0x5930>
  40833c:	ldrb	w8, [x23, #1661]
  408340:	cmp	w8, #0x1
  408344:	b.ne	408384 <__fxstatat@plt+0x5934>  // b.any
  408348:	ldp	x8, x9, [x22, #24]
  40834c:	sub	x9, x9, x8
  408350:	cmp	x9, #0x7
  408354:	b.hi	408368 <__fxstatat@plt+0x5918>  // b.pmore
  408358:	mov	w1, #0x8                   	// #8
  40835c:	mov	x0, x22
  408360:	bl	413d8c <_obstack_newchunk@@Base>
  408364:	ldr	x8, [x22, #24]
  408368:	ldr	x9, [x28, #1880]
  40836c:	str	x9, [x8]
  408370:	ldr	x8, [x22, #24]
  408374:	add	x8, x8, #0x8
  408378:	str	x8, [x22, #24]
  40837c:	b	408384 <__fxstatat@plt+0x5934>
  408380:	mov	w24, wzr
  408384:	ldr	x9, [sp, #32]
  408388:	ldr	x3, [x26, #1456]
  40838c:	cmp	w27, #0x0
  408390:	mov	w8, #0x2                   	// #2
  408394:	csel	x8, x8, xzr, ne  // ne = any
  408398:	sub	x2, x19, x8
  40839c:	add	x0, x9, x27
  4083a0:	mov	w1, #0x1                   	// #1
  4083a4:	bl	402410 <fwrite_unlocked@plt>
  4083a8:	ldr	x8, [x28, #1880]
  4083ac:	add	x8, x8, x19
  4083b0:	str	x8, [x28, #1880]
  4083b4:	cbz	w24, 4083f8 <__fxstatat@plt+0x59a8>
  4083b8:	ldrb	w8, [x23, #1661]
  4083bc:	cmp	w8, #0x1
  4083c0:	b.ne	4083f8 <__fxstatat@plt+0x59a8>  // b.any
  4083c4:	ldp	x8, x9, [x22, #24]
  4083c8:	sub	x9, x9, x8
  4083cc:	cmp	x9, #0x7
  4083d0:	b.hi	4083e4 <__fxstatat@plt+0x5994>  // b.pmore
  4083d4:	mov	w1, #0x8                   	// #8
  4083d8:	mov	x0, x22
  4083dc:	bl	413d8c <_obstack_newchunk@@Base>
  4083e0:	ldr	x8, [x22, #24]
  4083e4:	ldr	x9, [x28, #1880]
  4083e8:	str	x9, [x8]
  4083ec:	ldr	x8, [x22, #24]
  4083f0:	add	x8, x8, #0x8
  4083f4:	str	x8, [x22, #24]
  4083f8:	cbz	x21, 408438 <__fxstatat@plt+0x59e8>
  4083fc:	ldr	x1, [x26, #1456]
  408400:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  408404:	add	x0, x0, #0x2bb
  408408:	bl	402980 <fputs_unlocked@plt>
  40840c:	cbz	w27, 408438 <__fxstatat@plt+0x59e8>
  408410:	ldr	x0, [x26, #1456]
  408414:	ldr	x9, [sp, #32]
  408418:	ldp	x8, x10, [x0, #40]
  40841c:	add	x9, x9, x19
  408420:	ldurb	w1, [x9, #-1]
  408424:	cmp	x8, x10
  408428:	b.cs	408494 <__fxstatat@plt+0x5a44>  // b.hs, b.nlast
  40842c:	add	x9, x8, #0x1
  408430:	str	x9, [x0, #40]
  408434:	strb	w1, [x8]
  408438:	ldr	x0, [sp, #32]
  40843c:	add	x8, sp, #0x28
  408440:	cmp	x0, x8
  408444:	b.eq	408454 <__fxstatat@plt+0x5a04>  // b.none
  408448:	cmp	x0, x20
  40844c:	b.eq	408454 <__fxstatat@plt+0x5a04>  // b.none
  408450:	bl	402840 <free@plt>
  408454:	ldrb	w8, [sp, #28]
  408458:	add	x0, x19, x8
  40845c:	add	sp, sp, #0x2, lsl #12
  408460:	add	sp, sp, #0x30
  408464:	ldp	x20, x19, [sp, #80]
  408468:	ldp	x22, x21, [sp, #64]
  40846c:	ldp	x24, x23, [sp, #48]
  408470:	ldp	x26, x25, [sp, #32]
  408474:	ldp	x28, x27, [sp, #16]
  408478:	ldp	x29, x30, [sp], #96
  40847c:	ret
  408480:	mov	w1, #0x20                  	// #32
  408484:	bl	402790 <__overflow@plt>
  408488:	b	4080cc <__fxstatat@plt+0x567c>
  40848c:	bl	402790 <__overflow@plt>
  408490:	b	40819c <__fxstatat@plt+0x574c>
  408494:	bl	402790 <__overflow@plt>
  408498:	b	408438 <__fxstatat@plt+0x59e8>
  40849c:	bl	413124 <__fxstatat@plt+0x106d4>
  4084a0:	sub	sp, sp, #0xd0
  4084a4:	stp	x20, x19, [sp, #192]
  4084a8:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x18060>
  4084ac:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  4084b0:	str	x25, [sp, #144]
  4084b4:	stp	x24, x23, [sp, #160]
  4084b8:	stp	x22, x21, [sp, #176]
  4084bc:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  4084c0:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x18060>
  4084c4:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  4084c8:	add	x19, x19, #0x368
  4084cc:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  4084d0:	add	x20, x20, #0x878
  4084d4:	stp	x29, x30, [sp, #128]
  4084d8:	add	x29, sp, #0x80
  4084dc:	b	408504 <__fxstatat@plt+0x5ab4>
  4084e0:	mov	w0, w21
  4084e4:	mov	x1, xzr
  4084e8:	bl	4025b0 <signal@plt>
  4084ec:	mov	w0, w21
  4084f0:	bl	402480 <raise@plt>
  4084f4:	mov	x1, sp
  4084f8:	mov	w0, #0x2                   	// #2
  4084fc:	mov	x2, xzr
  408500:	bl	4024a0 <sigprocmask@plt>
  408504:	ldr	w8, [x22, #1896]
  408508:	cbnz	w8, 408514 <__fxstatat@plt+0x5ac4>
  40850c:	ldr	w8, [x23, #1892]
  408510:	cbz	w8, 408564 <__fxstatat@plt+0x5b14>
  408514:	ldrb	w8, [x24, #1888]
  408518:	cmp	w8, #0x1
  40851c:	b.ne	408530 <__fxstatat@plt+0x5ae0>  // b.any
  408520:	mov	x0, x19
  408524:	bl	407a6c <__fxstatat@plt+0x501c>
  408528:	add	x0, x19, #0x10
  40852c:	bl	407a6c <__fxstatat@plt+0x501c>
  408530:	ldr	x0, [x25, #1456]
  408534:	bl	4028a0 <fflush_unlocked@plt>
  408538:	mov	x2, sp
  40853c:	mov	w0, wzr
  408540:	mov	x1, x20
  408544:	bl	4024a0 <sigprocmask@plt>
  408548:	ldr	w21, [x22, #1896]
  40854c:	ldr	w8, [x23, #1892]
  408550:	cbz	w8, 4084e0 <__fxstatat@plt+0x5a90>
  408554:	sub	w8, w8, #0x1
  408558:	str	w8, [x23, #1892]
  40855c:	mov	w21, #0x13                  	// #19
  408560:	b	4084ec <__fxstatat@plt+0x5a9c>
  408564:	ldp	x20, x19, [sp, #192]
  408568:	ldp	x22, x21, [sp, #176]
  40856c:	ldp	x24, x23, [sp, #160]
  408570:	ldr	x25, [sp, #144]
  408574:	ldp	x29, x30, [sp, #128]
  408578:	add	sp, sp, #0xd0
  40857c:	ret
  408580:	sub	sp, sp, #0x80
  408584:	stp	x29, x30, [sp, #32]
  408588:	stp	x28, x27, [sp, #48]
  40858c:	stp	x26, x25, [sp, #64]
  408590:	stp	x24, x23, [sp, #80]
  408594:	stp	x22, x21, [sp, #96]
  408598:	stp	x20, x19, [sp, #112]
  40859c:	ldr	x21, [x0]
  4085a0:	mov	x20, x0
  4085a4:	mov	x0, x2
  4085a8:	add	x29, sp, #0x20
  4085ac:	mov	x28, x5
  4085b0:	mov	x19, x4
  4085b4:	mov	w23, w3
  4085b8:	mov	x25, x2
  4085bc:	mov	x24, x1
  4085c0:	bl	410d6c <__fxstatat@plt+0xe31c>
  4085c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  4085c8:	sub	w9, w0, #0x1
  4085cc:	ldrb	w8, [x8, #2296]
  4085d0:	cmp	w9, #0x2
  4085d4:	cset	w9, cc  // cc = lo, ul, last
  4085d8:	cmp	w0, #0x0
  4085dc:	cset	w10, eq  // eq = none
  4085e0:	orr	w9, w10, w9
  4085e4:	and	w22, w8, w9
  4085e8:	cbz	w23, 40865c <__fxstatat@plt+0x5c0c>
  4085ec:	mov	w1, #0x2000                	// #8192
  4085f0:	mov	x3, #0xffffffffffffffff    	// #-1
  4085f4:	mov	x0, x21
  4085f8:	mov	x2, x24
  4085fc:	mov	x4, x25
  408600:	bl	410e2c <__fxstatat@plt+0xe3dc>
  408604:	mov	x23, x0
  408608:	cmp	x0, #0x2, lsl #12
  40860c:	b.cc	408634 <__fxstatat@plt+0x5be4>  // b.lo, b.ul, b.last
  408610:	add	x26, x23, #0x1
  408614:	mov	x0, x26
  408618:	bl	412e10 <__fxstatat@plt+0x103c0>
  40861c:	mov	x3, #0xffffffffffffffff    	// #-1
  408620:	mov	x1, x26
  408624:	mov	x2, x24
  408628:	mov	x4, x25
  40862c:	mov	x21, x0
  408630:	bl	410e2c <__fxstatat@plt+0xe3dc>
  408634:	ldrb	w8, [x24]
  408638:	ldrb	w9, [x21]
  40863c:	cmp	w8, w9
  408640:	b.ne	40869c <__fxstatat@plt+0x5c4c>  // b.any
  408644:	mov	x0, x24
  408648:	bl	402430 <strlen@plt>
  40864c:	cmp	x0, x23
  408650:	cset	w25, ne  // ne = any
  408654:	cbnz	w22, 4086a4 <__fxstatat@plt+0x5c54>
  408658:	b	408810 <__fxstatat@plt+0x5dc0>
  40865c:	mov	x0, x24
  408660:	bl	402430 <strlen@plt>
  408664:	mov	x23, x0
  408668:	cbz	w22, 40887c <__fxstatat@plt+0x5e2c>
  40866c:	cmp	x23, #0x2, lsl #12
  408670:	add	x25, x23, #0x1
  408674:	b.cc	408684 <__fxstatat@plt+0x5c34>  // b.lo, b.ul, b.last
  408678:	mov	x0, x25
  40867c:	bl	412e10 <__fxstatat@plt+0x103c0>
  408680:	mov	x21, x0
  408684:	mov	x0, x21
  408688:	mov	x1, x24
  40868c:	mov	x2, x25
  408690:	bl	4023c0 <memcpy@plt>
  408694:	mov	w25, wzr
  408698:	b	4086a4 <__fxstatat@plt+0x5c54>
  40869c:	mov	w25, #0x1                   	// #1
  4086a0:	cbz	w22, 408810 <__fxstatat@plt+0x5dc0>
  4086a4:	bl	402850 <__ctype_get_mb_cur_max@plt>
  4086a8:	cmp	x0, #0x1
  4086ac:	add	x27, x21, x23
  4086b0:	b.ls	408838 <__fxstatat@plt+0x5de8>  // b.plast
  4086b4:	cmp	x23, #0x1
  4086b8:	mov	x26, xzr
  4086bc:	str	x28, [sp, #8]
  4086c0:	b.lt	4088c4 <__fxstatat@plt+0x5e74>  // b.tstop
  4086c4:	adrp	x28, 416000 <_obstack_memory_used@@Base+0x2060>
  4086c8:	add	x28, x28, #0x2c9
  4086cc:	mov	x22, x21
  4086d0:	mov	x23, x21
  4086d4:	ldrb	w8, [x23]
  4086d8:	sub	w9, w8, #0x20
  4086dc:	cmp	w9, #0x5e
  4086e0:	b.hi	40870c <__fxstatat@plt+0x5cbc>  // b.pmore
  4086e4:	adr	x10, 4086f4 <__fxstatat@plt+0x5ca4>
  4086e8:	ldrb	w11, [x28, x9]
  4086ec:	add	x10, x10, x11, lsl #2
  4086f0:	br	x10
  4086f4:	add	x23, x23, #0x1
  4086f8:	strb	w8, [x22], #1
  4086fc:	add	x26, x26, #0x1
  408700:	cmp	x23, x27
  408704:	b.cc	4086d4 <__fxstatat@plt+0x5c84>  // b.lo, b.ul, b.last
  408708:	b	4088c8 <__fxstatat@plt+0x5e78>
  40870c:	stur	xzr, [x29, #-8]
  408710:	b	408734 <__fxstatat@plt+0x5ce4>
  408714:	mov	w8, #0x3f                  	// #63
  408718:	add	x23, x23, x24
  40871c:	strb	w8, [x22], #1
  408720:	mov	w8, #0x1                   	// #1
  408724:	sub	x0, x29, #0x8
  408728:	add	x26, x8, x26
  40872c:	bl	402780 <mbsinit@plt>
  408730:	cbnz	w0, 408700 <__fxstatat@plt+0x5cb0>
  408734:	sub	x2, x27, x23
  408738:	sub	x0, x29, #0xc
  40873c:	sub	x3, x29, #0x8
  408740:	mov	x1, x23
  408744:	bl	413bc8 <__fxstatat@plt+0x11178>
  408748:	cbz	x0, 408764 <__fxstatat@plt+0x5d14>
  40874c:	mov	x24, x0
  408750:	cmn	x0, #0x2
  408754:	b.eq	4087f8 <__fxstatat@plt+0x5da8>  // b.none
  408758:	cmn	x24, #0x1
  40875c:	b.ne	408768 <__fxstatat@plt+0x5d18>  // b.any
  408760:	b	408804 <__fxstatat@plt+0x5db4>
  408764:	mov	w24, #0x1                   	// #1
  408768:	ldur	w0, [x29, #-12]
  40876c:	bl	402600 <wcwidth@plt>
  408770:	tbnz	w0, #31, 408714 <__fxstatat@plt+0x5cc4>
  408774:	cmp	x24, #0x20
  408778:	b.cc	408794 <__fxstatat@plt+0x5d44>  // b.lo, b.ul, b.last
  40877c:	add	x8, x23, x24
  408780:	cmp	x22, x8
  408784:	b.cs	4087b8 <__fxstatat@plt+0x5d68>  // b.hs, b.nlast
  408788:	add	x8, x22, x24
  40878c:	cmp	x23, x8
  408790:	b.cs	4087b8 <__fxstatat@plt+0x5d68>  // b.hs, b.nlast
  408794:	mov	x8, x24
  408798:	mov	x9, x22
  40879c:	ldrb	w10, [x23], #1
  4087a0:	subs	x8, x8, #0x1
  4087a4:	strb	w10, [x9], #1
  4087a8:	b.ne	40879c <__fxstatat@plt+0x5d4c>  // b.any
  4087ac:	sxtw	x8, w0
  4087b0:	mov	x22, x9
  4087b4:	b	408724 <__fxstatat@plt+0x5cd4>
  4087b8:	and	x10, x24, #0xffffffffffffffe0
  4087bc:	and	x8, x24, #0x1f
  4087c0:	add	x11, x23, #0x10
  4087c4:	add	x9, x22, x10
  4087c8:	add	x23, x23, x10
  4087cc:	add	x12, x22, #0x10
  4087d0:	mov	x13, x10
  4087d4:	ldp	q0, q1, [x11, #-16]
  4087d8:	add	x11, x11, #0x20
  4087dc:	subs	x13, x13, #0x20
  4087e0:	stp	q0, q1, [x12, #-16]
  4087e4:	add	x12, x12, #0x20
  4087e8:	b.ne	4087d4 <__fxstatat@plt+0x5d84>  // b.any
  4087ec:	cmp	x24, x10
  4087f0:	b.ne	40879c <__fxstatat@plt+0x5d4c>  // b.any
  4087f4:	b	4087ac <__fxstatat@plt+0x5d5c>
  4087f8:	mov	x23, x27
  4087fc:	mov	w8, #0x3f                  	// #63
  408800:	b	4086f8 <__fxstatat@plt+0x5ca8>
  408804:	add	x23, x23, #0x1
  408808:	mov	w8, #0x3f                  	// #63
  40880c:	b	4086f8 <__fxstatat@plt+0x5ca8>
  408810:	cbz	x19, 408888 <__fxstatat@plt+0x5e38>
  408814:	bl	402850 <__ctype_get_mb_cur_max@plt>
  408818:	cmp	x0, #0x2
  40881c:	b.cc	40888c <__fxstatat@plt+0x5e3c>  // b.lo, b.ul, b.last
  408820:	mov	x0, x21
  408824:	mov	x1, x23
  408828:	mov	w2, wzr
  40882c:	bl	40f2b8 <__fxstatat@plt+0xc868>
  408830:	sxtw	x26, w0
  408834:	b	408944 <__fxstatat@plt+0x5ef4>
  408838:	cmp	x23, #0x1
  40883c:	b.lt	408874 <__fxstatat@plt+0x5e24>  // b.tstop
  408840:	bl	402820 <__ctype_b_loc@plt>
  408844:	mov	w8, #0x3f                  	// #63
  408848:	mov	x9, x21
  40884c:	b	40885c <__fxstatat@plt+0x5e0c>
  408850:	add	x9, x9, #0x1
  408854:	cmp	x9, x27
  408858:	b.cs	408874 <__fxstatat@plt+0x5e24>  // b.hs, b.nlast
  40885c:	ldr	x10, [x0]
  408860:	ldrb	w11, [x9]
  408864:	ldrh	w10, [x10, x11, lsl #1]
  408868:	tbnz	w10, #14, 408850 <__fxstatat@plt+0x5e00>
  40886c:	strb	w8, [x9]
  408870:	b	408850 <__fxstatat@plt+0x5e00>
  408874:	mov	x26, x23
  408878:	b	408944 <__fxstatat@plt+0x5ef4>
  40887c:	mov	w25, wzr
  408880:	mov	x21, x24
  408884:	cbnz	x19, 408814 <__fxstatat@plt+0x5dc4>
  408888:	b	408944 <__fxstatat@plt+0x5ef4>
  40888c:	cmp	x23, #0x1
  408890:	b.lt	4088d4 <__fxstatat@plt+0x5e84>  // b.tstop
  408894:	add	x22, x21, x23
  408898:	bl	402820 <__ctype_b_loc@plt>
  40889c:	add	x9, x21, #0x1
  4088a0:	ldr	x8, [x0]
  4088a4:	cmp	x22, x9
  4088a8:	csinc	x9, x22, x21, hi  // hi = pmore
  4088ac:	sub	x10, x9, x21
  4088b0:	cmp	x10, #0x2
  4088b4:	b.cs	4088dc <__fxstatat@plt+0x5e8c>  // b.hs, b.nlast
  4088b8:	mov	x26, xzr
  4088bc:	mov	x9, x21
  4088c0:	b	40892c <__fxstatat@plt+0x5edc>
  4088c4:	mov	x22, x21
  4088c8:	ldr	x28, [sp, #8]
  4088cc:	sub	x23, x22, x21
  4088d0:	b	408944 <__fxstatat@plt+0x5ef4>
  4088d4:	mov	x26, xzr
  4088d8:	b	408944 <__fxstatat@plt+0x5ef4>
  4088dc:	and	x13, x10, #0xfffffffffffffffe
  4088e0:	mov	x14, xzr
  4088e4:	mov	x11, xzr
  4088e8:	mov	x12, xzr
  4088ec:	add	x9, x21, x13
  4088f0:	add	x15, x21, x14
  4088f4:	ldrb	w16, [x15]
  4088f8:	ldrb	w15, [x15, #1]
  4088fc:	add	x14, x14, #0x2
  408900:	cmp	x13, x14
  408904:	ldrh	w16, [x8, x16, lsl #1]
  408908:	ldrh	w15, [x8, x15, lsl #1]
  40890c:	ubfx	x16, x16, #14, #1
  408910:	ubfx	x15, x15, #14, #1
  408914:	add	x11, x11, x16
  408918:	add	x12, x12, x15
  40891c:	b.ne	4088f0 <__fxstatat@plt+0x5ea0>  // b.any
  408920:	cmp	x10, x13
  408924:	add	x26, x12, x11
  408928:	b.eq	408944 <__fxstatat@plt+0x5ef4>  // b.none
  40892c:	ldrb	w10, [x9], #1
  408930:	ldrh	w10, [x8, x10, lsl #1]
  408934:	cmp	x9, x22
  408938:	ubfx	x10, x10, #14, #1
  40893c:	add	x26, x26, x10
  408940:	b.cc	40892c <__fxstatat@plt+0x5edc>  // b.lo, b.ul, b.last
  408944:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  408948:	ldrb	w8, [x8, #2384]
  40894c:	cbz	w8, 408964 <__fxstatat@plt+0x5f14>
  408950:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  408954:	ldrb	w8, [x8, #1401]
  408958:	cmp	w8, #0x1
  40895c:	b.ne	408998 <__fxstatat@plt+0x5f48>  // b.any
  408960:	eor	w8, w25, #0x1
  408964:	strb	w8, [x28]
  408968:	cbz	x19, 408970 <__fxstatat@plt+0x5f20>
  40896c:	str	x26, [x19]
  408970:	str	x21, [x20]
  408974:	mov	x0, x23
  408978:	ldp	x20, x19, [sp, #112]
  40897c:	ldp	x22, x21, [sp, #96]
  408980:	ldp	x24, x23, [sp, #80]
  408984:	ldp	x26, x25, [sp, #64]
  408988:	ldp	x28, x27, [sp, #48]
  40898c:	ldp	x29, x30, [sp, #32]
  408990:	add	sp, sp, #0x80
  408994:	ret
  408998:	mov	w8, wzr
  40899c:	strb	w8, [x28]
  4089a0:	cbnz	x19, 40896c <__fxstatat@plt+0x5f1c>
  4089a4:	b	408970 <__fxstatat@plt+0x5f20>
  4089a8:	stp	x29, x30, [sp, #-32]!
  4089ac:	stp	x20, x19, [sp, #16]
  4089b0:	ldr	x19, [x0]
  4089b4:	ldr	x20, [x1]
  4089b8:	mov	x29, sp
  4089bc:	bl	4029e0 <__errno_location@plt>
  4089c0:	str	wzr, [x0]
  4089c4:	mov	x0, x19
  4089c8:	mov	x1, x20
  4089cc:	ldp	x20, x19, [sp, #16]
  4089d0:	ldp	x29, x30, [sp], #32
  4089d4:	b	402990 <strcoll@plt>
  4089d8:	stp	x29, x30, [sp, #-32]!
  4089dc:	stp	x20, x19, [sp, #16]
  4089e0:	ldr	w9, [x0, #152]
  4089e4:	mov	w8, #0x1                   	// #1
  4089e8:	mov	x29, sp
  4089ec:	cmp	w9, #0x3
  4089f0:	b.eq	408a0c <__fxstatat@plt+0x5fbc>  // b.none
  4089f4:	cmp	w9, #0x9
  4089f8:	b.eq	408a0c <__fxstatat@plt+0x5fbc>  // b.none
  4089fc:	ldr	w8, [x0, #156]
  408a00:	and	w8, w8, #0xf000
  408a04:	cmp	w8, #0x4, lsl #12
  408a08:	cset	w8, eq  // eq = none
  408a0c:	ldr	w9, [x1, #152]
  408a10:	cmp	w9, #0x9
  408a14:	b.eq	408a20 <__fxstatat@plt+0x5fd0>  // b.none
  408a18:	cmp	w9, #0x3
  408a1c:	b.ne	408a2c <__fxstatat@plt+0x5fdc>  // b.any
  408a20:	tbnz	w8, #0, 408a68 <__fxstatat@plt+0x6018>
  408a24:	mov	w8, #0x1                   	// #1
  408a28:	b	408a58 <__fxstatat@plt+0x6008>
  408a2c:	ldr	w9, [x1, #156]
  408a30:	eor	w10, w8, #0x1
  408a34:	mov	w11, #0x1                   	// #1
  408a38:	and	w9, w9, #0xf000
  408a3c:	cmp	w9, #0x4, lsl #12
  408a40:	cset	w9, eq  // eq = none
  408a44:	orr	w10, w9, w10
  408a48:	cmp	w10, #0x0
  408a4c:	eor	w9, w8, w9
  408a50:	cneg	w8, w11, eq  // eq = none
  408a54:	tbz	w9, #0, 408a68 <__fxstatat@plt+0x6018>
  408a58:	ldp	x20, x19, [sp, #16]
  408a5c:	mov	w0, w8
  408a60:	ldp	x29, x30, [sp], #32
  408a64:	ret
  408a68:	ldr	x19, [x0]
  408a6c:	ldr	x20, [x1]
  408a70:	bl	4029e0 <__errno_location@plt>
  408a74:	str	wzr, [x0]
  408a78:	mov	x0, x19
  408a7c:	mov	x1, x20
  408a80:	ldp	x20, x19, [sp, #16]
  408a84:	ldp	x29, x30, [sp], #32
  408a88:	b	402990 <strcoll@plt>
  408a8c:	stp	x29, x30, [sp, #-32]!
  408a90:	stp	x20, x19, [sp, #16]
  408a94:	ldr	x19, [x1]
  408a98:	ldr	x20, [x0]
  408a9c:	mov	x29, sp
  408aa0:	bl	4029e0 <__errno_location@plt>
  408aa4:	str	wzr, [x0]
  408aa8:	mov	x0, x19
  408aac:	mov	x1, x20
  408ab0:	ldp	x20, x19, [sp, #16]
  408ab4:	ldp	x29, x30, [sp], #32
  408ab8:	b	402990 <strcoll@plt>
  408abc:	stp	x29, x30, [sp, #-32]!
  408ac0:	stp	x20, x19, [sp, #16]
  408ac4:	ldr	w9, [x0, #152]
  408ac8:	mov	w8, #0x1                   	// #1
  408acc:	mov	x29, sp
  408ad0:	cmp	w9, #0x3
  408ad4:	b.eq	408af0 <__fxstatat@plt+0x60a0>  // b.none
  408ad8:	cmp	w9, #0x9
  408adc:	b.eq	408af0 <__fxstatat@plt+0x60a0>  // b.none
  408ae0:	ldr	w8, [x0, #156]
  408ae4:	and	w8, w8, #0xf000
  408ae8:	cmp	w8, #0x4, lsl #12
  408aec:	cset	w8, eq  // eq = none
  408af0:	ldr	w9, [x1, #152]
  408af4:	cmp	w9, #0x9
  408af8:	b.eq	408b04 <__fxstatat@plt+0x60b4>  // b.none
  408afc:	cmp	w9, #0x3
  408b00:	b.ne	408b10 <__fxstatat@plt+0x60c0>  // b.any
  408b04:	tbnz	w8, #0, 408b4c <__fxstatat@plt+0x60fc>
  408b08:	mov	w8, #0x1                   	// #1
  408b0c:	b	408b3c <__fxstatat@plt+0x60ec>
  408b10:	ldr	w9, [x1, #156]
  408b14:	eor	w10, w8, #0x1
  408b18:	mov	w11, #0x1                   	// #1
  408b1c:	and	w9, w9, #0xf000
  408b20:	cmp	w9, #0x4, lsl #12
  408b24:	cset	w9, eq  // eq = none
  408b28:	orr	w10, w9, w10
  408b2c:	cmp	w10, #0x0
  408b30:	eor	w9, w8, w9
  408b34:	cneg	w8, w11, eq  // eq = none
  408b38:	tbz	w9, #0, 408b4c <__fxstatat@plt+0x60fc>
  408b3c:	ldp	x20, x19, [sp, #16]
  408b40:	mov	w0, w8
  408b44:	ldp	x29, x30, [sp], #32
  408b48:	ret
  408b4c:	ldr	x19, [x1]
  408b50:	ldr	x20, [x0]
  408b54:	bl	4029e0 <__errno_location@plt>
  408b58:	str	wzr, [x0]
  408b5c:	mov	x0, x19
  408b60:	mov	x1, x20
  408b64:	ldp	x20, x19, [sp, #16]
  408b68:	ldp	x29, x30, [sp], #32
  408b6c:	b	402990 <strcoll@plt>
  408b70:	ldr	x0, [x0]
  408b74:	ldr	x1, [x1]
  408b78:	b	402800 <strcmp@plt>
  408b7c:	ldr	w9, [x0, #152]
  408b80:	mov	w8, #0x1                   	// #1
  408b84:	cmp	w9, #0x3
  408b88:	b.eq	408ba4 <__fxstatat@plt+0x6154>  // b.none
  408b8c:	cmp	w9, #0x9
  408b90:	b.eq	408ba4 <__fxstatat@plt+0x6154>  // b.none
  408b94:	ldr	w8, [x0, #156]
  408b98:	and	w8, w8, #0xf000
  408b9c:	cmp	w8, #0x4, lsl #12
  408ba0:	cset	w8, eq  // eq = none
  408ba4:	ldr	w9, [x1, #152]
  408ba8:	cmp	w9, #0x9
  408bac:	b.eq	408bb8 <__fxstatat@plt+0x6168>  // b.none
  408bb0:	cmp	w9, #0x3
  408bb4:	b.ne	408bc4 <__fxstatat@plt+0x6174>  // b.any
  408bb8:	tbnz	w8, #0, 408bf8 <__fxstatat@plt+0x61a8>
  408bbc:	mov	w0, #0x1                   	// #1
  408bc0:	ret
  408bc4:	ldr	w9, [x1, #156]
  408bc8:	eor	w10, w8, #0x1
  408bcc:	mov	w11, #0x1                   	// #1
  408bd0:	and	w9, w9, #0xf000
  408bd4:	cmp	w9, #0x4, lsl #12
  408bd8:	cset	w9, eq  // eq = none
  408bdc:	orr	w10, w9, w10
  408be0:	cmp	w10, #0x0
  408be4:	eor	w9, w8, w9
  408be8:	cneg	w8, w11, eq  // eq = none
  408bec:	tbz	w9, #0, 408bf8 <__fxstatat@plt+0x61a8>
  408bf0:	mov	w0, w8
  408bf4:	ret
  408bf8:	ldr	x0, [x0]
  408bfc:	ldr	x1, [x1]
  408c00:	b	402800 <strcmp@plt>
  408c04:	ldr	x8, [x1]
  408c08:	ldr	x1, [x0]
  408c0c:	mov	x0, x8
  408c10:	b	402800 <strcmp@plt>
  408c14:	ldr	w9, [x0, #152]
  408c18:	mov	w8, #0x1                   	// #1
  408c1c:	cmp	w9, #0x3
  408c20:	b.eq	408c3c <__fxstatat@plt+0x61ec>  // b.none
  408c24:	cmp	w9, #0x9
  408c28:	b.eq	408c3c <__fxstatat@plt+0x61ec>  // b.none
  408c2c:	ldr	w8, [x0, #156]
  408c30:	and	w8, w8, #0xf000
  408c34:	cmp	w8, #0x4, lsl #12
  408c38:	cset	w8, eq  // eq = none
  408c3c:	ldr	w9, [x1, #152]
  408c40:	cmp	w9, #0x9
  408c44:	b.eq	408c50 <__fxstatat@plt+0x6200>  // b.none
  408c48:	cmp	w9, #0x3
  408c4c:	b.ne	408c5c <__fxstatat@plt+0x620c>  // b.any
  408c50:	tbnz	w8, #0, 408c90 <__fxstatat@plt+0x6240>
  408c54:	mov	w0, #0x1                   	// #1
  408c58:	ret
  408c5c:	ldr	w9, [x1, #156]
  408c60:	eor	w10, w8, #0x1
  408c64:	mov	w11, #0x1                   	// #1
  408c68:	and	w9, w9, #0xf000
  408c6c:	cmp	w9, #0x4, lsl #12
  408c70:	cset	w9, eq  // eq = none
  408c74:	orr	w10, w9, w10
  408c78:	cmp	w10, #0x0
  408c7c:	eor	w9, w8, w9
  408c80:	cneg	w8, w11, eq  // eq = none
  408c84:	tbz	w9, #0, 408c90 <__fxstatat@plt+0x6240>
  408c88:	mov	w0, w8
  408c8c:	ret
  408c90:	ldr	x8, [x1]
  408c94:	ldr	x1, [x0]
  408c98:	mov	x0, x8
  408c9c:	b	402800 <strcmp@plt>
  408ca0:	stp	x29, x30, [sp, #-64]!
  408ca4:	stp	x22, x21, [sp, #32]
  408ca8:	stp	x20, x19, [sp, #48]
  408cac:	ldr	x19, [x0]
  408cb0:	mov	x20, x1
  408cb4:	mov	w1, #0x2e                  	// #46
  408cb8:	str	x23, [sp, #16]
  408cbc:	mov	x0, x19
  408cc0:	mov	x29, sp
  408cc4:	bl	402730 <strrchr@plt>
  408cc8:	ldr	x20, [x20]
  408ccc:	mov	x21, x0
  408cd0:	mov	w1, #0x2e                  	// #46
  408cd4:	mov	x0, x20
  408cd8:	bl	402730 <strrchr@plt>
  408cdc:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  408ce0:	add	x8, x8, #0x2c1
  408ce4:	cmp	x21, #0x0
  408ce8:	csel	x22, x8, x21, eq  // eq = none
  408cec:	cmp	x0, #0x0
  408cf0:	csel	x23, x8, x0, eq  // eq = none
  408cf4:	bl	4029e0 <__errno_location@plt>
  408cf8:	mov	x21, x0
  408cfc:	str	wzr, [x0]
  408d00:	mov	x0, x22
  408d04:	mov	x1, x23
  408d08:	bl	402990 <strcoll@plt>
  408d0c:	cbz	w0, 408d24 <__fxstatat@plt+0x62d4>
  408d10:	ldp	x20, x19, [sp, #48]
  408d14:	ldp	x22, x21, [sp, #32]
  408d18:	ldr	x23, [sp, #16]
  408d1c:	ldp	x29, x30, [sp], #64
  408d20:	ret
  408d24:	str	wzr, [x21]
  408d28:	mov	x0, x19
  408d2c:	mov	x1, x20
  408d30:	ldp	x20, x19, [sp, #48]
  408d34:	ldp	x22, x21, [sp, #32]
  408d38:	ldr	x23, [sp, #16]
  408d3c:	ldp	x29, x30, [sp], #64
  408d40:	b	402990 <strcoll@plt>
  408d44:	stp	x29, x30, [sp, #-64]!
  408d48:	stp	x22, x21, [sp, #32]
  408d4c:	stp	x20, x19, [sp, #48]
  408d50:	ldr	w9, [x0, #152]
  408d54:	mov	x19, x1
  408d58:	mov	w8, #0x1                   	// #1
  408d5c:	str	x23, [sp, #16]
  408d60:	cmp	w9, #0x3
  408d64:	mov	x29, sp
  408d68:	b.eq	408d84 <__fxstatat@plt+0x6334>  // b.none
  408d6c:	cmp	w9, #0x9
  408d70:	b.eq	408d84 <__fxstatat@plt+0x6334>  // b.none
  408d74:	ldr	w8, [x0, #156]
  408d78:	and	w8, w8, #0xf000
  408d7c:	cmp	w8, #0x4, lsl #12
  408d80:	cset	w8, eq  // eq = none
  408d84:	ldr	w9, [x19, #152]
  408d88:	cmp	w9, #0x9
  408d8c:	b.eq	408d98 <__fxstatat@plt+0x6348>  // b.none
  408d90:	cmp	w9, #0x3
  408d94:	b.ne	408da4 <__fxstatat@plt+0x6354>  // b.any
  408d98:	tbnz	w8, #0, 408dd0 <__fxstatat@plt+0x6380>
  408d9c:	mov	w8, #0x1                   	// #1
  408da0:	b	408e2c <__fxstatat@plt+0x63dc>
  408da4:	ldr	w9, [x19, #156]
  408da8:	eor	w10, w8, #0x1
  408dac:	mov	w11, #0x1                   	// #1
  408db0:	and	w9, w9, #0xf000
  408db4:	cmp	w9, #0x4, lsl #12
  408db8:	cset	w9, eq  // eq = none
  408dbc:	orr	w10, w9, w10
  408dc0:	cmp	w10, #0x0
  408dc4:	eor	w9, w8, w9
  408dc8:	cneg	w8, w11, eq  // eq = none
  408dcc:	tbnz	w9, #0, 408e2c <__fxstatat@plt+0x63dc>
  408dd0:	ldr	x20, [x0]
  408dd4:	mov	w1, #0x2e                  	// #46
  408dd8:	mov	x0, x20
  408ddc:	bl	402730 <strrchr@plt>
  408de0:	ldr	x19, [x19]
  408de4:	mov	x21, x0
  408de8:	mov	w1, #0x2e                  	// #46
  408dec:	mov	x0, x19
  408df0:	bl	402730 <strrchr@plt>
  408df4:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  408df8:	add	x8, x8, #0x2c1
  408dfc:	cmp	x21, #0x0
  408e00:	csel	x22, x8, x21, eq  // eq = none
  408e04:	cmp	x0, #0x0
  408e08:	csel	x23, x8, x0, eq  // eq = none
  408e0c:	bl	4029e0 <__errno_location@plt>
  408e10:	mov	x21, x0
  408e14:	str	wzr, [x0]
  408e18:	mov	x0, x22
  408e1c:	mov	x1, x23
  408e20:	bl	402990 <strcoll@plt>
  408e24:	mov	w8, w0
  408e28:	cbz	w0, 408e44 <__fxstatat@plt+0x63f4>
  408e2c:	ldp	x20, x19, [sp, #48]
  408e30:	ldp	x22, x21, [sp, #32]
  408e34:	ldr	x23, [sp, #16]
  408e38:	mov	w0, w8
  408e3c:	ldp	x29, x30, [sp], #64
  408e40:	ret
  408e44:	str	wzr, [x21]
  408e48:	mov	x0, x20
  408e4c:	mov	x1, x19
  408e50:	ldp	x20, x19, [sp, #48]
  408e54:	ldp	x22, x21, [sp, #32]
  408e58:	ldr	x23, [sp, #16]
  408e5c:	ldp	x29, x30, [sp], #64
  408e60:	b	402990 <strcoll@plt>
  408e64:	stp	x29, x30, [sp, #-64]!
  408e68:	stp	x22, x21, [sp, #32]
  408e6c:	stp	x20, x19, [sp, #48]
  408e70:	ldr	x19, [x1]
  408e74:	mov	x20, x0
  408e78:	mov	w1, #0x2e                  	// #46
  408e7c:	str	x23, [sp, #16]
  408e80:	mov	x0, x19
  408e84:	mov	x29, sp
  408e88:	bl	402730 <strrchr@plt>
  408e8c:	ldr	x20, [x20]
  408e90:	mov	x21, x0
  408e94:	mov	w1, #0x2e                  	// #46
  408e98:	mov	x0, x20
  408e9c:	bl	402730 <strrchr@plt>
  408ea0:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  408ea4:	add	x8, x8, #0x2c1
  408ea8:	cmp	x21, #0x0
  408eac:	csel	x22, x8, x21, eq  // eq = none
  408eb0:	cmp	x0, #0x0
  408eb4:	csel	x23, x8, x0, eq  // eq = none
  408eb8:	bl	4029e0 <__errno_location@plt>
  408ebc:	mov	x21, x0
  408ec0:	str	wzr, [x0]
  408ec4:	mov	x0, x22
  408ec8:	mov	x1, x23
  408ecc:	bl	402990 <strcoll@plt>
  408ed0:	cbz	w0, 408ee8 <__fxstatat@plt+0x6498>
  408ed4:	ldp	x20, x19, [sp, #48]
  408ed8:	ldp	x22, x21, [sp, #32]
  408edc:	ldr	x23, [sp, #16]
  408ee0:	ldp	x29, x30, [sp], #64
  408ee4:	ret
  408ee8:	str	wzr, [x21]
  408eec:	mov	x0, x19
  408ef0:	mov	x1, x20
  408ef4:	ldp	x20, x19, [sp, #48]
  408ef8:	ldp	x22, x21, [sp, #32]
  408efc:	ldr	x23, [sp, #16]
  408f00:	ldp	x29, x30, [sp], #64
  408f04:	b	402990 <strcoll@plt>
  408f08:	stp	x29, x30, [sp, #-64]!
  408f0c:	stp	x22, x21, [sp, #32]
  408f10:	stp	x20, x19, [sp, #48]
  408f14:	ldr	w9, [x0, #152]
  408f18:	mov	x19, x0
  408f1c:	mov	w8, #0x1                   	// #1
  408f20:	str	x23, [sp, #16]
  408f24:	cmp	w9, #0x3
  408f28:	mov	x29, sp
  408f2c:	b.eq	408f48 <__fxstatat@plt+0x64f8>  // b.none
  408f30:	cmp	w9, #0x9
  408f34:	b.eq	408f48 <__fxstatat@plt+0x64f8>  // b.none
  408f38:	ldr	w8, [x19, #156]
  408f3c:	and	w8, w8, #0xf000
  408f40:	cmp	w8, #0x4, lsl #12
  408f44:	cset	w8, eq  // eq = none
  408f48:	ldr	w9, [x1, #152]
  408f4c:	cmp	w9, #0x9
  408f50:	b.eq	408f5c <__fxstatat@plt+0x650c>  // b.none
  408f54:	cmp	w9, #0x3
  408f58:	b.ne	408f68 <__fxstatat@plt+0x6518>  // b.any
  408f5c:	tbnz	w8, #0, 408f94 <__fxstatat@plt+0x6544>
  408f60:	mov	w0, #0x1                   	// #1
  408f64:	b	408fec <__fxstatat@plt+0x659c>
  408f68:	ldr	w9, [x1, #156]
  408f6c:	eor	w10, w8, #0x1
  408f70:	mov	w11, #0x1                   	// #1
  408f74:	and	w9, w9, #0xf000
  408f78:	cmp	w9, #0x4, lsl #12
  408f7c:	cset	w9, eq  // eq = none
  408f80:	orr	w10, w9, w10
  408f84:	cmp	w10, #0x0
  408f88:	eor	w8, w8, w9
  408f8c:	cneg	w0, w11, eq  // eq = none
  408f90:	tbnz	w8, #0, 408fec <__fxstatat@plt+0x659c>
  408f94:	ldr	x20, [x1]
  408f98:	mov	w1, #0x2e                  	// #46
  408f9c:	mov	x0, x20
  408fa0:	bl	402730 <strrchr@plt>
  408fa4:	ldr	x19, [x19]
  408fa8:	mov	x21, x0
  408fac:	mov	w1, #0x2e                  	// #46
  408fb0:	mov	x0, x19
  408fb4:	bl	402730 <strrchr@plt>
  408fb8:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  408fbc:	add	x8, x8, #0x2c1
  408fc0:	cmp	x21, #0x0
  408fc4:	csel	x22, x8, x21, eq  // eq = none
  408fc8:	cmp	x0, #0x0
  408fcc:	csel	x23, x8, x0, eq  // eq = none
  408fd0:	bl	4029e0 <__errno_location@plt>
  408fd4:	mov	x21, x0
  408fd8:	str	wzr, [x0]
  408fdc:	mov	x0, x22
  408fe0:	mov	x1, x23
  408fe4:	bl	402990 <strcoll@plt>
  408fe8:	cbz	w0, 409000 <__fxstatat@plt+0x65b0>
  408fec:	ldp	x20, x19, [sp, #48]
  408ff0:	ldp	x22, x21, [sp, #32]
  408ff4:	ldr	x23, [sp, #16]
  408ff8:	ldp	x29, x30, [sp], #64
  408ffc:	ret
  409000:	str	wzr, [x21]
  409004:	mov	x0, x20
  409008:	mov	x1, x19
  40900c:	ldp	x20, x19, [sp, #48]
  409010:	ldp	x22, x21, [sp, #32]
  409014:	ldr	x23, [sp, #16]
  409018:	ldp	x29, x30, [sp], #64
  40901c:	b	402990 <strcoll@plt>
  409020:	stp	x29, x30, [sp, #-48]!
  409024:	stp	x20, x19, [sp, #32]
  409028:	ldr	x19, [x0]
  40902c:	mov	x20, x1
  409030:	mov	w1, #0x2e                  	// #46
  409034:	str	x21, [sp, #16]
  409038:	mov	x0, x19
  40903c:	mov	x29, sp
  409040:	bl	402730 <strrchr@plt>
  409044:	ldr	x20, [x20]
  409048:	mov	x21, x0
  40904c:	mov	w1, #0x2e                  	// #46
  409050:	mov	x0, x20
  409054:	bl	402730 <strrchr@plt>
  409058:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40905c:	add	x9, x9, #0x2c1
  409060:	cmp	x21, #0x0
  409064:	csel	x8, x9, x21, eq  // eq = none
  409068:	cmp	x0, #0x0
  40906c:	csel	x1, x9, x0, eq  // eq = none
  409070:	mov	x0, x8
  409074:	bl	402800 <strcmp@plt>
  409078:	cbz	w0, 40908c <__fxstatat@plt+0x663c>
  40907c:	ldp	x20, x19, [sp, #32]
  409080:	ldr	x21, [sp, #16]
  409084:	ldp	x29, x30, [sp], #48
  409088:	ret
  40908c:	mov	x0, x19
  409090:	mov	x1, x20
  409094:	ldp	x20, x19, [sp, #32]
  409098:	ldr	x21, [sp, #16]
  40909c:	ldp	x29, x30, [sp], #48
  4090a0:	b	402800 <strcmp@plt>
  4090a4:	stp	x29, x30, [sp, #-48]!
  4090a8:	stp	x20, x19, [sp, #32]
  4090ac:	ldr	w9, [x0, #152]
  4090b0:	mov	x19, x1
  4090b4:	mov	w8, #0x1                   	// #1
  4090b8:	str	x21, [sp, #16]
  4090bc:	cmp	w9, #0x3
  4090c0:	mov	x29, sp
  4090c4:	b.eq	4090e0 <__fxstatat@plt+0x6690>  // b.none
  4090c8:	cmp	w9, #0x9
  4090cc:	b.eq	4090e0 <__fxstatat@plt+0x6690>  // b.none
  4090d0:	ldr	w8, [x0, #156]
  4090d4:	and	w8, w8, #0xf000
  4090d8:	cmp	w8, #0x4, lsl #12
  4090dc:	cset	w8, eq  // eq = none
  4090e0:	ldr	w9, [x19, #152]
  4090e4:	cmp	w9, #0x9
  4090e8:	b.eq	4090f4 <__fxstatat@plt+0x66a4>  // b.none
  4090ec:	cmp	w9, #0x3
  4090f0:	b.ne	409100 <__fxstatat@plt+0x66b0>  // b.any
  4090f4:	tbnz	w8, #0, 40912c <__fxstatat@plt+0x66dc>
  4090f8:	mov	w8, #0x1                   	// #1
  4090fc:	b	409178 <__fxstatat@plt+0x6728>
  409100:	ldr	w9, [x19, #156]
  409104:	eor	w10, w8, #0x1
  409108:	mov	w11, #0x1                   	// #1
  40910c:	and	w9, w9, #0xf000
  409110:	cmp	w9, #0x4, lsl #12
  409114:	cset	w9, eq  // eq = none
  409118:	orr	w10, w9, w10
  40911c:	cmp	w10, #0x0
  409120:	eor	w9, w8, w9
  409124:	cneg	w8, w11, eq  // eq = none
  409128:	tbnz	w9, #0, 409178 <__fxstatat@plt+0x6728>
  40912c:	ldr	x20, [x0]
  409130:	mov	w1, #0x2e                  	// #46
  409134:	mov	x0, x20
  409138:	bl	402730 <strrchr@plt>
  40913c:	ldr	x19, [x19]
  409140:	mov	x21, x0
  409144:	mov	w1, #0x2e                  	// #46
  409148:	mov	x0, x19
  40914c:	bl	402730 <strrchr@plt>
  409150:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  409154:	add	x9, x9, #0x2c1
  409158:	cmp	x21, #0x0
  40915c:	csel	x8, x9, x21, eq  // eq = none
  409160:	cmp	x0, #0x0
  409164:	csel	x1, x9, x0, eq  // eq = none
  409168:	mov	x0, x8
  40916c:	bl	402800 <strcmp@plt>
  409170:	mov	w8, w0
  409174:	cbz	w0, 40918c <__fxstatat@plt+0x673c>
  409178:	ldp	x20, x19, [sp, #32]
  40917c:	ldr	x21, [sp, #16]
  409180:	mov	w0, w8
  409184:	ldp	x29, x30, [sp], #48
  409188:	ret
  40918c:	mov	x0, x20
  409190:	mov	x1, x19
  409194:	ldp	x20, x19, [sp, #32]
  409198:	ldr	x21, [sp, #16]
  40919c:	ldp	x29, x30, [sp], #48
  4091a0:	b	402800 <strcmp@plt>
  4091a4:	stp	x29, x30, [sp, #-48]!
  4091a8:	stp	x20, x19, [sp, #32]
  4091ac:	ldr	x19, [x1]
  4091b0:	mov	x20, x0
  4091b4:	mov	w1, #0x2e                  	// #46
  4091b8:	str	x21, [sp, #16]
  4091bc:	mov	x0, x19
  4091c0:	mov	x29, sp
  4091c4:	bl	402730 <strrchr@plt>
  4091c8:	ldr	x20, [x20]
  4091cc:	mov	x21, x0
  4091d0:	mov	w1, #0x2e                  	// #46
  4091d4:	mov	x0, x20
  4091d8:	bl	402730 <strrchr@plt>
  4091dc:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  4091e0:	add	x9, x9, #0x2c1
  4091e4:	cmp	x21, #0x0
  4091e8:	csel	x8, x9, x21, eq  // eq = none
  4091ec:	cmp	x0, #0x0
  4091f0:	csel	x1, x9, x0, eq  // eq = none
  4091f4:	mov	x0, x8
  4091f8:	bl	402800 <strcmp@plt>
  4091fc:	cbz	w0, 409210 <__fxstatat@plt+0x67c0>
  409200:	ldp	x20, x19, [sp, #32]
  409204:	ldr	x21, [sp, #16]
  409208:	ldp	x29, x30, [sp], #48
  40920c:	ret
  409210:	mov	x0, x19
  409214:	mov	x1, x20
  409218:	ldp	x20, x19, [sp, #32]
  40921c:	ldr	x21, [sp, #16]
  409220:	ldp	x29, x30, [sp], #48
  409224:	b	402800 <strcmp@plt>
  409228:	stp	x29, x30, [sp, #-48]!
  40922c:	stp	x20, x19, [sp, #32]
  409230:	ldr	w9, [x0, #152]
  409234:	mov	x19, x0
  409238:	mov	w8, #0x1                   	// #1
  40923c:	str	x21, [sp, #16]
  409240:	cmp	w9, #0x3
  409244:	mov	x29, sp
  409248:	b.eq	409264 <__fxstatat@plt+0x6814>  // b.none
  40924c:	cmp	w9, #0x9
  409250:	b.eq	409264 <__fxstatat@plt+0x6814>  // b.none
  409254:	ldr	w8, [x19, #156]
  409258:	and	w8, w8, #0xf000
  40925c:	cmp	w8, #0x4, lsl #12
  409260:	cset	w8, eq  // eq = none
  409264:	ldr	w9, [x1, #152]
  409268:	cmp	w9, #0x9
  40926c:	b.eq	409278 <__fxstatat@plt+0x6828>  // b.none
  409270:	cmp	w9, #0x3
  409274:	b.ne	409284 <__fxstatat@plt+0x6834>  // b.any
  409278:	tbnz	w8, #0, 4092b0 <__fxstatat@plt+0x6860>
  40927c:	mov	w0, #0x1                   	// #1
  409280:	b	4092f8 <__fxstatat@plt+0x68a8>
  409284:	ldr	w9, [x1, #156]
  409288:	eor	w10, w8, #0x1
  40928c:	mov	w11, #0x1                   	// #1
  409290:	and	w9, w9, #0xf000
  409294:	cmp	w9, #0x4, lsl #12
  409298:	cset	w9, eq  // eq = none
  40929c:	orr	w10, w9, w10
  4092a0:	cmp	w10, #0x0
  4092a4:	eor	w8, w8, w9
  4092a8:	cneg	w0, w11, eq  // eq = none
  4092ac:	tbnz	w8, #0, 4092f8 <__fxstatat@plt+0x68a8>
  4092b0:	ldr	x20, [x1]
  4092b4:	mov	w1, #0x2e                  	// #46
  4092b8:	mov	x0, x20
  4092bc:	bl	402730 <strrchr@plt>
  4092c0:	ldr	x19, [x19]
  4092c4:	mov	x21, x0
  4092c8:	mov	w1, #0x2e                  	// #46
  4092cc:	mov	x0, x19
  4092d0:	bl	402730 <strrchr@plt>
  4092d4:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  4092d8:	add	x9, x9, #0x2c1
  4092dc:	cmp	x21, #0x0
  4092e0:	csel	x8, x9, x21, eq  // eq = none
  4092e4:	cmp	x0, #0x0
  4092e8:	csel	x1, x9, x0, eq  // eq = none
  4092ec:	mov	x0, x8
  4092f0:	bl	402800 <strcmp@plt>
  4092f4:	cbz	w0, 409308 <__fxstatat@plt+0x68b8>
  4092f8:	ldp	x20, x19, [sp, #32]
  4092fc:	ldr	x21, [sp, #16]
  409300:	ldp	x29, x30, [sp], #48
  409304:	ret
  409308:	mov	x0, x20
  40930c:	mov	x1, x19
  409310:	ldp	x20, x19, [sp, #32]
  409314:	ldr	x21, [sp, #16]
  409318:	ldp	x29, x30, [sp], #48
  40931c:	b	402800 <strcmp@plt>
  409320:	stp	x29, x30, [sp, #-32]!
  409324:	stp	x20, x19, [sp, #16]
  409328:	ldr	x8, [x1, #72]
  40932c:	ldr	x9, [x0, #72]
  409330:	mov	x29, sp
  409334:	cmp	x8, x9
  409338:	cset	w8, gt
  40933c:	csinv	w8, w8, wzr, ge  // ge = tcont
  409340:	cbz	w8, 409354 <__fxstatat@plt+0x6904>
  409344:	ldp	x20, x19, [sp, #16]
  409348:	mov	w0, w8
  40934c:	ldp	x29, x30, [sp], #32
  409350:	ret
  409354:	ldr	x19, [x0]
  409358:	ldr	x20, [x1]
  40935c:	bl	4029e0 <__errno_location@plt>
  409360:	str	wzr, [x0]
  409364:	mov	x0, x19
  409368:	mov	x1, x20
  40936c:	ldp	x20, x19, [sp, #16]
  409370:	ldp	x29, x30, [sp], #32
  409374:	b	402990 <strcoll@plt>
  409378:	stp	x29, x30, [sp, #-32]!
  40937c:	stp	x20, x19, [sp, #16]
  409380:	ldr	w9, [x0, #152]
  409384:	mov	w8, #0x1                   	// #1
  409388:	mov	x29, sp
  40938c:	cmp	w9, #0x3
  409390:	b.eq	4093ac <__fxstatat@plt+0x695c>  // b.none
  409394:	cmp	w9, #0x9
  409398:	b.eq	4093ac <__fxstatat@plt+0x695c>  // b.none
  40939c:	ldr	w8, [x0, #156]
  4093a0:	and	w8, w8, #0xf000
  4093a4:	cmp	w8, #0x4, lsl #12
  4093a8:	cset	w8, eq  // eq = none
  4093ac:	ldr	w9, [x1, #152]
  4093b0:	cmp	w9, #0x9
  4093b4:	b.eq	4093c0 <__fxstatat@plt+0x6970>  // b.none
  4093b8:	cmp	w9, #0x3
  4093bc:	b.ne	4093cc <__fxstatat@plt+0x697c>  // b.any
  4093c0:	tbnz	w8, #0, 4093f8 <__fxstatat@plt+0x69a8>
  4093c4:	mov	w8, #0x1                   	// #1
  4093c8:	b	409410 <__fxstatat@plt+0x69c0>
  4093cc:	ldr	w9, [x1, #156]
  4093d0:	eor	w10, w8, #0x1
  4093d4:	mov	w11, #0x1                   	// #1
  4093d8:	and	w9, w9, #0xf000
  4093dc:	cmp	w9, #0x4, lsl #12
  4093e0:	cset	w9, eq  // eq = none
  4093e4:	orr	w10, w9, w10
  4093e8:	cmp	w10, #0x0
  4093ec:	eor	w9, w8, w9
  4093f0:	cneg	w8, w11, eq  // eq = none
  4093f4:	tbnz	w9, #0, 409410 <__fxstatat@plt+0x69c0>
  4093f8:	ldr	x8, [x1, #72]
  4093fc:	ldr	x9, [x0, #72]
  409400:	cmp	x8, x9
  409404:	cset	w8, gt
  409408:	csinv	w8, w8, wzr, ge  // ge = tcont
  40940c:	cbz	w8, 409420 <__fxstatat@plt+0x69d0>
  409410:	ldp	x20, x19, [sp, #16]
  409414:	mov	w0, w8
  409418:	ldp	x29, x30, [sp], #32
  40941c:	ret
  409420:	ldr	x19, [x0]
  409424:	ldr	x20, [x1]
  409428:	bl	4029e0 <__errno_location@plt>
  40942c:	str	wzr, [x0]
  409430:	mov	x0, x19
  409434:	mov	x1, x20
  409438:	ldp	x20, x19, [sp, #16]
  40943c:	ldp	x29, x30, [sp], #32
  409440:	b	402990 <strcoll@plt>
  409444:	stp	x29, x30, [sp, #-32]!
  409448:	stp	x20, x19, [sp, #16]
  40944c:	ldr	x8, [x0, #72]
  409450:	ldr	x9, [x1, #72]
  409454:	mov	x29, sp
  409458:	cmp	x8, x9
  40945c:	cset	w8, gt
  409460:	csinv	w8, w8, wzr, ge  // ge = tcont
  409464:	cbz	w8, 409478 <__fxstatat@plt+0x6a28>
  409468:	ldp	x20, x19, [sp, #16]
  40946c:	mov	w0, w8
  409470:	ldp	x29, x30, [sp], #32
  409474:	ret
  409478:	ldr	x19, [x1]
  40947c:	ldr	x20, [x0]
  409480:	bl	4029e0 <__errno_location@plt>
  409484:	str	wzr, [x0]
  409488:	mov	x0, x19
  40948c:	mov	x1, x20
  409490:	ldp	x20, x19, [sp, #16]
  409494:	ldp	x29, x30, [sp], #32
  409498:	b	402990 <strcoll@plt>
  40949c:	stp	x29, x30, [sp, #-32]!
  4094a0:	stp	x20, x19, [sp, #16]
  4094a4:	ldr	w9, [x0, #152]
  4094a8:	mov	w8, #0x1                   	// #1
  4094ac:	mov	x29, sp
  4094b0:	cmp	w9, #0x3
  4094b4:	b.eq	4094d0 <__fxstatat@plt+0x6a80>  // b.none
  4094b8:	cmp	w9, #0x9
  4094bc:	b.eq	4094d0 <__fxstatat@plt+0x6a80>  // b.none
  4094c0:	ldr	w8, [x0, #156]
  4094c4:	and	w8, w8, #0xf000
  4094c8:	cmp	w8, #0x4, lsl #12
  4094cc:	cset	w8, eq  // eq = none
  4094d0:	ldr	w9, [x1, #152]
  4094d4:	cmp	w9, #0x9
  4094d8:	b.eq	4094e4 <__fxstatat@plt+0x6a94>  // b.none
  4094dc:	cmp	w9, #0x3
  4094e0:	b.ne	4094f0 <__fxstatat@plt+0x6aa0>  // b.any
  4094e4:	tbnz	w8, #0, 40951c <__fxstatat@plt+0x6acc>
  4094e8:	mov	w8, #0x1                   	// #1
  4094ec:	b	409534 <__fxstatat@plt+0x6ae4>
  4094f0:	ldr	w9, [x1, #156]
  4094f4:	eor	w10, w8, #0x1
  4094f8:	mov	w11, #0x1                   	// #1
  4094fc:	and	w9, w9, #0xf000
  409500:	cmp	w9, #0x4, lsl #12
  409504:	cset	w9, eq  // eq = none
  409508:	orr	w10, w9, w10
  40950c:	cmp	w10, #0x0
  409510:	eor	w9, w8, w9
  409514:	cneg	w8, w11, eq  // eq = none
  409518:	tbnz	w9, #0, 409534 <__fxstatat@plt+0x6ae4>
  40951c:	ldr	x8, [x0, #72]
  409520:	ldr	x9, [x1, #72]
  409524:	cmp	x8, x9
  409528:	cset	w8, gt
  40952c:	csinv	w8, w8, wzr, ge  // ge = tcont
  409530:	cbz	w8, 409544 <__fxstatat@plt+0x6af4>
  409534:	ldp	x20, x19, [sp, #16]
  409538:	mov	w0, w8
  40953c:	ldp	x29, x30, [sp], #32
  409540:	ret
  409544:	ldr	x19, [x1]
  409548:	ldr	x20, [x0]
  40954c:	bl	4029e0 <__errno_location@plt>
  409550:	str	wzr, [x0]
  409554:	mov	x0, x19
  409558:	mov	x1, x20
  40955c:	ldp	x20, x19, [sp, #16]
  409560:	ldp	x29, x30, [sp], #32
  409564:	b	402990 <strcoll@plt>
  409568:	ldr	x8, [x1, #72]
  40956c:	ldr	x9, [x0, #72]
  409570:	cmp	x8, x9
  409574:	cset	w8, gt
  409578:	csinv	w8, w8, wzr, ge  // ge = tcont
  40957c:	cbz	w8, 409588 <__fxstatat@plt+0x6b38>
  409580:	mov	w0, w8
  409584:	ret
  409588:	ldr	x0, [x0]
  40958c:	ldr	x1, [x1]
  409590:	b	402800 <strcmp@plt>
  409594:	ldr	w9, [x0, #152]
  409598:	mov	w8, #0x1                   	// #1
  40959c:	cmp	w9, #0x3
  4095a0:	b.eq	4095bc <__fxstatat@plt+0x6b6c>  // b.none
  4095a4:	cmp	w9, #0x9
  4095a8:	b.eq	4095bc <__fxstatat@plt+0x6b6c>  // b.none
  4095ac:	ldr	w8, [x0, #156]
  4095b0:	and	w8, w8, #0xf000
  4095b4:	cmp	w8, #0x4, lsl #12
  4095b8:	cset	w8, eq  // eq = none
  4095bc:	ldr	w9, [x1, #152]
  4095c0:	cmp	w9, #0x9
  4095c4:	b.eq	4095d0 <__fxstatat@plt+0x6b80>  // b.none
  4095c8:	cmp	w9, #0x3
  4095cc:	b.ne	4095dc <__fxstatat@plt+0x6b8c>  // b.any
  4095d0:	tbnz	w8, #0, 409608 <__fxstatat@plt+0x6bb8>
  4095d4:	mov	w0, #0x1                   	// #1
  4095d8:	ret
  4095dc:	ldr	w9, [x1, #156]
  4095e0:	eor	w10, w8, #0x1
  4095e4:	mov	w11, #0x1                   	// #1
  4095e8:	and	w9, w9, #0xf000
  4095ec:	cmp	w9, #0x4, lsl #12
  4095f0:	cset	w9, eq  // eq = none
  4095f4:	orr	w10, w9, w10
  4095f8:	cmp	w10, #0x0
  4095fc:	eor	w9, w8, w9
  409600:	cneg	w8, w11, eq  // eq = none
  409604:	tbnz	w9, #0, 409620 <__fxstatat@plt+0x6bd0>
  409608:	ldr	x8, [x1, #72]
  40960c:	ldr	x9, [x0, #72]
  409610:	cmp	x8, x9
  409614:	cset	w8, gt
  409618:	csinv	w8, w8, wzr, ge  // ge = tcont
  40961c:	cbz	w8, 409628 <__fxstatat@plt+0x6bd8>
  409620:	mov	w0, w8
  409624:	ret
  409628:	ldr	x0, [x0]
  40962c:	ldr	x1, [x1]
  409630:	b	402800 <strcmp@plt>
  409634:	ldr	x8, [x0, #72]
  409638:	ldr	x9, [x1, #72]
  40963c:	cmp	x8, x9
  409640:	cset	w8, gt
  409644:	csinv	w8, w8, wzr, ge  // ge = tcont
  409648:	cbz	w8, 409654 <__fxstatat@plt+0x6c04>
  40964c:	mov	w0, w8
  409650:	ret
  409654:	ldr	x8, [x1]
  409658:	ldr	x1, [x0]
  40965c:	mov	x0, x8
  409660:	b	402800 <strcmp@plt>
  409664:	ldr	w9, [x0, #152]
  409668:	mov	w8, #0x1                   	// #1
  40966c:	cmp	w9, #0x3
  409670:	b.eq	40968c <__fxstatat@plt+0x6c3c>  // b.none
  409674:	cmp	w9, #0x9
  409678:	b.eq	40968c <__fxstatat@plt+0x6c3c>  // b.none
  40967c:	ldr	w8, [x0, #156]
  409680:	and	w8, w8, #0xf000
  409684:	cmp	w8, #0x4, lsl #12
  409688:	cset	w8, eq  // eq = none
  40968c:	ldr	w9, [x1, #152]
  409690:	cmp	w9, #0x9
  409694:	b.eq	4096a0 <__fxstatat@plt+0x6c50>  // b.none
  409698:	cmp	w9, #0x3
  40969c:	b.ne	4096ac <__fxstatat@plt+0x6c5c>  // b.any
  4096a0:	tbnz	w8, #0, 4096d8 <__fxstatat@plt+0x6c88>
  4096a4:	mov	w0, #0x1                   	// #1
  4096a8:	ret
  4096ac:	ldr	w9, [x1, #156]
  4096b0:	eor	w10, w8, #0x1
  4096b4:	mov	w11, #0x1                   	// #1
  4096b8:	and	w9, w9, #0xf000
  4096bc:	cmp	w9, #0x4, lsl #12
  4096c0:	cset	w9, eq  // eq = none
  4096c4:	orr	w10, w9, w10
  4096c8:	cmp	w10, #0x0
  4096cc:	eor	w9, w8, w9
  4096d0:	cneg	w8, w11, eq  // eq = none
  4096d4:	tbnz	w9, #0, 4096f0 <__fxstatat@plt+0x6ca0>
  4096d8:	ldr	x8, [x0, #72]
  4096dc:	ldr	x9, [x1, #72]
  4096e0:	cmp	x8, x9
  4096e4:	cset	w8, gt
  4096e8:	csinv	w8, w8, wzr, ge  // ge = tcont
  4096ec:	cbz	w8, 4096f8 <__fxstatat@plt+0x6ca8>
  4096f0:	mov	w0, w8
  4096f4:	ret
  4096f8:	ldr	x8, [x1]
  4096fc:	ldr	x1, [x0]
  409700:	mov	x0, x8
  409704:	b	402800 <strcmp@plt>
  409708:	ldr	x0, [x0]
  40970c:	ldr	x1, [x1]
  409710:	b	40ca94 <__fxstatat@plt+0xa044>
  409714:	ldr	w9, [x0, #152]
  409718:	mov	w8, #0x1                   	// #1
  40971c:	cmp	w9, #0x3
  409720:	b.eq	40973c <__fxstatat@plt+0x6cec>  // b.none
  409724:	cmp	w9, #0x9
  409728:	b.eq	40973c <__fxstatat@plt+0x6cec>  // b.none
  40972c:	ldr	w8, [x0, #156]
  409730:	and	w8, w8, #0xf000
  409734:	cmp	w8, #0x4, lsl #12
  409738:	cset	w8, eq  // eq = none
  40973c:	ldr	w9, [x1, #152]
  409740:	cmp	w9, #0x9
  409744:	b.eq	409750 <__fxstatat@plt+0x6d00>  // b.none
  409748:	cmp	w9, #0x3
  40974c:	b.ne	40975c <__fxstatat@plt+0x6d0c>  // b.any
  409750:	tbnz	w8, #0, 409790 <__fxstatat@plt+0x6d40>
  409754:	mov	w0, #0x1                   	// #1
  409758:	ret
  40975c:	ldr	w9, [x1, #156]
  409760:	eor	w10, w8, #0x1
  409764:	mov	w11, #0x1                   	// #1
  409768:	and	w9, w9, #0xf000
  40976c:	cmp	w9, #0x4, lsl #12
  409770:	cset	w9, eq  // eq = none
  409774:	orr	w10, w9, w10
  409778:	cmp	w10, #0x0
  40977c:	eor	w9, w8, w9
  409780:	cneg	w8, w11, eq  // eq = none
  409784:	tbz	w9, #0, 409790 <__fxstatat@plt+0x6d40>
  409788:	mov	w0, w8
  40978c:	ret
  409790:	ldr	x0, [x0]
  409794:	ldr	x1, [x1]
  409798:	b	40ca94 <__fxstatat@plt+0xa044>
  40979c:	ldr	x8, [x1]
  4097a0:	ldr	x1, [x0]
  4097a4:	mov	x0, x8
  4097a8:	b	40ca94 <__fxstatat@plt+0xa044>
  4097ac:	ldr	w9, [x0, #152]
  4097b0:	mov	w8, #0x1                   	// #1
  4097b4:	cmp	w9, #0x3
  4097b8:	b.eq	4097d4 <__fxstatat@plt+0x6d84>  // b.none
  4097bc:	cmp	w9, #0x9
  4097c0:	b.eq	4097d4 <__fxstatat@plt+0x6d84>  // b.none
  4097c4:	ldr	w8, [x0, #156]
  4097c8:	and	w8, w8, #0xf000
  4097cc:	cmp	w8, #0x4, lsl #12
  4097d0:	cset	w8, eq  // eq = none
  4097d4:	ldr	w9, [x1, #152]
  4097d8:	cmp	w9, #0x9
  4097dc:	b.eq	4097e8 <__fxstatat@plt+0x6d98>  // b.none
  4097e0:	cmp	w9, #0x3
  4097e4:	b.ne	4097f4 <__fxstatat@plt+0x6da4>  // b.any
  4097e8:	tbnz	w8, #0, 409828 <__fxstatat@plt+0x6dd8>
  4097ec:	mov	w0, #0x1                   	// #1
  4097f0:	ret
  4097f4:	ldr	w9, [x1, #156]
  4097f8:	eor	w10, w8, #0x1
  4097fc:	mov	w11, #0x1                   	// #1
  409800:	and	w9, w9, #0xf000
  409804:	cmp	w9, #0x4, lsl #12
  409808:	cset	w9, eq  // eq = none
  40980c:	orr	w10, w9, w10
  409810:	cmp	w10, #0x0
  409814:	eor	w9, w8, w9
  409818:	cneg	w8, w11, eq  // eq = none
  40981c:	tbz	w9, #0, 409828 <__fxstatat@plt+0x6dd8>
  409820:	mov	w0, w8
  409824:	ret
  409828:	ldr	x8, [x1]
  40982c:	ldr	x1, [x0]
  409830:	mov	x0, x8
  409834:	b	40ca94 <__fxstatat@plt+0xa044>
  409838:	stp	x29, x30, [sp, #-32]!
  40983c:	stp	x20, x19, [sp, #16]
  409840:	ldr	x8, [x1, #112]
  409844:	ldr	x9, [x0, #112]
  409848:	mov	x29, sp
  40984c:	cmp	x8, x9
  409850:	b.ge	40985c <__fxstatat@plt+0x6e0c>  // b.tcont
  409854:	mov	w8, #0xffffffff            	// #-1
  409858:	b	409878 <__fxstatat@plt+0x6e28>
  40985c:	b.le	409868 <__fxstatat@plt+0x6e18>
  409860:	mov	w8, #0x1                   	// #1
  409864:	b	409878 <__fxstatat@plt+0x6e28>
  409868:	ldr	x8, [x1, #120]
  40986c:	ldr	x9, [x0, #120]
  409870:	subs	w8, w8, w9
  409874:	b.eq	409888 <__fxstatat@plt+0x6e38>  // b.none
  409878:	ldp	x20, x19, [sp, #16]
  40987c:	mov	w0, w8
  409880:	ldp	x29, x30, [sp], #32
  409884:	ret
  409888:	ldr	x19, [x0]
  40988c:	ldr	x20, [x1]
  409890:	bl	4029e0 <__errno_location@plt>
  409894:	str	wzr, [x0]
  409898:	mov	x0, x19
  40989c:	mov	x1, x20
  4098a0:	ldp	x20, x19, [sp, #16]
  4098a4:	ldp	x29, x30, [sp], #32
  4098a8:	b	402990 <strcoll@plt>
  4098ac:	stp	x29, x30, [sp, #-32]!
  4098b0:	stp	x20, x19, [sp, #16]
  4098b4:	ldr	w9, [x0, #152]
  4098b8:	mov	w8, #0x1                   	// #1
  4098bc:	mov	x29, sp
  4098c0:	cmp	w9, #0x3
  4098c4:	b.eq	4098e0 <__fxstatat@plt+0x6e90>  // b.none
  4098c8:	cmp	w9, #0x9
  4098cc:	b.eq	4098e0 <__fxstatat@plt+0x6e90>  // b.none
  4098d0:	ldr	w8, [x0, #156]
  4098d4:	and	w8, w8, #0xf000
  4098d8:	cmp	w8, #0x4, lsl #12
  4098dc:	cset	w8, eq  // eq = none
  4098e0:	ldr	w9, [x1, #152]
  4098e4:	cmp	w9, #0x9
  4098e8:	b.eq	4098f4 <__fxstatat@plt+0x6ea4>  // b.none
  4098ec:	cmp	w9, #0x3
  4098f0:	b.ne	4098fc <__fxstatat@plt+0x6eac>  // b.any
  4098f4:	tbnz	w8, #0, 409928 <__fxstatat@plt+0x6ed8>
  4098f8:	b	409944 <__fxstatat@plt+0x6ef4>
  4098fc:	ldr	w9, [x1, #156]
  409900:	eor	w10, w8, #0x1
  409904:	mov	w11, #0x1                   	// #1
  409908:	and	w9, w9, #0xf000
  40990c:	cmp	w9, #0x4, lsl #12
  409910:	cset	w9, eq  // eq = none
  409914:	orr	w10, w9, w10
  409918:	cmp	w10, #0x0
  40991c:	eor	w9, w8, w9
  409920:	cneg	w8, w11, eq  // eq = none
  409924:	tbnz	w9, #0, 409948 <__fxstatat@plt+0x6ef8>
  409928:	ldr	x8, [x1, #112]
  40992c:	ldr	x9, [x0, #112]
  409930:	cmp	x8, x9
  409934:	b.ge	409940 <__fxstatat@plt+0x6ef0>  // b.tcont
  409938:	mov	w8, #0xffffffff            	// #-1
  40993c:	b	409948 <__fxstatat@plt+0x6ef8>
  409940:	b.le	409958 <__fxstatat@plt+0x6f08>
  409944:	mov	w8, #0x1                   	// #1
  409948:	ldp	x20, x19, [sp, #16]
  40994c:	mov	w0, w8
  409950:	ldp	x29, x30, [sp], #32
  409954:	ret
  409958:	ldr	x8, [x1, #120]
  40995c:	ldr	x9, [x0, #120]
  409960:	subs	w8, w8, w9
  409964:	b.ne	409948 <__fxstatat@plt+0x6ef8>  // b.any
  409968:	ldr	x19, [x0]
  40996c:	ldr	x20, [x1]
  409970:	bl	4029e0 <__errno_location@plt>
  409974:	str	wzr, [x0]
  409978:	mov	x0, x19
  40997c:	mov	x1, x20
  409980:	ldp	x20, x19, [sp, #16]
  409984:	ldp	x29, x30, [sp], #32
  409988:	b	402990 <strcoll@plt>
  40998c:	stp	x29, x30, [sp, #-32]!
  409990:	stp	x20, x19, [sp, #16]
  409994:	ldr	x8, [x0, #112]
  409998:	ldr	x9, [x1, #112]
  40999c:	mov	x29, sp
  4099a0:	cmp	x8, x9
  4099a4:	b.ge	4099b0 <__fxstatat@plt+0x6f60>  // b.tcont
  4099a8:	mov	w8, #0xffffffff            	// #-1
  4099ac:	b	4099cc <__fxstatat@plt+0x6f7c>
  4099b0:	b.le	4099bc <__fxstatat@plt+0x6f6c>
  4099b4:	mov	w8, #0x1                   	// #1
  4099b8:	b	4099cc <__fxstatat@plt+0x6f7c>
  4099bc:	ldr	x8, [x0, #120]
  4099c0:	ldr	x9, [x1, #120]
  4099c4:	subs	w8, w8, w9
  4099c8:	b.eq	4099dc <__fxstatat@plt+0x6f8c>  // b.none
  4099cc:	ldp	x20, x19, [sp, #16]
  4099d0:	mov	w0, w8
  4099d4:	ldp	x29, x30, [sp], #32
  4099d8:	ret
  4099dc:	ldr	x19, [x1]
  4099e0:	ldr	x20, [x0]
  4099e4:	bl	4029e0 <__errno_location@plt>
  4099e8:	str	wzr, [x0]
  4099ec:	mov	x0, x19
  4099f0:	mov	x1, x20
  4099f4:	ldp	x20, x19, [sp, #16]
  4099f8:	ldp	x29, x30, [sp], #32
  4099fc:	b	402990 <strcoll@plt>
  409a00:	stp	x29, x30, [sp, #-32]!
  409a04:	stp	x20, x19, [sp, #16]
  409a08:	ldr	w9, [x0, #152]
  409a0c:	mov	w8, #0x1                   	// #1
  409a10:	mov	x29, sp
  409a14:	cmp	w9, #0x3
  409a18:	b.eq	409a34 <__fxstatat@plt+0x6fe4>  // b.none
  409a1c:	cmp	w9, #0x9
  409a20:	b.eq	409a34 <__fxstatat@plt+0x6fe4>  // b.none
  409a24:	ldr	w8, [x0, #156]
  409a28:	and	w8, w8, #0xf000
  409a2c:	cmp	w8, #0x4, lsl #12
  409a30:	cset	w8, eq  // eq = none
  409a34:	ldr	w9, [x1, #152]
  409a38:	cmp	w9, #0x9
  409a3c:	b.eq	409a48 <__fxstatat@plt+0x6ff8>  // b.none
  409a40:	cmp	w9, #0x3
  409a44:	b.ne	409a50 <__fxstatat@plt+0x7000>  // b.any
  409a48:	tbnz	w8, #0, 409a7c <__fxstatat@plt+0x702c>
  409a4c:	b	409a98 <__fxstatat@plt+0x7048>
  409a50:	ldr	w9, [x1, #156]
  409a54:	eor	w10, w8, #0x1
  409a58:	mov	w11, #0x1                   	// #1
  409a5c:	and	w9, w9, #0xf000
  409a60:	cmp	w9, #0x4, lsl #12
  409a64:	cset	w9, eq  // eq = none
  409a68:	orr	w10, w9, w10
  409a6c:	cmp	w10, #0x0
  409a70:	eor	w9, w8, w9
  409a74:	cneg	w8, w11, eq  // eq = none
  409a78:	tbnz	w9, #0, 409a9c <__fxstatat@plt+0x704c>
  409a7c:	ldr	x8, [x0, #112]
  409a80:	ldr	x9, [x1, #112]
  409a84:	cmp	x8, x9
  409a88:	b.ge	409a94 <__fxstatat@plt+0x7044>  // b.tcont
  409a8c:	mov	w8, #0xffffffff            	// #-1
  409a90:	b	409a9c <__fxstatat@plt+0x704c>
  409a94:	b.le	409aac <__fxstatat@plt+0x705c>
  409a98:	mov	w8, #0x1                   	// #1
  409a9c:	ldp	x20, x19, [sp, #16]
  409aa0:	mov	w0, w8
  409aa4:	ldp	x29, x30, [sp], #32
  409aa8:	ret
  409aac:	ldr	x8, [x0, #120]
  409ab0:	ldr	x9, [x1, #120]
  409ab4:	subs	w8, w8, w9
  409ab8:	b.ne	409a9c <__fxstatat@plt+0x704c>  // b.any
  409abc:	ldr	x19, [x1]
  409ac0:	ldr	x20, [x0]
  409ac4:	bl	4029e0 <__errno_location@plt>
  409ac8:	str	wzr, [x0]
  409acc:	mov	x0, x19
  409ad0:	mov	x1, x20
  409ad4:	ldp	x20, x19, [sp, #16]
  409ad8:	ldp	x29, x30, [sp], #32
  409adc:	b	402990 <strcoll@plt>
  409ae0:	ldr	x8, [x1, #112]
  409ae4:	ldr	x9, [x0, #112]
  409ae8:	cmp	x8, x9
  409aec:	b.ge	409af8 <__fxstatat@plt+0x70a8>  // b.tcont
  409af0:	mov	w0, #0xffffffff            	// #-1
  409af4:	ret
  409af8:	b.le	409b04 <__fxstatat@plt+0x70b4>
  409afc:	mov	w0, #0x1                   	// #1
  409b00:	ret
  409b04:	ldr	x8, [x1, #120]
  409b08:	ldr	x9, [x0, #120]
  409b0c:	subs	w8, w8, w9
  409b10:	b.eq	409b1c <__fxstatat@plt+0x70cc>  // b.none
  409b14:	mov	w0, w8
  409b18:	ret
  409b1c:	ldr	x0, [x0]
  409b20:	ldr	x1, [x1]
  409b24:	b	402800 <strcmp@plt>
  409b28:	ldr	w9, [x0, #152]
  409b2c:	mov	w8, #0x1                   	// #1
  409b30:	cmp	w9, #0x3
  409b34:	b.eq	409b50 <__fxstatat@plt+0x7100>  // b.none
  409b38:	cmp	w9, #0x9
  409b3c:	b.eq	409b50 <__fxstatat@plt+0x7100>  // b.none
  409b40:	ldr	w8, [x0, #156]
  409b44:	and	w8, w8, #0xf000
  409b48:	cmp	w8, #0x4, lsl #12
  409b4c:	cset	w8, eq  // eq = none
  409b50:	ldr	w9, [x1, #152]
  409b54:	cmp	w9, #0x9
  409b58:	b.eq	409b64 <__fxstatat@plt+0x7114>  // b.none
  409b5c:	cmp	w9, #0x3
  409b60:	b.ne	409b70 <__fxstatat@plt+0x7120>  // b.any
  409b64:	tbnz	w8, #0, 409b9c <__fxstatat@plt+0x714c>
  409b68:	mov	w0, #0x1                   	// #1
  409b6c:	ret
  409b70:	ldr	w9, [x1, #156]
  409b74:	eor	w10, w8, #0x1
  409b78:	mov	w11, #0x1                   	// #1
  409b7c:	and	w9, w9, #0xf000
  409b80:	cmp	w9, #0x4, lsl #12
  409b84:	cset	w9, eq  // eq = none
  409b88:	orr	w10, w9, w10
  409b8c:	cmp	w10, #0x0
  409b90:	eor	w9, w8, w9
  409b94:	cneg	w8, w11, eq  // eq = none
  409b98:	tbnz	w9, #0, 409bd0 <__fxstatat@plt+0x7180>
  409b9c:	ldr	x8, [x1, #112]
  409ba0:	ldr	x9, [x0, #112]
  409ba4:	cmp	x8, x9
  409ba8:	b.ge	409bb4 <__fxstatat@plt+0x7164>  // b.tcont
  409bac:	mov	w0, #0xffffffff            	// #-1
  409bb0:	ret
  409bb4:	b.le	409bc0 <__fxstatat@plt+0x7170>
  409bb8:	mov	w0, #0x1                   	// #1
  409bbc:	ret
  409bc0:	ldr	x8, [x1, #120]
  409bc4:	ldr	x9, [x0, #120]
  409bc8:	subs	w8, w8, w9
  409bcc:	b.eq	409bd8 <__fxstatat@plt+0x7188>  // b.none
  409bd0:	mov	w0, w8
  409bd4:	ret
  409bd8:	ldr	x0, [x0]
  409bdc:	ldr	x1, [x1]
  409be0:	b	402800 <strcmp@plt>
  409be4:	ldr	x8, [x0, #112]
  409be8:	ldr	x9, [x1, #112]
  409bec:	cmp	x8, x9
  409bf0:	b.ge	409bfc <__fxstatat@plt+0x71ac>  // b.tcont
  409bf4:	mov	w0, #0xffffffff            	// #-1
  409bf8:	ret
  409bfc:	b.le	409c08 <__fxstatat@plt+0x71b8>
  409c00:	mov	w0, #0x1                   	// #1
  409c04:	ret
  409c08:	ldr	x8, [x0, #120]
  409c0c:	ldr	x9, [x1, #120]
  409c10:	subs	w8, w8, w9
  409c14:	b.eq	409c20 <__fxstatat@plt+0x71d0>  // b.none
  409c18:	mov	w0, w8
  409c1c:	ret
  409c20:	ldr	x8, [x1]
  409c24:	ldr	x1, [x0]
  409c28:	mov	x0, x8
  409c2c:	b	402800 <strcmp@plt>
  409c30:	ldr	w9, [x0, #152]
  409c34:	mov	w8, #0x1                   	// #1
  409c38:	cmp	w9, #0x3
  409c3c:	b.eq	409c58 <__fxstatat@plt+0x7208>  // b.none
  409c40:	cmp	w9, #0x9
  409c44:	b.eq	409c58 <__fxstatat@plt+0x7208>  // b.none
  409c48:	ldr	w8, [x0, #156]
  409c4c:	and	w8, w8, #0xf000
  409c50:	cmp	w8, #0x4, lsl #12
  409c54:	cset	w8, eq  // eq = none
  409c58:	ldr	w9, [x1, #152]
  409c5c:	cmp	w9, #0x9
  409c60:	b.eq	409c6c <__fxstatat@plt+0x721c>  // b.none
  409c64:	cmp	w9, #0x3
  409c68:	b.ne	409c78 <__fxstatat@plt+0x7228>  // b.any
  409c6c:	tbnz	w8, #0, 409ca4 <__fxstatat@plt+0x7254>
  409c70:	mov	w0, #0x1                   	// #1
  409c74:	ret
  409c78:	ldr	w9, [x1, #156]
  409c7c:	eor	w10, w8, #0x1
  409c80:	mov	w11, #0x1                   	// #1
  409c84:	and	w9, w9, #0xf000
  409c88:	cmp	w9, #0x4, lsl #12
  409c8c:	cset	w9, eq  // eq = none
  409c90:	orr	w10, w9, w10
  409c94:	cmp	w10, #0x0
  409c98:	eor	w9, w8, w9
  409c9c:	cneg	w8, w11, eq  // eq = none
  409ca0:	tbnz	w9, #0, 409cd8 <__fxstatat@plt+0x7288>
  409ca4:	ldr	x8, [x0, #112]
  409ca8:	ldr	x9, [x1, #112]
  409cac:	cmp	x8, x9
  409cb0:	b.ge	409cbc <__fxstatat@plt+0x726c>  // b.tcont
  409cb4:	mov	w0, #0xffffffff            	// #-1
  409cb8:	ret
  409cbc:	b.le	409cc8 <__fxstatat@plt+0x7278>
  409cc0:	mov	w0, #0x1                   	// #1
  409cc4:	ret
  409cc8:	ldr	x8, [x0, #120]
  409ccc:	ldr	x9, [x1, #120]
  409cd0:	subs	w8, w8, w9
  409cd4:	b.eq	409ce0 <__fxstatat@plt+0x7290>  // b.none
  409cd8:	mov	w0, w8
  409cdc:	ret
  409ce0:	ldr	x8, [x1]
  409ce4:	ldr	x1, [x0]
  409ce8:	mov	x0, x8
  409cec:	b	402800 <strcmp@plt>
  409cf0:	stp	x29, x30, [sp, #-32]!
  409cf4:	stp	x20, x19, [sp, #16]
  409cf8:	ldr	x8, [x1, #128]
  409cfc:	ldr	x9, [x0, #128]
  409d00:	mov	x29, sp
  409d04:	cmp	x8, x9
  409d08:	b.ge	409d14 <__fxstatat@plt+0x72c4>  // b.tcont
  409d0c:	mov	w8, #0xffffffff            	// #-1
  409d10:	b	409d30 <__fxstatat@plt+0x72e0>
  409d14:	b.le	409d20 <__fxstatat@plt+0x72d0>
  409d18:	mov	w8, #0x1                   	// #1
  409d1c:	b	409d30 <__fxstatat@plt+0x72e0>
  409d20:	ldr	x8, [x1, #136]
  409d24:	ldr	x9, [x0, #136]
  409d28:	subs	w8, w8, w9
  409d2c:	b.eq	409d40 <__fxstatat@plt+0x72f0>  // b.none
  409d30:	ldp	x20, x19, [sp, #16]
  409d34:	mov	w0, w8
  409d38:	ldp	x29, x30, [sp], #32
  409d3c:	ret
  409d40:	ldr	x19, [x0]
  409d44:	ldr	x20, [x1]
  409d48:	bl	4029e0 <__errno_location@plt>
  409d4c:	str	wzr, [x0]
  409d50:	mov	x0, x19
  409d54:	mov	x1, x20
  409d58:	ldp	x20, x19, [sp, #16]
  409d5c:	ldp	x29, x30, [sp], #32
  409d60:	b	402990 <strcoll@plt>
  409d64:	stp	x29, x30, [sp, #-32]!
  409d68:	stp	x20, x19, [sp, #16]
  409d6c:	ldr	w9, [x0, #152]
  409d70:	mov	w8, #0x1                   	// #1
  409d74:	mov	x29, sp
  409d78:	cmp	w9, #0x3
  409d7c:	b.eq	409d98 <__fxstatat@plt+0x7348>  // b.none
  409d80:	cmp	w9, #0x9
  409d84:	b.eq	409d98 <__fxstatat@plt+0x7348>  // b.none
  409d88:	ldr	w8, [x0, #156]
  409d8c:	and	w8, w8, #0xf000
  409d90:	cmp	w8, #0x4, lsl #12
  409d94:	cset	w8, eq  // eq = none
  409d98:	ldr	w9, [x1, #152]
  409d9c:	cmp	w9, #0x9
  409da0:	b.eq	409dac <__fxstatat@plt+0x735c>  // b.none
  409da4:	cmp	w9, #0x3
  409da8:	b.ne	409db4 <__fxstatat@plt+0x7364>  // b.any
  409dac:	tbnz	w8, #0, 409de0 <__fxstatat@plt+0x7390>
  409db0:	b	409dfc <__fxstatat@plt+0x73ac>
  409db4:	ldr	w9, [x1, #156]
  409db8:	eor	w10, w8, #0x1
  409dbc:	mov	w11, #0x1                   	// #1
  409dc0:	and	w9, w9, #0xf000
  409dc4:	cmp	w9, #0x4, lsl #12
  409dc8:	cset	w9, eq  // eq = none
  409dcc:	orr	w10, w9, w10
  409dd0:	cmp	w10, #0x0
  409dd4:	eor	w9, w8, w9
  409dd8:	cneg	w8, w11, eq  // eq = none
  409ddc:	tbnz	w9, #0, 409e00 <__fxstatat@plt+0x73b0>
  409de0:	ldr	x8, [x1, #128]
  409de4:	ldr	x9, [x0, #128]
  409de8:	cmp	x8, x9
  409dec:	b.ge	409df8 <__fxstatat@plt+0x73a8>  // b.tcont
  409df0:	mov	w8, #0xffffffff            	// #-1
  409df4:	b	409e00 <__fxstatat@plt+0x73b0>
  409df8:	b.le	409e10 <__fxstatat@plt+0x73c0>
  409dfc:	mov	w8, #0x1                   	// #1
  409e00:	ldp	x20, x19, [sp, #16]
  409e04:	mov	w0, w8
  409e08:	ldp	x29, x30, [sp], #32
  409e0c:	ret
  409e10:	ldr	x8, [x1, #136]
  409e14:	ldr	x9, [x0, #136]
  409e18:	subs	w8, w8, w9
  409e1c:	b.ne	409e00 <__fxstatat@plt+0x73b0>  // b.any
  409e20:	ldr	x19, [x0]
  409e24:	ldr	x20, [x1]
  409e28:	bl	4029e0 <__errno_location@plt>
  409e2c:	str	wzr, [x0]
  409e30:	mov	x0, x19
  409e34:	mov	x1, x20
  409e38:	ldp	x20, x19, [sp, #16]
  409e3c:	ldp	x29, x30, [sp], #32
  409e40:	b	402990 <strcoll@plt>
  409e44:	stp	x29, x30, [sp, #-32]!
  409e48:	stp	x20, x19, [sp, #16]
  409e4c:	ldr	x8, [x0, #128]
  409e50:	ldr	x9, [x1, #128]
  409e54:	mov	x29, sp
  409e58:	cmp	x8, x9
  409e5c:	b.ge	409e68 <__fxstatat@plt+0x7418>  // b.tcont
  409e60:	mov	w8, #0xffffffff            	// #-1
  409e64:	b	409e84 <__fxstatat@plt+0x7434>
  409e68:	b.le	409e74 <__fxstatat@plt+0x7424>
  409e6c:	mov	w8, #0x1                   	// #1
  409e70:	b	409e84 <__fxstatat@plt+0x7434>
  409e74:	ldr	x8, [x0, #136]
  409e78:	ldr	x9, [x1, #136]
  409e7c:	subs	w8, w8, w9
  409e80:	b.eq	409e94 <__fxstatat@plt+0x7444>  // b.none
  409e84:	ldp	x20, x19, [sp, #16]
  409e88:	mov	w0, w8
  409e8c:	ldp	x29, x30, [sp], #32
  409e90:	ret
  409e94:	ldr	x19, [x1]
  409e98:	ldr	x20, [x0]
  409e9c:	bl	4029e0 <__errno_location@plt>
  409ea0:	str	wzr, [x0]
  409ea4:	mov	x0, x19
  409ea8:	mov	x1, x20
  409eac:	ldp	x20, x19, [sp, #16]
  409eb0:	ldp	x29, x30, [sp], #32
  409eb4:	b	402990 <strcoll@plt>
  409eb8:	stp	x29, x30, [sp, #-32]!
  409ebc:	stp	x20, x19, [sp, #16]
  409ec0:	ldr	w9, [x0, #152]
  409ec4:	mov	w8, #0x1                   	// #1
  409ec8:	mov	x29, sp
  409ecc:	cmp	w9, #0x3
  409ed0:	b.eq	409eec <__fxstatat@plt+0x749c>  // b.none
  409ed4:	cmp	w9, #0x9
  409ed8:	b.eq	409eec <__fxstatat@plt+0x749c>  // b.none
  409edc:	ldr	w8, [x0, #156]
  409ee0:	and	w8, w8, #0xf000
  409ee4:	cmp	w8, #0x4, lsl #12
  409ee8:	cset	w8, eq  // eq = none
  409eec:	ldr	w9, [x1, #152]
  409ef0:	cmp	w9, #0x9
  409ef4:	b.eq	409f00 <__fxstatat@plt+0x74b0>  // b.none
  409ef8:	cmp	w9, #0x3
  409efc:	b.ne	409f08 <__fxstatat@plt+0x74b8>  // b.any
  409f00:	tbnz	w8, #0, 409f34 <__fxstatat@plt+0x74e4>
  409f04:	b	409f50 <__fxstatat@plt+0x7500>
  409f08:	ldr	w9, [x1, #156]
  409f0c:	eor	w10, w8, #0x1
  409f10:	mov	w11, #0x1                   	// #1
  409f14:	and	w9, w9, #0xf000
  409f18:	cmp	w9, #0x4, lsl #12
  409f1c:	cset	w9, eq  // eq = none
  409f20:	orr	w10, w9, w10
  409f24:	cmp	w10, #0x0
  409f28:	eor	w9, w8, w9
  409f2c:	cneg	w8, w11, eq  // eq = none
  409f30:	tbnz	w9, #0, 409f54 <__fxstatat@plt+0x7504>
  409f34:	ldr	x8, [x0, #128]
  409f38:	ldr	x9, [x1, #128]
  409f3c:	cmp	x8, x9
  409f40:	b.ge	409f4c <__fxstatat@plt+0x74fc>  // b.tcont
  409f44:	mov	w8, #0xffffffff            	// #-1
  409f48:	b	409f54 <__fxstatat@plt+0x7504>
  409f4c:	b.le	409f64 <__fxstatat@plt+0x7514>
  409f50:	mov	w8, #0x1                   	// #1
  409f54:	ldp	x20, x19, [sp, #16]
  409f58:	mov	w0, w8
  409f5c:	ldp	x29, x30, [sp], #32
  409f60:	ret
  409f64:	ldr	x8, [x0, #136]
  409f68:	ldr	x9, [x1, #136]
  409f6c:	subs	w8, w8, w9
  409f70:	b.ne	409f54 <__fxstatat@plt+0x7504>  // b.any
  409f74:	ldr	x19, [x1]
  409f78:	ldr	x20, [x0]
  409f7c:	bl	4029e0 <__errno_location@plt>
  409f80:	str	wzr, [x0]
  409f84:	mov	x0, x19
  409f88:	mov	x1, x20
  409f8c:	ldp	x20, x19, [sp, #16]
  409f90:	ldp	x29, x30, [sp], #32
  409f94:	b	402990 <strcoll@plt>
  409f98:	ldr	x8, [x1, #128]
  409f9c:	ldr	x9, [x0, #128]
  409fa0:	cmp	x8, x9
  409fa4:	b.ge	409fb0 <__fxstatat@plt+0x7560>  // b.tcont
  409fa8:	mov	w0, #0xffffffff            	// #-1
  409fac:	ret
  409fb0:	b.le	409fbc <__fxstatat@plt+0x756c>
  409fb4:	mov	w0, #0x1                   	// #1
  409fb8:	ret
  409fbc:	ldr	x8, [x1, #136]
  409fc0:	ldr	x9, [x0, #136]
  409fc4:	subs	w8, w8, w9
  409fc8:	b.eq	409fd4 <__fxstatat@plt+0x7584>  // b.none
  409fcc:	mov	w0, w8
  409fd0:	ret
  409fd4:	ldr	x0, [x0]
  409fd8:	ldr	x1, [x1]
  409fdc:	b	402800 <strcmp@plt>
  409fe0:	ldr	w9, [x0, #152]
  409fe4:	mov	w8, #0x1                   	// #1
  409fe8:	cmp	w9, #0x3
  409fec:	b.eq	40a008 <__fxstatat@plt+0x75b8>  // b.none
  409ff0:	cmp	w9, #0x9
  409ff4:	b.eq	40a008 <__fxstatat@plt+0x75b8>  // b.none
  409ff8:	ldr	w8, [x0, #156]
  409ffc:	and	w8, w8, #0xf000
  40a000:	cmp	w8, #0x4, lsl #12
  40a004:	cset	w8, eq  // eq = none
  40a008:	ldr	w9, [x1, #152]
  40a00c:	cmp	w9, #0x9
  40a010:	b.eq	40a01c <__fxstatat@plt+0x75cc>  // b.none
  40a014:	cmp	w9, #0x3
  40a018:	b.ne	40a028 <__fxstatat@plt+0x75d8>  // b.any
  40a01c:	tbnz	w8, #0, 40a054 <__fxstatat@plt+0x7604>
  40a020:	mov	w0, #0x1                   	// #1
  40a024:	ret
  40a028:	ldr	w9, [x1, #156]
  40a02c:	eor	w10, w8, #0x1
  40a030:	mov	w11, #0x1                   	// #1
  40a034:	and	w9, w9, #0xf000
  40a038:	cmp	w9, #0x4, lsl #12
  40a03c:	cset	w9, eq  // eq = none
  40a040:	orr	w10, w9, w10
  40a044:	cmp	w10, #0x0
  40a048:	eor	w9, w8, w9
  40a04c:	cneg	w8, w11, eq  // eq = none
  40a050:	tbnz	w9, #0, 40a088 <__fxstatat@plt+0x7638>
  40a054:	ldr	x8, [x1, #128]
  40a058:	ldr	x9, [x0, #128]
  40a05c:	cmp	x8, x9
  40a060:	b.ge	40a06c <__fxstatat@plt+0x761c>  // b.tcont
  40a064:	mov	w0, #0xffffffff            	// #-1
  40a068:	ret
  40a06c:	b.le	40a078 <__fxstatat@plt+0x7628>
  40a070:	mov	w0, #0x1                   	// #1
  40a074:	ret
  40a078:	ldr	x8, [x1, #136]
  40a07c:	ldr	x9, [x0, #136]
  40a080:	subs	w8, w8, w9
  40a084:	b.eq	40a090 <__fxstatat@plt+0x7640>  // b.none
  40a088:	mov	w0, w8
  40a08c:	ret
  40a090:	ldr	x0, [x0]
  40a094:	ldr	x1, [x1]
  40a098:	b	402800 <strcmp@plt>
  40a09c:	ldr	x8, [x0, #128]
  40a0a0:	ldr	x9, [x1, #128]
  40a0a4:	cmp	x8, x9
  40a0a8:	b.ge	40a0b4 <__fxstatat@plt+0x7664>  // b.tcont
  40a0ac:	mov	w0, #0xffffffff            	// #-1
  40a0b0:	ret
  40a0b4:	b.le	40a0c0 <__fxstatat@plt+0x7670>
  40a0b8:	mov	w0, #0x1                   	// #1
  40a0bc:	ret
  40a0c0:	ldr	x8, [x0, #136]
  40a0c4:	ldr	x9, [x1, #136]
  40a0c8:	subs	w8, w8, w9
  40a0cc:	b.eq	40a0d8 <__fxstatat@plt+0x7688>  // b.none
  40a0d0:	mov	w0, w8
  40a0d4:	ret
  40a0d8:	ldr	x8, [x1]
  40a0dc:	ldr	x1, [x0]
  40a0e0:	mov	x0, x8
  40a0e4:	b	402800 <strcmp@plt>
  40a0e8:	ldr	w9, [x0, #152]
  40a0ec:	mov	w8, #0x1                   	// #1
  40a0f0:	cmp	w9, #0x3
  40a0f4:	b.eq	40a110 <__fxstatat@plt+0x76c0>  // b.none
  40a0f8:	cmp	w9, #0x9
  40a0fc:	b.eq	40a110 <__fxstatat@plt+0x76c0>  // b.none
  40a100:	ldr	w8, [x0, #156]
  40a104:	and	w8, w8, #0xf000
  40a108:	cmp	w8, #0x4, lsl #12
  40a10c:	cset	w8, eq  // eq = none
  40a110:	ldr	w9, [x1, #152]
  40a114:	cmp	w9, #0x9
  40a118:	b.eq	40a124 <__fxstatat@plt+0x76d4>  // b.none
  40a11c:	cmp	w9, #0x3
  40a120:	b.ne	40a130 <__fxstatat@plt+0x76e0>  // b.any
  40a124:	tbnz	w8, #0, 40a15c <__fxstatat@plt+0x770c>
  40a128:	mov	w0, #0x1                   	// #1
  40a12c:	ret
  40a130:	ldr	w9, [x1, #156]
  40a134:	eor	w10, w8, #0x1
  40a138:	mov	w11, #0x1                   	// #1
  40a13c:	and	w9, w9, #0xf000
  40a140:	cmp	w9, #0x4, lsl #12
  40a144:	cset	w9, eq  // eq = none
  40a148:	orr	w10, w9, w10
  40a14c:	cmp	w10, #0x0
  40a150:	eor	w9, w8, w9
  40a154:	cneg	w8, w11, eq  // eq = none
  40a158:	tbnz	w9, #0, 40a190 <__fxstatat@plt+0x7740>
  40a15c:	ldr	x8, [x0, #128]
  40a160:	ldr	x9, [x1, #128]
  40a164:	cmp	x8, x9
  40a168:	b.ge	40a174 <__fxstatat@plt+0x7724>  // b.tcont
  40a16c:	mov	w0, #0xffffffff            	// #-1
  40a170:	ret
  40a174:	b.le	40a180 <__fxstatat@plt+0x7730>
  40a178:	mov	w0, #0x1                   	// #1
  40a17c:	ret
  40a180:	ldr	x8, [x0, #136]
  40a184:	ldr	x9, [x1, #136]
  40a188:	subs	w8, w8, w9
  40a18c:	b.eq	40a198 <__fxstatat@plt+0x7748>  // b.none
  40a190:	mov	w0, w8
  40a194:	ret
  40a198:	ldr	x8, [x1]
  40a19c:	ldr	x1, [x0]
  40a1a0:	mov	x0, x8
  40a1a4:	b	402800 <strcmp@plt>
  40a1a8:	stp	x29, x30, [sp, #-32]!
  40a1ac:	stp	x20, x19, [sp, #16]
  40a1b0:	ldr	x8, [x1, #96]
  40a1b4:	ldr	x9, [x0, #96]
  40a1b8:	mov	x29, sp
  40a1bc:	cmp	x8, x9
  40a1c0:	b.ge	40a1cc <__fxstatat@plt+0x777c>  // b.tcont
  40a1c4:	mov	w8, #0xffffffff            	// #-1
  40a1c8:	b	40a1e8 <__fxstatat@plt+0x7798>
  40a1cc:	b.le	40a1d8 <__fxstatat@plt+0x7788>
  40a1d0:	mov	w8, #0x1                   	// #1
  40a1d4:	b	40a1e8 <__fxstatat@plt+0x7798>
  40a1d8:	ldr	x8, [x1, #104]
  40a1dc:	ldr	x9, [x0, #104]
  40a1e0:	subs	w8, w8, w9
  40a1e4:	b.eq	40a1f8 <__fxstatat@plt+0x77a8>  // b.none
  40a1e8:	ldp	x20, x19, [sp, #16]
  40a1ec:	mov	w0, w8
  40a1f0:	ldp	x29, x30, [sp], #32
  40a1f4:	ret
  40a1f8:	ldr	x19, [x0]
  40a1fc:	ldr	x20, [x1]
  40a200:	bl	4029e0 <__errno_location@plt>
  40a204:	str	wzr, [x0]
  40a208:	mov	x0, x19
  40a20c:	mov	x1, x20
  40a210:	ldp	x20, x19, [sp, #16]
  40a214:	ldp	x29, x30, [sp], #32
  40a218:	b	402990 <strcoll@plt>
  40a21c:	stp	x29, x30, [sp, #-32]!
  40a220:	stp	x20, x19, [sp, #16]
  40a224:	ldr	w9, [x0, #152]
  40a228:	mov	w8, #0x1                   	// #1
  40a22c:	mov	x29, sp
  40a230:	cmp	w9, #0x3
  40a234:	b.eq	40a250 <__fxstatat@plt+0x7800>  // b.none
  40a238:	cmp	w9, #0x9
  40a23c:	b.eq	40a250 <__fxstatat@plt+0x7800>  // b.none
  40a240:	ldr	w8, [x0, #156]
  40a244:	and	w8, w8, #0xf000
  40a248:	cmp	w8, #0x4, lsl #12
  40a24c:	cset	w8, eq  // eq = none
  40a250:	ldr	w9, [x1, #152]
  40a254:	cmp	w9, #0x9
  40a258:	b.eq	40a264 <__fxstatat@plt+0x7814>  // b.none
  40a25c:	cmp	w9, #0x3
  40a260:	b.ne	40a26c <__fxstatat@plt+0x781c>  // b.any
  40a264:	tbnz	w8, #0, 40a298 <__fxstatat@plt+0x7848>
  40a268:	b	40a2b4 <__fxstatat@plt+0x7864>
  40a26c:	ldr	w9, [x1, #156]
  40a270:	eor	w10, w8, #0x1
  40a274:	mov	w11, #0x1                   	// #1
  40a278:	and	w9, w9, #0xf000
  40a27c:	cmp	w9, #0x4, lsl #12
  40a280:	cset	w9, eq  // eq = none
  40a284:	orr	w10, w9, w10
  40a288:	cmp	w10, #0x0
  40a28c:	eor	w9, w8, w9
  40a290:	cneg	w8, w11, eq  // eq = none
  40a294:	tbnz	w9, #0, 40a2b8 <__fxstatat@plt+0x7868>
  40a298:	ldr	x8, [x1, #96]
  40a29c:	ldr	x9, [x0, #96]
  40a2a0:	cmp	x8, x9
  40a2a4:	b.ge	40a2b0 <__fxstatat@plt+0x7860>  // b.tcont
  40a2a8:	mov	w8, #0xffffffff            	// #-1
  40a2ac:	b	40a2b8 <__fxstatat@plt+0x7868>
  40a2b0:	b.le	40a2c8 <__fxstatat@plt+0x7878>
  40a2b4:	mov	w8, #0x1                   	// #1
  40a2b8:	ldp	x20, x19, [sp, #16]
  40a2bc:	mov	w0, w8
  40a2c0:	ldp	x29, x30, [sp], #32
  40a2c4:	ret
  40a2c8:	ldr	x8, [x1, #104]
  40a2cc:	ldr	x9, [x0, #104]
  40a2d0:	subs	w8, w8, w9
  40a2d4:	b.ne	40a2b8 <__fxstatat@plt+0x7868>  // b.any
  40a2d8:	ldr	x19, [x0]
  40a2dc:	ldr	x20, [x1]
  40a2e0:	bl	4029e0 <__errno_location@plt>
  40a2e4:	str	wzr, [x0]
  40a2e8:	mov	x0, x19
  40a2ec:	mov	x1, x20
  40a2f0:	ldp	x20, x19, [sp, #16]
  40a2f4:	ldp	x29, x30, [sp], #32
  40a2f8:	b	402990 <strcoll@plt>
  40a2fc:	stp	x29, x30, [sp, #-32]!
  40a300:	stp	x20, x19, [sp, #16]
  40a304:	ldr	x8, [x0, #96]
  40a308:	ldr	x9, [x1, #96]
  40a30c:	mov	x29, sp
  40a310:	cmp	x8, x9
  40a314:	b.ge	40a320 <__fxstatat@plt+0x78d0>  // b.tcont
  40a318:	mov	w8, #0xffffffff            	// #-1
  40a31c:	b	40a33c <__fxstatat@plt+0x78ec>
  40a320:	b.le	40a32c <__fxstatat@plt+0x78dc>
  40a324:	mov	w8, #0x1                   	// #1
  40a328:	b	40a33c <__fxstatat@plt+0x78ec>
  40a32c:	ldr	x8, [x0, #104]
  40a330:	ldr	x9, [x1, #104]
  40a334:	subs	w8, w8, w9
  40a338:	b.eq	40a34c <__fxstatat@plt+0x78fc>  // b.none
  40a33c:	ldp	x20, x19, [sp, #16]
  40a340:	mov	w0, w8
  40a344:	ldp	x29, x30, [sp], #32
  40a348:	ret
  40a34c:	ldr	x19, [x1]
  40a350:	ldr	x20, [x0]
  40a354:	bl	4029e0 <__errno_location@plt>
  40a358:	str	wzr, [x0]
  40a35c:	mov	x0, x19
  40a360:	mov	x1, x20
  40a364:	ldp	x20, x19, [sp, #16]
  40a368:	ldp	x29, x30, [sp], #32
  40a36c:	b	402990 <strcoll@plt>
  40a370:	stp	x29, x30, [sp, #-32]!
  40a374:	stp	x20, x19, [sp, #16]
  40a378:	ldr	w9, [x0, #152]
  40a37c:	mov	w8, #0x1                   	// #1
  40a380:	mov	x29, sp
  40a384:	cmp	w9, #0x3
  40a388:	b.eq	40a3a4 <__fxstatat@plt+0x7954>  // b.none
  40a38c:	cmp	w9, #0x9
  40a390:	b.eq	40a3a4 <__fxstatat@plt+0x7954>  // b.none
  40a394:	ldr	w8, [x0, #156]
  40a398:	and	w8, w8, #0xf000
  40a39c:	cmp	w8, #0x4, lsl #12
  40a3a0:	cset	w8, eq  // eq = none
  40a3a4:	ldr	w9, [x1, #152]
  40a3a8:	cmp	w9, #0x9
  40a3ac:	b.eq	40a3b8 <__fxstatat@plt+0x7968>  // b.none
  40a3b0:	cmp	w9, #0x3
  40a3b4:	b.ne	40a3c0 <__fxstatat@plt+0x7970>  // b.any
  40a3b8:	tbnz	w8, #0, 40a3ec <__fxstatat@plt+0x799c>
  40a3bc:	b	40a408 <__fxstatat@plt+0x79b8>
  40a3c0:	ldr	w9, [x1, #156]
  40a3c4:	eor	w10, w8, #0x1
  40a3c8:	mov	w11, #0x1                   	// #1
  40a3cc:	and	w9, w9, #0xf000
  40a3d0:	cmp	w9, #0x4, lsl #12
  40a3d4:	cset	w9, eq  // eq = none
  40a3d8:	orr	w10, w9, w10
  40a3dc:	cmp	w10, #0x0
  40a3e0:	eor	w9, w8, w9
  40a3e4:	cneg	w8, w11, eq  // eq = none
  40a3e8:	tbnz	w9, #0, 40a40c <__fxstatat@plt+0x79bc>
  40a3ec:	ldr	x8, [x0, #96]
  40a3f0:	ldr	x9, [x1, #96]
  40a3f4:	cmp	x8, x9
  40a3f8:	b.ge	40a404 <__fxstatat@plt+0x79b4>  // b.tcont
  40a3fc:	mov	w8, #0xffffffff            	// #-1
  40a400:	b	40a40c <__fxstatat@plt+0x79bc>
  40a404:	b.le	40a41c <__fxstatat@plt+0x79cc>
  40a408:	mov	w8, #0x1                   	// #1
  40a40c:	ldp	x20, x19, [sp, #16]
  40a410:	mov	w0, w8
  40a414:	ldp	x29, x30, [sp], #32
  40a418:	ret
  40a41c:	ldr	x8, [x0, #104]
  40a420:	ldr	x9, [x1, #104]
  40a424:	subs	w8, w8, w9
  40a428:	b.ne	40a40c <__fxstatat@plt+0x79bc>  // b.any
  40a42c:	ldr	x19, [x1]
  40a430:	ldr	x20, [x0]
  40a434:	bl	4029e0 <__errno_location@plt>
  40a438:	str	wzr, [x0]
  40a43c:	mov	x0, x19
  40a440:	mov	x1, x20
  40a444:	ldp	x20, x19, [sp, #16]
  40a448:	ldp	x29, x30, [sp], #32
  40a44c:	b	402990 <strcoll@plt>
  40a450:	ldr	x8, [x1, #96]
  40a454:	ldr	x9, [x0, #96]
  40a458:	cmp	x8, x9
  40a45c:	b.ge	40a468 <__fxstatat@plt+0x7a18>  // b.tcont
  40a460:	mov	w0, #0xffffffff            	// #-1
  40a464:	ret
  40a468:	b.le	40a474 <__fxstatat@plt+0x7a24>
  40a46c:	mov	w0, #0x1                   	// #1
  40a470:	ret
  40a474:	ldr	x8, [x1, #104]
  40a478:	ldr	x9, [x0, #104]
  40a47c:	subs	w8, w8, w9
  40a480:	b.eq	40a48c <__fxstatat@plt+0x7a3c>  // b.none
  40a484:	mov	w0, w8
  40a488:	ret
  40a48c:	ldr	x0, [x0]
  40a490:	ldr	x1, [x1]
  40a494:	b	402800 <strcmp@plt>
  40a498:	ldr	w9, [x0, #152]
  40a49c:	mov	w8, #0x1                   	// #1
  40a4a0:	cmp	w9, #0x3
  40a4a4:	b.eq	40a4c0 <__fxstatat@plt+0x7a70>  // b.none
  40a4a8:	cmp	w9, #0x9
  40a4ac:	b.eq	40a4c0 <__fxstatat@plt+0x7a70>  // b.none
  40a4b0:	ldr	w8, [x0, #156]
  40a4b4:	and	w8, w8, #0xf000
  40a4b8:	cmp	w8, #0x4, lsl #12
  40a4bc:	cset	w8, eq  // eq = none
  40a4c0:	ldr	w9, [x1, #152]
  40a4c4:	cmp	w9, #0x9
  40a4c8:	b.eq	40a4d4 <__fxstatat@plt+0x7a84>  // b.none
  40a4cc:	cmp	w9, #0x3
  40a4d0:	b.ne	40a4e0 <__fxstatat@plt+0x7a90>  // b.any
  40a4d4:	tbnz	w8, #0, 40a50c <__fxstatat@plt+0x7abc>
  40a4d8:	mov	w0, #0x1                   	// #1
  40a4dc:	ret
  40a4e0:	ldr	w9, [x1, #156]
  40a4e4:	eor	w10, w8, #0x1
  40a4e8:	mov	w11, #0x1                   	// #1
  40a4ec:	and	w9, w9, #0xf000
  40a4f0:	cmp	w9, #0x4, lsl #12
  40a4f4:	cset	w9, eq  // eq = none
  40a4f8:	orr	w10, w9, w10
  40a4fc:	cmp	w10, #0x0
  40a500:	eor	w9, w8, w9
  40a504:	cneg	w8, w11, eq  // eq = none
  40a508:	tbnz	w9, #0, 40a540 <__fxstatat@plt+0x7af0>
  40a50c:	ldr	x8, [x1, #96]
  40a510:	ldr	x9, [x0, #96]
  40a514:	cmp	x8, x9
  40a518:	b.ge	40a524 <__fxstatat@plt+0x7ad4>  // b.tcont
  40a51c:	mov	w0, #0xffffffff            	// #-1
  40a520:	ret
  40a524:	b.le	40a530 <__fxstatat@plt+0x7ae0>
  40a528:	mov	w0, #0x1                   	// #1
  40a52c:	ret
  40a530:	ldr	x8, [x1, #104]
  40a534:	ldr	x9, [x0, #104]
  40a538:	subs	w8, w8, w9
  40a53c:	b.eq	40a548 <__fxstatat@plt+0x7af8>  // b.none
  40a540:	mov	w0, w8
  40a544:	ret
  40a548:	ldr	x0, [x0]
  40a54c:	ldr	x1, [x1]
  40a550:	b	402800 <strcmp@plt>
  40a554:	ldr	x8, [x0, #96]
  40a558:	ldr	x9, [x1, #96]
  40a55c:	cmp	x8, x9
  40a560:	b.ge	40a56c <__fxstatat@plt+0x7b1c>  // b.tcont
  40a564:	mov	w0, #0xffffffff            	// #-1
  40a568:	ret
  40a56c:	b.le	40a578 <__fxstatat@plt+0x7b28>
  40a570:	mov	w0, #0x1                   	// #1
  40a574:	ret
  40a578:	ldr	x8, [x0, #104]
  40a57c:	ldr	x9, [x1, #104]
  40a580:	subs	w8, w8, w9
  40a584:	b.eq	40a590 <__fxstatat@plt+0x7b40>  // b.none
  40a588:	mov	w0, w8
  40a58c:	ret
  40a590:	ldr	x8, [x1]
  40a594:	ldr	x1, [x0]
  40a598:	mov	x0, x8
  40a59c:	b	402800 <strcmp@plt>
  40a5a0:	ldr	w9, [x0, #152]
  40a5a4:	mov	w8, #0x1                   	// #1
  40a5a8:	cmp	w9, #0x3
  40a5ac:	b.eq	40a5c8 <__fxstatat@plt+0x7b78>  // b.none
  40a5b0:	cmp	w9, #0x9
  40a5b4:	b.eq	40a5c8 <__fxstatat@plt+0x7b78>  // b.none
  40a5b8:	ldr	w8, [x0, #156]
  40a5bc:	and	w8, w8, #0xf000
  40a5c0:	cmp	w8, #0x4, lsl #12
  40a5c4:	cset	w8, eq  // eq = none
  40a5c8:	ldr	w9, [x1, #152]
  40a5cc:	cmp	w9, #0x9
  40a5d0:	b.eq	40a5dc <__fxstatat@plt+0x7b8c>  // b.none
  40a5d4:	cmp	w9, #0x3
  40a5d8:	b.ne	40a5e8 <__fxstatat@plt+0x7b98>  // b.any
  40a5dc:	tbnz	w8, #0, 40a614 <__fxstatat@plt+0x7bc4>
  40a5e0:	mov	w0, #0x1                   	// #1
  40a5e4:	ret
  40a5e8:	ldr	w9, [x1, #156]
  40a5ec:	eor	w10, w8, #0x1
  40a5f0:	mov	w11, #0x1                   	// #1
  40a5f4:	and	w9, w9, #0xf000
  40a5f8:	cmp	w9, #0x4, lsl #12
  40a5fc:	cset	w9, eq  // eq = none
  40a600:	orr	w10, w9, w10
  40a604:	cmp	w10, #0x0
  40a608:	eor	w9, w8, w9
  40a60c:	cneg	w8, w11, eq  // eq = none
  40a610:	tbnz	w9, #0, 40a648 <__fxstatat@plt+0x7bf8>
  40a614:	ldr	x8, [x0, #96]
  40a618:	ldr	x9, [x1, #96]
  40a61c:	cmp	x8, x9
  40a620:	b.ge	40a62c <__fxstatat@plt+0x7bdc>  // b.tcont
  40a624:	mov	w0, #0xffffffff            	// #-1
  40a628:	ret
  40a62c:	b.le	40a638 <__fxstatat@plt+0x7be8>
  40a630:	mov	w0, #0x1                   	// #1
  40a634:	ret
  40a638:	ldr	x8, [x0, #104]
  40a63c:	ldr	x9, [x1, #104]
  40a640:	subs	w8, w8, w9
  40a644:	b.eq	40a650 <__fxstatat@plt+0x7c00>  // b.none
  40a648:	mov	w0, w8
  40a64c:	ret
  40a650:	ldr	x8, [x1]
  40a654:	ldr	x1, [x0]
  40a658:	mov	x0, x8
  40a65c:	b	402800 <strcmp@plt>
  40a660:	stp	x29, x30, [sp, #-48]!
  40a664:	stp	x28, x21, [sp, #16]
  40a668:	stp	x20, x19, [sp, #32]
  40a66c:	mov	x29, sp
  40a670:	sub	sp, sp, #0x290
  40a674:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a678:	ldrb	w8, [x8, #1520]
  40a67c:	mov	x20, x1
  40a680:	mov	x19, x0
  40a684:	cbz	w8, 40a6f0 <__fxstatat@plt+0x7ca0>
  40a688:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a68c:	add	x9, x9, #0x3a8
  40a690:	ldr	x8, [x9]
  40a694:	cbz	x8, 40a6f0 <__fxstatat@plt+0x7ca0>
  40a698:	ldr	x0, [x9, #8]
  40a69c:	cmp	x8, #0x2
  40a6a0:	b.eq	40a6bc <__fxstatat@plt+0x7c6c>  // b.none
  40a6a4:	cmp	x8, #0x1
  40a6a8:	b.ne	40a6d0 <__fxstatat@plt+0x7c80>  // b.any
  40a6ac:	ldrb	w8, [x0]
  40a6b0:	cmp	w8, #0x30
  40a6b4:	b.ne	40a6d0 <__fxstatat@plt+0x7c80>  // b.any
  40a6b8:	b	40a6f0 <__fxstatat@plt+0x7ca0>
  40a6bc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40a6c0:	add	x1, x1, #0xbfe
  40a6c4:	mov	w2, #0x2                   	// #2
  40a6c8:	bl	402640 <strncmp@plt>
  40a6cc:	cbz	w0, 40a6f0 <__fxstatat@plt+0x7ca0>
  40a6d0:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a6d4:	add	x21, x21, #0x368
  40a6d8:	mov	x0, x21
  40a6dc:	bl	407a6c <__fxstatat@plt+0x501c>
  40a6e0:	add	x0, x21, #0x40
  40a6e4:	bl	407a6c <__fxstatat@plt+0x501c>
  40a6e8:	add	x0, x21, #0x10
  40a6ec:	bl	407a6c <__fxstatat@plt+0x501c>
  40a6f0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a6f4:	ldrb	w8, [x8, #2306]
  40a6f8:	cmp	w8, #0x1
  40a6fc:	b.ne	40a754 <__fxstatat@plt+0x7d04>  // b.any
  40a700:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a704:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40a708:	ldr	w8, [x8, #1524]
  40a70c:	ldr	w9, [x9, #1420]
  40a710:	ldrb	w10, [x19, #168]
  40a714:	cmp	w8, #0x4
  40a718:	csel	w21, wzr, w9, eq  // eq = none
  40a71c:	cbz	w10, 40a738 <__fxstatat@plt+0x7ce8>
  40a720:	ldr	x0, [x19, #32]
  40a724:	cbz	x0, 40a738 <__fxstatat@plt+0x7ce8>
  40a728:	add	x1, sp, #0x4
  40a72c:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  40a730:	mov	x3, x0
  40a734:	b	40a740 <__fxstatat@plt+0x7cf0>
  40a738:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40a73c:	add	x3, x3, #0x15e
  40a740:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40a744:	add	x1, x1, #0x33f
  40a748:	mov	w0, #0x1                   	// #1
  40a74c:	mov	w2, w21
  40a750:	bl	402670 <__printf_chk@plt>
  40a754:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a758:	ldrb	w8, [x8, #1653]
  40a75c:	cmp	w8, #0x1
  40a760:	b.ne	40a7c8 <__fxstatat@plt+0x7d78>  // b.any
  40a764:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a768:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40a76c:	ldr	w8, [x8, #1524]
  40a770:	ldr	w9, [x9, #1424]
  40a774:	ldrb	w10, [x19, #168]
  40a778:	cmp	w8, #0x4
  40a77c:	csel	w21, wzr, w9, eq  // eq = none
  40a780:	cbz	w10, 40a7ac <__fxstatat@plt+0x7d5c>
  40a784:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a788:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a78c:	ldr	x0, [x19, #88]
  40a790:	ldr	w2, [x8, #2348]
  40a794:	ldr	x4, [x9, #2360]
  40a798:	add	x1, sp, #0x4
  40a79c:	mov	w3, #0x200                 	// #512
  40a7a0:	bl	40e13c <__fxstatat@plt+0xb6ec>
  40a7a4:	mov	x3, x0
  40a7a8:	b	40a7b4 <__fxstatat@plt+0x7d64>
  40a7ac:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40a7b0:	add	x3, x3, #0x15e
  40a7b4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40a7b8:	add	x1, x1, #0x33f
  40a7bc:	mov	w0, #0x1                   	// #1
  40a7c0:	mov	w2, w21
  40a7c4:	bl	402670 <__printf_chk@plt>
  40a7c8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a7cc:	ldrb	w8, [x8, #1652]
  40a7d0:	cmp	w8, #0x1
  40a7d4:	b.ne	40a804 <__fxstatat@plt+0x7db4>  // b.any
  40a7d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a7dc:	ldr	w8, [x8, #1524]
  40a7e0:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40a7e4:	ldr	w9, [x9, #1444]
  40a7e8:	ldr	x3, [x19, #160]
  40a7ec:	cmp	w8, #0x4
  40a7f0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40a7f4:	csel	w2, wzr, w9, eq  // eq = none
  40a7f8:	add	x1, x1, #0x33f
  40a7fc:	mov	w0, #0x1                   	// #1
  40a800:	bl	402670 <__printf_chk@plt>
  40a804:	mov	x0, x19
  40a808:	mov	w1, wzr
  40a80c:	mov	x2, xzr
  40a810:	mov	x3, x20
  40a814:	bl	40aa00 <__fxstatat@plt+0x7fb0>
  40a818:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a81c:	ldr	w8, [x8, #1536]
  40a820:	cbz	w8, 40a834 <__fxstatat@plt+0x7de4>
  40a824:	ldrb	w0, [x19, #168]
  40a828:	ldr	w1, [x19, #40]
  40a82c:	ldr	w2, [x19, #152]
  40a830:	bl	40b084 <__fxstatat@plt+0x8634>
  40a834:	add	sp, sp, #0x290
  40a838:	ldp	x20, x19, [sp, #32]
  40a83c:	ldp	x28, x21, [sp, #16]
  40a840:	ldp	x29, x30, [sp], #48
  40a844:	ret
  40a848:	sub	sp, sp, #0x70
  40a84c:	stp	x29, x30, [sp, #16]
  40a850:	stp	x28, x27, [sp, #32]
  40a854:	stp	x26, x25, [sp, #48]
  40a858:	stp	x24, x23, [sp, #64]
  40a85c:	stp	x22, x21, [sp, #80]
  40a860:	stp	x20, x19, [sp, #96]
  40a864:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a868:	ldr	x8, [x25, #1872]
  40a86c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a870:	add	x29, sp, #0x10
  40a874:	cbz	x8, 40a99c <__fxstatat@plt+0x7f4c>
  40a878:	adrp	x27, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40a87c:	ldr	x8, [x27, #1408]
  40a880:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x18060>
  40a884:	ldr	x9, [x28, #2328]
  40a888:	mov	w19, w0
  40a88c:	ldr	x20, [x8]
  40a890:	cbz	x9, 40a8a4 <__fxstatat@plt+0x7e54>
  40a894:	mov	x0, x20
  40a898:	bl	40b1a8 <__fxstatat@plt+0x8758>
  40a89c:	mov	x24, x0
  40a8a0:	b	40a8a8 <__fxstatat@plt+0x7e58>
  40a8a4:	mov	x24, xzr
  40a8a8:	mov	x0, x20
  40a8ac:	mov	x1, xzr
  40a8b0:	bl	40a660 <__fxstatat@plt+0x7c10>
  40a8b4:	ldr	x8, [x25, #1872]
  40a8b8:	cmp	x8, #0x2
  40a8bc:	b.cc	40a99c <__fxstatat@plt+0x7f4c>  // b.lo, b.ul, b.last
  40a8c0:	and	w8, w19, #0xff
  40a8c4:	mov	w20, #0x1                   	// #1
  40a8c8:	stur	w8, [x29, #-4]
  40a8cc:	ldr	x8, [x27, #1408]
  40a8d0:	ldr	x9, [x28, #2328]
  40a8d4:	ldr	x21, [x8, x20, lsl #3]
  40a8d8:	cbz	x9, 40a8ec <__fxstatat@plt+0x7e9c>
  40a8dc:	mov	x0, x21
  40a8e0:	bl	40b1a8 <__fxstatat@plt+0x8758>
  40a8e4:	mov	x22, x0
  40a8e8:	b	40a8f0 <__fxstatat@plt+0x7ea0>
  40a8ec:	mov	x22, xzr
  40a8f0:	ldr	x9, [x28, #2328]
  40a8f4:	add	x8, x24, #0x2
  40a8f8:	cbz	x9, 40a920 <__fxstatat@plt+0x7ed0>
  40a8fc:	mov	x10, #0xfffffffffffffffd    	// #-3
  40a900:	sub	x10, x10, x22
  40a904:	mov	x23, xzr
  40a908:	cmp	x24, x10
  40a90c:	mov	w24, #0xa                   	// #10
  40a910:	b.hi	40a928 <__fxstatat@plt+0x7ed8>  // b.pmore
  40a914:	add	x10, x8, x22
  40a918:	cmp	x10, x9
  40a91c:	b.cs	40a928 <__fxstatat@plt+0x7ed8>  // b.hs, b.nlast
  40a920:	mov	w24, #0x20                  	// #32
  40a924:	mov	x23, x8
  40a928:	ldr	x0, [x26, #1456]
  40a92c:	ldp	x8, x9, [x0, #40]
  40a930:	cmp	x8, x9
  40a934:	b.cs	40a984 <__fxstatat@plt+0x7f34>  // b.hs, b.nlast
  40a938:	add	x9, x8, #0x1
  40a93c:	str	x9, [x0, #40]
  40a940:	strb	w19, [x8]
  40a944:	ldr	x0, [x26, #1456]
  40a948:	ldp	x8, x9, [x0, #40]
  40a94c:	cmp	x8, x9
  40a950:	b.cs	40a990 <__fxstatat@plt+0x7f40>  // b.hs, b.nlast
  40a954:	add	x9, x8, #0x1
  40a958:	str	x9, [x0, #40]
  40a95c:	strb	w24, [x8]
  40a960:	mov	x0, x21
  40a964:	mov	x1, x23
  40a968:	bl	40a660 <__fxstatat@plt+0x7c10>
  40a96c:	ldr	x8, [x25, #1872]
  40a970:	add	x20, x20, #0x1
  40a974:	add	x24, x23, x22
  40a978:	cmp	x20, x8
  40a97c:	b.cc	40a8cc <__fxstatat@plt+0x7e7c>  // b.lo, b.ul, b.last
  40a980:	b	40a99c <__fxstatat@plt+0x7f4c>
  40a984:	ldur	w1, [x29, #-4]
  40a988:	bl	402790 <__overflow@plt>
  40a98c:	b	40a944 <__fxstatat@plt+0x7ef4>
  40a990:	mov	w1, w24
  40a994:	bl	402790 <__overflow@plt>
  40a998:	b	40a960 <__fxstatat@plt+0x7f10>
  40a99c:	ldr	x0, [x26, #1456]
  40a9a0:	ldp	x8, x9, [x0, #40]
  40a9a4:	cmp	x8, x9
  40a9a8:	b.cs	40a9dc <__fxstatat@plt+0x7f8c>  // b.hs, b.nlast
  40a9ac:	add	x9, x8, #0x1
  40a9b0:	mov	w10, #0xa                   	// #10
  40a9b4:	str	x9, [x0, #40]
  40a9b8:	strb	w10, [x8]
  40a9bc:	ldp	x20, x19, [sp, #96]
  40a9c0:	ldp	x22, x21, [sp, #80]
  40a9c4:	ldp	x24, x23, [sp, #64]
  40a9c8:	ldp	x26, x25, [sp, #48]
  40a9cc:	ldp	x28, x27, [sp, #32]
  40a9d0:	ldp	x29, x30, [sp, #16]
  40a9d4:	add	sp, sp, #0x70
  40a9d8:	ret
  40a9dc:	ldp	x20, x19, [sp, #96]
  40a9e0:	ldp	x22, x21, [sp, #80]
  40a9e4:	ldp	x24, x23, [sp, #64]
  40a9e8:	ldp	x26, x25, [sp, #48]
  40a9ec:	ldp	x28, x27, [sp, #32]
  40a9f0:	ldp	x29, x30, [sp, #16]
  40a9f4:	mov	w1, #0xa                   	// #10
  40a9f8:	add	sp, sp, #0x70
  40a9fc:	b	402790 <__overflow@plt>
  40aa00:	stp	x29, x30, [sp, #-80]!
  40aa04:	tst	w1, #0x1
  40aa08:	mov	w8, #0x8                   	// #8
  40aa0c:	stp	x26, x25, [sp, #16]
  40aa10:	stp	x24, x23, [sp, #32]
  40aa14:	stp	x22, x21, [sp, #48]
  40aa18:	stp	x20, x19, [sp, #64]
  40aa1c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40aa20:	csel	x8, x8, xzr, ne  // ne = any
  40aa24:	ldrb	w9, [x9, #1520]
  40aa28:	ldr	x23, [x0, x8]
  40aa2c:	mov	x19, x3
  40aa30:	mov	w20, w1
  40aa34:	mov	x21, x0
  40aa38:	mov	x22, x2
  40aa3c:	mov	x29, sp
  40aa40:	cbz	w9, 40ae04 <__fxstatat@plt+0x83b4>
  40aa44:	tbz	w20, #0, 40aac4 <__fxstatat@plt+0x8074>
  40aa48:	ldr	x24, [x21, #8]
  40aa4c:	ldrb	w8, [x21, #169]
  40aa50:	ldr	w25, [x21, #156]
  40aa54:	cbz	w8, 40ab40 <__fxstatat@plt+0x80f0>
  40aa58:	mov	w9, wzr
  40aa5c:	ldrb	w8, [x21, #168]
  40aa60:	cbnz	w8, 40aafc <__fxstatat@plt+0x80ac>
  40aa64:	ldr	w8, [x21, #152]
  40aa68:	cmp	w8, #0x8
  40aa6c:	b.eq	40aa78 <__fxstatat@plt+0x8028>  // b.none
  40aa70:	cmp	w8, #0x5
  40aa74:	b.ne	40ab80 <__fxstatat@plt+0x8130>  // b.any
  40aa78:	mov	x0, x24
  40aa7c:	bl	402430 <strlen@plt>
  40aa80:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40aa84:	ldr	x26, [x8, #1392]
  40aa88:	cbz	x26, 40aabc <__fxstatat@plt+0x806c>
  40aa8c:	mov	x25, x0
  40aa90:	add	x24, x24, x0
  40aa94:	b	40aaa0 <__fxstatat@plt+0x8050>
  40aa98:	ldr	x26, [x26, #32]
  40aa9c:	cbz	x26, 40aabc <__fxstatat@plt+0x806c>
  40aaa0:	ldr	x2, [x26]
  40aaa4:	cmp	x2, x25
  40aaa8:	b.hi	40aa98 <__fxstatat@plt+0x8048>  // b.pmore
  40aaac:	ldr	x1, [x26, #8]
  40aab0:	sub	x0, x24, x2
  40aab4:	bl	40bed0 <__fxstatat@plt+0x9480>
  40aab8:	cbnz	w0, 40aa98 <__fxstatat@plt+0x8048>
  40aabc:	mov	w8, #0x5                   	// #5
  40aac0:	b	40adac <__fxstatat@plt+0x835c>
  40aac4:	ldrb	w9, [x21, #169]
  40aac8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40aacc:	ldrb	w8, [x8, #1523]
  40aad0:	mov	w10, #0x9c                  	// #156
  40aad4:	cmp	w9, #0x0
  40aad8:	cset	w11, eq  // eq = none
  40aadc:	orn	w8, w11, w8
  40aae0:	tst	w8, #0x1
  40aae4:	mov	w8, #0x28                  	// #40
  40aae8:	csel	x8, x8, x10, ne  // ne = any
  40aaec:	ldr	x24, [x21]
  40aaf0:	ldr	w25, [x21, x8]
  40aaf4:	ldrb	w8, [x21, #168]
  40aaf8:	cbz	w8, 40aa64 <__fxstatat@plt+0x8014>
  40aafc:	and	w8, w25, #0xf000
  40ab00:	sub	w8, w8, #0x1, lsl #12
  40ab04:	lsr	w10, w8, #12
  40ab08:	cmp	w10, #0xb
  40ab0c:	b.hi	40ada4 <__fxstatat@plt+0x8354>  // b.pmore
  40ab10:	adrp	x11, 416000 <_obstack_memory_used@@Base+0x2060>
  40ab14:	add	x11, x11, #0x328
  40ab18:	adr	x12, 40ab34 <__fxstatat@plt+0x80e4>
  40ab1c:	ldrb	w13, [x11, x10]
  40ab20:	add	x12, x12, x13, lsl #2
  40ab24:	mov	x26, xzr
  40ab28:	mov	w8, #0x8                   	// #8
  40ab2c:	mov	w10, #0x7                   	// #7
  40ab30:	br	x12
  40ab34:	mov	x26, xzr
  40ab38:	mov	w8, #0xb                   	// #11
  40ab3c:	b	40adac <__fxstatat@plt+0x835c>
  40ab40:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ab44:	add	x9, x9, #0x428
  40ab48:	ldr	x8, [x9]
  40ab4c:	cbz	x8, 40ab70 <__fxstatat@plt+0x8120>
  40ab50:	ldr	x0, [x9, #8]
  40ab54:	cmp	x8, #0x2
  40ab58:	b.eq	40ad28 <__fxstatat@plt+0x82d8>  // b.none
  40ab5c:	cmp	x8, #0x1
  40ab60:	b.ne	40ad3c <__fxstatat@plt+0x82ec>  // b.any
  40ab64:	ldrb	w8, [x0]
  40ab68:	cmp	w8, #0x30
  40ab6c:	b.ne	40ad3c <__fxstatat@plt+0x82ec>  // b.any
  40ab70:	mov	w9, #0xffffffff            	// #-1
  40ab74:	ldrb	w8, [x21, #168]
  40ab78:	cbnz	w8, 40aafc <__fxstatat@plt+0x80ac>
  40ab7c:	b	40aa64 <__fxstatat@plt+0x8014>
  40ab80:	adrp	x10, 417000 <_obstack_memory_used@@Base+0x3060>
  40ab84:	add	x10, x10, #0xe18
  40ab88:	ldr	w10, [x10, x8, lsl #2]
  40ab8c:	mov	x26, xzr
  40ab90:	cbnz	w9, 40ad48 <__fxstatat@plt+0x82f8>
  40ab94:	cmp	w10, #0x7
  40ab98:	mov	w8, w10
  40ab9c:	b.ne	40adac <__fxstatat@plt+0x835c>  // b.any
  40aba0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40aba4:	ldrb	w8, [x8, #1523]
  40aba8:	tbnz	w8, #0, 40ada4 <__fxstatat@plt+0x8354>
  40abac:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40abb0:	add	x9, x9, #0x438
  40abb4:	ldr	x8, [x9]
  40abb8:	cbz	x8, 40abdc <__fxstatat@plt+0x818c>
  40abbc:	ldr	x0, [x9, #8]
  40abc0:	cmp	x8, #0x2
  40abc4:	b.eq	40ad90 <__fxstatat@plt+0x8340>  // b.none
  40abc8:	cmp	x8, #0x1
  40abcc:	b.ne	40ada4 <__fxstatat@plt+0x8354>  // b.any
  40abd0:	ldrb	w8, [x0]
  40abd4:	cmp	w8, #0x30
  40abd8:	b.ne	40ada4 <__fxstatat@plt+0x8354>  // b.any
  40abdc:	mov	x26, xzr
  40abe0:	mov	w8, #0x7                   	// #7
  40abe4:	b	40adac <__fxstatat@plt+0x835c>
  40abe8:	tst	w25, #0x200
  40abec:	cset	w24, eq  // eq = none
  40abf0:	tbz	w25, #1, 40ac28 <__fxstatat@plt+0x81d8>
  40abf4:	tbnz	w24, #0, 40ac28 <__fxstatat@plt+0x81d8>
  40abf8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40abfc:	add	x9, x9, #0x4a8
  40ac00:	ldr	x8, [x9]
  40ac04:	cbz	x8, 40ac28 <__fxstatat@plt+0x81d8>
  40ac08:	ldr	x0, [x9, #8]
  40ac0c:	cmp	x8, #0x2
  40ac10:	b.eq	40af84 <__fxstatat@plt+0x8534>  // b.none
  40ac14:	cmp	x8, #0x1
  40ac18:	b.ne	40af98 <__fxstatat@plt+0x8548>  // b.any
  40ac1c:	ldrb	w8, [x0]
  40ac20:	cmp	w8, #0x30
  40ac24:	b.ne	40af98 <__fxstatat@plt+0x8548>  // b.any
  40ac28:	tbz	w25, #1, 40ad50 <__fxstatat@plt+0x8300>
  40ac2c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ac30:	add	x9, x9, #0x498
  40ac34:	ldr	x8, [x9]
  40ac38:	cbz	x8, 40ad50 <__fxstatat@plt+0x8300>
  40ac3c:	ldr	x0, [x9, #8]
  40ac40:	cmp	x8, #0x2
  40ac44:	b.eq	40afc4 <__fxstatat@plt+0x8574>  // b.none
  40ac48:	cmp	x8, #0x1
  40ac4c:	b.ne	40aff8 <__fxstatat@plt+0x85a8>  // b.any
  40ac50:	ldrb	w8, [x0]
  40ac54:	mov	w9, #0x6                   	// #6
  40ac58:	cmp	w8, #0x30
  40ac5c:	cset	w8, ne  // ne = any
  40ac60:	orr	w10, w8, w24
  40ac64:	mov	w8, #0x13                  	// #19
  40ac68:	csel	w8, w8, w9, ne  // ne = any
  40ac6c:	tbz	w10, #0, 40ad54 <__fxstatat@plt+0x8304>
  40ac70:	b	40aff0 <__fxstatat@plt+0x85a0>
  40ac74:	mov	x26, xzr
  40ac78:	mov	w8, #0xa                   	// #10
  40ac7c:	b	40adac <__fxstatat@plt+0x835c>
  40ac80:	tbz	w25, #11, 40acb4 <__fxstatat@plt+0x8264>
  40ac84:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ac88:	add	x9, x9, #0x468
  40ac8c:	ldr	x8, [x9]
  40ac90:	cbz	x8, 40acb4 <__fxstatat@plt+0x8264>
  40ac94:	ldr	x0, [x9, #8]
  40ac98:	cmp	x8, #0x2
  40ac9c:	b.eq	40afa4 <__fxstatat@plt+0x8554>  // b.none
  40aca0:	cmp	x8, #0x1
  40aca4:	b.ne	40afb8 <__fxstatat@plt+0x8568>  // b.any
  40aca8:	ldrb	w8, [x0]
  40acac:	cmp	w8, #0x30
  40acb0:	b.ne	40afb8 <__fxstatat@plt+0x8568>  // b.any
  40acb4:	tbz	w25, #10, 40ace8 <__fxstatat@plt+0x8298>
  40acb8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40acbc:	add	x9, x9, #0x478
  40acc0:	ldr	x8, [x9]
  40acc4:	cbz	x8, 40ace8 <__fxstatat@plt+0x8298>
  40acc8:	ldr	x0, [x9, #8]
  40accc:	cmp	x8, #0x2
  40acd0:	b.eq	40b004 <__fxstatat@plt+0x85b4>  // b.none
  40acd4:	cmp	x8, #0x1
  40acd8:	b.ne	40b018 <__fxstatat@plt+0x85c8>  // b.any
  40acdc:	ldrb	w8, [x0]
  40ace0:	cmp	w8, #0x30
  40ace4:	b.ne	40b018 <__fxstatat@plt+0x85c8>  // b.any
  40ace8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40acec:	add	x9, x9, #0x4b8
  40acf0:	ldr	x8, [x9]
  40acf4:	cbz	x8, 40af08 <__fxstatat@plt+0x84b8>
  40acf8:	ldr	x0, [x9, #8]
  40acfc:	cmp	x8, #0x2
  40ad00:	b.eq	40aee0 <__fxstatat@plt+0x8490>  // b.none
  40ad04:	cmp	x8, #0x1
  40ad08:	b.ne	40aef4 <__fxstatat@plt+0x84a4>  // b.any
  40ad0c:	ldrb	w8, [x0]
  40ad10:	cmp	w8, #0x30
  40ad14:	b.ne	40aef4 <__fxstatat@plt+0x84a4>  // b.any
  40ad18:	b	40af08 <__fxstatat@plt+0x84b8>
  40ad1c:	mov	x26, xzr
  40ad20:	mov	w8, #0x9                   	// #9
  40ad24:	b	40adac <__fxstatat@plt+0x835c>
  40ad28:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40ad2c:	add	x1, x1, #0xbfe
  40ad30:	mov	w2, #0x2                   	// #2
  40ad34:	bl	402640 <strncmp@plt>
  40ad38:	cbz	w0, 40ab70 <__fxstatat@plt+0x8120>
  40ad3c:	mov	x26, xzr
  40ad40:	mov	w8, #0xc                   	// #12
  40ad44:	b	40adac <__fxstatat@plt+0x835c>
  40ad48:	mov	w8, w10
  40ad4c:	b	40adac <__fxstatat@plt+0x835c>
  40ad50:	tbz	w25, #9, 40ad84 <__fxstatat@plt+0x8334>
  40ad54:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ad58:	add	x9, x9, #0x488
  40ad5c:	ldr	x8, [x9]
  40ad60:	cbz	x8, 40ad84 <__fxstatat@plt+0x8334>
  40ad64:	ldr	x0, [x9, #8]
  40ad68:	cmp	x8, #0x2
  40ad6c:	b.eq	40b024 <__fxstatat@plt+0x85d4>  // b.none
  40ad70:	cmp	x8, #0x1
  40ad74:	b.ne	40b038 <__fxstatat@plt+0x85e8>  // b.any
  40ad78:	ldrb	w8, [x0]
  40ad7c:	cmp	w8, #0x30
  40ad80:	b.ne	40b038 <__fxstatat@plt+0x85e8>  // b.any
  40ad84:	mov	x26, xzr
  40ad88:	mov	w8, #0x6                   	// #6
  40ad8c:	b	40adac <__fxstatat@plt+0x835c>
  40ad90:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40ad94:	add	x1, x1, #0xbfe
  40ad98:	mov	w2, #0x2                   	// #2
  40ad9c:	bl	402640 <strncmp@plt>
  40ada0:	cbz	w0, 40abdc <__fxstatat@plt+0x818c>
  40ada4:	mov	x26, xzr
  40ada8:	mov	w8, #0xd                   	// #13
  40adac:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  40adb0:	add	x10, x10, #0x368
  40adb4:	add	x9, x26, #0x10
  40adb8:	add	x8, x10, w8, uxtw #4
  40adbc:	cmp	x26, #0x0
  40adc0:	csel	x3, x8, x9, eq  // eq = none
  40adc4:	ldr	x8, [x3, #8]
  40adc8:	cbz	x8, 40add4 <__fxstatat@plt+0x8384>
  40adcc:	mov	w24, #0x1                   	// #1
  40add0:	b	40ae0c <__fxstatat@plt+0x83bc>
  40add4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40add8:	add	x9, x9, #0x3a8
  40addc:	ldr	x8, [x9]
  40ade0:	cbz	x8, 40ae04 <__fxstatat@plt+0x83b4>
  40ade4:	ldr	x0, [x9, #8]
  40ade8:	cmp	x8, #0x2
  40adec:	b.eq	40aec0 <__fxstatat@plt+0x8470>  // b.none
  40adf0:	cmp	x8, #0x1
  40adf4:	b.ne	40aeb8 <__fxstatat@plt+0x8468>  // b.any
  40adf8:	ldrb	w8, [x0]
  40adfc:	cmp	w8, #0x30
  40ae00:	b.ne	40aeb8 <__fxstatat@plt+0x8468>  // b.any
  40ae04:	mov	x3, xzr
  40ae08:	mov	w24, wzr
  40ae0c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ae10:	ldr	w2, [x21, #180]
  40ae14:	ldr	x1, [x8, #1904]
  40ae18:	ldr	x6, [x21, #16]
  40ae1c:	mvn	w8, w20
  40ae20:	and	w4, w8, #0x1
  40ae24:	mov	x0, x23
  40ae28:	mov	x5, x22
  40ae2c:	bl	408038 <__fxstatat@plt+0x55e8>
  40ae30:	mov	x20, x0
  40ae34:	bl	4084a0 <__fxstatat@plt+0x5a50>
  40ae38:	cbz	w24, 40ae9c <__fxstatat@plt+0x844c>
  40ae3c:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ae40:	add	x0, x0, #0x388
  40ae44:	ldr	x8, [x0, #8]
  40ae48:	cbnz	x8, 40ae68 <__fxstatat@plt+0x8418>
  40ae4c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ae50:	add	x21, x21, #0x368
  40ae54:	mov	x0, x21
  40ae58:	bl	407a6c <__fxstatat@plt+0x501c>
  40ae5c:	add	x0, x21, #0x30
  40ae60:	bl	407a6c <__fxstatat@plt+0x501c>
  40ae64:	add	x0, x21, #0x10
  40ae68:	bl	407a6c <__fxstatat@plt+0x501c>
  40ae6c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ae70:	ldr	x8, [x8, #2328]
  40ae74:	cbz	x8, 40ae9c <__fxstatat@plt+0x844c>
  40ae78:	add	x10, x19, x20
  40ae7c:	sub	x10, x10, #0x1
  40ae80:	udiv	x9, x19, x8
  40ae84:	udiv	x8, x10, x8
  40ae88:	cmp	x9, x8
  40ae8c:	b.eq	40ae9c <__fxstatat@plt+0x844c>  // b.none
  40ae90:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ae94:	add	x0, x0, #0x4d8
  40ae98:	bl	407a6c <__fxstatat@plt+0x501c>
  40ae9c:	mov	x0, x20
  40aea0:	ldp	x20, x19, [sp, #64]
  40aea4:	ldp	x22, x21, [sp, #48]
  40aea8:	ldp	x24, x23, [sp, #32]
  40aeac:	ldp	x26, x25, [sp, #16]
  40aeb0:	ldp	x29, x30, [sp], #80
  40aeb4:	ret
  40aeb8:	mov	x3, xzr
  40aebc:	b	40adcc <__fxstatat@plt+0x837c>
  40aec0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40aec4:	add	x1, x1, #0xbfe
  40aec8:	mov	w2, #0x2                   	// #2
  40aecc:	bl	402640 <strncmp@plt>
  40aed0:	cmp	w0, #0x0
  40aed4:	mov	x3, xzr
  40aed8:	cset	w24, ne  // ne = any
  40aedc:	b	40ae0c <__fxstatat@plt+0x83bc>
  40aee0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40aee4:	add	x1, x1, #0xbfe
  40aee8:	mov	w2, #0x2                   	// #2
  40aeec:	bl	402640 <strncmp@plt>
  40aef0:	cbz	w0, 40af08 <__fxstatat@plt+0x84b8>
  40aef4:	ldrb	w8, [x21, #176]
  40aef8:	cbz	w8, 40af08 <__fxstatat@plt+0x84b8>
  40aefc:	mov	x26, xzr
  40af00:	mov	w8, #0x15                  	// #21
  40af04:	b	40adac <__fxstatat@plt+0x835c>
  40af08:	mov	w8, #0x49                  	// #73
  40af0c:	tst	w25, w8
  40af10:	b.eq	40af44 <__fxstatat@plt+0x84f4>  // b.none
  40af14:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40af18:	add	x9, x9, #0x448
  40af1c:	ldr	x8, [x9]
  40af20:	cbz	x8, 40af44 <__fxstatat@plt+0x84f4>
  40af24:	ldr	x0, [x9, #8]
  40af28:	cmp	x8, #0x2
  40af2c:	b.eq	40b044 <__fxstatat@plt+0x85f4>  // b.none
  40af30:	cmp	x8, #0x1
  40af34:	b.ne	40b058 <__fxstatat@plt+0x8608>  // b.any
  40af38:	ldrb	w8, [x0]
  40af3c:	cmp	w8, #0x30
  40af40:	b.ne	40b058 <__fxstatat@plt+0x8608>  // b.any
  40af44:	ldr	w8, [x21, #44]
  40af48:	cmp	w8, #0x2
  40af4c:	b.cc	40aa78 <__fxstatat@plt+0x8028>  // b.lo, b.ul, b.last
  40af50:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40af54:	add	x9, x9, #0x4c8
  40af58:	ldr	x8, [x9]
  40af5c:	cbz	x8, 40aa78 <__fxstatat@plt+0x8028>
  40af60:	ldr	x0, [x9, #8]
  40af64:	cmp	x8, #0x2
  40af68:	b.eq	40b064 <__fxstatat@plt+0x8614>  // b.none
  40af6c:	cmp	x8, #0x1
  40af70:	b.ne	40b078 <__fxstatat@plt+0x8628>  // b.any
  40af74:	ldrb	w8, [x0]
  40af78:	cmp	w8, #0x30
  40af7c:	b.eq	40aa78 <__fxstatat@plt+0x8028>  // b.none
  40af80:	b	40b078 <__fxstatat@plt+0x8628>
  40af84:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40af88:	add	x1, x1, #0xbfe
  40af8c:	mov	w2, #0x2                   	// #2
  40af90:	bl	402640 <strncmp@plt>
  40af94:	cbz	w0, 40ac28 <__fxstatat@plt+0x81d8>
  40af98:	mov	x26, xzr
  40af9c:	mov	w8, #0x14                  	// #20
  40afa0:	b	40adac <__fxstatat@plt+0x835c>
  40afa4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40afa8:	add	x1, x1, #0xbfe
  40afac:	mov	w2, #0x2                   	// #2
  40afb0:	bl	402640 <strncmp@plt>
  40afb4:	cbz	w0, 40acb4 <__fxstatat@plt+0x8264>
  40afb8:	mov	x26, xzr
  40afbc:	mov	w8, #0x10                  	// #16
  40afc0:	b	40adac <__fxstatat@plt+0x835c>
  40afc4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40afc8:	add	x1, x1, #0xbfe
  40afcc:	mov	w2, #0x2                   	// #2
  40afd0:	bl	402640 <strncmp@plt>
  40afd4:	cmp	w0, #0x0
  40afd8:	mov	w8, #0x6                   	// #6
  40afdc:	cset	w9, ne  // ne = any
  40afe0:	mov	w10, #0x13                  	// #19
  40afe4:	orr	w9, w9, w24
  40afe8:	csel	w8, w10, w8, ne  // ne = any
  40afec:	tbz	w9, #0, 40ad54 <__fxstatat@plt+0x8304>
  40aff0:	mov	x26, xzr
  40aff4:	b	40adac <__fxstatat@plt+0x835c>
  40aff8:	mov	x26, xzr
  40affc:	mov	w8, #0x13                  	// #19
  40b000:	b	40adac <__fxstatat@plt+0x835c>
  40b004:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40b008:	add	x1, x1, #0xbfe
  40b00c:	mov	w2, #0x2                   	// #2
  40b010:	bl	402640 <strncmp@plt>
  40b014:	cbz	w0, 40ace8 <__fxstatat@plt+0x8298>
  40b018:	mov	x26, xzr
  40b01c:	mov	w8, #0x11                  	// #17
  40b020:	b	40adac <__fxstatat@plt+0x835c>
  40b024:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40b028:	add	x1, x1, #0xbfe
  40b02c:	mov	w2, #0x2                   	// #2
  40b030:	bl	402640 <strncmp@plt>
  40b034:	cbz	w0, 40ad84 <__fxstatat@plt+0x8334>
  40b038:	mov	x26, xzr
  40b03c:	mov	w8, #0x12                  	// #18
  40b040:	b	40adac <__fxstatat@plt+0x835c>
  40b044:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40b048:	add	x1, x1, #0xbfe
  40b04c:	mov	w2, #0x2                   	// #2
  40b050:	bl	402640 <strncmp@plt>
  40b054:	cbz	w0, 40af44 <__fxstatat@plt+0x84f4>
  40b058:	mov	x26, xzr
  40b05c:	mov	w8, #0xe                   	// #14
  40b060:	b	40adac <__fxstatat@plt+0x835c>
  40b064:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5060>
  40b068:	add	x1, x1, #0xbfe
  40b06c:	mov	w2, #0x2                   	// #2
  40b070:	bl	402640 <strncmp@plt>
  40b074:	cbz	w0, 40aa78 <__fxstatat@plt+0x8028>
  40b078:	mov	x26, xzr
  40b07c:	mov	w8, #0x16                  	// #22
  40b080:	b	40adac <__fxstatat@plt+0x835c>
  40b084:	stp	x29, x30, [sp, #-16]!
  40b088:	mov	w8, w1
  40b08c:	mov	x29, sp
  40b090:	tbz	w0, #0, 40b0d4 <__fxstatat@plt+0x8684>
  40b094:	and	w9, w8, #0xf000
  40b098:	cmp	w9, #0x4, lsl #12
  40b09c:	b.eq	40b108 <__fxstatat@plt+0x86b8>  // b.none
  40b0a0:	cmp	w9, #0x8, lsl #12
  40b0a4:	b.ne	40b0f0 <__fxstatat@plt+0x86a0>  // b.any
  40b0a8:	mov	w9, #0x49                  	// #73
  40b0ac:	tst	w8, w9
  40b0b0:	mov	w8, wzr
  40b0b4:	b.eq	40b140 <__fxstatat@plt+0x86f0>  // b.none
  40b0b8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b0bc:	ldr	w9, [x9, #1536]
  40b0c0:	cmp	w9, #0x3
  40b0c4:	b.ne	40b140 <__fxstatat@plt+0x86f0>  // b.any
  40b0c8:	tbz	w0, #0, 40b140 <__fxstatat@plt+0x86f0>
  40b0cc:	mov	w1, #0x2a                  	// #42
  40b0d0:	b	40b10c <__fxstatat@plt+0x86bc>
  40b0d4:	cmp	w2, #0x3
  40b0d8:	mov	w1, #0x2f                  	// #47
  40b0dc:	b.eq	40b10c <__fxstatat@plt+0x86bc>  // b.none
  40b0e0:	cmp	w2, #0x9
  40b0e4:	b.eq	40b10c <__fxstatat@plt+0x86bc>  // b.none
  40b0e8:	cmp	w2, #0x5
  40b0ec:	b.eq	40b0a8 <__fxstatat@plt+0x8658>  // b.none
  40b0f0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b0f4:	ldr	w9, [x9, #1536]
  40b0f8:	cmp	w9, #0x1
  40b0fc:	b.ne	40b14c <__fxstatat@plt+0x86fc>  // b.any
  40b100:	mov	w8, wzr
  40b104:	b	40b140 <__fxstatat@plt+0x86f0>
  40b108:	mov	w1, #0x2f                  	// #47
  40b10c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b110:	ldr	x0, [x8, #1456]
  40b114:	ldp	x8, x9, [x0, #40]
  40b118:	cmp	x8, x9
  40b11c:	b.cs	40b1a0 <__fxstatat@plt+0x8750>  // b.hs, b.nlast
  40b120:	add	x9, x8, #0x1
  40b124:	str	x9, [x0, #40]
  40b128:	strb	w1, [x8]
  40b12c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b130:	ldr	x9, [x8, #1880]
  40b134:	add	x9, x9, #0x1
  40b138:	str	x9, [x8, #1880]
  40b13c:	mov	w8, #0x1                   	// #1
  40b140:	mov	w0, w8
  40b144:	ldp	x29, x30, [sp], #16
  40b148:	ret
  40b14c:	tbz	w0, #0, 40b170 <__fxstatat@plt+0x8720>
  40b150:	and	w8, w8, #0xf000
  40b154:	cmp	w8, #0x1, lsl #12
  40b158:	b.eq	40b188 <__fxstatat@plt+0x8738>  // b.none
  40b15c:	cmp	w8, #0xa, lsl #12
  40b160:	b.eq	40b198 <__fxstatat@plt+0x8748>  // b.none
  40b164:	cmp	w8, #0xc, lsl #12
  40b168:	b.ne	40b100 <__fxstatat@plt+0x86b0>  // b.any
  40b16c:	b	40b190 <__fxstatat@plt+0x8740>
  40b170:	cmp	w2, #0x7
  40b174:	b.eq	40b190 <__fxstatat@plt+0x8740>  // b.none
  40b178:	cmp	w2, #0x6
  40b17c:	b.eq	40b198 <__fxstatat@plt+0x8748>  // b.none
  40b180:	cmp	w2, #0x1
  40b184:	b.ne	40b100 <__fxstatat@plt+0x86b0>  // b.any
  40b188:	mov	w1, #0x7c                  	// #124
  40b18c:	b	40b10c <__fxstatat@plt+0x86bc>
  40b190:	mov	w1, #0x3d                  	// #61
  40b194:	b	40b10c <__fxstatat@plt+0x86bc>
  40b198:	mov	w1, #0x40                  	// #64
  40b19c:	b	40b10c <__fxstatat@plt+0x86bc>
  40b1a0:	bl	402790 <__overflow@plt>
  40b1a4:	b	40b12c <__fxstatat@plt+0x86dc>
  40b1a8:	stp	x29, x30, [sp, #-64]!
  40b1ac:	str	x28, [sp, #16]
  40b1b0:	stp	x22, x21, [sp, #32]
  40b1b4:	stp	x20, x19, [sp, #48]
  40b1b8:	mov	x29, sp
  40b1bc:	sub	sp, sp, #0x2, lsl #12
  40b1c0:	sub	sp, sp, #0x2a0
  40b1c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b1c8:	ldrb	w8, [x8, #2306]
  40b1cc:	mov	x19, x0
  40b1d0:	cmp	w8, #0x1
  40b1d4:	b.ne	40b1fc <__fxstatat@plt+0x87ac>  // b.any
  40b1d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b1dc:	ldr	w8, [x8, #1524]
  40b1e0:	cmp	w8, #0x4
  40b1e4:	b.ne	40b204 <__fxstatat@plt+0x87b4>  // b.any
  40b1e8:	ldr	x0, [x19, #32]
  40b1ec:	add	x1, sp, #0x8
  40b1f0:	bl	40edf4 <__fxstatat@plt+0xc3a4>
  40b1f4:	bl	402430 <strlen@plt>
  40b1f8:	b	40b20c <__fxstatat@plt+0x87bc>
  40b1fc:	mov	x21, xzr
  40b200:	b	40b210 <__fxstatat@plt+0x87c0>
  40b204:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40b208:	ldrsw	x0, [x8, #1420]
  40b20c:	add	x21, x0, #0x1
  40b210:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b214:	ldrb	w8, [x8, #1653]
  40b218:	cmp	w8, #0x1
  40b21c:	b.ne	40b27c <__fxstatat@plt+0x882c>  // b.any
  40b220:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b224:	ldr	w8, [x8, #1524]
  40b228:	cmp	w8, #0x4
  40b22c:	b.ne	40b25c <__fxstatat@plt+0x880c>  // b.any
  40b230:	ldrb	w8, [x19, #168]
  40b234:	cbz	w8, 40b268 <__fxstatat@plt+0x8818>
  40b238:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b23c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b240:	ldr	x0, [x19, #88]
  40b244:	ldr	w2, [x8, #2348]
  40b248:	ldr	x4, [x9, #2360]
  40b24c:	add	x1, sp, #0x8
  40b250:	mov	w3, #0x200                 	// #512
  40b254:	bl	40e13c <__fxstatat@plt+0xb6ec>
  40b258:	b	40b270 <__fxstatat@plt+0x8820>
  40b25c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40b260:	ldrsw	x0, [x8, #1424]
  40b264:	b	40b274 <__fxstatat@plt+0x8824>
  40b268:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40b26c:	add	x0, x0, #0x15e
  40b270:	bl	402430 <strlen@plt>
  40b274:	add	x8, x21, x0
  40b278:	add	x21, x8, #0x1
  40b27c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b280:	ldrb	w8, [x8, #1652]
  40b284:	cmp	w8, #0x1
  40b288:	b.ne	40b2b8 <__fxstatat@plt+0x8868>  // b.any
  40b28c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b290:	ldr	w8, [x8, #1524]
  40b294:	cmp	w8, #0x4
  40b298:	b.ne	40b2a8 <__fxstatat@plt+0x8858>  // b.any
  40b29c:	ldr	x0, [x19, #160]
  40b2a0:	bl	402430 <strlen@plt>
  40b2a4:	b	40b2b0 <__fxstatat@plt+0x8860>
  40b2a8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40b2ac:	ldrsw	x0, [x8, #1444]
  40b2b0:	add	x8, x21, x0
  40b2b4:	add	x21, x8, #0x1
  40b2b8:	ldr	x20, [x19]
  40b2bc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b2c0:	ldr	x2, [x8, #1904]
  40b2c4:	ldr	w3, [x19, #180]
  40b2c8:	add	x22, sp, #0x2a0
  40b2cc:	add	x0, x29, #0x18
  40b2d0:	add	x4, sp, #0x298
  40b2d4:	add	x5, sp, #0x294
  40b2d8:	mov	x1, x20
  40b2dc:	str	x22, [x29, #24]
  40b2e0:	bl	408580 <__fxstatat@plt+0x5b30>
  40b2e4:	ldr	x0, [x29, #24]
  40b2e8:	cmp	x0, x22
  40b2ec:	b.eq	40b2fc <__fxstatat@plt+0x88ac>  // b.none
  40b2f0:	cmp	x0, x20
  40b2f4:	b.eq	40b2fc <__fxstatat@plt+0x88ac>  // b.none
  40b2f8:	bl	402840 <free@plt>
  40b2fc:	ldrb	w8, [sp, #660]
  40b300:	ldr	x9, [sp, #664]
  40b304:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b308:	ldr	w10, [x10, #1536]
  40b30c:	add	x8, x21, x8
  40b310:	add	x0, x8, x9
  40b314:	cbz	w10, 40b398 <__fxstatat@plt+0x8948>
  40b318:	ldrb	w11, [x19, #168]
  40b31c:	ldr	w8, [x19, #40]
  40b320:	ldr	w12, [x19, #152]
  40b324:	cbz	w11, 40b364 <__fxstatat@plt+0x8914>
  40b328:	and	w9, w8, #0xf000
  40b32c:	cmp	w9, #0x4, lsl #12
  40b330:	b.eq	40b390 <__fxstatat@plt+0x8940>  // b.none
  40b334:	cmp	w9, #0x8, lsl #12
  40b338:	b.ne	40b380 <__fxstatat@plt+0x8930>  // b.any
  40b33c:	cmp	w11, #0x0
  40b340:	mov	w9, #0x49                  	// #73
  40b344:	cset	w11, ne  // ne = any
  40b348:	cmp	w10, #0x3
  40b34c:	cset	w10, eq  // eq = none
  40b350:	tst	w8, w9
  40b354:	and	w8, w10, w11
  40b358:	cset	w9, ne  // ne = any
  40b35c:	and	w9, w8, w9
  40b360:	b	40b394 <__fxstatat@plt+0x8944>
  40b364:	cmp	w12, #0x3
  40b368:	mov	w9, #0x1                   	// #1
  40b36c:	b.eq	40b394 <__fxstatat@plt+0x8944>  // b.none
  40b370:	cmp	w12, #0x9
  40b374:	b.eq	40b394 <__fxstatat@plt+0x8944>  // b.none
  40b378:	cmp	w12, #0x5
  40b37c:	b.eq	40b33c <__fxstatat@plt+0x88ec>  // b.none
  40b380:	cmp	w10, #0x1
  40b384:	b.ne	40b3b4 <__fxstatat@plt+0x8964>  // b.any
  40b388:	mov	x9, xzr
  40b38c:	b	40b394 <__fxstatat@plt+0x8944>
  40b390:	mov	w9, #0x1                   	// #1
  40b394:	add	x0, x9, x0
  40b398:	add	sp, sp, #0x2, lsl #12
  40b39c:	add	sp, sp, #0x2a0
  40b3a0:	ldp	x20, x19, [sp, #48]
  40b3a4:	ldp	x22, x21, [sp, #32]
  40b3a8:	ldr	x28, [sp, #16]
  40b3ac:	ldp	x29, x30, [sp], #64
  40b3b0:	ret
  40b3b4:	cbz	w11, 40b3dc <__fxstatat@plt+0x898c>
  40b3b8:	and	w8, w8, #0xf000
  40b3bc:	cmp	w8, #0x1, lsl #12
  40b3c0:	mov	w9, #0x1                   	// #1
  40b3c4:	b.eq	40b394 <__fxstatat@plt+0x8944>  // b.none
  40b3c8:	cmp	w8, #0xa, lsl #12
  40b3cc:	b.eq	40b394 <__fxstatat@plt+0x8944>  // b.none
  40b3d0:	cmp	w8, #0xc, lsl #12
  40b3d4:	b.eq	40b394 <__fxstatat@plt+0x8944>  // b.none
  40b3d8:	b	40b388 <__fxstatat@plt+0x8938>
  40b3dc:	sub	w8, w12, #0x1
  40b3e0:	cmp	w8, #0x7
  40b3e4:	b.cs	40b388 <__fxstatat@plt+0x8938>  // b.hs, b.nlast
  40b3e8:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x3060>
  40b3ec:	add	x9, x9, #0xee8
  40b3f0:	ldr	x9, [x9, w8, sxtw #3]
  40b3f4:	b	40b394 <__fxstatat@plt+0x8944>
  40b3f8:	stp	x29, x30, [sp, #-80]!
  40b3fc:	stp	x24, x23, [sp, #32]
  40b400:	stp	x22, x21, [sp, #48]
  40b404:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b408:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b40c:	ldr	x8, [x24, #2376]
  40b410:	ldr	x9, [x21, #1872]
  40b414:	adrp	x23, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40b418:	ldr	x10, [x23, #1816]
  40b41c:	stp	x20, x19, [sp, #64]
  40b420:	cmp	x8, x9
  40b424:	csel	x20, x8, x9, cc  // cc = lo, ul, last
  40b428:	mov	w19, w0
  40b42c:	cmp	x10, x20
  40b430:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40b434:	str	x25, [sp, #16]
  40b438:	mov	x29, sp
  40b43c:	b.cs	40b510 <__fxstatat@plt+0x8ac0>  // b.hs, b.nlast
  40b440:	ldr	x0, [x22, #1808]
  40b444:	cmp	x20, x8, lsr #1
  40b448:	b.cs	40b474 <__fxstatat@plt+0x8a24>  // b.hs, b.nlast
  40b44c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40b450:	movk	x8, #0xaaab
  40b454:	movk	x8, #0x2aa, lsl #48
  40b458:	cmp	x20, x8
  40b45c:	b.cs	40b6ac <__fxstatat@plt+0x8c5c>  // b.hs, b.nlast
  40b460:	lsl	x24, x20, #1
  40b464:	add	x8, x24, x20
  40b468:	lsl	x1, x8, #4
  40b46c:	bl	412e90 <__fxstatat@plt+0x10440>
  40b470:	b	40b498 <__fxstatat@plt+0x8a48>
  40b474:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40b478:	movk	x9, #0x5556
  40b47c:	movk	x9, #0x555, lsl #48
  40b480:	cmp	x8, x9
  40b484:	b.cs	40b6ac <__fxstatat@plt+0x8c5c>  // b.hs, b.nlast
  40b488:	add	x8, x8, x8, lsl #1
  40b48c:	lsl	x1, x8, #3
  40b490:	bl	412e90 <__fxstatat@plt+0x10440>
  40b494:	ldr	x24, [x24, #2376]
  40b498:	ldr	x9, [x23, #1816]
  40b49c:	str	x0, [x22, #1808]
  40b4a0:	sub	x8, x24, x9
  40b4a4:	add	x9, x24, x9
  40b4a8:	add	x9, x9, #0x1
  40b4ac:	umulh	x10, x8, x9
  40b4b0:	cmp	xzr, x10
  40b4b4:	cset	w10, ne  // ne = any
  40b4b8:	cmp	x9, x24
  40b4bc:	b.cc	40b6ac <__fxstatat@plt+0x8c5c>  // b.lo, b.ul, b.last
  40b4c0:	cbnz	w10, 40b6ac <__fxstatat@plt+0x8c5c>
  40b4c4:	mul	x8, x8, x9
  40b4c8:	lsr	x9, x8, #61
  40b4cc:	cbnz	x9, 40b6ac <__fxstatat@plt+0x8c5c>
  40b4d0:	lsl	x8, x8, #2
  40b4d4:	and	x0, x8, #0xfffffffffffffff8
  40b4d8:	bl	412e10 <__fxstatat@plt+0x103c0>
  40b4dc:	ldr	x8, [x23, #1816]
  40b4e0:	cmp	x8, x24
  40b4e4:	b.cs	40b50c <__fxstatat@plt+0x8abc>  // b.hs, b.nlast
  40b4e8:	ldr	x9, [x22, #1808]
  40b4ec:	mov	w10, #0x18                  	// #24
  40b4f0:	madd	x9, x8, x10, x9
  40b4f4:	add	x9, x9, #0x10
  40b4f8:	add	x8, x8, #0x1
  40b4fc:	str	x0, [x9], #24
  40b500:	cmp	x24, x8
  40b504:	add	x0, x0, x8, lsl #3
  40b508:	b.ne	40b4f8 <__fxstatat@plt+0x8aa8>  // b.any
  40b50c:	str	x24, [x23, #1816]
  40b510:	cbz	x20, 40b5a0 <__fxstatat@plt+0x8b50>
  40b514:	ldr	x8, [x22, #1808]
  40b518:	mov	x10, xzr
  40b51c:	mov	w9, #0x1                   	// #1
  40b520:	mov	w11, #0x18                  	// #24
  40b524:	mov	w12, #0x3                   	// #3
  40b528:	mov	w13, #0x1                   	// #1
  40b52c:	b	40b53c <__fxstatat@plt+0x8aec>
  40b530:	cmp	x10, x20
  40b534:	add	x13, x13, #0x1
  40b538:	b.cs	40b5a0 <__fxstatat@plt+0x8b50>  // b.hs, b.nlast
  40b53c:	madd	x15, x10, x11, x8
  40b540:	ldr	x14, [x15, #16]
  40b544:	add	x10, x10, #0x1
  40b548:	add	x16, x10, x10, lsl #1
  40b54c:	cmp	x10, #0x4
  40b550:	strb	w9, [x15]
  40b554:	str	x16, [x15, #8]
  40b558:	b.cs	40b564 <__fxstatat@plt+0x8b14>  // b.hs, b.nlast
  40b55c:	mov	x15, xzr
  40b560:	b	40b58c <__fxstatat@plt+0x8b3c>
  40b564:	and	x16, x13, #0xfffffffffffffffc
  40b568:	and	x15, x10, #0xfffffffffffffffc
  40b56c:	add	x17, x14, #0x10
  40b570:	dup	v0.2d, x12
  40b574:	subs	x16, x16, #0x4
  40b578:	stp	q0, q0, [x17, #-16]
  40b57c:	add	x17, x17, #0x20
  40b580:	b.ne	40b570 <__fxstatat@plt+0x8b20>  // b.any
  40b584:	cmp	x10, x15
  40b588:	b.eq	40b530 <__fxstatat@plt+0x8ae0>  // b.none
  40b58c:	str	x12, [x14, x15, lsl #3]
  40b590:	add	x15, x15, #0x1
  40b594:	cmp	x13, x15
  40b598:	b.ne	40b58c <__fxstatat@plt+0x8b3c>  // b.any
  40b59c:	b	40b530 <__fxstatat@plt+0x8ae0>
  40b5a0:	ldr	x8, [x21, #1872]
  40b5a4:	cbz	x8, 40b66c <__fxstatat@plt+0x8c1c>
  40b5a8:	mov	x23, xzr
  40b5ac:	adrp	x24, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40b5b0:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b5b4:	b	40b5c8 <__fxstatat@plt+0x8b78>
  40b5b8:	ldr	x8, [x21, #1872]
  40b5bc:	add	x23, x23, #0x1
  40b5c0:	cmp	x23, x8
  40b5c4:	b.cs	40b66c <__fxstatat@plt+0x8c1c>  // b.hs, b.nlast
  40b5c8:	ldr	x8, [x24, #1408]
  40b5cc:	ldr	x0, [x8, x23, lsl #3]
  40b5d0:	bl	40b1a8 <__fxstatat@plt+0x8758>
  40b5d4:	cbz	x20, 40b5b8 <__fxstatat@plt+0x8b68>
  40b5d8:	ldr	x11, [x22, #1808]
  40b5dc:	ldr	x8, [x21, #1872]
  40b5e0:	ldr	x10, [x25, #2328]
  40b5e4:	mov	x9, xzr
  40b5e8:	add	x11, x11, #0x8
  40b5ec:	b	40b600 <__fxstatat@plt+0x8bb0>
  40b5f0:	add	x9, x9, #0x1
  40b5f4:	cmp	x9, x20
  40b5f8:	add	x11, x11, #0x18
  40b5fc:	b.cs	40b5bc <__fxstatat@plt+0x8b6c>  // b.hs, b.nlast
  40b600:	ldurb	w12, [x11, #-8]
  40b604:	cbz	w12, 40b5f0 <__fxstatat@plt+0x8ba0>
  40b608:	tbz	w19, #0, 40b620 <__fxstatat@plt+0x8bd0>
  40b60c:	add	x12, x8, x9
  40b610:	add	x13, x9, #0x1
  40b614:	udiv	x12, x12, x13
  40b618:	udiv	x12, x23, x12
  40b61c:	b	40b62c <__fxstatat@plt+0x8bdc>
  40b620:	add	x12, x9, #0x1
  40b624:	udiv	x13, x23, x12
  40b628:	msub	x12, x13, x12, x23
  40b62c:	ldr	x13, [x11, #8]
  40b630:	cmp	x9, x12
  40b634:	cset	w14, ne  // ne = any
  40b638:	add	x14, x0, w14, uxtw #1
  40b63c:	ldr	x15, [x13, x12, lsl #3]
  40b640:	subs	x15, x14, x15
  40b644:	b.ls	40b5f0 <__fxstatat@plt+0x8ba0>  // b.plast
  40b648:	ldr	x16, [x11]
  40b64c:	add	x15, x15, x16
  40b650:	str	x15, [x11]
  40b654:	str	x14, [x13, x12, lsl #3]
  40b658:	ldr	x12, [x11]
  40b65c:	cmp	x12, x10
  40b660:	cset	w12, cc  // cc = lo, ul, last
  40b664:	sturb	w12, [x11, #-8]
  40b668:	b	40b5f0 <__fxstatat@plt+0x8ba0>
  40b66c:	ldr	x8, [x22, #1808]
  40b670:	mov	w9, #0x18                  	// #24
  40b674:	madd	x8, x20, x9, x8
  40b678:	sub	x8, x8, #0x18
  40b67c:	mov	x0, x20
  40b680:	cmp	x20, #0x2
  40b684:	b.cc	40b694 <__fxstatat@plt+0x8c44>  // b.lo, b.ul, b.last
  40b688:	ldrb	w9, [x8], #-24
  40b68c:	sub	x20, x0, #0x1
  40b690:	cbz	w9, 40b67c <__fxstatat@plt+0x8c2c>
  40b694:	ldp	x20, x19, [sp, #64]
  40b698:	ldp	x22, x21, [sp, #48]
  40b69c:	ldp	x24, x23, [sp, #32]
  40b6a0:	ldr	x25, [sp, #16]
  40b6a4:	ldp	x29, x30, [sp], #80
  40b6a8:	ret
  40b6ac:	bl	413124 <__fxstatat@plt+0x106d4>
  40b6b0:	stp	x29, x30, [sp, #-64]!
  40b6b4:	stp	x20, x19, [sp, #48]
  40b6b8:	mov	w19, w2
  40b6bc:	str	x23, [sp, #16]
  40b6c0:	stp	x22, x21, [sp, #32]
  40b6c4:	mov	x29, sp
  40b6c8:	cbz	x0, 40b744 <__fxstatat@plt+0x8cf4>
  40b6cc:	mov	w1, wzr
  40b6d0:	mov	x20, x0
  40b6d4:	bl	40f288 <__fxstatat@plt+0xc838>
  40b6d8:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b6dc:	ldr	x1, [x21, #1456]
  40b6e0:	sub	w8, w19, w0
  40b6e4:	mov	x0, x20
  40b6e8:	bic	w22, w8, w8, asr #31
  40b6ec:	bl	402980 <fputs_unlocked@plt>
  40b6f0:	mov	x0, x20
  40b6f4:	bl	402430 <strlen@plt>
  40b6f8:	mov	x19, x0
  40b6fc:	add	w20, w22, #0x1
  40b700:	mov	w23, #0x20                  	// #32
  40b704:	ldr	x0, [x21, #1456]
  40b708:	ldp	x8, x9, [x0, #40]
  40b70c:	cmp	x8, x9
  40b710:	b.cs	40b72c <__fxstatat@plt+0x8cdc>  // b.hs, b.nlast
  40b714:	add	x9, x8, #0x1
  40b718:	str	x9, [x0, #40]
  40b71c:	strb	w23, [x8]
  40b720:	subs	w20, w20, #0x1
  40b724:	b.ne	40b704 <__fxstatat@plt+0x8cb4>  // b.any
  40b728:	b	40b73c <__fxstatat@plt+0x8cec>
  40b72c:	mov	w1, #0x20                  	// #32
  40b730:	bl	402790 <__overflow@plt>
  40b734:	subs	w20, w20, #0x1
  40b738:	b.ne	40b704 <__fxstatat@plt+0x8cb4>  // b.any
  40b73c:	add	x8, x19, x22
  40b740:	b	40b760 <__fxstatat@plt+0x8d10>
  40b744:	mov	x3, x1
  40b748:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40b74c:	add	x1, x1, #0x349
  40b750:	mov	w0, #0x1                   	// #1
  40b754:	mov	w2, w19
  40b758:	bl	402670 <__printf_chk@plt>
  40b75c:	sxtw	x8, w19
  40b760:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  40b764:	ldr	x10, [x9, #1880]
  40b768:	ldp	x20, x19, [sp, #48]
  40b76c:	ldp	x22, x21, [sp, #32]
  40b770:	ldr	x23, [sp, #16]
  40b774:	add	x8, x8, x10
  40b778:	add	x8, x8, #0x1
  40b77c:	str	x8, [x9, #1880]
  40b780:	ldp	x29, x30, [sp], #64
  40b784:	ret
  40b788:	stp	x29, x30, [sp, #-64]!
  40b78c:	cmp	x1, #0x401
  40b790:	mov	w8, #0x401                 	// #1025
  40b794:	stp	x20, x19, [sp, #48]
  40b798:	mov	x19, x0
  40b79c:	csinc	x20, x8, x1, cs  // cs = hs, nlast
  40b7a0:	stp	x24, x23, [sp, #16]
  40b7a4:	stp	x22, x21, [sp, #32]
  40b7a8:	mov	x29, sp
  40b7ac:	b	40b7b4 <__fxstatat@plt+0x8d64>
  40b7b0:	lsl	x20, x20, #1
  40b7b4:	mov	x0, x20
  40b7b8:	bl	4025f0 <malloc@plt>
  40b7bc:	mov	x21, x0
  40b7c0:	cbz	x0, 40b844 <__fxstatat@plt+0x8df4>
  40b7c4:	mov	x0, x19
  40b7c8:	mov	x1, x21
  40b7cc:	mov	x2, x20
  40b7d0:	bl	4024d0 <readlink@plt>
  40b7d4:	mov	x22, x0
  40b7d8:	tbz	x0, #63, 40b7ec <__fxstatat@plt+0x8d9c>
  40b7dc:	bl	4029e0 <__errno_location@plt>
  40b7e0:	ldr	w24, [x0]
  40b7e4:	cmp	w24, #0x22
  40b7e8:	b.ne	40b830 <__fxstatat@plt+0x8de0>  // b.any
  40b7ec:	cmp	x22, x20
  40b7f0:	b.cc	40b828 <__fxstatat@plt+0x8dd8>  // b.lo, b.ul, b.last
  40b7f4:	mov	x0, x21
  40b7f8:	bl	402840 <free@plt>
  40b7fc:	lsr	x8, x20, #62
  40b800:	cbz	x8, 40b7b0 <__fxstatat@plt+0x8d60>
  40b804:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40b808:	cmp	x20, x8
  40b80c:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
  40b810:	b.cc	40b7b4 <__fxstatat@plt+0x8d64>  // b.lo, b.ul, b.last
  40b814:	bl	4029e0 <__errno_location@plt>
  40b818:	mov	x21, xzr
  40b81c:	mov	w8, #0xc                   	// #12
  40b820:	str	w8, [x0]
  40b824:	b	40b844 <__fxstatat@plt+0x8df4>
  40b828:	strb	wzr, [x21, x22]
  40b82c:	b	40b844 <__fxstatat@plt+0x8df4>
  40b830:	mov	x23, x0
  40b834:	mov	x0, x21
  40b838:	bl	402840 <free@plt>
  40b83c:	mov	x21, xzr
  40b840:	str	w24, [x23]
  40b844:	mov	x0, x21
  40b848:	ldp	x20, x19, [sp, #48]
  40b84c:	ldp	x22, x21, [sp, #32]
  40b850:	ldp	x24, x23, [sp, #16]
  40b854:	ldp	x29, x30, [sp], #64
  40b858:	ret
  40b85c:	mov	w0, #0x1                   	// #1
  40b860:	b	407538 <__fxstatat@plt+0x4ae8>
  40b864:	stp	x29, x30, [sp, #-96]!
  40b868:	stp	x28, x27, [sp, #16]
  40b86c:	stp	x26, x25, [sp, #32]
  40b870:	stp	x24, x23, [sp, #48]
  40b874:	stp	x22, x21, [sp, #64]
  40b878:	stp	x20, x19, [sp, #80]
  40b87c:	mov	x29, sp
  40b880:	mov	x19, x3
  40b884:	mov	x20, x2
  40b888:	mov	x24, x1
  40b88c:	mov	x21, x0
  40b890:	bl	402430 <strlen@plt>
  40b894:	ldr	x25, [x24]
  40b898:	cbz	x25, 40b928 <__fxstatat@plt+0x8ed8>
  40b89c:	mov	x22, x0
  40b8a0:	mov	w26, wzr
  40b8a4:	mov	x23, xzr
  40b8a8:	add	x27, x24, #0x8
  40b8ac:	mov	x28, #0xffffffffffffffff    	// #-1
  40b8b0:	mov	x24, x20
  40b8b4:	b	40b8cc <__fxstatat@plt+0x8e7c>
  40b8b8:	mov	x28, x23
  40b8bc:	ldr	x25, [x27, x23, lsl #3]
  40b8c0:	add	x23, x23, #0x1
  40b8c4:	add	x24, x24, x19
  40b8c8:	cbz	x25, 40b918 <__fxstatat@plt+0x8ec8>
  40b8cc:	mov	x0, x25
  40b8d0:	mov	x1, x21
  40b8d4:	mov	x2, x22
  40b8d8:	bl	402640 <strncmp@plt>
  40b8dc:	cbnz	w0, 40b8bc <__fxstatat@plt+0x8e6c>
  40b8e0:	mov	x0, x25
  40b8e4:	bl	402430 <strlen@plt>
  40b8e8:	cmp	x0, x22
  40b8ec:	b.eq	40b92c <__fxstatat@plt+0x8edc>  // b.none
  40b8f0:	cmn	x28, #0x1
  40b8f4:	b.eq	40b8b8 <__fxstatat@plt+0x8e68>  // b.none
  40b8f8:	cbz	x20, 40b910 <__fxstatat@plt+0x8ec0>
  40b8fc:	madd	x0, x28, x19, x20
  40b900:	mov	x1, x24
  40b904:	mov	x2, x19
  40b908:	bl	4026d0 <bcmp@plt>
  40b90c:	cbz	w0, 40b8bc <__fxstatat@plt+0x8e6c>
  40b910:	mov	w26, #0x1                   	// #1
  40b914:	b	40b8bc <__fxstatat@plt+0x8e6c>
  40b918:	tst	w26, #0x1
  40b91c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40b920:	csel	x0, x8, x28, ne  // ne = any
  40b924:	b	40b930 <__fxstatat@plt+0x8ee0>
  40b928:	mov	x23, #0xffffffffffffffff    	// #-1
  40b92c:	mov	x0, x23
  40b930:	ldp	x20, x19, [sp, #80]
  40b934:	ldp	x22, x21, [sp, #64]
  40b938:	ldp	x24, x23, [sp, #48]
  40b93c:	ldp	x26, x25, [sp, #32]
  40b940:	ldp	x28, x27, [sp, #16]
  40b944:	ldp	x29, x30, [sp], #96
  40b948:	ret
  40b94c:	stp	x29, x30, [sp, #-48]!
  40b950:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40b954:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40b958:	add	x8, x8, #0x5c3
  40b95c:	add	x9, x9, #0x5a8
  40b960:	cmn	x2, #0x1
  40b964:	stp	x20, x19, [sp, #32]
  40b968:	mov	x19, x1
  40b96c:	mov	x20, x0
  40b970:	csel	x1, x9, x8, eq  // eq = none
  40b974:	mov	w2, #0x5                   	// #5
  40b978:	mov	x0, xzr
  40b97c:	str	x21, [sp, #16]
  40b980:	mov	x29, sp
  40b984:	bl	402970 <dcgettext@plt>
  40b988:	mov	x21, x0
  40b98c:	mov	w1, #0x8                   	// #8
  40b990:	mov	w0, wzr
  40b994:	mov	x2, x19
  40b998:	bl	411f3c <__fxstatat@plt+0xf4ec>
  40b99c:	mov	x19, x0
  40b9a0:	mov	w0, #0x1                   	// #1
  40b9a4:	mov	x1, x20
  40b9a8:	bl	412430 <__fxstatat@plt+0xf9e0>
  40b9ac:	mov	x2, x21
  40b9b0:	mov	x3, x19
  40b9b4:	ldp	x20, x19, [sp, #32]
  40b9b8:	ldr	x21, [sp, #16]
  40b9bc:	mov	x4, x0
  40b9c0:	mov	w0, wzr
  40b9c4:	mov	w1, wzr
  40b9c8:	ldp	x29, x30, [sp], #48
  40b9cc:	b	402490 <error@plt>
  40b9d0:	stp	x29, x30, [sp, #-96]!
  40b9d4:	stp	x20, x19, [sp, #80]
  40b9d8:	mov	x20, x1
  40b9dc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40b9e0:	stp	x22, x21, [sp, #64]
  40b9e4:	mov	x19, x2
  40b9e8:	mov	x21, x0
  40b9ec:	add	x1, x1, #0x5e0
  40b9f0:	mov	w2, #0x5                   	// #5
  40b9f4:	mov	x0, xzr
  40b9f8:	stp	x28, x27, [sp, #16]
  40b9fc:	stp	x26, x25, [sp, #32]
  40ba00:	stp	x24, x23, [sp, #48]
  40ba04:	mov	x29, sp
  40ba08:	bl	402970 <dcgettext@plt>
  40ba0c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x18060>
  40ba10:	ldr	x1, [x26, #1432]
  40ba14:	bl	402980 <fputs_unlocked@plt>
  40ba18:	ldr	x24, [x21]
  40ba1c:	cbz	x24, 40bab8 <__fxstatat@plt+0x9068>
  40ba20:	add	x28, x21, #0x8
  40ba24:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x6060>
  40ba28:	mov	x27, xzr
  40ba2c:	mov	x23, xzr
  40ba30:	mov	x22, xzr
  40ba34:	add	x21, x21, #0x5f5
  40ba38:	b	40ba74 <__fxstatat@plt+0x9024>
  40ba3c:	mov	x25, xzr
  40ba40:	ldr	x23, [x26, #1432]
  40ba44:	mov	x0, x24
  40ba48:	bl	412440 <__fxstatat@plt+0xf9f0>
  40ba4c:	mov	x3, x0
  40ba50:	mov	w1, #0x1                   	// #1
  40ba54:	mov	x0, x23
  40ba58:	mov	x2, x21
  40ba5c:	bl	4027e0 <__fprintf_chk@plt>
  40ba60:	add	x23, x20, x25
  40ba64:	ldr	x24, [x28, x22, lsl #3]
  40ba68:	add	x22, x22, #0x1
  40ba6c:	add	x27, x27, x19
  40ba70:	cbz	x24, 40bab8 <__fxstatat@plt+0x9068>
  40ba74:	cbz	x22, 40ba3c <__fxstatat@plt+0x8fec>
  40ba78:	add	x1, x20, x27
  40ba7c:	mov	x0, x23
  40ba80:	mov	x2, x19
  40ba84:	bl	4026d0 <bcmp@plt>
  40ba88:	mov	x25, x27
  40ba8c:	cbnz	w0, 40ba40 <__fxstatat@plt+0x8ff0>
  40ba90:	ldr	x25, [x26, #1432]
  40ba94:	mov	x0, x24
  40ba98:	bl	412440 <__fxstatat@plt+0xf9f0>
  40ba9c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40baa0:	mov	x3, x0
  40baa4:	mov	w1, #0x1                   	// #1
  40baa8:	mov	x0, x25
  40baac:	add	x2, x2, #0x5fd
  40bab0:	bl	4027e0 <__fprintf_chk@plt>
  40bab4:	b	40ba64 <__fxstatat@plt+0x9014>
  40bab8:	ldr	x0, [x26, #1432]
  40babc:	ldp	x8, x9, [x0, #40]
  40bac0:	cmp	x8, x9
  40bac4:	b.cs	40baf4 <__fxstatat@plt+0x90a4>  // b.hs, b.nlast
  40bac8:	add	x9, x8, #0x1
  40bacc:	mov	w10, #0xa                   	// #10
  40bad0:	str	x9, [x0, #40]
  40bad4:	strb	w10, [x8]
  40bad8:	ldp	x20, x19, [sp, #80]
  40badc:	ldp	x22, x21, [sp, #64]
  40bae0:	ldp	x24, x23, [sp, #48]
  40bae4:	ldp	x26, x25, [sp, #32]
  40bae8:	ldp	x28, x27, [sp, #16]
  40baec:	ldp	x29, x30, [sp], #96
  40baf0:	ret
  40baf4:	ldp	x20, x19, [sp, #80]
  40baf8:	ldp	x22, x21, [sp, #64]
  40bafc:	ldp	x24, x23, [sp, #48]
  40bb00:	ldp	x26, x25, [sp, #32]
  40bb04:	ldp	x28, x27, [sp, #16]
  40bb08:	mov	w1, #0xa                   	// #10
  40bb0c:	ldp	x29, x30, [sp], #96
  40bb10:	b	402790 <__overflow@plt>
  40bb14:	sub	sp, sp, #0x80
  40bb18:	stp	x24, x23, [sp, #80]
  40bb1c:	mov	x23, x0
  40bb20:	mov	x0, x1
  40bb24:	stp	x29, x30, [sp, #32]
  40bb28:	stp	x28, x27, [sp, #48]
  40bb2c:	stp	x26, x25, [sp, #64]
  40bb30:	stp	x22, x21, [sp, #96]
  40bb34:	stp	x20, x19, [sp, #112]
  40bb38:	add	x29, sp, #0x20
  40bb3c:	mov	x19, x5
  40bb40:	mov	x20, x4
  40bb44:	mov	x21, x3
  40bb48:	mov	x22, x2
  40bb4c:	mov	x24, x1
  40bb50:	bl	402430 <strlen@plt>
  40bb54:	ldr	x28, [x22]
  40bb58:	cbz	x28, 40bbf0 <__fxstatat@plt+0x91a0>
  40bb5c:	mov	x26, x0
  40bb60:	stur	x23, [x29, #-8]
  40bb64:	stp	x22, x19, [sp, #8]
  40bb68:	mov	w19, wzr
  40bb6c:	mov	x25, xzr
  40bb70:	add	x23, x22, #0x8
  40bb74:	mov	x22, #0xffffffffffffffff    	// #-1
  40bb78:	mov	x27, x21
  40bb7c:	b	40bb94 <__fxstatat@plt+0x9144>
  40bb80:	mov	x22, x25
  40bb84:	ldr	x28, [x23, x25, lsl #3]
  40bb88:	add	x25, x25, #0x1
  40bb8c:	add	x27, x27, x20
  40bb90:	cbz	x28, 40bbe0 <__fxstatat@plt+0x9190>
  40bb94:	mov	x0, x28
  40bb98:	mov	x1, x24
  40bb9c:	mov	x2, x26
  40bba0:	bl	402640 <strncmp@plt>
  40bba4:	cbnz	w0, 40bb84 <__fxstatat@plt+0x9134>
  40bba8:	mov	x0, x28
  40bbac:	bl	402430 <strlen@plt>
  40bbb0:	cmp	x0, x26
  40bbb4:	b.eq	40bbfc <__fxstatat@plt+0x91ac>  // b.none
  40bbb8:	cmn	x22, #0x1
  40bbbc:	b.eq	40bb80 <__fxstatat@plt+0x9130>  // b.none
  40bbc0:	cbz	x21, 40bbd8 <__fxstatat@plt+0x9188>
  40bbc4:	madd	x0, x22, x20, x21
  40bbc8:	mov	x1, x27
  40bbcc:	mov	x2, x20
  40bbd0:	bl	4026d0 <bcmp@plt>
  40bbd4:	cbz	w0, 40bb84 <__fxstatat@plt+0x9134>
  40bbd8:	mov	w19, #0x1                   	// #1
  40bbdc:	b	40bb84 <__fxstatat@plt+0x9134>
  40bbe0:	ldur	x23, [x29, #-8]
  40bbe4:	tbnz	w19, #0, 40bc10 <__fxstatat@plt+0x91c0>
  40bbe8:	tbz	x22, #63, 40bc7c <__fxstatat@plt+0x922c>
  40bbec:	b	40bc08 <__fxstatat@plt+0x91b8>
  40bbf0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40bbf4:	add	x1, x1, #0x5a8
  40bbf8:	b	40bc1c <__fxstatat@plt+0x91cc>
  40bbfc:	ldur	x23, [x29, #-8]
  40bc00:	mov	x22, x25
  40bc04:	tbz	x22, #63, 40bc7c <__fxstatat@plt+0x922c>
  40bc08:	cmn	x22, #0x1
  40bc0c:	b.eq	40bca0 <__fxstatat@plt+0x9250>  // b.none
  40bc10:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40bc14:	add	x1, x1, #0x5c3
  40bc18:	ldp	x22, x19, [sp, #8]
  40bc1c:	mov	w2, #0x5                   	// #5
  40bc20:	mov	x0, xzr
  40bc24:	bl	402970 <dcgettext@plt>
  40bc28:	mov	x25, x0
  40bc2c:	mov	w1, #0x8                   	// #8
  40bc30:	mov	w0, wzr
  40bc34:	mov	x2, x24
  40bc38:	bl	411f3c <__fxstatat@plt+0xf4ec>
  40bc3c:	mov	x24, x0
  40bc40:	mov	w0, #0x1                   	// #1
  40bc44:	mov	x1, x23
  40bc48:	bl	412430 <__fxstatat@plt+0xf9e0>
  40bc4c:	mov	x4, x0
  40bc50:	mov	w0, wzr
  40bc54:	mov	w1, wzr
  40bc58:	mov	x2, x25
  40bc5c:	mov	x3, x24
  40bc60:	bl	402490 <error@plt>
  40bc64:	mov	x0, x22
  40bc68:	mov	x1, x21
  40bc6c:	mov	x2, x20
  40bc70:	bl	40b9d0 <__fxstatat@plt+0x8f80>
  40bc74:	blr	x19
  40bc78:	mov	x22, #0xffffffffffffffff    	// #-1
  40bc7c:	mov	x0, x22
  40bc80:	ldp	x20, x19, [sp, #112]
  40bc84:	ldp	x22, x21, [sp, #96]
  40bc88:	ldp	x24, x23, [sp, #80]
  40bc8c:	ldp	x26, x25, [sp, #64]
  40bc90:	ldp	x28, x27, [sp, #48]
  40bc94:	ldp	x29, x30, [sp, #32]
  40bc98:	add	sp, sp, #0x80
  40bc9c:	ret
  40bca0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40bca4:	add	x1, x1, #0x5a8
  40bca8:	b	40bc18 <__fxstatat@plt+0x91c8>
  40bcac:	stp	x29, x30, [sp, #-64]!
  40bcb0:	stp	x22, x21, [sp, #32]
  40bcb4:	stp	x20, x19, [sp, #48]
  40bcb8:	ldr	x20, [x1]
  40bcbc:	str	x23, [sp, #16]
  40bcc0:	mov	x29, sp
  40bcc4:	cbz	x20, 40bd14 <__fxstatat@plt+0x92c4>
  40bcc8:	mov	x22, x2
  40bccc:	mov	x23, x1
  40bcd0:	mov	x1, x2
  40bcd4:	mov	x2, x3
  40bcd8:	mov	x19, x3
  40bcdc:	mov	x21, x0
  40bce0:	bl	4026d0 <bcmp@plt>
  40bce4:	cbz	w0, 40bd14 <__fxstatat@plt+0x92c4>
  40bce8:	add	x22, x22, x19
  40bcec:	add	x23, x23, #0x8
  40bcf0:	ldr	x20, [x23]
  40bcf4:	cbz	x20, 40bd14 <__fxstatat@plt+0x92c4>
  40bcf8:	mov	x0, x21
  40bcfc:	mov	x1, x22
  40bd00:	mov	x2, x19
  40bd04:	bl	4026d0 <bcmp@plt>
  40bd08:	add	x22, x22, x19
  40bd0c:	add	x23, x23, #0x8
  40bd10:	cbnz	w0, 40bcf0 <__fxstatat@plt+0x92a0>
  40bd14:	mov	x0, x20
  40bd18:	ldp	x20, x19, [sp, #48]
  40bd1c:	ldp	x22, x21, [sp, #32]
  40bd20:	ldr	x23, [sp, #16]
  40bd24:	ldp	x29, x30, [sp], #64
  40bd28:	ret
  40bd2c:	sub	w9, w0, #0x41
  40bd30:	mov	w8, w0
  40bd34:	cmp	w9, #0x39
  40bd38:	mov	w0, #0x1                   	// #1
  40bd3c:	b.hi	40bd54 <__fxstatat@plt+0x9304>  // b.pmore
  40bd40:	mov	w10, #0x1                   	// #1
  40bd44:	lsl	x9, x10, x9
  40bd48:	tst	x9, #0x3ffffff03ffffff
  40bd4c:	b.eq	40bd54 <__fxstatat@plt+0x9304>  // b.none
  40bd50:	ret
  40bd54:	sub	w8, w8, #0x30
  40bd58:	cmp	w8, #0xa
  40bd5c:	b.cc	40bd50 <__fxstatat@plt+0x9300>  // b.lo, b.ul, b.last
  40bd60:	mov	w0, wzr
  40bd64:	ret
  40bd68:	sub	w8, w0, #0x41
  40bd6c:	cmp	w8, #0x39
  40bd70:	b.hi	40bd84 <__fxstatat@plt+0x9334>  // b.pmore
  40bd74:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  40bd78:	lsr	x8, x9, x8
  40bd7c:	and	w0, w8, #0x1
  40bd80:	ret
  40bd84:	mov	w0, wzr
  40bd88:	ret
  40bd8c:	cmp	w0, #0x80
  40bd90:	cset	w0, cc  // cc = lo, ul, last
  40bd94:	ret
  40bd98:	cmp	w0, #0x20
  40bd9c:	cset	w8, eq  // eq = none
  40bda0:	cmp	w0, #0x9
  40bda4:	cset	w9, eq  // eq = none
  40bda8:	orr	w0, w8, w9
  40bdac:	ret
  40bdb0:	mov	w8, w0
  40bdb4:	cmp	w0, #0x20
  40bdb8:	mov	w0, #0x1                   	// #1
  40bdbc:	b.cs	40bdc4 <__fxstatat@plt+0x9374>  // b.hs, b.nlast
  40bdc0:	ret
  40bdc4:	cmp	w8, #0x7f
  40bdc8:	b.eq	40bdc0 <__fxstatat@plt+0x9370>  // b.none
  40bdcc:	mov	w0, wzr
  40bdd0:	ret
  40bdd4:	sub	w8, w0, #0x30
  40bdd8:	cmp	w8, #0xa
  40bddc:	cset	w0, cc  // cc = lo, ul, last
  40bde0:	ret
  40bde4:	sub	w8, w0, #0x21
  40bde8:	cmp	w8, #0x5e
  40bdec:	cset	w0, cc  // cc = lo, ul, last
  40bdf0:	ret
  40bdf4:	sub	w8, w0, #0x61
  40bdf8:	cmp	w8, #0x1a
  40bdfc:	cset	w0, cc  // cc = lo, ul, last
  40be00:	ret
  40be04:	sub	w8, w0, #0x20
  40be08:	cmp	w8, #0x5f
  40be0c:	cset	w0, cc  // cc = lo, ul, last
  40be10:	ret
  40be14:	sub	w8, w0, #0x21
  40be18:	cmp	w8, #0x5d
  40be1c:	b.hi	40be40 <__fxstatat@plt+0x93f0>  // b.pmore
  40be20:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40be24:	add	x9, x9, #0x602
  40be28:	adr	x10, 40be3c <__fxstatat@plt+0x93ec>
  40be2c:	ldrb	w11, [x9, x8]
  40be30:	add	x10, x10, x11, lsl #2
  40be34:	mov	w0, #0x1                   	// #1
  40be38:	br	x10
  40be3c:	ret
  40be40:	mov	w0, wzr
  40be44:	ret
  40be48:	sub	w8, w0, #0x9
  40be4c:	cmp	w8, #0x17
  40be50:	b.hi	40be68 <__fxstatat@plt+0x9418>  // b.pmore
  40be54:	mov	w9, #0x1f                  	// #31
  40be58:	movk	w9, #0x80, lsl #16
  40be5c:	lsr	w8, w9, w8
  40be60:	and	w0, w8, #0x1
  40be64:	ret
  40be68:	mov	w0, wzr
  40be6c:	ret
  40be70:	sub	w8, w0, #0x41
  40be74:	cmp	w8, #0x1a
  40be78:	cset	w0, cc  // cc = lo, ul, last
  40be7c:	ret
  40be80:	sub	w8, w0, #0x30
  40be84:	cmp	w8, #0x36
  40be88:	b.hi	40bea0 <__fxstatat@plt+0x9450>  // b.pmore
  40be8c:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  40be90:	movk	x9, #0x3ff
  40be94:	lsr	x8, x9, x8
  40be98:	and	w0, w8, #0x1
  40be9c:	ret
  40bea0:	mov	w0, wzr
  40bea4:	ret
  40bea8:	sub	w8, w0, #0x41
  40beac:	add	w9, w0, #0x20
  40beb0:	cmp	w8, #0x1a
  40beb4:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40beb8:	ret
  40bebc:	sub	w8, w0, #0x61
  40bec0:	sub	w9, w0, #0x20
  40bec4:	cmp	w8, #0x1a
  40bec8:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40becc:	ret
  40bed0:	cmp	x0, x1
  40bed4:	mov	w8, wzr
  40bed8:	b.eq	40bf30 <__fxstatat@plt+0x94e0>  // b.none
  40bedc:	cbz	x2, 40bf30 <__fxstatat@plt+0x94e0>
  40bee0:	sub	x8, x2, #0x1
  40bee4:	ldrb	w9, [x0]
  40bee8:	ldrb	w10, [x1]
  40beec:	sub	w11, w9, #0x41
  40bef0:	add	w12, w9, #0x20
  40bef4:	sub	w13, w10, #0x41
  40bef8:	cmp	w11, #0x1a
  40befc:	add	w14, w10, #0x20
  40bf00:	csel	w11, w12, w9, cc  // cc = lo, ul, last
  40bf04:	cmp	w13, #0x1a
  40bf08:	csel	w9, w14, w10, cc  // cc = lo, ul, last
  40bf0c:	and	w10, w11, #0xff
  40bf10:	cbz	x8, 40bf2c <__fxstatat@plt+0x94dc>
  40bf14:	cbz	w10, 40bf2c <__fxstatat@plt+0x94dc>
  40bf18:	add	x0, x0, #0x1
  40bf1c:	add	x1, x1, #0x1
  40bf20:	cmp	w10, w9, uxtb
  40bf24:	sub	x8, x8, #0x1
  40bf28:	b.eq	40bee4 <__fxstatat@plt+0x9494>  // b.none
  40bf2c:	sub	w8, w10, w9, uxtb
  40bf30:	mov	w0, w8
  40bf34:	ret
  40bf38:	sub	sp, sp, #0x110
  40bf3c:	stp	x26, x25, [sp, #208]
  40bf40:	and	w26, w1, #0x3
  40bf44:	sub	w8, w26, #0x1
  40bf48:	tst	w26, w8
  40bf4c:	stp	x29, x30, [sp, #176]
  40bf50:	stp	x28, x27, [sp, #192]
  40bf54:	stp	x24, x23, [sp, #224]
  40bf58:	stp	x22, x21, [sp, #240]
  40bf5c:	stp	x20, x19, [sp, #256]
  40bf60:	add	x29, sp, #0xb0
  40bf64:	b.ne	40bf90 <__fxstatat@plt+0x9540>  // b.any
  40bf68:	mov	x27, x0
  40bf6c:	cbz	x0, 40bf90 <__fxstatat@plt+0x9540>
  40bf70:	ldrb	w8, [x27]
  40bf74:	mov	w22, w1
  40bf78:	cmp	w8, #0x2f
  40bf7c:	b.eq	40bfc4 <__fxstatat@plt+0x9574>  // b.none
  40bf80:	cbnz	w8, 40c364 <__fxstatat@plt+0x9914>
  40bf84:	bl	4029e0 <__errno_location@plt>
  40bf88:	mov	w8, #0x2                   	// #2
  40bf8c:	b	40bf98 <__fxstatat@plt+0x9548>
  40bf90:	bl	4029e0 <__errno_location@plt>
  40bf94:	mov	w8, #0x16                  	// #22
  40bf98:	mov	x21, xzr
  40bf9c:	str	w8, [x0]
  40bfa0:	mov	x0, x21
  40bfa4:	ldp	x20, x19, [sp, #256]
  40bfa8:	ldp	x22, x21, [sp, #240]
  40bfac:	ldp	x24, x23, [sp, #224]
  40bfb0:	ldp	x26, x25, [sp, #208]
  40bfb4:	ldp	x28, x27, [sp, #192]
  40bfb8:	ldp	x29, x30, [sp, #176]
  40bfbc:	add	sp, sp, #0x110
  40bfc0:	ret
  40bfc4:	mov	w0, #0x1000                	// #4096
  40bfc8:	bl	412e10 <__fxstatat@plt+0x103c0>
  40bfcc:	mov	w8, #0x2f                  	// #47
  40bfd0:	mov	x19, x0
  40bfd4:	mov	x21, x0
  40bfd8:	add	x20, x0, #0x1, lsl #12
  40bfdc:	strb	w8, [x19], #1
  40bfe0:	ldrb	w8, [x27]
  40bfe4:	cbz	w8, 40c3c0 <__fxstatat@plt+0x9970>
  40bfe8:	and	w9, w22, #0x7
  40bfec:	mov	x24, x19
  40bff0:	mov	x23, x27
  40bff4:	stp	xzr, xzr, [sp, #8]
  40bff8:	str	xzr, [sp, #24]
  40bffc:	stp	w22, w9, [sp, #32]
  40c000:	b	40c014 <__fxstatat@plt+0x95c4>
  40c004:	mov	x19, x24
  40c008:	ldrb	w8, [x23]
  40c00c:	mov	x24, x19
  40c010:	cbz	w8, 40c3c4 <__fxstatat@plt+0x9974>
  40c014:	and	w9, w8, #0xff
  40c018:	cmp	w9, #0x2f
  40c01c:	mov	x28, x23
  40c020:	b.ne	40c034 <__fxstatat@plt+0x95e4>  // b.any
  40c024:	ldrb	w8, [x28, #1]!
  40c028:	cmp	w8, #0x2f
  40c02c:	b.eq	40c024 <__fxstatat@plt+0x95d4>  // b.none
  40c030:	mov	x23, x28
  40c034:	mov	w9, w8
  40c038:	ands	w9, w9, #0xff
  40c03c:	b.eq	40c054 <__fxstatat@plt+0x9604>  // b.none
  40c040:	cmp	w9, #0x2f
  40c044:	b.eq	40c054 <__fxstatat@plt+0x9604>  // b.none
  40c048:	ldrb	w9, [x23, #1]!
  40c04c:	ands	w9, w9, #0xff
  40c050:	b.ne	40c040 <__fxstatat@plt+0x95f0>  // b.any
  40c054:	sub	x25, x23, x28
  40c058:	cmp	x25, #0x1
  40c05c:	b.eq	40c0b8 <__fxstatat@plt+0x9668>  // b.none
  40c060:	cmp	x25, #0x2
  40c064:	b.eq	40c070 <__fxstatat@plt+0x9620>  // b.none
  40c068:	cbnz	x25, 40c0c4 <__fxstatat@plt+0x9674>
  40c06c:	b	40c3a8 <__fxstatat@plt+0x9958>
  40c070:	and	w8, w8, #0xff
  40c074:	cmp	w8, #0x2e
  40c078:	b.ne	40c0c4 <__fxstatat@plt+0x9674>  // b.any
  40c07c:	ldrb	w8, [x28, #1]
  40c080:	cmp	w8, #0x2e
  40c084:	b.ne	40c0c4 <__fxstatat@plt+0x9674>  // b.any
  40c088:	add	x8, x21, #0x1
  40c08c:	cmp	x24, x8
  40c090:	b.ls	40c004 <__fxstatat@plt+0x95b4>  // b.plast
  40c094:	sub	x8, x24, #0x1
  40c098:	mov	x19, x8
  40c09c:	cmp	x8, x21
  40c0a0:	b.ls	40c008 <__fxstatat@plt+0x95b8>  // b.plast
  40c0a4:	mov	x8, x19
  40c0a8:	ldrb	w9, [x8, #-1]!
  40c0ac:	cmp	w9, #0x2f
  40c0b0:	b.ne	40c098 <__fxstatat@plt+0x9648>  // b.any
  40c0b4:	b	40c008 <__fxstatat@plt+0x95b8>
  40c0b8:	and	w8, w8, #0xff
  40c0bc:	cmp	w8, #0x2e
  40c0c0:	b.eq	40c004 <__fxstatat@plt+0x95b4>  // b.none
  40c0c4:	ldurb	w8, [x24, #-1]
  40c0c8:	cmp	w8, #0x2f
  40c0cc:	b.eq	40c0d8 <__fxstatat@plt+0x9688>  // b.none
  40c0d0:	mov	w8, #0x2f                  	// #47
  40c0d4:	strb	w8, [x24], #1
  40c0d8:	add	x8, x24, x25
  40c0dc:	cmp	x8, x20
  40c0e0:	b.cc	40c114 <__fxstatat@plt+0x96c4>  // b.lo, b.ul, b.last
  40c0e4:	cmp	x25, #0x1, lsl #12
  40c0e8:	mov	w9, #0x1000                	// #4096
  40c0ec:	sub	x8, x20, x21
  40c0f0:	csinc	x9, x9, x25, lt  // lt = tstop
  40c0f4:	add	x22, x9, x8
  40c0f8:	mov	x0, x21
  40c0fc:	mov	x1, x22
  40c100:	sub	x19, x24, x21
  40c104:	bl	412e90 <__fxstatat@plt+0x10440>
  40c108:	mov	x21, x0
  40c10c:	add	x20, x0, x22
  40c110:	add	x24, x0, x19
  40c114:	mov	x0, x24
  40c118:	mov	x1, x28
  40c11c:	mov	x2, x25
  40c120:	bl	4023c0 <memcpy@plt>
  40c124:	ldr	w8, [sp, #36]
  40c128:	add	x19, x24, x25
  40c12c:	strb	wzr, [x19]
  40c130:	cmp	w8, #0x6
  40c134:	b.eq	40c168 <__fxstatat@plt+0x9718>  // b.none
  40c138:	ldr	w8, [sp, #32]
  40c13c:	tbnz	w8, #2, 40c180 <__fxstatat@plt+0x9730>
  40c140:	add	x2, sp, #0x28
  40c144:	mov	w0, wzr
  40c148:	mov	x1, x21
  40c14c:	bl	4028f0 <__lxstat@plt>
  40c150:	cbz	w0, 40c194 <__fxstatat@plt+0x9744>
  40c154:	bl	4029e0 <__errno_location@plt>
  40c158:	ldr	w22, [x0]
  40c15c:	cmp	w26, #0x1
  40c160:	b.eq	40c1b0 <__fxstatat@plt+0x9760>  // b.none
  40c164:	cbz	w26, 40c424 <__fxstatat@plt+0x99d4>
  40c168:	str	wzr, [sp, #56]
  40c16c:	cmp	w26, #0x2
  40c170:	b.eq	40c1d0 <__fxstatat@plt+0x9780>  // b.none
  40c174:	ldrb	w8, [x23]
  40c178:	cbz	w8, 40c1d0 <__fxstatat@plt+0x9780>
  40c17c:	b	40c420 <__fxstatat@plt+0x99d0>
  40c180:	add	x2, sp, #0x28
  40c184:	mov	w0, wzr
  40c188:	mov	x1, x21
  40c18c:	bl	402a00 <__xstat@plt>
  40c190:	cbnz	w0, 40c154 <__fxstatat@plt+0x9704>
  40c194:	ldr	w8, [sp, #56]
  40c198:	and	w8, w8, #0xf000
  40c19c:	cmp	w8, #0xa, lsl #12
  40c1a0:	b.eq	40c1dc <__fxstatat@plt+0x978c>  // b.none
  40c1a4:	cmp	w8, #0x4, lsl #12
  40c1a8:	b.eq	40c1d0 <__fxstatat@plt+0x9780>  // b.none
  40c1ac:	b	40c16c <__fxstatat@plt+0x971c>
  40c1b0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3060>
  40c1b4:	mov	x0, x23
  40c1b8:	add	x1, x1, #0xf66
  40c1bc:	bl	402860 <strspn@plt>
  40c1c0:	cmp	w22, #0x2
  40c1c4:	b.ne	40c424 <__fxstatat@plt+0x99d4>  // b.any
  40c1c8:	ldrb	w8, [x23, x0]
  40c1cc:	cbnz	w8, 40c424 <__fxstatat@plt+0x99d4>
  40c1d0:	mov	x22, x23
  40c1d4:	mov	x23, x22
  40c1d8:	b	40c008 <__fxstatat@plt+0x95b8>
  40c1dc:	ldr	x0, [sp, #24]
  40c1e0:	cbnz	x0, 40c20c <__fxstatat@plt+0x97bc>
  40c1e4:	adrp	x2, 40e000 <__fxstatat@plt+0xb5b0>
  40c1e8:	adrp	x3, 40e000 <__fxstatat@plt+0xb5b0>
  40c1ec:	adrp	x4, 40e000 <__fxstatat@plt+0xb5b0>
  40c1f0:	mov	w0, #0x7                   	// #7
  40c1f4:	mov	x1, xzr
  40c1f8:	add	x2, x2, #0x48
  40c1fc:	add	x3, x3, #0xc4
  40c200:	add	x4, x4, #0x114
  40c204:	bl	40d3c0 <__fxstatat@plt+0xa970>
  40c208:	cbz	x0, 40c460 <__fxstatat@plt+0x9a10>
  40c20c:	add	x2, sp, #0x28
  40c210:	mov	x1, x27
  40c214:	mov	x22, x0
  40c218:	bl	40c814 <__fxstatat@plt+0x9dc4>
  40c21c:	str	x22, [sp, #24]
  40c220:	tbz	w0, #0, 40c230 <__fxstatat@plt+0x97e0>
  40c224:	cmp	w26, #0x2
  40c228:	b.eq	40c008 <__fxstatat@plt+0x95b8>  // b.none
  40c22c:	b	40c450 <__fxstatat@plt+0x9a00>
  40c230:	add	x2, sp, #0x28
  40c234:	mov	x0, x22
  40c238:	mov	x1, x27
  40c23c:	bl	40c790 <__fxstatat@plt+0x9d40>
  40c240:	ldr	x1, [sp, #88]
  40c244:	mov	x0, x21
  40c248:	bl	40b788 <__fxstatat@plt+0x8d38>
  40c24c:	cbz	x0, 40c2a0 <__fxstatat@plt+0x9850>
  40c250:	mov	x28, x0
  40c254:	bl	402430 <strlen@plt>
  40c258:	mov	x22, x0
  40c25c:	mov	x0, x23
  40c260:	bl	402430 <strlen@plt>
  40c264:	ldr	x8, [sp, #8]
  40c268:	add	x2, x0, #0x1
  40c26c:	add	x27, x2, x22
  40c270:	str	x22, [sp]
  40c274:	cbz	x8, 40c2bc <__fxstatat@plt+0x986c>
  40c278:	cmp	x27, x8
  40c27c:	b.ls	40c2e0 <__fxstatat@plt+0x9890>  // b.plast
  40c280:	ldr	x0, [sp, #16]
  40c284:	mov	x1, x27
  40c288:	mov	x22, x2
  40c28c:	bl	412e90 <__fxstatat@plt+0x10440>
  40c290:	mov	x2, x22
  40c294:	mov	x22, x0
  40c298:	str	x27, [sp, #8]
  40c29c:	b	40c2e4 <__fxstatat@plt+0x9894>
  40c2a0:	bl	4029e0 <__errno_location@plt>
  40c2a4:	cmp	w26, #0x2
  40c2a8:	b.ne	40c458 <__fxstatat@plt+0x9a08>  // b.any
  40c2ac:	ldr	w8, [x0]
  40c2b0:	cmp	w8, #0xc
  40c2b4:	b.ne	40c008 <__fxstatat@plt+0x95b8>  // b.any
  40c2b8:	b	40c458 <__fxstatat@plt+0x9a08>
  40c2bc:	cmp	x27, #0x1, lsl #12
  40c2c0:	mov	w8, #0x1000                	// #4096
  40c2c4:	csel	x0, x27, x8, hi  // hi = pmore
  40c2c8:	str	x0, [sp, #8]
  40c2cc:	mov	x22, x2
  40c2d0:	bl	412e10 <__fxstatat@plt+0x103c0>
  40c2d4:	mov	x2, x22
  40c2d8:	mov	x22, x0
  40c2dc:	b	40c2e4 <__fxstatat@plt+0x9894>
  40c2e0:	ldr	x22, [sp, #16]
  40c2e4:	ldr	x27, [sp]
  40c2e8:	mov	x1, x23
  40c2ec:	add	x0, x22, x27
  40c2f0:	bl	4023d0 <memmove@plt>
  40c2f4:	mov	x0, x22
  40c2f8:	mov	x1, x28
  40c2fc:	mov	x2, x27
  40c300:	bl	4023c0 <memcpy@plt>
  40c304:	ldrb	w8, [x28]
  40c308:	cmp	w8, #0x2f
  40c30c:	add	x8, x21, #0x1
  40c310:	b.ne	40c324 <__fxstatat@plt+0x98d4>  // b.any
  40c314:	mov	w9, #0x2f                  	// #47
  40c318:	strb	w9, [x21]
  40c31c:	mov	x19, x8
  40c320:	b	40c350 <__fxstatat@plt+0x9900>
  40c324:	cmp	x19, x8
  40c328:	b.ls	40c350 <__fxstatat@plt+0x9900>  // b.plast
  40c32c:	add	x8, x24, x25
  40c330:	sub	x8, x8, #0x1
  40c334:	mov	x19, x8
  40c338:	cmp	x8, x21
  40c33c:	b.ls	40c350 <__fxstatat@plt+0x9900>  // b.plast
  40c340:	mov	x8, x19
  40c344:	ldrb	w9, [x8, #-1]!
  40c348:	cmp	w9, #0x2f
  40c34c:	b.ne	40c334 <__fxstatat@plt+0x98e4>  // b.any
  40c350:	mov	x0, x28
  40c354:	bl	402840 <free@plt>
  40c358:	mov	x27, x22
  40c35c:	str	x22, [sp, #16]
  40c360:	b	40c1d4 <__fxstatat@plt+0x9784>
  40c364:	bl	413278 <__fxstatat@plt+0x10828>
  40c368:	mov	x21, x0
  40c36c:	cbz	x0, 40bfa0 <__fxstatat@plt+0x9550>
  40c370:	mov	x0, x21
  40c374:	bl	402430 <strlen@plt>
  40c378:	mov	x20, x0
  40c37c:	cmp	x0, #0xfff
  40c380:	b.gt	40c3b0 <__fxstatat@plt+0x9960>
  40c384:	mov	w1, #0x1000                	// #4096
  40c388:	mov	x0, x21
  40c38c:	bl	412e90 <__fxstatat@plt+0x10440>
  40c390:	mov	x21, x0
  40c394:	add	x19, x0, x20
  40c398:	add	x20, x0, #0x1, lsl #12
  40c39c:	ldrb	w8, [x27]
  40c3a0:	cbnz	w8, 40bfe8 <__fxstatat@plt+0x9598>
  40c3a4:	b	40c3c0 <__fxstatat@plt+0x9970>
  40c3a8:	mov	x19, x24
  40c3ac:	b	40c3c4 <__fxstatat@plt+0x9974>
  40c3b0:	add	x20, x21, x20
  40c3b4:	mov	x19, x20
  40c3b8:	ldrb	w8, [x27]
  40c3bc:	cbnz	w8, 40bfe8 <__fxstatat@plt+0x9598>
  40c3c0:	stp	xzr, xzr, [sp, #16]
  40c3c4:	add	x8, x21, #0x1
  40c3c8:	cmp	x19, x8
  40c3cc:	b.ls	40c3e0 <__fxstatat@plt+0x9990>  // b.plast
  40c3d0:	mov	x8, x19
  40c3d4:	ldrb	w9, [x8, #-1]!
  40c3d8:	cmp	w9, #0x2f
  40c3dc:	csel	x19, x8, x19, eq  // eq = none
  40c3e0:	ldr	x22, [sp, #16]
  40c3e4:	mov	x8, x19
  40c3e8:	strb	wzr, [x8], #1
  40c3ec:	cmp	x20, x8
  40c3f0:	b.eq	40c408 <__fxstatat@plt+0x99b8>  // b.none
  40c3f4:	sub	x8, x19, x21
  40c3f8:	add	x1, x8, #0x1
  40c3fc:	mov	x0, x21
  40c400:	bl	412e90 <__fxstatat@plt+0x10440>
  40c404:	mov	x21, x0
  40c408:	mov	x0, x22
  40c40c:	bl	402840 <free@plt>
  40c410:	ldr	x0, [sp, #24]
  40c414:	cbz	x0, 40bfa0 <__fxstatat@plt+0x9550>
  40c418:	bl	40d66c <__fxstatat@plt+0xac1c>
  40c41c:	b	40bfa0 <__fxstatat@plt+0x9550>
  40c420:	mov	w22, #0x14                  	// #20
  40c424:	ldr	x0, [sp, #16]
  40c428:	bl	402840 <free@plt>
  40c42c:	mov	x0, x21
  40c430:	bl	402840 <free@plt>
  40c434:	ldr	x0, [sp, #24]
  40c438:	cbz	x0, 40c440 <__fxstatat@plt+0x99f0>
  40c43c:	bl	40d66c <__fxstatat@plt+0xac1c>
  40c440:	bl	4029e0 <__errno_location@plt>
  40c444:	mov	x21, xzr
  40c448:	str	w22, [x0]
  40c44c:	b	40bfa0 <__fxstatat@plt+0x9550>
  40c450:	mov	w22, #0x28                  	// #40
  40c454:	b	40c424 <__fxstatat@plt+0x99d4>
  40c458:	ldr	w22, [x0]
  40c45c:	b	40c424 <__fxstatat@plt+0x99d4>
  40c460:	bl	413124 <__fxstatat@plt+0x106d4>
  40c464:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40c468:	str	x0, [x8, #1824]
  40c46c:	ret
  40c470:	and	w8, w0, #0x1
  40c474:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40c478:	strb	w8, [x9, #1832]
  40c47c:	ret
  40c480:	stp	x29, x30, [sp, #-48]!
  40c484:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40c488:	ldr	x0, [x8, #1456]
  40c48c:	str	x21, [sp, #16]
  40c490:	stp	x20, x19, [sp, #32]
  40c494:	mov	x29, sp
  40c498:	bl	414690 <_obstack_memory_used@@Base+0x6f0>
  40c49c:	cbz	w0, 40c4bc <__fxstatat@plt+0x9a6c>
  40c4a0:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40c4a4:	ldrb	w8, [x8, #1832]
  40c4a8:	cbz	w8, 40c4dc <__fxstatat@plt+0x9a8c>
  40c4ac:	bl	4029e0 <__errno_location@plt>
  40c4b0:	ldr	w8, [x0]
  40c4b4:	cmp	w8, #0x20
  40c4b8:	b.ne	40c4dc <__fxstatat@plt+0x9a8c>  // b.any
  40c4bc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40c4c0:	ldr	x0, [x8, #1432]
  40c4c4:	bl	414690 <_obstack_memory_used@@Base+0x6f0>
  40c4c8:	cbnz	w0, 40c548 <__fxstatat@plt+0x9af8>
  40c4cc:	ldp	x20, x19, [sp, #32]
  40c4d0:	ldr	x21, [sp, #16]
  40c4d4:	ldp	x29, x30, [sp], #48
  40c4d8:	ret
  40c4dc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40c4e0:	add	x1, x1, #0x660
  40c4e4:	mov	w2, #0x5                   	// #5
  40c4e8:	mov	x0, xzr
  40c4ec:	bl	402970 <dcgettext@plt>
  40c4f0:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40c4f4:	ldr	x21, [x8, #1824]
  40c4f8:	mov	x19, x0
  40c4fc:	bl	4029e0 <__errno_location@plt>
  40c500:	ldr	w20, [x0]
  40c504:	cbnz	x21, 40c524 <__fxstatat@plt+0x9ad4>
  40c508:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40c50c:	add	x2, x2, #0x5ff
  40c510:	mov	w0, wzr
  40c514:	mov	w1, w20
  40c518:	mov	x3, x19
  40c51c:	bl	402490 <error@plt>
  40c520:	b	40c548 <__fxstatat@plt+0x9af8>
  40c524:	mov	x0, x21
  40c528:	bl	412150 <__fxstatat@plt+0xf700>
  40c52c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5060>
  40c530:	mov	x3, x0
  40c534:	add	x2, x2, #0xd59
  40c538:	mov	w0, wzr
  40c53c:	mov	w1, w20
  40c540:	mov	x4, x19
  40c544:	bl	402490 <error@plt>
  40c548:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  40c54c:	ldr	w0, [x8, #1312]
  40c550:	bl	4023f0 <_exit@plt>
  40c554:	stp	x29, x30, [sp, #-48]!
  40c558:	str	x21, [sp, #16]
  40c55c:	stp	x20, x19, [sp, #32]
  40c560:	mov	x20, x0
  40c564:	ldrb	w8, [x20], #-1
  40c568:	mov	x29, sp
  40c56c:	mov	x19, x0
  40c570:	cmp	w8, #0x2f
  40c574:	cset	w21, eq  // eq = none
  40c578:	bl	40c644 <__fxstatat@plt+0x9bf4>
  40c57c:	sub	x8, x0, x19
  40c580:	mov	x0, x8
  40c584:	cmp	x8, x21
  40c588:	b.ls	40c59c <__fxstatat@plt+0x9b4c>  // b.plast
  40c58c:	ldrb	w8, [x20, x0]
  40c590:	cmp	w8, #0x2f
  40c594:	sub	x8, x0, #0x1
  40c598:	b.eq	40c580 <__fxstatat@plt+0x9b30>  // b.none
  40c59c:	ldp	x20, x19, [sp, #32]
  40c5a0:	ldr	x21, [sp, #16]
  40c5a4:	ldp	x29, x30, [sp], #48
  40c5a8:	ret
  40c5ac:	stp	x29, x30, [sp, #-48]!
  40c5b0:	stp	x22, x21, [sp, #16]
  40c5b4:	stp	x20, x19, [sp, #32]
  40c5b8:	mov	x21, x0
  40c5bc:	ldrb	w8, [x21], #-1
  40c5c0:	mov	x29, sp
  40c5c4:	mov	x19, x0
  40c5c8:	cmp	w8, #0x2f
  40c5cc:	cset	w22, eq  // eq = none
  40c5d0:	bl	40c644 <__fxstatat@plt+0x9bf4>
  40c5d4:	sub	x8, x0, x19
  40c5d8:	mov	x20, x8
  40c5dc:	cmp	x8, x22
  40c5e0:	b.ls	40c5f4 <__fxstatat@plt+0x9ba4>  // b.plast
  40c5e4:	ldrb	w8, [x21, x20]
  40c5e8:	cmp	w8, #0x2f
  40c5ec:	sub	x8, x20, #0x1
  40c5f0:	b.eq	40c5d8 <__fxstatat@plt+0x9b88>  // b.none
  40c5f4:	cmp	x20, #0x0
  40c5f8:	cinc	x8, x20, eq  // eq = none
  40c5fc:	add	x0, x8, #0x1
  40c600:	bl	4025f0 <malloc@plt>
  40c604:	mov	x21, x0
  40c608:	cbz	x0, 40c630 <__fxstatat@plt+0x9be0>
  40c60c:	mov	x0, x21
  40c610:	mov	x1, x19
  40c614:	mov	x2, x20
  40c618:	bl	4023c0 <memcpy@plt>
  40c61c:	cbnz	x20, 40c62c <__fxstatat@plt+0x9bdc>
  40c620:	mov	w8, #0x2e                  	// #46
  40c624:	mov	w20, #0x1                   	// #1
  40c628:	strb	w8, [x21]
  40c62c:	strb	wzr, [x21, x20]
  40c630:	mov	x0, x21
  40c634:	ldp	x20, x19, [sp, #32]
  40c638:	ldp	x22, x21, [sp, #16]
  40c63c:	ldp	x29, x30, [sp], #48
  40c640:	ret
  40c644:	sub	x0, x0, #0x1
  40c648:	ldrb	w10, [x0, #1]!
  40c64c:	cmp	w10, #0x2f
  40c650:	b.eq	40c648 <__fxstatat@plt+0x9bf8>  // b.none
  40c654:	mov	w8, wzr
  40c658:	mov	x9, x0
  40c65c:	b	40c668 <__fxstatat@plt+0x9c18>
  40c660:	ldrb	w10, [x9, #1]!
  40c664:	mov	w8, #0x1                   	// #1
  40c668:	and	w10, w10, #0xff
  40c66c:	cmp	w10, #0x2f
  40c670:	b.eq	40c660 <__fxstatat@plt+0x9c10>  // b.none
  40c674:	cbz	w10, 40c68c <__fxstatat@plt+0x9c3c>
  40c678:	tst	w8, #0x1
  40c67c:	csel	x0, x9, x0, ne  // ne = any
  40c680:	ldrb	w10, [x9, #1]!
  40c684:	mov	w8, wzr
  40c688:	b	40c668 <__fxstatat@plt+0x9c18>
  40c68c:	ret
  40c690:	stp	x29, x30, [sp, #-32]!
  40c694:	str	x19, [sp, #16]
  40c698:	mov	x29, sp
  40c69c:	mov	x19, x0
  40c6a0:	bl	402430 <strlen@plt>
  40c6a4:	mov	x8, x0
  40c6a8:	sub	x9, x19, #0x1
  40c6ac:	mov	x0, x8
  40c6b0:	cmp	x8, #0x2
  40c6b4:	b.cc	40c6c8 <__fxstatat@plt+0x9c78>  // b.lo, b.ul, b.last
  40c6b8:	ldrb	w8, [x9, x0]
  40c6bc:	cmp	w8, #0x2f
  40c6c0:	sub	x8, x0, #0x1
  40c6c4:	b.eq	40c6ac <__fxstatat@plt+0x9c5c>  // b.none
  40c6c8:	ldr	x19, [sp, #16]
  40c6cc:	ldp	x29, x30, [sp], #32
  40c6d0:	ret
  40c6d4:	stp	x29, x30, [sp, #-32]!
  40c6d8:	stp	x20, x19, [sp, #16]
  40c6dc:	ldr	w8, [x1, #16]
  40c6e0:	mov	x29, sp
  40c6e4:	and	w8, w8, #0xf000
  40c6e8:	cmp	w8, #0xa, lsl #12
  40c6ec:	b.ne	40c6f8 <__fxstatat@plt+0x9ca8>  // b.any
  40c6f0:	mov	w0, wzr
  40c6f4:	b	40c784 <__fxstatat@plt+0x9d34>
  40c6f8:	mov	x20, x1
  40c6fc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40c700:	add	x1, x1, #0x66c
  40c704:	mov	x2, xzr
  40c708:	mov	x3, xzr
  40c70c:	mov	x19, x0
  40c710:	bl	4027a0 <getxattr@plt>
  40c714:	tbnz	x0, #63, 40c724 <__fxstatat@plt+0x9cd4>
  40c718:	cbz	x0, 40c734 <__fxstatat@plt+0x9ce4>
  40c71c:	mov	w0, #0x1                   	// #1
  40c720:	b	40c784 <__fxstatat@plt+0x9d34>
  40c724:	bl	4029e0 <__errno_location@plt>
  40c728:	ldr	w8, [x0]
  40c72c:	cmp	w8, #0x3d
  40c730:	b.ne	40c778 <__fxstatat@plt+0x9d28>  // b.any
  40c734:	ldr	w8, [x20, #16]
  40c738:	and	w8, w8, #0xf000
  40c73c:	cmp	w8, #0x4, lsl #12
  40c740:	b.ne	40c6f0 <__fxstatat@plt+0x9ca0>  // b.any
  40c744:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40c748:	add	x1, x1, #0x684
  40c74c:	mov	x0, x19
  40c750:	mov	x2, xzr
  40c754:	mov	x3, xzr
  40c758:	bl	4027a0 <getxattr@plt>
  40c75c:	tbnz	x0, #63, 40c768 <__fxstatat@plt+0x9d18>
  40c760:	cbnz	x0, 40c71c <__fxstatat@plt+0x9ccc>
  40c764:	b	40c6f0 <__fxstatat@plt+0x9ca0>
  40c768:	bl	4029e0 <__errno_location@plt>
  40c76c:	ldr	w8, [x0]
  40c770:	cmp	w8, #0x3d
  40c774:	b.eq	40c6f0 <__fxstatat@plt+0x9ca0>  // b.none
  40c778:	ldr	w0, [x0]
  40c77c:	bl	414650 <_obstack_memory_used@@Base+0x6b0>
  40c780:	sbfx	w0, w0, #0, #1
  40c784:	ldp	x20, x19, [sp, #16]
  40c788:	ldp	x29, x30, [sp], #32
  40c78c:	ret
  40c790:	stp	x29, x30, [sp, #-48]!
  40c794:	stp	x22, x21, [sp, #16]
  40c798:	stp	x20, x19, [sp, #32]
  40c79c:	mov	x29, sp
  40c7a0:	cbz	x0, 40c800 <__fxstatat@plt+0x9db0>
  40c7a4:	mov	x20, x0
  40c7a8:	mov	w0, #0x18                  	// #24
  40c7ac:	mov	x21, x2
  40c7b0:	mov	x22, x1
  40c7b4:	bl	412e10 <__fxstatat@plt+0x103c0>
  40c7b8:	mov	x19, x0
  40c7bc:	mov	x0, x22
  40c7c0:	bl	4130cc <__fxstatat@plt+0x1067c>
  40c7c4:	str	x0, [x19]
  40c7c8:	ldr	q0, [x21]
  40c7cc:	mov	x0, x20
  40c7d0:	mov	x1, x19
  40c7d4:	ext	v0.16b, v0.16b, v0.16b, #8
  40c7d8:	stur	q0, [x19, #8]
  40c7dc:	bl	40ddd8 <__fxstatat@plt+0xb388>
  40c7e0:	cbz	x0, 40c810 <__fxstatat@plt+0x9dc0>
  40c7e4:	cmp	x0, x19
  40c7e8:	b.eq	40c800 <__fxstatat@plt+0x9db0>  // b.none
  40c7ec:	mov	x0, x19
  40c7f0:	ldp	x20, x19, [sp, #32]
  40c7f4:	ldp	x22, x21, [sp, #16]
  40c7f8:	ldp	x29, x30, [sp], #48
  40c7fc:	b	40e114 <__fxstatat@plt+0xb6c4>
  40c800:	ldp	x20, x19, [sp, #32]
  40c804:	ldp	x22, x21, [sp, #16]
  40c808:	ldp	x29, x30, [sp], #48
  40c80c:	ret
  40c810:	bl	413124 <__fxstatat@plt+0x106d4>
  40c814:	cbz	x0, 40c84c <__fxstatat@plt+0x9dfc>
  40c818:	sub	sp, sp, #0x30
  40c81c:	stp	x29, x30, [sp, #32]
  40c820:	str	x1, [sp, #8]
  40c824:	ldr	q0, [x2]
  40c828:	add	x1, sp, #0x8
  40c82c:	add	x29, sp, #0x20
  40c830:	ext	v0.16b, v0.16b, v0.16b, #8
  40c834:	stur	q0, [sp, #16]
  40c838:	bl	40d0e8 <__fxstatat@plt+0xa698>
  40c83c:	ldp	x29, x30, [sp, #32]
  40c840:	cmp	x0, #0x0
  40c844:	cset	w0, ne  // ne = any
  40c848:	add	sp, sp, #0x30
  40c84c:	ret
  40c850:	and	w8, w0, #0xf000
  40c854:	sub	w8, w8, #0x1, lsl #12
  40c858:	lsr	w8, w8, #12
  40c85c:	cmp	w8, #0xb
  40c860:	b.hi	40c890 <__fxstatat@plt+0x9e40>  // b.pmore
  40c864:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40c868:	add	x9, x9, #0x69d
  40c86c:	adr	x10, 40c880 <__fxstatat@plt+0x9e30>
  40c870:	ldrb	w11, [x9, x8]
  40c874:	add	x10, x10, x11, lsl #2
  40c878:	mov	w8, #0x2d                  	// #45
  40c87c:	br	x10
  40c880:	mov	w8, #0x70                  	// #112
  40c884:	b	40c8b4 <__fxstatat@plt+0x9e64>
  40c888:	mov	w8, #0x63                  	// #99
  40c88c:	b	40c8b4 <__fxstatat@plt+0x9e64>
  40c890:	mov	w8, #0x3f                  	// #63
  40c894:	b	40c8b4 <__fxstatat@plt+0x9e64>
  40c898:	mov	w8, #0x64                  	// #100
  40c89c:	b	40c8b4 <__fxstatat@plt+0x9e64>
  40c8a0:	mov	w8, #0x6c                  	// #108
  40c8a4:	b	40c8b4 <__fxstatat@plt+0x9e64>
  40c8a8:	mov	w8, #0x73                  	// #115
  40c8ac:	b	40c8b4 <__fxstatat@plt+0x9e64>
  40c8b0:	mov	w8, #0x62                  	// #98
  40c8b4:	strb	w8, [x1]
  40c8b8:	tst	w0, #0x100
  40c8bc:	mov	w8, #0x72                  	// #114
  40c8c0:	mov	w9, #0x2d                  	// #45
  40c8c4:	mov	w10, #0x77                  	// #119
  40c8c8:	csel	w14, w9, w8, eq  // eq = none
  40c8cc:	tst	w0, #0x80
  40c8d0:	mov	w11, #0x53                  	// #83
  40c8d4:	mov	w12, #0x73                  	// #115
  40c8d8:	mov	w13, #0x78                  	// #120
  40c8dc:	strb	w14, [x1, #1]
  40c8e0:	csel	w14, w9, w10, eq  // eq = none
  40c8e4:	tst	w0, #0x40
  40c8e8:	strb	w14, [x1, #2]
  40c8ec:	csel	w14, w12, w11, ne  // ne = any
  40c8f0:	csel	w15, w13, w9, ne  // ne = any
  40c8f4:	tst	w0, #0x800
  40c8f8:	csel	w14, w15, w14, eq  // eq = none
  40c8fc:	tst	w0, #0x20
  40c900:	strb	w14, [x1, #3]
  40c904:	csel	w14, w9, w8, eq  // eq = none
  40c908:	tst	w0, #0x10
  40c90c:	strb	w14, [x1, #4]
  40c910:	csel	w14, w9, w10, eq  // eq = none
  40c914:	tst	w0, #0x8
  40c918:	csel	w11, w12, w11, ne  // ne = any
  40c91c:	csel	w12, w13, w9, ne  // ne = any
  40c920:	tst	w0, #0x400
  40c924:	csel	w11, w12, w11, eq  // eq = none
  40c928:	tst	w0, #0x4
  40c92c:	csel	w8, w9, w8, eq  // eq = none
  40c930:	tst	w0, #0x2
  40c934:	mov	w15, #0x54                  	// #84
  40c938:	strb	w14, [x1, #5]
  40c93c:	mov	w14, #0x74                  	// #116
  40c940:	strb	w8, [x1, #7]
  40c944:	csel	w8, w9, w10, eq  // eq = none
  40c948:	tst	w0, #0x1
  40c94c:	strb	w8, [x1, #8]
  40c950:	csel	w8, w14, w15, ne  // ne = any
  40c954:	csel	w9, w13, w9, ne  // ne = any
  40c958:	tst	w0, #0x200
  40c95c:	mov	w12, #0x20                  	// #32
  40c960:	csel	w8, w9, w8, eq  // eq = none
  40c964:	strb	w11, [x1, #6]
  40c968:	strb	w8, [x1, #9]
  40c96c:	strh	w12, [x1, #10]
  40c970:	ret
  40c974:	ldr	w0, [x0, #16]
  40c978:	b	40c850 <__fxstatat@plt+0x9e00>
  40c97c:	stp	x29, x30, [sp, #-16]!
  40c980:	mov	x29, sp
  40c984:	bl	40c998 <__fxstatat@plt+0x9f48>
  40c988:	cbz	x0, 40c994 <__fxstatat@plt+0x9f44>
  40c98c:	ldp	x29, x30, [sp], #16
  40c990:	ret
  40c994:	bl	413124 <__fxstatat@plt+0x106d4>
  40c998:	stp	x29, x30, [sp, #-80]!
  40c99c:	stp	x26, x25, [sp, #16]
  40c9a0:	stp	x24, x23, [sp, #32]
  40c9a4:	stp	x22, x21, [sp, #48]
  40c9a8:	stp	x20, x19, [sp, #64]
  40c9ac:	mov	x29, sp
  40c9b0:	mov	x20, x2
  40c9b4:	mov	x19, x1
  40c9b8:	mov	x21, x0
  40c9bc:	bl	40c644 <__fxstatat@plt+0x9bf4>
  40c9c0:	mov	x22, x0
  40c9c4:	bl	40c690 <__fxstatat@plt+0x9c40>
  40c9c8:	sub	x8, x22, x21
  40c9cc:	mov	x24, x0
  40c9d0:	add	x23, x8, x0
  40c9d4:	mov	x0, x19
  40c9d8:	bl	402430 <strlen@plt>
  40c9dc:	mov	x22, x0
  40c9e0:	cbz	x24, 40c9fc <__fxstatat@plt+0x9fac>
  40c9e4:	add	x8, x23, x21
  40c9e8:	ldurb	w8, [x8, #-1]
  40c9ec:	cmp	w8, #0x2f
  40c9f0:	b.ne	40ca10 <__fxstatat@plt+0x9fc0>  // b.any
  40c9f4:	mov	w25, wzr
  40c9f8:	b	40ca20 <__fxstatat@plt+0x9fd0>
  40c9fc:	ldrb	w8, [x19]
  40ca00:	cmp	w8, #0x2f
  40ca04:	mov	w8, #0x2e                  	// #46
  40ca08:	csel	w25, w8, wzr, eq  // eq = none
  40ca0c:	b	40ca20 <__fxstatat@plt+0x9fd0>
  40ca10:	ldrb	w8, [x19]
  40ca14:	cmp	w8, #0x2f
  40ca18:	mov	w8, #0x2f                  	// #47
  40ca1c:	csel	w25, wzr, w8, eq  // eq = none
  40ca20:	cmp	w25, #0x0
  40ca24:	add	x8, x22, x23
  40ca28:	cinc	x8, x8, ne  // ne = any
  40ca2c:	add	x0, x8, #0x1
  40ca30:	cset	w26, ne  // ne = any
  40ca34:	bl	4025f0 <malloc@plt>
  40ca38:	mov	x24, x0
  40ca3c:	cbz	x0, 40ca78 <__fxstatat@plt+0xa028>
  40ca40:	mov	x3, #0xffffffffffffffff    	// #-1
  40ca44:	mov	x0, x24
  40ca48:	mov	x1, x21
  40ca4c:	mov	x2, x23
  40ca50:	bl	402940 <__mempcpy_chk@plt>
  40ca54:	strb	w25, [x0]
  40ca58:	add	x0, x0, x26
  40ca5c:	cbz	x20, 40ca64 <__fxstatat@plt+0xa014>
  40ca60:	str	x0, [x20]
  40ca64:	mov	x3, #0xffffffffffffffff    	// #-1
  40ca68:	mov	x1, x19
  40ca6c:	mov	x2, x22
  40ca70:	bl	402940 <__mempcpy_chk@plt>
  40ca74:	strb	wzr, [x0]
  40ca78:	mov	x0, x24
  40ca7c:	ldp	x20, x19, [sp, #64]
  40ca80:	ldp	x22, x21, [sp, #48]
  40ca84:	ldp	x24, x23, [sp, #32]
  40ca88:	ldp	x26, x25, [sp, #16]
  40ca8c:	ldp	x29, x30, [sp], #80
  40ca90:	ret
  40ca94:	stp	x29, x30, [sp, #-80]!
  40ca98:	stp	x26, x25, [sp, #16]
  40ca9c:	stp	x24, x23, [sp, #32]
  40caa0:	stp	x22, x21, [sp, #48]
  40caa4:	stp	x20, x19, [sp, #64]
  40caa8:	mov	x29, sp
  40caac:	mov	x19, x1
  40cab0:	mov	x21, x0
  40cab4:	bl	402800 <strcmp@plt>
  40cab8:	cbz	w0, 40cbf0 <__fxstatat@plt+0xa1a0>
  40cabc:	ldrb	w24, [x21]
  40cac0:	cbz	w24, 40cb30 <__fxstatat@plt+0xa0e0>
  40cac4:	ldrb	w22, [x19]
  40cac8:	cbz	w22, 40cbec <__fxstatat@plt+0xa19c>
  40cacc:	mov	w20, w0
  40cad0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40cad4:	add	x0, x0, #0x6aa
  40cad8:	mov	x1, x21
  40cadc:	bl	402800 <strcmp@plt>
  40cae0:	cbz	w0, 40cb30 <__fxstatat@plt+0xa0e0>
  40cae4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40cae8:	add	x0, x0, #0x6aa
  40caec:	mov	x1, x19
  40caf0:	bl	402800 <strcmp@plt>
  40caf4:	cbz	w0, 40cbec <__fxstatat@plt+0xa19c>
  40caf8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40cafc:	add	x0, x0, #0x6a9
  40cb00:	mov	x1, x21
  40cb04:	bl	402800 <strcmp@plt>
  40cb08:	cbz	w0, 40cb30 <__fxstatat@plt+0xa0e0>
  40cb0c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40cb10:	add	x0, x0, #0x6a9
  40cb14:	mov	x1, x19
  40cb18:	bl	402800 <strcmp@plt>
  40cb1c:	cbz	w0, 40cbec <__fxstatat@plt+0xa19c>
  40cb20:	cmp	w24, #0x2e
  40cb24:	b.ne	40cb38 <__fxstatat@plt+0xa0e8>  // b.any
  40cb28:	cmp	w22, #0x2e
  40cb2c:	b.eq	40cb38 <__fxstatat@plt+0xa0e8>  // b.none
  40cb30:	mov	w0, #0xffffffff            	// #-1
  40cb34:	b	40cbf0 <__fxstatat@plt+0xa1a0>
  40cb38:	cmp	w24, #0x2e
  40cb3c:	b.ne	40cbe4 <__fxstatat@plt+0xa194>  // b.any
  40cb40:	cmp	w22, #0x2e
  40cb44:	b.ne	40ce1c <__fxstatat@plt+0xa3cc>  // b.any
  40cb48:	ldrb	w24, [x21, #1]!
  40cb4c:	add	x19, x19, #0x1
  40cb50:	cbnz	w24, 40ce20 <__fxstatat@plt+0xa3d0>
  40cb54:	mov	x22, xzr
  40cb58:	mov	x23, x21
  40cb5c:	ldrb	w9, [x19]
  40cb60:	cbz	w9, 40cc08 <__fxstatat@plt+0xa1b8>
  40cb64:	mov	w8, wzr
  40cb68:	mov	x25, xzr
  40cb6c:	mov	w26, #0x1                   	// #1
  40cb70:	mov	x24, x19
  40cb74:	b	40cb8c <__fxstatat@plt+0xa13c>
  40cb78:	cmp	x25, #0x0
  40cb7c:	csel	x25, x24, x25, eq  // eq = none
  40cb80:	mov	w8, #0x1                   	// #1
  40cb84:	ldrb	w9, [x24, #1]!
  40cb88:	cbz	w9, 40cc10 <__fxstatat@plt+0xa1c0>
  40cb8c:	tbz	w8, #0, 40cbb4 <__fxstatat@plt+0xa164>
  40cb90:	and	w9, w9, #0xff
  40cb94:	sub	w8, w9, #0x41
  40cb98:	cmp	w8, #0x39
  40cb9c:	b.hi	40cbdc <__fxstatat@plt+0xa18c>  // b.pmore
  40cba0:	lsl	x8, x26, x8
  40cba4:	tst	x8, #0x3ffffff03ffffff
  40cba8:	b.eq	40cbdc <__fxstatat@plt+0xa18c>  // b.none
  40cbac:	mov	w8, wzr
  40cbb0:	b	40cb84 <__fxstatat@plt+0xa134>
  40cbb4:	and	w0, w9, #0xff
  40cbb8:	cmp	w0, #0x2e
  40cbbc:	b.eq	40cb78 <__fxstatat@plt+0xa128>  // b.none
  40cbc0:	bl	40bd2c <__fxstatat@plt+0x92dc>
  40cbc4:	mov	w8, wzr
  40cbc8:	tbnz	w0, #0, 40cb84 <__fxstatat@plt+0xa134>
  40cbcc:	ldrb	w9, [x24]
  40cbd0:	cmp	w9, #0x7e
  40cbd4:	csel	x25, x25, xzr, eq  // eq = none
  40cbd8:	b	40cb84 <__fxstatat@plt+0xa134>
  40cbdc:	mov	w8, wzr
  40cbe0:	b	40cbd0 <__fxstatat@plt+0xa180>
  40cbe4:	cmp	w22, #0x2e
  40cbe8:	b.ne	40ce20 <__fxstatat@plt+0xa3d0>  // b.any
  40cbec:	mov	w0, #0x1                   	// #1
  40cbf0:	ldp	x20, x19, [sp, #64]
  40cbf4:	ldp	x22, x21, [sp, #48]
  40cbf8:	ldp	x24, x23, [sp, #32]
  40cbfc:	ldp	x26, x25, [sp, #16]
  40cc00:	ldp	x29, x30, [sp], #80
  40cc04:	ret
  40cc08:	mov	x25, xzr
  40cc0c:	mov	x24, x19
  40cc10:	cmp	x22, #0x0
  40cc14:	csel	x8, x22, x23, ne  // ne = any
  40cc18:	cmp	x25, #0x0
  40cc1c:	orr	x9, x22, x25
  40cc20:	sub	x22, x8, x21
  40cc24:	csel	x8, x25, x24, ne  // ne = any
  40cc28:	sub	x8, x8, x19
  40cc2c:	cbz	x9, 40cc58 <__fxstatat@plt+0xa208>
  40cc30:	cmp	x22, x8
  40cc34:	b.ne	40cc58 <__fxstatat@plt+0xa208>  // b.any
  40cc38:	mov	x0, x21
  40cc3c:	mov	x1, x19
  40cc40:	mov	x2, x22
  40cc44:	bl	402640 <strncmp@plt>
  40cc48:	mov	x8, x22
  40cc4c:	cbnz	w0, 40cc58 <__fxstatat@plt+0xa208>
  40cc50:	sub	x22, x23, x21
  40cc54:	sub	x8, x24, x19
  40cc58:	mov	x9, xzr
  40cc5c:	mov	x11, xzr
  40cc60:	mov	w10, #0x1                   	// #1
  40cc64:	cmp	x9, x8
  40cc68:	b.cc	40cc74 <__fxstatat@plt+0xa224>  // b.lo, b.ul, b.last
  40cc6c:	cmp	x11, x22
  40cc70:	b.cs	40ce14 <__fxstatat@plt+0xa3c4>  // b.hs, b.nlast
  40cc74:	cmp	x11, x22
  40cc78:	b.cs	40cc8c <__fxstatat@plt+0xa23c>  // b.hs, b.nlast
  40cc7c:	ldrb	w12, [x21, x11]
  40cc80:	sub	w12, w12, #0x30
  40cc84:	cmp	w12, #0x9
  40cc88:	b.hi	40cca4 <__fxstatat@plt+0xa254>  // b.pmore
  40cc8c:	cmp	x9, x8
  40cc90:	b.cs	40cd70 <__fxstatat@plt+0xa320>  // b.hs, b.nlast
  40cc94:	ldrb	w12, [x19, x9]
  40cc98:	sub	w12, w12, #0x30
  40cc9c:	cmp	w12, #0xa
  40cca0:	b.cc	40cd70 <__fxstatat@plt+0xa320>  // b.lo, b.ul, b.last
  40cca4:	cmp	x22, x11
  40cca8:	b.eq	40ccbc <__fxstatat@plt+0xa26c>  // b.none
  40ccac:	ldrb	w12, [x21, x11]
  40ccb0:	sub	w13, w12, #0x30
  40ccb4:	cmp	w13, #0xa
  40ccb8:	b.cs	40cccc <__fxstatat@plt+0xa27c>  // b.hs, b.nlast
  40ccbc:	mov	w12, wzr
  40ccc0:	cmp	x8, x9
  40ccc4:	b.eq	40ccfc <__fxstatat@plt+0xa2ac>  // b.none
  40ccc8:	b	40ccec <__fxstatat@plt+0xa29c>
  40cccc:	sub	w13, w12, #0x41
  40ccd0:	cmp	w13, #0x39
  40ccd4:	b.hi	40cd40 <__fxstatat@plt+0xa2f0>  // b.pmore
  40ccd8:	lsl	x13, x10, x13
  40ccdc:	tst	x13, #0x3ffffff03ffffff
  40cce0:	b.eq	40cd40 <__fxstatat@plt+0xa2f0>  // b.none
  40cce4:	cmp	x8, x9
  40cce8:	b.eq	40ccfc <__fxstatat@plt+0xa2ac>  // b.none
  40ccec:	ldrb	w13, [x19, x9]
  40ccf0:	sub	w14, w13, #0x30
  40ccf4:	cmp	w14, #0xa
  40ccf8:	b.cs	40cd0c <__fxstatat@plt+0xa2bc>  // b.hs, b.nlast
  40ccfc:	mov	w13, wzr
  40cd00:	subs	w0, w12, w13
  40cd04:	b.eq	40cd2c <__fxstatat@plt+0xa2dc>  // b.none
  40cd08:	b	40ce10 <__fxstatat@plt+0xa3c0>
  40cd0c:	sub	w14, w13, #0x41
  40cd10:	cmp	w14, #0x39
  40cd14:	b.hi	40cd58 <__fxstatat@plt+0xa308>  // b.pmore
  40cd18:	lsl	x14, x10, x14
  40cd1c:	tst	x14, #0x3ffffff03ffffff
  40cd20:	b.eq	40cd58 <__fxstatat@plt+0xa308>  // b.none
  40cd24:	subs	w0, w12, w13
  40cd28:	b.ne	40ce10 <__fxstatat@plt+0xa3c0>  // b.any
  40cd2c:	add	x11, x11, #0x1
  40cd30:	add	x9, x9, #0x1
  40cd34:	cmp	x11, x22
  40cd38:	b.cc	40cc7c <__fxstatat@plt+0xa22c>  // b.lo, b.ul, b.last
  40cd3c:	b	40cc8c <__fxstatat@plt+0xa23c>
  40cd40:	orr	w13, w12, #0x100
  40cd44:	cmp	w12, #0x7e
  40cd48:	csinv	w12, w13, wzr, ne  // ne = any
  40cd4c:	cmp	x8, x9
  40cd50:	b.eq	40ccfc <__fxstatat@plt+0xa2ac>  // b.none
  40cd54:	b	40ccec <__fxstatat@plt+0xa29c>
  40cd58:	orr	w14, w13, #0x100
  40cd5c:	cmp	w13, #0x7e
  40cd60:	csinv	w13, w14, wzr, ne  // ne = any
  40cd64:	subs	w0, w12, w13
  40cd68:	b.eq	40cd2c <__fxstatat@plt+0xa2dc>  // b.none
  40cd6c:	b	40ce10 <__fxstatat@plt+0xa3c0>
  40cd70:	mov	x12, x11
  40cd74:	ldrb	w13, [x21, x12]
  40cd78:	add	x12, x12, #0x1
  40cd7c:	subs	w16, w13, #0x30
  40cd80:	b.eq	40cd74 <__fxstatat@plt+0xa324>  // b.none
  40cd84:	sub	x11, x12, #0x1
  40cd88:	ldrb	w15, [x19, x9]
  40cd8c:	add	x9, x9, #0x1
  40cd90:	subs	w14, w15, #0x30
  40cd94:	b.eq	40cd88 <__fxstatat@plt+0xa338>  // b.none
  40cd98:	cmp	w14, #0xa
  40cd9c:	cset	w14, cc  // cc = lo, ul, last
  40cda0:	cmp	w16, #0x9
  40cda4:	b.hi	40cdfc <__fxstatat@plt+0xa3ac>  // b.pmore
  40cda8:	mov	x11, xzr
  40cdac:	mov	w0, wzr
  40cdb0:	add	x16, x21, x12
  40cdb4:	add	x17, x19, x9
  40cdb8:	tbz	w14, #0, 40cbec <__fxstatat@plt+0xa19c>
  40cdbc:	sub	w14, w13, w15
  40cdc0:	ldrb	w15, [x17, x11]
  40cdc4:	ldrb	w13, [x16, x11]
  40cdc8:	cmp	w0, #0x0
  40cdcc:	csel	w0, w14, w0, eq  // eq = none
  40cdd0:	sub	w14, w15, #0x30
  40cdd4:	sub	w18, w13, #0x30
  40cdd8:	cmp	w14, #0xa
  40cddc:	cset	w14, cc  // cc = lo, ul, last
  40cde0:	cmp	w18, #0xa
  40cde4:	add	x11, x11, #0x1
  40cde8:	b.cc	40cdb8 <__fxstatat@plt+0xa368>  // b.lo, b.ul, b.last
  40cdec:	add	x12, x12, x11
  40cdf0:	add	x9, x9, x11
  40cdf4:	sub	x11, x12, #0x1
  40cdf8:	b	40ce00 <__fxstatat@plt+0xa3b0>
  40cdfc:	mov	w0, wzr
  40ce00:	sub	x9, x9, #0x1
  40ce04:	tbnz	w14, #0, 40cb30 <__fxstatat@plt+0xa0e0>
  40ce08:	cbz	w0, 40cc64 <__fxstatat@plt+0xa214>
  40ce0c:	b	40cbf0 <__fxstatat@plt+0xa1a0>
  40ce10:	b.ne	40cbf0 <__fxstatat@plt+0xa1a0>  // b.any
  40ce14:	mov	w0, w20
  40ce18:	b	40cbf0 <__fxstatat@plt+0xa1a0>
  40ce1c:	mov	w24, #0x2e                  	// #46
  40ce20:	mov	w8, wzr
  40ce24:	mov	x22, xzr
  40ce28:	mov	w25, #0x1                   	// #1
  40ce2c:	mov	x23, x21
  40ce30:	b	40ce48 <__fxstatat@plt+0xa3f8>
  40ce34:	cmp	x22, #0x0
  40ce38:	csel	x22, x23, x22, eq  // eq = none
  40ce3c:	mov	w8, #0x1                   	// #1
  40ce40:	ldrb	w24, [x23, #1]!
  40ce44:	cbz	w24, 40cb5c <__fxstatat@plt+0xa10c>
  40ce48:	tbz	w8, #0, 40ce70 <__fxstatat@plt+0xa420>
  40ce4c:	and	w9, w24, #0xff
  40ce50:	sub	w8, w9, #0x41
  40ce54:	cmp	w8, #0x39
  40ce58:	b.hi	40ce98 <__fxstatat@plt+0xa448>  // b.pmore
  40ce5c:	lsl	x8, x25, x8
  40ce60:	tst	x8, #0x3ffffff03ffffff
  40ce64:	b.eq	40ce98 <__fxstatat@plt+0xa448>  // b.none
  40ce68:	mov	w8, wzr
  40ce6c:	b	40ce40 <__fxstatat@plt+0xa3f0>
  40ce70:	and	w0, w24, #0xff
  40ce74:	cmp	w0, #0x2e
  40ce78:	b.eq	40ce34 <__fxstatat@plt+0xa3e4>  // b.none
  40ce7c:	bl	40bd2c <__fxstatat@plt+0x92dc>
  40ce80:	mov	w8, wzr
  40ce84:	tbnz	w0, #0, 40ce40 <__fxstatat@plt+0xa3f0>
  40ce88:	ldrb	w9, [x23]
  40ce8c:	cmp	w9, #0x7e
  40ce90:	csel	x22, x22, xzr, eq  // eq = none
  40ce94:	b	40ce40 <__fxstatat@plt+0xa3f0>
  40ce98:	mov	w8, wzr
  40ce9c:	b	40ce8c <__fxstatat@plt+0xa43c>
  40cea0:	mov	x1, x0
  40cea4:	mov	w0, wzr
  40cea8:	b	402530 <clock_gettime@plt>
  40ceac:	sub	sp, sp, #0x20
  40ceb0:	mov	x1, sp
  40ceb4:	mov	w0, wzr
  40ceb8:	stp	x29, x30, [sp, #16]
  40cebc:	add	x29, sp, #0x10
  40cec0:	bl	402530 <clock_gettime@plt>
  40cec4:	ldp	x0, x1, [sp]
  40cec8:	ldp	x29, x30, [sp, #16]
  40cecc:	add	sp, sp, #0x20
  40ced0:	ret
  40ced4:	stp	x29, x30, [sp, #-32]!
  40ced8:	mov	x1, xzr
  40cedc:	str	x19, [sp, #16]
  40cee0:	mov	x29, sp
  40cee4:	bl	402a40 <setlocale@plt>
  40cee8:	cbz	x0, 40cf14 <__fxstatat@plt+0xa4c4>
  40ceec:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40cef0:	add	x1, x1, #0x6ac
  40cef4:	mov	x19, x0
  40cef8:	bl	402800 <strcmp@plt>
  40cefc:	cbz	w0, 40cf1c <__fxstatat@plt+0xa4cc>
  40cf00:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40cf04:	add	x1, x1, #0x6ae
  40cf08:	mov	x0, x19
  40cf0c:	bl	402800 <strcmp@plt>
  40cf10:	cbz	w0, 40cf1c <__fxstatat@plt+0xa4cc>
  40cf14:	mov	w0, #0x1                   	// #1
  40cf18:	b	40cf20 <__fxstatat@plt+0xa4d0>
  40cf1c:	mov	w0, wzr
  40cf20:	ldr	x19, [sp, #16]
  40cf24:	ldp	x29, x30, [sp], #32
  40cf28:	ret
  40cf2c:	ldr	x0, [x0, #16]
  40cf30:	ret
  40cf34:	ldr	x0, [x0, #24]
  40cf38:	ret
  40cf3c:	ldr	x0, [x0, #32]
  40cf40:	ret
  40cf44:	ldp	x8, x9, [x0]
  40cf48:	cmp	x8, x9
  40cf4c:	b.cs	40cf8c <__fxstatat@plt+0xa53c>  // b.hs, b.nlast
  40cf50:	mov	x0, xzr
  40cf54:	b	40cf64 <__fxstatat@plt+0xa514>
  40cf58:	add	x8, x8, #0x10
  40cf5c:	cmp	x8, x9
  40cf60:	b.cs	40cf90 <__fxstatat@plt+0xa540>  // b.hs, b.nlast
  40cf64:	ldr	x10, [x8]
  40cf68:	cbz	x10, 40cf58 <__fxstatat@plt+0xa508>
  40cf6c:	mov	x10, xzr
  40cf70:	mov	x11, x8
  40cf74:	ldr	x11, [x11, #8]
  40cf78:	add	x10, x10, #0x1
  40cf7c:	cbnz	x11, 40cf74 <__fxstatat@plt+0xa524>
  40cf80:	cmp	x10, x0
  40cf84:	csel	x0, x10, x0, hi  // hi = pmore
  40cf88:	b	40cf58 <__fxstatat@plt+0xa508>
  40cf8c:	mov	x0, xzr
  40cf90:	ret
  40cf94:	ldp	x9, x10, [x0]
  40cf98:	cmp	x9, x10
  40cf9c:	b.cs	40cfd8 <__fxstatat@plt+0xa588>  // b.hs, b.nlast
  40cfa0:	mov	x8, xzr
  40cfa4:	mov	x11, xzr
  40cfa8:	b	40cfb8 <__fxstatat@plt+0xa568>
  40cfac:	add	x9, x9, #0x10
  40cfb0:	cmp	x9, x10
  40cfb4:	b.cs	40cfe0 <__fxstatat@plt+0xa590>  // b.hs, b.nlast
  40cfb8:	ldr	x12, [x9]
  40cfbc:	cbz	x12, 40cfac <__fxstatat@plt+0xa55c>
  40cfc0:	mov	x12, x9
  40cfc4:	ldr	x12, [x12, #8]
  40cfc8:	add	x8, x8, #0x1
  40cfcc:	cbnz	x12, 40cfc4 <__fxstatat@plt+0xa574>
  40cfd0:	add	x11, x11, #0x1
  40cfd4:	b	40cfac <__fxstatat@plt+0xa55c>
  40cfd8:	mov	x11, xzr
  40cfdc:	mov	x8, xzr
  40cfe0:	ldr	x9, [x0, #24]
  40cfe4:	cmp	x11, x9
  40cfe8:	b.ne	40d000 <__fxstatat@plt+0xa5b0>  // b.any
  40cfec:	ldr	x9, [x0, #32]
  40cff0:	cmp	x8, x9
  40cff4:	b.ne	40d000 <__fxstatat@plt+0xa5b0>  // b.any
  40cff8:	mov	w0, #0x1                   	// #1
  40cffc:	ret
  40d000:	mov	w0, wzr
  40d004:	ret
  40d008:	stp	x29, x30, [sp, #-48]!
  40d00c:	stp	x22, x21, [sp, #16]
  40d010:	stp	x20, x19, [sp, #32]
  40d014:	ldp	x8, x9, [x0]
  40d018:	ldp	x20, x3, [x0, #24]
  40d01c:	ldr	x22, [x0, #16]
  40d020:	mov	x19, x1
  40d024:	cmp	x8, x9
  40d028:	mov	x21, xzr
  40d02c:	mov	x29, sp
  40d030:	b.cc	40d0c0 <__fxstatat@plt+0xa670>  // b.lo, b.ul, b.last
  40d034:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40d038:	add	x2, x2, #0x6b4
  40d03c:	mov	w1, #0x1                   	// #1
  40d040:	mov	x0, x19
  40d044:	bl	4027e0 <__fprintf_chk@plt>
  40d048:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40d04c:	add	x2, x2, #0x6cc
  40d050:	mov	w1, #0x1                   	// #1
  40d054:	mov	x0, x19
  40d058:	mov	x3, x22
  40d05c:	bl	4027e0 <__fprintf_chk@plt>
  40d060:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40d064:	ucvtf	d0, x20
  40d068:	fmov	d1, x8
  40d06c:	fmul	d0, d0, d1
  40d070:	ucvtf	d1, x22
  40d074:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40d078:	fdiv	d0, d0, d1
  40d07c:	add	x2, x2, #0x6e4
  40d080:	mov	w1, #0x1                   	// #1
  40d084:	mov	x0, x19
  40d088:	mov	x3, x20
  40d08c:	bl	4027e0 <__fprintf_chk@plt>
  40d090:	mov	x0, x19
  40d094:	mov	x3, x21
  40d098:	ldp	x20, x19, [sp, #32]
  40d09c:	ldp	x22, x21, [sp, #16]
  40d0a0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  40d0a4:	add	x2, x2, #0x705
  40d0a8:	mov	w1, #0x1                   	// #1
  40d0ac:	ldp	x29, x30, [sp], #48
  40d0b0:	b	4027e0 <__fprintf_chk@plt>
  40d0b4:	add	x8, x8, #0x10
  40d0b8:	cmp	x8, x9
  40d0bc:	b.cs	40d034 <__fxstatat@plt+0xa5e4>  // b.hs, b.nlast
  40d0c0:	ldr	x10, [x8]
  40d0c4:	cbz	x10, 40d0b4 <__fxstatat@plt+0xa664>
  40d0c8:	mov	x10, xzr
  40d0cc:	mov	x11, x8
  40d0d0:	ldr	x11, [x11, #8]
  40d0d4:	add	x10, x10, #0x1
  40d0d8:	cbnz	x11, 40d0d0 <__fxstatat@plt+0xa680>
  40d0dc:	cmp	x10, x21
  40d0e0:	csel	x21, x10, x21, hi  // hi = pmore
  40d0e4:	b	40d0b4 <__fxstatat@plt+0xa664>
  40d0e8:	stp	x29, x30, [sp, #-48]!
  40d0ec:	stp	x20, x19, [sp, #32]
  40d0f0:	ldr	x8, [x0, #16]
  40d0f4:	ldr	x9, [x0, #48]
  40d0f8:	mov	x19, x0
  40d0fc:	mov	x20, x1
  40d100:	mov	x0, x1
  40d104:	mov	x1, x8
  40d108:	str	x21, [sp, #16]
  40d10c:	mov	x29, sp
  40d110:	blr	x9
  40d114:	ldr	x8, [x19, #16]
  40d118:	cmp	x0, x8
  40d11c:	b.cs	40d188 <__fxstatat@plt+0xa738>  // b.hs, b.nlast
  40d120:	ldr	x8, [x19]
  40d124:	add	x21, x8, x0, lsl #4
  40d128:	ldr	x1, [x21]
  40d12c:	mov	x0, xzr
  40d130:	cbz	x1, 40d178 <__fxstatat@plt+0xa728>
  40d134:	cbz	x8, 40d178 <__fxstatat@plt+0xa728>
  40d138:	cmp	x1, x20
  40d13c:	b.eq	40d164 <__fxstatat@plt+0xa714>  // b.none
  40d140:	ldr	x8, [x19, #56]
  40d144:	mov	x0, x20
  40d148:	blr	x8
  40d14c:	tbnz	w0, #0, 40d16c <__fxstatat@plt+0xa71c>
  40d150:	ldr	x21, [x21, #8]
  40d154:	cbz	x21, 40d174 <__fxstatat@plt+0xa724>
  40d158:	ldr	x1, [x21]
  40d15c:	cmp	x1, x20
  40d160:	b.ne	40d140 <__fxstatat@plt+0xa6f0>  // b.any
  40d164:	mov	x0, x20
  40d168:	b	40d178 <__fxstatat@plt+0xa728>
  40d16c:	ldr	x0, [x21]
  40d170:	b	40d178 <__fxstatat@plt+0xa728>
  40d174:	mov	x0, xzr
  40d178:	ldp	x20, x19, [sp, #32]
  40d17c:	ldr	x21, [sp, #16]
  40d180:	ldp	x29, x30, [sp], #48
  40d184:	ret
  40d188:	bl	402770 <abort@plt>
  40d18c:	stp	x29, x30, [sp, #-16]!
  40d190:	ldr	x8, [x0, #32]
  40d194:	mov	x29, sp
  40d198:	cbz	x8, 40d1b8 <__fxstatat@plt+0xa768>
  40d19c:	ldp	x8, x9, [x0]
  40d1a0:	cmp	x8, x9
  40d1a4:	b.cs	40d1c4 <__fxstatat@plt+0xa774>  // b.hs, b.nlast
  40d1a8:	ldr	x0, [x8], #16
  40d1ac:	cbz	x0, 40d1a0 <__fxstatat@plt+0xa750>
  40d1b0:	ldp	x29, x30, [sp], #16
  40d1b4:	ret
  40d1b8:	mov	x0, xzr
  40d1bc:	ldp	x29, x30, [sp], #16
  40d1c0:	ret
  40d1c4:	bl	402770 <abort@plt>
  40d1c8:	stp	x29, x30, [sp, #-32]!
  40d1cc:	stp	x20, x19, [sp, #16]
  40d1d0:	ldr	x8, [x0, #16]
  40d1d4:	ldr	x9, [x0, #48]
  40d1d8:	mov	x19, x0
  40d1dc:	mov	x20, x1
  40d1e0:	mov	x0, x1
  40d1e4:	mov	x1, x8
  40d1e8:	mov	x29, sp
  40d1ec:	blr	x9
  40d1f0:	ldr	x8, [x19, #16]
  40d1f4:	cmp	x0, x8
  40d1f8:	b.cs	40d254 <__fxstatat@plt+0xa804>  // b.hs, b.nlast
  40d1fc:	ldr	x8, [x19]
  40d200:	add	x9, x8, x0, lsl #4
  40d204:	ldp	x10, x9, [x9]
  40d208:	cmp	x10, x20
  40d20c:	b.eq	40d218 <__fxstatat@plt+0xa7c8>  // b.none
  40d210:	cbnz	x9, 40d204 <__fxstatat@plt+0xa7b4>
  40d214:	b	40d224 <__fxstatat@plt+0xa7d4>
  40d218:	cbz	x9, 40d224 <__fxstatat@plt+0xa7d4>
  40d21c:	ldr	x0, [x9]
  40d220:	b	40d248 <__fxstatat@plt+0xa7f8>
  40d224:	ldr	x9, [x19, #8]
  40d228:	add	x8, x8, x0, lsl #4
  40d22c:	add	x8, x8, #0x10
  40d230:	cmp	x8, x9
  40d234:	b.cs	40d244 <__fxstatat@plt+0xa7f4>  // b.hs, b.nlast
  40d238:	ldr	x0, [x8], #16
  40d23c:	cbz	x0, 40d230 <__fxstatat@plt+0xa7e0>
  40d240:	b	40d248 <__fxstatat@plt+0xa7f8>
  40d244:	mov	x0, xzr
  40d248:	ldp	x20, x19, [sp, #16]
  40d24c:	ldp	x29, x30, [sp], #32
  40d250:	ret
  40d254:	bl	402770 <abort@plt>
  40d258:	ldp	x9, x10, [x0]
  40d25c:	cmp	x9, x10
  40d260:	b.cs	40d2bc <__fxstatat@plt+0xa86c>  // b.hs, b.nlast
  40d264:	mov	x11, xzr
  40d268:	ldr	x8, [x9]
  40d26c:	cbz	x8, 40d2a0 <__fxstatat@plt+0xa850>
  40d270:	cbz	x9, 40d2a0 <__fxstatat@plt+0xa850>
  40d274:	mov	x10, x9
  40d278:	cmp	x11, x2
  40d27c:	b.cs	40d2c4 <__fxstatat@plt+0xa874>  // b.hs, b.nlast
  40d280:	ldr	x8, [x10]
  40d284:	str	x8, [x1, x11, lsl #3]
  40d288:	ldr	x10, [x10, #8]
  40d28c:	add	x8, x11, #0x1
  40d290:	mov	x11, x8
  40d294:	cbnz	x10, 40d278 <__fxstatat@plt+0xa828>
  40d298:	ldr	x10, [x0, #8]
  40d29c:	b	40d2a4 <__fxstatat@plt+0xa854>
  40d2a0:	mov	x8, x11
  40d2a4:	add	x9, x9, #0x10
  40d2a8:	cmp	x9, x10
  40d2ac:	mov	x11, x8
  40d2b0:	b.cc	40d268 <__fxstatat@plt+0xa818>  // b.lo, b.ul, b.last
  40d2b4:	mov	x0, x8
  40d2b8:	ret
  40d2bc:	mov	x0, xzr
  40d2c0:	ret
  40d2c4:	mov	x0, x11
  40d2c8:	ret
  40d2cc:	stp	x29, x30, [sp, #-64]!
  40d2d0:	stp	x24, x23, [sp, #16]
  40d2d4:	stp	x22, x21, [sp, #32]
  40d2d8:	stp	x20, x19, [sp, #48]
  40d2dc:	ldp	x23, x8, [x0]
  40d2e0:	mov	x29, sp
  40d2e4:	cmp	x23, x8
  40d2e8:	b.cs	40d300 <__fxstatat@plt+0xa8b0>  // b.hs, b.nlast
  40d2ec:	mov	x19, x2
  40d2f0:	mov	x20, x0
  40d2f4:	mov	x21, x1
  40d2f8:	mov	x22, xzr
  40d2fc:	b	40d318 <__fxstatat@plt+0xa8c8>
  40d300:	mov	x22, xzr
  40d304:	b	40d350 <__fxstatat@plt+0xa900>
  40d308:	ldr	x8, [x20, #8]
  40d30c:	add	x23, x23, #0x10
  40d310:	cmp	x23, x8
  40d314:	b.cs	40d350 <__fxstatat@plt+0xa900>  // b.hs, b.nlast
  40d318:	ldr	x0, [x23]
  40d31c:	cbz	x0, 40d30c <__fxstatat@plt+0xa8bc>
  40d320:	cbz	x23, 40d30c <__fxstatat@plt+0xa8bc>
  40d324:	mov	x1, x19
  40d328:	blr	x21
  40d32c:	tbz	w0, #0, 40d350 <__fxstatat@plt+0xa900>
  40d330:	mov	x24, x23
  40d334:	ldr	x24, [x24, #8]
  40d338:	add	x22, x22, #0x1
  40d33c:	cbz	x24, 40d308 <__fxstatat@plt+0xa8b8>
  40d340:	ldr	x0, [x24]
  40d344:	mov	x1, x19
  40d348:	blr	x21
  40d34c:	tbnz	w0, #0, 40d334 <__fxstatat@plt+0xa8e4>
  40d350:	mov	x0, x22
  40d354:	ldp	x20, x19, [sp, #48]
  40d358:	ldp	x22, x21, [sp, #32]
  40d35c:	ldp	x24, x23, [sp, #16]
  40d360:	ldp	x29, x30, [sp], #64
  40d364:	ret
  40d368:	ldrb	w9, [x0]
  40d36c:	cbz	w9, 40d39c <__fxstatat@plt+0xa94c>
  40d370:	mov	x8, x0
  40d374:	mov	x0, xzr
  40d378:	add	x8, x8, #0x1
  40d37c:	lsl	x10, x0, #5
  40d380:	sub	x10, x10, x0
  40d384:	add	x10, x10, w9, uxtb
  40d388:	ldrb	w9, [x8], #1
  40d38c:	udiv	x11, x10, x1
  40d390:	msub	x0, x11, x1, x10
  40d394:	cbnz	w9, 40d37c <__fxstatat@plt+0xa92c>
  40d398:	ret
  40d39c:	mov	x0, xzr
  40d3a0:	ret
  40d3a4:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40d3a8:	add	x8, x8, #0x720
  40d3ac:	ldr	w9, [x8, #16]
  40d3b0:	ldr	q0, [x8]
  40d3b4:	str	w9, [x0, #16]
  40d3b8:	str	q0, [x0]
  40d3bc:	ret
  40d3c0:	stp	x29, x30, [sp, #-64]!
  40d3c4:	adrp	x8, 40d000 <__fxstatat@plt+0xa5b0>
  40d3c8:	add	x8, x8, #0x5a8
  40d3cc:	cmp	x2, #0x0
  40d3d0:	adrp	x9, 40d000 <__fxstatat@plt+0xa5b0>
  40d3d4:	stp	x24, x23, [sp, #16]
  40d3d8:	stp	x22, x21, [sp, #32]
  40d3dc:	mov	x21, x0
  40d3e0:	add	x9, x9, #0x5b8
  40d3e4:	csel	x23, x8, x2, eq  // eq = none
  40d3e8:	cmp	x3, #0x0
  40d3ec:	mov	w0, #0x50                  	// #80
  40d3f0:	stp	x20, x19, [sp, #48]
  40d3f4:	mov	x29, sp
  40d3f8:	mov	x19, x4
  40d3fc:	mov	x22, x1
  40d400:	csel	x24, x9, x3, eq  // eq = none
  40d404:	bl	4025f0 <malloc@plt>
  40d408:	mov	x20, x0
  40d40c:	cbz	x0, 40d590 <__fxstatat@plt+0xab40>
  40d410:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40d414:	add	x9, x9, #0x720
  40d418:	cmp	x22, #0x0
  40d41c:	csel	x8, x9, x22, eq  // eq = none
  40d420:	cmp	x8, x9
  40d424:	str	x8, [x20, #40]
  40d428:	b.eq	40d4ac <__fxstatat@plt+0xaa5c>  // b.none
  40d42c:	ldr	s0, [x8, #8]
  40d430:	mov	w9, #0xcccd                	// #52429
  40d434:	movk	w9, #0x3dcc, lsl #16
  40d438:	fmov	s1, w9
  40d43c:	fcmp	s0, s1
  40d440:	b.le	40d584 <__fxstatat@plt+0xab34>
  40d444:	mov	w9, #0x6666                	// #26214
  40d448:	movk	w9, #0x3f66, lsl #16
  40d44c:	fmov	s1, w9
  40d450:	fcmp	s0, s1
  40d454:	b.pl	40d584 <__fxstatat@plt+0xab34>  // b.nfrst
  40d458:	ldr	s1, [x8, #12]
  40d45c:	mov	w9, #0xcccd                	// #52429
  40d460:	movk	w9, #0x3f8c, lsl #16
  40d464:	fmov	s2, w9
  40d468:	fcmp	s1, s2
  40d46c:	b.le	40d584 <__fxstatat@plt+0xab34>
  40d470:	ldr	s1, [x8]
  40d474:	fcmp	s1, #0.0
  40d478:	b.lt	40d584 <__fxstatat@plt+0xab34>  // b.tstop
  40d47c:	mov	w9, #0xcccd                	// #52429
  40d480:	movk	w9, #0x3dcc, lsl #16
  40d484:	fmov	s2, w9
  40d488:	fadd	s1, s1, s2
  40d48c:	fcmp	s1, s0
  40d490:	b.pl	40d584 <__fxstatat@plt+0xab34>  // b.nfrst
  40d494:	ldr	s0, [x8, #4]
  40d498:	fmov	s2, #1.000000000000000000e+00
  40d49c:	fcmp	s0, s2
  40d4a0:	b.hi	40d584 <__fxstatat@plt+0xab34>  // b.pmore
  40d4a4:	fcmp	s1, s0
  40d4a8:	b.pl	40d584 <__fxstatat@plt+0xab34>  // b.nfrst
  40d4ac:	ldrb	w9, [x8, #16]
  40d4b0:	cbnz	w9, 40d4d4 <__fxstatat@plt+0xaa84>
  40d4b4:	ldr	s0, [x8, #8]
  40d4b8:	ucvtf	s1, x21
  40d4bc:	mov	w8, #0x5f800000            	// #1602224128
  40d4c0:	fdiv	s0, s1, s0
  40d4c4:	fmov	s1, w8
  40d4c8:	fcmp	s0, s1
  40d4cc:	b.ge	40d584 <__fxstatat@plt+0xab34>  // b.tcont
  40d4d0:	fcvtzu	x21, s0
  40d4d4:	cmp	x21, #0xa
  40d4d8:	mov	w8, #0xa                   	// #10
  40d4dc:	csel	x8, x21, x8, hi  // hi = pmore
  40d4e0:	orr	x21, x8, #0x1
  40d4e4:	cmn	x21, #0x1
  40d4e8:	b.eq	40d584 <__fxstatat@plt+0xab34>  // b.none
  40d4ec:	cmp	x21, #0xa
  40d4f0:	b.cc	40d528 <__fxstatat@plt+0xaad8>  // b.lo, b.ul, b.last
  40d4f4:	mov	w9, #0xc                   	// #12
  40d4f8:	mov	w10, #0x9                   	// #9
  40d4fc:	mov	w8, #0x3                   	// #3
  40d500:	udiv	x11, x21, x8
  40d504:	msub	x11, x11, x8, x21
  40d508:	cbz	x11, 40d52c <__fxstatat@plt+0xaadc>
  40d50c:	add	x10, x10, x9
  40d510:	add	x10, x10, #0x4
  40d514:	add	x8, x8, #0x2
  40d518:	cmp	x10, x21
  40d51c:	add	x9, x9, #0x8
  40d520:	b.cc	40d500 <__fxstatat@plt+0xaab0>  // b.lo, b.ul, b.last
  40d524:	b	40d52c <__fxstatat@plt+0xaadc>
  40d528:	mov	w8, #0x3                   	// #3
  40d52c:	udiv	x9, x21, x8
  40d530:	msub	x8, x9, x8, x21
  40d534:	cbnz	x8, 40d548 <__fxstatat@plt+0xaaf8>
  40d538:	add	x21, x21, #0x2
  40d53c:	cmn	x21, #0x1
  40d540:	b.ne	40d4ec <__fxstatat@plt+0xaa9c>  // b.any
  40d544:	b	40d584 <__fxstatat@plt+0xab34>
  40d548:	lsr	x8, x21, #60
  40d54c:	cbnz	x8, 40d584 <__fxstatat@plt+0xab34>
  40d550:	str	x21, [x20, #16]
  40d554:	cbz	x21, 40d584 <__fxstatat@plt+0xab34>
  40d558:	mov	w1, #0x10                  	// #16
  40d55c:	mov	x0, x21
  40d560:	bl	413b7c <__fxstatat@plt+0x1112c>
  40d564:	str	x0, [x20]
  40d568:	cbz	x0, 40d584 <__fxstatat@plt+0xab34>
  40d56c:	add	x8, x0, x21, lsl #4
  40d570:	stp	xzr, xzr, [x20, #24]
  40d574:	stp	x23, x24, [x20, #48]
  40d578:	str	x8, [x20, #8]
  40d57c:	stp	x19, xzr, [x20, #64]
  40d580:	b	40d590 <__fxstatat@plt+0xab40>
  40d584:	mov	x0, x20
  40d588:	bl	402840 <free@plt>
  40d58c:	mov	x20, xzr
  40d590:	mov	x0, x20
  40d594:	ldp	x20, x19, [sp, #48]
  40d598:	ldp	x22, x21, [sp, #32]
  40d59c:	ldp	x24, x23, [sp, #16]
  40d5a0:	ldp	x29, x30, [sp], #64
  40d5a4:	ret
  40d5a8:	ror	x8, x0, #3
  40d5ac:	udiv	x9, x8, x1
  40d5b0:	msub	x0, x9, x1, x8
  40d5b4:	ret
  40d5b8:	cmp	x0, x1
  40d5bc:	cset	w0, eq  // eq = none
  40d5c0:	ret
  40d5c4:	stp	x29, x30, [sp, #-48]!
  40d5c8:	str	x21, [sp, #16]
  40d5cc:	stp	x20, x19, [sp, #32]
  40d5d0:	ldp	x20, x8, [x0]
  40d5d4:	mov	x19, x0
  40d5d8:	mov	x29, sp
  40d5dc:	b	40d5ec <__fxstatat@plt+0xab9c>
  40d5e0:	stp	xzr, xzr, [x20]
  40d5e4:	ldr	x8, [x19, #8]
  40d5e8:	add	x20, x20, #0x10
  40d5ec:	cmp	x20, x8
  40d5f0:	b.cs	40d658 <__fxstatat@plt+0xac08>  // b.hs, b.nlast
  40d5f4:	ldr	x9, [x20]
  40d5f8:	cbz	x9, 40d5e8 <__fxstatat@plt+0xab98>
  40d5fc:	ldr	x8, [x19, #64]
  40d600:	ldr	x21, [x20, #8]
  40d604:	cmp	x8, #0x0
  40d608:	cset	w9, ne  // ne = any
  40d60c:	cbnz	x21, 40d644 <__fxstatat@plt+0xabf4>
  40d610:	cbz	w9, 40d5e0 <__fxstatat@plt+0xab90>
  40d614:	ldr	x0, [x20]
  40d618:	blr	x8
  40d61c:	b	40d5e0 <__fxstatat@plt+0xab90>
  40d620:	str	xzr, [x21]
  40d624:	ldr	x9, [x19, #72]
  40d628:	ldr	x10, [x21, #8]
  40d62c:	cmp	x8, #0x0
  40d630:	str	x9, [x21, #8]
  40d634:	str	x21, [x19, #72]
  40d638:	cset	w9, ne  // ne = any
  40d63c:	mov	x21, x10
  40d640:	cbz	x10, 40d610 <__fxstatat@plt+0xabc0>
  40d644:	tbz	w9, #0, 40d620 <__fxstatat@plt+0xabd0>
  40d648:	ldr	x0, [x21]
  40d64c:	blr	x8
  40d650:	ldr	x8, [x19, #64]
  40d654:	b	40d620 <__fxstatat@plt+0xabd0>
  40d658:	stp	xzr, xzr, [x19, #24]
  40d65c:	ldp	x20, x19, [sp, #32]
  40d660:	ldr	x21, [sp, #16]
  40d664:	ldp	x29, x30, [sp], #48
  40d668:	ret
  40d66c:	stp	x29, x30, [sp, #-48]!
  40d670:	stp	x20, x19, [sp, #32]
  40d674:	ldr	x8, [x0, #64]
  40d678:	mov	x19, x0
  40d67c:	str	x21, [sp, #16]
  40d680:	mov	x29, sp
  40d684:	cbz	x8, 40d6dc <__fxstatat@plt+0xac8c>
  40d688:	ldr	x8, [x19, #32]
  40d68c:	cbz	x8, 40d6dc <__fxstatat@plt+0xac8c>
  40d690:	ldp	x20, x8, [x19]
  40d694:	b	40d6a0 <__fxstatat@plt+0xac50>
  40d698:	ldr	x8, [x19, #8]
  40d69c:	add	x20, x20, #0x10
  40d6a0:	cmp	x20, x8
  40d6a4:	b.cs	40d6dc <__fxstatat@plt+0xac8c>  // b.hs, b.nlast
  40d6a8:	ldr	x0, [x20]
  40d6ac:	cbz	x0, 40d69c <__fxstatat@plt+0xac4c>
  40d6b0:	cbz	x20, 40d69c <__fxstatat@plt+0xac4c>
  40d6b4:	ldr	x8, [x19, #64]
  40d6b8:	blr	x8
  40d6bc:	ldr	x21, [x20, #8]
  40d6c0:	cbz	x21, 40d698 <__fxstatat@plt+0xac48>
  40d6c4:	ldr	x0, [x21]
  40d6c8:	ldr	x8, [x19, #64]
  40d6cc:	blr	x8
  40d6d0:	ldr	x21, [x21, #8]
  40d6d4:	cbnz	x21, 40d6c4 <__fxstatat@plt+0xac74>
  40d6d8:	b	40d698 <__fxstatat@plt+0xac48>
  40d6dc:	ldp	x20, x8, [x19]
  40d6e0:	b	40d6e8 <__fxstatat@plt+0xac98>
  40d6e4:	add	x20, x20, #0x10
  40d6e8:	cmp	x20, x8
  40d6ec:	b.cs	40d710 <__fxstatat@plt+0xacc0>  // b.hs, b.nlast
  40d6f0:	ldr	x0, [x20, #8]
  40d6f4:	cbz	x0, 40d6e4 <__fxstatat@plt+0xac94>
  40d6f8:	ldr	x21, [x0, #8]
  40d6fc:	bl	402840 <free@plt>
  40d700:	mov	x0, x21
  40d704:	cbnz	x21, 40d6f8 <__fxstatat@plt+0xaca8>
  40d708:	ldr	x8, [x19, #8]
  40d70c:	b	40d6e4 <__fxstatat@plt+0xac94>
  40d710:	ldr	x0, [x19, #72]
  40d714:	cbz	x0, 40d728 <__fxstatat@plt+0xacd8>
  40d718:	ldr	x20, [x0, #8]
  40d71c:	bl	402840 <free@plt>
  40d720:	mov	x0, x20
  40d724:	cbnz	x20, 40d718 <__fxstatat@plt+0xacc8>
  40d728:	ldr	x0, [x19]
  40d72c:	bl	402840 <free@plt>
  40d730:	mov	x0, x19
  40d734:	ldp	x20, x19, [sp, #32]
  40d738:	ldr	x21, [sp, #16]
  40d73c:	ldp	x29, x30, [sp], #48
  40d740:	b	402840 <free@plt>
  40d744:	sub	sp, sp, #0x90
  40d748:	stp	x29, x30, [sp, #80]
  40d74c:	stp	x24, x23, [sp, #96]
  40d750:	stp	x22, x21, [sp, #112]
  40d754:	stp	x20, x19, [sp, #128]
  40d758:	ldr	x8, [x0, #40]
  40d75c:	mov	x19, x0
  40d760:	add	x29, sp, #0x50
  40d764:	ldrb	w9, [x8, #16]
  40d768:	cbnz	w9, 40d78c <__fxstatat@plt+0xad3c>
  40d76c:	ldr	s0, [x8, #8]
  40d770:	ucvtf	s1, x1
  40d774:	mov	w8, #0x5f800000            	// #1602224128
  40d778:	fdiv	s0, s1, s0
  40d77c:	fmov	s1, w8
  40d780:	fcmp	s0, s1
  40d784:	b.ge	40d810 <__fxstatat@plt+0xadc0>  // b.tcont
  40d788:	fcvtzu	x1, s0
  40d78c:	cmp	x1, #0xa
  40d790:	mov	w8, #0xa                   	// #10
  40d794:	csel	x8, x1, x8, hi  // hi = pmore
  40d798:	orr	x20, x8, #0x1
  40d79c:	cmn	x20, #0x1
  40d7a0:	b.eq	40d810 <__fxstatat@plt+0xadc0>  // b.none
  40d7a4:	cmp	x20, #0xa
  40d7a8:	b.cc	40d7e0 <__fxstatat@plt+0xad90>  // b.lo, b.ul, b.last
  40d7ac:	mov	w9, #0xc                   	// #12
  40d7b0:	mov	w10, #0x9                   	// #9
  40d7b4:	mov	w8, #0x3                   	// #3
  40d7b8:	udiv	x11, x20, x8
  40d7bc:	msub	x11, x11, x8, x20
  40d7c0:	cbz	x11, 40d7e4 <__fxstatat@plt+0xad94>
  40d7c4:	add	x10, x10, x9
  40d7c8:	add	x10, x10, #0x4
  40d7cc:	add	x8, x8, #0x2
  40d7d0:	cmp	x10, x20
  40d7d4:	add	x9, x9, #0x8
  40d7d8:	b.cc	40d7b8 <__fxstatat@plt+0xad68>  // b.lo, b.ul, b.last
  40d7dc:	b	40d7e4 <__fxstatat@plt+0xad94>
  40d7e0:	mov	w8, #0x3                   	// #3
  40d7e4:	udiv	x9, x20, x8
  40d7e8:	msub	x8, x9, x8, x20
  40d7ec:	cbnz	x8, 40d800 <__fxstatat@plt+0xadb0>
  40d7f0:	add	x20, x20, #0x2
  40d7f4:	cmn	x20, #0x1
  40d7f8:	b.ne	40d7a4 <__fxstatat@plt+0xad54>  // b.any
  40d7fc:	b	40d810 <__fxstatat@plt+0xadc0>
  40d800:	sub	x8, x20, #0x1
  40d804:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  40d808:	cmp	x8, x9
  40d80c:	b.ls	40d82c <__fxstatat@plt+0xaddc>  // b.plast
  40d810:	mov	w0, wzr
  40d814:	ldp	x20, x19, [sp, #128]
  40d818:	ldp	x22, x21, [sp, #112]
  40d81c:	ldp	x24, x23, [sp, #96]
  40d820:	ldp	x29, x30, [sp, #80]
  40d824:	add	sp, sp, #0x90
  40d828:	ret
  40d82c:	ldr	x8, [x19, #16]
  40d830:	cmp	x20, x8
  40d834:	b.ne	40d840 <__fxstatat@plt+0xadf0>  // b.any
  40d838:	mov	w0, #0x1                   	// #1
  40d83c:	b	40d814 <__fxstatat@plt+0xadc4>
  40d840:	mov	w1, #0x10                  	// #16
  40d844:	mov	x0, x20
  40d848:	bl	413b7c <__fxstatat@plt+0x1112c>
  40d84c:	str	x0, [sp]
  40d850:	cbz	x0, 40d814 <__fxstatat@plt+0xadc4>
  40d854:	add	x8, x0, x20, lsl #4
  40d858:	stp	x8, x20, [sp, #8]
  40d85c:	stp	xzr, xzr, [sp, #24]
  40d860:	ldur	q0, [x19, #40]
  40d864:	mov	x21, x19
  40d868:	mov	x0, sp
  40d86c:	mov	x1, x19
  40d870:	stur	q0, [sp, #40]
  40d874:	ldur	q0, [x19, #56]
  40d878:	mov	w2, wzr
  40d87c:	stur	q0, [sp, #56]
  40d880:	ldr	x8, [x21, #72]!
  40d884:	str	x8, [sp, #72]
  40d888:	bl	40d978 <__fxstatat@plt+0xaf28>
  40d88c:	tbz	w0, #0, 40d8b8 <__fxstatat@plt+0xae68>
  40d890:	ldr	x0, [x19]
  40d894:	bl	402840 <free@plt>
  40d898:	ldr	q0, [sp]
  40d89c:	mov	w0, #0x1                   	// #1
  40d8a0:	str	q0, [x19]
  40d8a4:	ldr	q0, [sp, #16]
  40d8a8:	str	q0, [x19, #16]
  40d8ac:	ldr	x8, [sp, #72]
  40d8b0:	str	x8, [x19, #72]
  40d8b4:	b	40d814 <__fxstatat@plt+0xadc4>
  40d8b8:	ldr	x8, [sp, #72]
  40d8bc:	str	x8, [x21]
  40d8c0:	ldp	x22, x23, [sp]
  40d8c4:	b	40d8d0 <__fxstatat@plt+0xae80>
  40d8c8:	str	xzr, [x22, #8]
  40d8cc:	add	x22, x22, #0x10
  40d8d0:	cmp	x22, x23
  40d8d4:	b.cs	40d954 <__fxstatat@plt+0xaf04>  // b.hs, b.nlast
  40d8d8:	ldr	x8, [x22]
  40d8dc:	cbz	x8, 40d8cc <__fxstatat@plt+0xae7c>
  40d8e0:	ldr	x24, [x22, #8]
  40d8e4:	cbz	x24, 40d8c8 <__fxstatat@plt+0xae78>
  40d8e8:	ldr	x1, [x19, #16]
  40d8ec:	b	40d91c <__fxstatat@plt+0xaecc>
  40d8f0:	str	x20, [x9]
  40d8f4:	ldr	x9, [x19, #24]
  40d8f8:	add	x9, x9, #0x1
  40d8fc:	str	x9, [x19, #24]
  40d900:	mov	x9, x21
  40d904:	str	xzr, [x24]
  40d908:	ldr	x10, [x9]
  40d90c:	str	x10, [x24, #8]
  40d910:	str	x24, [x9]
  40d914:	mov	x24, x8
  40d918:	cbz	x8, 40d8c8 <__fxstatat@plt+0xae78>
  40d91c:	ldr	x20, [x24]
  40d920:	ldr	x8, [x19, #48]
  40d924:	mov	x0, x20
  40d928:	blr	x8
  40d92c:	ldr	x1, [x19, #16]
  40d930:	cmp	x0, x1
  40d934:	b.cs	40d974 <__fxstatat@plt+0xaf24>  // b.hs, b.nlast
  40d938:	ldr	x8, [x19]
  40d93c:	add	x9, x8, x0, lsl #4
  40d940:	ldr	x10, [x9]
  40d944:	ldr	x8, [x24, #8]
  40d948:	cbz	x10, 40d8f0 <__fxstatat@plt+0xaea0>
  40d94c:	add	x9, x9, #0x8
  40d950:	b	40d908 <__fxstatat@plt+0xaeb8>
  40d954:	mov	x1, sp
  40d958:	mov	x0, x19
  40d95c:	mov	w2, wzr
  40d960:	bl	40d978 <__fxstatat@plt+0xaf28>
  40d964:	tbz	w0, #0, 40d974 <__fxstatat@plt+0xaf24>
  40d968:	ldr	x0, [sp]
  40d96c:	bl	402840 <free@plt>
  40d970:	b	40d810 <__fxstatat@plt+0xadc0>
  40d974:	bl	402770 <abort@plt>
  40d978:	stp	x29, x30, [sp, #-80]!
  40d97c:	stp	x26, x25, [sp, #16]
  40d980:	stp	x24, x23, [sp, #32]
  40d984:	stp	x22, x21, [sp, #48]
  40d988:	stp	x20, x19, [sp, #64]
  40d98c:	ldp	x24, x8, [x1]
  40d990:	mov	x29, sp
  40d994:	cmp	x24, x8
  40d998:	b.cs	40dad0 <__fxstatat@plt+0xb080>  // b.hs, b.nlast
  40d99c:	mov	w19, w2
  40d9a0:	mov	x20, x1
  40d9a4:	mov	x21, x0
  40d9a8:	add	x25, x0, #0x48
  40d9ac:	b	40d9e0 <__fxstatat@plt+0xaf90>
  40d9b0:	str	x22, [x8]
  40d9b4:	ldr	x8, [x21, #24]
  40d9b8:	add	x8, x8, #0x1
  40d9bc:	str	x8, [x21, #24]
  40d9c0:	str	xzr, [x24]
  40d9c4:	ldr	x8, [x20, #24]
  40d9c8:	sub	x8, x8, #0x1
  40d9cc:	str	x8, [x20, #24]
  40d9d0:	ldr	x8, [x20, #8]
  40d9d4:	add	x24, x24, #0x10
  40d9d8:	cmp	x24, x8
  40d9dc:	b.cs	40dad0 <__fxstatat@plt+0xb080>  // b.hs, b.nlast
  40d9e0:	ldr	x22, [x24]
  40d9e4:	cbz	x22, 40d9d0 <__fxstatat@plt+0xaf80>
  40d9e8:	ldr	x23, [x24, #8]
  40d9ec:	cbz	x23, 40da60 <__fxstatat@plt+0xb010>
  40d9f0:	ldr	x1, [x21, #16]
  40d9f4:	b	40da24 <__fxstatat@plt+0xafd4>
  40d9f8:	str	x22, [x9]
  40d9fc:	ldr	x9, [x21, #24]
  40da00:	add	x9, x9, #0x1
  40da04:	str	x9, [x21, #24]
  40da08:	mov	x9, x25
  40da0c:	str	xzr, [x23]
  40da10:	ldr	x10, [x9]
  40da14:	str	x10, [x23, #8]
  40da18:	str	x23, [x9]
  40da1c:	mov	x23, x8
  40da20:	cbz	x8, 40da5c <__fxstatat@plt+0xb00c>
  40da24:	ldr	x22, [x23]
  40da28:	ldr	x8, [x21, #48]
  40da2c:	mov	x0, x22
  40da30:	blr	x8
  40da34:	ldr	x1, [x21, #16]
  40da38:	cmp	x0, x1
  40da3c:	b.cs	40daec <__fxstatat@plt+0xb09c>  // b.hs, b.nlast
  40da40:	ldr	x8, [x21]
  40da44:	add	x9, x8, x0, lsl #4
  40da48:	ldr	x10, [x9]
  40da4c:	ldr	x8, [x23, #8]
  40da50:	cbz	x10, 40d9f8 <__fxstatat@plt+0xafa8>
  40da54:	add	x9, x9, #0x8
  40da58:	b	40da10 <__fxstatat@plt+0xafc0>
  40da5c:	ldr	x22, [x24]
  40da60:	str	xzr, [x24, #8]
  40da64:	tbnz	w19, #0, 40d9d0 <__fxstatat@plt+0xaf80>
  40da68:	ldr	x8, [x21, #48]
  40da6c:	ldr	x1, [x21, #16]
  40da70:	mov	x0, x22
  40da74:	blr	x8
  40da78:	ldr	x8, [x21, #16]
  40da7c:	cmp	x0, x8
  40da80:	b.cs	40daec <__fxstatat@plt+0xb09c>  // b.hs, b.nlast
  40da84:	ldr	x26, [x21]
  40da88:	mov	x23, x0
  40da8c:	add	x8, x26, x0, lsl #4
  40da90:	ldr	x9, [x8]
  40da94:	cbz	x9, 40d9b0 <__fxstatat@plt+0xaf60>
  40da98:	ldr	x0, [x25]
  40da9c:	cbz	x0, 40daac <__fxstatat@plt+0xb05c>
  40daa0:	ldr	x8, [x0, #8]
  40daa4:	str	x8, [x25]
  40daa8:	b	40dab8 <__fxstatat@plt+0xb068>
  40daac:	mov	w0, #0x10                  	// #16
  40dab0:	bl	4025f0 <malloc@plt>
  40dab4:	cbz	x0, 40dad4 <__fxstatat@plt+0xb084>
  40dab8:	str	x22, [x0]
  40dabc:	add	x8, x26, x23, lsl #4
  40dac0:	ldr	x9, [x8, #8]
  40dac4:	str	x9, [x0, #8]
  40dac8:	str	x0, [x8, #8]
  40dacc:	b	40d9c0 <__fxstatat@plt+0xaf70>
  40dad0:	mov	w0, #0x1                   	// #1
  40dad4:	ldp	x20, x19, [sp, #64]
  40dad8:	ldp	x22, x21, [sp, #48]
  40dadc:	ldp	x24, x23, [sp, #32]
  40dae0:	ldp	x26, x25, [sp, #16]
  40dae4:	ldp	x29, x30, [sp], #80
  40dae8:	ret
  40daec:	bl	402770 <abort@plt>
  40daf0:	stp	x29, x30, [sp, #-80]!
  40daf4:	str	x25, [sp, #16]
  40daf8:	stp	x24, x23, [sp, #32]
  40dafc:	stp	x22, x21, [sp, #48]
  40db00:	stp	x20, x19, [sp, #64]
  40db04:	mov	x29, sp
  40db08:	cbz	x1, 40ddd4 <__fxstatat@plt+0xb384>
  40db0c:	mov	x20, x1
  40db10:	ldr	x8, [x0, #48]
  40db14:	ldr	x1, [x0, #16]
  40db18:	mov	x19, x0
  40db1c:	mov	x0, x20
  40db20:	mov	x21, x2
  40db24:	blr	x8
  40db28:	ldr	x8, [x19, #16]
  40db2c:	cmp	x0, x8
  40db30:	b.cs	40ddd4 <__fxstatat@plt+0xb384>  // b.hs, b.nlast
  40db34:	ldr	x25, [x19]
  40db38:	mov	x22, x0
  40db3c:	add	x23, x25, x0, lsl #4
  40db40:	ldr	x1, [x23]
  40db44:	cbz	x1, 40db6c <__fxstatat@plt+0xb11c>
  40db48:	cmp	x1, x20
  40db4c:	b.eq	40dce0 <__fxstatat@plt+0xb290>  // b.none
  40db50:	ldr	x8, [x19, #56]
  40db54:	mov	x0, x20
  40db58:	blr	x8
  40db5c:	mov	x24, x23
  40db60:	tbz	w0, #0, 40dcf4 <__fxstatat@plt+0xb2a4>
  40db64:	ldr	x8, [x24]
  40db68:	cbnz	x8, 40dce4 <__fxstatat@plt+0xb294>
  40db6c:	ldr	x8, [x19, #40]
  40db70:	ldp	x10, x9, [x19, #16]
  40db74:	ldr	s1, [x8, #8]
  40db78:	ucvtf	s0, x10
  40db7c:	ucvtf	s2, x9
  40db80:	fmul	s3, s1, s0
  40db84:	fcmp	s3, s2
  40db88:	b.pl	40dcc4 <__fxstatat@plt+0xb274>  // b.nfrst
  40db8c:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40db90:	add	x9, x9, #0x720
  40db94:	cmp	x8, x9
  40db98:	b.eq	40dc28 <__fxstatat@plt+0xb1d8>  // b.none
  40db9c:	mov	w10, #0xcccd                	// #52429
  40dba0:	movk	w10, #0x3dcc, lsl #16
  40dba4:	fmov	s3, w10
  40dba8:	fcmp	s1, s3
  40dbac:	b.le	40dc18 <__fxstatat@plt+0xb1c8>
  40dbb0:	mov	w10, #0x6666                	// #26214
  40dbb4:	movk	w10, #0x3f66, lsl #16
  40dbb8:	fmov	s3, w10
  40dbbc:	fcmp	s1, s3
  40dbc0:	b.pl	40dc18 <__fxstatat@plt+0xb1c8>  // b.nfrst
  40dbc4:	ldr	s3, [x8, #12]
  40dbc8:	mov	w10, #0xcccd                	// #52429
  40dbcc:	movk	w10, #0x3f8c, lsl #16
  40dbd0:	fmov	s4, w10
  40dbd4:	fcmp	s3, s4
  40dbd8:	b.le	40dc18 <__fxstatat@plt+0xb1c8>
  40dbdc:	ldr	s3, [x8]
  40dbe0:	fcmp	s3, #0.0
  40dbe4:	b.lt	40dc18 <__fxstatat@plt+0xb1c8>  // b.tstop
  40dbe8:	mov	w10, #0xcccd                	// #52429
  40dbec:	movk	w10, #0x3dcc, lsl #16
  40dbf0:	fmov	s4, w10
  40dbf4:	fadd	s3, s3, s4
  40dbf8:	fcmp	s3, s1
  40dbfc:	b.pl	40dc18 <__fxstatat@plt+0xb1c8>  // b.nfrst
  40dc00:	ldr	s4, [x8, #4]
  40dc04:	fmov	s5, #1.000000000000000000e+00
  40dc08:	fcmp	s4, s5
  40dc0c:	b.hi	40dc18 <__fxstatat@plt+0xb1c8>  // b.pmore
  40dc10:	fcmp	s3, s4
  40dc14:	b.mi	40dc2c <__fxstatat@plt+0xb1dc>  // b.first
  40dc18:	mov	w8, #0xcccd                	// #52429
  40dc1c:	movk	w8, #0x3f4c, lsl #16
  40dc20:	fmov	s1, w8
  40dc24:	str	x9, [x19, #40]
  40dc28:	mov	x8, x9
  40dc2c:	fmul	s3, s1, s0
  40dc30:	fcmp	s3, s2
  40dc34:	b.pl	40dcc4 <__fxstatat@plt+0xb274>  // b.nfrst
  40dc38:	ldr	s2, [x8, #12]
  40dc3c:	ldrb	w8, [x8, #16]
  40dc40:	fmul	s0, s2, s0
  40dc44:	cmp	w8, #0x0
  40dc48:	fmul	s1, s1, s0
  40dc4c:	mov	w8, #0x5f800000            	// #1602224128
  40dc50:	fcsel	s0, s1, s0, eq  // eq = none
  40dc54:	fmov	s1, w8
  40dc58:	fcmp	s0, s1
  40dc5c:	b.ge	40dd70 <__fxstatat@plt+0xb320>  // b.tcont
  40dc60:	fcvtzu	x1, s0
  40dc64:	mov	x0, x19
  40dc68:	bl	40d744 <__fxstatat@plt+0xacf4>
  40dc6c:	tbz	w0, #0, 40dd70 <__fxstatat@plt+0xb320>
  40dc70:	ldr	x8, [x19, #48]
  40dc74:	ldr	x1, [x19, #16]
  40dc78:	mov	x0, x20
  40dc7c:	blr	x8
  40dc80:	ldr	x8, [x19, #16]
  40dc84:	cmp	x0, x8
  40dc88:	b.cs	40ddd4 <__fxstatat@plt+0xb384>  // b.hs, b.nlast
  40dc8c:	ldr	x22, [x19]
  40dc90:	mov	x21, x0
  40dc94:	add	x23, x22, x0, lsl #4
  40dc98:	ldr	x1, [x23]
  40dc9c:	cbz	x1, 40dcc4 <__fxstatat@plt+0xb274>
  40dca0:	cmp	x1, x20
  40dca4:	mov	x8, x20
  40dca8:	b.eq	40dcc0 <__fxstatat@plt+0xb270>  // b.none
  40dcac:	ldr	x8, [x19, #56]
  40dcb0:	mov	x0, x20
  40dcb4:	blr	x8
  40dcb8:	tbz	w0, #0, 40dd98 <__fxstatat@plt+0xb348>
  40dcbc:	ldr	x8, [x23]
  40dcc0:	cbnz	x8, 40ddd4 <__fxstatat@plt+0xb384>
  40dcc4:	ldr	x8, [x23]
  40dcc8:	cbz	x8, 40dd24 <__fxstatat@plt+0xb2d4>
  40dccc:	ldr	x0, [x19, #72]
  40dcd0:	cbz	x0, 40dd40 <__fxstatat@plt+0xb2f0>
  40dcd4:	ldr	x8, [x0, #8]
  40dcd8:	str	x8, [x19, #72]
  40dcdc:	b	40dd4c <__fxstatat@plt+0xb2fc>
  40dce0:	mov	x8, x20
  40dce4:	mov	w0, wzr
  40dce8:	cbz	x21, 40dd74 <__fxstatat@plt+0xb324>
  40dcec:	str	x8, [x21]
  40dcf0:	b	40dd74 <__fxstatat@plt+0xb324>
  40dcf4:	add	x24, x25, x22, lsl #4
  40dcf8:	ldr	x8, [x24, #8]!
  40dcfc:	cbz	x8, 40db6c <__fxstatat@plt+0xb11c>
  40dd00:	ldr	x1, [x8]
  40dd04:	cmp	x1, x20
  40dd08:	b.eq	40dd8c <__fxstatat@plt+0xb33c>  // b.none
  40dd0c:	ldr	x8, [x19, #56]
  40dd10:	mov	x0, x20
  40dd14:	blr	x8
  40dd18:	ldr	x24, [x24]
  40dd1c:	tbz	w0, #0, 40dcf8 <__fxstatat@plt+0xb2a8>
  40dd20:	b	40db64 <__fxstatat@plt+0xb114>
  40dd24:	str	x20, [x23]
  40dd28:	ldur	q0, [x19, #24]
  40dd2c:	mov	w0, #0x1                   	// #1
  40dd30:	dup	v1.2d, x0
  40dd34:	add	v0.2d, v0.2d, v1.2d
  40dd38:	stur	q0, [x19, #24]
  40dd3c:	b	40dd74 <__fxstatat@plt+0xb324>
  40dd40:	mov	w0, #0x10                  	// #16
  40dd44:	bl	4025f0 <malloc@plt>
  40dd48:	cbz	x0, 40dd70 <__fxstatat@plt+0xb320>
  40dd4c:	str	x20, [x0]
  40dd50:	ldr	x8, [x23, #8]
  40dd54:	str	x8, [x0, #8]
  40dd58:	str	x0, [x23, #8]
  40dd5c:	ldr	x8, [x19, #32]
  40dd60:	mov	w0, #0x1                   	// #1
  40dd64:	add	x8, x8, #0x1
  40dd68:	str	x8, [x19, #32]
  40dd6c:	b	40dd74 <__fxstatat@plt+0xb324>
  40dd70:	mov	w0, #0xffffffff            	// #-1
  40dd74:	ldp	x20, x19, [sp, #64]
  40dd78:	ldp	x22, x21, [sp, #48]
  40dd7c:	ldp	x24, x23, [sp, #32]
  40dd80:	ldr	x25, [sp, #16]
  40dd84:	ldp	x29, x30, [sp], #80
  40dd88:	ret
  40dd8c:	mov	x8, x20
  40dd90:	cbnz	x8, 40dce4 <__fxstatat@plt+0xb294>
  40dd94:	b	40db6c <__fxstatat@plt+0xb11c>
  40dd98:	add	x21, x22, x21, lsl #4
  40dd9c:	ldr	x8, [x21, #8]!
  40dda0:	cbz	x8, 40dcc4 <__fxstatat@plt+0xb274>
  40dda4:	ldr	x1, [x8]
  40dda8:	cmp	x1, x20
  40ddac:	b.eq	40ddcc <__fxstatat@plt+0xb37c>  // b.none
  40ddb0:	ldr	x8, [x19, #56]
  40ddb4:	mov	x0, x20
  40ddb8:	blr	x8
  40ddbc:	ldr	x21, [x21]
  40ddc0:	tbz	w0, #0, 40dd9c <__fxstatat@plt+0xb34c>
  40ddc4:	ldr	x8, [x21]
  40ddc8:	b	40dcc0 <__fxstatat@plt+0xb270>
  40ddcc:	mov	x8, x20
  40ddd0:	b	40dcc0 <__fxstatat@plt+0xb270>
  40ddd4:	bl	402770 <abort@plt>
  40ddd8:	stp	x29, x30, [sp, #-32]!
  40dddc:	mov	x29, sp
  40dde0:	add	x2, x29, #0x18
  40dde4:	str	x19, [sp, #16]
  40dde8:	mov	x19, x1
  40ddec:	bl	40daf0 <__fxstatat@plt+0xb0a0>
  40ddf0:	ldr	x8, [x29, #24]
  40ddf4:	cmp	w0, #0x0
  40ddf8:	csel	x8, x8, x19, eq  // eq = none
  40ddfc:	ldr	x19, [sp, #16]
  40de00:	cmn	w0, #0x1
  40de04:	csel	x0, xzr, x8, eq  // eq = none
  40de08:	ldp	x29, x30, [sp], #32
  40de0c:	ret
  40de10:	stp	x29, x30, [sp, #-64]!
  40de14:	stp	x22, x21, [sp, #32]
  40de18:	stp	x20, x19, [sp, #48]
  40de1c:	ldr	x8, [x0, #16]
  40de20:	ldr	x9, [x0, #48]
  40de24:	mov	x20, x0
  40de28:	mov	x19, x1
  40de2c:	mov	x0, x1
  40de30:	mov	x1, x8
  40de34:	str	x23, [sp, #16]
  40de38:	mov	x29, sp
  40de3c:	blr	x9
  40de40:	ldr	x8, [x20, #16]
  40de44:	cmp	x0, x8
  40de48:	b.cs	40e044 <__fxstatat@plt+0xb5f4>  // b.hs, b.nlast
  40de4c:	ldr	x23, [x20]
  40de50:	mov	x21, x0
  40de54:	add	x22, x23, x0, lsl #4
  40de58:	ldr	x1, [x22]
  40de5c:	cbz	x1, 40decc <__fxstatat@plt+0xb47c>
  40de60:	cmp	x1, x19
  40de64:	b.eq	40de7c <__fxstatat@plt+0xb42c>  // b.none
  40de68:	ldr	x8, [x20, #56]
  40de6c:	mov	x0, x19
  40de70:	blr	x8
  40de74:	tbz	w0, #0, 40de94 <__fxstatat@plt+0xb444>
  40de78:	ldr	x19, [x22]
  40de7c:	add	x8, x23, x21, lsl #4
  40de80:	ldr	x8, [x8, #8]
  40de84:	cbz	x8, 40ded4 <__fxstatat@plt+0xb484>
  40de88:	ldr	q0, [x8]
  40de8c:	str	q0, [x22]
  40de90:	b	40def4 <__fxstatat@plt+0xb4a4>
  40de94:	add	x21, x23, x21, lsl #4
  40de98:	ldr	x9, [x21, #8]!
  40de9c:	cbz	x9, 40decc <__fxstatat@plt+0xb47c>
  40dea0:	ldr	x1, [x9]
  40dea4:	cmp	x1, x19
  40dea8:	b.eq	40dee0 <__fxstatat@plt+0xb490>  // b.none
  40deac:	ldr	x8, [x20, #56]
  40deb0:	mov	x0, x19
  40deb4:	blr	x8
  40deb8:	ldr	x8, [x21]
  40debc:	tbnz	w0, #0, 40dee8 <__fxstatat@plt+0xb498>
  40dec0:	ldr	x9, [x8, #8]!
  40dec4:	mov	x21, x8
  40dec8:	cbnz	x9, 40dea0 <__fxstatat@plt+0xb450>
  40decc:	mov	x19, xzr
  40ded0:	b	40e02c <__fxstatat@plt+0xb5dc>
  40ded4:	str	xzr, [x22]
  40ded8:	cbnz	x19, 40df08 <__fxstatat@plt+0xb4b8>
  40dedc:	b	40e02c <__fxstatat@plt+0xb5dc>
  40dee0:	mov	x8, x9
  40dee4:	b	40deec <__fxstatat@plt+0xb49c>
  40dee8:	ldr	x19, [x8]
  40deec:	ldr	x9, [x8, #8]
  40def0:	str	x9, [x21]
  40def4:	str	xzr, [x8]
  40def8:	ldr	x9, [x20, #72]
  40defc:	str	x9, [x8, #8]
  40df00:	str	x8, [x20, #72]
  40df04:	cbz	x19, 40e02c <__fxstatat@plt+0xb5dc>
  40df08:	ldr	x8, [x20, #32]
  40df0c:	sub	x8, x8, #0x1
  40df10:	str	x8, [x20, #32]
  40df14:	ldr	x8, [x22]
  40df18:	cbnz	x8, 40e02c <__fxstatat@plt+0xb5dc>
  40df1c:	ldp	x10, x9, [x20, #16]
  40df20:	ldr	x8, [x20, #40]
  40df24:	sub	x9, x9, #0x1
  40df28:	str	x9, [x20, #24]
  40df2c:	ldr	s2, [x8]
  40df30:	ucvtf	s0, x10
  40df34:	ucvtf	s1, x9
  40df38:	fmul	s3, s2, s0
  40df3c:	fcmp	s3, s1
  40df40:	b.le	40e02c <__fxstatat@plt+0xb5dc>
  40df44:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40df48:	add	x9, x9, #0x720
  40df4c:	cmp	x8, x9
  40df50:	b.eq	40dfd8 <__fxstatat@plt+0xb588>  // b.none
  40df54:	ldr	s3, [x8, #8]
  40df58:	mov	w10, #0xcccd                	// #52429
  40df5c:	movk	w10, #0x3dcc, lsl #16
  40df60:	fmov	s4, w10
  40df64:	fcmp	s3, s4
  40df68:	b.le	40dfd0 <__fxstatat@plt+0xb580>
  40df6c:	mov	w10, #0x6666                	// #26214
  40df70:	movk	w10, #0x3f66, lsl #16
  40df74:	fmov	s4, w10
  40df78:	fcmp	s3, s4
  40df7c:	b.pl	40dfd0 <__fxstatat@plt+0xb580>  // b.nfrst
  40df80:	fcmp	s2, #0.0
  40df84:	b.lt	40dfd0 <__fxstatat@plt+0xb580>  // b.tstop
  40df88:	ldr	s4, [x8, #12]
  40df8c:	mov	w10, #0xcccd                	// #52429
  40df90:	movk	w10, #0x3f8c, lsl #16
  40df94:	fmov	s5, w10
  40df98:	fcmp	s4, s5
  40df9c:	b.le	40dfd0 <__fxstatat@plt+0xb580>
  40dfa0:	mov	w10, #0xcccd                	// #52429
  40dfa4:	movk	w10, #0x3dcc, lsl #16
  40dfa8:	fmov	s4, w10
  40dfac:	fadd	s4, s2, s4
  40dfb0:	fcmp	s4, s3
  40dfb4:	b.pl	40dfd0 <__fxstatat@plt+0xb580>  // b.nfrst
  40dfb8:	ldr	s3, [x8, #4]
  40dfbc:	fmov	s5, #1.000000000000000000e+00
  40dfc0:	fcmp	s3, s5
  40dfc4:	b.hi	40dfd0 <__fxstatat@plt+0xb580>  // b.pmore
  40dfc8:	fcmp	s4, s3
  40dfcc:	b.mi	40dfdc <__fxstatat@plt+0xb58c>  // b.first
  40dfd0:	fmov	s2, wzr
  40dfd4:	str	x9, [x20, #40]
  40dfd8:	mov	x8, x9
  40dfdc:	fmul	s2, s2, s0
  40dfe0:	fcmp	s2, s1
  40dfe4:	b.le	40e02c <__fxstatat@plt+0xb5dc>
  40dfe8:	ldr	s1, [x8, #4]
  40dfec:	ldrb	w9, [x8, #16]
  40dff0:	fmul	s0, s1, s0
  40dff4:	cbnz	w9, 40e000 <__fxstatat@plt+0xb5b0>
  40dff8:	ldr	s1, [x8, #8]
  40dffc:	fmul	s0, s0, s1
  40e000:	fcvtzu	x1, s0
  40e004:	mov	x0, x20
  40e008:	bl	40d744 <__fxstatat@plt+0xacf4>
  40e00c:	tbnz	w0, #0, 40e02c <__fxstatat@plt+0xb5dc>
  40e010:	ldr	x0, [x20, #72]
  40e014:	cbz	x0, 40e028 <__fxstatat@plt+0xb5d8>
  40e018:	ldr	x21, [x0, #8]
  40e01c:	bl	402840 <free@plt>
  40e020:	mov	x0, x21
  40e024:	cbnz	x21, 40e018 <__fxstatat@plt+0xb5c8>
  40e028:	str	xzr, [x20, #72]
  40e02c:	mov	x0, x19
  40e030:	ldp	x20, x19, [sp, #48]
  40e034:	ldp	x22, x21, [sp, #32]
  40e038:	ldr	x23, [sp, #16]
  40e03c:	ldp	x29, x30, [sp], #64
  40e040:	ret
  40e044:	bl	402770 <abort@plt>
  40e048:	stp	x29, x30, [sp, #-32]!
  40e04c:	stp	x20, x19, [sp, #16]
  40e050:	mov	x19, x0
  40e054:	ldr	x0, [x0]
  40e058:	mov	x29, sp
  40e05c:	mov	x20, x1
  40e060:	bl	414720 <_obstack_memory_used@@Base+0x780>
  40e064:	ldr	x8, [x19, #8]
  40e068:	eor	x8, x8, x0
  40e06c:	udiv	x9, x8, x20
  40e070:	msub	x0, x9, x20, x8
  40e074:	ldp	x20, x19, [sp, #16]
  40e078:	ldp	x29, x30, [sp], #32
  40e07c:	ret
  40e080:	ldr	x8, [x0, #8]
  40e084:	udiv	x9, x8, x1
  40e088:	msub	x0, x9, x1, x8
  40e08c:	ret
  40e090:	ldr	x8, [x0, #8]
  40e094:	ldr	x9, [x1, #8]
  40e098:	cmp	x8, x9
  40e09c:	b.ne	40e0bc <__fxstatat@plt+0xb66c>  // b.any
  40e0a0:	ldr	x8, [x0, #16]
  40e0a4:	ldr	x9, [x1, #16]
  40e0a8:	cmp	x8, x9
  40e0ac:	b.ne	40e0bc <__fxstatat@plt+0xb66c>  // b.any
  40e0b0:	ldr	x0, [x0]
  40e0b4:	ldr	x1, [x1]
  40e0b8:	b	412590 <__fxstatat@plt+0xfb40>
  40e0bc:	mov	w0, wzr
  40e0c0:	ret
  40e0c4:	stp	x29, x30, [sp, #-16]!
  40e0c8:	ldr	x8, [x0, #8]
  40e0cc:	ldr	x9, [x1, #8]
  40e0d0:	mov	x29, sp
  40e0d4:	cmp	x8, x9
  40e0d8:	b.ne	40e108 <__fxstatat@plt+0xb6b8>  // b.any
  40e0dc:	ldr	x8, [x0, #16]
  40e0e0:	ldr	x9, [x1, #16]
  40e0e4:	cmp	x8, x9
  40e0e8:	b.ne	40e108 <__fxstatat@plt+0xb6b8>  // b.any
  40e0ec:	ldr	x0, [x0]
  40e0f0:	ldr	x1, [x1]
  40e0f4:	bl	402800 <strcmp@plt>
  40e0f8:	cmp	w0, #0x0
  40e0fc:	cset	w0, eq  // eq = none
  40e100:	ldp	x29, x30, [sp], #16
  40e104:	ret
  40e108:	mov	w0, wzr
  40e10c:	ldp	x29, x30, [sp], #16
  40e110:	ret
  40e114:	stp	x29, x30, [sp, #-32]!
  40e118:	str	x19, [sp, #16]
  40e11c:	mov	x19, x0
  40e120:	ldr	x0, [x0]
  40e124:	mov	x29, sp
  40e128:	bl	402840 <free@plt>
  40e12c:	mov	x0, x19
  40e130:	ldr	x19, [sp, #16]
  40e134:	ldp	x29, x30, [sp], #32
  40e138:	b	402840 <free@plt>
  40e13c:	sub	sp, sp, #0xe0
  40e140:	tst	w2, #0x20
  40e144:	mov	w8, #0x3e8                 	// #1000
  40e148:	mov	w9, #0x400                 	// #1024
  40e14c:	stp	x29, x30, [sp, #128]
  40e150:	stp	x28, x27, [sp, #144]
  40e154:	stp	x26, x25, [sp, #160]
  40e158:	stp	x24, x23, [sp, #176]
  40e15c:	stp	x22, x21, [sp, #192]
  40e160:	stp	x20, x19, [sp, #208]
  40e164:	add	x29, sp, #0x80
  40e168:	mov	x21, x4
  40e16c:	mov	x27, x3
  40e170:	mov	x19, x1
  40e174:	mov	x26, x0
  40e178:	and	w28, w2, #0x3
  40e17c:	str	w2, [sp, #20]
  40e180:	csel	w22, w9, w8, ne  // ne = any
  40e184:	bl	402570 <localeconv@plt>
  40e188:	ldr	x25, [x0]
  40e18c:	mov	x23, x0
  40e190:	mov	x0, x25
  40e194:	bl	402430 <strlen@plt>
  40e198:	ldp	x23, x20, [x23, #8]
  40e19c:	sub	x8, x0, #0x1
  40e1a0:	cmp	x8, #0x10
  40e1a4:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e1a8:	csinc	x24, x0, xzr, cc  // cc = lo, ul, last
  40e1ac:	add	x8, x8, #0x6aa
  40e1b0:	mov	x0, x23
  40e1b4:	csel	x25, x25, x8, cc  // cc = lo, ul, last
  40e1b8:	bl	402430 <strlen@plt>
  40e1bc:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e1c0:	mov	x11, x21
  40e1c4:	add	x8, x8, #0x2c1
  40e1c8:	cmp	x0, #0x11
  40e1cc:	csel	x21, x23, x8, cc  // cc = lo, ul, last
  40e1d0:	cmp	x11, x27
  40e1d4:	str	x19, [sp, #24]
  40e1d8:	add	x19, x19, #0x287
  40e1dc:	stp	x21, x11, [sp]
  40e1e0:	b.ls	40e244 <__fxstatat@plt+0xb7f4>  // b.plast
  40e1e4:	cbz	x27, 40e25c <__fxstatat@plt+0xb80c>
  40e1e8:	udiv	x9, x11, x27
  40e1ec:	msub	x8, x9, x27, x11
  40e1f0:	cbnz	x8, 40e25c <__fxstatat@plt+0xb80c>
  40e1f4:	udiv	x27, x26, x9
  40e1f8:	msub	x8, x27, x9, x26
  40e1fc:	add	x8, x8, x8, lsl #2
  40e200:	lsl	x11, x8, #1
  40e204:	udiv	x8, x11, x9
  40e208:	msub	x11, x8, x9, x11
  40e20c:	lsl	x11, x11, #1
  40e210:	cmp	x11, #0x0
  40e214:	mov	w10, #0x2                   	// #2
  40e218:	cset	w12, ne  // ne = any
  40e21c:	cmp	x9, x11
  40e220:	cinc	w10, w10, cc  // cc = lo, ul, last
  40e224:	cmp	x11, x9
  40e228:	csel	w9, w12, w10, cc  // cc = lo, ul, last
  40e22c:	ldr	w23, [sp, #20]
  40e230:	tbz	w23, #4, 40e4dc <__fxstatat@plt+0xba8c>
  40e234:	cmp	x27, x22
  40e238:	b.cs	40e530 <__fxstatat@plt+0xbae0>  // b.hs, b.nlast
  40e23c:	mov	w21, wzr
  40e240:	b	40e628 <__fxstatat@plt+0xbbd8>
  40e244:	udiv	x10, x27, x11
  40e248:	msub	x8, x10, x11, x27
  40e24c:	cbnz	x8, 40e25c <__fxstatat@plt+0xb80c>
  40e250:	umulh	x8, x10, x26
  40e254:	cmp	xzr, x8
  40e258:	b.eq	40e4c8 <__fxstatat@plt+0xba78>  // b.none
  40e25c:	mov	x0, x11
  40e260:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e264:	mov	x0, x26
  40e268:	str	q0, [sp, #48]
  40e26c:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e270:	mov	x0, x27
  40e274:	str	q0, [sp, #64]
  40e278:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e27c:	ldr	q1, [sp, #48]
  40e280:	bl	414908 <_obstack_memory_used@@Base+0x968>
  40e284:	ldr	q1, [sp, #64]
  40e288:	bl	415470 <_obstack_memory_used@@Base+0x14d0>
  40e28c:	ldr	w23, [sp, #20]
  40e290:	tbnz	w23, #4, 40e2f8 <__fxstatat@plt+0xb8a8>
  40e294:	cmp	w28, #0x1
  40e298:	b.eq	40e488 <__fxstatat@plt+0xba38>  // b.none
  40e29c:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e2a0:	ldr	q1, [x8, #1872]
  40e2a4:	str	q0, [sp, #32]
  40e2a8:	bl	415330 <_obstack_memory_used@@Base+0x1390>
  40e2ac:	ldr	x25, [sp, #24]
  40e2b0:	cmp	w0, #0x0
  40e2b4:	mov	x27, x19
  40e2b8:	b.ge	40e494 <__fxstatat@plt+0xba44>  // b.tcont
  40e2bc:	ldr	q0, [sp, #32]
  40e2c0:	bl	415cc0 <_obstack_memory_used@@Base+0x1d20>
  40e2c4:	cmp	w28, #0x0
  40e2c8:	mov	x24, x0
  40e2cc:	cset	w19, eq  // eq = none
  40e2d0:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e2d4:	mov	v1.16b, v0.16b
  40e2d8:	ldr	q0, [sp, #32]
  40e2dc:	bl	415228 <_obstack_memory_used@@Base+0x1288>
  40e2e0:	cmp	w0, #0x0
  40e2e4:	cset	w8, ne  // ne = any
  40e2e8:	and	w8, w19, w8
  40e2ec:	add	x0, x8, x24
  40e2f0:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e2f4:	b	40e498 <__fxstatat@plt+0xba48>
  40e2f8:	mov	w0, w22
  40e2fc:	str	q0, [sp, #32]
  40e300:	mov	x27, x19
  40e304:	bl	415c58 <_obstack_memory_used@@Base+0x1cb8>
  40e308:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e30c:	str	q0, [sp, #48]
  40e310:	ldr	q0, [x8, #1856]
  40e314:	mov	w21, wzr
  40e318:	str	q0, [sp, #64]
  40e31c:	ldp	q1, q0, [sp, #48]
  40e320:	mov	w19, w21
  40e324:	bl	415470 <_obstack_memory_used@@Base+0x14d0>
  40e328:	ldr	q1, [sp, #48]
  40e32c:	add	w21, w21, #0x1
  40e330:	str	q0, [sp, #64]
  40e334:	bl	415470 <_obstack_memory_used@@Base+0x14d0>
  40e338:	cmp	w19, #0x6
  40e33c:	b.hi	40e350 <__fxstatat@plt+0xb900>  // b.pmore
  40e340:	ldr	q1, [sp, #32]
  40e344:	bl	415330 <_obstack_memory_used@@Base+0x1390>
  40e348:	cmp	w0, #0x0
  40e34c:	b.le	40e31c <__fxstatat@plt+0xb8cc>
  40e350:	ldr	q0, [sp, #32]
  40e354:	ldr	q1, [sp, #64]
  40e358:	bl	414908 <_obstack_memory_used@@Base+0x968>
  40e35c:	ldr	x25, [sp, #24]
  40e360:	cmp	w28, #0x1
  40e364:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e368:	str	q0, [sp, #64]
  40e36c:	b.eq	40e3c4 <__fxstatat@plt+0xb974>  // b.none
  40e370:	ldr	q1, [x26, #1872]
  40e374:	bl	415330 <_obstack_memory_used@@Base+0x1390>
  40e378:	ldr	q1, [sp, #64]
  40e37c:	cmp	w0, #0x0
  40e380:	mov	v0.16b, v1.16b
  40e384:	b.ge	40e3c4 <__fxstatat@plt+0xb974>  // b.tcont
  40e388:	mov	v0.16b, v1.16b
  40e38c:	bl	415cc0 <_obstack_memory_used@@Base+0x1d20>
  40e390:	cmp	w28, #0x0
  40e394:	mov	x25, x0
  40e398:	cset	w19, eq  // eq = none
  40e39c:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e3a0:	mov	v1.16b, v0.16b
  40e3a4:	ldr	q0, [sp, #64]
  40e3a8:	bl	415228 <_obstack_memory_used@@Base+0x1288>
  40e3ac:	cmp	w0, #0x0
  40e3b0:	cset	w8, ne  // ne = any
  40e3b4:	and	w8, w19, w8
  40e3b8:	add	x0, x8, x25
  40e3bc:	ldr	x25, [sp, #24]
  40e3c0:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e3c4:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e3c8:	add	x3, x3, #0x776
  40e3cc:	mov	w1, #0x1                   	// #1
  40e3d0:	mov	x2, #0xffffffffffffffff    	// #-1
  40e3d4:	mov	x0, x25
  40e3d8:	bl	402440 <__sprintf_chk@plt>
  40e3dc:	mov	x0, x25
  40e3e0:	bl	402430 <strlen@plt>
  40e3e4:	ldr	q0, [sp, #64]
  40e3e8:	tst	w23, #0x20
  40e3ec:	mov	w8, #0x2                   	// #2
  40e3f0:	cinc	x8, x8, eq  // eq = none
  40e3f4:	add	x8, x8, x24
  40e3f8:	cmp	x8, x0
  40e3fc:	b.cc	40e41c <__fxstatat@plt+0xb9cc>  // b.lo, b.ul, b.last
  40e400:	mov	x2, x0
  40e404:	add	x19, x24, #0x1
  40e408:	tbz	w23, #3, 40e514 <__fxstatat@plt+0xbac4>
  40e40c:	add	x8, x2, x25
  40e410:	ldurb	w8, [x8, #-1]
  40e414:	cmp	w8, #0x30
  40e418:	b.ne	40e514 <__fxstatat@plt+0xbac4>  // b.any
  40e41c:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e420:	ldr	q1, [x8, #1888]
  40e424:	str	q1, [sp, #64]
  40e428:	bl	415470 <_obstack_memory_used@@Base+0x14d0>
  40e42c:	cmp	w28, #0x1
  40e430:	b.eq	40e480 <__fxstatat@plt+0xba30>  // b.none
  40e434:	ldr	q1, [x26, #1872]
  40e438:	str	q0, [sp, #48]
  40e43c:	bl	415330 <_obstack_memory_used@@Base+0x1390>
  40e440:	cmp	w0, #0x0
  40e444:	b.ge	40e4e4 <__fxstatat@plt+0xba94>  // b.tcont
  40e448:	ldr	q0, [sp, #48]
  40e44c:	bl	415cc0 <_obstack_memory_used@@Base+0x1d20>
  40e450:	cmp	w28, #0x0
  40e454:	mov	x24, x0
  40e458:	cset	w19, eq  // eq = none
  40e45c:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e460:	mov	v1.16b, v0.16b
  40e464:	ldr	q0, [sp, #48]
  40e468:	bl	415228 <_obstack_memory_used@@Base+0x1288>
  40e46c:	cmp	w0, #0x0
  40e470:	cset	w8, ne  // ne = any
  40e474:	and	w8, w19, w8
  40e478:	add	x0, x8, x24
  40e47c:	bl	415de0 <_obstack_memory_used@@Base+0x1e40>
  40e480:	ldr	q1, [sp, #64]
  40e484:	b	40e4e8 <__fxstatat@plt+0xba98>
  40e488:	ldr	x25, [sp, #24]
  40e48c:	mov	x27, x19
  40e490:	b	40e498 <__fxstatat@plt+0xba48>
  40e494:	ldr	q0, [sp, #32]
  40e498:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e49c:	add	x3, x3, #0x770
  40e4a0:	mov	w1, #0x1                   	// #1
  40e4a4:	mov	x2, #0xffffffffffffffff    	// #-1
  40e4a8:	mov	x0, x25
  40e4ac:	bl	402440 <__sprintf_chk@plt>
  40e4b0:	mov	x0, x25
  40e4b4:	bl	402430 <strlen@plt>
  40e4b8:	mov	x2, x0
  40e4bc:	mov	x19, xzr
  40e4c0:	mov	w21, #0xffffffff            	// #-1
  40e4c4:	b	40e514 <__fxstatat@plt+0xbac4>
  40e4c8:	mov	w9, wzr
  40e4cc:	mov	w8, wzr
  40e4d0:	mul	x27, x10, x26
  40e4d4:	ldr	w23, [sp, #20]
  40e4d8:	tbnz	w23, #4, 40e234 <__fxstatat@plt+0xb7e4>
  40e4dc:	mov	w21, #0xffffffff            	// #-1
  40e4e0:	b	40e628 <__fxstatat@plt+0xbbd8>
  40e4e4:	ldp	q0, q1, [sp, #48]
  40e4e8:	bl	414908 <_obstack_memory_used@@Base+0x968>
  40e4ec:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e4f0:	add	x3, x3, #0x770
  40e4f4:	mov	w1, #0x1                   	// #1
  40e4f8:	mov	x2, #0xffffffffffffffff    	// #-1
  40e4fc:	mov	x0, x25
  40e500:	bl	402440 <__sprintf_chk@plt>
  40e504:	mov	x0, x25
  40e508:	bl	402430 <strlen@plt>
  40e50c:	mov	x2, x0
  40e510:	mov	x19, xzr
  40e514:	sub	x24, x27, x2
  40e518:	mov	x0, x24
  40e51c:	mov	x1, x25
  40e520:	bl	4023d0 <memmove@plt>
  40e524:	sub	x26, x27, x19
  40e528:	mov	x19, x27
  40e52c:	b	40e6d0 <__fxstatat@plt+0xbc80>
  40e530:	mov	w12, wzr
  40e534:	mov	w10, #0xa                   	// #10
  40e538:	mov	w11, #0x2                   	// #2
  40e53c:	mov	x13, x27
  40e540:	udiv	x27, x27, x22
  40e544:	msub	w13, w27, w22, w13
  40e548:	madd	w13, w13, w10, w8
  40e54c:	udiv	w8, w13, w22
  40e550:	msub	w13, w8, w22, w13
  40e554:	lsl	w13, w13, #1
  40e558:	add	w13, w13, w9, lsr #1
  40e55c:	cmp	w13, w22
  40e560:	b.cs	40e570 <__fxstatat@plt+0xbb20>  // b.hs, b.nlast
  40e564:	cmn	w13, w9
  40e568:	cset	w9, ne  // ne = any
  40e56c:	b	40e57c <__fxstatat@plt+0xbb2c>
  40e570:	add	w9, w13, w9
  40e574:	cmp	w22, w9
  40e578:	cinc	w9, w11, cc  // cc = lo, ul, last
  40e57c:	cmp	w12, #0x6
  40e580:	add	w21, w12, #0x1
  40e584:	b.hi	40e594 <__fxstatat@plt+0xbb44>  // b.pmore
  40e588:	cmp	x27, x22
  40e58c:	mov	w12, w21
  40e590:	b.cs	40e53c <__fxstatat@plt+0xbaec>  // b.hs, b.nlast
  40e594:	cmp	x27, #0x9
  40e598:	b.hi	40e628 <__fxstatat@plt+0xbbd8>  // b.pmore
  40e59c:	cmp	w28, #0x1
  40e5a0:	b.ne	40e5b8 <__fxstatat@plt+0xbb68>  // b.any
  40e5a4:	and	w10, w8, #0x1
  40e5a8:	add	w10, w9, w10
  40e5ac:	cmp	w10, #0x2
  40e5b0:	b.hi	40e5c0 <__fxstatat@plt+0xbb70>  // b.pmore
  40e5b4:	b	40e5e8 <__fxstatat@plt+0xbb98>
  40e5b8:	cbnz	w28, 40e5e8 <__fxstatat@plt+0xbb98>
  40e5bc:	cbz	w9, 40e5e8 <__fxstatat@plt+0xbb98>
  40e5c0:	add	w8, w8, #0x1
  40e5c4:	cmp	w8, #0xa
  40e5c8:	b.ne	40e5e4 <__fxstatat@plt+0xbb94>  // b.any
  40e5cc:	cmp	x27, #0x8
  40e5d0:	mov	w8, wzr
  40e5d4:	b.hi	40e620 <__fxstatat@plt+0xbbd0>  // b.pmore
  40e5d8:	add	x27, x27, #0x1
  40e5dc:	mov	w9, w8
  40e5e0:	b	40e5e8 <__fxstatat@plt+0xbb98>
  40e5e4:	mov	w9, wzr
  40e5e8:	tbz	w23, #3, 40e5f0 <__fxstatat@plt+0xbba0>
  40e5ec:	cbz	w8, 40e628 <__fxstatat@plt+0xbbd8>
  40e5f0:	ldr	x10, [sp, #24]
  40e5f4:	add	w8, w8, #0x30
  40e5f8:	mov	x1, x25
  40e5fc:	mov	x2, x24
  40e600:	add	x9, x10, #0x286
  40e604:	sub	x26, x9, x24
  40e608:	mov	x0, x26
  40e60c:	strb	w8, [x10, #646]
  40e610:	bl	4023c0 <memcpy@plt>
  40e614:	mov	w9, wzr
  40e618:	mov	w8, wzr
  40e61c:	b	40e62c <__fxstatat@plt+0xbbdc>
  40e620:	mov	w27, #0xa                   	// #10
  40e624:	mov	w9, w8
  40e628:	mov	x26, x19
  40e62c:	cbz	w28, 40e650 <__fxstatat@plt+0xbc00>
  40e630:	cmp	w28, #0x1
  40e634:	b.ne	40e69c <__fxstatat@plt+0xbc4c>  // b.any
  40e638:	and	x10, x27, #0x1
  40e63c:	cmn	x10, w9, uxtw
  40e640:	cinc	w8, w8, ne  // ne = any
  40e644:	cmp	w8, #0x5
  40e648:	b.gt	40e65c <__fxstatat@plt+0xbc0c>
  40e64c:	b	40e69c <__fxstatat@plt+0xbc4c>
  40e650:	add	w8, w8, w9
  40e654:	cmp	w8, #0x1
  40e658:	b.lt	40e69c <__fxstatat@plt+0xbc4c>  // b.tstop
  40e65c:	cmp	w21, #0x7
  40e660:	add	x27, x27, #0x1
  40e664:	b.gt	40e69c <__fxstatat@plt+0xbc4c>
  40e668:	tbz	w23, #4, 40e69c <__fxstatat@plt+0xbc4c>
  40e66c:	cmp	x27, x22
  40e670:	b.ne	40e69c <__fxstatat@plt+0xbc4c>  // b.any
  40e674:	add	w21, w21, #0x1
  40e678:	tbnz	w23, #3, 40e698 <__fxstatat@plt+0xbc48>
  40e67c:	mov	w8, #0x30                  	// #48
  40e680:	strb	w8, [x26, #-1]!
  40e684:	sub	x26, x26, x24
  40e688:	mov	x0, x26
  40e68c:	mov	x1, x25
  40e690:	mov	x2, x24
  40e694:	bl	4023c0 <memcpy@plt>
  40e698:	mov	w27, #0x1                   	// #1
  40e69c:	ldr	x25, [sp, #24]
  40e6a0:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40e6a4:	movk	x8, #0xcccd
  40e6a8:	mov	w9, #0xa                   	// #10
  40e6ac:	mov	x24, x26
  40e6b0:	umulh	x10, x27, x8
  40e6b4:	lsr	x10, x10, #3
  40e6b8:	msub	w11, w10, w9, w27
  40e6bc:	orr	w11, w11, #0x30
  40e6c0:	cmp	x27, #0x9
  40e6c4:	strb	w11, [x24, #-1]!
  40e6c8:	mov	x27, x10
  40e6cc:	b.hi	40e6b0 <__fxstatat@plt+0xbc60>  // b.pmore
  40e6d0:	tbnz	w23, #2, 40e6e0 <__fxstatat@plt+0xbc90>
  40e6d4:	ldr	x9, [sp, #8]
  40e6d8:	tbnz	w23, #7, 40e7cc <__fxstatat@plt+0xbd7c>
  40e6dc:	b	40e860 <__fxstatat@plt+0xbe10>
  40e6e0:	ldr	x0, [sp]
  40e6e4:	str	x22, [sp, #48]
  40e6e8:	str	x19, [sp, #64]
  40e6ec:	sub	x28, x26, x24
  40e6f0:	bl	402430 <strlen@plt>
  40e6f4:	mov	x25, x0
  40e6f8:	sub	x0, x29, #0x2c
  40e6fc:	mov	w3, #0x29                  	// #41
  40e700:	mov	x1, x24
  40e704:	mov	x2, x28
  40e708:	sub	x19, x29, #0x2c
  40e70c:	bl	4025a0 <__memcpy_chk@plt>
  40e710:	ldrb	w8, [x20]
  40e714:	cmp	x8, #0x0
  40e718:	cset	w23, eq  // eq = none
  40e71c:	cmp	w8, #0xff
  40e720:	csel	x9, x28, x8, eq  // eq = none
  40e724:	cmp	w8, #0x0
  40e728:	csinv	x8, x9, xzr, ne  // ne = any
  40e72c:	cmp	x8, x28
  40e730:	csel	x27, x28, x8, hi  // hi = pmore
  40e734:	sub	x24, x26, x27
  40e738:	sub	x26, x28, x27
  40e73c:	add	x1, x19, x26
  40e740:	mov	x0, x24
  40e744:	mov	x2, x27
  40e748:	bl	4023c0 <memcpy@plt>
  40e74c:	cbz	x26, 40e7b4 <__fxstatat@plt+0xbd64>
  40e750:	ldr	x22, [sp]
  40e754:	neg	x28, x25
  40e758:	add	x24, x24, x28
  40e75c:	tst	w23, #0x1
  40e760:	mov	x0, x24
  40e764:	mov	x1, x22
  40e768:	mov	x2, x25
  40e76c:	cinc	x20, x20, eq  // eq = none
  40e770:	bl	4023c0 <memcpy@plt>
  40e774:	ldrb	w8, [x20]
  40e778:	cmp	x8, #0x0
  40e77c:	cset	w23, eq  // eq = none
  40e780:	cmp	w8, #0xff
  40e784:	csel	x9, x26, x8, eq  // eq = none
  40e788:	cmp	w8, #0x0
  40e78c:	csel	x8, x27, x9, eq  // eq = none
  40e790:	cmp	x26, x8
  40e794:	csel	x27, x26, x8, cc  // cc = lo, ul, last
  40e798:	sub	x24, x24, x27
  40e79c:	sub	x26, x26, x27
  40e7a0:	add	x1, x19, x26
  40e7a4:	mov	x0, x24
  40e7a8:	mov	x2, x27
  40e7ac:	bl	4023c0 <memcpy@plt>
  40e7b0:	cbnz	x26, 40e758 <__fxstatat@plt+0xbd08>
  40e7b4:	ldr	w23, [sp, #20]
  40e7b8:	ldr	x19, [sp, #64]
  40e7bc:	ldr	x25, [sp, #24]
  40e7c0:	ldr	x9, [sp, #8]
  40e7c4:	ldr	x22, [sp, #48]
  40e7c8:	tbz	w23, #7, 40e860 <__fxstatat@plt+0xbe10>
  40e7cc:	tbz	w21, #31, 40e800 <__fxstatat@plt+0xbdb0>
  40e7d0:	cmp	x9, #0x2
  40e7d4:	b.cc	40e7fc <__fxstatat@plt+0xbdac>  // b.lo, b.ul, b.last
  40e7d8:	mov	w21, wzr
  40e7dc:	mov	w8, #0x1                   	// #1
  40e7e0:	cmp	w21, #0x7
  40e7e4:	b.eq	40e888 <__fxstatat@plt+0xbe38>  // b.none
  40e7e8:	mul	x8, x8, x22
  40e7ec:	cmp	x8, x9
  40e7f0:	add	w21, w21, #0x1
  40e7f4:	b.cc	40e7e0 <__fxstatat@plt+0xbd90>  // b.lo, b.ul, b.last
  40e7f8:	b	40e800 <__fxstatat@plt+0xbdb0>
  40e7fc:	mov	w21, wzr
  40e800:	and	w8, w23, #0x100
  40e804:	tbz	w23, #6, 40e81c <__fxstatat@plt+0xbdcc>
  40e808:	orr	w9, w21, w8
  40e80c:	cbz	w9, 40e81c <__fxstatat@plt+0xbdcc>
  40e810:	add	x19, x25, #0x288
  40e814:	mov	w9, #0x20                  	// #32
  40e818:	strb	w9, [x25, #647]
  40e81c:	cbz	w21, 40e844 <__fxstatat@plt+0xbdf4>
  40e820:	tbnz	w23, #5, 40e834 <__fxstatat@plt+0xbde4>
  40e824:	cmp	w21, #0x1
  40e828:	b.ne	40e834 <__fxstatat@plt+0xbde4>  // b.any
  40e82c:	mov	w9, #0x6b                  	// #107
  40e830:	b	40e840 <__fxstatat@plt+0xbdf0>
  40e834:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e838:	add	x9, x9, #0x7a8
  40e83c:	ldrb	w9, [x9, w21, sxtw]
  40e840:	strb	w9, [x19], #1
  40e844:	cbz	w8, 40e860 <__fxstatat@plt+0xbe10>
  40e848:	tbz	w23, #5, 40e858 <__fxstatat@plt+0xbe08>
  40e84c:	cbz	w21, 40e858 <__fxstatat@plt+0xbe08>
  40e850:	mov	w8, #0x69                  	// #105
  40e854:	strb	w8, [x19], #1
  40e858:	mov	w8, #0x42                  	// #66
  40e85c:	strb	w8, [x19], #1
  40e860:	strb	wzr, [x19]
  40e864:	mov	x0, x24
  40e868:	ldp	x20, x19, [sp, #208]
  40e86c:	ldp	x22, x21, [sp, #192]
  40e870:	ldp	x24, x23, [sp, #176]
  40e874:	ldp	x26, x25, [sp, #160]
  40e878:	ldp	x28, x27, [sp, #144]
  40e87c:	ldp	x29, x30, [sp, #128]
  40e880:	add	sp, sp, #0xe0
  40e884:	ret
  40e888:	mov	w21, #0x8                   	// #8
  40e88c:	and	w8, w23, #0x100
  40e890:	tbnz	w23, #6, 40e808 <__fxstatat@plt+0xbdb8>
  40e894:	b	40e81c <__fxstatat@plt+0xbdcc>
  40e898:	stp	x29, x30, [sp, #-64]!
  40e89c:	stp	x20, x19, [sp, #48]
  40e8a0:	mov	x19, x2
  40e8a4:	mov	x20, x1
  40e8a8:	str	x23, [sp, #16]
  40e8ac:	stp	x22, x21, [sp, #32]
  40e8b0:	mov	x29, sp
  40e8b4:	cbnz	x0, 40e8d8 <__fxstatat@plt+0xbe88>
  40e8b8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5060>
  40e8bc:	add	x0, x0, #0xe13
  40e8c0:	bl	4029f0 <getenv@plt>
  40e8c4:	cbnz	x0, 40e8d8 <__fxstatat@plt+0xbe88>
  40e8c8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e8cc:	add	x0, x0, #0x77c
  40e8d0:	bl	4029f0 <getenv@plt>
  40e8d4:	cbz	x0, 40e9d0 <__fxstatat@plt+0xbf80>
  40e8d8:	mov	x8, x0
  40e8dc:	ldrb	w9, [x8], #1
  40e8e0:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e8e4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e8e8:	add	x22, x22, #0x7d0
  40e8ec:	cmp	w9, #0x27
  40e8f0:	csel	x21, x8, x0, eq  // eq = none
  40e8f4:	cset	w9, eq  // eq = none
  40e8f8:	add	x1, x1, #0x7b8
  40e8fc:	mov	w3, #0x4                   	// #4
  40e900:	mov	x0, x21
  40e904:	mov	x2, x22
  40e908:	lsl	w23, w9, #2
  40e90c:	bl	40b864 <__fxstatat@plt+0x8e14>
  40e910:	tbnz	w0, #31, 40e970 <__fxstatat@plt+0xbf20>
  40e914:	sbfiz	x8, x0, #2, #32
  40e918:	ldr	w8, [x22, x8]
  40e91c:	mov	w9, #0x1                   	// #1
  40e920:	str	x9, [x19]
  40e924:	orr	w23, w8, w23
  40e928:	mov	w0, wzr
  40e92c:	str	w23, [x20]
  40e930:	ldr	x8, [x19]
  40e934:	cbnz	x8, 40e95c <__fxstatat@plt+0xbf0c>
  40e938:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e93c:	add	x0, x0, #0x798
  40e940:	bl	4029f0 <getenv@plt>
  40e944:	cmp	x0, #0x0
  40e948:	mov	w8, #0x200                 	// #512
  40e94c:	mov	w9, #0x400                 	// #1024
  40e950:	csel	x8, x9, x8, eq  // eq = none
  40e954:	mov	w0, #0x4                   	// #4
  40e958:	str	x8, [x19]
  40e95c:	ldp	x20, x19, [sp, #48]
  40e960:	ldp	x22, x21, [sp, #32]
  40e964:	ldr	x23, [sp, #16]
  40e968:	ldp	x29, x30, [sp], #64
  40e96c:	ret
  40e970:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e974:	add	x4, x4, #0x786
  40e978:	add	x1, x29, #0x18
  40e97c:	mov	x0, x21
  40e980:	mov	w2, wzr
  40e984:	mov	x3, x19
  40e988:	bl	4137dc <__fxstatat@plt+0x10d8c>
  40e98c:	cbz	w0, 40e9a0 <__fxstatat@plt+0xbf50>
  40e990:	str	wzr, [x20]
  40e994:	ldr	x8, [x19]
  40e998:	cbnz	x8, 40e95c <__fxstatat@plt+0xbf0c>
  40e99c:	b	40e938 <__fxstatat@plt+0xbee8>
  40e9a0:	ldrb	w8, [x21]
  40e9a4:	sub	w8, w8, #0x30
  40e9a8:	cmp	w8, #0xa
  40e9ac:	b.cc	40e928 <__fxstatat@plt+0xbed8>  // b.lo, b.ul, b.last
  40e9b0:	ldr	x8, [x29, #24]
  40e9b4:	cmp	x8, x21
  40e9b8:	b.eq	40e9f8 <__fxstatat@plt+0xbfa8>  // b.none
  40e9bc:	ldrb	w9, [x21, #1]!
  40e9c0:	sub	w9, w9, #0x30
  40e9c4:	cmp	w9, #0xa
  40e9c8:	b.cs	40e9b4 <__fxstatat@plt+0xbf64>  // b.hs, b.nlast
  40e9cc:	b	40e928 <__fxstatat@plt+0xbed8>
  40e9d0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  40e9d4:	add	x0, x0, #0x798
  40e9d8:	bl	4029f0 <getenv@plt>
  40e9dc:	cmp	x0, #0x0
  40e9e0:	mov	w8, #0x200                 	// #512
  40e9e4:	mov	w9, #0x400                 	// #1024
  40e9e8:	csel	x8, x9, x8, eq  // eq = none
  40e9ec:	mov	w23, wzr
  40e9f0:	str	x8, [x19]
  40e9f4:	b	40e928 <__fxstatat@plt+0xbed8>
  40e9f8:	ldurb	w9, [x8, #-1]
  40e9fc:	orr	w10, w23, #0x80
  40ea00:	orr	w23, w23, #0x180
  40ea04:	cmp	w9, #0x42
  40ea08:	csel	w9, w23, w10, eq  // eq = none
  40ea0c:	b.ne	40ea1c <__fxstatat@plt+0xbfcc>  // b.any
  40ea10:	ldurb	w8, [x8, #-2]
  40ea14:	cmp	w8, #0x69
  40ea18:	b.ne	40e928 <__fxstatat@plt+0xbed8>  // b.any
  40ea1c:	orr	w23, w9, #0x20
  40ea20:	b	40e928 <__fxstatat@plt+0xbed8>
  40ea24:	stp	x29, x30, [sp, #-48]!
  40ea28:	stp	x22, x21, [sp, #16]
  40ea2c:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40ea30:	stp	x20, x19, [sp, #32]
  40ea34:	ldr	x20, [x22, #1840]
  40ea38:	mov	w19, w0
  40ea3c:	mov	x29, sp
  40ea40:	cbz	x20, 40ea58 <__fxstatat@plt+0xc008>
  40ea44:	ldr	w8, [x20]
  40ea48:	cmp	w8, w19
  40ea4c:	b.eq	40eaa4 <__fxstatat@plt+0xc054>  // b.none
  40ea50:	ldr	x20, [x20, #8]
  40ea54:	cbnz	x20, 40ea44 <__fxstatat@plt+0xbff4>
  40ea58:	mov	w0, w19
  40ea5c:	bl	402810 <getpwuid@plt>
  40ea60:	cbz	x0, 40ea6c <__fxstatat@plt+0xc01c>
  40ea64:	ldr	x21, [x0]
  40ea68:	b	40ea74 <__fxstatat@plt+0xc024>
  40ea6c:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x6060>
  40ea70:	add	x21, x21, #0x2c1
  40ea74:	mov	x0, x21
  40ea78:	bl	402430 <strlen@plt>
  40ea7c:	add	x8, x0, #0x18
  40ea80:	and	x0, x8, #0xfffffffffffffff8
  40ea84:	bl	412e10 <__fxstatat@plt+0x103c0>
  40ea88:	mov	x20, x0
  40ea8c:	str	w19, [x0], #16
  40ea90:	mov	x1, x21
  40ea94:	bl	4028c0 <strcpy@plt>
  40ea98:	ldr	x8, [x22, #1840]
  40ea9c:	str	x20, [x22, #1840]
  40eaa0:	str	x8, [x20, #8]
  40eaa4:	ldrb	w8, [x20, #16]!
  40eaa8:	ldp	x22, x21, [sp, #16]
  40eaac:	cmp	w8, #0x0
  40eab0:	csel	x0, xzr, x20, eq  // eq = none
  40eab4:	ldp	x20, x19, [sp, #32]
  40eab8:	ldp	x29, x30, [sp], #48
  40eabc:	ret
  40eac0:	stp	x29, x30, [sp, #-64]!
  40eac4:	stp	x22, x21, [sp, #32]
  40eac8:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40eacc:	stp	x20, x19, [sp, #48]
  40ead0:	ldr	x20, [x22, #1840]
  40ead4:	mov	x19, x0
  40ead8:	str	x23, [sp, #16]
  40eadc:	mov	x29, sp
  40eae0:	cbz	x20, 40eb14 <__fxstatat@plt+0xc0c4>
  40eae4:	ldrb	w21, [x19]
  40eae8:	b	40eaf4 <__fxstatat@plt+0xc0a4>
  40eaec:	ldr	x20, [x20, #8]
  40eaf0:	cbz	x20, 40eb14 <__fxstatat@plt+0xc0c4>
  40eaf4:	mov	x0, x20
  40eaf8:	ldrb	w8, [x0, #16]!
  40eafc:	cmp	w8, w21
  40eb00:	b.ne	40eaec <__fxstatat@plt+0xc09c>  // b.any
  40eb04:	mov	x1, x19
  40eb08:	bl	402800 <strcmp@plt>
  40eb0c:	cbnz	w0, 40eaec <__fxstatat@plt+0xc09c>
  40eb10:	b	40ebac <__fxstatat@plt+0xc15c>
  40eb14:	adrp	x23, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40eb18:	ldr	x20, [x23, #1848]
  40eb1c:	cbz	x20, 40eb50 <__fxstatat@plt+0xc100>
  40eb20:	ldrb	w21, [x19]
  40eb24:	b	40eb30 <__fxstatat@plt+0xc0e0>
  40eb28:	ldr	x20, [x20, #8]
  40eb2c:	cbz	x20, 40eb50 <__fxstatat@plt+0xc100>
  40eb30:	mov	x0, x20
  40eb34:	ldrb	w8, [x0, #16]!
  40eb38:	cmp	w8, w21
  40eb3c:	b.ne	40eb28 <__fxstatat@plt+0xc0d8>  // b.any
  40eb40:	mov	x1, x19
  40eb44:	bl	402800 <strcmp@plt>
  40eb48:	cbnz	w0, 40eb28 <__fxstatat@plt+0xc0d8>
  40eb4c:	b	40eba8 <__fxstatat@plt+0xc158>
  40eb50:	mov	x0, x19
  40eb54:	bl	402690 <getpwnam@plt>
  40eb58:	mov	x21, x0
  40eb5c:	mov	x0, x19
  40eb60:	bl	402430 <strlen@plt>
  40eb64:	add	x8, x0, #0x18
  40eb68:	and	x0, x8, #0xfffffffffffffff8
  40eb6c:	bl	412e10 <__fxstatat@plt+0x103c0>
  40eb70:	mov	x20, x0
  40eb74:	add	x0, x0, #0x10
  40eb78:	mov	x1, x19
  40eb7c:	bl	4028c0 <strcpy@plt>
  40eb80:	cbz	x21, 40eb9c <__fxstatat@plt+0xc14c>
  40eb84:	ldr	w8, [x21, #16]
  40eb88:	ldr	x9, [x22, #1840]
  40eb8c:	str	x20, [x22, #1840]
  40eb90:	str	w8, [x20]
  40eb94:	str	x9, [x20, #8]
  40eb98:	b	40ebac <__fxstatat@plt+0xc15c>
  40eb9c:	ldr	x8, [x23, #1848]
  40eba0:	str	x20, [x23, #1848]
  40eba4:	str	x8, [x20, #8]
  40eba8:	mov	x20, xzr
  40ebac:	mov	x0, x20
  40ebb0:	ldp	x20, x19, [sp, #48]
  40ebb4:	ldp	x22, x21, [sp, #32]
  40ebb8:	ldr	x23, [sp, #16]
  40ebbc:	ldp	x29, x30, [sp], #64
  40ebc0:	ret
  40ebc4:	stp	x29, x30, [sp, #-48]!
  40ebc8:	stp	x22, x21, [sp, #16]
  40ebcc:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40ebd0:	stp	x20, x19, [sp, #32]
  40ebd4:	ldr	x20, [x22, #1856]
  40ebd8:	mov	w19, w0
  40ebdc:	mov	x29, sp
  40ebe0:	cbz	x20, 40ebf8 <__fxstatat@plt+0xc1a8>
  40ebe4:	ldr	w8, [x20]
  40ebe8:	cmp	w8, w19
  40ebec:	b.eq	40ec44 <__fxstatat@plt+0xc1f4>  // b.none
  40ebf0:	ldr	x20, [x20, #8]
  40ebf4:	cbnz	x20, 40ebe4 <__fxstatat@plt+0xc194>
  40ebf8:	mov	w0, w19
  40ebfc:	bl	402a10 <getgrgid@plt>
  40ec00:	cbz	x0, 40ec0c <__fxstatat@plt+0xc1bc>
  40ec04:	ldr	x21, [x0]
  40ec08:	b	40ec14 <__fxstatat@plt+0xc1c4>
  40ec0c:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x6060>
  40ec10:	add	x21, x21, #0x2c1
  40ec14:	mov	x0, x21
  40ec18:	bl	402430 <strlen@plt>
  40ec1c:	add	x8, x0, #0x18
  40ec20:	and	x0, x8, #0xfffffffffffffff8
  40ec24:	bl	412e10 <__fxstatat@plt+0x103c0>
  40ec28:	mov	x20, x0
  40ec2c:	str	w19, [x0], #16
  40ec30:	mov	x1, x21
  40ec34:	bl	4028c0 <strcpy@plt>
  40ec38:	ldr	x8, [x22, #1856]
  40ec3c:	str	x20, [x22, #1856]
  40ec40:	str	x8, [x20, #8]
  40ec44:	ldrb	w8, [x20, #16]!
  40ec48:	ldp	x22, x21, [sp, #16]
  40ec4c:	cmp	w8, #0x0
  40ec50:	csel	x0, xzr, x20, eq  // eq = none
  40ec54:	ldp	x20, x19, [sp, #32]
  40ec58:	ldp	x29, x30, [sp], #48
  40ec5c:	ret
  40ec60:	stp	x29, x30, [sp, #-64]!
  40ec64:	stp	x22, x21, [sp, #32]
  40ec68:	adrp	x22, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40ec6c:	stp	x20, x19, [sp, #48]
  40ec70:	ldr	x20, [x22, #1856]
  40ec74:	mov	x19, x0
  40ec78:	str	x23, [sp, #16]
  40ec7c:	mov	x29, sp
  40ec80:	cbz	x20, 40ecb4 <__fxstatat@plt+0xc264>
  40ec84:	ldrb	w21, [x19]
  40ec88:	b	40ec94 <__fxstatat@plt+0xc244>
  40ec8c:	ldr	x20, [x20, #8]
  40ec90:	cbz	x20, 40ecb4 <__fxstatat@plt+0xc264>
  40ec94:	mov	x0, x20
  40ec98:	ldrb	w8, [x0, #16]!
  40ec9c:	cmp	w8, w21
  40eca0:	b.ne	40ec8c <__fxstatat@plt+0xc23c>  // b.any
  40eca4:	mov	x1, x19
  40eca8:	bl	402800 <strcmp@plt>
  40ecac:	cbnz	w0, 40ec8c <__fxstatat@plt+0xc23c>
  40ecb0:	b	40ed4c <__fxstatat@plt+0xc2fc>
  40ecb4:	adrp	x23, 42d000 <__progname@@GLIBC_2.17+0xa48>
  40ecb8:	ldr	x20, [x23, #1864]
  40ecbc:	cbz	x20, 40ecf0 <__fxstatat@plt+0xc2a0>
  40ecc0:	ldrb	w21, [x19]
  40ecc4:	b	40ecd0 <__fxstatat@plt+0xc280>
  40ecc8:	ldr	x20, [x20, #8]
  40eccc:	cbz	x20, 40ecf0 <__fxstatat@plt+0xc2a0>
  40ecd0:	mov	x0, x20
  40ecd4:	ldrb	w8, [x0, #16]!
  40ecd8:	cmp	w8, w21
  40ecdc:	b.ne	40ecc8 <__fxstatat@plt+0xc278>  // b.any
  40ece0:	mov	x1, x19
  40ece4:	bl	402800 <strcmp@plt>
  40ece8:	cbnz	w0, 40ecc8 <__fxstatat@plt+0xc278>
  40ecec:	b	40ed48 <__fxstatat@plt+0xc2f8>
  40ecf0:	mov	x0, x19
  40ecf4:	bl	4024e0 <getgrnam@plt>
  40ecf8:	mov	x21, x0
  40ecfc:	mov	x0, x19
  40ed00:	bl	402430 <strlen@plt>
  40ed04:	add	x8, x0, #0x18
  40ed08:	and	x0, x8, #0xfffffffffffffff8
  40ed0c:	bl	412e10 <__fxstatat@plt+0x103c0>
  40ed10:	mov	x20, x0
  40ed14:	add	x0, x0, #0x10
  40ed18:	mov	x1, x19
  40ed1c:	bl	4028c0 <strcpy@plt>
  40ed20:	cbz	x21, 40ed3c <__fxstatat@plt+0xc2ec>
  40ed24:	ldr	w8, [x21, #16]
  40ed28:	ldr	x9, [x22, #1856]
  40ed2c:	str	x20, [x22, #1856]
  40ed30:	str	w8, [x20]
  40ed34:	str	x9, [x20, #8]
  40ed38:	b	40ed4c <__fxstatat@plt+0xc2fc>
  40ed3c:	ldr	x8, [x23, #1864]
  40ed40:	str	x20, [x23, #1864]
  40ed44:	str	x8, [x20, #8]
  40ed48:	mov	x20, xzr
  40ed4c:	mov	x0, x20
  40ed50:	ldp	x20, x19, [sp, #48]
  40ed54:	ldp	x22, x21, [sp, #32]
  40ed58:	ldr	x23, [sp, #16]
  40ed5c:	ldp	x29, x30, [sp], #64
  40ed60:	ret
  40ed64:	mov	x8, x0
  40ed68:	mov	x0, x1
  40ed6c:	strb	wzr, [x0, #20]!
  40ed70:	tbnz	x8, #63, 40edac <__fxstatat@plt+0xc35c>
  40ed74:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40ed78:	movk	x9, #0x6667
  40ed7c:	mov	w10, #0xa                   	// #10
  40ed80:	smulh	x11, x8, x9
  40ed84:	asr	x13, x11, #2
  40ed88:	add	x11, x13, x11, lsr #63
  40ed8c:	add	x12, x8, #0x9
  40ed90:	msub	w8, w11, w10, w8
  40ed94:	add	w8, w8, #0x30
  40ed98:	cmp	x12, #0x12
  40ed9c:	strb	w8, [x0, #-1]!
  40eda0:	mov	x8, x11
  40eda4:	b.hi	40ed80 <__fxstatat@plt+0xc330>  // b.pmore
  40eda8:	ret
  40edac:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40edb0:	add	x0, x1, #0x13
  40edb4:	movk	x9, #0x6667
  40edb8:	mov	w10, #0xa                   	// #10
  40edbc:	smulh	x11, x8, x9
  40edc0:	asr	x13, x11, #2
  40edc4:	neg	w12, w8
  40edc8:	add	x11, x13, x11, lsr #63
  40edcc:	madd	w12, w11, w10, w12
  40edd0:	add	x8, x8, #0x9
  40edd4:	add	w12, w12, #0x30
  40edd8:	cmp	x8, #0x12
  40eddc:	strb	w12, [x0], #-1
  40ede0:	mov	x8, x11
  40ede4:	b.hi	40edbc <__fxstatat@plt+0xc36c>  // b.pmore
  40ede8:	mov	w8, #0x2d                  	// #45
  40edec:	strb	w8, [x0]
  40edf0:	ret
  40edf4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  40edf8:	movk	x8, #0xcccd
  40edfc:	strb	wzr, [x1, #20]!
  40ee00:	mov	w9, #0xa                   	// #10
  40ee04:	umulh	x10, x0, x8
  40ee08:	lsr	x10, x10, #3
  40ee0c:	msub	w11, w10, w9, w0
  40ee10:	orr	w11, w11, #0x30
  40ee14:	cmp	x0, #0x9
  40ee18:	strb	w11, [x1, #-1]!
  40ee1c:	mov	x0, x10
  40ee20:	b.hi	40ee04 <__fxstatat@plt+0xc3b4>  // b.pmore
  40ee24:	mov	x0, x1
  40ee28:	ret
  40ee2c:	sub	sp, sp, #0x70
  40ee30:	stp	x29, x30, [sp, #16]
  40ee34:	stp	x28, x27, [sp, #32]
  40ee38:	stp	x26, x25, [sp, #48]
  40ee3c:	stp	x24, x23, [sp, #64]
  40ee40:	stp	x22, x21, [sp, #80]
  40ee44:	stp	x20, x19, [sp, #96]
  40ee48:	add	x29, sp, #0x10
  40ee4c:	mov	w22, w5
  40ee50:	mov	w23, w4
  40ee54:	mov	x25, x3
  40ee58:	mov	x28, x2
  40ee5c:	mov	x19, x1
  40ee60:	mov	x24, x0
  40ee64:	bl	402430 <strlen@plt>
  40ee68:	mov	x21, x0
  40ee6c:	tbnz	w22, #1, 40ef00 <__fxstatat@plt+0xc4b0>
  40ee70:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40ee74:	cmp	x0, #0x2
  40ee78:	b.cc	40ef00 <__fxstatat@plt+0xc4b0>  // b.lo, b.ul, b.last
  40ee7c:	mov	x0, xzr
  40ee80:	mov	x1, x24
  40ee84:	mov	x2, xzr
  40ee88:	str	x28, [sp, #8]
  40ee8c:	bl	402450 <mbstowcs@plt>
  40ee90:	cmn	x0, #0x1
  40ee94:	b.eq	40f08c <__fxstatat@plt+0xc63c>  // b.none
  40ee98:	add	x26, x0, #0x1
  40ee9c:	mov	x28, x0
  40eea0:	lsl	x0, x26, #2
  40eea4:	bl	4025f0 <malloc@plt>
  40eea8:	cbz	x0, 40f0a0 <__fxstatat@plt+0xc650>
  40eeac:	mov	x1, x24
  40eeb0:	mov	x2, x26
  40eeb4:	mov	x20, x0
  40eeb8:	bl	402450 <mbstowcs@plt>
  40eebc:	cbz	x0, 40f0e4 <__fxstatat@plt+0xc694>
  40eec0:	str	wzr, [x20, x28, lsl #2]
  40eec4:	ldr	w0, [x20]
  40eec8:	mov	x8, x20
  40eecc:	str	x20, [sp]
  40eed0:	cbz	w0, 40f100 <__fxstatat@plt+0xc6b0>
  40eed4:	mov	w28, wzr
  40eed8:	add	x27, x8, #0x4
  40eedc:	mov	w20, #0xfffd                	// #65533
  40eee0:	b	40eeec <__fxstatat@plt+0xc49c>
  40eee4:	ldr	w0, [x27], #4
  40eee8:	cbz	w0, 40f0b8 <__fxstatat@plt+0xc668>
  40eeec:	bl	4029c0 <iswprint@plt>
  40eef0:	cbnz	w0, 40eee4 <__fxstatat@plt+0xc494>
  40eef4:	mov	w28, #0x1                   	// #1
  40eef8:	stur	w20, [x27, #-4]
  40eefc:	b	40eee4 <__fxstatat@plt+0xc494>
  40ef00:	mov	x20, xzr
  40ef04:	mov	x10, xzr
  40ef08:	mov	x27, x21
  40ef0c:	ldr	x8, [x25]
  40ef10:	cmp	x27, x8
  40ef14:	csel	x9, x8, x27, hi  // hi = pmore
  40ef18:	csel	x21, x8, x21, hi  // hi = pmore
  40ef1c:	cmp	x8, x27
  40ef20:	sub	x8, x8, x9
  40ef24:	csel	x26, x8, xzr, hi  // hi = pmore
  40ef28:	str	x9, [x25]
  40ef2c:	cbz	w23, 40ef44 <__fxstatat@plt+0xc4f4>
  40ef30:	cmp	w23, #0x1
  40ef34:	b.ne	40ef4c <__fxstatat@plt+0xc4fc>  // b.any
  40ef38:	mov	x27, x26
  40ef3c:	mov	x26, xzr
  40ef40:	b	40ef58 <__fxstatat@plt+0xc508>
  40ef44:	mov	x27, xzr
  40ef48:	b	40ef58 <__fxstatat@plt+0xc508>
  40ef4c:	and	x8, x26, #0x1
  40ef50:	lsr	x26, x26, #1
  40ef54:	add	x27, x26, x8
  40ef58:	tst	w22, #0x4
  40ef5c:	csel	x23, x27, xzr, eq  // eq = none
  40ef60:	tst	w22, #0x8
  40ef64:	csel	x25, x26, xzr, eq  // eq = none
  40ef68:	cbz	x28, 40f050 <__fxstatat@plt+0xc600>
  40ef6c:	add	x8, x19, x28
  40ef70:	mov	x22, x24
  40ef74:	mov	x24, x28
  40ef78:	sub	x28, x8, #0x1
  40ef7c:	str	x20, [sp, #8]
  40ef80:	mov	x20, x10
  40ef84:	cmp	x28, x19
  40ef88:	mov	x0, x19
  40ef8c:	b.ls	40efd4 <__fxstatat@plt+0xc584>  // b.plast
  40ef90:	mov	x0, x19
  40ef94:	cbz	x23, 40efd4 <__fxstatat@plt+0xc584>
  40ef98:	mvn	x8, x19
  40ef9c:	add	x8, x28, x8
  40efa0:	sub	x9, x23, #0x1
  40efa4:	cmp	x9, x8
  40efa8:	csel	x8, x8, x9, hi  // hi = pmore
  40efac:	add	x2, x8, #0x1
  40efb0:	mov	w1, #0x20                  	// #32
  40efb4:	mov	x0, x19
  40efb8:	bl	402680 <memset@plt>
  40efbc:	sub	x8, x27, #0x1
  40efc0:	sub	x9, x24, #0x2
  40efc4:	cmp	x8, x9
  40efc8:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  40efcc:	add	x8, x8, x19
  40efd0:	add	x0, x8, #0x1
  40efd4:	sub	x8, x28, x0
  40efd8:	cmp	x21, x8
  40efdc:	csel	x2, x21, x8, cc  // cc = lo, ul, last
  40efe0:	mov	x3, #0xffffffffffffffff    	// #-1
  40efe4:	mov	x1, x22
  40efe8:	strb	wzr, [x0]
  40efec:	bl	402940 <__mempcpy_chk@plt>
  40eff0:	mov	x22, x0
  40eff4:	cbz	x25, 40f044 <__fxstatat@plt+0xc5f4>
  40eff8:	cmp	x22, x28
  40effc:	b.cs	40f044 <__fxstatat@plt+0xc5f4>  // b.hs, b.nlast
  40f000:	mvn	x8, x22
  40f004:	add	x8, x28, x8
  40f008:	sub	x9, x25, #0x1
  40f00c:	cmp	x9, x8
  40f010:	csel	x8, x8, x9, hi  // hi = pmore
  40f014:	add	x2, x8, #0x1
  40f018:	mov	w1, #0x20                  	// #32
  40f01c:	mov	x0, x22
  40f020:	bl	402680 <memset@plt>
  40f024:	sub	x8, x24, x22
  40f028:	add	x8, x8, x19
  40f02c:	sub	x8, x8, #0x2
  40f030:	sub	x9, x26, #0x1
  40f034:	cmp	x9, x8
  40f038:	csel	x8, x8, x9, hi  // hi = pmore
  40f03c:	add	x8, x8, x22
  40f040:	add	x22, x8, #0x1
  40f044:	mov	x10, x20
  40f048:	ldr	x20, [sp, #8]
  40f04c:	strb	wzr, [x22]
  40f050:	add	x8, x23, x21
  40f054:	add	x19, x8, x25
  40f058:	mov	x0, x10
  40f05c:	bl	402840 <free@plt>
  40f060:	mov	x0, x20
  40f064:	bl	402840 <free@plt>
  40f068:	mov	x0, x19
  40f06c:	ldp	x20, x19, [sp, #96]
  40f070:	ldp	x22, x21, [sp, #80]
  40f074:	ldp	x24, x23, [sp, #64]
  40f078:	ldp	x26, x25, [sp, #48]
  40f07c:	ldp	x28, x27, [sp, #32]
  40f080:	ldp	x29, x30, [sp, #16]
  40f084:	add	sp, sp, #0x70
  40f088:	ret
  40f08c:	mov	x20, xzr
  40f090:	tbz	w22, #0, 40f0ac <__fxstatat@plt+0xc65c>
  40f094:	mov	x10, x20
  40f098:	mov	x27, x21
  40f09c:	b	40f1cc <__fxstatat@plt+0xc77c>
  40f0a0:	ldr	x28, [sp, #8]
  40f0a4:	mov	x20, xzr
  40f0a8:	tbnz	w22, #0, 40f0f8 <__fxstatat@plt+0xc6a8>
  40f0ac:	mov	x19, #0xffffffffffffffff    	// #-1
  40f0b0:	mov	x10, x20
  40f0b4:	b	40f058 <__fxstatat@plt+0xc608>
  40f0b8:	ldr	x20, [sp]
  40f0bc:	mov	x1, x26
  40f0c0:	mov	x0, x20
  40f0c4:	bl	402620 <wcswidth@plt>
  40f0c8:	sxtw	x27, w0
  40f0cc:	tbz	w28, #0, 40f110 <__fxstatat@plt+0xc6c0>
  40f0d0:	mov	x0, xzr
  40f0d4:	mov	x1, x20
  40f0d8:	mov	x2, xzr
  40f0dc:	bl	402920 <wcstombs@plt>
  40f0e0:	b	40f124 <__fxstatat@plt+0xc6d4>
  40f0e4:	mov	x8, xzr
  40f0e8:	mov	x27, x21
  40f0ec:	mov	x10, x20
  40f0f0:	mov	x20, xzr
  40f0f4:	b	40f1cc <__fxstatat@plt+0xc77c>
  40f0f8:	mov	x10, x20
  40f0fc:	b	40ef08 <__fxstatat@plt+0xc4b8>
  40f100:	mov	x0, x8
  40f104:	mov	x1, x26
  40f108:	bl	402620 <wcswidth@plt>
  40f10c:	sxtw	x27, w0
  40f110:	ldr	x8, [x25]
  40f114:	ldr	x28, [sp, #8]
  40f118:	cmp	x27, x8
  40f11c:	b.ls	40f180 <__fxstatat@plt+0xc730>  // b.plast
  40f120:	mov	x0, x21
  40f124:	add	x28, x0, #0x1
  40f128:	mov	x0, x28
  40f12c:	bl	4025f0 <malloc@plt>
  40f130:	mov	x20, x0
  40f134:	cbz	x0, 40f18c <__fxstatat@plt+0xc73c>
  40f138:	ldr	x21, [sp]
  40f13c:	ldr	w0, [x21]
  40f140:	cbz	w0, 40f19c <__fxstatat@plt+0xc74c>
  40f144:	ldr	x24, [x25]
  40f148:	mov	x26, xzr
  40f14c:	bl	402600 <wcwidth@plt>
  40f150:	cmn	w0, #0x1
  40f154:	b.ne	40f164 <__fxstatat@plt+0xc714>  // b.any
  40f158:	mov	w8, #0xfffd                	// #65533
  40f15c:	mov	w0, #0x1                   	// #1
  40f160:	str	w8, [x21]
  40f164:	add	x27, x26, w0, sxtw
  40f168:	cmp	x27, x24
  40f16c:	b.hi	40f1a4 <__fxstatat@plt+0xc754>  // b.pmore
  40f170:	ldr	w0, [x21, #4]!
  40f174:	mov	x26, x27
  40f178:	cbnz	w0, 40f14c <__fxstatat@plt+0xc6fc>
  40f17c:	b	40f1a8 <__fxstatat@plt+0xc758>
  40f180:	ldr	x10, [sp]
  40f184:	mov	x20, xzr
  40f188:	b	40ef0c <__fxstatat@plt+0xc4bc>
  40f18c:	ldr	x10, [sp]
  40f190:	tbnz	w22, #0, 40f1cc <__fxstatat@plt+0xc77c>
  40f194:	mov	x19, #0xffffffffffffffff    	// #-1
  40f198:	b	40f058 <__fxstatat@plt+0xc608>
  40f19c:	mov	x27, xzr
  40f1a0:	b	40f1a8 <__fxstatat@plt+0xc758>
  40f1a4:	mov	x27, x26
  40f1a8:	str	wzr, [x21]
  40f1ac:	ldr	x21, [sp]
  40f1b0:	mov	x0, x20
  40f1b4:	mov	x2, x28
  40f1b8:	mov	x1, x21
  40f1bc:	bl	402920 <wcstombs@plt>
  40f1c0:	mov	x10, x21
  40f1c4:	mov	x21, x0
  40f1c8:	mov	x24, x20
  40f1cc:	ldr	x28, [sp, #8]
  40f1d0:	b	40ef0c <__fxstatat@plt+0xc4bc>
  40f1d4:	stp	x29, x30, [sp, #-80]!
  40f1d8:	stp	x26, x25, [sp, #16]
  40f1dc:	stp	x24, x23, [sp, #32]
  40f1e0:	stp	x22, x21, [sp, #48]
  40f1e4:	stp	x20, x19, [sp, #64]
  40f1e8:	ldr	x26, [x1]
  40f1ec:	mov	w19, w3
  40f1f0:	mov	w20, w2
  40f1f4:	mov	x21, x1
  40f1f8:	mov	x22, x0
  40f1fc:	mov	x23, xzr
  40f200:	mov	x0, x26
  40f204:	mov	x24, x26
  40f208:	mov	x29, sp
  40f20c:	cmp	x0, x24
  40f210:	b.cc	40f26c <__fxstatat@plt+0xc81c>  // b.lo, b.ul, b.last
  40f214:	add	x24, x0, #0x1
  40f218:	mov	x0, x23
  40f21c:	mov	x1, x24
  40f220:	bl	4026f0 <realloc@plt>
  40f224:	cbz	x0, 40f260 <__fxstatat@plt+0xc810>
  40f228:	mov	x25, x0
  40f22c:	mov	x0, x22
  40f230:	mov	x1, x25
  40f234:	mov	x2, x24
  40f238:	mov	x3, x21
  40f23c:	mov	w4, w20
  40f240:	mov	w5, w19
  40f244:	str	x26, [x21]
  40f248:	bl	40ee2c <__fxstatat@plt+0xc3dc>
  40f24c:	cmn	x0, #0x1
  40f250:	mov	x23, x25
  40f254:	b.ne	40f20c <__fxstatat@plt+0xc7bc>  // b.any
  40f258:	mov	x0, x25
  40f25c:	b	40f264 <__fxstatat@plt+0xc814>
  40f260:	mov	x0, x23
  40f264:	bl	402840 <free@plt>
  40f268:	mov	x23, xzr
  40f26c:	mov	x0, x23
  40f270:	ldp	x20, x19, [sp, #64]
  40f274:	ldp	x22, x21, [sp, #48]
  40f278:	ldp	x24, x23, [sp, #32]
  40f27c:	ldp	x26, x25, [sp, #16]
  40f280:	ldp	x29, x30, [sp], #80
  40f284:	ret
  40f288:	stp	x29, x30, [sp, #-32]!
  40f28c:	stp	x20, x19, [sp, #16]
  40f290:	mov	x29, sp
  40f294:	mov	w19, w1
  40f298:	mov	x20, x0
  40f29c:	bl	402430 <strlen@plt>
  40f2a0:	mov	x1, x0
  40f2a4:	mov	x0, x20
  40f2a8:	mov	w2, w19
  40f2ac:	ldp	x20, x19, [sp, #16]
  40f2b0:	ldp	x29, x30, [sp], #32
  40f2b4:	b	40f2b8 <__fxstatat@plt+0xc868>
  40f2b8:	sub	sp, sp, #0x60
  40f2bc:	stp	x29, x30, [sp, #16]
  40f2c0:	str	x25, [sp, #32]
  40f2c4:	stp	x24, x23, [sp, #48]
  40f2c8:	stp	x22, x21, [sp, #64]
  40f2cc:	stp	x20, x19, [sp, #80]
  40f2d0:	add	x29, sp, #0x10
  40f2d4:	mov	w19, w2
  40f2d8:	mov	x21, x1
  40f2dc:	mov	x20, x0
  40f2e0:	add	x23, x0, x1
  40f2e4:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40f2e8:	cmp	x0, #0x1
  40f2ec:	b.ls	40f3dc <__fxstatat@plt+0xc98c>  // b.plast
  40f2f0:	cmp	x21, #0x1
  40f2f4:	b.lt	40f424 <__fxstatat@plt+0xc9d4>  // b.tstop
  40f2f8:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x6060>
  40f2fc:	mov	w21, wzr
  40f300:	mov	w24, #0x7fffffff            	// #2147483647
  40f304:	add	x25, x25, #0x7d8
  40f308:	ldrb	w8, [x20]
  40f30c:	sub	w8, w8, #0x20
  40f310:	cmp	w8, #0x5e
  40f314:	b.hi	40f33c <__fxstatat@plt+0xc8ec>  // b.pmore
  40f318:	adr	x9, 40f328 <__fxstatat@plt+0xc8d8>
  40f31c:	ldrb	w10, [x25, x8]
  40f320:	add	x9, x9, x10, lsl #2
  40f324:	br	x9
  40f328:	add	x20, x20, #0x1
  40f32c:	add	w21, w21, #0x1
  40f330:	cmp	x20, x23
  40f334:	b.cc	40f308 <__fxstatat@plt+0xc8b8>  // b.lo, b.ul, b.last
  40f338:	b	40f430 <__fxstatat@plt+0xc9e0>
  40f33c:	str	xzr, [x29, #24]
  40f340:	b	40f364 <__fxstatat@plt+0xc914>
  40f344:	sub	w8, w24, w21
  40f348:	cmp	w0, w8
  40f34c:	b.gt	40f42c <__fxstatat@plt+0xc9dc>
  40f350:	add	w21, w0, w21
  40f354:	add	x0, x29, #0x18
  40f358:	add	x20, x20, x22
  40f35c:	bl	402780 <mbsinit@plt>
  40f360:	cbnz	w0, 40f330 <__fxstatat@plt+0xc8e0>
  40f364:	sub	x2, x23, x20
  40f368:	sub	x0, x29, #0x4
  40f36c:	add	x3, x29, #0x18
  40f370:	mov	x1, x20
  40f374:	bl	413bc8 <__fxstatat@plt+0x11178>
  40f378:	cbz	x0, 40f394 <__fxstatat@plt+0xc944>
  40f37c:	mov	x22, x0
  40f380:	cmn	x0, #0x2
  40f384:	b.eq	40f3c4 <__fxstatat@plt+0xc974>  // b.none
  40f388:	cmn	x22, #0x1
  40f38c:	b.ne	40f398 <__fxstatat@plt+0xc948>  // b.any
  40f390:	b	40f3d0 <__fxstatat@plt+0xc980>
  40f394:	mov	w22, #0x1                   	// #1
  40f398:	ldur	w0, [x29, #-4]
  40f39c:	bl	402600 <wcwidth@plt>
  40f3a0:	tbz	w0, #31, 40f344 <__fxstatat@plt+0xc8f4>
  40f3a4:	tbnz	w19, #1, 40f3d4 <__fxstatat@plt+0xc984>
  40f3a8:	ldur	w0, [x29, #-4]
  40f3ac:	bl	402520 <iswcntrl@plt>
  40f3b0:	cbnz	w0, 40f354 <__fxstatat@plt+0xc904>
  40f3b4:	cmp	w21, w24
  40f3b8:	b.eq	40f42c <__fxstatat@plt+0xc9dc>  // b.none
  40f3bc:	add	w21, w21, #0x1
  40f3c0:	b	40f354 <__fxstatat@plt+0xc904>
  40f3c4:	mov	x20, x23
  40f3c8:	tbz	w19, #0, 40f32c <__fxstatat@plt+0xc8dc>
  40f3cc:	b	40f3d4 <__fxstatat@plt+0xc984>
  40f3d0:	tbz	w19, #0, 40f328 <__fxstatat@plt+0xc8d8>
  40f3d4:	mov	w21, #0xffffffff            	// #-1
  40f3d8:	b	40f430 <__fxstatat@plt+0xc9e0>
  40f3dc:	cmp	x21, #0x1
  40f3e0:	b.lt	40f424 <__fxstatat@plt+0xc9d4>  // b.tstop
  40f3e4:	bl	402820 <__ctype_b_loc@plt>
  40f3e8:	ldr	x8, [x0]
  40f3ec:	mov	w21, wzr
  40f3f0:	b	40f3fc <__fxstatat@plt+0xc9ac>
  40f3f4:	cmp	x20, x23
  40f3f8:	b.cs	40f430 <__fxstatat@plt+0xc9e0>  // b.hs, b.nlast
  40f3fc:	ldrb	w9, [x20], #1
  40f400:	ldrh	w9, [x8, x9, lsl #1]
  40f404:	tbnz	w9, #14, 40f410 <__fxstatat@plt+0xc9c0>
  40f408:	tbnz	w19, #1, 40f3d4 <__fxstatat@plt+0xc984>
  40f40c:	tbnz	w9, #1, 40f3f4 <__fxstatat@plt+0xc9a4>
  40f410:	mov	w9, #0x7fffffff            	// #2147483647
  40f414:	cmp	w21, w9
  40f418:	b.eq	40f42c <__fxstatat@plt+0xc9dc>  // b.none
  40f41c:	add	w21, w21, #0x1
  40f420:	b	40f3f4 <__fxstatat@plt+0xc9a4>
  40f424:	mov	w21, wzr
  40f428:	b	40f430 <__fxstatat@plt+0xc9e0>
  40f42c:	mov	w21, #0x7fffffff            	// #2147483647
  40f430:	mov	w0, w21
  40f434:	ldp	x20, x19, [sp, #80]
  40f438:	ldp	x22, x21, [sp, #64]
  40f43c:	ldp	x24, x23, [sp, #48]
  40f440:	ldr	x25, [sp, #32]
  40f444:	ldp	x29, x30, [sp, #16]
  40f448:	add	sp, sp, #0x60
  40f44c:	ret
  40f450:	add	x8, x0, x1, lsl #3
  40f454:	mov	x3, x2
  40f458:	mov	x2, x8
  40f45c:	b	40f460 <__fxstatat@plt+0xca10>
  40f460:	sub	sp, sp, #0x90
  40f464:	stp	x20, x19, [sp, #128]
  40f468:	mov	x20, x3
  40f46c:	cmp	x1, #0x2
  40f470:	mov	x19, x0
  40f474:	stp	x29, x30, [sp, #48]
  40f478:	stp	x28, x27, [sp, #64]
  40f47c:	stp	x26, x25, [sp, #80]
  40f480:	stp	x24, x23, [sp, #96]
  40f484:	stp	x22, x21, [sp, #112]
  40f488:	add	x29, sp, #0x30
  40f48c:	b.hi	40f4b4 <__fxstatat@plt+0xca64>  // b.pmore
  40f490:	b.ne	40f67c <__fxstatat@plt+0xcc2c>  // b.any
  40f494:	ldp	x21, x22, [x19]
  40f498:	mov	x0, x21
  40f49c:	mov	x1, x22
  40f4a0:	blr	x20
  40f4a4:	cmp	w0, #0x1
  40f4a8:	b.lt	40f67c <__fxstatat@plt+0xcc2c>  // b.tstop
  40f4ac:	stp	x22, x21, [x19]
  40f4b0:	b	40f67c <__fxstatat@plt+0xcc2c>
  40f4b4:	lsr	x28, x1, #1
  40f4b8:	add	x21, x19, x28, lsl #3
  40f4bc:	mov	x22, x1
  40f4c0:	sub	x1, x1, x28
  40f4c4:	mov	x0, x21
  40f4c8:	mov	x3, x20
  40f4cc:	mov	x27, x2
  40f4d0:	bl	40f460 <__fxstatat@plt+0xca10>
  40f4d4:	cmp	x22, #0x3
  40f4d8:	stp	x27, x28, [x29, #-16]
  40f4dc:	b.ne	40f4ec <__fxstatat@plt+0xca9c>  // b.any
  40f4e0:	ldr	x24, [x19]
  40f4e4:	str	x24, [x27]
  40f4e8:	b	40f5bc <__fxstatat@plt+0xcb6c>
  40f4ec:	lsr	x23, x22, #2
  40f4f0:	add	x25, x19, x23, lsl #3
  40f4f4:	sub	x1, x28, x23
  40f4f8:	mov	x0, x25
  40f4fc:	mov	x2, x27
  40f500:	mov	x3, x20
  40f504:	str	x21, [sp, #8]
  40f508:	bl	40f460 <__fxstatat@plt+0xca10>
  40f50c:	mov	x0, x19
  40f510:	mov	x1, x23
  40f514:	mov	x2, x27
  40f518:	mov	x3, x20
  40f51c:	bl	40f460 <__fxstatat@plt+0xca10>
  40f520:	ldr	x26, [x25]
  40f524:	mov	x8, x28
  40f528:	mov	x21, xzr
  40f52c:	add	x28, x19, #0x8
  40f530:	sub	x24, x8, #0x1
  40f534:	mov	x25, x27
  40f538:	str	x23, [sp, #16]
  40f53c:	ldr	x27, [x19, x21, lsl #3]
  40f540:	mov	x0, x27
  40f544:	mov	x1, x26
  40f548:	add	x25, x25, #0x8
  40f54c:	blr	x20
  40f550:	cmp	w0, #0x0
  40f554:	b.le	40f570 <__fxstatat@plt+0xcb20>
  40f558:	cmp	x24, x23
  40f55c:	stur	x26, [x25, #-8]
  40f560:	b.eq	40f594 <__fxstatat@plt+0xcb44>  // b.none
  40f564:	ldr	x26, [x28, x23, lsl #3]
  40f568:	add	x23, x23, #0x1
  40f56c:	b	40f540 <__fxstatat@plt+0xcaf0>
  40f570:	ldr	x8, [sp, #16]
  40f574:	add	x21, x21, #0x1
  40f578:	stur	x27, [x25, #-8]
  40f57c:	cmp	x21, x8
  40f580:	b.ne	40f53c <__fxstatat@plt+0xcaec>  // b.any
  40f584:	ldur	x28, [x29, #-8]
  40f588:	mov	x21, x23
  40f58c:	str	x28, [sp, #16]
  40f590:	b	40f598 <__fxstatat@plt+0xcb48>
  40f594:	ldur	x28, [x29, #-8]
  40f598:	ldr	x8, [sp, #16]
  40f59c:	add	x1, x19, x21, lsl #3
  40f5a0:	mov	x0, x25
  40f5a4:	sub	x8, x8, x21
  40f5a8:	lsl	x2, x8, #3
  40f5ac:	bl	4023c0 <memcpy@plt>
  40f5b0:	ldur	x8, [x29, #-16]
  40f5b4:	ldr	x21, [sp, #8]
  40f5b8:	ldr	x24, [x8]
  40f5bc:	ldr	x23, [x21]
  40f5c0:	mov	w8, #0x1                   	// #1
  40f5c4:	mov	x25, xzr
  40f5c8:	mov	x9, xzr
  40f5cc:	add	x10, x19, #0x8
  40f5d0:	sub	x8, x8, x22
  40f5d4:	stp	x10, x19, [sp, #16]
  40f5d8:	str	x8, [sp, #8]
  40f5dc:	mov	x27, xzr
  40f5e0:	add	x21, x10, x28, lsl #3
  40f5e4:	add	x22, x8, x28
  40f5e8:	mov	x26, x9
  40f5ec:	add	x19, x19, x9, lsl #3
  40f5f0:	mov	x0, x24
  40f5f4:	mov	x1, x23
  40f5f8:	blr	x20
  40f5fc:	cmp	w0, #0x0
  40f600:	b.le	40f61c <__fxstatat@plt+0xcbcc>
  40f604:	cmn	x22, x27
  40f608:	str	x23, [x19, x27, lsl #3]
  40f60c:	b.eq	40f654 <__fxstatat@plt+0xcc04>  // b.none
  40f610:	ldr	x23, [x21, x27, lsl #3]
  40f614:	add	x27, x27, #0x1
  40f618:	b	40f5f0 <__fxstatat@plt+0xcba0>
  40f61c:	ldr	x19, [sp, #24]
  40f620:	ldur	x9, [x29, #-8]
  40f624:	add	x25, x25, #0x1
  40f628:	add	x8, x19, x26, lsl #3
  40f62c:	cmp	x25, x9
  40f630:	str	x24, [x8, x27, lsl #3]
  40f634:	b.eq	40f67c <__fxstatat@plt+0xcc2c>  // b.none
  40f638:	ldur	x8, [x29, #-16]
  40f63c:	add	x28, x28, x27
  40f640:	ldr	x24, [x8, x25, lsl #3]
  40f644:	add	x8, x26, x27
  40f648:	add	x9, x8, #0x1
  40f64c:	ldp	x8, x10, [sp, #8]
  40f650:	b	40f5dc <__fxstatat@plt+0xcb8c>
  40f654:	ldur	x9, [x29, #-16]
  40f658:	ldr	x8, [sp, #24]
  40f65c:	add	x1, x9, x25, lsl #3
  40f660:	ldur	x9, [x29, #-8]
  40f664:	add	x8, x8, x26, lsl #3
  40f668:	add	x8, x8, x27, lsl #3
  40f66c:	add	x0, x8, #0x8
  40f670:	sub	x9, x9, x25
  40f674:	lsl	x2, x9, #3
  40f678:	bl	4023c0 <memcpy@plt>
  40f67c:	ldp	x20, x19, [sp, #128]
  40f680:	ldp	x22, x21, [sp, #112]
  40f684:	ldp	x24, x23, [sp, #96]
  40f688:	ldp	x26, x25, [sp, #80]
  40f68c:	ldp	x28, x27, [sp, #64]
  40f690:	ldp	x29, x30, [sp, #48]
  40f694:	add	sp, sp, #0x90
  40f698:	ret
  40f69c:	sub	sp, sp, #0x20
  40f6a0:	mov	x7, x4
  40f6a4:	mov	w6, #0xffffffff            	// #-1
  40f6a8:	str	w5, [sp]
  40f6ac:	mov	w4, wzr
  40f6b0:	mov	w5, wzr
  40f6b4:	stp	x29, x30, [sp, #16]
  40f6b8:	add	x29, sp, #0x10
  40f6bc:	bl	40f6cc <__fxstatat@plt+0xcc7c>
  40f6c0:	ldp	x29, x30, [sp, #16]
  40f6c4:	add	sp, sp, #0x20
  40f6c8:	ret
  40f6cc:	stp	x29, x30, [sp, #-96]!
  40f6d0:	stp	x28, x27, [sp, #16]
  40f6d4:	stp	x26, x25, [sp, #32]
  40f6d8:	stp	x24, x23, [sp, #48]
  40f6dc:	stp	x22, x21, [sp, #64]
  40f6e0:	stp	x20, x19, [sp, #80]
  40f6e4:	mov	x29, sp
  40f6e8:	sub	sp, sp, #0x4b0
  40f6ec:	ldr	x8, [x3, #48]
  40f6f0:	ldr	w9, [x3, #8]
  40f6f4:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  40f6f8:	mov	x25, x2
  40f6fc:	add	x10, x10, #0x2c1
  40f700:	cmp	x8, #0x0
  40f704:	csel	x12, x10, x8, eq  // eq = none
  40f708:	ldrb	w8, [x25]
  40f70c:	mov	w11, #0xc                   	// #12
  40f710:	cmp	w9, #0x0
  40f714:	csel	w10, w11, w9, eq  // eq = none
  40f718:	subs	w9, w9, #0xc
  40f71c:	mov	x2, x0
  40f720:	csel	w9, w9, w10, gt
  40f724:	str	x7, [sp, #56]
  40f728:	str	w4, [sp, #116]
  40f72c:	str	x1, [sp, #120]
  40f730:	cbz	w8, 40f798 <__fxstatat@plt+0xcd48>
  40f734:	stp	w9, w5, [sp, #32]
  40f738:	ldr	w9, [x29, #96]
  40f73c:	sub	x10, x29, #0x28
  40f740:	add	x11, sp, #0x80
  40f744:	str	x12, [sp, #24]
  40f748:	str	w9, [sp, #52]
  40f74c:	sub	x9, x29, #0x20
  40f750:	add	x9, x9, #0x17
  40f754:	str	x9, [sp, #80]
  40f758:	orr	x9, x10, #0x2
  40f75c:	str	x9, [sp, #72]
  40f760:	orr	x9, x10, #0x3
  40f764:	sub	x12, x12, #0x1
  40f768:	str	x9, [sp, #64]
  40f76c:	orr	x9, x11, #0x1
  40f770:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x6060>
  40f774:	mov	w22, w6
  40f778:	mov	x0, xzr
  40f77c:	mov	w1, #0xa                   	// #10
  40f780:	stp	x12, x9, [sp, #8]
  40f784:	sub	x9, x11, #0x1
  40f788:	add	x20, x20, #0x838
  40f78c:	str	x3, [sp, #96]
  40f790:	str	x9, [sp, #40]
  40f794:	b	40f7e8 <__fxstatat@plt+0xcd98>
  40f798:	mov	x0, xzr
  40f79c:	ldr	x8, [sp, #120]
  40f7a0:	cbz	x8, 410c54 <__fxstatat@plt+0xe204>
  40f7a4:	cbz	x2, 410c54 <__fxstatat@plt+0xe204>
  40f7a8:	strb	wzr, [x2]
  40f7ac:	b	410c54 <__fxstatat@plt+0xe204>
  40f7b0:	mov	w1, #0x30                  	// #48
  40f7b4:	mov	x0, x2
  40f7b8:	mov	x22, x2
  40f7bc:	mov	x2, x21
  40f7c0:	bl	402680 <memset@plt>
  40f7c4:	add	x2, x22, x21
  40f7c8:	mov	x0, x19
  40f7cc:	mov	w1, #0xa                   	// #10
  40f7d0:	mov	w8, #0x9                   	// #9
  40f7d4:	strb	w8, [x2], #1
  40f7d8:	add	x0, x0, x23
  40f7dc:	ldrb	w8, [x25, #1]!
  40f7e0:	mov	w22, #0xffffffff            	// #-1
  40f7e4:	cbz	w8, 40f79c <__fxstatat@plt+0xcd4c>
  40f7e8:	and	w9, w8, #0xff
  40f7ec:	cmp	w9, #0x25
  40f7f0:	b.ne	40f858 <__fxstatat@plt+0xce08>  // b.any
  40f7f4:	ldr	w3, [sp, #116]
  40f7f8:	mov	w24, wzr
  40f7fc:	mov	w28, wzr
  40f800:	add	x25, x25, #0x1
  40f804:	b	40f818 <__fxstatat@plt+0xcdc8>
  40f808:	cmp	w8, #0x5f
  40f80c:	b.ne	40f844 <__fxstatat@plt+0xcdf4>  // b.any
  40f810:	add	x25, x25, #0x1
  40f814:	mov	w28, w8
  40f818:	ldrb	w8, [x25]
  40f81c:	sub	w9, w8, #0x23
  40f820:	cmp	w9, #0xd
  40f824:	b.hi	40f808 <__fxstatat@plt+0xcdb8>  // b.pmore
  40f828:	adr	x10, 40f810 <__fxstatat@plt+0xcdc0>
  40f82c:	ldrb	w11, [x20, x9]
  40f830:	add	x10, x10, x11, lsl #2
  40f834:	br	x10
  40f838:	mov	w24, #0x1                   	// #1
  40f83c:	add	x25, x25, #0x1
  40f840:	b	40f818 <__fxstatat@plt+0xcdc8>
  40f844:	cmp	w8, #0x5e
  40f848:	b.ne	40f8b8 <__fxstatat@plt+0xce68>  // b.any
  40f84c:	mov	w3, #0x1                   	// #1
  40f850:	add	x25, x25, #0x1
  40f854:	b	40f818 <__fxstatat@plt+0xcdc8>
  40f858:	ldr	x10, [sp, #120]
  40f85c:	bic	w9, w22, w22, asr #31
  40f860:	cmp	w9, #0x1
  40f864:	csinc	w23, w9, wzr, hi  // hi = pmore
  40f868:	sub	x10, x10, x0
  40f86c:	cmp	x10, x23
  40f870:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  40f874:	cbz	x2, 40f7d8 <__fxstatat@plt+0xcd88>
  40f878:	cmp	w9, #0x2
  40f87c:	b.cc	40f7d4 <__fxstatat@plt+0xcd84>  // b.lo, b.ul, b.last
  40f880:	sxtw	x8, w22
  40f884:	sub	x21, x8, #0x1
  40f888:	mov	w1, #0x20                  	// #32
  40f88c:	mov	x19, x0
  40f890:	mov	x0, x2
  40f894:	mov	x22, x2
  40f898:	mov	x2, x21
  40f89c:	bl	402680 <memset@plt>
  40f8a0:	ldrb	w8, [x25]
  40f8a4:	mov	x2, x22
  40f8a8:	mov	w1, #0xa                   	// #10
  40f8ac:	mov	x0, x19
  40f8b0:	add	x2, x22, x21
  40f8b4:	b	40f7d4 <__fxstatat@plt+0xcd84>
  40f8b8:	sub	w9, w8, #0x30
  40f8bc:	cmp	w9, #0x9
  40f8c0:	b.hi	40f910 <__fxstatat@plt+0xcec0>  // b.pmore
  40f8c4:	mov	w10, #0xcccc                	// #52428
  40f8c8:	mov	w22, wzr
  40f8cc:	movk	w10, #0xccc, lsl #16
  40f8d0:	b	40f8e8 <__fxstatat@plt+0xce98>
  40f8d4:	mov	w22, #0x7fffffff            	// #2147483647
  40f8d8:	ldrb	w8, [x25, #1]!
  40f8dc:	sub	w9, w8, #0x30
  40f8e0:	cmp	w9, #0xa
  40f8e4:	b.cs	40f910 <__fxstatat@plt+0xcec0>  // b.hs, b.nlast
  40f8e8:	cmp	w22, w10
  40f8ec:	b.gt	40f8d4 <__fxstatat@plt+0xce84>
  40f8f0:	b.ne	40f900 <__fxstatat@plt+0xceb0>  // b.any
  40f8f4:	and	w9, w8, #0xff
  40f8f8:	cmp	w9, #0x37
  40f8fc:	b.hi	40f8d4 <__fxstatat@plt+0xce84>  // b.pmore
  40f900:	mul	w9, w22, w1
  40f904:	add	w8, w9, w8, uxtb
  40f908:	sub	w22, w8, #0x30
  40f90c:	b	40f8d8 <__fxstatat@plt+0xce88>
  40f910:	cmp	w8, #0x4f
  40f914:	b.eq	40f920 <__fxstatat@plt+0xced0>  // b.none
  40f918:	cmp	w8, #0x45
  40f91c:	b.ne	40f938 <__fxstatat@plt+0xcee8>  // b.any
  40f920:	ldrb	w10, [x25, #1]!
  40f924:	mov	w9, w8
  40f928:	mov	w8, w10
  40f92c:	cmp	w8, #0x7a
  40f930:	b.ls	40f944 <__fxstatat@plt+0xcef4>  // b.plast
  40f934:	b	41071c <__fxstatat@plt+0xdccc>
  40f938:	mov	w9, wzr
  40f93c:	cmp	w8, #0x7a
  40f940:	b.hi	41071c <__fxstatat@plt+0xdccc>  // b.pmore
  40f944:	adrp	x14, 41a000 <_obstack_memory_used@@Base+0x6060>
  40f948:	add	x14, x14, #0x846
  40f94c:	adr	x12, 40f978 <__fxstatat@plt+0xcf28>
  40f950:	ldrh	w13, [x14, x8, lsl #1]
  40f954:	add	x12, x12, x13, lsl #2
  40f958:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5060>
  40f95c:	mov	w27, wzr
  40f960:	mov	w19, wzr
  40f964:	mov	w11, wzr
  40f968:	mov	x10, xzr
  40f96c:	mov	w21, #0xffffffff            	// #-1
  40f970:	add	x26, x26, #0xed4
  40f974:	br	x12
  40f978:	cmp	w9, #0x45
  40f97c:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40f980:	ldr	x10, [sp, #96]
  40f984:	mov	w13, #0xffffff9c            	// #-100
  40f988:	mov	w14, #0x12c                 	// #300
  40f98c:	ldr	w12, [x10, #20]
  40f990:	ldp	w10, w11, [x10, #24]
  40f994:	cmp	w12, #0x0
  40f998:	sub	w15, w11, w10
  40f99c:	csel	w13, w14, w13, lt  // lt = tstop
  40f9a0:	add	w14, w15, #0x17e
  40f9a4:	mov	w15, #0x2493                	// #9363
  40f9a8:	movk	w15, #0x9249, lsl #16
  40f9ac:	smull	x15, w14, w15
  40f9b0:	lsr	x15, x15, #32
  40f9b4:	add	w15, w15, w14
  40f9b8:	asr	w16, w15, #2
  40f9bc:	add	w15, w16, w15, lsr #31
  40f9c0:	lsl	w16, w15, #3
  40f9c4:	sub	w15, w16, w15
  40f9c8:	sub	w14, w15, w14
  40f9cc:	add	w14, w11, w14
  40f9d0:	adds	w14, w14, #0x3
  40f9d4:	add	w15, w13, w12
  40f9d8:	b.mi	4101cc <__fxstatat@plt+0xd77c>  // b.first
  40f9dc:	tst	w15, #0x3
  40f9e0:	mov	w13, #0x16d                 	// #365
  40f9e4:	b.ne	40fa20 <__fxstatat@plt+0xcfd0>  // b.any
  40f9e8:	mov	w16, #0x5c29                	// #23593
  40f9ec:	mov	w17, #0xb850                	// #47184
  40f9f0:	movk	w16, #0xc28f, lsl #16
  40f9f4:	movk	w17, #0x51e, lsl #16
  40f9f8:	mov	w18, #0xd70b                	// #55051
  40f9fc:	madd	w15, w15, w16, w17
  40fa00:	movk	w18, #0xa3, lsl #16
  40fa04:	ror	w16, w15, #2
  40fa08:	ror	w15, w15, #4
  40fa0c:	cmp	w15, w18
  40fa10:	mov	w15, #0x5c28                	// #23592
  40fa14:	movk	w15, #0x28f, lsl #16
  40fa18:	ccmp	w16, w15, #0x2, cs  // cs = hs, nlast
  40fa1c:	cinc	w13, w13, hi  // hi = pmore
  40fa20:	add	w13, w10, w13
  40fa24:	sub	w11, w11, w13
  40fa28:	mov	w13, #0x2493                	// #9363
  40fa2c:	movk	w13, #0x9249, lsl #16
  40fa30:	add	w11, w11, #0x17e
  40fa34:	smull	x13, w11, w13
  40fa38:	lsr	x13, x13, #32
  40fa3c:	add	w11, w13, w11
  40fa40:	asr	w13, w11, #2
  40fa44:	add	w11, w13, w11, lsr #31
  40fa48:	lsl	w13, w11, #3
  40fa4c:	sub	w11, w13, w11
  40fa50:	add	w10, w10, w11
  40fa54:	sub	w10, w10, #0x17b
  40fa58:	mvn	w11, w10
  40fa5c:	cmp	w10, #0x0
  40fa60:	lsr	w13, w11, #31
  40fa64:	csel	w10, w10, w14, ge  // ge = tcont
  40fa68:	cmp	w8, #0x47
  40fa6c:	b.eq	41025c <__fxstatat@plt+0xd80c>  // b.none
  40fa70:	cmp	w8, #0x67
  40fa74:	b.ne	41027c <__fxstatat@plt+0xd82c>  // b.any
  40fa78:	mov	w10, #0x851f                	// #34079
  40fa7c:	movk	w10, #0x51eb, lsl #16
  40fa80:	smull	x14, w12, w10
  40fa84:	lsr	x15, x14, #63
  40fa88:	asr	x14, x14, #37
  40fa8c:	mov	w11, #0x64                  	// #100
  40fa90:	add	w14, w14, w15
  40fa94:	msub	w14, w14, w11, w12
  40fa98:	add	w14, w13, w14
  40fa9c:	smull	x10, w14, w10
  40faa0:	lsr	x15, x10, #63
  40faa4:	asr	x10, x10, #37
  40faa8:	add	w10, w10, w15
  40faac:	msub	w10, w10, w11, w14
  40fab0:	tbnz	w10, #31, 410910 <__fxstatat@plt+0xdec0>
  40fab4:	mov	w11, wzr
  40fab8:	b	410928 <__fxstatat@plt+0xded8>
  40fabc:	cmp	w9, #0x45
  40fac0:	orr	w3, w24, w3
  40fac4:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fac8:	mov	w27, wzr
  40facc:	mov	w19, wzr
  40fad0:	b	4102c4 <__fxstatat@plt+0xd874>
  40fad4:	sub	x25, x25, #0x1
  40fad8:	b	41071c <__fxstatat@plt+0xdccc>
  40fadc:	cbnz	w9, 41071c <__fxstatat@plt+0xdccc>
  40fae0:	ldr	x9, [sp, #120]
  40fae4:	bic	w8, w22, w22, asr #31
  40fae8:	cmp	w8, #0x1
  40faec:	csinc	w23, w8, wzr, hi  // hi = pmore
  40faf0:	sub	x9, x9, x0
  40faf4:	cmp	x9, x23
  40faf8:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  40fafc:	cbz	x2, 40f7d8 <__fxstatat@plt+0xcd88>
  40fb00:	cmp	w8, #0x2
  40fb04:	b.cc	4109d8 <__fxstatat@plt+0xdf88>  // b.lo, b.ul, b.last
  40fb08:	sxtw	x9, w22
  40fb0c:	and	w8, w28, #0xff
  40fb10:	cmp	w8, #0x30
  40fb14:	sub	x21, x9, #0x1
  40fb18:	b.eq	40fb24 <__fxstatat@plt+0xd0d4>  // b.none
  40fb1c:	cmp	w8, #0x2b
  40fb20:	b.ne	410c10 <__fxstatat@plt+0xe1c0>  // b.any
  40fb24:	mov	w1, #0x30                  	// #48
  40fb28:	b	410c14 <__fxstatat@plt+0xe1c4>
  40fb2c:	mov	w10, #0x1                   	// #1
  40fb30:	ldrb	w11, [x25, x10]
  40fb34:	cmp	w11, #0x3a
  40fb38:	b.ne	410108 <__fxstatat@plt+0xd6b8>  // b.any
  40fb3c:	add	x10, x10, #0x1
  40fb40:	b	40fb30 <__fxstatat@plt+0xd0e0>
  40fb44:	cbnz	w9, 41071c <__fxstatat@plt+0xdccc>
  40fb48:	mov	w27, wzr
  40fb4c:	mov	w19, wzr
  40fb50:	orr	w3, w24, w3
  40fb54:	mov	w8, #0x41                  	// #65
  40fb58:	b	4102c4 <__fxstatat@plt+0xd874>
  40fb5c:	cmp	w9, #0x45
  40fb60:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fb64:	mov	w27, wzr
  40fb68:	mov	w19, wzr
  40fb6c:	orr	w3, w24, w3
  40fb70:	mov	w8, #0x42                  	// #66
  40fb74:	b	4102c4 <__fxstatat@plt+0xd874>
  40fb78:	cmp	w9, #0x45
  40fb7c:	b.ne	410680 <__fxstatat@plt+0xdc30>  // b.any
  40fb80:	mov	w27, wzr
  40fb84:	mov	w19, wzr
  40fb88:	mov	w8, #0x43                  	// #67
  40fb8c:	b	4102c4 <__fxstatat@plt+0xd874>
  40fb90:	cbnz	w9, 41071c <__fxstatat@plt+0xdccc>
  40fb94:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x6060>
  40fb98:	add	x26, x26, #0x944
  40fb9c:	b	40fca0 <__fxstatat@plt+0xd250>
  40fba0:	cbnz	w9, 41071c <__fxstatat@plt+0xdccc>
  40fba4:	cmp	w28, #0x0
  40fba8:	cset	w11, eq  // eq = none
  40fbac:	cmp	w22, #0x0
  40fbb0:	mov	w8, #0x6                   	// #6
  40fbb4:	cset	w12, lt  // lt = tstop
  40fbb8:	cmp	w22, #0x6
  40fbbc:	csel	w8, w22, w8, gt
  40fbc0:	mov	w9, #0x4                   	// #4
  40fbc4:	mov	w10, #0x2b                  	// #43
  40fbc8:	tst	w11, w12
  40fbcc:	sub	w8, w8, #0x6
  40fbd0:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x6060>
  40fbd4:	csel	w28, w10, w28, ne  // ne = any
  40fbd8:	csel	w21, w9, w8, ne  // ne = any
  40fbdc:	add	x26, x26, #0x94d
  40fbe0:	b	40fca4 <__fxstatat@plt+0xd254>
  40fbe4:	cmp	w9, #0x45
  40fbe8:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fbec:	ldr	x10, [sp, #96]
  40fbf0:	ldr	w10, [x10, #8]
  40fbf4:	b	41029c <__fxstatat@plt+0xd84c>
  40fbf8:	cmp	w9, #0x45
  40fbfc:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fc00:	ldr	w10, [sp, #32]
  40fc04:	b	41029c <__fxstatat@plt+0xd84c>
  40fc08:	cmp	w9, #0x45
  40fc0c:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fc10:	ldr	x10, [sp, #96]
  40fc14:	ldr	w10, [x10, #4]
  40fc18:	b	41029c <__fxstatat@plt+0xd84c>
  40fc1c:	cmp	w9, #0x45
  40fc20:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fc24:	cmn	w22, #0x1
  40fc28:	b.eq	410978 <__fxstatat@plt+0xdf28>  // b.none
  40fc2c:	cmp	w22, #0x8
  40fc30:	b.gt	4109ac <__fxstatat@plt+0xdf5c>
  40fc34:	ldr	w10, [sp, #52]
  40fc38:	sub	w11, w22, #0x1
  40fc3c:	mov	w12, #0x6667                	// #26215
  40fc40:	movk	w12, #0x6666, lsl #16
  40fc44:	smull	x10, w10, w12
  40fc48:	add	w11, w11, #0x1
  40fc4c:	lsr	x12, x10, #63
  40fc50:	asr	x10, x10, #34
  40fc54:	cmp	w11, #0x8
  40fc58:	add	w10, w10, w12
  40fc5c:	b.lt	40fc3c <__fxstatat@plt+0xd1ec>  // b.tstop
  40fc60:	mov	w19, w22
  40fc64:	b	4102a0 <__fxstatat@plt+0xd850>
  40fc68:	mov	w11, #0x1                   	// #1
  40fc6c:	eor	w8, w24, #0x1
  40fc70:	mov	w19, wzr
  40fc74:	orr	w27, w24, w11
  40fc78:	and	w3, w3, w8
  40fc7c:	mov	w8, #0x70                  	// #112
  40fc80:	b	4102c4 <__fxstatat@plt+0xd874>
  40fc84:	cmp	w9, #0x45
  40fc88:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fc8c:	ldr	x10, [sp, #96]
  40fc90:	ldr	w10, [x10]
  40fc94:	b	41029c <__fxstatat@plt+0xd84c>
  40fc98:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x6060>
  40fc9c:	add	x26, x26, #0x956
  40fca0:	mov	w21, #0xffffffff            	// #-1
  40fca4:	str	w3, [sp, #92]
  40fca8:	and	w4, w3, #0x1
  40fcac:	ldr	w8, [sp, #52]
  40fcb0:	ldr	x3, [sp, #96]
  40fcb4:	ldr	x7, [sp, #56]
  40fcb8:	mov	x1, #0xffffffffffffffff    	// #-1
  40fcbc:	mov	x19, x0
  40fcc0:	mov	x0, xzr
  40fcc4:	mov	x23, x2
  40fcc8:	mov	x2, x26
  40fccc:	mov	w5, w28
  40fcd0:	mov	w6, w21
  40fcd4:	str	w8, [sp]
  40fcd8:	bl	40f6cc <__fxstatat@plt+0xcc7c>
  40fcdc:	ldr	x9, [sp, #120]
  40fce0:	mov	x10, x23
  40fce4:	mov	x23, x0
  40fce8:	bic	w8, w22, w22, asr #31
  40fcec:	mov	x0, x19
  40fcf0:	cmp	x23, x8
  40fcf4:	csel	x27, x8, x23, cc  // cc = lo, ul, last
  40fcf8:	sub	x24, x9, x0
  40fcfc:	mov	w1, #0xa                   	// #10
  40fd00:	cmp	x27, x24
  40fd04:	b.cs	410c50 <__fxstatat@plt+0xe200>  // b.hs, b.nlast
  40fd08:	cbz	x10, 4101c0 <__fxstatat@plt+0xd770>
  40fd0c:	cmp	x23, x8
  40fd10:	b.cs	4108a8 <__fxstatat@plt+0xde58>  // b.hs, b.nlast
  40fd14:	sxtw	x8, w22
  40fd18:	cmp	w28, #0x30
  40fd1c:	sub	x8, x8, x23
  40fd20:	str	x8, [sp, #104]
  40fd24:	b.eq	40fd30 <__fxstatat@plt+0xd2e0>  // b.none
  40fd28:	cmp	w28, #0x2b
  40fd2c:	b.ne	41088c <__fxstatat@plt+0xde3c>  // b.any
  40fd30:	mov	w1, #0x30                  	// #48
  40fd34:	b	410890 <__fxstatat@plt+0xde40>
  40fd38:	cmp	w9, #0x45
  40fd3c:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fd40:	ldr	x11, [sp, #96]
  40fd44:	mov	w12, #0x2493                	// #9363
  40fd48:	movk	w12, #0x9249, lsl #16
  40fd4c:	ldp	w11, w10, [x11, #24]
  40fd50:	sub	w10, w10, w11
  40fd54:	b	40fd98 <__fxstatat@plt+0xd348>
  40fd58:	cmp	w9, #0x45
  40fd5c:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fd60:	ldr	x11, [sp, #96]
  40fd64:	mov	w12, #0x2493                	// #9363
  40fd68:	movk	w12, #0x9249, lsl #16
  40fd6c:	ldp	w10, w11, [x11, #24]
  40fd70:	add	w10, w10, #0x6
  40fd74:	smull	x13, w10, w12
  40fd78:	lsr	x13, x13, #32
  40fd7c:	add	w13, w13, w10
  40fd80:	asr	w14, w13, #2
  40fd84:	add	w13, w14, w13, lsr #31
  40fd88:	lsl	w14, w13, #3
  40fd8c:	sub	w13, w14, w13
  40fd90:	sub	w10, w13, w10
  40fd94:	add	w10, w11, w10
  40fd98:	add	w10, w10, #0x7
  40fd9c:	smull	x11, w10, w12
  40fda0:	lsr	x11, x11, #32
  40fda4:	add	w10, w11, w10
  40fda8:	asr	w11, w10, #2
  40fdac:	add	w10, w11, w10, lsr #31
  40fdb0:	b	41029c <__fxstatat@plt+0xd84c>
  40fdb4:	cmp	w9, #0x4f
  40fdb8:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fdbc:	mov	w27, wzr
  40fdc0:	mov	w19, wzr
  40fdc4:	mov	w8, #0x58                  	// #88
  40fdc8:	b	4102c4 <__fxstatat@plt+0xd874>
  40fdcc:	cmp	w9, #0x45
  40fdd0:	b.eq	41082c <__fxstatat@plt+0xdddc>  // b.none
  40fdd4:	cmp	w9, #0x4f
  40fdd8:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fddc:	ldr	x10, [sp, #96]
  40fde0:	ldr	w10, [x10, #20]
  40fde4:	cmn	w10, #0x76c
  40fde8:	add	w10, w10, #0x76c
  40fdec:	b	410270 <__fxstatat@plt+0xd820>
  40fdf0:	mov	x19, x0
  40fdf4:	ldr	x0, [sp, #24]
  40fdf8:	mov	w27, w3
  40fdfc:	mov	x21, x2
  40fe00:	bl	402430 <strlen@plt>
  40fe04:	ldr	x9, [sp, #120]
  40fe08:	bic	w8, w22, w22, asr #31
  40fe0c:	cmp	x0, x8
  40fe10:	csel	x23, x8, x0, cc  // cc = lo, ul, last
  40fe14:	sub	x9, x9, x19
  40fe18:	mov	w1, #0xa                   	// #10
  40fe1c:	mov	x2, x21
  40fe20:	mov	x21, x0
  40fe24:	cmp	x23, x9
  40fe28:	b.cs	410c50 <__fxstatat@plt+0xe200>  // b.hs, b.nlast
  40fe2c:	cbz	x2, 410a40 <__fxstatat@plt+0xdff0>
  40fe30:	cmp	x21, x8
  40fe34:	b.cs	41083c <__fxstatat@plt+0xddec>  // b.hs, b.nlast
  40fe38:	sxtw	x9, w22
  40fe3c:	and	w8, w28, #0xff
  40fe40:	cmp	w8, #0x30
  40fe44:	sub	x22, x9, x21
  40fe48:	b.eq	40fe54 <__fxstatat@plt+0xd404>  // b.none
  40fe4c:	cmp	w8, #0x2b
  40fe50:	b.ne	4109e0 <__fxstatat@plt+0xdf90>  // b.any
  40fe54:	mov	w1, #0x30                  	// #48
  40fe58:	b	4109e4 <__fxstatat@plt+0xdf94>
  40fe5c:	cbnz	w9, 41071c <__fxstatat@plt+0xdccc>
  40fe60:	mov	w27, wzr
  40fe64:	mov	w19, wzr
  40fe68:	orr	w3, w24, w3
  40fe6c:	mov	w8, #0x61                  	// #97
  40fe70:	b	4102c4 <__fxstatat@plt+0xd874>
  40fe74:	cmp	w9, #0x4f
  40fe78:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fe7c:	mov	w27, wzr
  40fe80:	mov	w19, wzr
  40fe84:	mov	w8, #0x63                  	// #99
  40fe88:	b	4102c4 <__fxstatat@plt+0xd874>
  40fe8c:	cmp	w9, #0x45
  40fe90:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fe94:	ldr	x10, [sp, #96]
  40fe98:	ldr	w10, [x10, #12]
  40fe9c:	b	41029c <__fxstatat@plt+0xd84c>
  40fea0:	cmp	w9, #0x45
  40fea4:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fea8:	ldr	x10, [sp, #96]
  40feac:	ldr	w10, [x10, #12]
  40feb0:	b	40feec <__fxstatat@plt+0xd49c>
  40feb4:	cmp	w9, #0x45
  40feb8:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40febc:	ldr	x10, [sp, #96]
  40fec0:	mov	w19, #0x3                   	// #3
  40fec4:	ldr	w10, [x10, #28]
  40fec8:	b	40ff10 <__fxstatat@plt+0xd4c0>
  40fecc:	cmp	w9, #0x45
  40fed0:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40fed4:	ldr	x10, [sp, #96]
  40fed8:	ldr	w10, [x10, #8]
  40fedc:	b	40feec <__fxstatat@plt+0xd49c>
  40fee0:	ldr	w10, [sp, #32]
  40fee4:	cmp	w9, #0x45
  40fee8:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40feec:	cmp	w28, #0x0
  40fef0:	mov	w11, #0x5f                  	// #95
  40fef4:	csel	w28, w11, w28, eq  // eq = none
  40fef8:	b	41029c <__fxstatat@plt+0xd84c>
  40fefc:	cmp	w9, #0x45
  40ff00:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  40ff04:	ldr	x10, [sp, #96]
  40ff08:	mov	w19, #0x2                   	// #2
  40ff0c:	ldr	w10, [x10, #16]
  40ff10:	cmn	w10, #0x1
  40ff14:	add	w10, w10, #0x1
  40ff18:	cset	w11, lt  // lt = tstop
  40ff1c:	b	4102a4 <__fxstatat@plt+0xd854>
  40ff20:	ldr	x9, [sp, #120]
  40ff24:	bic	w8, w22, w22, asr #31
  40ff28:	cmp	w8, #0x1
  40ff2c:	csinc	w23, w8, wzr, hi  // hi = pmore
  40ff30:	sub	x9, x9, x0
  40ff34:	cmp	x9, x23
  40ff38:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  40ff3c:	cbz	x2, 40f7d8 <__fxstatat@plt+0xcd88>
  40ff40:	cmp	w8, #0x2
  40ff44:	b.cc	410a6c <__fxstatat@plt+0xe01c>  // b.lo, b.ul, b.last
  40ff48:	sxtw	x9, w22
  40ff4c:	and	w8, w28, #0xff
  40ff50:	mov	x19, x0
  40ff54:	cmp	w8, #0x30
  40ff58:	sub	x21, x9, #0x1
  40ff5c:	b.eq	40ff68 <__fxstatat@plt+0xd518>  // b.none
  40ff60:	cmp	w8, #0x2b
  40ff64:	b.ne	410a4c <__fxstatat@plt+0xdffc>  // b.any
  40ff68:	mov	w1, #0x30                  	// #48
  40ff6c:	b	410a50 <__fxstatat@plt+0xe000>
  40ff70:	ldr	x10, [sp, #96]
  40ff74:	mov	w12, #0xb                   	// #11
  40ff78:	mov	w11, wzr
  40ff7c:	mov	w19, #0x1                   	// #1
  40ff80:	ldr	w10, [x10, #16]
  40ff84:	mul	w10, w10, w12
  40ff88:	asr	w10, w10, #5
  40ff8c:	add	w10, w10, #0x1
  40ff90:	b	4102a4 <__fxstatat@plt+0xd854>
  40ff94:	ldr	x9, [sp, #96]
  40ff98:	mov	x19, x0
  40ff9c:	ldr	x0, [sp, #56]
  40ffa0:	add	x1, sp, #0x80
  40ffa4:	ldr	x8, [x9, #48]
  40ffa8:	ldp	q1, q0, [x9, #16]
  40ffac:	ldr	q2, [x9]
  40ffb0:	mov	w24, w3
  40ffb4:	mov	x23, x2
  40ffb8:	str	x8, [sp, #176]
  40ffbc:	stp	q1, q0, [sp, #144]
  40ffc0:	str	q2, [sp, #128]
  40ffc4:	bl	4144b0 <_obstack_memory_used@@Base+0x510>
  40ffc8:	ldr	x21, [sp, #80]
  40ffcc:	lsr	x11, x0, #63
  40ffd0:	mov	x8, x0
  40ffd4:	mov	x9, #0x6666666666666666    	// #7378697629483820646
  40ffd8:	movk	x9, #0x6667
  40ffdc:	smulh	x9, x8, x9
  40ffe0:	asr	x13, x9, #2
  40ffe4:	mov	w10, #0xa                   	// #10
  40ffe8:	add	x9, x13, x9, lsr #63
  40ffec:	cmp	x0, #0x0
  40fff0:	add	x12, x8, #0x9
  40fff4:	msub	w8, w9, w10, w8
  40fff8:	cneg	w8, w8, lt  // lt = tstop
  40fffc:	add	w8, w8, #0x30
  410000:	cmp	x12, #0x12
  410004:	strb	w8, [x21, #-1]!
  410008:	mov	x8, x9
  41000c:	b.hi	40ffd4 <__fxstatat@plt+0xd584>  // b.pmore
  410010:	cmp	w22, #0x1
  410014:	csinc	w9, w22, wzr, gt
  410018:	mov	w8, wzr
  41001c:	mov	x0, x19
  410020:	mov	x2, x23
  410024:	mov	w1, #0xa                   	// #10
  410028:	mov	w3, w24
  41002c:	mov	x24, x9
  410030:	b	4103c8 <__fxstatat@plt+0xd978>
  410034:	ldr	x9, [sp, #120]
  410038:	bic	w8, w22, w22, asr #31
  41003c:	cmp	w8, #0x1
  410040:	csinc	w23, w8, wzr, hi  // hi = pmore
  410044:	sub	x9, x9, x0
  410048:	cmp	x9, x23
  41004c:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  410050:	cbz	x2, 40f7d8 <__fxstatat@plt+0xcd88>
  410054:	cmp	w8, #0x2
  410058:	b.cc	40f7d0 <__fxstatat@plt+0xcd80>  // b.lo, b.ul, b.last
  41005c:	sxtw	x9, w22
  410060:	and	w8, w28, #0xff
  410064:	mov	x19, x0
  410068:	cmp	w8, #0x30
  41006c:	sub	x21, x9, #0x1
  410070:	b.eq	40f7b0 <__fxstatat@plt+0xcd60>  // b.none
  410074:	cmp	w8, #0x2b
  410078:	b.eq	40f7b0 <__fxstatat@plt+0xcd60>  // b.none
  41007c:	mov	w1, #0x20                  	// #32
  410080:	b	40f7b4 <__fxstatat@plt+0xcd64>
  410084:	ldr	x10, [sp, #96]
  410088:	mov	w11, #0x2493                	// #9363
  41008c:	movk	w11, #0x9249, lsl #16
  410090:	mov	w19, #0x1                   	// #1
  410094:	ldr	w10, [x10, #24]
  410098:	add	w10, w10, #0x6
  41009c:	smull	x11, w10, w11
  4100a0:	lsr	x11, x11, #32
  4100a4:	add	w11, w11, w10
  4100a8:	asr	w12, w11, #2
  4100ac:	add	w11, w12, w11, lsr #31
  4100b0:	sub	w11, w11, w11, lsl #3
  4100b4:	add	w10, w10, w11
  4100b8:	add	w10, w10, #0x1
  4100bc:	b	4102a0 <__fxstatat@plt+0xd850>
  4100c0:	cmp	w9, #0x45
  4100c4:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  4100c8:	ldr	x10, [sp, #96]
  4100cc:	mov	w19, #0x1                   	// #1
  4100d0:	ldr	w10, [x10, #24]
  4100d4:	b	4102a0 <__fxstatat@plt+0xd850>
  4100d8:	cmp	w9, #0x4f
  4100dc:	b.eq	41071c <__fxstatat@plt+0xdccc>  // b.none
  4100e0:	mov	w27, wzr
  4100e4:	mov	w19, wzr
  4100e8:	mov	w8, #0x78                  	// #120
  4100ec:	b	4102c4 <__fxstatat@plt+0xd874>
  4100f0:	cmp	w9, #0x45
  4100f4:	b.ne	4106cc <__fxstatat@plt+0xdc7c>  // b.any
  4100f8:	mov	w27, wzr
  4100fc:	mov	w19, wzr
  410100:	mov	w8, #0x79                  	// #121
  410104:	b	4102c4 <__fxstatat@plt+0xd874>
  410108:	cmp	w11, #0x7a
  41010c:	b.ne	41071c <__fxstatat@plt+0xdccc>  // b.any
  410110:	add	x25, x25, x10
  410114:	ldr	x12, [sp, #96]
  410118:	ldr	w11, [x12, #32]
  41011c:	tbnz	w11, #31, 40f7dc <__fxstatat@plt+0xcd8c>
  410120:	ldr	w12, [x12, #40]
  410124:	tbnz	w12, #31, 410710 <__fxstatat@plt+0xdcc0>
  410128:	cbz	w12, 4108f4 <__fxstatat@plt+0xdea4>
  41012c:	mov	w11, wzr
  410130:	cmp	x10, #0x3
  410134:	b.hi	41071c <__fxstatat@plt+0xdccc>  // b.pmore
  410138:	mov	w13, #0x8889                	// #34953
  41013c:	movk	w13, #0x8888, lsl #16
  410140:	adrp	x15, 41a000 <_obstack_memory_used@@Base+0x6060>
  410144:	add	x15, x15, #0x93c
  410148:	smull	x16, w12, w13
  41014c:	adr	x17, 4101a8 <__fxstatat@plt+0xd758>
  410150:	ldrh	w18, [x15, x10, lsl #1]
  410154:	add	x17, x17, x18, lsl #2
  410158:	lsr	x10, x16, #32
  41015c:	mov	w14, #0xb3c5                	// #46021
  410160:	add	w10, w10, w12
  410164:	movk	w14, #0x91a2, lsl #16
  410168:	asr	w15, w10, #5
  41016c:	smull	x14, w12, w14
  410170:	add	w15, w15, w10, lsr #31
  410174:	lsr	x14, x14, #32
  410178:	smull	x13, w15, w13
  41017c:	add	w14, w14, w12
  410180:	lsr	x13, x13, #32
  410184:	asr	w10, w14, #11
  410188:	add	w13, w13, w15
  41018c:	add	w10, w10, w14, lsr #31
  410190:	asr	w14, w13, #5
  410194:	add	w13, w14, w13, lsr #31
  410198:	mov	w16, #0x3c                  	// #60
  41019c:	msub	w14, w13, w16, w15
  4101a0:	msub	w12, w15, w16, w12
  4101a4:	br	x17
  4101a8:	mov	w13, #0x64                  	// #100
  4101ac:	mov	w12, wzr
  4101b0:	mov	w19, #0x5                   	// #5
  4101b4:	madd	w10, w10, w13, w14
  4101b8:	mov	w13, #0x1                   	// #1
  4101bc:	b	4102b4 <__fxstatat@plt+0xd864>
  4101c0:	mov	x2, xzr
  4101c4:	add	x0, x27, x0
  4101c8:	b	40f7dc <__fxstatat@plt+0xcd8c>
  4101cc:	sub	w14, w15, #0x1
  4101d0:	tst	w14, #0x3
  4101d4:	mov	w13, #0x16d                 	// #365
  4101d8:	b.ne	410214 <__fxstatat@plt+0xd7c4>  // b.any
  4101dc:	mov	w15, #0x5c29                	// #23593
  4101e0:	mov	w16, #0xb850                	// #47184
  4101e4:	movk	w15, #0xc28f, lsl #16
  4101e8:	movk	w16, #0x51e, lsl #16
  4101ec:	mov	w17, #0xd70b                	// #55051
  4101f0:	madd	w14, w14, w15, w16
  4101f4:	movk	w17, #0xa3, lsl #16
  4101f8:	ror	w15, w14, #2
  4101fc:	ror	w14, w14, #4
  410200:	cmp	w14, w17
  410204:	mov	w14, #0x5c28                	// #23592
  410208:	movk	w14, #0x28f, lsl #16
  41020c:	ccmp	w15, w14, #0x2, cs  // cs = hs, nlast
  410210:	cinc	w13, w13, hi  // hi = pmore
  410214:	add	w11, w13, w11
  410218:	mov	w13, #0x17e                 	// #382
  41021c:	mov	w14, #0x2493                	// #9363
  410220:	sub	w10, w13, w10
  410224:	movk	w14, #0x9249, lsl #16
  410228:	add	w11, w10, w11
  41022c:	smull	x13, w11, w14
  410230:	lsr	x13, x13, #32
  410234:	add	w11, w13, w11
  410238:	asr	w13, w11, #2
  41023c:	add	w11, w13, w11, lsr #31
  410240:	lsl	w13, w11, #3
  410244:	sub	w11, w13, w11
  410248:	sub	w10, w11, w10
  41024c:	add	w10, w10, #0x3
  410250:	mov	w13, #0xffffffff            	// #-1
  410254:	cmp	w8, #0x47
  410258:	b.ne	40fa70 <__fxstatat@plt+0xd020>  // b.any
  41025c:	mov	w10, #0xfffff894            	// #-1900
  410260:	add	w11, w12, w13
  410264:	sub	w13, w10, w13
  410268:	add	w10, w11, #0x76c
  41026c:	cmp	w12, w13
  410270:	cset	w11, lt  // lt = tstop
  410274:	mov	w19, #0x4                   	// #4
  410278:	b	41092c <__fxstatat@plt+0xdedc>
  41027c:	mov	w11, #0x2493                	// #9363
  410280:	movk	w11, #0x9249, lsl #16
  410284:	smull	x11, w10, w11
  410288:	lsr	x11, x11, #32
  41028c:	add	w10, w11, w10
  410290:	asr	w11, w10, #2
  410294:	add	w10, w11, w10, lsr #31
  410298:	add	w10, w10, #0x1
  41029c:	mov	w19, #0x2                   	// #2
  4102a0:	lsr	w11, w10, #31
  4102a4:	cmp	w11, #0x0
  4102a8:	mov	w12, wzr
  4102ac:	mov	w13, wzr
  4102b0:	cset	w11, ne  // ne = any
  4102b4:	cmp	w9, #0x4f
  4102b8:	b.ne	410364 <__fxstatat@plt+0xd914>  // b.any
  4102bc:	cbnz	w11, 410364 <__fxstatat@plt+0xd914>
  4102c0:	mov	w27, wzr
  4102c4:	mov	w10, #0x2520                	// #9504
  4102c8:	sturh	w10, [x29, #-40]
  4102cc:	ldr	x10, [sp, #72]
  4102d0:	mov	x23, x2
  4102d4:	str	w3, [sp, #92]
  4102d8:	str	x0, [sp, #104]
  4102dc:	cbz	w9, 4102e8 <__fxstatat@plt+0xd898>
  4102e0:	ldr	x10, [sp, #64]
  4102e4:	sturb	w9, [x29, #-38]
  4102e8:	ldr	x3, [sp, #96]
  4102ec:	add	x0, sp, #0x80
  4102f0:	sub	x2, x29, #0x28
  4102f4:	mov	w1, #0x400                 	// #1024
  4102f8:	strb	w8, [x10]
  4102fc:	strb	wzr, [x10, #1]
  410300:	bl	402500 <strftime@plt>
  410304:	cbz	x0, 410418 <__fxstatat@plt+0xd9c8>
  410308:	mov	x26, x0
  41030c:	sub	x21, x0, #0x1
  410310:	ldr	x9, [sp, #120]
  410314:	ldr	x0, [sp, #104]
  410318:	bic	w8, w22, w22, asr #31
  41031c:	cmp	x21, x8
  410320:	csel	x24, x8, x21, cc  // cc = lo, ul, last
  410324:	sub	x9, x9, x0
  410328:	cmp	x24, x9
  41032c:	b.cs	410c50 <__fxstatat@plt+0xe200>  // b.hs, b.nlast
  410330:	mov	x2, x23
  410334:	cbz	x23, 410674 <__fxstatat@plt+0xdc24>
  410338:	cbnz	w19, 4105d8 <__fxstatat@plt+0xdb88>
  41033c:	cmp	x21, x8
  410340:	b.cs	4105d8 <__fxstatat@plt+0xdb88>  // b.hs, b.nlast
  410344:	sxtw	x8, w22
  410348:	cmp	w28, #0x30
  41034c:	sub	x22, x8, x21
  410350:	b.eq	41035c <__fxstatat@plt+0xd90c>  // b.none
  410354:	cmp	w28, #0x2b
  410358:	b.ne	4105c0 <__fxstatat@plt+0xdb70>  // b.any
  41035c:	mov	w1, #0x30                  	// #48
  410360:	b	4105c4 <__fxstatat@plt+0xdb74>
  410364:	ldr	x21, [sp, #80]
  410368:	cmp	w11, #0x0
  41036c:	cneg	w8, w10, ne  // ne = any
  410370:	tbz	w12, #0, 41037c <__fxstatat@plt+0xd92c>
  410374:	mov	w9, #0x3a                  	// #58
  410378:	strb	w9, [x21, #-1]!
  41037c:	mov	w9, #0xcccd                	// #52429
  410380:	movk	w9, #0xcccc, lsl #16
  410384:	umull	x9, w8, w9
  410388:	mov	w10, #0xa                   	// #10
  41038c:	lsr	x9, x9, #35
  410390:	msub	w10, w9, w10, w8
  410394:	orr	w10, w10, #0x30
  410398:	asr	w12, w12, #1
  41039c:	cmp	w8, #0x9
  4103a0:	strb	w10, [x21, #-1]!
  4103a4:	mov	w8, w9
  4103a8:	b.hi	410370 <__fxstatat@plt+0xd920>  // b.pmore
  4103ac:	mov	w8, w9
  4103b0:	cbnz	w12, 410370 <__fxstatat@plt+0xd920>
  4103b4:	cmp	w19, w22
  4103b8:	csel	w24, w22, w19, lt  // lt = tstop
  4103bc:	cmp	w13, #0x0
  4103c0:	mov	w8, #0x2b                  	// #43
  4103c4:	csel	w8, w8, wzr, ne  // ne = any
  4103c8:	cmp	w11, #0x0
  4103cc:	mov	w9, #0x2d                  	// #45
  4103d0:	csel	w26, w9, w8, ne  // ne = any
  4103d4:	cmp	w28, #0x2d
  4103d8:	str	w3, [sp, #92]
  4103dc:	b.ne	410428 <__fxstatat@plt+0xd9d8>  // b.any
  4103e0:	cbz	w26, 410a9c <__fxstatat@plt+0xe04c>
  4103e4:	ldr	x9, [sp, #120]
  4103e8:	bic	w8, w22, w22, asr #31
  4103ec:	cmp	w8, #0x1
  4103f0:	csinc	w27, w8, wzr, hi  // hi = pmore
  4103f4:	sub	x9, x9, x0
  4103f8:	cmp	x9, x27
  4103fc:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  410400:	cbz	x2, 410a98 <__fxstatat@plt+0xe048>
  410404:	cbnz	w24, 410a94 <__fxstatat@plt+0xe044>
  410408:	cmp	w8, #0x2
  41040c:	b.cc	410a94 <__fxstatat@plt+0xe044>  // b.lo, b.ul, b.last
  410410:	sxtw	x8, w22
  410414:	b	4104d8 <__fxstatat@plt+0xda88>
  410418:	ldr	x0, [sp, #104]
  41041c:	mov	x2, x23
  410420:	mov	w1, #0xa                   	// #10
  410424:	b	40f7dc <__fxstatat@plt+0xcd8c>
  410428:	ldr	x10, [sp, #80]
  41042c:	sxtw	x8, w24
  410430:	cmp	w26, #0x0
  410434:	cset	w9, ne  // ne = any
  410438:	sub	x10, x8, x10
  41043c:	add	x10, x10, x21
  410440:	sub	x27, x10, x9
  410444:	cmp	w27, #0x1
  410448:	b.lt	410510 <__fxstatat@plt+0xdac0>  // b.tstop
  41044c:	cmp	w28, #0x5f
  410450:	b.ne	410564 <__fxstatat@plt+0xdb14>  // b.any
  410454:	ldr	x8, [sp, #120]
  410458:	sxtw	x23, w27
  41045c:	sub	x8, x8, x0
  410460:	cmp	x23, x8
  410464:	b.cs	410c50 <__fxstatat@plt+0xe200>  // b.hs, b.nlast
  410468:	cbz	x2, 41049c <__fxstatat@plt+0xda4c>
  41046c:	mov	w1, #0x20                  	// #32
  410470:	mov	x19, x0
  410474:	mov	x0, x2
  410478:	str	x24, [sp, #104]
  41047c:	mov	x24, x2
  410480:	mov	x2, x23
  410484:	bl	402680 <memset@plt>
  410488:	mov	x2, x24
  41048c:	ldr	x24, [sp, #104]
  410490:	mov	w1, #0xa                   	// #10
  410494:	mov	x0, x19
  410498:	add	x2, x2, x23
  41049c:	subs	w8, w22, w27
  4104a0:	add	x0, x23, x0
  4104a4:	csel	w22, w8, wzr, gt
  4104a8:	cbz	w26, 410a9c <__fxstatat@plt+0xe04c>
  4104ac:	ldr	x8, [sp, #120]
  4104b0:	cmp	w22, #0x1
  4104b4:	csinc	w27, w22, wzr, hi  // hi = pmore
  4104b8:	sub	x8, x8, x0
  4104bc:	cmp	x8, x27
  4104c0:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  4104c4:	cbz	x2, 410a98 <__fxstatat@plt+0xe048>
  4104c8:	cbnz	w24, 410a94 <__fxstatat@plt+0xe044>
  4104cc:	cmp	w22, #0x2
  4104d0:	b.cc	410a94 <__fxstatat@plt+0xe044>  // b.lo, b.ul, b.last
  4104d4:	mov	w8, w22
  4104d8:	sub	x23, x8, #0x1
  4104dc:	mov	w1, #0x20                  	// #32
  4104e0:	mov	x19, x0
  4104e4:	mov	x0, x2
  4104e8:	str	x24, [sp, #104]
  4104ec:	mov	x24, x2
  4104f0:	mov	x2, x23
  4104f4:	bl	402680 <memset@plt>
  4104f8:	mov	x2, x24
  4104fc:	ldr	x24, [sp, #104]
  410500:	mov	w1, #0xa                   	// #10
  410504:	mov	x0, x19
  410508:	add	x2, x2, x23
  41050c:	b	410a94 <__fxstatat@plt+0xe044>
  410510:	cbz	w26, 410a9c <__fxstatat@plt+0xe04c>
  410514:	ldr	x9, [sp, #120]
  410518:	bic	w8, w22, w22, asr #31
  41051c:	cmp	w8, #0x1
  410520:	csinc	w27, w8, wzr, hi  // hi = pmore
  410524:	sub	x9, x9, x0
  410528:	cmp	x9, x27
  41052c:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  410530:	cbz	x2, 410a98 <__fxstatat@plt+0xe048>
  410534:	cbnz	w24, 410a94 <__fxstatat@plt+0xe044>
  410538:	cmp	w8, #0x2
  41053c:	b.cc	410a94 <__fxstatat@plt+0xe044>  // b.lo, b.ul, b.last
  410540:	sxtw	x8, w22
  410544:	cmp	w28, #0x30
  410548:	sub	x23, x8, #0x1
  41054c:	str	x0, [sp, #104]
  410550:	b.eq	41055c <__fxstatat@plt+0xdb0c>  // b.none
  410554:	cmp	w28, #0x2b
  410558:	b.ne	410a74 <__fxstatat@plt+0xe024>  // b.any
  41055c:	mov	w1, #0x30                  	// #48
  410560:	b	410a78 <__fxstatat@plt+0xe028>
  410564:	ldr	x9, [sp, #120]
  410568:	sub	x9, x9, x0
  41056c:	cmp	x9, x8
  410570:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  410574:	cbz	w26, 410bb4 <__fxstatat@plt+0xe164>
  410578:	bic	w8, w22, w22, asr #31
  41057c:	cmp	w8, #0x1
  410580:	csinc	w23, w8, wzr, hi  // hi = pmore
  410584:	cmp	x9, x23
  410588:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  41058c:	cbz	x2, 410bb0 <__fxstatat@plt+0xe160>
  410590:	cbnz	w24, 410bac <__fxstatat@plt+0xe15c>
  410594:	cmp	w8, #0x2
  410598:	b.cc	410bac <__fxstatat@plt+0xe15c>  // b.lo, b.ul, b.last
  41059c:	sxtw	x8, w22
  4105a0:	cmp	w28, #0x30
  4105a4:	sub	x22, x8, #0x1
  4105a8:	str	x0, [sp, #104]
  4105ac:	b.eq	4105b8 <__fxstatat@plt+0xdb68>  // b.none
  4105b0:	cmp	w28, #0x2b
  4105b4:	b.ne	410b8c <__fxstatat@plt+0xe13c>  // b.any
  4105b8:	mov	w1, #0x30                  	// #48
  4105bc:	b	410b90 <__fxstatat@plt+0xe140>
  4105c0:	mov	w1, #0x20                  	// #32
  4105c4:	mov	x0, x2
  4105c8:	mov	x23, x2
  4105cc:	mov	x2, x22
  4105d0:	bl	402680 <memset@plt>
  4105d4:	add	x2, x23, x22
  4105d8:	tbz	w27, #0, 410614 <__fxstatat@plt+0xdbc4>
  4105dc:	cbz	x21, 41066c <__fxstatat@plt+0xdc1c>
  4105e0:	mov	x22, x2
  4105e4:	bl	402560 <__ctype_tolower_loc@plt>
  4105e8:	ldr	x11, [sp, #40]
  4105ec:	mov	x2, x22
  4105f0:	sub	x8, x22, #0x2
  4105f4:	ldr	x9, [x0]
  4105f8:	ldrb	w10, [x11, x26]
  4105fc:	ldr	w9, [x9, x10, lsl #2]
  410600:	strb	w9, [x8, x26]
  410604:	sub	x26, x26, #0x1
  410608:	cmp	x26, #0x1
  41060c:	b.ne	4105f4 <__fxstatat@plt+0xdba4>  // b.any
  410610:	b	41066c <__fxstatat@plt+0xdc1c>
  410614:	ldr	w8, [sp, #92]
  410618:	tbz	w8, #0, 410654 <__fxstatat@plt+0xdc04>
  41061c:	cbz	x21, 41066c <__fxstatat@plt+0xdc1c>
  410620:	mov	x22, x2
  410624:	bl	402700 <__ctype_toupper_loc@plt>
  410628:	ldr	x11, [sp, #40]
  41062c:	mov	x2, x22
  410630:	sub	x8, x22, #0x2
  410634:	ldr	x9, [x0]
  410638:	ldrb	w10, [x11, x26]
  41063c:	ldr	w9, [x9, x10, lsl #2]
  410640:	strb	w9, [x8, x26]
  410644:	sub	x26, x26, #0x1
  410648:	cmp	x26, #0x1
  41064c:	b.ne	410634 <__fxstatat@plt+0xdbe4>  // b.any
  410650:	b	41066c <__fxstatat@plt+0xdc1c>
  410654:	ldr	x1, [sp, #16]
  410658:	mov	x0, x2
  41065c:	mov	x22, x2
  410660:	mov	x2, x21
  410664:	bl	4023c0 <memcpy@plt>
  410668:	mov	x2, x22
  41066c:	ldr	x0, [sp, #104]
  410670:	add	x2, x2, x21
  410674:	mov	w1, #0xa                   	// #10
  410678:	add	x0, x24, x0
  41067c:	b	40f7dc <__fxstatat@plt+0xcd8c>
  410680:	ldr	x10, [sp, #96]
  410684:	mov	w11, #0x851f                	// #34079
  410688:	movk	w11, #0x51eb, lsl #16
  41068c:	mov	w12, #0x64                  	// #100
  410690:	ldrsw	x10, [x10, #20]
  410694:	mul	x13, x10, x11
  410698:	lsr	x14, x13, #63
  41069c:	asr	x13, x13, #37
  4106a0:	add	w13, w13, w14
  4106a4:	cmn	x10, #0x76c
  4106a8:	msub	w10, w13, w12, w10
  4106ac:	cset	w11, lt  // lt = tstop
  4106b0:	cset	w14, gt
  4106b4:	cmp	w10, #0x0
  4106b8:	cset	w10, lt  // lt = tstop
  4106bc:	and	w10, w14, w10
  4106c0:	sub	w10, w13, w10
  4106c4:	add	w10, w10, #0x13
  4106c8:	b	410928 <__fxstatat@plt+0xded8>
  4106cc:	ldr	x10, [sp, #96]
  4106d0:	mov	w12, #0x851f                	// #34079
  4106d4:	movk	w12, #0x51eb, lsl #16
  4106d8:	mov	w13, #0x64                  	// #100
  4106dc:	ldrsw	x10, [x10, #20]
  4106e0:	mov	w11, wzr
  4106e4:	mul	x12, x10, x12
  4106e8:	lsr	x14, x12, #63
  4106ec:	asr	x12, x12, #37
  4106f0:	add	w12, w12, w14
  4106f4:	cmn	w10, #0x76c
  4106f8:	msub	w10, w12, w13, w10
  4106fc:	add	w12, w10, #0x64
  410700:	csneg	w12, w12, w10, ge  // ge = tcont
  410704:	cmp	w10, #0x0
  410708:	csel	w10, w12, w10, lt  // lt = tstop
  41070c:	b	410928 <__fxstatat@plt+0xded8>
  410710:	mov	w11, #0x1                   	// #1
  410714:	cmp	x10, #0x3
  410718:	b.ls	410138 <__fxstatat@plt+0xd6e8>  // b.plast
  41071c:	mov	w11, #0x1                   	// #1
  410720:	mov	w19, w3
  410724:	sub	x8, x25, #0x1
  410728:	mov	w9, #0x1                   	// #1
  41072c:	sub	x27, x11, x9
  410730:	ldrb	w10, [x25, x27]
  410734:	mov	x24, x9
  410738:	mov	x26, x8
  41073c:	add	x9, x9, #0x1
  410740:	cmp	w10, #0x25
  410744:	sub	x8, x8, #0x1
  410748:	b.ne	41072c <__fxstatat@plt+0xdcdc>  // b.any
  41074c:	ldr	x9, [sp, #120]
  410750:	bic	w8, w22, w22, asr #31
  410754:	cmp	w8, w24
  410758:	csel	w23, w24, w8, cc  // cc = lo, ul, last
  41075c:	sub	x9, x9, x0
  410760:	cmp	x9, x23
  410764:	b.ls	410c50 <__fxstatat@plt+0xe200>  // b.plast
  410768:	cbz	x2, 40f7d8 <__fxstatat@plt+0xcd88>
  41076c:	cmp	w8, w24
  410770:	and	x21, x24, #0xffffffff
  410774:	b.ls	4107bc <__fxstatat@plt+0xdd6c>  // b.plast
  410778:	sxtw	x9, w22
  41077c:	and	w8, w28, #0xff
  410780:	cmp	w8, #0x30
  410784:	sub	x22, x9, x21
  410788:	str	x0, [sp, #104]
  41078c:	b.eq	410798 <__fxstatat@plt+0xdd48>  // b.none
  410790:	cmp	w8, #0x2b
  410794:	b.ne	4107a0 <__fxstatat@plt+0xdd50>  // b.any
  410798:	mov	w1, #0x30                  	// #48
  41079c:	b	4107a4 <__fxstatat@plt+0xdd54>
  4107a0:	mov	w1, #0x20                  	// #32
  4107a4:	mov	x0, x2
  4107a8:	mov	x28, x2
  4107ac:	mov	x2, x22
  4107b0:	bl	402680 <memset@plt>
  4107b4:	ldr	x0, [sp, #104]
  4107b8:	add	x2, x28, x22
  4107bc:	tbz	w19, #0, 410800 <__fxstatat@plt+0xddb0>
  4107c0:	mov	x19, x0
  4107c4:	mov	x22, x2
  4107c8:	bl	402700 <__ctype_toupper_loc@plt>
  4107cc:	mov	w1, #0xa                   	// #10
  4107d0:	mov	x2, x22
  4107d4:	sub	x8, x22, #0x1
  4107d8:	add	x9, x26, w24, uxtw
  4107dc:	mov	x10, x21
  4107e0:	ldr	x11, [x0]
  4107e4:	ldrb	w12, [x9], #-1
  4107e8:	ldr	w11, [x11, x12, lsl #2]
  4107ec:	subs	x12, x10, #0x1
  4107f0:	strb	w11, [x8, x10]
  4107f4:	mov	x10, x12
  4107f8:	b.ne	4107e0 <__fxstatat@plt+0xdd90>  // b.any
  4107fc:	b	410820 <__fxstatat@plt+0xddd0>
  410800:	mov	x19, x0
  410804:	add	x1, x25, x27
  410808:	mov	x0, x2
  41080c:	mov	x22, x2
  410810:	mov	x2, x21
  410814:	bl	4023c0 <memcpy@plt>
  410818:	mov	w1, #0xa                   	// #10
  41081c:	mov	x2, x22
  410820:	add	x2, x2, x21
  410824:	mov	x0, x19
  410828:	b	40f7d8 <__fxstatat@plt+0xcd88>
  41082c:	mov	w27, wzr
  410830:	mov	w19, wzr
  410834:	mov	w8, #0x59                  	// #89
  410838:	b	4102c4 <__fxstatat@plt+0xd874>
  41083c:	ldr	x22, [sp, #8]
  410840:	tbnz	w24, #0, 410a04 <__fxstatat@plt+0xdfb4>
  410844:	eor	w8, w24, #0x1
  410848:	and	w8, w27, w8
  41084c:	tbz	w8, #0, 4109b8 <__fxstatat@plt+0xdf68>
  410850:	cbz	x21, 410a3c <__fxstatat@plt+0xdfec>
  410854:	mov	x24, x2
  410858:	bl	402700 <__ctype_toupper_loc@plt>
  41085c:	mov	w1, #0xa                   	// #10
  410860:	mov	x2, x24
  410864:	sub	x8, x24, #0x1
  410868:	mov	x9, x21
  41086c:	ldr	x10, [x0]
  410870:	ldrb	w11, [x22, x9]
  410874:	ldr	w10, [x10, x11, lsl #2]
  410878:	subs	x11, x9, #0x1
  41087c:	strb	w10, [x8, x9]
  410880:	mov	x9, x11
  410884:	b.ne	41086c <__fxstatat@plt+0xde1c>  // b.any
  410888:	b	410a3c <__fxstatat@plt+0xdfec>
  41088c:	mov	w1, #0x20                  	// #32
  410890:	mov	x0, x10
  410894:	mov	x2, x8
  410898:	mov	x22, x10
  41089c:	bl	402680 <memset@plt>
  4108a0:	ldr	x8, [sp, #104]
  4108a4:	add	x10, x22, x8
  4108a8:	ldr	w8, [sp, #92]
  4108ac:	ldr	x3, [sp, #96]
  4108b0:	ldr	x7, [sp, #56]
  4108b4:	mov	x0, x10
  4108b8:	and	w4, w8, #0x1
  4108bc:	ldr	w8, [sp, #52]
  4108c0:	mov	x1, x24
  4108c4:	mov	x2, x26
  4108c8:	mov	w5, w28
  4108cc:	mov	w6, w21
  4108d0:	str	w8, [sp]
  4108d4:	mov	x22, x10
  4108d8:	bl	40f6cc <__fxstatat@plt+0xcc7c>
  4108dc:	mov	x2, x22
  4108e0:	mov	x0, x19
  4108e4:	add	x2, x22, x23
  4108e8:	mov	w1, #0xa                   	// #10
  4108ec:	add	x0, x27, x19
  4108f0:	b	40f7dc <__fxstatat@plt+0xcd8c>
  4108f4:	ldr	x11, [sp, #24]
  4108f8:	ldrb	w11, [x11]
  4108fc:	cmp	w11, #0x2d
  410900:	cset	w11, eq  // eq = none
  410904:	cmp	x10, #0x3
  410908:	b.ls	410138 <__fxstatat@plt+0xd6e8>  // b.plast
  41090c:	b	41071c <__fxstatat@plt+0xdccc>
  410910:	mov	w14, #0xfffff894            	// #-1900
  410914:	sub	w13, w14, w13
  410918:	add	w15, w10, #0x64
  41091c:	cmp	w12, w13
  410920:	mov	w11, wzr
  410924:	csneg	w10, w15, w10, ge  // ge = tcont
  410928:	mov	w19, #0x2                   	// #2
  41092c:	ldr	w12, [sp, #36]
  410930:	cmp	w28, #0x0
  410934:	csel	w28, w12, w28, eq  // eq = none
  410938:	cmp	w28, #0x2b
  41093c:	b.ne	41096c <__fxstatat@plt+0xdf1c>  // b.any
  410940:	cmp	w19, #0x2
  410944:	mov	w13, #0x270f                	// #9999
  410948:	mov	w14, #0x63                  	// #99
  41094c:	csel	w13, w14, w13, eq  // eq = none
  410950:	cmp	w13, w10
  410954:	cset	w13, cc  // cc = lo, ul, last
  410958:	cmp	w19, w22
  41095c:	cset	w14, lt  // lt = tstop
  410960:	mov	w12, wzr
  410964:	orr	w13, w14, w13
  410968:	b	4102b4 <__fxstatat@plt+0xd864>
  41096c:	mov	w12, wzr
  410970:	mov	w13, wzr
  410974:	b	4102b4 <__fxstatat@plt+0xd864>
  410978:	ldr	w10, [sp, #52]
  41097c:	mov	w19, #0x9                   	// #9
  410980:	mov	w22, #0x9                   	// #9
  410984:	b	4102a0 <__fxstatat@plt+0xd850>
  410988:	cbz	w12, 410bf4 <__fxstatat@plt+0xe1a4>
  41098c:	mov	w15, #0x2710                	// #10000
  410990:	mov	w16, #0x64                  	// #100
  410994:	madd	w10, w10, w15, w12
  410998:	mov	w19, #0x9                   	// #9
  41099c:	mov	w13, #0x1                   	// #1
  4109a0:	madd	w10, w14, w16, w10
  4109a4:	mov	w12, #0x14                  	// #20
  4109a8:	b	4102b4 <__fxstatat@plt+0xd864>
  4109ac:	ldr	w10, [sp, #52]
  4109b0:	mov	w19, w22
  4109b4:	b	4102a0 <__fxstatat@plt+0xd850>
  4109b8:	ldr	x1, [sp, #24]
  4109bc:	mov	x0, x2
  4109c0:	mov	x22, x2
  4109c4:	mov	x2, x21
  4109c8:	bl	4023c0 <memcpy@plt>
  4109cc:	mov	w1, #0xa                   	// #10
  4109d0:	mov	x2, x22
  4109d4:	b	410a3c <__fxstatat@plt+0xdfec>
  4109d8:	mov	w8, #0x25                  	// #37
  4109dc:	b	40f7d4 <__fxstatat@plt+0xcd84>
  4109e0:	mov	w1, #0x20                  	// #32
  4109e4:	mov	x0, x2
  4109e8:	mov	x26, x2
  4109ec:	mov	x2, x22
  4109f0:	bl	402680 <memset@plt>
  4109f4:	add	x2, x26, x22
  4109f8:	ldr	x22, [sp, #8]
  4109fc:	mov	w1, #0xa                   	// #10
  410a00:	tbz	w24, #0, 410844 <__fxstatat@plt+0xddf4>
  410a04:	cbz	x21, 410a3c <__fxstatat@plt+0xdfec>
  410a08:	mov	x24, x2
  410a0c:	bl	402560 <__ctype_tolower_loc@plt>
  410a10:	mov	w1, #0xa                   	// #10
  410a14:	mov	x2, x24
  410a18:	sub	x8, x24, #0x1
  410a1c:	mov	x9, x21
  410a20:	ldr	x10, [x0]
  410a24:	ldrb	w11, [x22, x9]
  410a28:	ldr	w10, [x10, x11, lsl #2]
  410a2c:	subs	x11, x9, #0x1
  410a30:	strb	w10, [x8, x9]
  410a34:	mov	x9, x11
  410a38:	b.ne	410a20 <__fxstatat@plt+0xdfd0>  // b.any
  410a3c:	add	x2, x2, x21
  410a40:	mov	x0, x19
  410a44:	add	x0, x23, x19
  410a48:	b	40f7dc <__fxstatat@plt+0xcd8c>
  410a4c:	mov	w1, #0x20                  	// #32
  410a50:	mov	x0, x2
  410a54:	mov	x22, x2
  410a58:	mov	x2, x21
  410a5c:	bl	402680 <memset@plt>
  410a60:	add	x2, x22, x21
  410a64:	mov	x0, x19
  410a68:	mov	w1, #0xa                   	// #10
  410a6c:	mov	w8, #0xa                   	// #10
  410a70:	b	40f7d4 <__fxstatat@plt+0xcd84>
  410a74:	mov	w1, #0x20                  	// #32
  410a78:	mov	x0, x2
  410a7c:	mov	x19, x2
  410a80:	mov	x2, x23
  410a84:	bl	402680 <memset@plt>
  410a88:	ldr	x0, [sp, #104]
  410a8c:	add	x2, x19, x23
  410a90:	mov	w1, #0xa                   	// #10
  410a94:	strb	w26, [x2], #1
  410a98:	add	x0, x0, x27
  410a9c:	bic	w8, w22, w22, asr #31
  410aa0:	ldr	x9, [sp, #80]
  410aa4:	mov	w8, w8
  410aa8:	sub	x26, x9, x21
  410aac:	ldr	x9, [sp, #120]
  410ab0:	cmp	x26, x8
  410ab4:	csel	x23, x8, x26, cc  // cc = lo, ul, last
  410ab8:	sub	x9, x9, x0
  410abc:	cmp	x23, x9
  410ac0:	b.cs	410c50 <__fxstatat@plt+0xe200>  // b.hs, b.nlast
  410ac4:	cbz	x2, 410b84 <__fxstatat@plt+0xe134>
  410ac8:	cbnz	w24, 410b18 <__fxstatat@plt+0xe0c8>
  410acc:	cmp	x26, x8
  410ad0:	b.cs	410b18 <__fxstatat@plt+0xe0c8>  // b.hs, b.nlast
  410ad4:	sxtw	x8, w22
  410ad8:	cmp	w28, #0x30
  410adc:	sub	x22, x8, x26
  410ae0:	b.eq	410aec <__fxstatat@plt+0xe09c>  // b.none
  410ae4:	cmp	w28, #0x2b
  410ae8:	b.ne	410af4 <__fxstatat@plt+0xe0a4>  // b.any
  410aec:	mov	w1, #0x30                  	// #48
  410af0:	b	410af8 <__fxstatat@plt+0xe0a8>
  410af4:	mov	w1, #0x20                  	// #32
  410af8:	mov	x19, x0
  410afc:	mov	x0, x2
  410b00:	mov	x24, x2
  410b04:	mov	x2, x22
  410b08:	bl	402680 <memset@plt>
  410b0c:	mov	x2, x24
  410b10:	mov	x0, x19
  410b14:	add	x2, x24, x22
  410b18:	ldr	w8, [sp, #92]
  410b1c:	mov	x19, x0
  410b20:	tbz	w8, #0, 410b60 <__fxstatat@plt+0xe110>
  410b24:	cbz	x26, 410b78 <__fxstatat@plt+0xe128>
  410b28:	mov	x22, x2
  410b2c:	bl	402700 <__ctype_toupper_loc@plt>
  410b30:	mov	x2, x22
  410b34:	sub	x8, x22, #0x1
  410b38:	sub	x9, x21, #0x1
  410b3c:	mov	x10, x26
  410b40:	ldr	x11, [x0]
  410b44:	ldrb	w12, [x9, x10]
  410b48:	ldr	w11, [x11, x12, lsl #2]
  410b4c:	subs	x12, x10, #0x1
  410b50:	strb	w11, [x8, x10]
  410b54:	mov	x10, x12
  410b58:	b.ne	410b40 <__fxstatat@plt+0xe0f0>  // b.any
  410b5c:	b	410b78 <__fxstatat@plt+0xe128>
  410b60:	mov	x0, x2
  410b64:	mov	x1, x21
  410b68:	mov	x21, x2
  410b6c:	mov	x2, x26
  410b70:	bl	4023c0 <memcpy@plt>
  410b74:	mov	x2, x21
  410b78:	add	x2, x2, x26
  410b7c:	mov	x0, x19
  410b80:	mov	w1, #0xa                   	// #10
  410b84:	add	x0, x23, x0
  410b88:	b	40f7dc <__fxstatat@plt+0xcd8c>
  410b8c:	mov	w1, #0x20                  	// #32
  410b90:	mov	x0, x2
  410b94:	mov	x19, x2
  410b98:	mov	x2, x22
  410b9c:	bl	402680 <memset@plt>
  410ba0:	ldr	x0, [sp, #104]
  410ba4:	add	x2, x19, x22
  410ba8:	mov	w1, #0xa                   	// #10
  410bac:	strb	w26, [x2], #1
  410bb0:	add	x0, x0, x23
  410bb4:	sxtw	x23, w27
  410bb8:	cbz	x2, 410be4 <__fxstatat@plt+0xe194>
  410bbc:	mov	w1, #0x30                  	// #48
  410bc0:	mov	x19, x0
  410bc4:	mov	x0, x2
  410bc8:	mov	x22, x2
  410bcc:	mov	x2, x23
  410bd0:	bl	402680 <memset@plt>
  410bd4:	mov	x2, x22
  410bd8:	mov	w1, #0xa                   	// #10
  410bdc:	mov	x0, x19
  410be0:	add	x2, x22, x23
  410be4:	mov	w22, wzr
  410be8:	mov	w8, wzr
  410bec:	add	x0, x0, x23
  410bf0:	b	410aa0 <__fxstatat@plt+0xe050>
  410bf4:	cbz	w14, 410c40 <__fxstatat@plt+0xe1f0>
  410bf8:	mov	w12, #0x64                  	// #100
  410bfc:	mov	w19, #0x6                   	// #6
  410c00:	mov	w13, #0x1                   	// #1
  410c04:	madd	w10, w10, w12, w14
  410c08:	mov	w12, #0x4                   	// #4
  410c0c:	b	4102b4 <__fxstatat@plt+0xd864>
  410c10:	mov	w1, #0x20                  	// #32
  410c14:	mov	x19, x0
  410c18:	mov	x0, x2
  410c1c:	mov	x22, x2
  410c20:	mov	x2, x21
  410c24:	bl	402680 <memset@plt>
  410c28:	ldrb	w8, [x25]
  410c2c:	mov	x2, x22
  410c30:	add	x2, x22, x21
  410c34:	mov	w1, #0xa                   	// #10
  410c38:	mov	x0, x19
  410c3c:	b	40f7d4 <__fxstatat@plt+0xcd84>
  410c40:	mov	w12, wzr
  410c44:	mov	w19, #0x3                   	// #3
  410c48:	mov	w13, #0x1                   	// #1
  410c4c:	b	4102b4 <__fxstatat@plt+0xd864>
  410c50:	mov	x0, xzr
  410c54:	add	sp, sp, #0x4b0
  410c58:	ldp	x20, x19, [sp, #80]
  410c5c:	ldp	x22, x21, [sp, #64]
  410c60:	ldp	x24, x23, [sp, #48]
  410c64:	ldp	x26, x25, [sp, #32]
  410c68:	ldp	x28, x27, [sp, #16]
  410c6c:	ldp	x29, x30, [sp], #96
  410c70:	ret
  410c74:	stp	x29, x30, [sp, #-32]!
  410c78:	stp	x20, x19, [sp, #16]
  410c7c:	mov	x29, sp
  410c80:	cbz	x0, 410d00 <__fxstatat@plt+0xe2b0>
  410c84:	mov	w1, #0x2f                  	// #47
  410c88:	mov	x19, x0
  410c8c:	bl	402730 <strrchr@plt>
  410c90:	cmp	x0, #0x0
  410c94:	csinc	x20, x19, x0, eq  // eq = none
  410c98:	sub	x8, x20, x19
  410c9c:	cmp	x8, #0x7
  410ca0:	b.lt	410ce4 <__fxstatat@plt+0xe294>  // b.tstop
  410ca4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  410ca8:	sub	x0, x20, #0x7
  410cac:	add	x1, x1, #0x997
  410cb0:	mov	w2, #0x7                   	// #7
  410cb4:	bl	402640 <strncmp@plt>
  410cb8:	cbnz	w0, 410ce4 <__fxstatat@plt+0xe294>
  410cbc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  410cc0:	add	x1, x1, #0x99f
  410cc4:	mov	w2, #0x3                   	// #3
  410cc8:	mov	x0, x20
  410ccc:	bl	402640 <strncmp@plt>
  410cd0:	mov	x19, x20
  410cd4:	cbnz	w0, 410ce4 <__fxstatat@plt+0xe294>
  410cd8:	add	x19, x20, #0x3
  410cdc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  410ce0:	str	x19, [x8, #1464]
  410ce4:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410ce8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x18060>
  410cec:	str	x19, [x8, #1872]
  410cf0:	str	x19, [x9, #1424]
  410cf4:	ldp	x20, x19, [sp, #16]
  410cf8:	ldp	x29, x30, [sp], #32
  410cfc:	ret
  410d00:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  410d04:	ldr	x3, [x8, #1432]
  410d08:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  410d0c:	add	x0, x0, #0x95f
  410d10:	mov	w1, #0x37                  	// #55
  410d14:	mov	w2, #0x1                   	// #1
  410d18:	bl	402880 <fwrite@plt>
  410d1c:	bl	402770 <abort@plt>
  410d20:	stp	x29, x30, [sp, #-48]!
  410d24:	str	x21, [sp, #16]
  410d28:	stp	x20, x19, [sp, #32]
  410d2c:	mov	x29, sp
  410d30:	mov	x19, x0
  410d34:	bl	4029e0 <__errno_location@plt>
  410d38:	ldr	w21, [x0]
  410d3c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410d40:	add	x8, x8, #0x758
  410d44:	cmp	x19, #0x0
  410d48:	mov	x20, x0
  410d4c:	csel	x0, x8, x19, eq  // eq = none
  410d50:	mov	w1, #0x38                  	// #56
  410d54:	bl	413078 <__fxstatat@plt+0x10628>
  410d58:	str	w21, [x20]
  410d5c:	ldp	x20, x19, [sp, #32]
  410d60:	ldr	x21, [sp, #16]
  410d64:	ldp	x29, x30, [sp], #48
  410d68:	ret
  410d6c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410d70:	add	x8, x8, #0x758
  410d74:	cmp	x0, #0x0
  410d78:	csel	x8, x8, x0, eq  // eq = none
  410d7c:	ldr	w0, [x8]
  410d80:	ret
  410d84:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410d88:	add	x8, x8, #0x758
  410d8c:	cmp	x0, #0x0
  410d90:	csel	x8, x8, x0, eq  // eq = none
  410d94:	str	w1, [x8]
  410d98:	ret
  410d9c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410da0:	add	x8, x8, #0x758
  410da4:	cmp	x0, #0x0
  410da8:	ubfx	w9, w1, #5, #3
  410dac:	csel	x8, x8, x0, eq  // eq = none
  410db0:	add	x8, x8, w9, uxtw #2
  410db4:	ldr	w9, [x8, #8]
  410db8:	lsr	w10, w9, w1
  410dbc:	and	w0, w10, #0x1
  410dc0:	and	w10, w2, #0x1
  410dc4:	eor	w10, w0, w10
  410dc8:	lsl	w10, w10, w1
  410dcc:	eor	w9, w10, w9
  410dd0:	str	w9, [x8, #8]
  410dd4:	ret
  410dd8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410ddc:	add	x8, x8, #0x758
  410de0:	cmp	x0, #0x0
  410de4:	csel	x8, x8, x0, eq  // eq = none
  410de8:	ldr	w0, [x8, #4]
  410dec:	str	w1, [x8, #4]
  410df0:	ret
  410df4:	stp	x29, x30, [sp, #-16]!
  410df8:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410dfc:	add	x8, x8, #0x758
  410e00:	cmp	x0, #0x0
  410e04:	csel	x8, x8, x0, eq  // eq = none
  410e08:	mov	w9, #0xa                   	// #10
  410e0c:	mov	x29, sp
  410e10:	str	w9, [x8]
  410e14:	cbz	x1, 410e28 <__fxstatat@plt+0xe3d8>
  410e18:	cbz	x2, 410e28 <__fxstatat@plt+0xe3d8>
  410e1c:	stp	x1, x2, [x8, #40]
  410e20:	ldp	x29, x30, [sp], #16
  410e24:	ret
  410e28:	bl	402770 <abort@plt>
  410e2c:	sub	sp, sp, #0x60
  410e30:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  410e34:	add	x8, x8, #0x758
  410e38:	cmp	x4, #0x0
  410e3c:	stp	x29, x30, [sp, #16]
  410e40:	str	x25, [sp, #32]
  410e44:	stp	x24, x23, [sp, #48]
  410e48:	stp	x22, x21, [sp, #64]
  410e4c:	stp	x20, x19, [sp, #80]
  410e50:	add	x29, sp, #0x10
  410e54:	mov	x19, x3
  410e58:	mov	x20, x2
  410e5c:	mov	x21, x1
  410e60:	mov	x22, x0
  410e64:	csel	x24, x8, x4, eq  // eq = none
  410e68:	bl	4029e0 <__errno_location@plt>
  410e6c:	ldp	w4, w5, [x24]
  410e70:	ldp	x7, x8, [x24, #40]
  410e74:	ldr	w25, [x0]
  410e78:	mov	x23, x0
  410e7c:	add	x6, x24, #0x8
  410e80:	mov	x0, x22
  410e84:	mov	x1, x21
  410e88:	mov	x2, x20
  410e8c:	mov	x3, x19
  410e90:	str	x8, [sp]
  410e94:	bl	410eb8 <__fxstatat@plt+0xe468>
  410e98:	str	w25, [x23]
  410e9c:	ldp	x20, x19, [sp, #80]
  410ea0:	ldp	x22, x21, [sp, #64]
  410ea4:	ldp	x24, x23, [sp, #48]
  410ea8:	ldr	x25, [sp, #32]
  410eac:	ldp	x29, x30, [sp, #16]
  410eb0:	add	sp, sp, #0x60
  410eb4:	ret
  410eb8:	sub	sp, sp, #0x120
  410ebc:	stp	x29, x30, [sp, #192]
  410ec0:	add	x29, sp, #0xc0
  410ec4:	ldr	x8, [x29, #96]
  410ec8:	stp	x28, x27, [sp, #208]
  410ecc:	stp	x26, x25, [sp, #224]
  410ed0:	stp	x24, x23, [sp, #240]
  410ed4:	stp	x22, x21, [sp, #256]
  410ed8:	stp	x20, x19, [sp, #272]
  410edc:	str	x7, [sp, #88]
  410ee0:	stur	x6, [x29, #-40]
  410ee4:	mov	w19, w5
  410ee8:	mov	w22, w4
  410eec:	mov	x28, x3
  410ef0:	mov	x20, x2
  410ef4:	mov	x24, x1
  410ef8:	stur	x8, [x29, #-88]
  410efc:	mov	x21, x0
  410f00:	bl	402850 <__ctype_get_mb_cur_max@plt>
  410f04:	mov	w4, w22
  410f08:	mov	w8, wzr
  410f0c:	mov	w14, wzr
  410f10:	str	w19, [sp, #80]
  410f14:	ubfx	w19, w19, #1, #1
  410f18:	add	x9, x20, #0x1
  410f1c:	mov	w25, #0x1                   	// #1
  410f20:	str	x0, [sp, #48]
  410f24:	str	xzr, [sp, #64]
  410f28:	stur	xzr, [x29, #-64]
  410f2c:	stur	xzr, [x29, #-32]
  410f30:	str	wzr, [sp, #72]
  410f34:	stur	x20, [x29, #-80]
  410f38:	str	x9, [sp, #96]
  410f3c:	cmp	w4, #0xa
  410f40:	b.hi	411b0c <__fxstatat@plt+0xf0bc>  // b.pmore
  410f44:	adrp	x12, 41a000 <_obstack_memory_used@@Base+0x6060>
  410f48:	mov	w9, w4
  410f4c:	add	x12, x12, #0x9a8
  410f50:	mov	x22, x24
  410f54:	adr	x10, 410f74 <__fxstatat@plt+0xe524>
  410f58:	ldrb	w11, [x12, x9]
  410f5c:	add	x10, x10, x11, lsl #2
  410f60:	ldur	x24, [x29, #-80]
  410f64:	mov	x20, xzr
  410f68:	mov	w16, wzr
  410f6c:	mov	w9, #0x1                   	// #1
  410f70:	br	x10
  410f74:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  410f78:	add	x0, x0, #0xafe
  410f7c:	mov	w1, w4
  410f80:	mov	w20, w4
  410f84:	mov	w23, w14
  410f88:	bl	412458 <__fxstatat@plt+0xfa08>
  410f8c:	str	x0, [sp, #88]
  410f90:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  410f94:	add	x0, x0, #0xf10
  410f98:	mov	w1, w20
  410f9c:	bl	412458 <__fxstatat@plt+0xfa08>
  410fa0:	mov	w14, w23
  410fa4:	mov	w4, w20
  410fa8:	stur	x0, [x29, #-88]
  410fac:	tbnz	w19, #0, 410ff0 <__fxstatat@plt+0xe5a0>
  410fb0:	ldr	x8, [sp, #88]
  410fb4:	ldrb	w9, [x8]
  410fb8:	cbz	w9, 410ff0 <__fxstatat@plt+0xe5a0>
  410fbc:	mov	w27, w14
  410fc0:	mov	w26, w4
  410fc4:	mov	x10, xzr
  410fc8:	add	x8, x8, #0x1
  410fcc:	b	410fe0 <__fxstatat@plt+0xe590>
  410fd0:	ldrb	w9, [x8, x10]
  410fd4:	add	x20, x10, #0x1
  410fd8:	mov	x10, x20
  410fdc:	cbz	w9, 410ffc <__fxstatat@plt+0xe5ac>
  410fe0:	cmp	x10, x22
  410fe4:	b.cs	410fd0 <__fxstatat@plt+0xe580>  // b.hs, b.nlast
  410fe8:	strb	w9, [x21, x10]
  410fec:	b	410fd0 <__fxstatat@plt+0xe580>
  410ff0:	mov	w27, w14
  410ff4:	mov	w26, w4
  410ff8:	mov	x20, xzr
  410ffc:	ldur	x23, [x29, #-88]
  411000:	mov	x0, x23
  411004:	bl	402430 <strlen@plt>
  411008:	stur	x0, [x29, #-32]
  41100c:	stur	x23, [x29, #-64]
  411010:	mov	w9, #0x1                   	// #1
  411014:	mov	w16, w19
  411018:	mov	w4, w26
  41101c:	mov	w14, w27
  411020:	b	4110c8 <__fxstatat@plt+0xe678>
  411024:	mov	w8, #0x1                   	// #1
  411028:	b	4110a4 <__fxstatat@plt+0xe654>
  41102c:	mov	w4, wzr
  411030:	mov	x20, xzr
  411034:	mov	w16, wzr
  411038:	mov	w9, w8
  41103c:	b	4110c8 <__fxstatat@plt+0xe678>
  411040:	tbnz	w19, #0, 4110a4 <__fxstatat@plt+0xe654>
  411044:	mov	w9, w8
  411048:	mov	w16, wzr
  41104c:	cbz	x22, 411058 <__fxstatat@plt+0xe608>
  411050:	mov	w8, #0x27                  	// #39
  411054:	strb	w8, [x21]
  411058:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  41105c:	add	x8, x8, #0xf10
  411060:	stur	x8, [x29, #-64]
  411064:	mov	w8, #0x1                   	// #1
  411068:	mov	w4, #0x2                   	// #2
  41106c:	mov	w20, #0x1                   	// #1
  411070:	stur	x8, [x29, #-32]
  411074:	b	4110c8 <__fxstatat@plt+0xe678>
  411078:	tbz	w19, #0, 4119a4 <__fxstatat@plt+0xef54>
  41107c:	mov	w8, #0x1                   	// #1
  411080:	stur	x8, [x29, #-32]
  411084:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  411088:	add	x8, x8, #0xafc
  41108c:	mov	x20, xzr
  411090:	mov	w4, #0x5                   	// #5
  411094:	stur	x8, [x29, #-64]
  411098:	mov	w9, #0x1                   	// #1
  41109c:	b	4110c4 <__fxstatat@plt+0xe674>
  4110a0:	tbz	w19, #0, 4119d8 <__fxstatat@plt+0xef88>
  4110a4:	mov	w9, #0x1                   	// #1
  4110a8:	stur	x9, [x29, #-32]
  4110ac:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  4110b0:	add	x9, x9, #0xf10
  4110b4:	mov	x20, xzr
  4110b8:	mov	w4, #0x2                   	// #2
  4110bc:	stur	x9, [x29, #-64]
  4110c0:	mov	w9, w8
  4110c4:	mov	w16, #0x1                   	// #1
  4110c8:	mov	w15, w9
  4110cc:	ldp	x8, x9, [x29, #-40]
  4110d0:	eor	w17, w16, #0x1
  4110d4:	stur	w17, [x29, #-68]
  4110d8:	mov	x23, xzr
  4110dc:	cmp	x8, #0x0
  4110e0:	cset	w8, eq  // eq = none
  4110e4:	cmp	x9, #0x0
  4110e8:	cset	w9, ne  // ne = any
  4110ec:	cmp	w4, #0x2
  4110f0:	cset	w10, ne  // ne = any
  4110f4:	and	w13, w10, w15
  4110f8:	and	w12, w9, w16
  4110fc:	orr	w10, w10, w17
  411100:	and	w17, w9, w13
  411104:	orr	w9, w13, w16
  411108:	eor	w9, w9, #0x1
  41110c:	cset	w11, eq  // eq = none
  411110:	orr	w8, w8, w9
  411114:	and	w12, w15, w12
  411118:	str	w10, [sp, #84]
  41111c:	and	w10, w11, w16
  411120:	stur	w8, [x29, #-24]
  411124:	eor	w8, w15, #0x1
  411128:	str	w12, [sp, #56]
  41112c:	str	w10, [sp, #76]
  411130:	stur	w15, [x29, #-72]
  411134:	str	w8, [sp, #60]
  411138:	stp	w16, w4, [x29, #-48]
  41113c:	stur	w17, [x29, #-52]
  411140:	cmn	x28, #0x1
  411144:	b.eq	411154 <__fxstatat@plt+0xe704>  // b.none
  411148:	cmp	x23, x28
  41114c:	b.ne	41115c <__fxstatat@plt+0xe70c>  // b.any
  411150:	b	411934 <__fxstatat@plt+0xeee4>
  411154:	ldrb	w8, [x24, x23]
  411158:	cbz	w8, 41193c <__fxstatat@plt+0xeeec>
  41115c:	cbz	w17, 41119c <__fxstatat@plt+0xe74c>
  411160:	ldur	x8, [x29, #-32]
  411164:	cmp	x8, #0x2
  411168:	add	x19, x23, x8
  41116c:	b.cc	411194 <__fxstatat@plt+0xe744>  // b.lo, b.ul, b.last
  411170:	cmn	x28, #0x1
  411174:	b.ne	411194 <__fxstatat@plt+0xe744>  // b.any
  411178:	mov	x0, x24
  41117c:	mov	w26, w14
  411180:	bl	402430 <strlen@plt>
  411184:	ldp	w17, w16, [x29, #-52]
  411188:	ldur	w4, [x29, #-44]
  41118c:	mov	w14, w26
  411190:	mov	x28, x0
  411194:	cmp	x19, x28
  411198:	b.ls	4111a4 <__fxstatat@plt+0xe754>  // b.plast
  41119c:	mov	w27, wzr
  4111a0:	b	4111dc <__fxstatat@plt+0xe78c>
  4111a4:	ldur	x1, [x29, #-64]
  4111a8:	ldur	x2, [x29, #-32]
  4111ac:	add	x0, x24, x23
  4111b0:	mov	w19, w14
  4111b4:	bl	4026d0 <bcmp@plt>
  4111b8:	ldur	w9, [x29, #-68]
  4111bc:	cmp	w0, #0x0
  4111c0:	cset	w8, ne  // ne = any
  4111c4:	cset	w27, eq  // eq = none
  4111c8:	orr	w8, w8, w9
  4111cc:	tbz	w8, #0, 411a10 <__fxstatat@plt+0xefc0>
  4111d0:	ldp	w16, w4, [x29, #-48]
  4111d4:	ldur	w17, [x29, #-52]
  4111d8:	mov	w14, w19
  4111dc:	ldrb	w19, [x24, x23]
  4111e0:	cmp	w19, #0x7e
  4111e4:	b.hi	411424 <__fxstatat@plt+0xe9d4>  // b.pmore
  4111e8:	adrp	x13, 41a000 <_obstack_memory_used@@Base+0x6060>
  4111ec:	add	x13, x13, #0x9b3
  4111f0:	adr	x12, 411214 <__fxstatat@plt+0xe7c4>
  4111f4:	ldrb	w9, [x13, x19]
  4111f8:	add	x12, x12, x9, lsl #2
  4111fc:	mov	w10, wzr
  411200:	mov	w8, wzr
  411204:	mov	w26, #0x1                   	// #1
  411208:	mov	w11, #0x6e                  	// #110
  41120c:	mov	w9, #0x61                  	// #97
  411210:	br	x12
  411214:	ldur	w9, [x29, #-24]
  411218:	tbnz	w9, #0, 411238 <__fxstatat@plt+0xe7e8>
  41121c:	ldur	x10, [x29, #-40]
  411220:	lsr	w9, w19, #5
  411224:	ldr	w9, [x10, w9, uxtw #2]
  411228:	lsr	w9, w9, w19
  41122c:	tbz	w9, #0, 411238 <__fxstatat@plt+0xe7e8>
  411230:	mov	w9, w19
  411234:	b	411240 <__fxstatat@plt+0xe7f0>
  411238:	mov	w9, w19
  41123c:	cbz	w27, 411488 <__fxstatat@plt+0xea38>
  411240:	tbnz	w16, #0, 4119e8 <__fxstatat@plt+0xef98>
  411244:	cmp	w4, #0x2
  411248:	cset	w8, ne  // ne = any
  41124c:	orr	w8, w8, w14
  411250:	tbnz	w8, #0, 411294 <__fxstatat@plt+0xe844>
  411254:	cmp	x20, x22
  411258:	b.cs	411264 <__fxstatat@plt+0xe814>  // b.hs, b.nlast
  41125c:	mov	w8, #0x27                  	// #39
  411260:	strb	w8, [x21, x20]
  411264:	add	x8, x20, #0x1
  411268:	cmp	x8, x22
  41126c:	b.cs	411278 <__fxstatat@plt+0xe828>  // b.hs, b.nlast
  411270:	mov	w10, #0x24                  	// #36
  411274:	strb	w10, [x21, x8]
  411278:	add	x8, x20, #0x2
  41127c:	cmp	x8, x22
  411280:	b.cs	41128c <__fxstatat@plt+0xe83c>  // b.hs, b.nlast
  411284:	mov	w10, #0x27                  	// #39
  411288:	strb	w10, [x21, x8]
  41128c:	add	x20, x20, #0x3
  411290:	mov	w14, #0x1                   	// #1
  411294:	cmp	x20, x22
  411298:	b.cs	4112a4 <__fxstatat@plt+0xe854>  // b.hs, b.nlast
  41129c:	mov	w8, #0x5c                  	// #92
  4112a0:	strb	w8, [x21, x20]
  4112a4:	add	x20, x20, #0x1
  4112a8:	cmp	x20, x22
  4112ac:	b.cs	4112b4 <__fxstatat@plt+0xe864>  // b.hs, b.nlast
  4112b0:	strb	w9, [x21, x20]
  4112b4:	add	x20, x20, #0x1
  4112b8:	and	w25, w25, w26
  4112bc:	add	x23, x23, #0x1
  4112c0:	cmn	x28, #0x1
  4112c4:	b.ne	411148 <__fxstatat@plt+0xe6f8>  // b.any
  4112c8:	b	411154 <__fxstatat@plt+0xe704>
  4112cc:	cmp	x28, #0x1
  4112d0:	b.eq	4112f4 <__fxstatat@plt+0xe8a4>  // b.none
  4112d4:	cmn	x28, #0x1
  4112d8:	b.ne	4112f8 <__fxstatat@plt+0xe8a8>  // b.any
  4112dc:	ldrb	w8, [x24, #1]
  4112e0:	cbz	w8, 4112f4 <__fxstatat@plt+0xe8a4>
  4112e4:	mov	w8, wzr
  4112e8:	mov	w26, wzr
  4112ec:	mov	x28, #0xffffffffffffffff    	// #-1
  4112f0:	b	411214 <__fxstatat@plt+0xe7c4>
  4112f4:	cbz	x23, 411304 <__fxstatat@plt+0xe8b4>
  4112f8:	mov	w8, wzr
  4112fc:	mov	w26, wzr
  411300:	b	411214 <__fxstatat@plt+0xe7c4>
  411304:	mov	w10, #0x1                   	// #1
  411308:	cmp	w4, #0x2
  41130c:	b.ne	411314 <__fxstatat@plt+0xe8c4>  // b.any
  411310:	tbnz	w16, #0, 4119e8 <__fxstatat@plt+0xef98>
  411314:	mov	w8, wzr
  411318:	mov	w26, w10
  41131c:	b	411214 <__fxstatat@plt+0xe7c4>
  411320:	cmp	w4, #0x2
  411324:	b.ne	411470 <__fxstatat@plt+0xea20>  // b.any
  411328:	tbz	w16, #0, 41147c <__fxstatat@plt+0xea2c>
  41132c:	b	4119e8 <__fxstatat@plt+0xef98>
  411330:	mov	w9, #0x66                  	// #102
  411334:	b	4114cc <__fxstatat@plt+0xea7c>
  411338:	mov	w11, #0x74                  	// #116
  41133c:	b	41134c <__fxstatat@plt+0xe8fc>
  411340:	mov	w9, #0x62                  	// #98
  411344:	b	4114cc <__fxstatat@plt+0xea7c>
  411348:	mov	w11, #0x72                  	// #114
  41134c:	ldr	w8, [sp, #84]
  411350:	mov	w9, w11
  411354:	tbnz	w8, #0, 4114cc <__fxstatat@plt+0xea7c>
  411358:	b	4119e8 <__fxstatat@plt+0xef98>
  41135c:	ldur	w8, [x29, #-72]
  411360:	tbz	w8, #0, 4114e0 <__fxstatat@plt+0xea90>
  411364:	cmp	w4, #0x2
  411368:	tbnz	w16, #0, 411b00 <__fxstatat@plt+0xf0b0>
  41136c:	cset	w8, ne  // ne = any
  411370:	orr	w8, w8, w14
  411374:	tbz	w8, #0, 411810 <__fxstatat@plt+0xedc0>
  411378:	mov	x8, x20
  41137c:	cmp	x8, x22
  411380:	b.cc	411858 <__fxstatat@plt+0xee08>  // b.lo, b.ul, b.last
  411384:	b	411860 <__fxstatat@plt+0xee10>
  411388:	cmp	w4, #0x5
  41138c:	b.eq	41160c <__fxstatat@plt+0xebbc>  // b.none
  411390:	cmp	w4, #0x2
  411394:	b.ne	4116bc <__fxstatat@plt+0xec6c>  // b.any
  411398:	tbz	w16, #0, 4116bc <__fxstatat@plt+0xec6c>
  41139c:	b	4119e8 <__fxstatat@plt+0xef98>
  4113a0:	mov	w9, #0x76                  	// #118
  4113a4:	b	4114cc <__fxstatat@plt+0xea7c>
  4113a8:	cmp	w4, #0x2
  4113ac:	b.ne	4114f0 <__fxstatat@plt+0xeaa0>  // b.any
  4113b0:	tbnz	w16, #0, 4119e8 <__fxstatat@plt+0xef98>
  4113b4:	ldr	x10, [sp, #64]
  4113b8:	cmp	x22, #0x0
  4113bc:	cset	w8, eq  // eq = none
  4113c0:	cmp	x10, #0x0
  4113c4:	cset	w9, ne  // ne = any
  4113c8:	orr	w8, w9, w8
  4113cc:	cmp	w8, #0x0
  4113d0:	csel	x10, x10, x22, ne  // ne = any
  4113d4:	csel	x22, x22, xzr, ne  // ne = any
  4113d8:	cmp	x20, x22
  4113dc:	str	x10, [sp, #64]
  4113e0:	b.cs	4113ec <__fxstatat@plt+0xe99c>  // b.hs, b.nlast
  4113e4:	mov	w8, #0x27                  	// #39
  4113e8:	strb	w8, [x21, x20]
  4113ec:	add	x8, x20, #0x1
  4113f0:	cmp	x8, x22
  4113f4:	b.cs	411400 <__fxstatat@plt+0xe9b0>  // b.hs, b.nlast
  4113f8:	mov	w9, #0x5c                  	// #92
  4113fc:	strb	w9, [x21, x8]
  411400:	add	x8, x20, #0x2
  411404:	cmp	x8, x22
  411408:	b.cs	411414 <__fxstatat@plt+0xe9c4>  // b.hs, b.nlast
  41140c:	mov	w9, #0x27                  	// #39
  411410:	strb	w9, [x21, x8]
  411414:	mov	w14, wzr
  411418:	mov	w8, wzr
  41141c:	add	x20, x20, #0x3
  411420:	b	4114f4 <__fxstatat@plt+0xeaa4>
  411424:	ldr	x8, [sp, #48]
  411428:	str	w14, [sp, #28]
  41142c:	cmp	x8, #0x1
  411430:	b.ne	411508 <__fxstatat@plt+0xeab8>  // b.any
  411434:	bl	402820 <__ctype_b_loc@plt>
  411438:	ldr	x8, [x0]
  41143c:	mov	w11, #0x1                   	// #1
  411440:	ldrh	w8, [x8, x19, lsl #1]
  411444:	ubfx	w26, w8, #14, #1
  411448:	ldr	w8, [sp, #60]
  41144c:	ldp	w16, w4, [x29, #-48]
  411450:	ldr	w14, [sp, #28]
  411454:	ldur	w17, [x29, #-52]
  411458:	cmp	x11, #0x1
  41145c:	orr	w8, w26, w8
  411460:	b.hi	4116cc <__fxstatat@plt+0xec7c>  // b.pmore
  411464:	tbz	w8, #0, 4116cc <__fxstatat@plt+0xec7c>
  411468:	mov	w8, wzr
  41146c:	b	411214 <__fxstatat@plt+0xe7c4>
  411470:	ldr	w8, [sp, #56]
  411474:	mov	w9, #0x5c                  	// #92
  411478:	tbz	w8, #0, 4114cc <__fxstatat@plt+0xea7c>
  41147c:	mov	w8, wzr
  411480:	mov	w26, wzr
  411484:	mov	w19, #0x5c                  	// #92
  411488:	tbnz	w8, #0, 4114bc <__fxstatat@plt+0xea6c>
  41148c:	tbz	w14, #0, 4114bc <__fxstatat@plt+0xea6c>
  411490:	cmp	x20, x22
  411494:	b.cs	4114a0 <__fxstatat@plt+0xea50>  // b.hs, b.nlast
  411498:	mov	w8, #0x27                  	// #39
  41149c:	strb	w8, [x21, x20]
  4114a0:	add	x8, x20, #0x1
  4114a4:	cmp	x8, x22
  4114a8:	b.cs	4114b4 <__fxstatat@plt+0xea64>  // b.hs, b.nlast
  4114ac:	mov	w9, #0x27                  	// #39
  4114b0:	strb	w9, [x21, x8]
  4114b4:	mov	w14, wzr
  4114b8:	add	x20, x20, #0x2
  4114bc:	mov	w9, w19
  4114c0:	cmp	x20, x22
  4114c4:	b.cc	4112b0 <__fxstatat@plt+0xe860>  // b.lo, b.ul, b.last
  4114c8:	b	4112b4 <__fxstatat@plt+0xe864>
  4114cc:	ldur	w10, [x29, #-72]
  4114d0:	mov	w8, wzr
  4114d4:	mov	w26, wzr
  4114d8:	tbz	w10, #0, 411214 <__fxstatat@plt+0xe7c4>
  4114dc:	b	411240 <__fxstatat@plt+0xe7f0>
  4114e0:	ldr	w8, [sp, #80]
  4114e4:	tbnz	w8, #0, 4112bc <__fxstatat@plt+0xe86c>
  4114e8:	mov	w19, wzr
  4114ec:	b	4112f8 <__fxstatat@plt+0xe8a8>
  4114f0:	mov	w8, wzr
  4114f4:	mov	w9, #0x1                   	// #1
  4114f8:	mov	w19, #0x27                  	// #39
  4114fc:	str	w9, [sp, #72]
  411500:	mov	w26, #0x1                   	// #1
  411504:	b	411214 <__fxstatat@plt+0xe7c4>
  411508:	cmn	x28, #0x1
  41150c:	stur	xzr, [x29, #-16]
  411510:	b.ne	411520 <__fxstatat@plt+0xead0>  // b.any
  411514:	mov	x0, x24
  411518:	bl	402430 <strlen@plt>
  41151c:	mov	x28, x0
  411520:	ldr	x8, [sp, #96]
  411524:	mov	x11, xzr
  411528:	mov	w26, #0x1                   	// #1
  41152c:	str	x21, [sp, #32]
  411530:	add	x8, x8, x23
  411534:	str	x8, [sp, #16]
  411538:	b	411570 <__fxstatat@plt+0xeb20>
  41153c:	ldur	w0, [x29, #-20]
  411540:	bl	4029c0 <iswprint@plt>
  411544:	ldr	x21, [sp, #40]
  411548:	cmp	w0, #0x0
  41154c:	cset	w8, ne  // ne = any
  411550:	sub	x0, x29, #0x10
  411554:	and	w26, w26, w8
  411558:	add	x21, x24, x21
  41155c:	bl	402780 <mbsinit@plt>
  411560:	mov	x11, x21
  411564:	ldr	x21, [sp, #32]
  411568:	ldur	x24, [x29, #-80]
  41156c:	cbnz	w0, 411448 <__fxstatat@plt+0xe9f8>
  411570:	add	x21, x11, x23
  411574:	add	x1, x24, x21
  411578:	sub	x2, x28, x21
  41157c:	sub	x0, x29, #0x14
  411580:	sub	x3, x29, #0x10
  411584:	str	x11, [sp, #40]
  411588:	bl	413bc8 <__fxstatat@plt+0x11178>
  41158c:	cbz	x0, 411914 <__fxstatat@plt+0xeec4>
  411590:	mov	x24, x0
  411594:	cmn	x0, #0x1
  411598:	b.eq	411910 <__fxstatat@plt+0xeec0>  // b.none
  41159c:	cmn	x24, #0x2
  4115a0:	b.eq	4118d4 <__fxstatat@plt+0xee84>  // b.none
  4115a4:	ldr	w9, [sp, #76]
  4115a8:	ldr	x21, [sp, #32]
  4115ac:	cmp	x24, #0x2
  4115b0:	cset	w8, cc  // cc = lo, ul, last
  4115b4:	eor	w9, w9, #0x1
  4115b8:	mov	x12, #0x2b                  	// #43
  4115bc:	orr	w8, w9, w8
  4115c0:	mov	w11, #0x1                   	// #1
  4115c4:	movk	x12, #0x2, lsl #32
  4115c8:	tbnz	w8, #0, 41153c <__fxstatat@plt+0xeaec>
  4115cc:	ldr	x9, [sp, #40]
  4115d0:	ldr	x10, [sp, #16]
  4115d4:	sub	x8, x24, #0x1
  4115d8:	add	x9, x10, x9
  4115dc:	b	4115ec <__fxstatat@plt+0xeb9c>
  4115e0:	subs	x8, x8, #0x1
  4115e4:	add	x9, x9, #0x1
  4115e8:	b.eq	41153c <__fxstatat@plt+0xeaec>  // b.none
  4115ec:	ldrb	w10, [x9]
  4115f0:	sub	w10, w10, #0x5b
  4115f4:	cmp	w10, #0x21
  4115f8:	b.hi	4115e0 <__fxstatat@plt+0xeb90>  // b.pmore
  4115fc:	lsl	x10, x11, x10
  411600:	tst	x10, x12
  411604:	b.eq	4115e0 <__fxstatat@plt+0xeb90>  // b.none
  411608:	b	411a1c <__fxstatat@plt+0xefcc>
  41160c:	ldr	w8, [sp, #80]
  411610:	tbz	w8, #2, 4116bc <__fxstatat@plt+0xec6c>
  411614:	add	x9, x23, #0x2
  411618:	cmp	x9, x28
  41161c:	b.cs	4116bc <__fxstatat@plt+0xec6c>  // b.hs, b.nlast
  411620:	add	x8, x23, x24
  411624:	ldrb	w8, [x8, #1]
  411628:	cmp	w8, #0x3f
  41162c:	b.ne	4116bc <__fxstatat@plt+0xec6c>  // b.any
  411630:	ldrb	w19, [x24, x9]
  411634:	mov	w8, wzr
  411638:	cmp	w19, #0x3e
  41163c:	b.hi	411928 <__fxstatat@plt+0xeed8>  // b.pmore
  411640:	mov	w10, #0x1                   	// #1
  411644:	mov	x11, #0xa38200000000        	// #179778741075968
  411648:	lsl	x10, x10, x19
  41164c:	movk	x11, #0x7000, lsl #48
  411650:	tst	x10, x11
  411654:	b.eq	411928 <__fxstatat@plt+0xeed8>  // b.none
  411658:	tbnz	w16, #0, 4119e8 <__fxstatat@plt+0xef98>
  41165c:	cmp	x20, x22
  411660:	b.cs	41166c <__fxstatat@plt+0xec1c>  // b.hs, b.nlast
  411664:	mov	w8, #0x3f                  	// #63
  411668:	strb	w8, [x21, x20]
  41166c:	add	x8, x20, #0x1
  411670:	cmp	x8, x22
  411674:	b.cs	411680 <__fxstatat@plt+0xec30>  // b.hs, b.nlast
  411678:	mov	w10, #0x22                  	// #34
  41167c:	strb	w10, [x21, x8]
  411680:	add	x8, x20, #0x2
  411684:	cmp	x8, x22
  411688:	b.cs	411694 <__fxstatat@plt+0xec44>  // b.hs, b.nlast
  41168c:	mov	w10, #0x22                  	// #34
  411690:	strb	w10, [x21, x8]
  411694:	add	x8, x20, #0x3
  411698:	cmp	x8, x22
  41169c:	b.cs	4116a8 <__fxstatat@plt+0xec58>  // b.hs, b.nlast
  4116a0:	mov	w10, #0x3f                  	// #63
  4116a4:	strb	w10, [x21, x8]
  4116a8:	mov	w8, wzr
  4116ac:	mov	w26, wzr
  4116b0:	add	x20, x20, #0x4
  4116b4:	mov	x23, x9
  4116b8:	b	411214 <__fxstatat@plt+0xe7c4>
  4116bc:	mov	w8, wzr
  4116c0:	mov	w26, wzr
  4116c4:	mov	w19, #0x3f                  	// #63
  4116c8:	b	411214 <__fxstatat@plt+0xe7c4>
  4116cc:	mov	w10, wzr
  4116d0:	add	x9, x11, x23
  4116d4:	b	4116e8 <__fxstatat@plt+0xec98>
  4116d8:	ldr	x12, [sp, #96]
  4116dc:	add	x20, x20, #0x1
  4116e0:	ldrb	w19, [x12, x23]
  4116e4:	mov	x23, x11
  4116e8:	tbz	w8, #0, 41170c <__fxstatat@plt+0xecbc>
  4116ec:	tbz	w27, #0, 4117b8 <__fxstatat@plt+0xed68>
  4116f0:	cmp	x20, x22
  4116f4:	b.cs	411700 <__fxstatat@plt+0xecb0>  // b.hs, b.nlast
  4116f8:	mov	w11, #0x5c                  	// #92
  4116fc:	strb	w11, [x21, x20]
  411700:	mov	w27, wzr
  411704:	add	x20, x20, #0x1
  411708:	b	4117bc <__fxstatat@plt+0xed6c>
  41170c:	tbnz	w16, #0, 4119e8 <__fxstatat@plt+0xef98>
  411710:	cmp	w4, #0x2
  411714:	cset	w10, ne  // ne = any
  411718:	orr	w10, w10, w14
  41171c:	tbnz	w10, #0, 411760 <__fxstatat@plt+0xed10>
  411720:	cmp	x20, x22
  411724:	b.cs	411730 <__fxstatat@plt+0xece0>  // b.hs, b.nlast
  411728:	mov	w10, #0x27                  	// #39
  41172c:	strb	w10, [x21, x20]
  411730:	add	x10, x20, #0x1
  411734:	cmp	x10, x22
  411738:	b.cs	411744 <__fxstatat@plt+0xecf4>  // b.hs, b.nlast
  41173c:	mov	w11, #0x24                  	// #36
  411740:	strb	w11, [x21, x10]
  411744:	add	x10, x20, #0x2
  411748:	cmp	x10, x22
  41174c:	b.cs	411758 <__fxstatat@plt+0xed08>  // b.hs, b.nlast
  411750:	mov	w11, #0x27                  	// #39
  411754:	strb	w11, [x21, x10]
  411758:	add	x20, x20, #0x3
  41175c:	mov	w14, #0x1                   	// #1
  411760:	cmp	x20, x22
  411764:	b.cs	411770 <__fxstatat@plt+0xed20>  // b.hs, b.nlast
  411768:	mov	w10, #0x5c                  	// #92
  41176c:	strb	w10, [x21, x20]
  411770:	add	x10, x20, #0x1
  411774:	cmp	x10, x22
  411778:	b.cs	411788 <__fxstatat@plt+0xed38>  // b.hs, b.nlast
  41177c:	mov	w11, #0x30                  	// #48
  411780:	bfxil	w11, w19, #6, #2
  411784:	strb	w11, [x21, x10]
  411788:	add	x10, x20, #0x2
  41178c:	cmp	x10, x22
  411790:	b.cs	4117a0 <__fxstatat@plt+0xed50>  // b.hs, b.nlast
  411794:	mov	w11, #0x30                  	// #48
  411798:	bfxil	w11, w19, #3, #3
  41179c:	strb	w11, [x21, x10]
  4117a0:	mov	w11, #0x30                  	// #48
  4117a4:	bfxil	w11, w19, #0, #3
  4117a8:	add	x20, x20, #0x3
  4117ac:	mov	w10, #0x1                   	// #1
  4117b0:	mov	w19, w11
  4117b4:	b	4117bc <__fxstatat@plt+0xed6c>
  4117b8:	mov	w27, wzr
  4117bc:	add	x11, x23, #0x1
  4117c0:	cmp	x9, x11
  4117c4:	b.ls	4118c8 <__fxstatat@plt+0xee78>  // b.plast
  4117c8:	and	w12, w10, #0x1
  4117cc:	orn	w12, w12, w14
  4117d0:	tbnz	w12, #0, 411800 <__fxstatat@plt+0xedb0>
  4117d4:	cmp	x20, x22
  4117d8:	b.cs	4117e4 <__fxstatat@plt+0xed94>  // b.hs, b.nlast
  4117dc:	mov	w12, #0x27                  	// #39
  4117e0:	strb	w12, [x21, x20]
  4117e4:	add	x12, x20, #0x1
  4117e8:	cmp	x12, x22
  4117ec:	b.cs	4117f8 <__fxstatat@plt+0xeda8>  // b.hs, b.nlast
  4117f0:	mov	w13, #0x27                  	// #39
  4117f4:	strb	w13, [x21, x12]
  4117f8:	mov	w14, wzr
  4117fc:	add	x20, x20, #0x2
  411800:	cmp	x20, x22
  411804:	b.cs	4116d8 <__fxstatat@plt+0xec88>  // b.hs, b.nlast
  411808:	strb	w19, [x21, x20]
  41180c:	b	4116d8 <__fxstatat@plt+0xec88>
  411810:	cmp	x20, x22
  411814:	b.cs	411820 <__fxstatat@plt+0xedd0>  // b.hs, b.nlast
  411818:	mov	w8, #0x27                  	// #39
  41181c:	strb	w8, [x21, x20]
  411820:	add	x8, x20, #0x1
  411824:	cmp	x8, x22
  411828:	b.cs	411834 <__fxstatat@plt+0xede4>  // b.hs, b.nlast
  41182c:	mov	w9, #0x24                  	// #36
  411830:	strb	w9, [x21, x8]
  411834:	add	x8, x20, #0x2
  411838:	cmp	x8, x22
  41183c:	b.cs	411848 <__fxstatat@plt+0xedf8>  // b.hs, b.nlast
  411840:	mov	w9, #0x27                  	// #39
  411844:	strb	w9, [x21, x8]
  411848:	add	x8, x20, #0x3
  41184c:	mov	w14, #0x1                   	// #1
  411850:	cmp	x8, x22
  411854:	b.cs	411860 <__fxstatat@plt+0xee10>  // b.hs, b.nlast
  411858:	mov	w9, #0x5c                  	// #92
  41185c:	strb	w9, [x21, x8]
  411860:	cmp	w4, #0x2
  411864:	add	x20, x8, #0x1
  411868:	b.eq	4118b8 <__fxstatat@plt+0xee68>  // b.none
  41186c:	add	x9, x23, #0x1
  411870:	cmp	x9, x28
  411874:	b.cs	4118b8 <__fxstatat@plt+0xee68>  // b.hs, b.nlast
  411878:	ldrb	w9, [x24, x9]
  41187c:	sub	w9, w9, #0x30
  411880:	cmp	w9, #0x9
  411884:	b.hi	4118b8 <__fxstatat@plt+0xee68>  // b.pmore
  411888:	cmp	x20, x22
  41188c:	b.cs	411898 <__fxstatat@plt+0xee48>  // b.hs, b.nlast
  411890:	mov	w9, #0x30                  	// #48
  411894:	strb	w9, [x21, x20]
  411898:	add	x9, x8, #0x2
  41189c:	cmp	x9, x22
  4118a0:	b.cs	4118ac <__fxstatat@plt+0xee5c>  // b.hs, b.nlast
  4118a4:	mov	w10, #0x30                  	// #48
  4118a8:	strb	w10, [x21, x9]
  4118ac:	mov	w26, wzr
  4118b0:	add	x20, x8, #0x3
  4118b4:	b	4118bc <__fxstatat@plt+0xee6c>
  4118b8:	mov	w26, wzr
  4118bc:	mov	w8, #0x1                   	// #1
  4118c0:	mov	w19, #0x30                  	// #48
  4118c4:	b	411214 <__fxstatat@plt+0xe7c4>
  4118c8:	and	w8, w10, #0x1
  4118cc:	tbz	w8, #0, 41148c <__fxstatat@plt+0xea3c>
  4118d0:	b	4114bc <__fxstatat@plt+0xea6c>
  4118d4:	cmp	x28, x21
  4118d8:	b.ls	411910 <__fxstatat@plt+0xeec0>  // b.plast
  4118dc:	ldur	x24, [x29, #-80]
  4118e0:	ldp	x21, x11, [sp, #32]
  4118e4:	sub	x8, x28, x23
  4118e8:	add	x9, x24, x23
  4118ec:	ldrb	w10, [x9, x11]
  4118f0:	cbz	w10, 411920 <__fxstatat@plt+0xeed0>
  4118f4:	add	x11, x11, #0x1
  4118f8:	add	x10, x23, x11
  4118fc:	cmp	x10, x28
  411900:	b.cc	4118ec <__fxstatat@plt+0xee9c>  // b.lo, b.ul, b.last
  411904:	mov	w26, wzr
  411908:	mov	x11, x8
  41190c:	b	411448 <__fxstatat@plt+0xe9f8>
  411910:	mov	w26, wzr
  411914:	ldp	x21, x11, [sp, #32]
  411918:	ldur	x24, [x29, #-80]
  41191c:	b	411448 <__fxstatat@plt+0xe9f8>
  411920:	mov	w26, wzr
  411924:	b	411448 <__fxstatat@plt+0xe9f8>
  411928:	mov	w19, #0x3f                  	// #63
  41192c:	mov	w26, w8
  411930:	b	411214 <__fxstatat@plt+0xe7c4>
  411934:	mov	x28, x23
  411938:	b	411940 <__fxstatat@plt+0xeef0>
  41193c:	mov	x28, #0xffffffffffffffff    	// #-1
  411940:	cmp	w4, #0x2
  411944:	ldur	w10, [x29, #-72]
  411948:	cset	w8, eq  // eq = none
  41194c:	cmp	x20, #0x0
  411950:	cset	w9, eq  // eq = none
  411954:	and	w8, w8, w9
  411958:	and	w8, w16, w8
  41195c:	tbnz	w8, #0, 4119ec <__fxstatat@plt+0xef9c>
  411960:	cmp	w4, #0x2
  411964:	cset	w8, ne  // ne = any
  411968:	orr	w8, w16, w8
  41196c:	tbnz	w8, #0, 411ab8 <__fxstatat@plt+0xf068>
  411970:	ldr	w8, [sp, #72]
  411974:	eor	w8, w8, #0x1
  411978:	tbnz	w8, #0, 411ab8 <__fxstatat@plt+0xf068>
  41197c:	tbnz	w25, #0, 411a88 <__fxstatat@plt+0xf038>
  411980:	ldr	x24, [sp, #64]
  411984:	mov	w19, wzr
  411988:	cbz	x24, 411ab4 <__fxstatat@plt+0xf064>
  41198c:	mov	w4, #0x2                   	// #2
  411990:	mov	w8, w10
  411994:	mov	w25, w19
  411998:	mov	w16, w19
  41199c:	cbz	x22, 410f3c <__fxstatat@plt+0xe4ec>
  4119a0:	b	411ab8 <__fxstatat@plt+0xf068>
  4119a4:	mov	w16, wzr
  4119a8:	cbz	x22, 4119b4 <__fxstatat@plt+0xef64>
  4119ac:	mov	w8, #0x22                  	// #34
  4119b0:	strb	w8, [x21]
  4119b4:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  4119b8:	add	x8, x8, #0xafc
  4119bc:	stur	x8, [x29, #-64]
  4119c0:	mov	w8, #0x1                   	// #1
  4119c4:	mov	w20, #0x1                   	// #1
  4119c8:	mov	w4, #0x5                   	// #5
  4119cc:	stur	x8, [x29, #-32]
  4119d0:	mov	w9, #0x1                   	// #1
  4119d4:	b	4110c8 <__fxstatat@plt+0xe678>
  4119d8:	mov	w9, #0x1                   	// #1
  4119dc:	mov	w16, wzr
  4119e0:	cbnz	x22, 411050 <__fxstatat@plt+0xe600>
  4119e4:	b	411058 <__fxstatat@plt+0xe608>
  4119e8:	ldur	w10, [x29, #-72]
  4119ec:	tst	w10, #0x1
  4119f0:	mov	w8, #0x2                   	// #2
  4119f4:	mov	w9, #0x4                   	// #4
  4119f8:	csel	w8, w9, w8, ne  // ne = any
  4119fc:	cmp	w4, #0x2
  411a00:	b.ne	411a08 <__fxstatat@plt+0xefb8>  // b.any
  411a04:	mov	w4, w8
  411a08:	ldr	x7, [sp, #88]
  411a0c:	b	411a38 <__fxstatat@plt+0xefe8>
  411a10:	ldr	x7, [sp, #88]
  411a14:	ldur	w4, [x29, #-44]
  411a18:	b	411a38 <__fxstatat@plt+0xefe8>
  411a1c:	ldur	w8, [x29, #-72]
  411a20:	ldr	x7, [sp, #88]
  411a24:	ldur	x24, [x29, #-80]
  411a28:	mov	w9, #0x4                   	// #4
  411a2c:	tst	w8, #0x1
  411a30:	mov	w8, #0x2                   	// #2
  411a34:	csel	w4, w9, w8, ne  // ne = any
  411a38:	ldr	w8, [sp, #80]
  411a3c:	mov	x0, x21
  411a40:	mov	x1, x22
  411a44:	mov	x2, x24
  411a48:	and	w5, w8, #0xfffffffd
  411a4c:	ldur	x8, [x29, #-88]
  411a50:	mov	x3, x28
  411a54:	mov	x6, xzr
  411a58:	str	x8, [sp]
  411a5c:	bl	410eb8 <__fxstatat@plt+0xe468>
  411a60:	mov	x20, x0
  411a64:	mov	x0, x20
  411a68:	ldp	x20, x19, [sp, #272]
  411a6c:	ldp	x22, x21, [sp, #256]
  411a70:	ldp	x24, x23, [sp, #240]
  411a74:	ldp	x26, x25, [sp, #224]
  411a78:	ldp	x28, x27, [sp, #208]
  411a7c:	ldp	x29, x30, [sp, #192]
  411a80:	add	sp, sp, #0x120
  411a84:	ret
  411a88:	ldur	x8, [x29, #-88]
  411a8c:	ldr	x1, [sp, #64]
  411a90:	ldur	x2, [x29, #-80]
  411a94:	ldr	w5, [sp, #80]
  411a98:	ldur	x6, [x29, #-40]
  411a9c:	ldr	x7, [sp, #88]
  411aa0:	mov	w4, #0x5                   	// #5
  411aa4:	str	x8, [sp]
  411aa8:	mov	x0, x21
  411aac:	mov	x3, x28
  411ab0:	b	411a5c <__fxstatat@plt+0xf00c>
  411ab4:	mov	w16, w19
  411ab8:	ldur	x8, [x29, #-64]
  411abc:	cbz	x8, 411af0 <__fxstatat@plt+0xf0a0>
  411ac0:	tbnz	w16, #0, 411af0 <__fxstatat@plt+0xf0a0>
  411ac4:	ldrb	w9, [x8]
  411ac8:	cbz	w9, 411af0 <__fxstatat@plt+0xf0a0>
  411acc:	add	x8, x8, #0x1
  411ad0:	b	411ae0 <__fxstatat@plt+0xf090>
  411ad4:	ldrb	w9, [x8], #1
  411ad8:	add	x20, x20, #0x1
  411adc:	cbz	w9, 411af0 <__fxstatat@plt+0xf0a0>
  411ae0:	cmp	x20, x22
  411ae4:	b.cs	411ad4 <__fxstatat@plt+0xf084>  // b.hs, b.nlast
  411ae8:	strb	w9, [x21, x20]
  411aec:	b	411ad4 <__fxstatat@plt+0xf084>
  411af0:	cmp	x20, x22
  411af4:	b.cs	411a64 <__fxstatat@plt+0xf014>  // b.hs, b.nlast
  411af8:	strb	wzr, [x21, x20]
  411afc:	b	411a64 <__fxstatat@plt+0xf014>
  411b00:	b.ne	411a08 <__fxstatat@plt+0xefb8>  // b.any
  411b04:	mov	w4, #0x4                   	// #4
  411b08:	b	411a08 <__fxstatat@plt+0xefb8>
  411b0c:	bl	402770 <abort@plt>
  411b10:	sub	sp, sp, #0x60
  411b14:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411b18:	add	x8, x8, #0x758
  411b1c:	cmp	x2, #0x0
  411b20:	stp	x29, x30, [sp, #16]
  411b24:	stp	x26, x25, [sp, #32]
  411b28:	stp	x24, x23, [sp, #48]
  411b2c:	stp	x22, x21, [sp, #64]
  411b30:	stp	x20, x19, [sp, #80]
  411b34:	add	x29, sp, #0x10
  411b38:	mov	x19, x1
  411b3c:	mov	x20, x0
  411b40:	csel	x25, x8, x2, eq  // eq = none
  411b44:	bl	4029e0 <__errno_location@plt>
  411b48:	ldp	w4, w8, [x25]
  411b4c:	ldp	x7, x9, [x25, #40]
  411b50:	ldr	w26, [x0]
  411b54:	add	x23, x25, #0x8
  411b58:	orr	w22, w8, #0x1
  411b5c:	mov	x21, x0
  411b60:	mov	x0, xzr
  411b64:	mov	x1, xzr
  411b68:	mov	x2, x20
  411b6c:	mov	x3, x19
  411b70:	mov	w5, w22
  411b74:	mov	x6, x23
  411b78:	str	x9, [sp]
  411b7c:	bl	410eb8 <__fxstatat@plt+0xe468>
  411b80:	add	x24, x0, #0x1
  411b84:	mov	x0, x24
  411b88:	bl	412e10 <__fxstatat@plt+0x103c0>
  411b8c:	ldr	w4, [x25]
  411b90:	ldp	x7, x8, [x25, #40]
  411b94:	mov	x1, x24
  411b98:	mov	x2, x20
  411b9c:	mov	x3, x19
  411ba0:	mov	w5, w22
  411ba4:	mov	x6, x23
  411ba8:	mov	x25, x0
  411bac:	str	x8, [sp]
  411bb0:	bl	410eb8 <__fxstatat@plt+0xe468>
  411bb4:	str	w26, [x21]
  411bb8:	mov	x0, x25
  411bbc:	ldp	x20, x19, [sp, #80]
  411bc0:	ldp	x22, x21, [sp, #64]
  411bc4:	ldp	x24, x23, [sp, #48]
  411bc8:	ldp	x26, x25, [sp, #32]
  411bcc:	ldp	x29, x30, [sp, #16]
  411bd0:	add	sp, sp, #0x60
  411bd4:	ret
  411bd8:	sub	sp, sp, #0x70
  411bdc:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411be0:	add	x8, x8, #0x758
  411be4:	cmp	x3, #0x0
  411be8:	stp	x29, x30, [sp, #16]
  411bec:	stp	x28, x27, [sp, #32]
  411bf0:	stp	x26, x25, [sp, #48]
  411bf4:	stp	x24, x23, [sp, #64]
  411bf8:	stp	x22, x21, [sp, #80]
  411bfc:	stp	x20, x19, [sp, #96]
  411c00:	add	x29, sp, #0x10
  411c04:	mov	x19, x2
  411c08:	mov	x22, x1
  411c0c:	mov	x23, x0
  411c10:	csel	x21, x8, x3, eq  // eq = none
  411c14:	bl	4029e0 <__errno_location@plt>
  411c18:	ldp	w4, w8, [x21]
  411c1c:	cmp	x19, #0x0
  411c20:	ldp	x7, x9, [x21, #40]
  411c24:	ldr	w28, [x0]
  411c28:	cset	w10, eq  // eq = none
  411c2c:	orr	w25, w8, w10
  411c30:	add	x26, x21, #0x8
  411c34:	mov	x24, x0
  411c38:	mov	x0, xzr
  411c3c:	mov	x1, xzr
  411c40:	mov	x2, x23
  411c44:	mov	x3, x22
  411c48:	mov	w5, w25
  411c4c:	mov	x6, x26
  411c50:	str	x9, [sp]
  411c54:	bl	410eb8 <__fxstatat@plt+0xe468>
  411c58:	add	x27, x0, #0x1
  411c5c:	mov	x20, x0
  411c60:	mov	x0, x27
  411c64:	bl	412e10 <__fxstatat@plt+0x103c0>
  411c68:	ldr	w4, [x21]
  411c6c:	ldp	x7, x8, [x21, #40]
  411c70:	mov	x1, x27
  411c74:	mov	x2, x23
  411c78:	mov	x3, x22
  411c7c:	mov	w5, w25
  411c80:	mov	x6, x26
  411c84:	mov	x21, x0
  411c88:	str	x8, [sp]
  411c8c:	bl	410eb8 <__fxstatat@plt+0xe468>
  411c90:	str	w28, [x24]
  411c94:	cbz	x19, 411c9c <__fxstatat@plt+0xf24c>
  411c98:	str	x20, [x19]
  411c9c:	mov	x0, x21
  411ca0:	ldp	x20, x19, [sp, #96]
  411ca4:	ldp	x22, x21, [sp, #80]
  411ca8:	ldp	x24, x23, [sp, #64]
  411cac:	ldp	x26, x25, [sp, #48]
  411cb0:	ldp	x28, x27, [sp, #32]
  411cb4:	ldp	x29, x30, [sp, #16]
  411cb8:	add	sp, sp, #0x70
  411cbc:	ret
  411cc0:	stp	x29, x30, [sp, #-64]!
  411cc4:	stp	x20, x19, [sp, #48]
  411cc8:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  411ccc:	stp	x22, x21, [sp, #32]
  411cd0:	ldr	w8, [x20, #1328]
  411cd4:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x18060>
  411cd8:	ldr	x19, [x21, #1320]
  411cdc:	str	x23, [sp, #16]
  411ce0:	cmp	w8, #0x2
  411ce4:	mov	x29, sp
  411ce8:	b.lt	411d0c <__fxstatat@plt+0xf2bc>  // b.tstop
  411cec:	add	x22, x19, #0x18
  411cf0:	mov	w23, #0x1                   	// #1
  411cf4:	ldr	x0, [x22], #16
  411cf8:	bl	402840 <free@plt>
  411cfc:	ldrsw	x8, [x20, #1328]
  411d00:	add	x23, x23, #0x1
  411d04:	cmp	x23, x8
  411d08:	b.lt	411cf4 <__fxstatat@plt+0xf2a4>  // b.tstop
  411d0c:	ldr	x0, [x19, #8]
  411d10:	adrp	x23, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411d14:	add	x23, x23, #0x790
  411d18:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x18060>
  411d1c:	cmp	x0, x23
  411d20:	add	x22, x22, #0x538
  411d24:	b.eq	411d34 <__fxstatat@plt+0xf2e4>  // b.none
  411d28:	bl	402840 <free@plt>
  411d2c:	mov	w8, #0x100                 	// #256
  411d30:	stp	x8, x23, [x22]
  411d34:	cmp	x19, x22
  411d38:	b.eq	411d48 <__fxstatat@plt+0xf2f8>  // b.none
  411d3c:	mov	x0, x19
  411d40:	bl	402840 <free@plt>
  411d44:	str	x22, [x21, #1320]
  411d48:	mov	w8, #0x1                   	// #1
  411d4c:	str	w8, [x20, #1328]
  411d50:	ldp	x20, x19, [sp, #48]
  411d54:	ldp	x22, x21, [sp, #32]
  411d58:	ldr	x23, [sp, #16]
  411d5c:	ldp	x29, x30, [sp], #64
  411d60:	ret
  411d64:	adrp	x3, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411d68:	add	x3, x3, #0x758
  411d6c:	mov	x2, #0xffffffffffffffff    	// #-1
  411d70:	b	411d74 <__fxstatat@plt+0xf324>
  411d74:	sub	sp, sp, #0x80
  411d78:	stp	x29, x30, [sp, #32]
  411d7c:	add	x29, sp, #0x20
  411d80:	stp	x28, x27, [sp, #48]
  411d84:	stp	x26, x25, [sp, #64]
  411d88:	stp	x24, x23, [sp, #80]
  411d8c:	stp	x22, x21, [sp, #96]
  411d90:	stp	x20, x19, [sp, #112]
  411d94:	mov	x22, x3
  411d98:	stur	x2, [x29, #-8]
  411d9c:	mov	x21, x1
  411da0:	mov	w23, w0
  411da4:	bl	4029e0 <__errno_location@plt>
  411da8:	tbnz	w23, #31, 411ef8 <__fxstatat@plt+0xf4a8>
  411dac:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x18060>
  411db0:	ldr	w8, [x25, #1328]
  411db4:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x18060>
  411db8:	ldr	w20, [x0]
  411dbc:	ldr	x27, [x28, #1320]
  411dc0:	mov	x19, x0
  411dc4:	cmp	w8, w23
  411dc8:	b.gt	411e34 <__fxstatat@plt+0xf3e4>
  411dcc:	mov	w8, #0x7fffffff            	// #2147483647
  411dd0:	cmp	w23, w8
  411dd4:	stur	w20, [x29, #-12]
  411dd8:	b.eq	411efc <__fxstatat@plt+0xf4ac>  // b.none
  411ddc:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x18060>
  411de0:	add	x20, x20, #0x538
  411de4:	add	w26, w23, #0x1
  411de8:	cmp	x27, x20
  411dec:	csel	x0, xzr, x27, eq  // eq = none
  411df0:	sbfiz	x1, x26, #4, #32
  411df4:	bl	412e90 <__fxstatat@plt+0x10440>
  411df8:	mov	x24, x0
  411dfc:	cmp	x27, x20
  411e00:	str	x0, [x28, #1320]
  411e04:	b.ne	411e10 <__fxstatat@plt+0xf3c0>  // b.any
  411e08:	ldr	q0, [x20]
  411e0c:	str	q0, [x24]
  411e10:	ldrsw	x8, [x25, #1328]
  411e14:	mov	w1, wzr
  411e18:	add	x0, x24, x8, lsl #4
  411e1c:	sub	w8, w26, w8
  411e20:	sbfiz	x2, x8, #4, #32
  411e24:	bl	402680 <memset@plt>
  411e28:	ldur	w20, [x29, #-12]
  411e2c:	mov	x27, x24
  411e30:	str	w26, [x25, #1328]
  411e34:	add	x28, x27, w23, uxtw #4
  411e38:	mov	x27, x28
  411e3c:	ldr	x26, [x28]
  411e40:	ldr	x23, [x27, #8]!
  411e44:	ldp	w4, w8, [x22]
  411e48:	ldp	x7, x9, [x22, #40]
  411e4c:	ldur	x3, [x29, #-8]
  411e50:	add	x24, x22, #0x8
  411e54:	orr	w25, w8, #0x1
  411e58:	mov	x0, x23
  411e5c:	mov	x1, x26
  411e60:	mov	x2, x21
  411e64:	mov	w5, w25
  411e68:	mov	x6, x24
  411e6c:	str	x9, [sp]
  411e70:	bl	410eb8 <__fxstatat@plt+0xe468>
  411e74:	cmp	x26, x0
  411e78:	b.hi	411ed0 <__fxstatat@plt+0xf480>  // b.pmore
  411e7c:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411e80:	add	x8, x8, #0x790
  411e84:	add	x26, x0, #0x1
  411e88:	cmp	x23, x8
  411e8c:	str	x26, [x28]
  411e90:	b.eq	411e9c <__fxstatat@plt+0xf44c>  // b.none
  411e94:	mov	x0, x23
  411e98:	bl	402840 <free@plt>
  411e9c:	mov	x0, x26
  411ea0:	bl	412e10 <__fxstatat@plt+0x103c0>
  411ea4:	str	x0, [x27]
  411ea8:	ldr	w4, [x22]
  411eac:	ldp	x7, x8, [x22, #40]
  411eb0:	ldur	x3, [x29, #-8]
  411eb4:	mov	x1, x26
  411eb8:	mov	x2, x21
  411ebc:	mov	w5, w25
  411ec0:	mov	x6, x24
  411ec4:	mov	x23, x0
  411ec8:	str	x8, [sp]
  411ecc:	bl	410eb8 <__fxstatat@plt+0xe468>
  411ed0:	str	w20, [x19]
  411ed4:	mov	x0, x23
  411ed8:	ldp	x20, x19, [sp, #112]
  411edc:	ldp	x22, x21, [sp, #96]
  411ee0:	ldp	x24, x23, [sp, #80]
  411ee4:	ldp	x26, x25, [sp, #64]
  411ee8:	ldp	x28, x27, [sp, #48]
  411eec:	ldp	x29, x30, [sp, #32]
  411ef0:	add	sp, sp, #0x80
  411ef4:	ret
  411ef8:	bl	402770 <abort@plt>
  411efc:	bl	413124 <__fxstatat@plt+0x106d4>
  411f00:	adrp	x3, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411f04:	add	x3, x3, #0x758
  411f08:	b	411d74 <__fxstatat@plt+0xf324>
  411f0c:	adrp	x3, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411f10:	add	x3, x3, #0x758
  411f14:	mov	x2, #0xffffffffffffffff    	// #-1
  411f18:	mov	x1, x0
  411f1c:	mov	w0, wzr
  411f20:	b	411d74 <__fxstatat@plt+0xf324>
  411f24:	adrp	x3, 42d000 <__progname@@GLIBC_2.17+0xa48>
  411f28:	mov	x2, x1
  411f2c:	add	x3, x3, #0x758
  411f30:	mov	x1, x0
  411f34:	mov	w0, wzr
  411f38:	b	411d74 <__fxstatat@plt+0xf324>
  411f3c:	sub	sp, sp, #0x50
  411f40:	movi	v0.2d, #0x0
  411f44:	cmp	w1, #0xa
  411f48:	stp	x29, x30, [sp, #64]
  411f4c:	add	x29, sp, #0x40
  411f50:	str	xzr, [sp, #48]
  411f54:	stp	q0, q0, [sp, #16]
  411f58:	str	q0, [sp]
  411f5c:	b.eq	411f84 <__fxstatat@plt+0xf534>  // b.none
  411f60:	mov	x8, x2
  411f64:	str	w1, [sp]
  411f68:	mov	x3, sp
  411f6c:	mov	x2, #0xffffffffffffffff    	// #-1
  411f70:	mov	x1, x8
  411f74:	bl	411d74 <__fxstatat@plt+0xf324>
  411f78:	ldp	x29, x30, [sp, #64]
  411f7c:	add	sp, sp, #0x50
  411f80:	ret
  411f84:	bl	402770 <abort@plt>
  411f88:	sub	sp, sp, #0x50
  411f8c:	movi	v0.2d, #0x0
  411f90:	cmp	w1, #0xa
  411f94:	stp	x29, x30, [sp, #64]
  411f98:	add	x29, sp, #0x40
  411f9c:	str	xzr, [sp, #48]
  411fa0:	stp	q0, q0, [sp, #16]
  411fa4:	str	q0, [sp]
  411fa8:	b.eq	411fd0 <__fxstatat@plt+0xf580>  // b.none
  411fac:	mov	x8, x3
  411fb0:	str	w1, [sp]
  411fb4:	mov	x3, sp
  411fb8:	mov	x1, x2
  411fbc:	mov	x2, x8
  411fc0:	bl	411d74 <__fxstatat@plt+0xf324>
  411fc4:	ldp	x29, x30, [sp, #64]
  411fc8:	add	sp, sp, #0x50
  411fcc:	ret
  411fd0:	bl	402770 <abort@plt>
  411fd4:	sub	sp, sp, #0x50
  411fd8:	movi	v0.2d, #0x0
  411fdc:	cmp	w0, #0xa
  411fe0:	stp	x29, x30, [sp, #64]
  411fe4:	add	x29, sp, #0x40
  411fe8:	str	xzr, [sp, #48]
  411fec:	stp	q0, q0, [sp, #16]
  411ff0:	str	q0, [sp]
  411ff4:	b.eq	412018 <__fxstatat@plt+0xf5c8>  // b.none
  411ff8:	str	w0, [sp]
  411ffc:	mov	x3, sp
  412000:	mov	x2, #0xffffffffffffffff    	// #-1
  412004:	mov	w0, wzr
  412008:	bl	411d74 <__fxstatat@plt+0xf324>
  41200c:	ldp	x29, x30, [sp, #64]
  412010:	add	sp, sp, #0x50
  412014:	ret
  412018:	bl	402770 <abort@plt>
  41201c:	sub	sp, sp, #0x50
  412020:	movi	v0.2d, #0x0
  412024:	cmp	w0, #0xa
  412028:	stp	x29, x30, [sp, #64]
  41202c:	add	x29, sp, #0x40
  412030:	str	xzr, [sp, #48]
  412034:	stp	q0, q0, [sp, #16]
  412038:	str	q0, [sp]
  41203c:	b.eq	41205c <__fxstatat@plt+0xf60c>  // b.none
  412040:	str	w0, [sp]
  412044:	mov	x3, sp
  412048:	mov	w0, wzr
  41204c:	bl	411d74 <__fxstatat@plt+0xf324>
  412050:	ldp	x29, x30, [sp, #64]
  412054:	add	sp, sp, #0x50
  412058:	ret
  41205c:	bl	402770 <abort@plt>
  412060:	sub	sp, sp, #0x50
  412064:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  412068:	add	x9, x9, #0x758
  41206c:	ldp	q0, q1, [x9]
  412070:	ubfx	w10, w2, #5, #3
  412074:	mov	x11, sp
  412078:	mov	x8, x1
  41207c:	stp	q0, q1, [sp]
  412080:	ldr	q0, [x9, #32]
  412084:	ldr	x9, [x9, #48]
  412088:	mov	x1, x0
  41208c:	mov	x3, sp
  412090:	str	q0, [sp, #32]
  412094:	str	x9, [sp, #48]
  412098:	add	x9, x11, w10, uxtw #2
  41209c:	ldr	w10, [x9, #8]
  4120a0:	mov	w0, wzr
  4120a4:	stp	x29, x30, [sp, #64]
  4120a8:	add	x29, sp, #0x40
  4120ac:	lsr	w11, w10, w2
  4120b0:	mvn	w11, w11
  4120b4:	and	w11, w11, #0x1
  4120b8:	lsl	w11, w11, w2
  4120bc:	eor	w10, w11, w10
  4120c0:	mov	x2, x8
  4120c4:	str	w10, [x9, #8]
  4120c8:	bl	411d74 <__fxstatat@plt+0xf324>
  4120cc:	ldp	x29, x30, [sp, #64]
  4120d0:	add	sp, sp, #0x50
  4120d4:	ret
  4120d8:	sub	sp, sp, #0x50
  4120dc:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4120e0:	add	x9, x9, #0x758
  4120e4:	ldp	q0, q1, [x9]
  4120e8:	ubfx	w10, w1, #5, #3
  4120ec:	mov	x11, sp
  4120f0:	mov	x8, x0
  4120f4:	stp	q0, q1, [sp]
  4120f8:	ldr	q0, [x9, #32]
  4120fc:	ldr	x9, [x9, #48]
  412100:	mov	x3, sp
  412104:	mov	x2, #0xffffffffffffffff    	// #-1
  412108:	str	q0, [sp, #32]
  41210c:	str	x9, [sp, #48]
  412110:	add	x9, x11, w10, uxtw #2
  412114:	ldr	w10, [x9, #8]
  412118:	mov	w0, wzr
  41211c:	stp	x29, x30, [sp, #64]
  412120:	add	x29, sp, #0x40
  412124:	lsr	w11, w10, w1
  412128:	mvn	w11, w11
  41212c:	and	w11, w11, #0x1
  412130:	lsl	w11, w11, w1
  412134:	eor	w10, w11, w10
  412138:	mov	x1, x8
  41213c:	str	w10, [x9, #8]
  412140:	bl	411d74 <__fxstatat@plt+0xf324>
  412144:	ldp	x29, x30, [sp, #64]
  412148:	add	sp, sp, #0x50
  41214c:	ret
  412150:	sub	sp, sp, #0x50
  412154:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  412158:	add	x8, x8, #0x758
  41215c:	ldp	q0, q1, [x8]
  412160:	ldr	q2, [x8, #32]
  412164:	ldr	x8, [x8, #48]
  412168:	mov	x1, x0
  41216c:	stp	q0, q1, [sp]
  412170:	ldr	w9, [sp, #12]
  412174:	str	x8, [sp, #48]
  412178:	mov	x3, sp
  41217c:	mov	x2, #0xffffffffffffffff    	// #-1
  412180:	orr	w8, w9, #0x4000000
  412184:	mov	w0, wzr
  412188:	stp	x29, x30, [sp, #64]
  41218c:	add	x29, sp, #0x40
  412190:	str	q2, [sp, #32]
  412194:	str	w8, [sp, #12]
  412198:	bl	411d74 <__fxstatat@plt+0xf324>
  41219c:	ldp	x29, x30, [sp, #64]
  4121a0:	add	sp, sp, #0x50
  4121a4:	ret
  4121a8:	sub	sp, sp, #0x50
  4121ac:	adrp	x8, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4121b0:	add	x8, x8, #0x758
  4121b4:	ldp	q0, q1, [x8]
  4121b8:	ldr	q2, [x8, #32]
  4121bc:	ldr	x8, [x8, #48]
  4121c0:	mov	x2, x1
  4121c4:	stp	q0, q1, [sp]
  4121c8:	ldr	w9, [sp, #12]
  4121cc:	mov	x1, x0
  4121d0:	str	x8, [sp, #48]
  4121d4:	mov	x3, sp
  4121d8:	orr	w8, w9, #0x4000000
  4121dc:	mov	w0, wzr
  4121e0:	stp	x29, x30, [sp, #64]
  4121e4:	add	x29, sp, #0x40
  4121e8:	str	q2, [sp, #32]
  4121ec:	str	w8, [sp, #12]
  4121f0:	bl	411d74 <__fxstatat@plt+0xf324>
  4121f4:	ldp	x29, x30, [sp, #64]
  4121f8:	add	sp, sp, #0x50
  4121fc:	ret
  412200:	sub	sp, sp, #0x80
  412204:	movi	v0.2d, #0x0
  412208:	cmp	w1, #0xa
  41220c:	stp	x29, x30, [sp, #112]
  412210:	add	x29, sp, #0x70
  412214:	str	wzr, [sp, #48]
  412218:	stp	q0, q0, [sp, #16]
  41221c:	str	q0, [sp]
  412220:	b.eq	412270 <__fxstatat@plt+0xf820>  // b.none
  412224:	ldp	q0, q1, [sp]
  412228:	ldr	w9, [sp, #48]
  41222c:	ldr	q2, [sp, #32]
  412230:	mov	x8, x2
  412234:	stur	q0, [sp, #60]
  412238:	ldr	w10, [sp, #68]
  41223c:	str	w1, [sp, #56]
  412240:	str	w9, [sp, #108]
  412244:	add	x3, sp, #0x38
  412248:	orr	w9, w10, #0x4000000
  41224c:	mov	x2, #0xffffffffffffffff    	// #-1
  412250:	mov	x1, x8
  412254:	stur	q1, [sp, #76]
  412258:	stur	q2, [sp, #92]
  41225c:	str	w9, [sp, #68]
  412260:	bl	411d74 <__fxstatat@plt+0xf324>
  412264:	ldp	x29, x30, [sp, #112]
  412268:	add	sp, sp, #0x80
  41226c:	ret
  412270:	bl	402770 <abort@plt>
  412274:	sub	sp, sp, #0x50
  412278:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  41227c:	add	x9, x9, #0x758
  412280:	ldp	q0, q1, [x9]
  412284:	ldr	q2, [x9, #32]
  412288:	ldr	x9, [x9, #48]
  41228c:	mov	w10, #0xa                   	// #10
  412290:	stp	x29, x30, [sp, #64]
  412294:	add	x29, sp, #0x40
  412298:	stp	q0, q1, [sp]
  41229c:	str	q2, [sp, #32]
  4122a0:	str	x9, [sp, #48]
  4122a4:	str	w10, [sp]
  4122a8:	cbz	x1, 4122d4 <__fxstatat@plt+0xf884>
  4122ac:	cbz	x2, 4122d4 <__fxstatat@plt+0xf884>
  4122b0:	mov	x8, x3
  4122b4:	stp	x1, x2, [sp, #40]
  4122b8:	mov	x3, sp
  4122bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4122c0:	mov	x1, x8
  4122c4:	bl	411d74 <__fxstatat@plt+0xf324>
  4122c8:	ldp	x29, x30, [sp, #64]
  4122cc:	add	sp, sp, #0x50
  4122d0:	ret
  4122d4:	bl	402770 <abort@plt>
  4122d8:	sub	sp, sp, #0x50
  4122dc:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4122e0:	add	x9, x9, #0x758
  4122e4:	ldp	q0, q1, [x9]
  4122e8:	ldr	x10, [x9, #48]
  4122ec:	stp	x29, x30, [sp, #64]
  4122f0:	add	x29, sp, #0x40
  4122f4:	stp	q0, q1, [sp]
  4122f8:	ldr	q0, [x9, #32]
  4122fc:	mov	w9, #0xa                   	// #10
  412300:	str	x10, [sp, #48]
  412304:	str	w9, [sp]
  412308:	str	q0, [sp, #32]
  41230c:	cbz	x1, 412338 <__fxstatat@plt+0xf8e8>
  412310:	cbz	x2, 412338 <__fxstatat@plt+0xf8e8>
  412314:	mov	x8, x3
  412318:	stp	x1, x2, [sp, #40]
  41231c:	mov	x3, sp
  412320:	mov	x1, x8
  412324:	mov	x2, x4
  412328:	bl	411d74 <__fxstatat@plt+0xf324>
  41232c:	ldp	x29, x30, [sp, #64]
  412330:	add	sp, sp, #0x50
  412334:	ret
  412338:	bl	402770 <abort@plt>
  41233c:	sub	sp, sp, #0x50
  412340:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  412344:	add	x9, x9, #0x758
  412348:	ldp	q0, q1, [x9]
  41234c:	ldr	q2, [x9, #32]
  412350:	ldr	x9, [x9, #48]
  412354:	mov	w10, #0xa                   	// #10
  412358:	stp	x29, x30, [sp, #64]
  41235c:	add	x29, sp, #0x40
  412360:	stp	q0, q1, [sp]
  412364:	str	q2, [sp, #32]
  412368:	str	x9, [sp, #48]
  41236c:	str	w10, [sp]
  412370:	cbz	x0, 4123a0 <__fxstatat@plt+0xf950>
  412374:	cbz	x1, 4123a0 <__fxstatat@plt+0xf950>
  412378:	mov	x8, x2
  41237c:	stp	x0, x1, [sp, #40]
  412380:	mov	x3, sp
  412384:	mov	x2, #0xffffffffffffffff    	// #-1
  412388:	mov	w0, wzr
  41238c:	mov	x1, x8
  412390:	bl	411d74 <__fxstatat@plt+0xf324>
  412394:	ldp	x29, x30, [sp, #64]
  412398:	add	sp, sp, #0x50
  41239c:	ret
  4123a0:	bl	402770 <abort@plt>
  4123a4:	sub	sp, sp, #0x50
  4123a8:	adrp	x9, 42d000 <__progname@@GLIBC_2.17+0xa48>
  4123ac:	add	x9, x9, #0x758
  4123b0:	ldp	q0, q1, [x9]
  4123b4:	ldr	q2, [x9, #32]
  4123b8:	ldr	x9, [x9, #48]
  4123bc:	mov	w10, #0xa                   	// #10
  4123c0:	stp	x29, x30, [sp, #64]
  4123c4:	add	x29, sp, #0x40
  4123c8:	stp	q0, q1, [sp]
  4123cc:	str	q2, [sp, #32]
  4123d0:	str	x9, [sp, #48]
  4123d4:	str	w10, [sp]
  4123d8:	cbz	x0, 412408 <__fxstatat@plt+0xf9b8>
  4123dc:	cbz	x1, 412408 <__fxstatat@plt+0xf9b8>
  4123e0:	mov	x8, x3
  4123e4:	stp	x0, x1, [sp, #40]
  4123e8:	mov	x3, sp
  4123ec:	mov	w0, wzr
  4123f0:	mov	x1, x2
  4123f4:	mov	x2, x8
  4123f8:	bl	411d74 <__fxstatat@plt+0xf324>
  4123fc:	ldp	x29, x30, [sp, #64]
  412400:	add	sp, sp, #0x50
  412404:	ret
  412408:	bl	402770 <abort@plt>
  41240c:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x18060>
  412410:	add	x3, x3, #0x548
  412414:	b	411d74 <__fxstatat@plt+0xf324>
  412418:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x18060>
  41241c:	mov	x2, x1
  412420:	add	x3, x3, #0x548
  412424:	mov	x1, x0
  412428:	mov	w0, wzr
  41242c:	b	411d74 <__fxstatat@plt+0xf324>
  412430:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x18060>
  412434:	add	x3, x3, #0x548
  412438:	mov	x2, #0xffffffffffffffff    	// #-1
  41243c:	b	411d74 <__fxstatat@plt+0xf324>
  412440:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x18060>
  412444:	add	x3, x3, #0x548
  412448:	mov	x2, #0xffffffffffffffff    	// #-1
  41244c:	mov	x1, x0
  412450:	mov	w0, wzr
  412454:	b	411d74 <__fxstatat@plt+0xf324>
  412458:	stp	x29, x30, [sp, #-32]!
  41245c:	stp	x20, x19, [sp, #16]
  412460:	mov	x20, x0
  412464:	mov	w19, w1
  412468:	mov	w2, #0x5                   	// #5
  41246c:	mov	x0, xzr
  412470:	mov	x1, x20
  412474:	mov	x29, sp
  412478:	bl	402970 <dcgettext@plt>
  41247c:	cmp	x0, x20
  412480:	b.ne	412564 <__fxstatat@plt+0xfb14>  // b.any
  412484:	bl	414754 <_obstack_memory_used@@Base+0x7b4>
  412488:	ldrb	w8, [x0]
  41248c:	and	w8, w8, #0xffffffdf
  412490:	cmp	w8, #0x47
  412494:	b.eq	4124f8 <__fxstatat@plt+0xfaa8>  // b.none
  412498:	cmp	w8, #0x55
  41249c:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  4124a0:	ldrb	w8, [x0, #1]
  4124a4:	and	w8, w8, #0xffffffdf
  4124a8:	cmp	w8, #0x54
  4124ac:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  4124b0:	ldrb	w8, [x0, #2]
  4124b4:	and	w8, w8, #0xffffffdf
  4124b8:	cmp	w8, #0x46
  4124bc:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  4124c0:	ldrb	w8, [x0, #3]
  4124c4:	cmp	w8, #0x2d
  4124c8:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  4124cc:	ldrb	w8, [x0, #4]
  4124d0:	cmp	w8, #0x38
  4124d4:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  4124d8:	ldrb	w8, [x0, #5]
  4124dc:	cbnz	w8, 41254c <__fxstatat@plt+0xfafc>
  4124e0:	ldrb	w8, [x20]
  4124e4:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  4124e8:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  4124ec:	add	x9, x9, #0xb04
  4124f0:	add	x10, x10, #0xb00
  4124f4:	b	412584 <__fxstatat@plt+0xfb34>
  4124f8:	ldrb	w8, [x0, #1]
  4124fc:	and	w8, w8, #0xffffffdf
  412500:	cmp	w8, #0x42
  412504:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  412508:	ldrb	w8, [x0, #2]
  41250c:	cmp	w8, #0x31
  412510:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  412514:	ldrb	w8, [x0, #3]
  412518:	cmp	w8, #0x38
  41251c:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  412520:	ldrb	w8, [x0, #4]
  412524:	cmp	w8, #0x30
  412528:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  41252c:	ldrb	w8, [x0, #5]
  412530:	cmp	w8, #0x33
  412534:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  412538:	ldrb	w8, [x0, #6]
  41253c:	cmp	w8, #0x30
  412540:	b.ne	41254c <__fxstatat@plt+0xfafc>  // b.any
  412544:	ldrb	w8, [x0, #7]
  412548:	cbz	w8, 412570 <__fxstatat@plt+0xfb20>
  41254c:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  412550:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  412554:	add	x8, x8, #0xf10
  412558:	add	x9, x9, #0xafc
  41255c:	cmp	w19, #0x9
  412560:	csel	x0, x9, x8, eq  // eq = none
  412564:	ldp	x20, x19, [sp, #16]
  412568:	ldp	x29, x30, [sp], #32
  41256c:	ret
  412570:	ldrb	w8, [x20]
  412574:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x6060>
  412578:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  41257c:	add	x9, x9, #0xb0c
  412580:	add	x10, x10, #0xb08
  412584:	cmp	w8, #0x60
  412588:	csel	x0, x10, x9, eq  // eq = none
  41258c:	b	412564 <__fxstatat@plt+0xfb14>
  412590:	mov	x8, x0
  412594:	mov	w0, #0xffffff9c            	// #-100
  412598:	mov	w2, #0xffffff9c            	// #-100
  41259c:	mov	x3, x1
  4125a0:	mov	x1, x8
  4125a4:	b	4125a8 <__fxstatat@plt+0xfb58>
  4125a8:	sub	sp, sp, #0x150
  4125ac:	stp	x22, x21, [sp, #304]
  4125b0:	mov	w21, w0
  4125b4:	mov	x0, x1
  4125b8:	stp	x29, x30, [sp, #256]
  4125bc:	stp	x28, x25, [sp, #272]
  4125c0:	stp	x24, x23, [sp, #288]
  4125c4:	stp	x20, x19, [sp, #320]
  4125c8:	add	x29, sp, #0x100
  4125cc:	mov	x20, x3
  4125d0:	mov	w19, w2
  4125d4:	mov	x22, x1
  4125d8:	bl	40c644 <__fxstatat@plt+0x9bf4>
  4125dc:	mov	x23, x0
  4125e0:	mov	x0, x20
  4125e4:	bl	40c644 <__fxstatat@plt+0x9bf4>
  4125e8:	mov	x24, x0
  4125ec:	mov	x0, x23
  4125f0:	bl	40c690 <__fxstatat@plt+0x9c40>
  4125f4:	mov	x25, x0
  4125f8:	mov	x0, x24
  4125fc:	bl	40c690 <__fxstatat@plt+0x9c40>
  412600:	cmp	x25, x0
  412604:	b.ne	41261c <__fxstatat@plt+0xfbcc>  // b.any
  412608:	mov	x0, x23
  41260c:	mov	x1, x24
  412610:	mov	x2, x25
  412614:	bl	4026d0 <bcmp@plt>
  412618:	cbz	w0, 412640 <__fxstatat@plt+0xfbf0>
  41261c:	mov	w19, wzr
  412620:	mov	w0, w19
  412624:	ldp	x20, x19, [sp, #320]
  412628:	ldp	x22, x21, [sp, #304]
  41262c:	ldp	x24, x23, [sp, #288]
  412630:	ldp	x28, x25, [sp, #272]
  412634:	ldp	x29, x30, [sp, #256]
  412638:	add	sp, sp, #0x150
  41263c:	ret
  412640:	mov	x0, x22
  412644:	bl	414704 <_obstack_memory_used@@Base+0x764>
  412648:	mov	x22, x0
  41264c:	add	x3, sp, #0x80
  412650:	mov	w4, #0x100                 	// #256
  412654:	mov	w0, wzr
  412658:	mov	w1, w21
  41265c:	mov	x2, x22
  412660:	bl	402a50 <__fxstatat@plt>
  412664:	cbz	w0, 412684 <__fxstatat@plt+0xfc34>
  412668:	bl	4029e0 <__errno_location@plt>
  41266c:	ldr	w1, [x0]
  412670:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  412674:	add	x2, x2, #0x5ff
  412678:	mov	w0, #0x1                   	// #1
  41267c:	mov	x3, x22
  412680:	bl	402490 <error@plt>
  412684:	mov	x0, x22
  412688:	bl	402840 <free@plt>
  41268c:	mov	x0, x20
  412690:	bl	414704 <_obstack_memory_used@@Base+0x764>
  412694:	mov	x20, x0
  412698:	mov	x3, sp
  41269c:	mov	w4, #0x100                 	// #256
  4126a0:	mov	w0, wzr
  4126a4:	mov	w1, w19
  4126a8:	mov	x2, x20
  4126ac:	bl	402a50 <__fxstatat@plt>
  4126b0:	cbz	w0, 4126d0 <__fxstatat@plt+0xfc80>
  4126b4:	bl	4029e0 <__errno_location@plt>
  4126b8:	ldr	w1, [x0]
  4126bc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  4126c0:	add	x2, x2, #0x5ff
  4126c4:	mov	w0, #0x1                   	// #1
  4126c8:	mov	x3, x20
  4126cc:	bl	402490 <error@plt>
  4126d0:	ldp	x11, x8, [sp]
  4126d4:	ldp	x10, x9, [sp, #128]
  4126d8:	mov	x0, x20
  4126dc:	cmp	x9, x8
  4126e0:	cset	w8, eq  // eq = none
  4126e4:	cmp	x10, x11
  4126e8:	cset	w9, eq  // eq = none
  4126ec:	and	w19, w8, w9
  4126f0:	bl	402840 <free@plt>
  4126f4:	b	412620 <__fxstatat@plt+0xfbd0>
  4126f8:	sub	sp, sp, #0x50
  4126fc:	str	x21, [sp, #48]
  412700:	stp	x20, x19, [sp, #64]
  412704:	mov	x21, x5
  412708:	mov	x20, x4
  41270c:	mov	x5, x3
  412710:	mov	x4, x2
  412714:	mov	x19, x0
  412718:	stp	x29, x30, [sp, #32]
  41271c:	add	x29, sp, #0x20
  412720:	cbz	x1, 412740 <__fxstatat@plt+0xfcf0>
  412724:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  412728:	mov	x3, x1
  41272c:	add	x2, x2, #0xb19
  412730:	mov	w1, #0x1                   	// #1
  412734:	mov	x0, x19
  412738:	bl	4027e0 <__fprintf_chk@plt>
  41273c:	b	41275c <__fxstatat@plt+0xfd0c>
  412740:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  412744:	add	x2, x2, #0xb25
  412748:	mov	w1, #0x1                   	// #1
  41274c:	mov	x0, x19
  412750:	mov	x3, x4
  412754:	mov	x4, x5
  412758:	bl	4027e0 <__fprintf_chk@plt>
  41275c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412760:	add	x1, x1, #0xb2c
  412764:	mov	w2, #0x5                   	// #5
  412768:	mov	x0, xzr
  41276c:	bl	402970 <dcgettext@plt>
  412770:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  412774:	mov	x3, x0
  412778:	add	x2, x2, #0xdf7
  41277c:	mov	w1, #0x1                   	// #1
  412780:	mov	w4, #0x7e3                 	// #2019
  412784:	mov	x0, x19
  412788:	bl	4027e0 <__fprintf_chk@plt>
  41278c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412790:	add	x1, x1, #0xb30
  412794:	mov	w2, #0x5                   	// #5
  412798:	mov	x0, xzr
  41279c:	bl	402970 <dcgettext@plt>
  4127a0:	mov	x1, x19
  4127a4:	bl	402980 <fputs_unlocked@plt>
  4127a8:	cmp	x21, #0x9
  4127ac:	b.hi	412800 <__fxstatat@plt+0xfdb0>  // b.pmore
  4127b0:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  4127b4:	add	x8, x8, #0xb0f
  4127b8:	adr	x9, 4127c8 <__fxstatat@plt+0xfd78>
  4127bc:	ldrb	w10, [x8, x21]
  4127c0:	add	x9, x9, x10, lsl #2
  4127c4:	br	x9
  4127c8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4127cc:	add	x1, x1, #0xbfc
  4127d0:	mov	w2, #0x5                   	// #5
  4127d4:	mov	x0, xzr
  4127d8:	bl	402970 <dcgettext@plt>
  4127dc:	ldr	x3, [x20]
  4127e0:	mov	x2, x0
  4127e4:	mov	x0, x19
  4127e8:	ldp	x20, x19, [sp, #64]
  4127ec:	ldr	x21, [sp, #48]
  4127f0:	ldp	x29, x30, [sp, #32]
  4127f4:	mov	w1, #0x1                   	// #1
  4127f8:	add	sp, sp, #0x50
  4127fc:	b	4027e0 <__fprintf_chk@plt>
  412800:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412804:	add	x1, x1, #0xd3b
  412808:	b	412964 <__fxstatat@plt+0xff14>
  41280c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412810:	add	x1, x1, #0xc0c
  412814:	mov	w2, #0x5                   	// #5
  412818:	mov	x0, xzr
  41281c:	bl	402970 <dcgettext@plt>
  412820:	ldp	x3, x4, [x20]
  412824:	mov	x2, x0
  412828:	mov	x0, x19
  41282c:	ldp	x20, x19, [sp, #64]
  412830:	ldr	x21, [sp, #48]
  412834:	ldp	x29, x30, [sp, #32]
  412838:	mov	w1, #0x1                   	// #1
  41283c:	add	sp, sp, #0x50
  412840:	b	4027e0 <__fprintf_chk@plt>
  412844:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412848:	add	x1, x1, #0xc23
  41284c:	mov	w2, #0x5                   	// #5
  412850:	mov	x0, xzr
  412854:	bl	402970 <dcgettext@plt>
  412858:	ldp	x3, x4, [x20]
  41285c:	ldr	x5, [x20, #16]
  412860:	mov	x2, x0
  412864:	mov	x0, x19
  412868:	ldp	x20, x19, [sp, #64]
  41286c:	ldr	x21, [sp, #48]
  412870:	ldp	x29, x30, [sp, #32]
  412874:	mov	w1, #0x1                   	// #1
  412878:	add	sp, sp, #0x50
  41287c:	b	4027e0 <__fprintf_chk@plt>
  412880:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412884:	add	x1, x1, #0xc3f
  412888:	mov	w2, #0x5                   	// #5
  41288c:	mov	x0, xzr
  412890:	bl	402970 <dcgettext@plt>
  412894:	ldp	x3, x4, [x20]
  412898:	ldp	x5, x6, [x20, #16]
  41289c:	mov	x2, x0
  4128a0:	mov	x0, x19
  4128a4:	ldp	x20, x19, [sp, #64]
  4128a8:	ldr	x21, [sp, #48]
  4128ac:	ldp	x29, x30, [sp, #32]
  4128b0:	mov	w1, #0x1                   	// #1
  4128b4:	add	sp, sp, #0x50
  4128b8:	b	4027e0 <__fprintf_chk@plt>
  4128bc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  4128c0:	add	x1, x1, #0xc5f
  4128c4:	mov	w2, #0x5                   	// #5
  4128c8:	mov	x0, xzr
  4128cc:	bl	402970 <dcgettext@plt>
  4128d0:	ldp	x3, x4, [x20]
  4128d4:	ldp	x5, x6, [x20, #16]
  4128d8:	ldr	x7, [x20, #32]
  4128dc:	mov	x2, x0
  4128e0:	mov	x0, x19
  4128e4:	ldp	x20, x19, [sp, #64]
  4128e8:	ldr	x21, [sp, #48]
  4128ec:	ldp	x29, x30, [sp, #32]
  4128f0:	mov	w1, #0x1                   	// #1
  4128f4:	add	sp, sp, #0x50
  4128f8:	b	4027e0 <__fprintf_chk@plt>
  4128fc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412900:	add	x1, x1, #0xc83
  412904:	mov	w2, #0x5                   	// #5
  412908:	mov	x0, xzr
  41290c:	bl	402970 <dcgettext@plt>
  412910:	ldp	x3, x4, [x20]
  412914:	ldp	x5, x6, [x20, #16]
  412918:	ldp	x7, x8, [x20, #32]
  41291c:	mov	x2, x0
  412920:	b	412950 <__fxstatat@plt+0xff00>
  412924:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412928:	add	x1, x1, #0xcab
  41292c:	mov	w2, #0x5                   	// #5
  412930:	mov	x0, xzr
  412934:	bl	402970 <dcgettext@plt>
  412938:	ldr	x9, [x20, #48]
  41293c:	ldp	x3, x4, [x20]
  412940:	ldp	x5, x6, [x20, #16]
  412944:	ldp	x7, x8, [x20, #32]
  412948:	mov	x2, x0
  41294c:	str	x9, [sp, #8]
  412950:	mov	w1, #0x1                   	// #1
  412954:	str	x8, [sp]
  412958:	b	4129c8 <__fxstatat@plt+0xff78>
  41295c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412960:	add	x1, x1, #0xd07
  412964:	mov	w2, #0x5                   	// #5
  412968:	mov	x0, xzr
  41296c:	bl	402970 <dcgettext@plt>
  412970:	ldp	x8, x9, [x20, #56]
  412974:	ldp	x3, x4, [x20]
  412978:	ldp	x5, x6, [x20, #16]
  41297c:	ldr	x7, [x20, #32]
  412980:	ldur	q0, [x20, #40]
  412984:	mov	x2, x0
  412988:	str	x9, [sp, #24]
  41298c:	b	4129bc <__fxstatat@plt+0xff6c>
  412990:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412994:	add	x1, x1, #0xcd7
  412998:	mov	w2, #0x5                   	// #5
  41299c:	mov	x0, xzr
  4129a0:	bl	402970 <dcgettext@plt>
  4129a4:	ldp	x3, x4, [x20]
  4129a8:	ldp	x5, x6, [x20, #16]
  4129ac:	ldr	x7, [x20, #32]
  4129b0:	ldur	q0, [x20, #40]
  4129b4:	ldr	x8, [x20, #56]
  4129b8:	mov	x2, x0
  4129bc:	str	x8, [sp, #16]
  4129c0:	mov	w1, #0x1                   	// #1
  4129c4:	str	q0, [sp]
  4129c8:	mov	x0, x19
  4129cc:	bl	4027e0 <__fprintf_chk@plt>
  4129d0:	ldp	x20, x19, [sp, #64]
  4129d4:	ldr	x21, [sp, #48]
  4129d8:	ldp	x29, x30, [sp, #32]
  4129dc:	add	sp, sp, #0x50
  4129e0:	ret
  4129e4:	mov	x8, xzr
  4129e8:	ldr	x9, [x4, x8, lsl #3]
  4129ec:	add	x8, x8, #0x1
  4129f0:	cbnz	x9, 4129e8 <__fxstatat@plt+0xff98>
  4129f4:	sub	x5, x8, #0x1
  4129f8:	b	4126f8 <__fxstatat@plt+0xfca8>
  4129fc:	sub	sp, sp, #0x60
  412a00:	stp	x29, x30, [sp, #80]
  412a04:	ldr	w9, [x4, #24]
  412a08:	add	x29, sp, #0x50
  412a0c:	mov	w8, w9
  412a10:	tbz	w9, #31, 412a34 <__fxstatat@plt+0xffe4>
  412a14:	add	w8, w9, #0x8
  412a18:	cmn	w9, #0x8
  412a1c:	str	w8, [x4, #24]
  412a20:	b.gt	412a34 <__fxstatat@plt+0xffe4>
  412a24:	ldr	x10, [x4, #8]
  412a28:	sxtw	x9, w9
  412a2c:	add	x9, x10, x9
  412a30:	b	412a40 <__fxstatat@plt+0xfff0>
  412a34:	ldr	x9, [x4]
  412a38:	add	x10, x9, #0x8
  412a3c:	str	x10, [x4]
  412a40:	ldr	x9, [x9]
  412a44:	str	x9, [sp]
  412a48:	cbz	x9, 412a58 <__fxstatat@plt+0x10008>
  412a4c:	tbnz	w8, #31, 412a60 <__fxstatat@plt+0x10010>
  412a50:	mov	w9, w8
  412a54:	b	412a7c <__fxstatat@plt+0x1002c>
  412a58:	mov	x5, xzr
  412a5c:	b	412cd4 <__fxstatat@plt+0x10284>
  412a60:	add	w9, w8, #0x8
  412a64:	cmn	w8, #0x8
  412a68:	str	w9, [x4, #24]
  412a6c:	b.gt	412a7c <__fxstatat@plt+0x1002c>
  412a70:	ldr	x10, [x4, #8]
  412a74:	add	x8, x10, w8, sxtw
  412a78:	b	412a88 <__fxstatat@plt+0x10038>
  412a7c:	ldr	x8, [x4]
  412a80:	add	x10, x8, #0x8
  412a84:	str	x10, [x4]
  412a88:	ldr	x8, [x8]
  412a8c:	str	x8, [sp, #8]
  412a90:	cbz	x8, 412aa0 <__fxstatat@plt+0x10050>
  412a94:	tbnz	w9, #31, 412aa8 <__fxstatat@plt+0x10058>
  412a98:	mov	w8, w9
  412a9c:	b	412ac4 <__fxstatat@plt+0x10074>
  412aa0:	mov	w5, #0x1                   	// #1
  412aa4:	b	412cd4 <__fxstatat@plt+0x10284>
  412aa8:	add	w8, w9, #0x8
  412aac:	cmn	w9, #0x8
  412ab0:	str	w8, [x4, #24]
  412ab4:	b.gt	412ac4 <__fxstatat@plt+0x10074>
  412ab8:	ldr	x10, [x4, #8]
  412abc:	add	x9, x10, w9, sxtw
  412ac0:	b	412ad0 <__fxstatat@plt+0x10080>
  412ac4:	ldr	x9, [x4]
  412ac8:	add	x10, x9, #0x8
  412acc:	str	x10, [x4]
  412ad0:	ldr	x9, [x9]
  412ad4:	str	x9, [sp, #16]
  412ad8:	cbz	x9, 412ae8 <__fxstatat@plt+0x10098>
  412adc:	tbnz	w8, #31, 412af0 <__fxstatat@plt+0x100a0>
  412ae0:	mov	w9, w8
  412ae4:	b	412b0c <__fxstatat@plt+0x100bc>
  412ae8:	mov	w5, #0x2                   	// #2
  412aec:	b	412cd4 <__fxstatat@plt+0x10284>
  412af0:	add	w9, w8, #0x8
  412af4:	cmn	w8, #0x8
  412af8:	str	w9, [x4, #24]
  412afc:	b.gt	412b0c <__fxstatat@plt+0x100bc>
  412b00:	ldr	x10, [x4, #8]
  412b04:	add	x8, x10, w8, sxtw
  412b08:	b	412b18 <__fxstatat@plt+0x100c8>
  412b0c:	ldr	x8, [x4]
  412b10:	add	x10, x8, #0x8
  412b14:	str	x10, [x4]
  412b18:	ldr	x8, [x8]
  412b1c:	str	x8, [sp, #24]
  412b20:	cbz	x8, 412b30 <__fxstatat@plt+0x100e0>
  412b24:	tbnz	w9, #31, 412b38 <__fxstatat@plt+0x100e8>
  412b28:	mov	w8, w9
  412b2c:	b	412b54 <__fxstatat@plt+0x10104>
  412b30:	mov	w5, #0x3                   	// #3
  412b34:	b	412cd4 <__fxstatat@plt+0x10284>
  412b38:	add	w8, w9, #0x8
  412b3c:	cmn	w9, #0x8
  412b40:	str	w8, [x4, #24]
  412b44:	b.gt	412b54 <__fxstatat@plt+0x10104>
  412b48:	ldr	x10, [x4, #8]
  412b4c:	add	x9, x10, w9, sxtw
  412b50:	b	412b60 <__fxstatat@plt+0x10110>
  412b54:	ldr	x9, [x4]
  412b58:	add	x10, x9, #0x8
  412b5c:	str	x10, [x4]
  412b60:	ldr	x9, [x9]
  412b64:	str	x9, [sp, #32]
  412b68:	cbz	x9, 412b78 <__fxstatat@plt+0x10128>
  412b6c:	tbnz	w8, #31, 412b80 <__fxstatat@plt+0x10130>
  412b70:	mov	w9, w8
  412b74:	b	412b9c <__fxstatat@plt+0x1014c>
  412b78:	mov	w5, #0x4                   	// #4
  412b7c:	b	412cd4 <__fxstatat@plt+0x10284>
  412b80:	add	w9, w8, #0x8
  412b84:	cmn	w8, #0x8
  412b88:	str	w9, [x4, #24]
  412b8c:	b.gt	412b9c <__fxstatat@plt+0x1014c>
  412b90:	ldr	x10, [x4, #8]
  412b94:	add	x8, x10, w8, sxtw
  412b98:	b	412ba8 <__fxstatat@plt+0x10158>
  412b9c:	ldr	x8, [x4]
  412ba0:	add	x10, x8, #0x8
  412ba4:	str	x10, [x4]
  412ba8:	ldr	x8, [x8]
  412bac:	str	x8, [sp, #40]
  412bb0:	cbz	x8, 412bc0 <__fxstatat@plt+0x10170>
  412bb4:	tbnz	w9, #31, 412bc8 <__fxstatat@plt+0x10178>
  412bb8:	mov	w8, w9
  412bbc:	b	412be4 <__fxstatat@plt+0x10194>
  412bc0:	mov	w5, #0x5                   	// #5
  412bc4:	b	412cd4 <__fxstatat@plt+0x10284>
  412bc8:	add	w8, w9, #0x8
  412bcc:	cmn	w9, #0x8
  412bd0:	str	w8, [x4, #24]
  412bd4:	b.gt	412be4 <__fxstatat@plt+0x10194>
  412bd8:	ldr	x10, [x4, #8]
  412bdc:	add	x9, x10, w9, sxtw
  412be0:	b	412bf0 <__fxstatat@plt+0x101a0>
  412be4:	ldr	x9, [x4]
  412be8:	add	x10, x9, #0x8
  412bec:	str	x10, [x4]
  412bf0:	ldr	x9, [x9]
  412bf4:	str	x9, [sp, #48]
  412bf8:	cbz	x9, 412c08 <__fxstatat@plt+0x101b8>
  412bfc:	tbnz	w8, #31, 412c10 <__fxstatat@plt+0x101c0>
  412c00:	mov	w9, w8
  412c04:	b	412c2c <__fxstatat@plt+0x101dc>
  412c08:	mov	w5, #0x6                   	// #6
  412c0c:	b	412cd4 <__fxstatat@plt+0x10284>
  412c10:	add	w9, w8, #0x8
  412c14:	cmn	w8, #0x8
  412c18:	str	w9, [x4, #24]
  412c1c:	b.gt	412c2c <__fxstatat@plt+0x101dc>
  412c20:	ldr	x10, [x4, #8]
  412c24:	add	x8, x10, w8, sxtw
  412c28:	b	412c38 <__fxstatat@plt+0x101e8>
  412c2c:	ldr	x8, [x4]
  412c30:	add	x10, x8, #0x8
  412c34:	str	x10, [x4]
  412c38:	ldr	x8, [x8]
  412c3c:	str	x8, [sp, #56]
  412c40:	cbz	x8, 412c50 <__fxstatat@plt+0x10200>
  412c44:	tbnz	w9, #31, 412c58 <__fxstatat@plt+0x10208>
  412c48:	mov	w8, w9
  412c4c:	b	412c74 <__fxstatat@plt+0x10224>
  412c50:	mov	w5, #0x7                   	// #7
  412c54:	b	412cd4 <__fxstatat@plt+0x10284>
  412c58:	add	w8, w9, #0x8
  412c5c:	cmn	w9, #0x8
  412c60:	str	w8, [x4, #24]
  412c64:	b.gt	412c74 <__fxstatat@plt+0x10224>
  412c68:	ldr	x10, [x4, #8]
  412c6c:	add	x9, x10, w9, sxtw
  412c70:	b	412c80 <__fxstatat@plt+0x10230>
  412c74:	ldr	x9, [x4]
  412c78:	add	x10, x9, #0x8
  412c7c:	str	x10, [x4]
  412c80:	ldr	x9, [x9]
  412c84:	str	x9, [sp, #64]
  412c88:	cbz	x9, 412cd0 <__fxstatat@plt+0x10280>
  412c8c:	tbz	w8, #31, 412cac <__fxstatat@plt+0x1025c>
  412c90:	add	w9, w8, #0x8
  412c94:	cmn	w8, #0x8
  412c98:	str	w9, [x4, #24]
  412c9c:	b.gt	412cac <__fxstatat@plt+0x1025c>
  412ca0:	ldr	x9, [x4, #8]
  412ca4:	add	x8, x9, w8, sxtw
  412ca8:	b	412cb8 <__fxstatat@plt+0x10268>
  412cac:	ldr	x8, [x4]
  412cb0:	add	x9, x8, #0x8
  412cb4:	str	x9, [x4]
  412cb8:	ldr	x8, [x8]
  412cbc:	str	x8, [sp, #72]
  412cc0:	cmp	x8, #0x0
  412cc4:	mov	w8, #0x9                   	// #9
  412cc8:	cinc	x5, x8, ne  // ne = any
  412ccc:	b	412cd4 <__fxstatat@plt+0x10284>
  412cd0:	mov	w5, #0x8                   	// #8
  412cd4:	mov	x4, sp
  412cd8:	bl	4126f8 <__fxstatat@plt+0xfca8>
  412cdc:	ldp	x29, x30, [sp, #80]
  412ce0:	add	sp, sp, #0x60
  412ce4:	ret
  412ce8:	sub	sp, sp, #0xf0
  412cec:	stp	x29, x30, [sp, #224]
  412cf0:	add	x29, sp, #0xe0
  412cf4:	mov	x8, #0xffffffffffffffe0    	// #-32
  412cf8:	mov	x9, sp
  412cfc:	sub	x10, x29, #0x60
  412d00:	movk	x8, #0xff80, lsl #32
  412d04:	add	x11, x29, #0x10
  412d08:	add	x9, x9, #0x80
  412d0c:	add	x10, x10, #0x20
  412d10:	stp	x9, x8, [x29, #-16]
  412d14:	stp	x11, x10, [x29, #-32]
  412d18:	stp	x4, x5, [x29, #-96]
  412d1c:	stp	x6, x7, [x29, #-80]
  412d20:	stp	q0, q1, [sp]
  412d24:	ldp	q0, q1, [x29, #-32]
  412d28:	sub	x4, x29, #0x40
  412d2c:	stp	q2, q3, [sp, #32]
  412d30:	stp	q4, q5, [sp, #64]
  412d34:	stp	q6, q7, [sp, #96]
  412d38:	stp	q0, q1, [x29, #-64]
  412d3c:	bl	4129fc <__fxstatat@plt+0xffac>
  412d40:	ldp	x29, x30, [sp, #224]
  412d44:	add	sp, sp, #0xf0
  412d48:	ret
  412d4c:	stp	x29, x30, [sp, #-16]!
  412d50:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412d54:	add	x1, x1, #0xd77
  412d58:	mov	w2, #0x5                   	// #5
  412d5c:	mov	x0, xzr
  412d60:	mov	x29, sp
  412d64:	bl	402970 <dcgettext@plt>
  412d68:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  412d6c:	mov	x1, x0
  412d70:	add	x2, x2, #0xd8c
  412d74:	mov	w0, #0x1                   	// #1
  412d78:	bl	402670 <__printf_chk@plt>
  412d7c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412d80:	add	x1, x1, #0xda2
  412d84:	mov	w2, #0x5                   	// #5
  412d88:	mov	x0, xzr
  412d8c:	bl	402970 <dcgettext@plt>
  412d90:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5060>
  412d94:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  412d98:	mov	x1, x0
  412d9c:	add	x2, x2, #0xdde
  412da0:	add	x3, x3, #0x4e2
  412da4:	mov	w0, #0x1                   	// #1
  412da8:	bl	402670 <__printf_chk@plt>
  412dac:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  412db0:	add	x1, x1, #0xdb6
  412db4:	mov	w2, #0x5                   	// #5
  412db8:	mov	x0, xzr
  412dbc:	bl	402970 <dcgettext@plt>
  412dc0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  412dc4:	ldr	x1, [x8, #1456]
  412dc8:	ldp	x29, x30, [sp], #16
  412dcc:	b	402980 <fputs_unlocked@plt>
  412dd0:	stp	x29, x30, [sp, #-32]!
  412dd4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412dd8:	udiv	x8, x8, x1
  412ddc:	cmp	x8, x0
  412de0:	str	x19, [sp, #16]
  412de4:	mov	x29, sp
  412de8:	b.cc	412e0c <__fxstatat@plt+0x103bc>  // b.lo, b.ul, b.last
  412dec:	mul	x19, x1, x0
  412df0:	mov	x0, x19
  412df4:	bl	4025f0 <malloc@plt>
  412df8:	cbz	x19, 412e00 <__fxstatat@plt+0x103b0>
  412dfc:	cbz	x0, 412e0c <__fxstatat@plt+0x103bc>
  412e00:	ldr	x19, [sp, #16]
  412e04:	ldp	x29, x30, [sp], #32
  412e08:	ret
  412e0c:	bl	413124 <__fxstatat@plt+0x106d4>
  412e10:	stp	x29, x30, [sp, #-32]!
  412e14:	str	x19, [sp, #16]
  412e18:	mov	x29, sp
  412e1c:	mov	x19, x0
  412e20:	bl	4025f0 <malloc@plt>
  412e24:	cbz	x19, 412e2c <__fxstatat@plt+0x103dc>
  412e28:	cbz	x0, 412e38 <__fxstatat@plt+0x103e8>
  412e2c:	ldr	x19, [sp, #16]
  412e30:	ldp	x29, x30, [sp], #32
  412e34:	ret
  412e38:	bl	413124 <__fxstatat@plt+0x106d4>
  412e3c:	stp	x29, x30, [sp, #-32]!
  412e40:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412e44:	udiv	x8, x8, x2
  412e48:	cmp	x8, x1
  412e4c:	str	x19, [sp, #16]
  412e50:	mov	x29, sp
  412e54:	b.cc	412e8c <__fxstatat@plt+0x1043c>  // b.lo, b.ul, b.last
  412e58:	mul	x19, x2, x1
  412e5c:	cbz	x0, 412e70 <__fxstatat@plt+0x10420>
  412e60:	cbnz	x19, 412e70 <__fxstatat@plt+0x10420>
  412e64:	bl	402840 <free@plt>
  412e68:	mov	x0, xzr
  412e6c:	b	412e80 <__fxstatat@plt+0x10430>
  412e70:	mov	x1, x19
  412e74:	bl	4026f0 <realloc@plt>
  412e78:	cbz	x19, 412e80 <__fxstatat@plt+0x10430>
  412e7c:	cbz	x0, 412e8c <__fxstatat@plt+0x1043c>
  412e80:	ldr	x19, [sp, #16]
  412e84:	ldp	x29, x30, [sp], #32
  412e88:	ret
  412e8c:	bl	413124 <__fxstatat@plt+0x106d4>
  412e90:	stp	x29, x30, [sp, #-32]!
  412e94:	str	x19, [sp, #16]
  412e98:	mov	x19, x1
  412e9c:	mov	x29, sp
  412ea0:	cbz	x0, 412eb4 <__fxstatat@plt+0x10464>
  412ea4:	cbnz	x19, 412eb4 <__fxstatat@plt+0x10464>
  412ea8:	bl	402840 <free@plt>
  412eac:	mov	x0, xzr
  412eb0:	b	412ec4 <__fxstatat@plt+0x10474>
  412eb4:	mov	x1, x19
  412eb8:	bl	4026f0 <realloc@plt>
  412ebc:	cbz	x19, 412ec4 <__fxstatat@plt+0x10474>
  412ec0:	cbz	x0, 412ed0 <__fxstatat@plt+0x10480>
  412ec4:	ldr	x19, [sp, #16]
  412ec8:	ldp	x29, x30, [sp], #32
  412ecc:	ret
  412ed0:	bl	413124 <__fxstatat@plt+0x106d4>
  412ed4:	stp	x29, x30, [sp, #-32]!
  412ed8:	ldr	x8, [x1]
  412edc:	str	x19, [sp, #16]
  412ee0:	mov	x29, sp
  412ee4:	cbz	x0, 412f1c <__fxstatat@plt+0x104cc>
  412ee8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  412eec:	movk	x9, #0x5554
  412ef0:	udiv	x9, x9, x2
  412ef4:	cmp	x9, x8
  412ef8:	b.ls	412f64 <__fxstatat@plt+0x10514>  // b.plast
  412efc:	add	x8, x8, x8, lsr #1
  412f00:	add	x8, x8, #0x1
  412f04:	mul	x19, x8, x2
  412f08:	str	x8, [x1]
  412f0c:	cbnz	x19, 412f48 <__fxstatat@plt+0x104f8>
  412f10:	bl	402840 <free@plt>
  412f14:	mov	x0, xzr
  412f18:	b	412f58 <__fxstatat@plt+0x10508>
  412f1c:	cbnz	x8, 412f30 <__fxstatat@plt+0x104e0>
  412f20:	mov	w8, #0x80                  	// #128
  412f24:	udiv	x8, x8, x2
  412f28:	cmp	x2, #0x80
  412f2c:	cinc	x8, x8, hi  // hi = pmore
  412f30:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412f34:	udiv	x9, x9, x2
  412f38:	cmp	x9, x8
  412f3c:	b.cc	412f64 <__fxstatat@plt+0x10514>  // b.lo, b.ul, b.last
  412f40:	mul	x19, x8, x2
  412f44:	str	x8, [x1]
  412f48:	mov	x1, x19
  412f4c:	bl	4026f0 <realloc@plt>
  412f50:	cbz	x19, 412f58 <__fxstatat@plt+0x10508>
  412f54:	cbz	x0, 412f64 <__fxstatat@plt+0x10514>
  412f58:	ldr	x19, [sp, #16]
  412f5c:	ldp	x29, x30, [sp], #32
  412f60:	ret
  412f64:	bl	413124 <__fxstatat@plt+0x106d4>
  412f68:	stp	x29, x30, [sp, #-32]!
  412f6c:	str	x19, [sp, #16]
  412f70:	mov	x29, sp
  412f74:	mov	x19, x0
  412f78:	bl	4025f0 <malloc@plt>
  412f7c:	cbz	x19, 412f84 <__fxstatat@plt+0x10534>
  412f80:	cbz	x0, 412f90 <__fxstatat@plt+0x10540>
  412f84:	ldr	x19, [sp, #16]
  412f88:	ldp	x29, x30, [sp], #32
  412f8c:	ret
  412f90:	bl	413124 <__fxstatat@plt+0x106d4>
  412f94:	stp	x29, x30, [sp, #-32]!
  412f98:	str	x19, [sp, #16]
  412f9c:	ldr	x19, [x1]
  412fa0:	mov	x29, sp
  412fa4:	cbz	x0, 412fd4 <__fxstatat@plt+0x10584>
  412fa8:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  412fac:	movk	x8, #0x5554
  412fb0:	cmp	x19, x8
  412fb4:	b.cs	413004 <__fxstatat@plt+0x105b4>  // b.hs, b.nlast
  412fb8:	add	x8, x19, x19, lsr #1
  412fbc:	adds	x19, x8, #0x1
  412fc0:	str	x19, [x1]
  412fc4:	b.ne	412fe8 <__fxstatat@plt+0x10598>  // b.any
  412fc8:	bl	402840 <free@plt>
  412fcc:	mov	x0, xzr
  412fd0:	b	412ff8 <__fxstatat@plt+0x105a8>
  412fd4:	cbz	x19, 412fe0 <__fxstatat@plt+0x10590>
  412fd8:	tbz	x19, #63, 412fe4 <__fxstatat@plt+0x10594>
  412fdc:	b	413004 <__fxstatat@plt+0x105b4>
  412fe0:	mov	w19, #0x80                  	// #128
  412fe4:	str	x19, [x1]
  412fe8:	mov	x1, x19
  412fec:	bl	4026f0 <realloc@plt>
  412ff0:	cbz	x19, 412ff8 <__fxstatat@plt+0x105a8>
  412ff4:	cbz	x0, 413004 <__fxstatat@plt+0x105b4>
  412ff8:	ldr	x19, [sp, #16]
  412ffc:	ldp	x29, x30, [sp], #32
  413000:	ret
  413004:	bl	413124 <__fxstatat@plt+0x106d4>
  413008:	stp	x29, x30, [sp, #-32]!
  41300c:	stp	x20, x19, [sp, #16]
  413010:	mov	x29, sp
  413014:	mov	x19, x0
  413018:	bl	4025f0 <malloc@plt>
  41301c:	mov	x20, x0
  413020:	cbz	x19, 413028 <__fxstatat@plt+0x105d8>
  413024:	cbz	x20, 413048 <__fxstatat@plt+0x105f8>
  413028:	mov	x0, x20
  41302c:	mov	w1, wzr
  413030:	mov	x2, x19
  413034:	bl	402680 <memset@plt>
  413038:	mov	x0, x20
  41303c:	ldp	x20, x19, [sp, #16]
  413040:	ldp	x29, x30, [sp], #32
  413044:	ret
  413048:	bl	413124 <__fxstatat@plt+0x106d4>
  41304c:	stp	x29, x30, [sp, #-16]!
  413050:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  413054:	udiv	x8, x8, x1
  413058:	cmp	x8, x0
  41305c:	mov	x29, sp
  413060:	b.cc	413074 <__fxstatat@plt+0x10624>  // b.lo, b.ul, b.last
  413064:	bl	413b7c <__fxstatat@plt+0x1112c>
  413068:	cbz	x0, 413074 <__fxstatat@plt+0x10624>
  41306c:	ldp	x29, x30, [sp], #16
  413070:	ret
  413074:	bl	413124 <__fxstatat@plt+0x106d4>
  413078:	stp	x29, x30, [sp, #-48]!
  41307c:	stp	x20, x19, [sp, #32]
  413080:	mov	x20, x0
  413084:	mov	x0, x1
  413088:	str	x21, [sp, #16]
  41308c:	mov	x29, sp
  413090:	mov	x19, x1
  413094:	bl	4025f0 <malloc@plt>
  413098:	mov	x21, x0
  41309c:	cbz	x19, 4130a4 <__fxstatat@plt+0x10654>
  4130a0:	cbz	x21, 4130c8 <__fxstatat@plt+0x10678>
  4130a4:	mov	x0, x21
  4130a8:	mov	x1, x20
  4130ac:	mov	x2, x19
  4130b0:	bl	4023c0 <memcpy@plt>
  4130b4:	mov	x0, x21
  4130b8:	ldp	x20, x19, [sp, #32]
  4130bc:	ldr	x21, [sp, #16]
  4130c0:	ldp	x29, x30, [sp], #48
  4130c4:	ret
  4130c8:	bl	413124 <__fxstatat@plt+0x106d4>
  4130cc:	stp	x29, x30, [sp, #-48]!
  4130d0:	str	x21, [sp, #16]
  4130d4:	stp	x20, x19, [sp, #32]
  4130d8:	mov	x29, sp
  4130dc:	mov	x19, x0
  4130e0:	bl	402430 <strlen@plt>
  4130e4:	add	x20, x0, #0x1
  4130e8:	mov	x0, x20
  4130ec:	bl	4025f0 <malloc@plt>
  4130f0:	mov	x21, x0
  4130f4:	cbz	x20, 4130fc <__fxstatat@plt+0x106ac>
  4130f8:	cbz	x21, 413120 <__fxstatat@plt+0x106d0>
  4130fc:	mov	x0, x21
  413100:	mov	x1, x19
  413104:	mov	x2, x20
  413108:	bl	4023c0 <memcpy@plt>
  41310c:	mov	x0, x21
  413110:	ldp	x20, x19, [sp, #32]
  413114:	ldr	x21, [sp, #16]
  413118:	ldp	x29, x30, [sp], #48
  41311c:	ret
  413120:	bl	413124 <__fxstatat@plt+0x106d4>
  413124:	stp	x29, x30, [sp, #-32]!
  413128:	str	x19, [sp, #16]
  41312c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  413130:	ldr	w19, [x8, #1312]
  413134:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  413138:	add	x1, x1, #0xe26
  41313c:	mov	w2, #0x5                   	// #5
  413140:	mov	x0, xzr
  413144:	mov	x29, sp
  413148:	bl	402970 <dcgettext@plt>
  41314c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  413150:	mov	x3, x0
  413154:	add	x2, x2, #0x5ff
  413158:	mov	w0, w19
  41315c:	mov	w1, wzr
  413160:	bl	402490 <error@plt>
  413164:	bl	402770 <abort@plt>
  413168:	sub	sp, sp, #0x50
  41316c:	stp	x24, x23, [sp, #32]
  413170:	stp	x22, x21, [sp, #48]
  413174:	mov	x22, x3
  413178:	mov	x24, x2
  41317c:	mov	w2, w1
  413180:	add	x3, sp, #0x8
  413184:	mov	x1, xzr
  413188:	stp	x29, x30, [sp, #16]
  41318c:	stp	x20, x19, [sp, #64]
  413190:	add	x29, sp, #0x10
  413194:	mov	w20, w6
  413198:	mov	x19, x5
  41319c:	mov	x21, x0
  4131a0:	bl	4137dc <__fxstatat@plt+0x10d8c>
  4131a4:	cbz	w0, 4131d4 <__fxstatat@plt+0x10784>
  4131a8:	cmp	w0, #0x1
  4131ac:	b.eq	4131c4 <__fxstatat@plt+0x10774>  // b.none
  4131b0:	cmp	w0, #0x3
  4131b4:	b.ne	413200 <__fxstatat@plt+0x107b0>  // b.any
  4131b8:	bl	4029e0 <__errno_location@plt>
  4131bc:	str	wzr, [x0]
  4131c0:	b	413204 <__fxstatat@plt+0x107b4>
  4131c4:	bl	4029e0 <__errno_location@plt>
  4131c8:	mov	w8, #0x4b                  	// #75
  4131cc:	str	w8, [x0]
  4131d0:	b	413204 <__fxstatat@plt+0x107b4>
  4131d4:	ldr	x23, [sp, #8]
  4131d8:	cmp	x23, x24
  4131dc:	b.cc	4131e8 <__fxstatat@plt+0x10798>  // b.lo, b.ul, b.last
  4131e0:	cmp	x23, x22
  4131e4:	b.ls	413240 <__fxstatat@plt+0x107f0>  // b.plast
  4131e8:	bl	4029e0 <__errno_location@plt>
  4131ec:	lsr	x8, x23, #30
  4131f0:	cbnz	x8, 4131c8 <__fxstatat@plt+0x10778>
  4131f4:	mov	w8, #0x22                  	// #34
  4131f8:	str	w8, [x0]
  4131fc:	b	413204 <__fxstatat@plt+0x107b4>
  413200:	bl	4029e0 <__errno_location@plt>
  413204:	ldr	w8, [x0]
  413208:	cmp	w20, #0x0
  41320c:	csinc	w20, w20, wzr, ne  // ne = any
  413210:	mov	x0, x21
  413214:	cmp	w8, #0x16
  413218:	csel	w22, wzr, w8, eq  // eq = none
  41321c:	bl	412440 <__fxstatat@plt+0xf9f0>
  413220:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5060>
  413224:	mov	x4, x0
  413228:	add	x2, x2, #0xd59
  41322c:	mov	w0, w20
  413230:	mov	w1, w22
  413234:	mov	x3, x19
  413238:	bl	402490 <error@plt>
  41323c:	ldr	x23, [sp, #8]
  413240:	mov	x0, x23
  413244:	ldp	x20, x19, [sp, #64]
  413248:	ldp	x22, x21, [sp, #48]
  41324c:	ldp	x24, x23, [sp, #32]
  413250:	ldp	x29, x30, [sp, #16]
  413254:	add	sp, sp, #0x50
  413258:	ret
  41325c:	mov	w6, w5
  413260:	mov	x5, x4
  413264:	mov	x4, x3
  413268:	mov	x3, x2
  41326c:	mov	x2, x1
  413270:	mov	w1, #0xa                   	// #10
  413274:	b	413168 <__fxstatat@plt+0x10718>
  413278:	stp	x29, x30, [sp, #-32]!
  41327c:	mov	x0, xzr
  413280:	mov	x1, xzr
  413284:	str	x19, [sp, #16]
  413288:	mov	x29, sp
  41328c:	bl	402400 <getcwd@plt>
  413290:	mov	x19, x0
  413294:	cbnz	x0, 4132a8 <__fxstatat@plt+0x10858>
  413298:	bl	4029e0 <__errno_location@plt>
  41329c:	ldr	w8, [x0]
  4132a0:	cmp	w8, #0xc
  4132a4:	b.eq	4132b8 <__fxstatat@plt+0x10868>  // b.none
  4132a8:	mov	x0, x19
  4132ac:	ldr	x19, [sp, #16]
  4132b0:	ldp	x29, x30, [sp], #32
  4132b4:	ret
  4132b8:	bl	413124 <__fxstatat@plt+0x106d4>
  4132bc:	sub	sp, sp, #0x50
  4132c0:	stp	x24, x23, [sp, #32]
  4132c4:	mov	x23, #0x1001                	// #4097
  4132c8:	movk	x23, #0x40, lsl #16
  4132cc:	stp	x22, x21, [sp, #48]
  4132d0:	stp	x20, x19, [sp, #64]
  4132d4:	mov	x19, xzr
  4132d8:	mov	w8, #0x22                  	// #34
  4132dc:	mov	w22, #0x1                   	// #1
  4132e0:	movk	x23, #0x10, lsl #32
  4132e4:	stp	x29, x30, [sp, #16]
  4132e8:	add	x29, sp, #0x10
  4132ec:	str	x8, [sp, #8]
  4132f0:	b	4132fc <__fxstatat@plt+0x108ac>
  4132f4:	ldrb	w8, [x19, x24]
  4132f8:	cbz	w8, 413360 <__fxstatat@plt+0x10910>
  4132fc:	add	x1, sp, #0x8
  413300:	mov	x0, x19
  413304:	bl	412f94 <__fxstatat@plt+0x10544>
  413308:	ldr	x8, [sp, #8]
  41330c:	mov	x19, x0
  413310:	sub	x24, x8, #0x2
  413314:	sub	x21, x8, #0x1
  413318:	strb	wzr, [x0, x24]
  41331c:	bl	4029e0 <__errno_location@plt>
  413320:	mov	x20, x0
  413324:	str	wzr, [x0]
  413328:	mov	x0, x19
  41332c:	mov	x1, x21
  413330:	bl	402930 <gethostname@plt>
  413334:	cbz	w0, 4132f4 <__fxstatat@plt+0x108a4>
  413338:	ldr	w21, [x20]
  41333c:	cmp	w21, #0x24
  413340:	b.hi	413350 <__fxstatat@plt+0x10900>  // b.pmore
  413344:	lsl	x8, x22, x21
  413348:	tst	x8, x23
  41334c:	b.ne	4132fc <__fxstatat@plt+0x108ac>  // b.any
  413350:	mov	x0, x19
  413354:	bl	402840 <free@plt>
  413358:	mov	x19, xzr
  41335c:	str	w21, [x20]
  413360:	mov	x0, x19
  413364:	ldp	x20, x19, [sp, #64]
  413368:	ldp	x22, x21, [sp, #48]
  41336c:	ldp	x24, x23, [sp, #32]
  413370:	ldp	x29, x30, [sp, #16]
  413374:	add	sp, sp, #0x50
  413378:	ret
  41337c:	stp	x29, x30, [sp, #-80]!
  413380:	cmp	w2, #0x25
  413384:	str	x25, [sp, #16]
  413388:	stp	x24, x23, [sp, #32]
  41338c:	stp	x22, x21, [sp, #48]
  413390:	stp	x20, x19, [sp, #64]
  413394:	mov	x29, sp
  413398:	b.cs	4136f8 <__fxstatat@plt+0x10ca8>  // b.hs, b.nlast
  41339c:	mov	x23, x4
  4133a0:	mov	x19, x3
  4133a4:	mov	w22, w2
  4133a8:	mov	x21, x1
  4133ac:	mov	x20, x0
  4133b0:	bl	4029e0 <__errno_location@plt>
  4133b4:	mov	x24, x0
  4133b8:	str	wzr, [x0]
  4133bc:	bl	402820 <__ctype_b_loc@plt>
  4133c0:	ldr	x8, [x0]
  4133c4:	mov	x10, x20
  4133c8:	ldrb	w9, [x10], #1
  4133cc:	ldrh	w11, [x8, x9, lsl #1]
  4133d0:	tbnz	w11, #13, 4133c8 <__fxstatat@plt+0x10978>
  4133d4:	cmp	x21, #0x0
  4133d8:	add	x8, x29, #0x18
  4133dc:	csel	x21, x8, x21, eq  // eq = none
  4133e0:	cmp	w9, #0x2d
  4133e4:	b.ne	4133f0 <__fxstatat@plt+0x109a0>  // b.any
  4133e8:	mov	w20, #0x4                   	// #4
  4133ec:	b	4136c8 <__fxstatat@plt+0x10c78>
  4133f0:	mov	x0, x20
  4133f4:	mov	x1, x21
  4133f8:	mov	w2, w22
  4133fc:	bl	402420 <strtoul@plt>
  413400:	ldr	x25, [x21]
  413404:	cmp	x25, x20
  413408:	b.eq	413434 <__fxstatat@plt+0x109e4>  // b.none
  41340c:	ldr	w20, [x24]
  413410:	mov	x22, x0
  413414:	cbz	w20, 413424 <__fxstatat@plt+0x109d4>
  413418:	cmp	w20, #0x22
  41341c:	b.ne	4133e8 <__fxstatat@plt+0x10998>  // b.any
  413420:	mov	w20, #0x1                   	// #1
  413424:	cbz	x23, 4136c4 <__fxstatat@plt+0x10c74>
  413428:	ldrb	w24, [x25]
  41342c:	cbnz	w24, 41345c <__fxstatat@plt+0x10a0c>
  413430:	b	4136c4 <__fxstatat@plt+0x10c74>
  413434:	cbz	x23, 4133e8 <__fxstatat@plt+0x10998>
  413438:	ldrb	w1, [x20]
  41343c:	cbz	w1, 4133e8 <__fxstatat@plt+0x10998>
  413440:	mov	x0, x23
  413444:	bl	402870 <strchr@plt>
  413448:	cbz	x0, 4133e8 <__fxstatat@plt+0x10998>
  41344c:	mov	w20, wzr
  413450:	mov	w22, #0x1                   	// #1
  413454:	ldrb	w24, [x25]
  413458:	cbz	w24, 4136c4 <__fxstatat@plt+0x10c74>
  41345c:	mov	x0, x23
  413460:	mov	w1, w24
  413464:	bl	402870 <strchr@plt>
  413468:	cbz	x0, 413534 <__fxstatat@plt+0x10ae4>
  41346c:	sub	w10, w24, #0x45
  413470:	mov	w8, #0x1                   	// #1
  413474:	cmp	w10, #0x2f
  413478:	mov	w9, #0x400                 	// #1024
  41347c:	b.hi	4134f4 <__fxstatat@plt+0x10aa4>  // b.pmore
  413480:	mov	w11, #0x1                   	// #1
  413484:	lsl	x10, x11, x10
  413488:	mov	x11, #0x8945                	// #35141
  41348c:	movk	x11, #0x30, lsl #16
  413490:	movk	x11, #0x8144, lsl #32
  413494:	tst	x10, x11
  413498:	b.eq	4134f4 <__fxstatat@plt+0x10aa4>  // b.none
  41349c:	mov	w1, #0x30                  	// #48
  4134a0:	mov	x0, x23
  4134a4:	bl	402870 <strchr@plt>
  4134a8:	cbz	x0, 4134e0 <__fxstatat@plt+0x10a90>
  4134ac:	ldrb	w8, [x25, #1]
  4134b0:	cmp	w8, #0x42
  4134b4:	b.eq	4134ec <__fxstatat@plt+0x10a9c>  // b.none
  4134b8:	cmp	w8, #0x44
  4134bc:	b.eq	4134ec <__fxstatat@plt+0x10a9c>  // b.none
  4134c0:	cmp	w8, #0x69
  4134c4:	b.ne	4134e0 <__fxstatat@plt+0x10a90>  // b.any
  4134c8:	ldrb	w8, [x25, #2]
  4134cc:	mov	w9, #0x3                   	// #3
  4134d0:	cmp	w8, #0x42
  4134d4:	csinc	x8, x9, xzr, eq  // eq = none
  4134d8:	mov	w9, #0x400                 	// #1024
  4134dc:	b	4134f4 <__fxstatat@plt+0x10aa4>
  4134e0:	mov	w8, #0x1                   	// #1
  4134e4:	mov	w9, #0x400                 	// #1024
  4134e8:	b	4134f4 <__fxstatat@plt+0x10aa4>
  4134ec:	mov	w8, #0x2                   	// #2
  4134f0:	mov	w9, #0x3e8                 	// #1000
  4134f4:	sub	w10, w24, #0x42
  4134f8:	cmp	w10, #0x35
  4134fc:	b.hi	413534 <__fxstatat@plt+0x10ae4>  // b.pmore
  413500:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x6060>
  413504:	add	x11, x11, #0xe37
  413508:	adr	x12, 41351c <__fxstatat@plt+0x10acc>
  41350c:	ldrb	w13, [x11, x10]
  413510:	add	x12, x12, x13, lsl #2
  413514:	mov	w10, wzr
  413518:	br	x12
  41351c:	umulh	x10, x9, x22
  413520:	mul	x11, x22, x9
  413524:	cmp	xzr, x10
  413528:	cset	w10, ne  // ne = any
  41352c:	csinv	x11, x11, xzr, eq  // eq = none
  413530:	b	413660 <__fxstatat@plt+0x10c10>
  413534:	str	x22, [x19]
  413538:	orr	w20, w20, #0x2
  41353c:	b	4136c8 <__fxstatat@plt+0x10c78>
  413540:	umulh	x10, x9, x22
  413544:	mul	x9, x22, x9
  413548:	cmp	xzr, x10
  41354c:	b	41369c <__fxstatat@plt+0x10c4c>
  413550:	umulh	x10, x9, x22
  413554:	mul	x11, x22, x9
  413558:	cmp	xzr, x10
  41355c:	cset	w10, ne  // ne = any
  413560:	csinv	x11, x11, xzr, eq  // eq = none
  413564:	b	413678 <__fxstatat@plt+0x10c28>
  413568:	umulh	x10, x9, x22
  41356c:	mul	x11, x22, x9
  413570:	cmp	xzr, x10
  413574:	cset	w10, ne  // ne = any
  413578:	csinv	x11, x11, xzr, eq  // eq = none
  41357c:	b	413648 <__fxstatat@plt+0x10bf8>
  413580:	umulh	x10, x9, x22
  413584:	mul	x11, x22, x9
  413588:	cmp	xzr, x10
  41358c:	cset	w10, ne  // ne = any
  413590:	csinv	x11, x11, xzr, eq  // eq = none
  413594:	b	413600 <__fxstatat@plt+0x10bb0>
  413598:	cmp	xzr, x22, lsr #54
  41359c:	lsl	x9, x22, #10
  4135a0:	b	41369c <__fxstatat@plt+0x10c4c>
  4135a4:	umulh	x10, x9, x22
  4135a8:	mul	x11, x22, x9
  4135ac:	cmp	xzr, x10
  4135b0:	cset	w10, ne  // ne = any
  4135b4:	csinv	x11, x11, xzr, eq  // eq = none
  4135b8:	b	413618 <__fxstatat@plt+0x10bc8>
  4135bc:	umulh	x10, x9, x22
  4135c0:	mul	x11, x22, x9
  4135c4:	cmp	xzr, x10
  4135c8:	cset	w10, ne  // ne = any
  4135cc:	csinv	x11, x11, xzr, eq  // eq = none
  4135d0:	b	413630 <__fxstatat@plt+0x10be0>
  4135d4:	umulh	x10, x9, x22
  4135d8:	mul	x11, x22, x9
  4135dc:	cmp	xzr, x10
  4135e0:	csinv	x11, x11, xzr, eq  // eq = none
  4135e4:	umulh	x12, x9, x11
  4135e8:	cset	w10, ne  // ne = any
  4135ec:	cmp	xzr, x12
  4135f0:	mul	x11, x11, x9
  4135f4:	cset	w12, ne  // ne = any
  4135f8:	csinv	x11, x11, xzr, eq  // eq = none
  4135fc:	orr	w10, w10, w12
  413600:	umulh	x12, x9, x11
  413604:	cmp	xzr, x12
  413608:	mul	x11, x11, x9
  41360c:	cset	w12, ne  // ne = any
  413610:	csinv	x11, x11, xzr, eq  // eq = none
  413614:	orr	w10, w10, w12
  413618:	umulh	x12, x9, x11
  41361c:	cmp	xzr, x12
  413620:	mul	x11, x11, x9
  413624:	cset	w12, ne  // ne = any
  413628:	csinv	x11, x11, xzr, eq  // eq = none
  41362c:	orr	w10, w10, w12
  413630:	umulh	x12, x9, x11
  413634:	cmp	xzr, x12
  413638:	mul	x11, x11, x9
  41363c:	cset	w12, ne  // ne = any
  413640:	csinv	x11, x11, xzr, eq  // eq = none
  413644:	orr	w10, w10, w12
  413648:	umulh	x12, x9, x11
  41364c:	cmp	xzr, x12
  413650:	mul	x11, x11, x9
  413654:	cset	w12, ne  // ne = any
  413658:	csinv	x11, x11, xzr, eq  // eq = none
  41365c:	orr	w10, w10, w12
  413660:	umulh	x12, x9, x11
  413664:	cmp	xzr, x12
  413668:	mul	x11, x11, x9
  41366c:	cset	w12, ne  // ne = any
  413670:	csinv	x11, x11, xzr, eq  // eq = none
  413674:	orr	w10, w10, w12
  413678:	umulh	x12, x9, x11
  41367c:	cmp	xzr, x12
  413680:	mul	x9, x11, x9
  413684:	cset	w11, ne  // ne = any
  413688:	csinv	x22, x9, xzr, eq  // eq = none
  41368c:	orr	w10, w10, w11
  413690:	b	4136a4 <__fxstatat@plt+0x10c54>
  413694:	cmp	xzr, x22, lsr #55
  413698:	lsl	x9, x22, #9
  41369c:	cset	w10, ne  // ne = any
  4136a0:	csinv	x22, x9, xzr, eq  // eq = none
  4136a4:	add	x9, x25, x8
  4136a8:	str	x9, [x21]
  4136ac:	ldrb	w8, [x25, x8]
  4136b0:	and	w9, w10, #0x1
  4136b4:	orr	w9, w20, w9
  4136b8:	orr	w10, w9, #0x2
  4136bc:	cmp	w8, #0x0
  4136c0:	csel	w20, w9, w10, eq  // eq = none
  4136c4:	str	x22, [x19]
  4136c8:	mov	w0, w20
  4136cc:	ldp	x20, x19, [sp, #64]
  4136d0:	ldp	x22, x21, [sp, #48]
  4136d4:	ldp	x24, x23, [sp, #32]
  4136d8:	ldr	x25, [sp, #16]
  4136dc:	ldp	x29, x30, [sp], #80
  4136e0:	ret
  4136e4:	cmn	x22, x22
  4136e8:	lsl	x9, x22, #1
  4136ec:	cset	w10, cs  // cs = hs, nlast
  4136f0:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  4136f4:	b	4136a4 <__fxstatat@plt+0x10c54>
  4136f8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  4136fc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  413700:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  413704:	add	x0, x0, #0xe6d
  413708:	add	x1, x1, #0xe93
  41370c:	add	x3, x3, #0xea3
  413710:	mov	w2, #0x54                  	// #84
  413714:	bl	4029d0 <__assert_fail@plt>
  413718:	stp	x29, x30, [sp, #-16]!
  41371c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  413720:	ldr	w5, [x8, #1312]
  413724:	mov	x29, sp
  413728:	bl	413730 <__fxstatat@plt+0x10ce0>
  41372c:	bl	402770 <abort@plt>
  413730:	sub	sp, sp, #0x40
  413734:	sub	w9, w0, #0x1
  413738:	cmp	w9, #0x4
  41373c:	stp	x29, x30, [sp, #16]
  413740:	stp	x22, x21, [sp, #32]
  413744:	stp	x20, x19, [sp, #48]
  413748:	add	x29, sp, #0x10
  41374c:	b.cs	4137d8 <__fxstatat@plt+0x10d88>  // b.hs, b.nlast
  413750:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  413754:	add	x10, x10, #0xf58
  413758:	mov	w8, w1
  41375c:	ldr	x1, [x10, w9, sxtw #3]
  413760:	mov	w20, w5
  413764:	mov	x19, x4
  413768:	sxtw	x9, w8
  41376c:	tbnz	w8, #31, 413784 <__fxstatat@plt+0x10d34>
  413770:	lsl	x8, x9, #5
  413774:	ldr	x21, [x3, x8]
  413778:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x6060>
  41377c:	add	x22, x22, #0xef4
  413780:	b	41379c <__fxstatat@plt+0x10d4c>
  413784:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  413788:	add	x8, x8, #0xef4
  41378c:	sub	x21, x29, #0x4
  413790:	sturb	w2, [x29, #-4]
  413794:	sub	x22, x8, x9
  413798:	sturb	wzr, [x29, #-3]
  41379c:	mov	w2, #0x5                   	// #5
  4137a0:	mov	x0, xzr
  4137a4:	bl	402970 <dcgettext@plt>
  4137a8:	mov	x2, x0
  4137ac:	mov	w0, w20
  4137b0:	mov	w1, wzr
  4137b4:	mov	x3, x22
  4137b8:	mov	x4, x21
  4137bc:	mov	x5, x19
  4137c0:	bl	402490 <error@plt>
  4137c4:	ldp	x20, x19, [sp, #48]
  4137c8:	ldp	x22, x21, [sp, #32]
  4137cc:	ldp	x29, x30, [sp, #16]
  4137d0:	add	sp, sp, #0x40
  4137d4:	ret
  4137d8:	bl	402770 <abort@plt>
  4137dc:	stp	x29, x30, [sp, #-80]!
  4137e0:	cmp	w2, #0x25
  4137e4:	str	x25, [sp, #16]
  4137e8:	stp	x24, x23, [sp, #32]
  4137ec:	stp	x22, x21, [sp, #48]
  4137f0:	stp	x20, x19, [sp, #64]
  4137f4:	mov	x29, sp
  4137f8:	b.cs	413b5c <__fxstatat@plt+0x1110c>  // b.hs, b.nlast
  4137fc:	mov	x23, x4
  413800:	mov	x19, x3
  413804:	mov	w22, w2
  413808:	mov	x21, x1
  41380c:	mov	x20, x0
  413810:	bl	4029e0 <__errno_location@plt>
  413814:	mov	x24, x0
  413818:	str	wzr, [x0]
  41381c:	bl	402820 <__ctype_b_loc@plt>
  413820:	ldr	x8, [x0]
  413824:	mov	x10, x20
  413828:	ldrb	w9, [x10], #1
  41382c:	ldrh	w11, [x8, x9, lsl #1]
  413830:	tbnz	w11, #13, 413828 <__fxstatat@plt+0x10dd8>
  413834:	cmp	x21, #0x0
  413838:	add	x8, x29, #0x18
  41383c:	csel	x21, x8, x21, eq  // eq = none
  413840:	cmp	w9, #0x2d
  413844:	b.ne	413850 <__fxstatat@plt+0x10e00>  // b.any
  413848:	mov	w20, #0x4                   	// #4
  41384c:	b	413b2c <__fxstatat@plt+0x110dc>
  413850:	mov	x0, x20
  413854:	mov	x1, x21
  413858:	mov	w2, w22
  41385c:	mov	w3, wzr
  413860:	bl	4026b0 <__strtoul_internal@plt>
  413864:	ldr	x25, [x21]
  413868:	cmp	x25, x20
  41386c:	b.eq	413898 <__fxstatat@plt+0x10e48>  // b.none
  413870:	ldr	w20, [x24]
  413874:	mov	x22, x0
  413878:	cbz	w20, 413888 <__fxstatat@plt+0x10e38>
  41387c:	cmp	w20, #0x22
  413880:	b.ne	413848 <__fxstatat@plt+0x10df8>  // b.any
  413884:	mov	w20, #0x1                   	// #1
  413888:	cbz	x23, 413b28 <__fxstatat@plt+0x110d8>
  41388c:	ldrb	w24, [x25]
  413890:	cbnz	w24, 4138c0 <__fxstatat@plt+0x10e70>
  413894:	b	413b28 <__fxstatat@plt+0x110d8>
  413898:	cbz	x23, 413848 <__fxstatat@plt+0x10df8>
  41389c:	ldrb	w1, [x20]
  4138a0:	cbz	w1, 413848 <__fxstatat@plt+0x10df8>
  4138a4:	mov	x0, x23
  4138a8:	bl	402870 <strchr@plt>
  4138ac:	cbz	x0, 413848 <__fxstatat@plt+0x10df8>
  4138b0:	mov	w20, wzr
  4138b4:	mov	w22, #0x1                   	// #1
  4138b8:	ldrb	w24, [x25]
  4138bc:	cbz	w24, 413b28 <__fxstatat@plt+0x110d8>
  4138c0:	mov	x0, x23
  4138c4:	mov	w1, w24
  4138c8:	bl	402870 <strchr@plt>
  4138cc:	cbz	x0, 413998 <__fxstatat@plt+0x10f48>
  4138d0:	sub	w10, w24, #0x45
  4138d4:	mov	w8, #0x1                   	// #1
  4138d8:	cmp	w10, #0x2f
  4138dc:	mov	w9, #0x400                 	// #1024
  4138e0:	b.hi	413958 <__fxstatat@plt+0x10f08>  // b.pmore
  4138e4:	mov	w11, #0x1                   	// #1
  4138e8:	lsl	x10, x11, x10
  4138ec:	mov	x11, #0x8945                	// #35141
  4138f0:	movk	x11, #0x30, lsl #16
  4138f4:	movk	x11, #0x8144, lsl #32
  4138f8:	tst	x10, x11
  4138fc:	b.eq	413958 <__fxstatat@plt+0x10f08>  // b.none
  413900:	mov	w1, #0x30                  	// #48
  413904:	mov	x0, x23
  413908:	bl	402870 <strchr@plt>
  41390c:	cbz	x0, 413944 <__fxstatat@plt+0x10ef4>
  413910:	ldrb	w8, [x25, #1]
  413914:	cmp	w8, #0x42
  413918:	b.eq	413950 <__fxstatat@plt+0x10f00>  // b.none
  41391c:	cmp	w8, #0x44
  413920:	b.eq	413950 <__fxstatat@plt+0x10f00>  // b.none
  413924:	cmp	w8, #0x69
  413928:	b.ne	413944 <__fxstatat@plt+0x10ef4>  // b.any
  41392c:	ldrb	w8, [x25, #2]
  413930:	mov	w9, #0x3                   	// #3
  413934:	cmp	w8, #0x42
  413938:	csinc	x8, x9, xzr, eq  // eq = none
  41393c:	mov	w9, #0x400                 	// #1024
  413940:	b	413958 <__fxstatat@plt+0x10f08>
  413944:	mov	w8, #0x1                   	// #1
  413948:	mov	w9, #0x400                 	// #1024
  41394c:	b	413958 <__fxstatat@plt+0x10f08>
  413950:	mov	w8, #0x2                   	// #2
  413954:	mov	w9, #0x3e8                 	// #1000
  413958:	sub	w10, w24, #0x42
  41395c:	cmp	w10, #0x35
  413960:	b.hi	413998 <__fxstatat@plt+0x10f48>  // b.pmore
  413964:	adrp	x11, 41a000 <_obstack_memory_used@@Base+0x6060>
  413968:	add	x11, x11, #0xf78
  41396c:	adr	x12, 413980 <__fxstatat@plt+0x10f30>
  413970:	ldrb	w13, [x11, x10]
  413974:	add	x12, x12, x13, lsl #2
  413978:	mov	w10, wzr
  41397c:	br	x12
  413980:	umulh	x10, x9, x22
  413984:	mul	x11, x22, x9
  413988:	cmp	xzr, x10
  41398c:	cset	w10, ne  // ne = any
  413990:	csinv	x11, x11, xzr, eq  // eq = none
  413994:	b	413ac4 <__fxstatat@plt+0x11074>
  413998:	str	x22, [x19]
  41399c:	orr	w20, w20, #0x2
  4139a0:	b	413b2c <__fxstatat@plt+0x110dc>
  4139a4:	umulh	x10, x9, x22
  4139a8:	mul	x9, x22, x9
  4139ac:	cmp	xzr, x10
  4139b0:	b	413b00 <__fxstatat@plt+0x110b0>
  4139b4:	umulh	x10, x9, x22
  4139b8:	mul	x11, x22, x9
  4139bc:	cmp	xzr, x10
  4139c0:	cset	w10, ne  // ne = any
  4139c4:	csinv	x11, x11, xzr, eq  // eq = none
  4139c8:	b	413adc <__fxstatat@plt+0x1108c>
  4139cc:	umulh	x10, x9, x22
  4139d0:	mul	x11, x22, x9
  4139d4:	cmp	xzr, x10
  4139d8:	cset	w10, ne  // ne = any
  4139dc:	csinv	x11, x11, xzr, eq  // eq = none
  4139e0:	b	413aac <__fxstatat@plt+0x1105c>
  4139e4:	umulh	x10, x9, x22
  4139e8:	mul	x11, x22, x9
  4139ec:	cmp	xzr, x10
  4139f0:	cset	w10, ne  // ne = any
  4139f4:	csinv	x11, x11, xzr, eq  // eq = none
  4139f8:	b	413a64 <__fxstatat@plt+0x11014>
  4139fc:	cmp	xzr, x22, lsr #54
  413a00:	lsl	x9, x22, #10
  413a04:	b	413b00 <__fxstatat@plt+0x110b0>
  413a08:	umulh	x10, x9, x22
  413a0c:	mul	x11, x22, x9
  413a10:	cmp	xzr, x10
  413a14:	cset	w10, ne  // ne = any
  413a18:	csinv	x11, x11, xzr, eq  // eq = none
  413a1c:	b	413a7c <__fxstatat@plt+0x1102c>
  413a20:	umulh	x10, x9, x22
  413a24:	mul	x11, x22, x9
  413a28:	cmp	xzr, x10
  413a2c:	cset	w10, ne  // ne = any
  413a30:	csinv	x11, x11, xzr, eq  // eq = none
  413a34:	b	413a94 <__fxstatat@plt+0x11044>
  413a38:	umulh	x10, x9, x22
  413a3c:	mul	x11, x22, x9
  413a40:	cmp	xzr, x10
  413a44:	csinv	x11, x11, xzr, eq  // eq = none
  413a48:	umulh	x12, x9, x11
  413a4c:	cset	w10, ne  // ne = any
  413a50:	cmp	xzr, x12
  413a54:	mul	x11, x11, x9
  413a58:	cset	w12, ne  // ne = any
  413a5c:	csinv	x11, x11, xzr, eq  // eq = none
  413a60:	orr	w10, w10, w12
  413a64:	umulh	x12, x9, x11
  413a68:	cmp	xzr, x12
  413a6c:	mul	x11, x11, x9
  413a70:	cset	w12, ne  // ne = any
  413a74:	csinv	x11, x11, xzr, eq  // eq = none
  413a78:	orr	w10, w10, w12
  413a7c:	umulh	x12, x9, x11
  413a80:	cmp	xzr, x12
  413a84:	mul	x11, x11, x9
  413a88:	cset	w12, ne  // ne = any
  413a8c:	csinv	x11, x11, xzr, eq  // eq = none
  413a90:	orr	w10, w10, w12
  413a94:	umulh	x12, x9, x11
  413a98:	cmp	xzr, x12
  413a9c:	mul	x11, x11, x9
  413aa0:	cset	w12, ne  // ne = any
  413aa4:	csinv	x11, x11, xzr, eq  // eq = none
  413aa8:	orr	w10, w10, w12
  413aac:	umulh	x12, x9, x11
  413ab0:	cmp	xzr, x12
  413ab4:	mul	x11, x11, x9
  413ab8:	cset	w12, ne  // ne = any
  413abc:	csinv	x11, x11, xzr, eq  // eq = none
  413ac0:	orr	w10, w10, w12
  413ac4:	umulh	x12, x9, x11
  413ac8:	cmp	xzr, x12
  413acc:	mul	x11, x11, x9
  413ad0:	cset	w12, ne  // ne = any
  413ad4:	csinv	x11, x11, xzr, eq  // eq = none
  413ad8:	orr	w10, w10, w12
  413adc:	umulh	x12, x9, x11
  413ae0:	cmp	xzr, x12
  413ae4:	mul	x9, x11, x9
  413ae8:	cset	w11, ne  // ne = any
  413aec:	csinv	x22, x9, xzr, eq  // eq = none
  413af0:	orr	w10, w10, w11
  413af4:	b	413b08 <__fxstatat@plt+0x110b8>
  413af8:	cmp	xzr, x22, lsr #55
  413afc:	lsl	x9, x22, #9
  413b00:	cset	w10, ne  // ne = any
  413b04:	csinv	x22, x9, xzr, eq  // eq = none
  413b08:	add	x9, x25, x8
  413b0c:	str	x9, [x21]
  413b10:	ldrb	w8, [x25, x8]
  413b14:	and	w9, w10, #0x1
  413b18:	orr	w9, w20, w9
  413b1c:	orr	w10, w9, #0x2
  413b20:	cmp	w8, #0x0
  413b24:	csel	w20, w9, w10, eq  // eq = none
  413b28:	str	x22, [x19]
  413b2c:	mov	w0, w20
  413b30:	ldp	x20, x19, [sp, #64]
  413b34:	ldp	x22, x21, [sp, #48]
  413b38:	ldp	x24, x23, [sp, #32]
  413b3c:	ldr	x25, [sp, #16]
  413b40:	ldp	x29, x30, [sp], #80
  413b44:	ret
  413b48:	cmn	x22, x22
  413b4c:	lsl	x9, x22, #1
  413b50:	cset	w10, cs  // cs = hs, nlast
  413b54:	csinv	x22, x9, xzr, cc  // cc = lo, ul, last
  413b58:	b	413b08 <__fxstatat@plt+0x110b8>
  413b5c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6060>
  413b60:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  413b64:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6060>
  413b68:	add	x0, x0, #0xe6d
  413b6c:	add	x1, x1, #0xe93
  413b70:	add	x3, x3, #0xfae
  413b74:	mov	w2, #0x54                  	// #84
  413b78:	bl	4029d0 <__assert_fail@plt>
  413b7c:	mov	x8, x1
  413b80:	mov	w1, #0x1                   	// #1
  413b84:	mov	w9, #0x1                   	// #1
  413b88:	cbz	x0, 413bc0 <__fxstatat@plt+0x11170>
  413b8c:	cbz	x8, 413bc0 <__fxstatat@plt+0x11170>
  413b90:	umulh	x10, x8, x0
  413b94:	mov	x1, x8
  413b98:	mov	x9, x0
  413b9c:	cbz	x10, 413bc0 <__fxstatat@plt+0x11170>
  413ba0:	stp	x29, x30, [sp, #-16]!
  413ba4:	mov	x29, sp
  413ba8:	bl	4029e0 <__errno_location@plt>
  413bac:	mov	w8, #0xc                   	// #12
  413bb0:	str	w8, [x0]
  413bb4:	mov	x0, xzr
  413bb8:	ldp	x29, x30, [sp], #16
  413bbc:	ret
  413bc0:	mov	x0, x9
  413bc4:	b	4026c0 <calloc@plt>
  413bc8:	sub	sp, sp, #0x40
  413bcc:	stp	x29, x30, [sp, #16]
  413bd0:	add	x29, sp, #0x10
  413bd4:	cmp	x0, #0x0
  413bd8:	sub	x8, x29, #0x4
  413bdc:	stp	x20, x19, [sp, #48]
  413be0:	csel	x20, x8, x0, eq  // eq = none
  413be4:	mov	x0, x20
  413be8:	stp	x22, x21, [sp, #32]
  413bec:	mov	x22, x2
  413bf0:	mov	x19, x1
  413bf4:	bl	4023b0 <mbrtowc@plt>
  413bf8:	mov	x21, x0
  413bfc:	cbz	x22, 413c20 <__fxstatat@plt+0x111d0>
  413c00:	cmn	x21, #0x2
  413c04:	b.cc	413c20 <__fxstatat@plt+0x111d0>  // b.lo, b.ul, b.last
  413c08:	mov	w0, wzr
  413c0c:	bl	40ced4 <__fxstatat@plt+0xa484>
  413c10:	tbnz	w0, #0, 413c20 <__fxstatat@plt+0x111d0>
  413c14:	ldrb	w8, [x19]
  413c18:	mov	w21, #0x1                   	// #1
  413c1c:	str	w8, [x20]
  413c20:	mov	x0, x21
  413c24:	ldp	x20, x19, [sp, #48]
  413c28:	ldp	x22, x21, [sp, #32]
  413c2c:	ldp	x29, x30, [sp, #16]
  413c30:	add	sp, sp, #0x40
  413c34:	ret

0000000000413c38 <_obstack_begin@@Base>:
  413c38:	stp	x29, x30, [sp, #-48]!
  413c3c:	stp	x20, x19, [sp, #32]
  413c40:	ldrb	w8, [x0, #80]
  413c44:	cmp	x2, #0x0
  413c48:	mov	w9, #0x10                  	// #16
  413c4c:	csel	x20, x9, x2, eq  // eq = none
  413c50:	mov	w9, #0xfe0                 	// #4064
  413c54:	cmp	x1, #0x0
  413c58:	str	x21, [sp, #16]
  413c5c:	mov	x19, x0
  413c60:	str	x4, [x0, #64]
  413c64:	csel	x0, x9, x1, eq  // eq = none
  413c68:	and	w8, w8, #0xfe
  413c6c:	sub	x21, x20, #0x1
  413c70:	mov	x29, sp
  413c74:	strb	w8, [x19, #80]
  413c78:	str	x0, [x19]
  413c7c:	stp	x21, x3, [x19, #48]
  413c80:	blr	x3
  413c84:	str	x0, [x19, #8]
  413c88:	cbz	x0, 413cd4 <_obstack_begin@@Base+0x9c>
  413c8c:	ldr	x10, [x19]
  413c90:	add	x8, x0, x21
  413c94:	neg	x9, x20
  413c98:	add	x8, x8, #0x10
  413c9c:	and	x8, x8, x9
  413ca0:	stp	x8, x8, [x19, #16]
  413ca4:	add	x8, x0, x10
  413ca8:	str	x8, [x0]
  413cac:	str	x8, [x19, #32]
  413cb0:	str	xzr, [x0, #8]
  413cb4:	ldrb	w8, [x19, #80]
  413cb8:	ldr	x21, [sp, #16]
  413cbc:	mov	w0, #0x1                   	// #1
  413cc0:	and	w8, w8, #0xfffffff9
  413cc4:	strb	w8, [x19, #80]
  413cc8:	ldp	x20, x19, [sp, #32]
  413ccc:	ldp	x29, x30, [sp], #48
  413cd0:	ret
  413cd4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  413cd8:	ldr	x8, [x8, #1408]
  413cdc:	blr	x8

0000000000413ce0 <_obstack_begin_1@@Base>:
  413ce0:	stp	x29, x30, [sp, #-48]!
  413ce4:	stp	x20, x19, [sp, #32]
  413ce8:	ldrb	w8, [x0, #80]
  413cec:	cmp	x2, #0x0
  413cf0:	mov	w9, #0x10                  	// #16
  413cf4:	csel	x20, x9, x2, eq  // eq = none
  413cf8:	mov	w9, #0xfe0                 	// #4064
  413cfc:	cmp	x1, #0x0
  413d00:	str	x21, [sp, #16]
  413d04:	csel	x1, x9, x1, eq  // eq = none
  413d08:	orr	w8, w8, #0x1
  413d0c:	sub	x21, x20, #0x1
  413d10:	mov	x19, x0
  413d14:	stp	x4, x5, [x0, #64]
  413d18:	strb	w8, [x0, #80]
  413d1c:	str	x1, [x0]
  413d20:	stp	x21, x3, [x0, #48]
  413d24:	mov	x0, x5
  413d28:	mov	x29, sp
  413d2c:	blr	x3
  413d30:	str	x0, [x19, #8]
  413d34:	cbz	x0, 413d80 <_obstack_begin_1@@Base+0xa0>
  413d38:	ldr	x10, [x19]
  413d3c:	add	x8, x0, x21
  413d40:	neg	x9, x20
  413d44:	add	x8, x8, #0x10
  413d48:	and	x8, x8, x9
  413d4c:	stp	x8, x8, [x19, #16]
  413d50:	add	x8, x0, x10
  413d54:	str	x8, [x0]
  413d58:	str	x8, [x19, #32]
  413d5c:	str	xzr, [x0, #8]
  413d60:	ldrb	w8, [x19, #80]
  413d64:	ldr	x21, [sp, #16]
  413d68:	mov	w0, #0x1                   	// #1
  413d6c:	and	w8, w8, #0xfffffff9
  413d70:	strb	w8, [x19, #80]
  413d74:	ldp	x20, x19, [sp, #32]
  413d78:	ldp	x29, x30, [sp], #48
  413d7c:	ret
  413d80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  413d84:	ldr	x8, [x8, #1408]
  413d88:	blr	x8

0000000000413d8c <_obstack_newchunk@@Base>:
  413d8c:	stp	x29, x30, [sp, #-64]!
  413d90:	str	x23, [sp, #16]
  413d94:	stp	x22, x21, [sp, #32]
  413d98:	stp	x20, x19, [sp, #48]
  413d9c:	ldp	x9, x8, [x0, #16]
  413da0:	ldr	x10, [x0, #48]
  413da4:	ldr	x11, [x0]
  413da8:	mov	x29, sp
  413dac:	sub	x20, x8, x9
  413db0:	adds	x8, x20, x1
  413db4:	lsr	x9, x20, #3
  413db8:	cset	w12, cs  // cs = hs, nlast
  413dbc:	adds	x10, x8, x10
  413dc0:	add	x9, x9, #0x64
  413dc4:	cset	w8, cs  // cs = hs, nlast
  413dc8:	adds	x9, x9, x10
  413dcc:	csel	x9, x10, x9, cs  // cs = hs, nlast
  413dd0:	cmp	x9, x11
  413dd4:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  413dd8:	tbnz	w12, #0, 413ec4 <_obstack_newchunk@@Base+0x138>
  413ddc:	tbnz	w8, #0, 413ec4 <_obstack_newchunk@@Base+0x138>
  413de0:	ldrb	w8, [x0, #80]
  413de4:	ldr	x21, [x0, #8]
  413de8:	mov	x19, x0
  413dec:	tbnz	w8, #0, 413e00 <_obstack_newchunk@@Base+0x74>
  413df0:	ldr	x8, [x19, #56]
  413df4:	mov	x0, x23
  413df8:	blr	x8
  413dfc:	b	413e10 <_obstack_newchunk@@Base+0x84>
  413e00:	ldr	x8, [x19, #56]
  413e04:	ldr	x0, [x19, #72]
  413e08:	mov	x1, x23
  413e0c:	blr	x8
  413e10:	mov	x22, x0
  413e14:	cbz	x0, 413ec4 <_obstack_newchunk@@Base+0x138>
  413e18:	add	x8, x22, x23
  413e1c:	str	x22, [x19, #8]
  413e20:	str	x21, [x22, #8]
  413e24:	str	x8, [x19, #32]
  413e28:	str	x8, [x22]
  413e2c:	ldr	x8, [x19, #48]
  413e30:	ldr	x1, [x19, #16]
  413e34:	mov	x2, x20
  413e38:	add	x9, x22, x8
  413e3c:	add	x9, x9, #0x10
  413e40:	bic	x23, x9, x8
  413e44:	mov	x0, x23
  413e48:	bl	4023c0 <memcpy@plt>
  413e4c:	ldrb	w8, [x19, #80]
  413e50:	tbnz	w8, #1, 413e9c <_obstack_newchunk@@Base+0x110>
  413e54:	ldr	x8, [x19, #48]
  413e58:	ldr	x9, [x19, #16]
  413e5c:	add	x10, x21, x8
  413e60:	add	x10, x10, #0x10
  413e64:	bic	x8, x10, x8
  413e68:	cmp	x9, x8
  413e6c:	b.ne	413e9c <_obstack_newchunk@@Base+0x110>  // b.any
  413e70:	ldr	x8, [x21, #8]
  413e74:	str	x8, [x22, #8]
  413e78:	ldrb	w8, [x19, #80]
  413e7c:	tbnz	w8, #0, 413e90 <_obstack_newchunk@@Base+0x104>
  413e80:	ldr	x8, [x19, #64]
  413e84:	mov	x0, x21
  413e88:	blr	x8
  413e8c:	b	413e9c <_obstack_newchunk@@Base+0x110>
  413e90:	ldp	x8, x0, [x19, #64]
  413e94:	mov	x1, x21
  413e98:	blr	x8
  413e9c:	ldrb	w8, [x19, #80]
  413ea0:	add	x9, x23, x20
  413ea4:	stp	x23, x9, [x19, #16]
  413ea8:	ldr	x23, [sp, #16]
  413eac:	and	w8, w8, #0xfffffffd
  413eb0:	strb	w8, [x19, #80]
  413eb4:	ldp	x20, x19, [sp, #48]
  413eb8:	ldp	x22, x21, [sp, #32]
  413ebc:	ldp	x29, x30, [sp], #64
  413ec0:	ret
  413ec4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  413ec8:	ldr	x8, [x8, #1408]
  413ecc:	blr	x8

0000000000413ed0 <_obstack_allocated_p@@Base>:
  413ed0:	ldr	x8, [x0, #8]
  413ed4:	cbnz	x8, 413ee8 <_obstack_allocated_p@@Base+0x18>
  413ed8:	mov	w0, wzr
  413edc:	ret
  413ee0:	ldr	x8, [x8, #8]
  413ee4:	cbz	x8, 413ed8 <_obstack_allocated_p@@Base+0x8>
  413ee8:	cmp	x8, x1
  413eec:	b.cs	413ee0 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  413ef0:	ldr	x9, [x8]
  413ef4:	cmp	x9, x1
  413ef8:	b.cc	413ee0 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  413efc:	mov	w0, #0x1                   	// #1
  413f00:	ret

0000000000413f04 <_obstack_free@@Base>:
  413f04:	stp	x29, x30, [sp, #-48]!
  413f08:	stp	x20, x19, [sp, #32]
  413f0c:	ldr	x8, [x0, #8]
  413f10:	mov	x20, x1
  413f14:	str	x21, [sp, #16]
  413f18:	mov	x29, sp
  413f1c:	cbz	x8, 413f78 <_obstack_free@@Base+0x74>
  413f20:	mov	x19, x0
  413f24:	b	413f48 <_obstack_free@@Base+0x44>
  413f28:	ldr	x9, [x19, #64]
  413f2c:	mov	x0, x8
  413f30:	blr	x9
  413f34:	ldrb	w8, [x19, #80]
  413f38:	orr	w8, w8, #0x2
  413f3c:	strb	w8, [x19, #80]
  413f40:	mov	x8, x21
  413f44:	cbz	x21, 413f78 <_obstack_free@@Base+0x74>
  413f48:	cmp	x8, x20
  413f4c:	b.cs	413f5c <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  413f50:	ldr	x9, [x8]
  413f54:	cmp	x9, x20
  413f58:	b.cs	413f80 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  413f5c:	ldrb	w9, [x19, #80]
  413f60:	ldr	x21, [x8, #8]
  413f64:	tbz	w9, #0, 413f28 <_obstack_free@@Base+0x24>
  413f68:	ldp	x9, x0, [x19, #64]
  413f6c:	mov	x1, x8
  413f70:	blr	x9
  413f74:	b	413f34 <_obstack_free@@Base+0x30>
  413f78:	cbz	x20, 413f90 <_obstack_free@@Base+0x8c>
  413f7c:	bl	402770 <abort@plt>
  413f80:	stp	x20, x20, [x19, #16]
  413f84:	ldr	x9, [x8]
  413f88:	str	x8, [x19, #8]
  413f8c:	str	x9, [x19, #32]
  413f90:	ldp	x20, x19, [sp, #32]
  413f94:	ldr	x21, [sp, #16]
  413f98:	ldp	x29, x30, [sp], #48
  413f9c:	ret

0000000000413fa0 <_obstack_memory_used@@Base>:
  413fa0:	ldr	x8, [x0, #8]
  413fa4:	cbz	x8, 413fc0 <_obstack_memory_used@@Base+0x20>
  413fa8:	mov	x0, xzr
  413fac:	sub	x10, x0, x8
  413fb0:	ldp	x9, x8, [x8]
  413fb4:	add	x0, x10, x9
  413fb8:	cbnz	x8, 413fac <_obstack_memory_used@@Base+0xc>
  413fbc:	ret
  413fc0:	mov	x0, xzr
  413fc4:	ret
  413fc8:	stp	x29, x30, [sp, #-32]!
  413fcc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  413fd0:	str	x19, [sp, #16]
  413fd4:	ldr	x19, [x8, #1432]
  413fd8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6060>
  413fdc:	add	x1, x1, #0xe26
  413fe0:	mov	w2, #0x5                   	// #5
  413fe4:	mov	x0, xzr
  413fe8:	mov	x29, sp
  413fec:	bl	402970 <dcgettext@plt>
  413ff0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6060>
  413ff4:	mov	x3, x0
  413ff8:	add	x2, x2, #0xb21
  413ffc:	mov	w1, #0x1                   	// #1
  414000:	mov	x0, x19
  414004:	bl	4027e0 <__fprintf_chk@plt>
  414008:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x18060>
  41400c:	ldr	w0, [x8, #1312]
  414010:	bl	402460 <exit@plt>
  414014:	stp	x29, x30, [sp, #-48]!
  414018:	stp	x20, x19, [sp, #32]
  41401c:	mov	x19, x0
  414020:	stp	x22, x21, [sp, #16]
  414024:	mov	x29, sp
  414028:	cbz	x0, 41404c <_obstack_memory_used@@Base+0xac>
  41402c:	mov	x0, x19
  414030:	bl	402430 <strlen@plt>
  414034:	add	x20, x0, #0x1
  414038:	cmp	x20, #0x76
  41403c:	b.ls	414050 <_obstack_memory_used@@Base+0xb0>  // b.plast
  414040:	add	x8, x0, #0x12
  414044:	and	x0, x8, #0xfffffffffffffff8
  414048:	b	414054 <_obstack_memory_used@@Base+0xb4>
  41404c:	mov	x20, xzr
  414050:	mov	w0, #0x80                  	// #128
  414054:	bl	4025f0 <malloc@plt>
  414058:	mov	x21, x0
  41405c:	cbz	x0, 414090 <_obstack_memory_used@@Base+0xf0>
  414060:	cmp	x19, #0x0
  414064:	mov	x22, x21
  414068:	cset	w8, ne  // ne = any
  41406c:	str	xzr, [x21]
  414070:	strb	w8, [x21, #8]
  414074:	strb	wzr, [x22, #9]!
  414078:	cbz	x19, 414090 <_obstack_memory_used@@Base+0xf0>
  41407c:	mov	x0, x22
  414080:	mov	x1, x19
  414084:	mov	x2, x20
  414088:	bl	4023c0 <memcpy@plt>
  41408c:	strb	wzr, [x22, x20]
  414090:	mov	x0, x21
  414094:	ldp	x20, x19, [sp, #32]
  414098:	ldp	x22, x21, [sp, #16]
  41409c:	ldp	x29, x30, [sp], #48
  4140a0:	ret
  4140a4:	stp	x29, x30, [sp, #-32]!
  4140a8:	cmp	x0, #0x2
  4140ac:	str	x19, [sp, #16]
  4140b0:	mov	x29, sp
  4140b4:	b.cc	4140c8 <_obstack_memory_used@@Base+0x128>  // b.lo, b.ul, b.last
  4140b8:	ldr	x19, [x0]
  4140bc:	bl	402840 <free@plt>
  4140c0:	mov	x0, x19
  4140c4:	cbnz	x19, 4140b8 <_obstack_memory_used@@Base+0x118>
  4140c8:	ldr	x19, [sp, #16]
  4140cc:	ldp	x29, x30, [sp], #32
  4140d0:	ret
  4140d4:	stp	x29, x30, [sp, #-80]!
  4140d8:	stp	x22, x21, [sp, #48]
  4140dc:	stp	x20, x19, [sp, #64]
  4140e0:	mov	x19, x2
  4140e4:	mov	x22, x1
  4140e8:	str	x25, [sp, #16]
  4140ec:	stp	x24, x23, [sp, #32]
  4140f0:	mov	x29, sp
  4140f4:	cbz	x0, 414188 <_obstack_memory_used@@Base+0x1e8>
  4140f8:	mov	x21, x0
  4140fc:	bl	414200 <_obstack_memory_used@@Base+0x260>
  414100:	cbz	x0, 4141c4 <_obstack_memory_used@@Base+0x224>
  414104:	mov	x20, x0
  414108:	mov	x0, x22
  41410c:	mov	x1, x19
  414110:	bl	4024b0 <localtime_r@plt>
  414114:	cbz	x0, 4141a8 <_obstack_memory_used@@Base+0x208>
  414118:	mov	x0, x21
  41411c:	mov	x1, x19
  414120:	bl	41433c <_obstack_memory_used@@Base+0x39c>
  414124:	eor	w22, w0, #0x1
  414128:	cmp	x20, #0x1
  41412c:	b.eq	4141b4 <_obstack_memory_used@@Base+0x214>  // b.none
  414130:	bl	4029e0 <__errno_location@plt>
  414134:	ldrb	w8, [x20, #8]
  414138:	ldr	w23, [x0]
  41413c:	mov	x21, x0
  414140:	cbz	w8, 4141dc <_obstack_memory_used@@Base+0x23c>
  414144:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  414148:	add	x1, x20, #0x9
  41414c:	add	x0, x0, #0xf32
  414150:	mov	w2, #0x1                   	// #1
  414154:	bl	4024c0 <setenv@plt>
  414158:	cbz	w0, 4141ec <_obstack_memory_used@@Base+0x24c>
  41415c:	ldr	w23, [x21]
  414160:	mov	w24, wzr
  414164:	cmp	x20, #0x2
  414168:	b.cc	414180 <_obstack_memory_used@@Base+0x1e0>  // b.lo, b.ul, b.last
  41416c:	ldr	x25, [x20]
  414170:	mov	x0, x20
  414174:	bl	402840 <free@plt>
  414178:	mov	x20, x25
  41417c:	cbnz	x25, 41416c <_obstack_memory_used@@Base+0x1cc>
  414180:	str	w23, [x21]
  414184:	b	4141b8 <_obstack_memory_used@@Base+0x218>
  414188:	mov	x0, x22
  41418c:	mov	x1, x19
  414190:	ldp	x20, x19, [sp, #64]
  414194:	ldp	x22, x21, [sp, #48]
  414198:	ldp	x24, x23, [sp, #32]
  41419c:	ldr	x25, [sp, #16]
  4141a0:	ldp	x29, x30, [sp], #80
  4141a4:	b	4026a0 <gmtime_r@plt>
  4141a8:	mov	w22, #0x1                   	// #1
  4141ac:	cmp	x20, #0x1
  4141b0:	b.ne	414130 <_obstack_memory_used@@Base+0x190>  // b.any
  4141b4:	mov	w24, #0x1                   	// #1
  4141b8:	orn	w8, w22, w24
  4141bc:	tst	w8, #0x1
  4141c0:	csel	x0, xzr, x19, ne  // ne = any
  4141c4:	ldp	x20, x19, [sp, #64]
  4141c8:	ldp	x22, x21, [sp, #48]
  4141cc:	ldp	x24, x23, [sp, #32]
  4141d0:	ldr	x25, [sp, #16]
  4141d4:	ldp	x29, x30, [sp], #80
  4141d8:	ret
  4141dc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  4141e0:	add	x0, x0, #0xf32
  4141e4:	bl	4028e0 <unsetenv@plt>
  4141e8:	cbnz	w0, 41415c <_obstack_memory_used@@Base+0x1bc>
  4141ec:	bl	402610 <tzset@plt>
  4141f0:	mov	w24, #0x1                   	// #1
  4141f4:	cmp	x20, #0x2
  4141f8:	b.cs	41416c <_obstack_memory_used@@Base+0x1cc>  // b.hs, b.nlast
  4141fc:	b	414180 <_obstack_memory_used@@Base+0x1e0>
  414200:	stp	x29, x30, [sp, #-80]!
  414204:	stp	x20, x19, [sp, #64]
  414208:	mov	x19, x0
  41420c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  414210:	add	x0, x0, #0xf32
  414214:	str	x25, [sp, #16]
  414218:	stp	x24, x23, [sp, #32]
  41421c:	stp	x22, x21, [sp, #48]
  414220:	mov	x29, sp
  414224:	bl	4029f0 <getenv@plt>
  414228:	ldrb	w24, [x19, #8]
  41422c:	mov	x21, x0
  414230:	cbz	x0, 41426c <_obstack_memory_used@@Base+0x2cc>
  414234:	cbz	w24, 414248 <_obstack_memory_used@@Base+0x2a8>
  414238:	add	x0, x19, #0x9
  41423c:	mov	x1, x21
  414240:	bl	402800 <strcmp@plt>
  414244:	cbz	w0, 414304 <_obstack_memory_used@@Base+0x364>
  414248:	mov	x0, x21
  41424c:	bl	402430 <strlen@plt>
  414250:	add	x22, x0, #0x1
  414254:	cmp	x22, #0x76
  414258:	mov	w25, #0x1                   	// #1
  41425c:	b.ls	414278 <_obstack_memory_used@@Base+0x2d8>  // b.plast
  414260:	add	x8, x0, #0x12
  414264:	and	x0, x8, #0xfffffffffffffff8
  414268:	b	41427c <_obstack_memory_used@@Base+0x2dc>
  41426c:	cbz	w24, 414304 <_obstack_memory_used@@Base+0x364>
  414270:	mov	w25, wzr
  414274:	mov	x22, xzr
  414278:	mov	w0, #0x80                  	// #128
  41427c:	bl	4025f0 <malloc@plt>
  414280:	mov	x20, x0
  414284:	cbz	x0, 414320 <_obstack_memory_used@@Base+0x380>
  414288:	mov	x23, x20
  41428c:	str	xzr, [x20]
  414290:	strb	w25, [x20, #8]
  414294:	strb	wzr, [x23, #9]!
  414298:	cbz	w25, 4142b4 <_obstack_memory_used@@Base+0x314>
  41429c:	mov	x0, x23
  4142a0:	mov	x1, x21
  4142a4:	mov	x2, x22
  4142a8:	bl	4023c0 <memcpy@plt>
  4142ac:	strb	wzr, [x23, x22]
  4142b0:	ldrb	w24, [x19, #8]
  4142b4:	cbz	w24, 41430c <_obstack_memory_used@@Base+0x36c>
  4142b8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  4142bc:	add	x1, x19, #0x9
  4142c0:	add	x0, x0, #0xf32
  4142c4:	mov	w2, #0x1                   	// #1
  4142c8:	bl	4024c0 <setenv@plt>
  4142cc:	cbz	w0, 41431c <_obstack_memory_used@@Base+0x37c>
  4142d0:	bl	4029e0 <__errno_location@plt>
  4142d4:	ldr	w21, [x0]
  4142d8:	mov	x19, x0
  4142dc:	cmp	x20, #0x2
  4142e0:	b.cc	4142f8 <_obstack_memory_used@@Base+0x358>  // b.lo, b.ul, b.last
  4142e4:	ldr	x22, [x20]
  4142e8:	mov	x0, x20
  4142ec:	bl	402840 <free@plt>
  4142f0:	mov	x20, x22
  4142f4:	cbnz	x22, 4142e4 <_obstack_memory_used@@Base+0x344>
  4142f8:	mov	x20, xzr
  4142fc:	str	w21, [x19]
  414300:	b	414320 <_obstack_memory_used@@Base+0x380>
  414304:	mov	w20, #0x1                   	// #1
  414308:	b	414320 <_obstack_memory_used@@Base+0x380>
  41430c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  414310:	add	x0, x0, #0xf32
  414314:	bl	4028e0 <unsetenv@plt>
  414318:	cbnz	w0, 4142d0 <_obstack_memory_used@@Base+0x330>
  41431c:	bl	402610 <tzset@plt>
  414320:	mov	x0, x20
  414324:	ldp	x20, x19, [sp, #64]
  414328:	ldp	x22, x21, [sp, #48]
  41432c:	ldp	x24, x23, [sp, #32]
  414330:	ldr	x25, [sp, #16]
  414334:	ldp	x29, x30, [sp], #80
  414338:	ret
  41433c:	stp	x29, x30, [sp, #-64]!
  414340:	stp	x24, x23, [sp, #16]
  414344:	stp	x22, x21, [sp, #32]
  414348:	stp	x20, x19, [sp, #48]
  41434c:	ldr	x21, [x1, #48]
  414350:	mov	x29, sp
  414354:	cbz	x21, 4143e4 <_obstack_memory_used@@Base+0x444>
  414358:	mov	x19, x1
  41435c:	mov	x20, x0
  414360:	cmp	x21, x1
  414364:	b.cc	414374 <_obstack_memory_used@@Base+0x3d4>  // b.lo, b.ul, b.last
  414368:	add	x8, x19, #0x38
  41436c:	cmp	x21, x8
  414370:	b.cc	4143e4 <_obstack_memory_used@@Base+0x444>  // b.lo, b.ul, b.last
  414374:	ldrb	w8, [x21]
  414378:	cbz	w8, 4143d8 <_obstack_memory_used@@Base+0x438>
  41437c:	add	x22, x20, #0x9
  414380:	mov	x0, x22
  414384:	mov	x1, x21
  414388:	bl	402800 <strcmp@plt>
  41438c:	cbz	w0, 4143e0 <_obstack_memory_used@@Base+0x440>
  414390:	ldrb	w8, [x22]
  414394:	cbnz	w8, 4143ac <_obstack_memory_used@@Base+0x40c>
  414398:	add	x24, x20, #0x9
  41439c:	cmp	x22, x24
  4143a0:	b.ne	414400 <_obstack_memory_used@@Base+0x460>  // b.any
  4143a4:	ldrb	w8, [x20, #8]
  4143a8:	cbz	w8, 4143fc <_obstack_memory_used@@Base+0x45c>
  4143ac:	mov	x0, x22
  4143b0:	bl	402430 <strlen@plt>
  4143b4:	add	x22, x0, x22
  4143b8:	ldrb	w8, [x22, #1]!
  4143bc:	cbnz	w8, 414380 <_obstack_memory_used@@Base+0x3e0>
  4143c0:	ldr	x8, [x20]
  4143c4:	add	x9, x8, #0x9
  4143c8:	cmp	x8, #0x0
  4143cc:	csel	x22, x22, x9, eq  // eq = none
  4143d0:	csel	x20, x20, x8, eq  // eq = none
  4143d4:	b	414380 <_obstack_memory_used@@Base+0x3e0>
  4143d8:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x6060>
  4143dc:	add	x22, x22, #0x2c1
  4143e0:	str	x22, [x19, #48]
  4143e4:	mov	w0, #0x1                   	// #1
  4143e8:	ldp	x20, x19, [sp, #48]
  4143ec:	ldp	x22, x21, [sp, #32]
  4143f0:	ldp	x24, x23, [sp, #16]
  4143f4:	ldp	x29, x30, [sp], #64
  4143f8:	ret
  4143fc:	mov	x24, x22
  414400:	mov	x0, x21
  414404:	bl	402430 <strlen@plt>
  414408:	sub	x8, x22, x24
  41440c:	add	x23, x0, #0x1
  414410:	mvn	x9, x8
  414414:	cmp	x23, x9
  414418:	b.ls	414434 <_obstack_memory_used@@Base+0x494>  // b.plast
  41441c:	bl	4029e0 <__errno_location@plt>
  414420:	mov	x8, x0
  414424:	mov	w9, #0xc                   	// #12
  414428:	mov	w0, wzr
  41442c:	str	w9, [x8]
  414430:	b	4143e8 <_obstack_memory_used@@Base+0x448>
  414434:	add	x8, x23, x8
  414438:	cmp	x8, #0x76
  41443c:	b.hi	414458 <_obstack_memory_used@@Base+0x4b8>  // b.pmore
  414440:	mov	x0, x22
  414444:	mov	x1, x21
  414448:	mov	x2, x23
  41444c:	bl	4023c0 <memcpy@plt>
  414450:	strb	wzr, [x22, x23]
  414454:	b	4143e0 <_obstack_memory_used@@Base+0x440>
  414458:	add	x8, x0, #0x12
  41445c:	cmp	x23, #0x77
  414460:	and	x8, x8, #0xfffffffffffffff8
  414464:	mov	w9, #0x80                  	// #128
  414468:	csel	x0, x9, x8, cc  // cc = lo, ul, last
  41446c:	bl	4025f0 <malloc@plt>
  414470:	cbz	x0, 4144a8 <_obstack_memory_used@@Base+0x508>
  414474:	mov	w8, #0x1                   	// #1
  414478:	add	x22, x0, #0x9
  41447c:	mov	x24, x0
  414480:	str	xzr, [x0]
  414484:	strh	w8, [x0, #8]
  414488:	mov	x0, x22
  41448c:	mov	x1, x21
  414490:	mov	x2, x23
  414494:	bl	4023c0 <memcpy@plt>
  414498:	strb	wzr, [x22, x23]
  41449c:	str	x24, [x20]
  4144a0:	strb	wzr, [x24, #8]
  4144a4:	b	4143e0 <_obstack_memory_used@@Base+0x440>
  4144a8:	str	xzr, [x20]
  4144ac:	b	4143e8 <_obstack_memory_used@@Base+0x448>
  4144b0:	sub	sp, sp, #0x80
  4144b4:	stp	x20, x19, [sp, #112]
  4144b8:	mov	x20, x1
  4144bc:	stp	x29, x30, [sp, #64]
  4144c0:	str	x23, [sp, #80]
  4144c4:	stp	x22, x21, [sp, #96]
  4144c8:	add	x29, sp, #0x40
  4144cc:	cbz	x0, 414510 <_obstack_memory_used@@Base+0x570>
  4144d0:	mov	x21, x0
  4144d4:	bl	414200 <_obstack_memory_used@@Base+0x260>
  4144d8:	cbz	x0, 414610 <_obstack_memory_used@@Base+0x670>
  4144dc:	mov	x19, x0
  4144e0:	mov	x0, x20
  4144e4:	bl	402760 <mktime@plt>
  4144e8:	cmn	x0, #0x1
  4144ec:	str	x0, [x29, #24]
  4144f0:	b.eq	41452c <_obstack_memory_used@@Base+0x58c>  // b.none
  4144f4:	mov	x0, x21
  4144f8:	mov	x1, x20
  4144fc:	bl	41433c <_obstack_memory_used@@Base+0x39c>
  414500:	tbnz	w0, #0, 4145a8 <_obstack_memory_used@@Base+0x608>
  414504:	mov	x8, #0xffffffffffffffff    	// #-1
  414508:	str	x8, [x29, #24]
  41450c:	b	4145a8 <_obstack_memory_used@@Base+0x608>
  414510:	mov	x0, x20
  414514:	ldp	x20, x19, [sp, #112]
  414518:	ldp	x22, x21, [sp, #96]
  41451c:	ldr	x23, [sp, #80]
  414520:	ldp	x29, x30, [sp, #64]
  414524:	add	sp, sp, #0x80
  414528:	b	402a20 <timegm@plt>
  41452c:	add	x0, x29, #0x18
  414530:	mov	x1, sp
  414534:	bl	4024b0 <localtime_r@plt>
  414538:	cbz	x0, 4145a8 <_obstack_memory_used@@Base+0x608>
  41453c:	ldr	q0, [x20]
  414540:	ldr	q1, [sp]
  414544:	ldr	w12, [x20, #32]
  414548:	ldp	w8, w9, [x20, #16]
  41454c:	ldp	w10, w11, [sp, #16]
  414550:	ldr	w13, [sp, #32]
  414554:	eor	v0.16b, v1.16b, v0.16b
  414558:	cmp	w12, #0x0
  41455c:	ext	v1.16b, v0.16b, v0.16b, #8
  414560:	eor	w8, w10, w8
  414564:	eor	w9, w11, w9
  414568:	orr	w10, w13, w12
  41456c:	cset	w11, eq  // eq = none
  414570:	cmp	w13, #0x0
  414574:	orr	v0.16b, v0.16b, v1.16b
  414578:	cset	w12, eq  // eq = none
  41457c:	cmp	w10, #0x0
  414580:	dup	v1.4s, v0.s[1]
  414584:	eor	w10, w11, w12
  414588:	cset	w11, ge  // ge = tcont
  41458c:	orr	v0.16b, v0.16b, v1.16b
  414590:	and	w10, w11, w10
  414594:	fmov	w11, s0
  414598:	orr	w8, w11, w8
  41459c:	orr	w8, w8, w9
  4145a0:	orr	w8, w8, w10
  4145a4:	cbz	w8, 4144f4 <_obstack_memory_used@@Base+0x554>
  4145a8:	cmp	x19, #0x1
  4145ac:	b.eq	414608 <_obstack_memory_used@@Base+0x668>  // b.none
  4145b0:	bl	4029e0 <__errno_location@plt>
  4145b4:	ldrb	w8, [x19, #8]
  4145b8:	ldr	w21, [x0]
  4145bc:	mov	x20, x0
  4145c0:	cbz	w8, 41462c <_obstack_memory_used@@Base+0x68c>
  4145c4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  4145c8:	add	x1, x19, #0x9
  4145cc:	add	x0, x0, #0xf32
  4145d0:	mov	w2, #0x1                   	// #1
  4145d4:	bl	4024c0 <setenv@plt>
  4145d8:	cbz	w0, 41463c <_obstack_memory_used@@Base+0x69c>
  4145dc:	ldr	w21, [x20]
  4145e0:	mov	w22, wzr
  4145e4:	cmp	x19, #0x2
  4145e8:	b.cc	414600 <_obstack_memory_used@@Base+0x660>  // b.lo, b.ul, b.last
  4145ec:	ldr	x23, [x19]
  4145f0:	mov	x0, x19
  4145f4:	bl	402840 <free@plt>
  4145f8:	mov	x19, x23
  4145fc:	cbnz	x23, 4145ec <_obstack_memory_used@@Base+0x64c>
  414600:	str	w21, [x20]
  414604:	tbz	w22, #0, 414610 <_obstack_memory_used@@Base+0x670>
  414608:	ldr	x0, [x29, #24]
  41460c:	b	414614 <_obstack_memory_used@@Base+0x674>
  414610:	mov	x0, #0xffffffffffffffff    	// #-1
  414614:	ldp	x20, x19, [sp, #112]
  414618:	ldp	x22, x21, [sp, #96]
  41461c:	ldr	x23, [sp, #80]
  414620:	ldp	x29, x30, [sp, #64]
  414624:	add	sp, sp, #0x80
  414628:	ret
  41462c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3060>
  414630:	add	x0, x0, #0xf32
  414634:	bl	4028e0 <unsetenv@plt>
  414638:	cbnz	w0, 4145dc <_obstack_memory_used@@Base+0x63c>
  41463c:	bl	402610 <tzset@plt>
  414640:	mov	w22, #0x1                   	// #1
  414644:	cmp	x19, #0x2
  414648:	b.cs	4145ec <_obstack_memory_used@@Base+0x64c>  // b.hs, b.nlast
  41464c:	b	414600 <_obstack_memory_used@@Base+0x660>
  414650:	mov	w8, w0
  414654:	cmp	w0, #0x26
  414658:	mov	w0, wzr
  41465c:	b.hi	41467c <_obstack_memory_used@@Base+0x6dc>  // b.pmore
  414660:	mov	w9, w8
  414664:	mov	w10, #0x1                   	// #1
  414668:	lsl	x9, x10, x9
  41466c:	mov	x10, #0x410000              	// #4259840
  414670:	movk	x10, #0x40, lsl #32
  414674:	tst	x9, x10
  414678:	b.ne	414684 <_obstack_memory_used@@Base+0x6e4>  // b.any
  41467c:	cmp	w8, #0x5f
  414680:	b.ne	414688 <_obstack_memory_used@@Base+0x6e8>  // b.any
  414684:	ret
  414688:	mov	w0, #0x1                   	// #1
  41468c:	ret
  414690:	stp	x29, x30, [sp, #-48]!
  414694:	str	x21, [sp, #16]
  414698:	stp	x20, x19, [sp, #32]
  41469c:	mov	x29, sp
  4146a0:	mov	x20, x0
  4146a4:	bl	402550 <__fpending@plt>
  4146a8:	ldr	w21, [x20]
  4146ac:	mov	x19, x0
  4146b0:	mov	x0, x20
  4146b4:	bl	414790 <_obstack_memory_used@@Base+0x7f0>
  4146b8:	mov	w8, w0
  4146bc:	tbnz	w21, #5, 4146e4 <_obstack_memory_used@@Base+0x744>
  4146c0:	cmp	w8, #0x0
  4146c4:	csetm	w0, ne  // ne = any
  4146c8:	cbnz	x19, 4146f4 <_obstack_memory_used@@Base+0x754>
  4146cc:	cbz	w8, 4146f4 <_obstack_memory_used@@Base+0x754>
  4146d0:	bl	4029e0 <__errno_location@plt>
  4146d4:	ldr	w8, [x0]
  4146d8:	cmp	w8, #0x9
  4146dc:	csetm	w0, ne  // ne = any
  4146e0:	b	4146f4 <_obstack_memory_used@@Base+0x754>
  4146e4:	cbnz	w8, 4146f0 <_obstack_memory_used@@Base+0x750>
  4146e8:	bl	4029e0 <__errno_location@plt>
  4146ec:	str	wzr, [x0]
  4146f0:	mov	w0, #0xffffffff            	// #-1
  4146f4:	ldp	x20, x19, [sp, #32]
  4146f8:	ldr	x21, [sp, #16]
  4146fc:	ldp	x29, x30, [sp], #48
  414700:	ret
  414704:	stp	x29, x30, [sp, #-16]!
  414708:	mov	x29, sp
  41470c:	bl	40c5ac <__fxstatat@plt+0x9b5c>
  414710:	cbz	x0, 41471c <_obstack_memory_used@@Base+0x77c>
  414714:	ldp	x29, x30, [sp], #16
  414718:	ret
  41471c:	bl	413124 <__fxstatat@plt+0x106d4>
  414720:	ldrb	w9, [x0]
  414724:	cbz	w9, 414744 <_obstack_memory_used@@Base+0x7a4>
  414728:	mov	x8, xzr
  41472c:	add	x10, x0, #0x1
  414730:	ror	x8, x8, #55
  414734:	add	x8, x8, w9, uxtb
  414738:	ldrb	w9, [x10], #1
  41473c:	cbnz	w9, 414730 <_obstack_memory_used@@Base+0x790>
  414740:	b	414748 <_obstack_memory_used@@Base+0x7a8>
  414744:	mov	x8, xzr
  414748:	udiv	x9, x8, x1
  41474c:	msub	x0, x9, x1, x8
  414750:	ret
  414754:	stp	x29, x30, [sp, #-16]!
  414758:	mov	w0, #0xe                   	// #14
  41475c:	mov	x29, sp
  414760:	bl	4025e0 <nl_langinfo@plt>
  414764:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x6060>
  414768:	add	x8, x8, #0x2c1
  41476c:	cmp	x0, #0x0
  414770:	csel	x8, x8, x0, eq  // eq = none
  414774:	ldrb	w9, [x8]
  414778:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x6060>
  41477c:	add	x10, x10, #0xffd
  414780:	cmp	w9, #0x0
  414784:	csel	x0, x10, x8, eq  // eq = none
  414788:	ldp	x29, x30, [sp], #16
  41478c:	ret
  414790:	stp	x29, x30, [sp, #-48]!
  414794:	str	x21, [sp, #16]
  414798:	stp	x20, x19, [sp, #32]
  41479c:	mov	x29, sp
  4147a0:	mov	x19, x0
  4147a4:	bl	402590 <fileno@plt>
  4147a8:	tbnz	w0, #31, 414810 <_obstack_memory_used@@Base+0x870>
  4147ac:	mov	x0, x19
  4147b0:	bl	4029a0 <__freading@plt>
  4147b4:	cbz	w0, 4147d4 <_obstack_memory_used@@Base+0x834>
  4147b8:	mov	x0, x19
  4147bc:	bl	402590 <fileno@plt>
  4147c0:	mov	w2, #0x1                   	// #1
  4147c4:	mov	x1, xzr
  4147c8:	bl	402540 <lseek@plt>
  4147cc:	cmn	x0, #0x1
  4147d0:	b.eq	414810 <_obstack_memory_used@@Base+0x870>  // b.none
  4147d4:	mov	x0, x19
  4147d8:	bl	414824 <_obstack_memory_used@@Base+0x884>
  4147dc:	cbz	w0, 414810 <_obstack_memory_used@@Base+0x870>
  4147e0:	bl	4029e0 <__errno_location@plt>
  4147e4:	ldr	w21, [x0]
  4147e8:	mov	x20, x0
  4147ec:	mov	x0, x19
  4147f0:	bl	4025d0 <fclose@plt>
  4147f4:	cbz	w21, 414800 <_obstack_memory_used@@Base+0x860>
  4147f8:	mov	w0, #0xffffffff            	// #-1
  4147fc:	str	w21, [x20]
  414800:	ldp	x20, x19, [sp, #32]
  414804:	ldr	x21, [sp, #16]
  414808:	ldp	x29, x30, [sp], #48
  41480c:	ret
  414810:	mov	x0, x19
  414814:	ldp	x20, x19, [sp, #32]
  414818:	ldr	x21, [sp, #16]
  41481c:	ldp	x29, x30, [sp], #48
  414820:	b	4025d0 <fclose@plt>
  414824:	stp	x29, x30, [sp, #-32]!
  414828:	str	x19, [sp, #16]
  41482c:	mov	x19, x0
  414830:	mov	x29, sp
  414834:	cbz	x0, 41485c <_obstack_memory_used@@Base+0x8bc>
  414838:	mov	x0, x19
  41483c:	bl	4029a0 <__freading@plt>
  414840:	cbz	w0, 41485c <_obstack_memory_used@@Base+0x8bc>
  414844:	ldrb	w8, [x19, #1]
  414848:	tbz	w8, #0, 41485c <_obstack_memory_used@@Base+0x8bc>
  41484c:	mov	w2, #0x1                   	// #1
  414850:	mov	x0, x19
  414854:	mov	x1, xzr
  414858:	bl	41486c <_obstack_memory_used@@Base+0x8cc>
  41485c:	mov	x0, x19
  414860:	ldr	x19, [sp, #16]
  414864:	ldp	x29, x30, [sp], #32
  414868:	b	4028b0 <fflush@plt>
  41486c:	stp	x29, x30, [sp, #-48]!
  414870:	str	x21, [sp, #16]
  414874:	stp	x20, x19, [sp, #32]
  414878:	ldp	x9, x8, [x0, #8]
  41487c:	mov	w20, w2
  414880:	mov	x19, x0
  414884:	mov	x21, x1
  414888:	cmp	x8, x9
  41488c:	mov	x29, sp
  414890:	b.ne	4148a8 <_obstack_memory_used@@Base+0x908>  // b.any
  414894:	ldp	x9, x8, [x19, #32]
  414898:	cmp	x8, x9
  41489c:	b.ne	4148a8 <_obstack_memory_used@@Base+0x908>  // b.any
  4148a0:	ldr	x8, [x19, #72]
  4148a4:	cbz	x8, 4148c4 <_obstack_memory_used@@Base+0x924>
  4148a8:	mov	x0, x19
  4148ac:	mov	x1, x21
  4148b0:	mov	w2, w20
  4148b4:	ldp	x20, x19, [sp, #32]
  4148b8:	ldr	x21, [sp, #16]
  4148bc:	ldp	x29, x30, [sp], #48
  4148c0:	b	402830 <fseeko@plt>
  4148c4:	mov	x0, x19
  4148c8:	bl	402590 <fileno@plt>
  4148cc:	mov	x1, x21
  4148d0:	mov	w2, w20
  4148d4:	bl	402540 <lseek@plt>
  4148d8:	cmn	x0, #0x1
  4148dc:	b.eq	4148f8 <_obstack_memory_used@@Base+0x958>  // b.none
  4148e0:	ldr	w9, [x19]
  4148e4:	mov	x8, x0
  4148e8:	mov	w0, wzr
  4148ec:	str	x8, [x19, #144]
  4148f0:	and	w9, w9, #0xffffffef
  4148f4:	str	w9, [x19]
  4148f8:	ldp	x20, x19, [sp, #32]
  4148fc:	ldr	x21, [sp, #16]
  414900:	ldp	x29, x30, [sp], #48
  414904:	ret
  414908:	stp	x29, x30, [sp, #-48]!
  41490c:	mov	x29, sp
  414910:	str	q0, [sp, #16]
  414914:	str	q1, [sp, #32]
  414918:	ldp	x2, x0, [sp, #16]
  41491c:	ldp	x5, x3, [sp, #32]
  414920:	mrs	x10, fpcr
  414924:	lsr	x1, x0, #63
  414928:	ubfx	x6, x0, #0, #48
  41492c:	and	w13, w1, #0xff
  414930:	mov	x14, x1
  414934:	ubfx	x7, x0, #48, #15
  414938:	cbz	w7, 414d58 <_obstack_memory_used@@Base+0xdb8>
  41493c:	mov	w4, #0x7fff                	// #32767
  414940:	cmp	w7, w4
  414944:	b.eq	414da0 <_obstack_memory_used@@Base+0xe00>  // b.none
  414948:	and	x7, x7, #0xffff
  41494c:	extr	x6, x6, x2, #61
  414950:	mov	x15, #0xffffffffffffc001    	// #-16383
  414954:	orr	x4, x6, #0x8000000000000
  414958:	add	x7, x7, x15
  41495c:	lsl	x2, x2, #3
  414960:	mov	x1, #0x0                   	// #0
  414964:	mov	x16, #0x0                   	// #0
  414968:	mov	w0, #0x0                   	// #0
  41496c:	lsr	x8, x3, #63
  414970:	ubfx	x6, x3, #0, #48
  414974:	and	w15, w8, #0xff
  414978:	ubfx	x9, x3, #48, #15
  41497c:	cbz	w9, 414d14 <_obstack_memory_used@@Base+0xd74>
  414980:	mov	w11, #0x7fff                	// #32767
  414984:	cmp	w9, w11
  414988:	b.eq	414a4c <_obstack_memory_used@@Base+0xaac>  // b.none
  41498c:	and	x9, x9, #0xffff
  414990:	extr	x6, x6, x5, #61
  414994:	mov	x12, #0xffffffffffffc001    	// #-16383
  414998:	orr	x6, x6, #0x8000000000000
  41499c:	add	x9, x9, x12
  4149a0:	lsl	x5, x5, #3
  4149a4:	sub	x7, x7, x9
  4149a8:	mov	x9, #0x0                   	// #0
  4149ac:	eor	w11, w13, w15
  4149b0:	cmp	x1, #0x9
  4149b4:	and	x3, x11, #0xff
  4149b8:	mov	x12, x3
  4149bc:	b.gt	414cec <_obstack_memory_used@@Base+0xd4c>
  4149c0:	cmp	x1, #0x7
  4149c4:	b.gt	414eac <_obstack_memory_used@@Base+0xf0c>
  4149c8:	cmp	x1, #0x3
  4149cc:	b.eq	4149e8 <_obstack_memory_used@@Base+0xa48>  // b.none
  4149d0:	b.le	414cbc <_obstack_memory_used@@Base+0xd1c>
  4149d4:	cmp	x1, #0x5
  4149d8:	b.eq	414cfc <_obstack_memory_used@@Base+0xd5c>  // b.none
  4149dc:	b.le	414ae0 <_obstack_memory_used@@Base+0xb40>
  4149e0:	cmp	x1, #0x6
  4149e4:	b.eq	414ab0 <_obstack_memory_used@@Base+0xb10>  // b.none
  4149e8:	cmp	x9, #0x1
  4149ec:	b.eq	414e30 <_obstack_memory_used@@Base+0xe90>  // b.none
  4149f0:	cbz	x9, 414a04 <_obstack_memory_used@@Base+0xa64>
  4149f4:	cmp	x9, #0x2
  4149f8:	b.eq	415034 <_obstack_memory_used@@Base+0x1094>  // b.none
  4149fc:	cmp	x9, #0x3
  414a00:	b.eq	41501c <_obstack_memory_used@@Base+0x107c>  // b.none
  414a04:	mov	x1, #0x3fff                	// #16383
  414a08:	mov	x12, x8
  414a0c:	add	x3, x7, x1
  414a10:	cmp	x3, #0x0
  414a14:	b.le	414ef0 <_obstack_memory_used@@Base+0xf50>
  414a18:	tst	x5, #0x7
  414a1c:	b.ne	414e60 <_obstack_memory_used@@Base+0xec0>  // b.any
  414a20:	and	w11, w12, #0x1
  414a24:	tbz	x6, #52, 414a30 <_obstack_memory_used@@Base+0xa90>
  414a28:	and	x6, x6, #0xffefffffffffffff
  414a2c:	add	x3, x7, #0x4, lsl #12
  414a30:	mov	x1, #0x7ffe                	// #32766
  414a34:	cmp	x3, x1
  414a38:	b.gt	414fd8 <_obstack_memory_used@@Base+0x1038>
  414a3c:	and	w1, w3, #0x7fff
  414a40:	extr	x2, x6, x5, #3
  414a44:	ubfx	x6, x6, #3, #48
  414a48:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  414a4c:	mov	x9, #0xffffffffffff8001    	// #-32767
  414a50:	orr	x3, x6, x5
  414a54:	add	x7, x7, x9
  414a58:	cbz	x3, 414dd4 <_obstack_memory_used@@Base+0xe34>
  414a5c:	tst	x6, #0x800000000000
  414a60:	orr	x1, x1, #0x3
  414a64:	csinc	w0, w0, wzr, ne  // ne = any
  414a68:	mov	x9, #0x3                   	// #3
  414a6c:	eor	w11, w13, w15
  414a70:	cmp	x1, #0x9
  414a74:	and	x3, x11, #0xff
  414a78:	mov	x12, x3
  414a7c:	b.le	4149c0 <_obstack_memory_used@@Base+0xa20>
  414a80:	cmp	x1, #0xf
  414a84:	b.ne	414cec <_obstack_memory_used@@Base+0xd4c>  // b.any
  414a88:	tbz	x4, #47, 414e98 <_obstack_memory_used@@Base+0xef8>
  414a8c:	tbnz	x6, #47, 414e98 <_obstack_memory_used@@Base+0xef8>
  414a90:	orr	x6, x6, #0x800000000000
  414a94:	mov	w11, w15
  414a98:	and	x6, x6, #0xffffffffffff
  414a9c:	mov	x2, x5
  414aa0:	mov	w1, #0x7fff                	// #32767
  414aa4:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  414aa8:	cmp	x1, #0x2
  414aac:	b.ne	414ae8 <_obstack_memory_used@@Base+0xb48>  // b.any
  414ab0:	mov	w1, #0x0                   	// #0
  414ab4:	mov	x6, #0x0                   	// #0
  414ab8:	mov	x2, #0x0                   	// #0
  414abc:	mov	x5, #0x0                   	// #0
  414ac0:	orr	w1, w1, w11, lsl #15
  414ac4:	bfxil	x5, x6, #0, #48
  414ac8:	fmov	d0, x2
  414acc:	bfi	x5, x1, #48, #16
  414ad0:	fmov	v0.d[1], x5
  414ad4:	cbnz	w0, 414cdc <_obstack_memory_used@@Base+0xd3c>
  414ad8:	ldp	x29, x30, [sp], #48
  414adc:	ret
  414ae0:	cmp	x1, #0x4
  414ae4:	b.eq	414ab0 <_obstack_memory_used@@Base+0xb10>  // b.none
  414ae8:	cmp	x4, x6
  414aec:	b.ls	414e44 <_obstack_memory_used@@Base+0xea4>  // b.plast
  414af0:	lsr	x3, x4, #1
  414af4:	extr	x8, x4, x2, #1
  414af8:	lsl	x2, x2, #63
  414afc:	ubfx	x14, x6, #20, #32
  414b00:	extr	x9, x6, x5, #52
  414b04:	lsl	x13, x5, #12
  414b08:	and	x15, x9, #0xffffffff
  414b0c:	udiv	x5, x3, x14
  414b10:	msub	x3, x5, x14, x3
  414b14:	mul	x1, x15, x5
  414b18:	extr	x3, x3, x8, #32
  414b1c:	cmp	x1, x3
  414b20:	b.ls	414b34 <_obstack_memory_used@@Base+0xb94>  // b.plast
  414b24:	adds	x3, x9, x3
  414b28:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  414b2c:	b.hi	415114 <_obstack_memory_used@@Base+0x1174>  // b.pmore
  414b30:	sub	x5, x5, #0x1
  414b34:	sub	x3, x3, x1
  414b38:	mov	x4, x8
  414b3c:	udiv	x1, x3, x14
  414b40:	msub	x3, x1, x14, x3
  414b44:	mul	x6, x15, x1
  414b48:	bfi	x4, x3, #32, #32
  414b4c:	cmp	x6, x4
  414b50:	b.ls	414b64 <_obstack_memory_used@@Base+0xbc4>  // b.plast
  414b54:	adds	x4, x9, x4
  414b58:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  414b5c:	b.hi	415108 <_obstack_memory_used@@Base+0x1168>  // b.pmore
  414b60:	sub	x1, x1, #0x1
  414b64:	orr	x8, x1, x5, lsl #32
  414b68:	and	x17, x13, #0xffffffff
  414b6c:	and	x1, x8, #0xffffffff
  414b70:	lsr	x16, x13, #32
  414b74:	lsr	x5, x8, #32
  414b78:	sub	x4, x4, x6
  414b7c:	mov	x18, #0x100000000           	// #4294967296
  414b80:	mul	x3, x1, x17
  414b84:	mul	x30, x5, x17
  414b88:	madd	x6, x16, x1, x30
  414b8c:	and	x1, x3, #0xffffffff
  414b90:	mul	x5, x5, x16
  414b94:	add	x3, x6, x3, lsr #32
  414b98:	add	x6, x5, x18
  414b9c:	cmp	x30, x3
  414ba0:	csel	x5, x6, x5, hi  // hi = pmore
  414ba4:	add	x1, x1, x3, lsl #32
  414ba8:	add	x5, x5, x3, lsr #32
  414bac:	cmp	x4, x5
  414bb0:	b.cc	414ebc <_obstack_memory_used@@Base+0xf1c>  // b.lo, b.ul, b.last
  414bb4:	ccmp	x2, x1, #0x2, eq  // eq = none
  414bb8:	mov	x6, x8
  414bbc:	b.cc	414ebc <_obstack_memory_used@@Base+0xf1c>  // b.lo, b.ul, b.last
  414bc0:	subs	x8, x2, x1
  414bc4:	mov	x3, #0x3fff                	// #16383
  414bc8:	cmp	x2, x1
  414bcc:	add	x3, x7, x3
  414bd0:	sbc	x4, x4, x5
  414bd4:	cmp	x9, x4
  414bd8:	b.eq	415120 <_obstack_memory_used@@Base+0x1180>  // b.none
  414bdc:	udiv	x5, x4, x14
  414be0:	msub	x4, x5, x14, x4
  414be4:	mul	x2, x15, x5
  414be8:	extr	x1, x4, x8, #32
  414bec:	cmp	x2, x1
  414bf0:	b.ls	414c04 <_obstack_memory_used@@Base+0xc64>  // b.plast
  414bf4:	adds	x1, x9, x1
  414bf8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  414bfc:	b.hi	4151d8 <_obstack_memory_used@@Base+0x1238>  // b.pmore
  414c00:	sub	x5, x5, #0x1
  414c04:	sub	x1, x1, x2
  414c08:	udiv	x2, x1, x14
  414c0c:	msub	x1, x2, x14, x1
  414c10:	mul	x15, x15, x2
  414c14:	bfi	x8, x1, #32, #32
  414c18:	mov	x1, x8
  414c1c:	cmp	x15, x8
  414c20:	b.ls	414c34 <_obstack_memory_used@@Base+0xc94>  // b.plast
  414c24:	adds	x1, x9, x8
  414c28:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  414c2c:	b.hi	4151e4 <_obstack_memory_used@@Base+0x1244>  // b.pmore
  414c30:	sub	x2, x2, #0x1
  414c34:	orr	x5, x2, x5, lsl #32
  414c38:	mov	x11, #0x100000000           	// #4294967296
  414c3c:	and	x4, x5, #0xffffffff
  414c40:	sub	x1, x1, x15
  414c44:	lsr	x14, x5, #32
  414c48:	mul	x2, x17, x4
  414c4c:	mul	x17, x14, x17
  414c50:	madd	x4, x16, x4, x17
  414c54:	and	x8, x2, #0xffffffff
  414c58:	mul	x16, x16, x14
  414c5c:	add	x2, x4, x2, lsr #32
  414c60:	add	x4, x16, x11
  414c64:	cmp	x17, x2
  414c68:	csel	x16, x4, x16, hi  // hi = pmore
  414c6c:	add	x4, x8, x2, lsl #32
  414c70:	add	x16, x16, x2, lsr #32
  414c74:	cmp	x1, x16
  414c78:	b.cs	415058 <_obstack_memory_used@@Base+0x10b8>  // b.hs, b.nlast
  414c7c:	adds	x2, x9, x1
  414c80:	sub	x8, x5, #0x1
  414c84:	mov	x1, x2
  414c88:	b.cs	414c9c <_obstack_memory_used@@Base+0xcfc>  // b.hs, b.nlast
  414c8c:	cmp	x2, x16
  414c90:	b.cc	415158 <_obstack_memory_used@@Base+0x11b8>  // b.lo, b.ul, b.last
  414c94:	ccmp	x13, x4, #0x2, eq  // eq = none
  414c98:	b.cc	415158 <_obstack_memory_used@@Base+0x11b8>  // b.lo, b.ul, b.last
  414c9c:	cmp	x13, x4
  414ca0:	mov	x5, x8
  414ca4:	cset	w2, ne  // ne = any
  414ca8:	cmp	w2, #0x0
  414cac:	orr	x2, x5, #0x1
  414cb0:	ccmp	x1, x16, #0x0, eq  // eq = none
  414cb4:	csel	x5, x2, x5, ne  // ne = any
  414cb8:	b	414a10 <_obstack_memory_used@@Base+0xa70>
  414cbc:	cmp	x1, #0x1
  414cc0:	b.ne	414aa8 <_obstack_memory_used@@Base+0xb08>  // b.any
  414cc4:	mov	x4, #0x0                   	// #0
  414cc8:	fmov	d0, x4
  414ccc:	lsl	x3, x3, #63
  414cd0:	orr	w0, w0, #0x2
  414cd4:	orr	x5, x3, #0x7fff000000000000
  414cd8:	fmov	v0.d[1], x5
  414cdc:	str	q0, [sp, #16]
  414ce0:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  414ce4:	ldr	q0, [sp, #16]
  414ce8:	b	414ad8 <_obstack_memory_used@@Base+0xb38>
  414cec:	cmp	x1, #0xb
  414cf0:	b.gt	414dc0 <_obstack_memory_used@@Base+0xe20>
  414cf4:	cmp	x1, #0xa
  414cf8:	b.ne	4149e8 <_obstack_memory_used@@Base+0xa48>  // b.any
  414cfc:	mov	w11, #0x0                   	// #0
  414d00:	mov	x6, #0xffffffffffff        	// #281474976710655
  414d04:	mov	x2, #0xffffffffffffffff    	// #-1
  414d08:	mov	w0, #0x1                   	// #1
  414d0c:	mov	w1, #0x7fff                	// #32767
  414d10:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  414d14:	orr	x3, x6, x5
  414d18:	cbz	x3, 414e00 <_obstack_memory_used@@Base+0xe60>
  414d1c:	cbz	x6, 414fb4 <_obstack_memory_used@@Base+0x1014>
  414d20:	clz	x3, x6
  414d24:	sub	x9, x3, #0xf
  414d28:	add	w12, w9, #0x3
  414d2c:	mov	w11, #0x3d                  	// #61
  414d30:	sub	w9, w11, w9
  414d34:	lsl	x6, x6, x12
  414d38:	lsr	x9, x5, x9
  414d3c:	orr	x6, x9, x6
  414d40:	lsl	x5, x5, x12
  414d44:	add	x7, x3, x7
  414d48:	mov	x11, #0x3fef                	// #16367
  414d4c:	mov	x9, #0x0                   	// #0
  414d50:	add	x7, x7, x11
  414d54:	b	4149ac <_obstack_memory_used@@Base+0xa0c>
  414d58:	orr	x4, x6, x2
  414d5c:	cbz	x4, 414de8 <_obstack_memory_used@@Base+0xe48>
  414d60:	cbz	x6, 414f90 <_obstack_memory_used@@Base+0xff0>
  414d64:	clz	x0, x6
  414d68:	sub	x4, x0, #0xf
  414d6c:	add	w7, w4, #0x3
  414d70:	mov	w1, #0x3d                  	// #61
  414d74:	sub	w4, w1, w4
  414d78:	lsl	x6, x6, x7
  414d7c:	lsr	x4, x2, x4
  414d80:	orr	x4, x4, x6
  414d84:	lsl	x2, x2, x7
  414d88:	mov	x7, #0xffffffffffffc011    	// #-16367
  414d8c:	mov	x1, #0x0                   	// #0
  414d90:	sub	x7, x7, x0
  414d94:	mov	x16, #0x0                   	// #0
  414d98:	mov	w0, #0x0                   	// #0
  414d9c:	b	41496c <_obstack_memory_used@@Base+0x9cc>
  414da0:	orr	x4, x6, x2
  414da4:	cbnz	x4, 414e14 <_obstack_memory_used@@Base+0xe74>
  414da8:	mov	x2, #0x0                   	// #0
  414dac:	mov	x1, #0x8                   	// #8
  414db0:	mov	x7, #0x7fff                	// #32767
  414db4:	mov	x16, #0x2                   	// #2
  414db8:	mov	w0, #0x0                   	// #0
  414dbc:	b	41496c <_obstack_memory_used@@Base+0x9cc>
  414dc0:	mov	x6, x4
  414dc4:	mov	x5, x2
  414dc8:	mov	x8, x14
  414dcc:	mov	x9, x16
  414dd0:	b	4149e8 <_obstack_memory_used@@Base+0xa48>
  414dd4:	orr	x1, x1, #0x2
  414dd8:	mov	x6, #0x0                   	// #0
  414ddc:	mov	x5, #0x0                   	// #0
  414de0:	mov	x9, #0x2                   	// #2
  414de4:	b	414a6c <_obstack_memory_used@@Base+0xacc>
  414de8:	mov	x2, #0x0                   	// #0
  414dec:	mov	x1, #0x4                   	// #4
  414df0:	mov	x7, #0x0                   	// #0
  414df4:	mov	x16, #0x1                   	// #1
  414df8:	mov	w0, #0x0                   	// #0
  414dfc:	b	41496c <_obstack_memory_used@@Base+0x9cc>
  414e00:	orr	x1, x1, #0x1
  414e04:	mov	x6, #0x0                   	// #0
  414e08:	mov	x5, #0x0                   	// #0
  414e0c:	mov	x9, #0x1                   	// #1
  414e10:	b	4149ac <_obstack_memory_used@@Base+0xa0c>
  414e14:	lsr	x0, x6, #47
  414e18:	mov	x4, x6
  414e1c:	eor	w0, w0, #0x1
  414e20:	mov	x1, #0xc                   	// #12
  414e24:	mov	x7, #0x7fff                	// #32767
  414e28:	mov	x16, #0x3                   	// #3
  414e2c:	b	41496c <_obstack_memory_used@@Base+0x9cc>
  414e30:	mov	w11, w8
  414e34:	mov	w1, #0x0                   	// #0
  414e38:	mov	x6, #0x0                   	// #0
  414e3c:	mov	x2, #0x0                   	// #0
  414e40:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  414e44:	ccmp	x5, x2, #0x2, eq  // eq = none
  414e48:	b.ls	414af0 <_obstack_memory_used@@Base+0xb50>  // b.plast
  414e4c:	mov	x8, x2
  414e50:	sub	x7, x7, #0x1
  414e54:	mov	x3, x4
  414e58:	mov	x2, #0x0                   	// #0
  414e5c:	b	414afc <_obstack_memory_used@@Base+0xb5c>
  414e60:	and	x1, x10, #0xc00000
  414e64:	orr	w0, w0, #0x10
  414e68:	cmp	x1, #0x400, lsl #12
  414e6c:	b.eq	4151c0 <_obstack_memory_used@@Base+0x1220>  // b.none
  414e70:	cmp	x1, #0x800, lsl #12
  414e74:	b.eq	4150d4 <_obstack_memory_used@@Base+0x1134>  // b.none
  414e78:	cbnz	x1, 414a20 <_obstack_memory_used@@Base+0xa80>
  414e7c:	and	x1, x5, #0xf
  414e80:	and	w11, w12, #0x1
  414e84:	cmp	x1, #0x4
  414e88:	b.eq	414a24 <_obstack_memory_used@@Base+0xa84>  // b.none
  414e8c:	adds	x5, x5, #0x4
  414e90:	cinc	x6, x6, cs  // cs = hs, nlast
  414e94:	b	414a24 <_obstack_memory_used@@Base+0xa84>
  414e98:	orr	x6, x4, #0x800000000000
  414e9c:	mov	w11, w13
  414ea0:	and	x6, x6, #0xffffffffffff
  414ea4:	mov	w1, #0x7fff                	// #32767
  414ea8:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  414eac:	mov	w1, #0x7fff                	// #32767
  414eb0:	mov	x6, #0x0                   	// #0
  414eb4:	mov	x2, #0x0                   	// #0
  414eb8:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  414ebc:	adds	x3, x2, x13
  414ec0:	sub	x6, x8, #0x1
  414ec4:	adc	x4, x4, x9
  414ec8:	cset	x18, cs  // cs = hs, nlast
  414ecc:	mov	x2, x3
  414ed0:	cmp	x9, x4
  414ed4:	b.cs	415048 <_obstack_memory_used@@Base+0x10a8>  // b.hs, b.nlast
  414ed8:	cmp	x5, x4
  414edc:	b.ls	415070 <_obstack_memory_used@@Base+0x10d0>  // b.plast
  414ee0:	adds	x2, x13, x3
  414ee4:	sub	x6, x8, #0x2
  414ee8:	adc	x4, x4, x9
  414eec:	b	414bc0 <_obstack_memory_used@@Base+0xc20>
  414ef0:	mov	x1, #0x1                   	// #1
  414ef4:	sub	x1, x1, x3
  414ef8:	cmp	x1, #0x74
  414efc:	and	w11, w12, #0x1
  414f00:	b.le	414f1c <_obstack_memory_used@@Base+0xf7c>
  414f04:	orr	x2, x5, x6
  414f08:	cbnz	x2, 41513c <_obstack_memory_used@@Base+0x119c>
  414f0c:	orr	w0, w0, #0x8
  414f10:	mov	w1, #0x0                   	// #0
  414f14:	mov	x6, #0x0                   	// #0
  414f18:	b	415000 <_obstack_memory_used@@Base+0x1060>
  414f1c:	cmp	x1, #0x3f
  414f20:	b.le	41507c <_obstack_memory_used@@Base+0x10dc>
  414f24:	mov	w2, #0x80                  	// #128
  414f28:	sub	w2, w2, w1
  414f2c:	cmp	x1, #0x40
  414f30:	sub	w1, w1, #0x40
  414f34:	lsl	x2, x6, x2
  414f38:	orr	x2, x5, x2
  414f3c:	csel	x5, x2, x5, ne  // ne = any
  414f40:	lsr	x6, x6, x1
  414f44:	cmp	x5, #0x0
  414f48:	cset	x2, ne  // ne = any
  414f4c:	orr	x2, x2, x6
  414f50:	ands	x6, x2, #0x7
  414f54:	b.eq	4150b0 <_obstack_memory_used@@Base+0x1110>  // b.none
  414f58:	mov	x6, #0x0                   	// #0
  414f5c:	and	x10, x10, #0xc00000
  414f60:	orr	w0, w0, #0x10
  414f64:	cmp	x10, #0x400, lsl #12
  414f68:	b.eq	4151fc <_obstack_memory_used@@Base+0x125c>  // b.none
  414f6c:	cmp	x10, #0x800, lsl #12
  414f70:	b.eq	415210 <_obstack_memory_used@@Base+0x1270>  // b.none
  414f74:	cbz	x10, 415178 <_obstack_memory_used@@Base+0x11d8>
  414f78:	tbnz	x6, #51, 415190 <_obstack_memory_used@@Base+0x11f0>
  414f7c:	orr	w0, w0, #0x8
  414f80:	extr	x2, x6, x2, #3
  414f84:	mov	w1, #0x0                   	// #0
  414f88:	ubfx	x6, x6, #3, #48
  414f8c:	b	415000 <_obstack_memory_used@@Base+0x1060>
  414f90:	clz	x7, x2
  414f94:	add	x4, x7, #0x31
  414f98:	add	x0, x7, #0x40
  414f9c:	cmp	x4, #0x3c
  414fa0:	b.le	414d6c <_obstack_memory_used@@Base+0xdcc>
  414fa4:	sub	w4, w4, #0x3d
  414fa8:	lsl	x4, x2, x4
  414fac:	mov	x2, #0x0                   	// #0
  414fb0:	b	414d88 <_obstack_memory_used@@Base+0xde8>
  414fb4:	clz	x3, x5
  414fb8:	add	x9, x3, #0x31
  414fbc:	add	x3, x3, #0x40
  414fc0:	cmp	x9, #0x3c
  414fc4:	b.le	414d28 <_obstack_memory_used@@Base+0xd88>
  414fc8:	sub	w6, w9, #0x3d
  414fcc:	lsl	x6, x5, x6
  414fd0:	mov	x5, #0x0                   	// #0
  414fd4:	b	414d44 <_obstack_memory_used@@Base+0xda4>
  414fd8:	and	x2, x10, #0xc00000
  414fdc:	cmp	x2, #0x400, lsl #12
  414fe0:	b.eq	4151a4 <_obstack_memory_used@@Base+0x1204>  // b.none
  414fe4:	cmp	x2, #0x800, lsl #12
  414fe8:	b.eq	4150ec <_obstack_memory_used@@Base+0x114c>  // b.none
  414fec:	cbz	x2, 4150c8 <_obstack_memory_used@@Base+0x1128>
  414ff0:	mov	x6, #0xffffffffffff        	// #281474976710655
  414ff4:	mov	x2, #0xffffffffffffffff    	// #-1
  414ff8:	mov	w3, #0x14                  	// #20
  414ffc:	orr	w0, w0, w3
  415000:	mov	x5, #0x0                   	// #0
  415004:	orr	w1, w1, w11, lsl #15
  415008:	bfxil	x5, x6, #0, #48
  41500c:	fmov	d0, x2
  415010:	bfi	x5, x1, #48, #16
  415014:	fmov	v0.d[1], x5
  415018:	b	414cdc <_obstack_memory_used@@Base+0xd3c>
  41501c:	orr	x6, x6, #0x800000000000
  415020:	mov	w11, w8
  415024:	and	x6, x6, #0xffffffffffff
  415028:	mov	x2, x5
  41502c:	mov	w1, #0x7fff                	// #32767
  415030:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  415034:	mov	w11, w8
  415038:	mov	w1, #0x7fff                	// #32767
  41503c:	mov	x6, #0x0                   	// #0
  415040:	mov	x2, #0x0                   	// #0
  415044:	b	414abc <_obstack_memory_used@@Base+0xb1c>
  415048:	cmp	x18, #0x0
  41504c:	ccmp	x9, x4, #0x0, eq  // eq = none
  415050:	b.ne	414bc0 <_obstack_memory_used@@Base+0xc20>  // b.any
  415054:	b	414ed8 <_obstack_memory_used@@Base+0xf38>
  415058:	cmp	x4, #0x0
  41505c:	cset	w2, ne  // ne = any
  415060:	cmp	w2, #0x0
  415064:	ccmp	x1, x16, #0x0, ne  // ne = any
  415068:	b.ne	414ca8 <_obstack_memory_used@@Base+0xd08>  // b.any
  41506c:	b	414c7c <_obstack_memory_used@@Base+0xcdc>
  415070:	ccmp	x1, x3, #0x0, eq  // eq = none
  415074:	b.ls	414bc0 <_obstack_memory_used@@Base+0xc20>  // b.plast
  415078:	b	414ee0 <_obstack_memory_used@@Base+0xf40>
  41507c:	mov	w2, #0x40                  	// #64
  415080:	sub	w2, w2, w1
  415084:	lsr	x4, x5, x1
  415088:	lsl	x5, x5, x2
  41508c:	cmp	x5, #0x0
  415090:	cset	x3, ne  // ne = any
  415094:	lsl	x2, x6, x2
  415098:	orr	x2, x2, x4
  41509c:	lsr	x6, x6, x1
  4150a0:	orr	x2, x2, x3
  4150a4:	tst	x2, #0x7
  4150a8:	b.ne	414f5c <_obstack_memory_used@@Base+0xfbc>  // b.any
  4150ac:	tbnz	x6, #51, 41521c <_obstack_memory_used@@Base+0x127c>
  4150b0:	mov	w1, #0x0                   	// #0
  4150b4:	extr	x2, x6, x2, #3
  4150b8:	ubfx	x6, x6, #3, #48
  4150bc:	tbz	w10, #11, 414abc <_obstack_memory_used@@Base+0xb1c>
  4150c0:	orr	w0, w0, #0x8
  4150c4:	b	415000 <_obstack_memory_used@@Base+0x1060>
  4150c8:	mov	w1, #0x7fff                	// #32767
  4150cc:	mov	x6, #0x0                   	// #0
  4150d0:	b	414ff8 <_obstack_memory_used@@Base+0x1058>
  4150d4:	mov	w11, #0x0                   	// #0
  4150d8:	cbz	x12, 414a24 <_obstack_memory_used@@Base+0xa84>
  4150dc:	adds	x5, x5, #0x8
  4150e0:	mov	w11, #0x1                   	// #1
  4150e4:	cinc	x6, x6, cs  // cs = hs, nlast
  4150e8:	b	414a24 <_obstack_memory_used@@Base+0xa84>
  4150ec:	cmp	x12, #0x0
  4150f0:	mov	w2, #0x7fff                	// #32767
  4150f4:	mov	x6, #0xffffffffffff        	// #281474976710655
  4150f8:	csel	w1, w1, w2, eq  // eq = none
  4150fc:	csel	x6, x6, xzr, eq  // eq = none
  415100:	csetm	x2, eq  // eq = none
  415104:	b	414ff8 <_obstack_memory_used@@Base+0x1058>
  415108:	sub	x1, x1, #0x2
  41510c:	add	x4, x4, x9
  415110:	b	414b64 <_obstack_memory_used@@Base+0xbc4>
  415114:	sub	x5, x5, #0x2
  415118:	add	x3, x3, x9
  41511c:	b	414b34 <_obstack_memory_used@@Base+0xb94>
  415120:	cmp	x3, #0x0
  415124:	mov	x5, #0xffffffffffffffff    	// #-1
  415128:	b.gt	414e60 <_obstack_memory_used@@Base+0xec0>
  41512c:	mov	x1, #0x1                   	// #1
  415130:	sub	x1, x1, x3
  415134:	cmp	x1, #0x74
  415138:	b.le	414f1c <_obstack_memory_used@@Base+0xf7c>
  41513c:	and	x10, x10, #0xc00000
  415140:	orr	w0, w0, #0x10
  415144:	cmp	x10, #0x400, lsl #12
  415148:	b.eq	4151f0 <_obstack_memory_used@@Base+0x1250>  // b.none
  41514c:	cmp	x10, #0x800, lsl #12
  415150:	csel	x2, x12, xzr, eq  // eq = none
  415154:	b	414f0c <_obstack_memory_used@@Base+0xf6c>
  415158:	lsl	x8, x13, #1
  41515c:	sub	x5, x5, #0x2
  415160:	cmp	x13, x8
  415164:	cinc	x1, x9, hi  // hi = pmore
  415168:	cmp	x4, x8
  41516c:	add	x1, x2, x1
  415170:	cset	w2, ne  // ne = any
  415174:	b	414ca8 <_obstack_memory_used@@Base+0xd08>
  415178:	and	x1, x2, #0xf
  41517c:	cmp	x1, #0x4
  415180:	b.eq	41518c <_obstack_memory_used@@Base+0x11ec>  // b.none
  415184:	adds	x2, x2, #0x4
  415188:	cinc	x6, x6, cs  // cs = hs, nlast
  41518c:	tbz	x6, #51, 414f7c <_obstack_memory_used@@Base+0xfdc>
  415190:	orr	w0, w0, #0x8
  415194:	mov	w1, #0x1                   	// #1
  415198:	mov	x6, #0x0                   	// #0
  41519c:	mov	x2, #0x0                   	// #0
  4151a0:	b	415000 <_obstack_memory_used@@Base+0x1060>
  4151a4:	cmp	x12, #0x0
  4151a8:	mov	w2, #0x7fff                	// #32767
  4151ac:	mov	x6, #0xffffffffffff        	// #281474976710655
  4151b0:	csel	w1, w1, w2, ne  // ne = any
  4151b4:	csel	x6, x6, xzr, ne  // ne = any
  4151b8:	csetm	x2, ne  // ne = any
  4151bc:	b	414ff8 <_obstack_memory_used@@Base+0x1058>
  4151c0:	mov	w11, #0x1                   	// #1
  4151c4:	cbnz	x12, 414a24 <_obstack_memory_used@@Base+0xa84>
  4151c8:	adds	x5, x5, #0x8
  4151cc:	mov	w11, #0x0                   	// #0
  4151d0:	cinc	x6, x6, cs  // cs = hs, nlast
  4151d4:	b	414a24 <_obstack_memory_used@@Base+0xa84>
  4151d8:	sub	x5, x5, #0x2
  4151dc:	add	x1, x1, x9
  4151e0:	b	414c04 <_obstack_memory_used@@Base+0xc64>
  4151e4:	sub	x2, x2, #0x2
  4151e8:	add	x1, x1, x9
  4151ec:	b	414c34 <_obstack_memory_used@@Base+0xc94>
  4151f0:	mov	x2, #0x1                   	// #1
  4151f4:	sub	x2, x2, x12
  4151f8:	b	414f0c <_obstack_memory_used@@Base+0xf6c>
  4151fc:	cbnz	x12, 41518c <_obstack_memory_used@@Base+0x11ec>
  415200:	adds	x2, x2, #0x8
  415204:	cinc	x6, x6, cs  // cs = hs, nlast
  415208:	tbnz	x6, #51, 415190 <_obstack_memory_used@@Base+0x11f0>
  41520c:	b	414f7c <_obstack_memory_used@@Base+0xfdc>
  415210:	cbnz	x12, 415200 <_obstack_memory_used@@Base+0x1260>
  415214:	tbnz	x6, #51, 415190 <_obstack_memory_used@@Base+0x11f0>
  415218:	b	414f7c <_obstack_memory_used@@Base+0xfdc>
  41521c:	orr	w0, w0, #0x10
  415220:	b	415190 <_obstack_memory_used@@Base+0x11f0>
  415224:	nop
  415228:	stp	x29, x30, [sp, #-48]!
  41522c:	mov	x29, sp
  415230:	str	q0, [sp, #16]
  415234:	str	q1, [sp, #32]
  415238:	ldp	x6, x1, [sp, #16]
  41523c:	ldp	x7, x0, [sp, #32]
  415240:	mrs	x2, fpcr
  415244:	ubfx	x4, x1, #48, #15
  415248:	lsr	x2, x1, #63
  41524c:	lsr	x3, x0, #63
  415250:	ubfx	x9, x0, #0, #48
  415254:	mov	x5, #0x7fff                	// #32767
  415258:	mov	x10, x6
  41525c:	cmp	x4, x5
  415260:	and	w2, w2, #0xff
  415264:	ubfx	x1, x1, #0, #48
  415268:	and	w3, w3, #0xff
  41526c:	ubfx	x0, x0, #48, #15
  415270:	b.eq	4152a4 <_obstack_memory_used@@Base+0x1304>  // b.none
  415274:	cmp	x0, x5
  415278:	b.eq	415290 <_obstack_memory_used@@Base+0x12f0>  // b.none
  41527c:	cmp	x4, x0
  415280:	mov	w0, #0x1                   	// #1
  415284:	b.eq	4152bc <_obstack_memory_used@@Base+0x131c>  // b.none
  415288:	ldp	x29, x30, [sp], #48
  41528c:	ret
  415290:	orr	x8, x9, x7
  415294:	cbnz	x8, 415320 <_obstack_memory_used@@Base+0x1380>
  415298:	mov	w0, #0x1                   	// #1
  41529c:	ldp	x29, x30, [sp], #48
  4152a0:	ret
  4152a4:	orr	x5, x1, x6
  4152a8:	cbnz	x5, 4152f0 <_obstack_memory_used@@Base+0x1350>
  4152ac:	cmp	x0, x4
  4152b0:	b.ne	415298 <_obstack_memory_used@@Base+0x12f8>  // b.any
  4152b4:	orr	x8, x9, x7
  4152b8:	cbnz	x8, 415320 <_obstack_memory_used@@Base+0x1380>
  4152bc:	cmp	x1, x9
  4152c0:	mov	w0, #0x1                   	// #1
  4152c4:	ccmp	x6, x7, #0x0, eq  // eq = none
  4152c8:	b.ne	415288 <_obstack_memory_used@@Base+0x12e8>  // b.any
  4152cc:	cmp	w2, w3
  4152d0:	mov	w0, #0x0                   	// #0
  4152d4:	b.eq	415288 <_obstack_memory_used@@Base+0x12e8>  // b.none
  4152d8:	mov	w0, #0x1                   	// #1
  4152dc:	cbnz	x4, 415288 <_obstack_memory_used@@Base+0x12e8>
  4152e0:	orr	x1, x1, x10
  4152e4:	cmp	x1, #0x0
  4152e8:	cset	w0, ne  // ne = any
  4152ec:	b	415288 <_obstack_memory_used@@Base+0x12e8>
  4152f0:	tst	x1, #0x800000000000
  4152f4:	b.ne	41530c <_obstack_memory_used@@Base+0x136c>  // b.any
  4152f8:	mov	w0, #0x1                   	// #1
  4152fc:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415300:	mov	w0, #0x1                   	// #1
  415304:	ldp	x29, x30, [sp], #48
  415308:	ret
  41530c:	cmp	x0, x4
  415310:	mov	w0, #0x1                   	// #1
  415314:	b.ne	415288 <_obstack_memory_used@@Base+0x12e8>  // b.any
  415318:	orr	x8, x9, x7
  41531c:	cbz	x8, 415288 <_obstack_memory_used@@Base+0x12e8>
  415320:	tst	x9, #0x800000000000
  415324:	b.eq	4152f8 <_obstack_memory_used@@Base+0x1358>  // b.none
  415328:	b	415298 <_obstack_memory_used@@Base+0x12f8>
  41532c:	nop
  415330:	stp	x29, x30, [sp, #-48]!
  415334:	mov	x29, sp
  415338:	str	q0, [sp, #16]
  41533c:	str	q1, [sp, #32]
  415340:	ldp	x8, x1, [sp, #16]
  415344:	ldp	x9, x0, [sp, #32]
  415348:	mrs	x2, fpcr
  41534c:	ubfx	x4, x1, #48, #15
  415350:	ubfx	x10, x1, #0, #48
  415354:	lsr	x2, x1, #63
  415358:	mov	x5, #0x7fff                	// #32767
  41535c:	mov	x6, x8
  415360:	cmp	x4, x5
  415364:	ubfx	x11, x0, #0, #48
  415368:	ubfx	x7, x0, #48, #15
  41536c:	lsr	x1, x0, #63
  415370:	mov	x3, x9
  415374:	b.eq	4153ac <_obstack_memory_used@@Base+0x140c>  // b.none
  415378:	cmp	x7, x5
  41537c:	b.eq	4153bc <_obstack_memory_used@@Base+0x141c>  // b.none
  415380:	cbnz	x4, 4153e8 <_obstack_memory_used@@Base+0x1448>
  415384:	orr	x6, x10, x8
  415388:	cmp	x6, #0x0
  41538c:	cset	w0, eq  // eq = none
  415390:	cbnz	x7, 4153d4 <_obstack_memory_used@@Base+0x1434>
  415394:	orr	x3, x11, x9
  415398:	cbnz	x3, 4153d4 <_obstack_memory_used@@Base+0x1434>
  41539c:	mov	w0, #0x0                   	// #0
  4153a0:	cbnz	x6, 4153fc <_obstack_memory_used@@Base+0x145c>
  4153a4:	ldp	x29, x30, [sp], #48
  4153a8:	ret
  4153ac:	orr	x0, x10, x8
  4153b0:	cbnz	x0, 415410 <_obstack_memory_used@@Base+0x1470>
  4153b4:	cmp	x7, x4
  4153b8:	b.ne	4153e8 <_obstack_memory_used@@Base+0x1448>  // b.any
  4153bc:	orr	x3, x11, x3
  4153c0:	cbnz	x3, 415410 <_obstack_memory_used@@Base+0x1470>
  4153c4:	cbnz	x4, 4153f4 <_obstack_memory_used@@Base+0x1454>
  4153c8:	orr	x6, x10, x6
  4153cc:	cmp	x6, #0x0
  4153d0:	cset	w0, eq  // eq = none
  4153d4:	cbz	w0, 4153f4 <_obstack_memory_used@@Base+0x1454>
  4153d8:	cmp	x1, #0x0
  4153dc:	csinv	w0, w0, wzr, ne  // ne = any
  4153e0:	ldp	x29, x30, [sp], #48
  4153e4:	ret
  4153e8:	cbnz	x7, 4153f4 <_obstack_memory_used@@Base+0x1454>
  4153ec:	orr	x3, x11, x3
  4153f0:	cbz	x3, 4153fc <_obstack_memory_used@@Base+0x145c>
  4153f4:	cmp	x2, x1
  4153f8:	b.eq	415424 <_obstack_memory_used@@Base+0x1484>  // b.none
  4153fc:	cmp	x2, #0x0
  415400:	mov	w0, #0xffffffff            	// #-1
  415404:	cneg	w0, w0, eq  // eq = none
  415408:	ldp	x29, x30, [sp], #48
  41540c:	ret
  415410:	mov	w0, #0x1                   	// #1
  415414:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415418:	mov	w0, #0x2                   	// #2
  41541c:	ldp	x29, x30, [sp], #48
  415420:	ret
  415424:	cmp	x4, x7
  415428:	b.gt	4153fc <_obstack_memory_used@@Base+0x145c>
  41542c:	b.lt	415460 <_obstack_memory_used@@Base+0x14c0>  // b.tstop
  415430:	cmp	x10, x11
  415434:	b.hi	4153fc <_obstack_memory_used@@Base+0x145c>  // b.pmore
  415438:	cset	w0, eq  // eq = none
  41543c:	cmp	w0, #0x0
  415440:	ccmp	x8, x9, #0x0, ne  // ne = any
  415444:	b.hi	4153fc <_obstack_memory_used@@Base+0x145c>  // b.pmore
  415448:	cmp	x10, x11
  41544c:	b.cc	415460 <_obstack_memory_used@@Base+0x14c0>  // b.lo, b.ul, b.last
  415450:	cmp	w0, #0x0
  415454:	mov	w0, #0x0                   	// #0
  415458:	ccmp	x8, x9, #0x2, ne  // ne = any
  41545c:	b.cs	4153a4 <_obstack_memory_used@@Base+0x1404>  // b.hs, b.nlast
  415460:	cmp	x2, #0x0
  415464:	mov	w0, #0x1                   	// #1
  415468:	cneg	w0, w0, eq  // eq = none
  41546c:	b	4153a4 <_obstack_memory_used@@Base+0x1404>
  415470:	stp	x29, x30, [sp, #-80]!
  415474:	mov	x29, sp
  415478:	str	q0, [sp, #48]
  41547c:	str	q1, [sp, #64]
  415480:	ldp	x1, x0, [sp, #48]
  415484:	ldp	x6, x2, [sp, #64]
  415488:	mrs	x11, fpcr
  41548c:	lsr	x3, x0, #63
  415490:	ubfx	x7, x0, #0, #48
  415494:	and	w12, w3, #0xff
  415498:	mov	x14, x3
  41549c:	ubfx	x3, x0, #48, #15
  4154a0:	cbz	w3, 415848 <_obstack_memory_used@@Base+0x18a8>
  4154a4:	mov	w4, #0x7fff                	// #32767
  4154a8:	cmp	w3, w4
  4154ac:	b.eq	4158ec <_obstack_memory_used@@Base+0x194c>  // b.none
  4154b0:	and	x3, x3, #0xffff
  4154b4:	extr	x4, x7, x1, #61
  4154b8:	mov	x18, #0xffffffffffffc001    	// #-16383
  4154bc:	orr	x7, x4, #0x8000000000000
  4154c0:	add	x3, x3, x18
  4154c4:	lsl	x5, x1, #3
  4154c8:	mov	x16, #0x0                   	// #0
  4154cc:	mov	x1, #0x0                   	// #0
  4154d0:	mov	w0, #0x0                   	// #0
  4154d4:	lsr	x8, x2, #63
  4154d8:	ubfx	x4, x2, #0, #48
  4154dc:	and	w15, w8, #0xff
  4154e0:	mov	x13, x8
  4154e4:	ubfx	x9, x2, #48, #15
  4154e8:	cbz	w9, 4158a8 <_obstack_memory_used@@Base+0x1908>
  4154ec:	mov	w8, #0x7fff                	// #32767
  4154f0:	cmp	w9, w8
  4154f4:	b.eq	415578 <_obstack_memory_used@@Base+0x15d8>  // b.none
  4154f8:	and	x9, x9, #0xffff
  4154fc:	mov	x17, #0xffffffffffffc001    	// #-16383
  415500:	add	x9, x9, x17
  415504:	extr	x2, x4, x6, #61
  415508:	add	x9, x9, x3
  41550c:	lsl	x6, x6, #3
  415510:	orr	x4, x2, #0x8000000000000
  415514:	mov	x2, #0x0                   	// #0
  415518:	eor	w8, w12, w15
  41551c:	cmp	x1, #0xa
  415520:	and	w10, w8, #0xff
  415524:	add	x3, x9, #0x1
  415528:	and	x8, x8, #0xff
  41552c:	b.le	4155b0 <_obstack_memory_used@@Base+0x1610>
  415530:	cmp	x1, #0xb
  415534:	b.eq	415c48 <_obstack_memory_used@@Base+0x1ca8>  // b.none
  415538:	mov	w15, w12
  41553c:	mov	x13, x14
  415540:	mov	w10, w15
  415544:	cmp	x16, #0x2
  415548:	b.eq	41590c <_obstack_memory_used@@Base+0x196c>  // b.none
  41554c:	mov	x4, x7
  415550:	mov	x6, x5
  415554:	mov	x2, x16
  415558:	mov	x8, x13
  41555c:	cmp	x2, #0x3
  415560:	b.ne	4155cc <_obstack_memory_used@@Base+0x162c>  // b.any
  415564:	orr	x4, x4, #0x800000000000
  415568:	mov	x5, x6
  41556c:	and	x4, x4, #0xffffffffffff
  415570:	mov	w1, #0x7fff                	// #32767
  415574:	b	4155e0 <_obstack_memory_used@@Base+0x1640>
  415578:	mov	x8, #0x7fff                	// #32767
  41557c:	orr	x2, x4, x6
  415580:	add	x9, x3, x8
  415584:	cbnz	x2, 415604 <_obstack_memory_used@@Base+0x1664>
  415588:	eor	w8, w12, w15
  41558c:	orr	x1, x1, #0x2
  415590:	and	w10, w8, #0xff
  415594:	cmp	x1, #0xa
  415598:	add	x3, x3, #0x8, lsl #12
  41559c:	and	x8, x8, #0xff
  4155a0:	mov	x6, #0x0                   	// #0
  4155a4:	b.gt	415bbc <_obstack_memory_used@@Base+0x1c1c>
  4155a8:	mov	x4, #0x0                   	// #0
  4155ac:	mov	x2, #0x2                   	// #2
  4155b0:	cmp	x1, #0x2
  4155b4:	b.gt	41562c <_obstack_memory_used@@Base+0x168c>
  4155b8:	sub	x1, x1, #0x1
  4155bc:	cmp	x1, #0x1
  4155c0:	b.hi	415668 <_obstack_memory_used@@Base+0x16c8>  // b.pmore
  4155c4:	cmp	x2, #0x2
  4155c8:	b.eq	41590c <_obstack_memory_used@@Base+0x196c>  // b.none
  4155cc:	cmp	x2, #0x1
  4155d0:	b.ne	4157c8 <_obstack_memory_used@@Base+0x1828>  // b.any
  4155d4:	mov	w1, #0x0                   	// #0
  4155d8:	mov	x4, #0x0                   	// #0
  4155dc:	mov	x5, #0x0                   	// #0
  4155e0:	mov	x3, #0x0                   	// #0
  4155e4:	orr	w1, w1, w10, lsl #15
  4155e8:	bfxil	x3, x4, #0, #48
  4155ec:	fmov	d0, x5
  4155f0:	bfi	x3, x1, #48, #16
  4155f4:	fmov	v0.d[1], x3
  4155f8:	cbnz	w0, 415a38 <_obstack_memory_used@@Base+0x1a98>
  4155fc:	ldp	x29, x30, [sp], #80
  415600:	ret
  415604:	tst	x4, #0x800000000000
  415608:	eor	w8, w12, w15
  41560c:	orr	x1, x1, #0x3
  415610:	csinc	w0, w0, wzr, ne  // ne = any
  415614:	and	w10, w8, #0xff
  415618:	add	x3, x3, #0x8, lsl #12
  41561c:	cmp	x1, #0xa
  415620:	and	x8, x8, #0xff
  415624:	mov	x2, #0x3                   	// #3
  415628:	b.gt	415c3c <_obstack_memory_used@@Base+0x1c9c>
  41562c:	mov	x12, #0x1                   	// #1
  415630:	mov	x14, #0x530                 	// #1328
  415634:	lsl	x1, x12, x1
  415638:	tst	x1, x14
  41563c:	b.ne	41583c <_obstack_memory_used@@Base+0x189c>  // b.any
  415640:	mov	x14, #0x240                 	// #576
  415644:	tst	x1, x14
  415648:	b.ne	415824 <_obstack_memory_used@@Base+0x1884>  // b.any
  41564c:	mov	x12, #0x88                  	// #136
  415650:	tst	x1, x12
  415654:	b.eq	415668 <_obstack_memory_used@@Base+0x16c8>  // b.none
  415658:	mov	x7, x4
  41565c:	mov	x5, x6
  415660:	mov	x16, x2
  415664:	b	415540 <_obstack_memory_used@@Base+0x15a0>
  415668:	lsr	x13, x5, #32
  41566c:	and	x12, x6, #0xffffffff
  415670:	and	x15, x5, #0xffffffff
  415674:	lsr	x6, x6, #32
  415678:	and	x18, x4, #0xffffffff
  41567c:	lsr	x2, x4, #32
  415680:	mul	x4, x13, x12
  415684:	stp	x21, x22, [sp, #32]
  415688:	lsr	x22, x7, #32
  41568c:	and	x5, x7, #0xffffffff
  415690:	mul	x16, x12, x15
  415694:	madd	x7, x6, x15, x4
  415698:	stp	x19, x20, [sp, #16]
  41569c:	mul	x1, x13, x18
  4156a0:	mul	x17, x15, x18
  4156a4:	and	x30, x16, #0xffffffff
  4156a8:	madd	x15, x2, x15, x1
  4156ac:	add	x16, x7, x16, lsr #32
  4156b0:	mul	x21, x22, x12
  4156b4:	cmp	x4, x16
  4156b8:	mul	x20, x22, x18
  4156bc:	mov	x14, #0x100000000           	// #4294967296
  4156c0:	mul	x19, x13, x6
  4156c4:	add	x15, x15, x17, lsr #32
  4156c8:	mul	x12, x12, x5
  4156cc:	and	x17, x17, #0xffffffff
  4156d0:	mul	x18, x5, x18
  4156d4:	add	x4, x19, x14
  4156d8:	madd	x7, x6, x5, x21
  4156dc:	csel	x19, x4, x19, hi  // hi = pmore
  4156e0:	madd	x5, x2, x5, x20
  4156e4:	cmp	x1, x15
  4156e8:	mul	x13, x13, x2
  4156ec:	add	x17, x17, x15, lsl #32
  4156f0:	mul	x6, x6, x22
  4156f4:	add	x7, x7, x12, lsr #32
  4156f8:	add	x5, x5, x18, lsr #32
  4156fc:	add	x4, x13, x14
  415700:	mul	x2, x2, x22
  415704:	csel	x13, x4, x13, hi  // hi = pmore
  415708:	and	x1, x18, #0xffffffff
  41570c:	cmp	x21, x7
  415710:	add	x4, x6, x14
  415714:	add	x30, x30, x16, lsl #32
  415718:	csel	x6, x4, x6, hi  // hi = pmore
  41571c:	add	x13, x13, x15, lsr #32
  415720:	cmp	x20, x5
  415724:	add	x1, x1, x5, lsl #32
  415728:	add	x16, x17, x16, lsr #32
  41572c:	add	x14, x2, x14
  415730:	csel	x2, x14, x2, hi  // hi = pmore
  415734:	add	x16, x19, x16
  415738:	adds	x1, x1, x13
  41573c:	and	x12, x12, #0xffffffff
  415740:	cset	x13, cs  // cs = hs, nlast
  415744:	cmp	x16, x17
  415748:	cset	x4, cc  // cc = lo, ul, last
  41574c:	add	x12, x12, x7, lsl #32
  415750:	adds	x1, x1, x4
  415754:	lsr	x5, x5, #32
  415758:	cset	x4, cs  // cs = hs, nlast
  41575c:	cmp	x13, #0x0
  415760:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  415764:	add	x7, x6, x7, lsr #32
  415768:	cinc	x5, x5, ne  // ne = any
  41576c:	adds	x6, x16, x12
  415770:	cset	x4, cs  // cs = hs, nlast
  415774:	adds	x1, x1, x7
  415778:	cset	x7, cs  // cs = hs, nlast
  41577c:	adds	x4, x1, x4
  415780:	cset	x1, cs  // cs = hs, nlast
  415784:	cmp	x7, #0x0
  415788:	orr	x30, x30, x6, lsl #13
  41578c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  415790:	cinc	x1, x2, ne  // ne = any
  415794:	cmp	x30, #0x0
  415798:	add	x1, x1, x5
  41579c:	cset	x2, ne  // ne = any
  4157a0:	orr	x6, x2, x6, lsr #51
  4157a4:	orr	x6, x6, x4, lsl #13
  4157a8:	extr	x4, x1, x4, #51
  4157ac:	tbz	x1, #39, 415ac0 <_obstack_memory_used@@Base+0x1b20>
  4157b0:	ldp	x19, x20, [sp, #16]
  4157b4:	and	x1, x6, #0x1
  4157b8:	ldp	x21, x22, [sp, #32]
  4157bc:	orr	x6, x1, x6, lsr #1
  4157c0:	orr	x6, x6, x4, lsl #63
  4157c4:	lsr	x4, x4, #1
  4157c8:	mov	x1, #0x3fff                	// #16383
  4157cc:	add	x2, x3, x1
  4157d0:	cmp	x2, #0x0
  4157d4:	b.le	41596c <_obstack_memory_used@@Base+0x19cc>
  4157d8:	tst	x6, #0x7
  4157dc:	b.eq	4157fc <_obstack_memory_used@@Base+0x185c>  // b.none
  4157e0:	and	x1, x11, #0xc00000
  4157e4:	orr	w0, w0, #0x10
  4157e8:	cmp	x1, #0x400, lsl #12
  4157ec:	b.eq	415bb4 <_obstack_memory_used@@Base+0x1c14>  // b.none
  4157f0:	cmp	x1, #0x800, lsl #12
  4157f4:	b.eq	415b5c <_obstack_memory_used@@Base+0x1bbc>  // b.none
  4157f8:	cbz	x1, 415b44 <_obstack_memory_used@@Base+0x1ba4>
  4157fc:	tbz	x4, #52, 415808 <_obstack_memory_used@@Base+0x1868>
  415800:	and	x4, x4, #0xffefffffffffffff
  415804:	add	x2, x3, #0x4, lsl #12
  415808:	mov	x1, #0x7ffe                	// #32766
  41580c:	cmp	x2, x1
  415810:	b.gt	415a94 <_obstack_memory_used@@Base+0x1af4>
  415814:	and	w1, w2, #0x7fff
  415818:	extr	x5, x4, x6, #3
  41581c:	ubfx	x4, x4, #3, #48
  415820:	b	4155e0 <_obstack_memory_used@@Base+0x1640>
  415824:	mov	w0, w12
  415828:	mov	w10, #0x0                   	// #0
  41582c:	mov	x4, #0xffffffffffff        	// #281474976710655
  415830:	mov	x5, #0xffffffffffffffff    	// #-1
  415834:	mov	w1, #0x7fff                	// #32767
  415838:	b	4155e0 <_obstack_memory_used@@Base+0x1640>
  41583c:	mov	w15, w10
  415840:	mov	x13, x8
  415844:	b	415540 <_obstack_memory_used@@Base+0x15a0>
  415848:	orr	x5, x7, x1
  41584c:	cbz	x5, 415954 <_obstack_memory_used@@Base+0x19b4>
  415850:	cbz	x7, 415a70 <_obstack_memory_used@@Base+0x1ad0>
  415854:	clz	x0, x7
  415858:	sub	x4, x0, #0xf
  41585c:	add	w5, w4, #0x3
  415860:	mov	w3, #0x3d                  	// #61
  415864:	sub	w3, w3, w4
  415868:	lsl	x4, x7, x5
  41586c:	lsr	x3, x1, x3
  415870:	orr	x7, x3, x4
  415874:	lsl	x5, x1, x5
  415878:	lsr	x8, x2, #63
  41587c:	mov	x3, #0xffffffffffffc011    	// #-16367
  415880:	ubfx	x4, x2, #0, #48
  415884:	sub	x3, x3, x0
  415888:	and	w15, w8, #0xff
  41588c:	mov	x13, x8
  415890:	ubfx	x9, x2, #48, #15
  415894:	mov	x1, #0x0                   	// #0
  415898:	mov	x16, #0x0                   	// #0
  41589c:	mov	w0, #0x0                   	// #0
  4158a0:	cbnz	w9, 4154ec <_obstack_memory_used@@Base+0x154c>
  4158a4:	nop
  4158a8:	orr	x2, x4, x6
  4158ac:	cbz	x2, 41591c <_obstack_memory_used@@Base+0x197c>
  4158b0:	cbz	x4, 415a4c <_obstack_memory_used@@Base+0x1aac>
  4158b4:	clz	x9, x4
  4158b8:	sub	x2, x9, #0xf
  4158bc:	add	w10, w2, #0x3
  4158c0:	mov	w8, #0x3d                  	// #61
  4158c4:	sub	w8, w8, w2
  4158c8:	lsl	x2, x4, x10
  4158cc:	lsr	x8, x6, x8
  4158d0:	orr	x4, x8, x2
  4158d4:	lsl	x6, x6, x10
  4158d8:	sub	x9, x3, x9
  4158dc:	mov	x10, #0xffffffffffffc011    	// #-16367
  4158e0:	mov	x2, #0x0                   	// #0
  4158e4:	add	x9, x9, x10
  4158e8:	b	415518 <_obstack_memory_used@@Base+0x1578>
  4158ec:	orr	x5, x7, x1
  4158f0:	cbnz	x5, 415934 <_obstack_memory_used@@Base+0x1994>
  4158f4:	mov	x7, #0x0                   	// #0
  4158f8:	mov	x1, #0x8                   	// #8
  4158fc:	mov	x3, #0x7fff                	// #32767
  415900:	mov	x16, #0x2                   	// #2
  415904:	mov	w0, #0x0                   	// #0
  415908:	b	4154d4 <_obstack_memory_used@@Base+0x1534>
  41590c:	mov	w1, #0x7fff                	// #32767
  415910:	mov	x4, #0x0                   	// #0
  415914:	mov	x5, #0x0                   	// #0
  415918:	b	4155e0 <_obstack_memory_used@@Base+0x1640>
  41591c:	orr	x1, x1, #0x1
  415920:	mov	x9, x3
  415924:	mov	x4, #0x0                   	// #0
  415928:	mov	x6, #0x0                   	// #0
  41592c:	mov	x2, #0x1                   	// #1
  415930:	b	415518 <_obstack_memory_used@@Base+0x1578>
  415934:	lsr	x0, x7, #47
  415938:	mov	x5, x1
  41593c:	eor	x0, x0, #0x1
  415940:	mov	x1, #0xc                   	// #12
  415944:	and	w0, w0, #0x1
  415948:	mov	x3, #0x7fff                	// #32767
  41594c:	mov	x16, #0x3                   	// #3
  415950:	b	4154d4 <_obstack_memory_used@@Base+0x1534>
  415954:	mov	x7, #0x0                   	// #0
  415958:	mov	x1, #0x4                   	// #4
  41595c:	mov	x3, #0x0                   	// #0
  415960:	mov	x16, #0x1                   	// #1
  415964:	mov	w0, #0x0                   	// #0
  415968:	b	4154d4 <_obstack_memory_used@@Base+0x1534>
  41596c:	mov	x1, #0x1                   	// #1
  415970:	sub	x2, x1, x2
  415974:	cmp	x2, #0x74
  415978:	b.gt	4159f0 <_obstack_memory_used@@Base+0x1a50>
  41597c:	cmp	x2, #0x3f
  415980:	b.le	415ad0 <_obstack_memory_used@@Base+0x1b30>
  415984:	mov	w1, #0x80                  	// #128
  415988:	sub	w1, w1, w2
  41598c:	cmp	x2, #0x40
  415990:	sub	w2, w2, #0x40
  415994:	lsl	x1, x4, x1
  415998:	orr	x1, x6, x1
  41599c:	csel	x6, x1, x6, ne  // ne = any
  4159a0:	lsr	x2, x4, x2
  4159a4:	cmp	x6, #0x0
  4159a8:	cset	x5, ne  // ne = any
  4159ac:	orr	x5, x5, x2
  4159b0:	ands	x2, x5, #0x7
  4159b4:	b.eq	415b04 <_obstack_memory_used@@Base+0x1b64>  // b.none
  4159b8:	mov	x2, #0x0                   	// #0
  4159bc:	and	x11, x11, #0xc00000
  4159c0:	orr	w0, w0, #0x10
  4159c4:	cmp	x11, #0x400, lsl #12
  4159c8:	b.eq	415c14 <_obstack_memory_used@@Base+0x1c74>  // b.none
  4159cc:	cmp	x11, #0x800, lsl #12
  4159d0:	b.eq	415c28 <_obstack_memory_used@@Base+0x1c88>  // b.none
  4159d4:	cbz	x11, 415b6c <_obstack_memory_used@@Base+0x1bcc>
  4159d8:	tbnz	x2, #51, 415b84 <_obstack_memory_used@@Base+0x1be4>
  4159dc:	ubfx	x4, x2, #3, #48
  4159e0:	extr	x5, x2, x5, #3
  4159e4:	orr	w0, w0, #0x8
  4159e8:	mov	w1, #0x0                   	// #0
  4159ec:	b	415a20 <_obstack_memory_used@@Base+0x1a80>
  4159f0:	orr	x5, x6, x4
  4159f4:	cbz	x5, 415a14 <_obstack_memory_used@@Base+0x1a74>
  4159f8:	and	x11, x11, #0xc00000
  4159fc:	orr	w0, w0, #0x10
  415a00:	cmp	x11, #0x400, lsl #12
  415a04:	sub	x5, x1, x8
  415a08:	b.eq	415a14 <_obstack_memory_used@@Base+0x1a74>  // b.none
  415a0c:	cmp	x11, #0x800, lsl #12
  415a10:	csel	x5, x8, xzr, eq  // eq = none
  415a14:	orr	w0, w0, #0x8
  415a18:	mov	w1, #0x0                   	// #0
  415a1c:	mov	x4, #0x0                   	// #0
  415a20:	mov	x3, #0x0                   	// #0
  415a24:	fmov	d0, x5
  415a28:	bfxil	x3, x4, #0, #48
  415a2c:	bfi	x3, x1, #48, #15
  415a30:	bfi	x3, x10, #63, #1
  415a34:	fmov	v0.d[1], x3
  415a38:	str	q0, [sp, #48]
  415a3c:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415a40:	ldr	q0, [sp, #48]
  415a44:	ldp	x29, x30, [sp], #80
  415a48:	ret
  415a4c:	clz	x9, x6
  415a50:	add	x2, x9, #0x31
  415a54:	add	x9, x9, #0x40
  415a58:	cmp	x2, #0x3c
  415a5c:	b.le	4158bc <_obstack_memory_used@@Base+0x191c>
  415a60:	sub	w2, w2, #0x3d
  415a64:	lsl	x4, x6, x2
  415a68:	mov	x6, #0x0                   	// #0
  415a6c:	b	4158d8 <_obstack_memory_used@@Base+0x1938>
  415a70:	clz	x3, x1
  415a74:	add	x4, x3, #0x31
  415a78:	add	x0, x3, #0x40
  415a7c:	cmp	x4, #0x3c
  415a80:	b.le	41585c <_obstack_memory_used@@Base+0x18bc>
  415a84:	sub	w4, w4, #0x3d
  415a88:	mov	x5, #0x0                   	// #0
  415a8c:	lsl	x7, x1, x4
  415a90:	b	415878 <_obstack_memory_used@@Base+0x18d8>
  415a94:	and	x5, x11, #0xc00000
  415a98:	cmp	x5, #0x400, lsl #12
  415a9c:	b.eq	415b98 <_obstack_memory_used@@Base+0x1bf8>  // b.none
  415aa0:	cmp	x5, #0x800, lsl #12
  415aa4:	b.eq	415b28 <_obstack_memory_used@@Base+0x1b88>  // b.none
  415aa8:	cbz	x5, 415b1c <_obstack_memory_used@@Base+0x1b7c>
  415aac:	mov	x4, #0xffffffffffff        	// #281474976710655
  415ab0:	mov	x5, #0xffffffffffffffff    	// #-1
  415ab4:	mov	w2, #0x14                  	// #20
  415ab8:	orr	w0, w0, w2
  415abc:	b	415a20 <_obstack_memory_used@@Base+0x1a80>
  415ac0:	mov	x3, x9
  415ac4:	ldp	x19, x20, [sp, #16]
  415ac8:	ldp	x21, x22, [sp, #32]
  415acc:	b	4157c8 <_obstack_memory_used@@Base+0x1828>
  415ad0:	mov	w1, #0x40                  	// #64
  415ad4:	sub	w1, w1, w2
  415ad8:	lsr	x3, x6, x2
  415adc:	lsl	x6, x6, x1
  415ae0:	cmp	x6, #0x0
  415ae4:	lsl	x5, x4, x1
  415ae8:	cset	x1, ne  // ne = any
  415aec:	orr	x5, x5, x3
  415af0:	lsr	x2, x4, x2
  415af4:	orr	x5, x5, x1
  415af8:	tst	x5, #0x7
  415afc:	b.ne	4159bc <_obstack_memory_used@@Base+0x1a1c>  // b.any
  415b00:	tbnz	x2, #51, 415c34 <_obstack_memory_used@@Base+0x1c94>
  415b04:	ubfx	x4, x2, #3, #48
  415b08:	extr	x5, x2, x5, #3
  415b0c:	mov	w1, #0x0                   	// #0
  415b10:	tbz	w11, #11, 4155e0 <_obstack_memory_used@@Base+0x1640>
  415b14:	orr	w0, w0, #0x8
  415b18:	b	415a20 <_obstack_memory_used@@Base+0x1a80>
  415b1c:	mov	w1, #0x7fff                	// #32767
  415b20:	mov	x4, #0x0                   	// #0
  415b24:	b	415ab4 <_obstack_memory_used@@Base+0x1b14>
  415b28:	cmp	x8, #0x0
  415b2c:	mov	w2, #0x7fff                	// #32767
  415b30:	mov	x4, #0xffffffffffff        	// #281474976710655
  415b34:	csel	w1, w1, w2, eq  // eq = none
  415b38:	csel	x4, x4, xzr, eq  // eq = none
  415b3c:	csetm	x5, eq  // eq = none
  415b40:	b	415ab4 <_obstack_memory_used@@Base+0x1b14>
  415b44:	and	x1, x6, #0xf
  415b48:	cmp	x1, #0x4
  415b4c:	b.eq	4157fc <_obstack_memory_used@@Base+0x185c>  // b.none
  415b50:	adds	x6, x6, #0x4
  415b54:	cinc	x4, x4, cs  // cs = hs, nlast
  415b58:	b	4157fc <_obstack_memory_used@@Base+0x185c>
  415b5c:	cbz	x8, 4157fc <_obstack_memory_used@@Base+0x185c>
  415b60:	adds	x6, x6, #0x8
  415b64:	cinc	x4, x4, cs  // cs = hs, nlast
  415b68:	b	4157fc <_obstack_memory_used@@Base+0x185c>
  415b6c:	and	x1, x5, #0xf
  415b70:	cmp	x1, #0x4
  415b74:	b.eq	415b80 <_obstack_memory_used@@Base+0x1be0>  // b.none
  415b78:	adds	x5, x5, #0x4
  415b7c:	cinc	x2, x2, cs  // cs = hs, nlast
  415b80:	tbz	x2, #51, 4159dc <_obstack_memory_used@@Base+0x1a3c>
  415b84:	orr	w0, w0, #0x8
  415b88:	mov	w1, #0x1                   	// #1
  415b8c:	mov	x4, #0x0                   	// #0
  415b90:	mov	x5, #0x0                   	// #0
  415b94:	b	415a20 <_obstack_memory_used@@Base+0x1a80>
  415b98:	cmp	x8, #0x0
  415b9c:	mov	w2, #0x7fff                	// #32767
  415ba0:	mov	x4, #0xffffffffffff        	// #281474976710655
  415ba4:	csel	w1, w1, w2, ne  // ne = any
  415ba8:	csel	x4, x4, xzr, ne  // ne = any
  415bac:	csetm	x5, ne  // ne = any
  415bb0:	b	415ab4 <_obstack_memory_used@@Base+0x1b14>
  415bb4:	cbnz	x8, 4157fc <_obstack_memory_used@@Base+0x185c>
  415bb8:	b	415b60 <_obstack_memory_used@@Base+0x1bc0>
  415bbc:	mov	x4, #0x2                   	// #2
  415bc0:	cmp	x1, #0xf
  415bc4:	b.ne	415be8 <_obstack_memory_used@@Base+0x1c48>  // b.any
  415bc8:	tbz	x7, #47, 415c00 <_obstack_memory_used@@Base+0x1c60>
  415bcc:	tbnz	x2, #47, 415c00 <_obstack_memory_used@@Base+0x1c60>
  415bd0:	orr	x4, x2, #0x800000000000
  415bd4:	mov	w10, w15
  415bd8:	and	x4, x4, #0xffffffffffff
  415bdc:	mov	x5, x6
  415be0:	mov	w1, #0x7fff                	// #32767
  415be4:	b	4155e0 <_obstack_memory_used@@Base+0x1640>
  415be8:	cmp	x1, #0xb
  415bec:	b.ne	415538 <_obstack_memory_used@@Base+0x1598>  // b.any
  415bf0:	mov	x7, x2
  415bf4:	mov	x5, x6
  415bf8:	mov	x16, x4
  415bfc:	b	415540 <_obstack_memory_used@@Base+0x15a0>
  415c00:	orr	x4, x7, #0x800000000000
  415c04:	mov	w10, w12
  415c08:	and	x4, x4, #0xffffffffffff
  415c0c:	mov	w1, #0x7fff                	// #32767
  415c10:	b	4155e0 <_obstack_memory_used@@Base+0x1640>
  415c14:	cbnz	x8, 415b80 <_obstack_memory_used@@Base+0x1be0>
  415c18:	adds	x5, x5, #0x8
  415c1c:	cinc	x2, x2, cs  // cs = hs, nlast
  415c20:	tbnz	x2, #51, 415b84 <_obstack_memory_used@@Base+0x1be4>
  415c24:	b	4159dc <_obstack_memory_used@@Base+0x1a3c>
  415c28:	cbnz	x8, 415c18 <_obstack_memory_used@@Base+0x1c78>
  415c2c:	tbnz	x2, #51, 415b84 <_obstack_memory_used@@Base+0x1be4>
  415c30:	b	4159dc <_obstack_memory_used@@Base+0x1a3c>
  415c34:	orr	w0, w0, #0x10
  415c38:	b	415b84 <_obstack_memory_used@@Base+0x1be4>
  415c3c:	mov	x2, x4
  415c40:	mov	x4, #0x3                   	// #3
  415c44:	b	415bc0 <_obstack_memory_used@@Base+0x1c20>
  415c48:	mov	w10, w15
  415c4c:	mov	x8, x13
  415c50:	b	41555c <_obstack_memory_used@@Base+0x15bc>
  415c54:	nop
  415c58:	cbz	w0, 415c9c <_obstack_memory_used@@Base+0x1cfc>
  415c5c:	mov	w0, w0
  415c60:	mov	w1, #0x403e                	// #16446
  415c64:	clz	x3, x0
  415c68:	mov	w2, #0x402f                	// #16431
  415c6c:	sub	w1, w1, w3
  415c70:	mov	x3, #0x0                   	// #0
  415c74:	sub	w2, w2, w1
  415c78:	and	w1, w1, #0x7fff
  415c7c:	lsl	x0, x0, x2
  415c80:	and	x0, x0, #0xffffffffffff
  415c84:	mov	x2, #0x0                   	// #0
  415c88:	fmov	d0, x2
  415c8c:	bfxil	x3, x0, #0, #48
  415c90:	bfi	x3, x1, #48, #16
  415c94:	fmov	v0.d[1], x3
  415c98:	ret
  415c9c:	mov	x0, #0x0                   	// #0
  415ca0:	mov	x3, #0x0                   	// #0
  415ca4:	bfxil	x3, x0, #0, #48
  415ca8:	mov	x2, #0x0                   	// #0
  415cac:	fmov	d0, x2
  415cb0:	mov	w1, #0x0                   	// #0
  415cb4:	bfi	x3, x1, #48, #16
  415cb8:	fmov	v0.d[1], x3
  415cbc:	ret
  415cc0:	stp	x29, x30, [sp, #-48]!
  415cc4:	mov	x29, sp
  415cc8:	str	x19, [sp, #16]
  415ccc:	str	q0, [sp, #32]
  415cd0:	ldr	x19, [sp, #32]
  415cd4:	ldr	x1, [sp, #40]
  415cd8:	mrs	x0, fpcr
  415cdc:	ubfx	x3, x1, #48, #15
  415ce0:	mov	x2, x19
  415ce4:	mov	x4, #0x3ffe                	// #16382
  415ce8:	ubfx	x19, x1, #0, #48
  415cec:	cmp	x3, x4
  415cf0:	b.gt	415d1c <_obstack_memory_used@@Base+0x1d7c>
  415cf4:	cbnz	x3, 415d00 <_obstack_memory_used@@Base+0x1d60>
  415cf8:	orr	x19, x2, x19
  415cfc:	cbz	x19, 415d0c <_obstack_memory_used@@Base+0x1d6c>
  415d00:	mov	w0, #0x10                  	// #16
  415d04:	mov	x19, #0x0                   	// #0
  415d08:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415d0c:	mov	x0, x19
  415d10:	ldr	x19, [sp, #16]
  415d14:	ldp	x29, x30, [sp], #48
  415d18:	ret
  415d1c:	lsr	x0, x1, #63
  415d20:	mov	x4, #0x403f                	// #16447
  415d24:	and	w0, w0, #0xff
  415d28:	and	x5, x0, #0xff
  415d2c:	sub	x4, x4, x5
  415d30:	cmp	x4, x3
  415d34:	b.le	415d88 <_obstack_memory_used@@Base+0x1de8>
  415d38:	cbnz	x5, 415d9c <_obstack_memory_used@@Base+0x1dfc>
  415d3c:	mov	x1, x3
  415d40:	mov	x0, #0x406f                	// #16495
  415d44:	sub	x3, x0, x3
  415d48:	orr	x4, x19, #0x1000000000000
  415d4c:	cmp	x3, #0x3f
  415d50:	b.gt	415dac <_obstack_memory_used@@Base+0x1e0c>
  415d54:	mov	w3, #0xffffbfd1            	// #-16431
  415d58:	add	w3, w1, w3
  415d5c:	sub	w1, w0, w1
  415d60:	lsl	x0, x2, x3
  415d64:	cmp	x0, #0x0
  415d68:	lsr	x19, x2, x1
  415d6c:	cset	w0, ne  // ne = any
  415d70:	lsl	x4, x4, x3
  415d74:	orr	x19, x19, x4
  415d78:	cbz	w0, 415d0c <_obstack_memory_used@@Base+0x1d6c>
  415d7c:	mov	w0, #0x10                  	// #16
  415d80:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415d84:	b	415d0c <_obstack_memory_used@@Base+0x1d6c>
  415d88:	eor	w19, w0, #0x1
  415d8c:	mov	w0, #0x1                   	// #1
  415d90:	sbfx	x19, x19, #0, #1
  415d94:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415d98:	b	415d0c <_obstack_memory_used@@Base+0x1d6c>
  415d9c:	mov	w0, #0x1                   	// #1
  415da0:	mov	x19, #0x0                   	// #0
  415da4:	bl	415e80 <_obstack_memory_used@@Base+0x1ee0>
  415da8:	b	415d0c <_obstack_memory_used@@Base+0x1d6c>
  415dac:	mov	w0, #0xffffc011            	// #-16367
  415db0:	add	w5, w1, w0
  415db4:	mov	w0, #0x402f                	// #16431
  415db8:	cmp	x3, #0x40
  415dbc:	sub	w1, w0, w1
  415dc0:	lsl	x0, x4, x5
  415dc4:	orr	x0, x2, x0
  415dc8:	csel	x2, x0, x2, ne  // ne = any
  415dcc:	lsr	x19, x4, x1
  415dd0:	cmp	x2, #0x0
  415dd4:	cset	w0, ne  // ne = any
  415dd8:	b	415d78 <_obstack_memory_used@@Base+0x1dd8>
  415ddc:	nop
  415de0:	cbz	x0, 415e34 <_obstack_memory_used@@Base+0x1e94>
  415de4:	clz	x2, x0
  415de8:	mov	w1, #0x403e                	// #16446
  415dec:	sub	w1, w1, w2
  415df0:	mov	x2, #0x406f                	// #16495
  415df4:	and	w4, w1, #0x7fff
  415df8:	sub	x3, x2, w1, sxtw
  415dfc:	cmp	x3, #0x3f
  415e00:	b.gt	415e54 <_obstack_memory_used@@Base+0x1eb4>
  415e04:	sub	w2, w2, w1
  415e08:	mov	w3, #0xffffbfd1            	// #-16431
  415e0c:	add	w1, w1, w3
  415e10:	mov	x3, #0x0                   	// #0
  415e14:	lsr	x1, x0, x1
  415e18:	and	x1, x1, #0xffffffffffff
  415e1c:	lsl	x0, x0, x2
  415e20:	fmov	d0, x0
  415e24:	bfxil	x3, x1, #0, #48
  415e28:	bfi	x3, x4, #48, #16
  415e2c:	fmov	v0.d[1], x3
  415e30:	ret
  415e34:	mov	x1, #0x0                   	// #0
  415e38:	mov	x3, #0x0                   	// #0
  415e3c:	bfxil	x3, x1, #0, #48
  415e40:	fmov	d0, x0
  415e44:	mov	w4, #0x0                   	// #0
  415e48:	bfi	x3, x4, #48, #16
  415e4c:	fmov	v0.d[1], x3
  415e50:	ret
  415e54:	mov	w2, #0x402f                	// #16431
  415e58:	sub	w1, w2, w1
  415e5c:	mov	x3, #0x0                   	// #0
  415e60:	lsl	x1, x0, x1
  415e64:	and	x1, x1, #0xffffffffffff
  415e68:	mov	x0, #0x0                   	// #0
  415e6c:	fmov	d0, x0
  415e70:	bfxil	x3, x1, #0, #48
  415e74:	bfi	x3, x4, #48, #16
  415e78:	fmov	v0.d[1], x3
  415e7c:	ret
  415e80:	tbz	w0, #0, 415e90 <_obstack_memory_used@@Base+0x1ef0>
  415e84:	movi	v1.2s, #0x0
  415e88:	fdiv	s0, s1, s1
  415e8c:	mrs	x1, fpsr
  415e90:	tbz	w0, #1, 415ea4 <_obstack_memory_used@@Base+0x1f04>
  415e94:	fmov	s1, #1.000000000000000000e+00
  415e98:	movi	v2.2s, #0x0
  415e9c:	fdiv	s0, s1, s2
  415ea0:	mrs	x1, fpsr
  415ea4:	tbz	w0, #2, 415ec4 <_obstack_memory_used@@Base+0x1f24>
  415ea8:	mov	w2, #0xc5ae                	// #50606
  415eac:	mov	w1, #0x7f7fffff            	// #2139095039
  415eb0:	movk	w2, #0x749d, lsl #16
  415eb4:	fmov	s1, w1
  415eb8:	fmov	s2, w2
  415ebc:	fadd	s0, s1, s2
  415ec0:	mrs	x1, fpsr
  415ec4:	tbz	w0, #3, 415ed4 <_obstack_memory_used@@Base+0x1f34>
  415ec8:	movi	v1.2s, #0x80, lsl #16
  415ecc:	fmul	s0, s1, s1
  415ed0:	mrs	x1, fpsr
  415ed4:	tbz	w0, #4, 415eec <_obstack_memory_used@@Base+0x1f4c>
  415ed8:	mov	w0, #0x7f7fffff            	// #2139095039
  415edc:	fmov	s2, #1.000000000000000000e+00
  415ee0:	fmov	s1, w0
  415ee4:	fsub	s0, s1, s2
  415ee8:	mrs	x0, fpsr
  415eec:	ret
  415ef0:	stp	x29, x30, [sp, #-64]!
  415ef4:	mov	x29, sp
  415ef8:	stp	x19, x20, [sp, #16]
  415efc:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x17060>
  415f00:	add	x20, x20, #0xde0
  415f04:	stp	x21, x22, [sp, #32]
  415f08:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x17060>
  415f0c:	add	x21, x21, #0xdd8
  415f10:	sub	x20, x20, x21
  415f14:	mov	w22, w0
  415f18:	stp	x23, x24, [sp, #48]
  415f1c:	mov	x23, x1
  415f20:	mov	x24, x2
  415f24:	bl	402378 <mbrtowc@plt-0x38>
  415f28:	cmp	xzr, x20, asr #3
  415f2c:	b.eq	415f58 <_obstack_memory_used@@Base+0x1fb8>  // b.none
  415f30:	asr	x20, x20, #3
  415f34:	mov	x19, #0x0                   	// #0
  415f38:	ldr	x3, [x21, x19, lsl #3]
  415f3c:	mov	x2, x24
  415f40:	add	x19, x19, #0x1
  415f44:	mov	x1, x23
  415f48:	mov	w0, w22
  415f4c:	blr	x3
  415f50:	cmp	x20, x19
  415f54:	b.ne	415f38 <_obstack_memory_used@@Base+0x1f98>  // b.any
  415f58:	ldp	x19, x20, [sp, #16]
  415f5c:	ldp	x21, x22, [sp, #32]
  415f60:	ldp	x23, x24, [sp, #48]
  415f64:	ldp	x29, x30, [sp], #64
  415f68:	ret
  415f6c:	nop
  415f70:	ret
  415f74:	nop
  415f78:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x18060>
  415f7c:	mov	x1, #0x0                   	// #0
  415f80:	ldr	x2, [x2, #864]
  415f84:	b	402510 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000415f88 <.fini>:
  415f88:	stp	x29, x30, [sp, #-16]!
  415f8c:	mov	x29, sp
  415f90:	ldp	x29, x30, [sp], #16
  415f94:	ret
