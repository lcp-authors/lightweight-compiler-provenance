
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Encode.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002810 <_init>:
    2810:	stp	x29, x30, [sp, #-16]!
    2814:	mov	x29, sp
    2818:	bl	2c90 <call_weak_fn>
    281c:	ldp	x29, x30, [sp], #16
    2820:	ret

Disassembly of section .plt:

0000000000002830 <.plt>:
    2830:	stp	x16, x30, [sp, #-16]!
    2834:	adrp	x16, 1c000 <__FRAME_END__+0xfee8>
    2838:	ldr	x17, [x16, #4088]
    283c:	add	x16, x16, #0xff8
    2840:	br	x17
    2844:	nop
    2848:	nop
    284c:	nop

0000000000002850 <memcpy@plt>:
    2850:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2854:	ldr	x17, [x16]
    2858:	add	x16, x16, #0x0
    285c:	br	x17

0000000000002860 <memmove@plt>:
    2860:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2864:	ldr	x17, [x16, #8]
    2868:	add	x16, x16, #0x8
    286c:	br	x17

0000000000002870 <Perl_sv_2iv_flags@plt>:
    2870:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2874:	ldr	x17, [x16, #16]
    2878:	add	x16, x16, #0x10
    287c:	br	x17

0000000000002880 <Perl_sv_2bool_flags@plt>:
    2880:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2884:	ldr	x17, [x16, #24]
    2888:	add	x16, x16, #0x18
    288c:	br	x17

0000000000002890 <strlen@plt>:
    2890:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2894:	ldr	x17, [x16, #32]
    2898:	add	x16, x16, #0x20
    289c:	br	x17

00000000000028a0 <Perl__utf8n_to_uvchr_msgs_helper@plt>:
    28a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    28a4:	ldr	x17, [x16, #40]
    28a8:	add	x16, x16, #0x28
    28ac:	br	x17

00000000000028b0 <Perl_sv_utf8_encode@plt>:
    28b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    28b4:	ldr	x17, [x16, #48]
    28b8:	add	x16, x16, #0x30
    28bc:	br	x17

00000000000028c0 <Perl_utf8_to_bytes@plt>:
    28c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    28c4:	ldr	x17, [x16, #56]
    28c8:	add	x16, x16, #0x38
    28cc:	br	x17

00000000000028d0 <Perl_sv_pvn_force_flags@plt>:
    28d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    28d4:	ldr	x17, [x16, #64]
    28d8:	add	x16, x16, #0x40
    28dc:	br	x17

00000000000028e0 <Perl_newRV_noinc@plt>:
    28e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    28e4:	ldr	x17, [x16, #72]
    28e8:	add	x16, x16, #0x48
    28ec:	br	x17

00000000000028f0 <Perl_stack_grow@plt>:
    28f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    28f4:	ldr	x17, [x16, #80]
    28f8:	add	x16, x16, #0x50
    28fc:	br	x17

0000000000002900 <Perl_sv_catpvn_flags@plt>:
    2900:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2904:	ldr	x17, [x16, #88]
    2908:	add	x16, x16, #0x58
    290c:	br	x17

0000000000002910 <Perl_call_method@plt>:
    2910:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2914:	ldr	x17, [x16, #96]
    2918:	add	x16, x16, #0x60
    291c:	br	x17

0000000000002920 <__cxa_finalize@plt>:
    2920:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2924:	ldr	x17, [x16, #104]
    2928:	add	x16, x16, #0x68
    292c:	br	x17

0000000000002930 <sprintf@plt>:
    2930:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2934:	ldr	x17, [x16, #112]
    2938:	add	x16, x16, #0x70
    293c:	br	x17

0000000000002940 <Perl_pop_scope@plt>:
    2940:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2944:	ldr	x17, [x16, #120]
    2948:	add	x16, x16, #0x78
    294c:	br	x17

0000000000002950 <Perl_newCONSTSUB@plt>:
    2950:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2954:	ldr	x17, [x16, #128]
    2958:	add	x16, x16, #0x80
    295c:	br	x17

0000000000002960 <Perl_newSV@plt>:
    2960:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2964:	ldr	x17, [x16, #136]
    2968:	add	x16, x16, #0x88
    296c:	br	x17

0000000000002970 <Perl_sv_force_normal_flags@plt>:
    2970:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2974:	ldr	x17, [x16, #144]
    2978:	add	x16, x16, #0x90
    297c:	br	x17

0000000000002980 <Perl_warner@plt>:
    2980:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2984:	ldr	x17, [x16, #152]
    2988:	add	x16, x16, #0x98
    298c:	br	x17

0000000000002990 <Perl_sv_setiv_mg@plt>:
    2990:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2994:	ldr	x17, [x16, #160]
    2998:	add	x16, x16, #0xa0
    299c:	br	x17

00000000000029a0 <Perl_gv_stashpvn@plt>:
    29a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    29a4:	ldr	x17, [x16, #168]
    29a8:	add	x16, x16, #0xa8
    29ac:	br	x17

00000000000029b0 <Perl__is_utf8_char_helper@plt>:
    29b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    29b4:	ldr	x17, [x16, #176]
    29b8:	add	x16, x16, #0xb0
    29bc:	br	x17

00000000000029c0 <Perl_sv_bless@plt>:
    29c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    29c4:	ldr	x17, [x16, #184]
    29c8:	add	x16, x16, #0xb8
    29cc:	br	x17

00000000000029d0 <Perl_sv_2pv_flags@plt>:
    29d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    29d4:	ldr	x17, [x16, #192]
    29d8:	add	x16, x16, #0xc0
    29dc:	br	x17

00000000000029e0 <Perl_xs_boot_epilog@plt>:
    29e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    29e4:	ldr	x17, [x16, #200]
    29e8:	add	x16, x16, #0xc8
    29ec:	br	x17

00000000000029f0 <__stack_chk_fail@plt>:
    29f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    29f4:	ldr	x17, [x16, #208]
    29f8:	add	x16, x16, #0xd0
    29fc:	br	x17

0000000000002a00 <__gmon_start__@plt>:
    2a00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a04:	ldr	x17, [x16, #216]
    2a08:	add	x16, x16, #0xd8
    2a0c:	br	x17

0000000000002a10 <Perl_croak_xs_usage@plt>:
    2a10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a14:	ldr	x17, [x16, #224]
    2a18:	add	x16, x16, #0xe0
    2a1c:	br	x17

0000000000002a20 <Perl_savetmps@plt>:
    2a20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a24:	ldr	x17, [x16, #232]
    2a28:	add	x16, x16, #0xe8
    2a2c:	br	x17

0000000000002a30 <Perl_sv_grow@plt>:
    2a30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a34:	ldr	x17, [x16, #240]
    2a38:	add	x16, x16, #0xf0
    2a3c:	br	x17

0000000000002a40 <Perl_sv_utf8_upgrade_flags_grow@plt>:
    2a40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a44:	ldr	x17, [x16, #248]
    2a48:	add	x16, x16, #0xf8
    2a4c:	br	x17

0000000000002a50 <Perl_gv_stashpv@plt>:
    2a50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x17, [x16, #256]
    2a58:	add	x16, x16, #0x100
    2a5c:	br	x17

0000000000002a60 <Perl_sv_len@plt>:
    2a60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a64:	ldr	x17, [x16, #264]
    2a68:	add	x16, x16, #0x108
    2a6c:	br	x17

0000000000002a70 <Perl_croak@plt>:
    2a70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a74:	ldr	x17, [x16, #272]
    2a78:	add	x16, x16, #0x110
    2a7c:	br	x17

0000000000002a80 <memcmp@plt>:
    2a80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a84:	ldr	x17, [x16, #280]
    2a88:	add	x16, x16, #0x118
    2a8c:	br	x17

0000000000002a90 <Perl_croak_nocontext@plt>:
    2a90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2a94:	ldr	x17, [x16, #288]
    2a98:	add	x16, x16, #0x120
    2a9c:	br	x17

0000000000002aa0 <Perl_newXS_deffile@plt>:
    2aa0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2aa4:	ldr	x17, [x16, #296]
    2aa8:	add	x16, x16, #0x128
    2aac:	br	x17

0000000000002ab0 <Perl_mg_set@plt>:
    2ab0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2ab4:	ldr	x17, [x16, #304]
    2ab8:	add	x16, x16, #0x130
    2abc:	br	x17

0000000000002ac0 <Perl_sv_setsv_flags@plt>:
    2ac0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2ac4:	ldr	x17, [x16, #312]
    2ac8:	add	x16, x16, #0x138
    2acc:	br	x17

0000000000002ad0 <Perl_newXS_flags@plt>:
    2ad0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2ad4:	ldr	x17, [x16, #320]
    2ad8:	add	x16, x16, #0x140
    2adc:	br	x17

0000000000002ae0 <Perl_sv_2mortal@plt>:
    2ae0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2ae4:	ldr	x17, [x16, #328]
    2ae8:	add	x16, x16, #0x148
    2aec:	br	x17

0000000000002af0 <Perl_mg_get@plt>:
    2af0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2af4:	ldr	x17, [x16, #336]
    2af8:	add	x16, x16, #0x150
    2afc:	br	x17

0000000000002b00 <Perl_eval_pv@plt>:
    2b00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16, #344]
    2b08:	add	x16, x16, #0x158
    2b0c:	br	x17

0000000000002b10 <Perl_newSVuv@plt>:
    2b10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #352]
    2b18:	add	x16, x16, #0x160
    2b1c:	br	x17

0000000000002b20 <Perl_call_pv@plt>:
    2b20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #360]
    2b28:	add	x16, x16, #0x168
    2b2c:	br	x17

0000000000002b30 <Perl_sv_catsv_flags@plt>:
    2b30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #368]
    2b38:	add	x16, x16, #0x170
    2b3c:	br	x17

0000000000002b40 <Perl_xs_handshake@plt>:
    2b40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #376]
    2b48:	add	x16, x16, #0x178
    2b4c:	br	x17

0000000000002b50 <Perl_utf8n_to_uvuni@plt>:
    2b50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #384]
    2b58:	add	x16, x16, #0x180
    2b5c:	br	x17

0000000000002b60 <Perl_utf8_length@plt>:
    2b60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #392]
    2b68:	add	x16, x16, #0x188
    2b6c:	br	x17

0000000000002b70 <Perl_free_tmps@plt>:
    2b70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #400]
    2b78:	add	x16, x16, #0x190
    2b7c:	br	x17

0000000000002b80 <Perl_markstack_grow@plt>:
    2b80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #408]
    2b88:	add	x16, x16, #0x198
    2b8c:	br	x17

0000000000002b90 <Perl_hv_common_key_len@plt>:
    2b90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #416]
    2b98:	add	x16, x16, #0x1a0
    2b9c:	br	x17

0000000000002ba0 <Perl_sv_setpvn@plt>:
    2ba0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #424]
    2ba8:	add	x16, x16, #0x1a8
    2bac:	br	x17

0000000000002bb0 <Perl_sv_2pvutf8@plt>:
    2bb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #432]
    2bb8:	add	x16, x16, #0x1b0
    2bbc:	br	x17

0000000000002bc0 <do_encode@plt>:
    2bc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #440]
    2bc8:	add	x16, x16, #0x1b8
    2bcc:	br	x17

0000000000002bd0 <Perl_newSVpvf_nocontext@plt>:
    2bd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #448]
    2bd8:	add	x16, x16, #0x1c0
    2bdc:	br	x17

0000000000002be0 <Perl_sv_magic@plt>:
    2be0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #456]
    2be8:	add	x16, x16, #0x1c8
    2bec:	br	x17

0000000000002bf0 <Perl_call_sv@plt>:
    2bf0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #464]
    2bf8:	add	x16, x16, #0x1d0
    2bfc:	br	x17

0000000000002c00 <Perl_sv_free2@plt>:
    2c00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #472]
    2c08:	add	x16, x16, #0x1d8
    2c0c:	br	x17

0000000000002c10 <Perl_ckwarn@plt>:
    2c10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #480]
    2c18:	add	x16, x16, #0x1e0
    2c1c:	br	x17

0000000000002c20 <Perl_push_scope@plt>:
    2c20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #488]
    2c28:	add	x16, x16, #0x1e8
    2c2c:	br	x17

0000000000002c30 <Perl_newSViv@plt>:
    2c30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #496]
    2c38:	add	x16, x16, #0x1f0
    2c3c:	br	x17

0000000000002c40 <Perl_newSVsv_flags@plt>:
    2c40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #504]
    2c48:	add	x16, x16, #0x1f8
    2c4c:	br	x17

0000000000002c50 <Perl_newSVpvn@plt>:
    2c50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #512]
    2c58:	add	x16, x16, #0x200
    2c5c:	br	x17

0000000000002c60 <Perl_sv_newmortal@plt>:
    2c60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #520]
    2c68:	add	x16, x16, #0x208
    2c6c:	br	x17

0000000000002c70 <Perl_sv_tainted@plt>:
    2c70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #528]
    2c78:	add	x16, x16, #0x210
    2c7c:	br	x17

0000000000002c80 <Perl_get_hv@plt>:
    2c80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #536]
    2c88:	add	x16, x16, #0x218
    2c8c:	br	x17

Disassembly of section .text:

0000000000002c90 <call_weak_fn>:
    2c90:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    2c94:	ldr	x0, [x0, #3984]
    2c98:	cbz	x0, 2ca0 <call_weak_fn+0x10>
    2c9c:	b	2a00 <__gmon_start__@plt>
    2ca0:	ret

0000000000002ca4 <deregister_tm_clones>:
    2ca4:	stp	x29, x30, [sp, #-32]!
    2ca8:	mov	x29, sp
    2cac:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2cb0:	add	x0, x0, #0x228
    2cb4:	str	x0, [sp, #24]
    2cb8:	ldr	x0, [sp, #24]
    2cbc:	str	x0, [sp, #24]
    2cc0:	ldr	x1, [sp, #24]
    2cc4:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2cc8:	add	x0, x0, #0x228
    2ccc:	cmp	x1, x0
    2cd0:	b.eq	2d08 <deregister_tm_clones+0x64>  // b.none
    2cd4:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    2cd8:	ldr	x0, [x0, #3952]
    2cdc:	str	x0, [sp, #16]
    2ce0:	ldr	x0, [sp, #16]
    2ce4:	str	x0, [sp, #16]
    2ce8:	ldr	x0, [sp, #16]
    2cec:	cmp	x0, #0x0
    2cf0:	b.eq	2d0c <deregister_tm_clones+0x68>  // b.none
    2cf4:	ldr	x1, [sp, #16]
    2cf8:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2cfc:	add	x0, x0, #0x228
    2d00:	blr	x1
    2d04:	b	2d0c <deregister_tm_clones+0x68>
    2d08:	nop
    2d0c:	ldp	x29, x30, [sp], #32
    2d10:	ret

0000000000002d14 <register_tm_clones>:
    2d14:	stp	x29, x30, [sp, #-48]!
    2d18:	mov	x29, sp
    2d1c:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2d20:	add	x0, x0, #0x228
    2d24:	str	x0, [sp, #40]
    2d28:	ldr	x0, [sp, #40]
    2d2c:	str	x0, [sp, #40]
    2d30:	ldr	x1, [sp, #40]
    2d34:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2d38:	add	x0, x0, #0x228
    2d3c:	sub	x0, x1, x0
    2d40:	asr	x0, x0, #3
    2d44:	lsr	x1, x0, #63
    2d48:	add	x0, x1, x0
    2d4c:	asr	x0, x0, #1
    2d50:	str	x0, [sp, #32]
    2d54:	ldr	x0, [sp, #32]
    2d58:	cmp	x0, #0x0
    2d5c:	b.eq	2d98 <register_tm_clones+0x84>  // b.none
    2d60:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    2d64:	ldr	x0, [x0, #4040]
    2d68:	str	x0, [sp, #24]
    2d6c:	ldr	x0, [sp, #24]
    2d70:	str	x0, [sp, #24]
    2d74:	ldr	x0, [sp, #24]
    2d78:	cmp	x0, #0x0
    2d7c:	b.eq	2d9c <register_tm_clones+0x88>  // b.none
    2d80:	ldr	x2, [sp, #24]
    2d84:	ldr	x1, [sp, #32]
    2d88:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2d8c:	add	x0, x0, #0x228
    2d90:	blr	x2
    2d94:	b	2d9c <register_tm_clones+0x88>
    2d98:	nop
    2d9c:	ldp	x29, x30, [sp], #48
    2da0:	ret

0000000000002da4 <__do_global_dtors_aux>:
    2da4:	stp	x29, x30, [sp, #-16]!
    2da8:	mov	x29, sp
    2dac:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2db0:	add	x0, x0, #0x228
    2db4:	ldrb	w0, [x0]
    2db8:	and	x0, x0, #0xff
    2dbc:	cmp	x0, #0x0
    2dc0:	b.ne	2dfc <__do_global_dtors_aux+0x58>  // b.any
    2dc4:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    2dc8:	ldr	x0, [x0, #3968]
    2dcc:	cmp	x0, #0x0
    2dd0:	b.eq	2de4 <__do_global_dtors_aux+0x40>  // b.none
    2dd4:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2dd8:	add	x0, x0, #0x220
    2ddc:	ldr	x0, [x0]
    2de0:	bl	2920 <__cxa_finalize@plt>
    2de4:	bl	2ca4 <deregister_tm_clones>
    2de8:	adrp	x0, 1d000 <memcpy@GLIBC_2.17>
    2dec:	add	x0, x0, #0x228
    2df0:	mov	w1, #0x1                   	// #1
    2df4:	strb	w1, [x0]
    2df8:	b	2e00 <__do_global_dtors_aux+0x5c>
    2dfc:	nop
    2e00:	ldp	x29, x30, [sp], #16
    2e04:	ret

0000000000002e08 <frame_dummy>:
    2e08:	stp	x29, x30, [sp, #-16]!
    2e0c:	mov	x29, sp
    2e10:	bl	2d14 <register_tm_clones>
    2e14:	nop
    2e18:	ldp	x29, x30, [sp], #16
    2e1c:	ret

0000000000002e20 <S_POPMARK>:
    2e20:	sub	sp, sp, #0x10
    2e24:	str	x0, [sp, #8]
    2e28:	ldr	x0, [sp, #8]
    2e2c:	ldr	x0, [x0, #120]
    2e30:	sub	x2, x0, #0x4
    2e34:	ldr	x1, [sp, #8]
    2e38:	str	x2, [x1, #120]
    2e3c:	ldr	w0, [x0]
    2e40:	add	sp, sp, #0x10
    2e44:	ret

0000000000002e48 <S_SvREFCNT_inc>:
    2e48:	sub	sp, sp, #0x10
    2e4c:	str	x0, [sp, #8]
    2e50:	ldr	x0, [sp, #8]
    2e54:	cmp	x0, #0x0
    2e58:	cset	w0, ne  // ne = any
    2e5c:	and	w0, w0, #0xff
    2e60:	and	x0, x0, #0xff
    2e64:	cmp	x0, #0x0
    2e68:	b.eq	2e80 <S_SvREFCNT_inc+0x38>  // b.none
    2e6c:	ldr	x0, [sp, #8]
    2e70:	ldr	w0, [x0, #8]
    2e74:	add	w1, w0, #0x1
    2e78:	ldr	x0, [sp, #8]
    2e7c:	str	w1, [x0, #8]
    2e80:	ldr	x0, [sp, #8]
    2e84:	add	sp, sp, #0x10
    2e88:	ret

0000000000002e8c <S_SvREFCNT_dec>:
    2e8c:	stp	x29, x30, [sp, #-48]!
    2e90:	mov	x29, sp
    2e94:	str	x0, [sp, #24]
    2e98:	str	x1, [sp, #16]
    2e9c:	ldr	x0, [sp, #16]
    2ea0:	cmp	x0, #0x0
    2ea4:	cset	w0, ne  // ne = any
    2ea8:	and	w0, w0, #0xff
    2eac:	and	x0, x0, #0xff
    2eb0:	cmp	x0, #0x0
    2eb4:	b.eq	2f04 <S_SvREFCNT_dec+0x78>  // b.none
    2eb8:	ldr	x0, [sp, #16]
    2ebc:	ldr	w0, [x0, #8]
    2ec0:	str	w0, [sp, #44]
    2ec4:	ldr	w0, [sp, #44]
    2ec8:	cmp	w0, #0x1
    2ecc:	cset	w0, hi  // hi = pmore
    2ed0:	and	w0, w0, #0xff
    2ed4:	and	x0, x0, #0xff
    2ed8:	cmp	x0, #0x0
    2edc:	b.eq	2ef4 <S_SvREFCNT_dec+0x68>  // b.none
    2ee0:	ldr	w0, [sp, #44]
    2ee4:	sub	w1, w0, #0x1
    2ee8:	ldr	x0, [sp, #16]
    2eec:	str	w1, [x0, #8]
    2ef0:	b	2f04 <S_SvREFCNT_dec+0x78>
    2ef4:	ldr	w2, [sp, #44]
    2ef8:	ldr	x1, [sp, #16]
    2efc:	ldr	x0, [sp, #24]
    2f00:	bl	2c00 <Perl_sv_free2@plt>
    2f04:	nop
    2f08:	ldp	x29, x30, [sp], #48
    2f0c:	ret

0000000000002f10 <S_croak_memory_wrap>:
    2f10:	stp	x29, x30, [sp, #-16]!
    2f14:	mov	x29, sp
    2f18:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    2f1c:	ldr	x1, [x0, #4008]
    2f20:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    2f24:	add	x0, x0, #0xd78
    2f28:	bl	2a90 <Perl_croak_nocontext@plt>

0000000000002f2c <S_is_utf8_invariant_string_loc>:
    2f2c:	stp	x29, x30, [sp, #-64]!
    2f30:	mov	x29, sp
    2f34:	str	x0, [sp, #40]
    2f38:	str	x1, [sp, #32]
    2f3c:	str	x2, [sp, #24]
    2f40:	ldr	x0, [sp, #40]
    2f44:	str	x0, [sp, #48]
    2f48:	ldr	x0, [sp, #32]
    2f4c:	cmp	x0, #0x0
    2f50:	b.ne	2f60 <S_is_utf8_invariant_string_loc+0x34>  // b.any
    2f54:	ldr	x0, [sp, #40]
    2f58:	bl	2890 <strlen@plt>
    2f5c:	str	x0, [sp, #32]
    2f60:	ldr	x1, [sp, #40]
    2f64:	ldr	x0, [sp, #32]
    2f68:	add	x0, x1, x0
    2f6c:	str	x0, [sp, #56]
    2f70:	ldr	x1, [sp, #56]
    2f74:	ldr	x0, [sp, #48]
    2f78:	sub	x0, x1, x0
    2f7c:	mov	x2, x0
    2f80:	ldr	x0, [sp, #48]
    2f84:	lsr	x1, x0, #1
    2f88:	ldr	x0, [sp, #48]
    2f8c:	orr	x1, x1, x0
    2f90:	ldr	x0, [sp, #48]
    2f94:	lsr	x0, x0, #2
    2f98:	and	x0, x0, #0x1
    2f9c:	orr	x0, x1, x0
    2fa0:	and	x0, x0, #0x1
    2fa4:	add	x0, x0, #0x1
    2fa8:	lsl	x1, x0, #3
    2fac:	ldr	x0, [sp, #48]
    2fb0:	and	x0, x0, #0x7
    2fb4:	sub	x0, x1, x0
    2fb8:	cmp	x2, x0
    2fbc:	b.cc	30c8 <S_is_utf8_invariant_string_loc+0x19c>  // b.lo, b.ul, b.last
    2fc0:	b	3004 <S_is_utf8_invariant_string_loc+0xd8>
    2fc4:	ldr	x0, [sp, #48]
    2fc8:	ldrb	w0, [x0]
    2fcc:	sxtb	w0, w0
    2fd0:	cmp	w0, #0x0
    2fd4:	b.ge	2ff8 <S_is_utf8_invariant_string_loc+0xcc>  // b.tcont
    2fd8:	ldr	x0, [sp, #24]
    2fdc:	cmp	x0, #0x0
    2fe0:	b.eq	2ff0 <S_is_utf8_invariant_string_loc+0xc4>  // b.none
    2fe4:	ldr	x0, [sp, #24]
    2fe8:	ldr	x1, [sp, #48]
    2fec:	str	x1, [x0]
    2ff0:	mov	w0, #0x0                   	// #0
    2ff4:	b	30dc <S_is_utf8_invariant_string_loc+0x1b0>
    2ff8:	ldr	x0, [sp, #48]
    2ffc:	add	x0, x0, #0x1
    3000:	str	x0, [sp, #48]
    3004:	ldr	x0, [sp, #48]
    3008:	and	x0, x0, #0x7
    300c:	cmp	x0, #0x0
    3010:	b.ne	2fc4 <S_is_utf8_invariant_string_loc+0x98>  // b.any
    3014:	ldr	x0, [sp, #48]
    3018:	ldr	x0, [x0]
    301c:	and	x0, x0, #0x8080808080808080
    3020:	cmp	x0, #0x0
    3024:	b.eq	3064 <S_is_utf8_invariant_string_loc+0x138>  // b.none
    3028:	ldr	x0, [sp, #24]
    302c:	cmp	x0, #0x0
    3030:	b.ne	303c <S_is_utf8_invariant_string_loc+0x110>  // b.any
    3034:	mov	w0, #0x0                   	// #0
    3038:	b	30dc <S_is_utf8_invariant_string_loc+0x1b0>
    303c:	ldr	x0, [sp, #48]
    3040:	ldr	x0, [x0]
    3044:	bl	30e4 <S__variant_byte_number>
    3048:	mov	w0, w0
    304c:	ldr	x1, [sp, #48]
    3050:	add	x1, x1, x0
    3054:	ldr	x0, [sp, #24]
    3058:	str	x1, [x0]
    305c:	mov	w0, #0x0                   	// #0
    3060:	b	30dc <S_is_utf8_invariant_string_loc+0x1b0>
    3064:	ldr	x0, [sp, #48]
    3068:	add	x0, x0, #0x8
    306c:	str	x0, [sp, #48]
    3070:	ldr	x0, [sp, #48]
    3074:	add	x0, x0, #0x8
    3078:	ldr	x1, [sp, #56]
    307c:	cmp	x1, x0
    3080:	b.cs	3014 <S_is_utf8_invariant_string_loc+0xe8>  // b.hs, b.nlast
    3084:	b	30c8 <S_is_utf8_invariant_string_loc+0x19c>
    3088:	ldr	x0, [sp, #48]
    308c:	ldrb	w0, [x0]
    3090:	sxtb	w0, w0
    3094:	cmp	w0, #0x0
    3098:	b.ge	30bc <S_is_utf8_invariant_string_loc+0x190>  // b.tcont
    309c:	ldr	x0, [sp, #24]
    30a0:	cmp	x0, #0x0
    30a4:	b.eq	30b4 <S_is_utf8_invariant_string_loc+0x188>  // b.none
    30a8:	ldr	x0, [sp, #24]
    30ac:	ldr	x1, [sp, #48]
    30b0:	str	x1, [x0]
    30b4:	mov	w0, #0x0                   	// #0
    30b8:	b	30dc <S_is_utf8_invariant_string_loc+0x1b0>
    30bc:	ldr	x0, [sp, #48]
    30c0:	add	x0, x0, #0x1
    30c4:	str	x0, [sp, #48]
    30c8:	ldr	x1, [sp, #48]
    30cc:	ldr	x0, [sp, #56]
    30d0:	cmp	x1, x0
    30d4:	b.cc	3088 <S_is_utf8_invariant_string_loc+0x15c>  // b.lo, b.ul, b.last
    30d8:	mov	w0, #0x1                   	// #1
    30dc:	ldp	x29, x30, [sp], #64
    30e0:	ret

00000000000030e4 <S__variant_byte_number>:
    30e4:	sub	sp, sp, #0x10
    30e8:	str	x0, [sp, #8]
    30ec:	ldr	x0, [sp, #8]
    30f0:	and	x0, x0, #0x8080808080808080
    30f4:	str	x0, [sp, #8]
    30f8:	ldr	x0, [sp, #8]
    30fc:	lsr	x0, x0, #1
    3100:	str	x0, [sp, #8]
    3104:	ldr	x0, [sp, #8]
    3108:	sub	x1, x0, #0x1
    310c:	ldr	x0, [sp, #8]
    3110:	eor	x0, x1, x0
    3114:	add	x0, x0, #0x1
    3118:	str	x0, [sp, #8]
    311c:	ldr	x0, [sp, #8]
    3120:	lsr	x1, x0, #7
    3124:	mov	x0, #0x373f                	// #14143
    3128:	movk	x0, #0x272f, lsl #16
    312c:	movk	x0, #0x171f, lsl #32
    3130:	movk	x0, #0x70f, lsl #48
    3134:	mul	x0, x1, x0
    3138:	str	x0, [sp, #8]
    313c:	ldr	x0, [sp, #8]
    3140:	lsr	x0, x0, #56
    3144:	str	x0, [sp, #8]
    3148:	ldr	x0, [sp, #8]
    314c:	add	x0, x0, #0x1
    3150:	lsr	x0, x0, #3
    3154:	sub	x0, x0, #0x1
    3158:	str	x0, [sp, #8]
    315c:	ldr	x0, [sp, #8]
    3160:	add	sp, sp, #0x10
    3164:	ret

0000000000003168 <Perl_is_utf8_string_loclen>:
    3168:	stp	x29, x30, [sp, #-96]!
    316c:	mov	x29, sp
    3170:	str	x0, [sp, #40]
    3174:	str	x1, [sp, #32]
    3178:	str	x2, [sp, #24]
    317c:	str	x3, [sp, #16]
    3180:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3184:	ldr	x0, [x0, #3992]
    3188:	ldr	x1, [x0]
    318c:	str	x1, [sp, #88]
    3190:	mov	x1, #0x0                   	// #0
    3194:	ldr	x0, [sp, #32]
    3198:	cmp	x0, #0x0
    319c:	b.ne	31ac <Perl_is_utf8_string_loclen+0x44>  // b.any
    31a0:	ldr	x0, [sp, #40]
    31a4:	bl	2890 <strlen@plt>
    31a8:	str	x0, [sp, #32]
    31ac:	add	x0, sp, #0x30
    31b0:	mov	x2, x0
    31b4:	ldr	x1, [sp, #32]
    31b8:	ldr	x0, [sp, #40]
    31bc:	bl	2f2c <S_is_utf8_invariant_string_loc>
    31c0:	and	w0, w0, #0xff
    31c4:	cmp	w0, #0x0
    31c8:	b.eq	320c <Perl_is_utf8_string_loclen+0xa4>  // b.none
    31cc:	ldr	x0, [sp, #16]
    31d0:	cmp	x0, #0x0
    31d4:	b.eq	31e4 <Perl_is_utf8_string_loclen+0x7c>  // b.none
    31d8:	ldr	x0, [sp, #16]
    31dc:	ldr	x1, [sp, #32]
    31e0:	str	x1, [x0]
    31e4:	ldr	x0, [sp, #24]
    31e8:	cmp	x0, #0x0
    31ec:	b.eq	3204 <Perl_is_utf8_string_loclen+0x9c>  // b.none
    31f0:	ldr	x1, [sp, #40]
    31f4:	ldr	x0, [sp, #32]
    31f8:	add	x1, x1, x0
    31fc:	ldr	x0, [sp, #24]
    3200:	str	x1, [x0]
    3204:	mov	w0, #0x1                   	// #1
    3208:	b	32dc <Perl_is_utf8_string_loclen+0x174>
    320c:	ldr	x1, [sp, #40]
    3210:	ldr	x0, [sp, #32]
    3214:	add	x0, x1, x0
    3218:	str	x0, [sp, #72]
    321c:	ldr	x0, [sp, #48]
    3220:	str	x0, [sp, #56]
    3224:	ldr	x1, [sp, #48]
    3228:	ldr	x0, [sp, #40]
    322c:	sub	x0, x1, x0
    3230:	str	x0, [sp, #64]
    3234:	b	3280 <Perl_is_utf8_string_loclen+0x118>
    3238:	ldr	x1, [sp, #72]
    323c:	ldr	x0, [sp, #56]
    3240:	bl	330c <S_isUTF8_CHAR>
    3244:	str	x0, [sp, #80]
    3248:	ldr	x0, [sp, #80]
    324c:	cmp	x0, #0x0
    3250:	cset	w0, eq  // eq = none
    3254:	and	w0, w0, #0xff
    3258:	and	x0, x0, #0xff
    325c:	cmp	x0, #0x0
    3260:	b.ne	3294 <Perl_is_utf8_string_loclen+0x12c>  // b.any
    3264:	ldr	x1, [sp, #56]
    3268:	ldr	x0, [sp, #80]
    326c:	add	x0, x1, x0
    3270:	str	x0, [sp, #56]
    3274:	ldr	x0, [sp, #64]
    3278:	add	x0, x0, #0x1
    327c:	str	x0, [sp, #64]
    3280:	ldr	x1, [sp, #56]
    3284:	ldr	x0, [sp, #72]
    3288:	cmp	x1, x0
    328c:	b.cc	3238 <Perl_is_utf8_string_loclen+0xd0>  // b.lo, b.ul, b.last
    3290:	b	3298 <Perl_is_utf8_string_loclen+0x130>
    3294:	nop
    3298:	ldr	x0, [sp, #16]
    329c:	cmp	x0, #0x0
    32a0:	b.eq	32b0 <Perl_is_utf8_string_loclen+0x148>  // b.none
    32a4:	ldr	x0, [sp, #16]
    32a8:	ldr	x1, [sp, #64]
    32ac:	str	x1, [x0]
    32b0:	ldr	x0, [sp, #24]
    32b4:	cmp	x0, #0x0
    32b8:	b.eq	32c8 <Perl_is_utf8_string_loclen+0x160>  // b.none
    32bc:	ldr	x0, [sp, #24]
    32c0:	ldr	x1, [sp, #56]
    32c4:	str	x1, [x0]
    32c8:	ldr	x1, [sp, #56]
    32cc:	ldr	x0, [sp, #72]
    32d0:	cmp	x1, x0
    32d4:	cset	w0, eq  // eq = none
    32d8:	and	w0, w0, #0xff
    32dc:	mov	w1, w0
    32e0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    32e4:	ldr	x0, [x0, #3992]
    32e8:	ldr	x2, [sp, #88]
    32ec:	ldr	x0, [x0]
    32f0:	eor	x0, x2, x0
    32f4:	cmp	x0, #0x0
    32f8:	b.eq	3300 <Perl_is_utf8_string_loclen+0x198>  // b.none
    32fc:	bl	29f0 <__stack_chk_fail@plt>
    3300:	mov	w0, w1
    3304:	ldp	x29, x30, [sp], #96
    3308:	ret

000000000000330c <S_isUTF8_CHAR>:
    330c:	stp	x29, x30, [sp, #-48]!
    3310:	mov	x29, sp
    3314:	str	x0, [sp, #24]
    3318:	str	x1, [sp, #16]
    331c:	ldr	x0, [sp, #24]
    3320:	str	x0, [sp, #32]
    3324:	str	xzr, [sp, #40]
    3328:	b	339c <S_isUTF8_CHAR+0x90>
    332c:	ldr	x0, [sp, #32]
    3330:	ldrb	w0, [x0]
    3334:	mov	w2, w0
    3338:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    333c:	ldr	x1, [x0, #4032]
    3340:	sxtw	x0, w2
    3344:	ldrb	w0, [x1, x0]
    3348:	and	x1, x0, #0xff
    334c:	ldr	x0, [sp, #40]
    3350:	add	x0, x1, x0
    3354:	add	x0, x0, #0x100
    3358:	adrp	x1, 1c000 <__FRAME_END__+0xfee8>
    335c:	ldr	x1, [x1, #4032]
    3360:	ldrb	w0, [x1, x0]
    3364:	and	x0, x0, #0xff
    3368:	str	x0, [sp, #40]
    336c:	ldr	x0, [sp, #40]
    3370:	cmp	x0, #0x0
    3374:	b.eq	3388 <S_isUTF8_CHAR+0x7c>  // b.none
    3378:	ldr	x0, [sp, #32]
    337c:	add	x0, x0, #0x1
    3380:	str	x0, [sp, #32]
    3384:	b	339c <S_isUTF8_CHAR+0x90>
    3388:	ldr	x1, [sp, #32]
    338c:	ldr	x0, [sp, #24]
    3390:	sub	x0, x1, x0
    3394:	add	x0, x0, #0x1
    3398:	b	3404 <S_isUTF8_CHAR+0xf8>
    339c:	ldr	x1, [sp, #32]
    33a0:	ldr	x0, [sp, #16]
    33a4:	cmp	x1, x0
    33a8:	b.cs	33c8 <S_isUTF8_CHAR+0xbc>  // b.hs, b.nlast
    33ac:	ldr	x0, [sp, #40]
    33b0:	cmp	x0, #0x1
    33b4:	cset	w0, ne  // ne = any
    33b8:	and	w0, w0, #0xff
    33bc:	and	x0, x0, #0xff
    33c0:	cmp	x0, #0x0
    33c4:	b.ne	332c <S_isUTF8_CHAR+0x20>  // b.any
    33c8:	ldr	x0, [sp, #24]
    33cc:	ldrb	w0, [x0]
    33d0:	cmp	w0, #0xff
    33d4:	b.ne	3400 <S_isUTF8_CHAR+0xf4>  // b.any
    33d8:	ldr	x1, [sp, #16]
    33dc:	ldr	x0, [sp, #24]
    33e0:	sub	x0, x1, x0
    33e4:	cmp	x0, #0xc
    33e8:	b.le	3400 <S_isUTF8_CHAR+0xf4>
    33ec:	mov	w2, #0x0                   	// #0
    33f0:	ldr	x1, [sp, #16]
    33f4:	ldr	x0, [sp, #24]
    33f8:	bl	29b0 <Perl__is_utf8_char_helper@plt>
    33fc:	b	3404 <S_isUTF8_CHAR+0xf8>
    3400:	mov	x0, #0x0                   	// #0
    3404:	ldp	x29, x30, [sp], #48
    3408:	ret

000000000000340c <S_isSTRICT_UTF8_CHAR>:
    340c:	sub	sp, sp, #0x20
    3410:	str	x0, [sp, #8]
    3414:	str	x1, [sp]
    3418:	ldr	x0, [sp, #8]
    341c:	str	x0, [sp, #16]
    3420:	str	xzr, [sp, #24]
    3424:	b	3498 <S_isSTRICT_UTF8_CHAR+0x8c>
    3428:	ldr	x0, [sp, #16]
    342c:	ldrb	w0, [x0]
    3430:	mov	w2, w0
    3434:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3438:	ldr	x1, [x0, #3976]
    343c:	sxtw	x0, w2
    3440:	ldrb	w0, [x1, x0]
    3444:	and	x1, x0, #0xff
    3448:	ldr	x0, [sp, #24]
    344c:	add	x0, x1, x0
    3450:	add	x0, x0, #0x100
    3454:	adrp	x1, 1c000 <__FRAME_END__+0xfee8>
    3458:	ldr	x1, [x1, #3976]
    345c:	ldrb	w0, [x1, x0]
    3460:	and	x0, x0, #0xff
    3464:	str	x0, [sp, #24]
    3468:	ldr	x0, [sp, #24]
    346c:	cmp	x0, #0x0
    3470:	b.eq	3484 <S_isSTRICT_UTF8_CHAR+0x78>  // b.none
    3474:	ldr	x0, [sp, #16]
    3478:	add	x0, x0, #0x1
    347c:	str	x0, [sp, #16]
    3480:	b	3498 <S_isSTRICT_UTF8_CHAR+0x8c>
    3484:	ldr	x1, [sp, #16]
    3488:	ldr	x0, [sp, #8]
    348c:	sub	x0, x1, x0
    3490:	add	x0, x0, #0x1
    3494:	b	3524 <S_isSTRICT_UTF8_CHAR+0x118>
    3498:	ldr	x1, [sp, #16]
    349c:	ldr	x0, [sp]
    34a0:	cmp	x1, x0
    34a4:	b.cs	34c4 <S_isSTRICT_UTF8_CHAR+0xb8>  // b.hs, b.nlast
    34a8:	ldr	x0, [sp, #24]
    34ac:	cmp	x0, #0x1
    34b0:	cset	w0, ne  // ne = any
    34b4:	and	w0, w0, #0xff
    34b8:	and	x0, x0, #0xff
    34bc:	cmp	x0, #0x0
    34c0:	b.ne	3428 <S_isSTRICT_UTF8_CHAR+0x1c>  // b.any
    34c4:	ldr	x1, [sp]
    34c8:	ldr	x0, [sp, #8]
    34cc:	sub	x0, x1, x0
    34d0:	cmp	x0, #0x2
    34d4:	b.le	3520 <S_isSTRICT_UTF8_CHAR+0x114>
    34d8:	ldr	x0, [sp, #8]
    34dc:	ldrb	w0, [x0]
    34e0:	cmp	w0, #0xed
    34e4:	b.ne	3520 <S_isSTRICT_UTF8_CHAR+0x114>  // b.any
    34e8:	ldr	x0, [sp, #8]
    34ec:	add	x0, x0, #0x1
    34f0:	ldrb	w0, [x0]
    34f4:	sub	w0, w0, #0x80
    34f8:	cmp	w0, #0x1f
    34fc:	b.hi	3520 <S_isSTRICT_UTF8_CHAR+0x114>  // b.pmore
    3500:	ldr	x0, [sp, #8]
    3504:	add	x0, x0, #0x2
    3508:	ldrb	w0, [x0]
    350c:	sub	w0, w0, #0x80
    3510:	cmp	w0, #0x3f
    3514:	b.hi	3520 <S_isSTRICT_UTF8_CHAR+0x114>  // b.pmore
    3518:	mov	x0, #0x3                   	// #3
    351c:	b	3524 <S_isSTRICT_UTF8_CHAR+0x118>
    3520:	mov	x0, #0x0                   	// #0
    3524:	add	sp, sp, #0x20
    3528:	ret

000000000000352c <S_isC9_STRICT_UTF8_CHAR>:
    352c:	sub	sp, sp, #0x20
    3530:	str	x0, [sp, #8]
    3534:	str	x1, [sp]
    3538:	ldr	x0, [sp, #8]
    353c:	str	x0, [sp, #16]
    3540:	str	xzr, [sp, #24]
    3544:	b	35b8 <S_isC9_STRICT_UTF8_CHAR+0x8c>
    3548:	ldr	x0, [sp, #16]
    354c:	ldrb	w0, [x0]
    3550:	mov	w2, w0
    3554:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3558:	ldr	x1, [x0, #4016]
    355c:	sxtw	x0, w2
    3560:	ldrb	w0, [x1, x0]
    3564:	and	x1, x0, #0xff
    3568:	ldr	x0, [sp, #24]
    356c:	add	x0, x1, x0
    3570:	add	x0, x0, #0x100
    3574:	adrp	x1, 1c000 <__FRAME_END__+0xfee8>
    3578:	ldr	x1, [x1, #4016]
    357c:	ldrb	w0, [x1, x0]
    3580:	and	x0, x0, #0xff
    3584:	str	x0, [sp, #24]
    3588:	ldr	x0, [sp, #24]
    358c:	cmp	x0, #0x0
    3590:	b.eq	35a4 <S_isC9_STRICT_UTF8_CHAR+0x78>  // b.none
    3594:	ldr	x0, [sp, #16]
    3598:	add	x0, x0, #0x1
    359c:	str	x0, [sp, #16]
    35a0:	b	35b8 <S_isC9_STRICT_UTF8_CHAR+0x8c>
    35a4:	ldr	x1, [sp, #16]
    35a8:	ldr	x0, [sp, #8]
    35ac:	sub	x0, x1, x0
    35b0:	add	x0, x0, #0x1
    35b4:	b	35e8 <S_isC9_STRICT_UTF8_CHAR+0xbc>
    35b8:	ldr	x1, [sp, #16]
    35bc:	ldr	x0, [sp]
    35c0:	cmp	x1, x0
    35c4:	b.cs	35e4 <S_isC9_STRICT_UTF8_CHAR+0xb8>  // b.hs, b.nlast
    35c8:	ldr	x0, [sp, #24]
    35cc:	cmp	x0, #0x1
    35d0:	cset	w0, ne  // ne = any
    35d4:	and	w0, w0, #0xff
    35d8:	and	x0, x0, #0xff
    35dc:	cmp	x0, #0x0
    35e0:	b.ne	3548 <S_isC9_STRICT_UTF8_CHAR+0x1c>  // b.any
    35e4:	mov	x0, #0x0                   	// #0
    35e8:	add	sp, sp, #0x20
    35ec:	ret

00000000000035f0 <S_is_strict_utf8_string_loclen>:
    35f0:	stp	x29, x30, [sp, #-96]!
    35f4:	mov	x29, sp
    35f8:	str	x0, [sp, #40]
    35fc:	str	x1, [sp, #32]
    3600:	str	x2, [sp, #24]
    3604:	str	x3, [sp, #16]
    3608:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    360c:	ldr	x0, [x0, #3992]
    3610:	ldr	x1, [x0]
    3614:	str	x1, [sp, #88]
    3618:	mov	x1, #0x0                   	// #0
    361c:	ldr	x0, [sp, #32]
    3620:	cmp	x0, #0x0
    3624:	b.ne	3634 <S_is_strict_utf8_string_loclen+0x44>  // b.any
    3628:	ldr	x0, [sp, #40]
    362c:	bl	2890 <strlen@plt>
    3630:	str	x0, [sp, #32]
    3634:	add	x0, sp, #0x30
    3638:	mov	x2, x0
    363c:	ldr	x1, [sp, #32]
    3640:	ldr	x0, [sp, #40]
    3644:	bl	2f2c <S_is_utf8_invariant_string_loc>
    3648:	and	w0, w0, #0xff
    364c:	cmp	w0, #0x0
    3650:	b.eq	3694 <S_is_strict_utf8_string_loclen+0xa4>  // b.none
    3654:	ldr	x0, [sp, #16]
    3658:	cmp	x0, #0x0
    365c:	b.eq	366c <S_is_strict_utf8_string_loclen+0x7c>  // b.none
    3660:	ldr	x0, [sp, #16]
    3664:	ldr	x1, [sp, #32]
    3668:	str	x1, [x0]
    366c:	ldr	x0, [sp, #24]
    3670:	cmp	x0, #0x0
    3674:	b.eq	368c <S_is_strict_utf8_string_loclen+0x9c>  // b.none
    3678:	ldr	x1, [sp, #40]
    367c:	ldr	x0, [sp, #32]
    3680:	add	x1, x1, x0
    3684:	ldr	x0, [sp, #24]
    3688:	str	x1, [x0]
    368c:	mov	w0, #0x1                   	// #1
    3690:	b	3764 <S_is_strict_utf8_string_loclen+0x174>
    3694:	ldr	x1, [sp, #40]
    3698:	ldr	x0, [sp, #32]
    369c:	add	x0, x1, x0
    36a0:	str	x0, [sp, #72]
    36a4:	ldr	x0, [sp, #48]
    36a8:	str	x0, [sp, #56]
    36ac:	ldr	x1, [sp, #48]
    36b0:	ldr	x0, [sp, #40]
    36b4:	sub	x0, x1, x0
    36b8:	str	x0, [sp, #64]
    36bc:	b	3708 <S_is_strict_utf8_string_loclen+0x118>
    36c0:	ldr	x1, [sp, #72]
    36c4:	ldr	x0, [sp, #56]
    36c8:	bl	340c <S_isSTRICT_UTF8_CHAR>
    36cc:	str	x0, [sp, #80]
    36d0:	ldr	x0, [sp, #80]
    36d4:	cmp	x0, #0x0
    36d8:	cset	w0, eq  // eq = none
    36dc:	and	w0, w0, #0xff
    36e0:	and	x0, x0, #0xff
    36e4:	cmp	x0, #0x0
    36e8:	b.ne	371c <S_is_strict_utf8_string_loclen+0x12c>  // b.any
    36ec:	ldr	x1, [sp, #56]
    36f0:	ldr	x0, [sp, #80]
    36f4:	add	x0, x1, x0
    36f8:	str	x0, [sp, #56]
    36fc:	ldr	x0, [sp, #64]
    3700:	add	x0, x0, #0x1
    3704:	str	x0, [sp, #64]
    3708:	ldr	x1, [sp, #56]
    370c:	ldr	x0, [sp, #72]
    3710:	cmp	x1, x0
    3714:	b.cc	36c0 <S_is_strict_utf8_string_loclen+0xd0>  // b.lo, b.ul, b.last
    3718:	b	3720 <S_is_strict_utf8_string_loclen+0x130>
    371c:	nop
    3720:	ldr	x0, [sp, #16]
    3724:	cmp	x0, #0x0
    3728:	b.eq	3738 <S_is_strict_utf8_string_loclen+0x148>  // b.none
    372c:	ldr	x0, [sp, #16]
    3730:	ldr	x1, [sp, #64]
    3734:	str	x1, [x0]
    3738:	ldr	x0, [sp, #24]
    373c:	cmp	x0, #0x0
    3740:	b.eq	3750 <S_is_strict_utf8_string_loclen+0x160>  // b.none
    3744:	ldr	x0, [sp, #24]
    3748:	ldr	x1, [sp, #56]
    374c:	str	x1, [x0]
    3750:	ldr	x1, [sp, #56]
    3754:	ldr	x0, [sp, #72]
    3758:	cmp	x1, x0
    375c:	cset	w0, eq  // eq = none
    3760:	and	w0, w0, #0xff
    3764:	mov	w1, w0
    3768:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    376c:	ldr	x0, [x0, #3992]
    3770:	ldr	x2, [sp, #88]
    3774:	ldr	x0, [x0]
    3778:	eor	x0, x2, x0
    377c:	cmp	x0, #0x0
    3780:	b.eq	3788 <S_is_strict_utf8_string_loclen+0x198>  // b.none
    3784:	bl	29f0 <__stack_chk_fail@plt>
    3788:	mov	w0, w1
    378c:	ldp	x29, x30, [sp], #96
    3790:	ret

0000000000003794 <S_is_c9strict_utf8_string_loclen>:
    3794:	stp	x29, x30, [sp, #-96]!
    3798:	mov	x29, sp
    379c:	str	x0, [sp, #40]
    37a0:	str	x1, [sp, #32]
    37a4:	str	x2, [sp, #24]
    37a8:	str	x3, [sp, #16]
    37ac:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    37b0:	ldr	x0, [x0, #3992]
    37b4:	ldr	x1, [x0]
    37b8:	str	x1, [sp, #88]
    37bc:	mov	x1, #0x0                   	// #0
    37c0:	ldr	x0, [sp, #32]
    37c4:	cmp	x0, #0x0
    37c8:	b.ne	37d8 <S_is_c9strict_utf8_string_loclen+0x44>  // b.any
    37cc:	ldr	x0, [sp, #40]
    37d0:	bl	2890 <strlen@plt>
    37d4:	str	x0, [sp, #32]
    37d8:	add	x0, sp, #0x30
    37dc:	mov	x2, x0
    37e0:	ldr	x1, [sp, #32]
    37e4:	ldr	x0, [sp, #40]
    37e8:	bl	2f2c <S_is_utf8_invariant_string_loc>
    37ec:	and	w0, w0, #0xff
    37f0:	cmp	w0, #0x0
    37f4:	b.eq	3838 <S_is_c9strict_utf8_string_loclen+0xa4>  // b.none
    37f8:	ldr	x0, [sp, #16]
    37fc:	cmp	x0, #0x0
    3800:	b.eq	3810 <S_is_c9strict_utf8_string_loclen+0x7c>  // b.none
    3804:	ldr	x0, [sp, #16]
    3808:	ldr	x1, [sp, #32]
    380c:	str	x1, [x0]
    3810:	ldr	x0, [sp, #24]
    3814:	cmp	x0, #0x0
    3818:	b.eq	3830 <S_is_c9strict_utf8_string_loclen+0x9c>  // b.none
    381c:	ldr	x1, [sp, #40]
    3820:	ldr	x0, [sp, #32]
    3824:	add	x1, x1, x0
    3828:	ldr	x0, [sp, #24]
    382c:	str	x1, [x0]
    3830:	mov	w0, #0x1                   	// #1
    3834:	b	3908 <S_is_c9strict_utf8_string_loclen+0x174>
    3838:	ldr	x1, [sp, #40]
    383c:	ldr	x0, [sp, #32]
    3840:	add	x0, x1, x0
    3844:	str	x0, [sp, #72]
    3848:	ldr	x0, [sp, #48]
    384c:	str	x0, [sp, #56]
    3850:	ldr	x1, [sp, #48]
    3854:	ldr	x0, [sp, #40]
    3858:	sub	x0, x1, x0
    385c:	str	x0, [sp, #64]
    3860:	b	38ac <S_is_c9strict_utf8_string_loclen+0x118>
    3864:	ldr	x1, [sp, #72]
    3868:	ldr	x0, [sp, #56]
    386c:	bl	352c <S_isC9_STRICT_UTF8_CHAR>
    3870:	str	x0, [sp, #80]
    3874:	ldr	x0, [sp, #80]
    3878:	cmp	x0, #0x0
    387c:	cset	w0, eq  // eq = none
    3880:	and	w0, w0, #0xff
    3884:	and	x0, x0, #0xff
    3888:	cmp	x0, #0x0
    388c:	b.ne	38c0 <S_is_c9strict_utf8_string_loclen+0x12c>  // b.any
    3890:	ldr	x1, [sp, #56]
    3894:	ldr	x0, [sp, #80]
    3898:	add	x0, x1, x0
    389c:	str	x0, [sp, #56]
    38a0:	ldr	x0, [sp, #64]
    38a4:	add	x0, x0, #0x1
    38a8:	str	x0, [sp, #64]
    38ac:	ldr	x1, [sp, #56]
    38b0:	ldr	x0, [sp, #72]
    38b4:	cmp	x1, x0
    38b8:	b.cc	3864 <S_is_c9strict_utf8_string_loclen+0xd0>  // b.lo, b.ul, b.last
    38bc:	b	38c4 <S_is_c9strict_utf8_string_loclen+0x130>
    38c0:	nop
    38c4:	ldr	x0, [sp, #16]
    38c8:	cmp	x0, #0x0
    38cc:	b.eq	38dc <S_is_c9strict_utf8_string_loclen+0x148>  // b.none
    38d0:	ldr	x0, [sp, #16]
    38d4:	ldr	x1, [sp, #64]
    38d8:	str	x1, [x0]
    38dc:	ldr	x0, [sp, #24]
    38e0:	cmp	x0, #0x0
    38e4:	b.eq	38f4 <S_is_c9strict_utf8_string_loclen+0x160>  // b.none
    38e8:	ldr	x0, [sp, #24]
    38ec:	ldr	x1, [sp, #56]
    38f0:	str	x1, [x0]
    38f4:	ldr	x1, [sp, #56]
    38f8:	ldr	x0, [sp, #72]
    38fc:	cmp	x1, x0
    3900:	cset	w0, eq  // eq = none
    3904:	and	w0, w0, #0xff
    3908:	mov	w1, w0
    390c:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3910:	ldr	x0, [x0, #3992]
    3914:	ldr	x2, [sp, #88]
    3918:	ldr	x0, [x0]
    391c:	eor	x0, x2, x0
    3920:	cmp	x0, #0x0
    3924:	b.eq	392c <S_is_c9strict_utf8_string_loclen+0x198>  // b.none
    3928:	bl	29f0 <__stack_chk_fail@plt>
    392c:	mov	w0, w1
    3930:	ldp	x29, x30, [sp], #96
    3934:	ret

0000000000003938 <S_is_utf8_string_loclen_flags>:
    3938:	stp	x29, x30, [sp, #-112]!
    393c:	mov	x29, sp
    3940:	str	x0, [sp, #56]
    3944:	str	x1, [sp, #48]
    3948:	str	x2, [sp, #40]
    394c:	str	x3, [sp, #32]
    3950:	str	w4, [sp, #28]
    3954:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3958:	ldr	x0, [x0, #3992]
    395c:	ldr	x1, [x0]
    3960:	str	x1, [sp, #104]
    3964:	mov	x1, #0x0                   	// #0
    3968:	ldr	x0, [sp, #48]
    396c:	cmp	x0, #0x0
    3970:	b.ne	3980 <S_is_utf8_string_loclen_flags+0x48>  // b.any
    3974:	ldr	x0, [sp, #56]
    3978:	bl	2890 <strlen@plt>
    397c:	str	x0, [sp, #48]
    3980:	ldr	w0, [sp, #28]
    3984:	cmp	w0, #0x0
    3988:	b.ne	39a8 <S_is_utf8_string_loclen_flags+0x70>  // b.any
    398c:	ldr	x3, [sp, #32]
    3990:	ldr	x2, [sp, #40]
    3994:	ldr	x1, [sp, #48]
    3998:	ldr	x0, [sp, #56]
    399c:	bl	3168 <Perl_is_utf8_string_loclen>
    39a0:	and	w0, w0, #0xff
    39a4:	b	3bcc <S_is_utf8_string_loclen_flags+0x294>
    39a8:	ldr	w0, [sp, #28]
    39ac:	and	w1, w0, #0xffffbfff
    39b0:	mov	w0, #0x1500                	// #5376
    39b4:	cmp	w1, w0
    39b8:	b.ne	39d8 <S_is_utf8_string_loclen_flags+0xa0>  // b.any
    39bc:	ldr	x3, [sp, #32]
    39c0:	ldr	x2, [sp, #40]
    39c4:	ldr	x1, [sp, #48]
    39c8:	ldr	x0, [sp, #56]
    39cc:	bl	35f0 <S_is_strict_utf8_string_loclen>
    39d0:	and	w0, w0, #0xff
    39d4:	b	3bcc <S_is_utf8_string_loclen_flags+0x294>
    39d8:	ldr	w0, [sp, #28]
    39dc:	and	w1, w0, #0xffffbfff
    39e0:	mov	w0, #0x1100                	// #4352
    39e4:	cmp	w1, w0
    39e8:	b.ne	3a08 <S_is_utf8_string_loclen_flags+0xd0>  // b.any
    39ec:	ldr	x3, [sp, #32]
    39f0:	ldr	x2, [sp, #40]
    39f4:	ldr	x1, [sp, #48]
    39f8:	ldr	x0, [sp, #56]
    39fc:	bl	3794 <S_is_c9strict_utf8_string_loclen>
    3a00:	and	w0, w0, #0xff
    3a04:	b	3bcc <S_is_utf8_string_loclen_flags+0x294>
    3a08:	add	x0, sp, #0x40
    3a0c:	mov	x2, x0
    3a10:	ldr	x1, [sp, #48]
    3a14:	ldr	x0, [sp, #56]
    3a18:	bl	2f2c <S_is_utf8_invariant_string_loc>
    3a1c:	and	w0, w0, #0xff
    3a20:	cmp	w0, #0x0
    3a24:	b.eq	3a68 <S_is_utf8_string_loclen_flags+0x130>  // b.none
    3a28:	ldr	x0, [sp, #32]
    3a2c:	cmp	x0, #0x0
    3a30:	b.eq	3a40 <S_is_utf8_string_loclen_flags+0x108>  // b.none
    3a34:	ldr	x0, [sp, #32]
    3a38:	ldr	x1, [sp, #48]
    3a3c:	str	x1, [x0]
    3a40:	ldr	x0, [sp, #40]
    3a44:	cmp	x0, #0x0
    3a48:	b.eq	3a60 <S_is_utf8_string_loclen_flags+0x128>  // b.none
    3a4c:	ldr	x1, [sp, #56]
    3a50:	ldr	x0, [sp, #48]
    3a54:	add	x1, x1, x0
    3a58:	ldr	x0, [sp, #40]
    3a5c:	str	x1, [x0]
    3a60:	mov	w0, #0x1                   	// #1
    3a64:	b	3bcc <S_is_utf8_string_loclen_flags+0x294>
    3a68:	ldr	x1, [sp, #56]
    3a6c:	ldr	x0, [sp, #48]
    3a70:	add	x0, x1, x0
    3a74:	str	x0, [sp, #88]
    3a78:	ldr	x0, [sp, #64]
    3a7c:	str	x0, [sp, #72]
    3a80:	ldr	x1, [sp, #64]
    3a84:	ldr	x0, [sp, #56]
    3a88:	sub	x0, x1, x0
    3a8c:	str	x0, [sp, #80]
    3a90:	b	3b70 <S_is_utf8_string_loclen_flags+0x238>
    3a94:	ldr	x1, [sp, #88]
    3a98:	ldr	x0, [sp, #72]
    3a9c:	cmp	x1, x0
    3aa0:	cset	w0, ls  // ls = plast
    3aa4:	and	w0, w0, #0xff
    3aa8:	and	x0, x0, #0xff
    3aac:	cmp	x0, #0x0
    3ab0:	b.ne	3b30 <S_is_utf8_string_loclen_flags+0x1f8>  // b.any
    3ab4:	ldr	x0, [sp, #72]
    3ab8:	ldrb	w0, [x0]
    3abc:	sxtb	w0, w0
    3ac0:	cmp	w0, #0x0
    3ac4:	b.ge	3b28 <S_is_utf8_string_loclen_flags+0x1f0>  // b.tcont
    3ac8:	ldr	x1, [sp, #88]
    3acc:	ldr	x0, [sp, #72]
    3ad0:	sub	x1, x1, x0
    3ad4:	ldr	x0, [sp, #72]
    3ad8:	ldrb	w0, [x0]
    3adc:	mov	w3, w0
    3ae0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3ae4:	ldr	x2, [x0, #4064]
    3ae8:	sxtw	x0, w3
    3aec:	ldrb	w0, [x2, x0]
    3af0:	and	x0, x0, #0xff
    3af4:	cmp	x1, x0
    3af8:	cset	w0, lt  // lt = tstop
    3afc:	and	w0, w0, #0xff
    3b00:	and	x0, x0, #0xff
    3b04:	cmp	x0, #0x0
    3b08:	b.ne	3b20 <S_is_utf8_string_loclen_flags+0x1e8>  // b.any
    3b0c:	ldr	w2, [sp, #28]
    3b10:	ldr	x1, [sp, #88]
    3b14:	ldr	x0, [sp, #72]
    3b18:	bl	29b0 <Perl__is_utf8_char_helper@plt>
    3b1c:	b	3b34 <S_is_utf8_string_loclen_flags+0x1fc>
    3b20:	mov	x0, #0x0                   	// #0
    3b24:	b	3b34 <S_is_utf8_string_loclen_flags+0x1fc>
    3b28:	mov	x0, #0x1                   	// #1
    3b2c:	b	3b34 <S_is_utf8_string_loclen_flags+0x1fc>
    3b30:	mov	x0, #0x0                   	// #0
    3b34:	str	x0, [sp, #96]
    3b38:	ldr	x0, [sp, #96]
    3b3c:	cmp	x0, #0x0
    3b40:	cset	w0, eq  // eq = none
    3b44:	and	w0, w0, #0xff
    3b48:	and	x0, x0, #0xff
    3b4c:	cmp	x0, #0x0
    3b50:	b.ne	3b84 <S_is_utf8_string_loclen_flags+0x24c>  // b.any
    3b54:	ldr	x1, [sp, #72]
    3b58:	ldr	x0, [sp, #96]
    3b5c:	add	x0, x1, x0
    3b60:	str	x0, [sp, #72]
    3b64:	ldr	x0, [sp, #80]
    3b68:	add	x0, x0, #0x1
    3b6c:	str	x0, [sp, #80]
    3b70:	ldr	x1, [sp, #72]
    3b74:	ldr	x0, [sp, #88]
    3b78:	cmp	x1, x0
    3b7c:	b.cc	3a94 <S_is_utf8_string_loclen_flags+0x15c>  // b.lo, b.ul, b.last
    3b80:	b	3b88 <S_is_utf8_string_loclen_flags+0x250>
    3b84:	nop
    3b88:	ldr	x0, [sp, #32]
    3b8c:	cmp	x0, #0x0
    3b90:	b.eq	3ba0 <S_is_utf8_string_loclen_flags+0x268>  // b.none
    3b94:	ldr	x0, [sp, #32]
    3b98:	ldr	x1, [sp, #80]
    3b9c:	str	x1, [x0]
    3ba0:	ldr	x0, [sp, #40]
    3ba4:	cmp	x0, #0x0
    3ba8:	b.eq	3bb8 <S_is_utf8_string_loclen_flags+0x280>  // b.none
    3bac:	ldr	x0, [sp, #40]
    3bb0:	ldr	x1, [sp, #72]
    3bb4:	str	x1, [x0]
    3bb8:	ldr	x1, [sp, #72]
    3bbc:	ldr	x0, [sp, #88]
    3bc0:	cmp	x1, x0
    3bc4:	cset	w0, eq  // eq = none
    3bc8:	and	w0, w0, #0xff
    3bcc:	mov	w1, w0
    3bd0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3bd4:	ldr	x0, [x0, #3992]
    3bd8:	ldr	x2, [sp, #104]
    3bdc:	ldr	x0, [x0]
    3be0:	eor	x0, x2, x0
    3be4:	cmp	x0, #0x0
    3be8:	b.eq	3bf0 <S_is_utf8_string_loclen_flags+0x2b8>  // b.none
    3bec:	bl	29f0 <__stack_chk_fail@plt>
    3bf0:	mov	w0, w1
    3bf4:	ldp	x29, x30, [sp], #112
    3bf8:	ret

0000000000003bfc <S_is_utf8_valid_partial_char_flags>:
    3bfc:	stp	x29, x30, [sp, #-48]!
    3c00:	mov	x29, sp
    3c04:	str	x0, [sp, #40]
    3c08:	str	x1, [sp, #32]
    3c0c:	str	w2, [sp, #28]
    3c10:	ldr	x1, [sp, #40]
    3c14:	ldr	x0, [sp, #32]
    3c18:	cmp	x1, x0
    3c1c:	b.cs	3c54 <S_is_utf8_valid_partial_char_flags+0x58>  // b.hs, b.nlast
    3c20:	ldr	x0, [sp, #40]
    3c24:	ldrb	w0, [x0]
    3c28:	mov	w2, w0
    3c2c:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3c30:	ldr	x1, [x0, #4064]
    3c34:	sxtw	x0, w2
    3c38:	ldrb	w0, [x1, x0]
    3c3c:	and	x0, x0, #0xff
    3c40:	ldr	x1, [sp, #40]
    3c44:	add	x0, x1, x0
    3c48:	ldr	x1, [sp, #32]
    3c4c:	cmp	x1, x0
    3c50:	b.cc	3c5c <S_is_utf8_valid_partial_char_flags+0x60>  // b.lo, b.ul, b.last
    3c54:	mov	w0, #0x0                   	// #0
    3c58:	b	3c78 <S_is_utf8_valid_partial_char_flags+0x7c>
    3c5c:	ldr	w2, [sp, #28]
    3c60:	ldr	x1, [sp, #32]
    3c64:	ldr	x0, [sp, #40]
    3c68:	bl	29b0 <Perl__is_utf8_char_helper@plt>
    3c6c:	cmp	x0, #0x0
    3c70:	cset	w0, ne  // ne = any
    3c74:	and	w0, w0, #0xff
    3c78:	ldp	x29, x30, [sp], #48
    3c7c:	ret

0000000000003c80 <S_utf8n_to_uvchr_msgs>:
    3c80:	stp	x29, x30, [sp, #-112]!
    3c84:	mov	x29, sp
    3c88:	str	x0, [sp, #56]
    3c8c:	str	x1, [sp, #48]
    3c90:	str	x2, [sp, #40]
    3c94:	str	w3, [sp, #36]
    3c98:	str	x4, [sp, #24]
    3c9c:	str	x5, [sp, #16]
    3ca0:	ldr	x0, [sp, #56]
    3ca4:	str	x0, [sp, #88]
    3ca8:	ldr	x1, [sp, #88]
    3cac:	ldr	x0, [sp, #48]
    3cb0:	add	x0, x1, x0
    3cb4:	str	x0, [sp, #96]
    3cb8:	str	xzr, [sp, #72]
    3cbc:	str	xzr, [sp, #80]
    3cc0:	b	3dd0 <S_utf8n_to_uvchr_msgs+0x150>
    3cc4:	ldr	x0, [sp, #56]
    3cc8:	ldrb	w0, [x0]
    3ccc:	mov	w2, w0
    3cd0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    3cd4:	ldr	x1, [x0, #3976]
    3cd8:	sxtw	x0, w2
    3cdc:	ldrb	w0, [x1, x0]
    3ce0:	and	x0, x0, #0xff
    3ce4:	str	x0, [sp, #104]
    3ce8:	ldr	x0, [sp, #80]
    3cec:	cmp	x0, #0x0
    3cf0:	b.ne	3d18 <S_utf8n_to_uvchr_msgs+0x98>  // b.any
    3cf4:	ldr	x0, [sp, #104]
    3cf8:	mov	w1, w0
    3cfc:	mov	w0, #0xff                  	// #255
    3d00:	asr	w0, w0, w1
    3d04:	ldr	x1, [sp, #56]
    3d08:	ldrb	w1, [x1]
    3d0c:	and	w0, w0, w1
    3d10:	sxtw	x0, w0
    3d14:	b	3d34 <S_utf8n_to_uvchr_msgs+0xb4>
    3d18:	ldr	x0, [sp, #72]
    3d1c:	lsl	x1, x0, #6
    3d20:	ldr	x0, [sp, #56]
    3d24:	ldrb	w0, [x0]
    3d28:	and	x0, x0, #0xff
    3d2c:	and	x0, x0, #0x3f
    3d30:	orr	x0, x1, x0
    3d34:	str	x0, [sp, #72]
    3d38:	ldr	x1, [sp, #80]
    3d3c:	ldr	x0, [sp, #104]
    3d40:	add	x0, x1, x0
    3d44:	add	x0, x0, #0x100
    3d48:	adrp	x1, 1c000 <__FRAME_END__+0xfee8>
    3d4c:	ldr	x1, [x1, #3976]
    3d50:	ldrb	w0, [x1, x0]
    3d54:	and	x0, x0, #0xff
    3d58:	str	x0, [sp, #80]
    3d5c:	ldr	x0, [sp, #80]
    3d60:	cmp	x0, #0x0
    3d64:	b.eq	3d78 <S_utf8n_to_uvchr_msgs+0xf8>  // b.none
    3d68:	ldr	x0, [sp, #56]
    3d6c:	add	x0, x0, #0x1
    3d70:	str	x0, [sp, #56]
    3d74:	b	3dd0 <S_utf8n_to_uvchr_msgs+0x150>
    3d78:	ldr	x0, [sp, #40]
    3d7c:	cmp	x0, #0x0
    3d80:	b.eq	3da0 <S_utf8n_to_uvchr_msgs+0x120>  // b.none
    3d84:	ldr	x1, [sp, #56]
    3d88:	ldr	x0, [sp, #88]
    3d8c:	sub	x0, x1, x0
    3d90:	add	x0, x0, #0x1
    3d94:	mov	x1, x0
    3d98:	ldr	x0, [sp, #40]
    3d9c:	str	x1, [x0]
    3da0:	ldr	x0, [sp, #24]
    3da4:	cmp	x0, #0x0
    3da8:	b.eq	3db4 <S_utf8n_to_uvchr_msgs+0x134>  // b.none
    3dac:	ldr	x0, [sp, #24]
    3db0:	str	wzr, [x0]
    3db4:	ldr	x0, [sp, #16]
    3db8:	cmp	x0, #0x0
    3dbc:	b.eq	3dc8 <S_utf8n_to_uvchr_msgs+0x148>  // b.none
    3dc0:	ldr	x0, [sp, #16]
    3dc4:	str	xzr, [x0]
    3dc8:	ldr	x0, [sp, #72]
    3dcc:	b	3e18 <S_utf8n_to_uvchr_msgs+0x198>
    3dd0:	ldr	x1, [sp, #56]
    3dd4:	ldr	x0, [sp, #96]
    3dd8:	cmp	x1, x0
    3ddc:	b.cs	3dfc <S_utf8n_to_uvchr_msgs+0x17c>  // b.hs, b.nlast
    3de0:	ldr	x0, [sp, #80]
    3de4:	cmp	x0, #0x1
    3de8:	cset	w0, ne  // ne = any
    3dec:	and	w0, w0, #0xff
    3df0:	and	x0, x0, #0xff
    3df4:	cmp	x0, #0x0
    3df8:	b.ne	3cc4 <S_utf8n_to_uvchr_msgs+0x44>  // b.any
    3dfc:	ldr	x5, [sp, #16]
    3e00:	ldr	x4, [sp, #24]
    3e04:	ldr	w3, [sp, #36]
    3e08:	ldr	x2, [sp, #40]
    3e0c:	ldr	x1, [sp, #48]
    3e10:	ldr	x0, [sp, #88]
    3e14:	bl	28a0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    3e18:	ldp	x29, x30, [sp], #112
    3e1c:	ret

0000000000003e20 <Encode_XSEncoding>:
    3e20:	stp	x29, x30, [sp, #-96]!
    3e24:	mov	x29, sp
    3e28:	str	x0, [sp, #24]
    3e2c:	str	x1, [sp, #16]
    3e30:	ldr	x0, [sp, #24]
    3e34:	ldr	x0, [x0]
    3e38:	str	x0, [sp, #40]
    3e3c:	mov	w2, #0x1                   	// #1
    3e40:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    3e44:	add	x1, x0, #0xe20
    3e48:	ldr	x0, [sp, #24]
    3e4c:	bl	2a50 <Perl_gv_stashpv@plt>
    3e50:	str	x0, [sp, #56]
    3e54:	ldr	x0, [sp, #16]
    3e58:	mov	x1, x0
    3e5c:	ldr	x0, [sp, #24]
    3e60:	bl	2c30 <Perl_newSViv@plt>
    3e64:	str	x0, [sp, #64]
    3e68:	ldr	x1, [sp, #64]
    3e6c:	ldr	x0, [sp, #24]
    3e70:	bl	28e0 <Perl_newRV_noinc@plt>
    3e74:	ldr	x2, [sp, #56]
    3e78:	mov	x1, x0
    3e7c:	ldr	x0, [sp, #24]
    3e80:	bl	29c0 <Perl_sv_bless@plt>
    3e84:	str	x0, [sp, #72]
    3e88:	str	wzr, [sp, #36]
    3e8c:	ldr	x0, [sp, #64]
    3e90:	ldr	w0, [x0, #12]
    3e94:	orr	w1, w0, #0x4000
    3e98:	ldr	x0, [sp, #64]
    3e9c:	str	w1, [x0, #12]
    3ea0:	ldr	x0, [sp, #16]
    3ea4:	ldr	x1, [x0, #32]
    3ea8:	ldr	x0, [sp, #64]
    3eac:	str	x1, [x0, #16]
    3eb0:	ldr	x0, [sp, #24]
    3eb4:	ldr	x0, [x0, #120]
    3eb8:	add	x1, x0, #0x4
    3ebc:	ldr	x0, [sp, #24]
    3ec0:	str	x1, [x0, #120]
    3ec4:	ldr	x0, [sp, #24]
    3ec8:	ldr	x0, [x0, #120]
    3ecc:	str	x0, [sp, #48]
    3ed0:	ldr	x0, [sp, #24]
    3ed4:	ldr	x0, [x0, #128]
    3ed8:	ldr	x1, [sp, #48]
    3edc:	cmp	x1, x0
    3ee0:	cset	w0, eq  // eq = none
    3ee4:	and	w0, w0, #0xff
    3ee8:	and	x0, x0, #0xff
    3eec:	cmp	x0, #0x0
    3ef0:	b.eq	3f00 <Encode_XSEncoding+0xe0>  // b.none
    3ef4:	ldr	x0, [sp, #24]
    3ef8:	bl	2b80 <Perl_markstack_grow@plt>
    3efc:	str	x0, [sp, #48]
    3f00:	ldr	x0, [sp, #24]
    3f04:	ldr	x0, [x0, #24]
    3f08:	ldr	x1, [sp, #40]
    3f0c:	sub	x0, x1, x0
    3f10:	asr	x0, x0, #3
    3f14:	mov	w1, w0
    3f18:	ldr	x0, [sp, #48]
    3f1c:	str	w1, [x0]
    3f20:	ldr	x0, [sp, #24]
    3f24:	ldr	x1, [x0, #32]
    3f28:	ldr	x0, [sp, #40]
    3f2c:	sub	x0, x1, x0
    3f30:	cmp	x0, #0x0
    3f34:	cset	w0, le
    3f38:	and	w0, w0, #0xff
    3f3c:	and	x0, x0, #0xff
    3f40:	cmp	x0, #0x0
    3f44:	b.eq	3f60 <Encode_XSEncoding+0x140>  // b.none
    3f48:	mov	x3, #0x1                   	// #1
    3f4c:	ldr	x2, [sp, #40]
    3f50:	ldr	x1, [sp, #40]
    3f54:	ldr	x0, [sp, #24]
    3f58:	bl	28f0 <Perl_stack_grow@plt>
    3f5c:	str	x0, [sp, #40]
    3f60:	ldr	x0, [sp, #40]
    3f64:	add	x0, x0, #0x8
    3f68:	str	x0, [sp, #40]
    3f6c:	ldr	x0, [sp, #40]
    3f70:	ldr	x1, [sp, #72]
    3f74:	str	x1, [x0]
    3f78:	b	4018 <Encode_XSEncoding+0x1f8>
    3f7c:	ldr	w0, [sp, #36]
    3f80:	add	w1, w0, #0x1
    3f84:	str	w1, [sp, #36]
    3f88:	ldr	x1, [sp, #16]
    3f8c:	sxtw	x0, w0
    3f90:	add	x0, x0, #0x4
    3f94:	ldr	x0, [x1, x0, lsl #3]
    3f98:	str	x0, [sp, #88]
    3f9c:	ldr	x0, [sp, #24]
    3fa0:	ldr	x1, [x0, #32]
    3fa4:	ldr	x0, [sp, #40]
    3fa8:	sub	x0, x1, x0
    3fac:	cmp	x0, #0x0
    3fb0:	cset	w0, le
    3fb4:	and	w0, w0, #0xff
    3fb8:	and	x0, x0, #0xff
    3fbc:	cmp	x0, #0x0
    3fc0:	b.eq	3fdc <Encode_XSEncoding+0x1bc>  // b.none
    3fc4:	mov	x3, #0x1                   	// #1
    3fc8:	ldr	x2, [sp, #40]
    3fcc:	ldr	x1, [sp, #40]
    3fd0:	ldr	x0, [sp, #24]
    3fd4:	bl	28f0 <Perl_stack_grow@plt>
    3fd8:	str	x0, [sp, #40]
    3fdc:	ldr	x0, [sp, #88]
    3fe0:	bl	2890 <strlen@plt>
    3fe4:	mov	x2, x0
    3fe8:	ldr	x1, [sp, #88]
    3fec:	ldr	x0, [sp, #24]
    3ff0:	bl	2c50 <Perl_newSVpvn@plt>
    3ff4:	mov	x1, x0
    3ff8:	ldr	x0, [sp, #40]
    3ffc:	add	x0, x0, #0x8
    4000:	str	x0, [sp, #40]
    4004:	ldr	x0, [sp, #24]
    4008:	bl	2ae0 <Perl_sv_2mortal@plt>
    400c:	mov	x1, x0
    4010:	ldr	x0, [sp, #40]
    4014:	str	x1, [x0]
    4018:	ldr	x0, [sp, #16]
    401c:	ldrsw	x1, [sp, #36]
    4020:	add	x1, x1, #0x4
    4024:	ldr	x0, [x0, x1, lsl #3]
    4028:	cmp	x0, #0x0
    402c:	b.ne	3f7c <Encode_XSEncoding+0x15c>  // b.any
    4030:	ldr	x0, [sp, #24]
    4034:	ldr	x1, [sp, #40]
    4038:	str	x1, [x0]
    403c:	mov	w2, #0x4                   	// #4
    4040:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4044:	add	x1, x0, #0xe30
    4048:	ldr	x0, [sp, #24]
    404c:	bl	2b20 <Perl_call_pv@plt>
    4050:	ldr	x0, [sp, #72]
    4054:	str	x0, [sp, #80]
    4058:	ldr	x0, [sp, #80]
    405c:	mov	x1, x0
    4060:	ldr	x0, [sp, #24]
    4064:	bl	2e8c <S_SvREFCNT_dec>
    4068:	nop
    406c:	ldp	x29, x30, [sp], #96
    4070:	ret

0000000000004074 <utf8_safe_downgrade>:
    4074:	stp	x29, x30, [sp, #-80]!
    4078:	mov	x29, sp
    407c:	str	x0, [sp, #56]
    4080:	str	x1, [sp, #48]
    4084:	str	x2, [sp, #40]
    4088:	str	x3, [sp, #32]
    408c:	strb	w4, [sp, #31]
    4090:	ldrb	w0, [sp, #31]
    4094:	eor	w0, w0, #0x1
    4098:	and	w0, w0, #0xff
    409c:	cmp	w0, #0x0
    40a0:	b.eq	416c <utf8_safe_downgrade+0xf8>  // b.none
    40a4:	ldr	x0, [sp, #40]
    40a8:	ldr	x1, [x0]
    40ac:	ldr	x0, [sp, #32]
    40b0:	ldr	x0, [x0]
    40b4:	mov	x2, x0
    40b8:	ldr	x0, [sp, #56]
    40bc:	bl	2c50 <Perl_newSVpvn@plt>
    40c0:	mov	x1, x0
    40c4:	ldr	x0, [sp, #56]
    40c8:	bl	2ae0 <Perl_sv_2mortal@plt>
    40cc:	str	x0, [sp, #72]
    40d0:	ldr	x0, [sp, #72]
    40d4:	ldr	w0, [x0, #12]
    40d8:	orr	w1, w0, #0x20000000
    40dc:	ldr	x0, [sp, #72]
    40e0:	str	w1, [x0, #12]
    40e4:	ldr	x0, [sp, #48]
    40e8:	ldr	x0, [x0]
    40ec:	ldr	w0, [x0, #12]
    40f0:	and	w0, w0, #0xe00000
    40f4:	cmp	w0, #0x0
    40f8:	b.eq	414c <utf8_safe_downgrade+0xd8>  // b.none
    40fc:	ldr	x0, [sp, #48]
    4100:	ldr	x0, [x0]
    4104:	mov	x1, x0
    4108:	ldr	x0, [sp, #56]
    410c:	bl	2c70 <Perl_sv_tainted@plt>
    4110:	and	w0, w0, #0xff
    4114:	cmp	w0, #0x0
    4118:	b.eq	414c <utf8_safe_downgrade+0xd8>  // b.none
    411c:	ldr	x0, [sp, #56]
    4120:	ldrb	w0, [x0, #184]
    4124:	and	x0, x0, #0xff
    4128:	cmp	x0, #0x0
    412c:	b.eq	414c <utf8_safe_downgrade+0xd8>  // b.none
    4130:	mov	w5, #0x0                   	// #0
    4134:	mov	x4, #0x0                   	// #0
    4138:	mov	w3, #0x74                  	// #116
    413c:	mov	x2, #0x0                   	// #0
    4140:	ldr	x1, [sp, #72]
    4144:	ldr	x0, [sp, #56]
    4148:	bl	2be0 <Perl_sv_magic@plt>
    414c:	ldr	x0, [sp, #48]
    4150:	ldr	x1, [sp, #72]
    4154:	str	x1, [x0]
    4158:	ldr	x0, [sp, #48]
    415c:	ldr	x0, [x0]
    4160:	ldr	x1, [x0, #16]
    4164:	ldr	x0, [sp, #40]
    4168:	str	x1, [x0]
    416c:	ldr	x0, [sp, #32]
    4170:	ldr	x0, [x0]
    4174:	cmp	x0, #0x0
    4178:	b.eq	41c0 <utf8_safe_downgrade+0x14c>  // b.none
    417c:	ldr	x0, [sp, #40]
    4180:	ldr	x0, [x0]
    4184:	ldr	x2, [sp, #32]
    4188:	mov	x1, x0
    418c:	ldr	x0, [sp, #56]
    4190:	bl	28c0 <Perl_utf8_to_bytes@plt>
    4194:	cmp	x0, #0x0
    4198:	b.ne	41a8 <utf8_safe_downgrade+0x134>  // b.any
    419c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    41a0:	add	x0, x0, #0xe48
    41a4:	bl	2a90 <Perl_croak_nocontext@plt>
    41a8:	ldr	x0, [sp, #48]
    41ac:	ldr	x0, [x0]
    41b0:	ldr	x0, [x0]
    41b4:	ldr	x1, [sp, #32]
    41b8:	ldr	x1, [x1]
    41bc:	str	x1, [x0, #16]
    41c0:	ldr	x0, [sp, #48]
    41c4:	ldr	x0, [x0]
    41c8:	ldr	w1, [x0, #12]
    41cc:	ldr	x0, [sp, #48]
    41d0:	ldr	x0, [x0]
    41d4:	and	w1, w1, #0xdfffffff
    41d8:	str	w1, [x0, #12]
    41dc:	nop
    41e0:	ldp	x29, x30, [sp], #80
    41e4:	ret

00000000000041e8 <utf8_safe_upgrade>:
    41e8:	stp	x29, x30, [sp, #-80]!
    41ec:	mov	x29, sp
    41f0:	str	x0, [sp, #56]
    41f4:	str	x1, [sp, #48]
    41f8:	str	x2, [sp, #40]
    41fc:	str	x3, [sp, #32]
    4200:	strb	w4, [sp, #31]
    4204:	ldrb	w0, [sp, #31]
    4208:	eor	w0, w0, #0x1
    420c:	and	w0, w0, #0xff
    4210:	cmp	w0, #0x0
    4214:	b.eq	42b8 <utf8_safe_upgrade+0xd0>  // b.none
    4218:	ldr	x0, [sp, #40]
    421c:	ldr	x1, [x0]
    4220:	ldr	x0, [sp, #32]
    4224:	ldr	x0, [x0]
    4228:	mov	x2, x0
    422c:	ldr	x0, [sp, #56]
    4230:	bl	2c50 <Perl_newSVpvn@plt>
    4234:	mov	x1, x0
    4238:	ldr	x0, [sp, #56]
    423c:	bl	2ae0 <Perl_sv_2mortal@plt>
    4240:	str	x0, [sp, #72]
    4244:	ldr	x0, [sp, #48]
    4248:	ldr	x0, [x0]
    424c:	ldr	w0, [x0, #12]
    4250:	and	w0, w0, #0xe00000
    4254:	cmp	w0, #0x0
    4258:	b.eq	42ac <utf8_safe_upgrade+0xc4>  // b.none
    425c:	ldr	x0, [sp, #48]
    4260:	ldr	x0, [x0]
    4264:	mov	x1, x0
    4268:	ldr	x0, [sp, #56]
    426c:	bl	2c70 <Perl_sv_tainted@plt>
    4270:	and	w0, w0, #0xff
    4274:	cmp	w0, #0x0
    4278:	b.eq	42ac <utf8_safe_upgrade+0xc4>  // b.none
    427c:	ldr	x0, [sp, #56]
    4280:	ldrb	w0, [x0, #184]
    4284:	and	x0, x0, #0xff
    4288:	cmp	x0, #0x0
    428c:	b.eq	42ac <utf8_safe_upgrade+0xc4>  // b.none
    4290:	mov	w5, #0x0                   	// #0
    4294:	mov	x4, #0x0                   	// #0
    4298:	mov	w3, #0x74                  	// #116
    429c:	mov	x2, #0x0                   	// #0
    42a0:	ldr	x1, [sp, #72]
    42a4:	ldr	x0, [sp, #56]
    42a8:	bl	2be0 <Perl_sv_magic@plt>
    42ac:	ldr	x0, [sp, #48]
    42b0:	ldr	x1, [sp, #72]
    42b4:	str	x1, [x0]
    42b8:	ldr	x0, [sp, #48]
    42bc:	ldr	x0, [x0]
    42c0:	mov	x3, #0x0                   	// #0
    42c4:	mov	w2, #0x0                   	// #0
    42c8:	mov	x1, x0
    42cc:	ldr	x0, [sp, #56]
    42d0:	bl	2a40 <Perl_sv_utf8_upgrade_flags_grow@plt>
    42d4:	ldr	x0, [sp, #48]
    42d8:	ldr	x0, [x0]
    42dc:	ldr	w1, [x0, #12]
    42e0:	mov	w0, #0x400                 	// #1024
    42e4:	movk	w0, #0x20, lsl #16
    42e8:	and	w0, w1, w0
    42ec:	cmp	w0, #0x400
    42f0:	b.ne	431c <utf8_safe_upgrade+0x134>  // b.any
    42f4:	ldr	x0, [sp, #48]
    42f8:	ldr	x0, [x0]
    42fc:	ldr	x0, [x0]
    4300:	ldr	x1, [x0, #16]
    4304:	ldr	x0, [sp, #32]
    4308:	str	x1, [x0]
    430c:	ldr	x0, [sp, #48]
    4310:	ldr	x0, [x0]
    4314:	ldr	x0, [x0, #16]
    4318:	b	4338 <utf8_safe_upgrade+0x150>
    431c:	ldr	x0, [sp, #48]
    4320:	ldr	x0, [x0]
    4324:	mov	w3, #0x0                   	// #0
    4328:	ldr	x2, [sp, #32]
    432c:	mov	x1, x0
    4330:	ldr	x0, [sp, #56]
    4334:	bl	29d0 <Perl_sv_2pv_flags@plt>
    4338:	ldr	x1, [sp, #40]
    433c:	str	x0, [x1]
    4340:	nop
    4344:	ldp	x29, x30, [sp], #80
    4348:	ret

000000000000434c <do_fallback_cb>:
    434c:	stp	x29, x30, [sp, #-96]!
    4350:	mov	x29, sp
    4354:	str	x0, [sp, #40]
    4358:	str	x1, [sp, #32]
    435c:	str	x2, [sp, #24]
    4360:	ldr	x0, [sp, #40]
    4364:	ldr	x0, [x0]
    4368:	str	x0, [sp, #64]
    436c:	ldr	x0, [sp, #40]
    4370:	bl	2c20 <Perl_push_scope@plt>
    4374:	ldr	x0, [sp, #40]
    4378:	bl	2a20 <Perl_savetmps@plt>
    437c:	ldr	x0, [sp, #40]
    4380:	ldr	x0, [x0, #120]
    4384:	add	x1, x0, #0x4
    4388:	ldr	x0, [sp, #40]
    438c:	str	x1, [x0, #120]
    4390:	ldr	x0, [sp, #40]
    4394:	ldr	x0, [x0, #120]
    4398:	str	x0, [sp, #72]
    439c:	ldr	x0, [sp, #40]
    43a0:	ldr	x0, [x0, #128]
    43a4:	ldr	x1, [sp, #72]
    43a8:	cmp	x1, x0
    43ac:	cset	w0, eq  // eq = none
    43b0:	and	w0, w0, #0xff
    43b4:	and	x0, x0, #0xff
    43b8:	cmp	x0, #0x0
    43bc:	b.eq	43cc <do_fallback_cb+0x80>  // b.none
    43c0:	ldr	x0, [sp, #40]
    43c4:	bl	2b80 <Perl_markstack_grow@plt>
    43c8:	str	x0, [sp, #72]
    43cc:	ldr	x0, [sp, #40]
    43d0:	ldr	x0, [x0, #24]
    43d4:	ldr	x1, [sp, #64]
    43d8:	sub	x0, x1, x0
    43dc:	asr	x0, x0, #3
    43e0:	mov	w1, w0
    43e4:	ldr	x0, [sp, #72]
    43e8:	str	w1, [x0]
    43ec:	ldr	x0, [sp, #40]
    43f0:	ldr	x1, [x0, #32]
    43f4:	ldr	x0, [sp, #64]
    43f8:	sub	x0, x1, x0
    43fc:	cmp	x0, #0x0
    4400:	cset	w0, le
    4404:	and	w0, w0, #0xff
    4408:	and	x0, x0, #0xff
    440c:	cmp	x0, #0x0
    4410:	b.eq	442c <do_fallback_cb+0xe0>  // b.none
    4414:	mov	x3, #0x1                   	// #1
    4418:	ldr	x2, [sp, #64]
    441c:	ldr	x1, [sp, #64]
    4420:	ldr	x0, [sp, #40]
    4424:	bl	28f0 <Perl_stack_grow@plt>
    4428:	str	x0, [sp, #64]
    442c:	ldr	x1, [sp, #32]
    4430:	ldr	x0, [sp, #40]
    4434:	bl	2b10 <Perl_newSVuv@plt>
    4438:	mov	x1, x0
    443c:	ldr	x0, [sp, #64]
    4440:	add	x0, x0, #0x8
    4444:	str	x0, [sp, #64]
    4448:	ldr	x0, [sp, #40]
    444c:	bl	2ae0 <Perl_sv_2mortal@plt>
    4450:	mov	x1, x0
    4454:	ldr	x0, [sp, #64]
    4458:	str	x1, [x0]
    445c:	ldr	x0, [sp, #40]
    4460:	ldr	x1, [sp, #64]
    4464:	str	x1, [x0]
    4468:	mov	w2, #0x2                   	// #2
    446c:	ldr	x1, [sp, #24]
    4470:	ldr	x0, [sp, #40]
    4474:	bl	2bf0 <Perl_call_sv@plt>
    4478:	str	w0, [sp, #60]
    447c:	ldr	x0, [sp, #40]
    4480:	ldr	x0, [x0]
    4484:	str	x0, [sp, #64]
    4488:	ldr	w0, [sp, #60]
    448c:	cmp	w0, #0x1
    4490:	b.eq	44a0 <do_fallback_cb+0x154>  // b.none
    4494:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4498:	add	x0, x0, #0xe58
    449c:	bl	2a90 <Perl_croak_nocontext@plt>
    44a0:	ldr	x0, [sp, #64]
    44a4:	sub	x1, x0, #0x8
    44a8:	str	x1, [sp, #64]
    44ac:	ldr	x0, [x0]
    44b0:	str	x0, [sp, #80]
    44b4:	ldr	x0, [sp, #80]
    44b8:	str	x0, [sp, #88]
    44bc:	ldr	x0, [sp, #88]
    44c0:	bl	2e48 <S_SvREFCNT_inc>
    44c4:	ldr	x0, [sp, #40]
    44c8:	ldr	x1, [sp, #64]
    44cc:	str	x1, [x0]
    44d0:	ldr	x0, [sp, #40]
    44d4:	ldr	x1, [x0, #80]
    44d8:	ldr	x0, [sp, #40]
    44dc:	ldr	x0, [x0, #88]
    44e0:	cmp	x1, x0
    44e4:	b.le	44f0 <do_fallback_cb+0x1a4>
    44e8:	ldr	x0, [sp, #40]
    44ec:	bl	2b70 <Perl_free_tmps@plt>
    44f0:	ldr	x0, [sp, #40]
    44f4:	bl	2940 <Perl_pop_scope@plt>
    44f8:	ldr	x0, [sp, #80]
    44fc:	ldp	x29, x30, [sp], #96
    4500:	ret

0000000000004504 <do_bytes_fallback_cb>:
    4504:	stp	x29, x30, [sp, #-96]!
    4508:	mov	x29, sp
    450c:	str	x0, [sp, #40]
    4510:	str	x1, [sp, #32]
    4514:	str	x2, [sp, #24]
    4518:	str	x3, [sp, #16]
    451c:	ldr	x0, [sp, #40]
    4520:	ldr	x0, [x0]
    4524:	str	x0, [sp, #56]
    4528:	ldr	x0, [sp, #40]
    452c:	bl	2c20 <Perl_push_scope@plt>
    4530:	ldr	x0, [sp, #40]
    4534:	bl	2a20 <Perl_savetmps@plt>
    4538:	ldr	x0, [sp, #40]
    453c:	ldr	x0, [x0, #120]
    4540:	add	x1, x0, #0x4
    4544:	ldr	x0, [sp, #40]
    4548:	str	x1, [x0, #120]
    454c:	ldr	x0, [sp, #40]
    4550:	ldr	x0, [x0, #120]
    4554:	str	x0, [sp, #72]
    4558:	ldr	x0, [sp, #40]
    455c:	ldr	x0, [x0, #128]
    4560:	ldr	x1, [sp, #72]
    4564:	cmp	x1, x0
    4568:	cset	w0, eq  // eq = none
    456c:	and	w0, w0, #0xff
    4570:	and	x0, x0, #0xff
    4574:	cmp	x0, #0x0
    4578:	b.eq	4588 <do_bytes_fallback_cb+0x84>  // b.none
    457c:	ldr	x0, [sp, #40]
    4580:	bl	2b80 <Perl_markstack_grow@plt>
    4584:	str	x0, [sp, #72]
    4588:	ldr	x0, [sp, #40]
    458c:	ldr	x0, [x0, #24]
    4590:	ldr	x1, [sp, #56]
    4594:	sub	x0, x1, x0
    4598:	asr	x0, x0, #3
    459c:	mov	w1, w0
    45a0:	ldr	x0, [sp, #72]
    45a4:	str	w1, [x0]
    45a8:	str	xzr, [sp, #64]
    45ac:	b	4640 <do_bytes_fallback_cb+0x13c>
    45b0:	ldr	x0, [sp, #40]
    45b4:	ldr	x1, [x0, #32]
    45b8:	ldr	x0, [sp, #56]
    45bc:	sub	x0, x1, x0
    45c0:	cmp	x0, #0x0
    45c4:	cset	w0, le
    45c8:	and	w0, w0, #0xff
    45cc:	and	x0, x0, #0xff
    45d0:	cmp	x0, #0x0
    45d4:	b.eq	45f0 <do_bytes_fallback_cb+0xec>  // b.none
    45d8:	mov	x3, #0x1                   	// #1
    45dc:	ldr	x2, [sp, #56]
    45e0:	ldr	x1, [sp, #56]
    45e4:	ldr	x0, [sp, #40]
    45e8:	bl	28f0 <Perl_stack_grow@plt>
    45ec:	str	x0, [sp, #56]
    45f0:	ldr	x1, [sp, #32]
    45f4:	ldr	x0, [sp, #64]
    45f8:	add	x0, x1, x0
    45fc:	ldrb	w0, [x0]
    4600:	and	x0, x0, #0xff
    4604:	mov	x1, x0
    4608:	ldr	x0, [sp, #40]
    460c:	bl	2b10 <Perl_newSVuv@plt>
    4610:	mov	x1, x0
    4614:	ldr	x0, [sp, #56]
    4618:	add	x0, x0, #0x8
    461c:	str	x0, [sp, #56]
    4620:	ldr	x0, [sp, #40]
    4624:	bl	2ae0 <Perl_sv_2mortal@plt>
    4628:	mov	x1, x0
    462c:	ldr	x0, [sp, #56]
    4630:	str	x1, [x0]
    4634:	ldr	x0, [sp, #64]
    4638:	add	x0, x0, #0x1
    463c:	str	x0, [sp, #64]
    4640:	ldr	x1, [sp, #64]
    4644:	ldr	x0, [sp, #24]
    4648:	cmp	x1, x0
    464c:	b.cc	45b0 <do_bytes_fallback_cb+0xac>  // b.lo, b.ul, b.last
    4650:	ldr	x0, [sp, #40]
    4654:	ldr	x1, [sp, #56]
    4658:	str	x1, [x0]
    465c:	mov	w2, #0x2                   	// #2
    4660:	ldr	x1, [sp, #16]
    4664:	ldr	x0, [sp, #40]
    4668:	bl	2bf0 <Perl_call_sv@plt>
    466c:	str	w0, [sp, #52]
    4670:	ldr	x0, [sp, #40]
    4674:	ldr	x0, [x0]
    4678:	str	x0, [sp, #56]
    467c:	ldr	w0, [sp, #52]
    4680:	cmp	w0, #0x1
    4684:	b.eq	4694 <do_bytes_fallback_cb+0x190>  // b.none
    4688:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    468c:	add	x0, x0, #0xe58
    4690:	bl	2a90 <Perl_croak_nocontext@plt>
    4694:	ldr	x0, [sp, #56]
    4698:	sub	x1, x0, #0x8
    469c:	str	x1, [sp, #56]
    46a0:	ldr	x0, [x0]
    46a4:	str	x0, [sp, #80]
    46a8:	ldr	x0, [sp, #80]
    46ac:	str	x0, [sp, #88]
    46b0:	ldr	x0, [sp, #88]
    46b4:	bl	2e48 <S_SvREFCNT_inc>
    46b8:	ldr	x0, [sp, #40]
    46bc:	ldr	x1, [sp, #56]
    46c0:	str	x1, [x0]
    46c4:	ldr	x0, [sp, #40]
    46c8:	ldr	x1, [x0, #80]
    46cc:	ldr	x0, [sp, #40]
    46d0:	ldr	x0, [x0, #88]
    46d4:	cmp	x1, x0
    46d8:	b.le	46e4 <do_bytes_fallback_cb+0x1e0>
    46dc:	ldr	x0, [sp, #40]
    46e0:	bl	2b70 <Perl_free_tmps@plt>
    46e4:	ldr	x0, [sp, #40]
    46e8:	bl	2940 <Perl_pop_scope@plt>
    46ec:	ldr	x0, [sp, #80]
    46f0:	ldp	x29, x30, [sp], #96
    46f4:	ret

00000000000046f8 <encode_method>:
    46f8:	sub	sp, sp, #0x140
    46fc:	stp	x29, x30, [sp, #16]
    4700:	add	x29, sp, #0x10
    4704:	str	x0, [sp, #120]
    4708:	str	x1, [sp, #112]
    470c:	str	x2, [sp, #104]
    4710:	str	x3, [sp, #96]
    4714:	str	x4, [sp, #88]
    4718:	str	x5, [sp, #80]
    471c:	str	x6, [sp, #72]
    4720:	str	x7, [sp, #64]
    4724:	ldr	x0, [sp, #320]
    4728:	str	x0, [sp, #56]
    472c:	ldr	x0, [sp, #328]
    4730:	str	x0, [sp, #48]
    4734:	ldr	x0, [sp, #336]
    4738:	str	x0, [sp, #40]
    473c:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    4740:	ldr	x0, [x0, #3992]
    4744:	ldr	x1, [x0]
    4748:	str	x1, [sp, #312]
    474c:	mov	x1, #0x0                   	// #0
    4750:	ldr	x0, [sp, #88]
    4754:	str	x0, [sp, #216]
    4758:	ldr	x0, [sp, #80]
    475c:	str	x0, [sp, #176]
    4760:	str	xzr, [sp, #184]
    4764:	str	xzr, [sp, #192]
    4768:	ldr	x0, [sp, #80]
    476c:	add	x0, x0, #0x1
    4770:	mov	x1, x0
    4774:	ldr	x0, [sp, #120]
    4778:	bl	2960 <Perl_newSV@plt>
    477c:	str	x0, [sp, #224]
    4780:	ldr	x0, [sp, #224]
    4784:	ldr	x0, [x0, #16]
    4788:	str	x0, [sp, #200]
    478c:	ldr	x0, [sp, #224]
    4790:	ldr	x0, [x0]
    4794:	ldr	x0, [x0, #24]
    4798:	sub	x0, x0, #0x1
    479c:	str	x0, [sp, #144]
    47a0:	str	wzr, [sp, #140]
    47a4:	str	xzr, [sp, #152]
    47a8:	ldr	x0, [sp, #56]
    47ac:	cmp	x0, #0x0
    47b0:	b.eq	4808 <encode_method+0x110>  // b.none
    47b4:	ldr	x0, [sp, #56]
    47b8:	ldr	w1, [x0, #12]
    47bc:	mov	w0, #0x400                 	// #1024
    47c0:	movk	w0, #0x20, lsl #16
    47c4:	and	w0, w1, w0
    47c8:	cmp	w0, #0x400
    47cc:	b.ne	47ec <encode_method+0xf4>  // b.any
    47d0:	ldr	x0, [sp, #56]
    47d4:	ldr	x0, [x0]
    47d8:	ldr	x0, [x0, #16]
    47dc:	str	x0, [sp, #152]
    47e0:	ldr	x0, [sp, #56]
    47e4:	ldr	x0, [x0, #16]
    47e8:	b	480c <encode_method+0x114>
    47ec:	add	x0, sp, #0x98
    47f0:	mov	w3, #0x2                   	// #2
    47f4:	mov	x2, x0
    47f8:	ldr	x1, [sp, #56]
    47fc:	ldr	x0, [sp, #120]
    4800:	bl	29d0 <Perl_sv_2pv_flags@plt>
    4804:	b	480c <encode_method+0x114>
    4808:	mov	x0, #0x0                   	// #0
    480c:	str	x0, [sp, #232]
    4810:	ldr	x0, [sp, #96]
    4814:	ldr	w0, [x0, #12]
    4818:	and	w0, w0, #0xe00000
    481c:	cmp	w0, #0x0
    4820:	b.eq	486c <encode_method+0x174>  // b.none
    4824:	ldr	x1, [sp, #96]
    4828:	ldr	x0, [sp, #120]
    482c:	bl	2c70 <Perl_sv_tainted@plt>
    4830:	and	w0, w0, #0xff
    4834:	cmp	w0, #0x0
    4838:	b.eq	486c <encode_method+0x174>  // b.none
    483c:	ldr	x0, [sp, #120]
    4840:	ldrb	w0, [x0, #184]
    4844:	and	x0, x0, #0xff
    4848:	cmp	x0, #0x0
    484c:	b.eq	486c <encode_method+0x174>  // b.none
    4850:	mov	w5, #0x0                   	// #0
    4854:	mov	x4, #0x0                   	// #0
    4858:	mov	w3, #0x74                  	// #116
    485c:	mov	x2, #0x0                   	// #0
    4860:	ldr	x1, [sp, #224]
    4864:	ldr	x0, [sp, #120]
    4868:	bl	2be0 <Perl_sv_magic@plt>
    486c:	ldr	x0, [sp, #64]
    4870:	cmp	x0, #0x0
    4874:	b.eq	48c4 <encode_method+0x1cc>  // b.none
    4878:	ldr	x0, [sp, #64]
    487c:	ldr	x0, [x0]
    4880:	ldr	x1, [sp, #88]
    4884:	add	x0, x1, x0
    4888:	str	x0, [sp, #88]
    488c:	ldr	x0, [sp, #64]
    4890:	ldr	x1, [x0]
    4894:	ldr	x0, [sp, #80]
    4898:	cmp	x1, x0
    489c:	b.cs	48b8 <encode_method+0x1c0>  // b.hs, b.nlast
    48a0:	ldr	x1, [sp, #80]
    48a4:	ldr	x0, [sp, #64]
    48a8:	ldr	x0, [x0]
    48ac:	sub	x0, x1, x0
    48b0:	str	x0, [sp, #80]
    48b4:	b	48bc <encode_method+0x1c4>
    48b8:	str	xzr, [sp, #80]
    48bc:	ldr	x0, [sp, #80]
    48c0:	str	x0, [sp, #176]
    48c4:	ldr	x0, [sp, #80]
    48c8:	cmp	x0, #0x0
    48cc:	b.ne	5108 <encode_method+0xa10>  // b.any
    48d0:	ldr	x0, [sp, #224]
    48d4:	ldr	x0, [x0]
    48d8:	str	xzr, [x0, #16]
    48dc:	ldr	x0, [sp, #224]
    48e0:	ldr	w1, [x0, #12]
    48e4:	mov	w0, #0xff                  	// #255
    48e8:	movk	w0, #0x5fff, lsl #16
    48ec:	and	w1, w1, w0
    48f0:	ldr	x0, [sp, #224]
    48f4:	str	w1, [x0, #12]
    48f8:	ldr	x0, [sp, #224]
    48fc:	ldr	w1, [x0, #12]
    4900:	mov	w0, #0x4400                	// #17408
    4904:	orr	w1, w1, w0
    4908:	ldr	x0, [sp, #224]
    490c:	str	w1, [x0, #12]
    4910:	b	5274 <encode_method+0xb7c>
    4914:	ldr	x2, [sp, #144]
    4918:	ldr	x0, [sp, #224]
    491c:	ldr	x0, [x0]
    4920:	ldr	x1, [sp, #184]
    4924:	add	x1, x2, x1
    4928:	str	x1, [x0, #16]
    492c:	ldr	x0, [sp, #224]
    4930:	ldr	w1, [x0, #12]
    4934:	mov	w0, #0xff                  	// #255
    4938:	movk	w0, #0x5fff, lsl #16
    493c:	and	w1, w1, w0
    4940:	ldr	x0, [sp, #224]
    4944:	str	w1, [x0, #12]
    4948:	ldr	x0, [sp, #224]
    494c:	ldr	w1, [x0, #12]
    4950:	mov	w0, #0x4400                	// #17408
    4954:	orr	w1, w1, w0
    4958:	ldr	x0, [sp, #224]
    495c:	str	w1, [x0, #12]
    4960:	ldr	w0, [sp, #140]
    4964:	cmp	w0, #0x4
    4968:	b.eq	5164 <encode_method+0xa6c>  // b.none
    496c:	ldr	w0, [sp, #140]
    4970:	cmp	w0, #0x2
    4974:	b.eq	5164 <encode_method+0xa6c>  // b.none
    4978:	ldr	w0, [sp, #140]
    497c:	cmp	w0, #0x5
    4980:	b.eq	5164 <encode_method+0xa6c>  // b.none
    4984:	ldr	w0, [sp, #140]
    4988:	cmp	w0, #0x1
    498c:	b.eq	49a0 <encode_method+0x2a8>  // b.none
    4990:	ldr	w0, [sp, #140]
    4994:	cmp	w0, #0x3
    4998:	b.eq	4b0c <encode_method+0x414>  // b.none
    499c:	b	50bc <encode_method+0x9c4>
    49a0:	str	xzr, [sp, #208]
    49a4:	ldr	x0, [sp, #80]
    49a8:	ldr	x1, [sp, #192]
    49ac:	add	x0, x1, x0
    49b0:	str	x0, [sp, #192]
    49b4:	ldr	x0, [sp, #144]
    49b8:	ldr	x1, [sp, #184]
    49bc:	add	x0, x1, x0
    49c0:	str	x0, [sp, #184]
    49c4:	ldr	x1, [sp, #176]
    49c8:	ldr	x0, [sp, #192]
    49cc:	sub	x0, x1, x0
    49d0:	str	x0, [sp, #304]
    49d4:	ldr	x0, [sp, #192]
    49d8:	cmp	x0, #0x0
    49dc:	b.eq	4a18 <encode_method+0x320>  // b.none
    49e0:	ldr	x0, [sp, #224]
    49e4:	ldr	x0, [x0]
    49e8:	ldr	d0, [x0, #24]
    49ec:	ucvtf	d1, d0
    49f0:	fmov	d0, #1.000000000000000000e+00
    49f4:	fadd	d1, d1, d0
    49f8:	ldr	d0, [sp, #192]
    49fc:	ucvtf	d0, d0
    4a00:	fdiv	d1, d1, d0
    4a04:	ldr	d0, [sp, #304]
    4a08:	ucvtf	d0, d0
    4a0c:	fmul	d0, d1, d0
    4a10:	fcvtzu	d0, d0
    4a14:	str	d0, [sp, #208]
    4a18:	ldr	x0, [sp, #208]
    4a1c:	add	x0, x0, #0xd
    4a20:	str	x0, [sp, #208]
    4a24:	ldr	x0, [sp, #224]
    4a28:	ldr	w0, [x0, #12]
    4a2c:	and	w0, w0, #0x10000000
    4a30:	cmp	w0, #0x0
    4a34:	b.ne	4a60 <encode_method+0x368>  // b.any
    4a38:	ldr	x0, [sp, #224]
    4a3c:	ldr	x0, [x0]
    4a40:	ldr	x1, [x0, #24]
    4a44:	ldr	x0, [sp, #224]
    4a48:	ldr	x0, [x0]
    4a4c:	ldr	x2, [x0, #24]
    4a50:	ldr	x0, [sp, #208]
    4a54:	add	x0, x2, x0
    4a58:	cmp	x1, x0
    4a5c:	b.cs	4a88 <encode_method+0x390>  // b.hs, b.nlast
    4a60:	ldr	x0, [sp, #224]
    4a64:	ldr	x0, [x0]
    4a68:	ldr	x1, [x0, #24]
    4a6c:	ldr	x0, [sp, #208]
    4a70:	add	x0, x1, x0
    4a74:	mov	x2, x0
    4a78:	ldr	x1, [sp, #224]
    4a7c:	ldr	x0, [sp, #120]
    4a80:	bl	2a30 <Perl_sv_grow@plt>
    4a84:	b	4a90 <encode_method+0x398>
    4a88:	ldr	x0, [sp, #224]
    4a8c:	ldr	x0, [x0, #16]
    4a90:	str	x0, [sp, #200]
    4a94:	ldr	x0, [sp, #224]
    4a98:	ldr	x0, [x0]
    4a9c:	ldr	x0, [x0, #24]
    4aa0:	ldr	x1, [sp, #184]
    4aa4:	cmp	x1, x0
    4aa8:	b.cc	4abc <encode_method+0x3c4>  // b.lo, b.ul, b.last
    4aac:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4ab0:	add	x1, x0, #0xe80
    4ab4:	ldr	x0, [sp, #120]
    4ab8:	bl	2a70 <Perl_croak@plt>
    4abc:	ldr	x0, [sp, #224]
    4ac0:	ldr	x0, [x0]
    4ac4:	ldr	x1, [x0, #24]
    4ac8:	ldr	x0, [sp, #184]
    4acc:	sub	x0, x1, x0
    4ad0:	sub	x0, x0, #0x1
    4ad4:	str	x0, [sp, #144]
    4ad8:	ldr	x1, [sp, #200]
    4adc:	ldr	x0, [sp, #184]
    4ae0:	add	x0, x1, x0
    4ae4:	str	x0, [sp, #200]
    4ae8:	ldr	x0, [sp, #80]
    4aec:	ldr	x1, [sp, #88]
    4af0:	add	x0, x1, x0
    4af4:	str	x0, [sp, #88]
    4af8:	ldr	x1, [sp, #176]
    4afc:	ldr	x0, [sp, #192]
    4b00:	sub	x0, x1, x0
    4b04:	str	x0, [sp, #80]
    4b08:	b	5108 <encode_method+0xa10>
    4b0c:	ldr	x0, [sp, #112]
    4b10:	ldr	x0, [x0, #8]
    4b14:	ldr	x1, [sp, #104]
    4b18:	cmp	x1, x0
    4b1c:	b.ne	4e2c <encode_method+0x734>  // b.any
    4b20:	ldr	x0, [sp, #80]
    4b24:	ldr	x1, [sp, #88]
    4b28:	add	x5, x1, x0
    4b2c:	ldr	x1, [sp, #176]
    4b30:	ldr	x0, [sp, #192]
    4b34:	sub	x1, x1, x0
    4b38:	ldr	x0, [sp, #80]
    4b3c:	sub	x0, x1, x0
    4b40:	add	x1, sp, #0xa0
    4b44:	mov	w4, #0x9e                  	// #158
    4b48:	movk	w4, #0x1, lsl #16
    4b4c:	mov	x3, x1
    4b50:	mov	x2, x0
    4b54:	mov	x1, x5
    4b58:	ldr	x0, [sp, #120]
    4b5c:	bl	2b50 <Perl_utf8n_to_uvuni@plt>
    4b60:	str	x0, [sp, #264]
    4b64:	ldr	x1, [sp, #176]
    4b68:	ldr	x0, [sp, #192]
    4b6c:	sub	x1, x1, x0
    4b70:	ldr	x0, [sp, #80]
    4b74:	sub	x1, x1, x0
    4b78:	ldr	x0, [sp, #160]
    4b7c:	cmp	x1, x0
    4b80:	b.cs	4b88 <encode_method+0x490>  // b.hs, b.nlast
    4b84:	b	5108 <encode_method+0xa10>
    4b88:	ldr	x0, [sp, #72]
    4b8c:	and	x0, x0, #0x1
    4b90:	cmp	x0, #0x0
    4b94:	b.eq	4bb8 <encode_method+0x4c0>  // b.none
    4b98:	ldr	x0, [sp, #112]
    4b9c:	ldr	x0, [x0, #32]
    4ba0:	mov	x3, x0
    4ba4:	ldr	x2, [sp, #264]
    4ba8:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4bac:	add	x1, x0, #0xea0
    4bb0:	ldr	x0, [sp, #120]
    4bb4:	bl	2a70 <Perl_croak@plt>
    4bb8:	ldr	x0, [sp, #72]
    4bbc:	and	x0, x0, #0x2
    4bc0:	cmp	x0, #0x0
    4bc4:	b.eq	4c14 <encode_method+0x51c>  // b.none
    4bc8:	ldr	x0, [sp, #72]
    4bcc:	and	x0, x0, #0x10
    4bd0:	cmp	x0, #0x0
    4bd4:	b.eq	4bf0 <encode_method+0x4f8>  // b.none
    4bd8:	mov	w1, #0x2c                  	// #44
    4bdc:	ldr	x0, [sp, #120]
    4be0:	bl	2c10 <Perl_ckwarn@plt>
    4be4:	and	w0, w0, #0xff
    4be8:	cmp	w0, #0x0
    4bec:	b.eq	4c14 <encode_method+0x51c>  // b.none
    4bf0:	ldr	x0, [sp, #112]
    4bf4:	ldr	x0, [x0, #32]
    4bf8:	mov	x4, x0
    4bfc:	ldr	x3, [sp, #264]
    4c00:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4c04:	add	x2, x0, #0xea0
    4c08:	mov	w1, #0x2c                  	// #44
    4c0c:	ldr	x0, [sp, #120]
    4c10:	bl	2980 <Perl_warner@plt>
    4c14:	ldr	x0, [sp, #72]
    4c18:	and	x0, x0, #0x4
    4c1c:	cmp	x0, #0x0
    4c20:	b.ne	516c <encode_method+0xa74>  // b.any
    4c24:	ldr	x0, [sp, #72]
    4c28:	and	x0, x0, #0x700
    4c2c:	cmp	x0, #0x0
    4c30:	b.eq	4dc4 <encode_method+0x6cc>  // b.none
    4c34:	ldr	x0, [sp, #120]
    4c38:	add	x0, x0, #0x150
    4c3c:	ldr	x1, [sp, #40]
    4c40:	cmp	x1, x0
    4c44:	b.eq	4c5c <encode_method+0x564>  // b.none
    4c48:	ldr	x2, [sp, #40]
    4c4c:	ldr	x1, [sp, #264]
    4c50:	ldr	x0, [sp, #120]
    4c54:	bl	434c <do_fallback_cb>
    4c58:	b	4ca4 <encode_method+0x5ac>
    4c5c:	ldr	x0, [sp, #72]
    4c60:	and	x0, x0, #0x100
    4c64:	cmp	x0, #0x0
    4c68:	b.ne	4c94 <encode_method+0x59c>  // b.any
    4c6c:	ldr	x0, [sp, #72]
    4c70:	and	x0, x0, #0x200
    4c74:	cmp	x0, #0x0
    4c78:	b.eq	4c88 <encode_method+0x590>  // b.none
    4c7c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4c80:	add	x0, x0, #0xec0
    4c84:	b	4c9c <encode_method+0x5a4>
    4c88:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4c8c:	add	x0, x0, #0xec8
    4c90:	b	4c9c <encode_method+0x5a4>
    4c94:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4c98:	add	x0, x0, #0xed0
    4c9c:	ldr	x1, [sp, #264]
    4ca0:	bl	2bd0 <Perl_newSVpvf_nocontext@plt>
    4ca4:	str	x0, [sp, #272]
    4ca8:	ldr	x0, [sp, #272]
    4cac:	ldr	w1, [x0, #12]
    4cb0:	mov	w0, #0x400                 	// #1024
    4cb4:	movk	w0, #0x20, lsl #16
    4cb8:	and	w0, w1, w0
    4cbc:	cmp	w0, #0x400
    4cc0:	b.ne	4ce0 <encode_method+0x5e8>  // b.any
    4cc4:	ldr	x0, [sp, #272]
    4cc8:	ldr	x0, [x0]
    4ccc:	ldr	x0, [x0, #16]
    4cd0:	str	x0, [sp, #168]
    4cd4:	ldr	x0, [sp, #272]
    4cd8:	ldr	x0, [x0, #16]
    4cdc:	b	4cf8 <encode_method+0x600>
    4ce0:	add	x0, sp, #0xa8
    4ce4:	mov	w3, #0x2                   	// #2
    4ce8:	mov	x2, x0
    4cec:	ldr	x1, [sp, #272]
    4cf0:	ldr	x0, [sp, #120]
    4cf4:	bl	29d0 <Perl_sv_2pv_flags@plt>
    4cf8:	str	x0, [sp, #280]
    4cfc:	ldr	x0, [sp, #272]
    4d00:	ldr	w0, [x0, #12]
    4d04:	and	w0, w0, #0x20000000
    4d08:	cmp	w0, #0x0
    4d0c:	b.eq	4d5c <encode_method+0x664>  // b.none
    4d10:	ldr	x0, [sp, #168]
    4d14:	cmp	x0, #0x0
    4d18:	b.eq	4d5c <encode_method+0x664>  // b.none
    4d1c:	add	x0, sp, #0xa8
    4d20:	mov	x2, x0
    4d24:	ldr	x1, [sp, #280]
    4d28:	ldr	x0, [sp, #120]
    4d2c:	bl	28c0 <Perl_utf8_to_bytes@plt>
    4d30:	cmp	x0, #0x0
    4d34:	b.ne	4d5c <encode_method+0x664>  // b.any
    4d38:	ldr	x0, [sp, #272]
    4d3c:	str	x0, [sp, #288]
    4d40:	ldr	x0, [sp, #288]
    4d44:	mov	x1, x0
    4d48:	ldr	x0, [sp, #120]
    4d4c:	bl	2e8c <S_SvREFCNT_dec>
    4d50:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4d54:	add	x0, x0, #0xe48
    4d58:	bl	2a90 <Perl_croak_nocontext@plt>
    4d5c:	ldr	x1, [sp, #80]
    4d60:	ldr	x0, [sp, #160]
    4d64:	add	x0, x1, x0
    4d68:	ldr	x1, [sp, #192]
    4d6c:	add	x0, x1, x0
    4d70:	str	x0, [sp, #192]
    4d74:	ldr	x1, [sp, #144]
    4d78:	ldr	x0, [sp, #168]
    4d7c:	add	x0, x1, x0
    4d80:	ldr	x1, [sp, #184]
    4d84:	add	x0, x1, x0
    4d88:	str	x0, [sp, #184]
    4d8c:	ldr	x0, [sp, #168]
    4d90:	mov	w4, #0x2                   	// #2
    4d94:	mov	x3, x0
    4d98:	ldr	x2, [sp, #280]
    4d9c:	ldr	x1, [sp, #224]
    4da0:	ldr	x0, [sp, #120]
    4da4:	bl	2900 <Perl_sv_catpvn_flags@plt>
    4da8:	ldr	x0, [sp, #272]
    4dac:	str	x0, [sp, #296]
    4db0:	ldr	x0, [sp, #296]
    4db4:	mov	x1, x0
    4db8:	ldr	x0, [sp, #120]
    4dbc:	bl	2e8c <S_SvREFCNT_dec>
    4dc0:	b	5060 <encode_method+0x968>
    4dc4:	ldr	x1, [sp, #80]
    4dc8:	ldr	x0, [sp, #160]
    4dcc:	add	x0, x1, x0
    4dd0:	ldr	x1, [sp, #192]
    4dd4:	add	x0, x1, x0
    4dd8:	str	x0, [sp, #192]
    4ddc:	ldr	x0, [sp, #112]
    4de0:	ldr	w0, [x0, #24]
    4de4:	sxtw	x1, w0
    4de8:	ldr	x0, [sp, #144]
    4dec:	add	x0, x1, x0
    4df0:	ldr	x1, [sp, #184]
    4df4:	add	x0, x1, x0
    4df8:	str	x0, [sp, #184]
    4dfc:	ldr	x0, [sp, #112]
    4e00:	ldr	x1, [x0, #16]
    4e04:	ldr	x0, [sp, #112]
    4e08:	ldr	w0, [x0, #24]
    4e0c:	sxtw	x0, w0
    4e10:	mov	w4, #0x2                   	// #2
    4e14:	mov	x3, x0
    4e18:	mov	x2, x1
    4e1c:	ldr	x1, [sp, #224]
    4e20:	ldr	x0, [sp, #120]
    4e24:	bl	2900 <Perl_sv_catpvn_flags@plt>
    4e28:	b	5060 <encode_method+0x968>
    4e2c:	ldr	x0, [sp, #72]
    4e30:	and	x0, x0, #0x1
    4e34:	cmp	x0, #0x0
    4e38:	b.eq	4e6c <encode_method+0x774>  // b.none
    4e3c:	ldr	x0, [sp, #112]
    4e40:	ldr	x2, [x0, #32]
    4e44:	ldr	x0, [sp, #80]
    4e48:	ldr	x1, [sp, #88]
    4e4c:	add	x0, x1, x0
    4e50:	ldrb	w0, [x0]
    4e54:	and	x0, x0, #0xff
    4e58:	mov	x3, x0
    4e5c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4e60:	add	x1, x0, #0xee0
    4e64:	ldr	x0, [sp, #120]
    4e68:	bl	2a70 <Perl_croak@plt>
    4e6c:	ldr	x0, [sp, #72]
    4e70:	and	x0, x0, #0x2
    4e74:	cmp	x0, #0x0
    4e78:	b.eq	4edc <encode_method+0x7e4>  // b.none
    4e7c:	ldr	x0, [sp, #72]
    4e80:	and	x0, x0, #0x10
    4e84:	cmp	x0, #0x0
    4e88:	b.eq	4ea4 <encode_method+0x7ac>  // b.none
    4e8c:	mov	w1, #0x2c                  	// #44
    4e90:	ldr	x0, [sp, #120]
    4e94:	bl	2c10 <Perl_ckwarn@plt>
    4e98:	and	w0, w0, #0xff
    4e9c:	cmp	w0, #0x0
    4ea0:	b.eq	4edc <encode_method+0x7e4>  // b.none
    4ea4:	ldr	x0, [sp, #112]
    4ea8:	ldr	x2, [x0, #32]
    4eac:	ldr	x0, [sp, #80]
    4eb0:	ldr	x1, [sp, #88]
    4eb4:	add	x0, x1, x0
    4eb8:	ldrb	w0, [x0]
    4ebc:	and	x0, x0, #0xff
    4ec0:	mov	x4, x0
    4ec4:	mov	x3, x2
    4ec8:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4ecc:	add	x2, x0, #0xee0
    4ed0:	mov	w1, #0x2c                  	// #44
    4ed4:	ldr	x0, [sp, #120]
    4ed8:	bl	2980 <Perl_warner@plt>
    4edc:	ldr	x0, [sp, #72]
    4ee0:	and	x0, x0, #0x4
    4ee4:	cmp	x0, #0x0
    4ee8:	b.ne	5174 <encode_method+0xa7c>  // b.any
    4eec:	ldr	x0, [sp, #72]
    4ef0:	and	x0, x0, #0x700
    4ef4:	cmp	x0, #0x0
    4ef8:	b.eq	501c <encode_method+0x924>  // b.none
    4efc:	ldr	x0, [sp, #120]
    4f00:	add	x0, x0, #0x150
    4f04:	ldr	x1, [sp, #40]
    4f08:	cmp	x1, x0
    4f0c:	b.eq	4f38 <encode_method+0x840>  // b.none
    4f10:	ldr	x0, [sp, #80]
    4f14:	ldr	x1, [sp, #88]
    4f18:	add	x0, x1, x0
    4f1c:	ldrb	w0, [x0]
    4f20:	and	x0, x0, #0xff
    4f24:	ldr	x2, [sp, #40]
    4f28:	mov	x1, x0
    4f2c:	ldr	x0, [sp, #120]
    4f30:	bl	434c <do_fallback_cb>
    4f34:	b	4f5c <encode_method+0x864>
    4f38:	ldr	x0, [sp, #80]
    4f3c:	ldr	x1, [sp, #88]
    4f40:	add	x0, x1, x0
    4f44:	ldrb	w0, [x0]
    4f48:	and	x0, x0, #0xff
    4f4c:	mov	x1, x0
    4f50:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    4f54:	add	x0, x0, #0xf08
    4f58:	bl	2bd0 <Perl_newSVpvf_nocontext@plt>
    4f5c:	str	x0, [sp, #240]
    4f60:	ldr	x0, [sp, #240]
    4f64:	ldr	w1, [x0, #12]
    4f68:	mov	w0, #0x400                 	// #1024
    4f6c:	movk	w0, #0x2020, lsl #16
    4f70:	and	w1, w1, w0
    4f74:	mov	w0, #0x400                 	// #1024
    4f78:	movk	w0, #0x2000, lsl #16
    4f7c:	cmp	w1, w0
    4f80:	b.ne	4fa0 <encode_method+0x8a8>  // b.any
    4f84:	ldr	x0, [sp, #240]
    4f88:	ldr	x0, [x0]
    4f8c:	ldr	x0, [x0, #16]
    4f90:	str	x0, [sp, #168]
    4f94:	ldr	x0, [sp, #240]
    4f98:	ldr	x0, [x0, #16]
    4f9c:	b	4fb4 <encode_method+0x8bc>
    4fa0:	add	x0, sp, #0xa8
    4fa4:	mov	x2, x0
    4fa8:	ldr	x1, [sp, #240]
    4fac:	ldr	x0, [sp, #120]
    4fb0:	bl	2bb0 <Perl_sv_2pvutf8@plt>
    4fb4:	str	x0, [sp, #248]
    4fb8:	ldr	x1, [sp, #80]
    4fbc:	ldr	x0, [sp, #192]
    4fc0:	add	x0, x1, x0
    4fc4:	add	x0, x0, #0x1
    4fc8:	str	x0, [sp, #192]
    4fcc:	ldr	x1, [sp, #144]
    4fd0:	ldr	x0, [sp, #168]
    4fd4:	add	x0, x1, x0
    4fd8:	ldr	x1, [sp, #184]
    4fdc:	add	x0, x1, x0
    4fe0:	str	x0, [sp, #184]
    4fe4:	ldr	x0, [sp, #168]
    4fe8:	mov	w4, #0x2                   	// #2
    4fec:	mov	x3, x0
    4ff0:	ldr	x2, [sp, #248]
    4ff4:	ldr	x1, [sp, #224]
    4ff8:	ldr	x0, [sp, #120]
    4ffc:	bl	2900 <Perl_sv_catpvn_flags@plt>
    5000:	ldr	x0, [sp, #240]
    5004:	str	x0, [sp, #256]
    5008:	ldr	x0, [sp, #256]
    500c:	mov	x1, x0
    5010:	ldr	x0, [sp, #120]
    5014:	bl	2e8c <S_SvREFCNT_dec>
    5018:	b	5060 <encode_method+0x968>
    501c:	ldr	x1, [sp, #80]
    5020:	ldr	x0, [sp, #192]
    5024:	add	x0, x1, x0
    5028:	add	x0, x0, #0x1
    502c:	str	x0, [sp, #192]
    5030:	ldr	x1, [sp, #144]
    5034:	ldr	x0, [sp, #184]
    5038:	add	x0, x1, x0
    503c:	add	x0, x0, #0x3
    5040:	str	x0, [sp, #184]
    5044:	mov	w4, #0x2                   	// #2
    5048:	mov	x3, #0x3                   	// #3
    504c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5050:	add	x2, x0, #0xf10
    5054:	ldr	x1, [sp, #224]
    5058:	ldr	x0, [sp, #120]
    505c:	bl	2900 <Perl_sv_catpvn_flags@plt>
    5060:	ldr	x0, [sp, #224]
    5064:	ldr	x1, [x0, #16]
    5068:	ldr	x0, [sp, #224]
    506c:	ldr	x0, [x0]
    5070:	ldr	x0, [x0, #16]
    5074:	add	x0, x1, x0
    5078:	str	x0, [sp, #200]
    507c:	ldr	x0, [sp, #224]
    5080:	ldr	x0, [x0]
    5084:	ldr	x1, [x0, #24]
    5088:	ldr	x0, [sp, #184]
    508c:	sub	x0, x1, x0
    5090:	sub	x0, x0, #0x1
    5094:	str	x0, [sp, #144]
    5098:	ldr	x1, [sp, #216]
    509c:	ldr	x0, [sp, #192]
    50a0:	add	x0, x1, x0
    50a4:	str	x0, [sp, #88]
    50a8:	ldr	x1, [sp, #176]
    50ac:	ldr	x0, [sp, #192]
    50b0:	sub	x0, x1, x0
    50b4:	str	x0, [sp, #80]
    50b8:	b	5108 <encode_method+0xa10>
    50bc:	ldr	x0, [sp, #112]
    50c0:	ldr	x0, [x0, #8]
    50c4:	ldr	x1, [sp, #104]
    50c8:	cmp	x1, x0
    50cc:	b.ne	50dc <encode_method+0x9e4>  // b.any
    50d0:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    50d4:	add	x0, x0, #0xf18
    50d8:	b	50e4 <encode_method+0x9ec>
    50dc:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    50e0:	add	x0, x0, #0xf20
    50e4:	ldr	x1, [sp, #112]
    50e8:	ldr	x1, [x1, #32]
    50ec:	mov	x4, x1
    50f0:	mov	x3, x0
    50f4:	ldr	w2, [sp, #140]
    50f8:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    50fc:	add	x1, x0, #0xf28
    5100:	ldr	x0, [sp, #120]
    5104:	bl	2a70 <Perl_croak@plt>
    5108:	ldr	x2, [sp, #144]
    510c:	ldr	x0, [sp, #72]
    5110:	cmp	x0, #0x0
    5114:	cset	w0, eq  // eq = none
    5118:	and	w0, w0, #0xff
    511c:	mov	w4, w0
    5120:	ldr	x0, [sp, #152]
    5124:	add	x3, sp, #0x90
    5128:	add	x1, sp, #0x50
    512c:	str	x0, [sp]
    5130:	ldr	x7, [sp, #232]
    5134:	mov	w6, w4
    5138:	mov	x5, x3
    513c:	mov	x4, x2
    5140:	ldr	x3, [sp, #200]
    5144:	mov	x2, x1
    5148:	ldr	x1, [sp, #88]
    514c:	ldr	x0, [sp, #104]
    5150:	bl	2bc0 <do_encode@plt>
    5154:	str	w0, [sp, #140]
    5158:	ldr	w0, [sp, #140]
    515c:	cmp	w0, #0x0
    5160:	b.ne	4914 <encode_method+0x21c>  // b.any
    5164:	nop
    5168:	b	5178 <encode_method+0xa80>
    516c:	nop
    5170:	b	5178 <encode_method+0xa80>
    5174:	nop
    5178:	ldr	x0, [sp, #72]
    517c:	cmp	x0, #0x0
    5180:	b.eq	51f4 <encode_method+0xafc>  // b.none
    5184:	ldr	x0, [sp, #72]
    5188:	and	x0, x0, #0x8
    518c:	cmp	x0, #0x0
    5190:	b.ne	51f4 <encode_method+0xafc>  // b.any
    5194:	ldr	x1, [sp, #80]
    5198:	ldr	x0, [sp, #192]
    519c:	add	x0, x1, x0
    51a0:	ldr	x1, [sp, #176]
    51a4:	sub	x0, x1, x0
    51a8:	str	x0, [sp, #192]
    51ac:	ldr	x0, [sp, #80]
    51b0:	ldr	x1, [sp, #88]
    51b4:	add	x0, x1, x0
    51b8:	ldr	x3, [sp, #192]
    51bc:	mov	x2, x0
    51c0:	ldr	x1, [sp, #96]
    51c4:	ldr	x0, [sp, #120]
    51c8:	bl	2ba0 <Perl_sv_setpvn@plt>
    51cc:	ldr	x0, [sp, #96]
    51d0:	ldr	w0, [x0, #12]
    51d4:	lsr	w0, w0, #22
    51d8:	mov	w0, w0
    51dc:	and	x0, x0, #0x1
    51e0:	cmp	x0, #0x0
    51e4:	b.eq	51f4 <encode_method+0xafc>  // b.none
    51e8:	ldr	x1, [sp, #96]
    51ec:	ldr	x0, [sp, #120]
    51f0:	bl	2ab0 <Perl_mg_set@plt>
    51f4:	ldr	x2, [sp, #144]
    51f8:	ldr	x0, [sp, #224]
    51fc:	ldr	x0, [x0]
    5200:	ldr	x1, [sp, #184]
    5204:	add	x1, x2, x1
    5208:	str	x1, [x0, #16]
    520c:	ldr	x0, [sp, #224]
    5210:	ldr	w1, [x0, #12]
    5214:	mov	w0, #0xff                  	// #255
    5218:	movk	w0, #0x5fff, lsl #16
    521c:	and	w1, w1, w0
    5220:	ldr	x0, [sp, #224]
    5224:	str	w1, [x0, #12]
    5228:	ldr	x0, [sp, #224]
    522c:	ldr	w1, [x0, #12]
    5230:	mov	w0, #0x4400                	// #17408
    5234:	orr	w1, w1, w0
    5238:	ldr	x0, [sp, #224]
    523c:	str	w1, [x0, #12]
    5240:	ldr	x0, [sp, #64]
    5244:	cmp	x0, #0x0
    5248:	b.eq	5270 <encode_method+0xb78>  // b.none
    524c:	ldr	x0, [sp, #64]
    5250:	ldr	x1, [x0]
    5254:	ldr	x2, [sp, #80]
    5258:	ldr	x0, [sp, #192]
    525c:	add	x0, x2, x0
    5260:	add	x1, x1, x0
    5264:	ldr	x0, [sp, #64]
    5268:	str	x1, [x0]
    526c:	b	5274 <encode_method+0xb7c>
    5270:	nop
    5274:	ldr	x0, [sp, #224]
    5278:	ldr	x1, [x0, #16]
    527c:	ldr	x0, [sp, #224]
    5280:	ldr	x0, [x0]
    5284:	ldr	x0, [x0, #16]
    5288:	add	x0, x1, x0
    528c:	strb	wzr, [x0]
    5290:	ldr	x0, [sp, #48]
    5294:	cmp	x0, #0x0
    5298:	b.eq	52a8 <encode_method+0xbb0>  // b.none
    529c:	ldr	x0, [sp, #48]
    52a0:	ldr	w1, [sp, #140]
    52a4:	str	w1, [x0]
    52a8:	ldr	x0, [sp, #224]
    52ac:	mov	x1, x0
    52b0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    52b4:	ldr	x0, [x0, #3992]
    52b8:	ldr	x2, [sp, #312]
    52bc:	ldr	x0, [x0]
    52c0:	eor	x0, x2, x0
    52c4:	cmp	x0, #0x0
    52c8:	b.eq	52d0 <encode_method+0xbd8>  // b.none
    52cc:	bl	29f0 <__stack_chk_fail@plt>
    52d0:	mov	x0, x1
    52d4:	ldp	x29, x30, [sp, #16]
    52d8:	add	sp, sp, #0x140
    52dc:	ret

00000000000052e0 <strict_utf8>:
    52e0:	stp	x29, x30, [sp, #-48]!
    52e4:	mov	x29, sp
    52e8:	str	x0, [sp, #24]
    52ec:	str	x1, [sp, #16]
    52f0:	ldr	x0, [sp, #16]
    52f4:	ldr	x0, [x0, #16]
    52f8:	str	x0, [sp, #16]
    52fc:	ldr	x0, [sp, #16]
    5300:	cmp	x0, #0x0
    5304:	b.eq	531c <strict_utf8+0x3c>  // b.none
    5308:	ldr	x0, [sp, #16]
    530c:	ldr	w0, [x0, #12]
    5310:	and	w0, w0, #0xff
    5314:	cmp	w0, #0xc
    5318:	b.eq	5324 <strict_utf8+0x44>  // b.none
    531c:	mov	w0, #0x0                   	// #0
    5320:	b	55a4 <strict_utf8+0x2c4>
    5324:	ldr	x0, [sp, #16]
    5328:	str	x0, [sp, #32]
    532c:	mov	w6, #0x0                   	// #0
    5330:	mov	x5, #0x0                   	// #0
    5334:	mov	w4, #0x20                  	// #32
    5338:	mov	w3, #0xb                   	// #11
    533c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5340:	add	x2, x0, #0xf50
    5344:	ldr	x1, [sp, #32]
    5348:	ldr	x0, [sp, #24]
    534c:	bl	2b90 <Perl_hv_common_key_len@plt>
    5350:	str	x0, [sp, #40]
    5354:	ldr	x0, [sp, #40]
    5358:	cmp	x0, #0x0
    535c:	b.ne	5368 <strict_utf8+0x88>  // b.any
    5360:	mov	w0, #0x0                   	// #0
    5364:	b	55a4 <strict_utf8+0x2c4>
    5368:	ldr	x0, [sp, #40]
    536c:	ldr	x0, [x0]
    5370:	cmp	x0, #0x0
    5374:	cset	w0, ne  // ne = any
    5378:	and	w0, w0, #0xff
    537c:	and	x0, x0, #0xff
    5380:	cmp	x0, #0x0
    5384:	b.eq	5598 <strict_utf8+0x2b8>  // b.none
    5388:	ldr	x0, [sp, #40]
    538c:	ldr	x0, [x0]
    5390:	ldr	w0, [x0, #12]
    5394:	lsr	w0, w0, #21
    5398:	mov	w0, w0
    539c:	and	x0, x0, #0x1
    53a0:	cmp	x0, #0x0
    53a4:	b.eq	53c4 <strict_utf8+0xe4>  // b.none
    53a8:	ldr	x0, [sp, #40]
    53ac:	ldr	x0, [x0]
    53b0:	mov	x1, x0
    53b4:	ldr	x0, [sp, #24]
    53b8:	bl	2af0 <Perl_mg_get@plt>
    53bc:	cmp	w0, #0x0
    53c0:	nop
    53c4:	ldr	x0, [sp, #40]
    53c8:	ldr	x1, [x0]
    53cc:	ldr	x0, [sp, #24]
    53d0:	add	x0, x0, #0x138
    53d4:	sub	x0, x1, x0
    53d8:	asr	x1, x0, #3
    53dc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    53e0:	movk	x0, #0xaaab
    53e4:	mul	x0, x1, x0
    53e8:	cmp	x0, #0x3
    53ec:	b.hi	5410 <strict_utf8+0x130>  // b.pmore
    53f0:	ldr	x0, [sp, #40]
    53f4:	ldr	x1, [x0]
    53f8:	ldr	x0, [sp, #24]
    53fc:	add	x0, x0, #0x138
    5400:	cmp	x1, x0
    5404:	cset	w0, eq  // eq = none
    5408:	and	w0, w0, #0xff
    540c:	b	5588 <strict_utf8+0x2a8>
    5410:	ldr	x0, [sp, #40]
    5414:	ldr	x0, [x0]
    5418:	ldr	w0, [x0, #12]
    541c:	and	w0, w0, #0xff00
    5420:	cmp	w0, #0x0
    5424:	b.eq	5584 <strict_utf8+0x2a4>  // b.none
    5428:	ldr	x0, [sp, #40]
    542c:	ldr	x0, [x0]
    5430:	ldr	w0, [x0, #12]
    5434:	and	w0, w0, #0x400
    5438:	cmp	w0, #0x0
    543c:	b.eq	54b8 <strict_utf8+0x1d8>  // b.none
    5440:	ldr	x0, [sp, #40]
    5444:	ldr	x0, [x0]
    5448:	ldr	x0, [x0]
    544c:	cmp	x0, #0x0
    5450:	b.eq	54a4 <strict_utf8+0x1c4>  // b.none
    5454:	ldr	x0, [sp, #40]
    5458:	ldr	x0, [x0]
    545c:	ldr	x0, [x0]
    5460:	ldr	x0, [x0, #16]
    5464:	cmp	x0, #0x1
    5468:	b.hi	549c <strict_utf8+0x1bc>  // b.pmore
    546c:	ldr	x0, [sp, #40]
    5470:	ldr	x0, [x0]
    5474:	ldr	x0, [x0]
    5478:	ldr	x0, [x0, #16]
    547c:	cmp	x0, #0x0
    5480:	b.eq	54a4 <strict_utf8+0x1c4>  // b.none
    5484:	ldr	x0, [sp, #40]
    5488:	ldr	x0, [x0]
    548c:	ldr	x0, [x0, #16]
    5490:	ldrb	w0, [x0]
    5494:	cmp	w0, #0x30
    5498:	b.eq	54a4 <strict_utf8+0x1c4>  // b.none
    549c:	mov	w0, #0x1                   	// #1
    54a0:	b	54a8 <strict_utf8+0x1c8>
    54a4:	mov	w0, #0x0                   	// #0
    54a8:	cmp	w0, #0x0
    54ac:	cset	w0, ne  // ne = any
    54b0:	and	w0, w0, #0xff
    54b4:	b	5588 <strict_utf8+0x2a8>
    54b8:	ldr	x0, [sp, #40]
    54bc:	ldr	x0, [x0]
    54c0:	ldr	w0, [x0, #12]
    54c4:	and	w0, w0, #0x100
    54c8:	cmp	w0, #0x0
    54cc:	b.eq	54f0 <strict_utf8+0x210>  // b.none
    54d0:	ldr	x0, [sp, #40]
    54d4:	ldr	x0, [x0]
    54d8:	ldr	x0, [x0]
    54dc:	ldr	x0, [x0, #32]
    54e0:	cmp	x0, #0x0
    54e4:	cset	w0, ne  // ne = any
    54e8:	and	w0, w0, #0xff
    54ec:	b	5588 <strict_utf8+0x2a8>
    54f0:	ldr	x0, [sp, #40]
    54f4:	ldr	x0, [x0]
    54f8:	ldr	w0, [x0, #12]
    54fc:	and	w0, w0, #0x800
    5500:	cmp	w0, #0x0
    5504:	b.eq	5548 <strict_utf8+0x268>  // b.none
    5508:	ldr	x0, [sp, #40]
    550c:	ldr	x0, [x0]
    5510:	ldr	x0, [x0, #16]
    5514:	ldr	w0, [x0, #12]
    5518:	and	w0, w0, #0x100000
    551c:	cmp	w0, #0x0
    5520:	b.eq	556c <strict_utf8+0x28c>  // b.none
    5524:	ldr	x0, [sp, #40]
    5528:	ldr	x0, [x0]
    552c:	ldr	x0, [x0, #16]
    5530:	ldr	x0, [x0]
    5534:	ldr	x0, [x0]
    5538:	ldr	w0, [x0, #12]
    553c:	and	w0, w0, #0x10000000
    5540:	cmp	w0, #0x0
    5544:	b.eq	556c <strict_utf8+0x28c>  // b.none
    5548:	ldr	x0, [sp, #40]
    554c:	ldr	x0, [x0]
    5550:	mov	w2, #0x0                   	// #0
    5554:	mov	x1, x0
    5558:	ldr	x0, [sp, #24]
    555c:	bl	2880 <Perl_sv_2bool_flags@plt>
    5560:	and	w0, w0, #0xff
    5564:	cmp	w0, #0x0
    5568:	b.eq	5574 <strict_utf8+0x294>  // b.none
    556c:	mov	w0, #0x1                   	// #1
    5570:	b	5578 <strict_utf8+0x298>
    5574:	mov	w0, #0x0                   	// #0
    5578:	and	w0, w0, #0x1
    557c:	and	w0, w0, #0xff
    5580:	b	5588 <strict_utf8+0x2a8>
    5584:	mov	w0, #0x0                   	// #0
    5588:	cmp	w0, #0x0
    558c:	b.eq	5598 <strict_utf8+0x2b8>  // b.none
    5590:	mov	w0, #0x1                   	// #1
    5594:	b	559c <strict_utf8+0x2bc>
    5598:	mov	w0, #0x0                   	// #0
    559c:	and	w0, w0, #0x1
    55a0:	and	w0, w0, #0xff
    55a4:	ldp	x29, x30, [sp], #48
    55a8:	ret

00000000000055ac <process_utf8>:
    55ac:	stp	x29, x30, [sp, #-288]!
    55b0:	mov	x29, sp
    55b4:	str	x0, [sp, #56]
    55b8:	str	x1, [sp, #48]
    55bc:	str	x2, [sp, #40]
    55c0:	str	x3, [sp, #32]
    55c4:	str	x4, [sp, #24]
    55c8:	strb	w5, [sp, #23]
    55cc:	strb	w6, [sp, #22]
    55d0:	strb	w7, [sp, #21]
    55d4:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    55d8:	ldr	x0, [x0, #3992]
    55dc:	ldr	x1, [x0]
    55e0:	str	x1, [sp, #280]
    55e4:	mov	x1, #0x0                   	// #0
    55e8:	ldrb	w0, [sp, #22]
    55ec:	cmp	w0, #0x0
    55f0:	b.eq	55fc <process_utf8+0x50>  // b.none
    55f4:	mov	w0, #0x1500                	// #5376
    55f8:	b	5600 <process_utf8+0x54>
    55fc:	mov	w0, #0x0                   	// #0
    5600:	str	w0, [sp, #68]
    5604:	ldr	x0, [sp, #24]
    5608:	ldr	w0, [x0, #12]
    560c:	and	w0, w0, #0xff00
    5610:	cmp	w0, #0x0
    5614:	b.ne	562c <process_utf8+0x80>  // b.any
    5618:	ldr	x0, [sp, #56]
    561c:	add	x0, x0, #0x150
    5620:	str	x0, [sp, #96]
    5624:	str	xzr, [sp, #104]
    5628:	b	5698 <process_utf8+0xec>
    562c:	ldr	x0, [sp, #24]
    5630:	ldr	w0, [x0, #12]
    5634:	and	w0, w0, #0x800
    5638:	cmp	w0, #0x0
    563c:	b.eq	5654 <process_utf8+0xa8>  // b.none
    5640:	ldr	x0, [sp, #24]
    5644:	str	x0, [sp, #96]
    5648:	mov	x0, #0x108                 	// #264
    564c:	str	x0, [sp, #104]
    5650:	b	5698 <process_utf8+0xec>
    5654:	ldr	x0, [sp, #56]
    5658:	add	x0, x0, #0x150
    565c:	str	x0, [sp, #96]
    5660:	ldr	x0, [sp, #24]
    5664:	ldr	w0, [x0, #12]
    5668:	and	w0, w0, #0x100
    566c:	cmp	w0, #0x0
    5670:	b.eq	5684 <process_utf8+0xd8>  // b.none
    5674:	ldr	x0, [sp, #24]
    5678:	ldr	x0, [x0]
    567c:	ldr	x0, [x0, #32]
    5680:	b	5694 <process_utf8+0xe8>
    5684:	mov	w2, #0x0                   	// #0
    5688:	ldr	x1, [sp, #24]
    568c:	ldr	x0, [sp, #56]
    5690:	bl	2870 <Perl_sv_2iv_flags@plt>
    5694:	str	x0, [sp, #104]
    5698:	ldr	x0, [sp, #48]
    569c:	ldr	w1, [x0, #12]
    56a0:	mov	w0, #0xff                  	// #255
    56a4:	movk	w0, #0x5fff, lsl #16
    56a8:	and	w1, w1, w0
    56ac:	ldr	x0, [sp, #48]
    56b0:	str	w1, [x0, #12]
    56b4:	ldr	x0, [sp, #48]
    56b8:	ldr	w1, [x0, #12]
    56bc:	mov	w0, #0x4400                	// #17408
    56c0:	orr	w1, w1, w0
    56c4:	ldr	x0, [sp, #48]
    56c8:	str	w1, [x0, #12]
    56cc:	ldr	x0, [sp, #48]
    56d0:	ldr	x0, [x0]
    56d4:	str	xzr, [x0, #16]
    56d8:	ldr	x0, [sp, #40]
    56dc:	cmp	x0, #0x0
    56e0:	b.eq	5714 <process_utf8+0x168>  // b.none
    56e4:	ldr	x0, [sp, #32]
    56e8:	cmp	x0, #0x0
    56ec:	b.eq	5714 <process_utf8+0x168>  // b.none
    56f0:	ldr	x1, [sp, #40]
    56f4:	ldr	x0, [sp, #32]
    56f8:	cmp	x1, x0
    56fc:	b.cs	5714 <process_utf8+0x168>  // b.hs, b.nlast
    5700:	ldr	x1, [sp, #32]
    5704:	ldr	x0, [sp, #40]
    5708:	sub	x0, x1, x0
    570c:	add	x0, x0, #0x1
    5710:	b	5718 <process_utf8+0x16c>
    5714:	mov	x0, #0x1                   	// #1
    5718:	str	x0, [sp, #120]
    571c:	ldr	x0, [sp, #48]
    5720:	ldr	w0, [x0, #12]
    5724:	and	w0, w0, #0x10000000
    5728:	cmp	w0, #0x0
    572c:	b.ne	5748 <process_utf8+0x19c>  // b.any
    5730:	ldr	x0, [sp, #48]
    5734:	ldr	x0, [x0]
    5738:	ldr	x0, [x0, #24]
    573c:	ldr	x1, [sp, #120]
    5740:	cmp	x1, x0
    5744:	b.ls	575c <process_utf8+0x1b0>  // b.plast
    5748:	ldr	x2, [sp, #120]
    574c:	ldr	x1, [sp, #48]
    5750:	ldr	x0, [sp, #56]
    5754:	bl	2a30 <Perl_sv_grow@plt>
    5758:	b	5764 <process_utf8+0x1b8>
    575c:	ldr	x0, [sp, #48]
    5760:	ldr	x0, [x0, #16]
    5764:	str	x0, [sp, #112]
    5768:	ldrb	w0, [sp, #21]
    576c:	cmp	w0, #0x0
    5770:	b.ne	5784 <process_utf8+0x1d8>  // b.any
    5774:	ldr	x0, [sp, #104]
    5778:	and	x0, x0, #0x800
    577c:	cmp	x0, #0x0
    5780:	b.eq	578c <process_utf8+0x1e0>  // b.none
    5784:	mov	w0, #0x1                   	// #1
    5788:	b	5790 <process_utf8+0x1e4>
    578c:	mov	w0, #0x0                   	// #0
    5790:	strb	w0, [sp, #21]
    5794:	ldrb	w0, [sp, #21]
    5798:	and	w0, w0, #0x1
    579c:	strb	w0, [sp, #21]
    57a0:	b	5e84 <process_utf8+0x8d8>
    57a4:	ldr	x1, [sp, #32]
    57a8:	ldr	x0, [sp, #40]
    57ac:	sub	x0, x1, x0
    57b0:	mov	x1, x0
    57b4:	add	x0, sp, #0x50
    57b8:	ldr	w4, [sp, #68]
    57bc:	mov	x3, #0x0                   	// #0
    57c0:	mov	x2, x0
    57c4:	ldr	x0, [sp, #40]
    57c8:	bl	3938 <S_is_utf8_string_loclen_flags>
    57cc:	strb	w0, [sp, #67]
    57d0:	ldr	x1, [sp, #80]
    57d4:	ldr	x0, [sp, #40]
    57d8:	sub	x0, x1, x0
    57dc:	str	x0, [sp, #160]
    57e0:	ldr	x2, [sp, #160]
    57e4:	ldr	x1, [sp, #40]
    57e8:	ldr	x0, [sp, #112]
    57ec:	bl	2860 <memmove@plt>
    57f0:	ldr	x1, [sp, #112]
    57f4:	ldr	x0, [sp, #160]
    57f8:	add	x0, x1, x0
    57fc:	str	x0, [sp, #112]
    5800:	ldr	x0, [sp, #80]
    5804:	str	x0, [sp, #40]
    5808:	ldrb	w0, [sp, #67]
    580c:	and	x0, x0, #0xff
    5810:	cmp	x0, #0x0
    5814:	b.ne	5e9c <process_utf8+0x8f0>  // b.any
    5818:	ldrb	w0, [sp, #21]
    581c:	cmp	w0, #0x0
    5820:	b.eq	5840 <process_utf8+0x294>  // b.none
    5824:	ldr	w2, [sp, #68]
    5828:	ldr	x1, [sp, #32]
    582c:	ldr	x0, [sp, #40]
    5830:	bl	3bfc <S_is_utf8_valid_partial_char_flags>
    5834:	and	w0, w0, #0xff
    5838:	cmp	w0, #0x0
    583c:	b.ne	5e9c <process_utf8+0x8f0>  // b.any
    5840:	ldr	x1, [sp, #32]
    5844:	ldr	x0, [sp, #40]
    5848:	sub	x0, x1, x0
    584c:	mov	x1, x0
    5850:	add	x0, sp, #0x48
    5854:	mov	x5, #0x0                   	// #0
    5858:	mov	x4, #0x0                   	// #0
    585c:	mov	w3, #0x9e                  	// #158
    5860:	mov	x2, x0
    5864:	ldr	x0, [sp, #40]
    5868:	bl	3c80 <S_utf8n_to_uvchr_msgs>
    586c:	str	x0, [sp, #168]
    5870:	ldrb	w0, [sp, #23]
    5874:	eor	w0, w0, #0x1
    5878:	and	w0, w0, #0xff
    587c:	cmp	w0, #0x0
    5880:	b.eq	58f0 <process_utf8+0x344>  // b.none
    5884:	ldr	x1, [sp, #104]
    5888:	mov	x0, #0x103                 	// #259
    588c:	and	x0, x1, x0
    5890:	cmp	x0, #0x0
    5894:	b.eq	58f0 <process_utf8+0x344>  // b.none
    5898:	str	xzr, [sp, #128]
    589c:	b	58e0 <process_utf8+0x334>
    58a0:	ldr	x0, [sp, #128]
    58a4:	lsl	x0, x0, #2
    58a8:	add	x1, sp, #0xc8
    58ac:	add	x3, x1, x0
    58b0:	ldr	x1, [sp, #40]
    58b4:	ldr	x0, [sp, #128]
    58b8:	add	x0, x1, x0
    58bc:	ldrb	w0, [x0]
    58c0:	mov	w2, w0
    58c4:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    58c8:	add	x1, x0, #0xf60
    58cc:	mov	x0, x3
    58d0:	bl	2930 <sprintf@plt>
    58d4:	ldr	x0, [sp, #128]
    58d8:	add	x0, x0, #0x1
    58dc:	str	x0, [sp, #128]
    58e0:	ldr	x0, [sp, #72]
    58e4:	ldr	x1, [sp, #128]
    58e8:	cmp	x1, x0
    58ec:	b.cc	58a0 <process_utf8+0x2f4>  // b.lo, b.ul, b.last
    58f0:	ldr	x0, [sp, #104]
    58f4:	and	x0, x0, #0x1
    58f8:	cmp	x0, #0x0
    58fc:	b.eq	5980 <process_utf8+0x3d4>  // b.none
    5900:	ldrb	w0, [sp, #23]
    5904:	cmp	w0, #0x0
    5908:	b.eq	5944 <process_utf8+0x398>  // b.none
    590c:	ldrb	w0, [sp, #22]
    5910:	cmp	w0, #0x0
    5914:	b.eq	5924 <process_utf8+0x378>  // b.none
    5918:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    591c:	add	x0, x0, #0xf68
    5920:	b	592c <process_utf8+0x380>
    5924:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5928:	add	x0, x0, #0xf70
    592c:	mov	x3, x0
    5930:	ldr	x2, [sp, #168]
    5934:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5938:	add	x1, x0, #0xea0
    593c:	ldr	x0, [sp, #56]
    5940:	bl	2a70 <Perl_croak@plt>
    5944:	ldrb	w0, [sp, #22]
    5948:	cmp	w0, #0x0
    594c:	b.eq	595c <process_utf8+0x3b0>  // b.none
    5950:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5954:	add	x0, x0, #0xf68
    5958:	b	5964 <process_utf8+0x3b8>
    595c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5960:	add	x0, x0, #0xf70
    5964:	add	x1, sp, #0xc8
    5968:	mov	x3, x1
    596c:	mov	x2, x0
    5970:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5974:	add	x1, x0, #0xf78
    5978:	ldr	x0, [sp, #56]
    597c:	bl	2a70 <Perl_croak@plt>
    5980:	ldr	x0, [sp, #104]
    5984:	and	x0, x0, #0x2
    5988:	cmp	x0, #0x0
    598c:	b.eq	5a44 <process_utf8+0x498>  // b.none
    5990:	ldr	x0, [sp, #104]
    5994:	and	x0, x0, #0x10
    5998:	cmp	x0, #0x0
    599c:	b.eq	59b8 <process_utf8+0x40c>  // b.none
    59a0:	mov	w1, #0x2c                  	// #44
    59a4:	ldr	x0, [sp, #56]
    59a8:	bl	2c10 <Perl_ckwarn@plt>
    59ac:	and	w0, w0, #0xff
    59b0:	cmp	w0, #0x0
    59b4:	b.eq	5a44 <process_utf8+0x498>  // b.none
    59b8:	ldrb	w0, [sp, #23]
    59bc:	cmp	w0, #0x0
    59c0:	b.eq	5a04 <process_utf8+0x458>  // b.none
    59c4:	ldrb	w0, [sp, #22]
    59c8:	cmp	w0, #0x0
    59cc:	b.eq	59dc <process_utf8+0x430>  // b.none
    59d0:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    59d4:	add	x0, x0, #0xf68
    59d8:	b	59e4 <process_utf8+0x438>
    59dc:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    59e0:	add	x0, x0, #0xf70
    59e4:	mov	x4, x0
    59e8:	ldr	x3, [sp, #168]
    59ec:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    59f0:	add	x2, x0, #0xea0
    59f4:	mov	w1, #0x2c                  	// #44
    59f8:	ldr	x0, [sp, #56]
    59fc:	bl	2980 <Perl_warner@plt>
    5a00:	b	5a44 <process_utf8+0x498>
    5a04:	ldrb	w0, [sp, #22]
    5a08:	cmp	w0, #0x0
    5a0c:	b.eq	5a1c <process_utf8+0x470>  // b.none
    5a10:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5a14:	add	x0, x0, #0xf68
    5a18:	b	5a24 <process_utf8+0x478>
    5a1c:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5a20:	add	x0, x0, #0xf70
    5a24:	add	x1, sp, #0xc8
    5a28:	mov	x4, x1
    5a2c:	mov	x3, x0
    5a30:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5a34:	add	x2, x0, #0xf78
    5a38:	mov	w1, #0x2c                  	// #44
    5a3c:	ldr	x0, [sp, #56]
    5a40:	bl	2980 <Perl_warner@plt>
    5a44:	ldr	x0, [sp, #104]
    5a48:	and	x0, x0, #0x4
    5a4c:	cmp	x0, #0x0
    5a50:	b.ne	5e98 <process_utf8+0x8ec>  // b.any
    5a54:	ldr	x0, [sp, #104]
    5a58:	and	x0, x0, #0x700
    5a5c:	cmp	x0, #0x0
    5a60:	b.eq	5dd4 <process_utf8+0x828>  // b.none
    5a64:	ldrb	w0, [sp, #23]
    5a68:	cmp	w0, #0x0
    5a6c:	b.eq	5bb0 <process_utf8+0x604>  // b.none
    5a70:	ldr	x0, [sp, #56]
    5a74:	add	x0, x0, #0x150
    5a78:	ldr	x1, [sp, #96]
    5a7c:	cmp	x1, x0
    5a80:	b.eq	5a98 <process_utf8+0x4ec>  // b.none
    5a84:	ldr	x2, [sp, #96]
    5a88:	ldr	x1, [sp, #168]
    5a8c:	ldr	x0, [sp, #56]
    5a90:	bl	434c <do_fallback_cb>
    5a94:	b	5af8 <process_utf8+0x54c>
    5a98:	ldr	x0, [sp, #104]
    5a9c:	and	x0, x0, #0x100
    5aa0:	cmp	x0, #0x0
    5aa4:	b.eq	5acc <process_utf8+0x520>  // b.none
    5aa8:	ldr	x0, [sp, #72]
    5aac:	cmp	x0, #0x1
    5ab0:	b.ne	5ac0 <process_utf8+0x514>  // b.any
    5ab4:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5ab8:	add	x0, x0, #0xf08
    5abc:	b	5af0 <process_utf8+0x544>
    5ac0:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5ac4:	add	x0, x0, #0xf98
    5ac8:	b	5af0 <process_utf8+0x544>
    5acc:	ldr	x0, [sp, #104]
    5ad0:	and	x0, x0, #0x200
    5ad4:	cmp	x0, #0x0
    5ad8:	b.eq	5ae8 <process_utf8+0x53c>  // b.none
    5adc:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5ae0:	add	x0, x0, #0xec0
    5ae4:	b	5af0 <process_utf8+0x544>
    5ae8:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5aec:	add	x0, x0, #0xec8
    5af0:	ldr	x1, [sp, #168]
    5af4:	bl	2bd0 <Perl_newSVpvf_nocontext@plt>
    5af8:	str	x0, [sp, #144]
    5afc:	ldr	x0, [sp, #144]
    5b00:	ldr	w1, [x0, #12]
    5b04:	mov	w0, #0x400                 	// #1024
    5b08:	movk	w0, #0x20, lsl #16
    5b0c:	and	w0, w1, w0
    5b10:	cmp	w0, #0x400
    5b14:	b.ne	5b34 <process_utf8+0x588>  // b.any
    5b18:	ldr	x0, [sp, #144]
    5b1c:	ldr	x0, [x0]
    5b20:	ldr	x0, [x0, #16]
    5b24:	str	x0, [sp, #88]
    5b28:	ldr	x0, [sp, #144]
    5b2c:	ldr	x0, [x0, #16]
    5b30:	b	5b4c <process_utf8+0x5a0>
    5b34:	add	x0, sp, #0x58
    5b38:	mov	w3, #0x2                   	// #2
    5b3c:	mov	x2, x0
    5b40:	ldr	x1, [sp, #144]
    5b44:	ldr	x0, [sp, #56]
    5b48:	bl	29d0 <Perl_sv_2pv_flags@plt>
    5b4c:	str	x0, [sp, #136]
    5b50:	ldr	x0, [sp, #144]
    5b54:	ldr	w0, [x0, #12]
    5b58:	and	w0, w0, #0x20000000
    5b5c:	cmp	w0, #0x0
    5b60:	b.eq	5cf0 <process_utf8+0x744>  // b.none
    5b64:	ldr	x0, [sp, #88]
    5b68:	cmp	x0, #0x0
    5b6c:	b.eq	5cf0 <process_utf8+0x744>  // b.none
    5b70:	add	x0, sp, #0x58
    5b74:	mov	x2, x0
    5b78:	ldr	x1, [sp, #136]
    5b7c:	ldr	x0, [sp, #56]
    5b80:	bl	28c0 <Perl_utf8_to_bytes@plt>
    5b84:	cmp	x0, #0x0
    5b88:	b.ne	5cf0 <process_utf8+0x744>  // b.any
    5b8c:	ldr	x0, [sp, #144]
    5b90:	str	x0, [sp, #184]
    5b94:	ldr	x0, [sp, #184]
    5b98:	mov	x1, x0
    5b9c:	ldr	x0, [sp, #56]
    5ba0:	bl	2e8c <S_SvREFCNT_dec>
    5ba4:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5ba8:	add	x0, x0, #0xe48
    5bac:	bl	2a90 <Perl_croak_nocontext@plt>
    5bb0:	ldr	x0, [sp, #56]
    5bb4:	add	x0, x0, #0x150
    5bb8:	ldr	x1, [sp, #96]
    5bbc:	cmp	x1, x0
    5bc0:	b.eq	5be4 <process_utf8+0x638>  // b.none
    5bc4:	ldr	x0, [sp, #72]
    5bc8:	ldr	x3, [sp, #96]
    5bcc:	mov	x2, x0
    5bd0:	ldr	x1, [sp, #40]
    5bd4:	ldr	x0, [sp, #56]
    5bd8:	bl	4504 <do_bytes_fallback_cb>
    5bdc:	str	x0, [sp, #144]
    5be0:	b	5c98 <process_utf8+0x6ec>
    5be4:	add	x0, sp, #0xc8
    5be8:	str	x0, [sp, #152]
    5bec:	ldr	x0, [sp, #104]
    5bf0:	and	x0, x0, #0x600
    5bf4:	cmp	x0, #0x0
    5bf8:	b.eq	5c74 <process_utf8+0x6c8>  // b.none
    5bfc:	str	xzr, [sp, #128]
    5c00:	b	5c64 <process_utf8+0x6b8>
    5c04:	ldr	x0, [sp, #104]
    5c08:	and	x0, x0, #0x200
    5c0c:	cmp	x0, #0x0
    5c10:	b.eq	5c20 <process_utf8+0x674>  // b.none
    5c14:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5c18:	add	x0, x0, #0xfa8
    5c1c:	b	5c28 <process_utf8+0x67c>
    5c20:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5c24:	add	x0, x0, #0xfb0
    5c28:	ldr	x2, [sp, #40]
    5c2c:	ldr	x1, [sp, #128]
    5c30:	add	x1, x2, x1
    5c34:	ldrb	w1, [x1]
    5c38:	mov	w2, w1
    5c3c:	mov	x1, x0
    5c40:	ldr	x0, [sp, #152]
    5c44:	bl	2930 <sprintf@plt>
    5c48:	sxtw	x0, w0
    5c4c:	ldr	x1, [sp, #152]
    5c50:	add	x0, x1, x0
    5c54:	str	x0, [sp, #152]
    5c58:	ldr	x0, [sp, #128]
    5c5c:	add	x0, x0, #0x1
    5c60:	str	x0, [sp, #128]
    5c64:	ldr	x0, [sp, #72]
    5c68:	ldr	x1, [sp, #128]
    5c6c:	cmp	x1, x0
    5c70:	b.cc	5c04 <process_utf8+0x658>  // b.lo, b.ul, b.last
    5c74:	add	x0, sp, #0xc8
    5c78:	bl	2890 <strlen@plt>
    5c7c:	mov	x1, x0
    5c80:	add	x0, sp, #0xc8
    5c84:	mov	x2, x1
    5c88:	mov	x1, x0
    5c8c:	ldr	x0, [sp, #56]
    5c90:	bl	2c50 <Perl_newSVpvn@plt>
    5c94:	str	x0, [sp, #144]
    5c98:	ldr	x0, [sp, #144]
    5c9c:	ldr	w1, [x0, #12]
    5ca0:	mov	w0, #0x400                 	// #1024
    5ca4:	movk	w0, #0x2020, lsl #16
    5ca8:	and	w1, w1, w0
    5cac:	mov	w0, #0x400                 	// #1024
    5cb0:	movk	w0, #0x2000, lsl #16
    5cb4:	cmp	w1, w0
    5cb8:	b.ne	5cd8 <process_utf8+0x72c>  // b.any
    5cbc:	ldr	x0, [sp, #144]
    5cc0:	ldr	x0, [x0]
    5cc4:	ldr	x0, [x0, #16]
    5cc8:	str	x0, [sp, #88]
    5ccc:	ldr	x0, [sp, #144]
    5cd0:	ldr	x0, [x0, #16]
    5cd4:	b	5cec <process_utf8+0x740>
    5cd8:	add	x0, sp, #0x58
    5cdc:	mov	x2, x0
    5ce0:	ldr	x1, [sp, #144]
    5ce4:	ldr	x0, [sp, #56]
    5ce8:	bl	2bb0 <Perl_sv_2pvutf8@plt>
    5cec:	str	x0, [sp, #136]
    5cf0:	ldr	x1, [sp, #88]
    5cf4:	ldr	x0, [sp, #72]
    5cf8:	sub	x0, x1, x0
    5cfc:	ldr	x1, [sp, #120]
    5d00:	add	x0, x1, x0
    5d04:	str	x0, [sp, #120]
    5d08:	ldr	x0, [sp, #48]
    5d0c:	ldr	x0, [x0, #16]
    5d10:	ldr	x1, [sp, #112]
    5d14:	sub	x1, x1, x0
    5d18:	ldr	x0, [sp, #48]
    5d1c:	ldr	x0, [x0]
    5d20:	str	x1, [x0, #16]
    5d24:	ldr	x0, [sp, #48]
    5d28:	ldr	x1, [x0, #16]
    5d2c:	ldr	x0, [sp, #48]
    5d30:	ldr	x0, [x0]
    5d34:	ldr	x0, [x0, #16]
    5d38:	add	x0, x1, x0
    5d3c:	strb	wzr, [x0]
    5d40:	ldr	x0, [sp, #88]
    5d44:	mov	w4, #0x2                   	// #2
    5d48:	mov	x3, x0
    5d4c:	ldr	x2, [sp, #136]
    5d50:	ldr	x1, [sp, #48]
    5d54:	ldr	x0, [sp, #56]
    5d58:	bl	2900 <Perl_sv_catpvn_flags@plt>
    5d5c:	ldr	x0, [sp, #144]
    5d60:	str	x0, [sp, #192]
    5d64:	ldr	x0, [sp, #192]
    5d68:	mov	x1, x0
    5d6c:	ldr	x0, [sp, #56]
    5d70:	bl	2e8c <S_SvREFCNT_dec>
    5d74:	ldr	x0, [sp, #48]
    5d78:	ldr	w0, [x0, #12]
    5d7c:	and	w0, w0, #0x10000000
    5d80:	cmp	w0, #0x0
    5d84:	b.ne	5da0 <process_utf8+0x7f4>  // b.any
    5d88:	ldr	x0, [sp, #48]
    5d8c:	ldr	x0, [x0]
    5d90:	ldr	x0, [x0, #24]
    5d94:	ldr	x1, [sp, #120]
    5d98:	cmp	x1, x0
    5d9c:	b.ls	5db4 <process_utf8+0x808>  // b.plast
    5da0:	ldr	x2, [sp, #120]
    5da4:	ldr	x1, [sp, #48]
    5da8:	ldr	x0, [sp, #56]
    5dac:	bl	2a30 <Perl_sv_grow@plt>
    5db0:	b	5dbc <process_utf8+0x810>
    5db4:	ldr	x0, [sp, #48]
    5db8:	ldr	x0, [x0, #16]
    5dbc:	ldr	x1, [sp, #48]
    5dc0:	ldr	x1, [x1]
    5dc4:	ldr	x1, [x1, #16]
    5dc8:	add	x0, x0, x1
    5dcc:	str	x0, [sp, #112]
    5dd0:	b	5e74 <process_utf8+0x8c8>
    5dd4:	mov	x0, #0x3                   	// #3
    5dd8:	str	x0, [sp, #176]
    5ddc:	ldr	x0, [sp, #72]
    5de0:	ldr	x1, [sp, #176]
    5de4:	sub	x0, x1, x0
    5de8:	ldr	x1, [sp, #120]
    5dec:	add	x0, x1, x0
    5df0:	str	x0, [sp, #120]
    5df4:	ldr	x0, [sp, #48]
    5df8:	ldr	x0, [x0]
    5dfc:	ldr	x0, [x0, #24]
    5e00:	ldr	x1, [sp, #120]
    5e04:	cmp	x1, x0
    5e08:	b.ls	5e50 <process_utf8+0x8a4>  // b.plast
    5e0c:	ldr	x0, [sp, #48]
    5e10:	ldr	x0, [x0, #16]
    5e14:	ldr	x1, [sp, #112]
    5e18:	sub	x1, x1, x0
    5e1c:	ldr	x0, [sp, #48]
    5e20:	ldr	x0, [x0]
    5e24:	str	x1, [x0, #16]
    5e28:	ldr	x2, [sp, #120]
    5e2c:	ldr	x1, [sp, #48]
    5e30:	ldr	x0, [sp, #56]
    5e34:	bl	2a30 <Perl_sv_grow@plt>
    5e38:	mov	x1, x0
    5e3c:	ldr	x0, [sp, #48]
    5e40:	ldr	x0, [x0]
    5e44:	ldr	x0, [x0, #16]
    5e48:	add	x0, x1, x0
    5e4c:	str	x0, [sp, #112]
    5e50:	ldr	x2, [sp, #176]
    5e54:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    5e58:	add	x1, x0, #0xf10
    5e5c:	ldr	x0, [sp, #112]
    5e60:	bl	2850 <memcpy@plt>
    5e64:	ldr	x1, [sp, #112]
    5e68:	ldr	x0, [sp, #176]
    5e6c:	add	x0, x1, x0
    5e70:	str	x0, [sp, #112]
    5e74:	ldr	x0, [sp, #72]
    5e78:	ldr	x1, [sp, #40]
    5e7c:	add	x0, x1, x0
    5e80:	str	x0, [sp, #40]
    5e84:	ldr	x1, [sp, #40]
    5e88:	ldr	x0, [sp, #32]
    5e8c:	cmp	x1, x0
    5e90:	b.cc	57a4 <process_utf8+0x1f8>  // b.lo, b.ul, b.last
    5e94:	b	5e9c <process_utf8+0x8f0>
    5e98:	nop
    5e9c:	ldr	x0, [sp, #48]
    5ea0:	ldr	x0, [x0, #16]
    5ea4:	ldr	x1, [sp, #112]
    5ea8:	sub	x1, x1, x0
    5eac:	ldr	x0, [sp, #48]
    5eb0:	ldr	x0, [x0]
    5eb4:	str	x1, [x0, #16]
    5eb8:	ldr	x0, [sp, #48]
    5ebc:	ldr	x1, [x0, #16]
    5ec0:	ldr	x0, [sp, #48]
    5ec4:	ldr	x0, [x0]
    5ec8:	ldr	x0, [x0, #16]
    5ecc:	add	x0, x1, x0
    5ed0:	strb	wzr, [x0]
    5ed4:	ldr	x0, [sp, #40]
    5ed8:	mov	x1, x0
    5edc:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    5ee0:	ldr	x0, [x0, #3992]
    5ee4:	ldr	x2, [sp, #280]
    5ee8:	ldr	x0, [x0]
    5eec:	eor	x0, x2, x0
    5ef0:	cmp	x0, #0x0
    5ef4:	b.eq	5efc <process_utf8+0x950>  // b.none
    5ef8:	bl	29f0 <__stack_chk_fail@plt>
    5efc:	mov	x0, x1
    5f00:	ldp	x29, x30, [sp], #288
    5f04:	ret

0000000000005f08 <find_encoding>:
    5f08:	stp	x29, x30, [sp, #-80]!
    5f0c:	mov	x29, sp
    5f10:	str	x0, [sp, #24]
    5f14:	str	x1, [sp, #16]
    5f18:	ldr	x0, [sp, #24]
    5f1c:	ldr	x0, [x0]
    5f20:	str	x0, [sp, #40]
    5f24:	ldr	x0, [sp, #24]
    5f28:	add	x0, x0, #0x150
    5f2c:	str	x0, [sp, #48]
    5f30:	ldr	x0, [sp, #24]
    5f34:	bl	2c20 <Perl_push_scope@plt>
    5f38:	ldr	x0, [sp, #24]
    5f3c:	bl	2a20 <Perl_savetmps@plt>
    5f40:	ldr	x0, [sp, #24]
    5f44:	ldr	x0, [x0, #120]
    5f48:	add	x1, x0, #0x4
    5f4c:	ldr	x0, [sp, #24]
    5f50:	str	x1, [x0, #120]
    5f54:	ldr	x0, [sp, #24]
    5f58:	ldr	x0, [x0, #120]
    5f5c:	str	x0, [sp, #56]
    5f60:	ldr	x0, [sp, #24]
    5f64:	ldr	x0, [x0, #128]
    5f68:	ldr	x1, [sp, #56]
    5f6c:	cmp	x1, x0
    5f70:	cset	w0, eq  // eq = none
    5f74:	and	w0, w0, #0xff
    5f78:	and	x0, x0, #0xff
    5f7c:	cmp	x0, #0x0
    5f80:	b.eq	5f90 <find_encoding+0x88>  // b.none
    5f84:	ldr	x0, [sp, #24]
    5f88:	bl	2b80 <Perl_markstack_grow@plt>
    5f8c:	str	x0, [sp, #56]
    5f90:	ldr	x0, [sp, #24]
    5f94:	ldr	x0, [x0, #24]
    5f98:	ldr	x1, [sp, #40]
    5f9c:	sub	x0, x1, x0
    5fa0:	asr	x0, x0, #3
    5fa4:	mov	w1, w0
    5fa8:	ldr	x0, [sp, #56]
    5fac:	str	w1, [x0]
    5fb0:	ldr	x0, [sp, #24]
    5fb4:	bl	2c60 <Perl_sv_newmortal@plt>
    5fb8:	str	x0, [sp, #64]
    5fbc:	mov	w3, #0x10                  	// #16
    5fc0:	ldr	x2, [sp, #16]
    5fc4:	ldr	x1, [sp, #64]
    5fc8:	ldr	x0, [sp, #24]
    5fcc:	bl	2ac0 <Perl_sv_setsv_flags@plt>
    5fd0:	ldr	x0, [sp, #24]
    5fd4:	ldr	x1, [x0, #32]
    5fd8:	ldr	x0, [sp, #40]
    5fdc:	sub	x0, x1, x0
    5fe0:	cmp	x0, #0x0
    5fe4:	cset	w0, le
    5fe8:	and	w0, w0, #0xff
    5fec:	and	x0, x0, #0xff
    5ff0:	cmp	x0, #0x0
    5ff4:	b.eq	6010 <find_encoding+0x108>  // b.none
    5ff8:	mov	x3, #0x1                   	// #1
    5ffc:	ldr	x2, [sp, #40]
    6000:	ldr	x1, [sp, #40]
    6004:	ldr	x0, [sp, #24]
    6008:	bl	28f0 <Perl_stack_grow@plt>
    600c:	str	x0, [sp, #40]
    6010:	ldr	x0, [sp, #40]
    6014:	add	x0, x0, #0x8
    6018:	str	x0, [sp, #40]
    601c:	ldr	x0, [sp, #40]
    6020:	ldr	x1, [sp, #64]
    6024:	str	x1, [x0]
    6028:	ldr	x0, [sp, #24]
    602c:	ldr	x1, [sp, #40]
    6030:	str	x1, [x0]
    6034:	mov	w2, #0x2                   	// #2
    6038:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    603c:	add	x1, x0, #0xfc0
    6040:	ldr	x0, [sp, #24]
    6044:	bl	2b20 <Perl_call_pv@plt>
    6048:	str	w0, [sp, #36]
    604c:	ldr	x0, [sp, #24]
    6050:	ldr	x0, [x0]
    6054:	str	x0, [sp, #40]
    6058:	ldr	w0, [sp, #36]
    605c:	cmp	w0, #0x0
    6060:	b.le	6088 <find_encoding+0x180>
    6064:	ldr	x0, [sp, #40]
    6068:	sub	x1, x0, #0x8
    606c:	str	x1, [sp, #40]
    6070:	ldr	x0, [x0]
    6074:	str	x0, [sp, #48]
    6078:	ldr	x0, [sp, #48]
    607c:	str	x0, [sp, #72]
    6080:	ldr	x0, [sp, #72]
    6084:	bl	2e48 <S_SvREFCNT_inc>
    6088:	ldr	x0, [sp, #24]
    608c:	ldr	x1, [sp, #40]
    6090:	str	x1, [x0]
    6094:	ldr	x0, [sp, #24]
    6098:	ldr	x1, [x0, #80]
    609c:	ldr	x0, [sp, #24]
    60a0:	ldr	x0, [x0, #88]
    60a4:	cmp	x1, x0
    60a8:	b.le	60b4 <find_encoding+0x1ac>
    60ac:	ldr	x0, [sp, #24]
    60b0:	bl	2b70 <Perl_free_tmps@plt>
    60b4:	ldr	x0, [sp, #24]
    60b8:	bl	2940 <Perl_pop_scope@plt>
    60bc:	ldr	x1, [sp, #48]
    60c0:	ldr	x0, [sp, #24]
    60c4:	bl	2ae0 <Perl_sv_2mortal@plt>
    60c8:	ldp	x29, x30, [sp], #80
    60cc:	ret

00000000000060d0 <call_encoding>:
    60d0:	stp	x29, x30, [sp, #-112]!
    60d4:	mov	x29, sp
    60d8:	str	x0, [sp, #56]
    60dc:	str	x1, [sp, #48]
    60e0:	str	x2, [sp, #40]
    60e4:	str	x3, [sp, #32]
    60e8:	str	x4, [sp, #24]
    60ec:	ldr	x0, [sp, #56]
    60f0:	ldr	x0, [x0]
    60f4:	str	x0, [sp, #80]
    60f8:	ldr	x0, [sp, #56]
    60fc:	add	x0, x0, #0x150
    6100:	str	x0, [sp, #88]
    6104:	ldr	x0, [sp, #56]
    6108:	ldr	x0, [x0, #120]
    610c:	add	x1, x0, #0x4
    6110:	ldr	x0, [sp, #56]
    6114:	str	x1, [x0, #120]
    6118:	ldr	x0, [sp, #56]
    611c:	ldr	x0, [x0, #120]
    6120:	str	x0, [sp, #96]
    6124:	ldr	x0, [sp, #56]
    6128:	ldr	x0, [x0, #128]
    612c:	ldr	x1, [sp, #96]
    6130:	cmp	x1, x0
    6134:	cset	w0, eq  // eq = none
    6138:	and	w0, w0, #0xff
    613c:	and	x0, x0, #0xff
    6140:	cmp	x0, #0x0
    6144:	b.eq	6154 <call_encoding+0x84>  // b.none
    6148:	ldr	x0, [sp, #56]
    614c:	bl	2b80 <Perl_markstack_grow@plt>
    6150:	str	x0, [sp, #96]
    6154:	ldr	x0, [sp, #56]
    6158:	ldr	x0, [x0, #24]
    615c:	ldr	x1, [sp, #80]
    6160:	sub	x0, x1, x0
    6164:	asr	x0, x0, #3
    6168:	mov	w1, w0
    616c:	ldr	x0, [sp, #96]
    6170:	str	w1, [x0]
    6174:	ldr	x0, [sp, #24]
    6178:	cmp	x0, #0x0
    617c:	b.eq	61a0 <call_encoding+0xd0>  // b.none
    6180:	mov	w2, #0x12                  	// #18
    6184:	ldr	x1, [sp, #24]
    6188:	ldr	x0, [sp, #56]
    618c:	bl	2c40 <Perl_newSVsv_flags@plt>
    6190:	mov	x1, x0
    6194:	ldr	x0, [sp, #56]
    6198:	bl	2ae0 <Perl_sv_2mortal@plt>
    619c:	str	x0, [sp, #24]
    61a0:	ldr	x0, [sp, #24]
    61a4:	cmp	x0, #0x0
    61a8:	b.eq	63b4 <call_encoding+0x2e4>  // b.none
    61ac:	ldr	x0, [sp, #24]
    61b0:	ldr	w0, [x0, #12]
    61b4:	and	w0, w0, #0x800
    61b8:	cmp	w0, #0x0
    61bc:	b.ne	63b4 <call_encoding+0x2e4>  // b.any
    61c0:	ldr	x0, [sp, #24]
    61c4:	cmp	x0, #0x0
    61c8:	cset	w0, ne  // ne = any
    61cc:	and	w0, w0, #0xff
    61d0:	and	x0, x0, #0xff
    61d4:	cmp	x0, #0x0
    61d8:	b.eq	63b4 <call_encoding+0x2e4>  // b.none
    61dc:	ldr	x0, [sp, #56]
    61e0:	add	x0, x0, #0x138
    61e4:	ldr	x1, [sp, #24]
    61e8:	sub	x0, x1, x0
    61ec:	asr	x1, x0, #3
    61f0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    61f4:	movk	x0, #0xaaab
    61f8:	mul	x0, x1, x0
    61fc:	cmp	x0, #0x3
    6200:	b.hi	621c <call_encoding+0x14c>  // b.pmore
    6204:	ldr	x0, [sp, #56]
    6208:	add	x0, x0, #0x138
    620c:	ldr	x1, [sp, #24]
    6210:	cmp	x1, x0
    6214:	b.ne	63b4 <call_encoding+0x2e4>  // b.any
    6218:	b	6368 <call_encoding+0x298>
    621c:	ldr	x0, [sp, #24]
    6220:	ldr	w0, [x0, #12]
    6224:	and	w0, w0, #0xff00
    6228:	cmp	w0, #0x0
    622c:	b.eq	63b4 <call_encoding+0x2e4>  // b.none
    6230:	ldr	x0, [sp, #24]
    6234:	ldr	w0, [x0, #12]
    6238:	and	w0, w0, #0x400
    623c:	cmp	w0, #0x0
    6240:	b.eq	62b0 <call_encoding+0x1e0>  // b.none
    6244:	ldr	x0, [sp, #24]
    6248:	ldr	x0, [x0]
    624c:	cmp	x0, #0x0
    6250:	b.eq	6290 <call_encoding+0x1c0>  // b.none
    6254:	ldr	x0, [sp, #24]
    6258:	ldr	x0, [x0]
    625c:	ldr	x0, [x0, #16]
    6260:	cmp	x0, #0x1
    6264:	b.hi	6298 <call_encoding+0x1c8>  // b.pmore
    6268:	ldr	x0, [sp, #24]
    626c:	ldr	x0, [x0]
    6270:	ldr	x0, [x0, #16]
    6274:	cmp	x0, #0x0
    6278:	b.eq	6290 <call_encoding+0x1c0>  // b.none
    627c:	ldr	x0, [sp, #24]
    6280:	ldr	x0, [x0, #16]
    6284:	ldrb	w0, [x0]
    6288:	cmp	w0, #0x30
    628c:	b.ne	6298 <call_encoding+0x1c8>  // b.any
    6290:	mov	w0, #0x1                   	// #1
    6294:	b	629c <call_encoding+0x1cc>
    6298:	mov	w0, #0x0                   	// #0
    629c:	and	w0, w0, #0x1
    62a0:	and	w0, w0, #0xff
    62a4:	cmp	w0, #0x0
    62a8:	b.ne	63b4 <call_encoding+0x2e4>  // b.any
    62ac:	b	6368 <call_encoding+0x298>
    62b0:	ldr	x0, [sp, #24]
    62b4:	ldr	w0, [x0, #12]
    62b8:	and	w0, w0, #0x100
    62bc:	cmp	w0, #0x0
    62c0:	b.eq	62dc <call_encoding+0x20c>  // b.none
    62c4:	ldr	x0, [sp, #24]
    62c8:	ldr	x0, [x0]
    62cc:	ldr	x0, [x0, #32]
    62d0:	cmp	x0, #0x0
    62d4:	b.eq	63b4 <call_encoding+0x2e4>  // b.none
    62d8:	b	6368 <call_encoding+0x298>
    62dc:	ldr	x0, [sp, #24]
    62e0:	ldr	w0, [x0, #12]
    62e4:	and	w0, w0, #0x800
    62e8:	cmp	w0, #0x0
    62ec:	b.eq	6328 <call_encoding+0x258>  // b.none
    62f0:	ldr	x0, [sp, #24]
    62f4:	ldr	x0, [x0, #16]
    62f8:	ldr	w0, [x0, #12]
    62fc:	and	w0, w0, #0x100000
    6300:	cmp	w0, #0x0
    6304:	b.eq	6330 <call_encoding+0x260>  // b.none
    6308:	ldr	x0, [sp, #24]
    630c:	ldr	x0, [x0, #16]
    6310:	ldr	x0, [x0]
    6314:	ldr	x0, [x0]
    6318:	ldr	w0, [x0, #12]
    631c:	and	w0, w0, #0x10000000
    6320:	cmp	w0, #0x0
    6324:	b.eq	6330 <call_encoding+0x260>  // b.none
    6328:	mov	w0, #0x1                   	// #1
    632c:	b	6334 <call_encoding+0x264>
    6330:	mov	w0, #0x0                   	// #0
    6334:	and	w0, w0, #0x1
    6338:	and	w0, w0, #0xff
    633c:	cmp	w0, #0x0
    6340:	b.eq	6368 <call_encoding+0x298>  // b.none
    6344:	mov	w2, #0x0                   	// #0
    6348:	ldr	x1, [sp, #24]
    634c:	ldr	x0, [sp, #56]
    6350:	bl	2880 <Perl_sv_2bool_flags@plt>
    6354:	and	w0, w0, #0xff
    6358:	eor	w0, w0, #0x1
    635c:	and	w0, w0, #0xff
    6360:	cmp	w0, #0x0
    6364:	b.ne	63b4 <call_encoding+0x2e4>  // b.any
    6368:	ldr	x0, [sp, #24]
    636c:	ldr	w0, [x0, #12]
    6370:	and	w0, w0, #0x100
    6374:	cmp	w0, #0x0
    6378:	b.eq	6398 <call_encoding+0x2c8>  // b.none
    637c:	ldr	x0, [sp, #24]
    6380:	ldr	x0, [x0]
    6384:	ldr	x0, [x0, #32]
    6388:	and	x0, x0, #0x8
    638c:	cmp	x0, #0x0
    6390:	b.ne	63b4 <call_encoding+0x2e4>  // b.any
    6394:	b	63d4 <call_encoding+0x304>
    6398:	mov	w2, #0x0                   	// #0
    639c:	ldr	x1, [sp, #24]
    63a0:	ldr	x0, [sp, #56]
    63a4:	bl	2870 <Perl_sv_2iv_flags@plt>
    63a8:	and	x0, x0, #0x8
    63ac:	cmp	x0, #0x0
    63b0:	b.eq	63d4 <call_encoding+0x304>  // b.none
    63b4:	mov	w2, #0x12                  	// #18
    63b8:	ldr	x1, [sp, #32]
    63bc:	ldr	x0, [sp, #56]
    63c0:	bl	2c40 <Perl_newSVsv_flags@plt>
    63c4:	mov	x1, x0
    63c8:	ldr	x0, [sp, #56]
    63cc:	bl	2ae0 <Perl_sv_2mortal@plt>
    63d0:	str	x0, [sp, #32]
    63d4:	ldr	x0, [sp, #56]
    63d8:	ldr	x1, [x0, #32]
    63dc:	ldr	x0, [sp, #80]
    63e0:	sub	x0, x1, x0
    63e4:	cmp	x0, #0x0
    63e8:	cset	w0, le
    63ec:	and	w0, w0, #0xff
    63f0:	and	x0, x0, #0xff
    63f4:	cmp	x0, #0x0
    63f8:	b.eq	6414 <call_encoding+0x344>  // b.none
    63fc:	mov	x3, #0x1                   	// #1
    6400:	ldr	x2, [sp, #80]
    6404:	ldr	x1, [sp, #80]
    6408:	ldr	x0, [sp, #56]
    640c:	bl	28f0 <Perl_stack_grow@plt>
    6410:	str	x0, [sp, #80]
    6414:	ldr	x0, [sp, #80]
    6418:	add	x0, x0, #0x8
    641c:	str	x0, [sp, #80]
    6420:	ldr	x0, [sp, #80]
    6424:	ldr	x1, [sp, #40]
    6428:	str	x1, [x0]
    642c:	ldr	x0, [sp, #56]
    6430:	ldr	x1, [x0, #32]
    6434:	ldr	x0, [sp, #80]
    6438:	sub	x0, x1, x0
    643c:	cmp	x0, #0x0
    6440:	cset	w0, le
    6444:	and	w0, w0, #0xff
    6448:	and	x0, x0, #0xff
    644c:	cmp	x0, #0x0
    6450:	b.eq	646c <call_encoding+0x39c>  // b.none
    6454:	mov	x3, #0x1                   	// #1
    6458:	ldr	x2, [sp, #80]
    645c:	ldr	x1, [sp, #80]
    6460:	ldr	x0, [sp, #56]
    6464:	bl	28f0 <Perl_stack_grow@plt>
    6468:	str	x0, [sp, #80]
    646c:	ldr	x0, [sp, #80]
    6470:	add	x0, x0, #0x8
    6474:	str	x0, [sp, #80]
    6478:	ldr	x0, [sp, #80]
    647c:	ldr	x1, [sp, #32]
    6480:	str	x1, [x0]
    6484:	ldr	x0, [sp, #56]
    6488:	ldr	x1, [x0, #32]
    648c:	ldr	x0, [sp, #80]
    6490:	sub	x0, x1, x0
    6494:	cmp	x0, #0x0
    6498:	cset	w0, le
    649c:	and	w0, w0, #0xff
    64a0:	and	x0, x0, #0xff
    64a4:	cmp	x0, #0x0
    64a8:	b.eq	64c4 <call_encoding+0x3f4>  // b.none
    64ac:	mov	x3, #0x1                   	// #1
    64b0:	ldr	x2, [sp, #80]
    64b4:	ldr	x1, [sp, #80]
    64b8:	ldr	x0, [sp, #56]
    64bc:	bl	28f0 <Perl_stack_grow@plt>
    64c0:	str	x0, [sp, #80]
    64c4:	ldr	x0, [sp, #24]
    64c8:	cmp	x0, #0x0
    64cc:	b.ne	64dc <call_encoding+0x40c>  // b.any
    64d0:	ldr	x0, [sp, #56]
    64d4:	add	x0, x0, #0x168
    64d8:	b	64e0 <call_encoding+0x410>
    64dc:	ldr	x0, [sp, #24]
    64e0:	ldr	x1, [sp, #80]
    64e4:	add	x1, x1, #0x8
    64e8:	str	x1, [sp, #80]
    64ec:	ldr	x1, [sp, #80]
    64f0:	str	x0, [x1]
    64f4:	ldr	x0, [sp, #56]
    64f8:	ldr	x1, [sp, #80]
    64fc:	str	x1, [x0]
    6500:	mov	w2, #0x2                   	// #2
    6504:	ldr	x1, [sp, #48]
    6508:	ldr	x0, [sp, #56]
    650c:	bl	2910 <Perl_call_method@plt>
    6510:	str	w0, [sp, #76]
    6514:	ldr	x0, [sp, #56]
    6518:	ldr	x0, [x0]
    651c:	str	x0, [sp, #80]
    6520:	ldr	w0, [sp, #76]
    6524:	cmp	w0, #0x0
    6528:	b.le	6550 <call_encoding+0x480>
    652c:	ldr	x0, [sp, #80]
    6530:	sub	x1, x0, #0x8
    6534:	str	x1, [sp, #80]
    6538:	ldr	x0, [x0]
    653c:	str	x0, [sp, #88]
    6540:	ldr	x0, [sp, #88]
    6544:	str	x0, [sp, #104]
    6548:	ldr	x0, [sp, #104]
    654c:	bl	2e48 <S_SvREFCNT_inc>
    6550:	ldr	x0, [sp, #56]
    6554:	ldr	x1, [sp, #80]
    6558:	str	x1, [x0]
    655c:	ldr	x0, [sp, #88]
    6560:	ldp	x29, x30, [sp], #112
    6564:	ret

0000000000006568 <XS_Encode__utf8_decode>:
    6568:	stp	x29, x30, [sp, #-208]!
    656c:	mov	x29, sp
    6570:	str	x19, [sp, #16]
    6574:	str	x0, [sp, #40]
    6578:	str	x1, [sp, #32]
    657c:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    6580:	ldr	x0, [x0, #3992]
    6584:	ldr	x1, [x0]
    6588:	str	x1, [sp, #200]
    658c:	mov	x1, #0x0                   	// #0
    6590:	ldr	x0, [sp, #40]
    6594:	ldr	x0, [x0]
    6598:	str	x0, [sp, #120]
    659c:	ldr	x0, [sp, #40]
    65a0:	bl	2e20 <S_POPMARK>
    65a4:	str	w0, [sp, #64]
    65a8:	ldr	x0, [sp, #40]
    65ac:	ldr	x1, [x0, #24]
    65b0:	ldr	w0, [sp, #64]
    65b4:	add	w2, w0, #0x1
    65b8:	str	w2, [sp, #64]
    65bc:	sxtw	x0, w0
    65c0:	lsl	x0, x0, #3
    65c4:	add	x0, x1, x0
    65c8:	str	x0, [sp, #128]
    65cc:	ldr	x1, [sp, #120]
    65d0:	ldr	x0, [sp, #128]
    65d4:	sub	x0, x1, x0
    65d8:	asr	x0, x0, #3
    65dc:	str	w0, [sp, #68]
    65e0:	ldr	w0, [sp, #68]
    65e4:	cmp	w0, #0x1
    65e8:	b.le	65f8 <XS_Encode__utf8_decode+0x90>
    65ec:	ldr	w0, [sp, #68]
    65f0:	cmp	w0, #0x3
    65f4:	b.le	6608 <XS_Encode__utf8_decode+0xa0>
    65f8:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    65fc:	add	x1, x0, #0xfd8
    6600:	ldr	x0, [sp, #32]
    6604:	bl	2a10 <Perl_croak_xs_usage@plt>
    6608:	ldrsw	x0, [sp, #68]
    660c:	lsl	x0, x0, #3
    6610:	neg	x0, x0
    6614:	ldr	x1, [sp, #120]
    6618:	add	x0, x1, x0
    661c:	str	x0, [sp, #120]
    6620:	ldr	x0, [sp, #40]
    6624:	ldr	x1, [x0, #24]
    6628:	ldrsw	x0, [sp, #64]
    662c:	lsl	x0, x0, #3
    6630:	add	x0, x1, x0
    6634:	ldr	x0, [x0]
    6638:	str	x0, [sp, #136]
    663c:	ldr	x0, [sp, #40]
    6640:	ldr	x1, [x0, #24]
    6644:	ldrsw	x0, [sp, #64]
    6648:	add	x0, x0, #0x1
    664c:	lsl	x0, x0, #3
    6650:	add	x0, x1, x0
    6654:	ldr	x0, [x0]
    6658:	str	x0, [sp, #72]
    665c:	strb	wzr, [sp, #62]
    6660:	ldr	x0, [sp, #40]
    6664:	ldr	x0, [x0]
    6668:	str	x0, [sp, #104]
    666c:	ldr	w0, [sp, #68]
    6670:	cmp	w0, #0x2
    6674:	b.gt	6688 <XS_Encode__utf8_decode+0x120>
    6678:	ldr	x0, [sp, #40]
    667c:	add	x0, x0, #0x168
    6680:	str	x0, [sp, #96]
    6684:	b	66a8 <XS_Encode__utf8_decode+0x140>
    6688:	ldr	x0, [sp, #40]
    668c:	ldr	x1, [x0, #24]
    6690:	ldrsw	x0, [sp, #64]
    6694:	add	x0, x0, #0x2
    6698:	lsl	x0, x0, #3
    669c:	add	x0, x1, x0
    66a0:	ldr	x0, [x0]
    66a4:	str	x0, [sp, #96]
    66a8:	ldr	x0, [sp, #72]
    66ac:	ldr	w0, [x0, #12]
    66b0:	lsr	w0, w0, #21
    66b4:	mov	w0, w0
    66b8:	and	x0, x0, #0x1
    66bc:	cmp	x0, #0x0
    66c0:	b.eq	66dc <XS_Encode__utf8_decode+0x174>  // b.none
    66c4:	ldr	x0, [sp, #72]
    66c8:	mov	x1, x0
    66cc:	ldr	x0, [sp, #40]
    66d0:	bl	2af0 <Perl_mg_get@plt>
    66d4:	cmp	w0, #0x0
    66d8:	nop
    66dc:	ldr	x0, [sp, #96]
    66e0:	ldr	w0, [x0, #12]
    66e4:	lsr	w0, w0, #21
    66e8:	mov	w0, w0
    66ec:	and	x0, x0, #0x1
    66f0:	cmp	x0, #0x0
    66f4:	b.eq	670c <XS_Encode__utf8_decode+0x1a4>  // b.none
    66f8:	ldr	x1, [sp, #96]
    66fc:	ldr	x0, [sp, #40]
    6700:	bl	2af0 <Perl_mg_get@plt>
    6704:	cmp	w0, #0x0
    6708:	nop
    670c:	ldr	x0, [sp, #96]
    6710:	ldr	w0, [x0, #12]
    6714:	and	w0, w0, #0x800
    6718:	cmp	w0, #0x0
    671c:	b.ne	6774 <XS_Encode__utf8_decode+0x20c>  // b.any
    6720:	ldr	x0, [sp, #96]
    6724:	ldr	w0, [x0, #12]
    6728:	and	w0, w0, #0xff00
    672c:	cmp	w0, #0x0
    6730:	b.eq	676c <XS_Encode__utf8_decode+0x204>  // b.none
    6734:	ldr	x0, [sp, #96]
    6738:	ldr	w0, [x0, #12]
    673c:	and	w0, w0, #0x100
    6740:	cmp	w0, #0x0
    6744:	b.eq	6758 <XS_Encode__utf8_decode+0x1f0>  // b.none
    6748:	ldr	x0, [sp, #96]
    674c:	ldr	x0, [x0]
    6750:	ldr	x0, [x0, #32]
    6754:	b	6778 <XS_Encode__utf8_decode+0x210>
    6758:	mov	w2, #0x0                   	// #0
    675c:	ldr	x1, [sp, #96]
    6760:	ldr	x0, [sp, #40]
    6764:	bl	2870 <Perl_sv_2iv_flags@plt>
    6768:	b	6778 <XS_Encode__utf8_decode+0x210>
    676c:	mov	x0, #0x0                   	// #0
    6770:	b	6778 <XS_Encode__utf8_decode+0x210>
    6774:	mov	x0, #0x108                 	// #264
    6778:	str	x0, [sp, #144]
    677c:	ldr	x0, [sp, #144]
    6780:	cmp	x0, #0x0
    6784:	b.eq	67a0 <XS_Encode__utf8_decode+0x238>  // b.none
    6788:	ldr	x0, [sp, #144]
    678c:	and	x0, x0, #0x8
    6790:	cmp	x0, #0x0
    6794:	b.ne	67a0 <XS_Encode__utf8_decode+0x238>  // b.any
    6798:	mov	w0, #0x1                   	// #1
    679c:	b	67a4 <XS_Encode__utf8_decode+0x23c>
    67a0:	mov	w0, #0x0                   	// #0
    67a4:	strb	w0, [sp, #63]
    67a8:	ldrb	w0, [sp, #63]
    67ac:	and	w0, w0, #0x1
    67b0:	strb	w0, [sp, #63]
    67b4:	ldr	x0, [sp, #72]
    67b8:	ldr	w0, [x0, #12]
    67bc:	and	w0, w0, #0xff00
    67c0:	cmp	w0, #0x0
    67c4:	b.ne	681c <XS_Encode__utf8_decode+0x2b4>  // b.any
    67c8:	ldr	x0, [sp, #40]
    67cc:	ldr	x1, [x0, #24]
    67d0:	ldrsw	x0, [sp, #64]
    67d4:	lsl	x0, x0, #3
    67d8:	add	x0, x1, x0
    67dc:	ldr	x1, [sp, #40]
    67e0:	add	x1, x1, #0x150
    67e4:	str	x1, [x0]
    67e8:	mov	x0, #0x1                   	// #1
    67ec:	str	x0, [sp, #192]
    67f0:	ldr	x0, [sp, #40]
    67f4:	ldr	x1, [x0, #24]
    67f8:	ldrsw	x2, [sp, #64]
    67fc:	ldr	x0, [sp, #192]
    6800:	add	x0, x2, x0
    6804:	lsl	x0, x0, #3
    6808:	sub	x0, x0, #0x8
    680c:	add	x1, x1, x0
    6810:	ldr	x0, [sp, #40]
    6814:	str	x1, [x0]
    6818:	b	6c60 <XS_Encode__utf8_decode+0x6f8>
    681c:	ldrb	w0, [sp, #63]
    6820:	cmp	w0, #0x0
    6824:	b.eq	6880 <XS_Encode__utf8_decode+0x318>  // b.none
    6828:	ldr	x0, [sp, #72]
    682c:	ldr	w1, [x0, #12]
    6830:	mov	w0, #0x8f00                	// #36608
    6834:	movk	w0, #0x19a1, lsl #16
    6838:	and	w0, w1, w0
    683c:	cmp	w0, #0x400
    6840:	b.ne	6860 <XS_Encode__utf8_decode+0x2f8>  // b.any
    6844:	ldr	x0, [sp, #72]
    6848:	ldr	x0, [x0]
    684c:	ldr	x0, [x0, #16]
    6850:	str	x0, [sp, #80]
    6854:	ldr	x0, [sp, #72]
    6858:	ldr	x0, [x0, #16]
    685c:	b	68d4 <XS_Encode__utf8_decode+0x36c>
    6860:	ldr	x0, [sp, #72]
    6864:	add	x1, sp, #0x50
    6868:	mov	w3, #0x0                   	// #0
    686c:	mov	x2, x1
    6870:	mov	x1, x0
    6874:	ldr	x0, [sp, #40]
    6878:	bl	28d0 <Perl_sv_pvn_force_flags@plt>
    687c:	b	68d4 <XS_Encode__utf8_decode+0x36c>
    6880:	ldr	x0, [sp, #72]
    6884:	ldr	w1, [x0, #12]
    6888:	mov	w0, #0x400                 	// #1024
    688c:	movk	w0, #0x20, lsl #16
    6890:	and	w0, w1, w0
    6894:	cmp	w0, #0x400
    6898:	b.ne	68b8 <XS_Encode__utf8_decode+0x350>  // b.any
    689c:	ldr	x0, [sp, #72]
    68a0:	ldr	x0, [x0]
    68a4:	ldr	x0, [x0, #16]
    68a8:	str	x0, [sp, #80]
    68ac:	ldr	x0, [sp, #72]
    68b0:	ldr	x0, [x0, #16]
    68b4:	b	68d4 <XS_Encode__utf8_decode+0x36c>
    68b8:	ldr	x0, [sp, #72]
    68bc:	add	x1, sp, #0x50
    68c0:	mov	w3, #0x0                   	// #0
    68c4:	mov	x2, x1
    68c8:	mov	x1, x0
    68cc:	ldr	x0, [sp, #40]
    68d0:	bl	29d0 <Perl_sv_2pv_flags@plt>
    68d4:	str	x0, [sp, #88]
    68d8:	ldr	x0, [sp, #72]
    68dc:	ldr	w0, [x0, #12]
    68e0:	and	w0, w0, #0x20000000
    68e4:	cmp	w0, #0x0
    68e8:	b.eq	6910 <XS_Encode__utf8_decode+0x3a8>  // b.none
    68ec:	add	x2, sp, #0x50
    68f0:	add	x1, sp, #0x58
    68f4:	add	x0, sp, #0x48
    68f8:	ldrb	w4, [sp, #63]
    68fc:	mov	x3, x2
    6900:	mov	x2, x1
    6904:	mov	x1, x0
    6908:	ldr	x0, [sp, #40]
    690c:	bl	4074 <utf8_safe_downgrade>
    6910:	ldr	x1, [sp, #88]
    6914:	ldr	x0, [sp, #80]
    6918:	add	x0, x1, x0
    691c:	str	x0, [sp, #152]
    6920:	ldr	x0, [sp, #40]
    6924:	bl	2c20 <Perl_push_scope@plt>
    6928:	ldr	x0, [sp, #40]
    692c:	bl	2a20 <Perl_savetmps@plt>
    6930:	ldr	x0, [sp, #40]
    6934:	ldr	x0, [x0, #120]
    6938:	add	x1, x0, #0x4
    693c:	ldr	x0, [sp, #40]
    6940:	str	x1, [x0, #120]
    6944:	ldr	x0, [sp, #40]
    6948:	ldr	x0, [x0, #120]
    694c:	str	x0, [sp, #112]
    6950:	ldr	x0, [sp, #40]
    6954:	ldr	x0, [x0, #128]
    6958:	ldr	x1, [sp, #112]
    695c:	cmp	x1, x0
    6960:	cset	w0, eq  // eq = none
    6964:	and	w0, w0, #0xff
    6968:	and	x0, x0, #0xff
    696c:	cmp	x0, #0x0
    6970:	b.eq	6980 <XS_Encode__utf8_decode+0x418>  // b.none
    6974:	ldr	x0, [sp, #40]
    6978:	bl	2b80 <Perl_markstack_grow@plt>
    697c:	str	x0, [sp, #112]
    6980:	ldr	x0, [sp, #40]
    6984:	ldr	x0, [x0, #24]
    6988:	ldr	x1, [sp, #104]
    698c:	sub	x0, x1, x0
    6990:	asr	x0, x0, #3
    6994:	mov	w1, w0
    6998:	ldr	x0, [sp, #112]
    699c:	str	w1, [x0]
    69a0:	ldr	x0, [sp, #40]
    69a4:	ldr	x1, [x0, #32]
    69a8:	ldr	x0, [sp, #104]
    69ac:	sub	x0, x1, x0
    69b0:	cmp	x0, #0x0
    69b4:	cset	w0, le
    69b8:	and	w0, w0, #0xff
    69bc:	and	x0, x0, #0xff
    69c0:	cmp	x0, #0x0
    69c4:	b.eq	69e0 <XS_Encode__utf8_decode+0x478>  // b.none
    69c8:	mov	x3, #0x1                   	// #1
    69cc:	ldr	x2, [sp, #104]
    69d0:	ldr	x1, [sp, #104]
    69d4:	ldr	x0, [sp, #40]
    69d8:	bl	28f0 <Perl_stack_grow@plt>
    69dc:	str	x0, [sp, #104]
    69e0:	ldr	x0, [sp, #104]
    69e4:	add	x0, x0, #0x8
    69e8:	str	x0, [sp, #104]
    69ec:	ldr	x0, [sp, #104]
    69f0:	ldr	x1, [sp, #136]
    69f4:	str	x1, [x0]
    69f8:	ldr	x0, [sp, #40]
    69fc:	ldr	x1, [sp, #104]
    6a00:	str	x1, [x0]
    6a04:	mov	w2, #0x2                   	// #2
    6a08:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    6a0c:	add	x1, x0, #0xff8
    6a10:	ldr	x0, [sp, #40]
    6a14:	bl	2910 <Perl_call_method@plt>
    6a18:	cmp	w0, #0x1
    6a1c:	b.ne	6a9c <XS_Encode__utf8_decode+0x534>  // b.any
    6a20:	ldr	x0, [sp, #40]
    6a24:	ldr	x0, [x0]
    6a28:	str	x0, [sp, #104]
    6a2c:	ldr	x0, [sp, #104]
    6a30:	sub	x1, x0, #0x8
    6a34:	str	x1, [sp, #104]
    6a38:	ldr	x0, [x0]
    6a3c:	str	x0, [sp, #160]
    6a40:	ldr	x0, [sp, #160]
    6a44:	str	x0, [sp, #168]
    6a48:	ldr	x0, [sp, #168]
    6a4c:	ldr	w1, [x0, #12]
    6a50:	mov	w0, #0x100                 	// #256
    6a54:	movk	w0, #0x20, lsl #16
    6a58:	and	w0, w1, w0
    6a5c:	cmp	w0, #0x100
    6a60:	b.ne	6a74 <XS_Encode__utf8_decode+0x50c>  // b.any
    6a64:	ldr	x0, [sp, #168]
    6a68:	ldr	x0, [x0]
    6a6c:	ldr	x0, [x0, #32]
    6a70:	b	6a84 <XS_Encode__utf8_decode+0x51c>
    6a74:	mov	w2, #0x2                   	// #2
    6a78:	ldr	x1, [sp, #168]
    6a7c:	ldr	x0, [sp, #40]
    6a80:	bl	2870 <Perl_sv_2iv_flags@plt>
    6a84:	cmp	x0, #0x0
    6a88:	cset	w0, ne  // ne = any
    6a8c:	strb	w0, [sp, #62]
    6a90:	ldr	x0, [sp, #40]
    6a94:	ldr	x1, [sp, #104]
    6a98:	str	x1, [x0]
    6a9c:	ldr	x0, [sp, #40]
    6aa0:	ldr	x1, [x0, #80]
    6aa4:	ldr	x0, [sp, #40]
    6aa8:	ldr	x0, [x0, #88]
    6aac:	cmp	x1, x0
    6ab0:	b.le	6abc <XS_Encode__utf8_decode+0x554>
    6ab4:	ldr	x0, [sp, #40]
    6ab8:	bl	2b70 <Perl_free_tmps@plt>
    6abc:	ldr	x0, [sp, #40]
    6ac0:	bl	2940 <Perl_pop_scope@plt>
    6ac4:	ldr	x0, [sp, #80]
    6ac8:	cmp	x0, #0x0
    6acc:	b.eq	6ad8 <XS_Encode__utf8_decode+0x570>  // b.none
    6ad0:	ldr	x0, [sp, #80]
    6ad4:	b	6adc <XS_Encode__utf8_decode+0x574>
    6ad8:	mov	x0, #0x1                   	// #1
    6adc:	mov	x1, x0
    6ae0:	ldr	x0, [sp, #40]
    6ae4:	bl	2960 <Perl_newSV@plt>
    6ae8:	mov	x1, x0
    6aec:	ldr	x0, [sp, #40]
    6af0:	bl	2ae0 <Perl_sv_2mortal@plt>
    6af4:	str	x0, [sp, #176]
    6af8:	ldr	x19, [sp, #88]
    6afc:	ldr	x1, [sp, #136]
    6b00:	ldr	x0, [sp, #40]
    6b04:	bl	52e0 <strict_utf8>
    6b08:	and	w0, w0, #0xff
    6b0c:	ldrb	w7, [sp, #62]
    6b10:	mov	w6, w0
    6b14:	mov	w5, #0x0                   	// #0
    6b18:	ldr	x4, [sp, #96]
    6b1c:	ldr	x3, [sp, #152]
    6b20:	mov	x2, x19
    6b24:	ldr	x1, [sp, #176]
    6b28:	ldr	x0, [sp, #40]
    6b2c:	bl	55ac <process_utf8>
    6b30:	str	x0, [sp, #88]
    6b34:	ldrb	w0, [sp, #63]
    6b38:	cmp	w0, #0x0
    6b3c:	b.eq	6b9c <XS_Encode__utf8_decode+0x634>  // b.none
    6b40:	ldr	x0, [sp, #88]
    6b44:	ldr	x1, [sp, #152]
    6b48:	sub	x0, x1, x0
    6b4c:	str	x0, [sp, #80]
    6b50:	ldr	x0, [sp, #72]
    6b54:	ldr	x1, [sp, #88]
    6b58:	ldr	x2, [sp, #80]
    6b5c:	mov	x3, x2
    6b60:	mov	x2, x1
    6b64:	mov	x1, x0
    6b68:	ldr	x0, [sp, #40]
    6b6c:	bl	2ba0 <Perl_sv_setpvn@plt>
    6b70:	ldr	x0, [sp, #72]
    6b74:	ldr	w0, [x0, #12]
    6b78:	lsr	w0, w0, #22
    6b7c:	mov	w0, w0
    6b80:	and	x0, x0, #0x1
    6b84:	cmp	x0, #0x0
    6b88:	b.eq	6b9c <XS_Encode__utf8_decode+0x634>  // b.none
    6b8c:	ldr	x0, [sp, #72]
    6b90:	mov	x1, x0
    6b94:	ldr	x0, [sp, #40]
    6b98:	bl	2ab0 <Perl_mg_set@plt>
    6b9c:	ldr	x0, [sp, #176]
    6ba0:	ldr	w0, [x0, #12]
    6ba4:	orr	w1, w0, #0x20000000
    6ba8:	ldr	x0, [sp, #176]
    6bac:	str	w1, [x0, #12]
    6bb0:	ldr	x0, [sp, #72]
    6bb4:	ldr	w0, [x0, #12]
    6bb8:	and	w0, w0, #0xe00000
    6bbc:	cmp	w0, #0x0
    6bc0:	b.eq	6c10 <XS_Encode__utf8_decode+0x6a8>  // b.none
    6bc4:	ldr	x0, [sp, #72]
    6bc8:	mov	x1, x0
    6bcc:	ldr	x0, [sp, #40]
    6bd0:	bl	2c70 <Perl_sv_tainted@plt>
    6bd4:	and	w0, w0, #0xff
    6bd8:	cmp	w0, #0x0
    6bdc:	b.eq	6c10 <XS_Encode__utf8_decode+0x6a8>  // b.none
    6be0:	ldr	x0, [sp, #40]
    6be4:	ldrb	w0, [x0, #184]
    6be8:	and	x0, x0, #0xff
    6bec:	cmp	x0, #0x0
    6bf0:	b.eq	6c10 <XS_Encode__utf8_decode+0x6a8>  // b.none
    6bf4:	mov	w5, #0x0                   	// #0
    6bf8:	mov	x4, #0x0                   	// #0
    6bfc:	mov	w3, #0x74                  	// #116
    6c00:	mov	x2, #0x0                   	// #0
    6c04:	ldr	x1, [sp, #176]
    6c08:	ldr	x0, [sp, #40]
    6c0c:	bl	2be0 <Perl_sv_magic@plt>
    6c10:	ldr	x0, [sp, #40]
    6c14:	ldr	x1, [x0, #24]
    6c18:	ldrsw	x0, [sp, #64]
    6c1c:	lsl	x0, x0, #3
    6c20:	add	x0, x1, x0
    6c24:	ldr	x1, [sp, #176]
    6c28:	str	x1, [x0]
    6c2c:	mov	x0, #0x1                   	// #1
    6c30:	str	x0, [sp, #184]
    6c34:	ldr	x0, [sp, #40]
    6c38:	ldr	x1, [x0, #24]
    6c3c:	ldrsw	x2, [sp, #64]
    6c40:	ldr	x0, [sp, #184]
    6c44:	add	x0, x2, x0
    6c48:	lsl	x0, x0, #3
    6c4c:	sub	x0, x0, #0x8
    6c50:	add	x1, x1, x0
    6c54:	ldr	x0, [sp, #40]
    6c58:	str	x1, [x0]
    6c5c:	nop
    6c60:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    6c64:	ldr	x0, [x0, #3992]
    6c68:	ldr	x1, [sp, #200]
    6c6c:	ldr	x0, [x0]
    6c70:	eor	x0, x1, x0
    6c74:	cmp	x0, #0x0
    6c78:	b.eq	6c80 <XS_Encode__utf8_decode+0x718>  // b.none
    6c7c:	bl	29f0 <__stack_chk_fail@plt>
    6c80:	ldr	x19, [sp, #16]
    6c84:	ldp	x29, x30, [sp], #208
    6c88:	ret

0000000000006c8c <XS_Encode__utf8_encode>:
    6c8c:	stp	x29, x30, [sp, #-176]!
    6c90:	mov	x29, sp
    6c94:	str	x0, [sp, #24]
    6c98:	str	x1, [sp, #16]
    6c9c:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    6ca0:	ldr	x0, [x0, #3992]
    6ca4:	ldr	x1, [x0]
    6ca8:	str	x1, [sp, #168]
    6cac:	mov	x1, #0x0                   	// #0
    6cb0:	ldr	x0, [sp, #24]
    6cb4:	ldr	x0, [x0]
    6cb8:	str	x0, [sp, #88]
    6cbc:	ldr	x0, [sp, #24]
    6cc0:	bl	2e20 <S_POPMARK>
    6cc4:	str	w0, [sp, #48]
    6cc8:	ldr	x0, [sp, #24]
    6ccc:	ldr	x1, [x0, #24]
    6cd0:	ldr	w0, [sp, #48]
    6cd4:	add	w2, w0, #0x1
    6cd8:	str	w2, [sp, #48]
    6cdc:	sxtw	x0, w0
    6ce0:	lsl	x0, x0, #3
    6ce4:	add	x0, x1, x0
    6ce8:	str	x0, [sp, #96]
    6cec:	ldr	x1, [sp, #88]
    6cf0:	ldr	x0, [sp, #96]
    6cf4:	sub	x0, x1, x0
    6cf8:	asr	x0, x0, #3
    6cfc:	str	w0, [sp, #52]
    6d00:	ldr	w0, [sp, #52]
    6d04:	cmp	w0, #0x1
    6d08:	b.le	6d18 <XS_Encode__utf8_encode+0x8c>
    6d0c:	ldr	w0, [sp, #52]
    6d10:	cmp	w0, #0x3
    6d14:	b.le	6d28 <XS_Encode__utf8_encode+0x9c>
    6d18:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    6d1c:	add	x1, x0, #0xfd8
    6d20:	ldr	x0, [sp, #16]
    6d24:	bl	2a10 <Perl_croak_xs_usage@plt>
    6d28:	ldrsw	x0, [sp, #52]
    6d2c:	lsl	x0, x0, #3
    6d30:	neg	x0, x0
    6d34:	ldr	x1, [sp, #88]
    6d38:	add	x0, x1, x0
    6d3c:	str	x0, [sp, #88]
    6d40:	ldr	x0, [sp, #24]
    6d44:	ldr	x1, [x0, #24]
    6d48:	ldrsw	x0, [sp, #48]
    6d4c:	lsl	x0, x0, #3
    6d50:	add	x0, x1, x0
    6d54:	ldr	x0, [x0]
    6d58:	str	x0, [sp, #104]
    6d5c:	ldr	x0, [sp, #24]
    6d60:	ldr	x1, [x0, #24]
    6d64:	ldrsw	x0, [sp, #48]
    6d68:	add	x0, x0, #0x1
    6d6c:	lsl	x0, x0, #3
    6d70:	add	x0, x1, x0
    6d74:	ldr	x0, [x0]
    6d78:	str	x0, [sp, #112]
    6d7c:	ldr	w0, [sp, #52]
    6d80:	cmp	w0, #0x2
    6d84:	b.gt	6d98 <XS_Encode__utf8_encode+0x10c>
    6d88:	ldr	x0, [sp, #24]
    6d8c:	add	x0, x0, #0x168
    6d90:	str	x0, [sp, #64]
    6d94:	b	6db8 <XS_Encode__utf8_encode+0x12c>
    6d98:	ldr	x0, [sp, #24]
    6d9c:	ldr	x1, [x0, #24]
    6da0:	ldrsw	x0, [sp, #48]
    6da4:	add	x0, x0, #0x2
    6da8:	lsl	x0, x0, #3
    6dac:	add	x0, x1, x0
    6db0:	ldr	x0, [x0]
    6db4:	str	x0, [sp, #64]
    6db8:	ldr	x0, [sp, #112]
    6dbc:	ldr	w0, [x0, #12]
    6dc0:	lsr	w0, w0, #21
    6dc4:	mov	w0, w0
    6dc8:	and	x0, x0, #0x1
    6dcc:	cmp	x0, #0x0
    6dd0:	b.eq	6de8 <XS_Encode__utf8_encode+0x15c>  // b.none
    6dd4:	ldr	x1, [sp, #112]
    6dd8:	ldr	x0, [sp, #24]
    6ddc:	bl	2af0 <Perl_mg_get@plt>
    6de0:	cmp	w0, #0x0
    6de4:	nop
    6de8:	ldr	x0, [sp, #64]
    6dec:	ldr	w0, [x0, #12]
    6df0:	lsr	w0, w0, #21
    6df4:	mov	w0, w0
    6df8:	and	x0, x0, #0x1
    6dfc:	cmp	x0, #0x0
    6e00:	b.eq	6e18 <XS_Encode__utf8_encode+0x18c>  // b.none
    6e04:	ldr	x1, [sp, #64]
    6e08:	ldr	x0, [sp, #24]
    6e0c:	bl	2af0 <Perl_mg_get@plt>
    6e10:	cmp	w0, #0x0
    6e14:	nop
    6e18:	ldr	x0, [sp, #64]
    6e1c:	ldr	w0, [x0, #12]
    6e20:	and	w0, w0, #0x800
    6e24:	cmp	w0, #0x0
    6e28:	b.ne	6e80 <XS_Encode__utf8_encode+0x1f4>  // b.any
    6e2c:	ldr	x0, [sp, #64]
    6e30:	ldr	w0, [x0, #12]
    6e34:	and	w0, w0, #0xff00
    6e38:	cmp	w0, #0x0
    6e3c:	b.eq	6e78 <XS_Encode__utf8_encode+0x1ec>  // b.none
    6e40:	ldr	x0, [sp, #64]
    6e44:	ldr	w0, [x0, #12]
    6e48:	and	w0, w0, #0x100
    6e4c:	cmp	w0, #0x0
    6e50:	b.eq	6e64 <XS_Encode__utf8_encode+0x1d8>  // b.none
    6e54:	ldr	x0, [sp, #64]
    6e58:	ldr	x0, [x0]
    6e5c:	ldr	x0, [x0, #32]
    6e60:	b	6e84 <XS_Encode__utf8_encode+0x1f8>
    6e64:	mov	w2, #0x0                   	// #0
    6e68:	ldr	x1, [sp, #64]
    6e6c:	ldr	x0, [sp, #24]
    6e70:	bl	2870 <Perl_sv_2iv_flags@plt>
    6e74:	b	6e84 <XS_Encode__utf8_encode+0x1f8>
    6e78:	mov	x0, #0x0                   	// #0
    6e7c:	b	6e84 <XS_Encode__utf8_encode+0x1f8>
    6e80:	mov	x0, #0x108                 	// #264
    6e84:	str	x0, [sp, #120]
    6e88:	ldr	x0, [sp, #120]
    6e8c:	cmp	x0, #0x0
    6e90:	b.eq	6eac <XS_Encode__utf8_encode+0x220>  // b.none
    6e94:	ldr	x0, [sp, #120]
    6e98:	and	x0, x0, #0x8
    6e9c:	cmp	x0, #0x0
    6ea0:	b.ne	6eac <XS_Encode__utf8_encode+0x220>  // b.any
    6ea4:	mov	w0, #0x1                   	// #1
    6ea8:	b	6eb0 <XS_Encode__utf8_encode+0x224>
    6eac:	mov	w0, #0x0                   	// #0
    6eb0:	strb	w0, [sp, #47]
    6eb4:	ldrb	w0, [sp, #47]
    6eb8:	and	w0, w0, #0x1
    6ebc:	strb	w0, [sp, #47]
    6ec0:	ldr	x0, [sp, #112]
    6ec4:	ldr	w0, [x0, #12]
    6ec8:	and	w0, w0, #0xff00
    6ecc:	cmp	w0, #0x0
    6ed0:	b.ne	6f28 <XS_Encode__utf8_encode+0x29c>  // b.any
    6ed4:	ldr	x0, [sp, #24]
    6ed8:	ldr	x1, [x0, #24]
    6edc:	ldrsw	x0, [sp, #48]
    6ee0:	lsl	x0, x0, #3
    6ee4:	add	x0, x1, x0
    6ee8:	ldr	x1, [sp, #24]
    6eec:	add	x1, x1, #0x150
    6ef0:	str	x1, [x0]
    6ef4:	mov	x0, #0x1                   	// #1
    6ef8:	str	x0, [sp, #160]
    6efc:	ldr	x0, [sp, #24]
    6f00:	ldr	x1, [x0, #24]
    6f04:	ldrsw	x2, [sp, #48]
    6f08:	ldr	x0, [sp, #160]
    6f0c:	add	x0, x2, x0
    6f10:	lsl	x0, x0, #3
    6f14:	sub	x0, x0, #0x8
    6f18:	add	x1, x1, x0
    6f1c:	ldr	x0, [sp, #24]
    6f20:	str	x1, [x0]
    6f24:	b	7338 <XS_Encode__utf8_encode+0x6ac>
    6f28:	ldrb	w0, [sp, #47]
    6f2c:	cmp	w0, #0x0
    6f30:	b.eq	6f88 <XS_Encode__utf8_encode+0x2fc>  // b.none
    6f34:	ldr	x0, [sp, #112]
    6f38:	ldr	w1, [x0, #12]
    6f3c:	mov	w0, #0x8f00                	// #36608
    6f40:	movk	w0, #0x19a1, lsl #16
    6f44:	and	w0, w1, w0
    6f48:	cmp	w0, #0x400
    6f4c:	b.ne	6f6c <XS_Encode__utf8_encode+0x2e0>  // b.any
    6f50:	ldr	x0, [sp, #112]
    6f54:	ldr	x0, [x0]
    6f58:	ldr	x0, [x0, #16]
    6f5c:	str	x0, [sp, #56]
    6f60:	ldr	x0, [sp, #112]
    6f64:	ldr	x0, [x0, #16]
    6f68:	b	6fd8 <XS_Encode__utf8_encode+0x34c>
    6f6c:	add	x0, sp, #0x38
    6f70:	mov	w3, #0x0                   	// #0
    6f74:	mov	x2, x0
    6f78:	ldr	x1, [sp, #112]
    6f7c:	ldr	x0, [sp, #24]
    6f80:	bl	28d0 <Perl_sv_pvn_force_flags@plt>
    6f84:	b	6fd8 <XS_Encode__utf8_encode+0x34c>
    6f88:	ldr	x0, [sp, #112]
    6f8c:	ldr	w1, [x0, #12]
    6f90:	mov	w0, #0x400                 	// #1024
    6f94:	movk	w0, #0x20, lsl #16
    6f98:	and	w0, w1, w0
    6f9c:	cmp	w0, #0x400
    6fa0:	b.ne	6fc0 <XS_Encode__utf8_encode+0x334>  // b.any
    6fa4:	ldr	x0, [sp, #112]
    6fa8:	ldr	x0, [x0]
    6fac:	ldr	x0, [x0, #16]
    6fb0:	str	x0, [sp, #56]
    6fb4:	ldr	x0, [sp, #112]
    6fb8:	ldr	x0, [x0, #16]
    6fbc:	b	6fd8 <XS_Encode__utf8_encode+0x34c>
    6fc0:	add	x0, sp, #0x38
    6fc4:	mov	w3, #0x0                   	// #0
    6fc8:	mov	x2, x0
    6fcc:	ldr	x1, [sp, #112]
    6fd0:	ldr	x0, [sp, #24]
    6fd4:	bl	29d0 <Perl_sv_2pv_flags@plt>
    6fd8:	str	x0, [sp, #72]
    6fdc:	ldr	x0, [sp, #56]
    6fe0:	ldr	x1, [sp, #72]
    6fe4:	add	x0, x1, x0
    6fe8:	str	x0, [sp, #128]
    6fec:	ldr	x0, [sp, #56]
    6ff0:	cmp	x0, #0x0
    6ff4:	b.eq	7000 <XS_Encode__utf8_encode+0x374>  // b.none
    6ff8:	ldr	x0, [sp, #56]
    6ffc:	b	7004 <XS_Encode__utf8_encode+0x378>
    7000:	mov	x0, #0x1                   	// #1
    7004:	mov	x1, x0
    7008:	ldr	x0, [sp, #24]
    700c:	bl	2960 <Perl_newSV@plt>
    7010:	mov	x1, x0
    7014:	ldr	x0, [sp, #24]
    7018:	bl	2ae0 <Perl_sv_2mortal@plt>
    701c:	str	x0, [sp, #136]
    7020:	ldr	x0, [sp, #112]
    7024:	ldr	w0, [x0, #12]
    7028:	and	w0, w0, #0x20000000
    702c:	cmp	w0, #0x0
    7030:	b.eq	70a4 <XS_Encode__utf8_encode+0x418>  // b.none
    7034:	ldr	x1, [sp, #104]
    7038:	ldr	x0, [sp, #24]
    703c:	bl	52e0 <strict_utf8>
    7040:	and	w0, w0, #0xff
    7044:	cmp	w0, #0x0
    7048:	b.eq	7078 <XS_Encode__utf8_encode+0x3ec>  // b.none
    704c:	mov	w7, #0x0                   	// #0
    7050:	mov	w6, #0x1                   	// #1
    7054:	mov	w5, #0x1                   	// #1
    7058:	ldr	x4, [sp, #64]
    705c:	ldr	x3, [sp, #128]
    7060:	ldr	x2, [sp, #72]
    7064:	ldr	x1, [sp, #136]
    7068:	ldr	x0, [sp, #24]
    706c:	bl	55ac <process_utf8>
    7070:	str	x0, [sp, #72]
    7074:	b	71e8 <XS_Encode__utf8_encode+0x55c>
    7078:	ldr	x1, [sp, #128]
    707c:	ldr	x0, [sp, #72]
    7080:	sub	x0, x1, x0
    7084:	mov	x3, x0
    7088:	ldr	x2, [sp, #72]
    708c:	ldr	x1, [sp, #136]
    7090:	ldr	x0, [sp, #24]
    7094:	bl	2ba0 <Perl_sv_setpvn@plt>
    7098:	ldr	x0, [sp, #128]
    709c:	str	x0, [sp, #72]
    70a0:	b	71e8 <XS_Encode__utf8_encode+0x55c>
    70a4:	ldr	x0, [sp, #136]
    70a8:	ldr	w0, [x0, #12]
    70ac:	and	w0, w0, #0x10000000
    70b0:	cmp	w0, #0x0
    70b4:	b.ne	70d8 <XS_Encode__utf8_encode+0x44c>  // b.any
    70b8:	ldr	x0, [sp, #136]
    70bc:	ldr	x0, [x0]
    70c0:	ldr	x1, [x0, #24]
    70c4:	ldr	x0, [sp, #56]
    70c8:	lsl	x0, x0, #1
    70cc:	add	x0, x0, #0x1
    70d0:	cmp	x1, x0
    70d4:	b.cs	70f8 <XS_Encode__utf8_encode+0x46c>  // b.hs, b.nlast
    70d8:	ldr	x0, [sp, #56]
    70dc:	lsl	x0, x0, #1
    70e0:	add	x0, x0, #0x1
    70e4:	mov	x2, x0
    70e8:	ldr	x1, [sp, #136]
    70ec:	ldr	x0, [sp, #24]
    70f0:	bl	2a30 <Perl_sv_grow@plt>
    70f4:	b	7100 <XS_Encode__utf8_encode+0x474>
    70f8:	ldr	x0, [sp, #136]
    70fc:	ldr	x0, [x0, #16]
    7100:	str	x0, [sp, #80]
    7104:	b	71a0 <XS_Encode__utf8_encode+0x514>
    7108:	ldr	x0, [sp, #72]
    710c:	ldrb	w0, [x0]
    7110:	and	x0, x0, #0xff
    7114:	str	x0, [sp, #144]
    7118:	ldr	x0, [sp, #72]
    711c:	add	x0, x0, #0x1
    7120:	str	x0, [sp, #72]
    7124:	ldr	x0, [sp, #144]
    7128:	cmp	x0, #0x7f
    712c:	b.hi	714c <XS_Encode__utf8_encode+0x4c0>  // b.pmore
    7130:	ldr	x0, [sp, #80]
    7134:	add	x1, x0, #0x1
    7138:	str	x1, [sp, #80]
    713c:	ldr	x1, [sp, #144]
    7140:	and	w1, w1, #0xff
    7144:	strb	w1, [x0]
    7148:	b	71a0 <XS_Encode__utf8_encode+0x514>
    714c:	ldr	x0, [sp, #144]
    7150:	and	w0, w0, #0xff
    7154:	lsr	w0, w0, #6
    7158:	and	w1, w0, #0xff
    715c:	ldr	x0, [sp, #80]
    7160:	add	x2, x0, #0x1
    7164:	str	x2, [sp, #80]
    7168:	orr	w1, w1, #0xffffffc0
    716c:	and	w1, w1, #0xff
    7170:	strb	w1, [x0]
    7174:	ldr	x0, [sp, #144]
    7178:	sxtb	w0, w0
    717c:	and	w0, w0, #0x3f
    7180:	sxtb	w0, w0
    7184:	orr	w0, w0, #0xffffff80
    7188:	sxtb	w2, w0
    718c:	ldr	x0, [sp, #80]
    7190:	add	x1, x0, #0x1
    7194:	str	x1, [sp, #80]
    7198:	and	w1, w2, #0xff
    719c:	strb	w1, [x0]
    71a0:	ldr	x1, [sp, #72]
    71a4:	ldr	x0, [sp, #128]
    71a8:	cmp	x1, x0
    71ac:	b.cc	7108 <XS_Encode__utf8_encode+0x47c>  // b.lo, b.ul, b.last
    71b0:	ldr	x0, [sp, #136]
    71b4:	ldr	x0, [x0, #16]
    71b8:	ldr	x1, [sp, #80]
    71bc:	sub	x1, x1, x0
    71c0:	ldr	x0, [sp, #136]
    71c4:	ldr	x0, [x0]
    71c8:	str	x1, [x0, #16]
    71cc:	ldr	x0, [sp, #136]
    71d0:	ldr	x1, [x0, #16]
    71d4:	ldr	x0, [sp, #136]
    71d8:	ldr	x0, [x0]
    71dc:	ldr	x0, [x0, #16]
    71e0:	add	x0, x1, x0
    71e4:	strb	wzr, [x0]
    71e8:	ldrb	w0, [sp, #47]
    71ec:	cmp	w0, #0x0
    71f0:	b.eq	7244 <XS_Encode__utf8_encode+0x5b8>  // b.none
    71f4:	ldr	x1, [sp, #128]
    71f8:	ldr	x0, [sp, #72]
    71fc:	sub	x0, x1, x0
    7200:	str	x0, [sp, #56]
    7204:	ldr	x0, [sp, #56]
    7208:	mov	x3, x0
    720c:	ldr	x2, [sp, #72]
    7210:	ldr	x1, [sp, #112]
    7214:	ldr	x0, [sp, #24]
    7218:	bl	2ba0 <Perl_sv_setpvn@plt>
    721c:	ldr	x0, [sp, #112]
    7220:	ldr	w0, [x0, #12]
    7224:	lsr	w0, w0, #22
    7228:	mov	w0, w0
    722c:	and	x0, x0, #0x1
    7230:	cmp	x0, #0x0
    7234:	b.eq	7244 <XS_Encode__utf8_encode+0x5b8>  // b.none
    7238:	ldr	x1, [sp, #112]
    723c:	ldr	x0, [sp, #24]
    7240:	bl	2ab0 <Perl_mg_set@plt>
    7244:	ldr	x0, [sp, #136]
    7248:	ldr	w1, [x0, #12]
    724c:	mov	w0, #0xff                  	// #255
    7250:	movk	w0, #0x5fff, lsl #16
    7254:	and	w1, w1, w0
    7258:	ldr	x0, [sp, #136]
    725c:	str	w1, [x0, #12]
    7260:	ldr	x0, [sp, #136]
    7264:	ldr	w1, [x0, #12]
    7268:	mov	w0, #0x4400                	// #17408
    726c:	orr	w1, w1, w0
    7270:	ldr	x0, [sp, #136]
    7274:	str	w1, [x0, #12]
    7278:	ldr	x0, [sp, #136]
    727c:	ldr	w0, [x0, #12]
    7280:	and	w1, w0, #0xdfffffff
    7284:	ldr	x0, [sp, #136]
    7288:	str	w1, [x0, #12]
    728c:	ldr	x0, [sp, #112]
    7290:	ldr	w0, [x0, #12]
    7294:	and	w0, w0, #0xe00000
    7298:	cmp	w0, #0x0
    729c:	b.eq	72e8 <XS_Encode__utf8_encode+0x65c>  // b.none
    72a0:	ldr	x1, [sp, #112]
    72a4:	ldr	x0, [sp, #24]
    72a8:	bl	2c70 <Perl_sv_tainted@plt>
    72ac:	and	w0, w0, #0xff
    72b0:	cmp	w0, #0x0
    72b4:	b.eq	72e8 <XS_Encode__utf8_encode+0x65c>  // b.none
    72b8:	ldr	x0, [sp, #24]
    72bc:	ldrb	w0, [x0, #184]
    72c0:	and	x0, x0, #0xff
    72c4:	cmp	x0, #0x0
    72c8:	b.eq	72e8 <XS_Encode__utf8_encode+0x65c>  // b.none
    72cc:	mov	w5, #0x0                   	// #0
    72d0:	mov	x4, #0x0                   	// #0
    72d4:	mov	w3, #0x74                  	// #116
    72d8:	mov	x2, #0x0                   	// #0
    72dc:	ldr	x1, [sp, #136]
    72e0:	ldr	x0, [sp, #24]
    72e4:	bl	2be0 <Perl_sv_magic@plt>
    72e8:	ldr	x0, [sp, #24]
    72ec:	ldr	x1, [x0, #24]
    72f0:	ldrsw	x0, [sp, #48]
    72f4:	lsl	x0, x0, #3
    72f8:	add	x0, x1, x0
    72fc:	ldr	x1, [sp, #136]
    7300:	str	x1, [x0]
    7304:	mov	x0, #0x1                   	// #1
    7308:	str	x0, [sp, #152]
    730c:	ldr	x0, [sp, #24]
    7310:	ldr	x1, [x0, #24]
    7314:	ldrsw	x2, [sp, #48]
    7318:	ldr	x0, [sp, #152]
    731c:	add	x0, x2, x0
    7320:	lsl	x0, x0, #3
    7324:	sub	x0, x0, #0x8
    7328:	add	x1, x1, x0
    732c:	ldr	x0, [sp, #24]
    7330:	str	x1, [x0]
    7334:	nop
    7338:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    733c:	ldr	x0, [x0, #3992]
    7340:	ldr	x1, [sp, #168]
    7344:	ldr	x0, [x0]
    7348:	eor	x0, x1, x0
    734c:	cmp	x0, #0x0
    7350:	b.eq	7358 <XS_Encode__utf8_encode+0x6cc>  // b.none
    7354:	bl	29f0 <__stack_chk_fail@plt>
    7358:	ldp	x29, x30, [sp], #176
    735c:	ret

0000000000007360 <XS_Encode__XS_renew>:
    7360:	stp	x29, x30, [sp, #-80]!
    7364:	mov	x29, sp
    7368:	str	x0, [sp, #24]
    736c:	str	x1, [sp, #16]
    7370:	ldr	x0, [sp, #24]
    7374:	ldr	x0, [x0]
    7378:	str	x0, [sp, #40]
    737c:	ldr	x0, [sp, #24]
    7380:	bl	2e20 <S_POPMARK>
    7384:	str	w0, [sp, #32]
    7388:	ldr	x0, [sp, #24]
    738c:	ldr	x1, [x0, #24]
    7390:	ldr	w0, [sp, #32]
    7394:	add	w2, w0, #0x1
    7398:	str	w2, [sp, #32]
    739c:	sxtw	x0, w0
    73a0:	lsl	x0, x0, #3
    73a4:	add	x0, x1, x0
    73a8:	str	x0, [sp, #48]
    73ac:	ldr	x1, [sp, #40]
    73b0:	ldr	x0, [sp, #48]
    73b4:	sub	x0, x1, x0
    73b8:	asr	x0, x0, #3
    73bc:	str	w0, [sp, #36]
    73c0:	ldr	w0, [sp, #36]
    73c4:	cmp	w0, #0x1
    73c8:	b.eq	73dc <XS_Encode__XS_renew+0x7c>  // b.none
    73cc:	adrp	x0, b000 <super_cp_format+0x218>
    73d0:	add	x1, x0, #0x0
    73d4:	ldr	x0, [sp, #16]
    73d8:	bl	2a10 <Perl_croak_xs_usage@plt>
    73dc:	ldr	x0, [sp, #24]
    73e0:	ldr	x1, [x0, #24]
    73e4:	ldrsw	x0, [sp, #32]
    73e8:	lsl	x0, x0, #3
    73ec:	add	x0, x1, x0
    73f0:	ldr	x0, [x0]
    73f4:	str	x0, [sp, #56]
    73f8:	mov	w2, #0x12                  	// #18
    73fc:	ldr	x1, [sp, #56]
    7400:	ldr	x0, [sp, #24]
    7404:	bl	2c40 <Perl_newSVsv_flags@plt>
    7408:	str	x0, [sp, #64]
    740c:	ldr	x1, [sp, #64]
    7410:	ldr	x0, [sp, #24]
    7414:	bl	2ae0 <Perl_sv_2mortal@plt>
    7418:	str	x0, [sp, #64]
    741c:	ldr	x0, [sp, #24]
    7420:	ldr	x1, [x0, #24]
    7424:	ldrsw	x0, [sp, #32]
    7428:	lsl	x0, x0, #3
    742c:	add	x0, x1, x0
    7430:	ldr	x1, [sp, #64]
    7434:	str	x1, [x0]
    7438:	mov	x0, #0x1                   	// #1
    743c:	str	x0, [sp, #72]
    7440:	ldr	x0, [sp, #24]
    7444:	ldr	x1, [x0, #24]
    7448:	ldrsw	x2, [sp, #32]
    744c:	ldr	x0, [sp, #72]
    7450:	add	x0, x2, x0
    7454:	lsl	x0, x0, #3
    7458:	sub	x0, x0, #0x8
    745c:	add	x1, x1, x0
    7460:	ldr	x0, [sp, #24]
    7464:	str	x1, [x0]
    7468:	nop
    746c:	ldp	x29, x30, [sp], #80
    7470:	ret

0000000000007474 <XS_Encode__XS_renewed>:
    7474:	stp	x29, x30, [sp, #-96]!
    7478:	mov	x29, sp
    747c:	str	x0, [sp, #24]
    7480:	str	x1, [sp, #16]
    7484:	ldr	x0, [sp, #24]
    7488:	ldr	x0, [x0]
    748c:	str	x0, [sp, #48]
    7490:	ldr	x0, [sp, #24]
    7494:	bl	2e20 <S_POPMARK>
    7498:	str	w0, [sp, #36]
    749c:	ldr	x0, [sp, #24]
    74a0:	ldr	x1, [x0, #24]
    74a4:	ldr	w0, [sp, #36]
    74a8:	add	w2, w0, #0x1
    74ac:	str	w2, [sp, #36]
    74b0:	sxtw	x0, w0
    74b4:	lsl	x0, x0, #3
    74b8:	add	x0, x1, x0
    74bc:	str	x0, [sp, #56]
    74c0:	ldr	x1, [sp, #48]
    74c4:	ldr	x0, [sp, #56]
    74c8:	sub	x0, x1, x0
    74cc:	asr	x0, x0, #3
    74d0:	str	w0, [sp, #40]
    74d4:	ldr	w0, [sp, #40]
    74d8:	cmp	w0, #0x1
    74dc:	b.eq	74f0 <XS_Encode__XS_renewed+0x7c>  // b.none
    74e0:	adrp	x0, b000 <super_cp_format+0x218>
    74e4:	add	x1, x0, #0x0
    74e8:	ldr	x0, [sp, #16]
    74ec:	bl	2a10 <Perl_croak_xs_usage@plt>
    74f0:	ldr	x0, [sp, #24]
    74f4:	ldr	x1, [x0, #24]
    74f8:	ldrsw	x0, [sp, #36]
    74fc:	lsl	x0, x0, #3
    7500:	add	x0, x1, x0
    7504:	ldr	x0, [x0]
    7508:	str	x0, [sp, #64]
    750c:	ldr	x0, [sp, #24]
    7510:	ldr	x0, [x0, #8]
    7514:	ldrb	w0, [x0, #35]
    7518:	and	w0, w0, #0x4
    751c:	cmp	w0, #0x0
    7520:	b.eq	7548 <XS_Encode__XS_renewed+0xd4>  // b.none
    7524:	ldr	x0, [sp, #24]
    7528:	ldr	x1, [x0, #16]
    752c:	ldr	x0, [sp, #24]
    7530:	ldr	x0, [x0, #8]
    7534:	ldr	x0, [x0, #24]
    7538:	lsl	x0, x0, #3
    753c:	add	x0, x1, x0
    7540:	ldr	x0, [x0]
    7544:	b	7550 <XS_Encode__XS_renewed+0xdc>
    7548:	ldr	x0, [sp, #24]
    754c:	bl	2c60 <Perl_sv_newmortal@plt>
    7550:	str	x0, [sp, #72]
    7554:	str	wzr, [sp, #44]
    7558:	ldr	x0, [sp, #24]
    755c:	ldr	x1, [x0, #24]
    7560:	ldrsw	x0, [sp, #36]
    7564:	lsl	x0, x0, #3
    7568:	sub	x0, x0, #0x8
    756c:	add	x0, x1, x0
    7570:	str	x0, [sp, #48]
    7574:	ldrsw	x0, [sp, #44]
    7578:	str	x0, [sp, #80]
    757c:	ldr	x0, [sp, #72]
    7580:	ldr	w1, [x0, #12]
    7584:	mov	w0, #0x8ff                 	// #2303
    7588:	movk	w0, #0x9981, lsl #16
    758c:	and	w0, w1, w0
    7590:	cmp	w0, #0x1
    7594:	cset	w0, eq  // eq = none
    7598:	and	w0, w0, #0xff
    759c:	mov	w1, w0
    75a0:	ldr	x0, [sp, #24]
    75a4:	ldrb	w0, [x0, #185]
    75a8:	eor	w0, w0, #0x1
    75ac:	and	w0, w0, #0xff
    75b0:	and	w0, w1, w0
    75b4:	cmp	w0, #0x0
    75b8:	cset	w0, ne  // ne = any
    75bc:	and	w0, w0, #0xff
    75c0:	and	x0, x0, #0xff
    75c4:	cmp	x0, #0x0
    75c8:	b.eq	75f4 <XS_Encode__XS_renewed+0x180>  // b.none
    75cc:	ldr	x0, [sp, #72]
    75d0:	ldr	w1, [x0, #12]
    75d4:	mov	w0, #0x1100                	// #4352
    75d8:	orr	w1, w1, w0
    75dc:	ldr	x0, [sp, #72]
    75e0:	str	w1, [x0, #12]
    75e4:	ldr	x0, [sp, #72]
    75e8:	ldr	x1, [sp, #80]
    75ec:	str	x1, [x0, #16]
    75f0:	b	7604 <XS_Encode__XS_renewed+0x190>
    75f4:	ldr	x2, [sp, #80]
    75f8:	ldr	x1, [sp, #72]
    75fc:	ldr	x0, [sp, #24]
    7600:	bl	2990 <Perl_sv_setiv_mg@plt>
    7604:	ldr	x0, [sp, #48]
    7608:	add	x0, x0, #0x8
    760c:	str	x0, [sp, #48]
    7610:	ldr	x0, [sp, #48]
    7614:	ldr	x1, [sp, #72]
    7618:	str	x1, [x0]
    761c:	mov	x0, #0x1                   	// #1
    7620:	str	x0, [sp, #88]
    7624:	ldr	x0, [sp, #24]
    7628:	ldr	x1, [x0, #24]
    762c:	ldrsw	x2, [sp, #36]
    7630:	ldr	x0, [sp, #88]
    7634:	add	x0, x2, x0
    7638:	lsl	x0, x0, #3
    763c:	sub	x0, x0, #0x8
    7640:	add	x1, x1, x0
    7644:	ldr	x0, [sp, #24]
    7648:	str	x1, [x0]
    764c:	nop
    7650:	ldp	x29, x30, [sp], #96
    7654:	ret

0000000000007658 <XS_Encode__XS_name>:
    7658:	stp	x29, x30, [sp, #-112]!
    765c:	mov	x29, sp
    7660:	str	x19, [sp, #16]
    7664:	str	x0, [sp, #40]
    7668:	str	x1, [sp, #32]
    766c:	ldr	x0, [sp, #40]
    7670:	ldr	x0, [x0]
    7674:	str	x0, [sp, #64]
    7678:	ldr	x0, [sp, #40]
    767c:	bl	2e20 <S_POPMARK>
    7680:	str	w0, [sp, #56]
    7684:	ldr	x0, [sp, #40]
    7688:	ldr	x1, [x0, #24]
    768c:	ldr	w0, [sp, #56]
    7690:	add	w2, w0, #0x1
    7694:	str	w2, [sp, #56]
    7698:	sxtw	x0, w0
    769c:	lsl	x0, x0, #3
    76a0:	add	x0, x1, x0
    76a4:	str	x0, [sp, #72]
    76a8:	ldr	x1, [sp, #64]
    76ac:	ldr	x0, [sp, #72]
    76b0:	sub	x0, x1, x0
    76b4:	asr	x0, x0, #3
    76b8:	str	w0, [sp, #60]
    76bc:	ldr	w0, [sp, #60]
    76c0:	cmp	w0, #0x1
    76c4:	b.eq	76d8 <XS_Encode__XS_name+0x80>  // b.none
    76c8:	adrp	x0, b000 <super_cp_format+0x218>
    76cc:	add	x1, x0, #0x0
    76d0:	ldr	x0, [sp, #32]
    76d4:	bl	2a10 <Perl_croak_xs_usage@plt>
    76d8:	ldr	x0, [sp, #40]
    76dc:	ldr	x1, [x0, #24]
    76e0:	ldrsw	x0, [sp, #56]
    76e4:	lsl	x0, x0, #3
    76e8:	add	x0, x1, x0
    76ec:	ldr	x0, [x0]
    76f0:	str	x0, [sp, #80]
    76f4:	ldr	x0, [sp, #80]
    76f8:	ldr	x0, [x0, #16]
    76fc:	ldr	w1, [x0, #12]
    7700:	mov	w0, #0x100                 	// #256
    7704:	movk	w0, #0x20, lsl #16
    7708:	and	w0, w1, w0
    770c:	cmp	w0, #0x100
    7710:	b.ne	7728 <XS_Encode__XS_name+0xd0>  // b.any
    7714:	ldr	x0, [sp, #80]
    7718:	ldr	x0, [x0, #16]
    771c:	ldr	x0, [x0]
    7720:	ldr	x0, [x0, #32]
    7724:	b	7740 <XS_Encode__XS_name+0xe8>
    7728:	ldr	x0, [sp, #80]
    772c:	ldr	x0, [x0, #16]
    7730:	mov	w2, #0x2                   	// #2
    7734:	mov	x1, x0
    7738:	ldr	x0, [sp, #40]
    773c:	bl	2870 <Perl_sv_2iv_flags@plt>
    7740:	str	x0, [sp, #88]
    7744:	ldr	x0, [sp, #88]
    7748:	ldr	x19, [x0, #32]
    774c:	ldr	x0, [sp, #88]
    7750:	ldr	x0, [x0, #32]
    7754:	bl	2890 <strlen@plt>
    7758:	mov	x2, x0
    775c:	mov	x1, x19
    7760:	ldr	x0, [sp, #40]
    7764:	bl	2c50 <Perl_newSVpvn@plt>
    7768:	str	x0, [sp, #96]
    776c:	ldr	x1, [sp, #96]
    7770:	ldr	x0, [sp, #40]
    7774:	bl	2ae0 <Perl_sv_2mortal@plt>
    7778:	str	x0, [sp, #96]
    777c:	ldr	x0, [sp, #40]
    7780:	ldr	x1, [x0, #24]
    7784:	ldrsw	x0, [sp, #56]
    7788:	lsl	x0, x0, #3
    778c:	add	x0, x1, x0
    7790:	ldr	x1, [sp, #96]
    7794:	str	x1, [x0]
    7798:	mov	x0, #0x1                   	// #1
    779c:	str	x0, [sp, #104]
    77a0:	ldr	x0, [sp, #40]
    77a4:	ldr	x1, [x0, #24]
    77a8:	ldrsw	x2, [sp, #56]
    77ac:	ldr	x0, [sp, #104]
    77b0:	add	x0, x2, x0
    77b4:	lsl	x0, x0, #3
    77b8:	sub	x0, x0, #0x8
    77bc:	add	x1, x1, x0
    77c0:	ldr	x0, [sp, #40]
    77c4:	str	x1, [x0]
    77c8:	nop
    77cc:	ldr	x19, [sp, #16]
    77d0:	ldp	x29, x30, [sp], #112
    77d4:	ret

00000000000077d8 <XS_Encode__XS_cat_decode>:
    77d8:	sub	sp, sp, #0xf0
    77dc:	stp	x29, x30, [sp, #32]
    77e0:	add	x29, sp, #0x20
    77e4:	str	x0, [sp, #56]
    77e8:	str	x1, [sp, #48]
    77ec:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    77f0:	ldr	x0, [x0, #3992]
    77f4:	ldr	x1, [x0]
    77f8:	str	x1, [sp, #232]
    77fc:	mov	x1, #0x0                   	// #0
    7800:	ldr	x0, [sp, #56]
    7804:	ldr	x0, [x0]
    7808:	str	x0, [sp, #128]
    780c:	ldr	x0, [sp, #56]
    7810:	bl	2e20 <S_POPMARK>
    7814:	str	w0, [sp, #80]
    7818:	ldr	x0, [sp, #56]
    781c:	ldr	x1, [x0, #24]
    7820:	ldr	w0, [sp, #80]
    7824:	add	w2, w0, #0x1
    7828:	str	w2, [sp, #80]
    782c:	sxtw	x0, w0
    7830:	lsl	x0, x0, #3
    7834:	add	x0, x1, x0
    7838:	str	x0, [sp, #136]
    783c:	ldr	x1, [sp, #128]
    7840:	ldr	x0, [sp, #136]
    7844:	sub	x0, x1, x0
    7848:	asr	x0, x0, #3
    784c:	str	w0, [sp, #84]
    7850:	ldr	w0, [sp, #84]
    7854:	cmp	w0, #0x4
    7858:	b.le	7868 <XS_Encode__XS_cat_decode+0x90>
    785c:	ldr	w0, [sp, #84]
    7860:	cmp	w0, #0x6
    7864:	b.le	7878 <XS_Encode__XS_cat_decode+0xa0>
    7868:	adrp	x0, b000 <super_cp_format+0x218>
    786c:	add	x1, x0, #0x8
    7870:	ldr	x0, [sp, #48]
    7874:	bl	2a10 <Perl_croak_xs_usage@plt>
    7878:	ldr	x0, [sp, #56]
    787c:	ldr	x1, [x0, #24]
    7880:	ldrsw	x0, [sp, #80]
    7884:	lsl	x0, x0, #3
    7888:	add	x0, x1, x0
    788c:	ldr	x0, [x0]
    7890:	str	x0, [sp, #144]
    7894:	ldr	x0, [sp, #56]
    7898:	ldr	x1, [x0, #24]
    789c:	ldrsw	x0, [sp, #80]
    78a0:	add	x0, x0, #0x1
    78a4:	lsl	x0, x0, #3
    78a8:	add	x0, x1, x0
    78ac:	ldr	x0, [x0]
    78b0:	str	x0, [sp, #152]
    78b4:	ldr	x0, [sp, #56]
    78b8:	ldr	x1, [x0, #24]
    78bc:	ldrsw	x0, [sp, #80]
    78c0:	add	x0, x0, #0x2
    78c4:	lsl	x0, x0, #3
    78c8:	add	x0, x1, x0
    78cc:	ldr	x0, [x0]
    78d0:	str	x0, [sp, #88]
    78d4:	ldr	x0, [sp, #56]
    78d8:	ldr	x1, [x0, #24]
    78dc:	ldrsw	x0, [sp, #80]
    78e0:	add	x0, x0, #0x3
    78e4:	lsl	x0, x0, #3
    78e8:	add	x0, x1, x0
    78ec:	ldr	x0, [x0]
    78f0:	str	x0, [sp, #160]
    78f4:	ldr	x0, [sp, #56]
    78f8:	ldr	x1, [x0, #24]
    78fc:	ldrsw	x0, [sp, #80]
    7900:	add	x0, x0, #0x4
    7904:	lsl	x0, x0, #3
    7908:	add	x0, x1, x0
    790c:	ldr	x0, [x0]
    7910:	str	x0, [sp, #168]
    7914:	str	wzr, [sp, #76]
    7918:	ldr	w0, [sp, #84]
    791c:	cmp	w0, #0x5
    7920:	b.gt	7934 <XS_Encode__XS_cat_decode+0x15c>
    7924:	ldr	x0, [sp, #56]
    7928:	add	x0, x0, #0x168
    792c:	str	x0, [sp, #120]
    7930:	b	7954 <XS_Encode__XS_cat_decode+0x17c>
    7934:	ldr	x0, [sp, #56]
    7938:	ldr	x1, [x0, #24]
    793c:	ldrsw	x0, [sp, #80]
    7940:	add	x0, x0, #0x5
    7944:	lsl	x0, x0, #3
    7948:	add	x0, x1, x0
    794c:	ldr	x0, [x0]
    7950:	str	x0, [sp, #120]
    7954:	ldr	x0, [sp, #88]
    7958:	ldr	w0, [x0, #12]
    795c:	lsr	w0, w0, #21
    7960:	mov	w0, w0
    7964:	and	x0, x0, #0x1
    7968:	cmp	x0, #0x0
    796c:	b.eq	7988 <XS_Encode__XS_cat_decode+0x1b0>  // b.none
    7970:	ldr	x0, [sp, #88]
    7974:	mov	x1, x0
    7978:	ldr	x0, [sp, #56]
    797c:	bl	2af0 <Perl_mg_get@plt>
    7980:	cmp	w0, #0x0
    7984:	nop
    7988:	ldr	x0, [sp, #120]
    798c:	ldr	w0, [x0, #12]
    7990:	lsr	w0, w0, #21
    7994:	mov	w0, w0
    7998:	and	x0, x0, #0x1
    799c:	cmp	x0, #0x0
    79a0:	b.eq	79b8 <XS_Encode__XS_cat_decode+0x1e0>  // b.none
    79a4:	ldr	x1, [sp, #120]
    79a8:	ldr	x0, [sp, #56]
    79ac:	bl	2af0 <Perl_mg_get@plt>
    79b0:	cmp	w0, #0x0
    79b4:	nop
    79b8:	ldr	x0, [sp, #120]
    79bc:	ldr	w0, [x0, #12]
    79c0:	and	w0, w0, #0x800
    79c4:	cmp	w0, #0x0
    79c8:	b.ne	7a20 <XS_Encode__XS_cat_decode+0x248>  // b.any
    79cc:	ldr	x0, [sp, #120]
    79d0:	ldr	w0, [x0, #12]
    79d4:	and	w0, w0, #0xff00
    79d8:	cmp	w0, #0x0
    79dc:	b.eq	7a18 <XS_Encode__XS_cat_decode+0x240>  // b.none
    79e0:	ldr	x0, [sp, #120]
    79e4:	ldr	w0, [x0, #12]
    79e8:	and	w0, w0, #0x100
    79ec:	cmp	w0, #0x0
    79f0:	b.eq	7a04 <XS_Encode__XS_cat_decode+0x22c>  // b.none
    79f4:	ldr	x0, [sp, #120]
    79f8:	ldr	x0, [x0]
    79fc:	ldr	x0, [x0, #32]
    7a00:	b	7a24 <XS_Encode__XS_cat_decode+0x24c>
    7a04:	mov	w2, #0x0                   	// #0
    7a08:	ldr	x1, [sp, #120]
    7a0c:	ldr	x0, [sp, #56]
    7a10:	bl	2870 <Perl_sv_2iv_flags@plt>
    7a14:	b	7a24 <XS_Encode__XS_cat_decode+0x24c>
    7a18:	mov	x0, #0x0                   	// #0
    7a1c:	b	7a24 <XS_Encode__XS_cat_decode+0x24c>
    7a20:	mov	x0, #0x108                 	// #264
    7a24:	str	x0, [sp, #176]
    7a28:	ldr	x0, [sp, #120]
    7a2c:	ldr	w0, [x0, #12]
    7a30:	and	w0, w0, #0x800
    7a34:	cmp	w0, #0x0
    7a38:	b.ne	7a48 <XS_Encode__XS_cat_decode+0x270>  // b.any
    7a3c:	ldr	x0, [sp, #56]
    7a40:	add	x0, x0, #0x150
    7a44:	b	7a4c <XS_Encode__XS_cat_decode+0x274>
    7a48:	ldr	x0, [sp, #120]
    7a4c:	str	x0, [sp, #184]
    7a50:	ldr	x0, [sp, #176]
    7a54:	cmp	x0, #0x0
    7a58:	b.eq	7a74 <XS_Encode__XS_cat_decode+0x29c>  // b.none
    7a5c:	ldr	x0, [sp, #176]
    7a60:	and	x0, x0, #0x8
    7a64:	cmp	x0, #0x0
    7a68:	b.ne	7a74 <XS_Encode__XS_cat_decode+0x29c>  // b.any
    7a6c:	mov	w0, #0x1                   	// #1
    7a70:	b	7a78 <XS_Encode__XS_cat_decode+0x2a0>
    7a74:	mov	w0, #0x0                   	// #0
    7a78:	strb	w0, [sp, #74]
    7a7c:	ldrb	w0, [sp, #74]
    7a80:	and	w0, w0, #0x1
    7a84:	strb	w0, [sp, #74]
    7a88:	ldr	x0, [sp, #144]
    7a8c:	ldr	x0, [x0, #16]
    7a90:	ldr	w1, [x0, #12]
    7a94:	mov	w0, #0x100                 	// #256
    7a98:	movk	w0, #0x20, lsl #16
    7a9c:	and	w0, w1, w0
    7aa0:	cmp	w0, #0x100
    7aa4:	b.ne	7abc <XS_Encode__XS_cat_decode+0x2e4>  // b.any
    7aa8:	ldr	x0, [sp, #144]
    7aac:	ldr	x0, [x0, #16]
    7ab0:	ldr	x0, [x0]
    7ab4:	ldr	x0, [x0, #32]
    7ab8:	b	7ad4 <XS_Encode__XS_cat_decode+0x2fc>
    7abc:	ldr	x0, [sp, #144]
    7ac0:	ldr	x0, [x0, #16]
    7ac4:	mov	w2, #0x2                   	// #2
    7ac8:	mov	x1, x0
    7acc:	ldr	x0, [sp, #56]
    7ad0:	bl	2870 <Perl_sv_2iv_flags@plt>
    7ad4:	str	x0, [sp, #192]
    7ad8:	ldr	x0, [sp, #160]
    7adc:	ldr	w1, [x0, #12]
    7ae0:	mov	w0, #0x100                 	// #256
    7ae4:	movk	w0, #0x20, lsl #16
    7ae8:	and	w0, w1, w0
    7aec:	cmp	w0, #0x100
    7af0:	b.ne	7b04 <XS_Encode__XS_cat_decode+0x32c>  // b.any
    7af4:	ldr	x0, [sp, #160]
    7af8:	ldr	x0, [x0]
    7afc:	ldr	x0, [x0, #32]
    7b00:	b	7b14 <XS_Encode__XS_cat_decode+0x33c>
    7b04:	mov	w2, #0x2                   	// #2
    7b08:	ldr	x1, [sp, #160]
    7b0c:	ldr	x0, [sp, #56]
    7b10:	bl	2870 <Perl_sv_2iv_flags@plt>
    7b14:	str	x0, [sp, #96]
    7b18:	ldr	x0, [sp, #88]
    7b1c:	ldr	w0, [x0, #12]
    7b20:	and	w0, w0, #0xff00
    7b24:	cmp	w0, #0x0
    7b28:	b.ne	7b80 <XS_Encode__XS_cat_decode+0x3a8>  // b.any
    7b2c:	ldr	x0, [sp, #56]
    7b30:	ldr	x1, [x0, #24]
    7b34:	ldrsw	x0, [sp, #80]
    7b38:	lsl	x0, x0, #3
    7b3c:	add	x0, x1, x0
    7b40:	ldr	x1, [sp, #56]
    7b44:	add	x1, x1, #0x168
    7b48:	str	x1, [x0]
    7b4c:	mov	x0, #0x1                   	// #1
    7b50:	str	x0, [sp, #224]
    7b54:	ldr	x0, [sp, #56]
    7b58:	ldr	x1, [x0, #24]
    7b5c:	ldrsw	x2, [sp, #80]
    7b60:	ldr	x0, [sp, #224]
    7b64:	add	x0, x2, x0
    7b68:	lsl	x0, x0, #3
    7b6c:	sub	x0, x0, #0x8
    7b70:	add	x1, x1, x0
    7b74:	ldr	x0, [sp, #56]
    7b78:	str	x1, [x0]
    7b7c:	b	7d84 <XS_Encode__XS_cat_decode+0x5ac>
    7b80:	ldrb	w0, [sp, #74]
    7b84:	cmp	w0, #0x0
    7b88:	b.eq	7be4 <XS_Encode__XS_cat_decode+0x40c>  // b.none
    7b8c:	ldr	x0, [sp, #88]
    7b90:	ldr	w1, [x0, #12]
    7b94:	mov	w0, #0x8f00                	// #36608
    7b98:	movk	w0, #0x19a1, lsl #16
    7b9c:	and	w0, w1, w0
    7ba0:	cmp	w0, #0x400
    7ba4:	b.ne	7bc4 <XS_Encode__XS_cat_decode+0x3ec>  // b.any
    7ba8:	ldr	x0, [sp, #88]
    7bac:	ldr	x0, [x0]
    7bb0:	ldr	x0, [x0, #16]
    7bb4:	str	x0, [sp, #112]
    7bb8:	ldr	x0, [sp, #88]
    7bbc:	ldr	x0, [x0, #16]
    7bc0:	b	7c38 <XS_Encode__XS_cat_decode+0x460>
    7bc4:	ldr	x0, [sp, #88]
    7bc8:	add	x1, sp, #0x70
    7bcc:	mov	w3, #0x0                   	// #0
    7bd0:	mov	x2, x1
    7bd4:	mov	x1, x0
    7bd8:	ldr	x0, [sp, #56]
    7bdc:	bl	28d0 <Perl_sv_pvn_force_flags@plt>
    7be0:	b	7c38 <XS_Encode__XS_cat_decode+0x460>
    7be4:	ldr	x0, [sp, #88]
    7be8:	ldr	w1, [x0, #12]
    7bec:	mov	w0, #0x400                 	// #1024
    7bf0:	movk	w0, #0x20, lsl #16
    7bf4:	and	w0, w1, w0
    7bf8:	cmp	w0, #0x400
    7bfc:	b.ne	7c1c <XS_Encode__XS_cat_decode+0x444>  // b.any
    7c00:	ldr	x0, [sp, #88]
    7c04:	ldr	x0, [x0]
    7c08:	ldr	x0, [x0, #16]
    7c0c:	str	x0, [sp, #112]
    7c10:	ldr	x0, [sp, #88]
    7c14:	ldr	x0, [x0, #16]
    7c18:	b	7c38 <XS_Encode__XS_cat_decode+0x460>
    7c1c:	ldr	x0, [sp, #88]
    7c20:	add	x1, sp, #0x70
    7c24:	mov	w3, #0x0                   	// #0
    7c28:	mov	x2, x1
    7c2c:	mov	x1, x0
    7c30:	ldr	x0, [sp, #56]
    7c34:	bl	29d0 <Perl_sv_2pv_flags@plt>
    7c38:	str	x0, [sp, #104]
    7c3c:	ldr	x0, [sp, #88]
    7c40:	ldr	w0, [x0, #12]
    7c44:	and	w0, w0, #0x20000000
    7c48:	cmp	w0, #0x0
    7c4c:	b.eq	7c74 <XS_Encode__XS_cat_decode+0x49c>  // b.none
    7c50:	add	x2, sp, #0x70
    7c54:	add	x1, sp, #0x68
    7c58:	add	x0, sp, #0x58
    7c5c:	ldrb	w4, [sp, #74]
    7c60:	mov	x3, x2
    7c64:	mov	x2, x1
    7c68:	mov	x1, x0
    7c6c:	ldr	x0, [sp, #56]
    7c70:	bl	4074 <utf8_safe_downgrade>
    7c74:	ldr	x0, [sp, #192]
    7c78:	ldr	x1, [x0]
    7c7c:	ldr	x2, [sp, #88]
    7c80:	ldr	x3, [sp, #104]
    7c84:	ldr	x4, [sp, #112]
    7c88:	add	x5, sp, #0x60
    7c8c:	ldr	x0, [sp, #184]
    7c90:	str	x0, [sp, #16]
    7c94:	add	x0, sp, #0x4c
    7c98:	str	x0, [sp, #8]
    7c9c:	ldr	x0, [sp, #168]
    7ca0:	str	x0, [sp]
    7ca4:	mov	x7, x5
    7ca8:	ldr	x6, [sp, #176]
    7cac:	mov	x5, x4
    7cb0:	mov	x4, x3
    7cb4:	mov	x3, x2
    7cb8:	mov	x2, x1
    7cbc:	ldr	x1, [sp, #192]
    7cc0:	ldr	x0, [sp, #56]
    7cc4:	bl	46f8 <encode_method>
    7cc8:	str	x0, [sp, #200]
    7ccc:	mov	w3, #0x2                   	// #2
    7cd0:	ldr	x2, [sp, #200]
    7cd4:	ldr	x1, [sp, #152]
    7cd8:	ldr	x0, [sp, #56]
    7cdc:	bl	2b30 <Perl_sv_catsv_flags@plt>
    7ce0:	ldr	x0, [sp, #200]
    7ce4:	str	x0, [sp, #208]
    7ce8:	ldr	x0, [sp, #208]
    7cec:	mov	x1, x0
    7cf0:	ldr	x0, [sp, #56]
    7cf4:	bl	2e8c <S_SvREFCNT_dec>
    7cf8:	ldr	x1, [sp, #96]
    7cfc:	ldr	x0, [sp, #160]
    7d00:	ldr	x0, [x0]
    7d04:	str	x1, [x0, #32]
    7d08:	ldr	w0, [sp, #76]
    7d0c:	cmp	w0, #0x5
    7d10:	cset	w0, eq  // eq = none
    7d14:	strb	w0, [sp, #75]
    7d18:	ldrb	w0, [sp, #75]
    7d1c:	cmp	w0, #0x0
    7d20:	b.eq	7d30 <XS_Encode__XS_cat_decode+0x558>  // b.none
    7d24:	ldr	x0, [sp, #56]
    7d28:	add	x0, x0, #0x138
    7d2c:	b	7d38 <XS_Encode__XS_cat_decode+0x560>
    7d30:	ldr	x0, [sp, #56]
    7d34:	add	x0, x0, #0x168
    7d38:	ldr	x1, [sp, #56]
    7d3c:	ldr	x2, [x1, #24]
    7d40:	ldrsw	x1, [sp, #80]
    7d44:	lsl	x1, x1, #3
    7d48:	add	x1, x2, x1
    7d4c:	str	x0, [x1]
    7d50:	mov	x0, #0x1                   	// #1
    7d54:	str	x0, [sp, #216]
    7d58:	ldr	x0, [sp, #56]
    7d5c:	ldr	x1, [x0, #24]
    7d60:	ldrsw	x2, [sp, #80]
    7d64:	ldr	x0, [sp, #216]
    7d68:	add	x0, x2, x0
    7d6c:	lsl	x0, x0, #3
    7d70:	sub	x0, x0, #0x8
    7d74:	add	x1, x1, x0
    7d78:	ldr	x0, [sp, #56]
    7d7c:	str	x1, [x0]
    7d80:	nop
    7d84:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    7d88:	ldr	x0, [x0, #3992]
    7d8c:	ldr	x1, [sp, #232]
    7d90:	ldr	x0, [x0]
    7d94:	eor	x0, x1, x0
    7d98:	cmp	x0, #0x0
    7d9c:	b.eq	7da4 <XS_Encode__XS_cat_decode+0x5cc>  // b.none
    7da0:	bl	29f0 <__stack_chk_fail@plt>
    7da4:	ldp	x29, x30, [sp, #32]
    7da8:	add	sp, sp, #0xf0
    7dac:	ret

0000000000007db0 <XS_Encode__XS_decode>:
    7db0:	sub	sp, sp, #0xc0
    7db4:	stp	x29, x30, [sp, #32]
    7db8:	add	x29, sp, #0x20
    7dbc:	str	x0, [sp, #56]
    7dc0:	str	x1, [sp, #48]
    7dc4:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    7dc8:	ldr	x0, [x0, #3992]
    7dcc:	ldr	x1, [x0]
    7dd0:	str	x1, [sp, #184]
    7dd4:	mov	x1, #0x0                   	// #0
    7dd8:	ldr	x0, [sp, #56]
    7ddc:	ldr	x0, [x0]
    7de0:	str	x0, [sp, #112]
    7de4:	ldr	x0, [sp, #56]
    7de8:	bl	2e20 <S_POPMARK>
    7dec:	str	w0, [sp, #72]
    7df0:	ldr	x0, [sp, #56]
    7df4:	ldr	x1, [x0, #24]
    7df8:	ldr	w0, [sp, #72]
    7dfc:	add	w2, w0, #0x1
    7e00:	str	w2, [sp, #72]
    7e04:	sxtw	x0, w0
    7e08:	lsl	x0, x0, #3
    7e0c:	add	x0, x1, x0
    7e10:	str	x0, [sp, #120]
    7e14:	ldr	x1, [sp, #112]
    7e18:	ldr	x0, [sp, #120]
    7e1c:	sub	x0, x1, x0
    7e20:	asr	x0, x0, #3
    7e24:	str	w0, [sp, #76]
    7e28:	ldr	w0, [sp, #76]
    7e2c:	cmp	w0, #0x1
    7e30:	b.le	7e40 <XS_Encode__XS_decode+0x90>
    7e34:	ldr	w0, [sp, #76]
    7e38:	cmp	w0, #0x3
    7e3c:	b.le	7e50 <XS_Encode__XS_decode+0xa0>
    7e40:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    7e44:	add	x1, x0, #0xfd8
    7e48:	ldr	x0, [sp, #48]
    7e4c:	bl	2a10 <Perl_croak_xs_usage@plt>
    7e50:	ldr	x0, [sp, #56]
    7e54:	ldr	x1, [x0, #24]
    7e58:	ldrsw	x0, [sp, #72]
    7e5c:	lsl	x0, x0, #3
    7e60:	add	x0, x1, x0
    7e64:	ldr	x0, [x0]
    7e68:	str	x0, [sp, #128]
    7e6c:	ldr	x0, [sp, #56]
    7e70:	ldr	x1, [x0, #24]
    7e74:	ldrsw	x0, [sp, #72]
    7e78:	add	x0, x0, #0x1
    7e7c:	lsl	x0, x0, #3
    7e80:	add	x0, x1, x0
    7e84:	ldr	x0, [x0]
    7e88:	str	x0, [sp, #80]
    7e8c:	ldr	w0, [sp, #76]
    7e90:	cmp	w0, #0x2
    7e94:	b.gt	7ea8 <XS_Encode__XS_decode+0xf8>
    7e98:	ldr	x0, [sp, #56]
    7e9c:	add	x0, x0, #0x168
    7ea0:	str	x0, [sp, #104]
    7ea4:	b	7ec8 <XS_Encode__XS_decode+0x118>
    7ea8:	ldr	x0, [sp, #56]
    7eac:	ldr	x1, [x0, #24]
    7eb0:	ldrsw	x0, [sp, #72]
    7eb4:	add	x0, x0, #0x2
    7eb8:	lsl	x0, x0, #3
    7ebc:	add	x0, x1, x0
    7ec0:	ldr	x0, [x0]
    7ec4:	str	x0, [sp, #104]
    7ec8:	ldr	x0, [sp, #80]
    7ecc:	ldr	w0, [x0, #12]
    7ed0:	lsr	w0, w0, #21
    7ed4:	mov	w0, w0
    7ed8:	and	x0, x0, #0x1
    7edc:	cmp	x0, #0x0
    7ee0:	b.eq	7efc <XS_Encode__XS_decode+0x14c>  // b.none
    7ee4:	ldr	x0, [sp, #80]
    7ee8:	mov	x1, x0
    7eec:	ldr	x0, [sp, #56]
    7ef0:	bl	2af0 <Perl_mg_get@plt>
    7ef4:	cmp	w0, #0x0
    7ef8:	nop
    7efc:	ldr	x0, [sp, #104]
    7f00:	ldr	w0, [x0, #12]
    7f04:	lsr	w0, w0, #21
    7f08:	mov	w0, w0
    7f0c:	and	x0, x0, #0x1
    7f10:	cmp	x0, #0x0
    7f14:	b.eq	7f2c <XS_Encode__XS_decode+0x17c>  // b.none
    7f18:	ldr	x1, [sp, #104]
    7f1c:	ldr	x0, [sp, #56]
    7f20:	bl	2af0 <Perl_mg_get@plt>
    7f24:	cmp	w0, #0x0
    7f28:	nop
    7f2c:	ldr	x0, [sp, #104]
    7f30:	ldr	w0, [x0, #12]
    7f34:	and	w0, w0, #0x800
    7f38:	cmp	w0, #0x0
    7f3c:	b.ne	7f94 <XS_Encode__XS_decode+0x1e4>  // b.any
    7f40:	ldr	x0, [sp, #104]
    7f44:	ldr	w0, [x0, #12]
    7f48:	and	w0, w0, #0xff00
    7f4c:	cmp	w0, #0x0
    7f50:	b.eq	7f8c <XS_Encode__XS_decode+0x1dc>  // b.none
    7f54:	ldr	x0, [sp, #104]
    7f58:	ldr	w0, [x0, #12]
    7f5c:	and	w0, w0, #0x100
    7f60:	cmp	w0, #0x0
    7f64:	b.eq	7f78 <XS_Encode__XS_decode+0x1c8>  // b.none
    7f68:	ldr	x0, [sp, #104]
    7f6c:	ldr	x0, [x0]
    7f70:	ldr	x0, [x0, #32]
    7f74:	b	7f98 <XS_Encode__XS_decode+0x1e8>
    7f78:	mov	w2, #0x0                   	// #0
    7f7c:	ldr	x1, [sp, #104]
    7f80:	ldr	x0, [sp, #56]
    7f84:	bl	2870 <Perl_sv_2iv_flags@plt>
    7f88:	b	7f98 <XS_Encode__XS_decode+0x1e8>
    7f8c:	mov	x0, #0x0                   	// #0
    7f90:	b	7f98 <XS_Encode__XS_decode+0x1e8>
    7f94:	mov	x0, #0x108                 	// #264
    7f98:	str	x0, [sp, #136]
    7f9c:	ldr	x0, [sp, #104]
    7fa0:	ldr	w0, [x0, #12]
    7fa4:	and	w0, w0, #0x800
    7fa8:	cmp	w0, #0x0
    7fac:	b.ne	7fbc <XS_Encode__XS_decode+0x20c>  // b.any
    7fb0:	ldr	x0, [sp, #56]
    7fb4:	add	x0, x0, #0x150
    7fb8:	b	7fc0 <XS_Encode__XS_decode+0x210>
    7fbc:	ldr	x0, [sp, #104]
    7fc0:	str	x0, [sp, #144]
    7fc4:	ldr	x0, [sp, #136]
    7fc8:	cmp	x0, #0x0
    7fcc:	b.eq	7fe8 <XS_Encode__XS_decode+0x238>  // b.none
    7fd0:	ldr	x0, [sp, #136]
    7fd4:	and	x0, x0, #0x8
    7fd8:	cmp	x0, #0x0
    7fdc:	b.ne	7fe8 <XS_Encode__XS_decode+0x238>  // b.any
    7fe0:	mov	w0, #0x1                   	// #1
    7fe4:	b	7fec <XS_Encode__XS_decode+0x23c>
    7fe8:	mov	w0, #0x0                   	// #0
    7fec:	strb	w0, [sp, #71]
    7ff0:	ldrb	w0, [sp, #71]
    7ff4:	and	w0, w0, #0x1
    7ff8:	strb	w0, [sp, #71]
    7ffc:	ldr	x0, [sp, #128]
    8000:	ldr	x0, [x0, #16]
    8004:	ldr	w1, [x0, #12]
    8008:	mov	w0, #0x100                 	// #256
    800c:	movk	w0, #0x20, lsl #16
    8010:	and	w0, w1, w0
    8014:	cmp	w0, #0x100
    8018:	b.ne	8030 <XS_Encode__XS_decode+0x280>  // b.any
    801c:	ldr	x0, [sp, #128]
    8020:	ldr	x0, [x0, #16]
    8024:	ldr	x0, [x0]
    8028:	ldr	x0, [x0, #32]
    802c:	b	8048 <XS_Encode__XS_decode+0x298>
    8030:	ldr	x0, [sp, #128]
    8034:	ldr	x0, [x0, #16]
    8038:	mov	w2, #0x2                   	// #2
    803c:	mov	x1, x0
    8040:	ldr	x0, [sp, #56]
    8044:	bl	2870 <Perl_sv_2iv_flags@plt>
    8048:	str	x0, [sp, #152]
    804c:	ldr	x0, [sp, #80]
    8050:	ldr	w0, [x0, #12]
    8054:	and	w0, w0, #0xff00
    8058:	cmp	w0, #0x0
    805c:	b.ne	80b4 <XS_Encode__XS_decode+0x304>  // b.any
    8060:	ldr	x0, [sp, #56]
    8064:	ldr	x1, [x0, #24]
    8068:	ldrsw	x0, [sp, #72]
    806c:	lsl	x0, x0, #3
    8070:	add	x0, x1, x0
    8074:	ldr	x1, [sp, #56]
    8078:	add	x1, x1, #0x150
    807c:	str	x1, [x0]
    8080:	mov	x0, #0x1                   	// #1
    8084:	str	x0, [sp, #176]
    8088:	ldr	x0, [sp, #56]
    808c:	ldr	x1, [x0, #24]
    8090:	ldrsw	x2, [sp, #72]
    8094:	ldr	x0, [sp, #176]
    8098:	add	x0, x2, x0
    809c:	lsl	x0, x0, #3
    80a0:	sub	x0, x0, #0x8
    80a4:	add	x1, x1, x0
    80a8:	ldr	x0, [sp, #56]
    80ac:	str	x1, [x0]
    80b0:	b	8268 <XS_Encode__XS_decode+0x4b8>
    80b4:	ldrb	w0, [sp, #71]
    80b8:	cmp	w0, #0x0
    80bc:	b.eq	8118 <XS_Encode__XS_decode+0x368>  // b.none
    80c0:	ldr	x0, [sp, #80]
    80c4:	ldr	w1, [x0, #12]
    80c8:	mov	w0, #0x8f00                	// #36608
    80cc:	movk	w0, #0x19a1, lsl #16
    80d0:	and	w0, w1, w0
    80d4:	cmp	w0, #0x400
    80d8:	b.ne	80f8 <XS_Encode__XS_decode+0x348>  // b.any
    80dc:	ldr	x0, [sp, #80]
    80e0:	ldr	x0, [x0]
    80e4:	ldr	x0, [x0, #16]
    80e8:	str	x0, [sp, #96]
    80ec:	ldr	x0, [sp, #80]
    80f0:	ldr	x0, [x0, #16]
    80f4:	b	816c <XS_Encode__XS_decode+0x3bc>
    80f8:	ldr	x0, [sp, #80]
    80fc:	add	x1, sp, #0x60
    8100:	mov	w3, #0x0                   	// #0
    8104:	mov	x2, x1
    8108:	mov	x1, x0
    810c:	ldr	x0, [sp, #56]
    8110:	bl	28d0 <Perl_sv_pvn_force_flags@plt>
    8114:	b	816c <XS_Encode__XS_decode+0x3bc>
    8118:	ldr	x0, [sp, #80]
    811c:	ldr	w1, [x0, #12]
    8120:	mov	w0, #0x400                 	// #1024
    8124:	movk	w0, #0x20, lsl #16
    8128:	and	w0, w1, w0
    812c:	cmp	w0, #0x400
    8130:	b.ne	8150 <XS_Encode__XS_decode+0x3a0>  // b.any
    8134:	ldr	x0, [sp, #80]
    8138:	ldr	x0, [x0]
    813c:	ldr	x0, [x0, #16]
    8140:	str	x0, [sp, #96]
    8144:	ldr	x0, [sp, #80]
    8148:	ldr	x0, [x0, #16]
    814c:	b	816c <XS_Encode__XS_decode+0x3bc>
    8150:	ldr	x0, [sp, #80]
    8154:	add	x1, sp, #0x60
    8158:	mov	w3, #0x0                   	// #0
    815c:	mov	x2, x1
    8160:	mov	x1, x0
    8164:	ldr	x0, [sp, #56]
    8168:	bl	29d0 <Perl_sv_2pv_flags@plt>
    816c:	str	x0, [sp, #88]
    8170:	ldr	x0, [sp, #80]
    8174:	ldr	w0, [x0, #12]
    8178:	and	w0, w0, #0x20000000
    817c:	cmp	w0, #0x0
    8180:	b.eq	81a8 <XS_Encode__XS_decode+0x3f8>  // b.none
    8184:	add	x2, sp, #0x60
    8188:	add	x1, sp, #0x58
    818c:	add	x0, sp, #0x50
    8190:	ldrb	w4, [sp, #71]
    8194:	mov	x3, x2
    8198:	mov	x2, x1
    819c:	mov	x1, x0
    81a0:	ldr	x0, [sp, #56]
    81a4:	bl	4074 <utf8_safe_downgrade>
    81a8:	ldr	x0, [sp, #152]
    81ac:	ldr	x1, [x0]
    81b0:	ldr	x2, [sp, #80]
    81b4:	ldr	x3, [sp, #88]
    81b8:	ldr	x4, [sp, #96]
    81bc:	ldr	x0, [sp, #144]
    81c0:	str	x0, [sp, #16]
    81c4:	str	xzr, [sp, #8]
    81c8:	str	xzr, [sp]
    81cc:	mov	x7, #0x0                   	// #0
    81d0:	ldr	x6, [sp, #136]
    81d4:	mov	x5, x4
    81d8:	mov	x4, x3
    81dc:	mov	x3, x2
    81e0:	mov	x2, x1
    81e4:	ldr	x1, [sp, #152]
    81e8:	ldr	x0, [sp, #56]
    81ec:	bl	46f8 <encode_method>
    81f0:	str	x0, [sp, #160]
    81f4:	ldr	x0, [sp, #160]
    81f8:	ldr	w0, [x0, #12]
    81fc:	orr	w1, w0, #0x20000000
    8200:	ldr	x0, [sp, #160]
    8204:	str	w1, [x0, #12]
    8208:	ldr	x1, [sp, #160]
    820c:	ldr	x0, [sp, #56]
    8210:	bl	2ae0 <Perl_sv_2mortal@plt>
    8214:	str	x0, [sp, #160]
    8218:	ldr	x0, [sp, #56]
    821c:	ldr	x1, [x0, #24]
    8220:	ldrsw	x0, [sp, #72]
    8224:	lsl	x0, x0, #3
    8228:	add	x0, x1, x0
    822c:	ldr	x1, [sp, #160]
    8230:	str	x1, [x0]
    8234:	mov	x0, #0x1                   	// #1
    8238:	str	x0, [sp, #168]
    823c:	ldr	x0, [sp, #56]
    8240:	ldr	x1, [x0, #24]
    8244:	ldrsw	x2, [sp, #72]
    8248:	ldr	x0, [sp, #168]
    824c:	add	x0, x2, x0
    8250:	lsl	x0, x0, #3
    8254:	sub	x0, x0, #0x8
    8258:	add	x1, x1, x0
    825c:	ldr	x0, [sp, #56]
    8260:	str	x1, [x0]
    8264:	nop
    8268:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    826c:	ldr	x0, [x0, #3992]
    8270:	ldr	x1, [sp, #184]
    8274:	ldr	x0, [x0]
    8278:	eor	x0, x1, x0
    827c:	cmp	x0, #0x0
    8280:	b.eq	8288 <XS_Encode__XS_decode+0x4d8>  // b.none
    8284:	bl	29f0 <__stack_chk_fail@plt>
    8288:	ldp	x29, x30, [sp, #32]
    828c:	add	sp, sp, #0xc0
    8290:	ret

0000000000008294 <XS_Encode__XS_encode>:
    8294:	sub	sp, sp, #0xc0
    8298:	stp	x29, x30, [sp, #32]
    829c:	add	x29, sp, #0x20
    82a0:	str	x0, [sp, #56]
    82a4:	str	x1, [sp, #48]
    82a8:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    82ac:	ldr	x0, [x0, #3992]
    82b0:	ldr	x1, [x0]
    82b4:	str	x1, [sp, #184]
    82b8:	mov	x1, #0x0                   	// #0
    82bc:	ldr	x0, [sp, #56]
    82c0:	ldr	x0, [x0]
    82c4:	str	x0, [sp, #112]
    82c8:	ldr	x0, [sp, #56]
    82cc:	bl	2e20 <S_POPMARK>
    82d0:	str	w0, [sp, #72]
    82d4:	ldr	x0, [sp, #56]
    82d8:	ldr	x1, [x0, #24]
    82dc:	ldr	w0, [sp, #72]
    82e0:	add	w2, w0, #0x1
    82e4:	str	w2, [sp, #72]
    82e8:	sxtw	x0, w0
    82ec:	lsl	x0, x0, #3
    82f0:	add	x0, x1, x0
    82f4:	str	x0, [sp, #120]
    82f8:	ldr	x1, [sp, #112]
    82fc:	ldr	x0, [sp, #120]
    8300:	sub	x0, x1, x0
    8304:	asr	x0, x0, #3
    8308:	str	w0, [sp, #76]
    830c:	ldr	w0, [sp, #76]
    8310:	cmp	w0, #0x1
    8314:	b.le	8324 <XS_Encode__XS_encode+0x90>
    8318:	ldr	w0, [sp, #76]
    831c:	cmp	w0, #0x3
    8320:	b.le	8334 <XS_Encode__XS_encode+0xa0>
    8324:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    8328:	add	x1, x0, #0xfd8
    832c:	ldr	x0, [sp, #48]
    8330:	bl	2a10 <Perl_croak_xs_usage@plt>
    8334:	ldr	x0, [sp, #56]
    8338:	ldr	x1, [x0, #24]
    833c:	ldrsw	x0, [sp, #72]
    8340:	lsl	x0, x0, #3
    8344:	add	x0, x1, x0
    8348:	ldr	x0, [x0]
    834c:	str	x0, [sp, #128]
    8350:	ldr	x0, [sp, #56]
    8354:	ldr	x1, [x0, #24]
    8358:	ldrsw	x0, [sp, #72]
    835c:	add	x0, x0, #0x1
    8360:	lsl	x0, x0, #3
    8364:	add	x0, x1, x0
    8368:	ldr	x0, [x0]
    836c:	str	x0, [sp, #80]
    8370:	ldr	w0, [sp, #76]
    8374:	cmp	w0, #0x2
    8378:	b.gt	838c <XS_Encode__XS_encode+0xf8>
    837c:	ldr	x0, [sp, #56]
    8380:	add	x0, x0, #0x168
    8384:	str	x0, [sp, #104]
    8388:	b	83ac <XS_Encode__XS_encode+0x118>
    838c:	ldr	x0, [sp, #56]
    8390:	ldr	x1, [x0, #24]
    8394:	ldrsw	x0, [sp, #72]
    8398:	add	x0, x0, #0x2
    839c:	lsl	x0, x0, #3
    83a0:	add	x0, x1, x0
    83a4:	ldr	x0, [x0]
    83a8:	str	x0, [sp, #104]
    83ac:	ldr	x0, [sp, #80]
    83b0:	ldr	w0, [x0, #12]
    83b4:	lsr	w0, w0, #21
    83b8:	mov	w0, w0
    83bc:	and	x0, x0, #0x1
    83c0:	cmp	x0, #0x0
    83c4:	b.eq	83e0 <XS_Encode__XS_encode+0x14c>  // b.none
    83c8:	ldr	x0, [sp, #80]
    83cc:	mov	x1, x0
    83d0:	ldr	x0, [sp, #56]
    83d4:	bl	2af0 <Perl_mg_get@plt>
    83d8:	cmp	w0, #0x0
    83dc:	nop
    83e0:	ldr	x0, [sp, #104]
    83e4:	ldr	w0, [x0, #12]
    83e8:	lsr	w0, w0, #21
    83ec:	mov	w0, w0
    83f0:	and	x0, x0, #0x1
    83f4:	cmp	x0, #0x0
    83f8:	b.eq	8410 <XS_Encode__XS_encode+0x17c>  // b.none
    83fc:	ldr	x1, [sp, #104]
    8400:	ldr	x0, [sp, #56]
    8404:	bl	2af0 <Perl_mg_get@plt>
    8408:	cmp	w0, #0x0
    840c:	nop
    8410:	ldr	x0, [sp, #104]
    8414:	ldr	w0, [x0, #12]
    8418:	and	w0, w0, #0x800
    841c:	cmp	w0, #0x0
    8420:	b.ne	8478 <XS_Encode__XS_encode+0x1e4>  // b.any
    8424:	ldr	x0, [sp, #104]
    8428:	ldr	w0, [x0, #12]
    842c:	and	w0, w0, #0xff00
    8430:	cmp	w0, #0x0
    8434:	b.eq	8470 <XS_Encode__XS_encode+0x1dc>  // b.none
    8438:	ldr	x0, [sp, #104]
    843c:	ldr	w0, [x0, #12]
    8440:	and	w0, w0, #0x100
    8444:	cmp	w0, #0x0
    8448:	b.eq	845c <XS_Encode__XS_encode+0x1c8>  // b.none
    844c:	ldr	x0, [sp, #104]
    8450:	ldr	x0, [x0]
    8454:	ldr	x0, [x0, #32]
    8458:	b	847c <XS_Encode__XS_encode+0x1e8>
    845c:	mov	w2, #0x0                   	// #0
    8460:	ldr	x1, [sp, #104]
    8464:	ldr	x0, [sp, #56]
    8468:	bl	2870 <Perl_sv_2iv_flags@plt>
    846c:	b	847c <XS_Encode__XS_encode+0x1e8>
    8470:	mov	x0, #0x0                   	// #0
    8474:	b	847c <XS_Encode__XS_encode+0x1e8>
    8478:	mov	x0, #0x108                 	// #264
    847c:	str	x0, [sp, #136]
    8480:	ldr	x0, [sp, #104]
    8484:	ldr	w0, [x0, #12]
    8488:	and	w0, w0, #0x800
    848c:	cmp	w0, #0x0
    8490:	b.ne	84a0 <XS_Encode__XS_encode+0x20c>  // b.any
    8494:	ldr	x0, [sp, #56]
    8498:	add	x0, x0, #0x150
    849c:	b	84a4 <XS_Encode__XS_encode+0x210>
    84a0:	ldr	x0, [sp, #104]
    84a4:	str	x0, [sp, #144]
    84a8:	ldr	x0, [sp, #136]
    84ac:	cmp	x0, #0x0
    84b0:	b.eq	84cc <XS_Encode__XS_encode+0x238>  // b.none
    84b4:	ldr	x0, [sp, #136]
    84b8:	and	x0, x0, #0x8
    84bc:	cmp	x0, #0x0
    84c0:	b.ne	84cc <XS_Encode__XS_encode+0x238>  // b.any
    84c4:	mov	w0, #0x1                   	// #1
    84c8:	b	84d0 <XS_Encode__XS_encode+0x23c>
    84cc:	mov	w0, #0x0                   	// #0
    84d0:	strb	w0, [sp, #71]
    84d4:	ldrb	w0, [sp, #71]
    84d8:	and	w0, w0, #0x1
    84dc:	strb	w0, [sp, #71]
    84e0:	ldr	x0, [sp, #128]
    84e4:	ldr	x0, [x0, #16]
    84e8:	ldr	w1, [x0, #12]
    84ec:	mov	w0, #0x100                 	// #256
    84f0:	movk	w0, #0x20, lsl #16
    84f4:	and	w0, w1, w0
    84f8:	cmp	w0, #0x100
    84fc:	b.ne	8514 <XS_Encode__XS_encode+0x280>  // b.any
    8500:	ldr	x0, [sp, #128]
    8504:	ldr	x0, [x0, #16]
    8508:	ldr	x0, [x0]
    850c:	ldr	x0, [x0, #32]
    8510:	b	852c <XS_Encode__XS_encode+0x298>
    8514:	ldr	x0, [sp, #128]
    8518:	ldr	x0, [x0, #16]
    851c:	mov	w2, #0x2                   	// #2
    8520:	mov	x1, x0
    8524:	ldr	x0, [sp, #56]
    8528:	bl	2870 <Perl_sv_2iv_flags@plt>
    852c:	str	x0, [sp, #152]
    8530:	ldr	x0, [sp, #80]
    8534:	ldr	w0, [x0, #12]
    8538:	and	w0, w0, #0xff00
    853c:	cmp	w0, #0x0
    8540:	b.ne	8598 <XS_Encode__XS_encode+0x304>  // b.any
    8544:	ldr	x0, [sp, #56]
    8548:	ldr	x1, [x0, #24]
    854c:	ldrsw	x0, [sp, #72]
    8550:	lsl	x0, x0, #3
    8554:	add	x0, x1, x0
    8558:	ldr	x1, [sp, #56]
    855c:	add	x1, x1, #0x150
    8560:	str	x1, [x0]
    8564:	mov	x0, #0x1                   	// #1
    8568:	str	x0, [sp, #176]
    856c:	ldr	x0, [sp, #56]
    8570:	ldr	x1, [x0, #24]
    8574:	ldrsw	x2, [sp, #72]
    8578:	ldr	x0, [sp, #176]
    857c:	add	x0, x2, x0
    8580:	lsl	x0, x0, #3
    8584:	sub	x0, x0, #0x8
    8588:	add	x1, x1, x0
    858c:	ldr	x0, [sp, #56]
    8590:	str	x1, [x0]
    8594:	b	8738 <XS_Encode__XS_encode+0x4a4>
    8598:	ldrb	w0, [sp, #71]
    859c:	cmp	w0, #0x0
    85a0:	b.eq	85fc <XS_Encode__XS_encode+0x368>  // b.none
    85a4:	ldr	x0, [sp, #80]
    85a8:	ldr	w1, [x0, #12]
    85ac:	mov	w0, #0x8f00                	// #36608
    85b0:	movk	w0, #0x19a1, lsl #16
    85b4:	and	w0, w1, w0
    85b8:	cmp	w0, #0x400
    85bc:	b.ne	85dc <XS_Encode__XS_encode+0x348>  // b.any
    85c0:	ldr	x0, [sp, #80]
    85c4:	ldr	x0, [x0]
    85c8:	ldr	x0, [x0, #16]
    85cc:	str	x0, [sp, #96]
    85d0:	ldr	x0, [sp, #80]
    85d4:	ldr	x0, [x0, #16]
    85d8:	b	8650 <XS_Encode__XS_encode+0x3bc>
    85dc:	ldr	x0, [sp, #80]
    85e0:	add	x1, sp, #0x60
    85e4:	mov	w3, #0x0                   	// #0
    85e8:	mov	x2, x1
    85ec:	mov	x1, x0
    85f0:	ldr	x0, [sp, #56]
    85f4:	bl	28d0 <Perl_sv_pvn_force_flags@plt>
    85f8:	b	8650 <XS_Encode__XS_encode+0x3bc>
    85fc:	ldr	x0, [sp, #80]
    8600:	ldr	w1, [x0, #12]
    8604:	mov	w0, #0x400                 	// #1024
    8608:	movk	w0, #0x20, lsl #16
    860c:	and	w0, w1, w0
    8610:	cmp	w0, #0x400
    8614:	b.ne	8634 <XS_Encode__XS_encode+0x3a0>  // b.any
    8618:	ldr	x0, [sp, #80]
    861c:	ldr	x0, [x0]
    8620:	ldr	x0, [x0, #16]
    8624:	str	x0, [sp, #96]
    8628:	ldr	x0, [sp, #80]
    862c:	ldr	x0, [x0, #16]
    8630:	b	8650 <XS_Encode__XS_encode+0x3bc>
    8634:	ldr	x0, [sp, #80]
    8638:	add	x1, sp, #0x60
    863c:	mov	w3, #0x0                   	// #0
    8640:	mov	x2, x1
    8644:	mov	x1, x0
    8648:	ldr	x0, [sp, #56]
    864c:	bl	29d0 <Perl_sv_2pv_flags@plt>
    8650:	str	x0, [sp, #88]
    8654:	ldr	x0, [sp, #80]
    8658:	ldr	w0, [x0, #12]
    865c:	and	w0, w0, #0x20000000
    8660:	cmp	w0, #0x0
    8664:	b.ne	868c <XS_Encode__XS_encode+0x3f8>  // b.any
    8668:	add	x2, sp, #0x60
    866c:	add	x1, sp, #0x58
    8670:	add	x0, sp, #0x50
    8674:	ldrb	w4, [sp, #71]
    8678:	mov	x3, x2
    867c:	mov	x2, x1
    8680:	mov	x1, x0
    8684:	ldr	x0, [sp, #56]
    8688:	bl	41e8 <utf8_safe_upgrade>
    868c:	ldr	x0, [sp, #152]
    8690:	ldr	x1, [x0, #8]
    8694:	ldr	x2, [sp, #80]
    8698:	ldr	x3, [sp, #88]
    869c:	ldr	x4, [sp, #96]
    86a0:	ldr	x0, [sp, #144]
    86a4:	str	x0, [sp, #16]
    86a8:	str	xzr, [sp, #8]
    86ac:	str	xzr, [sp]
    86b0:	mov	x7, #0x0                   	// #0
    86b4:	ldr	x6, [sp, #136]
    86b8:	mov	x5, x4
    86bc:	mov	x4, x3
    86c0:	mov	x3, x2
    86c4:	mov	x2, x1
    86c8:	ldr	x1, [sp, #152]
    86cc:	ldr	x0, [sp, #56]
    86d0:	bl	46f8 <encode_method>
    86d4:	str	x0, [sp, #160]
    86d8:	ldr	x1, [sp, #160]
    86dc:	ldr	x0, [sp, #56]
    86e0:	bl	2ae0 <Perl_sv_2mortal@plt>
    86e4:	str	x0, [sp, #160]
    86e8:	ldr	x0, [sp, #56]
    86ec:	ldr	x1, [x0, #24]
    86f0:	ldrsw	x0, [sp, #72]
    86f4:	lsl	x0, x0, #3
    86f8:	add	x0, x1, x0
    86fc:	ldr	x1, [sp, #160]
    8700:	str	x1, [x0]
    8704:	mov	x0, #0x1                   	// #1
    8708:	str	x0, [sp, #168]
    870c:	ldr	x0, [sp, #56]
    8710:	ldr	x1, [x0, #24]
    8714:	ldrsw	x2, [sp, #72]
    8718:	ldr	x0, [sp, #168]
    871c:	add	x0, x2, x0
    8720:	lsl	x0, x0, #3
    8724:	sub	x0, x0, #0x8
    8728:	add	x1, x1, x0
    872c:	ldr	x0, [sp, #56]
    8730:	str	x1, [x0]
    8734:	nop
    8738:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    873c:	ldr	x0, [x0, #3992]
    8740:	ldr	x1, [sp, #184]
    8744:	ldr	x0, [x0]
    8748:	eor	x0, x1, x0
    874c:	cmp	x0, #0x0
    8750:	b.eq	8758 <XS_Encode__XS_encode+0x4c4>  // b.none
    8754:	bl	29f0 <__stack_chk_fail@plt>
    8758:	ldp	x29, x30, [sp, #32]
    875c:	add	sp, sp, #0xc0
    8760:	ret

0000000000008764 <XS_Encode__XS_needs_lines>:
    8764:	stp	x29, x30, [sp, #-80]!
    8768:	mov	x29, sp
    876c:	str	x0, [sp, #24]
    8770:	str	x1, [sp, #16]
    8774:	ldr	x0, [sp, #24]
    8778:	ldr	x0, [x0]
    877c:	str	x0, [sp, #48]
    8780:	ldr	x0, [sp, #24]
    8784:	bl	2e20 <S_POPMARK>
    8788:	str	w0, [sp, #40]
    878c:	ldr	x0, [sp, #24]
    8790:	ldr	x1, [x0, #24]
    8794:	ldr	w0, [sp, #40]
    8798:	add	w2, w0, #0x1
    879c:	str	w2, [sp, #40]
    87a0:	sxtw	x0, w0
    87a4:	lsl	x0, x0, #3
    87a8:	add	x0, x1, x0
    87ac:	str	x0, [sp, #56]
    87b0:	ldr	x1, [sp, #48]
    87b4:	ldr	x0, [sp, #56]
    87b8:	sub	x0, x1, x0
    87bc:	asr	x0, x0, #3
    87c0:	str	w0, [sp, #44]
    87c4:	ldr	w0, [sp, #44]
    87c8:	cmp	w0, #0x1
    87cc:	b.eq	87e0 <XS_Encode__XS_needs_lines+0x7c>  // b.none
    87d0:	adrp	x0, b000 <super_cp_format+0x218>
    87d4:	add	x1, x0, #0x0
    87d8:	ldr	x0, [sp, #16]
    87dc:	bl	2a10 <Perl_croak_xs_usage@plt>
    87e0:	ldr	x0, [sp, #24]
    87e4:	ldr	x1, [x0, #24]
    87e8:	ldrsw	x0, [sp, #40]
    87ec:	lsl	x0, x0, #3
    87f0:	add	x0, x1, x0
    87f4:	ldr	x0, [x0]
    87f8:	str	x0, [sp, #64]
    87fc:	strb	wzr, [sp, #39]
    8800:	ldrb	w0, [sp, #39]
    8804:	cmp	w0, #0x0
    8808:	b.eq	8818 <XS_Encode__XS_needs_lines+0xb4>  // b.none
    880c:	ldr	x0, [sp, #24]
    8810:	add	x0, x0, #0x138
    8814:	b	8820 <XS_Encode__XS_needs_lines+0xbc>
    8818:	ldr	x0, [sp, #24]
    881c:	add	x0, x0, #0x168
    8820:	ldr	x1, [sp, #24]
    8824:	ldr	x2, [x1, #24]
    8828:	ldrsw	x1, [sp, #40]
    882c:	lsl	x1, x1, #3
    8830:	add	x1, x2, x1
    8834:	str	x0, [x1]
    8838:	mov	x0, #0x1                   	// #1
    883c:	str	x0, [sp, #72]
    8840:	ldr	x0, [sp, #24]
    8844:	ldr	x1, [x0, #24]
    8848:	ldrsw	x2, [sp, #40]
    884c:	ldr	x0, [sp, #72]
    8850:	add	x0, x2, x0
    8854:	lsl	x0, x0, #3
    8858:	sub	x0, x0, #0x8
    885c:	add	x1, x1, x0
    8860:	ldr	x0, [sp, #24]
    8864:	str	x1, [x0]
    8868:	nop
    886c:	ldp	x29, x30, [sp], #80
    8870:	ret

0000000000008874 <XS_Encode__XS_perlio_ok>:
    8874:	stp	x29, x30, [sp, #-96]!
    8878:	mov	x29, sp
    887c:	str	x0, [sp, #24]
    8880:	str	x1, [sp, #16]
    8884:	ldr	x0, [sp, #24]
    8888:	ldr	x0, [x0]
    888c:	str	x0, [sp, #56]
    8890:	ldr	x0, [sp, #24]
    8894:	bl	2e20 <S_POPMARK>
    8898:	str	w0, [sp, #48]
    889c:	ldr	x0, [sp, #24]
    88a0:	ldr	x1, [x0, #24]
    88a4:	ldr	w0, [sp, #48]
    88a8:	add	w2, w0, #0x1
    88ac:	str	w2, [sp, #48]
    88b0:	sxtw	x0, w0
    88b4:	lsl	x0, x0, #3
    88b8:	add	x0, x1, x0
    88bc:	str	x0, [sp, #64]
    88c0:	ldr	x1, [sp, #56]
    88c4:	ldr	x0, [sp, #64]
    88c8:	sub	x0, x1, x0
    88cc:	asr	x0, x0, #3
    88d0:	str	w0, [sp, #52]
    88d4:	ldr	w0, [sp, #52]
    88d8:	cmp	w0, #0x1
    88dc:	b.eq	88f0 <XS_Encode__XS_perlio_ok+0x7c>  // b.none
    88e0:	adrp	x0, b000 <super_cp_format+0x218>
    88e4:	add	x1, x0, #0x0
    88e8:	ldr	x0, [sp, #16]
    88ec:	bl	2a10 <Perl_croak_xs_usage@plt>
    88f0:	ldr	x0, [sp, #24]
    88f4:	ldr	x1, [x0, #24]
    88f8:	ldrsw	x0, [sp, #48]
    88fc:	lsl	x0, x0, #3
    8900:	add	x0, x1, x0
    8904:	ldr	x0, [x0]
    8908:	str	x0, [sp, #72]
    890c:	mov	w2, #0x0                   	// #0
    8910:	adrp	x0, b000 <super_cp_format+0x218>
    8914:	add	x1, x0, #0x38
    8918:	ldr	x0, [sp, #24]
    891c:	bl	2b00 <Perl_eval_pv@plt>
    8920:	str	x0, [sp, #80]
    8924:	ldr	x0, [sp, #80]
    8928:	cmp	x0, #0x0
    892c:	cset	w0, ne  // ne = any
    8930:	and	w0, w0, #0xff
    8934:	and	x0, x0, #0xff
    8938:	cmp	x0, #0x0
    893c:	b.eq	8b08 <XS_Encode__XS_perlio_ok+0x294>  // b.none
    8940:	ldr	x0, [sp, #80]
    8944:	ldr	w0, [x0, #12]
    8948:	lsr	w0, w0, #21
    894c:	mov	w0, w0
    8950:	and	x0, x0, #0x1
    8954:	cmp	x0, #0x0
    8958:	b.eq	8970 <XS_Encode__XS_perlio_ok+0xfc>  // b.none
    895c:	ldr	x1, [sp, #80]
    8960:	ldr	x0, [sp, #24]
    8964:	bl	2af0 <Perl_mg_get@plt>
    8968:	cmp	w0, #0x0
    896c:	nop
    8970:	ldr	x0, [sp, #24]
    8974:	add	x0, x0, #0x138
    8978:	ldr	x1, [sp, #80]
    897c:	sub	x0, x1, x0
    8980:	asr	x1, x0, #3
    8984:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    8988:	movk	x0, #0xaaab
    898c:	mul	x0, x1, x0
    8990:	cmp	x0, #0x3
    8994:	b.hi	89b4 <XS_Encode__XS_perlio_ok+0x140>  // b.pmore
    8998:	ldr	x0, [sp, #24]
    899c:	add	x0, x0, #0x138
    89a0:	ldr	x1, [sp, #80]
    89a4:	cmp	x1, x0
    89a8:	cset	w0, eq  // eq = none
    89ac:	and	w0, w0, #0xff
    89b0:	b	8af8 <XS_Encode__XS_perlio_ok+0x284>
    89b4:	ldr	x0, [sp, #80]
    89b8:	ldr	w0, [x0, #12]
    89bc:	and	w0, w0, #0xff00
    89c0:	cmp	w0, #0x0
    89c4:	b.eq	8af4 <XS_Encode__XS_perlio_ok+0x280>  // b.none
    89c8:	ldr	x0, [sp, #80]
    89cc:	ldr	w0, [x0, #12]
    89d0:	and	w0, w0, #0x400
    89d4:	cmp	w0, #0x0
    89d8:	b.eq	8a44 <XS_Encode__XS_perlio_ok+0x1d0>  // b.none
    89dc:	ldr	x0, [sp, #80]
    89e0:	ldr	x0, [x0]
    89e4:	cmp	x0, #0x0
    89e8:	b.eq	8a30 <XS_Encode__XS_perlio_ok+0x1bc>  // b.none
    89ec:	ldr	x0, [sp, #80]
    89f0:	ldr	x0, [x0]
    89f4:	ldr	x0, [x0, #16]
    89f8:	cmp	x0, #0x1
    89fc:	b.hi	8a28 <XS_Encode__XS_perlio_ok+0x1b4>  // b.pmore
    8a00:	ldr	x0, [sp, #80]
    8a04:	ldr	x0, [x0]
    8a08:	ldr	x0, [x0, #16]
    8a0c:	cmp	x0, #0x0
    8a10:	b.eq	8a30 <XS_Encode__XS_perlio_ok+0x1bc>  // b.none
    8a14:	ldr	x0, [sp, #80]
    8a18:	ldr	x0, [x0, #16]
    8a1c:	ldrb	w0, [x0]
    8a20:	cmp	w0, #0x30
    8a24:	b.eq	8a30 <XS_Encode__XS_perlio_ok+0x1bc>  // b.none
    8a28:	mov	w0, #0x1                   	// #1
    8a2c:	b	8a34 <XS_Encode__XS_perlio_ok+0x1c0>
    8a30:	mov	w0, #0x0                   	// #0
    8a34:	cmp	w0, #0x0
    8a38:	cset	w0, ne  // ne = any
    8a3c:	and	w0, w0, #0xff
    8a40:	b	8af8 <XS_Encode__XS_perlio_ok+0x284>
    8a44:	ldr	x0, [sp, #80]
    8a48:	ldr	w0, [x0, #12]
    8a4c:	and	w0, w0, #0x100
    8a50:	cmp	w0, #0x0
    8a54:	b.eq	8a74 <XS_Encode__XS_perlio_ok+0x200>  // b.none
    8a58:	ldr	x0, [sp, #80]
    8a5c:	ldr	x0, [x0]
    8a60:	ldr	x0, [x0, #32]
    8a64:	cmp	x0, #0x0
    8a68:	cset	w0, ne  // ne = any
    8a6c:	and	w0, w0, #0xff
    8a70:	b	8af8 <XS_Encode__XS_perlio_ok+0x284>
    8a74:	ldr	x0, [sp, #80]
    8a78:	ldr	w0, [x0, #12]
    8a7c:	and	w0, w0, #0x800
    8a80:	cmp	w0, #0x0
    8a84:	b.eq	8ac0 <XS_Encode__XS_perlio_ok+0x24c>  // b.none
    8a88:	ldr	x0, [sp, #80]
    8a8c:	ldr	x0, [x0, #16]
    8a90:	ldr	w0, [x0, #12]
    8a94:	and	w0, w0, #0x100000
    8a98:	cmp	w0, #0x0
    8a9c:	b.eq	8adc <XS_Encode__XS_perlio_ok+0x268>  // b.none
    8aa0:	ldr	x0, [sp, #80]
    8aa4:	ldr	x0, [x0, #16]
    8aa8:	ldr	x0, [x0]
    8aac:	ldr	x0, [x0]
    8ab0:	ldr	w0, [x0, #12]
    8ab4:	and	w0, w0, #0x10000000
    8ab8:	cmp	w0, #0x0
    8abc:	b.eq	8adc <XS_Encode__XS_perlio_ok+0x268>  // b.none
    8ac0:	mov	w2, #0x0                   	// #0
    8ac4:	ldr	x1, [sp, #80]
    8ac8:	ldr	x0, [sp, #24]
    8acc:	bl	2880 <Perl_sv_2bool_flags@plt>
    8ad0:	and	w0, w0, #0xff
    8ad4:	cmp	w0, #0x0
    8ad8:	b.eq	8ae4 <XS_Encode__XS_perlio_ok+0x270>  // b.none
    8adc:	mov	w0, #0x1                   	// #1
    8ae0:	b	8ae8 <XS_Encode__XS_perlio_ok+0x274>
    8ae4:	mov	w0, #0x0                   	// #0
    8ae8:	and	w0, w0, #0x1
    8aec:	and	w0, w0, #0xff
    8af0:	b	8af8 <XS_Encode__XS_perlio_ok+0x284>
    8af4:	mov	w0, #0x0                   	// #0
    8af8:	cmp	w0, #0x0
    8afc:	b.eq	8b08 <XS_Encode__XS_perlio_ok+0x294>  // b.none
    8b00:	mov	w0, #0x1                   	// #1
    8b04:	b	8b0c <XS_Encode__XS_perlio_ok+0x298>
    8b08:	mov	w0, #0x0                   	// #0
    8b0c:	strb	w0, [sp, #47]
    8b10:	ldrb	w0, [sp, #47]
    8b14:	and	w0, w0, #0x1
    8b18:	strb	w0, [sp, #47]
    8b1c:	ldrb	w0, [sp, #47]
    8b20:	cmp	w0, #0x0
    8b24:	b.eq	8b34 <XS_Encode__XS_perlio_ok+0x2c0>  // b.none
    8b28:	ldr	x0, [sp, #24]
    8b2c:	add	x0, x0, #0x138
    8b30:	b	8b3c <XS_Encode__XS_perlio_ok+0x2c8>
    8b34:	ldr	x0, [sp, #24]
    8b38:	add	x0, x0, #0x168
    8b3c:	ldr	x1, [sp, #24]
    8b40:	ldr	x2, [x1, #24]
    8b44:	ldrsw	x1, [sp, #48]
    8b48:	lsl	x1, x1, #3
    8b4c:	add	x1, x2, x1
    8b50:	str	x0, [x1]
    8b54:	mov	x0, #0x1                   	// #1
    8b58:	str	x0, [sp, #88]
    8b5c:	ldr	x0, [sp, #24]
    8b60:	ldr	x1, [x0, #24]
    8b64:	ldrsw	x2, [sp, #48]
    8b68:	ldr	x0, [sp, #88]
    8b6c:	add	x0, x2, x0
    8b70:	lsl	x0, x0, #3
    8b74:	sub	x0, x0, #0x8
    8b78:	add	x1, x1, x0
    8b7c:	ldr	x0, [sp, #24]
    8b80:	str	x1, [x0]
    8b84:	nop
    8b88:	ldp	x29, x30, [sp], #96
    8b8c:	ret

0000000000008b90 <XS_Encode__XS_mime_name>:
    8b90:	stp	x29, x30, [sp, #-112]!
    8b94:	mov	x29, sp
    8b98:	str	x19, [sp, #16]
    8b9c:	str	x0, [sp, #40]
    8ba0:	str	x1, [sp, #32]
    8ba4:	ldr	x0, [sp, #40]
    8ba8:	ldr	x0, [x0]
    8bac:	str	x0, [sp, #56]
    8bb0:	ldr	x0, [sp, #40]
    8bb4:	bl	2e20 <S_POPMARK>
    8bb8:	str	w0, [sp, #48]
    8bbc:	ldr	x0, [sp, #40]
    8bc0:	ldr	x1, [x0, #24]
    8bc4:	ldr	w0, [sp, #48]
    8bc8:	add	w2, w0, #0x1
    8bcc:	str	w2, [sp, #48]
    8bd0:	sxtw	x0, w0
    8bd4:	lsl	x0, x0, #3
    8bd8:	add	x0, x1, x0
    8bdc:	str	x0, [sp, #72]
    8be0:	ldr	x1, [sp, #56]
    8be4:	ldr	x0, [sp, #72]
    8be8:	sub	x0, x1, x0
    8bec:	asr	x0, x0, #3
    8bf0:	str	w0, [sp, #52]
    8bf4:	ldr	w0, [sp, #52]
    8bf8:	cmp	w0, #0x1
    8bfc:	b.eq	8c10 <XS_Encode__XS_mime_name+0x80>  // b.none
    8c00:	adrp	x0, b000 <super_cp_format+0x218>
    8c04:	add	x1, x0, #0x0
    8c08:	ldr	x0, [sp, #32]
    8c0c:	bl	2a10 <Perl_croak_xs_usage@plt>
    8c10:	ldr	x0, [sp, #40]
    8c14:	ldr	x1, [x0, #24]
    8c18:	ldrsw	x0, [sp, #48]
    8c1c:	lsl	x0, x0, #3
    8c20:	add	x0, x1, x0
    8c24:	ldr	x0, [x0]
    8c28:	str	x0, [sp, #80]
    8c2c:	ldr	x0, [sp, #80]
    8c30:	ldr	x0, [x0, #16]
    8c34:	ldr	w1, [x0, #12]
    8c38:	mov	w0, #0x100                 	// #256
    8c3c:	movk	w0, #0x20, lsl #16
    8c40:	and	w0, w1, w0
    8c44:	cmp	w0, #0x100
    8c48:	b.ne	8c60 <XS_Encode__XS_mime_name+0xd0>  // b.any
    8c4c:	ldr	x0, [sp, #80]
    8c50:	ldr	x0, [x0, #16]
    8c54:	ldr	x0, [x0]
    8c58:	ldr	x0, [x0, #32]
    8c5c:	b	8c78 <XS_Encode__XS_mime_name+0xe8>
    8c60:	ldr	x0, [sp, #80]
    8c64:	ldr	x0, [x0, #16]
    8c68:	mov	w2, #0x2                   	// #2
    8c6c:	mov	x1, x0
    8c70:	ldr	x0, [sp, #40]
    8c74:	bl	2870 <Perl_sv_2iv_flags@plt>
    8c78:	str	x0, [sp, #88]
    8c7c:	ldr	x0, [sp, #40]
    8c80:	bl	2c20 <Perl_push_scope@plt>
    8c84:	ldr	x0, [sp, #40]
    8c88:	bl	2a20 <Perl_savetmps@plt>
    8c8c:	ldr	x0, [sp, #40]
    8c90:	ldr	x0, [x0, #120]
    8c94:	add	x1, x0, #0x4
    8c98:	ldr	x0, [sp, #40]
    8c9c:	str	x1, [x0, #120]
    8ca0:	ldr	x0, [sp, #40]
    8ca4:	ldr	x0, [x0, #120]
    8ca8:	str	x0, [sp, #64]
    8cac:	ldr	x0, [sp, #40]
    8cb0:	ldr	x0, [x0, #128]
    8cb4:	ldr	x1, [sp, #64]
    8cb8:	cmp	x1, x0
    8cbc:	cset	w0, eq  // eq = none
    8cc0:	and	w0, w0, #0xff
    8cc4:	and	x0, x0, #0xff
    8cc8:	cmp	x0, #0x0
    8ccc:	b.eq	8cdc <XS_Encode__XS_mime_name+0x14c>  // b.none
    8cd0:	ldr	x0, [sp, #40]
    8cd4:	bl	2b80 <Perl_markstack_grow@plt>
    8cd8:	str	x0, [sp, #64]
    8cdc:	ldr	x0, [sp, #40]
    8ce0:	ldr	x0, [x0, #24]
    8ce4:	ldr	x1, [sp, #56]
    8ce8:	sub	x0, x1, x0
    8cec:	asr	x0, x0, #3
    8cf0:	mov	w1, w0
    8cf4:	ldr	x0, [sp, #64]
    8cf8:	str	w1, [x0]
    8cfc:	ldr	x0, [sp, #40]
    8d00:	ldr	x1, [x0, #32]
    8d04:	ldr	x0, [sp, #56]
    8d08:	sub	x0, x1, x0
    8d0c:	cmp	x0, #0x0
    8d10:	cset	w0, le
    8d14:	and	w0, w0, #0xff
    8d18:	and	x0, x0, #0xff
    8d1c:	cmp	x0, #0x0
    8d20:	b.eq	8d3c <XS_Encode__XS_mime_name+0x1ac>  // b.none
    8d24:	mov	x3, #0x1                   	// #1
    8d28:	ldr	x2, [sp, #56]
    8d2c:	ldr	x1, [sp, #56]
    8d30:	ldr	x0, [sp, #40]
    8d34:	bl	28f0 <Perl_stack_grow@plt>
    8d38:	str	x0, [sp, #56]
    8d3c:	ldr	x0, [sp, #88]
    8d40:	ldr	x19, [x0, #32]
    8d44:	ldr	x0, [sp, #88]
    8d48:	ldr	x0, [x0, #32]
    8d4c:	bl	2890 <strlen@plt>
    8d50:	mov	x2, x0
    8d54:	mov	x1, x19
    8d58:	ldr	x0, [sp, #40]
    8d5c:	bl	2c50 <Perl_newSVpvn@plt>
    8d60:	mov	x1, x0
    8d64:	ldr	x0, [sp, #56]
    8d68:	add	x0, x0, #0x8
    8d6c:	str	x0, [sp, #56]
    8d70:	ldr	x0, [sp, #40]
    8d74:	bl	2ae0 <Perl_sv_2mortal@plt>
    8d78:	mov	x1, x0
    8d7c:	ldr	x0, [sp, #56]
    8d80:	str	x1, [x0]
    8d84:	ldr	x0, [sp, #40]
    8d88:	ldr	x1, [sp, #56]
    8d8c:	str	x1, [x0]
    8d90:	mov	w2, #0x2                   	// #2
    8d94:	adrp	x0, b000 <super_cp_format+0x218>
    8d98:	add	x1, x0, #0x58
    8d9c:	ldr	x0, [sp, #40]
    8da0:	bl	2b20 <Perl_call_pv@plt>
    8da4:	ldr	x0, [sp, #40]
    8da8:	ldr	x0, [x0]
    8dac:	str	x0, [sp, #56]
    8db0:	ldr	x0, [sp, #56]
    8db4:	sub	x1, x0, #0x8
    8db8:	str	x1, [sp, #56]
    8dbc:	ldr	x0, [x0]
    8dc0:	mov	w2, #0x12                  	// #18
    8dc4:	mov	x1, x0
    8dc8:	ldr	x0, [sp, #40]
    8dcc:	bl	2c40 <Perl_newSVsv_flags@plt>
    8dd0:	str	x0, [sp, #96]
    8dd4:	ldr	x0, [sp, #40]
    8dd8:	ldr	x1, [sp, #56]
    8ddc:	str	x1, [x0]
    8de0:	ldr	x0, [sp, #40]
    8de4:	ldr	x1, [x0, #80]
    8de8:	ldr	x0, [sp, #40]
    8dec:	ldr	x0, [x0, #88]
    8df0:	cmp	x1, x0
    8df4:	b.le	8e00 <XS_Encode__XS_mime_name+0x270>
    8df8:	ldr	x0, [sp, #40]
    8dfc:	bl	2b70 <Perl_free_tmps@plt>
    8e00:	ldr	x0, [sp, #40]
    8e04:	bl	2940 <Perl_pop_scope@plt>
    8e08:	ldr	x1, [sp, #96]
    8e0c:	ldr	x0, [sp, #40]
    8e10:	bl	2ae0 <Perl_sv_2mortal@plt>
    8e14:	str	x0, [sp, #96]
    8e18:	ldr	x0, [sp, #40]
    8e1c:	ldr	x1, [x0, #24]
    8e20:	ldrsw	x0, [sp, #48]
    8e24:	lsl	x0, x0, #3
    8e28:	add	x0, x1, x0
    8e2c:	ldr	x1, [sp, #96]
    8e30:	str	x1, [x0]
    8e34:	mov	x0, #0x1                   	// #1
    8e38:	str	x0, [sp, #104]
    8e3c:	ldr	x0, [sp, #40]
    8e40:	ldr	x1, [x0, #24]
    8e44:	ldrsw	x2, [sp, #48]
    8e48:	ldr	x0, [sp, #104]
    8e4c:	add	x0, x2, x0
    8e50:	lsl	x0, x0, #3
    8e54:	sub	x0, x0, #0x8
    8e58:	add	x1, x1, x0
    8e5c:	ldr	x0, [sp, #40]
    8e60:	str	x1, [x0]
    8e64:	nop
    8e68:	ldr	x19, [sp, #16]
    8e6c:	ldp	x29, x30, [sp], #112
    8e70:	ret

0000000000008e74 <XS_Encode_is_utf8>:
    8e74:	stp	x29, x30, [sp, #-112]!
    8e78:	mov	x29, sp
    8e7c:	str	x0, [sp, #24]
    8e80:	str	x1, [sp, #16]
    8e84:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    8e88:	ldr	x0, [x0, #3992]
    8e8c:	ldr	x1, [x0]
    8e90:	str	x1, [sp, #104]
    8e94:	mov	x1, #0x0                   	// #0
    8e98:	ldr	x0, [sp, #24]
    8e9c:	ldr	x0, [x0]
    8ea0:	str	x0, [sp, #64]
    8ea4:	ldr	x0, [sp, #24]
    8ea8:	bl	2e20 <S_POPMARK>
    8eac:	str	w0, [sp, #48]
    8eb0:	ldr	x0, [sp, #24]
    8eb4:	ldr	x1, [x0, #24]
    8eb8:	ldr	w0, [sp, #48]
    8ebc:	add	w2, w0, #0x1
    8ec0:	str	w2, [sp, #48]
    8ec4:	sxtw	x0, w0
    8ec8:	lsl	x0, x0, #3
    8ecc:	add	x0, x1, x0
    8ed0:	str	x0, [sp, #72]
    8ed4:	ldr	x1, [sp, #64]
    8ed8:	ldr	x0, [sp, #72]
    8edc:	sub	x0, x1, x0
    8ee0:	asr	x0, x0, #3
    8ee4:	str	w0, [sp, #52]
    8ee8:	ldr	w0, [sp, #52]
    8eec:	cmp	w0, #0x0
    8ef0:	b.le	8f00 <XS_Encode_is_utf8+0x8c>
    8ef4:	ldr	w0, [sp, #52]
    8ef8:	cmp	w0, #0x2
    8efc:	b.le	8f10 <XS_Encode_is_utf8+0x9c>
    8f00:	adrp	x0, b000 <super_cp_format+0x218>
    8f04:	add	x1, x0, #0x80
    8f08:	ldr	x0, [sp, #16]
    8f0c:	bl	2a10 <Perl_croak_xs_usage@plt>
    8f10:	ldr	x0, [sp, #24]
    8f14:	ldr	x1, [x0, #24]
    8f18:	ldrsw	x0, [sp, #48]
    8f1c:	lsl	x0, x0, #3
    8f20:	add	x0, x1, x0
    8f24:	ldr	x0, [x0]
    8f28:	str	x0, [sp, #80]
    8f2c:	ldr	w0, [sp, #52]
    8f30:	cmp	w0, #0x1
    8f34:	b.gt	8f40 <XS_Encode_is_utf8+0xcc>
    8f38:	str	wzr, [sp, #44]
    8f3c:	b	8fcc <XS_Encode_is_utf8+0x158>
    8f40:	ldr	x0, [sp, #24]
    8f44:	ldr	x1, [x0, #24]
    8f48:	ldrsw	x0, [sp, #48]
    8f4c:	add	x0, x0, #0x1
    8f50:	lsl	x0, x0, #3
    8f54:	add	x0, x1, x0
    8f58:	ldr	x0, [x0]
    8f5c:	ldr	w1, [x0, #12]
    8f60:	mov	w0, #0x100                 	// #256
    8f64:	movk	w0, #0x20, lsl #16
    8f68:	and	w0, w1, w0
    8f6c:	cmp	w0, #0x100
    8f70:	b.ne	8f9c <XS_Encode_is_utf8+0x128>  // b.any
    8f74:	ldr	x0, [sp, #24]
    8f78:	ldr	x1, [x0, #24]
    8f7c:	ldrsw	x0, [sp, #48]
    8f80:	add	x0, x0, #0x1
    8f84:	lsl	x0, x0, #3
    8f88:	add	x0, x1, x0
    8f8c:	ldr	x0, [x0]
    8f90:	ldr	x0, [x0]
    8f94:	ldr	x0, [x0, #32]
    8f98:	b	8fc8 <XS_Encode_is_utf8+0x154>
    8f9c:	ldr	x0, [sp, #24]
    8fa0:	ldr	x1, [x0, #24]
    8fa4:	ldrsw	x0, [sp, #48]
    8fa8:	add	x0, x0, #0x1
    8fac:	lsl	x0, x0, #3
    8fb0:	add	x0, x1, x0
    8fb4:	ldr	x0, [x0]
    8fb8:	mov	w2, #0x2                   	// #2
    8fbc:	mov	x1, x0
    8fc0:	ldr	x0, [sp, #24]
    8fc4:	bl	2870 <Perl_sv_2iv_flags@plt>
    8fc8:	str	w0, [sp, #44]
    8fcc:	ldr	x0, [sp, #80]
    8fd0:	ldr	w0, [x0, #12]
    8fd4:	lsr	w0, w0, #21
    8fd8:	mov	w0, w0
    8fdc:	and	x0, x0, #0x1
    8fe0:	cmp	x0, #0x0
    8fe4:	b.eq	8ffc <XS_Encode_is_utf8+0x188>  // b.none
    8fe8:	ldr	x1, [sp, #80]
    8fec:	ldr	x0, [sp, #24]
    8ff0:	bl	2af0 <Perl_mg_get@plt>
    8ff4:	cmp	w0, #0x0
    8ff8:	nop
    8ffc:	ldr	x0, [sp, #80]
    9000:	ldr	w0, [x0, #12]
    9004:	and	w0, w0, #0xff00
    9008:	cmp	w0, #0x0
    900c:	b.eq	9064 <XS_Encode_is_utf8+0x1f0>  // b.none
    9010:	ldr	x0, [sp, #80]
    9014:	ldr	w1, [x0, #12]
    9018:	mov	w0, #0x400                 	// #1024
    901c:	movk	w0, #0x20, lsl #16
    9020:	and	w0, w1, w0
    9024:	cmp	w0, #0x400
    9028:	b.ne	9048 <XS_Encode_is_utf8+0x1d4>  // b.any
    902c:	ldr	x0, [sp, #80]
    9030:	ldr	x0, [x0]
    9034:	ldr	x0, [x0, #16]
    9038:	str	x0, [sp, #56]
    903c:	ldr	x0, [sp, #80]
    9040:	ldr	x0, [x0, #16]
    9044:	b	9068 <XS_Encode_is_utf8+0x1f4>
    9048:	add	x0, sp, #0x38
    904c:	mov	w3, #0x0                   	// #0
    9050:	mov	x2, x0
    9054:	ldr	x1, [sp, #80]
    9058:	ldr	x0, [sp, #24]
    905c:	bl	29d0 <Perl_sv_2pv_flags@plt>
    9060:	b	9068 <XS_Encode_is_utf8+0x1f4>
    9064:	mov	x0, #0x0                   	// #0
    9068:	str	x0, [sp, #88]
    906c:	ldr	x0, [sp, #80]
    9070:	ldr	w0, [x0, #12]
    9074:	lsr	w0, w0, #29
    9078:	and	w0, w0, #0x1
    907c:	cmp	w0, #0x0
    9080:	cset	w0, ne  // ne = any
    9084:	strb	w0, [sp, #43]
    9088:	ldrb	w0, [sp, #43]
    908c:	cmp	w0, #0x0
    9090:	b.eq	90dc <XS_Encode_is_utf8+0x268>  // b.none
    9094:	ldr	w0, [sp, #44]
    9098:	cmp	w0, #0x0
    909c:	b.eq	90dc <XS_Encode_is_utf8+0x268>  // b.none
    90a0:	ldr	x0, [sp, #88]
    90a4:	cmp	x0, #0x0
    90a8:	b.eq	90d8 <XS_Encode_is_utf8+0x264>  // b.none
    90ac:	ldr	x0, [sp, #56]
    90b0:	mov	x3, #0x0                   	// #0
    90b4:	mov	x2, #0x0                   	// #0
    90b8:	mov	x1, x0
    90bc:	ldr	x0, [sp, #88]
    90c0:	bl	3168 <Perl_is_utf8_string_loclen>
    90c4:	and	w0, w0, #0xff
    90c8:	eor	w0, w0, #0x1
    90cc:	and	w0, w0, #0xff
    90d0:	cmp	w0, #0x0
    90d4:	b.eq	90dc <XS_Encode_is_utf8+0x268>  // b.none
    90d8:	strb	wzr, [sp, #43]
    90dc:	ldrb	w0, [sp, #43]
    90e0:	cmp	w0, #0x0
    90e4:	b.eq	90f4 <XS_Encode_is_utf8+0x280>  // b.none
    90e8:	ldr	x0, [sp, #24]
    90ec:	add	x0, x0, #0x138
    90f0:	b	90fc <XS_Encode_is_utf8+0x288>
    90f4:	ldr	x0, [sp, #24]
    90f8:	add	x0, x0, #0x168
    90fc:	ldr	x1, [sp, #24]
    9100:	ldr	x2, [x1, #24]
    9104:	ldrsw	x1, [sp, #48]
    9108:	lsl	x1, x1, #3
    910c:	add	x1, x2, x1
    9110:	str	x0, [x1]
    9114:	mov	x0, #0x1                   	// #1
    9118:	str	x0, [sp, #96]
    911c:	ldr	x0, [sp, #24]
    9120:	ldr	x1, [x0, #24]
    9124:	ldrsw	x2, [sp, #48]
    9128:	ldr	x0, [sp, #96]
    912c:	add	x0, x2, x0
    9130:	lsl	x0, x0, #3
    9134:	sub	x0, x0, #0x8
    9138:	add	x1, x1, x0
    913c:	ldr	x0, [sp, #24]
    9140:	str	x1, [x0]
    9144:	nop
    9148:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    914c:	ldr	x0, [x0, #3992]
    9150:	ldr	x1, [sp, #104]
    9154:	ldr	x0, [x0]
    9158:	eor	x0, x1, x0
    915c:	cmp	x0, #0x0
    9160:	b.eq	9168 <XS_Encode_is_utf8+0x2f4>  // b.none
    9164:	bl	29f0 <__stack_chk_fail@plt>
    9168:	ldp	x29, x30, [sp], #112
    916c:	ret

0000000000009170 <XS_Encode__utf8_on>:
    9170:	stp	x29, x30, [sp, #-80]!
    9174:	mov	x29, sp
    9178:	str	x0, [sp, #24]
    917c:	str	x1, [sp, #16]
    9180:	ldr	x0, [sp, #24]
    9184:	ldr	x0, [x0]
    9188:	str	x0, [sp, #48]
    918c:	ldr	x0, [sp, #24]
    9190:	bl	2e20 <S_POPMARK>
    9194:	str	w0, [sp, #32]
    9198:	ldr	x0, [sp, #24]
    919c:	ldr	x1, [x0, #24]
    91a0:	ldr	w0, [sp, #32]
    91a4:	add	w2, w0, #0x1
    91a8:	str	w2, [sp, #32]
    91ac:	sxtw	x0, w0
    91b0:	lsl	x0, x0, #3
    91b4:	add	x0, x1, x0
    91b8:	str	x0, [sp, #56]
    91bc:	ldr	x1, [sp, #48]
    91c0:	ldr	x0, [sp, #56]
    91c4:	sub	x0, x1, x0
    91c8:	asr	x0, x0, #3
    91cc:	str	w0, [sp, #36]
    91d0:	ldr	w0, [sp, #36]
    91d4:	cmp	w0, #0x1
    91d8:	b.eq	91ec <XS_Encode__utf8_on+0x7c>  // b.none
    91dc:	adrp	x0, b000 <super_cp_format+0x218>
    91e0:	add	x1, x0, #0x90
    91e4:	ldr	x0, [sp, #16]
    91e8:	bl	2a10 <Perl_croak_xs_usage@plt>
    91ec:	ldr	x0, [sp, #24]
    91f0:	ldr	x1, [x0, #24]
    91f4:	ldrsw	x0, [sp, #32]
    91f8:	lsl	x0, x0, #3
    91fc:	add	x0, x1, x0
    9200:	ldr	x0, [x0]
    9204:	str	x0, [sp, #64]
    9208:	ldr	x0, [sp, #64]
    920c:	ldr	w0, [x0, #12]
    9210:	lsr	w0, w0, #21
    9214:	mov	w0, w0
    9218:	and	x0, x0, #0x1
    921c:	cmp	x0, #0x0
    9220:	b.eq	9238 <XS_Encode__utf8_on+0xc8>  // b.none
    9224:	ldr	x1, [sp, #64]
    9228:	ldr	x0, [sp, #24]
    922c:	bl	2af0 <Perl_mg_get@plt>
    9230:	cmp	w0, #0x0
    9234:	nop
    9238:	ldr	x0, [sp, #64]
    923c:	ldr	w0, [x0, #12]
    9240:	and	w0, w0, #0xe00000
    9244:	cmp	w0, #0x0
    9248:	b.eq	926c <XS_Encode__utf8_on+0xfc>  // b.none
    924c:	ldr	x1, [sp, #64]
    9250:	ldr	x0, [sp, #24]
    9254:	bl	2c70 <Perl_sv_tainted@plt>
    9258:	and	w0, w0, #0xff
    925c:	eor	w0, w0, #0x1
    9260:	and	w0, w0, #0xff
    9264:	cmp	w0, #0x0
    9268:	b.eq	9318 <XS_Encode__utf8_on+0x1a8>  // b.none
    926c:	ldr	x0, [sp, #64]
    9270:	ldr	w0, [x0, #12]
    9274:	and	w0, w0, #0x4000
    9278:	cmp	w0, #0x0
    927c:	b.eq	9318 <XS_Encode__utf8_on+0x1a8>  // b.none
    9280:	ldr	x0, [sp, #64]
    9284:	ldr	w1, [x0, #12]
    9288:	mov	w0, #0x800                 	// #2048
    928c:	movk	w0, #0x1981, lsl #16
    9290:	and	w0, w1, w0
    9294:	cmp	w0, #0x0
    9298:	b.eq	92ac <XS_Encode__utf8_on+0x13c>  // b.none
    929c:	mov	w2, #0x0                   	// #0
    92a0:	ldr	x1, [sp, #64]
    92a4:	ldr	x0, [sp, #24]
    92a8:	bl	2970 <Perl_sv_force_normal_flags@plt>
    92ac:	ldr	x0, [sp, #64]
    92b0:	ldr	w0, [x0, #12]
    92b4:	and	w0, w0, #0x20000000
    92b8:	cmp	w0, #0x0
    92bc:	b.eq	92cc <XS_Encode__utf8_on+0x15c>  // b.none
    92c0:	ldr	x0, [sp, #24]
    92c4:	add	x0, x0, #0x138
    92c8:	b	92d4 <XS_Encode__utf8_on+0x164>
    92cc:	ldr	x0, [sp, #24]
    92d0:	add	x0, x0, #0x168
    92d4:	str	x0, [sp, #40]
    92d8:	ldr	x0, [sp, #64]
    92dc:	ldr	w0, [x0, #12]
    92e0:	orr	w1, w0, #0x20000000
    92e4:	ldr	x0, [sp, #64]
    92e8:	str	w1, [x0, #12]
    92ec:	ldr	x0, [sp, #64]
    92f0:	ldr	w0, [x0, #12]
    92f4:	lsr	w0, w0, #22
    92f8:	mov	w0, w0
    92fc:	and	x0, x0, #0x1
    9300:	cmp	x0, #0x0
    9304:	b.eq	9328 <XS_Encode__utf8_on+0x1b8>  // b.none
    9308:	ldr	x1, [sp, #64]
    930c:	ldr	x0, [sp, #24]
    9310:	bl	2ab0 <Perl_mg_set@plt>
    9314:	b	9328 <XS_Encode__utf8_on+0x1b8>
    9318:	ldr	x0, [sp, #24]
    931c:	add	x0, x0, #0x150
    9320:	str	x0, [sp, #40]
    9324:	b	932c <XS_Encode__utf8_on+0x1bc>
    9328:	nop
    932c:	ldr	x1, [sp, #40]
    9330:	ldr	x0, [sp, #24]
    9334:	bl	2ae0 <Perl_sv_2mortal@plt>
    9338:	str	x0, [sp, #40]
    933c:	ldr	x0, [sp, #24]
    9340:	ldr	x1, [x0, #24]
    9344:	ldrsw	x0, [sp, #32]
    9348:	lsl	x0, x0, #3
    934c:	add	x0, x1, x0
    9350:	ldr	x1, [sp, #40]
    9354:	str	x1, [x0]
    9358:	mov	x0, #0x1                   	// #1
    935c:	str	x0, [sp, #72]
    9360:	ldr	x0, [sp, #24]
    9364:	ldr	x1, [x0, #24]
    9368:	ldrsw	x2, [sp, #32]
    936c:	ldr	x0, [sp, #72]
    9370:	add	x0, x2, x0
    9374:	lsl	x0, x0, #3
    9378:	sub	x0, x0, #0x8
    937c:	add	x1, x1, x0
    9380:	ldr	x0, [sp, #24]
    9384:	str	x1, [x0]
    9388:	nop
    938c:	ldp	x29, x30, [sp], #80
    9390:	ret

0000000000009394 <XS_Encode__utf8_off>:
    9394:	stp	x29, x30, [sp, #-80]!
    9398:	mov	x29, sp
    939c:	str	x0, [sp, #24]
    93a0:	str	x1, [sp, #16]
    93a4:	ldr	x0, [sp, #24]
    93a8:	ldr	x0, [x0]
    93ac:	str	x0, [sp, #48]
    93b0:	ldr	x0, [sp, #24]
    93b4:	bl	2e20 <S_POPMARK>
    93b8:	str	w0, [sp, #32]
    93bc:	ldr	x0, [sp, #24]
    93c0:	ldr	x1, [x0, #24]
    93c4:	ldr	w0, [sp, #32]
    93c8:	add	w2, w0, #0x1
    93cc:	str	w2, [sp, #32]
    93d0:	sxtw	x0, w0
    93d4:	lsl	x0, x0, #3
    93d8:	add	x0, x1, x0
    93dc:	str	x0, [sp, #56]
    93e0:	ldr	x1, [sp, #48]
    93e4:	ldr	x0, [sp, #56]
    93e8:	sub	x0, x1, x0
    93ec:	asr	x0, x0, #3
    93f0:	str	w0, [sp, #36]
    93f4:	ldr	w0, [sp, #36]
    93f8:	cmp	w0, #0x1
    93fc:	b.eq	9410 <XS_Encode__utf8_off+0x7c>  // b.none
    9400:	adrp	x0, b000 <super_cp_format+0x218>
    9404:	add	x1, x0, #0x90
    9408:	ldr	x0, [sp, #16]
    940c:	bl	2a10 <Perl_croak_xs_usage@plt>
    9410:	ldr	x0, [sp, #24]
    9414:	ldr	x1, [x0, #24]
    9418:	ldrsw	x0, [sp, #32]
    941c:	lsl	x0, x0, #3
    9420:	add	x0, x1, x0
    9424:	ldr	x0, [x0]
    9428:	str	x0, [sp, #64]
    942c:	ldr	x0, [sp, #64]
    9430:	ldr	w0, [x0, #12]
    9434:	lsr	w0, w0, #21
    9438:	mov	w0, w0
    943c:	and	x0, x0, #0x1
    9440:	cmp	x0, #0x0
    9444:	b.eq	945c <XS_Encode__utf8_off+0xc8>  // b.none
    9448:	ldr	x1, [sp, #64]
    944c:	ldr	x0, [sp, #24]
    9450:	bl	2af0 <Perl_mg_get@plt>
    9454:	cmp	w0, #0x0
    9458:	nop
    945c:	ldr	x0, [sp, #64]
    9460:	ldr	w0, [x0, #12]
    9464:	and	w0, w0, #0xe00000
    9468:	cmp	w0, #0x0
    946c:	b.eq	9490 <XS_Encode__utf8_off+0xfc>  // b.none
    9470:	ldr	x1, [sp, #64]
    9474:	ldr	x0, [sp, #24]
    9478:	bl	2c70 <Perl_sv_tainted@plt>
    947c:	and	w0, w0, #0xff
    9480:	eor	w0, w0, #0x1
    9484:	and	w0, w0, #0xff
    9488:	cmp	w0, #0x0
    948c:	b.eq	953c <XS_Encode__utf8_off+0x1a8>  // b.none
    9490:	ldr	x0, [sp, #64]
    9494:	ldr	w0, [x0, #12]
    9498:	and	w0, w0, #0x4000
    949c:	cmp	w0, #0x0
    94a0:	b.eq	953c <XS_Encode__utf8_off+0x1a8>  // b.none
    94a4:	ldr	x0, [sp, #64]
    94a8:	ldr	w1, [x0, #12]
    94ac:	mov	w0, #0x800                 	// #2048
    94b0:	movk	w0, #0x1981, lsl #16
    94b4:	and	w0, w1, w0
    94b8:	cmp	w0, #0x0
    94bc:	b.eq	94d0 <XS_Encode__utf8_off+0x13c>  // b.none
    94c0:	mov	w2, #0x0                   	// #0
    94c4:	ldr	x1, [sp, #64]
    94c8:	ldr	x0, [sp, #24]
    94cc:	bl	2970 <Perl_sv_force_normal_flags@plt>
    94d0:	ldr	x0, [sp, #64]
    94d4:	ldr	w0, [x0, #12]
    94d8:	and	w0, w0, #0x20000000
    94dc:	cmp	w0, #0x0
    94e0:	b.eq	94f0 <XS_Encode__utf8_off+0x15c>  // b.none
    94e4:	ldr	x0, [sp, #24]
    94e8:	add	x0, x0, #0x138
    94ec:	b	94f8 <XS_Encode__utf8_off+0x164>
    94f0:	ldr	x0, [sp, #24]
    94f4:	add	x0, x0, #0x168
    94f8:	str	x0, [sp, #40]
    94fc:	ldr	x0, [sp, #64]
    9500:	ldr	w0, [x0, #12]
    9504:	and	w1, w0, #0xdfffffff
    9508:	ldr	x0, [sp, #64]
    950c:	str	w1, [x0, #12]
    9510:	ldr	x0, [sp, #64]
    9514:	ldr	w0, [x0, #12]
    9518:	lsr	w0, w0, #22
    951c:	mov	w0, w0
    9520:	and	x0, x0, #0x1
    9524:	cmp	x0, #0x0
    9528:	b.eq	954c <XS_Encode__utf8_off+0x1b8>  // b.none
    952c:	ldr	x1, [sp, #64]
    9530:	ldr	x0, [sp, #24]
    9534:	bl	2ab0 <Perl_mg_set@plt>
    9538:	b	954c <XS_Encode__utf8_off+0x1b8>
    953c:	ldr	x0, [sp, #24]
    9540:	add	x0, x0, #0x150
    9544:	str	x0, [sp, #40]
    9548:	b	9550 <XS_Encode__utf8_off+0x1bc>
    954c:	nop
    9550:	ldr	x1, [sp, #40]
    9554:	ldr	x0, [sp, #24]
    9558:	bl	2ae0 <Perl_sv_2mortal@plt>
    955c:	str	x0, [sp, #40]
    9560:	ldr	x0, [sp, #24]
    9564:	ldr	x1, [x0, #24]
    9568:	ldrsw	x0, [sp, #32]
    956c:	lsl	x0, x0, #3
    9570:	add	x0, x1, x0
    9574:	ldr	x1, [sp, #40]
    9578:	str	x1, [x0]
    957c:	mov	x0, #0x1                   	// #1
    9580:	str	x0, [sp, #72]
    9584:	ldr	x0, [sp, #24]
    9588:	ldr	x1, [x0, #24]
    958c:	ldrsw	x2, [sp, #32]
    9590:	ldr	x0, [sp, #72]
    9594:	add	x0, x2, x0
    9598:	lsl	x0, x0, #3
    959c:	sub	x0, x0, #0x8
    95a0:	add	x1, x1, x0
    95a4:	ldr	x0, [sp, #24]
    95a8:	str	x1, [x0]
    95ac:	nop
    95b0:	ldp	x29, x30, [sp], #80
    95b4:	ret

00000000000095b8 <XS_Encode_decode>:
    95b8:	stp	x29, x30, [sp, #-128]!
    95bc:	mov	x29, sp
    95c0:	str	x0, [sp, #24]
    95c4:	str	x1, [sp, #16]
    95c8:	ldr	x0, [sp, #24]
    95cc:	ldr	x0, [x0]
    95d0:	str	x0, [sp, #64]
    95d4:	ldr	x0, [sp, #24]
    95d8:	bl	2e20 <S_POPMARK>
    95dc:	str	w0, [sp, #44]
    95e0:	ldr	x0, [sp, #24]
    95e4:	ldr	x1, [x0, #24]
    95e8:	ldr	w0, [sp, #44]
    95ec:	add	w2, w0, #0x1
    95f0:	str	w2, [sp, #44]
    95f4:	sxtw	x0, w0
    95f8:	lsl	x0, x0, #3
    95fc:	add	x0, x1, x0
    9600:	str	x0, [sp, #72]
    9604:	ldr	x1, [sp, #64]
    9608:	ldr	x0, [sp, #72]
    960c:	sub	x0, x1, x0
    9610:	asr	x0, x0, #3
    9614:	str	w0, [sp, #48]
    9618:	ldr	x0, [sp, #16]
    961c:	ldr	x0, [x0]
    9620:	str	x0, [sp, #80]
    9624:	ldr	x0, [sp, #80]
    9628:	ldr	w0, [x0, #40]
    962c:	str	w0, [sp, #52]
    9630:	ldr	w0, [sp, #48]
    9634:	cmp	w0, #0x1
    9638:	b.le	9648 <XS_Encode_decode+0x90>
    963c:	ldr	w0, [sp, #48]
    9640:	cmp	w0, #0x3
    9644:	b.le	9658 <XS_Encode_decode+0xa0>
    9648:	adrp	x0, b000 <super_cp_format+0x218>
    964c:	add	x1, x0, #0x98
    9650:	ldr	x0, [sp, #16]
    9654:	bl	2a10 <Perl_croak_xs_usage@plt>
    9658:	ldr	x0, [sp, #24]
    965c:	ldr	x1, [x0, #24]
    9660:	ldrsw	x0, [sp, #44]
    9664:	lsl	x0, x0, #3
    9668:	add	x0, x1, x0
    966c:	ldr	x0, [x0]
    9670:	str	x0, [sp, #88]
    9674:	ldr	x0, [sp, #24]
    9678:	ldr	x1, [x0, #24]
    967c:	ldrsw	x0, [sp, #44]
    9680:	add	x0, x0, #0x1
    9684:	lsl	x0, x0, #3
    9688:	add	x0, x1, x0
    968c:	ldr	x0, [x0]
    9690:	str	x0, [sp, #96]
    9694:	ldr	w0, [sp, #48]
    9698:	cmp	w0, #0x2
    969c:	b.gt	96a8 <XS_Encode_decode+0xf0>
    96a0:	str	xzr, [sp, #56]
    96a4:	b	96c8 <XS_Encode_decode+0x110>
    96a8:	ldr	x0, [sp, #24]
    96ac:	ldr	x1, [x0, #24]
    96b0:	ldrsw	x0, [sp, #44]
    96b4:	add	x0, x0, #0x2
    96b8:	lsl	x0, x0, #3
    96bc:	add	x0, x1, x0
    96c0:	ldr	x0, [x0]
    96c4:	str	x0, [sp, #56]
    96c8:	ldr	x0, [sp, #88]
    96cc:	ldr	w0, [x0, #12]
    96d0:	lsr	w0, w0, #21
    96d4:	mov	w0, w0
    96d8:	and	x0, x0, #0x1
    96dc:	cmp	x0, #0x0
    96e0:	b.eq	96f8 <XS_Encode_decode+0x140>  // b.none
    96e4:	ldr	x1, [sp, #88]
    96e8:	ldr	x0, [sp, #24]
    96ec:	bl	2af0 <Perl_mg_get@plt>
    96f0:	cmp	w0, #0x0
    96f4:	nop
    96f8:	ldr	x0, [sp, #88]
    96fc:	ldr	w0, [x0, #12]
    9700:	and	w0, w0, #0xff00
    9704:	cmp	w0, #0x0
    9708:	b.ne	9718 <XS_Encode_decode+0x160>  // b.any
    970c:	adrp	x0, b000 <super_cp_format+0x218>
    9710:	add	x0, x0, #0xb8
    9714:	bl	2a90 <Perl_croak_nocontext@plt>
    9718:	ldr	x1, [sp, #88]
    971c:	ldr	x0, [sp, #24]
    9720:	bl	5f08 <find_encoding>
    9724:	str	x0, [sp, #104]
    9728:	ldr	x0, [sp, #104]
    972c:	ldr	w0, [x0, #12]
    9730:	and	w0, w0, #0xff00
    9734:	cmp	w0, #0x0
    9738:	b.ne	974c <XS_Encode_decode+0x194>  // b.any
    973c:	ldr	x1, [sp, #88]
    9740:	adrp	x0, b000 <super_cp_format+0x218>
    9744:	add	x0, x0, #0xe0
    9748:	bl	2a90 <Perl_croak_nocontext@plt>
    974c:	ldr	x4, [sp, #56]
    9750:	ldr	x3, [sp, #96]
    9754:	ldr	x2, [sp, #104]
    9758:	adrp	x0, b000 <super_cp_format+0x218>
    975c:	add	x1, x0, #0xf8
    9760:	ldr	x0, [sp, #24]
    9764:	bl	60d0 <call_encoding>
    9768:	str	x0, [sp, #112]
    976c:	ldr	x1, [sp, #112]
    9770:	ldr	x0, [sp, #24]
    9774:	bl	2ae0 <Perl_sv_2mortal@plt>
    9778:	str	x0, [sp, #112]
    977c:	ldr	x0, [sp, #24]
    9780:	ldr	x1, [x0, #24]
    9784:	ldrsw	x0, [sp, #44]
    9788:	lsl	x0, x0, #3
    978c:	add	x0, x1, x0
    9790:	ldr	x1, [sp, #112]
    9794:	str	x1, [x0]
    9798:	mov	x0, #0x1                   	// #1
    979c:	str	x0, [sp, #120]
    97a0:	ldr	x0, [sp, #24]
    97a4:	ldr	x1, [x0, #24]
    97a8:	ldrsw	x2, [sp, #44]
    97ac:	ldr	x0, [sp, #120]
    97b0:	add	x0, x2, x0
    97b4:	lsl	x0, x0, #3
    97b8:	sub	x0, x0, #0x8
    97bc:	add	x1, x1, x0
    97c0:	ldr	x0, [sp, #24]
    97c4:	str	x1, [x0]
    97c8:	nop
    97cc:	ldp	x29, x30, [sp], #128
    97d0:	ret

00000000000097d4 <XS_Encode_encode>:
    97d4:	stp	x29, x30, [sp, #-128]!
    97d8:	mov	x29, sp
    97dc:	str	x0, [sp, #24]
    97e0:	str	x1, [sp, #16]
    97e4:	ldr	x0, [sp, #24]
    97e8:	ldr	x0, [x0]
    97ec:	str	x0, [sp, #64]
    97f0:	ldr	x0, [sp, #24]
    97f4:	bl	2e20 <S_POPMARK>
    97f8:	str	w0, [sp, #44]
    97fc:	ldr	x0, [sp, #24]
    9800:	ldr	x1, [x0, #24]
    9804:	ldr	w0, [sp, #44]
    9808:	add	w2, w0, #0x1
    980c:	str	w2, [sp, #44]
    9810:	sxtw	x0, w0
    9814:	lsl	x0, x0, #3
    9818:	add	x0, x1, x0
    981c:	str	x0, [sp, #72]
    9820:	ldr	x1, [sp, #64]
    9824:	ldr	x0, [sp, #72]
    9828:	sub	x0, x1, x0
    982c:	asr	x0, x0, #3
    9830:	str	w0, [sp, #48]
    9834:	ldr	x0, [sp, #16]
    9838:	ldr	x0, [x0]
    983c:	str	x0, [sp, #80]
    9840:	ldr	x0, [sp, #80]
    9844:	ldr	w0, [x0, #40]
    9848:	str	w0, [sp, #52]
    984c:	ldr	w0, [sp, #48]
    9850:	cmp	w0, #0x1
    9854:	b.le	9864 <XS_Encode_encode+0x90>
    9858:	ldr	w0, [sp, #48]
    985c:	cmp	w0, #0x3
    9860:	b.le	9874 <XS_Encode_encode+0xa0>
    9864:	adrp	x0, b000 <super_cp_format+0x218>
    9868:	add	x1, x0, #0x100
    986c:	ldr	x0, [sp, #16]
    9870:	bl	2a10 <Perl_croak_xs_usage@plt>
    9874:	ldr	x0, [sp, #24]
    9878:	ldr	x1, [x0, #24]
    987c:	ldrsw	x0, [sp, #44]
    9880:	lsl	x0, x0, #3
    9884:	add	x0, x1, x0
    9888:	ldr	x0, [x0]
    988c:	str	x0, [sp, #88]
    9890:	ldr	x0, [sp, #24]
    9894:	ldr	x1, [x0, #24]
    9898:	ldrsw	x0, [sp, #44]
    989c:	add	x0, x0, #0x1
    98a0:	lsl	x0, x0, #3
    98a4:	add	x0, x1, x0
    98a8:	ldr	x0, [x0]
    98ac:	str	x0, [sp, #96]
    98b0:	ldr	w0, [sp, #48]
    98b4:	cmp	w0, #0x2
    98b8:	b.gt	98c4 <XS_Encode_encode+0xf0>
    98bc:	str	xzr, [sp, #56]
    98c0:	b	98e4 <XS_Encode_encode+0x110>
    98c4:	ldr	x0, [sp, #24]
    98c8:	ldr	x1, [x0, #24]
    98cc:	ldrsw	x0, [sp, #44]
    98d0:	add	x0, x0, #0x2
    98d4:	lsl	x0, x0, #3
    98d8:	add	x0, x1, x0
    98dc:	ldr	x0, [x0]
    98e0:	str	x0, [sp, #56]
    98e4:	ldr	x0, [sp, #88]
    98e8:	ldr	w0, [x0, #12]
    98ec:	lsr	w0, w0, #21
    98f0:	mov	w0, w0
    98f4:	and	x0, x0, #0x1
    98f8:	cmp	x0, #0x0
    98fc:	b.eq	9914 <XS_Encode_encode+0x140>  // b.none
    9900:	ldr	x1, [sp, #88]
    9904:	ldr	x0, [sp, #24]
    9908:	bl	2af0 <Perl_mg_get@plt>
    990c:	cmp	w0, #0x0
    9910:	nop
    9914:	ldr	x0, [sp, #88]
    9918:	ldr	w0, [x0, #12]
    991c:	and	w0, w0, #0xff00
    9920:	cmp	w0, #0x0
    9924:	b.ne	9934 <XS_Encode_encode+0x160>  // b.any
    9928:	adrp	x0, b000 <super_cp_format+0x218>
    992c:	add	x0, x0, #0xb8
    9930:	bl	2a90 <Perl_croak_nocontext@plt>
    9934:	ldr	x1, [sp, #88]
    9938:	ldr	x0, [sp, #24]
    993c:	bl	5f08 <find_encoding>
    9940:	str	x0, [sp, #104]
    9944:	ldr	x0, [sp, #104]
    9948:	ldr	w0, [x0, #12]
    994c:	and	w0, w0, #0xff00
    9950:	cmp	w0, #0x0
    9954:	b.ne	9968 <XS_Encode_encode+0x194>  // b.any
    9958:	ldr	x1, [sp, #88]
    995c:	adrp	x0, b000 <super_cp_format+0x218>
    9960:	add	x0, x0, #0xe0
    9964:	bl	2a90 <Perl_croak_nocontext@plt>
    9968:	ldr	x4, [sp, #56]
    996c:	ldr	x3, [sp, #96]
    9970:	ldr	x2, [sp, #104]
    9974:	adrp	x0, b000 <super_cp_format+0x218>
    9978:	add	x1, x0, #0x120
    997c:	ldr	x0, [sp, #24]
    9980:	bl	60d0 <call_encoding>
    9984:	str	x0, [sp, #112]
    9988:	ldr	x1, [sp, #112]
    998c:	ldr	x0, [sp, #24]
    9990:	bl	2ae0 <Perl_sv_2mortal@plt>
    9994:	str	x0, [sp, #112]
    9998:	ldr	x0, [sp, #24]
    999c:	ldr	x1, [x0, #24]
    99a0:	ldrsw	x0, [sp, #44]
    99a4:	lsl	x0, x0, #3
    99a8:	add	x0, x1, x0
    99ac:	ldr	x1, [sp, #112]
    99b0:	str	x1, [x0]
    99b4:	mov	x0, #0x1                   	// #1
    99b8:	str	x0, [sp, #120]
    99bc:	ldr	x0, [sp, #24]
    99c0:	ldr	x1, [x0, #24]
    99c4:	ldrsw	x2, [sp, #44]
    99c8:	ldr	x0, [sp, #120]
    99cc:	add	x0, x2, x0
    99d0:	lsl	x0, x0, #3
    99d4:	sub	x0, x0, #0x8
    99d8:	add	x1, x1, x0
    99dc:	ldr	x0, [sp, #24]
    99e0:	str	x1, [x0]
    99e4:	nop
    99e8:	ldp	x29, x30, [sp], #128
    99ec:	ret

00000000000099f0 <XS_Encode_decode_utf8>:
    99f0:	stp	x29, x30, [sp, #-112]!
    99f4:	mov	x29, sp
    99f8:	str	x0, [sp, #24]
    99fc:	str	x1, [sp, #16]
    9a00:	ldr	x0, [sp, #24]
    9a04:	ldr	x0, [x0]
    9a08:	str	x0, [sp, #56]
    9a0c:	ldr	x0, [sp, #24]
    9a10:	bl	2e20 <S_POPMARK>
    9a14:	str	w0, [sp, #40]
    9a18:	ldr	x0, [sp, #24]
    9a1c:	ldr	x1, [x0, #24]
    9a20:	ldr	w0, [sp, #40]
    9a24:	add	w2, w0, #0x1
    9a28:	str	w2, [sp, #40]
    9a2c:	sxtw	x0, w0
    9a30:	lsl	x0, x0, #3
    9a34:	add	x0, x1, x0
    9a38:	str	x0, [sp, #64]
    9a3c:	ldr	x1, [sp, #56]
    9a40:	ldr	x0, [sp, #64]
    9a44:	sub	x0, x1, x0
    9a48:	asr	x0, x0, #3
    9a4c:	str	w0, [sp, #44]
    9a50:	ldr	w0, [sp, #44]
    9a54:	cmp	w0, #0x0
    9a58:	b.le	9a68 <XS_Encode_decode_utf8+0x78>
    9a5c:	ldr	w0, [sp, #44]
    9a60:	cmp	w0, #0x2
    9a64:	b.le	9a78 <XS_Encode_decode_utf8+0x88>
    9a68:	adrp	x0, b000 <super_cp_format+0x218>
    9a6c:	add	x1, x0, #0x128
    9a70:	ldr	x0, [sp, #16]
    9a74:	bl	2a10 <Perl_croak_xs_usage@plt>
    9a78:	ldr	x0, [sp, #24]
    9a7c:	ldr	x1, [x0, #24]
    9a80:	ldrsw	x0, [sp, #40]
    9a84:	lsl	x0, x0, #3
    9a88:	add	x0, x1, x0
    9a8c:	ldr	x0, [x0]
    9a90:	str	x0, [sp, #72]
    9a94:	ldr	w0, [sp, #44]
    9a98:	cmp	w0, #0x1
    9a9c:	b.gt	9aa8 <XS_Encode_decode_utf8+0xb8>
    9aa0:	str	xzr, [sp, #48]
    9aa4:	b	9ac8 <XS_Encode_decode_utf8+0xd8>
    9aa8:	ldr	x0, [sp, #24]
    9aac:	ldr	x1, [x0, #24]
    9ab0:	ldrsw	x0, [sp, #40]
    9ab4:	add	x0, x0, #0x1
    9ab8:	lsl	x0, x0, #3
    9abc:	add	x0, x1, x0
    9ac0:	ldr	x0, [x0]
    9ac4:	str	x0, [sp, #48]
    9ac8:	mov	w2, #0x0                   	// #0
    9acc:	adrp	x0, b000 <super_cp_format+0x218>
    9ad0:	add	x1, x0, #0x140
    9ad4:	ldr	x0, [sp, #24]
    9ad8:	bl	2c80 <Perl_get_hv@plt>
    9adc:	str	x0, [sp, #80]
    9ae0:	ldr	x0, [sp, #80]
    9ae4:	cmp	x0, #0x0
    9ae8:	b.ne	9af8 <XS_Encode_decode_utf8+0x108>  // b.any
    9aec:	adrp	x0, b000 <super_cp_format+0x218>
    9af0:	add	x0, x0, #0x158
    9af4:	bl	2a90 <Perl_croak_nocontext@plt>
    9af8:	mov	w6, #0x0                   	// #0
    9afc:	mov	x5, #0x0                   	// #0
    9b00:	mov	w4, #0x20                  	// #32
    9b04:	mov	w3, #0x4                   	// #4
    9b08:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    9b0c:	add	x2, x0, #0xf70
    9b10:	ldr	x1, [sp, #80]
    9b14:	ldr	x0, [sp, #24]
    9b18:	bl	2b90 <Perl_hv_common_key_len@plt>
    9b1c:	str	x0, [sp, #88]
    9b20:	ldr	x0, [sp, #88]
    9b24:	cmp	x0, #0x0
    9b28:	b.eq	9b54 <XS_Encode_decode_utf8+0x164>  // b.none
    9b2c:	ldr	x0, [sp, #88]
    9b30:	ldr	x0, [x0]
    9b34:	cmp	x0, #0x0
    9b38:	b.eq	9b54 <XS_Encode_decode_utf8+0x164>  // b.none
    9b3c:	ldr	x0, [sp, #88]
    9b40:	ldr	x0, [x0]
    9b44:	ldr	w0, [x0, #12]
    9b48:	and	w0, w0, #0xff00
    9b4c:	cmp	w0, #0x0
    9b50:	b.ne	9b60 <XS_Encode_decode_utf8+0x170>  // b.any
    9b54:	adrp	x0, b000 <super_cp_format+0x218>
    9b58:	add	x0, x0, #0x158
    9b5c:	bl	2a90 <Perl_croak_nocontext@plt>
    9b60:	ldr	x0, [sp, #88]
    9b64:	ldr	x0, [x0]
    9b68:	ldr	x4, [sp, #48]
    9b6c:	ldr	x3, [sp, #72]
    9b70:	mov	x2, x0
    9b74:	adrp	x0, b000 <super_cp_format+0x218>
    9b78:	add	x1, x0, #0xf8
    9b7c:	ldr	x0, [sp, #24]
    9b80:	bl	60d0 <call_encoding>
    9b84:	str	x0, [sp, #96]
    9b88:	ldr	x1, [sp, #96]
    9b8c:	ldr	x0, [sp, #24]
    9b90:	bl	2ae0 <Perl_sv_2mortal@plt>
    9b94:	str	x0, [sp, #96]
    9b98:	ldr	x0, [sp, #24]
    9b9c:	ldr	x1, [x0, #24]
    9ba0:	ldrsw	x0, [sp, #40]
    9ba4:	lsl	x0, x0, #3
    9ba8:	add	x0, x1, x0
    9bac:	ldr	x1, [sp, #96]
    9bb0:	str	x1, [x0]
    9bb4:	mov	x0, #0x1                   	// #1
    9bb8:	str	x0, [sp, #104]
    9bbc:	ldr	x0, [sp, #24]
    9bc0:	ldr	x1, [x0, #24]
    9bc4:	ldrsw	x2, [sp, #40]
    9bc8:	ldr	x0, [sp, #104]
    9bcc:	add	x0, x2, x0
    9bd0:	lsl	x0, x0, #3
    9bd4:	sub	x0, x0, #0x8
    9bd8:	add	x1, x1, x0
    9bdc:	ldr	x0, [sp, #24]
    9be0:	str	x1, [x0]
    9be4:	nop
    9be8:	ldp	x29, x30, [sp], #112
    9bec:	ret

0000000000009bf0 <XS_Encode_encode_utf8>:
    9bf0:	stp	x29, x30, [sp, #-80]!
    9bf4:	mov	x29, sp
    9bf8:	str	x0, [sp, #24]
    9bfc:	str	x1, [sp, #16]
    9c00:	ldr	x0, [sp, #24]
    9c04:	ldr	x0, [x0]
    9c08:	str	x0, [sp, #40]
    9c0c:	ldr	x0, [sp, #24]
    9c10:	bl	2e20 <S_POPMARK>
    9c14:	str	w0, [sp, #32]
    9c18:	ldr	x0, [sp, #24]
    9c1c:	ldr	x1, [x0, #24]
    9c20:	ldr	w0, [sp, #32]
    9c24:	add	w2, w0, #0x1
    9c28:	str	w2, [sp, #32]
    9c2c:	sxtw	x0, w0
    9c30:	lsl	x0, x0, #3
    9c34:	add	x0, x1, x0
    9c38:	str	x0, [sp, #48]
    9c3c:	ldr	x1, [sp, #40]
    9c40:	ldr	x0, [sp, #48]
    9c44:	sub	x0, x1, x0
    9c48:	asr	x0, x0, #3
    9c4c:	str	w0, [sp, #36]
    9c50:	ldr	w0, [sp, #36]
    9c54:	cmp	w0, #0x1
    9c58:	b.eq	9c6c <XS_Encode_encode_utf8+0x7c>  // b.none
    9c5c:	adrp	x0, b000 <super_cp_format+0x218>
    9c60:	add	x1, x0, #0x178
    9c64:	ldr	x0, [sp, #16]
    9c68:	bl	2a10 <Perl_croak_xs_usage@plt>
    9c6c:	ldr	x0, [sp, #24]
    9c70:	ldr	x1, [x0, #24]
    9c74:	ldrsw	x0, [sp, #32]
    9c78:	lsl	x0, x0, #3
    9c7c:	add	x0, x1, x0
    9c80:	ldr	x0, [x0]
    9c84:	str	x0, [sp, #56]
    9c88:	mov	w2, #0x12                  	// #18
    9c8c:	ldr	x1, [sp, #56]
    9c90:	ldr	x0, [sp, #24]
    9c94:	bl	2c40 <Perl_newSVsv_flags@plt>
    9c98:	str	x0, [sp, #64]
    9c9c:	ldr	x0, [sp, #64]
    9ca0:	ldr	w0, [x0, #12]
    9ca4:	and	w0, w0, #0xff00
    9ca8:	cmp	w0, #0x0
    9cac:	b.eq	9cbc <XS_Encode_encode_utf8+0xcc>  // b.none
    9cb0:	ldr	x1, [sp, #64]
    9cb4:	ldr	x0, [sp, #24]
    9cb8:	bl	28b0 <Perl_sv_utf8_encode@plt>
    9cbc:	ldr	x1, [sp, #64]
    9cc0:	ldr	x0, [sp, #24]
    9cc4:	bl	2ae0 <Perl_sv_2mortal@plt>
    9cc8:	str	x0, [sp, #64]
    9ccc:	ldr	x0, [sp, #24]
    9cd0:	ldr	x1, [x0, #24]
    9cd4:	ldrsw	x0, [sp, #32]
    9cd8:	lsl	x0, x0, #3
    9cdc:	add	x0, x1, x0
    9ce0:	ldr	x1, [sp, #64]
    9ce4:	str	x1, [x0]
    9ce8:	mov	x0, #0x1                   	// #1
    9cec:	str	x0, [sp, #72]
    9cf0:	ldr	x0, [sp, #24]
    9cf4:	ldr	x1, [x0, #24]
    9cf8:	ldrsw	x2, [sp, #32]
    9cfc:	ldr	x0, [sp, #72]
    9d00:	add	x0, x2, x0
    9d04:	lsl	x0, x0, #3
    9d08:	sub	x0, x0, #0x8
    9d0c:	add	x1, x1, x0
    9d10:	ldr	x0, [sp, #24]
    9d14:	str	x1, [x0]
    9d18:	nop
    9d1c:	ldp	x29, x30, [sp], #80
    9d20:	ret

0000000000009d24 <XS_Encode_from_to>:
    9d24:	stp	x29, x30, [sp, #-160]!
    9d28:	mov	x29, sp
    9d2c:	str	x0, [sp, #24]
    9d30:	str	x1, [sp, #16]
    9d34:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    9d38:	ldr	x0, [x0, #3992]
    9d3c:	ldr	x1, [x0]
    9d40:	str	x1, [sp, #152]
    9d44:	mov	x1, #0x0                   	// #0
    9d48:	ldr	x0, [sp, #24]
    9d4c:	ldr	x0, [x0]
    9d50:	str	x0, [sp, #64]
    9d54:	ldr	x0, [sp, #24]
    9d58:	bl	2e20 <S_POPMARK>
    9d5c:	str	w0, [sp, #32]
    9d60:	ldr	x0, [sp, #24]
    9d64:	ldr	x1, [x0, #24]
    9d68:	ldr	w0, [sp, #32]
    9d6c:	add	w2, w0, #0x1
    9d70:	str	w2, [sp, #32]
    9d74:	sxtw	x0, w0
    9d78:	lsl	x0, x0, #3
    9d7c:	add	x0, x1, x0
    9d80:	str	x0, [sp, #72]
    9d84:	ldr	x1, [sp, #64]
    9d88:	ldr	x0, [sp, #72]
    9d8c:	sub	x0, x1, x0
    9d90:	asr	x0, x0, #3
    9d94:	str	w0, [sp, #36]
    9d98:	ldr	w0, [sp, #36]
    9d9c:	cmp	w0, #0x2
    9da0:	b.le	9db0 <XS_Encode_from_to+0x8c>
    9da4:	ldr	w0, [sp, #36]
    9da8:	cmp	w0, #0x4
    9dac:	b.le	9dc0 <XS_Encode_from_to+0x9c>
    9db0:	adrp	x0, b000 <super_cp_format+0x218>
    9db4:	add	x1, x0, #0x180
    9db8:	ldr	x0, [sp, #16]
    9dbc:	bl	2a10 <Perl_croak_xs_usage@plt>
    9dc0:	ldr	x0, [sp, #24]
    9dc4:	ldr	x1, [x0, #24]
    9dc8:	ldrsw	x0, [sp, #32]
    9dcc:	lsl	x0, x0, #3
    9dd0:	add	x0, x1, x0
    9dd4:	ldr	x0, [x0]
    9dd8:	str	x0, [sp, #80]
    9ddc:	ldr	x0, [sp, #24]
    9de0:	ldr	x1, [x0, #24]
    9de4:	ldrsw	x0, [sp, #32]
    9de8:	add	x0, x0, #0x1
    9dec:	lsl	x0, x0, #3
    9df0:	add	x0, x1, x0
    9df4:	ldr	x0, [x0]
    9df8:	str	x0, [sp, #88]
    9dfc:	ldr	x0, [sp, #24]
    9e00:	ldr	x1, [x0, #24]
    9e04:	ldrsw	x0, [sp, #32]
    9e08:	add	x0, x0, #0x2
    9e0c:	lsl	x0, x0, #3
    9e10:	add	x0, x1, x0
    9e14:	ldr	x0, [x0]
    9e18:	str	x0, [sp, #96]
    9e1c:	ldr	w0, [sp, #36]
    9e20:	cmp	w0, #0x3
    9e24:	b.gt	9e30 <XS_Encode_from_to+0x10c>
    9e28:	str	xzr, [sp, #48]
    9e2c:	b	9e50 <XS_Encode_from_to+0x12c>
    9e30:	ldr	x0, [sp, #24]
    9e34:	ldr	x1, [x0, #24]
    9e38:	ldrsw	x0, [sp, #32]
    9e3c:	add	x0, x0, #0x3
    9e40:	lsl	x0, x0, #3
    9e44:	add	x0, x1, x0
    9e48:	ldr	x0, [x0]
    9e4c:	str	x0, [sp, #48]
    9e50:	ldr	x0, [sp, #88]
    9e54:	ldr	w0, [x0, #12]
    9e58:	lsr	w0, w0, #21
    9e5c:	mov	w0, w0
    9e60:	and	x0, x0, #0x1
    9e64:	cmp	x0, #0x0
    9e68:	b.eq	9e80 <XS_Encode_from_to+0x15c>  // b.none
    9e6c:	ldr	x1, [sp, #88]
    9e70:	ldr	x0, [sp, #24]
    9e74:	bl	2af0 <Perl_mg_get@plt>
    9e78:	cmp	w0, #0x0
    9e7c:	nop
    9e80:	ldr	x0, [sp, #96]
    9e84:	ldr	w0, [x0, #12]
    9e88:	lsr	w0, w0, #21
    9e8c:	mov	w0, w0
    9e90:	and	x0, x0, #0x1
    9e94:	cmp	x0, #0x0
    9e98:	b.eq	9eb0 <XS_Encode_from_to+0x18c>  // b.none
    9e9c:	ldr	x1, [sp, #96]
    9ea0:	ldr	x0, [sp, #24]
    9ea4:	bl	2af0 <Perl_mg_get@plt>
    9ea8:	cmp	w0, #0x0
    9eac:	nop
    9eb0:	ldr	x0, [sp, #88]
    9eb4:	ldr	w0, [x0, #12]
    9eb8:	and	w0, w0, #0xff00
    9ebc:	cmp	w0, #0x0
    9ec0:	b.eq	9ed8 <XS_Encode_from_to+0x1b4>  // b.none
    9ec4:	ldr	x0, [sp, #96]
    9ec8:	ldr	w0, [x0, #12]
    9ecc:	and	w0, w0, #0xff00
    9ed0:	cmp	w0, #0x0
    9ed4:	b.ne	9ee4 <XS_Encode_from_to+0x1c0>  // b.any
    9ed8:	adrp	x0, b000 <super_cp_format+0x218>
    9edc:	add	x0, x0, #0xb8
    9ee0:	bl	2a90 <Perl_croak_nocontext@plt>
    9ee4:	ldr	x1, [sp, #88]
    9ee8:	ldr	x0, [sp, #24]
    9eec:	bl	5f08 <find_encoding>
    9ef0:	str	x0, [sp, #104]
    9ef4:	ldr	x0, [sp, #104]
    9ef8:	ldr	w0, [x0, #12]
    9efc:	and	w0, w0, #0xff00
    9f00:	cmp	w0, #0x0
    9f04:	b.ne	9f18 <XS_Encode_from_to+0x1f4>  // b.any
    9f08:	ldr	x1, [sp, #88]
    9f0c:	adrp	x0, b000 <super_cp_format+0x218>
    9f10:	add	x0, x0, #0xe0
    9f14:	bl	2a90 <Perl_croak_nocontext@plt>
    9f18:	ldr	x1, [sp, #96]
    9f1c:	ldr	x0, [sp, #24]
    9f20:	bl	5f08 <find_encoding>
    9f24:	str	x0, [sp, #112]
    9f28:	ldr	x0, [sp, #112]
    9f2c:	ldr	w0, [x0, #12]
    9f30:	and	w0, w0, #0xff00
    9f34:	cmp	w0, #0x0
    9f38:	b.ne	9f4c <XS_Encode_from_to+0x228>  // b.any
    9f3c:	ldr	x1, [sp, #96]
    9f40:	adrp	x0, b000 <super_cp_format+0x218>
    9f44:	add	x0, x0, #0xe0
    9f48:	bl	2a90 <Perl_croak_nocontext@plt>
    9f4c:	mov	x4, #0x0                   	// #0
    9f50:	ldr	x3, [sp, #80]
    9f54:	ldr	x2, [sp, #104]
    9f58:	adrp	x0, b000 <super_cp_format+0x218>
    9f5c:	add	x1, x0, #0xf8
    9f60:	ldr	x0, [sp, #24]
    9f64:	bl	60d0 <call_encoding>
    9f68:	mov	x1, x0
    9f6c:	ldr	x0, [sp, #24]
    9f70:	bl	2ae0 <Perl_sv_2mortal@plt>
    9f74:	str	x0, [sp, #120]
    9f78:	ldr	x4, [sp, #48]
    9f7c:	ldr	x3, [sp, #120]
    9f80:	ldr	x2, [sp, #112]
    9f84:	adrp	x0, b000 <super_cp_format+0x218>
    9f88:	add	x1, x0, #0x120
    9f8c:	ldr	x0, [sp, #24]
    9f90:	bl	60d0 <call_encoding>
    9f94:	mov	x1, x0
    9f98:	ldr	x0, [sp, #24]
    9f9c:	bl	2ae0 <Perl_sv_2mortal@plt>
    9fa0:	str	x0, [sp, #128]
    9fa4:	ldr	x0, [sp, #128]
    9fa8:	ldr	w0, [x0, #12]
    9fac:	lsr	w0, w0, #21
    9fb0:	mov	w0, w0
    9fb4:	and	x0, x0, #0x1
    9fb8:	cmp	x0, #0x0
    9fbc:	b.eq	9fd4 <XS_Encode_from_to+0x2b0>  // b.none
    9fc0:	ldr	x1, [sp, #128]
    9fc4:	ldr	x0, [sp, #24]
    9fc8:	bl	2af0 <Perl_mg_get@plt>
    9fcc:	cmp	w0, #0x0
    9fd0:	nop
    9fd4:	ldr	x0, [sp, #128]
    9fd8:	ldr	w0, [x0, #12]
    9fdc:	and	w0, w0, #0xff00
    9fe0:	cmp	w0, #0x0
    9fe4:	b.eq	a264 <XS_Encode_from_to+0x540>  // b.none
    9fe8:	ldr	x0, [sp, #48]
    9fec:	cmp	x0, #0x0
    9ff0:	b.eq	a1c4 <XS_Encode_from_to+0x4a0>  // b.none
    9ff4:	ldr	x0, [sp, #48]
    9ff8:	ldr	w0, [x0, #12]
    9ffc:	and	w0, w0, #0x800
    a000:	cmp	w0, #0x0
    a004:	b.ne	a1c4 <XS_Encode_from_to+0x4a0>  // b.any
    a008:	ldr	x0, [sp, #48]
    a00c:	cmp	x0, #0x0
    a010:	cset	w0, ne  // ne = any
    a014:	and	w0, w0, #0xff
    a018:	and	x0, x0, #0xff
    a01c:	cmp	x0, #0x0
    a020:	b.eq	a1c4 <XS_Encode_from_to+0x4a0>  // b.none
    a024:	ldr	x0, [sp, #24]
    a028:	add	x0, x0, #0x138
    a02c:	ldr	x1, [sp, #48]
    a030:	sub	x0, x1, x0
    a034:	asr	x1, x0, #3
    a038:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    a03c:	movk	x0, #0xaaab
    a040:	mul	x0, x1, x0
    a044:	cmp	x0, #0x3
    a048:	b.hi	a064 <XS_Encode_from_to+0x340>  // b.pmore
    a04c:	ldr	x0, [sp, #24]
    a050:	add	x0, x0, #0x138
    a054:	ldr	x1, [sp, #48]
    a058:	cmp	x1, x0
    a05c:	b.ne	a1c4 <XS_Encode_from_to+0x4a0>  // b.any
    a060:	b	a1b0 <XS_Encode_from_to+0x48c>
    a064:	ldr	x0, [sp, #48]
    a068:	ldr	w0, [x0, #12]
    a06c:	and	w0, w0, #0xff00
    a070:	cmp	w0, #0x0
    a074:	b.eq	a1c4 <XS_Encode_from_to+0x4a0>  // b.none
    a078:	ldr	x0, [sp, #48]
    a07c:	ldr	w0, [x0, #12]
    a080:	and	w0, w0, #0x400
    a084:	cmp	w0, #0x0
    a088:	b.eq	a0f8 <XS_Encode_from_to+0x3d4>  // b.none
    a08c:	ldr	x0, [sp, #48]
    a090:	ldr	x0, [x0]
    a094:	cmp	x0, #0x0
    a098:	b.eq	a0d8 <XS_Encode_from_to+0x3b4>  // b.none
    a09c:	ldr	x0, [sp, #48]
    a0a0:	ldr	x0, [x0]
    a0a4:	ldr	x0, [x0, #16]
    a0a8:	cmp	x0, #0x1
    a0ac:	b.hi	a0e0 <XS_Encode_from_to+0x3bc>  // b.pmore
    a0b0:	ldr	x0, [sp, #48]
    a0b4:	ldr	x0, [x0]
    a0b8:	ldr	x0, [x0, #16]
    a0bc:	cmp	x0, #0x0
    a0c0:	b.eq	a0d8 <XS_Encode_from_to+0x3b4>  // b.none
    a0c4:	ldr	x0, [sp, #48]
    a0c8:	ldr	x0, [x0, #16]
    a0cc:	ldrb	w0, [x0]
    a0d0:	cmp	w0, #0x30
    a0d4:	b.ne	a0e0 <XS_Encode_from_to+0x3bc>  // b.any
    a0d8:	mov	w0, #0x1                   	// #1
    a0dc:	b	a0e4 <XS_Encode_from_to+0x3c0>
    a0e0:	mov	w0, #0x0                   	// #0
    a0e4:	and	w0, w0, #0x1
    a0e8:	and	w0, w0, #0xff
    a0ec:	cmp	w0, #0x0
    a0f0:	b.ne	a1c4 <XS_Encode_from_to+0x4a0>  // b.any
    a0f4:	b	a1b0 <XS_Encode_from_to+0x48c>
    a0f8:	ldr	x0, [sp, #48]
    a0fc:	ldr	w0, [x0, #12]
    a100:	and	w0, w0, #0x100
    a104:	cmp	w0, #0x0
    a108:	b.eq	a124 <XS_Encode_from_to+0x400>  // b.none
    a10c:	ldr	x0, [sp, #48]
    a110:	ldr	x0, [x0]
    a114:	ldr	x0, [x0, #32]
    a118:	cmp	x0, #0x0
    a11c:	b.eq	a1c4 <XS_Encode_from_to+0x4a0>  // b.none
    a120:	b	a1b0 <XS_Encode_from_to+0x48c>
    a124:	ldr	x0, [sp, #48]
    a128:	ldr	w0, [x0, #12]
    a12c:	and	w0, w0, #0x800
    a130:	cmp	w0, #0x0
    a134:	b.eq	a170 <XS_Encode_from_to+0x44c>  // b.none
    a138:	ldr	x0, [sp, #48]
    a13c:	ldr	x0, [x0, #16]
    a140:	ldr	w0, [x0, #12]
    a144:	and	w0, w0, #0x100000
    a148:	cmp	w0, #0x0
    a14c:	b.eq	a178 <XS_Encode_from_to+0x454>  // b.none
    a150:	ldr	x0, [sp, #48]
    a154:	ldr	x0, [x0, #16]
    a158:	ldr	x0, [x0]
    a15c:	ldr	x0, [x0]
    a160:	ldr	w0, [x0, #12]
    a164:	and	w0, w0, #0x10000000
    a168:	cmp	w0, #0x0
    a16c:	b.eq	a178 <XS_Encode_from_to+0x454>  // b.none
    a170:	mov	w0, #0x1                   	// #1
    a174:	b	a17c <XS_Encode_from_to+0x458>
    a178:	mov	w0, #0x0                   	// #0
    a17c:	and	w0, w0, #0x1
    a180:	and	w0, w0, #0xff
    a184:	cmp	w0, #0x0
    a188:	b.eq	a1b0 <XS_Encode_from_to+0x48c>  // b.none
    a18c:	mov	w2, #0x0                   	// #0
    a190:	ldr	x1, [sp, #48]
    a194:	ldr	x0, [sp, #24]
    a198:	bl	2880 <Perl_sv_2bool_flags@plt>
    a19c:	and	w0, w0, #0xff
    a1a0:	eor	w0, w0, #0x1
    a1a4:	and	w0, w0, #0xff
    a1a8:	cmp	w0, #0x0
    a1ac:	b.ne	a1c4 <XS_Encode_from_to+0x4a0>  // b.any
    a1b0:	ldr	x1, [sp, #120]
    a1b4:	ldr	x0, [sp, #24]
    a1b8:	bl	2a60 <Perl_sv_len@plt>
    a1bc:	cmp	x0, #0x0
    a1c0:	b.ne	a264 <XS_Encode_from_to+0x540>  // b.any
    a1c4:	ldr	x0, [sp, #128]
    a1c8:	ldr	w1, [x0, #12]
    a1cc:	mov	w0, #0x400                 	// #1024
    a1d0:	movk	w0, #0x20, lsl #16
    a1d4:	and	w0, w1, w0
    a1d8:	cmp	w0, #0x400
    a1dc:	b.ne	a1fc <XS_Encode_from_to+0x4d8>  // b.any
    a1e0:	ldr	x0, [sp, #128]
    a1e4:	ldr	x0, [x0]
    a1e8:	ldr	x0, [x0, #16]
    a1ec:	str	x0, [sp, #40]
    a1f0:	ldr	x0, [sp, #128]
    a1f4:	ldr	x0, [x0, #16]
    a1f8:	b	a214 <XS_Encode_from_to+0x4f0>
    a1fc:	add	x0, sp, #0x28
    a200:	mov	w3, #0x0                   	// #0
    a204:	mov	x2, x0
    a208:	ldr	x1, [sp, #128]
    a20c:	ldr	x0, [sp, #24]
    a210:	bl	29d0 <Perl_sv_2pv_flags@plt>
    a214:	str	x0, [sp, #136]
    a218:	ldr	x0, [sp, #128]
    a21c:	ldr	w0, [x0, #12]
    a220:	and	w0, w0, #0x20000000
    a224:	cmp	w0, #0x0
    a228:	b.eq	a24c <XS_Encode_from_to+0x528>  // b.none
    a22c:	ldr	x0, [sp, #40]
    a230:	ldr	x1, [sp, #136]
    a234:	add	x0, x1, x0
    a238:	mov	x2, x0
    a23c:	ldr	x1, [sp, #136]
    a240:	ldr	x0, [sp, #24]
    a244:	bl	2b60 <Perl_utf8_length@plt>
    a248:	str	x0, [sp, #40]
    a24c:	ldr	x0, [sp, #40]
    a250:	mov	x1, x0
    a254:	ldr	x0, [sp, #24]
    a258:	bl	2b10 <Perl_newSVuv@plt>
    a25c:	str	x0, [sp, #56]
    a260:	b	a270 <XS_Encode_from_to+0x54c>
    a264:	ldr	x0, [sp, #24]
    a268:	add	x0, x0, #0x150
    a26c:	str	x0, [sp, #56]
    a270:	mov	w3, #0x0                   	// #0
    a274:	ldr	x2, [sp, #128]
    a278:	ldr	x1, [sp, #80]
    a27c:	ldr	x0, [sp, #24]
    a280:	bl	2ac0 <Perl_sv_setsv_flags@plt>
    a284:	ldr	x0, [sp, #80]
    a288:	ldr	w0, [x0, #12]
    a28c:	lsr	w0, w0, #22
    a290:	mov	w0, w0
    a294:	and	x0, x0, #0x1
    a298:	cmp	x0, #0x0
    a29c:	b.eq	a2ac <XS_Encode_from_to+0x588>  // b.none
    a2a0:	ldr	x1, [sp, #80]
    a2a4:	ldr	x0, [sp, #24]
    a2a8:	bl	2ab0 <Perl_mg_set@plt>
    a2ac:	ldr	x1, [sp, #56]
    a2b0:	ldr	x0, [sp, #24]
    a2b4:	bl	2ae0 <Perl_sv_2mortal@plt>
    a2b8:	str	x0, [sp, #56]
    a2bc:	ldr	x0, [sp, #24]
    a2c0:	ldr	x1, [x0, #24]
    a2c4:	ldrsw	x0, [sp, #32]
    a2c8:	lsl	x0, x0, #3
    a2cc:	add	x0, x1, x0
    a2d0:	ldr	x1, [sp, #56]
    a2d4:	str	x1, [x0]
    a2d8:	mov	x0, #0x1                   	// #1
    a2dc:	str	x0, [sp, #144]
    a2e0:	ldr	x0, [sp, #24]
    a2e4:	ldr	x1, [x0, #24]
    a2e8:	ldrsw	x2, [sp, #32]
    a2ec:	ldr	x0, [sp, #144]
    a2f0:	add	x0, x2, x0
    a2f4:	lsl	x0, x0, #3
    a2f8:	sub	x0, x0, #0x8
    a2fc:	add	x1, x1, x0
    a300:	ldr	x0, [sp, #24]
    a304:	str	x1, [x0]
    a308:	nop
    a30c:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    a310:	ldr	x0, [x0, #3992]
    a314:	ldr	x1, [sp, #152]
    a318:	ldr	x0, [x0]
    a31c:	eor	x0, x1, x0
    a320:	cmp	x0, #0x0
    a324:	b.eq	a32c <XS_Encode_from_to+0x608>  // b.none
    a328:	bl	29f0 <__stack_chk_fail@plt>
    a32c:	ldp	x29, x30, [sp], #160
    a330:	ret

000000000000a334 <XS_Encode_onBOOT>:
    a334:	stp	x29, x30, [sp, #-64]!
    a338:	mov	x29, sp
    a33c:	str	x0, [sp, #24]
    a340:	str	x1, [sp, #16]
    a344:	ldr	x0, [sp, #24]
    a348:	ldr	x0, [x0]
    a34c:	str	x0, [sp, #40]
    a350:	ldr	x0, [sp, #24]
    a354:	bl	2e20 <S_POPMARK>
    a358:	str	w0, [sp, #32]
    a35c:	ldr	x0, [sp, #24]
    a360:	ldr	x1, [x0, #24]
    a364:	ldr	w0, [sp, #32]
    a368:	add	w2, w0, #0x1
    a36c:	str	w2, [sp, #32]
    a370:	sxtw	x0, w0
    a374:	lsl	x0, x0, #3
    a378:	add	x0, x1, x0
    a37c:	str	x0, [sp, #48]
    a380:	ldr	x1, [sp, #40]
    a384:	ldr	x0, [sp, #48]
    a388:	sub	x0, x1, x0
    a38c:	asr	x0, x0, #3
    a390:	str	w0, [sp, #36]
    a394:	ldr	w0, [sp, #36]
    a398:	cmp	w0, #0x0
    a39c:	b.eq	a3b0 <XS_Encode_onBOOT+0x7c>  // b.none
    a3a0:	adrp	x0, b000 <super_cp_format+0x218>
    a3a4:	add	x1, x0, #0x1a0
    a3a8:	ldr	x0, [sp, #16]
    a3ac:	bl	2a10 <Perl_croak_xs_usage@plt>
    a3b0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    a3b4:	ldr	x1, [x0, #4056]
    a3b8:	ldr	x0, [sp, #24]
    a3bc:	bl	3e20 <Encode_XSEncoding>
    a3c0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    a3c4:	ldr	x1, [x0, #4000]
    a3c8:	ldr	x0, [sp, #24]
    a3cc:	bl	3e20 <Encode_XSEncoding>
    a3d0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    a3d4:	ldr	x1, [x0, #3960]
    a3d8:	ldr	x0, [sp, #24]
    a3dc:	bl	3e20 <Encode_XSEncoding>
    a3e0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    a3e4:	ldr	x1, [x0, #4048]
    a3e8:	ldr	x0, [sp, #24]
    a3ec:	bl	3e20 <Encode_XSEncoding>
    a3f0:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    a3f4:	ldr	x1, [x0, #4024]
    a3f8:	ldr	x0, [sp, #24]
    a3fc:	bl	3e20 <Encode_XSEncoding>
    a400:	str	xzr, [sp, #56]
    a404:	ldr	x0, [sp, #24]
    a408:	ldr	x1, [x0, #24]
    a40c:	ldrsw	x2, [sp, #32]
    a410:	ldr	x0, [sp, #56]
    a414:	add	x0, x2, x0
    a418:	lsl	x0, x0, #3
    a41c:	sub	x0, x0, #0x8
    a420:	add	x1, x1, x0
    a424:	ldr	x0, [sp, #24]
    a428:	str	x1, [x0]
    a42c:	nop
    a430:	ldp	x29, x30, [sp], #64
    a434:	ret

000000000000a438 <boot_Encode>:
    a438:	stp	x29, x30, [sp, #-112]!
    a43c:	mov	x29, sp
    a440:	str	x0, [sp, #24]
    a444:	str	x1, [sp, #16]
    a448:	adrp	x0, b000 <super_cp_format+0x218>
    a44c:	add	x4, x0, #0x1a8
    a450:	adrp	x0, b000 <super_cp_format+0x218>
    a454:	add	x3, x0, #0x1b0
    a458:	adrp	x0, b000 <super_cp_format+0x218>
    a45c:	add	x2, x0, #0x1b8
    a460:	ldr	x1, [sp, #24]
    a464:	mov	w0, #0x4e7                 	// #1255
    a468:	movk	w0, #0xd30, lsl #16
    a46c:	bl	2b40 <Perl_xs_handshake@plt>
    a470:	str	w0, [sp, #40]
    a474:	ldr	x0, [sp, #24]
    a478:	ldr	x1, [x0, #24]
    a47c:	ldrsw	x0, [sp, #40]
    a480:	lsl	x0, x0, #3
    a484:	add	x0, x1, x0
    a488:	str	x0, [sp, #48]
    a48c:	ldr	x0, [sp, #24]
    a490:	ldr	x0, [x0]
    a494:	str	x0, [sp, #56]
    a498:	ldr	x1, [sp, #56]
    a49c:	ldr	x0, [sp, #48]
    a4a0:	sub	x0, x1, x0
    a4a4:	asr	x0, x0, #3
    a4a8:	str	w0, [sp, #44]
    a4ac:	adrp	x0, b000 <super_cp_format+0x218>
    a4b0:	add	x0, x0, #0x1b8
    a4b4:	str	x0, [sp, #64]
    a4b8:	adrp	x0, 6000 <find_encoding+0xf8>
    a4bc:	add	x2, x0, #0x568
    a4c0:	adrp	x0, b000 <super_cp_format+0x218>
    a4c4:	add	x1, x0, #0x1c8
    a4c8:	ldr	x0, [sp, #24]
    a4cc:	bl	2aa0 <Perl_newXS_deffile@plt>
    a4d0:	adrp	x0, 6000 <find_encoding+0xf8>
    a4d4:	add	x2, x0, #0xc8c
    a4d8:	adrp	x0, b000 <super_cp_format+0x218>
    a4dc:	add	x1, x0, #0x1e0
    a4e0:	ldr	x0, [sp, #24]
    a4e4:	bl	2aa0 <Perl_newXS_deffile@plt>
    a4e8:	adrp	x0, 7000 <XS_Encode__utf8_encode+0x374>
    a4ec:	add	x2, x0, #0x360
    a4f0:	adrp	x0, b000 <super_cp_format+0x218>
    a4f4:	add	x1, x0, #0x1f8
    a4f8:	ldr	x0, [sp, #24]
    a4fc:	bl	2aa0 <Perl_newXS_deffile@plt>
    a500:	adrp	x0, 7000 <XS_Encode__utf8_encode+0x374>
    a504:	add	x2, x0, #0x474
    a508:	adrp	x0, b000 <super_cp_format+0x218>
    a50c:	add	x1, x0, #0x210
    a510:	ldr	x0, [sp, #24]
    a514:	bl	2aa0 <Perl_newXS_deffile@plt>
    a518:	adrp	x0, 7000 <XS_Encode__utf8_encode+0x374>
    a51c:	add	x2, x0, #0x658
    a520:	adrp	x0, b000 <super_cp_format+0x218>
    a524:	add	x1, x0, #0x228
    a528:	ldr	x0, [sp, #24]
    a52c:	bl	2aa0 <Perl_newXS_deffile@plt>
    a530:	adrp	x0, 7000 <XS_Encode__utf8_encode+0x374>
    a534:	add	x2, x0, #0x7d8
    a538:	adrp	x0, b000 <super_cp_format+0x218>
    a53c:	add	x1, x0, #0x240
    a540:	ldr	x0, [sp, #24]
    a544:	bl	2aa0 <Perl_newXS_deffile@plt>
    a548:	adrp	x0, 7000 <XS_Encode__utf8_encode+0x374>
    a54c:	add	x2, x0, #0xdb0
    a550:	adrp	x0, b000 <super_cp_format+0x218>
    a554:	add	x1, x0, #0x258
    a558:	ldr	x0, [sp, #24]
    a55c:	bl	2aa0 <Perl_newXS_deffile@plt>
    a560:	adrp	x0, 8000 <XS_Encode__XS_decode+0x250>
    a564:	add	x2, x0, #0x294
    a568:	adrp	x0, b000 <super_cp_format+0x218>
    a56c:	add	x1, x0, #0x270
    a570:	ldr	x0, [sp, #24]
    a574:	bl	2aa0 <Perl_newXS_deffile@plt>
    a578:	adrp	x0, 8000 <XS_Encode__XS_decode+0x250>
    a57c:	add	x2, x0, #0x764
    a580:	adrp	x0, b000 <super_cp_format+0x218>
    a584:	add	x1, x0, #0x288
    a588:	ldr	x0, [sp, #24]
    a58c:	bl	2aa0 <Perl_newXS_deffile@plt>
    a590:	adrp	x0, 8000 <XS_Encode__XS_decode+0x250>
    a594:	add	x2, x0, #0x874
    a598:	adrp	x0, b000 <super_cp_format+0x218>
    a59c:	add	x1, x0, #0x2a0
    a5a0:	ldr	x0, [sp, #24]
    a5a4:	bl	2aa0 <Perl_newXS_deffile@plt>
    a5a8:	adrp	x0, 8000 <XS_Encode__XS_decode+0x250>
    a5ac:	add	x2, x0, #0xb90
    a5b0:	adrp	x0, b000 <super_cp_format+0x218>
    a5b4:	add	x1, x0, #0x2b8
    a5b8:	ldr	x0, [sp, #24]
    a5bc:	bl	2aa0 <Perl_newXS_deffile@plt>
    a5c0:	mov	w5, #0x0                   	// #0
    a5c4:	adrp	x0, b000 <super_cp_format+0x218>
    a5c8:	add	x4, x0, #0x2d0
    a5cc:	ldr	x3, [sp, #64]
    a5d0:	adrp	x0, 8000 <XS_Encode__XS_decode+0x250>
    a5d4:	add	x2, x0, #0xe74
    a5d8:	adrp	x0, b000 <super_cp_format+0x218>
    a5dc:	add	x1, x0, #0x2d8
    a5e0:	ldr	x0, [sp, #24]
    a5e4:	bl	2ad0 <Perl_newXS_flags@plt>
    a5e8:	mov	w5, #0x0                   	// #0
    a5ec:	adrp	x0, b000 <super_cp_format+0x218>
    a5f0:	add	x4, x0, #0x2e8
    a5f4:	ldr	x3, [sp, #64]
    a5f8:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a5fc:	add	x2, x0, #0x170
    a600:	adrp	x0, b000 <super_cp_format+0x218>
    a604:	add	x1, x0, #0x2f0
    a608:	ldr	x0, [sp, #24]
    a60c:	bl	2ad0 <Perl_newXS_flags@plt>
    a610:	mov	w5, #0x0                   	// #0
    a614:	adrp	x0, b000 <super_cp_format+0x218>
    a618:	add	x4, x0, #0x2e8
    a61c:	ldr	x3, [sp, #64]
    a620:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a624:	add	x2, x0, #0x394
    a628:	adrp	x0, b000 <super_cp_format+0x218>
    a62c:	add	x1, x0, #0x308
    a630:	ldr	x0, [sp, #24]
    a634:	bl	2ad0 <Perl_newXS_flags@plt>
    a638:	mov	w5, #0x0                   	// #0
    a63c:	adrp	x0, b000 <super_cp_format+0x218>
    a640:	add	x4, x0, #0x320
    a644:	ldr	x3, [sp, #64]
    a648:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a64c:	add	x2, x0, #0x5b8
    a650:	adrp	x0, b000 <super_cp_format+0x218>
    a654:	add	x1, x0, #0x328
    a658:	ldr	x0, [sp, #24]
    a65c:	bl	2ad0 <Perl_newXS_flags@plt>
    a660:	str	x0, [sp, #16]
    a664:	ldr	x0, [sp, #16]
    a668:	ldr	x0, [x0]
    a66c:	str	x0, [sp, #72]
    a670:	ldr	x0, [sp, #72]
    a674:	str	wzr, [x0, #40]
    a678:	mov	w5, #0x0                   	// #0
    a67c:	adrp	x0, b000 <super_cp_format+0x218>
    a680:	add	x4, x0, #0x320
    a684:	ldr	x3, [sp, #64]
    a688:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a68c:	add	x2, x0, #0x5b8
    a690:	adrp	x0, b000 <super_cp_format+0x218>
    a694:	add	x1, x0, #0x340
    a698:	ldr	x0, [sp, #24]
    a69c:	bl	2ad0 <Perl_newXS_flags@plt>
    a6a0:	str	x0, [sp, #16]
    a6a4:	ldr	x0, [sp, #16]
    a6a8:	ldr	x0, [x0]
    a6ac:	str	x0, [sp, #80]
    a6b0:	ldr	x0, [sp, #80]
    a6b4:	str	wzr, [x0, #40]
    a6b8:	mov	w5, #0x0                   	// #0
    a6bc:	adrp	x0, b000 <super_cp_format+0x218>
    a6c0:	add	x4, x0, #0x320
    a6c4:	ldr	x3, [sp, #64]
    a6c8:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a6cc:	add	x2, x0, #0x7d4
    a6d0:	adrp	x0, b000 <super_cp_format+0x218>
    a6d4:	add	x1, x0, #0x350
    a6d8:	ldr	x0, [sp, #24]
    a6dc:	bl	2ad0 <Perl_newXS_flags@plt>
    a6e0:	str	x0, [sp, #16]
    a6e4:	ldr	x0, [sp, #16]
    a6e8:	ldr	x0, [x0]
    a6ec:	str	x0, [sp, #88]
    a6f0:	ldr	x0, [sp, #88]
    a6f4:	str	wzr, [x0, #40]
    a6f8:	mov	w5, #0x0                   	// #0
    a6fc:	adrp	x0, b000 <super_cp_format+0x218>
    a700:	add	x4, x0, #0x320
    a704:	ldr	x3, [sp, #64]
    a708:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a70c:	add	x2, x0, #0x7d4
    a710:	adrp	x0, b000 <super_cp_format+0x218>
    a714:	add	x1, x0, #0x360
    a718:	ldr	x0, [sp, #24]
    a71c:	bl	2ad0 <Perl_newXS_flags@plt>
    a720:	str	x0, [sp, #16]
    a724:	ldr	x0, [sp, #16]
    a728:	ldr	x0, [x0]
    a72c:	str	x0, [sp, #96]
    a730:	ldr	x0, [sp, #96]
    a734:	str	wzr, [x0, #40]
    a738:	mov	w5, #0x0                   	// #0
    a73c:	adrp	x0, b000 <super_cp_format+0x218>
    a740:	add	x4, x0, #0x2d0
    a744:	ldr	x3, [sp, #64]
    a748:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a74c:	add	x2, x0, #0x9f0
    a750:	adrp	x0, b000 <super_cp_format+0x218>
    a754:	add	x1, x0, #0x378
    a758:	ldr	x0, [sp, #24]
    a75c:	bl	2ad0 <Perl_newXS_flags@plt>
    a760:	mov	w5, #0x0                   	// #0
    a764:	adrp	x0, b000 <super_cp_format+0x218>
    a768:	add	x4, x0, #0x2e8
    a76c:	ldr	x3, [sp, #64]
    a770:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a774:	add	x2, x0, #0xbf0
    a778:	adrp	x0, b000 <super_cp_format+0x218>
    a77c:	add	x1, x0, #0x390
    a780:	ldr	x0, [sp, #24]
    a784:	bl	2ad0 <Perl_newXS_flags@plt>
    a788:	mov	w5, #0x0                   	// #0
    a78c:	adrp	x0, b000 <super_cp_format+0x218>
    a790:	add	x4, x0, #0x3a8
    a794:	ldr	x3, [sp, #64]
    a798:	adrp	x0, 9000 <XS_Encode_is_utf8+0x18c>
    a79c:	add	x2, x0, #0xd24
    a7a0:	adrp	x0, b000 <super_cp_format+0x218>
    a7a4:	add	x1, x0, #0x3b0
    a7a8:	ldr	x0, [sp, #24]
    a7ac:	bl	2ad0 <Perl_newXS_flags@plt>
    a7b0:	mov	w5, #0x0                   	// #0
    a7b4:	adrp	x0, b000 <super_cp_format+0x218>
    a7b8:	add	x4, x0, #0x1a0
    a7bc:	ldr	x3, [sp, #64]
    a7c0:	adrp	x0, a000 <XS_Encode_from_to+0x2dc>
    a7c4:	add	x2, x0, #0x334
    a7c8:	adrp	x0, b000 <super_cp_format+0x218>
    a7cc:	add	x1, x0, #0x3c0
    a7d0:	ldr	x0, [sp, #24]
    a7d4:	bl	2ad0 <Perl_newXS_flags@plt>
    a7d8:	mov	w3, #0x1                   	// #1
    a7dc:	mov	w2, #0x6                   	// #6
    a7e0:	adrp	x0, b000 <super_cp_format+0x218>
    a7e4:	add	x1, x0, #0x3d0
    a7e8:	ldr	x0, [sp, #24]
    a7ec:	bl	29a0 <Perl_gv_stashpvn@plt>
    a7f0:	str	x0, [sp, #104]
    a7f4:	mov	x1, #0x1                   	// #1
    a7f8:	ldr	x0, [sp, #24]
    a7fc:	bl	2c30 <Perl_newSViv@plt>
    a800:	mov	x3, x0
    a804:	adrp	x0, b000 <super_cp_format+0x218>
    a808:	add	x2, x0, #0x3d8
    a80c:	ldr	x1, [sp, #104]
    a810:	ldr	x0, [sp, #24]
    a814:	bl	2950 <Perl_newCONSTSUB@plt>
    a818:	mov	x1, #0x2                   	// #2
    a81c:	ldr	x0, [sp, #24]
    a820:	bl	2c30 <Perl_newSViv@plt>
    a824:	mov	x3, x0
    a828:	adrp	x0, b000 <super_cp_format+0x218>
    a82c:	add	x2, x0, #0x3e8
    a830:	ldr	x1, [sp, #104]
    a834:	ldr	x0, [sp, #24]
    a838:	bl	2950 <Perl_newCONSTSUB@plt>
    a83c:	mov	x1, #0x4                   	// #4
    a840:	ldr	x0, [sp, #24]
    a844:	bl	2c30 <Perl_newSViv@plt>
    a848:	mov	x3, x0
    a84c:	adrp	x0, b000 <super_cp_format+0x218>
    a850:	add	x2, x0, #0x3f8
    a854:	ldr	x1, [sp, #104]
    a858:	ldr	x0, [sp, #24]
    a85c:	bl	2950 <Perl_newCONSTSUB@plt>
    a860:	mov	x1, #0x8                   	// #8
    a864:	ldr	x0, [sp, #24]
    a868:	bl	2c30 <Perl_newSViv@plt>
    a86c:	mov	x3, x0
    a870:	adrp	x0, b000 <super_cp_format+0x218>
    a874:	add	x2, x0, #0x408
    a878:	ldr	x1, [sp, #104]
    a87c:	ldr	x0, [sp, #24]
    a880:	bl	2950 <Perl_newCONSTSUB@plt>
    a884:	mov	x1, #0x10                  	// #16
    a888:	ldr	x0, [sp, #24]
    a88c:	bl	2c30 <Perl_newSViv@plt>
    a890:	mov	x3, x0
    a894:	adrp	x0, b000 <super_cp_format+0x218>
    a898:	add	x2, x0, #0x418
    a89c:	ldr	x1, [sp, #104]
    a8a0:	ldr	x0, [sp, #24]
    a8a4:	bl	2950 <Perl_newCONSTSUB@plt>
    a8a8:	mov	x1, #0x100                 	// #256
    a8ac:	ldr	x0, [sp, #24]
    a8b0:	bl	2c30 <Perl_newSViv@plt>
    a8b4:	mov	x3, x0
    a8b8:	adrp	x0, b000 <super_cp_format+0x218>
    a8bc:	add	x2, x0, #0x430
    a8c0:	ldr	x1, [sp, #104]
    a8c4:	ldr	x0, [sp, #24]
    a8c8:	bl	2950 <Perl_newCONSTSUB@plt>
    a8cc:	mov	x1, #0x200                 	// #512
    a8d0:	ldr	x0, [sp, #24]
    a8d4:	bl	2c30 <Perl_newSViv@plt>
    a8d8:	mov	x3, x0
    a8dc:	adrp	x0, b000 <super_cp_format+0x218>
    a8e0:	add	x2, x0, #0x438
    a8e4:	ldr	x1, [sp, #104]
    a8e8:	ldr	x0, [sp, #24]
    a8ec:	bl	2950 <Perl_newCONSTSUB@plt>
    a8f0:	mov	x1, #0x400                 	// #1024
    a8f4:	ldr	x0, [sp, #24]
    a8f8:	bl	2c30 <Perl_newSViv@plt>
    a8fc:	mov	x3, x0
    a900:	adrp	x0, b000 <super_cp_format+0x218>
    a904:	add	x2, x0, #0x448
    a908:	ldr	x1, [sp, #104]
    a90c:	ldr	x0, [sp, #24]
    a910:	bl	2950 <Perl_newCONSTSUB@plt>
    a914:	mov	x1, #0x800                 	// #2048
    a918:	ldr	x0, [sp, #24]
    a91c:	bl	2c30 <Perl_newSViv@plt>
    a920:	mov	x3, x0
    a924:	adrp	x0, b000 <super_cp_format+0x218>
    a928:	add	x2, x0, #0x450
    a92c:	ldr	x1, [sp, #104]
    a930:	ldr	x0, [sp, #24]
    a934:	bl	2950 <Perl_newCONSTSUB@plt>
    a938:	mov	x1, #0x0                   	// #0
    a93c:	ldr	x0, [sp, #24]
    a940:	bl	2c30 <Perl_newSViv@plt>
    a944:	mov	x3, x0
    a948:	adrp	x0, b000 <super_cp_format+0x218>
    a94c:	add	x2, x0, #0x460
    a950:	ldr	x1, [sp, #104]
    a954:	ldr	x0, [sp, #24]
    a958:	bl	2950 <Perl_newCONSTSUB@plt>
    a95c:	mov	x1, #0x1                   	// #1
    a960:	ldr	x0, [sp, #24]
    a964:	bl	2c30 <Perl_newSViv@plt>
    a968:	mov	x3, x0
    a96c:	adrp	x0, b000 <super_cp_format+0x218>
    a970:	add	x2, x0, #0x470
    a974:	ldr	x1, [sp, #104]
    a978:	ldr	x0, [sp, #24]
    a97c:	bl	2950 <Perl_newCONSTSUB@plt>
    a980:	mov	x1, #0x4                   	// #4
    a984:	ldr	x0, [sp, #24]
    a988:	bl	2c30 <Perl_newSViv@plt>
    a98c:	mov	x3, x0
    a990:	adrp	x0, b000 <super_cp_format+0x218>
    a994:	add	x2, x0, #0x480
    a998:	ldr	x1, [sp, #104]
    a99c:	ldr	x0, [sp, #24]
    a9a0:	bl	2950 <Perl_newCONSTSUB@plt>
    a9a4:	mov	x1, #0x6                   	// #6
    a9a8:	ldr	x0, [sp, #24]
    a9ac:	bl	2c30 <Perl_newSViv@plt>
    a9b0:	mov	x3, x0
    a9b4:	adrp	x0, b000 <super_cp_format+0x218>
    a9b8:	add	x2, x0, #0x490
    a9bc:	ldr	x1, [sp, #104]
    a9c0:	ldr	x0, [sp, #24]
    a9c4:	bl	2950 <Perl_newCONSTSUB@plt>
    a9c8:	mov	x1, #0x108                 	// #264
    a9cc:	ldr	x0, [sp, #24]
    a9d0:	bl	2c30 <Perl_newSViv@plt>
    a9d4:	mov	x3, x0
    a9d8:	adrp	x0, b000 <super_cp_format+0x218>
    a9dc:	add	x2, x0, #0x498
    a9e0:	ldr	x1, [sp, #104]
    a9e4:	ldr	x0, [sp, #24]
    a9e8:	bl	2950 <Perl_newCONSTSUB@plt>
    a9ec:	mov	x1, #0x208                 	// #520
    a9f0:	ldr	x0, [sp, #24]
    a9f4:	bl	2c30 <Perl_newSViv@plt>
    a9f8:	mov	x3, x0
    a9fc:	adrp	x0, b000 <super_cp_format+0x218>
    aa00:	add	x2, x0, #0x4a8
    aa04:	ldr	x1, [sp, #104]
    aa08:	ldr	x0, [sp, #24]
    aa0c:	bl	2950 <Perl_newCONSTSUB@plt>
    aa10:	mov	x1, #0x408                 	// #1032
    aa14:	ldr	x0, [sp, #24]
    aa18:	bl	2c30 <Perl_newSViv@plt>
    aa1c:	mov	x3, x0
    aa20:	adrp	x0, b000 <super_cp_format+0x218>
    aa24:	add	x2, x0, #0x4b8
    aa28:	ldr	x1, [sp, #104]
    aa2c:	ldr	x0, [sp, #24]
    aa30:	bl	2950 <Perl_newCONSTSUB@plt>
    aa34:	ldr	w1, [sp, #40]
    aa38:	ldr	x0, [sp, #24]
    aa3c:	bl	29e0 <Perl_xs_boot_epilog@plt>
    aa40:	nop
    aa44:	ldp	x29, x30, [sp], #112
    aa48:	ret

000000000000aa4c <S_croak_memory_wrap>:
    aa4c:	stp	x29, x30, [sp, #-16]!
    aa50:	mov	x29, sp
    aa54:	adrp	x0, 1c000 <__FRAME_END__+0xfee8>
    aa58:	ldr	x1, [x0, #4008]
    aa5c:	adrp	x0, b000 <super_cp_format+0x218>
    aa60:	add	x0, x0, #0x840
    aa64:	bl	2a90 <Perl_croak_nocontext@plt>

000000000000aa68 <do_encode>:
    aa68:	stp	x29, x30, [sp, #-176]!
    aa6c:	mov	x29, sp
    aa70:	str	x0, [sp, #72]
    aa74:	str	x1, [sp, #64]
    aa78:	str	x2, [sp, #56]
    aa7c:	str	x3, [sp, #48]
    aa80:	str	x4, [sp, #40]
    aa84:	str	x5, [sp, #32]
    aa88:	str	w6, [sp, #28]
    aa8c:	str	x7, [sp, #16]
    aa90:	ldr	x0, [sp, #64]
    aa94:	str	x0, [sp, #88]
    aa98:	ldr	x0, [sp, #56]
    aa9c:	ldr	x0, [x0]
    aaa0:	ldr	x1, [sp, #88]
    aaa4:	add	x0, x1, x0
    aaa8:	str	x0, [sp, #136]
    aaac:	ldr	x0, [sp, #88]
    aab0:	str	x0, [sp, #96]
    aab4:	ldr	x0, [sp, #48]
    aab8:	str	x0, [sp, #104]
    aabc:	ldr	x1, [sp, #104]
    aac0:	ldr	x0, [sp, #40]
    aac4:	add	x0, x1, x0
    aac8:	str	x0, [sp, #144]
    aacc:	ldr	x0, [sp, #104]
    aad0:	str	x0, [sp, #112]
    aad4:	str	wzr, [sp, #84]
    aad8:	ldr	x0, [sp, #48]
    aadc:	cmp	x0, #0x0
    aae0:	b.ne	ad18 <do_encode+0x2b0>  // b.any
    aae4:	mov	w0, #0x1                   	// #1
    aae8:	b	ad5c <do_encode+0x2f4>
    aaec:	ldr	x0, [sp, #72]
    aaf0:	str	x0, [sp, #120]
    aaf4:	ldr	x0, [sp, #88]
    aaf8:	ldrb	w0, [x0]
    aafc:	strb	w0, [sp, #83]
    ab00:	b	ab10 <do_encode+0xa8>
    ab04:	ldr	x0, [sp, #120]
    ab08:	add	x0, x0, #0x18
    ab0c:	str	x0, [sp, #120]
    ab10:	ldr	x0, [sp, #120]
    ab14:	ldrb	w0, [x0, #17]
    ab18:	ldrb	w1, [sp, #83]
    ab1c:	cmp	w1, w0
    ab20:	b.hi	ab04 <do_encode+0x9c>  // b.pmore
    ab24:	ldr	x0, [sp, #120]
    ab28:	ldrb	w0, [x0, #16]
    ab2c:	ldrb	w1, [sp, #83]
    ab30:	cmp	w1, w0
    ab34:	b.cc	ad0c <do_encode+0x2a4>  // b.lo, b.ul, b.last
    ab38:	ldr	x0, [sp, #120]
    ab3c:	ldrb	w0, [x0, #19]
    ab40:	cmp	w0, #0x0
    ab44:	b.eq	ad0c <do_encode+0x2a4>  // b.none
    ab48:	ldr	w0, [sp, #28]
    ab4c:	cmp	w0, #0x0
    ab50:	b.ne	ab68 <do_encode+0x100>  // b.any
    ab54:	ldr	x0, [sp, #120]
    ab58:	ldrb	w0, [x0, #19]
    ab5c:	sxtb	w0, w0
    ab60:	cmp	w0, #0x0
    ab64:	b.lt	ad0c <do_encode+0x2a4>  // b.tstop
    ab68:	ldr	x0, [sp, #120]
    ab6c:	ldrb	w0, [x0, #19]
    ab70:	and	x0, x0, #0xff
    ab74:	and	x0, x0, #0x7f
    ab78:	ldr	x1, [sp, #88]
    ab7c:	add	x0, x1, x0
    ab80:	str	x0, [sp, #152]
    ab84:	ldr	x1, [sp, #152]
    ab88:	ldr	x0, [sp, #136]
    ab8c:	cmp	x1, x0
    ab90:	b.hi	ad00 <do_encode+0x298>  // b.pmore
    ab94:	ldr	x0, [sp, #120]
    ab98:	ldrb	w0, [x0, #18]
    ab9c:	and	x0, x0, #0xff
    aba0:	str	x0, [sp, #160]
    aba4:	ldr	x0, [sp, #160]
    aba8:	cmp	x0, #0x0
    abac:	b.eq	ac54 <do_encode+0x1ec>  // b.none
    abb0:	ldr	x0, [sp, #120]
    abb4:	ldr	x1, [x0]
    abb8:	ldrb	w0, [sp, #83]
    abbc:	ldr	x2, [sp, #120]
    abc0:	ldrb	w2, [x2, #16]
    abc4:	sub	w0, w0, w2
    abc8:	sxtw	x2, w0
    abcc:	ldr	x0, [sp, #160]
    abd0:	mul	x0, x2, x0
    abd4:	add	x0, x1, x0
    abd8:	str	x0, [sp, #128]
    abdc:	ldr	x1, [sp, #104]
    abe0:	ldr	x0, [sp, #160]
    abe4:	add	x0, x1, x0
    abe8:	str	x0, [sp, #168]
    abec:	ldr	x0, [sp, #48]
    abf0:	cmp	x0, #0x0
    abf4:	b.eq	ac4c <do_encode+0x1e4>  // b.none
    abf8:	ldr	x1, [sp, #168]
    abfc:	ldr	x0, [sp, #144]
    ac00:	cmp	x1, x0
    ac04:	b.hi	ac40 <do_encode+0x1d8>  // b.pmore
    ac08:	b	ac2c <do_encode+0x1c4>
    ac0c:	ldr	x1, [sp, #128]
    ac10:	add	x0, x1, #0x1
    ac14:	str	x0, [sp, #128]
    ac18:	ldr	x0, [sp, #104]
    ac1c:	add	x2, x0, #0x1
    ac20:	str	x2, [sp, #104]
    ac24:	ldrb	w1, [x1]
    ac28:	strb	w1, [x0]
    ac2c:	ldr	x1, [sp, #104]
    ac30:	ldr	x0, [sp, #168]
    ac34:	cmp	x1, x0
    ac38:	b.cc	ac0c <do_encode+0x1a4>  // b.lo, b.ul, b.last
    ac3c:	b	ac54 <do_encode+0x1ec>
    ac40:	mov	w0, #0x1                   	// #1
    ac44:	str	w0, [sp, #84]
    ac48:	b	ad28 <do_encode+0x2c0>
    ac4c:	ldr	x0, [sp, #168]
    ac50:	str	x0, [sp, #104]
    ac54:	ldr	x0, [sp, #120]
    ac58:	ldr	x0, [x0, #8]
    ac5c:	str	x0, [sp, #72]
    ac60:	ldr	x0, [sp, #88]
    ac64:	add	x0, x0, #0x1
    ac68:	str	x0, [sp, #88]
    ac6c:	ldr	x1, [sp, #88]
    ac70:	ldr	x0, [sp, #152]
    ac74:	cmp	x1, x0
    ac78:	b.ne	ad18 <do_encode+0x2b0>  // b.any
    ac7c:	ldr	w0, [sp, #28]
    ac80:	cmp	w0, #0x0
    ac84:	b.eq	aca4 <do_encode+0x23c>  // b.none
    ac88:	ldr	x0, [sp, #120]
    ac8c:	ldrb	w0, [x0, #19]
    ac90:	sxtb	w0, w0
    ac94:	cmp	w0, #0x0
    ac98:	b.ge	aca4 <do_encode+0x23c>  // b.tcont
    ac9c:	mov	w0, #0x4                   	// #4
    aca0:	str	w0, [sp, #84]
    aca4:	ldr	x0, [sp, #88]
    aca8:	str	x0, [sp, #96]
    acac:	ldr	x0, [sp, #16]
    acb0:	cmp	x0, #0x0
    acb4:	b.eq	acf4 <do_encode+0x28c>  // b.none
    acb8:	ldr	x1, [sp, #104]
    acbc:	ldr	x0, [sp, #112]
    acc0:	sub	x1, x1, x0
    acc4:	ldr	x0, [sp, #176]
    acc8:	cmp	x1, x0
    accc:	b.ne	acf4 <do_encode+0x28c>  // b.any
    acd0:	ldr	x2, [sp, #176]
    acd4:	ldr	x1, [sp, #16]
    acd8:	ldr	x0, [sp, #112]
    acdc:	bl	2a80 <memcmp@plt>
    ace0:	cmp	w0, #0x0
    ace4:	b.ne	acf4 <do_encode+0x28c>  // b.any
    ace8:	mov	w0, #0x5                   	// #5
    acec:	str	w0, [sp, #84]
    acf0:	b	ad28 <do_encode+0x2c0>
    acf4:	ldr	x0, [sp, #104]
    acf8:	str	x0, [sp, #112]
    acfc:	b	ad18 <do_encode+0x2b0>
    ad00:	mov	w0, #0x2                   	// #2
    ad04:	str	w0, [sp, #84]
    ad08:	b	ad28 <do_encode+0x2c0>
    ad0c:	mov	w0, #0x3                   	// #3
    ad10:	str	w0, [sp, #84]
    ad14:	b	ad28 <do_encode+0x2c0>
    ad18:	ldr	x1, [sp, #88]
    ad1c:	ldr	x0, [sp, #136]
    ad20:	cmp	x1, x0
    ad24:	b.cc	aaec <do_encode+0x84>  // b.lo, b.ul, b.last
    ad28:	ldr	x1, [sp, #96]
    ad2c:	ldr	x0, [sp, #64]
    ad30:	sub	x0, x1, x0
    ad34:	mov	x1, x0
    ad38:	ldr	x0, [sp, #56]
    ad3c:	str	x1, [x0]
    ad40:	ldr	x1, [sp, #104]
    ad44:	ldr	x0, [sp, #48]
    ad48:	sub	x0, x1, x0
    ad4c:	mov	x1, x0
    ad50:	ldr	x0, [sp, #32]
    ad54:	str	x1, [x0]
    ad58:	ldr	w0, [sp, #84]
    ad5c:	ldp	x29, x30, [sp], #176
    ad60:	ret

Disassembly of section .fini:

000000000000ad64 <_fini>:
    ad64:	stp	x29, x30, [sp, #-16]!
    ad68:	mov	x29, sp
    ad6c:	ldp	x29, x30, [sp], #16
    ad70:	ret
