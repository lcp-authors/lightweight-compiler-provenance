
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblsan.so.0.0.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006618 <.init>:
    6618:	stp	x29, x30, [sp, #-16]!
    661c:	mov	x29, sp
    6620:	bl	6d70 <*ABS*+0x10@plt+0x10>
    6624:	ldp	x29, x30, [sp], #16
    6628:	ret

Disassembly of section .plt:

0000000000006630 <_Unwind_Backtrace@plt-0x20>:
    6630:	stp	x16, x30, [sp, #-16]!
    6634:	adrp	x16, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6638:	ldr	x17, [x16, #4088]
    663c:	add	x16, x16, #0xff8
    6640:	br	x17
    6644:	nop
    6648:	nop
    664c:	nop

0000000000006650 <_Unwind_Backtrace@plt>:
    6650:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16]
    6658:	add	x16, x16, #0x0
    665c:	br	x17

0000000000006660 <__fxstat@plt>:
    6660:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #8]
    6668:	add	x16, x16, #0x8
    666c:	br	x17

0000000000006670 <__sanitizer_report_error_summary@plt>:
    6670:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6674:	ldr	x17, [x16, #16]
    6678:	add	x16, x16, #0x10
    667c:	br	x17

0000000000006680 <OnPrint@plt>:
    6680:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6684:	ldr	x17, [x16, #24]
    6688:	add	x16, x16, #0x18
    668c:	br	x17

0000000000006690 <__lsan_default_options@plt>:
    6690:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6694:	ldr	x17, [x16, #32]
    6698:	add	x16, x16, #0x20
    669c:	br	x17

00000000000066a0 <__asan_cplus_demangle_init_info@plt>:
    66a0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    66a4:	ldr	x17, [x16, #40]
    66a8:	add	x16, x16, #0x28
    66ac:	br	x17

00000000000066b0 <__asan_backtrace_qsort@plt>:
    66b0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16, #48]
    66b8:	add	x16, x16, #0x30
    66bc:	br	x17

00000000000066c0 <readlink@plt>:
    66c0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #56]
    66c8:	add	x16, x16, #0x38
    66cc:	br	x17

00000000000066d0 <shm_open@plt>:
    66d0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #64]
    66d8:	add	x16, x16, #0x40
    66dc:	br	x17

00000000000066e0 <sched_getaffinity@plt>:
    66e0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #72]
    66e8:	add	x16, x16, #0x48
    66ec:	br	x17

00000000000066f0 <free@plt>:
    66f0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #80]
    66f8:	add	x16, x16, #0x50
    66fc:	br	x17

0000000000006700 <__asan_backtrace_pcinfo@plt>:
    6700:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #88]
    6708:	add	x16, x16, #0x58
    670c:	br	x17

0000000000006710 <execv@plt>:
    6710:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #96]
    6718:	add	x16, x16, #0x60
    671c:	br	x17

0000000000006720 <pipe@plt>:
    6720:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #104]
    6728:	add	x16, x16, #0x68
    672c:	br	x17

0000000000006730 <pthread_attr_getdetachstate@plt>:
    6730:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #112]
    6738:	add	x16, x16, #0x70
    673c:	br	x17

0000000000006740 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6740:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #120]
    6748:	add	x16, x16, #0x78
    674c:	br	x17

0000000000006750 <__asan_cplus_demangle_type@plt>:
    6750:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #128]
    6758:	add	x16, x16, #0x80
    675c:	br	x17

0000000000006760 <__asan_backtrace_release_view@plt>:
    6760:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #136]
    6768:	add	x16, x16, #0x88
    676c:	br	x17

0000000000006770 <__asan_backtrace_dwarf_add@plt>:
    6770:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #144]
    6778:	add	x16, x16, #0x90
    677c:	br	x17

0000000000006780 <__sanitizer_malloc_hook@plt>:
    6780:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #152]
    6788:	add	x16, x16, #0x98
    678c:	br	x17

0000000000006790 <dlvsym@plt>:
    6790:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #160]
    6798:	add	x16, x16, #0xa0
    679c:	br	x17

00000000000067a0 <pthread_getattr_np@plt>:
    67a0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #168]
    67a8:	add	x16, x16, #0xa8
    67ac:	br	x17

00000000000067b0 <__sanitizer_symbolize_demangle@plt>:
    67b0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #176]
    67b8:	add	x16, x16, #0xb0
    67bc:	br	x17

00000000000067c0 <__asan_cplus_demangle_fill_name@plt>:
    67c0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #184]
    67c8:	add	x16, x16, #0xb8
    67cc:	br	x17

00000000000067d0 <__asan_internal_memcpy@plt>:
    67d0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #192]
    67d8:	add	x16, x16, #0xc0
    67dc:	br	x17

00000000000067e0 <__asan_internal_strlen@plt>:
    67e0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #200]
    67e8:	add	x16, x16, #0xc8
    67ec:	br	x17

00000000000067f0 <open@plt>:
    67f0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #208]
    67f8:	add	x16, x16, #0xd0
    67fc:	br	x17

0000000000006800 <pthread_attr_init@plt>:
    6800:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #216]
    6808:	add	x16, x16, #0xd8
    680c:	br	x17

0000000000006810 <real_pthread_attr_getstack@plt>:
    6810:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #224]
    6818:	add	x16, x16, #0xe0
    681c:	br	x17

0000000000006820 <sleep@plt>:
    6820:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #232]
    6828:	add	x16, x16, #0xe8
    682c:	br	x17

0000000000006830 <dlsym@plt>:
    6830:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #240]
    6838:	add	x16, x16, #0xf0
    683c:	br	x17

0000000000006840 <__asan_backtrace_vector_grow@plt>:
    6840:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #248]
    6848:	add	x16, x16, #0xf8
    684c:	br	x17

0000000000006850 <__asan_backtrace_syminfo@plt>:
    6850:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #256]
    6858:	add	x16, x16, #0x100
    685c:	br	x17

0000000000006860 <__asan_internal_memset@plt>:
    6860:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #264]
    6868:	add	x16, x16, #0x108
    686c:	br	x17

0000000000006870 <memset@plt>:
    6870:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #272]
    6878:	add	x16, x16, #0x110
    687c:	br	x17

0000000000006880 <__sanitizer_symbolize_data@plt>:
    6880:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #280]
    6888:	add	x16, x16, #0x118
    688c:	br	x17

0000000000006890 <isatty@plt>:
    6890:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #288]
    6898:	add	x16, x16, #0x120
    689c:	br	x17

00000000000068a0 <dlerror@plt>:
    68a0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #296]
    68a8:	add	x16, x16, #0x128
    68ac:	br	x17

00000000000068b0 <__cxa_finalize@plt>:
    68b0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #304]
    68b8:	add	x16, x16, #0x130
    68bc:	br	x17

00000000000068c0 <__asan_backtrace_alloc@plt>:
    68c0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #312]
    68c8:	add	x16, x16, #0x138
    68cc:	br	x17

00000000000068d0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    68d0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #320]
    68d8:	add	x16, x16, #0x140
    68dc:	br	x17

00000000000068e0 <getrusage@plt>:
    68e0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #328]
    68e8:	add	x16, x16, #0x148
    68ec:	br	x17

00000000000068f0 <pthread_attr_destroy@plt>:
    68f0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #336]
    68f8:	add	x16, x16, #0x150
    68fc:	br	x17

0000000000006900 <sprintf@plt>:
    6900:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #344]
    6908:	add	x16, x16, #0x158
    690c:	br	x17

0000000000006910 <__asan_backtrace_vector_release@plt>:
    6910:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #352]
    6918:	add	x16, x16, #0x160
    691c:	br	x17

0000000000006920 <real_clock_gettime@plt>:
    6920:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #360]
    6928:	add	x16, x16, #0x168
    692c:	br	x17

0000000000006930 <__cxa_demangle@plt>:
    6930:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #368]
    6938:	add	x16, x16, #0x170
    693c:	br	x17

0000000000006940 <__sanitizer_symbolize_code@plt>:
    6940:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #376]
    6948:	add	x16, x16, #0x178
    694c:	br	x17

0000000000006950 <dl_iterate_phdr@plt>:
    6950:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #384]
    6958:	add	x16, x16, #0x180
    695c:	br	x17

0000000000006960 <__sanitizer_dump_coverage@plt>:
    6960:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #392]
    6968:	add	x16, x16, #0x188
    696c:	br	x17

0000000000006970 <clock_gettime@plt>:
    6970:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #400]
    6978:	add	x16, x16, #0x190
    697c:	br	x17

0000000000006980 <__lsan_default_suppressions@plt>:
    6980:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #408]
    6988:	add	x16, x16, #0x198
    698c:	br	x17

0000000000006990 <getpid@plt>:
    6990:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #416]
    6998:	add	x16, x16, #0x1a0
    699c:	br	x17

00000000000069a0 <__lsan_is_turned_off@plt>:
    69a0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #424]
    69a8:	add	x16, x16, #0x1a8
    69ac:	br	x17

00000000000069b0 <__sanitizer_symbolize_flush@plt>:
    69b0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #432]
    69b8:	add	x16, x16, #0x1b0
    69bc:	br	x17

00000000000069c0 <__asan_backtrace_create_state@plt>:
    69c0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #440]
    69c8:	add	x16, x16, #0x1b8
    69cc:	br	x17

00000000000069d0 <mmap@plt>:
    69d0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #448]
    69d8:	add	x16, x16, #0x1c0
    69dc:	br	x17

00000000000069e0 <pthread_setspecific@plt>:
    69e0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #456]
    69e8:	add	x16, x16, #0x1c8
    69ec:	br	x17

00000000000069f0 <munmap@plt>:
    69f0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #464]
    69f8:	add	x16, x16, #0x1d0
    69fc:	br	x17

0000000000006a00 <__asan_cplus_demangle_print_callback@plt>:
    6a00:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #472]
    6a08:	add	x16, x16, #0x1d8
    6a0c:	br	x17

0000000000006a10 <__cxa_atexit@plt>:
    6a10:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #480]
    6a18:	add	x16, x16, #0x1e0
    6a1c:	br	x17

0000000000006a20 <snprintf@plt>:
    6a20:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #488]
    6a28:	add	x16, x16, #0x1e8
    6a2c:	br	x17

0000000000006a30 <malloc@plt>:
    6a30:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #496]
    6a38:	add	x16, x16, #0x1f0
    6a3c:	br	x17

0000000000006a40 <pthread_attr_getstack@plt>:
    6a40:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #504]
    6a48:	add	x16, x16, #0x1f8
    6a4c:	br	x17

0000000000006a50 <pthread_attr_setstacksize@plt>:
    6a50:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #512]
    6a58:	add	x16, x16, #0x200
    6a5c:	br	x17

0000000000006a60 <_Unwind_GetIP@plt>:
    6a60:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #520]
    6a68:	add	x16, x16, #0x208
    6a6c:	br	x17

0000000000006a70 <madvise@plt>:
    6a70:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #528]
    6a78:	add	x16, x16, #0x210
    6a7c:	br	x17

0000000000006a80 <usleep@plt>:
    6a80:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #536]
    6a88:	add	x16, x16, #0x218
    6a8c:	br	x17

0000000000006a90 <shm_unlink@plt>:
    6a90:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #544]
    6a98:	add	x16, x16, #0x220
    6a9c:	br	x17

0000000000006aa0 <__sched_cpucount@plt>:
    6aa0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #552]
    6aa8:	add	x16, x16, #0x228
    6aac:	br	x17

0000000000006ab0 <strrchr@plt>:
    6ab0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #560]
    6ab8:	add	x16, x16, #0x230
    6abc:	br	x17

0000000000006ac0 <__errno_location@plt>:
    6ac0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #568]
    6ac8:	add	x16, x16, #0x238
    6acc:	br	x17

0000000000006ad0 <sched_yield@plt>:
    6ad0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #576]
    6ad8:	add	x16, x16, #0x240
    6adc:	br	x17

0000000000006ae0 <__asan_backtrace_get_view@plt>:
    6ae0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #584]
    6ae8:	add	x16, x16, #0x248
    6aec:	br	x17

0000000000006af0 <syslog@plt>:
    6af0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #592]
    6af8:	add	x16, x16, #0x250
    6afc:	br	x17

0000000000006b00 <sigaction@plt>:
    6b00:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #600]
    6b08:	add	x16, x16, #0x258
    6b0c:	br	x17

0000000000006b10 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6b10:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #608]
    6b18:	add	x16, x16, #0x260
    6b1c:	br	x17

0000000000006b20 <__asan_cplus_demangle_fill_extended_operator@plt>:
    6b20:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #616]
    6b28:	add	x16, x16, #0x268
    6b2c:	br	x17

0000000000006b30 <__asan_internal_strcmp@plt>:
    6b30:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #624]
    6b38:	add	x16, x16, #0x270
    6b3c:	br	x17

0000000000006b40 <__lsan_init@plt>:
    6b40:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #632]
    6b48:	add	x16, x16, #0x278
    6b4c:	br	x17

0000000000006b50 <__asan_internal_strnlen@plt>:
    6b50:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #640]
    6b58:	add	x16, x16, #0x280
    6b5c:	br	x17

0000000000006b60 <close@plt>:
    6b60:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #648]
    6b68:	add	x16, x16, #0x288
    6b6c:	br	x17

0000000000006b70 <__asan_internal_strncmp@plt>:
    6b70:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #656]
    6b78:	add	x16, x16, #0x290
    6b7c:	br	x17

0000000000006b80 <pthread_key_create@plt>:
    6b80:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #664]
    6b88:	add	x16, x16, #0x298
    6b8c:	br	x17

0000000000006b90 <__asan_cplus_demangle_fill_ctor@plt>:
    6b90:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #672]
    6b98:	add	x16, x16, #0x2a0
    6b9c:	br	x17

0000000000006ba0 <setrlimit@plt>:
    6ba0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #680]
    6ba8:	add	x16, x16, #0x2a8
    6bac:	br	x17

0000000000006bb0 <getauxval@plt>:
    6bb0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #688]
    6bb8:	add	x16, x16, #0x2b0
    6bbc:	br	x17

0000000000006bc0 <__asan_backtrace_free@plt>:
    6bc0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #696]
    6bc8:	add	x16, x16, #0x2b8
    6bcc:	br	x17

0000000000006bd0 <__lxstat@plt>:
    6bd0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #704]
    6bd8:	add	x16, x16, #0x2c0
    6bdc:	br	x17

0000000000006be0 <__sanitizer_free_hook@plt>:
    6be0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #712]
    6be8:	add	x16, x16, #0x2c8
    6bec:	br	x17

0000000000006bf0 <abort@plt>:
    6bf0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #720]
    6bf8:	add	x16, x16, #0x2d0
    6bfc:	br	x17

0000000000006c00 <__asan_backtrace_initialize@plt>:
    6c00:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #728]
    6c08:	add	x16, x16, #0x2d8
    6c0c:	br	x17

0000000000006c10 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6c10:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #736]
    6c18:	add	x16, x16, #0x2e0
    6c1c:	br	x17

0000000000006c20 <__asan_internal_memcmp@plt>:
    6c20:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #744]
    6c28:	add	x16, x16, #0x2e8
    6c2c:	br	x17

0000000000006c30 <sysconf@plt>:
    6c30:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #752]
    6c38:	add	x16, x16, #0x2f0
    6c3c:	br	x17

0000000000006c40 <realloc@plt>:
    6c40:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #760]
    6c48:	add	x16, x16, #0x2f8
    6c4c:	br	x17

0000000000006c50 <pthread_self@plt>:
    6c50:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #768]
    6c58:	add	x16, x16, #0x300
    6c5c:	br	x17

0000000000006c60 <getuid@plt>:
    6c60:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #776]
    6c68:	add	x16, x16, #0x308
    6c6c:	br	x17

0000000000006c70 <getpagesize@plt>:
    6c70:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #784]
    6c78:	add	x16, x16, #0x310
    6c7c:	br	x17

0000000000006c80 <__asan_backtrace_vector_finish@plt>:
    6c80:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c84:	ldr	x17, [x16, #792]
    6c88:	add	x16, x16, #0x318
    6c8c:	br	x17

0000000000006c90 <__asan_backtrace_close@plt>:
    6c90:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6c94:	ldr	x17, [x16, #800]
    6c98:	add	x16, x16, #0x320
    6c9c:	br	x17

0000000000006ca0 <__asan_cplus_demangle_mangled_name@plt>:
    6ca0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ca4:	ldr	x17, [x16, #808]
    6ca8:	add	x16, x16, #0x328
    6cac:	br	x17

0000000000006cb0 <getrlimit@plt>:
    6cb0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6cb4:	ldr	x17, [x16, #816]
    6cb8:	add	x16, x16, #0x330
    6cbc:	br	x17

0000000000006cc0 <sigaltstack@plt>:
    6cc0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6cc4:	ldr	x17, [x16, #824]
    6cc8:	add	x16, x16, #0x338
    6ccc:	br	x17

0000000000006cd0 <fcntl@plt>:
    6cd0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6cd4:	ldr	x17, [x16, #832]
    6cd8:	add	x16, x16, #0x340
    6cdc:	br	x17

0000000000006ce0 <__gmon_start__@plt>:
    6ce0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6ce4:	ldr	x17, [x16, #840]
    6ce8:	add	x16, x16, #0x348
    6cec:	br	x17

0000000000006cf0 <__sanitizer_set_report_path@plt>:
    6cf0:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6cf4:	ldr	x17, [x16, #848]
    6cf8:	add	x16, x16, #0x350
    6cfc:	br	x17

0000000000006d00 <__asan_cplus_demangle_v3_callback@plt>:
    6d00:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6d04:	ldr	x17, [x16, #856]
    6d08:	add	x16, x16, #0x358
    6d0c:	br	x17

0000000000006d10 <__sanitizer_print_memory_profile@plt>:
    6d10:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6d14:	ldr	x17, [x16, #864]
    6d18:	add	x16, x16, #0x360
    6d1c:	br	x17

0000000000006d20 <__asan_cplus_demangle_fill_dtor@plt>:
    6d20:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6d24:	ldr	x17, [x16, #872]
    6d28:	add	x16, x16, #0x368
    6d2c:	br	x17

0000000000006d30 <__sancov_default_options@plt>:
    6d30:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6d34:	ldr	x17, [x16, #880]
    6d38:	add	x16, x16, #0x370
    6d3c:	br	x17

0000000000006d40 <__asan_backtrace_open@plt>:
    6d40:	adrp	x16, 61000 <_Unwind_Backtrace@GCC_3.3>
    6d44:	ldr	x17, [x16, #888]
    6d48:	add	x16, x16, #0x378
    6d4c:	br	x17

0000000000006d50 <*ABS*@plt>:
    6d50:	stp	x2, x3, [sp, #-16]!
    6d54:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d58:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d5c:	ldr	x2, [x2, #4064]

0000000000006d60 <*ABS*+0x10@plt>:
    6d60:	add	x3, x3, #0xfe8
    6d64:	br	x2
    6d68:	nop
    6d6c:	nop

Disassembly of section .text:

0000000000006d70 <__lsan_ignore_object@@Base-0x2090>:
    6d70:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6d74:	ldr	x0, [x0, #4016]
    6d78:	cbz	x0, 6d80 <*ABS*+0x10@plt+0x20>
    6d7c:	b	6ce0 <__gmon_start__@plt>
    6d80:	ret
    6d84:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6d88:	add	x0, x0, #0xc60
    6d8c:	adrp	x1, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6d90:	add	x1, x1, #0xc60
    6d94:	cmp	x0, x1
    6d98:	b.eq	6dc4 <*ABS*+0x10@plt+0x64>  // b.none
    6d9c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6da0:	ldr	x1, [x1, #3920]
    6da4:	cbz	x1, 6dc4 <*ABS*+0x10@plt+0x64>
    6da8:	stp	x29, x30, [sp, #-16]!
    6dac:	mov	x29, sp
    6db0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6db4:	add	x0, x0, #0xc60
    6db8:	blr	x1
    6dbc:	ldp	x29, x30, [sp], #16
    6dc0:	ret
    6dc4:	ret
    6dc8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6dcc:	add	x0, x0, #0xc60
    6dd0:	adrp	x1, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6dd4:	add	x1, x1, #0xc60
    6dd8:	sub	x0, x0, x1
    6ddc:	lsr	x1, x0, #63
    6de0:	add	x0, x1, x0, asr #3
    6de4:	cmp	xzr, x0, asr #1
    6de8:	b.eq	6e18 <*ABS*+0x10@plt+0xb8>  // b.none
    6dec:	asr	x1, x0, #1
    6df0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6df4:	ldr	x2, [x2, #4024]
    6df8:	cbz	x2, 6e18 <*ABS*+0x10@plt+0xb8>
    6dfc:	stp	x29, x30, [sp, #-16]!
    6e00:	mov	x29, sp
    6e04:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e08:	add	x0, x0, #0xc60
    6e0c:	blr	x2
    6e10:	ldp	x29, x30, [sp], #16
    6e14:	ret
    6e18:	ret
    6e1c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e20:	ldrb	w0, [x0, #3200]
    6e24:	cbnz	w0, 6e60 <*ABS*+0x10@plt+0x100>
    6e28:	stp	x29, x30, [sp, #-16]!
    6e2c:	mov	x29, sp
    6e30:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e34:	ldr	x0, [x0, #3584]
    6e38:	cbz	x0, 6e48 <*ABS*+0x10@plt+0xe8>
    6e3c:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
    6e40:	ldr	x0, [x0, #928]
    6e44:	bl	68b0 <__cxa_finalize@plt>
    6e48:	bl	6d84 <*ABS*+0x10@plt+0x24>
    6e4c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e50:	mov	w1, #0x1                   	// #1
    6e54:	strb	w1, [x0, #3200]
    6e58:	ldp	x29, x30, [sp], #16
    6e5c:	ret
    6e60:	ret
    6e64:	stp	x29, x30, [sp, #-16]!
    6e68:	mov	x29, sp
    6e6c:	bl	6dc8 <*ABS*+0x10@plt+0x68>
    6e70:	ldp	x29, x30, [sp], #16
    6e74:	ret
    6e78:	mov	x2, x0
    6e7c:	ldrb	w0, [x0, #28]
    6e80:	ldrb	w3, [x1, #28]
    6e84:	cmp	w3, w0
    6e88:	b.eq	6e90 <*ABS*+0x10@plt+0x130>  // b.none
    6e8c:	ret
    6e90:	ldr	x2, [x2, #16]
    6e94:	ldr	x0, [x1, #16]
    6e98:	cmp	x2, x0
    6e9c:	cset	w0, hi  // hi = pmore
    6ea0:	b	6e8c <*ABS*+0x10@plt+0x12c>
    6ea4:	stp	x19, x20, [sp, #-48]!
    6ea8:	stp	x21, x22, [sp, #16]
    6eac:	str	x30, [sp, #32]
    6eb0:	mov	x19, x0
    6eb4:	mov	x20, x1
    6eb8:	mov	x21, x2
    6ebc:	mov	x22, x3
    6ec0:	mov	x1, #0x10                  	// #16
    6ec4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6ec8:	ldr	x0, [x0, #3456]
    6ecc:	bl	10634 <__sancov_default_options@@Base+0x2b0>
    6ed0:	mov	x2, x0
    6ed4:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
    6ed8:	add	x0, x0, #0xb80
    6edc:	str	x0, [x2]
    6ee0:	str	x22, [x2, #8]
    6ee4:	mov	x3, x21
    6ee8:	mov	x1, x20
    6eec:	mov	x0, x19
    6ef0:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
    6ef4:	ldp	x21, x22, [sp, #16]
    6ef8:	ldr	x30, [sp, #32]
    6efc:	ldp	x19, x20, [sp], #48
    6f00:	ret
    6f04:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6f08:	ldr	x0, [x0, #3264]
    6f0c:	cbz	x0, 6f14 <*ABS*+0x10@plt+0x1b4>
    6f10:	ret
    6f14:	str	x30, [sp, #-16]!
    6f18:	mov	x4, #0x0                   	// #0
    6f1c:	mov	x3, #0x0                   	// #0
    6f20:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    6f24:	add	x2, x2, #0x4b8
    6f28:	mov	w1, #0x5f                  	// #95
    6f2c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    6f30:	add	x0, x0, #0x4d8
    6f34:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    6f38:	ldr	w2, [x0, #112]
    6f3c:	cmp	w2, #0x2
    6f40:	b.eq	6f48 <*ABS*+0x10@plt+0x1e8>  // b.none
    6f44:	ret
    6f48:	str	x30, [sp, #-16]!
    6f4c:	ldr	x4, [x1, #16]
    6f50:	mov	x2, x4
    6f54:	mov	x6, #0x0                   	// #0
    6f58:	b	6f60 <*ABS*+0x10@plt+0x200>
    6f5c:	mov	x2, x3
    6f60:	cmp	x2, x6
    6f64:	b.ls	6fac <*ABS*+0x10@plt+0x24c>  // b.plast
    6f68:	add	x5, x2, x6
    6f6c:	lsr	x3, x5, #1
    6f70:	cmp	x4, x5, lsr #1
    6f74:	b.ls	6f94 <*ABS*+0x10@plt+0x234>  // b.plast
    6f78:	ldr	x5, [x1]
    6f7c:	ldr	x7, [x5, x3, lsl #3]
    6f80:	ldr	x5, [x0, #32]
    6f84:	cmp	w7, w5
    6f88:	b.ge	6f5c <*ABS*+0x10@plt+0x1fc>  // b.tcont
    6f8c:	add	x6, x3, #0x1
    6f90:	b	6f60 <*ABS*+0x10@plt+0x200>
    6f94:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    6f98:	add	x2, x2, #0x508
    6f9c:	mov	w1, #0x1ba                 	// #442
    6fa0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    6fa4:	add	x0, x0, #0x520
    6fa8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    6fac:	cmp	x4, x6
    6fb0:	b.ls	6fc8 <*ABS*+0x10@plt+0x268>  // b.plast
    6fb4:	ldr	x1, [x1]
    6fb8:	ldr	x2, [x1, x6, lsl #3]
    6fbc:	ldr	x1, [x0, #32]
    6fc0:	cmp	x2, x1
    6fc4:	b.eq	6fd8 <*ABS*+0x10@plt+0x278>  // b.none
    6fc8:	ldr	x1, [x0, #32]
    6fcc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    6fd0:	add	x0, x0, #0x560
    6fd4:	bl	1d908 <OnPrint@@Base+0x3d8>
    6fd8:	ldr	x30, [sp], #16
    6fdc:	ret
    6fe0:	stp	x19, x30, [sp, #-32]!
    6fe4:	bl	b3b0 <__sanitizer_print_stack_trace@@Base+0x594>
    6fe8:	add	x19, sp, #0x18
    6fec:	mov	x1, x0
    6ff0:	mov	x0, x19
    6ff4:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    6ff8:	mov	x0, x19
    6ffc:	bl	b3f4 <__sanitizer_print_stack_trace@@Base+0x5d8>
    7000:	and	w0, w0, #0xff
    7004:	cbnz	w0, 7010 <*ABS*+0x10@plt+0x2b0>
    7008:	ldp	x19, x30, [sp], #32
    700c:	ret
    7010:	add	x0, sp, #0x18
    7014:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    7018:	cmp	w0, #0x3
    701c:	b.eq	7008 <*ABS*+0x10@plt+0x2a8>  // b.none
    7020:	mov	w1, #0x0                   	// #0
    7024:	add	x0, sp, #0x18
    7028:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x5fc>
    702c:	b	7008 <*ABS*+0x10@plt+0x2a8>
    7030:	stp	x19, x20, [sp, #-64]!
    7034:	str	x30, [sp, #24]
    7038:	str	x0, [sp, #40]
    703c:	cbz	x1, 707c <*ABS*+0x10@plt+0x31c>
    7040:	mov	x20, x1
    7044:	ldr	x0, [sp, #40]
    7048:	bl	b3b0 <__sanitizer_print_stack_trace@@Base+0x594>
    704c:	mov	x1, x0
    7050:	str	x0, [sp, #40]
    7054:	add	x19, sp, #0x38
    7058:	mov	x0, x19
    705c:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    7060:	mov	x0, x19
    7064:	bl	b3f4 <__sanitizer_print_stack_trace@@Base+0x5d8>
    7068:	and	w0, w0, #0xff
    706c:	cbnz	w0, 70a0 <*ABS*+0x10@plt+0x340>
    7070:	ldr	x30, [sp, #24]
    7074:	ldp	x19, x20, [sp], #64
    7078:	ret
    707c:	str	x21, [sp, #16]
    7080:	mov	x4, #0x0                   	// #0
    7084:	mov	x3, #0x0                   	// #0
    7088:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    708c:	add	x2, x2, #0x5a0
    7090:	mov	w1, #0x18b                 	// #395
    7094:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7098:	add	x0, x0, #0x4d8
    709c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    70a0:	add	x0, sp, #0x38
    70a4:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    70a8:	cmp	w0, #0x2
    70ac:	b.eq	7070 <*ABS*+0x10@plt+0x310>  // b.none
    70b0:	add	x0, sp, #0x38
    70b4:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    70b8:	cmp	w0, #0x3
    70bc:	b.eq	7070 <*ABS*+0x10@plt+0x310>  // b.none
    70c0:	add	x0, sp, #0x38
    70c4:	bl	b43c <__sanitizer_print_stack_trace@@Base+0x620>
    70c8:	cbz	w0, 70e0 <*ABS*+0x10@plt+0x380>
    70cc:	mov	w1, w0
    70d0:	ldr	x0, [x20, #8]
    70d4:	bl	1e84c <OnPrint@@Base+0x131c>
    70d8:	cmp	w1, #0x1
    70dc:	b.hi	7130 <*ABS*+0x10@plt+0x3d0>  // b.pmore
    70e0:	mov	w1, #0x2                   	// #2
    70e4:	add	x0, sp, #0x38
    70e8:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x5fc>
    70ec:	ldr	x19, [x20]
    70f0:	ldr	x3, [x19, #16]
    70f4:	ldr	x0, [x19, #8]
    70f8:	lsr	x4, x0, #3
    70fc:	cmp	x3, x0, lsr #3
    7100:	b.hi	7158 <*ABS*+0x10@plt+0x3f8>  // b.pmore
    7104:	cmp	x3, x4
    7108:	b.eq	7174 <*ABS*+0x10@plt+0x414>  // b.none
    710c:	ldr	x3, [x19]
    7110:	ldr	x0, [x19, #16]
    7114:	add	x1, x0, #0x1
    7118:	str	x1, [x19, #16]
    711c:	mov	x2, #0x8                   	// #8
    7120:	add	x1, sp, #0x28
    7124:	add	x0, x3, x0, lsl #3
    7128:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    712c:	b	7070 <*ABS*+0x10@plt+0x310>
    7130:	ldr	x19, [x0, #8]
    7134:	cbz	x19, 70e0 <*ABS*+0x10@plt+0x380>
    7138:	ldrb	w0, [x20, #16]
    713c:	cbz	w0, 7070 <*ABS*+0x10@plt+0x310>
    7140:	bl	aab8 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
    7144:	mov	x1, x19
    7148:	bl	129cc <__sancov_default_options@@Base+0x2648>
    714c:	and	w0, w0, #0xff
    7150:	cbz	w0, 7070 <*ABS*+0x10@plt+0x310>
    7154:	b	70e0 <*ABS*+0x10@plt+0x380>
    7158:	str	x21, [sp, #16]
    715c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7160:	add	x2, x2, #0x5b0
    7164:	mov	w1, #0x1be                 	// #446
    7168:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    716c:	add	x0, x0, #0x520
    7170:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7174:	str	x21, [sp, #16]
    7178:	add	x0, x3, #0x1
    717c:	tst	x3, x0
    7180:	b.eq	728c <*ABS*+0x10@plt+0x52c>  // b.none
    7184:	clz	x2, x0
    7188:	mov	w1, #0x3f                  	// #63
    718c:	sub	w1, w1, w2
    7190:	add	w2, w1, #0x1
    7194:	mov	x4, #0x1                   	// #1
    7198:	lsl	x4, x4, x2
    719c:	cmp	x0, x4
    71a0:	b.cs	7238 <*ABS*+0x10@plt+0x4d8>  // b.hs, b.nlast
    71a4:	mov	x2, #0x1                   	// #1
    71a8:	lsl	x1, x2, x1
    71ac:	cmp	x0, x1
    71b0:	b.ls	7254 <*ABS*+0x10@plt+0x4f4>  // b.plast
    71b4:	cmp	x3, x4
    71b8:	b.hi	7274 <*ABS*+0x10@plt+0x514>  // b.pmore
    71bc:	lsl	x20, x4, #3
    71c0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    71c4:	ldr	x0, [x0, #4000]
    71c8:	ldr	x0, [x0]
    71cc:	cbz	x0, 7294 <*ABS*+0x10@plt+0x534>
    71d0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    71d4:	ldr	x0, [x0, #4000]
    71d8:	ldr	x0, [x0]
    71dc:	sub	x1, x0, #0x1
    71e0:	tst	x0, x1
    71e4:	b.ne	72a8 <*ABS*+0x10@plt+0x548>  // b.any
    71e8:	add	x20, x20, x1
    71ec:	neg	x0, x0
    71f0:	and	x20, x20, x0
    71f4:	mov	w2, #0x0                   	// #0
    71f8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    71fc:	add	x1, x1, #0x650
    7200:	mov	x0, x20
    7204:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    7208:	mov	x21, x0
    720c:	ldr	x2, [x19, #16]
    7210:	lsl	x2, x2, #3
    7214:	ldr	x1, [x19]
    7218:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    721c:	ldr	x1, [x19, #8]
    7220:	ldr	x0, [x19]
    7224:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    7228:	str	x21, [x19]
    722c:	str	x20, [x19, #8]
    7230:	ldr	x21, [sp, #16]
    7234:	b	710c <*ABS*+0x10@plt+0x3ac>
    7238:	mov	x3, x0
    723c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7240:	add	x2, x2, #0x5d0
    7244:	mov	w1, #0x17b                 	// #379
    7248:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    724c:	add	x0, x0, #0x520
    7250:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7254:	mov	x4, x1
    7258:	mov	x3, x0
    725c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7260:	add	x2, x2, #0x5f8
    7264:	mov	w1, #0x17c                 	// #380
    7268:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    726c:	add	x0, x0, #0x520
    7270:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7274:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7278:	add	x2, x2, #0x618
    727c:	mov	w1, #0x1fd                 	// #509
    7280:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7284:	add	x0, x0, #0x520
    7288:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    728c:	mov	x4, x0
    7290:	b	71bc <*ABS*+0x10@plt+0x45c>
    7294:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    7298:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    729c:	ldr	x1, [x1, #4000]
    72a0:	str	x0, [x1]
    72a4:	b	71d0 <*ABS*+0x10@plt+0x470>
    72a8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    72ac:	add	x0, x0, #0x638
    72b0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    72b4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    72b8:	stp	x19, x20, [sp, #-80]!
    72bc:	str	x30, [sp, #32]
    72c0:	str	x0, [sp, #56]
    72c4:	cbz	x1, 7304 <*ABS*+0x10@plt+0x5a4>
    72c8:	mov	x19, x1
    72cc:	ldr	x0, [sp, #56]
    72d0:	bl	b3b0 <__sanitizer_print_stack_trace@@Base+0x594>
    72d4:	mov	x1, x0
    72d8:	str	x0, [sp, #56]
    72dc:	add	x20, sp, #0x48
    72e0:	mov	x0, x20
    72e4:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    72e8:	mov	x0, x20
    72ec:	bl	b3f4 <__sanitizer_print_stack_trace@@Base+0x5d8>
    72f0:	and	w0, w0, #0xff
    72f4:	cbnz	w0, 7328 <*ABS*+0x10@plt+0x5c8>
    72f8:	ldr	x30, [sp, #32]
    72fc:	ldp	x19, x20, [sp], #80
    7300:	ret
    7304:	stp	x21, x22, [sp, #16]
    7308:	mov	x4, #0x0                   	// #0
    730c:	mov	x3, #0x0                   	// #0
    7310:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7314:	add	x2, x2, #0x5a0
    7318:	mov	w1, #0x16f                 	// #367
    731c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7320:	add	x0, x0, #0x4d8
    7324:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7328:	add	x0, sp, #0x48
    732c:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    7330:	cmp	w0, #0x3
    7334:	b.ne	72f8 <*ABS*+0x10@plt+0x598>  // b.any
    7338:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    733c:	ldrb	w0, [x0, #3292]
    7340:	cbnz	w0, 7384 <*ABS*+0x10@plt+0x624>
    7344:	ldr	x3, [x19, #16]
    7348:	ldr	x0, [x19, #8]
    734c:	lsr	x4, x0, #3
    7350:	cmp	x3, x0, lsr #3
    7354:	b.hi	73c8 <*ABS*+0x10@plt+0x668>  // b.pmore
    7358:	cmp	x3, x4
    735c:	b.eq	73e4 <*ABS*+0x10@plt+0x684>  // b.none
    7360:	ldr	x3, [x19]
    7364:	ldr	x0, [x19, #16]
    7368:	add	x1, x0, #0x1
    736c:	str	x1, [x19, #16]
    7370:	mov	x2, #0x8                   	// #8
    7374:	add	x1, sp, #0x38
    7378:	add	x0, x3, x0, lsl #3
    737c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    7380:	b	72f8 <*ABS*+0x10@plt+0x598>
    7384:	stp	x21, x22, [sp, #16]
    7388:	ldr	x22, [sp, #56]
    738c:	add	x21, sp, #0x48
    7390:	mov	x0, x21
    7394:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7398:	ldr	x20, [sp, #56]
    739c:	add	x20, x0, x20
    73a0:	mov	x0, x21
    73a4:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    73a8:	mov	x3, x0
    73ac:	mov	x2, x20
    73b0:	mov	x1, x22
    73b4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    73b8:	add	x0, x0, #0x668
    73bc:	bl	1d908 <OnPrint@@Base+0x3d8>
    73c0:	ldp	x21, x22, [sp, #16]
    73c4:	b	7344 <*ABS*+0x10@plt+0x5e4>
    73c8:	stp	x21, x22, [sp, #16]
    73cc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    73d0:	add	x2, x2, #0x5b0
    73d4:	mov	w1, #0x1be                 	// #446
    73d8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    73dc:	add	x0, x0, #0x520
    73e0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    73e4:	stp	x21, x22, [sp, #16]
    73e8:	add	x0, x3, #0x1
    73ec:	tst	x3, x0
    73f0:	b.eq	74fc <*ABS*+0x10@plt+0x79c>  // b.none
    73f4:	clz	x2, x0
    73f8:	mov	w1, #0x3f                  	// #63
    73fc:	sub	w1, w1, w2
    7400:	add	w2, w1, #0x1
    7404:	mov	x4, #0x1                   	// #1
    7408:	lsl	x4, x4, x2
    740c:	cmp	x0, x4
    7410:	b.cs	74a8 <*ABS*+0x10@plt+0x748>  // b.hs, b.nlast
    7414:	mov	x2, #0x1                   	// #1
    7418:	lsl	x1, x2, x1
    741c:	cmp	x0, x1
    7420:	b.ls	74c4 <*ABS*+0x10@plt+0x764>  // b.plast
    7424:	cmp	x3, x4
    7428:	b.hi	74e4 <*ABS*+0x10@plt+0x784>  // b.pmore
    742c:	lsl	x20, x4, #3
    7430:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7434:	ldr	x0, [x0, #4000]
    7438:	ldr	x0, [x0]
    743c:	cbz	x0, 7504 <*ABS*+0x10@plt+0x7a4>
    7440:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7444:	ldr	x0, [x0, #4000]
    7448:	ldr	x0, [x0]
    744c:	sub	x1, x0, #0x1
    7450:	tst	x0, x1
    7454:	b.ne	7518 <*ABS*+0x10@plt+0x7b8>  // b.any
    7458:	add	x20, x20, x1
    745c:	neg	x0, x0
    7460:	and	x20, x20, x0
    7464:	mov	w2, #0x0                   	// #0
    7468:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    746c:	add	x1, x1, #0x650
    7470:	mov	x0, x20
    7474:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    7478:	mov	x21, x0
    747c:	ldr	x2, [x19, #16]
    7480:	lsl	x2, x2, #3
    7484:	ldr	x1, [x19]
    7488:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    748c:	ldr	x1, [x19, #8]
    7490:	ldr	x0, [x19]
    7494:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    7498:	str	x21, [x19]
    749c:	str	x20, [x19, #8]
    74a0:	ldp	x21, x22, [sp, #16]
    74a4:	b	7360 <*ABS*+0x10@plt+0x600>
    74a8:	mov	x3, x0
    74ac:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    74b0:	add	x2, x2, #0x5d0
    74b4:	mov	w1, #0x17b                 	// #379
    74b8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    74bc:	add	x0, x0, #0x520
    74c0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    74c4:	mov	x4, x1
    74c8:	mov	x3, x0
    74cc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    74d0:	add	x2, x2, #0x5f8
    74d4:	mov	w1, #0x17c                 	// #380
    74d8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    74dc:	add	x0, x0, #0x520
    74e0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    74e4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    74e8:	add	x2, x2, #0x618
    74ec:	mov	w1, #0x1fd                 	// #509
    74f0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    74f4:	add	x0, x0, #0x520
    74f8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    74fc:	mov	x4, x0
    7500:	b	742c <*ABS*+0x10@plt+0x6cc>
    7504:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    7508:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    750c:	ldr	x1, [x1, #4000]
    7510:	str	x0, [x1]
    7514:	b	7440 <*ABS*+0x10@plt+0x6e0>
    7518:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    751c:	add	x0, x0, #0x638
    7520:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    7524:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    7528:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    752c:	ldr	x0, [x0, #4040]
    7530:	ldrb	w0, [x0, #57]
    7534:	cbnz	w0, 753c <*ABS*+0x10@plt+0x7dc>
    7538:	ret
    753c:	str	x30, [sp, #-16]!
    7540:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7544:	add	x0, x0, #0x690
    7548:	bl	1d908 <OnPrint@@Base+0x3d8>
    754c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    7550:	strb	wzr, [x0]
    7554:	str	wzr, [x0, #4]
    7558:	str	wzr, [x0, #8]
    755c:	mov	w1, #0x1                   	// #1
    7560:	strb	w1, [x0, #12]
    7564:	strb	w1, [x0, #13]
    7568:	strb	w1, [x0, #14]
    756c:	strb	w1, [x0, #15]
    7570:	strb	w1, [x0, #16]
    7574:	strb	w1, [x0, #17]
    7578:	strb	wzr, [x0, #18]
    757c:	strb	wzr, [x0, #19]
    7580:	strb	wzr, [x0, #20]
    7584:	strb	wzr, [x0, #21]
    7588:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    758c:	add	x1, x1, #0x9e0
    7590:	str	x1, [x0, #24]
    7594:	ret
    7598:	stp	x19, x20, [sp, #-48]!
    759c:	stp	x21, x22, [sp, #16]
    75a0:	str	x30, [sp, #32]
    75a4:	mov	x20, x0
    75a8:	mov	x19, x1
    75ac:	mov	x3, x1
    75b0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    75b4:	add	x2, x2, #0x6b8
    75b8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    75bc:	add	x1, x1, #0x6f8
    75c0:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    75c4:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    75c8:	ldr	x21, [x21, #3456]
    75cc:	mov	x1, #0x10                  	// #16
    75d0:	mov	x0, x21
    75d4:	bl	10634 <__sancov_default_options@@Base+0x2b0>
    75d8:	mov	x2, x0
    75dc:	adrp	x22, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
    75e0:	add	x22, x22, #0xbb0
    75e4:	str	x22, [x0]
    75e8:	add	x0, x19, #0x4
    75ec:	str	x0, [x2, #8]
    75f0:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    75f4:	add	x3, x3, #0x708
    75f8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    75fc:	add	x1, x1, #0x780
    7600:	mov	x0, x20
    7604:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
    7608:	mov	x1, #0x10                  	// #16
    760c:	mov	x0, x21
    7610:	bl	10634 <__sancov_default_options@@Base+0x2b0>
    7614:	mov	x2, x0
    7618:	str	x22, [x0]
    761c:	add	x0, x19, #0x8
    7620:	str	x0, [x2, #8]
    7624:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7628:	add	x3, x3, #0x790
    762c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7630:	add	x1, x1, #0x7b0
    7634:	mov	x0, x20
    7638:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
    763c:	add	x3, x19, #0xc
    7640:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7644:	add	x2, x2, #0x7c0
    7648:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    764c:	add	x1, x1, #0x7f8
    7650:	mov	x0, x20
    7654:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    7658:	add	x3, x19, #0xd
    765c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7660:	add	x2, x2, #0x808
    7664:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7668:	add	x1, x1, #0x828
    766c:	mov	x0, x20
    7670:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    7674:	add	x3, x19, #0xe
    7678:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    767c:	add	x2, x2, #0x838
    7680:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7684:	add	x1, x1, #0x860
    7688:	mov	x0, x20
    768c:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    7690:	add	x3, x19, #0xf
    7694:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7698:	add	x2, x2, #0x870
    769c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76a0:	add	x1, x1, #0x8a8
    76a4:	mov	x0, x20
    76a8:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    76ac:	add	x3, x19, #0x10
    76b0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76b4:	add	x2, x2, #0x8b0
    76b8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76bc:	add	x1, x1, #0x8f8
    76c0:	mov	x0, x20
    76c4:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    76c8:	add	x3, x19, #0x11
    76cc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76d0:	add	x2, x2, #0x910
    76d4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76d8:	add	x1, x1, #0x9b8
    76dc:	mov	x0, x20
    76e0:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    76e4:	add	x3, x19, #0x12
    76e8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76ec:	add	x2, x2, #0x9d0
    76f0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    76f4:	add	x1, x1, #0x9f8
    76f8:	mov	x0, x20
    76fc:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    7700:	add	x3, x19, #0x13
    7704:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7708:	add	x2, x2, #0xa08
    770c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7710:	add	x1, x1, #0xa40
    7714:	mov	x0, x20
    7718:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    771c:	adrp	x22, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7720:	add	x22, x22, #0xa50
    7724:	add	x3, x19, #0x14
    7728:	mov	x2, x22
    772c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7730:	add	x1, x1, #0xa60
    7734:	mov	x0, x20
    7738:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    773c:	add	x3, x19, #0x15
    7740:	mov	x2, x22
    7744:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7748:	add	x1, x1, #0xa70
    774c:	mov	x0, x20
    7750:	bl	6ea4 <*ABS*+0x10@plt+0x144>
    7754:	mov	x1, #0x10                  	// #16
    7758:	mov	x0, x21
    775c:	bl	10634 <__sancov_default_options@@Base+0x2b0>
    7760:	mov	x2, x0
    7764:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
    7768:	add	x0, x0, #0xb98
    776c:	str	x0, [x2]
    7770:	add	x19, x19, #0x18
    7774:	str	x19, [x2, #8]
    7778:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    777c:	add	x3, x3, #0xa80
    7780:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7784:	add	x1, x1, #0xa98
    7788:	mov	x0, x20
    778c:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
    7790:	ldp	x21, x22, [sp, #16]
    7794:	ldr	x30, [sp, #32]
    7798:	ldp	x19, x20, [sp], #48
    779c:	ret
    77a0:	stp	x19, x20, [sp, #-32]!
    77a4:	stp	x21, x30, [sp, #16]
    77a8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    77ac:	ldr	x4, [x0, #3264]
    77b0:	cbnz	x4, 7824 <*ABS*+0x10@plt+0xac4>
    77b4:	adrp	x21, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    77b8:	add	x20, x21, #0xcc0
    77bc:	add	x19, x20, #0x40
    77c0:	mov	w2, #0x1                   	// #1
    77c4:	adrp	x1, 61000 <_Unwind_Backtrace@GCC_3.3>
    77c8:	add	x1, x1, #0x3a8
    77cc:	mov	x0, x19
    77d0:	bl	22c0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2958>
    77d4:	str	x19, [x21, #3264]
    77d8:	ldr	x1, [x20, #32]
    77dc:	mov	x0, x19
    77e0:	bl	2309c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2de8>
    77e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    77e8:	ldr	x0, [x0, #3704]
    77ec:	cbz	x0, 7804 <*ABS*+0x10@plt+0xaa4>
    77f0:	ldr	x19, [x21, #3264]
    77f4:	bl	6980 <__lsan_default_suppressions@plt>
    77f8:	mov	x1, x0
    77fc:	mov	x0, x19
    7800:	bl	22d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a60>
    7804:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    7808:	add	x1, x1, #0x450
    780c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7810:	ldr	x0, [x0, #3264]
    7814:	bl	22d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a60>
    7818:	ldp	x21, x30, [sp, #16]
    781c:	ldp	x19, x20, [sp], #32
    7820:	ret
    7824:	mov	x3, #0x0                   	// #0
    7828:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    782c:	add	x2, x2, #0xaa8
    7830:	mov	w1, #0x55                  	// #85
    7834:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7838:	add	x0, x0, #0x4d8
    783c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7840:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7844:	ldr	x0, [x0, #3408]
    7848:	ret
    784c:	stp	x19, x20, [sp, #-48]!
    7850:	stp	x21, x22, [sp, #16]
    7854:	str	x30, [sp, #32]
    7858:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    785c:	ldr	x0, [x0, #3408]
    7860:	cbnz	x0, 7908 <*ABS*+0x10@plt+0xba8>
    7864:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7868:	add	x0, x0, #0xcc0
    786c:	str	xzr, [x0, #200]
    7870:	str	xzr, [x0, #208]
    7874:	str	xzr, [x0, #192]
    7878:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    787c:	ldr	x0, [x0, #4000]
    7880:	ldr	x0, [x0]
    7884:	cbz	x0, 7928 <*ABS*+0x10@plt+0xbc8>
    7888:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    788c:	ldr	x0, [x0, #4000]
    7890:	ldr	x1, [x0]
    7894:	sub	x0, x1, #0x1
    7898:	tst	x0, x1
    789c:	b.ne	793c <*ABS*+0x10@plt+0xbdc>  // b.any
    78a0:	add	x21, x1, #0xf
    78a4:	neg	x1, x1
    78a8:	and	x21, x21, x1
    78ac:	mov	w2, #0x0                   	// #0
    78b0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    78b4:	add	x1, x1, #0x650
    78b8:	mov	x0, x21
    78bc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    78c0:	mov	x22, x0
    78c4:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    78c8:	add	x19, x19, #0xcc0
    78cc:	add	x20, x19, #0xc0
    78d0:	ldr	x2, [x19, #208]
    78d4:	lsl	x2, x2, #4
    78d8:	ldr	x1, [x19, #192]
    78dc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    78e0:	ldr	x1, [x19, #200]
    78e4:	ldr	x0, [x19, #192]
    78e8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    78ec:	str	x22, [x19, #192]
    78f0:	str	x21, [x19, #200]
    78f4:	str	x20, [x19, #144]
    78f8:	ldp	x21, x22, [sp, #16]
    78fc:	ldr	x30, [sp, #32]
    7900:	ldp	x19, x20, [sp], #48
    7904:	ret
    7908:	mov	x4, #0x0                   	// #0
    790c:	mov	x3, #0x0                   	// #0
    7910:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7914:	add	x2, x2, #0xad0
    7918:	mov	w1, #0x68                  	// #104
    791c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7920:	add	x0, x0, #0x4d8
    7924:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7928:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    792c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7930:	ldr	x1, [x1, #4000]
    7934:	str	x0, [x1]
    7938:	b	7888 <*ABS*+0x10@plt+0xb28>
    793c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7940:	add	x0, x0, #0x638
    7944:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    7948:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    794c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7950:	ldr	x0, [x0, #3432]
    7954:	cbz	x0, 7968 <*ABS*+0x10@plt+0xc08>
    7958:	str	x30, [sp, #-16]!
    795c:	bl	6690 <__lsan_default_options@plt>
    7960:	ldr	x30, [sp], #16
    7964:	ret
    7968:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    796c:	add	x0, x0, #0x9e0
    7970:	ret
    7974:	str	x30, [sp, #-16]!
    7978:	bl	784c <*ABS*+0x10@plt+0xaec>
    797c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7980:	ldr	x0, [x0, #4040]
    7984:	ldrb	w0, [x0, #57]
    7988:	cbnz	w0, 7994 <*ABS*+0x10@plt+0xc34>
    798c:	ldr	x30, [sp], #16
    7990:	ret
    7994:	bl	77a0 <*ABS*+0x10@plt+0xa40>
    7998:	bl	a868 <__lsan_do_recoverable_leak_check@@Base+0x568>
    799c:	b	798c <*ABS*+0x10@plt+0xc2c>
    79a0:	stp	x29, x30, [sp, #-128]!
    79a4:	mov	x29, sp
    79a8:	stp	x21, x22, [sp, #32]
    79ac:	mov	x22, x0
    79b0:	sub	w0, w4, #0x1
    79b4:	cmp	w0, #0x1
    79b8:	b.hi	79fc <*ABS*+0x10@plt+0xc9c>  // b.pmore
    79bc:	stp	x19, x20, [x29, #16]
    79c0:	stp	x23, x24, [x29, #48]
    79c4:	stp	x25, x26, [x29, #64]
    79c8:	mov	x21, x1
    79cc:	mov	x25, x2
    79d0:	mov	x1, x3
    79d4:	mov	w26, w4
    79d8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    79dc:	ldrb	w0, [x0, #3290]
    79e0:	cbz	w0, 7a2c <*ABS*+0x10@plt+0xccc>
    79e4:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    79e8:	ldrb	w0, [x0, #3292]
    79ec:	cbnz	w0, 7a40 <*ABS*+0x10@plt+0xce0>
    79f0:	mov	x19, x22
    79f4:	mov	x24, #0x1                   	// #1
    79f8:	b	7a70 <*ABS*+0x10@plt+0xd10>
    79fc:	stp	x19, x20, [x29, #16]
    7a00:	stp	x23, x24, [x29, #48]
    7a04:	stp	x25, x26, [x29, #64]
    7a08:	stp	x27, x28, [x29, #80]
    7a0c:	mov	x4, #0x0                   	// #0
    7a10:	mov	x3, #0x0                   	// #0
    7a14:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7a18:	add	x2, x2, #0xaf0
    7a1c:	mov	w1, #0x9e                  	// #158
    7a20:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7a24:	add	x0, x0, #0x4d8
    7a28:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7a2c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7a30:	ldrb	w0, [x0, #3292]
    7a34:	mov	x24, #0x8                   	// #8
    7a38:	cbz	w0, 7a58 <*ABS*+0x10@plt+0xcf8>
    7a3c:	b	7a44 <*ABS*+0x10@plt+0xce4>
    7a40:	mov	x24, #0x1                   	// #1
    7a44:	mov	x3, x21
    7a48:	mov	x2, x22
    7a4c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7a50:	add	x0, x0, #0xb30
    7a54:	bl	1d908 <OnPrint@@Base+0x3d8>
    7a58:	udiv	x0, x22, x24
    7a5c:	msub	x0, x0, x24, x22
    7a60:	add	x19, x22, x24
    7a64:	sub	x19, x19, x0
    7a68:	cmp	x0, #0x0
    7a6c:	csel	x19, x19, x22, ne  // ne = any
    7a70:	add	x0, x19, #0x8
    7a74:	cmp	x21, x0
    7a78:	b.cc	7d68 <*ABS*+0x10@plt+0x1008>  // b.lo, b.ul, b.last
    7a7c:	stp	x27, x28, [x29, #80]
    7a80:	mov	w27, #0x3f                  	// #63
    7a84:	clz	x23, x29
    7a88:	sub	w23, w27, w23
    7a8c:	add	w23, w23, #0x1
    7a90:	b	7c34 <*ABS*+0x10@plt+0xed4>
    7a94:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7a98:	ldrb	w0, [x0, #3292]
    7a9c:	cbz	w0, 7c24 <*ABS*+0x10@plt+0xec4>
    7aa0:	ldr	x0, [x29, #112]
    7aa4:	str	x0, [x29, #104]
    7aa8:	add	x28, x29, #0x78
    7aac:	mov	x0, x28
    7ab0:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7ab4:	ldr	x1, [x29, #112]
    7ab8:	add	x1, x0, x1
    7abc:	str	x1, [x29, #96]
    7ac0:	mov	x0, x28
    7ac4:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7ac8:	mov	x5, x0
    7acc:	ldr	x4, [x29, #96]
    7ad0:	ldr	x3, [x29, #104]
    7ad4:	mov	x2, x20
    7ad8:	mov	x1, x19
    7adc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7ae0:	add	x0, x0, #0xb60
    7ae4:	bl	1d908 <OnPrint@@Base+0x3d8>
    7ae8:	b	7c24 <*ABS*+0x10@plt+0xec4>
    7aec:	ldr	x0, [x29, #112]
    7af0:	str	x0, [x29, #104]
    7af4:	add	x28, x29, #0x78
    7af8:	mov	x0, x28
    7afc:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7b00:	ldr	x1, [x29, #112]
    7b04:	add	x1, x0, x1
    7b08:	str	x1, [x29, #96]
    7b0c:	mov	x0, x28
    7b10:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7b14:	mov	x5, x0
    7b18:	ldr	x4, [x29, #96]
    7b1c:	ldr	x3, [x29, #104]
    7b20:	mov	x2, x20
    7b24:	mov	x1, x19
    7b28:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b2c:	add	x0, x0, #0xba8
    7b30:	bl	1d908 <OnPrint@@Base+0x3d8>
    7b34:	b	7cc8 <*ABS*+0x10@plt+0xf68>
    7b38:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b3c:	add	x2, x2, #0x5b0
    7b40:	mov	w1, #0x1be                 	// #446
    7b44:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b48:	add	x0, x0, #0x520
    7b4c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7b50:	mov	x3, x0
    7b54:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b58:	add	x2, x2, #0x5d0
    7b5c:	mov	w1, #0x17b                 	// #379
    7b60:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b64:	add	x0, x0, #0x520
    7b68:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7b6c:	mov	x4, x1
    7b70:	mov	x3, x0
    7b74:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b78:	add	x2, x2, #0x5f8
    7b7c:	mov	w1, #0x17c                 	// #380
    7b80:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7b84:	add	x0, x0, #0x520
    7b88:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7b8c:	mov	x4, x0
    7b90:	lsl	x20, x4, #3
    7b94:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7b98:	ldr	x0, [x0, #4000]
    7b9c:	ldr	x0, [x0]
    7ba0:	cbz	x0, 7d40 <*ABS*+0x10@plt+0xfe0>
    7ba4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7ba8:	ldr	x0, [x0, #4000]
    7bac:	ldr	x0, [x0]
    7bb0:	sub	x1, x0, #0x1
    7bb4:	tst	x0, x1
    7bb8:	b.ne	7d54 <*ABS*+0x10@plt+0xff4>  // b.any
    7bbc:	add	x20, x20, x1
    7bc0:	neg	x0, x0
    7bc4:	and	x20, x20, x0
    7bc8:	mov	w2, #0x0                   	// #0
    7bcc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7bd0:	add	x1, x1, #0x650
    7bd4:	mov	x0, x20
    7bd8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    7bdc:	mov	x28, x0
    7be0:	ldr	x2, [x25, #16]
    7be4:	lsl	x2, x2, #3
    7be8:	ldr	x1, [x25]
    7bec:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    7bf0:	ldr	x1, [x25, #8]
    7bf4:	ldr	x0, [x25]
    7bf8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    7bfc:	str	x28, [x25]
    7c00:	str	x20, [x25, #8]
    7c04:	ldr	x3, [x25]
    7c08:	ldr	x0, [x25, #16]
    7c0c:	add	x1, x0, #0x1
    7c10:	str	x1, [x25, #16]
    7c14:	mov	x2, #0x8                   	// #8
    7c18:	add	x1, x29, #0x70
    7c1c:	add	x0, x3, x0, lsl #3
    7c20:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    7c24:	add	x19, x19, x24
    7c28:	add	x0, x19, #0x8
    7c2c:	cmp	x21, x0
    7c30:	b.cc	7d64 <*ABS*+0x10@plt+0x1004>  // b.lo, b.ul, b.last
    7c34:	ldr	x20, [x19]
    7c38:	mov	x0, #0x3fff                	// #16383
    7c3c:	cmp	x20, x0
    7c40:	b.ls	7c24 <*ABS*+0x10@plt+0xec4>  // b.plast
    7c44:	lsr	x0, x20, x23
    7c48:	cbnz	x0, 7c24 <*ABS*+0x10@plt+0xec4>
    7c4c:	mov	x0, x20
    7c50:	bl	b8e8 <__sanitizer_get_allocated_size@@Base+0x10>
    7c54:	str	x0, [x29, #112]
    7c58:	cmp	x0, #0x0
    7c5c:	ccmp	x0, x22, #0x4, ne  // ne = any
    7c60:	b.eq	7c24 <*ABS*+0x10@plt+0xec4>  // b.none
    7c64:	add	x28, x29, #0x78
    7c68:	mov	x1, x0
    7c6c:	mov	x0, x28
    7c70:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    7c74:	mov	x0, x28
    7c78:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    7c7c:	cmp	w0, #0x2
    7c80:	b.eq	7c24 <*ABS*+0x10@plt+0xec4>  // b.none
    7c84:	add	x0, x29, #0x78
    7c88:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    7c8c:	cmp	w0, #0x3
    7c90:	b.eq	7c24 <*ABS*+0x10@plt+0xec4>  // b.none
    7c94:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7c98:	ldrb	w0, [x0, #3291]
    7c9c:	cbnz	w0, 7cb0 <*ABS*+0x10@plt+0xf50>
    7ca0:	mov	x0, x19
    7ca4:	bl	acd8 <__lsan_do_recoverable_leak_check@@Base+0x9d8>
    7ca8:	and	w0, w0, #0xff
    7cac:	cbnz	w0, 7a94 <*ABS*+0x10@plt+0xd34>
    7cb0:	mov	w1, w26
    7cb4:	add	x0, x29, #0x78
    7cb8:	bl	b418 <__sanitizer_print_stack_trace@@Base+0x5fc>
    7cbc:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7cc0:	ldrb	w0, [x0, #3292]
    7cc4:	cbnz	w0, 7aec <*ABS*+0x10@plt+0xd8c>
    7cc8:	cbz	x25, 7c24 <*ABS*+0x10@plt+0xec4>
    7ccc:	ldr	x3, [x25, #16]
    7cd0:	ldr	x0, [x25, #8]
    7cd4:	lsr	x4, x0, #3
    7cd8:	cmp	x3, x0, lsr #3
    7cdc:	b.hi	7b38 <*ABS*+0x10@plt+0xdd8>  // b.pmore
    7ce0:	cmp	x3, x4
    7ce4:	b.ne	7c04 <*ABS*+0x10@plt+0xea4>  // b.any
    7ce8:	add	x0, x3, #0x1
    7cec:	tst	x3, x0
    7cf0:	b.eq	7b8c <*ABS*+0x10@plt+0xe2c>  // b.none
    7cf4:	clz	x1, x0
    7cf8:	sub	w1, w27, w1
    7cfc:	add	w2, w1, #0x1
    7d00:	mov	x4, #0x1                   	// #1
    7d04:	lsl	x4, x4, x2
    7d08:	cmp	x0, x4
    7d0c:	b.cs	7b50 <*ABS*+0x10@plt+0xdf0>  // b.hs, b.nlast
    7d10:	mov	x2, #0x1                   	// #1
    7d14:	lsl	x1, x2, x1
    7d18:	cmp	x0, x1
    7d1c:	b.ls	7b6c <*ABS*+0x10@plt+0xe0c>  // b.plast
    7d20:	cmp	x3, x4
    7d24:	b.ls	7b90 <*ABS*+0x10@plt+0xe30>  // b.plast
    7d28:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7d2c:	add	x2, x2, #0x618
    7d30:	mov	w1, #0x1fd                 	// #509
    7d34:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7d38:	add	x0, x0, #0x520
    7d3c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7d40:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    7d44:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7d48:	ldr	x1, [x1, #4000]
    7d4c:	str	x0, [x1]
    7d50:	b	7ba4 <*ABS*+0x10@plt+0xe44>
    7d54:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7d58:	add	x0, x0, #0x638
    7d5c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    7d60:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    7d64:	ldp	x27, x28, [x29, #80]
    7d68:	ldp	x19, x20, [x29, #16]
    7d6c:	ldp	x23, x24, [x29, #48]
    7d70:	ldp	x25, x26, [x29, #64]
    7d74:	ldp	x21, x22, [sp, #32]
    7d78:	ldp	x29, x30, [sp], #128
    7d7c:	ret
    7d80:	str	x30, [sp, #-16]!
    7d84:	mov	w4, #0x2                   	// #2
    7d88:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7d8c:	add	x3, x3, #0xbe0
    7d90:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    7d94:	ldr	x30, [sp], #16
    7d98:	ret
    7d9c:	stp	x19, x20, [sp, #-48]!
    7da0:	str	x30, [sp, #16]
    7da4:	bl	b3b0 <__sanitizer_print_stack_trace@@Base+0x594>
    7da8:	mov	x20, x0
    7dac:	add	x19, sp, #0x28
    7db0:	mov	x1, x0
    7db4:	mov	x0, x19
    7db8:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    7dbc:	mov	x0, x19
    7dc0:	bl	b3f4 <__sanitizer_print_stack_trace@@Base+0x5d8>
    7dc4:	and	w0, w0, #0xff
    7dc8:	cbnz	w0, 7dd8 <*ABS*+0x10@plt+0x1078>
    7dcc:	ldr	x30, [sp, #16]
    7dd0:	ldp	x19, x20, [sp], #48
    7dd4:	ret
    7dd8:	add	x0, sp, #0x28
    7ddc:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    7de0:	cmp	w0, #0x2
    7de4:	b.eq	7dcc <*ABS*+0x10@plt+0x106c>  // b.none
    7de8:	add	x0, sp, #0x28
    7dec:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7df0:	mov	w4, #0x1                   	// #1
    7df4:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7df8:	add	x3, x3, #0xbf0
    7dfc:	mov	x2, #0x0                   	// #0
    7e00:	add	x1, x0, x20
    7e04:	mov	x0, x20
    7e08:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    7e0c:	b	7dcc <*ABS*+0x10@plt+0x106c>
    7e10:	ldr	x2, [x0, #16]
    7e14:	cbz	x2, 7e90 <*ABS*+0x10@plt+0x1130>
    7e18:	stp	x19, x20, [sp, #-64]!
    7e1c:	stp	x21, x22, [sp, #16]
    7e20:	stp	x23, x30, [sp, #32]
    7e24:	mov	x19, x0
    7e28:	mov	w22, w1
    7e2c:	add	x21, sp, #0x38
    7e30:	adrp	x23, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7e34:	add	x23, x23, #0xbf0
    7e38:	ldr	x0, [x19]
    7e3c:	add	x0, x0, x2, lsl #3
    7e40:	ldur	x20, [x0, #-8]
    7e44:	sub	x2, x2, #0x1
    7e48:	str	x2, [x19, #16]
    7e4c:	mov	x1, x20
    7e50:	mov	x0, x21
    7e54:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    7e58:	mov	x0, x21
    7e5c:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    7e60:	mov	w4, w22
    7e64:	mov	x3, x23
    7e68:	mov	x2, x19
    7e6c:	add	x1, x0, x20
    7e70:	mov	x0, x20
    7e74:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    7e78:	ldr	x2, [x19, #16]
    7e7c:	cbnz	x2, 7e38 <*ABS*+0x10@plt+0x10d8>
    7e80:	ldp	x21, x22, [sp, #16]
    7e84:	ldp	x23, x30, [sp, #32]
    7e88:	ldp	x19, x20, [sp], #64
    7e8c:	ret
    7e90:	ret
    7e94:	stp	x19, x20, [sp, #-48]!
    7e98:	stp	x21, x30, [sp, #16]
    7e9c:	mov	x20, x0
    7ea0:	mov	x19, x1
    7ea4:	mov	x21, x2
    7ea8:	str	xzr, [sp, #40]
    7eac:	str	xzr, [sp, #32]
    7eb0:	add	x1, sp, #0x20
    7eb4:	add	x0, sp, #0x28
    7eb8:	bl	b394 <__sanitizer_print_stack_trace@@Base+0x578>
    7ebc:	ldr	x1, [sp, #40]
    7ec0:	cmp	x1, x19
    7ec4:	ccmp	x1, x20, #0x0, cc  // cc = lo, ul, last
    7ec8:	b.cs	7ef4 <*ABS*+0x10@plt+0x1194>  // b.hs, b.nlast
    7ecc:	mov	w4, #0x2                   	// #2
    7ed0:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7ed4:	add	x3, x3, #0xc48
    7ed8:	mov	x2, x21
    7edc:	mov	x1, x19
    7ee0:	mov	x0, x20
    7ee4:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    7ee8:	ldp	x21, x30, [sp, #16]
    7eec:	ldp	x19, x20, [sp], #48
    7ef0:	ret
    7ef4:	ldr	x3, [sp, #32]
    7ef8:	cmp	x1, x3
    7efc:	b.hi	7f38 <*ABS*+0x10@plt+0x11d8>  // b.pmore
    7f00:	cmp	x19, x3
    7f04:	b.cc	7f58 <*ABS*+0x10@plt+0x11f8>  // b.lo, b.ul, b.last
    7f08:	cmp	x1, x20
    7f0c:	b.hi	7f74 <*ABS*+0x10@plt+0x1214>  // b.pmore
    7f10:	ldr	x0, [sp, #32]
    7f14:	cmp	x0, x19
    7f18:	b.cs	7ee8 <*ABS*+0x10@plt+0x1188>  // b.hs, b.nlast
    7f1c:	mov	w4, #0x2                   	// #2
    7f20:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7f24:	add	x3, x3, #0xc48
    7f28:	mov	x2, x21
    7f2c:	mov	x1, x19
    7f30:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    7f34:	b	7ee8 <*ABS*+0x10@plt+0x1188>
    7f38:	mov	x4, x3
    7f3c:	mov	x3, x1
    7f40:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7f44:	add	x2, x2, #0xbf8
    7f48:	mov	w1, #0xc4                  	// #196
    7f4c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7f50:	add	x0, x0, #0x4d8
    7f54:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7f58:	mov	x4, x19
    7f5c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7f60:	add	x2, x2, #0xc28
    7f64:	mov	w1, #0xc5                  	// #197
    7f68:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7f6c:	add	x0, x0, #0x4d8
    7f70:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    7f74:	mov	w4, #0x2                   	// #2
    7f78:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7f7c:	add	x3, x3, #0xc48
    7f80:	mov	x2, x21
    7f84:	mov	x0, x20
    7f88:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    7f8c:	b	7f10 <*ABS*+0x10@plt+0x11b0>
    7f90:	stp	x19, x20, [sp, #-48]!
    7f94:	stp	x21, x22, [sp, #16]
    7f98:	str	x30, [sp, #32]
    7f9c:	mov	x5, x1
    7fa0:	mov	x6, x2
    7fa4:	and	w22, w4, #0xff
    7fa8:	ldr	x1, [x1]
    7fac:	cmp	x1, x2
    7fb0:	csel	x20, x1, x2, cs  // cs = hs, nlast
    7fb4:	ldr	x4, [x5, #8]
    7fb8:	add	x2, x1, x4
    7fbc:	cmp	x2, x3
    7fc0:	csel	x21, x2, x3, ls  // ls = plast
    7fc4:	cmp	x21, x20
    7fc8:	b.ls	800c <*ABS*+0x10@plt+0x12ac>  // b.plast
    7fcc:	mov	x19, x0
    7fd0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7fd4:	ldrb	w0, [x0, #3292]
    7fd8:	cbz	w0, 8008 <*ABS*+0x10@plt+0x12a8>
    7fdc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7fe0:	add	x0, x0, #0xc60
    7fe4:	adrp	x5, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    7fe8:	add	x5, x5, #0xc50
    7fec:	cmp	w22, #0x0
    7ff0:	csel	x5, x5, x0, ne  // ne = any
    7ff4:	mov	x4, x3
    7ff8:	mov	x3, x6
    7ffc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8000:	add	x0, x0, #0xc70
    8004:	bl	1d908 <OnPrint@@Base+0x3d8>
    8008:	cbnz	w22, 801c <*ABS*+0x10@plt+0x12bc>
    800c:	ldp	x21, x22, [sp, #16]
    8010:	ldr	x30, [sp, #32]
    8014:	ldp	x19, x20, [sp], #48
    8018:	ret
    801c:	mov	w4, #0x2                   	// #2
    8020:	adrp	x3, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8024:	add	x3, x3, #0xcb0
    8028:	mov	x2, x19
    802c:	mov	x1, x21
    8030:	mov	x0, x20
    8034:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    8038:	b	800c <*ABS*+0x10@plt+0x12ac>
    803c:	stp	x19, x20, [sp, #-80]!
    8040:	str	x30, [sp, #16]
    8044:	mov	x19, x0
    8048:	add	x20, sp, #0x38
    804c:	mov	x0, x20
    8050:	bl	1e998 <OnPrint@@Base+0x1468>
    8054:	str	x19, [sp, #32]
    8058:	str	x20, [sp, #40]
    805c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8060:	ldrb	w0, [x0, #3287]
    8064:	cbz	w0, 8074 <*ABS*+0x10@plt+0x1314>
    8068:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    806c:	ldrb	w0, [x0, #3289]
    8070:	cbnz	w0, 80a0 <*ABS*+0x10@plt+0x1340>
    8074:	strb	w0, [sp, #48]
    8078:	add	x1, sp, #0x20
    807c:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    8080:	add	x0, x0, #0x30
    8084:	bl	bc28 <__sanitizer_get_allocated_size@@Base+0x350>
    8088:	ldr	x1, [sp, #64]
    808c:	ldr	x0, [sp, #56]
    8090:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    8094:	ldr	x30, [sp, #16]
    8098:	ldp	x19, x20, [sp], #80
    809c:	ret
    80a0:	bl	aab8 <__lsan_do_recoverable_leak_check@@Base+0x7b8>
    80a4:	cmp	x0, #0x0
    80a8:	cset	w0, ne  // ne = any
    80ac:	b	8074 <*ABS*+0x10@plt+0x1314>
    80b0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    80b4:	ldrb	w0, [x0, #3480]
    80b8:	ret
    80bc:	stp	x19, x20, [sp, #-96]!
    80c0:	stp	x21, x22, [sp, #16]
    80c4:	str	x30, [sp, #56]
    80c8:	cmp	w4, #0x1
    80cc:	b.hi	80f8 <*ABS*+0x10@plt+0x1398>  // b.pmore
    80d0:	mov	x20, x0
    80d4:	mov	x22, x1
    80d8:	mov	x21, x3
    80dc:	cmp	w4, #0x0
    80e0:	cset	w1, eq  // eq = none
    80e4:	ldr	x6, [x0, #24]
    80e8:	cbz	x6, 85ec <*ABS*+0x10@plt+0x188c>
    80ec:	ldr	x4, [x0, #8]
    80f0:	mov	x19, #0x0                   	// #0
    80f4:	b	8154 <*ABS*+0x10@plt+0x13f4>
    80f8:	stp	x23, x24, [sp, #32]
    80fc:	str	x25, [sp, #48]
    8100:	mov	x4, #0x0                   	// #0
    8104:	mov	x3, #0x0                   	// #0
    8108:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    810c:	add	x2, x2, #0xcb8
    8110:	mov	w1, #0x29f                 	// #671
    8114:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8118:	add	x0, x0, #0x4d8
    811c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8120:	stp	x23, x24, [sp, #32]
    8124:	str	x25, [sp, #48]
    8128:	mov	x3, x19
    812c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8130:	add	x2, x2, #0x508
    8134:	mov	w1, #0x1b6                 	// #438
    8138:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    813c:	add	x0, x0, #0x520
    8140:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8144:	add	x19, x19, #0x1
    8148:	add	x4, x4, #0x20
    814c:	cmp	x19, x6
    8150:	b.eq	8234 <*ABS*+0x10@plt+0x14d4>  // b.none
    8154:	lsl	x7, x19, #5
    8158:	ldr	w5, [x4, #24]
    815c:	cmp	w5, w2
    8160:	b.ne	8144 <*ABS*+0x10@plt+0x13e4>  // b.any
    8164:	ldrb	w0, [x4, #28]
    8168:	cmp	w0, w1
    816c:	b.ne	8144 <*ABS*+0x10@plt+0x13e4>  // b.any
    8170:	ldr	x0, [x4, #8]
    8174:	add	x0, x0, #0x1
    8178:	str	x0, [x4, #8]
    817c:	ldr	x4, [x20, #24]
    8180:	cmp	x4, x19
    8184:	b.ls	8120 <*ABS*+0x10@plt+0x13c0>  // b.plast
    8188:	ldr	x0, [x20, #8]
    818c:	add	x7, x0, x7
    8190:	ldr	x0, [x7, #16]
    8194:	add	x0, x0, x21
    8198:	str	x0, [x7, #16]
    819c:	ldr	x0, [x20, #24]
    81a0:	cmp	x0, x19
    81a4:	b.eq	82b0 <*ABS*+0x10@plt+0x1550>  // b.none
    81a8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    81ac:	ldrb	w0, [x0, #3272]
    81b0:	cbz	w0, 8224 <*ABS*+0x10@plt+0x14c4>
    81b4:	ldr	x4, [x20, #24]
    81b8:	cmp	x19, x4
    81bc:	b.cs	8444 <*ABS*+0x10@plt+0x16e4>  // b.hs, b.nlast
    81c0:	ldr	x0, [x20, #8]
    81c4:	lsl	x19, x19, #5
    81c8:	ldr	w0, [x0, x19]
    81cc:	str	w0, [sp, #64]
    81d0:	str	x22, [sp, #72]
    81d4:	str	x21, [sp, #80]
    81d8:	ldr	x3, [x20, #48]
    81dc:	ldr	x0, [x20, #40]
    81e0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    81e4:	movk	x1, #0xaaab
    81e8:	umulh	x0, x0, x1
    81ec:	lsr	x4, x0, #4
    81f0:	cmp	x3, x0, lsr #4
    81f4:	b.hi	8468 <*ABS*+0x10@plt+0x1708>  // b.pmore
    81f8:	cmp	x3, x4
    81fc:	b.eq	8488 <*ABS*+0x10@plt+0x1728>  // b.none
    8200:	ldr	x3, [x20, #32]
    8204:	ldr	x1, [x20, #48]
    8208:	add	x0, x1, #0x1
    820c:	str	x0, [x20, #48]
    8210:	add	x0, x1, x1, lsl #1
    8214:	mov	x2, #0x18                  	// #24
    8218:	add	x1, sp, #0x40
    821c:	add	x0, x3, x0, lsl #3
    8220:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    8224:	ldp	x21, x22, [sp, #16]
    8228:	ldr	x30, [sp, #56]
    822c:	ldp	x19, x20, [sp], #96
    8230:	ret
    8234:	ldr	x19, [x20, #24]
    8238:	mov	x0, #0x1388                	// #5000
    823c:	cmp	x19, x0
    8240:	b.eq	8224 <*ABS*+0x10@plt+0x14c4>  // b.none
    8244:	stp	xzr, xzr, [sp, #64]
    8248:	stp	xzr, xzr, [sp, #80]
    824c:	mov	x0, #0x1                   	// #1
    8250:	str	x0, [sp, #72]
    8254:	ldr	w3, [x20]
    8258:	add	w4, w3, #0x1
    825c:	mov	x0, x20
    8260:	str	w4, [x0], #8
    8264:	str	w3, [sp, #64]
    8268:	str	x21, [sp, #80]
    826c:	str	w2, [sp, #88]
    8270:	strb	w1, [sp, #92]
    8274:	ldr	x0, [x0, #8]
    8278:	lsr	x4, x0, #5
    827c:	cmp	x19, x0, lsr #5
    8280:	b.hi	82b8 <*ABS*+0x10@plt+0x1558>  // b.pmore
    8284:	cmp	x19, x4
    8288:	b.eq	82dc <*ABS*+0x10@plt+0x157c>  // b.none
    828c:	ldr	x3, [x20, #8]
    8290:	ldr	x0, [x20, #24]
    8294:	add	x2, x0, #0x1
    8298:	str	x2, [x20, #24]
    829c:	mov	x2, #0x20                  	// #32
    82a0:	add	x1, sp, #0x40
    82a4:	add	x0, x3, x0, lsl #5
    82a8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    82ac:	b	81a8 <*ABS*+0x10@plt+0x1448>
    82b0:	mov	x19, x0
    82b4:	b	8238 <*ABS*+0x10@plt+0x14d8>
    82b8:	stp	x23, x24, [sp, #32]
    82bc:	str	x25, [sp, #48]
    82c0:	mov	x3, x19
    82c4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    82c8:	add	x2, x2, #0x5b0
    82cc:	mov	w1, #0x1be                 	// #446
    82d0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    82d4:	add	x0, x0, #0x520
    82d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    82dc:	stp	x23, x24, [sp, #32]
    82e0:	str	x25, [sp, #48]
    82e4:	adds	x3, x19, #0x1
    82e8:	b.eq	83b0 <*ABS*+0x10@plt+0x1650>  // b.none
    82ec:	tst	x19, x3
    82f0:	b.eq	8330 <*ABS*+0x10@plt+0x15d0>  // b.none
    82f4:	clz	x1, x3
    82f8:	mov	w0, #0x3f                  	// #63
    82fc:	sub	w1, w0, w1
    8300:	add	w0, w1, #0x1
    8304:	mov	x4, #0x1                   	// #1
    8308:	lsl	x4, x4, x0
    830c:	cmp	x3, x4
    8310:	b.cs	83d0 <*ABS*+0x10@plt+0x1670>  // b.hs, b.nlast
    8314:	mov	x0, #0x1                   	// #1
    8318:	lsl	x0, x0, x1
    831c:	cmp	x3, x0
    8320:	b.ls	83e8 <*ABS*+0x10@plt+0x1688>  // b.plast
    8324:	mov	x3, x4
    8328:	cmp	x19, x4
    832c:	b.hi	8404 <*ABS*+0x10@plt+0x16a4>  // b.pmore
    8330:	lsl	x23, x3, #5
    8334:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8338:	ldr	x0, [x0, #4000]
    833c:	ldr	x0, [x0]
    8340:	cbz	x0, 8420 <*ABS*+0x10@plt+0x16c0>
    8344:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8348:	ldr	x0, [x0, #4000]
    834c:	ldr	x0, [x0]
    8350:	sub	x1, x0, #0x1
    8354:	tst	x0, x1
    8358:	b.ne	8434 <*ABS*+0x10@plt+0x16d4>  // b.any
    835c:	add	x23, x23, x1
    8360:	neg	x0, x0
    8364:	and	x23, x23, x0
    8368:	mov	w2, #0x0                   	// #0
    836c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8370:	add	x1, x1, #0x650
    8374:	mov	x0, x23
    8378:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    837c:	mov	x25, x0
    8380:	ldr	x2, [x20, #24]
    8384:	lsl	x2, x2, #5
    8388:	ldr	x1, [x20, #8]
    838c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    8390:	ldr	x1, [x20, #16]
    8394:	ldr	x0, [x20, #8]
    8398:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    839c:	str	x25, [x20, #8]
    83a0:	str	x23, [x20, #16]
    83a4:	ldp	x23, x24, [sp, #32]
    83a8:	ldr	x25, [sp, #48]
    83ac:	b	828c <*ABS*+0x10@plt+0x152c>
    83b0:	mov	x4, #0x0                   	// #0
    83b4:	mov	x3, #0x0                   	// #0
    83b8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    83bc:	add	x2, x2, #0xcf8
    83c0:	mov	w1, #0x177                 	// #375
    83c4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    83c8:	add	x0, x0, #0x520
    83cc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    83d0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    83d4:	add	x2, x2, #0x5d0
    83d8:	mov	w1, #0x17b                 	// #379
    83dc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    83e0:	add	x0, x0, #0x520
    83e4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    83e8:	mov	x4, x0
    83ec:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    83f0:	add	x2, x2, #0x5f8
    83f4:	mov	w1, #0x17c                 	// #380
    83f8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    83fc:	add	x0, x0, #0x520
    8400:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8404:	mov	x3, x19
    8408:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    840c:	add	x2, x2, #0x618
    8410:	mov	w1, #0x1fd                 	// #509
    8414:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8418:	add	x0, x0, #0x520
    841c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8420:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    8424:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8428:	ldr	x1, [x1, #4000]
    842c:	str	x0, [x1]
    8430:	b	8344 <*ABS*+0x10@plt+0x15e4>
    8434:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8438:	add	x0, x0, #0x638
    843c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    8440:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    8444:	stp	x23, x24, [sp, #32]
    8448:	str	x25, [sp, #48]
    844c:	mov	x3, x19
    8450:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8454:	add	x2, x2, #0x508
    8458:	mov	w1, #0x1b6                 	// #438
    845c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8460:	add	x0, x0, #0x520
    8464:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8468:	stp	x23, x24, [sp, #32]
    846c:	str	x25, [sp, #48]
    8470:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8474:	add	x2, x2, #0x5b0
    8478:	mov	w1, #0x1be                 	// #446
    847c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8480:	add	x0, x0, #0x520
    8484:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8488:	add	x0, x3, #0x1
    848c:	tst	x3, x0
    8490:	b.eq	85b8 <*ABS*+0x10@plt+0x1858>  // b.none
    8494:	clz	x2, x0
    8498:	mov	w1, #0x3f                  	// #63
    849c:	sub	w1, w1, w2
    84a0:	add	w2, w1, #0x1
    84a4:	mov	x4, #0x1                   	// #1
    84a8:	lsl	x4, x4, x2
    84ac:	cmp	x0, x4
    84b0:	b.cs	854c <*ABS*+0x10@plt+0x17ec>  // b.hs, b.nlast
    84b4:	mov	x2, #0x1                   	// #1
    84b8:	lsl	x1, x2, x1
    84bc:	cmp	x0, x1
    84c0:	b.ls	8570 <*ABS*+0x10@plt+0x1810>  // b.plast
    84c4:	cmp	x3, x4
    84c8:	b.hi	8598 <*ABS*+0x10@plt+0x1838>  // b.pmore
    84cc:	add	x4, x4, x4, lsl #1
    84d0:	lsl	x19, x4, #3
    84d4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    84d8:	ldr	x0, [x0, #4000]
    84dc:	ldr	x0, [x0]
    84e0:	cbz	x0, 85c0 <*ABS*+0x10@plt+0x1860>
    84e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    84e8:	ldr	x0, [x0, #4000]
    84ec:	ldr	x0, [x0]
    84f0:	sub	x1, x0, #0x1
    84f4:	tst	x0, x1
    84f8:	b.ne	85d4 <*ABS*+0x10@plt+0x1874>  // b.any
    84fc:	add	x19, x19, x1
    8500:	neg	x0, x0
    8504:	and	x19, x19, x0
    8508:	mov	w2, #0x0                   	// #0
    850c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8510:	add	x1, x1, #0x650
    8514:	mov	x0, x19
    8518:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    851c:	mov	x22, x0
    8520:	ldr	x1, [x20, #48]
    8524:	add	x1, x1, x1, lsl #1
    8528:	lsl	x2, x1, #3
    852c:	ldr	x1, [x20, #32]
    8530:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    8534:	ldr	x1, [x20, #40]
    8538:	ldr	x0, [x20, #32]
    853c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    8540:	str	x22, [x20, #32]
    8544:	str	x19, [x20, #40]
    8548:	b	8200 <*ABS*+0x10@plt+0x14a0>
    854c:	stp	x23, x24, [sp, #32]
    8550:	str	x25, [sp, #48]
    8554:	mov	x3, x0
    8558:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    855c:	add	x2, x2, #0x5d0
    8560:	mov	w1, #0x17b                 	// #379
    8564:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8568:	add	x0, x0, #0x520
    856c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8570:	stp	x23, x24, [sp, #32]
    8574:	str	x25, [sp, #48]
    8578:	mov	x4, x1
    857c:	mov	x3, x0
    8580:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8584:	add	x2, x2, #0x5f8
    8588:	mov	w1, #0x17c                 	// #380
    858c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8590:	add	x0, x0, #0x520
    8594:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8598:	stp	x23, x24, [sp, #32]
    859c:	str	x25, [sp, #48]
    85a0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    85a4:	add	x2, x2, #0x618
    85a8:	mov	w1, #0x1fd                 	// #509
    85ac:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    85b0:	add	x0, x0, #0x520
    85b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    85b8:	mov	x4, x0
    85bc:	b	84cc <*ABS*+0x10@plt+0x176c>
    85c0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    85c4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    85c8:	ldr	x1, [x1, #4000]
    85cc:	str	x0, [x1]
    85d0:	b	84e4 <*ABS*+0x10@plt+0x1784>
    85d4:	stp	x23, x24, [sp, #32]
    85d8:	str	x25, [sp, #48]
    85dc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    85e0:	add	x0, x0, #0x638
    85e4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    85e8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    85ec:	stp	xzr, xzr, [sp, #64]
    85f0:	stp	xzr, xzr, [sp, #80]
    85f4:	mov	x0, #0x1                   	// #1
    85f8:	str	x0, [sp, #72]
    85fc:	ldr	w3, [x20]
    8600:	add	w4, w3, #0x1
    8604:	mov	x0, x20
    8608:	str	w4, [x0], #8
    860c:	str	w3, [sp, #64]
    8610:	str	x21, [sp, #80]
    8614:	str	w2, [sp, #88]
    8618:	strb	w1, [sp, #92]
    861c:	ldr	x4, [x0, #8]
    8620:	lsr	x4, x4, #5
    8624:	mov	x19, x6
    8628:	b	8284 <*ABS*+0x10@plt+0x1524>
    862c:	stp	x19, x20, [sp, #-64]!
    8630:	str	x30, [sp, #40]
    8634:	cbz	x1, 8678 <*ABS*+0x10@plt+0x1918>
    8638:	stp	x21, x22, [sp, #16]
    863c:	mov	x20, x1
    8640:	bl	b3b0 <__sanitizer_print_stack_trace@@Base+0x594>
    8644:	mov	x21, x0
    8648:	add	x19, sp, #0x38
    864c:	mov	x1, x0
    8650:	mov	x0, x19
    8654:	bl	b3b4 <__sanitizer_print_stack_trace@@Base+0x598>
    8658:	mov	x0, x19
    865c:	bl	b3f4 <__sanitizer_print_stack_trace@@Base+0x5d8>
    8660:	and	w0, w0, #0xff
    8664:	cbnz	w0, 86a0 <*ABS*+0x10@plt+0x1940>
    8668:	ldp	x21, x22, [sp, #16]
    866c:	ldr	x30, [sp, #40]
    8670:	ldp	x19, x20, [sp], #64
    8674:	ret
    8678:	stp	x21, x22, [sp, #16]
    867c:	str	x23, [sp, #32]
    8680:	mov	x4, #0x0                   	// #0
    8684:	mov	x3, #0x0                   	// #0
    8688:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    868c:	add	x2, x2, #0x5a0
    8690:	mov	w1, #0x1e8                 	// #488
    8694:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8698:	add	x0, x0, #0x4d8
    869c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    86a0:	add	x0, sp, #0x38
    86a4:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    86a8:	cbnz	w0, 8714 <*ABS*+0x10@plt+0x19b4>
    86ac:	str	x23, [sp, #32]
    86b0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    86b4:	ldr	w19, [x0, #3276]
    86b8:	cbz	w19, 8728 <*ABS*+0x10@plt+0x19c8>
    86bc:	add	x0, sp, #0x38
    86c0:	bl	b43c <__sanitizer_print_stack_trace@@Base+0x620>
    86c4:	bl	1e97c <OnPrint@@Base+0x144c>
    86c8:	cmp	w19, w1
    86cc:	csel	w19, w19, w1, cc  // cc = lo, ul, last
    86d0:	bfxil	x1, x19, #0, #32
    86d4:	bl	1ed58 <OnPrint@@Base+0x1828>
    86d8:	mov	w19, w0
    86dc:	add	x23, sp, #0x38
    86e0:	mov	x0, x23
    86e4:	bl	b42c <__sanitizer_print_stack_trace@@Base+0x610>
    86e8:	mov	x22, x0
    86ec:	mov	x0, x23
    86f0:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    86f4:	mov	w4, w0
    86f8:	mov	x3, x22
    86fc:	mov	w2, w19
    8700:	mov	x1, x21
    8704:	mov	x0, x20
    8708:	bl	80bc <*ABS*+0x10@plt+0x135c>
    870c:	ldr	x23, [sp, #32]
    8710:	b	8668 <*ABS*+0x10@plt+0x1908>
    8714:	add	x0, sp, #0x38
    8718:	bl	b408 <__sanitizer_print_stack_trace@@Base+0x5ec>
    871c:	cmp	w0, #0x1
    8720:	b.ne	8668 <*ABS*+0x10@plt+0x1908>  // b.any
    8724:	b	86ac <*ABS*+0x10@plt+0x194c>
    8728:	add	x0, sp, #0x38
    872c:	bl	b43c <__sanitizer_print_stack_trace@@Base+0x620>
    8730:	mov	w19, w0
    8734:	b	86dc <*ABS*+0x10@plt+0x197c>
    8738:	stp	x19, x20, [sp, #-48]!
    873c:	str	x30, [sp, #40]
    8740:	ldr	x4, [x0, #24]
    8744:	cmp	x1, x4
    8748:	b.cs	8780 <*ABS*+0x10@plt+0x1a20>  // b.hs, b.nlast
    874c:	stp	x21, x22, [sp, #16]
    8750:	mov	x21, x0
    8754:	ldr	x0, [x0, #8]
    8758:	lsl	x1, x1, #5
    875c:	ldr	w22, [x0, x1]
    8760:	ldr	x0, [x21, #48]
    8764:	cbz	x0, 87e4 <*ABS*+0x10@plt+0x1a84>
    8768:	str	x23, [sp, #32]
    876c:	mov	x19, #0x0                   	// #0
    8770:	mov	x20, #0x0                   	// #0
    8774:	adrp	x23, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8778:	add	x23, x23, #0xd08
    877c:	b	87c8 <*ABS*+0x10@plt+0x1a68>
    8780:	stp	x21, x22, [sp, #16]
    8784:	str	x23, [sp, #32]
    8788:	mov	x3, x1
    878c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8790:	add	x2, x2, #0x508
    8794:	mov	w1, #0x1b6                 	// #438
    8798:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    879c:	add	x0, x0, #0x520
    87a0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    87a4:	ldr	x2, [x3, #16]
    87a8:	ldr	x1, [x3, #8]
    87ac:	mov	x0, x23
    87b0:	bl	1d874 <OnPrint@@Base+0x344>
    87b4:	add	x20, x20, #0x1
    87b8:	add	x19, x19, #0x18
    87bc:	ldr	x0, [x21, #48]
    87c0:	cmp	x20, x0
    87c4:	b.cs	87e0 <*ABS*+0x10@plt+0x1a80>  // b.hs, b.nlast
    87c8:	ldr	x1, [x21, #32]
    87cc:	add	x3, x1, x19
    87d0:	ldr	w0, [x1, x19]
    87d4:	cmp	w0, w22
    87d8:	b.ne	87b4 <*ABS*+0x10@plt+0x1a54>  // b.any
    87dc:	b	87a4 <*ABS*+0x10@plt+0x1a44>
    87e0:	ldr	x23, [sp, #32]
    87e4:	ldp	x21, x22, [sp, #16]
    87e8:	ldr	x30, [sp, #40]
    87ec:	ldp	x19, x20, [sp], #48
    87f0:	ret
    87f4:	stp	x19, x20, [sp, #-64]!
    87f8:	stp	x21, x22, [sp, #16]
    87fc:	stp	x23, x30, [sp, #32]
    8800:	mov	x20, x0
    8804:	mov	x19, x1
    8808:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
    880c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    8810:	add	x2, x2, #0x9e0
    8814:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8818:	add	x1, x1, #0xd18
    881c:	ands	w21, w0, #0xff
    8820:	csel	x1, x1, x2, ne  // ne = any
    8824:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8828:	add	x0, x0, #0xd50
    882c:	bl	1d874 <OnPrint@@Base+0x344>
    8830:	ldr	x4, [x20, #24]
    8834:	cmp	x19, x4
    8838:	b.cs	88e8 <*ABS*+0x10@plt+0x1b88>  // b.hs, b.nlast
    883c:	lsl	x23, x19, #5
    8840:	mov	x22, x20
    8844:	ldr	x2, [x22, #8]!
    8848:	add	x2, x2, x23
    884c:	ldrb	w3, [x2, #28]
    8850:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8854:	add	x0, x0, #0xd30
    8858:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    885c:	add	x1, x1, #0xd28
    8860:	cmp	w3, #0x0
    8864:	ldr	x3, [x2, #8]
    8868:	ldr	x2, [x2, #16]
    886c:	csel	x1, x1, x0, ne  // ne = any
    8870:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8874:	add	x0, x0, #0xd58
    8878:	bl	1d874 <OnPrint@@Base+0x344>
    887c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    8880:	add	x0, x0, #0x9e0
    8884:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8888:	add	x1, x1, #0xd40
    888c:	cmp	w21, #0x0
    8890:	csel	x1, x1, x0, ne  // ne = any
    8894:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8898:	add	x0, x0, #0xd50
    889c:	bl	1d874 <OnPrint@@Base+0x344>
    88a0:	ldr	x4, [x22, #16]
    88a4:	cmp	x19, x4
    88a8:	b.cs	8904 <*ABS*+0x10@plt+0x1ba4>  // b.hs, b.nlast
    88ac:	ldr	x0, [x20, #8]
    88b0:	add	x23, x0, x23
    88b4:	ldr	w0, [x23, #24]
    88b8:	cbz	w0, 8920 <*ABS*+0x10@plt+0x1bc0>
    88bc:	bl	1e97c <OnPrint@@Base+0x144c>
    88c0:	stp	x0, x1, [sp, #48]
    88c4:	add	x0, sp, #0x30
    88c8:	bl	1f6c0 <OnPrint@@Base+0x2190>
    88cc:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    88d0:	ldrb	w0, [x0, #3272]
    88d4:	cbnz	w0, 8940 <*ABS*+0x10@plt+0x1be0>
    88d8:	ldp	x21, x22, [sp, #16]
    88dc:	ldp	x23, x30, [sp, #32]
    88e0:	ldp	x19, x20, [sp], #64
    88e4:	ret
    88e8:	mov	x3, x19
    88ec:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    88f0:	add	x2, x2, #0x508
    88f4:	mov	w1, #0x1b6                 	// #438
    88f8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    88fc:	add	x0, x0, #0x520
    8900:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8904:	mov	x3, x19
    8908:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    890c:	add	x2, x2, #0x508
    8910:	mov	w1, #0x1b6                 	// #438
    8914:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8918:	add	x0, x0, #0x520
    891c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8920:	mov	x4, #0x0                   	// #0
    8924:	mov	x3, #0x0                   	// #0
    8928:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    892c:	add	x2, x2, #0xd98
    8930:	mov	w1, #0x1e1                 	// #481
    8934:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8938:	add	x0, x0, #0x4d8
    893c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8940:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8944:	add	x0, x0, #0xdb8
    8948:	bl	1d874 <OnPrint@@Base+0x344>
    894c:	mov	x1, x19
    8950:	mov	x0, x20
    8954:	bl	8738 <*ABS*+0x10@plt+0x19d8>
    8958:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    895c:	add	x0, x0, #0x88
    8960:	bl	1d874 <OnPrint@@Base+0x344>
    8964:	b	88d8 <*ABS*+0x10@plt+0x1b78>
    8968:	stp	x19, x20, [sp, #-80]!
    896c:	stp	x21, x22, [sp, #16]
    8970:	str	x30, [sp, #32]
    8974:	ldr	x19, [x0, #24]
    8978:	mov	x1, #0x1388                	// #5000
    897c:	cmp	x19, x1
    8980:	b.hi	899c <*ABS*+0x10@plt+0x1c3c>  // b.pmore
    8984:	cbz	x19, 89e4 <*ABS*+0x10@plt+0x1c84>
    8988:	ldr	x0, [x0, #8]
    898c:	add	x2, x0, x19, lsl #5
    8990:	mov	x20, #0x0                   	// #0
    8994:	mov	x19, #0x0                   	// #0
    8998:	b	89c8 <*ABS*+0x10@plt+0x1c68>
    899c:	mov	x4, #0x0                   	// #0
    89a0:	mov	x3, #0x0                   	// #0
    89a4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    89a8:	add	x2, x2, #0xdd0
    89ac:	mov	w1, #0x2f1                 	// #753
    89b0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    89b4:	add	x0, x0, #0x4d8
    89b8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    89bc:	add	x0, x0, #0x20
    89c0:	cmp	x2, x0
    89c4:	b.eq	89e8 <*ABS*+0x10@plt+0x1c88>  // b.none
    89c8:	ldrb	w1, [x0, #29]
    89cc:	cbnz	w1, 89bc <*ABS*+0x10@plt+0x1c5c>
    89d0:	ldr	x1, [x0, #16]
    89d4:	add	x19, x19, x1
    89d8:	ldr	x1, [x0, #8]
    89dc:	add	x20, x20, x1
    89e0:	b	89bc <*ABS*+0x10@plt+0x1c5c>
    89e4:	mov	x20, x19
    89e8:	str	xzr, [sp, #56]
    89ec:	str	xzr, [sp, #64]
    89f0:	str	xzr, [sp, #48]
    89f4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    89f8:	ldr	x0, [x0, #4000]
    89fc:	ldr	x0, [x0]
    8a00:	cbz	x0, 8ae4 <*ABS*+0x10@plt+0x1d84>
    8a04:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8a08:	ldr	x0, [x0, #4000]
    8a0c:	ldr	x0, [x0]
    8a10:	sub	x1, x0, #0x1
    8a14:	tst	x1, x0
    8a18:	b.ne	8af8 <*ABS*+0x10@plt+0x1d98>  // b.any
    8a1c:	add	x21, x0, #0x3ff
    8a20:	neg	x0, x0
    8a24:	and	x21, x21, x0
    8a28:	mov	w2, #0x0                   	// #0
    8a2c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8a30:	add	x1, x1, #0x650
    8a34:	mov	x0, x21
    8a38:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    8a3c:	mov	x22, x0
    8a40:	ldr	x2, [sp, #64]
    8a44:	ldr	x1, [sp, #48]
    8a48:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    8a4c:	ldr	x1, [sp, #56]
    8a50:	ldr	x0, [sp, #48]
    8a54:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    8a58:	str	x22, [sp, #48]
    8a5c:	str	x21, [sp, #56]
    8a60:	ldr	x0, [sp, #64]
    8a64:	cmp	x0, #0x3ff
    8a68:	b.hi	8a90 <*ABS*+0x10@plt+0x1d30>  // b.pmore
    8a6c:	cmp	x21, #0x3ff
    8a70:	b.ls	8b08 <*ABS*+0x10@plt+0x1da8>  // b.plast
    8a74:	ldr	x0, [sp, #64]
    8a78:	mov	x2, #0x400                 	// #1024
    8a7c:	sub	x2, x2, x0
    8a80:	mov	w1, #0x0                   	// #0
    8a84:	ldr	x3, [sp, #48]
    8a88:	add	x0, x3, x0
    8a8c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    8a90:	mov	x0, #0x400                 	// #1024
    8a94:	str	x0, [sp, #64]
    8a98:	str	xzr, [sp, #72]
    8a9c:	ldr	x0, [sp, #48]
    8aa0:	strb	wzr, [x0]
    8aa4:	mov	x3, x20
    8aa8:	mov	x2, x19
    8aac:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8ab0:	add	x1, x1, #0xe00
    8ab4:	add	x0, sp, #0x30
    8ab8:	bl	1d99c <OnPrint@@Base+0x46c>
    8abc:	mov	x1, #0x0                   	// #0
    8ac0:	ldr	x0, [sp, #48]
    8ac4:	bl	12e7c <__sanitizer_report_error_summary@@Base+0x1c>
    8ac8:	ldr	x1, [sp, #56]
    8acc:	ldr	x0, [sp, #48]
    8ad0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    8ad4:	ldp	x21, x22, [sp, #16]
    8ad8:	ldr	x30, [sp, #32]
    8adc:	ldp	x19, x20, [sp], #80
    8ae0:	ret
    8ae4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    8ae8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8aec:	ldr	x1, [x1, #4000]
    8af0:	str	x0, [x1]
    8af4:	b	8a04 <*ABS*+0x10@plt+0x1ca4>
    8af8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8afc:	add	x0, x0, #0x638
    8b00:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    8b04:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    8b08:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8b0c:	ldr	x0, [x0, #4000]
    8b10:	ldr	x0, [x0]
    8b14:	cbz	x0, 8b78 <*ABS*+0x10@plt+0x1e18>
    8b18:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8b1c:	ldr	x0, [x0, #4000]
    8b20:	ldr	x0, [x0]
    8b24:	sub	x1, x0, #0x1
    8b28:	tst	x1, x0
    8b2c:	b.ne	8b8c <*ABS*+0x10@plt+0x1e2c>  // b.any
    8b30:	add	x21, x0, #0x3ff
    8b34:	neg	x0, x0
    8b38:	and	x21, x21, x0
    8b3c:	mov	w2, #0x0                   	// #0
    8b40:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8b44:	add	x1, x1, #0x650
    8b48:	mov	x0, x21
    8b4c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    8b50:	mov	x22, x0
    8b54:	ldr	x2, [sp, #64]
    8b58:	ldr	x1, [sp, #48]
    8b5c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    8b60:	ldr	x1, [sp, #56]
    8b64:	ldr	x0, [sp, #48]
    8b68:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    8b6c:	str	x22, [sp, #48]
    8b70:	str	x21, [sp, #56]
    8b74:	b	8a74 <*ABS*+0x10@plt+0x1d14>
    8b78:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    8b7c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8b80:	ldr	x1, [x1, #4000]
    8b84:	str	x0, [x1]
    8b88:	b	8b18 <*ABS*+0x10@plt+0x1db8>
    8b8c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8b90:	add	x0, x0, #0x638
    8b94:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    8b98:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    8b9c:	stp	x19, x20, [sp, #-160]!
    8ba0:	str	x30, [sp, #80]
    8ba4:	mov	x19, x0
    8ba8:	ldr	x0, [x0, #24]
    8bac:	cbz	x0, 8d18 <*ABS*+0x10@plt+0x1fb8>
    8bb0:	stp	x21, x22, [sp, #16]
    8bb4:	stp	x23, x24, [sp, #32]
    8bb8:	stp	x25, x26, [sp, #48]
    8bbc:	stp	x27, x28, [sp, #64]
    8bc0:	mov	x23, #0x0                   	// #0
    8bc4:	add	x0, sp, #0x98
    8bc8:	str	x0, [sp, #120]
    8bcc:	adrp	x25, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    8bd0:	add	x25, x25, #0x450
    8bd4:	add	x25, x25, #0x18
    8bd8:	b	8d98 <*ABS*+0x10@plt+0x2038>
    8bdc:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    8be0:	mov	x1, x20
    8be4:	bl	24984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
    8be8:	mov	x20, x0
    8bec:	cbz	x0, 8c38 <*ABS*+0x10@plt+0x1ed8>
    8bf0:	mov	x21, x0
    8bf4:	add	x28, sp, #0x88
    8bf8:	mov	x3, x28
    8bfc:	mov	x2, x25
    8c00:	ldr	x1, [x21, #40]
    8c04:	mov	x0, x22
    8c08:	bl	23514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    8c0c:	and	w0, w0, #0xff
    8c10:	cbnz	w0, 8c38 <*ABS*+0x10@plt+0x1ed8>
    8c14:	mov	x3, x28
    8c18:	mov	x2, x25
    8c1c:	ldr	x1, [x21, #56]
    8c20:	mov	x0, x22
    8c24:	bl	23514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    8c28:	and	w0, w0, #0xff
    8c2c:	cbnz	w0, 8c38 <*ABS*+0x10@plt+0x1ed8>
    8c30:	ldr	x21, [x21]
    8c34:	cbnz	x21, 8bf8 <*ABS*+0x10@plt+0x1e98>
    8c38:	mov	x0, x20
    8c3c:	bl	238e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
    8c40:	ldr	x0, [sp, #136]
    8c44:	cbnz	x0, 8d24 <*ABS*+0x10@plt+0x1fc4>
    8c48:	add	x24, x24, #0x1
    8c4c:	ldr	x0, [sp, #104]
    8c50:	cmp	x0, x24
    8c54:	b.eq	8d88 <*ABS*+0x10@plt+0x2028>  // b.none
    8c58:	ldr	x20, [x26, x24, lsl #3]
    8c5c:	sub	x20, x20, #0x4
    8c60:	str	xzr, [sp, #136]
    8c64:	bl	6f04 <*ABS*+0x10@plt+0x1a4>
    8c68:	mov	x22, x0
    8c6c:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
    8c70:	str	xzr, [sp, #144]
    8c74:	ldr	x3, [sp, #120]
    8c78:	ldr	x2, [sp, #112]
    8c7c:	mov	x1, x20
    8c80:	bl	24904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
    8c84:	and	w0, w0, #0xff
    8c88:	cbz	w0, 8bdc <*ABS*+0x10@plt+0x1e7c>
    8c8c:	ldr	x1, [sp, #144]
    8c90:	cbz	x1, 8bdc <*ABS*+0x10@plt+0x1e7c>
    8c94:	add	x3, sp, #0x88
    8c98:	mov	x2, x25
    8c9c:	mov	x0, x22
    8ca0:	bl	23514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3260>
    8ca4:	and	w0, w0, #0xff
    8ca8:	cbz	w0, 8bdc <*ABS*+0x10@plt+0x1e7c>
    8cac:	ldr	x0, [sp, #136]
    8cb0:	b	8c44 <*ABS*+0x10@plt+0x1ee4>
    8cb4:	mov	x3, x23
    8cb8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8cbc:	add	x2, x2, #0x508
    8cc0:	mov	w1, #0x1b6                 	// #438
    8cc4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8cc8:	add	x0, x0, #0x520
    8ccc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8cd0:	mov	x3, x23
    8cd4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8cd8:	add	x2, x2, #0x508
    8cdc:	mov	w1, #0x1b6                 	// #438
    8ce0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8ce4:	add	x0, x0, #0x520
    8ce8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8cec:	mov	x3, x23
    8cf0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8cf4:	add	x2, x2, #0x508
    8cf8:	mov	w1, #0x1b6                 	// #438
    8cfc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8d00:	add	x0, x0, #0x520
    8d04:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8d08:	ldp	x21, x22, [sp, #16]
    8d0c:	ldp	x23, x24, [sp, #32]
    8d10:	ldp	x25, x26, [sp, #48]
    8d14:	ldp	x27, x28, [sp, #64]
    8d18:	ldr	x30, [sp, #80]
    8d1c:	ldp	x19, x20, [sp], #160
    8d20:	ret
    8d24:	ldr	x4, [x19, #24]
    8d28:	cmp	x4, x23
    8d2c:	b.ls	8cb4 <*ABS*+0x10@plt+0x1f54>  // b.plast
    8d30:	ldr	x2, [x19, #8]
    8d34:	add	x2, x2, x27
    8d38:	ldr	x1, [x0, #24]
    8d3c:	ldr	x2, [x2, #16]
    8d40:	add	x1, x1, x2
    8d44:	str	x1, [x0, #24]
    8d48:	ldr	w1, [x0, #16]
    8d4c:	ldr	x4, [x19, #24]
    8d50:	cmp	x4, x23
    8d54:	b.ls	8cd0 <*ABS*+0x10@plt+0x1f70>  // b.plast
    8d58:	ldr	x2, [x19, #8]
    8d5c:	add	x2, x2, x27
    8d60:	ldr	x2, [x2, #8]
    8d64:	add	w1, w1, w2
    8d68:	str	w1, [x0, #16]
    8d6c:	ldr	x4, [x19, #24]
    8d70:	cmp	x4, x23
    8d74:	b.ls	8cec <*ABS*+0x10@plt+0x1f8c>  // b.plast
    8d78:	ldr	x0, [x19, #8]
    8d7c:	add	x27, x0, x27
    8d80:	mov	w0, #0x1                   	// #1
    8d84:	strb	w0, [x27, #29]
    8d88:	add	x23, x23, #0x1
    8d8c:	ldr	x0, [x19, #24]
    8d90:	cmp	x0, x23
    8d94:	b.ls	8d08 <*ABS*+0x10@plt+0x1fa8>  // b.plast
    8d98:	lsl	x27, x23, #5
    8d9c:	ldr	x0, [x19, #8]
    8da0:	add	x0, x0, x27
    8da4:	ldr	w0, [x0, #24]
    8da8:	bl	1e97c <OnPrint@@Base+0x144c>
    8dac:	mov	x26, x0
    8db0:	mov	w0, w1
    8db4:	str	x0, [sp, #104]
    8db8:	cbz	w1, 8d88 <*ABS*+0x10@plt+0x2028>
    8dbc:	mov	x24, #0x0                   	// #0
    8dc0:	add	x0, sp, #0x90
    8dc4:	str	x0, [sp, #112]
    8dc8:	b	8c58 <*ABS*+0x10@plt+0x1ef8>
    8dcc:	mov	x1, x0
    8dd0:	ldr	x0, [x0, #24]
    8dd4:	cbz	x0, 8dfc <*ABS*+0x10@plt+0x209c>
    8dd8:	ldr	x1, [x1, #8]
    8ddc:	add	x3, x1, x0, lsl #5
    8de0:	mov	x0, #0x0                   	// #0
    8de4:	ldrb	w2, [x1, #29]
    8de8:	cmp	w2, #0x0
    8dec:	cinc	x0, x0, eq  // eq = none
    8df0:	add	x1, x1, #0x20
    8df4:	cmp	x3, x1
    8df8:	b.ne	8de4 <*ABS*+0x10@plt+0x2084>  // b.any
    8dfc:	ret

0000000000008e00 <__lsan_ignore_object@@Base>:
    8e00:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8e04:	ldr	x1, [x1, #4040]
    8e08:	ldrb	w1, [x1, #57]
    8e0c:	cbnz	w1, 8e14 <__lsan_ignore_object@@Base+0x14>
    8e10:	ret
    8e14:	stp	x19, x30, [sp, #-16]!
    8e18:	mov	x19, x0
    8e1c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8e20:	add	x0, x0, #0xcc0
    8e24:	add	x0, x0, #0xe0
    8e28:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8e2c:	mov	x0, x19
    8e30:	bl	b448 <__sanitizer_print_stack_trace@@Base+0x62c>
    8e34:	cmp	w0, #0x2
    8e38:	b.eq	8e68 <__lsan_ignore_object@@Base+0x68>  // b.none
    8e3c:	cmp	w0, #0x1
    8e40:	b.ne	8e8c <__lsan_ignore_object@@Base+0x8c>  // b.any
    8e44:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8e48:	ldr	x0, [x0, #3680]
    8e4c:	ldr	w0, [x0]
    8e50:	cbz	w0, 8ea0 <__lsan_ignore_object@@Base+0xa0>
    8e54:	mov	x1, x19
    8e58:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8e5c:	add	x0, x0, #0xe68
    8e60:	bl	1d908 <OnPrint@@Base+0x3d8>
    8e64:	b	8ea0 <__lsan_ignore_object@@Base+0xa0>
    8e68:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8e6c:	ldr	x0, [x0, #3680]
    8e70:	ldr	w0, [x0]
    8e74:	cbz	w0, 8ea0 <__lsan_ignore_object@@Base+0xa0>
    8e78:	mov	x1, x19
    8e7c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8e80:	add	x0, x0, #0xe30
    8e84:	bl	1d908 <OnPrint@@Base+0x3d8>
    8e88:	b	8ea0 <__lsan_ignore_object@@Base+0xa0>
    8e8c:	cbnz	w0, 8ea0 <__lsan_ignore_object@@Base+0xa0>
    8e90:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8e94:	ldr	x0, [x0, #3680]
    8e98:	ldr	w0, [x0]
    8e9c:	cbnz	w0, 8eb8 <__lsan_ignore_object@@Base+0xb8>
    8ea0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8ea4:	add	x0, x0, #0xcc0
    8ea8:	add	x0, x0, #0xe0
    8eac:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
    8eb0:	ldp	x19, x30, [sp], #16
    8eb4:	ret
    8eb8:	mov	x1, x19
    8ebc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8ec0:	add	x0, x0, #0xeb0
    8ec4:	bl	1d908 <OnPrint@@Base+0x3d8>
    8ec8:	b	8ea0 <__lsan_ignore_object@@Base+0xa0>

0000000000008ecc <__lsan_register_root_region@@Base>:
    8ecc:	stp	x19, x20, [sp, #-64]!
    8ed0:	stp	x21, x22, [sp, #16]
    8ed4:	str	x30, [sp, #40]
    8ed8:	mov	x20, x0
    8edc:	mov	x21, x1
    8ee0:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8ee4:	add	x19, x19, #0xcc0
    8ee8:	add	x0, x19, #0xe0
    8eec:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
    8ef0:	ldr	x19, [x19, #144]
    8ef4:	cbz	x19, 8f6c <__lsan_register_root_region@@Base+0xa0>
    8ef8:	str	x20, [sp, #48]
    8efc:	str	x21, [sp, #56]
    8f00:	ldr	x3, [x19, #16]
    8f04:	ldr	x0, [x19, #8]
    8f08:	lsr	x4, x0, #4
    8f0c:	cmp	x3, x0, lsr #4
    8f10:	b.hi	8f90 <__lsan_register_root_region@@Base+0xc4>  // b.pmore
    8f14:	cmp	x3, x4
    8f18:	b.eq	8fac <__lsan_register_root_region@@Base+0xe0>  // b.none
    8f1c:	ldr	x3, [x19]
    8f20:	ldr	x0, [x19, #16]
    8f24:	add	x1, x0, #0x1
    8f28:	str	x1, [x19, #16]
    8f2c:	mov	x2, #0x10                  	// #16
    8f30:	add	x1, sp, #0x30
    8f34:	add	x0, x3, x0, lsl #4
    8f38:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    8f3c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8f40:	ldr	x0, [x0, #3680]
    8f44:	ldr	w0, [x0]
    8f48:	cbnz	w0, 90f0 <__lsan_register_root_region@@Base+0x224>
    8f4c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8f50:	add	x0, x0, #0xcc0
    8f54:	add	x0, x0, #0xe0
    8f58:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
    8f5c:	ldp	x21, x22, [sp, #16]
    8f60:	ldr	x30, [sp, #40]
    8f64:	ldp	x19, x20, [sp], #64
    8f68:	ret
    8f6c:	str	x23, [sp, #32]
    8f70:	mov	x4, #0x0                   	// #0
    8f74:	mov	x3, #0x0                   	// #0
    8f78:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8f7c:	add	x2, x2, #0xee8
    8f80:	mov	w1, #0x336                 	// #822
    8f84:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8f88:	add	x0, x0, #0x4d8
    8f8c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8f90:	str	x23, [sp, #32]
    8f94:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8f98:	add	x2, x2, #0x5b0
    8f9c:	mov	w1, #0x1be                 	// #446
    8fa0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    8fa4:	add	x0, x0, #0x520
    8fa8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    8fac:	str	x23, [sp, #32]
    8fb0:	add	x0, x3, #0x1
    8fb4:	tst	x3, x0
    8fb8:	b.eq	90c4 <__lsan_register_root_region@@Base+0x1f8>  // b.none
    8fbc:	clz	x4, x0
    8fc0:	mov	w1, #0x3f                  	// #63
    8fc4:	sub	w1, w1, w4
    8fc8:	add	w22, w1, #0x1
    8fcc:	mov	x4, #0x1                   	// #1
    8fd0:	lsl	x4, x4, x22
    8fd4:	cmp	x0, x4
    8fd8:	b.cs	9070 <__lsan_register_root_region@@Base+0x1a4>  // b.hs, b.nlast
    8fdc:	mov	x2, #0x1                   	// #1
    8fe0:	lsl	x1, x2, x1
    8fe4:	cmp	x0, x1
    8fe8:	b.ls	908c <__lsan_register_root_region@@Base+0x1c0>  // b.plast
    8fec:	cmp	x3, x4
    8ff0:	b.hi	90ac <__lsan_register_root_region@@Base+0x1e0>  // b.pmore
    8ff4:	lsl	x22, x4, #4
    8ff8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8ffc:	ldr	x0, [x0, #4000]
    9000:	ldr	x0, [x0]
    9004:	cbz	x0, 90cc <__lsan_register_root_region@@Base+0x200>
    9008:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    900c:	ldr	x0, [x0, #4000]
    9010:	ldr	x0, [x0]
    9014:	sub	x1, x0, #0x1
    9018:	tst	x0, x1
    901c:	b.ne	90e0 <__lsan_register_root_region@@Base+0x214>  // b.any
    9020:	add	x22, x22, x1
    9024:	neg	x0, x0
    9028:	and	x22, x22, x0
    902c:	mov	w2, #0x0                   	// #0
    9030:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9034:	add	x1, x1, #0x650
    9038:	mov	x0, x22
    903c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    9040:	mov	x23, x0
    9044:	ldr	x2, [x19, #16]
    9048:	lsl	x2, x2, #4
    904c:	ldr	x1, [x19]
    9050:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    9054:	ldr	x1, [x19, #8]
    9058:	ldr	x0, [x19]
    905c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9060:	str	x23, [x19]
    9064:	str	x22, [x19, #8]
    9068:	ldr	x23, [sp, #32]
    906c:	b	8f1c <__lsan_register_root_region@@Base+0x50>
    9070:	mov	x3, x0
    9074:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9078:	add	x2, x2, #0x5d0
    907c:	mov	w1, #0x17b                 	// #379
    9080:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9084:	add	x0, x0, #0x520
    9088:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    908c:	mov	x4, x1
    9090:	mov	x3, x0
    9094:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9098:	add	x2, x2, #0x5f8
    909c:	mov	w1, #0x17c                 	// #380
    90a0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    90a4:	add	x0, x0, #0x520
    90a8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    90ac:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    90b0:	add	x2, x2, #0x618
    90b4:	mov	w1, #0x1fd                 	// #509
    90b8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    90bc:	add	x0, x0, #0x520
    90c0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    90c4:	mov	x4, x0
    90c8:	b	8ff4 <__lsan_register_root_region@@Base+0x128>
    90cc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    90d0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    90d4:	ldr	x1, [x1, #4000]
    90d8:	str	x0, [x1]
    90dc:	b	9008 <__lsan_register_root_region@@Base+0x13c>
    90e0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    90e4:	add	x0, x0, #0x638
    90e8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    90ec:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    90f0:	mov	x2, x21
    90f4:	mov	x1, x20
    90f8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    90fc:	add	x0, x0, #0xf00
    9100:	bl	1d908 <OnPrint@@Base+0x3d8>
    9104:	b	8f4c <__lsan_register_root_region@@Base+0x80>

0000000000009108 <__lsan_unregister_root_region@@Base>:
    9108:	stp	x19, x20, [sp, #-32]!
    910c:	stp	x21, x30, [sp, #16]
    9110:	mov	x19, x0
    9114:	mov	x20, x1
    9118:	adrp	x21, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    911c:	add	x21, x21, #0xcc0
    9120:	add	x0, x21, #0xe0
    9124:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
    9128:	ldr	x1, [x21, #144]
    912c:	cbz	x1, 9184 <__lsan_unregister_root_region@@Base+0x7c>
    9130:	ldr	x6, [x1, #16]
    9134:	cbz	x6, 916c <__lsan_unregister_root_region@@Base+0x64>
    9138:	ldr	x7, [x1]
    913c:	mov	x2, x7
    9140:	mov	x3, #0x0                   	// #0
    9144:	mov	x0, x2
    9148:	ldr	x5, [x2, #8]
    914c:	ldr	x4, [x2]
    9150:	cmp	x5, x20
    9154:	ccmp	x4, x19, #0x0, eq  // eq = none
    9158:	b.eq	91a4 <__lsan_unregister_root_region@@Base+0x9c>  // b.none
    915c:	add	x3, x3, #0x1
    9160:	add	x2, x2, #0x10
    9164:	cmp	x3, x6
    9168:	b.ne	9144 <__lsan_unregister_root_region@@Base+0x3c>  // b.any
    916c:	mov	x2, x20
    9170:	mov	x1, x19
    9174:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9178:	add	x0, x0, #0xf78
    917c:	bl	1d908 <OnPrint@@Base+0x3d8>
    9180:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    9184:	mov	x4, #0x0                   	// #0
    9188:	mov	x3, #0x0                   	// #0
    918c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9190:	add	x2, x2, #0xee8
    9194:	mov	w1, #0x341                 	// #833
    9198:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    919c:	add	x0, x0, #0x4d8
    91a0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    91a4:	add	x6, x7, x6, lsl #4
    91a8:	ldp	x2, x3, [x6, #-16]
    91ac:	stp	x2, x3, [x0]
    91b0:	ldr	x0, [x1, #16]
    91b4:	cbz	x0, 91ec <__lsan_unregister_root_region@@Base+0xe4>
    91b8:	sub	x0, x0, #0x1
    91bc:	str	x0, [x1, #16]
    91c0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    91c4:	ldr	x0, [x0, #3680]
    91c8:	ldr	w0, [x0]
    91cc:	cbnz	w0, 920c <__lsan_unregister_root_region@@Base+0x104>
    91d0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    91d4:	add	x0, x0, #0xcc0
    91d8:	add	x0, x0, #0xe0
    91dc:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
    91e0:	ldp	x21, x30, [sp, #16]
    91e4:	ldp	x19, x20, [sp], #32
    91e8:	ret
    91ec:	mov	x4, #0x0                   	// #0
    91f0:	mov	x3, #0x0                   	// #0
    91f4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    91f8:	add	x2, x2, #0xf30
    91fc:	mov	w1, #0x1ca                 	// #458
    9200:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9204:	add	x0, x0, #0x520
    9208:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    920c:	mov	x2, x20
    9210:	mov	x1, x19
    9214:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9218:	add	x0, x0, #0xf48
    921c:	bl	1d908 <OnPrint@@Base+0x3d8>
    9220:	b	91d0 <__lsan_unregister_root_region@@Base+0xc8>

0000000000009224 <__lsan_disable@@Base>:
    9224:	str	x30, [sp, #-16]!
    9228:	bl	a7f4 <__lsan_do_recoverable_leak_check@@Base+0x4f4>
    922c:	ldr	x30, [sp], #16
    9230:	ret

0000000000009234 <__lsan_enable@@Base>:
    9234:	str	x30, [sp, #-16]!
    9238:	bl	a810 <__lsan_do_recoverable_leak_check@@Base+0x510>
    923c:	ldr	x30, [sp], #16
    9240:	ret
    9244:	stp	x19, x20, [sp, #-320]!
    9248:	stp	x21, x22, [sp, #16]
    924c:	stp	x23, x24, [sp, #32]
    9250:	stp	x25, x26, [sp, #48]
    9254:	stp	x27, x28, [sp, #64]
    9258:	str	x30, [sp, #80]
    925c:	cbz	x1, 92a0 <__lsan_enable@@Base+0x6c>
    9260:	mov	x19, x0
    9264:	mov	x22, x1
    9268:	ldrb	w0, [x1]
    926c:	cbnz	w0, 92c0 <__lsan_enable@@Base+0x8c>
    9270:	ldr	x0, [x19]
    9274:	ldr	x1, [x0, #16]
    9278:	mov	x0, x19
    927c:	blr	x1
    9280:	mov	x20, x0
    9284:	str	xzr, [sp, #248]
    9288:	str	xzr, [sp, #256]
    928c:	str	xzr, [sp, #240]
    9290:	cbnz	x0, 92e0 <__lsan_enable@@Base+0xac>
    9294:	str	x20, [sp, #256]
    9298:	mov	x20, #0x0                   	// #0
    929c:	b	945c <__lsan_enable@@Base+0x228>
    92a0:	mov	x4, #0x0                   	// #0
    92a4:	mov	x3, #0x0                   	// #0
    92a8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    92ac:	add	x2, x2, #0xfd0
    92b0:	mov	w1, #0x22b                 	// #555
    92b4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    92b8:	add	x0, x0, #0x4d8
    92bc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    92c0:	mov	x4, #0x0                   	// #0
    92c4:	mov	x3, #0x0                   	// #0
    92c8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    92cc:	add	x2, x2, #0xfe8
    92d0:	mov	w1, #0x22c                 	// #556
    92d4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    92d8:	add	x0, x0, #0x4d8
    92dc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    92e0:	lsl	x24, x0, #3
    92e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    92e8:	ldr	x0, [x0, #4000]
    92ec:	ldr	x0, [x0]
    92f0:	cbz	x0, 9388 <__lsan_enable@@Base+0x154>
    92f4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    92f8:	ldr	x0, [x0, #4000]
    92fc:	ldr	x21, [x0]
    9300:	sub	x0, x21, #0x1
    9304:	tst	x21, x0
    9308:	b.ne	939c <__lsan_enable@@Base+0x168>  // b.any
    930c:	add	x0, x24, x0
    9310:	neg	x21, x21
    9314:	and	x21, x0, x21
    9318:	mov	w2, #0x0                   	// #0
    931c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9320:	add	x1, x1, #0x650
    9324:	mov	x0, x21
    9328:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    932c:	mov	x23, x0
    9330:	ldr	x2, [sp, #256]
    9334:	lsl	x2, x2, #3
    9338:	ldr	x1, [sp, #240]
    933c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    9340:	ldr	x1, [sp, #248]
    9344:	ldr	x0, [sp, #240]
    9348:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    934c:	str	x23, [sp, #240]
    9350:	str	x21, [sp, #248]
    9354:	ldr	x0, [sp, #256]
    9358:	cmp	x20, x0
    935c:	b.ls	9294 <__lsan_enable@@Base+0x60>  // b.plast
    9360:	cmp	x20, x21, lsr #3
    9364:	b.hi	93ac <__lsan_enable@@Base+0x178>  // b.pmore
    9368:	ldr	x0, [sp, #256]
    936c:	sub	x2, x20, x0
    9370:	lsl	x2, x2, #3
    9374:	mov	w1, #0x0                   	// #0
    9378:	ldr	x3, [sp, #240]
    937c:	add	x0, x3, x0, lsl #3
    9380:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    9384:	b	9294 <__lsan_enable@@Base+0x60>
    9388:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    938c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9390:	ldr	x1, [x1, #4000]
    9394:	str	x0, [x1]
    9398:	b	92f4 <__lsan_enable@@Base+0xc0>
    939c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    93a0:	add	x0, x0, #0x638
    93a4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    93a8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    93ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    93b0:	ldr	x0, [x0, #4000]
    93b4:	ldr	x0, [x0]
    93b8:	cbz	x0, 9420 <__lsan_enable@@Base+0x1ec>
    93bc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    93c0:	ldr	x0, [x0, #4000]
    93c4:	ldr	x0, [x0]
    93c8:	sub	x1, x0, #0x1
    93cc:	tst	x0, x1
    93d0:	b.ne	9434 <__lsan_enable@@Base+0x200>  // b.any
    93d4:	add	x24, x24, x1
    93d8:	neg	x0, x0
    93dc:	and	x24, x24, x0
    93e0:	mov	w2, #0x0                   	// #0
    93e4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    93e8:	add	x1, x1, #0x650
    93ec:	mov	x0, x24
    93f0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    93f4:	mov	x21, x0
    93f8:	ldr	x2, [sp, #256]
    93fc:	lsl	x2, x2, #3
    9400:	ldr	x1, [sp, #240]
    9404:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    9408:	ldr	x1, [sp, #248]
    940c:	ldr	x0, [sp, #240]
    9410:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9414:	str	x21, [sp, #240]
    9418:	str	x24, [sp, #248]
    941c:	b	9368 <__lsan_enable@@Base+0x134>
    9420:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    9424:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9428:	ldr	x1, [x1, #4000]
    942c:	str	x0, [x1]
    9430:	b	93bc <__lsan_enable@@Base+0x188>
    9434:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9438:	add	x0, x0, #0x638
    943c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    9440:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    9444:	ldr	x21, [sp, #240]
    9448:	mov	x1, x20
    944c:	mov	x0, x19
    9450:	blr	x2
    9454:	str	x0, [x21, x20, lsl #3]
    9458:	add	x20, x20, #0x1
    945c:	ldr	x0, [x19]
    9460:	ldr	x1, [x0, #16]
    9464:	mov	x0, x19
    9468:	blr	x1
    946c:	cmp	x0, x20
    9470:	b.ls	94a4 <__lsan_enable@@Base+0x270>  // b.plast
    9474:	ldr	x0, [x19]
    9478:	ldr	x2, [x0, #24]
    947c:	ldr	x4, [sp, #256]
    9480:	cmp	x20, x4
    9484:	b.cc	9444 <__lsan_enable@@Base+0x210>  // b.lo, b.ul, b.last
    9488:	mov	x3, x20
    948c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9490:	add	x2, x2, #0x508
    9494:	mov	w1, #0x1b6                 	// #438
    9498:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    949c:	add	x0, x0, #0x520
    94a0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    94a4:	mov	w2, #0x0                   	// #0
    94a8:	ldr	x1, [sp, #256]
    94ac:	ldr	x0, [sp, #240]
    94b0:	bl	a458 <__lsan_do_recoverable_leak_check@@Base+0x158>
    94b4:	bl	1034c <_ZdaPvmSt11align_val_t@@Base+0x6fc>
    94b8:	add	x2, sp, #0xf0
    94bc:	adrp	x1, 6000 <_Unwind_Backtrace@plt-0x650>
    94c0:	add	x1, x1, #0xf38
    94c4:	bl	26910 <__sanitizer_set_death_callback@@Base+0x394>
    94c8:	ldr	x1, [sp, #248]
    94cc:	ldr	x0, [sp, #240]
    94d0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    94d4:	str	xzr, [sp, #192]
    94d8:	str	xzr, [sp, #200]
    94dc:	str	xzr, [sp, #184]
    94e0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    94e4:	ldr	x0, [x0, #4000]
    94e8:	ldr	x0, [x0]
    94ec:	cbz	x0, 95b4 <__lsan_enable@@Base+0x380>
    94f0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    94f4:	ldr	x0, [x0, #4000]
    94f8:	ldr	x1, [x0]
    94fc:	sub	x24, x1, #0x1
    9500:	ands	x24, x24, x1
    9504:	b.ne	95c8 <__lsan_enable@@Base+0x394>  // b.any
    9508:	add	x20, x1, #0x7
    950c:	neg	x1, x1
    9510:	and	x20, x20, x1
    9514:	mov	w2, #0x0                   	// #0
    9518:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    951c:	add	x1, x1, #0x650
    9520:	mov	x0, x20
    9524:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    9528:	mov	x21, x0
    952c:	ldr	x2, [sp, #200]
    9530:	lsl	x2, x2, #3
    9534:	ldr	x1, [sp, #184]
    9538:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    953c:	ldr	x1, [sp, #192]
    9540:	ldr	x0, [sp, #184]
    9544:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9548:	str	x21, [sp, #184]
    954c:	str	x20, [sp, #192]
    9550:	add	x20, sp, #0xb8
    9554:	mov	x1, x20
    9558:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    955c:	add	x0, x0, #0x2b8
    9560:	bl	bc28 <__sanitizer_get_allocated_size@@Base+0x350>
    9564:	mov	x0, x20
    9568:	bl	aa88 <__lsan_do_recoverable_leak_check@@Base+0x788>
    956c:	ldr	x0, [x19]
    9570:	ldr	x1, [x0, #8]
    9574:	mov	x0, x19
    9578:	blr	x1
    957c:	mov	x20, x0
    9580:	str	x0, [sp, #104]
    9584:	mov	x26, #0x0                   	// #0
    9588:	cbnz	x0, 95d8 <__lsan_enable@@Base+0x3a4>
    958c:	str	x26, [sp, #112]
    9590:	add	x0, x26, x20, lsl #3
    9594:	str	x0, [sp, #120]
    9598:	mov	x23, x24
    959c:	adrp	x20, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    95a0:	add	x20, x20, #0xcc0
    95a4:	add	x20, x20, #0x8
    95a8:	add	x0, sp, #0xd0
    95ac:	str	x0, [sp, #96]
    95b0:	b	9738 <__lsan_enable@@Base+0x504>
    95b4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    95b8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    95bc:	ldr	x1, [x1, #4000]
    95c0:	str	x0, [x1]
    95c4:	b	94f0 <__lsan_enable@@Base+0x2bc>
    95c8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    95cc:	add	x0, x0, #0x638
    95d0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    95d4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    95d8:	lsl	x21, x0, #3
    95dc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    95e0:	ldr	x0, [x0, #4000]
    95e4:	ldr	x0, [x0]
    95e8:	cbz	x0, 9660 <__lsan_enable@@Base+0x42c>
    95ec:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    95f0:	ldr	x0, [x0, #4000]
    95f4:	ldr	x0, [x0]
    95f8:	sub	x1, x0, #0x1
    95fc:	tst	x0, x1
    9600:	b.ne	9674 <__lsan_enable@@Base+0x440>  // b.any
    9604:	add	x1, x21, x1
    9608:	neg	x0, x0
    960c:	and	x23, x1, x0
    9610:	str	x23, [sp, #104]
    9614:	mov	w2, #0x0                   	// #0
    9618:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    961c:	add	x1, x1, #0x650
    9620:	mov	x0, x23
    9624:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    9628:	mov	x26, x0
    962c:	mov	x2, #0x0                   	// #0
    9630:	mov	x1, #0x0                   	// #0
    9634:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    9638:	mov	x1, #0x0                   	// #0
    963c:	mov	x0, #0x0                   	// #0
    9640:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9644:	cmp	x20, x23, lsr #3
    9648:	b.hi	9684 <__lsan_enable@@Base+0x450>  // b.pmore
    964c:	mov	x2, x21
    9650:	mov	w1, #0x0                   	// #0
    9654:	mov	x0, x26
    9658:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    965c:	b	958c <__lsan_enable@@Base+0x358>
    9660:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    9664:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9668:	ldr	x1, [x1, #4000]
    966c:	str	x0, [x1]
    9670:	b	95ec <__lsan_enable@@Base+0x3b8>
    9674:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9678:	add	x0, x0, #0x638
    967c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    9680:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    9684:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9688:	ldr	x0, [x0, #4000]
    968c:	ldr	x0, [x0]
    9690:	cbz	x0, 96f4 <__lsan_enable@@Base+0x4c0>
    9694:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9698:	ldr	x0, [x0, #4000]
    969c:	ldr	x0, [x0]
    96a0:	sub	x1, x0, #0x1
    96a4:	tst	x0, x1
    96a8:	b.ne	9708 <__lsan_enable@@Base+0x4d4>  // b.any
    96ac:	add	x1, x21, x1
    96b0:	neg	x0, x0
    96b4:	and	x23, x1, x0
    96b8:	mov	w2, #0x0                   	// #0
    96bc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    96c0:	add	x1, x1, #0x650
    96c4:	mov	x0, x23
    96c8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    96cc:	mov	x25, x0
    96d0:	mov	x2, #0x0                   	// #0
    96d4:	mov	x1, x26
    96d8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    96dc:	ldr	x1, [sp, #104]
    96e0:	mov	x0, x26
    96e4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    96e8:	str	x23, [sp, #104]
    96ec:	mov	x26, x25
    96f0:	b	964c <__lsan_enable@@Base+0x418>
    96f4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    96f8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    96fc:	ldr	x1, [x1, #4000]
    9700:	str	x0, [x1]
    9704:	b	9694 <__lsan_enable@@Base+0x460>
    9708:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    970c:	add	x0, x0, #0x638
    9710:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    9714:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    9718:	mov	x1, x21
    971c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9720:	add	x0, x0, #0x8
    9724:	bl	1d908 <OnPrint@@Base+0x3d8>
    9728:	b	9770 <__lsan_enable@@Base+0x53c>
    972c:	ldrb	w0, [x20, #21]
    9730:	cbnz	w0, 98c8 <__lsan_enable@@Base+0x694>
    9734:	add	x23, x23, #0x1
    9738:	ldr	x0, [x19]
    973c:	ldr	x1, [x0, #16]
    9740:	mov	x0, x19
    9744:	blr	x1
    9748:	cmp	x0, x23
    974c:	b.ls	9af0 <__lsan_enable@@Base+0x8bc>  // b.plast
    9750:	ldr	x0, [x19]
    9754:	ldr	x2, [x0, #24]
    9758:	mov	x1, x23
    975c:	mov	x0, x19
    9760:	blr	x2
    9764:	mov	x21, x0
    9768:	ldrb	w0, [x20, #21]
    976c:	cbnz	w0, 9718 <__lsan_enable@@Base+0x4e4>
    9770:	ldr	x7, [sp, #96]
    9774:	add	x6, sp, #0xb0
    9778:	add	x5, sp, #0xa8
    977c:	add	x4, sp, #0xa0
    9780:	add	x3, sp, #0x98
    9784:	add	x2, sp, #0x90
    9788:	add	x1, sp, #0x88
    978c:	mov	x0, x21
    9790:	bl	10278 <_ZdaPvmSt11align_val_t@@Base+0x628>
    9794:	and	w0, w0, #0xff
    9798:	cbz	w0, 972c <__lsan_enable@@Base+0x4f8>
    979c:	ldr	x0, [x19]
    97a0:	ldr	x4, [x0]
    97a4:	add	x3, sp, #0xf0
    97a8:	mov	x2, x26
    97ac:	mov	x1, x23
    97b0:	mov	x0, x19
    97b4:	blr	x4
    97b8:	mov	w25, w0
    97bc:	cmp	w0, #0x1
    97c0:	b.ne	98dc <__lsan_enable@@Base+0x6a8>  // b.any
    97c4:	cmp	w25, #0x0
    97c8:	cset	w1, ne  // ne = any
    97cc:	ldrb	w0, [x20, #14]
    97d0:	tst	w1, w0
    97d4:	b.ne	9900 <__lsan_enable@@Base+0x6cc>  // b.any
    97d8:	ldrb	w0, [x20, #13]
    97dc:	cbz	w0, 983c <__lsan_enable@@Base+0x608>
    97e0:	ldrb	w0, [x20, #21]
    97e4:	cbnz	w0, 9920 <__lsan_enable@@Base+0x6ec>
    97e8:	ldr	x0, [sp, #240]
    97ec:	ldr	x1, [sp, #136]
    97f0:	cmp	x1, x0
    97f4:	b.hi	9968 <__lsan_enable@@Base+0x734>  // b.pmore
    97f8:	ldr	x1, [sp, #144]
    97fc:	cmp	x1, x0
    9800:	b.ls	9968 <__lsan_enable@@Base+0x734>  // b.plast
    9804:	str	x0, [sp, #136]
    9808:	add	x25, sp, #0xb8
    980c:	mov	w4, #0x2                   	// #2
    9810:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9814:	add	x3, x3, #0x110
    9818:	mov	x2, x25
    981c:	ldr	x1, [sp, #144]
    9820:	ldr	x0, [sp, #136]
    9824:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    9828:	mov	x2, x25
    982c:	adrp	x1, 7000 <*ABS*+0x10@plt+0x2a0>
    9830:	add	x1, x1, #0xd80
    9834:	mov	x0, x21
    9838:	bl	10310 <_ZdaPvmSt11align_val_t@@Base+0x6c0>
    983c:	ldrb	w0, [x20, #15]
    9840:	cbz	w0, 9734 <__lsan_enable@@Base+0x500>
    9844:	ldr	x1, [sp, #152]
    9848:	cbz	x1, 9898 <__lsan_enable@@Base+0x664>
    984c:	ldrb	w0, [x20, #21]
    9850:	cbnz	w0, 9a08 <__lsan_enable@@Base+0x7d4>
    9854:	ldr	x1, [sp, #168]
    9858:	ldr	x2, [sp, #176]
    985c:	cmp	x1, x2
    9860:	b.eq	987c <__lsan_enable@@Base+0x648>  // b.none
    9864:	ldr	x0, [sp, #160]
    9868:	cmp	x1, x0
    986c:	b.hi	987c <__lsan_enable@@Base+0x648>  // b.pmore
    9870:	ldr	x0, [sp, #152]
    9874:	cmp	x2, x0
    9878:	b.cs	9a1c <__lsan_enable@@Base+0x7e8>  // b.hs, b.nlast
    987c:	mov	w4, #0x2                   	// #2
    9880:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9884:	add	x3, x3, #0x128
    9888:	add	x2, sp, #0xb8
    988c:	ldr	x1, [sp, #160]
    9890:	ldr	x0, [sp, #152]
    9894:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    9898:	ldr	x0, [sp, #208]
    989c:	cbz	x0, 98ac <__lsan_enable@@Base+0x678>
    98a0:	bl	278c8 <__sanitizer_set_death_callback@@Base+0x134c>
    98a4:	and	w0, w0, #0xff
    98a8:	cbz	w0, 9a64 <__lsan_enable@@Base+0x830>
    98ac:	ldrb	w0, [x20, #21]
    98b0:	cbz	w0, 9734 <__lsan_enable@@Base+0x500>
    98b4:	mov	x1, x21
    98b8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    98bc:	add	x0, x0, #0x150
    98c0:	bl	1d908 <OnPrint@@Base+0x3d8>
    98c4:	b	9734 <__lsan_enable@@Base+0x500>
    98c8:	mov	x1, x21
    98cc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    98d0:	add	x0, x0, #0x20
    98d4:	bl	1d908 <OnPrint@@Base+0x3d8>
    98d8:	b	9734 <__lsan_enable@@Base+0x500>
    98dc:	mov	x1, x21
    98e0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    98e4:	add	x0, x0, #0x48
    98e8:	bl	1d908 <OnPrint@@Base+0x3d8>
    98ec:	cmn	w25, #0x1
    98f0:	b.eq	9734 <__lsan_enable@@Base+0x500>  // b.none
    98f4:	ldr	x0, [sp, #136]
    98f8:	str	x0, [sp, #240]
    98fc:	b	97c4 <__lsan_enable@@Base+0x590>
    9900:	mov	w4, #0x2                   	// #2
    9904:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9908:	add	x3, x3, #0x78
    990c:	add	x2, sp, #0xb8
    9910:	ldr	x1, [sp, #120]
    9914:	ldr	x0, [sp, #112]
    9918:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    991c:	b	97d8 <__lsan_enable@@Base+0x5a4>
    9920:	ldr	x3, [sp, #240]
    9924:	ldr	x2, [sp, #144]
    9928:	ldr	x1, [sp, #136]
    992c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9930:	add	x0, x0, #0x88
    9934:	bl	1d908 <OnPrint@@Base+0x3d8>
    9938:	ldr	x0, [sp, #240]
    993c:	ldr	x1, [sp, #136]
    9940:	cmp	x0, x1
    9944:	b.cc	9954 <__lsan_enable@@Base+0x720>  // b.lo, b.ul, b.last
    9948:	ldr	x1, [sp, #144]
    994c:	cmp	x0, x1
    9950:	b.cc	9804 <__lsan_enable@@Base+0x5d0>  // b.lo, b.ul, b.last
    9954:	ldrb	w0, [x20, #21]
    9958:	cbz	w0, 9968 <__lsan_enable@@Base+0x734>
    995c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9960:	add	x0, x0, #0xa8
    9964:	bl	1d908 <OnPrint@@Base+0x3d8>
    9968:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    996c:	ldr	x0, [x0, #4000]
    9970:	ldr	x0, [x0]
    9974:	cbz	x0, 99ec <__lsan_enable@@Base+0x7b8>
    9978:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    997c:	ldr	x0, [x0, #4000]
    9980:	ldr	x27, [x0]
    9984:	ldr	x0, [sp, #136]
    9988:	ldr	x1, [sp, #144]
    998c:	cmp	x0, x1
    9990:	b.cs	9a00 <__lsan_enable@@Base+0x7cc>  // b.hs, b.nlast
    9994:	mov	w25, #0x0                   	// #0
    9998:	mov	x28, #0x1                   	// #1
    999c:	mov	x1, x28
    99a0:	bl	1c344 <__sanitizer_set_report_fd@@Base+0x5f94>
    99a4:	and	w0, w0, #0xff
    99a8:	cbnz	w0, 99c8 <__lsan_enable@@Base+0x794>
    99ac:	add	w25, w25, #0x1
    99b0:	ldr	x0, [sp, #136]
    99b4:	add	x0, x27, x0
    99b8:	str	x0, [sp, #136]
    99bc:	ldr	x1, [sp, #144]
    99c0:	cmp	x1, x0
    99c4:	b.hi	999c <__lsan_enable@@Base+0x768>  // b.pmore
    99c8:	ldrb	w0, [x20, #21]
    99cc:	cbz	w0, 9808 <__lsan_enable@@Base+0x5d4>
    99d0:	ldr	x3, [sp, #144]
    99d4:	ldr	x2, [sp, #136]
    99d8:	mov	w1, w25
    99dc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    99e0:	add	x0, x0, #0xd8
    99e4:	bl	1d908 <OnPrint@@Base+0x3d8>
    99e8:	b	9808 <__lsan_enable@@Base+0x5d4>
    99ec:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    99f0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    99f4:	ldr	x1, [x1, #4000]
    99f8:	str	x0, [x1]
    99fc:	b	9978 <__lsan_enable@@Base+0x744>
    9a00:	mov	w25, #0x0                   	// #0
    9a04:	b	99c8 <__lsan_enable@@Base+0x794>
    9a08:	ldr	x2, [sp, #160]
    9a0c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9a10:	add	x0, x0, #0x118
    9a14:	bl	1d908 <OnPrint@@Base+0x3d8>
    9a18:	b	9854 <__lsan_enable@@Base+0x620>
    9a1c:	cmp	x1, x0
    9a20:	b.hi	9a4c <__lsan_enable@@Base+0x818>  // b.pmore
    9a24:	ldr	x1, [sp, #160]
    9a28:	ldr	x0, [sp, #176]
    9a2c:	cmp	x1, x0
    9a30:	b.ls	9898 <__lsan_enable@@Base+0x664>  // b.plast
    9a34:	mov	w4, #0x2                   	// #2
    9a38:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9a3c:	add	x3, x3, #0x128
    9a40:	add	x2, sp, #0xb8
    9a44:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    9a48:	b	9898 <__lsan_enable@@Base+0x664>
    9a4c:	mov	w4, #0x2                   	// #2
    9a50:	adrp	x3, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9a54:	add	x3, x3, #0x128
    9a58:	add	x2, sp, #0xb8
    9a5c:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    9a60:	b	9a24 <__lsan_enable@@Base+0x7f0>
    9a64:	ldr	x1, [sp, #208]
    9a68:	ldr	x0, [x1]
    9a6c:	cbz	x0, 9734 <__lsan_enable@@Base+0x500>
    9a70:	mov	x25, x24
    9a74:	adrp	x28, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9a78:	add	x28, x28, #0x148
    9a7c:	b	9aac <__lsan_enable@@Base+0x878>
    9a80:	mov	w4, #0x2                   	// #2
    9a84:	mov	x3, x28
    9a88:	add	x2, sp, #0xb8
    9a8c:	mov	x1, x21
    9a90:	mov	x0, x27
    9a94:	bl	79a0 <*ABS*+0x10@plt+0xc40>
    9a98:	add	x25, x25, #0x1
    9a9c:	ldr	x1, [sp, #208]
    9aa0:	ldr	x0, [x1]
    9aa4:	cmp	x0, x25
    9aa8:	b.ls	9734 <__lsan_enable@@Base+0x500>  // b.plast
    9aac:	lsl	x0, x25, #4
    9ab0:	ldr	x1, [x1, #8]
    9ab4:	add	x2, x1, x0
    9ab8:	ldr	x27, [x1, x0]
    9abc:	ldr	x21, [x2, #8]
    9ac0:	add	x21, x27, x21
    9ac4:	cmp	x27, x21
    9ac8:	b.cs	9a98 <__lsan_enable@@Base+0x864>  // b.hs, b.nlast
    9acc:	ldrb	w0, [x20, #21]
    9ad0:	cbz	w0, 9a80 <__lsan_enable@@Base+0x84c>
    9ad4:	mov	x3, x21
    9ad8:	mov	x2, x27
    9adc:	mov	x1, x25
    9ae0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9ae4:	add	x0, x0, #0x130
    9ae8:	bl	1d908 <OnPrint@@Base+0x3d8>
    9aec:	b	9a80 <__lsan_enable@@Base+0x84c>
    9af0:	ldr	x1, [sp, #104]
    9af4:	mov	x0, x26
    9af8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9afc:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9b00:	ldrb	w0, [x0, #3288]
    9b04:	cbz	w0, 9bc4 <__lsan_enable@@Base+0x990>
    9b08:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9b0c:	ldr	x0, [x0, #3408]
    9b10:	cbz	x0, 9b34 <__lsan_enable@@Base+0x900>
    9b14:	ldr	x1, [x0, #16]
    9b18:	cbz	x1, 9bc4 <__lsan_enable@@Base+0x990>
    9b1c:	add	x20, sp, #0xd0
    9b20:	add	x23, sp, #0xf0
    9b24:	add	x21, sp, #0xb8
    9b28:	adrp	x25, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9b2c:	add	x25, x25, #0xcc0
    9b30:	b	9ba0 <__lsan_enable@@Base+0x96c>
    9b34:	mov	x4, #0x0                   	// #0
    9b38:	mov	x3, #0x0                   	// #0
    9b3c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9b40:	add	x2, x2, #0xee8
    9b44:	mov	w1, #0x151                 	// #337
    9b48:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9b4c:	add	x0, x0, #0x4d8
    9b50:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    9b54:	ldr	x4, [sp, #280]
    9b58:	and	w4, w4, #0x1
    9b5c:	ldr	x3, [sp, #248]
    9b60:	ldr	x2, [sp, #240]
    9b64:	mov	x1, x19
    9b68:	mov	x0, x21
    9b6c:	bl	7f90 <*ABS*+0x10@plt+0x1230>
    9b70:	mov	x1, x23
    9b74:	mov	x0, x20
    9b78:	bl	1e3b4 <OnPrint@@Base+0xe84>
    9b7c:	and	w0, w0, #0xff
    9b80:	cbnz	w0, 9b54 <__lsan_enable@@Base+0x920>
    9b84:	mov	x0, x20
    9b88:	bl	1dc24 <OnPrint@@Base+0x6f4>
    9b8c:	add	x24, x24, #0x1
    9b90:	ldr	x0, [x25, #144]
    9b94:	ldr	x1, [x0, #16]
    9b98:	cmp	x1, x24
    9b9c:	b.ls	9bc4 <__lsan_enable@@Base+0x990>  // b.plast
    9ba0:	ldr	x19, [x0]
    9ba4:	add	x19, x19, x24, lsl #4
    9ba8:	mov	w1, #0x1                   	// #1
    9bac:	mov	x0, x20
    9bb0:	bl	1dd70 <OnPrint@@Base+0x840>
    9bb4:	str	xzr, [sp, #264]
    9bb8:	str	xzr, [sp, #272]
    9bbc:	str	xzr, [sp, #312]
    9bc0:	b	9b70 <__lsan_enable@@Base+0x93c>
    9bc4:	mov	w1, #0x2                   	// #2
    9bc8:	add	x0, sp, #0xb8
    9bcc:	bl	7e10 <*ABS*+0x10@plt+0x10b0>
    9bd0:	ldr	x4, [sp, #200]
    9bd4:	cbnz	x4, 9c70 <__lsan_enable@@Base+0xa3c>
    9bd8:	add	x0, sp, #0xb8
    9bdc:	bl	803c <*ABS*+0x10@plt+0x12dc>
    9be0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9be4:	ldrb	w0, [x0, #3292]
    9be8:	cbnz	w0, 9c8c <__lsan_enable@@Base+0xa58>
    9bec:	add	x19, sp, #0xb8
    9bf0:	mov	x0, x19
    9bf4:	bl	aac4 <__lsan_do_recoverable_leak_check@@Base+0x7c4>
    9bf8:	mov	w1, #0x2                   	// #2
    9bfc:	mov	x0, x19
    9c00:	bl	7e10 <*ABS*+0x10@plt+0x10b0>
    9c04:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9c08:	ldrb	w0, [x0, #3292]
    9c0c:	cbnz	w0, 9c9c <__lsan_enable@@Base+0xa68>
    9c10:	mov	x1, #0x0                   	// #0
    9c14:	adrp	x0, 7000 <*ABS*+0x10@plt+0x2a0>
    9c18:	add	x0, x0, #0xd9c
    9c1c:	bl	bc28 <__sanitizer_get_allocated_size@@Base+0x350>
    9c20:	ldr	x1, [sp, #192]
    9c24:	ldr	x0, [sp, #184]
    9c28:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9c2c:	add	x1, x22, #0x8
    9c30:	adrp	x0, 8000 <*ABS*+0x10@plt+0x12a0>
    9c34:	add	x0, x0, #0x62c
    9c38:	bl	bc28 <__sanitizer_get_allocated_size@@Base+0x350>
    9c3c:	mov	x1, #0x0                   	// #0
    9c40:	adrp	x0, 6000 <_Unwind_Backtrace@plt-0x650>
    9c44:	add	x0, x0, #0xfe0
    9c48:	bl	bc28 <__sanitizer_get_allocated_size@@Base+0x350>
    9c4c:	mov	w0, #0x1                   	// #1
    9c50:	strb	w0, [x22]
    9c54:	ldp	x21, x22, [sp, #16]
    9c58:	ldp	x23, x24, [sp, #32]
    9c5c:	ldp	x25, x26, [sp, #48]
    9c60:	ldp	x27, x28, [sp, #64]
    9c64:	ldr	x30, [sp, #80]
    9c68:	ldp	x19, x20, [sp], #320
    9c6c:	ret
    9c70:	mov	x3, #0x0                   	// #0
    9c74:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9c78:	add	x2, x2, #0x178
    9c7c:	mov	w1, #0x1c7                 	// #455
    9c80:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9c84:	add	x0, x0, #0x4d8
    9c88:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    9c8c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9c90:	add	x0, x0, #0x198
    9c94:	bl	1d908 <OnPrint@@Base+0x3d8>
    9c98:	b	9bec <__lsan_enable@@Base+0x9b8>
    9c9c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9ca0:	add	x0, x0, #0x1c8
    9ca4:	bl	1d908 <OnPrint@@Base+0x3d8>
    9ca8:	b	9c10 <__lsan_enable@@Base+0x9dc>
    9cac:	stp	x19, x20, [sp, #-48]!
    9cb0:	stp	x21, x22, [sp, #16]
    9cb4:	stp	x23, x30, [sp, #32]
    9cb8:	mov	x20, x0
    9cbc:	mov	x22, x1
    9cc0:	ldr	x1, [x0, #24]
    9cc4:	mov	x0, #0x1388                	// #5000
    9cc8:	cmp	x1, x0
    9ccc:	b.hi	9d2c <__lsan_enable@@Base+0xaf8>  // b.pmore
    9cd0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    9cd4:	add	x0, x0, #0x88
    9cd8:	bl	1d874 <OnPrint@@Base+0x344>
    9cdc:	ldr	x1, [x20, #24]
    9ce0:	mov	x0, #0x1388                	// #5000
    9ce4:	cmp	x1, x0
    9ce8:	b.eq	9d4c <__lsan_enable@@Base+0xb18>  // b.none
    9cec:	mov	x0, x20
    9cf0:	bl	8dcc <*ABS*+0x10@plt+0x206c>
    9cf4:	mov	x23, x0
    9cf8:	cmp	x22, #0x0
    9cfc:	ccmp	x0, x22, #0x0, ne  // ne = any
    9d00:	b.hi	9d60 <__lsan_enable@@Base+0xb2c>  // b.pmore
    9d04:	adrp	x2, 6000 <_Unwind_Backtrace@plt-0x650>
    9d08:	add	x2, x2, #0xe78
    9d0c:	ldr	x1, [x20, #24]
    9d10:	ldr	x0, [x20, #8]
    9d14:	bl	a5a0 <__lsan_do_recoverable_leak_check@@Base+0x2a0>
    9d18:	ldr	x21, [x20, #24]
    9d1c:	cbz	x21, 9dac <__lsan_enable@@Base+0xb78>
    9d20:	mov	x19, #0x0                   	// #0
    9d24:	mov	x21, #0x0                   	// #0
    9d28:	b	9d84 <__lsan_enable@@Base+0xb50>
    9d2c:	mov	x4, #0x0                   	// #0
    9d30:	mov	x3, #0x0                   	// #0
    9d34:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9d38:	add	x2, x2, #0xdd0
    9d3c:	mov	w1, #0x2be                 	// #702
    9d40:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9d44:	add	x0, x0, #0x4d8
    9d48:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    9d4c:	mov	x1, x0
    9d50:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9d54:	add	x0, x0, #0x1e8
    9d58:	bl	1d874 <OnPrint@@Base+0x344>
    9d5c:	b	9cec <__lsan_enable@@Base+0xab8>
    9d60:	mov	x1, x22
    9d64:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9d68:	add	x0, x0, #0x230
    9d6c:	bl	1d874 <OnPrint@@Base+0x344>
    9d70:	b	9d04 <__lsan_enable@@Base+0xad0>
    9d74:	add	x19, x19, #0x1
    9d78:	ldr	x2, [x20, #24]
    9d7c:	cmp	x2, x19
    9d80:	b.ls	9dac <__lsan_enable@@Base+0xb78>  // b.plast
    9d84:	ldr	x2, [x20, #8]
    9d88:	add	x2, x2, x19, lsl #5
    9d8c:	ldrb	w2, [x2, #29]
    9d90:	cbnz	w2, 9d74 <__lsan_enable@@Base+0xb40>
    9d94:	mov	x1, x19
    9d98:	mov	x0, x20
    9d9c:	bl	87f4 <*ABS*+0x10@plt+0x1a94>
    9da0:	add	x21, x21, #0x1
    9da4:	cmp	x22, x21
    9da8:	b.ne	9d74 <__lsan_enable@@Base+0xb40>  // b.any
    9dac:	cmp	x21, x23
    9db0:	b.cc	9dc4 <__lsan_enable@@Base+0xb90>  // b.lo, b.ul, b.last
    9db4:	ldp	x21, x22, [sp, #16]
    9db8:	ldp	x23, x30, [sp, #32]
    9dbc:	ldp	x19, x20, [sp], #48
    9dc0:	ret
    9dc4:	sub	x1, x23, x21
    9dc8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9dcc:	add	x0, x0, #0x248
    9dd0:	bl	1d874 <OnPrint@@Base+0x344>
    9dd4:	b	9db4 <__lsan_enable@@Base+0xb80>
    9dd8:	stp	x19, x20, [sp, #-144]!
    9ddc:	str	x30, [sp, #40]
    9de0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9de4:	ldr	x0, [x0, #3712]
    9de8:	cbz	x0, 9df4 <__lsan_enable@@Base+0xbc0>
    9dec:	bl	69a0 <__lsan_is_turned_off@plt>
    9df0:	cbnz	w0, a08c <__lsan_enable@@Base+0xe58>
    9df4:	bl	10250 <_ZdaPvmSt11align_val_t@@Base+0x600>
    9df8:	str	wzr, [sp, #88]
    9dfc:	str	xzr, [sp, #104]
    9e00:	str	xzr, [sp, #112]
    9e04:	str	xzr, [sp, #96]
    9e08:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e0c:	ldr	x0, [x0, #4000]
    9e10:	ldr	x0, [x0]
    9e14:	cbz	x0, 9f80 <__lsan_enable@@Base+0xd4c>
    9e18:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e1c:	ldr	x0, [x0, #4000]
    9e20:	ldr	x1, [x0]
    9e24:	sub	x0, x1, #0x1
    9e28:	tst	x0, x1
    9e2c:	b.ne	9f94 <__lsan_enable@@Base+0xd60>  // b.any
    9e30:	add	x19, x1, #0x1f
    9e34:	neg	x1, x1
    9e38:	and	x19, x19, x1
    9e3c:	mov	w2, #0x0                   	// #0
    9e40:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9e44:	add	x1, x1, #0x650
    9e48:	mov	x0, x19
    9e4c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    9e50:	mov	x20, x0
    9e54:	ldr	x2, [sp, #112]
    9e58:	lsl	x2, x2, #5
    9e5c:	ldr	x1, [sp, #96]
    9e60:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    9e64:	ldr	x1, [sp, #104]
    9e68:	ldr	x0, [sp, #96]
    9e6c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9e70:	str	x20, [sp, #96]
    9e74:	str	x19, [sp, #104]
    9e78:	str	xzr, [sp, #128]
    9e7c:	str	xzr, [sp, #136]
    9e80:	str	xzr, [sp, #120]
    9e84:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e88:	ldr	x0, [x0, #4000]
    9e8c:	ldr	x0, [x0]
    9e90:	cbz	x0, 9fac <__lsan_enable@@Base+0xd78>
    9e94:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e98:	ldr	x0, [x0, #4000]
    9e9c:	ldr	x1, [x0]
    9ea0:	sub	x0, x1, #0x1
    9ea4:	tst	x0, x1
    9ea8:	b.ne	9fc0 <__lsan_enable@@Base+0xd8c>  // b.any
    9eac:	stp	x21, x22, [sp, #16]
    9eb0:	add	x19, x1, #0x17
    9eb4:	neg	x1, x1
    9eb8:	and	x19, x19, x1
    9ebc:	mov	w2, #0x0                   	// #0
    9ec0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9ec4:	add	x1, x1, #0x650
    9ec8:	mov	x0, x19
    9ecc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    9ed0:	mov	x20, x0
    9ed4:	ldr	x2, [sp, #136]
    9ed8:	add	x2, x2, x2, lsl #1
    9edc:	lsl	x2, x2, #3
    9ee0:	ldr	x1, [sp, #120]
    9ee4:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    9ee8:	ldr	x1, [sp, #128]
    9eec:	ldr	x0, [sp, #120]
    9ef0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9ef4:	str	x20, [sp, #120]
    9ef8:	str	x19, [sp, #128]
    9efc:	strb	wzr, [sp, #80]
    9f00:	bl	10314 <_ZdaPvmSt11align_val_t@@Base+0x6c4>
    9f04:	bl	b2cc <__sanitizer_print_stack_trace@@Base+0x4b0>
    9f08:	add	x1, sp, #0x50
    9f0c:	adrp	x0, 9000 <__lsan_register_root_region@@Base+0x134>
    9f10:	add	x0, x0, #0x244
    9f14:	bl	aae4 <__lsan_do_recoverable_leak_check@@Base+0x7e4>
    9f18:	bl	b360 <__sanitizer_print_stack_trace@@Base+0x544>
    9f1c:	bl	10330 <_ZdaPvmSt11align_val_t@@Base+0x6e0>
    9f20:	ldrb	w21, [sp, #80]
    9f24:	cbz	w21, 9fd8 <__lsan_enable@@Base+0xda4>
    9f28:	add	x19, sp, #0x58
    9f2c:	mov	x0, x19
    9f30:	bl	8b9c <*ABS*+0x10@plt+0x1e3c>
    9f34:	mov	x0, x19
    9f38:	bl	8dcc <*ABS*+0x10@plt+0x206c>
    9f3c:	mov	x20, x0
    9f40:	cbnz	x0, a004 <__lsan_enable@@Base+0xdd0>
    9f44:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9f48:	ldr	x0, [x0, #4040]
    9f4c:	ldrb	w19, [x0, #177]
    9f50:	cbnz	w19, a094 <__lsan_enable@@Base+0xe60>
    9f54:	ldr	x1, [sp, #128]
    9f58:	ldr	x0, [sp, #120]
    9f5c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9f60:	ldr	x1, [sp, #104]
    9f64:	ldr	x0, [sp, #96]
    9f68:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    9f6c:	ldp	x21, x22, [sp, #16]
    9f70:	mov	w0, w19
    9f74:	ldr	x30, [sp, #40]
    9f78:	ldp	x19, x20, [sp], #144
    9f7c:	ret
    9f80:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    9f84:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9f88:	ldr	x1, [x1, #4000]
    9f8c:	str	x0, [x1]
    9f90:	b	9e18 <__lsan_enable@@Base+0xbe4>
    9f94:	stp	x21, x22, [sp, #16]
    9f98:	str	x23, [sp, #32]
    9f9c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9fa0:	add	x0, x0, #0x638
    9fa4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    9fa8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    9fac:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    9fb0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9fb4:	ldr	x1, [x1, #4000]
    9fb8:	str	x0, [x1]
    9fbc:	b	9e94 <__lsan_enable@@Base+0xc60>
    9fc0:	stp	x21, x22, [sp, #16]
    9fc4:	str	x23, [sp, #32]
    9fc8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    9fcc:	add	x0, x0, #0x638
    9fd0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    9fd4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    9fd8:	str	x23, [sp, #32]
    9fdc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9fe0:	add	x0, x0, #0x268
    9fe4:	bl	1d908 <OnPrint@@Base+0x3d8>
    9fe8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9fec:	add	x0, x0, #0x298
    9ff0:	bl	1d908 <OnPrint@@Base+0x3d8>
    9ff4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    9ff8:	add	x0, x0, #0x2f8
    9ffc:	bl	1d908 <OnPrint@@Base+0x3d8>
    a000:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    a004:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
    a008:	and	w19, w0, #0xff
    a00c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a010:	add	x0, x0, #0x340
    a014:	bl	1d874 <OnPrint@@Base+0x344>
    a018:	cbnz	w19, a1c4 <__lsan_enable@@Base+0xf90>
    a01c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
    a020:	add	x19, x1, #0x9e0
    a024:	mov	x1, x19
    a028:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a02c:	add	x0, x0, #0xd50
    a030:	bl	1d874 <OnPrint@@Base+0x344>
    a034:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a038:	add	x0, x0, #0x410
    a03c:	bl	1d908 <OnPrint@@Base+0x3d8>
    a040:	mov	x1, x19
    a044:	b	a1ec <__lsan_enable@@Base+0xfb8>
    a048:	str	x23, [sp, #32]
    a04c:	b	a098 <__lsan_enable@@Base+0xe64>
    a050:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    a054:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a058:	ldr	x1, [x1, #4000]
    a05c:	str	x0, [x1]
    a060:	b	a0b4 <__lsan_enable@@Base+0xe80>
    a064:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a068:	add	x0, x0, #0x638
    a06c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    a070:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    a074:	ldr	x1, [sp, #64]
    a078:	ldr	x0, [sp, #56]
    a07c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    a080:	b	a1b4 <__lsan_enable@@Base+0xf80>
    a084:	ldr	x23, [sp, #32]
    a088:	b	a218 <__lsan_enable@@Base+0xfe4>
    a08c:	mov	w19, #0x0                   	// #0
    a090:	b	9f70 <__lsan_enable@@Base+0xd3c>
    a094:	str	x23, [sp, #32]
    a098:	str	xzr, [sp, #64]
    a09c:	str	xzr, [sp, #72]
    a0a0:	str	xzr, [sp, #56]
    a0a4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a0a8:	ldr	x0, [x0, #4000]
    a0ac:	ldr	x0, [x0]
    a0b0:	cbz	x0, a050 <__lsan_enable@@Base+0xe1c>
    a0b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a0b8:	ldr	x0, [x0, #4000]
    a0bc:	ldr	x1, [x0]
    a0c0:	sub	x19, x1, #0x1
    a0c4:	ands	x19, x19, x1
    a0c8:	b.ne	a064 <__lsan_enable@@Base+0xe30>  // b.any
    a0cc:	add	x22, x1, #0x7
    a0d0:	neg	x1, x1
    a0d4:	and	x22, x22, x1
    a0d8:	mov	w2, #0x0                   	// #0
    a0dc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a0e0:	add	x1, x1, #0x650
    a0e4:	mov	x0, x22
    a0e8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    a0ec:	mov	x23, x0
    a0f0:	ldr	x2, [sp, #72]
    a0f4:	lsl	x2, x2, #3
    a0f8:	ldr	x1, [sp, #56]
    a0fc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    a100:	ldr	x1, [sp, #64]
    a104:	ldr	x0, [sp, #56]
    a108:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    a10c:	str	x23, [sp, #56]
    a110:	str	x22, [sp, #64]
    a114:	bl	6f04 <*ABS*+0x10@plt+0x1a4>
    a118:	add	x1, sp, #0x38
    a11c:	bl	235f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3344>
    a120:	ldr	x0, [sp, #72]
    a124:	cbz	x0, a074 <__lsan_enable@@Base+0xe40>
    a128:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a12c:	add	x1, x1, #0x388
    a130:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
    a134:	add	x0, x0, #0x480
    a138:	bl	1d874 <OnPrint@@Base+0x344>
    a13c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a140:	add	x0, x0, #0x3c0
    a144:	bl	1d874 <OnPrint@@Base+0x344>
    a148:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a14c:	add	x0, x0, #0x3d8
    a150:	bl	1d874 <OnPrint@@Base+0x344>
    a154:	ldr	x0, [sp, #72]
    a158:	cbz	x0, a194 <__lsan_enable@@Base+0xf60>
    a15c:	adrp	x22, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a160:	add	x22, x22, #0x3f8
    a164:	ldr	x0, [sp, #56]
    a168:	ldr	x2, [x0, x19, lsl #3]
    a16c:	ldr	w1, [x2, #16]
    a170:	ldr	x3, [x2, #8]
    a174:	ldr	x2, [x2, #24]
    a178:	mov	w1, w1
    a17c:	mov	x0, x22
    a180:	bl	1d874 <OnPrint@@Base+0x344>
    a184:	add	x19, x19, #0x1
    a188:	ldr	x0, [sp, #72]
    a18c:	cmp	x0, x19
    a190:	b.hi	a164 <__lsan_enable@@Base+0xf30>  // b.pmore
    a194:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a198:	add	x1, x1, #0x388
    a19c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a1a0:	add	x0, x0, #0x408
    a1a4:	bl	1d874 <OnPrint@@Base+0x344>
    a1a8:	ldr	x1, [sp, #64]
    a1ac:	ldr	x0, [sp, #56]
    a1b0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    a1b4:	mov	w19, #0x0                   	// #0
    a1b8:	cbnz	x20, a084 <__lsan_enable@@Base+0xe50>
    a1bc:	ldr	x23, [sp, #32]
    a1c0:	b	9f54 <__lsan_enable@@Base+0xd20>
    a1c4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a1c8:	add	x1, x1, #0x440
    a1cc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a1d0:	add	x0, x0, #0xd50
    a1d4:	bl	1d874 <OnPrint@@Base+0x344>
    a1d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a1dc:	add	x0, x0, #0x410
    a1e0:	bl	1d908 <OnPrint@@Base+0x3d8>
    a1e4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a1e8:	add	x1, x1, #0xd40
    a1ec:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a1f0:	add	x0, x0, #0xd50
    a1f4:	bl	1d874 <OnPrint@@Base+0x344>
    a1f8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a1fc:	ldrsw	x1, [x0, #3280]
    a200:	add	x0, sp, #0x58
    a204:	bl	9cac <__lsan_enable@@Base+0xa78>
    a208:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a20c:	ldr	x0, [x0, #4040]
    a210:	ldrb	w0, [x0, #177]
    a214:	cbnz	w0, a048 <__lsan_enable@@Base+0xe14>
    a218:	add	x0, sp, #0x58
    a21c:	bl	8968 <*ABS*+0x10@plt+0x1c08>
    a220:	mov	w19, w21
    a224:	b	9f54 <__lsan_enable@@Base+0xd20>
    a228:	stp	x19, x30, [sp, #-16]!
    a22c:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a230:	add	x19, x19, #0xcc0
    a234:	add	x0, x19, #0xe0
    a238:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
    a23c:	ldrb	w0, [x19, #312]
    a240:	cbnz	w0, a27c <__lsan_enable@@Base+0x1048>
    a244:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a248:	add	x19, x19, #0xcc0
    a24c:	mov	w0, #0x1                   	// #1
    a250:	strb	w0, [x19, #312]
    a254:	bl	9dd8 <__lsan_enable@@Base+0xba4>
    a258:	and	w1, w0, #0xff
    a25c:	strb	w0, [x19, #216]
    a260:	cbnz	w1, a288 <__lsan_enable@@Base+0x1054>
    a264:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a268:	add	x0, x0, #0xcc0
    a26c:	add	x0, x0, #0xe0
    a270:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
    a274:	ldp	x19, x30, [sp], #16
    a278:	ret
    a27c:	add	x0, x19, #0xe0
    a280:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
    a284:	b	a274 <__lsan_enable@@Base+0x1040>
    a288:	bl	aac8 <__lsan_do_recoverable_leak_check@@Base+0x7c8>
    a28c:	b	a264 <__lsan_enable@@Base+0x1030>

000000000000a290 <__lsan_do_leak_check@@Base>:
    a290:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a294:	ldr	x0, [x0, #4040]
    a298:	ldrb	w0, [x0, #57]
    a29c:	cbnz	w0, a2a4 <__lsan_do_leak_check@@Base+0x14>
    a2a0:	ret
    a2a4:	str	x30, [sp, #-16]!
    a2a8:	bl	a228 <__lsan_enable@@Base+0xff4>
    a2ac:	ldr	x30, [sp], #16
    a2b0:	ret
    a2b4:	stp	x19, x20, [sp, #-32]!
    a2b8:	str	x30, [sp, #16]
    a2bc:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a2c0:	add	x19, x19, #0xcc0
    a2c4:	add	x19, x19, #0xe0
    a2c8:	mov	x0, x19
    a2cc:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
    a2d0:	bl	9dd8 <__lsan_enable@@Base+0xba4>
    a2d4:	and	w20, w0, #0xff
    a2d8:	mov	x0, x19
    a2dc:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
    a2e0:	mov	w0, w20
    a2e4:	ldr	x30, [sp, #16]
    a2e8:	ldp	x19, x20, [sp], #32
    a2ec:	ret
    a2f0:	str	x30, [sp, #-16]!
    a2f4:	bl	a2b4 <__lsan_do_leak_check@@Base+0x24>
    a2f8:	ldr	x30, [sp], #16
    a2fc:	ret

000000000000a300 <__lsan_do_recoverable_leak_check@@Base>:
    a300:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a304:	ldr	x0, [x0, #4040]
    a308:	ldrb	w1, [x0, #57]
    a30c:	mov	w0, #0x0                   	// #0
    a310:	cbnz	w1, a318 <__lsan_do_recoverable_leak_check@@Base+0x18>
    a314:	ret
    a318:	str	x30, [sp, #-16]!
    a31c:	bl	a2b4 <__lsan_do_leak_check@@Base+0x24>
    a320:	ldr	x30, [sp], #16
    a324:	ret
    a328:	ldr	x0, [x0, #8]
    a32c:	str	x1, [x0]
    a330:	mov	w0, #0x1                   	// #1
    a334:	ret
    a338:	stp	x19, x20, [sp, #-48]!
    a33c:	str	x30, [sp, #16]
    a340:	mov	x20, x0
    a344:	mov	x19, x1
    a348:	mov	w2, #0xa                   	// #10
    a34c:	add	x1, sp, #0x28
    a350:	mov	x0, x19
    a354:	bl	17fec <__sanitizer_set_report_fd@@Base+0x1c3c>
    a358:	ldr	x1, [x20, #8]
    a35c:	str	w0, [x1]
    a360:	ldr	x0, [sp, #40]
    a364:	ldrb	w0, [x0]
    a368:	cmp	w0, #0x0
    a36c:	cset	w20, eq  // eq = none
    a370:	cbnz	w0, a384 <__lsan_do_recoverable_leak_check@@Base+0x84>
    a374:	mov	w0, w20
    a378:	ldr	x30, [sp, #16]
    a37c:	ldp	x19, x20, [sp], #48
    a380:	ret
    a384:	mov	x1, x19
    a388:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a38c:	add	x0, x0, #0x428
    a390:	bl	1d874 <OnPrint@@Base+0x344>
    a394:	b	a374 <__lsan_do_recoverable_leak_check@@Base+0x74>
    a398:	stp	x19, x20, [sp, #-32]!
    a39c:	str	x30, [sp, #16]
    a3a0:	mov	x19, x1
    a3a4:	ldr	x20, [x0, #8]
    a3a8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a3ac:	add	x1, x1, #0x458
    a3b0:	mov	x0, x19
    a3b4:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
    a3b8:	cbnz	w0, a3d0 <__lsan_do_recoverable_leak_check@@Base+0xd0>
    a3bc:	strb	wzr, [x20]
    a3c0:	mov	w0, #0x1                   	// #1
    a3c4:	ldr	x30, [sp, #16]
    a3c8:	ldp	x19, x20, [sp], #32
    a3cc:	ret
    a3d0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a3d4:	add	x1, x1, #0x460
    a3d8:	mov	x0, x19
    a3dc:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
    a3e0:	cbz	w0, a3bc <__lsan_do_recoverable_leak_check@@Base+0xbc>
    a3e4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a3e8:	add	x1, x1, #0x468
    a3ec:	mov	x0, x19
    a3f0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
    a3f4:	cbz	w0, a3bc <__lsan_do_recoverable_leak_check@@Base+0xbc>
    a3f8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a3fc:	add	x1, x1, #0x470
    a400:	mov	x0, x19
    a404:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
    a408:	cbnz	w0, a418 <__lsan_do_recoverable_leak_check@@Base+0x118>
    a40c:	mov	w0, #0x1                   	// #1
    a410:	strb	w0, [x20]
    a414:	b	a3c0 <__lsan_do_recoverable_leak_check@@Base+0xc0>
    a418:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a41c:	add	x1, x1, #0x478
    a420:	mov	x0, x19
    a424:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
    a428:	cbz	w0, a40c <__lsan_do_recoverable_leak_check@@Base+0x10c>
    a42c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a430:	add	x1, x1, #0x480
    a434:	mov	x0, x19
    a438:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
    a43c:	cbz	w0, a40c <__lsan_do_recoverable_leak_check@@Base+0x10c>
    a440:	mov	x1, x19
    a444:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    a448:	add	x0, x0, #0x488
    a44c:	bl	1d874 <OnPrint@@Base+0x344>
    a450:	mov	w0, #0x0                   	// #0
    a454:	b	a3c4 <__lsan_do_recoverable_leak_check@@Base+0xc4>
    a458:	cmp	x1, #0x1
    a45c:	b.ls	a570 <__lsan_do_recoverable_leak_check@@Base+0x270>  // b.plast
    a460:	mov	x7, #0x1                   	// #1
    a464:	b	a478 <__lsan_do_recoverable_leak_check@@Base+0x178>
    a468:	add	x2, x7, #0x1
    a46c:	cmp	x1, x2
    a470:	b.ls	a4b0 <__lsan_do_recoverable_leak_check@@Base+0x1b0>  // b.plast
    a474:	add	x7, x7, #0x1
    a478:	cbz	x7, a474 <__lsan_do_recoverable_leak_check@@Base+0x174>
    a47c:	mov	x2, x7
    a480:	sub	x3, x2, #0x1
    a484:	mov	x5, x2
    a488:	lsr	x2, x3, #1
    a48c:	ldr	x6, [x0, x2, lsl #3]
    a490:	ldr	x4, [x0, x5, lsl #3]
    a494:	cmp	x4, x6
    a498:	b.ls	a468 <__lsan_do_recoverable_leak_check@@Base+0x168>  // b.plast
    a49c:	str	x6, [x0, x5, lsl #3]
    a4a0:	str	x4, [x0, x2, lsl #3]
    a4a4:	cmp	x3, #0x1
    a4a8:	b.hi	a480 <__lsan_do_recoverable_leak_check@@Base+0x180>  // b.pmore
    a4ac:	b	a468 <__lsan_do_recoverable_leak_check@@Base+0x168>
    a4b0:	sub	x3, x1, #0x1
    a4b4:	mov	x8, #0x0                   	// #0
    a4b8:	b	a4dc <__lsan_do_recoverable_leak_check@@Base+0x1dc>
    a4bc:	lsl	x5, x5, #4
    a4c0:	ldr	x5, [x0, x5]
    a4c4:	cmp	x6, x5
    a4c8:	csel	x1, x1, x4, cc  // cc = lo, ul, last
    a4cc:	b	a514 <__lsan_do_recoverable_leak_check@@Base+0x214>
    a4d0:	cmp	x3, #0x1
    a4d4:	b.eq	a570 <__lsan_do_recoverable_leak_check@@Base+0x270>  // b.none
    a4d8:	sub	x3, x3, #0x1
    a4dc:	ldr	x1, [x0]
    a4e0:	ldr	x2, [x0, x3, lsl #3]
    a4e4:	str	x2, [x0]
    a4e8:	str	x1, [x0, x3, lsl #3]
    a4ec:	cbz	x3, a4d8 <__lsan_do_recoverable_leak_check@@Base+0x1d8>
    a4f0:	mov	x2, x8
    a4f4:	b	a538 <__lsan_do_recoverable_leak_check@@Base+0x238>
    a4f8:	cmp	x3, x1
    a4fc:	b.ls	a4d0 <__lsan_do_recoverable_leak_check@@Base+0x1d0>  // b.plast
    a500:	lsl	x5, x5, #4
    a504:	ldr	x6, [x0, x2, lsl #3]
    a508:	ldr	x4, [x0, x5]
    a50c:	cmp	x6, x4
    a510:	b.cs	a4d0 <__lsan_do_recoverable_leak_check@@Base+0x1d0>  // b.hs, b.nlast
    a514:	cmp	x1, x2
    a518:	b.eq	a4d0 <__lsan_do_recoverable_leak_check@@Base+0x1d0>  // b.none
    a51c:	ldr	x4, [x0, x2, lsl #3]
    a520:	ldr	x5, [x0, x1, lsl #3]
    a524:	str	x5, [x0, x2, lsl #3]
    a528:	str	x4, [x0, x1, lsl #3]
    a52c:	cmp	x1, x3
    a530:	b.cs	a4d0 <__lsan_do_recoverable_leak_check@@Base+0x1d0>  // b.hs, b.nlast
    a534:	mov	x2, x1
    a538:	lsl	x1, x2, #1
    a53c:	add	x4, x1, #0x1
    a540:	add	x5, x2, #0x1
    a544:	add	x1, x1, #0x2
    a548:	cmp	x3, x4
    a54c:	b.ls	a4f8 <__lsan_do_recoverable_leak_check@@Base+0x1f8>  // b.plast
    a550:	ldr	x7, [x0, x2, lsl #3]
    a554:	ldr	x6, [x0, x4, lsl #3]
    a558:	cmp	x7, x6
    a55c:	b.cs	a4f8 <__lsan_do_recoverable_leak_check@@Base+0x1f8>  // b.hs, b.nlast
    a560:	cmp	x3, x1
    a564:	b.hi	a4bc <__lsan_do_recoverable_leak_check@@Base+0x1bc>  // b.pmore
    a568:	mov	x1, x4
    a56c:	b	a514 <__lsan_do_recoverable_leak_check@@Base+0x214>
    a570:	ret
    a574:	sub	sp, sp, #0x20
    a578:	ldp	x4, x5, [x0]
    a57c:	ldp	x2, x3, [x0, #16]
    a580:	ldp	x6, x7, [x1]
    a584:	stp	x6, x7, [x0]
    a588:	ldp	x6, x7, [x1, #16]
    a58c:	stp	x6, x7, [x0, #16]
    a590:	stp	x4, x5, [x1]
    a594:	stp	x2, x3, [x1, #16]
    a598:	add	sp, sp, #0x20
    a59c:	ret
    a5a0:	cmp	x1, #0x1
    a5a4:	b.ls	a714 <__lsan_do_recoverable_leak_check@@Base+0x414>  // b.plast
    a5a8:	stp	x19, x20, [sp, #-80]!
    a5ac:	stp	x21, x22, [sp, #16]
    a5b0:	stp	x23, x24, [sp, #32]
    a5b4:	stp	x25, x26, [sp, #48]
    a5b8:	str	x30, [sp, #64]
    a5bc:	mov	x20, x0
    a5c0:	mov	x22, x1
    a5c4:	mov	x25, x2
    a5c8:	mov	x26, #0x1                   	// #1
    a5cc:	b	a5e0 <__lsan_do_recoverable_leak_check@@Base+0x2e0>
    a5d0:	add	x0, x26, #0x1
    a5d4:	cmp	x22, x0
    a5d8:	b.ls	a628 <__lsan_do_recoverable_leak_check@@Base+0x328>  // b.plast
    a5dc:	add	x26, x26, #0x1
    a5e0:	cbz	x26, a5dc <__lsan_do_recoverable_leak_check@@Base+0x2dc>
    a5e4:	mov	x21, x26
    a5e8:	sub	x23, x21, #0x1
    a5ec:	mov	x19, x21
    a5f0:	lsr	x21, x23, #1
    a5f4:	add	x24, x20, x21, lsl #5
    a5f8:	add	x19, x20, x19, lsl #5
    a5fc:	mov	x1, x19
    a600:	mov	x0, x24
    a604:	blr	x25
    a608:	and	w0, w0, #0xff
    a60c:	cbz	w0, a5d0 <__lsan_do_recoverable_leak_check@@Base+0x2d0>
    a610:	mov	x1, x24
    a614:	mov	x0, x19
    a618:	bl	a574 <__lsan_do_recoverable_leak_check@@Base+0x274>
    a61c:	cmp	x23, #0x1
    a620:	b.hi	a5e8 <__lsan_do_recoverable_leak_check@@Base+0x2e8>  // b.pmore
    a624:	b	a5d0 <__lsan_do_recoverable_leak_check@@Base+0x2d0>
    a628:	sub	x22, x22, #0x1
    a62c:	mov	x24, #0x0                   	// #0
    a630:	b	a658 <__lsan_do_recoverable_leak_check@@Base+0x358>
    a634:	add	x1, x20, x26, lsl #6
    a638:	add	x0, x20, x21, lsl #5
    a63c:	blr	x25
    a640:	ands	w0, w0, #0xff
    a644:	csel	x19, x19, x21, ne  // ne = any
    a648:	b	a68c <__lsan_do_recoverable_leak_check@@Base+0x38c>
    a64c:	cmp	x22, #0x1
    a650:	b.eq	a6fc <__lsan_do_recoverable_leak_check@@Base+0x3fc>  // b.none
    a654:	sub	x22, x22, #0x1
    a658:	add	x1, x20, x22, lsl #5
    a65c:	mov	x0, x20
    a660:	bl	a574 <__lsan_do_recoverable_leak_check@@Base+0x274>
    a664:	cbz	x22, a654 <__lsan_do_recoverable_leak_check@@Base+0x354>
    a668:	mov	x23, x24
    a66c:	b	a6ac <__lsan_do_recoverable_leak_check@@Base+0x3ac>
    a670:	cmp	x19, x22
    a674:	b.cs	a64c <__lsan_do_recoverable_leak_check@@Base+0x34c>  // b.hs, b.nlast
    a678:	add	x1, x20, x26, lsl #6
    a67c:	add	x0, x20, x23, lsl #5
    a680:	blr	x25
    a684:	and	w0, w0, #0xff
    a688:	cbz	w0, a64c <__lsan_do_recoverable_leak_check@@Base+0x34c>
    a68c:	cmp	x19, x23
    a690:	b.eq	a64c <__lsan_do_recoverable_leak_check@@Base+0x34c>  // b.none
    a694:	add	x1, x20, x19, lsl #5
    a698:	add	x0, x20, x23, lsl #5
    a69c:	bl	a574 <__lsan_do_recoverable_leak_check@@Base+0x274>
    a6a0:	cmp	x19, x22
    a6a4:	b.cs	a64c <__lsan_do_recoverable_leak_check@@Base+0x34c>  // b.hs, b.nlast
    a6a8:	mov	x23, x19
    a6ac:	lsl	x19, x23, #1
    a6b0:	add	x21, x19, #0x1
    a6b4:	add	x26, x23, #0x1
    a6b8:	add	x19, x19, #0x2
    a6bc:	cmp	x21, x22
    a6c0:	b.cs	a670 <__lsan_do_recoverable_leak_check@@Base+0x370>  // b.hs, b.nlast
    a6c4:	add	x1, x20, x21, lsl #5
    a6c8:	add	x0, x20, x23, lsl #5
    a6cc:	blr	x25
    a6d0:	and	w0, w0, #0xff
    a6d4:	cbz	w0, a670 <__lsan_do_recoverable_leak_check@@Base+0x370>
    a6d8:	cmp	x19, x22
    a6dc:	b.cc	a634 <__lsan_do_recoverable_leak_check@@Base+0x334>  // b.lo, b.ul, b.last
    a6e0:	cmp	x21, x23
    a6e4:	b.eq	a64c <__lsan_do_recoverable_leak_check@@Base+0x34c>  // b.none
    a6e8:	add	x1, x20, x21, lsl #5
    a6ec:	add	x0, x20, x23, lsl #5
    a6f0:	bl	a574 <__lsan_do_recoverable_leak_check@@Base+0x274>
    a6f4:	mov	x19, x21
    a6f8:	b	a6a8 <__lsan_do_recoverable_leak_check@@Base+0x3a8>
    a6fc:	ldp	x21, x22, [sp, #16]
    a700:	ldp	x23, x24, [sp, #32]
    a704:	ldp	x25, x26, [sp, #48]
    a708:	ldr	x30, [sp, #64]
    a70c:	ldp	x19, x20, [sp], #80
    a710:	ret
    a714:	ret
    a718:	stp	x19, x20, [sp, #-64]!
    a71c:	stp	x21, x22, [sp, #16]
    a720:	str	x30, [sp, #48]
    a724:	mov	x21, x0
    a728:	ldrh	w0, [x0, #24]
    a72c:	cbz	w0, a7a8 <__lsan_do_recoverable_leak_check@@Base+0x4a8>
    a730:	stp	x23, x24, [sp, #32]
    a734:	mov	x24, x2
    a738:	mov	x19, #0x0                   	// #0
    a73c:	mov	x20, #0x0                   	// #0
    a740:	mov	x23, #0xffffffff            	// #4294967295
    a744:	movk	x23, #0x2, lsl #32
    a748:	mov	x22, #0x1                   	// #1
    a74c:	movk	x22, #0x2, lsl #32
    a750:	b	a768 <__lsan_do_recoverable_leak_check@@Base+0x468>
    a754:	add	x20, x20, #0x1
    a758:	add	x19, x19, #0x38
    a75c:	ldrh	w0, [x21, #24]
    a760:	cmp	x0, x20
    a764:	b.ls	a7a4 <__lsan_do_recoverable_leak_check@@Base+0x4a4>  // b.plast
    a768:	ldr	x1, [x21, #16]
    a76c:	add	x2, x1, x19
    a770:	ldr	x1, [x1, x19]
    a774:	and	x1, x1, x23
    a778:	cmp	x1, x22
    a77c:	b.ne	a754 <__lsan_do_recoverable_leak_check@@Base+0x454>  // b.any
    a780:	ldr	x1, [x2, #40]
    a784:	cbz	x1, a754 <__lsan_do_recoverable_leak_check@@Base+0x454>
    a788:	ldr	x0, [x21]
    a78c:	ldr	x2, [x2, #16]
    a790:	add	x0, x0, x2
    a794:	mov	x2, x24
    a798:	add	x1, x1, x0
    a79c:	bl	7e94 <*ABS*+0x10@plt+0x1134>
    a7a0:	b	a754 <__lsan_do_recoverable_leak_check@@Base+0x454>
    a7a4:	ldp	x23, x24, [sp, #32]
    a7a8:	mov	w0, #0x0                   	// #0
    a7ac:	ldp	x21, x22, [sp, #16]
    a7b0:	ldr	x30, [sp, #48]
    a7b4:	ldp	x19, x20, [sp], #64
    a7b8:	ret
    a7bc:	str	x30, [sp, #-16]!
    a7c0:	ldr	x1, [x2, #8]
    a7c4:	ldr	x0, [x2]
    a7c8:	bl	21e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b90>
    a7cc:	mov	w0, #0x1                   	// #1
    a7d0:	ldr	x30, [sp], #16
    a7d4:	ret
    a7d8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a7dc:	ldr	x0, [x0, #3400]
    a7e0:	mrs	x1, tpidr_el0
    a7e4:	ldr	w0, [x1, x0]
    a7e8:	cmp	w0, #0x0
    a7ec:	cset	w0, gt
    a7f0:	ret
    a7f4:	mrs	x2, tpidr_el0
    a7f8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a7fc:	ldr	x1, [x1, #3400]
    a800:	ldr	w0, [x2, x1]
    a804:	add	w0, w0, #0x1
    a808:	str	w0, [x2, x1]
    a80c:	ret
    a810:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a814:	ldr	x0, [x0, #3400]
    a818:	mrs	x1, tpidr_el0
    a81c:	ldr	w0, [x1, x0]
    a820:	cbz	w0, a840 <__lsan_do_recoverable_leak_check@@Base+0x540>
    a824:	mrs	x2, tpidr_el0
    a828:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a82c:	ldr	x1, [x1, #3400]
    a830:	ldr	w0, [x2, x1]
    a834:	sub	w0, w0, #0x1
    a838:	str	w0, [x2, x1]
    a83c:	ret
    a840:	str	x30, [sp, #-16]!
    a844:	bl	7528 <*ABS*+0x10@plt+0x7c8>
    a848:	mrs	x2, tpidr_el0
    a84c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a850:	ldr	x1, [x1, #3400]
    a854:	ldr	w0, [x2, x1]
    a858:	sub	w0, w0, #0x1
    a85c:	str	w0, [x2, x1]
    a860:	ldr	x30, [sp], #16
    a864:	ret
    a868:	stp	x19, x20, [sp, #-192]!
    a86c:	stp	x25, x26, [sp, #48]
    a870:	str	x30, [sp, #64]
    a874:	strb	wzr, [sp, #184]
    a878:	add	x0, sp, #0xa0
    a87c:	bl	1ab3c <__sanitizer_set_report_fd@@Base+0x478c>
    a880:	ldr	x20, [sp, #160]
    a884:	ldr	x25, [sp, #176]
    a888:	add	x25, x25, x25, lsl #3
    a88c:	add	x25, x20, x25, lsl #3
    a890:	cmp	x25, x20
    a894:	b.eq	aa5c <__lsan_do_recoverable_leak_check@@Base+0x75c>  // b.none
    a898:	stp	x21, x22, [sp, #16]
    a89c:	stp	x23, x24, [sp, #32]
    a8a0:	adrp	x24, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a8a4:	add	x24, x24, #0xe00
    a8a8:	add	x21, x24, #0x40
    a8ac:	add	x22, sp, #0x58
    a8b0:	add	x26, x22, #0x1c
    a8b4:	b	a934 <__lsan_do_recoverable_leak_check@@Base+0x634>
    a8b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a8bc:	ldr	x0, [x0, #3680]
    a8c0:	ldr	w0, [x0]
    a8c4:	cbnz	w0, a910 <__lsan_do_recoverable_leak_check@@Base+0x610>
    a8c8:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a8cc:	ldr	x0, [x19, #3584]
    a8d0:	bl	12808 <__sancov_default_options@@Base+0x2484>
    a8d4:	str	xzr, [x19, #3584]
    a8d8:	ldr	x19, [sp, #160]
    a8dc:	ldr	x20, [sp, #176]
    a8e0:	add	x20, x20, x20, lsl #3
    a8e4:	add	x20, x19, x20, lsl #3
    a8e8:	cmp	x19, x20
    a8ec:	b.eq	aa7c <__lsan_do_recoverable_leak_check@@Base+0x77c>  // b.none
    a8f0:	mov	x0, x19
    a8f4:	bl	12808 <__sancov_default_options@@Base+0x2484>
    a8f8:	add	x19, x19, #0x48
    a8fc:	cmp	x20, x19
    a900:	b.ne	a8f0 <__lsan_do_recoverable_leak_check@@Base+0x5f0>  // b.any
    a904:	ldp	x21, x22, [sp, #16]
    a908:	ldp	x23, x24, [sp, #32]
    a90c:	b	aa18 <__lsan_do_recoverable_leak_check@@Base+0x718>
    a910:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a914:	add	x1, x1, #0x578
    a918:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    a91c:	add	x0, x0, #0x470
    a920:	bl	1d908 <OnPrint@@Base+0x3d8>
    a924:	b	a8c8 <__lsan_do_recoverable_leak_check@@Base+0x5c8>
    a928:	add	x20, x20, #0x48
    a92c:	cmp	x25, x20
    a930:	b.eq	a9d8 <__lsan_do_recoverable_leak_check@@Base+0x6d8>  // b.none
    a934:	ldr	x23, [x20, #8]
    a938:	mov	x0, #0x7                   	// #7
    a93c:	bl	6bb0 <getauxval@plt>
    a940:	cmp	x23, x0
    a944:	b.ne	a928 <__lsan_do_recoverable_leak_check@@Base+0x628>  // b.any
    a948:	ldr	x0, [x24]
    a94c:	cbnz	x0, a8b8 <__lsan_do_recoverable_leak_check@@Base+0x5b8>
    a950:	str	x21, [x24]
    a954:	ldp	x0, x1, [x20]
    a958:	stp	x0, x1, [x21]
    a95c:	ldp	x0, x1, [x20, #16]
    a960:	stp	x0, x1, [x21, #16]
    a964:	ldp	x0, x1, [x20, #32]
    a968:	stp	x0, x1, [x21, #32]
    a96c:	ldp	x0, x1, [x20, #48]
    a970:	stp	x0, x1, [x21, #48]
    a974:	ldr	x0, [x20, #64]
    a978:	str	x0, [x21, #64]
    a97c:	str	xzr, [sp, #88]
    a980:	str	xzr, [sp, #96]
    a984:	str	xzr, [sp, #104]
    a988:	str	wzr, [sp, #112]
    a98c:	strb	wzr, [sp, #132]
    a990:	mov	x2, #0x10                  	// #16
    a994:	mov	w1, #0x0                   	// #0
    a998:	mov	x0, x26
    a99c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    a9a0:	str	xzr, [sp, #152]
    a9a4:	str	xzr, [sp, #144]
    a9a8:	str	xzr, [sp, #136]
    a9ac:	ldp	x0, x1, [x22]
    a9b0:	stp	x0, x1, [x20]
    a9b4:	ldp	x0, x1, [x22, #16]
    a9b8:	stp	x0, x1, [x20, #16]
    a9bc:	ldp	x0, x1, [x22, #32]
    a9c0:	stp	x0, x1, [x20, #32]
    a9c4:	ldp	x0, x1, [x22, #48]
    a9c8:	stp	x0, x1, [x20, #48]
    a9cc:	ldr	x0, [x22, #64]
    a9d0:	str	x0, [x20, #64]
    a9d4:	b	a928 <__lsan_do_recoverable_leak_check@@Base+0x628>
    a9d8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a9dc:	ldr	x0, [x0, #3584]
    a9e0:	cbz	x0, aa28 <__lsan_do_recoverable_leak_check@@Base+0x728>
    a9e4:	ldp	x21, x22, [sp, #16]
    a9e8:	ldp	x23, x24, [sp, #32]
    a9ec:	ldr	x19, [sp, #160]
    a9f0:	ldr	x20, [sp, #176]
    a9f4:	add	x20, x20, x20, lsl #3
    a9f8:	add	x20, x19, x20, lsl #3
    a9fc:	cmp	x19, x20
    aa00:	b.eq	aa18 <__lsan_do_recoverable_leak_check@@Base+0x718>  // b.none
    aa04:	mov	x0, x19
    aa08:	bl	12808 <__sancov_default_options@@Base+0x2484>
    aa0c:	add	x19, x19, #0x48
    aa10:	cmp	x20, x19
    aa14:	b.ne	aa04 <__lsan_do_recoverable_leak_check@@Base+0x704>  // b.any
    aa18:	ldp	x25, x26, [sp, #48]
    aa1c:	ldr	x30, [sp, #64]
    aa20:	ldp	x19, x20, [sp], #192
    aa24:	ret
    aa28:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aa2c:	ldr	x0, [x0, #3680]
    aa30:	ldr	w0, [x0]
    aa34:	cbnz	w0, aa44 <__lsan_do_recoverable_leak_check@@Base+0x744>
    aa38:	ldp	x21, x22, [sp, #16]
    aa3c:	ldp	x23, x24, [sp, #32]
    aa40:	b	a9ec <__lsan_do_recoverable_leak_check@@Base+0x6ec>
    aa44:	ldp	x21, x22, [sp, #16]
    aa48:	ldp	x23, x24, [sp, #32]
    aa4c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    aa50:	add	x0, x0, #0x4f8
    aa54:	bl	1d908 <OnPrint@@Base+0x3d8>
    aa58:	b	a9ec <__lsan_do_recoverable_leak_check@@Base+0x6ec>
    aa5c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    aa60:	ldr	x0, [x0, #3584]
    aa64:	cbnz	x0, aa18 <__lsan_do_recoverable_leak_check@@Base+0x718>
    aa68:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aa6c:	ldr	x0, [x0, #3680]
    aa70:	ldr	w0, [x0]
    aa74:	cbz	w0, aa18 <__lsan_do_recoverable_leak_check@@Base+0x718>
    aa78:	b	aa4c <__lsan_do_recoverable_leak_check@@Base+0x74c>
    aa7c:	ldp	x21, x22, [sp, #16]
    aa80:	ldp	x23, x24, [sp, #32]
    aa84:	b	aa18 <__lsan_do_recoverable_leak_check@@Base+0x718>
    aa88:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aa8c:	ldr	x2, [x2, #3928]
    aa90:	ldrb	w1, [x2, #12]
    aa94:	cbnz	w1, aa9c <__lsan_do_recoverable_leak_check@@Base+0x79c>
    aa98:	ret
    aa9c:	str	x30, [sp, #-16]!
    aaa0:	mov	x1, x0
    aaa4:	adrp	x0, a000 <__lsan_enable@@Base+0xdcc>
    aaa8:	add	x0, x0, #0x718
    aaac:	bl	6950 <dl_iterate_phdr@plt>
    aab0:	ldr	x30, [sp], #16
    aab4:	ret
    aab8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    aabc:	ldr	x0, [x0, #3584]
    aac0:	ret
    aac4:	ret
    aac8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    aacc:	ldr	x0, [x0, #4040]
    aad0:	ldr	w0, [x0, #216]
    aad4:	cbnz	w0, aadc <__lsan_do_recoverable_leak_check@@Base+0x7dc>
    aad8:	ret
    aadc:	str	x30, [sp, #-16]!
    aae0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    aae4:	str	x30, [sp, #-32]!
    aae8:	str	x0, [sp, #16]
    aaec:	str	x1, [sp, #24]
    aaf0:	add	x1, sp, #0x10
    aaf4:	adrp	x0, a000 <__lsan_enable@@Base+0xdcc>
    aaf8:	add	x0, x0, #0x7bc
    aafc:	bl	6950 <dl_iterate_phdr@plt>
    ab00:	ldr	x30, [sp], #32
    ab04:	ret
    ab08:	stp	x19, x20, [sp, #-32]!
    ab0c:	str	x30, [sp, #16]
    ab10:	mov	x19, x1
    ab14:	mov	x20, x2
    ab18:	bl	aec0 <__sanitizer_print_stack_trace@@Base+0xa4>
    ab1c:	mov	x4, #0x0                   	// #0
    ab20:	adrp	x3, a000 <__lsan_enable@@Base+0xdcc>
    ab24:	add	x3, x3, #0xb44
    ab28:	mov	w2, w0
    ab2c:	mov	x1, x20
    ab30:	mov	x0, x19
    ab34:	bl	2109c <__sanitizer_get_module_and_offset_for_pc@@Base+0xde8>
    ab38:	ldr	x30, [sp, #16]
    ab3c:	ldp	x19, x20, [sp], #32
    ab40:	ret
    ab44:	stp	x19, x20, [sp, #-48]!
    ab48:	stp	x21, x22, [sp, #16]
    ab4c:	stp	x23, x30, [sp, #32]
    ab50:	mov	x19, x2
    ab54:	ldr	x22, [x0, #24]
    ab58:	ldr	x23, [x0, #40]
    ab5c:	ldr	x21, [x0, #8]
    ab60:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ab64:	ldr	x0, [x0, #4040]
    ab68:	ldrb	w20, [x0, #33]
    ab6c:	mov	x6, #0x0                   	// #0
    ab70:	mov	x5, #0x0                   	// #0
    ab74:	cbnz	w20, aba4 <__lsan_do_recoverable_leak_check@@Base+0x8a4>
    ab78:	mov	w7, w20
    ab7c:	mov	x4, x21
    ab80:	mov	x3, x23
    ab84:	mov	x2, x22
    ab88:	mov	w1, #0x100                 	// #256
    ab8c:	mov	x0, x19
    ab90:	bl	1fc70 <OnPrint@@Base+0x2740>
    ab94:	ldp	x21, x22, [sp, #16]
    ab98:	ldp	x23, x30, [sp, #32]
    ab9c:	ldp	x19, x20, [sp], #48
    aba0:	ret
    aba4:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    aba8:	cbz	x0, abb8 <__lsan_do_recoverable_leak_check@@Base+0x8b8>
    abac:	ldr	x5, [x0, #152]
    abb0:	ldr	x6, [x0, #144]
    abb4:	b	ab78 <__lsan_do_recoverable_leak_check@@Base+0x878>
    abb8:	mov	x6, #0x0                   	// #0
    abbc:	mov	x5, #0x0                   	// #0
    abc0:	b	ab78 <__lsan_do_recoverable_leak_check@@Base+0x878>
    abc4:	stp	x19, x20, [sp, #-304]!
    abc8:	stp	x21, x30, [sp, #16]
    abcc:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    abd0:	ldr	x19, [x19, #4040]
    abd4:	mov	x0, x19
    abd8:	bl	165b0 <__sanitizer_set_report_fd@@Base+0x200>
    abdc:	add	x20, sp, #0x20
    abe0:	mov	x1, x19
    abe4:	mov	x0, x20
    abe8:	bl	16720 <__sanitizer_set_report_fd@@Base+0x370>
    abec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    abf0:	add	x0, x0, #0x580
    abf4:	bl	18cf4 <__sanitizer_set_report_fd@@Base+0x2944>
    abf8:	str	x0, [sp, #40]
    abfc:	mov	w0, #0x1e                  	// #30
    ac00:	str	w0, [sp, #68]
    ac04:	mov	w0, #0x1                   	// #1
    ac08:	strb	w0, [sp, #153]
    ac0c:	strb	w0, [sp, #89]
    ac10:	mov	w0, #0x17                  	// #23
    ac14:	str	w0, [sp, #248]
    ac18:	mov	x1, x20
    ac1c:	mov	x0, x19
    ac20:	bl	16720 <__sanitizer_set_report_fd@@Base+0x370>
    ac24:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ac28:	ldr	x21, [x21, #3928]
    ac2c:	mov	x0, x21
    ac30:	bl	7550 <*ABS*+0x10@plt+0x7f0>
    ac34:	add	x20, sp, #0x110
    ac38:	mov	x0, x20
    ac3c:	bl	17a14 <__sanitizer_set_report_fd@@Base+0x1664>
    ac40:	mov	x1, x21
    ac44:	mov	x0, x20
    ac48:	bl	7598 <*ABS*+0x10@plt+0x838>
    ac4c:	mov	x1, x19
    ac50:	mov	x0, x20
    ac54:	bl	16948 <__sanitizer_set_report_fd@@Base+0x598>
    ac58:	bl	794c <*ABS*+0x10@plt+0xbec>
    ac5c:	mov	x1, x0
    ac60:	mov	x0, x20
    ac64:	bl	178a0 <__sanitizer_set_report_fd@@Base+0x14f0>
    ac68:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ac6c:	add	x0, x0, #0x598
    ac70:	bl	18cf4 <__sanitizer_set_report_fd@@Base+0x2944>
    ac74:	mov	x1, x0
    ac78:	mov	x0, x20
    ac7c:	bl	178a0 <__sanitizer_set_report_fd@@Base+0x14f0>
    ac80:	ldr	w1, [x19, #52]
    ac84:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ac88:	ldr	x0, [x0, #3680]
    ac8c:	str	w1, [x0]
    ac90:	ldr	w0, [x0]
    ac94:	cbnz	w0, acc4 <__lsan_do_recoverable_leak_check@@Base+0x9c4>
    ac98:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ac9c:	ldr	x0, [x0, #4040]
    aca0:	ldrb	w0, [x0, #122]
    aca4:	cbnz	w0, accc <__lsan_do_recoverable_leak_check@@Base+0x9cc>
    aca8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    acac:	ldr	x0, [x0, #4040]
    acb0:	ldr	x0, [x0, #40]
    acb4:	bl	6cf0 <__sanitizer_set_report_path@plt>
    acb8:	ldp	x21, x30, [sp, #16]
    acbc:	ldp	x19, x20, [sp], #304
    acc0:	ret
    acc4:	bl	173cc <__sanitizer_set_report_fd@@Base+0x101c>
    acc8:	b	ac98 <__lsan_do_recoverable_leak_check@@Base+0x998>
    accc:	add	x0, sp, #0x110
    acd0:	bl	174a0 <__sanitizer_set_report_fd@@Base+0x10f0>
    acd4:	b	aca8 <__lsan_do_recoverable_leak_check@@Base+0x9a8>
    acd8:	mov	w0, #0x0                   	// #0
    acdc:	ret

000000000000ace0 <__lsan_init@@Base>:
    ace0:	stp	x19, x30, [sp, #-16]!
    ace4:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ace8:	ldrb	w0, [x0, #3720]
    acec:	cbnz	w0, ad04 <__lsan_init@@Base+0x24>
    acf0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    acf4:	ldrb	w0, [x0, #3721]
    acf8:	cbz	w0, ad24 <__lsan_init@@Base+0x44>
    acfc:	ldp	x19, x30, [sp], #16
    ad00:	ret
    ad04:	mov	x4, #0x0                   	// #0
    ad08:	mov	x3, #0x0                   	// #0
    ad0c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ad10:	add	x2, x2, #0x5a8
    ad14:	mov	w1, #0x53                  	// #83
    ad18:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ad1c:	add	x0, x0, #0x5d0
    ad20:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ad24:	mov	w19, #0x1                   	// #1
    ad28:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ad2c:	strb	w19, [x0, #3720]
    ad30:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ad34:	ldr	x0, [x0, #4008]
    ad38:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ad3c:	add	x1, x1, #0x5f8
    ad40:	str	x1, [x0]
    ad44:	bl	12cd0 <__sancov_default_options@@Base+0x294c>
    ad48:	bl	abc4 <__lsan_do_recoverable_leak_check@@Base+0x8c4>
    ad4c:	bl	7974 <*ABS*+0x10@plt+0xc14>
    ad50:	bl	b174 <__sanitizer_print_stack_trace@@Base+0x358>
    ad54:	bl	af30 <__sanitizer_print_stack_trace@@Base+0x114>
    ad58:	bl	1a948 <__sanitizer_set_report_fd@@Base+0x4598>
    ad5c:	bl	fcc8 <_ZdaPvmSt11align_val_t@@Base+0x78>
    ad60:	bl	10008 <_ZdaPvmSt11align_val_t@@Base+0x3b8>
    ad64:	adrp	x0, a000 <__lsan_enable@@Base+0xdcc>
    ad68:	add	x0, x0, #0xb08
    ad6c:	bl	1c22c <__sanitizer_set_report_fd@@Base+0x5e7c>
    ad70:	mov	w2, w19
    ad74:	mov	x1, #0x0                   	// #0
    ad78:	mov	w0, #0x0                   	// #0
    ad7c:	bl	100b4 <_ZdaPvmSt11align_val_t@@Base+0x464>
    ad80:	mov	w3, w0
    ad84:	cbnz	w0, adf0 <__lsan_init@@Base+0x110>
    ad88:	bl	18c70 <__sanitizer_set_report_fd@@Base+0x28c0>
    ad8c:	mov	w2, #0x0                   	// #0
    ad90:	mov	x1, x0
    ad94:	mov	w0, #0x0                   	// #0
    ad98:	bl	100d4 <_ZdaPvmSt11align_val_t@@Base+0x484>
    ad9c:	mov	w0, #0x0                   	// #0
    ada0:	bl	aee4 <__sanitizer_print_stack_trace@@Base+0xc8>
    ada4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ada8:	ldr	x0, [x0, #4040]
    adac:	ldrb	w0, [x0, #57]
    adb0:	cbz	w0, adc4 <__lsan_init@@Base+0xe4>
    adb4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    adb8:	ldr	x0, [x0, #4040]
    adbc:	ldrb	w0, [x0, #58]
    adc0:	cbnz	w0, ae0c <__lsan_init@@Base+0x12c>
    adc4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    adc8:	ldr	x0, [x0, #4040]
    adcc:	ldr	x1, [x0, #168]
    add0:	ldrb	w0, [x0, #161]
    add4:	bl	136a4 <__sanitizer_sandbox_on_notify@@Base+0x134>
    add8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    addc:	add	x1, x0, #0xe88
    ade0:	mov	w2, #0x1                   	// #1
    ade4:	strb	w2, [x1, #1]
    ade8:	strb	wzr, [x0, #3720]
    adec:	b	acfc <__lsan_init@@Base+0x1c>
    adf0:	mov	x4, #0x0                   	// #0
    adf4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    adf8:	add	x2, x2, #0x608
    adfc:	mov	w1, #0x63                  	// #99
    ae00:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ae04:	add	x0, x0, #0x5d0
    ae08:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ae0c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ae10:	ldr	x0, [x0, #3552]
    ae14:	bl	1c110 <__sanitizer_set_report_fd@@Base+0x5d60>
    ae18:	b	adc4 <__lsan_init@@Base+0xe4>

000000000000ae1c <__sanitizer_print_stack_trace@@Base>:
    ae1c:	sub	sp, sp, #0x850
    ae20:	stp	x29, x30, [sp]
    ae24:	mov	x29, sp
    ae28:	stp	x19, x20, [sp, #16]
    ae2c:	str	x21, [sp, #32]
    ae30:	add	x0, x29, #0x48
    ae34:	str	x0, [x29, #56]
    ae38:	str	wzr, [x29, #64]
    ae3c:	str	wzr, [x29, #68]
    ae40:	str	xzr, [x29, #2120]
    ae44:	bl	1f460 <OnPrint@@Base+0x1f30>
    ae48:	mov	x20, x0
    ae4c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ae50:	ldr	x0, [x0, #4040]
    ae54:	ldrb	w21, [x0, #33]
    ae58:	mov	x6, #0x0                   	// #0
    ae5c:	mov	x5, #0x0                   	// #0
    ae60:	cbnz	w21, aea0 <__sanitizer_print_stack_trace@@Base+0x84>
    ae64:	add	x19, x29, #0x38
    ae68:	mov	w7, w21
    ae6c:	mov	x4, #0x0                   	// #0
    ae70:	mov	x3, x29
    ae74:	mov	x2, x20
    ae78:	mov	w1, #0x100                 	// #256
    ae7c:	mov	x0, x19
    ae80:	bl	1fc70 <OnPrint@@Base+0x2740>
    ae84:	mov	x0, x19
    ae88:	bl	1f6c0 <OnPrint@@Base+0x2190>
    ae8c:	ldp	x19, x20, [sp, #16]
    ae90:	ldr	x21, [sp, #32]
    ae94:	ldp	x29, x30, [sp]
    ae98:	add	sp, sp, #0x850
    ae9c:	ret
    aea0:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    aea4:	cbz	x0, aeb4 <__sanitizer_print_stack_trace@@Base+0x98>
    aea8:	ldr	x5, [x0, #152]
    aeac:	ldr	x6, [x0, #144]
    aeb0:	b	ae64 <__sanitizer_print_stack_trace@@Base+0x48>
    aeb4:	mov	x6, #0x0                   	// #0
    aeb8:	mov	x5, #0x0                   	// #0
    aebc:	b	ae64 <__sanitizer_print_stack_trace@@Base+0x48>
    aec0:	str	x30, [sp, #-16]!
    aec4:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
    aec8:	ldr	x1, [x0, #912]
    aecc:	add	x0, x0, #0x390
    aed0:	blr	x1
    aed4:	mrs	x1, tpidr_el0
    aed8:	ldr	w0, [x1, x0]
    aedc:	ldr	x30, [sp], #16
    aee0:	ret
    aee4:	str	x30, [sp, #-16]!
    aee8:	mov	w2, w0
    aeec:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
    aef0:	ldr	x1, [x0, #912]
    aef4:	add	x0, x0, #0x390
    aef8:	blr	x1
    aefc:	mrs	x1, tpidr_el0
    af00:	str	w2, [x1, x0]
    af04:	ldr	x30, [sp], #16
    af08:	ret
    af0c:	str	x30, [sp, #-16]!
    af10:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
    af14:	ldr	x1, [x0, #896]
    af18:	add	x0, x0, #0x380
    af1c:	blr	x1
    af20:	mrs	x1, tpidr_el0
    af24:	add	x0, x1, x0
    af28:	ldr	x30, [sp], #16
    af2c:	ret
    af30:	ret
    af34:	stp	x19, x30, [sp, #-16]!
    af38:	mov	x19, x0
    af3c:	mov	x0, #0xffffffffffff        	// #281474976710655
    af40:	cmp	x19, x0
    af44:	b.ls	afbc <__sanitizer_print_stack_trace@@Base+0x1a0>  // b.plast
    af48:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    af4c:	add	x0, x0, #0xec0
    af50:	add	x0, x0, #0x80, lsl #12
    af54:	ldr	x0, [x0, #3520]
    af58:	sub	x0, x0, #0x1
    af5c:	tst	x19, x0
    af60:	b.eq	af9c <__sanitizer_print_stack_trace@@Base+0x180>  // b.none
    af64:	mov	x2, x19
    af68:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    af6c:	ldr	x0, [x0, #4008]
    af70:	ldr	x1, [x0]
    af74:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    af78:	add	x0, x0, #0x690
    af7c:	bl	1d874 <OnPrint@@Base+0x344>
    af80:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    af84:	add	x0, x0, #0xec0
    af88:	add	x0, x0, #0x80, lsl #12
    af8c:	ldr	x0, [x0, #3520]
    af90:	sub	x0, x0, #0x1
    af94:	tst	x19, x0
    af98:	b.ne	b08c <__sanitizer_print_stack_trace@@Base+0x270>  // b.any
    af9c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    afa0:	add	x0, x0, #0xec0
    afa4:	add	x0, x0, #0x80, lsl #12
    afa8:	ldr	x0, [x0, #3520]
    afac:	sub	x0, x19, x0
    afb0:	add	x0, x0, #0x20
    afb4:	ldp	x19, x30, [sp], #16
    afb8:	ret
    afbc:	lsr	x1, x19, #20
    afc0:	lsr	x2, x19, #32
    afc4:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    afc8:	add	x0, x0, #0xec0
    afcc:	ldr	x0, [x0, x2, lsl #3]
    afd0:	dmb	ish
    afd4:	cbz	x0, af48 <__sanitizer_print_stack_trace@@Base+0x12c>
    afd8:	and	x1, x1, #0xfff
    afdc:	ldrb	w0, [x0, x1]
    afe0:	cbz	w0, af48 <__sanitizer_print_stack_trace@@Base+0x12c>
    afe4:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    afe8:	add	x0, x0, #0xec0
    afec:	ldr	x0, [x0, x2, lsl #3]
    aff0:	dmb	ish
    aff4:	cbz	x0, b064 <__sanitizer_print_stack_trace@@Base+0x248>
    aff8:	ldrb	w0, [x0, x1]
    affc:	cbz	w0, b064 <__sanitizer_print_stack_trace@@Base+0x248>
    b000:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b004:	add	x0, x0, #0xec0
    b008:	ldr	x0, [x0, x2, lsl #3]
    b00c:	dmb	ish
    b010:	cbz	x0, b084 <__sanitizer_print_stack_trace@@Base+0x268>
    b014:	ldrb	w0, [x0, x1]
    b018:	mov	x2, #0x200                 	// #512
    b01c:	cmp	x0, #0x35
    b020:	b.eq	b048 <__sanitizer_print_stack_trace@@Base+0x22c>  // b.none
    b024:	cmp	x0, #0x10
    b028:	b.ls	b084 <__sanitizer_print_stack_trace@@Base+0x268>  // b.plast
    b02c:	sub	x0, x0, #0x10
    b030:	lsr	x1, x0, #2
    b034:	mov	x2, #0x100                 	// #256
    b038:	lsl	x1, x2, x1
    b03c:	lsr	x2, x1, #2
    b040:	and	x0, x0, #0x3
    b044:	madd	x2, x2, x0, x1
    b048:	and	x1, x19, #0xfffffffffff00000
    b04c:	add	x3, x1, #0x100, lsl #12
    b050:	sub	w0, w19, w1
    b054:	udiv	w0, w0, w2
    b058:	add	x0, x0, #0x1
    b05c:	sub	x0, x3, x0, lsl #4
    b060:	b	afb4 <__sanitizer_print_stack_trace@@Base+0x198>
    b064:	mov	x4, #0x0                   	// #0
    b068:	mov	x3, #0x0                   	// #0
    b06c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b070:	add	x2, x2, #0x620
    b074:	mov	w1, #0x91                  	// #145
    b078:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b07c:	add	x0, x0, #0x640
    b080:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b084:	lsl	x2, x0, #4
    b088:	b	b048 <__sanitizer_print_stack_trace@@Base+0x22c>
    b08c:	mov	x4, #0x0                   	// #0
    b090:	mov	x3, #0x0                   	// #0
    b094:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b098:	add	x2, x2, #0x6a8
    b09c:	mov	w1, #0xae                  	// #174
    b0a0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b0a4:	add	x0, x0, #0x6e8
    b0a8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b0ac:	cbz	x1, b130 <__sanitizer_print_stack_trace@@Base+0x314>
    b0b0:	stp	x19, x20, [sp, #-32]!
    b0b4:	stp	x21, x30, [sp, #16]
    b0b8:	mov	x21, x0
    b0bc:	mov	x0, x1
    b0c0:	mov	x20, x2
    b0c4:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    b0c8:	mov	x19, x0
    b0cc:	cbz	x0, b110 <__sanitizer_print_stack_trace@@Base+0x2f4>
    b0d0:	bl	a7d8 <__lsan_do_recoverable_leak_check@@Base+0x4d8>
    b0d4:	neg	w0, w0
    b0d8:	ldrb	w1, [x19, #1]
    b0dc:	bfxil	w1, w0, #0, #2
    b0e0:	strb	w1, [x19, #1]
    b0e4:	ldp	x0, x1, [x21]
    b0e8:	bl	1ed58 <OnPrint@@Base+0x1828>
    b0ec:	str	w0, [x19, #8]
    b0f0:	ldr	x0, [x19]
    b0f4:	bfi	x0, x20, #10, #54
    b0f8:	str	x0, [x19]
    b0fc:	mov	w0, #0x1                   	// #1
    b100:	strb	w0, [x19]
    b104:	ldp	x21, x30, [sp, #16]
    b108:	ldp	x19, x20, [sp], #32
    b10c:	ret
    b110:	mov	x4, #0x0                   	// #0
    b114:	mov	x3, #0x0                   	// #0
    b118:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b11c:	add	x2, x2, #0x738
    b120:	mov	w1, #0x3a                  	// #58
    b124:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b128:	add	x0, x0, #0x748
    b12c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b130:	ret
    b134:	cbz	x0, b170 <__sanitizer_print_stack_trace@@Base+0x354>
    b138:	str	x30, [sp, #-16]!
    b13c:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    b140:	cbz	x0, b150 <__sanitizer_print_stack_trace@@Base+0x334>
    b144:	strb	wzr, [x0]
    b148:	ldr	x30, [sp], #16
    b14c:	ret
    b150:	mov	x4, #0x0                   	// #0
    b154:	mov	x3, #0x0                   	// #0
    b158:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b15c:	add	x2, x2, #0x738
    b160:	mov	w1, #0x44                  	// #68
    b164:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b168:	add	x0, x0, #0x748
    b16c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b170:	ret
    b174:	stp	x19, x30, [sp, #-16]!
    b178:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b17c:	ldr	x0, [x0, #4040]
    b180:	ldrb	w0, [x0, #59]
    b184:	bl	107d4 <__sancov_default_options@@Base+0x450>
    b188:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b18c:	add	x19, x19, #0xec0
    b190:	mov	x2, #0x80000               	// #524288
    b194:	mov	w1, #0x0                   	// #0
    b198:	mov	x0, x19
    b19c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    b1a0:	add	x19, x19, #0x80, lsl #12
    b1a4:	strb	wzr, [x19]
    b1a8:	mov	x2, #0xd80                 	// #3456
    b1ac:	mov	w1, #0x0                   	// #0
    b1b0:	adrp	x0, e3000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    b1b4:	add	x0, x0, #0xf00
    b1b8:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    b1bc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b1c0:	ldr	x0, [x0, #4000]
    b1c4:	ldr	x0, [x0]
    b1c8:	cbz	x0, b234 <__sanitizer_print_stack_trace@@Base+0x418>
    b1cc:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b1d0:	add	x0, x0, #0xec0
    b1d4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b1d8:	ldr	x1, [x1, #4000]
    b1dc:	ldr	x1, [x1]
    b1e0:	add	x0, x0, #0x80, lsl #12
    b1e4:	str	x1, [x0, #3520]
    b1e8:	mov	x3, #0x0                   	// #0
    b1ec:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b1f0:	ldr	x0, [x0, #3840]
    b1f4:	ldr	x2, [x0]
    b1f8:	mov	x1, #0x800000              	// #8388608
    b1fc:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b200:	add	x0, x0, #0xc90
    b204:	bl	1c79c <__sanitizer_set_report_fd@@Base+0x63ec>
    b208:	cbz	x0, b248 <__sanitizer_print_stack_trace@@Base+0x42c>
    b20c:	adrp	x1, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b210:	add	x1, x1, #0xec0
    b214:	add	x1, x1, #0x80, lsl #12
    b218:	str	x0, [x1, #3528]
    b21c:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b220:	add	x0, x0, #0xef0
    b224:	str	x0, [x1, #4144]
    b228:	str	x0, [x1, #4152]
    b22c:	ldp	x19, x30, [sp], #16
    b230:	ret
    b234:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    b238:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b23c:	ldr	x1, [x1, #4000]
    b240:	str	x0, [x1]
    b244:	b	b1cc <__sanitizer_print_stack_trace@@Base+0x3b0>
    b248:	mov	x4, #0x0                   	// #0
    b24c:	mov	x3, #0x0                   	// #0
    b250:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b254:	add	x2, x2, #0x778
    b258:	mov	w1, #0x24                  	// #36
    b25c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b260:	add	x0, x0, #0x6e8
    b264:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b268:	stp	x19, x20, [sp, #-32]!
    b26c:	str	x30, [sp, #16]
    b270:	mov	x20, x0
    b274:	mov	x19, x1
    b278:	bl	af0c <__sanitizer_print_stack_trace@@Base+0xf0>
    b27c:	str	x0, [x20]
    b280:	add	x0, x0, #0xd, lsl #12
    b284:	add	x0, x0, #0x820
    b288:	str	x0, [x19]
    b28c:	ldr	x30, [sp, #16]
    b290:	ldp	x19, x20, [sp], #32
    b294:	ret
    b298:	str	x30, [sp, #-16]!
    b29c:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    b2a0:	cbz	x0, b2b4 <__sanitizer_print_stack_trace@@Base+0x498>
    b2a4:	ldr	x0, [x0]
    b2a8:	lsr	x0, x0, #10
    b2ac:	ldr	x30, [sp], #16
    b2b0:	ret
    b2b4:	mov	x0, #0x0                   	// #0
    b2b8:	b	b2ac <__sanitizer_print_stack_trace@@Base+0x490>
    b2bc:	str	x30, [sp, #-16]!
    b2c0:	bl	b298 <__sanitizer_print_stack_trace@@Base+0x47c>
    b2c4:	ldr	x30, [sp], #16
    b2c8:	ret
    b2cc:	stp	x19, x20, [sp, #-32]!
    b2d0:	stp	x21, x30, [sp, #16]
    b2d4:	adrp	x19, e3000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    b2d8:	add	x19, x19, #0xf00
    b2dc:	adrp	x20, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b2e0:	add	x20, x20, #0xec0
    b2e4:	add	x20, x20, #0x80, lsl #12
    b2e8:	add	x20, x20, #0xdc0
    b2ec:	mov	w21, #0x1                   	// #1
    b2f0:	ldxrb	w0, [x19]
    b2f4:	stxrb	w1, w21, [x19]
    b2f8:	cbnz	w1, b2f0 <__sanitizer_print_stack_trace@@Base+0x4d4>
    b2fc:	dmb	ish
    b300:	and	w0, w0, #0xff
    b304:	cbnz	w0, b344 <__sanitizer_print_stack_trace@@Base+0x528>
    b308:	add	x19, x19, #0x40
    b30c:	cmp	x19, x20
    b310:	b.ne	b2f0 <__sanitizer_print_stack_trace@@Base+0x4d4>  // b.any
    b314:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b318:	add	x0, x0, #0xee8
    b31c:	mov	w2, #0x1                   	// #1
    b320:	ldxrb	w1, [x0]
    b324:	stxrb	w3, w2, [x0]
    b328:	cbnz	w3, b320 <__sanitizer_print_stack_trace@@Base+0x504>
    b32c:	dmb	ish
    b330:	and	w0, w1, #0xff
    b334:	cbnz	w0, b350 <__sanitizer_print_stack_trace@@Base+0x534>
    b338:	ldp	x21, x30, [sp, #16]
    b33c:	ldp	x19, x20, [sp], #32
    b340:	ret
    b344:	mov	x0, x19
    b348:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    b34c:	b	b308 <__sanitizer_print_stack_trace@@Base+0x4ec>
    b350:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b354:	add	x0, x0, #0xee8
    b358:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    b35c:	b	b338 <__sanitizer_print_stack_trace@@Base+0x51c>
    b360:	dmb	ish
    b364:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b368:	add	x0, x0, #0xec0
    b36c:	add	x1, x0, #0x81, lsl #12
    b370:	strb	wzr, [x1, #40]
    b374:	adrp	x1, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b378:	add	x1, x1, #0xc40
    b37c:	add	x0, x0, #0x80, lsl #12
    b380:	dmb	ish
    b384:	strb	wzr, [x1], #-64
    b388:	cmp	x1, x0
    b38c:	b.ne	b380 <__sanitizer_print_stack_trace@@Base+0x564>  // b.any
    b390:	ret
    b394:	adrp	x2, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b398:	add	x2, x2, #0xec0
    b39c:	str	x2, [x0]
    b3a0:	add	x2, x2, #0x81, lsl #12
    b3a4:	add	x2, x2, #0x80
    b3a8:	str	x2, [x1]
    b3ac:	ret
    b3b0:	ret
    b3b4:	stp	x19, x30, [sp, #-16]!
    b3b8:	mov	x19, x0
    b3bc:	mov	x0, x1
    b3c0:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    b3c4:	str	x0, [x19]
    b3c8:	cbz	x0, b3d4 <__sanitizer_print_stack_trace@@Base+0x5b8>
    b3cc:	ldp	x19, x30, [sp], #16
    b3d0:	ret
    b3d4:	mov	x4, #0x0                   	// #0
    b3d8:	mov	x3, #0x0                   	// #0
    b3dc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b3e0:	add	x2, x2, #0x788
    b3e4:	mov	w1, #0xff                  	// #255
    b3e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b3ec:	add	x0, x0, #0x748
    b3f0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b3f4:	ldr	x0, [x0]
    b3f8:	ldrb	w0, [x0]
    b3fc:	cmp	w0, #0x0
    b400:	cset	w0, ne  // ne = any
    b404:	ret
    b408:	ldr	x0, [x0]
    b40c:	ldrb	w0, [x0, #1]
    b410:	and	w0, w0, #0x3
    b414:	ret
    b418:	ldr	x0, [x0]
    b41c:	ldrb	w2, [x0, #1]
    b420:	bfxil	w2, w1, #0, #2
    b424:	strb	w2, [x0, #1]
    b428:	ret
    b42c:	ldr	x0, [x0]
    b430:	ldr	x0, [x0]
    b434:	lsr	x0, x0, #10
    b438:	ret
    b43c:	ldr	x0, [x0]
    b440:	ldr	w0, [x0, #8]
    b444:	ret
    b448:	stp	x19, x20, [sp, #-32]!
    b44c:	str	x30, [sp, #16]
    b450:	mov	x19, x0
    b454:	mov	x20, x0
    b458:	mov	x0, #0xffffffffffff        	// #281474976710655
    b45c:	cmp	x19, x0
    b460:	b.ls	b4b8 <__sanitizer_print_stack_trace@@Base+0x69c>  // b.plast
    b464:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b468:	add	x0, x0, #0xee8
    b46c:	mov	w2, #0x1                   	// #1
    b470:	ldxrb	w1, [x0]
    b474:	stxrb	w3, w2, [x0]
    b478:	cbnz	w3, b470 <__sanitizer_print_stack_trace@@Base+0x654>
    b47c:	dmb	ish
    b480:	and	w0, w1, #0xff
    b484:	cbnz	w0, b584 <__sanitizer_print_stack_trace@@Base+0x768>
    b488:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b48c:	add	x0, x0, #0xec0
    b490:	add	x0, x0, #0x80, lsl #12
    b494:	ldr	x1, [x0, #3576]
    b498:	cbz	x1, b6f4 <__sanitizer_print_stack_trace@@Base+0x8d8>
    b49c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b4a0:	add	x0, x0, #0xec0
    b4a4:	add	x0, x0, #0x80, lsl #12
    b4a8:	ldr	x0, [x0, #3528]
    b4ac:	add	x2, x0, x1, lsl #3
    b4b0:	mov	x3, #0x0                   	// #0
    b4b4:	b	b5a0 <__sanitizer_print_stack_trace@@Base+0x784>
    b4b8:	lsr	x1, x19, #20
    b4bc:	lsr	x2, x19, #32
    b4c0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b4c4:	add	x0, x0, #0xec0
    b4c8:	ldr	x0, [x0, x2, lsl #3]
    b4cc:	dmb	ish
    b4d0:	cbz	x0, b464 <__sanitizer_print_stack_trace@@Base+0x648>
    b4d4:	and	x1, x1, #0xfff
    b4d8:	ldrb	w0, [x0, x1]
    b4dc:	cbz	w0, b464 <__sanitizer_print_stack_trace@@Base+0x648>
    b4e0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b4e4:	add	x0, x0, #0xec0
    b4e8:	ldr	x0, [x0, x2, lsl #3]
    b4ec:	dmb	ish
    b4f0:	cbz	x0, b55c <__sanitizer_print_stack_trace@@Base+0x740>
    b4f4:	ldrb	w0, [x0, x1]
    b4f8:	cbz	w0, b55c <__sanitizer_print_stack_trace@@Base+0x740>
    b4fc:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b500:	add	x0, x0, #0xec0
    b504:	ldr	x0, [x0, x2, lsl #3]
    b508:	dmb	ish
    b50c:	cbz	x0, b57c <__sanitizer_print_stack_trace@@Base+0x760>
    b510:	ldrb	w0, [x0, x1]
    b514:	mov	x1, #0x200                 	// #512
    b518:	cmp	x0, #0x35
    b51c:	b.eq	b544 <__sanitizer_print_stack_trace@@Base+0x728>  // b.none
    b520:	cmp	x0, #0x10
    b524:	b.ls	b57c <__sanitizer_print_stack_trace@@Base+0x760>  // b.plast
    b528:	sub	x0, x0, #0x10
    b52c:	lsr	x20, x0, #2
    b530:	mov	x1, #0x100                 	// #256
    b534:	lsl	x20, x1, x20
    b538:	lsr	x1, x20, #2
    b53c:	and	x0, x0, #0x3
    b540:	madd	x1, x1, x0, x20
    b544:	and	x20, x19, #0xfffffffffff00000
    b548:	and	w0, w19, #0xfffff
    b54c:	udiv	w0, w0, w1
    b550:	mul	w0, w0, w1
    b554:	add	x20, x0, x20
    b558:	b	b624 <__sanitizer_print_stack_trace@@Base+0x808>
    b55c:	mov	x4, #0x0                   	// #0
    b560:	mov	x3, #0x0                   	// #0
    b564:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b568:	add	x2, x2, #0x620
    b56c:	mov	w1, #0xc1                  	// #193
    b570:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b574:	add	x0, x0, #0x640
    b578:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b57c:	lsl	x1, x0, #4
    b580:	b	b544 <__sanitizer_print_stack_trace@@Base+0x728>
    b584:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b588:	add	x0, x0, #0xee8
    b58c:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    b590:	b	b488 <__sanitizer_print_stack_trace@@Base+0x66c>
    b594:	add	x0, x0, #0x8
    b598:	cmp	x0, x2
    b59c:	b.eq	b5c0 <__sanitizer_print_stack_trace@@Base+0x7a4>  // b.none
    b5a0:	ldr	x1, [x0]
    b5a4:	cmp	x20, x1
    b5a8:	b.cc	b594 <__sanitizer_print_stack_trace@@Base+0x778>  // b.lo, b.ul, b.last
    b5ac:	sub	x5, x20, x1
    b5b0:	sub	x4, x20, x3
    b5b4:	cmp	x5, x4
    b5b8:	csel	x3, x3, x1, cs  // cs = hs, nlast
    b5bc:	b	b594 <__sanitizer_print_stack_trace@@Base+0x778>
    b5c0:	cbz	x3, b6fc <__sanitizer_print_stack_trace@@Base+0x8e0>
    b5c4:	ldr	x4, [x3]
    b5c8:	cmp	x4, x3
    b5cc:	b.hi	b688 <__sanitizer_print_stack_trace@@Base+0x86c>  // b.pmore
    b5d0:	ldr	x0, [x3, #8]
    b5d4:	add	x4, x4, x0
    b5d8:	cmp	x4, x3
    b5dc:	b.ls	b6a0 <__sanitizer_print_stack_trace@@Base+0x884>  // b.plast
    b5e0:	cmp	x19, x3
    b5e4:	b.cc	b6b8 <__sanitizer_print_stack_trace@@Base+0x89c>  // b.lo, b.ul, b.last
    b5e8:	cmp	x19, x4
    b5ec:	b.cs	b704 <__sanitizer_print_stack_trace@@Base+0x8e8>  // b.hs, b.nlast
    b5f0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b5f4:	add	x0, x0, #0xec0
    b5f8:	add	x0, x0, #0x80, lsl #12
    b5fc:	ldr	x20, [x0, #3520]
    b600:	sub	x0, x20, #0x1
    b604:	add	x20, x3, x20
    b608:	tst	x0, x3
    b60c:	b.ne	b6d4 <__sanitizer_print_stack_trace@@Base+0x8b8>  // b.any
    b610:	dmb	ish
    b614:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b618:	add	x0, x0, #0xec0
    b61c:	add	x0, x0, #0x81, lsl #12
    b620:	strb	wzr, [x0, #40]
    b624:	cmp	x20, #0x0
    b628:	ccmp	x19, x20, #0x0, ne  // ne = any
    b62c:	b.cc	b72c <__sanitizer_print_stack_trace@@Base+0x910>  // b.lo, b.ul, b.last
    b630:	mov	x0, x20
    b634:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    b638:	mov	x1, x0
    b63c:	cbz	x0, b70c <__sanitizer_print_stack_trace@@Base+0x8f0>
    b640:	ldrb	w2, [x0]
    b644:	mov	w0, #0x2                   	// #2
    b648:	cbz	w2, b730 <__sanitizer_print_stack_trace@@Base+0x914>
    b64c:	ldr	x0, [x1]
    b650:	add	x20, x20, x0, lsr #10
    b654:	mov	w0, #0x2                   	// #2
    b658:	cmp	x20, x19
    b65c:	b.ls	b730 <__sanitizer_print_stack_trace@@Base+0x914>  // b.plast
    b660:	ldrb	w2, [x1, #1]
    b664:	and	w2, w2, #0x3
    b668:	mov	w0, #0x1                   	// #1
    b66c:	cmp	w2, #0x3
    b670:	b.eq	b730 <__sanitizer_print_stack_trace@@Base+0x914>  // b.none
    b674:	ldrb	w0, [x1, #1]
    b678:	orr	w0, w0, #0x3
    b67c:	strb	w0, [x1, #1]
    b680:	mov	w0, #0x0                   	// #0
    b684:	b	b730 <__sanitizer_print_stack_trace@@Base+0x914>
    b688:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b68c:	add	x2, x2, #0x7a0
    b690:	mov	w1, #0xc1                  	// #193
    b694:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b698:	add	x0, x0, #0x6e8
    b69c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b6a0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b6a4:	add	x2, x2, #0x7c8
    b6a8:	mov	w1, #0xc2                  	// #194
    b6ac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b6b0:	add	x0, x0, #0x6e8
    b6b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b6b8:	mov	x4, x19
    b6bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b6c0:	add	x2, x2, #0x800
    b6c4:	mov	w1, #0xc3                  	// #195
    b6c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b6cc:	add	x0, x0, #0x6e8
    b6d0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b6d4:	mov	x4, #0x0                   	// #0
    b6d8:	mov	x3, #0x0                   	// #0
    b6dc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b6e0:	add	x2, x2, #0x820
    b6e4:	mov	w1, #0x12b                 	// #299
    b6e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b6ec:	add	x0, x0, #0x6e8
    b6f0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b6f4:	mov	x20, #0x0                   	// #0
    b6f8:	b	b610 <__sanitizer_print_stack_trace@@Base+0x7f4>
    b6fc:	mov	x20, #0x0                   	// #0
    b700:	b	b610 <__sanitizer_print_stack_trace@@Base+0x7f4>
    b704:	mov	x20, #0x0                   	// #0
    b708:	b	b610 <__sanitizer_print_stack_trace@@Base+0x7f4>
    b70c:	mov	x4, #0x0                   	// #0
    b710:	mov	x3, #0x0                   	// #0
    b714:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b718:	add	x2, x2, #0x738
    b71c:	mov	w1, #0x11e                 	// #286
    b720:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    b724:	add	x0, x0, #0x748
    b728:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    b72c:	mov	w0, #0x2                   	// #2
    b730:	ldr	x30, [sp, #16]
    b734:	ldp	x19, x20, [sp], #32
    b738:	ret

000000000000b73c <__sanitizer_get_current_allocated_bytes@@Base>:
    b73c:	str	x30, [sp, #-32]!
    b740:	mov	x2, #0x10                  	// #16
    b744:	mov	w1, #0x0                   	// #0
    b748:	add	x0, sp, x2
    b74c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    b750:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b754:	add	x0, x0, #0xf10
    b758:	mov	w2, #0x1                   	// #1
    b75c:	ldxrb	w1, [x0]
    b760:	stxrb	w3, w2, [x0]
    b764:	cbnz	w3, b75c <__sanitizer_get_current_allocated_bytes@@Base+0x20>
    b768:	dmb	ish
    b76c:	and	w0, w1, #0xff
    b770:	cbnz	w0, b7e4 <__sanitizer_get_current_allocated_bytes@@Base+0xa8>
    b774:	adrp	x2, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b778:	add	x2, x2, #0xef0
    b77c:	mov	x3, x2
    b780:	ldr	x1, [x2, #16]
    b784:	ldr	x0, [sp, #16]
    b788:	add	x1, x1, x0
    b78c:	str	x1, [sp, #16]
    b790:	ldr	x0, [x2, #24]
    b794:	ldr	x4, [sp, #24]
    b798:	add	x0, x0, x4
    b79c:	str	x0, [sp, #24]
    b7a0:	ldr	x2, [x2]
    b7a4:	cmp	x2, x3
    b7a8:	b.ne	b780 <__sanitizer_get_current_allocated_bytes@@Base+0x44>  // b.any
    b7ac:	cmp	x1, #0x0
    b7b0:	csel	x1, x1, xzr, ge  // ge = tcont
    b7b4:	str	x1, [sp, #16]
    b7b8:	cmp	x0, #0x0
    b7bc:	csel	x0, x0, xzr, ge  // ge = tcont
    b7c0:	str	x0, [sp, #24]
    b7c4:	dmb	ish
    b7c8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b7cc:	add	x0, x0, #0xec0
    b7d0:	add	x0, x0, #0x81, lsl #12
    b7d4:	strb	wzr, [x0, #80]
    b7d8:	ldr	x0, [sp, #16]
    b7dc:	ldr	x30, [sp], #32
    b7e0:	ret
    b7e4:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b7e8:	add	x0, x0, #0xf10
    b7ec:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    b7f0:	b	b774 <__sanitizer_get_current_allocated_bytes@@Base+0x38>

000000000000b7f4 <__sanitizer_get_heap_size@@Base>:
    b7f4:	str	x30, [sp, #-32]!
    b7f8:	mov	x2, #0x10                  	// #16
    b7fc:	mov	w1, #0x0                   	// #0
    b800:	add	x0, sp, x2
    b804:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    b808:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b80c:	add	x0, x0, #0xf10
    b810:	mov	w2, #0x1                   	// #1
    b814:	ldxrb	w1, [x0]
    b818:	stxrb	w3, w2, [x0]
    b81c:	cbnz	w3, b814 <__sanitizer_get_heap_size@@Base+0x20>
    b820:	dmb	ish
    b824:	and	w0, w1, #0xff
    b828:	cbnz	w0, b89c <__sanitizer_get_heap_size@@Base+0xa8>
    b82c:	adrp	x2, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b830:	add	x2, x2, #0xef0
    b834:	mov	x3, x2
    b838:	ldr	x1, [x2, #16]
    b83c:	ldr	x0, [sp, #16]
    b840:	add	x1, x1, x0
    b844:	str	x1, [sp, #16]
    b848:	ldr	x0, [x2, #24]
    b84c:	ldr	x4, [sp, #24]
    b850:	add	x0, x0, x4
    b854:	str	x0, [sp, #24]
    b858:	ldr	x2, [x2]
    b85c:	cmp	x2, x3
    b860:	b.ne	b838 <__sanitizer_get_heap_size@@Base+0x44>  // b.any
    b864:	cmp	x1, #0x0
    b868:	csel	x1, x1, xzr, ge  // ge = tcont
    b86c:	str	x1, [sp, #16]
    b870:	cmp	x0, #0x0
    b874:	csel	x0, x0, xzr, ge  // ge = tcont
    b878:	str	x0, [sp, #24]
    b87c:	dmb	ish
    b880:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b884:	add	x0, x0, #0xec0
    b888:	add	x0, x0, #0x81, lsl #12
    b88c:	strb	wzr, [x0, #80]
    b890:	ldr	x0, [sp, #24]
    b894:	ldr	x30, [sp], #32
    b898:	ret
    b89c:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b8a0:	add	x0, x0, #0xf10
    b8a4:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    b8a8:	b	b82c <__sanitizer_get_heap_size@@Base+0x38>

000000000000b8ac <__sanitizer_get_free_bytes@@Base>:
    b8ac:	mov	x0, #0x0                   	// #0
    b8b0:	ret

000000000000b8b4 <__sanitizer_get_unmapped_bytes@@Base>:
    b8b4:	mov	x0, #0x0                   	// #0
    b8b8:	ret

000000000000b8bc <__sanitizer_get_estimated_allocated_size@@Base>:
    b8bc:	ret

000000000000b8c0 <__sanitizer_get_ownership@@Base>:
    b8c0:	str	x30, [sp, #-16]!
    b8c4:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    b8c8:	cmp	x0, #0x0
    b8cc:	cset	w0, ne  // ne = any
    b8d0:	ldr	x30, [sp], #16
    b8d4:	ret

000000000000b8d8 <__sanitizer_get_allocated_size@@Base>:
    b8d8:	str	x30, [sp, #-16]!
    b8dc:	bl	b298 <__sanitizer_print_stack_trace@@Base+0x47c>
    b8e0:	ldr	x30, [sp], #16
    b8e4:	ret
    b8e8:	stp	x19, x20, [sp, #-32]!
    b8ec:	stp	x21, x30, [sp, #16]
    b8f0:	mov	x19, x0
    b8f4:	mov	x0, #0xffffffffffff        	// #281474976710655
    b8f8:	cmp	x19, x0
    b8fc:	b.ls	b980 <__sanitizer_get_allocated_size@@Base+0xa8>  // b.plast
    b900:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b904:	add	x0, x0, #0xec0
    b908:	add	x0, x0, #0x81, lsl #12
    b90c:	ldrb	w3, [x0, #40]
    b910:	and	x3, x3, #0xff
    b914:	cmp	x3, #0x1
    b918:	b.ne	ba4c <__sanitizer_get_allocated_size@@Base+0x174>  // b.any
    b91c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b920:	add	x0, x0, #0xec0
    b924:	add	x0, x0, #0x80, lsl #12
    b928:	ldr	x20, [x0, #3576]
    b92c:	cbz	x20, bc14 <__sanitizer_get_allocated_size@@Base+0x33c>
    b930:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b934:	add	x0, x0, #0xec0
    b938:	add	x0, x0, #0x80, lsl #12
    b93c:	ldrb	w0, [x0, #3584]
    b940:	cbz	w0, ba68 <__sanitizer_get_allocated_size@@Base+0x190>
    b944:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b948:	add	x0, x0, #0xec0
    b94c:	add	x0, x0, #0x80, lsl #12
    b950:	ldr	x2, [x0, #3528]
    b954:	add	x0, x2, x20, lsl #3
    b958:	ldur	x0, [x0, #-8]
    b95c:	ldr	x1, [x0, #8]
    b960:	add	x0, x0, x1
    b964:	ldr	x1, [x2]
    b968:	cmp	x19, x0
    b96c:	ccmp	x19, x1, #0x0, cc  // cc = lo, ul, last
    b970:	b.cc	bc14 <__sanitizer_get_allocated_size@@Base+0x33c>  // b.lo, b.ul, b.last
    b974:	sub	x20, x20, #0x1
    b978:	mov	x1, #0x0                   	// #0
    b97c:	b	bacc <__sanitizer_get_allocated_size@@Base+0x1f4>
    b980:	lsr	x1, x19, #20
    b984:	lsr	x2, x19, #32
    b988:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b98c:	add	x0, x0, #0xec0
    b990:	ldr	x0, [x0, x2, lsl #3]
    b994:	dmb	ish
    b998:	cbz	x0, b900 <__sanitizer_get_allocated_size@@Base+0x28>
    b99c:	and	x1, x1, #0xfff
    b9a0:	ldrb	w0, [x0, x1]
    b9a4:	cbz	w0, b900 <__sanitizer_get_allocated_size@@Base+0x28>
    b9a8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b9ac:	add	x0, x0, #0xec0
    b9b0:	ldr	x0, [x0, x2, lsl #3]
    b9b4:	dmb	ish
    b9b8:	cbz	x0, ba24 <__sanitizer_get_allocated_size@@Base+0x14c>
    b9bc:	ldrb	w0, [x0, x1]
    b9c0:	cbz	w0, ba24 <__sanitizer_get_allocated_size@@Base+0x14c>
    b9c4:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    b9c8:	add	x0, x0, #0xec0
    b9cc:	ldr	x0, [x0, x2, lsl #3]
    b9d0:	dmb	ish
    b9d4:	cbz	x0, ba44 <__sanitizer_get_allocated_size@@Base+0x16c>
    b9d8:	ldrb	w0, [x0, x1]
    b9dc:	mov	x1, #0x200                 	// #512
    b9e0:	cmp	x0, #0x35
    b9e4:	b.eq	ba0c <__sanitizer_get_allocated_size@@Base+0x134>  // b.none
    b9e8:	cmp	x0, #0x10
    b9ec:	b.ls	ba44 <__sanitizer_get_allocated_size@@Base+0x16c>  // b.plast
    b9f0:	sub	x0, x0, #0x10
    b9f4:	lsr	x20, x0, #2
    b9f8:	mov	x1, #0x100                 	// #256
    b9fc:	lsl	x20, x1, x20
    ba00:	lsr	x1, x20, #2
    ba04:	and	x0, x0, #0x3
    ba08:	madd	x1, x1, x0, x20
    ba0c:	and	x20, x19, #0xfffffffffff00000
    ba10:	and	w0, w19, #0xfffff
    ba14:	udiv	w0, w0, w1
    ba18:	mul	w0, w0, w1
    ba1c:	add	x20, x0, x20
    ba20:	b	bb50 <__sanitizer_get_allocated_size@@Base+0x278>
    ba24:	mov	x4, #0x0                   	// #0
    ba28:	mov	x3, #0x0                   	// #0
    ba2c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ba30:	add	x2, x2, #0x620
    ba34:	mov	w1, #0xc1                  	// #193
    ba38:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ba3c:	add	x0, x0, #0x640
    ba40:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ba44:	lsl	x1, x0, #4
    ba48:	b	ba0c <__sanitizer_get_allocated_size@@Base+0x134>
    ba4c:	mov	x4, #0x1                   	// #1
    ba50:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ba54:	add	x2, x2, #0x850
    ba58:	mov	w1, #0x2a                  	// #42
    ba5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ba60:	add	x0, x0, #0x888
    ba64:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ba68:	adrp	x21, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ba6c:	add	x21, x21, #0xec0
    ba70:	add	x21, x21, #0x80, lsl #12
    ba74:	mov	w2, #0x0                   	// #0
    ba78:	mov	x1, x20
    ba7c:	ldr	x0, [x21, #3528]
    ba80:	bl	cd10 <__sanitizer_get_allocated_size@@Base+0x1438>
    ba84:	ldr	x0, [x21, #3576]
    ba88:	cbz	x0, bab0 <__sanitizer_get_allocated_size@@Base+0x1d8>
    ba8c:	mov	x0, #0x0                   	// #0
    ba90:	mov	x1, x21
    ba94:	ldr	x2, [x1, #3528]
    ba98:	ldr	x2, [x2, x0, lsl #3]
    ba9c:	str	x0, [x2, #24]
    baa0:	add	x0, x0, #0x1
    baa4:	ldr	x2, [x1, #3576]
    baa8:	cmp	x2, x0
    baac:	b.hi	ba94 <__sanitizer_get_allocated_size@@Base+0x1bc>  // b.pmore
    bab0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bab4:	add	x0, x0, #0xec0
    bab8:	add	x0, x0, #0x80, lsl #12
    babc:	mov	w1, #0x1                   	// #1
    bac0:	strb	w1, [x0, #3584]
    bac4:	b	b944 <__sanitizer_get_allocated_size@@Base+0x6c>
    bac8:	mov	x1, x0
    bacc:	sub	x0, x20, x1
    bad0:	cmp	x0, #0x1
    bad4:	b.ls	baf4 <__sanitizer_get_allocated_size@@Base+0x21c>  // b.plast
    bad8:	add	x0, x1, x20
    badc:	lsr	x0, x0, #1
    bae0:	ldr	x3, [x2, x0, lsl #3]
    bae4:	cmp	x3, x19
    bae8:	b.ls	bac8 <__sanitizer_get_allocated_size@@Base+0x1f0>  // b.plast
    baec:	sub	x20, x0, #0x1
    baf0:	b	bacc <__sanitizer_get_allocated_size@@Base+0x1f4>
    baf4:	cmp	x1, x20
    baf8:	b.cs	bb14 <__sanitizer_get_allocated_size@@Base+0x23c>  // b.hs, b.nlast
    bafc:	add	x3, x1, #0x1
    bb00:	cmp	x3, x20
    bb04:	b.ne	bb98 <__sanitizer_get_allocated_size@@Base+0x2c0>  // b.any
    bb08:	ldr	x0, [x2, x20, lsl #3]
    bb0c:	cmp	x0, x19
    bb10:	csel	x1, x1, x20, hi  // hi = pmore
    bb14:	ldr	x0, [x2, x1, lsl #3]
    bb18:	ldr	x2, [x0]
    bb1c:	ldr	x1, [x0, #8]
    bb20:	add	x1, x2, x1
    bb24:	cmp	x19, x1
    bb28:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    bb2c:	b.cc	bc14 <__sanitizer_get_allocated_size@@Base+0x33c>  // b.lo, b.ul, b.last
    bb30:	adrp	x1, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bb34:	add	x1, x1, #0xec0
    bb38:	add	x1, x1, #0x80, lsl #12
    bb3c:	ldr	x20, [x1, #3520]
    bb40:	sub	x1, x20, #0x1
    bb44:	add	x20, x0, x20
    bb48:	tst	x0, x1
    bb4c:	b.ne	bbb4 <__sanitizer_get_allocated_size@@Base+0x2dc>  // b.any
    bb50:	mov	x21, x20
    bb54:	cmp	x20, #0x0
    bb58:	ccmp	x19, x20, #0x0, ne  // ne = any
    bb5c:	b.cc	bc04 <__sanitizer_get_allocated_size@@Base+0x32c>  // b.lo, b.ul, b.last
    bb60:	mov	x0, x20
    bb64:	bl	af34 <__sanitizer_print_stack_trace@@Base+0x118>
    bb68:	cbz	x0, bbd4 <__sanitizer_get_allocated_size@@Base+0x2fc>
    bb6c:	ldrb	w1, [x0]
    bb70:	cbz	w1, bc0c <__sanitizer_get_allocated_size@@Base+0x334>
    bb74:	ldr	x0, [x0]
    bb78:	lsr	x0, x0, #10
    bb7c:	add	x1, x0, x20
    bb80:	cmp	x1, x19
    bb84:	b.hi	bc18 <__sanitizer_get_allocated_size@@Base+0x340>  // b.pmore
    bb88:	ccmp	x0, #0x8, #0x0, eq  // eq = none
    bb8c:	b.eq	bbf4 <__sanitizer_get_allocated_size@@Base+0x31c>  // b.none
    bb90:	mov	x21, #0x0                   	// #0
    bb94:	b	bc18 <__sanitizer_get_allocated_size@@Base+0x340>
    bb98:	mov	x4, x20
    bb9c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bba0:	add	x2, x2, #0x8c8
    bba4:	mov	w1, #0xea                  	// #234
    bba8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bbac:	add	x0, x0, #0x6e8
    bbb0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    bbb4:	mov	x4, #0x0                   	// #0
    bbb8:	mov	x3, #0x0                   	// #0
    bbbc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bbc0:	add	x2, x2, #0x820
    bbc4:	mov	w1, #0x12b                 	// #299
    bbc8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bbcc:	add	x0, x0, #0x6e8
    bbd0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    bbd4:	mov	x4, #0x0                   	// #0
    bbd8:	mov	x3, #0x0                   	// #0
    bbdc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bbe0:	add	x2, x2, #0x738
    bbe4:	mov	w1, #0xef                  	// #239
    bbe8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bbec:	add	x0, x0, #0x748
    bbf0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    bbf4:	ldr	x0, [x20]
    bbf8:	cmp	x0, #0x0
    bbfc:	csel	x21, x20, xzr, eq  // eq = none
    bc00:	b	bc18 <__sanitizer_get_allocated_size@@Base+0x340>
    bc04:	mov	x21, #0x0                   	// #0
    bc08:	b	bc18 <__sanitizer_get_allocated_size@@Base+0x340>
    bc0c:	mov	x21, #0x0                   	// #0
    bc10:	b	bc18 <__sanitizer_get_allocated_size@@Base+0x340>
    bc14:	mov	x21, #0x0                   	// #0
    bc18:	mov	x0, x21
    bc1c:	ldp	x21, x30, [sp, #16]
    bc20:	ldp	x19, x20, [sp], #32
    bc24:	ret
    bc28:	stp	x19, x20, [sp, #-96]!
    bc2c:	stp	x21, x22, [sp, #16]
    bc30:	stp	x23, x24, [sp, #32]
    bc34:	stp	x25, x26, [sp, #48]
    bc38:	stp	x27, x28, [sp, #64]
    bc3c:	str	x30, [sp, #80]
    bc40:	mov	x22, x0
    bc44:	mov	x23, x1
    bc48:	mov	x19, #0x0                   	// #0
    bc4c:	adrp	x21, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bc50:	add	x21, x21, #0xec0
    bc54:	mov	x27, #0x100000              	// #1048576
    bc58:	mov	x28, #0x100                 	// #256
    bc5c:	mov	x26, #0x10000000            	// #268435456
    bc60:	b	bca4 <__sanitizer_get_allocated_size@@Base+0x3cc>
    bc64:	lsl	x25, x0, #4
    bc68:	lsl	x20, x19, #20
    bc6c:	add	x24, x25, #0x10
    bc70:	udiv	x24, x27, x24
    bc74:	madd	x24, x24, x25, x20
    bc78:	cmp	x24, x20
    bc7c:	b.ls	bc98 <__sanitizer_get_allocated_size@@Base+0x3c0>  // b.plast
    bc80:	mov	x1, x23
    bc84:	mov	x0, x20
    bc88:	blr	x22
    bc8c:	add	x20, x20, x25
    bc90:	cmp	x20, x24
    bc94:	b.cc	bc80 <__sanitizer_get_allocated_size@@Base+0x3a8>  // b.lo, b.ul, b.last
    bc98:	add	x19, x19, #0x1
    bc9c:	cmp	x19, x26
    bca0:	b.eq	bd00 <__sanitizer_get_allocated_size@@Base+0x428>  // b.none
    bca4:	lsr	x1, x19, #12
    bca8:	ldr	x0, [x21, x1, lsl #3]
    bcac:	dmb	ish
    bcb0:	cbz	x0, bc98 <__sanitizer_get_allocated_size@@Base+0x3c0>
    bcb4:	and	x2, x19, #0xfff
    bcb8:	ldrb	w0, [x0, x2]
    bcbc:	cbz	w0, bc98 <__sanitizer_get_allocated_size@@Base+0x3c0>
    bcc0:	ldr	x0, [x21, x1, lsl #3]
    bcc4:	dmb	ish
    bcc8:	cbz	x0, bc64 <__sanitizer_get_allocated_size@@Base+0x38c>
    bccc:	ldrb	w0, [x0, x2]
    bcd0:	mov	x25, #0x200                 	// #512
    bcd4:	cmp	x0, #0x35
    bcd8:	b.eq	bc68 <__sanitizer_get_allocated_size@@Base+0x390>  // b.none
    bcdc:	cmp	x0, #0x10
    bce0:	b.ls	bc64 <__sanitizer_get_allocated_size@@Base+0x38c>  // b.plast
    bce4:	sub	x0, x0, #0x10
    bce8:	lsr	x25, x0, #2
    bcec:	lsl	x1, x28, x25
    bcf0:	lsr	x25, x1, #2
    bcf4:	and	x0, x0, #0x3
    bcf8:	madd	x25, x25, x0, x1
    bcfc:	b	bc68 <__sanitizer_get_allocated_size@@Base+0x390>
    bd00:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bd04:	add	x0, x0, #0xec0
    bd08:	add	x0, x0, #0x80, lsl #12
    bd0c:	ldrb	w0, [x0, #3584]
    bd10:	cbz	w0, bda8 <__sanitizer_get_allocated_size@@Base+0x4d0>
    bd14:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bd18:	add	x0, x0, #0xec0
    bd1c:	add	x0, x0, #0x80, lsl #12
    bd20:	ldr	x0, [x0, #3576]
    bd24:	cbz	x0, bd8c <__sanitizer_get_allocated_size@@Base+0x4b4>
    bd28:	mov	x19, #0x0                   	// #0
    bd2c:	adrp	x20, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bd30:	add	x20, x20, #0xec0
    bd34:	add	x20, x20, #0x80, lsl #12
    bd38:	ldr	x0, [x20, #3528]
    bd3c:	ldr	x21, [x0, x19, lsl #3]
    bd40:	ldr	x0, [x20, #3520]
    bd44:	sub	x1, x0, #0x1
    bd48:	tst	x1, x21
    bd4c:	b.ne	be08 <__sanitizer_get_allocated_size@@Base+0x530>  // b.any
    bd50:	mov	x1, x23
    bd54:	add	x0, x21, x0
    bd58:	blr	x22
    bd5c:	ldr	x0, [x20, #3528]
    bd60:	ldr	x0, [x0, x19, lsl #3]
    bd64:	mov	x3, x0
    bd68:	cmp	x0, x21
    bd6c:	b.ne	be28 <__sanitizer_get_allocated_size@@Base+0x550>  // b.any
    bd70:	ldr	x3, [x0, #24]
    bd74:	cmp	x3, x19
    bd78:	b.ne	be44 <__sanitizer_get_allocated_size@@Base+0x56c>  // b.any
    bd7c:	add	x19, x19, #0x1
    bd80:	ldr	x0, [x20, #3576]
    bd84:	cmp	x0, x19
    bd88:	b.hi	bd38 <__sanitizer_get_allocated_size@@Base+0x460>  // b.pmore
    bd8c:	ldp	x21, x22, [sp, #16]
    bd90:	ldp	x23, x24, [sp, #32]
    bd94:	ldp	x25, x26, [sp, #48]
    bd98:	ldp	x27, x28, [sp, #64]
    bd9c:	ldr	x30, [sp, #80]
    bda0:	ldp	x19, x20, [sp], #96
    bda4:	ret
    bda8:	adrp	x19, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bdac:	add	x19, x19, #0xec0
    bdb0:	add	x19, x19, #0x80, lsl #12
    bdb4:	mov	w2, #0x0                   	// #0
    bdb8:	ldr	x1, [x19, #3576]
    bdbc:	ldr	x0, [x19, #3528]
    bdc0:	bl	cd10 <__sanitizer_get_allocated_size@@Base+0x1438>
    bdc4:	ldr	x0, [x19, #3576]
    bdc8:	cbz	x0, bdf0 <__sanitizer_get_allocated_size@@Base+0x518>
    bdcc:	mov	x0, #0x0                   	// #0
    bdd0:	mov	x1, x19
    bdd4:	ldr	x2, [x1, #3528]
    bdd8:	ldr	x2, [x2, x0, lsl #3]
    bddc:	str	x0, [x2, #24]
    bde0:	add	x0, x0, #0x1
    bde4:	ldr	x2, [x1, #3576]
    bde8:	cmp	x2, x0
    bdec:	b.hi	bdd4 <__sanitizer_get_allocated_size@@Base+0x4fc>  // b.pmore
    bdf0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bdf4:	add	x0, x0, #0xec0
    bdf8:	add	x0, x0, #0x80, lsl #12
    bdfc:	mov	w1, #0x1                   	// #1
    be00:	strb	w1, [x0, #3584]
    be04:	b	bd14 <__sanitizer_get_allocated_size@@Base+0x43c>
    be08:	mov	x4, #0x0                   	// #0
    be0c:	mov	x3, #0x0                   	// #0
    be10:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    be14:	add	x2, x2, #0x820
    be18:	mov	w1, #0x12b                 	// #299
    be1c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    be20:	add	x0, x0, #0x6e8
    be24:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    be28:	mov	x4, x21
    be2c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    be30:	add	x2, x2, #0x8e0
    be34:	mov	w1, #0x115                 	// #277
    be38:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    be3c:	add	x0, x0, #0x6e8
    be40:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    be44:	mov	x4, x19
    be48:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    be4c:	add	x2, x2, #0x8f8
    be50:	mov	w1, #0x116                 	// #278
    be54:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    be58:	add	x0, x0, #0x6e8
    be5c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    be60:	stp	x19, x20, [sp, #-48]!
    be64:	stp	x21, x22, [sp, #16]
    be68:	str	x30, [sp, #32]
    be6c:	mov	x22, x0
    be70:	mov	x20, x2
    be74:	and	w21, w3, #0xff
    be78:	cbz	x1, bf3c <__sanitizer_get_allocated_size@@Base+0x664>
    be7c:	mov	x19, x1
    be80:	mov	x0, #0x100000000           	// #4294967296
    be84:	cmp	x1, x0
    be88:	b.hi	bf08 <__sanitizer_get_allocated_size@@Base+0x630>  // b.pmore
    be8c:	bl	af0c <__sanitizer_print_stack_trace@@Base+0xf0>
    be90:	mov	x3, x20
    be94:	mov	x2, x19
    be98:	mov	x1, x0
    be9c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bea0:	add	x0, x0, #0xec0
    bea4:	bl	d808 <__sanitizer_get_allocated_size@@Base+0x1f30>
    bea8:	mov	x20, x0
    beac:	cbz	x0, bf44 <__sanitizer_get_allocated_size@@Base+0x66c>
    beb0:	cbz	w21, bec0 <__sanitizer_get_allocated_size@@Base+0x5e8>
    beb4:	mov	x0, #0xffffffffffff        	// #281474976710655
    beb8:	cmp	x20, x0
    bebc:	b.ls	bf60 <__sanitizer_get_allocated_size@@Base+0x688>  // b.plast
    bec0:	mov	x2, x19
    bec4:	mov	x1, x20
    bec8:	mov	x0, x22
    becc:	bl	b0ac <__sanitizer_print_stack_trace@@Base+0x290>
    bed0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    bed4:	ldr	x0, [x0, #3488]
    bed8:	cbz	x0, bee8 <__sanitizer_get_allocated_size@@Base+0x610>
    bedc:	mov	x1, x19
    bee0:	mov	x0, x20
    bee4:	bl	6780 <__sanitizer_malloc_hook@plt>
    bee8:	mov	x1, x19
    beec:	mov	x0, x20
    bef0:	bl	12dc4 <__sancov_default_options@@Base+0x2a40>
    bef4:	mov	x0, x20
    bef8:	ldp	x21, x22, [sp, #16]
    befc:	ldr	x30, [sp, #32]
    bf00:	ldp	x19, x20, [sp], #48
    bf04:	ret
    bf08:	bl	107bc <__sancov_default_options@@Base+0x438>
    bf0c:	and	w0, w0, #0xff
    bf10:	cbz	w0, bf2c <__sanitizer_get_allocated_size@@Base+0x654>
    bf14:	mov	x1, x19
    bf18:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    bf1c:	add	x0, x0, #0x920
    bf20:	bl	1d908 <OnPrint@@Base+0x3d8>
    bf24:	mov	x20, #0x0                   	// #0
    bf28:	b	bef4 <__sanitizer_get_allocated_size@@Base+0x61c>
    bf2c:	mov	x2, x22
    bf30:	mov	x1, #0x100000000           	// #4294967296
    bf34:	mov	x0, x19
    bf38:	bl	124a8 <__sancov_default_options@@Base+0x2124>
    bf3c:	mov	x19, #0x1                   	// #1
    bf40:	b	be8c <__sanitizer_get_allocated_size@@Base+0x5b4>
    bf44:	bl	107ac <__sancov_default_options@@Base+0x428>
    bf48:	bl	107bc <__sancov_default_options@@Base+0x438>
    bf4c:	and	w0, w0, #0xff
    bf50:	cbnz	w0, bef4 <__sanitizer_get_allocated_size@@Base+0x61c>
    bf54:	mov	x1, x22
    bf58:	mov	x0, x19
    bf5c:	bl	124f8 <__sancov_default_options@@Base+0x2174>
    bf60:	lsr	x2, x20, #20
    bf64:	lsr	x1, x20, #32
    bf68:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    bf6c:	add	x0, x0, #0xec0
    bf70:	ldr	x0, [x0, x1, lsl #3]
    bf74:	dmb	ish
    bf78:	cbz	x0, bec0 <__sanitizer_get_allocated_size@@Base+0x5e8>
    bf7c:	and	x2, x2, #0xfff
    bf80:	ldrb	w0, [x0, x2]
    bf84:	cbz	w0, bec0 <__sanitizer_get_allocated_size@@Base+0x5e8>
    bf88:	mov	x2, x19
    bf8c:	mov	w1, #0x0                   	// #0
    bf90:	mov	x0, x20
    bf94:	bl	6870 <memset@plt>
    bf98:	b	bec0 <__sanitizer_get_allocated_size@@Base+0x5e8>
    bf9c:	stp	x19, x20, [sp, #-48]!
    bfa0:	str	x30, [sp, #32]
    bfa4:	mov	x19, x1
    bfa8:	mov	x20, x3
    bfac:	cbz	x1, c004 <__sanitizer_get_allocated_size@@Base+0x72c>
    bfb0:	stp	x21, x22, [sp, #16]
    bfb4:	mov	x22, x0
    bfb8:	mov	x1, x2
    bfbc:	sub	x21, x19, #0x1
    bfc0:	orr	x0, x21, #0x7
    bfc4:	tst	x0, x19
    bfc8:	b.ne	c000 <__sanitizer_get_allocated_size@@Base+0x728>  // b.any
    bfcc:	mov	w3, #0x1                   	// #1
    bfd0:	mov	x2, x19
    bfd4:	mov	x0, x20
    bfd8:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    bfdc:	cbz	x0, c044 <__sanitizer_get_allocated_size@@Base+0x76c>
    bfe0:	tst	x0, x21
    bfe4:	b.ne	c024 <__sanitizer_get_allocated_size@@Base+0x74c>  // b.any
    bfe8:	str	x0, [x22]
    bfec:	mov	w0, #0x0                   	// #0
    bff0:	ldp	x21, x22, [sp, #16]
    bff4:	ldr	x30, [sp, #32]
    bff8:	ldp	x19, x20, [sp], #48
    bffc:	ret
    c000:	ldp	x21, x22, [sp, #16]
    c004:	bl	107bc <__sancov_default_options@@Base+0x438>
    c008:	and	w1, w0, #0xff
    c00c:	mov	w0, #0x16                  	// #22
    c010:	cbnz	w1, bff4 <__sanitizer_get_allocated_size@@Base+0x71c>
    c014:	stp	x21, x22, [sp, #16]
    c018:	mov	x1, x20
    c01c:	mov	x0, x19
    c020:	bl	12458 <__sancov_default_options@@Base+0x20d4>
    c024:	mov	x4, #0x0                   	// #0
    c028:	mov	x3, #0x0                   	// #0
    c02c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c030:	add	x2, x2, #0x958
    c034:	mov	w1, #0x99                  	// #153
    c038:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c03c:	add	x0, x0, #0x748
    c040:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c044:	mov	w0, #0xc                   	// #12
    c048:	ldp	x21, x22, [sp, #16]
    c04c:	b	bff4 <__sanitizer_get_allocated_size@@Base+0x71c>
    c050:	stp	x19, x20, [sp, #-48]!
    c054:	stp	x21, x22, [sp, #16]
    c058:	str	x30, [sp, #32]
    c05c:	mov	x19, x0
    c060:	mov	x20, x1
    c064:	mov	x22, x2
    c068:	cbz	x0, c0ac <__sanitizer_get_allocated_size@@Base+0x7d4>
    c06c:	orr	x0, x0, x1
    c070:	sub	x1, x19, #0x1
    c074:	tst	x0, x1
    c078:	b.ne	c0ac <__sanitizer_get_allocated_size@@Base+0x7d4>  // b.any
    c07c:	mov	w3, #0x1                   	// #1
    c080:	mov	x2, x19
    c084:	mov	x1, x20
    c088:	mov	x0, x22
    c08c:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    c090:	mov	x21, x0
    c094:	cbz	x0, c0d8 <__sanitizer_get_allocated_size@@Base+0x800>
    c098:	mov	x0, x21
    c09c:	ldp	x21, x22, [sp, #16]
    c0a0:	ldr	x30, [sp, #32]
    c0a4:	ldp	x19, x20, [sp], #48
    c0a8:	ret
    c0ac:	bl	6ac0 <__errno_location@plt>
    c0b0:	mov	w1, #0x16                  	// #22
    c0b4:	str	w1, [x0]
    c0b8:	bl	107bc <__sancov_default_options@@Base+0x438>
    c0bc:	and	w0, w0, #0xff
    c0c0:	mov	x21, #0x0                   	// #0
    c0c4:	cbnz	w0, c098 <__sanitizer_get_allocated_size@@Base+0x7c0>
    c0c8:	mov	x2, x22
    c0cc:	mov	x1, x19
    c0d0:	mov	x0, x20
    c0d4:	bl	12408 <__sancov_default_options@@Base+0x2084>
    c0d8:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    c0dc:	b	c098 <__sanitizer_get_allocated_size@@Base+0x7c0>
    c0e0:	stp	x19, x20, [sp, #-32]!
    c0e4:	stp	x21, x30, [sp, #16]
    c0e8:	mov	x19, x0
    c0ec:	mov	x21, x2
    c0f0:	sub	x0, x0, #0x1
    c0f4:	tst	x0, x19
    c0f8:	b.ne	c124 <__sanitizer_get_allocated_size@@Base+0x84c>  // b.any
    c0fc:	mov	w3, #0x1                   	// #1
    c100:	mov	x2, x19
    c104:	mov	x0, x21
    c108:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    c10c:	mov	x20, x0
    c110:	cbz	x0, c14c <__sanitizer_get_allocated_size@@Base+0x874>
    c114:	mov	x0, x20
    c118:	ldp	x21, x30, [sp, #16]
    c11c:	ldp	x19, x20, [sp], #32
    c120:	ret
    c124:	bl	6ac0 <__errno_location@plt>
    c128:	mov	w1, #0x16                  	// #22
    c12c:	str	w1, [x0]
    c130:	bl	107bc <__sancov_default_options@@Base+0x438>
    c134:	and	w0, w0, #0xff
    c138:	mov	x20, #0x0                   	// #0
    c13c:	cbnz	w0, c114 <__sanitizer_get_allocated_size@@Base+0x83c>
    c140:	mov	x1, x21
    c144:	mov	x0, x19
    c148:	bl	123bc <__sancov_default_options@@Base+0x2038>
    c14c:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    c150:	b	c114 <__sanitizer_get_allocated_size@@Base+0x83c>
    c154:	stp	x19, x30, [sp, #-16]!
    c158:	mov	x4, x0
    c15c:	mov	x0, x1
    c160:	mov	w3, #0x1                   	// #1
    c164:	mov	x2, #0x1                   	// #1
    c168:	mov	x1, x4
    c16c:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    c170:	mov	x19, x0
    c174:	cbz	x0, c184 <__sanitizer_get_allocated_size@@Base+0x8ac>
    c178:	mov	x0, x19
    c17c:	ldp	x19, x30, [sp], #16
    c180:	ret
    c184:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    c188:	b	c178 <__sanitizer_get_allocated_size@@Base+0x8a0>
    c18c:	stp	x19, x20, [sp, #-32]!
    c190:	stp	x21, x30, [sp, #16]
    c194:	mov	x20, x0
    c198:	mov	x19, x1
    c19c:	mov	x21, x2
    c1a0:	cbz	x1, c1ac <__sanitizer_get_allocated_size@@Base+0x8d4>
    c1a4:	umulh	x0, x0, x1
    c1a8:	cbnz	x0, c1d0 <__sanitizer_get_allocated_size@@Base+0x8f8>
    c1ac:	mov	w3, #0x1                   	// #1
    c1b0:	mov	x2, #0x1                   	// #1
    c1b4:	mul	x1, x20, x19
    c1b8:	mov	x0, x21
    c1bc:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    c1c0:	cbz	x0, c1dc <__sanitizer_get_allocated_size@@Base+0x904>
    c1c4:	ldp	x21, x30, [sp, #16]
    c1c8:	ldp	x19, x20, [sp], #32
    c1cc:	ret
    c1d0:	bl	107bc <__sancov_default_options@@Base+0x438>
    c1d4:	and	w0, w0, #0xff
    c1d8:	cbz	w0, c1e8 <__sanitizer_get_allocated_size@@Base+0x910>
    c1dc:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    c1e0:	mov	x0, #0x0                   	// #0
    c1e4:	b	c1c4 <__sanitizer_get_allocated_size@@Base+0x8ec>
    c1e8:	mov	x2, x21
    c1ec:	mov	x1, x19
    c1f0:	mov	x0, x20
    c1f4:	bl	122f0 <__sancov_default_options@@Base+0x1f6c>
    c1f8:	stp	x19, x20, [sp, #-32]!
    c1fc:	str	x30, [sp, #16]
    c200:	mov	x20, x0
    c204:	mov	x19, x1
    c208:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c20c:	ldr	x0, [x0, #4000]
    c210:	ldr	x0, [x0]
    c214:	cbz	x0, c24c <__sanitizer_get_allocated_size@@Base+0x974>
    c218:	mov	w3, #0x1                   	// #1
    c21c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c220:	ldr	x0, [x0, #4000]
    c224:	ldr	x2, [x0]
    c228:	mov	x1, x20
    c22c:	mov	x0, x19
    c230:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    c234:	mov	x19, x0
    c238:	cbz	x0, c260 <__sanitizer_get_allocated_size@@Base+0x988>
    c23c:	mov	x0, x19
    c240:	ldr	x30, [sp, #16]
    c244:	ldp	x19, x20, [sp], #32
    c248:	ret
    c24c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    c250:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c254:	ldr	x1, [x1, #4000]
    c258:	str	x0, [x1]
    c25c:	b	c218 <__sanitizer_get_allocated_size@@Base+0x940>
    c260:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    c264:	b	c23c <__sanitizer_get_allocated_size@@Base+0x964>
    c268:	stp	x19, x20, [sp, #-32]!
    c26c:	stp	x21, x30, [sp, #16]
    c270:	mov	x19, x0
    c274:	mov	x21, x1
    c278:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c27c:	ldr	x0, [x0, #4000]
    c280:	ldr	x0, [x0]
    c284:	cbz	x0, c2e0 <__sanitizer_get_allocated_size@@Base+0xa08>
    c288:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c28c:	ldr	x0, [x0, #4000]
    c290:	ldr	x2, [x0]
    c294:	sub	x3, x2, #0x1
    c298:	tst	x2, x3
    c29c:	b.ne	c2f4 <__sanitizer_get_allocated_size@@Base+0xa1c>  // b.any
    c2a0:	add	x3, x19, x3
    c2a4:	neg	x4, x2
    c2a8:	and	x4, x3, x4
    c2ac:	cmp	x19, x4
    c2b0:	b.hi	c304 <__sanitizer_get_allocated_size@@Base+0xa2c>  // b.pmore
    c2b4:	cmp	x19, #0x0
    c2b8:	mov	w3, #0x1                   	// #1
    c2bc:	csel	x1, x4, x2, ne  // ne = any
    c2c0:	mov	x0, x21
    c2c4:	bl	be60 <__sanitizer_get_allocated_size@@Base+0x588>
    c2c8:	mov	x20, x0
    c2cc:	cbz	x0, c32c <__sanitizer_get_allocated_size@@Base+0xa54>
    c2d0:	mov	x0, x20
    c2d4:	ldp	x21, x30, [sp, #16]
    c2d8:	ldp	x19, x20, [sp], #32
    c2dc:	ret
    c2e0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
    c2e4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c2e8:	ldr	x1, [x1, #4000]
    c2ec:	str	x0, [x1]
    c2f0:	b	c288 <__sanitizer_get_allocated_size@@Base+0x9b0>
    c2f4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    c2f8:	add	x0, x0, #0x638
    c2fc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    c300:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    c304:	bl	6ac0 <__errno_location@plt>
    c308:	mov	w1, #0xc                   	// #12
    c30c:	str	w1, [x0]
    c310:	bl	107bc <__sancov_default_options@@Base+0x438>
    c314:	and	w0, w0, #0xff
    c318:	mov	x20, #0x0                   	// #0
    c31c:	cbnz	w0, c2d0 <__sanitizer_get_allocated_size@@Base+0x9f8>
    c320:	mov	x1, x21
    c324:	mov	x0, x19
    c328:	bl	12340 <__sancov_default_options@@Base+0x1fbc>
    c32c:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    c330:	b	c2d0 <__sanitizer_get_allocated_size@@Base+0x9f8>
    c334:	stp	x19, x20, [sp, #-48]!
    c338:	stp	x21, x22, [sp, #16]
    c33c:	stp	x23, x30, [sp, #32]
    c340:	bl	af0c <__sanitizer_print_stack_trace@@Base+0xf0>
    c344:	mov	x21, x0
    c348:	add	x20, x0, #0x400
    c34c:	mov	x19, #0x1                   	// #1
    c350:	adrp	x22, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c354:	add	x22, x22, #0xec0
    c358:	b	c388 <__sanitizer_get_allocated_size@@Base+0xab0>
    c35c:	mov	x3, x19
    c360:	mov	x2, x22
    c364:	mov	x1, x23
    c368:	mov	x0, x21
    c36c:	bl	dcf0 <__sancov_lowest_stack@@Base+0x4c0>
    c370:	ldr	x0, [x23]
    c374:	cbnz	x0, c35c <__sanitizer_get_allocated_size@@Base+0xa84>
    c378:	add	x19, x19, #0x1
    c37c:	add	x20, x20, #0x400
    c380:	cmp	x19, #0x36
    c384:	b.eq	c398 <__sanitizer_get_allocated_size@@Base+0xac0>  // b.none
    c388:	mov	x23, x20
    c38c:	ldr	x0, [x20]
    c390:	cbnz	x0, c35c <__sanitizer_get_allocated_size@@Base+0xa84>
    c394:	b	c378 <__sanitizer_get_allocated_size@@Base+0xaa0>
    c398:	ldp	x21, x22, [sp, #16]
    c39c:	ldp	x23, x30, [sp, #32]
    c3a0:	ldp	x19, x20, [sp], #48
    c3a4:	ret
    c3a8:	stp	x19, x20, [sp, #-48]!
    c3ac:	str	x30, [sp, #32]
    c3b0:	mov	x19, x0
    c3b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c3b8:	ldr	x0, [x0, #3856]
    c3bc:	cbz	x0, c3c8 <__sanitizer_get_allocated_size@@Base+0xaf0>
    c3c0:	mov	x0, x19
    c3c4:	bl	6be0 <__sanitizer_free_hook@plt>
    c3c8:	mov	x0, x19
    c3cc:	bl	12e18 <__sancov_default_options@@Base+0x2a94>
    c3d0:	mov	x0, x19
    c3d4:	bl	b134 <__sanitizer_print_stack_trace@@Base+0x318>
    c3d8:	bl	af0c <__sanitizer_print_stack_trace@@Base+0xf0>
    c3dc:	mov	x20, x0
    c3e0:	cbz	x19, c4ec <__sanitizer_get_allocated_size@@Base+0xc14>
    c3e4:	mov	x0, #0xffffffffffff        	// #281474976710655
    c3e8:	cmp	x19, x0
    c3ec:	b.ls	c4f8 <__sanitizer_get_allocated_size@@Base+0xc20>  // b.plast
    c3f0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c3f4:	add	x0, x0, #0xec0
    c3f8:	add	x0, x0, #0x80, lsl #12
    c3fc:	ldr	x0, [x0, #3520]
    c400:	sub	x1, x0, #0x1
    c404:	tst	x19, x1
    c408:	b.ne	c6a8 <__sanitizer_get_allocated_size@@Base+0xdd0>  // b.any
    c40c:	sub	x19, x19, x0
    c410:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    c414:	add	x0, x0, #0xee8
    c418:	mov	w2, #0x1                   	// #1
    c41c:	ldxrb	w1, [x0]
    c420:	stxrb	w3, w2, [x0]
    c424:	cbnz	w3, c41c <__sanitizer_get_allocated_size@@Base+0xb44>
    c428:	dmb	ish
    c42c:	and	w0, w1, #0xff
    c430:	cbnz	w0, c6cc <__sanitizer_get_allocated_size@@Base+0xdf4>
    c434:	ldr	x2, [x19, #24]
    c438:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c43c:	add	x0, x0, #0xec0
    c440:	add	x0, x0, #0x80, lsl #12
    c444:	ldr	x5, [x0, #3528]
    c448:	ldr	x3, [x5, x2, lsl #3]
    c44c:	cmp	x3, x19
    c450:	b.ne	c6dc <__sanitizer_get_allocated_size@@Base+0xe04>  // b.any
    c454:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c458:	add	x0, x0, #0xec0
    c45c:	add	x0, x0, #0x80, lsl #12
    c460:	ldr	x4, [x0, #3576]
    c464:	cmp	x2, x4
    c468:	b.cs	c6fc <__sanitizer_get_allocated_size@@Base+0xe24>  // b.hs, b.nlast
    c46c:	sub	x4, x4, #0x1
    c470:	adrp	x1, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c474:	add	x1, x1, #0xec0
    c478:	add	x0, x1, #0x80, lsl #12
    c47c:	str	x4, [x0, #3576]
    c480:	ldr	x3, [x5, x4, lsl #3]
    c484:	str	x3, [x5, x2, lsl #3]
    c488:	ldr	x3, [x0, #3528]
    c48c:	ldr	x3, [x3, x2, lsl #3]
    c490:	str	x2, [x3, #24]
    c494:	strb	wzr, [x0, #3584]
    c498:	ldr	x2, [x0, #3600]
    c49c:	add	x2, x2, #0x1
    c4a0:	str	x2, [x0, #3600]
    c4a4:	ldr	x2, [x0, #3608]
    c4a8:	ldr	x3, [x19, #8]
    c4ac:	sub	x2, x2, x3
    c4b0:	str	x2, [x0, #3608]
    c4b4:	ldr	x2, [x0, #4160]
    c4b8:	ldr	x3, [x19, #8]
    c4bc:	sub	x2, x2, x3
    c4c0:	str	x2, [x0, #4160]
    c4c4:	ldr	x2, [x0, #4168]
    c4c8:	ldr	x3, [x19, #8]
    c4cc:	sub	x2, x2, x3
    c4d0:	str	x2, [x0, #4168]
    c4d4:	dmb	ish
    c4d8:	add	x1, x1, #0x81, lsl #12
    c4dc:	strb	wzr, [x1, #40]
    c4e0:	ldr	x1, [x19, #8]
    c4e4:	ldr	x0, [x19]
    c4e8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    c4ec:	ldr	x30, [sp, #32]
    c4f0:	ldp	x19, x20, [sp], #48
    c4f4:	ret
    c4f8:	lsr	x1, x19, #20
    c4fc:	lsr	x2, x19, #32
    c500:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c504:	add	x0, x0, #0xec0
    c508:	ldr	x0, [x0, x2, lsl #3]
    c50c:	dmb	ish
    c510:	cbz	x0, c3f0 <__sanitizer_get_allocated_size@@Base+0xb18>
    c514:	and	x1, x1, #0xfff
    c518:	ldrb	w0, [x0, x1]
    c51c:	cbz	w0, c3f0 <__sanitizer_get_allocated_size@@Base+0xb18>
    c520:	stp	x21, x22, [sp, #16]
    c524:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c528:	add	x0, x0, #0xec0
    c52c:	ldr	x0, [x0, x2, lsl #3]
    c530:	dmb	ish
    c534:	cbz	x0, c5a4 <__sanitizer_get_allocated_size@@Base+0xccc>
    c538:	ldrb	w21, [x0, x1]
    c53c:	cbz	x21, c5a4 <__sanitizer_get_allocated_size@@Base+0xccc>
    c540:	cmp	x21, #0x35
    c544:	b.hi	c5c4 <__sanitizer_get_allocated_size@@Base+0xcec>  // b.pmore
    c548:	lsl	x22, x21, #10
    c54c:	add	x1, x20, x22
    c550:	ldr	x6, [x1, #8]
    c554:	cbz	x6, c5e4 <__sanitizer_get_allocated_size@@Base+0xd0c>
    c558:	ldr	x2, [x20, x22]
    c55c:	ldr	x0, [x1, #8]
    c560:	cmp	x2, x0
    c564:	b.eq	c690 <__sanitizer_get_allocated_size@@Base+0xdb8>  // b.none
    c568:	ldr	x0, [x20, x22]
    c56c:	add	x1, x0, #0x1
    c570:	str	x1, [x20, x22]
    c574:	add	x0, x0, x21, lsl #7
    c578:	add	x0, x0, #0x4
    c57c:	str	x19, [x20, x0, lsl #3]
    c580:	add	x2, x20, #0xd, lsl #12
    c584:	add	x2, x2, #0x800
    c588:	ldr	x1, [x2, #16]
    c58c:	add	x0, x20, x21, lsl #10
    c590:	ldr	x0, [x0, #16]
    c594:	sub	x0, x1, x0
    c598:	str	x0, [x2, #16]
    c59c:	ldp	x21, x22, [sp, #16]
    c5a0:	b	c4ec <__sanitizer_get_allocated_size@@Base+0xc14>
    c5a4:	mov	x4, #0x0                   	// #0
    c5a8:	mov	x3, #0x0                   	// #0
    c5ac:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c5b0:	add	x2, x2, #0xbf8
    c5b4:	mov	w1, #0xae                  	// #174
    c5b8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c5bc:	add	x0, x0, #0xaf0
    c5c0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c5c4:	mov	x4, #0x36                  	// #54
    c5c8:	mov	x3, x21
    c5cc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c5d0:	add	x2, x2, #0xad0
    c5d4:	mov	w1, #0xaf                  	// #175
    c5d8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c5dc:	add	x0, x0, #0xaf0
    c5e0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c5e4:	add	x3, x20, #0x408
    c5e8:	mov	x0, #0x1                   	// #1
    c5ec:	mov	x7, #0x40                  	// #64
    c5f0:	mov	x14, #0x200                 	// #512
    c5f4:	mov	x13, x6
    c5f8:	mov	x8, #0x14                  	// #20
    c5fc:	mov	w11, #0x4000                	// #16384
    c600:	mov	x10, x0
    c604:	mov	x9, #0x3e                  	// #62
    c608:	mov	x12, #0x100                 	// #256
    c60c:	b	c678 <__sanitizer_get_allocated_size@@Base+0xda0>
    c610:	sub	x5, x0, #0x10
    c614:	lsr	x2, x5, #2
    c618:	lsl	x2, x12, x2
    c61c:	lsr	x4, x2, #2
    c620:	and	x5, x5, #0x3
    c624:	madd	x4, x4, x5, x2
    c628:	cbz	x4, c71c <__sanitizer_get_allocated_size@@Base+0xe44>
    c62c:	udiv	w5, w11, w4
    c630:	mov	w2, w5
    c634:	cmp	w5, #0x40
    c638:	csel	x2, x2, x7, ls  // ls = plast
    c63c:	cmp	x2, #0x0
    c640:	csel	x2, x2, x10, ne  // ne = any
    c644:	cmp	x2, #0x3e
    c648:	csel	x2, x2, x9, ls  // ls = plast
    c64c:	lsl	x5, x2, #1
    c650:	str	x5, [x3]
    c654:	str	x4, [x3, #8]
    c658:	add	x2, x2, #0x2
    c65c:	cmp	x4, x2, lsl #3
    c660:	csel	x2, x6, x8, cs  // cs = hs, nlast
    c664:	str	x2, [x3, #16]
    c668:	add	x0, x0, #0x1
    c66c:	add	x3, x3, #0x400
    c670:	cmp	x0, #0x36
    c674:	b.eq	c558 <__sanitizer_get_allocated_size@@Base+0xc80>  // b.none
    c678:	cmp	x0, #0x35
    c67c:	b.eq	c734 <__sanitizer_get_allocated_size@@Base+0xe5c>  // b.none
    c680:	lsl	x4, x0, #4
    c684:	cmp	x0, #0x10
    c688:	b.hi	c610 <__sanitizer_get_allocated_size@@Base+0xd38>  // b.pmore
    c68c:	b	c628 <__sanitizer_get_allocated_size@@Base+0xd50>
    c690:	mov	x3, x21
    c694:	adrp	x2, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c698:	add	x2, x2, #0xec0
    c69c:	mov	x0, x20
    c6a0:	bl	dcf0 <__sancov_lowest_stack@@Base+0x4c0>
    c6a4:	b	c568 <__sanitizer_get_allocated_size@@Base+0xc90>
    c6a8:	stp	x21, x22, [sp, #16]
    c6ac:	mov	x4, #0x0                   	// #0
    c6b0:	mov	x3, #0x0                   	// #0
    c6b4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c6b8:	add	x2, x2, #0x988
    c6bc:	mov	w1, #0x123                 	// #291
    c6c0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c6c4:	add	x0, x0, #0x6e8
    c6c8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c6cc:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    c6d0:	add	x0, x0, #0xee8
    c6d4:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    c6d8:	b	c434 <__sanitizer_get_allocated_size@@Base+0xb5c>
    c6dc:	stp	x21, x22, [sp, #16]
    c6e0:	mov	x4, x19
    c6e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c6e8:	add	x2, x2, #0x9b0
    c6ec:	mov	w1, #0x88                  	// #136
    c6f0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c6f4:	add	x0, x0, #0x6e8
    c6f8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c6fc:	stp	x21, x22, [sp, #16]
    c700:	mov	x3, x2
    c704:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c708:	add	x2, x2, #0x9d0
    c70c:	mov	w1, #0x89                  	// #137
    c710:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c714:	add	x0, x0, #0x6e8
    c718:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    c71c:	str	xzr, [x3]
    c720:	str	xzr, [x3, #8]
    c724:	str	x8, [x3, #16]
    c728:	add	x0, x0, #0x1
    c72c:	add	x3, x3, #0x400
    c730:	b	c678 <__sanitizer_get_allocated_size@@Base+0xda0>
    c734:	str	x7, [x3]
    c738:	str	x14, [x3, #8]
    c73c:	mov	x2, x13
    c740:	b	c664 <__sanitizer_get_allocated_size@@Base+0xd8c>
    c744:	str	x30, [sp, #-16]!
    c748:	bl	c3a8 <__sanitizer_get_allocated_size@@Base+0xad0>
    c74c:	ldr	x30, [sp], #16
    c750:	ret
    c754:	stp	x19, x20, [sp, #-64]!
    c758:	stp	x21, x22, [sp, #16]
    c75c:	stp	x23, x24, [sp, #32]
    c760:	str	x30, [sp, #56]
    c764:	mov	x22, x0
    c768:	mov	x19, x1
    c76c:	mov	x20, x2
    c770:	mov	x24, x3
    c774:	mov	x0, x1
    c778:	bl	b134 <__sanitizer_print_stack_trace@@Base+0x318>
    c77c:	mov	x0, #0x100000000           	// #4294967296
    c780:	cmp	x20, x0
    c784:	b.ls	c7ec <__sanitizer_get_allocated_size@@Base+0xf14>  // b.plast
    c788:	bl	af0c <__sanitizer_print_stack_trace@@Base+0xf0>
    c78c:	mov	x2, x19
    c790:	mov	x1, x0
    c794:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c798:	add	x0, x0, #0xec0
    c79c:	bl	de5c <__sancov_lowest_stack@@Base+0x62c>
    c7a0:	bl	107bc <__sancov_default_options@@Base+0x438>
    c7a4:	and	w0, w0, #0xff
    c7a8:	cbz	w0, c7d8 <__sanitizer_get_allocated_size@@Base+0xf00>
    c7ac:	mov	x1, x20
    c7b0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    c7b4:	add	x0, x0, #0x920
    c7b8:	bl	1d908 <OnPrint@@Base+0x3d8>
    c7bc:	mov	x21, #0x0                   	// #0
    c7c0:	mov	x0, x21
    c7c4:	ldp	x21, x22, [sp, #16]
    c7c8:	ldp	x23, x24, [sp, #32]
    c7cc:	ldr	x30, [sp, #56]
    c7d0:	ldp	x19, x20, [sp], #64
    c7d4:	ret
    c7d8:	str	x25, [sp, #48]
    c7dc:	mov	x2, x22
    c7e0:	mov	x1, #0x100000000           	// #4294967296
    c7e4:	mov	x0, x20
    c7e8:	bl	124a8 <__sancov_default_options@@Base+0x2124>
    c7ec:	bl	af0c <__sanitizer_print_stack_trace@@Base+0xf0>
    c7f0:	mov	x23, x0
    c7f4:	cbz	x19, c864 <__sanitizer_get_allocated_size@@Base+0xf8c>
    c7f8:	cbz	x20, c884 <__sanitizer_get_allocated_size@@Base+0xfac>
    c7fc:	str	x25, [sp, #48]
    c800:	mov	x21, x19
    c804:	mov	x0, #0xffffffffffff        	// #281474976710655
    c808:	cmp	x19, x0
    c80c:	b.ls	c8a0 <__sanitizer_get_allocated_size@@Base+0xfc8>  // b.plast
    c810:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    c814:	add	x0, x0, #0xee8
    c818:	mov	w2, #0x1                   	// #1
    c81c:	ldxrb	w1, [x0]
    c820:	stxrb	w3, w2, [x0]
    c824:	cbnz	w3, c81c <__sanitizer_get_allocated_size@@Base+0xf44>
    c828:	dmb	ish
    c82c:	and	w0, w1, #0xff
    c830:	cbnz	w0, c958 <__sanitizer_get_allocated_size@@Base+0x1080>
    c834:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c838:	add	x0, x0, #0xec0
    c83c:	add	x0, x0, #0x80, lsl #12
    c840:	ldr	x5, [x0, #3576]
    c844:	cbz	x5, cb14 <__sanitizer_get_allocated_size@@Base+0x123c>
    c848:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c84c:	add	x0, x0, #0xec0
    c850:	add	x0, x0, #0x80, lsl #12
    c854:	ldr	x2, [x0, #3528]
    c858:	add	x5, x2, x5, lsl #3
    c85c:	mov	x1, #0x0                   	// #0
    c860:	b	c974 <__sanitizer_get_allocated_size@@Base+0x109c>
    c864:	mov	x3, x24
    c868:	mov	x2, x20
    c86c:	mov	x1, x0
    c870:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c874:	add	x0, x0, #0xec0
    c878:	bl	d808 <__sanitizer_get_allocated_size@@Base+0x1f30>
    c87c:	mov	x21, x0
    c880:	b	ca88 <__sanitizer_get_allocated_size@@Base+0x11b0>
    c884:	mov	x2, x19
    c888:	mov	x1, x0
    c88c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c890:	add	x0, x0, #0xec0
    c894:	bl	de5c <__sancov_lowest_stack@@Base+0x62c>
    c898:	mov	x21, #0x0                   	// #0
    c89c:	b	ca88 <__sanitizer_get_allocated_size@@Base+0x11b0>
    c8a0:	lsr	x2, x19, #20
    c8a4:	lsr	x1, x19, #32
    c8a8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c8ac:	add	x0, x0, #0xec0
    c8b0:	ldr	x0, [x0, x1, lsl #3]
    c8b4:	dmb	ish
    c8b8:	cbz	x0, c810 <__sanitizer_get_allocated_size@@Base+0xf38>
    c8bc:	and	x2, x2, #0xfff
    c8c0:	ldrb	w0, [x0, x2]
    c8c4:	cbz	w0, c810 <__sanitizer_get_allocated_size@@Base+0xf38>
    c8c8:	lsr	x1, x19, #20
    c8cc:	lsr	x2, x19, #32
    c8d0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c8d4:	add	x0, x0, #0xec0
    c8d8:	ldr	x0, [x0, x2, lsl #3]
    c8dc:	dmb	ish
    c8e0:	cbz	x0, ca08 <__sanitizer_get_allocated_size@@Base+0x1130>
    c8e4:	and	x1, x1, #0xfff
    c8e8:	ldrb	w0, [x0, x1]
    c8ec:	cbz	w0, ca08 <__sanitizer_get_allocated_size@@Base+0x1130>
    c8f0:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c8f4:	add	x0, x0, #0xec0
    c8f8:	ldr	x0, [x0, x2, lsl #3]
    c8fc:	dmb	ish
    c900:	cbz	x0, cb4c <__sanitizer_get_allocated_size@@Base+0x1274>
    c904:	ldrb	w0, [x0, x1]
    c908:	cbz	w0, cb4c <__sanitizer_get_allocated_size@@Base+0x1274>
    c90c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c910:	add	x0, x0, #0xec0
    c914:	ldr	x0, [x0, x2, lsl #3]
    c918:	dmb	ish
    c91c:	cbz	x0, cb6c <__sanitizer_get_allocated_size@@Base+0x1294>
    c920:	ldrb	w0, [x0, x1]
    c924:	mov	x25, #0x200                 	// #512
    c928:	cmp	x0, #0x35
    c92c:	b.eq	ca40 <__sanitizer_get_allocated_size@@Base+0x1168>  // b.none
    c930:	cmp	x0, #0x10
    c934:	b.ls	cb6c <__sanitizer_get_allocated_size@@Base+0x1294>  // b.plast
    c938:	sub	x0, x0, #0x10
    c93c:	lsr	x25, x0, #2
    c940:	mov	x1, #0x100                 	// #256
    c944:	lsl	x1, x1, x25
    c948:	lsr	x25, x1, #2
    c94c:	and	x0, x0, #0x3
    c950:	madd	x25, x25, x0, x1
    c954:	b	ca40 <__sanitizer_get_allocated_size@@Base+0x1168>
    c958:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    c95c:	add	x0, x0, #0xee8
    c960:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    c964:	b	c834 <__sanitizer_get_allocated_size@@Base+0xf5c>
    c968:	add	x2, x2, #0x8
    c96c:	cmp	x5, x2
    c970:	b.eq	c994 <__sanitizer_get_allocated_size@@Base+0x10bc>  // b.none
    c974:	ldr	x4, [x2]
    c978:	cmp	x21, x4
    c97c:	b.cc	c968 <__sanitizer_get_allocated_size@@Base+0x1090>  // b.lo, b.ul, b.last
    c980:	sub	x3, x21, x4
    c984:	sub	x0, x21, x1
    c988:	cmp	x3, x0
    c98c:	csel	x1, x1, x4, cs  // cs = hs, nlast
    c990:	b	c968 <__sanitizer_get_allocated_size@@Base+0x1090>
    c994:	cbz	x1, cb1c <__sanitizer_get_allocated_size@@Base+0x1244>
    c998:	ldr	x4, [x1]
    c99c:	cmp	x4, x1
    c9a0:	b.hi	ca9c <__sanitizer_get_allocated_size@@Base+0x11c4>  // b.pmore
    c9a4:	ldr	x0, [x1, #8]
    c9a8:	add	x4, x4, x0
    c9ac:	cmp	x4, x1
    c9b0:	b.ls	cab8 <__sanitizer_get_allocated_size@@Base+0x11e0>  // b.plast
    c9b4:	cmp	x19, x1
    c9b8:	b.cc	cad4 <__sanitizer_get_allocated_size@@Base+0x11fc>  // b.lo, b.ul, b.last
    c9bc:	cmp	x19, x4
    c9c0:	b.cs	cb24 <__sanitizer_get_allocated_size@@Base+0x124c>  // b.hs, b.nlast
    c9c4:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c9c8:	add	x0, x0, #0xec0
    c9cc:	add	x0, x0, #0x80, lsl #12
    c9d0:	ldr	x2, [x0, #3520]
    c9d4:	sub	x0, x2, #0x1
    c9d8:	add	x2, x1, x2
    c9dc:	tst	x0, x1
    c9e0:	b.ne	caf4 <__sanitizer_get_allocated_size@@Base+0x121c>  // b.any
    c9e4:	dmb	ish
    c9e8:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    c9ec:	add	x0, x0, #0xec0
    c9f0:	add	x0, x0, #0x81, lsl #12
    c9f4:	strb	wzr, [x0, #40]
    c9f8:	cbz	x2, cb2c <__sanitizer_get_allocated_size@@Base+0x1254>
    c9fc:	mov	x0, #0xffffffffffff        	// #281474976710655
    ca00:	cmp	x19, x0
    ca04:	b.ls	c8c8 <__sanitizer_get_allocated_size@@Base+0xff0>  // b.plast
    ca08:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ca0c:	add	x0, x0, #0xec0
    ca10:	add	x0, x0, #0x80, lsl #12
    ca14:	ldr	x0, [x0, #3520]
    ca18:	sub	x1, x0, #0x1
    ca1c:	tst	x19, x1
    ca20:	b.ne	cb74 <__sanitizer_get_allocated_size@@Base+0x129c>  // b.any
    ca24:	sub	x2, x19, x0
    ca28:	ldr	x25, [x2, #16]
    ca2c:	add	x25, x25, x1
    ca30:	neg	x2, x0
    ca34:	and	x25, x25, x2
    ca38:	tst	x0, x1
    ca3c:	b.ne	cb94 <__sanitizer_get_allocated_size@@Base+0x12bc>  // b.any
    ca40:	mov	x3, x24
    ca44:	mov	x2, x20
    ca48:	mov	x1, x23
    ca4c:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ca50:	add	x0, x0, #0xec0
    ca54:	bl	d808 <__sanitizer_get_allocated_size@@Base+0x1f30>
    ca58:	mov	x21, x0
    ca5c:	cbz	x0, ca70 <__sanitizer_get_allocated_size@@Base+0x1198>
    ca60:	cmp	x20, x25
    ca64:	csel	x2, x20, x25, ls  // ls = plast
    ca68:	mov	x1, x19
    ca6c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
    ca70:	mov	x2, x19
    ca74:	mov	x1, x23
    ca78:	adrp	x0, 63000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ca7c:	add	x0, x0, #0xec0
    ca80:	bl	de5c <__sancov_lowest_stack@@Base+0x62c>
    ca84:	ldr	x25, [sp, #48]
    ca88:	mov	x2, x20
    ca8c:	mov	x1, x21
    ca90:	mov	x0, x22
    ca94:	bl	b0ac <__sanitizer_print_stack_trace@@Base+0x290>
    ca98:	b	c7c0 <__sanitizer_get_allocated_size@@Base+0xee8>
    ca9c:	mov	x3, x1
    caa0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    caa4:	add	x2, x2, #0x7a0
    caa8:	mov	w1, #0xc1                  	// #193
    caac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cab0:	add	x0, x0, #0x6e8
    cab4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cab8:	mov	x3, x1
    cabc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cac0:	add	x2, x2, #0x7c8
    cac4:	mov	w1, #0xc2                  	// #194
    cac8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cacc:	add	x0, x0, #0x6e8
    cad0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cad4:	mov	x4, x19
    cad8:	mov	x3, x1
    cadc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cae0:	add	x2, x2, #0x800
    cae4:	mov	w1, #0xc3                  	// #195
    cae8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    caec:	add	x0, x0, #0x6e8
    caf0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    caf4:	mov	x4, #0x0                   	// #0
    caf8:	mov	x3, #0x0                   	// #0
    cafc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb00:	add	x2, x2, #0x820
    cb04:	mov	w1, #0x12b                 	// #299
    cb08:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb0c:	add	x0, x0, #0x6e8
    cb10:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cb14:	mov	x2, #0x0                   	// #0
    cb18:	b	c9e4 <__sanitizer_get_allocated_size@@Base+0x110c>
    cb1c:	mov	x2, #0x0                   	// #0
    cb20:	b	c9e4 <__sanitizer_get_allocated_size@@Base+0x110c>
    cb24:	mov	x2, #0x0                   	// #0
    cb28:	b	c9e4 <__sanitizer_get_allocated_size@@Base+0x110c>
    cb2c:	mov	x4, #0x0                   	// #0
    cb30:	mov	x3, #0x0                   	// #0
    cb34:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb38:	add	x2, x2, #0x620
    cb3c:	mov	w1, #0x62                  	// #98
    cb40:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb44:	add	x0, x0, #0xdc0
    cb48:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cb4c:	mov	x4, #0x0                   	// #0
    cb50:	mov	x3, #0x0                   	// #0
    cb54:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb58:	add	x2, x2, #0x620
    cb5c:	mov	w1, #0xcc                  	// #204
    cb60:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb64:	add	x0, x0, #0x640
    cb68:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cb6c:	lsl	x25, x0, #4
    cb70:	b	ca40 <__sanitizer_get_allocated_size@@Base+0x1168>
    cb74:	mov	x4, #0x0                   	// #0
    cb78:	mov	x3, #0x0                   	// #0
    cb7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb80:	add	x2, x2, #0x988
    cb84:	mov	w1, #0x123                 	// #291
    cb88:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cb8c:	add	x0, x0, #0x6e8
    cb90:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cb94:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    cb98:	add	x0, x0, #0x638
    cb9c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    cba0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    cba4:	stp	x19, x30, [sp, #-16]!
    cba8:	mov	x4, x0
    cbac:	mov	x0, x2
    cbb0:	mov	x3, #0x1                   	// #1
    cbb4:	mov	x2, x1
    cbb8:	mov	x1, x4
    cbbc:	bl	c754 <__sanitizer_get_allocated_size@@Base+0xe7c>
    cbc0:	mov	x19, x0
    cbc4:	cbz	x0, cbd4 <__sanitizer_get_allocated_size@@Base+0x12fc>
    cbc8:	mov	x0, x19
    cbcc:	ldp	x19, x30, [sp], #16
    cbd0:	ret
    cbd4:	bl	122d8 <__sancov_default_options@@Base+0x1f54>
    cbd8:	b	cbc8 <__sanitizer_get_allocated_size@@Base+0x12f0>
    cbdc:	stp	x19, x20, [sp, #-32]!
    cbe0:	stp	x21, x30, [sp, #16]
    cbe4:	mov	x20, x0
    cbe8:	mov	w19, #0x0                   	// #0
    cbec:	mov	w21, #0x1                   	// #1
    cbf0:	b	cc18 <__sanitizer_get_allocated_size@@Base+0x1340>
    cbf4:	bl	18bd0 <__sanitizer_set_report_fd@@Base+0x2820>
    cbf8:	b	cc20 <__sanitizer_get_allocated_size@@Base+0x1348>
    cbfc:	ldxrb	w0, [x20]
    cc00:	stxrb	w1, w21, [x20]
    cc04:	cbnz	w1, cbfc <__sanitizer_get_allocated_size@@Base+0x1324>
    cc08:	dmb	ish
    cc0c:	and	w0, w0, #0xff
    cc10:	cbz	w0, cc30 <__sanitizer_get_allocated_size@@Base+0x1358>
    cc14:	add	w19, w19, #0x1
    cc18:	cmp	w19, #0x9
    cc1c:	b.gt	cbf4 <__sanitizer_get_allocated_size@@Base+0x131c>
    cc20:	ldrb	w1, [x20]
    cc24:	and	w1, w1, #0xff
    cc28:	cbnz	w1, cc14 <__sanitizer_get_allocated_size@@Base+0x133c>
    cc2c:	b	cbfc <__sanitizer_get_allocated_size@@Base+0x1324>
    cc30:	ldp	x21, x30, [sp, #16]
    cc34:	ldp	x19, x20, [sp], #32
    cc38:	ret
    cc3c:	stp	x19, x20, [sp, #-48]!
    cc40:	stp	x21, x22, [sp, #16]
    cc44:	str	x30, [sp, #32]
    cc48:	mov	x21, x0
    cc4c:	ldr	x0, [x3, #8]
    cc50:	cbz	x0, ccc8 <__sanitizer_get_allocated_size@@Base+0x13f0>
    cc54:	mov	x19, x2
    cc58:	mov	x20, x3
    cc5c:	add	x22, x2, #0x2, lsl #12
    cc60:	add	x22, x22, #0x1
    cc64:	lsl	x22, x22, #6
    cc68:	add	x0, x21, x22
    cc6c:	mov	w2, #0x1                   	// #1
    cc70:	ldxrb	w1, [x0]
    cc74:	stxrb	w3, w2, [x0]
    cc78:	cbnz	w3, cc70 <__sanitizer_get_allocated_size@@Base+0x1398>
    cc7c:	dmb	ish
    cc80:	and	w1, w1, #0xff
    cc84:	cbnz	w1, cce8 <__sanitizer_get_allocated_size@@Base+0x1410>
    cc88:	add	x1, x21, x19, lsl #6
    cc8c:	add	x0, x1, #0x80, lsl #12
    cc90:	ldr	x0, [x0, #72]
    cc94:	cbnz	x0, ccf0 <__sanitizer_get_allocated_size@@Base+0x1418>
    cc98:	str	xzr, [x20]
    cc9c:	add	x19, x1, #0x80, lsl #12
    cca0:	str	x20, [x19, #88]
    cca4:	str	x20, [x19, #80]
    cca8:	mov	x0, #0x1                   	// #1
    ccac:	str	x0, [x19, #72]
    ccb0:	dmb	ish
    ccb4:	strb	wzr, [x21, x22]
    ccb8:	ldp	x21, x22, [sp, #16]
    ccbc:	ldr	x30, [sp, #32]
    ccc0:	ldp	x19, x20, [sp], #48
    ccc4:	ret
    ccc8:	mov	x4, #0x0                   	// #0
    cccc:	mov	x3, #0x0                   	// #0
    ccd0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ccd4:	add	x2, x2, #0x9e8
    ccd8:	mov	w1, #0xad                  	// #173
    ccdc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cce0:	add	x0, x0, #0x640
    cce4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cce8:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    ccec:	b	cc88 <__sanitizer_get_allocated_size@@Base+0x13b0>
    ccf0:	add	x1, x1, #0x80, lsl #12
    ccf4:	ldr	x0, [x1, #80]
    ccf8:	str	x0, [x20]
    ccfc:	str	x20, [x1, #80]
    cd00:	ldr	x0, [x1, #72]
    cd04:	add	x0, x0, #0x1
    cd08:	str	x0, [x1, #72]
    cd0c:	b	ccb0 <__sanitizer_get_allocated_size@@Base+0x13d8>
    cd10:	cmp	x1, #0x1
    cd14:	b.ls	ce28 <__sanitizer_get_allocated_size@@Base+0x1550>  // b.plast
    cd18:	mov	x7, #0x1                   	// #1
    cd1c:	b	cd30 <__sanitizer_get_allocated_size@@Base+0x1458>
    cd20:	add	x2, x7, #0x1
    cd24:	cmp	x1, x2
    cd28:	b.ls	cd68 <__sanitizer_get_allocated_size@@Base+0x1490>  // b.plast
    cd2c:	add	x7, x7, #0x1
    cd30:	cbz	x7, cd2c <__sanitizer_get_allocated_size@@Base+0x1454>
    cd34:	mov	x2, x7
    cd38:	sub	x3, x2, #0x1
    cd3c:	mov	x5, x2
    cd40:	lsr	x2, x3, #1
    cd44:	ldr	x6, [x0, x2, lsl #3]
    cd48:	ldr	x4, [x0, x5, lsl #3]
    cd4c:	cmp	x4, x6
    cd50:	b.ls	cd20 <__sanitizer_get_allocated_size@@Base+0x1448>  // b.plast
    cd54:	str	x6, [x0, x5, lsl #3]
    cd58:	str	x4, [x0, x2, lsl #3]
    cd5c:	cmp	x3, #0x1
    cd60:	b.hi	cd38 <__sanitizer_get_allocated_size@@Base+0x1460>  // b.pmore
    cd64:	b	cd20 <__sanitizer_get_allocated_size@@Base+0x1448>
    cd68:	sub	x3, x1, #0x1
    cd6c:	mov	x8, #0x0                   	// #0
    cd70:	b	cd94 <__sanitizer_get_allocated_size@@Base+0x14bc>
    cd74:	lsl	x5, x5, #4
    cd78:	ldr	x5, [x0, x5]
    cd7c:	cmp	x6, x5
    cd80:	csel	x1, x1, x4, cc  // cc = lo, ul, last
    cd84:	b	cdcc <__sanitizer_get_allocated_size@@Base+0x14f4>
    cd88:	cmp	x3, #0x1
    cd8c:	b.eq	ce28 <__sanitizer_get_allocated_size@@Base+0x1550>  // b.none
    cd90:	sub	x3, x3, #0x1
    cd94:	ldr	x1, [x0]
    cd98:	ldr	x2, [x0, x3, lsl #3]
    cd9c:	str	x2, [x0]
    cda0:	str	x1, [x0, x3, lsl #3]
    cda4:	cbz	x3, cd90 <__sanitizer_get_allocated_size@@Base+0x14b8>
    cda8:	mov	x2, x8
    cdac:	b	cdf0 <__sanitizer_get_allocated_size@@Base+0x1518>
    cdb0:	cmp	x3, x1
    cdb4:	b.ls	cd88 <__sanitizer_get_allocated_size@@Base+0x14b0>  // b.plast
    cdb8:	lsl	x5, x5, #4
    cdbc:	ldr	x6, [x0, x2, lsl #3]
    cdc0:	ldr	x4, [x0, x5]
    cdc4:	cmp	x6, x4
    cdc8:	b.cs	cd88 <__sanitizer_get_allocated_size@@Base+0x14b0>  // b.hs, b.nlast
    cdcc:	cmp	x1, x2
    cdd0:	b.eq	cd88 <__sanitizer_get_allocated_size@@Base+0x14b0>  // b.none
    cdd4:	ldr	x4, [x0, x2, lsl #3]
    cdd8:	ldr	x5, [x0, x1, lsl #3]
    cddc:	str	x5, [x0, x2, lsl #3]
    cde0:	str	x4, [x0, x1, lsl #3]
    cde4:	cmp	x1, x3
    cde8:	b.cs	cd88 <__sanitizer_get_allocated_size@@Base+0x14b0>  // b.hs, b.nlast
    cdec:	mov	x2, x1
    cdf0:	lsl	x1, x2, #1
    cdf4:	add	x4, x1, #0x1
    cdf8:	add	x5, x2, #0x1
    cdfc:	add	x1, x1, #0x2
    ce00:	cmp	x3, x4
    ce04:	b.ls	cdb0 <__sanitizer_get_allocated_size@@Base+0x14d8>  // b.plast
    ce08:	ldr	x7, [x0, x2, lsl #3]
    ce0c:	ldr	x6, [x0, x4, lsl #3]
    ce10:	cmp	x7, x6
    ce14:	b.cs	cdb0 <__sanitizer_get_allocated_size@@Base+0x14d8>  // b.hs, b.nlast
    ce18:	cmp	x3, x1
    ce1c:	b.hi	cd74 <__sanitizer_get_allocated_size@@Base+0x149c>  // b.pmore
    ce20:	mov	x1, x4
    ce24:	b	cdcc <__sanitizer_get_allocated_size@@Base+0x14f4>
    ce28:	ret
    ce2c:	sub	sp, sp, #0x210
    ce30:	stp	x19, x20, [sp]
    ce34:	stp	x21, x22, [sp, #16]
    ce38:	stp	x23, x24, [sp, #32]
    ce3c:	str	x30, [sp, #80]
    ce40:	str	x0, [sp, #112]
    ce44:	mov	x19, x1
    ce48:	mov	x23, x2
    ce4c:	mov	x21, x3
    ce50:	str	x4, [sp, #104]
    ce54:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ce58:	ldr	x0, [x0, #3616]
    ce5c:	ldr	x2, [x0]
    ce60:	mov	x1, #0x100000              	// #1048576
    ce64:	mov	x0, x1
    ce68:	bl	1b254 <__sanitizer_set_report_fd@@Base+0x4ea4>
    ce6c:	cbz	x0, d3b0 <__sanitizer_get_allocated_size@@Base+0x1ad8>
    ce70:	stp	x25, x26, [sp, #48]
    ce74:	stp	x27, x28, [sp, #64]
    ce78:	mov	x20, x0
    ce7c:	ldr	x0, [x19, #24]
    ce80:	add	x0, x0, #0x100, lsl #12
    ce84:	str	x0, [x19, #24]
    ce88:	tst	x20, #0xfffff
    ce8c:	b.ne	cf74 <__sanitizer_get_allocated_size@@Base+0x169c>  // b.any
    ce90:	lsr	x19, x20, #20
    ce94:	mov	x0, #0xfffffff             	// #268435455
    ce98:	cmp	x0, x20, lsr #20
    ce9c:	b.cc	cf94 <__sanitizer_get_allocated_size@@Base+0x16bc>  // b.lo, b.ul, b.last
    cea0:	ldrb	w22, [sp, #104]
    cea4:	lsr	x24, x19, #12
    cea8:	ldr	x0, [sp, #112]
    ceac:	ldr	x0, [x0, x24, lsl #3]
    ceb0:	dmb	ish
    ceb4:	mov	x1, x0
    ceb8:	cbz	x0, cfb4 <__sanitizer_get_allocated_size@@Base+0x16dc>
    cebc:	and	x19, x19, #0xfff
    cec0:	ldrb	w0, [x1, x19]
    cec4:	str	x0, [sp, #136]
    cec8:	cbnz	x0, d030 <__sanitizer_get_allocated_size@@Base+0x1758>
    cecc:	strb	w22, [x1, x19]
    ced0:	ldr	x0, [sp, #104]
    ced4:	cmp	x0, #0x35
    ced8:	b.eq	d050 <__sanitizer_get_allocated_size@@Base+0x1778>  // b.none
    cedc:	lsl	x26, x0, #4
    cee0:	cmp	x0, #0x10
    cee4:	b.ls	cf08 <__sanitizer_get_allocated_size@@Base+0x1630>  // b.plast
    cee8:	ldr	x0, [sp, #104]
    ceec:	sub	x1, x0, #0x10
    cef0:	lsr	x26, x1, #2
    cef4:	mov	x0, #0x100                 	// #256
    cef8:	lsl	x0, x0, x26
    cefc:	lsr	x26, x0, #2
    cf00:	and	x1, x1, #0x3
    cf04:	madd	x26, x26, x1, x0
    cf08:	add	x0, x26, #0x10
    cf0c:	mov	x27, #0x100000              	// #1048576
    cf10:	udiv	x27, x27, x0
    cf14:	cbz	x26, d3cc <__sanitizer_get_allocated_size@@Base+0x1af4>
    cf18:	mov	w0, #0x4000                	// #16384
    cf1c:	udiv	w0, w0, w26
    cf20:	mov	w22, w0
    cf24:	cmp	w0, #0x40
    cf28:	mov	x0, #0x40                  	// #64
    cf2c:	csel	x22, x22, x0, ls  // ls = plast
    cf30:	cmp	x22, #0x0
    cf34:	csinc	x22, x22, xzr, ne  // ne = any
    cf38:	cmp	x22, #0x3e
    cf3c:	mov	x0, #0x3e                  	// #62
    cf40:	csel	x22, x22, x0, ls  // ls = plast
    cf44:	madd	x27, x27, x26, x20
    cf48:	cmp	x20, x27
    cf4c:	b.cs	d3dc <__sanitizer_get_allocated_size@@Base+0x1b04>  // b.hs, b.nlast
    cf50:	str	x20, [sp, #144]
    cf54:	mov	x0, #0x0                   	// #0
    cf58:	mov	x19, #0x1                   	// #1
    cf5c:	add	x28, sp, #0x90
    cf60:	add	x25, sp, #0x210
    cf64:	ldr	x1, [sp, #104]
    cf68:	add	x1, x23, x1, lsl #10
    cf6c:	str	x1, [sp, #96]
    cf70:	b	d1a4 <__sanitizer_get_allocated_size@@Base+0x18cc>
    cf74:	mov	x4, #0x0                   	// #0
    cf78:	mov	x3, #0x0                   	// #0
    cf7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cf80:	add	x2, x2, #0xa00
    cf84:	mov	w1, #0x126                 	// #294
    cf88:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cf8c:	add	x0, x0, #0x640
    cf90:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cf94:	mov	x4, #0x10000000            	// #268435456
    cf98:	mov	x3, x19
    cf9c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cfa0:	add	x2, x2, #0xa28
    cfa4:	mov	w1, #0x116                 	// #278
    cfa8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    cfac:	add	x0, x0, #0x640
    cfb0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    cfb4:	ldr	x0, [sp, #112]
    cfb8:	add	x0, x0, #0x80, lsl #12
    cfbc:	mov	w2, #0x1                   	// #1
    cfc0:	ldxrb	w1, [x0]
    cfc4:	stxrb	w3, w2, [x0]
    cfc8:	cbnz	w3, cfc0 <__sanitizer_get_allocated_size@@Base+0x16e8>
    cfcc:	dmb	ish
    cfd0:	and	w1, w1, #0xff
    cfd4:	cbnz	w1, d000 <__sanitizer_get_allocated_size@@Base+0x1728>
    cfd8:	ldr	x0, [sp, #112]
    cfdc:	ldr	x0, [x0, x24, lsl #3]
    cfe0:	dmb	ish
    cfe4:	mov	x1, x0
    cfe8:	cbz	x0, d008 <__sanitizer_get_allocated_size@@Base+0x1730>
    cfec:	dmb	ish
    cff0:	ldr	x0, [sp, #112]
    cff4:	add	x0, x0, #0x80, lsl #12
    cff8:	strb	wzr, [x0]
    cffc:	b	cebc <__sanitizer_get_allocated_size@@Base+0x15e4>
    d000:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    d004:	b	cfd8 <__sanitizer_get_allocated_size@@Base+0x1700>
    d008:	mov	w2, #0x0                   	// #0
    d00c:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d010:	add	x1, x1, #0xa50
    d014:	mov	x0, #0x1000                	// #4096
    d018:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
    d01c:	mov	x1, x0
    d020:	dmb	ish
    d024:	ldr	x0, [sp, #112]
    d028:	str	x1, [x0, x24, lsl #3]
    d02c:	b	cfec <__sanitizer_get_allocated_size@@Base+0x1714>
    d030:	mov	x4, x0
    d034:	mov	x3, #0x0                   	// #0
    d038:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d03c:	add	x2, x2, #0xa60
    d040:	mov	w1, #0x42                  	// #66
    d044:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d048:	add	x0, x0, #0xa88
    d04c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d050:	mov	x26, #0x200                 	// #512
    d054:	mov	x27, #0x7c1                 	// #1985
    d058:	b	cf18 <__sanitizer_get_allocated_size@@Base+0x1640>
    d05c:	ldr	x0, [sp, #96]
    d060:	ldr	x24, [x0, #24]
    d064:	cbnz	x24, d078 <__sanitizer_get_allocated_size@@Base+0x17a0>
    d068:	ldr	x0, [x19]
    d06c:	cbz	x0, d118 <__sanitizer_get_allocated_size@@Base+0x1840>
    d070:	str	xzr, [x0, #8]
    d074:	b	d158 <__sanitizer_get_allocated_size@@Base+0x1880>
    d078:	cmp	x24, #0x35
    d07c:	b.hi	d0e0 <__sanitizer_get_allocated_size@@Base+0x1808>  // b.pmore
    d080:	lsl	x0, x24, #10
    d084:	str	x0, [sp, #128]
    d088:	add	x1, x23, x0
    d08c:	ldr	x0, [x23, x0]
    d090:	cbz	x0, d100 <__sanitizer_get_allocated_size@@Base+0x1828>
    d094:	ldr	x1, [sp, #128]
    d098:	ldr	x2, [x23, x1]
    d09c:	sub	x0, x2, #0x1
    d0a0:	str	x0, [x23, x1]
    d0a4:	lsl	x1, x24, #7
    d0a8:	add	x0, x1, x0
    d0ac:	add	x0, x0, #0x4
    d0b0:	ldr	x0, [x23, x0, lsl #3]
    d0b4:	add	x1, x1, x2
    d0b8:	add	x1, x1, #0x2
    d0bc:	ldr	x1, [x23, x1, lsl #3]
    d0c0:	prfm	pldl1keep, [x1]
    d0c4:	ldr	x3, [sp, #120]
    d0c8:	ldr	x1, [x3, #16]
    d0cc:	add	x24, x23, x24, lsl #10
    d0d0:	ldr	x2, [x24, #16]
    d0d4:	add	x1, x1, x2
    d0d8:	str	x1, [x3, #16]
    d0dc:	b	d06c <__sanitizer_get_allocated_size@@Base+0x1794>
    d0e0:	mov	x4, #0x36                  	// #54
    d0e4:	mov	x3, x24
    d0e8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d0ec:	add	x2, x2, #0xad0
    d0f0:	mov	w1, #0xa0                  	// #160
    d0f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d0f8:	add	x0, x0, #0xaf0
    d0fc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d100:	mov	x3, x24
    d104:	ldr	x2, [sp, #112]
    d108:	mov	x0, x23
    d10c:	bl	d510 <__sanitizer_get_allocated_size@@Base+0x1c38>
    d110:	and	w0, w0, #0xff
    d114:	cbnz	w0, d094 <__sanitizer_get_allocated_size@@Base+0x17bc>
    d118:	mov	w0, #0x0                   	// #0
    d11c:	ldp	x25, x26, [sp, #48]
    d120:	ldp	x27, x28, [sp, #64]
    d124:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d128:	str	xzr, [x0]
    d12c:	ldr	x2, [x21, #24]
    d130:	str	x0, [x2]
    d134:	str	x0, [x21, #24]
    d138:	ldr	x0, [x21, #8]
    d13c:	add	x0, x0, #0x1
    d140:	str	x0, [x21, #8]
    d144:	mov	x0, #0x0                   	// #0
    d148:	add	x19, x19, #0x8
    d14c:	cmp	x25, x19
    d150:	b.eq	d19c <__sanitizer_get_allocated_size@@Base+0x18c4>  // b.none
    d154:	cbz	x0, d05c <__sanitizer_get_allocated_size@@Base+0x1784>
    d158:	ldr	x3, [x19]
    d15c:	ldr	x1, [x0, #8]
    d160:	add	x2, x1, #0x1
    d164:	str	x2, [x0, #8]
    d168:	add	x1, x1, #0x2
    d16c:	str	x3, [x0, x1, lsl #3]
    d170:	cmp	x22, x2
    d174:	b.ne	d148 <__sanitizer_get_allocated_size@@Base+0x1870>  // b.any
    d178:	ldr	x1, [x21, #8]
    d17c:	cbnz	x1, d128 <__sanitizer_get_allocated_size@@Base+0x1850>
    d180:	str	xzr, [x0]
    d184:	str	x0, [x21, #24]
    d188:	str	x0, [x21, #16]
    d18c:	mov	x0, #0x1                   	// #1
    d190:	str	x0, [x21, #8]
    d194:	mov	x0, #0x0                   	// #0
    d198:	b	d148 <__sanitizer_get_allocated_size@@Base+0x1870>
    d19c:	ldr	x1, [sp, #136]
    d1a0:	mov	x19, x1
    d1a4:	add	x20, x20, x26
    d1a8:	cmp	x20, x27
    d1ac:	b.cs	d1d4 <__sanitizer_get_allocated_size@@Base+0x18fc>  // b.hs, b.nlast
    d1b0:	add	x1, x19, #0x1
    d1b4:	str	x20, [x28, x19, lsl #3]
    d1b8:	cmp	x19, #0x2f
    d1bc:	b.ne	d1a0 <__sanitizer_get_allocated_size@@Base+0x18c8>  // b.any
    d1c0:	add	x19, sp, #0x90
    d1c4:	add	x1, x23, #0xd, lsl #12
    d1c8:	add	x1, x1, #0x800
    d1cc:	str	x1, [sp, #120]
    d1d0:	b	d154 <__sanitizer_get_allocated_size@@Base+0x187c>
    d1d4:	cbnz	x19, d20c <__sanitizer_get_allocated_size@@Base+0x1934>
    d1d8:	cbz	x0, d3ec <__sanitizer_get_allocated_size@@Base+0x1b14>
    d1dc:	ldr	x1, [x0, #8]
    d1e0:	cbz	x1, d364 <__sanitizer_get_allocated_size@@Base+0x1a8c>
    d1e4:	ldr	x1, [x21, #8]
    d1e8:	cbnz	x1, d384 <__sanitizer_get_allocated_size@@Base+0x1aac>
    d1ec:	str	xzr, [x0]
    d1f0:	str	x0, [x21, #24]
    d1f4:	str	x0, [x21, #16]
    d1f8:	mov	x0, #0x1                   	// #1
    d1fc:	str	x0, [x21, #8]
    d200:	ldp	x25, x26, [sp, #48]
    d204:	ldp	x27, x28, [sp, #64]
    d208:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d20c:	mov	x20, #0x1                   	// #1
    d210:	ldr	x1, [sp, #104]
    d214:	add	x26, x23, x1, lsl #10
    d218:	add	x28, x23, #0xd, lsl #12
    d21c:	add	x28, x28, #0x800
    d220:	add	x24, sp, #0x90
    d224:	b	d318 <__sanitizer_get_allocated_size@@Base+0x1a40>
    d228:	ldr	x25, [x26, #24]
    d22c:	cbnz	x25, d244 <__sanitizer_get_allocated_size@@Base+0x196c>
    d230:	add	x0, x24, x20, lsl #3
    d234:	ldur	x0, [x0, #-8]
    d238:	cbz	x0, d2d8 <__sanitizer_get_allocated_size@@Base+0x1a00>
    d23c:	str	xzr, [x0, #8]
    d240:	b	d31c <__sanitizer_get_allocated_size@@Base+0x1a44>
    d244:	cmp	x25, #0x35
    d248:	b.hi	d2a0 <__sanitizer_get_allocated_size@@Base+0x19c8>  // b.pmore
    d24c:	lsl	x27, x25, #10
    d250:	add	x1, x23, x27
    d254:	ldr	x0, [x23, x27]
    d258:	cbz	x0, d2c0 <__sanitizer_get_allocated_size@@Base+0x19e8>
    d25c:	ldr	x2, [x23, x27]
    d260:	sub	x0, x2, #0x1
    d264:	str	x0, [x23, x27]
    d268:	lsl	x1, x25, #7
    d26c:	add	x0, x1, x0
    d270:	add	x0, x0, #0x4
    d274:	ldr	x0, [x23, x0, lsl #3]
    d278:	add	x1, x1, x2
    d27c:	add	x1, x1, #0x2
    d280:	ldr	x1, [x23, x1, lsl #3]
    d284:	prfm	pldl1keep, [x1]
    d288:	ldr	x1, [x28, #16]
    d28c:	add	x25, x23, x25, lsl #10
    d290:	ldr	x2, [x25, #16]
    d294:	add	x1, x1, x2
    d298:	str	x1, [x28, #16]
    d29c:	b	d238 <__sanitizer_get_allocated_size@@Base+0x1960>
    d2a0:	mov	x4, #0x36                  	// #54
    d2a4:	mov	x3, x25
    d2a8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d2ac:	add	x2, x2, #0xad0
    d2b0:	mov	w1, #0xa0                  	// #160
    d2b4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d2b8:	add	x0, x0, #0xaf0
    d2bc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d2c0:	mov	x3, x25
    d2c4:	ldr	x2, [sp, #112]
    d2c8:	mov	x0, x23
    d2cc:	bl	d510 <__sanitizer_get_allocated_size@@Base+0x1c38>
    d2d0:	and	w0, w0, #0xff
    d2d4:	cbnz	w0, d25c <__sanitizer_get_allocated_size@@Base+0x1984>
    d2d8:	mov	w0, #0x0                   	// #0
    d2dc:	ldp	x25, x26, [sp, #48]
    d2e0:	ldp	x27, x28, [sp, #64]
    d2e4:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d2e8:	str	xzr, [x0]
    d2ec:	ldr	x2, [x21, #24]
    d2f0:	str	x0, [x2]
    d2f4:	str	x0, [x21, #24]
    d2f8:	ldr	x0, [x21, #8]
    d2fc:	add	x0, x0, #0x1
    d300:	str	x0, [x21, #8]
    d304:	mov	x0, #0x0                   	// #0
    d308:	add	x1, x20, #0x1
    d30c:	cmp	x19, x20
    d310:	b.eq	d1d8 <__sanitizer_get_allocated_size@@Base+0x1900>  // b.none
    d314:	mov	x20, x1
    d318:	cbz	x0, d228 <__sanitizer_get_allocated_size@@Base+0x1950>
    d31c:	add	x1, x24, x20, lsl #3
    d320:	ldur	x3, [x1, #-8]
    d324:	ldr	x1, [x0, #8]
    d328:	add	x2, x1, #0x1
    d32c:	str	x2, [x0, #8]
    d330:	add	x1, x1, #0x2
    d334:	str	x3, [x0, x1, lsl #3]
    d338:	cmp	x22, x2
    d33c:	b.ne	d308 <__sanitizer_get_allocated_size@@Base+0x1a30>  // b.any
    d340:	ldr	x1, [x21, #8]
    d344:	cbnz	x1, d2e8 <__sanitizer_get_allocated_size@@Base+0x1a10>
    d348:	str	xzr, [x0]
    d34c:	str	x0, [x21, #24]
    d350:	str	x0, [x21, #16]
    d354:	mov	x0, #0x1                   	// #1
    d358:	str	x0, [x21, #8]
    d35c:	mov	x0, #0x0                   	// #0
    d360:	b	d308 <__sanitizer_get_allocated_size@@Base+0x1a30>
    d364:	mov	x4, #0x0                   	// #0
    d368:	mov	x3, #0x0                   	// #0
    d36c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d370:	add	x2, x2, #0x9e8
    d374:	mov	w1, #0x169                 	// #361
    d378:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d37c:	add	x0, x0, #0x640
    d380:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d384:	str	xzr, [x0]
    d388:	ldr	x2, [x21, #24]
    d38c:	str	x0, [x2]
    d390:	str	x0, [x21, #24]
    d394:	ldr	x0, [x21, #8]
    d398:	add	x0, x0, #0x1
    d39c:	str	x0, [x21, #8]
    d3a0:	mov	w0, #0x1                   	// #1
    d3a4:	ldp	x25, x26, [sp, #48]
    d3a8:	ldp	x27, x28, [sp, #64]
    d3ac:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d3b0:	mov	w0, #0x0                   	// #0
    d3b4:	ldp	x19, x20, [sp]
    d3b8:	ldp	x21, x22, [sp, #16]
    d3bc:	ldp	x23, x24, [sp, #32]
    d3c0:	ldr	x30, [sp, #80]
    d3c4:	add	sp, sp, #0x210
    d3c8:	ret
    d3cc:	mov	w0, #0x1                   	// #1
    d3d0:	ldp	x25, x26, [sp, #48]
    d3d4:	ldp	x27, x28, [sp, #64]
    d3d8:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d3dc:	mov	w0, #0x1                   	// #1
    d3e0:	ldp	x25, x26, [sp, #48]
    d3e4:	ldp	x27, x28, [sp, #64]
    d3e8:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d3ec:	mov	w0, #0x1                   	// #1
    d3f0:	ldp	x25, x26, [sp, #48]
    d3f4:	ldp	x27, x28, [sp, #64]
    d3f8:	b	d3b4 <__sanitizer_get_allocated_size@@Base+0x1adc>
    d3fc:	stp	x19, x20, [sp, #-64]!
    d400:	stp	x21, x22, [sp, #16]
    d404:	stp	x23, x24, [sp, #32]
    d408:	stp	x25, x30, [sp, #48]
    d40c:	mov	x21, x0
    d410:	mov	x24, x1
    d414:	mov	x25, x2
    d418:	mov	x19, x3
    d41c:	add	x22, x3, #0x2, lsl #12
    d420:	add	x22, x22, #0x1
    d424:	lsl	x22, x22, #6
    d428:	add	x23, x0, x22
    d42c:	mov	w1, #0x1                   	// #1
    d430:	ldxrb	w0, [x23]
    d434:	stxrb	w2, w1, [x23]
    d438:	cbnz	w2, d430 <__sanitizer_get_allocated_size@@Base+0x1b58>
    d43c:	dmb	ish
    d440:	and	w0, w0, #0xff
    d444:	cbnz	w0, d490 <__sanitizer_get_allocated_size@@Base+0x1bb8>
    d448:	add	x20, x21, x19, lsl #6
    d44c:	add	x0, x20, #0x80, lsl #12
    d450:	ldr	x4, [x0, #72]
    d454:	cbnz	x4, d4d0 <__sanitizer_get_allocated_size@@Base+0x1bf8>
    d458:	mov	x4, x19
    d45c:	mov	x3, x23
    d460:	mov	x2, x25
    d464:	mov	x1, x24
    d468:	mov	x0, x21
    d46c:	bl	ce2c <__sanitizer_get_allocated_size@@Base+0x1554>
    d470:	and	w0, w0, #0xff
    d474:	cbz	w0, d4c8 <__sanitizer_get_allocated_size@@Base+0x1bf0>
    d478:	add	x0, x20, #0x80, lsl #12
    d47c:	ldr	x4, [x0, #72]
    d480:	cbz	x4, d49c <__sanitizer_get_allocated_size@@Base+0x1bc4>
    d484:	add	x0, x20, #0x80, lsl #12
    d488:	ldr	x0, [x0, #80]
    d48c:	b	d4d8 <__sanitizer_get_allocated_size@@Base+0x1c00>
    d490:	mov	x0, x23
    d494:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    d498:	b	d448 <__sanitizer_get_allocated_size@@Base+0x1b70>
    d49c:	mov	x3, #0x0                   	// #0
    d4a0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d4a4:	add	x2, x2, #0xb40
    d4a8:	mov	w1, #0x40                  	// #64
    d4ac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d4b0:	add	x0, x0, #0xb58
    d4b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d4b8:	add	x19, x21, x19, lsl #6
    d4bc:	add	x19, x19, #0x80, lsl #12
    d4c0:	str	xzr, [x19, #88]
    d4c4:	b	d4e8 <__sanitizer_get_allocated_size@@Base+0x1c10>
    d4c8:	mov	x0, #0x0                   	// #0
    d4cc:	b	d4f4 <__sanitizer_get_allocated_size@@Base+0x1c1c>
    d4d0:	add	x0, x20, #0x80, lsl #12
    d4d4:	ldr	x0, [x0, #80]
    d4d8:	ldr	x1, [x0]
    d4dc:	add	x2, x20, #0x80, lsl #12
    d4e0:	str	x1, [x2, #80]
    d4e4:	cbz	x1, d4b8 <__sanitizer_get_allocated_size@@Base+0x1be0>
    d4e8:	add	x20, x20, #0x80, lsl #12
    d4ec:	sub	x4, x4, #0x1
    d4f0:	str	x4, [x20, #72]
    d4f4:	dmb	ish
    d4f8:	strb	wzr, [x21, x22]
    d4fc:	ldp	x21, x22, [sp, #16]
    d500:	ldp	x23, x24, [sp, #32]
    d504:	ldp	x25, x30, [sp, #48]
    d508:	ldp	x19, x20, [sp], #64
    d50c:	ret
    d510:	stp	x19, x20, [sp, #-48]!
    d514:	stp	x21, x22, [sp, #16]
    d518:	stp	x23, x30, [sp, #32]
    d51c:	mov	x19, x0
    d520:	mov	x21, x1
    d524:	mov	x22, x2
    d528:	mov	x20, x3
    d52c:	ldr	x2, [x1, #8]
    d530:	cbz	x2, d5a4 <__sanitizer_get_allocated_size@@Base+0x1ccc>
    d534:	mov	x3, x20
    d538:	mov	x2, x19
    d53c:	add	x1, x19, #0xd, lsl #12
    d540:	add	x1, x1, #0x800
    d544:	mov	x0, x22
    d548:	bl	d3fc <__sanitizer_get_allocated_size@@Base+0x1b24>
    d54c:	mov	x23, x0
    d550:	cbz	x0, d7b0 <__sanitizer_get_allocated_size@@Base+0x1ed8>
    d554:	ldr	x2, [x0, #8]
    d558:	mov	x4, #0x0                   	// #0
    d55c:	add	x3, x0, #0x10
    d560:	add	x0, x21, #0x20
    d564:	cbz	x2, d650 <__sanitizer_get_allocated_size@@Base+0x1d78>
    d568:	ldr	x1, [x3, x4, lsl #3]
    d56c:	str	x1, [x0, x4, lsl #3]
    d570:	add	x4, x4, #0x1
    d574:	cmp	x2, x4
    d578:	b.ne	d568 <__sanitizer_get_allocated_size@@Base+0x1c90>  // b.any
    d57c:	ldr	x0, [x23, #8]
    d580:	str	x0, [x21]
    d584:	add	x20, x19, x20, lsl #10
    d588:	ldr	x20, [x20, #24]
    d58c:	mov	w0, #0x1                   	// #1
    d590:	cbnz	x20, d66c <__sanitizer_get_allocated_size@@Base+0x1d94>
    d594:	ldp	x21, x22, [sp, #16]
    d598:	ldp	x23, x30, [sp, #32]
    d59c:	ldp	x19, x20, [sp], #48
    d5a0:	ret
    d5a4:	add	x6, x0, #0x408
    d5a8:	mov	x5, #0x1                   	// #1
    d5ac:	mov	x3, #0x40                  	// #64
    d5b0:	mov	x14, #0x200                 	// #512
    d5b4:	mov	x13, x2
    d5b8:	mov	x8, #0x14                  	// #20
    d5bc:	mov	w11, #0x4000                	// #16384
    d5c0:	mov	x10, x5
    d5c4:	mov	x9, #0x3e                  	// #62
    d5c8:	mov	x12, #0x100                 	// #256
    d5cc:	b	d638 <__sanitizer_get_allocated_size@@Base+0x1d60>
    d5d0:	sub	x1, x5, #0x10
    d5d4:	lsr	x0, x1, #2
    d5d8:	lsl	x0, x12, x0
    d5dc:	lsr	x7, x0, #2
    d5e0:	and	x1, x1, #0x3
    d5e4:	madd	x7, x7, x1, x0
    d5e8:	cbz	x7, d7d0 <__sanitizer_get_allocated_size@@Base+0x1ef8>
    d5ec:	udiv	w0, w11, w7
    d5f0:	mov	w4, w0
    d5f4:	cmp	w0, #0x40
    d5f8:	csel	x4, x4, x3, ls  // ls = plast
    d5fc:	cmp	x4, #0x0
    d600:	csel	x4, x4, x10, ne  // ne = any
    d604:	cmp	x4, #0x3e
    d608:	csel	x4, x4, x9, ls  // ls = plast
    d60c:	lsl	x0, x4, #1
    d610:	str	x0, [x6]
    d614:	str	x7, [x6, #8]
    d618:	add	x4, x4, #0x2
    d61c:	cmp	x7, x4, lsl #3
    d620:	csel	x0, x2, x8, cs  // cs = hs, nlast
    d624:	str	x0, [x6, #16]
    d628:	add	x5, x5, #0x1
    d62c:	add	x6, x6, #0x400
    d630:	cmp	x5, #0x36
    d634:	b.eq	d534 <__sanitizer_get_allocated_size@@Base+0x1c5c>  // b.none
    d638:	cmp	x5, #0x35
    d63c:	b.eq	d7f8 <__sanitizer_get_allocated_size@@Base+0x1f20>  // b.none
    d640:	lsl	x7, x5, #4
    d644:	cmp	x5, #0x10
    d648:	b.hi	d5d0 <__sanitizer_get_allocated_size@@Base+0x1cf8>  // b.pmore
    d64c:	b	d5e8 <__sanitizer_get_allocated_size@@Base+0x1d10>
    d650:	mov	x3, #0x0                   	// #0
    d654:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d658:	add	x2, x2, #0x9e8
    d65c:	mov	w1, #0xf6                  	// #246
    d660:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d664:	add	x0, x0, #0xaf0
    d668:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d66c:	cmp	x20, #0x35
    d670:	b.hi	d6d0 <__sanitizer_get_allocated_size@@Base+0x1df8>  // b.pmore
    d674:	lsl	x21, x20, #10
    d678:	add	x1, x19, x21
    d67c:	ldr	x6, [x1, #8]
    d680:	cbz	x6, d6f0 <__sanitizer_get_allocated_size@@Base+0x1e18>
    d684:	ldr	x2, [x19, x21]
    d688:	ldr	x0, [x1, #8]
    d68c:	cmp	x2, x0
    d690:	b.eq	d79c <__sanitizer_get_allocated_size@@Base+0x1ec4>  // b.none
    d694:	ldr	x0, [x19, x21]
    d698:	add	x1, x0, #0x1
    d69c:	str	x1, [x19, x21]
    d6a0:	add	x0, x0, x20, lsl #7
    d6a4:	add	x0, x0, #0x4
    d6a8:	str	x23, [x19, x0, lsl #3]
    d6ac:	add	x1, x19, #0xd, lsl #12
    d6b0:	add	x1, x1, #0x800
    d6b4:	ldr	x0, [x1, #16]
    d6b8:	add	x19, x19, x20, lsl #10
    d6bc:	ldr	x2, [x19, #16]
    d6c0:	sub	x0, x0, x2
    d6c4:	str	x0, [x1, #16]
    d6c8:	mov	w0, #0x1                   	// #1
    d6cc:	b	d594 <__sanitizer_get_allocated_size@@Base+0x1cbc>
    d6d0:	mov	x4, #0x36                  	// #54
    d6d4:	mov	x3, x20
    d6d8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d6dc:	add	x2, x2, #0xad0
    d6e0:	mov	w1, #0xaf                  	// #175
    d6e4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d6e8:	add	x0, x0, #0xaf0
    d6ec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d6f0:	add	x3, x19, #0x408
    d6f4:	mov	x0, #0x1                   	// #1
    d6f8:	mov	x7, #0x40                  	// #64
    d6fc:	mov	x14, #0x200                 	// #512
    d700:	mov	x13, x6
    d704:	mov	x8, #0x14                  	// #20
    d708:	mov	w11, #0x4000                	// #16384
    d70c:	mov	x10, x0
    d710:	mov	x9, #0x3e                  	// #62
    d714:	mov	x12, #0x100                 	// #256
    d718:	b	d76c <__sanitizer_get_allocated_size@@Base+0x1e94>
    d71c:	cbz	x4, d7b8 <__sanitizer_get_allocated_size@@Base+0x1ee0>
    d720:	udiv	w5, w11, w4
    d724:	mov	w2, w5
    d728:	cmp	w5, #0x40
    d72c:	csel	x2, x2, x7, ls  // ls = plast
    d730:	cmp	x2, #0x0
    d734:	csel	x2, x2, x10, ne  // ne = any
    d738:	cmp	x2, #0x3e
    d73c:	csel	x2, x2, x9, ls  // ls = plast
    d740:	lsl	x5, x2, #1
    d744:	str	x5, [x3]
    d748:	str	x4, [x3, #8]
    d74c:	add	x2, x2, #0x2
    d750:	cmp	x4, x2, lsl #3
    d754:	csel	x2, x6, x8, cs  // cs = hs, nlast
    d758:	str	x2, [x3, #16]
    d75c:	add	x0, x0, #0x1
    d760:	add	x3, x3, #0x400
    d764:	cmp	x0, #0x36
    d768:	b.eq	d684 <__sanitizer_get_allocated_size@@Base+0x1dac>  // b.none
    d76c:	cmp	x0, #0x35
    d770:	b.eq	d7e8 <__sanitizer_get_allocated_size@@Base+0x1f10>  // b.none
    d774:	lsl	x4, x0, #4
    d778:	cmp	x0, #0x10
    d77c:	b.ls	d71c <__sanitizer_get_allocated_size@@Base+0x1e44>  // b.plast
    d780:	sub	x5, x0, #0x10
    d784:	lsr	x2, x5, #2
    d788:	lsl	x2, x12, x2
    d78c:	lsr	x4, x2, #2
    d790:	and	x5, x5, #0x3
    d794:	madd	x4, x4, x5, x2
    d798:	b	d71c <__sanitizer_get_allocated_size@@Base+0x1e44>
    d79c:	mov	x3, x20
    d7a0:	mov	x2, x22
    d7a4:	mov	x0, x19
    d7a8:	bl	dcf0 <__sancov_lowest_stack@@Base+0x4c0>
    d7ac:	b	d694 <__sanitizer_get_allocated_size@@Base+0x1dbc>
    d7b0:	mov	w0, #0x0                   	// #0
    d7b4:	b	d594 <__sanitizer_get_allocated_size@@Base+0x1cbc>
    d7b8:	str	xzr, [x3]
    d7bc:	str	xzr, [x3, #8]
    d7c0:	str	x8, [x3, #16]
    d7c4:	add	x0, x0, #0x1
    d7c8:	add	x3, x3, #0x400
    d7cc:	b	d76c <__sanitizer_get_allocated_size@@Base+0x1e94>
    d7d0:	str	xzr, [x6]
    d7d4:	str	xzr, [x6, #8]
    d7d8:	str	x8, [x6, #16]
    d7dc:	add	x5, x5, #0x1
    d7e0:	add	x6, x6, #0x400
    d7e4:	b	d638 <__sanitizer_get_allocated_size@@Base+0x1d60>
    d7e8:	str	x7, [x3]
    d7ec:	str	x14, [x3, #8]
    d7f0:	mov	x2, x13
    d7f4:	b	d758 <__sanitizer_get_allocated_size@@Base+0x1e80>
    d7f8:	str	x3, [x6]
    d7fc:	str	x14, [x6, #8]
    d800:	mov	x0, x13
    d804:	b	d624 <__sanitizer_get_allocated_size@@Base+0x1d4c>
    d808:	stp	x19, x20, [sp, #-64]!
    d80c:	stp	x23, x24, [sp, #32]
    d810:	str	x30, [sp, #48]
    d814:	mov	x23, x0
    d818:	mov	x19, x3
    d81c:	cmp	x2, #0x0
    d820:	csinc	x20, x2, xzr, ne  // ne = any
    d824:	adds	x0, x20, x3
    d828:	b.cs	d8fc <__sancov_lowest_stack@@Base+0xcc>  // b.hs, b.nlast
    d82c:	stp	x21, x22, [sp, #16]
    d830:	mov	x21, x1
    d834:	cmp	x3, #0x8
    d838:	b.hi	d920 <__sancov_lowest_stack@@Base+0xf0>  // b.pmore
    d83c:	cmp	x2, #0x20, lsl #12
    d840:	b.hi	d9cc <__sancov_lowest_stack@@Base+0x19c>  // b.pmore
    d844:	cmp	x20, #0x100
    d848:	b.ls	d960 <__sancov_lowest_stack@@Base+0x130>  // b.plast
    d84c:	clz	x0, x20
    d850:	mov	w22, #0x3f                  	// #63
    d854:	sub	w22, w22, w0
    d858:	sub	w0, w22, #0x2
    d85c:	mov	w1, #0x1                   	// #1
    d860:	lsl	w1, w1, w0
    d864:	sub	w1, w1, #0x1
    d868:	tst	x1, x20
    d86c:	lsr	x0, x20, x0
    d870:	and	x0, x0, #0x3
    d874:	cinc	x0, x0, ne  // ne = any
    d878:	add	x22, x0, w22, sxtw #2
    d87c:	sub	x22, x22, #0x10
    d880:	cmp	x22, #0x35
    d884:	b.hi	d990 <__sancov_lowest_stack@@Base+0x160>  // b.pmore
    d888:	lsl	x20, x22, #10
    d88c:	add	x1, x21, x20
    d890:	ldr	x0, [x21, x20]
    d894:	cbz	x0, d9b0 <__sancov_lowest_stack@@Base+0x180>
    d898:	ldr	x2, [x21, x20]
    d89c:	sub	x0, x2, #0x1
    d8a0:	str	x0, [x21, x20]
    d8a4:	lsl	x1, x22, #7
    d8a8:	add	x0, x1, x0
    d8ac:	add	x0, x0, #0x4
    d8b0:	ldr	x0, [x21, x0, lsl #3]
    d8b4:	add	x1, x1, x2
    d8b8:	add	x1, x1, #0x2
    d8bc:	ldr	x1, [x21, x1, lsl #3]
    d8c0:	prfm	pldl1keep, [x1]
    d8c4:	add	x2, x21, #0xd, lsl #12
    d8c8:	add	x2, x2, #0x800
    d8cc:	ldr	x1, [x2, #16]
    d8d0:	add	x21, x21, x22, lsl #10
    d8d4:	ldr	x3, [x21, #16]
    d8d8:	add	x1, x1, x3
    d8dc:	str	x1, [x2, #16]
    d8e0:	cmp	x19, #0x8
    d8e4:	b.ls	dcdc <__sancov_lowest_stack@@Base+0x4ac>  // b.plast
    d8e8:	sub	x19, x19, #0x1
    d8ec:	ands	x3, x0, x19
    d8f0:	b.ne	dcc0 <__sancov_lowest_stack@@Base+0x490>  // b.any
    d8f4:	ldp	x21, x22, [sp, #16]
    d8f8:	b	dce0 <__sancov_lowest_stack@@Base+0x4b0>
    d8fc:	mov	x2, x20
    d900:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d904:	ldr	x0, [x0, #4008]
    d908:	ldr	x1, [x0]
    d90c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d910:	add	x0, x0, #0xb98
    d914:	bl	1d908 <OnPrint@@Base+0x3d8>
    d918:	mov	x0, #0x0                   	// #0
    d91c:	b	dce0 <__sancov_lowest_stack@@Base+0x4b0>
    d920:	sub	x24, x3, #0x1
    d924:	tst	x3, x24
    d928:	b.ne	d950 <__sancov_lowest_stack@@Base+0x120>  // b.any
    d92c:	sub	x0, x0, #0x1
    d930:	neg	x1, x3
    d934:	and	x0, x0, x1
    d938:	cmp	x0, #0x20, lsl #12
    d93c:	mov	x1, #0x20000               	// #131072
    d940:	ccmp	x3, x1, #0x2, ls  // ls = plast
    d944:	b.hi	d9d8 <__sancov_lowest_stack@@Base+0x1a8>  // b.pmore
    d948:	mov	x20, x0
    d94c:	b	d844 <__sancov_lowest_stack@@Base+0x14>
    d950:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    d954:	add	x0, x0, #0x638
    d958:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    d95c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    d960:	add	x20, x20, #0xf
    d964:	lsr	x22, x20, #4
    d968:	cmp	xzr, x20, lsr #4
    d96c:	b.ne	d888 <__sancov_lowest_stack@@Base+0x58>  // b.any
    d970:	mov	x4, #0x0                   	// #0
    d974:	mov	x3, #0x0                   	// #0
    d978:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d97c:	add	x2, x2, #0xbf8
    d980:	mov	w1, #0x9f                  	// #159
    d984:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d988:	add	x0, x0, #0xaf0
    d98c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d990:	mov	x4, #0x36                  	// #54
    d994:	mov	x3, x22
    d998:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d99c:	add	x2, x2, #0xad0
    d9a0:	mov	w1, #0xa0                  	// #160
    d9a4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    d9a8:	add	x0, x0, #0xaf0
    d9ac:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    d9b0:	mov	x3, x22
    d9b4:	mov	x2, x23
    d9b8:	mov	x0, x21
    d9bc:	bl	d510 <__sanitizer_get_allocated_size@@Base+0x1c38>
    d9c0:	and	w0, w0, #0xff
    d9c4:	cbnz	w0, d898 <__sancov_lowest_stack@@Base+0x68>
    d9c8:	b	dbc8 <__sancov_lowest_stack@@Base+0x398>
    d9cc:	sub	x24, x3, #0x1
    d9d0:	tst	x3, x24
    d9d4:	b.ne	db78 <__sancov_lowest_stack@@Base+0x348>  // b.any
    d9d8:	add	x0, x23, #0x80, lsl #12
    d9dc:	add	x0, x0, #0xc00
    d9e0:	ldr	x0, [x0, #448]
    d9e4:	sub	x21, x0, #0x1
    d9e8:	tst	x0, x21
    d9ec:	b.ne	db98 <__sancov_lowest_stack@@Base+0x368>  // b.any
    d9f0:	add	x21, x20, x21
    d9f4:	neg	x1, x0
    d9f8:	and	x21, x21, x1
    d9fc:	add	x21, x21, x0
    da00:	add	x1, x21, x19
    da04:	cmp	x19, x0
    da08:	csel	x21, x1, x21, hi  // hi = pmore
    da0c:	cmp	x20, x21
    da10:	b.hi	dba8 <__sancov_lowest_stack@@Base+0x378>  // b.pmore
    da14:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    da18:	ldr	x0, [x0, #3840]
    da1c:	ldr	x1, [x0]
    da20:	mov	x0, x21
    da24:	bl	1b17c <__sanitizer_set_report_fd@@Base+0x4dcc>
    da28:	cbz	x0, dbc8 <__sancov_lowest_stack@@Base+0x398>
    da2c:	add	x1, x23, #0x80, lsl #12
    da30:	add	x1, x1, #0xc00
    da34:	ldr	x1, [x1, #448]
    da38:	sub	x2, x1, #0x1
    da3c:	tst	x0, x2
    da40:	b.ne	dbd4 <__sancov_lowest_stack@@Base+0x3a4>  // b.any
    da44:	add	x22, x0, x1
    da48:	ands	x3, x24, x22
    da4c:	b.eq	da60 <__sancov_lowest_stack@@Base+0x230>  // b.none
    da50:	add	x22, x19, x22
    da54:	sub	x22, x22, x3
    da58:	tst	x24, x22
    da5c:	b.ne	dbf4 <__sancov_lowest_stack@@Base+0x3c4>  // b.any
    da60:	tst	x22, x2
    da64:	b.ne	dc14 <__sancov_lowest_stack@@Base+0x3e4>  // b.any
    da68:	add	x3, x20, x22
    da6c:	cmp	x0, x3
    da70:	b.hi	dc34 <__sancov_lowest_stack@@Base+0x404>  // b.pmore
    da74:	add	x4, x21, x0
    da78:	cmp	x4, x3
    da7c:	b.cc	dc50 <__sancov_lowest_stack@@Base+0x420>  // b.lo, b.ul, b.last
    da80:	sub	x24, x22, x1
    da84:	str	x20, [x24, #16]
    da88:	str	x0, [x24]
    da8c:	str	x21, [x24, #8]
    da90:	add	x0, x23, #0x81, lsl #12
    da94:	add	x0, x0, #0x28
    da98:	mov	w2, #0x1                   	// #1
    da9c:	ldxrb	w1, [x0]
    daa0:	stxrb	w3, w2, [x0]
    daa4:	cbnz	w3, da9c <__sancov_lowest_stack@@Base+0x26c>
    daa8:	dmb	ish
    daac:	and	w1, w1, #0xff
    dab0:	cbnz	w1, dc68 <__sancov_lowest_stack@@Base+0x438>
    dab4:	add	x0, x23, #0x80, lsl #12
    dab8:	add	x0, x0, #0xdc0
    dabc:	ldr	x3, [x0, #56]
    dac0:	mov	x0, #0xfffff               	// #1048575
    dac4:	cmp	x3, x0
    dac8:	b.hi	dc70 <__sancov_lowest_stack@@Base+0x440>  // b.pmore
    dacc:	add	x0, x23, #0x80, lsl #12
    dad0:	add	x0, x0, #0xdd0
    dad4:	ldr	x0, [x0, #32]
    dad8:	cmp	x3, x0
    dadc:	b.eq	dc8c <__sancov_lowest_stack@@Base+0x45c>  // b.none
    dae0:	clz	x3, x21
    dae4:	add	x0, x23, #0x80, lsl #12
    dae8:	add	x0, x0, #0xdc0
    daec:	ldr	x1, [x0, #56]
    daf0:	add	x2, x1, #0x1
    daf4:	str	x2, [x0, #56]
    daf8:	str	x1, [x24, #24]
    dafc:	ldr	x2, [x0, #8]
    db00:	str	x24, [x2, x1, lsl #3]
    db04:	strb	wzr, [x0, #64]
    db08:	ldr	x1, [x0, #72]
    db0c:	add	x1, x1, #0x1
    db10:	str	x1, [x0, #72]
    db14:	ldr	x1, [x0, #88]
    db18:	add	x1, x21, x1
    db1c:	str	x1, [x0, #88]
    db20:	ldr	x2, [x0, #96]
    db24:	cmp	x2, x1
    db28:	csel	x1, x2, x1, cs  // cs = hs, nlast
    db2c:	str	x1, [x0, #96]
    db30:	mov	w0, #0x3f                  	// #63
    db34:	sub	w0, w0, w3
    db38:	add	x0, x23, w0, sxtw #3
    db3c:	add	x0, x0, #0x80, lsl #12
    db40:	ldr	x1, [x0, #3624]
    db44:	add	x1, x1, #0x1
    db48:	str	x1, [x0, #3624]
    db4c:	add	x0, x23, #0x81, lsl #12
    db50:	ldr	x2, [x0, #64]
    db54:	add	x2, x21, x2
    db58:	str	x2, [x0, #64]
    db5c:	ldr	x2, [x0, #72]
    db60:	add	x21, x21, x2
    db64:	str	x21, [x0, #72]
    db68:	dmb	ish
    db6c:	strb	wzr, [x0, #40]
    db70:	mov	x0, x22
    db74:	b	d8e0 <__sancov_lowest_stack@@Base+0xb0>
    db78:	mov	x4, #0x0                   	// #0
    db7c:	mov	x3, #0x0                   	// #0
    db80:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    db84:	add	x2, x2, #0xc10
    db88:	mov	w1, #0x53                  	// #83
    db8c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    db90:	add	x0, x0, #0x6e8
    db94:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    db98:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
    db9c:	add	x0, x0, #0x638
    dba0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
    dba4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    dba8:	mov	x3, x19
    dbac:	mov	x2, x21
    dbb0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dbb4:	ldr	x0, [x0, #4008]
    dbb8:	ldr	x1, [x0]
    dbbc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dbc0:	add	x0, x0, #0xc38
    dbc4:	bl	1d908 <OnPrint@@Base+0x3d8>
    dbc8:	mov	x0, #0x0                   	// #0
    dbcc:	ldp	x21, x22, [sp, #16]
    dbd0:	b	dce0 <__sancov_lowest_stack@@Base+0x4b0>
    dbd4:	mov	x4, #0x0                   	// #0
    dbd8:	mov	x3, #0x0                   	// #0
    dbdc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dbe0:	add	x2, x2, #0xca0
    dbe4:	mov	w1, #0x62                  	// #98
    dbe8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dbec:	add	x0, x0, #0x6e8
    dbf0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dbf4:	mov	x4, #0x0                   	// #0
    dbf8:	mov	x3, #0x0                   	// #0
    dbfc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc00:	add	x2, x2, #0xcd0
    dc04:	mov	w1, #0x68                  	// #104
    dc08:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc0c:	add	x0, x0, #0x6e8
    dc10:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dc14:	mov	x4, #0x0                   	// #0
    dc18:	mov	x3, #0x0                   	// #0
    dc1c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc20:	add	x2, x2, #0xcf8
    dc24:	mov	w1, #0x69                  	// #105
    dc28:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc2c:	add	x0, x0, #0x6e8
    dc30:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dc34:	mov	x4, x0
    dc38:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc3c:	add	x2, x2, #0xd20
    dc40:	mov	w1, #0x6a                  	// #106
    dc44:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc48:	add	x0, x0, #0x6e8
    dc4c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dc50:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc54:	add	x2, x2, #0xd40
    dc58:	mov	w1, #0x6b                  	// #107
    dc5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc60:	add	x0, x0, #0x6e8
    dc64:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dc68:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    dc6c:	b	dab4 <__sancov_lowest_stack@@Base+0x284>
    dc70:	mov	x4, #0x100000              	// #1048576
    dc74:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc78:	add	x2, x2, #0xd60
    dc7c:	mov	w1, #0x29                  	// #41
    dc80:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dc84:	add	x0, x0, #0x6e8
    dc88:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dc8c:	add	x1, x23, #0x80, lsl #12
    dc90:	add	x1, x1, #0xc00
    dc94:	add	x20, x1, #0x1d0
    dc98:	ldr	x1, [x1, #464]
    dc9c:	mov	x2, #0x20000               	// #131072
    dca0:	add	x1, x1, x0, lsl #3
    dca4:	add	x0, x23, #0x80, lsl #12
    dca8:	add	x0, x0, #0xdd0
    dcac:	bl	1c668 <__sanitizer_set_report_fd@@Base+0x62b8>
    dcb0:	ldr	x0, [x20, #32]
    dcb4:	add	x0, x0, #0x4, lsl #12
    dcb8:	str	x0, [x20, #32]
    dcbc:	b	dae0 <__sancov_lowest_stack@@Base+0x2b0>
    dcc0:	mov	x4, #0x0                   	// #0
    dcc4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dcc8:	add	x2, x2, #0xd80
    dccc:	mov	w1, #0x42                  	// #66
    dcd0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    dcd4:	add	x0, x0, #0xdc0
    dcd8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    dcdc:	ldp	x21, x22, [sp, #16]
    dce0:	ldp	x23, x24, [sp, #32]
    dce4:	ldr	x30, [sp, #48]
    dce8:	ldp	x19, x20, [sp], #64
    dcec:	ret
    dcf0:	stp	x19, x20, [sp, #-80]!
    dcf4:	stp	x21, x22, [sp, #16]
    dcf8:	stp	x23, x24, [sp, #32]
    dcfc:	stp	x25, x26, [sp, #48]
    dd00:	str	x30, [sp, #64]
    dd04:	mov	x21, x0
    dd08:	mov	x20, x1
    dd0c:	mov	x23, x2
    dd10:	mov	x22, x3
    dd14:	ldr	x6, [x1]
    dd18:	ldr	x19, [x1, #8]
    dd1c:	lsr	x19, x19, #1
    dd20:	cmp	x19, x6
    dd24:	csel	x19, x19, x6, ls  // ls = plast
    dd28:	sub	x24, x6, x19
    dd2c:	add	x0, x0, x3, lsl #10
    dd30:	ldr	x25, [x0, #24]
    dd34:	cbnz	x25, dda8 <__sancov_lowest_stack@@Base+0x578>
    dd38:	add	x0, x24, #0x4
    dd3c:	ldr	x3, [x1, x0, lsl #3]
    dd40:	cbz	x3, de40 <__sancov_lowest_stack@@Base+0x610>
    dd44:	add	x6, x24, #0x4
    dd48:	add	x6, x20, x6, lsl #3
    dd4c:	str	x19, [x3, #8]
    dd50:	cbz	x19, dd70 <__sancov_lowest_stack@@Base+0x540>
    dd54:	mov	x4, #0x0                   	// #0
    dd58:	add	x1, x3, #0x10
    dd5c:	ldr	x5, [x6, x4, lsl #3]
    dd60:	str	x5, [x1, x4, lsl #3]
    dd64:	add	x4, x4, #0x1
    dd68:	cmp	x4, x19
    dd6c:	b.ne	dd5c <__sancov_lowest_stack@@Base+0x52c>  // b.any
    dd70:	ldr	x0, [x20]
    dd74:	sub	x19, x0, x19
    dd78:	str	x19, [x20]
    dd7c:	mov	x2, x22
    dd80:	add	x1, x21, #0xd, lsl #12
    dd84:	add	x1, x1, #0x800
    dd88:	mov	x0, x23
    dd8c:	bl	cc3c <__sanitizer_get_allocated_size@@Base+0x1364>
    dd90:	ldp	x21, x22, [sp, #16]
    dd94:	ldp	x23, x24, [sp, #32]
    dd98:	ldp	x25, x26, [sp, #48]
    dd9c:	ldr	x30, [sp, #64]
    dda0:	ldp	x19, x20, [sp], #80
    dda4:	ret
    dda8:	cmp	x25, #0x35
    ddac:	b.hi	de0c <__sancov_lowest_stack@@Base+0x5dc>  // b.pmore
    ddb0:	lsl	x26, x25, #10
    ddb4:	add	x1, x21, x26
    ddb8:	ldr	x0, [x21, x26]
    ddbc:	cbz	x0, de2c <__sancov_lowest_stack@@Base+0x5fc>
    ddc0:	ldr	x2, [x21, x26]
    ddc4:	sub	x1, x2, #0x1
    ddc8:	str	x1, [x21, x26]
    ddcc:	lsl	x0, x25, #7
    ddd0:	add	x1, x0, x1
    ddd4:	add	x1, x1, #0x4
    ddd8:	ldr	x3, [x21, x1, lsl #3]
    dddc:	add	x0, x0, x2
    dde0:	add	x0, x0, #0x2
    dde4:	ldr	x0, [x21, x0, lsl #3]
    dde8:	prfm	pldl1keep, [x0]
    ddec:	add	x1, x21, #0xd, lsl #12
    ddf0:	add	x1, x1, #0x800
    ddf4:	ldr	x0, [x1, #16]
    ddf8:	add	x25, x21, x25, lsl #10
    ddfc:	ldr	x2, [x25, #16]
    de00:	add	x0, x0, x2
    de04:	str	x0, [x1, #16]
    de08:	b	dd40 <__sancov_lowest_stack@@Base+0x510>
    de0c:	mov	x4, #0x36                  	// #54
    de10:	mov	x3, x25
    de14:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    de18:	add	x2, x2, #0xad0
    de1c:	mov	w1, #0xa0                  	// #160
    de20:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    de24:	add	x0, x0, #0xaf0
    de28:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    de2c:	mov	x3, x25
    de30:	mov	x0, x21
    de34:	bl	d510 <__sanitizer_get_allocated_size@@Base+0x1c38>
    de38:	and	w0, w0, #0xff
    de3c:	cbnz	w0, ddc0 <__sancov_lowest_stack@@Base+0x590>
    de40:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de44:	ldr	x0, [x0, #4008]
    de48:	ldr	x1, [x0]
    de4c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    de50:	add	x0, x0, #0xe10
    de54:	bl	1d908 <OnPrint@@Base+0x3d8>
    de58:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    de5c:	cbz	x2, e1b0 <__sancov_lowest_stack@@Base+0x980>
    de60:	stp	x19, x20, [sp, #-48]!
    de64:	stp	x21, x22, [sp, #16]
    de68:	str	x30, [sp, #40]
    de6c:	mov	x20, x0
    de70:	mov	x21, x1
    de74:	mov	x19, x2
    de78:	mov	x0, #0xffffffffffff        	// #281474976710655
    de7c:	cmp	x2, x0
    de80:	b.ls	df80 <__sancov_lowest_stack@@Base+0x750>  // b.plast
    de84:	add	x0, x20, #0x80, lsl #12
    de88:	add	x0, x0, #0xc00
    de8c:	ldr	x2, [x0, #448]
    de90:	sub	x0, x2, #0x1
    de94:	tst	x19, x0
    de98:	b.ne	e11c <__sancov_lowest_stack@@Base+0x8ec>  // b.any
    de9c:	sub	x19, x19, x2
    dea0:	add	x0, x20, #0x81, lsl #12
    dea4:	add	x0, x0, #0x28
    dea8:	mov	w2, #0x1                   	// #1
    deac:	ldxrb	w1, [x0]
    deb0:	stxrb	w3, w2, [x0]
    deb4:	cbnz	w3, deac <__sancov_lowest_stack@@Base+0x67c>
    deb8:	dmb	ish
    debc:	and	w1, w1, #0xff
    dec0:	cbnz	w1, e140 <__sancov_lowest_stack@@Base+0x910>
    dec4:	ldr	x1, [x19, #24]
    dec8:	add	x0, x20, #0x80, lsl #12
    decc:	add	x0, x0, #0xdc0
    ded0:	ldr	x2, [x0, #8]
    ded4:	ldr	x3, [x2, x1, lsl #3]
    ded8:	cmp	x3, x19
    dedc:	b.ne	e148 <__sancov_lowest_stack@@Base+0x918>  // b.any
    dee0:	add	x0, x20, #0x80, lsl #12
    dee4:	add	x0, x0, #0xdc0
    dee8:	ldr	x4, [x0, #56]
    deec:	cmp	x1, x4
    def0:	b.cs	e168 <__sancov_lowest_stack@@Base+0x938>  // b.hs, b.nlast
    def4:	sub	x4, x4, #0x1
    def8:	add	x0, x20, #0x80, lsl #12
    defc:	add	x0, x0, #0xdc0
    df00:	str	x4, [x0, #56]
    df04:	ldr	x3, [x2, x4, lsl #3]
    df08:	str	x3, [x2, x1, lsl #3]
    df0c:	ldr	x2, [x0, #8]
    df10:	ldr	x2, [x2, x1, lsl #3]
    df14:	str	x1, [x2, #24]
    df18:	strb	wzr, [x0, #64]
    df1c:	ldr	x1, [x0, #80]
    df20:	add	x1, x1, #0x1
    df24:	str	x1, [x0, #80]
    df28:	ldr	x1, [x0, #88]
    df2c:	ldr	x2, [x19, #8]
    df30:	sub	x1, x1, x2
    df34:	str	x1, [x0, #88]
    df38:	add	x20, x20, #0x81, lsl #12
    df3c:	ldr	x1, [x20, #64]
    df40:	ldr	x2, [x19, #8]
    df44:	sub	x1, x1, x2
    df48:	str	x1, [x20, #64]
    df4c:	ldr	x1, [x20, #72]
    df50:	ldr	x2, [x19, #8]
    df54:	sub	x1, x1, x2
    df58:	str	x1, [x20, #72]
    df5c:	dmb	ish
    df60:	strb	wzr, [x20, #40]
    df64:	ldr	x1, [x19, #8]
    df68:	ldr	x0, [x19]
    df6c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
    df70:	ldp	x21, x22, [sp, #16]
    df74:	ldr	x30, [sp, #40]
    df78:	ldp	x19, x20, [sp], #48
    df7c:	ret
    df80:	lsr	x0, x2, #20
    df84:	lsr	x2, x2, #32
    df88:	ldr	x1, [x20, x2, lsl #3]
    df8c:	dmb	ish
    df90:	cbz	x1, de84 <__sancov_lowest_stack@@Base+0x654>
    df94:	and	x0, x0, #0xfff
    df98:	ldrb	w1, [x1, x0]
    df9c:	cbz	w1, de84 <__sancov_lowest_stack@@Base+0x654>
    dfa0:	str	x23, [sp, #32]
    dfa4:	ldr	x1, [x20, x2, lsl #3]
    dfa8:	dmb	ish
    dfac:	cbz	x1, e01c <__sancov_lowest_stack@@Base+0x7ec>
    dfb0:	ldrb	w22, [x1, x0]
    dfb4:	cbz	x22, e01c <__sancov_lowest_stack@@Base+0x7ec>
    dfb8:	cmp	x22, #0x35
    dfbc:	b.hi	e03c <__sancov_lowest_stack@@Base+0x80c>  // b.pmore
    dfc0:	lsl	x23, x22, #10
    dfc4:	add	x1, x21, x23
    dfc8:	ldr	x6, [x1, #8]
    dfcc:	cbz	x6, e05c <__sancov_lowest_stack@@Base+0x82c>
    dfd0:	ldr	x2, [x21, x23]
    dfd4:	ldr	x0, [x1, #8]
    dfd8:	cmp	x2, x0
    dfdc:	b.eq	e108 <__sancov_lowest_stack@@Base+0x8d8>  // b.none
    dfe0:	ldr	x0, [x21, x23]
    dfe4:	add	x1, x0, #0x1
    dfe8:	str	x1, [x21, x23]
    dfec:	add	x0, x0, x22, lsl #7
    dff0:	add	x0, x0, #0x4
    dff4:	str	x19, [x21, x0, lsl #3]
    dff8:	add	x2, x21, #0xd, lsl #12
    dffc:	add	x2, x2, #0x800
    e000:	ldr	x0, [x2, #16]
    e004:	add	x1, x21, x22, lsl #10
    e008:	ldr	x1, [x1, #16]
    e00c:	sub	x0, x0, x1
    e010:	str	x0, [x2, #16]
    e014:	ldr	x23, [sp, #32]
    e018:	b	df70 <__sancov_lowest_stack@@Base+0x740>
    e01c:	mov	x4, #0x0                   	// #0
    e020:	mov	x3, #0x0                   	// #0
    e024:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e028:	add	x2, x2, #0xbf8
    e02c:	mov	w1, #0xae                  	// #174
    e030:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e034:	add	x0, x0, #0xaf0
    e038:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e03c:	mov	x4, #0x36                  	// #54
    e040:	mov	x3, x22
    e044:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e048:	add	x2, x2, #0xad0
    e04c:	mov	w1, #0xaf                  	// #175
    e050:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e054:	add	x0, x0, #0xaf0
    e058:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e05c:	add	x3, x21, #0x408
    e060:	mov	x2, #0x1                   	// #1
    e064:	mov	x7, #0x40                  	// #64
    e068:	mov	x14, #0x200                 	// #512
    e06c:	mov	x13, x6
    e070:	mov	x8, #0x14                  	// #20
    e074:	mov	w11, #0x4000                	// #16384
    e078:	mov	x10, x2
    e07c:	mov	x9, #0x3e                  	// #62
    e080:	mov	x12, #0x100                 	// #256
    e084:	b	e0f0 <__sancov_lowest_stack@@Base+0x8c0>
    e088:	sub	x5, x2, #0x10
    e08c:	lsr	x0, x5, #2
    e090:	lsl	x0, x12, x0
    e094:	lsr	x4, x0, #2
    e098:	and	x5, x5, #0x3
    e09c:	madd	x4, x4, x5, x0
    e0a0:	cbz	x4, e188 <__sancov_lowest_stack@@Base+0x958>
    e0a4:	udiv	w5, w11, w4
    e0a8:	mov	w0, w5
    e0ac:	cmp	w5, #0x40
    e0b0:	csel	x0, x0, x7, ls  // ls = plast
    e0b4:	cmp	x0, #0x0
    e0b8:	csel	x0, x0, x10, ne  // ne = any
    e0bc:	cmp	x0, #0x3e
    e0c0:	csel	x0, x0, x9, ls  // ls = plast
    e0c4:	lsl	x5, x0, #1
    e0c8:	str	x5, [x3]
    e0cc:	str	x4, [x3, #8]
    e0d0:	add	x0, x0, #0x2
    e0d4:	cmp	x4, x0, lsl #3
    e0d8:	csel	x0, x6, x8, cs  // cs = hs, nlast
    e0dc:	str	x0, [x3, #16]
    e0e0:	add	x2, x2, #0x1
    e0e4:	add	x3, x3, #0x400
    e0e8:	cmp	x2, #0x36
    e0ec:	b.eq	dfd0 <__sancov_lowest_stack@@Base+0x7a0>  // b.none
    e0f0:	cmp	x2, #0x35
    e0f4:	b.eq	e1a0 <__sancov_lowest_stack@@Base+0x970>  // b.none
    e0f8:	lsl	x4, x2, #4
    e0fc:	cmp	x2, #0x10
    e100:	b.hi	e088 <__sancov_lowest_stack@@Base+0x858>  // b.pmore
    e104:	b	e0a0 <__sancov_lowest_stack@@Base+0x870>
    e108:	mov	x3, x22
    e10c:	mov	x2, x20
    e110:	mov	x0, x21
    e114:	bl	dcf0 <__sancov_lowest_stack@@Base+0x4c0>
    e118:	b	dfe0 <__sancov_lowest_stack@@Base+0x7b0>
    e11c:	str	x23, [sp, #32]
    e120:	mov	x4, #0x0                   	// #0
    e124:	mov	x3, #0x0                   	// #0
    e128:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e12c:	add	x2, x2, #0x988
    e130:	mov	w1, #0x123                 	// #291
    e134:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e138:	add	x0, x0, #0x6e8
    e13c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e140:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
    e144:	b	dec4 <__sancov_lowest_stack@@Base+0x694>
    e148:	str	x23, [sp, #32]
    e14c:	mov	x4, x19
    e150:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e154:	add	x2, x2, #0x9b0
    e158:	mov	w1, #0x88                  	// #136
    e15c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e160:	add	x0, x0, #0x6e8
    e164:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e168:	str	x23, [sp, #32]
    e16c:	mov	x3, x1
    e170:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e174:	add	x2, x2, #0x9d0
    e178:	mov	w1, #0x89                  	// #137
    e17c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e180:	add	x0, x0, #0x6e8
    e184:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e188:	str	xzr, [x3]
    e18c:	str	xzr, [x3, #8]
    e190:	str	x8, [x3, #16]
    e194:	add	x2, x2, #0x1
    e198:	add	x3, x3, #0x400
    e19c:	b	e0f0 <__sancov_lowest_stack@@Base+0x8c0>
    e1a0:	str	x7, [x3]
    e1a4:	str	x14, [x3, #8]
    e1a8:	mov	x0, x13
    e1ac:	b	e0dc <__sancov_lowest_stack@@Base+0x8ac>
    e1b0:	ret

000000000000e1b4 <__interceptor_mallopt@@Base>:
    e1b4:	mov	w0, #0xffffffff            	// #-1
    e1b8:	ret

000000000000e1bc <__interceptor_malloc@@Base>:
    e1bc:	sub	sp, sp, #0x860
    e1c0:	stp	x29, x30, [sp]
    e1c4:	mov	x29, sp
    e1c8:	stp	x19, x20, [sp, #16]
    e1cc:	stp	x21, x22, [sp, #32]
    e1d0:	str	x23, [sp, #48]
    e1d4:	mov	x20, x0
    e1d8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e1dc:	ldr	x1, [x1, #4048]
    e1e0:	ldrb	w0, [x1]
    e1e4:	cbnz	w0, e274 <__interceptor_malloc@@Base+0xb8>
    e1e8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e1ec:	ldr	x0, [x0, #3592]
    e1f0:	ldrb	w0, [x0]
    e1f4:	cbz	w0, e294 <__interceptor_malloc@@Base+0xd8>
    e1f8:	add	x0, x29, #0x58
    e1fc:	str	x0, [x29, #72]
    e200:	str	wzr, [x29, #80]
    e204:	str	wzr, [x29, #84]
    e208:	str	xzr, [x29, #2136]
    e20c:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e210:	ldr	x19, [x19, #4040]
    e214:	ldrsw	x23, [x19, #36]
    e218:	bl	1f460 <OnPrint@@Base+0x1f30>
    e21c:	mov	x21, x0
    e220:	ldrb	w22, [x19, #34]
    e224:	mov	x6, #0x0                   	// #0
    e228:	mov	x5, #0x0                   	// #0
    e22c:	cbnz	w22, e29c <__interceptor_malloc@@Base+0xe0>
    e230:	add	x19, x29, #0x48
    e234:	mov	w7, w22
    e238:	mov	x4, #0x0                   	// #0
    e23c:	mov	x3, x29
    e240:	mov	x2, x21
    e244:	mov	w1, w23
    e248:	mov	x0, x19
    e24c:	bl	1fc70 <OnPrint@@Base+0x2740>
    e250:	mov	x1, x19
    e254:	mov	x0, x20
    e258:	bl	c154 <__sanitizer_get_allocated_size@@Base+0x87c>
    e25c:	ldp	x19, x20, [sp, #16]
    e260:	ldp	x21, x22, [sp, #32]
    e264:	ldr	x23, [sp, #48]
    e268:	ldp	x29, x30, [sp]
    e26c:	add	sp, sp, #0x860
    e270:	ret
    e274:	mov	x4, #0x0                   	// #0
    e278:	mov	x3, #0x0                   	// #0
    e27c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e280:	add	x2, x2, #0x5a8
    e284:	mov	w1, #0x34                  	// #52
    e288:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e28c:	add	x0, x0, #0xe60
    e290:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e294:	bl	6b40 <__lsan_init@plt>
    e298:	b	e1f8 <__interceptor_malloc@@Base+0x3c>
    e29c:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e2a0:	cbz	x0, e2b0 <__interceptor_malloc@@Base+0xf4>
    e2a4:	ldr	x5, [x0, #152]
    e2a8:	ldr	x6, [x0, #144]
    e2ac:	b	e230 <__interceptor_malloc@@Base+0x74>
    e2b0:	mov	x6, #0x0                   	// #0
    e2b4:	mov	x5, #0x0                   	// #0
    e2b8:	b	e230 <__interceptor_malloc@@Base+0x74>

000000000000e2bc <__interceptor_cfree@@Base>:
    e2bc:	stp	x19, x30, [sp, #-16]!
    e2c0:	mov	x19, x0
    e2c4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e2c8:	ldr	x1, [x1, #4048]
    e2cc:	ldrb	w0, [x1]
    e2d0:	cbnz	w0, e2f4 <__interceptor_cfree@@Base+0x38>
    e2d4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e2d8:	ldr	x0, [x0, #3592]
    e2dc:	ldrb	w0, [x0]
    e2e0:	cbz	w0, e314 <__interceptor_cfree@@Base+0x58>
    e2e4:	mov	x0, x19
    e2e8:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    e2ec:	ldp	x19, x30, [sp], #16
    e2f0:	ret
    e2f4:	mov	x4, #0x0                   	// #0
    e2f8:	mov	x3, #0x0                   	// #0
    e2fc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e300:	add	x2, x2, #0x5a8
    e304:	mov	w1, #0x3a                  	// #58
    e308:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e30c:	add	x0, x0, #0xe60
    e310:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e314:	bl	6b40 <__lsan_init@plt>
    e318:	b	e2e4 <__interceptor_cfree@@Base+0x28>

000000000000e31c <__interceptor_calloc@@Base>:
    e31c:	sub	sp, sp, #0x860
    e320:	stp	x29, x30, [sp]
    e324:	mov	x29, sp
    e328:	stp	x19, x20, [sp, #16]
    e32c:	mov	x20, x0
    e330:	mov	x19, x1
    e334:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e338:	ldr	x2, [x2, #4048]
    e33c:	ldrb	w0, [x2]
    e340:	cbz	w0, e3a8 <__interceptor_calloc@@Base+0x8c>
    e344:	adrp	x1, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    e348:	ldr	x3, [x1, #3904]
    e34c:	adrp	x2, e5000 <__asan_cplus_demangle_operators@@Base+0x84be0>
    e350:	add	x2, x2, #0x8
    e354:	add	x0, x2, x3, lsl #3
    e358:	mul	x19, x20, x19
    e35c:	add	x19, x19, #0x7
    e360:	add	x19, x3, x19, lsr #3
    e364:	str	x19, [x1, #3904]
    e368:	cmp	x19, #0x3ff
    e36c:	b.hi	e380 <__interceptor_calloc@@Base+0x64>  // b.pmore
    e370:	ldp	x19, x20, [sp, #16]
    e374:	ldp	x29, x30, [sp]
    e378:	add	sp, sp, #0x860
    e37c:	ret
    e380:	stp	x21, x22, [x29, #32]
    e384:	stp	x23, x24, [x29, #48]
    e388:	mov	x4, #0x0                   	// #0
    e38c:	mov	x3, #0x0                   	// #0
    e390:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e394:	add	x2, x2, #0xe98
    e398:	mov	w1, #0x47                  	// #71
    e39c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e3a0:	add	x0, x0, #0xe60
    e3a4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e3a8:	stp	x21, x22, [x29, #32]
    e3ac:	stp	x23, x24, [x29, #48]
    e3b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e3b4:	ldr	x0, [x0, #3592]
    e3b8:	ldrb	w0, [x0]
    e3bc:	cbz	w0, e434 <__interceptor_calloc@@Base+0x118>
    e3c0:	add	x0, x29, #0x58
    e3c4:	str	x0, [x29, #72]
    e3c8:	str	wzr, [x29, #80]
    e3cc:	str	wzr, [x29, #84]
    e3d0:	str	xzr, [x29, #2136]
    e3d4:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e3d8:	ldr	x21, [x21, #4040]
    e3dc:	ldrsw	x24, [x21, #36]
    e3e0:	bl	1f460 <OnPrint@@Base+0x1f30>
    e3e4:	mov	x22, x0
    e3e8:	ldrb	w23, [x21, #34]
    e3ec:	mov	x6, #0x0                   	// #0
    e3f0:	mov	x5, #0x0                   	// #0
    e3f4:	cbnz	w23, e43c <__interceptor_calloc@@Base+0x120>
    e3f8:	add	x21, x29, #0x48
    e3fc:	mov	w7, w23
    e400:	mov	x4, #0x0                   	// #0
    e404:	mov	x3, x29
    e408:	mov	x2, x22
    e40c:	mov	w1, w24
    e410:	mov	x0, x21
    e414:	bl	1fc70 <OnPrint@@Base+0x2740>
    e418:	mov	x2, x21
    e41c:	mov	x1, x19
    e420:	mov	x0, x20
    e424:	bl	c18c <__sanitizer_get_allocated_size@@Base+0x8b4>
    e428:	ldp	x21, x22, [x29, #32]
    e42c:	ldp	x23, x24, [x29, #48]
    e430:	b	e370 <__interceptor_calloc@@Base+0x54>
    e434:	bl	6b40 <__lsan_init@plt>
    e438:	b	e3c0 <__interceptor_calloc@@Base+0xa4>
    e43c:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e440:	cbz	x0, e450 <__interceptor_calloc@@Base+0x134>
    e444:	ldr	x5, [x0, #152]
    e448:	ldr	x6, [x0, #144]
    e44c:	b	e3f8 <__interceptor_calloc@@Base+0xdc>
    e450:	mov	x6, #0x0                   	// #0
    e454:	mov	x5, #0x0                   	// #0
    e458:	b	e3f8 <__interceptor_calloc@@Base+0xdc>

000000000000e45c <__interceptor_realloc@@Base>:
    e45c:	sub	sp, sp, #0x860
    e460:	stp	x29, x30, [sp]
    e464:	mov	x29, sp
    e468:	stp	x19, x20, [sp, #16]
    e46c:	stp	x21, x22, [sp, #32]
    e470:	stp	x23, x24, [sp, #48]
    e474:	mov	x20, x0
    e478:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e47c:	ldr	x2, [x2, #4048]
    e480:	ldrb	w0, [x2]
    e484:	cbnz	w0, e51c <__interceptor_realloc@@Base+0xc0>
    e488:	mov	x21, x1
    e48c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e490:	ldr	x0, [x0, #3592]
    e494:	ldrb	w0, [x0]
    e498:	cbz	w0, e53c <__interceptor_realloc@@Base+0xe0>
    e49c:	add	x0, x29, #0x58
    e4a0:	str	x0, [x29, #72]
    e4a4:	str	wzr, [x29, #80]
    e4a8:	str	wzr, [x29, #84]
    e4ac:	str	xzr, [x29, #2136]
    e4b0:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e4b4:	ldr	x19, [x19, #4040]
    e4b8:	ldrsw	x24, [x19, #36]
    e4bc:	bl	1f460 <OnPrint@@Base+0x1f30>
    e4c0:	mov	x22, x0
    e4c4:	ldrb	w23, [x19, #34]
    e4c8:	mov	x6, #0x0                   	// #0
    e4cc:	mov	x5, #0x0                   	// #0
    e4d0:	cbnz	w23, e544 <__interceptor_realloc@@Base+0xe8>
    e4d4:	add	x19, x29, #0x48
    e4d8:	mov	w7, w23
    e4dc:	mov	x4, #0x0                   	// #0
    e4e0:	mov	x3, x29
    e4e4:	mov	x2, x22
    e4e8:	mov	w1, w24
    e4ec:	mov	x0, x19
    e4f0:	bl	1fc70 <OnPrint@@Base+0x2740>
    e4f4:	mov	x2, x19
    e4f8:	mov	x1, x21
    e4fc:	mov	x0, x20
    e500:	bl	cba4 <__sanitizer_get_allocated_size@@Base+0x12cc>
    e504:	ldp	x19, x20, [sp, #16]
    e508:	ldp	x21, x22, [sp, #32]
    e50c:	ldp	x23, x24, [sp, #48]
    e510:	ldp	x29, x30, [sp]
    e514:	add	sp, sp, #0x860
    e518:	ret
    e51c:	mov	x4, #0x0                   	// #0
    e520:	mov	x3, #0x0                   	// #0
    e524:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e528:	add	x2, x2, #0x5a8
    e52c:	mov	w1, #0x50                  	// #80
    e530:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e534:	add	x0, x0, #0xe60
    e538:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e53c:	bl	6b40 <__lsan_init@plt>
    e540:	b	e49c <__interceptor_realloc@@Base+0x40>
    e544:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e548:	cbz	x0, e558 <__interceptor_realloc@@Base+0xfc>
    e54c:	ldr	x5, [x0, #152]
    e550:	ldr	x6, [x0, #144]
    e554:	b	e4d4 <__interceptor_realloc@@Base+0x78>
    e558:	mov	x6, #0x0                   	// #0
    e55c:	mov	x5, #0x0                   	// #0
    e560:	b	e4d4 <__interceptor_realloc@@Base+0x78>

000000000000e564 <__interceptor_posix_memalign@@Base>:
    e564:	sub	sp, sp, #0x870
    e568:	stp	x29, x30, [sp]
    e56c:	mov	x29, sp
    e570:	stp	x19, x20, [sp, #16]
    e574:	stp	x21, x22, [sp, #32]
    e578:	stp	x23, x24, [sp, #48]
    e57c:	str	x25, [sp, #64]
    e580:	mov	x20, x0
    e584:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e588:	ldr	x3, [x3, #4048]
    e58c:	ldrb	w0, [x3]
    e590:	cbnz	w0, e634 <__interceptor_posix_memalign@@Base+0xd0>
    e594:	mov	x21, x1
    e598:	mov	x22, x2
    e59c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e5a0:	ldr	x0, [x0, #3592]
    e5a4:	ldrb	w0, [x0]
    e5a8:	cbz	w0, e654 <__interceptor_posix_memalign@@Base+0xf0>
    e5ac:	add	x0, x29, #0x68
    e5b0:	str	x0, [x29, #88]
    e5b4:	str	wzr, [x29, #96]
    e5b8:	str	wzr, [x29, #100]
    e5bc:	str	xzr, [x29, #2152]
    e5c0:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e5c4:	ldr	x19, [x19, #4040]
    e5c8:	ldrsw	x25, [x19, #36]
    e5cc:	bl	1f460 <OnPrint@@Base+0x1f30>
    e5d0:	mov	x23, x0
    e5d4:	ldrb	w24, [x19, #34]
    e5d8:	mov	x6, #0x0                   	// #0
    e5dc:	mov	x5, #0x0                   	// #0
    e5e0:	cbnz	w24, e65c <__interceptor_posix_memalign@@Base+0xf8>
    e5e4:	add	x19, x29, #0x58
    e5e8:	mov	w7, w24
    e5ec:	mov	x4, #0x0                   	// #0
    e5f0:	mov	x3, x29
    e5f4:	mov	x2, x23
    e5f8:	mov	w1, w25
    e5fc:	mov	x0, x19
    e600:	bl	1fc70 <OnPrint@@Base+0x2740>
    e604:	mov	x3, x19
    e608:	mov	x2, x22
    e60c:	mov	x1, x21
    e610:	mov	x0, x20
    e614:	bl	bf9c <__sanitizer_get_allocated_size@@Base+0x6c4>
    e618:	ldp	x19, x20, [sp, #16]
    e61c:	ldp	x21, x22, [sp, #32]
    e620:	ldp	x23, x24, [sp, #48]
    e624:	ldr	x25, [sp, #64]
    e628:	ldp	x29, x30, [sp]
    e62c:	add	sp, sp, #0x870
    e630:	ret
    e634:	mov	x4, #0x0                   	// #0
    e638:	mov	x3, #0x0                   	// #0
    e63c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e640:	add	x2, x2, #0x5a8
    e644:	mov	w1, #0x56                  	// #86
    e648:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e64c:	add	x0, x0, #0xe60
    e650:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e654:	bl	6b40 <__lsan_init@plt>
    e658:	b	e5ac <__interceptor_posix_memalign@@Base+0x48>
    e65c:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e660:	cbz	x0, e670 <__interceptor_posix_memalign@@Base+0x10c>
    e664:	ldr	x5, [x0, #152]
    e668:	ldr	x6, [x0, #144]
    e66c:	b	e5e4 <__interceptor_posix_memalign@@Base+0x80>
    e670:	mov	x6, #0x0                   	// #0
    e674:	mov	x5, #0x0                   	// #0
    e678:	b	e5e4 <__interceptor_posix_memalign@@Base+0x80>

000000000000e67c <__interceptor_valloc@@Base>:
    e67c:	sub	sp, sp, #0x860
    e680:	stp	x29, x30, [sp]
    e684:	mov	x29, sp
    e688:	stp	x19, x20, [sp, #16]
    e68c:	stp	x21, x22, [sp, #32]
    e690:	str	x23, [sp, #48]
    e694:	mov	x20, x0
    e698:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e69c:	ldr	x1, [x1, #4048]
    e6a0:	ldrb	w0, [x1]
    e6a4:	cbnz	w0, e734 <__interceptor_valloc@@Base+0xb8>
    e6a8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e6ac:	ldr	x0, [x0, #3592]
    e6b0:	ldrb	w0, [x0]
    e6b4:	cbz	w0, e754 <__interceptor_valloc@@Base+0xd8>
    e6b8:	add	x0, x29, #0x58
    e6bc:	str	x0, [x29, #72]
    e6c0:	str	wzr, [x29, #80]
    e6c4:	str	wzr, [x29, #84]
    e6c8:	str	xzr, [x29, #2136]
    e6cc:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e6d0:	ldr	x19, [x19, #4040]
    e6d4:	ldrsw	x23, [x19, #36]
    e6d8:	bl	1f460 <OnPrint@@Base+0x1f30>
    e6dc:	mov	x21, x0
    e6e0:	ldrb	w22, [x19, #34]
    e6e4:	mov	x6, #0x0                   	// #0
    e6e8:	mov	x5, #0x0                   	// #0
    e6ec:	cbnz	w22, e75c <__interceptor_valloc@@Base+0xe0>
    e6f0:	add	x19, x29, #0x48
    e6f4:	mov	w7, w22
    e6f8:	mov	x4, #0x0                   	// #0
    e6fc:	mov	x3, x29
    e700:	mov	x2, x21
    e704:	mov	w1, w23
    e708:	mov	x0, x19
    e70c:	bl	1fc70 <OnPrint@@Base+0x2740>
    e710:	mov	x1, x19
    e714:	mov	x0, x20
    e718:	bl	c1f8 <__sanitizer_get_allocated_size@@Base+0x920>
    e71c:	ldp	x19, x20, [sp, #16]
    e720:	ldp	x21, x22, [sp, #32]
    e724:	ldr	x23, [sp, #48]
    e728:	ldp	x29, x30, [sp]
    e72c:	add	sp, sp, #0x860
    e730:	ret
    e734:	mov	x4, #0x0                   	// #0
    e738:	mov	x3, #0x0                   	// #0
    e73c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e740:	add	x2, x2, #0x5a8
    e744:	mov	w1, #0x5c                  	// #92
    e748:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e74c:	add	x0, x0, #0xe60
    e750:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e754:	bl	6b40 <__lsan_init@plt>
    e758:	b	e6b8 <__interceptor_valloc@@Base+0x3c>
    e75c:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e760:	cbz	x0, e770 <__interceptor_valloc@@Base+0xf4>
    e764:	ldr	x5, [x0, #152]
    e768:	ldr	x6, [x0, #144]
    e76c:	b	e6f0 <__interceptor_valloc@@Base+0x74>
    e770:	mov	x6, #0x0                   	// #0
    e774:	mov	x5, #0x0                   	// #0
    e778:	b	e6f0 <__interceptor_valloc@@Base+0x74>

000000000000e77c <__interceptor_memalign@@Base>:
    e77c:	sub	sp, sp, #0x860
    e780:	stp	x29, x30, [sp]
    e784:	mov	x29, sp
    e788:	stp	x19, x20, [sp, #16]
    e78c:	stp	x21, x22, [sp, #32]
    e790:	stp	x23, x24, [sp, #48]
    e794:	mov	x20, x0
    e798:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e79c:	ldr	x2, [x2, #4048]
    e7a0:	ldrb	w0, [x2]
    e7a4:	cbnz	w0, e83c <__interceptor_memalign@@Base+0xc0>
    e7a8:	mov	x21, x1
    e7ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e7b0:	ldr	x0, [x0, #3592]
    e7b4:	ldrb	w0, [x0]
    e7b8:	cbz	w0, e85c <__interceptor_memalign@@Base+0xe0>
    e7bc:	add	x0, x29, #0x58
    e7c0:	str	x0, [x29, #72]
    e7c4:	str	wzr, [x29, #80]
    e7c8:	str	wzr, [x29, #84]
    e7cc:	str	xzr, [x29, #2136]
    e7d0:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e7d4:	ldr	x19, [x19, #4040]
    e7d8:	ldrsw	x24, [x19, #36]
    e7dc:	bl	1f460 <OnPrint@@Base+0x1f30>
    e7e0:	mov	x22, x0
    e7e4:	ldrb	w23, [x19, #34]
    e7e8:	mov	x6, #0x0                   	// #0
    e7ec:	mov	x5, #0x0                   	// #0
    e7f0:	cbnz	w23, e864 <__interceptor_memalign@@Base+0xe8>
    e7f4:	add	x19, x29, #0x48
    e7f8:	mov	w7, w23
    e7fc:	mov	x4, #0x0                   	// #0
    e800:	mov	x3, x29
    e804:	mov	x2, x22
    e808:	mov	w1, w24
    e80c:	mov	x0, x19
    e810:	bl	1fc70 <OnPrint@@Base+0x2740>
    e814:	mov	x2, x19
    e818:	mov	x1, x21
    e81c:	mov	x0, x20
    e820:	bl	c0e0 <__sanitizer_get_allocated_size@@Base+0x808>
    e824:	ldp	x19, x20, [sp, #16]
    e828:	ldp	x21, x22, [sp, #32]
    e82c:	ldp	x23, x24, [sp, #48]
    e830:	ldp	x29, x30, [sp]
    e834:	add	sp, sp, #0x860
    e838:	ret
    e83c:	mov	x4, #0x0                   	// #0
    e840:	mov	x3, #0x0                   	// #0
    e844:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e848:	add	x2, x2, #0x5a8
    e84c:	mov	w1, #0x64                  	// #100
    e850:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e854:	add	x0, x0, #0xe60
    e858:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e85c:	bl	6b40 <__lsan_init@plt>
    e860:	b	e7bc <__interceptor_memalign@@Base+0x40>
    e864:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e868:	cbz	x0, e878 <__interceptor_memalign@@Base+0xfc>
    e86c:	ldr	x5, [x0, #152]
    e870:	ldr	x6, [x0, #144]
    e874:	b	e7f4 <__interceptor_memalign@@Base+0x78>
    e878:	mov	x6, #0x0                   	// #0
    e87c:	mov	x5, #0x0                   	// #0
    e880:	b	e7f4 <__interceptor_memalign@@Base+0x78>

000000000000e884 <__interceptor___libc_memalign@@Base>:
    e884:	sub	sp, sp, #0x860
    e888:	stp	x29, x30, [sp]
    e88c:	mov	x29, sp
    e890:	stp	x19, x20, [sp, #16]
    e894:	stp	x21, x22, [sp, #32]
    e898:	stp	x23, x24, [sp, #48]
    e89c:	mov	x21, x0
    e8a0:	mov	x19, x1
    e8a4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e8a8:	ldr	x1, [x1, #4048]
    e8ac:	ldrb	w0, [x1]
    e8b0:	cbnz	w0, e954 <__interceptor___libc_memalign@@Base+0xd0>
    e8b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e8b8:	ldr	x0, [x0, #3592]
    e8bc:	ldrb	w0, [x0]
    e8c0:	cbz	w0, e974 <__interceptor___libc_memalign@@Base+0xf0>
    e8c4:	add	x0, x29, #0x58
    e8c8:	str	x0, [x29, #72]
    e8cc:	str	wzr, [x29, #80]
    e8d0:	str	wzr, [x29, #84]
    e8d4:	str	xzr, [x29, #2136]
    e8d8:	adrp	x20, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e8dc:	ldr	x20, [x20, #4040]
    e8e0:	ldrsw	x24, [x20, #36]
    e8e4:	bl	1f460 <OnPrint@@Base+0x1f30>
    e8e8:	mov	x22, x0
    e8ec:	ldrb	w23, [x20, #34]
    e8f0:	mov	x6, #0x0                   	// #0
    e8f4:	mov	x5, #0x0                   	// #0
    e8f8:	cbnz	w23, e97c <__interceptor___libc_memalign@@Base+0xf8>
    e8fc:	add	x20, x29, #0x48
    e900:	mov	w7, w23
    e904:	mov	x4, #0x0                   	// #0
    e908:	mov	x3, x29
    e90c:	mov	x2, x22
    e910:	mov	w1, w24
    e914:	mov	x0, x20
    e918:	bl	1fc70 <OnPrint@@Base+0x2740>
    e91c:	mov	x2, x20
    e920:	mov	x1, x19
    e924:	mov	x0, x21
    e928:	bl	c0e0 <__sanitizer_get_allocated_size@@Base+0x808>
    e92c:	mov	x20, x0
    e930:	mov	x1, x19
    e934:	bl	27840 <__sanitizer_set_death_callback@@Base+0x12c4>
    e938:	mov	x0, x20
    e93c:	ldp	x19, x20, [sp, #16]
    e940:	ldp	x21, x22, [sp, #32]
    e944:	ldp	x23, x24, [sp, #48]
    e948:	ldp	x29, x30, [sp]
    e94c:	add	sp, sp, #0x860
    e950:	ret
    e954:	mov	x4, #0x0                   	// #0
    e958:	mov	x3, #0x0                   	// #0
    e95c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e960:	add	x2, x2, #0x5a8
    e964:	mov	w1, #0x6b                  	// #107
    e968:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    e96c:	add	x0, x0, #0xe60
    e970:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    e974:	bl	6b40 <__lsan_init@plt>
    e978:	b	e8c4 <__interceptor___libc_memalign@@Base+0x40>
    e97c:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    e980:	cbz	x0, e990 <__interceptor___libc_memalign@@Base+0x10c>
    e984:	ldr	x5, [x0, #152]
    e988:	ldr	x6, [x0, #144]
    e98c:	b	e8fc <__interceptor___libc_memalign@@Base+0x78>
    e990:	mov	x6, #0x0                   	// #0
    e994:	mov	x5, #0x0                   	// #0
    e998:	b	e8fc <__interceptor___libc_memalign@@Base+0x78>

000000000000e99c <__interceptor_aligned_alloc@@Base>:
    e99c:	sub	sp, sp, #0x860
    e9a0:	stp	x29, x30, [sp]
    e9a4:	mov	x29, sp
    e9a8:	stp	x19, x20, [sp, #16]
    e9ac:	stp	x21, x22, [sp, #32]
    e9b0:	stp	x23, x24, [sp, #48]
    e9b4:	mov	x20, x0
    e9b8:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e9bc:	ldr	x2, [x2, #4048]
    e9c0:	ldrb	w0, [x2]
    e9c4:	cbnz	w0, ea5c <__interceptor_aligned_alloc@@Base+0xc0>
    e9c8:	mov	x21, x1
    e9cc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e9d0:	ldr	x0, [x0, #3592]
    e9d4:	ldrb	w0, [x0]
    e9d8:	cbz	w0, ea7c <__interceptor_aligned_alloc@@Base+0xe0>
    e9dc:	add	x0, x29, #0x58
    e9e0:	str	x0, [x29, #72]
    e9e4:	str	wzr, [x29, #80]
    e9e8:	str	wzr, [x29, #84]
    e9ec:	str	xzr, [x29, #2136]
    e9f0:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e9f4:	ldr	x19, [x19, #4040]
    e9f8:	ldrsw	x24, [x19, #36]
    e9fc:	bl	1f460 <OnPrint@@Base+0x1f30>
    ea00:	mov	x22, x0
    ea04:	ldrb	w23, [x19, #34]
    ea08:	mov	x6, #0x0                   	// #0
    ea0c:	mov	x5, #0x0                   	// #0
    ea10:	cbnz	w23, ea84 <__interceptor_aligned_alloc@@Base+0xe8>
    ea14:	add	x19, x29, #0x48
    ea18:	mov	w7, w23
    ea1c:	mov	x4, #0x0                   	// #0
    ea20:	mov	x3, x29
    ea24:	mov	x2, x22
    ea28:	mov	w1, w24
    ea2c:	mov	x0, x19
    ea30:	bl	1fc70 <OnPrint@@Base+0x2740>
    ea34:	mov	x2, x19
    ea38:	mov	x1, x21
    ea3c:	mov	x0, x20
    ea40:	bl	c050 <__sanitizer_get_allocated_size@@Base+0x778>
    ea44:	ldp	x19, x20, [sp, #16]
    ea48:	ldp	x21, x22, [sp, #32]
    ea4c:	ldp	x23, x24, [sp, #48]
    ea50:	ldp	x29, x30, [sp]
    ea54:	add	sp, sp, #0x860
    ea58:	ret
    ea5c:	mov	x4, #0x0                   	// #0
    ea60:	mov	x3, #0x0                   	// #0
    ea64:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ea68:	add	x2, x2, #0x5a8
    ea6c:	mov	w1, #0x79                  	// #121
    ea70:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ea74:	add	x0, x0, #0xe60
    ea78:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ea7c:	bl	6b40 <__lsan_init@plt>
    ea80:	b	e9dc <__interceptor_aligned_alloc@@Base+0x40>
    ea84:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    ea88:	cbz	x0, ea98 <__interceptor_aligned_alloc@@Base+0xfc>
    ea8c:	ldr	x5, [x0, #152]
    ea90:	ldr	x6, [x0, #144]
    ea94:	b	ea14 <__interceptor_aligned_alloc@@Base+0x78>
    ea98:	mov	x6, #0x0                   	// #0
    ea9c:	mov	x5, #0x0                   	// #0
    eaa0:	b	ea14 <__interceptor_aligned_alloc@@Base+0x78>

000000000000eaa4 <__interceptor_malloc_usable_size@@Base>:
    eaa4:	stp	x19, x30, [sp, #-16]!
    eaa8:	mov	x19, x0
    eaac:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eab0:	ldr	x1, [x1, #4048]
    eab4:	ldrb	w0, [x1]
    eab8:	cbnz	w0, eadc <__interceptor_malloc_usable_size@@Base+0x38>
    eabc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eac0:	ldr	x0, [x0, #3592]
    eac4:	ldrb	w0, [x0]
    eac8:	cbz	w0, eafc <__interceptor_malloc_usable_size@@Base+0x58>
    eacc:	mov	x0, x19
    ead0:	bl	b298 <__sanitizer_print_stack_trace@@Base+0x47c>
    ead4:	ldp	x19, x30, [sp], #16
    ead8:	ret
    eadc:	mov	x4, #0x0                   	// #0
    eae0:	mov	x3, #0x0                   	// #0
    eae4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    eae8:	add	x2, x2, #0x5a8
    eaec:	mov	w1, #0x84                  	// #132
    eaf0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    eaf4:	add	x0, x0, #0xe60
    eaf8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    eafc:	bl	6b40 <__lsan_init@plt>
    eb00:	b	eacc <__interceptor_malloc_usable_size@@Base+0x28>

000000000000eb04 <__interceptor_mallinfo@@Base>:
    eb04:	str	x30, [sp, #-16]!
    eb08:	mov	x0, x8
    eb0c:	mov	x2, #0x28                  	// #40
    eb10:	mov	w1, #0x0                   	// #0
    eb14:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
    eb18:	ldr	x30, [sp], #16
    eb1c:	ret

000000000000eb20 <__interceptor_pvalloc@@Base>:
    eb20:	sub	sp, sp, #0x860
    eb24:	stp	x29, x30, [sp]
    eb28:	mov	x29, sp
    eb2c:	stp	x19, x20, [sp, #16]
    eb30:	stp	x21, x22, [sp, #32]
    eb34:	str	x23, [sp, #48]
    eb38:	mov	x20, x0
    eb3c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eb40:	ldr	x1, [x1, #4048]
    eb44:	ldrb	w0, [x1]
    eb48:	cbnz	w0, ebd8 <__interceptor_pvalloc@@Base+0xb8>
    eb4c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eb50:	ldr	x0, [x0, #3592]
    eb54:	ldrb	w0, [x0]
    eb58:	cbz	w0, ebf8 <__interceptor_pvalloc@@Base+0xd8>
    eb5c:	add	x0, x29, #0x58
    eb60:	str	x0, [x29, #72]
    eb64:	str	wzr, [x29, #80]
    eb68:	str	wzr, [x29, #84]
    eb6c:	str	xzr, [x29, #2136]
    eb70:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eb74:	ldr	x19, [x19, #4040]
    eb78:	ldrsw	x23, [x19, #36]
    eb7c:	bl	1f460 <OnPrint@@Base+0x1f30>
    eb80:	mov	x21, x0
    eb84:	ldrb	w22, [x19, #34]
    eb88:	mov	x6, #0x0                   	// #0
    eb8c:	mov	x5, #0x0                   	// #0
    eb90:	cbnz	w22, ec00 <__interceptor_pvalloc@@Base+0xe0>
    eb94:	add	x19, x29, #0x48
    eb98:	mov	w7, w22
    eb9c:	mov	x4, #0x0                   	// #0
    eba0:	mov	x3, x29
    eba4:	mov	x2, x21
    eba8:	mov	w1, w23
    ebac:	mov	x0, x19
    ebb0:	bl	1fc70 <OnPrint@@Base+0x2740>
    ebb4:	mov	x1, x19
    ebb8:	mov	x0, x20
    ebbc:	bl	c268 <__sanitizer_get_allocated_size@@Base+0x990>
    ebc0:	ldp	x19, x20, [sp, #16]
    ebc4:	ldp	x21, x22, [sp, #32]
    ebc8:	ldr	x23, [sp, #48]
    ebcc:	ldp	x29, x30, [sp]
    ebd0:	add	sp, sp, #0x860
    ebd4:	ret
    ebd8:	mov	x4, #0x0                   	// #0
    ebdc:	mov	x3, #0x0                   	// #0
    ebe0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ebe4:	add	x2, x2, #0x5a8
    ebe8:	mov	w1, #0xa4                  	// #164
    ebec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ebf0:	add	x0, x0, #0xe60
    ebf4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ebf8:	bl	6b40 <__lsan_init@plt>
    ebfc:	b	eb5c <__interceptor_pvalloc@@Base+0x3c>
    ec00:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    ec04:	cbz	x0, ec14 <__interceptor_pvalloc@@Base+0xf4>
    ec08:	ldr	x5, [x0, #152]
    ec0c:	ldr	x6, [x0, #144]
    ec10:	b	eb94 <__interceptor_pvalloc@@Base+0x74>
    ec14:	mov	x6, #0x0                   	// #0
    ec18:	mov	x5, #0x0                   	// #0
    ec1c:	b	eb94 <__interceptor_pvalloc@@Base+0x74>
    ec20:	stp	x19, x20, [sp, #-48]!
    ec24:	stp	x21, x22, [sp, #16]
    ec28:	str	x30, [sp, #32]
    ec2c:	mov	x20, x0
    ec30:	ldr	x21, [x0]
    ec34:	ldr	x22, [x0, #8]
    ec38:	mov	x1, #0x4                   	// #4
    ec3c:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ec40:	ldr	w0, [x0, #3912]
    ec44:	bl	69e0 <pthread_setspecific@plt>
    ec48:	cbnz	w0, ec60 <__interceptor_pvalloc@@Base+0x140>
    ec4c:	ldr	x19, [x20, #16]
    ec50:	dmb	ish
    ec54:	cbnz	w19, ec70 <__interceptor_pvalloc@@Base+0x150>
    ec58:	bl	18bd0 <__sanitizer_set_report_fd@@Base+0x2820>
    ec5c:	b	ec4c <__interceptor_pvalloc@@Base+0x12c>
    ec60:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ec64:	add	x0, x0, #0xec0
    ec68:	bl	1d908 <OnPrint@@Base+0x3d8>
    ec6c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ec70:	mov	w0, w19
    ec74:	bl	aee4 <__sanitizer_print_stack_trace@@Base+0xc8>
    ec78:	bl	18c70 <__sanitizer_set_report_fd@@Base+0x28c0>
    ec7c:	mov	w2, #0x0                   	// #0
    ec80:	mov	x1, x0
    ec84:	mov	w0, w19
    ec88:	bl	100d4 <_ZdaPvmSt11align_val_t@@Base+0x484>
    ec8c:	dmb	ish
    ec90:	str	xzr, [x20, #16]
    ec94:	mov	x0, x22
    ec98:	blr	x21
    ec9c:	ldp	x21, x22, [sp, #16]
    eca0:	ldr	x30, [sp, #32]
    eca4:	ldp	x19, x20, [sp], #48
    eca8:	ret

000000000000ecac <__interceptor_pthread_create@@Base>:
    ecac:	stp	x19, x20, [sp, #-208]!
    ecb0:	stp	x21, x22, [sp, #16]
    ecb4:	str	x30, [sp, #32]
    ecb8:	mov	x21, x0
    ecbc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ecc0:	ldr	x0, [x0, #4048]
    ecc4:	ldrb	w0, [x0]
    ecc8:	cbnz	w0, ed64 <__interceptor_pthread_create@@Base+0xb8>
    eccc:	mov	x19, x1
    ecd0:	mov	x22, x2
    ecd4:	mov	x20, x3
    ecd8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ecdc:	ldr	x0, [x0, #3592]
    ece0:	ldrb	w0, [x0]
    ece4:	cbz	w0, ed84 <__interceptor_pthread_create@@Base+0xd8>
    ece8:	bl	10250 <_ZdaPvmSt11align_val_t@@Base+0x600>
    ecec:	cbz	x19, ed8c <__interceptor_pthread_create@@Base+0xe0>
    ecf0:	mov	x0, x19
    ecf4:	bl	1c808 <__sanitizer_set_report_fd@@Base+0x6458>
    ecf8:	str	wzr, [sp, #76]
    ecfc:	add	x1, sp, #0x4c
    ed00:	mov	x0, x19
    ed04:	bl	6730 <pthread_attr_getdetachstate@plt>
    ed08:	str	x22, [sp, #48]
    ed0c:	str	x20, [sp, #56]
    ed10:	str	xzr, [sp, #64]
    ed14:	bl	a7f4 <__lsan_do_recoverable_leak_check@@Base+0x4f4>
    ed18:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ed1c:	ldr	x4, [x0, #3920]
    ed20:	add	x3, sp, #0x30
    ed24:	adrp	x2, e000 <__sancov_lowest_stack@@Base+0x7d0>
    ed28:	add	x2, x2, #0xc20
    ed2c:	mov	x1, x19
    ed30:	mov	x0, x21
    ed34:	blr	x4
    ed38:	mov	w20, w0
    ed3c:	bl	a810 <__lsan_do_recoverable_leak_check@@Base+0x510>
    ed40:	cbz	w20, ed9c <__interceptor_pthread_create@@Base+0xf0>
    ed44:	add	x0, sp, #0x50
    ed48:	cmp	x19, x0
    ed4c:	b.eq	ee04 <__interceptor_pthread_create@@Base+0x158>  // b.none
    ed50:	mov	w0, w20
    ed54:	ldp	x21, x22, [sp, #16]
    ed58:	ldr	x30, [sp, #32]
    ed5c:	ldp	x19, x20, [sp], #208
    ed60:	ret
    ed64:	mov	x4, #0x0                   	// #0
    ed68:	mov	x3, #0x0                   	// #0
    ed6c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ed70:	add	x2, x2, #0x5a8
    ed74:	mov	w1, #0x173                 	// #371
    ed78:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ed7c:	add	x0, x0, #0xe60
    ed80:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ed84:	bl	6b40 <__lsan_init@plt>
    ed88:	b	ece8 <__interceptor_pthread_create@@Base+0x3c>
    ed8c:	add	x19, sp, #0x50
    ed90:	mov	x0, x19
    ed94:	bl	6800 <pthread_attr_init@plt>
    ed98:	b	ecf0 <__interceptor_pthread_create@@Base+0x44>
    ed9c:	bl	aec0 <__sanitizer_print_stack_trace@@Base+0xa4>
    eda0:	mov	w22, w0
    eda4:	ldr	x21, [x21]
    eda8:	ldr	w0, [sp, #76]
    edac:	bl	1cae0 <__sanitizer_set_report_fd@@Base+0x6730>
    edb0:	mov	w2, w0
    edb4:	mov	x1, x21
    edb8:	mov	w0, w22
    edbc:	bl	100b4 <_ZdaPvmSt11align_val_t@@Base+0x464>
    edc0:	sxtw	x1, w0
    edc4:	cbz	w0, ede4 <__interceptor_pthread_create@@Base+0x138>
    edc8:	dmb	ish
    edcc:	str	x1, [sp, #64]
    edd0:	ldr	x1, [sp, #64]
    edd4:	dmb	ish
    edd8:	cbz	x1, ed44 <__interceptor_pthread_create@@Base+0x98>
    eddc:	bl	18bd0 <__sanitizer_set_report_fd@@Base+0x2820>
    ede0:	b	edd0 <__interceptor_pthread_create@@Base+0x124>
    ede4:	mov	x4, #0x0                   	// #0
    ede8:	mov	x3, #0x0                   	// #0
    edec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    edf0:	add	x2, x2, #0xef0
    edf4:	mov	w1, #0x18d                 	// #397
    edf8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    edfc:	add	x0, x0, #0xe60
    ee00:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ee04:	bl	68f0 <pthread_attr_destroy@plt>
    ee08:	b	ed50 <__interceptor_pthread_create@@Base+0xa4>

000000000000ee0c <__interceptor_pthread_join@@Base>:
    ee0c:	stp	x19, x20, [sp, #-32]!
    ee10:	stp	x21, x30, [sp, #16]
    ee14:	mov	x19, x0
    ee18:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ee1c:	ldr	x0, [x0, #4048]
    ee20:	ldrb	w0, [x0]
    ee24:	cbnz	w0, ee74 <__interceptor_pthread_join@@Base+0x68>
    ee28:	mov	x21, x1
    ee2c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ee30:	ldr	x0, [x0, #3592]
    ee34:	ldrb	w0, [x0]
    ee38:	cbz	w0, ee94 <__interceptor_pthread_join@@Base+0x88>
    ee3c:	mov	x0, x19
    ee40:	bl	101e4 <_ZdaPvmSt11align_val_t@@Base+0x594>
    ee44:	mov	w20, w0
    ee48:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ee4c:	ldr	x2, [x0, #3928]
    ee50:	mov	x1, x21
    ee54:	mov	x0, x19
    ee58:	blr	x2
    ee5c:	mov	w19, w0
    ee60:	cbz	w0, ee9c <__interceptor_pthread_join@@Base+0x90>
    ee64:	mov	w0, w19
    ee68:	ldp	x21, x30, [sp, #16]
    ee6c:	ldp	x19, x20, [sp], #32
    ee70:	ret
    ee74:	mov	x4, #0x0                   	// #0
    ee78:	mov	x3, #0x0                   	// #0
    ee7c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ee80:	add	x2, x2, #0x5a8
    ee84:	mov	w1, #0x198                 	// #408
    ee88:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ee8c:	add	x0, x0, #0xe60
    ee90:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ee94:	bl	6b40 <__lsan_init@plt>
    ee98:	b	ee3c <__interceptor_pthread_join@@Base+0x30>
    ee9c:	mov	w0, w20
    eea0:	bl	10208 <_ZdaPvmSt11align_val_t@@Base+0x5b8>
    eea4:	b	ee64 <__interceptor_pthread_join@@Base+0x58>

000000000000eea8 <__interceptor__exit@@Base>:
    eea8:	stp	x19, x30, [sp, #-16]!
    eeac:	mov	w19, w0
    eeb0:	cbz	w0, eecc <__interceptor__exit@@Base+0x24>
    eeb4:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    eeb8:	ldr	x1, [x0, #3936]
    eebc:	mov	w0, w19
    eec0:	blr	x1
    eec4:	ldp	x19, x30, [sp], #16
    eec8:	ret
    eecc:	bl	80b0 <*ABS*+0x10@plt+0x1350>
    eed0:	and	w0, w0, #0xff
    eed4:	cbz	w0, eeb4 <__interceptor__exit@@Base+0xc>
    eed8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eedc:	ldr	x0, [x0, #4040]
    eee0:	ldr	w19, [x0, #216]
    eee4:	b	eeb4 <__interceptor__exit@@Base+0xc>

000000000000eee8 <__interceptor_signal@@Base>:
    eee8:	stp	x19, x20, [sp, #-32]!
    eeec:	str	x30, [sp, #16]
    eef0:	mov	w19, w0
    eef4:	mov	x20, x1
    eef8:	bl	19ee0 <__sanitizer_set_report_fd@@Base+0x3b30>
    eefc:	cmp	w0, #0x2
    ef00:	b.eq	ef24 <__interceptor_signal@@Base+0x3c>  // b.none
    ef04:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ef08:	ldr	x2, [x0, #3944]
    ef0c:	mov	x1, x20
    ef10:	mov	w0, w19
    ef14:	blr	x2
    ef18:	ldr	x30, [sp, #16]
    ef1c:	ldp	x19, x20, [sp], #32
    ef20:	ret
    ef24:	mov	x0, #0x0                   	// #0
    ef28:	b	ef18 <__interceptor_signal@@Base+0x30>

000000000000ef2c <__interceptor_sigaction@@Base>:
    ef2c:	stp	x19, x20, [sp, #-32]!
    ef30:	stp	x21, x30, [sp, #16]
    ef34:	mov	w19, w0
    ef38:	mov	x20, x1
    ef3c:	mov	x21, x2
    ef40:	bl	19ee0 <__sanitizer_set_report_fd@@Base+0x3b30>
    ef44:	cmp	w0, #0x2
    ef48:	b.eq	ef70 <__interceptor_sigaction@@Base+0x44>  // b.none
    ef4c:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ef50:	ldr	x3, [x0, #3952]
    ef54:	mov	x2, x21
    ef58:	mov	x1, x20
    ef5c:	mov	w0, w19
    ef60:	blr	x3
    ef64:	ldp	x21, x30, [sp, #16]
    ef68:	ldp	x19, x20, [sp], #32
    ef6c:	ret
    ef70:	mov	w0, #0x0                   	// #0
    ef74:	b	ef64 <__interceptor_sigaction@@Base+0x38>
    ef78:	str	x30, [sp, #-16]!
    ef7c:	cmp	x0, #0x1
    ef80:	b.ls	efb0 <__interceptor_sigaction@@Base+0x84>  // b.plast
    ef84:	sub	x1, x0, #0x1
    ef88:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ef8c:	ldr	w0, [x0, #3912]
    ef90:	bl	69e0 <pthread_setspecific@plt>
    ef94:	cbnz	w0, efa0 <__interceptor_sigaction@@Base+0x74>
    ef98:	ldr	x30, [sp], #16
    ef9c:	ret
    efa0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    efa4:	add	x0, x0, #0xec0
    efa8:	bl	1d908 <OnPrint@@Base+0x3d8>
    efac:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    efb0:	bl	10174 <_ZdaPvmSt11align_val_t@@Base+0x524>
    efb4:	b	ef98 <__interceptor_sigaction@@Base+0x6c>

000000000000efb8 <__interceptor_mcheck@@Base>:
    efb8:	mov	w0, #0x0                   	// #0
    efbc:	ret

000000000000efc0 <__interceptor_mcheck_pedantic@@Base>:
    efc0:	mov	w0, #0x0                   	// #0
    efc4:	ret

000000000000efc8 <__interceptor_mprobe@@Base>:
    efc8:	mov	w0, #0x0                   	// #0
    efcc:	ret

000000000000efd0 <_Znwm@@Base>:
    efd0:	sub	sp, sp, #0x860
    efd4:	stp	x29, x30, [sp]
    efd8:	mov	x29, sp
    efdc:	stp	x19, x20, [sp, #16]
    efe0:	stp	x21, x22, [sp, #32]
    efe4:	str	x23, [sp, #48]
    efe8:	mov	x20, x0
    efec:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    eff0:	ldr	x1, [x1, #4048]
    eff4:	ldrb	w0, [x1]
    eff8:	cbnz	w0, f08c <_Znwm@@Base+0xbc>
    effc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f000:	ldr	x0, [x0, #3592]
    f004:	ldrb	w0, [x0]
    f008:	cbz	w0, f0ac <_Znwm@@Base+0xdc>
    f00c:	add	x0, x29, #0x58
    f010:	str	x0, [x29, #72]
    f014:	str	wzr, [x29, #80]
    f018:	str	wzr, [x29, #84]
    f01c:	str	xzr, [x29, #2136]
    f020:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f024:	ldr	x19, [x19, #4040]
    f028:	ldrsw	x23, [x19, #36]
    f02c:	bl	1f460 <OnPrint@@Base+0x1f30>
    f030:	mov	x21, x0
    f034:	ldrb	w22, [x19, #34]
    f038:	mov	x6, #0x0                   	// #0
    f03c:	mov	x5, #0x0                   	// #0
    f040:	cbnz	w22, f0b4 <_Znwm@@Base+0xe4>
    f044:	add	x19, x29, #0x48
    f048:	mov	w7, w22
    f04c:	mov	x4, #0x0                   	// #0
    f050:	mov	x3, x29
    f054:	mov	x2, x21
    f058:	mov	w1, w23
    f05c:	mov	x0, x19
    f060:	bl	1fc70 <OnPrint@@Base+0x2740>
    f064:	mov	x1, x19
    f068:	mov	x0, x20
    f06c:	bl	c154 <__sanitizer_get_allocated_size@@Base+0x87c>
    f070:	cbz	x0, f0d4 <_Znwm@@Base+0x104>
    f074:	ldp	x19, x20, [sp, #16]
    f078:	ldp	x21, x22, [sp, #32]
    f07c:	ldr	x23, [sp, #48]
    f080:	ldp	x29, x30, [sp]
    f084:	add	sp, sp, #0x860
    f088:	ret
    f08c:	mov	x4, #0x0                   	// #0
    f090:	mov	x3, #0x0                   	// #0
    f094:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f098:	add	x2, x2, #0x5a8
    f09c:	mov	w1, #0xde                  	// #222
    f0a0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f0a4:	add	x0, x0, #0xe60
    f0a8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f0ac:	bl	6b40 <__lsan_init@plt>
    f0b0:	b	f00c <_Znwm@@Base+0x3c>
    f0b4:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f0b8:	cbz	x0, f0c8 <_Znwm@@Base+0xf8>
    f0bc:	ldr	x5, [x0, #152]
    f0c0:	ldr	x6, [x0, #144]
    f0c4:	b	f044 <_Znwm@@Base+0x74>
    f0c8:	mov	x6, #0x0                   	// #0
    f0cc:	mov	x5, #0x0                   	// #0
    f0d0:	b	f044 <_Znwm@@Base+0x74>
    f0d4:	add	x1, x29, #0x48
    f0d8:	mov	x0, x20
    f0dc:	bl	124f8 <__sancov_default_options@@Base+0x2174>

000000000000f0e0 <_Znam@@Base>:
    f0e0:	sub	sp, sp, #0x860
    f0e4:	stp	x29, x30, [sp]
    f0e8:	mov	x29, sp
    f0ec:	stp	x19, x20, [sp, #16]
    f0f0:	stp	x21, x22, [sp, #32]
    f0f4:	str	x23, [sp, #48]
    f0f8:	mov	x20, x0
    f0fc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f100:	ldr	x1, [x1, #4048]
    f104:	ldrb	w0, [x1]
    f108:	cbnz	w0, f19c <_Znam@@Base+0xbc>
    f10c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f110:	ldr	x0, [x0, #3592]
    f114:	ldrb	w0, [x0]
    f118:	cbz	w0, f1bc <_Znam@@Base+0xdc>
    f11c:	add	x0, x29, #0x58
    f120:	str	x0, [x29, #72]
    f124:	str	wzr, [x29, #80]
    f128:	str	wzr, [x29, #84]
    f12c:	str	xzr, [x29, #2136]
    f130:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f134:	ldr	x19, [x19, #4040]
    f138:	ldrsw	x23, [x19, #36]
    f13c:	bl	1f460 <OnPrint@@Base+0x1f30>
    f140:	mov	x21, x0
    f144:	ldrb	w22, [x19, #34]
    f148:	mov	x6, #0x0                   	// #0
    f14c:	mov	x5, #0x0                   	// #0
    f150:	cbnz	w22, f1c4 <_Znam@@Base+0xe4>
    f154:	add	x19, x29, #0x48
    f158:	mov	w7, w22
    f15c:	mov	x4, #0x0                   	// #0
    f160:	mov	x3, x29
    f164:	mov	x2, x21
    f168:	mov	w1, w23
    f16c:	mov	x0, x19
    f170:	bl	1fc70 <OnPrint@@Base+0x2740>
    f174:	mov	x1, x19
    f178:	mov	x0, x20
    f17c:	bl	c154 <__sanitizer_get_allocated_size@@Base+0x87c>
    f180:	cbz	x0, f1e4 <_Znam@@Base+0x104>
    f184:	ldp	x19, x20, [sp, #16]
    f188:	ldp	x21, x22, [sp, #32]
    f18c:	ldr	x23, [sp, #48]
    f190:	ldp	x29, x30, [sp]
    f194:	add	sp, sp, #0x860
    f198:	ret
    f19c:	mov	x4, #0x0                   	// #0
    f1a0:	mov	x3, #0x0                   	// #0
    f1a4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f1a8:	add	x2, x2, #0x5a8
    f1ac:	mov	w1, #0xe0                  	// #224
    f1b0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f1b4:	add	x0, x0, #0xe60
    f1b8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f1bc:	bl	6b40 <__lsan_init@plt>
    f1c0:	b	f11c <_Znam@@Base+0x3c>
    f1c4:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f1c8:	cbz	x0, f1d8 <_Znam@@Base+0xf8>
    f1cc:	ldr	x5, [x0, #152]
    f1d0:	ldr	x6, [x0, #144]
    f1d4:	b	f154 <_Znam@@Base+0x74>
    f1d8:	mov	x6, #0x0                   	// #0
    f1dc:	mov	x5, #0x0                   	// #0
    f1e0:	b	f154 <_Znam@@Base+0x74>
    f1e4:	add	x1, x29, #0x48
    f1e8:	mov	x0, x20
    f1ec:	bl	124f8 <__sancov_default_options@@Base+0x2174>

000000000000f1f0 <_ZnwmRKSt9nothrow_t@@Base>:
    f1f0:	sub	sp, sp, #0x860
    f1f4:	stp	x29, x30, [sp]
    f1f8:	mov	x29, sp
    f1fc:	stp	x19, x20, [sp, #16]
    f200:	stp	x21, x22, [sp, #32]
    f204:	str	x23, [sp, #48]
    f208:	mov	x20, x0
    f20c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f210:	ldr	x1, [x1, #4048]
    f214:	ldrb	w0, [x1]
    f218:	cbnz	w0, f2a8 <_ZnwmRKSt9nothrow_t@@Base+0xb8>
    f21c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f220:	ldr	x0, [x0, #3592]
    f224:	ldrb	w0, [x0]
    f228:	cbz	w0, f2c8 <_ZnwmRKSt9nothrow_t@@Base+0xd8>
    f22c:	add	x0, x29, #0x58
    f230:	str	x0, [x29, #72]
    f234:	str	wzr, [x29, #80]
    f238:	str	wzr, [x29, #84]
    f23c:	str	xzr, [x29, #2136]
    f240:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f244:	ldr	x19, [x19, #4040]
    f248:	ldrsw	x23, [x19, #36]
    f24c:	bl	1f460 <OnPrint@@Base+0x1f30>
    f250:	mov	x21, x0
    f254:	ldrb	w22, [x19, #34]
    f258:	mov	x6, #0x0                   	// #0
    f25c:	mov	x5, #0x0                   	// #0
    f260:	cbnz	w22, f2d0 <_ZnwmRKSt9nothrow_t@@Base+0xe0>
    f264:	add	x19, x29, #0x48
    f268:	mov	w7, w22
    f26c:	mov	x4, #0x0                   	// #0
    f270:	mov	x3, x29
    f274:	mov	x2, x21
    f278:	mov	w1, w23
    f27c:	mov	x0, x19
    f280:	bl	1fc70 <OnPrint@@Base+0x2740>
    f284:	mov	x1, x19
    f288:	mov	x0, x20
    f28c:	bl	c154 <__sanitizer_get_allocated_size@@Base+0x87c>
    f290:	ldp	x19, x20, [sp, #16]
    f294:	ldp	x21, x22, [sp, #32]
    f298:	ldr	x23, [sp, #48]
    f29c:	ldp	x29, x30, [sp]
    f2a0:	add	sp, sp, #0x860
    f2a4:	ret
    f2a8:	mov	x4, #0x0                   	// #0
    f2ac:	mov	x3, #0x0                   	// #0
    f2b0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f2b4:	add	x2, x2, #0x5a8
    f2b8:	mov	w1, #0xe3                  	// #227
    f2bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f2c0:	add	x0, x0, #0xe60
    f2c4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f2c8:	bl	6b40 <__lsan_init@plt>
    f2cc:	b	f22c <_ZnwmRKSt9nothrow_t@@Base+0x3c>
    f2d0:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f2d4:	cbz	x0, f2e4 <_ZnwmRKSt9nothrow_t@@Base+0xf4>
    f2d8:	ldr	x5, [x0, #152]
    f2dc:	ldr	x6, [x0, #144]
    f2e0:	b	f264 <_ZnwmRKSt9nothrow_t@@Base+0x74>
    f2e4:	mov	x6, #0x0                   	// #0
    f2e8:	mov	x5, #0x0                   	// #0
    f2ec:	b	f264 <_ZnwmRKSt9nothrow_t@@Base+0x74>

000000000000f2f0 <_ZnamRKSt9nothrow_t@@Base>:
    f2f0:	sub	sp, sp, #0x860
    f2f4:	stp	x29, x30, [sp]
    f2f8:	mov	x29, sp
    f2fc:	stp	x19, x20, [sp, #16]
    f300:	stp	x21, x22, [sp, #32]
    f304:	str	x23, [sp, #48]
    f308:	mov	x20, x0
    f30c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f310:	ldr	x1, [x1, #4048]
    f314:	ldrb	w0, [x1]
    f318:	cbnz	w0, f3a8 <_ZnamRKSt9nothrow_t@@Base+0xb8>
    f31c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f320:	ldr	x0, [x0, #3592]
    f324:	ldrb	w0, [x0]
    f328:	cbz	w0, f3c8 <_ZnamRKSt9nothrow_t@@Base+0xd8>
    f32c:	add	x0, x29, #0x58
    f330:	str	x0, [x29, #72]
    f334:	str	wzr, [x29, #80]
    f338:	str	wzr, [x29, #84]
    f33c:	str	xzr, [x29, #2136]
    f340:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f344:	ldr	x19, [x19, #4040]
    f348:	ldrsw	x23, [x19, #36]
    f34c:	bl	1f460 <OnPrint@@Base+0x1f30>
    f350:	mov	x21, x0
    f354:	ldrb	w22, [x19, #34]
    f358:	mov	x6, #0x0                   	// #0
    f35c:	mov	x5, #0x0                   	// #0
    f360:	cbnz	w22, f3d0 <_ZnamRKSt9nothrow_t@@Base+0xe0>
    f364:	add	x19, x29, #0x48
    f368:	mov	w7, w22
    f36c:	mov	x4, #0x0                   	// #0
    f370:	mov	x3, x29
    f374:	mov	x2, x21
    f378:	mov	w1, w23
    f37c:	mov	x0, x19
    f380:	bl	1fc70 <OnPrint@@Base+0x2740>
    f384:	mov	x1, x19
    f388:	mov	x0, x20
    f38c:	bl	c154 <__sanitizer_get_allocated_size@@Base+0x87c>
    f390:	ldp	x19, x20, [sp, #16]
    f394:	ldp	x21, x22, [sp, #32]
    f398:	ldr	x23, [sp, #48]
    f39c:	ldp	x29, x30, [sp]
    f3a0:	add	sp, sp, #0x860
    f3a4:	ret
    f3a8:	mov	x4, #0x0                   	// #0
    f3ac:	mov	x3, #0x0                   	// #0
    f3b0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f3b4:	add	x2, x2, #0x5a8
    f3b8:	mov	w1, #0xe6                  	// #230
    f3bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f3c0:	add	x0, x0, #0xe60
    f3c4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f3c8:	bl	6b40 <__lsan_init@plt>
    f3cc:	b	f32c <_ZnamRKSt9nothrow_t@@Base+0x3c>
    f3d0:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f3d4:	cbz	x0, f3e4 <_ZnamRKSt9nothrow_t@@Base+0xf4>
    f3d8:	ldr	x5, [x0, #152]
    f3dc:	ldr	x6, [x0, #144]
    f3e0:	b	f364 <_ZnamRKSt9nothrow_t@@Base+0x74>
    f3e4:	mov	x6, #0x0                   	// #0
    f3e8:	mov	x5, #0x0                   	// #0
    f3ec:	b	f364 <_ZnamRKSt9nothrow_t@@Base+0x74>

000000000000f3f0 <_ZnwmSt11align_val_t@@Base>:
    f3f0:	sub	sp, sp, #0x860
    f3f4:	stp	x29, x30, [sp]
    f3f8:	mov	x29, sp
    f3fc:	stp	x19, x20, [sp, #16]
    f400:	stp	x21, x22, [sp, #32]
    f404:	stp	x23, x24, [sp, #48]
    f408:	mov	x20, x0
    f40c:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f410:	ldr	x2, [x2, #4048]
    f414:	ldrb	w0, [x2]
    f418:	cbnz	w0, f4b4 <_ZnwmSt11align_val_t@@Base+0xc4>
    f41c:	mov	x21, x1
    f420:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f424:	ldr	x0, [x0, #3592]
    f428:	ldrb	w0, [x0]
    f42c:	cbz	w0, f4d4 <_ZnwmSt11align_val_t@@Base+0xe4>
    f430:	add	x0, x29, #0x58
    f434:	str	x0, [x29, #72]
    f438:	str	wzr, [x29, #80]
    f43c:	str	wzr, [x29, #84]
    f440:	str	xzr, [x29, #2136]
    f444:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f448:	ldr	x19, [x19, #4040]
    f44c:	ldrsw	x24, [x19, #36]
    f450:	bl	1f460 <OnPrint@@Base+0x1f30>
    f454:	mov	x22, x0
    f458:	ldrb	w23, [x19, #34]
    f45c:	mov	x6, #0x0                   	// #0
    f460:	mov	x5, #0x0                   	// #0
    f464:	cbnz	w23, f4dc <_ZnwmSt11align_val_t@@Base+0xec>
    f468:	add	x19, x29, #0x48
    f46c:	mov	w7, w23
    f470:	mov	x4, #0x0                   	// #0
    f474:	mov	x3, x29
    f478:	mov	x2, x22
    f47c:	mov	w1, w24
    f480:	mov	x0, x19
    f484:	bl	1fc70 <OnPrint@@Base+0x2740>
    f488:	mov	x2, x19
    f48c:	mov	x1, x20
    f490:	mov	x0, x21
    f494:	bl	c0e0 <__sanitizer_get_allocated_size@@Base+0x808>
    f498:	cbz	x0, f4fc <_ZnwmSt11align_val_t@@Base+0x10c>
    f49c:	ldp	x19, x20, [sp, #16]
    f4a0:	ldp	x21, x22, [sp, #32]
    f4a4:	ldp	x23, x24, [sp, #48]
    f4a8:	ldp	x29, x30, [sp]
    f4ac:	add	sp, sp, #0x860
    f4b0:	ret
    f4b4:	mov	x4, #0x0                   	// #0
    f4b8:	mov	x3, #0x0                   	// #0
    f4bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f4c0:	add	x2, x2, #0x5a8
    f4c4:	mov	w1, #0xe9                  	// #233
    f4c8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f4cc:	add	x0, x0, #0xe60
    f4d0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f4d4:	bl	6b40 <__lsan_init@plt>
    f4d8:	b	f430 <_ZnwmSt11align_val_t@@Base+0x40>
    f4dc:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f4e0:	cbz	x0, f4f0 <_ZnwmSt11align_val_t@@Base+0x100>
    f4e4:	ldr	x5, [x0, #152]
    f4e8:	ldr	x6, [x0, #144]
    f4ec:	b	f468 <_ZnwmSt11align_val_t@@Base+0x78>
    f4f0:	mov	x6, #0x0                   	// #0
    f4f4:	mov	x5, #0x0                   	// #0
    f4f8:	b	f468 <_ZnwmSt11align_val_t@@Base+0x78>
    f4fc:	add	x1, x29, #0x48
    f500:	mov	x0, x20
    f504:	bl	124f8 <__sancov_default_options@@Base+0x2174>

000000000000f508 <_ZnamSt11align_val_t@@Base>:
    f508:	sub	sp, sp, #0x860
    f50c:	stp	x29, x30, [sp]
    f510:	mov	x29, sp
    f514:	stp	x19, x20, [sp, #16]
    f518:	stp	x21, x22, [sp, #32]
    f51c:	stp	x23, x24, [sp, #48]
    f520:	mov	x20, x0
    f524:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f528:	ldr	x2, [x2, #4048]
    f52c:	ldrb	w0, [x2]
    f530:	cbnz	w0, f5cc <_ZnamSt11align_val_t@@Base+0xc4>
    f534:	mov	x21, x1
    f538:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f53c:	ldr	x0, [x0, #3592]
    f540:	ldrb	w0, [x0]
    f544:	cbz	w0, f5ec <_ZnamSt11align_val_t@@Base+0xe4>
    f548:	add	x0, x29, #0x58
    f54c:	str	x0, [x29, #72]
    f550:	str	wzr, [x29, #80]
    f554:	str	wzr, [x29, #84]
    f558:	str	xzr, [x29, #2136]
    f55c:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f560:	ldr	x19, [x19, #4040]
    f564:	ldrsw	x24, [x19, #36]
    f568:	bl	1f460 <OnPrint@@Base+0x1f30>
    f56c:	mov	x22, x0
    f570:	ldrb	w23, [x19, #34]
    f574:	mov	x6, #0x0                   	// #0
    f578:	mov	x5, #0x0                   	// #0
    f57c:	cbnz	w23, f5f4 <_ZnamSt11align_val_t@@Base+0xec>
    f580:	add	x19, x29, #0x48
    f584:	mov	w7, w23
    f588:	mov	x4, #0x0                   	// #0
    f58c:	mov	x3, x29
    f590:	mov	x2, x22
    f594:	mov	w1, w24
    f598:	mov	x0, x19
    f59c:	bl	1fc70 <OnPrint@@Base+0x2740>
    f5a0:	mov	x2, x19
    f5a4:	mov	x1, x20
    f5a8:	mov	x0, x21
    f5ac:	bl	c0e0 <__sanitizer_get_allocated_size@@Base+0x808>
    f5b0:	cbz	x0, f614 <_ZnamSt11align_val_t@@Base+0x10c>
    f5b4:	ldp	x19, x20, [sp, #16]
    f5b8:	ldp	x21, x22, [sp, #32]
    f5bc:	ldp	x23, x24, [sp, #48]
    f5c0:	ldp	x29, x30, [sp]
    f5c4:	add	sp, sp, #0x860
    f5c8:	ret
    f5cc:	mov	x4, #0x0                   	// #0
    f5d0:	mov	x3, #0x0                   	// #0
    f5d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f5d8:	add	x2, x2, #0x5a8
    f5dc:	mov	w1, #0xec                  	// #236
    f5e0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f5e4:	add	x0, x0, #0xe60
    f5e8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f5ec:	bl	6b40 <__lsan_init@plt>
    f5f0:	b	f548 <_ZnamSt11align_val_t@@Base+0x40>
    f5f4:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f5f8:	cbz	x0, f608 <_ZnamSt11align_val_t@@Base+0x100>
    f5fc:	ldr	x5, [x0, #152]
    f600:	ldr	x6, [x0, #144]
    f604:	b	f580 <_ZnamSt11align_val_t@@Base+0x78>
    f608:	mov	x6, #0x0                   	// #0
    f60c:	mov	x5, #0x0                   	// #0
    f610:	b	f580 <_ZnamSt11align_val_t@@Base+0x78>
    f614:	add	x1, x29, #0x48
    f618:	mov	x0, x20
    f61c:	bl	124f8 <__sancov_default_options@@Base+0x2174>

000000000000f620 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base>:
    f620:	sub	sp, sp, #0x860
    f624:	stp	x29, x30, [sp]
    f628:	mov	x29, sp
    f62c:	stp	x19, x20, [sp, #16]
    f630:	stp	x21, x22, [sp, #32]
    f634:	stp	x23, x24, [sp, #48]
    f638:	mov	x21, x0
    f63c:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f640:	ldr	x2, [x2, #4048]
    f644:	ldrb	w0, [x2]
    f648:	cbnz	w0, f6e0 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xc0>
    f64c:	mov	x20, x1
    f650:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f654:	ldr	x0, [x0, #3592]
    f658:	ldrb	w0, [x0]
    f65c:	cbz	w0, f700 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xe0>
    f660:	add	x0, x29, #0x58
    f664:	str	x0, [x29, #72]
    f668:	str	wzr, [x29, #80]
    f66c:	str	wzr, [x29, #84]
    f670:	str	xzr, [x29, #2136]
    f674:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f678:	ldr	x19, [x19, #4040]
    f67c:	ldrsw	x24, [x19, #36]
    f680:	bl	1f460 <OnPrint@@Base+0x1f30>
    f684:	mov	x22, x0
    f688:	ldrb	w23, [x19, #34]
    f68c:	mov	x6, #0x0                   	// #0
    f690:	mov	x5, #0x0                   	// #0
    f694:	cbnz	w23, f708 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xe8>
    f698:	add	x19, x29, #0x48
    f69c:	mov	w7, w23
    f6a0:	mov	x4, #0x0                   	// #0
    f6a4:	mov	x3, x29
    f6a8:	mov	x2, x22
    f6ac:	mov	w1, w24
    f6b0:	mov	x0, x19
    f6b4:	bl	1fc70 <OnPrint@@Base+0x2740>
    f6b8:	mov	x2, x19
    f6bc:	mov	x1, x21
    f6c0:	mov	x0, x20
    f6c4:	bl	c0e0 <__sanitizer_get_allocated_size@@Base+0x808>
    f6c8:	ldp	x19, x20, [sp, #16]
    f6cc:	ldp	x21, x22, [sp, #32]
    f6d0:	ldp	x23, x24, [sp, #48]
    f6d4:	ldp	x29, x30, [sp]
    f6d8:	add	sp, sp, #0x860
    f6dc:	ret
    f6e0:	mov	x4, #0x0                   	// #0
    f6e4:	mov	x3, #0x0                   	// #0
    f6e8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f6ec:	add	x2, x2, #0x5a8
    f6f0:	mov	w1, #0xef                  	// #239
    f6f4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f6f8:	add	x0, x0, #0xe60
    f6fc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f700:	bl	6b40 <__lsan_init@plt>
    f704:	b	f660 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x40>
    f708:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f70c:	cbz	x0, f71c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0xfc>
    f710:	ldr	x5, [x0, #152]
    f714:	ldr	x6, [x0, #144]
    f718:	b	f698 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x78>
    f71c:	mov	x6, #0x0                   	// #0
    f720:	mov	x5, #0x0                   	// #0
    f724:	b	f698 <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base+0x78>

000000000000f728 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base>:
    f728:	sub	sp, sp, #0x860
    f72c:	stp	x29, x30, [sp]
    f730:	mov	x29, sp
    f734:	stp	x19, x20, [sp, #16]
    f738:	stp	x21, x22, [sp, #32]
    f73c:	stp	x23, x24, [sp, #48]
    f740:	mov	x21, x0
    f744:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f748:	ldr	x2, [x2, #4048]
    f74c:	ldrb	w0, [x2]
    f750:	cbnz	w0, f7e8 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xc0>
    f754:	mov	x20, x1
    f758:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f75c:	ldr	x0, [x0, #3592]
    f760:	ldrb	w0, [x0]
    f764:	cbz	w0, f808 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xe0>
    f768:	add	x0, x29, #0x58
    f76c:	str	x0, [x29, #72]
    f770:	str	wzr, [x29, #80]
    f774:	str	wzr, [x29, #84]
    f778:	str	xzr, [x29, #2136]
    f77c:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f780:	ldr	x19, [x19, #4040]
    f784:	ldrsw	x24, [x19, #36]
    f788:	bl	1f460 <OnPrint@@Base+0x1f30>
    f78c:	mov	x22, x0
    f790:	ldrb	w23, [x19, #34]
    f794:	mov	x6, #0x0                   	// #0
    f798:	mov	x5, #0x0                   	// #0
    f79c:	cbnz	w23, f810 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xe8>
    f7a0:	add	x19, x29, #0x48
    f7a4:	mov	w7, w23
    f7a8:	mov	x4, #0x0                   	// #0
    f7ac:	mov	x3, x29
    f7b0:	mov	x2, x22
    f7b4:	mov	w1, w24
    f7b8:	mov	x0, x19
    f7bc:	bl	1fc70 <OnPrint@@Base+0x2740>
    f7c0:	mov	x2, x19
    f7c4:	mov	x1, x21
    f7c8:	mov	x0, x20
    f7cc:	bl	c0e0 <__sanitizer_get_allocated_size@@Base+0x808>
    f7d0:	ldp	x19, x20, [sp, #16]
    f7d4:	ldp	x21, x22, [sp, #32]
    f7d8:	ldp	x23, x24, [sp, #48]
    f7dc:	ldp	x29, x30, [sp]
    f7e0:	add	sp, sp, #0x860
    f7e4:	ret
    f7e8:	mov	x4, #0x0                   	// #0
    f7ec:	mov	x3, #0x0                   	// #0
    f7f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f7f4:	add	x2, x2, #0x5a8
    f7f8:	mov	w1, #0xf2                  	// #242
    f7fc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f800:	add	x0, x0, #0xe60
    f804:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f808:	bl	6b40 <__lsan_init@plt>
    f80c:	b	f768 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x40>
    f810:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
    f814:	cbz	x0, f824 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xfc>
    f818:	ldr	x5, [x0, #152]
    f81c:	ldr	x6, [x0, #144]
    f820:	b	f7a0 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x78>
    f824:	mov	x6, #0x0                   	// #0
    f828:	mov	x5, #0x0                   	// #0
    f82c:	b	f7a0 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x78>

000000000000f830 <_ZdlPv@@Base>:
    f830:	stp	x19, x30, [sp, #-16]!
    f834:	mov	x19, x0
    f838:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f83c:	ldr	x1, [x1, #4048]
    f840:	ldrb	w0, [x1]
    f844:	cbnz	w0, f868 <_ZdlPv@@Base+0x38>
    f848:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f84c:	ldr	x0, [x0, #3592]
    f850:	ldrb	w0, [x0]
    f854:	cbz	w0, f888 <_ZdlPv@@Base+0x58>
    f858:	mov	x0, x19
    f85c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    f860:	ldp	x19, x30, [sp], #16
    f864:	ret
    f868:	mov	x4, #0x0                   	// #0
    f86c:	mov	x3, #0x0                   	// #0
    f870:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f874:	add	x2, x2, #0x5a8
    f878:	mov	w1, #0xf5                  	// #245
    f87c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f880:	add	x0, x0, #0xe60
    f884:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f888:	bl	6b40 <__lsan_init@plt>
    f88c:	b	f858 <_ZdlPv@@Base+0x28>

000000000000f890 <_ZdaPv@@Base>:
    f890:	stp	x19, x30, [sp, #-16]!
    f894:	mov	x19, x0
    f898:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f89c:	ldr	x1, [x1, #4048]
    f8a0:	ldrb	w0, [x1]
    f8a4:	cbnz	w0, f8c8 <_ZdaPv@@Base+0x38>
    f8a8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f8ac:	ldr	x0, [x0, #3592]
    f8b0:	ldrb	w0, [x0]
    f8b4:	cbz	w0, f8e8 <_ZdaPv@@Base+0x58>
    f8b8:	mov	x0, x19
    f8bc:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    f8c0:	ldp	x19, x30, [sp], #16
    f8c4:	ret
    f8c8:	mov	x4, #0x0                   	// #0
    f8cc:	mov	x3, #0x0                   	// #0
    f8d0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f8d4:	add	x2, x2, #0x5a8
    f8d8:	mov	w1, #0xf7                  	// #247
    f8dc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f8e0:	add	x0, x0, #0xe60
    f8e4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f8e8:	bl	6b40 <__lsan_init@plt>
    f8ec:	b	f8b8 <_ZdaPv@@Base+0x28>

000000000000f8f0 <_ZdlPvRKSt9nothrow_t@@Base>:
    f8f0:	stp	x19, x30, [sp, #-16]!
    f8f4:	mov	x19, x0
    f8f8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f8fc:	ldr	x1, [x1, #4048]
    f900:	ldrb	w0, [x1]
    f904:	cbnz	w0, f928 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
    f908:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f90c:	ldr	x0, [x0, #3592]
    f910:	ldrb	w0, [x0]
    f914:	cbz	w0, f948 <_ZdlPvRKSt9nothrow_t@@Base+0x58>
    f918:	mov	x0, x19
    f91c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    f920:	ldp	x19, x30, [sp], #16
    f924:	ret
    f928:	mov	x4, #0x0                   	// #0
    f92c:	mov	x3, #0x0                   	// #0
    f930:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f934:	add	x2, x2, #0x5a8
    f938:	mov	w1, #0xf9                  	// #249
    f93c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f940:	add	x0, x0, #0xe60
    f944:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f948:	bl	6b40 <__lsan_init@plt>
    f94c:	b	f918 <_ZdlPvRKSt9nothrow_t@@Base+0x28>

000000000000f950 <_ZdaPvRKSt9nothrow_t@@Base>:
    f950:	stp	x19, x30, [sp, #-16]!
    f954:	mov	x19, x0
    f958:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f95c:	ldr	x1, [x1, #4048]
    f960:	ldrb	w0, [x1]
    f964:	cbnz	w0, f988 <_ZdaPvRKSt9nothrow_t@@Base+0x38>
    f968:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f96c:	ldr	x0, [x0, #3592]
    f970:	ldrb	w0, [x0]
    f974:	cbz	w0, f9a8 <_ZdaPvRKSt9nothrow_t@@Base+0x58>
    f978:	mov	x0, x19
    f97c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    f980:	ldp	x19, x30, [sp], #16
    f984:	ret
    f988:	mov	x4, #0x0                   	// #0
    f98c:	mov	x3, #0x0                   	// #0
    f990:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f994:	add	x2, x2, #0x5a8
    f998:	mov	w1, #0xfc                  	// #252
    f99c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f9a0:	add	x0, x0, #0xe60
    f9a4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    f9a8:	bl	6b40 <__lsan_init@plt>
    f9ac:	b	f978 <_ZdaPvRKSt9nothrow_t@@Base+0x28>

000000000000f9b0 <_ZdlPvm@@Base>:
    f9b0:	stp	x19, x30, [sp, #-16]!
    f9b4:	mov	x19, x0
    f9b8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f9bc:	ldr	x1, [x1, #4048]
    f9c0:	ldrb	w0, [x1]
    f9c4:	cbnz	w0, f9e8 <_ZdlPvm@@Base+0x38>
    f9c8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f9cc:	ldr	x0, [x0, #3592]
    f9d0:	ldrb	w0, [x0]
    f9d4:	cbz	w0, fa08 <_ZdlPvm@@Base+0x58>
    f9d8:	mov	x0, x19
    f9dc:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    f9e0:	ldp	x19, x30, [sp], #16
    f9e4:	ret
    f9e8:	mov	x4, #0x0                   	// #0
    f9ec:	mov	x3, #0x0                   	// #0
    f9f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    f9f4:	add	x2, x2, #0x5a8
    f9f8:	mov	w1, #0xff                  	// #255
    f9fc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fa00:	add	x0, x0, #0xe60
    fa04:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fa08:	bl	6b40 <__lsan_init@plt>
    fa0c:	b	f9d8 <_ZdlPvm@@Base+0x28>

000000000000fa10 <_ZdaPvm@@Base>:
    fa10:	stp	x19, x30, [sp, #-16]!
    fa14:	mov	x19, x0
    fa18:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fa1c:	ldr	x1, [x1, #4048]
    fa20:	ldrb	w0, [x1]
    fa24:	cbnz	w0, fa48 <_ZdaPvm@@Base+0x38>
    fa28:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fa2c:	ldr	x0, [x0, #3592]
    fa30:	ldrb	w0, [x0]
    fa34:	cbz	w0, fa68 <_ZdaPvm@@Base+0x58>
    fa38:	mov	x0, x19
    fa3c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    fa40:	ldp	x19, x30, [sp], #16
    fa44:	ret
    fa48:	mov	x4, #0x0                   	// #0
    fa4c:	mov	x3, #0x0                   	// #0
    fa50:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fa54:	add	x2, x2, #0x5a8
    fa58:	mov	w1, #0x102                 	// #258
    fa5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fa60:	add	x0, x0, #0xe60
    fa64:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fa68:	bl	6b40 <__lsan_init@plt>
    fa6c:	b	fa38 <_ZdaPvm@@Base+0x28>

000000000000fa70 <_ZdlPvSt11align_val_t@@Base>:
    fa70:	stp	x19, x30, [sp, #-16]!
    fa74:	mov	x19, x0
    fa78:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fa7c:	ldr	x1, [x1, #4048]
    fa80:	ldrb	w0, [x1]
    fa84:	cbnz	w0, faa8 <_ZdlPvSt11align_val_t@@Base+0x38>
    fa88:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fa8c:	ldr	x0, [x0, #3592]
    fa90:	ldrb	w0, [x0]
    fa94:	cbz	w0, fac8 <_ZdlPvSt11align_val_t@@Base+0x58>
    fa98:	mov	x0, x19
    fa9c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    faa0:	ldp	x19, x30, [sp], #16
    faa4:	ret
    faa8:	mov	x4, #0x0                   	// #0
    faac:	mov	x3, #0x0                   	// #0
    fab0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fab4:	add	x2, x2, #0x5a8
    fab8:	mov	w1, #0x105                 	// #261
    fabc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fac0:	add	x0, x0, #0xe60
    fac4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fac8:	bl	6b40 <__lsan_init@plt>
    facc:	b	fa98 <_ZdlPvSt11align_val_t@@Base+0x28>

000000000000fad0 <_ZdaPvSt11align_val_t@@Base>:
    fad0:	stp	x19, x30, [sp, #-16]!
    fad4:	mov	x19, x0
    fad8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fadc:	ldr	x1, [x1, #4048]
    fae0:	ldrb	w0, [x1]
    fae4:	cbnz	w0, fb08 <_ZdaPvSt11align_val_t@@Base+0x38>
    fae8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    faec:	ldr	x0, [x0, #3592]
    faf0:	ldrb	w0, [x0]
    faf4:	cbz	w0, fb28 <_ZdaPvSt11align_val_t@@Base+0x58>
    faf8:	mov	x0, x19
    fafc:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    fb00:	ldp	x19, x30, [sp], #16
    fb04:	ret
    fb08:	mov	x4, #0x0                   	// #0
    fb0c:	mov	x3, #0x0                   	// #0
    fb10:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fb14:	add	x2, x2, #0x5a8
    fb18:	mov	w1, #0x108                 	// #264
    fb1c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fb20:	add	x0, x0, #0xe60
    fb24:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fb28:	bl	6b40 <__lsan_init@plt>
    fb2c:	b	faf8 <_ZdaPvSt11align_val_t@@Base+0x28>

000000000000fb30 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base>:
    fb30:	stp	x19, x30, [sp, #-16]!
    fb34:	mov	x19, x0
    fb38:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fb3c:	ldr	x1, [x1, #4048]
    fb40:	ldrb	w0, [x1]
    fb44:	cbnz	w0, fb68 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x38>
    fb48:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fb4c:	ldr	x0, [x0, #3592]
    fb50:	ldrb	w0, [x0]
    fb54:	cbz	w0, fb88 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x58>
    fb58:	mov	x0, x19
    fb5c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    fb60:	ldp	x19, x30, [sp], #16
    fb64:	ret
    fb68:	mov	x4, #0x0                   	// #0
    fb6c:	mov	x3, #0x0                   	// #0
    fb70:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fb74:	add	x2, x2, #0x5a8
    fb78:	mov	w1, #0x10b                 	// #267
    fb7c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fb80:	add	x0, x0, #0xe60
    fb84:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fb88:	bl	6b40 <__lsan_init@plt>
    fb8c:	b	fb58 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x28>

000000000000fb90 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base>:
    fb90:	stp	x19, x30, [sp, #-16]!
    fb94:	mov	x19, x0
    fb98:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fb9c:	ldr	x1, [x1, #4048]
    fba0:	ldrb	w0, [x1]
    fba4:	cbnz	w0, fbc8 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x38>
    fba8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fbac:	ldr	x0, [x0, #3592]
    fbb0:	ldrb	w0, [x0]
    fbb4:	cbz	w0, fbe8 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x58>
    fbb8:	mov	x0, x19
    fbbc:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    fbc0:	ldp	x19, x30, [sp], #16
    fbc4:	ret
    fbc8:	mov	x4, #0x0                   	// #0
    fbcc:	mov	x3, #0x0                   	// #0
    fbd0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fbd4:	add	x2, x2, #0x5a8
    fbd8:	mov	w1, #0x10e                 	// #270
    fbdc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fbe0:	add	x0, x0, #0xe60
    fbe4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fbe8:	bl	6b40 <__lsan_init@plt>
    fbec:	b	fbb8 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x28>

000000000000fbf0 <_ZdlPvmSt11align_val_t@@Base>:
    fbf0:	stp	x19, x30, [sp, #-16]!
    fbf4:	mov	x19, x0
    fbf8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fbfc:	ldr	x1, [x1, #4048]
    fc00:	ldrb	w0, [x1]
    fc04:	cbnz	w0, fc28 <_ZdlPvmSt11align_val_t@@Base+0x38>
    fc08:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fc0c:	ldr	x0, [x0, #3592]
    fc10:	ldrb	w0, [x0]
    fc14:	cbz	w0, fc48 <_ZdlPvmSt11align_val_t@@Base+0x58>
    fc18:	mov	x0, x19
    fc1c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    fc20:	ldp	x19, x30, [sp], #16
    fc24:	ret
    fc28:	mov	x4, #0x0                   	// #0
    fc2c:	mov	x3, #0x0                   	// #0
    fc30:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fc34:	add	x2, x2, #0x5a8
    fc38:	mov	w1, #0x111                 	// #273
    fc3c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fc40:	add	x0, x0, #0xe60
    fc44:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fc48:	bl	6b40 <__lsan_init@plt>
    fc4c:	b	fc18 <_ZdlPvmSt11align_val_t@@Base+0x28>

000000000000fc50 <_ZdaPvmSt11align_val_t@@Base>:
    fc50:	stp	x19, x30, [sp, #-16]!
    fc54:	mov	x19, x0
    fc58:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fc5c:	ldr	x1, [x1, #4048]
    fc60:	ldrb	w0, [x1]
    fc64:	cbnz	w0, fc88 <_ZdaPvmSt11align_val_t@@Base+0x38>
    fc68:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fc6c:	ldr	x0, [x0, #3592]
    fc70:	ldrb	w0, [x0]
    fc74:	cbz	w0, fca8 <_ZdaPvmSt11align_val_t@@Base+0x58>
    fc78:	mov	x0, x19
    fc7c:	bl	c744 <__sanitizer_get_allocated_size@@Base+0xe6c>
    fc80:	ldp	x19, x30, [sp], #16
    fc84:	ret
    fc88:	mov	x4, #0x0                   	// #0
    fc8c:	mov	x3, #0x0                   	// #0
    fc90:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fc94:	add	x2, x2, #0x5a8
    fc98:	mov	w1, #0x114                 	// #276
    fc9c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fca0:	add	x0, x0, #0xe60
    fca4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    fca8:	bl	6b40 <__lsan_init@plt>
    fcac:	b	fc78 <_ZdaPvmSt11align_val_t@@Base+0x28>
    fcb0:	str	x30, [sp, #-16]!
    fcb4:	adrp	x3, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    fcb8:	ldr	x3, [x3, #3952]
    fcbc:	blr	x3
    fcc0:	ldr	x30, [sp], #16
    fcc4:	ret
    fcc8:	stp	x19, x30, [sp, #-16]!
    fccc:	adrp	x0, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    fcd0:	ldrb	w0, [x0, #3960]
    fcd4:	cbnz	w0, ff64 <_ZdaPvmSt11align_val_t@@Base+0x314>
    fcd8:	adrp	x19, e4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    fcdc:	add	x19, x19, #0xf40
    fce0:	mov	w0, #0x1                   	// #1
    fce4:	strb	w0, [x19, #56]
    fce8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fcec:	ldr	x3, [x3, #3984]
    fcf0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fcf4:	ldr	x2, [x2, #3440]
    fcf8:	add	x1, x19, #0x28
    fcfc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fd00:	add	x0, x0, #0xf78
    fd04:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fd08:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd0c:	ldr	x3, [x3, #3720]
    fd10:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd14:	ldr	x2, [x2, #3800]
    fd18:	add	x1, x19, #0x30
    fd1c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fd20:	add	x0, x0, #0xf80
    fd24:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fd28:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd2c:	ldr	x3, [x3, #3640]
    fd30:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd34:	ldr	x2, [x2, #3752]
    fd38:	add	x1, x19, #0x40
    fd3c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fd40:	add	x0, x0, #0xf90
    fd44:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fd48:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd4c:	ldr	x3, [x3, #3848]
    fd50:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd54:	ldr	x2, [x2, #3464]
    fd58:	add	x1, x19, #0x48
    fd5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fd60:	add	x0, x0, #0xf98
    fd64:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fd68:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd6c:	ldr	x3, [x3, #3944]
    fd70:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd74:	ldr	x2, [x2, #4056]
    fd78:	add	x1, x19, #0x50
    fd7c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fd80:	add	x0, x0, #0xfa0
    fd84:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fd88:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd8c:	ldr	x3, [x3, #3864]
    fd90:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd94:	ldr	x2, [x2, #3768]
    fd98:	add	x1, x19, #0x58
    fd9c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fda0:	add	x0, x0, #0xfa8
    fda4:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fda8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdac:	ldr	x3, [x3, #3960]
    fdb0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdb4:	ldr	x2, [x2, #3904]
    fdb8:	add	x1, x19, #0x60
    fdbc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fdc0:	add	x0, x0, #0xfb0
    fdc4:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fdc8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdcc:	ldr	x3, [x3, #3576]
    fdd0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdd4:	ldr	x2, [x2, #3416]
    fdd8:	add	x1, x19, #0x68
    fddc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fde0:	add	x0, x0, #0xfb8
    fde4:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fde8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdec:	ldr	x3, [x3, #3448]
    fdf0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdf4:	ldr	x2, [x2, #3872]
    fdf8:	add	x1, x19, #0x70
    fdfc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fe00:	add	x0, x0, #0xfc8
    fe04:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fe08:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe0c:	ldr	x3, [x3, #3952]
    fe10:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe14:	ldr	x2, [x2, #3896]
    fe18:	add	x1, x19, #0x78
    fe1c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fe20:	add	x0, x0, #0xfd8
    fe24:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fe28:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe2c:	ldr	x3, [x3, #3792]
    fe30:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe34:	ldr	x2, [x2, #3656]
    fe38:	add	x1, x19, #0x80
    fe3c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fe40:	add	x0, x0, #0xfe8
    fe44:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fe48:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe4c:	ldr	x3, [x3, #3624]
    fe50:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe54:	ldr	x2, [x2, #3912]
    fe58:	add	x1, x19, #0x88
    fe5c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    fe60:	add	x0, x0, #0xff8
    fe64:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fe68:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe6c:	ldr	x3, [x3, #3824]
    fe70:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe74:	ldr	x2, [x2, #3888]
    fe78:	add	x1, x19, #0x90
    fe7c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    fe80:	add	x0, x0, #0x0
    fe84:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fe88:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe8c:	ldr	x3, [x3, #3776]
    fe90:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe94:	ldr	x2, [x2, #3992]
    fe98:	add	x1, x19, #0x98
    fe9c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    fea0:	add	x0, x0, #0x8
    fea4:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fea8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    feac:	ldr	x3, [x3, #3480]
    feb0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    feb4:	ldr	x2, [x2, #3632]
    feb8:	add	x1, x19, #0xa0
    febc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    fec0:	add	x0, x0, #0x20
    fec4:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fec8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fecc:	ldr	x3, [x3, #3688]
    fed0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fed4:	ldr	x2, [x2, #3600]
    fed8:	add	x1, x19, #0xa8
    fedc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    fee0:	add	x0, x0, #0x30
    fee4:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    fee8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    feec:	ldr	x3, [x3, #3520]
    fef0:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fef4:	ldr	x2, [x2, #3504]
    fef8:	add	x1, x19, #0x10
    fefc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    ff00:	add	x0, x0, #0x38
    ff04:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    ff08:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ff0c:	ldr	x3, [x3, #3968]
    ff10:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ff14:	ldr	x2, [x2, #3936]
    ff18:	add	x1, x19, #0x18
    ff1c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    ff20:	add	x0, x0, #0x48
    ff24:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    ff28:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ff2c:	ldr	x3, [x3, #3696]
    ff30:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ff34:	ldr	x2, [x2, #3608]
    ff38:	add	x1, x19, #0x20
    ff3c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    ff40:	add	x0, x0, #0x58
    ff44:	bl	27cf8 <__sanitizer_set_death_callback@@Base+0x177c>
    ff48:	adrp	x1, e000 <__sancov_lowest_stack@@Base+0x7d0>
    ff4c:	add	x1, x1, #0xf78
    ff50:	add	x0, x19, #0x8
    ff54:	bl	6b80 <pthread_key_create@plt>
    ff58:	cbnz	w0, ff84 <_ZdaPvmSt11align_val_t@@Base+0x334>
    ff5c:	ldp	x19, x30, [sp], #16
    ff60:	ret
    ff64:	mov	x4, #0x0                   	// #0
    ff68:	mov	x3, #0x0                   	// #0
    ff6c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ff70:	add	x2, x2, #0xf08
    ff74:	mov	w1, #0x4f                  	// #79
    ff78:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
    ff7c:	add	x0, x0, #0xf28
    ff80:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
    ff84:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
    ff88:	add	x0, x0, #0x60
    ff8c:	bl	1d908 <OnPrint@@Base+0x3d8>
    ff90:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
    ff94:	ldr	x2, [x1]
    ff98:	str	x2, [x0, #144]
    ff9c:	ldr	x2, [x1, #8]
    ffa0:	str	x2, [x0, #152]
    ffa4:	ldr	x2, [x1, #32]
    ffa8:	str	x2, [x0, #176]
    ffac:	ldr	x2, [x1, #40]
    ffb0:	str	x2, [x0, #184]
    ffb4:	ldr	x2, [x1, #16]
    ffb8:	str	x2, [x0, #160]
    ffbc:	ldr	x2, [x1, #24]
    ffc0:	str	x2, [x0, #168]
    ffc4:	ldr	x1, [x1, #48]
    ffc8:	str	x1, [x0, #192]
    ffcc:	ret
    ffd0:	ldr	x2, [x0, #40]
    ffd4:	cmp	x1, x2
    ffd8:	b.eq	ffe4 <_ZdaPvmSt11align_val_t@@Base+0x394>  // b.none
    ffdc:	mov	w0, #0x0                   	// #0
    ffe0:	ret
    ffe4:	ldr	w0, [x0, #112]
    ffe8:	cmp	w0, #0x0
    ffec:	cset	w0, ne  // ne = any
    fff0:	b	ffe0 <_ZdaPvmSt11align_val_t@@Base+0x390>
    fff4:	str	x30, [sp, #-16]!
    fff8:	bl	c334 <__sanitizer_get_allocated_size@@Base+0xa5c>
    fffc:	bl	27330 <__sanitizer_set_death_callback@@Base+0xdb4>
   10000:	ldr	x30, [sp], #16
   10004:	ret
   10008:	stp	x19, x30, [sp, #-16]!
   1000c:	adrp	x19, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10010:	add	x19, x19, #0x40
   10014:	mov	w4, #0x0                   	// #0
   10018:	mov	w3, #0x40                  	// #64
   1001c:	mov	w2, #0x2000                	// #8192
   10020:	adrp	x1, 10000 <_ZdaPvmSt11align_val_t@@Base+0x3b0>
   10024:	add	x1, x1, #0x78
   10028:	mov	x0, x19
   1002c:	bl	26808 <__sanitizer_set_death_callback@@Base+0x28c>
   10030:	str	x19, [x19, #208]
   10034:	ldp	x19, x30, [sp], #16
   10038:	ret
   1003c:	stp	x19, x30, [sp, #-16]!
   10040:	mov	x19, x0
   10044:	bl	265ac <__sanitizer_set_death_callback@@Base+0x30>
   10048:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   1004c:	add	x0, x0, #0xbc8
   10050:	str	x0, [x19]
   10054:	str	xzr, [x19, #144]
   10058:	str	xzr, [x19, #152]
   1005c:	str	xzr, [x19, #160]
   10060:	str	xzr, [x19, #168]
   10064:	str	xzr, [x19, #176]
   10068:	str	xzr, [x19, #184]
   1006c:	str	xzr, [x19, #192]
   10070:	ldp	x19, x30, [sp], #16
   10074:	ret
   10078:	stp	x19, x20, [sp, #-32]!
   1007c:	str	x30, [sp, #16]
   10080:	mov	w20, w0
   10084:	mov	w2, #0x0                   	// #0
   10088:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1008c:	add	x1, x1, #0x90
   10090:	mov	x0, #0xc8                  	// #200
   10094:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   10098:	mov	x19, x0
   1009c:	mov	w1, w20
   100a0:	bl	1003c <_ZdaPvmSt11align_val_t@@Base+0x3ec>
   100a4:	mov	x0, x19
   100a8:	ldr	x30, [sp, #16]
   100ac:	ldp	x19, x20, [sp], #32
   100b0:	ret
   100b4:	str	x30, [sp, #-16]!
   100b8:	mov	x4, #0x0                   	// #0
   100bc:	mov	w3, w0
   100c0:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   100c4:	ldr	x0, [x0, #272]
   100c8:	bl	27184 <__sanitizer_set_death_callback@@Base+0xc08>
   100cc:	ldr	x30, [sp], #16
   100d0:	ret
   100d4:	stp	x19, x20, [sp, #-128]!
   100d8:	stp	x21, x22, [sp, #16]
   100dc:	str	x30, [sp, #32]
   100e0:	mov	w20, w0
   100e4:	mov	x21, x1
   100e8:	and	w22, w2, #0xff
   100ec:	str	xzr, [sp, #64]
   100f0:	str	xzr, [sp, #56]
   100f4:	add	x19, sp, #0x48
   100f8:	cmp	w0, #0x0
   100fc:	add	x4, sp, #0x38
   10100:	add	x3, sp, #0x68
   10104:	add	x2, sp, #0x40
   10108:	mov	x1, x19
   1010c:	cset	w0, eq  // eq = none
   10110:	bl	1aa54 <__sanitizer_set_report_fd@@Base+0x46a4>
   10114:	ldr	x0, [sp, #72]
   10118:	ldr	x1, [sp, #64]
   1011c:	add	x0, x0, x1
   10120:	str	x0, [sp, #80]
   10124:	ldr	x0, [sp, #104]
   10128:	ldr	x1, [sp, #56]
   1012c:	add	x0, x0, x1
   10130:	str	x0, [sp, #112]
   10134:	add	x1, x19, #0x18
   10138:	add	x0, x19, #0x10
   1013c:	bl	b268 <__sanitizer_print_stack_trace@@Base+0x44c>
   10140:	bl	278b4 <__sanitizer_set_death_callback@@Base+0x1338>
   10144:	str	x0, [sp, #120]
   10148:	mov	x4, x19
   1014c:	mov	w3, w22
   10150:	mov	x2, x21
   10154:	mov	w1, w20
   10158:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   1015c:	ldr	x0, [x0, #272]
   10160:	bl	26c00 <__sanitizer_set_death_callback@@Base+0x684>
   10164:	ldp	x21, x22, [sp, #16]
   10168:	ldr	x30, [sp, #32]
   1016c:	ldp	x19, x20, [sp], #128
   10170:	ret
   10174:	stp	x19, x30, [sp, #-16]!
   10178:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   1017c:	ldr	x19, [x0, #272]
   10180:	bl	aec0 <__sanitizer_print_stack_trace@@Base+0xa4>
   10184:	mov	w1, w0
   10188:	mov	x0, x19
   1018c:	bl	26ff8 <__sanitizer_set_death_callback@@Base+0xa7c>
   10190:	mov	w0, #0xffffffff            	// #-1
   10194:	bl	aee4 <__sanitizer_print_stack_trace@@Base+0xc8>
   10198:	ldp	x19, x30, [sp], #16
   1019c:	ret
   101a0:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   101a4:	ldr	x0, [x0, #272]
   101a8:	cbz	x0, 101e0 <_ZdaPvmSt11align_val_t@@Base+0x590>
   101ac:	stp	x19, x30, [sp, #-16]!
   101b0:	bl	aec0 <__sanitizer_print_stack_trace@@Base+0xa4>
   101b4:	cmn	w0, #0x1
   101b8:	b.eq	101d8 <_ZdaPvmSt11align_val_t@@Base+0x588>  // b.none
   101bc:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   101c0:	ldr	x19, [x0, #272]
   101c4:	bl	aec0 <__sanitizer_print_stack_trace@@Base+0xa4>
   101c8:	ldr	x1, [x19, #152]
   101cc:	ldr	x0, [x1, w0, uxtw #3]
   101d0:	ldp	x19, x30, [sp], #16
   101d4:	ret
   101d8:	mov	x0, #0x0                   	// #0
   101dc:	b	101d0 <_ZdaPvmSt11align_val_t@@Base+0x580>
   101e0:	ret
   101e4:	str	x30, [sp, #-16]!
   101e8:	mov	x2, x0
   101ec:	adrp	x1, f000 <_Znwm@@Base+0x30>
   101f0:	add	x1, x1, #0xfd0
   101f4:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   101f8:	ldr	x0, [x0, #272]
   101fc:	bl	26978 <__sanitizer_set_death_callback@@Base+0x3fc>
   10200:	ldr	x30, [sp], #16
   10204:	ret
   10208:	str	x30, [sp, #-16]!
   1020c:	cmn	w0, #0x1
   10210:	b.eq	10230 <_ZdaPvmSt11align_val_t@@Base+0x5e0>  // b.none
   10214:	mov	w1, w0
   10218:	mov	x2, #0x0                   	// #0
   1021c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10220:	ldr	x0, [x0, #272]
   10224:	bl	26ef8 <__sanitizer_set_death_callback@@Base+0x97c>
   10228:	ldr	x30, [sp], #16
   1022c:	ret
   10230:	mov	x4, #0xffffffff            	// #4294967295
   10234:	mov	x3, x4
   10238:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1023c:	add	x2, x2, #0xa0
   10240:	mov	w1, #0x75                  	// #117
   10244:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10248:	add	x0, x0, #0xc0
   1024c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10250:	stp	x19, x30, [sp, #-16]!
   10254:	bl	aec0 <__sanitizer_print_stack_trace@@Base+0xa4>
   10258:	cbz	w0, 10264 <_ZdaPvmSt11align_val_t@@Base+0x614>
   1025c:	ldp	x19, x30, [sp], #16
   10260:	ret
   10264:	bl	101a0 <_ZdaPvmSt11align_val_t@@Base+0x550>
   10268:	mov	x19, x0
   1026c:	bl	18c70 <__sanitizer_set_report_fd@@Base+0x28c0>
   10270:	str	x0, [x19, #32]
   10274:	b	1025c <_ZdaPvmSt11align_val_t@@Base+0x60c>
   10278:	stp	x19, x20, [sp, #-64]!
   1027c:	stp	x21, x22, [sp, #16]
   10280:	stp	x23, x24, [sp, #32]
   10284:	stp	x25, x30, [sp, #48]
   10288:	mov	x25, x1
   1028c:	mov	x24, x2
   10290:	mov	x23, x3
   10294:	mov	x22, x4
   10298:	mov	x21, x5
   1029c:	mov	x20, x6
   102a0:	mov	x19, x7
   102a4:	mov	x1, x0
   102a8:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   102ac:	ldr	x0, [x0, #272]
   102b0:	bl	26a98 <__sanitizer_set_death_callback@@Base+0x51c>
   102b4:	cbz	x0, 10308 <_ZdaPvmSt11align_val_t@@Base+0x6b8>
   102b8:	ldr	x1, [x0, #144]
   102bc:	str	x1, [x25]
   102c0:	ldr	x1, [x0, #152]
   102c4:	str	x1, [x24]
   102c8:	ldr	x1, [x0, #176]
   102cc:	str	x1, [x23]
   102d0:	ldr	x1, [x0, #184]
   102d4:	str	x1, [x22]
   102d8:	ldr	x1, [x0, #160]
   102dc:	str	x1, [x21]
   102e0:	ldr	x1, [x0, #168]
   102e4:	str	x1, [x20]
   102e8:	ldr	x0, [x0, #192]
   102ec:	str	x0, [x19]
   102f0:	mov	w0, #0x1                   	// #1
   102f4:	ldp	x21, x22, [sp, #16]
   102f8:	ldp	x23, x24, [sp, #32]
   102fc:	ldp	x25, x30, [sp, #48]
   10300:	ldp	x19, x20, [sp], #64
   10304:	ret
   10308:	mov	w0, #0x0                   	// #0
   1030c:	b	102f4 <_ZdaPvmSt11align_val_t@@Base+0x6a4>
   10310:	ret
   10314:	str	x30, [sp, #-16]!
   10318:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   1031c:	ldr	x0, [x0, #272]
   10320:	add	x0, x0, #0x18
   10324:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   10328:	ldr	x30, [sp], #16
   1032c:	ret
   10330:	str	x30, [sp, #-16]!
   10334:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10338:	ldr	x0, [x0, #272]
   1033c:	add	x0, x0, #0x18
   10340:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   10344:	ldr	x30, [sp], #16
   10348:	ret
   1034c:	stp	x19, x30, [sp, #-16]!
   10350:	adrp	x19, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10354:	add	x19, x19, #0x40
   10358:	ldr	x0, [x19, #208]
   1035c:	add	x0, x0, #0x18
   10360:	bl	18fa4 <__sanitizer_set_report_fd@@Base+0x2bf4>
   10364:	ldr	x0, [x19, #208]
   10368:	ldp	x19, x30, [sp], #16
   1036c:	ret
   10370:	ret
   10374:	ret
   10378:	ret
   1037c:	ret
   10380:	ret

0000000000010384 <__sancov_default_options@@Base>:
   10384:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   10388:	add	x0, x0, #0x9e0
   1038c:	ret
   10390:	mov	w1, #0x1                   	// #1
   10394:	strb	w1, [x0]
   10398:	strb	wzr, [x0, #1]
   1039c:	ret
   103a0:	stp	x19, x20, [sp, #-80]!
   103a4:	stp	x21, x22, [sp, #16]
   103a8:	str	x30, [sp, #32]
   103ac:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   103b0:	add	x20, x0, #0x118
   103b4:	mov	w1, #0x1                   	// #1
   103b8:	strb	w1, [x0, #280]
   103bc:	strb	wzr, [x20, #1]
   103c0:	add	x19, sp, #0x30
   103c4:	mov	x0, x19
   103c8:	bl	17a14 <__sanitizer_set_report_fd@@Base+0x1664>
   103cc:	adrp	x22, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   103d0:	ldr	x22, [x22, #3456]
   103d4:	mov	x1, #0x10                  	// #16
   103d8:	mov	x0, x22
   103dc:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   103e0:	mov	x2, x0
   103e4:	adrp	x21, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   103e8:	add	x21, x21, #0xb80
   103ec:	str	x21, [x0]
   103f0:	str	x20, [x0, #8]
   103f4:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   103f8:	add	x3, x3, #0xf0
   103fc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10400:	add	x1, x1, #0x140
   10404:	mov	x0, x19
   10408:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   1040c:	mov	x1, #0x10                  	// #16
   10410:	mov	x0, x22
   10414:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   10418:	mov	x2, x0
   1041c:	str	x21, [x0]
   10420:	add	x0, x20, #0x1
   10424:	str	x0, [x2, #8]
   10428:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1042c:	add	x3, x3, #0x150
   10430:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10434:	add	x1, x1, #0x168
   10438:	mov	x0, x19
   1043c:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   10440:	bl	6d30 <__sancov_default_options@plt>
   10444:	mov	x1, x0
   10448:	mov	x0, x19
   1044c:	bl	178a0 <__sanitizer_set_report_fd@@Base+0x14f0>
   10450:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10454:	add	x0, x0, #0x170
   10458:	bl	18cf4 <__sanitizer_set_report_fd@@Base+0x2944>
   1045c:	mov	x1, x0
   10460:	mov	x0, x19
   10464:	bl	178a0 <__sanitizer_set_report_fd@@Base+0x14f0>
   10468:	bl	173cc <__sanitizer_set_report_fd@@Base+0x101c>
   1046c:	ldrb	w0, [x20, #1]
   10470:	cbnz	w0, 10484 <__sancov_default_options@@Base+0x100>
   10474:	ldp	x21, x22, [sp, #16]
   10478:	ldr	x30, [sp, #32]
   1047c:	ldp	x19, x20, [sp], #80
   10480:	ret
   10484:	add	x0, sp, #0x30
   10488:	bl	174a0 <__sanitizer_set_report_fd@@Base+0x10f0>
   1048c:	b	10474 <__sancov_default_options@@Base+0xf0>
   10490:	str	x30, [sp, #-16]!
   10494:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10498:	mov	w2, #0x1                   	// #1
   1049c:	strb	w2, [x1, #320]
   104a0:	mov	x2, x0
   104a4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   104a8:	ldr	x0, [x0, #4008]
   104ac:	ldr	x1, [x0]
   104b0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   104b4:	add	x0, x0, #0x180
   104b8:	bl	1d908 <OnPrint@@Base+0x3d8>
   104bc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   104c0:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   104c4:	add	x0, x0, #0x140
   104c8:	ldrb	w0, [x0, #8]
   104cc:	and	w0, w0, #0xff
   104d0:	dmb	ish
   104d4:	cbz	w0, 104e4 <__sancov_default_options@@Base+0x160>
   104d8:	adrp	x0, f4000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   104dc:	add	x0, x0, #0x9c0
   104e0:	ret
   104e4:	stp	x19, x20, [sp, #-32]!
   104e8:	str	x30, [sp, #16]
   104ec:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   104f0:	add	x0, x0, #0x140
   104f4:	add	x0, x0, #0x10
   104f8:	mov	w2, #0x1                   	// #1
   104fc:	ldxrb	w1, [x0]
   10500:	stxrb	w3, w2, [x0]
   10504:	cbnz	w3, 104fc <__sancov_default_options@@Base+0x178>
   10508:	dmb	ish
   1050c:	and	w0, w1, #0xff
   10510:	cbnz	w0, 1054c <__sancov_default_options@@Base+0x1c8>
   10514:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10518:	add	x0, x0, #0x140
   1051c:	ldrb	w0, [x0, #8]
   10520:	and	w0, w0, #0xff
   10524:	cbz	w0, 10560 <__sancov_default_options@@Base+0x1dc>
   10528:	dmb	ish
   1052c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10530:	add	x0, x0, #0x140
   10534:	strb	wzr, [x0, #16]
   10538:	adrp	x0, f4000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   1053c:	add	x0, x0, #0x9c0
   10540:	ldr	x30, [sp, #16]
   10544:	ldp	x19, x20, [sp], #32
   10548:	ret
   1054c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10550:	add	x0, x0, #0x140
   10554:	add	x0, x0, #0x10
   10558:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   1055c:	b	10514 <__sancov_default_options@@Base+0x190>
   10560:	adrp	x19, f4000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   10564:	add	x19, x19, #0x9c0
   10568:	mov	x2, #0x80000               	// #524288
   1056c:	mov	w1, #0x0                   	// #0
   10570:	mov	x0, x19
   10574:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   10578:	add	x19, x19, #0x80, lsl #12
   1057c:	strb	wzr, [x19]
   10580:	mov	x2, #0xd80                 	// #3456
   10584:	mov	w1, #0x0                   	// #0
   10588:	adrp	x0, 174000 <__asan_cplus_demangle_operators@@Base+0x113be0>
   1058c:	add	x0, x0, #0xa00
   10590:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   10594:	mov	x2, #0x248                 	// #584
   10598:	movk	x2, #0x4, lsl #16
   1059c:	mov	w1, #0x0                   	// #0
   105a0:	adrp	x0, 175000 <__asan_cplus_demangle_operators@@Base+0x114be0>
   105a4:	add	x0, x0, #0x780
   105a8:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   105ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105b0:	ldr	x0, [x0, #4000]
   105b4:	ldr	x0, [x0]
   105b8:	cbz	x0, 10620 <__sancov_default_options@@Base+0x29c>
   105bc:	adrp	x19, f4000 <__asan_cplus_demangle_operators@@Base+0x93be0>
   105c0:	add	x19, x19, #0x9c0
   105c4:	add	x1, x19, #0x80, lsl #12
   105c8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   105cc:	ldr	x0, [x0, #4000]
   105d0:	ldr	x0, [x0]
   105d4:	str	x0, [x1, #3520]
   105d8:	adrp	x0, 175000 <__asan_cplus_demangle_operators@@Base+0x114be0>
   105dc:	add	x0, x0, #0x790
   105e0:	str	x0, [x1, #3528]
   105e4:	mov	x2, #0x28                  	// #40
   105e8:	mov	w1, #0x0                   	// #0
   105ec:	adrp	x20, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   105f0:	add	x0, x20, #0x9c8
   105f4:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   105f8:	add	x19, x19, #0xc0, lsl #12
   105fc:	add	x20, x20, #0x9c8
   10600:	str	x20, [x19, #4104]
   10604:	str	x20, [x19, #4112]
   10608:	dmb	ish
   1060c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10610:	add	x0, x0, #0x140
   10614:	mov	w1, #0x1                   	// #1
   10618:	strb	w1, [x0, #8]
   1061c:	b	10528 <__sancov_default_options@@Base+0x1a4>
   10620:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   10624:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10628:	ldr	x1, [x1, #4000]
   1062c:	str	x0, [x1]
   10630:	b	105bc <__sancov_default_options@@Base+0x238>
   10634:	stp	x19, x20, [sp, #-32]!
   10638:	str	x30, [sp, #24]
   1063c:	mov	x20, x0
   10640:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   10644:	ldr	x2, [x0, #944]
   10648:	sub	x19, x2, #0x1
   1064c:	tst	x2, x19
   10650:	b.ne	106fc <__sancov_default_options@@Base+0x378>  // b.any
   10654:	add	x1, x1, x19
   10658:	neg	x2, x2
   1065c:	and	x19, x1, x2
   10660:	ldr	x0, [x20, #8]
   10664:	ldr	x1, [x20]
   10668:	sub	x1, x1, x0
   1066c:	cmp	x1, x19
   10670:	b.ge	106e8 <__sancov_default_options@@Base+0x364>  // b.tcont
   10674:	str	x21, [sp, #16]
   10678:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1067c:	ldr	x0, [x0, #4000]
   10680:	ldr	x0, [x0]
   10684:	cbz	x0, 10710 <__sancov_default_options@@Base+0x38c>
   10688:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1068c:	ldr	x0, [x0, #4000]
   10690:	ldr	x21, [x0]
   10694:	cmp	x21, x19
   10698:	csel	x21, x21, x19, cs  // cs = hs, nlast
   1069c:	mov	w2, #0x0                   	// #0
   106a0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   106a4:	add	x1, x1, #0x1d0
   106a8:	mov	x0, x21
   106ac:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   106b0:	str	x0, [x20, #8]
   106b4:	add	x1, x0, x21
   106b8:	str	x1, [x20]
   106bc:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   106c0:	ldr	x2, [x1, #344]
   106c4:	cbz	x2, 106d0 <__sancov_default_options@@Base+0x34c>
   106c8:	mov	x1, x21
   106cc:	blr	x2
   106d0:	ldr	x0, [x20, #8]
   106d4:	ldr	x1, [x20]
   106d8:	sub	x1, x1, x0
   106dc:	cmp	x19, x1
   106e0:	b.gt	10724 <__sancov_default_options@@Base+0x3a0>
   106e4:	ldr	x21, [sp, #16]
   106e8:	add	x19, x0, x19
   106ec:	str	x19, [x20, #8]
   106f0:	ldr	x30, [sp, #24]
   106f4:	ldp	x19, x20, [sp], #32
   106f8:	ret
   106fc:	str	x21, [sp, #16]
   10700:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   10704:	add	x0, x0, #0x638
   10708:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1070c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   10710:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   10714:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10718:	ldr	x1, [x1, #4000]
   1071c:	str	x0, [x1]
   10720:	b	10688 <__sancov_default_options@@Base+0x304>
   10724:	mov	x4, #0x0                   	// #0
   10728:	mov	x3, #0x0                   	// #0
   1072c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10730:	add	x2, x2, #0x1e0
   10734:	mov	w1, #0xd4                  	// #212
   10738:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1073c:	add	x0, x0, #0x220
   10740:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10744:	sub	x1, x0, #0x1
   10748:	tst	x1, x0
   1074c:	b.ne	10768 <__sancov_default_options@@Base+0x3e4>  // b.any
   10750:	adrp	x2, 61000 <_Unwind_Backtrace@GCC_3.3>
   10754:	ldr	x1, [x2, #944]
   10758:	cmp	x1, x0
   1075c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   10760:	str	x0, [x2, #944]
   10764:	ret
   10768:	str	x30, [sp, #-16]!
   1076c:	mov	x4, #0x0                   	// #0
   10770:	mov	x3, #0x0                   	// #0
   10774:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10778:	add	x2, x2, #0xc10
   1077c:	mov	w1, #0xdb                  	// #219
   10780:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10784:	add	x0, x0, #0x220
   10788:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1078c:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10790:	str	x0, [x1, #344]
   10794:	ret
   10798:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   1079c:	ldrb	w0, [x0, #320]
   107a0:	ands	w0, w0, #0xff
   107a4:	cset	w0, ne  // ne = any
   107a8:	ret
   107ac:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   107b0:	mov	w1, #0x1                   	// #1
   107b4:	strb	w1, [x0, #320]
   107b8:	ret
   107bc:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   107c0:	add	x0, x0, #0x140
   107c4:	ldrb	w0, [x0, #32]
   107c8:	ands	w0, w0, #0xff
   107cc:	cset	w0, ne  // ne = any
   107d0:	ret
   107d4:	and	w0, w0, #0xff
   107d8:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   107dc:	add	x1, x1, #0x140
   107e0:	strb	w0, [x1, #32]
   107e4:	ret
   107e8:	str	x30, [sp, #-16]!
   107ec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   107f0:	add	x0, x0, #0x268
   107f4:	bl	1d908 <OnPrint@@Base+0x3d8>
   107f8:	ldr	x30, [sp], #16
   107fc:	ret
   10800:	cmn	x0, #0x9
   10804:	b.hi	108d0 <__sancov_default_options@@Base+0x54c>  // b.pmore
   10808:	stp	x19, x20, [sp, #-32]!
   1080c:	stp	x21, x30, [sp, #16]
   10810:	mov	x21, x1
   10814:	add	x20, x0, #0x8
   10818:	cmp	x2, #0x0
   1081c:	mov	x0, #0x8                   	// #8
   10820:	csel	x19, x2, x0, ne  // ne = any
   10824:	cbz	x1, 10860 <__sancov_default_options@@Base+0x4dc>
   10828:	bl	104c0 <__sancov_default_options@@Base+0x13c>
   1082c:	mov	x3, x19
   10830:	mov	x2, x20
   10834:	mov	x1, x21
   10838:	bl	1160c <__sancov_default_options@@Base+0x1288>
   1083c:	cbz	x0, 108c8 <__sancov_default_options@@Base+0x544>
   10840:	mov	x1, #0xc041                	// #49217
   10844:	movk	x1, #0xbceb, lsl #16
   10848:	movk	x1, #0xb03a, lsl #32
   1084c:	movk	x1, #0x6a6c, lsl #48
   10850:	str	x1, [x0], #8
   10854:	ldp	x21, x30, [sp, #16]
   10858:	ldp	x19, x20, [sp], #32
   1085c:	ret
   10860:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10864:	add	x0, x0, #0x140
   10868:	add	x0, x0, #0x28
   1086c:	mov	w2, #0x1                   	// #1
   10870:	ldxrb	w1, [x0]
   10874:	stxrb	w3, w2, [x0]
   10878:	cbnz	w3, 10870 <__sancov_default_options@@Base+0x4ec>
   1087c:	dmb	ish
   10880:	and	w0, w1, #0xff
   10884:	cbnz	w0, 108b4 <__sancov_default_options@@Base+0x530>
   10888:	bl	104c0 <__sancov_default_options@@Base+0x13c>
   1088c:	mov	x3, x19
   10890:	mov	x2, x20
   10894:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10898:	add	x1, x1, #0x170
   1089c:	bl	1160c <__sancov_default_options@@Base+0x1288>
   108a0:	dmb	ish
   108a4:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   108a8:	add	x1, x1, #0x140
   108ac:	strb	wzr, [x1, #40]
   108b0:	b	1083c <__sancov_default_options@@Base+0x4b8>
   108b4:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   108b8:	add	x0, x0, #0x140
   108bc:	add	x0, x0, #0x28
   108c0:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   108c4:	b	10888 <__sancov_default_options@@Base+0x504>
   108c8:	mov	x0, x20
   108cc:	bl	10490 <__sancov_default_options@@Base+0x10c>
   108d0:	mov	x0, #0x0                   	// #0
   108d4:	ret
   108d8:	stp	x19, x20, [sp, #-32]!
   108dc:	str	x30, [sp, #16]
   108e0:	mov	x3, x1
   108e4:	mov	x1, x2
   108e8:	cbz	x0, 108f4 <__sancov_default_options@@Base+0x570>
   108ec:	umulh	x2, x3, x0
   108f0:	cbnz	x2, 10928 <__sancov_default_options@@Base+0x5a4>
   108f4:	mul	x19, x0, x3
   108f8:	mov	x2, #0x0                   	// #0
   108fc:	mov	x0, x19
   10900:	bl	10800 <__sancov_default_options@@Base+0x47c>
   10904:	mov	x20, x0
   10908:	cbz	x0, 10918 <__sancov_default_options@@Base+0x594>
   1090c:	mov	x2, x19
   10910:	mov	w1, #0x0                   	// #0
   10914:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   10918:	mov	x0, x20
   1091c:	ldr	x30, [sp, #16]
   10920:	ldp	x19, x20, [sp], #32
   10924:	ret
   10928:	mov	x2, x0
   1092c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10930:	ldr	x0, [x0, #4008]
   10934:	ldr	x1, [x0]
   10938:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1093c:	add	x0, x0, #0x2c0
   10940:	bl	1d908 <OnPrint@@Base+0x3d8>
   10944:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   10948:	stp	x19, x20, [sp, #-32]!
   1094c:	str	x30, [sp, #24]
   10950:	mov	x19, x1
   10954:	mov	x20, x2
   10958:	cbz	x0, 109c4 <__sancov_default_options@@Base+0x640>
   1095c:	cmn	x1, #0x9
   10960:	b.hi	10a78 <__sancov_default_options@@Base+0x6f4>  // b.pmore
   10964:	str	x21, [sp, #16]
   10968:	sub	x21, x0, #0x8
   1096c:	add	x19, x1, #0x8
   10970:	ldur	x4, [x0, #-8]
   10974:	mov	x0, #0xc041                	// #49217
   10978:	movk	x0, #0xbceb, lsl #16
   1097c:	movk	x0, #0xb03a, lsl #32
   10980:	movk	x0, #0x6a6c, lsl #48
   10984:	cmp	x4, x0
   10988:	b.ne	109d8 <__sancov_default_options@@Base+0x654>  // b.any
   1098c:	cbz	x2, 10a00 <__sancov_default_options@@Base+0x67c>
   10990:	bl	104c0 <__sancov_default_options@@Base+0x13c>
   10994:	mov	x4, #0x8                   	// #8
   10998:	mov	x3, x19
   1099c:	mov	x2, x21
   109a0:	mov	x1, x20
   109a4:	bl	11f68 <__sancov_default_options@@Base+0x1be4>
   109a8:	mov	x1, x0
   109ac:	add	x0, x1, #0x8
   109b0:	cbz	x1, 10a70 <__sancov_default_options@@Base+0x6ec>
   109b4:	ldr	x21, [sp, #16]
   109b8:	ldr	x30, [sp, #24]
   109bc:	ldp	x19, x20, [sp], #32
   109c0:	ret
   109c4:	mov	x2, #0x0                   	// #0
   109c8:	mov	x1, x20
   109cc:	mov	x0, x19
   109d0:	bl	10800 <__sancov_default_options@@Base+0x47c>
   109d4:	b	109b8 <__sancov_default_options@@Base+0x634>
   109d8:	mov	x3, #0xc041                	// #49217
   109dc:	movk	x3, #0xbceb, lsl #16
   109e0:	movk	x3, #0xb03a, lsl #32
   109e4:	movk	x3, #0x6a6c, lsl #48
   109e8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   109ec:	add	x2, x2, #0x328
   109f0:	mov	w1, #0xa5                  	// #165
   109f4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   109f8:	add	x0, x0, #0x220
   109fc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10a00:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a04:	add	x0, x0, #0x140
   10a08:	add	x0, x0, #0x28
   10a0c:	mov	w2, #0x1                   	// #1
   10a10:	ldxrb	w1, [x0]
   10a14:	stxrb	w3, w2, [x0]
   10a18:	cbnz	w3, 10a10 <__sancov_default_options@@Base+0x68c>
   10a1c:	dmb	ish
   10a20:	and	w0, w1, #0xff
   10a24:	cbnz	w0, 10a5c <__sancov_default_options@@Base+0x6d8>
   10a28:	bl	104c0 <__sancov_default_options@@Base+0x13c>
   10a2c:	mov	x4, #0x8                   	// #8
   10a30:	mov	x3, x19
   10a34:	mov	x2, x21
   10a38:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a3c:	add	x1, x1, #0x170
   10a40:	bl	11f68 <__sancov_default_options@@Base+0x1be4>
   10a44:	mov	x1, x0
   10a48:	dmb	ish
   10a4c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a50:	add	x0, x0, #0x140
   10a54:	strb	wzr, [x0, #40]
   10a58:	b	109ac <__sancov_default_options@@Base+0x628>
   10a5c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10a60:	add	x0, x0, #0x140
   10a64:	add	x0, x0, #0x28
   10a68:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   10a6c:	b	10a28 <__sancov_default_options@@Base+0x6a4>
   10a70:	mov	x0, x19
   10a74:	bl	10490 <__sancov_default_options@@Base+0x10c>
   10a78:	mov	x0, #0x0                   	// #0
   10a7c:	b	109b8 <__sancov_default_options@@Base+0x634>
   10a80:	cbz	x0, 10b60 <__sancov_default_options@@Base+0x7dc>
   10a84:	stp	x19, x20, [sp, #-32]!
   10a88:	str	x30, [sp, #16]
   10a8c:	mov	x19, x1
   10a90:	sub	x20, x0, #0x8
   10a94:	ldur	x4, [x0, #-8]
   10a98:	mov	x1, #0xc041                	// #49217
   10a9c:	movk	x1, #0xbceb, lsl #16
   10aa0:	movk	x1, #0xb03a, lsl #32
   10aa4:	movk	x1, #0x6a6c, lsl #48
   10aa8:	cmp	x4, x1
   10aac:	b.ne	10ad4 <__sancov_default_options@@Base+0x750>  // b.any
   10ab0:	stur	xzr, [x0, #-8]
   10ab4:	cbz	x19, 10afc <__sancov_default_options@@Base+0x778>
   10ab8:	bl	104c0 <__sancov_default_options@@Base+0x13c>
   10abc:	mov	x2, x20
   10ac0:	mov	x1, x19
   10ac4:	bl	11c10 <__sancov_default_options@@Base+0x188c>
   10ac8:	ldr	x30, [sp, #16]
   10acc:	ldp	x19, x20, [sp], #32
   10ad0:	ret
   10ad4:	mov	x3, #0xc041                	// #49217
   10ad8:	movk	x3, #0xbceb, lsl #16
   10adc:	movk	x3, #0xb03a, lsl #32
   10ae0:	movk	x3, #0x6a6c, lsl #48
   10ae4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10ae8:	add	x2, x2, #0x328
   10aec:	mov	w1, #0xbd                  	// #189
   10af0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   10af4:	add	x0, x0, #0x220
   10af8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10afc:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10b00:	add	x0, x0, #0x140
   10b04:	add	x0, x0, #0x28
   10b08:	mov	w2, #0x1                   	// #1
   10b0c:	ldxrb	w1, [x0]
   10b10:	stxrb	w3, w2, [x0]
   10b14:	cbnz	w3, 10b0c <__sancov_default_options@@Base+0x788>
   10b18:	dmb	ish
   10b1c:	and	w0, w1, #0xff
   10b20:	cbnz	w0, 10b4c <__sancov_default_options@@Base+0x7c8>
   10b24:	bl	104c0 <__sancov_default_options@@Base+0x13c>
   10b28:	mov	x2, x20
   10b2c:	adrp	x1, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10b30:	add	x1, x1, #0x170
   10b34:	bl	11c10 <__sancov_default_options@@Base+0x188c>
   10b38:	dmb	ish
   10b3c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10b40:	add	x0, x0, #0x140
   10b44:	strb	wzr, [x0, #40]
   10b48:	b	10ac8 <__sancov_default_options@@Base+0x744>
   10b4c:	adrp	x0, e7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
   10b50:	add	x0, x0, #0x140
   10b54:	add	x0, x0, #0x28
   10b58:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   10b5c:	b	10b24 <__sancov_default_options@@Base+0x7a0>
   10b60:	ret
   10b64:	stp	x19, x20, [sp, #-48]!
   10b68:	stp	x21, x22, [sp, #16]
   10b6c:	str	x30, [sp, #32]
   10b70:	mov	x21, x0
   10b74:	ldr	x0, [x3, #8]
   10b78:	cbz	x0, 10bf0 <__sancov_default_options@@Base+0x86c>
   10b7c:	mov	x19, x2
   10b80:	mov	x20, x3
   10b84:	add	x22, x2, #0x2, lsl #12
   10b88:	add	x22, x22, #0x1
   10b8c:	lsl	x22, x22, #6
   10b90:	add	x0, x21, x22
   10b94:	mov	w2, #0x1                   	// #1
   10b98:	ldxrb	w1, [x0]
   10b9c:	stxrb	w3, w2, [x0]
   10ba0:	cbnz	w3, 10b98 <__sancov_default_options@@Base+0x814>
   10ba4:	dmb	ish
   10ba8:	and	w1, w1, #0xff
   10bac:	cbnz	w1, 10c10 <__sancov_default_options@@Base+0x88c>
   10bb0:	add	x1, x21, x19, lsl #6
   10bb4:	add	x0, x1, #0x80, lsl #12
   10bb8:	ldr	x0, [x0, #72]
   10bbc:	cbnz	x0, 10c18 <__sancov_default_options@@Base+0x894>
   10bc0:	str	xzr, [x20]
   10bc4:	add	x19, x1, #0x80, lsl #12
   10bc8:	str	x20, [x19, #88]
   10bcc:	str	x20, [x19, #80]
   10bd0:	mov	x0, #0x1                   	// #1
   10bd4:	str	x0, [x19, #72]
   10bd8:	dmb	ish
   10bdc:	strb	wzr, [x21, x22]
   10be0:	ldp	x21, x22, [sp, #16]
   10be4:	ldr	x30, [sp, #32]
   10be8:	ldp	x19, x20, [sp], #48
   10bec:	ret
   10bf0:	mov	x4, #0x0                   	// #0
   10bf4:	mov	x3, #0x0                   	// #0
   10bf8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10bfc:	add	x2, x2, #0x9e8
   10c00:	mov	w1, #0xad                  	// #173
   10c04:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10c08:	add	x0, x0, #0x640
   10c0c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10c10:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   10c14:	b	10bb0 <__sancov_default_options@@Base+0x82c>
   10c18:	add	x1, x1, #0x80, lsl #12
   10c1c:	ldr	x0, [x1, #80]
   10c20:	str	x0, [x20]
   10c24:	str	x20, [x1, #80]
   10c28:	ldr	x0, [x1, #72]
   10c2c:	add	x0, x0, #0x1
   10c30:	str	x0, [x1, #72]
   10c34:	b	10bd8 <__sancov_default_options@@Base+0x854>
   10c38:	sub	sp, sp, #0x210
   10c3c:	stp	x19, x20, [sp]
   10c40:	stp	x21, x22, [sp, #16]
   10c44:	stp	x23, x24, [sp, #32]
   10c48:	str	x30, [sp, #80]
   10c4c:	str	x0, [sp, #112]
   10c50:	mov	x19, x1
   10c54:	mov	x23, x2
   10c58:	mov	x21, x3
   10c5c:	str	x4, [sp, #104]
   10c60:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   10c64:	ldr	x2, [x0, #952]
   10c68:	mov	x1, #0x100000              	// #1048576
   10c6c:	mov	x0, x1
   10c70:	bl	1b254 <__sanitizer_set_report_fd@@Base+0x4ea4>
   10c74:	cbz	x0, 111b4 <__sancov_default_options@@Base+0xe30>
   10c78:	stp	x25, x26, [sp, #48]
   10c7c:	stp	x27, x28, [sp, #64]
   10c80:	mov	x20, x0
   10c84:	ldr	x0, [x19, #24]
   10c88:	add	x0, x0, #0x100, lsl #12
   10c8c:	str	x0, [x19, #24]
   10c90:	tst	x20, #0xfffff
   10c94:	b.ne	10d78 <__sancov_default_options@@Base+0x9f4>  // b.any
   10c98:	lsr	x19, x20, #20
   10c9c:	mov	x0, #0xfffffff             	// #268435455
   10ca0:	cmp	x0, x20, lsr #20
   10ca4:	b.cc	10d98 <__sancov_default_options@@Base+0xa14>  // b.lo, b.ul, b.last
   10ca8:	ldrb	w22, [sp, #104]
   10cac:	lsr	x24, x19, #12
   10cb0:	ldr	x0, [sp, #112]
   10cb4:	ldr	x0, [x0, x24, lsl #3]
   10cb8:	dmb	ish
   10cbc:	mov	x1, x0
   10cc0:	cbz	x0, 10db8 <__sancov_default_options@@Base+0xa34>
   10cc4:	and	x19, x19, #0xfff
   10cc8:	ldrb	w0, [x1, x19]
   10ccc:	str	x0, [sp, #136]
   10cd0:	cbnz	x0, 10e34 <__sancov_default_options@@Base+0xab0>
   10cd4:	strb	w22, [x1, x19]
   10cd8:	ldr	x0, [sp, #104]
   10cdc:	cmp	x0, #0x35
   10ce0:	b.eq	10e54 <__sancov_default_options@@Base+0xad0>  // b.none
   10ce4:	lsl	x26, x0, #4
   10ce8:	cmp	x0, #0x10
   10cec:	b.ls	10d10 <__sancov_default_options@@Base+0x98c>  // b.plast
   10cf0:	ldr	x0, [sp, #104]
   10cf4:	sub	x1, x0, #0x10
   10cf8:	lsr	x26, x1, #2
   10cfc:	mov	x0, #0x100                 	// #256
   10d00:	lsl	x0, x0, x26
   10d04:	lsr	x26, x0, #2
   10d08:	and	x1, x1, #0x3
   10d0c:	madd	x26, x26, x1, x0
   10d10:	mov	x27, #0x100000              	// #1048576
   10d14:	udiv	x27, x27, x26
   10d18:	cbz	x26, 111d0 <__sancov_default_options@@Base+0xe4c>
   10d1c:	mov	w0, #0x4000                	// #16384
   10d20:	udiv	w0, w0, w26
   10d24:	mov	w22, w0
   10d28:	cmp	w0, #0x40
   10d2c:	mov	x0, #0x40                  	// #64
   10d30:	csel	x22, x22, x0, ls  // ls = plast
   10d34:	cmp	x22, #0x0
   10d38:	csinc	x22, x22, xzr, ne  // ne = any
   10d3c:	cmp	x22, #0x3e
   10d40:	mov	x0, #0x3e                  	// #62
   10d44:	csel	x22, x22, x0, ls  // ls = plast
   10d48:	madd	x27, x27, x26, x20
   10d4c:	cmp	x20, x27
   10d50:	b.cs	111e0 <__sancov_default_options@@Base+0xe5c>  // b.hs, b.nlast
   10d54:	str	x20, [sp, #144]
   10d58:	mov	x0, #0x0                   	// #0
   10d5c:	mov	x19, #0x1                   	// #1
   10d60:	add	x28, sp, #0x90
   10d64:	add	x25, sp, #0x210
   10d68:	ldr	x1, [sp, #104]
   10d6c:	add	x1, x23, x1, lsl #10
   10d70:	str	x1, [sp, #96]
   10d74:	b	10fa8 <__sancov_default_options@@Base+0xc24>
   10d78:	mov	x4, #0x0                   	// #0
   10d7c:	mov	x3, #0x0                   	// #0
   10d80:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10d84:	add	x2, x2, #0xa00
   10d88:	mov	w1, #0x126                 	// #294
   10d8c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10d90:	add	x0, x0, #0x640
   10d94:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10d98:	mov	x4, #0x10000000            	// #268435456
   10d9c:	mov	x3, x19
   10da0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10da4:	add	x2, x2, #0xa28
   10da8:	mov	w1, #0x116                 	// #278
   10dac:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10db0:	add	x0, x0, #0x640
   10db4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10db8:	ldr	x0, [sp, #112]
   10dbc:	add	x0, x0, #0x80, lsl #12
   10dc0:	mov	w2, #0x1                   	// #1
   10dc4:	ldxrb	w1, [x0]
   10dc8:	stxrb	w3, w2, [x0]
   10dcc:	cbnz	w3, 10dc4 <__sancov_default_options@@Base+0xa40>
   10dd0:	dmb	ish
   10dd4:	and	w1, w1, #0xff
   10dd8:	cbnz	w1, 10e04 <__sancov_default_options@@Base+0xa80>
   10ddc:	ldr	x0, [sp, #112]
   10de0:	ldr	x0, [x0, x24, lsl #3]
   10de4:	dmb	ish
   10de8:	mov	x1, x0
   10dec:	cbz	x0, 10e0c <__sancov_default_options@@Base+0xa88>
   10df0:	dmb	ish
   10df4:	ldr	x0, [sp, #112]
   10df8:	add	x0, x0, #0x80, lsl #12
   10dfc:	strb	wzr, [x0]
   10e00:	b	10cc4 <__sancov_default_options@@Base+0x940>
   10e04:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   10e08:	b	10ddc <__sancov_default_options@@Base+0xa58>
   10e0c:	mov	w2, #0x0                   	// #0
   10e10:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10e14:	add	x1, x1, #0xa50
   10e18:	mov	x0, #0x1000                	// #4096
   10e1c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   10e20:	mov	x1, x0
   10e24:	dmb	ish
   10e28:	ldr	x0, [sp, #112]
   10e2c:	str	x1, [x0, x24, lsl #3]
   10e30:	b	10df0 <__sancov_default_options@@Base+0xa6c>
   10e34:	mov	x4, x0
   10e38:	mov	x3, #0x0                   	// #0
   10e3c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10e40:	add	x2, x2, #0xa60
   10e44:	mov	w1, #0x42                  	// #66
   10e48:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10e4c:	add	x0, x0, #0xa88
   10e50:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10e54:	mov	x26, #0x200                 	// #512
   10e58:	mov	x27, #0x800                 	// #2048
   10e5c:	b	10d1c <__sancov_default_options@@Base+0x998>
   10e60:	ldr	x0, [sp, #96]
   10e64:	ldr	x24, [x0, #24]
   10e68:	cbnz	x24, 10e7c <__sancov_default_options@@Base+0xaf8>
   10e6c:	ldr	x0, [x19]
   10e70:	cbz	x0, 10f1c <__sancov_default_options@@Base+0xb98>
   10e74:	str	xzr, [x0, #8]
   10e78:	b	10f5c <__sancov_default_options@@Base+0xbd8>
   10e7c:	cmp	x24, #0x35
   10e80:	b.hi	10ee4 <__sancov_default_options@@Base+0xb60>  // b.pmore
   10e84:	lsl	x0, x24, #10
   10e88:	str	x0, [sp, #128]
   10e8c:	add	x1, x23, x0
   10e90:	ldr	x0, [x23, x0]
   10e94:	cbz	x0, 10f04 <__sancov_default_options@@Base+0xb80>
   10e98:	ldr	x1, [sp, #128]
   10e9c:	ldr	x2, [x23, x1]
   10ea0:	sub	x0, x2, #0x1
   10ea4:	str	x0, [x23, x1]
   10ea8:	lsl	x1, x24, #7
   10eac:	add	x0, x1, x0
   10eb0:	add	x0, x0, #0x4
   10eb4:	ldr	x0, [x23, x0, lsl #3]
   10eb8:	add	x1, x1, x2
   10ebc:	add	x1, x1, #0x2
   10ec0:	ldr	x1, [x23, x1, lsl #3]
   10ec4:	prfm	pldl1keep, [x1]
   10ec8:	ldr	x3, [sp, #120]
   10ecc:	ldr	x1, [x3, #16]
   10ed0:	add	x24, x23, x24, lsl #10
   10ed4:	ldr	x2, [x24, #16]
   10ed8:	add	x1, x1, x2
   10edc:	str	x1, [x3, #16]
   10ee0:	b	10e70 <__sancov_default_options@@Base+0xaec>
   10ee4:	mov	x4, #0x36                  	// #54
   10ee8:	mov	x3, x24
   10eec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10ef0:	add	x2, x2, #0xad0
   10ef4:	mov	w1, #0xa0                  	// #160
   10ef8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   10efc:	add	x0, x0, #0xaf0
   10f00:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   10f04:	mov	x3, x24
   10f08:	ldr	x2, [sp, #112]
   10f0c:	mov	x0, x23
   10f10:	bl	11314 <__sancov_default_options@@Base+0xf90>
   10f14:	and	w0, w0, #0xff
   10f18:	cbnz	w0, 10e98 <__sancov_default_options@@Base+0xb14>
   10f1c:	mov	w0, #0x0                   	// #0
   10f20:	ldp	x25, x26, [sp, #48]
   10f24:	ldp	x27, x28, [sp, #64]
   10f28:	b	111b8 <__sancov_default_options@@Base+0xe34>
   10f2c:	str	xzr, [x0]
   10f30:	ldr	x2, [x21, #24]
   10f34:	str	x0, [x2]
   10f38:	str	x0, [x21, #24]
   10f3c:	ldr	x0, [x21, #8]
   10f40:	add	x0, x0, #0x1
   10f44:	str	x0, [x21, #8]
   10f48:	mov	x0, #0x0                   	// #0
   10f4c:	add	x19, x19, #0x8
   10f50:	cmp	x25, x19
   10f54:	b.eq	10fa0 <__sancov_default_options@@Base+0xc1c>  // b.none
   10f58:	cbz	x0, 10e60 <__sancov_default_options@@Base+0xadc>
   10f5c:	ldr	x3, [x19]
   10f60:	ldr	x1, [x0, #8]
   10f64:	add	x2, x1, #0x1
   10f68:	str	x2, [x0, #8]
   10f6c:	add	x1, x1, #0x2
   10f70:	str	x3, [x0, x1, lsl #3]
   10f74:	cmp	x22, x2
   10f78:	b.ne	10f4c <__sancov_default_options@@Base+0xbc8>  // b.any
   10f7c:	ldr	x1, [x21, #8]
   10f80:	cbnz	x1, 10f2c <__sancov_default_options@@Base+0xba8>
   10f84:	str	xzr, [x0]
   10f88:	str	x0, [x21, #24]
   10f8c:	str	x0, [x21, #16]
   10f90:	mov	x0, #0x1                   	// #1
   10f94:	str	x0, [x21, #8]
   10f98:	mov	x0, #0x0                   	// #0
   10f9c:	b	10f4c <__sancov_default_options@@Base+0xbc8>
   10fa0:	ldr	x1, [sp, #136]
   10fa4:	mov	x19, x1
   10fa8:	add	x20, x20, x26
   10fac:	cmp	x20, x27
   10fb0:	b.cs	10fd8 <__sancov_default_options@@Base+0xc54>  // b.hs, b.nlast
   10fb4:	add	x1, x19, #0x1
   10fb8:	str	x20, [x28, x19, lsl #3]
   10fbc:	cmp	x19, #0x2f
   10fc0:	b.ne	10fa4 <__sancov_default_options@@Base+0xc20>  // b.any
   10fc4:	add	x19, sp, #0x90
   10fc8:	add	x1, x23, #0xd, lsl #12
   10fcc:	add	x1, x1, #0x800
   10fd0:	str	x1, [sp, #120]
   10fd4:	b	10f58 <__sancov_default_options@@Base+0xbd4>
   10fd8:	cbnz	x19, 11010 <__sancov_default_options@@Base+0xc8c>
   10fdc:	cbz	x0, 111f0 <__sancov_default_options@@Base+0xe6c>
   10fe0:	ldr	x1, [x0, #8]
   10fe4:	cbz	x1, 11168 <__sancov_default_options@@Base+0xde4>
   10fe8:	ldr	x1, [x21, #8]
   10fec:	cbnz	x1, 11188 <__sancov_default_options@@Base+0xe04>
   10ff0:	str	xzr, [x0]
   10ff4:	str	x0, [x21, #24]
   10ff8:	str	x0, [x21, #16]
   10ffc:	mov	x0, #0x1                   	// #1
   11000:	str	x0, [x21, #8]
   11004:	ldp	x25, x26, [sp, #48]
   11008:	ldp	x27, x28, [sp, #64]
   1100c:	b	111b8 <__sancov_default_options@@Base+0xe34>
   11010:	mov	x20, #0x1                   	// #1
   11014:	ldr	x1, [sp, #104]
   11018:	add	x26, x23, x1, lsl #10
   1101c:	add	x28, x23, #0xd, lsl #12
   11020:	add	x28, x28, #0x800
   11024:	add	x24, sp, #0x90
   11028:	b	1111c <__sancov_default_options@@Base+0xd98>
   1102c:	ldr	x25, [x26, #24]
   11030:	cbnz	x25, 11048 <__sancov_default_options@@Base+0xcc4>
   11034:	add	x0, x24, x20, lsl #3
   11038:	ldur	x0, [x0, #-8]
   1103c:	cbz	x0, 110dc <__sancov_default_options@@Base+0xd58>
   11040:	str	xzr, [x0, #8]
   11044:	b	11120 <__sancov_default_options@@Base+0xd9c>
   11048:	cmp	x25, #0x35
   1104c:	b.hi	110a4 <__sancov_default_options@@Base+0xd20>  // b.pmore
   11050:	lsl	x27, x25, #10
   11054:	add	x1, x23, x27
   11058:	ldr	x0, [x23, x27]
   1105c:	cbz	x0, 110c4 <__sancov_default_options@@Base+0xd40>
   11060:	ldr	x2, [x23, x27]
   11064:	sub	x0, x2, #0x1
   11068:	str	x0, [x23, x27]
   1106c:	lsl	x1, x25, #7
   11070:	add	x0, x1, x0
   11074:	add	x0, x0, #0x4
   11078:	ldr	x0, [x23, x0, lsl #3]
   1107c:	add	x1, x1, x2
   11080:	add	x1, x1, #0x2
   11084:	ldr	x1, [x23, x1, lsl #3]
   11088:	prfm	pldl1keep, [x1]
   1108c:	ldr	x1, [x28, #16]
   11090:	add	x25, x23, x25, lsl #10
   11094:	ldr	x2, [x25, #16]
   11098:	add	x1, x1, x2
   1109c:	str	x1, [x28, #16]
   110a0:	b	1103c <__sancov_default_options@@Base+0xcb8>
   110a4:	mov	x4, #0x36                  	// #54
   110a8:	mov	x3, x25
   110ac:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   110b0:	add	x2, x2, #0xad0
   110b4:	mov	w1, #0xa0                  	// #160
   110b8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   110bc:	add	x0, x0, #0xaf0
   110c0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   110c4:	mov	x3, x25
   110c8:	ldr	x2, [sp, #112]
   110cc:	mov	x0, x23
   110d0:	bl	11314 <__sancov_default_options@@Base+0xf90>
   110d4:	and	w0, w0, #0xff
   110d8:	cbnz	w0, 11060 <__sancov_default_options@@Base+0xcdc>
   110dc:	mov	w0, #0x0                   	// #0
   110e0:	ldp	x25, x26, [sp, #48]
   110e4:	ldp	x27, x28, [sp, #64]
   110e8:	b	111b8 <__sancov_default_options@@Base+0xe34>
   110ec:	str	xzr, [x0]
   110f0:	ldr	x2, [x21, #24]
   110f4:	str	x0, [x2]
   110f8:	str	x0, [x21, #24]
   110fc:	ldr	x0, [x21, #8]
   11100:	add	x0, x0, #0x1
   11104:	str	x0, [x21, #8]
   11108:	mov	x0, #0x0                   	// #0
   1110c:	add	x1, x20, #0x1
   11110:	cmp	x19, x20
   11114:	b.eq	10fdc <__sancov_default_options@@Base+0xc58>  // b.none
   11118:	mov	x20, x1
   1111c:	cbz	x0, 1102c <__sancov_default_options@@Base+0xca8>
   11120:	add	x1, x24, x20, lsl #3
   11124:	ldur	x3, [x1, #-8]
   11128:	ldr	x1, [x0, #8]
   1112c:	add	x2, x1, #0x1
   11130:	str	x2, [x0, #8]
   11134:	add	x1, x1, #0x2
   11138:	str	x3, [x0, x1, lsl #3]
   1113c:	cmp	x22, x2
   11140:	b.ne	1110c <__sancov_default_options@@Base+0xd88>  // b.any
   11144:	ldr	x1, [x21, #8]
   11148:	cbnz	x1, 110ec <__sancov_default_options@@Base+0xd68>
   1114c:	str	xzr, [x0]
   11150:	str	x0, [x21, #24]
   11154:	str	x0, [x21, #16]
   11158:	mov	x0, #0x1                   	// #1
   1115c:	str	x0, [x21, #8]
   11160:	mov	x0, #0x0                   	// #0
   11164:	b	1110c <__sancov_default_options@@Base+0xd88>
   11168:	mov	x4, #0x0                   	// #0
   1116c:	mov	x3, #0x0                   	// #0
   11170:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11174:	add	x2, x2, #0x9e8
   11178:	mov	w1, #0x169                 	// #361
   1117c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11180:	add	x0, x0, #0x640
   11184:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11188:	str	xzr, [x0]
   1118c:	ldr	x2, [x21, #24]
   11190:	str	x0, [x2]
   11194:	str	x0, [x21, #24]
   11198:	ldr	x0, [x21, #8]
   1119c:	add	x0, x0, #0x1
   111a0:	str	x0, [x21, #8]
   111a4:	mov	w0, #0x1                   	// #1
   111a8:	ldp	x25, x26, [sp, #48]
   111ac:	ldp	x27, x28, [sp, #64]
   111b0:	b	111b8 <__sancov_default_options@@Base+0xe34>
   111b4:	mov	w0, #0x0                   	// #0
   111b8:	ldp	x19, x20, [sp]
   111bc:	ldp	x21, x22, [sp, #16]
   111c0:	ldp	x23, x24, [sp, #32]
   111c4:	ldr	x30, [sp, #80]
   111c8:	add	sp, sp, #0x210
   111cc:	ret
   111d0:	mov	w0, #0x1                   	// #1
   111d4:	ldp	x25, x26, [sp, #48]
   111d8:	ldp	x27, x28, [sp, #64]
   111dc:	b	111b8 <__sancov_default_options@@Base+0xe34>
   111e0:	mov	w0, #0x1                   	// #1
   111e4:	ldp	x25, x26, [sp, #48]
   111e8:	ldp	x27, x28, [sp, #64]
   111ec:	b	111b8 <__sancov_default_options@@Base+0xe34>
   111f0:	mov	w0, #0x1                   	// #1
   111f4:	ldp	x25, x26, [sp, #48]
   111f8:	ldp	x27, x28, [sp, #64]
   111fc:	b	111b8 <__sancov_default_options@@Base+0xe34>
   11200:	stp	x19, x20, [sp, #-64]!
   11204:	stp	x21, x22, [sp, #16]
   11208:	stp	x23, x24, [sp, #32]
   1120c:	stp	x25, x30, [sp, #48]
   11210:	mov	x21, x0
   11214:	mov	x24, x1
   11218:	mov	x25, x2
   1121c:	mov	x19, x3
   11220:	add	x22, x3, #0x2, lsl #12
   11224:	add	x22, x22, #0x1
   11228:	lsl	x22, x22, #6
   1122c:	add	x23, x0, x22
   11230:	mov	w1, #0x1                   	// #1
   11234:	ldxrb	w0, [x23]
   11238:	stxrb	w2, w1, [x23]
   1123c:	cbnz	w2, 11234 <__sancov_default_options@@Base+0xeb0>
   11240:	dmb	ish
   11244:	and	w0, w0, #0xff
   11248:	cbnz	w0, 11294 <__sancov_default_options@@Base+0xf10>
   1124c:	add	x20, x21, x19, lsl #6
   11250:	add	x0, x20, #0x80, lsl #12
   11254:	ldr	x4, [x0, #72]
   11258:	cbnz	x4, 112d4 <__sancov_default_options@@Base+0xf50>
   1125c:	mov	x4, x19
   11260:	mov	x3, x23
   11264:	mov	x2, x25
   11268:	mov	x1, x24
   1126c:	mov	x0, x21
   11270:	bl	10c38 <__sancov_default_options@@Base+0x8b4>
   11274:	and	w0, w0, #0xff
   11278:	cbz	w0, 112cc <__sancov_default_options@@Base+0xf48>
   1127c:	add	x0, x20, #0x80, lsl #12
   11280:	ldr	x4, [x0, #72]
   11284:	cbz	x4, 112a0 <__sancov_default_options@@Base+0xf1c>
   11288:	add	x0, x20, #0x80, lsl #12
   1128c:	ldr	x0, [x0, #80]
   11290:	b	112dc <__sancov_default_options@@Base+0xf58>
   11294:	mov	x0, x23
   11298:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   1129c:	b	1124c <__sancov_default_options@@Base+0xec8>
   112a0:	mov	x3, #0x0                   	// #0
   112a4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   112a8:	add	x2, x2, #0xb40
   112ac:	mov	w1, #0x40                  	// #64
   112b0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   112b4:	add	x0, x0, #0xb58
   112b8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   112bc:	add	x19, x21, x19, lsl #6
   112c0:	add	x19, x19, #0x80, lsl #12
   112c4:	str	xzr, [x19, #88]
   112c8:	b	112ec <__sancov_default_options@@Base+0xf68>
   112cc:	mov	x0, #0x0                   	// #0
   112d0:	b	112f8 <__sancov_default_options@@Base+0xf74>
   112d4:	add	x0, x20, #0x80, lsl #12
   112d8:	ldr	x0, [x0, #80]
   112dc:	ldr	x1, [x0]
   112e0:	add	x2, x20, #0x80, lsl #12
   112e4:	str	x1, [x2, #80]
   112e8:	cbz	x1, 112bc <__sancov_default_options@@Base+0xf38>
   112ec:	add	x20, x20, #0x80, lsl #12
   112f0:	sub	x4, x4, #0x1
   112f4:	str	x4, [x20, #72]
   112f8:	dmb	ish
   112fc:	strb	wzr, [x21, x22]
   11300:	ldp	x21, x22, [sp, #16]
   11304:	ldp	x23, x24, [sp, #32]
   11308:	ldp	x25, x30, [sp, #48]
   1130c:	ldp	x19, x20, [sp], #64
   11310:	ret
   11314:	stp	x19, x20, [sp, #-48]!
   11318:	stp	x21, x22, [sp, #16]
   1131c:	stp	x23, x30, [sp, #32]
   11320:	mov	x19, x0
   11324:	mov	x21, x1
   11328:	mov	x22, x2
   1132c:	mov	x20, x3
   11330:	ldr	x2, [x1, #8]
   11334:	cbz	x2, 113a8 <__sancov_default_options@@Base+0x1024>
   11338:	mov	x3, x20
   1133c:	mov	x2, x19
   11340:	add	x1, x19, #0xd, lsl #12
   11344:	add	x1, x1, #0x800
   11348:	mov	x0, x22
   1134c:	bl	11200 <__sancov_default_options@@Base+0xe7c>
   11350:	mov	x23, x0
   11354:	cbz	x0, 115b4 <__sancov_default_options@@Base+0x1230>
   11358:	ldr	x2, [x0, #8]
   1135c:	mov	x4, #0x0                   	// #0
   11360:	add	x3, x0, #0x10
   11364:	add	x0, x21, #0x20
   11368:	cbz	x2, 11454 <__sancov_default_options@@Base+0x10d0>
   1136c:	ldr	x1, [x3, x4, lsl #3]
   11370:	str	x1, [x0, x4, lsl #3]
   11374:	add	x4, x4, #0x1
   11378:	cmp	x2, x4
   1137c:	b.ne	1136c <__sancov_default_options@@Base+0xfe8>  // b.any
   11380:	ldr	x0, [x23, #8]
   11384:	str	x0, [x21]
   11388:	add	x20, x19, x20, lsl #10
   1138c:	ldr	x20, [x20, #24]
   11390:	mov	w0, #0x1                   	// #1
   11394:	cbnz	x20, 11470 <__sancov_default_options@@Base+0x10ec>
   11398:	ldp	x21, x22, [sp, #16]
   1139c:	ldp	x23, x30, [sp, #32]
   113a0:	ldp	x19, x20, [sp], #48
   113a4:	ret
   113a8:	add	x6, x0, #0x408
   113ac:	mov	x5, #0x1                   	// #1
   113b0:	mov	x3, #0x40                  	// #64
   113b4:	mov	x14, #0x200                 	// #512
   113b8:	mov	x13, x2
   113bc:	mov	x8, #0x14                  	// #20
   113c0:	mov	w11, #0x4000                	// #16384
   113c4:	mov	x10, x5
   113c8:	mov	x9, #0x3e                  	// #62
   113cc:	mov	x12, #0x100                 	// #256
   113d0:	b	1143c <__sancov_default_options@@Base+0x10b8>
   113d4:	sub	x1, x5, #0x10
   113d8:	lsr	x0, x1, #2
   113dc:	lsl	x0, x12, x0
   113e0:	lsr	x7, x0, #2
   113e4:	and	x1, x1, #0x3
   113e8:	madd	x7, x7, x1, x0
   113ec:	cbz	x7, 115d4 <__sancov_default_options@@Base+0x1250>
   113f0:	udiv	w0, w11, w7
   113f4:	mov	w4, w0
   113f8:	cmp	w0, #0x40
   113fc:	csel	x4, x4, x3, ls  // ls = plast
   11400:	cmp	x4, #0x0
   11404:	csel	x4, x4, x10, ne  // ne = any
   11408:	cmp	x4, #0x3e
   1140c:	csel	x4, x4, x9, ls  // ls = plast
   11410:	lsl	x0, x4, #1
   11414:	str	x0, [x6]
   11418:	str	x7, [x6, #8]
   1141c:	add	x4, x4, #0x2
   11420:	cmp	x7, x4, lsl #3
   11424:	csel	x0, x2, x8, cs  // cs = hs, nlast
   11428:	str	x0, [x6, #16]
   1142c:	add	x5, x5, #0x1
   11430:	add	x6, x6, #0x400
   11434:	cmp	x5, #0x36
   11438:	b.eq	11338 <__sancov_default_options@@Base+0xfb4>  // b.none
   1143c:	cmp	x5, #0x35
   11440:	b.eq	115fc <__sancov_default_options@@Base+0x1278>  // b.none
   11444:	lsl	x7, x5, #4
   11448:	cmp	x5, #0x10
   1144c:	b.hi	113d4 <__sancov_default_options@@Base+0x1050>  // b.pmore
   11450:	b	113ec <__sancov_default_options@@Base+0x1068>
   11454:	mov	x3, #0x0                   	// #0
   11458:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1145c:	add	x2, x2, #0x9e8
   11460:	mov	w1, #0xf6                  	// #246
   11464:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11468:	add	x0, x0, #0xaf0
   1146c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11470:	cmp	x20, #0x35
   11474:	b.hi	114d4 <__sancov_default_options@@Base+0x1150>  // b.pmore
   11478:	lsl	x21, x20, #10
   1147c:	add	x1, x19, x21
   11480:	ldr	x6, [x1, #8]
   11484:	cbz	x6, 114f4 <__sancov_default_options@@Base+0x1170>
   11488:	ldr	x2, [x19, x21]
   1148c:	ldr	x0, [x1, #8]
   11490:	cmp	x2, x0
   11494:	b.eq	115a0 <__sancov_default_options@@Base+0x121c>  // b.none
   11498:	ldr	x0, [x19, x21]
   1149c:	add	x1, x0, #0x1
   114a0:	str	x1, [x19, x21]
   114a4:	add	x0, x0, x20, lsl #7
   114a8:	add	x0, x0, #0x4
   114ac:	str	x23, [x19, x0, lsl #3]
   114b0:	add	x1, x19, #0xd, lsl #12
   114b4:	add	x1, x1, #0x800
   114b8:	ldr	x0, [x1, #16]
   114bc:	add	x19, x19, x20, lsl #10
   114c0:	ldr	x2, [x19, #16]
   114c4:	sub	x0, x0, x2
   114c8:	str	x0, [x1, #16]
   114cc:	mov	w0, #0x1                   	// #1
   114d0:	b	11398 <__sancov_default_options@@Base+0x1014>
   114d4:	mov	x4, #0x36                  	// #54
   114d8:	mov	x3, x20
   114dc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   114e0:	add	x2, x2, #0xad0
   114e4:	mov	w1, #0xaf                  	// #175
   114e8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   114ec:	add	x0, x0, #0xaf0
   114f0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   114f4:	add	x3, x19, #0x408
   114f8:	mov	x0, #0x1                   	// #1
   114fc:	mov	x7, #0x40                  	// #64
   11500:	mov	x14, #0x200                 	// #512
   11504:	mov	x13, x6
   11508:	mov	x8, #0x14                  	// #20
   1150c:	mov	w11, #0x4000                	// #16384
   11510:	mov	x10, x0
   11514:	mov	x9, #0x3e                  	// #62
   11518:	mov	x12, #0x100                 	// #256
   1151c:	b	11570 <__sancov_default_options@@Base+0x11ec>
   11520:	cbz	x4, 115bc <__sancov_default_options@@Base+0x1238>
   11524:	udiv	w5, w11, w4
   11528:	mov	w2, w5
   1152c:	cmp	w5, #0x40
   11530:	csel	x2, x2, x7, ls  // ls = plast
   11534:	cmp	x2, #0x0
   11538:	csel	x2, x2, x10, ne  // ne = any
   1153c:	cmp	x2, #0x3e
   11540:	csel	x2, x2, x9, ls  // ls = plast
   11544:	lsl	x5, x2, #1
   11548:	str	x5, [x3]
   1154c:	str	x4, [x3, #8]
   11550:	add	x2, x2, #0x2
   11554:	cmp	x4, x2, lsl #3
   11558:	csel	x2, x6, x8, cs  // cs = hs, nlast
   1155c:	str	x2, [x3, #16]
   11560:	add	x0, x0, #0x1
   11564:	add	x3, x3, #0x400
   11568:	cmp	x0, #0x36
   1156c:	b.eq	11488 <__sancov_default_options@@Base+0x1104>  // b.none
   11570:	cmp	x0, #0x35
   11574:	b.eq	115ec <__sancov_default_options@@Base+0x1268>  // b.none
   11578:	lsl	x4, x0, #4
   1157c:	cmp	x0, #0x10
   11580:	b.ls	11520 <__sancov_default_options@@Base+0x119c>  // b.plast
   11584:	sub	x5, x0, #0x10
   11588:	lsr	x2, x5, #2
   1158c:	lsl	x2, x12, x2
   11590:	lsr	x4, x2, #2
   11594:	and	x5, x5, #0x3
   11598:	madd	x4, x4, x5, x2
   1159c:	b	11520 <__sancov_default_options@@Base+0x119c>
   115a0:	mov	x3, x20
   115a4:	mov	x2, x22
   115a8:	mov	x0, x19
   115ac:	bl	11aa4 <__sancov_default_options@@Base+0x1720>
   115b0:	b	11498 <__sancov_default_options@@Base+0x1114>
   115b4:	mov	w0, #0x0                   	// #0
   115b8:	b	11398 <__sancov_default_options@@Base+0x1014>
   115bc:	str	xzr, [x3]
   115c0:	str	xzr, [x3, #8]
   115c4:	str	x8, [x3, #16]
   115c8:	add	x0, x0, #0x1
   115cc:	add	x3, x3, #0x400
   115d0:	b	11570 <__sancov_default_options@@Base+0x11ec>
   115d4:	str	xzr, [x6]
   115d8:	str	xzr, [x6, #8]
   115dc:	str	x8, [x6, #16]
   115e0:	add	x5, x5, #0x1
   115e4:	add	x6, x6, #0x400
   115e8:	b	1143c <__sancov_default_options@@Base+0x10b8>
   115ec:	str	x7, [x3]
   115f0:	str	x14, [x3, #8]
   115f4:	mov	x2, x13
   115f8:	b	1155c <__sancov_default_options@@Base+0x11d8>
   115fc:	str	x3, [x6]
   11600:	str	x14, [x6, #8]
   11604:	mov	x0, x13
   11608:	b	11428 <__sancov_default_options@@Base+0x10a4>
   1160c:	stp	x19, x20, [sp, #-64]!
   11610:	stp	x23, x24, [sp, #32]
   11614:	str	x30, [sp, #48]
   11618:	mov	x23, x0
   1161c:	mov	x19, x3
   11620:	cmp	x2, #0x0
   11624:	csinc	x20, x2, xzr, ne  // ne = any
   11628:	adds	x0, x20, x3
   1162c:	b.cs	11700 <__sancov_default_options@@Base+0x137c>  // b.hs, b.nlast
   11630:	stp	x21, x22, [sp, #16]
   11634:	mov	x21, x1
   11638:	cmp	x3, #0x8
   1163c:	b.hi	11724 <__sancov_default_options@@Base+0x13a0>  // b.pmore
   11640:	cmp	x2, #0x20, lsl #12
   11644:	b.hi	117d0 <__sancov_default_options@@Base+0x144c>  // b.pmore
   11648:	cmp	x20, #0x100
   1164c:	b.ls	11764 <__sancov_default_options@@Base+0x13e0>  // b.plast
   11650:	clz	x0, x20
   11654:	mov	w22, #0x3f                  	// #63
   11658:	sub	w22, w22, w0
   1165c:	sub	w0, w22, #0x2
   11660:	mov	w1, #0x1                   	// #1
   11664:	lsl	w1, w1, w0
   11668:	sub	w1, w1, #0x1
   1166c:	tst	x1, x20
   11670:	lsr	x0, x20, x0
   11674:	and	x0, x0, #0x3
   11678:	cinc	x0, x0, ne  // ne = any
   1167c:	add	x22, x0, w22, sxtw #2
   11680:	sub	x22, x22, #0x10
   11684:	cmp	x22, #0x35
   11688:	b.hi	11794 <__sancov_default_options@@Base+0x1410>  // b.pmore
   1168c:	lsl	x20, x22, #10
   11690:	add	x1, x21, x20
   11694:	ldr	x0, [x21, x20]
   11698:	cbz	x0, 117b4 <__sancov_default_options@@Base+0x1430>
   1169c:	ldr	x2, [x21, x20]
   116a0:	sub	x0, x2, #0x1
   116a4:	str	x0, [x21, x20]
   116a8:	lsl	x1, x22, #7
   116ac:	add	x0, x1, x0
   116b0:	add	x0, x0, #0x4
   116b4:	ldr	x0, [x21, x0, lsl #3]
   116b8:	add	x1, x1, x2
   116bc:	add	x1, x1, #0x2
   116c0:	ldr	x1, [x21, x1, lsl #3]
   116c4:	prfm	pldl1keep, [x1]
   116c8:	add	x2, x21, #0xd, lsl #12
   116cc:	add	x2, x2, #0x800
   116d0:	ldr	x1, [x2, #16]
   116d4:	add	x21, x21, x22, lsl #10
   116d8:	ldr	x3, [x21, #16]
   116dc:	add	x1, x1, x3
   116e0:	str	x1, [x2, #16]
   116e4:	cmp	x19, #0x8
   116e8:	b.ls	11a90 <__sancov_default_options@@Base+0x170c>  // b.plast
   116ec:	sub	x19, x19, #0x1
   116f0:	ands	x3, x0, x19
   116f4:	b.ne	11a74 <__sancov_default_options@@Base+0x16f0>  // b.any
   116f8:	ldp	x21, x22, [sp, #16]
   116fc:	b	11a94 <__sancov_default_options@@Base+0x1710>
   11700:	mov	x2, x20
   11704:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11708:	ldr	x0, [x0, #4008]
   1170c:	ldr	x1, [x0]
   11710:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11714:	add	x0, x0, #0xb98
   11718:	bl	1d908 <OnPrint@@Base+0x3d8>
   1171c:	mov	x0, #0x0                   	// #0
   11720:	b	11a94 <__sancov_default_options@@Base+0x1710>
   11724:	sub	x24, x3, #0x1
   11728:	tst	x3, x24
   1172c:	b.ne	11754 <__sancov_default_options@@Base+0x13d0>  // b.any
   11730:	sub	x0, x0, #0x1
   11734:	neg	x1, x3
   11738:	and	x0, x0, x1
   1173c:	cmp	x0, #0x20, lsl #12
   11740:	mov	x1, #0x20000               	// #131072
   11744:	ccmp	x3, x1, #0x2, ls  // ls = plast
   11748:	b.hi	117dc <__sancov_default_options@@Base+0x1458>  // b.pmore
   1174c:	mov	x20, x0
   11750:	b	11648 <__sancov_default_options@@Base+0x12c4>
   11754:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   11758:	add	x0, x0, #0x638
   1175c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   11760:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   11764:	add	x20, x20, #0xf
   11768:	lsr	x22, x20, #4
   1176c:	cmp	xzr, x20, lsr #4
   11770:	b.ne	1168c <__sancov_default_options@@Base+0x1308>  // b.any
   11774:	mov	x4, #0x0                   	// #0
   11778:	mov	x3, #0x0                   	// #0
   1177c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11780:	add	x2, x2, #0xbf8
   11784:	mov	w1, #0x9f                  	// #159
   11788:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1178c:	add	x0, x0, #0xaf0
   11790:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11794:	mov	x4, #0x36                  	// #54
   11798:	mov	x3, x22
   1179c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   117a0:	add	x2, x2, #0xad0
   117a4:	mov	w1, #0xa0                  	// #160
   117a8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   117ac:	add	x0, x0, #0xaf0
   117b0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   117b4:	mov	x3, x22
   117b8:	mov	x2, x23
   117bc:	mov	x0, x21
   117c0:	bl	11314 <__sancov_default_options@@Base+0xf90>
   117c4:	and	w0, w0, #0xff
   117c8:	cbnz	w0, 1169c <__sancov_default_options@@Base+0x1318>
   117cc:	b	119b0 <__sancov_default_options@@Base+0x162c>
   117d0:	sub	x24, x3, #0x1
   117d4:	tst	x3, x24
   117d8:	b.ne	11960 <__sancov_default_options@@Base+0x15dc>  // b.any
   117dc:	add	x0, x23, #0x80, lsl #12
   117e0:	add	x0, x0, #0xc00
   117e4:	ldr	x0, [x0, #448]
   117e8:	sub	x21, x0, #0x1
   117ec:	tst	x0, x21
   117f0:	b.ne	11980 <__sancov_default_options@@Base+0x15fc>  // b.any
   117f4:	add	x21, x20, x21
   117f8:	neg	x1, x0
   117fc:	and	x21, x21, x1
   11800:	add	x21, x21, x0
   11804:	add	x1, x21, x19
   11808:	cmp	x19, x0
   1180c:	csel	x21, x1, x21, hi  // hi = pmore
   11810:	cmp	x20, x21
   11814:	b.hi	11990 <__sancov_default_options@@Base+0x160c>  // b.pmore
   11818:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   1181c:	ldr	x1, [x0, #960]
   11820:	mov	x0, x21
   11824:	bl	1b17c <__sanitizer_set_report_fd@@Base+0x4dcc>
   11828:	cbz	x0, 119b0 <__sancov_default_options@@Base+0x162c>
   1182c:	add	x1, x23, #0x80, lsl #12
   11830:	add	x1, x1, #0xc00
   11834:	ldr	x1, [x1, #448]
   11838:	sub	x2, x1, #0x1
   1183c:	tst	x0, x2
   11840:	b.ne	119bc <__sancov_default_options@@Base+0x1638>  // b.any
   11844:	add	x22, x0, x1
   11848:	ands	x3, x24, x22
   1184c:	b.eq	11860 <__sancov_default_options@@Base+0x14dc>  // b.none
   11850:	add	x22, x19, x22
   11854:	sub	x22, x22, x3
   11858:	tst	x24, x22
   1185c:	b.ne	119dc <__sancov_default_options@@Base+0x1658>  // b.any
   11860:	tst	x22, x2
   11864:	b.ne	119fc <__sancov_default_options@@Base+0x1678>  // b.any
   11868:	add	x3, x20, x22
   1186c:	cmp	x0, x3
   11870:	b.hi	11a1c <__sancov_default_options@@Base+0x1698>  // b.pmore
   11874:	add	x4, x21, x0
   11878:	cmp	x4, x3
   1187c:	b.cc	11a38 <__sancov_default_options@@Base+0x16b4>  // b.lo, b.ul, b.last
   11880:	sub	x24, x22, x1
   11884:	str	x20, [x24, #16]
   11888:	str	x0, [x24]
   1188c:	str	x21, [x24, #8]
   11890:	add	x0, x23, #0xc1, lsl #12
   11894:	mov	w2, #0x1                   	// #1
   11898:	ldxrb	w1, [x0]
   1189c:	stxrb	w3, w2, [x0]
   118a0:	cbnz	w3, 11898 <__sancov_default_options@@Base+0x1514>
   118a4:	dmb	ish
   118a8:	and	w1, w1, #0xff
   118ac:	cbnz	w1, 11a50 <__sancov_default_options@@Base+0x16cc>
   118b0:	add	x0, x23, #0xc0, lsl #12
   118b4:	add	x0, x0, #0xdc0
   118b8:	ldr	x3, [x0, #16]
   118bc:	mov	x0, #0x7fff                	// #32767
   118c0:	cmp	x3, x0
   118c4:	b.hi	11a58 <__sancov_default_options@@Base+0x16d4>  // b.pmore
   118c8:	clz	x4, x21
   118cc:	add	x2, x23, #0x80, lsl #12
   118d0:	add	x2, x2, #0xdc0
   118d4:	add	x1, x2, #0x40, lsl #12
   118d8:	add	x0, x3, #0x1
   118dc:	str	x0, [x1, #16]
   118e0:	str	x3, [x24, #24]
   118e4:	ldr	x0, [x2, #8]
   118e8:	str	x24, [x0, x3, lsl #3]
   118ec:	strb	wzr, [x1, #24]
   118f0:	ldr	x2, [x1, #32]
   118f4:	add	x2, x2, #0x1
   118f8:	str	x2, [x1, #32]
   118fc:	ldr	x2, [x1, #48]
   11900:	add	x2, x21, x2
   11904:	str	x2, [x1, #48]
   11908:	ldr	x3, [x1, #56]
   1190c:	cmp	x3, x2
   11910:	csel	x2, x3, x2, cs  // cs = hs, nlast
   11914:	str	x2, [x1, #56]
   11918:	mov	w0, #0x3f                  	// #63
   1191c:	sub	w0, w0, w4
   11920:	add	x0, x23, w0, sxtw #3
   11924:	add	x0, x0, #0xc0, lsl #12
   11928:	ldr	x1, [x0, #3584]
   1192c:	add	x1, x1, #0x1
   11930:	str	x1, [x0, #3584]
   11934:	add	x0, x23, #0xc1, lsl #12
   11938:	ldr	x2, [x0, #24]
   1193c:	add	x2, x21, x2
   11940:	str	x2, [x0, #24]
   11944:	ldr	x2, [x0, #32]
   11948:	add	x21, x21, x2
   1194c:	str	x21, [x0, #32]
   11950:	dmb	ish
   11954:	strb	wzr, [x0]
   11958:	mov	x0, x22
   1195c:	b	116e4 <__sancov_default_options@@Base+0x1360>
   11960:	mov	x4, #0x0                   	// #0
   11964:	mov	x3, #0x0                   	// #0
   11968:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1196c:	add	x2, x2, #0xc10
   11970:	mov	w1, #0x53                  	// #83
   11974:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11978:	add	x0, x0, #0x6e8
   1197c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11980:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   11984:	add	x0, x0, #0x638
   11988:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1198c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   11990:	mov	x3, x19
   11994:	mov	x2, x21
   11998:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1199c:	ldr	x0, [x0, #4008]
   119a0:	ldr	x1, [x0]
   119a4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   119a8:	add	x0, x0, #0xc38
   119ac:	bl	1d908 <OnPrint@@Base+0x3d8>
   119b0:	mov	x0, #0x0                   	// #0
   119b4:	ldp	x21, x22, [sp, #16]
   119b8:	b	11a94 <__sancov_default_options@@Base+0x1710>
   119bc:	mov	x4, #0x0                   	// #0
   119c0:	mov	x3, #0x0                   	// #0
   119c4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   119c8:	add	x2, x2, #0xca0
   119cc:	mov	w1, #0x62                  	// #98
   119d0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   119d4:	add	x0, x0, #0x6e8
   119d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   119dc:	mov	x4, #0x0                   	// #0
   119e0:	mov	x3, #0x0                   	// #0
   119e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   119e8:	add	x2, x2, #0xcd0
   119ec:	mov	w1, #0x68                  	// #104
   119f0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   119f4:	add	x0, x0, #0x6e8
   119f8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   119fc:	mov	x4, #0x0                   	// #0
   11a00:	mov	x3, #0x0                   	// #0
   11a04:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a08:	add	x2, x2, #0xcf8
   11a0c:	mov	w1, #0x69                  	// #105
   11a10:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a14:	add	x0, x0, #0x6e8
   11a18:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11a1c:	mov	x4, x0
   11a20:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a24:	add	x2, x2, #0xd20
   11a28:	mov	w1, #0x6a                  	// #106
   11a2c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a30:	add	x0, x0, #0x6e8
   11a34:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11a38:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a3c:	add	x2, x2, #0xd40
   11a40:	mov	w1, #0x6b                  	// #107
   11a44:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a48:	add	x0, x0, #0x6e8
   11a4c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11a50:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   11a54:	b	118b0 <__sancov_default_options@@Base+0x152c>
   11a58:	mov	x4, #0x8000                	// #32768
   11a5c:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a60:	add	x2, x2, #0xd60
   11a64:	mov	w1, #0x15                  	// #21
   11a68:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a6c:	add	x0, x0, #0x6e8
   11a70:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11a74:	mov	x4, #0x0                   	// #0
   11a78:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a7c:	add	x2, x2, #0xd80
   11a80:	mov	w1, #0x42                  	// #66
   11a84:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11a88:	add	x0, x0, #0xdc0
   11a8c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11a90:	ldp	x21, x22, [sp, #16]
   11a94:	ldp	x23, x24, [sp, #32]
   11a98:	ldr	x30, [sp, #48]
   11a9c:	ldp	x19, x20, [sp], #64
   11aa0:	ret
   11aa4:	stp	x19, x20, [sp, #-80]!
   11aa8:	stp	x21, x22, [sp, #16]
   11aac:	stp	x23, x24, [sp, #32]
   11ab0:	stp	x25, x26, [sp, #48]
   11ab4:	str	x30, [sp, #64]
   11ab8:	mov	x21, x0
   11abc:	mov	x20, x1
   11ac0:	mov	x23, x2
   11ac4:	mov	x22, x3
   11ac8:	ldr	x6, [x1]
   11acc:	ldr	x19, [x1, #8]
   11ad0:	lsr	x19, x19, #1
   11ad4:	cmp	x19, x6
   11ad8:	csel	x19, x19, x6, ls  // ls = plast
   11adc:	sub	x24, x6, x19
   11ae0:	add	x0, x0, x3, lsl #10
   11ae4:	ldr	x25, [x0, #24]
   11ae8:	cbnz	x25, 11b5c <__sancov_default_options@@Base+0x17d8>
   11aec:	add	x0, x24, #0x4
   11af0:	ldr	x3, [x1, x0, lsl #3]
   11af4:	cbz	x3, 11bf4 <__sancov_default_options@@Base+0x1870>
   11af8:	add	x6, x24, #0x4
   11afc:	add	x6, x20, x6, lsl #3
   11b00:	str	x19, [x3, #8]
   11b04:	cbz	x19, 11b24 <__sancov_default_options@@Base+0x17a0>
   11b08:	mov	x4, #0x0                   	// #0
   11b0c:	add	x1, x3, #0x10
   11b10:	ldr	x5, [x6, x4, lsl #3]
   11b14:	str	x5, [x1, x4, lsl #3]
   11b18:	add	x4, x4, #0x1
   11b1c:	cmp	x4, x19
   11b20:	b.ne	11b10 <__sancov_default_options@@Base+0x178c>  // b.any
   11b24:	ldr	x0, [x20]
   11b28:	sub	x19, x0, x19
   11b2c:	str	x19, [x20]
   11b30:	mov	x2, x22
   11b34:	add	x1, x21, #0xd, lsl #12
   11b38:	add	x1, x1, #0x800
   11b3c:	mov	x0, x23
   11b40:	bl	10b64 <__sancov_default_options@@Base+0x7e0>
   11b44:	ldp	x21, x22, [sp, #16]
   11b48:	ldp	x23, x24, [sp, #32]
   11b4c:	ldp	x25, x26, [sp, #48]
   11b50:	ldr	x30, [sp, #64]
   11b54:	ldp	x19, x20, [sp], #80
   11b58:	ret
   11b5c:	cmp	x25, #0x35
   11b60:	b.hi	11bc0 <__sancov_default_options@@Base+0x183c>  // b.pmore
   11b64:	lsl	x26, x25, #10
   11b68:	add	x1, x21, x26
   11b6c:	ldr	x0, [x21, x26]
   11b70:	cbz	x0, 11be0 <__sancov_default_options@@Base+0x185c>
   11b74:	ldr	x2, [x21, x26]
   11b78:	sub	x1, x2, #0x1
   11b7c:	str	x1, [x21, x26]
   11b80:	lsl	x0, x25, #7
   11b84:	add	x1, x0, x1
   11b88:	add	x1, x1, #0x4
   11b8c:	ldr	x3, [x21, x1, lsl #3]
   11b90:	add	x0, x0, x2
   11b94:	add	x0, x0, #0x2
   11b98:	ldr	x0, [x21, x0, lsl #3]
   11b9c:	prfm	pldl1keep, [x0]
   11ba0:	add	x1, x21, #0xd, lsl #12
   11ba4:	add	x1, x1, #0x800
   11ba8:	ldr	x0, [x1, #16]
   11bac:	add	x25, x21, x25, lsl #10
   11bb0:	ldr	x2, [x25, #16]
   11bb4:	add	x0, x0, x2
   11bb8:	str	x0, [x1, #16]
   11bbc:	b	11af4 <__sancov_default_options@@Base+0x1770>
   11bc0:	mov	x4, #0x36                  	// #54
   11bc4:	mov	x3, x25
   11bc8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11bcc:	add	x2, x2, #0xad0
   11bd0:	mov	w1, #0xa0                  	// #160
   11bd4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11bd8:	add	x0, x0, #0xaf0
   11bdc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11be0:	mov	x3, x25
   11be4:	mov	x0, x21
   11be8:	bl	11314 <__sancov_default_options@@Base+0xf90>
   11bec:	and	w0, w0, #0xff
   11bf0:	cbnz	w0, 11b74 <__sancov_default_options@@Base+0x17f0>
   11bf4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   11bf8:	ldr	x0, [x0, #4008]
   11bfc:	ldr	x1, [x0]
   11c00:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11c04:	add	x0, x0, #0xe10
   11c08:	bl	1d908 <OnPrint@@Base+0x3d8>
   11c0c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   11c10:	cbz	x2, 11f64 <__sancov_default_options@@Base+0x1be0>
   11c14:	stp	x19, x20, [sp, #-48]!
   11c18:	stp	x21, x22, [sp, #16]
   11c1c:	str	x30, [sp, #40]
   11c20:	mov	x20, x0
   11c24:	mov	x21, x1
   11c28:	mov	x19, x2
   11c2c:	mov	x0, #0xffffffffffff        	// #281474976710655
   11c30:	cmp	x2, x0
   11c34:	b.ls	11d34 <__sancov_default_options@@Base+0x19b0>  // b.plast
   11c38:	add	x0, x20, #0x80, lsl #12
   11c3c:	add	x0, x0, #0xc00
   11c40:	ldr	x2, [x0, #448]
   11c44:	sub	x0, x2, #0x1
   11c48:	tst	x19, x0
   11c4c:	b.ne	11ed0 <__sancov_default_options@@Base+0x1b4c>  // b.any
   11c50:	sub	x19, x19, x2
   11c54:	add	x0, x20, #0xc1, lsl #12
   11c58:	mov	w2, #0x1                   	// #1
   11c5c:	ldxrb	w1, [x0]
   11c60:	stxrb	w3, w2, [x0]
   11c64:	cbnz	w3, 11c5c <__sancov_default_options@@Base+0x18d8>
   11c68:	dmb	ish
   11c6c:	and	w1, w1, #0xff
   11c70:	cbnz	w1, 11ef4 <__sancov_default_options@@Base+0x1b70>
   11c74:	ldr	x1, [x19, #24]
   11c78:	add	x0, x20, #0x80, lsl #12
   11c7c:	add	x0, x0, #0xdc0
   11c80:	ldr	x2, [x0, #8]
   11c84:	ldr	x3, [x2, x1, lsl #3]
   11c88:	cmp	x3, x19
   11c8c:	b.ne	11efc <__sancov_default_options@@Base+0x1b78>  // b.any
   11c90:	add	x0, x20, #0xc0, lsl #12
   11c94:	add	x0, x0, #0xdc0
   11c98:	ldr	x4, [x0, #16]
   11c9c:	cmp	x1, x4
   11ca0:	b.cs	11f1c <__sancov_default_options@@Base+0x1b98>  // b.hs, b.nlast
   11ca4:	sub	x4, x4, #0x1
   11ca8:	add	x3, x20, #0x80, lsl #12
   11cac:	add	x3, x3, #0xdc0
   11cb0:	add	x0, x3, #0x40, lsl #12
   11cb4:	str	x4, [x0, #16]
   11cb8:	ldr	x4, [x2, x4, lsl #3]
   11cbc:	str	x4, [x2, x1, lsl #3]
   11cc0:	ldr	x2, [x3, #8]
   11cc4:	ldr	x2, [x2, x1, lsl #3]
   11cc8:	str	x1, [x2, #24]
   11ccc:	strb	wzr, [x0, #24]
   11cd0:	ldr	x1, [x0, #40]
   11cd4:	add	x1, x1, #0x1
   11cd8:	str	x1, [x0, #40]
   11cdc:	ldr	x1, [x0, #48]
   11ce0:	ldr	x2, [x19, #8]
   11ce4:	sub	x1, x1, x2
   11ce8:	str	x1, [x0, #48]
   11cec:	add	x20, x20, #0xc1, lsl #12
   11cf0:	ldr	x1, [x20, #24]
   11cf4:	ldr	x2, [x19, #8]
   11cf8:	sub	x1, x1, x2
   11cfc:	str	x1, [x20, #24]
   11d00:	ldr	x1, [x20, #32]
   11d04:	ldr	x2, [x19, #8]
   11d08:	sub	x1, x1, x2
   11d0c:	str	x1, [x20, #32]
   11d10:	dmb	ish
   11d14:	strb	wzr, [x20]
   11d18:	ldr	x1, [x19, #8]
   11d1c:	ldr	x0, [x19]
   11d20:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   11d24:	ldp	x21, x22, [sp, #16]
   11d28:	ldr	x30, [sp, #40]
   11d2c:	ldp	x19, x20, [sp], #48
   11d30:	ret
   11d34:	lsr	x0, x2, #20
   11d38:	lsr	x2, x2, #32
   11d3c:	ldr	x1, [x20, x2, lsl #3]
   11d40:	dmb	ish
   11d44:	cbz	x1, 11c38 <__sancov_default_options@@Base+0x18b4>
   11d48:	and	x0, x0, #0xfff
   11d4c:	ldrb	w1, [x1, x0]
   11d50:	cbz	w1, 11c38 <__sancov_default_options@@Base+0x18b4>
   11d54:	str	x23, [sp, #32]
   11d58:	ldr	x1, [x20, x2, lsl #3]
   11d5c:	dmb	ish
   11d60:	cbz	x1, 11dd0 <__sancov_default_options@@Base+0x1a4c>
   11d64:	ldrb	w22, [x1, x0]
   11d68:	cbz	x22, 11dd0 <__sancov_default_options@@Base+0x1a4c>
   11d6c:	cmp	x22, #0x35
   11d70:	b.hi	11df0 <__sancov_default_options@@Base+0x1a6c>  // b.pmore
   11d74:	lsl	x23, x22, #10
   11d78:	add	x1, x21, x23
   11d7c:	ldr	x6, [x1, #8]
   11d80:	cbz	x6, 11e10 <__sancov_default_options@@Base+0x1a8c>
   11d84:	ldr	x2, [x21, x23]
   11d88:	ldr	x0, [x1, #8]
   11d8c:	cmp	x2, x0
   11d90:	b.eq	11ebc <__sancov_default_options@@Base+0x1b38>  // b.none
   11d94:	ldr	x0, [x21, x23]
   11d98:	add	x1, x0, #0x1
   11d9c:	str	x1, [x21, x23]
   11da0:	add	x0, x0, x22, lsl #7
   11da4:	add	x0, x0, #0x4
   11da8:	str	x19, [x21, x0, lsl #3]
   11dac:	add	x2, x21, #0xd, lsl #12
   11db0:	add	x2, x2, #0x800
   11db4:	ldr	x0, [x2, #16]
   11db8:	add	x1, x21, x22, lsl #10
   11dbc:	ldr	x1, [x1, #16]
   11dc0:	sub	x0, x0, x1
   11dc4:	str	x0, [x2, #16]
   11dc8:	ldr	x23, [sp, #32]
   11dcc:	b	11d24 <__sancov_default_options@@Base+0x19a0>
   11dd0:	mov	x4, #0x0                   	// #0
   11dd4:	mov	x3, #0x0                   	// #0
   11dd8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11ddc:	add	x2, x2, #0xbf8
   11de0:	mov	w1, #0xae                  	// #174
   11de4:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11de8:	add	x0, x0, #0xaf0
   11dec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11df0:	mov	x4, #0x36                  	// #54
   11df4:	mov	x3, x22
   11df8:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11dfc:	add	x2, x2, #0xad0
   11e00:	mov	w1, #0xaf                  	// #175
   11e04:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11e08:	add	x0, x0, #0xaf0
   11e0c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11e10:	add	x3, x21, #0x408
   11e14:	mov	x2, #0x1                   	// #1
   11e18:	mov	x7, #0x40                  	// #64
   11e1c:	mov	x14, #0x200                 	// #512
   11e20:	mov	x13, x6
   11e24:	mov	x8, #0x14                  	// #20
   11e28:	mov	w11, #0x4000                	// #16384
   11e2c:	mov	x10, x2
   11e30:	mov	x9, #0x3e                  	// #62
   11e34:	mov	x12, #0x100                 	// #256
   11e38:	b	11ea4 <__sancov_default_options@@Base+0x1b20>
   11e3c:	sub	x5, x2, #0x10
   11e40:	lsr	x0, x5, #2
   11e44:	lsl	x0, x12, x0
   11e48:	lsr	x4, x0, #2
   11e4c:	and	x5, x5, #0x3
   11e50:	madd	x4, x4, x5, x0
   11e54:	cbz	x4, 11f3c <__sancov_default_options@@Base+0x1bb8>
   11e58:	udiv	w5, w11, w4
   11e5c:	mov	w0, w5
   11e60:	cmp	w5, #0x40
   11e64:	csel	x0, x0, x7, ls  // ls = plast
   11e68:	cmp	x0, #0x0
   11e6c:	csel	x0, x0, x10, ne  // ne = any
   11e70:	cmp	x0, #0x3e
   11e74:	csel	x0, x0, x9, ls  // ls = plast
   11e78:	lsl	x5, x0, #1
   11e7c:	str	x5, [x3]
   11e80:	str	x4, [x3, #8]
   11e84:	add	x0, x0, #0x2
   11e88:	cmp	x4, x0, lsl #3
   11e8c:	csel	x0, x6, x8, cs  // cs = hs, nlast
   11e90:	str	x0, [x3, #16]
   11e94:	add	x2, x2, #0x1
   11e98:	add	x3, x3, #0x400
   11e9c:	cmp	x2, #0x36
   11ea0:	b.eq	11d84 <__sancov_default_options@@Base+0x1a00>  // b.none
   11ea4:	cmp	x2, #0x35
   11ea8:	b.eq	11f54 <__sancov_default_options@@Base+0x1bd0>  // b.none
   11eac:	lsl	x4, x2, #4
   11eb0:	cmp	x2, #0x10
   11eb4:	b.hi	11e3c <__sancov_default_options@@Base+0x1ab8>  // b.pmore
   11eb8:	b	11e54 <__sancov_default_options@@Base+0x1ad0>
   11ebc:	mov	x3, x22
   11ec0:	mov	x2, x20
   11ec4:	mov	x0, x21
   11ec8:	bl	11aa4 <__sancov_default_options@@Base+0x1720>
   11ecc:	b	11d94 <__sancov_default_options@@Base+0x1a10>
   11ed0:	str	x23, [sp, #32]
   11ed4:	mov	x4, #0x0                   	// #0
   11ed8:	mov	x3, #0x0                   	// #0
   11edc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11ee0:	add	x2, x2, #0x988
   11ee4:	mov	w1, #0x123                 	// #291
   11ee8:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11eec:	add	x0, x0, #0x6e8
   11ef0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11ef4:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   11ef8:	b	11c74 <__sancov_default_options@@Base+0x18f0>
   11efc:	str	x23, [sp, #32]
   11f00:	mov	x4, x19
   11f04:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11f08:	add	x2, x2, #0x9b0
   11f0c:	mov	w1, #0x88                  	// #136
   11f10:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11f14:	add	x0, x0, #0x6e8
   11f18:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11f1c:	str	x23, [sp, #32]
   11f20:	mov	x3, x1
   11f24:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11f28:	add	x2, x2, #0x9d0
   11f2c:	mov	w1, #0x89                  	// #137
   11f30:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   11f34:	add	x0, x0, #0x6e8
   11f38:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   11f3c:	str	xzr, [x3]
   11f40:	str	xzr, [x3, #8]
   11f44:	str	x8, [x3, #16]
   11f48:	add	x2, x2, #0x1
   11f4c:	add	x3, x3, #0x400
   11f50:	b	11ea4 <__sancov_default_options@@Base+0x1b20>
   11f54:	str	x7, [x3]
   11f58:	str	x14, [x3, #8]
   11f5c:	mov	x0, x13
   11f60:	b	11e90 <__sancov_default_options@@Base+0x1b0c>
   11f64:	ret
   11f68:	stp	x19, x20, [sp, #-64]!
   11f6c:	stp	x21, x22, [sp, #16]
   11f70:	stp	x23, x24, [sp, #32]
   11f74:	str	x30, [sp, #56]
   11f78:	mov	x20, x0
   11f7c:	mov	x22, x1
   11f80:	mov	x21, x3
   11f84:	mov	x24, x4
   11f88:	cbz	x2, 11ff0 <__sancov_default_options@@Base+0x1c6c>
   11f8c:	mov	x19, x2
   11f90:	cbz	x3, 12004 <__sancov_default_options@@Base+0x1c80>
   11f94:	str	x25, [sp, #48]
   11f98:	mov	x23, x2
   11f9c:	mov	x0, #0xffffffffffff        	// #281474976710655
   11fa0:	cmp	x2, x0
   11fa4:	b.ls	12010 <__sancov_default_options@@Base+0x1c8c>  // b.plast
   11fa8:	add	x0, x20, #0xc1, lsl #12
   11fac:	mov	w2, #0x1                   	// #1
   11fb0:	ldxrb	w1, [x0]
   11fb4:	stxrb	w3, w2, [x0]
   11fb8:	cbnz	w3, 11fb0 <__sancov_default_options@@Base+0x1c2c>
   11fbc:	dmb	ish
   11fc0:	and	w1, w1, #0xff
   11fc4:	cbnz	w1, 120a8 <__sancov_default_options@@Base+0x1d24>
   11fc8:	add	x0, x20, #0xc0, lsl #12
   11fcc:	add	x0, x0, #0xdc0
   11fd0:	ldr	x0, [x0, #16]
   11fd4:	cbz	x0, 12248 <__sancov_default_options@@Base+0x1ec4>
   11fd8:	add	x1, x20, #0x80, lsl #12
   11fdc:	add	x1, x1, #0xdc0
   11fe0:	ldr	x2, [x1, #8]
   11fe4:	add	x1, x2, x0, lsl #3
   11fe8:	mov	x0, #0x0                   	// #0
   11fec:	b	120bc <__sancov_default_options@@Base+0x1d38>
   11ff0:	mov	x3, x4
   11ff4:	mov	x2, x21
   11ff8:	bl	1160c <__sancov_default_options@@Base+0x1288>
   11ffc:	mov	x23, x0
   12000:	b	121b8 <__sancov_default_options@@Base+0x1e34>
   12004:	bl	11c10 <__sancov_default_options@@Base+0x188c>
   12008:	mov	x23, #0x0                   	// #0
   1200c:	b	121b8 <__sancov_default_options@@Base+0x1e34>
   12010:	lsr	x1, x2, #20
   12014:	lsr	x0, x2, #32
   12018:	ldr	x0, [x20, x0, lsl #3]
   1201c:	dmb	ish
   12020:	cbz	x0, 11fa8 <__sancov_default_options@@Base+0x1c24>
   12024:	and	x1, x1, #0xfff
   12028:	ldrb	w0, [x0, x1]
   1202c:	cbz	w0, 11fa8 <__sancov_default_options@@Base+0x1c24>
   12030:	lsr	x0, x19, #20
   12034:	lsr	x2, x19, #32
   12038:	ldr	x1, [x20, x2, lsl #3]
   1203c:	dmb	ish
   12040:	cbz	x1, 12144 <__sancov_default_options@@Base+0x1dc0>
   12044:	and	x0, x0, #0xfff
   12048:	ldrb	w1, [x1, x0]
   1204c:	cbz	w1, 12144 <__sancov_default_options@@Base+0x1dc0>
   12050:	ldr	x1, [x20, x2, lsl #3]
   12054:	dmb	ish
   12058:	cbz	x1, 12280 <__sancov_default_options@@Base+0x1efc>
   1205c:	ldrb	w1, [x1, x0]
   12060:	cbz	w1, 12280 <__sancov_default_options@@Base+0x1efc>
   12064:	ldr	x1, [x20, x2, lsl #3]
   12068:	dmb	ish
   1206c:	cbz	x1, 122a0 <__sancov_default_options@@Base+0x1f1c>
   12070:	ldrb	w1, [x1, x0]
   12074:	mov	x25, #0x200                 	// #512
   12078:	cmp	x1, #0x35
   1207c:	b.eq	12178 <__sancov_default_options@@Base+0x1df4>  // b.none
   12080:	cmp	x1, #0x10
   12084:	b.ls	122a0 <__sancov_default_options@@Base+0x1f1c>  // b.plast
   12088:	sub	x1, x1, #0x10
   1208c:	lsr	x25, x1, #2
   12090:	mov	x0, #0x100                 	// #256
   12094:	lsl	x0, x0, x25
   12098:	lsr	x25, x0, #2
   1209c:	and	x1, x1, #0x3
   120a0:	madd	x25, x25, x1, x0
   120a4:	b	12178 <__sancov_default_options@@Base+0x1df4>
   120a8:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   120ac:	b	11fc8 <__sancov_default_options@@Base+0x1c44>
   120b0:	add	x2, x2, #0x8
   120b4:	cmp	x1, x2
   120b8:	b.eq	120dc <__sancov_default_options@@Base+0x1d58>  // b.none
   120bc:	ldr	x3, [x2]
   120c0:	cmp	x23, x3
   120c4:	b.cc	120b0 <__sancov_default_options@@Base+0x1d2c>  // b.lo, b.ul, b.last
   120c8:	sub	x5, x23, x3
   120cc:	sub	x4, x23, x0
   120d0:	cmp	x5, x4
   120d4:	csel	x0, x0, x3, cs  // cs = hs, nlast
   120d8:	b	120b0 <__sancov_default_options@@Base+0x1d2c>
   120dc:	cbz	x0, 12250 <__sancov_default_options@@Base+0x1ecc>
   120e0:	ldr	x4, [x0]
   120e4:	cmp	x4, x0
   120e8:	b.hi	121d0 <__sancov_default_options@@Base+0x1e4c>  // b.pmore
   120ec:	ldr	x1, [x0, #8]
   120f0:	add	x4, x4, x1
   120f4:	cmp	x4, x0
   120f8:	b.ls	121ec <__sancov_default_options@@Base+0x1e68>  // b.plast
   120fc:	cmp	x19, x0
   12100:	b.cc	12208 <__sancov_default_options@@Base+0x1e84>  // b.lo, b.ul, b.last
   12104:	cmp	x19, x4
   12108:	b.cs	12258 <__sancov_default_options@@Base+0x1ed4>  // b.hs, b.nlast
   1210c:	add	x1, x20, #0x80, lsl #12
   12110:	add	x1, x1, #0xc00
   12114:	ldr	x1, [x1, #448]
   12118:	sub	x2, x1, #0x1
   1211c:	add	x1, x0, x1
   12120:	tst	x2, x0
   12124:	b.ne	12228 <__sancov_default_options@@Base+0x1ea4>  // b.any
   12128:	dmb	ish
   1212c:	add	x0, x20, #0xc1, lsl #12
   12130:	strb	wzr, [x0]
   12134:	cbz	x1, 12260 <__sancov_default_options@@Base+0x1edc>
   12138:	mov	x0, #0xffffffffffff        	// #281474976710655
   1213c:	cmp	x19, x0
   12140:	b.ls	12030 <__sancov_default_options@@Base+0x1cac>  // b.plast
   12144:	add	x0, x20, #0x80, lsl #12
   12148:	add	x0, x0, #0xc00
   1214c:	ldr	x0, [x0, #448]
   12150:	sub	x1, x0, #0x1
   12154:	tst	x19, x1
   12158:	b.ne	122a8 <__sancov_default_options@@Base+0x1f24>  // b.any
   1215c:	sub	x2, x19, x0
   12160:	ldr	x25, [x2, #16]
   12164:	add	x25, x25, x1
   12168:	neg	x2, x0
   1216c:	and	x25, x25, x2
   12170:	tst	x0, x1
   12174:	b.ne	122c8 <__sancov_default_options@@Base+0x1f44>  // b.any
   12178:	mov	x3, x24
   1217c:	mov	x2, x21
   12180:	mov	x1, x22
   12184:	mov	x0, x20
   12188:	bl	1160c <__sancov_default_options@@Base+0x1288>
   1218c:	mov	x23, x0
   12190:	cbz	x0, 121a4 <__sancov_default_options@@Base+0x1e20>
   12194:	cmp	x21, x25
   12198:	csel	x2, x21, x25, ls  // ls = plast
   1219c:	mov	x1, x19
   121a0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   121a4:	mov	x2, x19
   121a8:	mov	x1, x22
   121ac:	mov	x0, x20
   121b0:	bl	11c10 <__sancov_default_options@@Base+0x188c>
   121b4:	ldr	x25, [sp, #48]
   121b8:	mov	x0, x23
   121bc:	ldp	x21, x22, [sp, #16]
   121c0:	ldp	x23, x24, [sp, #32]
   121c4:	ldr	x30, [sp, #56]
   121c8:	ldp	x19, x20, [sp], #64
   121cc:	ret
   121d0:	mov	x3, x0
   121d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   121d8:	add	x2, x2, #0x7a0
   121dc:	mov	w1, #0xc1                  	// #193
   121e0:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   121e4:	add	x0, x0, #0x6e8
   121e8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   121ec:	mov	x3, x0
   121f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   121f4:	add	x2, x2, #0x7c8
   121f8:	mov	w1, #0xc2                  	// #194
   121fc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12200:	add	x0, x0, #0x6e8
   12204:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12208:	mov	x4, x19
   1220c:	mov	x3, x0
   12210:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12214:	add	x2, x2, #0x800
   12218:	mov	w1, #0xc3                  	// #195
   1221c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12220:	add	x0, x0, #0x6e8
   12224:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12228:	mov	x4, #0x0                   	// #0
   1222c:	mov	x3, #0x0                   	// #0
   12230:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12234:	add	x2, x2, #0x820
   12238:	mov	w1, #0x12b                 	// #299
   1223c:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12240:	add	x0, x0, #0x6e8
   12244:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12248:	mov	x1, #0x0                   	// #0
   1224c:	b	12128 <__sancov_default_options@@Base+0x1da4>
   12250:	mov	x1, #0x0                   	// #0
   12254:	b	12128 <__sancov_default_options@@Base+0x1da4>
   12258:	mov	x1, #0x0                   	// #0
   1225c:	b	12128 <__sancov_default_options@@Base+0x1da4>
   12260:	mov	x4, #0x0                   	// #0
   12264:	mov	x3, #0x0                   	// #0
   12268:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1226c:	add	x2, x2, #0x620
   12270:	mov	w1, #0x62                  	// #98
   12274:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12278:	add	x0, x0, #0xdc0
   1227c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12280:	mov	x4, #0x0                   	// #0
   12284:	mov	x3, #0x0                   	// #0
   12288:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1228c:	add	x2, x2, #0x620
   12290:	mov	w1, #0xcc                  	// #204
   12294:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   12298:	add	x0, x0, #0x640
   1229c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   122a0:	lsl	x25, x1, #4
   122a4:	b	12178 <__sancov_default_options@@Base+0x1df4>
   122a8:	mov	x4, #0x0                   	// #0
   122ac:	mov	x3, #0x0                   	// #0
   122b0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   122b4:	add	x2, x2, #0x988
   122b8:	mov	w1, #0x123                 	// #291
   122bc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   122c0:	add	x0, x0, #0x6e8
   122c4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   122c8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   122cc:	add	x0, x0, #0x638
   122d0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   122d4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   122d8:	str	x30, [sp, #-16]!
   122dc:	bl	6ac0 <__errno_location@plt>
   122e0:	mov	w1, #0xc                   	// #12
   122e4:	str	w1, [x0]
   122e8:	ldr	x30, [sp], #16
   122ec:	ret
   122f0:	stp	x19, x20, [sp, #-64]!
   122f4:	stp	x21, x30, [sp, #16]
   122f8:	mov	x20, x0
   122fc:	mov	x21, x1
   12300:	add	x19, sp, #0x20
   12304:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12308:	add	x1, x1, #0x380
   1230c:	mov	x0, x19
   12310:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   12314:	mov	x3, x21
   12318:	mov	x2, x20
   1231c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12320:	ldr	x0, [x0, #4008]
   12324:	ldr	x1, [x0]
   12328:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1232c:	add	x0, x0, #0x390
   12330:	bl	1d908 <OnPrint@@Base+0x3d8>
   12334:	mov	x0, x19
   12338:	bl	1259c <__sancov_default_options@@Base+0x2218>
   1233c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12340:	stp	x19, x20, [sp, #-64]!
   12344:	str	x30, [sp, #16]
   12348:	mov	x19, x0
   1234c:	mov	x2, x1
   12350:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12354:	add	x1, x1, #0x3f8
   12358:	add	x0, sp, #0x20
   1235c:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   12360:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12364:	ldr	x0, [x0, #4008]
   12368:	ldr	x20, [x0]
   1236c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12370:	ldr	x0, [x0, #4000]
   12374:	ldr	x0, [x0]
   12378:	cbz	x0, 123a8 <__sancov_default_options@@Base+0x2024>
   1237c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12380:	ldr	x0, [x0, #4000]
   12384:	ldr	x3, [x0]
   12388:	mov	x2, x19
   1238c:	mov	x1, x20
   12390:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12394:	add	x0, x0, #0x410
   12398:	bl	1d908 <OnPrint@@Base+0x3d8>
   1239c:	add	x0, sp, #0x20
   123a0:	bl	1259c <__sancov_default_options@@Base+0x2218>
   123a4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   123a8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   123ac:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   123b0:	ldr	x1, [x1, #4000]
   123b4:	str	x0, [x1]
   123b8:	b	1237c <__sancov_default_options@@Base+0x1ff8>
   123bc:	stp	x19, x20, [sp, #-64]!
   123c0:	str	x30, [sp, #16]
   123c4:	mov	x20, x0
   123c8:	add	x19, sp, #0x20
   123cc:	mov	x2, x1
   123d0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   123d4:	add	x1, x1, #0x490
   123d8:	mov	x0, x19
   123dc:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   123e0:	mov	x2, x20
   123e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   123e8:	ldr	x0, [x0, #4008]
   123ec:	ldr	x1, [x0]
   123f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   123f4:	add	x0, x0, #0x4b0
   123f8:	bl	1d908 <OnPrint@@Base+0x3d8>
   123fc:	mov	x0, x19
   12400:	bl	1259c <__sancov_default_options@@Base+0x2218>
   12404:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12408:	stp	x19, x20, [sp, #-64]!
   1240c:	stp	x21, x30, [sp, #16]
   12410:	mov	x21, x0
   12414:	mov	x20, x1
   12418:	add	x19, sp, #0x20
   1241c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12420:	add	x1, x1, #0x500
   12424:	mov	x0, x19
   12428:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   1242c:	mov	x3, x21
   12430:	mov	x2, x20
   12434:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12438:	ldr	x0, [x0, #4008]
   1243c:	ldr	x1, [x0]
   12440:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12444:	add	x0, x0, #0x520
   12448:	bl	1d908 <OnPrint@@Base+0x3d8>
   1244c:	mov	x0, x19
   12450:	bl	1259c <__sancov_default_options@@Base+0x2218>
   12454:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12458:	stp	x19, x20, [sp, #-64]!
   1245c:	str	x30, [sp, #16]
   12460:	mov	x20, x0
   12464:	add	x19, sp, #0x20
   12468:	mov	x2, x1
   1246c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12470:	add	x1, x1, #0x5c0
   12474:	mov	x0, x19
   12478:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   1247c:	mov	x3, #0x8                   	// #8
   12480:	mov	x2, x20
   12484:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12488:	ldr	x0, [x0, #4008]
   1248c:	ldr	x1, [x0]
   12490:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12494:	add	x0, x0, #0x5e8
   12498:	bl	1d908 <OnPrint@@Base+0x3d8>
   1249c:	mov	x0, x19
   124a0:	bl	1259c <__sancov_default_options@@Base+0x2218>
   124a4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   124a8:	stp	x19, x20, [sp, #-64]!
   124ac:	stp	x21, x30, [sp, #16]
   124b0:	mov	x20, x0
   124b4:	mov	x21, x1
   124b8:	add	x19, sp, #0x20
   124bc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   124c0:	add	x1, x1, #0x670
   124c4:	mov	x0, x19
   124c8:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   124cc:	mov	x3, x21
   124d0:	mov	x2, x20
   124d4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   124d8:	ldr	x0, [x0, #4008]
   124dc:	ldr	x1, [x0]
   124e0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   124e4:	add	x0, x0, #0x688
   124e8:	bl	1d908 <OnPrint@@Base+0x3d8>
   124ec:	mov	x0, x19
   124f0:	bl	1259c <__sancov_default_options@@Base+0x2218>
   124f4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   124f8:	stp	x19, x20, [sp, #-64]!
   124fc:	str	x30, [sp, #16]
   12500:	mov	x20, x0
   12504:	add	x19, sp, #0x20
   12508:	mov	x2, x1
   1250c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12510:	add	x1, x1, #0x6e0
   12514:	mov	x0, x19
   12518:	bl	12544 <__sancov_default_options@@Base+0x21c0>
   1251c:	mov	x2, x20
   12520:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12524:	ldr	x0, [x0, #4008]
   12528:	ldr	x1, [x0]
   1252c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12530:	add	x0, x0, #0x6f0
   12534:	bl	1d908 <OnPrint@@Base+0x3d8>
   12538:	mov	x0, x19
   1253c:	bl	1259c <__sancov_default_options@@Base+0x2218>
   12540:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12544:	stp	x19, x20, [sp, #-32]!
   12548:	stp	x21, x30, [sp, #16]
   1254c:	mov	x19, x0
   12550:	mov	x21, x1
   12554:	mov	x20, x2
   12558:	bl	20fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
   1255c:	str	x21, [x19, #8]
   12560:	str	x20, [x19, #16]
   12564:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   12568:	ands	w2, w0, #0xff
   1256c:	strb	w0, [x19, #24]
   12570:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   12574:	add	x0, x0, #0x9e0
   12578:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1257c:	add	x1, x1, #0x440
   12580:	csel	x1, x1, x0, ne  // ne = any
   12584:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   12588:	add	x0, x0, #0xd50
   1258c:	bl	1d874 <OnPrint@@Base+0x344>
   12590:	ldp	x21, x30, [sp, #16]
   12594:	ldp	x19, x20, [sp], #32
   12598:	ret
   1259c:	stp	x19, x30, [sp, #-16]!
   125a0:	mov	x19, x0
   125a4:	ldrb	w2, [x0, #24]
   125a8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   125ac:	add	x0, x0, #0x9e0
   125b0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   125b4:	add	x1, x1, #0xd40
   125b8:	cmp	w2, #0x0
   125bc:	csel	x1, x1, x0, ne  // ne = any
   125c0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   125c4:	add	x0, x0, #0xd50
   125c8:	bl	1d874 <OnPrint@@Base+0x344>
   125cc:	ldr	x0, [x19, #16]
   125d0:	bl	1f6c0 <OnPrint@@Base+0x2190>
   125d4:	bl	107e8 <__sancov_default_options@@Base+0x464>
   125d8:	mov	x2, #0x0                   	// #0
   125dc:	ldr	x1, [x19, #16]
   125e0:	ldr	x0, [x19, #8]
   125e4:	bl	20604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   125e8:	mov	x0, x19
   125ec:	bl	21124 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
   125f0:	ldp	x19, x30, [sp], #16
   125f4:	ret
   125f8:	str	x30, [sp, #-16]!
   125fc:	tst	w4, #0xff
   12600:	b.ne	12610 <__sancov_default_options@@Base+0x228c>  // b.any
   12604:	adrp	x4, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12608:	ldr	w4, [x4, #2560]
   1260c:	cbz	w4, 12620 <__sancov_default_options@@Base+0x229c>
   12610:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12614:	add	x0, x0, #0x738
   12618:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1261c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12620:	adrp	x4, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12624:	mov	w5, #0x1                   	// #1
   12628:	str	w5, [x4, #2560]
   1262c:	mov	w6, w3
   12630:	mov	x5, x1
   12634:	mov	x4, x0
   12638:	mov	x3, x0
   1263c:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   12640:	ldr	x1, [x0, #968]
   12644:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12648:	add	x0, x0, #0x750
   1264c:	bl	1d908 <OnPrint@@Base+0x3d8>
   12650:	bl	1b944 <__sanitizer_set_report_fd@@Base+0x5594>
   12654:	mov	x4, #0x0                   	// #0
   12658:	mov	x3, #0x0                   	// #0
   1265c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12660:	add	x2, x2, #0x798
   12664:	mov	w1, #0x35                  	// #53
   12668:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1266c:	add	x0, x0, #0x7c0
   12670:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12674:	stp	x19, x20, [sp, #-32]!
   12678:	str	x30, [sp, #24]
   1267c:	mov	x19, x0
   12680:	cbz	x0, 126bc <__sancov_default_options@@Base+0x2338>
   12684:	mov	x20, x1
   12688:	cbz	x1, 126bc <__sancov_default_options@@Base+0x2338>
   1268c:	str	x21, [sp, #16]
   12690:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   12694:	mov	x21, x0
   12698:	mov	x0, x19
   1269c:	cbz	x21, 126ac <__sancov_default_options@@Base+0x2328>
   126a0:	mov	x0, x20
   126a4:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   126a8:	add	x0, x21, x0
   126ac:	ldrb	w1, [x0]
   126b0:	cmp	w1, #0x2e
   126b4:	b.eq	126c8 <__sancov_default_options@@Base+0x2344>  // b.none
   126b8:	ldr	x21, [sp, #16]
   126bc:	ldr	x30, [sp, #24]
   126c0:	ldp	x19, x20, [sp], #32
   126c4:	ret
   126c8:	ldrb	w2, [x0, #1]
   126cc:	add	x1, x0, #0x2
   126d0:	cmp	w2, #0x2f
   126d4:	csel	x0, x1, x0, eq  // eq = none
   126d8:	ldr	x21, [sp, #16]
   126dc:	b	126bc <__sancov_default_options@@Base+0x2338>
   126e0:	stp	x19, x30, [sp, #-16]!
   126e4:	mov	x19, x0
   126e8:	cbz	x0, 126fc <__sancov_default_options@@Base+0x2378>
   126ec:	mov	w1, #0x2f                  	// #47
   126f0:	bl	17ccc <__sanitizer_set_report_fd@@Base+0x191c>
   126f4:	cmp	x0, #0x0
   126f8:	csinc	x19, x19, x0, eq  // eq = none
   126fc:	mov	x0, x19
   12700:	ldp	x19, x30, [sp], #16
   12704:	ret
   12708:	stp	x19, x20, [sp, #-32]!
   1270c:	stp	x21, x30, [sp, #16]
   12710:	mov	x19, x0
   12714:	bl	19bbc <__sanitizer_set_report_fd@@Base+0x380c>
   12718:	mov	x0, x19
   1271c:	bl	126e0 <__sancov_default_options@@Base+0x235c>
   12720:	mov	x21, x0
   12724:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   12728:	mov	x20, x0
   1272c:	cmp	x19, x21
   12730:	b.eq	12748 <__sancov_default_options@@Base+0x23c4>  // b.none
   12734:	mov	x2, x0
   12738:	mov	x1, x21
   1273c:	mov	x0, x19
   12740:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x175c>
   12744:	strb	wzr, [x19, x20]
   12748:	mov	x0, x20
   1274c:	ldp	x21, x30, [sp, #16]
   12750:	ldp	x19, x20, [sp], #32
   12754:	ret
   12758:	cbz	x0, 12804 <__sancov_default_options@@Base+0x2480>
   1275c:	stp	x19, x20, [sp, #-32]!
   12760:	str	x30, [sp, #16]
   12764:	ldrb	w1, [x0]
   12768:	cbz	w1, 127fc <__sancov_default_options@@Base+0x2478>
   1276c:	mov	x19, x0
   12770:	mov	w20, #0x6d                  	// #109
   12774:	b	127e4 <__sancov_default_options@@Base+0x2460>
   12778:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1277c:	add	x2, x2, #0x800
   12780:	mov	w1, #0x68                  	// #104
   12784:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12788:	add	x0, x0, #0x7c0
   1278c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   12790:	ldrb	w2, [x0, #1]
   12794:	cmp	w2, #0x5b
   12798:	b.ne	127ec <__sancov_default_options@@Base+0x2468>  // b.any
   1279c:	mov	w1, w20
   127a0:	bl	17d68 <__sanitizer_set_report_fd@@Base+0x19b8>
   127a4:	ldrb	w1, [x0]
   127a8:	cbnz	w1, 127bc <__sancov_default_options@@Base+0x2438>
   127ac:	strb	wzr, [x19]
   127b0:	ldr	x30, [sp, #16]
   127b4:	ldp	x19, x20, [sp], #32
   127b8:	ret
   127bc:	add	x0, x0, #0x1
   127c0:	b	127cc <__sancov_default_options@@Base+0x2448>
   127c4:	add	x19, x19, #0x1
   127c8:	add	x0, x0, #0x1
   127cc:	ldrb	w1, [x0]
   127d0:	cbz	w1, 127ac <__sancov_default_options@@Base+0x2428>
   127d4:	mov	x3, x0
   127d8:	mov	x4, x19
   127dc:	cmp	x0, x19
   127e0:	b.cc	12778 <__sancov_default_options@@Base+0x23f4>  // b.lo, b.ul, b.last
   127e4:	cmp	w1, #0x1b
   127e8:	b.eq	12790 <__sancov_default_options@@Base+0x240c>  // b.none
   127ec:	cmp	x0, x19
   127f0:	b.eq	127c4 <__sancov_default_options@@Base+0x2440>  // b.none
   127f4:	strb	w1, [x19]
   127f8:	b	127c4 <__sancov_default_options@@Base+0x2440>
   127fc:	mov	x19, x0
   12800:	b	127ac <__sancov_default_options@@Base+0x2428>
   12804:	ret
   12808:	stp	x19, x30, [sp, #-16]!
   1280c:	mov	x19, x0
   12810:	mov	x1, #0x0                   	// #0
   12814:	ldr	x0, [x0]
   12818:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   1281c:	str	xzr, [x19, #8]
   12820:	str	xzr, [x19, #16]
   12824:	str	xzr, [x19]
   12828:	str	wzr, [x19, #24]
   1282c:	mov	x2, #0x10                  	// #16
   12830:	mov	w1, #0x0                   	// #0
   12834:	add	x0, x19, #0x1c
   12838:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1283c:	strb	wzr, [x19, #44]
   12840:	ldr	x1, [x19, #48]
   12844:	cbnz	x1, 12868 <__sancov_default_options@@Base+0x24e4>
   12848:	ldp	x19, x30, [sp], #16
   1284c:	ret
   12850:	sub	x1, x1, #0x1
   12854:	str	x1, [x19, #48]
   12858:	mov	x1, #0x0                   	// #0
   1285c:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   12860:	ldr	x1, [x19, #48]
   12864:	cbz	x1, 12848 <__sancov_default_options@@Base+0x24c4>
   12868:	ldr	x0, [x19, #56]
   1286c:	ldr	x2, [x0]
   12870:	str	x2, [x19, #56]
   12874:	cbnz	x2, 12850 <__sancov_default_options@@Base+0x24cc>
   12878:	str	xzr, [x19, #64]
   1287c:	b	12850 <__sancov_default_options@@Base+0x24cc>
   12880:	stp	x19, x20, [sp, #-32]!
   12884:	stp	x21, x30, [sp, #16]
   12888:	mov	x19, x0
   1288c:	mov	x21, x1
   12890:	mov	x20, x2
   12894:	bl	12808 <__sancov_default_options@@Base+0x2484>
   12898:	mov	x0, x21
   1289c:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   128a0:	str	x0, [x19]
   128a4:	str	x20, [x19, #8]
   128a8:	ldp	x21, x30, [sp, #16]
   128ac:	ldp	x19, x20, [sp], #32
   128b0:	ret
   128b4:	stp	x19, x20, [sp, #-48]!
   128b8:	stp	x21, x22, [sp, #16]
   128bc:	str	x30, [sp, #32]
   128c0:	mov	x19, x0
   128c4:	mov	w21, w3
   128c8:	mov	x20, x4
   128cc:	and	w22, w5, #0xff
   128d0:	bl	12880 <__sancov_default_options@@Base+0x24fc>
   128d4:	str	w21, [x19, #24]
   128d8:	mov	x2, #0x10                  	// #16
   128dc:	mov	x1, x20
   128e0:	add	x0, x19, #0x1c
   128e4:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   128e8:	strb	w22, [x19, #44]
   128ec:	ldp	x21, x22, [sp, #16]
   128f0:	ldr	x30, [sp, #32]
   128f4:	ldp	x19, x20, [sp], #48
   128f8:	ret
   128fc:	stp	x19, x20, [sp, #-64]!
   12900:	stp	x21, x22, [sp, #16]
   12904:	stp	x23, x24, [sp, #32]
   12908:	stp	x25, x30, [sp, #48]
   1290c:	mov	x20, x0
   12910:	mov	x23, x1
   12914:	mov	x22, x2
   12918:	and	w24, w3, #0xff
   1291c:	and	w25, w4, #0xff
   12920:	mov	x21, x5
   12924:	mov	x2, #0x0                   	// #0
   12928:	mov	x1, #0x0                   	// #0
   1292c:	mov	x0, #0x30                  	// #48
   12930:	bl	10800 <__sancov_default_options@@Base+0x47c>
   12934:	mov	x19, x0
   12938:	str	xzr, [x0]
   1293c:	str	x23, [x0, #8]
   12940:	str	x22, [x0, #16]
   12944:	strb	w24, [x0, #24]
   12948:	strb	w25, [x0, #25]
   1294c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   12950:	add	x1, x1, #0x9e0
   12954:	cmp	x21, #0x0
   12958:	mov	x2, #0x10                  	// #16
   1295c:	csel	x1, x1, x21, eq  // eq = none
   12960:	add	x0, x0, #0x1a
   12964:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   12968:	ldr	x0, [x20, #48]
   1296c:	cbnz	x0, 129ac <__sancov_default_options@@Base+0x2628>
   12970:	str	xzr, [x19]
   12974:	str	x19, [x20, #64]
   12978:	str	x19, [x20, #56]
   1297c:	mov	x0, #0x1                   	// #1
   12980:	str	x0, [x20, #48]
   12984:	cbz	w24, 12998 <__sancov_default_options@@Base+0x2614>
   12988:	ldr	x0, [x20, #16]
   1298c:	cmp	x0, x22
   12990:	b.cs	12998 <__sancov_default_options@@Base+0x2614>  // b.hs, b.nlast
   12994:	str	x22, [x20, #16]
   12998:	ldp	x21, x22, [sp, #16]
   1299c:	ldp	x23, x24, [sp, #32]
   129a0:	ldp	x25, x30, [sp, #48]
   129a4:	ldp	x19, x20, [sp], #64
   129a8:	ret
   129ac:	str	xzr, [x19]
   129b0:	ldr	x1, [x20, #64]
   129b4:	str	x19, [x1]
   129b8:	str	x19, [x20, #64]
   129bc:	ldr	x0, [x20, #48]
   129c0:	add	x0, x0, #0x1
   129c4:	str	x0, [x20, #48]
   129c8:	b	12984 <__sancov_default_options@@Base+0x2600>
   129cc:	ldr	x0, [x0, #56]
   129d0:	cbnz	x0, 129e4 <__sancov_default_options@@Base+0x2660>
   129d4:	mov	w0, #0x0                   	// #0
   129d8:	b	12a00 <__sancov_default_options@@Base+0x267c>
   129dc:	ldr	x0, [x0]
   129e0:	cbz	x0, 12a00 <__sancov_default_options@@Base+0x267c>
   129e4:	ldr	x2, [x0, #8]
   129e8:	cmp	x2, x1
   129ec:	b.hi	129dc <__sancov_default_options@@Base+0x2658>  // b.pmore
   129f0:	ldr	x2, [x0, #16]
   129f4:	cmp	x2, x1
   129f8:	b.ls	129dc <__sancov_default_options@@Base+0x2658>  // b.plast
   129fc:	mov	w0, #0x1                   	// #1
   12a00:	ret
   12a04:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12a08:	ldr	x1, [x1, #4040]
   12a0c:	ldr	x1, [x1, #128]
   12a10:	cbz	x1, 12a4c <__sancov_default_options@@Base+0x26c8>
   12a14:	adrp	x1, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12a18:	add	x1, x1, #0xa00
   12a1c:	add	x1, x1, #0x8
   12a20:	ldxr	x2, [x1]
   12a24:	add	x3, x2, x0
   12a28:	stlxr	w4, x3, [x1]
   12a2c:	cbnz	w4, 12a20 <__sancov_default_options@@Base+0x269c>
   12a30:	dmb	ish
   12a34:	add	x0, x2, x0
   12a38:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12a3c:	ldr	x1, [x1, #4040]
   12a40:	ldr	x1, [x1, #128]
   12a44:	cmp	x1, x0, lsr #20
   12a48:	b.ls	12a50 <__sancov_default_options@@Base+0x26cc>  // b.plast
   12a4c:	ret
   12a50:	str	x30, [sp, #-16]!
   12a54:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12a58:	add	x0, x0, #0x810
   12a5c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   12a60:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12a64:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12a68:	ldr	x1, [x1, #4040]
   12a6c:	ldr	x1, [x1, #128]
   12a70:	cbz	x1, 12a98 <__sancov_default_options@@Base+0x2714>
   12a74:	neg	x0, x0
   12a78:	adrp	x1, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12a7c:	add	x1, x1, #0xa00
   12a80:	add	x1, x1, #0x8
   12a84:	ldxr	x2, [x1]
   12a88:	add	x2, x2, x0
   12a8c:	stlxr	w3, x2, [x1]
   12a90:	cbnz	w3, 12a84 <__sancov_default_options@@Base+0x2700>
   12a94:	dmb	ish
   12a98:	ret
   12a9c:	cbz	x1, 12c44 <__sancov_default_options@@Base+0x28c0>
   12aa0:	stp	x19, x20, [sp, #-96]!
   12aa4:	stp	x23, x24, [sp, #32]
   12aa8:	str	x30, [sp, #80]
   12aac:	mov	x19, x0
   12ab0:	mov	x23, x1
   12ab4:	ldrb	w1, [x1]
   12ab8:	mov	w0, #0x0                   	// #0
   12abc:	cbz	w1, 12c70 <__sancov_default_options@@Base+0x28ec>
   12ac0:	mov	w0, #0x1                   	// #1
   12ac4:	cbz	x19, 12c70 <__sancov_default_options@@Base+0x28ec>
   12ac8:	stp	x21, x22, [sp, #16]
   12acc:	stp	x25, x26, [sp, #48]
   12ad0:	stp	x27, x28, [sp, #64]
   12ad4:	ldrb	w0, [x19]
   12ad8:	mov	w24, #0x0                   	// #0
   12adc:	cmp	w0, #0x5e
   12ae0:	b.eq	12afc <__sancov_default_options@@Base+0x2778>  // b.none
   12ae4:	mov	w1, #0x0                   	// #0
   12ae8:	mov	w26, #0x2a                  	// #42
   12aec:	mov	w25, #0x24                  	// #36
   12af0:	mov	w28, #0x1                   	// #1
   12af4:	mov	w27, #0x0                   	// #0
   12af8:	b	12bb4 <__sancov_default_options@@Base+0x2830>
   12afc:	add	x19, x19, #0x1
   12b00:	mov	w24, #0x1                   	// #1
   12b04:	b	12ae4 <__sancov_default_options@@Base+0x2760>
   12b08:	add	x19, x19, #0x1
   12b0c:	mov	x0, x23
   12b10:	mov	w1, w28
   12b14:	b	12bac <__sancov_default_options@@Base+0x2828>
   12b18:	ldrb	w0, [x23]
   12b1c:	cmp	w0, #0x0
   12b20:	cset	w0, eq  // eq = none
   12b24:	orr	w1, w1, w0
   12b28:	and	w0, w1, #0xff
   12b2c:	ldp	x21, x22, [sp, #16]
   12b30:	ldp	x25, x26, [sp, #48]
   12b34:	ldp	x27, x28, [sp, #64]
   12b38:	b	12c70 <__sancov_default_options@@Base+0x28ec>
   12b3c:	cbnz	x0, 12c04 <__sancov_default_options@@Base+0x2880>
   12b40:	mov	x1, x19
   12b44:	mov	x0, x23
   12b48:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   12b4c:	mov	x21, x0
   12b50:	mov	x0, x19
   12b54:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   12b58:	add	x0, x21, x0
   12b5c:	mov	x19, x22
   12b60:	b	12b94 <__sancov_default_options@@Base+0x2810>
   12b64:	strb	wzr, [x20]
   12b68:	mov	x1, x19
   12b6c:	mov	x0, x23
   12b70:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   12b74:	mov	x21, x0
   12b78:	mov	x0, x19
   12b7c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   12b80:	add	x0, x21, x0
   12b84:	mov	x19, x20
   12b88:	cmp	x20, x22
   12b8c:	csel	w1, w25, w26, eq  // eq = none
   12b90:	strb	w1, [x19]
   12b94:	cbz	x21, 12c94 <__sancov_default_options@@Base+0x2910>
   12b98:	cmp	x23, x21
   12b9c:	cset	w1, ne  // ne = any
   12ba0:	ands	w1, w24, w1
   12ba4:	b.ne	12c30 <__sancov_default_options@@Base+0x28ac>  // b.any
   12ba8:	cbz	x19, 12c4c <__sancov_default_options@@Base+0x28c8>
   12bac:	mov	x23, x0
   12bb0:	mov	w24, w27
   12bb4:	ldrb	w0, [x19]
   12bb8:	cbz	w0, 12c60 <__sancov_default_options@@Base+0x28dc>
   12bbc:	cmp	w0, #0x2a
   12bc0:	b.eq	12b08 <__sancov_default_options@@Base+0x2784>  // b.none
   12bc4:	cmp	w0, #0x24
   12bc8:	b.eq	12b18 <__sancov_default_options@@Base+0x2794>  // b.none
   12bcc:	ldrb	w0, [x23]
   12bd0:	cbz	w0, 12c80 <__sancov_default_options@@Base+0x28fc>
   12bd4:	mov	w1, w26
   12bd8:	mov	x0, x19
   12bdc:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   12be0:	mov	x20, x0
   12be4:	mov	w1, w25
   12be8:	mov	x0, x19
   12bec:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   12bf0:	mov	x22, x0
   12bf4:	cbz	x20, 12b3c <__sancov_default_options@@Base+0x27b8>
   12bf8:	cmp	x0, #0x0
   12bfc:	ccmp	x20, x0, #0x0, ne  // ne = any
   12c00:	b.ls	12b64 <__sancov_default_options@@Base+0x27e0>  // b.plast
   12c04:	strb	wzr, [x22]
   12c08:	mov	x1, x19
   12c0c:	mov	x0, x23
   12c10:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   12c14:	mov	x21, x0
   12c18:	mov	x0, x19
   12c1c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   12c20:	add	x0, x21, x0
   12c24:	mov	x19, x22
   12c28:	mov	w1, w25
   12c2c:	b	12b90 <__sancov_default_options@@Base+0x280c>
   12c30:	mov	w0, #0x0                   	// #0
   12c34:	ldp	x21, x22, [sp, #16]
   12c38:	ldp	x25, x26, [sp, #48]
   12c3c:	ldp	x27, x28, [sp, #64]
   12c40:	b	12c70 <__sancov_default_options@@Base+0x28ec>
   12c44:	mov	w0, #0x0                   	// #0
   12c48:	ret
   12c4c:	mov	w0, #0x1                   	// #1
   12c50:	ldp	x21, x22, [sp, #16]
   12c54:	ldp	x25, x26, [sp, #48]
   12c58:	ldp	x27, x28, [sp, #64]
   12c5c:	b	12c70 <__sancov_default_options@@Base+0x28ec>
   12c60:	mov	w0, #0x1                   	// #1
   12c64:	ldp	x21, x22, [sp, #16]
   12c68:	ldp	x25, x26, [sp, #48]
   12c6c:	ldp	x27, x28, [sp, #64]
   12c70:	ldp	x23, x24, [sp, #32]
   12c74:	ldr	x30, [sp, #80]
   12c78:	ldp	x19, x20, [sp], #96
   12c7c:	ret
   12c80:	mov	w0, #0x0                   	// #0
   12c84:	ldp	x21, x22, [sp, #16]
   12c88:	ldp	x25, x26, [sp, #48]
   12c8c:	ldp	x27, x28, [sp, #64]
   12c90:	b	12c70 <__sancov_default_options@@Base+0x28ec>
   12c94:	mov	w0, #0x0                   	// #0
   12c98:	ldp	x21, x22, [sp, #16]
   12c9c:	ldp	x25, x26, [sp, #48]
   12ca0:	ldp	x27, x28, [sp, #64]
   12ca4:	b	12c70 <__sancov_default_options@@Base+0x28ec>
   12ca8:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12cac:	add	x0, x0, #0xa70
   12cb0:	ret
   12cb4:	str	x30, [sp, #-16]!
   12cb8:	mov	x1, #0x1000                	// #4096
   12cbc:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12cc0:	add	x0, x0, #0xa70
   12cc4:	bl	12708 <__sancov_default_options@@Base+0x2384>
   12cc8:	ldr	x30, [sp], #16
   12ccc:	ret
   12cd0:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   12cd4:	ldrb	w0, [x0, #2672]
   12cd8:	cbz	w0, 12ce0 <__sancov_default_options@@Base+0x295c>
   12cdc:	ret
   12ce0:	str	x30, [sp, #-16]!
   12ce4:	mov	x1, #0x1000                	// #4096
   12ce8:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   12cec:	add	x0, x0, #0xa70
   12cf0:	bl	19b28 <__sanitizer_set_report_fd@@Base+0x3778>
   12cf4:	mov	x1, #0x1000                	// #4096
   12cf8:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12cfc:	add	x0, x0, #0xa70
   12d00:	bl	12708 <__sancov_default_options@@Base+0x2384>
   12d04:	ldr	x30, [sp], #16
   12d08:	ret
   12d0c:	stp	x19, x20, [sp, #-32]!
   12d10:	str	x30, [sp, #16]
   12d14:	mov	x20, x0
   12d18:	mov	x19, x1
   12d1c:	bl	12cd0 <__sancov_default_options@@Base+0x294c>
   12d20:	adrp	x0, 1b6000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   12d24:	add	x0, x0, #0xa70
   12d28:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   12d2c:	cbnz	x19, 12d40 <__sancov_default_options@@Base+0x29bc>
   12d30:	mov	x0, x19
   12d34:	ldr	x30, [sp, #16]
   12d38:	ldp	x19, x20, [sp], #32
   12d3c:	ret
   12d40:	sub	x19, x19, #0x1
   12d44:	cmp	x19, x0
   12d48:	csel	x19, x19, x0, ls  // ls = plast
   12d4c:	mov	x2, x19
   12d50:	adrp	x1, 1b6000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   12d54:	add	x1, x1, #0xa70
   12d58:	mov	x0, x20
   12d5c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   12d60:	strb	wzr, [x20, x19]
   12d64:	b	12d30 <__sancov_default_options@@Base+0x29ac>
   12d68:	stp	x19, x20, [sp, #-32]!
   12d6c:	str	x30, [sp, #16]
   12d70:	bl	18e24 <__sanitizer_set_report_fd@@Base+0x2a74>
   12d74:	cbz	x0, 12db8 <__sancov_default_options@@Base+0x2a34>
   12d78:	mov	x19, x0
   12d7c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12d80:	add	x0, x0, #0x848
   12d84:	bl	1d874 <OnPrint@@Base+0x344>
   12d88:	ldr	x1, [x19]
   12d8c:	cbz	x1, 12dac <__sancov_default_options@@Base+0x2a28>
   12d90:	add	x19, x19, #0x8
   12d94:	adrp	x20, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   12d98:	add	x20, x20, #0xee0
   12d9c:	mov	x0, x20
   12da0:	bl	1d874 <OnPrint@@Base+0x344>
   12da4:	ldr	x1, [x19], #8
   12da8:	cbnz	x1, 12d9c <__sancov_default_options@@Base+0x2a18>
   12dac:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12db0:	add	x0, x0, #0x858
   12db4:	bl	1d874 <OnPrint@@Base+0x344>
   12db8:	ldr	x30, [sp, #16]
   12dbc:	ldp	x19, x20, [sp], #32
   12dc0:	ret
   12dc4:	stp	x19, x20, [sp, #-48]!
   12dc8:	stp	x21, x22, [sp, #16]
   12dcc:	str	x30, [sp, #32]
   12dd0:	mov	x22, x0
   12dd4:	mov	x21, x1
   12dd8:	adrp	x20, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12ddc:	add	x20, x20, #0xa00
   12de0:	add	x19, x20, #0x10
   12de4:	add	x20, x20, #0x60
   12de8:	ldr	x2, [x19]
   12dec:	cbz	x2, 12e08 <__sancov_default_options@@Base+0x2a84>
   12df0:	mov	x1, x21
   12df4:	mov	x0, x22
   12df8:	blr	x2
   12dfc:	add	x19, x19, #0x10
   12e00:	cmp	x19, x20
   12e04:	b.ne	12de8 <__sancov_default_options@@Base+0x2a64>  // b.any
   12e08:	ldp	x21, x22, [sp, #16]
   12e0c:	ldr	x30, [sp, #32]
   12e10:	ldp	x19, x20, [sp], #48
   12e14:	ret
   12e18:	stp	x19, x20, [sp, #-32]!
   12e1c:	stp	x21, x30, [sp, #16]
   12e20:	mov	x21, x0
   12e24:	mov	x19, #0x0                   	// #0
   12e28:	adrp	x20, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12e2c:	add	x20, x20, #0xa00
   12e30:	add	x20, x20, #0x10
   12e34:	add	x1, x20, x19
   12e38:	ldr	x1, [x1, #8]
   12e3c:	cbz	x1, 12e54 <__sancov_default_options@@Base+0x2ad0>
   12e40:	mov	x0, x21
   12e44:	blr	x1
   12e48:	add	x19, x19, #0x10
   12e4c:	cmp	x19, #0x50
   12e50:	b.ne	12e34 <__sancov_default_options@@Base+0x2ab0>  // b.any
   12e54:	ldp	x21, x30, [sp, #16]
   12e58:	ldp	x19, x20, [sp], #32
   12e5c:	ret

0000000000012e60 <__sanitizer_report_error_summary@@Base>:
   12e60:	str	x30, [sp, #-16]!
   12e64:	mov	x1, x0
   12e68:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   12e6c:	add	x0, x0, #0x480
   12e70:	bl	1d874 <OnPrint@@Base+0x344>
   12e74:	ldr	x30, [sp], #16
   12e78:	ret
   12e7c:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12e80:	ldr	x2, [x2, #4040]
   12e84:	ldrb	w2, [x2, #60]
   12e88:	cbnz	w2, 12e90 <__sanitizer_report_error_summary@@Base+0x30>
   12e8c:	ret
   12e90:	stp	x19, x20, [sp, #-80]!
   12e94:	stp	x21, x22, [sp, #16]
   12e98:	str	x30, [sp, #32]
   12e9c:	mov	x20, x0
   12ea0:	mov	x19, x1
   12ea4:	str	xzr, [sp, #56]
   12ea8:	str	xzr, [sp, #64]
   12eac:	str	xzr, [sp, #48]
   12eb0:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12eb4:	ldr	x0, [x0, #2656]
   12eb8:	cbz	x0, 12fa0 <__sanitizer_report_error_summary@@Base+0x140>
   12ebc:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12ec0:	ldr	x2, [x0, #2656]
   12ec4:	sub	x0, x2, #0x1
   12ec8:	tst	x0, x2
   12ecc:	b.ne	12fb0 <__sanitizer_report_error_summary@@Base+0x150>  // b.any
   12ed0:	add	x21, x2, #0x3ff
   12ed4:	neg	x2, x2
   12ed8:	and	x21, x21, x2
   12edc:	mov	w2, #0x0                   	// #0
   12ee0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   12ee4:	add	x1, x1, #0x650
   12ee8:	mov	x0, x21
   12eec:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   12ef0:	mov	x22, x0
   12ef4:	ldr	x2, [sp, #64]
   12ef8:	ldr	x1, [sp, #48]
   12efc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   12f00:	ldr	x1, [sp, #56]
   12f04:	ldr	x0, [sp, #48]
   12f08:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   12f0c:	str	x22, [sp, #48]
   12f10:	str	x21, [sp, #56]
   12f14:	ldr	x0, [sp, #64]
   12f18:	cmp	x0, #0x3ff
   12f1c:	b.hi	12f44 <__sanitizer_report_error_summary@@Base+0xe4>  // b.pmore
   12f20:	cmp	x21, #0x3ff
   12f24:	b.ls	12fc0 <__sanitizer_report_error_summary@@Base+0x160>  // b.plast
   12f28:	ldr	x0, [sp, #64]
   12f2c:	mov	x2, #0x400                 	// #1024
   12f30:	sub	x2, x2, x0
   12f34:	mov	w1, #0x0                   	// #0
   12f38:	ldr	x3, [sp, #48]
   12f3c:	add	x0, x3, x0
   12f40:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   12f44:	mov	x0, #0x400                 	// #1024
   12f48:	str	x0, [sp, #64]
   12f4c:	str	xzr, [sp, #72]
   12f50:	ldr	x0, [sp, #48]
   12f54:	strb	wzr, [x0]
   12f58:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   12f5c:	ldr	x2, [x0, #968]
   12f60:	cmp	x19, #0x0
   12f64:	mov	x3, x20
   12f68:	csel	x2, x2, x19, eq  // eq = none
   12f6c:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   12f70:	add	x1, x1, #0x860
   12f74:	add	x0, sp, #0x30
   12f78:	bl	1d99c <OnPrint@@Base+0x46c>
   12f7c:	ldr	x0, [sp, #48]
   12f80:	bl	6670 <__sanitizer_report_error_summary@plt>
   12f84:	ldr	x1, [sp, #56]
   12f88:	ldr	x0, [sp, #48]
   12f8c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   12f90:	ldp	x21, x22, [sp, #16]
   12f94:	ldr	x30, [sp, #32]
   12f98:	ldp	x19, x20, [sp], #80
   12f9c:	ret
   12fa0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   12fa4:	adrp	x1, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12fa8:	str	x0, [x1, #2656]
   12fac:	b	12ebc <__sanitizer_report_error_summary@@Base+0x5c>
   12fb0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   12fb4:	add	x0, x0, #0x638
   12fb8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   12fbc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   12fc0:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12fc4:	ldr	x0, [x0, #2656]
   12fc8:	cbz	x0, 13028 <__sanitizer_report_error_summary@@Base+0x1c8>
   12fcc:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   12fd0:	ldr	x0, [x0, #2656]
   12fd4:	sub	x1, x0, #0x1
   12fd8:	tst	x1, x0
   12fdc:	b.ne	13038 <__sanitizer_report_error_summary@@Base+0x1d8>  // b.any
   12fe0:	add	x21, x0, #0x3ff
   12fe4:	neg	x0, x0
   12fe8:	and	x21, x21, x0
   12fec:	mov	w2, #0x0                   	// #0
   12ff0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   12ff4:	add	x1, x1, #0x650
   12ff8:	mov	x0, x21
   12ffc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   13000:	mov	x22, x0
   13004:	ldr	x2, [sp, #64]
   13008:	ldr	x1, [sp, #48]
   1300c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   13010:	ldr	x1, [sp, #56]
   13014:	ldr	x0, [sp, #48]
   13018:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1301c:	str	x22, [sp, #48]
   13020:	str	x21, [sp, #56]
   13024:	b	12f28 <__sanitizer_report_error_summary@@Base+0xc8>
   13028:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1302c:	adrp	x1, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13030:	str	x0, [x1, #2656]
   13034:	b	12fcc <__sanitizer_report_error_summary@@Base+0x16c>
   13038:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1303c:	add	x0, x0, #0x638
   13040:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   13044:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>

0000000000013048 <__sanitizer_acquire_crash_state@@Base>:
   13048:	adrp	x0, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   1304c:	add	x0, x0, #0xa00
   13050:	add	x0, x0, #0x68
   13054:	mov	w2, #0x1                   	// #1
   13058:	ldxrb	w1, [x0]
   1305c:	stxrb	w3, w2, [x0]
   13060:	cbnz	w3, 13058 <__sanitizer_acquire_crash_state@@Base+0x10>
   13064:	dmb	ish
   13068:	ands	w0, w1, #0xff
   1306c:	cset	w0, eq  // eq = none
   13070:	ret

0000000000013074 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   13074:	cmp	x0, #0x0
   13078:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1307c:	b.eq	130d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x64>  // b.none
   13080:	mov	x2, #0x0                   	// #0
   13084:	adrp	x3, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   13088:	add	x3, x3, #0xa00
   1308c:	add	x3, x3, #0x10
   13090:	mov	w4, w2
   13094:	lsl	x5, x2, #4
   13098:	ldr	x5, [x5, x3]
   1309c:	cbz	x5, 130b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x40>
   130a0:	add	x2, x2, #0x1
   130a4:	cmp	x2, #0x5
   130a8:	b.ne	13090 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c>  // b.any
   130ac:	mov	w0, #0x0                   	// #0
   130b0:	ret
   130b4:	adrp	x2, 1b5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   130b8:	add	x2, x2, #0xa00
   130bc:	add	x2, x2, #0x10
   130c0:	sbfiz	x3, x4, #4, #32
   130c4:	add	x5, x2, x3
   130c8:	str	x0, [x2, x3]
   130cc:	str	x1, [x5, #8]
   130d0:	add	w0, w4, #0x1
   130d4:	b	130b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c>
   130d8:	mov	w0, #0x0                   	// #0
   130dc:	b	130b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c>
   130e0:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   130e4:	ldr	x3, [x1, #2704]
   130e8:	cbnz	x3, 130f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x84>
   130ec:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   130f0:	str	x0, [x1, #2704]
   130f4:	ret
   130f8:	str	x30, [sp, #-16]!
   130fc:	mov	x4, #0x0                   	// #0
   13100:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13104:	add	x2, x2, #0x880
   13108:	mov	w1, #0x16                  	// #22
   1310c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13110:	add	x0, x0, #0x8b0
   13114:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   13118:	mov	x0, #0x0                   	// #0
   1311c:	ret
   13120:	stp	x19, x20, [sp, #-128]!
   13124:	stp	x21, x22, [sp, #16]
   13128:	stp	x23, x24, [sp, #32]
   1312c:	stp	x25, x26, [sp, #48]
   13130:	stp	x27, x28, [sp, #64]
   13134:	str	x30, [sp, #80]
   13138:	stp	d8, d9, [sp, #96]
   1313c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13140:	ldr	x0, [x0, #4040]
   13144:	ldr	x21, [x0, #136]
   13148:	ldr	x22, [x0, #144]
   1314c:	ldrb	w27, [x0, #152]
   13150:	fmov	d8, xzr
   13154:	mov	w24, #0x0                   	// #0
   13158:	mov	x26, #0x0                   	// #0
   1315c:	mov	x23, #0x0                   	// #0
   13160:	adrp	x25, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13164:	ldr	x25, [x25, #3680]
   13168:	mov	x28, #0xcccccccccccccccc    	// #-3689348814741910324
   1316c:	movk	x28, #0xcccd
   13170:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13174:	ldr	x0, [x0, #4008]
   13178:	str	x0, [sp, #120]
   1317c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13180:	ldr	d9, [x0, #2488]
   13184:	b	13248 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>
   13188:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1318c:	ldr	x0, [x0, #4008]
   13190:	mov	x2, x19
   13194:	ldr	x1, [x0]
   13198:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1319c:	add	x0, x0, #0x8f8
   131a0:	bl	1d874 <OnPrint@@Base+0x344>
   131a4:	mov	x23, x19
   131a8:	b	13278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x204>
   131ac:	lsr	x3, x3, #20
   131b0:	ldr	x2, [x20]
   131b4:	ldr	x0, [sp, #120]
   131b8:	ldr	x1, [x0]
   131bc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   131c0:	add	x0, x0, #0x908
   131c4:	bl	1d874 <OnPrint@@Base+0x344>
   131c8:	ldr	x26, [x20, #8]
   131cc:	b	132a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>
   131d0:	mov	x3, x19
   131d4:	mov	x2, x21
   131d8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   131dc:	ldr	x0, [x0, #4008]
   131e0:	ldr	x1, [x0]
   131e4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   131e8:	add	x0, x0, #0x938
   131ec:	bl	1d908 <OnPrint@@Base+0x3d8>
   131f0:	bl	1b944 <__sanitizer_set_report_fd@@Base+0x5594>
   131f4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   131f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   131fc:	ldr	x0, [x0, #4008]
   13200:	mov	x3, x19
   13204:	mov	x2, x22
   13208:	ldr	x1, [x0]
   1320c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13210:	add	x0, x0, #0x968
   13214:	bl	1d908 <OnPrint@@Base+0x3d8>
   13218:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1321c:	ldr	x1, [x0, #2704]
   13220:	mov	w24, w20
   13224:	cbz	x1, 13230 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
   13228:	mov	w0, #0x1                   	// #1
   1322c:	blr	x1
   13230:	cbz	w27, 13248 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>
   13234:	ucvtf	d1, x19
   13238:	ucvtf	d0, d8
   1323c:	fmul	d0, d0, d9
   13240:	fcmpe	d1, d0
   13244:	b.gt	132ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x278>
   13248:	mov	w0, #0x64                  	// #100
   1324c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x5d08>
   13250:	bl	1ad70 <__sanitizer_set_report_fd@@Base+0x49c0>
   13254:	lsr	x19, x0, #20
   13258:	ldr	w0, [x25]
   1325c:	cbz	w0, 132a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>
   13260:	add	x0, x23, x23, lsl #1
   13264:	lsl	x0, x0, #2
   13268:	sub	x0, x0, x23
   1326c:	umulh	x0, x0, x28
   13270:	cmp	x19, x0, lsr #3
   13274:	b.hi	13188 <__sanitizer_install_malloc_and_free_hooks@@Base+0x114>  // b.pmore
   13278:	bl	1e810 <OnPrint@@Base+0x12e0>
   1327c:	mov	x20, x0
   13280:	cbz	x0, 132a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>
   13284:	ldr	x3, [x0, #8]
   13288:	add	x0, x26, x26, lsl #1
   1328c:	lsl	x0, x0, #2
   13290:	sub	x0, x0, x26
   13294:	umulh	x0, x0, x28
   13298:	cmp	x3, x0, lsr #3
   1329c:	b.hi	131ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x138>  // b.pmore
   132a0:	cmp	x21, #0x0
   132a4:	ccmp	x21, x19, #0x2, ne  // ne = any
   132a8:	b.cc	131d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15c>  // b.lo, b.ul, b.last
   132ac:	cbz	x22, 13230 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
   132b0:	cmp	x22, x19
   132b4:	cset	w20, cc  // cc = lo, ul, last
   132b8:	eor	w0, w24, #0x1
   132bc:	ands	w20, w20, w0
   132c0:	b.ne	131f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x184>  // b.any
   132c4:	cmp	w24, #0x0
   132c8:	ccmp	x22, x19, #0x0, ne  // ne = any
   132cc:	b.cc	13230 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>  // b.lo, b.ul, b.last
   132d0:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   132d4:	ldr	x1, [x0, #2704]
   132d8:	mov	w24, w20
   132dc:	cbz	x1, 13230 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
   132e0:	mov	w0, #0x0                   	// #0
   132e4:	blr	x1
   132e8:	b	13230 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bc>
   132ec:	mov	x1, x19
   132f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   132f4:	add	x0, x0, #0x998
   132f8:	bl	1d874 <OnPrint@@Base+0x344>
   132fc:	mov	x1, #0x14                  	// #20
   13300:	mov	x0, #0x5a                  	// #90
   13304:	bl	6d10 <__sanitizer_print_memory_profile@plt>
   13308:	fmov	d8, x19
   1330c:	b	13248 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>
   13310:	stp	x19, x20, [sp, #-80]!
   13314:	stp	x21, x22, [sp, #16]
   13318:	str	x30, [sp, #32]
   1331c:	mov	x20, x0
   13320:	str	xzr, [sp, #56]
   13324:	str	xzr, [sp, #64]
   13328:	str	xzr, [sp, #48]
   1332c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13330:	ldr	x1, [x1, #4000]
   13334:	ldr	x0, [x1]
   13338:	cbz	x0, 13424 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3b0>
   1333c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13340:	ldr	x0, [x0, #4000]
   13344:	ldr	x1, [x0]
   13348:	sub	x0, x1, #0x1
   1334c:	tst	x0, x1
   13350:	b.ne	13438 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c4>  // b.any
   13354:	mov	x22, #0xffff                	// #65535
   13358:	add	x19, x1, x22
   1335c:	neg	x1, x1
   13360:	and	x19, x19, x1
   13364:	mov	w2, #0x0                   	// #0
   13368:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1336c:	add	x1, x1, #0x650
   13370:	mov	x0, x19
   13374:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   13378:	mov	x21, x0
   1337c:	ldr	x2, [sp, #64]
   13380:	ldr	x1, [sp, #48]
   13384:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   13388:	ldr	x1, [sp, #56]
   1338c:	ldr	x0, [sp, #48]
   13390:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   13394:	str	x21, [sp, #48]
   13398:	str	x19, [sp, #56]
   1339c:	ldr	x0, [sp, #64]
   133a0:	cmp	x0, x22
   133a4:	b.hi	133cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x358>  // b.pmore
   133a8:	cmp	x19, x22
   133ac:	b.ls	13448 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3d4>  // b.plast
   133b0:	ldr	x0, [sp, #64]
   133b4:	mov	x2, #0x10000               	// #65536
   133b8:	sub	x2, x2, x0
   133bc:	mov	w1, #0x0                   	// #0
   133c0:	ldr	x3, [sp, #48]
   133c4:	add	x0, x3, x0
   133c8:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   133cc:	mov	x0, #0x10000               	// #65536
   133d0:	str	x0, [sp, #64]
   133d4:	str	xzr, [sp, #72]
   133d8:	ldr	x0, [sp, #48]
   133dc:	strb	wzr, [x0]
   133e0:	mov	x2, x20
   133e4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   133e8:	add	x1, x1, #0xd50
   133ec:	add	x0, sp, #0x30
   133f0:	bl	1d99c <OnPrint@@Base+0x46c>
   133f4:	ldr	x20, [sp, #48]
   133f8:	mov	w21, #0xa                   	// #10
   133fc:	mov	w1, w21
   13400:	mov	x0, x20
   13404:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   13408:	mov	x19, x0
   1340c:	cbz	x0, 134e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x46c>
   13410:	strb	wzr, [x0]
   13414:	mov	x0, x20
   13418:	bl	1af24 <__sanitizer_set_report_fd@@Base+0x4b74>
   1341c:	add	x20, x19, #0x1
   13420:	b	133fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x388>
   13424:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   13428:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1342c:	ldr	x1, [x1, #4000]
   13430:	str	x0, [x1]
   13434:	b	1333c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c8>
   13438:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1343c:	add	x0, x0, #0x638
   13440:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   13444:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   13448:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1344c:	ldr	x0, [x0, #4000]
   13450:	ldr	x0, [x0]
   13454:	cbz	x0, 134bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x448>
   13458:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1345c:	ldr	x0, [x0, #4000]
   13460:	ldr	x0, [x0]
   13464:	sub	x1, x0, #0x1
   13468:	tst	x1, x0
   1346c:	b.ne	134d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x45c>  // b.any
   13470:	add	x19, x0, #0xf, lsl #12
   13474:	add	x19, x19, #0xfff
   13478:	neg	x0, x0
   1347c:	and	x19, x19, x0
   13480:	mov	w2, #0x0                   	// #0
   13484:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   13488:	add	x1, x1, #0x650
   1348c:	mov	x0, x19
   13490:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   13494:	mov	x21, x0
   13498:	ldr	x2, [sp, #64]
   1349c:	ldr	x1, [sp, #48]
   134a0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   134a4:	ldr	x1, [sp, #56]
   134a8:	ldr	x0, [sp, #48]
   134ac:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   134b0:	str	x21, [sp, #48]
   134b4:	str	x19, [sp, #56]
   134b8:	b	133b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x33c>
   134bc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   134c0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   134c4:	ldr	x1, [x1, #4000]
   134c8:	str	x0, [x1]
   134cc:	b	13458 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3e4>
   134d0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   134d4:	add	x0, x0, #0x638
   134d8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   134dc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   134e0:	ldrb	w0, [x20]
   134e4:	cbnz	w0, 13504 <__sanitizer_install_malloc_and_free_hooks@@Base+0x490>
   134e8:	ldr	x1, [sp, #56]
   134ec:	ldr	x0, [sp, #48]
   134f0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   134f4:	ldp	x21, x22, [sp, #16]
   134f8:	ldr	x30, [sp, #32]
   134fc:	ldp	x19, x20, [sp], #80
   13500:	ret
   13504:	mov	x0, x20
   13508:	bl	1af24 <__sanitizer_set_report_fd@@Base+0x4b74>
   1350c:	b	134e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x474>
   13510:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13514:	ldr	x0, [x0, #4040]
   13518:	ldr	x1, [x0, #136]
   1351c:	ldr	x0, [x0, #144]
   13520:	orr	x0, x1, x0
   13524:	cbnz	x0, 13538 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c4>
   13528:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1352c:	ldr	x0, [x0, #4040]
   13530:	ldrb	w0, [x0, #152]
   13534:	cbz	w0, 13560 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4ec>
   13538:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1353c:	ldr	x0, [x0, #3880]
   13540:	cbz	x0, 13560 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4ec>
   13544:	str	x30, [sp, #-16]!
   13548:	mov	x1, #0x0                   	// #0
   1354c:	adrp	x0, 13000 <__sanitizer_report_error_summary@@Base+0x1a0>
   13550:	add	x0, x0, #0x120
   13554:	bl	19fa8 <__sanitizer_set_report_fd@@Base+0x3bf8>
   13558:	ldr	x30, [sp], #16
   1355c:	ret
   13560:	ret
   13564:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13568:	str	x0, [x1, #2712]
   1356c:	ret

0000000000013570 <__sanitizer_sandbox_on_notify@@Base>:
   13570:	str	x30, [sp, #-16]!
   13574:	bl	1c438 <__sanitizer_set_report_fd@@Base+0x6088>
   13578:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1357c:	ldr	x0, [x0, #2712]
   13580:	cbz	x0, 13588 <__sanitizer_sandbox_on_notify@@Base+0x18>
   13584:	blr	x0
   13588:	ldr	x30, [sp], #16
   1358c:	ret
   13590:	stp	x19, x20, [sp, #-64]!
   13594:	stp	x21, x22, [sp, #16]
   13598:	stp	x23, x30, [sp, #32]
   1359c:	mov	x20, x0
   135a0:	mov	x0, x1
   135a4:	mov	x22, x2
   135a8:	mov	x21, x3
   135ac:	bl	126e0 <__sancov_default_options@@Base+0x235c>
   135b0:	cbz	x0, 1366c <__sanitizer_sandbox_on_notify@@Base+0xfc>
   135b4:	mov	x19, x0
   135b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   135bc:	ldr	x0, [x0, #4040]
   135c0:	ldr	x23, [x0, #168]
   135c4:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   135c8:	adrp	x6, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   135cc:	add	x6, x6, #0xa20
   135d0:	mov	x5, x0
   135d4:	mov	x4, x19
   135d8:	mov	x3, x23
   135dc:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   135e0:	add	x2, x2, #0xa28
   135e4:	mov	x1, #0x1000                	// #4096
   135e8:	mov	x0, x20
   135ec:	bl	1d534 <OnPrint@@Base+0x4>
   135f0:	add	x2, sp, #0x3c
   135f4:	mov	w1, #0x1                   	// #1
   135f8:	mov	x0, x20
   135fc:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x51b0>
   13600:	mov	w19, w0
   13604:	cmn	w0, #0x1
   13608:	b.eq	1368c <__sanitizer_sandbox_on_notify@@Base+0x11c>  // b.none
   1360c:	mov	x4, #0x0                   	// #0
   13610:	mov	x3, #0x0                   	// #0
   13614:	mov	x2, #0x8                   	// #8
   13618:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1361c:	add	x1, x1, #0xb08
   13620:	mov	w0, w19
   13624:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x5264>
   13628:	mov	x4, #0x0                   	// #0
   1362c:	mov	x3, #0x0                   	// #0
   13630:	lsl	x2, x21, #3
   13634:	mov	x1, x22
   13638:	mov	w0, w19
   1363c:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x5264>
   13640:	mov	w0, w19
   13644:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   13648:	mov	x2, x21
   1364c:	mov	x1, x20
   13650:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13654:	add	x0, x0, #0xa78
   13658:	bl	1d874 <OnPrint@@Base+0x344>
   1365c:	ldp	x21, x22, [sp, #16]
   13660:	ldp	x23, x30, [sp, #32]
   13664:	ldp	x19, x20, [sp], #64
   13668:	ret
   1366c:	mov	x4, #0x0                   	// #0
   13670:	mov	x3, #0x0                   	// #0
   13674:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13678:	add	x2, x2, #0x9c0
   1367c:	mov	w1, #0x28                  	// #40
   13680:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13684:	add	x0, x0, #0x9d0
   13688:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1368c:	ldr	w2, [sp, #60]
   13690:	mov	x1, x20
   13694:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13698:	add	x0, x0, #0xa38
   1369c:	bl	1d908 <OnPrint@@Base+0x3d8>
   136a0:	b	1360c <__sanitizer_sandbox_on_notify@@Base+0x9c>
   136a4:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   136a8:	ldrb	w1, [x1, #2720]
   136ac:	cbz	w1, 136b4 <__sanitizer_sandbox_on_notify@@Base+0x144>
   136b0:	ret
   136b4:	stp	x19, x30, [sp, #-16]!
   136b8:	and	w0, w0, #0xff
   136bc:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   136c0:	strb	w0, [x1, #2720]
   136c4:	adrp	x19, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   136c8:	ldr	x19, [x19, #3784]
   136cc:	mov	x0, x19
   136d0:	bl	1c110 <__sanitizer_set_report_fd@@Base+0x5d60>
   136d4:	mov	x0, x19
   136d8:	bl	263b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6104>
   136dc:	ldp	x19, x30, [sp], #16
   136e0:	ret

00000000000136e4 <__sanitizer_cov_trace_pc_guard@@Base>:
   136e4:	ldr	w1, [x0]
   136e8:	cbnz	w1, 136f0 <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   136ec:	ret
   136f0:	ldr	w3, [x0]
   136f4:	cbz	w3, 136ec <__sanitizer_cov_trace_pc_guard@@Base+0x8>
   136f8:	str	x30, [sp, #-16]!
   136fc:	sub	w3, w3, #0x1
   13700:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13704:	ldr	x4, [x0, #2752]
   13708:	cmp	x3, x4
   1370c:	b.cs	13730 <__sanitizer_cov_trace_pc_guard@@Base+0x4c>  // b.hs, b.nlast
   13710:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13714:	ldr	x0, [x0, #2736]
   13718:	ldr	x1, [x0, x3, lsl #3]
   1371c:	cbnz	x1, 13728 <__sanitizer_cov_trace_pc_guard@@Base+0x44>
   13720:	sub	x30, x30, #0x1
   13724:	str	x30, [x0, x3, lsl #3]
   13728:	ldr	x30, [sp], #16
   1372c:	ret
   13730:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   13734:	add	x2, x2, #0x508
   13738:	mov	w1, #0x1b6                 	// #438
   1373c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   13740:	add	x0, x0, #0x520
   13744:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>

0000000000013748 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   13748:	cmp	x0, x1
   1374c:	b.eq	1393c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1f4>  // b.none
   13750:	stp	x19, x20, [sp, #-48]!
   13754:	str	x30, [sp, #32]
   13758:	mov	x19, x0
   1375c:	mov	x20, x1
   13760:	ldr	w0, [x0]
   13764:	cbz	w0, 13774 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2c>
   13768:	ldr	x30, [sp, #32]
   1376c:	ldp	x19, x20, [sp], #48
   13770:	ret
   13774:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13778:	ldrb	w0, [x0, #2728]
   1377c:	cbz	w0, 13814 <__sanitizer_cov_trace_pc_guard_init@@Base+0xcc>
   13780:	mov	x2, x19
   13784:	cmp	x19, x20
   13788:	b.eq	1386c <__sanitizer_cov_trace_pc_guard_init@@Base+0x124>  // b.none
   1378c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13790:	ldr	x1, [x0, #2752]
   13794:	mov	w0, w1
   13798:	b.cs	137c0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x78>  // b.hs, b.nlast
   1379c:	add	w0, w0, #0x1
   137a0:	str	w0, [x19], #4
   137a4:	cmp	x20, x19
   137a8:	b.hi	1379c <__sanitizer_cov_trace_pc_guard_init@@Base+0x54>  // b.pmore
   137ac:	add	w1, w1, #0x1
   137b0:	sub	x20, x20, #0x1
   137b4:	sub	x20, x20, x2
   137b8:	lsr	x20, x20, #2
   137bc:	add	w0, w1, w20
   137c0:	mov	w19, w0
   137c4:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   137c8:	ldr	x1, [x1, #2752]
   137cc:	cmp	x1, w0, uxtw
   137d0:	b.cs	13808 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc0>  // b.hs, b.nlast
   137d4:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   137d8:	ldr	x0, [x0, #2744]
   137dc:	cmp	x19, x0, lsr #3
   137e0:	b.hi	13890 <__sanitizer_cov_trace_pc_guard_init@@Base+0x148>  // b.pmore
   137e4:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   137e8:	add	x1, x1, #0xaa0
   137ec:	ldr	x0, [x1, #32]
   137f0:	sub	x2, x19, x0
   137f4:	ldr	x3, [x1, #16]
   137f8:	lsl	x2, x2, #3
   137fc:	mov	w1, #0x0                   	// #0
   13800:	add	x0, x3, x0, lsl #3
   13804:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   13808:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1380c:	str	x19, [x0, #2752]
   13810:	b	13768 <__sanitizer_cov_trace_pc_guard_init@@Base+0x20>
   13814:	stp	x21, x22, [sp, #16]
   13818:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1381c:	add	x0, x0, #0xaa0
   13820:	add	x21, x0, #0x8
   13824:	mov	w1, #0x1                   	// #1
   13828:	strb	w1, [x0, #8]
   1382c:	bl	103a0 <__sancov_default_options@@Base+0x1c>
   13830:	str	xzr, [x21, #16]
   13834:	str	xzr, [x21, #24]
   13838:	str	xzr, [x21, #8]
   1383c:	ldr	w0, [x19]
   13840:	cbnz	w0, 1384c <__sanitizer_cov_trace_pc_guard_init@@Base+0x104>
   13844:	ldp	x21, x22, [sp, #16]
   13848:	b	13780 <__sanitizer_cov_trace_pc_guard_init@@Base+0x38>
   1384c:	mov	x4, #0x0                   	// #0
   13850:	mov	x3, #0x0                   	// #0
   13854:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13858:	add	x2, x2, #0xaa0
   1385c:	mov	w1, #0x77                  	// #119
   13860:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13864:	add	x0, x0, #0x9d0
   13868:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1386c:	stp	x21, x22, [sp, #16]
   13870:	mov	x4, x20
   13874:	mov	x3, x19
   13878:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1387c:	add	x2, x2, #0xab8
   13880:	mov	w1, #0x78                  	// #120
   13884:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13888:	add	x0, x0, #0x9d0
   1388c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   13890:	stp	x21, x22, [sp, #16]
   13894:	lsl	x20, x19, #3
   13898:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1389c:	ldr	x0, [x0, #4000]
   138a0:	ldr	x0, [x0]
   138a4:	cbz	x0, 13918 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d0>
   138a8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   138ac:	ldr	x0, [x0, #4000]
   138b0:	ldr	x0, [x0]
   138b4:	sub	x21, x0, #0x1
   138b8:	tst	x0, x21
   138bc:	b.ne	1392c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1e4>  // b.any
   138c0:	add	x20, x20, x21
   138c4:	neg	x21, x0
   138c8:	and	x21, x20, x21
   138cc:	mov	w2, #0x0                   	// #0
   138d0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   138d4:	add	x1, x1, #0x650
   138d8:	mov	x0, x21
   138dc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   138e0:	mov	x22, x0
   138e4:	adrp	x20, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   138e8:	add	x20, x20, #0xaa0
   138ec:	ldr	x2, [x20, #32]
   138f0:	lsl	x2, x2, #3
   138f4:	ldr	x1, [x20, #16]
   138f8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   138fc:	ldr	x1, [x20, #24]
   13900:	ldr	x0, [x20, #16]
   13904:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   13908:	str	x22, [x20, #16]
   1390c:	str	x21, [x20, #24]
   13910:	ldp	x21, x22, [sp, #16]
   13914:	b	137e4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9c>
   13918:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1391c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13920:	ldr	x1, [x1, #4000]
   13924:	str	x0, [x1]
   13928:	b	138a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x160>
   1392c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   13930:	add	x0, x0, #0x638
   13934:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   13938:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1393c:	ret

0000000000013940 <__sanitizer_cov_reset@@Base>:
   13940:	str	x30, [sp, #-16]!
   13944:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13948:	ldr	x2, [x0, #2752]
   1394c:	cbz	x2, 1396c <__sanitizer_cov_reset@@Base+0x2c>
   13950:	lsl	x2, x2, #3
   13954:	mov	w1, #0x0                   	// #0
   13958:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1395c:	ldr	x0, [x0, #2736]
   13960:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   13964:	ldr	x30, [sp], #16
   13968:	ret
   1396c:	mov	x4, #0x0                   	// #0
   13970:	mov	x3, #0x0                   	// #0
   13974:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   13978:	add	x2, x2, #0x508
   1397c:	mov	w1, #0x1b6                 	// #438
   13980:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   13984:	add	x0, x0, #0x520
   13988:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>

000000000001398c <__sanitizer_cov_trace_cmp@@Base>:
   1398c:	ret

0000000000013990 <__sanitizer_cov_trace_cmp1@@Base>:
   13990:	ret

0000000000013994 <__sanitizer_cov_trace_cmp2@@Base>:
   13994:	ret

0000000000013998 <__sanitizer_cov_trace_cmp4@@Base>:
   13998:	ret

000000000001399c <__sanitizer_cov_trace_cmp8@@Base>:
   1399c:	ret

00000000000139a0 <__sanitizer_cov_trace_const_cmp1@@Base>:
   139a0:	ret

00000000000139a4 <__sanitizer_cov_trace_const_cmp2@@Base>:
   139a4:	ret

00000000000139a8 <__sanitizer_cov_trace_const_cmp4@@Base>:
   139a8:	ret

00000000000139ac <__sanitizer_cov_trace_const_cmp8@@Base>:
   139ac:	ret

00000000000139b0 <__sanitizer_cov_trace_switch@@Base>:
   139b0:	ret

00000000000139b4 <__sanitizer_cov_trace_div4@@Base>:
   139b4:	ret

00000000000139b8 <__sanitizer_cov_trace_div8@@Base>:
   139b8:	ret

00000000000139bc <__sanitizer_cov_trace_gep@@Base>:
   139bc:	ret

00000000000139c0 <__sanitizer_cov_trace_pc_indir@@Base>:
   139c0:	ret

00000000000139c4 <__sanitizer_cov_8bit_counters_init@@Base>:
   139c4:	ret

00000000000139c8 <__sanitizer_cov_pcs_init@@Base>:
   139c8:	ret

00000000000139cc <__sanitizer_dump_coverage@@Base>:
   139cc:	cbnz	x1, 139d4 <__sanitizer_dump_coverage@@Base+0x8>
   139d0:	ret
   139d4:	stp	x19, x20, [sp, #-128]!
   139d8:	stp	x21, x22, [sp, #16]
   139dc:	stp	x23, x24, [sp, #32]
   139e0:	stp	x25, x26, [sp, #48]
   139e4:	stp	x27, x28, [sp, #64]
   139e8:	str	x30, [sp, #80]
   139ec:	mov	x22, x0
   139f0:	mov	x20, x1
   139f4:	mov	x2, #0x0                   	// #0
   139f8:	mov	x1, #0x0                   	// #0
   139fc:	mov	x0, #0x1000                	// #4096
   13a00:	bl	10800 <__sancov_default_options@@Base+0x47c>
   13a04:	str	x0, [sp, #112]
   13a08:	mov	x2, #0x0                   	// #0
   13a0c:	mov	x1, #0x0                   	// #0
   13a10:	mov	x0, #0x1000                	// #4096
   13a14:	bl	10800 <__sancov_default_options@@Base+0x47c>
   13a18:	mov	x26, x0
   13a1c:	lsl	x19, x20, #3
   13a20:	mov	x2, #0x0                   	// #0
   13a24:	mov	x1, #0x0                   	// #0
   13a28:	mov	x0, x19
   13a2c:	bl	10800 <__sancov_default_options@@Base+0x47c>
   13a30:	mov	x21, x0
   13a34:	mov	x2, x19
   13a38:	mov	x1, x22
   13a3c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   13a40:	mov	w2, #0x0                   	// #0
   13a44:	mov	x1, x20
   13a48:	mov	x0, x21
   13a4c:	bl	cd10 <__sanitizer_get_allocated_size@@Base+0x1438>
   13a50:	str	xzr, [sp, #104]
   13a54:	mov	w25, #0x0                   	// #0
   13a58:	mov	x28, #0x0                   	// #0
   13a5c:	mov	x19, #0x0                   	// #0
   13a60:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13a64:	add	x0, x0, #0xad0
   13a68:	str	x0, [sp, #120]
   13a6c:	b	13aac <__sanitizer_dump_coverage@@Base+0xe0>
   13a70:	mov	x1, x22
   13a74:	ldr	x0, [sp, #120]
   13a78:	bl	1d874 <OnPrint@@Base+0x344>
   13a7c:	b	13aa0 <__sanitizer_dump_coverage@@Base+0xd4>
   13a80:	ldr	x0, [sp, #104]
   13a84:	sub	x3, x19, x0
   13a88:	add	x2, x21, x0, lsl #3
   13a8c:	mov	x1, x26
   13a90:	ldr	x0, [sp, #112]
   13a94:	bl	13590 <__sanitizer_sandbox_on_notify@@Base+0x20>
   13a98:	b	13af0 <__sanitizer_dump_coverage@@Base+0x124>
   13a9c:	mov	w25, #0x1                   	// #1
   13aa0:	add	x19, x19, #0x1
   13aa4:	cmp	x20, x19
   13aa8:	b.eq	13b14 <__sanitizer_dump_coverage@@Base+0x148>  // b.none
   13aac:	add	x27, x21, x19, lsl #3
   13ab0:	ldr	x22, [x21, x19, lsl #3]
   13ab4:	cbz	x22, 13aa0 <__sanitizer_dump_coverage@@Base+0xd4>
   13ab8:	mov	x3, x27
   13abc:	mov	x2, #0x0                   	// #0
   13ac0:	mov	x1, #0x0                   	// #0
   13ac4:	mov	x0, x22
   13ac8:	bl	6740 <__sanitizer_get_module_and_offset_for_pc@plt>
   13acc:	cbz	w0, 13a70 <__sanitizer_dump_coverage@@Base+0xa4>
   13ad0:	ldr	x24, [x21, x19, lsl #3]
   13ad4:	sub	x24, x22, x24
   13ad8:	cmp	x24, x28
   13adc:	cset	w23, ne  // ne = any
   13ae0:	eor	w0, w25, #0x1
   13ae4:	orr	w23, w23, w0
   13ae8:	cbz	w23, 13a9c <__sanitizer_dump_coverage@@Base+0xd0>
   13aec:	cbnz	w25, 13a80 <__sanitizer_dump_coverage@@Base+0xb4>
   13af0:	mov	x3, x27
   13af4:	mov	x2, #0x1000                	// #4096
   13af8:	mov	x1, x26
   13afc:	mov	x0, x22
   13b00:	bl	6740 <__sanitizer_get_module_and_offset_for_pc@plt>
   13b04:	str	x19, [sp, #104]
   13b08:	mov	x28, x24
   13b0c:	mov	w25, w23
   13b10:	b	13aa0 <__sanitizer_dump_coverage@@Base+0xd4>
   13b14:	cbnz	w25, 13b58 <__sanitizer_dump_coverage@@Base+0x18c>
   13b18:	mov	x1, #0x0                   	// #0
   13b1c:	ldr	x0, [sp, #112]
   13b20:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   13b24:	mov	x1, #0x0                   	// #0
   13b28:	mov	x0, x26
   13b2c:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   13b30:	mov	x1, #0x0                   	// #0
   13b34:	mov	x0, x21
   13b38:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   13b3c:	ldp	x21, x22, [sp, #16]
   13b40:	ldp	x23, x24, [sp, #32]
   13b44:	ldp	x25, x26, [sp, #48]
   13b48:	ldp	x27, x28, [sp, #64]
   13b4c:	ldr	x30, [sp, #80]
   13b50:	ldp	x19, x20, [sp], #128
   13b54:	ret
   13b58:	ldr	x0, [sp, #104]
   13b5c:	sub	x3, x19, x0
   13b60:	add	x2, x21, x0, lsl #3
   13b64:	mov	x1, x26
   13b68:	ldr	x0, [sp, #112]
   13b6c:	bl	13590 <__sanitizer_sandbox_on_notify@@Base+0x20>
   13b70:	b	13b18 <__sanitizer_dump_coverage@@Base+0x14c>

0000000000013b74 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   13b74:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13b78:	ldrb	w0, [x0, #2728]
   13b7c:	cbz	w0, 13b90 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x1c>
   13b80:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13b84:	ldr	x0, [x0, #4040]
   13b88:	ldrb	w0, [x0, #161]
   13b8c:	cbnz	w0, 13b94 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x20>
   13b90:	ret
   13b94:	str	x30, [sp, #-16]!
   13b98:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13b9c:	add	x0, x0, #0xaa0
   13ba0:	ldr	x1, [x0, #32]
   13ba4:	add	x0, x0, #0x8
   13ba8:	ldr	x0, [x0, #8]
   13bac:	bl	6960 <__sanitizer_dump_coverage@plt>
   13bb0:	ldr	x30, [sp], #16
   13bb4:	ret

0000000000013bb8 <__sanitizer_cov_dump@@Base>:
   13bb8:	str	x30, [sp, #-16]!
   13bbc:	bl	6b10 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   13bc0:	ldr	x30, [sp], #16
   13bc4:	ret
   13bc8:	mov	x0, #0x0                   	// #0
   13bcc:	ret
   13bd0:	ret
   13bd4:	stp	x19, x30, [sp, #-16]!
   13bd8:	mov	x0, x1
   13bdc:	mov	x19, x2
   13be0:	str	xzr, [x2]
   13be4:	ldr	x1, [x1]
   13be8:	ldr	x1, [x1]
   13bec:	blr	x1
   13bf0:	str	w0, [x19, #8]
   13bf4:	ldp	x19, x30, [sp], #16
   13bf8:	ret
   13bfc:	ldr	x0, [x1, #16]
   13c00:	ldrb	w2, [x0, #2224]
   13c04:	cbz	w2, 13c18 <__sanitizer_cov_dump@@Base+0x60>
   13c08:	strb	wzr, [x0, #2224]
   13c0c:	ldr	x0, [x1, #16]
   13c10:	add	x0, x0, #0x628
   13c14:	ret
   13c18:	mov	x0, #0x0                   	// #0
   13c1c:	b	13c14 <__sanitizer_cov_dump@@Base+0x5c>
   13c20:	stp	x19, x30, [sp, #-16]!
   13c24:	mov	x19, x1
   13c28:	mov	x2, #0x0                   	// #0
   13c2c:	mov	x1, #0x0                   	// #0
   13c30:	mov	x0, #0x8b8                 	// #2232
   13c34:	bl	10800 <__sancov_default_options@@Base+0x47c>
   13c38:	mov	x3, x0
   13c3c:	str	x19, [x3], #8
   13c40:	str	xzr, [x0, #8]
   13c44:	str	xzr, [x3, #520]
   13c48:	str	xzr, [x3, #1040]
   13c4c:	str	xzr, [x3, #1560]
   13c50:	strb	wzr, [x0, #2224]
   13c54:	ldp	x19, x30, [sp], #16
   13c58:	ret
   13c5c:	str	x30, [sp, #-16]!
   13c60:	mov	x0, x1
   13c64:	mov	x1, #0x0                   	// #0
   13c68:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   13c6c:	ldr	x30, [sp], #16
   13c70:	ret
   13c74:	ldr	x1, [x1, #16]
   13c78:	ldr	x2, [x2]
   13c7c:	and	x0, x2, #0xfffffffffffff000
   13c80:	ldr	x3, [x1, #528]
   13c84:	cmp	x3, x0
   13c88:	b.eq	13c90 <__sanitizer_cov_dump@@Base+0xd8>  // b.none
   13c8c:	ret
   13c90:	and	x4, x2, #0xfff
   13c94:	ldr	x6, [x1, #1048]
   13c98:	cbz	x6, 13cc0 <__sanitizer_cov_dump@@Base+0x108>
   13c9c:	sub	x7, x6, #0x1
   13ca0:	mov	x0, x7
   13ca4:	tbnz	x7, #63, 13cc0 <__sanitizer_cov_dump@@Base+0x108>
   13ca8:	add	x5, x1, #0x218
   13cac:	ldr	x3, [x5, x0, lsl #3]
   13cb0:	cmp	x4, x3
   13cb4:	b.eq	13d34 <__sanitizer_cov_dump@@Base+0x17c>  // b.none
   13cb8:	subs	x0, x0, #0x1
   13cbc:	b.pl	13cac <__sanitizer_cov_dump@@Base+0xf4>  // b.nfrst
   13cc0:	lsr	x3, x4, #6
   13cc4:	ldr	x6, [x1, #8]
   13cc8:	mov	x0, #0x1                   	// #1
   13ccc:	lsl	x0, x0, x3
   13cd0:	tst	x6, x0
   13cd4:	b.eq	13c8c <__sanitizer_cov_dump@@Base+0xd4>  // b.none
   13cd8:	add	x3, x1, x3, lsl #3
   13cdc:	ldr	x7, [x3, #16]
   13ce0:	mov	x5, #0x1                   	// #1
   13ce4:	lsl	x2, x5, x2
   13ce8:	bic	x2, x7, x2
   13cec:	str	x2, [x3, #16]
   13cf0:	cbz	x2, 13d54 <__sanitizer_cov_dump@@Base+0x19c>
   13cf4:	cmp	x7, x2
   13cf8:	b.eq	13c8c <__sanitizer_cov_dump@@Base+0xd4>  // b.none
   13cfc:	ldr	x7, [x1, #1568]
   13d00:	cbz	x7, 13c8c <__sanitizer_cov_dump@@Base+0xd4>
   13d04:	sub	x8, x7, #0x1
   13d08:	mov	x0, x8
   13d0c:	tbnz	x8, #63, 13c8c <__sanitizer_cov_dump@@Base+0xd4>
   13d10:	add	x5, x1, #0x420
   13d14:	mov	w6, w4
   13d18:	lsl	x2, x0, #3
   13d1c:	ldr	w2, [x5, x2]
   13d20:	cmp	w2, w4
   13d24:	b.eq	13d60 <__sanitizer_cov_dump@@Base+0x1a8>  // b.none
   13d28:	subs	x0, x0, #0x1
   13d2c:	b.pl	13d14 <__sanitizer_cov_dump@@Base+0x15c>  // b.nfrst
   13d30:	b	13c8c <__sanitizer_cov_dump@@Base+0xd4>
   13d34:	add	x2, x1, #0x8
   13d38:	str	x7, [x1, #1048]
   13d3c:	add	x1, x1, x6, lsl #3
   13d40:	ldr	x4, [x1, #528]
   13d44:	add	x0, x0, #0x42
   13d48:	str	x4, [x2, x0, lsl #3]
   13d4c:	str	x3, [x1, #528]
   13d50:	b	13c8c <__sanitizer_cov_dump@@Base+0xd4>
   13d54:	bic	x0, x6, x0
   13d58:	str	x0, [x1, #8]
   13d5c:	b	13cf4 <__sanitizer_cov_dump@@Base+0x13c>
   13d60:	add	x1, x1, #0x8
   13d64:	add	x2, x7, #0x82
   13d68:	lsl	x2, x2, #3
   13d6c:	add	x4, x1, x2
   13d70:	add	x3, x1, x0, lsl #3
   13d74:	ldr	w3, [x3, #1052]
   13d78:	add	x0, x1, x0, lsl #3
   13d7c:	add	x8, x1, x8, lsl #3
   13d80:	ldr	x5, [x8, #1048]
   13d84:	str	x5, [x0, #1048]
   13d88:	str	w6, [x1, x2]
   13d8c:	str	w3, [x4, #4]
   13d90:	ldr	x0, [x1, #1560]
   13d94:	sub	x0, x0, #0x1
   13d98:	str	x0, [x1, #1560]
   13d9c:	b	13c8c <__sanitizer_cov_dump@@Base+0xd4>
   13da0:	ldr	x1, [x2]
   13da4:	cbnz	x1, 13dac <__sanitizer_cov_dump@@Base+0x1f4>
   13da8:	ret
   13dac:	stp	x19, x20, [sp, #-32]!
   13db0:	str	x30, [sp, #16]
   13db4:	mov	x20, x0
   13db8:	mov	x19, x2
   13dbc:	add	x0, x0, #0x8
   13dc0:	mov	w2, #0x1                   	// #1
   13dc4:	ldxrb	w1, [x0]
   13dc8:	stxrb	w3, w2, [x0]
   13dcc:	cbnz	w3, 13dc4 <__sanitizer_cov_dump@@Base+0x20c>
   13dd0:	dmb	ish
   13dd4:	and	w1, w1, #0xff
   13dd8:	cbnz	w1, 13e0c <__sanitizer_cov_dump@@Base+0x254>
   13ddc:	ldr	x3, [x19]
   13de0:	cbz	x3, 13df4 <__sanitizer_cov_dump@@Base+0x23c>
   13de4:	and	x0, x3, #0xfffffffffffff000
   13de8:	ldr	x1, [x20, #16]
   13dec:	cmp	x0, x1
   13df0:	b.eq	13e14 <__sanitizer_cov_dump@@Base+0x25c>  // b.none
   13df4:	str	xzr, [x19]
   13df8:	dmb	ish
   13dfc:	strb	wzr, [x20, #8]
   13e00:	ldr	x30, [sp, #16]
   13e04:	ldp	x19, x20, [sp], #32
   13e08:	ret
   13e0c:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   13e10:	b	13ddc <__sanitizer_cov_dump@@Base+0x224>
   13e14:	cmp	x3, #0xfff
   13e18:	b.ls	13e78 <__sanitizer_cov_dump@@Base+0x2c0>  // b.plast
   13e1c:	and	x4, x3, #0xfff
   13e20:	ubfx	x1, x3, #6, #6
   13e24:	and	x3, x3, #0x3f
   13e28:	mov	x0, #0x1                   	// #1
   13e2c:	lsl	x0, x0, x1
   13e30:	ldr	x2, [x20, #24]
   13e34:	tst	x0, x2
   13e38:	b.ne	13e94 <__sanitizer_cov_dump@@Base+0x2dc>  // b.any
   13e3c:	ldr	x2, [x20, #544]
   13e40:	tst	x0, x2
   13e44:	b.eq	13ecc <__sanitizer_cov_dump@@Base+0x314>  // b.none
   13e48:	add	x1, x20, x1, lsl #3
   13e4c:	ldr	x2, [x1, #552]
   13e50:	mov	x0, #0x1                   	// #1
   13e54:	lsl	x3, x0, x3
   13e58:	orr	x0, x3, x2
   13e5c:	str	x0, [x1, #552]
   13e60:	cmp	x2, x0
   13e64:	b.eq	13ee0 <__sanitizer_cov_dump@@Base+0x328>  // b.none
   13e68:	add	x0, x20, #0x630
   13e6c:	add	x4, x4, x4, lsl #6
   13e70:	str	xzr, [x0, x4, lsl #3]
   13e74:	b	13df4 <__sanitizer_cov_dump@@Base+0x23c>
   13e78:	mov	x4, #0x1000                	// #4096
   13e7c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13e80:	add	x2, x2, #0xb10
   13e84:	mov	w1, #0x172                 	// #370
   13e88:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13e8c:	add	x0, x0, #0xb28
   13e90:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   13e94:	add	x5, x20, x1, lsl #3
   13e98:	mov	x2, #0x1                   	// #1
   13e9c:	lsl	x2, x2, x3
   13ea0:	ldr	x5, [x5, #32]
   13ea4:	tst	x2, x5
   13ea8:	b.eq	13e3c <__sanitizer_cov_dump@@Base+0x284>  // b.none
   13eac:	mov	x4, #0x0                   	// #0
   13eb0:	mov	x3, #0x0                   	// #0
   13eb4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13eb8:	add	x2, x2, #0xb70
   13ebc:	mov	w1, #0xc0                  	// #192
   13ec0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13ec4:	add	x0, x0, #0xb28
   13ec8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   13ecc:	orr	x0, x0, x2
   13ed0:	str	x0, [x20, #544]
   13ed4:	add	x0, x20, x1, lsl #3
   13ed8:	str	xzr, [x0, #552]
   13edc:	b	13e48 <__sanitizer_cov_dump@@Base+0x290>
   13ee0:	mov	x4, #0x0                   	// #0
   13ee4:	mov	x3, #0x0                   	// #0
   13ee8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13eec:	add	x2, x2, #0xba0
   13ef0:	mov	w1, #0xc1                  	// #193
   13ef4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13ef8:	add	x0, x0, #0xb28
   13efc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   13f00:	adrp	x2, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   13f04:	add	x2, x2, #0xc10
   13f08:	str	x2, [x0]
   13f0c:	strb	wzr, [x0, #8]
   13f10:	add	x2, x0, #0x410, lsl #12
   13f14:	ldrb	w1, [x1]
   13f18:	strb	w1, [x2, #2632]
   13f1c:	str	xzr, [x0, #16]
   13f20:	str	xzr, [x0, #24]
   13f24:	str	xzr, [x0, #544]
   13f28:	add	x1, x0, #0x630
   13f2c:	add	x2, x0, #0x208, lsl #12
   13f30:	add	x2, x2, #0x630
   13f34:	str	xzr, [x1]
   13f38:	add	x1, x1, #0x208
   13f3c:	cmp	x2, x1
   13f40:	b.ne	13f34 <__sanitizer_cov_dump@@Base+0x37c>  // b.any
   13f44:	add	x0, x0, #0x10
   13f48:	add	x0, x0, #0x410, lsl #12
   13f4c:	str	xzr, [x0, #2608]
   13f50:	ret
   13f54:	stp	x19, x20, [sp, #-32]!
   13f58:	str	x30, [sp, #16]
   13f5c:	mov	x20, x0
   13f60:	mov	w2, #0x0                   	// #0
   13f64:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   13f68:	add	x1, x1, #0xbc8
   13f6c:	mov	x0, #0xa50                 	// #2640
   13f70:	movk	x0, #0x41, lsl #16
   13f74:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   13f78:	mov	x19, x0
   13f7c:	mov	x1, x20
   13f80:	bl	13f00 <__sanitizer_cov_dump@@Base+0x348>
   13f84:	mov	x0, x19
   13f88:	ldr	x30, [sp, #16]
   13f8c:	ldp	x19, x20, [sp], #32
   13f90:	ret
   13f94:	ldr	x3, [x2]
   13f98:	cbz	x3, 13fac <__sanitizer_cov_dump@@Base+0x3f4>
   13f9c:	and	x3, x3, #0xfffffffffffff000
   13fa0:	ldr	x4, [x0, #16]
   13fa4:	cmp	x3, x4
   13fa8:	b.eq	1443c <__sanitizer_cov_dump@@Base+0x884>  // b.none
   13fac:	stp	x19, x30, [sp, #-16]!
   13fb0:	ldr	x8, [x0, #24]
   13fb4:	cbnz	x8, 1407c <__sanitizer_cov_dump@@Base+0x4c4>
   13fb8:	ldr	x3, [x0, #544]
   13fbc:	cbnz	x3, 14400 <__sanitizer_cov_dump@@Base+0x848>
   13fc0:	ldr	x4, [x0, #16]
   13fc4:	add	x4, x4, #0x1, lsl #12
   13fc8:	str	x4, [x0, #16]
   13fcc:	str	xzr, [x0, #544]
   13fd0:	add	x3, x0, #0x20
   13fd4:	add	x6, x0, #0x220
   13fd8:	mov	x5, #0xffffffffffffffff    	// #-1
   13fdc:	str	x5, [x3], #8
   13fe0:	cmp	x3, x6
   13fe4:	b.ne	13fdc <__sanitizer_cov_dump@@Base+0x424>  // b.any
   13fe8:	add	x3, x0, #0x630
   13fec:	add	x5, x0, #0x208, lsl #12
   13ff0:	add	x5, x5, #0x630
   13ff4:	str	xzr, [x3]
   13ff8:	add	x3, x3, #0x208
   13ffc:	cmp	x3, x5
   14000:	b.ne	13ff4 <__sanitizer_cov_dump@@Base+0x43c>  // b.any
   14004:	add	x3, x0, #0x10
   14008:	add	x3, x3, #0x410, lsl #12
   1400c:	str	xzr, [x3, #2608]
   14010:	mov	x3, #0xfffffffffffffffe    	// #-2
   14014:	str	x3, [x0, #24]
   14018:	ldr	x3, [x0, #32]
   1401c:	cbz	x3, 143b8 <__sanitizer_cov_dump@@Base+0x800>
   14020:	rbit	x6, x3
   14024:	clz	x6, x6
   14028:	mov	x5, #0x1                   	// #1
   1402c:	lsl	x5, x5, x6
   14030:	bic	x3, x3, x5
   14034:	str	x3, [x0, #32]
   14038:	cbnz	x3, 143d4 <__sanitizer_cov_dump@@Base+0x81c>
   1403c:	add	x3, x0, #0x10
   14040:	add	x5, x6, #0x41, lsl #12
   14044:	add	x5, x5, #0x146
   14048:	str	x2, [x3, x5, lsl #3]
   1404c:	add	x4, x4, x6
   14050:	str	x4, [x2]
   14054:	ldr	x2, [x0, #16]
   14058:	ldr	x0, [x1, #528]
   1405c:	cmp	x2, x0
   14060:	b.eq	14074 <__sanitizer_cov_dump@@Base+0x4bc>  // b.none
   14064:	str	xzr, [x1, #8]
   14068:	str	x2, [x1, #528]
   1406c:	str	xzr, [x1, #1048]
   14070:	str	xzr, [x1, #1568]
   14074:	ldp	x19, x30, [sp], #16
   14078:	ret
   1407c:	rbit	x3, x8
   14080:	clz	x3, x3
   14084:	mov	x6, #0x1                   	// #1
   14088:	lsl	x6, x6, x3
   1408c:	bic	x4, x8, x6
   14090:	str	x4, [x0, #24]
   14094:	add	x9, x0, x3, lsl #3
   14098:	ldr	x7, [x9, #32]
   1409c:	cbz	x7, 140dc <__sanitizer_cov_dump@@Base+0x524>
   140a0:	rbit	x4, x7
   140a4:	clz	x4, x4
   140a8:	mov	x5, #0x1                   	// #1
   140ac:	lsl	x5, x5, x4
   140b0:	bic	x5, x7, x5
   140b4:	str	x5, [x9, #32]
   140b8:	cbnz	x5, 140fc <__sanitizer_cov_dump@@Base+0x544>
   140bc:	add	x4, x4, x3, lsl #6
   140c0:	add	x3, x0, #0x10
   140c4:	add	x5, x4, #0x41, lsl #12
   140c8:	add	x5, x5, #0x146
   140cc:	str	x2, [x3, x5, lsl #3]
   140d0:	ldr	x3, [x0, #16]
   140d4:	add	x4, x4, x3
   140d8:	b	14050 <__sanitizer_cov_dump@@Base+0x498>
   140dc:	mov	x4, #0x0                   	// #0
   140e0:	mov	x3, #0x0                   	// #0
   140e4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   140e8:	add	x2, x2, #0xb40
   140ec:	mov	w1, #0x30                  	// #48
   140f0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   140f4:	add	x0, x0, #0xbe0
   140f8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   140fc:	orr	x6, x8, x6
   14100:	str	x6, [x0, #24]
   14104:	b	140bc <__sanitizer_cov_dump@@Base+0x504>
   14108:	ldr	x3, [x0, #24]
   1410c:	cbnz	x3, 143e0 <__sanitizer_cov_dump@@Base+0x828>
   14110:	ldr	x15, [x0, #544]
   14114:	add	x7, x0, #0x630
   14118:	mov	x13, #0x1                   	// #1
   1411c:	add	x12, x0, #0x220
   14120:	mov	x11, x7
   14124:	mov	x14, x7
   14128:	ldr	x4, [x7]
   1412c:	and	x4, x15, x4
   14130:	add	x9, x8, x8, lsl #6
   14134:	cbz	x4, 1428c <__sanitizer_cov_dump@@Base+0x6d4>
   14138:	rbit	x3, x4
   1413c:	clz	x3, x3
   14140:	lsl	x5, x13, x3
   14144:	mvn	x10, x5
   14148:	bic	x4, x4, x5
   1414c:	add	x5, x12, x3, lsl #3
   14150:	ldr	x5, [x5, #8]
   14154:	add	x3, x9, x3
   14158:	add	x3, x11, x3, lsl #3
   1415c:	ldr	x6, [x3, #8]
   14160:	bic	x5, x6, x5
   14164:	str	x5, [x3, #8]
   14168:	cbnz	x5, 14134 <__sanitizer_cov_dump@@Base+0x57c>
   1416c:	ldr	x3, [x14]
   14170:	and	x10, x3, x10
   14174:	str	x10, [x14]
   14178:	b	14134 <__sanitizer_cov_dump@@Base+0x57c>
   1417c:	mov	x4, #0x1000                	// #4096
   14180:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14184:	add	x2, x2, #0xc20
   14188:	mov	w1, #0x143                 	// #323
   1418c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14190:	add	x0, x0, #0xbe0
   14194:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14198:	lsl	x9, x12, x10
   1419c:	add	x3, x3, x6, lsl #6
   141a0:	add	x3, x15, x3, lsl #3
   141a4:	ldr	x6, [x3, #8]
   141a8:	tst	x9, x6
   141ac:	b.eq	14230 <__sanitizer_cov_dump@@Base+0x678>  // b.none
   141b0:	ldr	x3, [x13, #2608]
   141b4:	add	x3, x3, x16
   141b8:	lsl	x3, x3, #4
   141bc:	add	x9, x14, x3
   141c0:	ldrh	w19, [x5, #2]
   141c4:	ldr	w30, [x5, #4]
   141c8:	ldr	w18, [x5, #8]
   141cc:	ldr	w17, [x5, #12]
   141d0:	ldp	x6, x7, [x9]
   141d4:	stp	x6, x7, [x5]
   141d8:	strh	w10, [x14, x3]
   141dc:	strh	w19, [x9, #2]
   141e0:	str	w30, [x9, #4]
   141e4:	str	w18, [x9, #8]
   141e8:	str	w17, [x9, #12]
   141ec:	ldr	x3, [x13, #2608]
   141f0:	sub	x3, x3, #0x1
   141f4:	str	x3, [x13, #2608]
   141f8:	sub	x4, x4, #0x10
   141fc:	subs	x11, x11, #0x1
   14200:	b.mi	14108 <__sanitizer_cov_dump@@Base+0x550>  // b.first
   14204:	mov	x5, x4
   14208:	ldrh	w10, [x4]
   1420c:	and	x3, x10, #0xffff
   14210:	cmp	x3, #0x1, lsl #12
   14214:	b.hi	1417c <__sanitizer_cov_dump@@Base+0x5c4>  // b.pmore
   14218:	lsr	x6, x3, #12
   1421c:	ubfx	x3, x3, #6, #6
   14220:	ldr	x7, [x15, x6, lsl #3]
   14224:	lsl	x9, x12, x3
   14228:	tst	x9, x7
   1422c:	b.ne	14198 <__sanitizer_cov_dump@@Base+0x5e0>  // b.any
   14230:	ldrh	w6, [x5, #2]
   14234:	and	x3, x6, #0xffff
   14238:	cmp	x3, #0x1, lsl #12
   1423c:	b.hi	14270 <__sanitizer_cov_dump@@Base+0x6b8>  // b.pmore
   14240:	ubfx	x9, x3, #6, #6
   14244:	lsl	x17, x12, x9
   14248:	tst	x17, x7
   1424c:	b.eq	141f8 <__sanitizer_cov_dump@@Base+0x640>  // b.none
   14250:	lsr	x3, x3, #12
   14254:	add	x3, x9, x3, lsl #6
   14258:	add	x3, x15, x3, lsl #3
   1425c:	lsl	x6, x12, x6
   14260:	ldr	x3, [x3, #8]
   14264:	tst	x6, x3
   14268:	b.ne	141b0 <__sanitizer_cov_dump@@Base+0x5f8>  // b.any
   1426c:	b	141f8 <__sanitizer_cov_dump@@Base+0x640>
   14270:	mov	x4, #0x1000                	// #4096
   14274:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14278:	add	x2, x2, #0xc20
   1427c:	mov	w1, #0x143                 	// #323
   14280:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14284:	add	x0, x0, #0xbe0
   14288:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1428c:	add	x8, x8, #0x1
   14290:	add	x7, x7, #0x208
   14294:	cmp	x8, #0x1, lsl #12
   14298:	b.ne	14124 <__sanitizer_cov_dump@@Base+0x56c>  // b.any
   1429c:	ldr	x4, [x0, #544]
   142a0:	cbz	x4, 14304 <__sanitizer_cov_dump@@Base+0x74c>
   142a4:	rbit	x3, x4
   142a8:	clz	x3, x3
   142ac:	mov	x6, x0
   142b0:	ldr	x5, [x6, #24]!
   142b4:	mov	x9, #0x1                   	// #1
   142b8:	b	142e0 <__sanitizer_cov_dump@@Base+0x728>
   142bc:	add	x3, x0, x3, lsl #3
   142c0:	ldr	x5, [x3, #32]
   142c4:	ldr	x7, [x3, #552]
   142c8:	orr	x5, x5, x7
   142cc:	str	x5, [x3, #32]
   142d0:	cbz	x4, 14300 <__sanitizer_cov_dump@@Base+0x748>
   142d4:	rbit	x3, x4
   142d8:	clz	x3, x3
   142dc:	mov	x5, x8
   142e0:	lsl	x7, x9, x3
   142e4:	bic	x4, x4, x7
   142e8:	orr	x8, x5, x7
   142ec:	bics	xzr, x7, x5
   142f0:	b.eq	142bc <__sanitizer_cov_dump@@Base+0x704>  // b.none
   142f4:	add	x5, x6, x3, lsl #3
   142f8:	str	xzr, [x5, #8]
   142fc:	b	142bc <__sanitizer_cov_dump@@Base+0x704>
   14300:	str	x8, [x0, #24]
   14304:	str	xzr, [x0, #544]
   14308:	ldr	x4, [x0, #24]
   1430c:	cbnz	x4, 1432c <__sanitizer_cov_dump@@Base+0x774>
   14310:	mov	x3, #0x0                   	// #0
   14314:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14318:	add	x2, x2, #0xc38
   1431c:	mov	w1, #0xbf                  	// #191
   14320:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14324:	add	x0, x0, #0xbe0
   14328:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1432c:	rbit	x3, x4
   14330:	clz	x3, x3
   14334:	mov	x6, #0x1                   	// #1
   14338:	lsl	x6, x6, x3
   1433c:	bic	x5, x4, x6
   14340:	str	x5, [x0, #24]
   14344:	add	x9, x0, x3, lsl #3
   14348:	ldr	x7, [x9, #32]
   1434c:	cbz	x7, 1438c <__sanitizer_cov_dump@@Base+0x7d4>
   14350:	rbit	x8, x7
   14354:	clz	x8, x8
   14358:	mov	x5, #0x1                   	// #1
   1435c:	lsl	x5, x5, x8
   14360:	bic	x5, x7, x5
   14364:	str	x5, [x9, #32]
   14368:	cbnz	x5, 143ac <__sanitizer_cov_dump@@Base+0x7f4>
   1436c:	add	x4, x8, x3, lsl #6
   14370:	add	x3, x0, #0x10
   14374:	add	x5, x4, #0x41, lsl #12
   14378:	add	x5, x5, #0x146
   1437c:	str	x2, [x3, x5, lsl #3]
   14380:	ldr	x3, [x0, #16]
   14384:	add	x4, x4, x3
   14388:	b	14050 <__sanitizer_cov_dump@@Base+0x498>
   1438c:	mov	x4, #0x0                   	// #0
   14390:	mov	x3, #0x0                   	// #0
   14394:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   14398:	add	x2, x2, #0xb40
   1439c:	mov	w1, #0x30                  	// #48
   143a0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   143a4:	add	x0, x0, #0xbe0
   143a8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   143ac:	orr	x4, x4, x6
   143b0:	str	x4, [x0, #24]
   143b4:	b	1436c <__sanitizer_cov_dump@@Base+0x7b4>
   143b8:	mov	x4, #0x0                   	// #0
   143bc:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   143c0:	add	x2, x2, #0xb40
   143c4:	mov	w1, #0x30                  	// #48
   143c8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   143cc:	add	x0, x0, #0xbe0
   143d0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   143d4:	mov	x3, #0xffffffffffffffff    	// #-1
   143d8:	str	x3, [x0, #24]
   143dc:	b	1403c <__sanitizer_cov_dump@@Base+0x484>
   143e0:	mov	x4, #0x0                   	// #0
   143e4:	mov	x3, #0x0                   	// #0
   143e8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   143ec:	add	x2, x2, #0xc48
   143f0:	mov	w1, #0xa7                  	// #167
   143f4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   143f8:	add	x0, x0, #0xb28
   143fc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14400:	add	x3, x0, #0x10
   14404:	add	x3, x3, #0x410, lsl #12
   14408:	ldr	x4, [x3, #2608]
   1440c:	subs	x11, x4, #0x1
   14410:	b.mi	14110 <__sanitizer_cov_dump@@Base+0x558>  // b.first
   14414:	add	x4, x4, #0x21, lsl #12
   14418:	add	x4, x4, #0xa3
   1441c:	add	x4, x0, x4, lsl #4
   14420:	add	x15, x0, #0x220
   14424:	mov	x12, #0x1                   	// #1
   14428:	add	x14, x0, #0x10
   1442c:	add	x13, x14, #0x410, lsl #12
   14430:	mov	x16, #0x10a2                	// #4258
   14434:	movk	x16, #0x2, lsl #16
   14438:	b	14204 <__sanitizer_cov_dump@@Base+0x64c>
   1443c:	ldr	x2, [x0, #16]
   14440:	ldr	x0, [x1, #528]
   14444:	cmp	x2, x0
   14448:	b.eq	1445c <__sanitizer_cov_dump@@Base+0x8a4>  // b.none
   1444c:	str	xzr, [x1, #8]
   14450:	str	x2, [x1, #528]
   14454:	str	xzr, [x1, #1048]
   14458:	str	xzr, [x1, #1568]
   1445c:	ret
   14460:	stp	x19, x20, [sp, #-64]!
   14464:	stp	x21, x22, [sp, #16]
   14468:	stp	x23, x24, [sp, #32]
   1446c:	stp	x25, x30, [sp, #48]
   14470:	mov	x20, x0
   14474:	mov	x21, x1
   14478:	mov	x22, x2
   1447c:	and	w24, w3, #0xff
   14480:	and	w25, w4, #0xff
   14484:	ldr	x19, [x1, #16]
   14488:	add	x0, x0, #0x410, lsl #12
   1448c:	ldrb	w0, [x0, #2632]
   14490:	mov	w23, #0x0                   	// #0
   14494:	cbz	w0, 144ac <__sanitizer_cov_dump@@Base+0x8f4>
   14498:	ldr	x0, [x1]
   1449c:	ldr	x1, [x0]
   144a0:	mov	x0, x21
   144a4:	blr	x1
   144a8:	mov	w23, w0
   144ac:	ldr	x1, [x19, #8]
   144b0:	cbnz	x1, 144cc <__sanitizer_cov_dump@@Base+0x914>
   144b4:	ldr	x0, [x19, #528]
   144b8:	cbz	x0, 144cc <__sanitizer_cov_dump@@Base+0x914>
   144bc:	ldr	x2, [x22]
   144c0:	and	x3, x2, #0xfffffffffffff000
   144c4:	cmp	x0, x3
   144c8:	b.eq	14614 <__sanitizer_cov_dump@@Base+0xa5c>  // b.none
   144cc:	ldr	x0, [x22]
   144d0:	cbnz	x0, 146d8 <__sanitizer_cov_dump@@Base+0xb20>
   144d4:	add	x0, x20, #0x8
   144d8:	mov	w2, #0x1                   	// #1
   144dc:	ldxrb	w1, [x0]
   144e0:	stxrb	w3, w2, [x0]
   144e4:	cbnz	w3, 144dc <__sanitizer_cov_dump@@Base+0x924>
   144e8:	dmb	ish
   144ec:	and	w1, w1, #0xff
   144f0:	cbnz	w1, 147dc <__sanitizer_cov_dump@@Base+0xc24>
   144f4:	mov	x2, x22
   144f8:	mov	x1, x19
   144fc:	mov	x0, x20
   14500:	bl	13f94 <__sanitizer_cov_dump@@Base+0x3dc>
   14504:	cbnz	w24, 147e4 <__sanitizer_cov_dump@@Base+0xc2c>
   14508:	cbnz	w25, 14554 <__sanitizer_cov_dump@@Base+0x99c>
   1450c:	ldr	x25, [x22]
   14510:	mov	w24, w23
   14514:	cbnz	w23, 1452c <__sanitizer_cov_dump@@Base+0x974>
   14518:	ldr	x0, [x21]
   1451c:	ldr	x1, [x0]
   14520:	mov	x0, x21
   14524:	blr	x1
   14528:	mov	w24, w0
   1452c:	ldr	x0, [x21]
   14530:	ldr	x1, [x0, #8]
   14534:	mov	x0, x21
   14538:	blr	x1
   1453c:	mov	w4, w0
   14540:	mov	w3, w24
   14544:	mov	x2, x25
   14548:	add	x1, x19, #0x8
   1454c:	add	x0, x20, #0x10
   14550:	bl	153f0 <__sanitizer_cov_dump@@Base+0x1838>
   14554:	ldr	x1, [x22]
   14558:	ldr	x2, [x20, #16]
   1455c:	ldr	x0, [x19, #528]
   14560:	cmp	x2, x0
   14564:	b.eq	14578 <__sanitizer_cov_dump@@Base+0x9c0>  // b.none
   14568:	str	xzr, [x19, #8]
   1456c:	str	x2, [x19, #528]
   14570:	str	xzr, [x19, #1048]
   14574:	str	xzr, [x19, #1568]
   14578:	cmp	x1, #0xfff
   1457c:	b.ls	148c0 <__sanitizer_cov_dump@@Base+0xd08>  // b.plast
   14580:	ldr	x3, [x20, #16]
   14584:	and	x4, x1, #0xfffffffffffff000
   14588:	cmp	x3, x4
   1458c:	b.ne	148e0 <__sanitizer_cov_dump@@Base+0xd28>  // b.any
   14590:	and	x4, x1, #0xfff
   14594:	ldr	x0, [x19, #528]
   14598:	cmp	x0, x3
   1459c:	b.ne	148f8 <__sanitizer_cov_dump@@Base+0xd40>  // b.any
   145a0:	lsr	x0, x4, #6
   145a4:	ldr	x3, [x19, #8]
   145a8:	mov	x2, #0x1                   	// #1
   145ac:	lsl	x2, x2, x0
   145b0:	tst	x3, x2
   145b4:	b.eq	14918 <__sanitizer_cov_dump@@Base+0xd60>  // b.none
   145b8:	add	x0, x19, x0, lsl #3
   145bc:	ldr	x3, [x0, #16]
   145c0:	mov	x2, #0x1                   	// #1
   145c4:	lsl	x1, x2, x1
   145c8:	orr	x1, x1, x3
   145cc:	str	x1, [x0, #16]
   145d0:	cmp	x3, x1
   145d4:	b.ne	14948 <__sanitizer_cov_dump@@Base+0xd90>  // b.any
   145d8:	ldr	x3, [x19, #1048]
   145dc:	cmp	x3, #0x3f
   145e0:	b.hi	1492c <__sanitizer_cov_dump@@Base+0xd74>  // b.pmore
   145e4:	add	x0, x3, #0x1
   145e8:	str	x0, [x19, #1048]
   145ec:	add	x19, x19, #0x8
   145f0:	add	x3, x3, #0x42
   145f4:	str	x4, [x19, x3, lsl #3]
   145f8:	dmb	ish
   145fc:	strb	wzr, [x20, #8]
   14600:	ldp	x21, x22, [sp, #16]
   14604:	ldp	x23, x24, [sp, #32]
   14608:	ldp	x25, x30, [sp, #48]
   1460c:	ldp	x19, x20, [sp], #64
   14610:	ret
   14614:	and	x4, x2, #0xfff
   14618:	ubfx	x0, x2, #6, #6
   1461c:	mov	x1, #0x1                   	// #1
   14620:	lsl	x3, x1, x0
   14624:	str	x3, [x19, #8]
   14628:	lsl	x0, x0, #3
   1462c:	add	x3, x19, x0
   14630:	mov	x0, x3
   14634:	mov	x3, #0x0                   	// #0
   14638:	lsl	x2, x1, x2
   1463c:	orr	x2, x2, x3
   14640:	str	x2, [x0, #16]
   14644:	cmp	x3, x2
   14648:	b.ne	1468c <__sanitizer_cov_dump@@Base+0xad4>  // b.any
   1464c:	ldr	x3, [x19, #1048]
   14650:	cmp	x3, #0x3f
   14654:	b.hi	14670 <__sanitizer_cov_dump@@Base+0xab8>  // b.pmore
   14658:	add	x0, x3, #0x1
   1465c:	str	x0, [x19, #1048]
   14660:	add	x19, x19, #0x8
   14664:	add	x3, x3, #0x42
   14668:	str	x4, [x19, x3, lsl #3]
   1466c:	b	14600 <__sanitizer_cov_dump@@Base+0xa48>
   14670:	mov	x4, #0x40                  	// #64
   14674:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14678:	add	x2, x2, #0xc70
   1467c:	mov	w1, #0x3f                  	// #63
   14680:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14684:	add	x0, x0, #0xb28
   14688:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1468c:	ldr	x3, [x19, #1568]
   14690:	cmp	x3, #0x3f
   14694:	b.hi	146bc <__sanitizer_cov_dump@@Base+0xb04>  // b.pmore
   14698:	add	x0, x3, #0x1
   1469c:	str	x0, [x19, #1568]
   146a0:	add	x19, x19, #0x8
   146a4:	add	x0, x3, #0x83
   146a8:	lsl	x0, x0, #3
   146ac:	add	x1, x19, x0
   146b0:	str	w4, [x19, x0]
   146b4:	str	w23, [x1, #4]
   146b8:	b	14600 <__sanitizer_cov_dump@@Base+0xa48>
   146bc:	mov	x4, #0x40                  	// #64
   146c0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   146c4:	add	x2, x2, #0xcc8
   146c8:	mov	w1, #0x43                  	// #67
   146cc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   146d0:	add	x0, x0, #0xb28
   146d4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   146d8:	ldr	x2, [x19, #528]
   146dc:	ldr	x3, [x20, #16]
   146e0:	cmp	x2, x3
   146e4:	b.ne	144d4 <__sanitizer_cov_dump@@Base+0x91c>  // b.any
   146e8:	and	x3, x0, #0xfffffffffffff000
   146ec:	cmp	x2, x3
   146f0:	b.ne	144d4 <__sanitizer_cov_dump@@Base+0x91c>  // b.any
   146f4:	and	x4, x0, #0xfff
   146f8:	ldr	x8, [x19, #1568]
   146fc:	cbz	x8, 14994 <__sanitizer_cov_dump@@Base+0xddc>
   14700:	lsr	x9, x4, #6
   14704:	mov	x2, #0x1                   	// #1
   14708:	lsl	x11, x2, x9
   1470c:	lsl	x5, x2, x0
   14710:	mov	x3, #0x0                   	// #0
   14714:	add	x10, x19, #0x420
   14718:	add	x6, x20, #0x630
   1471c:	b	14744 <__sanitizer_cov_dump@@Base+0xb8c>
   14720:	add	x2, x2, x2, lsl #6
   14724:	add	x2, x2, x9
   14728:	add	x2, x6, x2, lsl #3
   1472c:	ldr	x2, [x2, #8]
   14730:	tst	x5, x2
   14734:	b.eq	144d4 <__sanitizer_cov_dump@@Base+0x91c>  // b.none
   14738:	add	x3, x3, #0x1
   1473c:	cmp	x8, x3
   14740:	b.eq	14994 <__sanitizer_cov_dump@@Base+0xddc>  // b.none
   14744:	lsl	x2, x3, #3
   14748:	ldr	w2, [x10, x2]
   1474c:	add	x7, x2, x2, lsl #6
   14750:	ldr	x7, [x6, x7, lsl #3]
   14754:	tst	x11, x7
   14758:	b.eq	144d4 <__sanitizer_cov_dump@@Base+0x91c>  // b.none
   1475c:	b	14720 <__sanitizer_cov_dump@@Base+0xb68>
   14760:	orr	x1, x1, x3
   14764:	str	x1, [x19, #8]
   14768:	add	x1, x19, x2, lsl #3
   1476c:	str	xzr, [x1, #16]
   14770:	b	149a8 <__sanitizer_cov_dump@@Base+0xdf0>
   14774:	mov	x4, #0x40                  	// #64
   14778:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1477c:	add	x2, x2, #0xc70
   14780:	mov	w1, #0x3f                  	// #63
   14784:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14788:	add	x0, x0, #0xb28
   1478c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14790:	ldr	x3, [x19, #1568]
   14794:	cmp	x3, #0x3f
   14798:	b.hi	147c0 <__sanitizer_cov_dump@@Base+0xc08>  // b.pmore
   1479c:	add	x0, x3, #0x1
   147a0:	str	x0, [x19, #1568]
   147a4:	add	x19, x19, #0x8
   147a8:	add	x0, x3, #0x83
   147ac:	lsl	x0, x0, #3
   147b0:	add	x1, x19, x0
   147b4:	str	w4, [x19, x0]
   147b8:	str	w23, [x1, #4]
   147bc:	b	14600 <__sanitizer_cov_dump@@Base+0xa48>
   147c0:	mov	x4, #0x40                  	// #64
   147c4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   147c8:	add	x2, x2, #0xcc8
   147cc:	mov	w1, #0x43                  	// #67
   147d0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   147d4:	add	x0, x0, #0xb28
   147d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   147dc:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   147e0:	b	144f4 <__sanitizer_cov_dump@@Base+0x93c>
   147e4:	ldr	x0, [x22]
   147e8:	ldr	x1, [x20, #16]
   147ec:	ldr	x3, [x19, #528]
   147f0:	cmp	x1, x3
   147f4:	b.ne	14830 <__sanitizer_cov_dump@@Base+0xc78>  // b.any
   147f8:	cmp	x0, #0xfff
   147fc:	b.ls	1484c <__sanitizer_cov_dump@@Base+0xc94>  // b.plast
   14800:	and	x4, x0, #0xfffffffffffff000
   14804:	cmp	x1, x4
   14808:	b.ne	1486c <__sanitizer_cov_dump@@Base+0xcb4>  // b.any
   1480c:	ubfx	x2, x0, #6, #6
   14810:	mov	x1, #0x1                   	// #1
   14814:	lsl	x1, x1, x2
   14818:	ldr	x3, [x19, #8]
   1481c:	tst	x1, x3
   14820:	b.ne	14888 <__sanitizer_cov_dump@@Base+0xcd0>  // b.any
   14824:	cbz	w25, 1450c <__sanitizer_cov_dump@@Base+0x954>
   14828:	ldr	x1, [x22]
   1482c:	b	14578 <__sanitizer_cov_dump@@Base+0x9c0>
   14830:	mov	x4, x1
   14834:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14838:	add	x2, x2, #0xe70
   1483c:	mov	w1, #0x6c                  	// #108
   14840:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14844:	add	x0, x0, #0xb28
   14848:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1484c:	mov	x4, #0x1000                	// #4096
   14850:	mov	x3, x0
   14854:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14858:	add	x2, x2, #0xb10
   1485c:	mov	w1, #0x172                 	// #370
   14860:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14864:	add	x0, x0, #0xb28
   14868:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1486c:	mov	x3, x1
   14870:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14874:	add	x2, x2, #0xe40
   14878:	mov	w1, #0x173                 	// #371
   1487c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14880:	add	x0, x0, #0xb28
   14884:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14888:	mov	x1, #0x1                   	// #1
   1488c:	lsl	x0, x1, x0
   14890:	add	x2, x19, x2, lsl #3
   14894:	ldr	x1, [x2, #16]
   14898:	tst	x0, x1
   1489c:	b.eq	14824 <__sanitizer_cov_dump@@Base+0xc6c>  // b.none
   148a0:	mov	x4, #0x0                   	// #0
   148a4:	mov	x3, #0x0                   	// #0
   148a8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   148ac:	add	x2, x2, #0xd28
   148b0:	mov	w1, #0xa5                  	// #165
   148b4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   148b8:	add	x0, x0, #0xd50
   148bc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   148c0:	mov	x4, #0x1000                	// #4096
   148c4:	mov	x3, x1
   148c8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   148cc:	add	x2, x2, #0xb10
   148d0:	mov	w1, #0x172                 	// #370
   148d4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   148d8:	add	x0, x0, #0xb28
   148dc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   148e0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   148e4:	add	x2, x2, #0xe40
   148e8:	mov	w1, #0x173                 	// #371
   148ec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   148f0:	add	x0, x0, #0xb28
   148f4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   148f8:	mov	x4, x3
   148fc:	mov	x3, x0
   14900:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14904:	add	x2, x2, #0xe70
   14908:	mov	w1, #0x3c                  	// #60
   1490c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14910:	add	x0, x0, #0xb28
   14914:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14918:	orr	x2, x3, x2
   1491c:	str	x2, [x19, #8]
   14920:	add	x2, x19, x0, lsl #3
   14924:	str	xzr, [x2, #16]
   14928:	b	145b8 <__sanitizer_cov_dump@@Base+0xa00>
   1492c:	mov	x4, #0x40                  	// #64
   14930:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14934:	add	x2, x2, #0xc70
   14938:	mov	w1, #0x3f                  	// #63
   1493c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14940:	add	x0, x0, #0xb28
   14944:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14948:	ldr	x3, [x19, #1568]
   1494c:	cmp	x3, #0x3f
   14950:	b.hi	14978 <__sanitizer_cov_dump@@Base+0xdc0>  // b.pmore
   14954:	add	x0, x3, #0x1
   14958:	str	x0, [x19, #1568]
   1495c:	add	x19, x19, #0x8
   14960:	add	x3, x3, #0x83
   14964:	lsl	x3, x3, #3
   14968:	add	x0, x19, x3
   1496c:	str	w4, [x19, x3]
   14970:	str	w23, [x0, #4]
   14974:	b	145f8 <__sanitizer_cov_dump@@Base+0xa40>
   14978:	mov	x4, #0x40                  	// #64
   1497c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14980:	add	x2, x2, #0xcc8
   14984:	mov	w1, #0x43                  	// #67
   14988:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1498c:	add	x0, x0, #0xb28
   14990:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14994:	lsr	x2, x4, #6
   14998:	mov	x3, #0x1                   	// #1
   1499c:	lsl	x3, x3, x2
   149a0:	tst	x1, x3
   149a4:	b.eq	14760 <__sanitizer_cov_dump@@Base+0xba8>  // b.none
   149a8:	add	x2, x19, x2, lsl #3
   149ac:	ldr	x3, [x2, #16]
   149b0:	mov	x1, #0x1                   	// #1
   149b4:	lsl	x0, x1, x0
   149b8:	orr	x0, x0, x3
   149bc:	str	x0, [x2, #16]
   149c0:	cmp	x3, x0
   149c4:	b.ne	14790 <__sanitizer_cov_dump@@Base+0xbd8>  // b.any
   149c8:	ldr	x3, [x19, #1048]
   149cc:	cmp	x3, #0x3f
   149d0:	b.hi	14774 <__sanitizer_cov_dump@@Base+0xbbc>  // b.pmore
   149d4:	add	x0, x3, #0x1
   149d8:	str	x0, [x19, #1048]
   149dc:	add	x19, x19, #0x8
   149e0:	add	x3, x3, #0x42
   149e4:	str	x4, [x19, x3, lsl #3]
   149e8:	b	14600 <__sanitizer_cov_dump@@Base+0xa48>
   149ec:	stp	x19, x20, [sp, #-320]!
   149f0:	stp	x21, x22, [sp, #16]
   149f4:	stp	x23, x24, [sp, #32]
   149f8:	stp	x25, x26, [sp, #48]
   149fc:	stp	x27, x28, [sp, #64]
   14a00:	str	x30, [sp, #80]
   14a04:	ldr	x22, [x1, #16]
   14a08:	ldr	x25, [x2]
   14a0c:	ldr	x5, [x0, #16]
   14a10:	ldr	x3, [x22, #528]
   14a14:	cmp	x5, x3
   14a18:	b.ne	14a90 <__sanitizer_cov_dump@@Base+0xed8>  // b.any
   14a1c:	mov	x19, x0
   14a20:	mov	x21, x2
   14a24:	str	xzr, [x0, #1064]
   14a28:	ldr	x1, [x22, #8]
   14a2c:	rbit	x0, x1
   14a30:	clz	x0, x0
   14a34:	mov	x3, #0x1                   	// #1
   14a38:	add	x6, x22, #0x8
   14a3c:	cbz	x1, 14aac <__sanitizer_cov_dump@@Base+0xef4>
   14a40:	lsl	x2, x3, x0
   14a44:	bic	x1, x1, x2
   14a48:	ldr	x4, [x19, #1064]
   14a4c:	orr	x2, x4, x2
   14a50:	str	x2, [x19, #1064]
   14a54:	cmp	x4, x2
   14a58:	b.eq	14a64 <__sanitizer_cov_dump@@Base+0xeac>  // b.none
   14a5c:	add	x2, x19, x0, lsl #3
   14a60:	str	xzr, [x2, #1072]
   14a64:	lsl	x0, x0, #3
   14a68:	add	x4, x19, x0
   14a6c:	add	x0, x6, x0
   14a70:	ldr	x2, [x4, #1072]
   14a74:	ldr	x0, [x0, #8]
   14a78:	orr	x0, x2, x0
   14a7c:	str	x0, [x4, #1072]
   14a80:	cbz	x1, 14aac <__sanitizer_cov_dump@@Base+0xef4>
   14a84:	rbit	x0, x1
   14a88:	clz	x0, x0
   14a8c:	b	14a40 <__sanitizer_cov_dump@@Base+0xe88>
   14a90:	mov	x4, x5
   14a94:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14a98:	add	x2, x2, #0xe70
   14a9c:	mov	w1, #0x6c                  	// #108
   14aa0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14aa4:	add	x0, x0, #0xb28
   14aa8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14aac:	cmp	x25, #0xfff
   14ab0:	b.ls	14b1c <__sanitizer_cov_dump@@Base+0xf64>  // b.plast
   14ab4:	and	x4, x25, #0xfffffffffffff000
   14ab8:	cmp	x5, x4
   14abc:	b.ne	14b3c <__sanitizer_cov_dump@@Base+0xf84>  // b.any
   14ac0:	and	x27, x25, #0xfff
   14ac4:	ubfx	x0, x25, #6, #6
   14ac8:	mov	x2, x0
   14acc:	str	x0, [sp, #112]
   14ad0:	and	x1, x25, #0x3f
   14ad4:	mov	x0, #0x1                   	// #1
   14ad8:	lsl	x0, x0, x2
   14adc:	mov	x2, x0
   14ae0:	str	x0, [sp, #104]
   14ae4:	ldr	x0, [x19, #1064]
   14ae8:	tst	x2, x0
   14aec:	b.ne	14b58 <__sanitizer_cov_dump@@Base+0xfa0>  // b.any
   14af0:	add	x0, x19, #0x630
   14af4:	str	x0, [sp, #128]
   14af8:	mov	x24, #0x1                   	// #1
   14afc:	lsl	x0, x24, x1
   14b00:	str	x0, [sp, #152]
   14b04:	add	x0, x27, x27, lsl #6
   14b08:	add	x0, x0, x24
   14b0c:	str	x0, [sp, #144]
   14b10:	add	x26, x27, x27, lsl #6
   14b14:	add	x26, x19, x26, lsl #3
   14b18:	b	14c1c <__sanitizer_cov_dump@@Base+0x1064>
   14b1c:	mov	x4, #0x1000                	// #4096
   14b20:	mov	x3, x25
   14b24:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14b28:	add	x2, x2, #0xb10
   14b2c:	mov	w1, #0x172                 	// #370
   14b30:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14b34:	add	x0, x0, #0xb28
   14b38:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14b3c:	mov	x3, x5
   14b40:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14b44:	add	x2, x2, #0xe40
   14b48:	mov	w1, #0x173                 	// #371
   14b4c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14b50:	add	x0, x0, #0xb28
   14b54:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14b58:	ldr	x0, [sp, #112]
   14b5c:	add	x2, x19, x0, lsl #3
   14b60:	mov	x0, #0x1                   	// #1
   14b64:	lsl	x0, x0, x1
   14b68:	ldr	x2, [x2, #1072]
   14b6c:	tst	x0, x2
   14b70:	b.eq	14af0 <__sanitizer_cov_dump@@Base+0xf38>  // b.none
   14b74:	mov	x4, #0x0                   	// #0
   14b78:	mov	x3, #0x0                   	// #0
   14b7c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14b80:	add	x2, x2, #0xda0
   14b84:	mov	w1, #0x13e                 	// #318
   14b88:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14b8c:	add	x0, x0, #0xb28
   14b90:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14b94:	ldr	x0, [sp, #112]
   14b98:	add	x0, x19, x0, lsl #3
   14b9c:	ldr	x23, [x0, #1072]
   14ba0:	mov	x1, #0x1                   	// #1
   14ba4:	ldr	x0, [sp, #152]
   14ba8:	ands	x23, x0, x23
   14bac:	b.eq	14bf8 <__sanitizer_cov_dump@@Base+0x1040>  // b.none
   14bb0:	cmp	x24, x1
   14bb4:	b.ne	14c10 <__sanitizer_cov_dump@@Base+0x1058>  // b.any
   14bb8:	cbz	x1, 14e5c <__sanitizer_cov_dump@@Base+0x12a4>
   14bbc:	mov	x0, #0x1                   	// #1
   14bc0:	add	x4, sp, #0xa0
   14bc4:	add	x2, x4, x0, lsl #3
   14bc8:	ldur	x3, [x2, #-8]
   14bcc:	cmp	x3, #0xfff
   14bd0:	b.hi	14cf0 <__sanitizer_cov_dump@@Base+0x1138>  // b.pmore
   14bd4:	add	x5, x4, x0, lsl #3
   14bd8:	ldr	x2, [x19, #16]
   14bdc:	add	x2, x2, x3
   14be0:	stur	x2, [x5, #-8]
   14be4:	add	x2, x0, #0x1
   14be8:	cmp	x1, x0
   14bec:	b.eq	14e84 <__sanitizer_cov_dump@@Base+0x12cc>  // b.none
   14bf0:	mov	x0, x2
   14bf4:	b	14bc4 <__sanitizer_cov_dump@@Base+0x100c>
   14bf8:	mov	x28, x23
   14bfc:	mov	x20, x23
   14c00:	str	x23, [sp, #120]
   14c04:	b	14c3c <__sanitizer_cov_dump@@Base+0x1084>
   14c08:	ldr	x20, [x26, #1584]
   14c0c:	cbnz	x20, 14f40 <__sanitizer_cov_dump@@Base+0x1388>
   14c10:	add	x24, x24, #0x1
   14c14:	cmp	x24, #0x15
   14c18:	b.eq	14e5c <__sanitizer_cov_dump@@Base+0x12a4>  // b.none
   14c1c:	str	x27, [sp, #160]
   14c20:	ldr	x23, [x19, #1064]
   14c24:	ldr	x0, [sp, #104]
   14c28:	ands	x23, x0, x23
   14c2c:	b.ne	14b94 <__sanitizer_cov_dump@@Base+0xfdc>  // b.any
   14c30:	mov	x28, x23
   14c34:	mov	x20, x23
   14c38:	str	x23, [sp, #120]
   14c3c:	sub	x0, x24, #0x1
   14c40:	str	x0, [sp, #136]
   14c44:	cbnz	x20, 14c50 <__sanitizer_cov_dump@@Base+0x1098>
   14c48:	cbz	x23, 14c08 <__sanitizer_cov_dump@@Base+0x1050>
   14c4c:	b	14c10 <__sanitizer_cov_dump@@Base+0x1058>
   14c50:	cbnz	x28, 14c84 <__sanitizer_cov_dump@@Base+0x10cc>
   14c54:	rbit	x1, x20
   14c58:	clz	x1, x1
   14c5c:	str	x1, [sp, #120]
   14c60:	mov	x0, #0x1                   	// #1
   14c64:	lsl	x0, x0, x1
   14c68:	bic	x20, x20, x0
   14c6c:	ldr	x0, [sp, #144]
   14c70:	add	x0, x0, x23, lsl #6
   14c74:	add	x0, x0, x1
   14c78:	add	x0, x19, x0, lsl #3
   14c7c:	ldr	x28, [x0, #1584]
   14c80:	cbz	x28, 14cd0 <__sanitizer_cov_dump@@Base+0x1118>
   14c84:	rbit	x1, x28
   14c88:	clz	x1, x1
   14c8c:	mov	x0, #0x1                   	// #1
   14c90:	lsl	x0, x0, x1
   14c94:	bic	x28, x28, x0
   14c98:	ldr	x0, [sp, #120]
   14c9c:	add	x0, x0, x23, lsl #6
   14ca0:	orr	x2, x28, x20
   14ca4:	cmp	x2, #0x0
   14ca8:	cinc	x23, x23, eq  // eq = none
   14cac:	ldr	x4, [sp, #136]
   14cb0:	add	x3, sp, #0xa8
   14cb4:	add	x2, x19, #0x428
   14cb8:	add	x1, x1, x0, lsl #6
   14cbc:	ldr	x0, [sp, #128]
   14cc0:	bl	156ec <__sanitizer_cov_dump@@Base+0x1b34>
   14cc4:	cbz	x0, 14c44 <__sanitizer_cov_dump@@Base+0x108c>
   14cc8:	add	x1, x0, #0x1
   14ccc:	b	14bb0 <__sanitizer_cov_dump@@Base+0xff8>
   14cd0:	mov	x4, #0x0                   	// #0
   14cd4:	mov	x3, #0x0                   	// #0
   14cd8:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14cdc:	add	x2, x2, #0xe90
   14ce0:	mov	w1, #0x132                 	// #306
   14ce4:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14ce8:	add	x0, x0, #0xbe0
   14cec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14cf0:	mov	x4, #0x1000                	// #4096
   14cf4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14cf8:	add	x2, x2, #0xdc0
   14cfc:	mov	w1, #0x16f                 	// #367
   14d00:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d04:	add	x0, x0, #0xb28
   14d08:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14d0c:	mov	x4, x25
   14d10:	mov	x3, x0
   14d14:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d18:	add	x2, x2, #0xdd8
   14d1c:	mov	w1, #0x143                 	// #323
   14d20:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d24:	add	x0, x0, #0xb28
   14d28:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14d2c:	mov	x4, x0
   14d30:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d34:	add	x2, x2, #0xdf8
   14d38:	mov	w1, #0x7f                  	// #127
   14d3c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d40:	add	x0, x0, #0xd50
   14d44:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14d48:	mov	x4, #0x1000                	// #4096
   14d4c:	mov	x3, x5
   14d50:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d54:	add	x2, x2, #0xb10
   14d58:	mov	w1, #0x172                 	// #370
   14d5c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d60:	add	x0, x0, #0xb28
   14d64:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14d68:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d6c:	add	x2, x2, #0xe40
   14d70:	mov	w1, #0x173                 	// #371
   14d74:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d78:	add	x0, x0, #0xb28
   14d7c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14d80:	mov	x4, #0x1000                	// #4096
   14d84:	mov	x3, x6
   14d88:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d8c:	add	x2, x2, #0xb10
   14d90:	mov	w1, #0x172                 	// #370
   14d94:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14d98:	add	x0, x0, #0xb28
   14d9c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14da0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14da4:	add	x2, x2, #0xe40
   14da8:	mov	w1, #0x173                 	// #371
   14dac:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14db0:	add	x0, x0, #0xb28
   14db4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   14db8:	add	x0, x0, #0x1
   14dbc:	add	x2, x2, #0x10
   14dc0:	cmp	x4, x0
   14dc4:	b.eq	14df8 <__sanitizer_cov_dump@@Base+0x1240>  // b.none
   14dc8:	ldrh	w3, [x2]
   14dcc:	cmp	x5, x3
   14dd0:	b.ne	14db8 <__sanitizer_cov_dump@@Base+0x1200>  // b.any
   14dd4:	ldrh	w3, [x2, #2]
   14dd8:	cmp	x6, x3
   14ddc:	b.ne	14db8 <__sanitizer_cov_dump@@Base+0x1200>  // b.any
   14de0:	add	x0, x19, x0, lsl #4
   14de4:	add	x0, x0, #0x210, lsl #12
   14de8:	ldr	w3, [x0, #2628]
   14dec:	ldr	w4, [x0, #2632]
   14df0:	ldr	w2, [x0, #2636]
   14df4:	b	14e04 <__sanitizer_cov_dump@@Base+0x124c>
   14df8:	mov	w2, w14
   14dfc:	mov	w4, w10
   14e00:	mov	w3, w13
   14e04:	add	x5, x5, x11
   14e08:	ldr	x5, [x8, x5, lsl #3]
   14e0c:	add	x0, x6, x11
   14e10:	ldr	x0, [x8, x0, lsl #3]
   14e14:	sxtw	x2, w2
   14e18:	str	x2, [x22]
   14e1c:	ldr	x2, [x5, #16]
   14e20:	str	x2, [x22, #8]
   14e24:	ldr	x0, [x0, #16]
   14e28:	str	x0, [x22, #16]
   14e2c:	str	w4, [x22, #24]
   14e30:	str	w3, [x22, #28]
   14e34:	add	x0, x7, #0x1
   14e38:	add	x22, x22, #0x20
   14e3c:	cmp	x7, x1
   14e40:	b.eq	14e68 <__sanitizer_cov_dump@@Base+0x12b0>  // b.none
   14e44:	mov	x7, x0
   14e48:	b	14ee4 <__sanitizer_cov_dump@@Base+0x132c>
   14e4c:	mov	w2, w14
   14e50:	mov	w4, w10
   14e54:	mov	w3, w13
   14e58:	b	14e04 <__sanitizer_cov_dump@@Base+0x124c>
   14e5c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   14e60:	add	x0, x0, #0xe18
   14e64:	bl	1d874 <OnPrint@@Base+0x344>
   14e68:	ldp	x21, x22, [sp, #16]
   14e6c:	ldp	x23, x24, [sp, #32]
   14e70:	ldp	x25, x26, [sp, #48]
   14e74:	ldp	x27, x28, [sp, #64]
   14e78:	ldr	x30, [sp, #80]
   14e7c:	ldp	x19, x20, [sp], #320
   14e80:	ret
   14e84:	ldr	x0, [sp, #160]
   14e88:	cmp	x25, x0
   14e8c:	b.ne	14d0c <__sanitizer_cov_dump@@Base+0x1154>  // b.any
   14e90:	ldr	x3, [x21]
   14e94:	cmp	x3, x0
   14e98:	b.ne	14d2c <__sanitizer_cov_dump@@Base+0x1174>  // b.any
   14e9c:	mov	w0, #0x1                   	// #1
   14ea0:	strb	w0, [x22, #2224]
   14ea4:	cmp	x1, #0x14
   14ea8:	mov	x0, #0x14                  	// #20
   14eac:	csel	x1, x1, x0, ls  // ls = plast
   14eb0:	str	w1, [x22, #1576]
   14eb4:	add	x22, x22, #0x630
   14eb8:	mov	x7, #0x1                   	// #1
   14ebc:	add	x9, sp, #0xa0
   14ec0:	add	x8, x19, #0x10
   14ec4:	add	x15, x8, #0x410, lsl #12
   14ec8:	mov	w14, #0x0                   	// #0
   14ecc:	mov	w10, #0xffffffff            	// #-1
   14ed0:	mov	w13, w10
   14ed4:	mov	x12, #0xa40                 	// #2624
   14ed8:	movk	x12, #0x21, lsl #16
   14edc:	mov	x11, #0x1146                	// #4422
   14ee0:	movk	x11, #0x4, lsl #16
   14ee4:	add	x0, x9, x7, lsl #3
   14ee8:	ldur	x5, [x0, #-8]
   14eec:	udiv	x0, x7, x1
   14ef0:	msub	x0, x0, x1, x7
   14ef4:	cmp	x5, #0xfff
   14ef8:	b.ls	14d48 <__sanitizer_cov_dump@@Base+0x1190>  // b.plast
   14efc:	ldr	x3, [x8]
   14f00:	and	x4, x5, #0xfffffffffffff000
   14f04:	cmp	x3, x4
   14f08:	b.ne	14d68 <__sanitizer_cov_dump@@Base+0x11b0>  // b.any
   14f0c:	ldr	x6, [x9, x0, lsl #3]
   14f10:	and	x5, x5, #0xfff
   14f14:	cmp	x6, #0xfff
   14f18:	b.ls	14d80 <__sanitizer_cov_dump@@Base+0x11c8>  // b.plast
   14f1c:	and	x4, x6, #0xfffffffffffff000
   14f20:	cmp	x4, x3
   14f24:	b.ne	14da0 <__sanitizer_cov_dump@@Base+0x11e8>  // b.any
   14f28:	and	x6, x6, #0xfff
   14f2c:	ldr	x4, [x15, #2608]
   14f30:	cbz	x4, 14e4c <__sanitizer_cov_dump@@Base+0x1294>
   14f34:	add	x2, x19, x12
   14f38:	mov	x0, #0x0                   	// #0
   14f3c:	b	14dc8 <__sanitizer_cov_dump@@Base+0x1210>
   14f40:	cbz	x28, 14f4c <__sanitizer_cov_dump@@Base+0x1394>
   14f44:	mov	x20, x23
   14f48:	b	14c84 <__sanitizer_cov_dump@@Base+0x10cc>
   14f4c:	mov	x23, x28
   14f50:	b	14c54 <__sanitizer_cov_dump@@Base+0x109c>
   14f54:	stp	x19, x20, [sp, #-64]!
   14f58:	stp	x21, x22, [sp, #16]
   14f5c:	str	x30, [sp, #48]
   14f60:	mov	x19, x0
   14f64:	ldr	x21, [x1, #16]
   14f68:	ldr	x0, [x21, #8]
   14f6c:	cbnz	x0, 152c0 <__sanitizer_cov_dump@@Base+0x1708>
   14f70:	ldp	x21, x22, [sp, #16]
   14f74:	ldr	x30, [sp, #48]
   14f78:	ldp	x19, x20, [sp], #64
   14f7c:	ret
   14f80:	and	x2, x0, #0xfffffffffffff000
   14f84:	cmp	x1, x2
   14f88:	b.ne	152e4 <__sanitizer_cov_dump@@Base+0x172c>  // b.any
   14f8c:	and	x3, x0, #0xfff
   14f90:	ldr	x6, [x21, #1568]
   14f94:	cbz	x6, 153e8 <__sanitizer_cov_dump@@Base+0x1830>
   14f98:	lsr	x3, x3, #6
   14f9c:	mov	x1, #0x1                   	// #1
   14fa0:	lsl	x8, x1, x3
   14fa4:	lsl	x2, x1, x0
   14fa8:	mov	x1, #0x0                   	// #0
   14fac:	add	x7, x21, #0x420
   14fb0:	add	x4, x19, #0x630
   14fb4:	b	14fdc <__sanitizer_cov_dump@@Base+0x1424>
   14fb8:	add	x0, x0, x0, lsl #6
   14fbc:	add	x0, x0, x3
   14fc0:	add	x0, x4, x0, lsl #3
   14fc4:	ldr	x0, [x0, #8]
   14fc8:	tst	x2, x0
   14fcc:	b.eq	152e4 <__sanitizer_cov_dump@@Base+0x172c>  // b.none
   14fd0:	add	x1, x1, #0x1
   14fd4:	cmp	x6, x1
   14fd8:	b.eq	14ff8 <__sanitizer_cov_dump@@Base+0x1440>  // b.none
   14fdc:	lsl	x0, x1, #3
   14fe0:	ldr	w0, [x7, x0]
   14fe4:	add	x5, x0, x0, lsl #6
   14fe8:	ldr	x5, [x4, x5, lsl #3]
   14fec:	tst	x8, x5
   14ff0:	b.eq	152e4 <__sanitizer_cov_dump@@Base+0x172c>  // b.none
   14ff4:	b	14fb8 <__sanitizer_cov_dump@@Base+0x1400>
   14ff8:	ldp	x23, x24, [sp, #32]
   14ffc:	b	14f70 <__sanitizer_cov_dump@@Base+0x13b8>
   15000:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   15004:	b	15304 <__sanitizer_cov_dump@@Base+0x174c>
   15008:	mov	x4, x1
   1500c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15010:	add	x2, x2, #0xe70
   15014:	mov	w1, #0x6c                  	// #108
   15018:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1501c:	add	x0, x0, #0xb28
   15020:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15024:	mov	x4, #0x1000                	// #4096
   15028:	mov	x3, x0
   1502c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15030:	add	x2, x2, #0xb10
   15034:	mov	w1, #0x172                 	// #370
   15038:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1503c:	add	x0, x0, #0xb28
   15040:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15044:	mov	x3, x1
   15048:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1504c:	add	x2, x2, #0xe40
   15050:	mov	w1, #0x173                 	// #371
   15054:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15058:	add	x0, x0, #0xb28
   1505c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15060:	add	x4, x21, x5, lsl #3
   15064:	mov	x2, #0x1                   	// #1
   15068:	lsl	x2, x2, x0
   1506c:	ldr	x4, [x4, #16]
   15070:	tst	x2, x4
   15074:	b.eq	1535c <__sanitizer_cov_dump@@Base+0x17a4>  // b.none
   15078:	dmb	ish
   1507c:	strb	wzr, [x19, #8]
   15080:	ldp	x23, x24, [sp, #32]
   15084:	b	14f70 <__sanitizer_cov_dump@@Base+0x13b8>
   15088:	add	x2, x19, #0x208, lsl #12
   1508c:	add	x2, x2, #0x630
   15090:	str	x8, [x2]
   15094:	add	x2, x19, #0x208, lsl #12
   15098:	add	x2, x2, #0x800
   1509c:	str	x1, [x2, #56]
   150a0:	add	x1, x19, x5, lsl #3
   150a4:	add	x1, x1, #0x208, lsl #12
   150a8:	mov	x2, #0x1                   	// #1
   150ac:	lsl	x0, x2, x0
   150b0:	str	x0, [x1, #2112]
   150b4:	add	x0, x19, #0x208, lsl #12
   150b8:	add	x0, x0, #0x800
   150bc:	sub	x1, x0, #0x1d0
   150c0:	mov	x4, x2
   150c4:	add	x9, x19, #0x208, lsl #12
   150c8:	add	x3, x0, #0x38
   150cc:	mov	x12, #0x208                 	// #520
   150d0:	add	x11, x19, #0x630
   150d4:	ldr	x0, [x1]
   150d8:	cbnz	x0, 15144 <__sanitizer_cov_dump@@Base+0x158c>
   150dc:	add	x0, x19, #0x208, lsl #12
   150e0:	add	x0, x0, #0x800
   150e4:	ldr	x1, [x0, #56]
   150e8:	ldr	x0, [x21, #8]
   150ec:	and	x0, x1, x0
   150f0:	rbit	x2, x0
   150f4:	clz	x2, x2
   150f8:	cbz	x0, 152b0 <__sanitizer_cov_dump@@Base+0x16f8>
   150fc:	mov	x5, #0x1                   	// #1
   15100:	add	x4, x21, #0x8
   15104:	add	x3, x19, #0x208, lsl #12
   15108:	add	x3, x3, #0x838
   1510c:	lsl	x6, x5, x2
   15110:	bic	x0, x0, x6
   15114:	tst	x1, x6
   15118:	b.eq	15134 <__sanitizer_cov_dump@@Base+0x157c>  // b.none
   1511c:	add	x6, x4, x2, lsl #3
   15120:	add	x2, x3, x2, lsl #3
   15124:	ldr	x6, [x6, #8]
   15128:	ldr	x2, [x2, #8]
   1512c:	tst	x6, x2
   15130:	b.ne	15260 <__sanitizer_cov_dump@@Base+0x16a8>  // b.any
   15134:	cbz	x0, 152b0 <__sanitizer_cov_dump@@Base+0x16f8>
   15138:	rbit	x2, x0
   1513c:	clz	x2, x2
   15140:	b	1510c <__sanitizer_cov_dump@@Base+0x1554>
   15144:	rbit	x2, x0
   15148:	clz	x2, x2
   1514c:	lsl	x8, x4, x2
   15150:	bic	x5, x0, x8
   15154:	str	x5, [x1]
   15158:	add	x5, x19, x2, lsl #3
   1515c:	add	x6, x5, #0x208, lsl #12
   15160:	ldr	x6, [x6, #1592]
   15164:	cbz	x6, 151cc <__sanitizer_cov_dump@@Base+0x1614>
   15168:	rbit	x13, x6
   1516c:	clz	x13, x13
   15170:	lsl	x7, x4, x13
   15174:	bic	x6, x6, x7
   15178:	add	x5, x5, #0x208, lsl #12
   1517c:	str	x6, [x5, #1592]
   15180:	cbnz	x6, 151ec <__sanitizer_cov_dump@@Base+0x1634>
   15184:	add	x2, x13, x2, lsl #6
   15188:	lsr	x0, x2, #6
   1518c:	and	x5, x2, #0x3f
   15190:	ldr	x6, [x9, #2104]
   15194:	lsl	x7, x4, x0
   15198:	tst	x6, x7
   1519c:	b.eq	151f8 <__sanitizer_cov_dump@@Base+0x1640>  // b.none
   151a0:	add	x0, x3, x0, lsl #3
   151a4:	ldr	x6, [x0, #8]
   151a8:	lsl	x5, x4, x5
   151ac:	orr	x5, x5, x6
   151b0:	str	x5, [x0, #8]
   151b4:	cmp	x6, x5
   151b8:	b.eq	150d4 <__sanitizer_cov_dump@@Base+0x151c>  // b.none
   151bc:	mul	x0, x2, x12
   151c0:	ldr	x6, [x10, x0]
   151c4:	add	x2, x2, x2, lsl #6
   151c8:	b	1522c <__sanitizer_cov_dump@@Base+0x1674>
   151cc:	mov	x4, #0x0                   	// #0
   151d0:	mov	x3, #0x0                   	// #0
   151d4:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   151d8:	add	x2, x2, #0xb40
   151dc:	mov	w1, #0x30                  	// #48
   151e0:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   151e4:	add	x0, x0, #0xbe0
   151e8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   151ec:	orr	x0, x0, x8
   151f0:	str	x0, [x1]
   151f4:	b	15184 <__sanitizer_cov_dump@@Base+0x15cc>
   151f8:	orr	x6, x6, x7
   151fc:	str	x6, [x9, #2104]
   15200:	add	x6, x3, x0, lsl #3
   15204:	str	xzr, [x6, #8]
   15208:	b	151a0 <__sanitizer_cov_dump@@Base+0x15e8>
   1520c:	add	x5, x19, x0, lsl #3
   15210:	add	x5, x5, #0x208, lsl #12
   15214:	add	x0, x2, x0
   15218:	add	x0, x11, x0, lsl #3
   1521c:	ldr	x7, [x5, #1592]
   15220:	ldr	x0, [x0, #8]
   15224:	orr	x0, x7, x0
   15228:	str	x0, [x5, #1592]
   1522c:	cbz	x6, 150d4 <__sanitizer_cov_dump@@Base+0x151c>
   15230:	rbit	x0, x6
   15234:	clz	x0, x0
   15238:	lsl	x5, x4, x0
   1523c:	bic	x6, x6, x5
   15240:	ldr	x7, [x1]
   15244:	orr	x5, x7, x5
   15248:	str	x5, [x1]
   1524c:	cmp	x7, x5
   15250:	b.eq	1520c <__sanitizer_cov_dump@@Base+0x1654>  // b.none
   15254:	add	x5, x1, x0, lsl #3
   15258:	str	xzr, [x5, #8]
   1525c:	b	1520c <__sanitizer_cov_dump@@Base+0x1654>
   15260:	ldr	x23, [x22]
   15264:	ldr	x0, [x20]
   15268:	ldr	x1, [x0]
   1526c:	mov	x0, x20
   15270:	blr	x1
   15274:	mov	w24, w0
   15278:	ldr	x0, [x20]
   1527c:	ldr	x1, [x0, #8]
   15280:	mov	x0, x20
   15284:	blr	x1
   15288:	mov	w4, w0
   1528c:	mov	w3, w24
   15290:	mov	x2, x23
   15294:	add	x1, x21, #0x8
   15298:	add	x0, x19, #0x10
   1529c:	bl	153f0 <__sanitizer_cov_dump@@Base+0x1838>
   152a0:	mov	x2, x22
   152a4:	mov	x1, x20
   152a8:	mov	x0, x19
   152ac:	bl	149ec <__sanitizer_cov_dump@@Base+0xe34>
   152b0:	dmb	ish
   152b4:	strb	wzr, [x19, #8]
   152b8:	ldp	x23, x24, [sp, #32]
   152bc:	b	14f70 <__sanitizer_cov_dump@@Base+0x13b8>
   152c0:	stp	x23, x24, [sp, #32]
   152c4:	mov	x20, x1
   152c8:	mov	x22, x2
   152cc:	ldr	x0, [x2]
   152d0:	cbz	x0, 152e4 <__sanitizer_cov_dump@@Base+0x172c>
   152d4:	ldr	x1, [x21, #528]
   152d8:	ldr	x2, [x19, #16]
   152dc:	cmp	x1, x2
   152e0:	b.eq	14f80 <__sanitizer_cov_dump@@Base+0x13c8>  // b.none
   152e4:	add	x0, x19, #0x8
   152e8:	mov	w2, #0x1                   	// #1
   152ec:	ldxrb	w1, [x0]
   152f0:	stxrb	w3, w2, [x0]
   152f4:	cbnz	w3, 152ec <__sanitizer_cov_dump@@Base+0x1734>
   152f8:	dmb	ish
   152fc:	and	w1, w1, #0xff
   15300:	cbnz	w1, 15000 <__sanitizer_cov_dump@@Base+0x1448>
   15304:	mov	x2, x22
   15308:	mov	x1, x21
   1530c:	mov	x0, x19
   15310:	bl	13f94 <__sanitizer_cov_dump@@Base+0x3dc>
   15314:	ldr	x0, [x22]
   15318:	ldr	x1, [x19, #16]
   1531c:	ldr	x3, [x21, #528]
   15320:	cmp	x1, x3
   15324:	b.ne	15008 <__sanitizer_cov_dump@@Base+0x1450>  // b.any
   15328:	cmp	x0, #0xfff
   1532c:	b.ls	15024 <__sanitizer_cov_dump@@Base+0x146c>  // b.plast
   15330:	and	x4, x0, #0xfffffffffffff000
   15334:	cmp	x1, x4
   15338:	b.ne	15044 <__sanitizer_cov_dump@@Base+0x148c>  // b.any
   1533c:	and	x3, x0, #0xfff
   15340:	ubfx	x5, x0, #6, #6
   15344:	and	x0, x0, #0x3f
   15348:	mov	x1, #0x1                   	// #1
   1534c:	lsl	x1, x1, x5
   15350:	ldr	x2, [x21, #8]
   15354:	tst	x1, x2
   15358:	b.ne	15060 <__sanitizer_cov_dump@@Base+0x14a8>  // b.any
   1535c:	add	x2, x19, #0x208, lsl #12
   15360:	add	x2, x2, #0x630
   15364:	str	xzr, [x2]
   15368:	add	x10, x19, #0x630
   1536c:	add	x2, x3, x3, lsl #6
   15370:	ldr	x4, [x10, x2, lsl #3]
   15374:	rbit	x2, x4
   15378:	clz	x2, x2
   1537c:	mov	x7, #0x0                   	// #0
   15380:	cbz	x4, 15094 <__sanitizer_cov_dump@@Base+0x14dc>
   15384:	mov	x9, #0x1                   	// #1
   15388:	add	x12, x19, #0x208, lsl #12
   1538c:	add	x12, x12, #0x630
   15390:	mov	x11, x10
   15394:	add	x3, x3, x3, lsl #6
   15398:	lsl	x6, x9, x2
   1539c:	bic	x4, x4, x6
   153a0:	orr	x8, x6, x7
   153a4:	bics	xzr, x6, x7
   153a8:	b.eq	153b4 <__sanitizer_cov_dump@@Base+0x17fc>  // b.none
   153ac:	add	x6, x12, x2, lsl #3
   153b0:	str	xzr, [x6, #8]
   153b4:	add	x6, x19, x2, lsl #3
   153b8:	add	x6, x6, #0x208, lsl #12
   153bc:	add	x2, x3, x2
   153c0:	add	x2, x11, x2, lsl #3
   153c4:	ldr	x7, [x6, #1592]
   153c8:	ldr	x2, [x2, #8]
   153cc:	orr	x2, x7, x2
   153d0:	str	x2, [x6, #1592]
   153d4:	cbz	x4, 15088 <__sanitizer_cov_dump@@Base+0x14d0>
   153d8:	rbit	x2, x4
   153dc:	clz	x2, x2
   153e0:	mov	x7, x8
   153e4:	b	15398 <__sanitizer_cov_dump@@Base+0x17e0>
   153e8:	ldp	x23, x24, [sp, #32]
   153ec:	b	14f70 <__sanitizer_cov_dump@@Base+0x13b8>
   153f0:	sub	sp, sp, #0x150
   153f4:	str	x30, [sp]
   153f8:	ldr	x5, [x0]
   153fc:	ldr	x6, [x1, #520]
   15400:	cmp	x5, x6
   15404:	b.eq	15418 <__sanitizer_cov_dump@@Base+0x1860>  // b.none
   15408:	str	xzr, [x1]
   1540c:	str	x5, [x1, #520]
   15410:	str	xzr, [x1, #1040]
   15414:	str	xzr, [x1, #1560]
   15418:	cmp	x2, #0xfff
   1541c:	b.ls	154b8 <__sanitizer_cov_dump@@Base+0x1900>  // b.plast
   15420:	ldr	x5, [x0]
   15424:	and	x6, x2, #0xfffffffffffff000
   15428:	cmp	x5, x6
   1542c:	b.ne	154d8 <__sanitizer_cov_dump@@Base+0x1920>  // b.any
   15430:	ldr	x6, [x1, #520]
   15434:	cmp	x6, x5
   15438:	b.ne	154f8 <__sanitizer_cov_dump@@Base+0x1940>  // b.any
   1543c:	add	x5, x0, #0x208, lsl #12
   15440:	add	x5, x5, #0x620
   15444:	str	xzr, [x5]
   15448:	ldr	x6, [x1]
   1544c:	rbit	x5, x6
   15450:	clz	x5, x5
   15454:	cbz	x6, 15518 <__sanitizer_cov_dump@@Base+0x1960>
   15458:	mov	x10, #0x1                   	// #1
   1545c:	add	x9, x0, #0x208, lsl #12
   15460:	add	x9, x9, #0x620
   15464:	lsl	x7, x10, x5
   15468:	bic	x6, x6, x7
   1546c:	ldr	x8, [x9]
   15470:	orr	x7, x8, x7
   15474:	str	x7, [x9]
   15478:	cmp	x8, x7
   1547c:	b.eq	15488 <__sanitizer_cov_dump@@Base+0x18d0>  // b.none
   15480:	add	x7, x9, x5, lsl #3
   15484:	str	xzr, [x7, #8]
   15488:	lsl	x5, x5, #3
   1548c:	add	x7, x0, x5
   15490:	add	x7, x7, #0x208, lsl #12
   15494:	add	x5, x1, x5
   15498:	ldr	x8, [x7, #1576]
   1549c:	ldr	x5, [x5, #8]
   154a0:	orr	x5, x8, x5
   154a4:	str	x5, [x7, #1576]
   154a8:	cbz	x6, 15518 <__sanitizer_cov_dump@@Base+0x1960>
   154ac:	rbit	x5, x6
   154b0:	clz	x5, x5
   154b4:	b	15464 <__sanitizer_cov_dump@@Base+0x18ac>
   154b8:	mov	x4, #0x1000                	// #4096
   154bc:	mov	x3, x2
   154c0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   154c4:	add	x2, x2, #0xb10
   154c8:	mov	w1, #0x172                 	// #370
   154cc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   154d0:	add	x0, x0, #0xb28
   154d4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   154d8:	mov	x4, x6
   154dc:	mov	x3, x5
   154e0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   154e4:	add	x2, x2, #0xe40
   154e8:	mov	w1, #0x173                 	// #371
   154ec:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   154f0:	add	x0, x0, #0xb28
   154f4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   154f8:	mov	x4, x5
   154fc:	mov	x3, x6
   15500:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15504:	add	x2, x2, #0xe70
   15508:	mov	w1, #0x6c                  	// #108
   1550c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15510:	add	x0, x0, #0xb28
   15514:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15518:	and	x5, x2, #0xfff
   1551c:	ubfx	x14, x2, #6, #6
   15520:	mov	x6, #0x1                   	// #1
   15524:	lsl	x17, x6, x14
   15528:	lsl	x11, x6, x2
   1552c:	mov	x12, #0x0                   	// #0
   15530:	add	x6, x0, #0x208, lsl #12
   15534:	add	x6, x6, #0x620
   15538:	mov	x13, #0x1                   	// #1
   1553c:	add	x18, x0, #0x620
   15540:	add	x30, sp, #0x10
   15544:	ldr	x9, [x6]
   15548:	cbnz	x9, 15594 <__sanitizer_cov_dump@@Base+0x19dc>
   1554c:	cbz	x12, 156dc <__sanitizer_cov_dump@@Base+0x1b24>
   15550:	mov	x6, #0x1                   	// #1
   15554:	add	x14, x0, #0x410, lsl #12
   15558:	mov	x15, #0x1ffff               	// #131071
   1555c:	add	x17, sp, #0x10
   15560:	and	w13, w5, #0xffff
   15564:	mov	x16, #0x10a3                	// #4259
   15568:	movk	x16, #0x2, lsl #16
   1556c:	mov	w18, #0x0                   	// #0
   15570:	add	x8, x1, #0x418
   15574:	ldr	x7, [x14, #2608]
   15578:	cmp	x7, x15
   1557c:	b.ls	15664 <__sanitizer_cov_dump@@Base+0x1aac>  // b.plast
   15580:	add	x2, x6, #0x1
   15584:	cmp	x12, x6
   15588:	b.eq	156dc <__sanitizer_cov_dump@@Base+0x1b24>  // b.none
   1558c:	mov	x6, x2
   15590:	b	15574 <__sanitizer_cov_dump@@Base+0x19bc>
   15594:	rbit	x2, x9
   15598:	clz	x2, x2
   1559c:	lsl	x15, x13, x2
   155a0:	bic	x7, x9, x15
   155a4:	str	x7, [x6]
   155a8:	add	x7, x0, x2, lsl #3
   155ac:	add	x8, x7, #0x208, lsl #12
   155b0:	ldr	x10, [x8, #1576]
   155b4:	cbz	x10, 1561c <__sanitizer_cov_dump@@Base+0x1a64>
   155b8:	rbit	x16, x10
   155bc:	clz	x16, x16
   155c0:	lsl	x8, x13, x16
   155c4:	bic	x8, x10, x8
   155c8:	add	x7, x7, #0x208, lsl #12
   155cc:	str	x8, [x7, #1576]
   155d0:	cbnz	x8, 1563c <__sanitizer_cov_dump@@Base+0x1a84>
   155d4:	add	x2, x16, x2, lsl #6
   155d8:	add	x7, x2, x2, lsl #6
   155dc:	add	x7, x0, x7, lsl #3
   155e0:	ldr	x8, [x7, #1568]
   155e4:	tst	x8, x17
   155e8:	b.eq	15648 <__sanitizer_cov_dump@@Base+0x1a90>  // b.none
   155ec:	add	x7, x2, x2, lsl #6
   155f0:	add	x7, x7, x14
   155f4:	add	x7, x18, x7, lsl #3
   155f8:	ldr	x9, [x7, #8]
   155fc:	orr	x8, x9, x11
   15600:	str	x8, [x7, #8]
   15604:	cmp	x12, #0x27
   15608:	ccmp	x9, x8, #0x4, ls  // ls = plast
   1560c:	b.eq	15544 <__sanitizer_cov_dump@@Base+0x198c>  // b.none
   15610:	str	x2, [x30, x12, lsl #3]
   15614:	add	x12, x12, #0x1
   15618:	b	15544 <__sanitizer_cov_dump@@Base+0x198c>
   1561c:	mov	x4, #0x0                   	// #0
   15620:	mov	x3, #0x0                   	// #0
   15624:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   15628:	add	x2, x2, #0xb40
   1562c:	mov	w1, #0x30                  	// #48
   15630:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15634:	add	x0, x0, #0xbe0
   15638:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1563c:	orr	x9, x9, x15
   15640:	str	x9, [x6]
   15644:	b	155d4 <__sanitizer_cov_dump@@Base+0x1a1c>
   15648:	orr	x8, x8, x17
   1564c:	str	x8, [x7, #1568]
   15650:	add	x7, x2, x2, lsl #6
   15654:	add	x7, x7, x14
   15658:	add	x7, x18, x7, lsl #3
   1565c:	str	xzr, [x7, #8]
   15660:	b	155ec <__sanitizer_cov_dump@@Base+0x1a34>
   15664:	add	x2, x17, x6, lsl #3
   15668:	ldur	x10, [x2, #-8]
   1566c:	and	w30, w10, #0xffff
   15670:	ldr	x11, [x1, #1560]
   15674:	cbz	x11, 156d4 <__sanitizer_cov_dump@@Base+0x1b1c>
   15678:	mov	x2, x9
   1567c:	lsl	x5, x2, #3
   15680:	ldr	w5, [x8, x5]
   15684:	cmp	w5, w10
   15688:	b.eq	156a0 <__sanitizer_cov_dump@@Base+0x1ae8>  // b.none
   1568c:	add	x2, x2, #0x1
   15690:	cmp	x2, x11
   15694:	b.ne	1567c <__sanitizer_cov_dump@@Base+0x1ac4>  // b.any
   15698:	mov	w10, w18
   1569c:	b	156a8 <__sanitizer_cov_dump@@Base+0x1af0>
   156a0:	add	x2, x1, x2, lsl #3
   156a4:	ldr	w10, [x2, #1052]
   156a8:	add	x2, x7, #0x1
   156ac:	str	x2, [x14, #2608]
   156b0:	add	x2, x7, x16
   156b4:	lsl	x2, x2, #4
   156b8:	add	x5, x0, x2
   156bc:	strh	w30, [x0, x2]
   156c0:	strh	w13, [x5, #2]
   156c4:	str	w10, [x5, #4]
   156c8:	str	w3, [x5, #8]
   156cc:	str	w4, [x5, #12]
   156d0:	b	15580 <__sanitizer_cov_dump@@Base+0x19c8>
   156d4:	mov	w10, w18
   156d8:	b	156a8 <__sanitizer_cov_dump@@Base+0x1af0>
   156dc:	mov	x0, x12
   156e0:	ldr	x30, [sp]
   156e4:	add	sp, sp, #0x150
   156e8:	ret
   156ec:	stp	x19, x20, [sp, #-112]!
   156f0:	str	x30, [sp, #80]
   156f4:	mov	x20, x0
   156f8:	mov	x0, x4
   156fc:	cbnz	x4, 1570c <__sanitizer_cov_dump@@Base+0x1b54>
   15700:	ldr	x30, [sp, #80]
   15704:	ldp	x19, x20, [sp], #112
   15708:	ret
   1570c:	stp	x21, x22, [sp, #16]
   15710:	stp	x23, x24, [sp, #32]
   15714:	mov	x22, x2
   15718:	mov	x23, x3
   1571c:	str	x1, [x3]
   15720:	cmp	x1, #0x1, lsl #12
   15724:	b.hi	157a0 <__sanitizer_cov_dump@@Base+0x1be8>  // b.pmore
   15728:	lsr	x3, x1, #12
   1572c:	ubfx	x4, x1, #6, #6
   15730:	mov	x2, #0x1                   	// #1
   15734:	lsl	x2, x2, x4
   15738:	ldr	x5, [x22, x3, lsl #3]
   1573c:	tst	x2, x5
   15740:	b.ne	157c8 <__sanitizer_cov_dump@@Base+0x1c10>  // b.any
   15744:	stp	x25, x26, [sp, #48]
   15748:	stp	x27, x28, [sp, #64]
   1574c:	add	x2, x1, x1, lsl #6
   15750:	add	x2, x2, #0x1
   15754:	str	x2, [sp, #104]
   15758:	mov	x24, #0x0                   	// #0
   1575c:	mov	x26, #0x0                   	// #0
   15760:	mov	x27, #0x0                   	// #0
   15764:	mov	x25, #0x0                   	// #0
   15768:	mov	x28, #0x1                   	// #1
   1576c:	add	x1, x1, x1, lsl #6
   15770:	lsl	x19, x1, #3
   15774:	sub	x21, x0, #0x1
   15778:	cbnz	x26, 157f4 <__sanitizer_cov_dump@@Base+0x1c3c>
   1577c:	cbnz	x25, 15788 <__sanitizer_cov_dump@@Base+0x1bd0>
   15780:	ldr	x0, [x20, x19]
   15784:	cbnz	x0, 15890 <__sanitizer_cov_dump@@Base+0x1cd8>
   15788:	mov	x0, x26
   1578c:	ldp	x21, x22, [sp, #16]
   15790:	ldp	x23, x24, [sp, #32]
   15794:	ldp	x25, x26, [sp, #48]
   15798:	ldp	x27, x28, [sp, #64]
   1579c:	b	15700 <__sanitizer_cov_dump@@Base+0x1b48>
   157a0:	stp	x25, x26, [sp, #48]
   157a4:	stp	x27, x28, [sp, #64]
   157a8:	mov	x4, #0x1000                	// #4096
   157ac:	mov	x3, x1
   157b0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   157b4:	add	x2, x2, #0xc20
   157b8:	mov	w1, #0x143                 	// #323
   157bc:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   157c0:	add	x0, x0, #0xbe0
   157c4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   157c8:	mov	x5, #0x1                   	// #1
   157cc:	lsl	x5, x5, x1
   157d0:	add	x2, x4, x3, lsl #6
   157d4:	add	x2, x22, x2, lsl #3
   157d8:	ldr	x2, [x2, #8]
   157dc:	tst	x5, x2
   157e0:	b.eq	15744 <__sanitizer_cov_dump@@Base+0x1b8c>  // b.none
   157e4:	mov	x0, #0x1                   	// #1
   157e8:	ldp	x21, x22, [sp, #16]
   157ec:	ldp	x23, x24, [sp, #32]
   157f0:	b	15700 <__sanitizer_cov_dump@@Base+0x1b48>
   157f4:	cbnz	x24, 1581c <__sanitizer_cov_dump@@Base+0x1c64>
   157f8:	rbit	x27, x26
   157fc:	clz	x27, x27
   15800:	lsl	x0, x28, x27
   15804:	bic	x26, x26, x0
   15808:	ldr	x0, [sp, #104]
   1580c:	add	x0, x0, x25, lsl #6
   15810:	add	x0, x0, x27
   15814:	ldr	x24, [x20, x0, lsl #3]
   15818:	cbz	x24, 15870 <__sanitizer_cov_dump@@Base+0x1cb8>
   1581c:	rbit	x0, x24
   15820:	clz	x0, x0
   15824:	lsl	x1, x28, x0
   15828:	bic	x24, x24, x1
   1582c:	add	x1, x27, x25, lsl #6
   15830:	orr	x2, x26, x24
   15834:	cmp	x2, #0x0
   15838:	cinc	x25, x25, eq  // eq = none
   1583c:	mov	x4, x21
   15840:	add	x3, x23, #0x8
   15844:	mov	x2, x22
   15848:	add	x1, x0, x1, lsl #6
   1584c:	mov	x0, x20
   15850:	bl	156ec <__sanitizer_cov_dump@@Base+0x1b34>
   15854:	cbz	x0, 15778 <__sanitizer_cov_dump@@Base+0x1bc0>
   15858:	add	x0, x0, #0x1
   1585c:	ldp	x21, x22, [sp, #16]
   15860:	ldp	x23, x24, [sp, #32]
   15864:	ldp	x25, x26, [sp, #48]
   15868:	ldp	x27, x28, [sp, #64]
   1586c:	b	15700 <__sanitizer_cov_dump@@Base+0x1b48>
   15870:	mov	x4, #0x0                   	// #0
   15874:	mov	x3, #0x0                   	// #0
   15878:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1587c:	add	x2, x2, #0xe90
   15880:	mov	w1, #0x132                 	// #306
   15884:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15888:	add	x0, x0, #0xbe0
   1588c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15890:	mov	x26, x25
   15894:	cbnz	x24, 1581c <__sanitizer_cov_dump@@Base+0x1c64>
   15898:	mov	x26, x0
   1589c:	mov	x25, x24
   158a0:	b	157f8 <__sanitizer_cov_dump@@Base+0x1c40>
   158a4:	str	x30, [sp, #-16]!
   158a8:	mov	x4, #0x0                   	// #0
   158ac:	mov	x3, #0x0                   	// #0
   158b0:	mov	x2, x1
   158b4:	mov	x1, x0
   158b8:	mov	w0, #0x2                   	// #2
   158bc:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x5264>
   158c0:	ldr	x30, [sp], #16
   158c4:	ret
   158c8:	stp	x19, x30, [sp, #-16]!
   158cc:	mov	x19, x0
   158d0:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   158d4:	mov	x2, x0
   158d8:	mov	x1, x19
   158dc:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   158e0:	add	x0, x0, #0x3d0
   158e4:	bl	1ba40 <__sanitizer_set_report_fd@@Base+0x5690>
   158e8:	ldp	x19, x30, [sp], #16
   158ec:	ret
   158f0:	stp	x19, x20, [sp, #-32]!
   158f4:	str	x30, [sp, #24]
   158f8:	mov	x19, x0
   158fc:	ldr	x0, [x0]
   15900:	ldrb	w3, [x0]
   15904:	and	x3, x3, #0xff
   15908:	cmp	x3, #0x1
   1590c:	b.ne	159d8 <__sanitizer_cov_dump@@Base+0x1e20>  // b.any
   15910:	ldr	w0, [x19, #8]
   15914:	sub	w0, w0, #0x1
   15918:	cmp	w0, #0x1
   1591c:	b.ls	159cc <__sanitizer_cov_dump@@Base+0x1e14>  // b.plast
   15920:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   15924:	mov	x20, x0
   15928:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1592c:	ldr	x0, [x0, #3560]
   15930:	ldr	x0, [x0]
   15934:	cmp	x0, x20
   15938:	b.eq	159f8 <__sanitizer_cov_dump@@Base+0x1e40>  // b.none
   1593c:	ldr	w0, [x19, #8]
   15940:	cmn	w0, #0x1
   15944:	b.eq	15a08 <__sanitizer_cov_dump@@Base+0x1e50>  // b.none
   15948:	ldr	x1, [x19, #8208]
   1594c:	cmp	x1, x20
   15950:	b.eq	159cc <__sanitizer_cov_dump@@Base+0x1e14>  // b.none
   15954:	str	x21, [sp, #16]
   15958:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   1595c:	bl	12ca8 <__sancov_default_options@@Base+0x2924>
   15960:	mov	x4, x0
   15964:	cmp	x0, #0x0
   15968:	cset	w1, ne  // ne = any
   1596c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15970:	ldr	x0, [x0, #4040]
   15974:	ldrb	w0, [x0, #48]
   15978:	tst	w1, w0
   1597c:	b.ne	15a10 <__sanitizer_cov_dump@@Base+0x1e58>  // b.any
   15980:	mov	x4, x20
   15984:	add	x3, x19, #0xc
   15988:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1598c:	add	x2, x2, #0xec0
   15990:	mov	x1, #0x1000                	// #4096
   15994:	add	x0, x19, #0x1, lsl #12
   15998:	add	x0, x0, #0xc
   1599c:	bl	1d534 <OnPrint@@Base+0x4>
   159a0:	add	x21, x19, #0x1, lsl #12
   159a4:	add	x21, x21, #0xc
   159a8:	mov	x2, #0x0                   	// #0
   159ac:	mov	w1, #0x1                   	// #1
   159b0:	mov	x0, x21
   159b4:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x51b0>
   159b8:	str	w0, [x19, #8]
   159bc:	cmn	w0, #0x1
   159c0:	b.eq	15a34 <__sanitizer_cov_dump@@Base+0x1e7c>  // b.none
   159c4:	str	x20, [x19, #8208]
   159c8:	ldr	x21, [sp, #16]
   159cc:	ldr	x30, [sp, #24]
   159d0:	ldp	x19, x20, [sp], #32
   159d4:	ret
   159d8:	str	x21, [sp, #16]
   159dc:	mov	x4, #0x1                   	// #1
   159e0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   159e4:	add	x2, x2, #0x850
   159e8:	mov	w1, #0x2a                  	// #42
   159ec:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   159f0:	add	x0, x0, #0x888
   159f4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   159f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   159fc:	ldr	x0, [x0, #3544]
   15a00:	ldr	x20, [x0]
   15a04:	b	1593c <__sanitizer_cov_dump@@Base+0x1d84>
   15a08:	str	x21, [sp, #16]
   15a0c:	b	1595c <__sanitizer_cov_dump@@Base+0x1da4>
   15a10:	mov	x5, x20
   15a14:	add	x3, x19, #0xc
   15a18:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15a1c:	add	x2, x2, #0xeb0
   15a20:	mov	x1, #0x1000                	// #4096
   15a24:	add	x0, x19, #0x1, lsl #12
   15a28:	add	x0, x0, #0xc
   15a2c:	bl	1d534 <OnPrint@@Base+0x4>
   15a30:	b	159a0 <__sanitizer_cov_dump@@Base+0x1de8>
   15a34:	adrp	x19, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15a38:	add	x19, x19, #0xec8
   15a3c:	mov	x0, x19
   15a40:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   15a44:	mov	x4, #0x0                   	// #0
   15a48:	mov	x3, #0x0                   	// #0
   15a4c:	mov	x2, x0
   15a50:	mov	x1, x19
   15a54:	mov	w0, #0x2                   	// #2
   15a58:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x5264>
   15a5c:	mov	x0, x21
   15a60:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   15a64:	mov	x4, #0x0                   	// #0
   15a68:	mov	x3, #0x0                   	// #0
   15a6c:	mov	x2, x0
   15a70:	mov	x1, x21
   15a74:	mov	w0, #0x2                   	// #2
   15a78:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x5264>
   15a7c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   15a80:	cbz	x1, 15b9c <__sanitizer_cov_dump@@Base+0x1fe4>
   15a84:	sub	sp, sp, #0x30
   15a88:	stp	x19, x20, [sp, #16]
   15a8c:	stp	x21, x30, [sp, #32]
   15a90:	mov	x19, x0
   15a94:	mov	x20, x1
   15a98:	mov	x0, x1
   15a9c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   15aa0:	cmp	x0, #0xf9c
   15aa4:	b.hi	15b18 <__sanitizer_cov_dump@@Base+0x1f60>  // b.pmore
   15aa8:	ldr	x21, [x19]
   15aac:	mov	w1, #0x1                   	// #1
   15ab0:	ldxrb	w0, [x21]
   15ab4:	stxrb	w2, w1, [x21]
   15ab8:	cbnz	w2, 15ab0 <__sanitizer_cov_dump@@Base+0x1ef8>
   15abc:	dmb	ish
   15ac0:	and	w0, w0, #0xff
   15ac4:	cbnz	w0, 15b4c <__sanitizer_cov_dump@@Base+0x1f94>
   15ac8:	ldr	w0, [x19, #8]
   15acc:	sub	w1, w0, #0x1
   15ad0:	cmp	w1, #0x1
   15ad4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   15ad8:	b.ne	15b58 <__sanitizer_cov_dump@@Base+0x1fa0>  // b.any
   15adc:	mov	w0, #0xffffffff            	// #-1
   15ae0:	str	w0, [x19, #8]
   15ae4:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15ae8:	add	x1, x1, #0xf18
   15aec:	mov	x0, x20
   15af0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   15af4:	cbnz	w0, 15b60 <__sanitizer_cov_dump@@Base+0x1fa8>
   15af8:	mov	w0, #0x1                   	// #1
   15afc:	str	w0, [x19, #8]
   15b00:	dmb	ish
   15b04:	strb	wzr, [x21]
   15b08:	ldp	x19, x20, [sp, #16]
   15b0c:	ldp	x21, x30, [sp, #32]
   15b10:	add	sp, sp, #0x30
   15b14:	ret
   15b18:	ldrb	w0, [x20, #7]
   15b1c:	str	w0, [sp]
   15b20:	ldrb	w7, [x20, #6]
   15b24:	ldrb	w6, [x20, #5]
   15b28:	ldrb	w5, [x20, #4]
   15b2c:	ldrb	w4, [x20, #3]
   15b30:	ldrb	w3, [x20, #2]
   15b34:	ldrb	w2, [x20, #1]
   15b38:	ldrb	w1, [x20]
   15b3c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15b40:	add	x0, x0, #0xee8
   15b44:	bl	1d908 <OnPrint@@Base+0x3d8>
   15b48:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   15b4c:	mov	x0, x21
   15b50:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   15b54:	b	15ac8 <__sanitizer_cov_dump@@Base+0x1f10>
   15b58:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   15b5c:	b	15adc <__sanitizer_cov_dump@@Base+0x1f24>
   15b60:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15b64:	add	x1, x1, #0xf20
   15b68:	mov	x0, x20
   15b6c:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   15b70:	cbnz	w0, 15b80 <__sanitizer_cov_dump@@Base+0x1fc8>
   15b74:	mov	w0, #0x2                   	// #2
   15b78:	str	w0, [x19, #8]
   15b7c:	b	15b00 <__sanitizer_cov_dump@@Base+0x1f48>
   15b80:	mov	x3, x20
   15b84:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   15b88:	add	x2, x2, #0xd50
   15b8c:	mov	x1, #0x1000                	// #4096
   15b90:	add	x0, x19, #0xc
   15b94:	bl	1d534 <OnPrint@@Base+0x4>
   15b98:	b	15b00 <__sanitizer_cov_dump@@Base+0x1f48>
   15b9c:	ret
   15ba0:	stp	x19, x20, [sp, #-128]!
   15ba4:	str	x30, [sp, #80]
   15ba8:	str	x0, [sp, #104]
   15bac:	str	xzr, [x1]
   15bb0:	str	xzr, [x2]
   15bb4:	str	xzr, [x3]
   15bb8:	mov	w19, #0x1                   	// #1
   15bbc:	cbz	x4, 15c90 <__sanitizer_cov_dump@@Base+0x20d8>
   15bc0:	stp	x21, x22, [sp, #16]
   15bc4:	stp	x23, x24, [sp, #32]
   15bc8:	stp	x25, x26, [sp, #48]
   15bcc:	stp	x27, x28, [sp, #64]
   15bd0:	mov	x23, x1
   15bd4:	mov	x27, x2
   15bd8:	mov	x21, x3
   15bdc:	mov	x24, x4
   15be0:	mov	x25, x5
   15be4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15be8:	ldr	x0, [x0, #4000]
   15bec:	ldr	x0, [x0]
   15bf0:	cbz	x0, 15c18 <__sanitizer_cov_dump@@Base+0x2060>
   15bf4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15bf8:	ldr	x0, [x0, #4000]
   15bfc:	ldr	x20, [x0]
   15c00:	cmp	x20, x24
   15c04:	csel	x20, x20, x24, ls  // ls = plast
   15c08:	adrp	x28, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15c0c:	add	x28, x28, #0xf28
   15c10:	add	x26, sp, #0x78
   15c14:	b	15cb4 <__sanitizer_cov_dump@@Base+0x20fc>
   15c18:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   15c1c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15c20:	ldr	x1, [x1, #4000]
   15c24:	str	x0, [x1]
   15c28:	b	15bf4 <__sanitizer_cov_dump@@Base+0x203c>
   15c2c:	ldr	x1, [x27]
   15c30:	ldr	x0, [x23]
   15c34:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   15c38:	mov	w19, #0x0                   	// #0
   15c3c:	ldp	x21, x22, [sp, #16]
   15c40:	ldp	x23, x24, [sp, #32]
   15c44:	ldp	x25, x26, [sp, #48]
   15c48:	ldp	x27, x28, [sp, #64]
   15c4c:	b	15c90 <__sanitizer_cov_dump@@Base+0x20d8>
   15c50:	ldr	x1, [x27]
   15c54:	ldr	x0, [x23]
   15c58:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   15c5c:	mov	w0, w22
   15c60:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   15c64:	ldp	x21, x22, [sp, #16]
   15c68:	ldp	x23, x24, [sp, #32]
   15c6c:	ldp	x25, x26, [sp, #48]
   15c70:	ldp	x27, x28, [sp, #64]
   15c74:	b	15c90 <__sanitizer_cov_dump@@Base+0x20d8>
   15c78:	mov	w0, w22
   15c7c:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   15c80:	ldp	x21, x22, [sp, #16]
   15c84:	ldp	x23, x24, [sp, #32]
   15c88:	ldp	x25, x26, [sp, #48]
   15c8c:	ldp	x27, x28, [sp, #64]
   15c90:	mov	w0, w19
   15c94:	ldr	x30, [sp, #80]
   15c98:	ldp	x19, x20, [sp], #128
   15c9c:	ret
   15ca0:	mov	w0, w22
   15ca4:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   15ca8:	lsl	x20, x20, #1
   15cac:	cmp	x20, x24
   15cb0:	csel	x20, x20, x24, ls  // ls = plast
   15cb4:	ldr	x1, [x27]
   15cb8:	ldr	x0, [x23]
   15cbc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   15cc0:	mov	w2, #0x0                   	// #0
   15cc4:	mov	x1, x28
   15cc8:	mov	x0, x20
   15ccc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   15cd0:	str	x0, [x23]
   15cd4:	str	x20, [x27]
   15cd8:	mov	x2, x25
   15cdc:	mov	w1, #0x0                   	// #0
   15ce0:	ldr	x0, [sp, #104]
   15ce4:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x51b0>
   15ce8:	mov	w22, w0
   15cec:	cmn	w0, #0x1
   15cf0:	b.eq	15c2c <__sanitizer_cov_dump@@Base+0x2074>  // b.none
   15cf4:	str	xzr, [x21]
   15cf8:	cbz	x20, 15ca0 <__sanitizer_cov_dump@@Base+0x20e8>
   15cfc:	mov	x1, #0x0                   	// #0
   15d00:	ldr	x0, [x23]
   15d04:	mov	x4, x25
   15d08:	mov	x3, x26
   15d0c:	sub	x2, x20, x1
   15d10:	add	x1, x0, x1
   15d14:	mov	w0, w22
   15d18:	bl	1b5d0 <__sanitizer_set_report_fd@@Base+0x5220>
   15d1c:	ands	w19, w0, #0xff
   15d20:	b.eq	15c50 <__sanitizer_cov_dump@@Base+0x2098>  // b.none
   15d24:	ldr	x0, [sp, #120]
   15d28:	ldr	x1, [x21]
   15d2c:	add	x1, x0, x1
   15d30:	str	x1, [x21]
   15d34:	cmp	x0, #0x0
   15d38:	cset	w19, eq  // eq = none
   15d3c:	cmp	x1, x24
   15d40:	csinc	w19, w19, wzr, ne  // ne = any
   15d44:	cbnz	w19, 15c78 <__sanitizer_cov_dump@@Base+0x20c0>
   15d48:	cmp	x1, x20
   15d4c:	b.cc	15d00 <__sanitizer_cov_dump@@Base+0x2148>  // b.lo, b.ul, b.last
   15d50:	b	15ca0 <__sanitizer_cov_dump@@Base+0x20e8>
   15d54:	stp	x19, x20, [sp, #-144]!
   15d58:	stp	x21, x22, [sp, #16]
   15d5c:	str	x30, [sp, #80]
   15d60:	str	xzr, [x1, #16]
   15d64:	cbz	x2, 160a8 <__sanitizer_cov_dump@@Base+0x24f0>
   15d68:	stp	x23, x24, [sp, #32]
   15d6c:	stp	x25, x26, [sp, #48]
   15d70:	stp	x27, x28, [sp, #64]
   15d74:	mov	x20, x0
   15d78:	mov	x19, x1
   15d7c:	mov	x21, x2
   15d80:	mov	x23, x3
   15d84:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15d88:	ldr	x0, [x0, #4000]
   15d8c:	ldr	x0, [x0]
   15d90:	cbz	x0, 15de0 <__sanitizer_cov_dump@@Base+0x2228>
   15d94:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15d98:	ldr	x0, [x0, #4000]
   15d9c:	ldr	x27, [x0]
   15da0:	mov	x2, x23
   15da4:	mov	w1, #0x0                   	// #0
   15da8:	mov	x0, x20
   15dac:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x51b0>
   15db0:	mov	w25, w0
   15db4:	cmn	w0, #0x1
   15db8:	b.eq	160c0 <__sanitizer_cov_dump@@Base+0x2508>  // b.none
   15dbc:	mov	x20, #0x0                   	// #0
   15dc0:	adrp	x28, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15dc4:	ldr	x0, [x28, #4000]
   15dc8:	str	x0, [sp, #104]
   15dcc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   15dd0:	add	x0, x0, #0x650
   15dd4:	str	x0, [sp, #112]
   15dd8:	add	x26, sp, #0x88
   15ddc:	b	15e88 <__sanitizer_cov_dump@@Base+0x22d0>
   15de0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   15de4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15de8:	ldr	x1, [x1, #4000]
   15dec:	str	x0, [x1]
   15df0:	b	15d94 <__sanitizer_cov_dump@@Base+0x21dc>
   15df4:	lsl	x22, x20, #1
   15df8:	cmp	x22, x27
   15dfc:	csel	x22, x22, x27, cs  // cs = hs, nlast
   15e00:	cmp	x22, x21
   15e04:	csel	x22, x22, x21, ls  // ls = plast
   15e08:	cmp	x0, x22
   15e0c:	b.cs	15e34 <__sanitizer_cov_dump@@Base+0x227c>  // b.hs, b.nlast
   15e10:	ldr	x0, [x19, #8]
   15e14:	cmp	x0, x22
   15e18:	b.cc	15e9c <__sanitizer_cov_dump@@Base+0x22e4>  // b.lo, b.ul, b.last
   15e1c:	ldr	x0, [x19, #16]
   15e20:	ldr	x3, [x19]
   15e24:	sub	x2, x22, x0
   15e28:	mov	w1, #0x0                   	// #0
   15e2c:	add	x0, x3, x0
   15e30:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   15e34:	str	x22, [x19, #16]
   15e38:	mov	x2, x22
   15e3c:	cmp	x22, x20
   15e40:	b.ls	15f48 <__sanitizer_cov_dump@@Base+0x2390>  // b.plast
   15e44:	cmp	x21, x2
   15e48:	b.cc	15f68 <__sanitizer_cov_dump@@Base+0x23b0>  // b.lo, b.ul, b.last
   15e4c:	ldr	x1, [x19]
   15e50:	mov	x4, x23
   15e54:	mov	x3, x26
   15e58:	sub	x2, x2, x20
   15e5c:	add	x1, x1, x20
   15e60:	mov	w0, w25
   15e64:	bl	1b5d0 <__sanitizer_set_report_fd@@Base+0x5220>
   15e68:	ands	w22, w0, #0xff
   15e6c:	b.eq	15f88 <__sanitizer_cov_dump@@Base+0x23d0>  // b.none
   15e70:	ldr	x0, [sp, #136]
   15e74:	add	x24, x0, x20
   15e78:	cbz	x0, 15fa0 <__sanitizer_cov_dump@@Base+0x23e8>
   15e7c:	cmp	x21, x24
   15e80:	b.ls	15fa4 <__sanitizer_cov_dump@@Base+0x23ec>  // b.plast
   15e84:	mov	x20, x24
   15e88:	ldr	x0, [x19, #16]
   15e8c:	cmp	x0, x20
   15e90:	b.ls	15df4 <__sanitizer_cov_dump@@Base+0x223c>  // b.plast
   15e94:	ldr	x2, [x19, #16]
   15e98:	b	15e44 <__sanitizer_cov_dump@@Base+0x228c>
   15e9c:	cbz	x22, 15f08 <__sanitizer_cov_dump@@Base+0x2350>
   15ea0:	ldr	x0, [sp, #104]
   15ea4:	ldr	x0, [x0]
   15ea8:	cbz	x0, 15f28 <__sanitizer_cov_dump@@Base+0x2370>
   15eac:	ldr	x0, [x28, #4000]
   15eb0:	ldr	x0, [x0]
   15eb4:	sub	x24, x0, #0x1
   15eb8:	tst	x0, x24
   15ebc:	b.ne	15f38 <__sanitizer_cov_dump@@Base+0x2380>  // b.any
   15ec0:	add	x24, x22, x24
   15ec4:	neg	x0, x0
   15ec8:	and	x24, x24, x0
   15ecc:	mov	w2, #0x0                   	// #0
   15ed0:	ldr	x1, [sp, #112]
   15ed4:	mov	x0, x24
   15ed8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   15edc:	str	x0, [sp, #120]
   15ee0:	ldr	x2, [x19, #16]
   15ee4:	ldr	x1, [x19]
   15ee8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   15eec:	ldr	x1, [x19, #8]
   15ef0:	ldr	x0, [x19]
   15ef4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   15ef8:	ldr	x0, [sp, #120]
   15efc:	str	x0, [x19]
   15f00:	str	x24, [x19, #8]
   15f04:	b	15e1c <__sanitizer_cov_dump@@Base+0x2264>
   15f08:	mov	x4, #0x0                   	// #0
   15f0c:	mov	x3, #0x0                   	// #0
   15f10:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15f14:	add	x2, x2, #0xf40
   15f18:	mov	w1, #0x1fc                 	// #508
   15f1c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   15f20:	add	x0, x0, #0x520
   15f24:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15f28:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   15f2c:	ldr	x1, [x28, #4000]
   15f30:	str	x0, [x1]
   15f34:	b	15eac <__sanitizer_cov_dump@@Base+0x22f4>
   15f38:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   15f3c:	add	x0, x0, #0x638
   15f40:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   15f44:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   15f48:	mov	x4, x22
   15f4c:	mov	x3, x20
   15f50:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15f54:	add	x2, x2, #0xf60
   15f58:	mov	w1, #0x98                  	// #152
   15f5c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15f60:	add	x0, x0, #0xf80
   15f64:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15f68:	mov	x4, x21
   15f6c:	mov	x3, x2
   15f70:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15f74:	add	x2, x2, #0xfc0
   15f78:	mov	w1, #0x99                  	// #153
   15f7c:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   15f80:	add	x0, x0, #0xf80
   15f84:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   15f88:	mov	w0, w25
   15f8c:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   15f90:	ldp	x23, x24, [sp, #32]
   15f94:	ldp	x25, x26, [sp, #48]
   15f98:	ldp	x27, x28, [sp, #64]
   15f9c:	b	160ac <__sanitizer_cov_dump@@Base+0x24f4>
   15fa0:	mov	x24, x20
   15fa4:	mov	w0, w25
   15fa8:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   15fac:	ldr	x0, [x19, #16]
   15fb0:	cmp	x24, x0
   15fb4:	b.ls	15fdc <__sanitizer_cov_dump@@Base+0x2424>  // b.plast
   15fb8:	ldr	x0, [x19, #8]
   15fbc:	cmp	x24, x0
   15fc0:	b.hi	15ff0 <__sanitizer_cov_dump@@Base+0x2438>  // b.pmore
   15fc4:	ldr	x0, [x19, #16]
   15fc8:	ldr	x3, [x19]
   15fcc:	sub	x2, x24, x0
   15fd0:	mov	w1, #0x0                   	// #0
   15fd4:	add	x0, x3, x0
   15fd8:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   15fdc:	str	x24, [x19, #16]
   15fe0:	ldp	x23, x24, [sp, #32]
   15fe4:	ldp	x25, x26, [sp, #48]
   15fe8:	ldp	x27, x28, [sp, #64]
   15fec:	b	160ac <__sanitizer_cov_dump@@Base+0x24f4>
   15ff0:	cbz	x24, 16064 <__sanitizer_cov_dump@@Base+0x24ac>
   15ff4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15ff8:	ldr	x0, [x0, #4000]
   15ffc:	ldr	x0, [x0]
   16000:	cbz	x0, 16084 <__sanitizer_cov_dump@@Base+0x24cc>
   16004:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16008:	ldr	x0, [x0, #4000]
   1600c:	ldr	x1, [x0]
   16010:	sub	x0, x1, #0x1
   16014:	tst	x1, x0
   16018:	b.ne	16098 <__sanitizer_cov_dump@@Base+0x24e0>  // b.any
   1601c:	add	x0, x24, x0
   16020:	neg	x1, x1
   16024:	and	x20, x0, x1
   16028:	mov	w2, #0x0                   	// #0
   1602c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   16030:	add	x1, x1, #0x650
   16034:	mov	x0, x20
   16038:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1603c:	mov	x21, x0
   16040:	ldr	x2, [x19, #16]
   16044:	ldr	x1, [x19]
   16048:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1604c:	ldr	x1, [x19, #8]
   16050:	ldr	x0, [x19]
   16054:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   16058:	str	x21, [x19]
   1605c:	str	x20, [x19, #8]
   16060:	b	15fc4 <__sanitizer_cov_dump@@Base+0x240c>
   16064:	mov	x4, #0x0                   	// #0
   16068:	mov	x3, #0x0                   	// #0
   1606c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   16070:	add	x2, x2, #0xf40
   16074:	mov	w1, #0x1fc                 	// #508
   16078:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1607c:	add	x0, x0, #0x520
   16080:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16084:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   16088:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1608c:	ldr	x1, [x1, #4000]
   16090:	str	x0, [x1]
   16094:	b	16004 <__sanitizer_cov_dump@@Base+0x244c>
   16098:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1609c:	add	x0, x0, #0x638
   160a0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   160a4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   160a8:	mov	w22, #0x1                   	// #1
   160ac:	mov	w0, w22
   160b0:	ldp	x21, x22, [sp, #16]
   160b4:	ldr	x30, [sp, #80]
   160b8:	ldp	x19, x20, [sp], #144
   160bc:	ret
   160c0:	mov	w22, #0x0                   	// #0
   160c4:	ldp	x23, x24, [sp, #32]
   160c8:	ldp	x25, x26, [sp, #48]
   160cc:	ldp	x27, x28, [sp, #64]
   160d0:	b	160ac <__sanitizer_cov_dump@@Base+0x24f4>
   160d4:	stp	x19, x20, [sp, #-96]!
   160d8:	stp	x23, x24, [sp, #32]
   160dc:	str	x30, [sp, #80]
   160e0:	mov	x24, x0
   160e4:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x2880>
   160e8:	and	w0, w0, #0xff
   160ec:	cbz	w0, 16110 <__sanitizer_cov_dump@@Base+0x2558>
   160f0:	mov	x0, x24
   160f4:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   160f8:	mov	x20, x0
   160fc:	mov	x0, x20
   16100:	ldp	x23, x24, [sp, #32]
   16104:	ldr	x30, [sp, #80]
   16108:	ldp	x19, x20, [sp], #96
   1610c:	ret
   16110:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   16114:	add	x0, x0, #0x590
   16118:	bl	18cf4 <__sanitizer_set_report_fd@@Base+0x2944>
   1611c:	mov	x20, x0
   16120:	cbz	x0, 160fc <__sanitizer_cov_dump@@Base+0x2544>
   16124:	stp	x21, x22, [sp, #16]
   16128:	stp	x25, x26, [sp, #48]
   1612c:	stp	x27, x28, [sp, #64]
   16130:	mov	x0, x24
   16134:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   16138:	mov	x25, x0
   1613c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16140:	ldr	x0, [x0, #4000]
   16144:	ldr	x0, [x0]
   16148:	cbz	x0, 161c4 <__sanitizer_cov_dump@@Base+0x260c>
   1614c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16150:	ldr	x0, [x0, #4000]
   16154:	ldr	x0, [x0]
   16158:	sub	x1, x0, #0x1
   1615c:	tst	x1, x0
   16160:	b.ne	161d8 <__sanitizer_cov_dump@@Base+0x2620>  // b.any
   16164:	add	x27, x0, #0xfff
   16168:	neg	x0, x0
   1616c:	and	x27, x27, x0
   16170:	mov	w2, #0x0                   	// #0
   16174:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   16178:	add	x1, x1, #0x650
   1617c:	mov	x0, x27
   16180:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   16184:	mov	x23, x0
   16188:	mov	x2, #0x0                   	// #0
   1618c:	mov	x1, #0x0                   	// #0
   16190:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   16194:	mov	x1, #0x0                   	// #0
   16198:	mov	x0, #0x0                   	// #0
   1619c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   161a0:	cmp	x27, #0xfff
   161a4:	b.ls	161e8 <__sanitizer_cov_dump@@Base+0x2630>  // b.plast
   161a8:	mov	x2, #0x1000                	// #4096
   161ac:	mov	w1, #0x0                   	// #0
   161b0:	mov	x0, x23
   161b4:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   161b8:	mov	w26, #0x3a                  	// #58
   161bc:	mov	w28, #0x2f                  	// #47
   161c0:	b	162e8 <__sanitizer_cov_dump@@Base+0x2730>
   161c4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   161c8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   161cc:	ldr	x1, [x1, #4000]
   161d0:	str	x0, [x1]
   161d4:	b	1614c <__sanitizer_cov_dump@@Base+0x2594>
   161d8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   161dc:	add	x0, x0, #0x638
   161e0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   161e4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   161e8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   161ec:	ldr	x0, [x0, #4000]
   161f0:	ldr	x0, [x0]
   161f4:	cbz	x0, 16258 <__sanitizer_cov_dump@@Base+0x26a0>
   161f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   161fc:	ldr	x0, [x0, #4000]
   16200:	ldr	x0, [x0]
   16204:	sub	x1, x0, #0x1
   16208:	tst	x1, x0
   1620c:	b.ne	1626c <__sanitizer_cov_dump@@Base+0x26b4>  // b.any
   16210:	add	x19, x0, #0xfff
   16214:	neg	x0, x0
   16218:	and	x19, x19, x0
   1621c:	mov	w2, #0x0                   	// #0
   16220:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   16224:	add	x1, x1, #0x650
   16228:	mov	x0, x19
   1622c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   16230:	mov	x21, x0
   16234:	mov	x2, #0x0                   	// #0
   16238:	mov	x1, x23
   1623c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   16240:	mov	x1, x27
   16244:	mov	x0, x23
   16248:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1624c:	mov	x27, x19
   16250:	mov	x23, x21
   16254:	b	161a8 <__sanitizer_cov_dump@@Base+0x25f0>
   16258:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1625c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16260:	ldr	x1, [x1, #4000]
   16264:	str	x0, [x1]
   16268:	b	161f8 <__sanitizer_cov_dump@@Base+0x2640>
   1626c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   16270:	add	x0, x0, #0x638
   16274:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   16278:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1627c:	mov	x4, #0x1000                	// #4096
   16280:	mov	x3, x21
   16284:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   16288:	add	x2, x2, #0x508
   1628c:	mov	w1, #0x1b6                 	// #438
   16290:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   16294:	add	x0, x0, #0x520
   16298:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1629c:	mov	x4, #0x1000                	// #4096
   162a0:	mov	x3, x4
   162a4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   162a8:	add	x2, x2, #0x508
   162ac:	mov	w1, #0x1b6                 	// #438
   162b0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   162b4:	add	x0, x0, #0x520
   162b8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   162bc:	mov	x4, #0x1000                	// #4096
   162c0:	mov	x3, #0xffffffffffffffff    	// #-1
   162c4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   162c8:	add	x2, x2, #0x508
   162cc:	mov	w1, #0x1b6                 	// #438
   162d0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   162d4:	add	x0, x0, #0x520
   162d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   162dc:	ldrb	w0, [x19]
   162e0:	cbz	w0, 16374 <__sanitizer_cov_dump@@Base+0x27bc>
   162e4:	add	x20, x19, #0x1
   162e8:	mov	w1, w26
   162ec:	mov	x0, x20
   162f0:	bl	17d68 <__sanitizer_set_report_fd@@Base+0x19b8>
   162f4:	mov	x19, x0
   162f8:	sub	x21, x0, x20
   162fc:	add	x22, x25, x21
   16300:	add	x0, x22, #0x2
   16304:	cmp	x0, #0x1, lsl #12
   16308:	b.hi	162dc <__sanitizer_cov_dump@@Base+0x2724>  // b.pmore
   1630c:	mov	x2, x21
   16310:	mov	x1, x20
   16314:	mov	x0, x23
   16318:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1631c:	cmp	x21, #0xfff
   16320:	b.hi	1627c <__sanitizer_cov_dump@@Base+0x26c4>  // b.pmore
   16324:	strb	w28, [x23, x21]
   16328:	add	x21, x21, #0x1
   1632c:	cmp	x21, #0xfff
   16330:	b.hi	1629c <__sanitizer_cov_dump@@Base+0x26e4>  // b.pmore
   16334:	mov	x2, x25
   16338:	mov	x1, x24
   1633c:	add	x0, x23, x21
   16340:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   16344:	add	x22, x22, #0x1
   16348:	cmp	x22, #0xfff
   1634c:	b.hi	162bc <__sanitizer_cov_dump@@Base+0x2704>  // b.pmore
   16350:	strb	wzr, [x23, x22]
   16354:	mov	x0, x23
   16358:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x2880>
   1635c:	and	w0, w0, #0xff
   16360:	cbz	w0, 162dc <__sanitizer_cov_dump@@Base+0x2724>
   16364:	mov	x0, x23
   16368:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   1636c:	mov	x20, x0
   16370:	b	16378 <__sanitizer_cov_dump@@Base+0x27c0>
   16374:	mov	x20, #0x0                   	// #0
   16378:	mov	x1, x27
   1637c:	mov	x0, x23
   16380:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   16384:	ldp	x21, x22, [sp, #16]
   16388:	ldp	x25, x26, [sp, #48]
   1638c:	ldp	x27, x28, [sp, #64]
   16390:	b	160fc <__sanitizer_cov_dump@@Base+0x2544>

0000000000016394 <__sanitizer_set_report_path@@Base>:
   16394:	str	x30, [sp, #-16]!
   16398:	mov	x1, x0
   1639c:	adrp	x0, 61000 <_Unwind_Backtrace@GCC_3.3>
   163a0:	add	x0, x0, #0x3d0
   163a4:	bl	15a80 <__sanitizer_cov_dump@@Base+0x1ec8>
   163a8:	ldr	x30, [sp], #16
   163ac:	ret

00000000000163b0 <__sanitizer_set_report_fd@@Base>:
   163b0:	stp	x19, x30, [sp, #-16]!
   163b4:	adrp	x19, 61000 <_Unwind_Backtrace@GCC_3.3>
   163b8:	add	x19, x19, #0x3d0
   163bc:	str	w0, [x19, #8]
   163c0:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   163c4:	str	x0, [x19, #8208]
   163c8:	ldp	x19, x30, [sp], #16
   163cc:	ret
   163d0:	stp	x19, x20, [sp, #-48]!
   163d4:	stp	x21, x22, [sp, #16]
   163d8:	str	x30, [sp, #32]
   163dc:	mov	x19, x0
   163e0:	mov	x20, x1
   163e4:	mov	x21, x2
   163e8:	mov	x22, x3
   163ec:	mov	x1, #0x10                  	// #16
   163f0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   163f4:	ldr	x0, [x0, #3456]
   163f8:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   163fc:	mov	x2, x0
   16400:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   16404:	add	x0, x0, #0xb80
   16408:	str	x0, [x2]
   1640c:	str	x22, [x2, #8]
   16410:	mov	x3, x21
   16414:	mov	x1, x20
   16418:	mov	x0, x19
   1641c:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   16420:	ldp	x21, x22, [sp, #16]
   16424:	ldr	x30, [sp, #32]
   16428:	ldp	x19, x20, [sp], #48
   1642c:	ret
   16430:	stp	x19, x20, [sp, #-48]!
   16434:	stp	x21, x22, [sp, #16]
   16438:	str	x30, [sp, #32]
   1643c:	mov	x19, x0
   16440:	mov	x20, x1
   16444:	mov	x21, x2
   16448:	mov	x22, x3
   1644c:	mov	x1, #0x10                  	// #16
   16450:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16454:	ldr	x0, [x0, #3456]
   16458:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   1645c:	mov	x2, x0
   16460:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   16464:	add	x0, x0, #0xb98
   16468:	str	x0, [x2]
   1646c:	str	x22, [x2, #8]
   16470:	mov	x3, x21
   16474:	mov	x1, x20
   16478:	mov	x0, x19
   1647c:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   16480:	ldp	x21, x22, [sp, #16]
   16484:	ldr	x30, [sp, #32]
   16488:	ldp	x19, x20, [sp], #48
   1648c:	ret
   16490:	stp	x19, x20, [sp, #-48]!
   16494:	stp	x21, x22, [sp, #16]
   16498:	str	x30, [sp, #32]
   1649c:	mov	x19, x0
   164a0:	mov	x20, x1
   164a4:	mov	x21, x2
   164a8:	mov	x22, x3
   164ac:	mov	x1, #0x10                  	// #16
   164b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   164b4:	ldr	x0, [x0, #3456]
   164b8:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   164bc:	mov	x2, x0
   164c0:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   164c4:	add	x0, x0, #0xbb0
   164c8:	str	x0, [x2]
   164cc:	str	x22, [x2, #8]
   164d0:	mov	x3, x21
   164d4:	mov	x1, x20
   164d8:	mov	x0, x19
   164dc:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   164e0:	ldp	x21, x22, [sp, #16]
   164e4:	ldr	x30, [sp, #32]
   164e8:	ldp	x19, x20, [sp], #48
   164ec:	ret
   164f0:	stp	x19, x20, [sp, #-48]!
   164f4:	stp	x21, x22, [sp, #16]
   164f8:	str	x30, [sp, #32]
   164fc:	mov	x19, x0
   16500:	mov	x20, x1
   16504:	mov	x21, x2
   16508:	mov	x22, x3
   1650c:	mov	x1, #0x10                  	// #16
   16510:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16514:	ldr	x0, [x0, #3456]
   16518:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   1651c:	mov	x2, x0
   16520:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   16524:	add	x0, x0, #0xc70
   16528:	str	x0, [x2]
   1652c:	str	x22, [x2, #8]
   16530:	mov	x3, x21
   16534:	mov	x1, x20
   16538:	mov	x0, x19
   1653c:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   16540:	ldp	x21, x22, [sp, #16]
   16544:	ldr	x30, [sp, #32]
   16548:	ldp	x19, x20, [sp], #48
   1654c:	ret
   16550:	stp	x19, x20, [sp, #-48]!
   16554:	stp	x21, x22, [sp, #16]
   16558:	str	x30, [sp, #32]
   1655c:	mov	x19, x0
   16560:	mov	x20, x1
   16564:	mov	x21, x2
   16568:	mov	x22, x3
   1656c:	mov	x1, #0x10                  	// #16
   16570:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16574:	ldr	x0, [x0, #3456]
   16578:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   1657c:	mov	x2, x0
   16580:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   16584:	add	x0, x0, #0xc88
   16588:	str	x0, [x2]
   1658c:	str	x22, [x2, #8]
   16590:	mov	x3, x21
   16594:	mov	x1, x20
   16598:	mov	x0, x19
   1659c:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   165a0:	ldp	x21, x22, [sp, #16]
   165a4:	ldr	x30, [sp, #32]
   165a8:	ldp	x19, x20, [sp], #48
   165ac:	ret
   165b0:	mov	w1, #0x1                   	// #1
   165b4:	strb	w1, [x0]
   165b8:	str	xzr, [x0, #8]
   165bc:	strb	wzr, [x0, #16]
   165c0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   165c4:	add	x2, x2, #0x9e0
   165c8:	str	x2, [x0, #24]
   165cc:	strb	wzr, [x0, #32]
   165d0:	strb	wzr, [x0, #33]
   165d4:	strb	w1, [x0, #34]
   165d8:	strb	wzr, [x0, #35]
   165dc:	mov	w2, #0x1                   	// #1
   165e0:	str	w2, [x0, #36]
   165e4:	adrp	x3, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   165e8:	add	x3, x3, #0xf20
   165ec:	str	x3, [x0, #40]
   165f0:	strb	wzr, [x0, #48]
   165f4:	strb	wzr, [x0, #49]
   165f8:	str	wzr, [x0, #52]
   165fc:	strb	w1, [x0, #56]
   16600:	strb	w1, [x0, #57]
   16604:	strb	w1, [x0, #58]
   16608:	strb	wzr, [x0, #59]
   1660c:	strb	w1, [x0, #60]
   16610:	str	wzr, [x0, #64]
   16614:	strb	w1, [x0, #68]
   16618:	str	w2, [x0, #72]
   1661c:	str	w2, [x0, #76]
   16620:	str	wzr, [x0, #80]
   16624:	str	wzr, [x0, #84]
   16628:	str	wzr, [x0, #88]
   1662c:	str	w2, [x0, #92]
   16630:	strb	w1, [x0, #96]
   16634:	strb	w1, [x0, #97]
   16638:	strb	wzr, [x0, #98]
   1663c:	mov	x3, #0x10000               	// #65536
   16640:	str	x3, [x0, #104]
   16644:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16648:	add	x3, x3, #0x58
   1664c:	str	x3, [x0, #112]
   16650:	strb	wzr, [x0, #120]
   16654:	strb	wzr, [x0, #121]
   16658:	strb	wzr, [x0, #122]
   1665c:	str	xzr, [x0, #128]
   16660:	str	xzr, [x0, #136]
   16664:	str	xzr, [x0, #144]
   16668:	strb	wzr, [x0, #152]
   1666c:	mov	w3, #0x1388                	// #5000
   16670:	str	w3, [x0, #156]
   16674:	strb	w1, [x0, #160]
   16678:	strb	wzr, [x0, #161]
   1667c:	adrp	x3, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   16680:	add	x3, x3, #0x630
   16684:	str	x3, [x0, #168]
   16688:	strb	wzr, [x0, #176]
   1668c:	strb	w1, [x0, #177]
   16690:	strb	w1, [x0, #178]
   16694:	strb	w1, [x0, #179]
   16698:	strb	w1, [x0, #180]
   1669c:	strb	wzr, [x0, #181]
   166a0:	str	wzr, [x0, #184]
   166a4:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   166a8:	add	x3, x3, #0x60
   166ac:	str	x3, [x0, #192]
   166b0:	strb	w1, [x0, #200]
   166b4:	strb	wzr, [x0, #201]
   166b8:	strb	w1, [x0, #202]
   166bc:	strb	w1, [x0, #203]
   166c0:	strb	w1, [x0, #204]
   166c4:	strb	w1, [x0, #205]
   166c8:	strb	w1, [x0, #206]
   166cc:	strb	w1, [x0, #207]
   166d0:	strb	w1, [x0, #208]
   166d4:	strb	w1, [x0, #209]
   166d8:	strb	w1, [x0, #210]
   166dc:	strb	w1, [x0, #211]
   166e0:	strb	w1, [x0, #212]
   166e4:	strb	w1, [x0, #213]
   166e8:	strb	w1, [x0, #214]
   166ec:	strb	wzr, [x0, #215]
   166f0:	str	w2, [x0, #216]
   166f4:	strb	wzr, [x0, #220]
   166f8:	strb	w1, [x0, #221]
   166fc:	strb	wzr, [x0, #222]
   16700:	strb	wzr, [x0, #223]
   16704:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   16708:	add	x2, x2, #0xa20
   1670c:	str	x2, [x0, #224]
   16710:	strb	wzr, [x0, #232]
   16714:	strb	w1, [x0, #233]
   16718:	strb	wzr, [x0, #234]
   1671c:	ret
   16720:	str	x30, [sp, #-16]!
   16724:	mov	x2, #0xf0                  	// #240
   16728:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1672c:	ldr	x30, [sp], #16
   16730:	ret
   16734:	stp	x19, x20, [sp, #-96]!
   16738:	stp	x21, x22, [sp, #16]
   1673c:	stp	x23, x24, [sp, #32]
   16740:	str	x30, [sp, #48]
   16744:	mov	x21, x0
   16748:	mov	x19, x1
   1674c:	add	x23, x1, x2
   16750:	ldrb	w0, [x0]
   16754:	cbz	w0, 16864 <__sanitizer_set_report_fd@@Base+0x4b4>
   16758:	sub	x20, x23, #0x1
   1675c:	cmp	x1, x20
   16760:	b.cs	16890 <__sanitizer_set_report_fd@@Base+0x4e0>  // b.hs, b.nlast
   16764:	mov	w24, #0x25                  	// #37
   16768:	mov	w22, #0x6667                	// #26215
   1676c:	movk	w22, #0x6666, lsl #16
   16770:	b	1678c <__sanitizer_set_report_fd@@Base+0x3dc>
   16774:	add	x21, x21, #0x1
   16778:	strb	w0, [x19], #1
   1677c:	ldrb	w0, [x21]
   16780:	cbz	w0, 16864 <__sanitizer_set_report_fd@@Base+0x4b4>
   16784:	cmp	x19, x20
   16788:	b.cs	16890 <__sanitizer_set_report_fd@@Base+0x4e0>  // b.hs, b.nlast
   1678c:	cmp	w0, #0x25
   16790:	b.ne	16774 <__sanitizer_set_report_fd@@Base+0x3c4>  // b.any
   16794:	ldrb	w0, [x21, #1]
   16798:	cmp	w0, #0x62
   1679c:	b.eq	167b4 <__sanitizer_set_report_fd@@Base+0x404>  // b.none
   167a0:	cmp	w0, #0x70
   167a4:	b.eq	16808 <__sanitizer_set_report_fd@@Base+0x458>  // b.none
   167a8:	add	x21, x21, #0x1
   167ac:	strb	w24, [x19], #1
   167b0:	b	1677c <__sanitizer_set_report_fd@@Base+0x3cc>
   167b4:	bl	12ca8 <__sancov_default_options@@Base+0x2924>
   167b8:	cbz	x0, 167e8 <__sanitizer_set_report_fd@@Base+0x438>
   167bc:	ldrb	w1, [x0]
   167c0:	cmp	w1, #0x0
   167c4:	ccmp	x20, x19, #0x0, ne  // ne = any
   167c8:	b.ls	167e0 <__sanitizer_set_report_fd@@Base+0x430>  // b.plast
   167cc:	strb	w1, [x19], #1
   167d0:	ldrb	w1, [x0, #1]!
   167d4:	cmp	w1, #0x0
   167d8:	ccmp	x19, x20, #0x2, ne  // ne = any
   167dc:	b.cc	167cc <__sanitizer_set_report_fd@@Base+0x41c>  // b.lo, b.ul, b.last
   167e0:	add	x21, x21, #0x2
   167e4:	b	1677c <__sanitizer_set_report_fd@@Base+0x3cc>
   167e8:	mov	x4, #0x0                   	// #0
   167ec:	mov	x3, #0x0                   	// #0
   167f0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   167f4:	add	x2, x2, #0x68
   167f8:	mov	w1, #0x2e                  	// #46
   167fc:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16800:	add	x0, x0, #0x78
   16804:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   16808:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   1680c:	add	x2, sp, #0x60
   16810:	smull	x3, w0, w22
   16814:	asr	x3, x3, #34
   16818:	sub	w3, w3, w0, asr #31
   1681c:	add	w1, w3, w3, lsl #2
   16820:	sub	w1, w0, w1, lsl #1
   16824:	add	w1, w1, #0x30
   16828:	strb	w1, [x2, #-1]!
   1682c:	mov	w0, w3
   16830:	cbnz	w3, 16810 <__sanitizer_set_report_fd@@Base+0x460>
   16834:	cmp	x20, x19
   16838:	add	x0, sp, #0x60
   1683c:	ccmp	x0, x2, #0x0, hi  // hi = pmore
   16840:	b.ls	1685c <__sanitizer_set_report_fd@@Base+0x4ac>  // b.plast
   16844:	ldrb	w0, [x2], #1
   16848:	strb	w0, [x19], #1
   1684c:	cmp	x19, x20
   16850:	add	x0, sp, #0x60
   16854:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
   16858:	b.hi	16844 <__sanitizer_set_report_fd@@Base+0x494>  // b.pmore
   1685c:	add	x21, x21, #0x2
   16860:	b	1677c <__sanitizer_set_report_fd@@Base+0x3cc>
   16864:	sub	x23, x23, #0x1
   16868:	cmp	x19, x23
   1686c:	b.cs	16888 <__sanitizer_set_report_fd@@Base+0x4d8>  // b.hs, b.nlast
   16870:	strb	wzr, [x19]
   16874:	ldp	x21, x22, [sp, #16]
   16878:	ldp	x23, x24, [sp, #32]
   1687c:	ldr	x30, [sp, #48]
   16880:	ldp	x19, x20, [sp], #96
   16884:	ret
   16888:	mov	x3, #0x0                   	// #0
   1688c:	b	16898 <__sanitizer_set_report_fd@@Base+0x4e8>
   16890:	cmp	x19, x20
   16894:	cset	x3, cc  // cc = lo, ul, last
   16898:	mov	x4, #0x0                   	// #0
   1689c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   168a0:	add	x2, x2, #0xb8
   168a4:	mov	w1, #0x46                  	// #70
   168a8:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   168ac:	add	x0, x0, #0x78
   168b0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   168b4:	stp	x19, x20, [sp, #-32]!
   168b8:	stp	x21, x30, [sp, #16]
   168bc:	mov	x19, x0
   168c0:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   168c4:	ldr	x21, [x21, #3456]
   168c8:	mov	x1, #0x18                  	// #24
   168cc:	mov	x0, x21
   168d0:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   168d4:	mov	x2, x0
   168d8:	adrp	x20, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   168dc:	add	x20, x20, #0xca0
   168e0:	str	x20, [x0]
   168e4:	str	x19, [x0, #8]
   168e8:	strb	wzr, [x0, #16]
   168ec:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   168f0:	add	x3, x3, #0xd8
   168f4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   168f8:	add	x1, x1, #0x100
   168fc:	mov	x0, x19
   16900:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   16904:	mov	x1, #0x18                  	// #24
   16908:	mov	x0, x21
   1690c:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   16910:	mov	x2, x0
   16914:	str	x20, [x0]
   16918:	str	x19, [x0, #8]
   1691c:	mov	w0, #0x1                   	// #1
   16920:	strb	w0, [x2, #16]
   16924:	adrp	x3, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16928:	add	x3, x3, #0x108
   1692c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16930:	add	x1, x1, #0x140
   16934:	mov	x0, x19
   16938:	bl	179a0 <__sanitizer_set_report_fd@@Base+0x15f0>
   1693c:	ldp	x21, x30, [sp, #16]
   16940:	ldp	x19, x20, [sp], #32
   16944:	ret
   16948:	stp	x19, x20, [sp, #-32]!
   1694c:	str	x30, [sp, #16]
   16950:	mov	x20, x0
   16954:	mov	x19, x1
   16958:	mov	x3, x1
   1695c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16960:	add	x2, x2, #0x158
   16964:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   16968:	add	x1, x1, #0x140
   1696c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16970:	add	x3, x19, #0x8
   16974:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16978:	add	x2, x2, #0x1d0
   1697c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16980:	add	x1, x1, #0x228
   16984:	mov	x0, x20
   16988:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   1698c:	add	x3, x19, #0x10
   16990:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16994:	add	x2, x2, #0x248
   16998:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   1699c:	add	x1, x1, #0x2e8
   169a0:	mov	x0, x20
   169a4:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   169a8:	add	x3, x19, #0x18
   169ac:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   169b0:	add	x2, x2, #0x2f8
   169b4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   169b8:	add	x1, x1, #0x330
   169bc:	mov	x0, x20
   169c0:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   169c4:	add	x3, x19, #0x20
   169c8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   169cc:	add	x2, x2, #0x348
   169d0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   169d4:	add	x1, x1, #0x3a0
   169d8:	mov	x0, x20
   169dc:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   169e0:	add	x3, x19, #0x21
   169e4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   169e8:	add	x2, x2, #0x3b8
   169ec:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   169f0:	add	x1, x1, #0x408
   169f4:	mov	x0, x20
   169f8:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   169fc:	add	x3, x19, #0x22
   16a00:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a04:	add	x2, x2, #0x420
   16a08:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a0c:	add	x1, x1, #0x468
   16a10:	mov	x0, x20
   16a14:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16a18:	add	x3, x19, #0x23
   16a1c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a20:	add	x2, x2, #0x480
   16a24:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a28:	add	x1, x1, #0x4a8
   16a2c:	mov	x0, x20
   16a30:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16a34:	add	x3, x19, #0x24
   16a38:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a3c:	add	x2, x2, #0x4b8
   16a40:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a44:	add	x1, x1, #0x500
   16a48:	mov	x0, x20
   16a4c:	bl	16490 <__sanitizer_set_report_fd@@Base+0xe0>
   16a50:	add	x3, x19, #0x28
   16a54:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a58:	add	x2, x2, #0x518
   16a5c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a60:	add	x1, x1, #0x580
   16a64:	mov	x0, x20
   16a68:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   16a6c:	add	x3, x19, #0x30
   16a70:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a74:	add	x2, x2, #0x590
   16a78:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a7c:	add	x1, x1, #0x608
   16a80:	mov	x0, x20
   16a84:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16a88:	add	x3, x19, #0x31
   16a8c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a90:	add	x2, x2, #0x618
   16a94:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16a98:	add	x1, x1, #0x668
   16a9c:	mov	x0, x20
   16aa0:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16aa4:	add	x3, x19, #0x34
   16aa8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16aac:	add	x2, x2, #0x678
   16ab0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16ab4:	add	x1, x1, #0x6c0
   16ab8:	mov	x0, x20
   16abc:	bl	16490 <__sanitizer_set_report_fd@@Base+0xe0>
   16ac0:	add	x3, x19, #0x38
   16ac4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16ac8:	add	x2, x2, #0x6d0
   16acc:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16ad0:	add	x1, x1, #0x740
   16ad4:	mov	x0, x20
   16ad8:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16adc:	add	x3, x19, #0x39
   16ae0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16ae4:	add	x2, x2, #0x750
   16ae8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16aec:	add	x1, x1, #0x770
   16af0:	mov	x0, x20
   16af4:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16af8:	add	x3, x19, #0x3a
   16afc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b00:	add	x2, x2, #0x780
   16b04:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b08:	add	x1, x1, #0x820
   16b0c:	mov	x0, x20
   16b10:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16b14:	add	x3, x19, #0x3b
   16b18:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b1c:	add	x2, x2, #0x838
   16b20:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b24:	add	x1, x1, #0x888
   16b28:	mov	x0, x20
   16b2c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16b30:	add	x3, x19, #0x3c
   16b34:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b38:	add	x2, x2, #0x8a8
   16b3c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b40:	add	x1, x1, #0x8f8
   16b44:	mov	x0, x20
   16b48:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16b4c:	add	x3, x19, #0x40
   16b50:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b54:	add	x2, x2, #0x908
   16b58:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b5c:	add	x1, x1, #0x970
   16b60:	mov	x0, x20
   16b64:	bl	16490 <__sanitizer_set_report_fd@@Base+0xe0>
   16b68:	add	x3, x19, #0x44
   16b6c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b70:	add	x2, x2, #0x988
   16b74:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b78:	add	x1, x1, #0x9a0
   16b7c:	mov	x0, x20
   16b80:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16b84:	add	x3, x19, #0x48
   16b88:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b8c:	add	x2, x2, #0x9b0
   16b90:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16b94:	add	x1, x1, #0xa70
   16b98:	mov	x0, x20
   16b9c:	bl	164f0 <__sanitizer_set_report_fd@@Base+0x140>
   16ba0:	add	x3, x19, #0x4c
   16ba4:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16ba8:	add	x2, x2, #0xa80
   16bac:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16bb0:	add	x1, x1, #0xb40
   16bb4:	mov	x0, x20
   16bb8:	bl	164f0 <__sanitizer_set_report_fd@@Base+0x140>
   16bbc:	add	x3, x19, #0x50
   16bc0:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16bc4:	add	x2, x2, #0xb50
   16bc8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16bcc:	add	x1, x1, #0xc10
   16bd0:	mov	x0, x20
   16bd4:	bl	164f0 <__sanitizer_set_report_fd@@Base+0x140>
   16bd8:	add	x3, x19, #0x54
   16bdc:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16be0:	add	x2, x2, #0xc20
   16be4:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16be8:	add	x1, x1, #0xce0
   16bec:	mov	x0, x20
   16bf0:	bl	164f0 <__sanitizer_set_report_fd@@Base+0x140>
   16bf4:	add	x3, x19, #0x58
   16bf8:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16bfc:	add	x2, x2, #0xcf0
   16c00:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c04:	add	x1, x1, #0xdb0
   16c08:	mov	x0, x20
   16c0c:	bl	164f0 <__sanitizer_set_report_fd@@Base+0x140>
   16c10:	add	x3, x19, #0x5c
   16c14:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c18:	add	x2, x2, #0xdc0
   16c1c:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c20:	add	x1, x1, #0xe80
   16c24:	mov	x0, x20
   16c28:	bl	164f0 <__sanitizer_set_report_fd@@Base+0x140>
   16c2c:	add	x3, x19, #0x60
   16c30:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c34:	add	x2, x2, #0xe90
   16c38:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c3c:	add	x1, x1, #0xf00
   16c40:	mov	x0, x20
   16c44:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16c48:	add	x3, x19, #0x61
   16c4c:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c50:	add	x2, x2, #0xf18
   16c54:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c58:	add	x1, x1, #0xf50
   16c5c:	mov	x0, x20
   16c60:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16c64:	add	x3, x19, #0x62
   16c68:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c6c:	add	x2, x2, #0xf60
   16c70:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c74:	add	x1, x1, #0xf88
   16c78:	mov	x0, x20
   16c7c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16c80:	add	x3, x19, #0x68
   16c84:	adrp	x2, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   16c88:	add	x2, x2, #0xfa0
   16c8c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16c90:	add	x1, x1, #0x18
   16c94:	mov	x0, x20
   16c98:	bl	16550 <__sanitizer_set_report_fd@@Base+0x1a0>
   16c9c:	add	x3, x19, #0x70
   16ca0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ca4:	add	x2, x2, #0x38
   16ca8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16cac:	add	x1, x1, #0x60
   16cb0:	mov	x0, x20
   16cb4:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   16cb8:	add	x3, x19, #0x78
   16cbc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16cc0:	add	x2, x2, #0x68
   16cc4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16cc8:	add	x1, x1, #0xb0
   16ccc:	mov	x0, x20
   16cd0:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16cd4:	add	x3, x19, #0x79
   16cd8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16cdc:	add	x2, x2, #0xc8
   16ce0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ce4:	add	x1, x1, #0xe8
   16ce8:	mov	x0, x20
   16cec:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16cf0:	add	x3, x19, #0x7a
   16cf4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16cf8:	add	x2, x2, #0x100
   16cfc:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   16d00:	add	x1, x1, #0x168
   16d04:	mov	x0, x20
   16d08:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16d0c:	add	x3, x19, #0x80
   16d10:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d14:	add	x2, x2, #0x120
   16d18:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d1c:	add	x1, x1, #0x198
   16d20:	mov	x0, x20
   16d24:	bl	16550 <__sanitizer_set_report_fd@@Base+0x1a0>
   16d28:	add	x3, x19, #0x88
   16d2c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d30:	add	x2, x2, #0x1a8
   16d34:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d38:	add	x1, x1, #0x248
   16d3c:	mov	x0, x20
   16d40:	bl	16550 <__sanitizer_set_report_fd@@Base+0x1a0>
   16d44:	add	x3, x19, #0x90
   16d48:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d4c:	add	x2, x2, #0x260
   16d50:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d54:	add	x1, x1, #0x3c0
   16d58:	mov	x0, x20
   16d5c:	bl	16550 <__sanitizer_set_report_fd@@Base+0x1a0>
   16d60:	add	x3, x19, #0x98
   16d64:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d68:	add	x2, x2, #0x3d8
   16d6c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d70:	add	x1, x1, #0x400
   16d74:	mov	x0, x20
   16d78:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16d7c:	add	x3, x19, #0x9c
   16d80:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d84:	add	x2, x2, #0x410
   16d88:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16d8c:	add	x1, x1, #0x4e0
   16d90:	mov	x0, x20
   16d94:	bl	16490 <__sanitizer_set_report_fd@@Base+0xe0>
   16d98:	add	x3, x19, #0xa0
   16d9c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16da0:	add	x2, x2, #0x508
   16da4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16da8:	add	x1, x1, #0x568
   16dac:	mov	x0, x20
   16db0:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16db4:	add	x3, x19, #0xa1
   16db8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16dbc:	add	x2, x2, #0x580
   16dc0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16dc4:	add	x1, x1, #0x600
   16dc8:	mov	x0, x20
   16dcc:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16dd0:	add	x3, x19, #0xa8
   16dd4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16dd8:	add	x2, x2, #0x610
   16ddc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16de0:	add	x1, x1, #0x658
   16de4:	mov	x0, x20
   16de8:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   16dec:	add	x3, x19, #0xb0
   16df0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16df4:	add	x2, x2, #0x668
   16df8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16dfc:	add	x1, x1, #0x6d0
   16e00:	mov	x0, x20
   16e04:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16e08:	add	x3, x19, #0xb1
   16e0c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e10:	add	x2, x2, #0x6e8
   16e14:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e18:	add	x1, x1, #0x710
   16e1c:	mov	x0, x20
   16e20:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16e24:	add	x3, x19, #0xb2
   16e28:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e2c:	add	x2, x2, #0x728
   16e30:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e34:	add	x1, x1, #0x7f8
   16e38:	mov	x0, x20
   16e3c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16e40:	add	x3, x19, #0xb3
   16e44:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e48:	add	x2, x2, #0x810
   16e4c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e50:	add	x1, x1, #0x858
   16e54:	mov	x0, x20
   16e58:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16e5c:	add	x3, x19, #0xb4
   16e60:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e64:	add	x2, x2, #0x870
   16e68:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e6c:	add	x1, x1, #0x8a8
   16e70:	mov	x0, x20
   16e74:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16e78:	add	x3, x19, #0xb5
   16e7c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e80:	add	x2, x2, #0x8c0
   16e84:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e88:	add	x1, x1, #0x908
   16e8c:	mov	x0, x20
   16e90:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16e94:	add	x3, x19, #0xb8
   16e98:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16e9c:	add	x2, x2, #0x920
   16ea0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ea4:	add	x1, x1, #0x9f0
   16ea8:	mov	x0, x20
   16eac:	bl	16490 <__sanitizer_set_report_fd@@Base+0xe0>
   16eb0:	add	x3, x19, #0xc0
   16eb4:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16eb8:	add	x2, x2, #0xa08
   16ebc:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ec0:	add	x1, x1, #0xa98
   16ec4:	mov	x0, x20
   16ec8:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   16ecc:	add	x3, x19, #0xc8
   16ed0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ed4:	add	x2, x2, #0xab0
   16ed8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16edc:	add	x1, x1, #0xae8
   16ee0:	mov	x0, x20
   16ee4:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16ee8:	add	x3, x19, #0xc9
   16eec:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ef0:	add	x2, x2, #0xb08
   16ef4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ef8:	add	x1, x1, #0xb48
   16efc:	mov	x0, x20
   16f00:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16f04:	add	x3, x19, #0xca
   16f08:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f0c:	add	x2, x2, #0xb60
   16f10:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f14:	add	x1, x1, #0xbb8
   16f18:	mov	x0, x20
   16f1c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16f20:	add	x3, x19, #0xcb
   16f24:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f28:	add	x2, x2, #0xbd0
   16f2c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f30:	add	x1, x1, #0xc28
   16f34:	mov	x0, x20
   16f38:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16f3c:	add	x3, x19, #0xcc
   16f40:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f44:	add	x2, x2, #0xc40
   16f48:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f4c:	add	x1, x1, #0xc90
   16f50:	mov	x0, x20
   16f54:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16f58:	add	x3, x19, #0xcd
   16f5c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f60:	add	x2, x2, #0xca8
   16f64:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f68:	add	x1, x1, #0xcf0
   16f6c:	mov	x0, x20
   16f70:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16f74:	add	x3, x19, #0xce
   16f78:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f7c:	add	x2, x2, #0xd08
   16f80:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f84:	add	x1, x1, #0xd60
   16f88:	mov	x0, x20
   16f8c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16f90:	add	x3, x19, #0xcf
   16f94:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16f98:	add	x2, x2, #0xd78
   16f9c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16fa0:	add	x1, x1, #0xdc0
   16fa4:	mov	x0, x20
   16fa8:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16fac:	add	x3, x19, #0xd0
   16fb0:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16fb4:	add	x2, x2, #0xdd8
   16fb8:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16fbc:	add	x1, x1, #0xe38
   16fc0:	mov	x0, x20
   16fc4:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16fc8:	add	x3, x19, #0xd1
   16fcc:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16fd0:	add	x2, x2, #0xe50
   16fd4:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16fd8:	add	x1, x1, #0xe98
   16fdc:	mov	x0, x20
   16fe0:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   16fe4:	add	x3, x19, #0xd2
   16fe8:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16fec:	add	x2, x2, #0xeb0
   16ff0:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   16ff4:	add	x1, x1, #0xf08
   16ff8:	mov	x0, x20
   16ffc:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17000:	add	x3, x19, #0xd3
   17004:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   17008:	add	x2, x2, #0xf18
   1700c:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   17010:	add	x1, x1, #0xf58
   17014:	mov	x0, x20
   17018:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   1701c:	add	x3, x19, #0xd4
   17020:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   17024:	add	x2, x2, #0xf70
   17028:	adrp	x1, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   1702c:	add	x1, x1, #0xfc8
   17030:	mov	x0, x20
   17034:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17038:	add	x3, x19, #0xd5
   1703c:	adrp	x2, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   17040:	add	x2, x2, #0xfe0
   17044:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17048:	add	x1, x1, #0x28
   1704c:	mov	x0, x20
   17050:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17054:	add	x3, x19, #0xd6
   17058:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1705c:	add	x2, x2, #0x38
   17060:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17064:	add	x1, x1, #0x80
   17068:	mov	x0, x20
   1706c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17070:	add	x3, x19, #0xd7
   17074:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17078:	add	x2, x2, #0x90
   1707c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17080:	add	x1, x1, #0xe0
   17084:	mov	x0, x20
   17088:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   1708c:	add	x3, x19, #0xd8
   17090:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17094:	add	x2, x2, #0xf8
   17098:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1709c:	add	x1, x1, #0x138
   170a0:	mov	x0, x20
   170a4:	bl	16490 <__sanitizer_set_report_fd@@Base+0xe0>
   170a8:	add	x3, x19, #0xdc
   170ac:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   170b0:	add	x2, x2, #0x148
   170b4:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   170b8:	add	x1, x1, #0x1a0
   170bc:	mov	x0, x20
   170c0:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   170c4:	add	x3, x19, #0xdd
   170c8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   170cc:	add	x2, x2, #0x1b0
   170d0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   170d4:	add	x1, x1, #0x218
   170d8:	mov	x0, x20
   170dc:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   170e0:	add	x3, x19, #0xde
   170e4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   170e8:	add	x2, x2, #0x230
   170ec:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   170f0:	add	x1, x1, #0x260
   170f4:	mov	x0, x20
   170f8:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   170fc:	add	x3, x19, #0xdf
   17100:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17104:	add	x2, x2, #0x270
   17108:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1710c:	add	x1, x1, #0x290
   17110:	mov	x0, x20
   17114:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17118:	add	x3, x19, #0xe0
   1711c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17120:	add	x2, x2, #0x2a0
   17124:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17128:	add	x1, x1, #0x2b8
   1712c:	mov	x0, x20
   17130:	bl	16430 <__sanitizer_set_report_fd@@Base+0x80>
   17134:	add	x3, x19, #0xe8
   17138:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1713c:	add	x2, x2, #0x2c8
   17140:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17144:	add	x1, x1, #0x310
   17148:	mov	x0, x20
   1714c:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17150:	add	x3, x19, #0xe9
   17154:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17158:	add	x2, x2, #0x328
   1715c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17160:	add	x1, x1, #0x388
   17164:	mov	x0, x20
   17168:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   1716c:	add	x3, x19, #0xea
   17170:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17174:	add	x2, x2, #0x398
   17178:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1717c:	add	x1, x1, #0x3f0
   17180:	mov	x0, x20
   17184:	bl	163d0 <__sanitizer_set_report_fd@@Base+0x20>
   17188:	mov	x1, x19
   1718c:	mov	x0, x20
   17190:	bl	168b4 <__sanitizer_set_report_fd@@Base+0x504>
   17194:	ldr	x30, [sp, #16]
   17198:	ldp	x19, x20, [sp], #32
   1719c:	ret
   171a0:	ldrb	w1, [x0, #161]
   171a4:	ldrb	w2, [x0, #223]
   171a8:	orr	w1, w1, w2
   171ac:	strb	w1, [x0, #161]
   171b0:	ldr	w1, [x0, #52]
   171b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   171b8:	ldr	x0, [x0, #3680]
   171bc:	str	w1, [x0]
   171c0:	ret
   171c4:	stp	x19, x20, [sp, #-32]!
   171c8:	str	x30, [sp, #16]
   171cc:	mov	x20, x0
   171d0:	mov	x19, x1
   171d4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   171d8:	add	x1, x1, #0x458
   171dc:	mov	x0, x19
   171e0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   171e4:	mov	w1, #0x0                   	// #0
   171e8:	cbnz	w0, 17204 <__sanitizer_set_report_fd@@Base+0xe54>
   171ec:	ldr	x0, [x20, #8]
   171f0:	str	w1, [x0]
   171f4:	mov	w0, #0x1                   	// #1
   171f8:	ldr	x30, [sp, #16]
   171fc:	ldp	x19, x20, [sp], #32
   17200:	ret
   17204:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   17208:	add	x1, x1, #0x460
   1720c:	mov	x0, x19
   17210:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   17214:	mov	w1, #0x0                   	// #0
   17218:	cbz	w0, 171ec <__sanitizer_set_report_fd@@Base+0xe3c>
   1721c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   17220:	add	x1, x1, #0x468
   17224:	mov	x0, x19
   17228:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   1722c:	mov	w1, #0x0                   	// #0
   17230:	cbz	w0, 171ec <__sanitizer_set_report_fd@@Base+0xe3c>
   17234:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   17238:	add	x1, x1, #0x470
   1723c:	mov	x0, x19
   17240:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   17244:	mov	w1, #0x1                   	// #1
   17248:	cbz	w0, 171ec <__sanitizer_set_report_fd@@Base+0xe3c>
   1724c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   17250:	add	x1, x1, #0x478
   17254:	mov	x0, x19
   17258:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   1725c:	mov	w1, #0x1                   	// #1
   17260:	cbz	w0, 171ec <__sanitizer_set_report_fd@@Base+0xe3c>
   17264:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   17268:	add	x1, x1, #0x480
   1726c:	mov	x0, x19
   17270:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   17274:	cbz	w0, 172cc <__sanitizer_set_report_fd@@Base+0xf1c>
   17278:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   1727c:	add	x1, x1, #0x2d0
   17280:	mov	x0, x19
   17284:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   17288:	cbnz	w0, 172a0 <__sanitizer_set_report_fd@@Base+0xef0>
   1728c:	ldr	x0, [x20, #8]
   17290:	mov	w1, #0x2                   	// #2
   17294:	str	w1, [x0]
   17298:	mov	w0, #0x1                   	// #1
   1729c:	b	171f8 <__sanitizer_set_report_fd@@Base+0xe48>
   172a0:	adrp	x1, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   172a4:	add	x1, x1, #0xfe0
   172a8:	mov	x0, x19
   172ac:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   172b0:	cbz	w0, 1728c <__sanitizer_set_report_fd@@Base+0xedc>
   172b4:	mov	x1, x19
   172b8:	adrp	x0, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   172bc:	add	x0, x0, #0xff0
   172c0:	bl	1d874 <OnPrint@@Base+0x344>
   172c4:	mov	w0, #0x0                   	// #0
   172c8:	b	171f8 <__sanitizer_set_report_fd@@Base+0xe48>
   172cc:	mov	w1, #0x1                   	// #1
   172d0:	b	171ec <__sanitizer_set_report_fd@@Base+0xe3c>
   172d4:	stp	x19, x20, [sp, #-48]!
   172d8:	str	x30, [sp, #16]
   172dc:	mov	x20, x0
   172e0:	mov	x19, x1
   172e4:	mov	w2, #0xa                   	// #10
   172e8:	add	x1, sp, #0x28
   172ec:	mov	x0, x19
   172f0:	bl	17fec <__sanitizer_set_report_fd@@Base+0x1c3c>
   172f4:	ldr	x1, [x20, #8]
   172f8:	str	x0, [x1]
   172fc:	ldr	x0, [sp, #40]
   17300:	ldrb	w0, [x0]
   17304:	cmp	w0, #0x0
   17308:	cset	w20, eq  // eq = none
   1730c:	cbnz	w0, 17320 <__sanitizer_set_report_fd@@Base+0xf70>
   17310:	mov	w0, w20
   17314:	ldr	x30, [sp, #16]
   17318:	ldp	x19, x20, [sp], #48
   1731c:	ret
   17320:	mov	x1, x19
   17324:	adrp	x0, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   17328:	add	x0, x0, #0x28
   1732c:	bl	1d874 <OnPrint@@Base+0x344>
   17330:	b	17310 <__sanitizer_set_report_fd@@Base+0xf60>
   17334:	stp	x19, x20, [sp, #-32]!
   17338:	str	x30, [sp, #24]
   1733c:	mov	x20, x0
   17340:	mov	x19, x1
   17344:	mov	w1, #0x25                  	// #37
   17348:	mov	x0, x19
   1734c:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   17350:	cbz	x0, 173b4 <__sanitizer_set_report_fd@@Base+0x1004>
   17354:	str	x21, [sp, #16]
   17358:	mov	w2, #0x0                   	// #0
   1735c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17360:	add	x1, x1, #0x408
   17364:	mov	x0, #0x1000                	// #4096
   17368:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1736c:	mov	x21, x0
   17370:	mov	x2, #0x1000                	// #4096
   17374:	mov	x1, x0
   17378:	mov	x0, x19
   1737c:	bl	16734 <__sanitizer_set_report_fd@@Base+0x384>
   17380:	ldrb	w2, [x20, #16]
   17384:	mov	x1, x21
   17388:	ldr	x0, [x20, #8]
   1738c:	bl	178dc <__sanitizer_set_report_fd@@Base+0x152c>
   17390:	and	w19, w0, #0xff
   17394:	mov	x1, #0x1000                	// #4096
   17398:	mov	x0, x21
   1739c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   173a0:	ldr	x21, [sp, #16]
   173a4:	mov	w0, w19
   173a8:	ldr	x30, [sp, #24]
   173ac:	ldp	x19, x20, [sp], #32
   173b0:	ret
   173b4:	ldrb	w2, [x20, #16]
   173b8:	mov	x1, x19
   173bc:	ldr	x0, [x20, #8]
   173c0:	bl	178dc <__sanitizer_set_report_fd@@Base+0x152c>
   173c4:	and	w19, w0, #0xff
   173c8:	b	173a4 <__sanitizer_set_report_fd@@Base+0xff4>
   173cc:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   173d0:	ldr	w1, [x0, #3168]
   173d4:	cbnz	w1, 173dc <__sanitizer_set_report_fd@@Base+0x102c>
   173d8:	ret
   173dc:	stp	x19, x20, [sp, #-32]!
   173e0:	str	x30, [sp, #24]
   173e4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   173e8:	add	x0, x0, #0x420
   173ec:	bl	1d874 <OnPrint@@Base+0x344>
   173f0:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   173f4:	ldr	w0, [x0, #3168]
   173f8:	cmp	w0, #0x0
   173fc:	b.le	17438 <__sanitizer_set_report_fd@@Base+0x1088>
   17400:	str	x21, [sp, #16]
   17404:	mov	x19, #0x0                   	// #0
   17408:	adrp	x20, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1740c:	add	x20, x20, #0xbc0
   17410:	adrp	x21, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17414:	add	x21, x21, #0x450
   17418:	ldr	x1, [x20, x19, lsl #3]
   1741c:	mov	x0, x21
   17420:	bl	1d874 <OnPrint@@Base+0x344>
   17424:	add	x19, x19, #0x1
   17428:	ldr	w0, [x20, #160]
   1742c:	cmp	w0, w19
   17430:	b.gt	17418 <__sanitizer_set_report_fd@@Base+0x1068>
   17434:	ldr	x21, [sp, #16]
   17438:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1743c:	str	wzr, [x0, #3168]
   17440:	ldr	x30, [sp, #24]
   17444:	ldp	x19, x20, [sp], #32
   17448:	ret
   1744c:	stp	x19, x20, [sp, #-32]!
   17450:	stp	x21, x30, [sp, #16]
   17454:	mov	x21, x1
   17458:	mov	x1, x2
   1745c:	mov	x0, x21
   17460:	bl	17eac <__sanitizer_set_report_fd@@Base+0x1afc>
   17464:	mov	x19, x0
   17468:	add	x1, x0, #0x1
   1746c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   17470:	add	x0, x0, #0xbc0
   17474:	add	x0, x0, #0xa8
   17478:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   1747c:	mov	x20, x0
   17480:	mov	x2, x19
   17484:	mov	x1, x21
   17488:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1748c:	strb	wzr, [x20, x19]
   17490:	mov	x0, x20
   17494:	ldp	x21, x30, [sp, #16]
   17498:	ldp	x19, x20, [sp], #32
   1749c:	ret
   174a0:	stp	x19, x20, [sp, #-48]!
   174a4:	stp	x21, x22, [sp, #16]
   174a8:	str	x30, [sp, #32]
   174ac:	mov	x21, x0
   174b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   174b4:	ldr	x0, [x0, #4008]
   174b8:	ldr	x1, [x0]
   174bc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   174c0:	add	x0, x0, #0x458
   174c4:	bl	1d874 <OnPrint@@Base+0x344>
   174c8:	ldr	w0, [x21, #8]
   174cc:	cmp	w0, #0x0
   174d0:	b.le	17510 <__sanitizer_set_report_fd@@Base+0x1160>
   174d4:	mov	x19, #0x0                   	// #0
   174d8:	mov	w20, #0x0                   	// #0
   174dc:	adrp	x22, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   174e0:	add	x22, x22, #0x478
   174e4:	ldr	x1, [x21]
   174e8:	add	x0, x1, x19
   174ec:	ldr	x2, [x0, #8]
   174f0:	ldr	x1, [x1, x19]
   174f4:	mov	x0, x22
   174f8:	bl	1d874 <OnPrint@@Base+0x344>
   174fc:	add	w20, w20, #0x1
   17500:	add	x19, x19, #0x18
   17504:	ldr	w0, [x21, #8]
   17508:	cmp	w0, w20
   1750c:	b.gt	174e4 <__sanitizer_set_report_fd@@Base+0x1134>
   17510:	ldp	x21, x22, [sp, #16]
   17514:	ldr	x30, [sp, #32]
   17518:	ldp	x19, x20, [sp], #48
   1751c:	ret
   17520:	str	x30, [sp, #-16]!
   17524:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17528:	add	x0, x0, #0x488
   1752c:	bl	1d874 <OnPrint@@Base+0x344>
   17530:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   17534:	and	w1, w1, #0xff
   17538:	cmp	w1, #0x20
   1753c:	cset	w0, eq  // eq = none
   17540:	cmp	w1, #0x2c
   17544:	csinc	w0, w0, wzr, ne  // ne = any
   17548:	cbnz	w0, 17570 <__sanitizer_set_report_fd@@Base+0x11c0>
   1754c:	cmp	w1, #0x3a
   17550:	cset	w0, eq  // eq = none
   17554:	cmp	w1, #0xa
   17558:	csinc	w0, w0, wzr, ne  // ne = any
   1755c:	cbnz	w0, 17570 <__sanitizer_set_report_fd@@Base+0x11c0>
   17560:	and	w1, w1, #0xfffffffb
   17564:	and	w1, w1, #0xff
   17568:	cmp	w1, #0x9
   1756c:	cset	w0, eq  // eq = none
   17570:	ret
   17574:	stp	x19, x20, [sp, #-32]!
   17578:	stp	x21, x30, [sp, #16]
   1757c:	mov	x20, x0
   17580:	ldr	x21, [x0, #16]
   17584:	ldr	x19, [x20, #24]
   17588:	ldrb	w1, [x21, x19]
   1758c:	mov	x0, x20
   17590:	bl	17534 <__sanitizer_set_report_fd@@Base+0x1184>
   17594:	and	w0, w0, #0xff
   17598:	cbz	w0, 175a8 <__sanitizer_set_report_fd@@Base+0x11f8>
   1759c:	add	x19, x19, #0x1
   175a0:	str	x19, [x20, #24]
   175a4:	b	17584 <__sanitizer_set_report_fd@@Base+0x11d4>
   175a8:	ldp	x21, x30, [sp, #16]
   175ac:	ldp	x19, x20, [sp], #32
   175b0:	ret
   175b4:	stp	x19, x20, [sp, #-48]!
   175b8:	stp	x21, x22, [sp, #16]
   175bc:	str	x30, [sp, #40]
   175c0:	mov	x21, x0
   175c4:	mov	x22, x1
   175c8:	ldr	w0, [x0, #8]
   175cc:	cmp	w0, #0x0
   175d0:	b.le	17610 <__sanitizer_set_report_fd@@Base+0x1260>
   175d4:	str	x23, [sp, #32]
   175d8:	mov	x23, x2
   175dc:	mov	x19, #0x0                   	// #0
   175e0:	mov	w20, #0x0                   	// #0
   175e4:	ldr	x0, [x21]
   175e8:	ldr	x1, [x0, x19]
   175ec:	mov	x0, x22
   175f0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   175f4:	cbz	w0, 17640 <__sanitizer_set_report_fd@@Base+0x1290>
   175f8:	add	w20, w20, #0x1
   175fc:	add	x19, x19, #0x18
   17600:	ldr	w0, [x21, #8]
   17604:	cmp	w0, w20
   17608:	b.gt	175e4 <__sanitizer_set_report_fd@@Base+0x1234>
   1760c:	ldr	x23, [sp, #32]
   17610:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   17614:	ldr	w1, [x0, #3168]
   17618:	sxtw	x3, w1
   1761c:	cmp	x3, #0x13
   17620:	b.hi	17674 <__sanitizer_set_report_fd@@Base+0x12c4>  // b.pmore
   17624:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   17628:	add	x0, x0, #0xbc0
   1762c:	add	w2, w1, #0x1
   17630:	str	w2, [x0, #160]
   17634:	str	x22, [x0, w1, sxtw #3]
   17638:	mov	w0, #0x1                   	// #1
   1763c:	b	17664 <__sanitizer_set_report_fd@@Base+0x12b4>
   17640:	ldr	x0, [x21]
   17644:	add	x19, x0, x19
   17648:	ldr	x0, [x19, #16]
   1764c:	ldr	x1, [x0]
   17650:	ldr	x2, [x1]
   17654:	mov	x1, x23
   17658:	blr	x2
   1765c:	and	w0, w0, #0xff
   17660:	ldr	x23, [sp, #32]
   17664:	ldp	x21, x22, [sp, #16]
   17668:	ldr	x30, [sp, #40]
   1766c:	ldp	x19, x20, [sp], #48
   17670:	ret
   17674:	str	x23, [sp, #32]
   17678:	mov	x4, #0x14                  	// #20
   1767c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17680:	add	x2, x2, #0x498
   17684:	mov	w1, #0x1e                  	// #30
   17688:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1768c:	add	x0, x0, #0x4c8
   17690:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17694:	stp	x19, x20, [sp, #-64]!
   17698:	stp	x21, x22, [sp, #16]
   1769c:	stp	x23, x24, [sp, #32]
   176a0:	str	x30, [sp, #48]
   176a4:	mov	x19, x0
   176a8:	ldr	x23, [x0, #24]
   176ac:	ldr	x22, [x0, #16]
   176b0:	add	x24, x22, x23
   176b4:	ldrb	w20, [x22, x23]
   176b8:	cmp	w20, #0x3d
   176bc:	ccmp	w20, #0x0, #0x4, ne  // ne = any
   176c0:	b.eq	177a0 <__sanitizer_set_report_fd@@Base+0x13f0>  // b.none
   176c4:	mov	x21, x23
   176c8:	mov	w1, w20
   176cc:	mov	x0, x19
   176d0:	bl	17534 <__sanitizer_set_report_fd@@Base+0x1184>
   176d4:	and	w0, w0, #0xff
   176d8:	cbnz	w0, 176f4 <__sanitizer_set_report_fd@@Base+0x1344>
   176dc:	add	x21, x21, #0x1
   176e0:	str	x21, [x19, #24]
   176e4:	ldrb	w20, [x22, x21]
   176e8:	cmp	w20, #0x3d
   176ec:	ccmp	w20, #0x0, #0x4, ne  // ne = any
   176f0:	b.ne	176c8 <__sanitizer_set_report_fd@@Base+0x1318>  // b.any
   176f4:	cmp	w20, #0x3d
   176f8:	b.ne	177a8 <__sanitizer_set_report_fd@@Base+0x13f8>  // b.any
   176fc:	sub	x2, x21, x23
   17700:	mov	x1, x24
   17704:	mov	x0, x19
   17708:	bl	1744c <__sanitizer_set_report_fd@@Base+0x109c>
   1770c:	mov	x23, x0
   17710:	ldr	x3, [x19, #24]
   17714:	add	x22, x3, #0x1
   17718:	str	x22, [x19, #24]
   1771c:	ldr	x21, [x19, #16]
   17720:	add	x24, x21, x22
   17724:	ldrb	w1, [x21, x22]
   17728:	cmp	w1, #0x27
   1772c:	mov	w0, #0x22                  	// #34
   17730:	ccmp	w1, w0, #0x4, ne  // ne = any
   17734:	b.ne	177c8 <__sanitizer_set_report_fd@@Base+0x1418>  // b.any
   17738:	add	x4, x3, #0x2
   1773c:	str	x4, [x19, #24]
   17740:	ldrb	w2, [x21, x22]
   17744:	add	x1, x21, x4
   17748:	ldrb	w0, [x21, x4]
   1774c:	cmp	w0, #0x0
   17750:	ccmp	w2, w0, #0x4, ne  // ne = any
   17754:	b.eq	17778 <__sanitizer_set_report_fd@@Base+0x13c8>  // b.none
   17758:	add	x3, x3, #0x3
   1775c:	str	x3, [x19, #24]
   17760:	ldrb	w0, [x21, x3]
   17764:	mov	x4, x3
   17768:	add	x3, x3, #0x1
   1776c:	cmp	w0, #0x0
   17770:	ccmp	w0, w2, #0x4, ne  // ne = any
   17774:	b.ne	1775c <__sanitizer_set_report_fd@@Base+0x13ac>  // b.any
   17778:	cbz	w0, 177b8 <__sanitizer_set_report_fd@@Base+0x1408>
   1777c:	mvn	x2, x22
   17780:	add	x2, x2, x4
   17784:	mov	x0, x19
   17788:	bl	1744c <__sanitizer_set_report_fd@@Base+0x109c>
   1778c:	mov	x2, x0
   17790:	ldr	x0, [x19, #24]
   17794:	add	x0, x0, #0x1
   17798:	str	x0, [x19, #24]
   1779c:	b	17804 <__sanitizer_set_report_fd@@Base+0x1454>
   177a0:	mov	x21, x23
   177a4:	b	176f4 <__sanitizer_set_report_fd@@Base+0x1344>
   177a8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   177ac:	add	x1, x1, #0x510
   177b0:	mov	x0, x19
   177b4:	bl	17520 <__sanitizer_set_report_fd@@Base+0x1170>
   177b8:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   177bc:	add	x1, x1, #0x520
   177c0:	mov	x0, x19
   177c4:	bl	17520 <__sanitizer_set_report_fd@@Base+0x1170>
   177c8:	cbz	w1, 1783c <__sanitizer_set_report_fd@@Base+0x148c>
   177cc:	mov	x20, x22
   177d0:	mov	x0, x19
   177d4:	bl	17534 <__sanitizer_set_report_fd@@Base+0x1184>
   177d8:	and	w0, w0, #0xff
   177dc:	cbnz	w0, 177f0 <__sanitizer_set_report_fd@@Base+0x1440>
   177e0:	add	x20, x20, #0x1
   177e4:	str	x20, [x19, #24]
   177e8:	ldrb	w1, [x21, x20]
   177ec:	cbnz	w1, 177d0 <__sanitizer_set_report_fd@@Base+0x1420>
   177f0:	sub	x2, x20, x22
   177f4:	mov	x1, x24
   177f8:	mov	x0, x19
   177fc:	bl	1744c <__sanitizer_set_report_fd@@Base+0x109c>
   17800:	mov	x2, x0
   17804:	mov	x1, x23
   17808:	mov	x0, x19
   1780c:	bl	175b4 <__sanitizer_set_report_fd@@Base+0x1204>
   17810:	and	w0, w0, #0xff
   17814:	cbz	w0, 1782c <__sanitizer_set_report_fd@@Base+0x147c>
   17818:	ldp	x21, x22, [sp, #16]
   1781c:	ldp	x23, x24, [sp, #32]
   17820:	ldr	x30, [sp, #48]
   17824:	ldp	x19, x20, [sp], #64
   17828:	ret
   1782c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17830:	add	x1, x1, #0x538
   17834:	mov	x0, x19
   17838:	bl	17520 <__sanitizer_set_report_fd@@Base+0x1170>
   1783c:	mov	x20, x22
   17840:	b	177f0 <__sanitizer_set_report_fd@@Base+0x1440>
   17844:	stp	x19, x30, [sp, #-16]!
   17848:	mov	x19, x0
   1784c:	mov	x0, x19
   17850:	bl	17574 <__sanitizer_set_report_fd@@Base+0x11c4>
   17854:	ldr	x1, [x19, #16]
   17858:	ldr	x0, [x19, #24]
   1785c:	ldrb	w0, [x1, x0]
   17860:	cbz	w0, 17870 <__sanitizer_set_report_fd@@Base+0x14c0>
   17864:	mov	x0, x19
   17868:	bl	17694 <__sanitizer_set_report_fd@@Base+0x12e4>
   1786c:	b	1784c <__sanitizer_set_report_fd@@Base+0x149c>
   17870:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17874:	ldr	x0, [x0, #4040]
   17878:	ldr	w0, [x0, #36]
   1787c:	cmp	w0, #0x0
   17880:	b.le	1788c <__sanitizer_set_report_fd@@Base+0x14dc>
   17884:	ldp	x19, x30, [sp], #16
   17888:	ret
   1788c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17890:	ldr	x0, [x0, #4040]
   17894:	mov	w1, #0x1                   	// #1
   17898:	str	w1, [x0, #36]
   1789c:	b	17884 <__sanitizer_set_report_fd@@Base+0x14d4>
   178a0:	cbz	x1, 178d8 <__sanitizer_set_report_fd@@Base+0x1528>
   178a4:	stp	x19, x20, [sp, #-32]!
   178a8:	stp	x21, x30, [sp, #16]
   178ac:	mov	x19, x0
   178b0:	ldr	x21, [x0, #16]
   178b4:	ldr	x20, [x0, #24]
   178b8:	str	x1, [x0, #16]
   178bc:	str	xzr, [x0, #24]
   178c0:	bl	17844 <__sanitizer_set_report_fd@@Base+0x1494>
   178c4:	str	x21, [x19, #16]
   178c8:	str	x20, [x19, #24]
   178cc:	ldp	x21, x30, [sp, #16]
   178d0:	ldp	x19, x20, [sp], #32
   178d4:	ret
   178d8:	ret
   178dc:	stp	x19, x20, [sp, #-80]!
   178e0:	stp	x21, x22, [sp, #16]
   178e4:	str	x30, [sp, #32]
   178e8:	mov	x21, x0
   178ec:	mov	x20, x1
   178f0:	and	w22, w2, #0xff
   178f4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   178f8:	ldr	x1, [x1, #4000]
   178fc:	ldr	x0, [x1]
   17900:	cbz	x0, 17954 <__sanitizer_set_report_fd@@Base+0x15a4>
   17904:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17908:	ldr	x1, [x1, #4000]
   1790c:	ldr	x0, [x1]
   17910:	cmp	x0, #0x8, lsl #12
   17914:	add	x5, sp, #0x3c
   17918:	mov	x4, #0x8000                	// #32768
   1791c:	csel	x4, x0, x4, cs  // cs = hs, nlast
   17920:	add	x3, sp, #0x30
   17924:	add	x2, sp, #0x40
   17928:	add	x1, sp, #0x48
   1792c:	mov	x0, x20
   17930:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   17934:	ands	w19, w0, #0xff
   17938:	b.ne	17980 <__sanitizer_set_report_fd@@Base+0x15d0>  // b.any
   1793c:	cbz	w22, 17968 <__sanitizer_set_report_fd@@Base+0x15b8>
   17940:	mov	w0, w22
   17944:	ldp	x21, x22, [sp, #16]
   17948:	ldr	x30, [sp, #32]
   1794c:	ldp	x19, x20, [sp], #80
   17950:	ret
   17954:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   17958:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1795c:	ldr	x1, [x1, #4000]
   17960:	str	x0, [x1]
   17964:	b	17904 <__sanitizer_set_report_fd@@Base+0x1554>
   17968:	ldr	w2, [sp, #60]
   1796c:	mov	x1, x20
   17970:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17974:	add	x0, x0, #0x550
   17978:	bl	1d874 <OnPrint@@Base+0x344>
   1797c:	b	17940 <__sanitizer_set_report_fd@@Base+0x1590>
   17980:	ldr	x1, [sp, #72]
   17984:	mov	x0, x21
   17988:	bl	178a0 <__sanitizer_set_report_fd@@Base+0x14f0>
   1798c:	ldr	x1, [sp, #64]
   17990:	ldr	x0, [sp, #72]
   17994:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   17998:	mov	w22, w19
   1799c:	b	17940 <__sanitizer_set_report_fd@@Base+0x1590>
   179a0:	ldrsw	x5, [x0, #8]
   179a4:	cmp	x5, #0xc7
   179a8:	b.hi	179f0 <__sanitizer_set_report_fd@@Base+0x1640>  // b.pmore
   179ac:	ldr	x4, [x0]
   179b0:	add	x5, x5, x5, lsl #1
   179b4:	str	x1, [x4, x5, lsl #3]
   179b8:	ldrsw	x1, [x0, #8]
   179bc:	ldr	x4, [x0]
   179c0:	add	x1, x1, x1, lsl #1
   179c4:	add	x1, x4, x1, lsl #3
   179c8:	str	x3, [x1, #8]
   179cc:	ldrsw	x1, [x0, #8]
   179d0:	ldr	x3, [x0]
   179d4:	add	x1, x1, x1, lsl #1
   179d8:	add	x1, x3, x1, lsl #3
   179dc:	str	x2, [x1, #16]
   179e0:	ldr	w1, [x0, #8]
   179e4:	add	w1, w1, #0x1
   179e8:	str	w1, [x0, #8]
   179ec:	ret
   179f0:	str	x30, [sp, #-16]!
   179f4:	mov	x4, #0xc8                  	// #200
   179f8:	mov	x3, x5
   179fc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17a00:	add	x2, x2, #0x580
   17a04:	mov	w1, #0x9e                  	// #158
   17a08:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   17a0c:	add	x0, x0, #0x4c8
   17a10:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   17a14:	stp	x19, x30, [sp, #-16]!
   17a18:	mov	x19, x0
   17a1c:	str	wzr, [x0, #8]
   17a20:	str	xzr, [x0, #16]
   17a24:	str	xzr, [x0, #24]
   17a28:	mov	x1, #0x12c0                	// #4800
   17a2c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   17a30:	add	x0, x0, #0xbc0
   17a34:	add	x0, x0, #0xa8
   17a38:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   17a3c:	str	x0, [x19]
   17a40:	ldp	x19, x30, [sp], #16
   17a44:	ret
   17a48:	cbz	x2, 17a70 <__sanitizer_set_report_fd@@Base+0x16c0>
   17a4c:	add	x3, x0, x2
   17a50:	ldrb	w2, [x0]
   17a54:	cmp	w2, w1
   17a58:	b.eq	17a6c <__sanitizer_set_report_fd@@Base+0x16bc>  // b.none
   17a5c:	add	x0, x0, #0x1
   17a60:	cmp	x3, x0
   17a64:	b.ne	17a50 <__sanitizer_set_report_fd@@Base+0x16a0>  // b.any
   17a68:	mov	x0, #0x0                   	// #0
   17a6c:	ret
   17a70:	mov	x0, #0x0                   	// #0
   17a74:	b	17a6c <__sanitizer_set_report_fd@@Base+0x16bc>
   17a78:	mov	x3, x0
   17a7c:	cbz	x2, 17aa4 <__sanitizer_set_report_fd@@Base+0x16f4>
   17a80:	add	x4, x0, x2
   17a84:	mov	x0, #0x0                   	// #0
   17a88:	ldrb	w2, [x3]
   17a8c:	cmp	w2, w1
   17a90:	csel	x0, x0, x3, ne  // ne = any
   17a94:	add	x3, x3, #0x1
   17a98:	cmp	x4, x3
   17a9c:	b.ne	17a88 <__sanitizer_set_report_fd@@Base+0x16d8>  // b.any
   17aa0:	ret
   17aa4:	mov	x0, #0x0                   	// #0
   17aa8:	b	17aa0 <__sanitizer_set_report_fd@@Base+0x16f0>
   17aac:	cbz	x2, 17ae4 <__sanitizer_set_report_fd@@Base+0x1734>
   17ab0:	mov	x3, #0x0                   	// #0
   17ab4:	ldrb	w5, [x0, x3]
   17ab8:	ldrb	w4, [x1, x3]
   17abc:	cmp	w5, w4
   17ac0:	b.ne	17ad8 <__sanitizer_set_report_fd@@Base+0x1728>  // b.any
   17ac4:	add	x3, x3, #0x1
   17ac8:	cmp	x2, x3
   17acc:	b.ne	17ab4 <__sanitizer_set_report_fd@@Base+0x1704>  // b.any
   17ad0:	mov	w0, #0x0                   	// #0
   17ad4:	b	17ae0 <__sanitizer_set_report_fd@@Base+0x1730>
   17ad8:	mov	w0, #0x1                   	// #1
   17adc:	cneg	w0, w0, cc  // cc = lo, ul, last
   17ae0:	ret
   17ae4:	mov	w0, #0x0                   	// #0
   17ae8:	b	17ae0 <__sanitizer_set_report_fd@@Base+0x1730>
   17aec:	cbz	x2, 17b08 <__sanitizer_set_report_fd@@Base+0x1758>
   17af0:	mov	x3, #0x0                   	// #0
   17af4:	ldrb	w4, [x1, x3]
   17af8:	strb	w4, [x0, x3]
   17afc:	add	x3, x3, #0x1
   17b00:	cmp	x2, x3
   17b04:	b.ne	17af4 <__sanitizer_set_report_fd@@Base+0x1744>  // b.any
   17b08:	ret
   17b0c:	cmp	x0, x1
   17b10:	b.cs	17b38 <__sanitizer_set_report_fd@@Base+0x1788>  // b.hs, b.nlast
   17b14:	cmp	x2, #0x0
   17b18:	b.le	17b34 <__sanitizer_set_report_fd@@Base+0x1784>
   17b1c:	mov	x3, #0x0                   	// #0
   17b20:	ldrb	w4, [x1, x3]
   17b24:	strb	w4, [x0, x3]
   17b28:	add	x3, x3, #0x1
   17b2c:	cmp	x2, x3
   17b30:	b.ne	17b20 <__sanitizer_set_report_fd@@Base+0x1770>  // b.any
   17b34:	ret
   17b38:	cmp	x2, #0x0
   17b3c:	ccmp	x0, x1, #0x0, gt
   17b40:	b.ls	17b34 <__sanitizer_set_report_fd@@Base+0x1784>  // b.plast
   17b44:	sub	x2, x2, #0x1
   17b48:	ldrb	w3, [x1, x2]
   17b4c:	strb	w3, [x0, x2]
   17b50:	subs	x2, x2, #0x1
   17b54:	b.pl	17b48 <__sanitizer_set_report_fd@@Base+0x1798>  // b.nfrst
   17b58:	b	17b34 <__sanitizer_set_report_fd@@Base+0x1784>
   17b5c:	orr	x3, x0, x2
   17b60:	tst	x3, #0xf
   17b64:	b.eq	17b88 <__sanitizer_set_report_fd@@Base+0x17d8>  // b.none
   17b68:	cbz	x2, 17b84 <__sanitizer_set_report_fd@@Base+0x17d4>
   17b6c:	add	x3, x0, x2
   17b70:	mov	x2, x0
   17b74:	and	w1, w1, #0xff
   17b78:	strb	w1, [x2], #1
   17b7c:	cmp	x3, x2
   17b80:	b.ne	17b78 <__sanitizer_set_report_fd@@Base+0x17c8>  // b.any
   17b84:	ret
   17b88:	and	x2, x2, #0xfffffffffffffff8
   17b8c:	add	x2, x0, x2
   17b90:	sxtw	x3, w1
   17b94:	sbfiz	x1, x1, #8, #32
   17b98:	orr	x1, x1, x3
   17b9c:	orr	x1, x1, x1, lsl #16
   17ba0:	orr	x1, x1, x1, lsl #32
   17ba4:	cmp	x0, x2
   17ba8:	b.cs	17b84 <__sanitizer_set_report_fd@@Base+0x17d4>  // b.hs, b.nlast
   17bac:	mov	x3, x0
   17bb0:	str	x1, [x3, #8]
   17bb4:	str	x1, [x3], #16
   17bb8:	cmp	x2, x3
   17bbc:	b.hi	17bb0 <__sanitizer_set_report_fd@@Base+0x1800>  // b.pmore
   17bc0:	b	17b84 <__sanitizer_set_report_fd@@Base+0x17d4>
   17bc4:	ldrb	w3, [x0]
   17bc8:	ldrb	w4, [x1]
   17bcc:	mov	x2, #0x1                   	// #1
   17bd0:	cmp	w3, w4
   17bd4:	b.ne	17bf0 <__sanitizer_set_report_fd@@Base+0x1840>  // b.any
   17bd8:	cbz	w3, 17c00 <__sanitizer_set_report_fd@@Base+0x1850>
   17bdc:	ldrb	w3, [x0, x2]
   17be0:	ldrb	w4, [x1, x2]
   17be4:	add	x2, x2, #0x1
   17be8:	cmp	w3, w4
   17bec:	b.eq	17bd8 <__sanitizer_set_report_fd@@Base+0x1828>  // b.none
   17bf0:	mov	w0, #0x1                   	// #1
   17bf4:	cmp	w3, w4
   17bf8:	cneg	w0, w0, cc  // cc = lo, ul, last
   17bfc:	ret
   17c00:	mov	w0, #0x0                   	// #0
   17c04:	b	17bfc <__sanitizer_set_report_fd@@Base+0x184c>
   17c08:	cbz	x2, 17c44 <__sanitizer_set_report_fd@@Base+0x1894>
   17c0c:	mov	x3, #0x0                   	// #0
   17c10:	ldrb	w4, [x0, x3]
   17c14:	ldrb	w5, [x1, x3]
   17c18:	cmp	w4, w5
   17c1c:	b.ne	17c38 <__sanitizer_set_report_fd@@Base+0x1888>  // b.any
   17c20:	cbz	w4, 17c4c <__sanitizer_set_report_fd@@Base+0x189c>
   17c24:	add	x3, x3, #0x1
   17c28:	cmp	x2, x3
   17c2c:	b.ne	17c10 <__sanitizer_set_report_fd@@Base+0x1860>  // b.any
   17c30:	mov	w0, #0x0                   	// #0
   17c34:	b	17c40 <__sanitizer_set_report_fd@@Base+0x1890>
   17c38:	mov	w0, #0x1                   	// #1
   17c3c:	cneg	w0, w0, cc  // cc = lo, ul, last
   17c40:	ret
   17c44:	mov	w0, #0x0                   	// #0
   17c48:	b	17c40 <__sanitizer_set_report_fd@@Base+0x1890>
   17c4c:	mov	w0, #0x0                   	// #0
   17c50:	b	17c40 <__sanitizer_set_report_fd@@Base+0x1890>
   17c54:	ldrb	w2, [x0]
   17c58:	and	w3, w1, #0xff
   17c5c:	cmp	w2, w1, uxtb
   17c60:	b.eq	17c7c <__sanitizer_set_report_fd@@Base+0x18cc>  // b.none
   17c64:	cbz	w2, 17c78 <__sanitizer_set_report_fd@@Base+0x18c8>
   17c68:	ldrb	w2, [x0, #1]!
   17c6c:	cmp	w2, w3
   17c70:	b.ne	17c64 <__sanitizer_set_report_fd@@Base+0x18b4>  // b.any
   17c74:	b	17c7c <__sanitizer_set_report_fd@@Base+0x18cc>
   17c78:	mov	x0, #0x0                   	// #0
   17c7c:	ret
   17c80:	stp	x19, x20, [sp, #-32]!
   17c84:	stp	x21, x30, [sp, #16]
   17c88:	mov	x21, x1
   17c8c:	ldrb	w1, [x0]
   17c90:	cbz	w1, 17cc4 <__sanitizer_set_report_fd@@Base+0x1914>
   17c94:	mov	x20, x0
   17c98:	mov	x19, #0x0                   	// #0
   17c9c:	mov	x0, x21
   17ca0:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   17ca4:	cbnz	x0, 17cb4 <__sanitizer_set_report_fd@@Base+0x1904>
   17ca8:	add	x19, x19, #0x1
   17cac:	ldrb	w1, [x20, x19]
   17cb0:	cbnz	w1, 17c9c <__sanitizer_set_report_fd@@Base+0x18ec>
   17cb4:	mov	x0, x19
   17cb8:	ldp	x21, x30, [sp, #16]
   17cbc:	ldp	x19, x20, [sp], #32
   17cc0:	ret
   17cc4:	mov	x19, #0x0                   	// #0
   17cc8:	b	17cb4 <__sanitizer_set_report_fd@@Base+0x1904>
   17ccc:	mov	x2, x0
   17cd0:	ldrb	w3, [x0]
   17cd4:	cbz	w3, 17cf0 <__sanitizer_set_report_fd@@Base+0x1940>
   17cd8:	mov	x0, #0x0                   	// #0
   17cdc:	cmp	w3, w1
   17ce0:	csel	x0, x0, x2, ne  // ne = any
   17ce4:	ldrb	w3, [x2, #1]!
   17ce8:	cbnz	w3, 17cdc <__sanitizer_set_report_fd@@Base+0x192c>
   17cec:	ret
   17cf0:	mov	x0, #0x0                   	// #0
   17cf4:	b	17cec <__sanitizer_set_report_fd@@Base+0x193c>
   17cf8:	mov	x2, x0
   17cfc:	ldrb	w0, [x0]
   17d00:	cbz	w0, 17d18 <__sanitizer_set_report_fd@@Base+0x1968>
   17d04:	mov	x0, #0x0                   	// #0
   17d08:	add	x0, x0, #0x1
   17d0c:	ldrb	w1, [x2, x0]
   17d10:	cbnz	w1, 17d08 <__sanitizer_set_report_fd@@Base+0x1958>
   17d14:	ret
   17d18:	mov	x0, #0x0                   	// #0
   17d1c:	b	17d14 <__sanitizer_set_report_fd@@Base+0x1964>
   17d20:	stp	x19, x20, [sp, #-32]!
   17d24:	stp	x21, x30, [sp, #16]
   17d28:	mov	x21, x0
   17d2c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17d30:	mov	x19, x0
   17d34:	mov	x2, #0x0                   	// #0
   17d38:	mov	x1, #0x0                   	// #0
   17d3c:	add	x0, x0, #0x1
   17d40:	bl	10800 <__sancov_default_options@@Base+0x47c>
   17d44:	mov	x20, x0
   17d48:	mov	x2, x19
   17d4c:	mov	x1, x21
   17d50:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   17d54:	strb	wzr, [x20, x19]
   17d58:	mov	x0, x20
   17d5c:	ldp	x21, x30, [sp, #16]
   17d60:	ldp	x19, x20, [sp], #32
   17d64:	ret
   17d68:	stp	x19, x30, [sp, #-16]!
   17d6c:	mov	x19, x0
   17d70:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   17d74:	cbz	x0, 17d80 <__sanitizer_set_report_fd@@Base+0x19d0>
   17d78:	ldp	x19, x30, [sp], #16
   17d7c:	ret
   17d80:	mov	x0, x19
   17d84:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17d88:	add	x0, x19, x0
   17d8c:	b	17d78 <__sanitizer_set_report_fd@@Base+0x19c8>
   17d90:	stp	x19, x20, [sp, #-32]!
   17d94:	stp	x21, x30, [sp, #16]
   17d98:	mov	x21, x0
   17d9c:	mov	x20, x1
   17da0:	mov	x19, x2
   17da4:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17da8:	cbz	x19, 17de4 <__sanitizer_set_report_fd@@Base+0x1a34>
   17dac:	mov	x3, #0x0                   	// #0
   17db0:	add	x1, x21, x0
   17db4:	ldrb	w4, [x20, x3]
   17db8:	cbz	w4, 17dcc <__sanitizer_set_report_fd@@Base+0x1a1c>
   17dbc:	strb	w4, [x1, x3]
   17dc0:	add	x3, x3, #0x1
   17dc4:	cmp	x19, x3
   17dc8:	b.ne	17db4 <__sanitizer_set_report_fd@@Base+0x1a04>  // b.any
   17dcc:	add	x0, x21, x0
   17dd0:	strb	wzr, [x0, x3]
   17dd4:	mov	x0, x21
   17dd8:	ldp	x21, x30, [sp, #16]
   17ddc:	ldp	x19, x20, [sp], #32
   17de0:	ret
   17de4:	mov	x3, x19
   17de8:	b	17dcc <__sanitizer_set_report_fd@@Base+0x1a1c>
   17dec:	stp	x19, x20, [sp, #-48]!
   17df0:	stp	x21, x22, [sp, #16]
   17df4:	str	x30, [sp, #32]
   17df8:	mov	x22, x0
   17dfc:	mov	x21, x1
   17e00:	mov	x19, x2
   17e04:	mov	x0, x1
   17e08:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17e0c:	mov	x20, x0
   17e10:	cmp	x0, x19
   17e14:	b.cc	17e30 <__sanitizer_set_report_fd@@Base+0x1a80>  // b.lo, b.ul, b.last
   17e18:	cbnz	x19, 17e44 <__sanitizer_set_report_fd@@Base+0x1a94>
   17e1c:	mov	x0, x20
   17e20:	ldp	x21, x22, [sp, #16]
   17e24:	ldr	x30, [sp, #32]
   17e28:	ldp	x19, x20, [sp], #48
   17e2c:	ret
   17e30:	add	x2, x0, #0x1
   17e34:	mov	x1, x21
   17e38:	mov	x0, x22
   17e3c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x175c>
   17e40:	b	17e1c <__sanitizer_set_report_fd@@Base+0x1a6c>
   17e44:	sub	x19, x19, #0x1
   17e48:	mov	x2, x19
   17e4c:	mov	x1, x21
   17e50:	mov	x0, x22
   17e54:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x175c>
   17e58:	strb	wzr, [x22, x19]
   17e5c:	b	17e1c <__sanitizer_set_report_fd@@Base+0x1a6c>
   17e60:	stp	x19, x30, [sp, #-16]!
   17e64:	mov	x19, x0
   17e68:	cbz	x2, 17ea4 <__sanitizer_set_report_fd@@Base+0x1af4>
   17e6c:	mov	x0, #0x0                   	// #0
   17e70:	ldrb	w4, [x1, x0]
   17e74:	cbz	w4, 17e88 <__sanitizer_set_report_fd@@Base+0x1ad8>
   17e78:	strb	w4, [x19, x0]
   17e7c:	add	x0, x0, #0x1
   17e80:	cmp	x2, x0
   17e84:	b.ne	17e70 <__sanitizer_set_report_fd@@Base+0x1ac0>  // b.any
   17e88:	sub	x2, x2, x0
   17e8c:	mov	w1, #0x0                   	// #0
   17e90:	add	x0, x19, x0
   17e94:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   17e98:	mov	x0, x19
   17e9c:	ldp	x19, x30, [sp], #16
   17ea0:	ret
   17ea4:	mov	x0, x2
   17ea8:	b	17e88 <__sanitizer_set_report_fd@@Base+0x1ad8>
   17eac:	mov	x3, x0
   17eb0:	cbz	x1, 17ed0 <__sanitizer_set_report_fd@@Base+0x1b20>
   17eb4:	mov	x0, #0x0                   	// #0
   17eb8:	ldrb	w2, [x3, x0]
   17ebc:	cbz	w2, 17ecc <__sanitizer_set_report_fd@@Base+0x1b1c>
   17ec0:	add	x0, x0, #0x1
   17ec4:	cmp	x1, x0
   17ec8:	b.ne	17eb8 <__sanitizer_set_report_fd@@Base+0x1b08>  // b.any
   17ecc:	ret
   17ed0:	mov	x0, x1
   17ed4:	b	17ecc <__sanitizer_set_report_fd@@Base+0x1b1c>
   17ed8:	stp	x19, x20, [sp, #-48]!
   17edc:	stp	x21, x22, [sp, #16]
   17ee0:	stp	x23, x30, [sp, #32]
   17ee4:	mov	x22, x0
   17ee8:	mov	x23, x1
   17eec:	mov	x21, x2
   17ef0:	mov	x0, x1
   17ef4:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17ef8:	mov	x19, x0
   17efc:	mov	x1, x21
   17f00:	mov	x0, x22
   17f04:	bl	17eac <__sanitizer_set_report_fd@@Base+0x1afc>
   17f08:	mov	x20, x0
   17f0c:	cmp	x21, x0
   17f10:	b.eq	17f44 <__sanitizer_set_report_fd@@Base+0x1b94>  // b.none
   17f14:	sub	x2, x21, x0
   17f18:	cmp	x2, x19
   17f1c:	b.ls	17f4c <__sanitizer_set_report_fd@@Base+0x1b9c>  // b.plast
   17f20:	add	x2, x19, #0x1
   17f24:	mov	x1, x23
   17f28:	add	x0, x22, x0
   17f2c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x175c>
   17f30:	add	x0, x19, x20
   17f34:	ldp	x21, x22, [sp, #16]
   17f38:	ldp	x23, x30, [sp, #32]
   17f3c:	ldp	x19, x20, [sp], #48
   17f40:	ret
   17f44:	add	x0, x19, x0
   17f48:	b	17f34 <__sanitizer_set_report_fd@@Base+0x1b84>
   17f4c:	sub	x2, x2, #0x1
   17f50:	mov	x1, x23
   17f54:	add	x0, x22, x0
   17f58:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x175c>
   17f5c:	add	x21, x22, x21
   17f60:	sturb	wzr, [x21, #-1]
   17f64:	b	17f30 <__sanitizer_set_report_fd@@Base+0x1b80>
   17f68:	stp	x19, x20, [sp, #-64]!
   17f6c:	stp	x21, x22, [sp, #16]
   17f70:	stp	x23, x24, [sp, #32]
   17f74:	str	x30, [sp, #48]
   17f78:	mov	x24, x0
   17f7c:	mov	x23, x1
   17f80:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17f84:	mov	x21, x0
   17f88:	mov	x0, x23
   17f8c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   17f90:	cmp	x21, x0
   17f94:	b.cc	17fe4 <__sanitizer_set_report_fd@@Base+0x1c34>  // b.lo, b.ul, b.last
   17f98:	mov	x22, x0
   17f9c:	sub	x21, x21, x0
   17fa0:	mov	x19, #0x0                   	// #0
   17fa4:	add	x20, x24, x19
   17fa8:	mov	x2, x22
   17fac:	mov	x1, x23
   17fb0:	mov	x0, x20
   17fb4:	bl	17aac <__sanitizer_set_report_fd@@Base+0x16fc>
   17fb8:	cbz	w0, 17fcc <__sanitizer_set_report_fd@@Base+0x1c1c>
   17fbc:	add	x19, x19, #0x1
   17fc0:	cmp	x19, x21
   17fc4:	b.ls	17fa4 <__sanitizer_set_report_fd@@Base+0x1bf4>  // b.plast
   17fc8:	mov	x20, #0x0                   	// #0
   17fcc:	mov	x0, x20
   17fd0:	ldp	x21, x22, [sp, #16]
   17fd4:	ldp	x23, x24, [sp, #32]
   17fd8:	ldr	x30, [sp, #48]
   17fdc:	ldp	x19, x20, [sp], #64
   17fe0:	ret
   17fe4:	mov	x20, #0x0                   	// #0
   17fe8:	b	17fcc <__sanitizer_set_report_fd@@Base+0x1c1c>
   17fec:	cmp	w2, #0xa
   17ff0:	b.eq	1801c <__sanitizer_set_report_fd@@Base+0x1c6c>  // b.none
   17ff4:	str	x30, [sp, #-16]!
   17ff8:	sxtw	x3, w2
   17ffc:	mov	x4, #0xa                   	// #10
   18000:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18004:	add	x2, x2, #0x5a0
   18008:	mov	w1, #0xe5                  	// #229
   1800c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18010:	add	x0, x0, #0x5b8
   18014:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18018:	add	x0, x0, #0x1
   1801c:	ldrb	w2, [x0]
   18020:	cmp	w2, #0x20
   18024:	b.eq	18018 <__sanitizer_set_report_fd@@Base+0x1c68>  // b.none
   18028:	sub	w3, w2, #0x9
   1802c:	and	w3, w3, #0xff
   18030:	cmp	w3, #0x4
   18034:	b.ls	18018 <__sanitizer_set_report_fd@@Base+0x1c68>  // b.plast
   18038:	cmp	w2, #0x2b
   1803c:	b.eq	180c8 <__sanitizer_set_report_fd@@Base+0x1d18>  // b.none
   18040:	mov	x4, x0
   18044:	mov	w7, #0x1                   	// #1
   18048:	cmp	w2, #0x2d
   1804c:	b.eq	180d4 <__sanitizer_set_report_fd@@Base+0x1d24>  // b.none
   18050:	ldrb	w2, [x4]
   18054:	sub	w3, w2, #0x30
   18058:	cmp	w3, #0x9
   1805c:	b.hi	180f4 <__sanitizer_set_report_fd@@Base+0x1d44>  // b.pmore
   18060:	mov	x3, #0x0                   	// #0
   18064:	mov	x6, #0x9999999999999999    	// #-7378697629483820647
   18068:	movk	x6, #0x1999, lsl #48
   1806c:	mov	x5, #0xffffffffffffffff    	// #-1
   18070:	add	x0, x3, x3, lsl #2
   18074:	lsl	x0, x0, #1
   18078:	cmp	x3, x6
   1807c:	csel	x0, x0, x5, ls  // ls = plast
   18080:	sub	w2, w2, #0x30
   18084:	sxtw	x2, w2
   18088:	mvn	x3, x2
   1808c:	add	x2, x2, x0
   18090:	cmp	x3, x0
   18094:	csel	x3, x2, x5, cs  // cs = hs, nlast
   18098:	ldrb	w2, [x4, #1]!
   1809c:	sub	w0, w2, #0x30
   180a0:	cmp	w0, #0x9
   180a4:	b.ls	18070 <__sanitizer_set_report_fd@@Base+0x1cc0>  // b.plast
   180a8:	cbz	x1, 180b0 <__sanitizer_set_report_fd@@Base+0x1d00>
   180ac:	str	x4, [x1]
   180b0:	cmp	w7, #0x0
   180b4:	b.le	180e0 <__sanitizer_set_report_fd@@Base+0x1d30>
   180b8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   180bc:	cmp	x3, x0
   180c0:	csel	x0, x3, x0, ls  // ls = plast
   180c4:	ret
   180c8:	add	x4, x0, #0x1
   180cc:	mov	w7, #0x1                   	// #1
   180d0:	b	18050 <__sanitizer_set_report_fd@@Base+0x1ca0>
   180d4:	add	x4, x0, #0x1
   180d8:	mov	w7, #0xffffffff            	// #-1
   180dc:	b	18050 <__sanitizer_set_report_fd@@Base+0x1ca0>
   180e0:	mov	x1, x3
   180e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   180e8:	tbnz	x3, #63, 18114 <__sanitizer_set_report_fd@@Base+0x1d64>
   180ec:	neg	x0, x1
   180f0:	ret
   180f4:	cbz	x1, 18104 <__sanitizer_set_report_fd@@Base+0x1d54>
   180f8:	mov	x4, x0
   180fc:	mov	x3, #0x0                   	// #0
   18100:	b	180ac <__sanitizer_set_report_fd@@Base+0x1cfc>
   18104:	cmp	w7, #0x0
   18108:	b.le	180ec <__sanitizer_set_report_fd@@Base+0x1d3c>
   1810c:	mov	x3, #0x0                   	// #0
   18110:	b	180b8 <__sanitizer_set_report_fd@@Base+0x1d08>
   18114:	ret
   18118:	str	x30, [sp, #-16]!
   1811c:	mov	w2, #0xa                   	// #10
   18120:	mov	x1, #0x0                   	// #0
   18124:	bl	17fec <__sanitizer_set_report_fd@@Base+0x1c3c>
   18128:	ldr	x30, [sp], #16
   1812c:	ret
   18130:	mov	x2, #0x10000000000         	// #1099511627776
   18134:	cmp	x1, x2
   18138:	b.hi	181b8 <__sanitizer_set_report_fd@@Base+0x1e08>  // b.pmore
   1813c:	add	x5, x0, x1
   18140:	add	x2, x0, #0x7
   18144:	and	x2, x2, #0xfffffffffffffff8
   18148:	and	x4, x5, #0xfffffffffffffff8
   1814c:	cmp	x0, x2
   18150:	mov	x3, x0
   18154:	mov	x1, #0x0                   	// #0
   18158:	ccmp	x0, x5, #0x2, cc  // cc = lo, ul, last
   1815c:	b.cs	18174 <__sanitizer_set_report_fd@@Base+0x1dc4>  // b.hs, b.nlast
   18160:	ldrb	w6, [x3], #1
   18164:	orr	x1, x1, x6
   18168:	cmp	x2, x3
   1816c:	ccmp	x5, x3, #0x0, hi  // hi = pmore
   18170:	b.hi	18160 <__sanitizer_set_report_fd@@Base+0x1db0>  // b.pmore
   18174:	cmp	x2, x4
   18178:	b.cs	1818c <__sanitizer_set_report_fd@@Base+0x1ddc>  // b.hs, b.nlast
   1817c:	ldr	x3, [x2], #8
   18180:	orr	x1, x1, x3
   18184:	cmp	x4, x2
   18188:	b.hi	1817c <__sanitizer_set_report_fd@@Base+0x1dcc>  // b.pmore
   1818c:	cmp	x0, x4
   18190:	b.hi	181ac <__sanitizer_set_report_fd@@Base+0x1dfc>  // b.pmore
   18194:	cmp	x5, x4
   18198:	b.ls	181ac <__sanitizer_set_report_fd@@Base+0x1dfc>  // b.plast
   1819c:	ldrb	w0, [x4], #1
   181a0:	orr	x1, x1, x0
   181a4:	cmp	x5, x4
   181a8:	b.hi	1819c <__sanitizer_set_report_fd@@Base+0x1dec>  // b.pmore
   181ac:	cmp	x1, #0x0
   181b0:	cset	w0, eq  // eq = none
   181b4:	ret
   181b8:	str	x30, [sp, #-16]!
   181bc:	mov	x4, x2
   181c0:	mov	x3, x1
   181c4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   181c8:	add	x2, x2, #0x5f8
   181cc:	mov	w1, #0x104                 	// #260
   181d0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   181d4:	add	x0, x0, #0x5b8
   181d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   181dc:	str	x30, [sp, #-16]!
   181e0:	add	x0, x0, #0x4, lsl #12
   181e4:	add	x0, x0, #0x810
   181e8:	bl	18ea0 <__sanitizer_set_report_fd@@Base+0x2af0>
   181ec:	ldr	x30, [sp], #16
   181f0:	ret
   181f4:	stp	x19, x20, [sp, #-48]!
   181f8:	stp	x21, x22, [sp, #16]
   181fc:	str	x30, [sp, #32]
   18200:	mov	x20, x0
   18204:	mov	x21, x1
   18208:	add	x22, x0, #0x4, lsl #12
   1820c:	add	x22, x22, #0x810
   18210:	mov	x0, x22
   18214:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   18218:	ldr	x19, [x20, #18536]
   1821c:	cmp	x19, #0x3ff
   18220:	b.hi	18264 <__sanitizer_set_report_fd@@Base+0x1eb4>  // b.pmore
   18224:	add	x0, x19, #0x1
   18228:	str	x0, [x20, #18536]
   1822c:	mov	x0, x21
   18230:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   18234:	add	x1, x20, x19, lsl #5
   18238:	str	x0, [x1, #18544]
   1823c:	str	xzr, [x1, #18552]
   18240:	str	xzr, [x1, #18560]
   18244:	add	x1, x1, #0x4, lsl #12
   18248:	strb	wzr, [x1, #2184]
   1824c:	mov	x0, x22
   18250:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   18254:	ldp	x21, x22, [sp, #16]
   18258:	ldr	x30, [sp, #32]
   1825c:	ldp	x19, x20, [sp], #48
   18260:	ret
   18264:	mov	x2, #0x400                 	// #1024
   18268:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1826c:	ldr	x0, [x0, #4008]
   18270:	ldr	x1, [x0]
   18274:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18278:	add	x0, x0, #0x618
   1827c:	bl	1d908 <OnPrint@@Base+0x3d8>
   18280:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   18284:	stp	x19, x20, [sp, #-176]!
   18288:	str	x30, [sp, #80]
   1828c:	mov	x20, x0
   18290:	mov	x19, x1
   18294:	add	x0, x0, #0x4, lsl #12
   18298:	add	x0, x0, #0x810
   1829c:	str	x0, [sp, #120]
   182a0:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   182a4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   182a8:	ldr	x0, [x0, #4000]
   182ac:	ldr	x0, [x0]
   182b0:	cbz	x0, 1836c <__sanitizer_set_report_fd@@Base+0x1fbc>
   182b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   182b8:	ldr	x0, [x0, #4000]
   182bc:	ldr	x0, [x0]
   182c0:	sub	x1, x0, #0x1
   182c4:	ands	x1, x1, x0
   182c8:	str	x1, [sp, #96]
   182cc:	b.ne	18380 <__sanitizer_set_report_fd@@Base+0x1fd0>  // b.any
   182d0:	stp	x27, x28, [sp, #64]
   182d4:	add	x28, x0, #0xfff
   182d8:	neg	x0, x0
   182dc:	and	x28, x28, x0
   182e0:	mov	w2, #0x0                   	// #0
   182e4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   182e8:	add	x1, x1, #0x650
   182ec:	mov	x0, x28
   182f0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   182f4:	mov	x27, x0
   182f8:	mov	x2, #0x0                   	// #0
   182fc:	mov	x1, #0x0                   	// #0
   18300:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   18304:	mov	x1, #0x0                   	// #0
   18308:	mov	x0, #0x0                   	// #0
   1830c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   18310:	cmp	x28, #0xfff
   18314:	b.ls	183a0 <__sanitizer_set_report_fd@@Base+0x1ff0>  // b.plast
   18318:	mov	x2, #0x1000                	// #4096
   1831c:	mov	w1, #0x0                   	// #0
   18320:	mov	x0, x27
   18324:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   18328:	strb	wzr, [x27]
   1832c:	cbz	x19, 18498 <__sanitizer_set_report_fd@@Base+0x20e8>
   18330:	mov	x2, #0xfff                 	// #4095
   18334:	mov	x1, x27
   18338:	mov	x0, x19
   1833c:	bl	18b74 <__sanitizer_set_report_fd@@Base+0x27c4>
   18340:	cbz	x0, 18498 <__sanitizer_set_report_fd@@Base+0x20e8>
   18344:	ldrb	w0, [x27]
   18348:	cbz	w0, 18498 <__sanitizer_set_report_fd@@Base+0x20e8>
   1834c:	ldr	x0, [x20, #18536]
   18350:	cbz	x0, 18498 <__sanitizer_set_report_fd@@Base+0x20e8>
   18354:	stp	x21, x22, [sp, #16]
   18358:	stp	x23, x24, [sp, #32]
   1835c:	add	x21, x20, #0x4, lsl #12
   18360:	add	x21, x21, #0x870
   18364:	ldr	x22, [sp, #96]
   18368:	b	1845c <__sanitizer_set_report_fd@@Base+0x20ac>
   1836c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   18370:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18374:	ldr	x1, [x1, #4000]
   18378:	str	x0, [x1]
   1837c:	b	182b4 <__sanitizer_set_report_fd@@Base+0x1f04>
   18380:	stp	x21, x22, [sp, #16]
   18384:	stp	x23, x24, [sp, #32]
   18388:	stp	x25, x26, [sp, #48]
   1838c:	stp	x27, x28, [sp, #64]
   18390:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   18394:	add	x0, x0, #0x638
   18398:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1839c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   183a0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   183a4:	ldr	x0, [x0, #4000]
   183a8:	ldr	x0, [x0]
   183ac:	cbz	x0, 18418 <__sanitizer_set_report_fd@@Base+0x2068>
   183b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   183b4:	ldr	x0, [x0, #4000]
   183b8:	ldr	x0, [x0]
   183bc:	sub	x1, x0, #0x1
   183c0:	tst	x1, x0
   183c4:	b.ne	1842c <__sanitizer_set_report_fd@@Base+0x207c>  // b.any
   183c8:	stp	x21, x22, [sp, #16]
   183cc:	add	x21, x0, #0xfff
   183d0:	neg	x0, x0
   183d4:	and	x21, x21, x0
   183d8:	mov	w2, #0x0                   	// #0
   183dc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   183e0:	add	x1, x1, #0x650
   183e4:	mov	x0, x21
   183e8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   183ec:	mov	x22, x0
   183f0:	mov	x2, #0x0                   	// #0
   183f4:	mov	x1, x27
   183f8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   183fc:	mov	x1, x28
   18400:	mov	x0, x27
   18404:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   18408:	mov	x28, x21
   1840c:	mov	x27, x22
   18410:	ldp	x21, x22, [sp, #16]
   18414:	b	18318 <__sanitizer_set_report_fd@@Base+0x1f68>
   18418:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1841c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18420:	ldr	x1, [x1, #4000]
   18424:	str	x0, [x1]
   18428:	b	183b0 <__sanitizer_set_report_fd@@Base+0x2000>
   1842c:	stp	x21, x22, [sp, #16]
   18430:	stp	x23, x24, [sp, #32]
   18434:	stp	x25, x26, [sp, #48]
   18438:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1843c:	add	x0, x0, #0x638
   18440:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   18444:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   18448:	add	x22, x22, #0x1
   1844c:	add	x21, x21, #0x20
   18450:	ldr	x0, [x20, #18536]
   18454:	cmp	x0, x22
   18458:	b.ls	18490 <__sanitizer_set_report_fd@@Base+0x20e0>  // b.plast
   1845c:	ldrb	w0, [x21, #24]
   18460:	cbnz	w0, 18448 <__sanitizer_set_report_fd@@Base+0x2098>
   18464:	ldr	x0, [x21, #16]
   18468:	cbnz	x0, 18448 <__sanitizer_set_report_fd@@Base+0x2098>
   1846c:	mov	x1, x19
   18470:	ldr	x0, [x21]
   18474:	bl	12a9c <__sancov_default_options@@Base+0x2718>
   18478:	and	w0, w0, #0xff
   1847c:	cbz	w0, 18448 <__sanitizer_set_report_fd@@Base+0x2098>
   18480:	mov	x0, x27
   18484:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   18488:	str	x0, [x21, #16]
   1848c:	b	18448 <__sanitizer_set_report_fd@@Base+0x2098>
   18490:	ldp	x21, x22, [sp, #16]
   18494:	ldp	x23, x24, [sp, #32]
   18498:	strb	wzr, [sp, #168]
   1849c:	add	x0, sp, #0x90
   184a0:	bl	1ab3c <__sanitizer_set_report_fd@@Base+0x478c>
   184a4:	ldr	x0, [x20, #18536]
   184a8:	cbnz	x0, 184f0 <__sanitizer_set_report_fd@@Base+0x2140>
   184ac:	add	x0, x20, #0xc, lsl #12
   184b0:	ldrb	w0, [x0, #2160]
   184b4:	cbz	w0, 1880c <__sanitizer_set_report_fd@@Base+0x245c>
   184b8:	stp	x21, x22, [sp, #16]
   184bc:	ldr	x21, [sp, #144]
   184c0:	ldr	x22, [sp, #160]
   184c4:	add	x22, x22, x22, lsl #3
   184c8:	add	x22, x21, x22, lsl #3
   184cc:	cmp	x22, x21
   184d0:	b.eq	1885c <__sanitizer_set_report_fd@@Base+0x24ac>  // b.none
   184d4:	stp	x23, x24, [sp, #32]
   184d8:	stp	x25, x26, [sp, #48]
   184dc:	adrp	x23, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   184e0:	ldr	x23, [x23, #3680]
   184e4:	adrp	x25, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   184e8:	add	x25, x25, #0x7d0
   184ec:	b	187e8 <__sanitizer_set_report_fd@@Base+0x2438>
   184f0:	stp	x21, x22, [sp, #16]
   184f4:	stp	x23, x24, [sp, #32]
   184f8:	stp	x25, x26, [sp, #48]
   184fc:	add	x25, x20, #0x4, lsl #12
   18500:	add	x25, x25, #0x870
   18504:	ldr	x0, [sp, #96]
   18508:	str	x0, [sp, #136]
   1850c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18510:	ldr	x0, [x0, #3680]
   18514:	str	x0, [sp, #112]
   18518:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1851c:	add	x0, x0, #0x6a0
   18520:	str	x0, [sp, #128]
   18524:	ldr	x22, [sp, #144]
   18528:	ldr	x0, [sp, #160]
   1852c:	add	x0, x0, x0, lsl #3
   18530:	add	x0, x22, x0, lsl #3
   18534:	str	x0, [sp, #104]
   18538:	cmp	x22, x0
   1853c:	b.eq	18660 <__sanitizer_set_report_fd@@Base+0x22b0>  // b.none
   18540:	mov	w24, #0x0                   	// #0
   18544:	b	18650 <__sanitizer_set_report_fd@@Base+0x22a0>
   18548:	ldr	x0, [sp, #136]
   1854c:	add	x20, x20, x0, lsl #5
   18550:	ldr	x4, [x26]
   18554:	ldr	x3, [x20, #18552]
   18558:	ldr	x2, [x20, #18544]
   1855c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18560:	ldr	x0, [x0, #4008]
   18564:	ldr	x1, [x0]
   18568:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1856c:	add	x0, x0, #0x648
   18570:	bl	1d908 <OnPrint@@Base+0x3d8>
   18574:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   18578:	ldr	x2, [x26]
   1857c:	ldr	x1, [x23]
   18580:	ldr	x0, [sp, #128]
   18584:	bl	1d908 <OnPrint@@Base+0x3d8>
   18588:	b	185fc <__sanitizer_set_report_fd@@Base+0x224c>
   1858c:	mov	x4, #0x80                  	// #128
   18590:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18594:	add	x2, x2, #0x6e0
   18598:	mov	w1, #0x52                  	// #82
   1859c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   185a0:	add	x0, x0, #0x730
   185a4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   185a8:	ldr	x19, [x19]
   185ac:	cbz	x19, 18640 <__sanitizer_set_report_fd@@Base+0x2290>
   185b0:	ldrb	w21, [x19, #24]
   185b4:	cbz	w21, 185a8 <__sanitizer_set_report_fd@@Base+0x21f8>
   185b8:	mov	x23, x25
   185bc:	ldr	x1, [x26]
   185c0:	ldr	x0, [x25]
   185c4:	bl	12a9c <__sancov_default_options@@Base+0x2718>
   185c8:	and	w0, w0, #0xff
   185cc:	cbnz	w0, 185e4 <__sanitizer_set_report_fd@@Base+0x2234>
   185d0:	ldr	x0, [x25, #16]
   185d4:	cbz	x0, 185a8 <__sanitizer_set_report_fd@@Base+0x21f8>
   185d8:	ldr	x1, [x26]
   185dc:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   185e0:	cbnz	w0, 185a8 <__sanitizer_set_report_fd@@Base+0x21f8>
   185e4:	cbnz	w24, 18548 <__sanitizer_set_report_fd@@Base+0x2198>
   185e8:	ldrb	w24, [x23, #24]
   185ec:	cbnz	w24, 185a8 <__sanitizer_set_report_fd@@Base+0x21f8>
   185f0:	ldr	x0, [sp, #112]
   185f4:	ldr	w0, [x0]
   185f8:	cbnz	w0, 18578 <__sanitizer_set_report_fd@@Base+0x21c8>
   185fc:	mov	w0, #0x1                   	// #1
   18600:	strb	w0, [x23, #24]
   18604:	ldr	x0, [x26]
   18608:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   1860c:	str	x0, [x23, #8]
   18610:	ldr	x3, [x20]
   18614:	cmp	x3, #0x7f
   18618:	b.hi	1858c <__sanitizer_set_report_fd@@Base+0x21dc>  // b.pmore
   1861c:	ldr	x1, [x19, #8]
   18620:	add	x0, x20, x3, lsl #4
   18624:	str	x1, [x0, #8]
   18628:	ldr	x1, [x19, #16]
   1862c:	str	x1, [x0, #16]
   18630:	add	x3, x3, #0x1
   18634:	dmb	ish
   18638:	str	x3, [x20]
   1863c:	mov	w24, w21
   18640:	add	x22, x22, #0x48
   18644:	ldr	x0, [sp, #104]
   18648:	cmp	x0, x22
   1864c:	b.eq	18664 <__sanitizer_set_report_fd@@Base+0x22b4>  // b.none
   18650:	mov	x26, x22
   18654:	ldr	x19, [x22, #56]
   18658:	cbnz	x19, 185b0 <__sanitizer_set_report_fd@@Base+0x2200>
   1865c:	b	18640 <__sanitizer_set_report_fd@@Base+0x2290>
   18660:	mov	w24, #0x0                   	// #0
   18664:	ldrb	w0, [x25, #24]
   18668:	eor	w0, w0, #0x1
   1866c:	orr	w24, w24, w0
   18670:	tst	w24, #0xff
   18674:	b.eq	186a8 <__sanitizer_set_report_fd@@Base+0x22f8>  // b.none
   18678:	ldr	x0, [sp, #136]
   1867c:	add	x0, x0, #0x1
   18680:	mov	x1, x0
   18684:	str	x0, [sp, #136]
   18688:	add	x25, x25, #0x20
   1868c:	ldr	x0, [x20, #18536]
   18690:	cmp	x0, x1
   18694:	b.hi	18524 <__sanitizer_set_report_fd@@Base+0x2174>  // b.pmore
   18698:	ldp	x21, x22, [sp, #16]
   1869c:	ldp	x23, x24, [sp, #32]
   186a0:	ldp	x25, x26, [sp, #48]
   186a4:	b	184ac <__sanitizer_set_report_fd@@Base+0x20fc>
   186a8:	ldr	x0, [sp, #136]
   186ac:	add	x20, x20, x0, lsl #5
   186b0:	ldr	x3, [x20, #18544]
   186b4:	ldr	x2, [x20, #18552]
   186b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   186bc:	ldr	x0, [x0, #4008]
   186c0:	ldr	x1, [x0]
   186c4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   186c8:	add	x0, x0, #0x778
   186cc:	bl	1d908 <OnPrint@@Base+0x3d8>
   186d0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   186d4:	add	x1, x1, #0x1
   186d8:	add	x0, x0, #0x10
   186dc:	cmp	x4, x1
   186e0:	b.eq	18744 <__sanitizer_set_report_fd@@Base+0x2394>  // b.none
   186e4:	ldr	x2, [x0]
   186e8:	cmp	x3, x2
   186ec:	b.cc	186d4 <__sanitizer_set_report_fd@@Base+0x2324>  // b.lo, b.ul, b.last
   186f0:	ldr	x2, [x0, #8]
   186f4:	cmp	x3, x2
   186f8:	b.cs	186d4 <__sanitizer_set_report_fd@@Base+0x2324>  // b.hs, b.nlast
   186fc:	ldr	x1, [x19, #16]
   18700:	sub	x1, x1, #0x1
   18704:	ldr	x3, [x20, #2056]
   18708:	dmb	ish
   1870c:	cbz	x3, 18744 <__sanitizer_set_report_fd@@Base+0x2394>
   18710:	ldr	x0, [sp, #96]
   18714:	b	18728 <__sanitizer_set_report_fd@@Base+0x2378>
   18718:	add	x0, x0, #0x1
   1871c:	add	x5, x5, #0x10
   18720:	cmp	x3, x0
   18724:	b.eq	18744 <__sanitizer_set_report_fd@@Base+0x2394>  // b.none
   18728:	ldr	x2, [x5]
   1872c:	cmp	x1, x2
   18730:	b.cc	18718 <__sanitizer_set_report_fd@@Base+0x2368>  // b.lo, b.ul, b.last
   18734:	ldr	x2, [x5, #8]
   18738:	cmp	x1, x2
   1873c:	b.cc	18778 <__sanitizer_set_report_fd@@Base+0x23c8>  // b.lo, b.ul, b.last
   18740:	b	18718 <__sanitizer_set_report_fd@@Base+0x2368>
   18744:	ldr	w0, [x23]
   18748:	cbnz	w0, 187a8 <__sanitizer_set_report_fd@@Base+0x23f8>
   1874c:	ldr	x3, [x20, #2056]
   18750:	cmp	x3, #0x3ff
   18754:	b.hi	187c0 <__sanitizer_set_report_fd@@Base+0x2410>  // b.pmore
   18758:	ldr	x1, [x19, #8]
   1875c:	add	x0, x20, x3, lsl #4
   18760:	str	x1, [x0, #2064]
   18764:	ldr	x1, [x19, #16]
   18768:	str	x1, [x0, #2072]
   1876c:	add	x3, x3, #0x1
   18770:	dmb	ish
   18774:	str	x3, [x20, #2056]
   18778:	ldr	x19, [x19]
   1877c:	cbz	x19, 187dc <__sanitizer_set_report_fd@@Base+0x242c>
   18780:	ldrb	w0, [x19, #24]
   18784:	cbz	w0, 18778 <__sanitizer_set_report_fd@@Base+0x23c8>
   18788:	ldr	x3, [x19, #8]
   1878c:	ldr	x4, [x20, #2056]
   18790:	dmb	ish
   18794:	cbz	x4, 18744 <__sanitizer_set_report_fd@@Base+0x2394>
   18798:	add	x5, x20, #0x810
   1879c:	mov	x0, x5
   187a0:	ldr	x1, [sp, #96]
   187a4:	b	186e4 <__sanitizer_set_report_fd@@Base+0x2334>
   187a8:	ldr	x3, [x24]
   187ac:	ldr	x2, [x19, #16]
   187b0:	ldr	x1, [x19, #8]
   187b4:	mov	x0, x25
   187b8:	bl	1d908 <OnPrint@@Base+0x3d8>
   187bc:	b	1874c <__sanitizer_set_report_fd@@Base+0x239c>
   187c0:	mov	x4, #0x400                 	// #1024
   187c4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   187c8:	add	x2, x2, #0x808
   187cc:	mov	w1, #0x6f                  	// #111
   187d0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   187d4:	add	x0, x0, #0x730
   187d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   187dc:	add	x21, x21, #0x48
   187e0:	cmp	x22, x21
   187e4:	b.eq	18800 <__sanitizer_set_report_fd@@Base+0x2450>  // b.none
   187e8:	mov	x24, x21
   187ec:	ldrb	w0, [x21, #44]
   187f0:	cbz	w0, 187dc <__sanitizer_set_report_fd@@Base+0x242c>
   187f4:	ldr	x19, [x21, #56]
   187f8:	cbnz	x19, 18780 <__sanitizer_set_report_fd@@Base+0x23d0>
   187fc:	b	187dc <__sanitizer_set_report_fd@@Base+0x242c>
   18800:	ldp	x21, x22, [sp, #16]
   18804:	ldp	x23, x24, [sp, #32]
   18808:	ldp	x25, x26, [sp, #48]
   1880c:	ldr	x19, [sp, #144]
   18810:	ldr	x20, [sp, #160]
   18814:	add	x20, x20, x20, lsl #3
   18818:	add	x20, x19, x20, lsl #3
   1881c:	cmp	x19, x20
   18820:	b.eq	18838 <__sanitizer_set_report_fd@@Base+0x2488>  // b.none
   18824:	mov	x0, x19
   18828:	bl	12808 <__sancov_default_options@@Base+0x2484>
   1882c:	add	x19, x19, #0x48
   18830:	cmp	x20, x19
   18834:	b.ne	18824 <__sanitizer_set_report_fd@@Base+0x2474>  // b.any
   18838:	mov	x1, x28
   1883c:	mov	x0, x27
   18840:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   18844:	ldr	x0, [sp, #120]
   18848:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   1884c:	ldp	x27, x28, [sp, #64]
   18850:	ldr	x30, [sp, #80]
   18854:	ldp	x19, x20, [sp], #176
   18858:	ret
   1885c:	ldp	x21, x22, [sp, #16]
   18860:	b	18838 <__sanitizer_set_report_fd@@Base+0x2488>
   18864:	str	x30, [sp, #-16]!
   18868:	mov	x1, #0x0                   	// #0
   1886c:	bl	18284 <__sanitizer_set_report_fd@@Base+0x1ed4>
   18870:	ldr	x30, [sp], #16
   18874:	ret
   18878:	stp	x19, x20, [sp, #-64]!
   1887c:	stp	x21, x30, [sp, #16]
   18880:	mov	x21, x0
   18884:	mov	x20, x1
   18888:	mov	w19, w2
   1888c:	mov	w2, #0x0                   	// #0
   18890:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18894:	add	x1, x1, #0x868
   18898:	sbfiz	x0, x19, #3, #32
   1889c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   188a0:	str	x0, [x20]
   188a4:	mov	x5, #0x0                   	// #0
   188a8:	mov	x4, #0x100000              	// #1048576
   188ac:	add	x3, sp, #0x28
   188b0:	add	x2, sp, #0x30
   188b4:	add	x1, sp, #0x38
   188b8:	mov	x0, x21
   188bc:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   188c0:	and	w0, w0, #0xff
   188c4:	cbz	w0, 188e8 <__sanitizer_set_report_fd@@Base+0x2538>
   188c8:	ldr	x0, [x20]
   188cc:	ldr	x1, [sp, #56]
   188d0:	str	x1, [x0]
   188d4:	mov	x0, #0x1                   	// #1
   188d8:	mov	w6, w0
   188dc:	sub	w5, w19, #0x1
   188e0:	sxtw	x5, w5
   188e4:	b	18904 <__sanitizer_set_report_fd@@Base+0x2554>
   188e8:	ldr	x0, [x20]
   188ec:	str	xzr, [x0]
   188f0:	ldp	x21, x30, [sp, #16]
   188f4:	ldp	x19, x20, [sp], #64
   188f8:	ret
   188fc:	add	w6, w6, #0x1
   18900:	add	x0, x0, #0x1
   18904:	ldr	x2, [sp, #56]
   18908:	ldrb	w3, [x2, x0]
   1890c:	cbnz	w3, 18900 <__sanitizer_set_report_fd@@Base+0x2550>
   18910:	add	x3, x0, #0x1
   18914:	add	x4, x2, x3
   18918:	ldrb	w1, [x2, x3]
   1891c:	cbz	w1, 18950 <__sanitizer_set_report_fd@@Base+0x25a0>
   18920:	sxtw	x3, w6
   18924:	ldr	x1, [x20]
   18928:	str	x4, [x1, x3, lsl #3]
   1892c:	mov	x4, x5
   18930:	cmp	x3, x5
   18934:	b.ls	188fc <__sanitizer_set_report_fd@@Base+0x254c>  // b.plast
   18938:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1893c:	add	x2, x2, #0x880
   18940:	mov	w1, #0x23f                 	// #575
   18944:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18948:	add	x0, x0, #0x8a0
   1894c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18950:	ldr	x0, [x20]
   18954:	str	xzr, [x0, w6, sxtw #3]
   18958:	b	188f0 <__sanitizer_set_report_fd@@Base+0x2540>
   1895c:	stp	x19, x30, [sp, #-16]!
   18960:	mov	x19, x1
   18964:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   18968:	ldr	x2, [x2, #4032]
   1896c:	cbz	x2, 18994 <__sanitizer_set_report_fd@@Base+0x25e4>
   18970:	ldr	x3, [x2]
   18974:	mov	x1, x3
   18978:	ldr	x2, [x1], #8
   1897c:	str	x1, [x0]
   18980:	add	x0, x3, w2, sxtw #3
   18984:	add	x0, x0, #0x10
   18988:	str	x0, [x19]
   1898c:	ldp	x19, x30, [sp], #16
   18990:	ret
   18994:	mov	w2, #0x7d0                 	// #2000
   18998:	mov	x1, x0
   1899c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   189a0:	add	x0, x0, #0x8e0
   189a4:	bl	18878 <__sanitizer_set_report_fd@@Base+0x24c8>
   189a8:	mov	w2, #0x7d0                 	// #2000
   189ac:	mov	x1, x19
   189b0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   189b4:	add	x0, x0, #0x8f8
   189b8:	bl	18878 <__sanitizer_set_report_fd@@Base+0x24c8>
   189bc:	b	1898c <__sanitizer_set_report_fd@@Base+0x25dc>
   189c0:	mov	x2, x0
   189c4:	mov	w0, #0x0                   	// #0
   189c8:	cmn	x2, #0x1, lsl #12
   189cc:	b.hi	189d4 <__sanitizer_set_report_fd@@Base+0x2624>  // b.pmore
   189d0:	ret
   189d4:	mov	w0, #0x1                   	// #1
   189d8:	cbz	x1, 189d0 <__sanitizer_set_report_fd@@Base+0x2620>
   189dc:	neg	w2, w2
   189e0:	str	w2, [x1]
   189e4:	b	189d0 <__sanitizer_set_report_fd@@Base+0x2620>
   189e8:	mov	x8, #0xde                  	// #222
   189ec:	sxtw	x2, w2
   189f0:	sxtw	x3, w3
   189f4:	sxtw	x4, w4
   189f8:	svc	#0x0
   189fc:	ret
   18a00:	mov	x8, #0xd7                  	// #215
   18a04:	svc	#0x0
   18a08:	ret
   18a0c:	mov	x8, #0xe2                  	// #226
   18a10:	sxtw	x2, w2
   18a14:	svc	#0x0
   18a18:	ret
   18a1c:	mov	x8, #0x39                  	// #57
   18a20:	sxtw	x0, w0
   18a24:	svc	#0x0
   18a28:	ret
   18a2c:	mov	x3, x0
   18a30:	mov	w2, w1
   18a34:	mov	x8, #0x38                  	// #56
   18a38:	mov	x0, #0xffffffffffffff9c    	// #-100
   18a3c:	mov	x1, x3
   18a40:	sxtw	x2, w2
   18a44:	svc	#0x0
   18a48:	ret
   18a4c:	mov	x5, x0
   18a50:	mov	w4, w1
   18a54:	mov	w3, w2
   18a58:	mov	x8, #0x38                  	// #56
   18a5c:	mov	x0, #0xffffffffffffff9c    	// #-100
   18a60:	mov	x1, x5
   18a64:	sxtw	x2, w4
   18a68:	mov	w3, w3
   18a6c:	svc	#0x0
   18a70:	ret
   18a74:	sxtw	x3, w0
   18a78:	mov	x8, #0x3f                  	// #63
   18a7c:	b	18a88 <__sanitizer_set_report_fd@@Base+0x26d8>
   18a80:	cmn	w0, #0x4
   18a84:	b.ne	18a98 <__sanitizer_set_report_fd@@Base+0x26e8>  // b.any
   18a88:	mov	x0, x3
   18a8c:	svc	#0x0
   18a90:	cmn	x0, #0x1, lsl #12
   18a94:	b.hi	18a80 <__sanitizer_set_report_fd@@Base+0x26d0>  // b.pmore
   18a98:	ret
   18a9c:	sxtw	x3, w0
   18aa0:	mov	x8, #0x40                  	// #64
   18aa4:	b	18ab0 <__sanitizer_set_report_fd@@Base+0x2700>
   18aa8:	cmn	w0, #0x4
   18aac:	b.ne	18ac0 <__sanitizer_set_report_fd@@Base+0x2710>  // b.any
   18ab0:	mov	x0, x3
   18ab4:	svc	#0x0
   18ab8:	cmn	x0, #0x1, lsl #12
   18abc:	b.hi	18aa8 <__sanitizer_set_report_fd@@Base+0x26f8>  // b.pmore
   18ac0:	ret
   18ac4:	sxtw	x2, w0
   18ac8:	mov	x8, #0x2e                  	// #46
   18acc:	b	18ad8 <__sanitizer_set_report_fd@@Base+0x2728>
   18ad0:	cmn	w0, #0x4
   18ad4:	b.ne	18ae8 <__sanitizer_set_report_fd@@Base+0x2738>  // b.any
   18ad8:	mov	x0, x2
   18adc:	svc	#0x0
   18ae0:	cmn	x0, #0x1, lsl #12
   18ae4:	b.hi	18ad0 <__sanitizer_set_report_fd@@Base+0x2720>  // b.pmore
   18ae8:	ret
   18aec:	mov	x3, x0
   18af0:	mov	x2, x1
   18af4:	mov	x8, #0x4f                  	// #79
   18af8:	mov	x0, #0xffffffffffffff9c    	// #-100
   18afc:	mov	x1, x3
   18b00:	mov	x3, #0x0                   	// #0
   18b04:	svc	#0x0
   18b08:	ret
   18b0c:	mov	x3, x0
   18b10:	mov	x2, x1
   18b14:	mov	x8, #0x4f                  	// #79
   18b18:	mov	x0, #0xffffffffffffff9c    	// #-100
   18b1c:	mov	x1, x3
   18b20:	mov	x3, #0x100                 	// #256
   18b24:	svc	#0x0
   18b28:	ret
   18b2c:	mov	x8, #0x50                  	// #80
   18b30:	sxtw	x0, w0
   18b34:	svc	#0x0
   18b38:	ret
   18b3c:	str	x30, [sp, #-144]!
   18b40:	add	x1, sp, #0x10
   18b44:	bl	18b2c <__sanitizer_set_report_fd@@Base+0x277c>
   18b48:	cmp	x0, #0x0
   18b4c:	ldr	x0, [sp, #64]
   18b50:	csinv	x0, x0, xzr, eq  // eq = none
   18b54:	ldr	x30, [sp], #144
   18b58:	ret
   18b5c:	mov	x8, #0x18                  	// #24
   18b60:	sxtw	x0, w0
   18b64:	sxtw	x1, w1
   18b68:	mov	x2, #0x0                   	// #0
   18b6c:	svc	#0x0
   18b70:	ret
   18b74:	mov	x5, x0
   18b78:	mov	x4, x1
   18b7c:	mov	x3, x2
   18b80:	mov	x8, #0x4e                  	// #78
   18b84:	mov	x0, #0xffffffffffffff9c    	// #-100
   18b88:	mov	x1, x5
   18b8c:	mov	x2, x4
   18b90:	svc	#0x0
   18b94:	ret
   18b98:	mov	x1, x0
   18b9c:	mov	x8, #0x23                  	// #35
   18ba0:	mov	x0, #0xffffffffffffff9c    	// #-100
   18ba4:	mov	x2, #0x0                   	// #0
   18ba8:	svc	#0x0
   18bac:	ret
   18bb0:	mov	x2, x0
   18bb4:	mov	x3, x1
   18bb8:	mov	x8, #0x26                  	// #38
   18bbc:	mov	x0, #0xffffffffffffff9c    	// #-100
   18bc0:	mov	x1, x2
   18bc4:	mov	x2, x0
   18bc8:	svc	#0x0
   18bcc:	ret
   18bd0:	mov	x8, #0x7c                  	// #124
   18bd4:	svc	#0x0
   18bd8:	ret
   18bdc:	str	x30, [sp, #-16]!
   18be0:	mov	x8, #0x5e                  	// #94
   18be4:	sxtw	x0, w0
   18be8:	svc	#0x0
   18bec:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   18bf0:	sub	sp, sp, #0x10
   18bf4:	mov	x0, #0x1                   	// #1
   18bf8:	str	x0, [sp]
   18bfc:	str	xzr, [sp, #8]
   18c00:	mov	x1, sp
   18c04:	mov	x8, #0x65                  	// #101
   18c08:	mov	x0, x1
   18c0c:	svc	#0x0
   18c10:	cmp	w0, #0x0
   18c14:	ldr	w0, [sp]
   18c18:	csel	w0, w0, wzr, ne  // ne = any
   18c1c:	add	sp, sp, #0x10
   18c20:	ret
   18c24:	mov	x8, #0xdd                  	// #221
   18c28:	svc	#0x0
   18c2c:	ret
   18c30:	sub	sp, sp, #0x80
   18c34:	mov	x1, x0
   18c38:	mov	x8, #0x4f                  	// #79
   18c3c:	mov	x0, #0xffffffffffffff9c    	// #-100
   18c40:	mov	x2, sp
   18c44:	mov	x3, #0x0                   	// #0
   18c48:	svc	#0x0
   18c4c:	cbnz	x0, 18c68 <__sanitizer_set_report_fd@@Base+0x28b8>
   18c50:	ldr	w0, [sp, #16]
   18c54:	and	w0, w0, #0xf000
   18c58:	cmp	w0, #0x8, lsl #12
   18c5c:	cset	w0, eq  // eq = none
   18c60:	add	sp, sp, #0x80
   18c64:	ret
   18c68:	mov	w0, #0x0                   	// #0
   18c6c:	b	18c60 <__sanitizer_set_report_fd@@Base+0x28b0>
   18c70:	mov	x8, #0xb2                  	// #178
   18c74:	svc	#0x0
   18c78:	ret
   18c7c:	mov	x8, #0x83                  	// #131
   18c80:	sxtw	x0, w0
   18c84:	sxtw	x2, w2
   18c88:	svc	#0x0
   18c8c:	ret
   18c90:	stp	x19, x30, [sp, #-32]!
   18c94:	add	x19, sp, #0x10
   18c98:	mov	x2, #0x10                  	// #16
   18c9c:	mov	w1, #0x0                   	// #0
   18ca0:	mov	x0, x19
   18ca4:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   18ca8:	mov	x8, #0xa9                  	// #169
   18cac:	mov	x0, x19
   18cb0:	mov	x1, #0x0                   	// #0
   18cb4:	svc	#0x0
   18cb8:	ldr	x0, [sp, #24]
   18cbc:	lsl	x1, x0, #5
   18cc0:	sub	x1, x1, x0
   18cc4:	add	x1, x0, x1, lsl #2
   18cc8:	lsl	x1, x1, #3
   18ccc:	ldr	x2, [sp, #16]
   18cd0:	mov	x0, #0xca00                	// #51712
   18cd4:	movk	x0, #0x3b9a, lsl #16
   18cd8:	madd	x0, x2, x0, x1
   18cdc:	ldp	x19, x30, [sp], #32
   18ce0:	ret
   18ce4:	mov	x8, #0x71                  	// #113
   18ce8:	sxtw	x0, w0
   18cec:	svc	#0x0
   18cf0:	ret
   18cf4:	stp	x19, x20, [sp, #-64]!
   18cf8:	stp	x23, x30, [sp, #32]
   18cfc:	mov	x23, x0
   18d00:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d04:	ldrb	w0, [x0, #3192]
   18d08:	cbz	w0, 18d54 <__sanitizer_set_report_fd@@Base+0x29a4>
   18d0c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d10:	ldr	x19, [x0, #3208]
   18d14:	cbz	x19, 18e14 <__sanitizer_set_report_fd@@Base+0x2a64>
   18d18:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d1c:	ldr	x0, [x0, #3200]
   18d20:	mov	x19, #0x0                   	// #0
   18d24:	cbz	x0, 18e14 <__sanitizer_set_report_fd@@Base+0x2a64>
   18d28:	stp	x21, x22, [sp, #16]
   18d2c:	mov	x0, x23
   18d30:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   18d34:	mov	x22, x0
   18d38:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d3c:	ldr	x20, [x0, #3208]
   18d40:	ldrb	w0, [x20]
   18d44:	cbz	w0, 18e04 <__sanitizer_set_report_fd@@Base+0x2a54>
   18d48:	adrp	x21, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d4c:	add	x21, x21, #0xc78
   18d50:	b	18da4 <__sanitizer_set_report_fd@@Base+0x29f4>
   18d54:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d58:	add	x1, x0, #0xc78
   18d5c:	mov	w2, #0x1                   	// #1
   18d60:	strb	w2, [x0, #3192]
   18d64:	mov	x5, #0x0                   	// #0
   18d68:	mov	x4, #0x4000000             	// #67108864
   18d6c:	add	x3, x1, #0x8
   18d70:	add	x2, sp, #0x38
   18d74:	add	x1, x1, #0x10
   18d78:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18d7c:	add	x0, x0, #0x8f8
   18d80:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   18d84:	and	w0, w0, #0xff
   18d88:	cbnz	w0, 18d0c <__sanitizer_set_report_fd@@Base+0x295c>
   18d8c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18d90:	str	xzr, [x0, #3208]
   18d94:	b	18d0c <__sanitizer_set_report_fd@@Base+0x295c>
   18d98:	add	x20, x19, #0x1
   18d9c:	ldrb	w0, [x19, #1]
   18da0:	cbz	w0, 18df8 <__sanitizer_set_report_fd@@Base+0x2a48>
   18da4:	ldr	x1, [x21, #16]
   18da8:	sub	x1, x20, x1
   18dac:	ldr	x2, [x21, #8]
   18db0:	sub	x2, x2, x1
   18db4:	mov	w1, #0x0                   	// #0
   18db8:	mov	x0, x20
   18dbc:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x1698>
   18dc0:	mov	x19, x0
   18dc4:	cbz	x0, 18e10 <__sanitizer_set_report_fd@@Base+0x2a60>
   18dc8:	mov	x2, x22
   18dcc:	mov	x1, x23
   18dd0:	mov	x0, x20
   18dd4:	bl	17aac <__sanitizer_set_report_fd@@Base+0x16fc>
   18dd8:	cbnz	w0, 18d98 <__sanitizer_set_report_fd@@Base+0x29e8>
   18ddc:	ldrb	w0, [x20, x22]
   18de0:	cmp	w0, #0x3d
   18de4:	b.ne	18d98 <__sanitizer_set_report_fd@@Base+0x29e8>  // b.any
   18de8:	add	x19, x22, #0x1
   18dec:	add	x19, x20, x19
   18df0:	ldp	x21, x22, [sp, #16]
   18df4:	b	18e14 <__sanitizer_set_report_fd@@Base+0x2a64>
   18df8:	mov	x19, #0x0                   	// #0
   18dfc:	ldp	x21, x22, [sp, #16]
   18e00:	b	18e14 <__sanitizer_set_report_fd@@Base+0x2a64>
   18e04:	mov	x19, #0x0                   	// #0
   18e08:	ldp	x21, x22, [sp, #16]
   18e0c:	b	18e14 <__sanitizer_set_report_fd@@Base+0x2a64>
   18e10:	ldp	x21, x22, [sp, #16]
   18e14:	mov	x0, x19
   18e18:	ldp	x23, x30, [sp, #32]
   18e1c:	ldp	x19, x20, [sp], #64
   18e20:	ret
   18e24:	str	x30, [sp, #-32]!
   18e28:	add	x1, sp, #0x10
   18e2c:	add	x0, sp, #0x18
   18e30:	bl	1895c <__sanitizer_set_report_fd@@Base+0x25ac>
   18e34:	ldr	x0, [sp, #24]
   18e38:	ldr	x30, [sp], #32
   18e3c:	ret
   18e40:	str	x30, [sp, #-32]!
   18e44:	add	x1, sp, #0x10
   18e48:	add	x0, sp, #0x18
   18e4c:	bl	1895c <__sanitizer_set_report_fd@@Base+0x25ac>
   18e50:	ldr	x2, [sp, #16]
   18e54:	ldr	x1, [sp, #24]
   18e58:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18e5c:	add	x0, x0, #0x910
   18e60:	bl	18c24 <__sanitizer_set_report_fd@@Base+0x2874>
   18e64:	cmn	x0, #0x1, lsl #12
   18e68:	b.hi	18e8c <__sanitizer_set_report_fd@@Base+0x2adc>  // b.pmore
   18e6c:	mov	x4, #0x1                   	// #1
   18e70:	mov	x3, #0x0                   	// #0
   18e74:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18e78:	add	x2, x2, #0x940
   18e7c:	mov	w1, #0x286                 	// #646
   18e80:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18e84:	add	x0, x0, #0x8a0
   18e88:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18e8c:	neg	w1, w0
   18e90:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18e94:	add	x0, x0, #0x920
   18e98:	bl	1d874 <OnPrint@@Base+0x344>
   18e9c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   18ea0:	str	x30, [sp, #-16]!
   18ea4:	mov	x2, #0x58                  	// #88
   18ea8:	mov	w1, #0x0                   	// #0
   18eac:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   18eb0:	ldr	x30, [sp], #16
   18eb4:	ret
   18eb8:	ldr	x3, [x0, #80]
   18ebc:	mov	x6, x0
   18ec0:	mov	w1, #0x1                   	// #1
   18ec4:	cbnz	x3, 18f18 <__sanitizer_set_report_fd@@Base+0x2b68>
   18ec8:	ldxr	w0, [x6]
   18ecc:	stxr	w2, w1, [x6]
   18ed0:	cbnz	w2, 18ec8 <__sanitizer_set_report_fd@@Base+0x2b18>
   18ed4:	dmb	ish
   18ed8:	cbz	w0, 18f38 <__sanitizer_set_report_fd@@Base+0x2b88>
   18edc:	mov	w7, #0x2                   	// #2
   18ee0:	mov	x8, #0x62                  	// #98
   18ee4:	mov	x1, #0x80                  	// #128
   18ee8:	mov	x2, #0x2                   	// #2
   18eec:	ldxr	w0, [x6]
   18ef0:	stxr	w3, w7, [x6]
   18ef4:	cbnz	w3, 18eec <__sanitizer_set_report_fd@@Base+0x2b3c>
   18ef8:	dmb	ish
   18efc:	cbz	w0, 18f38 <__sanitizer_set_report_fd@@Base+0x2b88>
   18f00:	mov	x0, x6
   18f04:	mov	x3, #0x0                   	// #0
   18f08:	mov	x4, #0x0                   	// #0
   18f0c:	mov	x5, #0x0                   	// #0
   18f10:	svc	#0x0
   18f14:	b	18eec <__sanitizer_set_report_fd@@Base+0x2b3c>
   18f18:	str	x30, [sp, #-16]!
   18f1c:	mov	x4, #0x0                   	// #0
   18f20:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18f24:	add	x2, x2, #0x970
   18f28:	mov	w1, #0x298                 	// #664
   18f2c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18f30:	add	x0, x0, #0x8a0
   18f34:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18f38:	ret
   18f3c:	dmb	ish
   18f40:	ldxr	w1, [x0]
   18f44:	stxr	w2, wzr, [x0]
   18f48:	cbnz	w2, 18f40 <__sanitizer_set_report_fd@@Base+0x2b90>
   18f4c:	dmb	ish
   18f50:	cbz	w1, 18f60 <__sanitizer_set_report_fd@@Base+0x2bb0>
   18f54:	cmp	w1, #0x2
   18f58:	b.eq	18f84 <__sanitizer_set_report_fd@@Base+0x2bd4>  // b.none
   18f5c:	ret
   18f60:	str	x30, [sp, #-16]!
   18f64:	mov	x4, #0x0                   	// #0
   18f68:	mov	x3, #0x0                   	// #0
   18f6c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18f70:	add	x2, x2, #0x988
   18f74:	mov	w1, #0x2ab                 	// #683
   18f78:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18f7c:	add	x0, x0, #0x8a0
   18f80:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18f84:	mov	x8, #0x62                  	// #98
   18f88:	mov	x1, #0x81                  	// #129
   18f8c:	mov	x2, #0x1                   	// #1
   18f90:	mov	x3, #0x0                   	// #0
   18f94:	mov	x4, #0x0                   	// #0
   18f98:	mov	x5, #0x0                   	// #0
   18f9c:	svc	#0x0
   18fa0:	b	18f5c <__sanitizer_set_report_fd@@Base+0x2bac>
   18fa4:	ldr	w0, [x0]
   18fa8:	cbz	w0, 18fb0 <__sanitizer_set_report_fd@@Base+0x2c00>
   18fac:	ret
   18fb0:	str	x30, [sp, #-16]!
   18fb4:	mov	x4, #0x0                   	// #0
   18fb8:	mov	x3, #0x0                   	// #0
   18fbc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18fc0:	add	x2, x2, #0x9a8
   18fc4:	mov	w1, #0x2b9                 	// #697
   18fc8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   18fcc:	add	x0, x0, #0x8a0
   18fd0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   18fd4:	mov	x8, #0x75                  	// #117
   18fd8:	sxtw	x0, w0
   18fdc:	sxtw	x1, w1
   18fe0:	svc	#0x0
   18fe4:	ret
   18fe8:	mov	x8, #0x104                 	// #260
   18fec:	sxtw	x0, w0
   18ff0:	sxtw	x2, w2
   18ff4:	mov	x3, #0x0                   	// #0
   18ff8:	svc	#0x0
   18ffc:	ret
   19000:	mov	x8, #0xac                  	// #172
   19004:	svc	#0x0
   19008:	ret
   1900c:	mov	x8, #0xad                  	// #173
   19010:	svc	#0x0
   19014:	ret
   19018:	mov	x8, #0x3d                  	// #61
   1901c:	sxtw	x0, w0
   19020:	mov	w2, w2
   19024:	svc	#0x0
   19028:	ret
   1902c:	mov	x8, #0x3e                  	// #62
   19030:	sxtw	x0, w0
   19034:	sxtw	x2, w2
   19038:	svc	#0x0
   1903c:	ret
   19040:	mov	x8, #0xa7                  	// #167
   19044:	sxtw	x0, w0
   19048:	svc	#0x0
   1904c:	ret
   19050:	mov	x8, #0x84                  	// #132
   19054:	svc	#0x0
   19058:	ret
   1905c:	mov	x8, #0xdc                  	// #220
   19060:	mov	x0, #0x11                  	// #17
   19064:	mov	x1, #0x0                   	// #0
   19068:	svc	#0x0
   1906c:	ret
   19070:	stp	x19, x20, [sp, #-112]!
   19074:	stp	x21, x22, [sp, #16]
   19078:	str	x30, [sp, #32]
   1907c:	mov	w20, w0
   19080:	mov	x19, x1
   19084:	mov	x21, x2
   19088:	mov	x2, #0x20                  	// #32
   1908c:	mov	w1, #0x0                   	// #0
   19090:	add	x0, sp, #0x50
   19094:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   19098:	mov	x2, #0x20                  	// #32
   1909c:	mov	w1, #0x0                   	// #0
   190a0:	add	x0, sp, #0x30
   190a4:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   190a8:	cbz	x19, 19150 <__sanitizer_set_report_fd@@Base+0x2da0>
   190ac:	mov	x1, x19
   190b0:	ldr	x0, [x1], #8
   190b4:	str	x0, [sp, #80]
   190b8:	add	x22, sp, #0x50
   190bc:	mov	x2, #0x8                   	// #8
   190c0:	add	x0, sp, #0x68
   190c4:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   190c8:	ldr	w0, [x19, #136]
   190cc:	orr	w0, w0, #0x4000000
   190d0:	sxtw	x0, w0
   190d4:	str	x0, [sp, #88]
   190d8:	ldr	x0, [x19, #144]
   190dc:	str	x0, [sp, #96]
   190e0:	sxtw	x0, w20
   190e4:	mov	x1, x22
   190e8:	cmp	x21, #0x0
   190ec:	mov	x8, #0x86                  	// #134
   190f0:	add	x2, sp, #0x30
   190f4:	csel	x2, x2, xzr, ne  // ne = any
   190f8:	mov	x3, #0x8                   	// #8
   190fc:	svc	#0x0
   19100:	mov	x19, x0
   19104:	cmp	x0, #0x0
   19108:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   1910c:	b.ne	19124 <__sanitizer_set_report_fd@@Base+0x2d74>  // b.any
   19110:	mov	w0, w19
   19114:	ldp	x21, x22, [sp, #16]
   19118:	ldr	x30, [sp, #32]
   1911c:	ldp	x19, x20, [sp], #112
   19120:	ret
   19124:	mov	x0, x21
   19128:	ldr	x1, [sp, #48]
   1912c:	str	x1, [x0], #8
   19130:	mov	x2, x3
   19134:	add	x1, sp, #0x48
   19138:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1913c:	ldr	x0, [sp, #56]
   19140:	str	w0, [x21, #136]
   19144:	ldr	x0, [sp, #64]
   19148:	str	x0, [x21, #144]
   1914c:	b	19110 <__sanitizer_set_report_fd@@Base+0x2d60>
   19150:	sxtw	x0, w20
   19154:	mov	x1, #0x0                   	// #0
   19158:	b	190e8 <__sanitizer_set_report_fd@@Base+0x2d38>
   1915c:	mov	x8, #0x87                  	// #135
   19160:	sxtw	x0, w0
   19164:	mov	x3, #0x8                   	// #8
   19168:	svc	#0x0
   1916c:	ret
   19170:	str	x30, [sp, #-16]!
   19174:	mov	x2, #0x80                  	// #128
   19178:	mov	w1, #0xff                  	// #255
   1917c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   19180:	ldr	x30, [sp], #16
   19184:	ret
   19188:	str	x30, [sp, #-16]!
   1918c:	mov	x2, #0x80                  	// #128
   19190:	mov	w1, #0x0                   	// #0
   19194:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   19198:	ldr	x30, [sp], #16
   1919c:	ret
   191a0:	sub	w1, w1, #0x1
   191a4:	sxtw	x3, w1
   191a8:	cmp	x3, #0x3ff
   191ac:	b.hi	191d0 <__sanitizer_set_report_fd@@Base+0x2e20>  // b.pmore
   191b0:	lsr	x3, x3, #3
   191b4:	and	x1, x1, #0x7
   191b8:	mov	w2, #0x1                   	// #1
   191bc:	lsl	w1, w2, w1
   191c0:	ldrb	w2, [x0, x3]
   191c4:	bic	w1, w2, w1
   191c8:	strb	w1, [x0, x3]
   191cc:	ret
   191d0:	str	x30, [sp, #-16]!
   191d4:	mov	x4, #0x400                 	// #1024
   191d8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   191dc:	add	x2, x2, #0x9e8
   191e0:	mov	w1, #0x381                 	// #897
   191e4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   191e8:	add	x0, x0, #0x8a0
   191ec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   191f0:	sub	w1, w1, #0x1
   191f4:	sxtw	x3, w1
   191f8:	cmp	x3, #0x3ff
   191fc:	b.hi	19218 <__sanitizer_set_report_fd@@Base+0x2e68>  // b.pmore
   19200:	lsr	x3, x3, #3
   19204:	ldrb	w0, [x0, x3]
   19208:	and	x1, x1, #0x7
   1920c:	asr	w0, w0, w1
   19210:	and	w0, w0, #0x1
   19214:	ret
   19218:	str	x30, [sp, #-16]!
   1921c:	mov	x4, #0x400                 	// #1024
   19220:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19224:	add	x2, x2, #0x9e8
   19228:	mov	w1, #0x38b                 	// #907
   1922c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19230:	add	x0, x0, #0x8a0
   19234:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19238:	stp	x19, x30, [sp, #-16]!
   1923c:	mov	x19, x0
   19240:	ldr	w0, [x0, #4]
   19244:	sxtw	x1, w0
   19248:	cmn	x1, #0x1, lsl #12
   1924c:	b.ls	19264 <__sanitizer_set_report_fd@@Base+0x2eb4>  // b.plast
   19250:	ldr	x1, [x19, #16]
   19254:	ldr	x0, [x19, #8]
   19258:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1925c:	ldp	x19, x30, [sp], #16
   19260:	ret
   19264:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   19268:	b	19250 <__sanitizer_set_report_fd@@Base+0x2ea0>
   1926c:	stp	x29, x30, [sp, #-16]!
   19270:	mov	x29, sp
   19274:	clz	x0, x29
   19278:	neg	w1, w0
   1927c:	mov	x0, #0x1                   	// #1
   19280:	lsl	x0, x0, x1
   19284:	sub	x0, x0, #0x1
   19288:	ldp	x29, x30, [sp], #16
   1928c:	ret
   19290:	str	x30, [sp, #-16]!
   19294:	bl	1926c <__sanitizer_set_report_fd@@Base+0x2ebc>
   19298:	ldr	x30, [sp], #16
   1929c:	ret
   192a0:	str	x30, [sp, #-16]!
   192a4:	mov	x0, #0x6                   	// #6
   192a8:	bl	6bb0 <getauxval@plt>
   192ac:	ldr	x30, [sp], #16
   192b0:	ret
   192b4:	stp	x19, x20, [sp, #-128]!
   192b8:	stp	x21, x22, [sp, #16]
   192bc:	stp	x23, x30, [sp, #32]
   192c0:	mov	x19, x0
   192c4:	mov	w20, w1
   192c8:	str	w1, [x0]
   192cc:	mov	w0, #0xffffffff            	// #-1
   192d0:	str	w0, [x19, #4]
   192d4:	str	xzr, [x19, #16]
   192d8:	str	xzr, [x19, #24]
   192dc:	str	xzr, [x19, #8]
   192e0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   192e4:	ldr	x0, [x0, #4000]
   192e8:	ldr	x0, [x0]
   192ec:	cbz	x0, 193cc <__sanitizer_set_report_fd@@Base+0x301c>
   192f0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   192f4:	ldr	x0, [x0, #4000]
   192f8:	ldr	x2, [x0]
   192fc:	sub	x0, x2, #0x1
   19300:	tst	x0, x2
   19304:	b.ne	193e0 <__sanitizer_set_report_fd@@Base+0x3030>  // b.any
   19308:	add	x21, x2, #0xfff
   1930c:	neg	x2, x2
   19310:	and	x21, x21, x2
   19314:	mov	w2, #0x0                   	// #0
   19318:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1931c:	add	x1, x1, #0x650
   19320:	mov	x0, x21
   19324:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   19328:	mov	x23, x0
   1932c:	ldr	x2, [x19, #24]
   19330:	ldr	x1, [x19, #8]
   19334:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   19338:	ldr	x1, [x19, #16]
   1933c:	ldr	x0, [x19, #8]
   19340:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   19344:	str	x23, [x19, #8]
   19348:	str	x21, [x19, #16]
   1934c:	ldr	x0, [x19, #24]
   19350:	cmp	x0, #0xfff
   19354:	b.hi	1937c <__sanitizer_set_report_fd@@Base+0x2fcc>  // b.pmore
   19358:	cmp	x21, #0xfff
   1935c:	b.ls	193f0 <__sanitizer_set_report_fd@@Base+0x3040>  // b.plast
   19360:	ldr	x0, [x19, #24]
   19364:	ldr	x3, [x19, #8]
   19368:	mov	x2, #0x1000                	// #4096
   1936c:	sub	x2, x2, x0
   19370:	mov	w1, #0x0                   	// #0
   19374:	add	x0, x3, x0
   19378:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1937c:	mov	x0, #0x1000                	// #4096
   19380:	str	x0, [x19, #24]
   19384:	add	x21, sp, #0x30
   19388:	mov	w3, w20
   1938c:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19390:	add	x2, x2, #0xa10
   19394:	mov	x1, #0x50                  	// #80
   19398:	mov	x0, x21
   1939c:	bl	1d534 <OnPrint@@Base+0x4>
   193a0:	mov	w1, #0x4000                	// #16384
   193a4:	mov	x0, x21
   193a8:	bl	18a2c <__sanitizer_set_report_fd@@Base+0x267c>
   193ac:	str	w0, [x19, #4]
   193b0:	sxtw	x0, w0
   193b4:	cmn	x0, #0x1, lsl #12
   193b8:	b.hi	19484 <__sanitizer_set_report_fd@@Base+0x30d4>  // b.pmore
   193bc:	ldp	x21, x22, [sp, #16]
   193c0:	ldp	x23, x30, [sp, #32]
   193c4:	ldp	x19, x20, [sp], #128
   193c8:	ret
   193cc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   193d0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   193d4:	ldr	x1, [x1, #4000]
   193d8:	str	x0, [x1]
   193dc:	b	192f0 <__sanitizer_set_report_fd@@Base+0x2f40>
   193e0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   193e4:	add	x0, x0, #0x638
   193e8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   193ec:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   193f0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   193f4:	ldr	x0, [x0, #4000]
   193f8:	ldr	x0, [x0]
   193fc:	cbz	x0, 19460 <__sanitizer_set_report_fd@@Base+0x30b0>
   19400:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19404:	ldr	x0, [x0, #4000]
   19408:	ldr	x0, [x0]
   1940c:	sub	x1, x0, #0x1
   19410:	tst	x1, x0
   19414:	b.ne	19474 <__sanitizer_set_report_fd@@Base+0x30c4>  // b.any
   19418:	add	x21, x0, #0xfff
   1941c:	neg	x0, x0
   19420:	and	x21, x21, x0
   19424:	mov	w2, #0x0                   	// #0
   19428:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1942c:	add	x1, x1, #0x650
   19430:	mov	x0, x21
   19434:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   19438:	mov	x23, x0
   1943c:	ldr	x2, [x19, #24]
   19440:	ldr	x1, [x19, #8]
   19444:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   19448:	ldr	x1, [x19, #16]
   1944c:	ldr	x0, [x19, #8]
   19450:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   19454:	str	x23, [x19, #8]
   19458:	str	x21, [x19, #16]
   1945c:	b	19360 <__sanitizer_set_report_fd@@Base+0x2fb0>
   19460:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   19464:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19468:	ldr	x1, [x1, #4000]
   1946c:	str	x0, [x1]
   19470:	b	19400 <__sanitizer_set_report_fd@@Base+0x3050>
   19474:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19478:	add	x0, x0, #0x638
   1947c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   19480:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19484:	mov	w1, w20
   19488:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1948c:	add	x0, x0, #0xa20
   19490:	bl	1d908 <OnPrint@@Base+0x3d8>
   19494:	b	193bc <__sanitizer_set_report_fd@@Base+0x300c>
   19498:	stp	x19, x20, [sp, #-144]!
   1949c:	stp	x21, x22, [sp, #16]
   194a0:	str	x30, [sp, #32]
   194a4:	mov	x19, x0
   194a8:	mov	x21, x0
   194ac:	add	x20, sp, #0x38
   194b0:	mov	w4, w1
   194b4:	ldr	w3, [x21], #8
   194b8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   194bc:	add	x2, x2, #0xa48
   194c0:	mov	x1, #0x50                  	// #80
   194c4:	mov	x0, x20
   194c8:	bl	1d534 <OnPrint@@Base+0x4>
   194cc:	mov	x3, #0x0                   	// #0
   194d0:	mov	x2, #0x4000000             	// #67108864
   194d4:	mov	x1, x21
   194d8:	mov	x0, x20
   194dc:	bl	15d54 <__sanitizer_cov_dump@@Base+0x219c>
   194e0:	ands	w0, w0, #0xff
   194e4:	b.eq	194f4 <__sanitizer_set_report_fd@@Base+0x3144>  // b.none
   194e8:	ldr	x3, [x19, #24]
   194ec:	mov	w0, #0x0                   	// #0
   194f0:	cbnz	x3, 19504 <__sanitizer_set_report_fd@@Base+0x3154>
   194f4:	ldp	x21, x22, [sp, #16]
   194f8:	ldr	x30, [sp, #32]
   194fc:	ldp	x19, x20, [sp], #144
   19500:	ret
   19504:	strb	wzr, [sp, #143]
   19508:	ldr	x4, [x19, #16]
   1950c:	cmp	x3, x4
   19510:	b.hi	19574 <__sanitizer_set_report_fd@@Base+0x31c4>  // b.pmore
   19514:	b.eq	1958c <__sanitizer_set_report_fd@@Base+0x31dc>  // b.none
   19518:	ldr	x3, [x19, #8]
   1951c:	ldr	x0, [x19, #24]
   19520:	add	x2, x0, #0x1
   19524:	str	x2, [x19, #24]
   19528:	mov	x2, #0x1                   	// #1
   1952c:	add	x1, sp, #0x8f
   19530:	add	x0, x3, x0
   19534:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   19538:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1953c:	add	x1, x1, #0xce8
   19540:	ldr	x0, [x19, #8]
   19544:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   19548:	mov	x19, x0
   1954c:	mov	w0, #0x0                   	// #0
   19550:	cbz	x19, 194f4 <__sanitizer_set_report_fd@@Base+0x3144>
   19554:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19558:	add	x0, x0, #0xce8
   1955c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   19560:	add	x0, x19, x0
   19564:	bl	18118 <__sanitizer_set_report_fd@@Base+0x1d68>
   19568:	cmp	w0, #0x0
   1956c:	cset	w0, ne  // ne = any
   19570:	b	194f4 <__sanitizer_set_report_fd@@Base+0x3144>
   19574:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19578:	add	x2, x2, #0x5b0
   1957c:	mov	w1, #0x1be                 	// #446
   19580:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19584:	add	x0, x0, #0x520
   19588:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1958c:	adds	x1, x3, #0x1
   19590:	b.eq	19644 <__sanitizer_set_report_fd@@Base+0x3294>  // b.none
   19594:	tst	x3, x1
   19598:	b.eq	196bc <__sanitizer_set_report_fd@@Base+0x330c>  // b.none
   1959c:	clz	x0, x1
   195a0:	mov	w2, #0x3f                  	// #63
   195a4:	sub	w2, w2, w0
   195a8:	add	w0, w2, #0x1
   195ac:	mov	x20, #0x1                   	// #1
   195b0:	lsl	x20, x20, x0
   195b4:	cmp	x1, x20
   195b8:	b.cs	19664 <__sanitizer_set_report_fd@@Base+0x32b4>  // b.hs, b.nlast
   195bc:	mov	x4, #0x1                   	// #1
   195c0:	lsl	x4, x4, x2
   195c4:	cmp	x1, x4
   195c8:	b.ls	19684 <__sanitizer_set_report_fd@@Base+0x32d4>  // b.plast
   195cc:	cmp	x3, x20
   195d0:	b.hi	196a0 <__sanitizer_set_report_fd@@Base+0x32f0>  // b.pmore
   195d4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   195d8:	ldr	x0, [x0, #4000]
   195dc:	ldr	x0, [x0]
   195e0:	cbz	x0, 196c4 <__sanitizer_set_report_fd@@Base+0x3314>
   195e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   195e8:	ldr	x0, [x0, #4000]
   195ec:	ldr	x1, [x0]
   195f0:	sub	x0, x1, #0x1
   195f4:	tst	x1, x0
   195f8:	b.ne	196d8 <__sanitizer_set_report_fd@@Base+0x3328>  // b.any
   195fc:	add	x0, x20, x0
   19600:	neg	x20, x1
   19604:	and	x20, x0, x20
   19608:	mov	w2, #0x0                   	// #0
   1960c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19610:	add	x1, x1, #0x650
   19614:	mov	x0, x20
   19618:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1961c:	mov	x22, x0
   19620:	ldr	x2, [x19, #24]
   19624:	ldr	x1, [x19, #8]
   19628:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1962c:	ldr	x1, [x19, #16]
   19630:	ldr	x0, [x19, #8]
   19634:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   19638:	str	x22, [x19, #8]
   1963c:	str	x20, [x19, #16]
   19640:	b	19518 <__sanitizer_set_report_fd@@Base+0x3168>
   19644:	mov	x4, #0x0                   	// #0
   19648:	mov	x3, #0x0                   	// #0
   1964c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19650:	add	x2, x2, #0xcf8
   19654:	mov	w1, #0x177                 	// #375
   19658:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1965c:	add	x0, x0, #0x520
   19660:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19664:	mov	x4, x20
   19668:	mov	x3, x1
   1966c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19670:	add	x2, x2, #0x5d0
   19674:	mov	w1, #0x17b                 	// #379
   19678:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1967c:	add	x0, x0, #0x520
   19680:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19684:	mov	x3, x1
   19688:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1968c:	add	x2, x2, #0x5f8
   19690:	mov	w1, #0x17c                 	// #380
   19694:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19698:	add	x0, x0, #0x520
   1969c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   196a0:	mov	x4, x20
   196a4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   196a8:	add	x2, x2, #0x618
   196ac:	mov	w1, #0x1fd                 	// #509
   196b0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   196b4:	add	x0, x0, #0x520
   196b8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   196bc:	mov	x20, x1
   196c0:	b	195d4 <__sanitizer_set_report_fd@@Base+0x3224>
   196c4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   196c8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   196cc:	ldr	x1, [x1, #4000]
   196d0:	str	x0, [x1]
   196d4:	b	195e4 <__sanitizer_set_report_fd@@Base+0x3234>
   196d8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   196dc:	add	x0, x0, #0x638
   196e0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   196e4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   196e8:	stp	x19, x20, [sp, #-144]!
   196ec:	stp	x23, x24, [sp, #32]
   196f0:	str	x30, [sp, #80]
   196f4:	mov	x20, x0
   196f8:	mov	x23, x1
   196fc:	ldr	w0, [x0, #4]
   19700:	sxtw	x1, w0
   19704:	mov	w24, #0x0                   	// #0
   19708:	cmn	x1, #0x1, lsl #12
   1970c:	b.ls	19724 <__sanitizer_set_report_fd@@Base+0x3374>  // b.plast
   19710:	mov	w0, w24
   19714:	ldp	x23, x24, [sp, #32]
   19718:	ldr	x30, [sp, #80]
   1971c:	ldp	x19, x20, [sp], #144
   19720:	ret
   19724:	stp	x21, x22, [sp, #16]
   19728:	stp	x25, x26, [sp, #48]
   1972c:	stp	x27, x28, [sp, #64]
   19730:	mov	w2, #0x0                   	// #0
   19734:	mov	x1, #0x0                   	// #0
   19738:	bl	1902c <__sanitizer_set_report_fd@@Base+0x2c7c>
   1973c:	str	xzr, [x23, #16]
   19740:	mov	w26, #0x1                   	// #1
   19744:	mov	w24, #0x2                   	// #2
   19748:	adrp	x27, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1974c:	ldr	x0, [x27, #4000]
   19750:	str	x0, [sp, #104]
   19754:	add	x28, sp, #0x88
   19758:	b	19764 <__sanitizer_set_report_fd@@Base+0x33b4>
   1975c:	mov	w24, #0x1                   	// #1
   19760:	mov	w26, #0x0                   	// #0
   19764:	ldr	x19, [x20, #16]
   19768:	ldr	x0, [x20, #24]
   1976c:	cmp	x19, x0
   19770:	b.ls	19788 <__sanitizer_set_report_fd@@Base+0x33d8>  // b.plast
   19774:	ldr	x3, [x20, #8]
   19778:	sub	x2, x19, x0
   1977c:	mov	w1, #0x0                   	// #0
   19780:	add	x0, x3, x0
   19784:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   19788:	str	x19, [x20, #24]
   1978c:	cmp	x19, #0xfff
   19790:	b.ls	197d0 <__sanitizer_set_report_fd@@Base+0x3420>  // b.plast
   19794:	mov	w2, w19
   19798:	ldr	x1, [x20, #8]
   1979c:	ldr	w0, [x20, #4]
   197a0:	bl	19018 <__sanitizer_set_report_fd@@Base+0x2c68>
   197a4:	mov	x22, x0
   197a8:	cbz	x0, 19b18 <__sanitizer_set_report_fd@@Base+0x3768>
   197ac:	cmn	x0, #0x1, lsl #12
   197b0:	b.hi	197f0 <__sanitizer_set_report_fd@@Base+0x3440>  // b.pmore
   197b4:	ldr	x19, [x20, #8]
   197b8:	add	x21, x0, x19
   197bc:	cmp	x19, x21
   197c0:	b.cs	199f4 <__sanitizer_set_report_fd@@Base+0x3644>  // b.hs, b.nlast
   197c4:	adrp	x25, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   197c8:	add	x25, x25, #0x650
   197cc:	b	19834 <__sanitizer_set_report_fd@@Base+0x3484>
   197d0:	mov	x4, #0x1000                	// #4096
   197d4:	mov	x3, x19
   197d8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   197dc:	add	x2, x2, #0xa60
   197e0:	mov	w1, #0x3b5                 	// #949
   197e4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   197e8:	add	x0, x0, #0x8a0
   197ec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   197f0:	ldr	w1, [x20]
   197f4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   197f8:	add	x0, x0, #0xa80
   197fc:	bl	1d908 <OnPrint@@Base+0x3d8>
   19800:	mov	w24, #0x0                   	// #0
   19804:	ldp	x21, x22, [sp, #16]
   19808:	ldp	x25, x26, [sp, #48]
   1980c:	ldp	x27, x28, [sp, #64]
   19810:	b	19710 <__sanitizer_set_report_fd@@Base+0x3360>
   19814:	mov	w24, #0x1                   	// #1
   19818:	ldrb	w1, [x0, #19]
   1981c:	sub	w1, w1, #0x30
   19820:	and	w1, w1, #0xff
   19824:	cmp	w1, #0x9
   19828:	b.ls	19854 <__sanitizer_set_report_fd@@Base+0x34a4>  // b.plast
   1982c:	cmp	x21, x19
   19830:	b.ls	199f4 <__sanitizer_set_report_fd@@Base+0x3644>  // b.plast
   19834:	mov	x0, x19
   19838:	ldrh	w1, [x19, #16]
   1983c:	add	x19, x19, x1
   19840:	ldr	x1, [x0]
   19844:	cmp	x1, #0x1
   19848:	b.eq	19814 <__sanitizer_set_report_fd@@Base+0x3464>  // b.none
   1984c:	cbz	x1, 1982c <__sanitizer_set_report_fd@@Base+0x347c>
   19850:	b	19818 <__sanitizer_set_report_fd@@Base+0x3468>
   19854:	add	x0, x0, #0x13
   19858:	bl	18118 <__sanitizer_set_report_fd@@Base+0x1d68>
   1985c:	str	x0, [sp, #136]
   19860:	ldr	x3, [x23, #16]
   19864:	ldr	x0, [x23, #8]
   19868:	lsr	x4, x0, #3
   1986c:	cmp	x3, x0, lsr #3
   19870:	b.hi	198a0 <__sanitizer_set_report_fd@@Base+0x34f0>  // b.pmore
   19874:	cmp	x3, x4
   19878:	b.eq	198b8 <__sanitizer_set_report_fd@@Base+0x3508>  // b.none
   1987c:	ldr	x3, [x23]
   19880:	ldr	x0, [x23, #16]
   19884:	add	x1, x0, #0x1
   19888:	str	x1, [x23, #16]
   1988c:	mov	x2, #0x8                   	// #8
   19890:	mov	x1, x28
   19894:	add	x0, x3, x0, lsl #3
   19898:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1989c:	b	1982c <__sanitizer_set_report_fd@@Base+0x347c>
   198a0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   198a4:	add	x2, x2, #0x5b0
   198a8:	mov	w1, #0x1be                 	// #446
   198ac:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   198b0:	add	x0, x0, #0x520
   198b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   198b8:	add	x0, x3, #0x1
   198bc:	tst	x3, x0
   198c0:	b.eq	199cc <__sanitizer_set_report_fd@@Base+0x361c>  // b.none
   198c4:	clz	x2, x0
   198c8:	mov	w1, #0x3f                  	// #63
   198cc:	sub	w1, w1, w2
   198d0:	add	w2, w1, #0x1
   198d4:	mov	x4, #0x1                   	// #1
   198d8:	lsl	x4, x4, x2
   198dc:	cmp	x0, x4
   198e0:	b.cs	19978 <__sanitizer_set_report_fd@@Base+0x35c8>  // b.hs, b.nlast
   198e4:	mov	x2, #0x1                   	// #1
   198e8:	lsl	x1, x2, x1
   198ec:	cmp	x0, x1
   198f0:	b.ls	19994 <__sanitizer_set_report_fd@@Base+0x35e4>  // b.plast
   198f4:	cmp	x3, x4
   198f8:	b.hi	199b4 <__sanitizer_set_report_fd@@Base+0x3604>  // b.pmore
   198fc:	lsl	x0, x4, #3
   19900:	str	x0, [sp, #112]
   19904:	ldr	x0, [sp, #104]
   19908:	ldr	x0, [x0]
   1990c:	cbz	x0, 199d4 <__sanitizer_set_report_fd@@Base+0x3624>
   19910:	ldr	x0, [x27, #4000]
   19914:	ldr	x1, [x0]
   19918:	sub	x0, x1, #0x1
   1991c:	tst	x1, x0
   19920:	b.ne	199e4 <__sanitizer_set_report_fd@@Base+0x3634>  // b.any
   19924:	ldr	x2, [sp, #112]
   19928:	add	x0, x2, x0
   1992c:	neg	x1, x1
   19930:	and	x0, x0, x1
   19934:	mov	w2, #0x0                   	// #0
   19938:	mov	x1, x25
   1993c:	str	x0, [sp, #120]
   19940:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   19944:	str	x0, [sp, #112]
   19948:	ldr	x2, [x23, #16]
   1994c:	lsl	x2, x2, #3
   19950:	ldr	x1, [x23]
   19954:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   19958:	ldr	x1, [x23, #8]
   1995c:	ldr	x0, [x23]
   19960:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   19964:	ldr	x1, [sp, #112]
   19968:	str	x1, [x23]
   1996c:	ldr	x0, [sp, #120]
   19970:	str	x0, [x23, #8]
   19974:	b	1987c <__sanitizer_set_report_fd@@Base+0x34cc>
   19978:	mov	x3, x0
   1997c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19980:	add	x2, x2, #0x5d0
   19984:	mov	w1, #0x17b                 	// #379
   19988:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1998c:	add	x0, x0, #0x520
   19990:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19994:	mov	x4, x1
   19998:	mov	x3, x0
   1999c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   199a0:	add	x2, x2, #0x5f8
   199a4:	mov	w1, #0x17c                 	// #380
   199a8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   199ac:	add	x0, x0, #0x520
   199b0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   199b4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   199b8:	add	x2, x2, #0x618
   199bc:	mov	w1, #0x1fd                 	// #509
   199c0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   199c4:	add	x0, x0, #0x520
   199c8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   199cc:	mov	x4, x0
   199d0:	b	198fc <__sanitizer_set_report_fd@@Base+0x354c>
   199d4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   199d8:	ldr	x1, [x27, #4000]
   199dc:	str	x0, [x1]
   199e0:	b	19910 <__sanitizer_set_report_fd@@Base+0x3560>
   199e4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   199e8:	add	x0, x0, #0x638
   199ec:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   199f0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   199f4:	cbz	w26, 1975c <__sanitizer_set_report_fd@@Base+0x33ac>
   199f8:	ldr	x0, [x20, #24]
   199fc:	sub	x1, x0, #0x400
   19a00:	cmp	x1, x22
   19a04:	b.cc	19a30 <__sanitizer_set_report_fd@@Base+0x3680>  // b.lo, b.ul, b.last
   19a08:	ldr	x0, [x23, #16]
   19a0c:	cbz	x0, 19760 <__sanitizer_set_report_fd@@Base+0x33b0>
   19a10:	ldr	x1, [x23]
   19a14:	add	x0, x1, x0, lsl #3
   19a18:	ldur	w1, [x0, #-8]
   19a1c:	mov	x0, x20
   19a20:	bl	19498 <__sanitizer_set_report_fd@@Base+0x30e8>
   19a24:	ands	w0, w0, #0xff
   19a28:	csinc	w24, w24, wzr, ne  // ne = any
   19a2c:	b	19760 <__sanitizer_set_report_fd@@Base+0x33b0>
   19a30:	lsl	x19, x0, #1
   19a34:	cmp	x0, x0, lsl #1
   19a38:	b.cs	19a60 <__sanitizer_set_report_fd@@Base+0x36b0>  // b.hs, b.nlast
   19a3c:	ldr	x0, [x20, #16]
   19a40:	cmp	x19, x0
   19a44:	b.hi	19a6c <__sanitizer_set_report_fd@@Base+0x36bc>  // b.pmore
   19a48:	ldr	x0, [x20, #24]
   19a4c:	ldr	x3, [x20, #8]
   19a50:	sub	x2, x19, x0
   19a54:	mov	w1, #0x0                   	// #0
   19a58:	add	x0, x3, x0
   19a5c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   19a60:	str	x19, [x20, #24]
   19a64:	mov	w24, #0x1                   	// #1
   19a68:	b	19760 <__sanitizer_set_report_fd@@Base+0x33b0>
   19a6c:	cbz	x19, 19ad8 <__sanitizer_set_report_fd@@Base+0x3728>
   19a70:	ldr	x0, [x27, #4000]
   19a74:	ldr	x0, [x0]
   19a78:	cbz	x0, 19af8 <__sanitizer_set_report_fd@@Base+0x3748>
   19a7c:	ldr	x0, [x27, #4000]
   19a80:	ldr	x0, [x0]
   19a84:	sub	x1, x0, #0x1
   19a88:	tst	x0, x1
   19a8c:	b.ne	19b08 <__sanitizer_set_report_fd@@Base+0x3758>  // b.any
   19a90:	add	x1, x19, x1
   19a94:	neg	x0, x0
   19a98:	and	x21, x1, x0
   19a9c:	mov	w2, #0x0                   	// #0
   19aa0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19aa4:	add	x1, x1, #0x650
   19aa8:	mov	x0, x21
   19aac:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   19ab0:	mov	x24, x0
   19ab4:	ldr	x2, [x20, #24]
   19ab8:	ldr	x1, [x20, #8]
   19abc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   19ac0:	ldr	x1, [x20, #16]
   19ac4:	ldr	x0, [x20, #8]
   19ac8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   19acc:	str	x24, [x20, #8]
   19ad0:	str	x21, [x20, #16]
   19ad4:	b	19a48 <__sanitizer_set_report_fd@@Base+0x3698>
   19ad8:	mov	x4, #0x0                   	// #0
   19adc:	mov	x3, #0x0                   	// #0
   19ae0:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   19ae4:	add	x2, x2, #0xf40
   19ae8:	mov	w1, #0x1fc                 	// #508
   19aec:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19af0:	add	x0, x0, #0x520
   19af4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19af8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   19afc:	ldr	x1, [x27, #4000]
   19b00:	str	x0, [x1]
   19b04:	b	19a7c <__sanitizer_set_report_fd@@Base+0x36cc>
   19b08:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19b0c:	add	x0, x0, #0x638
   19b10:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   19b14:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19b18:	ldp	x21, x22, [sp, #16]
   19b1c:	ldp	x25, x26, [sp, #48]
   19b20:	ldp	x27, x28, [sp, #64]
   19b24:	b	19710 <__sanitizer_set_report_fd@@Base+0x3360>
   19b28:	stp	x19, x20, [sp, #-32]!
   19b2c:	str	x30, [sp, #16]
   19b30:	mov	x20, x0
   19b34:	mov	x19, x1
   19b38:	mov	x2, x1
   19b3c:	mov	x1, x0
   19b40:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19b44:	add	x0, x0, #0x910
   19b48:	bl	18b74 <__sanitizer_set_report_fd@@Base+0x27c4>
   19b4c:	cmn	x0, #0x1, lsl #12
   19b50:	b.hi	19b60 <__sanitizer_set_report_fd@@Base+0x37b0>  // b.pmore
   19b54:	ldr	x30, [sp, #16]
   19b58:	ldp	x19, x20, [sp], #32
   19b5c:	ret
   19b60:	neg	w1, w0
   19b64:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19b68:	add	x0, x0, #0xab8
   19b6c:	bl	1d908 <OnPrint@@Base+0x3d8>
   19b70:	adrp	x3, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19b74:	add	x3, x3, #0x910
   19b78:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19b7c:	add	x2, x2, #0xd50
   19b80:	mov	x1, x19
   19b84:	mov	x0, x20
   19b88:	bl	1d534 <OnPrint@@Base+0x4>
   19b8c:	mov	w1, w0
   19b90:	sxtw	x0, w0
   19b94:	cmp	x19, w1, sxtw
   19b98:	b.hi	19b54 <__sanitizer_set_report_fd@@Base+0x37a4>  // b.pmore
   19b9c:	mov	x4, x19
   19ba0:	mov	x3, x0
   19ba4:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19ba8:	add	x2, x2, #0xb18
   19bac:	mov	w1, #0x470                 	// #1136
   19bb0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19bb4:	add	x0, x0, #0x8a0
   19bb8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19bbc:	stp	x19, x20, [sp, #-64]!
   19bc0:	str	x30, [sp, #16]
   19bc4:	mov	x19, x0
   19bc8:	mov	x20, x1
   19bcc:	mov	x5, #0x0                   	// #0
   19bd0:	mov	x4, #0x100000              	// #1048576
   19bd4:	add	x3, sp, #0x28
   19bd8:	add	x2, sp, #0x30
   19bdc:	add	x1, sp, #0x38
   19be0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19be4:	add	x0, x0, #0x8e0
   19be8:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   19bec:	and	w0, w0, #0xff
   19bf0:	cbz	w0, 19c24 <__sanitizer_set_report_fd@@Base+0x3874>
   19bf4:	mov	x2, x20
   19bf8:	ldr	x1, [sp, #56]
   19bfc:	mov	x0, x19
   19c00:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   19c04:	ldr	x1, [sp, #48]
   19c08:	ldr	x0, [sp, #56]
   19c0c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   19c10:	mov	x0, x19
   19c14:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   19c18:	ldr	x30, [sp, #16]
   19c1c:	ldp	x19, x20, [sp], #64
   19c20:	ret
   19c24:	mov	x1, x20
   19c28:	mov	x0, x19
   19c2c:	bl	19b28 <__sanitizer_set_report_fd@@Base+0x3778>
   19c30:	b	19c18 <__sanitizer_set_report_fd@@Base+0x3868>
   19c34:	stp	x19, x20, [sp, #-32]!
   19c38:	stp	x21, x30, [sp, #16]
   19c3c:	mov	x20, x1
   19c40:	ldrb	w1, [x0]
   19c44:	cbz	w1, 19cd0 <__sanitizer_set_report_fd@@Base+0x3920>
   19c48:	mov	x19, x0
   19c4c:	ldrb	w2, [x19, #1]!
   19c50:	cbnz	w2, 19c4c <__sanitizer_set_report_fd@@Base+0x389c>
   19c54:	cmp	x0, x19
   19c58:	b.cs	19c80 <__sanitizer_set_report_fd@@Base+0x38d0>  // b.hs, b.nlast
   19c5c:	ldrb	w2, [x19]
   19c60:	cmp	w2, #0x2f
   19c64:	b.eq	19cc8 <__sanitizer_set_report_fd@@Base+0x3918>  // b.none
   19c68:	sub	x19, x19, #0x1
   19c6c:	cmp	x0, x19
   19c70:	b.ne	19c5c <__sanitizer_set_report_fd@@Base+0x38ac>  // b.any
   19c74:	ldrb	w0, [x19]
   19c78:	cmp	w0, #0x2f
   19c7c:	b.eq	19cc8 <__sanitizer_set_report_fd@@Base+0x3918>  // b.none
   19c80:	mov	x0, x20
   19c84:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   19c88:	mov	x21, x0
   19c8c:	mov	x2, x0
   19c90:	mov	x1, x20
   19c94:	mov	x0, x19
   19c98:	bl	17c08 <__sanitizer_set_report_fd@@Base+0x1858>
   19c9c:	mov	w1, #0x0                   	// #0
   19ca0:	cbnz	w0, 19cb8 <__sanitizer_set_report_fd@@Base+0x3908>
   19ca4:	ldrb	w0, [x19, x21]
   19ca8:	sub	w0, w0, #0x2d
   19cac:	and	w0, w0, #0xff
   19cb0:	cmp	w0, #0x1
   19cb4:	cset	w1, ls  // ls = plast
   19cb8:	mov	w0, w1
   19cbc:	ldp	x21, x30, [sp, #16]
   19cc0:	ldp	x19, x20, [sp], #32
   19cc4:	ret
   19cc8:	add	x19, x19, #0x1
   19ccc:	b	19c80 <__sanitizer_set_report_fd@@Base+0x38d0>
   19cd0:	mov	x19, x0
   19cd4:	b	19c80 <__sanitizer_set_report_fd@@Base+0x38d0>
   19cd8:	stp	x19, x20, [sp, #-112]!
   19cdc:	str	x30, [sp, #80]
   19ce0:	cbz	x0, 19d30 <__sanitizer_set_report_fd@@Base+0x3980>
   19ce4:	stp	x23, x24, [sp, #32]
   19ce8:	stp	x25, x26, [sp, #48]
   19cec:	mov	x26, x1
   19cf0:	ldr	x23, [x0]
   19cf4:	mov	x25, x23
   19cf8:	ldr	x19, [x23, #32]
   19cfc:	add	x19, x23, x19
   19d00:	ldrh	w2, [x23, #54]
   19d04:	ldrh	w20, [x23, #56]
   19d08:	mul	w20, w20, w2
   19d0c:	add	x20, x19, w20, sxtw
   19d10:	cmp	x19, x20
   19d14:	b.eq	19e2c <__sanitizer_set_report_fd@@Base+0x3a7c>  // b.none
   19d18:	stp	x21, x22, [sp, #16]
   19d1c:	stp	x27, x28, [sp, #64]
   19d20:	mov	x0, x19
   19d24:	mov	x3, #0xffffffffffffffff    	// #-1
   19d28:	and	x2, x2, #0xffff
   19d2c:	b	19d6c <__sanitizer_set_report_fd@@Base+0x39bc>
   19d30:	stp	x21, x22, [sp, #16]
   19d34:	stp	x23, x24, [sp, #32]
   19d38:	stp	x25, x26, [sp, #48]
   19d3c:	stp	x27, x28, [sp, #64]
   19d40:	mov	x4, #0x0                   	// #0
   19d44:	mov	x3, #0x0                   	// #0
   19d48:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19d4c:	add	x2, x2, #0xb40
   19d50:	mov	w1, #0x495                 	// #1173
   19d54:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19d58:	add	x0, x0, #0x8a0
   19d5c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19d60:	add	x0, x0, x2
   19d64:	cmp	x20, x0
   19d68:	b.eq	19e40 <__sanitizer_set_report_fd@@Base+0x3a90>  // b.none
   19d6c:	ldr	w1, [x0]
   19d70:	cmp	w1, #0x1
   19d74:	b.ne	19d60 <__sanitizer_set_report_fd@@Base+0x39b0>  // b.any
   19d78:	ldr	x1, [x0, #16]
   19d7c:	cmp	x3, x1
   19d80:	csel	x3, x3, x1, ls  // ls = plast
   19d84:	b	19d60 <__sanitizer_set_report_fd@@Base+0x39b0>
   19d88:	ldr	x0, [x27]
   19d8c:	sub	x1, x0, #0x1
   19d90:	tst	x1, x0
   19d94:	b.ne	19e14 <__sanitizer_set_report_fd@@Base+0x3a64>  // b.any
   19d98:	add	x1, x1, x24
   19d9c:	neg	x0, x0
   19da0:	and	x1, x1, x0
   19da4:	sub	x1, x1, x21
   19da8:	mov	x0, x21
   19dac:	blr	x26
   19db0:	ldrh	w0, [x25, #54]
   19db4:	add	x19, x19, x0
   19db8:	cmp	x20, x19
   19dbc:	b.eq	19e24 <__sanitizer_set_report_fd@@Base+0x3a74>  // b.none
   19dc0:	ldr	w0, [x19]
   19dc4:	cmp	w0, #0x1
   19dc8:	b.ne	19db0 <__sanitizer_set_report_fd@@Base+0x3a00>  // b.any
   19dcc:	ldr	x22, [x19, #16]
   19dd0:	add	x22, x23, x22
   19dd4:	ldr	x24, [x19, #40]
   19dd8:	add	x24, x22, x24
   19ddc:	ldr	x0, [x28]
   19de0:	neg	x21, x0
   19de4:	and	x21, x21, x22
   19de8:	cbnz	x0, 19d88 <__sanitizer_set_report_fd@@Base+0x39d8>
   19dec:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   19df0:	ldr	x1, [sp, #96]
   19df4:	str	x0, [x1]
   19df8:	neg	x21, x0
   19dfc:	and	x21, x21, x22
   19e00:	cbnz	x0, 19d88 <__sanitizer_set_report_fd@@Base+0x39d8>
   19e04:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   19e08:	ldr	x1, [sp, #104]
   19e0c:	str	x0, [x1]
   19e10:	b	19d88 <__sanitizer_set_report_fd@@Base+0x39d8>
   19e14:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   19e18:	add	x0, x0, #0x638
   19e1c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   19e20:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   19e24:	ldp	x21, x22, [sp, #16]
   19e28:	ldp	x27, x28, [sp, #64]
   19e2c:	ldp	x23, x24, [sp, #32]
   19e30:	ldp	x25, x26, [sp, #48]
   19e34:	ldr	x30, [sp, #80]
   19e38:	ldp	x19, x20, [sp], #112
   19e3c:	ret
   19e40:	sub	x23, x23, x3
   19e44:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19e48:	ldr	x28, [x0, #4000]
   19e4c:	mov	x27, x28
   19e50:	str	x28, [sp, #96]
   19e54:	str	x28, [sp, #104]
   19e58:	b	19dc0 <__sanitizer_set_report_fd@@Base+0x3a10>
   19e5c:	cmp	x0, #0x0
   19e60:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   19e64:	b.eq	19ed8 <__sanitizer_set_report_fd@@Base+0x3b28>  // b.none
   19e68:	str	x30, [sp, #-16]!
   19e6c:	ands	x7, x1, #0xf
   19e70:	b.ne	19eb8 <__sanitizer_set_report_fd@@Base+0x3b08>  // b.any
   19e74:	stur	x0, [x1, #-16]
   19e78:	stur	x3, [x1, #-8]
   19e7c:	sub	x1, x1, #0x10
   19e80:	mov	x0, x2
   19e84:	mov	x2, x4
   19e88:	mov	x3, x5
   19e8c:	mov	x4, x6
   19e90:	mov	x8, #0xdc                  	// #220
   19e94:	svc	#0x0
   19e98:	cmp	x0, #0x0
   19e9c:	b.ne	19eb0 <__sanitizer_set_report_fd@@Base+0x3b00>  // b.any
   19ea0:	ldp	x1, x0, [sp], #16
   19ea4:	blr	x1
   19ea8:	mov	x8, #0x5d                  	// #93
   19eac:	svc	#0x0
   19eb0:	ldr	x30, [sp], #16
   19eb4:	ret
   19eb8:	mov	x4, x7
   19ebc:	mov	x3, #0x0                   	// #0
   19ec0:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19ec4:	add	x2, x2, #0xb58
   19ec8:	mov	w1, #0x54b                 	// #1355
   19ecc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   19ed0:	add	x0, x0, #0x8a0
   19ed4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   19ed8:	mov	x0, #0xffffffffffffffea    	// #-22
   19edc:	ret
   19ee0:	cmp	w0, #0x7
   19ee4:	b.eq	19f98 <__sanitizer_set_report_fd@@Base+0x3be8>  // b.none
   19ee8:	cmp	w0, #0x7
   19eec:	b.gt	19f50 <__sanitizer_set_report_fd@@Base+0x3ba0>
   19ef0:	cmp	w0, #0x5
   19ef4:	b.eq	19f78 <__sanitizer_set_report_fd@@Base+0x3bc8>  // b.none
   19ef8:	cmp	w0, #0x6
   19efc:	b.ne	19f30 <__sanitizer_set_report_fd@@Base+0x3b80>  // b.any
   19f00:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f04:	ldr	x0, [x0, #4040]
   19f08:	ldr	w0, [x0, #80]
   19f0c:	cmp	w0, #0x1
   19f10:	b.ne	19f2c <__sanitizer_set_report_fd@@Base+0x3b7c>  // b.any
   19f14:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f18:	ldr	x1, [x1, #4040]
   19f1c:	ldrb	w1, [x1, #96]
   19f20:	cmp	w1, #0x0
   19f24:	mov	w1, #0x2                   	// #2
   19f28:	csel	w0, w0, w1, ne  // ne = any
   19f2c:	ret
   19f30:	cmp	w0, #0x4
   19f34:	b.ne	19f48 <__sanitizer_set_report_fd@@Base+0x3b98>  // b.any
   19f38:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f3c:	ldr	x0, [x0, #4040]
   19f40:	ldr	w0, [x0, #84]
   19f44:	b	19f0c <__sanitizer_set_report_fd@@Base+0x3b5c>
   19f48:	mov	w0, #0x0                   	// #0
   19f4c:	b	19f2c <__sanitizer_set_report_fd@@Base+0x3b7c>
   19f50:	cmp	w0, #0x8
   19f54:	b.eq	19f88 <__sanitizer_set_report_fd@@Base+0x3bd8>  // b.none
   19f58:	cmp	w0, #0xb
   19f5c:	b.ne	19f70 <__sanitizer_set_report_fd@@Base+0x3bc0>  // b.any
   19f60:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f64:	ldr	x0, [x0, #4040]
   19f68:	ldr	w0, [x0, #72]
   19f6c:	b	19f0c <__sanitizer_set_report_fd@@Base+0x3b5c>
   19f70:	mov	w0, #0x0                   	// #0
   19f74:	b	19f2c <__sanitizer_set_report_fd@@Base+0x3b7c>
   19f78:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f7c:	ldr	x0, [x0, #4040]
   19f80:	ldr	w0, [x0, #88]
   19f84:	b	19f0c <__sanitizer_set_report_fd@@Base+0x3b5c>
   19f88:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f8c:	ldr	x0, [x0, #4040]
   19f90:	ldr	w0, [x0, #92]
   19f94:	b	19f0c <__sanitizer_set_report_fd@@Base+0x3b5c>
   19f98:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19f9c:	ldr	x0, [x0, #4040]
   19fa0:	ldr	w0, [x0, #76]
   19fa4:	b	19f0c <__sanitizer_set_report_fd@@Base+0x3b5c>
   19fa8:	stp	x19, x20, [sp, #-320]!
   19fac:	stp	x21, x22, [sp, #16]
   19fb0:	str	x30, [sp, #32]
   19fb4:	mov	x19, x0
   19fb8:	mov	x20, x1
   19fbc:	add	x21, sp, #0xc0
   19fc0:	mov	x0, x21
   19fc4:	bl	19170 <__sanitizer_set_report_fd@@Base+0x2dc0>
   19fc8:	mov	w1, #0x21                  	// #33
   19fcc:	mov	x0, x21
   19fd0:	bl	191a0 <__sanitizer_set_report_fd@@Base+0x2df0>
   19fd4:	add	x22, sp, #0x40
   19fd8:	mov	x2, x22
   19fdc:	mov	x1, x21
   19fe0:	mov	w0, #0x2                   	// #2
   19fe4:	bl	1915c <__sanitizer_set_report_fd@@Base+0x2dac>
   19fe8:	mov	x3, x20
   19fec:	mov	x2, x19
   19ff0:	mov	x1, #0x0                   	// #0
   19ff4:	add	x0, sp, #0x38
   19ff8:	bl	6c10 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   19ffc:	mov	x2, #0x0                   	// #0
   1a000:	mov	x1, x22
   1a004:	mov	w0, #0x2                   	// #2
   1a008:	bl	1915c <__sanitizer_set_report_fd@@Base+0x2dac>
   1a00c:	ldr	x0, [sp, #56]
   1a010:	ldp	x21, x22, [sp, #16]
   1a014:	ldr	x30, [sp, #32]
   1a018:	ldp	x19, x20, [sp], #320
   1a01c:	ret
   1a020:	str	x30, [sp, #-16]!
   1a024:	mov	x1, #0x0                   	// #0
   1a028:	bl	68d0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   1a02c:	ldr	x30, [sp], #16
   1a030:	ret
   1a034:	ldr	x0, [x0, #8]
   1a038:	add	x1, x0, #0x1d0
   1a03c:	ldr	w0, [x0, #468]
   1a040:	cbz	w0, 1a074 <__sanitizer_set_report_fd@@Base+0x3cc4>
   1a044:	mov	w3, #0x5201                	// #20993
   1a048:	movk	w3, #0x4553, lsl #16
   1a04c:	ldr	w2, [x1]
   1a050:	cmp	w2, w3
   1a054:	b.eq	1a068 <__sanitizer_set_report_fd@@Base+0x3cb8>  // b.none
   1a058:	add	x1, x1, w0, uxtw
   1a05c:	ldr	w0, [x1, #4]
   1a060:	cbnz	w0, 1a04c <__sanitizer_set_report_fd@@Base+0x3c9c>
   1a064:	b	1a074 <__sanitizer_set_report_fd@@Base+0x3cc4>
   1a068:	ldr	x0, [x1, #8]
   1a06c:	ubfx	w0, w0, #6, #1
   1a070:	add	w0, w0, #0x1
   1a074:	ret
   1a078:	ret
   1a07c:	ldr	x1, [x0, #8]
   1a080:	ldr	x2, [x1, #440]
   1a084:	str	x2, [x0, #24]
   1a088:	ldr	x2, [x1, #416]
   1a08c:	str	x2, [x0, #40]
   1a090:	ldr	x1, [x1, #432]
   1a094:	str	x1, [x0, #32]
   1a098:	ret
   1a09c:	ret
   1a0a0:	ret
   1a0a4:	ret
   1a0a8:	tbnz	w1, #3, 1a0b0 <__sanitizer_set_report_fd@@Base+0x3d00>
   1a0ac:	ret
   1a0b0:	str	x30, [sp, #-16]!
   1a0b4:	mov	x2, x0
   1a0b8:	mov	x1, x0
   1a0bc:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a0c0:	add	x0, x0, #0xb80
   1a0c4:	bl	1d908 <OnPrint@@Base+0x3d8>
   1a0c8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a0cc:	str	x30, [sp, #-16]!
   1a0d0:	mov	x4, #0x0                   	// #0
   1a0d4:	mov	x3, #0x0                   	// #0
   1a0d8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a0dc:	add	x2, x2, #0xc98
   1a0e0:	mov	w1, #0x80a                 	// #2058
   1a0e4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a0e8:	add	x0, x0, #0x8a0
   1a0ec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a0f0:	stp	x19, x20, [sp, #-48]!
   1a0f4:	str	x30, [sp, #32]
   1a0f8:	mov	x20, x1
   1a0fc:	sub	x1, x1, #0x1
   1a100:	cmp	x1, #0xff
   1a104:	cset	w19, hi  // hi = pmore
   1a108:	cmp	x0, #0x0
   1a10c:	csinc	w19, w19, wzr, ne  // ne = any
   1a110:	cbz	w19, 1a128 <__sanitizer_set_report_fd@@Base+0x3d78>
   1a114:	mov	w19, #0x0                   	// #0
   1a118:	mov	w0, w19
   1a11c:	ldr	x30, [sp, #32]
   1a120:	ldp	x19, x20, [sp], #48
   1a124:	ret
   1a128:	stp	x21, x22, [sp, #16]
   1a12c:	mov	x21, x0
   1a130:	and	w2, w2, #0xff
   1a134:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1a138:	add	x0, x0, #0xc78
   1a13c:	ldrb	w0, [x0, #24]
   1a140:	and	w0, w0, #0xff
   1a144:	cbnz	w0, 1a170 <__sanitizer_set_report_fd@@Base+0x3dc0>
   1a148:	eor	w2, w2, #0x1
   1a14c:	mov	x8, #0x116                 	// #278
   1a150:	mov	x0, x21
   1a154:	mov	x1, x20
   1a158:	and	x2, x2, #0xff
   1a15c:	svc	#0x0
   1a160:	cmn	x0, #0x1, lsl #12
   1a164:	b.hi	1a194 <__sanitizer_set_report_fd@@Base+0x3de4>  // b.pmore
   1a168:	cmp	x20, x0
   1a16c:	b.eq	1a1e0 <__sanitizer_set_report_fd@@Base+0x3e30>  // b.none
   1a170:	mov	w1, #0x0                   	// #0
   1a174:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a178:	add	x0, x0, #0xcd8
   1a17c:	bl	18a2c <__sanitizer_set_report_fd@@Base+0x267c>
   1a180:	mov	x22, x0
   1a184:	cmn	x0, #0x1, lsl #12
   1a188:	b.ls	1a1b0 <__sanitizer_set_report_fd@@Base+0x3e00>  // b.plast
   1a18c:	ldp	x21, x22, [sp, #16]
   1a190:	b	1a118 <__sanitizer_set_report_fd@@Base+0x3d68>
   1a194:	cmn	w0, #0x26
   1a198:	b.ne	1a170 <__sanitizer_set_report_fd@@Base+0x3dc0>  // b.any
   1a19c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1a1a0:	add	x0, x0, #0xc78
   1a1a4:	mov	w1, #0x1                   	// #1
   1a1a8:	strb	w1, [x0, #24]
   1a1ac:	b	1a170 <__sanitizer_set_report_fd@@Base+0x3dc0>
   1a1b0:	mov	x2, x20
   1a1b4:	mov	x1, x21
   1a1b8:	bl	18a74 <__sanitizer_set_report_fd@@Base+0x26c4>
   1a1bc:	cmn	x0, #0x1, lsl #12
   1a1c0:	b.ls	1a1cc <__sanitizer_set_report_fd@@Base+0x3e1c>  // b.plast
   1a1c4:	ldp	x21, x22, [sp, #16]
   1a1c8:	b	1a118 <__sanitizer_set_report_fd@@Base+0x3d68>
   1a1cc:	mov	w0, w22
   1a1d0:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1a1d4:	mov	w19, #0x1                   	// #1
   1a1d8:	ldp	x21, x22, [sp, #16]
   1a1dc:	b	1a118 <__sanitizer_set_report_fd@@Base+0x3d68>
   1a1e0:	mov	w19, #0x1                   	// #1
   1a1e4:	ldp	x21, x22, [sp, #16]
   1a1e8:	b	1a118 <__sanitizer_set_report_fd@@Base+0x3d68>
   1a1ec:	stp	x19, x20, [sp, #-64]!
   1a1f0:	str	x30, [sp, #16]
   1a1f4:	mov	x20, x0
   1a1f8:	add	x19, sp, #0x20
   1a1fc:	mov	w1, #0x1                   	// #1
   1a200:	mov	x0, x19
   1a204:	bl	1dd70 <OnPrint@@Base+0x840>
   1a208:	mov	x1, x20
   1a20c:	mov	x0, x19
   1a210:	bl	1de04 <OnPrint@@Base+0x8d4>
   1a214:	mov	x0, x19
   1a218:	bl	1dc24 <OnPrint@@Base+0x6f4>
   1a21c:	ldr	x30, [sp, #16]
   1a220:	ldp	x19, x20, [sp], #64
   1a224:	ret
   1a228:	str	x30, [sp, #-160]!
   1a22c:	add	x1, sp, #0x10
   1a230:	mov	w0, #0x0                   	// #0
   1a234:	bl	68e0 <getrusage@plt>
   1a238:	mov	w1, w0
   1a23c:	mov	x0, #0x0                   	// #0
   1a240:	cbnz	w1, 1a24c <__sanitizer_set_report_fd@@Base+0x3e9c>
   1a244:	ldr	x0, [sp, #48]
   1a248:	lsl	x0, x0, #10
   1a24c:	ldr	x30, [sp], #160
   1a250:	ret
   1a254:	stp	x19, x20, [sp, #-160]!
   1a258:	stp	x21, x22, [sp, #16]
   1a25c:	stp	x23, x30, [sp, #32]
   1a260:	mov	x20, x0
   1a264:	mov	x22, x2
   1a268:	str	xzr, [sp, #136]
   1a26c:	str	xzr, [sp, #144]
   1a270:	str	xzr, [sp, #128]
   1a274:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a278:	ldr	x0, [x0, #4000]
   1a27c:	ldr	x0, [x0]
   1a280:	cbz	x0, 1a378 <__sanitizer_set_report_fd@@Base+0x3fc8>
   1a284:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a288:	ldr	x0, [x0, #4000]
   1a28c:	ldr	x1, [x0]
   1a290:	sub	x19, x1, #0x1
   1a294:	ands	x19, x19, x1
   1a298:	b.ne	1a38c <__sanitizer_set_report_fd@@Base+0x3fdc>  // b.any
   1a29c:	add	x21, x1, #0xfff
   1a2a0:	neg	x1, x1
   1a2a4:	and	x21, x21, x1
   1a2a8:	mov	w2, #0x0                   	// #0
   1a2ac:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a2b0:	add	x1, x1, #0x650
   1a2b4:	mov	x0, x21
   1a2b8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1a2bc:	mov	x23, x0
   1a2c0:	ldr	x2, [sp, #144]
   1a2c4:	ldr	x1, [sp, #128]
   1a2c8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1a2cc:	ldr	x1, [sp, #136]
   1a2d0:	ldr	x0, [sp, #128]
   1a2d4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1a2d8:	str	x23, [sp, #128]
   1a2dc:	str	x21, [sp, #136]
   1a2e0:	ldr	x0, [sp, #144]
   1a2e4:	cmp	x0, #0xfff
   1a2e8:	b.hi	1a310 <__sanitizer_set_report_fd@@Base+0x3f60>  // b.pmore
   1a2ec:	cmp	x21, #0xfff
   1a2f0:	b.ls	1a39c <__sanitizer_set_report_fd@@Base+0x3fec>  // b.plast
   1a2f4:	ldr	x0, [sp, #144]
   1a2f8:	mov	x2, #0x1000                	// #4096
   1a2fc:	sub	x2, x2, x0
   1a300:	mov	w1, #0x0                   	// #0
   1a304:	ldr	x3, [sp, #128]
   1a308:	add	x0, x3, x0
   1a30c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1a310:	mov	x0, #0x1000                	// #4096
   1a314:	str	x0, [sp, #144]
   1a318:	str	xzr, [sp, #152]
   1a31c:	ldr	x0, [sp, #128]
   1a320:	strb	wzr, [x0]
   1a324:	ldrb	w0, [x22, #8]
   1a328:	cbnz	w0, 1a430 <__sanitizer_set_report_fd@@Base+0x4080>
   1a32c:	ldr	x2, [x20, #8]
   1a330:	cbz	x2, 1a344 <__sanitizer_set_report_fd@@Base+0x3f94>
   1a334:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a338:	add	x1, x1, #0xd50
   1a33c:	add	x0, sp, #0x80
   1a340:	bl	1d99c <OnPrint@@Base+0x46c>
   1a344:	ldr	x0, [sp, #144]
   1a348:	cbz	x0, 1a444 <__sanitizer_set_report_fd@@Base+0x4094>
   1a34c:	ldr	x0, [sp, #128]
   1a350:	ldrb	w0, [x0]
   1a354:	cbnz	w0, 1a464 <__sanitizer_set_report_fd@@Base+0x40b4>
   1a358:	ldr	x1, [sp, #136]
   1a35c:	ldr	x0, [sp, #128]
   1a360:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1a364:	mov	w0, #0x0                   	// #0
   1a368:	ldp	x21, x22, [sp, #16]
   1a36c:	ldp	x23, x30, [sp, #32]
   1a370:	ldp	x19, x20, [sp], #160
   1a374:	ret
   1a378:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1a37c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a380:	ldr	x1, [x1, #4000]
   1a384:	str	x0, [x1]
   1a388:	b	1a284 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1a38c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a390:	add	x0, x0, #0x638
   1a394:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1a398:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a39c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a3a0:	ldr	x0, [x0, #4000]
   1a3a4:	ldr	x0, [x0]
   1a3a8:	cbz	x0, 1a40c <__sanitizer_set_report_fd@@Base+0x405c>
   1a3ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a3b0:	ldr	x0, [x0, #4000]
   1a3b4:	ldr	x0, [x0]
   1a3b8:	sub	x1, x0, #0x1
   1a3bc:	tst	x1, x0
   1a3c0:	b.ne	1a420 <__sanitizer_set_report_fd@@Base+0x4070>  // b.any
   1a3c4:	add	x21, x0, #0xfff
   1a3c8:	neg	x0, x0
   1a3cc:	and	x21, x21, x0
   1a3d0:	mov	w2, #0x0                   	// #0
   1a3d4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a3d8:	add	x1, x1, #0x650
   1a3dc:	mov	x0, x21
   1a3e0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1a3e4:	mov	x23, x0
   1a3e8:	ldr	x2, [sp, #144]
   1a3ec:	ldr	x1, [sp, #128]
   1a3f0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1a3f4:	ldr	x1, [sp, #136]
   1a3f8:	ldr	x0, [sp, #128]
   1a3fc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1a400:	str	x23, [sp, #128]
   1a404:	str	x21, [sp, #136]
   1a408:	b	1a2f4 <__sanitizer_set_report_fd@@Base+0x3f44>
   1a40c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1a410:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a414:	ldr	x1, [x1, #4000]
   1a418:	str	x0, [x1]
   1a41c:	b	1a3ac <__sanitizer_set_report_fd@@Base+0x3ffc>
   1a420:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a424:	add	x0, x0, #0x638
   1a428:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1a42c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a430:	strb	wzr, [x22, #8]
   1a434:	ldr	x1, [sp, #144]
   1a438:	ldr	x0, [sp, #128]
   1a43c:	bl	12d0c <__sancov_default_options@@Base+0x2988>
   1a440:	b	1a344 <__sanitizer_set_report_fd@@Base+0x3f94>
   1a444:	mov	x4, #0x0                   	// #0
   1a448:	mov	x3, #0x0                   	// #0
   1a44c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a450:	add	x2, x2, #0x508
   1a454:	mov	w1, #0x1b6                 	// #438
   1a458:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a45c:	add	x0, x0, #0x520
   1a460:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a464:	str	xzr, [sp, #56]
   1a468:	str	xzr, [sp, #64]
   1a46c:	str	xzr, [sp, #72]
   1a470:	str	wzr, [sp, #80]
   1a474:	strb	wzr, [sp, #100]
   1a478:	add	x21, sp, #0x38
   1a47c:	mov	x2, #0x10                  	// #16
   1a480:	mov	w1, #0x0                   	// #0
   1a484:	add	x0, sp, #0x54
   1a488:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1a48c:	str	xzr, [sp, #120]
   1a490:	str	xzr, [sp, #112]
   1a494:	str	xzr, [sp, #104]
   1a498:	ldr	x2, [x20]
   1a49c:	ldr	x1, [sp, #128]
   1a4a0:	mov	x0, x21
   1a4a4:	bl	12880 <__sancov_default_options@@Base+0x24fc>
   1a4a8:	ldrh	w0, [x20, #24]
   1a4ac:	cbz	w0, 1a514 <__sanitizer_set_report_fd@@Base+0x4164>
   1a4b0:	mov	w21, #0x0                   	// #0
   1a4b4:	add	x23, sp, #0x38
   1a4b8:	b	1a4fc <__sanitizer_set_report_fd@@Base+0x414c>
   1a4bc:	ldr	x1, [x20]
   1a4c0:	ldr	x0, [x2, #16]
   1a4c4:	add	x1, x1, x0
   1a4c8:	ldr	w3, [x2, #4]
   1a4cc:	ldr	x2, [x2, #40]
   1a4d0:	mov	x5, #0x0                   	// #0
   1a4d4:	ubfx	x4, x3, #1, #1
   1a4d8:	and	w3, w3, #0x1
   1a4dc:	add	x2, x1, x2
   1a4e0:	mov	x0, x23
   1a4e4:	bl	128fc <__sancov_default_options@@Base+0x2578>
   1a4e8:	add	w21, w21, #0x1
   1a4ec:	add	x19, x19, #0x38
   1a4f0:	ldrh	w0, [x20, #24]
   1a4f4:	cmp	w0, w21
   1a4f8:	b.le	1a514 <__sanitizer_set_report_fd@@Base+0x4164>
   1a4fc:	ldr	x0, [x20, #16]
   1a500:	add	x2, x0, x19
   1a504:	ldr	w0, [x0, x19]
   1a508:	cmp	w0, #0x1
   1a50c:	b.ne	1a4e8 <__sanitizer_set_report_fd@@Base+0x4138>  // b.any
   1a510:	b	1a4bc <__sanitizer_set_report_fd@@Base+0x410c>
   1a514:	ldr	x19, [x22]
   1a518:	ldr	x3, [x19, #16]
   1a51c:	ldr	x0, [x19, #8]
   1a520:	mov	x1, #0xe38f                	// #58255
   1a524:	movk	x1, #0x8e38, lsl #16
   1a528:	movk	x1, #0x38e3, lsl #32
   1a52c:	movk	x1, #0xe38e, lsl #48
   1a530:	umulh	x0, x0, x1
   1a534:	lsr	x4, x0, #6
   1a538:	cmp	x3, x0, lsr #6
   1a53c:	b.hi	1a570 <__sanitizer_set_report_fd@@Base+0x41c0>  // b.pmore
   1a540:	cmp	x3, x4
   1a544:	b.eq	1a588 <__sanitizer_set_report_fd@@Base+0x41d8>  // b.none
   1a548:	ldr	x3, [x19]
   1a54c:	ldr	x1, [x19, #16]
   1a550:	add	x0, x1, #0x1
   1a554:	str	x0, [x19, #16]
   1a558:	add	x0, x1, x1, lsl #3
   1a55c:	mov	x2, #0x48                  	// #72
   1a560:	add	x1, sp, #0x38
   1a564:	add	x0, x3, x0, lsl #3
   1a568:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1a56c:	b	1a358 <__sanitizer_set_report_fd@@Base+0x3fa8>
   1a570:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a574:	add	x2, x2, #0x5b0
   1a578:	mov	w1, #0x1be                 	// #446
   1a57c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a580:	add	x0, x0, #0x520
   1a584:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a588:	add	x0, x3, #0x1
   1a58c:	tst	x3, x0
   1a590:	b.eq	1a6a0 <__sanitizer_set_report_fd@@Base+0x42f0>  // b.none
   1a594:	clz	x2, x0
   1a598:	mov	w1, #0x3f                  	// #63
   1a59c:	sub	w1, w1, w2
   1a5a0:	add	w2, w1, #0x1
   1a5a4:	mov	x4, #0x1                   	// #1
   1a5a8:	lsl	x4, x4, x2
   1a5ac:	cmp	x0, x4
   1a5b0:	b.cs	1a64c <__sanitizer_set_report_fd@@Base+0x429c>  // b.hs, b.nlast
   1a5b4:	mov	x2, #0x1                   	// #1
   1a5b8:	lsl	x1, x2, x1
   1a5bc:	cmp	x0, x1
   1a5c0:	b.ls	1a668 <__sanitizer_set_report_fd@@Base+0x42b8>  // b.plast
   1a5c4:	cmp	x3, x4
   1a5c8:	b.hi	1a688 <__sanitizer_set_report_fd@@Base+0x42d8>  // b.pmore
   1a5cc:	add	x4, x4, x4, lsl #3
   1a5d0:	lsl	x20, x4, #3
   1a5d4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a5d8:	ldr	x0, [x0, #4000]
   1a5dc:	ldr	x0, [x0]
   1a5e0:	cbz	x0, 1a6a8 <__sanitizer_set_report_fd@@Base+0x42f8>
   1a5e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a5e8:	ldr	x0, [x0, #4000]
   1a5ec:	ldr	x0, [x0]
   1a5f0:	sub	x1, x0, #0x1
   1a5f4:	tst	x0, x1
   1a5f8:	b.ne	1a6bc <__sanitizer_set_report_fd@@Base+0x430c>  // b.any
   1a5fc:	add	x20, x20, x1
   1a600:	neg	x0, x0
   1a604:	and	x20, x20, x0
   1a608:	mov	w2, #0x0                   	// #0
   1a60c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a610:	add	x1, x1, #0x650
   1a614:	mov	x0, x20
   1a618:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1a61c:	mov	x21, x0
   1a620:	ldr	x1, [x19, #16]
   1a624:	add	x1, x1, x1, lsl #3
   1a628:	lsl	x2, x1, #3
   1a62c:	ldr	x1, [x19]
   1a630:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1a634:	ldr	x1, [x19, #8]
   1a638:	ldr	x0, [x19]
   1a63c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1a640:	str	x21, [x19]
   1a644:	str	x20, [x19, #8]
   1a648:	b	1a548 <__sanitizer_set_report_fd@@Base+0x4198>
   1a64c:	mov	x3, x0
   1a650:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a654:	add	x2, x2, #0x5d0
   1a658:	mov	w1, #0x17b                 	// #379
   1a65c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a660:	add	x0, x0, #0x520
   1a664:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a668:	mov	x4, x1
   1a66c:	mov	x3, x0
   1a670:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a674:	add	x2, x2, #0x5f8
   1a678:	mov	w1, #0x17c                 	// #380
   1a67c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a680:	add	x0, x0, #0x520
   1a684:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a688:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a68c:	add	x2, x2, #0x618
   1a690:	mov	w1, #0x1fd                 	// #509
   1a694:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a698:	add	x0, x0, #0x520
   1a69c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a6a0:	mov	x4, x0
   1a6a4:	b	1a5cc <__sanitizer_set_report_fd@@Base+0x421c>
   1a6a8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1a6ac:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a6b0:	ldr	x1, [x1, #4000]
   1a6b4:	str	x0, [x1]
   1a6b8:	b	1a5e4 <__sanitizer_set_report_fd@@Base+0x4234>
   1a6bc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a6c0:	add	x0, x0, #0x638
   1a6c4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1a6c8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1a6cc:	str	x30, [sp, #-16]!
   1a6d0:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a6d4:	ldr	x3, [x3, #3496]
   1a6d8:	cbz	x3, 1a6e8 <__sanitizer_set_report_fd@@Base+0x4338>
   1a6dc:	bl	fcb0 <_ZdaPvmSt11align_val_t@@Base+0x60>
   1a6e0:	ldr	x30, [sp], #16
   1a6e4:	ret
   1a6e8:	bl	6b00 <sigaction@plt>
   1a6ec:	b	1a6e0 <__sanitizer_set_report_fd@@Base+0x4330>
   1a6f0:	stp	x19, x20, [sp, #-272]!
   1a6f4:	str	x30, [sp, #48]
   1a6f8:	cbz	x1, 1a754 <__sanitizer_set_report_fd@@Base+0x43a4>
   1a6fc:	stp	x21, x22, [sp, #16]
   1a700:	and	w0, w0, #0xff
   1a704:	mov	x20, x1
   1a708:	mov	x21, x2
   1a70c:	cbz	x2, 1a77c <__sanitizer_set_report_fd@@Base+0x43cc>
   1a710:	cbz	w0, 1a820 <__sanitizer_set_report_fd@@Base+0x4470>
   1a714:	stp	x23, x24, [sp, #32]
   1a718:	add	x1, sp, #0x40
   1a71c:	mov	w0, #0x3                   	// #3
   1a720:	bl	6cb0 <getrlimit@plt>
   1a724:	sxtw	x19, w0
   1a728:	cbnz	w0, 1a7a0 <__sanitizer_set_report_fd@@Base+0x43f0>
   1a72c:	mov	w1, #0x1                   	// #1
   1a730:	add	x0, sp, #0x50
   1a734:	bl	1dd70 <OnPrint@@Base+0x840>
   1a738:	str	xzr, [sp, #136]
   1a73c:	str	xzr, [sp, #144]
   1a740:	str	xzr, [sp, #184]
   1a744:	add	x23, sp, #0x70
   1a748:	add	x22, sp, #0x50
   1a74c:	add	x24, sp, #0x40
   1a750:	b	1a7c4 <__sanitizer_set_report_fd@@Base+0x4414>
   1a754:	stp	x21, x22, [sp, #16]
   1a758:	stp	x23, x24, [sp, #32]
   1a75c:	mov	x4, #0x0                   	// #0
   1a760:	mov	x3, #0x0                   	// #0
   1a764:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a768:	add	x2, x2, #0xcf0
   1a76c:	mov	w1, #0x5b                  	// #91
   1a770:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a774:	add	x0, x0, #0xd08
   1a778:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a77c:	stp	x23, x24, [sp, #32]
   1a780:	mov	x4, #0x0                   	// #0
   1a784:	mov	x3, #0x0                   	// #0
   1a788:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a78c:	add	x2, x2, #0xd50
   1a790:	mov	w1, #0x5c                  	// #92
   1a794:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a798:	add	x0, x0, #0xd08
   1a79c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a7a0:	mov	x4, #0x0                   	// #0
   1a7a4:	mov	x3, x19
   1a7a8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a7ac:	add	x2, x2, #0xd68
   1a7b0:	mov	w1, #0x60                  	// #96
   1a7b4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a7b8:	add	x0, x0, #0xd08
   1a7bc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a7c0:	mov	x19, x0
   1a7c4:	mov	x1, x23
   1a7c8:	mov	x0, x22
   1a7cc:	bl	1e3b4 <OnPrint@@Base+0xe84>
   1a7d0:	and	w0, w0, #0xff
   1a7d4:	cbz	w0, 1a7e4 <__sanitizer_set_report_fd@@Base+0x4434>
   1a7d8:	ldr	x0, [sp, #120]
   1a7dc:	cmp	x24, x0
   1a7e0:	b.cs	1a7c0 <__sanitizer_set_report_fd@@Base+0x4410>  // b.hs, b.nlast
   1a7e4:	add	x1, sp, #0x40
   1a7e8:	ldr	x0, [sp, #112]
   1a7ec:	cmp	x1, x0
   1a7f0:	b.cc	1a800 <__sanitizer_set_report_fd@@Base+0x4450>  // b.lo, b.ul, b.last
   1a7f4:	ldr	x0, [sp, #120]
   1a7f8:	cmp	x1, x0
   1a7fc:	b.cc	1a8a8 <__sanitizer_set_report_fd@@Base+0x44f8>  // b.lo, b.ul, b.last
   1a800:	mov	x4, #0x0                   	// #0
   1a804:	mov	x3, #0x0                   	// #0
   1a808:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a80c:	add	x2, x2, #0xdd0
   1a810:	mov	w1, #0x6a                  	// #106
   1a814:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a818:	add	x0, x0, #0xd08
   1a81c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a820:	str	xzr, [sp, #264]
   1a824:	str	xzr, [sp, #256]
   1a828:	add	x19, sp, #0xc0
   1a82c:	mov	x0, x19
   1a830:	bl	6800 <pthread_attr_init@plt>
   1a834:	bl	6c50 <pthread_self@plt>
   1a838:	mov	x1, x19
   1a83c:	bl	67a0 <pthread_getattr_np@plt>
   1a840:	sxtw	x3, w0
   1a844:	cbnz	w0, 1a888 <__sanitizer_set_report_fd@@Base+0x44d8>
   1a848:	add	x19, sp, #0xc0
   1a84c:	add	x2, sp, #0x108
   1a850:	add	x1, sp, #0x100
   1a854:	mov	x0, x19
   1a858:	bl	1c7e4 <__sanitizer_set_report_fd@@Base+0x6434>
   1a85c:	mov	x0, x19
   1a860:	bl	68f0 <pthread_attr_destroy@plt>
   1a864:	ldr	x1, [sp, #256]
   1a868:	ldr	x0, [sp, #264]
   1a86c:	add	x0, x0, x1
   1a870:	str	x0, [x20]
   1a874:	str	x1, [x21]
   1a878:	ldp	x21, x22, [sp, #16]
   1a87c:	ldr	x30, [sp, #48]
   1a880:	ldp	x19, x20, [sp], #272
   1a884:	ret
   1a888:	stp	x23, x24, [sp, #32]
   1a88c:	mov	x4, #0x0                   	// #0
   1a890:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a894:	add	x2, x2, #0xd98
   1a898:	mov	w1, #0x88                  	// #136
   1a89c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a8a0:	add	x0, x0, #0xd08
   1a8a4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a8a8:	ldr	x1, [sp, #64]
   1a8ac:	mov	x2, #0x40000000            	// #1073741824
   1a8b0:	cmp	x1, x2
   1a8b4:	csel	x1, x1, x2, ls  // ls = plast
   1a8b8:	str	x0, [x20]
   1a8bc:	sub	x19, x0, x19
   1a8c0:	cmp	x19, x1
   1a8c4:	csel	x19, x19, x1, ls  // ls = plast
   1a8c8:	sub	x19, x0, x19
   1a8cc:	str	x19, [x21]
   1a8d0:	add	x0, sp, #0x50
   1a8d4:	bl	1dc24 <OnPrint@@Base+0x6f4>
   1a8d8:	ldp	x23, x24, [sp, #32]
   1a8dc:	b	1a878 <__sanitizer_set_report_fd@@Base+0x44c8>
   1a8e0:	stp	x19, x20, [sp, #-48]!
   1a8e4:	str	x30, [sp, #16]
   1a8e8:	mov	x19, x0
   1a8ec:	mov	x20, x1
   1a8f0:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a8f4:	add	x1, x1, #0xe18
   1a8f8:	mov	x0, #0xffffffffffffffff    	// #-1
   1a8fc:	bl	6830 <dlsym@plt>
   1a900:	str	x0, [sp, #40]
   1a904:	cbz	x0, 1a940 <__sanitizer_set_report_fd@@Base+0x4590>
   1a908:	mov	x2, #0x8                   	// #8
   1a90c:	add	x1, sp, #0x28
   1a910:	add	x0, sp, #0x20
   1a914:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1a918:	mov	w2, #0x1                   	// #1
   1a91c:	mov	x1, x20
   1a920:	mov	x0, x19
   1a924:	ldr	x3, [sp, #32]
   1a928:	blr	x3
   1a92c:	cmp	w0, #0x0
   1a930:	cset	w0, eq  // eq = none
   1a934:	ldr	x30, [sp, #16]
   1a938:	ldp	x19, x20, [sp], #48
   1a93c:	ret
   1a940:	mov	w0, #0x0                   	// #0
   1a944:	b	1a934 <__sanitizer_set_report_fd@@Base+0x4584>
   1a948:	str	x30, [sp, #-48]!
   1a94c:	adrp	x1, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a950:	add	x1, x1, #0xe20
   1a954:	mov	x0, #0xffffffffffffffff    	// #-1
   1a958:	bl	6830 <dlsym@plt>
   1a95c:	str	xzr, [sp, #40]
   1a960:	str	xzr, [sp, #32]
   1a964:	str	x0, [sp, #16]
   1a968:	mov	x2, #0x8                   	// #8
   1a96c:	add	x1, sp, #0x10
   1a970:	add	x0, sp, #0x18
   1a974:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1a978:	ldr	x2, [sp, #24]
   1a97c:	cbz	x2, 1a9c0 <__sanitizer_set_report_fd@@Base+0x4610>
   1a980:	add	x1, sp, #0x20
   1a984:	add	x0, sp, #0x28
   1a988:	blr	x2
   1a98c:	ldr	x1, [sp, #32]
   1a990:	cmp	x1, #0xf
   1a994:	b.hi	1a9e0 <__sanitizer_set_report_fd@@Base+0x4630>  // b.pmore
   1a998:	ldr	x0, [sp, #40]
   1a99c:	mov	x1, #0x10                  	// #16
   1a9a0:	add	x0, x0, x1
   1a9a4:	sub	x0, x0, #0x1
   1a9a8:	neg	x1, x1
   1a9ac:	and	x0, x0, x1
   1a9b0:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1a9b4:	str	x0, [x1, #3224]
   1a9b8:	ldr	x30, [sp], #48
   1a9bc:	ret
   1a9c0:	mov	x4, #0x0                   	// #0
   1a9c4:	mov	x3, #0x0                   	// #0
   1a9c8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a9cc:	add	x2, x2, #0xe38
   1a9d0:	mov	w1, #0xd4                  	// #212
   1a9d4:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1a9d8:	add	x0, x0, #0xd08
   1a9dc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1a9e0:	sub	x0, x1, #0x1
   1a9e4:	tst	x0, x1
   1a9e8:	b.ne	1a9f4 <__sanitizer_set_report_fd@@Base+0x4644>  // b.any
   1a9ec:	ldr	x0, [sp, #40]
   1a9f0:	b	1a9a0 <__sanitizer_set_report_fd@@Base+0x45f0>
   1a9f4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1a9f8:	add	x0, x0, #0x638
   1a9fc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1aa00:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1aa04:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1aa08:	add	x0, x0, #0xc98
   1aa0c:	ldr	x0, [x0, #8]
   1aa10:	cbnz	x0, 1aa24 <__sanitizer_set_report_fd@@Base+0x4674>
   1aa14:	mov	x0, #0x6f0                 	// #1776
   1aa18:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1aa1c:	add	x1, x1, #0xc98
   1aa20:	str	x0, [x1, #8]
   1aa24:	ret
   1aa28:	mov	x0, #0x10                  	// #16
   1aa2c:	ret
   1aa30:	str	x30, [sp, #-16]!
   1aa34:	bl	1aa04 <__sanitizer_set_report_fd@@Base+0x4654>
   1aa38:	mrs	x1, tpidr_el0
   1aa3c:	sub	x0, x1, x0
   1aa40:	ldr	x30, [sp], #16
   1aa44:	ret
   1aa48:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1aa4c:	ldr	x0, [x0, #3224]
   1aa50:	ret
   1aa54:	stp	x19, x20, [sp, #-64]!
   1aa58:	stp	x21, x22, [sp, #16]
   1aa5c:	stp	x23, x30, [sp, #32]
   1aa60:	and	w23, w0, #0xff
   1aa64:	mov	x20, x1
   1aa68:	mov	x22, x2
   1aa6c:	mov	x19, x3
   1aa70:	mov	x21, x4
   1aa74:	bl	1aa30 <__sanitizer_set_report_fd@@Base+0x4680>
   1aa78:	str	x0, [x19]
   1aa7c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1aa80:	ldr	x0, [x0, #3224]
   1aa84:	str	x0, [x21]
   1aa88:	add	x2, sp, #0x30
   1aa8c:	add	x1, sp, #0x38
   1aa90:	mov	w0, w23
   1aa94:	bl	1a6f0 <__sanitizer_set_report_fd@@Base+0x4340>
   1aa98:	ldr	x1, [sp, #48]
   1aa9c:	str	x1, [x20]
   1aaa0:	ldr	x0, [sp, #56]
   1aaa4:	sub	x0, x0, x1
   1aaa8:	str	x0, [x22]
   1aaac:	cbnz	w23, 1aaf8 <__sanitizer_set_report_fd@@Base+0x4748>
   1aab0:	ldr	x3, [x19]
   1aab4:	ldr	x4, [x20]
   1aab8:	cmp	x3, x4
   1aabc:	b.ls	1aaf8 <__sanitizer_set_report_fd@@Base+0x4748>  // b.plast
   1aac0:	add	x1, x0, x4
   1aac4:	cmp	x3, x1
   1aac8:	b.cs	1aaf8 <__sanitizer_set_report_fd@@Base+0x4748>  // b.hs, b.nlast
   1aacc:	ldr	x2, [x21]
   1aad0:	add	x3, x3, x2
   1aad4:	cmp	x4, x3
   1aad8:	b.cs	1ab08 <__sanitizer_set_report_fd@@Base+0x4758>  // b.hs, b.nlast
   1aadc:	cmp	x1, x3
   1aae0:	b.cc	1ab20 <__sanitizer_set_report_fd@@Base+0x4770>  // b.lo, b.ul, b.last
   1aae4:	sub	x0, x0, x2
   1aae8:	str	x0, [x22]
   1aaec:	ldr	x1, [x20]
   1aaf0:	add	x0, x1, x0
   1aaf4:	str	x0, [x19]
   1aaf8:	ldp	x21, x22, [sp, #16]
   1aafc:	ldp	x23, x30, [sp, #32]
   1ab00:	ldp	x19, x20, [sp], #64
   1ab04:	ret
   1ab08:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1ab0c:	add	x2, x2, #0xe50
   1ab10:	mov	w1, #0x203                 	// #515
   1ab14:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1ab18:	add	x0, x0, #0xd08
   1ab1c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ab20:	mov	x4, x1
   1ab24:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1ab28:	add	x2, x2, #0xe80
   1ab2c:	mov	w1, #0x204                 	// #516
   1ab30:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1ab34:	add	x0, x0, #0xd08
   1ab38:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ab3c:	stp	x19, x20, [sp, #-48]!
   1ab40:	stp	x21, x30, [sp, #16]
   1ab44:	mov	x19, x0
   1ab48:	ldrb	w0, [x0, #24]
   1ab4c:	cbz	w0, 1abb8 <__sanitizer_set_report_fd@@Base+0x4808>
   1ab50:	ldr	x20, [x19]
   1ab54:	ldr	x21, [x19, #16]
   1ab58:	add	x21, x21, x21, lsl #3
   1ab5c:	add	x21, x20, x21, lsl #3
   1ab60:	cmp	x20, x21
   1ab64:	b.eq	1ab7c <__sanitizer_set_report_fd@@Base+0x47cc>  // b.none
   1ab68:	mov	x0, x20
   1ab6c:	bl	12808 <__sancov_default_options@@Base+0x2484>
   1ab70:	add	x20, x20, #0x48
   1ab74:	cmp	x21, x20
   1ab78:	b.ne	1ab68 <__sanitizer_set_report_fd@@Base+0x47b8>  // b.any
   1ab7c:	str	xzr, [x19, #16]
   1ab80:	mov	w0, #0x1                   	// #1
   1ab84:	strb	w0, [x19, #24]
   1ab88:	stur	wzr, [sp, #41]
   1ab8c:	sturh	wzr, [sp, #45]
   1ab90:	strb	wzr, [sp, #47]
   1ab94:	strb	w0, [sp, #40]
   1ab98:	str	x19, [sp, #32]
   1ab9c:	add	x1, sp, #0x20
   1aba0:	adrp	x0, 1a000 <__sanitizer_set_report_fd@@Base+0x3c50>
   1aba4:	add	x0, x0, #0x254
   1aba8:	bl	6950 <dl_iterate_phdr@plt>
   1abac:	ldp	x21, x30, [sp, #16]
   1abb0:	ldp	x19, x20, [sp], #48
   1abb4:	ret
   1abb8:	str	xzr, [x19, #8]
   1abbc:	str	xzr, [x19, #16]
   1abc0:	str	xzr, [x19]
   1abc4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1abc8:	ldr	x0, [x0, #4000]
   1abcc:	ldr	x0, [x0]
   1abd0:	cbz	x0, 1ac40 <__sanitizer_set_report_fd@@Base+0x4890>
   1abd4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1abd8:	ldr	x0, [x0, #4000]
   1abdc:	ldr	x1, [x0]
   1abe0:	sub	x0, x1, #0x1
   1abe4:	tst	x0, x1
   1abe8:	b.ne	1ac54 <__sanitizer_set_report_fd@@Base+0x48a4>  // b.any
   1abec:	add	x20, x1, #0x11f, lsl #12
   1abf0:	add	x20, x20, #0xfff
   1abf4:	neg	x1, x1
   1abf8:	and	x20, x20, x1
   1abfc:	mov	w2, #0x0                   	// #0
   1ac00:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ac04:	add	x1, x1, #0x650
   1ac08:	mov	x0, x20
   1ac0c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1ac10:	mov	x21, x0
   1ac14:	ldr	x2, [x19, #16]
   1ac18:	add	x2, x2, x2, lsl #3
   1ac1c:	lsl	x2, x2, #3
   1ac20:	ldr	x1, [x19]
   1ac24:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1ac28:	ldr	x1, [x19, #8]
   1ac2c:	ldr	x0, [x19]
   1ac30:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1ac34:	str	x21, [x19]
   1ac38:	str	x20, [x19, #8]
   1ac3c:	b	1ab80 <__sanitizer_set_report_fd@@Base+0x47d0>
   1ac40:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1ac44:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ac48:	ldr	x1, [x1, #4000]
   1ac4c:	str	x0, [x1]
   1ac50:	b	1abd4 <__sanitizer_set_report_fd@@Base+0x4824>
   1ac54:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ac58:	add	x0, x0, #0x638
   1ac5c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ac60:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ac64:	stp	x19, x20, [sp, #-32]!
   1ac68:	stp	x21, x30, [sp, #16]
   1ac6c:	mov	x20, x0
   1ac70:	ldrb	w0, [x0, #24]
   1ac74:	cbz	w0, 1acc4 <__sanitizer_set_report_fd@@Base+0x4914>
   1ac78:	ldr	x19, [x20]
   1ac7c:	ldr	x21, [x20, #16]
   1ac80:	add	x21, x21, x21, lsl #3
   1ac84:	add	x21, x19, x21, lsl #3
   1ac88:	cmp	x19, x21
   1ac8c:	b.eq	1aca4 <__sanitizer_set_report_fd@@Base+0x48f4>  // b.none
   1ac90:	mov	x0, x19
   1ac94:	bl	12808 <__sancov_default_options@@Base+0x2484>
   1ac98:	add	x19, x19, #0x48
   1ac9c:	cmp	x21, x19
   1aca0:	b.ne	1ac90 <__sanitizer_set_report_fd@@Base+0x48e0>  // b.any
   1aca4:	str	xzr, [x20, #16]
   1aca8:	mov	w0, #0x1                   	// #1
   1acac:	strb	w0, [x20, #24]
   1acb0:	mov	x0, x20
   1acb4:	bl	1a1ec <__sanitizer_set_report_fd@@Base+0x3e3c>
   1acb8:	ldp	x21, x30, [sp, #16]
   1acbc:	ldp	x19, x20, [sp], #32
   1acc0:	ret
   1acc4:	str	xzr, [x20, #8]
   1acc8:	str	xzr, [x20, #16]
   1accc:	str	xzr, [x20]
   1acd0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1acd4:	ldr	x0, [x0, #4000]
   1acd8:	ldr	x0, [x0]
   1acdc:	cbz	x0, 1ad4c <__sanitizer_set_report_fd@@Base+0x499c>
   1ace0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ace4:	ldr	x0, [x0, #4000]
   1ace8:	ldr	x0, [x0]
   1acec:	sub	x1, x0, #0x1
   1acf0:	tst	x1, x0
   1acf4:	b.ne	1ad60 <__sanitizer_set_report_fd@@Base+0x49b0>  // b.any
   1acf8:	add	x19, x0, #0x11f, lsl #12
   1acfc:	add	x19, x19, #0xfff
   1ad00:	neg	x0, x0
   1ad04:	and	x19, x19, x0
   1ad08:	mov	w2, #0x0                   	// #0
   1ad0c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ad10:	add	x1, x1, #0x650
   1ad14:	mov	x0, x19
   1ad18:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1ad1c:	mov	x21, x0
   1ad20:	ldr	x1, [x20, #16]
   1ad24:	add	x1, x1, x1, lsl #3
   1ad28:	lsl	x2, x1, #3
   1ad2c:	ldr	x1, [x20]
   1ad30:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1ad34:	ldr	x1, [x20, #8]
   1ad38:	ldr	x0, [x20]
   1ad3c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1ad40:	str	x21, [x20]
   1ad44:	str	x19, [x20, #8]
   1ad48:	b	1aca8 <__sanitizer_set_report_fd@@Base+0x48f8>
   1ad4c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1ad50:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ad54:	ldr	x1, [x1, #4000]
   1ad58:	str	x0, [x1]
   1ad5c:	b	1ace0 <__sanitizer_set_report_fd@@Base+0x4930>
   1ad60:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ad64:	add	x0, x0, #0x638
   1ad68:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ad6c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ad70:	stp	x19, x20, [sp, #-96]!
   1ad74:	str	x30, [sp, #16]
   1ad78:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ad7c:	ldr	x0, [x0, #4040]
   1ad80:	ldrb	w0, [x0, #160]
   1ad84:	cbnz	w0, 1ad98 <__sanitizer_set_report_fd@@Base+0x49e8>
   1ad88:	bl	1a228 <__sanitizer_set_report_fd@@Base+0x3e78>
   1ad8c:	ldr	x30, [sp, #16]
   1ad90:	ldp	x19, x20, [sp], #96
   1ad94:	ret
   1ad98:	mov	x2, #0x0                   	// #0
   1ad9c:	mov	w1, #0x0                   	// #0
   1ada0:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1ada4:	add	x0, x0, #0xeb8
   1ada8:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x51b0>
   1adac:	mov	w19, w0
   1adb0:	cmn	w0, #0x1
   1adb4:	b.eq	1aea0 <__sanitizer_set_report_fd@@Base+0x4af0>  // b.none
   1adb8:	mov	x2, #0x3f                  	// #63
   1adbc:	add	x1, sp, #0x20
   1adc0:	bl	18a74 <__sanitizer_set_report_fd@@Base+0x26c4>
   1adc4:	mov	x20, x0
   1adc8:	mov	w0, w19
   1adcc:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1add0:	mov	x0, #0x0                   	// #0
   1add4:	cmp	x20, #0x0
   1add8:	b.le	1ad8c <__sanitizer_set_report_fd@@Base+0x49dc>
   1addc:	add	x0, sp, #0x20
   1ade0:	strb	wzr, [x0, x20]
   1ade4:	ldrb	w0, [sp, #32]
   1ade8:	sub	w0, w0, #0x30
   1adec:	and	w0, w0, #0xff
   1adf0:	cmp	w0, #0x9
   1adf4:	b.hi	1aecc <__sanitizer_set_report_fd@@Base+0x4b1c>  // b.pmore
   1adf8:	add	x1, sp, #0x20
   1adfc:	ldrb	w0, [x1, #1]!
   1ae00:	sub	w0, w0, #0x30
   1ae04:	and	w0, w0, #0xff
   1ae08:	cmp	w0, #0x9
   1ae0c:	b.ls	1adfc <__sanitizer_set_report_fd@@Base+0x4a4c>  // b.plast
   1ae10:	ldrb	w2, [x1]
   1ae14:	sub	w0, w2, #0x30
   1ae18:	and	w0, w0, #0xff
   1ae1c:	cmp	w2, #0x0
   1ae20:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   1ae24:	b.ls	1aeb0 <__sanitizer_set_report_fd@@Base+0x4b00>  // b.plast
   1ae28:	ldrb	w2, [x1, #1]!
   1ae2c:	sub	w0, w2, #0x30
   1ae30:	and	w0, w0, #0xff
   1ae34:	cmp	w2, #0x0
   1ae38:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   1ae3c:	b.hi	1ae28 <__sanitizer_set_report_fd@@Base+0x4a78>  // b.pmore
   1ae40:	ldrb	w2, [x1]
   1ae44:	sub	w0, w2, #0x30
   1ae48:	and	w0, w0, #0xff
   1ae4c:	cmp	w0, #0x9
   1ae50:	b.hi	1aea8 <__sanitizer_set_report_fd@@Base+0x4af8>  // b.pmore
   1ae54:	mov	x19, #0x0                   	// #0
   1ae58:	add	x19, x19, x19, lsl #2
   1ae5c:	and	x2, x2, #0xff
   1ae60:	add	x2, x2, x19, lsl #1
   1ae64:	sub	x19, x2, #0x30
   1ae68:	ldrb	w2, [x1, #1]!
   1ae6c:	sub	w0, w2, #0x30
   1ae70:	and	w0, w0, #0xff
   1ae74:	cmp	w0, #0x9
   1ae78:	b.ls	1ae58 <__sanitizer_set_report_fd@@Base+0x4aa8>  // b.plast
   1ae7c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ae80:	ldr	x0, [x0, #4000]
   1ae84:	ldr	x0, [x0]
   1ae88:	cbz	x0, 1aeb8 <__sanitizer_set_report_fd@@Base+0x4b08>
   1ae8c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ae90:	ldr	x0, [x0, #4000]
   1ae94:	ldr	x0, [x0]
   1ae98:	mul	x0, x19, x0
   1ae9c:	b	1ad8c <__sanitizer_set_report_fd@@Base+0x49dc>
   1aea0:	bl	1a228 <__sanitizer_set_report_fd@@Base+0x3e78>
   1aea4:	b	1ad8c <__sanitizer_set_report_fd@@Base+0x49dc>
   1aea8:	mov	x19, #0x0                   	// #0
   1aeac:	b	1ae7c <__sanitizer_set_report_fd@@Base+0x4acc>
   1aeb0:	mov	x19, #0x0                   	// #0
   1aeb4:	b	1ae7c <__sanitizer_set_report_fd@@Base+0x4acc>
   1aeb8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1aebc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1aec0:	ldr	x1, [x1, #4000]
   1aec4:	str	x0, [x1]
   1aec8:	b	1ae8c <__sanitizer_set_report_fd@@Base+0x4adc>
   1aecc:	add	x1, sp, #0x20
   1aed0:	b	1ae10 <__sanitizer_set_report_fd@@Base+0x4a60>
   1aed4:	str	x30, [sp, #-144]!
   1aed8:	add	x2, sp, #0x10
   1aedc:	mov	x1, #0x80                  	// #128
   1aee0:	mov	w0, #0x0                   	// #0
   1aee4:	bl	66e0 <sched_getaffinity@plt>
   1aee8:	cbnz	w0, 1af00 <__sanitizer_set_report_fd@@Base+0x4b50>
   1aeec:	add	x1, sp, #0x10
   1aef0:	mov	x0, #0x80                  	// #128
   1aef4:	bl	6aa0 <__sched_cpucount@plt>
   1aef8:	ldr	x30, [sp], #144
   1aefc:	ret
   1af00:	sxtw	x3, w0
   1af04:	mov	x4, #0x0                   	// #0
   1af08:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1af0c:	add	x2, x2, #0xed0
   1af10:	mov	w1, #0x2bb                 	// #699
   1af14:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1af18:	add	x0, x0, #0xd08
   1af1c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1af20:	ret
   1af24:	str	x30, [sp, #-16]!
   1af28:	mov	x2, x0
   1af2c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1af30:	add	x1, x1, #0xd50
   1af34:	mov	w0, #0x6                   	// #6
   1af38:	bl	6af0 <syslog@plt>
   1af3c:	ldr	x30, [sp], #16
   1af40:	ret
   1af44:	ret
   1af48:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1af4c:	ldr	x1, [x1, #4040]
   1af50:	ldrb	w1, [x1, #49]
   1af54:	cbz	w1, 1af68 <__sanitizer_set_report_fd@@Base+0x4bb8>
   1af58:	str	x30, [sp, #-16]!
   1af5c:	bl	13310 <__sanitizer_install_malloc_and_free_hooks@@Base+0x29c>
   1af60:	ldr	x30, [sp], #16
   1af64:	ret
   1af68:	ret
   1af6c:	str	x30, [sp, #-32]!
   1af70:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1af74:	ldr	x0, [x0, #3976]
   1af78:	cbz	x0, 1af94 <__sanitizer_set_report_fd@@Base+0x4be4>
   1af7c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1af80:	ldr	x0, [x0, #3976]
   1af84:	ldr	x0, [x0]
   1af88:	cbz	x0, 1af94 <__sanitizer_set_report_fd@@Base+0x4be4>
   1af8c:	ldrb	w0, [x0]
   1af90:	cbnz	w0, 1afbc <__sanitizer_set_report_fd@@Base+0x4c0c>
   1af94:	add	x1, sp, #0x10
   1af98:	mov	w0, #0x1                   	// #1
   1af9c:	bl	18ce4 <__sanitizer_set_report_fd@@Base+0x2934>
   1afa0:	ldr	x2, [sp, #16]
   1afa4:	mov	x0, #0xca00                	// #51712
   1afa8:	movk	x0, #0x3b9a, lsl #16
   1afac:	ldr	x1, [sp, #24]
   1afb0:	madd	x0, x2, x0, x1
   1afb4:	ldr	x30, [sp], #32
   1afb8:	ret
   1afbc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1afc0:	ldr	x0, [x0, #3648]
   1afc4:	cbz	x0, 1afd8 <__sanitizer_set_report_fd@@Base+0x4c28>
   1afc8:	add	x1, sp, #0x10
   1afcc:	mov	w0, #0x1                   	// #1
   1afd0:	bl	6920 <real_clock_gettime@plt>
   1afd4:	b	1afa0 <__sanitizer_set_report_fd@@Base+0x4bf0>
   1afd8:	add	x1, sp, #0x10
   1afdc:	mov	w0, #0x1                   	// #1
   1afe0:	bl	6970 <clock_gettime@plt>
   1afe4:	b	1afa0 <__sanitizer_set_report_fd@@Base+0x4bf0>
   1afe8:	cmp	w0, #0x2
   1afec:	b.eq	1b000 <__sanitizer_set_report_fd@@Base+0x4c50>  // b.none
   1aff0:	cmp	w0, #0xa
   1aff4:	cset	x0, eq  // eq = none
   1aff8:	lsl	x0, x0, #4
   1affc:	ret
   1b000:	mov	x0, #0x4                   	// #4
   1b004:	b	1affc <__sanitizer_set_report_fd@@Base+0x4c4c>
   1b008:	str	x30, [sp, #-16]!
   1b00c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1b010:	ldr	x30, [sp], #16
   1b014:	ret
   1b018:	stp	x19, x20, [sp, #-64]!
   1b01c:	stp	x21, x22, [sp, #16]
   1b020:	str	x30, [sp, #32]
   1b024:	mov	x19, x0
   1b028:	mov	x20, x1
   1b02c:	and	w21, w2, #0xff
   1b030:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b034:	ldr	x0, [x0, #4000]
   1b038:	ldr	x0, [x0]
   1b03c:	cbz	x0, 1b0b0 <__sanitizer_set_report_fd@@Base+0x4d00>
   1b040:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b044:	ldr	x0, [x0, #4000]
   1b048:	ldr	x2, [x0]
   1b04c:	sub	x0, x2, #0x1
   1b050:	tst	x2, x0
   1b054:	b.ne	1b0c4 <__sanitizer_set_report_fd@@Base+0x4d14>  // b.any
   1b058:	add	x19, x19, x0
   1b05c:	neg	x2, x2
   1b060:	and	x19, x19, x2
   1b064:	mov	x5, #0x0                   	// #0
   1b068:	mov	w4, #0xffffffff            	// #-1
   1b06c:	mov	w3, #0x22                  	// #34
   1b070:	mov	w2, #0x3                   	// #3
   1b074:	mov	x1, x19
   1b078:	mov	x0, #0x0                   	// #0
   1b07c:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1b080:	mov	x22, x0
   1b084:	add	x1, sp, #0x3c
   1b088:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b08c:	and	w1, w0, #0xff
   1b090:	cbnz	w1, 1b0d4 <__sanitizer_set_report_fd@@Base+0x4d24>
   1b094:	mov	x0, x19
   1b098:	bl	12a04 <__sancov_default_options@@Base+0x2680>
   1b09c:	mov	x0, x22
   1b0a0:	ldp	x21, x22, [sp, #16]
   1b0a4:	ldr	x30, [sp, #32]
   1b0a8:	ldp	x19, x20, [sp], #64
   1b0ac:	ret
   1b0b0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1b0b4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b0b8:	ldr	x1, [x1, #4000]
   1b0bc:	str	x0, [x1]
   1b0c0:	b	1b040 <__sanitizer_set_report_fd@@Base+0x4c90>
   1b0c4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1b0c8:	add	x0, x0, #0x638
   1b0cc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1b0d0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b0d4:	mov	w4, w21
   1b0d8:	ldr	w3, [sp, #60]
   1b0dc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b0e0:	add	x2, x2, #0xf40
   1b0e4:	mov	x1, x20
   1b0e8:	mov	x0, x19
   1b0ec:	bl	125f8 <__sancov_default_options@@Base+0x2274>
   1b0f0:	cmp	x0, #0x0
   1b0f4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1b0f8:	b.ne	1b100 <__sanitizer_set_report_fd@@Base+0x4d50>  // b.any
   1b0fc:	ret
   1b100:	stp	x19, x20, [sp, #-32]!
   1b104:	str	x30, [sp, #16]
   1b108:	mov	x20, x0
   1b10c:	mov	x19, x1
   1b110:	bl	18a00 <__sanitizer_set_report_fd@@Base+0x2650>
   1b114:	mov	x1, #0x0                   	// #0
   1b118:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b11c:	and	w0, w0, #0xff
   1b120:	cbnz	w0, 1b138 <__sanitizer_set_report_fd@@Base+0x4d88>
   1b124:	mov	x0, x19
   1b128:	bl	12a64 <__sancov_default_options@@Base+0x26e0>
   1b12c:	ldr	x30, [sp, #16]
   1b130:	ldp	x19, x20, [sp], #32
   1b134:	ret
   1b138:	mov	x4, x20
   1b13c:	mov	x3, x19
   1b140:	mov	x2, x19
   1b144:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b148:	ldr	x0, [x0, #4008]
   1b14c:	ldr	x1, [x0]
   1b150:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b154:	add	x0, x0, #0xf50
   1b158:	bl	1d908 <OnPrint@@Base+0x3d8>
   1b15c:	mov	x4, #0x0                   	// #0
   1b160:	mov	x3, #0x0                   	// #0
   1b164:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b168:	add	x2, x2, #0xf90
   1b16c:	mov	w1, #0x3c                  	// #60
   1b170:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b174:	add	x0, x0, #0xfb8
   1b178:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b17c:	stp	x19, x20, [sp, #-48]!
   1b180:	stp	x21, x30, [sp, #16]
   1b184:	mov	x19, x0
   1b188:	mov	x21, x1
   1b18c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b190:	ldr	x1, [x1, #4000]
   1b194:	ldr	x1, [x1]
   1b198:	cbz	x1, 1b208 <__sanitizer_set_report_fd@@Base+0x4e58>
   1b19c:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b1a0:	ldr	x2, [x2, #4000]
   1b1a4:	ldr	x2, [x2]
   1b1a8:	sub	x1, x2, #0x1
   1b1ac:	tst	x2, x1
   1b1b0:	b.ne	1b21c <__sanitizer_set_report_fd@@Base+0x4e6c>  // b.any
   1b1b4:	add	x19, x19, x1
   1b1b8:	neg	x2, x2
   1b1bc:	and	x19, x19, x2
   1b1c0:	mov	x5, #0x0                   	// #0
   1b1c4:	mov	w4, #0xffffffff            	// #-1
   1b1c8:	mov	w3, #0x22                  	// #34
   1b1cc:	mov	w2, #0x3                   	// #3
   1b1d0:	mov	x1, x19
   1b1d4:	mov	x0, #0x0                   	// #0
   1b1d8:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1b1dc:	mov	x20, x0
   1b1e0:	add	x1, sp, #0x2c
   1b1e4:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b1e8:	and	w0, w0, #0xff
   1b1ec:	cbnz	w0, 1b22c <__sanitizer_set_report_fd@@Base+0x4e7c>
   1b1f0:	mov	x0, x19
   1b1f4:	bl	12a04 <__sancov_default_options@@Base+0x2680>
   1b1f8:	mov	x0, x20
   1b1fc:	ldp	x21, x30, [sp, #16]
   1b200:	ldp	x19, x20, [sp], #48
   1b204:	ret
   1b208:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1b20c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b210:	ldr	x1, [x1, #4000]
   1b214:	str	x0, [x1]
   1b218:	b	1b19c <__sanitizer_set_report_fd@@Base+0x4dec>
   1b21c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1b220:	add	x0, x0, #0x638
   1b224:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1b228:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b22c:	ldr	w3, [sp, #44]
   1b230:	mov	x0, #0x0                   	// #0
   1b234:	cmp	w3, #0xc
   1b238:	b.eq	1b1fc <__sanitizer_set_report_fd@@Base+0x4e4c>  // b.none
   1b23c:	mov	w4, #0x0                   	// #0
   1b240:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b244:	add	x2, x2, #0xf40
   1b248:	mov	x1, x21
   1b24c:	mov	x0, x19
   1b250:	bl	125f8 <__sancov_default_options@@Base+0x2274>
   1b254:	stp	x19, x20, [sp, #-48]!
   1b258:	stp	x21, x22, [sp, #16]
   1b25c:	stp	x23, x30, [sp, #32]
   1b260:	mov	x19, x0
   1b264:	sub	x0, x0, #0x1
   1b268:	tst	x0, x19
   1b26c:	b.ne	1b2c4 <__sanitizer_set_report_fd@@Base+0x4f14>  // b.any
   1b270:	mov	x20, x1
   1b274:	mov	x1, x2
   1b278:	sub	x22, x20, #0x1
   1b27c:	tst	x20, x22
   1b280:	b.ne	1b2e4 <__sanitizer_set_report_fd@@Base+0x4f34>  // b.any
   1b284:	add	x21, x19, x20
   1b288:	mov	x0, x21
   1b28c:	bl	1b17c <__sanitizer_set_report_fd@@Base+0x4dcc>
   1b290:	mov	x23, x0
   1b294:	cbz	x0, 1b2b4 <__sanitizer_set_report_fd@@Base+0x4f04>
   1b298:	add	x21, x0, x21
   1b29c:	tst	x0, x22
   1b2a0:	b.ne	1b304 <__sanitizer_set_report_fd@@Base+0x4f54>  // b.any
   1b2a4:	add	x0, x23, x19
   1b2a8:	cmp	x21, x0
   1b2ac:	b.ne	1b320 <__sanitizer_set_report_fd@@Base+0x4f70>  // b.any
   1b2b0:	mov	x0, x23
   1b2b4:	ldp	x21, x22, [sp, #16]
   1b2b8:	ldp	x23, x30, [sp, #32]
   1b2bc:	ldp	x19, x20, [sp], #48
   1b2c0:	ret
   1b2c4:	mov	x4, #0x0                   	// #0
   1b2c8:	mov	x3, #0x0                   	// #0
   1b2cc:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b2d0:	add	x2, x2, #0xff8
   1b2d4:	mov	w1, #0x55                  	// #85
   1b2d8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b2dc:	add	x0, x0, #0xfb8
   1b2e0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b2e4:	mov	x4, #0x0                   	// #0
   1b2e8:	mov	x3, #0x0                   	// #0
   1b2ec:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   1b2f0:	add	x2, x2, #0xc10
   1b2f4:	mov	w1, #0x56                  	// #86
   1b2f8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b2fc:	add	x0, x0, #0xfb8
   1b300:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b304:	add	x22, x0, x22
   1b308:	neg	x20, x20
   1b30c:	and	x20, x22, x20
   1b310:	sub	x1, x20, x0
   1b314:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1b318:	mov	x23, x20
   1b31c:	b	1b2a4 <__sanitizer_set_report_fd@@Base+0x4ef4>
   1b320:	sub	x1, x21, x0
   1b324:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1b328:	b	1b2b0 <__sanitizer_set_report_fd@@Base+0x4f00>
   1b32c:	stp	x19, x20, [sp, #-48]!
   1b330:	stp	x21, x30, [sp, #16]
   1b334:	mov	x19, x0
   1b338:	mov	x20, x1
   1b33c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b340:	ldr	x0, [x0, #4000]
   1b344:	ldr	x0, [x0]
   1b348:	cbz	x0, 1b3b4 <__sanitizer_set_report_fd@@Base+0x5004>
   1b34c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b350:	ldr	x0, [x0, #4000]
   1b354:	ldr	x2, [x0]
   1b358:	sub	x0, x2, #0x1
   1b35c:	tst	x2, x0
   1b360:	b.ne	1b3c8 <__sanitizer_set_report_fd@@Base+0x5018>  // b.any
   1b364:	add	x0, x19, x0
   1b368:	neg	x1, x2
   1b36c:	mov	x5, #0x0                   	// #0
   1b370:	mov	w4, #0xffffffff            	// #-1
   1b374:	mov	w3, #0x4022                	// #16418
   1b378:	mov	w2, #0x3                   	// #3
   1b37c:	and	x1, x0, x1
   1b380:	mov	x0, #0x0                   	// #0
   1b384:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1b388:	mov	x21, x0
   1b38c:	add	x1, sp, #0x2c
   1b390:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b394:	and	w1, w0, #0xff
   1b398:	cbnz	w1, 1b3d8 <__sanitizer_set_report_fd@@Base+0x5028>
   1b39c:	mov	x0, x19
   1b3a0:	bl	12a04 <__sancov_default_options@@Base+0x2680>
   1b3a4:	mov	x0, x21
   1b3a8:	ldp	x21, x30, [sp, #16]
   1b3ac:	ldp	x19, x20, [sp], #48
   1b3b0:	ret
   1b3b4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1b3b8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b3bc:	ldr	x1, [x1, #4000]
   1b3c0:	str	x0, [x1]
   1b3c4:	b	1b34c <__sanitizer_set_report_fd@@Base+0x4f9c>
   1b3c8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1b3cc:	add	x0, x0, #0x638
   1b3d0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1b3d4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b3d8:	mov	w4, #0x0                   	// #0
   1b3dc:	ldr	w3, [sp, #44]
   1b3e0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b3e4:	add	x2, x2, #0x18
   1b3e8:	mov	x1, x20
   1b3ec:	mov	x0, x19
   1b3f0:	bl	125f8 <__sancov_default_options@@Base+0x2274>
   1b3f4:	stp	x19, x20, [sp, #-96]!
   1b3f8:	stp	x21, x22, [sp, #16]
   1b3fc:	str	x30, [sp, #32]
   1b400:	mov	x21, x0
   1b404:	mov	x20, x1
   1b408:	and	w22, w2, #0xff
   1b40c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b410:	ldr	x0, [x0, #4000]
   1b414:	ldr	x0, [x0]
   1b418:	cbz	x0, 1b488 <__sanitizer_set_report_fd@@Base+0x50d8>
   1b41c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b420:	ldr	x0, [x0, #4000]
   1b424:	ldr	x3, [x0]
   1b428:	neg	x6, x3
   1b42c:	and	x0, x6, x21
   1b430:	sub	x2, x3, #0x1
   1b434:	tst	x3, x2
   1b438:	b.ne	1b49c <__sanitizer_set_report_fd@@Base+0x50ec>  // b.any
   1b43c:	add	x1, x20, x2
   1b440:	mov	x5, #0x0                   	// #0
   1b444:	mov	w4, #0xffffffff            	// #-1
   1b448:	mov	w3, #0x32                  	// #50
   1b44c:	mov	w2, #0x3                   	// #3
   1b450:	and	x1, x1, x6
   1b454:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1b458:	mov	x19, x0
   1b45c:	add	x1, sp, #0x5c
   1b460:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b464:	and	w0, w0, #0xff
   1b468:	cbnz	w0, 1b4ac <__sanitizer_set_report_fd@@Base+0x50fc>
   1b46c:	mov	x0, x20
   1b470:	bl	12a04 <__sancov_default_options@@Base+0x2680>
   1b474:	mov	x0, x19
   1b478:	ldp	x21, x22, [sp, #16]
   1b47c:	ldr	x30, [sp, #32]
   1b480:	ldp	x19, x20, [sp], #96
   1b484:	ret
   1b488:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1b48c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b490:	ldr	x1, [x1, #4000]
   1b494:	str	x0, [x1]
   1b498:	b	1b41c <__sanitizer_set_report_fd@@Base+0x506c>
   1b49c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1b4a0:	add	x0, x0, #0x638
   1b4a4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1b4a8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b4ac:	cbz	w22, 1b4c4 <__sanitizer_set_report_fd@@Base+0x5114>
   1b4b0:	ldr	w0, [sp, #92]
   1b4b4:	cmp	w0, #0xc
   1b4b8:	b.ne	1b4c4 <__sanitizer_set_report_fd@@Base+0x5114>  // b.any
   1b4bc:	mov	x0, #0x0                   	// #0
   1b4c0:	b	1b478 <__sanitizer_set_report_fd@@Base+0x50c8>
   1b4c4:	add	x19, sp, #0x30
   1b4c8:	mov	x3, x21
   1b4cc:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b4d0:	add	x2, x2, #0x30
   1b4d4:	mov	x1, #0x28                  	// #40
   1b4d8:	mov	x0, x19
   1b4dc:	bl	1d534 <OnPrint@@Base+0x4>
   1b4e0:	mov	w4, #0x0                   	// #0
   1b4e4:	ldr	w3, [sp, #92]
   1b4e8:	adrp	x2, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b4ec:	add	x2, x2, #0xf40
   1b4f0:	mov	x1, x19
   1b4f4:	mov	x0, x20
   1b4f8:	bl	125f8 <__sancov_default_options@@Base+0x2274>
   1b4fc:	str	x30, [sp, #-16]!
   1b500:	mov	w2, #0x0                   	// #0
   1b504:	bl	1b3f4 <__sanitizer_set_report_fd@@Base+0x5044>
   1b508:	ldr	x30, [sp], #16
   1b50c:	ret
   1b510:	str	x30, [sp, #-16]!
   1b514:	mov	w2, #0x1                   	// #1
   1b518:	bl	1b3f4 <__sanitizer_set_report_fd@@Base+0x5044>
   1b51c:	ldr	x30, [sp], #16
   1b520:	ret
   1b524:	str	x30, [sp, #-16]!
   1b528:	mov	w2, #0x0                   	// #0
   1b52c:	bl	18a0c <__sanitizer_set_report_fd@@Base+0x265c>
   1b530:	cmp	w0, #0x0
   1b534:	cset	w0, eq  // eq = none
   1b538:	ldr	x30, [sp], #16
   1b53c:	ret
   1b540:	str	x30, [sp, #-16]!
   1b544:	mov	w2, #0x1                   	// #1
   1b548:	bl	18a0c <__sanitizer_set_report_fd@@Base+0x265c>
   1b54c:	cmp	w0, #0x0
   1b550:	cset	w0, eq  // eq = none
   1b554:	ldr	x30, [sp], #16
   1b558:	ret
   1b55c:	ret
   1b560:	stp	x19, x20, [sp, #-32]!
   1b564:	str	x30, [sp, #16]
   1b568:	mov	w3, w1
   1b56c:	mov	x20, x2
   1b570:	mov	w1, #0x241                 	// #577
   1b574:	cmp	w3, #0x1
   1b578:	b.eq	1b58c <__sanitizer_set_report_fd@@Base+0x51dc>  // b.none
   1b57c:	cmp	w3, #0x2
   1b580:	b.eq	1b5b8 <__sanitizer_set_report_fd@@Base+0x5208>  // b.none
   1b584:	cmp	w3, #0x0
   1b588:	csel	w1, w1, wzr, ne  // ne = any
   1b58c:	mov	w2, #0x1b0                 	// #432
   1b590:	bl	18a4c <__sanitizer_set_report_fd@@Base+0x269c>
   1b594:	mov	x19, x0
   1b598:	mov	x1, x20
   1b59c:	sxtw	x0, w0
   1b5a0:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b5a4:	ands	w0, w0, #0xff
   1b5a8:	csinv	w0, w19, wzr, eq  // eq = none
   1b5ac:	ldr	x30, [sp, #16]
   1b5b0:	ldp	x19, x20, [sp], #32
   1b5b4:	ret
   1b5b8:	mov	w1, #0x42                  	// #66
   1b5bc:	b	1b58c <__sanitizer_set_report_fd@@Base+0x51dc>
   1b5c0:	str	x30, [sp, #-16]!
   1b5c4:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1b5c8:	ldr	x30, [sp], #16
   1b5cc:	ret
   1b5d0:	stp	x19, x20, [sp, #-32]!
   1b5d4:	stp	x21, x30, [sp, #16]
   1b5d8:	mov	x19, x3
   1b5dc:	mov	x20, x4
   1b5e0:	bl	18a74 <__sanitizer_set_report_fd@@Base+0x26c4>
   1b5e4:	mov	x21, x0
   1b5e8:	mov	x1, x20
   1b5ec:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b5f0:	and	w1, w0, #0xff
   1b5f4:	mov	w0, #0x0                   	// #0
   1b5f8:	cbnz	w1, 1b608 <__sanitizer_set_report_fd@@Base+0x5258>
   1b5fc:	mov	w0, #0x1                   	// #1
   1b600:	cbz	x19, 1b608 <__sanitizer_set_report_fd@@Base+0x5258>
   1b604:	str	x21, [x19]
   1b608:	ldp	x21, x30, [sp, #16]
   1b60c:	ldp	x19, x20, [sp], #32
   1b610:	ret
   1b614:	stp	x19, x20, [sp, #-32]!
   1b618:	stp	x21, x30, [sp, #16]
   1b61c:	mov	x19, x3
   1b620:	mov	x20, x4
   1b624:	bl	18a9c <__sanitizer_set_report_fd@@Base+0x26ec>
   1b628:	mov	x21, x0
   1b62c:	mov	x1, x20
   1b630:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b634:	and	w1, w0, #0xff
   1b638:	mov	w0, #0x0                   	// #0
   1b63c:	cbnz	w1, 1b64c <__sanitizer_set_report_fd@@Base+0x529c>
   1b640:	mov	w0, #0x1                   	// #1
   1b644:	cbz	x19, 1b64c <__sanitizer_set_report_fd@@Base+0x529c>
   1b648:	str	x21, [x19]
   1b64c:	ldp	x21, x30, [sp, #16]
   1b650:	ldp	x19, x20, [sp], #32
   1b654:	ret
   1b658:	stp	x19, x30, [sp, #-16]!
   1b65c:	mov	x19, x2
   1b660:	bl	18bb0 <__sanitizer_set_report_fd@@Base+0x2800>
   1b664:	mov	x1, x19
   1b668:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b66c:	and	w0, w0, #0xff
   1b670:	eor	w0, w0, #0x1
   1b674:	ldp	x19, x30, [sp], #16
   1b678:	ret
   1b67c:	stp	x19, x20, [sp, #-48]!
   1b680:	stp	x21, x22, [sp, #16]
   1b684:	str	x30, [sp, #32]
   1b688:	mov	x21, x1
   1b68c:	mov	x2, #0x0                   	// #0
   1b690:	mov	w1, #0x0                   	// #0
   1b694:	bl	1b560 <__sanitizer_set_report_fd@@Base+0x51b0>
   1b698:	cmn	w0, #0x1
   1b69c:	b.eq	1b72c <__sanitizer_set_report_fd@@Base+0x537c>  // b.none
   1b6a0:	mov	w20, w0
   1b6a4:	bl	18b3c <__sanitizer_set_report_fd@@Base+0x278c>
   1b6a8:	mov	x19, x0
   1b6ac:	cmn	x0, #0x1
   1b6b0:	b.eq	1b74c <__sanitizer_set_report_fd@@Base+0x539c>  // b.none
   1b6b4:	cbz	x0, 1b76c <__sanitizer_set_report_fd@@Base+0x53bc>
   1b6b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b6bc:	ldr	x0, [x0, #4000]
   1b6c0:	ldr	x0, [x0]
   1b6c4:	cbz	x0, 1b78c <__sanitizer_set_report_fd@@Base+0x53dc>
   1b6c8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b6cc:	ldr	x0, [x0, #4000]
   1b6d0:	ldr	x2, [x0]
   1b6d4:	sub	x1, x2, #0x1
   1b6d8:	ands	x22, x2, x1
   1b6dc:	b.ne	1b7a0 <__sanitizer_set_report_fd@@Base+0x53f0>  // b.any
   1b6e0:	add	x19, x19, x1
   1b6e4:	neg	x2, x2
   1b6e8:	and	x1, x19, x2
   1b6ec:	str	x1, [x21]
   1b6f0:	mov	x5, #0x0                   	// #0
   1b6f4:	mov	w4, w20
   1b6f8:	mov	w3, #0x2                   	// #2
   1b6fc:	mov	w2, #0x1                   	// #1
   1b700:	mov	x0, #0x0                   	// #0
   1b704:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1b708:	mov	x19, x0
   1b70c:	mov	x1, #0x0                   	// #0
   1b710:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b714:	ands	w0, w0, #0xff
   1b718:	csel	x0, x22, x19, ne  // ne = any
   1b71c:	ldp	x21, x22, [sp, #16]
   1b720:	ldr	x30, [sp, #32]
   1b724:	ldp	x19, x20, [sp], #48
   1b728:	ret
   1b72c:	mov	x4, #0x0                   	// #0
   1b730:	mov	x3, #0x0                   	// #0
   1b734:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b738:	add	x2, x2, #0x48
   1b73c:	mov	w1, #0xc9                  	// #201
   1b740:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b744:	add	x0, x0, #0xfb8
   1b748:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b74c:	mov	x4, #0xffffffffffffffff    	// #-1
   1b750:	mov	x3, x4
   1b754:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b758:	add	x2, x2, #0x68
   1b75c:	mov	w1, #0xcb                  	// #203
   1b760:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b764:	add	x0, x0, #0xfb8
   1b768:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b76c:	mov	x4, #0x0                   	// #0
   1b770:	mov	x3, #0x0                   	// #0
   1b774:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b778:	add	x2, x2, #0x88
   1b77c:	mov	w1, #0xcc                  	// #204
   1b780:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b784:	add	x0, x0, #0xfb8
   1b788:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b78c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1b790:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b794:	ldr	x1, [x1, #4000]
   1b798:	str	x0, [x1]
   1b79c:	b	1b6c8 <__sanitizer_set_report_fd@@Base+0x5318>
   1b7a0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1b7a4:	add	x0, x0, #0x638
   1b7a8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1b7ac:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1b7b0:	stp	x19, x20, [sp, #-64]!
   1b7b4:	stp	x21, x22, [sp, #16]
   1b7b8:	str	x30, [sp, #32]
   1b7bc:	mov	x22, x1
   1b7c0:	mov	w20, w2
   1b7c4:	mov	x21, x3
   1b7c8:	cmp	x0, #0x0
   1b7cc:	mov	x5, x3
   1b7d0:	mov	w4, w2
   1b7d4:	mov	x3, #0x11                  	// #17
   1b7d8:	csinc	x3, x3, xzr, ne  // ne = any
   1b7dc:	mov	w2, #0x3                   	// #3
   1b7e0:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1b7e4:	mov	x19, x0
   1b7e8:	str	wzr, [sp, #60]
   1b7ec:	add	x1, sp, #0x3c
   1b7f0:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1b7f4:	and	w0, w0, #0xff
   1b7f8:	cbnz	w0, 1b810 <__sanitizer_set_report_fd@@Base+0x5460>
   1b7fc:	mov	x0, x19
   1b800:	ldp	x21, x22, [sp, #16]
   1b804:	ldr	x30, [sp, #32]
   1b808:	ldp	x19, x20, [sp], #64
   1b80c:	ret
   1b810:	ldr	w5, [sp, #60]
   1b814:	mov	x4, x19
   1b818:	mov	x3, x22
   1b81c:	mov	x2, x21
   1b820:	mov	w1, w20
   1b824:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b828:	add	x0, x0, #0xa0
   1b82c:	bl	1d874 <OnPrint@@Base+0x344>
   1b830:	mov	x0, #0x0                   	// #0
   1b834:	b	1b800 <__sanitizer_set_report_fd@@Base+0x5450>
   1b838:	stp	x19, x20, [sp, #-160]!
   1b83c:	stp	x21, x22, [sp, #16]
   1b840:	stp	x23, x30, [sp, #32]
   1b844:	mov	x21, x0
   1b848:	mov	x20, x1
   1b84c:	mov	w1, #0x1                   	// #1
   1b850:	add	x0, sp, #0x80
   1b854:	bl	1dd70 <OnPrint@@Base+0x840>
   1b858:	str	xzr, [sp, #72]
   1b85c:	str	xzr, [sp, #80]
   1b860:	str	xzr, [sp, #120]
   1b864:	add	x23, sp, #0x30
   1b868:	add	x22, sp, #0x80
   1b86c:	mov	x1, x23
   1b870:	mov	x0, x22
   1b874:	bl	1e3b4 <OnPrint@@Base+0xe84>
   1b878:	and	w2, w0, #0xff
   1b87c:	cbz	w2, 1b924 <__sanitizer_set_report_fd@@Base+0x5574>
   1b880:	ldr	x3, [sp, #48]
   1b884:	ldr	x2, [sp, #56]
   1b888:	cmp	x3, x2
   1b88c:	b.eq	1b86c <__sanitizer_set_report_fd@@Base+0x54bc>  // b.none
   1b890:	cbz	x2, 1b8c4 <__sanitizer_set_report_fd@@Base+0x5514>
   1b894:	sub	x2, x2, #0x1
   1b898:	cmp	x3, x2
   1b89c:	b.hi	1b8e4 <__sanitizer_set_report_fd@@Base+0x5534>  // b.pmore
   1b8a0:	cmp	x21, x20
   1b8a4:	b.hi	1b904 <__sanitizer_set_report_fd@@Base+0x5554>  // b.pmore
   1b8a8:	cmp	x2, x21
   1b8ac:	cset	w19, cc  // cc = lo, ul, last
   1b8b0:	cmp	x3, x20
   1b8b4:	cset	w0, hi  // hi = pmore
   1b8b8:	orr	w19, w19, w0
   1b8bc:	cbnz	w19, 1b86c <__sanitizer_set_report_fd@@Base+0x54bc>
   1b8c0:	b	1b928 <__sanitizer_set_report_fd@@Base+0x5578>
   1b8c4:	mov	x4, #0x0                   	// #0
   1b8c8:	mov	x3, #0x0                   	// #0
   1b8cc:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b8d0:	add	x2, x2, #0xe0
   1b8d4:	mov	w1, #0xef                  	// #239
   1b8d8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b8dc:	add	x0, x0, #0xfb8
   1b8e0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b8e4:	mov	x4, #0x0                   	// #0
   1b8e8:	mov	x3, #0x0                   	// #0
   1b8ec:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b8f0:	add	x2, x2, #0x100
   1b8f4:	mov	w1, #0xe1                  	// #225
   1b8f8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b8fc:	add	x0, x0, #0xfb8
   1b900:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b904:	mov	x4, #0x0                   	// #0
   1b908:	mov	x3, #0x0                   	// #0
   1b90c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b910:	add	x2, x2, #0x120
   1b914:	mov	w1, #0xe2                  	// #226
   1b918:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1b91c:	add	x0, x0, #0xfb8
   1b920:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1b924:	mov	w19, #0x1                   	// #1
   1b928:	add	x0, sp, #0x80
   1b92c:	bl	1dc24 <OnPrint@@Base+0x6f4>
   1b930:	mov	w0, w19
   1b934:	ldp	x21, x22, [sp, #16]
   1b938:	ldp	x23, x30, [sp, #32]
   1b93c:	ldp	x19, x20, [sp], #160
   1b940:	ret
   1b944:	stp	x19, x20, [sp, #-160]!
   1b948:	stp	x21, x22, [sp, #16]
   1b94c:	str	x30, [sp, #32]
   1b950:	mov	w1, #0x1                   	// #1
   1b954:	add	x0, sp, #0x80
   1b958:	bl	1dd70 <OnPrint@@Base+0x840>
   1b95c:	mov	w2, #0x0                   	// #0
   1b960:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b964:	add	x1, x1, #0x140
   1b968:	mov	x0, #0xfff                 	// #4095
   1b96c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1b970:	mov	x22, x0
   1b974:	str	x0, [sp, #72]
   1b978:	mov	x0, #0xfff                 	// #4095
   1b97c:	str	x0, [sp, #80]
   1b980:	str	xzr, [sp, #120]
   1b984:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b988:	add	x0, x0, #0x150
   1b98c:	bl	1d908 <OnPrint@@Base+0x3d8>
   1b990:	add	x21, sp, #0x30
   1b994:	add	x20, sp, #0x80
   1b998:	adrp	x19, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b99c:	add	x19, x19, #0x170
   1b9a0:	mov	x1, x21
   1b9a4:	mov	x0, x20
   1b9a8:	bl	1e3b4 <OnPrint@@Base+0xe84>
   1b9ac:	and	w0, w0, #0xff
   1b9b0:	cbz	w0, 1b9cc <__sanitizer_set_report_fd@@Base+0x561c>
   1b9b4:	ldr	x3, [sp, #72]
   1b9b8:	ldr	x2, [sp, #56]
   1b9bc:	ldr	x1, [sp, #48]
   1b9c0:	mov	x0, x19
   1b9c4:	bl	1d874 <OnPrint@@Base+0x344>
   1b9c8:	b	1b9a0 <__sanitizer_set_report_fd@@Base+0x55f0>
   1b9cc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1b9d0:	add	x0, x0, #0x180
   1b9d4:	bl	1d908 <OnPrint@@Base+0x3d8>
   1b9d8:	mov	x1, #0xfff                 	// #4095
   1b9dc:	mov	x0, x22
   1b9e0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1b9e4:	add	x0, sp, #0x80
   1b9e8:	bl	1dc24 <OnPrint@@Base+0x6f4>
   1b9ec:	ldp	x21, x22, [sp, #16]
   1b9f0:	ldr	x30, [sp, #32]
   1b9f4:	ldp	x19, x20, [sp], #160
   1b9f8:	ret
   1b9fc:	str	x30, [sp, #-16]!
   1ba00:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ba04:	add	x0, x0, #0x1a0
   1ba08:	bl	18cf4 <__sanitizer_set_report_fd@@Base+0x2944>
   1ba0c:	ldr	x30, [sp], #16
   1ba10:	ret
   1ba14:	and	w0, w0, #0xff
   1ba18:	cmp	w0, #0x2f
   1ba1c:	cset	w0, eq  // eq = none
   1ba20:	ret
   1ba24:	cbz	x0, 1ba38 <__sanitizer_set_report_fd@@Base+0x5688>
   1ba28:	ldrb	w0, [x0]
   1ba2c:	cmp	w0, #0x2f
   1ba30:	cset	w0, eq  // eq = none
   1ba34:	ret
   1ba38:	mov	w0, #0x0                   	// #0
   1ba3c:	b	1ba34 <__sanitizer_set_report_fd@@Base+0x5684>
   1ba40:	stp	x19, x20, [sp, #-48]!
   1ba44:	stp	x21, x22, [sp, #16]
   1ba48:	str	x30, [sp, #32]
   1ba4c:	mov	x19, x0
   1ba50:	mov	x22, x1
   1ba54:	mov	x20, x2
   1ba58:	ldr	x21, [x0]
   1ba5c:	mov	w1, #0x1                   	// #1
   1ba60:	ldxrb	w0, [x21]
   1ba64:	stxrb	w2, w1, [x21]
   1ba68:	cbnz	w2, 1ba60 <__sanitizer_set_report_fd@@Base+0x56b0>
   1ba6c:	dmb	ish
   1ba70:	and	w0, w0, #0xff
   1ba74:	cbnz	w0, 1bab0 <__sanitizer_set_report_fd@@Base+0x5700>
   1ba78:	mov	x0, x19
   1ba7c:	bl	158f0 <__sanitizer_cov_dump@@Base+0x1d38>
   1ba80:	mov	x2, x20
   1ba84:	mov	x1, x22
   1ba88:	ldr	w0, [x19, #8]
   1ba8c:	bl	18a9c <__sanitizer_set_report_fd@@Base+0x26ec>
   1ba90:	cmp	x0, x20
   1ba94:	b.ne	1babc <__sanitizer_set_report_fd@@Base+0x570c>  // b.any
   1ba98:	dmb	ish
   1ba9c:	strb	wzr, [x21]
   1baa0:	ldp	x21, x22, [sp, #16]
   1baa4:	ldr	x30, [sp, #32]
   1baa8:	ldp	x19, x20, [sp], #48
   1baac:	ret
   1bab0:	mov	x0, x21
   1bab4:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   1bab8:	b	1ba78 <__sanitizer_set_report_fd@@Base+0x56c8>
   1babc:	ldr	w20, [x19, #8]
   1bac0:	adrp	x19, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bac4:	add	x19, x19, #0x1a8
   1bac8:	mov	x0, x19
   1bacc:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   1bad0:	mov	x2, x0
   1bad4:	mov	x1, x19
   1bad8:	mov	w0, w20
   1badc:	bl	18a9c <__sanitizer_set_report_fd@@Base+0x26ec>
   1bae0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1bae4:	stp	x19, x20, [sp, #-192]!
   1bae8:	stp	x21, x22, [sp, #16]
   1baec:	stp	x23, x24, [sp, #32]
   1baf0:	stp	x25, x26, [sp, #48]
   1baf4:	str	x30, [sp, #64]
   1baf8:	mov	x22, x0
   1bafc:	mov	x24, x1
   1bb00:	mov	x23, x2
   1bb04:	mov	w1, #0x0                   	// #0
   1bb08:	add	x0, sp, #0xa0
   1bb0c:	bl	1dd70 <OnPrint@@Base+0x840>
   1bb10:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bb14:	ldr	x0, [x0, #4000]
   1bb18:	ldr	x0, [x0]
   1bb1c:	cbz	x0, 1bc14 <__sanitizer_set_report_fd@@Base+0x5864>
   1bb20:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bb24:	ldr	x0, [x0, #4000]
   1bb28:	ldr	x3, [x0]
   1bb2c:	sub	x0, x3, #0x1
   1bb30:	tst	x0, x3
   1bb34:	b.ne	1bc28 <__sanitizer_set_report_fd@@Base+0x5878>  // b.any
   1bb38:	add	x26, x3, #0xfff
   1bb3c:	neg	x3, x3
   1bb40:	and	x26, x26, x3
   1bb44:	mov	w2, #0x0                   	// #0
   1bb48:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1bb4c:	add	x1, x1, #0x650
   1bb50:	mov	x0, x26
   1bb54:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1bb58:	mov	x25, x0
   1bb5c:	mov	x2, #0x0                   	// #0
   1bb60:	mov	x1, #0x0                   	// #0
   1bb64:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1bb68:	mov	x1, #0x0                   	// #0
   1bb6c:	mov	x0, #0x0                   	// #0
   1bb70:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1bb74:	cmp	x26, #0xfff
   1bb78:	b.ls	1bc38 <__sanitizer_set_report_fd@@Base+0x5888>  // b.plast
   1bb7c:	mov	x2, #0x1000                	// #4096
   1bb80:	mov	w1, #0x0                   	// #0
   1bb84:	mov	x0, x25
   1bb88:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1bb8c:	strb	wzr, [x25]
   1bb90:	str	x25, [sp, #104]
   1bb94:	mov	x0, #0x1000                	// #4096
   1bb98:	str	x0, [sp, #112]
   1bb9c:	str	xzr, [sp, #152]
   1bba0:	add	x21, sp, #0x50
   1bba4:	add	x20, sp, #0xa0
   1bba8:	mov	x1, x21
   1bbac:	mov	x0, x20
   1bbb0:	bl	1e3b4 <OnPrint@@Base+0xe84>
   1bbb4:	ands	w19, w0, #0xff
   1bbb8:	b.eq	1bbe4 <__sanitizer_set_report_fd@@Base+0x5834>  // b.none
   1bbbc:	ldr	x3, [sp, #120]
   1bbc0:	tbz	w3, #2, 1bba8 <__sanitizer_set_report_fd@@Base+0x57f8>
   1bbc4:	ldr	x1, [sp, #104]
   1bbc8:	mov	x0, x22
   1bbcc:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   1bbd0:	cbnz	w0, 1bba8 <__sanitizer_set_report_fd@@Base+0x57f8>
   1bbd4:	ldr	x0, [sp, #80]
   1bbd8:	str	x0, [x24]
   1bbdc:	ldr	x0, [sp, #88]
   1bbe0:	str	x0, [x23]
   1bbe4:	mov	x1, x26
   1bbe8:	mov	x0, x25
   1bbec:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1bbf0:	add	x0, sp, #0xa0
   1bbf4:	bl	1dc24 <OnPrint@@Base+0x6f4>
   1bbf8:	mov	w0, w19
   1bbfc:	ldp	x21, x22, [sp, #16]
   1bc00:	ldp	x23, x24, [sp, #32]
   1bc04:	ldp	x25, x26, [sp, #48]
   1bc08:	ldr	x30, [sp, #64]
   1bc0c:	ldp	x19, x20, [sp], #192
   1bc10:	ret
   1bc14:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1bc18:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bc1c:	ldr	x1, [x1, #4000]
   1bc20:	str	x0, [x1]
   1bc24:	b	1bb20 <__sanitizer_set_report_fd@@Base+0x5770>
   1bc28:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1bc2c:	add	x0, x0, #0x638
   1bc30:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1bc34:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1bc38:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bc3c:	ldr	x0, [x0, #4000]
   1bc40:	ldr	x0, [x0]
   1bc44:	cbz	x0, 1bca8 <__sanitizer_set_report_fd@@Base+0x58f8>
   1bc48:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bc4c:	ldr	x0, [x0, #4000]
   1bc50:	ldr	x0, [x0]
   1bc54:	sub	x1, x0, #0x1
   1bc58:	tst	x1, x0
   1bc5c:	b.ne	1bcbc <__sanitizer_set_report_fd@@Base+0x590c>  // b.any
   1bc60:	add	x19, x0, #0xfff
   1bc64:	neg	x0, x0
   1bc68:	and	x19, x19, x0
   1bc6c:	mov	w2, #0x0                   	// #0
   1bc70:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1bc74:	add	x1, x1, #0x650
   1bc78:	mov	x0, x19
   1bc7c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1bc80:	mov	x20, x0
   1bc84:	mov	x2, #0x0                   	// #0
   1bc88:	mov	x1, x25
   1bc8c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1bc90:	mov	x1, x26
   1bc94:	mov	x0, x25
   1bc98:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1bc9c:	mov	x26, x19
   1bca0:	mov	x25, x20
   1bca4:	b	1bb7c <__sanitizer_set_report_fd@@Base+0x57cc>
   1bca8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1bcac:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bcb0:	ldr	x1, [x1, #4000]
   1bcb4:	str	x0, [x1]
   1bcb8:	b	1bc48 <__sanitizer_set_report_fd@@Base+0x5898>
   1bcbc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1bcc0:	add	x0, x0, #0x638
   1bcc4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1bcc8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1bccc:	ldr	x0, [x0]
   1bcd0:	ldr	x0, [x0, #16]
   1bcd4:	ret
   1bcd8:	ldr	x0, [x0]
   1bcdc:	ldr	w0, [x0]
   1bce0:	cmp	w0, #0xb
   1bce4:	cset	w0, eq  // eq = none
   1bce8:	ret
   1bcec:	ldr	x0, [x0]
   1bcf0:	ldr	w0, [x0]
   1bcf4:	ret
   1bcf8:	ldr	x0, [x0]
   1bcfc:	ldr	w0, [x0]
   1bd00:	cmp	w0, #0x7
   1bd04:	b.eq	1bd48 <__sanitizer_set_report_fd@@Base+0x5998>  // b.none
   1bd08:	cmp	w0, #0x7
   1bd0c:	b.le	1bd2c <__sanitizer_set_report_fd@@Base+0x597c>
   1bd10:	cmp	w0, #0x8
   1bd14:	b.eq	1bd6c <__sanitizer_set_report_fd@@Base+0x59bc>  // b.none
   1bd18:	cmp	w0, #0xb
   1bd1c:	b.ne	1bd78 <__sanitizer_set_report_fd@@Base+0x59c8>  // b.any
   1bd20:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd24:	add	x0, x0, #0x210
   1bd28:	b	1bd44 <__sanitizer_set_report_fd@@Base+0x5994>
   1bd2c:	cmp	w0, #0x4
   1bd30:	b.eq	1bd54 <__sanitizer_set_report_fd@@Base+0x59a4>  // b.none
   1bd34:	cmp	w0, #0x6
   1bd38:	b.ne	1bd60 <__sanitizer_set_report_fd@@Base+0x59b0>  // b.any
   1bd3c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd40:	add	x0, x0, #0x208
   1bd44:	ret
   1bd48:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd4c:	add	x0, x0, #0x1f0
   1bd50:	b	1bd44 <__sanitizer_set_report_fd@@Base+0x5994>
   1bd54:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd58:	add	x0, x0, #0x1f8
   1bd5c:	b	1bd44 <__sanitizer_set_report_fd@@Base+0x5994>
   1bd60:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd64:	add	x0, x0, #0x1e0
   1bd68:	b	1bd44 <__sanitizer_set_report_fd@@Base+0x5994>
   1bd6c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd70:	add	x0, x0, #0x200
   1bd74:	b	1bd44 <__sanitizer_set_report_fd@@Base+0x5994>
   1bd78:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bd7c:	add	x0, x0, #0x1e0
   1bd80:	b	1bd44 <__sanitizer_set_report_fd@@Base+0x5994>
   1bd84:	stp	x19, x30, [sp, #-32]!
   1bd88:	str	x1, [sp, #16]
   1bd8c:	str	x1, [sp, #24]
   1bd90:	add	x1, sp, #0x10
   1bd94:	bl	6ba0 <setrlimit@plt>
   1bd98:	cbnz	w0, 1bda4 <__sanitizer_set_report_fd@@Base+0x59f4>
   1bd9c:	ldp	x19, x30, [sp], #32
   1bda0:	ret
   1bda4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bda8:	ldr	x0, [x0, #4008]
   1bdac:	ldr	x19, [x0]
   1bdb0:	bl	6ac0 <__errno_location@plt>
   1bdb4:	ldr	w2, [x0]
   1bdb8:	mov	x1, x19
   1bdbc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bdc0:	add	x0, x0, #0x218
   1bdc4:	bl	1d908 <OnPrint@@Base+0x3d8>
   1bdc8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1bdcc:	str	x30, [sp, #-32]!
   1bdd0:	add	x1, sp, #0x10
   1bdd4:	bl	6cb0 <getrlimit@plt>
   1bdd8:	cbnz	w0, 1bde8 <__sanitizer_set_report_fd@@Base+0x5a38>
   1bddc:	ldr	x0, [sp, #16]
   1bde0:	ldr	x30, [sp], #32
   1bde4:	ret
   1bde8:	sxtw	x4, w0
   1bdec:	mov	x3, #0x0                   	// #0
   1bdf0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1bdf4:	add	x2, x2, #0x240
   1bdf8:	mov	w1, #0x5a                  	// #90
   1bdfc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1be00:	add	x0, x0, #0x268
   1be04:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1be08:	stp	x19, x20, [sp, #-192]!
   1be0c:	str	x30, [sp, #16]
   1be10:	mov	w20, w0
   1be14:	mov	x19, x1
   1be18:	bl	19ee0 <__sanitizer_set_report_fd@@Base+0x3b30>
   1be1c:	cbnz	w0, 1be2c <__sanitizer_set_report_fd@@Base+0x5a7c>
   1be20:	ldr	x30, [sp, #16]
   1be24:	ldp	x19, x20, [sp], #192
   1be28:	ret
   1be2c:	mov	x2, #0x98                  	// #152
   1be30:	mov	w1, #0x0                   	// #0
   1be34:	add	x0, sp, #0x28
   1be38:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1be3c:	str	x19, [sp, #40]
   1be40:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1be44:	ldr	x0, [x0, #4040]
   1be48:	ldrb	w0, [x0, #97]
   1be4c:	cmp	w0, #0x0
   1be50:	mov	w0, #0x4                   	// #4
   1be54:	movk	w0, #0x4800, lsl #16
   1be58:	mov	w1, #0x4                   	// #4
   1be5c:	movk	w1, #0x4000, lsl #16
   1be60:	csel	w0, w0, w1, ne  // ne = any
   1be64:	str	w0, [sp, #176]
   1be68:	mov	x2, #0x0                   	// #0
   1be6c:	add	x1, sp, #0x28
   1be70:	mov	w0, w20
   1be74:	bl	1a6cc <__sanitizer_set_report_fd@@Base+0x431c>
   1be78:	sxtw	x4, w0
   1be7c:	cbnz	w0, 1bea4 <__sanitizer_set_report_fd@@Base+0x5af4>
   1be80:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1be84:	ldr	x0, [x0, #3680]
   1be88:	ldr	w0, [x0]
   1be8c:	cbz	w0, 1be20 <__sanitizer_set_report_fd@@Base+0x5a70>
   1be90:	mov	w1, w20
   1be94:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1be98:	add	x0, x0, #0x2f0
   1be9c:	bl	1d908 <OnPrint@@Base+0x3d8>
   1bea0:	b	1be20 <__sanitizer_set_report_fd@@Base+0x5a70>
   1bea4:	mov	x3, #0x0                   	// #0
   1bea8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1beac:	add	x2, x2, #0x2b0
   1beb0:	mov	w1, #0xd2                  	// #210
   1beb4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1beb8:	add	x0, x0, #0x268
   1bebc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1bec0:	str	x30, [sp, #-16]!
   1bec4:	bl	6c60 <getuid@plt>
   1bec8:	ldr	x30, [sp], #16
   1becc:	ret
   1bed0:	str	x30, [sp, #-16]!
   1bed4:	bl	6c50 <pthread_self@plt>
   1bed8:	ldr	x30, [sp], #16
   1bedc:	ret
   1bee0:	stp	x19, x20, [sp, #-32]!
   1bee4:	str	x30, [sp, #16]
   1bee8:	mov	x19, x0
   1beec:	mov	x20, x1
   1bef0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bef4:	ldr	x0, [x0, #4000]
   1bef8:	ldr	x0, [x0]
   1befc:	cbz	x0, 1bf3c <__sanitizer_set_report_fd@@Base+0x5b8c>
   1bf00:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bf04:	ldr	x0, [x0, #4000]
   1bf08:	ldr	x2, [x0]
   1bf0c:	sub	x0, x2, #0x1
   1bf10:	tst	x2, x0
   1bf14:	b.ne	1bf50 <__sanitizer_set_report_fd@@Base+0x5ba0>  // b.any
   1bf18:	neg	x2, x2
   1bf1c:	add	x0, x19, x0
   1bf20:	and	x0, x0, x2
   1bf24:	and	x20, x20, x2
   1bf28:	cmp	x20, x0
   1bf2c:	b.hi	1bf60 <__sanitizer_set_report_fd@@Base+0x5bb0>  // b.pmore
   1bf30:	ldr	x30, [sp, #16]
   1bf34:	ldp	x19, x20, [sp], #32
   1bf38:	ret
   1bf3c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1bf40:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bf44:	ldr	x1, [x1, #4000]
   1bf48:	str	x0, [x1]
   1bf4c:	b	1bf00 <__sanitizer_set_report_fd@@Base+0x5b50>
   1bf50:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1bf54:	add	x0, x0, #0x638
   1bf58:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1bf5c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1bf60:	mov	w2, #0x4                   	// #4
   1bf64:	sub	x1, x20, x0
   1bf68:	bl	6a70 <madvise@plt>
   1bf6c:	b	1bf30 <__sanitizer_set_report_fd@@Base+0x5b80>
   1bf70:	str	x30, [sp, #-16]!
   1bf74:	mov	w2, #0xf                   	// #15
   1bf78:	bl	6a70 <madvise@plt>
   1bf7c:	cmp	w0, #0x0
   1bf80:	cset	w0, eq  // eq = none
   1bf84:	ldr	x30, [sp], #16
   1bf88:	ret
   1bf8c:	str	x30, [sp, #-16]!
   1bf90:	mov	w2, #0x10                  	// #16
   1bf94:	bl	6a70 <madvise@plt>
   1bf98:	cmp	w0, #0x0
   1bf9c:	cset	w0, eq  // eq = none
   1bfa0:	ldr	x30, [sp], #16
   1bfa4:	ret
   1bfa8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bfac:	ldr	x0, [x0, #4040]
   1bfb0:	ldrb	w0, [x0, #178]
   1bfb4:	cbnz	w0, 1bfbc <__sanitizer_set_report_fd@@Base+0x5c0c>
   1bfb8:	ret
   1bfbc:	str	x30, [sp, #-16]!
   1bfc0:	mov	x1, #0x0                   	// #0
   1bfc4:	mov	w0, #0x4                   	// #4
   1bfc8:	bl	1bd84 <__sanitizer_set_report_fd@@Base+0x59d4>
   1bfcc:	ldr	x30, [sp], #16
   1bfd0:	ret
   1bfd4:	str	x30, [sp, #-16]!
   1bfd8:	mov	w0, #0x3                   	// #3
   1bfdc:	bl	1bdcc <__sanitizer_set_report_fd@@Base+0x5a1c>
   1bfe0:	cmn	x0, #0x1
   1bfe4:	cset	w0, eq  // eq = none
   1bfe8:	ldr	x30, [sp], #16
   1bfec:	ret
   1bff0:	str	x30, [sp, #-16]!
   1bff4:	mov	w0, #0x3                   	// #3
   1bff8:	bl	1bdcc <__sanitizer_set_report_fd@@Base+0x5a1c>
   1bffc:	ldr	x30, [sp], #16
   1c000:	ret
   1c004:	str	x30, [sp, #-16]!
   1c008:	mov	x1, x0
   1c00c:	mov	w0, #0x3                   	// #3
   1c010:	bl	1bd84 <__sanitizer_set_report_fd@@Base+0x59d4>
   1c014:	bl	1bfd4 <__sanitizer_set_report_fd@@Base+0x5c24>
   1c018:	and	w0, w0, #0xff
   1c01c:	cbnz	w0, 1c028 <__sanitizer_set_report_fd@@Base+0x5c78>
   1c020:	ldr	x30, [sp], #16
   1c024:	ret
   1c028:	mov	x4, #0x0                   	// #0
   1c02c:	mov	x3, #0x0                   	// #0
   1c030:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c034:	add	x2, x2, #0x318
   1c038:	mov	w1, #0x7a                  	// #122
   1c03c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c040:	add	x0, x0, #0x268
   1c044:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c048:	str	x30, [sp, #-16]!
   1c04c:	mov	w0, #0x9                   	// #9
   1c050:	bl	1bdcc <__sanitizer_set_report_fd@@Base+0x5a1c>
   1c054:	cmn	x0, #0x1
   1c058:	cset	w0, eq  // eq = none
   1c05c:	ldr	x30, [sp], #16
   1c060:	ret
   1c064:	str	x30, [sp, #-16]!
   1c068:	mov	x1, #0xffffffffffffffff    	// #-1
   1c06c:	mov	w0, #0x9                   	// #9
   1c070:	bl	1bd84 <__sanitizer_set_report_fd@@Base+0x59d4>
   1c074:	bl	1c048 <__sanitizer_set_report_fd@@Base+0x5c98>
   1c078:	and	w0, w0, #0xff
   1c07c:	cbz	w0, 1c088 <__sanitizer_set_report_fd@@Base+0x5cd8>
   1c080:	ldr	x30, [sp], #16
   1c084:	ret
   1c088:	mov	x4, #0x0                   	// #0
   1c08c:	mov	x3, #0x0                   	// #0
   1c090:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c094:	add	x2, x2, #0x340
   1c098:	mov	w1, #0x84                  	// #132
   1c09c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c0a0:	add	x0, x0, #0x268
   1c0a4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c0a8:	str	x30, [sp, #-16]!
   1c0ac:	bl	6820 <sleep@plt>
   1c0b0:	ldr	x30, [sp], #16
   1c0b4:	ret
   1c0b8:	str	x30, [sp, #-16]!
   1c0bc:	mov	w1, #0x3e8                 	// #1000
   1c0c0:	mul	w0, w0, w1
   1c0c4:	bl	6a80 <usleep@plt>
   1c0c8:	ldr	x30, [sp], #16
   1c0cc:	ret
   1c0d0:	stp	x19, x30, [sp, #-176]!
   1c0d4:	mov	w0, #0x6                   	// #6
   1c0d8:	bl	19ee0 <__sanitizer_set_report_fd@@Base+0x3b30>
   1c0dc:	cbnz	w0, 1c0e4 <__sanitizer_set_report_fd@@Base+0x5d34>
   1c0e0:	bl	6bf0 <abort@plt>
   1c0e4:	add	x19, sp, #0x18
   1c0e8:	mov	x2, #0x98                  	// #152
   1c0ec:	mov	w1, #0x0                   	// #0
   1c0f0:	mov	x0, x19
   1c0f4:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1c0f8:	str	xzr, [sp, #24]
   1c0fc:	mov	x2, #0x0                   	// #0
   1c100:	mov	x1, x19
   1c104:	mov	w0, #0x6                   	// #6
   1c108:	bl	1a6cc <__sanitizer_set_report_fd@@Base+0x431c>
   1c10c:	b	1c0e0 <__sanitizer_set_report_fd@@Base+0x5d30>
   1c110:	str	x30, [sp, #-16]!
   1c114:	bl	3a408 <__asan_backtrace_vector_release@@Base+0x60>
   1c118:	ldr	x30, [sp], #16
   1c11c:	ret
   1c120:	str	x30, [sp, #-16]!
   1c124:	bl	6890 <isatty@plt>
   1c128:	cmp	w0, #0x0
   1c12c:	cset	w0, ne  // ne = any
   1c130:	ldr	x30, [sp], #16
   1c134:	ret
   1c138:	str	x30, [sp, #-64]!
   1c13c:	add	x1, sp, #0x10
   1c140:	mov	x0, #0x0                   	// #0
   1c144:	bl	6cc0 <sigaltstack@plt>
   1c148:	cbnz	w0, 1c15c <__sanitizer_set_report_fd@@Base+0x5dac>
   1c14c:	ldr	w0, [sp, #24]
   1c150:	tbnz	w0, #1, 1c17c <__sanitizer_set_report_fd@@Base+0x5dcc>
   1c154:	ldr	x30, [sp], #64
   1c158:	ret
   1c15c:	sxtw	x4, w0
   1c160:	mov	x3, #0x0                   	// #0
   1c164:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c168:	add	x2, x2, #0x368
   1c16c:	mov	w1, #0xb0                  	// #176
   1c170:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c174:	add	x0, x0, #0x268
   1c178:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c17c:	mov	w2, #0x0                   	// #0
   1c180:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c184:	add	x1, x1, #0x398
   1c188:	mov	x0, #0x10000               	// #65536
   1c18c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1c190:	str	x0, [sp, #40]
   1c194:	str	wzr, [sp, #48]
   1c198:	mov	x0, #0x10000               	// #65536
   1c19c:	str	x0, [sp, #56]
   1c1a0:	mov	x1, #0x0                   	// #0
   1c1a4:	add	x0, sp, #0x28
   1c1a8:	bl	6cc0 <sigaltstack@plt>
   1c1ac:	sxtw	x4, w0
   1c1b0:	cbz	w0, 1c154 <__sanitizer_set_report_fd@@Base+0x5da4>
   1c1b4:	mov	x3, #0x0                   	// #0
   1c1b8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c1bc:	add	x2, x2, #0x3b0
   1c1c0:	mov	w1, #0xbb                  	// #187
   1c1c4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c1c8:	add	x0, x0, #0x268
   1c1cc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c1d0:	str	x30, [sp, #-64]!
   1c1d4:	str	xzr, [sp, #40]
   1c1d8:	mov	w0, #0x2                   	// #2
   1c1dc:	str	w0, [sp, #48]
   1c1e0:	mov	x0, #0x10000               	// #65536
   1c1e4:	str	x0, [sp, #56]
   1c1e8:	add	x1, sp, #0x10
   1c1ec:	add	x0, sp, #0x28
   1c1f0:	bl	6cc0 <sigaltstack@plt>
   1c1f4:	cbnz	w0, 1c20c <__sanitizer_set_report_fd@@Base+0x5e5c>
   1c1f8:	ldr	x1, [sp, #32]
   1c1fc:	ldr	x0, [sp, #16]
   1c200:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1c204:	ldr	x30, [sp], #64
   1c208:	ret
   1c20c:	sxtw	x4, w0
   1c210:	mov	x3, #0x0                   	// #0
   1c214:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c218:	add	x2, x2, #0x3e0
   1c21c:	mov	w1, #0xc3                  	// #195
   1c220:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c224:	add	x0, x0, #0x268
   1c228:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c22c:	stp	x19, x30, [sp, #-16]!
   1c230:	mov	x19, x0
   1c234:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c238:	ldr	x0, [x0, #4040]
   1c23c:	ldrb	w0, [x0, #97]
   1c240:	cbnz	w0, 1c294 <__sanitizer_set_report_fd@@Base+0x5ee4>
   1c244:	mov	x1, x19
   1c248:	mov	w0, #0xb                   	// #11
   1c24c:	bl	1be08 <__sanitizer_set_report_fd@@Base+0x5a58>
   1c250:	mov	x1, x19
   1c254:	mov	w0, #0x7                   	// #7
   1c258:	bl	1be08 <__sanitizer_set_report_fd@@Base+0x5a58>
   1c25c:	mov	x1, x19
   1c260:	mov	w0, #0x6                   	// #6
   1c264:	bl	1be08 <__sanitizer_set_report_fd@@Base+0x5a58>
   1c268:	mov	x1, x19
   1c26c:	mov	w0, #0x8                   	// #8
   1c270:	bl	1be08 <__sanitizer_set_report_fd@@Base+0x5a58>
   1c274:	mov	x1, x19
   1c278:	mov	w0, #0x4                   	// #4
   1c27c:	bl	1be08 <__sanitizer_set_report_fd@@Base+0x5a58>
   1c280:	mov	x1, x19
   1c284:	mov	w0, #0x5                   	// #5
   1c288:	bl	1be08 <__sanitizer_set_report_fd@@Base+0x5a58>
   1c28c:	ldp	x19, x30, [sp], #16
   1c290:	ret
   1c294:	bl	1c138 <__sanitizer_set_report_fd@@Base+0x5d88>
   1c298:	b	1c244 <__sanitizer_set_report_fd@@Base+0x5e94>
   1c29c:	stp	x19, x20, [sp, #-32]!
   1c2a0:	str	x30, [sp, #16]
   1c2a4:	mov	x19, x0
   1c2a8:	ldr	x20, [x0, #16]
   1c2ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c2b0:	ldr	x0, [x0, #4000]
   1c2b4:	ldr	x0, [x0]
   1c2b8:	cbz	x0, 1c330 <__sanitizer_set_report_fd@@Base+0x5f80>
   1c2bc:	ldr	x1, [x19, #32]
   1c2c0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c2c4:	ldr	x0, [x0, #4000]
   1c2c8:	ldr	x0, [x0]
   1c2cc:	add	x20, x20, x0
   1c2d0:	mov	w0, #0x0                   	// #0
   1c2d4:	cmp	x20, x1
   1c2d8:	b.ls	1c324 <__sanitizer_set_report_fd@@Base+0x5f74>  // b.plast
   1c2dc:	add	x1, x1, #0xf, lsl #12
   1c2e0:	add	x1, x1, #0xfff
   1c2e4:	ldr	x2, [x19, #16]
   1c2e8:	cmp	x2, x1
   1c2ec:	b.cs	1c324 <__sanitizer_set_report_fd@@Base+0x5f74>  // b.hs, b.nlast
   1c2f0:	ldr	x0, [x19]
   1c2f4:	ldr	w1, [x0, #8]
   1c2f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c2fc:	ldr	x0, [x0, #3424]
   1c300:	ldr	w2, [x0]
   1c304:	mov	w0, #0x1                   	// #1
   1c308:	cmp	w1, w2
   1c30c:	b.eq	1c324 <__sanitizer_set_report_fd@@Base+0x5f74>  // b.none
   1c310:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c314:	ldr	x0, [x0, #3472]
   1c318:	ldr	w0, [x0]
   1c31c:	cmp	w0, w1
   1c320:	cset	w0, eq  // eq = none
   1c324:	ldr	x30, [sp, #16]
   1c328:	ldp	x19, x20, [sp], #32
   1c32c:	ret
   1c330:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1c334:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c338:	ldr	x1, [x1, #4000]
   1c33c:	str	x0, [x1]
   1c340:	b	1c2bc <__sanitizer_set_report_fd@@Base+0x5f0c>
   1c344:	stp	x19, x20, [sp, #-48]!
   1c348:	stp	x21, x30, [sp, #16]
   1c34c:	mov	x20, x0
   1c350:	mov	x19, x1
   1c354:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c358:	ldr	x1, [x1, #4000]
   1c35c:	ldr	x0, [x1]
   1c360:	cbz	x0, 1c3a0 <__sanitizer_set_report_fd@@Base+0x5ff0>
   1c364:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c368:	ldr	x1, [x1, #4000]
   1c36c:	ldr	x2, [x1]
   1c370:	add	x2, x2, x2, lsl #2
   1c374:	lsl	x4, x2, #1
   1c378:	cmp	x19, x2, lsl #1
   1c37c:	b.cs	1c3b4 <__sanitizer_set_report_fd@@Base+0x6004>  // b.hs, b.nlast
   1c380:	add	x0, sp, #0x28
   1c384:	bl	6720 <pipe@plt>
   1c388:	mov	w21, #0x0                   	// #0
   1c38c:	cbz	w0, 1c3d0 <__sanitizer_set_report_fd@@Base+0x6020>
   1c390:	mov	w0, w21
   1c394:	ldp	x21, x30, [sp, #16]
   1c398:	ldp	x19, x20, [sp], #48
   1c39c:	ret
   1c3a0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1c3a4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c3a8:	ldr	x1, [x1, #4000]
   1c3ac:	str	x0, [x1]
   1c3b0:	b	1c364 <__sanitizer_set_report_fd@@Base+0x5fb4>
   1c3b4:	mov	x3, x19
   1c3b8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c3bc:	add	x2, x2, #0x410
   1c3c0:	mov	w1, #0x118                 	// #280
   1c3c4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c3c8:	add	x0, x0, #0x268
   1c3cc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c3d0:	mov	x2, x19
   1c3d4:	mov	x1, x20
   1c3d8:	ldr	w0, [sp, #44]
   1c3dc:	bl	18a9c <__sanitizer_set_report_fd@@Base+0x26ec>
   1c3e0:	mov	x20, x0
   1c3e4:	add	x1, sp, #0x24
   1c3e8:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1c3ec:	and	w1, w0, #0xff
   1c3f0:	cbz	w1, 1c41c <__sanitizer_set_report_fd@@Base+0x606c>
   1c3f4:	ldrsw	x4, [sp, #36]
   1c3f8:	cmp	x4, #0xe
   1c3fc:	b.eq	1c424 <__sanitizer_set_report_fd@@Base+0x6074>  // b.none
   1c400:	mov	x3, #0xe                   	// #14
   1c404:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c408:	add	x2, x2, #0x430
   1c40c:	mov	w1, #0x121                 	// #289
   1c410:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c414:	add	x0, x0, #0x268
   1c418:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c41c:	cmp	x19, x20
   1c420:	cset	w21, eq  // eq = none
   1c424:	ldr	w0, [sp, #40]
   1c428:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c42c:	ldr	w0, [sp, #44]
   1c430:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c434:	b	1c390 <__sanitizer_set_report_fd@@Base+0x5fe0>
   1c438:	str	x30, [sp, #-16]!
   1c43c:	bl	1dc60 <OnPrint@@Base+0x730>
   1c440:	ldr	x30, [sp], #16
   1c444:	ret
   1c448:	stp	x19, x20, [sp, #-240]!
   1c44c:	str	x30, [sp, #16]
   1c450:	mov	x19, x0
   1c454:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c458:	ldr	x0, [x0, #4040]
   1c45c:	ldrb	w0, [x0, #215]
   1c460:	cbz	w0, 1c53c <__sanitizer_set_report_fd@@Base+0x618c>
   1c464:	mov	x20, x1
   1c468:	mov	x0, x19
   1c46c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   1c470:	cmp	x0, #0xbd
   1c474:	b.hi	1c4e4 <__sanitizer_set_report_fd@@Base+0x6134>  // b.pmore
   1c478:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   1c47c:	add	x5, sp, #0x28
   1c480:	mov	x4, x19
   1c484:	mov	x3, x0
   1c488:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c48c:	add	x2, x2, #0x488
   1c490:	mov	x1, #0xc8                  	// #200
   1c494:	mov	x19, x5
   1c498:	mov	x0, x5
   1c49c:	bl	1d534 <OnPrint@@Base+0x4>
   1c4a0:	mov	w2, #0x1c0                 	// #448
   1c4a4:	mov	w1, #0x242                 	// #578
   1c4a8:	mov	x0, x19
   1c4ac:	bl	66d0 <shm_open@plt>
   1c4b0:	mov	w19, w0
   1c4b4:	mov	x1, x20
   1c4b8:	bl	18ac4 <__sanitizer_set_report_fd@@Base+0x2714>
   1c4bc:	sxtw	x4, w0
   1c4c0:	cbnz	w0, 1c504 <__sanitizer_set_report_fd@@Base+0x6154>
   1c4c4:	add	x0, sp, #0x28
   1c4c8:	bl	6a90 <shm_unlink@plt>
   1c4cc:	sxtw	x4, w0
   1c4d0:	cbnz	w0, 1c520 <__sanitizer_set_report_fd@@Base+0x6170>
   1c4d4:	mov	w0, w19
   1c4d8:	ldr	x30, [sp, #16]
   1c4dc:	ldp	x19, x20, [sp], #240
   1c4e0:	ret
   1c4e4:	mov	x4, #0x0                   	// #0
   1c4e8:	mov	x3, #0x0                   	// #0
   1c4ec:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c4f0:	add	x2, x2, #0x450
   1c4f4:	mov	w1, #0x13c                 	// #316
   1c4f8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c4fc:	add	x0, x0, #0x268
   1c500:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c504:	mov	x3, #0x0                   	// #0
   1c508:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c50c:	add	x2, x2, #0x498
   1c510:	mov	w1, #0x142                 	// #322
   1c514:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c518:	add	x0, x0, #0x268
   1c51c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c520:	mov	x3, #0x0                   	// #0
   1c524:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c528:	add	x2, x2, #0x498
   1c52c:	mov	w1, #0x144                 	// #324
   1c530:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c534:	add	x0, x0, #0x268
   1c538:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c53c:	mov	w19, #0xffffffff            	// #-1
   1c540:	b	1c4d4 <__sanitizer_set_report_fd@@Base+0x6124>
   1c544:	stp	x19, x20, [sp, #-64]!
   1c548:	stp	x21, x22, [sp, #16]
   1c54c:	str	x30, [sp, #32]
   1c550:	mov	x20, x0
   1c554:	mov	x19, x1
   1c558:	cbz	x2, 1c5f0 <__sanitizer_set_report_fd@@Base+0x6240>
   1c55c:	mov	x0, x2
   1c560:	bl	1c448 <__sanitizer_set_report_fd@@Base+0x6098>
   1c564:	mov	w21, w0
   1c568:	cmn	w0, #0x1
   1c56c:	mov	w22, #0x4012                	// #16402
   1c570:	mov	w0, #0x4032                	// #16434
   1c574:	csel	w22, w22, w0, ne  // ne = any
   1c578:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c57c:	ldr	x1, [x1, #4000]
   1c580:	ldr	x0, [x1]
   1c584:	cbz	x0, 1c5fc <__sanitizer_set_report_fd@@Base+0x624c>
   1c588:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c58c:	ldr	x1, [x1, #4000]
   1c590:	ldr	x3, [x1]
   1c594:	neg	x6, x3
   1c598:	and	x0, x6, x20
   1c59c:	sub	x2, x3, #0x1
   1c5a0:	tst	x3, x2
   1c5a4:	b.ne	1c610 <__sanitizer_set_report_fd@@Base+0x6260>  // b.any
   1c5a8:	add	x1, x19, x2
   1c5ac:	mov	x5, #0x0                   	// #0
   1c5b0:	mov	w4, w21
   1c5b4:	mov	w3, w22
   1c5b8:	mov	w2, #0x3                   	// #3
   1c5bc:	and	x1, x1, x6
   1c5c0:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1c5c4:	add	x1, sp, #0x3c
   1c5c8:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1c5cc:	and	w0, w0, #0xff
   1c5d0:	cbnz	w0, 1c620 <__sanitizer_set_report_fd@@Base+0x6270>
   1c5d4:	mov	x0, x19
   1c5d8:	bl	12a04 <__sancov_default_options@@Base+0x2680>
   1c5dc:	mov	w0, #0x1                   	// #1
   1c5e0:	ldp	x21, x22, [sp, #16]
   1c5e4:	ldr	x30, [sp, #32]
   1c5e8:	ldp	x19, x20, [sp], #64
   1c5ec:	ret
   1c5f0:	mov	w21, #0xffffffff            	// #-1
   1c5f4:	mov	w22, #0x4032                	// #16434
   1c5f8:	b	1c578 <__sanitizer_set_report_fd@@Base+0x61c8>
   1c5fc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1c600:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c604:	ldr	x1, [x1, #4000]
   1c608:	str	x0, [x1]
   1c60c:	b	1c588 <__sanitizer_set_report_fd@@Base+0x61d8>
   1c610:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1c614:	add	x0, x0, #0x638
   1c618:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1c61c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1c620:	ldr	w5, [sp, #60]
   1c624:	mov	x4, x20
   1c628:	mov	x3, x19
   1c62c:	mov	x2, x19
   1c630:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c634:	ldr	x0, [x0, #4008]
   1c638:	ldr	x1, [x0]
   1c63c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c640:	add	x0, x0, #0x4b0
   1c644:	bl	1d908 <OnPrint@@Base+0x3d8>
   1c648:	mov	w0, #0x0                   	// #0
   1c64c:	b	1c5e0 <__sanitizer_set_report_fd@@Base+0x6230>
   1c650:	str	x30, [sp, #-16]!
   1c654:	mov	x0, x1
   1c658:	mov	x1, x2
   1c65c:	bl	1b510 <__sanitizer_set_report_fd@@Base+0x5160>
   1c660:	ldr	x30, [sp], #16
   1c664:	ret
   1c668:	str	x30, [sp, #-16]!
   1c66c:	mov	x0, x1
   1c670:	mov	x1, x2
   1c674:	bl	1b4fc <__sanitizer_set_report_fd@@Base+0x514c>
   1c678:	ldr	x30, [sp], #16
   1c67c:	ret
   1c680:	str	x30, [sp, #-16]!
   1c684:	mov	x5, x0
   1c688:	mov	x0, x1
   1c68c:	mov	x1, x2
   1c690:	ldr	x4, [x5, #8]
   1c694:	cmp	x2, x4
   1c698:	b.hi	1c6cc <__sanitizer_set_report_fd@@Base+0x631c>  // b.pmore
   1c69c:	ldr	x2, [x5]
   1c6a0:	cmp	x2, x0
   1c6a4:	b.eq	1c6e8 <__sanitizer_set_report_fd@@Base+0x6338>  // b.none
   1c6a8:	add	x3, x1, x0
   1c6ac:	add	x2, x2, x4
   1c6b0:	cmp	x3, x2
   1c6b4:	b.ne	1c6fc <__sanitizer_set_report_fd@@Base+0x634c>  // b.any
   1c6b8:	sub	x4, x4, x1
   1c6bc:	str	x4, [x5, #8]
   1c6c0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1c6c4:	ldr	x30, [sp], #16
   1c6c8:	ret
   1c6cc:	mov	x3, x2
   1c6d0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c6d4:	add	x2, x2, #0x500
   1c6d8:	mov	w1, #0x175                 	// #373
   1c6dc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c6e0:	add	x0, x0, #0x268
   1c6e4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c6e8:	add	x2, x1, x0
   1c6ec:	cmp	x1, x4
   1c6f0:	csel	x2, x2, xzr, ne  // ne = any
   1c6f4:	str	x2, [x5]
   1c6f8:	b	1c6b8 <__sanitizer_set_report_fd@@Base+0x6308>
   1c6fc:	mov	x4, x2
   1c700:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c704:	add	x2, x2, #0x518
   1c708:	mov	w1, #0x17a                 	// #378
   1c70c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c710:	add	x0, x0, #0x268
   1c714:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1c718:	stp	x19, x20, [sp, #-32]!
   1c71c:	str	x30, [sp, #16]
   1c720:	mov	x20, x0
   1c724:	mov	x19, x1
   1c728:	cbz	x2, 1c768 <__sanitizer_set_report_fd@@Base+0x63b8>
   1c72c:	mov	x0, x2
   1c730:	bl	1c448 <__sanitizer_set_report_fd@@Base+0x6098>
   1c734:	mov	w4, w0
   1c738:	cmn	w0, #0x1
   1c73c:	mov	w3, #0x4012                	// #16402
   1c740:	mov	w0, #0x4032                	// #16434
   1c744:	csel	w3, w3, w0, ne  // ne = any
   1c748:	mov	x5, #0x0                   	// #0
   1c74c:	mov	w2, #0x0                   	// #0
   1c750:	mov	x1, x19
   1c754:	mov	x0, x20
   1c758:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1c75c:	ldr	x30, [sp, #16]
   1c760:	ldp	x19, x20, [sp], #32
   1c764:	ret
   1c768:	mov	w4, #0xffffffff            	// #-1
   1c76c:	mov	w3, #0x4032                	// #16434
   1c770:	b	1c748 <__sanitizer_set_report_fd@@Base+0x6398>
   1c774:	str	x30, [sp, #-16]!
   1c778:	mov	x5, #0x0                   	// #0
   1c77c:	mov	w4, #0xffffffff            	// #-1
   1c780:	mov	w3, #0x4022                	// #16418
   1c784:	mov	w2, #0x0                   	// #0
   1c788:	mov	x1, x0
   1c78c:	mov	x0, #0x0                   	// #0
   1c790:	bl	189e8 <__sanitizer_set_report_fd@@Base+0x2638>
   1c794:	ldr	x30, [sp], #16
   1c798:	ret
   1c79c:	stp	x19, x20, [sp, #-32]!
   1c7a0:	stp	x21, x30, [sp, #16]
   1c7a4:	mov	x19, x0
   1c7a8:	mov	x20, x1
   1c7ac:	mov	x21, x2
   1c7b0:	cbz	x3, 1c7d8 <__sanitizer_set_report_fd@@Base+0x6428>
   1c7b4:	mov	x0, x3
   1c7b8:	mov	x2, #0x0                   	// #0
   1c7bc:	bl	1c718 <__sanitizer_set_report_fd@@Base+0x6368>
   1c7c0:	str	x0, [x19]
   1c7c4:	str	x20, [x19, #8]
   1c7c8:	str	x21, [x19, #16]
   1c7cc:	ldp	x21, x30, [sp, #16]
   1c7d0:	ldp	x19, x20, [sp], #32
   1c7d4:	ret
   1c7d8:	mov	x0, x1
   1c7dc:	bl	1c774 <__sanitizer_set_report_fd@@Base+0x63c4>
   1c7e0:	b	1c7c0 <__sanitizer_set_report_fd@@Base+0x6410>
   1c7e4:	str	x30, [sp, #-16]!
   1c7e8:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c7ec:	ldr	x3, [x3, #3536]
   1c7f0:	cbz	x3, 1c800 <__sanitizer_set_report_fd@@Base+0x6450>
   1c7f4:	bl	6810 <real_pthread_attr_getstack@plt>
   1c7f8:	ldr	x30, [sp], #16
   1c7fc:	ret
   1c800:	bl	6a40 <pthread_attr_getstack@plt>
   1c804:	b	1c7f8 <__sanitizer_set_report_fd@@Base+0x6448>
   1c808:	stp	x19, x20, [sp, #-48]!
   1c80c:	str	x30, [sp, #16]
   1c810:	mov	x20, x0
   1c814:	str	xzr, [sp, #40]
   1c818:	str	xzr, [sp, #32]
   1c81c:	add	x2, sp, #0x20
   1c820:	add	x1, sp, #0x28
   1c824:	bl	1c7e4 <__sanitizer_set_report_fd@@Base+0x6434>
   1c828:	ldr	x0, [sp, #40]
   1c82c:	cbz	x0, 1c83c <__sanitizer_set_report_fd@@Base+0x648c>
   1c830:	ldr	x1, [sp, #32]
   1c834:	cmn	x0, x1
   1c838:	b.ne	1c894 <__sanitizer_set_report_fd@@Base+0x64e4>  // b.any
   1c83c:	bl	1aa48 <__sanitizer_set_report_fd@@Base+0x4698>
   1c840:	add	x19, x0, #0x20, lsl #12
   1c844:	ldr	x1, [sp, #32]
   1c848:	cmp	x19, x1
   1c84c:	b.hi	1c85c <__sanitizer_set_report_fd@@Base+0x64ac>  // b.pmore
   1c850:	ldr	x30, [sp, #16]
   1c854:	ldp	x19, x20, [sp], #48
   1c858:	ret
   1c85c:	cbz	x1, 1c850 <__sanitizer_set_report_fd@@Base+0x64a0>
   1c860:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c864:	ldr	x0, [x0, #3680]
   1c868:	ldr	w0, [x0]
   1c86c:	cbnz	w0, 1c880 <__sanitizer_set_report_fd@@Base+0x64d0>
   1c870:	mov	x1, x19
   1c874:	mov	x0, x20
   1c878:	bl	6a50 <pthread_attr_setstacksize@plt>
   1c87c:	b	1c850 <__sanitizer_set_report_fd@@Base+0x64a0>
   1c880:	mov	x2, x19
   1c884:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c888:	add	x0, x0, #0x558
   1c88c:	bl	1d874 <OnPrint@@Base+0x344>
   1c890:	b	1c870 <__sanitizer_set_report_fd@@Base+0x64c0>
   1c894:	bl	1aa48 <__sanitizer_set_report_fd@@Base+0x4698>
   1c898:	add	x2, x0, #0x20, lsl #12
   1c89c:	ldr	x1, [sp, #32]
   1c8a0:	cmp	x2, x1
   1c8a4:	b.ls	1c850 <__sanitizer_set_report_fd@@Base+0x64a0>  // b.plast
   1c8a8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c8ac:	add	x0, x0, #0x588
   1c8b0:	bl	1d874 <OnPrint@@Base+0x344>
   1c8b4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c8b8:	add	x0, x0, #0x5c8
   1c8bc:	bl	1d874 <OnPrint@@Base+0x344>
   1c8c0:	b	1c850 <__sanitizer_set_report_fd@@Base+0x64a0>
   1c8c4:	stp	x19, x20, [sp, #-80]!
   1c8c8:	stp	x21, x22, [sp, #16]
   1c8cc:	stp	x23, x24, [sp, #32]
   1c8d0:	str	x30, [sp, #48]
   1c8d4:	mov	x23, x0
   1c8d8:	mov	x24, x1
   1c8dc:	mov	w22, w2
   1c8e0:	mov	w21, w3
   1c8e4:	mov	w20, w4
   1c8e8:	bl	1905c <__sanitizer_set_report_fd@@Base+0x2cac>
   1c8ec:	mov	w19, w0
   1c8f0:	tbnz	w0, #31, 1c928 <__sanitizer_set_report_fd@@Base+0x6578>
   1c8f4:	cbz	w0, 1c950 <__sanitizer_set_report_fd@@Base+0x65a0>
   1c8f8:	cmn	w22, #0x1
   1c8fc:	b.ne	1ca04 <__sanitizer_set_report_fd@@Base+0x6654>  // b.any
   1c900:	cmn	w21, #0x1
   1c904:	b.ne	1ca10 <__sanitizer_set_report_fd@@Base+0x6660>  // b.any
   1c908:	cmn	w20, #0x1
   1c90c:	b.ne	1ca1c <__sanitizer_set_report_fd@@Base+0x666c>  // b.any
   1c910:	mov	w0, w19
   1c914:	ldp	x21, x22, [sp, #16]
   1c918:	ldp	x23, x24, [sp, #32]
   1c91c:	ldr	x30, [sp, #48]
   1c920:	ldp	x19, x20, [sp], #80
   1c924:	ret
   1c928:	add	x1, sp, #0x4c
   1c92c:	sxtw	x0, w0
   1c930:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1c934:	and	w0, w0, #0xff
   1c938:	cbz	w0, 1c8f8 <__sanitizer_set_report_fd@@Base+0x6548>
   1c93c:	ldr	w1, [sp, #76]
   1c940:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1c944:	add	x0, x0, #0x5f8
   1c948:	bl	1d908 <OnPrint@@Base+0x3d8>
   1c94c:	b	1c8f8 <__sanitizer_set_report_fd@@Base+0x6548>
   1c950:	cmn	w22, #0x1
   1c954:	b.ne	1c9a4 <__sanitizer_set_report_fd@@Base+0x65f4>  // b.any
   1c958:	cmn	w21, #0x1
   1c95c:	b.ne	1c9c4 <__sanitizer_set_report_fd@@Base+0x6614>  // b.any
   1c960:	cmn	w20, #0x1
   1c964:	b.ne	1c9e4 <__sanitizer_set_report_fd@@Base+0x6634>  // b.any
   1c968:	mov	w0, #0x4                   	// #4
   1c96c:	bl	6c30 <sysconf@plt>
   1c970:	mov	w19, w0
   1c974:	cmp	w0, #0x2
   1c978:	b.le	1c990 <__sanitizer_set_report_fd@@Base+0x65e0>
   1c97c:	mov	w0, w19
   1c980:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c984:	sub	w19, w19, #0x1
   1c988:	cmp	w19, #0x2
   1c98c:	b.ne	1c97c <__sanitizer_set_report_fd@@Base+0x65cc>  // b.any
   1c990:	mov	x1, x24
   1c994:	mov	x0, x23
   1c998:	bl	6710 <execv@plt>
   1c99c:	mov	w0, #0x1                   	// #1
   1c9a0:	bl	18bdc <__sanitizer_set_report_fd@@Base+0x282c>
   1c9a4:	mov	w0, #0x0                   	// #0
   1c9a8:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c9ac:	mov	w1, #0x0                   	// #0
   1c9b0:	mov	w0, w22
   1c9b4:	bl	18b5c <__sanitizer_set_report_fd@@Base+0x27ac>
   1c9b8:	mov	w0, w22
   1c9bc:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c9c0:	b	1c958 <__sanitizer_set_report_fd@@Base+0x65a8>
   1c9c4:	mov	w0, #0x1                   	// #1
   1c9c8:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c9cc:	mov	w1, #0x1                   	// #1
   1c9d0:	mov	w0, w21
   1c9d4:	bl	18b5c <__sanitizer_set_report_fd@@Base+0x27ac>
   1c9d8:	mov	w0, w21
   1c9dc:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c9e0:	b	1c960 <__sanitizer_set_report_fd@@Base+0x65b0>
   1c9e4:	mov	w0, #0x2                   	// #2
   1c9e8:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1c9ec:	mov	w1, #0x2                   	// #2
   1c9f0:	mov	w0, w20
   1c9f4:	bl	18b5c <__sanitizer_set_report_fd@@Base+0x27ac>
   1c9f8:	mov	w0, w20
   1c9fc:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1ca00:	b	1c968 <__sanitizer_set_report_fd@@Base+0x65b8>
   1ca04:	mov	w0, w22
   1ca08:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1ca0c:	b	1c900 <__sanitizer_set_report_fd@@Base+0x6550>
   1ca10:	mov	w0, w21
   1ca14:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1ca18:	b	1c908 <__sanitizer_set_report_fd@@Base+0x6558>
   1ca1c:	mov	w0, w20
   1ca20:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   1ca24:	b	1c910 <__sanitizer_set_report_fd@@Base+0x6560>
   1ca28:	stp	x19, x30, [sp, #-32]!
   1ca2c:	mov	w2, #0x1                   	// #1
   1ca30:	add	x1, sp, #0x1c
   1ca34:	bl	18fe8 <__sanitizer_set_report_fd@@Base+0x2c38>
   1ca38:	mov	x19, x0
   1ca3c:	add	x1, sp, #0x18
   1ca40:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1ca44:	and	w1, w0, #0xff
   1ca48:	cmp	x19, #0x0
   1ca4c:	cset	w0, eq  // eq = none
   1ca50:	cbnz	w1, 1ca5c <__sanitizer_set_report_fd@@Base+0x66ac>
   1ca54:	ldp	x19, x30, [sp], #32
   1ca58:	ret
   1ca5c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ca60:	ldr	x0, [x0, #3680]
   1ca64:	ldr	w1, [x0]
   1ca68:	mov	w0, #0x0                   	// #0
   1ca6c:	cbz	w1, 1ca54 <__sanitizer_set_report_fd@@Base+0x66a4>
   1ca70:	ldr	w1, [sp, #24]
   1ca74:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ca78:	add	x0, x0, #0x620
   1ca7c:	bl	1d908 <OnPrint@@Base+0x3d8>
   1ca80:	mov	w0, #0x0                   	// #0
   1ca84:	b	1ca54 <__sanitizer_set_report_fd@@Base+0x66a4>
   1ca88:	str	x30, [sp, #-32]!
   1ca8c:	mov	w2, #0x0                   	// #0
   1ca90:	add	x1, sp, #0x1c
   1ca94:	bl	18fe8 <__sanitizer_set_report_fd@@Base+0x2c38>
   1ca98:	add	x1, sp, #0x18
   1ca9c:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   1caa0:	and	w0, w0, #0xff
   1caa4:	cbnz	w0, 1cab4 <__sanitizer_set_report_fd@@Base+0x6704>
   1caa8:	ldr	w0, [sp, #28]
   1caac:	ldr	x30, [sp], #32
   1cab0:	ret
   1cab4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1cab8:	ldr	x0, [x0, #3680]
   1cabc:	ldr	w1, [x0]
   1cac0:	mov	w0, #0xffffffff            	// #-1
   1cac4:	cbz	w1, 1caac <__sanitizer_set_report_fd@@Base+0x66fc>
   1cac8:	ldr	w1, [sp, #24]
   1cacc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cad0:	add	x0, x0, #0x620
   1cad4:	bl	1d908 <OnPrint@@Base+0x3d8>
   1cad8:	mov	w0, #0xffffffff            	// #-1
   1cadc:	b	1caac <__sanitizer_set_report_fd@@Base+0x66fc>
   1cae0:	cmp	w0, #0x1
   1cae4:	cset	w0, eq  // eq = none
   1cae8:	ret
   1caec:	and	w2, w2, #0xff
   1caf0:	ldr	x3, [x0]
   1caf4:	cmp	x3, x1
   1caf8:	b.cs	1cb0c <__sanitizer_set_report_fd@@Base+0x675c>  // b.hs, b.nlast
   1cafc:	strb	w2, [x3]
   1cb00:	ldr	x1, [x0]
   1cb04:	add	x1, x1, #0x1
   1cb08:	str	x1, [x0]
   1cb0c:	mov	w0, #0x1                   	// #1
   1cb10:	ret
   1cb14:	stp	x19, x20, [sp, #-64]!
   1cb18:	stp	x21, x22, [sp, #16]
   1cb1c:	stp	x23, x24, [sp, #32]
   1cb20:	str	x30, [sp, #56]
   1cb24:	mov	x21, x0
   1cb28:	mov	x22, x1
   1cb2c:	mov	w23, w2
   1cb30:	mov	w24, w3
   1cb34:	cbz	x4, 1cb84 <__sanitizer_set_report_fd@@Base+0x67d4>
   1cb38:	mov	x20, x4
   1cb3c:	ldrb	w2, [x4]
   1cb40:	cbz	w2, 1cb98 <__sanitizer_set_report_fd@@Base+0x67e8>
   1cb44:	str	x25, [sp, #48]
   1cb48:	mvn	w25, w24
   1cb4c:	lsr	w25, w25, #31
   1cb50:	cbz	w24, 1cba0 <__sanitizer_set_report_fd@@Base+0x67f0>
   1cb54:	mov	w19, #0x0                   	// #0
   1cb58:	mov	x1, x22
   1cb5c:	mov	x0, x21
   1cb60:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1cb64:	add	w19, w19, w0
   1cb68:	ldrb	w2, [x20, #1]!
   1cb6c:	cbz	w2, 1cbac <__sanitizer_set_report_fd@@Base+0x67fc>
   1cb70:	cmp	w25, #0x0
   1cb74:	ccmp	w24, w19, #0x0, ne  // ne = any
   1cb78:	b.gt	1cb58 <__sanitizer_set_report_fd@@Base+0x67a8>
   1cb7c:	ldr	x25, [sp, #48]
   1cb80:	b	1cbb0 <__sanitizer_set_report_fd@@Base+0x6800>
   1cb84:	str	x25, [sp, #48]
   1cb88:	mov	w2, #0x3c                  	// #60
   1cb8c:	adrp	x20, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cb90:	add	x20, x20, #0x650
   1cb94:	b	1cb48 <__sanitizer_set_report_fd@@Base+0x6798>
   1cb98:	mov	w19, #0x0                   	// #0
   1cb9c:	b	1cbb0 <__sanitizer_set_report_fd@@Base+0x6800>
   1cba0:	mov	w19, w24
   1cba4:	ldr	x25, [sp, #48]
   1cba8:	b	1cbb0 <__sanitizer_set_report_fd@@Base+0x6800>
   1cbac:	ldr	x25, [sp, #48]
   1cbb0:	neg	w0, w19
   1cbb4:	cmp	w23, w0
   1cbb8:	b.ge	1cbe0 <__sanitizer_set_report_fd@@Base+0x6830>  // b.tcont
   1cbbc:	mov	w20, #0x20                  	// #32
   1cbc0:	mov	w2, w20
   1cbc4:	mov	x1, x22
   1cbc8:	mov	x0, x21
   1cbcc:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1cbd0:	add	w19, w19, w0
   1cbd4:	neg	w0, w19
   1cbd8:	cmp	w0, w23
   1cbdc:	b.gt	1cbc0 <__sanitizer_set_report_fd@@Base+0x6810>
   1cbe0:	mov	w0, w19
   1cbe4:	ldp	x21, x22, [sp, #16]
   1cbe8:	ldp	x23, x24, [sp, #32]
   1cbec:	ldr	x30, [sp, #56]
   1cbf0:	ldp	x19, x20, [sp], #64
   1cbf4:	ret
   1cbf8:	stp	x19, x20, [sp, #-352]!
   1cbfc:	stp	x21, x22, [sp, #16]
   1cc00:	stp	x23, x24, [sp, #32]
   1cc04:	stp	x25, x26, [sp, #48]
   1cc08:	stp	x27, x28, [sp, #64]
   1cc0c:	str	x30, [sp, #80]
   1cc10:	mov	x22, x0
   1cc14:	and	w26, w3, #0xff
   1cc18:	and	w0, w7, #0xff
   1cc1c:	str	w0, [sp, #108]
   1cc20:	cmp	w26, #0xa
   1cc24:	cset	w0, ne  // ne = any
   1cc28:	cmp	w0, #0x0
   1cc2c:	ccmp	w26, #0x10, #0x4, ne  // ne = any
   1cc30:	b.ne	1ccd8 <__sanitizer_set_report_fd@@Base+0x6928>  // b.any
   1cc34:	mov	x23, x1
   1cc38:	mov	x19, x2
   1cc3c:	and	w20, w4, #0xff
   1cc40:	and	w25, w5, #0xff
   1cc44:	and	w24, w6, #0xff
   1cc48:	cmp	w0, #0x0
   1cc4c:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1cc50:	b.ne	1cce8 <__sanitizer_set_report_fd@@Base+0x6938>  // b.any
   1cc54:	cmp	x2, #0x0
   1cc58:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   1cc5c:	b.ne	1ccf8 <__sanitizer_set_report_fd@@Base+0x6948>  // b.any
   1cc60:	cmp	w20, #0x1d
   1cc64:	b.hi	1cd08 <__sanitizer_set_report_fd@@Base+0x6958>  // b.pmore
   1cc68:	cmp	w20, #0x0
   1cc6c:	sub	w0, w20, #0x1
   1cc70:	and	w0, w0, #0xff
   1cc74:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1cc78:	csel	w20, w0, w20, ne  // ne = any
   1cc7c:	cmp	w24, #0x0
   1cc80:	mov	w21, #0x0                   	// #0
   1cc84:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1cc88:	b.ne	1cd18 <__sanitizer_set_report_fd@@Base+0x6968>  // b.any
   1cc8c:	mov	x1, #0x1                   	// #1
   1cc90:	and	x2, x26, #0xff
   1cc94:	add	x6, sp, #0x70
   1cc98:	mov	w0, w1
   1cc9c:	add	x4, x6, x1, lsl #3
   1cca0:	udiv	x3, x19, x2
   1cca4:	msub	x5, x3, x2, x19
   1cca8:	stur	x5, [x4, #-8]
   1ccac:	mov	x4, x19
   1ccb0:	mov	x19, x3
   1ccb4:	cmp	x2, x4
   1ccb8:	b.hi	1cd2c <__sanitizer_set_report_fd@@Base+0x697c>  // b.pmore
   1ccbc:	add	x1, x1, #0x1
   1ccc0:	cmp	x1, #0x1f
   1ccc4:	b.ne	1cc98 <__sanitizer_set_report_fd@@Base+0x68e8>  // b.any
   1ccc8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cccc:	add	x0, x0, #0x6d0
   1ccd0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ccd4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ccd8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ccdc:	add	x0, x0, #0x658
   1cce0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1cce4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cce8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ccec:	add	x0, x0, #0x678
   1ccf0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ccf4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ccf8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ccfc:	add	x0, x0, #0x690
   1cd00:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1cd04:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cd08:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cd0c:	add	x0, x0, #0x6b0
   1cd10:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1cd14:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cd18:	mov	w2, #0x2d                  	// #45
   1cd1c:	mov	x0, x22
   1cd20:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1cd24:	mov	w21, w0
   1cd28:	b	1cc8c <__sanitizer_set_report_fd@@Base+0x68dc>
   1cd2c:	cmp	w20, w1
   1cd30:	b.gt	1cda8 <__sanitizer_set_report_fd@@Base+0x69f8>
   1cd34:	sub	w19, w0, #0x1
   1cd38:	sxtw	x19, w19
   1cd3c:	cmp	w0, #0x0
   1cd40:	b.le	1cdc8 <__sanitizer_set_report_fd@@Base+0x6a18>
   1cd44:	add	x27, sp, #0x70
   1cd48:	mov	w28, #0x30                  	// #48
   1cd4c:	mov	w20, w19
   1cd50:	ldr	x0, [x27, x19, lsl #3]
   1cd54:	cbnz	x0, 1cdd8 <__sanitizer_set_report_fd@@Base+0x6a28>
   1cd58:	cmp	w19, #0x0
   1cd5c:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   1cd60:	mov	w0, #0x20                  	// #32
   1cd64:	csel	w2, w28, w0, ne  // ne = any
   1cd68:	mov	x1, x23
   1cd6c:	mov	x0, x22
   1cd70:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1cd74:	add	w21, w21, w0
   1cd78:	sub	w20, w19, #0x1
   1cd7c:	sub	x19, x19, #0x1
   1cd80:	tbz	w19, #31, 1cd4c <__sanitizer_set_report_fd@@Base+0x699c>
   1cd84:	eor	w25, w25, #0x1
   1cd88:	tst	w24, w25
   1cd8c:	b.eq	1ce44 <__sanitizer_set_report_fd@@Base+0x6a94>  // b.none
   1cd90:	mov	w2, #0x2d                  	// #45
   1cd94:	mov	x1, x23
   1cd98:	mov	x0, x22
   1cd9c:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1cda0:	add	w21, w21, w0
   1cda4:	b	1cde4 <__sanitizer_set_report_fd@@Base+0x6a34>
   1cda8:	sub	w2, w20, w1
   1cdac:	sbfiz	x2, x2, #3, #32
   1cdb0:	mov	w1, #0x0                   	// #0
   1cdb4:	add	x3, sp, #0x70
   1cdb8:	add	x0, x3, w0, sxtw #3
   1cdbc:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1cdc0:	mov	w0, w20
   1cdc4:	b	1cd34 <__sanitizer_set_report_fd@@Base+0x6984>
   1cdc8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cdcc:	add	x0, x0, #0x6f0
   1cdd0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1cdd4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cdd8:	eor	w25, w25, #0x1
   1cddc:	tst	w24, w25
   1cde0:	b.ne	1cd90 <__sanitizer_set_report_fd@@Base+0x69e0>  // b.any
   1cde4:	tbnz	w20, #31, 1ce44 <__sanitizer_set_report_fd@@Base+0x6a94>
   1cde8:	ldr	w0, [sp, #108]
   1cdec:	cmp	w0, #0x0
   1cdf0:	mov	w19, #0x41                  	// #65
   1cdf4:	mov	w0, #0x61                  	// #97
   1cdf8:	csel	w19, w19, w0, ne  // ne = any
   1cdfc:	and	w19, w19, #0xff
   1ce00:	sxtw	x20, w20
   1ce04:	add	x24, sp, #0x70
   1ce08:	sub	w19, w19, #0xa
   1ce0c:	ldr	x0, [x24, x20, lsl #3]
   1ce10:	and	w0, w0, #0xff
   1ce14:	add	w1, w0, #0x30
   1ce18:	and	w1, w1, #0xff
   1ce1c:	add	w2, w0, w19
   1ce20:	and	w2, w2, #0xff
   1ce24:	cmp	w0, #0x9
   1ce28:	csel	w2, w2, w1, hi  // hi = pmore
   1ce2c:	mov	x1, x23
   1ce30:	mov	x0, x22
   1ce34:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1ce38:	add	w21, w21, w0
   1ce3c:	sub	x20, x20, #0x1
   1ce40:	tbz	w20, #31, 1ce0c <__sanitizer_set_report_fd@@Base+0x6a5c>
   1ce44:	mov	w0, w21
   1ce48:	ldp	x21, x22, [sp, #16]
   1ce4c:	ldp	x23, x24, [sp, #32]
   1ce50:	ldp	x25, x26, [sp, #48]
   1ce54:	ldp	x27, x28, [sp, #64]
   1ce58:	ldr	x30, [sp, #80]
   1ce5c:	ldp	x19, x20, [sp], #352
   1ce60:	ret
   1ce64:	stp	x19, x20, [sp, #-144]!
   1ce68:	stp	x21, x22, [sp, #16]
   1ce6c:	stp	x23, x24, [sp, #32]
   1ce70:	stp	x27, x28, [sp, #64]
   1ce74:	str	x30, [sp, #80]
   1ce78:	str	x0, [sp, #136]
   1ce7c:	cbz	x2, 1cedc <__sanitizer_set_report_fd@@Base+0x6b2c>
   1ce80:	mov	x19, x2
   1ce84:	cmp	w1, #0x0
   1ce88:	b.le	1cef0 <__sanitizer_set_report_fd@@Base+0x6b40>
   1ce8c:	ldr	x28, [sp, #136]
   1ce90:	sxtw	x0, w1
   1ce94:	str	x0, [sp, #128]
   1ce98:	sub	x24, x0, #0x1
   1ce9c:	add	x24, x28, x24
   1cea0:	ldrb	w2, [x2]
   1cea4:	cbz	w2, 1d508 <__sanitizer_set_report_fd@@Base+0x7158>
   1cea8:	stp	x25, x26, [sp, #48]
   1ceac:	ldr	x23, [x3]
   1ceb0:	ldr	x0, [x3, #8]
   1ceb4:	str	x0, [sp, #112]
   1ceb8:	ldr	w25, [x3, #24]
   1cebc:	mov	w22, #0x0                   	// #0
   1cec0:	mov	w21, #0x0                   	// #0
   1cec4:	mov	w26, #0xffffffff            	// #-1
   1cec8:	add	x27, sp, #0x88
   1cecc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ced0:	add	x0, x0, #0x7e8
   1ced4:	str	x0, [sp, #104]
   1ced8:	b	1cf24 <__sanitizer_set_report_fd@@Base+0x6b74>
   1cedc:	stp	x25, x26, [sp, #48]
   1cee0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cee4:	add	x0, x0, #0x6f8
   1cee8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ceec:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cef0:	stp	x25, x26, [sp, #48]
   1cef4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1cef8:	add	x0, x0, #0x700
   1cefc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1cf00:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1cf04:	mov	x1, x24
   1cf08:	mov	x0, x27
   1cf0c:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1cf10:	add	w22, w22, w0
   1cf14:	mov	x20, x19
   1cf18:	add	x19, x20, #0x1
   1cf1c:	ldrb	w2, [x20, #1]
   1cf20:	cbz	w2, 1d4c8 <__sanitizer_set_report_fd@@Base+0x7118>
   1cf24:	cmp	w2, #0x25
   1cf28:	b.ne	1cf04 <__sanitizer_set_report_fd@@Base+0x6b54>  // b.any
   1cf2c:	ldrb	w8, [x19, #1]
   1cf30:	cmp	w8, #0x2d
   1cf34:	cinc	x19, x19, eq  // eq = none
   1cf38:	ldrb	w1, [x19, #1]!
   1cf3c:	sub	w4, w1, #0x30
   1cf40:	and	w4, w4, #0xff
   1cf44:	cmp	w4, #0x9
   1cf48:	cset	w6, ls  // ls = plast
   1cf4c:	cmp	w1, #0x30
   1cf50:	cset	w5, eq  // eq = none
   1cf54:	mov	w0, w21
   1cf58:	cmp	w4, #0x9
   1cf5c:	b.ls	1cfa4 <__sanitizer_set_report_fd@@Base+0x6bf4>  // b.plast
   1cf60:	ldrb	w1, [x19]
   1cf64:	mov	w3, w26
   1cf68:	cmp	w1, #0x2e
   1cf6c:	b.eq	1cfc8 <__sanitizer_set_report_fd@@Base+0x6c18>  // b.none
   1cf70:	ldrb	w1, [x19]
   1cf74:	cmp	w1, #0x7a
   1cf78:	cset	w2, eq  // eq = none
   1cf7c:	cinc	x19, x19, eq  // eq = none
   1cf80:	b.eq	1cfd8 <__sanitizer_set_report_fd@@Base+0x6c28>  // b.none
   1cf84:	ldrb	w1, [x19]
   1cf88:	cmp	w1, #0x6c
   1cf8c:	b.ne	1cfd8 <__sanitizer_set_report_fd@@Base+0x6c28>  // b.any
   1cf90:	ldrb	w1, [x19, #1]
   1cf94:	mov	w7, #0x1                   	// #1
   1cf98:	cmp	w1, #0x6c
   1cf9c:	b.ne	1cfd8 <__sanitizer_set_report_fd@@Base+0x6c28>  // b.any
   1cfa0:	b	1cfdc <__sanitizer_set_report_fd@@Base+0x6c2c>
   1cfa4:	add	w0, w0, w0, lsl #2
   1cfa8:	add	w0, w1, w0, lsl #1
   1cfac:	sub	w0, w0, #0x30
   1cfb0:	ldrb	w1, [x19, #1]!
   1cfb4:	sub	w2, w1, #0x30
   1cfb8:	and	w2, w2, #0xff
   1cfbc:	cmp	w2, #0x9
   1cfc0:	b.ls	1cfa4 <__sanitizer_set_report_fd@@Base+0x6bf4>  // b.plast
   1cfc4:	b	1cf60 <__sanitizer_set_report_fd@@Base+0x6bb0>
   1cfc8:	ldrb	w1, [x19, #1]
   1cfcc:	mov	w2, w21
   1cfd0:	cmp	w1, #0x2a
   1cfd4:	b.eq	1d048 <__sanitizer_set_report_fd@@Base+0x6c98>  // b.none
   1cfd8:	mov	w7, w21
   1cfdc:	lsl	w1, w7, #1
   1cfe0:	add	x20, x19, w1, sxtw
   1cfe4:	orr	w2, w7, w2
   1cfe8:	orr	w6, w6, w2
   1cfec:	cmp	w8, #0x2d
   1cff0:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   1cff4:	b.lt	1d0b4 <__sanitizer_set_report_fd@@Base+0x6d04>  // b.tstop
   1cff8:	ldrb	w1, [x19, w1, sxtw]
   1cffc:	cmp	w1, #0x73
   1d000:	b.ne	1d094 <__sanitizer_set_report_fd@@Base+0x6ce4>  // b.any
   1d004:	cbnz	w2, 1d408 <__sanitizer_set_report_fd@@Base+0x7058>
   1d008:	cmp	w8, #0x2d
   1d00c:	ccmp	w4, #0x9, #0x2, ne  // ne = any
   1d010:	b.ls	1d418 <__sanitizer_set_report_fd@@Base+0x7068>  // b.plast
   1d014:	cmp	w8, #0x2d
   1d018:	cneg	w0, w0, eq  // eq = none
   1d01c:	tbnz	w25, #31, 1d438 <__sanitizer_set_report_fd@@Base+0x7088>
   1d020:	add	x2, x23, #0xf
   1d024:	mov	x1, x23
   1d028:	and	x23, x2, #0xfffffffffffffff8
   1d02c:	ldr	x4, [x1]
   1d030:	mov	w2, w0
   1d034:	mov	x1, x24
   1d038:	mov	x0, x27
   1d03c:	bl	1cb14 <__sanitizer_set_report_fd@@Base+0x6764>
   1d040:	add	w22, w22, w0
   1d044:	b	1cf18 <__sanitizer_set_report_fd@@Base+0x6b68>
   1d048:	add	x19, x19, #0x2
   1d04c:	tbnz	w25, #31, 1d064 <__sanitizer_set_report_fd@@Base+0x6cb4>
   1d050:	add	x2, x23, #0xb
   1d054:	mov	x1, x23
   1d058:	and	x23, x2, #0xfffffffffffffff8
   1d05c:	ldr	w3, [x1]
   1d060:	b	1cf70 <__sanitizer_set_report_fd@@Base+0x6bc0>
   1d064:	add	w2, w25, #0x8
   1d068:	cmp	w2, #0x0
   1d06c:	b.le	1d084 <__sanitizer_set_report_fd@@Base+0x6cd4>
   1d070:	add	x3, x23, #0xb
   1d074:	mov	w25, w2
   1d078:	mov	x1, x23
   1d07c:	and	x23, x3, #0xfffffffffffffff8
   1d080:	b	1d05c <__sanitizer_set_report_fd@@Base+0x6cac>
   1d084:	ldr	x1, [sp, #112]
   1d088:	add	x1, x1, w25, sxtw
   1d08c:	mov	w25, w2
   1d090:	b	1d05c <__sanitizer_set_report_fd@@Base+0x6cac>
   1d094:	mov	x4, #0x0                   	// #0
   1d098:	mov	x3, #0x0                   	// #0
   1d09c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d0a0:	add	x2, x2, #0x710
   1d0a4:	mov	w1, #0xa9                  	// #169
   1d0a8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d0ac:	add	x0, x0, #0x750
   1d0b0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1d0b4:	ldrb	w1, [x19, w1, sxtw]
   1d0b8:	cmp	w1, #0x64
   1d0bc:	b.eq	1d1fc <__sanitizer_set_report_fd@@Base+0x6e4c>  // b.none
   1d0c0:	b.hi	1d124 <__sanitizer_set_report_fd@@Base+0x6d74>  // b.pmore
   1d0c4:	cmp	w1, #0x58
   1d0c8:	b.eq	1d140 <__sanitizer_set_report_fd@@Base+0x6d90>  // b.none
   1d0cc:	cmp	w1, #0x63
   1d0d0:	b.ne	1d100 <__sanitizer_set_report_fd@@Base+0x6d50>  // b.any
   1d0d4:	cbnz	w6, 1d468 <__sanitizer_set_report_fd@@Base+0x70b8>
   1d0d8:	tbnz	w25, #31, 1d478 <__sanitizer_set_report_fd@@Base+0x70c8>
   1d0dc:	add	x1, x23, #0xb
   1d0e0:	mov	x0, x23
   1d0e4:	and	x23, x1, #0xfffffffffffffff8
   1d0e8:	ldrb	w2, [x0]
   1d0ec:	mov	x1, x24
   1d0f0:	mov	x0, x27
   1d0f4:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1d0f8:	add	w22, w22, w0
   1d0fc:	b	1cf18 <__sanitizer_set_report_fd@@Base+0x6b68>
   1d100:	cmp	w1, #0x25
   1d104:	b.ne	1d4b8 <__sanitizer_set_report_fd@@Base+0x7108>  // b.any
   1d108:	cbnz	w6, 1d4a8 <__sanitizer_set_report_fd@@Base+0x70f8>
   1d10c:	mov	w2, #0x25                  	// #37
   1d110:	mov	x1, x24
   1d114:	mov	x0, x27
   1d118:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1d11c:	add	w22, w22, w0
   1d120:	b	1cf18 <__sanitizer_set_report_fd@@Base+0x6b68>
   1d124:	cmp	w1, #0x73
   1d128:	b.eq	1d004 <__sanitizer_set_report_fd@@Base+0x6c54>  // b.none
   1d12c:	b.ls	1d18c <__sanitizer_set_report_fd@@Base+0x6ddc>  // b.plast
   1d130:	cmp	w1, #0x75
   1d134:	b.eq	1d140 <__sanitizer_set_report_fd@@Base+0x6d90>  // b.none
   1d138:	cmp	w1, #0x78
   1d13c:	b.ne	1d4b8 <__sanitizer_set_report_fd@@Base+0x7108>  // b.any
   1d140:	cbz	w7, 1d334 <__sanitizer_set_report_fd@@Base+0x6f84>
   1d144:	tbnz	w25, #31, 1d304 <__sanitizer_set_report_fd@@Base+0x6f54>
   1d148:	add	x3, x23, #0xf
   1d14c:	mov	x2, x23
   1d150:	and	x23, x3, #0xfffffffffffffff8
   1d154:	ldr	x2, [x2]
   1d158:	cmp	w1, #0x58
   1d15c:	cset	w7, eq  // eq = none
   1d160:	cmp	w1, #0x75
   1d164:	mov	w6, #0x0                   	// #0
   1d168:	mov	w4, w0
   1d16c:	mov	w3, #0xa                   	// #10
   1d170:	mov	w0, #0x10                  	// #16
   1d174:	csel	w3, w3, w0, eq  // eq = none
   1d178:	mov	x1, x24
   1d17c:	mov	x0, x27
   1d180:	bl	1cbf8 <__sanitizer_set_report_fd@@Base+0x6848>
   1d184:	add	w22, w22, w0
   1d188:	b	1cf18 <__sanitizer_set_report_fd@@Base+0x6b68>
   1d18c:	cmp	w1, #0x70
   1d190:	b.ne	1d4b8 <__sanitizer_set_report_fd@@Base+0x7108>  // b.any
   1d194:	cbnz	w6, 1d3c8 <__sanitizer_set_report_fd@@Base+0x7018>
   1d198:	tbnz	w25, #31, 1d3d8 <__sanitizer_set_report_fd@@Base+0x7028>
   1d19c:	add	x1, x23, #0xf
   1d1a0:	mov	x0, x23
   1d1a4:	and	x23, x1, #0xfffffffffffffff8
   1d1a8:	ldr	x19, [x0]
   1d1ac:	ldr	x4, [sp, #104]
   1d1b0:	mov	w3, w26
   1d1b4:	mov	w2, w21
   1d1b8:	mov	x1, x24
   1d1bc:	mov	x0, x27
   1d1c0:	bl	1cb14 <__sanitizer_set_report_fd@@Base+0x6764>
   1d1c4:	str	w0, [sp, #124]
   1d1c8:	mov	w7, #0x0                   	// #0
   1d1cc:	mov	w6, #0x0                   	// #0
   1d1d0:	mov	w5, #0x1                   	// #1
   1d1d4:	mov	w4, #0xc                   	// #12
   1d1d8:	mov	w3, #0x10                  	// #16
   1d1dc:	mov	x2, x19
   1d1e0:	mov	x1, x24
   1d1e4:	mov	x0, x27
   1d1e8:	bl	1cbf8 <__sanitizer_set_report_fd@@Base+0x6848>
   1d1ec:	ldr	w1, [sp, #124]
   1d1f0:	add	w0, w1, w0
   1d1f4:	add	w22, w22, w0
   1d1f8:	b	1cf18 <__sanitizer_set_report_fd@@Base+0x6b68>
   1d1fc:	cbz	w7, 1d270 <__sanitizer_set_report_fd@@Base+0x6ec0>
   1d200:	tbnz	w25, #31, 1d240 <__sanitizer_set_report_fd@@Base+0x6e90>
   1d204:	add	x2, x23, #0xf
   1d208:	mov	x1, x23
   1d20c:	and	x23, x2, #0xfffffffffffffff8
   1d210:	ldr	x2, [x1]
   1d214:	cmp	x2, #0x0
   1d218:	mov	w7, #0x0                   	// #0
   1d21c:	lsr	x6, x2, #63
   1d220:	mov	w4, w0
   1d224:	mov	w3, #0xa                   	// #10
   1d228:	cneg	x2, x2, lt  // lt = tstop
   1d22c:	mov	x1, x24
   1d230:	mov	x0, x27
   1d234:	bl	1cbf8 <__sanitizer_set_report_fd@@Base+0x6848>
   1d238:	add	w22, w22, w0
   1d23c:	b	1cf18 <__sanitizer_set_report_fd@@Base+0x6b68>
   1d240:	add	w2, w25, #0x8
   1d244:	cmp	w2, #0x0
   1d248:	b.le	1d260 <__sanitizer_set_report_fd@@Base+0x6eb0>
   1d24c:	add	x3, x23, #0xf
   1d250:	mov	w25, w2
   1d254:	mov	x1, x23
   1d258:	and	x23, x3, #0xfffffffffffffff8
   1d25c:	b	1d210 <__sanitizer_set_report_fd@@Base+0x6e60>
   1d260:	ldr	x1, [sp, #112]
   1d264:	add	x1, x1, w25, sxtw
   1d268:	mov	w25, w2
   1d26c:	b	1d210 <__sanitizer_set_report_fd@@Base+0x6e60>
   1d270:	cbnz	w2, 1d28c <__sanitizer_set_report_fd@@Base+0x6edc>
   1d274:	tbnz	w25, #31, 1d2d4 <__sanitizer_set_report_fd@@Base+0x6f24>
   1d278:	add	x2, x23, #0xb
   1d27c:	mov	x1, x23
   1d280:	and	x23, x2, #0xfffffffffffffff8
   1d284:	ldrsw	x2, [x1]
   1d288:	b	1d214 <__sanitizer_set_report_fd@@Base+0x6e64>
   1d28c:	tbnz	w25, #31, 1d2a4 <__sanitizer_set_report_fd@@Base+0x6ef4>
   1d290:	add	x2, x23, #0xf
   1d294:	mov	x1, x23
   1d298:	and	x23, x2, #0xfffffffffffffff8
   1d29c:	ldr	x2, [x1]
   1d2a0:	b	1d214 <__sanitizer_set_report_fd@@Base+0x6e64>
   1d2a4:	add	w2, w25, #0x8
   1d2a8:	cmp	w2, #0x0
   1d2ac:	b.le	1d2c4 <__sanitizer_set_report_fd@@Base+0x6f14>
   1d2b0:	add	x3, x23, #0xf
   1d2b4:	mov	w25, w2
   1d2b8:	mov	x1, x23
   1d2bc:	and	x23, x3, #0xfffffffffffffff8
   1d2c0:	b	1d29c <__sanitizer_set_report_fd@@Base+0x6eec>
   1d2c4:	ldr	x1, [sp, #112]
   1d2c8:	add	x1, x1, w25, sxtw
   1d2cc:	mov	w25, w2
   1d2d0:	b	1d29c <__sanitizer_set_report_fd@@Base+0x6eec>
   1d2d4:	add	w2, w25, #0x8
   1d2d8:	cmp	w2, #0x0
   1d2dc:	b.le	1d2f4 <__sanitizer_set_report_fd@@Base+0x6f44>
   1d2e0:	add	x3, x23, #0xb
   1d2e4:	mov	w25, w2
   1d2e8:	mov	x1, x23
   1d2ec:	and	x23, x3, #0xfffffffffffffff8
   1d2f0:	b	1d284 <__sanitizer_set_report_fd@@Base+0x6ed4>
   1d2f4:	ldr	x1, [sp, #112]
   1d2f8:	add	x1, x1, w25, sxtw
   1d2fc:	mov	w25, w2
   1d300:	b	1d284 <__sanitizer_set_report_fd@@Base+0x6ed4>
   1d304:	add	w3, w25, #0x8
   1d308:	cmp	w3, #0x0
   1d30c:	b.le	1d324 <__sanitizer_set_report_fd@@Base+0x6f74>
   1d310:	add	x4, x23, #0xf
   1d314:	mov	w25, w3
   1d318:	mov	x2, x23
   1d31c:	and	x23, x4, #0xfffffffffffffff8
   1d320:	b	1d154 <__sanitizer_set_report_fd@@Base+0x6da4>
   1d324:	ldr	x2, [sp, #112]
   1d328:	add	x2, x2, w25, sxtw
   1d32c:	mov	w25, w3
   1d330:	b	1d154 <__sanitizer_set_report_fd@@Base+0x6da4>
   1d334:	cbnz	w2, 1d350 <__sanitizer_set_report_fd@@Base+0x6fa0>
   1d338:	tbnz	w25, #31, 1d398 <__sanitizer_set_report_fd@@Base+0x6fe8>
   1d33c:	add	x3, x23, #0xb
   1d340:	mov	x2, x23
   1d344:	and	x23, x3, #0xfffffffffffffff8
   1d348:	ldr	w2, [x2]
   1d34c:	b	1d158 <__sanitizer_set_report_fd@@Base+0x6da8>
   1d350:	tbnz	w25, #31, 1d368 <__sanitizer_set_report_fd@@Base+0x6fb8>
   1d354:	add	x3, x23, #0xf
   1d358:	mov	x2, x23
   1d35c:	and	x23, x3, #0xfffffffffffffff8
   1d360:	ldr	x2, [x2]
   1d364:	b	1d158 <__sanitizer_set_report_fd@@Base+0x6da8>
   1d368:	add	w3, w25, #0x8
   1d36c:	cmp	w3, #0x0
   1d370:	b.le	1d388 <__sanitizer_set_report_fd@@Base+0x6fd8>
   1d374:	add	x4, x23, #0xf
   1d378:	mov	w25, w3
   1d37c:	mov	x2, x23
   1d380:	and	x23, x4, #0xfffffffffffffff8
   1d384:	b	1d360 <__sanitizer_set_report_fd@@Base+0x6fb0>
   1d388:	ldr	x2, [sp, #112]
   1d38c:	add	x2, x2, w25, sxtw
   1d390:	mov	w25, w3
   1d394:	b	1d360 <__sanitizer_set_report_fd@@Base+0x6fb0>
   1d398:	add	w3, w25, #0x8
   1d39c:	cmp	w3, #0x0
   1d3a0:	b.le	1d3b8 <__sanitizer_set_report_fd@@Base+0x7008>
   1d3a4:	add	x4, x23, #0xb
   1d3a8:	mov	w25, w3
   1d3ac:	mov	x2, x23
   1d3b0:	and	x23, x4, #0xfffffffffffffff8
   1d3b4:	b	1d348 <__sanitizer_set_report_fd@@Base+0x6f98>
   1d3b8:	ldr	x2, [sp, #112]
   1d3bc:	add	x2, x2, w25, sxtw
   1d3c0:	mov	w25, w3
   1d3c4:	b	1d348 <__sanitizer_set_report_fd@@Base+0x6f98>
   1d3c8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d3cc:	add	x0, x0, #0x790
   1d3d0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d3d4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d3d8:	add	w1, w25, #0x8
   1d3dc:	cmp	w1, #0x0
   1d3e0:	b.le	1d3f8 <__sanitizer_set_report_fd@@Base+0x7048>
   1d3e4:	add	x2, x23, #0xf
   1d3e8:	mov	w25, w1
   1d3ec:	mov	x0, x23
   1d3f0:	and	x23, x2, #0xfffffffffffffff8
   1d3f4:	b	1d1a8 <__sanitizer_set_report_fd@@Base+0x6df8>
   1d3f8:	ldr	x0, [sp, #112]
   1d3fc:	add	x0, x0, w25, sxtw
   1d400:	mov	w25, w1
   1d404:	b	1d1a8 <__sanitizer_set_report_fd@@Base+0x6df8>
   1d408:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d40c:	add	x0, x0, #0x790
   1d410:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d414:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d418:	mov	x4, #0x0                   	// #0
   1d41c:	mov	x3, #0x0                   	// #0
   1d420:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d424:	add	x2, x2, #0x7f0
   1d428:	mov	w1, #0xc6                  	// #198
   1d42c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d430:	add	x0, x0, #0x750
   1d434:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1d438:	add	w2, w25, #0x8
   1d43c:	cmp	w2, #0x0
   1d440:	b.le	1d458 <__sanitizer_set_report_fd@@Base+0x70a8>
   1d444:	add	x4, x23, #0xf
   1d448:	mov	w25, w2
   1d44c:	mov	x1, x23
   1d450:	and	x23, x4, #0xfffffffffffffff8
   1d454:	b	1d02c <__sanitizer_set_report_fd@@Base+0x6c7c>
   1d458:	ldr	x1, [sp, #112]
   1d45c:	add	x1, x1, w25, sxtw
   1d460:	mov	w25, w2
   1d464:	b	1d02c <__sanitizer_set_report_fd@@Base+0x6c7c>
   1d468:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d46c:	add	x0, x0, #0x790
   1d470:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d474:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d478:	add	w1, w25, #0x8
   1d47c:	cmp	w1, #0x0
   1d480:	b.le	1d498 <__sanitizer_set_report_fd@@Base+0x70e8>
   1d484:	add	x2, x23, #0xb
   1d488:	mov	w25, w1
   1d48c:	mov	x0, x23
   1d490:	and	x23, x2, #0xfffffffffffffff8
   1d494:	b	1d0e8 <__sanitizer_set_report_fd@@Base+0x6d38>
   1d498:	ldr	x0, [sp, #112]
   1d49c:	add	x0, x0, w25, sxtw
   1d4a0:	mov	w25, w1
   1d4a4:	b	1d0e8 <__sanitizer_set_report_fd@@Base+0x6d38>
   1d4a8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d4ac:	add	x0, x0, #0x790
   1d4b0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d4b4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d4b8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d4bc:	add	x0, x0, #0x790
   1d4c0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d4c4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d4c8:	ldp	x25, x26, [sp, #48]
   1d4cc:	ldr	x0, [sp, #136]
   1d4d0:	cmp	x0, x24
   1d4d4:	b.hi	1d510 <__sanitizer_set_report_fd@@Base+0x7160>  // b.pmore
   1d4d8:	mov	w2, #0x0                   	// #0
   1d4dc:	ldr	x0, [sp, #128]
   1d4e0:	add	x1, x28, x0
   1d4e4:	add	x0, sp, #0x88
   1d4e8:	bl	1caec <__sanitizer_set_report_fd@@Base+0x673c>
   1d4ec:	mov	w0, w22
   1d4f0:	ldp	x21, x22, [sp, #16]
   1d4f4:	ldp	x23, x24, [sp, #32]
   1d4f8:	ldp	x27, x28, [sp, #64]
   1d4fc:	ldr	x30, [sp, #80]
   1d500:	ldp	x19, x20, [sp], #144
   1d504:	ret
   1d508:	mov	w22, #0x0                   	// #0
   1d50c:	b	1d4cc <__sanitizer_set_report_fd@@Base+0x711c>
   1d510:	stp	x25, x26, [sp, #48]
   1d514:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d518:	add	x0, x0, #0x820
   1d51c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d520:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d524:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1d528:	str	x0, [x1, #3272]
   1d52c:	ret

000000000001d530 <OnPrint@@Base>:
   1d530:	ret
   1d534:	sub	sp, sp, #0x100
   1d538:	str	x30, [sp]
   1d53c:	str	x3, [sp, #216]
   1d540:	str	x4, [sp, #224]
   1d544:	str	x5, [sp, #232]
   1d548:	str	x6, [sp, #240]
   1d54c:	str	x7, [sp, #248]
   1d550:	str	q0, [sp, #80]
   1d554:	str	q1, [sp, #96]
   1d558:	str	q2, [sp, #112]
   1d55c:	str	q3, [sp, #128]
   1d560:	str	q4, [sp, #144]
   1d564:	str	q5, [sp, #160]
   1d568:	str	q6, [sp, #176]
   1d56c:	str	q7, [sp, #192]
   1d570:	add	x3, sp, #0x100
   1d574:	str	x3, [sp, #48]
   1d578:	str	x3, [sp, #56]
   1d57c:	add	x3, sp, #0xd0
   1d580:	str	x3, [sp, #64]
   1d584:	mov	w3, #0xffffffd8            	// #-40
   1d588:	str	w3, [sp, #72]
   1d58c:	mov	w3, #0xffffff80            	// #-128
   1d590:	str	w3, [sp, #76]
   1d594:	ldp	x4, x5, [sp, #48]
   1d598:	stp	x4, x5, [sp, #16]
   1d59c:	ldp	x4, x5, [sp, #64]
   1d5a0:	stp	x4, x5, [sp, #32]
   1d5a4:	add	x3, sp, #0x10
   1d5a8:	bl	1ce64 <__sanitizer_set_report_fd@@Base+0x6ab4>
   1d5ac:	ldr	x30, [sp]
   1d5b0:	add	sp, sp, #0x100
   1d5b4:	ret
   1d5b8:	stp	x19, x20, [sp, #-192]!
   1d5bc:	stp	x21, x22, [sp, #16]
   1d5c0:	stp	x23, x24, [sp, #32]
   1d5c4:	stp	x25, x26, [sp, #48]
   1d5c8:	stp	x27, x28, [sp, #64]
   1d5cc:	str	x30, [sp, #80]
   1d5d0:	and	w28, w0, #0xff
   1d5d4:	mov	x23, x1
   1d5d8:	mov	w22, w2
   1d5dc:	str	x3, [sp, #104]
   1d5e0:	mov	x20, x4
   1d5e4:	ldp	x0, x1, [x4]
   1d5e8:	stp	x0, x1, [sp, #160]
   1d5ec:	ldp	x0, x1, [x4, #16]
   1d5f0:	stp	x0, x1, [sp, #176]
   1d5f4:	mov	x19, x23
   1d5f8:	mov	w27, #0x0                   	// #0
   1d5fc:	add	x26, sp, #0x80
   1d600:	adrp	x24, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d604:	ldr	x24, [x24, #4040]
   1d608:	adrp	x25, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d60c:	add	x25, x25, #0x860
   1d610:	cbz	w28, 1d7c0 <OnPrint@@Base+0x290>
   1d614:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   1d618:	str	x0, [sp, #112]
   1d61c:	str	w0, [sp, #124]
   1d620:	bl	12ca8 <__sancov_default_options@@Base+0x2924>
   1d624:	mov	x3, x0
   1d628:	cmp	x0, #0x0
   1d62c:	cset	w1, ne  // ne = any
   1d630:	ldrb	w0, [x24, #48]
   1d634:	mov	w21, #0x0                   	// #0
   1d638:	tst	w1, w0
   1d63c:	b.ne	1d714 <OnPrint@@Base+0x1e4>  // b.any
   1d640:	sub	w1, w22, w21
   1d644:	ldr	w3, [sp, #112]
   1d648:	mov	x2, x25
   1d64c:	sxtw	x1, w1
   1d650:	add	x0, x19, w21, sxtw
   1d654:	bl	1d534 <OnPrint@@Base+0x4>
   1d658:	add	w21, w21, w0
   1d65c:	cmp	w22, w21
   1d660:	b.gt	1d7c4 <OnPrint@@Base+0x294>
   1d664:	cbz	w27, 1d7f8 <OnPrint@@Base+0x2c8>
   1d668:	mov	w0, #0x3fff                	// #16383
   1d66c:	cmp	w21, w0
   1d670:	b.gt	1d7b0 <OnPrint@@Base+0x280>
   1d674:	ldp	x0, x1, [x20]
   1d678:	stp	x0, x1, [sp, #128]
   1d67c:	ldp	x0, x1, [x20, #16]
   1d680:	stp	x0, x1, [sp, #144]
   1d684:	add	x3, sp, #0x80
   1d688:	ldr	x2, [sp, #104]
   1d68c:	sub	w1, w22, w21
   1d690:	add	x0, x19, w21, sxtw
   1d694:	bl	1ce64 <__sanitizer_set_report_fd@@Base+0x6ab4>
   1d698:	add	w0, w0, w21
   1d69c:	cmp	w22, w0
   1d6a0:	b.gt	1d6b0 <OnPrint@@Base+0x180>
   1d6a4:	mov	w1, #0x3fff                	// #16383
   1d6a8:	cmp	w0, w1
   1d6ac:	b.gt	1d82c <OnPrint@@Base+0x2fc>
   1d6b0:	mov	x0, x19
   1d6b4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d6b8:	mov	x0, x19
   1d6bc:	bl	12758 <__sancov_default_options@@Base+0x23d4>
   1d6c0:	mov	x0, x19
   1d6c4:	bl	6680 <OnPrint@plt>
   1d6c8:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1d6cc:	ldr	x1, [x0, #3272]
   1d6d0:	cbz	x1, 1d6dc <OnPrint@@Base+0x1ac>
   1d6d4:	mov	x0, x19
   1d6d8:	blr	x1
   1d6dc:	mov	x0, x19
   1d6e0:	bl	1af48 <__sanitizer_set_report_fd@@Base+0x4b98>
   1d6e4:	cmp	x19, x23
   1d6e8:	b.eq	1d6f8 <OnPrint@@Base+0x1c8>  // b.none
   1d6ec:	sxtw	x1, w22
   1d6f0:	mov	x0, x19
   1d6f4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1d6f8:	ldp	x21, x22, [sp, #16]
   1d6fc:	ldp	x23, x24, [sp, #32]
   1d700:	ldp	x25, x26, [sp, #48]
   1d704:	ldp	x27, x28, [sp, #64]
   1d708:	ldr	x30, [sp, #80]
   1d70c:	ldp	x19, x20, [sp], #192
   1d710:	ret
   1d714:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d718:	add	x2, x2, #0x838
   1d71c:	sxtw	x1, w22
   1d720:	mov	x0, x19
   1d724:	bl	1d534 <OnPrint@@Base+0x4>
   1d728:	mov	w21, w0
   1d72c:	cmp	w22, w0
   1d730:	b.gt	1d640 <OnPrint@@Base+0x110>
   1d734:	cbz	w27, 1d7f8 <OnPrint@@Base+0x2c8>
   1d738:	mov	w0, #0x3fff                	// #16383
   1d73c:	cmp	w21, w0
   1d740:	b.gt	1d7a0 <OnPrint@@Base+0x270>
   1d744:	sub	w1, w22, w21
   1d748:	ldr	w3, [sp, #124]
   1d74c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d750:	add	x2, x2, #0x860
   1d754:	sxtw	x1, w1
   1d758:	add	x0, x19, w21, sxtw
   1d75c:	bl	1d534 <OnPrint@@Base+0x4>
   1d760:	add	w21, w21, w0
   1d764:	cmp	w22, w21
   1d768:	b.le	1d668 <OnPrint@@Base+0x138>
   1d76c:	ldp	x0, x1, [x20]
   1d770:	stp	x0, x1, [sp, #128]
   1d774:	ldp	x0, x1, [x20, #16]
   1d778:	stp	x0, x1, [sp, #144]
   1d77c:	add	x3, sp, #0x80
   1d780:	ldr	x2, [sp, #104]
   1d784:	sub	w1, w22, w21
   1d788:	add	x0, x19, w21, sxtw
   1d78c:	bl	1ce64 <__sanitizer_set_report_fd@@Base+0x6ab4>
   1d790:	add	w0, w21, w0
   1d794:	cmp	w22, w0
   1d798:	b.le	1d6a4 <OnPrint@@Base+0x174>
   1d79c:	b	1d6b0 <OnPrint@@Base+0x180>
   1d7a0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d7a4:	add	x0, x0, #0x840
   1d7a8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d7ac:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d7b0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d7b4:	add	x0, x0, #0x840
   1d7b8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d7bc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d7c0:	mov	w21, #0x0                   	// #0
   1d7c4:	ldp	x0, x1, [x20]
   1d7c8:	stp	x0, x1, [x26]
   1d7cc:	ldp	x0, x1, [x20, #16]
   1d7d0:	stp	x0, x1, [x26, #16]
   1d7d4:	mov	x3, x26
   1d7d8:	ldr	x2, [sp, #104]
   1d7dc:	sub	w1, w22, w21
   1d7e0:	add	x0, x19, w21, sxtw
   1d7e4:	bl	1ce64 <__sanitizer_set_report_fd@@Base+0x6ab4>
   1d7e8:	add	w0, w21, w0
   1d7ec:	cmp	w22, w0
   1d7f0:	b.gt	1d6b0 <OnPrint@@Base+0x180>
   1d7f4:	cbnz	w27, 1d6a4 <OnPrint@@Base+0x174>
   1d7f8:	add	w27, w27, #0x1
   1d7fc:	ldp	x0, x1, [sp, #160]
   1d800:	stp	x0, x1, [x20]
   1d804:	ldp	x0, x1, [sp, #176]
   1d808:	stp	x0, x1, [x20, #16]
   1d80c:	mov	w2, #0x0                   	// #0
   1d810:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d814:	add	x1, x1, #0x868
   1d818:	mov	x0, #0x4000                	// #16384
   1d81c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1d820:	mov	x19, x0
   1d824:	mov	w22, #0x4000                	// #16384
   1d828:	b	1d610 <OnPrint@@Base+0xe0>
   1d82c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1d830:	add	x0, x0, #0x840
   1d834:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1d838:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1d83c:	sub	sp, sp, #0x1c0
   1d840:	str	x30, [sp]
   1d844:	ldp	x4, x5, [x2]
   1d848:	stp	x4, x5, [sp, #16]
   1d84c:	ldp	x2, x3, [x2, #16]
   1d850:	stp	x2, x3, [sp, #32]
   1d854:	add	x4, sp, #0x10
   1d858:	mov	x3, x1
   1d85c:	mov	w2, #0x190                 	// #400
   1d860:	add	x1, sp, #0x30
   1d864:	bl	1d5b8 <OnPrint@@Base+0x88>
   1d868:	ldr	x30, [sp]
   1d86c:	add	sp, sp, #0x1c0
   1d870:	ret
   1d874:	sub	sp, sp, #0x110
   1d878:	str	x30, [sp]
   1d87c:	str	x1, [sp, #216]
   1d880:	str	x2, [sp, #224]
   1d884:	str	x3, [sp, #232]
   1d888:	str	x4, [sp, #240]
   1d88c:	str	x5, [sp, #248]
   1d890:	str	x6, [sp, #256]
   1d894:	str	x7, [sp, #264]
   1d898:	str	q0, [sp, #80]
   1d89c:	str	q1, [sp, #96]
   1d8a0:	str	q2, [sp, #112]
   1d8a4:	str	q3, [sp, #128]
   1d8a8:	str	q4, [sp, #144]
   1d8ac:	str	q5, [sp, #160]
   1d8b0:	str	q6, [sp, #176]
   1d8b4:	str	q7, [sp, #192]
   1d8b8:	add	x1, sp, #0x110
   1d8bc:	str	x1, [sp, #48]
   1d8c0:	str	x1, [sp, #56]
   1d8c4:	add	x1, sp, #0xd0
   1d8c8:	str	x1, [sp, #64]
   1d8cc:	mov	w1, #0xffffffc8            	// #-56
   1d8d0:	str	w1, [sp, #72]
   1d8d4:	mov	w1, #0xffffff80            	// #-128
   1d8d8:	str	w1, [sp, #76]
   1d8dc:	ldp	x2, x3, [sp, #48]
   1d8e0:	stp	x2, x3, [sp, #16]
   1d8e4:	ldp	x2, x3, [sp, #64]
   1d8e8:	stp	x2, x3, [sp, #32]
   1d8ec:	add	x2, sp, #0x10
   1d8f0:	mov	x1, x0
   1d8f4:	mov	w0, #0x0                   	// #0
   1d8f8:	bl	1d83c <OnPrint@@Base+0x30c>
   1d8fc:	ldr	x30, [sp]
   1d900:	add	sp, sp, #0x110
   1d904:	ret
   1d908:	sub	sp, sp, #0x110
   1d90c:	str	x30, [sp]
   1d910:	str	x1, [sp, #216]
   1d914:	str	x2, [sp, #224]
   1d918:	str	x3, [sp, #232]
   1d91c:	str	x4, [sp, #240]
   1d920:	str	x5, [sp, #248]
   1d924:	str	x6, [sp, #256]
   1d928:	str	x7, [sp, #264]
   1d92c:	str	q0, [sp, #80]
   1d930:	str	q1, [sp, #96]
   1d934:	str	q2, [sp, #112]
   1d938:	str	q3, [sp, #128]
   1d93c:	str	q4, [sp, #144]
   1d940:	str	q5, [sp, #160]
   1d944:	str	q6, [sp, #176]
   1d948:	str	q7, [sp, #192]
   1d94c:	add	x1, sp, #0x110
   1d950:	str	x1, [sp, #48]
   1d954:	str	x1, [sp, #56]
   1d958:	add	x1, sp, #0xd0
   1d95c:	str	x1, [sp, #64]
   1d960:	mov	w1, #0xffffffc8            	// #-56
   1d964:	str	w1, [sp, #72]
   1d968:	mov	w1, #0xffffff80            	// #-128
   1d96c:	str	w1, [sp, #76]
   1d970:	ldp	x2, x3, [sp, #48]
   1d974:	stp	x2, x3, [sp, #16]
   1d978:	ldp	x2, x3, [sp, #64]
   1d97c:	stp	x2, x3, [sp, #32]
   1d980:	add	x2, sp, #0x10
   1d984:	mov	x1, x0
   1d988:	mov	w0, #0x1                   	// #1
   1d98c:	bl	1d83c <OnPrint@@Base+0x30c>
   1d990:	ldr	x30, [sp]
   1d994:	add	sp, sp, #0x110
   1d998:	ret
   1d99c:	stp	x19, x30, [sp, #-256]!
   1d9a0:	str	x2, [sp, #208]
   1d9a4:	str	x3, [sp, #216]
   1d9a8:	str	x4, [sp, #224]
   1d9ac:	str	x5, [sp, #232]
   1d9b0:	str	x6, [sp, #240]
   1d9b4:	str	x7, [sp, #248]
   1d9b8:	str	q0, [sp, #80]
   1d9bc:	str	q1, [sp, #96]
   1d9c0:	str	q2, [sp, #112]
   1d9c4:	str	q3, [sp, #128]
   1d9c8:	str	q4, [sp, #144]
   1d9cc:	str	q5, [sp, #160]
   1d9d0:	str	q6, [sp, #176]
   1d9d4:	str	q7, [sp, #192]
   1d9d8:	ldr	x3, [x0, #24]
   1d9dc:	ldr	x4, [x0, #16]
   1d9e0:	cmp	x3, x4
   1d9e4:	b.cs	1da70 <OnPrint@@Base+0x540>  // b.hs, b.nlast
   1d9e8:	mov	x19, x0
   1d9ec:	add	x0, sp, #0x100
   1d9f0:	str	x0, [sp, #48]
   1d9f4:	str	x0, [sp, #56]
   1d9f8:	add	x0, sp, #0xd0
   1d9fc:	str	x0, [sp, #64]
   1da00:	mov	w0, #0xffffffd0            	// #-48
   1da04:	str	w0, [sp, #72]
   1da08:	mov	w0, #0xffffff80            	// #-128
   1da0c:	str	w0, [sp, #76]
   1da10:	ldr	x0, [x19, #24]
   1da14:	ldp	x2, x3, [sp, #48]
   1da18:	stp	x2, x3, [sp, #16]
   1da1c:	ldp	x2, x3, [sp, #64]
   1da20:	stp	x2, x3, [sp, #32]
   1da24:	ldr	x5, [x19, #16]
   1da28:	ldr	x4, [x19]
   1da2c:	add	x3, sp, #0x10
   1da30:	mov	x2, x1
   1da34:	sub	w1, w5, w0
   1da38:	add	x0, x4, x0
   1da3c:	bl	1ce64 <__sanitizer_set_report_fd@@Base+0x6ab4>
   1da40:	ldr	x1, [x19]
   1da44:	ldr	x0, [x19, #24]
   1da48:	add	x0, x1, x0
   1da4c:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   1da50:	ldr	x3, [x19, #24]
   1da54:	add	x3, x0, x3
   1da58:	str	x3, [x19, #24]
   1da5c:	ldr	x4, [x19, #16]
   1da60:	cmp	x3, x4
   1da64:	b.cs	1da88 <OnPrint@@Base+0x558>  // b.hs, b.nlast
   1da68:	ldp	x19, x30, [sp], #256
   1da6c:	ret
   1da70:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1da74:	add	x2, x2, #0x870
   1da78:	mov	w1, #0x15c                 	// #348
   1da7c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1da80:	add	x0, x0, #0x750
   1da84:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1da88:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1da8c:	add	x2, x2, #0x870
   1da90:	mov	w1, #0x162                 	// #354
   1da94:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1da98:	add	x0, x0, #0x750
   1da9c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1daa0:	and	w0, w0, #0xff
   1daa4:	sub	w1, w0, #0x30
   1daa8:	and	w1, w1, #0xff
   1daac:	cmp	w1, #0x9
   1dab0:	b.ls	1dadc <OnPrint@@Base+0x5ac>  // b.plast
   1dab4:	sub	w1, w0, #0x61
   1dab8:	and	w1, w1, #0xff
   1dabc:	cmp	w1, #0x5
   1dac0:	b.ls	1dae4 <OnPrint@@Base+0x5b4>  // b.plast
   1dac4:	sub	w1, w0, #0x41
   1dac8:	and	w1, w1, #0xff
   1dacc:	sub	w0, w0, #0x37
   1dad0:	cmp	w1, #0x6
   1dad4:	csinv	w0, w0, wzr, cc  // cc = lo, ul, last
   1dad8:	ret
   1dadc:	sub	w0, w0, #0x30
   1dae0:	b	1dad8 <OnPrint@@Base+0x5a8>
   1dae4:	sub	w0, w0, #0x57
   1dae8:	b	1dad8 <OnPrint@@Base+0x5a8>
   1daec:	stp	x19, x20, [sp, #-48]!
   1daf0:	stp	x21, x22, [sp, #16]
   1daf4:	stp	x23, x30, [sp, #32]
   1daf8:	mov	x20, x0
   1dafc:	mov	w22, w1
   1db00:	sub	w0, w1, #0x2
   1db04:	mov	x21, #0x0                   	// #0
   1db08:	sxtw	x23, w1
   1db0c:	cmp	w0, #0xe
   1db10:	b.hi	1db40 <OnPrint@@Base+0x610>  // b.pmore
   1db14:	ldr	x19, [x20]
   1db18:	ldrb	w0, [x19]
   1db1c:	bl	1daa0 <OnPrint@@Base+0x570>
   1db20:	cmp	w0, #0x0
   1db24:	ccmp	w22, w0, #0x4, ge  // ge = tcont
   1db28:	b.le	1db60 <OnPrint@@Base+0x630>
   1db2c:	sxtw	x0, w0
   1db30:	madd	x21, x23, x21, x0
   1db34:	add	x19, x19, #0x1
   1db38:	str	x19, [x20]
   1db3c:	b	1db14 <OnPrint@@Base+0x5e4>
   1db40:	mov	x4, #0x0                   	// #0
   1db44:	mov	x3, #0x0                   	// #0
   1db48:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1db4c:	add	x2, x2, #0x890
   1db50:	mov	w1, #0x27                  	// #39
   1db54:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1db58:	add	x0, x0, #0x8b8
   1db5c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1db60:	mov	x0, x21
   1db64:	ldp	x21, x22, [sp, #16]
   1db68:	ldp	x23, x30, [sp, #32]
   1db6c:	ldp	x19, x20, [sp], #48
   1db70:	ret
   1db74:	str	x30, [sp, #-16]!
   1db78:	bl	1daa0 <OnPrint@@Base+0x570>
   1db7c:	cmp	w0, #0x9
   1db80:	cset	w0, ls  // ls = plast
   1db84:	ldr	x30, [sp], #16
   1db88:	ret
   1db8c:	str	x30, [sp, #-16]!
   1db90:	mov	w1, #0xa                   	// #10
   1db94:	bl	1daec <OnPrint@@Base+0x5bc>
   1db98:	ldr	x30, [sp], #16
   1db9c:	ret
   1dba0:	str	x30, [sp, #-16]!
   1dba4:	bl	1daa0 <OnPrint@@Base+0x570>
   1dba8:	cmp	w0, #0xf
   1dbac:	cset	w0, ls  // ls = plast
   1dbb0:	ldr	x30, [sp], #16
   1dbb4:	ret
   1dbb8:	str	x30, [sp, #-16]!
   1dbbc:	mov	w1, #0x10                  	// #16
   1dbc0:	bl	1daec <OnPrint@@Base+0x5bc>
   1dbc4:	ldr	x30, [sp], #16
   1dbc8:	ret
   1dbcc:	str	x30, [sp, #-16]!
   1dbd0:	mov	x6, x0
   1dbd4:	mov	x0, x1
   1dbd8:	ldr	x1, [x6, #72]
   1dbdc:	cbnz	x1, 1dc04 <OnPrint@@Base+0x6d4>
   1dbe0:	ldr	x3, [x6, #40]
   1dbe4:	ubfx	w4, w3, #1, #1
   1dbe8:	ubfx	w3, w3, #2, #1
   1dbec:	mov	x5, #0x0                   	// #0
   1dbf0:	ldr	x2, [x6, #8]
   1dbf4:	ldr	x1, [x6]
   1dbf8:	bl	128fc <__sancov_default_options@@Base+0x2578>
   1dbfc:	ldr	x30, [sp], #16
   1dc00:	ret
   1dc04:	mov	x4, #0x0                   	// #0
   1dc08:	mov	x3, #0x0                   	// #0
   1dc0c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1dc10:	add	x2, x2, #0x900
   1dc14:	mov	w1, #0x43                  	// #67
   1dc18:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1dc1c:	add	x0, x0, #0x8b8
   1dc20:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1dc24:	mov	x1, x0
   1dc28:	ldr	x0, [x0]
   1dc2c:	adrp	x2, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dc30:	ldr	x2, [x2, #3280]
   1dc34:	cmp	x0, x2
   1dc38:	b.eq	1dc50 <OnPrint@@Base+0x720>  // b.none
   1dc3c:	str	x30, [sp, #-16]!
   1dc40:	ldr	x1, [x1, #8]
   1dc44:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1dc48:	ldr	x30, [sp], #16
   1dc4c:	ret
   1dc50:	ret
   1dc54:	ldr	x1, [x0]
   1dc58:	str	x1, [x0, #24]
   1dc5c:	ret
   1dc60:	str	x30, [sp, #-48]!
   1dc64:	add	x0, sp, #0x18
   1dc68:	bl	1e370 <OnPrint@@Base+0xe40>
   1dc6c:	ldr	x0, [sp, #32]
   1dc70:	cbnz	x0, 1dc7c <OnPrint@@Base+0x74c>
   1dc74:	ldr	x30, [sp], #48
   1dc78:	ret
   1dc7c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dc80:	add	x0, x0, #0xcd0
   1dc84:	add	x0, x0, #0x18
   1dc88:	mov	w2, #0x1                   	// #1
   1dc8c:	ldxrb	w1, [x0]
   1dc90:	stxrb	w3, w2, [x0]
   1dc94:	cbnz	w3, 1dc8c <OnPrint@@Base+0x75c>
   1dc98:	dmb	ish
   1dc9c:	and	w0, w1, #0xff
   1dca0:	cbnz	w0, 1dcd4 <OnPrint@@Base+0x7a4>
   1dca4:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dca8:	ldr	x1, [x0, #3288]
   1dcac:	cbnz	x1, 1dce8 <OnPrint@@Base+0x7b8>
   1dcb0:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dcb4:	add	x0, x0, #0xcd0
   1dcb8:	ldp	x2, x3, [sp, #24]
   1dcbc:	stp	x2, x3, [x0]
   1dcc0:	ldr	x1, [sp, #40]
   1dcc4:	str	x1, [x0, #16]
   1dcc8:	dmb	ish
   1dccc:	strb	wzr, [x0, #24]
   1dcd0:	b	1dc74 <OnPrint@@Base+0x744>
   1dcd4:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dcd8:	add	x0, x0, #0xcd0
   1dcdc:	add	x0, x0, #0x18
   1dce0:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   1dce4:	b	1dca4 <OnPrint@@Base+0x774>
   1dce8:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dcec:	ldr	x0, [x0, #3280]
   1dcf0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1dcf4:	b	1dcb0 <OnPrint@@Base+0x780>
   1dcf8:	stp	x19, x30, [sp, #-16]!
   1dcfc:	mov	x19, x0
   1dd00:	adrp	x1, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dd04:	add	x1, x1, #0xcd0
   1dd08:	add	x1, x1, #0x18
   1dd0c:	mov	w2, #0x1                   	// #1
   1dd10:	ldxrb	w0, [x1]
   1dd14:	stxrb	w3, w2, [x1]
   1dd18:	cbnz	w3, 1dd10 <OnPrint@@Base+0x7e0>
   1dd1c:	dmb	ish
   1dd20:	and	w0, w0, #0xff
   1dd24:	cbnz	w0, 1dd64 <OnPrint@@Base+0x834>
   1dd28:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dd2c:	ldr	x0, [x0, #3280]
   1dd30:	cbz	x0, 1dd4c <OnPrint@@Base+0x81c>
   1dd34:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dd38:	add	x0, x0, #0xcd0
   1dd3c:	ldp	x2, x3, [x0]
   1dd40:	stp	x2, x3, [x19]
   1dd44:	ldr	x0, [x0, #16]
   1dd48:	str	x0, [x19, #16]
   1dd4c:	dmb	ish
   1dd50:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1dd54:	add	x0, x0, #0xcd0
   1dd58:	strb	wzr, [x0, #24]
   1dd5c:	ldp	x19, x30, [sp], #16
   1dd60:	ret
   1dd64:	mov	x0, x1
   1dd68:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   1dd6c:	b	1dd28 <OnPrint@@Base+0x7f8>
   1dd70:	stp	x19, x30, [sp, #-16]!
   1dd74:	mov	x19, x0
   1dd78:	tst	w1, #0xff
   1dd7c:	b.ne	1dda4 <OnPrint@@Base+0x874>  // b.any
   1dd80:	bl	1e370 <OnPrint@@Base+0xe40>
   1dd84:	ldr	x0, [x19, #8]
   1dd88:	cbz	x0, 1ddc4 <OnPrint@@Base+0x894>
   1dd8c:	ldr	x0, [x19, #16]
   1dd90:	cbz	x0, 1dde4 <OnPrint@@Base+0x8b4>
   1dd94:	ldr	x0, [x19]
   1dd98:	str	x0, [x19, #24]
   1dd9c:	ldp	x19, x30, [sp], #16
   1dda0:	ret
   1dda4:	bl	1dc60 <OnPrint@@Base+0x730>
   1dda8:	mov	x0, x19
   1ddac:	bl	1e370 <OnPrint@@Base+0xe40>
   1ddb0:	ldr	x0, [x19, #8]
   1ddb4:	cbnz	x0, 1dd8c <OnPrint@@Base+0x85c>
   1ddb8:	mov	x0, x19
   1ddbc:	bl	1dcf8 <OnPrint@@Base+0x7c8>
   1ddc0:	b	1dd84 <OnPrint@@Base+0x854>
   1ddc4:	mov	x4, #0x0                   	// #0
   1ddc8:	mov	x3, #0x0                   	// #0
   1ddcc:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ddd0:	add	x2, x2, #0x918
   1ddd4:	mov	w1, #0x51                  	// #81
   1ddd8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1dddc:	add	x0, x0, #0x8b8
   1dde0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1dde4:	mov	x4, #0x0                   	// #0
   1dde8:	mov	x3, #0x0                   	// #0
   1ddec:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ddf0:	add	x2, x2, #0x948
   1ddf4:	mov	w1, #0x52                  	// #82
   1ddf8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ddfc:	add	x0, x0, #0x8b8
   1de00:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1de04:	stp	x19, x20, [sp, #-272]!
   1de08:	stp	x21, x22, [sp, #16]
   1de0c:	stp	x23, x24, [sp, #32]
   1de10:	stp	x25, x26, [sp, #48]
   1de14:	stp	x27, x28, [sp, #64]
   1de18:	str	x30, [sp, #80]
   1de1c:	mov	x22, x0
   1de20:	mov	x19, x1
   1de24:	ldr	x0, [x0]
   1de28:	str	x0, [x22, #24]
   1de2c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1de30:	ldr	x0, [x0, #4000]
   1de34:	ldr	x0, [x0]
   1de38:	cbz	x0, 1dee0 <OnPrint@@Base+0x9b0>
   1de3c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1de40:	ldr	x0, [x0, #4000]
   1de44:	ldr	x0, [x0]
   1de48:	sub	x20, x0, #0x1
   1de4c:	ands	x20, x20, x0
   1de50:	b.ne	1def4 <OnPrint@@Base+0x9c4>  // b.any
   1de54:	add	x27, x0, #0xfff
   1de58:	neg	x0, x0
   1de5c:	and	x27, x27, x0
   1de60:	mov	w2, #0x0                   	// #0
   1de64:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1de68:	add	x1, x1, #0x650
   1de6c:	mov	x0, x27
   1de70:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1de74:	mov	x26, x0
   1de78:	mov	x2, #0x0                   	// #0
   1de7c:	mov	x1, #0x0                   	// #0
   1de80:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1de84:	mov	x1, #0x0                   	// #0
   1de88:	mov	x0, #0x0                   	// #0
   1de8c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1de90:	cmp	x27, #0xfff
   1de94:	b.ls	1df04 <OnPrint@@Base+0x9d4>  // b.plast
   1de98:	mov	x2, #0x1000                	// #4096
   1de9c:	mov	w1, #0x0                   	// #0
   1dea0:	mov	x0, x26
   1dea4:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1dea8:	strb	wzr, [x26]
   1deac:	str	x26, [sp, #216]
   1deb0:	mov	x0, #0x1000                	// #4096
   1deb4:	str	x0, [sp, #224]
   1deb8:	str	xzr, [sp, #264]
   1debc:	add	x25, sp, #0xc0
   1dec0:	add	x24, sp, #0x78
   1dec4:	add	x0, x24, #0x1c
   1dec8:	str	x0, [sp, #104]
   1decc:	mov	x28, #0xe38f                	// #58255
   1ded0:	movk	x28, #0x8e38, lsl #16
   1ded4:	movk	x28, #0x38e3, lsl #32
   1ded8:	movk	x28, #0xe38e, lsl #48
   1dedc:	b	1e094 <OnPrint@@Base+0xb64>
   1dee0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1dee4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1dee8:	ldr	x1, [x1, #4000]
   1deec:	str	x0, [x1]
   1def0:	b	1de3c <OnPrint@@Base+0x90c>
   1def4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1def8:	add	x0, x0, #0x638
   1defc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1df00:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1df04:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1df08:	ldr	x0, [x0, #4000]
   1df0c:	ldr	x0, [x0]
   1df10:	cbz	x0, 1df74 <OnPrint@@Base+0xa44>
   1df14:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1df18:	ldr	x0, [x0, #4000]
   1df1c:	ldr	x0, [x0]
   1df20:	sub	x1, x0, #0x1
   1df24:	tst	x1, x0
   1df28:	b.ne	1df88 <OnPrint@@Base+0xa58>  // b.any
   1df2c:	add	x21, x0, #0xfff
   1df30:	neg	x0, x0
   1df34:	and	x21, x21, x0
   1df38:	mov	w2, #0x0                   	// #0
   1df3c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1df40:	add	x1, x1, #0x650
   1df44:	mov	x0, x21
   1df48:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1df4c:	mov	x23, x0
   1df50:	mov	x2, #0x0                   	// #0
   1df54:	mov	x1, x26
   1df58:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1df5c:	mov	x1, x27
   1df60:	mov	x0, x26
   1df64:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1df68:	mov	x27, x21
   1df6c:	mov	x26, x23
   1df70:	b	1de98 <OnPrint@@Base+0x968>
   1df74:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1df78:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1df7c:	ldr	x1, [x1, #4000]
   1df80:	str	x0, [x1]
   1df84:	b	1df14 <OnPrint@@Base+0x9e4>
   1df88:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1df8c:	add	x0, x0, #0x638
   1df90:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1df94:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1df98:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1df9c:	add	x2, x2, #0x5b0
   1dfa0:	mov	w1, #0x1be                 	// #446
   1dfa4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1dfa8:	add	x0, x0, #0x520
   1dfac:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1dfb0:	mov	x3, x0
   1dfb4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1dfb8:	add	x2, x2, #0x5d0
   1dfbc:	mov	w1, #0x17b                 	// #379
   1dfc0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1dfc4:	add	x0, x0, #0x520
   1dfc8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1dfcc:	mov	x4, x1
   1dfd0:	mov	x3, x0
   1dfd4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1dfd8:	add	x2, x2, #0x5f8
   1dfdc:	mov	w1, #0x17c                 	// #380
   1dfe0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1dfe4:	add	x0, x0, #0x520
   1dfe8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1dfec:	mov	x4, x0
   1dff0:	add	x4, x4, x4, lsl #3
   1dff4:	lsl	x21, x4, #3
   1dff8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1dffc:	ldr	x0, [x0, #4000]
   1e000:	ldr	x0, [x0]
   1e004:	cbz	x0, 1e190 <OnPrint@@Base+0xc60>
   1e008:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e00c:	ldr	x0, [x0, #4000]
   1e010:	ldr	x0, [x0]
   1e014:	sub	x1, x0, #0x1
   1e018:	tst	x0, x1
   1e01c:	b.ne	1e1a4 <OnPrint@@Base+0xc74>  // b.any
   1e020:	add	x21, x21, x1
   1e024:	neg	x0, x0
   1e028:	and	x21, x21, x0
   1e02c:	mov	w2, #0x0                   	// #0
   1e030:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e034:	add	x1, x1, #0x650
   1e038:	mov	x0, x21
   1e03c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1e040:	mov	x23, x0
   1e044:	ldr	x2, [x19, #16]
   1e048:	add	x2, x2, x2, lsl #3
   1e04c:	lsl	x2, x2, #3
   1e050:	ldr	x1, [x19]
   1e054:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1e058:	ldr	x1, [x19, #8]
   1e05c:	ldr	x0, [x19]
   1e060:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1e064:	str	x23, [x19]
   1e068:	str	x21, [x19, #8]
   1e06c:	ldr	x3, [x19]
   1e070:	ldr	x1, [x19, #16]
   1e074:	add	x0, x1, #0x1
   1e078:	str	x0, [x19, #16]
   1e07c:	add	x0, x1, x1, lsl #3
   1e080:	mov	x2, #0x48                  	// #72
   1e084:	mov	x1, x24
   1e088:	add	x0, x3, x0, lsl #3
   1e08c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1e090:	add	x20, x20, #0x1
   1e094:	mov	x1, x25
   1e098:	mov	x0, x22
   1e09c:	bl	1e3b4 <OnPrint@@Base+0xe84>
   1e0a0:	and	w0, w0, #0xff
   1e0a4:	cbz	w0, 1e1b4 <OnPrint@@Base+0xc84>
   1e0a8:	ldr	x23, [sp, #216]
   1e0ac:	ldrb	w0, [x23]
   1e0b0:	cbz	w0, 1e090 <OnPrint@@Base+0xb60>
   1e0b4:	cmp	x20, #0x0
   1e0b8:	ldr	x21, [sp, #192]
   1e0bc:	csel	x21, x21, x20, ne  // ne = any
   1e0c0:	ldr	x0, [sp, #208]
   1e0c4:	sub	x21, x21, x0
   1e0c8:	str	xzr, [sp, #120]
   1e0cc:	str	xzr, [sp, #128]
   1e0d0:	str	xzr, [sp, #136]
   1e0d4:	str	wzr, [sp, #144]
   1e0d8:	strb	wzr, [sp, #164]
   1e0dc:	mov	x2, #0x10                  	// #16
   1e0e0:	mov	w1, #0x0                   	// #0
   1e0e4:	ldr	x0, [sp, #104]
   1e0e8:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1e0ec:	str	xzr, [sp, #184]
   1e0f0:	str	xzr, [sp, #176]
   1e0f4:	str	xzr, [sp, #168]
   1e0f8:	mov	x2, x21
   1e0fc:	mov	x1, x23
   1e100:	mov	x0, x24
   1e104:	bl	12880 <__sancov_default_options@@Base+0x24fc>
   1e108:	mov	x1, x24
   1e10c:	mov	x0, x25
   1e110:	bl	1dbcc <OnPrint@@Base+0x69c>
   1e114:	ldr	x3, [x19, #16]
   1e118:	ldr	x0, [x19, #8]
   1e11c:	umulh	x0, x0, x28
   1e120:	lsr	x4, x0, #6
   1e124:	cmp	x3, x0, lsr #6
   1e128:	b.hi	1df98 <OnPrint@@Base+0xa68>  // b.pmore
   1e12c:	cmp	x3, x4
   1e130:	b.ne	1e06c <OnPrint@@Base+0xb3c>  // b.any
   1e134:	add	x0, x3, #0x1
   1e138:	tst	x3, x0
   1e13c:	b.eq	1dfec <OnPrint@@Base+0xabc>  // b.none
   1e140:	clz	x2, x0
   1e144:	mov	w1, #0x3f                  	// #63
   1e148:	sub	w1, w1, w2
   1e14c:	add	w2, w1, #0x1
   1e150:	mov	x4, #0x1                   	// #1
   1e154:	lsl	x4, x4, x2
   1e158:	cmp	x0, x4
   1e15c:	b.cs	1dfb0 <OnPrint@@Base+0xa80>  // b.hs, b.nlast
   1e160:	mov	x2, #0x1                   	// #1
   1e164:	lsl	x1, x2, x1
   1e168:	cmp	x0, x1
   1e16c:	b.ls	1dfcc <OnPrint@@Base+0xa9c>  // b.plast
   1e170:	cmp	x3, x4
   1e174:	b.ls	1dff0 <OnPrint@@Base+0xac0>  // b.plast
   1e178:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e17c:	add	x2, x2, #0x618
   1e180:	mov	w1, #0x1fd                 	// #509
   1e184:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e188:	add	x0, x0, #0x520
   1e18c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e190:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1e194:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e198:	ldr	x1, [x1, #4000]
   1e19c:	str	x0, [x1]
   1e1a0:	b	1e008 <OnPrint@@Base+0xad8>
   1e1a4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e1a8:	add	x0, x0, #0x638
   1e1ac:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1e1b0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1e1b4:	mov	x1, x27
   1e1b8:	mov	x0, x26
   1e1bc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1e1c0:	ldp	x21, x22, [sp, #16]
   1e1c4:	ldp	x23, x24, [sp, #32]
   1e1c8:	ldp	x25, x26, [sp, #48]
   1e1cc:	ldp	x27, x28, [sp, #64]
   1e1d0:	ldr	x30, [sp, #80]
   1e1d4:	ldp	x19, x20, [sp], #272
   1e1d8:	ret
   1e1dc:	stp	x19, x20, [sp, #-112]!
   1e1e0:	stp	x23, x24, [sp, #32]
   1e1e4:	stp	x25, x26, [sp, #48]
   1e1e8:	str	x30, [sp, #72]
   1e1ec:	mov	x24, x0
   1e1f0:	mov	x25, x1
   1e1f4:	mov	x26, x2
   1e1f8:	str	xzr, [sp, #104]
   1e1fc:	str	xzr, [sp, #96]
   1e200:	str	xzr, [sp, #88]
   1e204:	mov	x5, #0x0                   	// #0
   1e208:	mov	x4, #0x4000000             	// #67108864
   1e20c:	add	x3, sp, #0x58
   1e210:	add	x2, sp, #0x60
   1e214:	add	x1, sp, #0x68
   1e218:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e21c:	add	x0, x0, #0x970
   1e220:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   1e224:	and	w0, w0, #0xff
   1e228:	cbz	w0, 1e35c <OnPrint@@Base+0xe2c>
   1e22c:	ldr	x19, [sp, #104]
   1e230:	str	x19, [sp, #80]
   1e234:	ldr	x0, [sp, #88]
   1e238:	add	x0, x19, x0
   1e23c:	cmp	x19, x0
   1e240:	b.cs	1e344 <OnPrint@@Base+0xe14>  // b.hs, b.nlast
   1e244:	stp	x21, x22, [sp, #16]
   1e248:	str	x27, [sp, #64]
   1e24c:	mov	w20, #0x0                   	// #0
   1e250:	mov	x21, #0x0                   	// #0
   1e254:	adrp	x22, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e258:	add	x22, x22, #0x988
   1e25c:	mov	x23, #0x4                   	// #4
   1e260:	add	x27, sp, #0x50
   1e264:	b	1e2dc <OnPrint@@Base+0xdac>
   1e268:	mov	x0, x27
   1e26c:	bl	1dbb8 <OnPrint@@Base+0x688>
   1e270:	mov	x21, x0
   1e274:	ldr	x0, [sp, #80]
   1e278:	ldrb	w1, [x0]
   1e27c:	cmp	w1, #0x2f
   1e280:	cset	w20, eq  // eq = none
   1e284:	cmp	w20, #0x0
   1e288:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1e28c:	b.ls	1e2b0 <OnPrint@@Base+0xd80>  // b.plast
   1e290:	add	x0, x0, #0x1
   1e294:	str	x0, [sp, #80]
   1e298:	ldrb	w1, [x0], #1
   1e29c:	cmp	w1, #0x2f
   1e2a0:	cset	w20, eq  // eq = none
   1e2a4:	cmp	w20, #0x0
   1e2a8:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1e2ac:	b.hi	1e294 <OnPrint@@Base+0xd64>  // b.pmore
   1e2b0:	ldr	x3, [sp, #80]
   1e2b4:	add	x19, x3, #0x1
   1e2b8:	str	x19, [sp, #80]
   1e2bc:	ldrb	w0, [x3]
   1e2c0:	cmp	w0, #0xa
   1e2c4:	b.ne	1e2b0 <OnPrint@@Base+0xd80>  // b.any
   1e2c8:	ldr	x0, [sp, #104]
   1e2cc:	ldr	x1, [sp, #88]
   1e2d0:	add	x1, x0, x1
   1e2d4:	cmp	x19, x1
   1e2d8:	b.cs	1e34c <OnPrint@@Base+0xe1c>  // b.hs, b.nlast
   1e2dc:	ldrb	w0, [x19]
   1e2e0:	bl	1dba0 <OnPrint@@Base+0x670>
   1e2e4:	and	w0, w0, #0xff
   1e2e8:	cbnz	w0, 1e268 <OnPrint@@Base+0xd38>
   1e2ec:	mov	x2, x23
   1e2f0:	mov	x1, x22
   1e2f4:	mov	x0, x19
   1e2f8:	bl	17c08 <__sanitizer_set_report_fd@@Base+0x1858>
   1e2fc:	cbnz	w0, 1e2b0 <OnPrint@@Base+0xd80>
   1e300:	ldr	x19, [sp, #80]
   1e304:	ldrb	w0, [x19]
   1e308:	bl	1db74 <OnPrint@@Base+0x644>
   1e30c:	and	w0, w0, #0xff
   1e310:	cbnz	w0, 1e320 <OnPrint@@Base+0xdf0>
   1e314:	add	x19, x19, #0x1
   1e318:	str	x19, [sp, #80]
   1e31c:	b	1e300 <OnPrint@@Base+0xdd0>
   1e320:	mov	x0, x27
   1e324:	bl	1db8c <OnPrint@@Base+0x65c>
   1e328:	mov	x4, x26
   1e32c:	mov	x3, x25
   1e330:	mov	w2, w20
   1e334:	lsl	x1, x0, #10
   1e338:	mov	x0, x21
   1e33c:	blr	x24
   1e340:	b	1e2b0 <OnPrint@@Base+0xd80>
   1e344:	mov	x0, x19
   1e348:	b	1e354 <OnPrint@@Base+0xe24>
   1e34c:	ldp	x21, x22, [sp, #16]
   1e350:	ldr	x27, [sp, #64]
   1e354:	ldr	x1, [sp, #96]
   1e358:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1e35c:	ldp	x23, x24, [sp, #32]
   1e360:	ldp	x25, x26, [sp, #48]
   1e364:	ldr	x30, [sp, #72]
   1e368:	ldp	x19, x20, [sp], #112
   1e36c:	ret
   1e370:	stp	x19, x30, [sp, #-16]!
   1e374:	mov	x19, x0
   1e378:	mov	x5, #0x0                   	// #0
   1e37c:	mov	x4, #0x4000000             	// #67108864
   1e380:	add	x3, x0, #0x10
   1e384:	add	x2, x0, #0x8
   1e388:	mov	x1, x0
   1e38c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e390:	add	x0, x0, #0x990
   1e394:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   1e398:	and	w0, w0, #0xff
   1e39c:	cbnz	w0, 1e3ac <OnPrint@@Base+0xe7c>
   1e3a0:	str	xzr, [x19]
   1e3a4:	str	xzr, [x19, #8]
   1e3a8:	str	xzr, [x19, #16]
   1e3ac:	ldp	x19, x30, [sp], #16
   1e3b0:	ret
   1e3b4:	stp	x19, x20, [sp, #-48]!
   1e3b8:	stp	x21, x22, [sp, #16]
   1e3bc:	str	x30, [sp, #40]
   1e3c0:	mov	x19, x0
   1e3c4:	ldr	x22, [x0]
   1e3c8:	ldr	x0, [x0, #16]
   1e3cc:	add	x22, x22, x0
   1e3d0:	ldr	x0, [x19, #24]
   1e3d4:	cmp	x0, x22
   1e3d8:	b.cc	1e3f4 <OnPrint@@Base+0xec4>  // b.lo, b.ul, b.last
   1e3dc:	mov	w22, #0x0                   	// #0
   1e3e0:	mov	w0, w22
   1e3e4:	ldp	x21, x22, [sp, #16]
   1e3e8:	ldr	x30, [sp, #40]
   1e3ec:	ldp	x19, x20, [sp], #48
   1e3f0:	ret
   1e3f4:	str	x23, [sp, #32]
   1e3f8:	mov	x20, x1
   1e3fc:	sub	x2, x22, x0
   1e400:	mov	w1, #0xa                   	// #10
   1e404:	bl	17a48 <__sanitizer_set_report_fd@@Base+0x1698>
   1e408:	cmp	x0, #0x0
   1e40c:	csel	x21, x0, x22, ne  // ne = any
   1e410:	add	x23, x19, #0x18
   1e414:	mov	x0, x23
   1e418:	bl	1dbb8 <OnPrint@@Base+0x688>
   1e41c:	str	x0, [x20]
   1e420:	ldr	x0, [x19, #24]
   1e424:	add	x1, x0, #0x1
   1e428:	str	x1, [x19, #24]
   1e42c:	ldrb	w3, [x0]
   1e430:	cmp	x3, #0x2d
   1e434:	b.ne	1e5b4 <OnPrint@@Base+0x1084>  // b.any
   1e438:	mov	x0, x23
   1e43c:	bl	1dbb8 <OnPrint@@Base+0x688>
   1e440:	str	x0, [x20, #8]
   1e444:	ldr	x0, [x19, #24]
   1e448:	add	x1, x0, #0x1
   1e44c:	str	x1, [x19, #24]
   1e450:	ldrb	w3, [x0]
   1e454:	cmp	x3, #0x20
   1e458:	b.ne	1e5d0 <OnPrint@@Base+0x10a0>  // b.any
   1e45c:	ldrb	w0, [x0, #1]
   1e460:	cmp	w0, #0x2d
   1e464:	mov	w1, #0x72                  	// #114
   1e468:	ccmp	w0, w1, #0x4, ne  // ne = any
   1e46c:	b.ne	1e5ec <OnPrint@@Base+0x10bc>  // b.any
   1e470:	str	xzr, [x20, #40]
   1e474:	ldr	x0, [x19, #24]
   1e478:	add	x1, x0, #0x1
   1e47c:	str	x1, [x19, #24]
   1e480:	ldrb	w0, [x0]
   1e484:	cmp	w0, #0x72
   1e488:	b.eq	1e60c <OnPrint@@Base+0x10dc>  // b.none
   1e48c:	ldr	x0, [x19, #24]
   1e490:	ldrb	w1, [x0]
   1e494:	cmp	w1, #0x2d
   1e498:	mov	w2, #0x77                  	// #119
   1e49c:	ccmp	w1, w2, #0x4, ne  // ne = any
   1e4a0:	b.ne	1e61c <OnPrint@@Base+0x10ec>  // b.any
   1e4a4:	add	x1, x0, #0x1
   1e4a8:	str	x1, [x19, #24]
   1e4ac:	ldrb	w0, [x0]
   1e4b0:	cmp	w0, #0x77
   1e4b4:	b.eq	1e63c <OnPrint@@Base+0x110c>  // b.none
   1e4b8:	ldr	x0, [x19, #24]
   1e4bc:	ldrb	w1, [x0]
   1e4c0:	cmp	w1, #0x2d
   1e4c4:	mov	w2, #0x78                  	// #120
   1e4c8:	ccmp	w1, w2, #0x4, ne  // ne = any
   1e4cc:	b.ne	1e64c <OnPrint@@Base+0x111c>  // b.any
   1e4d0:	add	x1, x0, #0x1
   1e4d4:	str	x1, [x19, #24]
   1e4d8:	ldrb	w0, [x0]
   1e4dc:	cmp	w0, #0x78
   1e4e0:	b.eq	1e66c <OnPrint@@Base+0x113c>  // b.none
   1e4e4:	ldr	x0, [x19, #24]
   1e4e8:	ldrb	w1, [x0]
   1e4ec:	cmp	w1, #0x73
   1e4f0:	cset	w22, eq  // eq = none
   1e4f4:	cmp	w1, #0x70
   1e4f8:	csinc	w22, w22, wzr, ne  // ne = any
   1e4fc:	cbz	w22, 1e67c <OnPrint@@Base+0x114c>
   1e500:	add	x1, x0, #0x1
   1e504:	str	x1, [x19, #24]
   1e508:	ldrb	w0, [x0]
   1e50c:	cmp	w0, #0x73
   1e510:	b.eq	1e69c <OnPrint@@Base+0x116c>  // b.none
   1e514:	ldr	x0, [x19, #24]
   1e518:	add	x1, x0, #0x1
   1e51c:	str	x1, [x19, #24]
   1e520:	ldrb	w3, [x0]
   1e524:	cmp	x3, #0x20
   1e528:	b.ne	1e6ac <OnPrint@@Base+0x117c>  // b.any
   1e52c:	mov	x0, x23
   1e530:	bl	1dbb8 <OnPrint@@Base+0x688>
   1e534:	str	x0, [x20, #16]
   1e538:	ldr	x0, [x19, #24]
   1e53c:	add	x1, x0, #0x1
   1e540:	str	x1, [x19, #24]
   1e544:	ldrb	w3, [x0]
   1e548:	cmp	x3, #0x20
   1e54c:	b.ne	1e6c8 <OnPrint@@Base+0x1198>  // b.any
   1e550:	mov	x0, x23
   1e554:	bl	1dbb8 <OnPrint@@Base+0x688>
   1e558:	ldr	x0, [x19, #24]
   1e55c:	add	x1, x0, #0x1
   1e560:	str	x1, [x19, #24]
   1e564:	ldrb	w3, [x0]
   1e568:	cmp	x3, #0x3a
   1e56c:	b.ne	1e6e4 <OnPrint@@Base+0x11b4>  // b.any
   1e570:	mov	x0, x23
   1e574:	bl	1dbb8 <OnPrint@@Base+0x688>
   1e578:	ldr	x0, [x19, #24]
   1e57c:	add	x1, x0, #0x1
   1e580:	str	x1, [x19, #24]
   1e584:	ldrb	w3, [x0]
   1e588:	cmp	x3, #0x20
   1e58c:	b.ne	1e700 <OnPrint@@Base+0x11d0>  // b.any
   1e590:	ldr	x0, [x19, #24]
   1e594:	ldrb	w0, [x0]
   1e598:	bl	1db74 <OnPrint@@Base+0x644>
   1e59c:	and	w2, w0, #0xff
   1e5a0:	cbz	w2, 1e71c <OnPrint@@Base+0x11ec>
   1e5a4:	ldr	x1, [x19, #24]
   1e5a8:	add	x1, x1, #0x1
   1e5ac:	str	x1, [x19, #24]
   1e5b0:	b	1e590 <OnPrint@@Base+0x1060>
   1e5b4:	mov	x4, #0x2d                  	// #45
   1e5b8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e5bc:	add	x2, x2, #0x9a0
   1e5c0:	mov	w1, #0x28                  	// #40
   1e5c4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e5c8:	add	x0, x0, #0x9c0
   1e5cc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e5d0:	mov	x4, #0x20                  	// #32
   1e5d4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e5d8:	add	x2, x2, #0xa08
   1e5dc:	mov	w1, #0x2a                  	// #42
   1e5e0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e5e4:	add	x0, x0, #0x9c0
   1e5e8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e5ec:	mov	x4, #0x0                   	// #0
   1e5f0:	mov	x3, #0x0                   	// #0
   1e5f4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e5f8:	add	x2, x2, #0xa28
   1e5fc:	mov	w1, #0x2b                  	// #43
   1e600:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e604:	add	x0, x0, #0x9c0
   1e608:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e60c:	ldr	x0, [x20, #40]
   1e610:	orr	x0, x0, #0x1
   1e614:	str	x0, [x20, #40]
   1e618:	b	1e48c <OnPrint@@Base+0xf5c>
   1e61c:	mov	x4, #0x0                   	// #0
   1e620:	mov	x3, #0x0                   	// #0
   1e624:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e628:	add	x2, x2, #0xa58
   1e62c:	mov	w1, #0x2e                  	// #46
   1e630:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e634:	add	x0, x0, #0x9c0
   1e638:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e63c:	ldr	x0, [x20, #40]
   1e640:	orr	x0, x0, #0x2
   1e644:	str	x0, [x20, #40]
   1e648:	b	1e4b8 <OnPrint@@Base+0xf88>
   1e64c:	mov	x4, #0x0                   	// #0
   1e650:	mov	x3, #0x0                   	// #0
   1e654:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e658:	add	x2, x2, #0xa88
   1e65c:	mov	w1, #0x30                  	// #48
   1e660:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e664:	add	x0, x0, #0x9c0
   1e668:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e66c:	ldr	x0, [x20, #40]
   1e670:	orr	x0, x0, #0x4
   1e674:	str	x0, [x20, #40]
   1e678:	b	1e4e4 <OnPrint@@Base+0xfb4>
   1e67c:	mov	x4, #0x0                   	// #0
   1e680:	mov	x3, #0x0                   	// #0
   1e684:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e688:	add	x2, x2, #0xab8
   1e68c:	mov	w1, #0x32                  	// #50
   1e690:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e694:	add	x0, x0, #0x9c0
   1e698:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e69c:	ldr	x0, [x20, #40]
   1e6a0:	orr	x0, x0, #0x8
   1e6a4:	str	x0, [x20, #40]
   1e6a8:	b	1e514 <OnPrint@@Base+0xfe4>
   1e6ac:	mov	x4, #0x20                  	// #32
   1e6b0:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e6b4:	add	x2, x2, #0xa08
   1e6b8:	mov	w1, #0x34                  	// #52
   1e6bc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e6c0:	add	x0, x0, #0x9c0
   1e6c4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e6c8:	mov	x4, #0x20                  	// #32
   1e6cc:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e6d0:	add	x2, x2, #0xa08
   1e6d4:	mov	w1, #0x36                  	// #54
   1e6d8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e6dc:	add	x0, x0, #0x9c0
   1e6e0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e6e4:	mov	x4, #0x3a                  	// #58
   1e6e8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e6ec:	add	x2, x2, #0xae8
   1e6f0:	mov	w1, #0x38                  	// #56
   1e6f4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e6f8:	add	x0, x0, #0x9c0
   1e6fc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e700:	mov	x4, #0x20                  	// #32
   1e704:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e708:	add	x2, x2, #0xa08
   1e70c:	mov	w1, #0x3a                  	// #58
   1e710:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e714:	add	x0, x0, #0x9c0
   1e718:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e71c:	ldr	x3, [x19, #24]
   1e720:	cmp	x3, x21
   1e724:	b.cs	1e748 <OnPrint@@Base+0x1218>  // b.hs, b.nlast
   1e728:	ldrb	w0, [x3]
   1e72c:	cmp	w0, #0x20
   1e730:	b.ne	1e748 <OnPrint@@Base+0x1218>  // b.any
   1e734:	add	x3, x3, #0x1
   1e738:	str	x3, [x19, #24]
   1e73c:	cmp	x3, x21
   1e740:	b.ne	1e728 <OnPrint@@Base+0x11f8>  // b.any
   1e744:	mov	x3, x21
   1e748:	ldr	x0, [x20, #24]
   1e74c:	cbz	x0, 1e778 <OnPrint@@Base+0x1248>
   1e750:	ldr	x23, [x20, #32]
   1e754:	sub	x23, x23, #0x1
   1e758:	sub	x1, x21, x3
   1e75c:	cmp	x23, x1
   1e760:	csel	x23, x23, x1, ls  // ls = plast
   1e764:	mov	x2, x23
   1e768:	mov	x1, x3
   1e76c:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   1e770:	ldr	x0, [x20, #24]
   1e774:	strb	wzr, [x0, x23]
   1e778:	add	x21, x21, #0x1
   1e77c:	str	x21, [x19, #24]
   1e780:	ldr	x23, [sp, #32]
   1e784:	b	1e3e0 <OnPrint@@Base+0xeb0>
   1e788:	ldr	w2, [x0]
   1e78c:	ldr	w0, [x1]
   1e790:	cmp	w2, w0
   1e794:	cset	w0, cc  // cc = lo, ul, last
   1e798:	ret
   1e79c:	ldr	x0, [x0]
   1e7a0:	ldr	w0, [x0, #8]
   1e7a4:	ret
   1e7a8:	ldr	x0, [x0]
   1e7ac:	ldr	w0, [x0, #12]
   1e7b0:	and	w0, w0, #0xfffff
   1e7b4:	ret
   1e7b8:	ldr	x1, [x0]
   1e7bc:	add	x1, x1, #0xc
   1e7c0:	ldxr	w0, [x1]
   1e7c4:	add	w2, w0, #0x1
   1e7c8:	stlxr	w3, w2, [x1]
   1e7cc:	cbnz	w3, 1e7c0 <OnPrint@@Base+0x1290>
   1e7d0:	dmb	ish
   1e7d4:	and	w0, w0, #0xfffff
   1e7d8:	add	w0, w0, #0x1
   1e7dc:	mov	w1, #0xfffff               	// #1048575
   1e7e0:	cmp	w0, w1
   1e7e4:	b.hi	1e7ec <OnPrint@@Base+0x12bc>  // b.pmore
   1e7e8:	ret
   1e7ec:	str	x30, [sp, #-16]!
   1e7f0:	mov	x4, #0x100000              	// #1048576
   1e7f4:	mov	x3, x4
   1e7f8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e7fc:	add	x2, x2, #0xb08
   1e800:	mov	w1, #0x61                  	// #97
   1e804:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1e808:	add	x0, x0, #0xb38
   1e80c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e810:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1e814:	add	x0, x0, #0xf0
   1e818:	ret
   1e81c:	mov	w1, #0x0                   	// #0
   1e820:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e824:	add	x0, x0, #0xcf0
   1e828:	sxtw	x3, w1
   1e82c:	ldr	x2, [x0, x3, lsl #3]
   1e830:	and	x2, x2, #0xfffffffffffffffe
   1e834:	dmb	ish
   1e838:	str	x2, [x0, x3, lsl #3]
   1e83c:	add	w1, w1, #0x1
   1e840:	cmp	w1, #0x100, lsl #12
   1e844:	b.ne	1e828 <OnPrint@@Base+0x12f8>  // b.any
   1e848:	ret
   1e84c:	stp	x19, x20, [sp, #-80]!
   1e850:	stp	x21, x22, [sp, #16]
   1e854:	str	x30, [sp, #56]
   1e858:	ldr	x21, [x0, #16]
   1e85c:	cbnz	x21, 1e878 <OnPrint@@Base+0x1348>
   1e860:	mov	x0, #0x0                   	// #0
   1e864:	mov	x1, #0x0                   	// #0
   1e868:	ldp	x21, x22, [sp, #16]
   1e86c:	ldr	x30, [sp, #56]
   1e870:	ldp	x19, x20, [sp], #80
   1e874:	ret
   1e878:	stp	x23, x24, [sp, #32]
   1e87c:	str	x25, [sp, #48]
   1e880:	mov	x19, x0
   1e884:	mov	w24, w1
   1e888:	stp	xzr, xzr, [sp, #64]
   1e88c:	str	w1, [sp, #64]
   1e890:	mov	x23, x21
   1e894:	mov	x22, #0x0                   	// #0
   1e898:	add	x25, sp, #0x40
   1e89c:	b	1e8a4 <OnPrint@@Base+0x1374>
   1e8a0:	mov	x23, x20
   1e8a4:	cmp	x23, x22
   1e8a8:	b.ls	1e8fc <OnPrint@@Base+0x13cc>  // b.plast
   1e8ac:	add	x0, x23, x22
   1e8b0:	lsr	x20, x0, #1
   1e8b4:	cmp	x21, x0, lsr #1
   1e8b8:	b.ls	1e8dc <OnPrint@@Base+0x13ac>  // b.plast
   1e8bc:	ldr	x0, [x19]
   1e8c0:	mov	x1, x25
   1e8c4:	add	x0, x0, x20, lsl #4
   1e8c8:	bl	1e788 <OnPrint@@Base+0x1258>
   1e8cc:	and	w0, w0, #0xff
   1e8d0:	cbz	w0, 1e8a0 <OnPrint@@Base+0x1370>
   1e8d4:	add	x22, x20, #0x1
   1e8d8:	b	1e8a4 <OnPrint@@Base+0x1374>
   1e8dc:	mov	x4, x21
   1e8e0:	mov	x3, x20
   1e8e4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e8e8:	add	x2, x2, #0x508
   1e8ec:	mov	w1, #0x1ba                 	// #442
   1e8f0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e8f4:	add	x0, x0, #0x520
   1e8f8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e8fc:	cmp	x21, x22
   1e900:	b.cc	1e920 <OnPrint@@Base+0x13f0>  // b.lo, b.ul, b.last
   1e904:	b.eq	1e934 <OnPrint@@Base+0x1404>  // b.none
   1e908:	lsl	x22, x22, #4
   1e90c:	ldr	x0, [x19]
   1e910:	add	x1, x0, x22
   1e914:	ldr	w0, [x0, x22]
   1e918:	cmp	w0, w24
   1e91c:	b.eq	1e954 <OnPrint@@Base+0x1424>  // b.none
   1e920:	mov	x0, #0x0                   	// #0
   1e924:	mov	x1, #0x0                   	// #0
   1e928:	ldp	x23, x24, [sp, #32]
   1e92c:	ldr	x25, [sp, #48]
   1e930:	b	1e868 <OnPrint@@Base+0x1338>
   1e934:	mov	x4, x22
   1e938:	mov	x3, x22
   1e93c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e940:	add	x2, x2, #0x508
   1e944:	mov	w1, #0x1b6                 	// #438
   1e948:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e94c:	add	x0, x0, #0x520
   1e950:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1e954:	ldr	x2, [x1, #8]
   1e958:	add	x0, x2, #0x18
   1e95c:	ldr	w3, [x2, #16]
   1e960:	mov	x1, #0x0                   	// #0
   1e964:	bfxil	x1, x3, #0, #32
   1e968:	ldr	w2, [x2, #20]
   1e96c:	bfi	x1, x2, #32, #32
   1e970:	ldp	x23, x24, [sp, #32]
   1e974:	ldr	x25, [sp, #48]
   1e978:	b	1e868 <OnPrint@@Base+0x1338>
   1e97c:	str	x30, [sp, #-16]!
   1e980:	mov	w1, w0
   1e984:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1e988:	add	x0, x0, #0xcf0
   1e98c:	bl	1edb0 <OnPrint@@Base+0x1880>
   1e990:	ldr	x30, [sp], #16
   1e994:	ret
   1e998:	stp	x19, x20, [sp, #-96]!
   1e99c:	stp	x21, x22, [sp, #16]
   1e9a0:	stp	x23, x24, [sp, #32]
   1e9a4:	stp	x25, x26, [sp, #48]
   1e9a8:	stp	x27, x30, [sp, #64]
   1e9ac:	mov	x19, x0
   1e9b0:	str	xzr, [x0, #8]
   1e9b4:	str	xzr, [x0, #16]
   1e9b8:	str	xzr, [x0]
   1e9bc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e9c0:	ldr	x0, [x0, #4000]
   1e9c4:	ldr	x0, [x0]
   1e9c8:	cbz	x0, 1ea7c <OnPrint@@Base+0x154c>
   1e9cc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e9d0:	ldr	x0, [x0, #4000]
   1e9d4:	ldr	x0, [x0]
   1e9d8:	sub	x1, x0, #0x1
   1e9dc:	tst	x1, x0
   1e9e0:	b.ne	1ea90 <OnPrint@@Base+0x1560>  // b.any
   1e9e4:	add	x20, x0, #0xf
   1e9e8:	neg	x0, x0
   1e9ec:	and	x20, x20, x0
   1e9f0:	mov	w2, #0x0                   	// #0
   1e9f4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1e9f8:	add	x1, x1, #0x650
   1e9fc:	mov	x0, x20
   1ea00:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1ea04:	mov	x21, x0
   1ea08:	ldr	x2, [x19, #16]
   1ea0c:	lsl	x2, x2, #4
   1ea10:	ldr	x1, [x19]
   1ea14:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1ea18:	ldr	x1, [x19, #8]
   1ea1c:	ldr	x0, [x19]
   1ea20:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1ea24:	str	x21, [x19]
   1ea28:	str	x20, [x19, #8]
   1ea2c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1ea30:	add	x0, x0, #0xcf0
   1ea34:	add	x0, x0, #0x800, lsl #12
   1ea38:	ldr	x4, [x0, #1024]
   1ea3c:	add	x4, x4, #0x64
   1ea40:	cmp	x4, x20, lsr #4
   1ea44:	b.hi	1eaa0 <OnPrint@@Base+0x1570>  // b.pmore
   1ea48:	mov	w22, #0x0                   	// #0
   1ea4c:	adrp	x24, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ea50:	ldr	x26, [x24, #4000]
   1ea54:	add	x23, sp, #0x50
   1ea58:	sxtw	x1, w22
   1ea5c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1ea60:	add	x0, x0, #0xcf0
   1ea64:	ldr	x20, [x0, x1, lsl #3]
   1ea68:	ands	x20, x20, #0xfffffffffffffffe
   1ea6c:	b.eq	1ecec <OnPrint@@Base+0x17bc>  // b.none
   1ea70:	adrp	x25, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ea74:	add	x25, x25, #0x650
   1ea78:	b	1ec58 <OnPrint@@Base+0x1728>
   1ea7c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1ea80:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ea84:	ldr	x1, [x1, #4000]
   1ea88:	str	x0, [x1]
   1ea8c:	b	1e9cc <OnPrint@@Base+0x149c>
   1ea90:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ea94:	add	x0, x0, #0x638
   1ea98:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ea9c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1eaa0:	ldr	x3, [x19, #16]
   1eaa4:	cmp	x4, x3
   1eaa8:	b.cc	1eb24 <OnPrint@@Base+0x15f4>  // b.lo, b.ul, b.last
   1eaac:	lsl	x20, x4, #4
   1eab0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1eab4:	ldr	x0, [x0, #4000]
   1eab8:	ldr	x0, [x0]
   1eabc:	cbz	x0, 1eb3c <OnPrint@@Base+0x160c>
   1eac0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1eac4:	ldr	x0, [x0, #4000]
   1eac8:	ldr	x0, [x0]
   1eacc:	sub	x1, x0, #0x1
   1ead0:	tst	x0, x1
   1ead4:	b.ne	1eb50 <OnPrint@@Base+0x1620>  // b.any
   1ead8:	add	x20, x20, x1
   1eadc:	neg	x0, x0
   1eae0:	and	x20, x20, x0
   1eae4:	mov	w2, #0x0                   	// #0
   1eae8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eaec:	add	x1, x1, #0x650
   1eaf0:	mov	x0, x20
   1eaf4:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1eaf8:	mov	x21, x0
   1eafc:	ldr	x2, [x19, #16]
   1eb00:	lsl	x2, x2, #4
   1eb04:	ldr	x1, [x19]
   1eb08:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1eb0c:	ldr	x1, [x19, #8]
   1eb10:	ldr	x0, [x19]
   1eb14:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1eb18:	str	x21, [x19]
   1eb1c:	str	x20, [x19, #8]
   1eb20:	b	1ea48 <OnPrint@@Base+0x1518>
   1eb24:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb28:	add	x2, x2, #0x618
   1eb2c:	mov	w1, #0x1fd                 	// #509
   1eb30:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb34:	add	x0, x0, #0x520
   1eb38:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1eb3c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1eb40:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1eb44:	ldr	x1, [x1, #4000]
   1eb48:	str	x0, [x1]
   1eb4c:	b	1eac0 <OnPrint@@Base+0x1590>
   1eb50:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb54:	add	x0, x0, #0x638
   1eb58:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1eb5c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1eb60:	mov	x3, x0
   1eb64:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb68:	add	x2, x2, #0x5b0
   1eb6c:	mov	w1, #0x1be                 	// #446
   1eb70:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb74:	add	x0, x0, #0x520
   1eb78:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1eb7c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb80:	add	x2, x2, #0x5d0
   1eb84:	mov	w1, #0x17b                 	// #379
   1eb88:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb8c:	add	x0, x0, #0x520
   1eb90:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1eb94:	mov	x4, x1
   1eb98:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eb9c:	add	x2, x2, #0x5f8
   1eba0:	mov	w1, #0x17c                 	// #380
   1eba4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1eba8:	add	x0, x0, #0x520
   1ebac:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ebb0:	mov	x3, x0
   1ebb4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ebb8:	add	x2, x2, #0x618
   1ebbc:	mov	w1, #0x1fd                 	// #509
   1ebc0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ebc4:	add	x0, x0, #0x520
   1ebc8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ebcc:	lsl	x21, x3, #4
   1ebd0:	ldr	x0, [x26]
   1ebd4:	cbz	x0, 1eccc <OnPrint@@Base+0x179c>
   1ebd8:	ldr	x0, [x24, #4000]
   1ebdc:	ldr	x0, [x0]
   1ebe0:	sub	x1, x0, #0x1
   1ebe4:	tst	x0, x1
   1ebe8:	b.ne	1ecdc <OnPrint@@Base+0x17ac>  // b.any
   1ebec:	add	x21, x21, x1
   1ebf0:	neg	x0, x0
   1ebf4:	and	x21, x21, x0
   1ebf8:	mov	w2, #0x0                   	// #0
   1ebfc:	mov	x1, x25
   1ec00:	mov	x0, x21
   1ec04:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1ec08:	mov	x27, x0
   1ec0c:	ldr	x2, [x19, #16]
   1ec10:	lsl	x2, x2, #4
   1ec14:	ldr	x1, [x19]
   1ec18:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1ec1c:	ldr	x1, [x19, #8]
   1ec20:	ldr	x0, [x19]
   1ec24:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1ec28:	str	x27, [x19]
   1ec2c:	str	x21, [x19, #8]
   1ec30:	ldr	x3, [x19]
   1ec34:	ldr	x0, [x19, #16]
   1ec38:	add	x1, x0, #0x1
   1ec3c:	str	x1, [x19, #16]
   1ec40:	mov	x2, #0x10                  	// #16
   1ec44:	mov	x1, x23
   1ec48:	add	x0, x3, x0, lsl #4
   1ec4c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1ec50:	ldr	x20, [x20]
   1ec54:	cbz	x20, 1ecec <OnPrint@@Base+0x17bc>
   1ec58:	ldr	w0, [x20, #8]
   1ec5c:	str	w0, [sp, #80]
   1ec60:	str	x20, [sp, #88]
   1ec64:	ldr	x0, [x19, #16]
   1ec68:	ldr	x1, [x19, #8]
   1ec6c:	lsr	x4, x1, #4
   1ec70:	cmp	x0, x1, lsr #4
   1ec74:	b.hi	1eb60 <OnPrint@@Base+0x1630>  // b.pmore
   1ec78:	cmp	x0, x4
   1ec7c:	b.ne	1ec30 <OnPrint@@Base+0x1700>  // b.any
   1ec80:	add	x3, x0, #0x1
   1ec84:	tst	x0, x3
   1ec88:	b.eq	1ebcc <OnPrint@@Base+0x169c>  // b.none
   1ec8c:	clz	x2, x3
   1ec90:	mov	w1, #0x3f                  	// #63
   1ec94:	sub	w2, w1, w2
   1ec98:	add	w1, w2, #0x1
   1ec9c:	mov	x4, #0x1                   	// #1
   1eca0:	lsl	x4, x4, x1
   1eca4:	cmp	x3, x4
   1eca8:	b.cs	1eb7c <OnPrint@@Base+0x164c>  // b.hs, b.nlast
   1ecac:	mov	x1, #0x1                   	// #1
   1ecb0:	lsl	x1, x1, x2
   1ecb4:	cmp	x3, x1
   1ecb8:	b.ls	1eb94 <OnPrint@@Base+0x1664>  // b.plast
   1ecbc:	cmp	x0, x4
   1ecc0:	b.hi	1ebb0 <OnPrint@@Base+0x1680>  // b.pmore
   1ecc4:	mov	x3, x4
   1ecc8:	b	1ebcc <OnPrint@@Base+0x169c>
   1eccc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1ecd0:	ldr	x1, [x24, #4000]
   1ecd4:	str	x0, [x1]
   1ecd8:	b	1ebd8 <OnPrint@@Base+0x16a8>
   1ecdc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ece0:	add	x0, x0, #0x638
   1ece4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ece8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ecec:	add	w22, w22, #0x1
   1ecf0:	cmp	w22, #0x100, lsl #12
   1ecf4:	b.ne	1ea58 <OnPrint@@Base+0x1528>  // b.any
   1ecf8:	adrp	x2, 1e000 <OnPrint@@Base+0xad0>
   1ecfc:	add	x2, x2, #0x788
   1ed00:	ldr	x1, [x19, #16]
   1ed04:	ldr	x0, [x19]
   1ed08:	bl	1ee80 <OnPrint@@Base+0x1950>
   1ed0c:	ldp	x21, x22, [sp, #16]
   1ed10:	ldp	x23, x24, [sp, #32]
   1ed14:	ldp	x25, x26, [sp, #48]
   1ed18:	ldp	x27, x30, [sp, #64]
   1ed1c:	ldp	x19, x20, [sp], #96
   1ed20:	ret
   1ed24:	stp	x19, x20, [sp, #-32]!
   1ed28:	str	x30, [sp, #16]
   1ed2c:	adrp	x19, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1ed30:	add	x19, x19, #0xcf0
   1ed34:	add	x20, x19, #0x800, lsl #12
   1ed38:	mov	x0, x19
   1ed3c:	bl	1f094 <OnPrint@@Base+0x1b64>
   1ed40:	add	x19, x19, #0x8
   1ed44:	cmp	x19, x20
   1ed48:	b.ne	1ed38 <OnPrint@@Base+0x1808>  // b.any
   1ed4c:	ldr	x30, [sp, #16]
   1ed50:	ldp	x19, x20, [sp], #32
   1ed54:	ret
   1ed58:	str	x30, [sp, #-16]!
   1ed5c:	mov	x2, x1
   1ed60:	mov	x1, x0
   1ed64:	mov	x3, #0x0                   	// #0
   1ed68:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1ed6c:	add	x0, x0, #0xcf0
   1ed70:	bl	1f0f4 <OnPrint@@Base+0x1bc4>
   1ed74:	cbz	x0, 1ed84 <OnPrint@@Base+0x1854>
   1ed78:	ldr	w0, [x0, #8]
   1ed7c:	ldr	x30, [sp], #16
   1ed80:	ret
   1ed84:	mov	w0, #0x0                   	// #0
   1ed88:	b	1ed7c <OnPrint@@Base+0x184c>
   1ed8c:	str	x30, [sp, #-16]!
   1ed90:	mov	x2, x1
   1ed94:	mov	x1, x0
   1ed98:	mov	x3, #0x0                   	// #0
   1ed9c:	adrp	x0, 1b7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   1eda0:	add	x0, x0, #0xcf0
   1eda4:	bl	1f0f4 <OnPrint@@Base+0x1bc4>
   1eda8:	ldr	x30, [sp], #16
   1edac:	ret
   1edb0:	cbnz	w1, 1edc0 <OnPrint@@Base+0x1890>
   1edb4:	mov	x0, #0x0                   	// #0
   1edb8:	mov	x1, #0x0                   	// #0
   1edbc:	ret
   1edc0:	str	x30, [sp, #-16]!
   1edc4:	mov	w4, w1
   1edc8:	and	x3, x1, #0x7fffffff
   1edcc:	cmp	x3, w1, uxtw
   1edd0:	b.ne	1ee3c <OnPrint@@Base+0x190c>  // b.any
   1edd4:	lsr	w2, w1, #23
   1edd8:	lsl	x3, x2, #12
   1eddc:	mov	x4, #0xfffff               	// #1048575
   1ede0:	add	x5, x3, #0xfff
   1ede4:	cmp	x4, x2, lsl #12
   1ede8:	b.cc	1ee20 <OnPrint@@Base+0x18f0>  // b.lo, b.ul, b.last
   1edec:	ldr	x2, [x0, x3, lsl #3]
   1edf0:	ands	x2, x2, #0xfffffffffffffffe
   1edf4:	b.eq	1ee0c <OnPrint@@Base+0x18dc>  // b.none
   1edf8:	ldr	w4, [x2, #8]
   1edfc:	cmp	w4, w1
   1ee00:	b.eq	1ee54 <OnPrint@@Base+0x1924>  // b.none
   1ee04:	ldr	x2, [x2]
   1ee08:	cbnz	x2, 1edf8 <OnPrint@@Base+0x18c8>
   1ee0c:	cmp	x5, x3
   1ee10:	b.eq	1ee74 <OnPrint@@Base+0x1944>  // b.none
   1ee14:	add	x3, x3, #0x1
   1ee18:	cmp	x3, #0x100, lsl #12
   1ee1c:	b.ne	1edec <OnPrint@@Base+0x18bc>  // b.any
   1ee20:	mov	x4, #0x100000              	// #1048576
   1ee24:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ee28:	add	x2, x2, #0xbf8
   1ee2c:	mov	w1, #0x91                  	// #145
   1ee30:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ee34:	add	x0, x0, #0xbb0
   1ee38:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ee3c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ee40:	add	x2, x2, #0xb80
   1ee44:	mov	w1, #0x8c                  	// #140
   1ee48:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1ee4c:	add	x0, x0, #0xbb0
   1ee50:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ee54:	add	x0, x2, #0x18
   1ee58:	ldr	w3, [x2, #16]
   1ee5c:	mov	x1, #0x0                   	// #0
   1ee60:	bfxil	x1, x3, #0, #32
   1ee64:	ldr	w2, [x2, #20]
   1ee68:	bfi	x1, x2, #32, #32
   1ee6c:	ldr	x30, [sp], #16
   1ee70:	ret
   1ee74:	mov	x0, #0x0                   	// #0
   1ee78:	mov	x1, #0x0                   	// #0
   1ee7c:	b	1ee6c <OnPrint@@Base+0x193c>
   1ee80:	cmp	x1, #0x1
   1ee84:	b.ls	1f028 <OnPrint@@Base+0x1af8>  // b.plast
   1ee88:	stp	x19, x20, [sp, #-96]!
   1ee8c:	stp	x21, x22, [sp, #16]
   1ee90:	stp	x23, x24, [sp, #32]
   1ee94:	stp	x25, x26, [sp, #48]
   1ee98:	stp	x27, x28, [sp, #64]
   1ee9c:	str	x30, [sp, #80]
   1eea0:	mov	x19, x0
   1eea4:	mov	x27, x1
   1eea8:	mov	x26, x2
   1eeac:	mov	x28, #0x1                   	// #1
   1eeb0:	b	1eec4 <OnPrint@@Base+0x1994>
   1eeb4:	add	x0, x28, #0x1
   1eeb8:	cmp	x27, x0
   1eebc:	b.ls	1ef20 <OnPrint@@Base+0x19f0>  // b.plast
   1eec0:	add	x28, x28, #0x1
   1eec4:	cbz	x28, 1eec0 <OnPrint@@Base+0x1990>
   1eec8:	mov	x21, x28
   1eecc:	sub	x24, x21, #0x1
   1eed0:	mov	x20, x21
   1eed4:	lsr	x21, x24, #1
   1eed8:	lsl	x25, x21, #4
   1eedc:	add	x22, x19, x25
   1eee0:	lsl	x20, x20, #4
   1eee4:	add	x23, x19, x20
   1eee8:	mov	x1, x23
   1eeec:	mov	x0, x22
   1eef0:	blr	x26
   1eef4:	and	w0, w0, #0xff
   1eef8:	cbz	w0, 1eeb4 <OnPrint@@Base+0x1984>
   1eefc:	ldr	w1, [x19, x20]
   1ef00:	ldr	x0, [x23, #8]
   1ef04:	ldp	x2, x3, [x22]
   1ef08:	stp	x2, x3, [x23]
   1ef0c:	str	w1, [x19, x25]
   1ef10:	str	x0, [x22, #8]
   1ef14:	cmp	x24, #0x1
   1ef18:	b.hi	1eecc <OnPrint@@Base+0x199c>  // b.pmore
   1ef1c:	b	1eeb4 <OnPrint@@Base+0x1984>
   1ef20:	sub	x23, x27, #0x1
   1ef24:	add	x27, x19, x27, lsl #4
   1ef28:	mov	x24, #0x0                   	// #0
   1ef2c:	b	1ef40 <OnPrint@@Base+0x1a10>
   1ef30:	cmp	x23, #0x1
   1ef34:	b.eq	1f00c <OnPrint@@Base+0x1adc>  // b.none
   1ef38:	sub	x27, x27, #0x10
   1ef3c:	sub	x23, x23, #0x1
   1ef40:	ldr	w1, [x19]
   1ef44:	ldr	x0, [x19, #8]
   1ef48:	ldp	x2, x3, [x27, #-16]
   1ef4c:	stp	x2, x3, [x19]
   1ef50:	stur	w1, [x27, #-16]
   1ef54:	stur	x0, [x27, #-8]
   1ef58:	cbz	x23, 1ef38 <OnPrint@@Base+0x1a08>
   1ef5c:	mov	x20, x24
   1ef60:	b	1efc0 <OnPrint@@Base+0x1a90>
   1ef64:	cmp	x23, x22
   1ef68:	b.ls	1ef30 <OnPrint@@Base+0x1a00>  // b.plast
   1ef6c:	add	x1, x19, x25, lsl #5
   1ef70:	add	x0, x19, x20, lsl #4
   1ef74:	blr	x26
   1ef78:	and	w0, w0, #0xff
   1ef7c:	cbz	w0, 1ef30 <OnPrint@@Base+0x1a00>
   1ef80:	mov	x21, x22
   1ef84:	cmp	x21, x20
   1ef88:	b.eq	1ef30 <OnPrint@@Base+0x1a00>  // b.none
   1ef8c:	lsl	x20, x20, #4
   1ef90:	add	x2, x19, x20
   1ef94:	lsl	x1, x21, #4
   1ef98:	add	x0, x19, x1
   1ef9c:	ldr	w6, [x19, x20]
   1efa0:	ldr	x3, [x2, #8]
   1efa4:	ldp	x4, x5, [x0]
   1efa8:	stp	x4, x5, [x2]
   1efac:	str	w6, [x19, x1]
   1efb0:	str	x3, [x0, #8]
   1efb4:	cmp	x21, x23
   1efb8:	b.cs	1ef30 <OnPrint@@Base+0x1a00>  // b.hs, b.nlast
   1efbc:	mov	x20, x21
   1efc0:	lsl	x0, x20, #1
   1efc4:	add	x21, x0, #0x1
   1efc8:	add	x25, x20, #0x1
   1efcc:	add	x22, x0, #0x2
   1efd0:	cmp	x23, x21
   1efd4:	b.ls	1ef64 <OnPrint@@Base+0x1a34>  // b.plast
   1efd8:	add	x1, x19, x21, lsl #4
   1efdc:	add	x0, x19, x20, lsl #4
   1efe0:	blr	x26
   1efe4:	and	w0, w0, #0xff
   1efe8:	cbz	w0, 1ef64 <OnPrint@@Base+0x1a34>
   1efec:	cmp	x23, x22
   1eff0:	b.ls	1ef84 <OnPrint@@Base+0x1a54>  // b.plast
   1eff4:	add	x1, x19, x25, lsl #5
   1eff8:	add	x0, x19, x21, lsl #4
   1effc:	blr	x26
   1f000:	and	w0, w0, #0xff
   1f004:	cbz	w0, 1ef84 <OnPrint@@Base+0x1a54>
   1f008:	b	1ef80 <OnPrint@@Base+0x1a50>
   1f00c:	ldp	x21, x22, [sp, #16]
   1f010:	ldp	x23, x24, [sp, #32]
   1f014:	ldp	x25, x26, [sp, #48]
   1f018:	ldp	x27, x28, [sp, #64]
   1f01c:	ldr	x30, [sp, #80]
   1f020:	ldp	x19, x20, [sp], #96
   1f024:	ret
   1f028:	ret
   1f02c:	cbz	x0, 1f090 <OnPrint@@Base+0x1b60>
   1f030:	mov	x8, x2
   1f034:	mov	x5, x1
   1f038:	and	w7, w3, #0xfff00000
   1f03c:	b	1f048 <OnPrint@@Base+0x1b18>
   1f040:	ldr	x0, [x0]
   1f044:	cbz	x0, 1f090 <OnPrint@@Base+0x1b60>
   1f048:	ldr	w1, [x0, #12]
   1f04c:	and	w1, w1, #0xfff00000
   1f050:	cmp	w1, w7
   1f054:	b.ne	1f040 <OnPrint@@Base+0x1b10>  // b.any
   1f058:	ldr	x1, [x0, #16]
   1f05c:	cmp	x8, x1
   1f060:	b.ne	1f040 <OnPrint@@Base+0x1b10>  // b.any
   1f064:	ldr	w4, [x0, #16]
   1f068:	cbz	x4, 1f090 <OnPrint@@Base+0x1b60>
   1f06c:	mov	x1, #0x0                   	// #0
   1f070:	add	x6, x0, #0x18
   1f074:	ldr	x3, [x6, x1, lsl #3]
   1f078:	ldr	x2, [x5, x1, lsl #3]
   1f07c:	cmp	x3, x2
   1f080:	b.ne	1f040 <OnPrint@@Base+0x1b10>  // b.any
   1f084:	add	x1, x1, #0x1
   1f088:	cmp	x1, x4
   1f08c:	b.ne	1f074 <OnPrint@@Base+0x1b44>  // b.any
   1f090:	ret
   1f094:	stp	x19, x20, [sp, #-32]!
   1f098:	str	x30, [sp, #16]
   1f09c:	mov	x20, x0
   1f0a0:	mov	w19, #0x0                   	// #0
   1f0a4:	b	1f0b4 <OnPrint@@Base+0x1b84>
   1f0a8:	cmp	w19, #0x9
   1f0ac:	b.gt	1f0ec <OnPrint@@Base+0x1bbc>
   1f0b0:	add	w19, w19, #0x1
   1f0b4:	ldr	x1, [x20]
   1f0b8:	tbnz	w1, #0, 1f0a8 <OnPrint@@Base+0x1b78>
   1f0bc:	orr	x2, x1, #0x1
   1f0c0:	ldxr	x0, [x20]
   1f0c4:	cmp	x0, x1
   1f0c8:	b.ne	1f0d4 <OnPrint@@Base+0x1ba4>  // b.any
   1f0cc:	stlxr	w3, x2, [x20]
   1f0d0:	cbnz	w3, 1f0c0 <OnPrint@@Base+0x1b90>
   1f0d4:	dmb	ish
   1f0d8:	cmp	x1, x0
   1f0dc:	b.ne	1f0a8 <OnPrint@@Base+0x1b78>  // b.any
   1f0e0:	ldr	x30, [sp, #16]
   1f0e4:	ldp	x19, x20, [sp], #32
   1f0e8:	ret
   1f0ec:	bl	18bd0 <__sanitizer_set_report_fd@@Base+0x2820>
   1f0f0:	b	1f0b0 <OnPrint@@Base+0x1b80>
   1f0f4:	stp	x19, x20, [sp, #-144]!
   1f0f8:	stp	x21, x22, [sp, #16]
   1f0fc:	stp	x23, x24, [sp, #32]
   1f100:	str	x30, [sp, #80]
   1f104:	mov	x23, x0
   1f108:	mov	x21, x2
   1f10c:	mov	x22, x3
   1f110:	mov	x20, x1
   1f114:	mov	w24, w2
   1f118:	cbz	x3, 1f120 <OnPrint@@Base+0x1bf0>
   1f11c:	strb	wzr, [x3]
   1f120:	cbz	w24, 1f1bc <OnPrint@@Base+0x1c8c>
   1f124:	cbz	x20, 1f1bc <OnPrint@@Base+0x1c8c>
   1f128:	stp	x25, x26, [sp, #48]
   1f12c:	stp	x27, x28, [sp, #64]
   1f130:	mov	w0, #0xb28c                	// #45708
   1f134:	movk	w0, #0x9747, lsl #16
   1f138:	eor	w19, w0, w24, lsl #3
   1f13c:	mov	w25, w24
   1f140:	mov	x1, #0x0                   	// #0
   1f144:	mov	w2, #0xe995                	// #59797
   1f148:	movk	w2, #0x5bd1, lsl #16
   1f14c:	ldr	x0, [x20, x1, lsl #3]
   1f150:	mul	w0, w2, w0
   1f154:	eor	w0, w0, w0, lsr #24
   1f158:	mul	w19, w19, w2
   1f15c:	mul	w0, w0, w2
   1f160:	eor	w19, w0, w19
   1f164:	add	x1, x1, #0x1
   1f168:	cmp	x25, x1
   1f16c:	b.ne	1f14c <OnPrint@@Base+0x1c1c>  // b.any
   1f170:	eor	w19, w19, w19, lsr #13
   1f174:	mov	w0, #0xe995                	// #59797
   1f178:	movk	w0, #0x5bd1, lsl #16
   1f17c:	mul	w19, w19, w0
   1f180:	eor	w19, w19, w19, lsr #15
   1f184:	and	x26, x19, #0xfffff
   1f188:	add	x28, x23, x26, lsl #3
   1f18c:	ldr	x27, [x23, x26, lsl #3]
   1f190:	and	x27, x27, #0xfffffffffffffffe
   1f194:	bfxil	x21, x24, #0, #32
   1f198:	mov	w3, w19
   1f19c:	mov	x1, x20
   1f1a0:	mov	x2, x21
   1f1a4:	mov	x0, x27
   1f1a8:	bl	1f02c <OnPrint@@Base+0x1afc>
   1f1ac:	cbz	x0, 1f1d4 <OnPrint@@Base+0x1ca4>
   1f1b0:	ldp	x25, x26, [sp, #48]
   1f1b4:	ldp	x27, x28, [sp, #64]
   1f1b8:	b	1f1c0 <OnPrint@@Base+0x1c90>
   1f1bc:	mov	x0, #0x0                   	// #0
   1f1c0:	ldp	x21, x22, [sp, #16]
   1f1c4:	ldp	x23, x24, [sp, #32]
   1f1c8:	ldr	x30, [sp, #80]
   1f1cc:	ldp	x19, x20, [sp], #144
   1f1d0:	ret
   1f1d4:	mov	x0, x28
   1f1d8:	bl	1f094 <OnPrint@@Base+0x1b64>
   1f1dc:	str	x0, [sp, #112]
   1f1e0:	cmp	x27, x0
   1f1e4:	b.eq	1f214 <OnPrint@@Base+0x1ce4>  // b.none
   1f1e8:	mov	w3, w19
   1f1ec:	mov	x1, x20
   1f1f0:	mov	x2, x21
   1f1f4:	mov	x27, x0
   1f1f8:	bl	1f02c <OnPrint@@Base+0x1afc>
   1f1fc:	cbz	x0, 1f214 <OnPrint@@Base+0x1ce4>
   1f200:	dmb	ish
   1f204:	str	x27, [x23, x26, lsl #3]
   1f208:	ldp	x25, x26, [sp, #48]
   1f20c:	ldp	x27, x28, [sp, #64]
   1f210:	b	1f1c0 <OnPrint@@Base+0x1c90>
   1f214:	lsr	x2, x26, #12
   1f218:	add	x0, x2, #0x200, lsl #12
   1f21c:	add	x0, x23, x0, lsl #2
   1f220:	ldxr	w3, [x0]
   1f224:	add	w1, w3, #0x1
   1f228:	stlxr	w4, w1, [x0]
   1f22c:	cbnz	w4, 1f220 <OnPrint@@Base+0x1cf0>
   1f230:	dmb	ish
   1f234:	add	w4, w3, #0x1
   1f238:	add	x1, x23, #0x800, lsl #12
   1f23c:	ldr	x0, [x1, #1024]
   1f240:	add	x0, x0, #0x1
   1f244:	str	x0, [x1, #1024]
   1f248:	add	w3, w3, #0x1
   1f24c:	mov	x0, #0x7fffff              	// #8388607
   1f250:	cmp	x3, x0
   1f254:	b.hi	1f2c0 <OnPrint@@Base+0x1d90>  // b.pmore
   1f258:	orr	w0, w4, w2, lsl #23
   1f25c:	str	w0, [sp, #140]
   1f260:	cbz	w0, 1f2dc <OnPrint@@Base+0x1dac>
   1f264:	sub	w27, w24, #0x1
   1f268:	add	x27, x27, #0x4
   1f26c:	lsl	x27, x27, #3
   1f270:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f274:	ldr	x4, [x0, #3528]
   1f278:	add	x2, x4, #0x8
   1f27c:	ldr	x1, [x4, #8]
   1f280:	dmb	ish
   1f284:	ldr	x0, [x4, #16]
   1f288:	dmb	ish
   1f28c:	cbz	x1, 1f420 <OnPrint@@Base+0x1ef0>
   1f290:	add	x3, x27, x1
   1f294:	cmp	x0, x3
   1f298:	b.cc	1f420 <OnPrint@@Base+0x1ef0>  // b.lo, b.ul, b.last
   1f29c:	ldxr	x28, [x2]
   1f2a0:	cmp	x28, x1
   1f2a4:	b.ne	1f2b0 <OnPrint@@Base+0x1d80>  // b.any
   1f2a8:	stlxr	w0, x3, [x2]
   1f2ac:	cbnz	w0, 1f29c <OnPrint@@Base+0x1d6c>
   1f2b0:	dmb	ish
   1f2b4:	cmp	x1, x28
   1f2b8:	b.ne	1f27c <OnPrint@@Base+0x1d4c>  // b.any
   1f2bc:	b	1f3b8 <OnPrint@@Base+0x1e88>
   1f2c0:	mov	x4, #0x800000              	// #8388608
   1f2c4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f2c8:	add	x2, x2, #0xc10
   1f2cc:	mov	w1, #0x77                  	// #119
   1f2d0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f2d4:	add	x0, x0, #0xbb0
   1f2d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f2dc:	mov	x4, #0x0                   	// #0
   1f2e0:	mov	x3, #0x0                   	// #0
   1f2e4:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f2e8:	add	x2, x2, #0xc28
   1f2ec:	mov	w1, #0x79                  	// #121
   1f2f0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f2f4:	add	x0, x0, #0xbb0
   1f2f8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f2fc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f300:	ldr	x0, [x0, #3528]
   1f304:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   1f308:	b	1f444 <OnPrint@@Base+0x1f14>
   1f30c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f310:	ldr	x0, [x0, #3528]
   1f314:	str	x0, [sp, #128]
   1f318:	str	xzr, [x0, #8]
   1f31c:	cmp	x27, #0x10, lsl #12
   1f320:	mov	x0, #0x10000               	// #65536
   1f324:	csel	x1, x27, x0, cs  // cs = hs, nlast
   1f328:	mov	x3, x1
   1f32c:	mov	w2, #0x0                   	// #0
   1f330:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f334:	add	x1, x1, #0xc38
   1f338:	str	x3, [sp, #120]
   1f33c:	mov	x0, x3
   1f340:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1f344:	ldr	x1, [sp, #120]
   1f348:	add	x1, x1, x0
   1f34c:	dmb	ish
   1f350:	ldr	x2, [sp, #128]
   1f354:	str	x1, [x2, #16]
   1f358:	dmb	ish
   1f35c:	str	x0, [x2, #8]
   1f360:	ldr	x1, [x28, #8]
   1f364:	dmb	ish
   1f368:	ldr	x0, [x28, #16]
   1f36c:	dmb	ish
   1f370:	cbz	x1, 1f30c <OnPrint@@Base+0x1ddc>
   1f374:	add	x2, x27, x1
   1f378:	cmp	x0, x2
   1f37c:	b.cc	1f30c <OnPrint@@Base+0x1ddc>  // b.lo, b.ul, b.last
   1f380:	ldr	x3, [sp, #104]
   1f384:	ldxr	x0, [x3]
   1f388:	cmp	x0, x1
   1f38c:	b.ne	1f398 <OnPrint@@Base+0x1e68>  // b.any
   1f390:	stlxr	w4, x2, [x3]
   1f394:	cbnz	w4, 1f384 <OnPrint@@Base+0x1e54>
   1f398:	dmb	ish
   1f39c:	cmp	x1, x0
   1f3a0:	b.ne	1f360 <OnPrint@@Base+0x1e30>  // b.any
   1f3a4:	mov	x28, x0
   1f3a8:	dmb	ish
   1f3ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f3b0:	ldr	x0, [x0, #3528]
   1f3b4:	strb	wzr, [x0]
   1f3b8:	add	x1, x23, #0x800, lsl #12
   1f3bc:	ldr	x0, [x1, #1032]
   1f3c0:	add	x27, x0, x27
   1f3c4:	str	x27, [x1, #1032]
   1f3c8:	ldr	w0, [sp, #140]
   1f3cc:	str	w0, [x28, #8]
   1f3d0:	and	w19, w19, #0xfff00000
   1f3d4:	str	w19, [x28, #12]
   1f3d8:	str	w24, [x28, #16]
   1f3dc:	lsr	x21, x21, #32
   1f3e0:	str	w21, [x28, #20]
   1f3e4:	lsl	x2, x25, #3
   1f3e8:	mov	x1, x20
   1f3ec:	add	x0, x28, #0x18
   1f3f0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1f3f4:	ldr	x0, [sp, #112]
   1f3f8:	str	x0, [x28]
   1f3fc:	dmb	ish
   1f400:	str	x28, [x23, x26, lsl #3]
   1f404:	cbz	x22, 1f410 <OnPrint@@Base+0x1ee0>
   1f408:	mov	w0, #0x1                   	// #1
   1f40c:	strb	w0, [x22]
   1f410:	mov	x0, x28
   1f414:	ldp	x25, x26, [sp, #48]
   1f418:	ldp	x27, x28, [sp, #64]
   1f41c:	b	1f1c0 <OnPrint@@Base+0x1c90>
   1f420:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f424:	ldr	x0, [x0, #3528]
   1f428:	mov	w2, #0x1                   	// #1
   1f42c:	ldxrb	w1, [x0]
   1f430:	stxrb	w3, w2, [x0]
   1f434:	cbnz	w3, 1f42c <OnPrint@@Base+0x1efc>
   1f438:	dmb	ish
   1f43c:	and	w0, w1, #0xff
   1f440:	cbnz	w0, 1f2fc <OnPrint@@Base+0x1dcc>
   1f444:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f448:	ldr	x28, [x0, #3528]
   1f44c:	add	x0, x28, #0x8
   1f450:	str	x0, [sp, #104]
   1f454:	b	1f360 <OnPrint@@Base+0x1e30>
   1f458:	add	x0, x0, #0x4
   1f45c:	ret
   1f460:	str	x30, [sp, #-16]!
   1f464:	mov	x0, x30
   1f468:	ldr	x30, [sp], #16
   1f46c:	ret
   1f470:	stp	x19, x20, [sp, #-32]!
   1f474:	stp	x21, x30, [sp, #16]
   1f478:	mov	x19, x0
   1f47c:	cmp	x3, #0x0
   1f480:	cinc	w0, w2, ne  // ne = any
   1f484:	str	w0, [x19, #8]
   1f488:	cmp	w0, #0x100
   1f48c:	b.hi	1f4c0 <OnPrint@@Base+0x1f90>  // b.pmore
   1f490:	mov	x20, x2
   1f494:	mov	x21, x3
   1f498:	lsl	x2, x2, #3
   1f49c:	add	x0, x19, #0x10
   1f4a0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1f4a4:	cbz	x21, 1f4b0 <OnPrint@@Base+0x1f80>
   1f4a8:	add	x20, x20, #0x2
   1f4ac:	str	x21, [x19, x20, lsl #3]
   1f4b0:	str	xzr, [x19, #2064]
   1f4b4:	ldp	x21, x30, [sp, #16]
   1f4b8:	ldp	x19, x20, [sp], #32
   1f4bc:	ret
   1f4c0:	mov	w3, w0
   1f4c4:	mov	x4, #0x100                 	// #256
   1f4c8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f4cc:	add	x2, x2, #0xc48
   1f4d0:	mov	w1, #0x22                  	// #34
   1f4d4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f4d8:	add	x0, x0, #0xc68
   1f4dc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f4e0:	stp	x19, x20, [sp, #-64]!
   1f4e4:	stp	x21, x22, [sp, #16]
   1f4e8:	stp	x23, x24, [sp, #32]
   1f4ec:	str	x30, [sp, #48]
   1f4f0:	mov	x19, x0
   1f4f4:	mov	x23, x1
   1f4f8:	mov	x22, x2
   1f4fc:	mov	x21, x3
   1f500:	mov	x24, x4
   1f504:	mov	w20, w5
   1f508:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f50c:	ldr	x0, [x0, #4000]
   1f510:	ldr	x0, [x0]
   1f514:	cbz	x0, 1f5b0 <OnPrint@@Base+0x2080>
   1f518:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f51c:	ldr	x0, [x0, #4000]
   1f520:	ldr	x1, [x0]
   1f524:	mov	w3, w20
   1f528:	cmp	w20, #0x1
   1f52c:	b.ls	1f5c4 <OnPrint@@Base+0x2094>  // b.plast
   1f530:	str	x23, [x19, #16]
   1f534:	mov	w0, #0x1                   	// #1
   1f538:	str	w0, [x19, #8]
   1f53c:	cmp	x21, #0xfff
   1f540:	b.ls	1f59c <OnPrint@@Base+0x206c>  // b.plast
   1f544:	cmp	x22, x24
   1f548:	b.ls	1f59c <OnPrint@@Base+0x206c>  // b.plast
   1f54c:	sub	x21, x21, #0x10
   1f550:	cmp	x22, x21
   1f554:	b.cs	1f59c <OnPrint@@Base+0x206c>  // b.hs, b.nlast
   1f558:	mov	x0, x22
   1f55c:	mov	w2, #0x1                   	// #1
   1f560:	tst	x22, #0x7
   1f564:	b.ne	1f59c <OnPrint@@Base+0x206c>  // b.any
   1f568:	ldr	x3, [x0, #8]
   1f56c:	cmp	x1, x3
   1f570:	b.hi	1f59c <OnPrint@@Base+0x206c>  // b.pmore
   1f574:	cmp	x23, x3
   1f578:	b.eq	1f58c <OnPrint@@Base+0x205c>  // b.none
   1f57c:	add	w4, w2, #0x1
   1f580:	str	w4, [x19, #8]
   1f584:	add	x2, x19, w2, uxtw #3
   1f588:	str	x3, [x2, #16]
   1f58c:	ldr	x0, [x0]
   1f590:	mov	x3, x0
   1f594:	cmp	x22, x0
   1f598:	b.cc	1f5e0 <OnPrint@@Base+0x20b0>  // b.lo, b.ul, b.last
   1f59c:	ldp	x21, x22, [sp, #16]
   1f5a0:	ldp	x23, x24, [sp, #32]
   1f5a4:	ldr	x30, [sp, #48]
   1f5a8:	ldp	x19, x20, [sp], #64
   1f5ac:	ret
   1f5b0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1f5b4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f5b8:	ldr	x1, [x1, #4000]
   1f5bc:	str	x0, [x1]
   1f5c0:	b	1f518 <OnPrint@@Base+0x1fe8>
   1f5c4:	mov	x4, #0x2                   	// #2
   1f5c8:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f5cc:	add	x2, x2, #0xcb0
   1f5d0:	mov	w1, #0x47                  	// #71
   1f5d4:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f5d8:	add	x0, x0, #0xc68
   1f5dc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f5e0:	cmp	x0, x21
   1f5e4:	b.cs	1f59c <OnPrint@@Base+0x206c>  // b.hs, b.nlast
   1f5e8:	tst	x3, #0x7
   1f5ec:	b.ne	1f59c <OnPrint@@Base+0x206c>  // b.any
   1f5f0:	ldr	w2, [x19, #8]
   1f5f4:	cmp	w2, w20
   1f5f8:	b.cs	1f59c <OnPrint@@Base+0x206c>  // b.hs, b.nlast
   1f5fc:	mov	x22, x3
   1f600:	b	1f568 <OnPrint@@Base+0x2038>
   1f604:	ldr	w2, [x0, #8]
   1f608:	cmp	x1, w2, uxtw
   1f60c:	b.cs	1f63c <OnPrint@@Base+0x210c>  // b.hs, b.nlast
   1f610:	sub	w2, w2, w1
   1f614:	str	w2, [x0, #8]
   1f618:	mov	w3, w2
   1f61c:	cbz	w2, 1f638 <OnPrint@@Base+0x2108>
   1f620:	add	x0, x0, #0x10
   1f624:	add	x3, x0, x3, lsl #3
   1f628:	ldr	x2, [x0, x1, lsl #3]
   1f62c:	str	x2, [x0], #8
   1f630:	cmp	x0, x3
   1f634:	b.ne	1f628 <OnPrint@@Base+0x20f8>  // b.any
   1f638:	ret
   1f63c:	str	x30, [sp, #-16]!
   1f640:	mov	w4, w2
   1f644:	mov	x3, x1
   1f648:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f64c:	add	x2, x2, #0xcc8
   1f650:	mov	w1, #0x78                  	// #120
   1f654:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f658:	add	x0, x0, #0xc68
   1f65c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f660:	ldr	w8, [x0, #8]
   1f664:	cmp	x8, #0x1
   1f668:	b.ls	1f6b8 <OnPrint@@Base+0x2188>  // b.plast
   1f66c:	ldr	x6, [x0]
   1f670:	mov	x2, #0x1                   	// #1
   1f674:	mov	x0, #0x0                   	// #0
   1f678:	ldr	x4, [x6, x2, lsl #3]
   1f67c:	sub	x5, x1, x4
   1f680:	sub	x3, x4, x1
   1f684:	cmp	x4, x1
   1f688:	csel	x3, x3, x5, cs  // cs = hs, nlast
   1f68c:	ldr	x5, [x6, x0, lsl #3]
   1f690:	sub	x7, x1, x5
   1f694:	sub	x4, x5, x1
   1f698:	cmp	x5, x1
   1f69c:	csel	x4, x4, x7, cs  // cs = hs, nlast
   1f6a0:	cmp	x4, x3
   1f6a4:	csel	x0, x0, x2, ls  // ls = plast
   1f6a8:	add	x2, x2, #0x1
   1f6ac:	cmp	x2, x8
   1f6b0:	b.ne	1f678 <OnPrint@@Base+0x2148>  // b.any
   1f6b4:	ret
   1f6b8:	mov	x0, #0x0                   	// #0
   1f6bc:	b	1f6b4 <OnPrint@@Base+0x2184>
   1f6c0:	stp	x19, x20, [sp, #-176]!
   1f6c4:	stp	x23, x24, [sp, #32]
   1f6c8:	str	x30, [sp, #80]
   1f6cc:	mov	x23, x0
   1f6d0:	ldr	x0, [x0]
   1f6d4:	cbz	x0, 1f73c <OnPrint@@Base+0x220c>
   1f6d8:	ldr	w0, [x23, #8]
   1f6dc:	cbz	w0, 1f73c <OnPrint@@Base+0x220c>
   1f6e0:	stp	x21, x22, [sp, #16]
   1f6e4:	stp	x25, x26, [sp, #48]
   1f6e8:	stp	x27, x28, [sp, #64]
   1f6ec:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f6f0:	ldr	x0, [x0, #4000]
   1f6f4:	ldr	x0, [x0]
   1f6f8:	cbz	x0, 1f758 <OnPrint@@Base+0x2228>
   1f6fc:	lsl	x19, x0, #1
   1f700:	str	xzr, [sp, #152]
   1f704:	str	xzr, [sp, #160]
   1f708:	str	xzr, [sp, #144]
   1f70c:	cmp	xzr, x0, lsl #1
   1f710:	b.ne	1f798 <OnPrint@@Base+0x2268>  // b.any
   1f714:	str	xzr, [sp, #160]
   1f718:	str	xzr, [sp, #168]
   1f71c:	mov	x4, #0x0                   	// #0
   1f720:	mov	x3, #0x0                   	// #0
   1f724:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f728:	add	x2, x2, #0x508
   1f72c:	mov	w1, #0x1b6                 	// #438
   1f730:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f734:	add	x0, x0, #0x520
   1f738:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1f73c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1f740:	add	x0, x0, #0xce0
   1f744:	bl	1d874 <OnPrint@@Base+0x344>
   1f748:	ldp	x23, x24, [sp, #32]
   1f74c:	ldr	x30, [sp, #80]
   1f750:	ldp	x19, x20, [sp], #176
   1f754:	ret
   1f758:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1f75c:	mov	x19, x0
   1f760:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f764:	ldr	x0, [x0, #4000]
   1f768:	str	x19, [x0]
   1f76c:	lsl	x0, x19, #1
   1f770:	str	xzr, [sp, #152]
   1f774:	str	xzr, [sp, #160]
   1f778:	str	xzr, [sp, #144]
   1f77c:	cmp	xzr, x19, lsl #1
   1f780:	b.eq	1f714 <OnPrint@@Base+0x21e4>  // b.none
   1f784:	cbnz	x19, 1f940 <OnPrint@@Base+0x2410>
   1f788:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1f78c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f790:	ldr	x1, [x1, #4000]
   1f794:	str	x0, [x1]
   1f798:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f79c:	ldr	x0, [x0, #4000]
   1f7a0:	ldr	x1, [x0]
   1f7a4:	sub	x0, x1, #0x1
   1f7a8:	tst	x1, x0
   1f7ac:	b.ne	1f948 <OnPrint@@Base+0x2418>  // b.any
   1f7b0:	add	x0, x0, x19
   1f7b4:	neg	x1, x1
   1f7b8:	and	x20, x0, x1
   1f7bc:	mov	w2, #0x0                   	// #0
   1f7c0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f7c4:	add	x1, x1, #0x650
   1f7c8:	mov	x0, x20
   1f7cc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1f7d0:	mov	x21, x0
   1f7d4:	ldr	x2, [sp, #160]
   1f7d8:	ldr	x1, [sp, #144]
   1f7dc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1f7e0:	ldr	x1, [sp, #152]
   1f7e4:	ldr	x0, [sp, #144]
   1f7e8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1f7ec:	str	x21, [sp, #144]
   1f7f0:	str	x20, [sp, #152]
   1f7f4:	ldr	x0, [sp, #160]
   1f7f8:	cmp	x0, x19
   1f7fc:	b.cs	1fc64 <OnPrint@@Base+0x2734>  // b.hs, b.nlast
   1f800:	cmp	x19, x20
   1f804:	b.hi	1f958 <OnPrint@@Base+0x2428>  // b.pmore
   1f808:	ldr	x0, [sp, #160]
   1f80c:	sub	x2, x19, x0
   1f810:	mov	w1, #0x0                   	// #0
   1f814:	ldr	x3, [sp, #144]
   1f818:	add	x0, x3, x0
   1f81c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1f820:	str	x19, [sp, #160]
   1f824:	str	xzr, [sp, #168]
   1f828:	cbz	x19, 1f71c <OnPrint@@Base+0x21ec>
   1f82c:	ldr	x0, [sp, #144]
   1f830:	strb	wzr, [x0]
   1f834:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f838:	ldr	x0, [x0, #4000]
   1f83c:	ldr	x19, [x0]
   1f840:	cbz	x19, 1f9ec <OnPrint@@Base+0x24bc>
   1f844:	str	xzr, [sp, #120]
   1f848:	str	xzr, [sp, #128]
   1f84c:	str	xzr, [sp, #112]
   1f850:	sub	x24, x19, #0x1
   1f854:	ands	x24, x24, x19
   1f858:	b.ne	1fa38 <OnPrint@@Base+0x2508>  // b.any
   1f85c:	lsl	x20, x19, #1
   1f860:	sub	x20, x20, #0x1
   1f864:	neg	x0, x19
   1f868:	and	x20, x20, x0
   1f86c:	mov	w2, #0x0                   	// #0
   1f870:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f874:	add	x1, x1, #0x650
   1f878:	mov	x0, x20
   1f87c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1f880:	mov	x21, x0
   1f884:	ldr	x2, [sp, #128]
   1f888:	ldr	x1, [sp, #112]
   1f88c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1f890:	ldr	x1, [sp, #120]
   1f894:	ldr	x0, [sp, #112]
   1f898:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1f89c:	str	x21, [sp, #112]
   1f8a0:	str	x20, [sp, #120]
   1f8a4:	ldr	x0, [sp, #128]
   1f8a8:	cmp	x0, x19
   1f8ac:	b.cs	1fc58 <OnPrint@@Base+0x2728>  // b.hs, b.nlast
   1f8b0:	cmp	x19, x20
   1f8b4:	b.hi	1fa48 <OnPrint@@Base+0x2518>  // b.pmore
   1f8b8:	ldr	x0, [sp, #128]
   1f8bc:	sub	x2, x19, x0
   1f8c0:	mov	w1, #0x0                   	// #0
   1f8c4:	ldr	x3, [sp, #112]
   1f8c8:	add	x0, x3, x0
   1f8cc:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1f8d0:	str	x19, [sp, #128]
   1f8d4:	str	xzr, [sp, #136]
   1f8d8:	cbz	x19, 1fa18 <OnPrint@@Base+0x24e8>
   1f8dc:	ldr	x0, [sp, #112]
   1f8e0:	strb	wzr, [x0]
   1f8e4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f8e8:	ldr	x0, [x0, #4040]
   1f8ec:	ldr	w26, [x0, #184]
   1f8f0:	ldr	w0, [x23, #8]
   1f8f4:	cbz	w0, 1fc08 <OnPrint@@Base+0x26d8>
   1f8f8:	str	x24, [sp, #96]
   1f8fc:	adrp	x25, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   1f900:	add	x25, x25, #0x9e0
   1f904:	add	x27, sp, #0x90
   1f908:	ldr	x0, [x23]
   1f90c:	ldr	x1, [sp, #96]
   1f910:	ldr	x19, [x0, x1, lsl #3]
   1f914:	cbz	x19, 1fc08 <OnPrint@@Base+0x26d8>
   1f918:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1f91c:	sub	x1, x19, #0x4
   1f920:	bl	24984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
   1f924:	str	x0, [sp, #104]
   1f928:	cbz	x0, 1fb00 <OnPrint@@Base+0x25d0>
   1f92c:	ldr	x19, [sp, #104]
   1f930:	mov	x20, x24
   1f934:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f938:	ldr	x21, [x21, #4040]
   1f93c:	b	1fb60 <OnPrint@@Base+0x2630>
   1f940:	mov	x19, x0
   1f944:	b	1f798 <OnPrint@@Base+0x2268>
   1f948:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f94c:	add	x0, x0, #0x638
   1f950:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1f954:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f958:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f95c:	ldr	x0, [x0, #4000]
   1f960:	ldr	x0, [x0]
   1f964:	cbz	x0, 1f9c8 <OnPrint@@Base+0x2498>
   1f968:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f96c:	ldr	x0, [x0, #4000]
   1f970:	ldr	x1, [x0]
   1f974:	sub	x0, x1, #0x1
   1f978:	tst	x1, x0
   1f97c:	b.ne	1f9dc <OnPrint@@Base+0x24ac>  // b.any
   1f980:	add	x0, x19, x0
   1f984:	neg	x1, x1
   1f988:	and	x20, x0, x1
   1f98c:	mov	w2, #0x0                   	// #0
   1f990:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f994:	add	x1, x1, #0x650
   1f998:	mov	x0, x20
   1f99c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1f9a0:	mov	x21, x0
   1f9a4:	ldr	x2, [sp, #160]
   1f9a8:	ldr	x1, [sp, #144]
   1f9ac:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1f9b0:	ldr	x1, [sp, #152]
   1f9b4:	ldr	x0, [sp, #144]
   1f9b8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1f9bc:	str	x21, [sp, #144]
   1f9c0:	str	x20, [sp, #152]
   1f9c4:	b	1f808 <OnPrint@@Base+0x22d8>
   1f9c8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1f9cc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f9d0:	ldr	x1, [x1, #4000]
   1f9d4:	str	x0, [x1]
   1f9d8:	b	1f968 <OnPrint@@Base+0x2438>
   1f9dc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1f9e0:	add	x0, x0, #0x638
   1f9e4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1f9e8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1f9ec:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1f9f0:	mov	x19, x0
   1f9f4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f9f8:	ldr	x0, [x0, #4000]
   1f9fc:	str	x19, [x0]
   1fa00:	str	xzr, [sp, #120]
   1fa04:	str	xzr, [sp, #128]
   1fa08:	str	xzr, [sp, #112]
   1fa0c:	cbnz	x19, 1f850 <OnPrint@@Base+0x2320>
   1fa10:	str	x19, [sp, #128]
   1fa14:	str	xzr, [sp, #136]
   1fa18:	mov	x4, #0x0                   	// #0
   1fa1c:	mov	x3, #0x0                   	// #0
   1fa20:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fa24:	add	x2, x2, #0x508
   1fa28:	mov	w1, #0x1b6                 	// #438
   1fa2c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fa30:	add	x0, x0, #0x520
   1fa34:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fa38:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fa3c:	add	x0, x0, #0x638
   1fa40:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1fa44:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fa48:	cbz	x19, 1fabc <OnPrint@@Base+0x258c>
   1fa4c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fa50:	ldr	x0, [x0, #4000]
   1fa54:	ldr	x0, [x0]
   1fa58:	cbz	x0, 1fadc <OnPrint@@Base+0x25ac>
   1fa5c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fa60:	ldr	x0, [x0, #4000]
   1fa64:	ldr	x1, [x0]
   1fa68:	sub	x0, x1, #0x1
   1fa6c:	tst	x1, x0
   1fa70:	b.ne	1faf0 <OnPrint@@Base+0x25c0>  // b.any
   1fa74:	add	x0, x19, x0
   1fa78:	neg	x1, x1
   1fa7c:	and	x20, x0, x1
   1fa80:	mov	w2, #0x0                   	// #0
   1fa84:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fa88:	add	x1, x1, #0x650
   1fa8c:	mov	x0, x20
   1fa90:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1fa94:	mov	x21, x0
   1fa98:	ldr	x2, [sp, #128]
   1fa9c:	ldr	x1, [sp, #112]
   1faa0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1faa4:	ldr	x1, [sp, #120]
   1faa8:	ldr	x0, [sp, #112]
   1faac:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1fab0:	str	x21, [sp, #112]
   1fab4:	str	x20, [sp, #120]
   1fab8:	b	1f8b8 <OnPrint@@Base+0x2388>
   1fabc:	mov	x4, #0x0                   	// #0
   1fac0:	mov	x3, #0x0                   	// #0
   1fac4:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1fac8:	add	x2, x2, #0xf40
   1facc:	mov	w1, #0x1fc                 	// #508
   1fad0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fad4:	add	x0, x0, #0x520
   1fad8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fadc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1fae0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fae4:	ldr	x1, [x1, #4000]
   1fae8:	str	x0, [x1]
   1faec:	b	1fa5c <OnPrint@@Base+0x252c>
   1faf0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1faf4:	add	x0, x0, #0x638
   1faf8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1fafc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fb00:	mov	x4, #0x0                   	// #0
   1fb04:	mov	x3, #0x0                   	// #0
   1fb08:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1fb0c:	add	x2, x2, #0xcf8
   1fb10:	mov	w1, #0x22                  	// #34
   1fb14:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1fb18:	add	x0, x0, #0xd10
   1fb1c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fb20:	mov	x4, #0x0                   	// #0
   1fb24:	mov	x3, #0x0                   	// #0
   1fb28:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fb2c:	add	x2, x2, #0x508
   1fb30:	mov	w1, #0x1b6                 	// #438
   1fb34:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fb38:	add	x0, x0, #0x520
   1fb3c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fb40:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1fb44:	add	x1, x1, #0xd60
   1fb48:	add	x0, sp, #0x70
   1fb4c:	bl	1d99c <OnPrint@@Base+0x46c>
   1fb50:	b	1fbc4 <OnPrint@@Base+0x2694>
   1fb54:	ldr	x19, [x19]
   1fb58:	cbz	x19, 1fbd8 <OnPrint@@Base+0x26a8>
   1fb5c:	mov	x20, x22
   1fb60:	ldr	x0, [sp, #160]
   1fb64:	cbz	x0, 1fb20 <OnPrint@@Base+0x25f0>
   1fb68:	ldr	x0, [sp, #144]
   1fb6c:	strb	wzr, [x0]
   1fb70:	str	xzr, [sp, #168]
   1fb74:	add	x22, x20, #0x1
   1fb78:	mov	x6, x25
   1fb7c:	ldr	x5, [x21, #24]
   1fb80:	ldrb	w4, [x21, #181]
   1fb84:	add	x3, x19, #0x8
   1fb88:	mov	w2, w20
   1fb8c:	ldr	x1, [x21, #192]
   1fb90:	mov	x0, x27
   1fb94:	bl	2178c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14d8>
   1fb98:	ldr	x1, [sp, #144]
   1fb9c:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   1fba0:	add	x0, x0, #0x480
   1fba4:	bl	1d874 <OnPrint@@Base+0x344>
   1fba8:	add	w0, w26, w24
   1fbac:	sub	w28, w0, w22
   1fbb0:	sub	w20, w0, w20
   1fbb4:	cmp	w20, #0x0
   1fbb8:	b.le	1fb54 <OnPrint@@Base+0x2624>
   1fbbc:	ldr	x0, [sp, #136]
   1fbc0:	cbnz	x0, 1fb40 <OnPrint@@Base+0x2610>
   1fbc4:	ldr	x1, [x19, #40]
   1fbc8:	cbz	x1, 1fb54 <OnPrint@@Base+0x2624>
   1fbcc:	add	x0, sp, #0x70
   1fbd0:	bl	1d99c <OnPrint@@Base+0x46c>
   1fbd4:	b	1fb54 <OnPrint@@Base+0x2624>
   1fbd8:	ldr	x0, [sp, #104]
   1fbdc:	bl	238e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   1fbe0:	ldr	x0, [sp, #96]
   1fbe4:	add	x0, x0, #0x1
   1fbe8:	mov	x1, x0
   1fbec:	str	x0, [sp, #96]
   1fbf0:	ldr	w0, [x23, #8]
   1fbf4:	cmp	x0, x1
   1fbf8:	b.ls	1fc08 <OnPrint@@Base+0x26d8>  // b.plast
   1fbfc:	mov	x24, x22
   1fc00:	mov	w26, w28
   1fc04:	b	1f908 <OnPrint@@Base+0x23d8>
   1fc08:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   1fc0c:	add	x0, x0, #0x88
   1fc10:	bl	1d874 <OnPrint@@Base+0x344>
   1fc14:	ldr	x0, [sp, #136]
   1fc18:	cbnz	x0, 1fc44 <OnPrint@@Base+0x2714>
   1fc1c:	ldr	x1, [sp, #120]
   1fc20:	ldr	x0, [sp, #112]
   1fc24:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1fc28:	ldr	x1, [sp, #152]
   1fc2c:	ldr	x0, [sp, #144]
   1fc30:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1fc34:	ldp	x21, x22, [sp, #16]
   1fc38:	ldp	x25, x26, [sp, #48]
   1fc3c:	ldp	x27, x28, [sp, #64]
   1fc40:	b	1f748 <OnPrint@@Base+0x2218>
   1fc44:	ldr	x1, [sp, #112]
   1fc48:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1fc4c:	add	x0, x0, #0xd68
   1fc50:	bl	1d874 <OnPrint@@Base+0x344>
   1fc54:	b	1fc1c <OnPrint@@Base+0x26ec>
   1fc58:	str	x19, [sp, #128]
   1fc5c:	str	xzr, [sp, #136]
   1fc60:	b	1f8dc <OnPrint@@Base+0x23ac>
   1fc64:	str	x19, [sp, #160]
   1fc68:	str	xzr, [sp, #168]
   1fc6c:	b	1f82c <OnPrint@@Base+0x22fc>
   1fc70:	mov	w8, w1
   1fc74:	cbnz	w1, 1fcb0 <OnPrint@@Base+0x2780>
   1fc78:	str	xzr, [x0, #2064]
   1fc7c:	str	wzr, [x0, #8]
   1fc80:	ret
   1fc84:	mov	w2, #0x1                   	// #1
   1fc88:	str	w2, [x0, #8]
   1fc8c:	str	x1, [x0, #16]
   1fc90:	ret
   1fc94:	mov	w2, w8
   1fc98:	bl	279a0 <__sanitizer_set_death_callback@@Base+0x1424>
   1fc9c:	b	1fce4 <OnPrint@@Base+0x27b4>
   1fca0:	mov	w5, w8
   1fca4:	mov	x4, x6
   1fca8:	bl	1f4e0 <OnPrint@@Base+0x1fb0>
   1fcac:	b	1fce4 <OnPrint@@Base+0x27b4>
   1fcb0:	mov	x1, x2
   1fcb4:	mov	x2, x3
   1fcb8:	mov	x3, x5
   1fcbc:	and	w7, w7, #0xff
   1fcc0:	str	x2, [x0, #2064]
   1fcc4:	cmp	w8, #0x1
   1fcc8:	b.eq	1fc84 <OnPrint@@Base+0x2754>  // b.none
   1fccc:	str	x30, [sp, #-16]!
   1fcd0:	cbnz	w7, 1fca0 <OnPrint@@Base+0x2770>
   1fcd4:	cbz	x4, 1fc94 <OnPrint@@Base+0x2764>
   1fcd8:	mov	w3, w8
   1fcdc:	mov	x2, x4
   1fce0:	bl	27a3c <__sanitizer_set_death_callback@@Base+0x14c0>
   1fce4:	ldr	x30, [sp], #16
   1fce8:	ret

000000000001fcec <__sanitizer_symbolize_pc@@Base>:
   1fcec:	cbnz	x3, 1fcf4 <__sanitizer_symbolize_pc@@Base+0x8>
   1fcf0:	ret
   1fcf4:	stp	x19, x20, [sp, #-112]!
   1fcf8:	stp	x21, x22, [sp, #16]
   1fcfc:	stp	x23, x24, [sp, #32]
   1fd00:	str	x30, [sp, #72]
   1fd04:	mov	x21, x0
   1fd08:	mov	x23, x1
   1fd0c:	mov	x19, x2
   1fd10:	mov	x20, x3
   1fd14:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   1fd18:	sub	x1, x21, #0x4
   1fd1c:	bl	24984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
   1fd20:	mov	x21, x0
   1fd24:	cbz	x0, 1fe0c <__sanitizer_symbolize_pc@@Base+0x120>
   1fd28:	stp	x25, x26, [sp, #48]
   1fd2c:	str	x27, [sp, #64]
   1fd30:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fd34:	ldr	x0, [x0, #4000]
   1fd38:	ldr	x22, [x0]
   1fd3c:	cbz	x22, 1fe2c <__sanitizer_symbolize_pc@@Base+0x140>
   1fd40:	str	xzr, [sp, #88]
   1fd44:	str	xzr, [sp, #96]
   1fd48:	str	xzr, [sp, #80]
   1fd4c:	sub	x0, x22, #0x1
   1fd50:	tst	x0, x22
   1fd54:	b.ne	1fe78 <__sanitizer_symbolize_pc@@Base+0x18c>  // b.any
   1fd58:	lsl	x24, x22, #1
   1fd5c:	sub	x24, x24, #0x1
   1fd60:	neg	x0, x22
   1fd64:	and	x24, x24, x0
   1fd68:	mov	w2, #0x0                   	// #0
   1fd6c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fd70:	add	x1, x1, #0x650
   1fd74:	mov	x0, x24
   1fd78:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1fd7c:	mov	x25, x0
   1fd80:	ldr	x2, [sp, #96]
   1fd84:	ldr	x1, [sp, #80]
   1fd88:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1fd8c:	ldr	x1, [sp, #88]
   1fd90:	ldr	x0, [sp, #80]
   1fd94:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1fd98:	str	x25, [sp, #80]
   1fd9c:	str	x24, [sp, #88]
   1fda0:	ldr	x0, [sp, #96]
   1fda4:	cmp	x22, x0
   1fda8:	b.ls	20034 <__sanitizer_symbolize_pc@@Base+0x348>  // b.plast
   1fdac:	cmp	x22, x24
   1fdb0:	b.hi	1fe88 <__sanitizer_symbolize_pc@@Base+0x19c>  // b.pmore
   1fdb4:	ldr	x0, [sp, #96]
   1fdb8:	sub	x2, x22, x0
   1fdbc:	mov	w1, #0x0                   	// #0
   1fdc0:	ldr	x3, [sp, #80]
   1fdc4:	add	x0, x3, x0
   1fdc8:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   1fdcc:	str	x22, [sp, #96]
   1fdd0:	str	xzr, [sp, #104]
   1fdd4:	cbz	x22, 1fe58 <__sanitizer_symbolize_pc@@Base+0x16c>
   1fdd8:	ldr	x0, [sp, #80]
   1fddc:	strb	wzr, [x0]
   1fde0:	sub	x20, x20, #0x1
   1fde4:	add	x20, x19, x20
   1fde8:	cmp	x19, x20
   1fdec:	b.cs	1ffe0 <__sanitizer_symbolize_pc@@Base+0x2f4>  // b.hs, b.nlast
   1fdf0:	mov	w22, #0x0                   	// #0
   1fdf4:	adrp	x26, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   1fdf8:	add	x26, x26, #0x9e0
   1fdfc:	adrp	x25, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fe00:	ldr	x25, [x25, #4040]
   1fe04:	add	x27, sp, #0x50
   1fe08:	b	1ff74 <__sanitizer_symbolize_pc@@Base+0x288>
   1fe0c:	mov	x2, x20
   1fe10:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   1fe14:	add	x1, x1, #0xd80
   1fe18:	mov	x0, x19
   1fe1c:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   1fe20:	add	x19, x19, x20
   1fe24:	sturb	wzr, [x19, #-1]
   1fe28:	b	20000 <__sanitizer_symbolize_pc@@Base+0x314>
   1fe2c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1fe30:	mov	x22, x0
   1fe34:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fe38:	ldr	x0, [x0, #4000]
   1fe3c:	str	x22, [x0]
   1fe40:	str	xzr, [sp, #88]
   1fe44:	str	xzr, [sp, #96]
   1fe48:	str	xzr, [sp, #80]
   1fe4c:	cbnz	x22, 1fd4c <__sanitizer_symbolize_pc@@Base+0x60>
   1fe50:	str	x22, [sp, #96]
   1fe54:	str	xzr, [sp, #104]
   1fe58:	mov	x4, #0x0                   	// #0
   1fe5c:	mov	x3, #0x0                   	// #0
   1fe60:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fe64:	add	x2, x2, #0x508
   1fe68:	mov	w1, #0x1b6                 	// #438
   1fe6c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fe70:	add	x0, x0, #0x520
   1fe74:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1fe78:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fe7c:	add	x0, x0, #0x638
   1fe80:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1fe84:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1fe88:	cbz	x22, 1fefc <__sanitizer_symbolize_pc@@Base+0x210>
   1fe8c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fe90:	ldr	x0, [x0, #4000]
   1fe94:	ldr	x0, [x0]
   1fe98:	cbz	x0, 1ff1c <__sanitizer_symbolize_pc@@Base+0x230>
   1fe9c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fea0:	ldr	x0, [x0, #4000]
   1fea4:	ldr	x1, [x0]
   1fea8:	sub	x0, x1, #0x1
   1feac:	tst	x1, x0
   1feb0:	b.ne	1ff30 <__sanitizer_symbolize_pc@@Base+0x244>  // b.any
   1feb4:	add	x0, x22, x0
   1feb8:	neg	x1, x1
   1febc:	and	x24, x0, x1
   1fec0:	mov	w2, #0x0                   	// #0
   1fec4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1fec8:	add	x1, x1, #0x650
   1fecc:	mov	x0, x24
   1fed0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   1fed4:	mov	x25, x0
   1fed8:	ldr	x2, [sp, #96]
   1fedc:	ldr	x1, [sp, #80]
   1fee0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   1fee4:	ldr	x1, [sp, #88]
   1fee8:	ldr	x0, [sp, #80]
   1feec:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1fef0:	str	x25, [sp, #80]
   1fef4:	str	x24, [sp, #88]
   1fef8:	b	1fdb4 <__sanitizer_symbolize_pc@@Base+0xc8>
   1fefc:	mov	x4, #0x0                   	// #0
   1ff00:	mov	x3, #0x0                   	// #0
   1ff04:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   1ff08:	add	x2, x2, #0xf40
   1ff0c:	mov	w1, #0x1fc                 	// #508
   1ff10:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ff14:	add	x0, x0, #0x520
   1ff18:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ff1c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   1ff20:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ff24:	ldr	x1, [x1, #4000]
   1ff28:	str	x0, [x1]
   1ff2c:	b	1fe9c <__sanitizer_symbolize_pc@@Base+0x1b0>
   1ff30:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ff34:	add	x0, x0, #0x638
   1ff38:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   1ff3c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   1ff40:	mov	x4, #0x0                   	// #0
   1ff44:	mov	x3, #0x0                   	// #0
   1ff48:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ff4c:	add	x2, x2, #0x508
   1ff50:	mov	w1, #0x1b6                 	// #438
   1ff54:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   1ff58:	add	x0, x0, #0x520
   1ff5c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   1ff60:	ldr	x21, [x21]
   1ff64:	add	w22, w22, #0x1
   1ff68:	cmp	x21, #0x0
   1ff6c:	ccmp	x19, x20, #0x2, ne  // ne = any
   1ff70:	b.cs	1ffe0 <__sanitizer_symbolize_pc@@Base+0x2f4>  // b.hs, b.nlast
   1ff74:	ldr	x0, [sp, #96]
   1ff78:	cbz	x0, 1ff40 <__sanitizer_symbolize_pc@@Base+0x254>
   1ff7c:	ldr	x0, [sp, #80]
   1ff80:	strb	wzr, [x0]
   1ff84:	str	xzr, [sp, #104]
   1ff88:	mov	x6, x26
   1ff8c:	ldr	x5, [x25, #24]
   1ff90:	ldrb	w4, [x25, #181]
   1ff94:	add	x3, x21, #0x8
   1ff98:	mov	w2, w22
   1ff9c:	mov	x1, x23
   1ffa0:	mov	x0, x27
   1ffa4:	bl	2178c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14d8>
   1ffa8:	ldr	x0, [sp, #104]
   1ffac:	cbz	x0, 1ff60 <__sanitizer_symbolize_pc@@Base+0x274>
   1ffb0:	sub	x24, x20, x19
   1ffb4:	sub	x24, x24, #0x1
   1ffb8:	mov	x2, x24
   1ffbc:	ldr	x1, [sp, #80]
   1ffc0:	mov	x0, x19
   1ffc4:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   1ffc8:	ldr	x0, [sp, #104]
   1ffcc:	cmp	x0, x24
   1ffd0:	csel	x24, x0, x24, ls  // ls = plast
   1ffd4:	add	x19, x19, x24
   1ffd8:	strb	wzr, [x19], #1
   1ffdc:	b	1ff60 <__sanitizer_symbolize_pc@@Base+0x274>
   1ffe0:	cmp	x19, x20
   1ffe4:	b.hi	20014 <__sanitizer_symbolize_pc@@Base+0x328>  // b.pmore
   1ffe8:	strb	wzr, [x19]
   1ffec:	ldr	x1, [sp, #88]
   1fff0:	ldr	x0, [sp, #80]
   1fff4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   1fff8:	ldp	x25, x26, [sp, #48]
   1fffc:	ldr	x27, [sp, #64]
   20000:	ldp	x21, x22, [sp, #16]
   20004:	ldp	x23, x24, [sp, #32]
   20008:	ldr	x30, [sp, #72]
   2000c:	ldp	x19, x20, [sp], #112
   20010:	ret
   20014:	mov	x4, #0x0                   	// #0
   20018:	mov	x3, #0x0                   	// #0
   2001c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20020:	add	x2, x2, #0xd98
   20024:	mov	w1, #0x84                  	// #132
   20028:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2002c:	add	x0, x0, #0xd10
   20030:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20034:	str	x22, [sp, #96]
   20038:	str	xzr, [sp, #104]
   2003c:	b	1fdd8 <__sanitizer_symbolize_pc@@Base+0xec>

0000000000020040 <__sanitizer_symbolize_global@@Base>:
   20040:	cbnz	x3, 20048 <__sanitizer_symbolize_global@@Base+0x8>
   20044:	ret
   20048:	stp	x19, x20, [sp, #-160]!
   2004c:	stp	x21, x22, [sp, #16]
   20050:	stp	x23, x24, [sp, #32]
   20054:	str	x30, [sp, #48]
   20058:	mov	x20, x0
   2005c:	mov	x22, x1
   20060:	mov	x21, x2
   20064:	mov	x19, x3
   20068:	strb	wzr, [x2]
   2006c:	add	x23, sp, #0x60
   20070:	mov	x0, x23
   20074:	bl	23914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3660>
   20078:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   2007c:	mov	x2, x23
   20080:	mov	x1, x20
   20084:	bl	24a60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47ac>
   20088:	and	w0, w0, #0xff
   2008c:	cbz	w0, 20180 <__sanitizer_symbolize_global@@Base+0x140>
   20090:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20094:	ldr	x0, [x0, #4000]
   20098:	ldr	x20, [x0]
   2009c:	cbz	x20, 20194 <__sanitizer_symbolize_global@@Base+0x154>
   200a0:	str	xzr, [sp, #72]
   200a4:	str	xzr, [sp, #80]
   200a8:	str	xzr, [sp, #64]
   200ac:	sub	x0, x20, #0x1
   200b0:	tst	x0, x20
   200b4:	b.ne	201e0 <__sanitizer_symbolize_global@@Base+0x1a0>  // b.any
   200b8:	lsl	x23, x20, #1
   200bc:	sub	x23, x23, #0x1
   200c0:	neg	x0, x20
   200c4:	and	x23, x23, x0
   200c8:	mov	w2, #0x0                   	// #0
   200cc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   200d0:	add	x1, x1, #0x650
   200d4:	mov	x0, x23
   200d8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   200dc:	mov	x24, x0
   200e0:	ldr	x2, [sp, #80]
   200e4:	ldr	x1, [sp, #64]
   200e8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   200ec:	ldr	x1, [sp, #72]
   200f0:	ldr	x0, [sp, #64]
   200f4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   200f8:	str	x24, [sp, #64]
   200fc:	str	x23, [sp, #72]
   20100:	ldr	x0, [sp, #80]
   20104:	cmp	x0, x20
   20108:	b.cs	202a8 <__sanitizer_symbolize_global@@Base+0x268>  // b.hs, b.nlast
   2010c:	cmp	x23, x20
   20110:	b.cc	201f0 <__sanitizer_symbolize_global@@Base+0x1b0>  // b.lo, b.ul, b.last
   20114:	ldr	x0, [sp, #80]
   20118:	sub	x2, x20, x0
   2011c:	mov	w1, #0x0                   	// #0
   20120:	ldr	x3, [sp, #64]
   20124:	add	x0, x3, x0
   20128:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   2012c:	str	x20, [sp, #80]
   20130:	str	xzr, [sp, #88]
   20134:	cbz	x20, 201c0 <__sanitizer_symbolize_global@@Base+0x180>
   20138:	ldr	x0, [sp, #64]
   2013c:	strb	wzr, [x0]
   20140:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20144:	ldr	x0, [x0, #4040]
   20148:	ldr	x3, [x0, #24]
   2014c:	add	x2, sp, #0x60
   20150:	mov	x1, x22
   20154:	add	x0, sp, #0x40
   20158:	bl	21460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11ac>
   2015c:	mov	x2, x19
   20160:	ldr	x1, [sp, #64]
   20164:	mov	x0, x21
   20168:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   2016c:	add	x2, x21, x19
   20170:	sturb	wzr, [x2, #-1]
   20174:	ldr	x1, [sp, #72]
   20178:	ldr	x0, [sp, #64]
   2017c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20180:	ldp	x21, x22, [sp, #16]
   20184:	ldp	x23, x24, [sp, #32]
   20188:	ldr	x30, [sp, #48]
   2018c:	ldp	x19, x20, [sp], #160
   20190:	ret
   20194:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20198:	mov	x20, x0
   2019c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   201a0:	ldr	x0, [x0, #4000]
   201a4:	str	x20, [x0]
   201a8:	str	xzr, [sp, #72]
   201ac:	str	xzr, [sp, #80]
   201b0:	str	xzr, [sp, #64]
   201b4:	cbnz	x20, 200ac <__sanitizer_symbolize_global@@Base+0x6c>
   201b8:	str	x20, [sp, #80]
   201bc:	str	xzr, [sp, #88]
   201c0:	mov	x4, #0x0                   	// #0
   201c4:	mov	x3, #0x0                   	// #0
   201c8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   201cc:	add	x2, x2, #0x508
   201d0:	mov	w1, #0x1b6                 	// #438
   201d4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   201d8:	add	x0, x0, #0x520
   201dc:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   201e0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   201e4:	add	x0, x0, #0x638
   201e8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   201ec:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   201f0:	cbz	x20, 20264 <__sanitizer_symbolize_global@@Base+0x224>
   201f4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   201f8:	ldr	x0, [x0, #4000]
   201fc:	ldr	x0, [x0]
   20200:	cbz	x0, 20284 <__sanitizer_symbolize_global@@Base+0x244>
   20204:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20208:	ldr	x0, [x0, #4000]
   2020c:	ldr	x23, [x0]
   20210:	sub	x0, x23, #0x1
   20214:	tst	x23, x0
   20218:	b.ne	20298 <__sanitizer_symbolize_global@@Base+0x258>  // b.any
   2021c:	add	x0, x0, x20
   20220:	neg	x23, x23
   20224:	and	x23, x0, x23
   20228:	mov	w2, #0x0                   	// #0
   2022c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20230:	add	x1, x1, #0x650
   20234:	mov	x0, x23
   20238:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   2023c:	mov	x24, x0
   20240:	ldr	x2, [sp, #80]
   20244:	ldr	x1, [sp, #64]
   20248:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2024c:	ldr	x1, [sp, #72]
   20250:	ldr	x0, [sp, #64]
   20254:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20258:	str	x24, [sp, #64]
   2025c:	str	x23, [sp, #72]
   20260:	b	20114 <__sanitizer_symbolize_global@@Base+0xd4>
   20264:	mov	x4, #0x0                   	// #0
   20268:	mov	x3, #0x0                   	// #0
   2026c:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   20270:	add	x2, x2, #0xf40
   20274:	mov	w1, #0x1fc                 	// #508
   20278:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2027c:	add	x0, x0, #0x520
   20280:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   20284:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20288:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2028c:	ldr	x1, [x1, #4000]
   20290:	str	x0, [x1]
   20294:	b	20204 <__sanitizer_symbolize_global@@Base+0x1c4>
   20298:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2029c:	add	x0, x0, #0x638
   202a0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   202a4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   202a8:	str	x20, [sp, #80]
   202ac:	str	xzr, [sp, #88]
   202b0:	b	20138 <__sanitizer_symbolize_global@@Base+0xf8>

00000000000202b4 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   202b4:	stp	x19, x20, [sp, #-64]!
   202b8:	stp	x21, x22, [sp, #16]
   202bc:	str	x30, [sp, #32]
   202c0:	mov	x21, x0
   202c4:	mov	x19, x1
   202c8:	mov	x20, x2
   202cc:	mov	x22, x3
   202d0:	str	xzr, [sp, #56]
   202d4:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   202d8:	mov	x3, x22
   202dc:	add	x2, sp, #0x38
   202e0:	mov	x1, x21
   202e4:	bl	24904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4650>
   202e8:	and	w0, w0, #0xff
   202ec:	cbz	w0, 20330 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   202f0:	cmp	x19, #0x0
   202f4:	mov	w0, #0x1                   	// #1
   202f8:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   202fc:	b.ne	20310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c>  // b.any
   20300:	ldp	x21, x22, [sp, #16]
   20304:	ldr	x30, [sp, #32]
   20308:	ldp	x19, x20, [sp], #64
   2030c:	ret
   20310:	mov	x2, x20
   20314:	ldr	x1, [sp, #56]
   20318:	mov	x0, x19
   2031c:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   20320:	add	x19, x19, x20
   20324:	sturb	wzr, [x19, #-1]
   20328:	mov	w0, #0x1                   	// #1
   2032c:	b	20300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c>
   20330:	mov	w0, #0x0                   	// #0
   20334:	b	20300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c>
   20338:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2033c:	ldr	x3, [x3, #4040]
   20340:	ldrb	w3, [x3, #60]
   20344:	cbnz	w3, 2034c <__sanitizer_get_module_and_offset_for_pc@@Base+0x98>
   20348:	ret
   2034c:	stp	x19, x20, [sp, #-80]!
   20350:	stp	x21, x22, [sp, #16]
   20354:	stp	x23, x30, [sp, #32]
   20358:	mov	x21, x0
   2035c:	mov	x20, x1
   20360:	mov	x19, x2
   20364:	str	xzr, [sp, #56]
   20368:	str	xzr, [sp, #64]
   2036c:	str	xzr, [sp, #48]
   20370:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20374:	ldr	x0, [x0, #4000]
   20378:	ldr	x0, [x0]
   2037c:	cbz	x0, 20490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dc>
   20380:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20384:	ldr	x0, [x0, #4000]
   20388:	ldr	x3, [x0]
   2038c:	sub	x0, x3, #0x1
   20390:	tst	x0, x3
   20394:	b.ne	204a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f0>  // b.any
   20398:	add	x22, x3, #0x3ff
   2039c:	neg	x3, x3
   203a0:	and	x22, x22, x3
   203a4:	mov	w2, #0x0                   	// #0
   203a8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   203ac:	add	x1, x1, #0x650
   203b0:	mov	x0, x22
   203b4:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   203b8:	mov	x23, x0
   203bc:	ldr	x2, [sp, #64]
   203c0:	ldr	x1, [sp, #48]
   203c4:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   203c8:	ldr	x1, [sp, #56]
   203cc:	ldr	x0, [sp, #48]
   203d0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   203d4:	str	x23, [sp, #48]
   203d8:	str	x22, [sp, #56]
   203dc:	ldr	x0, [sp, #64]
   203e0:	cmp	x0, #0x3ff
   203e4:	b.hi	2040c <__sanitizer_get_module_and_offset_for_pc@@Base+0x158>  // b.pmore
   203e8:	cmp	x22, #0x3ff
   203ec:	b.ls	204b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x200>  // b.plast
   203f0:	ldr	x0, [sp, #64]
   203f4:	mov	x2, #0x400                 	// #1024
   203f8:	sub	x2, x2, x0
   203fc:	mov	w1, #0x0                   	// #0
   20400:	ldr	x3, [sp, #48]
   20404:	add	x0, x3, x0
   20408:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   2040c:	mov	x0, #0x400                 	// #1024
   20410:	str	x0, [sp, #64]
   20414:	str	xzr, [sp, #72]
   20418:	ldr	x0, [sp, #48]
   2041c:	strb	wzr, [x0]
   20420:	add	x0, sp, #0x30
   20424:	mov	x2, x21
   20428:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2042c:	add	x1, x1, #0xee0
   20430:	mov	x21, x0
   20434:	bl	1d99c <OnPrint@@Base+0x46c>
   20438:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2043c:	ldr	x0, [x0, #4040]
   20440:	adrp	x6, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   20444:	add	x6, x6, #0x9e0
   20448:	ldr	x5, [x0, #24]
   2044c:	ldrb	w4, [x0, #181]
   20450:	mov	x3, x20
   20454:	mov	w2, #0x0                   	// #0
   20458:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2045c:	add	x1, x1, #0xdb8
   20460:	mov	x0, x21
   20464:	bl	2178c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14d8>
   20468:	mov	x1, x19
   2046c:	ldr	x0, [sp, #48]
   20470:	bl	12e7c <__sanitizer_report_error_summary@@Base+0x1c>
   20474:	ldr	x1, [sp, #56]
   20478:	ldr	x0, [sp, #48]
   2047c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20480:	ldp	x21, x22, [sp, #16]
   20484:	ldp	x23, x30, [sp, #32]
   20488:	ldp	x19, x20, [sp], #80
   2048c:	ret
   20490:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20494:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20498:	ldr	x1, [x1, #4000]
   2049c:	str	x0, [x1]
   204a0:	b	20380 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcc>
   204a4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   204a8:	add	x0, x0, #0x638
   204ac:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   204b0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   204b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   204b8:	ldr	x0, [x0, #4000]
   204bc:	ldr	x0, [x0]
   204c0:	cbz	x0, 20524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x270>
   204c4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   204c8:	ldr	x0, [x0, #4000]
   204cc:	ldr	x0, [x0]
   204d0:	sub	x1, x0, #0x1
   204d4:	tst	x1, x0
   204d8:	b.ne	20538 <__sanitizer_get_module_and_offset_for_pc@@Base+0x284>  // b.any
   204dc:	add	x22, x0, #0x3ff
   204e0:	neg	x0, x0
   204e4:	and	x22, x22, x0
   204e8:	mov	w2, #0x0                   	// #0
   204ec:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   204f0:	add	x1, x1, #0x650
   204f4:	mov	x0, x22
   204f8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   204fc:	mov	x23, x0
   20500:	ldr	x2, [sp, #64]
   20504:	ldr	x1, [sp, #48]
   20508:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2050c:	ldr	x1, [sp, #56]
   20510:	ldr	x0, [sp, #48]
   20514:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20518:	str	x23, [sp, #48]
   2051c:	str	x22, [sp, #56]
   20520:	b	203f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13c>
   20524:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20528:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2052c:	ldr	x1, [x1, #4000]
   20530:	str	x0, [x1]
   20534:	b	204c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x210>
   20538:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2053c:	add	x0, x0, #0x638
   20540:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20544:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20548:	stp	x19, x20, [sp, #-32]!
   2054c:	str	x30, [sp, #16]
   20550:	mov	x19, x0
   20554:	ldr	x20, [x0]
   20558:	mov	w1, #0x1                   	// #1
   2055c:	ldxrb	w0, [x20]
   20560:	stxrb	w2, w1, [x20]
   20564:	cbnz	w2, 2055c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a8>
   20568:	dmb	ish
   2056c:	and	w0, w0, #0xff
   20570:	cbnz	w0, 20598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e4>
   20574:	mov	x0, x19
   20578:	bl	158f0 <__sanitizer_cov_dump@@Base+0x1d38>
   2057c:	ldr	w0, [x19, #8]
   20580:	bl	1c120 <__sanitizer_set_report_fd@@Base+0x5d70>
   20584:	dmb	ish
   20588:	strb	wzr, [x20]
   2058c:	ldr	x30, [sp, #16]
   20590:	ldp	x19, x20, [sp], #32
   20594:	ret
   20598:	mov	x0, x20
   2059c:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   205a0:	b	20574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c0>
   205a4:	stp	x19, x30, [sp, #-16]!
   205a8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   205ac:	ldr	x0, [x0, #4040]
   205b0:	ldr	x19, [x0, #112]
   205b4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   205b8:	add	x1, x1, #0xdc0
   205bc:	mov	x0, x19
   205c0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   205c4:	mov	w1, #0x1                   	// #1
   205c8:	cbnz	w0, 205d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x324>
   205cc:	mov	w0, w1
   205d0:	ldp	x19, x30, [sp], #16
   205d4:	ret
   205d8:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   205dc:	add	x1, x1, #0x58
   205e0:	mov	x0, x19
   205e4:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   205e8:	mov	w1, #0x0                   	// #0
   205ec:	cbnz	w0, 205cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x318>
   205f0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   205f4:	ldr	x0, [x0, #3816]
   205f8:	bl	20548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x294>
   205fc:	and	w1, w0, #0xff
   20600:	b	205cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x318>
   20604:	adrp	x3, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20608:	ldr	x3, [x3, #4040]
   2060c:	ldrb	w3, [x3, #60]
   20610:	cbz	w3, 2067c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c8>
   20614:	stp	x19, x20, [sp, #-32]!
   20618:	stp	x21, x30, [sp, #16]
   2061c:	mov	x21, x0
   20620:	mov	x20, x2
   20624:	ldr	w0, [x1, #8]
   20628:	cbz	w0, 2066c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b8>
   2062c:	ldr	x0, [x1]
   20630:	ldr	x19, [x0]
   20634:	sub	x19, x19, #0x4
   20638:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   2063c:	mov	x1, x19
   20640:	bl	24984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d0>
   20644:	mov	x19, x0
   20648:	mov	x2, x20
   2064c:	add	x1, x0, #0x8
   20650:	mov	x0, x21
   20654:	bl	20338 <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   20658:	mov	x0, x19
   2065c:	bl	238e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   20660:	ldp	x21, x30, [sp, #16]
   20664:	ldp	x19, x20, [sp], #32
   20668:	ret
   2066c:	mov	x1, #0x0                   	// #0
   20670:	mov	x0, x21
   20674:	bl	12e7c <__sanitizer_report_error_summary@@Base+0x1c>
   20678:	b	20660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   2067c:	ret
   20680:	stp	x19, x30, [sp, #-16]!
   20684:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20688:	ldr	x0, [x0, #4008]
   2068c:	ldr	x19, [x0]
   20690:	mov	x0, x19
   20694:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   20698:	mov	x1, x0
   2069c:	mov	x0, x19
   206a0:	bl	158a4 <__sanitizer_cov_dump@@Base+0x1cec>
   206a4:	mov	x1, #0xe                   	// #14
   206a8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   206ac:	add	x0, x0, #0xfe8
   206b0:	bl	158a4 <__sanitizer_cov_dump@@Base+0x1cec>
   206b4:	ldp	x19, x30, [sp], #16
   206b8:	ret
   206bc:	stp	x19, x20, [sp, #-208]!
   206c0:	stp	x21, x22, [sp, #16]
   206c4:	stp	x23, x24, [sp, #32]
   206c8:	str	x30, [sp, #80]
   206cc:	mov	x19, x0
   206d0:	mov	w20, w1
   206d4:	mov	x21, x2
   206d8:	mov	x22, x3
   206dc:	bl	1c29c <__sanitizer_set_report_fd@@Base+0x5eec>
   206e0:	and	w0, w0, #0xff
   206e4:	cbz	w0, 2081c <__sanitizer_get_module_and_offset_for_pc@@Base+0x568>
   206e8:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   206ec:	and	w0, w0, #0xff
   206f0:	cbnz	w0, 20bf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x940>
   206f4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   206f8:	add	x23, x1, #0x9e0
   206fc:	mov	x1, x23
   20700:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20704:	add	x0, x0, #0xd50
   20708:	bl	1d874 <OnPrint@@Base+0x344>
   2070c:	mov	w7, w20
   20710:	ldr	x6, [x19, #32]
   20714:	ldr	x5, [x19, #40]
   20718:	ldr	x4, [x19, #24]
   2071c:	ldr	x3, [x19, #16]
   20720:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20724:	add	x2, x2, #0xfe8
   20728:	add	x2, x2, #0x10
   2072c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20730:	ldr	x0, [x0, #4008]
   20734:	ldr	x1, [x0]
   20738:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2073c:	add	x0, x0, #0xf20
   20740:	bl	1d908 <OnPrint@@Base+0x3d8>
   20744:	mov	x1, x23
   20748:	b	20c48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x994>
   2074c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20750:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20754:	ldr	x1, [x1, #4000]
   20758:	str	x0, [x1]
   2075c:	b	20c64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9b0>
   20760:	stp	x25, x26, [sp, #48]
   20764:	stp	x27, x28, [sp, #64]
   20768:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2076c:	add	x0, x0, #0x638
   20770:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20774:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20778:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2077c:	ldr	x0, [x0, #4000]
   20780:	ldr	x0, [x0]
   20784:	cbz	x0, 207f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53c>
   20788:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2078c:	ldr	x0, [x0, #4000]
   20790:	ldr	x0, [x0]
   20794:	sub	x1, x0, #0x1
   20798:	tst	x1, x0
   2079c:	b.ne	20804 <__sanitizer_get_module_and_offset_for_pc@@Base+0x550>  // b.any
   207a0:	stp	x25, x26, [sp, #48]
   207a4:	add	x24, x0, #0x817
   207a8:	neg	x0, x0
   207ac:	and	x24, x24, x0
   207b0:	mov	w2, #0x0                   	// #0
   207b4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   207b8:	add	x1, x1, #0x650
   207bc:	mov	x0, x24
   207c0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   207c4:	mov	x25, x0
   207c8:	mov	x2, #0x0                   	// #0
   207cc:	mov	x1, x20
   207d0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   207d4:	mov	x1, x23
   207d8:	mov	x0, x20
   207dc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   207e0:	mov	x23, x24
   207e4:	mov	x20, x25
   207e8:	ldp	x25, x26, [sp, #48]
   207ec:	b	20cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa0c>
   207f0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   207f4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   207f8:	ldr	x1, [x1, #4000]
   207fc:	str	x0, [x1]
   20800:	b	20788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d4>
   20804:	stp	x25, x26, [sp, #48]
   20808:	stp	x27, x28, [sp, #64]
   2080c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20810:	add	x0, x0, #0x638
   20814:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20818:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   2081c:	stp	x25, x26, [sp, #48]
   20820:	stp	x27, x28, [sp, #64]
   20824:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   20828:	and	w0, w0, #0xff
   2082c:	cbnz	w0, 20e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbc4>
   20830:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   20834:	add	x24, x1, #0x9e0
   20838:	mov	x1, x24
   2083c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20840:	add	x0, x0, #0xd50
   20844:	bl	1d874 <OnPrint@@Base+0x344>
   20848:	mov	x0, x19
   2084c:	bl	1bcf8 <__sanitizer_set_report_fd@@Base+0x5948>
   20850:	mov	x23, x0
   20854:	mov	w7, w20
   20858:	ldr	x6, [x19, #32]
   2085c:	ldr	x5, [x19, #40]
   20860:	ldr	x4, [x19, #24]
   20864:	ldr	x3, [x19, #16]
   20868:	mov	x2, x0
   2086c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20870:	ldr	x0, [x0, #4008]
   20874:	ldr	x1, [x0]
   20878:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2087c:	add	x0, x0, #0xf58
   20880:	bl	1d908 <OnPrint@@Base+0x3d8>
   20884:	mov	x1, x24
   20888:	b	20ed0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc1c>
   2088c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20890:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20894:	ldr	x1, [x1, #4000]
   20898:	str	x0, [x1]
   2089c:	b	20ef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc3c>
   208a0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   208a4:	add	x0, x0, #0xdf0
   208a8:	bl	1d908 <OnPrint@@Base+0x3d8>
   208ac:	b	20f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc50>
   208b0:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   208b4:	add	x1, x1, #0xdc8
   208b8:	b	20f30 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc7c>
   208bc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   208c0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   208c4:	ldr	x1, [x1, #4000]
   208c8:	str	x0, [x1]
   208cc:	b	20f50 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc9c>
   208d0:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   208d4:	add	x0, x0, #0xe48
   208d8:	bl	1d908 <OnPrint@@Base+0x3d8>
   208dc:	b	20f64 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcb0>
   208e0:	add	x0, sp, #0x60
   208e4:	bl	1dc24 <OnPrint@@Base+0x6f4>
   208e8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   208ec:	ldr	x0, [x0, #4000]
   208f0:	ldr	x0, [x0]
   208f4:	cbz	x0, 20a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x758>
   208f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   208fc:	ldr	x0, [x0, #4000]
   20900:	ldr	x0, [x0]
   20904:	sub	x1, x0, #0x1
   20908:	tst	x1, x0
   2090c:	b.ne	20a20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x76c>  // b.any
   20910:	add	x24, x0, #0x817
   20914:	neg	x0, x0
   20918:	and	x24, x24, x0
   2091c:	mov	w2, #0x0                   	// #0
   20920:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20924:	add	x1, x1, #0x650
   20928:	mov	x0, x24
   2092c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   20930:	mov	x20, x0
   20934:	mov	x2, #0x0                   	// #0
   20938:	mov	x1, #0x0                   	// #0
   2093c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   20940:	mov	x1, #0x0                   	// #0
   20944:	mov	x0, #0x0                   	// #0
   20948:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   2094c:	cmp	x24, #0x817
   20950:	b.ls	20a30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x77c>  // b.plast
   20954:	mov	x2, #0x818                 	// #2072
   20958:	mov	w1, #0x0                   	// #0
   2095c:	mov	x0, x20
   20960:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   20964:	add	x0, x20, #0x10
   20968:	str	x0, [x20]
   2096c:	str	wzr, [x20, #8]
   20970:	str	wzr, [x20, #12]
   20974:	str	xzr, [x20, #2064]
   20978:	mov	x2, x20
   2097c:	mov	x1, x22
   20980:	mov	x0, x19
   20984:	blr	x21
   20988:	mov	x0, x20
   2098c:	bl	1f6c0 <OnPrint@@Base+0x2190>
   20990:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20994:	ldr	x0, [x0, #4040]
   20998:	ldrb	w0, [x0, #232]
   2099c:	cbz	w0, 209bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x708>
   209a0:	ldr	x22, [x19, #24]
   209a4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   209a8:	ldr	x0, [x0, #4000]
   209ac:	ldr	x0, [x0]
   209b0:	cbz	x0, 20ac4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x810>
   209b4:	cmp	x22, x0
   209b8:	b.cs	20d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0xad8>  // b.hs, b.nlast
   209bc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   209c0:	ldr	x0, [x0, #4040]
   209c4:	ldrb	w0, [x0, #233]
   209c8:	cbnz	w0, 20be8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x934>
   209cc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   209d0:	ldr	x0, [x0, #4008]
   209d4:	ldr	x1, [x0]
   209d8:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   209dc:	add	x0, x0, #0xef8
   209e0:	bl	1d874 <OnPrint@@Base+0x344>
   209e4:	mov	x2, #0x0                   	// #0
   209e8:	mov	x1, x20
   209ec:	mov	x0, x23
   209f0:	bl	20604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   209f4:	mov	x1, x24
   209f8:	mov	x0, x20
   209fc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20a00:	ldp	x25, x26, [sp, #48]
   20a04:	ldp	x27, x28, [sp, #64]
   20a08:	b	20d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa6c>
   20a0c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20a10:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20a14:	ldr	x1, [x1, #4000]
   20a18:	str	x0, [x1]
   20a1c:	b	208f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x644>
   20a20:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20a24:	add	x0, x0, #0x638
   20a28:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20a2c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20a30:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20a34:	ldr	x0, [x0, #4000]
   20a38:	ldr	x0, [x0]
   20a3c:	cbz	x0, 20aa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7ec>
   20a40:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20a44:	ldr	x0, [x0, #4000]
   20a48:	ldr	x0, [x0]
   20a4c:	sub	x1, x0, #0x1
   20a50:	tst	x1, x0
   20a54:	b.ne	20ab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x800>  // b.any
   20a58:	add	x25, x0, #0x817
   20a5c:	neg	x0, x0
   20a60:	and	x25, x25, x0
   20a64:	mov	w2, #0x0                   	// #0
   20a68:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20a6c:	add	x1, x1, #0x650
   20a70:	mov	x0, x25
   20a74:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   20a78:	mov	x26, x0
   20a7c:	mov	x2, #0x0                   	// #0
   20a80:	mov	x1, x20
   20a84:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   20a88:	mov	x1, x24
   20a8c:	mov	x0, x20
   20a90:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20a94:	mov	x24, x25
   20a98:	mov	x20, x26
   20a9c:	b	20954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a0>
   20aa0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20aa4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20aa8:	ldr	x1, [x1, #4000]
   20aac:	str	x0, [x1]
   20ab0:	b	20a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x78c>
   20ab4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20ab8:	add	x0, x0, #0x638
   20abc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20ac0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20ac4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20ac8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20acc:	ldr	x1, [x1, #4000]
   20ad0:	str	x0, [x1]
   20ad4:	cmp	x22, x0
   20ad8:	b.cc	209bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x708>  // b.lo, b.ul, b.last
   20adc:	str	xzr, [sp, #136]
   20ae0:	str	xzr, [sp, #144]
   20ae4:	str	xzr, [sp, #128]
   20ae8:	cbnz	x0, 20d98 <__sanitizer_get_module_and_offset_for_pc@@Base+0xae4>
   20aec:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20af0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20af4:	ldr	x1, [x1, #4000]
   20af8:	str	x0, [x1]
   20afc:	b	20d98 <__sanitizer_get_module_and_offset_for_pc@@Base+0xae4>
   20b00:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20b04:	add	x0, x0, #0x638
   20b08:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20b0c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20b10:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20b14:	ldr	x0, [x0, #4000]
   20b18:	ldr	x0, [x0]
   20b1c:	cbz	x0, 20b80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8cc>
   20b20:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20b24:	ldr	x0, [x0, #4000]
   20b28:	ldr	x0, [x0]
   20b2c:	sub	x1, x0, #0x1
   20b30:	tst	x1, x0
   20b34:	b.ne	20b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e0>  // b.any
   20b38:	add	x21, x0, #0x3ff
   20b3c:	neg	x0, x0
   20b40:	and	x21, x21, x0
   20b44:	mov	w2, #0x0                   	// #0
   20b48:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20b4c:	add	x1, x1, #0x650
   20b50:	mov	x0, x21
   20b54:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   20b58:	mov	x25, x0
   20b5c:	ldr	x2, [sp, #144]
   20b60:	ldr	x1, [sp, #128]
   20b64:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   20b68:	ldr	x1, [sp, #136]
   20b6c:	ldr	x0, [sp, #128]
   20b70:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20b74:	str	x25, [sp, #128]
   20b78:	str	x21, [sp, #136]
   20b7c:	b	20e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb54>
   20b80:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   20b84:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20b88:	ldr	x1, [x1, #4000]
   20b8c:	str	x0, [x1]
   20b90:	b	20b20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x86c>
   20b94:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20b98:	add	x0, x0, #0x638
   20b9c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   20ba0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   20ba4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   20ba8:	add	x1, x1, #0x88
   20bac:	add	x0, sp, #0x80
   20bb0:	bl	1d99c <OnPrint@@Base+0x46c>
   20bb4:	ldr	x1, [sp, #128]
   20bb8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20bbc:	add	x0, x0, #0xd50
   20bc0:	bl	1d908 <OnPrint@@Base+0x3d8>
   20bc4:	ldr	x1, [sp, #136]
   20bc8:	ldr	x0, [sp, #128]
   20bcc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20bd0:	b	209bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x708>
   20bd4:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20bd8:	add	x1, x1, #0xee8
   20bdc:	add	x0, sp, #0x80
   20be0:	bl	1d99c <OnPrint@@Base+0x46c>
   20be4:	b	20bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x900>
   20be8:	ldr	x0, [x19, #8]
   20bec:	bl	1a078 <__sanitizer_set_report_fd@@Base+0x3cc8>
   20bf0:	b	209cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>
   20bf4:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   20bf8:	add	x1, x1, #0x440
   20bfc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20c00:	add	x0, x0, #0xd50
   20c04:	bl	1d874 <OnPrint@@Base+0x344>
   20c08:	mov	w7, w20
   20c0c:	ldr	x6, [x19, #32]
   20c10:	ldr	x5, [x19, #40]
   20c14:	ldr	x4, [x19, #24]
   20c18:	ldr	x3, [x19, #16]
   20c1c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20c20:	add	x2, x2, #0xfe8
   20c24:	add	x2, x2, #0x10
   20c28:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20c2c:	ldr	x0, [x0, #4008]
   20c30:	ldr	x1, [x0]
   20c34:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20c38:	add	x0, x0, #0xf20
   20c3c:	bl	1d908 <OnPrint@@Base+0x3d8>
   20c40:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20c44:	add	x1, x1, #0xd40
   20c48:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20c4c:	add	x0, x0, #0xd50
   20c50:	bl	1d874 <OnPrint@@Base+0x344>
   20c54:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20c58:	ldr	x0, [x0, #4000]
   20c5c:	ldr	x0, [x0]
   20c60:	cbz	x0, 2074c <__sanitizer_get_module_and_offset_for_pc@@Base+0x498>
   20c64:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20c68:	ldr	x0, [x0, #4000]
   20c6c:	ldr	x2, [x0]
   20c70:	sub	x0, x2, #0x1
   20c74:	tst	x0, x2
   20c78:	b.ne	20760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac>  // b.any
   20c7c:	add	x23, x2, #0x817
   20c80:	neg	x2, x2
   20c84:	and	x23, x23, x2
   20c88:	mov	w2, #0x0                   	// #0
   20c8c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20c90:	add	x1, x1, #0x650
   20c94:	mov	x0, x23
   20c98:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   20c9c:	mov	x20, x0
   20ca0:	mov	x2, #0x0                   	// #0
   20ca4:	mov	x1, #0x0                   	// #0
   20ca8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   20cac:	mov	x1, #0x0                   	// #0
   20cb0:	mov	x0, #0x0                   	// #0
   20cb4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20cb8:	cmp	x23, #0x817
   20cbc:	b.ls	20778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c4>  // b.plast
   20cc0:	mov	x2, #0x818                 	// #2072
   20cc4:	mov	w1, #0x0                   	// #0
   20cc8:	mov	x0, x20
   20ccc:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   20cd0:	add	x0, x20, #0x10
   20cd4:	str	x0, [x20]
   20cd8:	str	wzr, [x20, #8]
   20cdc:	str	wzr, [x20, #12]
   20ce0:	str	xzr, [x20, #2064]
   20ce4:	mov	x2, x20
   20ce8:	mov	x1, x22
   20cec:	mov	x0, x19
   20cf0:	blr	x21
   20cf4:	mov	x0, x20
   20cf8:	bl	1f6c0 <OnPrint@@Base+0x2190>
   20cfc:	mov	x2, #0x0                   	// #0
   20d00:	mov	x1, x20
   20d04:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20d08:	add	x0, x0, #0xfe8
   20d0c:	add	x0, x0, #0x10
   20d10:	bl	20604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   20d14:	mov	x1, x23
   20d18:	mov	x0, x20
   20d1c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20d20:	ldp	x21, x22, [sp, #16]
   20d24:	ldp	x23, x24, [sp, #32]
   20d28:	ldr	x30, [sp, #80]
   20d2c:	ldp	x19, x20, [sp], #208
   20d30:	ret
   20d34:	asr	w4, w21, #4
   20d38:	and	w5, w21, #0xf
   20d3c:	mov	x3, x28
   20d40:	adrp	x6, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20d44:	add	x6, x6, #0xd40
   20d48:	mov	x2, x25
   20d4c:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20d50:	add	x1, x1, #0xed8
   20d54:	add	x0, sp, #0x80
   20d58:	bl	1d99c <OnPrint@@Base+0x46c>
   20d5c:	add	x22, x22, #0x1
   20d60:	cmp	x26, x22
   20d64:	b.eq	20ba4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8f0>  // b.none
   20d68:	ldrb	w21, [x22]
   20d6c:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   20d70:	and	w0, w0, #0xff
   20d74:	cbnz	w0, 20d34 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa80>
   20d78:	asr	w4, w21, #4
   20d7c:	and	w5, w21, #0xf
   20d80:	mov	x3, x27
   20d84:	mov	x6, x25
   20d88:	b	20d48 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa94>
   20d8c:	str	xzr, [sp, #136]
   20d90:	str	xzr, [sp, #144]
   20d94:	str	xzr, [sp, #128]
   20d98:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20d9c:	ldr	x0, [x0, #4000]
   20da0:	ldr	x0, [x0]
   20da4:	sub	x1, x0, #0x1
   20da8:	tst	x1, x0
   20dac:	b.ne	20b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x84c>  // b.any
   20db0:	add	x21, x0, #0x3ff
   20db4:	neg	x0, x0
   20db8:	and	x21, x21, x0
   20dbc:	mov	w2, #0x0                   	// #0
   20dc0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20dc4:	add	x1, x1, #0x650
   20dc8:	mov	x0, x21
   20dcc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   20dd0:	mov	x25, x0
   20dd4:	ldr	x2, [sp, #144]
   20dd8:	ldr	x1, [sp, #128]
   20ddc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   20de0:	ldr	x1, [sp, #136]
   20de4:	ldr	x0, [sp, #128]
   20de8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   20dec:	str	x25, [sp, #128]
   20df0:	str	x21, [sp, #136]
   20df4:	ldr	x0, [sp, #144]
   20df8:	cmp	x0, #0x3ff
   20dfc:	b.hi	20e24 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>  // b.pmore
   20e00:	cmp	x21, #0x3ff
   20e04:	b.ls	20b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x85c>  // b.plast
   20e08:	ldr	x0, [sp, #144]
   20e0c:	mov	x2, #0x400                 	// #1024
   20e10:	sub	x2, x2, x0
   20e14:	mov	w1, #0x0                   	// #0
   20e18:	ldr	x3, [sp, #128]
   20e1c:	add	x0, x3, x0
   20e20:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   20e24:	mov	x0, #0x400                 	// #1024
   20e28:	str	x0, [sp, #144]
   20e2c:	str	xzr, [sp, #152]
   20e30:	ldr	x0, [sp, #128]
   20e34:	strb	wzr, [x0]
   20e38:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20e3c:	add	x1, x1, #0xeb0
   20e40:	add	x0, sp, #0x80
   20e44:	bl	1d99c <OnPrint@@Base+0x46c>
   20e48:	mov	x1, #0x10                  	// #16
   20e4c:	mov	x0, x22
   20e50:	bl	1c344 <__sanitizer_set_report_fd@@Base+0x5f94>
   20e54:	and	w0, w0, #0xff
   20e58:	cbz	w0, 20bd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x920>
   20e5c:	add	x26, x22, #0x10
   20e60:	adrp	x28, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20e64:	add	x28, x28, #0xde0
   20e68:	adrp	x27, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   20e6c:	add	x27, x27, #0x9e0
   20e70:	mov	x25, x27
   20e74:	b	20d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0xab4>
   20e78:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   20e7c:	add	x1, x1, #0x440
   20e80:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20e84:	add	x0, x0, #0xd50
   20e88:	bl	1d874 <OnPrint@@Base+0x344>
   20e8c:	mov	x0, x19
   20e90:	bl	1bcf8 <__sanitizer_set_report_fd@@Base+0x5948>
   20e94:	mov	x23, x0
   20e98:	mov	w7, w20
   20e9c:	ldr	x6, [x19, #32]
   20ea0:	ldr	x5, [x19, #40]
   20ea4:	ldr	x4, [x19, #24]
   20ea8:	ldr	x3, [x19, #16]
   20eac:	mov	x2, x0
   20eb0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20eb4:	ldr	x0, [x0, #4008]
   20eb8:	ldr	x1, [x0]
   20ebc:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20ec0:	add	x0, x0, #0xf58
   20ec4:	bl	1d908 <OnPrint@@Base+0x3d8>
   20ec8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20ecc:	add	x1, x1, #0xd40
   20ed0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   20ed4:	add	x0, x0, #0xd50
   20ed8:	bl	1d874 <OnPrint@@Base+0x344>
   20edc:	ldr	x20, [x19, #24]
   20ee0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20ee4:	ldr	x0, [x0, #4000]
   20ee8:	ldr	x0, [x0]
   20eec:	cbz	x0, 2088c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d8>
   20ef0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20ef4:	ldr	x0, [x0, #4000]
   20ef8:	ldr	x0, [x0]
   20efc:	cmp	x20, x0
   20f00:	b.cc	208a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ec>  // b.lo, b.ul, b.last
   20f04:	ldrb	w0, [x19, #48]
   20f08:	cbz	w0, 20f64 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcb0>
   20f0c:	ldr	w0, [x19, #52]
   20f10:	cmp	w0, #0x2
   20f14:	b.eq	208b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fc>  // b.none
   20f18:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20f1c:	add	x2, x1, #0xdd8
   20f20:	adrp	x1, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20f24:	add	x1, x1, #0xdd0
   20f28:	cmp	w0, #0x1
   20f2c:	csel	x1, x1, x2, eq  // eq = none
   20f30:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20f34:	add	x0, x0, #0xe18
   20f38:	bl	1d908 <OnPrint@@Base+0x3d8>
   20f3c:	ldr	x20, [x19, #16]
   20f40:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20f44:	ldr	x0, [x0, #4000]
   20f48:	ldr	x0, [x0]
   20f4c:	cbz	x0, 208bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x608>
   20f50:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20f54:	ldr	x0, [x0, #4000]
   20f58:	ldr	x0, [x0]
   20f5c:	cmp	x20, x0
   20f60:	b.cc	208d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61c>  // b.lo, b.ul, b.last
   20f64:	ldr	x20, [x19, #24]
   20f68:	mov	w1, #0x1                   	// #1
   20f6c:	add	x0, sp, #0x60
   20f70:	bl	1dd70 <OnPrint@@Base+0x840>
   20f74:	str	xzr, [sp, #152]
   20f78:	str	xzr, [sp, #160]
   20f7c:	str	xzr, [sp, #200]
   20f80:	add	x26, sp, #0x80
   20f84:	add	x25, sp, #0x60
   20f88:	adrp	x24, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   20f8c:	add	x24, x24, #0xe70
   20f90:	mov	x1, x26
   20f94:	mov	x0, x25
   20f98:	bl	1e3b4 <OnPrint@@Base+0xe84>
   20f9c:	and	w1, w0, #0xff
   20fa0:	cbz	w1, 208e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62c>
   20fa4:	ldr	x0, [sp, #128]
   20fa8:	cmp	x20, x0
   20fac:	b.cc	20f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>  // b.lo, b.ul, b.last
   20fb0:	ldr	x0, [sp, #136]
   20fb4:	cmp	x20, x0
   20fb8:	b.cs	20f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>  // b.hs, b.nlast
   20fbc:	ldr	x0, [sp, #168]
   20fc0:	tbnz	w0, #2, 20f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>
   20fc4:	mov	x0, x24
   20fc8:	bl	1d908 <OnPrint@@Base+0x3d8>
   20fcc:	b	20f90 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcdc>
   20fd0:	stp	x19, x20, [sp, #-32]!
   20fd4:	str	x30, [sp, #16]
   20fd8:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x5b20>
   20fdc:	mov	x20, x0
   20fe0:	adrp	x19, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   20fe4:	add	x19, x19, #0x100
   20fe8:	b	2100c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>
   20fec:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   20ff0:	add	x0, x0, #0x100
   20ff4:	add	x0, x0, #0x8
   20ff8:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   20ffc:	b	2104c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd98>
   21000:	cmp	x20, x1
   21004:	b.eq	21058 <__sanitizer_get_module_and_offset_for_pc@@Base+0xda4>  // b.none
   21008:	bl	18bd0 <__sanitizer_set_report_fd@@Base+0x2820>
   2100c:	ldxr	x1, [x19]
   21010:	cbnz	x1, 2101c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd68>
   21014:	stlxr	w0, x20, [x19]
   21018:	cbnz	w0, 2100c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>
   2101c:	dmb	ish
   21020:	cbnz	x1, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4c>
   21024:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21028:	add	x0, x0, #0x100
   2102c:	add	x0, x0, #0x8
   21030:	mov	w2, #0x1                   	// #1
   21034:	ldxrb	w1, [x0]
   21038:	stxrb	w3, w2, [x0]
   2103c:	cbnz	w3, 21034 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd80>
   21040:	dmb	ish
   21044:	and	w0, w1, #0xff
   21048:	cbnz	w0, 20fec <__sanitizer_get_module_and_offset_for_pc@@Base+0xd38>
   2104c:	ldr	x30, [sp, #16]
   21050:	ldp	x19, x20, [sp], #32
   21054:	ret
   21058:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2105c:	ldr	x0, [x0, #4008]
   21060:	ldr	x19, [x0]
   21064:	mov	x0, x19
   21068:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   2106c:	mov	x1, x0
   21070:	mov	x0, x19
   21074:	bl	158a4 <__sanitizer_cov_dump@@Base+0x1cec>
   21078:	mov	x1, #0x2b                  	// #43
   2107c:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   21080:	add	x0, x0, #0xfe8
   21084:	add	x0, x0, #0x20
   21088:	bl	158a4 <__sanitizer_cov_dump@@Base+0x1cec>
   2108c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21090:	ldr	x0, [x0, #4040]
   21094:	ldr	w0, [x0, #216]
   21098:	bl	18bdc <__sanitizer_set_report_fd@@Base+0x282c>
   2109c:	stp	x19, x20, [sp, #-112]!
   210a0:	stp	x21, x22, [sp, #16]
   210a4:	stp	x23, x30, [sp, #32]
   210a8:	mov	x23, x0
   210ac:	mov	x19, x1
   210b0:	mov	w20, w2
   210b4:	mov	x21, x3
   210b8:	mov	x22, x4
   210bc:	bl	20680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc>
   210c0:	add	x0, sp, #0x68
   210c4:	bl	20fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
   210c8:	str	x23, [sp, #48]
   210cc:	str	x19, [sp, #56]
   210d0:	add	x19, sp, #0x30
   210d4:	mov	x0, x19
   210d8:	bl	1bccc <__sanitizer_set_report_fd@@Base+0x591c>
   210dc:	str	x0, [sp, #64]
   210e0:	mov	x0, x19
   210e4:	bl	1bcd8 <__sanitizer_set_report_fd@@Base+0x5928>
   210e8:	strb	w0, [sp, #96]
   210ec:	mov	x0, x19
   210f0:	bl	1a034 <__sanitizer_set_report_fd@@Base+0x3c84>
   210f4:	str	w0, [sp, #100]
   210f8:	mov	x0, x19
   210fc:	bl	1a07c <__sanitizer_set_report_fd@@Base+0x3ccc>
   21100:	mov	x3, x22
   21104:	mov	x2, x21
   21108:	mov	w1, w20
   2110c:	mov	x0, x19
   21110:	bl	206bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x408>
   21114:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   21118:	add	x0, x0, #0xf98
   2111c:	bl	1d908 <OnPrint@@Base+0x3d8>
   21120:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   21124:	dmb	ish
   21128:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2112c:	add	x1, x0, #0x100
   21130:	strb	wzr, [x1, #8]
   21134:	str	xzr, [x0, #256]
   21138:	ret
   2113c:	and	w0, w0, #0x6
   21140:	cmp	w0, #0x6
   21144:	b.eq	2114c <__sanitizer_get_module_and_offset_for_pc@@Base+0xe98>  // b.none
   21148:	ret
   2114c:	stp	x29, x30, [sp, #-96]!
   21150:	mov	x29, sp
   21154:	stp	x19, x20, [sp, #16]
   21158:	stp	x21, x22, [sp, #32]
   2115c:	stp	x23, x24, [sp, #48]
   21160:	mov	x20, x30
   21164:	add	x0, x29, #0x58
   21168:	bl	20fd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd1c>
   2116c:	bl	205a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f0>
   21170:	and	w22, w0, #0xff
   21174:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21178:	ldr	x1, [x1, #4000]
   2117c:	ldr	x0, [x1]
   21180:	cbz	x0, 2127c <__sanitizer_get_module_and_offset_for_pc@@Base+0xfc8>
   21184:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21188:	ldr	x0, [x0, #4000]
   2118c:	ldr	x2, [x0]
   21190:	sub	x0, x2, #0x1
   21194:	tst	x0, x2
   21198:	b.ne	21290 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfdc>  // b.any
   2119c:	add	x21, x2, #0x817
   211a0:	neg	x2, x2
   211a4:	and	x21, x21, x2
   211a8:	mov	w2, #0x0                   	// #0
   211ac:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   211b0:	add	x1, x1, #0x650
   211b4:	mov	x0, x21
   211b8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   211bc:	mov	x19, x0
   211c0:	mov	x2, #0x0                   	// #0
   211c4:	mov	x1, #0x0                   	// #0
   211c8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   211cc:	mov	x1, #0x0                   	// #0
   211d0:	mov	x0, #0x0                   	// #0
   211d4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   211d8:	cmp	x21, #0x817
   211dc:	b.ls	212a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfec>  // b.plast
   211e0:	mov	x2, #0x818                 	// #2072
   211e4:	mov	w1, #0x0                   	// #0
   211e8:	mov	x0, x19
   211ec:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   211f0:	add	x0, x19, #0x10
   211f4:	str	x0, [x19]
   211f8:	str	wzr, [x19, #8]
   211fc:	str	wzr, [x19, #12]
   21200:	str	xzr, [x19, #2064]
   21204:	str	xzr, [x29, #80]
   21208:	str	xzr, [x29, #72]
   2120c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21210:	ldr	x0, [x0, #4040]
   21214:	ldrb	w23, [x0, #33]
   21218:	cbnz	w23, 21334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1080>
   2121c:	mov	w7, w23
   21220:	ldr	x6, [x29, #72]
   21224:	ldr	x5, [x29, #80]
   21228:	mov	x4, #0x0                   	// #0
   2122c:	mov	x3, x29
   21230:	mov	x2, x20
   21234:	mov	w1, #0x100                 	// #256
   21238:	mov	x0, x19
   2123c:	bl	1fc70 <OnPrint@@Base+0x2740>
   21240:	cbnz	w22, 21348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1094>
   21244:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21248:	add	x20, x1, #0x9e0
   2124c:	mov	x1, x20
   21250:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21254:	add	x0, x0, #0xd50
   21258:	bl	1d874 <OnPrint@@Base+0x344>
   2125c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21260:	ldr	x0, [x0, #4008]
   21264:	ldr	x1, [x0]
   21268:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2126c:	add	x0, x0, #0xfb8
   21270:	bl	1d908 <OnPrint@@Base+0x3d8>
   21274:	mov	x1, x20
   21278:	b	2137c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2127c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   21280:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21284:	ldr	x1, [x1, #4000]
   21288:	str	x0, [x1]
   2128c:	b	21184 <__sanitizer_get_module_and_offset_for_pc@@Base+0xed0>
   21290:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21294:	add	x0, x0, #0x638
   21298:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   2129c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   212a0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   212a4:	ldr	x0, [x0, #4000]
   212a8:	ldr	x0, [x0]
   212ac:	cbz	x0, 21310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x105c>
   212b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   212b4:	ldr	x0, [x0, #4000]
   212b8:	ldr	x0, [x0]
   212bc:	sub	x1, x0, #0x1
   212c0:	tst	x1, x0
   212c4:	b.ne	21324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1070>  // b.any
   212c8:	add	x23, x0, #0x817
   212cc:	neg	x0, x0
   212d0:	and	x23, x23, x0
   212d4:	mov	w2, #0x0                   	// #0
   212d8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   212dc:	add	x1, x1, #0x650
   212e0:	mov	x0, x23
   212e4:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   212e8:	mov	x24, x0
   212ec:	mov	x2, #0x0                   	// #0
   212f0:	mov	x1, x19
   212f4:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   212f8:	mov	x1, x21
   212fc:	mov	x0, x19
   21300:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   21304:	mov	x21, x23
   21308:	mov	x19, x24
   2130c:	b	211e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf2c>
   21310:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   21314:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21318:	ldr	x1, [x1, #4000]
   2131c:	str	x0, [x1]
   21320:	b	212b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>
   21324:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21328:	add	x0, x0, #0x638
   2132c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   21330:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   21334:	add	x2, x29, #0x48
   21338:	add	x1, x29, #0x50
   2133c:	mov	w0, #0x0                   	// #0
   21340:	bl	1a6f0 <__sanitizer_set_report_fd@@Base+0x4340>
   21344:	b	2121c <__sanitizer_get_module_and_offset_for_pc@@Base+0xf68>
   21348:	adrp	x1, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   2134c:	add	x1, x1, #0x440
   21350:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21354:	add	x0, x0, #0xd50
   21358:	bl	1d874 <OnPrint@@Base+0x344>
   2135c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21360:	ldr	x0, [x0, #4008]
   21364:	ldr	x1, [x0]
   21368:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2136c:	add	x0, x0, #0xfb8
   21370:	bl	1d908 <OnPrint@@Base+0x3d8>
   21374:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21378:	add	x1, x1, #0xd40
   2137c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21380:	add	x0, x0, #0xd50
   21384:	bl	1d874 <OnPrint@@Base+0x344>
   21388:	mov	x0, x19
   2138c:	bl	1f6c0 <OnPrint@@Base+0x2190>
   21390:	mov	x2, #0x0                   	// #0
   21394:	mov	x1, x19
   21398:	adrp	x0, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   2139c:	add	x0, x0, #0xfa8
   213a0:	bl	20604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   213a4:	mov	x1, x21
   213a8:	mov	x0, x19
   213ac:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   213b0:	add	x0, x29, #0x58
   213b4:	bl	21124 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe70>
   213b8:	ldp	x19, x20, [sp, #16]
   213bc:	ldp	x21, x22, [sp, #32]
   213c0:	ldp	x23, x24, [sp, #48]
   213c4:	ldp	x29, x30, [sp], #96
   213c8:	ret
   213cc:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   213d0:	add	x0, x0, #0x100
   213d4:	ldrb	w3, [x0, #8]
   213d8:	and	x3, x3, #0xff
   213dc:	cmp	x3, #0x1
   213e0:	b.ne	213e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1134>  // b.any
   213e4:	ret
   213e8:	str	x30, [sp, #-16]!
   213ec:	mov	x4, #0x1                   	// #1
   213f0:	adrp	x2, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   213f4:	add	x2, x2, #0x850
   213f8:	mov	w1, #0x2a                  	// #42
   213fc:	adrp	x0, 3b000 <__asan_backtrace_vector_release@@Base+0xc58>
   21400:	add	x0, x0, #0x888
   21404:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21408:	stp	x19, x20, [sp, #-32]!
   2140c:	str	x30, [sp, #24]
   21410:	mov	x19, x0
   21414:	cbz	x0, 21450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x119c>
   21418:	mov	x20, x1
   2141c:	cbz	x1, 21450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x119c>
   21420:	str	x21, [sp, #16]
   21424:	mov	x0, x1
   21428:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   2142c:	mov	x21, x0
   21430:	mov	x2, x0
   21434:	mov	x1, x20
   21438:	mov	x0, x19
   2143c:	bl	17c08 <__sanitizer_set_report_fd@@Base+0x1858>
   21440:	add	x21, x19, x21
   21444:	cmp	w0, #0x0
   21448:	csel	x19, x21, x19, eq  // eq = none
   2144c:	ldr	x21, [sp, #16]
   21450:	mov	x0, x19
   21454:	ldr	x30, [sp, #24]
   21458:	ldp	x19, x20, [sp], #32
   2145c:	ret
   21460:	stp	x19, x20, [sp, #-80]!
   21464:	stp	x21, x22, [sp, #16]
   21468:	str	x30, [sp, #64]
   2146c:	mov	x22, x2
   21470:	ldrb	w2, [x1]
   21474:	cbz	w2, 2156c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b8>
   21478:	stp	x23, x24, [sp, #32]
   2147c:	stp	x25, x26, [sp, #48]
   21480:	mov	x21, x0
   21484:	mov	x20, x1
   21488:	mov	x24, x3
   2148c:	adrp	x25, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21490:	add	x25, x25, #0x48
   21494:	adrp	x23, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21498:	add	x23, x23, #0xd50
   2149c:	adrp	x26, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   214a0:	b	214c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1210>
   214a4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   214a8:	add	x1, x1, #0x38
   214ac:	mov	x0, x21
   214b0:	bl	1d99c <OnPrint@@Base+0x46c>
   214b4:	mov	x19, x20
   214b8:	add	x20, x19, #0x1
   214bc:	ldrb	w2, [x19, #1]
   214c0:	cbz	w2, 21564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x12b0>
   214c4:	cmp	w2, #0x25
   214c8:	b.ne	214a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11f0>  // b.any
   214cc:	add	x19, x20, #0x1
   214d0:	ldrb	w1, [x20, #1]
   214d4:	cmp	w1, #0x6c
   214d8:	b.eq	2153c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1288>  // b.none
   214dc:	b.hi	21504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1250>  // b.pmore
   214e0:	cmp	w1, #0x25
   214e4:	b.eq	2152c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1278>  // b.none
   214e8:	cmp	w1, #0x67
   214ec:	b.ne	21550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x129c>  // b.any
   214f0:	ldr	x2, [x22, #40]
   214f4:	mov	x1, x23
   214f8:	mov	x0, x21
   214fc:	bl	1d99c <OnPrint@@Base+0x46c>
   21500:	b	214b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   21504:	cmp	w1, #0x73
   21508:	b.ne	21550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x129c>  // b.any
   2150c:	mov	x1, x24
   21510:	ldr	x0, [x22, #24]
   21514:	bl	12674 <__sancov_default_options@@Base+0x22f0>
   21518:	mov	x2, x0
   2151c:	mov	x1, x23
   21520:	mov	x0, x21
   21524:	bl	1d99c <OnPrint@@Base+0x46c>
   21528:	b	214b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   2152c:	add	x1, x26, #0x40
   21530:	mov	x0, x21
   21534:	bl	1d99c <OnPrint@@Base+0x46c>
   21538:	b	214b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   2153c:	ldr	x2, [x22, #32]
   21540:	mov	x1, x25
   21544:	mov	x0, x21
   21548:	bl	1d99c <OnPrint@@Base+0x46c>
   2154c:	b	214b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1204>
   21550:	mov	w2, w1
   21554:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21558:	add	x0, x0, #0x50
   2155c:	bl	1d908 <OnPrint@@Base+0x3d8>
   21560:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   21564:	ldp	x23, x24, [sp, #32]
   21568:	ldp	x25, x26, [sp, #48]
   2156c:	ldp	x21, x22, [sp, #16]
   21570:	ldr	x30, [sp, #64]
   21574:	ldp	x19, x20, [sp], #80
   21578:	ret
   2157c:	stp	x19, x20, [sp, #-32]!
   21580:	stp	x21, x30, [sp, #16]
   21584:	mov	x21, x0
   21588:	mov	x0, x1
   2158c:	mov	w19, w2
   21590:	mov	w20, w3
   21594:	and	w4, w4, #0xff
   21598:	mov	x1, x5
   2159c:	cmp	w2, #0x0
   215a0:	ccmp	w4, #0x0, #0x4, gt
   215a4:	b.ne	215d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1320>  // b.any
   215a8:	bl	12674 <__sancov_default_options@@Base+0x22f0>
   215ac:	mov	x2, x0
   215b0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   215b4:	add	x1, x1, #0xd50
   215b8:	mov	x0, x21
   215bc:	bl	1d99c <OnPrint@@Base+0x46c>
   215c0:	cmp	w19, #0x0
   215c4:	b.gt	21624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1370>
   215c8:	ldp	x21, x30, [sp, #16]
   215cc:	ldp	x19, x20, [sp], #32
   215d0:	ret
   215d4:	bl	12674 <__sancov_default_options@@Base+0x22f0>
   215d8:	mov	w3, w19
   215dc:	mov	x2, x0
   215e0:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   215e4:	add	x1, x1, #0x90
   215e8:	mov	x0, x21
   215ec:	bl	1d99c <OnPrint@@Base+0x46c>
   215f0:	cmp	w20, #0x0
   215f4:	b.gt	2160c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1358>
   215f8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   215fc:	add	x1, x1, #0x5f0
   21600:	mov	x0, x21
   21604:	bl	1d99c <OnPrint@@Base+0x46c>
   21608:	b	215c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1314>
   2160c:	mov	w2, w20
   21610:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21614:	add	x1, x1, #0x98
   21618:	mov	x0, x21
   2161c:	bl	1d99c <OnPrint@@Base+0x46c>
   21620:	b	215f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1344>
   21624:	mov	w2, w19
   21628:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2162c:	add	x1, x1, #0xa0
   21630:	mov	x0, x21
   21634:	bl	1d99c <OnPrint@@Base+0x46c>
   21638:	cmp	w20, #0x0
   2163c:	b.le	215c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1314>
   21640:	mov	w2, w20
   21644:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21648:	add	x1, x1, #0xa0
   2164c:	mov	x0, x21
   21650:	bl	1d99c <OnPrint@@Base+0x46c>
   21654:	b	215c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1314>
   21658:	stp	x19, x20, [sp, #-32]!
   2165c:	stp	x21, x30, [sp, #16]
   21660:	mov	x20, x0
   21664:	mov	x0, x1
   21668:	mov	x21, x2
   2166c:	mov	w19, w3
   21670:	mov	x1, x4
   21674:	bl	12674 <__sancov_default_options@@Base+0x22f0>
   21678:	mov	x2, x0
   2167c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21680:	add	x1, x1, #0xe8
   21684:	mov	x0, x20
   21688:	bl	1d99c <OnPrint@@Base+0x46c>
   2168c:	cbnz	w19, 216b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13fc>
   21690:	mov	x2, x21
   21694:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21698:	add	x1, x1, #0x120
   2169c:	mov	x0, x20
   216a0:	bl	1d99c <OnPrint@@Base+0x46c>
   216a4:	ldp	x21, x30, [sp, #16]
   216a8:	ldp	x19, x20, [sp], #32
   216ac:	ret
   216b0:	cmp	w19, #0x4
   216b4:	b.eq	2175c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a8>  // b.none
   216b8:	b.hi	21700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x144c>  // b.pmore
   216bc:	cmp	w19, #0x2
   216c0:	b.eq	21768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14b4>  // b.none
   216c4:	b.ls	216dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1428>  // b.plast
   216c8:	cmp	w19, #0x3
   216cc:	b.ne	2173c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   216d0:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   216d4:	add	x2, x1, #0xc8
   216d8:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   216dc:	cmp	w19, #0x1
   216e0:	b.ne	2173c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   216e4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   216e8:	add	x2, x1, #0xc0
   216ec:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   216f0:	add	x1, x1, #0x118
   216f4:	mov	x0, x20
   216f8:	bl	1d99c <OnPrint@@Base+0x46c>
   216fc:	b	21690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13dc>
   21700:	cmp	w19, #0x7
   21704:	b.eq	21774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c0>  // b.none
   21708:	b.ls	21720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x146c>  // b.plast
   2170c:	cmp	w19, #0x8
   21710:	b.ne	2173c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   21714:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21718:	add	x2, x1, #0xe0
   2171c:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   21720:	cmp	w19, #0x5
   21724:	b.eq	21780 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14cc>  // b.none
   21728:	cmp	w19, #0x6
   2172c:	b.ne	2173c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1488>  // b.any
   21730:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21734:	add	x2, x1, #0xa8
   21738:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   2173c:	mov	x4, #0x0                   	// #0
   21740:	mov	x3, #0x0                   	// #0
   21744:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21748:	add	x2, x2, #0xf0
   2174c:	mov	w1, #0x2a9                 	// #681
   21750:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21754:	add	x0, x0, #0x520
   21758:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2175c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21760:	add	x2, x2, #0xb8
   21764:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   21768:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2176c:	add	x2, x2, #0xb0
   21770:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   21774:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21778:	add	x2, x2, #0xd0
   2177c:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   21780:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21784:	add	x2, x1, #0xd8
   21788:	b	216ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1438>
   2178c:	stp	x19, x20, [sp, #-96]!
   21790:	stp	x21, x22, [sp, #16]
   21794:	stp	x25, x26, [sp, #48]
   21798:	stp	x27, x28, [sp, #64]
   2179c:	str	x30, [sp, #80]
   217a0:	mov	x20, x0
   217a4:	mov	x28, x1
   217a8:	mov	w26, w2
   217ac:	mov	x21, x3
   217b0:	and	w27, w4, #0xff
   217b4:	mov	x22, x5
   217b8:	mov	x25, x6
   217bc:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   217c0:	add	x1, x1, #0x60
   217c4:	mov	x0, x28
   217c8:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   217cc:	cbz	w0, 217e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x152c>
   217d0:	ldrb	w2, [x28]
   217d4:	cbz	w2, 21ad8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1824>
   217d8:	stp	x23, x24, [sp, #32]
   217dc:	b	217f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x153c>
   217e0:	stp	x23, x24, [sp, #32]
   217e4:	adrp	x28, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   217e8:	add	x28, x28, #0x168
   217ec:	mov	w2, #0x20                  	// #32
   217f0:	adrp	x24, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   217f4:	add	x24, x24, #0x48
   217f8:	adrp	x23, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   217fc:	add	x23, x23, #0x130
   21800:	b	21824 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1570>
   21804:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21808:	add	x1, x1, #0x38
   2180c:	mov	x0, x20
   21810:	bl	1d99c <OnPrint@@Base+0x46c>
   21814:	mov	x19, x28
   21818:	add	x28, x19, #0x1
   2181c:	ldrb	w2, [x19, #1]
   21820:	cbz	w2, 21ad4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>
   21824:	cmp	w2, #0x25
   21828:	b.ne	21804 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1550>  // b.any
   2182c:	add	x19, x28, #0x1
   21830:	ldrb	w1, [x28, #1]
   21834:	cmp	w1, #0x6c
   21838:	b.eq	219d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x171c>  // b.none
   2183c:	b.hi	218f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1644>  // b.pmore
   21840:	cmp	w1, #0x4d
   21844:	b.eq	21a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c4>  // b.none
   21848:	b.ls	21880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15cc>  // b.plast
   2184c:	cmp	w1, #0x63
   21850:	b.eq	219e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1730>  // b.none
   21854:	cmp	w1, #0x66
   21858:	b.ne	218d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x161c>  // b.any
   2185c:	mov	x1, x25
   21860:	ldr	x0, [x21, #32]
   21864:	bl	21408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1154>
   21868:	mov	x2, x0
   2186c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21870:	add	x1, x1, #0xd50
   21874:	mov	x0, x20
   21878:	bl	1d99c <OnPrint@@Base+0x46c>
   2187c:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21880:	cmp	w1, #0x46
   21884:	b.eq	219f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1744>  // b.none
   21888:	cmp	w1, #0x4c
   2188c:	b.ne	218b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1600>  // b.any
   21890:	ldr	x1, [x21, #48]
   21894:	cbz	x1, 21a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1790>
   21898:	mov	x5, x22
   2189c:	mov	w4, w27
   218a0:	ldr	w3, [x21, #60]
   218a4:	ldr	w2, [x21, #56]
   218a8:	mov	x0, x20
   218ac:	bl	2157c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>
   218b0:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   218b4:	cmp	w1, #0x25
   218b8:	b.ne	21ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   218bc:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   218c0:	add	x1, x1, #0x40
   218c4:	mov	x0, x20
   218c8:	bl	1d99c <OnPrint@@Base+0x46c>
   218cc:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   218d0:	cmp	w1, #0x53
   218d4:	b.ne	21ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   218d8:	mov	x5, x22
   218dc:	mov	w4, w27
   218e0:	ldr	w3, [x21, #60]
   218e4:	ldr	w2, [x21, #56]
   218e8:	ldr	x1, [x21, #48]
   218ec:	mov	x0, x20
   218f0:	bl	2157c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12c8>
   218f4:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   218f8:	cmp	w1, #0x70
   218fc:	b.eq	219a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16ec>  // b.none
   21900:	b.ls	21938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1684>  // b.plast
   21904:	cmp	w1, #0x71
   21908:	b.eq	219b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1700>  // b.none
   2190c:	cmp	w1, #0x73
   21910:	b.ne	21ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   21914:	mov	x1, x22
   21918:	ldr	x0, [x21, #48]
   2191c:	bl	12674 <__sancov_default_options@@Base+0x22f0>
   21920:	mov	x2, x0
   21924:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21928:	add	x1, x1, #0xd50
   2192c:	mov	x0, x20
   21930:	bl	1d99c <OnPrint@@Base+0x46c>
   21934:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21938:	cmp	w1, #0x6e
   2193c:	b.eq	21988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d4>  // b.none
   21940:	cmp	w1, #0x6f
   21944:	b.ne	2195c <__sanitizer_get_module_and_offset_for_pc@@Base+0x16a8>  // b.any
   21948:	ldr	x2, [x21, #16]
   2194c:	mov	x1, x23
   21950:	mov	x0, x20
   21954:	bl	1d99c <OnPrint@@Base+0x46c>
   21958:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   2195c:	cmp	w1, #0x6d
   21960:	b.ne	21ac0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x180c>  // b.any
   21964:	mov	x1, x22
   21968:	ldr	x0, [x21, #8]
   2196c:	bl	12674 <__sancov_default_options@@Base+0x22f0>
   21970:	mov	x2, x0
   21974:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   21978:	add	x1, x1, #0xd50
   2197c:	mov	x0, x20
   21980:	bl	1d99c <OnPrint@@Base+0x46c>
   21984:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21988:	mov	w2, w26
   2198c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21990:	add	x1, x1, #0x128
   21994:	mov	x0, x20
   21998:	bl	1d99c <OnPrint@@Base+0x46c>
   2199c:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   219a0:	ldr	x2, [x21]
   219a4:	mov	x1, x23
   219a8:	mov	x0, x20
   219ac:	bl	1d99c <OnPrint@@Base+0x46c>
   219b0:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   219b4:	ldr	x2, [x21, #40]
   219b8:	cmn	x2, #0x1
   219bc:	csel	x2, x2, xzr, ne  // ne = any
   219c0:	mov	x1, x23
   219c4:	mov	x0, x20
   219c8:	bl	1d99c <OnPrint@@Base+0x46c>
   219cc:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   219d0:	ldr	w2, [x21, #56]
   219d4:	mov	x1, x24
   219d8:	mov	x0, x20
   219dc:	bl	1d99c <OnPrint@@Base+0x46c>
   219e0:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   219e4:	ldr	w2, [x21, #60]
   219e8:	mov	x1, x24
   219ec:	mov	x0, x20
   219f0:	bl	1d99c <OnPrint@@Base+0x46c>
   219f4:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   219f8:	ldr	x0, [x21, #32]
   219fc:	cbz	x0, 21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21a00:	mov	x1, x25
   21a04:	bl	21408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1154>
   21a08:	mov	x2, x0
   21a0c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21a10:	add	x1, x1, #0x138
   21a14:	mov	x0, x20
   21a18:	bl	1d99c <OnPrint@@Base+0x46c>
   21a1c:	ldr	x0, [x21, #48]
   21a20:	cbnz	x0, 21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21a24:	ldr	x2, [x21, #40]
   21a28:	cmn	x2, #0x1
   21a2c:	b.eq	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>  // b.none
   21a30:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21a34:	add	x1, x1, #0x140
   21a38:	mov	x0, x20
   21a3c:	bl	1d99c <OnPrint@@Base+0x46c>
   21a40:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21a44:	ldr	x1, [x21, #8]
   21a48:	cbz	x1, 21a64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b0>
   21a4c:	mov	x4, x22
   21a50:	ldr	w3, [x21, #24]
   21a54:	ldr	x2, [x21, #16]
   21a58:	mov	x0, x20
   21a5c:	bl	21658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a4>
   21a60:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21a64:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21a68:	add	x1, x1, #0x148
   21a6c:	mov	x0, x20
   21a70:	bl	1d99c <OnPrint@@Base+0x46c>
   21a74:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21a78:	ldr	x2, [x21]
   21a7c:	tbnz	x2, #60, 21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21a80:	ldr	x0, [x21, #8]
   21a84:	cbz	x0, 21aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x17f8>
   21a88:	bl	126e0 <__sancov_default_options@@Base+0x235c>
   21a8c:	adrp	x4, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21a90:	add	x4, x4, #0x9e0
   21a94:	ldr	w3, [x21, #24]
   21a98:	ldr	x2, [x21, #16]
   21a9c:	mov	x1, x0
   21aa0:	mov	x0, x20
   21aa4:	bl	21658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a4>
   21aa8:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21aac:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21ab0:	add	x1, x1, #0x160
   21ab4:	mov	x0, x20
   21ab8:	bl	1d99c <OnPrint@@Base+0x46c>
   21abc:	b	21818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1564>
   21ac0:	mov	w2, w1
   21ac4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21ac8:	add	x0, x0, #0x50
   21acc:	bl	1d908 <OnPrint@@Base+0x3d8>
   21ad0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   21ad4:	ldp	x23, x24, [sp, #32]
   21ad8:	ldp	x21, x22, [sp, #16]
   21adc:	ldp	x25, x26, [sp, #48]
   21ae0:	ldp	x27, x28, [sp, #64]
   21ae4:	ldr	x30, [sp, #80]
   21ae8:	ldp	x19, x20, [sp], #96
   21aec:	ret
   21af0:	ldr	x0, [x0, #24]
   21af4:	ret
   21af8:	mov	x0, #0x22                  	// #34
   21afc:	ret
   21b00:	ldr	x4, [x0, #24]
   21b04:	cmp	x1, x4
   21b08:	b.cs	21b18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1864>  // b.hs, b.nlast
   21b0c:	ldr	x0, [x0, #8]
   21b10:	ldr	x0, [x0, x1, lsl #3]
   21b14:	ret
   21b18:	str	x30, [sp, #-16]!
   21b1c:	mov	x3, x1
   21b20:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21b24:	add	x2, x2, #0x180
   21b28:	mov	w1, #0x202                 	// #514
   21b2c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21b30:	add	x0, x0, #0x1a8
   21b34:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   21b38:	stp	x19, x20, [sp, #-336]!
   21b3c:	stp	x21, x30, [sp, #16]
   21b40:	mov	x20, x2
   21b44:	mov	x21, x3
   21b48:	ldr	x2, [x0]
   21b4c:	ldr	x2, [x2, #24]
   21b50:	blr	x2
   21b54:	mov	x19, x0
   21b58:	add	x0, sp, #0x40
   21b5c:	str	x0, [sp, #40]
   21b60:	mov	x0, #0x110                 	// #272
   21b64:	str	x0, [sp, #48]
   21b68:	add	x3, sp, #0x28
   21b6c:	mov	x2, #0x1                   	// #1
   21b70:	mov	w1, w19
   21b74:	mov	w0, #0x4204                	// #16900
   21b78:	bl	18fd4 <__sanitizer_set_report_fd@@Base+0x2c24>
   21b7c:	add	x1, sp, #0x3c
   21b80:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   21b84:	and	w0, w0, #0xff
   21b88:	cbz	w0, 21bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1918>
   21b8c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21b90:	ldr	x0, [x0, #3680]
   21b94:	ldr	w0, [x0]
   21b98:	cbnz	w0, 21bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1900>
   21b9c:	ldr	w0, [sp, #60]
   21ba0:	cmp	w0, #0x3
   21ba4:	csetm	w0, eq  // eq = none
   21ba8:	ldp	x21, x30, [sp, #16]
   21bac:	ldp	x19, x20, [sp], #336
   21bb0:	ret
   21bb4:	ldr	w2, [sp, #60]
   21bb8:	mov	w1, w19
   21bbc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21bc0:	add	x0, x0, #0x200
   21bc4:	bl	1d908 <OnPrint@@Base+0x3d8>
   21bc8:	b	21b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e8>
   21bcc:	ldr	x0, [sp, #312]
   21bd0:	str	x0, [x21]
   21bd4:	mov	x2, #0x110                 	// #272
   21bd8:	add	x1, sp, #0x40
   21bdc:	mov	x0, x20
   21be0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   21be4:	mov	w0, #0x1                   	// #1
   21be8:	b	21ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18f4>
   21bec:	stp	x19, x20, [sp, #-96]!
   21bf0:	stp	x21, x22, [sp, #16]
   21bf4:	str	x30, [sp, #64]
   21bf8:	mov	x21, x0
   21bfc:	add	x22, x0, #0x8
   21c00:	ldr	x0, [x0, #32]
   21c04:	cbz	x0, 21cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a08>
   21c08:	stp	x23, x24, [sp, #32]
   21c0c:	stp	x25, x26, [sp, #48]
   21c10:	mov	x20, #0x0                   	// #0
   21c14:	add	x23, sp, #0x5c
   21c18:	adrp	x24, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21c1c:	ldr	x25, [x24, #3680]
   21c20:	adrp	x26, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21c24:	add	x26, x26, #0x258
   21c28:	b	21c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1990>
   21c2c:	ldr	w0, [x25]
   21c30:	cbnz	w0, 21ca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19ec>
   21c34:	add	x20, x20, #0x1
   21c38:	ldr	x0, [x21, #32]
   21c3c:	cmp	x20, x0
   21c40:	b.cs	21cb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a00>  // b.hs, b.nlast
   21c44:	mov	x1, x20
   21c48:	mov	x0, x22
   21c4c:	bl	21b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x184c>
   21c50:	mov	x19, x0
   21c54:	mov	x3, #0x0                   	// #0
   21c58:	mov	x2, #0x0                   	// #0
   21c5c:	mov	w1, w0
   21c60:	mov	w0, #0x11                  	// #17
   21c64:	bl	18fd4 <__sanitizer_set_report_fd@@Base+0x2c24>
   21c68:	mov	x1, x23
   21c6c:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   21c70:	and	w0, w0, #0xff
   21c74:	cbnz	w0, 21c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1978>
   21c78:	ldr	x0, [x24, #3680]
   21c7c:	ldr	w0, [x0]
   21c80:	sxtw	x0, w0
   21c84:	cmp	x0, #0x1
   21c88:	b.ls	21c34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1980>  // b.plast
   21c8c:	mov	w1, w19
   21c90:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21c94:	add	x0, x0, #0x238
   21c98:	bl	1d908 <OnPrint@@Base+0x3d8>
   21c9c:	b	21c34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1980>
   21ca0:	ldr	w2, [sp, #92]
   21ca4:	mov	w1, w19
   21ca8:	mov	x0, x26
   21cac:	bl	1d908 <OnPrint@@Base+0x3d8>
   21cb0:	b	21c34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1980>
   21cb4:	ldp	x23, x24, [sp, #32]
   21cb8:	ldp	x25, x26, [sp, #48]
   21cbc:	ldp	x21, x22, [sp, #16]
   21cc0:	ldr	x30, [sp, #64]
   21cc4:	ldp	x19, x20, [sp], #96
   21cc8:	ret
   21ccc:	stp	x19, x20, [sp, #-48]!
   21cd0:	stp	x21, x22, [sp, #16]
   21cd4:	str	x30, [sp, #32]
   21cd8:	mov	x20, x0
   21cdc:	add	x21, x0, #0x8
   21ce0:	ldr	x0, [x0, #32]
   21ce4:	cbz	x0, 21d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a6c>
   21ce8:	mov	x19, #0x0                   	// #0
   21cec:	mov	w22, #0x8                   	// #8
   21cf0:	mov	x1, x19
   21cf4:	mov	x0, x21
   21cf8:	bl	21b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x184c>
   21cfc:	mov	x3, #0x0                   	// #0
   21d00:	mov	x2, #0x0                   	// #0
   21d04:	mov	w1, w0
   21d08:	mov	w0, w22
   21d0c:	bl	18fd4 <__sanitizer_set_report_fd@@Base+0x2c24>
   21d10:	add	x19, x19, #0x1
   21d14:	ldr	x1, [x20, #32]
   21d18:	cmp	x19, x1
   21d1c:	b.cc	21cf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a3c>  // b.lo, b.ul, b.last
   21d20:	ldp	x21, x22, [sp, #16]
   21d24:	ldr	x30, [sp, #32]
   21d28:	ldp	x19, x20, [sp], #48
   21d2c:	ret
   21d30:	stp	x19, x20, [sp, #-96]!
   21d34:	str	x30, [sp, #16]
   21d38:	mov	w19, w0
   21d3c:	str	x1, [sp, #40]
   21d40:	str	x2, [sp, #48]
   21d44:	add	x20, sp, #0x28
   21d48:	mov	x0, x20
   21d4c:	bl	1bccc <__sanitizer_set_report_fd@@Base+0x591c>
   21d50:	str	x0, [sp, #56]
   21d54:	mov	x0, x20
   21d58:	bl	1bcd8 <__sanitizer_set_report_fd@@Base+0x5928>
   21d5c:	strb	w0, [sp, #88]
   21d60:	mov	x0, x20
   21d64:	bl	1a034 <__sanitizer_set_report_fd@@Base+0x3c84>
   21d68:	str	w0, [sp, #92]
   21d6c:	mov	x0, x20
   21d70:	bl	1a07c <__sanitizer_set_report_fd@@Base+0x3ccc>
   21d74:	ldr	x4, [sp, #72]
   21d78:	ldr	x3, [sp, #64]
   21d7c:	ldr	x2, [sp, #56]
   21d80:	mov	w1, w19
   21d84:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21d88:	add	x0, x0, #0x288
   21d8c:	bl	1d874 <OnPrint@@Base+0x344>
   21d90:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21d94:	ldr	x20, [x0, #272]
   21d98:	cbz	x20, 21dd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b20>
   21d9c:	cmp	w19, #0x6
   21da0:	b.eq	21de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b30>  // b.none
   21da4:	mov	x0, x20
   21da8:	bl	21bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1938>
   21dac:	adrp	x0, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4c>
   21db0:	add	x0, x0, #0xe00
   21db4:	bl	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6144>
   21db8:	and	w0, w0, #0xff
   21dbc:	cbz	w0, 21df0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b3c>
   21dc0:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21dc4:	str	xzr, [x0, #272]
   21dc8:	ldr	x0, [x20]
   21dcc:	mov	x1, #0x1                   	// #1
   21dd0:	str	x1, [x0, #104]
   21dd4:	cmp	w19, #0x6
   21dd8:	cset	w0, ne  // ne = any
   21ddc:	add	w0, w0, #0x1
   21de0:	bl	18bdc <__sanitizer_set_report_fd@@Base+0x282c>
   21de4:	mov	x0, x20
   21de8:	bl	21ccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a18>
   21dec:	b	21dac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1af8>
   21df0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21df4:	add	x0, x0, #0x2c0
   21df8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   21dfc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   21e00:	stp	x19, x30, [sp, #-16]!
   21e04:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21e08:	ldr	x19, [x0, #272]
   21e0c:	cbz	x19, 21e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b74>
   21e10:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   21e14:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21e18:	ldr	x1, [x1, #3560]
   21e1c:	ldr	x1, [x1]
   21e20:	cmp	x0, x1
   21e24:	b.eq	21e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>  // b.none
   21e28:	ldp	x19, x30, [sp], #16
   21e2c:	ret
   21e30:	mov	x0, x19
   21e34:	bl	21ccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a18>
   21e38:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21e3c:	str	xzr, [x0, #272]
   21e40:	b	21e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b74>
   21e44:	stp	x19, x20, [sp, #-192]!
   21e48:	stp	x21, x22, [sp, #16]
   21e4c:	stp	x23, x24, [sp, #32]
   21e50:	str	x30, [sp, #48]
   21e54:	mov	x20, x0
   21e58:	mov	x19, x1
   21e5c:	mov	x4, #0x0                   	// #0
   21e60:	mov	x3, #0x0                   	// #0
   21e64:	mov	x2, #0x0                   	// #0
   21e68:	mov	x1, #0x0                   	// #0
   21e6c:	mov	w0, #0x3                   	// #3
   21e70:	bl	19040 <__sanitizer_set_report_fd@@Base+0x2c90>
   21e74:	mov	x22, x0
   21e78:	cbz	w0, 21fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d2c>
   21e7c:	add	x0, sp, #0x58
   21e80:	bl	18ea0 <__sanitizer_set_report_fd@@Base+0x2af0>
   21e84:	str	x20, [sp, #72]
   21e88:	str	x19, [sp, #80]
   21e8c:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   21e90:	str	x0, [sp, #184]
   21e94:	str	xzr, [sp, #176]
   21e98:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21e9c:	ldr	x0, [x0, #4000]
   21ea0:	ldr	x0, [x0]
   21ea4:	cbz	x0, 21ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   21ea8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21eac:	ldr	x0, [x0, #4000]
   21eb0:	ldr	x19, [x0]
   21eb4:	add	x24, x19, #0x200, lsl #12
   21eb8:	mov	w2, #0x0                   	// #0
   21ebc:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21ec0:	add	x1, x1, #0x2f0
   21ec4:	mov	x0, x24
   21ec8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   21ecc:	mov	x23, x0
   21ed0:	mov	x1, x19
   21ed4:	bl	1b524 <__sanitizer_set_report_fd@@Base+0x5174>
   21ed8:	and	w0, w0, #0xff
   21edc:	cbz	w0, 22010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d5c>
   21ee0:	add	x0, sp, #0x58
   21ee4:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   21ee8:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21eec:	add	x0, x0, #0x110
   21ef0:	add	x0, x0, #0x8
   21ef4:	bl	19170 <__sanitizer_set_report_fd@@Base+0x2dc0>
   21ef8:	mov	x19, #0x0                   	// #0
   21efc:	adrp	x21, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   21f00:	add	x21, x21, #0x490
   21f04:	adrp	x20, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21f08:	add	x20, x20, #0x110
   21f0c:	add	x20, x20, #0x8
   21f10:	ldr	w1, [x21, x19, lsl #2]
   21f14:	mov	x0, x20
   21f18:	bl	191a0 <__sanitizer_set_report_fd@@Base+0x2df0>
   21f1c:	add	x19, x19, #0x1
   21f20:	cmp	x19, #0x7
   21f24:	b.ne	21f10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c5c>  // b.any
   21f28:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21f2c:	add	x1, x1, #0x110
   21f30:	add	x2, x1, #0x88
   21f34:	add	x1, x1, #0x8
   21f38:	mov	w0, #0x0                   	// #0
   21f3c:	bl	1915c <__sanitizer_set_report_fd@@Base+0x2dac>
   21f40:	sxtw	x3, w0
   21f44:	cbnz	w0, 22030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d7c>
   21f48:	mov	x6, #0x0                   	// #0
   21f4c:	mov	x5, #0x0                   	// #0
   21f50:	mov	x4, #0x0                   	// #0
   21f54:	add	x3, sp, #0x48
   21f58:	mov	w2, #0x700                 	// #1792
   21f5c:	movk	w2, #0x80, lsl #16
   21f60:	add	x1, x23, x24
   21f64:	adrp	x0, 22000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d4c>
   21f68:	add	x0, x0, #0x770
   21f6c:	bl	19e5c <__sanitizer_set_report_fd@@Base+0x3aac>
   21f70:	mov	x19, x0
   21f74:	mov	x2, #0x0                   	// #0
   21f78:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   21f7c:	add	x1, x1, #0x110
   21f80:	add	x1, x1, #0x88
   21f84:	mov	w0, #0x2                   	// #2
   21f88:	bl	1915c <__sanitizer_set_report_fd@@Base+0x2dac>
   21f8c:	str	wzr, [sp, #68]
   21f90:	add	x1, sp, #0x44
   21f94:	mov	x0, x19
   21f98:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   21f9c:	and	w0, w0, #0xff
   21fa0:	cbz	w0, 22060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dac>
   21fa4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   21fa8:	ldr	x0, [x0, #3680]
   21fac:	ldr	w0, [x0]
   21fb0:	cbnz	w0, 2204c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d98>
   21fb4:	add	x0, sp, #0x58
   21fb8:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   21fbc:	mov	x1, x24
   21fc0:	mov	x0, x23
   21fc4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   21fc8:	cbz	w22, 22124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e70>
   21fcc:	ldp	x21, x22, [sp, #16]
   21fd0:	ldp	x23, x24, [sp, #32]
   21fd4:	ldr	x30, [sp, #48]
   21fd8:	ldp	x19, x20, [sp], #192
   21fdc:	ret
   21fe0:	mov	x4, #0x0                   	// #0
   21fe4:	mov	x3, #0x0                   	// #0
   21fe8:	mov	x2, #0x0                   	// #0
   21fec:	mov	x1, #0x1                   	// #1
   21ff0:	mov	w0, #0x4                   	// #4
   21ff4:	bl	19040 <__sanitizer_set_report_fd@@Base+0x2c90>
   21ff8:	b	21e7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bc8>
   21ffc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   22000:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22004:	ldr	x1, [x1, #4000]
   22008:	str	x0, [x1]
   2200c:	b	21ea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bf4>
   22010:	mov	x4, #0x0                   	// #0
   22014:	mov	x3, #0x0                   	// #0
   22018:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2201c:	add	x2, x2, #0x308
   22020:	mov	w1, #0x152                 	// #338
   22024:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22028:	add	x0, x0, #0x1a8
   2202c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22030:	mov	x4, #0x0                   	// #0
   22034:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22038:	add	x2, x2, #0x348
   2203c:	mov	w1, #0x1ac                 	// #428
   22040:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22044:	add	x0, x0, #0x1a8
   22048:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2204c:	ldr	w1, [sp, #68]
   22050:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22054:	add	x0, x0, #0x358
   22058:	bl	1d908 <OnPrint@@Base+0x3d8>
   2205c:	b	21fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d00>
   22060:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22064:	ldr	x0, [x0, #3560]
   22068:	str	x19, [x0]
   2206c:	bl	19000 <__sanitizer_set_report_fd@@Base+0x2c50>
   22070:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22074:	ldr	x1, [x1, #3544]
   22078:	str	x0, [x1]
   2207c:	mov	x4, #0x0                   	// #0
   22080:	mov	x3, #0x0                   	// #0
   22084:	mov	x2, #0x0                   	// #0
   22088:	mov	x1, x19
   2208c:	mov	w0, #0x6d61                	// #28001
   22090:	movk	w0, #0x5961, lsl #16
   22094:	bl	19040 <__sanitizer_set_report_fd@@Base+0x2c90>
   22098:	add	x0, sp, #0x58
   2209c:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   220a0:	ldr	x0, [sp, #176]
   220a4:	cbnz	x0, 220b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e00>
   220a8:	bl	6ad0 <sched_yield@plt>
   220ac:	ldr	x1, [sp, #176]
   220b0:	cbz	x1, 220a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df4>
   220b4:	mov	w21, #0x40000000            	// #1073741824
   220b8:	add	x20, sp, #0x44
   220bc:	mov	w2, w21
   220c0:	mov	x1, #0x0                   	// #0
   220c4:	mov	w0, w19
   220c8:	bl	18fe8 <__sanitizer_set_report_fd@@Base+0x2c38>
   220cc:	mov	x1, x20
   220d0:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   220d4:	and	w0, w0, #0xff
   220d8:	cbz	w0, 220f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e44>
   220dc:	ldr	w1, [sp, #68]
   220e0:	cmp	w1, #0x4
   220e4:	b.eq	220bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e08>  // b.none
   220e8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   220ec:	ldr	x0, [x0, #3680]
   220f0:	ldr	w0, [x0]
   220f4:	cbnz	w0, 22114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e60>
   220f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   220fc:	ldr	x0, [x0, #3560]
   22100:	str	xzr, [x0]
   22104:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22108:	ldr	x0, [x0, #3544]
   2210c:	str	xzr, [x0]
   22110:	b	21fbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d08>
   22114:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22118:	add	x0, x0, #0x388
   2211c:	bl	1d908 <OnPrint@@Base+0x3d8>
   22120:	b	220f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e44>
   22124:	mov	x4, #0x0                   	// #0
   22128:	mov	x3, #0x0                   	// #0
   2212c:	mov	x2, #0x0                   	// #0
   22130:	mov	x1, #0x0                   	// #0
   22134:	mov	w0, #0x4                   	// #4
   22138:	bl	19040 <__sanitizer_set_report_fd@@Base+0x2c90>
   2213c:	b	21fcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d18>
   22140:	ldr	x3, [x0, #24]
   22144:	cbz	x3, 22170 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ebc>
   22148:	ldr	x4, [x0, #8]
   2214c:	mov	x0, #0x0                   	// #0
   22150:	ldr	x2, [x4, x0, lsl #3]
   22154:	cmp	x2, x1
   22158:	b.eq	22178 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec4>  // b.none
   2215c:	add	x0, x0, #0x1
   22160:	cmp	x0, x3
   22164:	b.ne	22150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.any
   22168:	mov	w0, #0x0                   	// #0
   2216c:	b	2217c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec8>
   22170:	mov	w0, #0x0                   	// #0
   22174:	b	2217c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ec8>
   22178:	mov	w0, #0x1                   	// #1
   2217c:	ret
   22180:	stp	x19, x20, [sp, #-64]!
   22184:	str	x30, [sp, #32]
   22188:	mov	x19, x0
   2218c:	str	x1, [sp, #56]
   22190:	ldr	x3, [x0, #24]
   22194:	ldr	x0, [x0, #16]
   22198:	lsr	x4, x0, #3
   2219c:	cmp	x3, x0, lsr #3
   221a0:	b.hi	221d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f24>  // b.pmore
   221a4:	cmp	x3, x4
   221a8:	b.eq	221f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f40>  // b.none
   221ac:	ldr	x3, [x19, #8]
   221b0:	ldr	x0, [x19, #24]
   221b4:	add	x2, x0, #0x1
   221b8:	str	x2, [x19, #24]
   221bc:	mov	x2, #0x8                   	// #8
   221c0:	add	x1, sp, #0x38
   221c4:	add	x0, x3, x0, lsl #3
   221c8:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   221cc:	ldr	x30, [sp, #32]
   221d0:	ldp	x19, x20, [sp], #64
   221d4:	ret
   221d8:	stp	x21, x22, [sp, #16]
   221dc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   221e0:	add	x2, x2, #0x5b0
   221e4:	mov	w1, #0x1be                 	// #446
   221e8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   221ec:	add	x0, x0, #0x520
   221f0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   221f4:	stp	x21, x22, [sp, #16]
   221f8:	add	x0, x3, #0x1
   221fc:	tst	x3, x0
   22200:	b.eq	2230c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2058>  // b.none
   22204:	clz	x4, x0
   22208:	mov	w1, #0x3f                  	// #63
   2220c:	sub	w1, w1, w4
   22210:	add	w20, w1, #0x1
   22214:	mov	x4, #0x1                   	// #1
   22218:	lsl	x4, x4, x20
   2221c:	cmp	x0, x4
   22220:	b.cs	222b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2004>  // b.hs, b.nlast
   22224:	mov	x2, #0x1                   	// #1
   22228:	lsl	x1, x2, x1
   2222c:	cmp	x0, x1
   22230:	b.ls	222d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2020>  // b.plast
   22234:	cmp	x3, x4
   22238:	b.hi	222f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2040>  // b.pmore
   2223c:	lsl	x20, x4, #3
   22240:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22244:	ldr	x0, [x0, #4000]
   22248:	ldr	x0, [x0]
   2224c:	cbz	x0, 22314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2060>
   22250:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22254:	ldr	x0, [x0, #4000]
   22258:	ldr	x0, [x0]
   2225c:	sub	x1, x0, #0x1
   22260:	tst	x0, x1
   22264:	b.ne	22328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2074>  // b.any
   22268:	add	x20, x20, x1
   2226c:	neg	x0, x0
   22270:	and	x20, x20, x0
   22274:	mov	w2, #0x0                   	// #0
   22278:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2227c:	add	x1, x1, #0x650
   22280:	mov	x0, x20
   22284:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22288:	mov	x22, x0
   2228c:	ldr	x2, [x19, #24]
   22290:	lsl	x2, x2, #3
   22294:	ldr	x1, [x19, #8]
   22298:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2229c:	ldr	x1, [x19, #16]
   222a0:	ldr	x0, [x19, #8]
   222a4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   222a8:	str	x22, [x19, #8]
   222ac:	str	x20, [x19, #16]
   222b0:	ldp	x21, x22, [sp, #16]
   222b4:	b	221ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ef8>
   222b8:	mov	x3, x0
   222bc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   222c0:	add	x2, x2, #0x5d0
   222c4:	mov	w1, #0x17b                 	// #379
   222c8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   222cc:	add	x0, x0, #0x520
   222d0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   222d4:	mov	x4, x1
   222d8:	mov	x3, x0
   222dc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   222e0:	add	x2, x2, #0x5f8
   222e4:	mov	w1, #0x17c                 	// #380
   222e8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   222ec:	add	x0, x0, #0x520
   222f0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   222f4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   222f8:	add	x2, x2, #0x618
   222fc:	mov	w1, #0x1fd                 	// #509
   22300:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22304:	add	x0, x0, #0x520
   22308:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2230c:	mov	x4, x0
   22310:	b	2223c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f88>
   22314:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   22318:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2231c:	ldr	x1, [x1, #4000]
   22320:	str	x0, [x1]
   22324:	b	22250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f9c>
   22328:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2232c:	add	x0, x0, #0x638
   22330:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22334:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22338:	stp	x19, x20, [sp, #-96]!
   2233c:	stp	x21, x22, [sp, #16]
   22340:	str	x30, [sp, #72]
   22344:	mov	x20, x1
   22348:	add	x21, x0, #0x8
   2234c:	mov	x0, x21
   22350:	bl	22140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e8c>
   22354:	ands	w19, w0, #0xff
   22358:	b.eq	22374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20c0>  // b.none
   2235c:	mov	w19, #0x0                   	// #0
   22360:	mov	w0, w19
   22364:	ldp	x21, x22, [sp, #16]
   22368:	ldr	x30, [sp, #72]
   2236c:	ldp	x19, x20, [sp], #96
   22370:	ret
   22374:	stp	x23, x24, [sp, #32]
   22378:	mov	w23, w20
   2237c:	mov	x3, #0x0                   	// #0
   22380:	mov	x2, #0x0                   	// #0
   22384:	mov	w1, w20
   22388:	mov	w0, #0x10                  	// #16
   2238c:	bl	18fd4 <__sanitizer_set_report_fd@@Base+0x2c24>
   22390:	add	x1, sp, #0x5c
   22394:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   22398:	ands	w22, w0, #0xff
   2239c:	b.ne	22454 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21a0>  // b.any
   223a0:	stp	x25, x26, [sp, #48]
   223a4:	str	x27, [sp, #64]
   223a8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   223ac:	ldr	x0, [x0, #3680]
   223b0:	ldr	w0, [x0]
   223b4:	sxtw	x0, w0
   223b8:	cmp	x0, #0x1
   223bc:	b.hi	22488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21d4>  // b.pmore
   223c0:	add	x25, sp, #0x54
   223c4:	mov	w24, #0x40000000            	// #1073741824
   223c8:	add	x19, sp, #0x58
   223cc:	mov	w26, #0x7                   	// #7
   223d0:	mov	w2, w24
   223d4:	mov	x1, x25
   223d8:	mov	w0, w23
   223dc:	bl	18fe8 <__sanitizer_set_report_fd@@Base+0x2c38>
   223e0:	mov	x27, x0
   223e4:	mov	x1, x19
   223e8:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   223ec:	and	w1, w0, #0xff
   223f0:	cbz	w1, 22400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x214c>
   223f4:	ldr	w0, [sp, #88]
   223f8:	cmp	w0, #0x4
   223fc:	b.eq	223d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x211c>  // b.none
   22400:	mov	x1, x19
   22404:	mov	x0, x27
   22408:	bl	189c0 <__sanitizer_set_report_fd@@Base+0x2610>
   2240c:	and	w0, w0, #0xff
   22410:	cbnz	w0, 2249c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e8>
   22414:	ldr	w1, [sp, #84]
   22418:	and	w0, w1, #0xff
   2241c:	cmp	w0, #0x7f
   22420:	b.ne	22434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2180>  // b.any
   22424:	asr	w3, w1, #8
   22428:	ubfx	x1, x1, #8, #8
   2242c:	cmp	w1, #0x13
   22430:	b.ne	224ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2238>  // b.any
   22434:	mov	x1, x20
   22438:	mov	x0, x21
   2243c:	bl	22180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ecc>
   22440:	mov	w19, #0x1                   	// #1
   22444:	ldp	x23, x24, [sp, #32]
   22448:	ldp	x25, x26, [sp, #48]
   2244c:	ldr	x27, [sp, #64]
   22450:	b	22360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   22454:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22458:	ldr	x0, [x0, #3680]
   2245c:	ldr	w0, [x0]
   22460:	cbnz	w0, 2246c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21b8>
   22464:	ldp	x23, x24, [sp, #32]
   22468:	b	22360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   2246c:	ldr	w2, [sp, #92]
   22470:	mov	x1, x20
   22474:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22478:	add	x0, x0, #0x3c0
   2247c:	bl	1d908 <OnPrint@@Base+0x3d8>
   22480:	ldp	x23, x24, [sp, #32]
   22484:	b	22360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   22488:	mov	x1, x20
   2248c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22490:	add	x0, x0, #0x3f0
   22494:	bl	1d908 <OnPrint@@Base+0x3d8>
   22498:	b	223c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x210c>
   2249c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   224a0:	ldr	x0, [x0, #3680]
   224a4:	ldr	w0, [x0]
   224a8:	cbnz	w0, 224d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2220>
   224ac:	mov	x3, #0x0                   	// #0
   224b0:	mov	x2, #0x0                   	// #0
   224b4:	mov	w1, w20
   224b8:	mov	w0, #0x11                  	// #17
   224bc:	bl	18fd4 <__sanitizer_set_report_fd@@Base+0x2c24>
   224c0:	mov	w19, w22
   224c4:	ldp	x23, x24, [sp, #32]
   224c8:	ldp	x25, x26, [sp, #48]
   224cc:	ldr	x27, [sp, #64]
   224d0:	b	22360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ac>
   224d4:	ldr	w2, [sp, #88]
   224d8:	mov	x1, x20
   224dc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   224e0:	add	x0, x0, #0x410
   224e4:	bl	1d908 <OnPrint@@Base+0x3d8>
   224e8:	b	224ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x21f8>
   224ec:	and	x3, x3, #0xff
   224f0:	mov	x2, #0x0                   	// #0
   224f4:	mov	w1, w23
   224f8:	mov	w0, w26
   224fc:	bl	18fd4 <__sanitizer_set_report_fd@@Base+0x2c24>
   22500:	b	223d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x211c>
   22504:	stp	x19, x20, [sp, #-128]!
   22508:	stp	x21, x22, [sp, #16]
   2250c:	stp	x23, x24, [sp, #32]
   22510:	stp	x25, x30, [sp, #48]
   22514:	mov	x21, x0
   22518:	ldr	w1, [x0, #40]
   2251c:	add	x0, sp, #0x60
   22520:	bl	192b4 <__sanitizer_set_report_fd@@Base+0x2f04>
   22524:	str	xzr, [sp, #80]
   22528:	str	xzr, [sp, #88]
   2252c:	str	xzr, [sp, #72]
   22530:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22534:	ldr	x0, [x0, #4000]
   22538:	ldr	x0, [x0]
   2253c:	cbz	x0, 225b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2304>
   22540:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22544:	ldr	x0, [x0, #4000]
   22548:	ldr	x0, [x0]
   2254c:	sub	x1, x0, #0x1
   22550:	tst	x1, x0
   22554:	b.ne	225cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2318>  // b.any
   22558:	add	x19, x0, #0x7
   2255c:	neg	x0, x0
   22560:	and	x19, x19, x0
   22564:	mov	w2, #0x0                   	// #0
   22568:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2256c:	add	x1, x1, #0x650
   22570:	mov	x0, x19
   22574:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22578:	mov	x20, x0
   2257c:	ldr	x2, [sp, #88]
   22580:	lsl	x2, x2, #3
   22584:	ldr	x1, [sp, #72]
   22588:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2258c:	ldr	x1, [sp, #80]
   22590:	ldr	x0, [sp, #72]
   22594:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22598:	str	x20, [sp, #72]
   2259c:	str	x19, [sp, #80]
   225a0:	cmp	x19, #0x3ff
   225a4:	b.ls	225dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2328>  // b.plast
   225a8:	mov	w23, #0x0                   	// #0
   225ac:	add	x25, sp, #0x48
   225b0:	add	x24, sp, #0x60
   225b4:	b	2273c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2488>
   225b8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   225bc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   225c0:	ldr	x1, [x1, #4000]
   225c4:	str	x0, [x1]
   225c8:	b	22540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x228c>
   225cc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   225d0:	add	x0, x0, #0x638
   225d4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   225d8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   225dc:	ldr	x3, [sp, #88]
   225e0:	cmp	x3, #0x80
   225e4:	b.hi	2265c <__sanitizer_get_module_and_offset_for_pc@@Base+0x23a8>  // b.pmore
   225e8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   225ec:	ldr	x0, [x0, #4000]
   225f0:	ldr	x0, [x0]
   225f4:	cbz	x0, 22678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23c4>
   225f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   225fc:	ldr	x0, [x0, #4000]
   22600:	ldr	x0, [x0]
   22604:	sub	x1, x0, #0x1
   22608:	tst	x1, x0
   2260c:	b.ne	2268c <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>  // b.any
   22610:	add	x19, x0, #0x3ff
   22614:	neg	x0, x0
   22618:	and	x19, x19, x0
   2261c:	mov	w2, #0x0                   	// #0
   22620:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22624:	add	x1, x1, #0x650
   22628:	mov	x0, x19
   2262c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22630:	mov	x20, x0
   22634:	ldr	x2, [sp, #88]
   22638:	lsl	x2, x2, #3
   2263c:	ldr	x1, [sp, #72]
   22640:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22644:	ldr	x1, [sp, #80]
   22648:	ldr	x0, [sp, #72]
   2264c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22650:	str	x20, [sp, #72]
   22654:	str	x19, [sp, #80]
   22658:	b	225a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f4>
   2265c:	mov	x4, #0x80                  	// #128
   22660:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22664:	add	x2, x2, #0x618
   22668:	mov	w1, #0x1fd                 	// #509
   2266c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22670:	add	x0, x0, #0x520
   22674:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22678:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   2267c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22680:	ldr	x1, [x1, #4000]
   22684:	str	x0, [x1]
   22688:	b	225f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2344>
   2268c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22690:	add	x0, x0, #0x638
   22694:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22698:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   2269c:	mov	x0, x21
   226a0:	bl	21bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1938>
   226a4:	mov	w19, #0x0                   	// #0
   226a8:	ldr	x1, [sp, #80]
   226ac:	ldr	x0, [sp, #72]
   226b0:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   226b4:	add	x0, sp, #0x60
   226b8:	bl	19238 <__sanitizer_set_report_fd@@Base+0x2e88>
   226bc:	mov	w0, w19
   226c0:	ldp	x21, x22, [sp, #16]
   226c4:	ldp	x23, x24, [sp, #32]
   226c8:	ldp	x25, x30, [sp, #48]
   226cc:	ldp	x19, x20, [sp], #128
   226d0:	ret
   226d4:	mov	w20, #0x1                   	// #1
   226d8:	b	22720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x246c>
   226dc:	ldr	x0, [x21, #32]
   226e0:	cmp	x0, #0x0
   226e4:	cset	w19, ne  // ne = any
   226e8:	b	226a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f4>
   226ec:	ldr	x19, [sp, #72]
   226f0:	ldr	x22, [sp, #88]
   226f4:	add	x22, x19, x22, lsl #3
   226f8:	cmp	x19, x22
   226fc:	b.eq	226dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2428>  // b.none
   22700:	mov	w20, #0x0                   	// #0
   22704:	ldr	x1, [x19], #8
   22708:	mov	x0, x21
   2270c:	bl	22338 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2084>
   22710:	ands	w0, w0, #0xff
   22714:	csel	w20, w20, w0, eq  // eq = none
   22718:	cmp	x22, x19
   2271c:	b.ne	22704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2450>  // b.any
   22720:	add	w23, w23, #0x1
   22724:	cmp	w23, #0x1d
   22728:	cset	w0, gt
   2272c:	eor	w20, w20, #0x1
   22730:	orr	w20, w0, w20
   22734:	tst	w20, #0xff
   22738:	b.ne	226dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2428>  // b.any
   2273c:	mov	x1, x25
   22740:	mov	x0, x24
   22744:	bl	196e8 <__sanitizer_set_report_fd@@Base+0x3338>
   22748:	cbz	w0, 2269c <__sanitizer_get_module_and_offset_for_pc@@Base+0x23e8>
   2274c:	cmp	w0, #0x1
   22750:	b.ne	226ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2438>  // b.any
   22754:	ldr	x19, [sp, #72]
   22758:	ldr	x22, [sp, #88]
   2275c:	add	x22, x19, x22, lsl #3
   22760:	cmp	x22, x19
   22764:	b.eq	226d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2420>  // b.none
   22768:	mov	w20, #0x1                   	// #1
   2276c:	b	22704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2450>
   22770:	stp	x19, x20, [sp, #-304]!
   22774:	stp	x21, x22, [sp, #16]
   22778:	stp	x23, x24, [sp, #32]
   2277c:	stp	x25, x26, [sp, #48]
   22780:	stp	x27, x30, [sp, #64]
   22784:	mov	x20, x0
   22788:	mov	x4, #0x0                   	// #0
   2278c:	mov	x3, #0x0                   	// #0
   22790:	mov	x2, #0x0                   	// #0
   22794:	mov	x1, #0x9                   	// #9
   22798:	mov	w0, #0x1                   	// #1
   2279c:	bl	19040 <__sanitizer_set_report_fd@@Base+0x2c90>
   227a0:	bl	1900c <__sanitizer_set_report_fd@@Base+0x2c5c>
   227a4:	ldr	x1, [x20, #112]
   227a8:	cmp	x0, x1
   227ac:	b.ne	229bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2708>  // b.any
   227b0:	add	x19, x20, #0x10
   227b4:	mov	x0, x19
   227b8:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   227bc:	mov	x0, x19
   227c0:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   227c4:	adrp	x0, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4c>
   227c8:	add	x0, x0, #0xe00
   227cc:	bl	263b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6104>
   227d0:	and	w0, w0, #0xff
   227d4:	cbz	w0, 229c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>
   227d8:	bl	1900c <__sanitizer_set_report_fd@@Base+0x2c5c>
   227dc:	mov	x21, x0
   227e0:	str	x20, [sp, #256]
   227e4:	adrp	x1, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   227e8:	add	x1, x1, #0xcb8
   227ec:	str	x1, [sp, #264]
   227f0:	str	xzr, [sp, #280]
   227f4:	str	xzr, [sp, #288]
   227f8:	str	xzr, [sp, #272]
   227fc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22800:	ldr	x1, [x1, #4000]
   22804:	ldr	x0, [x1]
   22808:	cbz	x0, 229d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2720>
   2280c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22810:	ldr	x0, [x0, #4000]
   22814:	ldr	x1, [x0]
   22818:	sub	x0, x1, #0x1
   2281c:	tst	x0, x1
   22820:	b.ne	229e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.any
   22824:	add	x19, x1, #0x7
   22828:	neg	x1, x1
   2282c:	and	x19, x19, x1
   22830:	mov	w2, #0x0                   	// #0
   22834:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22838:	add	x1, x1, #0x650
   2283c:	mov	x0, x19
   22840:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22844:	mov	x22, x0
   22848:	ldr	x2, [sp, #288]
   2284c:	lsl	x2, x2, #3
   22850:	ldr	x1, [sp, #272]
   22854:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22858:	ldr	x1, [sp, #280]
   2285c:	ldr	x0, [sp, #272]
   22860:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22864:	str	x22, [sp, #272]
   22868:	str	x19, [sp, #280]
   2286c:	mov	x0, #0x1fff                	// #8191
   22870:	cmp	x19, x0
   22874:	b.ls	229f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2744>  // b.plast
   22878:	str	w21, [sp, #296]
   2287c:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   22880:	add	x1, sp, #0x100
   22884:	str	x1, [x0, #272]
   22888:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2288c:	ldr	x0, [x0, #4000]
   22890:	ldr	x0, [x0]
   22894:	cbz	x0, 22abc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2808>
   22898:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2289c:	ldr	x0, [x0, #4000]
   228a0:	ldr	x0, [x0]
   228a4:	sub	x19, x0, #0x1
   228a8:	ands	x19, x19, x0
   228ac:	b.ne	22ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x281c>  // b.any
   228b0:	mov	x21, #0x1fff                	// #8191
   228b4:	add	x26, x0, x21
   228b8:	neg	x0, x0
   228bc:	and	x26, x26, x0
   228c0:	mov	w2, #0x0                   	// #0
   228c4:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   228c8:	add	x1, x1, #0x650
   228cc:	mov	x0, x26
   228d0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   228d4:	mov	x25, x0
   228d8:	mov	x2, #0x0                   	// #0
   228dc:	mov	x1, #0x0                   	// #0
   228e0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   228e4:	mov	x1, #0x0                   	// #0
   228e8:	mov	x0, #0x0                   	// #0
   228ec:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   228f0:	cmp	x26, x21
   228f4:	b.ls	22ae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x282c>  // b.plast
   228f8:	mov	x2, #0x2000                	// #8192
   228fc:	mov	w1, #0x0                   	// #0
   22900:	mov	x0, x25
   22904:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   22908:	add	x21, sp, #0xe8
   2290c:	mov	x2, #0x18                  	// #24
   22910:	mov	w1, #0x0                   	// #0
   22914:	mov	x0, x21
   22918:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   2291c:	str	x25, [sp, #232]
   22920:	mov	x0, #0x2000                	// #8192
   22924:	str	x0, [sp, #248]
   22928:	mov	x1, #0x0                   	// #0
   2292c:	mov	x0, x21
   22930:	bl	19050 <__sanitizer_set_report_fd@@Base+0x2ca0>
   22934:	add	x21, sp, #0x50
   22938:	mov	x24, #0x98                  	// #152
   2293c:	adrp	x23, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4c>
   22940:	add	x23, x23, #0xd30
   22944:	mov	w27, #0x4                   	// #4
   22948:	movk	w27, #0x800, lsl #16
   2294c:	adrp	x22, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22950:	add	x22, x22, #0x490
   22954:	mov	x2, x24
   22958:	mov	w1, #0x0                   	// #0
   2295c:	mov	x0, x21
   22960:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   22964:	str	x23, [sp, #80]
   22968:	str	w27, [sp, #216]
   2296c:	mov	x2, #0x0                   	// #0
   22970:	mov	x1, x21
   22974:	ldr	w0, [x22, x19, lsl #2]
   22978:	bl	19070 <__sanitizer_set_report_fd@@Base+0x2cc0>
   2297c:	add	x19, x19, #0x1
   22980:	cmp	x19, #0x7
   22984:	b.ne	22954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26a0>  // b.any
   22988:	add	x0, sp, #0x100
   2298c:	bl	22504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2250>
   22990:	and	w0, w0, #0xff
   22994:	cbnz	w0, 22b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28c4>
   22998:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2299c:	ldr	x0, [x0, #3680]
   229a0:	ldr	w0, [x0]
   229a4:	mov	w19, #0x3                   	// #3
   229a8:	cbz	w0, 22b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28e4>
   229ac:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   229b0:	add	x0, x0, #0x470
   229b4:	bl	1d908 <OnPrint@@Base+0x3d8>
   229b8:	b	22b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28e4>
   229bc:	mov	w0, #0x4                   	// #4
   229c0:	bl	18bdc <__sanitizer_set_report_fd@@Base+0x282c>
   229c4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   229c8:	add	x0, x0, #0x448
   229cc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   229d0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   229d4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   229d8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   229dc:	ldr	x1, [x1, #4000]
   229e0:	str	x0, [x1]
   229e4:	b	2280c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2558>
   229e8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   229ec:	add	x0, x0, #0x638
   229f0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   229f4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   229f8:	ldr	x3, [sp, #288]
   229fc:	cmp	x3, #0x400
   22a00:	b.hi	22a7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x27c8>  // b.pmore
   22a04:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22a08:	ldr	x0, [x0, #4000]
   22a0c:	ldr	x0, [x0]
   22a10:	cbz	x0, 22a98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27e4>
   22a14:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22a18:	ldr	x0, [x0, #4000]
   22a1c:	ldr	x0, [x0]
   22a20:	sub	x1, x0, #0x1
   22a24:	tst	x1, x0
   22a28:	b.ne	22aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x27f8>  // b.any
   22a2c:	add	x19, x0, #0x1, lsl #12
   22a30:	add	x19, x19, #0xfff
   22a34:	neg	x0, x0
   22a38:	and	x19, x19, x0
   22a3c:	mov	w2, #0x0                   	// #0
   22a40:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22a44:	add	x1, x1, #0x650
   22a48:	mov	x0, x19
   22a4c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22a50:	mov	x22, x0
   22a54:	ldr	x2, [sp, #288]
   22a58:	lsl	x2, x2, #3
   22a5c:	ldr	x1, [sp, #272]
   22a60:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22a64:	ldr	x1, [sp, #280]
   22a68:	ldr	x0, [sp, #272]
   22a6c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22a70:	str	x22, [sp, #272]
   22a74:	str	x19, [sp, #280]
   22a78:	b	22878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25c4>
   22a7c:	mov	x4, #0x400                 	// #1024
   22a80:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22a84:	add	x2, x2, #0x618
   22a88:	mov	w1, #0x1fd                 	// #509
   22a8c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22a90:	add	x0, x0, #0x520
   22a94:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22a98:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   22a9c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22aa0:	ldr	x1, [x1, #4000]
   22aa4:	str	x0, [x1]
   22aa8:	b	22a14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2760>
   22aac:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22ab0:	add	x0, x0, #0x638
   22ab4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22ab8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22abc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   22ac0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22ac4:	ldr	x1, [x1, #4000]
   22ac8:	str	x0, [x1]
   22acc:	b	22898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25e4>
   22ad0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22ad4:	add	x0, x0, #0x638
   22ad8:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22adc:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22ae0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22ae4:	ldr	x0, [x0, #4000]
   22ae8:	ldr	x0, [x0]
   22aec:	cbz	x0, 22b54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28a0>
   22af0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22af4:	ldr	x0, [x0, #4000]
   22af8:	ldr	x0, [x0]
   22afc:	sub	x1, x0, #0x1
   22b00:	tst	x1, x0
   22b04:	b.ne	22b68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28b4>  // b.any
   22b08:	add	x21, x0, #0x1, lsl #12
   22b0c:	add	x21, x21, #0xfff
   22b10:	neg	x0, x0
   22b14:	and	x21, x21, x0
   22b18:	mov	w2, #0x0                   	// #0
   22b1c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22b20:	add	x1, x1, #0x650
   22b24:	mov	x0, x21
   22b28:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22b2c:	mov	x22, x0
   22b30:	mov	x2, #0x0                   	// #0
   22b34:	mov	x1, x25
   22b38:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22b3c:	mov	x1, x26
   22b40:	mov	x0, x25
   22b44:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22b48:	mov	x26, x21
   22b4c:	mov	x25, x22
   22b50:	b	228f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2644>
   22b54:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   22b58:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22b5c:	ldr	x1, [x1, #4000]
   22b60:	str	x0, [x1]
   22b64:	b	22af0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x283c>
   22b68:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22b6c:	add	x0, x0, #0x638
   22b70:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22b74:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22b78:	add	x19, sp, #0x100
   22b7c:	ldr	x2, [x20]
   22b80:	ldr	x1, [x20, #8]
   22b84:	add	x0, sp, #0x108
   22b88:	blr	x2
   22b8c:	mov	x0, x19
   22b90:	bl	21bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x1938>
   22b94:	mov	w19, #0x0                   	// #0
   22b98:	adrp	x0, 21000 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4c>
   22b9c:	add	x0, x0, #0xe00
   22ba0:	bl	263f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6144>
   22ba4:	and	w0, w0, #0xff
   22ba8:	cbz	w0, 22bfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2948>
   22bac:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   22bb0:	str	xzr, [x0, #272]
   22bb4:	mov	x0, #0x1                   	// #1
   22bb8:	str	x0, [x20, #104]
   22bbc:	mov	x1, x26
   22bc0:	mov	x0, x25
   22bc4:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22bc8:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   22bcc:	add	x0, x0, #0xcb8
   22bd0:	str	x0, [sp, #264]
   22bd4:	ldr	x1, [sp, #280]
   22bd8:	ldr	x0, [sp, #272]
   22bdc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22be0:	mov	w0, w19
   22be4:	ldp	x21, x22, [sp, #16]
   22be8:	ldp	x23, x24, [sp, #32]
   22bec:	ldp	x25, x26, [sp, #48]
   22bf0:	ldp	x27, x30, [sp, #64]
   22bf4:	ldp	x19, x20, [sp], #304
   22bf8:	ret
   22bfc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22c00:	add	x0, x0, #0x2c0
   22c04:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22c08:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22c0c:	stp	x19, x20, [sp, #-48]!
   22c10:	stp	x21, x22, [sp, #16]
   22c14:	str	x30, [sp, #32]
   22c18:	mov	x19, x0
   22c1c:	str	x1, [x0]
   22c20:	str	w2, [x0, #8]
   22c24:	str	xzr, [x0, #24]
   22c28:	str	xzr, [x0, #32]
   22c2c:	str	xzr, [x0, #16]
   22c30:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22c34:	ldr	x0, [x0, #4000]
   22c38:	ldr	x0, [x0]
   22c3c:	cbz	x0, 22cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a1c>
   22c40:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22c44:	ldr	x0, [x0, #4000]
   22c48:	ldr	x1, [x0]
   22c4c:	sub	x0, x1, #0x1
   22c50:	tst	x0, x1
   22c54:	b.ne	22ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a30>  // b.any
   22c58:	add	x20, x1, #0x1f
   22c5c:	neg	x1, x1
   22c60:	and	x20, x20, x1
   22c64:	mov	w2, #0x0                   	// #0
   22c68:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22c6c:	add	x1, x1, #0x650
   22c70:	mov	x0, x20
   22c74:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22c78:	mov	x22, x0
   22c7c:	ldr	x2, [x19, #32]
   22c80:	lsl	x2, x2, #5
   22c84:	ldr	x1, [x19, #16]
   22c88:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22c8c:	ldr	x1, [x19, #24]
   22c90:	ldr	x0, [x19, #16]
   22c94:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22c98:	str	x22, [x19, #16]
   22c9c:	str	x20, [x19, #24]
   22ca0:	mov	w0, #0x1                   	// #1
   22ca4:	strb	w0, [x19, #72]
   22ca8:	ldrsw	x2, [x19, #8]
   22cac:	cmp	x2, #0x20
   22cb0:	b.hi	22cf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a40>  // b.pmore
   22cb4:	mov	w1, #0x0                   	// #0
   22cb8:	add	x0, x19, #0x28
   22cbc:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   22cc0:	ldp	x21, x22, [sp, #16]
   22cc4:	ldr	x30, [sp, #32]
   22cc8:	ldp	x19, x20, [sp], #48
   22ccc:	ret
   22cd0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   22cd4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22cd8:	ldr	x1, [x1, #4000]
   22cdc:	str	x0, [x1]
   22ce0:	b	22c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x298c>
   22ce4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22ce8:	add	x0, x0, #0x638
   22cec:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   22cf0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22cf4:	mov	x4, #0x20                  	// #32
   22cf8:	mov	x3, x2
   22cfc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22d00:	add	x2, x2, #0x4b0
   22d04:	mov	w1, #0x1c                  	// #28
   22d08:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22d0c:	add	x0, x0, #0x4e8
   22d10:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22d14:	stp	x19, x20, [sp, #-128]!
   22d18:	stp	x23, x24, [sp, #32]
   22d1c:	str	x30, [sp, #80]
   22d20:	mov	x23, x0
   22d24:	ldrb	w0, [x0, #72]
   22d28:	cbz	w0, 22d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aa4>
   22d2c:	mov	x19, x1
   22d30:	cbz	x1, 2308c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dd8>
   22d34:	stp	x21, x22, [sp, #16]
   22d38:	stp	x25, x26, [sp, #48]
   22d3c:	stp	x27, x28, [sp, #64]
   22d40:	add	x24, sp, #0x60
   22d44:	adrp	x26, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22d48:	ldr	x27, [x26, #4000]
   22d4c:	adrp	x25, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22d50:	add	x25, x25, #0x650
   22d54:	b	22e90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bdc>
   22d58:	stp	x21, x22, [sp, #16]
   22d5c:	stp	x25, x26, [sp, #48]
   22d60:	stp	x27, x28, [sp, #64]
   22d64:	mov	x4, #0x0                   	// #0
   22d68:	mov	x3, #0x0                   	// #0
   22d6c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22d70:	add	x2, x2, #0x530
   22d74:	mov	w1, #0x6a                  	// #106
   22d78:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22d7c:	add	x0, x0, #0x4e8
   22d80:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22d84:	mov	x0, x19
   22d88:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   22d8c:	add	x21, x19, x0
   22d90:	b	22ec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c10>
   22d94:	ldrb	w1, [x2]
   22d98:	cbnz	w1, 22da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2af4>
   22d9c:	ldrb	w1, [x0]
   22da0:	cmp	w1, #0x3a
   22da4:	b.eq	22de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b30>  // b.none
   22da8:	add	w22, w5, #0x1
   22dac:	add	x4, x4, #0x1
   22db0:	cmp	w6, w4
   22db4:	b.le	22de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b34>
   22db8:	mov	w5, w4
   22dbc:	mov	w22, w4
   22dc0:	ldr	x2, [x7, x4, lsl #3]
   22dc4:	mov	x0, x19
   22dc8:	ldrb	w3, [x0]
   22dcc:	ldrb	w1, [x2]
   22dd0:	cmp	w3, w1
   22dd4:	b.ne	22d94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae0>  // b.any
   22dd8:	add	x0, x0, #0x1
   22ddc:	add	x2, x2, #0x1
   22de0:	b	22dc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b14>
   22de4:	add	x19, x0, #0x1
   22de8:	cmp	w22, w6
   22dec:	b.eq	22f24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c70>  // b.none
   22df0:	mov	x2, #0x20                  	// #32
   22df4:	mov	w1, #0x0                   	// #0
   22df8:	mov	x0, x24
   22dfc:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   22e00:	mov	x28, x23
   22e04:	ldr	x0, [x28], #16
   22e08:	ldr	x0, [x0, w22, sxtw #3]
   22e0c:	str	x0, [sp, #96]
   22e10:	sub	x20, x20, x19
   22e14:	mov	x2, #0x0                   	// #0
   22e18:	mov	x1, #0x0                   	// #0
   22e1c:	add	x0, x20, #0x1
   22e20:	bl	10800 <__sancov_default_options@@Base+0x47c>
   22e24:	str	x0, [sp, #104]
   22e28:	mov	x2, x20
   22e2c:	mov	x1, x19
   22e30:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22e34:	ldr	x0, [sp, #104]
   22e38:	strb	wzr, [x0, x20]
   22e3c:	ldr	x0, [x28, #16]
   22e40:	ldr	x1, [x28, #8]
   22e44:	lsr	x4, x1, #5
   22e48:	cmp	x0, x1, lsr #5
   22e4c:	b.hi	22f40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c8c>  // b.pmore
   22e50:	cmp	x0, x4
   22e54:	b.eq	22f5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ca8>  // b.none
   22e58:	ldr	x3, [x23, #16]
   22e5c:	ldr	x0, [x23, #32]
   22e60:	add	x2, x0, #0x1
   22e64:	str	x2, [x23, #32]
   22e68:	mov	x2, #0x20                  	// #32
   22e6c:	mov	x1, x24
   22e70:	add	x0, x3, x0, lsl #5
   22e74:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22e78:	add	x22, x23, w22, sxtw
   22e7c:	mov	w0, #0x1                   	// #1
   22e80:	strb	w0, [x22, #40]
   22e84:	ldrb	w0, [x21]
   22e88:	cbz	w0, 23080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dcc>
   22e8c:	add	x19, x21, #0x1
   22e90:	ldrb	w0, [x19]
   22e94:	cmp	w0, #0x20
   22e98:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   22e9c:	b.ne	22eb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bfc>  // b.any
   22ea0:	ldrb	w0, [x19, #1]!
   22ea4:	cmp	w0, #0x20
   22ea8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   22eac:	b.eq	22ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bec>  // b.none
   22eb0:	mov	w1, #0xa                   	// #10
   22eb4:	mov	x0, x19
   22eb8:	bl	17c54 <__sanitizer_set_report_fd@@Base+0x18a4>
   22ebc:	mov	x21, x0
   22ec0:	cbz	x0, 22d84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ad0>
   22ec4:	cmp	x21, x19
   22ec8:	b.eq	22e84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bd0>  // b.none
   22ecc:	ldrb	w0, [x19]
   22ed0:	cmp	w0, #0x23
   22ed4:	b.eq	22e84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bd0>  // b.none
   22ed8:	mov	x20, x21
   22edc:	ldurb	w1, [x20, #-1]
   22ee0:	and	w0, w1, #0xfffffffb
   22ee4:	and	w0, w0, #0xff
   22ee8:	cmp	w1, #0x20
   22eec:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   22ef0:	b.ne	22f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c50>  // b.any
   22ef4:	sub	x20, x20, #0x1
   22ef8:	cmp	x20, x19
   22efc:	b.ne	22edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c28>  // b.any
   22f00:	mov	x20, x19
   22f04:	ldr	w6, [x23, #8]
   22f08:	cmp	w6, #0x0
   22f0c:	b.le	22f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>
   22f10:	ldr	x7, [x23]
   22f14:	mov	x4, #0x0                   	// #0
   22f18:	b	22db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b04>
   22f1c:	mov	w22, #0x0                   	// #0
   22f20:	b	22de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b34>
   22f24:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   22f28:	ldr	x0, [x0, #4008]
   22f2c:	ldr	x1, [x0]
   22f30:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   22f34:	add	x0, x0, #0x548
   22f38:	bl	1d874 <OnPrint@@Base+0x344>
   22f3c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   22f40:	mov	x3, x0
   22f44:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22f48:	add	x2, x2, #0x5b0
   22f4c:	mov	w1, #0x1be                 	// #446
   22f50:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   22f54:	add	x0, x0, #0x520
   22f58:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   22f5c:	add	x3, x0, #0x1
   22f60:	tst	x0, x3
   22f64:	b.eq	23058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2da4>  // b.none
   22f68:	clz	x2, x3
   22f6c:	mov	w1, #0x3f                  	// #63
   22f70:	sub	w1, w1, w2
   22f74:	add	w2, w1, #0x1
   22f78:	mov	x4, #0x1                   	// #1
   22f7c:	lsl	x4, x4, x2
   22f80:	cmp	x3, x4
   22f84:	b.cs	23008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d54>  // b.hs, b.nlast
   22f88:	mov	x2, #0x1                   	// #1
   22f8c:	lsl	x1, x2, x1
   22f90:	cmp	x3, x1
   22f94:	b.ls	23020 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d6c>  // b.plast
   22f98:	cmp	x0, x4
   22f9c:	b.hi	2303c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d88>  // b.pmore
   22fa0:	lsl	x19, x4, #5
   22fa4:	ldr	x0, [x27]
   22fa8:	cbz	x0, 23060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dac>
   22fac:	ldr	x0, [x26, #4000]
   22fb0:	ldr	x0, [x0]
   22fb4:	sub	x1, x0, #0x1
   22fb8:	tst	x0, x1
   22fbc:	b.ne	23070 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dbc>  // b.any
   22fc0:	add	x19, x19, x1
   22fc4:	neg	x0, x0
   22fc8:	and	x19, x19, x0
   22fcc:	mov	w2, #0x0                   	// #0
   22fd0:	mov	x1, x25
   22fd4:	mov	x0, x19
   22fd8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   22fdc:	mov	x28, x0
   22fe0:	ldr	x2, [x23, #32]
   22fe4:	lsl	x2, x2, #5
   22fe8:	ldr	x1, [x23, #16]
   22fec:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   22ff0:	ldr	x1, [x23, #24]
   22ff4:	ldr	x0, [x23, #16]
   22ff8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   22ffc:	str	x28, [x23, #16]
   23000:	str	x19, [x23, #24]
   23004:	b	22e58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba4>
   23008:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2300c:	add	x2, x2, #0x5d0
   23010:	mov	w1, #0x17b                 	// #379
   23014:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23018:	add	x0, x0, #0x520
   2301c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23020:	mov	x4, x1
   23024:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23028:	add	x2, x2, #0x5f8
   2302c:	mov	w1, #0x17c                 	// #380
   23030:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23034:	add	x0, x0, #0x520
   23038:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2303c:	mov	x3, x0
   23040:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23044:	add	x2, x2, #0x618
   23048:	mov	w1, #0x1fd                 	// #509
   2304c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23050:	add	x0, x0, #0x520
   23054:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23058:	mov	x4, x3
   2305c:	b	22fa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cec>
   23060:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   23064:	ldr	x1, [x26, #4000]
   23068:	str	x0, [x1]
   2306c:	b	22fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cf8>
   23070:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23074:	add	x0, x0, #0x638
   23078:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   2307c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23080:	ldp	x21, x22, [sp, #16]
   23084:	ldp	x25, x26, [sp, #48]
   23088:	ldp	x27, x28, [sp, #64]
   2308c:	ldp	x23, x24, [sp, #32]
   23090:	ldr	x30, [sp, #80]
   23094:	ldp	x19, x20, [sp], #128
   23098:	ret
   2309c:	stp	x19, x20, [sp, #-112]!
   230a0:	str	x30, [sp, #64]
   230a4:	mov	x19, x1
   230a8:	ldrb	w1, [x1]
   230ac:	cbnz	w1, 230bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e08>
   230b0:	ldr	x30, [sp, #64]
   230b4:	ldp	x19, x20, [sp], #112
   230b8:	ret
   230bc:	stp	x21, x22, [sp, #16]
   230c0:	mov	x22, x0
   230c4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   230c8:	ldr	x0, [x0, #4000]
   230cc:	ldr	x0, [x0]
   230d0:	cbz	x0, 231a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ef4>
   230d4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   230d8:	ldr	x0, [x0, #4000]
   230dc:	ldr	x2, [x0]
   230e0:	sub	x0, x2, #0x1
   230e4:	tst	x0, x2
   230e8:	b.ne	231bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f08>  // b.any
   230ec:	add	x21, x2, #0xfff
   230f0:	neg	x2, x2
   230f4:	and	x21, x21, x2
   230f8:	mov	w2, #0x0                   	// #0
   230fc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23100:	add	x1, x1, #0x650
   23104:	mov	x0, x21
   23108:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   2310c:	mov	x20, x0
   23110:	mov	x2, #0x0                   	// #0
   23114:	mov	x1, #0x0                   	// #0
   23118:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2311c:	mov	x1, #0x0                   	// #0
   23120:	mov	x0, #0x0                   	// #0
   23124:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   23128:	cmp	x21, #0xfff
   2312c:	b.ls	231d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.plast
   23130:	mov	x2, #0x1000                	// #4096
   23134:	mov	w1, #0x0                   	// #0
   23138:	mov	x0, x20
   2313c:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   23140:	strb	wzr, [x20]
   23144:	mov	x0, x19
   23148:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x2880>
   2314c:	and	w0, w0, #0xff
   23150:	cbz	w0, 23274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fc0>
   23154:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23158:	ldr	x0, [x0, #3680]
   2315c:	ldr	w0, [x0]
   23160:	cbnz	w0, 23450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x319c>
   23164:	mov	x5, #0x0                   	// #0
   23168:	mov	x4, #0x4000000             	// #67108864
   2316c:	add	x3, sp, #0x58
   23170:	add	x2, sp, #0x60
   23174:	add	x1, sp, #0x68
   23178:	mov	x0, x19
   2317c:	bl	15ba0 <__sanitizer_cov_dump@@Base+0x1fe8>
   23180:	and	w0, w0, #0xff
   23184:	cbz	w0, 23470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31bc>
   23188:	ldr	x1, [sp, #104]
   2318c:	mov	x0, x22
   23190:	bl	22d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a60>
   23194:	mov	x1, x21
   23198:	mov	x0, x20
   2319c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   231a0:	ldp	x21, x22, [sp, #16]
   231a4:	b	230b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dfc>
   231a8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   231ac:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   231b0:	ldr	x1, [x1, #4000]
   231b4:	str	x0, [x1]
   231b8:	b	230d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e20>
   231bc:	stp	x23, x24, [sp, #32]
   231c0:	stp	x25, x26, [sp, #48]
   231c4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   231c8:	add	x0, x0, #0x638
   231cc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   231d0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   231d4:	stp	x23, x24, [sp, #32]
   231d8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   231dc:	ldr	x0, [x0, #4000]
   231e0:	ldr	x0, [x0]
   231e4:	cbz	x0, 2324c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f98>
   231e8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   231ec:	ldr	x0, [x0, #4000]
   231f0:	ldr	x0, [x0]
   231f4:	sub	x1, x0, #0x1
   231f8:	tst	x1, x0
   231fc:	b.ne	23260 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fac>  // b.any
   23200:	add	x23, x0, #0xfff
   23204:	neg	x0, x0
   23208:	and	x23, x23, x0
   2320c:	mov	w2, #0x0                   	// #0
   23210:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23214:	add	x1, x1, #0x650
   23218:	mov	x0, x23
   2321c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   23220:	mov	x24, x0
   23224:	mov	x2, #0x0                   	// #0
   23228:	mov	x1, x20
   2322c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23230:	mov	x1, x21
   23234:	mov	x0, x20
   23238:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   2323c:	mov	x21, x23
   23240:	mov	x20, x24
   23244:	ldp	x23, x24, [sp, #32]
   23248:	b	23130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e7c>
   2324c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   23250:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23254:	ldr	x1, [x1, #4000]
   23258:	str	x0, [x1]
   2325c:	b	231e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f34>
   23260:	stp	x25, x26, [sp, #48]
   23264:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23268:	add	x0, x0, #0x638
   2326c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   23270:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23274:	mov	x0, x19
   23278:	bl	1ba24 <__sanitizer_set_report_fd@@Base+0x5674>
   2327c:	and	w0, w0, #0xff
   23280:	cbnz	w0, 23154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   23284:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23288:	ldr	x0, [x0, #4000]
   2328c:	ldr	x0, [x0]
   23290:	cbz	x0, 2332c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3078>
   23294:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23298:	ldr	x0, [x0, #4000]
   2329c:	ldr	x0, [x0]
   232a0:	sub	x1, x0, #0x1
   232a4:	tst	x1, x0
   232a8:	b.ne	23340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x308c>  // b.any
   232ac:	stp	x23, x24, [sp, #32]
   232b0:	add	x24, x0, #0xfff
   232b4:	neg	x0, x0
   232b8:	and	x24, x24, x0
   232bc:	mov	w2, #0x0                   	// #0
   232c0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   232c4:	add	x1, x1, #0x650
   232c8:	mov	x0, x24
   232cc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   232d0:	mov	x23, x0
   232d4:	mov	x2, #0x0                   	// #0
   232d8:	mov	x1, #0x0                   	// #0
   232dc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   232e0:	mov	x1, #0x0                   	// #0
   232e4:	mov	x0, #0x0                   	// #0
   232e8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   232ec:	cmp	x24, #0xfff
   232f0:	b.ls	23358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a4>  // b.plast
   232f4:	mov	x2, #0x1000                	// #4096
   232f8:	mov	w1, #0x0                   	// #0
   232fc:	mov	x0, x23
   23300:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   23304:	strb	wzr, [x23]
   23308:	mov	x1, #0x1000                	// #4096
   2330c:	mov	x0, x23
   23310:	bl	12d0c <__sancov_default_options@@Base+0x2988>
   23314:	cbnz	x0, 233f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3140>
   23318:	mov	x1, x24
   2331c:	mov	x0, x23
   23320:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   23324:	ldp	x23, x24, [sp, #32]
   23328:	b	23154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   2332c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   23330:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23334:	ldr	x1, [x1, #4000]
   23338:	str	x0, [x1]
   2333c:	b	23294 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fe0>
   23340:	stp	x23, x24, [sp, #32]
   23344:	stp	x25, x26, [sp, #48]
   23348:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2334c:	add	x0, x0, #0x638
   23350:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   23354:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23358:	stp	x25, x26, [sp, #48]
   2335c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23360:	ldr	x0, [x0, #4000]
   23364:	ldr	x0, [x0]
   23368:	cbz	x0, 233d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x311c>
   2336c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23370:	ldr	x0, [x0, #4000]
   23374:	ldr	x0, [x0]
   23378:	sub	x1, x0, #0x1
   2337c:	tst	x1, x0
   23380:	b.ne	233e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3130>  // b.any
   23384:	add	x25, x0, #0xfff
   23388:	neg	x0, x0
   2338c:	and	x25, x25, x0
   23390:	mov	w2, #0x0                   	// #0
   23394:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23398:	add	x1, x1, #0x650
   2339c:	mov	x0, x25
   233a0:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   233a4:	mov	x26, x0
   233a8:	mov	x2, #0x0                   	// #0
   233ac:	mov	x1, x23
   233b0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   233b4:	mov	x1, x24
   233b8:	mov	x0, x23
   233bc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   233c0:	mov	x24, x25
   233c4:	mov	x23, x26
   233c8:	ldp	x25, x26, [sp, #48]
   233cc:	b	232f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3040>
   233d0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   233d4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   233d8:	ldr	x1, [x1, #4000]
   233dc:	str	x0, [x1]
   233e0:	b	2336c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b8>
   233e4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   233e8:	add	x0, x0, #0x638
   233ec:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   233f0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   233f4:	stp	x25, x26, [sp, #48]
   233f8:	mov	x0, x23
   233fc:	bl	126e0 <__sancov_default_options@@Base+0x235c>
   23400:	sub	x2, x0, x23
   23404:	mov	x25, #0xfff                 	// #4095
   23408:	cmp	x2, x25
   2340c:	csel	x2, x2, x25, ls  // ls = plast
   23410:	mov	x1, x23
   23414:	mov	x0, x20
   23418:	bl	17d90 <__sanitizer_set_report_fd@@Base+0x19e0>
   2341c:	mov	x0, x20
   23420:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   23424:	sub	x2, x25, x0
   23428:	mov	x1, x19
   2342c:	mov	x0, x20
   23430:	bl	17d90 <__sanitizer_set_report_fd@@Base+0x19e0>
   23434:	mov	x1, x24
   23438:	mov	x0, x23
   2343c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   23440:	mov	x19, x20
   23444:	ldp	x23, x24, [sp, #32]
   23448:	ldp	x25, x26, [sp, #48]
   2344c:	b	23154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea0>
   23450:	mov	x2, x19
   23454:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23458:	ldr	x0, [x0, #4008]
   2345c:	ldr	x1, [x0]
   23460:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   23464:	add	x0, x0, #0x570
   23468:	bl	1d874 <OnPrint@@Base+0x344>
   2346c:	b	23164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eb0>
   23470:	stp	x23, x24, [sp, #32]
   23474:	stp	x25, x26, [sp, #48]
   23478:	mov	x2, x19
   2347c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23480:	ldr	x0, [x0, #4008]
   23484:	ldr	x1, [x0]
   23488:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2348c:	add	x0, x0, #0x598
   23490:	bl	1d874 <OnPrint@@Base+0x344>
   23494:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23498:	ldr	x0, [x0, #32]
   2349c:	ret
   234a0:	stp	x19, x20, [sp, #-48]!
   234a4:	str	x30, [sp, #32]
   234a8:	mov	x20, x0
   234ac:	ldr	w0, [x0, #8]
   234b0:	cmp	w0, #0x0
   234b4:	b.le	2350c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3258>
   234b8:	stp	x21, x22, [sp, #16]
   234bc:	mov	x21, x1
   234c0:	mov	x19, #0x0                   	// #0
   234c4:	ldr	x0, [x20]
   234c8:	ldr	x1, [x0, x19, lsl #3]
   234cc:	mov	x0, x21
   234d0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   234d4:	cbz	w0, 234f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3240>
   234d8:	add	x19, x19, #0x1
   234dc:	ldr	w0, [x20, #8]
   234e0:	cmp	w0, w19
   234e4:	b.gt	234c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3210>
   234e8:	mov	w0, #0x0                   	// #0
   234ec:	ldp	x21, x22, [sp, #16]
   234f0:	b	23500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x324c>
   234f4:	add	x20, x20, w19, sxtw
   234f8:	ldrb	w0, [x20, #40]
   234fc:	ldp	x21, x22, [sp, #16]
   23500:	ldr	x30, [sp, #32]
   23504:	ldp	x19, x20, [sp], #48
   23508:	ret
   2350c:	mov	w0, #0x0                   	// #0
   23510:	b	23500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x324c>
   23514:	stp	x19, x20, [sp, #-64]!
   23518:	stp	x21, x22, [sp, #16]
   2351c:	stp	x23, x24, [sp, #32]
   23520:	str	x30, [sp, #48]
   23524:	mov	x20, x0
   23528:	mov	x22, x1
   2352c:	mov	x21, x2
   23530:	mov	x23, x3
   23534:	strb	wzr, [x0, #72]
   23538:	mov	x1, x2
   2353c:	bl	234a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31ec>
   23540:	ands	w0, w0, #0xff
   23544:	b.eq	235a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>  // b.none
   23548:	ldr	x0, [x20, #32]
   2354c:	cbz	x0, 235b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3304>
   23550:	mov	x19, #0x0                   	// #0
   23554:	b	23568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32b4>
   23558:	add	x19, x19, #0x1
   2355c:	ldr	x0, [x20, #32]
   23560:	cmp	x0, x19
   23564:	b.ls	235a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32ec>  // b.plast
   23568:	lsl	x4, x19, #5
   2356c:	ldr	x5, [x20, #16]
   23570:	add	x24, x5, x4
   23574:	mov	x1, x21
   23578:	ldr	x0, [x5, x4]
   2357c:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   23580:	cbnz	w0, 23558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a4>
   23584:	mov	x1, x22
   23588:	ldr	x0, [x24, #8]
   2358c:	bl	12a9c <__sancov_default_options@@Base+0x2718>
   23590:	ands	w0, w0, #0xff
   23594:	b.eq	23558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a4>  // b.none
   23598:	str	x24, [x23]
   2359c:	b	235a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>
   235a0:	mov	w0, #0x0                   	// #0
   235a4:	ldp	x21, x22, [sp, #16]
   235a8:	ldp	x23, x24, [sp, #32]
   235ac:	ldr	x30, [sp, #48]
   235b0:	ldp	x19, x20, [sp], #64
   235b4:	ret
   235b8:	mov	w0, #0x0                   	// #0
   235bc:	b	235a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f0>
   235c0:	ldr	x4, [x0, #32]
   235c4:	cmp	x1, x4
   235c8:	b.cs	235d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3324>  // b.hs, b.nlast
   235cc:	ldr	x0, [x0, #16]
   235d0:	add	x0, x0, x1, lsl #5
   235d4:	ret
   235d8:	str	x30, [sp, #-16]!
   235dc:	mov	x3, x1
   235e0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   235e4:	add	x2, x2, #0x5c8
   235e8:	mov	w1, #0x9e                  	// #158
   235ec:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   235f0:	add	x0, x0, #0x4e8
   235f4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   235f8:	stp	x19, x20, [sp, #-96]!
   235fc:	str	x30, [sp, #72]
   23600:	mov	x20, x0
   23604:	ldr	x0, [x0, #32]
   23608:	cbz	x0, 237e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3534>
   2360c:	stp	x21, x22, [sp, #16]
   23610:	stp	x23, x24, [sp, #32]
   23614:	stp	x25, x26, [sp, #48]
   23618:	mov	x21, x1
   2361c:	mov	x19, #0x0                   	// #0
   23620:	add	x23, sp, #0x58
   23624:	adrp	x24, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23628:	ldr	x25, [x24, #4000]
   2362c:	adrp	x22, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23630:	add	x22, x22, #0x650
   23634:	b	2372c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3478>
   23638:	str	x27, [sp, #64]
   2363c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23640:	add	x2, x2, #0x5b0
   23644:	mov	w1, #0x1be                 	// #446
   23648:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2364c:	add	x0, x0, #0x520
   23650:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23654:	mov	x3, x0
   23658:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2365c:	add	x2, x2, #0x5d0
   23660:	mov	w1, #0x17b                 	// #379
   23664:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23668:	add	x0, x0, #0x520
   2366c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23670:	mov	x4, x1
   23674:	mov	x3, x0
   23678:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2367c:	add	x2, x2, #0x5f8
   23680:	mov	w1, #0x17c                 	// #380
   23684:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23688:	add	x0, x0, #0x520
   2368c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23690:	mov	x4, x0
   23694:	lsl	x26, x4, #3
   23698:	ldr	x0, [x25]
   2369c:	cbz	x0, 237bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3508>
   236a0:	ldr	x0, [x24, #4000]
   236a4:	ldr	x0, [x0]
   236a8:	sub	x1, x0, #0x1
   236ac:	tst	x0, x1
   236b0:	b.ne	237cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3518>  // b.any
   236b4:	add	x26, x26, x1
   236b8:	neg	x0, x0
   236bc:	and	x26, x26, x0
   236c0:	mov	w2, #0x0                   	// #0
   236c4:	mov	x1, x22
   236c8:	mov	x0, x26
   236cc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   236d0:	mov	x27, x0
   236d4:	ldr	x2, [x21, #16]
   236d8:	lsl	x2, x2, #3
   236dc:	ldr	x1, [x21]
   236e0:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   236e4:	ldr	x1, [x21, #8]
   236e8:	ldr	x0, [x21]
   236ec:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   236f0:	str	x27, [x21]
   236f4:	str	x26, [x21, #8]
   236f8:	ldr	x27, [sp, #64]
   236fc:	ldr	x3, [x21]
   23700:	ldr	x0, [x21, #16]
   23704:	add	x1, x0, #0x1
   23708:	str	x1, [x21, #16]
   2370c:	mov	x2, #0x8                   	// #8
   23710:	mov	x1, x23
   23714:	add	x0, x3, x0, lsl #3
   23718:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2371c:	add	x19, x19, #0x1
   23720:	ldr	x0, [x20, #32]
   23724:	cmp	x0, x19
   23728:	b.ls	237dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3528>  // b.plast
   2372c:	ldr	x2, [x20, #16]
   23730:	add	x2, x2, x19, lsl #5
   23734:	ldr	w0, [x2, #16]
   23738:	cbz	w0, 2371c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3468>
   2373c:	str	x2, [sp, #88]
   23740:	ldr	x3, [x21, #16]
   23744:	ldr	x0, [x21, #8]
   23748:	lsr	x4, x0, #3
   2374c:	cmp	x3, x0, lsr #3
   23750:	b.hi	23638 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3384>  // b.pmore
   23754:	cmp	x3, x4
   23758:	b.ne	236fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3448>  // b.any
   2375c:	str	x27, [sp, #64]
   23760:	add	x0, x3, #0x1
   23764:	tst	x3, x0
   23768:	b.eq	23690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33dc>  // b.none
   2376c:	clz	x2, x0
   23770:	mov	w1, #0x3f                  	// #63
   23774:	sub	w1, w1, w2
   23778:	add	w2, w1, #0x1
   2377c:	mov	x4, #0x1                   	// #1
   23780:	lsl	x4, x4, x2
   23784:	cmp	x0, x4
   23788:	b.cs	23654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33a0>  // b.hs, b.nlast
   2378c:	mov	x2, #0x1                   	// #1
   23790:	lsl	x1, x2, x1
   23794:	cmp	x0, x1
   23798:	b.ls	23670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33bc>  // b.plast
   2379c:	cmp	x3, x4
   237a0:	b.ls	23694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33e0>  // b.plast
   237a4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   237a8:	add	x2, x2, #0x618
   237ac:	mov	w1, #0x1fd                 	// #509
   237b0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   237b4:	add	x0, x0, #0x520
   237b8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   237bc:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   237c0:	ldr	x1, [x24, #4000]
   237c4:	str	x0, [x1]
   237c8:	b	236a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33ec>
   237cc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   237d0:	add	x0, x0, #0x638
   237d4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   237d8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   237dc:	ldp	x21, x22, [sp, #16]
   237e0:	ldp	x23, x24, [sp, #32]
   237e4:	ldp	x25, x26, [sp, #48]
   237e8:	ldr	x30, [sp, #72]
   237ec:	ldp	x19, x20, [sp], #96
   237f0:	ret
   237f4:	stp	x19, x30, [sp, #-16]!
   237f8:	mov	x19, x0
   237fc:	mov	x2, #0x40                  	// #64
   23800:	mov	w1, #0x0                   	// #0
   23804:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   23808:	mov	x0, #0xffffffffffffffff    	// #-1
   2380c:	str	x0, [x19, #40]
   23810:	ldp	x19, x30, [sp], #16
   23814:	ret
   23818:	stp	x19, x30, [sp, #-16]!
   2381c:	mov	x19, x0
   23820:	mov	x1, #0x0                   	// #0
   23824:	ldr	x0, [x0, #8]
   23828:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   2382c:	mov	x1, #0x0                   	// #0
   23830:	ldr	x0, [x19, #32]
   23834:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23838:	mov	x1, #0x0                   	// #0
   2383c:	ldr	x0, [x19, #48]
   23840:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23844:	mov	x2, #0x40                  	// #64
   23848:	mov	w1, #0x0                   	// #0
   2384c:	mov	x0, x19
   23850:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   23854:	mov	x0, #0xffffffffffffffff    	// #-1
   23858:	str	x0, [x19, #40]
   2385c:	ldp	x19, x30, [sp], #16
   23860:	ret
   23864:	stp	x19, x20, [sp, #-32]!
   23868:	stp	x21, x30, [sp, #16]
   2386c:	mov	x19, x0
   23870:	mov	x0, x1
   23874:	mov	x21, x2
   23878:	mov	w20, w3
   2387c:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   23880:	str	x0, [x19, #8]
   23884:	str	x21, [x19, #16]
   23888:	str	w20, [x19, #24]
   2388c:	ldp	x21, x30, [sp, #16]
   23890:	ldp	x19, x20, [sp], #32
   23894:	ret
   23898:	str	x30, [sp, #-16]!
   2389c:	str	xzr, [x0], #8
   238a0:	bl	237f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3540>
   238a4:	ldr	x30, [sp], #16
   238a8:	ret
   238ac:	stp	x19, x20, [sp, #-32]!
   238b0:	str	x30, [sp, #16]
   238b4:	mov	x20, x0
   238b8:	mov	x2, #0x0                   	// #0
   238bc:	mov	x1, #0x0                   	// #0
   238c0:	mov	x0, #0x48                  	// #72
   238c4:	bl	10800 <__sancov_default_options@@Base+0x47c>
   238c8:	mov	x19, x0
   238cc:	bl	23898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35e4>
   238d0:	str	x20, [x19, #8]
   238d4:	mov	x0, x19
   238d8:	ldr	x30, [sp, #16]
   238dc:	ldp	x19, x20, [sp], #32
   238e0:	ret
   238e4:	stp	x19, x30, [sp, #-16]!
   238e8:	mov	x19, x0
   238ec:	add	x0, x0, #0x8
   238f0:	bl	23818 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3564>
   238f4:	ldr	x0, [x19]
   238f8:	cbz	x0, 23900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x364c>
   238fc:	bl	238e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3630>
   23900:	mov	x1, #0x0                   	// #0
   23904:	mov	x0, x19
   23908:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   2390c:	ldp	x19, x30, [sp], #16
   23910:	ret
   23914:	str	x30, [sp, #-16]!
   23918:	mov	x2, #0x40                  	// #64
   2391c:	mov	w1, #0x0                   	// #0
   23920:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   23924:	ldr	x30, [sp], #16
   23928:	ret
   2392c:	stp	x19, x30, [sp, #-16]!
   23930:	mov	x19, x0
   23934:	mov	x1, #0x0                   	// #0
   23938:	ldr	x0, [x0]
   2393c:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23940:	mov	x1, #0x0                   	// #0
   23944:	ldr	x0, [x19, #24]
   23948:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   2394c:	mov	x1, #0x0                   	// #0
   23950:	ldr	x0, [x19, #40]
   23954:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23958:	mov	x2, #0x40                  	// #64
   2395c:	mov	w1, #0x0                   	// #0
   23960:	mov	x0, x19
   23964:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   23968:	ldp	x19, x30, [sp], #16
   2396c:	ret
   23970:	strb	wzr, [x0, #104]
   23974:	ret
   23978:	ldr	x3, [x0, #224]
   2397c:	cbz	x3, 239a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36f0>
   23980:	str	x30, [sp, #-16]!
   23984:	mov	x4, #0x0                   	// #0
   23988:	mov	x3, #0x0                   	// #0
   2398c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   23990:	add	x2, x2, #0x5f0
   23994:	mov	w1, #0x4e                  	// #78
   23998:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2399c:	add	x0, x0, #0x620
   239a0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   239a4:	ldr	x3, [x0, #232]
   239a8:	cbnz	x3, 23980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36cc>
   239ac:	str	x1, [x0, #224]
   239b0:	str	x2, [x0, #232]
   239b4:	ret
   239b8:	stp	x19, x20, [sp, #-48]!
   239bc:	stp	x21, x22, [sp, #16]
   239c0:	str	x30, [sp, #32]
   239c4:	mov	x20, x0
   239c8:	mov	x21, x1
   239cc:	ldr	x0, [x0, #32]
   239d0:	bl	18fa4 <__sanitizer_set_report_fd@@Base+0x2bf4>
   239d4:	ldr	x0, [x20, #24]
   239d8:	cbz	x0, 239e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3734>
   239dc:	mov	x1, x21
   239e0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   239e4:	cbz	w0, 23a70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37bc>
   239e8:	ldr	x0, [x20, #16]
   239ec:	mov	x19, #0x0                   	// #0
   239f0:	cbz	x0, 23a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3768>
   239f4:	lsl	x22, x19, #3
   239f8:	ldr	x0, [x20]
   239fc:	mov	x1, x21
   23a00:	ldr	x0, [x0, x19, lsl #3]
   23a04:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   23a08:	cbz	w0, 23a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37c4>
   23a0c:	add	x19, x19, #0x1
   23a10:	ldr	x0, [x20, #16]
   23a14:	cmp	x19, x0
   23a18:	b.cc	239f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3740>  // b.lo, b.ul, b.last
   23a1c:	mov	x0, x21
   23a20:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   23a24:	mov	x19, x20
   23a28:	str	x0, [x19, #24]!
   23a2c:	ldr	x3, [x20, #16]
   23a30:	ldr	x0, [x20, #8]
   23a34:	lsr	x4, x0, #3
   23a38:	cmp	x3, x0, lsr #3
   23a3c:	b.hi	23abc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3808>  // b.pmore
   23a40:	cmp	x3, x4
   23a44:	b.eq	23ad4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3820>  // b.none
   23a48:	ldr	x3, [x20]
   23a4c:	ldr	x0, [x20, #16]
   23a50:	add	x1, x0, #0x1
   23a54:	str	x1, [x20, #16]
   23a58:	mov	x2, #0x8                   	// #8
   23a5c:	mov	x1, x19
   23a60:	add	x0, x3, x0, lsl #3
   23a64:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23a68:	ldr	x0, [x20, #24]
   23a6c:	b	23a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37dc>
   23a70:	ldr	x0, [x20, #24]
   23a74:	b	23a90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37dc>
   23a78:	ldr	x4, [x20, #16]
   23a7c:	cmp	x4, x19
   23a80:	b.ls	23aa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37ec>  // b.plast
   23a84:	ldr	x0, [x20]
   23a88:	ldr	x0, [x0, x22]
   23a8c:	str	x0, [x20, #24]
   23a90:	ldp	x21, x22, [sp, #16]
   23a94:	ldr	x30, [sp, #32]
   23a98:	ldp	x19, x20, [sp], #48
   23a9c:	ret
   23aa0:	mov	x3, x19
   23aa4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23aa8:	add	x2, x2, #0x508
   23aac:	mov	w1, #0x1b6                 	// #438
   23ab0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23ab4:	add	x0, x0, #0x520
   23ab8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23abc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23ac0:	add	x2, x2, #0x5b0
   23ac4:	mov	w1, #0x1be                 	// #446
   23ac8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23acc:	add	x0, x0, #0x520
   23ad0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23ad4:	add	x0, x3, #0x1
   23ad8:	tst	x3, x0
   23adc:	b.eq	23be4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3930>  // b.none
   23ae0:	clz	x2, x0
   23ae4:	mov	w1, #0x3f                  	// #63
   23ae8:	sub	w1, w1, w2
   23aec:	add	w2, w1, #0x1
   23af0:	mov	x4, #0x1                   	// #1
   23af4:	lsl	x4, x4, x2
   23af8:	cmp	x0, x4
   23afc:	b.cs	23b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38dc>  // b.hs, b.nlast
   23b00:	mov	x2, #0x1                   	// #1
   23b04:	lsl	x1, x2, x1
   23b08:	cmp	x0, x1
   23b0c:	b.ls	23bac <__sanitizer_get_module_and_offset_for_pc@@Base+0x38f8>  // b.plast
   23b10:	cmp	x3, x4
   23b14:	b.hi	23bcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3918>  // b.pmore
   23b18:	lsl	x21, x4, #3
   23b1c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23b20:	ldr	x0, [x0, #4000]
   23b24:	ldr	x0, [x0]
   23b28:	cbz	x0, 23bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3938>
   23b2c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23b30:	ldr	x0, [x0, #4000]
   23b34:	ldr	x0, [x0]
   23b38:	sub	x1, x0, #0x1
   23b3c:	tst	x0, x1
   23b40:	b.ne	23c00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x394c>  // b.any
   23b44:	add	x21, x21, x1
   23b48:	neg	x0, x0
   23b4c:	and	x21, x21, x0
   23b50:	mov	w2, #0x0                   	// #0
   23b54:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23b58:	add	x1, x1, #0x650
   23b5c:	mov	x0, x21
   23b60:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   23b64:	mov	x22, x0
   23b68:	ldr	x2, [x20, #16]
   23b6c:	lsl	x2, x2, #3
   23b70:	ldr	x1, [x20]
   23b74:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23b78:	ldr	x1, [x20, #8]
   23b7c:	ldr	x0, [x20]
   23b80:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   23b84:	str	x22, [x20]
   23b88:	str	x21, [x20, #8]
   23b8c:	b	23a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3794>
   23b90:	mov	x3, x0
   23b94:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23b98:	add	x2, x2, #0x5d0
   23b9c:	mov	w1, #0x17b                 	// #379
   23ba0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23ba4:	add	x0, x0, #0x520
   23ba8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23bac:	mov	x4, x1
   23bb0:	mov	x3, x0
   23bb4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23bb8:	add	x2, x2, #0x5f8
   23bbc:	mov	w1, #0x17c                 	// #380
   23bc0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23bc4:	add	x0, x0, #0x520
   23bc8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23bcc:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23bd0:	add	x2, x2, #0x618
   23bd4:	mov	w1, #0x1fd                 	// #509
   23bd8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23bdc:	add	x0, x0, #0x520
   23be0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23be4:	mov	x4, x0
   23be8:	b	23b18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3864>
   23bec:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   23bf0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23bf4:	ldr	x1, [x1, #4000]
   23bf8:	str	x0, [x1]
   23bfc:	b	23b2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3878>
   23c00:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23c04:	add	x0, x0, #0x638
   23c08:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   23c0c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23c10:	stp	x19, x20, [sp, #-48]!
   23c14:	stp	x21, x22, [sp, #16]
   23c18:	stp	x23, x30, [sp, #32]
   23c1c:	mov	x19, x0
   23c20:	mov	x21, x1
   23c24:	str	xzr, [x0, #8]
   23c28:	str	xzr, [x0, #16]
   23c2c:	str	xzr, [x0]
   23c30:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23c34:	ldr	x0, [x0, #4000]
   23c38:	ldr	x0, [x0]
   23c3c:	cbz	x0, 23cf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a40>
   23c40:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23c44:	ldr	x0, [x0, #4000]
   23c48:	ldr	x2, [x0]
   23c4c:	sub	x0, x2, #0x1
   23c50:	tst	x0, x2
   23c54:	b.ne	23d08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a54>  // b.any
   23c58:	add	x23, x19, #0x70
   23c5c:	add	x20, x2, #0x7
   23c60:	neg	x2, x2
   23c64:	and	x20, x20, x2
   23c68:	mov	w2, #0x0                   	// #0
   23c6c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23c70:	add	x1, x1, #0x650
   23c74:	mov	x0, x20
   23c78:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   23c7c:	mov	x22, x0
   23c80:	ldr	x2, [x19, #16]
   23c84:	lsl	x2, x2, #3
   23c88:	ldr	x1, [x19]
   23c8c:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23c90:	ldr	x1, [x19, #8]
   23c94:	ldr	x0, [x19]
   23c98:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   23c9c:	str	x22, [x19]
   23ca0:	str	x20, [x19, #8]
   23ca4:	str	xzr, [x19, #24]
   23ca8:	str	x23, [x19, #32]
   23cac:	mov	x0, #0x1f3f                	// #7999
   23cb0:	cmp	x20, x0
   23cb4:	b.ls	23d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a64>  // b.plast
   23cb8:	strb	wzr, [x19, #64]
   23cbc:	strb	wzr, [x19, #96]
   23cc0:	strb	wzr, [x19, #104]
   23cc4:	mov	x0, x23
   23cc8:	bl	18ea0 <__sanitizer_set_report_fd@@Base+0x2af0>
   23ccc:	ldp	x0, x1, [x21]
   23cd0:	stp	x0, x1, [x19, #200]
   23cd4:	ldr	x0, [x21, #16]
   23cd8:	str	x0, [x19, #216]
   23cdc:	str	xzr, [x19, #224]
   23ce0:	str	xzr, [x19, #232]
   23ce4:	ldp	x21, x22, [sp, #16]
   23ce8:	ldp	x23, x30, [sp, #32]
   23cec:	ldp	x19, x20, [sp], #48
   23cf0:	ret
   23cf4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   23cf8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23cfc:	ldr	x1, [x1, #4000]
   23d00:	str	x0, [x1]
   23d04:	b	23c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x398c>
   23d08:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23d0c:	add	x0, x0, #0x638
   23d10:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   23d14:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23d18:	ldr	x3, [x19, #16]
   23d1c:	cmp	x3, #0x3e8
   23d20:	b.hi	23d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ae8>  // b.pmore
   23d24:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23d28:	ldr	x0, [x0, #4000]
   23d2c:	ldr	x0, [x0]
   23d30:	cbz	x0, 23db8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b04>
   23d34:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23d38:	ldr	x0, [x0, #4000]
   23d3c:	ldr	x1, [x0]
   23d40:	sub	x0, x1, #0x1
   23d44:	tst	x0, x1
   23d48:	b.ne	23dcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b18>  // b.any
   23d4c:	add	x20, x1, #0x1, lsl #12
   23d50:	add	x20, x20, #0xf3f
   23d54:	neg	x1, x1
   23d58:	and	x20, x20, x1
   23d5c:	mov	w2, #0x0                   	// #0
   23d60:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23d64:	add	x1, x1, #0x650
   23d68:	mov	x0, x20
   23d6c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   23d70:	mov	x22, x0
   23d74:	ldr	x2, [x19, #16]
   23d78:	lsl	x2, x2, #3
   23d7c:	ldr	x1, [x19]
   23d80:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23d84:	ldr	x1, [x19, #8]
   23d88:	ldr	x0, [x19]
   23d8c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   23d90:	str	x22, [x19]
   23d94:	str	x20, [x19, #8]
   23d98:	b	23cb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a04>
   23d9c:	mov	x4, #0x3e8                 	// #1000
   23da0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23da4:	add	x2, x2, #0x618
   23da8:	mov	w1, #0x1fd                 	// #509
   23dac:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23db0:	add	x0, x0, #0x520
   23db4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   23db8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   23dbc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   23dc0:	ldr	x1, [x1, #4000]
   23dc4:	str	x0, [x1]
   23dc8:	b	23d34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a80>
   23dcc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   23dd0:	add	x0, x0, #0x638
   23dd4:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   23dd8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   23ddc:	str	x1, [x0]
   23de0:	ldr	x0, [x1, #224]
   23de4:	cbz	x0, 23df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b44>
   23de8:	str	x30, [sp, #-16]!
   23dec:	blr	x0
   23df0:	ldr	x30, [sp], #16
   23df4:	ret
   23df8:	ret
   23dfc:	ldr	x0, [x0]
   23e00:	ldr	x0, [x0, #232]
   23e04:	cbz	x0, 23e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b64>
   23e08:	str	x30, [sp, #-16]!
   23e0c:	blr	x0
   23e10:	ldr	x30, [sp], #16
   23e14:	ret
   23e18:	ret
   23e1c:	ret
   23e20:	stp	x19, x20, [sp, #-64]!
   23e24:	str	x30, [sp, #16]
   23e28:	mov	x19, x0
   23e2c:	mov	x20, x1
   23e30:	str	x2, [sp, #40]
   23e34:	str	x2, [sp, #48]
   23e38:	str	xzr, [sp, #56]
   23e3c:	add	x4, sp, #0x28
   23e40:	adrp	x3, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>
   23e44:	add	x3, x3, #0xe1c
   23e48:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d4c>
   23e4c:	add	x2, x2, #0x18c
   23e50:	ldr	x0, [x0, #16]
   23e54:	bl	6700 <__asan_backtrace_pcinfo@plt>
   23e58:	ldr	x0, [sp, #56]
   23e5c:	cbz	x0, 23e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bbc>
   23e60:	mov	w0, #0x1                   	// #1
   23e64:	ldr	x30, [sp, #16]
   23e68:	ldp	x19, x20, [sp], #64
   23e6c:	ret
   23e70:	add	x4, sp, #0x28
   23e74:	adrp	x3, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>
   23e78:	add	x3, x3, #0xe1c
   23e7c:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d4c>
   23e80:	add	x2, x2, #0x4
   23e84:	mov	x1, x20
   23e88:	ldr	x0, [x19, #16]
   23e8c:	bl	6850 <__asan_backtrace_syminfo@plt>
   23e90:	ldr	x0, [sp, #56]
   23e94:	cmp	x0, #0x0
   23e98:	cset	w0, ne  // ne = any
   23e9c:	b	23e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bb0>
   23ea0:	str	x30, [sp, #-16]!
   23ea4:	mov	x4, x2
   23ea8:	adrp	x3, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>
   23eac:	add	x3, x3, #0xe1c
   23eb0:	adrp	x2, 24000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d4c>
   23eb4:	add	x2, x2, #0x12c
   23eb8:	ldr	x0, [x0, #16]
   23ebc:	bl	6850 <__asan_backtrace_syminfo@plt>
   23ec0:	mov	w0, #0x1                   	// #1
   23ec4:	ldr	x30, [sp], #16
   23ec8:	ret
   23ecc:	stp	x19, x30, [sp, #-48]!
   23ed0:	str	xzr, [sp, #24]
   23ed4:	str	xzr, [sp, #32]
   23ed8:	str	xzr, [sp, #40]
   23edc:	add	x3, sp, #0x18
   23ee0:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>
   23ee4:	add	x2, x2, #0xf50
   23ee8:	mov	w1, #0x3                   	// #3
   23eec:	bl	6d00 <__asan_cplus_demangle_v3_callback@plt>
   23ef0:	cbz	w0, 23f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c80>
   23ef4:	ldr	x0, [sp, #32]
   23ef8:	add	x0, x0, #0x40
   23efc:	ldr	x1, [sp, #40]
   23f00:	cmp	x0, x1
   23f04:	b.ls	23f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c64>  // b.plast
   23f08:	ldr	x19, [sp, #24]
   23f0c:	mov	x0, x19
   23f10:	ldp	x19, x30, [sp], #48
   23f14:	ret
   23f18:	ldr	x0, [sp, #24]
   23f1c:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   23f20:	mov	x19, x0
   23f24:	mov	x1, #0x0                   	// #0
   23f28:	ldr	x0, [sp, #24]
   23f2c:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23f30:	b	23f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c58>
   23f34:	ldr	x19, [sp, #24]
   23f38:	cbz	x19, 23f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c58>
   23f3c:	mov	x1, #0x0                   	// #0
   23f40:	mov	x0, x19
   23f44:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23f48:	mov	x19, #0x0                   	// #0
   23f4c:	b	23f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c58>
   23f50:	stp	x19, x20, [sp, #-48]!
   23f54:	stp	x21, x22, [sp, #16]
   23f58:	str	x30, [sp, #32]
   23f5c:	mov	x21, x0
   23f60:	mov	x20, x1
   23f64:	mov	x19, x2
   23f68:	add	x1, x1, #0x1
   23f6c:	ldr	x0, [x2, #8]
   23f70:	add	x1, x1, x0
   23f74:	ldr	x0, [x2, #16]
   23f78:	cmp	x0, x1
   23f7c:	b.cs	23fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d0c>  // b.hs, b.nlast
   23f80:	lsl	x0, x0, #1
   23f84:	cmp	x0, x1
   23f88:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   23f8c:	str	x0, [x2, #16]
   23f90:	mov	x2, #0x0                   	// #0
   23f94:	mov	x1, #0x0                   	// #0
   23f98:	bl	10800 <__sancov_default_options@@Base+0x47c>
   23f9c:	mov	x22, x0
   23fa0:	ldr	x1, [x19]
   23fa4:	cbz	x1, 23fbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d08>
   23fa8:	ldr	x2, [x19, #8]
   23fac:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23fb0:	mov	x1, #0x0                   	// #0
   23fb4:	ldr	x0, [x19]
   23fb8:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   23fbc:	str	x22, [x19]
   23fc0:	ldr	x3, [x19]
   23fc4:	ldr	x0, [x19, #8]
   23fc8:	mov	x2, x20
   23fcc:	mov	x1, x21
   23fd0:	add	x0, x3, x0
   23fd4:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   23fd8:	ldr	x0, [x19]
   23fdc:	ldr	x1, [x19, #8]
   23fe0:	add	x0, x0, x20
   23fe4:	strb	wzr, [x0, x1]
   23fe8:	ldr	x1, [x19, #8]
   23fec:	add	x20, x1, x20
   23ff0:	str	x20, [x19, #8]
   23ff4:	ldp	x21, x22, [sp, #16]
   23ff8:	ldr	x30, [sp, #32]
   23ffc:	ldp	x19, x20, [sp], #48
   24000:	ret
   24004:	cbz	x2, 24114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e60>
   24008:	stp	x19, x20, [sp, #-48]!
   2400c:	stp	x21, x22, [sp, #16]
   24010:	str	x30, [sp, #32]
   24014:	mov	x19, x0
   24018:	mov	x21, x1
   2401c:	mov	x20, x2
   24020:	ldr	x0, [x0, #8]
   24024:	cbz	x0, 2407c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dc8>
   24028:	ldr	x0, [x19, #16]
   2402c:	cbnz	x0, 2409c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3de8>
   24030:	ldr	x0, [x19]
   24034:	ldr	x3, [x0, #8]
   24038:	cmp	x21, x3
   2403c:	b.ne	240d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e1c>  // b.any
   24040:	ldr	x21, [x19, #8]
   24044:	ldr	x4, [x21, #8]
   24048:	cmp	x3, x4
   2404c:	b.ne	240f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e3c>  // b.any
   24050:	mov	x0, x20
   24054:	bl	23ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   24058:	cbz	x0, 24108 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e54>
   2405c:	str	x0, [x21, #40]
   24060:	ldr	x0, [x19, #16]
   24064:	add	x0, x0, #0x1
   24068:	str	x0, [x19, #16]
   2406c:	ldp	x21, x22, [sp, #16]
   24070:	ldr	x30, [sp, #32]
   24074:	ldp	x19, x20, [sp], #48
   24078:	ret
   2407c:	mov	x4, #0x0                   	// #0
   24080:	mov	x3, #0x0                   	// #0
   24084:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24088:	add	x2, x2, #0x668
   2408c:	mov	w1, #0x5c                  	// #92
   24090:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24094:	add	x0, x0, #0x678
   24098:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2409c:	mov	x0, x1
   240a0:	bl	238ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   240a4:	mov	x22, x0
   240a8:	ldr	x0, [x19]
   240ac:	ldr	w3, [x0, #32]
   240b0:	ldr	x2, [x0, #24]
   240b4:	ldr	x1, [x0, #16]
   240b8:	add	x0, x22, #0x8
   240bc:	bl	23864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   240c0:	ldr	x0, [x19, #8]
   240c4:	str	x22, [x0]
   240c8:	str	x22, [x19, #8]
   240cc:	b	24030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d7c>
   240d0:	mov	x4, x3
   240d4:	mov	x3, x21
   240d8:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   240dc:	add	x2, x2, #0x6c8
   240e0:	mov	w1, #0x65                  	// #101
   240e4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   240e8:	add	x0, x0, #0x678
   240ec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   240f0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   240f4:	add	x2, x2, #0x6f0
   240f8:	mov	w1, #0x66                  	// #102
   240fc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24100:	add	x0, x0, #0x678
   24104:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24108:	mov	x0, x20
   2410c:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   24110:	b	2405c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3da8>
   24114:	ret
   24118:	str	x30, [sp, #-16]!
   2411c:	mov	x0, x1
   24120:	bl	23ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   24124:	ldr	x30, [sp], #16
   24128:	ret
   2412c:	cmp	x2, #0x0
   24130:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   24134:	b.ne	2413c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e88>  // b.any
   24138:	ret
   2413c:	stp	x19, x20, [sp, #-48]!
   24140:	stp	x21, x22, [sp, #16]
   24144:	str	x30, [sp, #32]
   24148:	mov	x21, x0
   2414c:	mov	x19, x2
   24150:	mov	x20, x3
   24154:	mov	x22, x4
   24158:	mov	x0, x2
   2415c:	bl	23ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   24160:	cbz	x0, 24180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ecc>
   24164:	str	x0, [x21, #40]
   24168:	str	x20, [x21, #48]
   2416c:	str	x22, [x21, #56]
   24170:	ldp	x21, x22, [sp, #16]
   24174:	ldr	x30, [sp, #32]
   24178:	ldp	x19, x20, [sp], #48
   2417c:	ret
   24180:	mov	x0, x19
   24184:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   24188:	b	24164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3eb0>
   2418c:	cbz	x4, 242c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4010>
   24190:	stp	x19, x20, [sp, #-64]!
   24194:	stp	x21, x22, [sp, #16]
   24198:	stp	x23, x24, [sp, #32]
   2419c:	str	x30, [sp, #48]
   241a0:	mov	x19, x0
   241a4:	mov	x21, x1
   241a8:	mov	x22, x2
   241ac:	mov	w23, w3
   241b0:	mov	x20, x4
   241b4:	ldr	x0, [x0, #8]
   241b8:	cbz	x0, 2422c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f78>
   241bc:	ldr	x0, [x19, #16]
   241c0:	cbnz	x0, 2424c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   241c4:	ldr	x0, [x19]
   241c8:	ldr	x3, [x0, #8]
   241cc:	cmp	x21, x3
   241d0:	b.ne	24280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fcc>  // b.any
   241d4:	ldr	x21, [x19, #8]
   241d8:	ldr	x4, [x21, #8]
   241dc:	cmp	x3, x4
   241e0:	b.ne	242a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fec>  // b.any
   241e4:	mov	x0, x20
   241e8:	bl	23ecc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   241ec:	cbz	x0, 242b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4004>
   241f0:	str	x0, [x21, #40]
   241f4:	cbz	x22, 24204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f50>
   241f8:	mov	x0, x22
   241fc:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   24200:	str	x0, [x21, #56]
   24204:	str	w23, [x21, #64]
   24208:	ldr	x0, [x19, #16]
   2420c:	add	x0, x0, #0x1
   24210:	str	x0, [x19, #16]
   24214:	mov	w0, #0x0                   	// #0
   24218:	ldp	x21, x22, [sp, #16]
   2421c:	ldp	x23, x24, [sp, #32]
   24220:	ldr	x30, [sp, #48]
   24224:	ldp	x19, x20, [sp], #64
   24228:	ret
   2422c:	mov	x4, #0x0                   	// #0
   24230:	mov	x3, #0x0                   	// #0
   24234:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24238:	add	x2, x2, #0x668
   2423c:	mov	w1, #0x5c                  	// #92
   24240:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24244:	add	x0, x0, #0x678
   24248:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2424c:	mov	x0, x1
   24250:	bl	238ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   24254:	mov	x24, x0
   24258:	ldr	x0, [x19]
   2425c:	ldr	w3, [x0, #32]
   24260:	ldr	x2, [x0, #24]
   24264:	ldr	x1, [x0, #16]
   24268:	add	x0, x24, #0x8
   2426c:	bl	23864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   24270:	ldr	x0, [x19, #8]
   24274:	str	x24, [x0]
   24278:	str	x24, [x19, #8]
   2427c:	b	241c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f10>
   24280:	mov	x4, x3
   24284:	mov	x3, x21
   24288:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2428c:	add	x2, x2, #0x6c8
   24290:	mov	w1, #0x65                  	// #101
   24294:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24298:	add	x0, x0, #0x678
   2429c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   242a0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   242a4:	add	x2, x2, #0x6f0
   242a8:	mov	w1, #0x66                  	// #102
   242ac:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   242b0:	add	x0, x0, #0x678
   242b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   242b8:	mov	x0, x20
   242bc:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   242c0:	b	241f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f3c>
   242c4:	mov	w0, #0x0                   	// #0
   242c8:	ret
   242cc:	stp	x19, x20, [sp, #-32]!
   242d0:	str	x30, [sp, #16]
   242d4:	mov	x20, x0
   242d8:	mov	x3, #0x0                   	// #0
   242dc:	adrp	x2, 23000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d4c>
   242e0:	add	x2, x2, #0xe1c
   242e4:	mov	w1, #0x0                   	// #0
   242e8:	adrp	x0, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   242ec:	add	x0, x0, #0x910
   242f0:	bl	69c0 <__asan_backtrace_create_state@plt>
   242f4:	mov	x19, x0
   242f8:	cbz	x0, 2431c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   242fc:	mov	x1, #0x18                  	// #24
   24300:	mov	x0, x20
   24304:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   24308:	str	xzr, [x0, #8]
   2430c:	adrp	x1, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   24310:	add	x1, x1, #0xce8
   24314:	str	x1, [x0]
   24318:	str	x19, [x0, #16]
   2431c:	ldr	x30, [sp, #16]
   24320:	ldp	x19, x20, [sp], #32
   24324:	ret
   24328:	ret
   2432c:	stp	x19, x20, [sp, #-48]!
   24330:	stp	x21, x22, [sp, #16]
   24334:	str	x30, [sp, #32]
   24338:	mov	x21, x0
   2433c:	ldr	x0, [x0, #16]
   24340:	cbz	x0, 243c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4110>
   24344:	mov	x22, x1
   24348:	mov	x19, #0x0                   	// #0
   2434c:	mov	x20, #0x0                   	// #0
   24350:	ldr	x0, [x21]
   24354:	mov	x1, x22
   24358:	add	x0, x0, x19
   2435c:	bl	129cc <__sancov_default_options@@Base+0x2648>
   24360:	and	w0, w0, #0xff
   24364:	cbnz	w0, 24390 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40dc>
   24368:	add	x20, x20, #0x1
   2436c:	add	x19, x19, #0x48
   24370:	ldr	x0, [x21, #16]
   24374:	cmp	x20, x0
   24378:	b.cc	24350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x409c>  // b.lo, b.ul, b.last
   2437c:	mov	x0, #0x0                   	// #0
   24380:	ldp	x21, x22, [sp, #16]
   24384:	ldr	x30, [sp, #32]
   24388:	ldp	x19, x20, [sp], #48
   2438c:	ret
   24390:	ldr	x4, [x21, #16]
   24394:	cmp	x4, x20
   24398:	b.ls	243a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40f4>  // b.plast
   2439c:	ldr	x0, [x21]
   243a0:	add	x0, x0, x19
   243a4:	b	24380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40cc>
   243a8:	mov	x3, x20
   243ac:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   243b0:	add	x2, x2, #0x7c8
   243b4:	mov	w1, #0x2f9                 	// #761
   243b8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   243bc:	add	x0, x0, #0x520
   243c0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   243c4:	mov	x0, #0x0                   	// #0
   243c8:	b	24380 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40cc>
   243cc:	stp	x19, x20, [sp, #-80]!
   243d0:	str	x30, [sp, #56]
   243d4:	mov	w20, #0x1                   	// #1
   243d8:	cbz	x2, 244a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41ec>
   243dc:	stp	x21, x22, [sp, #16]
   243e0:	stp	x23, x24, [sp, #32]
   243e4:	str	x25, [sp, #48]
   243e8:	mov	x21, x0
   243ec:	mov	x22, x1
   243f0:	mov	x23, x2
   243f4:	mov	x19, #0x0                   	// #0
   243f8:	add	x25, sp, #0x48
   243fc:	sub	x24, x2, #0x1
   24400:	str	xzr, [sp, #72]
   24404:	mov	x4, #0x0                   	// #0
   24408:	mov	x3, x25
   2440c:	sub	x2, x24, x19
   24410:	add	x1, x22, x19
   24414:	ldr	w0, [x21, #16]
   24418:	bl	1b5d0 <__sanitizer_set_report_fd@@Base+0x5220>
   2441c:	ands	w20, w0, #0xff
   24420:	b.eq	24480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41cc>  // b.none
   24424:	ldr	x0, [sp, #72]
   24428:	cbz	x0, 24480 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41cc>
   2442c:	add	x19, x19, x0
   24430:	ldr	x0, [x21]
   24434:	ldr	x3, [x0]
   24438:	mov	x2, x19
   2443c:	mov	x1, x22
   24440:	mov	x0, x21
   24444:	blr	x3
   24448:	and	w3, w0, #0xff
   2444c:	cbnz	w3, 2446c <__sanitizer_get_module_and_offset_for_pc@@Base+0x41b8>
   24450:	add	x0, x19, #0x1
   24454:	cmp	x0, x23
   24458:	b.ne	24400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x414c>  // b.any
   2445c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24460:	add	x0, x0, #0x818
   24464:	bl	1d908 <OnPrint@@Base+0x3d8>
   24468:	mov	x19, #0x0                   	// #0
   2446c:	strb	wzr, [x22, x19]
   24470:	ldp	x21, x22, [sp, #16]
   24474:	ldp	x23, x24, [sp, #32]
   24478:	ldr	x25, [sp, #48]
   2447c:	b	244a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41ec>
   24480:	ldr	w1, [x21, #16]
   24484:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24488:	add	x0, x0, #0x7e8
   2448c:	bl	1d908 <OnPrint@@Base+0x3d8>
   24490:	mov	w20, #0x0                   	// #0
   24494:	ldp	x21, x22, [sp, #16]
   24498:	ldp	x23, x24, [sp, #32]
   2449c:	ldr	x25, [sp, #48]
   244a0:	mov	w0, w20
   244a4:	ldr	x30, [sp, #56]
   244a8:	ldp	x19, x20, [sp], #80
   244ac:	ret
   244b0:	str	x30, [sp, #-16]!
   244b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   244b8:	ldr	x0, [x0, #3832]
   244bc:	mov	w2, #0x1                   	// #1
   244c0:	ldxrb	w1, [x0]
   244c4:	stxrb	w3, w2, [x0]
   244c8:	cbnz	w3, 244c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420c>
   244cc:	dmb	ish
   244d0:	and	w0, w1, #0xff
   244d4:	cbnz	w0, 24500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x424c>
   244d8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   244dc:	ldr	x0, [x0, #3744]
   244e0:	ldr	x0, [x0]
   244e4:	cbz	x0, 24510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x425c>
   244e8:	dmb	ish
   244ec:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   244f0:	ldr	x1, [x1, #3832]
   244f4:	strb	wzr, [x1]
   244f8:	ldr	x30, [sp], #16
   244fc:	ret
   24500:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24504:	ldr	x0, [x0, #3832]
   24508:	bl	cbdc <__sanitizer_get_allocated_size@@Base+0x1304>
   2450c:	b	244d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4224>
   24510:	bl	257b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54fc>
   24514:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   24518:	ldr	x1, [x1, #3744]
   2451c:	str	x0, [x1]
   24520:	cbnz	x0, 244e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4234>
   24524:	mov	x4, #0x0                   	// #0
   24528:	mov	x3, #0x0                   	// #0
   2452c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24530:	add	x2, x2, #0x840
   24534:	mov	w1, #0x17                  	// #23
   24538:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2453c:	add	x0, x0, #0x858
   24540:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24544:	stp	x19, x20, [sp, #-32]!
   24548:	stp	x21, x30, [sp, #16]
   2454c:	mov	x20, x0
   24550:	mov	x21, x2
   24554:	bl	17c80 <__sanitizer_set_report_fd@@Base+0x18d0>
   24558:	mov	x19, x0
   2455c:	mov	x2, #0x0                   	// #0
   24560:	mov	x1, #0x0                   	// #0
   24564:	add	x0, x0, #0x1
   24568:	bl	10800 <__sancov_default_options@@Base+0x47c>
   2456c:	str	x0, [x21]
   24570:	mov	x2, x19
   24574:	mov	x1, x20
   24578:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2457c:	ldr	x0, [x21]
   24580:	strb	wzr, [x0, x19]
   24584:	add	x0, x20, x19
   24588:	ldrb	w1, [x20, x19]
   2458c:	cmp	w1, #0x0
   24590:	cinc	x0, x0, ne  // ne = any
   24594:	ldp	x21, x30, [sp, #16]
   24598:	ldp	x19, x20, [sp], #32
   2459c:	ret
   245a0:	stp	x19, x20, [sp, #-48]!
   245a4:	str	x30, [sp, #16]
   245a8:	mov	x20, x2
   245ac:	add	x2, sp, #0x28
   245b0:	bl	24544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   245b4:	mov	x19, x0
   245b8:	ldr	x0, [sp, #40]
   245bc:	cbz	x0, 245c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4314>
   245c0:	bl	18118 <__sanitizer_set_report_fd@@Base+0x1d68>
   245c4:	str	w0, [x20]
   245c8:	mov	x1, #0x0                   	// #0
   245cc:	ldr	x0, [sp, #40]
   245d0:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   245d4:	mov	x0, x19
   245d8:	ldr	x30, [sp, #16]
   245dc:	ldp	x19, x20, [sp], #48
   245e0:	ret
   245e4:	stp	x19, x20, [sp, #-48]!
   245e8:	str	x30, [sp, #16]
   245ec:	mov	x20, x2
   245f0:	add	x2, sp, #0x28
   245f4:	bl	24544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   245f8:	mov	x19, x0
   245fc:	ldr	x0, [sp, #40]
   24600:	cbz	x0, 2460c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4358>
   24604:	bl	18118 <__sanitizer_set_report_fd@@Base+0x1d68>
   24608:	str	x0, [x20]
   2460c:	mov	x1, #0x0                   	// #0
   24610:	ldr	x0, [sp, #40]
   24614:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   24618:	mov	x0, x19
   2461c:	ldr	x30, [sp, #16]
   24620:	ldp	x19, x20, [sp], #48
   24624:	ret
   24628:	stp	x19, x20, [sp, #-48]!
   2462c:	stp	x21, x22, [sp, #16]
   24630:	str	x30, [sp, #32]
   24634:	mov	x20, x0
   24638:	mov	x22, x1
   2463c:	mov	x21, x2
   24640:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   24644:	cbz	x0, 24694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e0>
   24648:	sub	x19, x0, x20
   2464c:	mov	x2, #0x0                   	// #0
   24650:	mov	x1, #0x0                   	// #0
   24654:	add	x0, x19, #0x1
   24658:	bl	10800 <__sancov_default_options@@Base+0x47c>
   2465c:	str	x0, [x21]
   24660:	mov	x2, x19
   24664:	mov	x1, x20
   24668:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2466c:	ldr	x0, [x21]
   24670:	strb	wzr, [x0, x19]
   24674:	add	x21, x20, x19
   24678:	ldrb	w0, [x20, x19]
   2467c:	cbnz	w0, 246a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43f0>
   24680:	mov	x0, x21
   24684:	ldp	x21, x22, [sp, #16]
   24688:	ldr	x30, [sp, #32]
   2468c:	ldp	x19, x20, [sp], #48
   24690:	ret
   24694:	mov	x0, x20
   24698:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   2469c:	mov	x19, x0
   246a0:	b	2464c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4398>
   246a4:	mov	x0, x22
   246a8:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   246ac:	add	x21, x21, x0
   246b0:	b	24680 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43cc>
   246b4:	stp	x19, x20, [sp, #-64]!
   246b8:	stp	x21, x22, [sp, #16]
   246bc:	str	x30, [sp, #32]
   246c0:	mov	x21, x0
   246c4:	add	x22, x0, #0x70
   246c8:	mov	x0, x22
   246cc:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   246d0:	ldr	x19, [x21, #208]
   246d4:	cbz	x19, 24708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4454>
   246d8:	add	x20, sp, #0x38
   246dc:	mov	x1, x21
   246e0:	mov	x0, x20
   246e4:	bl	23ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   246e8:	ldr	x1, [x19]
   246ec:	ldr	x1, [x1, #16]
   246f0:	mov	x0, x19
   246f4:	blr	x1
   246f8:	mov	x0, x20
   246fc:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   24700:	ldr	x19, [x19, #8]
   24704:	cbnz	x19, 246dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4428>
   24708:	mov	x0, x22
   2470c:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   24710:	ldp	x21, x22, [sp, #16]
   24714:	ldr	x30, [sp, #32]
   24718:	ldp	x19, x20, [sp], #64
   2471c:	ret
   24720:	stp	x19, x20, [sp, #-80]!
   24724:	stp	x21, x22, [sp, #16]
   24728:	stp	x23, x24, [sp, #32]
   2472c:	str	x30, [sp, #48]
   24730:	mov	x22, x0
   24734:	mov	x23, x1
   24738:	add	x24, x0, #0x70
   2473c:	mov	x0, x24
   24740:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   24744:	ldr	x19, [x22, #208]
   24748:	cbz	x19, 24788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d4>
   2474c:	add	x21, sp, #0x48
   24750:	mov	x1, x22
   24754:	mov	x0, x21
   24758:	bl	23ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   2475c:	ldr	x2, [x19]
   24760:	ldr	x2, [x2, #24]
   24764:	mov	x1, x23
   24768:	mov	x0, x19
   2476c:	blr	x2
   24770:	mov	x20, x0
   24774:	cbnz	x0, 247b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4504>
   24778:	mov	x0, x21
   2477c:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   24780:	ldr	x19, [x19, #8]
   24784:	cbnz	x19, 24750 <__sanitizer_get_module_and_offset_for_pc@@Base+0x449c>
   24788:	mov	x1, x23
   2478c:	mov	x0, x22
   24790:	bl	2579c <__sanitizer_get_module_and_offset_for_pc@@Base+0x54e8>
   24794:	mov	x20, x0
   24798:	mov	x0, x24
   2479c:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   247a0:	mov	x0, x20
   247a4:	ldp	x21, x22, [sp, #16]
   247a8:	ldp	x23, x24, [sp, #32]
   247ac:	ldr	x30, [sp, #48]
   247b0:	ldp	x19, x20, [sp], #80
   247b4:	ret
   247b8:	add	x0, sp, #0x48
   247bc:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   247c0:	b	24798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44e4>
   247c4:	stp	x19, x20, [sp, #-32]!
   247c8:	str	x30, [sp, #16]
   247cc:	mov	x19, x0
   247d0:	add	x20, x0, #0x28
   247d4:	mov	x0, x20
   247d8:	bl	1ab3c <__sanitizer_set_report_fd@@Base+0x478c>
   247dc:	add	x0, x19, #0x48
   247e0:	bl	1ac64 <__sanitizer_set_report_fd@@Base+0x48b4>
   247e4:	ldr	x0, [x19, #56]
   247e8:	cbz	x0, 24800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x454c>
   247ec:	mov	w0, #0x1                   	// #1
   247f0:	strb	w0, [x19, #104]
   247f4:	ldr	x30, [sp, #16]
   247f8:	ldp	x19, x20, [sp], #32
   247fc:	ret
   24800:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24804:	add	x0, x0, #0x8a8
   24808:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   2480c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   24810:	stp	x19, x20, [sp, #-32]!
   24814:	str	x30, [sp, #24]
   24818:	mov	x19, x0
   2481c:	mov	x20, x1
   24820:	ldrb	w0, [x0, #104]
   24824:	cbz	w0, 2484c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4598>
   24828:	str	x21, [sp, #16]
   2482c:	add	x21, x19, #0x28
   24830:	mov	x0, x21
   24834:	bl	2432c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   24838:	cbz	x0, 24880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45cc>
   2483c:	ldr	x21, [sp, #16]
   24840:	ldr	x30, [sp, #24]
   24844:	ldp	x19, x20, [sp], #32
   24848:	ret
   2484c:	mov	x0, x19
   24850:	bl	247c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4510>
   24854:	mov	x1, x20
   24858:	add	x0, x19, #0x28
   2485c:	bl	2432c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   24860:	cbnz	x0, 24840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   24864:	ldr	x1, [x19, #88]
   24868:	mov	x0, #0x0                   	// #0
   2486c:	cbz	x1, 24840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   24870:	mov	x1, x20
   24874:	add	x0, x19, #0x48
   24878:	bl	2432c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   2487c:	b	24840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   24880:	mov	x0, x19
   24884:	bl	247c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4510>
   24888:	mov	x1, x20
   2488c:	mov	x0, x21
   24890:	bl	2432c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4078>
   24894:	cbz	x0, 248a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45ec>
   24898:	ldr	x21, [sp, #16]
   2489c:	b	24840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x458c>
   248a0:	ldr	x21, [sp, #16]
   248a4:	b	24864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45b0>
   248a8:	stp	x19, x20, [sp, #-48]!
   248ac:	stp	x21, x22, [sp, #16]
   248b0:	str	x30, [sp, #32]
   248b4:	mov	x22, x1
   248b8:	mov	x21, x2
   248bc:	mov	x20, x3
   248c0:	mov	x19, x4
   248c4:	bl	24810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x455c>
   248c8:	cbz	x0, 248fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4648>
   248cc:	ldr	x1, [x0]
   248d0:	str	x1, [x21]
   248d4:	ldr	x1, [x0, #8]
   248d8:	sub	x1, x22, x1
   248dc:	str	x1, [x20]
   248e0:	ldr	w0, [x0, #24]
   248e4:	str	w0, [x19]
   248e8:	mov	w0, #0x1                   	// #1
   248ec:	ldp	x21, x22, [sp, #16]
   248f0:	ldr	x30, [sp, #32]
   248f4:	ldp	x19, x20, [sp], #48
   248f8:	ret
   248fc:	mov	w0, #0x0                   	// #0
   24900:	b	248ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4638>
   24904:	stp	x19, x20, [sp, #-64]!
   24908:	stp	x21, x22, [sp, #16]
   2490c:	stp	x23, x30, [sp, #32]
   24910:	mov	x19, x0
   24914:	mov	x21, x1
   24918:	mov	x20, x2
   2491c:	mov	x22, x3
   24920:	add	x23, x0, #0x70
   24924:	mov	x0, x23
   24928:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   2492c:	str	xzr, [sp, #56]
   24930:	add	x4, sp, #0x34
   24934:	mov	x3, x22
   24938:	add	x2, sp, #0x38
   2493c:	mov	x1, x21
   24940:	mov	x0, x19
   24944:	bl	248a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f4>
   24948:	mov	w21, w0
   2494c:	tst	w0, #0xff
   24950:	b.eq	24968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b4>  // b.none
   24954:	cbz	x20, 24968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b4>
   24958:	ldr	x1, [sp, #56]
   2495c:	mov	x0, x19
   24960:	bl	239b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3704>
   24964:	str	x0, [x20]
   24968:	mov	x0, x23
   2496c:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   24970:	mov	w0, w21
   24974:	ldp	x21, x22, [sp, #16]
   24978:	ldp	x23, x30, [sp, #32]
   2497c:	ldp	x19, x20, [sp], #64
   24980:	ret
   24984:	stp	x19, x20, [sp, #-96]!
   24988:	stp	x21, x22, [sp, #16]
   2498c:	stp	x23, x24, [sp, #32]
   24990:	str	x30, [sp, #48]
   24994:	mov	x20, x0
   24998:	mov	x21, x1
   2499c:	add	x24, x0, #0x70
   249a0:	mov	x0, x24
   249a4:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   249a8:	mov	x0, x21
   249ac:	bl	238ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   249b0:	mov	x23, x0
   249b4:	add	x4, sp, #0x4c
   249b8:	add	x3, sp, #0x50
   249bc:	add	x2, sp, #0x58
   249c0:	mov	x1, x21
   249c4:	mov	x0, x20
   249c8:	bl	248a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f4>
   249cc:	and	w0, w0, #0xff
   249d0:	cbnz	w0, 249f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4740>
   249d4:	mov	x0, x24
   249d8:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   249dc:	mov	x0, x23
   249e0:	ldp	x21, x22, [sp, #16]
   249e4:	ldp	x23, x24, [sp, #32]
   249e8:	ldr	x30, [sp, #48]
   249ec:	ldp	x19, x20, [sp], #96
   249f0:	ret
   249f4:	ldr	w3, [sp, #76]
   249f8:	ldr	x2, [sp, #80]
   249fc:	ldr	x1, [sp, #88]
   24a00:	add	x0, x23, #0x8
   24a04:	bl	23864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   24a08:	ldr	x19, [x20, #208]
   24a0c:	cbz	x19, 249d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>
   24a10:	add	x22, sp, #0x40
   24a14:	mov	x1, x20
   24a18:	mov	x0, x22
   24a1c:	bl	23ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   24a20:	ldr	x0, [x19]
   24a24:	ldr	x3, [x0]
   24a28:	mov	x2, x23
   24a2c:	mov	x1, x21
   24a30:	mov	x0, x19
   24a34:	blr	x3
   24a38:	and	w2, w0, #0xff
   24a3c:	cbnz	w2, 24a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47a0>
   24a40:	mov	x0, x22
   24a44:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   24a48:	ldr	x19, [x19, #8]
   24a4c:	cbnz	x19, 24a14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4760>
   24a50:	b	249d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>
   24a54:	add	x0, sp, #0x40
   24a58:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   24a5c:	b	249d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4720>
   24a60:	stp	x19, x20, [sp, #-112]!
   24a64:	stp	x21, x22, [sp, #16]
   24a68:	stp	x23, x24, [sp, #32]
   24a6c:	stp	x25, x26, [sp, #48]
   24a70:	str	x30, [sp, #64]
   24a74:	mov	x21, x0
   24a78:	mov	x24, x1
   24a7c:	mov	x22, x2
   24a80:	add	x26, x0, #0x70
   24a84:	mov	x0, x26
   24a88:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   24a8c:	add	x4, sp, #0x5c
   24a90:	add	x3, sp, #0x60
   24a94:	add	x2, sp, #0x68
   24a98:	mov	x1, x24
   24a9c:	mov	x0, x21
   24aa0:	bl	248a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45f4>
   24aa4:	ands	w25, w0, #0xff
   24aa8:	b.ne	24ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x481c>  // b.any
   24aac:	mov	x0, x26
   24ab0:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   24ab4:	mov	w0, w25
   24ab8:	ldp	x21, x22, [sp, #16]
   24abc:	ldp	x23, x24, [sp, #32]
   24ac0:	ldp	x25, x26, [sp, #48]
   24ac4:	ldr	x30, [sp, #64]
   24ac8:	ldp	x19, x20, [sp], #112
   24acc:	ret
   24ad0:	mov	x0, x22
   24ad4:	bl	2392c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3678>
   24ad8:	ldr	x0, [sp, #104]
   24adc:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   24ae0:	str	x0, [x22]
   24ae4:	ldr	x0, [sp, #96]
   24ae8:	str	x0, [x22, #8]
   24aec:	ldr	w0, [sp, #92]
   24af0:	str	w0, [x22, #16]
   24af4:	ldr	x19, [x21, #208]
   24af8:	cbz	x19, 24aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f8>
   24afc:	add	x23, sp, #0x50
   24b00:	mov	x1, x21
   24b04:	mov	x0, x23
   24b08:	bl	23ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b28>
   24b0c:	ldr	x0, [x19]
   24b10:	ldr	x3, [x0, #8]
   24b14:	mov	x2, x22
   24b18:	mov	x1, x24
   24b1c:	mov	x0, x19
   24b20:	blr	x3
   24b24:	ands	w20, w0, #0xff
   24b28:	b.ne	24b40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488c>  // b.any
   24b2c:	mov	x0, x23
   24b30:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   24b34:	ldr	x19, [x19, #8]
   24b38:	cbnz	x19, 24b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x484c>
   24b3c:	b	24aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f8>
   24b40:	add	x0, sp, #0x50
   24b44:	bl	23dfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b48>
   24b48:	mov	w25, w20
   24b4c:	b	24aac <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f8>
   24b50:	stp	x19, x20, [sp, #-128]!
   24b54:	stp	x21, x22, [sp, #16]
   24b58:	stp	x23, x24, [sp, #32]
   24b5c:	stp	x25, x26, [sp, #48]
   24b60:	stp	x27, x28, [sp, #64]
   24b64:	str	x30, [sp, #80]
   24b68:	mov	x21, x0
   24b6c:	mov	x22, x1
   24b70:	str	x1, [sp, #104]
   24b74:	mov	w19, #0x1                   	// #1
   24b78:	add	x26, sp, #0x70
   24b7c:	adrp	x23, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24b80:	add	x23, x23, #0x88
   24b84:	add	x27, sp, #0x78
   24b88:	adrp	x28, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24b8c:	add	x28, x28, #0x9e0
   24b90:	b	24ce0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a2c>
   24b94:	mov	x4, #0x0                   	// #0
   24b98:	mov	x3, #0x0                   	// #0
   24b9c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24ba0:	add	x2, x2, #0x8c0
   24ba4:	mov	w1, #0x12c                 	// #300
   24ba8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24bac:	add	x0, x0, #0x858
   24bb0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24bb4:	mov	x1, #0x0                   	// #0
   24bb8:	mov	x0, x2
   24bbc:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   24bc0:	ldp	x21, x22, [sp, #16]
   24bc4:	ldp	x23, x24, [sp, #32]
   24bc8:	ldp	x25, x26, [sp, #48]
   24bcc:	ldp	x27, x28, [sp, #64]
   24bd0:	ldr	x30, [sp, #80]
   24bd4:	ldp	x19, x20, [sp], #128
   24bd8:	ret
   24bdc:	ldr	x0, [x22, #8]
   24be0:	bl	238ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f8>
   24be4:	mov	x20, x0
   24be8:	ldr	w3, [x22, #32]
   24bec:	ldr	x2, [x22, #24]
   24bf0:	ldr	x1, [x22, #16]
   24bf4:	add	x0, x0, #0x8
   24bf8:	bl	23864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35b0>
   24bfc:	ldr	x0, [sp, #104]
   24c00:	str	x20, [x0]
   24c04:	str	x20, [sp, #104]
   24c08:	b	24d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a5c>
   24c0c:	mov	x4, #0x0                   	// #0
   24c10:	mov	x3, #0x0                   	// #0
   24c14:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24c18:	add	x2, x2, #0x8e0
   24c1c:	mov	w1, #0x10d                 	// #269
   24c20:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24c24:	add	x0, x0, #0x858
   24c28:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24c2c:	ldrb	w0, [x19]
   24c30:	cmp	w0, #0x3a
   24c34:	b.ne	24c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e4>  // b.any
   24c38:	ldrb	w0, [x19, #1]
   24c3c:	sub	w0, w0, #0x30
   24c40:	cmp	w0, #0x9
   24c44:	b.hi	24c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e4>  // b.pmore
   24c48:	ldr	w0, [x20, #64]
   24c4c:	str	w0, [x20, #68]
   24c50:	add	x0, x19, #0x1
   24c54:	bl	18118 <__sanitizer_set_report_fd@@Base+0x1d68>
   24c58:	str	w0, [x20, #64]
   24c5c:	strb	wzr, [x19], #-1
   24c60:	subs	w25, w25, #0x1
   24c64:	b.eq	24c98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e4>  // b.none
   24c68:	ldr	x1, [sp, #120]
   24c6c:	cmp	x19, x1
   24c70:	b.ls	24c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4978>  // b.plast
   24c74:	ldrb	w0, [x19]
   24c78:	sub	w0, w0, #0x30
   24c7c:	cmp	w0, #0x9
   24c80:	b.hi	24c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4978>  // b.pmore
   24c84:	sub	x19, x19, #0x1
   24c88:	cmp	x1, x19
   24c8c:	b.ne	24c74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49c0>  // b.any
   24c90:	mov	x19, x1
   24c94:	b	24c2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4978>
   24c98:	add	x2, x20, #0x38
   24c9c:	mov	x1, x28
   24ca0:	ldr	x0, [sp, #120]
   24ca4:	bl	24544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   24ca8:	mov	x1, #0x0                   	// #0
   24cac:	ldr	x0, [sp, #120]
   24cb0:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   24cb4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24cb8:	add	x1, x1, #0x900
   24cbc:	ldr	x0, [x20, #40]
   24cc0:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   24cc4:	cbz	w0, 24d54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa0>
   24cc8:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24ccc:	add	x1, x1, #0x900
   24cd0:	ldr	x0, [x20, #56]
   24cd4:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   24cd8:	cbz	w0, 24d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab4>
   24cdc:	mov	w19, #0x0                   	// #0
   24ce0:	str	xzr, [sp, #112]
   24ce4:	mov	x2, x26
   24ce8:	mov	x1, x23
   24cec:	mov	x0, x21
   24cf0:	bl	24544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   24cf4:	mov	x21, x0
   24cf8:	ldr	x2, [sp, #112]
   24cfc:	cbz	x2, 24b94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48e0>
   24d00:	ldrb	w0, [x2]
   24d04:	cbz	w0, 24bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4900>
   24d08:	mov	x20, x22
   24d0c:	cbz	w19, 24bdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4928>
   24d10:	ldr	x0, [sp, #112]
   24d14:	str	x0, [x20, #40]
   24d18:	str	xzr, [sp, #120]
   24d1c:	mov	x2, x27
   24d20:	mov	x1, x23
   24d24:	mov	x0, x21
   24d28:	bl	24544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   24d2c:	mov	x21, x0
   24d30:	ldr	x0, [sp, #120]
   24d34:	cbz	x0, 24c0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4958>
   24d38:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   24d3c:	cbz	x0, 24ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49f4>
   24d40:	sub	x0, x0, #0x1
   24d44:	ldr	x19, [sp, #120]
   24d48:	add	x19, x19, x0
   24d4c:	mov	w25, #0x2                   	// #2
   24d50:	b	24c68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49b4>
   24d54:	mov	x1, #0x0                   	// #0
   24d58:	ldr	x0, [x20, #40]
   24d5c:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   24d60:	str	xzr, [x20, #40]
   24d64:	b	24cc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a14>
   24d68:	mov	x1, #0x0                   	// #0
   24d6c:	ldr	x0, [x20, #56]
   24d70:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   24d74:	str	xzr, [x20, #56]
   24d78:	b	24cdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a28>
   24d7c:	stp	x19, x20, [sp, #-32]!
   24d80:	str	x30, [sp, #16]
   24d84:	mov	x19, x1
   24d88:	adrp	x20, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24d8c:	add	x20, x20, #0x88
   24d90:	add	x2, x1, #0x28
   24d94:	mov	x1, x20
   24d98:	bl	24544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4290>
   24d9c:	add	x2, x19, #0x30
   24da0:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   24da4:	add	x1, x1, #0xe78
   24da8:	bl	245e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4330>
   24dac:	add	x2, x19, #0x38
   24db0:	mov	x1, x20
   24db4:	bl	245e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4330>
   24db8:	ldr	x30, [sp, #16]
   24dbc:	ldp	x19, x20, [sp], #32
   24dc0:	ret
   24dc4:	str	x30, [sp, #-16]!
   24dc8:	adrp	x3, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   24dcc:	add	x3, x3, #0xd70
   24dd0:	str	x3, [x0]
   24dd4:	str	x1, [x0, #8]
   24dd8:	mov	w3, #0xffffffff            	// #-1
   24ddc:	str	w3, [x0, #16]
   24de0:	str	w3, [x0, #20]
   24de4:	str	xzr, [x0, #16408]
   24de8:	add	x0, x0, #0x4, lsl #12
   24dec:	strb	wzr, [x0, #32]
   24df0:	strb	wzr, [x0, #33]
   24df4:	strb	w2, [x0, #34]
   24df8:	cbz	x1, 24e0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b58>
   24dfc:	ldrb	w0, [x1]
   24e00:	cbz	w0, 24e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b78>
   24e04:	ldr	x30, [sp], #16
   24e08:	ret
   24e0c:	mov	x4, #0x0                   	// #0
   24e10:	mov	x3, #0x0                   	// #0
   24e14:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24e18:	add	x2, x2, #0x908
   24e1c:	mov	w1, #0x18f                 	// #399
   24e20:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24e24:	add	x0, x0, #0x858
   24e28:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24e2c:	mov	x4, #0x0                   	// #0
   24e30:	mov	x3, #0x0                   	// #0
   24e34:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24e38:	add	x2, x2, #0x920
   24e3c:	mov	w1, #0x190                 	// #400
   24e40:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24e44:	add	x0, x0, #0x858
   24e48:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   24e4c:	stp	x19, x20, [sp, #-32]!
   24e50:	stp	x21, x30, [sp, #16]
   24e54:	mov	x19, x0
   24e58:	mov	x21, x1
   24e5c:	mov	x0, x2
   24e60:	str	xzr, [x19, #8]
   24e64:	adrp	x1, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   24e68:	add	x1, x1, #0xd40
   24e6c:	str	x1, [x19]
   24e70:	mov	x1, #0x4028                	// #16424
   24e74:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   24e78:	mov	x20, x0
   24e7c:	mov	w2, #0x0                   	// #0
   24e80:	mov	x1, x21
   24e84:	bl	24dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b10>
   24e88:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   24e8c:	add	x0, x0, #0xd18
   24e90:	str	x0, [x20]
   24e94:	str	x20, [x19, #16]
   24e98:	ldp	x21, x30, [sp, #16]
   24e9c:	ldp	x19, x20, [sp], #32
   24ea0:	ret
   24ea4:	stp	x19, x30, [sp, #-16]!
   24ea8:	mov	x19, x0
   24eac:	ldr	w0, [x0, #16]
   24eb0:	cmn	w0, #0x1
   24eb4:	b.ne	24ed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c20>  // b.any
   24eb8:	ldr	w0, [x19, #20]
   24ebc:	cmn	w0, #0x1
   24ec0:	b.ne	24edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c28>  // b.any
   24ec4:	mov	x0, x19
   24ec8:	bl	254e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5234>
   24ecc:	ldp	x19, x30, [sp], #16
   24ed0:	ret
   24ed4:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   24ed8:	b	24eb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c04>
   24edc:	bl	1b5c0 <__sanitizer_set_report_fd@@Base+0x5210>
   24ee0:	b	24ec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c10>
   24ee4:	cbnz	x2, 24ef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c3c>
   24ee8:	mov	w0, #0x1                   	// #1
   24eec:	ret
   24ef0:	stp	x19, x20, [sp, #-48]!
   24ef4:	str	x30, [sp, #16]
   24ef8:	mov	x20, x0
   24efc:	mov	x19, x2
   24f00:	str	xzr, [sp, #40]
   24f04:	mov	x4, #0x0                   	// #0
   24f08:	add	x3, sp, #0x28
   24f0c:	ldr	w0, [x0, #20]
   24f10:	bl	1b614 <__sanitizer_set_report_fd@@Base+0x5264>
   24f14:	ands	w0, w0, #0xff
   24f18:	b.eq	24f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c74>  // b.none
   24f1c:	ldr	x1, [sp, #40]
   24f20:	cmp	x1, x19
   24f24:	b.eq	24f3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c88>  // b.none
   24f28:	ldr	w1, [x20, #20]
   24f2c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   24f30:	add	x0, x0, #0x940
   24f34:	bl	1d908 <OnPrint@@Base+0x3d8>
   24f38:	mov	w0, #0x0                   	// #0
   24f3c:	ldr	x30, [sp, #16]
   24f40:	ldp	x19, x20, [sp], #48
   24f44:	ret
   24f48:	stp	x19, x20, [sp, #-32]!
   24f4c:	str	x30, [sp, #16]
   24f50:	mov	x19, x0
   24f54:	ldr	w0, [x0, #16]
   24f58:	cmn	w0, #0x1
   24f5c:	b.eq	24fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d10>  // b.none
   24f60:	mov	x20, x1
   24f64:	ldr	w0, [x19, #20]
   24f68:	cmn	w0, #0x1
   24f6c:	b.eq	24fcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d18>  // b.none
   24f70:	mov	x0, x1
   24f74:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   24f78:	mov	x2, x0
   24f7c:	mov	x1, x20
   24f80:	mov	x0, x19
   24f84:	bl	24ee4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c30>
   24f88:	and	w0, w0, #0xff
   24f8c:	cbz	w0, 24fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d20>
   24f90:	mov	x0, x19
   24f94:	ldr	x1, [x0], #24
   24f98:	ldr	x3, [x1, #16]
   24f9c:	mov	x2, #0x4000                	// #16384
   24fa0:	mov	x1, x0
   24fa4:	mov	x0, x19
   24fa8:	blr	x3
   24fac:	ands	w0, w0, #0xff
   24fb0:	add	x19, x19, #0x18
   24fb4:	csel	x0, x19, xzr, ne  // ne = any
   24fb8:	ldr	x30, [sp, #16]
   24fbc:	ldp	x19, x20, [sp], #32
   24fc0:	ret
   24fc4:	mov	x0, #0x0                   	// #0
   24fc8:	b	24fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   24fcc:	mov	x0, #0x0                   	// #0
   24fd0:	b	24fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   24fd4:	mov	x0, #0x0                   	// #0
   24fd8:	b	24fb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d04>
   24fdc:	stp	x19, x20, [sp, #-48]!
   24fe0:	str	x30, [sp, #32]
   24fe4:	mov	x19, x0
   24fe8:	add	x0, x0, #0x4, lsl #12
   24fec:	ldrb	w0, [x0, #32]
   24ff0:	cbnz	w0, 250c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e0c>
   24ff4:	stp	x21, x22, [sp, #16]
   24ff8:	mov	x20, x1
   24ffc:	ldr	x22, [x19, #8]
   25000:	bl	12ca8 <__sancov_default_options@@Base+0x2924>
   25004:	mov	x21, x0
   25008:	cbz	x0, 25028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d74>
   2500c:	mov	x0, x22
   25010:	bl	126e0 <__sancov_default_options@@Base+0x235c>
   25014:	mov	x1, x0
   25018:	cbz	x0, 25028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d74>
   2501c:	mov	x0, x21
   25020:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   25024:	cbz	w0, 25078 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dc4>
   25028:	ldr	x0, [x19, #16408]
   2502c:	cmp	x0, #0x4
   25030:	b.hi	25060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dac>  // b.pmore
   25034:	mov	x1, x20
   25038:	mov	x0, x19
   2503c:	bl	24f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c94>
   25040:	cbnz	x0, 250c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e14>
   25044:	mov	x0, x19
   25048:	bl	24ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf0>
   2504c:	ldr	x0, [x19, #16408]
   25050:	add	x0, x0, #0x1
   25054:	str	x0, [x19, #16408]
   25058:	cmp	x0, #0x4
   2505c:	b.ls	25034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d80>  // b.plast
   25060:	add	x0, x19, #0x4, lsl #12
   25064:	ldrb	w1, [x0, #32]
   25068:	mov	x0, #0x0                   	// #0
   2506c:	cbz	w1, 2509c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4de8>
   25070:	ldp	x21, x22, [sp, #16]
   25074:	b	250cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   25078:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2507c:	add	x0, x0, #0x970
   25080:	bl	1d908 <OnPrint@@Base+0x3d8>
   25084:	add	x19, x19, #0x4, lsl #12
   25088:	mov	w0, #0x1                   	// #1
   2508c:	strb	w0, [x19, #32]
   25090:	mov	x0, #0x0                   	// #0
   25094:	ldp	x21, x22, [sp, #16]
   25098:	b	250cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   2509c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   250a0:	add	x0, x0, #0x9a8
   250a4:	bl	1d908 <OnPrint@@Base+0x3d8>
   250a8:	add	x19, x19, #0x4, lsl #12
   250ac:	mov	w0, #0x1                   	// #1
   250b0:	strb	w0, [x19, #32]
   250b4:	mov	x0, #0x0                   	// #0
   250b8:	ldp	x21, x22, [sp, #16]
   250bc:	b	250cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   250c0:	mov	x0, #0x0                   	// #0
   250c4:	b	250cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e18>
   250c8:	ldp	x21, x22, [sp, #16]
   250cc:	ldr	x30, [sp, #32]
   250d0:	ldp	x19, x20, [sp], #48
   250d4:	ret
   250d8:	stp	x19, x30, [sp, #-16]!
   250dc:	cbz	x2, 25140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e8c>
   250e0:	mov	x19, x0
   250e4:	and	w1, w1, #0xff
   250e8:	mov	x5, x3
   250ec:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   250f0:	add	x3, x3, #0x9e0
   250f4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   250f8:	add	x0, x0, #0x9e8
   250fc:	cmp	w1, #0x0
   25100:	csel	x3, x0, x3, ne  // ne = any
   25104:	cbnz	w4, 25174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ec0>
   25108:	mov	x4, x2
   2510c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25110:	add	x2, x2, #0xa08
   25114:	mov	x1, #0x4000                	// #16384
   25118:	add	x0, x19, #0x18
   2511c:	bl	1d534 <OnPrint@@Base+0x4>
   25120:	mov	w1, #0x3fff                	// #16383
   25124:	cmp	w0, w1
   25128:	b.gt	25160 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eac>
   2512c:	add	x1, x19, #0x18
   25130:	ldr	x0, [x19, #16]
   25134:	bl	24fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d28>
   25138:	ldp	x19, x30, [sp], #16
   2513c:	ret
   25140:	mov	x4, #0x0                   	// #0
   25144:	mov	x3, #0x0                   	// #0
   25148:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2514c:	add	x2, x2, #0x9f0
   25150:	mov	w1, #0x173                 	// #371
   25154:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25158:	add	x0, x0, #0x858
   2515c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   25160:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25164:	add	x0, x0, #0xa18
   25168:	bl	1d908 <OnPrint@@Base+0x3d8>
   2516c:	mov	x0, #0x0                   	// #0
   25170:	b	25138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e84>
   25174:	add	x0, x19, #0x18
   25178:	cmp	w4, #0x4
   2517c:	b.eq	2524c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f98>  // b.none
   25180:	b.hi	251f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f3c>  // b.pmore
   25184:	cmp	w4, #0x2
   25188:	b.eq	25258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fa4>  // b.none
   2518c:	b.ls	251a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ef0>  // b.plast
   25190:	cmp	w4, #0x3
   25194:	b.ne	2522c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   25198:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2519c:	add	x1, x1, #0xc8
   251a0:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   251a4:	cmp	w4, #0x1
   251a8:	b.ne	2522c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   251ac:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   251b0:	add	x1, x1, #0xc0
   251b4:	mov	x6, x5
   251b8:	mov	x5, x1
   251bc:	mov	x4, x2
   251c0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   251c4:	add	x2, x2, #0xa40
   251c8:	mov	x1, #0x4000                	// #16384
   251cc:	bl	1d534 <OnPrint@@Base+0x4>
   251d0:	mov	w1, #0x3fff                	// #16383
   251d4:	cmp	w0, w1
   251d8:	b.le	2512c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e78>
   251dc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   251e0:	add	x0, x0, #0xa18
   251e4:	bl	1d908 <OnPrint@@Base+0x3d8>
   251e8:	mov	x0, #0x0                   	// #0
   251ec:	b	25138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e84>
   251f0:	cmp	w4, #0x7
   251f4:	b.eq	25264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fb0>  // b.none
   251f8:	b.ls	25210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f5c>  // b.plast
   251fc:	cmp	w4, #0x8
   25200:	b.ne	2522c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   25204:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25208:	add	x1, x1, #0xe0
   2520c:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   25210:	cmp	w4, #0x5
   25214:	b.eq	25270 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fbc>  // b.none
   25218:	cmp	w4, #0x6
   2521c:	b.ne	2522c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>  // b.any
   25220:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25224:	add	x1, x1, #0xa8
   25228:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   2522c:	mov	x4, #0x0                   	// #0
   25230:	mov	x3, #0x0                   	// #0
   25234:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25238:	add	x2, x2, #0xf0
   2523c:	mov	w1, #0x2a9                 	// #681
   25240:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25244:	add	x0, x0, #0x520
   25248:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2524c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25250:	add	x1, x1, #0xb8
   25254:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   25258:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2525c:	add	x1, x1, #0xb0
   25260:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   25264:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25268:	add	x1, x1, #0xd0
   2526c:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   25270:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25274:	add	x1, x1, #0xd8
   25278:	b	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f00>
   2527c:	stp	x19, x30, [sp, #-16]!
   25280:	mov	x19, x2
   25284:	ldr	w4, [x2, #32]
   25288:	ldr	x3, [x2, #24]
   2528c:	ldr	x2, [x2, #16]
   25290:	mov	w1, #0x0                   	// #0
   25294:	bl	250d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e24>
   25298:	cbnz	x0, 252a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ff4>
   2529c:	mov	w0, #0x0                   	// #0
   252a0:	ldp	x19, x30, [sp], #16
   252a4:	ret
   252a8:	mov	x1, x19
   252ac:	bl	24b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x489c>
   252b0:	mov	w0, #0x1                   	// #1
   252b4:	b	252a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fec>
   252b8:	stp	x19, x20, [sp, #-32]!
   252bc:	str	x30, [sp, #16]
   252c0:	mov	x20, x1
   252c4:	mov	x19, x2
   252c8:	ldr	w4, [x2, #16]
   252cc:	ldr	x3, [x2, #8]
   252d0:	ldr	x2, [x2]
   252d4:	mov	w1, #0x1                   	// #1
   252d8:	bl	250d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e24>
   252dc:	cbnz	x0, 252f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x503c>
   252e0:	mov	w0, #0x0                   	// #0
   252e4:	ldr	x30, [sp, #16]
   252e8:	ldp	x19, x20, [sp], #32
   252ec:	ret
   252f0:	mov	x1, x19
   252f4:	bl	24d7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac8>
   252f8:	ldr	x1, [x19, #48]
   252fc:	add	x1, x20, x1
   25300:	ldr	x20, [x19, #8]
   25304:	sub	x1, x1, x20
   25308:	str	x1, [x19, #48]
   2530c:	mov	w0, #0x1                   	// #1
   25310:	b	252e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5030>
   25314:	mov	x0, #0x0                   	// #0
   25318:	ret
   2531c:	mov	w0, #0x0                   	// #0
   25320:	cmp	x2, #0x1
   25324:	b.ls	2533c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5088>  // b.plast
   25328:	add	x0, x1, x2
   2532c:	ldurb	w3, [x0, #-1]
   25330:	mov	w0, #0x0                   	// #0
   25334:	cmp	w3, #0xa
   25338:	b.eq	25340 <__sanitizer_get_module_and_offset_for_pc@@Base+0x508c>  // b.none
   2533c:	ret
   25340:	add	x1, x1, x2
   25344:	ldurb	w0, [x1, #-2]
   25348:	cmp	w0, #0xa
   2534c:	cset	w0, eq  // eq = none
   25350:	b	2533c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5088>
   25354:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25358:	ldr	x0, [x0, #4040]
   2535c:	ldrb	w4, [x0, #180]
   25360:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25364:	add	x3, x0, #0x728
   25368:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2536c:	add	x0, x0, #0x718
   25370:	cmp	w4, #0x0
   25374:	csel	x0, x0, x3, ne  // ne = any
   25378:	str	x1, [x2]
   2537c:	str	x0, [x2, #8]
   25380:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25384:	add	x0, x0, #0x740
   25388:	str	x0, [x2, #16]
   2538c:	str	xzr, [x2, #24]
   25390:	ret
   25394:	str	x30, [sp, #-16]!
   25398:	mov	x4, #0x0                   	// #0
   2539c:	mov	x3, #0x0                   	// #0
   253a0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   253a4:	add	x2, x2, #0x758
   253a8:	mov	w1, #0x57                  	// #87
   253ac:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   253b0:	add	x0, x0, #0x778
   253b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   253b8:	str	x30, [sp, #-16]!
   253bc:	mov	x4, #0x0                   	// #0
   253c0:	mov	x3, #0x0                   	// #0
   253c4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   253c8:	add	x2, x2, #0x758
   253cc:	mov	w1, #0x4e                  	// #78
   253d0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   253d4:	add	x0, x0, #0x778
   253d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   253dc:	mov	w0, #0x0                   	// #0
   253e0:	cmp	x2, #0x8
   253e4:	b.hi	253ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5138>  // b.pmore
   253e8:	ret
   253ec:	str	x30, [sp, #-16]!
   253f0:	mov	x3, x1
   253f4:	sub	x0, x2, #0x8
   253f8:	mov	x2, #0x8                   	// #8
   253fc:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25400:	add	x1, x1, #0xe90
   25404:	add	x0, x3, x0
   25408:	bl	17aac <__sanitizer_set_report_fd@@Base+0x16fc>
   2540c:	cmp	w0, #0x0
   25410:	cset	w0, eq  // eq = none
   25414:	ldr	x30, [sp], #16
   25418:	ret
   2541c:	stp	x19, x30, [sp, #-16]!
   25420:	mov	x19, x0
   25424:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25428:	ldr	x0, [x0, #3664]
   2542c:	cbz	x0, 2544c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5198>
   25430:	mov	x3, #0x0                   	// #0
   25434:	mov	x2, #0x0                   	// #0
   25438:	mov	x1, #0x0                   	// #0
   2543c:	mov	x0, x19
   25440:	bl	6930 <__cxa_demangle@plt>
   25444:	cmp	x0, #0x0
   25448:	csel	x19, x19, x0, eq  // eq = none
   2544c:	mov	x0, x19
   25450:	ldp	x19, x30, [sp], #16
   25454:	ret
   25458:	stp	x19, x20, [sp, #-32]!
   2545c:	str	x30, [sp, #16]
   25460:	mov	x19, x0
   25464:	cbz	x0, 254b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>
   25468:	ldrb	w1, [x0]
   2546c:	mov	x0, #0x0                   	// #0
   25470:	cmp	w1, #0x5f
   25474:	b.ne	254b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>  // b.any
   25478:	ldrb	w1, [x19, #1]
   2547c:	cmp	w1, #0x54
   25480:	b.ne	254b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>  // b.any
   25484:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   25488:	ldr	x20, [x0, #568]
   2548c:	mov	x0, #0x0                   	// #0
   25490:	cbz	x20, 254b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5200>
   25494:	mov	x0, x19
   25498:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   2549c:	mov	w4, #0x0                   	// #0
   254a0:	mov	x3, #0x0                   	// #0
   254a4:	mov	x2, #0x0                   	// #0
   254a8:	mov	x1, x0
   254ac:	mov	x0, x19
   254b0:	blr	x20
   254b4:	ldr	x30, [sp, #16]
   254b8:	ldp	x19, x20, [sp], #32
   254bc:	ret
   254c0:	stp	x19, x30, [sp, #-16]!
   254c4:	mov	x19, x0
   254c8:	cbz	x0, 254d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5220>
   254cc:	bl	25458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51a4>
   254d0:	cbz	x0, 254dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5228>
   254d4:	ldp	x19, x30, [sp], #16
   254d8:	ret
   254dc:	mov	x0, x19
   254e0:	bl	2541c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5168>
   254e4:	b	254d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5220>
   254e8:	stp	x19, x20, [sp, #-128]!
   254ec:	stp	x21, x22, [sp, #16]
   254f0:	str	x30, [sp, #48]
   254f4:	mov	x19, x0
   254f8:	ldr	x0, [x0, #8]
   254fc:	bl	18c30 <__sanitizer_set_report_fd@@Base+0x2880>
   25500:	ands	w20, w0, #0xff
   25504:	b.ne	25548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5294>  // b.any
   25508:	add	x0, x19, #0x4, lsl #12
   2550c:	ldrb	w21, [x0, #33]
   25510:	cbz	w21, 25528 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5274>
   25514:	mov	w0, w20
   25518:	ldp	x21, x22, [sp, #16]
   2551c:	ldr	x30, [sp, #48]
   25520:	ldp	x19, x20, [sp], #128
   25524:	ret
   25528:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2552c:	add	x0, x0, #0xb08
   25530:	bl	1d908 <OnPrint@@Base+0x3d8>
   25534:	add	x19, x19, #0x4, lsl #12
   25538:	mov	w0, #0x1                   	// #1
   2553c:	strb	w0, [x19, #33]
   25540:	mov	w20, w21
   25544:	b	25514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   25548:	stp	x23, x24, [sp, #32]
   2554c:	mov	x2, #0x8                   	// #8
   25550:	mov	w1, #0x0                   	// #0
   25554:	add	x0, sp, #0x78
   25558:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   2555c:	mov	x2, #0x8                   	// #8
   25560:	mov	w1, #0x0                   	// #0
   25564:	add	x0, sp, #0x70
   25568:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   2556c:	add	x24, sp, #0x40
   25570:	mov	x20, x24
   25574:	mov	x23, #0x0                   	// #0
   25578:	mov	w21, #0x0                   	// #0
   2557c:	b	25618 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5364>
   25580:	cmp	w21, #0x0
   25584:	b.le	255ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x52f8>
   25588:	mov	w19, #0x0                   	// #0
   2558c:	ldr	w0, [x24]
   25590:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   25594:	ldr	w0, [x24, #4]
   25598:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   2559c:	add	w19, w19, #0x1
   255a0:	add	x24, x24, #0x8
   255a4:	cmp	w19, w21
   255a8:	b.ne	2558c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52d8>  // b.any
   255ac:	bl	6ac0 <__errno_location@plt>
   255b0:	ldr	w1, [x0]
   255b4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   255b8:	add	x0, x0, #0xbb0
   255bc:	bl	1d908 <OnPrint@@Base+0x3d8>
   255c0:	mov	w20, #0x0                   	// #0
   255c4:	ldp	x23, x24, [sp, #32]
   255c8:	b	25514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   255cc:	cmp	w21, #0x0
   255d0:	b.le	256dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   255d4:	mov	w20, #0x0                   	// #0
   255d8:	b	255fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5348>
   255dc:	ldr	w0, [x24]
   255e0:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   255e4:	ldr	w0, [x24, #4]
   255e8:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   255ec:	add	w20, w20, #0x1
   255f0:	add	x24, x24, #0x8
   255f4:	cmp	w20, w21
   255f8:	b.eq	256dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>  // b.none
   255fc:	cmp	x24, x23
   25600:	b.ne	255dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5328>  // b.any
   25604:	b	255ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5338>
   25608:	add	w21, w21, #0x1
   2560c:	add	x20, x20, #0x8
   25610:	cmp	w21, #0x5
   25614:	b.eq	25778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54c4>  // b.none
   25618:	mov	x22, x20
   2561c:	mov	x0, x20
   25620:	bl	6720 <pipe@plt>
   25624:	cmn	w0, #0x1
   25628:	b.eq	25580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52cc>  // b.none
   2562c:	ldr	w0, [x20]
   25630:	cmp	w0, #0x2
   25634:	b.le	25608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   25638:	ldr	w0, [x20, #4]
   2563c:	cmp	w0, #0x2
   25640:	b.le	25608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   25644:	cbnz	x23, 255cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5318>
   25648:	mov	x23, x20
   2564c:	b	25608 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5354>
   25650:	mov	x4, #0x0                   	// #0
   25654:	mov	x3, #0x0                   	// #0
   25658:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2565c:	add	x2, x2, #0xb48
   25660:	mov	w1, #0x88                  	// #136
   25664:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25668:	add	x0, x0, #0xaa8
   2566c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   25670:	mov	x4, #0x0                   	// #0
   25674:	mov	x3, #0x0                   	// #0
   25678:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2567c:	add	x2, x2, #0x758
   25680:	mov	w1, #0xde                  	// #222
   25684:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25688:	add	x0, x0, #0xaa8
   2568c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   25690:	ldr	w0, [sp, #120]
   25694:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   25698:	ldr	w0, [sp, #116]
   2569c:	bl	18a1c <__sanitizer_set_report_fd@@Base+0x266c>
   256a0:	ldp	x23, x24, [sp, #32]
   256a4:	b	25514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   256a8:	mov	x4, #0x0                   	// #0
   256ac:	mov	x3, #0x0                   	// #0
   256b0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   256b4:	add	x2, x2, #0xb60
   256b8:	mov	w1, #0xef                  	// #239
   256bc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   256c0:	add	x0, x0, #0xaa8
   256c4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   256c8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   256cc:	add	x0, x0, #0xb70
   256d0:	bl	1d908 <OnPrint@@Base+0x3d8>
   256d4:	ldp	x23, x24, [sp, #32]
   256d8:	b	25514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   256dc:	ldr	w0, [x23]
   256e0:	str	w0, [sp, #120]
   256e4:	ldr	w0, [x23, #4]
   256e8:	str	w0, [sp, #124]
   256ec:	ldr	w0, [x22]
   256f0:	str	w0, [sp, #112]
   256f4:	ldr	w0, [x22, #4]
   256f8:	str	w0, [sp, #116]
   256fc:	add	x0, x19, #0x4, lsl #12
   25700:	ldrb	w20, [x0, #34]
   25704:	cbnz	w20, 25670 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53bc>
   25708:	add	x21, sp, #0x40
   2570c:	ldr	x0, [x19]
   25710:	ldr	x3, [x0, #8]
   25714:	mov	x2, x21
   25718:	ldr	x1, [x19, #8]
   2571c:	mov	x0, x19
   25720:	blr	x3
   25724:	mov	w4, #0xffffffff            	// #-1
   25728:	ldr	w3, [sp, #124]
   2572c:	ldr	w2, [sp, #112]
   25730:	mov	x1, x21
   25734:	ldr	x0, [x19, #8]
   25738:	bl	1c8c4 <__sanitizer_set_report_fd@@Base+0x6514>
   2573c:	mov	w21, w0
   25740:	tbnz	w0, #31, 25690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53dc>
   25744:	ldr	w0, [sp, #120]
   25748:	str	w0, [x19, #16]
   2574c:	ldr	w0, [sp, #116]
   25750:	str	w0, [x19, #20]
   25754:	cbz	w21, 256a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53f4>
   25758:	mov	w0, #0xa                   	// #10
   2575c:	bl	1c0b8 <__sanitizer_set_report_fd@@Base+0x5d08>
   25760:	mov	w0, w21
   25764:	bl	1ca28 <__sanitizer_set_report_fd@@Base+0x6678>
   25768:	ands	w20, w0, #0xff
   2576c:	b.eq	256c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5414>  // b.none
   25770:	ldp	x23, x24, [sp, #32]
   25774:	b	25514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5260>
   25778:	cbnz	x23, 25650 <__sanitizer_get_module_and_offset_for_pc@@Base+0x539c>
   2577c:	mov	x4, #0x0                   	// #0
   25780:	mov	x3, #0x0                   	// #0
   25784:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25788:	add	x2, x2, #0xb38
   2578c:	mov	w1, #0x87                  	// #135
   25790:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25794:	add	x0, x0, #0xaa8
   25798:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2579c:	str	x30, [sp, #-16]!
   257a0:	mov	x0, x1
   257a4:	bl	254c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>
   257a8:	ldr	x30, [sp], #16
   257ac:	ret
   257b0:	stp	x19, x20, [sp, #-112]!
   257b4:	str	x30, [sp, #32]
   257b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   257bc:	ldr	x0, [x0, #4040]
   257c0:	ldrb	w0, [x0]
   257c4:	cbnz	w0, 25844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5590>
   257c8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   257cc:	ldr	x0, [x0, #3680]
   257d0:	ldr	w1, [x0]
   257d4:	sxtw	x1, w1
   257d8:	mov	x19, #0x0                   	// #0
   257dc:	mov	x0, #0x0                   	// #0
   257e0:	cmp	x1, #0x1
   257e4:	b.hi	25830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x557c>  // b.pmore
   257e8:	str	x0, [sp, #88]
   257ec:	str	x19, [sp, #96]
   257f0:	str	x19, [sp, #104]
   257f4:	mov	x1, #0xf0                  	// #240
   257f8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   257fc:	ldr	x0, [x0, #3808]
   25800:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   25804:	mov	x19, x0
   25808:	ldp	x2, x3, [sp, #88]
   2580c:	stp	x2, x3, [sp, #48]
   25810:	ldr	x1, [sp, #104]
   25814:	str	x1, [sp, #64]
   25818:	add	x1, sp, #0x30
   2581c:	bl	23c10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x395c>
   25820:	mov	x0, x19
   25824:	ldr	x30, [sp, #32]
   25828:	ldp	x19, x20, [sp], #112
   2582c:	ret
   25830:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25834:	add	x0, x0, #0xc00
   25838:	bl	1d908 <OnPrint@@Base+0x3d8>
   2583c:	mov	x0, #0x0                   	// #0
   25840:	b	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   25844:	bl	10798 <__sancov_default_options@@Base+0x414>
   25848:	and	w0, w0, #0xff
   2584c:	cbz	w0, 258b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55fc>
   25850:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25854:	ldr	x0, [x0, #3680]
   25858:	ldr	w0, [x0]
   2585c:	sxtw	x0, w0
   25860:	cmp	x0, #0x1
   25864:	b.hi	258a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55ec>  // b.pmore
   25868:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2586c:	ldr	x0, [x0, #3808]
   25870:	bl	242cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4018>
   25874:	mov	x19, x0
   25878:	cbz	x0, 25934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5680>
   2587c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25880:	ldr	x0, [x0, #3680]
   25884:	ldr	w0, [x0]
   25888:	sxtw	x0, w0
   2588c:	cmp	x0, #0x1
   25890:	b.hi	25924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5670>  // b.pmore
   25894:	str	xzr, [x19, #8]
   25898:	mov	x0, #0x1                   	// #1
   2589c:	b	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   258a0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   258a4:	add	x0, x0, #0xc20
   258a8:	bl	1d908 <OnPrint@@Base+0x3d8>
   258ac:	b	25868 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55b4>
   258b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   258b4:	ldr	x0, [x0, #3568]
   258b8:	cmp	x0, #0x0
   258bc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   258c0:	ldr	x0, [x0, #3672]
   258c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   258c8:	b.eq	25868 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55b4>  // b.none
   258cc:	mov	x1, #0x4010                	// #16400
   258d0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   258d4:	ldr	x0, [x0, #3808]
   258d8:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   258dc:	mov	x19, x0
   258e0:	str	xzr, [x0, #8]
   258e4:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   258e8:	add	x0, x0, #0xdf0
   258ec:	str	x0, [x19]
   258f0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   258f4:	ldr	x0, [x0, #3680]
   258f8:	ldr	w0, [x0]
   258fc:	sxtw	x0, w0
   25900:	cmp	x0, #0x1
   25904:	b.hi	25914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5660>  // b.pmore
   25908:	str	xzr, [x19, #8]
   2590c:	mov	x0, #0x1                   	// #1
   25910:	b	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   25914:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25918:	add	x0, x0, #0xc50
   2591c:	bl	1d908 <OnPrint@@Base+0x3d8>
   25920:	b	25908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5654>
   25924:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25928:	add	x0, x0, #0xc70
   2592c:	bl	1d908 <OnPrint@@Base+0x3d8>
   25930:	b	25894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e0>
   25934:	stp	x21, x22, [sp, #16]
   25938:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2593c:	ldr	x0, [x0, #4040]
   25940:	ldr	x21, [x0, #8]
   25944:	cbz	x21, 259f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5740>
   25948:	mov	x0, x21
   2594c:	bl	126e0 <__sancov_default_options@@Base+0x235c>
   25950:	mov	x20, x0
   25954:	ldrb	w0, [x21]
   25958:	cbz	w0, 259c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x570c>
   2595c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25960:	add	x1, x1, #0xcc0
   25964:	mov	x0, x20
   25968:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   2596c:	cbnz	w0, 25a14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5760>
   25970:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25974:	ldr	x0, [x0, #3680]
   25978:	ldr	w0, [x0]
   2597c:	sxtw	x0, w0
   25980:	cmp	x0, #0x1
   25984:	b.hi	25a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x574c>  // b.pmore
   25988:	adrp	x20, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2598c:	ldr	x20, [x20, #3808]
   25990:	mov	x1, #0x4018                	// #16408
   25994:	mov	x0, x20
   25998:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   2599c:	mov	x19, x0
   259a0:	mov	x2, x20
   259a4:	mov	x1, x21
   259a8:	bl	24e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b98>
   259ac:	cbz	x19, 25e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bcc>
   259b0:	str	xzr, [x19, #8]
   259b4:	mov	x0, #0x1                   	// #1
   259b8:	ldp	x21, x22, [sp, #16]
   259bc:	b	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   259c0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   259c4:	ldr	x0, [x0, #3680]
   259c8:	ldr	w0, [x0]
   259cc:	sxtw	x0, w0
   259d0:	cmp	x0, #0x1
   259d4:	b.hi	259e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5730>  // b.pmore
   259d8:	mov	x0, #0x0                   	// #0
   259dc:	ldp	x21, x22, [sp, #16]
   259e0:	b	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   259e4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   259e8:	add	x0, x0, #0xc90
   259ec:	bl	1d908 <OnPrint@@Base+0x3d8>
   259f0:	b	259d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   259f4:	adrp	x20, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   259f8:	add	x20, x20, #0x9e0
   259fc:	b	2595c <__sanitizer_get_module_and_offset_for_pc@@Base+0x56a8>
   25a00:	mov	x1, x21
   25a04:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25a08:	add	x0, x0, #0xcd0
   25a0c:	bl	1d908 <OnPrint@@Base+0x3d8>
   25a10:	b	25988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d4>
   25a14:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25a18:	add	x1, x1, #0xd08
   25a1c:	mov	x0, x20
   25a20:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   25a24:	cbz	w0, 25b8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d8>
   25a28:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25a2c:	add	x1, x1, #0xd48
   25a30:	mov	x0, x20
   25a34:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   25a38:	cbnz	w0, 25c14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5960>
   25a3c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25a40:	ldr	x0, [x0, #3680]
   25a44:	ldr	w0, [x0]
   25a48:	sxtw	x0, w0
   25a4c:	cmp	x0, #0x1
   25a50:	b.hi	25b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>  // b.pmore
   25a54:	adrp	x20, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25a58:	ldr	x20, [x20, #3808]
   25a5c:	mov	x1, #0x38                  	// #56
   25a60:	mov	x0, x20
   25a64:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   25a68:	mov	x19, x0
   25a6c:	str	xzr, [x0, #8]
   25a70:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   25a74:	add	x0, x0, #0xdc0
   25a78:	str	x0, [x19]
   25a7c:	str	x21, [x19, #16]
   25a80:	str	x20, [x19, #24]
   25a84:	str	xzr, [x19, #40]
   25a88:	str	xzr, [x19, #48]
   25a8c:	str	xzr, [x19, #32]
   25a90:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25a94:	ldr	x0, [x0, #4000]
   25a98:	ldr	x0, [x0]
   25a9c:	cbz	x0, 25bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58fc>
   25aa0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25aa4:	ldr	x0, [x0, #4000]
   25aa8:	ldr	x0, [x0]
   25aac:	sub	x1, x0, #0x1
   25ab0:	tst	x1, x0
   25ab4:	b.ne	25bc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5910>  // b.any
   25ab8:	add	x20, x0, #0x7
   25abc:	neg	x0, x0
   25ac0:	and	x20, x20, x0
   25ac4:	mov	w2, #0x0                   	// #0
   25ac8:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25acc:	add	x1, x1, #0x650
   25ad0:	mov	x0, x20
   25ad4:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   25ad8:	mov	x22, x0
   25adc:	add	x21, x19, #0x20
   25ae0:	ldr	x2, [x21, #16]
   25ae4:	lsl	x2, x2, #3
   25ae8:	ldr	x1, [x19, #32]
   25aec:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   25af0:	ldr	x1, [x21, #8]
   25af4:	ldr	x0, [x19, #32]
   25af8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   25afc:	str	x22, [x19, #32]
   25b00:	str	x20, [x21, #8]
   25b04:	cmp	x20, #0x7f
   25b08:	b.hi	259b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>  // b.pmore
   25b0c:	ldr	x3, [x19, #48]
   25b10:	cmp	x3, #0x10
   25b14:	b.hi	25bd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5920>  // b.pmore
   25b18:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25b1c:	ldr	x0, [x0, #4000]
   25b20:	ldr	x0, [x0]
   25b24:	cbz	x0, 25bf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x593c>
   25b28:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25b2c:	ldr	x0, [x0, #4000]
   25b30:	ldr	x0, [x0]
   25b34:	sub	x1, x0, #0x1
   25b38:	tst	x1, x0
   25b3c:	b.ne	25c04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>  // b.any
   25b40:	add	x20, x0, #0x7f
   25b44:	neg	x0, x0
   25b48:	and	x20, x20, x0
   25b4c:	mov	w2, #0x0                   	// #0
   25b50:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25b54:	add	x1, x1, #0x650
   25b58:	mov	x0, x20
   25b5c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   25b60:	mov	x22, x0
   25b64:	ldr	x2, [x19, #48]
   25b68:	lsl	x2, x2, #3
   25b6c:	ldr	x1, [x19, #32]
   25b70:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   25b74:	ldr	x1, [x19, #40]
   25b78:	ldr	x0, [x19, #32]
   25b7c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   25b80:	str	x22, [x19, #32]
   25b84:	str	x20, [x19, #40]
   25b88:	b	259b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>
   25b8c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25b90:	add	x0, x0, #0xd10
   25b94:	bl	1d908 <OnPrint@@Base+0x3d8>
   25b98:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   25b9c:	mov	x1, x21
   25ba0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25ba4:	add	x0, x0, #0xd58
   25ba8:	bl	1d908 <OnPrint@@Base+0x3d8>
   25bac:	b	25a54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57a0>
   25bb0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   25bb4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25bb8:	ldr	x1, [x1, #4000]
   25bbc:	str	x0, [x1]
   25bc0:	b	25aa0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57ec>
   25bc4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25bc8:	add	x0, x0, #0x638
   25bcc:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   25bd0:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   25bd4:	mov	x4, #0x10                  	// #16
   25bd8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25bdc:	add	x2, x2, #0x618
   25be0:	mov	w1, #0x1fd                 	// #509
   25be4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25be8:	add	x0, x0, #0x520
   25bec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   25bf0:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   25bf4:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25bf8:	ldr	x1, [x1, #4000]
   25bfc:	str	x0, [x1]
   25c00:	b	25b28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5874>
   25c04:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25c08:	add	x0, x0, #0x638
   25c0c:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   25c10:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   25c14:	cbnz	x21, 25c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b8>
   25c18:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25c1c:	add	x0, x0, #0xcc0
   25c20:	bl	160d4 <__sanitizer_cov_dump@@Base+0x251c>
   25c24:	mov	x20, x0
   25c28:	cbz	x0, 25c94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59e0>
   25c2c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25c30:	ldr	x0, [x0, #3680]
   25c34:	ldr	w0, [x0]
   25c38:	sxtw	x0, w0
   25c3c:	cmp	x0, #0x1
   25c40:	b.hi	25c80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59cc>  // b.pmore
   25c44:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25c48:	ldr	x21, [x21, #3808]
   25c4c:	mov	x1, #0x4018                	// #16408
   25c50:	mov	x0, x21
   25c54:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   25c58:	mov	x19, x0
   25c5c:	mov	x2, x21
   25c60:	mov	x1, x20
   25c64:	bl	24e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b98>
   25c68:	b	259ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f8>
   25c6c:	mov	x1, x21
   25c70:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25c74:	add	x0, x0, #0xd88
   25c78:	bl	1d908 <OnPrint@@Base+0x3d8>
   25c7c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   25c80:	mov	x1, x20
   25c84:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25c88:	add	x0, x0, #0xe20
   25c8c:	bl	1d908 <OnPrint@@Base+0x3d8>
   25c90:	b	25c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5990>
   25c94:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25c98:	ldr	x0, [x0, #4040]
   25c9c:	ldrb	w0, [x0, #16]
   25ca0:	cbz	w0, 259d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   25ca4:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25ca8:	add	x0, x0, #0xd48
   25cac:	bl	160d4 <__sanitizer_cov_dump@@Base+0x251c>
   25cb0:	mov	x20, x0
   25cb4:	cbz	x0, 259d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   25cb8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25cbc:	ldr	x0, [x0, #3680]
   25cc0:	ldr	w0, [x0]
   25cc4:	sxtw	x0, w0
   25cc8:	cmp	x0, #0x1
   25ccc:	b.hi	25e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b54>  // b.pmore
   25cd0:	adrp	x21, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25cd4:	ldr	x21, [x21, #3808]
   25cd8:	mov	x1, #0x38                  	// #56
   25cdc:	mov	x0, x21
   25ce0:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   25ce4:	mov	x19, x0
   25ce8:	str	xzr, [x0, #8]
   25cec:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   25cf0:	add	x0, x0, #0xdc0
   25cf4:	str	x0, [x19]
   25cf8:	str	x20, [x19, #16]
   25cfc:	str	x21, [x19, #24]
   25d00:	str	xzr, [x19, #40]
   25d04:	str	xzr, [x19, #48]
   25d08:	str	xzr, [x19, #32]
   25d0c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25d10:	ldr	x0, [x0, #4000]
   25d14:	ldr	x0, [x0]
   25d18:	cbz	x0, 25e1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b68>
   25d1c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25d20:	ldr	x0, [x0, #4000]
   25d24:	ldr	x0, [x0]
   25d28:	sub	x1, x0, #0x1
   25d2c:	tst	x1, x0
   25d30:	b.ne	25e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b7c>  // b.any
   25d34:	add	x20, x0, #0x7
   25d38:	neg	x0, x0
   25d3c:	and	x20, x20, x0
   25d40:	mov	w2, #0x0                   	// #0
   25d44:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25d48:	add	x1, x1, #0x650
   25d4c:	mov	x0, x20
   25d50:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   25d54:	mov	x22, x0
   25d58:	add	x21, x19, #0x20
   25d5c:	ldr	x2, [x21, #16]
   25d60:	lsl	x2, x2, #3
   25d64:	ldr	x1, [x19, #32]
   25d68:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   25d6c:	ldr	x1, [x21, #8]
   25d70:	ldr	x0, [x19, #32]
   25d74:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   25d78:	str	x22, [x19, #32]
   25d7c:	str	x20, [x21, #8]
   25d80:	cmp	x20, #0x7f
   25d84:	b.hi	259b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>  // b.pmore
   25d88:	ldr	x3, [x19, #48]
   25d8c:	cmp	x3, #0x10
   25d90:	b.hi	25e40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b8c>  // b.pmore
   25d94:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25d98:	ldr	x0, [x0, #4000]
   25d9c:	ldr	x0, [x0]
   25da0:	cbz	x0, 25e5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ba8>
   25da4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25da8:	ldr	x0, [x0, #4000]
   25dac:	ldr	x0, [x0]
   25db0:	sub	x1, x0, #0x1
   25db4:	tst	x1, x0
   25db8:	b.ne	25e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bbc>  // b.any
   25dbc:	add	x20, x0, #0x7f
   25dc0:	neg	x0, x0
   25dc4:	and	x20, x20, x0
   25dc8:	mov	w2, #0x0                   	// #0
   25dcc:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25dd0:	add	x1, x1, #0x650
   25dd4:	mov	x0, x20
   25dd8:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   25ddc:	mov	x22, x0
   25de0:	ldr	x2, [x19, #48]
   25de4:	lsl	x2, x2, #3
   25de8:	ldr	x1, [x19, #32]
   25dec:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   25df0:	ldr	x1, [x19, #40]
   25df4:	ldr	x0, [x19, #32]
   25df8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   25dfc:	str	x22, [x19, #32]
   25e00:	str	x20, [x19, #40]
   25e04:	b	259b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56fc>
   25e08:	mov	x1, x20
   25e0c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25e10:	add	x0, x0, #0xe48
   25e14:	bl	1d908 <OnPrint@@Base+0x3d8>
   25e18:	b	25cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a1c>
   25e1c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   25e20:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25e24:	ldr	x1, [x1, #4000]
   25e28:	str	x0, [x1]
   25e2c:	b	25d1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a68>
   25e30:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25e34:	add	x0, x0, #0x638
   25e38:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   25e3c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   25e40:	mov	x4, #0x10                  	// #16
   25e44:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25e48:	add	x2, x2, #0x618
   25e4c:	mov	w1, #0x1fd                 	// #509
   25e50:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25e54:	add	x0, x0, #0x520
   25e58:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   25e5c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   25e60:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25e64:	ldr	x1, [x1, #4000]
   25e68:	str	x0, [x1]
   25e6c:	b	25da4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   25e70:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   25e74:	add	x0, x0, #0x638
   25e78:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   25e7c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   25e80:	mov	x0, #0x0                   	// #0
   25e84:	ldp	x21, x22, [sp, #16]
   25e88:	b	257e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>
   25e8c:	str	x30, [sp, #-16]!
   25e90:	bl	244b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   25e94:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25e98:	add	x1, x1, #0xe68
   25e9c:	mov	x0, #0x0                   	// #0
   25ea0:	bl	6830 <dlsym@plt>
   25ea4:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   25ea8:	str	x0, [x1, #568]
   25eac:	bl	68a0 <dlerror@plt>
   25eb0:	ldr	x30, [sp], #16
   25eb4:	ret
   25eb8:	str	x1, [x2]
   25ebc:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   25ec0:	add	x1, x1, #0xa58
   25ec4:	str	x1, [x2, #8]
   25ec8:	ldr	x0, [x0, #16424]
   25ecc:	str	x0, [x2, #16]
   25ed0:	str	xzr, [x2, #24]
   25ed4:	ret
   25ed8:	mov	w0, #0x0                   	// #0
   25edc:	ret
   25ee0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25ee4:	ldr	x0, [x0, #3728]
   25ee8:	cbz	x0, 25efc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c48>
   25eec:	str	x30, [sp, #-16]!
   25ef0:	bl	69b0 <__sanitizer_symbolize_flush@plt>
   25ef4:	ldr	x30, [sp], #16
   25ef8:	ret
   25efc:	ret
   25f00:	stp	x19, x20, [sp, #-32]!
   25f04:	str	x30, [sp, #24]
   25f08:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25f0c:	ldr	x0, [x0, #3512]
   25f10:	mov	x19, x1
   25f14:	cbz	x0, 25f58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ca4>
   25f18:	str	x21, [sp, #16]
   25f1c:	mov	x20, x1
   25f20:	mov	x21, #0x400                 	// #1024
   25f24:	mov	x2, #0x0                   	// #0
   25f28:	mov	x1, #0x0                   	// #0
   25f2c:	mov	x0, x21
   25f30:	bl	10800 <__sancov_default_options@@Base+0x47c>
   25f34:	mov	x19, x0
   25f38:	mov	w2, w21
   25f3c:	mov	x1, x0
   25f40:	mov	x0, x20
   25f44:	bl	67b0 <__sanitizer_symbolize_demangle@plt>
   25f48:	sxtw	x1, w0
   25f4c:	cmp	x21, w0, sxtw
   25f50:	b.cc	25f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cb4>  // b.lo, b.ul, b.last
   25f54:	ldr	x21, [sp, #16]
   25f58:	mov	x0, x19
   25f5c:	ldr	x30, [sp, #24]
   25f60:	ldp	x19, x20, [sp], #32
   25f64:	ret
   25f68:	add	x21, x1, #0x1
   25f6c:	mov	x1, #0x0                   	// #0
   25f70:	mov	x0, x19
   25f74:	bl	10a80 <__sancov_default_options@@Base+0x6fc>
   25f78:	cmp	x21, #0x20, lsl #12
   25f7c:	b.ls	25f24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c70>  // b.plast
   25f80:	mov	x19, x20
   25f84:	ldr	x21, [sp, #16]
   25f88:	b	25f58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ca4>
   25f8c:	stp	x19, x20, [sp, #-48]!
   25f90:	stp	x21, x22, [sp, #16]
   25f94:	str	x30, [sp, #32]
   25f98:	mov	x20, x1
   25f9c:	mov	x19, x2
   25fa0:	add	x21, x0, #0x10
   25fa4:	mov	w3, #0x4000                	// #16384
   25fa8:	mov	x2, x21
   25fac:	ldr	x1, [x19, #8]
   25fb0:	ldr	x0, [x19]
   25fb4:	bl	6880 <__sanitizer_symbolize_data@plt>
   25fb8:	mov	w22, w0
   25fbc:	tst	w0, #0xff
   25fc0:	b.ne	25fd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d24>  // b.any
   25fc4:	mov	w0, w22
   25fc8:	ldp	x21, x22, [sp, #16]
   25fcc:	ldr	x30, [sp, #32]
   25fd0:	ldp	x19, x20, [sp], #48
   25fd4:	ret
   25fd8:	mov	x1, x19
   25fdc:	mov	x0, x21
   25fe0:	bl	24d7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac8>
   25fe4:	ldr	x1, [x19, #48]
   25fe8:	add	x1, x20, x1
   25fec:	ldr	x20, [x19, #8]
   25ff0:	sub	x1, x1, x20
   25ff4:	str	x1, [x19, #48]
   25ff8:	b	25fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d10>
   25ffc:	stp	x19, x20, [sp, #-32]!
   26000:	stp	x21, x30, [sp, #16]
   26004:	mov	x19, x2
   26008:	add	x20, x0, #0x10
   2600c:	mov	w3, #0x4000                	// #16384
   26010:	mov	x2, x20
   26014:	ldr	x1, [x19, #24]
   26018:	ldr	x0, [x19, #16]
   2601c:	bl	6940 <__sanitizer_symbolize_code@plt>
   26020:	mov	w21, w0
   26024:	tst	w0, #0xff
   26028:	b.ne	2603c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d88>  // b.any
   2602c:	mov	w0, w21
   26030:	ldp	x21, x30, [sp, #16]
   26034:	ldp	x19, x20, [sp], #32
   26038:	ret
   2603c:	mov	x1, x19
   26040:	mov	x0, x20
   26044:	bl	24b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x489c>
   26048:	b	2602c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2604c:	stp	x19, x20, [sp, #-144]!
   26050:	stp	x21, x22, [sp, #16]
   26054:	stp	x23, x24, [sp, #32]
   26058:	stp	x25, x30, [sp, #48]
   2605c:	mov	x19, x0
   26060:	mov	x22, x2
   26064:	ldr	x21, [x2, #16]
   26068:	ldr	x23, [x2, #24]
   2606c:	str	xzr, [sp, #72]
   26070:	ldr	x0, [x0, #48]
   26074:	cbz	x0, 2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e98>
   26078:	mov	x20, #0x0                   	// #0
   2607c:	lsl	x24, x20, #3
   26080:	ldr	x0, [x19, #32]
   26084:	ldr	x0, [x0, x20, lsl #3]
   26088:	ldr	x1, [x0, #16424]
   2608c:	mov	x0, x21
   26090:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   26094:	cbz	w0, 26114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e60>
   26098:	add	x20, x20, #0x1
   2609c:	ldr	x0, [x19, #48]
   260a0:	cmp	x0, x20
   260a4:	b.hi	2607c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dc8>  // b.pmore
   260a8:	ldr	x0, [sp, #72]
   260ac:	cbz	x0, 2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e98>
   260b0:	ldr	x0, [sp, #72]
   260b4:	ldr	x1, [x0, #16424]
   260b8:	mov	x0, x21
   260bc:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   260c0:	sxtw	x4, w0
   260c4:	cbnz	w0, 2631c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6068>
   260c8:	add	x19, sp, #0x50
   260cc:	mov	x4, #0xffffffffffffffff    	// #-1
   260d0:	mov	x3, x23
   260d4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   260d8:	add	x2, x2, #0xaf8
   260dc:	mov	x1, #0x40                  	// #64
   260e0:	mov	x0, x19
   260e4:	bl	1d534 <OnPrint@@Base+0x4>
   260e8:	mov	x1, x19
   260ec:	ldr	x0, [sp, #72]
   260f0:	bl	24fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d28>
   260f4:	mov	w1, #0x0                   	// #0
   260f8:	cbnz	x0, 26338 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6084>
   260fc:	mov	w0, w1
   26100:	ldp	x21, x22, [sp, #16]
   26104:	ldp	x23, x24, [sp, #32]
   26108:	ldp	x25, x30, [sp, #48]
   2610c:	ldp	x19, x20, [sp], #144
   26110:	ret
   26114:	ldr	x4, [x19, #48]
   26118:	cmp	x4, x20
   2611c:	b.ls	26130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e7c>  // b.plast
   26120:	ldr	x0, [x19, #32]
   26124:	ldr	x0, [x0, x24]
   26128:	str	x0, [sp, #72]
   2612c:	b	260a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5df4>
   26130:	mov	x3, x20
   26134:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   26138:	add	x2, x2, #0x508
   2613c:	mov	w1, #0x1b6                 	// #438
   26140:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   26144:	add	x0, x0, #0x520
   26148:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2614c:	mov	x1, #0x4030                	// #16432
   26150:	ldr	x0, [x19, #24]
   26154:	bl	10634 <__sancov_default_options@@Base+0x2b0>
   26158:	mov	x20, x0
   2615c:	mov	w2, #0x0                   	// #0
   26160:	ldr	x1, [x19, #16]
   26164:	bl	24dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b10>
   26168:	adrp	x0, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   2616c:	add	x0, x0, #0xd98
   26170:	str	x0, [x20]
   26174:	mov	x0, x21
   26178:	bl	17d20 <__sanitizer_set_report_fd@@Base+0x1970>
   2617c:	str	x0, [x20, #16424]
   26180:	str	x20, [sp, #72]
   26184:	ldr	x3, [x19, #48]
   26188:	ldr	x0, [x19, #40]
   2618c:	lsr	x4, x0, #3
   26190:	cmp	x3, x0, lsr #3
   26194:	b.hi	261c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f10>  // b.pmore
   26198:	cmp	x3, x4
   2619c:	b.eq	261dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f28>  // b.none
   261a0:	ldr	x3, [x19, #32]
   261a4:	ldr	x0, [x19, #48]
   261a8:	add	x2, x0, #0x1
   261ac:	str	x2, [x19, #48]
   261b0:	mov	x2, #0x8                   	// #8
   261b4:	add	x1, sp, #0x48
   261b8:	add	x0, x3, x0, lsl #3
   261bc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   261c0:	b	260b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5dfc>
   261c4:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   261c8:	add	x2, x2, #0x5b0
   261cc:	mov	w1, #0x1be                 	// #446
   261d0:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   261d4:	add	x0, x0, #0x520
   261d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   261dc:	add	x0, x3, #0x1
   261e0:	tst	x3, x0
   261e4:	b.eq	262f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x603c>  // b.none
   261e8:	clz	x2, x0
   261ec:	mov	w1, #0x3f                  	// #63
   261f0:	sub	w1, w1, w2
   261f4:	add	w2, w1, #0x1
   261f8:	mov	x4, #0x1                   	// #1
   261fc:	lsl	x4, x4, x2
   26200:	cmp	x0, x4
   26204:	b.cs	2629c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fe8>  // b.hs, b.nlast
   26208:	mov	x2, #0x1                   	// #1
   2620c:	lsl	x1, x2, x1
   26210:	cmp	x0, x1
   26214:	b.ls	262b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6004>  // b.plast
   26218:	cmp	x3, x4
   2621c:	b.hi	262d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6024>  // b.pmore
   26220:	lsl	x20, x4, #3
   26224:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26228:	ldr	x0, [x0, #4000]
   2622c:	ldr	x0, [x0]
   26230:	cbz	x0, 262f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6044>
   26234:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26238:	ldr	x0, [x0, #4000]
   2623c:	ldr	x0, [x0]
   26240:	sub	x1, x0, #0x1
   26244:	tst	x0, x1
   26248:	b.ne	2630c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6058>  // b.any
   2624c:	add	x20, x20, x1
   26250:	neg	x0, x0
   26254:	and	x20, x20, x0
   26258:	mov	w2, #0x0                   	// #0
   2625c:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   26260:	add	x1, x1, #0x650
   26264:	mov	x0, x20
   26268:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   2626c:	mov	x25, x0
   26270:	add	x24, x19, #0x20
   26274:	ldr	x2, [x24, #16]
   26278:	lsl	x2, x2, #3
   2627c:	ldr	x1, [x19, #32]
   26280:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   26284:	ldr	x1, [x24, #8]
   26288:	ldr	x0, [x19, #32]
   2628c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   26290:	str	x25, [x19, #32]
   26294:	str	x20, [x24, #8]
   26298:	b	261a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5eec>
   2629c:	mov	x3, x0
   262a0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   262a4:	add	x2, x2, #0x5d0
   262a8:	mov	w1, #0x17b                 	// #379
   262ac:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   262b0:	add	x0, x0, #0x520
   262b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   262b8:	mov	x4, x1
   262bc:	mov	x3, x0
   262c0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   262c4:	add	x2, x2, #0x5f8
   262c8:	mov	w1, #0x17c                 	// #380
   262cc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   262d0:	add	x0, x0, #0x520
   262d4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   262d8:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   262dc:	add	x2, x2, #0x618
   262e0:	mov	w1, #0x1fd                 	// #509
   262e4:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   262e8:	add	x0, x0, #0x520
   262ec:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   262f0:	mov	x4, x0
   262f4:	b	26220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f6c>
   262f8:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   262fc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26300:	ldr	x1, [x1, #4000]
   26304:	str	x0, [x1]
   26308:	b	26234 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f80>
   2630c:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   26310:	add	x0, x0, #0x638
   26314:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   26318:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   2631c:	mov	x3, #0x0                   	// #0
   26320:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26324:	add	x2, x2, #0xa60
   26328:	mov	w1, #0x15c                 	// #348
   2632c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26330:	add	x0, x0, #0xaa8
   26334:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26338:	mov	x1, x22
   2633c:	bl	24b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x489c>
   26340:	mov	w1, #0x1                   	// #1
   26344:	b	260fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e48>
   26348:	stp	x19, x20, [sp, #-32]!
   2634c:	str	x30, [sp, #16]
   26350:	mov	x19, x1
   26354:	bl	243cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4118>
   26358:	mov	w20, w0
   2635c:	tst	w0, #0xff
   26360:	b.eq	2636c <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b8>  // b.none
   26364:	ldrb	w0, [x19]
   26368:	cbnz	w0, 2637c <__sanitizer_get_module_and_offset_for_pc@@Base+0x60c8>
   2636c:	mov	w0, w20
   26370:	ldr	x30, [sp, #16]
   26374:	ldp	x19, x20, [sp], #32
   26378:	ret
   2637c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26380:	add	x1, x1, #0xe90
   26384:	add	x0, x19, #0x1
   26388:	bl	17f68 <__sanitizer_set_report_fd@@Base+0x1bb8>
   2638c:	cbz	x0, 26398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60e4>
   26390:	strb	wzr, [x0]
   26394:	b	2636c <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b8>
   26398:	mov	x4, #0x0                   	// #0
   2639c:	mov	x3, #0x0                   	// #0
   263a0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   263a4:	add	x2, x2, #0xe78
   263a8:	mov	w1, #0x11e                 	// #286
   263ac:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   263b0:	add	x0, x0, #0xaa8
   263b4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   263b8:	mov	x1, #0x0                   	// #0
   263bc:	adrp	x3, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   263c0:	add	x3, x3, #0x240
   263c4:	mov	w4, w1
   263c8:	ldr	x2, [x3, x1, lsl #3]
   263cc:	cbz	x2, 263e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6130>
   263d0:	add	x1, x1, #0x1
   263d4:	cmp	x1, #0x5
   263d8:	b.ne	263c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6110>  // b.any
   263dc:	mov	w0, #0x0                   	// #0
   263e0:	ret
   263e4:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   263e8:	add	x1, x1, #0x240
   263ec:	str	x0, [x1, w4, sxtw #3]
   263f0:	mov	w0, #0x1                   	// #1
   263f4:	b	263e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x612c>
   263f8:	mov	x1, #0x0                   	// #0
   263fc:	adrp	x3, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26400:	add	x3, x3, #0x240
   26404:	ldr	x2, [x3, x1, lsl #3]
   26408:	cmp	x2, x0
   2640c:	b.eq	26424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6170>  // b.none
   26410:	add	x1, x1, #0x1
   26414:	cmp	x1, #0x5
   26418:	b.ne	26404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6150>  // b.any
   2641c:	mov	w0, #0x0                   	// #0
   26420:	ret
   26424:	stp	x19, x30, [sp, #-16]!
   26428:	sbfiz	x0, x1, #3, #32
   2642c:	mov	w2, #0x4                   	// #4
   26430:	sub	w2, w2, w1
   26434:	adrp	x19, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26438:	add	x19, x19, #0x240
   2643c:	add	x1, x0, #0x8
   26440:	sbfiz	x2, x2, #3, #32
   26444:	add	x1, x19, x1
   26448:	add	x0, x19, x0
   2644c:	bl	17b0c <__sanitizer_set_report_fd@@Base+0x175c>
   26450:	str	xzr, [x19, #32]
   26454:	mov	w0, #0x1                   	// #1
   26458:	ldp	x19, x30, [sp], #16
   2645c:	ret
   26460:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26464:	str	x0, [x1, #616]
   26468:	ret
   2646c:	stp	x19, x20, [sp, #-32]!
   26470:	str	x30, [sp, #16]
   26474:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26478:	ldr	x0, [x0, #616]
   2647c:	cbz	x0, 26484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d0>
   26480:	blr	x0
   26484:	mov	x19, #0x4                   	// #4
   26488:	adrp	x20, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2648c:	add	x20, x20, #0x240
   26490:	b	264a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61ec>
   26494:	sub	x19, x19, #0x1
   26498:	cmn	x19, #0x1
   2649c:	b.eq	264b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61fc>  // b.none
   264a0:	ldr	x0, [x20, x19, lsl #3]
   264a4:	cbz	x0, 26494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   264a8:	blr	x0
   264ac:	b	26494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x61e0>
   264b0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   264b4:	ldr	x0, [x0, #4040]
   264b8:	ldrb	w0, [x0, #220]
   264bc:	cbz	w0, 264c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6210>
   264c0:	bl	1c0d0 <__sanitizer_set_report_fd@@Base+0x5d20>
   264c4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   264c8:	ldr	x0, [x0, #4040]
   264cc:	ldr	w0, [x0, #216]
   264d0:	bl	18bdc <__sanitizer_set_report_fd@@Base+0x282c>
   264d4:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   264d8:	str	x0, [x1, #624]
   264dc:	ret
   264e0:	stp	x19, x20, [sp, #-48]!
   264e4:	stp	x21, x22, [sp, #16]
   264e8:	stp	x23, x30, [sp, #32]
   264ec:	mov	x19, x0
   264f0:	mov	w20, w1
   264f4:	mov	x21, x2
   264f8:	mov	x22, x3
   264fc:	mov	x23, x4
   26500:	adrp	x5, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26504:	add	x5, x5, #0x240
   26508:	add	x5, x5, #0x38
   2650c:	ldxr	w0, [x5]
   26510:	add	w1, w0, #0x1
   26514:	stlxr	w2, w1, [x5]
   26518:	cbnz	w2, 2650c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>
   2651c:	dmb	ish
   26520:	cmp	w0, #0xa
   26524:	b.hi	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62bc>  // b.pmore
   26528:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   2652c:	ldr	x5, [x0, #624]
   26530:	cbz	x5, 2654c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6298>
   26534:	mov	x4, x23
   26538:	mov	x3, x22
   2653c:	mov	x2, x21
   26540:	mov	w1, w20
   26544:	mov	x0, x19
   26548:	blr	x5
   2654c:	mov	x5, x23
   26550:	mov	x4, x22
   26554:	mov	x3, x21
   26558:	mov	w2, w20
   2655c:	mov	x1, x19
   26560:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26564:	add	x0, x0, #0xea0
   26568:	bl	1d908 <OnPrint@@Base+0x3d8>
   2656c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   26570:	mov	w0, #0x2                   	// #2
   26574:	bl	1c0a8 <__sanitizer_set_report_fd@@Base+0x5cf8>
   26578:	brk	#0x3e8

000000000002657c <__sanitizer_set_death_callback@@Base>:
   2657c:	adrp	x1, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   26580:	str	x0, [x1, #616]
   26584:	ret
   26588:	ldr	x2, [x0, #32]
   2658c:	cmp	x1, x2
   26590:	b.eq	2659c <__sanitizer_set_death_callback@@Base+0x20>  // b.none
   26594:	mov	w0, #0x0                   	// #0
   26598:	ret
   2659c:	ldr	w0, [x0, #112]
   265a0:	tst	w0, #0xfffffffb
   265a4:	cset	w0, ne  // ne = any
   265a8:	b	26598 <__sanitizer_set_death_callback@@Base+0x1c>
   265ac:	adrp	x2, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   265b0:	add	x2, x2, #0xe20
   265b4:	str	x2, [x0]
   265b8:	str	w1, [x0, #8]
   265bc:	str	xzr, [x0, #16]
   265c0:	str	wzr, [x0, #24]
   265c4:	str	xzr, [x0, #32]
   265c8:	str	xzr, [x0, #40]
   265cc:	str	wzr, [x0, #112]
   265d0:	strb	wzr, [x0, #116]
   265d4:	strb	wzr, [x0, #117]
   265d8:	str	wzr, [x0, #120]
   265dc:	str	xzr, [x0, #128]
   265e0:	strb	wzr, [x0, #48]
   265e4:	dmb	ish
   265e8:	str	wzr, [x0, #136]
   265ec:	ret
   265f0:	str	x30, [sp, #-16]!
   265f4:	adrp	x1, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   265f8:	add	x1, x1, #0xe20
   265fc:	str	x1, [x0]
   26600:	mov	x4, #0x0                   	// #0
   26604:	mov	x3, #0x0                   	// #0
   26608:	adrp	x2, 3c000 <__asan_backtrace_vector_release@@Base+0x1c58>
   2660c:	add	x2, x2, #0xc38
   26610:	mov	w1, #0x1b                  	// #27
   26614:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26618:	add	x0, x0, #0xed0
   2661c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26620:	strb	wzr, [x0, #48]
   26624:	cbz	x1, 26648 <__sanitizer_set_death_callback@@Base+0xcc>
   26628:	stp	x19, x30, [sp, #-16]!
   2662c:	mov	x19, x0
   26630:	mov	x2, #0x40                  	// #64
   26634:	add	x0, x0, #0x30
   26638:	bl	17e60 <__sanitizer_set_report_fd@@Base+0x1ab0>
   2663c:	strb	wzr, [x19, #111]
   26640:	ldp	x19, x30, [sp], #16
   26644:	ret
   26648:	ret
   2664c:	str	x30, [sp, #-16]!
   26650:	ldr	w1, [x0, #112]
   26654:	sub	w1, w1, #0x2
   26658:	cmp	w1, #0x1
   2665c:	b.hi	26680 <__sanitizer_set_death_callback@@Base+0x104>  // b.pmore
   26660:	mov	w1, #0x4                   	// #4
   26664:	str	w1, [x0, #112]
   26668:	str	xzr, [x0, #40]
   2666c:	ldr	x1, [x0]
   26670:	ldr	x1, [x1]
   26674:	blr	x1
   26678:	ldr	x30, [sp], #16
   2667c:	ret
   26680:	mov	x4, #0x0                   	// #0
   26684:	mov	x3, #0x0                   	// #0
   26688:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2668c:	add	x2, x2, #0xf18
   26690:	mov	w1, #0x27                  	// #39
   26694:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26698:	add	x0, x0, #0xed0
   2669c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   266a0:	dmb	ish
   266a4:	mov	w1, #0x1                   	// #1
   266a8:	str	w1, [x0, #136]
   266ac:	ret
   266b0:	ldr	w0, [x0, #136]
   266b4:	dmb	ish
   266b8:	cmp	w0, #0x0
   266bc:	cset	w0, ne  // ne = any
   266c0:	ret
   266c4:	str	x30, [sp, #-16]!
   266c8:	ldrb	w2, [x0, #116]
   266cc:	cbnz	w2, 266fc <__sanitizer_set_death_callback@@Base+0x180>
   266d0:	ldr	w4, [x0, #112]
   266d4:	cmp	x4, #0x3
   266d8:	b.ne	2671c <__sanitizer_set_death_callback@@Base+0x1a0>  // b.any
   266dc:	mov	w2, #0x4                   	// #4
   266e0:	str	w2, [x0, #112]
   266e4:	str	xzr, [x0, #40]
   266e8:	ldr	x2, [x0]
   266ec:	ldr	x2, [x2, #8]
   266f0:	blr	x2
   266f4:	ldr	x30, [sp], #16
   266f8:	ret
   266fc:	mov	x4, #0x1                   	// #1
   26700:	mov	x3, #0x0                   	// #0
   26704:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26708:	add	x2, x2, #0xf68
   2670c:	mov	w1, #0x38                  	// #56
   26710:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26714:	add	x0, x0, #0xed0
   26718:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2671c:	mov	x3, #0x3                   	// #3
   26720:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26724:	add	x2, x2, #0xf88
   26728:	mov	w1, #0x39                  	// #57
   2672c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26730:	add	x0, x0, #0xed0
   26734:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26738:	str	x30, [sp, #-16]!
   2673c:	ldrb	w1, [x0, #116]
   26740:	cbz	w1, 26750 <__sanitizer_set_death_callback@@Base+0x1d4>
   26744:	ldr	w1, [x0, #112]
   26748:	cmp	w1, #0x1
   2674c:	b.ne	26758 <__sanitizer_set_death_callback@@Base+0x1dc>  // b.any
   26750:	mov	w1, #0x3                   	// #3
   26754:	str	w1, [x0, #112]
   26758:	ldr	x1, [x0]
   2675c:	ldr	x1, [x1, #16]
   26760:	blr	x1
   26764:	ldr	x30, [sp], #16
   26768:	ret
   2676c:	str	x30, [sp, #-16]!
   26770:	mov	w5, #0x2                   	// #2
   26774:	str	w5, [x0, #112]
   26778:	str	x1, [x0, #32]
   2677c:	strb	w2, [x0, #117]
   26780:	ldr	x1, [x0]
   26784:	ldr	x2, [x1, #24]
   26788:	mov	x1, x3
   2678c:	blr	x2
   26790:	ldr	x30, [sp], #16
   26794:	ret
   26798:	str	x30, [sp, #-16]!
   2679c:	mov	w6, #0x1                   	// #1
   267a0:	str	w6, [x0, #112]
   267a4:	str	x1, [x0, #40]
   267a8:	str	x2, [x0, #16]
   267ac:	strb	w3, [x0, #116]
   267b0:	ldr	w1, [x0, #8]
   267b4:	cbz	w1, 267bc <__sanitizer_set_death_callback@@Base+0x240>
   267b8:	str	w4, [x0, #120]
   267bc:	ldr	x1, [x0]
   267c0:	ldr	x2, [x1, #32]
   267c4:	mov	x1, x5
   267c8:	blr	x2
   267cc:	ldr	x30, [sp], #16
   267d0:	ret
   267d4:	stp	x19, x30, [sp, #-16]!
   267d8:	mov	x19, x0
   267dc:	str	wzr, [x0, #112]
   267e0:	mov	x1, #0x0                   	// #0
   267e4:	bl	26620 <__sanitizer_set_death_callback@@Base+0xa4>
   267e8:	dmb	ish
   267ec:	str	wzr, [x19, #136]
   267f0:	ldr	x0, [x19]
   267f4:	ldr	x1, [x0, #40]
   267f8:	mov	x0, x19
   267fc:	blr	x1
   26800:	ldp	x19, x30, [sp], #16
   26804:	ret
   26808:	stp	x19, x30, [sp, #-16]!
   2680c:	mov	x19, x0
   26810:	str	x1, [x0]
   26814:	str	w2, [x0, #8]
   26818:	str	w3, [x0, #12]
   2681c:	str	w4, [x0, #16]
   26820:	add	x0, x0, #0x18
   26824:	bl	18ea0 <__sanitizer_set_report_fd@@Base+0x2af0>
   26828:	str	wzr, [x19, #112]
   2682c:	str	xzr, [x19, #120]
   26830:	str	xzr, [x19, #128]
   26834:	str	xzr, [x19, #136]
   26838:	str	xzr, [x19, #144]
   2683c:	ldr	w0, [x19, #8]
   26840:	mov	w2, #0x0                   	// #0
   26844:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26848:	add	x1, x1, #0xfb0
   2684c:	lsl	x0, x0, #3
   26850:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   26854:	str	x0, [x19, #152]
   26858:	str	xzr, [x19, #176]
   2685c:	str	xzr, [x19, #168]
   26860:	str	xzr, [x19, #160]
   26864:	str	xzr, [x19, #200]
   26868:	str	xzr, [x19, #192]
   2686c:	str	xzr, [x19, #184]
   26870:	ldp	x19, x30, [sp], #16
   26874:	ret
   26878:	stp	x19, x20, [sp, #-48]!
   2687c:	stp	x21, x22, [sp, #16]
   26880:	stp	x23, x30, [sp, #32]
   26884:	mov	x19, x0
   26888:	mov	x22, x1
   2688c:	mov	x21, x2
   26890:	mov	x20, x3
   26894:	add	x23, x0, #0x18
   26898:	mov	x0, x23
   2689c:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   268a0:	cbz	x22, 268ac <__sanitizer_set_death_callback@@Base+0x330>
   268a4:	ldr	w0, [x19, #112]
   268a8:	str	x0, [x22]
   268ac:	cbz	x21, 268b8 <__sanitizer_set_death_callback@@Base+0x33c>
   268b0:	ldr	x0, [x19, #144]
   268b4:	str	x0, [x21]
   268b8:	cbz	x20, 268c4 <__sanitizer_set_death_callback@@Base+0x348>
   268bc:	ldr	x0, [x19, #128]
   268c0:	str	x0, [x20]
   268c4:	mov	x0, x23
   268c8:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   268cc:	ldp	x21, x22, [sp, #16]
   268d0:	ldp	x23, x30, [sp, #32]
   268d4:	ldp	x19, x20, [sp], #48
   268d8:	ret
   268dc:	stp	x19, x20, [sp, #-32]!
   268e0:	str	x30, [sp, #16]
   268e4:	mov	x19, x0
   268e8:	add	x20, x0, #0x18
   268ec:	mov	x0, x20
   268f0:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   268f4:	ldr	x19, [x19, #136]
   268f8:	mov	x0, x20
   268fc:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26900:	mov	x0, x19
   26904:	ldr	x30, [sp, #16]
   26908:	ldp	x19, x20, [sp], #32
   2690c:	ret
   26910:	stp	x19, x20, [sp, #-48]!
   26914:	stp	x21, x22, [sp, #16]
   26918:	str	x30, [sp, #32]
   2691c:	mov	x20, x0
   26920:	mov	x21, x1
   26924:	mov	x22, x2
   26928:	add	x0, x0, #0x18
   2692c:	bl	18fa4 <__sanitizer_set_report_fd@@Base+0x2bf4>
   26930:	ldr	w0, [x20, #112]
   26934:	cbz	w0, 26968 <__sanitizer_set_death_callback@@Base+0x3ec>
   26938:	mov	w19, #0x0                   	// #0
   2693c:	b	26950 <__sanitizer_set_death_callback@@Base+0x3d4>
   26940:	add	w19, w19, #0x1
   26944:	ldr	w0, [x20, #112]
   26948:	cmp	w0, w19
   2694c:	b.ls	26968 <__sanitizer_set_death_callback@@Base+0x3ec>  // b.plast
   26950:	ldr	x0, [x20, #152]
   26954:	ldr	x0, [x0, w19, uxtw #3]
   26958:	cbz	x0, 26940 <__sanitizer_set_death_callback@@Base+0x3c4>
   2695c:	mov	x1, x22
   26960:	blr	x21
   26964:	b	26940 <__sanitizer_set_death_callback@@Base+0x3c4>
   26968:	ldp	x21, x22, [sp, #16]
   2696c:	ldr	x30, [sp, #32]
   26970:	ldp	x19, x20, [sp], #48
   26974:	ret
   26978:	stp	x19, x20, [sp, #-64]!
   2697c:	stp	x21, x22, [sp, #16]
   26980:	stp	x23, x24, [sp, #32]
   26984:	str	x30, [sp, #48]
   26988:	mov	x21, x0
   2698c:	mov	x22, x1
   26990:	mov	x23, x2
   26994:	add	x24, x0, #0x18
   26998:	mov	x0, x24
   2699c:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   269a0:	ldr	w0, [x21, #112]
   269a4:	cbz	w0, 26a0c <__sanitizer_set_death_callback@@Base+0x490>
   269a8:	mov	w19, #0x0                   	// #0
   269ac:	b	269c0 <__sanitizer_set_death_callback@@Base+0x444>
   269b0:	add	w19, w19, #0x1
   269b4:	ldr	w0, [x21, #112]
   269b8:	cmp	w0, w19
   269bc:	b.ls	269e8 <__sanitizer_set_death_callback@@Base+0x46c>  // b.plast
   269c0:	ldr	x0, [x21, #152]
   269c4:	ldr	x20, [x0, w19, uxtw #3]
   269c8:	cbz	x20, 269b0 <__sanitizer_set_death_callback@@Base+0x434>
   269cc:	mov	x1, x23
   269d0:	mov	x0, x20
   269d4:	blr	x22
   269d8:	and	w0, w0, #0xff
   269dc:	cbz	w0, 269b0 <__sanitizer_set_death_callback@@Base+0x434>
   269e0:	ldr	w19, [x20, #8]
   269e4:	b	269ec <__sanitizer_set_death_callback@@Base+0x470>
   269e8:	mov	w19, #0xffffffff            	// #-1
   269ec:	mov	x0, x24
   269f0:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   269f4:	mov	w0, w19
   269f8:	ldp	x21, x22, [sp, #16]
   269fc:	ldp	x23, x24, [sp, #32]
   26a00:	ldr	x30, [sp, #48]
   26a04:	ldp	x19, x20, [sp], #64
   26a08:	ret
   26a0c:	mov	w19, #0xffffffff            	// #-1
   26a10:	b	269ec <__sanitizer_set_death_callback@@Base+0x470>
   26a14:	stp	x19, x20, [sp, #-48]!
   26a18:	stp	x21, x22, [sp, #16]
   26a1c:	stp	x23, x30, [sp, #32]
   26a20:	mov	x21, x0
   26a24:	mov	x22, x1
   26a28:	mov	x23, x2
   26a2c:	add	x0, x0, #0x18
   26a30:	bl	18fa4 <__sanitizer_set_report_fd@@Base+0x2bf4>
   26a34:	ldr	w0, [x21, #112]
   26a38:	cbz	w0, 26a90 <__sanitizer_set_death_callback@@Base+0x514>
   26a3c:	mov	w19, #0x0                   	// #0
   26a40:	b	26a54 <__sanitizer_set_death_callback@@Base+0x4d8>
   26a44:	add	w19, w19, #0x1
   26a48:	ldr	w0, [x21, #112]
   26a4c:	cmp	w0, w19
   26a50:	b.ls	26a78 <__sanitizer_set_death_callback@@Base+0x4fc>  // b.plast
   26a54:	ldr	x0, [x21, #152]
   26a58:	ldr	x20, [x0, w19, uxtw #3]
   26a5c:	cbz	x20, 26a44 <__sanitizer_set_death_callback@@Base+0x4c8>
   26a60:	mov	x1, x23
   26a64:	mov	x0, x20
   26a68:	blr	x22
   26a6c:	and	w0, w0, #0xff
   26a70:	cbz	w0, 26a44 <__sanitizer_set_death_callback@@Base+0x4c8>
   26a74:	b	26a7c <__sanitizer_set_death_callback@@Base+0x500>
   26a78:	mov	x20, #0x0                   	// #0
   26a7c:	mov	x0, x20
   26a80:	ldp	x21, x22, [sp, #16]
   26a84:	ldp	x23, x30, [sp, #32]
   26a88:	ldp	x19, x20, [sp], #48
   26a8c:	ret
   26a90:	mov	x20, #0x0                   	// #0
   26a94:	b	26a7c <__sanitizer_set_death_callback@@Base+0x500>
   26a98:	str	x30, [sp, #-16]!
   26a9c:	mov	x2, x1
   26aa0:	adrp	x1, 26000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d4c>
   26aa4:	add	x1, x1, #0x588
   26aa8:	bl	26a14 <__sanitizer_set_death_callback@@Base+0x498>
   26aac:	ldr	x30, [sp], #16
   26ab0:	ret
   26ab4:	stp	x19, x20, [sp, #-48]!
   26ab8:	stp	x21, x22, [sp, #16]
   26abc:	str	x30, [sp, #32]
   26ac0:	mov	x19, x0
   26ac4:	mov	w20, w1
   26ac8:	mov	x21, x2
   26acc:	add	x22, x0, #0x18
   26ad0:	mov	x0, x22
   26ad4:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   26ad8:	mov	w3, w20
   26adc:	ldr	w4, [x19, #112]
   26ae0:	cmp	x4, w20, uxtw
   26ae4:	b.ls	26b20 <__sanitizer_set_death_callback@@Base+0x5a4>  // b.plast
   26ae8:	ldr	x0, [x19, #152]
   26aec:	ldr	x0, [x0, x3, lsl #3]
   26af0:	cbz	x0, 26b38 <__sanitizer_set_death_callback@@Base+0x5bc>
   26af4:	ldr	w4, [x0, #112]
   26af8:	cmp	x4, #0x2
   26afc:	b.ne	26b58 <__sanitizer_set_death_callback@@Base+0x5dc>  // b.any
   26b00:	mov	x1, x21
   26b04:	bl	26620 <__sanitizer_set_death_callback@@Base+0xa4>
   26b08:	mov	x0, x22
   26b0c:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26b10:	ldp	x21, x22, [sp, #16]
   26b14:	ldr	x30, [sp, #32]
   26b18:	ldp	x19, x20, [sp], #48
   26b1c:	ret
   26b20:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26b24:	add	x2, x2, #0xfc0
   26b28:	mov	w1, #0xd7                  	// #215
   26b2c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26b30:	add	x0, x0, #0xed0
   26b34:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26b38:	mov	x4, #0x0                   	// #0
   26b3c:	mov	x3, #0x0                   	// #0
   26b40:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26b44:	add	x2, x2, #0xfe0
   26b48:	mov	w1, #0xd9                  	// #217
   26b4c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26b50:	add	x0, x0, #0xed0
   26b54:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26b58:	mov	x3, #0x2                   	// #2
   26b5c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26b60:	add	x2, x2, #0xff8
   26b64:	mov	w1, #0xda                  	// #218
   26b68:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26b6c:	add	x0, x0, #0xed0
   26b70:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26b74:	stp	x19, x20, [sp, #-48]!
   26b78:	stp	x21, x22, [sp, #16]
   26b7c:	str	x30, [sp, #32]
   26b80:	mov	x20, x0
   26b84:	mov	x19, x1
   26b88:	mov	x21, x2
   26b8c:	add	x22, x0, #0x18
   26b90:	mov	x0, x22
   26b94:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   26b98:	ldr	w5, [x20, #112]
   26b9c:	cbz	w5, 26be8 <__sanitizer_set_death_callback@@Base+0x66c>
   26ba0:	ldr	x6, [x20, #152]
   26ba4:	mov	x3, #0x0                   	// #0
   26ba8:	b	26bb8 <__sanitizer_set_death_callback@@Base+0x63c>
   26bac:	add	x3, x3, #0x1
   26bb0:	cmp	w5, w3
   26bb4:	b.ls	26be8 <__sanitizer_set_death_callback@@Base+0x66c>  // b.plast
   26bb8:	ldr	x0, [x6, x3, lsl #3]
   26bbc:	cbz	x0, 26bac <__sanitizer_set_death_callback@@Base+0x630>
   26bc0:	ldr	x4, [x0, #40]
   26bc4:	cmp	x4, x19
   26bc8:	b.ne	26bac <__sanitizer_set_death_callback@@Base+0x630>  // b.any
   26bcc:	ldr	w1, [x0, #112]
   26bd0:	cbz	w1, 26bac <__sanitizer_set_death_callback@@Base+0x630>
   26bd4:	mov	x1, x21
   26bd8:	bl	26620 <__sanitizer_set_death_callback@@Base+0xa4>
   26bdc:	mov	x0, x22
   26be0:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26be4:	b	26bf0 <__sanitizer_set_death_callback@@Base+0x674>
   26be8:	mov	x0, x22
   26bec:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26bf0:	ldp	x21, x22, [sp, #16]
   26bf4:	ldr	x30, [sp, #32]
   26bf8:	ldp	x19, x20, [sp], #48
   26bfc:	ret
   26c00:	stp	x19, x20, [sp, #-64]!
   26c04:	stp	x21, x22, [sp, #16]
   26c08:	stp	x23, x24, [sp, #32]
   26c0c:	str	x30, [sp, #48]
   26c10:	mov	x19, x0
   26c14:	mov	w20, w1
   26c18:	mov	x21, x2
   26c1c:	and	w24, w3, #0xff
   26c20:	mov	x22, x4
   26c24:	add	x23, x0, #0x18
   26c28:	mov	x0, x23
   26c2c:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   26c30:	ldr	x0, [x19, #144]
   26c34:	add	x0, x0, #0x1
   26c38:	str	x0, [x19, #144]
   26c3c:	mov	w3, w20
   26c40:	ldr	w4, [x19, #112]
   26c44:	cmp	x4, w20, uxtw
   26c48:	b.ls	26c90 <__sanitizer_set_death_callback@@Base+0x714>  // b.plast
   26c4c:	ldr	x0, [x19, #152]
   26c50:	ldr	x0, [x0, x3, lsl #3]
   26c54:	cbz	x0, 26ca8 <__sanitizer_set_death_callback@@Base+0x72c>
   26c58:	ldr	w4, [x0, #112]
   26c5c:	cmp	x4, #0x1
   26c60:	b.ne	26cc8 <__sanitizer_set_death_callback@@Base+0x74c>  // b.any
   26c64:	mov	x3, x22
   26c68:	mov	w2, w24
   26c6c:	mov	x1, x21
   26c70:	bl	2676c <__sanitizer_set_death_callback@@Base+0x1f0>
   26c74:	mov	x0, x23
   26c78:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26c7c:	ldp	x21, x22, [sp, #16]
   26c80:	ldp	x23, x24, [sp, #32]
   26c84:	ldr	x30, [sp, #48]
   26c88:	ldp	x19, x20, [sp], #64
   26c8c:	ret
   26c90:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26c94:	add	x2, x2, #0xfc0
   26c98:	mov	w1, #0x134                 	// #308
   26c9c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26ca0:	add	x0, x0, #0xed0
   26ca4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26ca8:	mov	x4, #0x0                   	// #0
   26cac:	mov	x3, #0x0                   	// #0
   26cb0:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26cb4:	add	x2, x2, #0xfe0
   26cb8:	mov	w1, #0x136                 	// #310
   26cbc:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26cc0:	add	x0, x0, #0xed0
   26cc4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26cc8:	mov	x3, #0x1                   	// #1
   26ccc:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   26cd0:	add	x2, x2, #0x40
   26cd4:	mov	w1, #0x137                 	// #311
   26cd8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26cdc:	add	x0, x0, #0xed0
   26ce0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26ce4:	stp	x19, x20, [sp, #-32]!
   26ce8:	str	x30, [sp, #16]
   26cec:	mov	x19, x0
   26cf0:	ldr	w0, [x1, #8]
   26cf4:	cbz	w0, 26d24 <__sanitizer_set_death_callback@@Base+0x7a8>
   26cf8:	ldr	x0, [x19, #160]
   26cfc:	cbnz	x0, 26d30 <__sanitizer_set_death_callback@@Base+0x7b4>
   26d00:	str	xzr, [x1, #128]
   26d04:	str	x1, [x19, #176]
   26d08:	str	x1, [x19, #168]
   26d0c:	mov	x0, #0x1                   	// #1
   26d10:	str	x0, [x19, #160]
   26d14:	ldr	x0, [x19, #160]
   26d18:	ldr	w1, [x19, #12]
   26d1c:	cmp	x1, x0
   26d20:	b.cc	26d50 <__sanitizer_set_death_callback@@Base+0x7d4>  // b.lo, b.ul, b.last
   26d24:	ldr	x30, [sp, #16]
   26d28:	ldp	x19, x20, [sp], #32
   26d2c:	ret
   26d30:	str	xzr, [x1, #128]
   26d34:	ldr	x2, [x19, #176]
   26d38:	str	x1, [x2, #128]
   26d3c:	str	x1, [x19, #176]
   26d40:	ldr	x0, [x19, #160]
   26d44:	add	x0, x0, #0x1
   26d48:	str	x0, [x19, #160]
   26d4c:	b	26d14 <__sanitizer_set_death_callback@@Base+0x798>
   26d50:	ldr	x20, [x19, #168]
   26d54:	ldr	x1, [x20, #128]
   26d58:	str	x1, [x19, #168]
   26d5c:	cbz	x1, 26db8 <__sanitizer_set_death_callback@@Base+0x83c>
   26d60:	sub	x0, x0, #0x1
   26d64:	str	x0, [x19, #160]
   26d68:	ldr	w3, [x20, #112]
   26d6c:	cmp	x3, #0x4
   26d70:	b.ne	26dc0 <__sanitizer_set_death_callback@@Base+0x844>  // b.any
   26d74:	mov	x0, x20
   26d78:	bl	267d4 <__sanitizer_set_death_callback@@Base+0x258>
   26d7c:	ldr	w0, [x20, #24]
   26d80:	add	w0, w0, #0x1
   26d84:	str	w0, [x20, #24]
   26d88:	ldr	w1, [x19, #16]
   26d8c:	cmp	w1, #0x0
   26d90:	ccmp	w0, w1, #0x0, ne  // ne = any
   26d94:	b.cs	26d24 <__sanitizer_set_death_callback@@Base+0x7a8>  // b.hs, b.nlast
   26d98:	ldr	x0, [x19, #184]
   26d9c:	cbnz	x0, 26ddc <__sanitizer_set_death_callback@@Base+0x860>
   26da0:	str	xzr, [x20, #128]
   26da4:	str	x20, [x19, #200]
   26da8:	str	x20, [x19, #192]
   26dac:	mov	x0, #0x1                   	// #1
   26db0:	str	x0, [x19, #184]
   26db4:	b	26d24 <__sanitizer_set_death_callback@@Base+0x7a8>
   26db8:	str	xzr, [x19, #176]
   26dbc:	b	26d60 <__sanitizer_set_death_callback@@Base+0x7e4>
   26dc0:	mov	x4, #0x4                   	// #4
   26dc4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   26dc8:	add	x2, x2, #0x70
   26dcc:	mov	w1, #0x143                 	// #323
   26dd0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26dd4:	add	x0, x0, #0xed0
   26dd8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26ddc:	str	xzr, [x20, #128]
   26de0:	ldr	x1, [x19, #200]
   26de4:	str	x20, [x1, #128]
   26de8:	str	x20, [x19, #200]
   26dec:	ldr	x0, [x19, #184]
   26df0:	add	x0, x0, #0x1
   26df4:	str	x0, [x19, #184]
   26df8:	b	26d24 <__sanitizer_set_death_callback@@Base+0x7a8>
   26dfc:	stp	x19, x20, [sp, #-48]!
   26e00:	stp	x21, x22, [sp, #16]
   26e04:	str	x30, [sp, #32]
   26e08:	mov	x19, x0
   26e0c:	mov	w20, w1
   26e10:	mov	x21, x2
   26e14:	add	x22, x0, #0x18
   26e18:	mov	x0, x22
   26e1c:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   26e20:	mov	w3, w20
   26e24:	ldr	w4, [x19, #112]
   26e28:	cmp	x4, w20, uxtw
   26e2c:	b.ls	26e84 <__sanitizer_set_death_callback@@Base+0x908>  // b.plast
   26e30:	ldr	x0, [x19, #152]
   26e34:	ldr	x20, [x0, x3, lsl #3]
   26e38:	cbz	x20, 26e9c <__sanitizer_set_death_callback@@Base+0x920>
   26e3c:	ldr	w0, [x20, #112]
   26e40:	cbz	w0, 26ebc <__sanitizer_set_death_callback@@Base+0x940>
   26e44:	ldr	x0, [x20]
   26e48:	ldr	x2, [x0, #48]
   26e4c:	mov	x1, x21
   26e50:	mov	x0, x20
   26e54:	blr	x2
   26e58:	ldr	w0, [x20, #112]
   26e5c:	cmp	w0, #0x3
   26e60:	b.eq	26ee0 <__sanitizer_set_death_callback@@Base+0x964>  // b.none
   26e64:	mov	w0, #0x1                   	// #1
   26e68:	strb	w0, [x20, #116]
   26e6c:	mov	x0, x22
   26e70:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26e74:	ldp	x21, x22, [sp, #16]
   26e78:	ldr	x30, [sp, #32]
   26e7c:	ldp	x19, x20, [sp], #48
   26e80:	ret
   26e84:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26e88:	add	x2, x2, #0xfc0
   26e8c:	mov	w1, #0xed                  	// #237
   26e90:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26e94:	add	x0, x0, #0xed0
   26e98:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26e9c:	mov	x4, #0x0                   	// #0
   26ea0:	mov	x3, #0x0                   	// #0
   26ea4:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26ea8:	add	x2, x2, #0xfe0
   26eac:	mov	w1, #0xef                  	// #239
   26eb0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26eb4:	add	x0, x0, #0xed0
   26eb8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26ebc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26ec0:	ldr	x0, [x0, #4008]
   26ec4:	ldr	x1, [x0]
   26ec8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   26ecc:	add	x0, x0, #0xa0
   26ed0:	bl	1d908 <OnPrint@@Base+0x3d8>
   26ed4:	mov	x0, x22
   26ed8:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26edc:	b	26e74 <__sanitizer_set_death_callback@@Base+0x8f8>
   26ee0:	mov	x0, x20
   26ee4:	bl	2664c <__sanitizer_set_death_callback@@Base+0xd0>
   26ee8:	mov	x1, x20
   26eec:	mov	x0, x19
   26ef0:	bl	26ce4 <__sanitizer_set_death_callback@@Base+0x768>
   26ef4:	b	26e6c <__sanitizer_set_death_callback@@Base+0x8f0>
   26ef8:	stp	x19, x20, [sp, #-64]!
   26efc:	stp	x21, x22, [sp, #16]
   26f00:	stp	x23, x24, [sp, #32]
   26f04:	str	x30, [sp, #48]
   26f08:	mov	x20, x0
   26f0c:	mov	x24, x2
   26f10:	mov	w23, w1
   26f14:	ubfiz	x21, x1, #3, #32
   26f18:	add	x22, x0, #0x18
   26f1c:	mov	x0, x22
   26f20:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   26f24:	ldr	w4, [x20, #112]
   26f28:	cmp	x23, x4
   26f2c:	b.cs	26f64 <__sanitizer_set_death_callback@@Base+0x9e8>  // b.hs, b.nlast
   26f30:	ldr	x0, [x20, #152]
   26f34:	ldr	x19, [x0, x21]
   26f38:	cbz	x19, 26f80 <__sanitizer_set_death_callback@@Base+0xa04>
   26f3c:	ldr	w0, [x19, #112]
   26f40:	cbz	w0, 26fa0 <__sanitizer_set_death_callback@@Base+0xa24>
   26f44:	mov	x0, x19
   26f48:	bl	266b0 <__sanitizer_set_death_callback@@Base+0x134>
   26f4c:	and	w3, w0, #0xff
   26f50:	cbnz	w3, 26fc4 <__sanitizer_set_death_callback@@Base+0xa48>
   26f54:	mov	x0, x22
   26f58:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26f5c:	bl	18bd0 <__sanitizer_set_report_fd@@Base+0x2820>
   26f60:	b	26f1c <__sanitizer_set_death_callback@@Base+0x9a0>
   26f64:	mov	x3, x23
   26f68:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26f6c:	add	x2, x2, #0xfc0
   26f70:	mov	w1, #0x102                 	// #258
   26f74:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26f78:	add	x0, x0, #0xed0
   26f7c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26f80:	mov	x4, #0x0                   	// #0
   26f84:	mov	x3, #0x0                   	// #0
   26f88:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26f8c:	add	x2, x2, #0xfe0
   26f90:	mov	w1, #0x104                 	// #260
   26f94:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   26f98:	add	x0, x0, #0xed0
   26f9c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   26fa0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26fa4:	ldr	x0, [x0, #4008]
   26fa8:	ldr	x1, [x0]
   26fac:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   26fb0:	add	x0, x0, #0xc8
   26fb4:	bl	1d908 <OnPrint@@Base+0x3d8>
   26fb8:	mov	x0, x22
   26fbc:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26fc0:	b	26fe4 <__sanitizer_set_death_callback@@Base+0xa68>
   26fc4:	mov	x1, x24
   26fc8:	mov	x0, x19
   26fcc:	bl	266c4 <__sanitizer_set_death_callback@@Base+0x148>
   26fd0:	mov	x1, x19
   26fd4:	mov	x0, x20
   26fd8:	bl	26ce4 <__sanitizer_set_death_callback@@Base+0x768>
   26fdc:	mov	x0, x22
   26fe0:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   26fe4:	ldp	x21, x22, [sp, #16]
   26fe8:	ldp	x23, x24, [sp, #32]
   26fec:	ldr	x30, [sp, #48]
   26ff0:	ldp	x19, x20, [sp], #64
   26ff4:	ret
   26ff8:	stp	x19, x20, [sp, #-48]!
   26ffc:	stp	x21, x22, [sp, #16]
   27000:	str	x30, [sp, #32]
   27004:	mov	x19, x0
   27008:	mov	w20, w1
   2700c:	add	x21, x0, #0x18
   27010:	mov	x0, x21
   27014:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   27018:	ldr	x0, [x19, #128]
   2701c:	cbz	x0, 2707c <__sanitizer_set_death_callback@@Base+0xb00>
   27020:	sub	x0, x0, #0x1
   27024:	str	x0, [x19, #128]
   27028:	mov	w3, w20
   2702c:	ldr	w4, [x19, #112]
   27030:	cmp	x4, w20, uxtw
   27034:	b.ls	2709c <__sanitizer_set_death_callback@@Base+0xb20>  // b.plast
   27038:	ldr	x0, [x19, #152]
   2703c:	ldr	x20, [x0, x3, lsl #3]
   27040:	cbz	x20, 270b4 <__sanitizer_set_death_callback@@Base+0xb38>
   27044:	ldr	w0, [x20, #112]
   27048:	cmp	w0, #0x2
   2704c:	b.eq	270d4 <__sanitizer_set_death_callback@@Base+0xb58>  // b.none
   27050:	mov	w3, w0
   27054:	cmp	w0, #0x1
   27058:	b.ne	27134 <__sanitizer_set_death_callback@@Base+0xbb8>  // b.any
   2705c:	mov	x0, x20
   27060:	bl	26738 <__sanitizer_set_death_callback@@Base+0x1bc>
   27064:	mov	x0, x20
   27068:	bl	2664c <__sanitizer_set_death_callback@@Base+0xd0>
   2706c:	mov	x1, x20
   27070:	mov	x0, x19
   27074:	bl	26ce4 <__sanitizer_set_death_callback@@Base+0x768>
   27078:	b	270f4 <__sanitizer_set_death_callback@@Base+0xb78>
   2707c:	mov	x4, #0x0                   	// #0
   27080:	mov	x3, #0x0                   	// #0
   27084:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27088:	add	x2, x2, #0xf0
   2708c:	mov	w1, #0x11a                 	// #282
   27090:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   27094:	add	x0, x0, #0xed0
   27098:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2709c:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   270a0:	add	x2, x2, #0xfc0
   270a4:	mov	w1, #0x11c                 	// #284
   270a8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   270ac:	add	x0, x0, #0xed0
   270b0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   270b4:	mov	x4, #0x0                   	// #0
   270b8:	mov	x3, #0x0                   	// #0
   270bc:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   270c0:	add	x2, x2, #0xfe0
   270c4:	mov	w1, #0x11e                 	// #286
   270c8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   270cc:	add	x0, x0, #0xed0
   270d0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   270d4:	ldr	x0, [x19, #144]
   270d8:	cbz	x0, 27114 <__sanitizer_set_death_callback@@Base+0xb98>
   270dc:	ldrb	w22, [x20, #116]
   270e0:	sub	x0, x0, #0x1
   270e4:	str	x0, [x19, #144]
   270e8:	mov	x0, x20
   270ec:	bl	26738 <__sanitizer_set_death_callback@@Base+0x1bc>
   270f0:	cbnz	w22, 27064 <__sanitizer_set_death_callback@@Base+0xae8>
   270f4:	mov	x0, x20
   270f8:	bl	266a0 <__sanitizer_set_death_callback@@Base+0x124>
   270fc:	mov	x0, x21
   27100:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   27104:	ldp	x21, x22, [sp, #16]
   27108:	ldr	x30, [sp, #32]
   2710c:	ldp	x19, x20, [sp], #48
   27110:	ret
   27114:	mov	x4, #0x0                   	// #0
   27118:	mov	x3, #0x0                   	// #0
   2711c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27120:	add	x2, x2, #0x110
   27124:	mov	w1, #0x121                 	// #289
   27128:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2712c:	add	x0, x0, #0xed0
   27130:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27134:	mov	x4, #0x1                   	// #1
   27138:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2713c:	add	x2, x2, #0x130
   27140:	mov	w1, #0x125                 	// #293
   27144:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   27148:	add	x0, x0, #0xed0
   2714c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27150:	mov	x1, x0
   27154:	ldr	x2, [x0, #184]
   27158:	mov	x0, #0x0                   	// #0
   2715c:	cbz	x2, 27178 <__sanitizer_set_death_callback@@Base+0xbfc>
   27160:	ldr	x0, [x1, #192]
   27164:	ldr	x3, [x0, #128]
   27168:	str	x3, [x1, #192]
   2716c:	cbz	x3, 2717c <__sanitizer_set_death_callback@@Base+0xc00>
   27170:	sub	x2, x2, #0x1
   27174:	str	x2, [x1, #184]
   27178:	ret
   2717c:	str	xzr, [x1, #200]
   27180:	b	27170 <__sanitizer_set_death_callback@@Base+0xbf4>
   27184:	stp	x19, x20, [sp, #-64]!
   27188:	stp	x21, x22, [sp, #16]
   2718c:	stp	x23, x24, [sp, #32]
   27190:	stp	x25, x30, [sp, #48]
   27194:	mov	x19, x0
   27198:	mov	x21, x1
   2719c:	and	w25, w2, #0xff
   271a0:	mov	w22, w3
   271a4:	mov	x23, x4
   271a8:	add	x24, x0, #0x18
   271ac:	mov	x0, x24
   271b0:	bl	18eb8 <__sanitizer_set_report_fd@@Base+0x2b08>
   271b4:	mov	x0, x19
   271b8:	bl	27150 <__sanitizer_set_death_callback@@Base+0xbd4>
   271bc:	cbz	x0, 27250 <__sanitizer_set_death_callback@@Base+0xcd4>
   271c0:	ldr	w20, [x0, #8]
   271c4:	mov	w3, w20
   271c8:	mov	x1, #0xffffffff            	// #4294967295
   271cc:	cmp	x1, w20, uxtw
   271d0:	b.eq	272bc <__sanitizer_set_death_callback@@Base+0xd40>  // b.none
   271d4:	ldr	w4, [x19, #8]
   271d8:	cmp	x3, x4
   271dc:	b.cs	272dc <__sanitizer_set_death_callback@@Base+0xd60>  // b.hs, b.nlast
   271e0:	ldr	w3, [x0, #112]
   271e4:	cbnz	x3, 272f4 <__sanitizer_set_death_callback@@Base+0xd78>
   271e8:	ldr	x2, [x19, #128]
   271ec:	add	x3, x2, #0x1
   271f0:	str	x3, [x19, #128]
   271f4:	ldr	x1, [x19, #136]
   271f8:	cmp	x3, x1
   271fc:	b.ls	27210 <__sanitizer_set_death_callback@@Base+0xc94>  // b.plast
   27200:	add	x4, x1, #0x1
   27204:	str	x4, [x19, #136]
   27208:	cmp	x2, x1
   2720c:	b.ne	27310 <__sanitizer_set_death_callback@@Base+0xd94>  // b.any
   27210:	ldr	x2, [x19, #120]
   27214:	add	x1, x2, #0x1
   27218:	str	x1, [x19, #120]
   2721c:	mov	x5, x23
   27220:	mov	w4, w22
   27224:	mov	w3, w25
   27228:	mov	x1, x21
   2722c:	bl	26798 <__sanitizer_set_death_callback@@Base+0x21c>
   27230:	mov	x0, x24
   27234:	bl	18f3c <__sanitizer_set_report_fd@@Base+0x2b8c>
   27238:	mov	w0, w20
   2723c:	ldp	x21, x22, [sp, #16]
   27240:	ldp	x23, x24, [sp, #32]
   27244:	ldp	x25, x30, [sp, #48]
   27248:	ldp	x19, x20, [sp], #64
   2724c:	ret
   27250:	ldr	w20, [x19, #112]
   27254:	ldr	w2, [x19, #8]
   27258:	cmp	w20, w2
   2725c:	b.cs	272a0 <__sanitizer_set_death_callback@@Base+0xd24>  // b.hs, b.nlast
   27260:	add	w0, w20, #0x1
   27264:	str	w0, [x19, #112]
   27268:	ldr	x1, [x19]
   2726c:	mov	w0, w20
   27270:	blr	x1
   27274:	ldr	x1, [x19, #152]
   27278:	str	x0, [x1, w20, uxtw #3]
   2727c:	cbnz	x0, 271c4 <__sanitizer_set_death_callback@@Base+0xc48>
   27280:	mov	x4, #0x0                   	// #0
   27284:	mov	x3, #0x0                   	// #0
   27288:	adrp	x2, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2728c:	add	x2, x2, #0xfe0
   27290:	mov	w1, #0x9c                  	// #156
   27294:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   27298:	add	x0, x0, #0xed0
   2729c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   272a0:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   272a4:	ldr	x0, [x0, #4008]
   272a8:	ldr	x1, [x0]
   272ac:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   272b0:	add	x0, x0, #0x160
   272b4:	bl	1d908 <OnPrint@@Base+0x3d8>
   272b8:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   272bc:	mov	x4, x1
   272c0:	mov	x3, x1
   272c4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   272c8:	add	x2, x2, #0x190
   272cc:	mov	w1, #0x9d                  	// #157
   272d0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   272d4:	add	x0, x0, #0xed0
   272d8:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   272dc:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   272e0:	add	x2, x2, #0x1b0
   272e4:	mov	w1, #0x9e                  	// #158
   272e8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   272ec:	add	x0, x0, #0xed0
   272f0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   272f4:	mov	x4, #0x0                   	// #0
   272f8:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   272fc:	add	x2, x2, #0x1d0
   27300:	mov	w1, #0x9f                  	// #159
   27304:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   27308:	add	x0, x0, #0xed0
   2730c:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27310:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27314:	add	x2, x2, #0x200
   27318:	mov	w1, #0xa3                  	// #163
   2731c:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   27320:	add	x0, x0, #0xed0
   27324:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27328:	ret
   2732c:	ret
   27330:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27334:	ldr	x0, [x0, #4040]
   27338:	ldrb	w0, [x0, #121]
   2733c:	cbz	w0, 27414 <__sanitizer_set_death_callback@@Base+0xe98>
   27340:	stp	x19, x20, [sp, #-32]!
   27344:	str	x30, [sp, #16]
   27348:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2734c:	ldr	x0, [x0, #3680]
   27350:	ldr	w0, [x0]
   27354:	sxtw	x0, w0
   27358:	cmp	x0, #0x1
   2735c:	b.hi	273d8 <__sanitizer_set_death_callback@@Base+0xe5c>  // b.pmore
   27360:	mrs	x0, tpidr_el0
   27364:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27368:	ldr	x1, [x1, #3408]
   2736c:	ldr	x19, [x0, x1]
   27370:	mov	x2, #0xffffffffffffffff    	// #-1
   27374:	str	x2, [x0, x1]
   27378:	cbz	x19, 273cc <__sanitizer_set_death_callback@@Base+0xe50>
   2737c:	mov	x0, x1
   27380:	mrs	x1, tpidr_el0
   27384:	add	x0, x1, x0
   27388:	ldr	x20, [x0, #8]
   2738c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27390:	ldr	x0, [x0, #3680]
   27394:	ldr	w0, [x0]
   27398:	sxtw	x0, w0
   2739c:	cmp	x0, #0x1
   273a0:	b.hi	273fc <__sanitizer_set_death_callback@@Base+0xe80>  // b.pmore
   273a4:	lsl	x1, x19, #4
   273a8:	mov	x0, x20
   273ac:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   273b0:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   273b4:	add	x0, x0, #0x280
   273b8:	ldxr	x1, [x0]
   273bc:	sub	x1, x1, #0x1
   273c0:	stlxr	w2, x1, [x0]
   273c4:	cbnz	w2, 273b8 <__sanitizer_set_death_callback@@Base+0xe3c>
   273c8:	dmb	ish
   273cc:	ldr	x30, [sp, #16]
   273d0:	ldp	x19, x20, [sp], #32
   273d4:	ret
   273d8:	mrs	x1, tpidr_el0
   273dc:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   273e0:	ldr	x0, [x0, #3408]
   273e4:	ldr	x2, [x1, x0]
   273e8:	add	x1, x1, x0
   273ec:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   273f0:	add	x0, x0, #0x238
   273f4:	bl	1d908 <OnPrint@@Base+0x3d8>
   273f8:	b	27360 <__sanitizer_set_death_callback@@Base+0xde4>
   273fc:	mov	x2, x19
   27400:	mov	x1, x20
   27404:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27408:	add	x0, x0, #0x260
   2740c:	bl	1d908 <OnPrint@@Base+0x3d8>
   27410:	b	273a4 <__sanitizer_set_death_callback@@Base+0xe28>
   27414:	ret
   27418:	stp	x19, x20, [sp, #-144]!
   2741c:	str	x30, [sp, #80]
   27420:	mov	x20, x0
   27424:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27428:	ldr	x0, [x0, #4040]
   2742c:	ldrb	w0, [x0, #121]
   27430:	cbz	w0, 27818 <__sanitizer_set_death_callback@@Base+0x129c>
   27434:	stp	x21, x22, [sp, #16]
   27438:	stp	x23, x24, [sp, #32]
   2743c:	mov	x21, x1
   27440:	mov	x22, x2
   27444:	mov	x23, x3
   27448:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2744c:	ldr	x0, [x0, #3408]
   27450:	mrs	x1, tpidr_el0
   27454:	ldr	x0, [x1, x0]
   27458:	cmn	x0, #0x1
   2745c:	b.eq	27820 <__sanitizer_set_death_callback@@Base+0x12a4>  // b.none
   27460:	ldr	x19, [x20]
   27464:	add	x3, x19, #0x1
   27468:	cmp	x0, x3
   2746c:	b.cc	27514 <__sanitizer_set_death_callback@@Base+0xf98>  // b.lo, b.ul, b.last
   27470:	lsl	x19, x19, #4
   27474:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27478:	ldr	x0, [x0, #3408]
   2747c:	mrs	x1, tpidr_el0
   27480:	add	x0, x1, x0
   27484:	ldr	x0, [x0, #8]
   27488:	ldr	x24, [x0, x19]
   2748c:	cbnz	x24, 27830 <__sanitizer_set_death_callback@@Base+0x12b4>
   27490:	ldr	x3, [x20, #8]
   27494:	sub	x5, x21, x3
   27498:	str	x5, [sp, #136]
   2749c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   274a0:	ldr	x0, [x0, #3680]
   274a4:	ldr	w0, [x0]
   274a8:	sxtw	x0, w0
   274ac:	cmp	x0, #0x1
   274b0:	b.hi	27710 <__sanitizer_set_death_callback@@Base+0x1194>  // b.pmore
   274b4:	ldr	x1, [sp, #136]
   274b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   274bc:	ldr	x0, [x0, #3408]
   274c0:	mrs	x2, tpidr_el0
   274c4:	add	x0, x2, x0
   274c8:	ldr	x0, [x0, #24]
   274cc:	cmp	x0, x1
   274d0:	b.eq	27738 <__sanitizer_set_death_callback@@Base+0x11bc>  // b.none
   274d4:	cmp	x1, x23
   274d8:	ccmp	x1, x22, #0x0, cc  // cc = lo, ul, last
   274dc:	b.cs	277b8 <__sanitizer_set_death_callback@@Base+0x123c>  // b.hs, b.nlast
   274e0:	and	x0, x1, #0xfff
   274e4:	cmp	x0, #0x10
   274e8:	b.eq	277e0 <__sanitizer_set_death_callback@@Base+0x1264>  // b.none
   274ec:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   274f0:	ldr	x0, [x0, #3680]
   274f4:	ldr	w0, [x0]
   274f8:	sxtw	x0, w0
   274fc:	cmp	x0, #0x1
   27500:	b.ls	27760 <__sanitizer_set_death_callback@@Base+0x11e4>  // b.plast
   27504:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27508:	add	x0, x0, #0x408
   2750c:	bl	1d908 <OnPrint@@Base+0x3d8>
   27510:	b	27760 <__sanitizer_set_death_callback@@Base+0x11e4>
   27514:	stp	x25, x26, [sp, #48]
   27518:	tst	x3, x19
   2751c:	b.eq	27624 <__sanitizer_set_death_callback@@Base+0x10a8>  // b.none
   27520:	clz	x0, x3
   27524:	mov	w4, #0x3f                  	// #63
   27528:	sub	w4, w4, w0
   2752c:	add	w0, w4, #0x1
   27530:	mov	x24, #0x1                   	// #1
   27534:	lsl	x24, x24, x0
   27538:	cmp	x3, x24
   2753c:	b.cs	275e8 <__sanitizer_set_death_callback@@Base+0x106c>  // b.hs, b.nlast
   27540:	mov	x0, #0x1                   	// #1
   27544:	lsl	x4, x0, x4
   27548:	cmp	x3, x4
   2754c:	b.ls	27608 <__sanitizer_set_death_callback@@Base+0x108c>  // b.plast
   27550:	cmp	x24, #0x100
   27554:	mov	x4, #0x100                 	// #256
   27558:	csel	x24, x24, x4, cs  // cs = hs, nlast
   2755c:	mov	w2, #0x0                   	// #0
   27560:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27564:	add	x1, x1, #0x288
   27568:	lsl	x0, x24, #4
   2756c:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   27570:	mov	x25, x0
   27574:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27578:	add	x0, x0, #0x280
   2757c:	ldxr	x26, [x0]
   27580:	add	x1, x26, #0x1
   27584:	stlxr	w2, x1, [x0]
   27588:	cbnz	w2, 2757c <__sanitizer_set_death_callback@@Base+0x1000>
   2758c:	dmb	ish
   27590:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27594:	ldr	x0, [x0, #3680]
   27598:	ldr	w0, [x0]
   2759c:	sxtw	x0, w0
   275a0:	cmp	x0, #0x1
   275a4:	b.hi	2762c <__sanitizer_set_death_callback@@Base+0x10b0>  // b.pmore
   275a8:	mov	x0, #0xfffff               	// #1048575
   275ac:	cmp	x26, x0
   275b0:	b.hi	27650 <__sanitizer_set_death_callback@@Base+0x10d4>  // b.pmore
   275b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   275b8:	ldr	x0, [x0, #3408]
   275bc:	mrs	x1, tpidr_el0
   275c0:	ldr	x26, [x1, x0]
   275c4:	cbnz	x26, 27674 <__sanitizer_set_death_callback@@Base+0x10f8>
   275c8:	mrs	x0, tpidr_el0
   275cc:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   275d0:	ldr	x1, [x1, #3408]
   275d4:	add	x2, x0, x1
   275d8:	str	x25, [x2, #8]
   275dc:	str	x24, [x0, x1]
   275e0:	ldp	x25, x26, [sp, #48]
   275e4:	b	27470 <__sanitizer_set_death_callback@@Base+0xef4>
   275e8:	stp	x27, x28, [sp, #64]
   275ec:	mov	x4, x24
   275f0:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   275f4:	add	x2, x2, #0x5d0
   275f8:	mov	w1, #0x17b                 	// #379
   275fc:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   27600:	add	x0, x0, #0x520
   27604:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27608:	stp	x27, x28, [sp, #64]
   2760c:	adrp	x2, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   27610:	add	x2, x2, #0x5f8
   27614:	mov	w1, #0x17c                 	// #380
   27618:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2761c:	add	x0, x0, #0x520
   27620:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27624:	mov	x24, x3
   27628:	b	27550 <__sanitizer_set_death_callback@@Base+0xfd4>
   2762c:	mov	x2, x26
   27630:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27634:	ldr	x0, [x0, #3408]
   27638:	mrs	x1, tpidr_el0
   2763c:	add	x1, x1, x0
   27640:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27644:	add	x0, x0, #0x298
   27648:	bl	1d908 <OnPrint@@Base+0x3d8>
   2764c:	b	275a8 <__sanitizer_set_death_callback@@Base+0x102c>
   27650:	stp	x27, x28, [sp, #64]
   27654:	mov	x4, #0x100000              	// #1048576
   27658:	mov	x3, x26
   2765c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27660:	add	x2, x2, #0x2c0
   27664:	mov	w1, #0x3c                  	// #60
   27668:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2766c:	add	x0, x0, #0x2e0
   27670:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27674:	stp	x27, x28, [sp, #64]
   27678:	str	x1, [sp, #120]
   2767c:	str	x0, [sp, #112]
   27680:	add	x28, x1, x0
   27684:	ldr	x27, [x28, #8]
   27688:	lsl	x2, x26, #4
   2768c:	str	x2, [sp, #104]
   27690:	mov	x1, x27
   27694:	mov	x0, x25
   27698:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   2769c:	str	x25, [x28, #8]
   276a0:	ldr	x1, [sp, #120]
   276a4:	ldr	x0, [sp, #112]
   276a8:	str	x24, [x1, x0]
   276ac:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   276b0:	ldr	x0, [x0, #3680]
   276b4:	ldr	w0, [x0]
   276b8:	sxtw	x0, w0
   276bc:	cmp	x0, #0x1
   276c0:	b.hi	276f8 <__sanitizer_set_death_callback@@Base+0x117c>  // b.pmore
   276c4:	ldr	x1, [sp, #104]
   276c8:	mov	x0, x27
   276cc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   276d0:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   276d4:	add	x0, x0, #0x280
   276d8:	ldxr	x1, [x0]
   276dc:	sub	x1, x1, #0x1
   276e0:	stlxr	w2, x1, [x0]
   276e4:	cbnz	w2, 276d8 <__sanitizer_set_death_callback@@Base+0x115c>
   276e8:	dmb	ish
   276ec:	ldp	x25, x26, [sp, #48]
   276f0:	ldp	x27, x28, [sp, #64]
   276f4:	b	27470 <__sanitizer_set_death_callback@@Base+0xef4>
   276f8:	mov	x2, x26
   276fc:	mov	x1, x27
   27700:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27704:	add	x0, x0, #0x260
   27708:	bl	1d908 <OnPrint@@Base+0x3d8>
   2770c:	b	276c4 <__sanitizer_set_death_callback@@Base+0x1148>
   27710:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27714:	ldr	x7, [x0, #640]
   27718:	add	x6, sp, #0x88
   2771c:	mov	x4, x21
   27720:	ldr	x2, [x20]
   27724:	mov	x1, x20
   27728:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2772c:	add	x0, x0, #0x328
   27730:	bl	1d908 <OnPrint@@Base+0x3d8>
   27734:	b	274b4 <__sanitizer_set_death_callback@@Base+0xf38>
   27738:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2773c:	ldr	x0, [x0, #3408]
   27740:	add	x0, x2, x0
   27744:	ldr	x24, [x0, #16]
   27748:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2774c:	ldr	x0, [x0, #3680]
   27750:	ldr	w0, [x0]
   27754:	sxtw	x0, w0
   27758:	cmp	x0, #0x1
   2775c:	b.hi	277a4 <__sanitizer_set_death_callback@@Base+0x1228>  // b.pmore
   27760:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27764:	ldr	x1, [x1, #3408]
   27768:	mrs	x2, tpidr_el0
   2776c:	add	x1, x2, x1
   27770:	ldr	x0, [x1, #8]
   27774:	ldr	x2, [sp, #136]
   27778:	str	x2, [x0, x19]
   2777c:	ldr	x0, [x1, #8]
   27780:	add	x0, x0, x19
   27784:	str	x24, [x0, #8]
   27788:	ldr	x0, [x1, #8]
   2778c:	add	x0, x0, x19
   27790:	ldp	x21, x22, [sp, #16]
   27794:	ldp	x23, x24, [sp, #32]
   27798:	ldr	x30, [sp, #80]
   2779c:	ldp	x19, x20, [sp], #144
   277a0:	ret
   277a4:	mov	x2, x24
   277a8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   277ac:	add	x0, x0, #0x378
   277b0:	bl	1d908 <OnPrint@@Base+0x3d8>
   277b4:	b	27760 <__sanitizer_set_death_callback@@Base+0x11e4>
   277b8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   277bc:	ldr	x0, [x0, #3680]
   277c0:	ldr	w0, [x0]
   277c4:	sxtw	x0, w0
   277c8:	cmp	x0, #0x1
   277cc:	b.ls	27760 <__sanitizer_set_death_callback@@Base+0x11e4>  // b.plast
   277d0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   277d4:	add	x0, x0, #0x3b0
   277d8:	bl	1d908 <OnPrint@@Base+0x3d8>
   277dc:	b	27760 <__sanitizer_set_death_callback@@Base+0x11e4>
   277e0:	ldur	x24, [x1, #-16]
   277e4:	ldur	x1, [x1, #-8]
   277e8:	str	x1, [sp, #136]
   277ec:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   277f0:	ldr	x0, [x0, #3680]
   277f4:	ldr	w0, [x0]
   277f8:	sxtw	x0, w0
   277fc:	cmp	x0, #0x1
   27800:	b.ls	27760 <__sanitizer_set_death_callback@@Base+0x11e4>  // b.plast
   27804:	mov	x2, x24
   27808:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2780c:	add	x0, x0, #0x3d0
   27810:	bl	1d908 <OnPrint@@Base+0x3d8>
   27814:	b	27760 <__sanitizer_set_death_callback@@Base+0x11e4>
   27818:	mov	x0, #0x0                   	// #0
   2781c:	b	27798 <__sanitizer_set_death_callback@@Base+0x121c>
   27820:	mov	x0, #0x0                   	// #0
   27824:	ldp	x21, x22, [sp, #16]
   27828:	ldp	x23, x24, [sp, #32]
   2782c:	b	27798 <__sanitizer_set_death_callback@@Base+0x121c>
   27830:	mov	x0, #0x0                   	// #0
   27834:	ldp	x21, x22, [sp, #16]
   27838:	ldp	x23, x24, [sp, #32]
   2783c:	b	27798 <__sanitizer_set_death_callback@@Base+0x121c>
   27840:	stp	x19, x20, [sp, #-32]!
   27844:	str	x30, [sp, #16]
   27848:	mov	x20, x0
   2784c:	adrp	x2, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27850:	ldr	x2, [x2, #4040]
   27854:	ldrb	w0, [x2, #121]
   27858:	cbz	w0, 27890 <__sanitizer_set_death_callback@@Base+0x1314>
   2785c:	mov	x19, x1
   27860:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27864:	ldr	x0, [x0, #3680]
   27868:	ldr	w0, [x0]
   2786c:	sxtw	x0, w0
   27870:	cmp	x0, #0x1
   27874:	b.hi	2789c <__sanitizer_set_death_callback@@Base+0x1320>  // b.pmore
   27878:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2787c:	ldr	x0, [x0, #3408]
   27880:	mrs	x1, tpidr_el0
   27884:	add	x0, x1, x0
   27888:	str	x20, [x0, #24]
   2788c:	str	x19, [x0, #16]
   27890:	ldr	x30, [sp, #16]
   27894:	ldp	x19, x20, [sp], #32
   27898:	ret
   2789c:	mov	x2, x1
   278a0:	mov	x1, x20
   278a4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   278a8:	add	x0, x0, #0x438
   278ac:	bl	1d908 <OnPrint@@Base+0x3d8>
   278b0:	b	27878 <__sanitizer_set_death_callback@@Base+0x12fc>
   278b4:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   278b8:	ldr	x0, [x0, #3408]
   278bc:	mrs	x1, tpidr_el0
   278c0:	add	x0, x1, x0
   278c4:	ret
   278c8:	ldr	x0, [x0]
   278cc:	cmn	x0, #0x1
   278d0:	cset	w0, eq  // eq = none
   278d4:	ret
   278d8:	stp	x19, x20, [sp, #-32]!
   278dc:	str	x30, [sp, #16]
   278e0:	mov	x19, x1
   278e4:	ldr	x1, [x1]
   278e8:	ldr	w3, [x1, #8]
   278ec:	ldr	w4, [x19, #8]
   278f0:	cmp	x3, x4
   278f4:	b.cs	27964 <__sanitizer_set_death_callback@@Base+0x13e8>  // b.hs, b.nlast
   278f8:	bl	6a60 <_Unwind_GetIP@plt>
   278fc:	mov	x20, x0
   27900:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27904:	ldr	x0, [x0, #4000]
   27908:	ldr	x0, [x0]
   2790c:	cbz	x0, 2797c <__sanitizer_set_death_callback@@Base+0x1400>
   27910:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27914:	ldr	x0, [x0, #4000]
   27918:	ldr	x1, [x0]
   2791c:	mov	w0, #0x4                   	// #4
   27920:	cmp	x1, x20
   27924:	b.hi	27958 <__sanitizer_set_death_callback@@Base+0x13dc>  // b.pmore
   27928:	ldr	x1, [x19]
   2792c:	ldr	w0, [x1, #8]
   27930:	add	w2, w0, #0x1
   27934:	str	w2, [x1, #8]
   27938:	add	x0, x1, w0, uxtw #3
   2793c:	str	x20, [x0, #16]
   27940:	ldr	x0, [x19]
   27944:	ldr	w1, [x0, #8]
   27948:	ldr	w0, [x19, #8]
   2794c:	cmp	w1, w0
   27950:	cset	w0, eq  // eq = none
   27954:	lsl	w0, w0, #2
   27958:	ldr	x30, [sp, #16]
   2795c:	ldp	x19, x20, [sp], #32
   27960:	ret
   27964:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27968:	add	x2, x2, #0x458
   2796c:	mov	w1, #0x6d                  	// #109
   27970:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27974:	add	x0, x0, #0x488
   27978:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   2797c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   27980:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27984:	ldr	x1, [x1, #4000]
   27988:	str	x0, [x1]
   2798c:	b	27910 <__sanitizer_set_death_callback@@Base+0x1394>
   27990:	str	x30, [sp, #-16]!
   27994:	bl	6a60 <_Unwind_GetIP@plt>
   27998:	ldr	x30, [sp], #16
   2799c:	ret
   279a0:	stp	x19, x20, [sp, #-48]!
   279a4:	str	x30, [sp, #16]
   279a8:	cmp	w2, #0x1
   279ac:	b.ls	27a1c <__sanitizer_set_death_callback@@Base+0x14a0>  // b.plast
   279b0:	mov	x19, x0
   279b4:	mov	x20, x1
   279b8:	str	wzr, [x0, #8]
   279bc:	str	x0, [sp, #32]
   279c0:	add	w2, w2, #0x1
   279c4:	cmp	w2, #0x100
   279c8:	mov	w0, #0x100                 	// #256
   279cc:	csel	w2, w2, w0, ls  // ls = plast
   279d0:	str	w2, [sp, #40]
   279d4:	add	x1, sp, #0x20
   279d8:	adrp	x0, 27000 <__sanitizer_set_death_callback@@Base+0xa84>
   279dc:	add	x0, x0, #0x8d8
   279e0:	bl	6650 <_Unwind_Backtrace@plt>
   279e4:	mov	x1, x20
   279e8:	mov	x0, x19
   279ec:	bl	1f660 <OnPrint@@Base+0x2130>
   279f0:	mov	x1, x0
   279f4:	cbnz	x0, 27a04 <__sanitizer_set_death_callback@@Base+0x1488>
   279f8:	ldr	w0, [x19, #8]
   279fc:	cmp	w0, #0x1
   27a00:	cset	x1, hi  // hi = pmore
   27a04:	mov	x0, x19
   27a08:	bl	1f604 <OnPrint@@Base+0x20d4>
   27a0c:	str	x20, [x19, #16]
   27a10:	ldr	x30, [sp, #16]
   27a14:	ldp	x19, x20, [sp], #48
   27a18:	ret
   27a1c:	mov	w3, w2
   27a20:	mov	x4, #0x2                   	// #2
   27a24:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   27a28:	add	x2, x2, #0xcb0
   27a2c:	mov	w1, #0x7a                  	// #122
   27a30:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27a34:	add	x0, x0, #0x488
   27a38:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27a3c:	stp	x19, x20, [sp, #-80]!
   27a40:	stp	x23, x24, [sp, #32]
   27a44:	str	x30, [sp, #64]
   27a48:	mov	w24, w3
   27a4c:	cmp	w3, #0x1
   27a50:	b.ls	27b5c <__sanitizer_set_death_callback@@Base+0x15e0>  // b.plast
   27a54:	mov	x19, x0
   27a58:	mov	x20, x2
   27a5c:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27a60:	ldr	x0, [x0, #648]
   27a64:	cbz	x0, 27b84 <__sanitizer_set_death_callback@@Base+0x1608>
   27a68:	stp	x21, x22, [sp, #16]
   27a6c:	stp	x25, x26, [sp, #48]
   27a70:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27a74:	ldr	x0, [x0, #656]
   27a78:	blr	x0
   27a7c:	mov	x23, x0
   27a80:	cbz	x0, 27b94 <__sanitizer_set_death_callback@@Base+0x1618>
   27a84:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27a88:	ldr	x0, [x0, #4000]
   27a8c:	ldr	x0, [x0]
   27a90:	cbz	x0, 27bb4 <__sanitizer_set_death_callback@@Base+0x1638>
   27a94:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27a98:	ldr	x0, [x0, #4000]
   27a9c:	ldr	x0, [x0]
   27aa0:	sub	x1, x0, #0x1
   27aa4:	tst	x1, x0
   27aa8:	b.ne	27bc8 <__sanitizer_set_death_callback@@Base+0x164c>  // b.any
   27aac:	mov	x25, #0x17ff                	// #6143
   27ab0:	add	x22, x0, x25
   27ab4:	neg	x0, x0
   27ab8:	and	x22, x22, x0
   27abc:	mov	w2, #0x0                   	// #0
   27ac0:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   27ac4:	add	x1, x1, #0x650
   27ac8:	mov	x0, x22
   27acc:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   27ad0:	mov	x21, x0
   27ad4:	mov	x2, #0x0                   	// #0
   27ad8:	mov	x1, #0x0                   	// #0
   27adc:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   27ae0:	mov	x1, #0x0                   	// #0
   27ae4:	mov	x0, #0x0                   	// #0
   27ae8:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   27aec:	cmp	x22, x25
   27af0:	b.ls	27bd8 <__sanitizer_set_death_callback@@Base+0x165c>  // b.plast
   27af4:	mov	x2, #0x1800                	// #6144
   27af8:	mov	w1, #0x0                   	// #0
   27afc:	mov	x0, x21
   27b00:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   27b04:	adrp	x0, 9b8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   27b08:	add	x25, x0, #0x288
   27b0c:	ldr	x6, [x0, #648]
   27b10:	mov	x5, x24
   27b14:	mov	x4, #0x0                   	// #0
   27b18:	mov	x3, x21
   27b1c:	mov	x2, x23
   27b20:	mov	x1, x20
   27b24:	mov	x0, #0x0                   	// #0
   27b28:	blr	x6
   27b2c:	mov	x20, x0
   27b30:	ldr	x1, [x25, #16]
   27b34:	mov	x0, x23
   27b38:	blr	x1
   27b3c:	tbnz	x20, #63, 27c70 <__sanitizer_set_death_callback@@Base+0x16f4>
   27b40:	cmp	x20, #0x100
   27b44:	b.hi	27c88 <__sanitizer_set_death_callback@@Base+0x170c>  // b.pmore
   27b48:	str	wzr, [x19, #8]
   27b4c:	mov	x4, x21
   27b50:	mov	x3, #0x0                   	// #0
   27b54:	cbnz	x20, 27cac <__sanitizer_set_death_callback@@Base+0x1730>
   27b58:	b	27cd4 <__sanitizer_set_death_callback@@Base+0x1758>
   27b5c:	stp	x21, x22, [sp, #16]
   27b60:	stp	x25, x26, [sp, #48]
   27b64:	mov	x4, #0x2                   	// #2
   27b68:	mov	x3, x24
   27b6c:	adrp	x2, 40000 <__asan_backtrace_vector_release@@Base+0x5c58>
   27b70:	add	x2, x2, #0xcb0
   27b74:	mov	w1, #0x94                  	// #148
   27b78:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27b7c:	add	x0, x0, #0x488
   27b80:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27b84:	mov	w2, w3
   27b88:	mov	x0, x19
   27b8c:	bl	279a0 <__sanitizer_set_death_callback@@Base+0x1424>
   27b90:	b	27ce8 <__sanitizer_set_death_callback@@Base+0x176c>
   27b94:	mov	x4, #0x0                   	// #0
   27b98:	mov	x3, #0x0                   	// #0
   27b9c:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27ba0:	add	x2, x2, #0x4d8
   27ba4:	mov	w1, #0x9b                  	// #155
   27ba8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27bac:	add	x0, x0, #0x488
   27bb0:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27bb4:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   27bb8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27bbc:	ldr	x1, [x1, #4000]
   27bc0:	str	x0, [x1]
   27bc4:	b	27a94 <__sanitizer_set_death_callback@@Base+0x1518>
   27bc8:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   27bcc:	add	x0, x0, #0x638
   27bd0:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   27bd4:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   27bd8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27bdc:	ldr	x0, [x0, #4000]
   27be0:	ldr	x0, [x0]
   27be4:	cbz	x0, 27c4c <__sanitizer_set_death_callback@@Base+0x16d0>
   27be8:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27bec:	ldr	x0, [x0, #4000]
   27bf0:	ldr	x0, [x0]
   27bf4:	sub	x1, x0, #0x1
   27bf8:	tst	x1, x0
   27bfc:	b.ne	27c60 <__sanitizer_set_death_callback@@Base+0x16e4>  // b.any
   27c00:	add	x25, x0, #0x1, lsl #12
   27c04:	add	x25, x25, #0x7ff
   27c08:	neg	x0, x0
   27c0c:	and	x25, x25, x0
   27c10:	mov	w2, #0x0                   	// #0
   27c14:	adrp	x1, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   27c18:	add	x1, x1, #0x650
   27c1c:	mov	x0, x25
   27c20:	bl	1b018 <__sanitizer_set_report_fd@@Base+0x4c68>
   27c24:	mov	x26, x0
   27c28:	mov	x2, #0x0                   	// #0
   27c2c:	mov	x1, x21
   27c30:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   27c34:	mov	x1, x22
   27c38:	mov	x0, x21
   27c3c:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   27c40:	mov	x22, x25
   27c44:	mov	x21, x26
   27c48:	b	27af4 <__sanitizer_set_death_callback@@Base+0x1578>
   27c4c:	bl	192a0 <__sanitizer_set_report_fd@@Base+0x2ef0>
   27c50:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27c54:	ldr	x1, [x1, #4000]
   27c58:	str	x0, [x1]
   27c5c:	b	27be8 <__sanitizer_set_death_callback@@Base+0x166c>
   27c60:	adrp	x0, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   27c64:	add	x0, x0, #0x638
   27c68:	bl	158c8 <__sanitizer_cov_dump@@Base+0x1d10>
   27c6c:	bl	2646c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b8>
   27c70:	mov	x1, x22
   27c74:	mov	x0, x21
   27c78:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   27c7c:	ldp	x21, x22, [sp, #16]
   27c80:	ldp	x25, x26, [sp, #48]
   27c84:	b	27ce8 <__sanitizer_set_death_callback@@Base+0x176c>
   27c88:	mov	x4, #0x100                 	// #256
   27c8c:	mov	x3, x20
   27c90:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27c94:	add	x2, x2, #0x4e8
   27c98:	mov	w1, #0xa3                  	// #163
   27c9c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   27ca0:	add	x0, x0, #0x488
   27ca4:	bl	264e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x622c>
   27ca8:	add	x4, x4, #0x18
   27cac:	ldr	x2, [x4]
   27cb0:	ldr	w1, [x19, #8]
   27cb4:	add	w0, w1, #0x1
   27cb8:	str	w0, [x19, #8]
   27cbc:	add	x1, x19, w1, uxtw #3
   27cc0:	add	x2, x2, #0x2
   27cc4:	str	x2, [x1, #16]
   27cc8:	add	x3, x3, #0x1
   27ccc:	cmp	x20, x3
   27cd0:	b.gt	27ca8 <__sanitizer_set_death_callback@@Base+0x172c>
   27cd4:	mov	x1, x22
   27cd8:	mov	x0, x21
   27cdc:	bl	1b0f0 <__sanitizer_set_report_fd@@Base+0x4d40>
   27ce0:	ldp	x21, x22, [sp, #16]
   27ce4:	ldp	x25, x26, [sp, #48]
   27ce8:	ldp	x23, x24, [sp, #32]
   27cec:	ldr	x30, [sp, #64]
   27cf0:	ldp	x19, x20, [sp], #80
   27cf4:	ret
   27cf8:	stp	x19, x20, [sp, #-48]!
   27cfc:	stp	x21, x22, [sp, #16]
   27d00:	str	x30, [sp, #32]
   27d04:	mov	x20, x0
   27d08:	mov	x19, x1
   27d0c:	mov	x22, x2
   27d10:	mov	x21, x3
   27d14:	mov	x1, x0
   27d18:	mov	x0, #0xffffffffffffffff    	// #-1
   27d1c:	bl	6830 <dlsym@plt>
   27d20:	str	x0, [x19]
   27d24:	cbz	x0, 27d40 <__sanitizer_set_death_callback@@Base+0x17c4>
   27d28:	cmp	x22, x21
   27d2c:	cset	w0, eq  // eq = none
   27d30:	ldp	x21, x22, [sp, #16]
   27d34:	ldr	x30, [sp, #32]
   27d38:	ldp	x19, x20, [sp], #48
   27d3c:	ret
   27d40:	mov	x1, x20
   27d44:	bl	6830 <dlsym@plt>
   27d48:	str	x0, [x19]
   27d4c:	b	27d28 <__sanitizer_set_death_callback@@Base+0x17ac>
   27d50:	str	x30, [sp, #-16]!
   27d54:	mov	x2, x1
   27d58:	mov	x1, x0
   27d5c:	mov	x0, #0xffffffffffffffff    	// #-1
   27d60:	bl	6790 <dlvsym@plt>
   27d64:	ldr	x30, [sp], #16
   27d68:	ret
   27d6c:	cmp	w1, #0x4
   27d70:	b.eq	27dc8 <__sanitizer_set_death_callback@@Base+0x184c>  // b.none
   27d74:	b.gt	27da0 <__sanitizer_set_death_callback@@Base+0x1824>
   27d78:	cmp	w1, #0x1
   27d7c:	b.eq	27dbc <__sanitizer_set_death_callback@@Base+0x1840>  // b.none
   27d80:	cmp	w1, #0x2
   27d84:	b.ne	27d98 <__sanitizer_set_death_callback@@Base+0x181c>  // b.any
   27d88:	mov	x1, #0xffff                	// #65535
   27d8c:	cmp	x0, x1
   27d90:	cset	w0, eq  // eq = none
   27d94:	b	27db8 <__sanitizer_set_death_callback@@Base+0x183c>
   27d98:	mov	w0, #0x0                   	// #0
   27d9c:	b	27db8 <__sanitizer_set_death_callback@@Base+0x183c>
   27da0:	cmp	w1, #0x8
   27da4:	b.ne	27db4 <__sanitizer_set_death_callback@@Base+0x1838>  // b.any
   27da8:	cmn	x0, #0x1
   27dac:	cset	w0, eq  // eq = none
   27db0:	b	27db8 <__sanitizer_set_death_callback@@Base+0x183c>
   27db4:	mov	w0, #0x0                   	// #0
   27db8:	ret
   27dbc:	cmp	x0, #0xff
   27dc0:	cset	w0, eq  // eq = none
   27dc4:	b	27db8 <__sanitizer_set_death_callback@@Base+0x183c>
   27dc8:	mov	x1, #0xffffffff            	// #4294967295
   27dcc:	cmp	x0, x1
   27dd0:	cset	w0, eq  // eq = none
   27dd4:	b	27db8 <__sanitizer_set_death_callback@@Base+0x183c>
   27dd8:	mov	x4, #0x0                   	// #0
   27ddc:	b	27de4 <__sanitizer_set_death_callback@@Base+0x1868>
   27de0:	mov	x1, x3
   27de4:	cmp	x1, x4
   27de8:	b.ls	27e1c <__sanitizer_set_death_callback@@Base+0x18a0>  // b.plast
   27dec:	add	x3, x1, x4
   27df0:	lsr	x3, x3, #1
   27df4:	add	x7, x0, x3, lsl #3
   27df8:	ldr	x5, [x0, x3, lsl #3]
   27dfc:	ldr	x6, [x5, #24]
   27e00:	cmp	x6, x2
   27e04:	b.hi	27de0 <__sanitizer_set_death_callback@@Base+0x1864>  // b.pmore
   27e08:	ldr	x4, [x5, #32]
   27e0c:	cmp	x4, x2
   27e10:	b.hi	27e24 <__sanitizer_set_death_callback@@Base+0x18a8>  // b.pmore
   27e14:	add	x4, x3, #0x1
   27e18:	b	27de4 <__sanitizer_set_death_callback@@Base+0x1868>
   27e1c:	mov	x0, #0x0                   	// #0
   27e20:	b	27e28 <__sanitizer_set_death_callback@@Base+0x18ac>
   27e24:	ldr	x0, [x7]
   27e28:	ret
   27e2c:	mov	x2, x0
   27e30:	ldr	x4, [x0]
   27e34:	ldr	x3, [x1]
   27e38:	mov	w0, #0xffffffff            	// #-1
   27e3c:	cmp	x4, x3
   27e40:	b.cc	27e84 <__sanitizer_set_death_callback@@Base+0x1908>  // b.lo, b.ul, b.last
   27e44:	mov	w0, #0x1                   	// #1
   27e48:	b.hi	27e84 <__sanitizer_set_death_callback@@Base+0x1908>  // b.pmore
   27e4c:	ldr	x4, [x2, #8]
   27e50:	ldr	x3, [x1, #8]
   27e54:	cmp	x4, x3
   27e58:	b.cc	27e84 <__sanitizer_set_death_callback@@Base+0x1908>  // b.lo, b.ul, b.last
   27e5c:	mov	w0, #0xffffffff            	// #-1
   27e60:	b.hi	27e84 <__sanitizer_set_death_callback@@Base+0x1908>  // b.pmore
   27e64:	ldr	x0, [x2, #16]
   27e68:	ldr	x2, [x0, #56]
   27e6c:	ldr	x0, [x1, #16]
   27e70:	ldr	x1, [x0, #56]
   27e74:	mov	w0, #0xffffffff            	// #-1
   27e78:	cmp	x2, x1
   27e7c:	b.lt	27e84 <__sanitizer_set_death_callback@@Base+0x1908>  // b.tstop
   27e80:	cset	w0, gt
   27e84:	ret
   27e88:	mov	x2, x0
   27e8c:	ldr	x4, [x0]
   27e90:	ldr	x3, [x1]
   27e94:	mov	w0, #0xffffffff            	// #-1
   27e98:	cmp	x4, x3
   27e9c:	b.cc	27ec0 <__sanitizer_set_death_callback@@Base+0x1944>  // b.lo, b.ul, b.last
   27ea0:	mov	w0, #0x1                   	// #1
   27ea4:	b.hi	27ec0 <__sanitizer_set_death_callback@@Base+0x1944>  // b.pmore
   27ea8:	ldr	w2, [x2, #20]
   27eac:	ldr	w1, [x1, #20]
   27eb0:	mov	w0, #0xffffffff            	// #-1
   27eb4:	cmp	w2, w1
   27eb8:	b.lt	27ec0 <__sanitizer_set_death_callback@@Base+0x1944>  // b.tstop
   27ebc:	cset	w0, gt
   27ec0:	ret
   27ec4:	ldr	x2, [x0]
   27ec8:	ldr	x0, [x1]
   27ecc:	cmp	x2, x0
   27ed0:	b.cc	27edc <__sanitizer_set_death_callback@@Base+0x1960>  // b.lo, b.ul, b.last
   27ed4:	cset	w0, hi  // hi = pmore
   27ed8:	ret
   27edc:	mov	w0, #0xffffffff            	// #-1
   27ee0:	b	27ed8 <__sanitizer_set_death_callback@@Base+0x195c>
   27ee4:	ldr	x7, [x1, #32]
   27ee8:	cbz	x7, 27f84 <__sanitizer_set_death_callback@@Base+0x1a08>
   27eec:	stp	x29, x30, [sp, #-64]!
   27ef0:	mov	x29, sp
   27ef4:	stp	x19, x20, [sp, #16]
   27ef8:	stp	x21, x22, [sp, #32]
   27efc:	stp	x23, x24, [sp, #48]
   27f00:	mov	x19, x0
   27f04:	mov	x22, x2
   27f08:	mov	x23, x3
   27f0c:	mov	x20, x4
   27f10:	mov	x21, x5
   27f14:	ldr	x2, [x1, #24]
   27f18:	mov	x4, x7
   27f1c:	mov	x3, #0x0                   	// #0
   27f20:	b	27f28 <__sanitizer_set_death_callback@@Base+0x19ac>
   27f24:	mov	x4, x0
   27f28:	cmp	x4, x3
   27f2c:	b.ls	27f6c <__sanitizer_set_death_callback@@Base+0x19f0>  // b.plast
   27f30:	add	x1, x4, x3
   27f34:	lsr	x0, x1, #1
   27f38:	and	x1, x1, #0xfffffffffffffffe
   27f3c:	add	x1, x1, x0
   27f40:	lsl	x6, x1, #3
   27f44:	mov	x5, x6
   27f48:	add	x6, x2, x6
   27f4c:	ldr	x1, [x2, x1, lsl #3]
   27f50:	cmp	x1, x19
   27f54:	b.hi	27f24 <__sanitizer_set_death_callback@@Base+0x19a8>  // b.pmore
   27f58:	ldr	x1, [x6, #8]
   27f5c:	cmp	x1, x19
   27f60:	b.hi	27f8c <__sanitizer_set_death_callback@@Base+0x1a10>  // b.pmore
   27f64:	add	x3, x0, #0x1
   27f68:	b	27f28 <__sanitizer_set_death_callback@@Base+0x19ac>
   27f6c:	mov	w0, #0x0                   	// #0
   27f70:	ldp	x19, x20, [sp, #16]
   27f74:	ldp	x21, x22, [sp, #32]
   27f78:	ldp	x23, x24, [sp, #48]
   27f7c:	ldp	x29, x30, [sp], #64
   27f80:	ret
   27f84:	mov	w0, #0x0                   	// #0
   27f88:	ret
   27f8c:	asr	x0, x5, #3
   27f90:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   27f94:	movk	x5, #0xaaab
   27f98:	mul	x0, x0, x5
   27f9c:	add	x0, x0, #0x1
   27fa0:	mov	x1, x5
   27fa4:	cmp	x7, x0
   27fa8:	b.ls	27fe0 <__sanitizer_set_death_callback@@Base+0x1a64>  // b.plast
   27fac:	ldr	x0, [x6, #24]
   27fb0:	cmp	x0, x19
   27fb4:	b.hi	27fe0 <__sanitizer_set_death_callback@@Base+0x1a64>  // b.pmore
   27fb8:	ldr	x0, [x6, #32]
   27fbc:	cmp	x0, x19
   27fc0:	b.ls	27fe0 <__sanitizer_set_death_callback@@Base+0x1a64>  // b.plast
   27fc4:	add	x6, x6, #0x18
   27fc8:	sub	x0, x6, x2
   27fcc:	asr	x0, x0, #3
   27fd0:	mul	x0, x0, x1
   27fd4:	add	x0, x0, #0x1
   27fd8:	cmp	x7, x0
   27fdc:	b.hi	27fac <__sanitizer_set_death_callback@@Base+0x1a30>  // b.pmore
   27fe0:	ldr	x24, [x6, #16]
   27fe4:	mov	x5, x21
   27fe8:	mov	x4, x20
   27fec:	mov	x3, x23
   27ff0:	mov	x2, x22
   27ff4:	mov	x1, x24
   27ff8:	mov	x0, x19
   27ffc:	bl	27ee4 <__sanitizer_set_death_callback@@Base+0x1968>
   28000:	cbnz	w0, 27f70 <__sanitizer_set_death_callback@@Base+0x19f4>
   28004:	ldr	x4, [x24]
   28008:	ldr	w3, [x21]
   2800c:	ldr	x2, [x20]
   28010:	mov	x1, x19
   28014:	mov	x0, x23
   28018:	blr	x22
   2801c:	cbnz	w0, 27f70 <__sanitizer_set_death_callback@@Base+0x19f4>
   28020:	ldr	x1, [x24, #8]
   28024:	str	x1, [x20]
   28028:	ldr	w1, [x24, #16]
   2802c:	str	w1, [x21]
   28030:	b	27f70 <__sanitizer_set_death_callback@@Base+0x19f4>
   28034:	stp	x29, x30, [sp, #-112]!
   28038:	mov	x29, sp
   2803c:	stp	x19, x20, [sp, #16]
   28040:	stp	x23, x24, [sp, #48]
   28044:	stp	x25, x26, [sp, #64]
   28048:	mov	x19, x0
   2804c:	mov	x20, x1
   28050:	mov	x24, x2
   28054:	mov	x25, x3
   28058:	sub	x1, x1, #0x1
   2805c:	ldr	x0, [x0]
   28060:	cmp	x1, x0
   28064:	b.cs	28084 <__sanitizer_set_death_callback@@Base+0x1b08>  // b.hs, b.nlast
   28068:	lsl	x0, x20, #5
   2806c:	sub	x0, x0, #0x20
   28070:	ldr	x1, [x19, #8]
   28074:	add	x26, x1, x0
   28078:	ldr	x0, [x1, x0]
   2807c:	cmp	x0, x20
   28080:	b.eq	280f0 <__sanitizer_set_death_callback@@Base+0x1b74>  // b.none
   28084:	stp	x21, x22, [sp, #32]
   28088:	mov	x2, #0x20                  	// #32
   2808c:	mov	w1, #0x0                   	// #0
   28090:	add	x0, sp, #0x50
   28094:	bl	6860 <__asan_internal_memset@plt>
   28098:	str	x20, [sp, #80]
   2809c:	ldr	x23, [x19, #8]
   280a0:	ldr	x21, [x19]
   280a4:	mov	x20, #0x0                   	// #0
   280a8:	add	x22, sp, #0x50
   280ac:	b	280b4 <__sanitizer_set_death_callback@@Base+0x1b38>
   280b0:	mov	x21, x19
   280b4:	cmp	x21, x20
   280b8:	b.ls	28108 <__sanitizer_set_death_callback@@Base+0x1b8c>  // b.plast
   280bc:	add	x19, x21, x20
   280c0:	lsr	x19, x19, #1
   280c4:	add	x26, x23, x19, lsl #5
   280c8:	mov	x1, x26
   280cc:	mov	x0, x22
   280d0:	bl	27ec4 <__sanitizer_set_death_callback@@Base+0x1948>
   280d4:	tbnz	w0, #31, 280b0 <__sanitizer_set_death_callback@@Base+0x1b34>
   280d8:	cmp	w0, #0x0
   280dc:	b.le	280e8 <__sanitizer_set_death_callback@@Base+0x1b6c>
   280e0:	add	x20, x19, #0x1
   280e4:	b	280b4 <__sanitizer_set_death_callback@@Base+0x1b38>
   280e8:	cbz	x26, 28108 <__sanitizer_set_death_callback@@Base+0x1b8c>
   280ec:	ldp	x21, x22, [sp, #32]
   280f0:	mov	x0, x26
   280f4:	ldp	x19, x20, [sp, #16]
   280f8:	ldp	x23, x24, [sp, #48]
   280fc:	ldp	x25, x26, [sp, #64]
   28100:	ldp	x29, x30, [sp], #112
   28104:	ret
   28108:	mov	w2, #0x0                   	// #0
   2810c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28110:	add	x1, x1, #0x510
   28114:	mov	x0, x25
   28118:	blr	x24
   2811c:	mov	x26, #0x0                   	// #0
   28120:	ldp	x21, x22, [sp, #32]
   28124:	b	280f0 <__sanitizer_set_death_callback@@Base+0x1b74>
   28128:	stp	x29, x30, [sp, #-64]!
   2812c:	mov	x29, sp
   28130:	stp	x19, x20, [sp, #16]
   28134:	stp	x21, x22, [sp, #32]
   28138:	str	x23, [sp, #48]
   2813c:	mov	x23, x1
   28140:	mov	x20, x2
   28144:	mov	x21, x3
   28148:	mov	w22, w4
   2814c:	mov	x2, x5
   28150:	mov	x3, x6
   28154:	mov	x19, x7
   28158:	ldr	x7, [x7, #24]
   2815c:	cbz	x7, 28180 <__sanitizer_set_death_callback@@Base+0x1c04>
   28160:	add	x7, x7, x7, lsl #1
   28164:	lsl	x7, x7, #3
   28168:	sub	x7, x7, #0x18
   2816c:	ldr	x1, [x19]
   28170:	add	x4, x1, x7
   28174:	ldr	x1, [x1, x7]
   28178:	cmp	x1, x20
   2817c:	b.eq	281d4 <__sanitizer_set_death_callback@@Base+0x1c58>  // b.none
   28180:	mov	x4, x19
   28184:	mov	x1, #0x18                  	// #24
   28188:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2818c:	cbz	x0, 281f4 <__sanitizer_set_death_callback@@Base+0x1c78>
   28190:	ldr	x2, [x23, #16]
   28194:	add	x20, x2, x20
   28198:	str	x20, [x0]
   2819c:	str	x21, [x0, #8]
   281a0:	str	w22, [x0, #16]
   281a4:	ldr	x1, [x19, #24]
   281a8:	str	w1, [x0, #20]
   281ac:	ldr	x0, [x19, #24]
   281b0:	add	x0, x0, #0x1
   281b4:	str	x0, [x19, #24]
   281b8:	mov	w1, #0x1                   	// #1
   281bc:	mov	w0, w1
   281c0:	ldp	x19, x20, [sp, #16]
   281c4:	ldp	x21, x22, [sp, #32]
   281c8:	ldr	x23, [sp, #48]
   281cc:	ldp	x29, x30, [sp], #64
   281d0:	ret
   281d4:	ldr	x1, [x4, #8]
   281d8:	cmp	x1, x21
   281dc:	b.ne	28180 <__sanitizer_set_death_callback@@Base+0x1c04>  // b.any
   281e0:	ldr	w4, [x4, #16]
   281e4:	mov	w1, #0x1                   	// #1
   281e8:	cmp	w4, w22
   281ec:	b.ne	28180 <__sanitizer_set_death_callback@@Base+0x1c04>  // b.any
   281f0:	b	281bc <__sanitizer_set_death_callback@@Base+0x1c40>
   281f4:	mov	w1, #0x0                   	// #0
   281f8:	b	281bc <__sanitizer_set_death_callback@@Base+0x1c40>
   281fc:	stp	x29, x30, [sp, #-48]!
   28200:	mov	x29, sp
   28204:	stp	x19, x20, [sp, #16]
   28208:	stp	x21, x22, [sp, #32]
   2820c:	mov	x22, x2
   28210:	mov	x2, x5
   28214:	mov	x19, x7
   28218:	ldr	x21, [x1, #16]
   2821c:	add	x20, x21, x3
   28220:	add	x21, x21, x4
   28224:	ldr	x1, [x7, #24]
   28228:	cbz	x1, 28264 <__sanitizer_set_death_callback@@Base+0x1ce8>
   2822c:	add	x1, x1, x1, lsl #1
   28230:	lsl	x1, x1, #3
   28234:	sub	x1, x1, #0x18
   28238:	ldr	x3, [x7]
   2823c:	add	x1, x3, x1
   28240:	ldr	x3, [x1, #8]
   28244:	cmp	x3, x20
   28248:	b.eq	28258 <__sanitizer_set_death_callback@@Base+0x1cdc>  // b.none
   2824c:	add	x4, x3, #0x1
   28250:	cmp	x4, x20
   28254:	b.ne	28264 <__sanitizer_set_death_callback@@Base+0x1ce8>  // b.any
   28258:	ldr	x4, [x1, #16]
   2825c:	cmp	x4, x22
   28260:	b.eq	282a4 <__sanitizer_set_death_callback@@Base+0x1d28>  // b.none
   28264:	mov	x4, x19
   28268:	mov	x3, x6
   2826c:	mov	x1, #0x18                  	// #24
   28270:	bl	6840 <__asan_backtrace_vector_grow@plt>
   28274:	cbz	x0, 282b8 <__sanitizer_set_death_callback@@Base+0x1d3c>
   28278:	str	x20, [x0]
   2827c:	str	x21, [x0, #8]
   28280:	str	x22, [x0, #16]
   28284:	ldr	x0, [x19, #24]
   28288:	add	x0, x0, #0x1
   2828c:	str	x0, [x19, #24]
   28290:	mov	w0, #0x1                   	// #1
   28294:	ldp	x19, x20, [sp, #16]
   28298:	ldp	x21, x22, [sp, #32]
   2829c:	ldp	x29, x30, [sp], #48
   282a0:	ret
   282a4:	mov	w0, #0x1                   	// #1
   282a8:	cmp	x3, x21
   282ac:	b.cs	28294 <__sanitizer_set_death_callback@@Base+0x1d18>  // b.hs, b.nlast
   282b0:	str	x21, [x1, #8]
   282b4:	b	28294 <__sanitizer_set_death_callback@@Base+0x1d18>
   282b8:	mov	w0, #0x0                   	// #0
   282bc:	b	28294 <__sanitizer_set_death_callback@@Base+0x1d18>
   282c0:	stp	x29, x30, [sp, #-48]!
   282c4:	mov	x29, sp
   282c8:	stp	x19, x20, [sp, #16]
   282cc:	stp	x21, x22, [sp, #32]
   282d0:	mov	x19, x2
   282d4:	mov	x2, x3
   282d8:	mov	x3, x4
   282dc:	mov	x20, x5
   282e0:	ldr	x21, [x19]
   282e4:	add	x21, x1, x21
   282e8:	ldr	x22, [x19, #8]
   282ec:	add	x22, x1, x22
   282f0:	ldr	x1, [x5, #24]
   282f4:	cbz	x1, 28334 <__sanitizer_set_death_callback@@Base+0x1db8>
   282f8:	add	x1, x1, x1, lsl #1
   282fc:	lsl	x1, x1, #3
   28300:	sub	x1, x1, #0x18
   28304:	ldr	x4, [x5]
   28308:	add	x1, x4, x1
   2830c:	ldr	x4, [x1, #8]
   28310:	cmp	x21, x4
   28314:	b.eq	28324 <__sanitizer_set_death_callback@@Base+0x1da8>  // b.none
   28318:	add	x5, x4, #0x1
   2831c:	cmp	x21, x5
   28320:	b.ne	28334 <__sanitizer_set_death_callback@@Base+0x1db8>  // b.any
   28324:	ldr	x6, [x19, #16]
   28328:	ldr	x5, [x1, #16]
   2832c:	cmp	x6, x5
   28330:	b.eq	2837c <__sanitizer_set_death_callback@@Base+0x1e00>  // b.none
   28334:	mov	x4, x20
   28338:	mov	x1, #0x18                  	// #24
   2833c:	bl	6840 <__asan_backtrace_vector_grow@plt>
   28340:	cbz	x0, 28390 <__sanitizer_set_death_callback@@Base+0x1e14>
   28344:	str	x21, [x19]
   28348:	str	x22, [x19, #8]
   2834c:	ldp	x2, x3, [x19]
   28350:	stp	x2, x3, [x0]
   28354:	ldr	x1, [x19, #16]
   28358:	str	x1, [x0, #16]
   2835c:	ldr	x0, [x20, #24]
   28360:	add	x0, x0, #0x1
   28364:	str	x0, [x20, #24]
   28368:	mov	w0, #0x1                   	// #1
   2836c:	ldp	x19, x20, [sp, #16]
   28370:	ldp	x21, x22, [sp, #32]
   28374:	ldp	x29, x30, [sp], #48
   28378:	ret
   2837c:	mov	w0, #0x1                   	// #1
   28380:	cmp	x22, x4
   28384:	b.ls	2836c <__sanitizer_set_death_callback@@Base+0x1df0>  // b.plast
   28388:	str	x22, [x1, #8]
   2838c:	b	2836c <__sanitizer_set_death_callback@@Base+0x1df0>
   28390:	mov	w0, #0x0                   	// #0
   28394:	b	2836c <__sanitizer_set_death_callback@@Base+0x1df0>
   28398:	stp	x29, x30, [sp, #-240]!
   2839c:	mov	x29, sp
   283a0:	stp	x19, x20, [sp, #16]
   283a4:	mov	x19, x0
   283a8:	ldr	x5, [x0, #16]
   283ac:	ldr	x0, [x0, #8]
   283b0:	add	x20, sp, #0x28
   283b4:	sub	w5, w5, w0
   283b8:	ldr	x4, [x19]
   283bc:	mov	x3, x1
   283c0:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   283c4:	add	x2, x2, #0x530
   283c8:	mov	x1, #0xc8                  	// #200
   283cc:	mov	x0, x20
   283d0:	bl	6a20 <snprintf@plt>
   283d4:	ldr	x3, [x19, #40]
   283d8:	mov	w2, #0x0                   	// #0
   283dc:	mov	x1, x20
   283e0:	ldr	x0, [x19, #48]
   283e4:	blr	x3
   283e8:	ldp	x19, x20, [sp, #16]
   283ec:	ldp	x29, x30, [sp], #240
   283f0:	ret
   283f4:	stp	x29, x30, [sp, #-32]!
   283f8:	mov	x29, sp
   283fc:	str	x19, [sp, #16]
   28400:	mov	x19, x0
   28404:	ldr	x0, [x0, #24]
   28408:	cmp	x1, x0
   2840c:	b.ls	2843c <__sanitizer_set_death_callback@@Base+0x1ec0>  // b.plast
   28410:	ldr	w0, [x19, #56]
   28414:	cbz	w0, 28420 <__sanitizer_set_death_callback@@Base+0x1ea4>
   28418:	mov	w0, #0x0                   	// #0
   2841c:	b	28454 <__sanitizer_set_death_callback@@Base+0x1ed8>
   28420:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28424:	add	x1, x1, #0x540
   28428:	mov	x0, x19
   2842c:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28430:	mov	w0, #0x1                   	// #1
   28434:	str	w0, [x19, #56]
   28438:	b	28418 <__sanitizer_set_death_callback@@Base+0x1e9c>
   2843c:	ldr	x2, [x19, #16]
   28440:	add	x2, x2, x1
   28444:	str	x2, [x19, #16]
   28448:	sub	x1, x0, x1
   2844c:	str	x1, [x19, #24]
   28450:	mov	w0, #0x1                   	// #1
   28454:	ldr	x19, [sp, #16]
   28458:	ldp	x29, x30, [sp], #32
   2845c:	ret
   28460:	stp	x29, x30, [sp, #-32]!
   28464:	mov	x29, sp
   28468:	stp	x19, x20, [sp, #16]
   2846c:	mov	x19, x0
   28470:	ldr	x20, [x0, #16]
   28474:	mov	x1, #0x4                   	// #4
   28478:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2847c:	cbz	w0, 284d0 <__sanitizer_set_death_callback@@Base+0x1f54>
   28480:	ldr	w0, [x19, #32]
   28484:	cbz	w0, 284ac <__sanitizer_set_death_callback@@Base+0x1f30>
   28488:	ldrb	w0, [x20]
   2848c:	ldrb	w1, [x20, #1]
   28490:	lsl	w1, w1, #16
   28494:	orr	w0, w1, w0, lsl #24
   28498:	ldrb	w1, [x20, #2]
   2849c:	ldrb	w2, [x20, #3]
   284a0:	orr	w1, w2, w1, lsl #8
   284a4:	orr	w0, w0, w1
   284a8:	b	284d4 <__sanitizer_set_death_callback@@Base+0x1f58>
   284ac:	ldrb	w0, [x20, #3]
   284b0:	ldrb	w1, [x20, #2]
   284b4:	lsl	w1, w1, #16
   284b8:	orr	w0, w1, w0, lsl #24
   284bc:	ldrb	w1, [x20, #1]
   284c0:	ldrb	w2, [x20]
   284c4:	orr	w1, w2, w1, lsl #8
   284c8:	orr	w0, w0, w1
   284cc:	b	284d4 <__sanitizer_set_death_callback@@Base+0x1f58>
   284d0:	mov	w0, #0x0                   	// #0
   284d4:	ldp	x19, x20, [sp, #16]
   284d8:	ldp	x29, x30, [sp], #32
   284dc:	ret
   284e0:	stp	x29, x30, [sp, #-32]!
   284e4:	mov	x29, sp
   284e8:	stp	x19, x20, [sp, #16]
   284ec:	mov	x20, x0
   284f0:	ldr	x19, [x0, #16]
   284f4:	mov	x1, #0x8                   	// #8
   284f8:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   284fc:	cbz	w0, 285a0 <__sanitizer_set_death_callback@@Base+0x2024>
   28500:	ldr	w0, [x20, #32]
   28504:	cbz	w0, 28554 <__sanitizer_set_death_callback@@Base+0x1fd8>
   28508:	ldrb	w0, [x19]
   2850c:	ldrb	w1, [x19, #1]
   28510:	lsl	x1, x1, #48
   28514:	orr	x0, x1, x0, lsl #56
   28518:	ldrb	w1, [x19, #2]
   2851c:	ldrb	w2, [x19, #3]
   28520:	lsl	x2, x2, #32
   28524:	orr	x1, x2, x1, lsl #40
   28528:	orr	x0, x0, x1
   2852c:	ldrb	w1, [x19, #4]
   28530:	ldrb	w2, [x19, #5]
   28534:	lsl	x2, x2, #16
   28538:	orr	x1, x2, x1, lsl #24
   2853c:	orr	x0, x0, x1
   28540:	ldrb	w1, [x19, #6]
   28544:	ldrb	w2, [x19, #7]
   28548:	orr	x1, x2, x1, lsl #8
   2854c:	orr	x0, x0, x1
   28550:	b	285a4 <__sanitizer_set_death_callback@@Base+0x2028>
   28554:	ldrb	w0, [x19, #7]
   28558:	ldrb	w1, [x19, #6]
   2855c:	lsl	x1, x1, #48
   28560:	orr	x0, x1, x0, lsl #56
   28564:	ldrb	w1, [x19, #5]
   28568:	ldrb	w2, [x19, #4]
   2856c:	lsl	x2, x2, #32
   28570:	orr	x1, x2, x1, lsl #40
   28574:	orr	x0, x0, x1
   28578:	ldrb	w1, [x19, #3]
   2857c:	ldrb	w2, [x19, #2]
   28580:	lsl	x2, x2, #16
   28584:	orr	x1, x2, x1, lsl #24
   28588:	orr	x0, x0, x1
   2858c:	ldrb	w1, [x19, #1]
   28590:	ldrb	w2, [x19]
   28594:	orr	x1, x2, x1, lsl #8
   28598:	orr	x0, x0, x1
   2859c:	b	285a4 <__sanitizer_set_death_callback@@Base+0x2028>
   285a0:	mov	x0, #0x0                   	// #0
   285a4:	ldp	x19, x20, [sp, #16]
   285a8:	ldp	x29, x30, [sp], #32
   285ac:	ret
   285b0:	stp	x29, x30, [sp, #-16]!
   285b4:	mov	x29, sp
   285b8:	cbz	w1, 285c8 <__sanitizer_set_death_callback@@Base+0x204c>
   285bc:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   285c0:	ldp	x29, x30, [sp], #16
   285c4:	ret
   285c8:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   285cc:	mov	w0, w0
   285d0:	b	285c0 <__sanitizer_set_death_callback@@Base+0x2044>
   285d4:	stp	x29, x30, [sp, #-32]!
   285d8:	mov	x29, sp
   285dc:	stp	x19, x20, [sp, #16]
   285e0:	mov	x19, x0
   285e4:	ldr	x20, [x0, #16]
   285e8:	mov	x1, #0x2                   	// #2
   285ec:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   285f0:	cbz	w0, 2861c <__sanitizer_set_death_callback@@Base+0x20a0>
   285f4:	ldr	w0, [x19, #32]
   285f8:	cbz	w0, 2860c <__sanitizer_set_death_callback@@Base+0x2090>
   285fc:	ldrb	w1, [x20]
   28600:	ldrb	w0, [x20, #1]
   28604:	bfi	w0, w1, #8, #24
   28608:	b	28620 <__sanitizer_set_death_callback@@Base+0x20a4>
   2860c:	ldrb	w1, [x20, #1]
   28610:	ldrb	w0, [x20]
   28614:	bfi	w0, w1, #8, #24
   28618:	b	28620 <__sanitizer_set_death_callback@@Base+0x20a4>
   2861c:	mov	w0, #0x0                   	// #0
   28620:	ldp	x19, x20, [sp, #16]
   28624:	ldp	x29, x30, [sp], #32
   28628:	ret
   2862c:	stp	x29, x30, [sp, #-32]!
   28630:	mov	x29, sp
   28634:	str	x19, [sp, #16]
   28638:	ldr	x19, [x0, #16]
   2863c:	mov	x1, #0x1                   	// #1
   28640:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   28644:	cbz	w0, 28658 <__sanitizer_set_death_callback@@Base+0x20dc>
   28648:	ldrb	w0, [x19]
   2864c:	ldr	x19, [sp, #16]
   28650:	ldp	x29, x30, [sp], #32
   28654:	ret
   28658:	mov	w0, #0x0                   	// #0
   2865c:	b	2864c <__sanitizer_set_death_callback@@Base+0x20d0>
   28660:	stp	x29, x30, [sp, #-80]!
   28664:	mov	x29, sp
   28668:	stp	x19, x20, [sp, #16]
   2866c:	stp	x21, x22, [sp, #32]
   28670:	stp	x23, x24, [sp, #48]
   28674:	stp	x25, x26, [sp, #64]
   28678:	mov	x20, x0
   2867c:	mov	w24, #0x0                   	// #0
   28680:	mov	w19, #0x0                   	// #0
   28684:	mov	x22, #0x0                   	// #0
   28688:	mov	x23, #0x1                   	// #1
   2868c:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28690:	add	x25, x25, #0x550
   28694:	mov	w26, #0x1                   	// #1
   28698:	b	286a8 <__sanitizer_set_death_callback@@Base+0x212c>
   2869c:	cbz	w24, 286d8 <__sanitizer_set_death_callback@@Base+0x215c>
   286a0:	add	w19, w19, #0x7
   286a4:	tbz	w21, #7, 286f0 <__sanitizer_set_death_callback@@Base+0x2174>
   286a8:	ldr	x21, [x20, #16]
   286ac:	mov	x1, x23
   286b0:	mov	x0, x20
   286b4:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   286b8:	cbz	w0, 286ec <__sanitizer_set_death_callback@@Base+0x2170>
   286bc:	ldrb	w21, [x21]
   286c0:	cmp	w19, #0x3f
   286c4:	b.hi	2869c <__sanitizer_set_death_callback@@Base+0x2120>  // b.pmore
   286c8:	and	x0, x21, #0x7f
   286cc:	lsl	x0, x0, x19
   286d0:	orr	x22, x22, x0
   286d4:	b	286a0 <__sanitizer_set_death_callback@@Base+0x2124>
   286d8:	mov	x1, x25
   286dc:	mov	x0, x20
   286e0:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   286e4:	mov	w24, w26
   286e8:	b	286a0 <__sanitizer_set_death_callback@@Base+0x2124>
   286ec:	mov	x22, #0x0                   	// #0
   286f0:	mov	x0, x22
   286f4:	ldp	x19, x20, [sp, #16]
   286f8:	ldp	x21, x22, [sp, #32]
   286fc:	ldp	x23, x24, [sp, #48]
   28700:	ldp	x25, x26, [sp, #64]
   28704:	ldp	x29, x30, [sp], #80
   28708:	ret
   2870c:	stp	x29, x30, [sp, #-16]!
   28710:	mov	x29, sp
   28714:	cmp	w1, #0x4
   28718:	b.eq	2875c <__sanitizer_set_death_callback@@Base+0x21e0>  // b.none
   2871c:	b.gt	2873c <__sanitizer_set_death_callback@@Base+0x21c0>
   28720:	cmp	w1, #0x1
   28724:	b.eq	2874c <__sanitizer_set_death_callback@@Base+0x21d0>  // b.none
   28728:	cmp	w1, #0x2
   2872c:	b.ne	28768 <__sanitizer_set_death_callback@@Base+0x21ec>  // b.any
   28730:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   28734:	and	x0, x0, #0xffff
   28738:	b	28754 <__sanitizer_set_death_callback@@Base+0x21d8>
   2873c:	cmp	w1, #0x8
   28740:	b.ne	28768 <__sanitizer_set_death_callback@@Base+0x21ec>  // b.any
   28744:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   28748:	b	28754 <__sanitizer_set_death_callback@@Base+0x21d8>
   2874c:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   28750:	and	x0, x0, #0xff
   28754:	ldp	x29, x30, [sp], #16
   28758:	ret
   2875c:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   28760:	mov	w0, w0
   28764:	b	28754 <__sanitizer_set_death_callback@@Base+0x21d8>
   28768:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2876c:	add	x1, x1, #0x570
   28770:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28774:	mov	x0, #0x0                   	// #0
   28778:	b	28754 <__sanitizer_set_death_callback@@Base+0x21d8>
   2877c:	stp	x29, x30, [sp, #-80]!
   28780:	mov	x29, sp
   28784:	stp	x19, x20, [sp, #16]
   28788:	stp	x21, x22, [sp, #32]
   2878c:	stp	x23, x24, [sp, #48]
   28790:	stp	x25, x26, [sp, #64]
   28794:	mov	x21, x0
   28798:	mov	w24, #0x0                   	// #0
   2879c:	mov	w19, #0x0                   	// #0
   287a0:	mov	x22, #0x0                   	// #0
   287a4:	mov	x23, #0x1                   	// #1
   287a8:	adrp	x25, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   287ac:	add	x25, x25, #0x590
   287b0:	mov	w26, #0x1                   	// #1
   287b4:	b	287c4 <__sanitizer_set_death_callback@@Base+0x2248>
   287b8:	cbz	w24, 287f4 <__sanitizer_set_death_callback@@Base+0x2278>
   287bc:	add	w19, w19, #0x7
   287c0:	tbz	w20, #7, 28808 <__sanitizer_set_death_callback@@Base+0x228c>
   287c4:	ldr	x20, [x21, #16]
   287c8:	mov	x1, x23
   287cc:	mov	x0, x21
   287d0:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   287d4:	cbz	w0, 28828 <__sanitizer_set_death_callback@@Base+0x22ac>
   287d8:	ldrb	w20, [x20]
   287dc:	cmp	w19, #0x3f
   287e0:	b.hi	287b8 <__sanitizer_set_death_callback@@Base+0x223c>  // b.pmore
   287e4:	and	x0, x20, #0x7f
   287e8:	lsl	x0, x0, x19
   287ec:	orr	x22, x22, x0
   287f0:	b	287bc <__sanitizer_set_death_callback@@Base+0x2240>
   287f4:	mov	x1, x25
   287f8:	mov	x0, x21
   287fc:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28800:	mov	w24, w26
   28804:	b	287bc <__sanitizer_set_death_callback@@Base+0x2240>
   28808:	and	w20, w20, #0x40
   2880c:	cmp	w19, #0x3f
   28810:	mov	x0, #0xffffffffffffffff    	// #-1
   28814:	lsl	x0, x0, x19
   28818:	orr	x0, x22, x0
   2881c:	ccmp	w20, #0x0, #0x4, ls  // ls = plast
   28820:	csel	x0, x0, x22, ne  // ne = any
   28824:	b	2882c <__sanitizer_set_death_callback@@Base+0x22b0>
   28828:	mov	x0, #0x0                   	// #0
   2882c:	ldp	x19, x20, [sp, #16]
   28830:	ldp	x21, x22, [sp, #32]
   28834:	ldp	x23, x24, [sp, #48]
   28838:	ldp	x25, x26, [sp, #64]
   2883c:	ldp	x29, x30, [sp], #80
   28840:	ret
   28844:	stp	x29, x30, [sp, #-32]!
   28848:	mov	x29, sp
   2884c:	stp	x19, x20, [sp, #16]
   28850:	mov	x19, x0
   28854:	ldr	x20, [x0, #16]
   28858:	ldr	x1, [x0, #24]
   2885c:	mov	x0, x20
   28860:	bl	6b50 <__asan_internal_strnlen@plt>
   28864:	add	x1, x0, #0x1
   28868:	mov	x0, x19
   2886c:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   28870:	cmp	w0, #0x0
   28874:	csel	x0, x20, xzr, ne  // ne = any
   28878:	ldp	x19, x20, [sp, #16]
   2887c:	ldp	x29, x30, [sp], #32
   28880:	ret
   28884:	sub	sp, sp, #0x70
   28888:	stp	x29, x30, [sp, #16]
   2888c:	add	x29, sp, #0x10
   28890:	stp	x19, x20, [sp, #32]
   28894:	stp	x21, x22, [sp, #48]
   28898:	stp	x23, x24, [sp, #64]
   2889c:	stp	x25, x26, [sp, #80]
   288a0:	str	x27, [sp, #96]
   288a4:	mov	w19, w0
   288a8:	mov	x20, x1
   288ac:	mov	w22, w2
   288b0:	mov	w25, w3
   288b4:	mov	w24, w4
   288b8:	mov	x27, x5
   288bc:	mov	x26, x6
   288c0:	mov	x23, x7
   288c4:	ldr	x21, [sp, #112]
   288c8:	mov	x2, #0x10                  	// #16
   288cc:	mov	w1, #0x0                   	// #0
   288d0:	mov	x0, x21
   288d4:	bl	6860 <__asan_internal_memset@plt>
   288d8:	cmp	w19, #0x20
   288dc:	b.hi	28908 <__sanitizer_set_death_callback@@Base+0x238c>  // b.pmore
   288e0:	cbz	w19, 28d6c <__sanitizer_set_death_callback@@Base+0x27f0>
   288e4:	sub	w19, w19, #0x1
   288e8:	cmp	w19, #0x1f
   288ec:	b.hi	28d6c <__sanitizer_set_death_callback@@Base+0x27f0>  // b.pmore
   288f0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   288f4:	add	x1, x1, #0x850
   288f8:	ldrh	w0, [x1, w19, uxtw #1]
   288fc:	adr	x1, 28908 <__sanitizer_set_death_callback@@Base+0x238c>
   28900:	add	x0, x1, w0, sxth #2
   28904:	br	x0
   28908:	mov	w0, #0x1f20                	// #7968
   2890c:	cmp	w19, w0
   28910:	b.eq	28d18 <__sanitizer_set_death_callback@@Base+0x279c>  // b.none
   28914:	b.ls	2895c <__sanitizer_set_death_callback@@Base+0x23e0>  // b.plast
   28918:	mov	w0, #0x1f21                	// #7969
   2891c:	cmp	w19, w0
   28920:	b.ne	28d6c <__sanitizer_set_death_callback@@Base+0x27f0>  // b.any
   28924:	mov	w1, w22
   28928:	mov	x0, x20
   2892c:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   28930:	cbz	x23, 28d48 <__sanitizer_set_death_callback@@Base+0x27cc>
   28934:	ldr	x1, [x23, #112]
   28938:	cmp	x1, x0
   2893c:	b.ls	28d54 <__sanitizer_set_death_callback@@Base+0x27d8>  // b.plast
   28940:	mov	w1, #0x4                   	// #4
   28944:	str	w1, [x21]
   28948:	ldr	x1, [x23, #104]
   2894c:	add	x0, x1, x0
   28950:	str	x0, [x21, #8]
   28954:	mov	w0, #0x1                   	// #1
   28958:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   2895c:	mov	w0, #0x1f01                	// #7937
   28960:	cmp	w19, w0
   28964:	b.eq	28cfc <__sanitizer_set_death_callback@@Base+0x2780>  // b.none
   28968:	mov	w0, #0x1f02                	// #7938
   2896c:	cmp	w19, w0
   28970:	b.ne	28d6c <__sanitizer_set_death_callback@@Base+0x27f0>  // b.any
   28974:	mov	w0, #0x8                   	// #8
   28978:	str	w0, [x21]
   2897c:	mov	x0, x20
   28980:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28984:	str	x0, [x21, #8]
   28988:	mov	w0, #0x1                   	// #1
   2898c:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28990:	mov	w19, #0x1                   	// #1
   28994:	str	w19, [x21]
   28998:	mov	w1, w24
   2899c:	mov	x0, x20
   289a0:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   289a4:	str	x0, [x21, #8]
   289a8:	mov	w0, w19
   289ac:	ldp	x19, x20, [sp, #32]
   289b0:	ldp	x21, x22, [sp, #48]
   289b4:	ldp	x23, x24, [sp, #64]
   289b8:	ldp	x25, x26, [sp, #80]
   289bc:	ldr	x27, [sp, #96]
   289c0:	ldp	x29, x30, [sp, #16]
   289c4:	add	sp, sp, #0x70
   289c8:	ret
   289cc:	mov	w0, #0xa                   	// #10
   289d0:	str	w0, [x21]
   289d4:	mov	x0, x20
   289d8:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   289dc:	and	x1, x0, #0xffff
   289e0:	mov	x0, x20
   289e4:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   289e8:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   289ec:	mov	w0, #0xa                   	// #10
   289f0:	str	w0, [x21]
   289f4:	mov	x0, x20
   289f8:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   289fc:	mov	w1, w0
   28a00:	mov	x0, x20
   28a04:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   28a08:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28a0c:	mov	w0, #0x2                   	// #2
   28a10:	str	w0, [x21]
   28a14:	mov	x0, x20
   28a18:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   28a1c:	and	x0, x0, #0xffff
   28a20:	str	x0, [x21, #8]
   28a24:	mov	w0, #0x1                   	// #1
   28a28:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28a2c:	mov	w0, #0x2                   	// #2
   28a30:	str	w0, [x21]
   28a34:	mov	x0, x20
   28a38:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   28a3c:	mov	w0, w0
   28a40:	str	x0, [x21, #8]
   28a44:	mov	w0, #0x1                   	// #1
   28a48:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28a4c:	mov	w0, #0x2                   	// #2
   28a50:	str	w0, [x21]
   28a54:	mov	x0, x20
   28a58:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   28a5c:	str	x0, [x21, #8]
   28a60:	mov	w0, #0x1                   	// #1
   28a64:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28a68:	mov	w0, #0x4                   	// #4
   28a6c:	str	w0, [x21]
   28a70:	mov	x0, x20
   28a74:	bl	28844 <__sanitizer_set_death_callback@@Base+0x22c8>
   28a78:	str	x0, [x21, #8]
   28a7c:	cmp	x0, #0x0
   28a80:	cset	w0, ne  // ne = any
   28a84:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28a88:	mov	w0, #0xa                   	// #10
   28a8c:	str	w0, [x21]
   28a90:	mov	x0, x20
   28a94:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28a98:	mov	x1, x0
   28a9c:	mov	x0, x20
   28aa0:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   28aa4:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28aa8:	mov	w0, #0xa                   	// #10
   28aac:	str	w0, [x21]
   28ab0:	mov	x0, x20
   28ab4:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   28ab8:	and	x1, x0, #0xff
   28abc:	mov	x0, x20
   28ac0:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   28ac4:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28ac8:	mov	w0, #0x2                   	// #2
   28acc:	str	w0, [x21]
   28ad0:	mov	x0, x20
   28ad4:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   28ad8:	and	x0, x0, #0xff
   28adc:	str	x0, [x21, #8]
   28ae0:	mov	w0, #0x1                   	// #1
   28ae4:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28ae8:	mov	w0, #0x2                   	// #2
   28aec:	str	w0, [x21]
   28af0:	mov	x0, x20
   28af4:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   28af8:	and	x0, x0, #0xff
   28afc:	str	x0, [x21, #8]
   28b00:	mov	w0, #0x1                   	// #1
   28b04:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28b08:	mov	w0, #0x3                   	// #3
   28b0c:	str	w0, [x21]
   28b10:	mov	x0, x20
   28b14:	bl	2877c <__sanitizer_set_death_callback@@Base+0x2200>
   28b18:	str	x0, [x21, #8]
   28b1c:	mov	w0, #0x1                   	// #1
   28b20:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28b24:	mov	w1, w22
   28b28:	mov	x0, x20
   28b2c:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   28b30:	cmp	x26, x0
   28b34:	b.ls	28b50 <__sanitizer_set_death_callback@@Base+0x25d4>  // b.plast
   28b38:	mov	w1, #0x4                   	// #4
   28b3c:	str	w1, [x21]
   28b40:	add	x0, x27, x0
   28b44:	str	x0, [x21, #8]
   28b48:	mov	w0, #0x1                   	// #1
   28b4c:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28b50:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28b54:	add	x1, x1, #0x5b8
   28b58:	mov	x0, x20
   28b5c:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28b60:	mov	w0, #0x0                   	// #0
   28b64:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28b68:	mov	w0, #0x2                   	// #2
   28b6c:	str	w0, [x21]
   28b70:	mov	x0, x20
   28b74:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28b78:	str	x0, [x21, #8]
   28b7c:	mov	w0, #0x1                   	// #1
   28b80:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28b84:	mov	w0, #0x6                   	// #6
   28b88:	str	w0, [x21]
   28b8c:	cmp	w25, #0x2
   28b90:	b.eq	28bac <__sanitizer_set_death_callback@@Base+0x2630>  // b.none
   28b94:	mov	w1, w22
   28b98:	mov	x0, x20
   28b9c:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   28ba0:	str	x0, [x21, #8]
   28ba4:	mov	w0, #0x1                   	// #1
   28ba8:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28bac:	mov	w1, w24
   28bb0:	mov	x0, x20
   28bb4:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   28bb8:	str	x0, [x21, #8]
   28bbc:	mov	w0, #0x1                   	// #1
   28bc0:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28bc4:	mov	w0, #0x5                   	// #5
   28bc8:	str	w0, [x21]
   28bcc:	mov	x0, x20
   28bd0:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   28bd4:	and	x0, x0, #0xff
   28bd8:	str	x0, [x21, #8]
   28bdc:	mov	w0, #0x1                   	// #1
   28be0:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28be4:	mov	w0, #0x5                   	// #5
   28be8:	str	w0, [x21]
   28bec:	mov	x0, x20
   28bf0:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   28bf4:	and	x0, x0, #0xffff
   28bf8:	str	x0, [x21, #8]
   28bfc:	mov	w0, #0x1                   	// #1
   28c00:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28c04:	mov	w0, #0x5                   	// #5
   28c08:	str	w0, [x21]
   28c0c:	mov	x0, x20
   28c10:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   28c14:	mov	w0, w0
   28c18:	str	x0, [x21, #8]
   28c1c:	mov	w0, #0x1                   	// #1
   28c20:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28c24:	mov	w0, #0x5                   	// #5
   28c28:	str	w0, [x21]
   28c2c:	mov	x0, x20
   28c30:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   28c34:	str	x0, [x21, #8]
   28c38:	mov	w0, #0x1                   	// #1
   28c3c:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28c40:	mov	w0, #0x5                   	// #5
   28c44:	str	w0, [x21]
   28c48:	mov	x0, x20
   28c4c:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28c50:	str	x0, [x21, #8]
   28c54:	mov	w0, #0x1                   	// #1
   28c58:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28c5c:	mov	x0, x20
   28c60:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28c64:	str	x21, [sp]
   28c68:	mov	x7, x23
   28c6c:	mov	x6, x26
   28c70:	mov	x5, x27
   28c74:	mov	w4, w24
   28c78:	mov	w3, w25
   28c7c:	mov	w2, w22
   28c80:	mov	x1, x20
   28c84:	bl	28884 <__sanitizer_set_death_callback@@Base+0x2308>
   28c88:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28c8c:	mov	w0, #0x8                   	// #8
   28c90:	str	w0, [x21]
   28c94:	mov	w1, w22
   28c98:	mov	x0, x20
   28c9c:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   28ca0:	str	x0, [x21, #8]
   28ca4:	mov	w0, #0x1                   	// #1
   28ca8:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28cac:	mov	w0, #0xb                   	// #11
   28cb0:	str	w0, [x21]
   28cb4:	mov	x0, x20
   28cb8:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28cbc:	mov	x1, x0
   28cc0:	mov	x0, x20
   28cc4:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   28cc8:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28ccc:	mov	w0, #0x2                   	// #2
   28cd0:	str	w0, [x21]
   28cd4:	mov	x0, #0x1                   	// #1
   28cd8:	str	x0, [x21, #8]
   28cdc:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28ce0:	mov	w0, #0x9                   	// #9
   28ce4:	str	w0, [x21]
   28ce8:	mov	x0, x20
   28cec:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   28cf0:	str	x0, [x21, #8]
   28cf4:	mov	w0, #0x1                   	// #1
   28cf8:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28cfc:	mov	w0, #0x8                   	// #8
   28d00:	str	w0, [x21]
   28d04:	mov	x0, x20
   28d08:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28d0c:	str	x0, [x21, #8]
   28d10:	mov	w0, #0x1                   	// #1
   28d14:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28d18:	mov	w1, w22
   28d1c:	mov	x0, x20
   28d20:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   28d24:	str	x0, [x21, #8]
   28d28:	cbz	x23, 28d3c <__sanitizer_set_death_callback@@Base+0x27c0>
   28d2c:	mov	w0, #0x7                   	// #7
   28d30:	str	w0, [x21]
   28d34:	mov	w0, #0x1                   	// #1
   28d38:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28d3c:	str	wzr, [x21]
   28d40:	mov	w0, #0x1                   	// #1
   28d44:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28d48:	str	wzr, [x21]
   28d4c:	mov	w0, #0x1                   	// #1
   28d50:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28d54:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28d58:	add	x1, x1, #0x5d8
   28d5c:	mov	x0, x20
   28d60:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28d64:	mov	w0, #0x0                   	// #0
   28d68:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28d6c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28d70:	add	x1, x1, #0x600
   28d74:	mov	x0, x20
   28d78:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28d7c:	mov	w0, #0x0                   	// #0
   28d80:	b	289ac <__sanitizer_set_death_callback@@Base+0x2430>
   28d84:	sub	sp, sp, #0xd0
   28d88:	stp	x29, x30, [sp, #16]
   28d8c:	add	x29, sp, #0x10
   28d90:	stp	x19, x20, [sp, #32]
   28d94:	stp	x25, x26, [sp, #80]
   28d98:	mov	x20, x0
   28d9c:	mov	x26, x3
   28da0:	str	x4, [sp, #120]
   28da4:	ldr	x0, [x1, #16]
   28da8:	cmp	x0, x2
   28dac:	b.hi	28e5c <__sanitizer_set_death_callback@@Base+0x28e0>  // b.pmore
   28db0:	mov	x19, x1
   28db4:	sub	x5, x2, x0
   28db8:	ldr	x4, [x1, #8]
   28dbc:	cmp	x5, x4
   28dc0:	b.cs	28e5c <__sanitizer_set_death_callback@@Base+0x28e0>  // b.hs, b.nlast
   28dc4:	adrp	x3, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28dc8:	add	x3, x3, #0x648
   28dcc:	str	x3, [sp, #144]
   28dd0:	ldr	x1, [x20, #56]
   28dd4:	str	x1, [sp, #152]
   28dd8:	ldr	x1, [x19]
   28ddc:	add	x1, x1, x5
   28de0:	str	x1, [sp, #160]
   28de4:	add	x0, x0, x4
   28de8:	sub	x0, x0, x2
   28dec:	str	x0, [sp, #168]
   28df0:	ldr	w0, [x20, #120]
   28df4:	str	w0, [sp, #176]
   28df8:	str	x26, [sp, #184]
   28dfc:	ldr	x0, [sp, #120]
   28e00:	str	x0, [sp, #192]
   28e04:	str	wzr, [sp, #200]
   28e08:	add	x0, sp, #0x90
   28e0c:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   28e10:	mov	x1, x0
   28e14:	cbz	x0, 28e8c <__sanitizer_set_death_callback@@Base+0x2910>
   28e18:	stp	x23, x24, [sp, #64]
   28e1c:	ldr	x3, [sp, #120]
   28e20:	mov	x2, x26
   28e24:	add	x0, x19, #0x58
   28e28:	bl	28034 <__sanitizer_set_death_callback@@Base+0x1ab8>
   28e2c:	mov	x23, x0
   28e30:	cbz	x0, 28fa8 <__sanitizer_set_death_callback@@Base+0x2a2c>
   28e34:	stp	x21, x22, [sp, #48]
   28e38:	ldr	x0, [x0, #16]
   28e3c:	mov	x21, #0x0                   	// #0
   28e40:	mov	x25, #0x0                   	// #0
   28e44:	cbz	x0, 28f98 <__sanitizer_set_death_callback@@Base+0x2a1c>
   28e48:	stp	x27, x28, [sp, #96]
   28e4c:	add	x27, sp, #0x90
   28e50:	add	x24, sp, #0x80
   28e54:	mov	w28, #0x2007                	// #8199
   28e58:	b	28f04 <__sanitizer_set_death_callback@@Base+0x2988>
   28e5c:	mov	w2, #0x0                   	// #0
   28e60:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28e64:	add	x1, x1, #0x618
   28e68:	ldr	x0, [sp, #120]
   28e6c:	blr	x26
   28e70:	mov	x25, #0x0                   	// #0
   28e74:	mov	x0, x25
   28e78:	ldp	x19, x20, [sp, #32]
   28e7c:	ldp	x25, x26, [sp, #80]
   28e80:	ldp	x29, x30, [sp, #16]
   28e84:	add	sp, sp, #0xd0
   28e88:	ret
   28e8c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   28e90:	add	x1, x1, #0x658
   28e94:	add	x0, sp, #0x90
   28e98:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   28e9c:	mov	x25, #0x0                   	// #0
   28ea0:	b	28e74 <__sanitizer_set_death_callback@@Base+0x28f8>
   28ea4:	cmp	w0, #0x6e
   28ea8:	b.eq	28eb4 <__sanitizer_set_death_callback@@Base+0x2938>  // b.none
   28eac:	cmp	w0, w28
   28eb0:	b.ne	28ef4 <__sanitizer_set_death_callback@@Base+0x2978>  // b.any
   28eb4:	ldr	w0, [sp, #128]
   28eb8:	cmp	w0, #0x4
   28ebc:	b.ne	28ef4 <__sanitizer_set_death_callback@@Base+0x2978>  // b.any
   28ec0:	ldr	x25, [sp, #136]
   28ec4:	ldp	x21, x22, [sp, #48]
   28ec8:	ldp	x23, x24, [sp, #64]
   28ecc:	ldp	x27, x28, [sp, #96]
   28ed0:	b	28e74 <__sanitizer_set_death_callback@@Base+0x28f8>
   28ed4:	ldr	x5, [sp, #120]
   28ed8:	mov	x4, x26
   28edc:	mov	x3, x24
   28ee0:	mov	x1, x19
   28ee4:	mov	x0, x20
   28ee8:	bl	28fb4 <__sanitizer_set_death_callback@@Base+0x2a38>
   28eec:	cmp	x0, #0x0
   28ef0:	csel	x25, x25, x0, eq  // eq = none
   28ef4:	add	x21, x21, #0x1
   28ef8:	ldr	x0, [x23, #16]
   28efc:	cmp	x0, x21
   28f00:	b.ls	28f74 <__sanitizer_set_death_callback@@Base+0x29f8>  // b.plast
   28f04:	lsl	x22, x21, #3
   28f08:	ldr	x0, [x23, #24]
   28f0c:	add	x0, x0, x22
   28f10:	ldr	w0, [x0, #4]
   28f14:	str	x24, [sp]
   28f18:	ldr	x7, [x20, #8]
   28f1c:	ldr	x6, [x20, #112]
   28f20:	ldr	x5, [x20, #104]
   28f24:	ldr	w4, [x19, #48]
   28f28:	ldr	w3, [x19, #40]
   28f2c:	ldr	w2, [x19, #44]
   28f30:	mov	x1, x27
   28f34:	bl	28884 <__sanitizer_set_death_callback@@Base+0x2308>
   28f38:	cbz	w0, 28f84 <__sanitizer_set_death_callback@@Base+0x2a08>
   28f3c:	ldr	x0, [x23, #24]
   28f40:	add	x2, x0, x22
   28f44:	ldr	w0, [x0, x22]
   28f48:	cmp	w0, #0x47
   28f4c:	b.eq	28ed4 <__sanitizer_set_death_callback@@Base+0x2958>  // b.none
   28f50:	b.hi	28ea4 <__sanitizer_set_death_callback@@Base+0x2928>  // b.pmore
   28f54:	cmp	w0, #0x3
   28f58:	b.ne	28ef4 <__sanitizer_set_death_callback@@Base+0x2978>  // b.any
   28f5c:	cbnz	x25, 28ef4 <__sanitizer_set_death_callback@@Base+0x2978>
   28f60:	ldr	w0, [sp, #128]
   28f64:	cmp	w0, #0x4
   28f68:	ldr	x0, [sp, #136]
   28f6c:	csel	x25, x0, x25, eq  // eq = none
   28f70:	b	28ef4 <__sanitizer_set_death_callback@@Base+0x2978>
   28f74:	ldp	x21, x22, [sp, #48]
   28f78:	ldp	x23, x24, [sp, #64]
   28f7c:	ldp	x27, x28, [sp, #96]
   28f80:	b	28e74 <__sanitizer_set_death_callback@@Base+0x28f8>
   28f84:	mov	x25, #0x0                   	// #0
   28f88:	ldp	x21, x22, [sp, #48]
   28f8c:	ldp	x23, x24, [sp, #64]
   28f90:	ldp	x27, x28, [sp, #96]
   28f94:	b	28e74 <__sanitizer_set_death_callback@@Base+0x28f8>
   28f98:	mov	x25, #0x0                   	// #0
   28f9c:	ldp	x21, x22, [sp, #48]
   28fa0:	ldp	x23, x24, [sp, #64]
   28fa4:	b	28e74 <__sanitizer_set_death_callback@@Base+0x28f8>
   28fa8:	mov	x25, x0
   28fac:	ldp	x23, x24, [sp, #64]
   28fb0:	b	28e74 <__sanitizer_set_death_callback@@Base+0x28f8>
   28fb4:	stp	x29, x30, [sp, #-48]!
   28fb8:	mov	x29, sp
   28fbc:	stp	x19, x20, [sp, #16]
   28fc0:	stp	x21, x22, [sp, #32]
   28fc4:	mov	x19, x0
   28fc8:	mov	x6, x3
   28fcc:	mov	x20, x4
   28fd0:	mov	x21, x5
   28fd4:	ldr	w3, [x2]
   28fd8:	cmp	w3, #0x31
   28fdc:	b.eq	28fec <__sanitizer_set_death_callback@@Base+0x2a70>  // b.none
   28fe0:	mov	x0, #0x0                   	// #0
   28fe4:	cmp	w3, #0x47
   28fe8:	b.ne	2901c <__sanitizer_set_death_callback@@Base+0x2aa0>  // b.any
   28fec:	ldr	w0, [x2, #4]
   28ff0:	cmp	w0, #0x20
   28ff4:	b.eq	290b8 <__sanitizer_set_death_callback@@Base+0x2b3c>  // b.none
   28ff8:	ldr	w2, [x6]
   28ffc:	cmp	w2, #0x6
   29000:	b.eq	2902c <__sanitizer_set_death_callback@@Base+0x2ab0>  // b.none
   29004:	cmp	w2, #0x2
   29008:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   2900c:	b.eq	29064 <__sanitizer_set_death_callback@@Base+0x2ae8>  // b.none
   29010:	mov	x0, #0x0                   	// #0
   29014:	cmp	w2, #0x7
   29018:	b.eq	2907c <__sanitizer_set_death_callback@@Base+0x2b00>  // b.none
   2901c:	ldp	x19, x20, [sp, #16]
   29020:	ldp	x21, x22, [sp, #32]
   29024:	ldp	x29, x30, [sp], #48
   29028:	ret
   2902c:	ldr	x22, [x6, #8]
   29030:	mov	x2, x22
   29034:	ldr	x1, [x19, #48]
   29038:	ldr	x0, [x19, #40]
   2903c:	bl	27dd8 <__sanitizer_set_death_callback@@Base+0x185c>
   29040:	cbz	x0, 2901c <__sanitizer_set_death_callback@@Base+0x2aa0>
   29044:	ldr	x2, [x0, #24]
   29048:	mov	x4, x21
   2904c:	mov	x3, x20
   29050:	sub	x2, x22, x2
   29054:	mov	x1, x0
   29058:	mov	x0, x19
   2905c:	bl	28d84 <__sanitizer_set_death_callback@@Base+0x2808>
   29060:	b	2901c <__sanitizer_set_death_callback@@Base+0x2aa0>
   29064:	mov	x4, x21
   29068:	mov	x3, x20
   2906c:	ldr	x2, [x6, #8]
   29070:	mov	x0, x19
   29074:	bl	28d84 <__sanitizer_set_death_callback@@Base+0x2808>
   29078:	b	2901c <__sanitizer_set_death_callback@@Base+0x2aa0>
   2907c:	ldr	x19, [x19, #8]
   29080:	ldr	x22, [x6, #8]
   29084:	mov	x2, x22
   29088:	ldr	x1, [x19, #48]
   2908c:	ldr	x0, [x19, #40]
   29090:	bl	27dd8 <__sanitizer_set_death_callback@@Base+0x185c>
   29094:	cbz	x0, 2901c <__sanitizer_set_death_callback@@Base+0x2aa0>
   29098:	ldr	x2, [x0, #24]
   2909c:	mov	x4, x21
   290a0:	mov	x3, x20
   290a4:	sub	x2, x22, x2
   290a8:	mov	x1, x0
   290ac:	mov	x0, x19
   290b0:	bl	28d84 <__sanitizer_set_death_callback@@Base+0x2808>
   290b4:	b	2901c <__sanitizer_set_death_callback@@Base+0x2aa0>
   290b8:	mov	x0, #0x0                   	// #0
   290bc:	b	2901c <__sanitizer_set_death_callback@@Base+0x2aa0>
   290c0:	sub	sp, sp, #0x170
   290c4:	stp	x29, x30, [sp, #48]
   290c8:	add	x29, sp, #0x30
   290cc:	stp	x19, x20, [sp, #64]
   290d0:	stp	x21, x22, [sp, #80]
   290d4:	stp	x23, x24, [sp, #96]
   290d8:	stp	x25, x26, [sp, #112]
   290dc:	stp	x27, x28, [sp, #128]
   290e0:	str	x0, [sp, #192]
   290e4:	str	x1, [sp, #200]
   290e8:	mov	x24, x2
   290ec:	str	x5, [sp, #224]
   290f0:	str	x6, [sp, #184]
   290f4:	str	w7, [sp, #236]
   290f8:	ldr	x22, [sp, #392]
   290fc:	add	x0, sp, #0x130
   29100:	str	x0, [sp, #216]
   29104:	mov	x25, x0
   29108:	add	x0, sp, #0xf0
   2910c:	str	x0, [sp, #208]
   29110:	str	x25, [sp, #176]
   29114:	mov	x28, x4
   29118:	mov	x26, x3
   2911c:	ldr	x27, [sp, #368]
   29120:	ldr	x0, [x24, #24]
   29124:	cbz	x0, 2951c <__sanitizer_set_death_callback@@Base+0x2fa0>
   29128:	mov	x0, x24
   2912c:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   29130:	mov	x1, x0
   29134:	cbz	x0, 29524 <__sanitizer_set_death_callback@@Base+0x2fa8>
   29138:	ldr	x3, [sp, #384]
   2913c:	ldr	x2, [sp, #376]
   29140:	add	x0, x22, #0x58
   29144:	bl	28034 <__sanitizer_set_death_callback@@Base+0x1ab8>
   29148:	mov	x20, x0
   2914c:	cbz	x0, 2952c <__sanitizer_set_death_callback@@Base+0x2fb0>
   29150:	ldr	x0, [sp, #408]
   29154:	cbz	x0, 29164 <__sanitizer_set_death_callback@@Base+0x2be8>
   29158:	ldr	w0, [x20, #8]
   2915c:	ldr	x1, [sp, #408]
   29160:	str	w0, [x1]
   29164:	ldr	x0, [x20, #16]
   29168:	cbz	x0, 29394 <__sanitizer_set_death_callback@@Base+0x2e18>
   2916c:	mov	x21, #0x0                   	// #0
   29170:	str	wzr, [sp, #168]
   29174:	str	xzr, [sp, #160]
   29178:	str	wzr, [sp, #232]
   2917c:	mov	w23, #0x0                   	// #0
   29180:	str	xzr, [sp, #152]
   29184:	str	wzr, [sp, #172]
   29188:	str	xzr, [sp, #144]
   2918c:	b	2924c <__sanitizer_set_death_callback@@Base+0x2cd0>
   29190:	cmp	w0, #0x3
   29194:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   29198:	ldr	w0, [x20, #8]
   2919c:	cmp	w0, #0x11
   291a0:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   291a4:	ldr	w0, [sp, #304]
   291a8:	cmp	w0, #0x4
   291ac:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   291b0:	ldr	x0, [sp, #312]
   291b4:	str	x0, [x22, #64]
   291b8:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   291bc:	cmp	w0, #0x1b
   291c0:	b.eq	292e4 <__sanitizer_set_death_callback@@Base+0x2d68>  // b.none
   291c4:	cmp	w0, #0x55
   291c8:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   291cc:	ldr	w0, [sp, #304]
   291d0:	cmp	w0, #0x2
   291d4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   291d8:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   291dc:	ldr	x0, [sp, #312]
   291e0:	str	x0, [sp, #160]
   291e4:	mov	w0, #0x1                   	// #1
   291e8:	str	w0, [sp, #168]
   291ec:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   291f0:	ldr	w0, [sp, #304]
   291f4:	cmp	w0, #0x1
   291f8:	b.eq	2921c <__sanitizer_set_death_callback@@Base+0x2ca0>  // b.none
   291fc:	cmp	w0, #0x2
   29200:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   29204:	ldr	x0, [sp, #312]
   29208:	str	x0, [sp, #152]
   2920c:	mov	w0, #0x1                   	// #1
   29210:	str	w0, [sp, #232]
   29214:	mov	w23, w0
   29218:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   2921c:	ldr	x0, [sp, #312]
   29220:	str	x0, [sp, #152]
   29224:	mov	w0, #0x1                   	// #1
   29228:	mov	w23, w0
   2922c:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   29230:	ldr	w0, [x20, #8]
   29234:	cmp	w0, #0x11
   29238:	b.eq	292c8 <__sanitizer_set_death_callback@@Base+0x2d4c>  // b.none
   2923c:	add	x21, x21, #0x1
   29240:	ldr	x0, [x20, #16]
   29244:	cmp	x0, x21
   29248:	b.ls	29308 <__sanitizer_set_death_callback@@Base+0x2d8c>  // b.plast
   2924c:	lsl	x19, x21, #3
   29250:	ldr	x0, [x20, #24]
   29254:	add	x0, x0, x19
   29258:	ldr	w0, [x0, #4]
   2925c:	str	x25, [sp]
   29260:	mov	x7, x27
   29264:	mov	x6, x28
   29268:	mov	x5, x26
   2926c:	ldr	w4, [x22, #48]
   29270:	ldr	w3, [x22, #40]
   29274:	ldr	w2, [x22, #44]
   29278:	mov	x1, x24
   2927c:	bl	28884 <__sanitizer_set_death_callback@@Base+0x2308>
   29280:	cbz	w0, 2953c <__sanitizer_set_death_callback@@Base+0x2fc0>
   29284:	ldr	x0, [x20, #24]
   29288:	ldr	w0, [x0, x19]
   2928c:	cmp	w0, #0x12
   29290:	b.eq	291f0 <__sanitizer_set_death_callback@@Base+0x2c74>  // b.none
   29294:	b.hi	291bc <__sanitizer_set_death_callback@@Base+0x2c40>  // b.pmore
   29298:	cmp	w0, #0x10
   2929c:	b.eq	29230 <__sanitizer_set_death_callback@@Base+0x2cb4>  // b.none
   292a0:	cmp	w0, #0x11
   292a4:	b.ne	29190 <__sanitizer_set_death_callback@@Base+0x2c14>  // b.any
   292a8:	ldr	w0, [sp, #304]
   292ac:	cmp	w0, #0x1
   292b0:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   292b4:	ldr	x0, [sp, #312]
   292b8:	str	x0, [sp, #144]
   292bc:	mov	w0, #0x1                   	// #1
   292c0:	str	w0, [sp, #172]
   292c4:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   292c8:	ldr	w0, [sp, #304]
   292cc:	cmp	w0, #0x2
   292d0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   292d4:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   292d8:	ldr	x0, [sp, #312]
   292dc:	str	x0, [x22, #56]
   292e0:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   292e4:	ldr	w0, [x20, #8]
   292e8:	cmp	w0, #0x11
   292ec:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   292f0:	ldr	w0, [sp, #304]
   292f4:	cmp	w0, #0x4
   292f8:	b.ne	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>  // b.any
   292fc:	ldr	x0, [sp, #312]
   29300:	str	x0, [x22, #72]
   29304:	b	2923c <__sanitizer_set_death_callback@@Base+0x2cc0>
   29308:	ldr	w0, [x20, #8]
   2930c:	cmp	w0, #0x2e
   29310:	ccmp	w0, #0x11, #0x4, ne  // ne = any
   29314:	b.ne	29394 <__sanitizer_set_death_callback@@Base+0x2e18>  // b.any
   29318:	ldr	w0, [sp, #168]
   2931c:	cbnz	w0, 293f0 <__sanitizer_set_death_callback@@Base+0x2e74>
   29320:	ldr	w0, [sp, #172]
   29324:	cmp	w0, #0x0
   29328:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   2932c:	b.eq	29394 <__sanitizer_set_death_callback@@Base+0x2e18>  // b.none
   29330:	ldr	x1, [sp, #152]
   29334:	ldr	x2, [sp, #144]
   29338:	add	x0, x1, x2
   2933c:	ldr	w3, [sp, #232]
   29340:	cmp	w3, #0x0
   29344:	csel	x0, x0, x1, ne  // ne = any
   29348:	str	x2, [sp, #304]
   2934c:	str	x0, [sp, #312]
   29350:	str	x22, [sp, #320]
   29354:	ldr	x0, [sp, #216]
   29358:	ldp	x0, x1, [x0]
   2935c:	ldr	x2, [sp, #208]
   29360:	stp	x0, x1, [x2]
   29364:	str	x22, [x2, #16]
   29368:	ldr	x5, [sp, #400]
   2936c:	ldr	x4, [sp, #384]
   29370:	ldr	x3, [sp, #376]
   29374:	ldr	x1, [sp, #200]
   29378:	ldr	x0, [sp, #192]
   2937c:	bl	282c0 <__sanitizer_set_death_callback@@Base+0x1d44>
   29380:	mov	w19, w0
   29384:	cbz	w0, 29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   29388:	ldr	w0, [x20, #8]
   2938c:	cmp	w0, #0x11
   29390:	b.eq	29534 <__sanitizer_set_death_callback@@Base+0x2fb8>  // b.none
   29394:	ldr	w0, [x20, #12]
   29398:	cbz	w0, 29120 <__sanitizer_set_death_callback@@Base+0x2ba4>
   2939c:	str	xzr, [sp, #40]
   293a0:	ldr	x0, [sp, #400]
   293a4:	str	x0, [sp, #32]
   293a8:	str	x22, [sp, #24]
   293ac:	ldr	x0, [sp, #384]
   293b0:	str	x0, [sp, #16]
   293b4:	ldr	x0, [sp, #376]
   293b8:	str	x0, [sp, #8]
   293bc:	str	x27, [sp]
   293c0:	ldr	w7, [sp, #236]
   293c4:	ldr	x6, [sp, #184]
   293c8:	ldr	x5, [sp, #224]
   293cc:	mov	x4, x28
   293d0:	mov	x3, x26
   293d4:	mov	x2, x24
   293d8:	ldr	x1, [sp, #200]
   293dc:	ldr	x0, [sp, #192]
   293e0:	bl	290c0 <__sanitizer_set_death_callback@@Base+0x2b44>
   293e4:	mov	w19, w0
   293e8:	cbnz	w0, 29120 <__sanitizer_set_death_callback@@Base+0x2ba4>
   293ec:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   293f0:	ldr	x0, [sp, #160]
   293f4:	ldr	x1, [sp, #184]
   293f8:	cmp	x0, x1
   293fc:	b.cs	2944c <__sanitizer_set_death_callback@@Base+0x2ed0>  // b.hs, b.nlast
   29400:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   29404:	add	x0, x0, #0x6a8
   29408:	str	x0, [sp, #304]
   2940c:	ldr	x0, [sp, #224]
   29410:	str	x0, [sp, #312]
   29414:	ldr	x1, [sp, #160]
   29418:	add	x0, x0, x1
   2941c:	str	x0, [sp, #320]
   29420:	ldr	x0, [sp, #184]
   29424:	sub	x0, x0, x1
   29428:	str	x0, [sp, #328]
   2942c:	ldr	w0, [sp, #236]
   29430:	str	w0, [sp, #336]
   29434:	ldr	x0, [sp, #376]
   29438:	str	x0, [sp, #344]
   2943c:	ldr	x0, [sp, #384]
   29440:	str	x0, [sp, #352]
   29444:	str	wzr, [sp, #360]
   29448:	b	29470 <__sanitizer_set_death_callback@@Base+0x2ef4>
   2944c:	mov	w2, #0x0                   	// #0
   29450:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   29454:	add	x1, x1, #0x688
   29458:	ldr	x0, [sp, #384]
   2945c:	ldr	x3, [sp, #376]
   29460:	blr	x3
   29464:	mov	w19, #0x0                   	// #0
   29468:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   2946c:	str	x23, [sp, #144]
   29470:	ldr	w19, [sp, #360]
   29474:	cbnz	w19, 29464 <__sanitizer_set_death_callback@@Base+0x2ee8>
   29478:	ldr	w1, [x22, #48]
   2947c:	ldr	x23, [sp, #176]
   29480:	mov	x0, x23
   29484:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   29488:	mov	x21, x0
   2948c:	ldr	w1, [x22, #48]
   29490:	mov	x0, x23
   29494:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   29498:	mov	x23, x0
   2949c:	orr	x0, x21, x0
   294a0:	cbz	x0, 29500 <__sanitizer_set_death_callback@@Base+0x2f84>
   294a4:	ldr	w1, [x22, #48]
   294a8:	mov	x0, x21
   294ac:	bl	27d6c <__sanitizer_set_death_callback@@Base+0x17f0>
   294b0:	cbnz	w0, 2946c <__sanitizer_set_death_callback@@Base+0x2ef0>
   294b4:	ldr	x0, [sp, #144]
   294b8:	add	x21, x21, x0
   294bc:	str	x21, [sp, #280]
   294c0:	add	x23, x23, x0
   294c4:	str	x23, [sp, #288]
   294c8:	str	x22, [sp, #296]
   294cc:	add	x0, sp, #0x200
   294d0:	ldp	x0, x1, [x0, #-232]
   294d4:	ldr	x2, [sp, #208]
   294d8:	stp	x0, x1, [x2]
   294dc:	str	x22, [x2, #16]
   294e0:	ldr	x5, [sp, #400]
   294e4:	ldr	x4, [sp, #384]
   294e8:	ldr	x3, [sp, #376]
   294ec:	ldr	x1, [sp, #200]
   294f0:	ldr	x0, [sp, #192]
   294f4:	bl	282c0 <__sanitizer_set_death_callback@@Base+0x1d44>
   294f8:	cbnz	w0, 29470 <__sanitizer_set_death_callback@@Base+0x2ef4>
   294fc:	b	29464 <__sanitizer_set_death_callback@@Base+0x2ee8>
   29500:	ldr	w0, [sp, #360]
   29504:	cbnz	w0, 29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   29508:	ldr	w0, [x20, #8]
   2950c:	cmp	w0, #0x11
   29510:	b.ne	29394 <__sanitizer_set_death_callback@@Base+0x2e18>  // b.any
   29514:	ldr	w19, [sp, #168]
   29518:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   2951c:	mov	w19, #0x1                   	// #1
   29520:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   29524:	mov	w19, #0x1                   	// #1
   29528:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   2952c:	mov	w19, #0x0                   	// #0
   29530:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   29534:	mov	w19, #0x1                   	// #1
   29538:	b	29540 <__sanitizer_set_death_callback@@Base+0x2fc4>
   2953c:	mov	w19, w0
   29540:	mov	w0, w19
   29544:	ldp	x19, x20, [sp, #64]
   29548:	ldp	x21, x22, [sp, #80]
   2954c:	ldp	x23, x24, [sp, #96]
   29550:	ldp	x25, x26, [sp, #112]
   29554:	ldp	x27, x28, [sp, #128]
   29558:	ldp	x29, x30, [sp, #48]
   2955c:	add	sp, sp, #0x170
   29560:	ret
   29564:	ldr	x4, [x0]
   29568:	ldr	x3, [x1]
   2956c:	cmp	x4, x3
   29570:	b.cc	295b8 <__sanitizer_set_death_callback@@Base+0x303c>  // b.lo, b.ul, b.last
   29574:	mov	x2, x0
   29578:	mov	w0, #0x1                   	// #1
   2957c:	b.hi	295c8 <__sanitizer_set_death_callback@@Base+0x304c>  // b.pmore
   29580:	ldr	x4, [x2, #8]
   29584:	ldr	x3, [x1, #8]
   29588:	cmp	x4, x3
   2958c:	b.cc	295c8 <__sanitizer_set_death_callback@@Base+0x304c>  // b.lo, b.ul, b.last
   29590:	b.hi	295c0 <__sanitizer_set_death_callback@@Base+0x3044>  // b.pmore
   29594:	stp	x29, x30, [sp, #-16]!
   29598:	mov	x29, sp
   2959c:	ldr	x1, [x1, #16]
   295a0:	ldr	x0, [x2, #16]
   295a4:	ldr	x1, [x1]
   295a8:	ldr	x0, [x0]
   295ac:	bl	6b30 <__asan_internal_strcmp@plt>
   295b0:	ldp	x29, x30, [sp], #16
   295b4:	ret
   295b8:	mov	w0, #0xffffffff            	// #-1
   295bc:	ret
   295c0:	mov	w0, #0xffffffff            	// #-1
   295c4:	ret
   295c8:	ret
   295cc:	sub	sp, sp, #0x120
   295d0:	stp	x29, x30, [sp, #16]
   295d4:	add	x29, sp, #0x10
   295d8:	stp	x19, x20, [sp, #32]
   295dc:	str	x0, [sp, #176]
   295e0:	str	x3, [sp, #184]
   295e4:	str	x5, [sp, #208]
   295e8:	str	x6, [sp, #112]
   295ec:	str	x7, [sp, #120]
   295f0:	ldr	x0, [x4, #24]
   295f4:	cbz	x0, 29c88 <__sanitizer_set_death_callback@@Base+0x370c>
   295f8:	stp	x21, x22, [sp, #48]
   295fc:	stp	x23, x24, [sp, #64]
   29600:	stp	x25, x26, [sp, #80]
   29604:	stp	x27, x28, [sp, #96]
   29608:	mov	x23, x1
   2960c:	mov	x21, x2
   29610:	mov	x27, x4
   29614:	add	x0, x2, #0x58
   29618:	str	x0, [sp, #136]
   2961c:	add	x28, sp, #0xe0
   29620:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   29624:	add	x0, x0, #0x9e0
   29628:	str	x0, [sp, #216]
   2962c:	mov	x0, x27
   29630:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   29634:	mov	x1, x0
   29638:	cbz	x0, 29c90 <__sanitizer_set_death_callback@@Base+0x3714>
   2963c:	ldr	x3, [sp, #120]
   29640:	ldr	x2, [sp, #112]
   29644:	ldr	x0, [sp, #136]
   29648:	bl	28034 <__sanitizer_set_death_callback@@Base+0x1ab8>
   2964c:	mov	x19, x0
   29650:	cbz	x0, 29ca8 <__sanitizer_set_death_callback@@Base+0x372c>
   29654:	ldr	w0, [x0, #8]
   29658:	cmp	w0, #0x2e
   2965c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   29660:	cset	w25, eq  // eq = none
   29664:	cmp	w0, #0x1d
   29668:	csinc	w25, w25, wzr, ne  // ne = any
   2966c:	b.eq	296c4 <__sanitizer_set_death_callback@@Base+0x3148>  // b.none
   29670:	cbnz	w25, 296b8 <__sanitizer_set_death_callback@@Base+0x313c>
   29674:	ldr	x0, [sp, #288]
   29678:	str	x0, [sp, #192]
   2967c:	mov	x22, #0x0                   	// #0
   29680:	ldr	x26, [x19, #16]
   29684:	cbz	x26, 29978 <__sanitizer_set_death_callback@@Base+0x33fc>
   29688:	str	wzr, [sp, #128]
   2968c:	str	wzr, [sp, #148]
   29690:	str	xzr, [sp, #160]
   29694:	str	wzr, [sp, #200]
   29698:	str	wzr, [sp, #168]
   2969c:	str	xzr, [sp, #152]
   296a0:	str	wzr, [sp, #172]
   296a4:	mov	x26, #0x0                   	// #0
   296a8:	mov	x20, #0x0                   	// #0
   296ac:	mov	w0, #0x1                   	// #1
   296b0:	str	w0, [sp, #204]
   296b4:	b	29784 <__sanitizer_set_death_callback@@Base+0x3208>
   296b8:	ldr	x0, [sp, #288]
   296bc:	str	x0, [sp, #192]
   296c0:	b	296cc <__sanitizer_set_death_callback@@Base+0x3150>
   296c4:	ldr	x0, [sp, #296]
   296c8:	str	x0, [sp, #192]
   296cc:	ldr	x3, [sp, #120]
   296d0:	ldr	x2, [sp, #112]
   296d4:	mov	x1, #0x28                  	// #40
   296d8:	ldr	x0, [sp, #176]
   296dc:	bl	68c0 <__asan_backtrace_alloc@plt>
   296e0:	mov	x22, x0
   296e4:	cbz	x0, 29cc0 <__sanitizer_set_death_callback@@Base+0x3744>
   296e8:	mov	x2, #0x28                  	// #40
   296ec:	mov	w1, #0x0                   	// #0
   296f0:	bl	6860 <__asan_internal_memset@plt>
   296f4:	b	29680 <__sanitizer_set_death_callback@@Base+0x3104>
   296f8:	ldr	x0, [x19, #24]
   296fc:	ldr	w0, [x0, x24]
   29700:	cmp	w0, #0x11
   29704:	b.ne	297c8 <__sanitizer_set_death_callback@@Base+0x324c>  // b.any
   29708:	ldr	w0, [sp, #224]
   2970c:	cmp	w0, #0x1
   29710:	b.eq	29728 <__sanitizer_set_death_callback@@Base+0x31ac>  // b.none
   29714:	cbz	w25, 29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29718:	ldr	w0, [sp, #224]
   2971c:	cmp	w0, #0x1
   29720:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29724:	b	29734 <__sanitizer_set_death_callback@@Base+0x31b8>
   29728:	ldr	x0, [sp, #232]
   2972c:	str	x0, [sp, #184]
   29730:	cbz	w25, 29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29734:	ldr	x26, [sp, #232]
   29738:	mov	w0, #0x1                   	// #1
   2973c:	str	w0, [sp, #172]
   29740:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29744:	cmp	w0, #0x3
   29748:	b.ne	2976c <__sanitizer_set_death_callback@@Base+0x31f0>  // b.any
   2974c:	ldr	x0, [x22]
   29750:	cbnz	x0, 29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29754:	ldr	w0, [sp, #224]
   29758:	cmp	w0, #0x4
   2975c:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29760:	ldr	x0, [sp, #232]
   29764:	str	x0, [x22]
   29768:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   2976c:	cmp	w0, #0x11
   29770:	b.eq	29718 <__sanitizer_set_death_callback@@Base+0x319c>  // b.none
   29774:	add	x20, x20, #0x1
   29778:	ldr	x0, [x19, #16]
   2977c:	cmp	x0, x20
   29780:	b.ls	29990 <__sanitizer_set_death_callback@@Base+0x3414>  // b.plast
   29784:	lsl	x24, x20, #3
   29788:	ldr	x0, [x19, #24]
   2978c:	add	x0, x0, x24
   29790:	ldr	w0, [x0, #4]
   29794:	str	x28, [sp]
   29798:	ldr	x7, [x23, #8]
   2979c:	ldr	x6, [x23, #112]
   297a0:	ldr	x5, [x23, #104]
   297a4:	ldr	w4, [x21, #48]
   297a8:	ldr	w3, [x21, #40]
   297ac:	ldr	w2, [x21, #44]
   297b0:	mov	x1, x27
   297b4:	bl	28884 <__sanitizer_set_death_callback@@Base+0x2308>
   297b8:	cbz	w0, 298d0 <__sanitizer_set_death_callback@@Base+0x3354>
   297bc:	ldr	w0, [x19, #8]
   297c0:	cmp	w0, #0x11
   297c4:	b.eq	296f8 <__sanitizer_set_death_callback@@Base+0x317c>  // b.none
   297c8:	cbz	w25, 29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   297cc:	ldr	x0, [x19, #24]
   297d0:	add	x2, x0, x24
   297d4:	ldr	w0, [x0, x24]
   297d8:	cmp	w0, #0x55
   297dc:	b.eq	29954 <__sanitizer_set_death_callback@@Base+0x33d8>  // b.none
   297e0:	b.hi	2982c <__sanitizer_set_death_callback@@Base+0x32b0>  // b.pmore
   297e4:	cmp	w0, #0x12
   297e8:	b.eq	29910 <__sanitizer_set_death_callback@@Base+0x3394>  // b.none
   297ec:	b.ls	29744 <__sanitizer_set_death_callback@@Base+0x31c8>  // b.plast
   297f0:	cmp	w0, #0x31
   297f4:	b.eq	29800 <__sanitizer_set_death_callback@@Base+0x3284>  // b.none
   297f8:	cmp	w0, #0x47
   297fc:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29800:	ldr	w0, [sp, #128]
   29804:	cbnz	w0, 29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29808:	ldr	x5, [sp, #120]
   2980c:	ldr	x4, [sp, #112]
   29810:	mov	x3, x28
   29814:	mov	x1, x21
   29818:	mov	x0, x23
   2981c:	bl	28fb4 <__sanitizer_set_death_callback@@Base+0x2a38>
   29820:	cbz	x0, 29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29824:	str	x0, [x22]
   29828:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   2982c:	cmp	w0, #0x59
   29830:	b.eq	298f8 <__sanitizer_set_death_callback@@Base+0x337c>  // b.none
   29834:	b.ls	2986c <__sanitizer_set_death_callback@@Base+0x32f0>  // b.plast
   29838:	cmp	w0, #0x6e
   2983c:	b.eq	2984c <__sanitizer_set_death_callback@@Base+0x32d0>  // b.none
   29840:	mov	w1, #0x2007                	// #8199
   29844:	cmp	w0, w1
   29848:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   2984c:	ldr	w0, [sp, #224]
   29850:	cmp	w0, #0x4
   29854:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29858:	ldr	x0, [sp, #232]
   2985c:	str	x0, [x22]
   29860:	mov	w0, #0x1                   	// #1
   29864:	str	w0, [sp, #128]
   29868:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   2986c:	cmp	w0, #0x58
   29870:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29874:	ldr	w0, [sp, #224]
   29878:	cmp	w0, #0x2
   2987c:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29880:	ldr	x0, [sp, #232]
   29884:	cbnz	x0, 29894 <__sanitizer_set_death_callback@@Base+0x3318>
   29888:	ldr	x0, [sp, #216]
   2988c:	str	x0, [x22, #8]
   29890:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29894:	sub	x1, x0, #0x1
   29898:	ldr	x2, [sp, #208]
   2989c:	ldr	x2, [x2, #48]
   298a0:	cmp	x1, x2
   298a4:	b.cs	298c0 <__sanitizer_set_death_callback@@Base+0x3344>  // b.hs, b.nlast
   298a8:	ldr	x1, [sp, #208]
   298ac:	ldr	x1, [x1, #56]
   298b0:	add	x0, x1, x0, lsl #3
   298b4:	ldur	x0, [x0, #-8]
   298b8:	str	x0, [x22, #8]
   298bc:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   298c0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   298c4:	add	x1, x1, #0x6b8
   298c8:	mov	x0, x27
   298cc:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   298d0:	mov	w20, #0x0                   	// #0
   298d4:	ldp	x21, x22, [sp, #48]
   298d8:	ldp	x23, x24, [sp, #64]
   298dc:	ldp	x25, x26, [sp, #80]
   298e0:	ldp	x27, x28, [sp, #96]
   298e4:	mov	w0, w20
   298e8:	ldp	x19, x20, [sp, #32]
   298ec:	ldp	x29, x30, [sp, #16]
   298f0:	add	sp, sp, #0x120
   298f4:	ret
   298f8:	ldr	w0, [sp, #224]
   298fc:	cmp	w0, #0x2
   29900:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29904:	ldr	x0, [sp, #232]
   29908:	str	w0, [x22, #16]
   2990c:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29910:	ldr	w0, [sp, #224]
   29914:	cmp	w0, #0x1
   29918:	b.eq	29940 <__sanitizer_set_death_callback@@Base+0x33c4>  // b.none
   2991c:	cmp	w0, #0x2
   29920:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29924:	ldr	x0, [sp, #232]
   29928:	str	x0, [sp, #152]
   2992c:	mov	w0, #0x1                   	// #1
   29930:	str	w0, [sp, #200]
   29934:	ldr	w0, [sp, #204]
   29938:	str	w0, [sp, #168]
   2993c:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29940:	ldr	x0, [sp, #232]
   29944:	str	x0, [sp, #152]
   29948:	mov	w0, #0x1                   	// #1
   2994c:	str	w0, [sp, #168]
   29950:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29954:	ldr	w0, [sp, #224]
   29958:	cmp	w0, #0x2
   2995c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   29960:	b.ne	29774 <__sanitizer_set_death_callback@@Base+0x31f8>  // b.any
   29964:	ldr	x0, [sp, #232]
   29968:	str	x0, [sp, #160]
   2996c:	mov	w0, #0x1                   	// #1
   29970:	str	w0, [sp, #148]
   29974:	b	29774 <__sanitizer_set_death_callback@@Base+0x31f8>
   29978:	str	x26, [sp, #160]
   2997c:	str	x26, [sp, #152]
   29980:	str	wzr, [sp, #148]
   29984:	str	wzr, [sp, #200]
   29988:	str	wzr, [sp, #168]
   2998c:	str	wzr, [sp, #172]
   29990:	cbz	w25, 29bf8 <__sanitizer_set_death_callback@@Base+0x367c>
   29994:	ldr	x0, [x22]
   29998:	cbz	x0, 29a8c <__sanitizer_set_death_callback@@Base+0x3510>
   2999c:	ldr	w0, [sp, #148]
   299a0:	cbnz	w0, 29aa8 <__sanitizer_set_death_callback@@Base+0x352c>
   299a4:	ldr	w0, [sp, #172]
   299a8:	cmp	w0, #0x0
   299ac:	ldr	w0, [sp, #168]
   299b0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   299b4:	b.eq	29be0 <__sanitizer_set_death_callback@@Base+0x3664>  // b.none
   299b8:	ldr	x0, [sp, #152]
   299bc:	add	x4, x0, x26
   299c0:	ldr	w1, [sp, #200]
   299c4:	cmp	w1, #0x0
   299c8:	ldr	x7, [sp, #192]
   299cc:	ldr	x6, [sp, #120]
   299d0:	ldr	x5, [sp, #112]
   299d4:	csel	x4, x4, x0, ne  // ne = any
   299d8:	mov	x3, x26
   299dc:	mov	x2, x22
   299e0:	mov	x1, x23
   299e4:	ldr	x0, [sp, #176]
   299e8:	bl	281fc <__sanitizer_set_death_callback@@Base+0x1c80>
   299ec:	mov	w20, w0
   299f0:	cbz	w0, 29bcc <__sanitizer_set_death_callback@@Base+0x3650>
   299f4:	ldr	w0, [x19, #12]
   299f8:	cbz	w0, 29c00 <__sanitizer_set_death_callback@@Base+0x3684>
   299fc:	mov	x2, #0x20                  	// #32
   29a00:	mov	w1, #0x0                   	// #0
   29a04:	mov	x0, x28
   29a08:	bl	6860 <__asan_internal_memset@plt>
   29a0c:	str	x28, [sp, #8]
   29a10:	ldr	x0, [sp, #288]
   29a14:	str	x0, [sp]
   29a18:	ldr	x7, [sp, #120]
   29a1c:	ldr	x6, [sp, #112]
   29a20:	ldr	x5, [sp, #208]
   29a24:	mov	x4, x27
   29a28:	ldr	x3, [sp, #184]
   29a2c:	mov	x2, x21
   29a30:	mov	x1, x23
   29a34:	ldr	x0, [sp, #176]
   29a38:	bl	295cc <__sanitizer_set_death_callback@@Base+0x3050>
   29a3c:	cbz	w0, 29c70 <__sanitizer_set_death_callback@@Base+0x36f4>
   29a40:	ldr	x0, [sp, #248]
   29a44:	cbz	x0, 29c00 <__sanitizer_set_death_callback@@Base+0x3684>
   29a48:	ldr	x3, [sp, #120]
   29a4c:	ldr	x2, [sp, #112]
   29a50:	mov	x1, x28
   29a54:	ldr	x0, [sp, #176]
   29a58:	bl	6910 <__asan_backtrace_vector_release@plt>
   29a5c:	cbz	w0, 29c70 <__sanitizer_set_death_callback@@Base+0x36f4>
   29a60:	ldr	x19, [sp, #224]
   29a64:	adrp	x3, 29000 <__sanitizer_set_death_callback@@Base+0x2a84>
   29a68:	add	x3, x3, #0x564
   29a6c:	mov	x2, #0x18                  	// #24
   29a70:	ldr	x1, [sp, #248]
   29a74:	mov	x0, x19
   29a78:	bl	66b0 <__asan_backtrace_qsort@plt>
   29a7c:	str	x19, [x22, #24]
   29a80:	ldr	x0, [sp, #248]
   29a84:	str	x0, [x22, #32]
   29a88:	b	29c00 <__sanitizer_set_death_callback@@Base+0x3684>
   29a8c:	ldr	x4, [sp, #120]
   29a90:	ldr	x3, [sp, #112]
   29a94:	mov	x2, #0x28                  	// #40
   29a98:	mov	x1, x22
   29a9c:	ldr	x0, [sp, #176]
   29aa0:	bl	6bc0 <__asan_backtrace_free@plt>
   29aa4:	b	29bf8 <__sanitizer_set_death_callback@@Base+0x367c>
   29aa8:	ldr	x0, [x23, #96]
   29aac:	ldr	x1, [sp, #160]
   29ab0:	cmp	x0, x1
   29ab4:	b.ls	29b0c <__sanitizer_set_death_callback@@Base+0x3590>  // b.plast
   29ab8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   29abc:	add	x1, x1, #0x6a8
   29ac0:	str	x1, [sp, #224]
   29ac4:	ldr	x1, [x23, #88]
   29ac8:	str	x1, [sp, #232]
   29acc:	ldr	x2, [sp, #160]
   29ad0:	add	x1, x1, x2
   29ad4:	str	x1, [sp, #240]
   29ad8:	sub	x0, x0, x2
   29adc:	str	x0, [sp, #248]
   29ae0:	ldr	w0, [x23, #120]
   29ae4:	str	w0, [sp, #256]
   29ae8:	ldr	x0, [sp, #112]
   29aec:	str	x0, [sp, #264]
   29af0:	ldr	x0, [sp, #120]
   29af4:	str	x0, [sp, #272]
   29af8:	str	wzr, [sp, #280]
   29afc:	ldr	x0, [sp, #184]
   29b00:	str	x0, [sp, #128]
   29b04:	mov	x26, x28
   29b08:	b	29b40 <__sanitizer_set_death_callback@@Base+0x35c4>
   29b0c:	mov	w2, #0x0                   	// #0
   29b10:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   29b14:	add	x1, x1, #0x6f0
   29b18:	ldr	x0, [sp, #120]
   29b1c:	ldr	x3, [sp, #112]
   29b20:	blr	x3
   29b24:	mov	w20, #0x0                   	// #0
   29b28:	ldp	x21, x22, [sp, #48]
   29b2c:	ldp	x23, x24, [sp, #64]
   29b30:	ldp	x25, x26, [sp, #80]
   29b34:	ldp	x27, x28, [sp, #96]
   29b38:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29b3c:	str	x25, [sp, #128]
   29b40:	ldr	w20, [sp, #280]
   29b44:	cbnz	w20, 29b24 <__sanitizer_set_death_callback@@Base+0x35a8>
   29b48:	ldr	w1, [x21, #48]
   29b4c:	mov	x0, x26
   29b50:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   29b54:	mov	x24, x0
   29b58:	ldr	w1, [x21, #48]
   29b5c:	mov	x0, x26
   29b60:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   29b64:	mov	x25, x0
   29b68:	orr	x0, x24, x0
   29b6c:	cbz	x0, 29bb0 <__sanitizer_set_death_callback@@Base+0x3634>
   29b70:	ldr	w1, [x21, #48]
   29b74:	mov	x0, x24
   29b78:	bl	27d6c <__sanitizer_set_death_callback@@Base+0x17f0>
   29b7c:	cbnz	w0, 29b3c <__sanitizer_set_death_callback@@Base+0x35c0>
   29b80:	ldr	x7, [sp, #192]
   29b84:	ldr	x6, [sp, #120]
   29b88:	ldr	x5, [sp, #112]
   29b8c:	ldr	x0, [sp, #128]
   29b90:	add	x4, x25, x0
   29b94:	add	x3, x24, x0
   29b98:	mov	x2, x22
   29b9c:	mov	x1, x23
   29ba0:	ldr	x0, [sp, #176]
   29ba4:	bl	281fc <__sanitizer_set_death_callback@@Base+0x1c80>
   29ba8:	cbnz	w0, 29b40 <__sanitizer_set_death_callback@@Base+0x35c4>
   29bac:	b	29b24 <__sanitizer_set_death_callback@@Base+0x35a8>
   29bb0:	ldr	w0, [sp, #280]
   29bb4:	cbz	w0, 299f4 <__sanitizer_set_death_callback@@Base+0x3478>
   29bb8:	ldp	x21, x22, [sp, #48]
   29bbc:	ldp	x23, x24, [sp, #64]
   29bc0:	ldp	x25, x26, [sp, #80]
   29bc4:	ldp	x27, x28, [sp, #96]
   29bc8:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29bcc:	ldp	x21, x22, [sp, #48]
   29bd0:	ldp	x23, x24, [sp, #64]
   29bd4:	ldp	x25, x26, [sp, #80]
   29bd8:	ldp	x27, x28, [sp, #96]
   29bdc:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29be0:	ldr	x4, [sp, #120]
   29be4:	ldr	x3, [sp, #112]
   29be8:	mov	x2, #0x28                  	// #40
   29bec:	mov	x1, x22
   29bf0:	ldr	x0, [sp, #176]
   29bf4:	bl	6bc0 <__asan_backtrace_free@plt>
   29bf8:	ldr	w0, [x19, #12]
   29bfc:	cbnz	w0, 29c20 <__sanitizer_set_death_callback@@Base+0x36a4>
   29c00:	ldr	x0, [x27, #24]
   29c04:	cbnz	x0, 2962c <__sanitizer_set_death_callback@@Base+0x30b0>
   29c08:	mov	w20, #0x1                   	// #1
   29c0c:	ldp	x21, x22, [sp, #48]
   29c10:	ldp	x23, x24, [sp, #64]
   29c14:	ldp	x25, x26, [sp, #80]
   29c18:	ldp	x27, x28, [sp, #96]
   29c1c:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29c20:	ldr	x0, [sp, #296]
   29c24:	str	x0, [sp, #8]
   29c28:	ldr	x0, [sp, #288]
   29c2c:	str	x0, [sp]
   29c30:	ldr	x7, [sp, #120]
   29c34:	ldr	x6, [sp, #112]
   29c38:	ldr	x5, [sp, #208]
   29c3c:	mov	x4, x27
   29c40:	ldr	x3, [sp, #184]
   29c44:	mov	x2, x21
   29c48:	mov	x1, x23
   29c4c:	ldr	x0, [sp, #176]
   29c50:	bl	295cc <__sanitizer_set_death_callback@@Base+0x3050>
   29c54:	mov	w20, w0
   29c58:	cbnz	w0, 29c00 <__sanitizer_set_death_callback@@Base+0x3684>
   29c5c:	ldp	x21, x22, [sp, #48]
   29c60:	ldp	x23, x24, [sp, #64]
   29c64:	ldp	x25, x26, [sp, #80]
   29c68:	ldp	x27, x28, [sp, #96]
   29c6c:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29c70:	mov	w20, #0x0                   	// #0
   29c74:	ldp	x21, x22, [sp, #48]
   29c78:	ldp	x23, x24, [sp, #64]
   29c7c:	ldp	x25, x26, [sp, #80]
   29c80:	ldp	x27, x28, [sp, #96]
   29c84:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29c88:	mov	w20, #0x1                   	// #1
   29c8c:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29c90:	mov	w20, #0x1                   	// #1
   29c94:	ldp	x21, x22, [sp, #48]
   29c98:	ldp	x23, x24, [sp, #64]
   29c9c:	ldp	x25, x26, [sp, #80]
   29ca0:	ldp	x27, x28, [sp, #96]
   29ca4:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29ca8:	mov	w20, #0x0                   	// #0
   29cac:	ldp	x21, x22, [sp, #48]
   29cb0:	ldp	x23, x24, [sp, #64]
   29cb4:	ldp	x25, x26, [sp, #80]
   29cb8:	ldp	x27, x28, [sp, #96]
   29cbc:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29cc0:	mov	w20, #0x0                   	// #0
   29cc4:	ldp	x21, x22, [sp, #48]
   29cc8:	ldp	x23, x24, [sp, #64]
   29ccc:	ldp	x25, x26, [sp, #80]
   29cd0:	ldp	x27, x28, [sp, #96]
   29cd4:	b	298e4 <__sanitizer_set_death_callback@@Base+0x3368>
   29cd8:	stp	x29, x30, [sp, #-48]!
   29cdc:	mov	x29, sp
   29ce0:	stp	x19, x20, [sp, #16]
   29ce4:	stp	x21, x22, [sp, #32]
   29ce8:	mov	x20, x0
   29cec:	mov	x19, x1
   29cf0:	mov	x21, x2
   29cf4:	mov	x22, x3
   29cf8:	ldr	x2, [x1, #32]
   29cfc:	cbnz	x2, 29d2c <__sanitizer_set_death_callback@@Base+0x37b0>
   29d00:	ldr	x2, [x19, #48]
   29d04:	mov	x4, x22
   29d08:	mov	x3, x21
   29d0c:	lsl	x2, x2, #3
   29d10:	ldr	x1, [x19, #56]
   29d14:	mov	x0, x20
   29d18:	bl	6bc0 <__asan_backtrace_free@plt>
   29d1c:	ldp	x19, x20, [sp, #16]
   29d20:	ldp	x21, x22, [sp, #32]
   29d24:	ldp	x29, x30, [sp], #48
   29d28:	ret
   29d2c:	mov	x4, x3
   29d30:	mov	x3, x21
   29d34:	lsl	x2, x2, #3
   29d38:	ldr	x1, [x1, #40]
   29d3c:	bl	6bc0 <__asan_backtrace_free@plt>
   29d40:	b	29d00 <__sanitizer_set_death_callback@@Base+0x3784>
   29d44:	stp	x29, x30, [sp, #-64]!
   29d48:	mov	x29, sp
   29d4c:	stp	x19, x20, [sp, #16]
   29d50:	stp	x21, x22, [sp, #32]
   29d54:	str	x23, [sp, #48]
   29d58:	mov	x21, x0
   29d5c:	mov	x20, x1
   29d60:	mov	x22, x2
   29d64:	mov	x23, x3
   29d68:	ldr	x2, [x1]
   29d6c:	cbz	x2, 29da8 <__sanitizer_set_death_callback@@Base+0x382c>
   29d70:	mov	x19, #0x0                   	// #0
   29d74:	ldr	x5, [x20, #8]
   29d78:	add	x5, x5, x19, lsl #5
   29d7c:	ldr	x2, [x5, #16]
   29d80:	mov	x4, x23
   29d84:	mov	x3, x22
   29d88:	lsl	x2, x2, #3
   29d8c:	ldr	x1, [x5, #24]
   29d90:	mov	x0, x21
   29d94:	bl	6bc0 <__asan_backtrace_free@plt>
   29d98:	add	x19, x19, #0x1
   29d9c:	ldr	x2, [x20]
   29da0:	cmp	x2, x19
   29da4:	b.hi	29d74 <__sanitizer_set_death_callback@@Base+0x37f8>  // b.pmore
   29da8:	mov	x4, x23
   29dac:	mov	x3, x22
   29db0:	lsl	x2, x2, #5
   29db4:	ldr	x1, [x20, #8]
   29db8:	mov	x0, x21
   29dbc:	bl	6bc0 <__asan_backtrace_free@plt>
   29dc0:	str	xzr, [x20]
   29dc4:	str	xzr, [x20, #8]
   29dc8:	ldp	x19, x20, [sp, #16]
   29dcc:	ldp	x21, x22, [sp, #32]
   29dd0:	ldr	x23, [sp, #48]
   29dd4:	ldp	x29, x30, [sp], #64
   29dd8:	ret
   29ddc:	sub	sp, sp, #0x1d0
   29de0:	stp	x29, x30, [sp, #16]
   29de4:	add	x29, sp, #0x10
   29de8:	stp	x23, x24, [sp, #64]
   29dec:	stp	x25, x26, [sp, #80]
   29df0:	mov	x24, x0
   29df4:	str	x3, [sp, #120]
   29df8:	str	x4, [sp, #128]
   29dfc:	mov	x26, x6
   29e00:	mov	w0, #0x1                   	// #1
   29e04:	str	w0, [x6]
   29e08:	ldr	x6, [x1, #32]
   29e0c:	cbz	x6, 29e84 <__sanitizer_set_death_callback@@Base+0x3908>
   29e10:	stp	x19, x20, [sp, #32]
   29e14:	stp	x27, x28, [sp, #96]
   29e18:	mov	x23, x1
   29e1c:	mov	x20, x2
   29e20:	mov	x27, x5
   29e24:	ldr	x2, [x1, #24]
   29e28:	mov	x4, x6
   29e2c:	mov	x3, #0x0                   	// #0
   29e30:	b	29e38 <__sanitizer_set_death_callback@@Base+0x38bc>
   29e34:	mov	x4, x7
   29e38:	cmp	x4, x3
   29e3c:	b.ls	29e7c <__sanitizer_set_death_callback@@Base+0x3900>  // b.plast
   29e40:	add	x0, x4, x3
   29e44:	lsr	x7, x0, #1
   29e48:	and	x0, x0, #0xfffffffffffffffe
   29e4c:	add	x0, x0, x7
   29e50:	lsl	x1, x0, #3
   29e54:	mov	x5, x1
   29e58:	add	x1, x2, x1
   29e5c:	ldr	x0, [x2, x0, lsl #3]
   29e60:	cmp	x0, x20
   29e64:	b.hi	29e34 <__sanitizer_set_death_callback@@Base+0x38b8>  // b.pmore
   29e68:	ldr	x0, [x1, #8]
   29e6c:	cmp	x0, x20
   29e70:	b.hi	2ae78 <__sanitizer_set_death_callback@@Base+0x48fc>  // b.pmore
   29e74:	add	x3, x7, #0x1
   29e78:	b	29e38 <__sanitizer_set_death_callback@@Base+0x38bc>
   29e7c:	ldp	x19, x20, [sp, #32]
   29e80:	ldp	x27, x28, [sp, #96]
   29e84:	str	wzr, [x26]
   29e88:	mov	w0, #0x0                   	// #0
   29e8c:	ldp	x23, x24, [sp, #64]
   29e90:	ldp	x25, x26, [sp, #80]
   29e94:	ldp	x29, x30, [sp, #16]
   29e98:	add	sp, sp, #0x1d0
   29e9c:	ret
   29ea0:	add	x0, x22, #0x68
   29ea4:	ldar	x21, [x0]
   29ea8:	cmn	x21, #0x1
   29eac:	b.ne	2aee4 <__sanitizer_set_death_callback@@Base+0x4968>  // b.any
   29eb0:	sub	x19, x19, #0x18
   29eb4:	ldr	x22, [x19, #16]
   29eb8:	ldr	x21, [x22, #104]
   29ebc:	ldr	x0, [x23, #24]
   29ec0:	cmp	x0, x19
   29ec4:	b.cs	2aee4 <__sanitizer_set_death_callback@@Base+0x4968>  // b.hs, b.nlast
   29ec8:	ldur	x0, [x19, #-24]
   29ecc:	cmp	x0, x20
   29ed0:	b.hi	2aee4 <__sanitizer_set_death_callback@@Base+0x4968>  // b.pmore
   29ed4:	ldur	x0, [x19, #-16]
   29ed8:	cmp	x0, x20
   29edc:	b.ls	2aee4 <__sanitizer_set_death_callback@@Base+0x4968>  // b.plast
   29ee0:	ldr	w0, [x24, #8]
   29ee4:	cbz	w0, 29ea8 <__sanitizer_set_death_callback@@Base+0x392c>
   29ee8:	b	29ea0 <__sanitizer_set_death_callback@@Base+0x3924>
   29eec:	add	x0, x22, #0x68
   29ef0:	ldar	x21, [x0]
   29ef4:	b	2aeec <__sanitizer_set_death_callback@@Base+0x4970>
   29ef8:	ldr	x0, [x19, #16]
   29efc:	mov	x25, x0
   29f00:	str	x0, [sp, #136]
   29f04:	mov	x2, #0x18                  	// #24
   29f08:	mov	w1, #0x0                   	// #0
   29f0c:	add	x0, sp, #0xe0
   29f10:	bl	6860 <__asan_internal_memset@plt>
   29f14:	str	xzr, [sp, #248]
   29f18:	mov	x2, #0x40                  	// #64
   29f1c:	mov	w1, #0x0                   	// #0
   29f20:	add	x0, sp, #0x100
   29f24:	bl	6860 <__asan_internal_memset@plt>
   29f28:	ldr	x1, [x25, #56]
   29f2c:	ldr	x0, [x23, #80]
   29f30:	cmp	x1, x0
   29f34:	b.cc	2a004 <__sanitizer_set_death_callback@@Base+0x3a88>  // b.lo, b.ul, b.last
   29f38:	mov	w2, #0x0                   	// #0
   29f3c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   29f40:	add	x1, x1, #0x718
   29f44:	mov	x0, x27
   29f48:	ldr	x3, [sp, #128]
   29f4c:	blr	x3
   29f50:	ldr	x0, [sp, #240]
   29f54:	ldr	x1, [sp, #232]
   29f58:	add	x0, x0, x1
   29f5c:	str	x0, [sp, #240]
   29f60:	str	xzr, [sp, #232]
   29f64:	mov	x3, x27
   29f68:	ldr	x25, [sp, #128]
   29f6c:	mov	x2, x25
   29f70:	add	x1, sp, #0xe0
   29f74:	mov	x0, x24
   29f78:	bl	6910 <__asan_backtrace_vector_release@plt>
   29f7c:	mov	x3, x27
   29f80:	mov	x2, x25
   29f84:	add	x1, sp, #0x100
   29f88:	mov	x0, x24
   29f8c:	bl	29cd8 <__sanitizer_set_death_callback@@Base+0x375c>
   29f90:	str	xzr, [sp, #144]
   29f94:	mov	x0, #0xffffffffffffffff    	// #-1
   29f98:	str	x0, [sp, #136]
   29f9c:	mov	x28, #0x0                   	// #0
   29fa0:	mov	w0, #0x0                   	// #0
   29fa4:	ldr	w1, [x24, #8]
   29fa8:	cbnz	w1, 2ab6c <__sanitizer_set_death_callback@@Base+0x45f0>
   29fac:	ldr	x1, [sp, #144]
   29fb0:	str	x1, [x22, #112]
   29fb4:	str	x21, [x22, #120]
   29fb8:	str	x28, [x22, #128]
   29fbc:	ldr	x1, [sp, #136]
   29fc0:	str	x1, [x22, #104]
   29fc4:	ldr	x1, [sp, #136]
   29fc8:	cmn	x1, #0x1
   29fcc:	b.ne	2abc4 <__sanitizer_set_death_callback@@Base+0x4648>  // b.any
   29fd0:	cbz	w0, 2ab98 <__sanitizer_set_death_callback@@Base+0x461c>
   29fd4:	mov	x6, x26
   29fd8:	mov	x5, x27
   29fdc:	ldr	x4, [sp, #128]
   29fe0:	ldr	x3, [sp, #120]
   29fe4:	mov	x2, x20
   29fe8:	mov	x1, x23
   29fec:	mov	x0, x24
   29ff0:	bl	29ddc <__sanitizer_set_death_callback@@Base+0x3860>
   29ff4:	ldp	x19, x20, [sp, #32]
   29ff8:	ldp	x21, x22, [sp, #48]
   29ffc:	ldp	x27, x28, [sp, #96]
   2a000:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2a004:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2a008:	add	x2, x2, #0x738
   2a00c:	str	x2, [sp, #320]
   2a010:	ldr	x2, [x23, #72]
   2a014:	str	x2, [sp, #328]
   2a018:	add	x2, x2, x1
   2a01c:	str	x2, [sp, #336]
   2a020:	sub	x0, x0, x1
   2a024:	str	x0, [sp, #344]
   2a028:	ldr	w0, [x23, #120]
   2a02c:	str	w0, [sp, #352]
   2a030:	ldr	x0, [sp, #128]
   2a034:	str	x0, [sp, #360]
   2a038:	str	x27, [sp, #368]
   2a03c:	str	wzr, [sp, #376]
   2a040:	add	x0, sp, #0x140
   2a044:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   2a048:	mov	w1, w0
   2a04c:	mov	w25, #0x0                   	// #0
   2a050:	mov	x2, #0xffffffff            	// #4294967295
   2a054:	cmp	x2, w0, uxtw
   2a058:	b.eq	2a278 <__sanitizer_set_death_callback@@Base+0x3cfc>  // b.none
   2a05c:	str	x1, [sp, #344]
   2a060:	add	x0, sp, #0x140
   2a064:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   2a068:	and	w0, w0, #0xffff
   2a06c:	str	w0, [sp, #256]
   2a070:	sub	w0, w0, #0x2
   2a074:	cmp	w0, #0x2
   2a078:	b.hi	2a28c <__sanitizer_set_death_callback@@Base+0x3d10>  // b.pmore
   2a07c:	add	x0, sp, #0x140
   2a080:	mov	w1, w25
   2a084:	mov	x25, x0
   2a088:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   2a08c:	mov	x1, x0
   2a090:	ldp	x2, x3, [sp, #320]
   2a094:	stp	x2, x3, [sp, #384]
   2a098:	ldp	x2, x3, [sp, #336]
   2a09c:	stp	x2, x3, [sp, #400]
   2a0a0:	ldp	x2, x3, [sp, #352]
   2a0a4:	stp	x2, x3, [sp, #416]
   2a0a8:	ldp	x2, x3, [sp, #368]
   2a0ac:	stp	x2, x3, [sp, #432]
   2a0b0:	str	x0, [sp, #408]
   2a0b4:	mov	x0, x25
   2a0b8:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2a0bc:	cbz	w0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a0c0:	add	x0, sp, #0x180
   2a0c4:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a0c8:	and	w0, w0, #0xff
   2a0cc:	str	w0, [sp, #260]
   2a0d0:	ldr	w0, [sp, #256]
   2a0d4:	cmp	w0, #0x3
   2a0d8:	b.gt	2a2a0 <__sanitizer_set_death_callback@@Base+0x3d24>
   2a0dc:	mov	w0, #0x1                   	// #1
   2a0e0:	str	w0, [sp, #264]
   2a0e4:	add	x25, sp, #0x180
   2a0e8:	mov	x0, x25
   2a0ec:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a0f0:	ldr	x28, [sp, #400]
   2a0f4:	mov	x1, #0x1                   	// #1
   2a0f8:	mov	x0, x25
   2a0fc:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2a100:	mov	w1, #0x0                   	// #0
   2a104:	cbz	w0, 2a118 <__sanitizer_set_death_callback@@Base+0x3b9c>
   2a108:	ldrb	w1, [x28]
   2a10c:	eor	w1, w1, #0xffffff80
   2a110:	sub	w1, w1, #0x80
   2a114:	sxtb	w1, w1
   2a118:	str	w1, [sp, #268]
   2a11c:	add	x25, sp, #0x180
   2a120:	mov	x0, x25
   2a124:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a128:	and	w0, w0, #0xff
   2a12c:	str	w0, [sp, #272]
   2a130:	mov	x0, x25
   2a134:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a138:	and	w1, w0, #0xff
   2a13c:	str	w1, [sp, #276]
   2a140:	ldr	x0, [sp, #400]
   2a144:	str	x0, [sp, #280]
   2a148:	sub	w1, w1, #0x1
   2a14c:	mov	x0, x25
   2a150:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2a154:	cbz	w0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a158:	str	xzr, [sp, #288]
   2a15c:	ldr	x25, [sp, #400]
   2a160:	ldr	x28, [sp, #408]
   2a164:	add	x28, x25, x28
   2a168:	cmp	x25, x28
   2a16c:	b.cs	2a1a0 <__sanitizer_set_death_callback@@Base+0x3c24>  // b.hs, b.nlast
   2a170:	ldrb	w0, [x25]
   2a174:	cbz	w0, 2a1a0 <__sanitizer_set_death_callback@@Base+0x3c24>
   2a178:	sub	x1, x28, x25
   2a17c:	mov	x0, x25
   2a180:	bl	6b50 <__asan_internal_strnlen@plt>
   2a184:	add	x0, x0, #0x1
   2a188:	add	x25, x25, x0
   2a18c:	ldr	x0, [sp, #288]
   2a190:	add	x0, x0, #0x1
   2a194:	str	x0, [sp, #288]
   2a198:	cmp	x28, x25
   2a19c:	b.hi	2a170 <__sanitizer_set_death_callback@@Base+0x3bf4>  // b.pmore
   2a1a0:	str	xzr, [sp, #296]
   2a1a4:	ldr	x1, [sp, #288]
   2a1a8:	cbnz	x1, 2a2b4 <__sanitizer_set_death_callback@@Base+0x3d38>
   2a1ac:	ldr	x0, [sp, #400]
   2a1b0:	ldrb	w0, [x0]
   2a1b4:	mov	x28, #0x0                   	// #0
   2a1b8:	add	x1, sp, #0x180
   2a1bc:	cbz	w0, 2a200 <__sanitizer_set_death_callback@@Base+0x3c84>
   2a1c0:	str	x21, [sp, #144]
   2a1c4:	mov	x25, x1
   2a1c8:	ldr	w0, [sp, #440]
   2a1cc:	cbnz	w0, 2aa60 <__sanitizer_set_death_callback@@Base+0x44e4>
   2a1d0:	ldr	x21, [sp, #296]
   2a1d4:	mov	x0, x25
   2a1d8:	bl	28844 <__sanitizer_set_death_callback@@Base+0x22c8>
   2a1dc:	str	x0, [x21, x28]
   2a1e0:	ldr	x0, [sp, #296]
   2a1e4:	ldr	x0, [x0, x28]
   2a1e8:	cbz	x0, 2aa68 <__sanitizer_set_death_callback@@Base+0x44ec>
   2a1ec:	add	x28, x28, #0x8
   2a1f0:	ldr	x0, [sp, #400]
   2a1f4:	ldrb	w0, [x0]
   2a1f8:	cbnz	w0, 2a1c8 <__sanitizer_set_death_callback@@Base+0x3c4c>
   2a1fc:	ldr	x21, [sp, #144]
   2a200:	mov	x1, #0x1                   	// #1
   2a204:	add	x0, sp, #0x180
   2a208:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2a20c:	cbz	w0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a210:	str	xzr, [sp, #304]
   2a214:	ldr	x25, [sp, #400]
   2a218:	ldr	x28, [sp, #408]
   2a21c:	add	x28, x25, x28
   2a220:	cmp	x25, x28
   2a224:	b.cc	2a300 <__sanitizer_set_death_callback@@Base+0x3d84>  // b.lo, b.ul, b.last
   2a228:	ldr	x3, [sp, #368]
   2a22c:	ldr	x2, [sp, #360]
   2a230:	ldr	x1, [sp, #304]
   2a234:	lsl	x1, x1, #3
   2a238:	mov	x0, x24
   2a23c:	bl	68c0 <__asan_backtrace_alloc@plt>
   2a240:	str	x0, [sp, #312]
   2a244:	cbz	x0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a248:	ldr	x0, [sp, #400]
   2a24c:	ldrb	w0, [x0]
   2a250:	cbz	w0, 2a4a8 <__sanitizer_set_death_callback@@Base+0x3f2c>
   2a254:	mov	x25, #0x0                   	// #0
   2a258:	add	x0, sp, #0x180
   2a25c:	str	x21, [sp, #144]
   2a260:	str	x22, [sp, #152]
   2a264:	str	x19, [sp, #160]
   2a268:	str	x23, [sp, #168]
   2a26c:	str	x20, [sp, #176]
   2a270:	mov	x22, x0
   2a274:	b	2a424 <__sanitizer_set_death_callback@@Base+0x3ea8>
   2a278:	add	x0, sp, #0x140
   2a27c:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   2a280:	mov	x1, x0
   2a284:	mov	w25, #0x1                   	// #1
   2a288:	b	2a05c <__sanitizer_set_death_callback@@Base+0x3ae0>
   2a28c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2a290:	add	x1, x1, #0x748
   2a294:	add	x0, sp, #0x140
   2a298:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2a29c:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a2a0:	add	x0, sp, #0x180
   2a2a4:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a2a8:	and	w0, w0, #0xff
   2a2ac:	str	w0, [sp, #264]
   2a2b0:	b	2a0e4 <__sanitizer_set_death_callback@@Base+0x3b68>
   2a2b4:	ldr	x3, [sp, #368]
   2a2b8:	ldr	x2, [sp, #360]
   2a2bc:	lsl	x1, x1, #3
   2a2c0:	mov	x0, x24
   2a2c4:	bl	68c0 <__asan_backtrace_alloc@plt>
   2a2c8:	str	x0, [sp, #296]
   2a2cc:	cbnz	x0, 2a1ac <__sanitizer_set_death_callback@@Base+0x3c30>
   2a2d0:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a2d4:	mov	x0, #0x1                   	// #1
   2a2d8:	b	2a33c <__sanitizer_set_death_callback@@Base+0x3dc0>
   2a2dc:	mov	x0, #0x1                   	// #1
   2a2e0:	b	2a35c <__sanitizer_set_death_callback@@Base+0x3de0>
   2a2e4:	mov	x0, #0x1                   	// #1
   2a2e8:	add	x25, x25, x0
   2a2ec:	ldr	x0, [sp, #304]
   2a2f0:	add	x0, x0, #0x1
   2a2f4:	str	x0, [sp, #304]
   2a2f8:	cmp	x28, x25
   2a2fc:	b.ls	2a228 <__sanitizer_set_death_callback@@Base+0x3cac>  // b.plast
   2a300:	ldrb	w0, [x25]
   2a304:	cbz	w0, 2a228 <__sanitizer_set_death_callback@@Base+0x3cac>
   2a308:	sub	x1, x28, x25
   2a30c:	mov	x0, x25
   2a310:	bl	6b50 <__asan_internal_strnlen@plt>
   2a314:	mov	x1, x0
   2a318:	add	x0, x0, #0x1
   2a31c:	add	x2, x25, x0
   2a320:	ldrsb	w0, [x25, x0]
   2a324:	tbz	w0, #31, 2a2d4 <__sanitizer_set_death_callback@@Base+0x3d58>
   2a328:	mov	x0, #0x1                   	// #1
   2a32c:	add	x25, x25, x1
   2a330:	add	x0, x0, #0x1
   2a334:	ldrsb	w1, [x25, x0]
   2a338:	tbnz	w1, #31, 2a330 <__sanitizer_set_death_callback@@Base+0x3db4>
   2a33c:	add	x3, x2, x0
   2a340:	ldrsb	w0, [x2, x0]
   2a344:	tbz	w0, #31, 2a2dc <__sanitizer_set_death_callback@@Base+0x3d60>
   2a348:	mov	x0, #0x1                   	// #1
   2a34c:	sub	x2, x3, #0x1
   2a350:	add	x0, x0, #0x1
   2a354:	ldrsb	w1, [x2, x0]
   2a358:	tbnz	w1, #31, 2a350 <__sanitizer_set_death_callback@@Base+0x3dd4>
   2a35c:	add	x25, x3, x0
   2a360:	ldrsb	w0, [x3, x0]
   2a364:	tbz	w0, #31, 2a2e4 <__sanitizer_set_death_callback@@Base+0x3d68>
   2a368:	mov	x0, #0x1                   	// #1
   2a36c:	sub	x2, x25, #0x1
   2a370:	add	x0, x0, #0x1
   2a374:	ldrsb	w1, [x2, x0]
   2a378:	tbnz	w1, #31, 2a370 <__sanitizer_set_death_callback@@Base+0x3df4>
   2a37c:	b	2a2e8 <__sanitizer_set_death_callback@@Base+0x3d6c>
   2a380:	sub	x1, x0, #0x1
   2a384:	ldr	x2, [sp, #288]
   2a388:	cmp	x1, x2
   2a38c:	b.cs	2a46c <__sanitizer_set_death_callback@@Base+0x3ef0>  // b.hs, b.nlast
   2a390:	ldr	x1, [sp, #296]
   2a394:	add	x0, x1, x0, lsl #3
   2a398:	ldur	x28, [x0, #-8]
   2a39c:	mov	x0, x28
   2a3a0:	bl	67e0 <__asan_internal_strlen@plt>
   2a3a4:	mov	x20, x0
   2a3a8:	mov	x0, x19
   2a3ac:	bl	67e0 <__asan_internal_strlen@plt>
   2a3b0:	mov	x23, x0
   2a3b4:	add	x1, x20, x0
   2a3b8:	ldr	x3, [sp, #368]
   2a3bc:	ldr	x2, [sp, #360]
   2a3c0:	add	x1, x1, #0x2
   2a3c4:	mov	x0, x24
   2a3c8:	bl	68c0 <__asan_backtrace_alloc@plt>
   2a3cc:	mov	x21, x0
   2a3d0:	cbz	x0, 2aaa0 <__sanitizer_set_death_callback@@Base+0x4524>
   2a3d4:	mov	x2, x20
   2a3d8:	mov	x1, x28
   2a3dc:	bl	67d0 <__asan_internal_memcpy@plt>
   2a3e0:	mov	w0, #0x2f                  	// #47
   2a3e4:	strb	w0, [x21, x20]
   2a3e8:	add	x0, x20, #0x1
   2a3ec:	add	x2, x23, #0x1
   2a3f0:	mov	x1, x19
   2a3f4:	add	x0, x21, x0
   2a3f8:	bl	67d0 <__asan_internal_memcpy@plt>
   2a3fc:	ldr	x0, [sp, #312]
   2a400:	str	x21, [x0, x25]
   2a404:	mov	x0, x22
   2a408:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a40c:	mov	x0, x22
   2a410:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a414:	add	x25, x25, #0x8
   2a418:	ldr	x0, [sp, #400]
   2a41c:	ldrb	w0, [x0]
   2a420:	cbz	w0, 2a494 <__sanitizer_set_death_callback@@Base+0x3f18>
   2a424:	ldr	w0, [sp, #440]
   2a428:	cbnz	w0, 2aa70 <__sanitizer_set_death_callback@@Base+0x44f4>
   2a42c:	mov	x0, x22
   2a430:	bl	28844 <__sanitizer_set_death_callback@@Base+0x22c8>
   2a434:	mov	x19, x0
   2a438:	cbz	x0, 2aa88 <__sanitizer_set_death_callback@@Base+0x450c>
   2a43c:	mov	x0, x22
   2a440:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a444:	ldrb	w1, [x19]
   2a448:	cmp	w1, #0x2f
   2a44c:	b.eq	2a460 <__sanitizer_set_death_callback@@Base+0x3ee4>  // b.none
   2a450:	cbnz	x0, 2a380 <__sanitizer_set_death_callback@@Base+0x3e04>
   2a454:	ldr	x0, [sp, #136]
   2a458:	ldr	x28, [x0, #72]
   2a45c:	cbnz	x28, 2a39c <__sanitizer_set_death_callback@@Base+0x3e20>
   2a460:	ldr	x0, [sp, #312]
   2a464:	str	x19, [x0, x25]
   2a468:	b	2a404 <__sanitizer_set_death_callback@@Base+0x3e88>
   2a46c:	ldr	x21, [sp, #144]
   2a470:	ldr	x22, [sp, #152]
   2a474:	ldr	x19, [sp, #160]
   2a478:	ldr	x23, [sp, #168]
   2a47c:	ldr	x20, [sp, #176]
   2a480:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2a484:	add	x1, x1, #0x768
   2a488:	add	x0, sp, #0x140
   2a48c:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2a490:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a494:	ldr	x21, [sp, #144]
   2a498:	ldr	x22, [sp, #152]
   2a49c:	ldr	x19, [sp, #160]
   2a4a0:	ldr	x23, [sp, #168]
   2a4a4:	ldr	x20, [sp, #176]
   2a4a8:	ldr	w0, [sp, #440]
   2a4ac:	cbnz	w0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a4b0:	ldr	x0, [sp, #304]
   2a4b4:	cbz	x0, 2a4c8 <__sanitizer_set_death_callback@@Base+0x3f4c>
   2a4b8:	ldr	x0, [sp, #312]
   2a4bc:	ldr	x0, [x0]
   2a4c0:	str	x0, [sp, #144]
   2a4c4:	b	2a4d4 <__sanitizer_set_death_callback@@Base+0x3f58>
   2a4c8:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2a4cc:	add	x0, x0, #0x9e0
   2a4d0:	str	x0, [sp, #144]
   2a4d4:	ldr	x0, [sp, #344]
   2a4d8:	cbz	x0, 2a90c <__sanitizer_set_death_callback@@Base+0x4390>
   2a4dc:	ldr	x1, [sp, #144]
   2a4e0:	mov	w2, #0x1                   	// #1
   2a4e4:	mov	x4, #0x0                   	// #0
   2a4e8:	mov	w3, #0x0                   	// #0
   2a4ec:	add	x28, sp, #0x140
   2a4f0:	adrp	x0, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2a4f4:	add	x0, x0, #0x9e0
   2a4f8:	str	x0, [sp, #216]
   2a4fc:	add	x25, sp, #0xe0
   2a500:	str	x21, [sp, #152]
   2a504:	str	x22, [sp, #160]
   2a508:	str	x19, [sp, #168]
   2a50c:	mov	x22, x1
   2a510:	mov	w21, w2
   2a514:	mov	w19, w3
   2a518:	str	x20, [sp, #176]
   2a51c:	mov	x20, x4
   2a520:	str	x27, [sp, #184]
   2a524:	str	x26, [sp, #192]
   2a528:	b	2a594 <__sanitizer_set_death_callback@@Base+0x4018>
   2a52c:	sub	w26, w26, w1
   2a530:	ldr	w3, [sp, #272]
   2a534:	udiv	w1, w26, w3
   2a538:	add	w19, w1, w19
   2a53c:	ldr	w2, [sp, #264]
   2a540:	ldr	w0, [sp, #260]
   2a544:	mul	w0, w19, w0
   2a548:	udiv	w0, w0, w2
   2a54c:	add	x20, x20, x0
   2a550:	udiv	w0, w19, w2
   2a554:	msub	w19, w0, w2, w19
   2a558:	msub	w1, w1, w3, w26
   2a55c:	ldr	w26, [sp, #268]
   2a560:	add	w1, w1, w26
   2a564:	add	w21, w21, w1
   2a568:	mov	x7, x25
   2a56c:	ldr	x6, [sp, #368]
   2a570:	ldr	x5, [sp, #360]
   2a574:	mov	w4, w21
   2a578:	mov	x3, x22
   2a57c:	mov	x2, x20
   2a580:	mov	x1, x23
   2a584:	mov	x0, x24
   2a588:	bl	28128 <__sanitizer_set_death_callback@@Base+0x1bac>
   2a58c:	ldr	x0, [sp, #344]
   2a590:	cbz	x0, 2a8f4 <__sanitizer_set_death_callback@@Base+0x4378>
   2a594:	mov	x0, x28
   2a598:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a59c:	and	w26, w0, #0xff
   2a5a0:	ldr	w1, [sp, #276]
   2a5a4:	cmp	w1, w0, uxtb
   2a5a8:	b.ls	2a52c <__sanitizer_set_death_callback@@Base+0x3fb0>  // b.plast
   2a5ac:	cbz	w26, 2a5fc <__sanitizer_set_death_callback@@Base+0x4080>
   2a5b0:	cmp	w26, #0x5
   2a5b4:	b.eq	2a894 <__sanitizer_set_death_callback@@Base+0x4318>  // b.none
   2a5b8:	b.hi	2a7c4 <__sanitizer_set_death_callback@@Base+0x4248>  // b.pmore
   2a5bc:	cmp	w26, #0x3
   2a5c0:	b.eq	2a858 <__sanitizer_set_death_callback@@Base+0x42dc>  // b.none
   2a5c4:	b.ls	2a788 <__sanitizer_set_death_callback@@Base+0x420c>  // b.plast
   2a5c8:	cmp	w26, #0x4
   2a5cc:	b.ne	2a8b4 <__sanitizer_set_death_callback@@Base+0x4338>  // b.any
   2a5d0:	mov	x0, x28
   2a5d4:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a5d8:	cbz	x0, 2a8ec <__sanitizer_set_death_callback@@Base+0x4370>
   2a5dc:	sub	x1, x0, #0x1
   2a5e0:	ldr	x2, [sp, #304]
   2a5e4:	cmp	x1, x2
   2a5e8:	b.cs	2a868 <__sanitizer_set_death_callback@@Base+0x42ec>  // b.hs, b.nlast
   2a5ec:	ldr	x1, [sp, #312]
   2a5f0:	add	x0, x1, x0, lsl #3
   2a5f4:	ldur	x22, [x0, #-8]
   2a5f8:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a5fc:	mov	x0, x28
   2a600:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a604:	mov	x27, x0
   2a608:	mov	x0, x28
   2a60c:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2a610:	and	w0, w0, #0xff
   2a614:	cmp	w0, #0x3
   2a618:	b.eq	2a65c <__sanitizer_set_death_callback@@Base+0x40e0>  // b.none
   2a61c:	b.hi	2a648 <__sanitizer_set_death_callback@@Base+0x40cc>  // b.pmore
   2a620:	cmp	w0, #0x1
   2a624:	b.eq	2a8d8 <__sanitizer_set_death_callback@@Base+0x435c>  // b.none
   2a628:	cmp	w0, #0x2
   2a62c:	b.ne	2a75c <__sanitizer_set_death_callback@@Base+0x41e0>  // b.any
   2a630:	ldr	x0, [sp, #136]
   2a634:	ldr	w1, [x0, #48]
   2a638:	mov	x0, x28
   2a63c:	bl	2870c <__sanitizer_set_death_callback@@Base+0x2190>
   2a640:	mov	x20, x0
   2a644:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a648:	cmp	w0, #0x4
   2a64c:	b.ne	2a75c <__sanitizer_set_death_callback@@Base+0x41e0>  // b.any
   2a650:	mov	x0, x28
   2a654:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a658:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a65c:	mov	x0, x28
   2a660:	bl	28844 <__sanitizer_set_death_callback@@Base+0x22c8>
   2a664:	mov	x22, x0
   2a668:	cbz	x0, 2aab8 <__sanitizer_set_death_callback@@Base+0x453c>
   2a66c:	mov	x0, x28
   2a670:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a674:	mov	x26, x0
   2a678:	mov	x0, x28
   2a67c:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a680:	mov	x0, x28
   2a684:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a688:	ldrb	w0, [x22]
   2a68c:	cmp	w0, #0x2f
   2a690:	b.eq	2a58c <__sanitizer_set_death_callback@@Base+0x4010>  // b.none
   2a694:	cbnz	w26, 2a710 <__sanitizer_set_death_callback@@Base+0x4194>
   2a698:	ldr	x0, [sp, #136]
   2a69c:	ldr	x0, [x0, #72]
   2a6a0:	str	x0, [sp, #200]
   2a6a4:	ldr	x0, [sp, #200]
   2a6a8:	bl	67e0 <__asan_internal_strlen@plt>
   2a6ac:	mov	x26, x0
   2a6b0:	mov	x0, x22
   2a6b4:	bl	67e0 <__asan_internal_strlen@plt>
   2a6b8:	str	x0, [sp, #208]
   2a6bc:	add	x1, x26, x0
   2a6c0:	ldr	x3, [sp, #368]
   2a6c4:	ldr	x2, [sp, #360]
   2a6c8:	add	x1, x1, #0x2
   2a6cc:	mov	x0, x24
   2a6d0:	bl	68c0 <__asan_backtrace_alloc@plt>
   2a6d4:	mov	x27, x0
   2a6d8:	cbz	x0, 2aad4 <__sanitizer_set_death_callback@@Base+0x4558>
   2a6dc:	mov	x2, x26
   2a6e0:	ldr	x1, [sp, #200]
   2a6e4:	bl	67d0 <__asan_internal_memcpy@plt>
   2a6e8:	mov	w0, #0x2f                  	// #47
   2a6ec:	strb	w0, [x27, x26]
   2a6f0:	add	x0, x26, #0x1
   2a6f4:	ldr	x2, [sp, #208]
   2a6f8:	add	x2, x2, #0x1
   2a6fc:	mov	x1, x22
   2a700:	add	x0, x27, x0
   2a704:	bl	67d0 <__asan_internal_memcpy@plt>
   2a708:	mov	x22, x27
   2a70c:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a710:	sub	w26, w26, #0x1
   2a714:	ldr	x0, [sp, #288]
   2a718:	cmp	x26, x0
   2a71c:	b.cs	2a730 <__sanitizer_set_death_callback@@Base+0x41b4>  // b.hs, b.nlast
   2a720:	ldr	x0, [sp, #296]
   2a724:	ldr	x0, [x0, x26, lsl #3]
   2a728:	str	x0, [sp, #200]
   2a72c:	b	2a6a4 <__sanitizer_set_death_callback@@Base+0x4128>
   2a730:	ldr	x21, [sp, #152]
   2a734:	ldr	x22, [sp, #160]
   2a738:	ldr	x19, [sp, #168]
   2a73c:	ldr	x20, [sp, #176]
   2a740:	ldr	x27, [sp, #184]
   2a744:	ldr	x26, [sp, #192]
   2a748:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2a74c:	add	x1, x1, #0x7a0
   2a750:	add	x0, sp, #0x140
   2a754:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2a758:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a75c:	sub	x1, x27, #0x1
   2a760:	mov	x0, x28
   2a764:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2a768:	cbnz	w0, 2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a76c:	ldr	x21, [sp, #152]
   2a770:	ldr	x22, [sp, #160]
   2a774:	ldr	x19, [sp, #168]
   2a778:	ldr	x20, [sp, #176]
   2a77c:	ldr	x27, [sp, #184]
   2a780:	ldr	x26, [sp, #192]
   2a784:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a788:	cmp	w26, #0x1
   2a78c:	b.eq	2a830 <__sanitizer_set_death_callback@@Base+0x42b4>  // b.none
   2a790:	cmp	w26, #0x2
   2a794:	b.ne	2a8b4 <__sanitizer_set_death_callback@@Base+0x4338>  // b.any
   2a798:	mov	x0, x28
   2a79c:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a7a0:	add	x19, x0, w19, uxtw
   2a7a4:	ldr	w1, [sp, #264]
   2a7a8:	ldr	w0, [sp, #260]
   2a7ac:	mul	x0, x0, x19
   2a7b0:	udiv	x0, x0, x1
   2a7b4:	add	x20, x20, x0
   2a7b8:	udiv	x0, x19, x1
   2a7bc:	msub	w19, w0, w1, w19
   2a7c0:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a7c4:	cmp	w26, #0x9
   2a7c8:	b.eq	2a8a0 <__sanitizer_set_death_callback@@Base+0x4324>  // b.none
   2a7cc:	b.ls	2a7ec <__sanitizer_set_death_callback@@Base+0x4270>  // b.plast
   2a7d0:	cmp	w26, #0xb
   2a7d4:	b.ls	2a58c <__sanitizer_set_death_callback@@Base+0x4010>  // b.plast
   2a7d8:	cmp	w26, #0xc
   2a7dc:	b.ne	2a8b4 <__sanitizer_set_death_callback@@Base+0x4338>  // b.any
   2a7e0:	mov	x0, x28
   2a7e4:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a7e8:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a7ec:	cmp	w26, #0x7
   2a7f0:	b.ls	2a58c <__sanitizer_set_death_callback@@Base+0x4010>  // b.plast
   2a7f4:	cmp	w26, #0x8
   2a7f8:	b.ne	2a8b4 <__sanitizer_set_death_callback@@Base+0x4338>  // b.any
   2a7fc:	mov	w0, #0xff                  	// #255
   2a800:	sub	w0, w0, w1
   2a804:	ldr	w1, [sp, #272]
   2a808:	udiv	w0, w0, w1
   2a80c:	add	w19, w0, w19
   2a810:	ldr	w1, [sp, #264]
   2a814:	ldr	w0, [sp, #260]
   2a818:	mul	w0, w19, w0
   2a81c:	udiv	w0, w0, w1
   2a820:	add	x20, x20, x0
   2a824:	udiv	w0, w19, w1
   2a828:	msub	w19, w0, w1, w19
   2a82c:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a830:	mov	x7, x25
   2a834:	ldr	x6, [sp, #368]
   2a838:	ldr	x5, [sp, #360]
   2a83c:	mov	w4, w21
   2a840:	mov	x3, x22
   2a844:	mov	x2, x20
   2a848:	mov	x1, x23
   2a84c:	mov	x0, x24
   2a850:	bl	28128 <__sanitizer_set_death_callback@@Base+0x1bac>
   2a854:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a858:	mov	x0, x28
   2a85c:	bl	2877c <__sanitizer_set_death_callback@@Base+0x2200>
   2a860:	add	w21, w21, w0
   2a864:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a868:	ldr	x21, [sp, #152]
   2a86c:	ldr	x22, [sp, #160]
   2a870:	ldr	x19, [sp, #168]
   2a874:	ldr	x20, [sp, #176]
   2a878:	ldr	x27, [sp, #184]
   2a87c:	ldr	x26, [sp, #192]
   2a880:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2a884:	add	x1, x1, #0x7d0
   2a888:	add	x0, sp, #0x140
   2a88c:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2a890:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a894:	mov	x0, x28
   2a898:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a89c:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a8a0:	mov	x0, x28
   2a8a4:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   2a8a8:	add	x20, x20, w0, uxth
   2a8ac:	mov	w19, #0x0                   	// #0
   2a8b0:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a8b4:	sub	w26, w26, #0x1
   2a8b8:	ldr	x0, [sp, #280]
   2a8bc:	ldrb	w26, [x0, w26, uxtw]
   2a8c0:	cbz	w26, 2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a8c4:	mov	x0, x28
   2a8c8:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2a8cc:	subs	w26, w26, #0x1
   2a8d0:	b.ne	2a8c4 <__sanitizer_set_death_callback@@Base+0x4348>  // b.any
   2a8d4:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a8d8:	ldr	x22, [sp, #144]
   2a8dc:	mov	w19, w26
   2a8e0:	mov	w21, #0x1                   	// #1
   2a8e4:	mov	x20, #0x0                   	// #0
   2a8e8:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a8ec:	ldr	x22, [sp, #216]
   2a8f0:	b	2a58c <__sanitizer_set_death_callback@@Base+0x4010>
   2a8f4:	ldr	x21, [sp, #152]
   2a8f8:	ldr	x22, [sp, #160]
   2a8fc:	ldr	x19, [sp, #168]
   2a900:	ldr	x20, [sp, #176]
   2a904:	ldr	x27, [sp, #184]
   2a908:	ldr	x26, [sp, #192]
   2a90c:	ldr	w0, [sp, #376]
   2a910:	cbnz	w0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a914:	ldr	x0, [sp, #248]
   2a918:	cbz	x0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a91c:	add	x4, sp, #0xe0
   2a920:	mov	x3, x27
   2a924:	ldr	x25, [sp, #128]
   2a928:	mov	x2, x25
   2a92c:	mov	x1, #0x18                  	// #24
   2a930:	mov	x0, x24
   2a934:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2a938:	cbz	x0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a93c:	mov	x1, #0xffffffffffffffff    	// #-1
   2a940:	str	x1, [x0]
   2a944:	str	xzr, [x0, #8]
   2a948:	str	wzr, [x0, #16]
   2a94c:	str	wzr, [x0, #20]
   2a950:	mov	x3, x27
   2a954:	mov	x2, x25
   2a958:	add	x1, sp, #0xe0
   2a95c:	mov	x0, x24
   2a960:	bl	6910 <__asan_backtrace_vector_release@plt>
   2a964:	cbz	w0, 29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2a968:	ldr	x0, [sp, #224]
   2a96c:	str	x0, [sp, #136]
   2a970:	adrp	x3, 27000 <__sanitizer_set_death_callback@@Base+0xa84>
   2a974:	add	x3, x3, #0xe88
   2a978:	mov	x2, #0x18                  	// #24
   2a97c:	ldr	x1, [sp, #248]
   2a980:	bl	66b0 <__asan_backtrace_qsort@plt>
   2a984:	ldr	x0, [sp, #248]
   2a988:	str	x0, [sp, #144]
   2a98c:	ldr	w0, [x24, #8]
   2a990:	cbnz	w0, 2ae58 <__sanitizer_set_death_callback@@Base+0x48dc>
   2a994:	add	x25, x23, #0x80
   2a998:	ldr	x28, [x19, #16]
   2a99c:	str	x25, [sp, #176]
   2a9a0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2a9a4:	add	x0, x0, #0x648
   2a9a8:	str	x0, [sp, #384]
   2a9ac:	ldr	x0, [x23, #56]
   2a9b0:	str	x0, [sp, #392]
   2a9b4:	ldr	x0, [x28]
   2a9b8:	str	x0, [sp, #400]
   2a9bc:	ldr	x0, [x28, #8]
   2a9c0:	str	x0, [sp, #408]
   2a9c4:	ldr	w0, [x23, #120]
   2a9c8:	str	w0, [sp, #416]
   2a9cc:	ldr	x0, [sp, #128]
   2a9d0:	str	x0, [sp, #424]
   2a9d4:	str	x27, [sp, #432]
   2a9d8:	str	wzr, [sp, #440]
   2a9dc:	add	x1, sp, #0x100
   2a9e0:	add	x2, sp, #0x180
   2a9e4:	str	x21, [sp, #152]
   2a9e8:	str	x22, [sp, #160]
   2a9ec:	str	x19, [sp, #168]
   2a9f0:	mov	x19, x0
   2a9f4:	mov	x21, x1
   2a9f8:	mov	x22, x2
   2a9fc:	ldr	x0, [sp, #408]
   2aa00:	cbz	x0, 2aaf0 <__sanitizer_set_death_callback@@Base+0x4574>
   2aa04:	str	x25, [sp, #8]
   2aa08:	str	x25, [sp]
   2aa0c:	mov	x7, x27
   2aa10:	mov	x6, x19
   2aa14:	mov	x5, x21
   2aa18:	mov	x4, x22
   2aa1c:	mov	x3, #0x0                   	// #0
   2aa20:	mov	x2, x28
   2aa24:	mov	x1, x23
   2aa28:	mov	x0, x24
   2aa2c:	bl	295cc <__sanitizer_set_death_callback@@Base+0x3050>
   2aa30:	cbnz	w0, 2a9fc <__sanitizer_set_death_callback@@Base+0x4480>
   2aa34:	ldr	x21, [sp, #152]
   2aa38:	ldr	x22, [sp, #160]
   2aa3c:	ldr	x19, [sp, #168]
   2aa40:	mov	x28, #0x0                   	// #0
   2aa44:	mov	x3, x27
   2aa48:	ldr	x2, [sp, #128]
   2aa4c:	add	x1, sp, #0x100
   2aa50:	mov	x0, x24
   2aa54:	bl	29cd8 <__sanitizer_set_death_callback@@Base+0x375c>
   2aa58:	mov	w0, #0x1                   	// #1
   2aa5c:	b	29fa4 <__sanitizer_set_death_callback@@Base+0x3a28>
   2aa60:	ldr	x21, [sp, #144]
   2aa64:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aa68:	ldr	x21, [sp, #144]
   2aa6c:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aa70:	ldr	x21, [sp, #144]
   2aa74:	ldr	x22, [sp, #152]
   2aa78:	ldr	x19, [sp, #160]
   2aa7c:	ldr	x23, [sp, #168]
   2aa80:	ldr	x20, [sp, #176]
   2aa84:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aa88:	ldr	x21, [sp, #144]
   2aa8c:	ldr	x22, [sp, #152]
   2aa90:	ldr	x19, [sp, #160]
   2aa94:	ldr	x23, [sp, #168]
   2aa98:	ldr	x20, [sp, #176]
   2aa9c:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aaa0:	ldr	x21, [sp, #144]
   2aaa4:	ldr	x22, [sp, #152]
   2aaa8:	ldr	x19, [sp, #160]
   2aaac:	ldr	x23, [sp, #168]
   2aab0:	ldr	x20, [sp, #176]
   2aab4:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aab8:	ldr	x21, [sp, #152]
   2aabc:	ldr	x22, [sp, #160]
   2aac0:	ldr	x19, [sp, #168]
   2aac4:	ldr	x20, [sp, #176]
   2aac8:	ldr	x27, [sp, #184]
   2aacc:	ldr	x26, [sp, #192]
   2aad0:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aad4:	ldr	x21, [sp, #152]
   2aad8:	ldr	x22, [sp, #160]
   2aadc:	ldr	x19, [sp, #168]
   2aae0:	ldr	x20, [sp, #176]
   2aae4:	ldr	x27, [sp, #184]
   2aae8:	ldr	x26, [sp, #192]
   2aaec:	b	29f50 <__sanitizer_set_death_callback@@Base+0x39d4>
   2aaf0:	ldr	x21, [sp, #152]
   2aaf4:	ldr	x22, [sp, #160]
   2aaf8:	ldr	x19, [sp, #168]
   2aafc:	ldr	x28, [x25, #24]
   2ab00:	cbz	x28, 2aa40 <__sanitizer_set_death_callback@@Base+0x44c4>
   2ab04:	ldr	x0, [sp, #176]
   2ab08:	cbz	x0, 2ab4c <__sanitizer_set_death_callback@@Base+0x45d0>
   2ab0c:	mov	x3, x27
   2ab10:	ldr	x2, [sp, #128]
   2ab14:	ldr	x25, [sp, #176]
   2ab18:	mov	x1, x25
   2ab1c:	mov	x0, x24
   2ab20:	bl	6c80 <__asan_backtrace_vector_finish@plt>
   2ab24:	cbz	x0, 2aa40 <__sanitizer_set_death_callback@@Base+0x44c4>
   2ab28:	str	xzr, [x25, #24]
   2ab2c:	mov	x21, x0
   2ab30:	adrp	x3, 29000 <__sanitizer_set_death_callback@@Base+0x2a84>
   2ab34:	add	x3, x3, #0x564
   2ab38:	mov	x2, #0x18                  	// #24
   2ab3c:	mov	x1, x28
   2ab40:	mov	x0, x21
   2ab44:	bl	66b0 <__asan_backtrace_qsort@plt>
   2ab48:	b	2aa44 <__sanitizer_set_death_callback@@Base+0x44c8>
   2ab4c:	mov	x3, x27
   2ab50:	ldr	x2, [sp, #128]
   2ab54:	add	x1, sp, #0x140
   2ab58:	mov	x0, x24
   2ab5c:	bl	6910 <__asan_backtrace_vector_release@plt>
   2ab60:	cbz	w0, 2aa40 <__sanitizer_set_death_callback@@Base+0x44c4>
   2ab64:	ldr	x21, [x25]
   2ab68:	b	2ab30 <__sanitizer_set_death_callback@@Base+0x45b4>
   2ab6c:	add	x1, x22, #0x70
   2ab70:	ldr	x2, [sp, #144]
   2ab74:	stlr	x2, [x1]
   2ab78:	add	x1, x22, #0x78
   2ab7c:	stlr	x21, [x1]
   2ab80:	add	x1, x22, #0x80
   2ab84:	stlr	x28, [x1]
   2ab88:	add	x22, x22, #0x68
   2ab8c:	ldr	x1, [sp, #136]
   2ab90:	stlr	x1, [x22]
   2ab94:	b	29fc4 <__sanitizer_set_death_callback@@Base+0x3a48>
   2ab98:	mov	x4, #0x0                   	// #0
   2ab9c:	mov	w3, #0x0                   	// #0
   2aba0:	mov	x2, #0x0                   	// #0
   2aba4:	mov	x1, x20
   2aba8:	mov	x0, x27
   2abac:	ldr	x5, [sp, #120]
   2abb0:	blr	x5
   2abb4:	ldp	x19, x20, [sp, #32]
   2abb8:	ldp	x21, x22, [sp, #48]
   2abbc:	ldp	x27, x28, [sp, #96]
   2abc0:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2abc4:	ldr	x21, [sp, #136]
   2abc8:	b	2aef8 <__sanitizer_set_death_callback@@Base+0x497c>
   2abcc:	mov	x3, x1
   2abd0:	cmp	x2, x3
   2abd4:	b.cs	2ae20 <__sanitizer_set_death_callback@@Base+0x48a4>  // b.hs, b.nlast
   2abd8:	add	x0, x2, x3
   2abdc:	lsr	x1, x0, #1
   2abe0:	and	x0, x0, #0xfffffffffffffffe
   2abe4:	add	x0, x0, x1
   2abe8:	add	x5, x21, x0, lsl #3
   2abec:	ldr	x0, [x21, x0, lsl #3]
   2abf0:	cmp	x0, x20
   2abf4:	b.hi	2abcc <__sanitizer_set_death_callback@@Base+0x4650>  // b.pmore
   2abf8:	ldr	x0, [x5, #24]
   2abfc:	cmp	x0, x20
   2ac00:	b.hi	2ae08 <__sanitizer_set_death_callback@@Base+0x488c>  // b.pmore
   2ac04:	add	x2, x1, #0x1
   2ac08:	b	2abd0 <__sanitizer_set_death_callback@@Base+0x4654>
   2ac0c:	ldr	x21, [x4, #64]
   2ac10:	cbz	x21, 2ac94 <__sanitizer_set_death_callback@@Base+0x4718>
   2ac14:	ldrb	w0, [x21]
   2ac18:	cmp	w0, #0x2f
   2ac1c:	b.eq	2ac94 <__sanitizer_set_death_callback@@Base+0x4718>  // b.none
   2ac20:	ldr	x0, [x4, #72]
   2ac24:	cbz	x0, 2ac94 <__sanitizer_set_death_callback@@Base+0x4718>
   2ac28:	mov	x0, x21
   2ac2c:	bl	67e0 <__asan_internal_strlen@plt>
   2ac30:	mov	x25, x0
   2ac34:	ldr	x0, [x19, #16]
   2ac38:	ldr	x23, [x0, #72]
   2ac3c:	mov	x0, x23
   2ac40:	bl	67e0 <__asan_internal_strlen@plt>
   2ac44:	mov	x22, x0
   2ac48:	add	x1, x25, x0
   2ac4c:	mov	x3, x27
   2ac50:	ldr	x2, [sp, #128]
   2ac54:	add	x1, x1, #0x2
   2ac58:	mov	x0, x24
   2ac5c:	bl	68c0 <__asan_backtrace_alloc@plt>
   2ac60:	mov	x24, x0
   2ac64:	cbz	x0, 2aca0 <__sanitizer_set_death_callback@@Base+0x4724>
   2ac68:	mov	x2, x22
   2ac6c:	mov	x1, x23
   2ac70:	bl	67d0 <__asan_internal_memcpy@plt>
   2ac74:	mov	w0, #0x2f                  	// #47
   2ac78:	strb	w0, [x24, x22]
   2ac7c:	add	x0, x22, #0x1
   2ac80:	add	x2, x25, #0x1
   2ac84:	mov	x1, x21
   2ac88:	add	x0, x24, x0
   2ac8c:	bl	67d0 <__asan_internal_memcpy@plt>
   2ac90:	mov	x21, x24
   2ac94:	ldr	x0, [x19, #16]
   2ac98:	str	x21, [x0, #80]
   2ac9c:	b	2ae28 <__sanitizer_set_death_callback@@Base+0x48ac>
   2aca0:	str	wzr, [x26]
   2aca4:	mov	w0, #0x0                   	// #0
   2aca8:	ldp	x19, x20, [sp, #32]
   2acac:	ldp	x21, x22, [sp, #48]
   2acb0:	ldp	x27, x28, [sp, #96]
   2acb4:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2acb8:	mov	x4, #0x0                   	// #0
   2acbc:	ldr	w3, [x5, #16]
   2acc0:	ldr	x2, [x5, #8]
   2acc4:	mov	x1, x20
   2acc8:	mov	x0, x27
   2accc:	ldr	x5, [sp, #120]
   2acd0:	blr	x5
   2acd4:	ldp	x19, x20, [sp, #32]
   2acd8:	ldp	x21, x22, [sp, #48]
   2acdc:	ldp	x27, x28, [sp, #96]
   2ace0:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2ace4:	mov	x6, x2
   2ace8:	cmp	x4, x6
   2acec:	b.cs	2addc <__sanitizer_set_death_callback@@Base+0x4860>  // b.hs, b.nlast
   2acf0:	add	x0, x4, x6
   2acf4:	lsr	x2, x0, #1
   2acf8:	and	x0, x0, #0xfffffffffffffffe
   2acfc:	add	x0, x0, x2
   2ad00:	lsl	x1, x0, #3
   2ad04:	mov	x7, x1
   2ad08:	add	x1, x3, x1
   2ad0c:	ldr	x0, [x3, x0, lsl #3]
   2ad10:	cmp	x0, x20
   2ad14:	b.hi	2ace4 <__sanitizer_set_death_callback@@Base+0x4768>  // b.pmore
   2ad18:	ldr	x0, [x1, #8]
   2ad1c:	cmp	x0, x20
   2ad20:	b.hi	2ad2c <__sanitizer_set_death_callback@@Base+0x47b0>  // b.pmore
   2ad24:	add	x4, x2, #0x1
   2ad28:	b	2ace8 <__sanitizer_set_death_callback@@Base+0x476c>
   2ad2c:	asr	x0, x7, #3
   2ad30:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2ad34:	movk	x2, #0xaaab
   2ad38:	mul	x0, x0, x2
   2ad3c:	add	x0, x0, #0x1
   2ad40:	cmp	x8, x0
   2ad44:	b.ls	2ad7c <__sanitizer_set_death_callback@@Base+0x4800>  // b.plast
   2ad48:	ldr	x0, [x1, #24]
   2ad4c:	cmp	x0, x20
   2ad50:	b.hi	2ad7c <__sanitizer_set_death_callback@@Base+0x4800>  // b.pmore
   2ad54:	ldr	x0, [x1, #32]
   2ad58:	cmp	x0, x20
   2ad5c:	b.ls	2ad7c <__sanitizer_set_death_callback@@Base+0x4800>  // b.plast
   2ad60:	add	x1, x1, #0x18
   2ad64:	sub	x0, x1, x3
   2ad68:	asr	x0, x0, #3
   2ad6c:	mul	x0, x0, x2
   2ad70:	add	x0, x0, #0x1
   2ad74:	cmp	x8, x0
   2ad78:	b.hi	2ad48 <__sanitizer_set_death_callback@@Base+0x47cc>  // b.pmore
   2ad7c:	ldr	x19, [x1, #16]
   2ad80:	ldr	x0, [x5, #8]
   2ad84:	str	x0, [sp, #456]
   2ad88:	ldr	w0, [x5, #16]
   2ad8c:	str	w0, [sp, #452]
   2ad90:	add	x5, sp, #0x1c4
   2ad94:	add	x4, sp, #0x1c8
   2ad98:	mov	x3, x27
   2ad9c:	ldr	x21, [sp, #120]
   2ada0:	mov	x2, x21
   2ada4:	mov	x1, x19
   2ada8:	mov	x0, x20
   2adac:	bl	27ee4 <__sanitizer_set_death_callback@@Base+0x1968>
   2adb0:	cbnz	w0, 2af08 <__sanitizer_set_death_callback@@Base+0x498c>
   2adb4:	ldr	x4, [x19]
   2adb8:	ldr	w3, [sp, #452]
   2adbc:	ldr	x2, [sp, #456]
   2adc0:	mov	x1, x20
   2adc4:	mov	x0, x27
   2adc8:	blr	x21
   2adcc:	ldp	x19, x20, [sp, #32]
   2add0:	ldp	x21, x22, [sp, #48]
   2add4:	ldp	x27, x28, [sp, #96]
   2add8:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2addc:	mov	x4, #0x0                   	// #0
   2ade0:	ldr	w3, [x5, #16]
   2ade4:	ldr	x2, [x5, #8]
   2ade8:	mov	x1, x20
   2adec:	mov	x0, x27
   2adf0:	ldr	x5, [sp, #120]
   2adf4:	blr	x5
   2adf8:	ldp	x19, x20, [sp, #32]
   2adfc:	ldp	x21, x22, [sp, #48]
   2ae00:	ldp	x27, x28, [sp, #96]
   2ae04:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2ae08:	ldr	x8, [x4, #128]
   2ae0c:	cbz	x8, 2acb8 <__sanitizer_set_death_callback@@Base+0x473c>
   2ae10:	ldr	x3, [x4, #120]
   2ae14:	mov	x6, x8
   2ae18:	mov	x4, #0x0                   	// #0
   2ae1c:	b	2ace8 <__sanitizer_set_death_callback@@Base+0x476c>
   2ae20:	ldr	x0, [x4, #80]
   2ae24:	cbz	x0, 2ac0c <__sanitizer_set_death_callback@@Base+0x4690>
   2ae28:	ldr	x0, [x19, #16]
   2ae2c:	mov	x4, #0x0                   	// #0
   2ae30:	mov	w3, #0x0                   	// #0
   2ae34:	ldr	x2, [x0, #80]
   2ae38:	mov	x1, x20
   2ae3c:	mov	x0, x27
   2ae40:	ldr	x5, [sp, #120]
   2ae44:	blr	x5
   2ae48:	ldp	x19, x20, [sp, #32]
   2ae4c:	ldp	x21, x22, [sp, #48]
   2ae50:	ldp	x27, x28, [sp, #96]
   2ae54:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2ae58:	ldr	x28, [x19, #16]
   2ae5c:	add	x25, sp, #0x140
   2ae60:	mov	x2, #0x20                  	// #32
   2ae64:	mov	w1, #0x0                   	// #0
   2ae68:	mov	x0, x25
   2ae6c:	bl	6860 <__asan_internal_memset@plt>
   2ae70:	str	x21, [sp, #176]
   2ae74:	b	2a9a0 <__sanitizer_set_death_callback@@Base+0x4424>
   2ae78:	stp	x21, x22, [sp, #48]
   2ae7c:	mov	x19, x1
   2ae80:	asr	x0, x5, #3
   2ae84:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2ae88:	movk	x5, #0xaaab
   2ae8c:	mul	x0, x0, x5
   2ae90:	add	x0, x0, #0x1
   2ae94:	mov	x1, x5
   2ae98:	cmp	x6, x0
   2ae9c:	b.ls	2aed4 <__sanitizer_set_death_callback@@Base+0x4958>  // b.plast
   2aea0:	ldr	x0, [x19, #24]
   2aea4:	cmp	x0, x20
   2aea8:	b.hi	2aed4 <__sanitizer_set_death_callback@@Base+0x4958>  // b.pmore
   2aeac:	ldr	x0, [x19, #32]
   2aeb0:	cmp	x0, x20
   2aeb4:	b.ls	2aed4 <__sanitizer_set_death_callback@@Base+0x4958>  // b.plast
   2aeb8:	add	x19, x19, #0x18
   2aebc:	sub	x0, x19, x2
   2aec0:	asr	x0, x0, #3
   2aec4:	mul	x0, x0, x1
   2aec8:	add	x0, x0, #0x1
   2aecc:	cmp	x6, x0
   2aed0:	b.hi	2aea0 <__sanitizer_set_death_callback@@Base+0x4924>  // b.pmore
   2aed4:	ldr	x22, [x19, #16]
   2aed8:	ldr	x21, [x22, #104]
   2aedc:	cmp	x2, x19
   2aee0:	b.cc	29ec8 <__sanitizer_set_death_callback@@Base+0x394c>  // b.lo, b.ul, b.last
   2aee4:	ldr	w0, [x24, #8]
   2aee8:	cbnz	w0, 29eec <__sanitizer_set_death_callback@@Base+0x3970>
   2aeec:	cbz	x21, 29ef8 <__sanitizer_set_death_callback@@Base+0x397c>
   2aef0:	cmn	x21, #0x1
   2aef4:	b.eq	2ab98 <__sanitizer_set_death_callback@@Base+0x461c>  // b.none
   2aef8:	ldr	x4, [x19, #16]
   2aefc:	ldr	x3, [x4, #112]
   2af00:	mov	x2, #0x0                   	// #0
   2af04:	b	2abd0 <__sanitizer_set_death_callback@@Base+0x4654>
   2af08:	ldp	x19, x20, [sp, #32]
   2af0c:	ldp	x21, x22, [sp, #48]
   2af10:	ldp	x27, x28, [sp, #96]
   2af14:	b	29e8c <__sanitizer_set_death_callback@@Base+0x3910>
   2af18:	stp	x29, x30, [sp, #-96]!
   2af1c:	mov	x29, sp
   2af20:	stp	x19, x20, [sp, #16]
   2af24:	stp	x21, x22, [sp, #32]
   2af28:	stp	x23, x24, [sp, #48]
   2af2c:	mov	x20, x0
   2af30:	mov	x23, x1
   2af34:	mov	x21, x2
   2af38:	mov	x24, x3
   2af3c:	mov	x22, x4
   2af40:	ldr	w0, [x0, #8]
   2af44:	cbnz	w0, 2af94 <__sanitizer_set_death_callback@@Base+0x4a18>
   2af48:	ldr	x19, [x20, #32]
   2af4c:	cbz	x19, 2afe0 <__sanitizer_set_death_callback@@Base+0x4a64>
   2af50:	str	x25, [sp, #64]
   2af54:	add	x25, sp, #0x5c
   2af58:	mov	x6, x25
   2af5c:	mov	x5, x22
   2af60:	mov	x4, x24
   2af64:	mov	x3, x21
   2af68:	mov	x2, x23
   2af6c:	mov	x1, x19
   2af70:	mov	x0, x20
   2af74:	bl	29ddc <__sanitizer_set_death_callback@@Base+0x3860>
   2af78:	cbnz	w0, 2b00c <__sanitizer_set_death_callback@@Base+0x4a90>
   2af7c:	ldr	w1, [sp, #92]
   2af80:	cbnz	w1, 2b014 <__sanitizer_set_death_callback@@Base+0x4a98>
   2af84:	ldr	x19, [x19]
   2af88:	cbnz	x19, 2af58 <__sanitizer_set_death_callback@@Base+0x49dc>
   2af8c:	ldr	x25, [sp, #64]
   2af90:	b	2afe0 <__sanitizer_set_death_callback@@Base+0x4a64>
   2af94:	str	x25, [sp, #64]
   2af98:	add	x19, x20, #0x20
   2af9c:	add	x25, sp, #0x5c
   2afa0:	ldar	x19, [x19]
   2afa4:	cbz	x19, 2afdc <__sanitizer_set_death_callback@@Base+0x4a60>
   2afa8:	mov	x6, x25
   2afac:	mov	x5, x22
   2afb0:	mov	x4, x24
   2afb4:	mov	x3, x21
   2afb8:	mov	x2, x23
   2afbc:	mov	x1, x19
   2afc0:	mov	x0, x20
   2afc4:	bl	29ddc <__sanitizer_set_death_callback@@Base+0x3860>
   2afc8:	cbnz	w0, 2b01c <__sanitizer_set_death_callback@@Base+0x4aa0>
   2afcc:	ldr	w1, [sp, #92]
   2afd0:	cbz	w1, 2afa0 <__sanitizer_set_death_callback@@Base+0x4a24>
   2afd4:	ldr	x25, [sp, #64]
   2afd8:	b	2aff8 <__sanitizer_set_death_callback@@Base+0x4a7c>
   2afdc:	ldr	x25, [sp, #64]
   2afe0:	mov	x4, #0x0                   	// #0
   2afe4:	mov	w3, #0x0                   	// #0
   2afe8:	mov	x2, #0x0                   	// #0
   2afec:	mov	x1, x23
   2aff0:	mov	x0, x22
   2aff4:	blr	x21
   2aff8:	ldp	x19, x20, [sp, #16]
   2affc:	ldp	x21, x22, [sp, #32]
   2b000:	ldp	x23, x24, [sp, #48]
   2b004:	ldp	x29, x30, [sp], #96
   2b008:	ret
   2b00c:	ldr	x25, [sp, #64]
   2b010:	b	2aff8 <__sanitizer_set_death_callback@@Base+0x4a7c>
   2b014:	ldr	x25, [sp, #64]
   2b018:	b	2aff8 <__sanitizer_set_death_callback@@Base+0x4a7c>
   2b01c:	ldr	x25, [sp, #64]
   2b020:	b	2aff8 <__sanitizer_set_death_callback@@Base+0x4a7c>

000000000002b024 <__asan_backtrace_dwarf_add@@Base>:
   2b024:	sub	sp, sp, #0x290
   2b028:	stp	x29, x30, [sp, #48]
   2b02c:	add	x29, sp, #0x30
   2b030:	stp	x19, x20, [sp, #64]
   2b034:	stp	x21, x22, [sp, #80]
   2b038:	stp	x23, x24, [sp, #96]
   2b03c:	stp	x25, x26, [sp, #112]
   2b040:	stp	x27, x28, [sp, #128]
   2b044:	mov	x25, x0
   2b048:	str	x1, [sp, #200]
   2b04c:	mov	x19, x2
   2b050:	str	x2, [sp, #256]
   2b054:	mov	x20, x3
   2b058:	str	x3, [sp, #264]
   2b05c:	str	x4, [sp, #272]
   2b060:	str	x5, [sp, #280]
   2b064:	str	x6, [sp, #208]
   2b068:	str	x7, [sp, #168]
   2b06c:	ldr	x24, [sp, #704]
   2b070:	ldr	x28, [sp, #712]
   2b074:	mov	x2, #0x18                  	// #24
   2b078:	mov	w1, #0x0                   	// #0
   2b07c:	add	x0, sp, #0x150
   2b080:	bl	6860 <__asan_internal_memset@plt>
   2b084:	mov	x2, #0x18                  	// #24
   2b088:	mov	w1, #0x0                   	// #0
   2b08c:	add	x0, sp, #0x170
   2b090:	bl	6860 <__asan_internal_memset@plt>
   2b094:	str	xzr, [sp, #360]
   2b098:	str	xzr, [sp, #392]
   2b09c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b0a0:	add	x0, x0, #0x648
   2b0a4:	str	x0, [sp, #400]
   2b0a8:	str	x19, [sp, #408]
   2b0ac:	str	x19, [sp, #416]
   2b0b0:	str	x20, [sp, #424]
   2b0b4:	ldr	w0, [sp, #688]
   2b0b8:	str	w0, [sp, #432]
   2b0bc:	str	x24, [sp, #440]
   2b0c0:	str	x28, [sp, #448]
   2b0c4:	str	wzr, [sp, #456]
   2b0c8:	mov	x2, #0x18                  	// #24
   2b0cc:	mov	w1, #0x0                   	// #0
   2b0d0:	add	x0, sp, #0x138
   2b0d4:	bl	6860 <__asan_internal_memset@plt>
   2b0d8:	ldr	x0, [sp, #424]
   2b0dc:	str	x0, [sp, #160]
   2b0e0:	cbz	x0, 2b8e8 <__asan_backtrace_dwarf_add@@Base+0x8c4>
   2b0e4:	str	xzr, [sp, #176]
   2b0e8:	str	xzr, [sp, #160]
   2b0ec:	add	x27, sp, #0x190
   2b0f0:	add	x0, sp, #0x138
   2b0f4:	str	x0, [sp, #216]
   2b0f8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b0fc:	add	x0, x0, #0x840
   2b100:	str	x0, [sp, #224]
   2b104:	add	x0, sp, #0x150
   2b108:	str	x0, [sp, #232]
   2b10c:	mov	x26, x25
   2b110:	mov	x23, x24
   2b114:	mov	x24, x28
   2b118:	b	2b330 <__asan_backtrace_dwarf_add@@Base+0x30c>
   2b11c:	mov	x0, x27
   2b120:	bl	284e0 <__sanitizer_set_death_callback@@Base+0x1f64>
   2b124:	str	x0, [sp, #152]
   2b128:	mov	w28, #0x1                   	// #1
   2b12c:	b	2b35c <__asan_backtrace_dwarf_add@@Base+0x338>
   2b130:	mov	x25, x26
   2b134:	mov	x28, x24
   2b138:	mov	x24, x23
   2b13c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b140:	add	x1, x1, #0x800
   2b144:	add	x0, sp, #0x1d0
   2b148:	bl	28398 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2b14c:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b150:	mov	x25, x26
   2b154:	mov	x28, x24
   2b158:	mov	x24, x23
   2b15c:	mov	w2, #0x0                   	// #0
   2b160:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b164:	add	x1, x1, #0x820
   2b168:	mov	x0, x28
   2b16c:	blr	x23
   2b170:	ldr	x0, [sp, #160]
   2b174:	cbz	x0, 2b1e4 <__asan_backtrace_dwarf_add@@Base+0x1c0>
   2b178:	ldr	x19, [sp, #312]
   2b17c:	add	x21, x19, x0, lsl #3
   2b180:	mov	x20, #0x88                  	// #136
   2b184:	ldr	x1, [x19]
   2b188:	mov	x3, x28
   2b18c:	mov	x2, x24
   2b190:	add	x1, x1, #0x58
   2b194:	mov	x0, x25
   2b198:	bl	29d44 <__sanitizer_set_death_callback@@Base+0x37c8>
   2b19c:	mov	x4, x28
   2b1a0:	mov	x3, x24
   2b1a4:	mov	x2, x20
   2b1a8:	ldr	x1, [x19], #8
   2b1ac:	mov	x0, x25
   2b1b0:	bl	6bc0 <__asan_backtrace_free@plt>
   2b1b4:	cmp	x19, x21
   2b1b8:	b.ne	2b184 <__asan_backtrace_dwarf_add@@Base+0x160>  // b.any
   2b1bc:	ldr	x0, [sp, #328]
   2b1c0:	ldr	x1, [sp, #320]
   2b1c4:	add	x0, x0, x1
   2b1c8:	str	x0, [sp, #328]
   2b1cc:	str	xzr, [sp, #320]
   2b1d0:	mov	x3, x28
   2b1d4:	mov	x2, x24
   2b1d8:	add	x1, sp, #0x138
   2b1dc:	mov	x0, x25
   2b1e0:	bl	6910 <__asan_backtrace_vector_release@plt>
   2b1e4:	ldr	x0, [sp, #360]
   2b1e8:	cbnz	x0, 2b874 <__asan_backtrace_dwarf_add@@Base+0x850>
   2b1ec:	mov	w0, #0x0                   	// #0
   2b1f0:	b	2b7d4 <__asan_backtrace_dwarf_add@@Base+0x7b0>
   2b1f4:	mov	x0, x20
   2b1f8:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b1fc:	mov	x0, x20
   2b200:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b204:	cbz	x0, 2b23c <__asan_backtrace_dwarf_add@@Base+0x218>
   2b208:	ldr	w0, [sp, #648]
   2b20c:	cbnz	w0, 2b834 <__asan_backtrace_dwarf_add@@Base+0x810>
   2b210:	add	x21, x21, #0x1
   2b214:	mov	x0, x20
   2b218:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b21c:	mov	x0, x20
   2b220:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2b224:	mov	x0, x20
   2b228:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b22c:	cbz	x0, 2b1f4 <__asan_backtrace_dwarf_add@@Base+0x1d0>
   2b230:	mov	x0, x20
   2b234:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b238:	b	2b224 <__asan_backtrace_dwarf_add@@Base+0x200>
   2b23c:	mov	x22, x0
   2b240:	str	x0, [sp, #192]
   2b244:	ldr	w0, [sp, #648]
   2b248:	cbnz	w0, 2b844 <__asan_backtrace_dwarf_add@@Base+0x820>
   2b24c:	cbnz	x21, 2b4a0 <__asan_backtrace_dwarf_add@@Base+0x47c>
   2b250:	add	x0, sp, #0x1d0
   2b254:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2b258:	and	w2, w0, #0xff
   2b25c:	ldr	x3, [sp, #176]
   2b260:	str	x3, [x19, #24]
   2b264:	cmp	w28, #0x0
   2b268:	mov	x0, #0xc                   	// #12
   2b26c:	mov	x1, #0x4                   	// #4
   2b270:	csel	x0, x0, x1, ne  // ne = any
   2b274:	ldr	x1, [sp, #152]
   2b278:	add	x0, x0, x1
   2b27c:	add	x0, x3, x0
   2b280:	str	x0, [sp, #176]
   2b284:	str	x0, [x19, #32]
   2b288:	ldr	x1, [sp, #480]
   2b28c:	str	x1, [x19]
   2b290:	ldr	x0, [sp, #488]
   2b294:	str	x0, [x19, #8]
   2b298:	ldr	x0, [sp, #184]
   2b29c:	sub	x1, x1, x0
   2b2a0:	str	x1, [x19, #16]
   2b2a4:	ldr	w0, [sp, #288]
   2b2a8:	str	w0, [x19, #40]
   2b2ac:	str	w28, [x19, #44]
   2b2b0:	str	w2, [x19, #48]
   2b2b4:	str	xzr, [x19, #64]
   2b2b8:	str	xzr, [x19, #72]
   2b2bc:	str	xzr, [x19, #80]
   2b2c0:	str	xzr, [x19, #56]
   2b2c4:	str	xzr, [x19, #104]
   2b2c8:	str	xzr, [x19, #112]
   2b2cc:	str	xzr, [x19, #120]
   2b2d0:	str	xzr, [x19, #128]
   2b2d4:	add	x0, sp, #0x250
   2b2d8:	str	x0, [sp, #40]
   2b2dc:	ldr	x0, [sp, #232]
   2b2e0:	str	x0, [sp, #32]
   2b2e4:	str	x19, [sp, #24]
   2b2e8:	str	x24, [sp, #16]
   2b2ec:	str	x23, [sp, #8]
   2b2f0:	ldr	x0, [sp, #696]
   2b2f4:	str	x0, [sp]
   2b2f8:	ldr	w7, [sp, #688]
   2b2fc:	ldr	x6, [sp, #664]
   2b300:	ldr	x5, [sp, #656]
   2b304:	ldr	x4, [sp, #680]
   2b308:	ldr	x3, [sp, #672]
   2b30c:	add	x2, sp, #0x1d0
   2b310:	ldr	x1, [sp, #200]
   2b314:	mov	x0, x26
   2b318:	bl	290c0 <__sanitizer_set_death_callback@@Base+0x2b44>
   2b31c:	cbz	w0, 2b8d8 <__asan_backtrace_dwarf_add@@Base+0x8b4>
   2b320:	ldr	w0, [sp, #520]
   2b324:	cbnz	w0, 2b864 <__asan_backtrace_dwarf_add@@Base+0x840>
   2b328:	ldr	x0, [sp, #424]
   2b32c:	cbz	x0, 2b670 <__asan_backtrace_dwarf_add@@Base+0x64c>
   2b330:	ldr	w28, [sp, #456]
   2b334:	cbnz	w28, 2b7f4 <__asan_backtrace_dwarf_add@@Base+0x7d0>
   2b338:	ldr	x0, [sp, #416]
   2b33c:	str	x0, [sp, #184]
   2b340:	mov	x0, x27
   2b344:	bl	28460 <__sanitizer_set_death_callback@@Base+0x1ee4>
   2b348:	mov	w1, w0
   2b34c:	str	x1, [sp, #152]
   2b350:	mov	x1, #0xffffffff            	// #4294967295
   2b354:	cmp	x1, w0, uxtw
   2b358:	b.eq	2b11c <__asan_backtrace_dwarf_add@@Base+0xf8>  // b.none
   2b35c:	ldp	x0, x1, [x27]
   2b360:	stp	x0, x1, [sp, #464]
   2b364:	ldp	x0, x1, [x27, #16]
   2b368:	stp	x0, x1, [sp, #480]
   2b36c:	ldp	x0, x1, [x27, #32]
   2b370:	stp	x0, x1, [sp, #496]
   2b374:	ldp	x0, x1, [x27, #48]
   2b378:	add	x2, sp, #0x200
   2b37c:	stp	x0, x1, [x2]
   2b380:	ldr	x0, [sp, #152]
   2b384:	str	x0, [sp, #488]
   2b388:	mov	x1, x0
   2b38c:	mov	x0, x27
   2b390:	bl	283f4 <__sanitizer_set_death_callback@@Base+0x1e78>
   2b394:	cbz	w0, 2b804 <__asan_backtrace_dwarf_add@@Base+0x7e0>
   2b398:	add	x0, sp, #0x1d0
   2b39c:	bl	285d4 <__sanitizer_set_death_callback@@Base+0x2058>
   2b3a0:	and	w0, w0, #0xffff
   2b3a4:	str	w0, [sp, #288]
   2b3a8:	sub	w0, w0, #0x2
   2b3ac:	cmp	w0, #0x2
   2b3b0:	b.hi	2b130 <__asan_backtrace_dwarf_add@@Base+0x10c>  // b.pmore
   2b3b4:	ldr	x4, [sp, #216]
   2b3b8:	mov	x3, x24
   2b3bc:	mov	x2, x23
   2b3c0:	mov	x1, #0x8                   	// #8
   2b3c4:	mov	x0, x26
   2b3c8:	bl	6840 <__asan_backtrace_vector_grow@plt>
   2b3cc:	mov	x20, x0
   2b3d0:	cbz	x0, 2b814 <__asan_backtrace_dwarf_add@@Base+0x7f0>
   2b3d4:	mov	x3, x24
   2b3d8:	mov	x2, x23
   2b3dc:	mov	x1, #0x88                  	// #136
   2b3e0:	mov	x0, x26
   2b3e4:	bl	68c0 <__asan_backtrace_alloc@plt>
   2b3e8:	mov	x19, x0
   2b3ec:	cbz	x0, 2b824 <__asan_backtrace_dwarf_add@@Base+0x800>
   2b3f0:	str	x0, [x20]
   2b3f4:	ldr	x0, [sp, #160]
   2b3f8:	add	x0, x0, #0x1
   2b3fc:	str	x0, [sp, #160]
   2b400:	add	x0, x19, #0x58
   2b404:	str	x0, [sp, #240]
   2b408:	mov	x2, #0x10                  	// #16
   2b40c:	mov	w1, #0x0                   	// #0
   2b410:	bl	6860 <__asan_internal_memset@plt>
   2b414:	mov	w1, w28
   2b418:	add	x0, sp, #0x1d0
   2b41c:	bl	285b0 <__sanitizer_set_death_callback@@Base+0x2034>
   2b420:	str	xzr, [x19, #88]
   2b424:	str	xzr, [x19, #96]
   2b428:	ldr	x1, [sp, #168]
   2b42c:	cmp	x1, x0
   2b430:	b.ls	2b150 <__asan_backtrace_dwarf_add@@Base+0x12c>  // b.plast
   2b434:	ldr	x1, [sp, #224]
   2b438:	str	x1, [sp, #528]
   2b43c:	ldr	x1, [sp, #208]
   2b440:	str	x1, [sp, #536]
   2b444:	add	x1, x1, x0
   2b448:	str	x1, [sp, #544]
   2b44c:	ldr	x1, [sp, #168]
   2b450:	sub	x0, x1, x0
   2b454:	str	x0, [sp, #552]
   2b458:	ldr	w0, [sp, #688]
   2b45c:	str	w0, [sp, #560]
   2b460:	str	x23, [sp, #568]
   2b464:	str	x24, [sp, #576]
   2b468:	str	wzr, [sp, #584]
   2b46c:	add	x0, sp, #0x200
   2b470:	ldp	x0, x1, [x0, #16]
   2b474:	add	x2, sp, #0x200
   2b478:	stp	x0, x1, [x2, #80]
   2b47c:	ldp	x0, x1, [x2, #32]
   2b480:	stp	x0, x1, [x2, #96]
   2b484:	ldp	x0, x1, [x2, #48]
   2b488:	stp	x0, x1, [x2, #112]
   2b48c:	ldp	x0, x1, [x2, #64]
   2b490:	stp	x0, x1, [x2, #128]
   2b494:	mov	x21, #0x0                   	// #0
   2b498:	add	x20, sp, #0x250
   2b49c:	b	2b1fc <__asan_backtrace_dwarf_add@@Base+0x1d8>
   2b4a0:	lsl	x20, x21, #5
   2b4a4:	mov	x3, x24
   2b4a8:	mov	x2, x23
   2b4ac:	mov	x1, x20
   2b4b0:	mov	x0, x26
   2b4b4:	bl	68c0 <__asan_backtrace_alloc@plt>
   2b4b8:	str	x0, [x19, #96]
   2b4bc:	cbz	x0, 2b854 <__asan_backtrace_dwarf_add@@Base+0x830>
   2b4c0:	str	x21, [x19, #88]
   2b4c4:	mov	x2, x20
   2b4c8:	mov	w1, #0x0                   	// #0
   2b4cc:	bl	6860 <__asan_internal_memset@plt>
   2b4d0:	ldr	w0, [sp, #584]
   2b4d4:	cbnz	w0, 2b620 <__asan_backtrace_dwarf_add@@Base+0x5fc>
   2b4d8:	add	x20, sp, #0x210
   2b4dc:	str	w28, [sp, #292]
   2b4e0:	str	x26, [sp, #248]
   2b4e4:	mov	x26, x22
   2b4e8:	str	x23, [sp, #704]
   2b4ec:	str	x24, [sp, #712]
   2b4f0:	str	x27, [sp, #296]
   2b4f4:	b	2b554 <__asan_backtrace_dwarf_add@@Base+0x530>
   2b4f8:	add	x21, x21, #0x1
   2b4fc:	mov	x0, x22
   2b500:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b504:	mov	x0, x22
   2b508:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b50c:	mov	x24, x0
   2b510:	cbnz	x0, 2b4f8 <__asan_backtrace_dwarf_add@@Base+0x4d4>
   2b514:	cbnz	x21, 2b5ac <__asan_backtrace_dwarf_add@@Base+0x588>
   2b518:	mov	x0, x20
   2b51c:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b520:	mov	x0, x20
   2b524:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b528:	mov	x22, #0x0                   	// #0
   2b52c:	ldr	x1, [x19, #96]
   2b530:	add	x0, x1, x26
   2b534:	str	x23, [x1, x26]
   2b538:	str	w28, [x0, #8]
   2b53c:	str	w27, [x0, #12]
   2b540:	str	x21, [x0, #16]
   2b544:	str	x22, [x0, #24]
   2b548:	add	x26, x26, #0x20
   2b54c:	ldr	w0, [sp, #584]
   2b550:	cbnz	w0, 2b5fc <__asan_backtrace_dwarf_add@@Base+0x5d8>
   2b554:	mov	x0, x20
   2b558:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b55c:	mov	x23, x0
   2b560:	cbz	x0, 2b640 <__asan_backtrace_dwarf_add@@Base+0x61c>
   2b564:	mov	x0, x20
   2b568:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b56c:	mov	x28, x0
   2b570:	mov	x0, x20
   2b574:	bl	2862c <__sanitizer_set_death_callback@@Base+0x20b0>
   2b578:	and	w27, w0, #0xff
   2b57c:	ldp	x0, x1, [x20]
   2b580:	add	x2, sp, #0x200
   2b584:	stp	x0, x1, [x2, #80]
   2b588:	ldp	x0, x1, [x20, #16]
   2b58c:	stp	x0, x1, [x2, #96]
   2b590:	ldp	x0, x1, [x20, #32]
   2b594:	stp	x0, x1, [x2, #112]
   2b598:	ldp	x0, x1, [x20, #48]
   2b59c:	stp	x0, x1, [x2, #128]
   2b5a0:	ldr	x21, [sp, #192]
   2b5a4:	add	x22, sp, #0x250
   2b5a8:	b	2b504 <__asan_backtrace_dwarf_add@@Base+0x4e0>
   2b5ac:	ldr	x3, [sp, #712]
   2b5b0:	ldr	x2, [sp, #704]
   2b5b4:	lsl	x1, x21, #3
   2b5b8:	ldr	x0, [sp, #248]
   2b5bc:	bl	68c0 <__asan_backtrace_alloc@plt>
   2b5c0:	mov	x22, x0
   2b5c4:	cbz	x0, 2b630 <__asan_backtrace_dwarf_add@@Base+0x60c>
   2b5c8:	mov	x25, x0
   2b5cc:	mov	x21, x24
   2b5d0:	mov	x0, x20
   2b5d4:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b5d8:	mov	x24, x0
   2b5dc:	mov	x0, x20
   2b5e0:	bl	28660 <__sanitizer_set_death_callback@@Base+0x20e4>
   2b5e4:	cbz	x24, 2b52c <__asan_backtrace_dwarf_add@@Base+0x508>
   2b5e8:	str	w24, [x25]
   2b5ec:	str	w0, [x25, #4]
   2b5f0:	add	x21, x21, #0x1
   2b5f4:	add	x25, x25, #0x8
   2b5f8:	b	2b5d0 <__asan_backtrace_dwarf_add@@Base+0x5ac>
   2b5fc:	ldr	x25, [sp, #248]
   2b600:	ldr	x24, [sp, #704]
   2b604:	ldr	x28, [sp, #712]
   2b608:	mov	x3, x28
   2b60c:	mov	x2, x24
   2b610:	ldr	x1, [sp, #240]
   2b614:	mov	x0, x25
   2b618:	bl	29d44 <__sanitizer_set_death_callback@@Base+0x37c8>
   2b61c:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b620:	mov	x25, x26
   2b624:	mov	x28, x24
   2b628:	mov	x24, x23
   2b62c:	b	2b608 <__asan_backtrace_dwarf_add@@Base+0x5e4>
   2b630:	ldr	x25, [sp, #248]
   2b634:	ldr	x24, [sp, #704]
   2b638:	ldr	x28, [sp, #712]
   2b63c:	b	2b608 <__asan_backtrace_dwarf_add@@Base+0x5e4>
   2b640:	ldr	w28, [sp, #292]
   2b644:	ldr	x26, [sp, #248]
   2b648:	ldr	x23, [sp, #704]
   2b64c:	ldr	x24, [sp, #712]
   2b650:	ldr	x27, [sp, #296]
   2b654:	adrp	x3, 27000 <__sanitizer_set_death_callback@@Base+0xa84>
   2b658:	add	x3, x3, #0xec4
   2b65c:	mov	x2, #0x20                  	// #32
   2b660:	ldr	x1, [x19, #88]
   2b664:	ldr	x0, [x19, #96]
   2b668:	bl	66b0 <__asan_backtrace_qsort@plt>
   2b66c:	b	2b250 <__asan_backtrace_dwarf_add@@Base+0x22c>
   2b670:	mov	x25, x26
   2b674:	mov	x28, x24
   2b678:	mov	x24, x23
   2b67c:	ldr	w0, [sp, #456]
   2b680:	cbnz	w0, 2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b684:	add	x0, sp, #0x200
   2b688:	ldp	x0, x1, [x0, #-200]
   2b68c:	stp	x0, x1, [sp, #368]
   2b690:	ldr	x0, [sp, #328]
   2b694:	str	x0, [sp, #384]
   2b698:	ldr	x0, [sp, #160]
   2b69c:	str	x0, [sp, #392]
   2b6a0:	mov	x3, x28
   2b6a4:	mov	x2, x24
   2b6a8:	add	x1, sp, #0x150
   2b6ac:	mov	x0, x25
   2b6b0:	bl	6910 <__asan_backtrace_vector_release@plt>
   2b6b4:	cbz	w0, 2b1ec <__asan_backtrace_dwarf_add@@Base+0x1c8>
   2b6b8:	mov	x3, x28
   2b6bc:	mov	x2, x24
   2b6c0:	add	x1, sp, #0x170
   2b6c4:	mov	x0, x25
   2b6c8:	bl	6910 <__asan_backtrace_vector_release@plt>
   2b6cc:	cbz	w0, 2b1ec <__asan_backtrace_dwarf_add@@Base+0x1c8>
   2b6d0:	ldr	x20, [sp, #336]
   2b6d4:	ldr	x22, [sp, #368]
   2b6d8:	ldr	x19, [sp, #360]
   2b6dc:	ldr	x21, [sp, #392]
   2b6e0:	adrp	x3, 27000 <__sanitizer_set_death_callback@@Base+0xa84>
   2b6e4:	add	x3, x3, #0xe2c
   2b6e8:	mov	x2, #0x18                  	// #24
   2b6ec:	mov	x1, x19
   2b6f0:	mov	x0, x20
   2b6f4:	bl	66b0 <__asan_backtrace_qsort@plt>
   2b6f8:	mov	x3, x28
   2b6fc:	mov	x2, x24
   2b700:	mov	x1, #0xa0                  	// #160
   2b704:	mov	x0, x25
   2b708:	bl	68c0 <__asan_backtrace_alloc@plt>
   2b70c:	mov	x23, x0
   2b710:	cbz	x0, 2b1ec <__asan_backtrace_dwarf_add@@Base+0x1c8>
   2b714:	str	xzr, [x0]
   2b718:	ldr	x0, [sp, #696]
   2b71c:	str	x0, [x23, #8]
   2b720:	ldr	x0, [sp, #200]
   2b724:	str	x0, [x23, #16]
   2b728:	str	x20, [x23, #24]
   2b72c:	str	x19, [x23, #32]
   2b730:	str	x22, [x23, #40]
   2b734:	str	x21, [x23, #48]
   2b738:	ldr	x0, [sp, #256]
   2b73c:	str	x0, [x23, #56]
   2b740:	ldr	x0, [sp, #264]
   2b744:	str	x0, [x23, #64]
   2b748:	ldr	x0, [sp, #272]
   2b74c:	str	x0, [x23, #72]
   2b750:	ldr	x0, [sp, #280]
   2b754:	str	x0, [x23, #80]
   2b758:	ldr	x0, [sp, #656]
   2b75c:	str	x0, [x23, #88]
   2b760:	ldr	x0, [sp, #664]
   2b764:	str	x0, [x23, #96]
   2b768:	ldr	x0, [sp, #672]
   2b76c:	str	x0, [x23, #104]
   2b770:	ldr	x0, [sp, #680]
   2b774:	str	x0, [x23, #112]
   2b778:	ldr	w0, [sp, #688]
   2b77c:	str	w0, [x23, #120]
   2b780:	mov	x2, #0x20                  	// #32
   2b784:	mov	w1, #0x0                   	// #0
   2b788:	add	x0, x23, #0x80
   2b78c:	bl	6860 <__asan_internal_memset@plt>
   2b790:	ldr	x0, [sp, #728]
   2b794:	cbz	x0, 2b79c <__asan_backtrace_dwarf_add@@Base+0x778>
   2b798:	str	x23, [x0]
   2b79c:	ldr	w0, [x25, #8]
   2b7a0:	add	x2, x25, #0x20
   2b7a4:	cbnz	w0, 2b8d0 <__asan_backtrace_dwarf_add@@Base+0x8ac>
   2b7a8:	ldr	x0, [x25, #32]
   2b7ac:	cbz	x0, 2b8a0 <__asan_backtrace_dwarf_add@@Base+0x87c>
   2b7b0:	mov	x1, x0
   2b7b4:	ldr	x0, [x0]
   2b7b8:	cbnz	x0, 2b7b0 <__asan_backtrace_dwarf_add@@Base+0x78c>
   2b7bc:	str	x23, [x1]
   2b7c0:	ldr	x1, [sp, #720]
   2b7c4:	adrp	x0, 2a000 <__sanitizer_set_death_callback@@Base+0x3a84>
   2b7c8:	add	x0, x0, #0xf18
   2b7cc:	str	x0, [x1]
   2b7d0:	mov	w0, #0x1                   	// #1
   2b7d4:	ldp	x19, x20, [sp, #64]
   2b7d8:	ldp	x21, x22, [sp, #80]
   2b7dc:	ldp	x23, x24, [sp, #96]
   2b7e0:	ldp	x25, x26, [sp, #112]
   2b7e4:	ldp	x27, x28, [sp, #128]
   2b7e8:	ldp	x29, x30, [sp, #48]
   2b7ec:	add	sp, sp, #0x290
   2b7f0:	ret
   2b7f4:	mov	x25, x26
   2b7f8:	mov	x28, x24
   2b7fc:	mov	x24, x23
   2b800:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b804:	mov	x25, x26
   2b808:	mov	x28, x24
   2b80c:	mov	x24, x23
   2b810:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b814:	mov	x25, x26
   2b818:	mov	x28, x24
   2b81c:	mov	x24, x23
   2b820:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b824:	mov	x25, x26
   2b828:	mov	x28, x24
   2b82c:	mov	x24, x23
   2b830:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b834:	mov	x25, x26
   2b838:	mov	x28, x24
   2b83c:	mov	x24, x23
   2b840:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b844:	mov	x25, x26
   2b848:	mov	x28, x24
   2b84c:	mov	x24, x23
   2b850:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b854:	mov	x25, x26
   2b858:	mov	x28, x24
   2b85c:	mov	x24, x23
   2b860:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b864:	mov	x25, x26
   2b868:	mov	x28, x24
   2b86c:	mov	x24, x23
   2b870:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b874:	ldr	x0, [sp, #352]
   2b878:	ldr	x1, [sp, #344]
   2b87c:	add	x0, x0, x1
   2b880:	str	x0, [sp, #352]
   2b884:	str	xzr, [sp, #344]
   2b888:	mov	x3, x28
   2b88c:	mov	x2, x24
   2b890:	add	x1, sp, #0x150
   2b894:	mov	x0, x25
   2b898:	bl	6910 <__asan_backtrace_vector_release@plt>
   2b89c:	b	2b1ec <__asan_backtrace_dwarf_add@@Base+0x1c8>
   2b8a0:	add	x1, x25, #0x20
   2b8a4:	b	2b7bc <__asan_backtrace_dwarf_add@@Base+0x798>
   2b8a8:	mov	x1, x0
   2b8ac:	ldar	x0, [x1]
   2b8b0:	cbnz	x0, 2b8a8 <__asan_backtrace_dwarf_add@@Base+0x884>
   2b8b4:	ldxr	x0, [x1]
   2b8b8:	cbnz	x0, 2b8c4 <__asan_backtrace_dwarf_add@@Base+0x8a0>
   2b8bc:	stlxr	w3, x23, [x1]
   2b8c0:	cbnz	w3, 2b8b4 <__asan_backtrace_dwarf_add@@Base+0x890>
   2b8c4:	cmp	x0, #0x0
   2b8c8:	dmb	ish
   2b8cc:	b.eq	2b7c0 <__asan_backtrace_dwarf_add@@Base+0x79c>  // b.none
   2b8d0:	mov	x1, x2
   2b8d4:	b	2b8ac <__asan_backtrace_dwarf_add@@Base+0x888>
   2b8d8:	mov	x25, x26
   2b8dc:	mov	x28, x24
   2b8e0:	mov	x24, x23
   2b8e4:	b	2b170 <__asan_backtrace_dwarf_add@@Base+0x14c>
   2b8e8:	ldr	w0, [sp, #456]
   2b8ec:	cbz	w0, 2b684 <__asan_backtrace_dwarf_add@@Base+0x660>
   2b8f0:	b	2b1e4 <__asan_backtrace_dwarf_add@@Base+0x1c0>
   2b8f4:	stp	x29, x30, [sp, #-160]!
   2b8f8:	mov	x29, sp
   2b8fc:	stp	x19, x20, [sp, #16]
   2b900:	stp	x21, x22, [sp, #32]
   2b904:	stp	x23, x24, [sp, #48]
   2b908:	mov	x20, x0
   2b90c:	mov	x22, x1
   2b910:	mov	x23, x2
   2b914:	ldr	w0, [x0, #8]
   2b918:	cbnz	w0, 2b94c <__asan_backtrace_dwarf_add@@Base+0x928>
   2b91c:	ldr	w0, [x20, #56]
   2b920:	cbnz	w0, 2b970 <__asan_backtrace_dwarf_add@@Base+0x94c>
   2b924:	ldr	x0, [x20, #24]
   2b928:	str	x0, [sp, #152]
   2b92c:	ldr	x1, [sp, #152]
   2b930:	mov	w0, #0x1                   	// #1
   2b934:	cbz	x1, 2b98c <__asan_backtrace_dwarf_add@@Base+0x968>
   2b938:	ldp	x19, x20, [sp, #16]
   2b93c:	ldp	x21, x22, [sp, #32]
   2b940:	ldp	x23, x24, [sp, #48]
   2b944:	ldp	x29, x30, [sp], #160
   2b948:	ret
   2b94c:	add	x0, x20, #0x38
   2b950:	ldar	w0, [x0]
   2b954:	cbnz	w0, 2b970 <__asan_backtrace_dwarf_add@@Base+0x94c>
   2b958:	ldr	w0, [x20, #8]
   2b95c:	cbz	w0, 2b924 <__asan_backtrace_dwarf_add@@Base+0x900>
   2b960:	add	x0, x20, #0x18
   2b964:	ldar	x0, [x0]
   2b968:	str	x0, [sp, #152]
   2b96c:	b	2b92c <__asan_backtrace_dwarf_add@@Base+0x908>
   2b970:	mov	w2, #0xffffffff            	// #-1
   2b974:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b978:	add	x1, x1, #0x8a8
   2b97c:	mov	x0, x23
   2b980:	blr	x22
   2b984:	mov	w0, #0x0                   	// #0
   2b988:	b	2b938 <__asan_backtrace_dwarf_add@@Base+0x914>
   2b98c:	stp	x25, x26, [sp, #64]
   2b990:	mov	w0, #0xffffffff            	// #-1
   2b994:	mov	w19, #0x0                   	// #0
   2b998:	add	x26, sp, #0x54
   2b99c:	adrp	x25, 3f000 <__asan_backtrace_vector_release@@Base+0x4c58>
   2b9a0:	add	x25, x25, #0x910
   2b9a4:	adrp	x24, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b9a8:	add	x24, x24, #0x890
   2b9ac:	b	2b9cc <__asan_backtrace_dwarf_add@@Base+0x9a8>
   2b9b0:	cbz	w19, 2ba0c <__asan_backtrace_dwarf_add@@Base+0x9e8>
   2b9b4:	cmp	w19, #0x1
   2b9b8:	b.ne	2ba18 <__asan_backtrace_dwarf_add@@Base+0x9f4>  // b.any
   2b9bc:	mov	x21, #0x0                   	// #0
   2b9c0:	add	w19, w19, #0x1
   2b9c4:	cmp	w19, #0x5
   2b9c8:	b.eq	2ba78 <__asan_backtrace_dwarf_add@@Base+0xa54>  // b.none
   2b9cc:	cmp	w19, #0x2
   2b9d0:	b.eq	2ba1c <__asan_backtrace_dwarf_add@@Base+0x9f8>  // b.none
   2b9d4:	b.le	2b9b0 <__asan_backtrace_dwarf_add@@Base+0x98c>
   2b9d8:	cmp	w19, #0x3
   2b9dc:	b.eq	2baa8 <__asan_backtrace_dwarf_add@@Base+0xa84>  // b.none
   2b9e0:	cmp	w19, #0x4
   2b9e4:	b.ne	2ba18 <__asan_backtrace_dwarf_add@@Base+0x9f4>  // b.any
   2b9e8:	bl	6990 <getpid@plt>
   2b9ec:	add	x21, sp, #0x58
   2b9f0:	sxtw	x3, w0
   2b9f4:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2b9f8:	add	x2, x2, #0x8d0
   2b9fc:	mov	x1, #0x40                  	// #64
   2ba00:	mov	x0, x21
   2ba04:	bl	6a20 <snprintf@plt>
   2ba08:	b	2baac <__asan_backtrace_dwarf_add@@Base+0xa88>
   2ba0c:	ldr	x21, [x20]
   2ba10:	cbz	x21, 2b9bc <__asan_backtrace_dwarf_add@@Base+0x998>
   2ba14:	b	2baac <__asan_backtrace_dwarf_add@@Base+0xa88>
   2ba18:	bl	6bf0 <abort@plt>
   2ba1c:	mov	x21, x25
   2ba20:	b	2baac <__asan_backtrace_dwarf_add@@Base+0xa88>
   2ba24:	ldr	w1, [sp, #84]
   2ba28:	cbnz	w1, 2b9c0 <__asan_backtrace_dwarf_add@@Base+0x99c>
   2ba2c:	b	2ba90 <__asan_backtrace_dwarf_add@@Base+0xa6c>
   2ba30:	mov	w2, #0x0                   	// #0
   2ba34:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ba38:	add	x1, x1, #0x8e8
   2ba3c:	mov	x0, x23
   2ba40:	blr	x22
   2ba44:	b	2ba90 <__asan_backtrace_dwarf_add@@Base+0xa6c>
   2ba48:	add	x20, x20, #0x38
   2ba4c:	mov	w0, #0x1                   	// #1
   2ba50:	stlr	w0, [x20]
   2ba54:	mov	w0, #0x0                   	// #0
   2ba58:	ldp	x25, x26, [sp, #64]
   2ba5c:	b	2b938 <__asan_backtrace_dwarf_add@@Base+0x914>
   2ba60:	add	x20, x20, #0x18
   2ba64:	ldr	x0, [sp, #152]
   2ba68:	stlr	x0, [x20]
   2ba6c:	mov	w0, #0x1                   	// #1
   2ba70:	ldp	x25, x26, [sp, #64]
   2ba74:	b	2b938 <__asan_backtrace_dwarf_add@@Base+0x914>
   2ba78:	tbz	w0, #31, 2bac4 <__asan_backtrace_dwarf_add@@Base+0xaa0>
   2ba7c:	ldr	x1, [x20]
   2ba80:	cbz	x1, 2ba30 <__asan_backtrace_dwarf_add@@Base+0xa0c>
   2ba84:	mov	w2, #0x2                   	// #2
   2ba88:	mov	x0, x23
   2ba8c:	blr	x22
   2ba90:	ldr	w0, [x20, #8]
   2ba94:	cbnz	w0, 2ba48 <__asan_backtrace_dwarf_add@@Base+0xa24>
   2ba98:	mov	w1, #0x1                   	// #1
   2ba9c:	str	w1, [x20, #56]
   2baa0:	ldp	x25, x26, [sp, #64]
   2baa4:	b	2b938 <__asan_backtrace_dwarf_add@@Base+0x914>
   2baa8:	mov	x21, x24
   2baac:	mov	x3, x26
   2bab0:	mov	x2, x23
   2bab4:	mov	x1, x22
   2bab8:	mov	x0, x21
   2babc:	bl	6d40 <__asan_backtrace_open@plt>
   2bac0:	tbnz	w0, #31, 2ba24 <__asan_backtrace_dwarf_add@@Base+0xa00>
   2bac4:	add	x5, sp, #0x98
   2bac8:	mov	x4, x23
   2bacc:	mov	x3, x22
   2bad0:	mov	w2, w0
   2bad4:	mov	x1, x21
   2bad8:	mov	x0, x20
   2badc:	bl	6c00 <__asan_backtrace_initialize@plt>
   2bae0:	cbz	w0, 2ba90 <__asan_backtrace_dwarf_add@@Base+0xa6c>
   2bae4:	ldr	w0, [x20, #8]
   2bae8:	cbnz	w0, 2ba60 <__asan_backtrace_dwarf_add@@Base+0xa3c>
   2baec:	ldr	x0, [sp, #152]
   2baf0:	str	x0, [x20, #24]
   2baf4:	mov	w0, #0x1                   	// #1
   2baf8:	ldp	x25, x26, [sp, #64]
   2bafc:	b	2b938 <__asan_backtrace_dwarf_add@@Base+0x914>

000000000002bb00 <__asan_backtrace_pcinfo@@Base>:
   2bb00:	stp	x29, x30, [sp, #-64]!
   2bb04:	mov	x29, sp
   2bb08:	stp	x19, x20, [sp, #16]
   2bb0c:	stp	x21, x22, [sp, #32]
   2bb10:	str	x23, [sp, #48]
   2bb14:	mov	x19, x0
   2bb18:	mov	x23, x1
   2bb1c:	mov	x22, x2
   2bb20:	mov	x20, x3
   2bb24:	mov	x21, x4
   2bb28:	mov	x2, x4
   2bb2c:	mov	x1, x3
   2bb30:	bl	2b8f4 <__asan_backtrace_dwarf_add@@Base+0x8d0>
   2bb34:	cbz	w0, 2bb60 <__asan_backtrace_pcinfo@@Base+0x60>
   2bb38:	ldr	w1, [x19, #56]
   2bb3c:	mov	w0, #0x0                   	// #0
   2bb40:	cbnz	w1, 2bb60 <__asan_backtrace_pcinfo@@Base+0x60>
   2bb44:	ldr	x5, [x19, #24]
   2bb48:	mov	x4, x21
   2bb4c:	mov	x3, x20
   2bb50:	mov	x2, x22
   2bb54:	mov	x1, x23
   2bb58:	mov	x0, x19
   2bb5c:	blr	x5
   2bb60:	ldp	x19, x20, [sp, #16]
   2bb64:	ldp	x21, x22, [sp, #32]
   2bb68:	ldr	x23, [sp, #48]
   2bb6c:	ldp	x29, x30, [sp], #64
   2bb70:	ret

000000000002bb74 <__asan_backtrace_syminfo@@Base>:
   2bb74:	stp	x29, x30, [sp, #-64]!
   2bb78:	mov	x29, sp
   2bb7c:	stp	x19, x20, [sp, #16]
   2bb80:	stp	x21, x22, [sp, #32]
   2bb84:	str	x23, [sp, #48]
   2bb88:	mov	x19, x0
   2bb8c:	mov	x23, x1
   2bb90:	mov	x22, x2
   2bb94:	mov	x20, x3
   2bb98:	mov	x21, x4
   2bb9c:	mov	x2, x4
   2bba0:	mov	x1, x3
   2bba4:	bl	2b8f4 <__asan_backtrace_dwarf_add@@Base+0x8d0>
   2bba8:	cbz	w0, 2bbd8 <__asan_backtrace_syminfo@@Base+0x64>
   2bbac:	ldr	w1, [x19, #56]
   2bbb0:	mov	w0, #0x0                   	// #0
   2bbb4:	cbnz	w1, 2bbd8 <__asan_backtrace_syminfo@@Base+0x64>
   2bbb8:	ldr	x5, [x19, #40]
   2bbbc:	mov	x4, x21
   2bbc0:	mov	x3, x20
   2bbc4:	mov	x2, x22
   2bbc8:	mov	x1, x23
   2bbcc:	mov	x0, x19
   2bbd0:	blr	x5
   2bbd4:	mov	w0, #0x1                   	// #1
   2bbd8:	ldp	x19, x20, [sp, #16]
   2bbdc:	ldp	x21, x22, [sp, #32]
   2bbe0:	ldr	x23, [sp, #48]
   2bbe4:	ldp	x29, x30, [sp], #64
   2bbe8:	ret

000000000002bbec <__asan_backtrace_open@@Base>:
   2bbec:	stp	x29, x30, [sp, #-64]!
   2bbf0:	mov	x29, sp
   2bbf4:	stp	x19, x20, [sp, #16]
   2bbf8:	stp	x21, x22, [sp, #32]
   2bbfc:	str	x23, [sp, #48]
   2bc00:	mov	x21, x0
   2bc04:	mov	x23, x1
   2bc08:	mov	x22, x2
   2bc0c:	cbz	x3, 2bc8c <__asan_backtrace_open@@Base+0xa0>
   2bc10:	mov	x20, x3
   2bc14:	str	wzr, [x3]
   2bc18:	mov	w1, #0x80000               	// #524288
   2bc1c:	bl	67f0 <open@plt>
   2bc20:	mov	w19, w0
   2bc24:	tbnz	w0, #31, 2bc50 <__asan_backtrace_open@@Base+0x64>
   2bc28:	mov	w2, #0x1                   	// #1
   2bc2c:	mov	w1, #0x2                   	// #2
   2bc30:	mov	w0, w19
   2bc34:	bl	6cd0 <fcntl@plt>
   2bc38:	mov	w0, w19
   2bc3c:	ldp	x19, x20, [sp, #16]
   2bc40:	ldp	x21, x22, [sp, #32]
   2bc44:	ldr	x23, [sp, #48]
   2bc48:	ldp	x29, x30, [sp], #64
   2bc4c:	ret
   2bc50:	bl	6ac0 <__errno_location@plt>
   2bc54:	ldr	w0, [x0]
   2bc58:	cmp	w0, #0x2
   2bc5c:	b.eq	2bc7c <__asan_backtrace_open@@Base+0x90>  // b.none
   2bc60:	bl	6ac0 <__errno_location@plt>
   2bc64:	ldr	w2, [x0]
   2bc68:	mov	x1, x21
   2bc6c:	mov	x0, x22
   2bc70:	blr	x23
   2bc74:	mov	w19, #0xffffffff            	// #-1
   2bc78:	b	2bc38 <__asan_backtrace_open@@Base+0x4c>
   2bc7c:	mov	w0, #0x1                   	// #1
   2bc80:	str	w0, [x20]
   2bc84:	mov	w19, #0xffffffff            	// #-1
   2bc88:	b	2bc38 <__asan_backtrace_open@@Base+0x4c>
   2bc8c:	mov	w1, #0x80000               	// #524288
   2bc90:	bl	67f0 <open@plt>
   2bc94:	mov	w19, w0
   2bc98:	tbz	w0, #31, 2bc28 <__asan_backtrace_open@@Base+0x3c>
   2bc9c:	b	2bc60 <__asan_backtrace_open@@Base+0x74>

000000000002bca0 <__asan_backtrace_close@@Base>:
   2bca0:	stp	x29, x30, [sp, #-32]!
   2bca4:	mov	x29, sp
   2bca8:	stp	x19, x20, [sp, #16]
   2bcac:	mov	x19, x1
   2bcb0:	mov	x20, x2
   2bcb4:	bl	6b60 <close@plt>
   2bcb8:	tbnz	w0, #31, 2bccc <__asan_backtrace_close@@Base+0x2c>
   2bcbc:	mov	w0, #0x1                   	// #1
   2bcc0:	ldp	x19, x20, [sp, #16]
   2bcc4:	ldp	x29, x30, [sp], #32
   2bcc8:	ret
   2bccc:	bl	6ac0 <__errno_location@plt>
   2bcd0:	ldr	w2, [x0]
   2bcd4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2bcd8:	add	x1, x1, #0x918
   2bcdc:	mov	x0, x20
   2bce0:	blr	x19
   2bce4:	mov	w0, #0x0                   	// #0
   2bce8:	b	2bcc0 <__asan_backtrace_close@@Base+0x20>
   2bcec:	cbz	x2, 2bd10 <__asan_backtrace_close@@Base+0x70>
   2bcf0:	mov	x3, #0x0                   	// #0
   2bcf4:	ldrb	w4, [x0, x3]
   2bcf8:	ldrb	w5, [x1, x3]
   2bcfc:	strb	w5, [x0, x3]
   2bd00:	strb	w4, [x1, x3]
   2bd04:	add	x3, x3, #0x1
   2bd08:	cmp	x2, x3
   2bd0c:	b.ne	2bcf4 <__asan_backtrace_close@@Base+0x54>  // b.any
   2bd10:	ret

000000000002bd14 <__asan_backtrace_qsort@@Base>:
   2bd14:	stp	x29, x30, [sp, #-80]!
   2bd18:	mov	x29, sp
   2bd1c:	stp	x21, x22, [sp, #32]
   2bd20:	stp	x23, x24, [sp, #48]
   2bd24:	stp	x25, x26, [sp, #64]
   2bd28:	mov	x23, x0
   2bd2c:	mov	x24, x1
   2bd30:	mov	x22, x2
   2bd34:	mov	x26, x3
   2bd38:	cmp	x1, #0x1
   2bd3c:	b.ls	2be30 <__asan_backtrace_qsort@@Base+0x11c>  // b.plast
   2bd40:	stp	x19, x20, [sp, #16]
   2bd44:	b	2be00 <__asan_backtrace_qsort@@Base+0xec>
   2bd48:	mov	x2, x22
   2bd4c:	mov	x1, x19
   2bd50:	madd	x0, x22, x21, x23
   2bd54:	bl	2bcec <__asan_backtrace_close@@Base+0x4c>
   2bd58:	add	x20, x20, #0x1
   2bd5c:	add	x19, x19, x22
   2bd60:	cmp	x20, x24
   2bd64:	b.eq	2bdd0 <__asan_backtrace_qsort@@Base+0xbc>  // b.none
   2bd68:	mov	x1, x19
   2bd6c:	mov	x0, x23
   2bd70:	blr	x26
   2bd74:	cmp	w0, #0x0
   2bd78:	b.le	2bd58 <__asan_backtrace_qsort@@Base+0x44>
   2bd7c:	add	x21, x21, #0x1
   2bd80:	cmp	x21, x20
   2bd84:	b.eq	2bd58 <__asan_backtrace_qsort@@Base+0x44>  // b.none
   2bd88:	b	2bd48 <__asan_backtrace_qsort@@Base+0x34>
   2bd8c:	mov	x2, x22
   2bd90:	madd	x1, x21, x22, x23
   2bd94:	mov	x0, x23
   2bd98:	bl	2bcec <__asan_backtrace_close@@Base+0x4c>
   2bd9c:	cmp	x24, x21, lsl #1
   2bda0:	b.hi	2bdd4 <__asan_backtrace_qsort@@Base+0xc0>  // b.pmore
   2bda4:	sub	x1, x24, #0x1
   2bda8:	madd	x0, x21, x22, x22
   2bdac:	mov	x3, x26
   2bdb0:	mov	x2, x22
   2bdb4:	sub	x1, x1, x21
   2bdb8:	add	x0, x23, x0
   2bdbc:	bl	2bd14 <__asan_backtrace_qsort@@Base>
   2bdc0:	mov	x24, x21
   2bdc4:	b	2bdf8 <__asan_backtrace_qsort@@Base+0xe4>
   2bdc8:	mov	x21, #0x0                   	// #0
   2bdcc:	b	2bd9c <__asan_backtrace_qsort@@Base+0x88>
   2bdd0:	cbnz	x21, 2bd8c <__asan_backtrace_qsort@@Base+0x78>
   2bdd4:	mov	x3, x26
   2bdd8:	mov	x2, x22
   2bddc:	mov	x1, x21
   2bde0:	mov	x0, x23
   2bde4:	bl	2bd14 <__asan_backtrace_qsort@@Base>
   2bde8:	madd	x0, x21, x22, x22
   2bdec:	add	x23, x23, x0
   2bdf0:	sub	x24, x24, #0x1
   2bdf4:	sub	x24, x24, x21
   2bdf8:	cmp	x24, #0x1
   2bdfc:	b.ls	2be2c <__asan_backtrace_qsort@@Base+0x118>  // b.plast
   2be00:	lsr	x1, x24, #1
   2be04:	mov	x2, x22
   2be08:	madd	x1, x1, x22, x23
   2be0c:	mov	x0, x23
   2be10:	bl	2bcec <__asan_backtrace_close@@Base+0x4c>
   2be14:	cmp	x24, #0x1
   2be18:	b.ls	2bdc8 <__asan_backtrace_qsort@@Base+0xb4>  // b.plast
   2be1c:	add	x19, x23, x22
   2be20:	mov	x21, #0x0                   	// #0
   2be24:	mov	x20, #0x1                   	// #1
   2be28:	b	2bd68 <__asan_backtrace_qsort@@Base+0x54>
   2be2c:	ldp	x19, x20, [sp, #16]
   2be30:	ldp	x21, x22, [sp, #32]
   2be34:	ldp	x23, x24, [sp, #48]
   2be38:	ldp	x25, x26, [sp, #64]
   2be3c:	ldp	x29, x30, [sp], #80
   2be40:	ret

000000000002be44 <__asan_backtrace_create_state@@Base>:
   2be44:	stp	x29, x30, [sp, #-144]!
   2be48:	mov	x29, sp
   2be4c:	stp	x19, x20, [sp, #16]
   2be50:	stp	x21, x22, [sp, #32]
   2be54:	str	x23, [sp, #48]
   2be58:	mov	x23, x0
   2be5c:	mov	w22, w1
   2be60:	mov	x20, x2
   2be64:	mov	x21, x3
   2be68:	add	x19, sp, #0x48
   2be6c:	mov	x2, #0x48                  	// #72
   2be70:	mov	w1, #0x0                   	// #0
   2be74:	mov	x0, x19
   2be78:	bl	6860 <__asan_internal_memset@plt>
   2be7c:	str	x23, [sp, #72]
   2be80:	str	w22, [sp, #80]
   2be84:	mov	x3, x21
   2be88:	mov	x2, x20
   2be8c:	mov	x1, #0x48                  	// #72
   2be90:	mov	x0, x19
   2be94:	bl	68c0 <__asan_backtrace_alloc@plt>
   2be98:	cbz	x0, 2bec4 <__asan_backtrace_create_state@@Base+0x80>
   2be9c:	ldp	x2, x3, [sp, #72]
   2bea0:	stp	x2, x3, [x0]
   2bea4:	ldp	x2, x3, [sp, #88]
   2bea8:	stp	x2, x3, [x0, #16]
   2beac:	ldp	x2, x3, [sp, #104]
   2beb0:	stp	x2, x3, [x0, #32]
   2beb4:	ldp	x2, x3, [sp, #120]
   2beb8:	stp	x2, x3, [x0, #48]
   2bebc:	ldr	x1, [sp, #136]
   2bec0:	str	x1, [x0, #64]
   2bec4:	ldp	x19, x20, [sp, #16]
   2bec8:	ldp	x21, x22, [sp, #32]
   2becc:	ldr	x23, [sp, #48]
   2bed0:	ldp	x29, x30, [sp], #144
   2bed4:	ret
   2bed8:	sub	w0, w0, #0x1c
   2bedc:	cmp	w0, #0x34
   2bee0:	b.hi	2bf00 <__asan_backtrace_create_state@@Base+0xbc>  // b.pmore
   2bee4:	mov	x1, #0x1                   	// #1
   2bee8:	lsl	x0, x1, x0
   2beec:	mov	x1, #0x1f                  	// #31
   2bef0:	movk	x1, #0x1a, lsl #48
   2bef4:	tst	x0, x1
   2bef8:	cset	w0, ne  // ne = any
   2befc:	b	2bf04 <__asan_backtrace_create_state@@Base+0xc0>
   2bf00:	mov	w0, #0x0                   	// #0
   2bf04:	ret
   2bf08:	mov	x2, x0
   2bf0c:	ldr	w1, [x0, #40]
   2bf10:	ldr	w0, [x0, #44]
   2bf14:	cmp	w1, w0
   2bf18:	b.ge	2bf40 <__asan_backtrace_create_state@@Base+0xfc>  // b.tcont
   2bf1c:	sbfiz	x0, x1, #1, #32
   2bf20:	add	x1, x0, w1, sxtw
   2bf24:	ldr	x0, [x2, #32]
   2bf28:	add	x0, x0, x1, lsl #3
   2bf2c:	str	wzr, [x0, #4]
   2bf30:	ldr	w1, [x2, #40]
   2bf34:	add	w1, w1, #0x1
   2bf38:	str	w1, [x2, #40]
   2bf3c:	ret
   2bf40:	mov	x0, #0x0                   	// #0
   2bf44:	b	2bf3c <__asan_backtrace_create_state@@Base+0xf8>
   2bf48:	stp	x29, x30, [sp, #-48]!
   2bf4c:	mov	x29, sp
   2bf50:	stp	x19, x20, [sp, #16]
   2bf54:	mov	w19, w1
   2bf58:	sub	w1, w1, #0x1
   2bf5c:	cmp	w1, #0x4f
   2bf60:	b.hi	2bfdc <__asan_backtrace_create_state@@Base+0x198>  // b.pmore
   2bf64:	str	x21, [sp, #32]
   2bf68:	mov	x21, x2
   2bf6c:	mov	x20, x3
   2bf70:	adrp	x2, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2bf74:	add	x2, x2, #0x920
   2bf78:	ldrb	w1, [x2, w1, uxtw]
   2bf7c:	adr	x2, 2bf88 <__asan_backtrace_create_state@@Base+0x144>
   2bf80:	add	x1, x2, w1, sxtb #2
   2bf84:	br	x1
   2bf88:	cmp	x21, #0x0
   2bf8c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   2bf90:	b.ne	2bfa4 <__asan_backtrace_create_state@@Base+0x160>  // b.any
   2bf94:	mov	x0, #0x0                   	// #0
   2bf98:	ldr	x21, [sp, #32]
   2bf9c:	b	2bfbc <__asan_backtrace_create_state@@Base+0x178>
   2bfa0:	cbz	x21, 2bfe4 <__asan_backtrace_create_state@@Base+0x1a0>
   2bfa4:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   2bfa8:	cbz	x0, 2bff0 <__asan_backtrace_create_state@@Base+0x1ac>
   2bfac:	str	w19, [x0]
   2bfb0:	str	x21, [x0, #8]
   2bfb4:	str	x20, [x0, #16]
   2bfb8:	ldr	x21, [sp, #32]
   2bfbc:	ldp	x19, x20, [sp, #16]
   2bfc0:	ldp	x29, x30, [sp], #48
   2bfc4:	ret
   2bfc8:	cbnz	x3, 2bfa4 <__asan_backtrace_create_state@@Base+0x160>
   2bfcc:	mov	x0, x3
   2bfd0:	ldr	x21, [sp, #32]
   2bfd4:	b	2bfbc <__asan_backtrace_create_state@@Base+0x178>
   2bfd8:	ldr	x21, [sp, #32]
   2bfdc:	mov	x0, #0x0                   	// #0
   2bfe0:	b	2bfbc <__asan_backtrace_create_state@@Base+0x178>
   2bfe4:	mov	x0, x21
   2bfe8:	ldr	x21, [sp, #32]
   2bfec:	b	2bfbc <__asan_backtrace_create_state@@Base+0x178>
   2bff0:	ldr	x21, [sp, #32]
   2bff4:	b	2bfbc <__asan_backtrace_create_state@@Base+0x178>
   2bff8:	stp	x29, x30, [sp, #-32]!
   2bffc:	mov	x29, sp
   2c000:	str	x19, [sp, #16]
   2c004:	mov	x19, x1
   2c008:	cbz	x1, 2c02c <__asan_backtrace_create_state@@Base+0x1e8>
   2c00c:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   2c010:	cbz	x0, 2c020 <__asan_backtrace_create_state@@Base+0x1dc>
   2c014:	mov	w1, #0x27                  	// #39
   2c018:	str	w1, [x0]
   2c01c:	str	x19, [x0, #8]
   2c020:	ldr	x19, [sp, #16]
   2c024:	ldp	x29, x30, [sp], #32
   2c028:	ret
   2c02c:	mov	x0, x1
   2c030:	b	2c020 <__asan_backtrace_create_state@@Base+0x1dc>
   2c034:	cbz	x0, 2c088 <__asan_backtrace_create_state@@Base+0x244>
   2c038:	mov	x2, x0
   2c03c:	ldr	w1, [x0]
   2c040:	cmp	w1, #0x8
   2c044:	b.hi	2c07c <__asan_backtrace_create_state@@Base+0x238>  // b.pmore
   2c048:	cmp	w1, #0x6
   2c04c:	b.hi	2c090 <__asan_backtrace_create_state@@Base+0x24c>  // b.pmore
   2c050:	sub	w1, w1, #0x1
   2c054:	mov	w0, #0x0                   	// #0
   2c058:	cmp	w1, #0x1
   2c05c:	b.hi	2c078 <__asan_backtrace_create_state@@Base+0x234>  // b.pmore
   2c060:	stp	x29, x30, [sp, #-16]!
   2c064:	mov	x29, sp
   2c068:	ldr	x0, [x2, #16]
   2c06c:	bl	2c034 <__asan_backtrace_create_state@@Base+0x1f0>
   2c070:	ldp	x29, x30, [sp], #16
   2c074:	ret
   2c078:	ret
   2c07c:	cmp	w1, #0x35
   2c080:	cset	w0, eq  // eq = none
   2c084:	ret
   2c088:	mov	w0, #0x0                   	// #0
   2c08c:	ret
   2c090:	mov	w0, #0x1                   	// #1
   2c094:	ret
   2c098:	cbz	x0, 2c128 <__asan_backtrace_create_state@@Base+0x2e4>
   2c09c:	stp	x29, x30, [sp, #-16]!
   2c0a0:	mov	x29, sp
   2c0a4:	ldr	w1, [x0]
   2c0a8:	cmp	w1, #0x4
   2c0ac:	b.eq	2c108 <__asan_backtrace_create_state@@Base+0x2c4>  // b.none
   2c0b0:	b.ls	2c0e0 <__asan_backtrace_create_state@@Base+0x29c>  // b.plast
   2c0b4:	sub	w1, w1, #0x1c
   2c0b8:	cmp	w1, #0x34
   2c0bc:	b.hi	2c100 <__asan_backtrace_create_state@@Base+0x2bc>  // b.pmore
   2c0c0:	mov	x2, #0x1                   	// #1
   2c0c4:	lsl	x1, x2, x1
   2c0c8:	mov	x2, #0x1f                  	// #31
   2c0cc:	movk	x2, #0x1a, lsl #48
   2c0d0:	tst	x1, x2
   2c0d4:	b.ne	2c11c <__asan_backtrace_create_state@@Base+0x2d8>  // b.any
   2c0d8:	mov	w0, #0x0                   	// #0
   2c0dc:	b	2c0f8 <__asan_backtrace_create_state@@Base+0x2b4>
   2c0e0:	cmp	w1, #0x2
   2c0e4:	b.ne	2c0f4 <__asan_backtrace_create_state@@Base+0x2b0>  // b.any
   2c0e8:	ldr	x0, [x0, #16]
   2c0ec:	bl	2c098 <__asan_backtrace_create_state@@Base+0x254>
   2c0f0:	b	2c0f8 <__asan_backtrace_create_state@@Base+0x2b4>
   2c0f4:	mov	w0, #0x0                   	// #0
   2c0f8:	ldp	x29, x30, [sp], #16
   2c0fc:	ret
   2c100:	mov	w0, #0x0                   	// #0
   2c104:	b	2c0f8 <__asan_backtrace_create_state@@Base+0x2b4>
   2c108:	ldr	x0, [x0, #8]
   2c10c:	bl	2c034 <__asan_backtrace_create_state@@Base+0x1f0>
   2c110:	cmp	w0, #0x0
   2c114:	cset	w0, eq  // eq = none
   2c118:	b	2c0f8 <__asan_backtrace_create_state@@Base+0x2b4>
   2c11c:	ldr	x0, [x0, #8]
   2c120:	bl	2c098 <__asan_backtrace_create_state@@Base+0x254>
   2c124:	b	2c0f8 <__asan_backtrace_create_state@@Base+0x2b4>
   2c128:	mov	w0, #0x0                   	// #0
   2c12c:	ret
   2c130:	mov	x4, x0
   2c134:	ldr	x1, [x0, #24]
   2c138:	ldrb	w0, [x1]
   2c13c:	cmp	w0, #0x6e
   2c140:	b.eq	2c1c0 <__asan_backtrace_create_state@@Base+0x37c>  // b.none
   2c144:	sub	w1, w0, #0x30
   2c148:	and	w1, w1, #0xff
   2c14c:	cmp	w1, #0x9
   2c150:	b.hi	2c1f8 <__asan_backtrace_create_state@@Base+0x3b4>  // b.pmore
   2c154:	mov	w7, #0x0                   	// #0
   2c158:	mov	w3, w0
   2c15c:	mov	w0, #0x0                   	// #0
   2c160:	mov	w6, #0x7fffffff            	// #2147483647
   2c164:	mov	w5, #0x6667                	// #26215
   2c168:	movk	w5, #0x6666, lsl #16
   2c16c:	add	w0, w0, w0, lsl #2
   2c170:	add	w0, w3, w0, lsl #1
   2c174:	sub	w0, w0, #0x30
   2c178:	ldr	x1, [x4, #24]
   2c17c:	add	x2, x1, #0x1
   2c180:	str	x2, [x4, #24]
   2c184:	ldrb	w1, [x1, #1]
   2c188:	sub	w2, w1, #0x30
   2c18c:	and	w2, w2, #0xff
   2c190:	cmp	w2, #0x9
   2c194:	b.hi	2c1e4 <__asan_backtrace_create_state@@Base+0x3a0>  // b.pmore
   2c198:	mov	w3, w1
   2c19c:	sub	w1, w1, #0x30
   2c1a0:	sub	w1, w6, w1
   2c1a4:	smull	x2, w1, w5
   2c1a8:	asr	x2, x2, #34
   2c1ac:	sub	w1, w2, w1, asr #31
   2c1b0:	cmp	w1, w0
   2c1b4:	b.ge	2c16c <__asan_backtrace_create_state@@Base+0x328>  // b.tcont
   2c1b8:	mov	w0, #0xffffffff            	// #-1
   2c1bc:	ret
   2c1c0:	add	x0, x1, #0x1
   2c1c4:	str	x0, [x4, #24]
   2c1c8:	ldrb	w0, [x1, #1]
   2c1cc:	sub	w1, w0, #0x30
   2c1d0:	and	w1, w1, #0xff
   2c1d4:	cmp	w1, #0x9
   2c1d8:	b.hi	2c1f0 <__asan_backtrace_create_state@@Base+0x3ac>  // b.pmore
   2c1dc:	mov	w7, #0x1                   	// #1
   2c1e0:	b	2c158 <__asan_backtrace_create_state@@Base+0x314>
   2c1e4:	cbz	w7, 2c1bc <__asan_backtrace_create_state@@Base+0x378>
   2c1e8:	neg	w0, w0
   2c1ec:	b	2c1bc <__asan_backtrace_create_state@@Base+0x378>
   2c1f0:	mov	w0, #0x0                   	// #0
   2c1f4:	b	2c1e8 <__asan_backtrace_create_state@@Base+0x3a4>
   2c1f8:	mov	w0, #0x0                   	// #0
   2c1fc:	b	2c1bc <__asan_backtrace_create_state@@Base+0x378>
   2c200:	stp	x29, x30, [sp, #-32]!
   2c204:	mov	x29, sp
   2c208:	stp	x19, x20, [sp, #16]
   2c20c:	mov	x20, x0
   2c210:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   2c214:	mov	x19, x0
   2c218:	cbz	x0, 2c234 <__asan_backtrace_create_state@@Base+0x3f0>
   2c21c:	mov	w0, #0x42                  	// #66
   2c220:	str	w0, [x19]
   2c224:	mov	x0, x20
   2c228:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   2c22c:	sxtw	x0, w0
   2c230:	str	x0, [x19, #8]
   2c234:	mov	x0, x19
   2c238:	ldp	x19, x20, [sp, #16]
   2c23c:	ldp	x29, x30, [sp], #32
   2c240:	ret
   2c244:	stp	x29, x30, [sp, #-32]!
   2c248:	mov	x29, sp
   2c24c:	str	x19, [sp, #16]
   2c250:	mov	x19, x0
   2c254:	cbnz	w1, 2c274 <__asan_backtrace_create_state@@Base+0x430>
   2c258:	ldr	x2, [x0, #24]
   2c25c:	ldrb	w3, [x2]
   2c260:	mov	w0, w1
   2c264:	cbz	w3, 2c288 <__asan_backtrace_create_state@@Base+0x444>
   2c268:	add	x0, x2, #0x1
   2c26c:	str	x0, [x19, #24]
   2c270:	ldrb	w1, [x2]
   2c274:	cmp	w1, #0x68
   2c278:	b.eq	2c294 <__asan_backtrace_create_state@@Base+0x450>  // b.none
   2c27c:	mov	w0, #0x0                   	// #0
   2c280:	cmp	w1, #0x76
   2c284:	b.eq	2c2c0 <__asan_backtrace_create_state@@Base+0x47c>  // b.none
   2c288:	ldr	x19, [sp, #16]
   2c28c:	ldp	x29, x30, [sp], #32
   2c290:	ret
   2c294:	mov	x0, x19
   2c298:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   2c29c:	ldr	x1, [x19, #24]
   2c2a0:	ldrb	w2, [x1]
   2c2a4:	mov	w0, #0x0                   	// #0
   2c2a8:	cmp	w2, #0x5f
   2c2ac:	b.ne	2c288 <__asan_backtrace_create_state@@Base+0x444>  // b.any
   2c2b0:	add	x1, x1, #0x1
   2c2b4:	str	x1, [x19, #24]
   2c2b8:	mov	w0, #0x1                   	// #1
   2c2bc:	b	2c288 <__asan_backtrace_create_state@@Base+0x444>
   2c2c0:	mov	x0, x19
   2c2c4:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   2c2c8:	ldr	x1, [x19, #24]
   2c2cc:	ldrb	w2, [x1]
   2c2d0:	mov	w0, #0x0                   	// #0
   2c2d4:	cmp	w2, #0x5f
   2c2d8:	b.ne	2c288 <__asan_backtrace_create_state@@Base+0x444>  // b.any
   2c2dc:	add	x1, x1, #0x1
   2c2e0:	str	x1, [x19, #24]
   2c2e4:	mov	x0, x19
   2c2e8:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   2c2ec:	b	2c29c <__asan_backtrace_create_state@@Base+0x458>
   2c2f0:	ldr	x2, [x0, #24]
   2c2f4:	ldrb	w1, [x2]
   2c2f8:	cmp	w1, #0x72
   2c2fc:	mov	w0, #0x56                  	// #86
   2c300:	ccmp	w1, w0, #0x4, ne  // ne = any
   2c304:	mov	w0, #0x4b                  	// #75
   2c308:	ccmp	w1, w0, #0x4, ne  // ne = any
   2c30c:	mov	w0, #0x1                   	// #1
   2c310:	b.eq	2c320 <__asan_backtrace_create_state@@Base+0x4dc>  // b.none
   2c314:	mov	w0, #0x0                   	// #0
   2c318:	cmp	w1, #0x44
   2c31c:	b.eq	2c324 <__asan_backtrace_create_state@@Base+0x4e0>  // b.none
   2c320:	ret
   2c324:	ldrb	w0, [x2, #1]
   2c328:	and	w1, w0, #0xffffffdf
   2c32c:	and	w1, w1, #0xff
   2c330:	sub	w0, w0, #0x77
   2c334:	and	w0, w0, #0xff
   2c338:	cmp	w1, #0x4f
   2c33c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   2c340:	cset	w0, ls  // ls = plast
   2c344:	b	2c320 <__asan_backtrace_create_state@@Base+0x4dc>
   2c348:	mov	x2, x1
   2c34c:	ldr	x3, [x0, #24]
   2c350:	ldrb	w1, [x3]
   2c354:	cmp	w1, #0x52
   2c358:	mov	w4, #0x4f                  	// #79
   2c35c:	ccmp	w1, w4, #0x4, ne  // ne = any
   2c360:	b.ne	2c3ac <__asan_backtrace_create_state@@Base+0x568>  // b.any
   2c364:	stp	x29, x30, [sp, #-16]!
   2c368:	mov	x29, sp
   2c36c:	cmp	w1, #0x52
   2c370:	b.eq	2c39c <__asan_backtrace_create_state@@Base+0x558>  // b.none
   2c374:	ldr	w4, [x0, #72]
   2c378:	add	w4, w4, #0x3
   2c37c:	mov	w1, #0x20                  	// #32
   2c380:	str	w4, [x0, #72]
   2c384:	add	x3, x3, #0x1
   2c388:	str	x3, [x0, #24]
   2c38c:	mov	x3, #0x0                   	// #0
   2c390:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   2c394:	ldp	x29, x30, [sp], #16
   2c398:	ret
   2c39c:	ldr	w4, [x0, #72]
   2c3a0:	add	w4, w4, #0x2
   2c3a4:	mov	w1, #0x1f                  	// #31
   2c3a8:	b	2c380 <__asan_backtrace_create_state@@Base+0x53c>
   2c3ac:	mov	x0, x2
   2c3b0:	ret
   2c3b4:	stp	x29, x30, [sp, #-32]!
   2c3b8:	mov	x29, sp
   2c3bc:	str	x19, [sp, #16]
   2c3c0:	mov	x19, x0
   2c3c4:	ldr	x1, [x0, #24]
   2c3c8:	ldrb	w0, [x1]
   2c3cc:	cmp	w0, #0x5f
   2c3d0:	b.eq	2c410 <__asan_backtrace_create_state@@Base+0x5cc>  // b.none
   2c3d4:	cmp	w0, #0x6e
   2c3d8:	b.eq	2c418 <__asan_backtrace_create_state@@Base+0x5d4>  // b.none
   2c3dc:	mov	x0, x19
   2c3e0:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   2c3e4:	adds	w0, w0, #0x1
   2c3e8:	b.mi	2c420 <__asan_backtrace_create_state@@Base+0x5dc>  // b.first
   2c3ec:	ldr	x1, [x19, #24]
   2c3f0:	ldrb	w2, [x1]
   2c3f4:	cmp	w2, #0x5f
   2c3f8:	b.ne	2c428 <__asan_backtrace_create_state@@Base+0x5e4>  // b.any
   2c3fc:	add	x1, x1, #0x1
   2c400:	str	x1, [x19, #24]
   2c404:	ldr	x19, [sp, #16]
   2c408:	ldp	x29, x30, [sp], #32
   2c40c:	ret
   2c410:	mov	w0, #0x0                   	// #0
   2c414:	b	2c3fc <__asan_backtrace_create_state@@Base+0x5b8>
   2c418:	mov	w0, #0xffffffff            	// #-1
   2c41c:	b	2c404 <__asan_backtrace_create_state@@Base+0x5c0>
   2c420:	mov	w0, #0xffffffff            	// #-1
   2c424:	b	2c404 <__asan_backtrace_create_state@@Base+0x5c0>
   2c428:	mov	w0, #0xffffffff            	// #-1
   2c42c:	b	2c404 <__asan_backtrace_create_state@@Base+0x5c0>
   2c430:	stp	x29, x30, [sp, #-32]!
   2c434:	mov	x29, sp
   2c438:	stp	x19, x20, [sp, #16]
   2c43c:	mov	x19, x0
   2c440:	ldr	x0, [x0, #24]
   2c444:	ldrb	w1, [x0]
   2c448:	cmp	w1, #0x54
   2c44c:	b.ne	2c48c <__asan_backtrace_create_state@@Base+0x648>  // b.any
   2c450:	add	x0, x0, #0x1
   2c454:	str	x0, [x19, #24]
   2c458:	mov	x0, x19
   2c45c:	bl	2c3b4 <__asan_backtrace_create_state@@Base+0x570>
   2c460:	mov	w20, w0
   2c464:	mov	x0, #0x0                   	// #0
   2c468:	tbnz	w20, #31, 2c490 <__asan_backtrace_create_state@@Base+0x64c>
   2c46c:	mov	x0, x19
   2c470:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   2c474:	cbz	x0, 2c490 <__asan_backtrace_create_state@@Base+0x64c>
   2c478:	mov	w1, #0x5                   	// #5
   2c47c:	str	w1, [x0]
   2c480:	sxtw	x20, w20
   2c484:	str	x20, [x0, #8]
   2c488:	b	2c490 <__asan_backtrace_create_state@@Base+0x64c>
   2c48c:	mov	x0, #0x0                   	// #0
   2c490:	ldp	x19, x20, [sp, #16]
   2c494:	ldp	x29, x30, [sp], #32
   2c498:	ret
   2c49c:	ldr	x0, [x0, #8]
   2c4a0:	ldr	x0, [x0]
   2c4a4:	ldrb	w1, [x0, #1]
   2c4a8:	cmp	w1, #0x63
   2c4ac:	b.eq	2c4b8 <__asan_backtrace_create_state@@Base+0x674>  // b.none
   2c4b0:	mov	w0, #0x0                   	// #0
   2c4b4:	ret
   2c4b8:	ldrb	w0, [x0]
   2c4bc:	sub	w1, w0, #0x63
   2c4c0:	and	w1, w1, #0xff
   2c4c4:	sub	w0, w0, #0x72
   2c4c8:	and	w0, w0, #0xff
   2c4cc:	cmp	w1, #0x1
   2c4d0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
   2c4d4:	cset	w0, ls  // ls = plast
   2c4d8:	b	2c4b4 <__asan_backtrace_create_state@@Base+0x670>
   2c4dc:	stp	x29, x30, [sp, #-32]!
   2c4e0:	mov	x29, sp
   2c4e4:	stp	x19, x20, [sp, #16]
   2c4e8:	mov	x19, x0
   2c4ec:	ldr	x0, [x0, #24]
   2c4f0:	ldrb	w1, [x0]
   2c4f4:	cmp	w1, #0x5f
   2c4f8:	b.ne	2c56c <__asan_backtrace_create_state@@Base+0x728>  // b.any
   2c4fc:	add	x1, x0, #0x1
   2c500:	str	x1, [x19, #24]
   2c504:	ldrb	w1, [x0, #1]
   2c508:	mov	w20, #0x1                   	// #1
   2c50c:	cmp	w1, #0x5f
   2c510:	b.eq	2c55c <__asan_backtrace_create_state@@Base+0x718>  // b.none
   2c514:	mov	x0, x19
   2c518:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   2c51c:	mov	w1, w0
   2c520:	mov	w0, #0x0                   	// #0
   2c524:	tbnz	w1, #31, 2c570 <__asan_backtrace_create_state@@Base+0x72c>
   2c528:	cmp	w20, #0x1
   2c52c:	mov	w0, #0x1                   	// #1
   2c530:	ccmp	w1, #0x9, #0x4, gt
   2c534:	b.le	2c570 <__asan_backtrace_create_state@@Base+0x72c>
   2c538:	ldr	x1, [x19, #24]
   2c53c:	ldrb	w2, [x1]
   2c540:	mov	w0, #0x0                   	// #0
   2c544:	cmp	w2, #0x5f
   2c548:	b.ne	2c570 <__asan_backtrace_create_state@@Base+0x72c>  // b.any
   2c54c:	add	x1, x1, #0x1
   2c550:	str	x1, [x19, #24]
   2c554:	mov	w0, #0x1                   	// #1
   2c558:	b	2c570 <__asan_backtrace_create_state@@Base+0x72c>
   2c55c:	add	x0, x0, #0x2
   2c560:	str	x0, [x19, #24]
   2c564:	mov	w20, #0x2                   	// #2
   2c568:	b	2c514 <__asan_backtrace_create_state@@Base+0x6d0>
   2c56c:	mov	w0, #0x1                   	// #1
   2c570:	ldp	x19, x20, [sp, #16]
   2c574:	ldp	x29, x30, [sp], #32
   2c578:	ret
   2c57c:	mov	x2, x0
   2c580:	cbz	x1, 2c5b4 <__asan_backtrace_create_state@@Base+0x770>
   2c584:	ldr	w3, [x0, #56]
   2c588:	ldr	w4, [x0, #60]
   2c58c:	mov	w0, #0x0                   	// #0
   2c590:	cmp	w3, w4
   2c594:	b.ge	2c5b0 <__asan_backtrace_create_state@@Base+0x76c>  // b.tcont
   2c598:	ldr	x0, [x2, #48]
   2c59c:	str	x1, [x0, w3, sxtw #3]
   2c5a0:	ldr	w0, [x2, #56]
   2c5a4:	add	w0, w0, #0x1
   2c5a8:	str	w0, [x2, #56]
   2c5ac:	mov	w0, #0x1                   	// #1
   2c5b0:	ret
   2c5b4:	mov	w0, #0x0                   	// #0
   2c5b8:	b	2c5b0 <__asan_backtrace_create_state@@Base+0x76c>
   2c5bc:	cbz	x1, 2c6d0 <__asan_backtrace_create_state@@Base+0x88c>
   2c5c0:	stp	x29, x30, [sp, #-32]!
   2c5c4:	mov	x29, sp
   2c5c8:	stp	x19, x20, [sp, #16]
   2c5cc:	mov	x20, x0
   2c5d0:	mov	x19, x1
   2c5d4:	ldr	w1, [x1]
   2c5d8:	sub	w1, w1, #0x1
   2c5dc:	cmp	w1, #0x4f
   2c5e0:	b.hi	2c614 <__asan_backtrace_create_state@@Base+0x7d0>  // b.pmore
   2c5e4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2c5e8:	add	x0, x0, #0x970
   2c5ec:	ldrb	w0, [x0, w1, uxtw]
   2c5f0:	adr	x1, 2c5fc <__asan_backtrace_create_state@@Base+0x7b8>
   2c5f4:	add	x0, x1, w0, sxtb #2
   2c5f8:	br	x0
   2c5fc:	ldr	w0, [x20, #364]
   2c600:	add	w0, w0, #0x1
   2c604:	str	w0, [x20, #364]
   2c608:	ldr	w0, [x20, #308]
   2c60c:	cmp	w0, #0x800
   2c610:	b.le	2c640 <__asan_backtrace_create_state@@Base+0x7fc>
   2c614:	ldp	x19, x20, [sp, #16]
   2c618:	ldp	x29, x30, [sp], #32
   2c61c:	ret
   2c620:	ldr	x0, [x19, #8]
   2c624:	ldr	w0, [x0]
   2c628:	cmp	w0, #0x5
   2c62c:	b.ne	2c608 <__asan_backtrace_create_state@@Base+0x7c4>  // b.any
   2c630:	ldr	w0, [x20, #348]
   2c634:	add	w0, w0, #0x1
   2c638:	str	w0, [x20, #348]
   2c63c:	b	2c608 <__asan_backtrace_create_state@@Base+0x7c4>
   2c640:	add	w0, w0, #0x1
   2c644:	str	w0, [x20, #308]
   2c648:	ldr	x1, [x19, #8]
   2c64c:	mov	x0, x20
   2c650:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c654:	ldr	x1, [x19, #16]
   2c658:	mov	x0, x20
   2c65c:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c660:	ldr	w0, [x20, #308]
   2c664:	sub	w0, w0, #0x1
   2c668:	str	w0, [x20, #308]
   2c66c:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c670:	ldr	x1, [x19, #16]
   2c674:	mov	x0, x20
   2c678:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c67c:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c680:	ldr	x1, [x19, #16]
   2c684:	mov	x0, x20
   2c688:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c68c:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c690:	ldr	x1, [x19, #16]
   2c694:	mov	x0, x20
   2c698:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c69c:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c6a0:	ldr	x1, [x19, #8]
   2c6a4:	mov	x0, x20
   2c6a8:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c6ac:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c6b0:	ldr	x1, [x19, #8]
   2c6b4:	mov	x0, x20
   2c6b8:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c6bc:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c6c0:	ldr	x1, [x19, #8]
   2c6c4:	mov	x0, x20
   2c6c8:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   2c6cc:	b	2c614 <__asan_backtrace_create_state@@Base+0x7d0>
   2c6d0:	ret
   2c6d4:	cbz	x2, 2c770 <__asan_backtrace_create_state@@Base+0x92c>
   2c6d8:	stp	x29, x30, [sp, #-64]!
   2c6dc:	mov	x29, sp
   2c6e0:	stp	x19, x20, [sp, #16]
   2c6e4:	stp	x21, x22, [sp, #32]
   2c6e8:	str	x23, [sp, #48]
   2c6ec:	mov	x19, x0
   2c6f0:	mov	x20, x1
   2c6f4:	add	x22, x1, x2
   2c6f8:	mov	x23, #0xff                  	// #255
   2c6fc:	b	2c720 <__asan_backtrace_create_state@@Base+0x8dc>
   2c700:	ldr	x0, [x19, #256]
   2c704:	add	x1, x0, #0x1
   2c708:	str	x1, [x19, #256]
   2c70c:	strb	w21, [x19, x0]
   2c710:	strb	w21, [x19, #264]
   2c714:	add	x20, x20, #0x1
   2c718:	cmp	x20, x22
   2c71c:	b.eq	2c75c <__asan_backtrace_create_state@@Base+0x918>  // b.none
   2c720:	ldrb	w21, [x20]
   2c724:	ldr	x0, [x19, #256]
   2c728:	cmp	x0, #0xff
   2c72c:	b.ne	2c700 <__asan_backtrace_create_state@@Base+0x8bc>  // b.any
   2c730:	strb	wzr, [x19, #255]
   2c734:	ldr	x3, [x19, #272]
   2c738:	ldr	x2, [x19, #280]
   2c73c:	mov	x1, x23
   2c740:	mov	x0, x19
   2c744:	blr	x3
   2c748:	str	xzr, [x19, #256]
   2c74c:	ldr	x0, [x19, #320]
   2c750:	add	x0, x0, #0x1
   2c754:	str	x0, [x19, #320]
   2c758:	b	2c700 <__asan_backtrace_create_state@@Base+0x8bc>
   2c75c:	ldp	x19, x20, [sp, #16]
   2c760:	ldp	x21, x22, [sp, #32]
   2c764:	ldr	x23, [sp, #48]
   2c768:	ldp	x29, x30, [sp], #64
   2c76c:	ret
   2c770:	ret
   2c774:	tbnz	w1, #31, 2c7a0 <__asan_backtrace_create_state@@Base+0x95c>
   2c778:	cbz	x0, 2c7a0 <__asan_backtrace_create_state@@Base+0x95c>
   2c77c:	ldr	w2, [x0]
   2c780:	cmp	w2, #0x2f
   2c784:	b.ne	2c7a4 <__asan_backtrace_create_state@@Base+0x960>  // b.any
   2c788:	cbz	w1, 2c79c <__asan_backtrace_create_state@@Base+0x958>
   2c78c:	sub	w1, w1, #0x1
   2c790:	ldr	x0, [x0, #16]
   2c794:	cbnz	x0, 2c77c <__asan_backtrace_create_state@@Base+0x938>
   2c798:	b	2c7a0 <__asan_backtrace_create_state@@Base+0x95c>
   2c79c:	ldr	x0, [x0, #8]
   2c7a0:	ret
   2c7a4:	mov	x0, #0x0                   	// #0
   2c7a8:	b	2c7a0 <__asan_backtrace_create_state@@Base+0x95c>
   2c7ac:	mov	x2, x0
   2c7b0:	ldr	x0, [x0, #288]
   2c7b4:	cbz	x0, 2c7d8 <__asan_backtrace_create_state@@Base+0x994>
   2c7b8:	stp	x29, x30, [sp, #-16]!
   2c7bc:	mov	x29, sp
   2c7c0:	ldr	x0, [x0, #8]
   2c7c4:	ldr	w1, [x1, #8]
   2c7c8:	ldr	x0, [x0, #16]
   2c7cc:	bl	2c774 <__asan_backtrace_create_state@@Base+0x930>
   2c7d0:	ldp	x29, x30, [sp], #16
   2c7d4:	ret
   2c7d8:	mov	w1, #0x1                   	// #1
   2c7dc:	str	w1, [x2, #304]
   2c7e0:	ret
   2c7e4:	stp	x29, x30, [sp, #-32]!
   2c7e8:	mov	x29, sp
   2c7ec:	stp	x19, x20, [sp, #16]
   2c7f0:	mov	x19, x1
   2c7f4:	cbz	x1, 2c8bc <__asan_backtrace_create_state@@Base+0xa78>
   2c7f8:	mov	x20, x0
   2c7fc:	ldr	w2, [x1]
   2c800:	cmp	w2, #0x8
   2c804:	b.eq	2c890 <__asan_backtrace_create_state@@Base+0xa4c>  // b.none
   2c808:	b.hi	2c848 <__asan_backtrace_create_state@@Base+0xa04>  // b.pmore
   2c80c:	cmp	w2, #0x6
   2c810:	b.eq	2c8c4 <__asan_backtrace_create_state@@Base+0xa80>  // b.none
   2c814:	b.ls	2c824 <__asan_backtrace_create_state@@Base+0x9e0>  // b.plast
   2c818:	ldr	x1, [x1, #16]
   2c81c:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2c820:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c824:	cbz	w2, 2c8cc <__asan_backtrace_create_state@@Base+0xa88>
   2c828:	cmp	w2, #0x5
   2c82c:	b.ne	2c89c <__asan_backtrace_create_state@@Base+0xa58>  // b.any
   2c830:	bl	2c7ac <__asan_backtrace_create_state@@Base+0x968>
   2c834:	cbz	x0, 2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c838:	ldr	w1, [x0]
   2c83c:	cmp	w1, #0x2f
   2c840:	csel	x0, x0, xzr, eq  // eq = none
   2c844:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c848:	sub	w2, w2, #0x18
   2c84c:	cmp	w2, #0x34
   2c850:	b.hi	2c89c <__asan_backtrace_create_state@@Base+0xa58>  // b.pmore
   2c854:	mov	x1, #0x1                   	// #1
   2c858:	lsl	x2, x1, x2
   2c85c:	mov	x0, #0x8001                	// #32769
   2c860:	movk	x0, #0x410, lsl #16
   2c864:	movk	x0, #0xc600, lsl #32
   2c868:	movk	x0, #0x19, lsl #48
   2c86c:	tst	x2, x0
   2c870:	b.ne	2c8d4 <__asan_backtrace_create_state@@Base+0xa90>  // b.any
   2c874:	tbz	w2, #27, 2c89c <__asan_backtrace_create_state@@Base+0xa58>
   2c878:	ldr	x1, [x19, #16]
   2c87c:	mov	x0, x20
   2c880:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2c884:	ldp	x19, x20, [sp, #16]
   2c888:	ldp	x29, x30, [sp], #32
   2c88c:	ret
   2c890:	ldr	x1, [x1, #16]
   2c894:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2c898:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c89c:	ldr	x1, [x19, #8]
   2c8a0:	mov	x0, x20
   2c8a4:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2c8a8:	cbnz	x0, 2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c8ac:	ldr	x1, [x19, #16]
   2c8b0:	mov	x0, x20
   2c8b4:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2c8b8:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c8bc:	mov	x0, x1
   2c8c0:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c8c4:	mov	x0, #0x0                   	// #0
   2c8c8:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c8cc:	mov	x0, #0x0                   	// #0
   2c8d0:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c8d4:	mov	x0, #0x0                   	// #0
   2c8d8:	b	2c884 <__asan_backtrace_create_state@@Base+0xa40>
   2c8dc:	mov	x1, x0
   2c8e0:	mov	w0, #0x0                   	// #0
   2c8e4:	cbz	x1, 2c908 <__asan_backtrace_create_state@@Base+0xac4>
   2c8e8:	ldr	w2, [x1]
   2c8ec:	cmp	w2, #0x2f
   2c8f0:	b.ne	2c908 <__asan_backtrace_create_state@@Base+0xac4>  // b.any
   2c8f4:	ldr	x2, [x1, #8]
   2c8f8:	cbz	x2, 2c908 <__asan_backtrace_create_state@@Base+0xac4>
   2c8fc:	add	w0, w0, #0x1
   2c900:	ldr	x1, [x1, #16]
   2c904:	cbnz	x1, 2c8e8 <__asan_backtrace_create_state@@Base+0xaa4>
   2c908:	ret
   2c90c:	stp	x29, x30, [sp, #-48]!
   2c910:	mov	x29, sp
   2c914:	stp	x19, x20, [sp, #16]
   2c918:	stp	x21, x22, [sp, #32]
   2c91c:	mov	x22, x0
   2c920:	mov	x21, x1
   2c924:	mov	x19, x2
   2c928:	add	x2, x1, #0x1
   2c92c:	ldr	x3, [x19, #8]
   2c930:	add	x2, x2, x3
   2c934:	ldr	x20, [x19, #16]
   2c938:	cmp	x2, x20
   2c93c:	b.hi	2c98c <__asan_backtrace_create_state@@Base+0xb48>  // b.pmore
   2c940:	ldr	w0, [x19, #24]
   2c944:	cbnz	w0, 2c97c <__asan_backtrace_create_state@@Base+0xb38>
   2c948:	ldr	x3, [x19]
   2c94c:	ldr	x0, [x19, #8]
   2c950:	mov	x2, x21
   2c954:	mov	x1, x22
   2c958:	add	x0, x3, x0
   2c95c:	bl	67d0 <__asan_internal_memcpy@plt>
   2c960:	ldr	x0, [x19]
   2c964:	ldr	x1, [x19, #8]
   2c968:	add	x0, x0, x21
   2c96c:	strb	wzr, [x0, x1]
   2c970:	ldr	x1, [x19, #8]
   2c974:	add	x21, x1, x21
   2c978:	str	x21, [x19, #8]
   2c97c:	ldp	x19, x20, [sp, #16]
   2c980:	ldp	x21, x22, [sp, #32]
   2c984:	ldp	x29, x30, [sp], #48
   2c988:	ret
   2c98c:	ldr	w0, [x19, #24]
   2c990:	cbnz	w0, 2c97c <__asan_backtrace_create_state@@Base+0xb38>
   2c994:	cbnz	x20, 2c9a4 <__asan_backtrace_create_state@@Base+0xb60>
   2c998:	mov	x20, #0x2                   	// #2
   2c99c:	cmp	x2, x20
   2c9a0:	b.ls	2c9b0 <__asan_backtrace_create_state@@Base+0xb6c>  // b.plast
   2c9a4:	lsl	x20, x20, #1
   2c9a8:	cmp	x2, x20
   2c9ac:	b.hi	2c9a4 <__asan_backtrace_create_state@@Base+0xb60>  // b.pmore
   2c9b0:	mov	x1, x20
   2c9b4:	ldr	x0, [x19]
   2c9b8:	bl	6c40 <realloc@plt>
   2c9bc:	cbz	x0, 2c9cc <__asan_backtrace_create_state@@Base+0xb88>
   2c9c0:	str	x0, [x19]
   2c9c4:	str	x20, [x19, #16]
   2c9c8:	b	2c940 <__asan_backtrace_create_state@@Base+0xafc>
   2c9cc:	ldr	x0, [x19]
   2c9d0:	bl	66f0 <free@plt>
   2c9d4:	str	xzr, [x19]
   2c9d8:	str	xzr, [x19, #8]
   2c9dc:	str	xzr, [x19, #16]
   2c9e0:	mov	w0, #0x1                   	// #1
   2c9e4:	str	w0, [x19, #24]
   2c9e8:	b	2c97c <__asan_backtrace_create_state@@Base+0xb38>
   2c9ec:	stp	x29, x30, [sp, #-96]!
   2c9f0:	mov	x29, sp
   2c9f4:	stp	x19, x20, [sp, #16]
   2c9f8:	mov	x19, x0
   2c9fc:	add	x20, sp, #0x40
   2ca00:	mov	w2, w1
   2ca04:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2ca08:	add	x1, x1, #0x48
   2ca0c:	mov	x0, x20
   2ca10:	bl	6900 <sprintf@plt>
   2ca14:	mov	x0, x20
   2ca18:	bl	67e0 <__asan_internal_strlen@plt>
   2ca1c:	cbz	x0, 2ca9c <__asan_backtrace_create_state@@Base+0xc58>
   2ca20:	stp	x21, x22, [sp, #32]
   2ca24:	str	x23, [sp, #48]
   2ca28:	add	x21, sp, #0x40
   2ca2c:	add	x20, x0, x21
   2ca30:	mov	x23, #0xff                  	// #255
   2ca34:	b	2ca58 <__asan_backtrace_create_state@@Base+0xc14>
   2ca38:	ldr	x0, [x19, #256]
   2ca3c:	add	x1, x0, #0x1
   2ca40:	str	x1, [x19, #256]
   2ca44:	strb	w22, [x19, x0]
   2ca48:	strb	w22, [x19, #264]
   2ca4c:	add	x21, x21, #0x1
   2ca50:	cmp	x21, x20
   2ca54:	b.eq	2ca94 <__asan_backtrace_create_state@@Base+0xc50>  // b.none
   2ca58:	ldrb	w22, [x21]
   2ca5c:	ldr	x0, [x19, #256]
   2ca60:	cmp	x0, #0xff
   2ca64:	b.ne	2ca38 <__asan_backtrace_create_state@@Base+0xbf4>  // b.any
   2ca68:	strb	wzr, [x19, #255]
   2ca6c:	ldr	x3, [x19, #272]
   2ca70:	ldr	x2, [x19, #280]
   2ca74:	mov	x1, x23
   2ca78:	mov	x0, x19
   2ca7c:	blr	x3
   2ca80:	str	xzr, [x19, #256]
   2ca84:	ldr	x0, [x19, #320]
   2ca88:	add	x0, x0, #0x1
   2ca8c:	str	x0, [x19, #320]
   2ca90:	b	2ca38 <__asan_backtrace_create_state@@Base+0xbf4>
   2ca94:	ldp	x21, x22, [sp, #32]
   2ca98:	ldr	x23, [sp, #48]
   2ca9c:	ldp	x19, x20, [sp, #16]
   2caa0:	ldp	x29, x30, [sp], #96
   2caa4:	ret
   2caa8:	stp	x29, x30, [sp, #-256]!
   2caac:	mov	x29, sp
   2cab0:	stp	x19, x20, [sp, #16]
   2cab4:	mov	x19, x0
   2cab8:	cbz	x2, 2caf8 <__asan_backtrace_create_state@@Base+0xcb4>
   2cabc:	stp	x21, x22, [sp, #32]
   2cac0:	mov	w20, w1
   2cac4:	mov	x22, x2
   2cac8:	ldr	w21, [x0, #304]
   2cacc:	cbnz	w21, 30e2c <__asan_backtrace_create_state@@Base+0x4fe8>
   2cad0:	ldr	w0, [x2]
   2cad4:	cmp	w0, #0x50
   2cad8:	b.hi	30d44 <__asan_backtrace_create_state@@Base+0x4f00>  // b.pmore
   2cadc:	stp	x23, x24, [sp, #48]
   2cae0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2cae4:	add	x1, x1, #0x9c0
   2cae8:	ldrh	w1, [x1, w0, uxtw #1]
   2caec:	adr	x2, 2caf8 <__asan_backtrace_create_state@@Base+0xcb4>
   2caf0:	add	x1, x2, w1, sxth #2
   2caf4:	br	x1
   2caf8:	mov	w0, #0x1                   	// #1
   2cafc:	str	w0, [x19, #304]
   2cb00:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2cb04:	tbnz	w20, #2, 2cb8c <__asan_backtrace_create_state@@Base+0xd48>
   2cb08:	ldr	x1, [x22, #8]
   2cb0c:	ldrsw	x0, [x22, #16]
   2cb10:	cbz	x0, 30e3c <__asan_backtrace_create_state@@Base+0x4ff8>
   2cb14:	mov	x20, x1
   2cb18:	add	x22, x1, x0
   2cb1c:	mov	x23, #0xff                  	// #255
   2cb20:	b	2cb44 <__asan_backtrace_create_state@@Base+0xd00>
   2cb24:	ldr	x0, [x19, #256]
   2cb28:	add	x1, x0, #0x1
   2cb2c:	str	x1, [x19, #256]
   2cb30:	strb	w21, [x19, x0]
   2cb34:	strb	w21, [x19, #264]
   2cb38:	add	x20, x20, #0x1
   2cb3c:	cmp	x22, x20
   2cb40:	b.eq	2cb80 <__asan_backtrace_create_state@@Base+0xd3c>  // b.none
   2cb44:	ldrb	w21, [x20]
   2cb48:	ldr	x0, [x19, #256]
   2cb4c:	cmp	x0, #0xff
   2cb50:	b.ne	2cb24 <__asan_backtrace_create_state@@Base+0xce0>  // b.any
   2cb54:	strb	wzr, [x19, #255]
   2cb58:	ldr	x3, [x19, #272]
   2cb5c:	ldr	x2, [x19, #280]
   2cb60:	mov	x1, x23
   2cb64:	mov	x0, x19
   2cb68:	blr	x3
   2cb6c:	str	xzr, [x19, #256]
   2cb70:	ldr	x0, [x19, #320]
   2cb74:	add	x0, x0, #0x1
   2cb78:	str	x0, [x19, #320]
   2cb7c:	b	2cb24 <__asan_backtrace_create_state@@Base+0xce0>
   2cb80:	ldp	x21, x22, [sp, #32]
   2cb84:	ldp	x23, x24, [sp, #48]
   2cb88:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2cb8c:	ldr	x20, [x22, #8]
   2cb90:	ldrsw	x22, [x22, #16]
   2cb94:	add	x22, x20, x22
   2cb98:	cmp	x20, x22
   2cb9c:	b.cs	30e48 <__asan_backtrace_create_state@@Base+0x5004>  // b.hs, b.nlast
   2cba0:	mov	x23, #0xff                  	// #255
   2cba4:	mov	x24, #0x0                   	// #0
   2cba8:	b	2cc50 <__asan_backtrace_create_state@@Base+0xe0c>
   2cbac:	sub	w1, w0, #0x41
   2cbb0:	and	w1, w1, #0xff
   2cbb4:	cmp	w1, #0x5
   2cbb8:	b.hi	2cbf0 <__asan_backtrace_create_state@@Base+0xdac>  // b.pmore
   2cbbc:	sub	w0, w0, #0x37
   2cbc0:	sxtw	x0, w0
   2cbc4:	add	x2, x0, x2, lsl #4
   2cbc8:	add	x21, x21, #0x1
   2cbcc:	cmp	x22, x21
   2cbd0:	b.eq	2cc20 <__asan_backtrace_create_state@@Base+0xddc>  // b.none
   2cbd4:	ldrb	w0, [x21]
   2cbd8:	sub	w1, w0, #0x30
   2cbdc:	and	w1, w1, #0xff
   2cbe0:	cmp	w1, #0x9
   2cbe4:	b.hi	2cbac <__asan_backtrace_create_state@@Base+0xd68>  // b.pmore
   2cbe8:	sub	w0, w0, #0x30
   2cbec:	b	2cbc0 <__asan_backtrace_create_state@@Base+0xd7c>
   2cbf0:	sub	w1, w0, #0x61
   2cbf4:	and	w1, w1, #0xff
   2cbf8:	cmp	w1, #0x5
   2cbfc:	b.hi	2cc08 <__asan_backtrace_create_state@@Base+0xdc4>  // b.pmore
   2cc00:	sub	w0, w0, #0x57
   2cc04:	b	2cbc0 <__asan_backtrace_create_state@@Base+0xd7c>
   2cc08:	cmp	x22, x21
   2cc0c:	b.ls	2cc20 <__asan_backtrace_create_state@@Base+0xddc>  // b.plast
   2cc10:	ldrb	w0, [x21]
   2cc14:	cmp	w0, #0x5f
   2cc18:	ccmp	x2, x23, #0x2, eq  // eq = none
   2cc1c:	b.ls	2cc94 <__asan_backtrace_create_state@@Base+0xe50>  // b.plast
   2cc20:	ldrb	w21, [x20]
   2cc24:	ldr	x0, [x19, #256]
   2cc28:	cmp	x0, #0xff
   2cc2c:	b.eq	2ccec <__asan_backtrace_create_state@@Base+0xea8>  // b.none
   2cc30:	ldr	x0, [x19, #256]
   2cc34:	add	x1, x0, #0x1
   2cc38:	str	x1, [x19, #256]
   2cc3c:	strb	w21, [x19, x0]
   2cc40:	strb	w21, [x19, #264]
   2cc44:	add	x20, x20, #0x1
   2cc48:	cmp	x22, x20
   2cc4c:	b.ls	2cd18 <__asan_backtrace_create_state@@Base+0xed4>  // b.plast
   2cc50:	sub	x0, x22, x20
   2cc54:	cmp	x0, #0x3
   2cc58:	b.le	2cc20 <__asan_backtrace_create_state@@Base+0xddc>
   2cc5c:	ldrb	w0, [x20]
   2cc60:	cmp	w0, #0x5f
   2cc64:	b.ne	2cc20 <__asan_backtrace_create_state@@Base+0xddc>  // b.any
   2cc68:	ldrb	w0, [x20, #1]
   2cc6c:	cmp	w0, #0x5f
   2cc70:	b.ne	2cc20 <__asan_backtrace_create_state@@Base+0xddc>  // b.any
   2cc74:	ldrb	w0, [x20, #2]
   2cc78:	cmp	w0, #0x55
   2cc7c:	b.ne	2cc20 <__asan_backtrace_create_state@@Base+0xddc>  // b.any
   2cc80:	add	x21, x20, #0x3
   2cc84:	cmp	x22, x21
   2cc88:	b.ls	2cc20 <__asan_backtrace_create_state@@Base+0xddc>  // b.plast
   2cc8c:	mov	x2, x24
   2cc90:	b	2cbd4 <__asan_backtrace_create_state@@Base+0xd90>
   2cc94:	and	w20, w2, #0xff
   2cc98:	ldr	x0, [x19, #256]
   2cc9c:	cmp	x0, #0xff
   2cca0:	b.eq	2ccc0 <__asan_backtrace_create_state@@Base+0xe7c>  // b.none
   2cca4:	ldr	x0, [x19, #256]
   2cca8:	add	x1, x0, #0x1
   2ccac:	str	x1, [x19, #256]
   2ccb0:	strb	w20, [x19, x0]
   2ccb4:	strb	w20, [x19, #264]
   2ccb8:	mov	x20, x21
   2ccbc:	b	2cc44 <__asan_backtrace_create_state@@Base+0xe00>
   2ccc0:	strb	wzr, [x19, #255]
   2ccc4:	ldr	x3, [x19, #272]
   2ccc8:	ldr	x2, [x19, #280]
   2cccc:	mov	x1, x23
   2ccd0:	mov	x0, x19
   2ccd4:	blr	x3
   2ccd8:	str	xzr, [x19, #256]
   2ccdc:	ldr	x0, [x19, #320]
   2cce0:	add	x0, x0, #0x1
   2cce4:	str	x0, [x19, #320]
   2cce8:	b	2cca4 <__asan_backtrace_create_state@@Base+0xe60>
   2ccec:	strb	wzr, [x19, #255]
   2ccf0:	ldr	x3, [x19, #272]
   2ccf4:	ldr	x2, [x19, #280]
   2ccf8:	mov	x1, x23
   2ccfc:	mov	x0, x19
   2cd00:	blr	x3
   2cd04:	str	xzr, [x19, #256]
   2cd08:	ldr	x0, [x19, #320]
   2cd0c:	add	x0, x0, #0x1
   2cd10:	str	x0, [x19, #320]
   2cd14:	b	2cc30 <__asan_backtrace_create_state@@Base+0xdec>
   2cd18:	ldp	x21, x22, [sp, #32]
   2cd1c:	ldp	x23, x24, [sp, #48]
   2cd20:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2cd24:	ldr	x2, [x22, #8]
   2cd28:	mov	w1, w20
   2cd2c:	mov	x0, x19
   2cd30:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2cd34:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2cd38:	add	x0, x0, #0xb98
   2cd3c:	bl	67e0 <__asan_internal_strlen@plt>
   2cd40:	cbz	x0, 2cdbc <__asan_backtrace_create_state@@Base+0xf78>
   2cd44:	stp	x25, x26, [sp, #64]
   2cd48:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2cd4c:	add	x21, x21, #0xb98
   2cd50:	add	x24, x0, x21
   2cd54:	mov	x25, #0xff                  	// #255
   2cd58:	b	2cd7c <__asan_backtrace_create_state@@Base+0xf38>
   2cd5c:	ldr	x0, [x19, #256]
   2cd60:	add	x1, x0, #0x1
   2cd64:	str	x1, [x19, #256]
   2cd68:	strb	w23, [x19, x0]
   2cd6c:	strb	w23, [x19, #264]
   2cd70:	add	x21, x21, #0x1
   2cd74:	cmp	x21, x24
   2cd78:	b.eq	2cdb8 <__asan_backtrace_create_state@@Base+0xf74>  // b.none
   2cd7c:	ldrb	w23, [x21]
   2cd80:	ldr	x0, [x19, #256]
   2cd84:	cmp	x0, #0xff
   2cd88:	b.ne	2cd5c <__asan_backtrace_create_state@@Base+0xf18>  // b.any
   2cd8c:	strb	wzr, [x19, #255]
   2cd90:	ldr	x3, [x19, #272]
   2cd94:	ldr	x2, [x19, #280]
   2cd98:	mov	x1, x25
   2cd9c:	mov	x0, x19
   2cda0:	blr	x3
   2cda4:	str	xzr, [x19, #256]
   2cda8:	ldr	x0, [x19, #320]
   2cdac:	add	x0, x0, #0x1
   2cdb0:	str	x0, [x19, #320]
   2cdb4:	b	2cd5c <__asan_backtrace_create_state@@Base+0xf18>
   2cdb8:	ldp	x25, x26, [sp, #64]
   2cdbc:	ldr	x2, [x22, #16]
   2cdc0:	mov	w1, w20
   2cdc4:	mov	x0, x19
   2cdc8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2cdcc:	ldr	x0, [x19, #256]
   2cdd0:	cmp	x0, #0xff
   2cdd4:	b.eq	2cdfc <__asan_backtrace_create_state@@Base+0xfb8>  // b.none
   2cdd8:	ldr	x1, [x19, #256]
   2cddc:	add	x0, x1, #0x1
   2cde0:	str	x0, [x19, #256]
   2cde4:	mov	w0, #0x5d                  	// #93
   2cde8:	strb	w0, [x19, x1]
   2cdec:	strb	w0, [x19, #264]
   2cdf0:	ldp	x21, x22, [sp, #32]
   2cdf4:	ldp	x23, x24, [sp, #48]
   2cdf8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2cdfc:	strb	wzr, [x19, #255]
   2ce00:	ldr	x3, [x19, #272]
   2ce04:	ldr	x2, [x19, #280]
   2ce08:	mov	x1, #0xff                  	// #255
   2ce0c:	mov	x0, x19
   2ce10:	blr	x3
   2ce14:	str	xzr, [x19, #256]
   2ce18:	ldr	x0, [x19, #320]
   2ce1c:	add	x0, x0, #0x1
   2ce20:	str	x0, [x19, #320]
   2ce24:	b	2cdd8 <__asan_backtrace_create_state@@Base+0xf94>
   2ce28:	ldr	x2, [x22, #8]
   2ce2c:	mov	w1, w20
   2ce30:	mov	x0, x19
   2ce34:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2ce38:	tbz	w20, #2, 2ce8c <__asan_backtrace_create_state@@Base+0x1048>
   2ce3c:	ldr	x0, [x19, #256]
   2ce40:	cmp	x0, #0xff
   2ce44:	b.eq	2cf18 <__asan_backtrace_create_state@@Base+0x10d4>  // b.none
   2ce48:	ldr	x1, [x19, #256]
   2ce4c:	add	x0, x1, #0x1
   2ce50:	str	x0, [x19, #256]
   2ce54:	mov	w0, #0x2e                  	// #46
   2ce58:	strb	w0, [x19, x1]
   2ce5c:	strb	w0, [x19, #264]
   2ce60:	ldr	x23, [x22, #16]
   2ce64:	ldr	w0, [x23]
   2ce68:	cmp	w0, #0x47
   2ce6c:	b.eq	2cf44 <__asan_backtrace_create_state@@Base+0x1100>  // b.none
   2ce70:	mov	x2, x23
   2ce74:	mov	w1, w20
   2ce78:	mov	x0, x19
   2ce7c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2ce80:	ldp	x21, x22, [sp, #32]
   2ce84:	ldp	x23, x24, [sp, #48]
   2ce88:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ce8c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ce90:	add	x0, x0, #0xba0
   2ce94:	bl	67e0 <__asan_internal_strlen@plt>
   2ce98:	cbz	x0, 2ce60 <__asan_backtrace_create_state@@Base+0x101c>
   2ce9c:	stp	x25, x26, [sp, #64]
   2cea0:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2cea4:	add	x21, x21, #0xba0
   2cea8:	add	x24, x0, x21
   2ceac:	mov	x25, #0xff                  	// #255
   2ceb0:	b	2ced4 <__asan_backtrace_create_state@@Base+0x1090>
   2ceb4:	ldr	x0, [x19, #256]
   2ceb8:	add	x1, x0, #0x1
   2cebc:	str	x1, [x19, #256]
   2cec0:	strb	w23, [x19, x0]
   2cec4:	strb	w23, [x19, #264]
   2cec8:	add	x21, x21, #0x1
   2cecc:	cmp	x21, x24
   2ced0:	b.eq	2cf10 <__asan_backtrace_create_state@@Base+0x10cc>  // b.none
   2ced4:	ldrb	w23, [x21]
   2ced8:	ldr	x0, [x19, #256]
   2cedc:	cmp	x0, #0xff
   2cee0:	b.ne	2ceb4 <__asan_backtrace_create_state@@Base+0x1070>  // b.any
   2cee4:	strb	wzr, [x19, #255]
   2cee8:	ldr	x3, [x19, #272]
   2ceec:	ldr	x2, [x19, #280]
   2cef0:	mov	x1, x25
   2cef4:	mov	x0, x19
   2cef8:	blr	x3
   2cefc:	str	xzr, [x19, #256]
   2cf00:	ldr	x0, [x19, #320]
   2cf04:	add	x0, x0, #0x1
   2cf08:	str	x0, [x19, #320]
   2cf0c:	b	2ceb4 <__asan_backtrace_create_state@@Base+0x1070>
   2cf10:	ldp	x25, x26, [sp, #64]
   2cf14:	b	2ce60 <__asan_backtrace_create_state@@Base+0x101c>
   2cf18:	strb	wzr, [x19, #255]
   2cf1c:	ldr	x3, [x19, #272]
   2cf20:	ldr	x2, [x19, #280]
   2cf24:	mov	x1, #0xff                  	// #255
   2cf28:	mov	x0, x19
   2cf2c:	blr	x3
   2cf30:	str	xzr, [x19, #256]
   2cf34:	ldr	x0, [x19, #320]
   2cf38:	add	x0, x0, #0x1
   2cf3c:	str	x0, [x19, #320]
   2cf40:	b	2ce48 <__asan_backtrace_create_state@@Base+0x1004>
   2cf44:	stp	x25, x26, [sp, #64]
   2cf48:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2cf4c:	add	x0, x0, #0xba8
   2cf50:	bl	67e0 <__asan_internal_strlen@plt>
   2cf54:	cbz	x0, 2cfc8 <__asan_backtrace_create_state@@Base+0x1184>
   2cf58:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2cf5c:	add	x21, x21, #0xba8
   2cf60:	add	x24, x0, x21
   2cf64:	mov	x25, #0xff                  	// #255
   2cf68:	b	2cf8c <__asan_backtrace_create_state@@Base+0x1148>
   2cf6c:	ldr	x0, [x19, #256]
   2cf70:	add	x1, x0, #0x1
   2cf74:	str	x1, [x19, #256]
   2cf78:	strb	w22, [x19, x0]
   2cf7c:	strb	w22, [x19, #264]
   2cf80:	add	x21, x21, #0x1
   2cf84:	cmp	x24, x21
   2cf88:	b.eq	2cfc8 <__asan_backtrace_create_state@@Base+0x1184>  // b.none
   2cf8c:	ldrb	w22, [x21]
   2cf90:	ldr	x0, [x19, #256]
   2cf94:	cmp	x0, #0xff
   2cf98:	b.ne	2cf6c <__asan_backtrace_create_state@@Base+0x1128>  // b.any
   2cf9c:	strb	wzr, [x19, #255]
   2cfa0:	ldr	x3, [x19, #272]
   2cfa4:	ldr	x2, [x19, #280]
   2cfa8:	mov	x1, x25
   2cfac:	mov	x0, x19
   2cfb0:	blr	x3
   2cfb4:	str	xzr, [x19, #256]
   2cfb8:	ldr	x0, [x19, #320]
   2cfbc:	add	x0, x0, #0x1
   2cfc0:	str	x0, [x19, #320]
   2cfc4:	b	2cf6c <__asan_backtrace_create_state@@Base+0x1128>
   2cfc8:	ldr	w2, [x23, #16]
   2cfcc:	add	x21, sp, #0x80
   2cfd0:	add	w2, w2, #0x1
   2cfd4:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2cfd8:	add	x1, x1, #0x48
   2cfdc:	mov	x0, x21
   2cfe0:	bl	6900 <sprintf@plt>
   2cfe4:	mov	x0, x21
   2cfe8:	bl	67e0 <__asan_internal_strlen@plt>
   2cfec:	cbz	x0, 2d05c <__asan_backtrace_create_state@@Base+0x1218>
   2cff0:	add	x21, sp, #0x80
   2cff4:	add	x24, x0, x21
   2cff8:	mov	x25, #0xff                  	// #255
   2cffc:	b	2d020 <__asan_backtrace_create_state@@Base+0x11dc>
   2d000:	ldr	x0, [x19, #256]
   2d004:	add	x1, x0, #0x1
   2d008:	str	x1, [x19, #256]
   2d00c:	strb	w22, [x19, x0]
   2d010:	strb	w22, [x19, #264]
   2d014:	add	x21, x21, #0x1
   2d018:	cmp	x21, x24
   2d01c:	b.eq	2d05c <__asan_backtrace_create_state@@Base+0x1218>  // b.none
   2d020:	ldrb	w22, [x21]
   2d024:	ldr	x0, [x19, #256]
   2d028:	cmp	x0, #0xff
   2d02c:	b.ne	2d000 <__asan_backtrace_create_state@@Base+0x11bc>  // b.any
   2d030:	strb	wzr, [x19, #255]
   2d034:	ldr	x3, [x19, #272]
   2d038:	ldr	x2, [x19, #280]
   2d03c:	mov	x1, x25
   2d040:	mov	x0, x19
   2d044:	blr	x3
   2d048:	str	xzr, [x19, #256]
   2d04c:	ldr	x0, [x19, #320]
   2d050:	add	x0, x0, #0x1
   2d054:	str	x0, [x19, #320]
   2d058:	b	2d000 <__asan_backtrace_create_state@@Base+0x11bc>
   2d05c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d060:	add	x0, x0, #0xbb8
   2d064:	bl	67e0 <__asan_internal_strlen@plt>
   2d068:	cbz	x0, 2d0dc <__asan_backtrace_create_state@@Base+0x1298>
   2d06c:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d070:	add	x21, x21, #0xbb8
   2d074:	add	x24, x21, x0
   2d078:	mov	x25, #0xff                  	// #255
   2d07c:	b	2d0a0 <__asan_backtrace_create_state@@Base+0x125c>
   2d080:	ldr	x0, [x19, #256]
   2d084:	add	x1, x0, #0x1
   2d088:	str	x1, [x19, #256]
   2d08c:	strb	w22, [x19, x0]
   2d090:	strb	w22, [x19, #264]
   2d094:	add	x21, x21, #0x1
   2d098:	cmp	x21, x24
   2d09c:	b.eq	2d0dc <__asan_backtrace_create_state@@Base+0x1298>  // b.none
   2d0a0:	ldrb	w22, [x21]
   2d0a4:	ldr	x0, [x19, #256]
   2d0a8:	cmp	x0, #0xff
   2d0ac:	b.ne	2d080 <__asan_backtrace_create_state@@Base+0x123c>  // b.any
   2d0b0:	strb	wzr, [x19, #255]
   2d0b4:	ldr	x3, [x19, #272]
   2d0b8:	ldr	x2, [x19, #280]
   2d0bc:	mov	x1, x25
   2d0c0:	mov	x0, x19
   2d0c4:	blr	x3
   2d0c8:	str	xzr, [x19, #256]
   2d0cc:	ldr	x0, [x19, #320]
   2d0d0:	add	x0, x0, #0x1
   2d0d4:	str	x0, [x19, #320]
   2d0d8:	b	2d080 <__asan_backtrace_create_state@@Base+0x123c>
   2d0dc:	ldr	x23, [x23, #8]
   2d0e0:	ldp	x25, x26, [sp, #64]
   2d0e4:	b	2ce70 <__asan_backtrace_create_state@@Base+0x102c>
   2d0e8:	stp	x25, x26, [sp, #64]
   2d0ec:	ldr	x26, [x19, #296]
   2d0f0:	str	xzr, [x19, #296]
   2d0f4:	ldr	x21, [x22, #8]
   2d0f8:	cbz	x21, 2d16c <__asan_backtrace_create_state@@Base+0x1328>
   2d0fc:	stp	x27, x28, [sp, #80]
   2d100:	ldr	x24, [x19, #288]
   2d104:	add	x25, sp, #0x80
   2d108:	mov	w23, #0x0                   	// #0
   2d10c:	ldr	x0, [x19, #296]
   2d110:	str	x0, [x25]
   2d114:	str	x25, [x19, #296]
   2d118:	str	x21, [x25, #8]
   2d11c:	str	wzr, [x25, #16]
   2d120:	str	x24, [x25, #24]
   2d124:	add	w23, w23, #0x1
   2d128:	ldr	w27, [x21]
   2d12c:	mov	w0, w27
   2d130:	bl	2bed8 <__asan_backtrace_create_state@@Base+0x94>
   2d134:	cbz	w0, 30d54 <__asan_backtrace_create_state@@Base+0x4f10>
   2d138:	ldr	x21, [x21, #8]
   2d13c:	cbz	x21, 2d168 <__asan_backtrace_create_state@@Base+0x1324>
   2d140:	add	x25, x25, #0x20
   2d144:	cmp	w23, #0x4
   2d148:	b.ne	2d10c <__asan_backtrace_create_state@@Base+0x12c8>  // b.any
   2d14c:	mov	w0, #0x1                   	// #1
   2d150:	str	w0, [x19, #304]
   2d154:	ldp	x21, x22, [sp, #32]
   2d158:	ldp	x23, x24, [sp, #48]
   2d15c:	ldp	x25, x26, [sp, #64]
   2d160:	ldp	x27, x28, [sp, #80]
   2d164:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d168:	ldp	x27, x28, [sp, #80]
   2d16c:	mov	w0, #0x1                   	// #1
   2d170:	str	w0, [x19, #304]
   2d174:	ldp	x21, x22, [sp, #32]
   2d178:	ldp	x23, x24, [sp, #48]
   2d17c:	ldp	x25, x26, [sp, #64]
   2d180:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d184:	ldr	x21, [x21, #16]
   2d188:	ldr	w0, [x21]
   2d18c:	cmp	w0, #0x47
   2d190:	b.eq	2d214 <__asan_backtrace_create_state@@Base+0x13d0>  // b.none
   2d194:	ubfiz	x0, x23, #5, #32
   2d198:	add	x25, sp, #0x80
   2d19c:	add	x25, x25, x0
   2d1a0:	add	x28, sp, #0x80
   2d1a4:	add	x27, sp, #0x88
   2d1a8:	add	x0, sp, #0x90
   2d1ac:	str	x0, [sp, #96]
   2d1b0:	add	x0, sp, #0x98
   2d1b4:	str	x0, [sp, #104]
   2d1b8:	ldr	w0, [x21]
   2d1bc:	bl	2bed8 <__asan_backtrace_create_state@@Base+0x94>
   2d1c0:	cbz	w0, 30d5c <__asan_backtrace_create_state@@Base+0x4f18>
   2d1c4:	cmp	w23, #0x3
   2d1c8:	b.hi	2d238 <__asan_backtrace_create_state@@Base+0x13f4>  // b.pmore
   2d1cc:	sub	w0, w23, #0x1
   2d1d0:	lsl	x0, x0, #5
   2d1d4:	add	x1, x28, x0
   2d1d8:	ldp	x2, x3, [x1]
   2d1dc:	stp	x2, x3, [x25]
   2d1e0:	ldp	x2, x3, [x1, #16]
   2d1e4:	stp	x2, x3, [x25, #16]
   2d1e8:	str	x1, [x25]
   2d1ec:	str	x25, [x19, #296]
   2d1f0:	str	x21, [x27, x0]
   2d1f4:	ldr	x1, [sp, #96]
   2d1f8:	str	wzr, [x1, x0]
   2d1fc:	ldr	x1, [sp, #104]
   2d200:	str	x24, [x1, x0]
   2d204:	add	w23, w23, #0x1
   2d208:	ldr	x21, [x21, #8]
   2d20c:	add	x25, x25, #0x20
   2d210:	b	2d1b8 <__asan_backtrace_create_state@@Base+0x1374>
   2d214:	ldr	x21, [x21, #8]
   2d218:	cbnz	x21, 2d194 <__asan_backtrace_create_state@@Base+0x1350>
   2d21c:	mov	w0, #0x1                   	// #1
   2d220:	str	w0, [x19, #304]
   2d224:	ldp	x21, x22, [sp, #32]
   2d228:	ldp	x23, x24, [sp, #48]
   2d22c:	ldp	x25, x26, [sp, #64]
   2d230:	ldp	x27, x28, [sp, #80]
   2d234:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d238:	mov	w0, #0x1                   	// #1
   2d23c:	str	w0, [x19, #304]
   2d240:	ldp	x21, x22, [sp, #32]
   2d244:	ldp	x23, x24, [sp, #48]
   2d248:	ldp	x25, x26, [sp, #64]
   2d24c:	ldp	x27, x28, [sp, #80]
   2d250:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d254:	str	x24, [sp, #112]
   2d258:	add	x0, sp, #0x70
   2d25c:	str	x0, [x19, #288]
   2d260:	str	x21, [sp, #120]
   2d264:	b	30d68 <__asan_backtrace_create_state@@Base+0x4f24>
   2d268:	ldr	x0, [sp, #112]
   2d26c:	str	x0, [x19, #288]
   2d270:	b	30d84 <__asan_backtrace_create_state@@Base+0x4f40>
   2d274:	ldr	x0, [x19, #256]
   2d278:	add	x1, x0, #0x1
   2d27c:	str	x1, [x19, #256]
   2d280:	strb	w22, [x19, x0]
   2d284:	strb	w22, [x19, #264]
   2d288:	ldr	x2, [x24, #8]
   2d28c:	mov	w1, w20
   2d290:	mov	x0, x19
   2d294:	bl	30fc4 <__asan_backtrace_create_state@@Base+0x5180>
   2d298:	sub	x21, x21, #0x20
   2d29c:	cbz	w23, 2d2e8 <__asan_backtrace_create_state@@Base+0x14a4>
   2d2a0:	sub	w23, w23, #0x1
   2d2a4:	mov	x24, x21
   2d2a8:	ldr	w0, [x21, #16]
   2d2ac:	cbnz	w0, 2d298 <__asan_backtrace_create_state@@Base+0x1454>
   2d2b0:	ldr	x0, [x19, #256]
   2d2b4:	cmp	x0, #0xff
   2d2b8:	b.ne	2d274 <__asan_backtrace_create_state@@Base+0x1430>  // b.any
   2d2bc:	strb	wzr, [x19, #255]
   2d2c0:	ldr	x3, [x19, #272]
   2d2c4:	ldr	x2, [x19, #280]
   2d2c8:	mov	x1, x25
   2d2cc:	mov	x0, x19
   2d2d0:	blr	x3
   2d2d4:	str	xzr, [x19, #256]
   2d2d8:	ldr	x0, [x19, #320]
   2d2dc:	add	x0, x0, #0x1
   2d2e0:	str	x0, [x19, #320]
   2d2e4:	b	2d274 <__asan_backtrace_create_state@@Base+0x1430>
   2d2e8:	str	x26, [x19, #296]
   2d2ec:	ldp	x21, x22, [sp, #32]
   2d2f0:	ldp	x23, x24, [sp, #48]
   2d2f4:	ldp	x25, x26, [sp, #64]
   2d2f8:	ldp	x27, x28, [sp, #80]
   2d2fc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d300:	ldr	x23, [x19, #368]
   2d304:	str	x22, [x19, #368]
   2d308:	ldr	x24, [x19, #296]
   2d30c:	str	xzr, [x19, #296]
   2d310:	ldr	x21, [x22, #8]
   2d314:	tbz	w20, #2, 2d32c <__asan_backtrace_create_state@@Base+0x14e8>
   2d318:	ldr	w0, [x21]
   2d31c:	cbnz	w0, 2d32c <__asan_backtrace_create_state@@Base+0x14e8>
   2d320:	ldr	w0, [x21, #16]
   2d324:	cmp	w0, #0x6
   2d328:	b.eq	2d3c0 <__asan_backtrace_create_state@@Base+0x157c>  // b.none
   2d32c:	mov	x2, x21
   2d330:	mov	w1, w20
   2d334:	mov	x0, x19
   2d338:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d33c:	ldrb	w0, [x19, #264]
   2d340:	cmp	w0, #0x3c
   2d344:	b.eq	2d40c <__asan_backtrace_create_state@@Base+0x15c8>  // b.none
   2d348:	ldr	x0, [x19, #256]
   2d34c:	cmp	x0, #0xff
   2d350:	b.eq	2d460 <__asan_backtrace_create_state@@Base+0x161c>  // b.none
   2d354:	ldr	x1, [x19, #256]
   2d358:	add	x0, x1, #0x1
   2d35c:	str	x0, [x19, #256]
   2d360:	mov	w0, #0x3c                  	// #60
   2d364:	strb	w0, [x19, x1]
   2d368:	strb	w0, [x19, #264]
   2d36c:	ldr	x2, [x22, #16]
   2d370:	mov	w1, w20
   2d374:	mov	x0, x19
   2d378:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d37c:	ldrb	w0, [x19, #264]
   2d380:	cmp	w0, #0x3e
   2d384:	b.eq	2d48c <__asan_backtrace_create_state@@Base+0x1648>  // b.none
   2d388:	ldr	x0, [x19, #256]
   2d38c:	cmp	x0, #0xff
   2d390:	b.eq	2d4e0 <__asan_backtrace_create_state@@Base+0x169c>  // b.none
   2d394:	ldr	x1, [x19, #256]
   2d398:	add	x0, x1, #0x1
   2d39c:	str	x0, [x19, #256]
   2d3a0:	mov	w0, #0x3e                  	// #62
   2d3a4:	strb	w0, [x19, x1]
   2d3a8:	strb	w0, [x19, #264]
   2d3ac:	str	x24, [x19, #296]
   2d3b0:	str	x23, [x19, #368]
   2d3b4:	ldp	x21, x22, [sp, #32]
   2d3b8:	ldp	x23, x24, [sp, #48]
   2d3bc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d3c0:	mov	x2, #0x6                   	// #6
   2d3c4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d3c8:	add	x1, x1, #0xbc0
   2d3cc:	ldr	x0, [x21, #8]
   2d3d0:	bl	6b70 <__asan_internal_strncmp@plt>
   2d3d4:	cbnz	w0, 2d32c <__asan_backtrace_create_state@@Base+0x14e8>
   2d3d8:	ldr	x2, [x22, #16]
   2d3dc:	mov	w1, w20
   2d3e0:	mov	x0, x19
   2d3e4:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d3e8:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d3ec:	add	x20, x20, #0xbc8
   2d3f0:	mov	x0, x20
   2d3f4:	bl	67e0 <__asan_internal_strlen@plt>
   2d3f8:	mov	x2, x0
   2d3fc:	mov	x1, x20
   2d400:	mov	x0, x19
   2d404:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2d408:	b	2d3ac <__asan_backtrace_create_state@@Base+0x1568>
   2d40c:	ldr	x0, [x19, #256]
   2d410:	cmp	x0, #0xff
   2d414:	b.eq	2d434 <__asan_backtrace_create_state@@Base+0x15f0>  // b.none
   2d418:	ldr	x1, [x19, #256]
   2d41c:	add	x0, x1, #0x1
   2d420:	str	x0, [x19, #256]
   2d424:	mov	w0, #0x20                  	// #32
   2d428:	strb	w0, [x19, x1]
   2d42c:	strb	w0, [x19, #264]
   2d430:	b	2d348 <__asan_backtrace_create_state@@Base+0x1504>
   2d434:	strb	wzr, [x19, #255]
   2d438:	ldr	x3, [x19, #272]
   2d43c:	ldr	x2, [x19, #280]
   2d440:	mov	x1, #0xff                  	// #255
   2d444:	mov	x0, x19
   2d448:	blr	x3
   2d44c:	str	xzr, [x19, #256]
   2d450:	ldr	x0, [x19, #320]
   2d454:	add	x0, x0, #0x1
   2d458:	str	x0, [x19, #320]
   2d45c:	b	2d418 <__asan_backtrace_create_state@@Base+0x15d4>
   2d460:	strb	wzr, [x19, #255]
   2d464:	ldr	x3, [x19, #272]
   2d468:	ldr	x2, [x19, #280]
   2d46c:	mov	x1, #0xff                  	// #255
   2d470:	mov	x0, x19
   2d474:	blr	x3
   2d478:	str	xzr, [x19, #256]
   2d47c:	ldr	x0, [x19, #320]
   2d480:	add	x0, x0, #0x1
   2d484:	str	x0, [x19, #320]
   2d488:	b	2d354 <__asan_backtrace_create_state@@Base+0x1510>
   2d48c:	ldr	x0, [x19, #256]
   2d490:	cmp	x0, #0xff
   2d494:	b.eq	2d4b4 <__asan_backtrace_create_state@@Base+0x1670>  // b.none
   2d498:	ldr	x1, [x19, #256]
   2d49c:	add	x0, x1, #0x1
   2d4a0:	str	x0, [x19, #256]
   2d4a4:	mov	w0, #0x20                  	// #32
   2d4a8:	strb	w0, [x19, x1]
   2d4ac:	strb	w0, [x19, #264]
   2d4b0:	b	2d388 <__asan_backtrace_create_state@@Base+0x1544>
   2d4b4:	strb	wzr, [x19, #255]
   2d4b8:	ldr	x3, [x19, #272]
   2d4bc:	ldr	x2, [x19, #280]
   2d4c0:	mov	x1, #0xff                  	// #255
   2d4c4:	mov	x0, x19
   2d4c8:	blr	x3
   2d4cc:	str	xzr, [x19, #256]
   2d4d0:	ldr	x0, [x19, #320]
   2d4d4:	add	x0, x0, #0x1
   2d4d8:	str	x0, [x19, #320]
   2d4dc:	b	2d498 <__asan_backtrace_create_state@@Base+0x1654>
   2d4e0:	strb	wzr, [x19, #255]
   2d4e4:	ldr	x3, [x19, #272]
   2d4e8:	ldr	x2, [x19, #280]
   2d4ec:	mov	x1, #0xff                  	// #255
   2d4f0:	mov	x0, x19
   2d4f4:	blr	x3
   2d4f8:	str	xzr, [x19, #256]
   2d4fc:	ldr	x0, [x19, #320]
   2d500:	add	x0, x0, #0x1
   2d504:	str	x0, [x19, #320]
   2d508:	b	2d394 <__asan_backtrace_create_state@@Base+0x1550>
   2d50c:	ldr	w0, [x19, #312]
   2d510:	cbz	w0, 2d624 <__asan_backtrace_create_state@@Base+0x17e0>
   2d514:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d518:	add	x20, x20, #0xbd0
   2d51c:	add	x23, x20, #0x5
   2d520:	mov	x24, #0xff                  	// #255
   2d524:	b	2d548 <__asan_backtrace_create_state@@Base+0x1704>
   2d528:	ldr	x0, [x19, #256]
   2d52c:	add	x1, x0, #0x1
   2d530:	str	x1, [x19, #256]
   2d534:	strb	w21, [x19, x0]
   2d538:	strb	w21, [x19, #264]
   2d53c:	add	x20, x20, #0x1
   2d540:	cmp	x23, x20
   2d544:	b.eq	2d584 <__asan_backtrace_create_state@@Base+0x1740>  // b.none
   2d548:	ldrb	w21, [x20]
   2d54c:	ldr	x0, [x19, #256]
   2d550:	cmp	x0, #0xff
   2d554:	b.ne	2d528 <__asan_backtrace_create_state@@Base+0x16e4>  // b.any
   2d558:	strb	wzr, [x19, #255]
   2d55c:	ldr	x3, [x19, #272]
   2d560:	ldr	x2, [x19, #280]
   2d564:	mov	x1, x24
   2d568:	mov	x0, x19
   2d56c:	blr	x3
   2d570:	str	xzr, [x19, #256]
   2d574:	ldr	x0, [x19, #320]
   2d578:	add	x0, x0, #0x1
   2d57c:	str	x0, [x19, #320]
   2d580:	b	2d528 <__asan_backtrace_create_state@@Base+0x16e4>
   2d584:	ldr	x2, [x22, #8]
   2d588:	add	x20, sp, #0x80
   2d58c:	add	w2, w2, #0x1
   2d590:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   2d594:	add	x1, x1, #0x48
   2d598:	mov	x0, x20
   2d59c:	bl	6900 <sprintf@plt>
   2d5a0:	mov	x0, x20
   2d5a4:	bl	67e0 <__asan_internal_strlen@plt>
   2d5a8:	cbz	x0, 30e54 <__asan_backtrace_create_state@@Base+0x5010>
   2d5ac:	add	x20, sp, #0x80
   2d5b0:	add	x22, x0, x20
   2d5b4:	mov	x23, #0xff                  	// #255
   2d5b8:	b	2d5dc <__asan_backtrace_create_state@@Base+0x1798>
   2d5bc:	ldr	x0, [x19, #256]
   2d5c0:	add	x1, x0, #0x1
   2d5c4:	str	x1, [x19, #256]
   2d5c8:	strb	w21, [x19, x0]
   2d5cc:	strb	w21, [x19, #264]
   2d5d0:	add	x20, x20, #0x1
   2d5d4:	cmp	x22, x20
   2d5d8:	b.eq	2d618 <__asan_backtrace_create_state@@Base+0x17d4>  // b.none
   2d5dc:	ldrb	w21, [x20]
   2d5e0:	ldr	x0, [x19, #256]
   2d5e4:	cmp	x0, #0xff
   2d5e8:	b.ne	2d5bc <__asan_backtrace_create_state@@Base+0x1778>  // b.any
   2d5ec:	strb	wzr, [x19, #255]
   2d5f0:	ldr	x3, [x19, #272]
   2d5f4:	ldr	x2, [x19, #280]
   2d5f8:	mov	x1, x23
   2d5fc:	mov	x0, x19
   2d600:	blr	x3
   2d604:	str	xzr, [x19, #256]
   2d608:	ldr	x0, [x19, #320]
   2d60c:	add	x0, x0, #0x1
   2d610:	str	x0, [x19, #320]
   2d614:	b	2d5bc <__asan_backtrace_create_state@@Base+0x1778>
   2d618:	ldp	x21, x22, [sp, #32]
   2d61c:	ldp	x23, x24, [sp, #48]
   2d620:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d624:	mov	x1, x22
   2d628:	mov	x0, x19
   2d62c:	bl	2c7ac <__asan_backtrace_create_state@@Base+0x968>
   2d630:	cbz	x0, 2d678 <__asan_backtrace_create_state@@Base+0x1834>
   2d634:	ldr	w1, [x0]
   2d638:	cmp	w1, #0x2f
   2d63c:	b.eq	2d66c <__asan_backtrace_create_state@@Base+0x1828>  // b.none
   2d640:	ldr	x21, [x19, #288]
   2d644:	ldr	x1, [x21]
   2d648:	str	x1, [x19, #288]
   2d64c:	mov	x2, x0
   2d650:	mov	w1, w20
   2d654:	mov	x0, x19
   2d658:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d65c:	str	x21, [x19, #288]
   2d660:	ldp	x21, x22, [sp, #32]
   2d664:	ldp	x23, x24, [sp, #48]
   2d668:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d66c:	ldr	w1, [x19, #316]
   2d670:	bl	2c774 <__asan_backtrace_create_state@@Base+0x930>
   2d674:	cbnz	x0, 2d640 <__asan_backtrace_create_state@@Base+0x17fc>
   2d678:	mov	w0, #0x1                   	// #1
   2d67c:	str	w0, [x19, #304]
   2d680:	ldp	x21, x22, [sp, #32]
   2d684:	ldp	x23, x24, [sp, #48]
   2d688:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d68c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d690:	add	x0, x0, #0xbd8
   2d694:	bl	67e0 <__asan_internal_strlen@plt>
   2d698:	cbz	x0, 2d714 <__asan_backtrace_create_state@@Base+0x18d0>
   2d69c:	stp	x25, x26, [sp, #64]
   2d6a0:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d6a4:	add	x21, x21, #0xbd8
   2d6a8:	add	x24, x0, x21
   2d6ac:	mov	x25, #0xff                  	// #255
   2d6b0:	b	2d6d4 <__asan_backtrace_create_state@@Base+0x1890>
   2d6b4:	ldr	x0, [x19, #256]
   2d6b8:	add	x1, x0, #0x1
   2d6bc:	str	x1, [x19, #256]
   2d6c0:	strb	w23, [x19, x0]
   2d6c4:	strb	w23, [x19, #264]
   2d6c8:	add	x21, x21, #0x1
   2d6cc:	cmp	x21, x24
   2d6d0:	b.eq	2d710 <__asan_backtrace_create_state@@Base+0x18cc>  // b.none
   2d6d4:	ldrb	w23, [x21]
   2d6d8:	ldr	x0, [x19, #256]
   2d6dc:	cmp	x0, #0xff
   2d6e0:	b.ne	2d6b4 <__asan_backtrace_create_state@@Base+0x1870>  // b.any
   2d6e4:	strb	wzr, [x19, #255]
   2d6e8:	ldr	x3, [x19, #272]
   2d6ec:	ldr	x2, [x19, #280]
   2d6f0:	mov	x1, x25
   2d6f4:	mov	x0, x19
   2d6f8:	blr	x3
   2d6fc:	str	xzr, [x19, #256]
   2d700:	ldr	x0, [x19, #320]
   2d704:	add	x0, x0, #0x1
   2d708:	str	x0, [x19, #320]
   2d70c:	b	2d6b4 <__asan_backtrace_create_state@@Base+0x1870>
   2d710:	ldp	x25, x26, [sp, #64]
   2d714:	ldr	x2, [x22, #8]
   2d718:	mov	w1, w20
   2d71c:	mov	x0, x19
   2d720:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d724:	ldp	x21, x22, [sp, #32]
   2d728:	ldp	x23, x24, [sp, #48]
   2d72c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d730:	ldr	x2, [x22, #16]
   2d734:	mov	w1, w20
   2d738:	mov	x0, x19
   2d73c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d740:	ldp	x21, x22, [sp, #32]
   2d744:	ldp	x23, x24, [sp, #48]
   2d748:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d74c:	ldr	x0, [x19, #256]
   2d750:	cmp	x0, #0xff
   2d754:	b.eq	2d78c <__asan_backtrace_create_state@@Base+0x1948>  // b.none
   2d758:	ldr	x1, [x19, #256]
   2d75c:	add	x0, x1, #0x1
   2d760:	str	x0, [x19, #256]
   2d764:	mov	w0, #0x7e                  	// #126
   2d768:	strb	w0, [x19, x1]
   2d76c:	strb	w0, [x19, #264]
   2d770:	ldr	x2, [x22, #16]
   2d774:	mov	w1, w20
   2d778:	mov	x0, x19
   2d77c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d780:	ldp	x21, x22, [sp, #32]
   2d784:	ldp	x23, x24, [sp, #48]
   2d788:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d78c:	strb	wzr, [x19, #255]
   2d790:	ldr	x3, [x19, #272]
   2d794:	ldr	x2, [x19, #280]
   2d798:	mov	x1, #0xff                  	// #255
   2d79c:	mov	x0, x19
   2d7a0:	blr	x3
   2d7a4:	str	xzr, [x19, #256]
   2d7a8:	ldr	x0, [x19, #320]
   2d7ac:	add	x0, x0, #0x1
   2d7b0:	str	x0, [x19, #320]
   2d7b4:	b	2d758 <__asan_backtrace_create_state@@Base+0x1914>
   2d7b8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d7bc:	add	x0, x0, #0xbf8
   2d7c0:	bl	67e0 <__asan_internal_strlen@plt>
   2d7c4:	cbz	x0, 2d840 <__asan_backtrace_create_state@@Base+0x19fc>
   2d7c8:	stp	x25, x26, [sp, #64]
   2d7cc:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d7d0:	add	x21, x21, #0xbf8
   2d7d4:	add	x24, x0, x21
   2d7d8:	mov	x25, #0xff                  	// #255
   2d7dc:	b	2d800 <__asan_backtrace_create_state@@Base+0x19bc>
   2d7e0:	ldr	x0, [x19, #256]
   2d7e4:	add	x1, x0, #0x1
   2d7e8:	str	x1, [x19, #256]
   2d7ec:	strb	w23, [x19, x0]
   2d7f0:	strb	w23, [x19, #264]
   2d7f4:	add	x21, x21, #0x1
   2d7f8:	cmp	x24, x21
   2d7fc:	b.eq	2d83c <__asan_backtrace_create_state@@Base+0x19f8>  // b.none
   2d800:	ldrb	w23, [x21]
   2d804:	ldr	x0, [x19, #256]
   2d808:	cmp	x0, #0xff
   2d80c:	b.ne	2d7e0 <__asan_backtrace_create_state@@Base+0x199c>  // b.any
   2d810:	strb	wzr, [x19, #255]
   2d814:	ldr	x3, [x19, #272]
   2d818:	ldr	x2, [x19, #280]
   2d81c:	mov	x1, x25
   2d820:	mov	x0, x19
   2d824:	blr	x3
   2d828:	str	xzr, [x19, #256]
   2d82c:	ldr	x0, [x19, #320]
   2d830:	add	x0, x0, #0x1
   2d834:	str	x0, [x19, #320]
   2d838:	b	2d7e0 <__asan_backtrace_create_state@@Base+0x199c>
   2d83c:	ldp	x25, x26, [sp, #64]
   2d840:	ldr	x2, [x22, #8]
   2d844:	mov	w1, w20
   2d848:	mov	x0, x19
   2d84c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d850:	ldp	x21, x22, [sp, #32]
   2d854:	ldp	x23, x24, [sp, #48]
   2d858:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d85c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d860:	add	x0, x0, #0xc08
   2d864:	bl	67e0 <__asan_internal_strlen@plt>
   2d868:	cbz	x0, 2d8e4 <__asan_backtrace_create_state@@Base+0x1aa0>
   2d86c:	stp	x25, x26, [sp, #64]
   2d870:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d874:	add	x21, x21, #0xc08
   2d878:	add	x24, x0, x21
   2d87c:	mov	x25, #0xff                  	// #255
   2d880:	b	2d8a4 <__asan_backtrace_create_state@@Base+0x1a60>
   2d884:	ldr	x0, [x19, #256]
   2d888:	add	x1, x0, #0x1
   2d88c:	str	x1, [x19, #256]
   2d890:	strb	w23, [x19, x0]
   2d894:	strb	w23, [x19, #264]
   2d898:	add	x21, x21, #0x1
   2d89c:	cmp	x21, x24
   2d8a0:	b.eq	2d8e0 <__asan_backtrace_create_state@@Base+0x1a9c>  // b.none
   2d8a4:	ldrb	w23, [x21]
   2d8a8:	ldr	x0, [x19, #256]
   2d8ac:	cmp	x0, #0xff
   2d8b0:	b.ne	2d884 <__asan_backtrace_create_state@@Base+0x1a40>  // b.any
   2d8b4:	strb	wzr, [x19, #255]
   2d8b8:	ldr	x3, [x19, #272]
   2d8bc:	ldr	x2, [x19, #280]
   2d8c0:	mov	x1, x25
   2d8c4:	mov	x0, x19
   2d8c8:	blr	x3
   2d8cc:	str	xzr, [x19, #256]
   2d8d0:	ldr	x0, [x19, #320]
   2d8d4:	add	x0, x0, #0x1
   2d8d8:	str	x0, [x19, #320]
   2d8dc:	b	2d884 <__asan_backtrace_create_state@@Base+0x1a40>
   2d8e0:	ldp	x25, x26, [sp, #64]
   2d8e4:	ldr	x2, [x22, #8]
   2d8e8:	mov	w1, w20
   2d8ec:	mov	x0, x19
   2d8f0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d8f4:	ldp	x21, x22, [sp, #32]
   2d8f8:	ldp	x23, x24, [sp, #48]
   2d8fc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2d900:	stp	x25, x26, [sp, #64]
   2d904:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d908:	add	x0, x0, #0xc18
   2d90c:	bl	67e0 <__asan_internal_strlen@plt>
   2d910:	cbz	x0, 2d984 <__asan_backtrace_create_state@@Base+0x1b40>
   2d914:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d918:	add	x21, x21, #0xc18
   2d91c:	add	x24, x0, x21
   2d920:	mov	x25, #0xff                  	// #255
   2d924:	b	2d948 <__asan_backtrace_create_state@@Base+0x1b04>
   2d928:	ldr	x0, [x19, #256]
   2d92c:	add	x1, x0, #0x1
   2d930:	str	x1, [x19, #256]
   2d934:	strb	w23, [x19, x0]
   2d938:	strb	w23, [x19, #264]
   2d93c:	add	x21, x21, #0x1
   2d940:	cmp	x21, x24
   2d944:	b.eq	2d984 <__asan_backtrace_create_state@@Base+0x1b40>  // b.none
   2d948:	ldrb	w23, [x21]
   2d94c:	ldr	x0, [x19, #256]
   2d950:	cmp	x0, #0xff
   2d954:	b.ne	2d928 <__asan_backtrace_create_state@@Base+0x1ae4>  // b.any
   2d958:	strb	wzr, [x19, #255]
   2d95c:	ldr	x3, [x19, #272]
   2d960:	ldr	x2, [x19, #280]
   2d964:	mov	x1, x25
   2d968:	mov	x0, x19
   2d96c:	blr	x3
   2d970:	str	xzr, [x19, #256]
   2d974:	ldr	x0, [x19, #320]
   2d978:	add	x0, x0, #0x1
   2d97c:	str	x0, [x19, #320]
   2d980:	b	2d928 <__asan_backtrace_create_state@@Base+0x1ae4>
   2d984:	ldr	x2, [x22, #8]
   2d988:	mov	w1, w20
   2d98c:	mov	x0, x19
   2d990:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2d994:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d998:	add	x0, x0, #0xc38
   2d99c:	bl	67e0 <__asan_internal_strlen@plt>
   2d9a0:	cbz	x0, 2da14 <__asan_backtrace_create_state@@Base+0x1bd0>
   2d9a4:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2d9a8:	add	x21, x21, #0xc38
   2d9ac:	add	x24, x0, x21
   2d9b0:	mov	x25, #0xff                  	// #255
   2d9b4:	b	2d9d8 <__asan_backtrace_create_state@@Base+0x1b94>
   2d9b8:	ldr	x0, [x19, #256]
   2d9bc:	add	x1, x0, #0x1
   2d9c0:	str	x1, [x19, #256]
   2d9c4:	strb	w23, [x19, x0]
   2d9c8:	strb	w23, [x19, #264]
   2d9cc:	add	x21, x21, #0x1
   2d9d0:	cmp	x21, x24
   2d9d4:	b.eq	2da14 <__asan_backtrace_create_state@@Base+0x1bd0>  // b.none
   2d9d8:	ldrb	w23, [x21]
   2d9dc:	ldr	x0, [x19, #256]
   2d9e0:	cmp	x0, #0xff
   2d9e4:	b.ne	2d9b8 <__asan_backtrace_create_state@@Base+0x1b74>  // b.any
   2d9e8:	strb	wzr, [x19, #255]
   2d9ec:	ldr	x3, [x19, #272]
   2d9f0:	ldr	x2, [x19, #280]
   2d9f4:	mov	x1, x25
   2d9f8:	mov	x0, x19
   2d9fc:	blr	x3
   2da00:	str	xzr, [x19, #256]
   2da04:	ldr	x0, [x19, #320]
   2da08:	add	x0, x0, #0x1
   2da0c:	str	x0, [x19, #320]
   2da10:	b	2d9b8 <__asan_backtrace_create_state@@Base+0x1b74>
   2da14:	ldr	x2, [x22, #16]
   2da18:	mov	w1, w20
   2da1c:	mov	x0, x19
   2da20:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2da24:	ldp	x21, x22, [sp, #32]
   2da28:	ldp	x23, x24, [sp, #48]
   2da2c:	ldp	x25, x26, [sp, #64]
   2da30:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2da34:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2da38:	add	x0, x0, #0xc40
   2da3c:	bl	67e0 <__asan_internal_strlen@plt>
   2da40:	cbz	x0, 2dabc <__asan_backtrace_create_state@@Base+0x1c78>
   2da44:	stp	x25, x26, [sp, #64]
   2da48:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2da4c:	add	x21, x21, #0xc40
   2da50:	add	x24, x0, x21
   2da54:	mov	x25, #0xff                  	// #255
   2da58:	b	2da7c <__asan_backtrace_create_state@@Base+0x1c38>
   2da5c:	ldr	x0, [x19, #256]
   2da60:	add	x1, x0, #0x1
   2da64:	str	x1, [x19, #256]
   2da68:	strb	w23, [x19, x0]
   2da6c:	strb	w23, [x19, #264]
   2da70:	add	x21, x21, #0x1
   2da74:	cmp	x21, x24
   2da78:	b.eq	2dab8 <__asan_backtrace_create_state@@Base+0x1c74>  // b.none
   2da7c:	ldrb	w23, [x21]
   2da80:	ldr	x0, [x19, #256]
   2da84:	cmp	x0, #0xff
   2da88:	b.ne	2da5c <__asan_backtrace_create_state@@Base+0x1c18>  // b.any
   2da8c:	strb	wzr, [x19, #255]
   2da90:	ldr	x3, [x19, #272]
   2da94:	ldr	x2, [x19, #280]
   2da98:	mov	x1, x25
   2da9c:	mov	x0, x19
   2daa0:	blr	x3
   2daa4:	str	xzr, [x19, #256]
   2daa8:	ldr	x0, [x19, #320]
   2daac:	add	x0, x0, #0x1
   2dab0:	str	x0, [x19, #320]
   2dab4:	b	2da5c <__asan_backtrace_create_state@@Base+0x1c18>
   2dab8:	ldp	x25, x26, [sp, #64]
   2dabc:	ldr	x2, [x22, #8]
   2dac0:	mov	w1, w20
   2dac4:	mov	x0, x19
   2dac8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2dacc:	ldp	x21, x22, [sp, #32]
   2dad0:	ldp	x23, x24, [sp, #48]
   2dad4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2dad8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dadc:	add	x0, x0, #0xc50
   2dae0:	bl	67e0 <__asan_internal_strlen@plt>
   2dae4:	cbz	x0, 2db60 <__asan_backtrace_create_state@@Base+0x1d1c>
   2dae8:	stp	x25, x26, [sp, #64]
   2daec:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2daf0:	add	x21, x21, #0xc50
   2daf4:	add	x24, x0, x21
   2daf8:	mov	x25, #0xff                  	// #255
   2dafc:	b	2db20 <__asan_backtrace_create_state@@Base+0x1cdc>
   2db00:	ldr	x0, [x19, #256]
   2db04:	add	x1, x0, #0x1
   2db08:	str	x1, [x19, #256]
   2db0c:	strb	w23, [x19, x0]
   2db10:	strb	w23, [x19, #264]
   2db14:	add	x21, x21, #0x1
   2db18:	cmp	x21, x24
   2db1c:	b.eq	2db5c <__asan_backtrace_create_state@@Base+0x1d18>  // b.none
   2db20:	ldrb	w23, [x21]
   2db24:	ldr	x0, [x19, #256]
   2db28:	cmp	x0, #0xff
   2db2c:	b.ne	2db00 <__asan_backtrace_create_state@@Base+0x1cbc>  // b.any
   2db30:	strb	wzr, [x19, #255]
   2db34:	ldr	x3, [x19, #272]
   2db38:	ldr	x2, [x19, #280]
   2db3c:	mov	x1, x25
   2db40:	mov	x0, x19
   2db44:	blr	x3
   2db48:	str	xzr, [x19, #256]
   2db4c:	ldr	x0, [x19, #320]
   2db50:	add	x0, x0, #0x1
   2db54:	str	x0, [x19, #320]
   2db58:	b	2db00 <__asan_backtrace_create_state@@Base+0x1cbc>
   2db5c:	ldp	x25, x26, [sp, #64]
   2db60:	ldr	x2, [x22, #8]
   2db64:	mov	w1, w20
   2db68:	mov	x0, x19
   2db6c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2db70:	ldp	x21, x22, [sp, #32]
   2db74:	ldp	x23, x24, [sp, #48]
   2db78:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2db7c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2db80:	add	x0, x0, #0xc68
   2db84:	bl	67e0 <__asan_internal_strlen@plt>
   2db88:	cbz	x0, 2dc04 <__asan_backtrace_create_state@@Base+0x1dc0>
   2db8c:	stp	x25, x26, [sp, #64]
   2db90:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2db94:	add	x21, x21, #0xc68
   2db98:	add	x24, x0, x21
   2db9c:	mov	x25, #0xff                  	// #255
   2dba0:	b	2dbc4 <__asan_backtrace_create_state@@Base+0x1d80>
   2dba4:	ldr	x0, [x19, #256]
   2dba8:	add	x1, x0, #0x1
   2dbac:	str	x1, [x19, #256]
   2dbb0:	strb	w23, [x19, x0]
   2dbb4:	strb	w23, [x19, #264]
   2dbb8:	add	x21, x21, #0x1
   2dbbc:	cmp	x21, x24
   2dbc0:	b.eq	2dc00 <__asan_backtrace_create_state@@Base+0x1dbc>  // b.none
   2dbc4:	ldrb	w23, [x21]
   2dbc8:	ldr	x0, [x19, #256]
   2dbcc:	cmp	x0, #0xff
   2dbd0:	b.ne	2dba4 <__asan_backtrace_create_state@@Base+0x1d60>  // b.any
   2dbd4:	strb	wzr, [x19, #255]
   2dbd8:	ldr	x3, [x19, #272]
   2dbdc:	ldr	x2, [x19, #280]
   2dbe0:	mov	x1, x25
   2dbe4:	mov	x0, x19
   2dbe8:	blr	x3
   2dbec:	str	xzr, [x19, #256]
   2dbf0:	ldr	x0, [x19, #320]
   2dbf4:	add	x0, x0, #0x1
   2dbf8:	str	x0, [x19, #320]
   2dbfc:	b	2dba4 <__asan_backtrace_create_state@@Base+0x1d60>
   2dc00:	ldp	x25, x26, [sp, #64]
   2dc04:	ldr	x2, [x22, #8]
   2dc08:	mov	w1, w20
   2dc0c:	mov	x0, x19
   2dc10:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2dc14:	ldp	x21, x22, [sp, #32]
   2dc18:	ldp	x23, x24, [sp, #48]
   2dc1c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2dc20:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dc24:	add	x0, x0, #0xc80
   2dc28:	bl	67e0 <__asan_internal_strlen@plt>
   2dc2c:	cbz	x0, 2dca8 <__asan_backtrace_create_state@@Base+0x1e64>
   2dc30:	stp	x25, x26, [sp, #64]
   2dc34:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dc38:	add	x21, x21, #0xc80
   2dc3c:	add	x24, x0, x21
   2dc40:	mov	x25, #0xff                  	// #255
   2dc44:	b	2dc68 <__asan_backtrace_create_state@@Base+0x1e24>
   2dc48:	ldr	x0, [x19, #256]
   2dc4c:	add	x1, x0, #0x1
   2dc50:	str	x1, [x19, #256]
   2dc54:	strb	w23, [x19, x0]
   2dc58:	strb	w23, [x19, #264]
   2dc5c:	add	x21, x21, #0x1
   2dc60:	cmp	x24, x21
   2dc64:	b.eq	2dca4 <__asan_backtrace_create_state@@Base+0x1e60>  // b.none
   2dc68:	ldrb	w23, [x21]
   2dc6c:	ldr	x0, [x19, #256]
   2dc70:	cmp	x0, #0xff
   2dc74:	b.ne	2dc48 <__asan_backtrace_create_state@@Base+0x1e04>  // b.any
   2dc78:	strb	wzr, [x19, #255]
   2dc7c:	ldr	x3, [x19, #272]
   2dc80:	ldr	x2, [x19, #280]
   2dc84:	mov	x1, x25
   2dc88:	mov	x0, x19
   2dc8c:	blr	x3
   2dc90:	str	xzr, [x19, #256]
   2dc94:	ldr	x0, [x19, #320]
   2dc98:	add	x0, x0, #0x1
   2dc9c:	str	x0, [x19, #320]
   2dca0:	b	2dc48 <__asan_backtrace_create_state@@Base+0x1e04>
   2dca4:	ldp	x25, x26, [sp, #64]
   2dca8:	ldr	x2, [x22, #8]
   2dcac:	mov	w1, w20
   2dcb0:	mov	x0, x19
   2dcb4:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2dcb8:	ldp	x21, x22, [sp, #32]
   2dcbc:	ldp	x23, x24, [sp, #48]
   2dcc0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2dcc4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dcc8:	add	x0, x0, #0xc98
   2dccc:	bl	67e0 <__asan_internal_strlen@plt>
   2dcd0:	cbz	x0, 2dd4c <__asan_backtrace_create_state@@Base+0x1f08>
   2dcd4:	stp	x25, x26, [sp, #64]
   2dcd8:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dcdc:	add	x21, x21, #0xc98
   2dce0:	add	x24, x21, x0
   2dce4:	mov	x25, #0xff                  	// #255
   2dce8:	b	2dd0c <__asan_backtrace_create_state@@Base+0x1ec8>
   2dcec:	ldr	x0, [x19, #256]
   2dcf0:	add	x1, x0, #0x1
   2dcf4:	str	x1, [x19, #256]
   2dcf8:	strb	w23, [x19, x0]
   2dcfc:	strb	w23, [x19, #264]
   2dd00:	add	x21, x21, #0x1
   2dd04:	cmp	x24, x21
   2dd08:	b.eq	2dd48 <__asan_backtrace_create_state@@Base+0x1f04>  // b.none
   2dd0c:	ldrb	w23, [x21]
   2dd10:	ldr	x0, [x19, #256]
   2dd14:	cmp	x0, #0xff
   2dd18:	b.ne	2dcec <__asan_backtrace_create_state@@Base+0x1ea8>  // b.any
   2dd1c:	strb	wzr, [x19, #255]
   2dd20:	ldr	x3, [x19, #272]
   2dd24:	ldr	x2, [x19, #280]
   2dd28:	mov	x1, x25
   2dd2c:	mov	x0, x19
   2dd30:	blr	x3
   2dd34:	str	xzr, [x19, #256]
   2dd38:	ldr	x0, [x19, #320]
   2dd3c:	add	x0, x0, #0x1
   2dd40:	str	x0, [x19, #320]
   2dd44:	b	2dcec <__asan_backtrace_create_state@@Base+0x1ea8>
   2dd48:	ldp	x25, x26, [sp, #64]
   2dd4c:	ldr	x2, [x22, #8]
   2dd50:	mov	w1, w20
   2dd54:	mov	x0, x19
   2dd58:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2dd5c:	ldp	x21, x22, [sp, #32]
   2dd60:	ldp	x23, x24, [sp, #48]
   2dd64:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2dd68:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dd6c:	add	x0, x0, #0xcb0
   2dd70:	bl	67e0 <__asan_internal_strlen@plt>
   2dd74:	cbz	x0, 2ddf0 <__asan_backtrace_create_state@@Base+0x1fac>
   2dd78:	stp	x25, x26, [sp, #64]
   2dd7c:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dd80:	add	x21, x21, #0xcb0
   2dd84:	add	x24, x0, x21
   2dd88:	mov	x25, #0xff                  	// #255
   2dd8c:	b	2ddb0 <__asan_backtrace_create_state@@Base+0x1f6c>
   2dd90:	ldr	x0, [x19, #256]
   2dd94:	add	x1, x0, #0x1
   2dd98:	str	x1, [x19, #256]
   2dd9c:	strb	w23, [x19, x0]
   2dda0:	strb	w23, [x19, #264]
   2dda4:	add	x21, x21, #0x1
   2dda8:	cmp	x21, x24
   2ddac:	b.eq	2ddec <__asan_backtrace_create_state@@Base+0x1fa8>  // b.none
   2ddb0:	ldrb	w23, [x21]
   2ddb4:	ldr	x0, [x19, #256]
   2ddb8:	cmp	x0, #0xff
   2ddbc:	b.ne	2dd90 <__asan_backtrace_create_state@@Base+0x1f4c>  // b.any
   2ddc0:	strb	wzr, [x19, #255]
   2ddc4:	ldr	x3, [x19, #272]
   2ddc8:	ldr	x2, [x19, #280]
   2ddcc:	mov	x1, x25
   2ddd0:	mov	x0, x19
   2ddd4:	blr	x3
   2ddd8:	str	xzr, [x19, #256]
   2dddc:	ldr	x0, [x19, #320]
   2dde0:	add	x0, x0, #0x1
   2dde4:	str	x0, [x19, #320]
   2dde8:	b	2dd90 <__asan_backtrace_create_state@@Base+0x1f4c>
   2ddec:	ldp	x25, x26, [sp, #64]
   2ddf0:	ldr	x2, [x22, #8]
   2ddf4:	mov	w1, w20
   2ddf8:	mov	x0, x19
   2ddfc:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2de00:	ldp	x21, x22, [sp, #32]
   2de04:	ldp	x23, x24, [sp, #48]
   2de08:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2de0c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2de10:	add	x0, x0, #0xcd0
   2de14:	bl	67e0 <__asan_internal_strlen@plt>
   2de18:	cbz	x0, 2de94 <__asan_backtrace_create_state@@Base+0x2050>
   2de1c:	stp	x25, x26, [sp, #64]
   2de20:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2de24:	add	x21, x21, #0xcd0
   2de28:	add	x24, x0, x21
   2de2c:	mov	x25, #0xff                  	// #255
   2de30:	b	2de54 <__asan_backtrace_create_state@@Base+0x2010>
   2de34:	ldr	x0, [x19, #256]
   2de38:	add	x1, x0, #0x1
   2de3c:	str	x1, [x19, #256]
   2de40:	strb	w23, [x19, x0]
   2de44:	strb	w23, [x19, #264]
   2de48:	add	x21, x21, #0x1
   2de4c:	cmp	x21, x24
   2de50:	b.eq	2de90 <__asan_backtrace_create_state@@Base+0x204c>  // b.none
   2de54:	ldrb	w23, [x21]
   2de58:	ldr	x0, [x19, #256]
   2de5c:	cmp	x0, #0xff
   2de60:	b.ne	2de34 <__asan_backtrace_create_state@@Base+0x1ff0>  // b.any
   2de64:	strb	wzr, [x19, #255]
   2de68:	ldr	x3, [x19, #272]
   2de6c:	ldr	x2, [x19, #280]
   2de70:	mov	x1, x25
   2de74:	mov	x0, x19
   2de78:	blr	x3
   2de7c:	str	xzr, [x19, #256]
   2de80:	ldr	x0, [x19, #320]
   2de84:	add	x0, x0, #0x1
   2de88:	str	x0, [x19, #320]
   2de8c:	b	2de34 <__asan_backtrace_create_state@@Base+0x1ff0>
   2de90:	ldp	x25, x26, [sp, #64]
   2de94:	ldr	x2, [x22, #8]
   2de98:	mov	w1, w20
   2de9c:	mov	x0, x19
   2dea0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2dea4:	ldp	x21, x22, [sp, #32]
   2dea8:	ldp	x23, x24, [sp, #48]
   2deac:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2deb0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2deb4:	add	x0, x0, #0xce0
   2deb8:	bl	67e0 <__asan_internal_strlen@plt>
   2debc:	cbz	x0, 2df38 <__asan_backtrace_create_state@@Base+0x20f4>
   2dec0:	stp	x25, x26, [sp, #64]
   2dec4:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dec8:	add	x21, x21, #0xce0
   2decc:	add	x24, x0, x21
   2ded0:	mov	x25, #0xff                  	// #255
   2ded4:	b	2def8 <__asan_backtrace_create_state@@Base+0x20b4>
   2ded8:	ldr	x0, [x19, #256]
   2dedc:	add	x1, x0, #0x1
   2dee0:	str	x1, [x19, #256]
   2dee4:	strb	w23, [x19, x0]
   2dee8:	strb	w23, [x19, #264]
   2deec:	add	x21, x21, #0x1
   2def0:	cmp	x21, x24
   2def4:	b.eq	2df34 <__asan_backtrace_create_state@@Base+0x20f0>  // b.none
   2def8:	ldrb	w23, [x21]
   2defc:	ldr	x0, [x19, #256]
   2df00:	cmp	x0, #0xff
   2df04:	b.ne	2ded8 <__asan_backtrace_create_state@@Base+0x2094>  // b.any
   2df08:	strb	wzr, [x19, #255]
   2df0c:	ldr	x3, [x19, #272]
   2df10:	ldr	x2, [x19, #280]
   2df14:	mov	x1, x25
   2df18:	mov	x0, x19
   2df1c:	blr	x3
   2df20:	str	xzr, [x19, #256]
   2df24:	ldr	x0, [x19, #320]
   2df28:	add	x0, x0, #0x1
   2df2c:	str	x0, [x19, #320]
   2df30:	b	2ded8 <__asan_backtrace_create_state@@Base+0x2094>
   2df34:	ldp	x25, x26, [sp, #64]
   2df38:	ldr	x2, [x22, #8]
   2df3c:	mov	w1, w20
   2df40:	mov	x0, x19
   2df44:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2df48:	ldp	x21, x22, [sp, #32]
   2df4c:	ldp	x23, x24, [sp, #48]
   2df50:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2df54:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2df58:	add	x0, x0, #0xcf8
   2df5c:	bl	67e0 <__asan_internal_strlen@plt>
   2df60:	cbz	x0, 2dfdc <__asan_backtrace_create_state@@Base+0x2198>
   2df64:	stp	x25, x26, [sp, #64]
   2df68:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2df6c:	add	x21, x21, #0xcf8
   2df70:	add	x24, x0, x21
   2df74:	mov	x25, #0xff                  	// #255
   2df78:	b	2df9c <__asan_backtrace_create_state@@Base+0x2158>
   2df7c:	ldr	x0, [x19, #256]
   2df80:	add	x1, x0, #0x1
   2df84:	str	x1, [x19, #256]
   2df88:	strb	w23, [x19, x0]
   2df8c:	strb	w23, [x19, #264]
   2df90:	add	x21, x21, #0x1
   2df94:	cmp	x24, x21
   2df98:	b.eq	2dfd8 <__asan_backtrace_create_state@@Base+0x2194>  // b.none
   2df9c:	ldrb	w23, [x21]
   2dfa0:	ldr	x0, [x19, #256]
   2dfa4:	cmp	x0, #0xff
   2dfa8:	b.ne	2df7c <__asan_backtrace_create_state@@Base+0x2138>  // b.any
   2dfac:	strb	wzr, [x19, #255]
   2dfb0:	ldr	x3, [x19, #272]
   2dfb4:	ldr	x2, [x19, #280]
   2dfb8:	mov	x1, x25
   2dfbc:	mov	x0, x19
   2dfc0:	blr	x3
   2dfc4:	str	xzr, [x19, #256]
   2dfc8:	ldr	x0, [x19, #320]
   2dfcc:	add	x0, x0, #0x1
   2dfd0:	str	x0, [x19, #320]
   2dfd4:	b	2df7c <__asan_backtrace_create_state@@Base+0x2138>
   2dfd8:	ldp	x25, x26, [sp, #64]
   2dfdc:	ldr	x2, [x22, #8]
   2dfe0:	mov	w1, w20
   2dfe4:	mov	x0, x19
   2dfe8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2dfec:	ldp	x21, x22, [sp, #32]
   2dff0:	ldp	x23, x24, [sp, #48]
   2dff4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2dff8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2dffc:	add	x0, x0, #0xd10
   2e000:	bl	67e0 <__asan_internal_strlen@plt>
   2e004:	cbz	x0, 2e080 <__asan_backtrace_create_state@@Base+0x223c>
   2e008:	stp	x25, x26, [sp, #64]
   2e00c:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e010:	add	x21, x21, #0xd10
   2e014:	add	x24, x0, x21
   2e018:	mov	x25, #0xff                  	// #255
   2e01c:	b	2e040 <__asan_backtrace_create_state@@Base+0x21fc>
   2e020:	ldr	x0, [x19, #256]
   2e024:	add	x1, x0, #0x1
   2e028:	str	x1, [x19, #256]
   2e02c:	strb	w23, [x19, x0]
   2e030:	strb	w23, [x19, #264]
   2e034:	add	x21, x21, #0x1
   2e038:	cmp	x21, x24
   2e03c:	b.eq	2e07c <__asan_backtrace_create_state@@Base+0x2238>  // b.none
   2e040:	ldrb	w23, [x21]
   2e044:	ldr	x0, [x19, #256]
   2e048:	cmp	x0, #0xff
   2e04c:	b.ne	2e020 <__asan_backtrace_create_state@@Base+0x21dc>  // b.any
   2e050:	strb	wzr, [x19, #255]
   2e054:	ldr	x3, [x19, #272]
   2e058:	ldr	x2, [x19, #280]
   2e05c:	mov	x1, x25
   2e060:	mov	x0, x19
   2e064:	blr	x3
   2e068:	str	xzr, [x19, #256]
   2e06c:	ldr	x0, [x19, #320]
   2e070:	add	x0, x0, #0x1
   2e074:	str	x0, [x19, #320]
   2e078:	b	2e020 <__asan_backtrace_create_state@@Base+0x21dc>
   2e07c:	ldp	x25, x26, [sp, #64]
   2e080:	ldr	x2, [x22, #8]
   2e084:	mov	w1, w20
   2e088:	mov	x0, x19
   2e08c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e090:	ldp	x21, x22, [sp, #32]
   2e094:	ldp	x23, x24, [sp, #48]
   2e098:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e09c:	stp	x25, x26, [sp, #64]
   2e0a0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e0a4:	add	x0, x0, #0xd30
   2e0a8:	bl	67e0 <__asan_internal_strlen@plt>
   2e0ac:	cbz	x0, 2e120 <__asan_backtrace_create_state@@Base+0x22dc>
   2e0b0:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e0b4:	add	x21, x21, #0xd30
   2e0b8:	add	x24, x0, x21
   2e0bc:	mov	x25, #0xff                  	// #255
   2e0c0:	b	2e0e4 <__asan_backtrace_create_state@@Base+0x22a0>
   2e0c4:	ldr	x0, [x19, #256]
   2e0c8:	add	x1, x0, #0x1
   2e0cc:	str	x1, [x19, #256]
   2e0d0:	strb	w23, [x19, x0]
   2e0d4:	strb	w23, [x19, #264]
   2e0d8:	add	x21, x21, #0x1
   2e0dc:	cmp	x24, x21
   2e0e0:	b.eq	2e120 <__asan_backtrace_create_state@@Base+0x22dc>  // b.none
   2e0e4:	ldrb	w23, [x21]
   2e0e8:	ldr	x0, [x19, #256]
   2e0ec:	cmp	x0, #0xff
   2e0f0:	b.ne	2e0c4 <__asan_backtrace_create_state@@Base+0x2280>  // b.any
   2e0f4:	strb	wzr, [x19, #255]
   2e0f8:	ldr	x3, [x19, #272]
   2e0fc:	ldr	x2, [x19, #280]
   2e100:	mov	x1, x25
   2e104:	mov	x0, x19
   2e108:	blr	x3
   2e10c:	str	xzr, [x19, #256]
   2e110:	ldr	x0, [x19, #320]
   2e114:	add	x0, x0, #0x1
   2e118:	str	x0, [x19, #320]
   2e11c:	b	2e0c4 <__asan_backtrace_create_state@@Base+0x2280>
   2e120:	ldr	x2, [x22, #16]
   2e124:	mov	w1, w20
   2e128:	mov	x0, x19
   2e12c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e130:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e134:	add	x0, x0, #0xc48
   2e138:	bl	67e0 <__asan_internal_strlen@plt>
   2e13c:	cbz	x0, 2e1b0 <__asan_backtrace_create_state@@Base+0x236c>
   2e140:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e144:	add	x21, x21, #0xc48
   2e148:	add	x24, x0, x21
   2e14c:	mov	x25, #0xff                  	// #255
   2e150:	b	2e174 <__asan_backtrace_create_state@@Base+0x2330>
   2e154:	ldr	x0, [x19, #256]
   2e158:	add	x1, x0, #0x1
   2e15c:	str	x1, [x19, #256]
   2e160:	strb	w23, [x19, x0]
   2e164:	strb	w23, [x19, #264]
   2e168:	add	x21, x21, #0x1
   2e16c:	cmp	x24, x21
   2e170:	b.eq	2e1b0 <__asan_backtrace_create_state@@Base+0x236c>  // b.none
   2e174:	ldrb	w23, [x21]
   2e178:	ldr	x0, [x19, #256]
   2e17c:	cmp	x0, #0xff
   2e180:	b.ne	2e154 <__asan_backtrace_create_state@@Base+0x2310>  // b.any
   2e184:	strb	wzr, [x19, #255]
   2e188:	ldr	x3, [x19, #272]
   2e18c:	ldr	x2, [x19, #280]
   2e190:	mov	x1, x25
   2e194:	mov	x0, x19
   2e198:	blr	x3
   2e19c:	str	xzr, [x19, #256]
   2e1a0:	ldr	x0, [x19, #320]
   2e1a4:	add	x0, x0, #0x1
   2e1a8:	str	x0, [x19, #320]
   2e1ac:	b	2e154 <__asan_backtrace_create_state@@Base+0x2310>
   2e1b0:	ldr	x2, [x22, #8]
   2e1b4:	mov	w1, w20
   2e1b8:	mov	x0, x19
   2e1bc:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e1c0:	ldp	x21, x22, [sp, #32]
   2e1c4:	ldp	x23, x24, [sp, #48]
   2e1c8:	ldp	x25, x26, [sp, #64]
   2e1cc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e1d0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e1d4:	add	x0, x0, #0xd48
   2e1d8:	bl	67e0 <__asan_internal_strlen@plt>
   2e1dc:	cbz	x0, 2e258 <__asan_backtrace_create_state@@Base+0x2414>
   2e1e0:	stp	x25, x26, [sp, #64]
   2e1e4:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e1e8:	add	x21, x21, #0xd48
   2e1ec:	add	x24, x0, x21
   2e1f0:	mov	x25, #0xff                  	// #255
   2e1f4:	b	2e218 <__asan_backtrace_create_state@@Base+0x23d4>
   2e1f8:	ldr	x0, [x19, #256]
   2e1fc:	add	x1, x0, #0x1
   2e200:	str	x1, [x19, #256]
   2e204:	strb	w23, [x19, x0]
   2e208:	strb	w23, [x19, #264]
   2e20c:	add	x21, x21, #0x1
   2e210:	cmp	x24, x21
   2e214:	b.eq	2e254 <__asan_backtrace_create_state@@Base+0x2410>  // b.none
   2e218:	ldrb	w23, [x21]
   2e21c:	ldr	x0, [x19, #256]
   2e220:	cmp	x0, #0xff
   2e224:	b.ne	2e1f8 <__asan_backtrace_create_state@@Base+0x23b4>  // b.any
   2e228:	strb	wzr, [x19, #255]
   2e22c:	ldr	x3, [x19, #272]
   2e230:	ldr	x2, [x19, #280]
   2e234:	mov	x1, x25
   2e238:	mov	x0, x19
   2e23c:	blr	x3
   2e240:	str	xzr, [x19, #256]
   2e244:	ldr	x0, [x19, #320]
   2e248:	add	x0, x0, #0x1
   2e24c:	str	x0, [x19, #320]
   2e250:	b	2e1f8 <__asan_backtrace_create_state@@Base+0x23b4>
   2e254:	ldp	x25, x26, [sp, #64]
   2e258:	ldr	x2, [x22, #8]
   2e25c:	mov	w1, w20
   2e260:	mov	x0, x19
   2e264:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e268:	ldp	x21, x22, [sp, #32]
   2e26c:	ldp	x23, x24, [sp, #48]
   2e270:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e274:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e278:	add	x0, x0, #0xd60
   2e27c:	bl	67e0 <__asan_internal_strlen@plt>
   2e280:	cbz	x0, 2e2fc <__asan_backtrace_create_state@@Base+0x24b8>
   2e284:	stp	x25, x26, [sp, #64]
   2e288:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e28c:	add	x21, x21, #0xd60
   2e290:	add	x24, x0, x21
   2e294:	mov	x25, #0xff                  	// #255
   2e298:	b	2e2bc <__asan_backtrace_create_state@@Base+0x2478>
   2e29c:	ldr	x0, [x19, #256]
   2e2a0:	add	x1, x0, #0x1
   2e2a4:	str	x1, [x19, #256]
   2e2a8:	strb	w23, [x19, x0]
   2e2ac:	strb	w23, [x19, #264]
   2e2b0:	add	x21, x21, #0x1
   2e2b4:	cmp	x21, x24
   2e2b8:	b.eq	2e2f8 <__asan_backtrace_create_state@@Base+0x24b4>  // b.none
   2e2bc:	ldrb	w23, [x21]
   2e2c0:	ldr	x0, [x19, #256]
   2e2c4:	cmp	x0, #0xff
   2e2c8:	b.ne	2e29c <__asan_backtrace_create_state@@Base+0x2458>  // b.any
   2e2cc:	strb	wzr, [x19, #255]
   2e2d0:	ldr	x3, [x19, #272]
   2e2d4:	ldr	x2, [x19, #280]
   2e2d8:	mov	x1, x25
   2e2dc:	mov	x0, x19
   2e2e0:	blr	x3
   2e2e4:	str	xzr, [x19, #256]
   2e2e8:	ldr	x0, [x19, #320]
   2e2ec:	add	x0, x0, #0x1
   2e2f0:	str	x0, [x19, #320]
   2e2f4:	b	2e29c <__asan_backtrace_create_state@@Base+0x2458>
   2e2f8:	ldp	x25, x26, [sp, #64]
   2e2fc:	ldr	x2, [x22, #8]
   2e300:	mov	w1, w20
   2e304:	mov	x0, x19
   2e308:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e30c:	ldp	x21, x22, [sp, #32]
   2e310:	ldp	x23, x24, [sp, #48]
   2e314:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e318:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e31c:	add	x0, x0, #0xd78
   2e320:	bl	67e0 <__asan_internal_strlen@plt>
   2e324:	cbz	x0, 2e3a0 <__asan_backtrace_create_state@@Base+0x255c>
   2e328:	stp	x25, x26, [sp, #64]
   2e32c:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2e330:	add	x21, x21, #0xd78
   2e334:	add	x24, x0, x21
   2e338:	mov	x25, #0xff                  	// #255
   2e33c:	b	2e360 <__asan_backtrace_create_state@@Base+0x251c>
   2e340:	ldr	x0, [x19, #256]
   2e344:	add	x1, x0, #0x1
   2e348:	str	x1, [x19, #256]
   2e34c:	strb	w23, [x19, x0]
   2e350:	strb	w23, [x19, #264]
   2e354:	add	x21, x21, #0x1
   2e358:	cmp	x21, x24
   2e35c:	b.eq	2e39c <__asan_backtrace_create_state@@Base+0x2558>  // b.none
   2e360:	ldrb	w23, [x21]
   2e364:	ldr	x0, [x19, #256]
   2e368:	cmp	x0, #0xff
   2e36c:	b.ne	2e340 <__asan_backtrace_create_state@@Base+0x24fc>  // b.any
   2e370:	strb	wzr, [x19, #255]
   2e374:	ldr	x3, [x19, #272]
   2e378:	ldr	x2, [x19, #280]
   2e37c:	mov	x1, x25
   2e380:	mov	x0, x19
   2e384:	blr	x3
   2e388:	str	xzr, [x19, #256]
   2e38c:	ldr	x0, [x19, #320]
   2e390:	add	x0, x0, #0x1
   2e394:	str	x0, [x19, #320]
   2e398:	b	2e340 <__asan_backtrace_create_state@@Base+0x24fc>
   2e39c:	ldp	x25, x26, [sp, #64]
   2e3a0:	ldr	x2, [x22, #8]
   2e3a4:	mov	w1, w20
   2e3a8:	mov	x0, x19
   2e3ac:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e3b0:	ldp	x21, x22, [sp, #32]
   2e3b4:	ldp	x23, x24, [sp, #48]
   2e3b8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e3bc:	ldr	x1, [x22, #8]
   2e3c0:	ldrsw	x0, [x22, #16]
   2e3c4:	cbz	x0, 30e60 <__asan_backtrace_create_state@@Base+0x501c>
   2e3c8:	mov	x20, x1
   2e3cc:	add	x22, x1, x0
   2e3d0:	mov	x23, #0xff                  	// #255
   2e3d4:	b	2e3f8 <__asan_backtrace_create_state@@Base+0x25b4>
   2e3d8:	ldr	x0, [x19, #256]
   2e3dc:	add	x1, x0, #0x1
   2e3e0:	str	x1, [x19, #256]
   2e3e4:	strb	w21, [x19, x0]
   2e3e8:	strb	w21, [x19, #264]
   2e3ec:	add	x20, x20, #0x1
   2e3f0:	cmp	x22, x20
   2e3f4:	b.eq	2e434 <__asan_backtrace_create_state@@Base+0x25f0>  // b.none
   2e3f8:	ldrb	w21, [x20]
   2e3fc:	ldr	x0, [x19, #256]
   2e400:	cmp	x0, #0xff
   2e404:	b.ne	2e3d8 <__asan_backtrace_create_state@@Base+0x2594>  // b.any
   2e408:	strb	wzr, [x19, #255]
   2e40c:	ldr	x3, [x19, #272]
   2e410:	ldr	x2, [x19, #280]
   2e414:	mov	x1, x23
   2e418:	mov	x0, x19
   2e41c:	blr	x3
   2e420:	str	xzr, [x19, #256]
   2e424:	ldr	x0, [x19, #320]
   2e428:	add	x0, x0, #0x1
   2e42c:	str	x0, [x19, #320]
   2e430:	b	2e3d8 <__asan_backtrace_create_state@@Base+0x2594>
   2e434:	ldp	x21, x22, [sp, #32]
   2e438:	ldp	x23, x24, [sp, #48]
   2e43c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e440:	ldr	x1, [x19, #296]
   2e444:	cbnz	x1, 2e454 <__asan_backtrace_create_state@@Base+0x2610>
   2e448:	b	30dac <__asan_backtrace_create_state@@Base+0x4f68>
   2e44c:	ldr	x1, [x1]
   2e450:	cbz	x1, 30dac <__asan_backtrace_create_state@@Base+0x4f68>
   2e454:	ldr	w2, [x1, #16]
   2e458:	cbnz	w2, 2e44c <__asan_backtrace_create_state@@Base+0x2608>
   2e45c:	ldr	x3, [x1, #8]
   2e460:	ldr	w3, [x3]
   2e464:	sub	w4, w3, #0x19
   2e468:	cmp	w4, #0x2
   2e46c:	b.hi	30da0 <__asan_backtrace_create_state@@Base+0x4f5c>  // b.pmore
   2e470:	cmp	w0, w3
   2e474:	b.ne	2e44c <__asan_backtrace_create_state@@Base+0x2608>  // b.any
   2e478:	ldr	x2, [x22, #8]
   2e47c:	mov	w1, w20
   2e480:	mov	x0, x19
   2e484:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e488:	ldp	x21, x22, [sp, #32]
   2e48c:	ldp	x23, x24, [sp, #48]
   2e490:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e494:	ldr	x0, [x22, #8]
   2e498:	ldr	w24, [x19, #312]
   2e49c:	cbnz	w24, 2e4b0 <__asan_backtrace_create_state@@Base+0x266c>
   2e4a0:	ldr	w1, [x0]
   2e4a4:	mov	w21, w24
   2e4a8:	cmp	w1, #0x5
   2e4ac:	b.eq	2e4d8 <__asan_backtrace_create_state@@Base+0x2694>  // b.none
   2e4b0:	ldr	w1, [x0]
   2e4b4:	cmp	w1, #0x23
   2e4b8:	b.eq	30da8 <__asan_backtrace_create_state@@Base+0x4f64>  // b.none
   2e4bc:	ldr	w2, [x22]
   2e4c0:	cmp	w1, w2
   2e4c4:	b.eq	30dd4 <__asan_backtrace_create_state@@Base+0x4f90>  // b.none
   2e4c8:	cmp	w1, #0x24
   2e4cc:	b.ne	30dac <__asan_backtrace_create_state@@Base+0x4f68>  // b.any
   2e4d0:	ldr	x2, [x0, #8]
   2e4d4:	b	2e604 <__asan_backtrace_create_state@@Base+0x27c0>
   2e4d8:	ldr	w5, [x19, #344]
   2e4dc:	cmp	w5, #0x0
   2e4e0:	b.le	2e510 <__asan_backtrace_create_state@@Base+0x26cc>
   2e4e4:	ldr	x1, [x19, #336]
   2e4e8:	sub	w3, w5, #0x1
   2e4ec:	add	x2, x1, #0x10
   2e4f0:	add	x3, x2, x3, lsl #4
   2e4f4:	mov	x4, x1
   2e4f8:	ldr	x2, [x1]
   2e4fc:	cmp	x0, x2
   2e500:	b.eq	30ddc <__asan_backtrace_create_state@@Base+0x4f98>  // b.none
   2e504:	add	x1, x1, #0x10
   2e508:	cmp	x3, x1
   2e50c:	b.ne	2e4f4 <__asan_backtrace_create_state@@Base+0x26b0>  // b.any
   2e510:	ldr	w1, [x19, #348]
   2e514:	cmp	w1, w5
   2e518:	b.le	2e5cc <__asan_backtrace_create_state@@Base+0x2788>
   2e51c:	sbfiz	x3, x5, #4, #32
   2e520:	ldr	x2, [x19, #336]
   2e524:	add	x1, x2, w5, sxtw #4
   2e528:	add	w5, w5, #0x1
   2e52c:	str	w5, [x19, #344]
   2e530:	str	x0, [x2, x3]
   2e534:	add	x1, x1, #0x8
   2e538:	ldr	x2, [x19, #288]
   2e53c:	cbz	x2, 2e578 <__asan_backtrace_create_state@@Base+0x2734>
   2e540:	ldr	w4, [x19, #360]
   2e544:	ldr	w3, [x19, #364]
   2e548:	cmp	w4, w3
   2e54c:	b.ge	2e5e0 <__asan_backtrace_create_state@@Base+0x279c>  // b.tcont
   2e550:	ldr	x3, [x19, #352]
   2e554:	add	x3, x3, w4, sxtw #4
   2e558:	add	w4, w4, #0x1
   2e55c:	str	w4, [x19, #360]
   2e560:	ldr	x4, [x2, #8]
   2e564:	str	x4, [x3, #8]
   2e568:	str	x3, [x1]
   2e56c:	mov	x1, x3
   2e570:	ldr	x2, [x2]
   2e574:	cbnz	x2, 2e540 <__asan_backtrace_create_state@@Base+0x26fc>
   2e578:	str	xzr, [x1]
   2e57c:	ldr	w1, [x19, #304]
   2e580:	cbnz	w1, 2e5f4 <__asan_backtrace_create_state@@Base+0x27b0>
   2e584:	mov	x1, x0
   2e588:	mov	x0, x19
   2e58c:	bl	2c7ac <__asan_backtrace_create_state@@Base+0x968>
   2e590:	cbz	x0, 2e5b8 <__asan_backtrace_create_state@@Base+0x2774>
   2e594:	mov	w21, w24
   2e598:	ldr	w1, [x0]
   2e59c:	cmp	w1, #0x2f
   2e5a0:	b.ne	2e4b0 <__asan_backtrace_create_state@@Base+0x266c>  // b.any
   2e5a4:	ldr	w1, [x19, #316]
   2e5a8:	bl	2c774 <__asan_backtrace_create_state@@Base+0x930>
   2e5ac:	cbnz	x0, 2e4b0 <__asan_backtrace_create_state@@Base+0x266c>
   2e5b0:	cbz	w21, 2e5b8 <__asan_backtrace_create_state@@Base+0x2774>
   2e5b4:	str	x23, [x19, #288]
   2e5b8:	mov	w0, #0x1                   	// #1
   2e5bc:	str	w0, [x19, #304]
   2e5c0:	ldp	x21, x22, [sp, #32]
   2e5c4:	ldp	x23, x24, [sp, #48]
   2e5c8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e5cc:	mov	w0, #0x1                   	// #1
   2e5d0:	str	w0, [x19, #304]
   2e5d4:	ldp	x21, x22, [sp, #32]
   2e5d8:	ldp	x23, x24, [sp, #48]
   2e5dc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e5e0:	mov	w0, #0x1                   	// #1
   2e5e4:	str	w0, [x19, #304]
   2e5e8:	ldp	x21, x22, [sp, #32]
   2e5ec:	ldp	x23, x24, [sp, #48]
   2e5f0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e5f4:	ldp	x21, x22, [sp, #32]
   2e5f8:	ldp	x23, x24, [sp, #48]
   2e5fc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e600:	mov	x2, #0x0                   	// #0
   2e604:	ldr	x0, [x19, #296]
   2e608:	str	x0, [sp, #128]
   2e60c:	add	x0, sp, #0x80
   2e610:	str	x0, [x19, #296]
   2e614:	str	x22, [sp, #136]
   2e618:	str	wzr, [sp, #144]
   2e61c:	ldr	x0, [x19, #288]
   2e620:	str	x0, [sp, #152]
   2e624:	cbz	x2, 30dcc <__asan_backtrace_create_state@@Base+0x4f88>
   2e628:	mov	w1, w20
   2e62c:	mov	x0, x19
   2e630:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e634:	ldr	w0, [sp, #144]
   2e638:	cbz	w0, 2e658 <__asan_backtrace_create_state@@Base+0x2814>
   2e63c:	ldr	x0, [sp, #128]
   2e640:	str	x0, [x19, #296]
   2e644:	cbz	w21, 30e6c <__asan_backtrace_create_state@@Base+0x5028>
   2e648:	str	x23, [x19, #288]
   2e64c:	ldp	x21, x22, [sp, #32]
   2e650:	ldp	x23, x24, [sp, #48]
   2e654:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e658:	mov	x2, x22
   2e65c:	mov	w1, w20
   2e660:	mov	x0, x19
   2e664:	bl	30fc4 <__asan_backtrace_create_state@@Base+0x5180>
   2e668:	b	2e63c <__asan_backtrace_create_state@@Base+0x27f8>
   2e66c:	tbnz	w20, #2, 2e6f8 <__asan_backtrace_create_state@@Base+0x28b4>
   2e670:	ldr	x0, [x22, #8]
   2e674:	ldr	x22, [x0]
   2e678:	ldrsw	x0, [x0, #8]
   2e67c:	cbz	x0, 30e78 <__asan_backtrace_create_state@@Base+0x5034>
   2e680:	mov	x20, x22
   2e684:	add	x22, x22, x0
   2e688:	mov	x23, #0xff                  	// #255
   2e68c:	b	2e6b0 <__asan_backtrace_create_state@@Base+0x286c>
   2e690:	ldr	x0, [x19, #256]
   2e694:	add	x1, x0, #0x1
   2e698:	str	x1, [x19, #256]
   2e69c:	strb	w21, [x19, x0]
   2e6a0:	strb	w21, [x19, #264]
   2e6a4:	add	x20, x20, #0x1
   2e6a8:	cmp	x20, x22
   2e6ac:	b.eq	2e6ec <__asan_backtrace_create_state@@Base+0x28a8>  // b.none
   2e6b0:	ldrb	w21, [x20]
   2e6b4:	ldr	x0, [x19, #256]
   2e6b8:	cmp	x0, #0xff
   2e6bc:	b.ne	2e690 <__asan_backtrace_create_state@@Base+0x284c>  // b.any
   2e6c0:	strb	wzr, [x19, #255]
   2e6c4:	ldr	x3, [x19, #272]
   2e6c8:	ldr	x2, [x19, #280]
   2e6cc:	mov	x1, x23
   2e6d0:	mov	x0, x19
   2e6d4:	blr	x3
   2e6d8:	str	xzr, [x19, #256]
   2e6dc:	ldr	x0, [x19, #320]
   2e6e0:	add	x0, x0, #0x1
   2e6e4:	str	x0, [x19, #320]
   2e6e8:	b	2e690 <__asan_backtrace_create_state@@Base+0x284c>
   2e6ec:	ldp	x21, x22, [sp, #32]
   2e6f0:	ldp	x23, x24, [sp, #48]
   2e6f4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e6f8:	ldr	x0, [x22, #8]
   2e6fc:	ldr	x22, [x0, #16]
   2e700:	ldrsw	x0, [x0, #24]
   2e704:	cbz	x0, 30e84 <__asan_backtrace_create_state@@Base+0x5040>
   2e708:	mov	x20, x22
   2e70c:	add	x22, x22, x0
   2e710:	mov	x23, #0xff                  	// #255
   2e714:	b	2e738 <__asan_backtrace_create_state@@Base+0x28f4>
   2e718:	ldr	x0, [x19, #256]
   2e71c:	add	x1, x0, #0x1
   2e720:	str	x1, [x19, #256]
   2e724:	strb	w21, [x19, x0]
   2e728:	strb	w21, [x19, #264]
   2e72c:	add	x20, x20, #0x1
   2e730:	cmp	x22, x20
   2e734:	b.eq	2e774 <__asan_backtrace_create_state@@Base+0x2930>  // b.none
   2e738:	ldrb	w21, [x20]
   2e73c:	ldr	x0, [x19, #256]
   2e740:	cmp	x0, #0xff
   2e744:	b.ne	2e718 <__asan_backtrace_create_state@@Base+0x28d4>  // b.any
   2e748:	strb	wzr, [x19, #255]
   2e74c:	ldr	x3, [x19, #272]
   2e750:	ldr	x2, [x19, #280]
   2e754:	mov	x1, x23
   2e758:	mov	x0, x19
   2e75c:	blr	x3
   2e760:	str	xzr, [x19, #256]
   2e764:	ldr	x0, [x19, #320]
   2e768:	add	x0, x0, #0x1
   2e76c:	str	x0, [x19, #320]
   2e770:	b	2e718 <__asan_backtrace_create_state@@Base+0x28d4>
   2e774:	ldp	x21, x22, [sp, #32]
   2e778:	ldp	x23, x24, [sp, #48]
   2e77c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e780:	ldr	x2, [x22, #8]
   2e784:	mov	w1, w20
   2e788:	mov	x0, x19
   2e78c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e790:	ldp	x21, x22, [sp, #32]
   2e794:	ldp	x23, x24, [sp, #48]
   2e798:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e79c:	and	w21, w20, #0x20
   2e7a0:	tbnz	w20, #5, 2e7c0 <__asan_backtrace_create_state@@Base+0x297c>
   2e7a4:	ldr	x0, [x22, #8]
   2e7a8:	cbz	x0, 2e890 <__asan_backtrace_create_state@@Base+0x2a4c>
   2e7ac:	tbz	w20, #6, 2e7f8 <__asan_backtrace_create_state@@Base+0x29b4>
   2e7b0:	cbz	w21, 2e890 <__asan_backtrace_create_state@@Base+0x2a4c>
   2e7b4:	ldp	x21, x22, [sp, #32]
   2e7b8:	ldp	x23, x24, [sp, #48]
   2e7bc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e7c0:	and	w23, w20, #0xffffff9f
   2e7c4:	ldr	x3, [x19, #296]
   2e7c8:	mov	x2, x22
   2e7cc:	mov	w1, w23
   2e7d0:	mov	x0, x19
   2e7d4:	bl	31a88 <__asan_backtrace_create_state@@Base+0x5c44>
   2e7d8:	ldr	x2, [x22, #8]
   2e7dc:	cbz	x2, 2e7b0 <__asan_backtrace_create_state@@Base+0x296c>
   2e7e0:	mov	w1, w23
   2e7e4:	mov	x0, x19
   2e7e8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e7ec:	ldp	x21, x22, [sp, #32]
   2e7f0:	ldp	x23, x24, [sp, #48]
   2e7f4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e7f8:	ldr	x0, [x19, #296]
   2e7fc:	str	x0, [sp, #128]
   2e800:	add	x0, sp, #0x80
   2e804:	str	x0, [x19, #296]
   2e808:	str	x22, [sp, #136]
   2e80c:	str	wzr, [sp, #144]
   2e810:	ldr	x0, [x19, #288]
   2e814:	str	x0, [sp, #152]
   2e818:	ldr	x2, [x22, #8]
   2e81c:	and	w1, w20, #0xffffff9f
   2e820:	mov	x0, x19
   2e824:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e828:	ldr	x0, [sp, #128]
   2e82c:	str	x0, [x19, #296]
   2e830:	ldr	w0, [sp, #144]
   2e834:	cbnz	w0, 30e90 <__asan_backtrace_create_state@@Base+0x504c>
   2e838:	cbnz	w21, 2e7b0 <__asan_backtrace_create_state@@Base+0x296c>
   2e83c:	ldr	x0, [x19, #256]
   2e840:	cmp	x0, #0xff
   2e844:	b.eq	2e864 <__asan_backtrace_create_state@@Base+0x2a20>  // b.none
   2e848:	ldr	x1, [x19, #256]
   2e84c:	add	x0, x1, #0x1
   2e850:	str	x0, [x19, #256]
   2e854:	mov	w0, #0x20                  	// #32
   2e858:	strb	w0, [x19, x1]
   2e85c:	strb	w0, [x19, #264]
   2e860:	b	2e7b0 <__asan_backtrace_create_state@@Base+0x296c>
   2e864:	strb	wzr, [x19, #255]
   2e868:	ldr	x3, [x19, #272]
   2e86c:	ldr	x2, [x19, #280]
   2e870:	mov	x1, #0xff                  	// #255
   2e874:	mov	x0, x19
   2e878:	blr	x3
   2e87c:	str	xzr, [x19, #256]
   2e880:	ldr	x0, [x19, #320]
   2e884:	add	x0, x0, #0x1
   2e888:	str	x0, [x19, #320]
   2e88c:	b	2e848 <__asan_backtrace_create_state@@Base+0x2a04>
   2e890:	ldr	x3, [x19, #296]
   2e894:	mov	x2, x22
   2e898:	and	w1, w20, #0xffffff9f
   2e89c:	mov	x0, x19
   2e8a0:	bl	31a88 <__asan_backtrace_create_state@@Base+0x5c44>
   2e8a4:	ldp	x21, x22, [sp, #32]
   2e8a8:	ldp	x23, x24, [sp, #48]
   2e8ac:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e8b0:	ldr	x23, [x19, #296]
   2e8b4:	str	x23, [sp, #128]
   2e8b8:	add	x0, sp, #0x80
   2e8bc:	str	x0, [x19, #296]
   2e8c0:	str	x22, [sp, #136]
   2e8c4:	str	wzr, [sp, #144]
   2e8c8:	ldr	x0, [x19, #288]
   2e8cc:	str	x0, [sp, #152]
   2e8d0:	mov	x0, x23
   2e8d4:	mov	w21, #0x1                   	// #1
   2e8d8:	add	x3, sp, #0x80
   2e8dc:	mov	w6, w21
   2e8e0:	cbnz	x23, 2e928 <__asan_backtrace_create_state@@Base+0x2ae4>
   2e8e4:	ldr	x2, [x22, #16]
   2e8e8:	mov	w1, w20
   2e8ec:	mov	x0, x19
   2e8f0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e8f4:	str	xzr, [x19, #296]
   2e8f8:	ldr	w0, [sp, #144]
   2e8fc:	cbz	w0, 2e9cc <__asan_backtrace_create_state@@Base+0x2b88>
   2e900:	ldp	x21, x22, [sp, #32]
   2e904:	ldp	x23, x24, [sp, #48]
   2e908:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e90c:	mov	w0, #0x1                   	// #1
   2e910:	str	w0, [x19, #304]
   2e914:	ldp	x21, x22, [sp, #32]
   2e918:	ldp	x23, x24, [sp, #48]
   2e91c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e920:	ldr	x0, [x0]
   2e924:	cbz	x0, 2e97c <__asan_backtrace_create_state@@Base+0x2b38>
   2e928:	ldr	x1, [x0, #8]
   2e92c:	ldr	w1, [x1]
   2e930:	sub	w1, w1, #0x19
   2e934:	cmp	w1, #0x2
   2e938:	b.hi	2e97c <__asan_backtrace_create_state@@Base+0x2b38>  // b.pmore
   2e93c:	ldr	w1, [x0, #16]
   2e940:	cbnz	w1, 2e920 <__asan_backtrace_create_state@@Base+0x2adc>
   2e944:	cmp	w21, #0x3
   2e948:	b.hi	2e90c <__asan_backtrace_create_state@@Base+0x2ac8>  // b.pmore
   2e94c:	ubfiz	x2, x21, #5, #32
   2e950:	add	x1, x3, x2
   2e954:	ldp	x4, x5, [x0]
   2e958:	stp	x4, x5, [x1]
   2e95c:	ldp	x4, x5, [x0, #16]
   2e960:	stp	x4, x5, [x1, #16]
   2e964:	ldr	x4, [x19, #296]
   2e968:	str	x4, [x3, x2]
   2e96c:	str	x1, [x19, #296]
   2e970:	str	w6, [x0, #16]
   2e974:	add	w21, w21, #0x1
   2e978:	b	2e920 <__asan_backtrace_create_state@@Base+0x2adc>
   2e97c:	ldr	x2, [x22, #16]
   2e980:	mov	w1, w20
   2e984:	mov	x0, x19
   2e988:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2e98c:	str	x23, [x19, #296]
   2e990:	ldr	w0, [sp, #144]
   2e994:	cbnz	w0, 30e9c <__asan_backtrace_create_state@@Base+0x5058>
   2e998:	cmp	w21, #0x1
   2e99c:	b.ls	2e9cc <__asan_backtrace_create_state@@Base+0x2b88>  // b.plast
   2e9a0:	sub	w23, w21, #0x1
   2e9a4:	add	x0, sp, #0x80
   2e9a8:	add	x23, x0, x23, lsl #5
   2e9ac:	sub	w21, w21, #0x1
   2e9b0:	ldr	x2, [x23, #8]
   2e9b4:	mov	w1, w20
   2e9b8:	mov	x0, x19
   2e9bc:	bl	30fc4 <__asan_backtrace_create_state@@Base+0x5180>
   2e9c0:	sub	x23, x23, #0x20
   2e9c4:	cmp	w21, #0x1
   2e9c8:	b.ne	2e9ac <__asan_backtrace_create_state@@Base+0x2b68>  // b.any
   2e9cc:	ldr	x3, [x19, #296]
   2e9d0:	mov	x2, x22
   2e9d4:	mov	w1, w20
   2e9d8:	mov	x0, x19
   2e9dc:	bl	32114 <__asan_backtrace_create_state@@Base+0x62d0>
   2e9e0:	ldp	x21, x22, [sp, #32]
   2e9e4:	ldp	x23, x24, [sp, #48]
   2e9e8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2e9ec:	ldr	x0, [x19, #296]
   2e9f0:	str	x0, [sp, #128]
   2e9f4:	add	x0, sp, #0x80
   2e9f8:	str	x0, [x19, #296]
   2e9fc:	str	x22, [sp, #136]
   2ea00:	str	wzr, [sp, #144]
   2ea04:	ldr	x0, [x19, #288]
   2ea08:	str	x0, [sp, #152]
   2ea0c:	ldr	x2, [x22, #16]
   2ea10:	mov	w1, w20
   2ea14:	mov	x0, x19
   2ea18:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2ea1c:	ldr	w0, [sp, #144]
   2ea20:	cbz	w0, 2ea38 <__asan_backtrace_create_state@@Base+0x2bf4>
   2ea24:	ldr	x0, [sp, #128]
   2ea28:	str	x0, [x19, #296]
   2ea2c:	ldp	x21, x22, [sp, #32]
   2ea30:	ldp	x23, x24, [sp, #48]
   2ea34:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ea38:	mov	x2, x22
   2ea3c:	mov	w1, w20
   2ea40:	mov	x0, x19
   2ea44:	bl	30fc4 <__asan_backtrace_create_state@@Base+0x5180>
   2ea48:	b	2ea24 <__asan_backtrace_create_state@@Base+0x2be0>
   2ea4c:	ldrsh	w0, [x22, #18]
   2ea50:	cbnz	w0, 2eacc <__asan_backtrace_create_state@@Base+0x2c88>
   2ea54:	ldr	x2, [x22, #8]
   2ea58:	ldr	x1, [x2, #8]
   2ea5c:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ea60:	ldr	x0, [x0, #3736]
   2ea64:	add	x0, x0, #0x100
   2ea68:	cmp	x1, x0
   2ea6c:	b.eq	2eaa0 <__asan_backtrace_create_state@@Base+0x2c5c>  // b.none
   2ea70:	mov	w1, w20
   2ea74:	mov	x0, x19
   2ea78:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2ea7c:	ldr	x0, [x19, #256]
   2ea80:	cmp	x0, #0xff
   2ea84:	b.eq	2eb58 <__asan_backtrace_create_state@@Base+0x2d14>  // b.none
   2ea88:	ldr	x1, [x19, #256]
   2ea8c:	add	x0, x1, #0x1
   2ea90:	str	x0, [x19, #256]
   2ea94:	mov	w0, #0x20                  	// #32
   2ea98:	strb	w0, [x19, x1]
   2ea9c:	strb	w0, [x19, #264]
   2eaa0:	ldrsh	w0, [x22, #16]
   2eaa4:	cbz	w0, 2ebec <__asan_backtrace_create_state@@Base+0x2da8>
   2eaa8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2eaac:	add	x0, x0, #0xda0
   2eab0:	bl	67e0 <__asan_internal_strlen@plt>
   2eab4:	cbz	x0, 30ea8 <__asan_backtrace_create_state@@Base+0x5064>
   2eab8:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2eabc:	add	x20, x20, #0xda0
   2eac0:	add	x22, x0, x20
   2eac4:	mov	x23, #0xff                  	// #255
   2eac8:	b	2eba4 <__asan_backtrace_create_state@@Base+0x2d60>
   2eacc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ead0:	add	x0, x0, #0xd98
   2ead4:	bl	67e0 <__asan_internal_strlen@plt>
   2ead8:	cbz	x0, 2ea54 <__asan_backtrace_create_state@@Base+0x2c10>
   2eadc:	stp	x25, x26, [sp, #64]
   2eae0:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2eae4:	add	x21, x21, #0xd98
   2eae8:	add	x24, x0, x21
   2eaec:	mov	x25, #0xff                  	// #255
   2eaf0:	b	2eb14 <__asan_backtrace_create_state@@Base+0x2cd0>
   2eaf4:	ldr	x0, [x19, #256]
   2eaf8:	add	x1, x0, #0x1
   2eafc:	str	x1, [x19, #256]
   2eb00:	strb	w23, [x19, x0]
   2eb04:	strb	w23, [x19, #264]
   2eb08:	add	x21, x21, #0x1
   2eb0c:	cmp	x21, x24
   2eb10:	b.eq	2eb50 <__asan_backtrace_create_state@@Base+0x2d0c>  // b.none
   2eb14:	ldrb	w23, [x21]
   2eb18:	ldr	x0, [x19, #256]
   2eb1c:	cmp	x0, #0xff
   2eb20:	b.ne	2eaf4 <__asan_backtrace_create_state@@Base+0x2cb0>  // b.any
   2eb24:	strb	wzr, [x19, #255]
   2eb28:	ldr	x3, [x19, #272]
   2eb2c:	ldr	x2, [x19, #280]
   2eb30:	mov	x1, x25
   2eb34:	mov	x0, x19
   2eb38:	blr	x3
   2eb3c:	str	xzr, [x19, #256]
   2eb40:	ldr	x0, [x19, #320]
   2eb44:	add	x0, x0, #0x1
   2eb48:	str	x0, [x19, #320]
   2eb4c:	b	2eaf4 <__asan_backtrace_create_state@@Base+0x2cb0>
   2eb50:	ldp	x25, x26, [sp, #64]
   2eb54:	b	2ea54 <__asan_backtrace_create_state@@Base+0x2c10>
   2eb58:	strb	wzr, [x19, #255]
   2eb5c:	ldr	x3, [x19, #272]
   2eb60:	ldr	x2, [x19, #280]
   2eb64:	mov	x1, #0xff                  	// #255
   2eb68:	mov	x0, x19
   2eb6c:	blr	x3
   2eb70:	str	xzr, [x19, #256]
   2eb74:	ldr	x0, [x19, #320]
   2eb78:	add	x0, x0, #0x1
   2eb7c:	str	x0, [x19, #320]
   2eb80:	b	2ea88 <__asan_backtrace_create_state@@Base+0x2c44>
   2eb84:	ldr	x0, [x19, #256]
   2eb88:	add	x1, x0, #0x1
   2eb8c:	str	x1, [x19, #256]
   2eb90:	strb	w21, [x19, x0]
   2eb94:	strb	w21, [x19, #264]
   2eb98:	add	x20, x20, #0x1
   2eb9c:	cmp	x20, x22
   2eba0:	b.eq	2ebe0 <__asan_backtrace_create_state@@Base+0x2d9c>  // b.none
   2eba4:	ldrb	w21, [x20]
   2eba8:	ldr	x0, [x19, #256]
   2ebac:	cmp	x0, #0xff
   2ebb0:	b.ne	2eb84 <__asan_backtrace_create_state@@Base+0x2d40>  // b.any
   2ebb4:	strb	wzr, [x19, #255]
   2ebb8:	ldr	x3, [x19, #272]
   2ebbc:	ldr	x2, [x19, #280]
   2ebc0:	mov	x1, x23
   2ebc4:	mov	x0, x19
   2ebc8:	blr	x3
   2ebcc:	str	xzr, [x19, #256]
   2ebd0:	ldr	x0, [x19, #320]
   2ebd4:	add	x0, x0, #0x1
   2ebd8:	str	x0, [x19, #320]
   2ebdc:	b	2eb84 <__asan_backtrace_create_state@@Base+0x2d40>
   2ebe0:	ldp	x21, x22, [sp, #32]
   2ebe4:	ldp	x23, x24, [sp, #48]
   2ebe8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ebec:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ebf0:	add	x0, x0, #0xda8
   2ebf4:	bl	67e0 <__asan_internal_strlen@plt>
   2ebf8:	cbz	x0, 30eb4 <__asan_backtrace_create_state@@Base+0x5070>
   2ebfc:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ec00:	add	x20, x20, #0xda8
   2ec04:	add	x22, x0, x20
   2ec08:	mov	x23, #0xff                  	// #255
   2ec0c:	b	2ec30 <__asan_backtrace_create_state@@Base+0x2dec>
   2ec10:	ldr	x0, [x19, #256]
   2ec14:	add	x1, x0, #0x1
   2ec18:	str	x1, [x19, #256]
   2ec1c:	strb	w21, [x19, x0]
   2ec20:	strb	w21, [x19, #264]
   2ec24:	add	x20, x20, #0x1
   2ec28:	cmp	x20, x22
   2ec2c:	b.eq	2ec6c <__asan_backtrace_create_state@@Base+0x2e28>  // b.none
   2ec30:	ldrb	w21, [x20]
   2ec34:	ldr	x0, [x19, #256]
   2ec38:	cmp	x0, #0xff
   2ec3c:	b.ne	2ec10 <__asan_backtrace_create_state@@Base+0x2dcc>  // b.any
   2ec40:	strb	wzr, [x19, #255]
   2ec44:	ldr	x3, [x19, #272]
   2ec48:	ldr	x2, [x19, #280]
   2ec4c:	mov	x1, x23
   2ec50:	mov	x0, x19
   2ec54:	blr	x3
   2ec58:	str	xzr, [x19, #256]
   2ec5c:	ldr	x0, [x19, #320]
   2ec60:	add	x0, x0, #0x1
   2ec64:	str	x0, [x19, #320]
   2ec68:	b	2ec10 <__asan_backtrace_create_state@@Base+0x2dcc>
   2ec6c:	ldp	x21, x22, [sp, #32]
   2ec70:	ldp	x23, x24, [sp, #48]
   2ec74:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ec78:	ldr	x2, [x22, #8]
   2ec7c:	cbz	x2, 2ec8c <__asan_backtrace_create_state@@Base+0x2e48>
   2ec80:	mov	w1, w20
   2ec84:	mov	x0, x19
   2ec88:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2ec8c:	ldr	x0, [x22, #16]
   2ec90:	cbz	x0, 30ec0 <__asan_backtrace_create_state@@Base+0x507c>
   2ec94:	ldr	x1, [x19, #256]
   2ec98:	cmp	x1, #0xfd
   2ec9c:	b.ls	2ecc4 <__asan_backtrace_create_state@@Base+0x2e80>  // b.plast
   2eca0:	strb	wzr, [x19, x1]
   2eca4:	ldr	x3, [x19, #272]
   2eca8:	ldr	x2, [x19, #280]
   2ecac:	mov	x0, x19
   2ecb0:	blr	x3
   2ecb4:	str	xzr, [x19, #256]
   2ecb8:	ldr	x0, [x19, #320]
   2ecbc:	add	x0, x0, #0x1
   2ecc0:	str	x0, [x19, #320]
   2ecc4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ecc8:	add	x0, x0, #0xdb0
   2eccc:	bl	67e0 <__asan_internal_strlen@plt>
   2ecd0:	cbz	x0, 2ed4c <__asan_backtrace_create_state@@Base+0x2f08>
   2ecd4:	stp	x25, x26, [sp, #64]
   2ecd8:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ecdc:	add	x21, x21, #0xdb0
   2ece0:	add	x24, x0, x21
   2ece4:	mov	x25, #0xff                  	// #255
   2ece8:	b	2ed0c <__asan_backtrace_create_state@@Base+0x2ec8>
   2ecec:	ldr	x0, [x19, #256]
   2ecf0:	add	x1, x0, #0x1
   2ecf4:	str	x1, [x19, #256]
   2ecf8:	strb	w23, [x19, x0]
   2ecfc:	strb	w23, [x19, #264]
   2ed00:	add	x21, x21, #0x1
   2ed04:	cmp	x21, x24
   2ed08:	b.eq	2ed48 <__asan_backtrace_create_state@@Base+0x2f04>  // b.none
   2ed0c:	ldrb	w23, [x21]
   2ed10:	ldr	x0, [x19, #256]
   2ed14:	cmp	x0, #0xff
   2ed18:	b.ne	2ecec <__asan_backtrace_create_state@@Base+0x2ea8>  // b.any
   2ed1c:	strb	wzr, [x19, #255]
   2ed20:	ldr	x3, [x19, #272]
   2ed24:	ldr	x2, [x19, #280]
   2ed28:	mov	x1, x25
   2ed2c:	mov	x0, x19
   2ed30:	blr	x3
   2ed34:	str	xzr, [x19, #256]
   2ed38:	ldr	x0, [x19, #320]
   2ed3c:	add	x0, x0, #0x1
   2ed40:	str	x0, [x19, #320]
   2ed44:	b	2ecec <__asan_backtrace_create_state@@Base+0x2ea8>
   2ed48:	ldp	x25, x26, [sp, #64]
   2ed4c:	ldr	x23, [x19, #256]
   2ed50:	ldr	x21, [x19, #320]
   2ed54:	ldr	x2, [x22, #16]
   2ed58:	mov	w1, w20
   2ed5c:	mov	x0, x19
   2ed60:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2ed64:	ldr	x0, [x19, #320]
   2ed68:	cmp	x0, x21
   2ed6c:	b.eq	2ed7c <__asan_backtrace_create_state@@Base+0x2f38>  // b.none
   2ed70:	ldp	x21, x22, [sp, #32]
   2ed74:	ldp	x23, x24, [sp, #48]
   2ed78:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ed7c:	ldr	x0, [x19, #256]
   2ed80:	cmp	x0, x23
   2ed84:	b.eq	2ed94 <__asan_backtrace_create_state@@Base+0x2f50>  // b.none
   2ed88:	ldp	x21, x22, [sp, #32]
   2ed8c:	ldp	x23, x24, [sp, #48]
   2ed90:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ed94:	sub	x0, x0, #0x2
   2ed98:	str	x0, [x19, #256]
   2ed9c:	ldp	x21, x22, [sp, #32]
   2eda0:	ldp	x23, x24, [sp, #48]
   2eda4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2eda8:	ldr	x2, [x22, #8]
   2edac:	ldr	x21, [x22, #16]
   2edb0:	cbz	x2, 2edc0 <__asan_backtrace_create_state@@Base+0x2f7c>
   2edb4:	mov	w1, w20
   2edb8:	mov	x0, x19
   2edbc:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2edc0:	ldr	x0, [x19, #256]
   2edc4:	cmp	x0, #0xff
   2edc8:	b.eq	2ee24 <__asan_backtrace_create_state@@Base+0x2fe0>  // b.none
   2edcc:	ldr	x1, [x19, #256]
   2edd0:	add	x0, x1, #0x1
   2edd4:	str	x0, [x19, #256]
   2edd8:	mov	w0, #0x7b                  	// #123
   2eddc:	strb	w0, [x19, x1]
   2ede0:	strb	w0, [x19, #264]
   2ede4:	mov	x2, x21
   2ede8:	mov	w1, w20
   2edec:	mov	x0, x19
   2edf0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2edf4:	ldr	x0, [x19, #256]
   2edf8:	cmp	x0, #0xff
   2edfc:	b.eq	2ee50 <__asan_backtrace_create_state@@Base+0x300c>  // b.none
   2ee00:	ldr	x1, [x19, #256]
   2ee04:	add	x0, x1, #0x1
   2ee08:	str	x0, [x19, #256]
   2ee0c:	mov	w0, #0x7d                  	// #125
   2ee10:	strb	w0, [x19, x1]
   2ee14:	strb	w0, [x19, #264]
   2ee18:	ldp	x21, x22, [sp, #32]
   2ee1c:	ldp	x23, x24, [sp, #48]
   2ee20:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ee24:	strb	wzr, [x19, #255]
   2ee28:	ldr	x3, [x19, #272]
   2ee2c:	ldr	x2, [x19, #280]
   2ee30:	mov	x1, #0xff                  	// #255
   2ee34:	mov	x0, x19
   2ee38:	blr	x3
   2ee3c:	str	xzr, [x19, #256]
   2ee40:	ldr	x0, [x19, #320]
   2ee44:	add	x0, x0, #0x1
   2ee48:	str	x0, [x19, #320]
   2ee4c:	b	2edcc <__asan_backtrace_create_state@@Base+0x2f88>
   2ee50:	strb	wzr, [x19, #255]
   2ee54:	ldr	x3, [x19, #272]
   2ee58:	ldr	x2, [x19, #280]
   2ee5c:	mov	x1, #0xff                  	// #255
   2ee60:	mov	x0, x19
   2ee64:	blr	x3
   2ee68:	str	xzr, [x19, #256]
   2ee6c:	ldr	x0, [x19, #320]
   2ee70:	add	x0, x0, #0x1
   2ee74:	str	x0, [x19, #320]
   2ee78:	b	2ee00 <__asan_backtrace_create_state@@Base+0x2fbc>
   2ee7c:	ldr	x24, [x22, #8]
   2ee80:	ldr	w23, [x24, #16]
   2ee84:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ee88:	add	x0, x0, #0xdb8
   2ee8c:	bl	67e0 <__asan_internal_strlen@plt>
   2ee90:	cbz	x0, 2ef0c <__asan_backtrace_create_state@@Base+0x30c8>
   2ee94:	stp	x25, x26, [sp, #64]
   2ee98:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ee9c:	add	x20, x20, #0xdb8
   2eea0:	add	x22, x0, x20
   2eea4:	mov	x25, #0xff                  	// #255
   2eea8:	b	2eecc <__asan_backtrace_create_state@@Base+0x3088>
   2eeac:	ldr	x0, [x19, #256]
   2eeb0:	add	x1, x0, #0x1
   2eeb4:	str	x1, [x19, #256]
   2eeb8:	strb	w21, [x19, x0]
   2eebc:	strb	w21, [x19, #264]
   2eec0:	add	x20, x20, #0x1
   2eec4:	cmp	x20, x22
   2eec8:	b.eq	2ef08 <__asan_backtrace_create_state@@Base+0x30c4>  // b.none
   2eecc:	ldrb	w21, [x20]
   2eed0:	ldr	x0, [x19, #256]
   2eed4:	cmp	x0, #0xff
   2eed8:	b.ne	2eeac <__asan_backtrace_create_state@@Base+0x3068>  // b.any
   2eedc:	strb	wzr, [x19, #255]
   2eee0:	ldr	x3, [x19, #272]
   2eee4:	ldr	x2, [x19, #280]
   2eee8:	mov	x1, x25
   2eeec:	mov	x0, x19
   2eef0:	blr	x3
   2eef4:	str	xzr, [x19, #256]
   2eef8:	ldr	x0, [x19, #320]
   2eefc:	add	x0, x0, #0x1
   2ef00:	str	x0, [x19, #320]
   2ef04:	b	2eeac <__asan_backtrace_create_state@@Base+0x3068>
   2ef08:	ldp	x25, x26, [sp, #64]
   2ef0c:	ldr	x0, [x24, #8]
   2ef10:	ldrb	w0, [x0]
   2ef14:	sub	w0, w0, #0x61
   2ef18:	and	w0, w0, #0xff
   2ef1c:	cmp	w0, #0x19
   2ef20:	b.hi	2ef48 <__asan_backtrace_create_state@@Base+0x3104>  // b.pmore
   2ef24:	ldr	x0, [x19, #256]
   2ef28:	cmp	x0, #0xff
   2ef2c:	b.eq	2ef78 <__asan_backtrace_create_state@@Base+0x3134>  // b.none
   2ef30:	ldr	x1, [x19, #256]
   2ef34:	add	x0, x1, #0x1
   2ef38:	str	x0, [x19, #256]
   2ef3c:	mov	w0, #0x20                  	// #32
   2ef40:	strb	w0, [x19, x1]
   2ef44:	strb	w0, [x19, #264]
   2ef48:	ldr	x22, [x24, #8]
   2ef4c:	add	x0, x22, w23, sxtw
   2ef50:	ldurb	w0, [x0, #-1]
   2ef54:	cmp	w0, #0x20
   2ef58:	cset	w0, eq  // eq = none
   2ef5c:	sub	w23, w23, w0
   2ef60:	sxtw	x0, w23
   2ef64:	cbz	w23, 30ecc <__asan_backtrace_create_state@@Base+0x5088>
   2ef68:	mov	x20, x22
   2ef6c:	add	x22, x22, x0
   2ef70:	mov	x23, #0xff                  	// #255
   2ef74:	b	2efc4 <__asan_backtrace_create_state@@Base+0x3180>
   2ef78:	strb	wzr, [x19, #255]
   2ef7c:	ldr	x3, [x19, #272]
   2ef80:	ldr	x2, [x19, #280]
   2ef84:	mov	x1, #0xff                  	// #255
   2ef88:	mov	x0, x19
   2ef8c:	blr	x3
   2ef90:	str	xzr, [x19, #256]
   2ef94:	ldr	x0, [x19, #320]
   2ef98:	add	x0, x0, #0x1
   2ef9c:	str	x0, [x19, #320]
   2efa0:	b	2ef30 <__asan_backtrace_create_state@@Base+0x30ec>
   2efa4:	ldr	x0, [x19, #256]
   2efa8:	add	x1, x0, #0x1
   2efac:	str	x1, [x19, #256]
   2efb0:	strb	w21, [x19, x0]
   2efb4:	strb	w21, [x19, #264]
   2efb8:	add	x20, x20, #0x1
   2efbc:	cmp	x20, x22
   2efc0:	b.eq	2f000 <__asan_backtrace_create_state@@Base+0x31bc>  // b.none
   2efc4:	ldrb	w21, [x20]
   2efc8:	ldr	x0, [x19, #256]
   2efcc:	cmp	x0, #0xff
   2efd0:	b.ne	2efa4 <__asan_backtrace_create_state@@Base+0x3160>  // b.any
   2efd4:	strb	wzr, [x19, #255]
   2efd8:	ldr	x3, [x19, #272]
   2efdc:	ldr	x2, [x19, #280]
   2efe0:	mov	x1, x23
   2efe4:	mov	x0, x19
   2efe8:	blr	x3
   2efec:	str	xzr, [x19, #256]
   2eff0:	ldr	x0, [x19, #320]
   2eff4:	add	x0, x0, #0x1
   2eff8:	str	x0, [x19, #320]
   2effc:	b	2efa4 <__asan_backtrace_create_state@@Base+0x3160>
   2f000:	ldp	x21, x22, [sp, #32]
   2f004:	ldp	x23, x24, [sp, #48]
   2f008:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f00c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f010:	add	x0, x0, #0xdc8
   2f014:	bl	67e0 <__asan_internal_strlen@plt>
   2f018:	cbz	x0, 2f094 <__asan_backtrace_create_state@@Base+0x3250>
   2f01c:	stp	x25, x26, [sp, #64]
   2f020:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f024:	add	x21, x21, #0xdc8
   2f028:	add	x24, x0, x21
   2f02c:	mov	x25, #0xff                  	// #255
   2f030:	b	2f054 <__asan_backtrace_create_state@@Base+0x3210>
   2f034:	ldr	x0, [x19, #256]
   2f038:	add	x1, x0, #0x1
   2f03c:	str	x1, [x19, #256]
   2f040:	strb	w23, [x19, x0]
   2f044:	strb	w23, [x19, #264]
   2f048:	add	x21, x21, #0x1
   2f04c:	cmp	x21, x24
   2f050:	b.eq	2f090 <__asan_backtrace_create_state@@Base+0x324c>  // b.none
   2f054:	ldrb	w23, [x21]
   2f058:	ldr	x0, [x19, #256]
   2f05c:	cmp	x0, #0xff
   2f060:	b.ne	2f034 <__asan_backtrace_create_state@@Base+0x31f0>  // b.any
   2f064:	strb	wzr, [x19, #255]
   2f068:	ldr	x3, [x19, #272]
   2f06c:	ldr	x2, [x19, #280]
   2f070:	mov	x1, x25
   2f074:	mov	x0, x19
   2f078:	blr	x3
   2f07c:	str	xzr, [x19, #256]
   2f080:	ldr	x0, [x19, #320]
   2f084:	add	x0, x0, #0x1
   2f088:	str	x0, [x19, #320]
   2f08c:	b	2f034 <__asan_backtrace_create_state@@Base+0x31f0>
   2f090:	ldp	x25, x26, [sp, #64]
   2f094:	ldr	x2, [x22, #16]
   2f098:	mov	w1, w20
   2f09c:	mov	x0, x19
   2f0a0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f0a4:	ldp	x21, x22, [sp, #32]
   2f0a8:	ldp	x23, x24, [sp, #48]
   2f0ac:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f0b0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f0b4:	add	x0, x0, #0xdc8
   2f0b8:	bl	67e0 <__asan_internal_strlen@plt>
   2f0bc:	cbz	x0, 2f138 <__asan_backtrace_create_state@@Base+0x32f4>
   2f0c0:	stp	x25, x26, [sp, #64]
   2f0c4:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f0c8:	add	x21, x21, #0xdc8
   2f0cc:	add	x24, x0, x21
   2f0d0:	mov	x25, #0xff                  	// #255
   2f0d4:	b	2f0f8 <__asan_backtrace_create_state@@Base+0x32b4>
   2f0d8:	ldr	x0, [x19, #256]
   2f0dc:	add	x1, x0, #0x1
   2f0e0:	str	x1, [x19, #256]
   2f0e4:	strb	w23, [x19, x0]
   2f0e8:	strb	w23, [x19, #264]
   2f0ec:	add	x21, x21, #0x1
   2f0f0:	cmp	x21, x24
   2f0f4:	b.eq	2f134 <__asan_backtrace_create_state@@Base+0x32f0>  // b.none
   2f0f8:	ldrb	w23, [x21]
   2f0fc:	ldr	x0, [x19, #256]
   2f100:	cmp	x0, #0xff
   2f104:	b.ne	2f0d8 <__asan_backtrace_create_state@@Base+0x3294>  // b.any
   2f108:	strb	wzr, [x19, #255]
   2f10c:	ldr	x3, [x19, #272]
   2f110:	ldr	x2, [x19, #280]
   2f114:	mov	x1, x25
   2f118:	mov	x0, x19
   2f11c:	blr	x3
   2f120:	str	xzr, [x19, #256]
   2f124:	ldr	x0, [x19, #320]
   2f128:	add	x0, x0, #0x1
   2f12c:	str	x0, [x19, #320]
   2f130:	b	2f0d8 <__asan_backtrace_create_state@@Base+0x3294>
   2f134:	ldp	x25, x26, [sp, #64]
   2f138:	ldr	x0, [x19, #368]
   2f13c:	cbz	x0, 2f154 <__asan_backtrace_create_state@@Base+0x3310>
   2f140:	ldr	x1, [x19, #288]
   2f144:	str	x1, [sp, #128]
   2f148:	add	x1, sp, #0x80
   2f14c:	str	x1, [x19, #288]
   2f150:	str	x0, [sp, #136]
   2f154:	ldr	x2, [x22, #8]
   2f158:	ldr	w0, [x2]
   2f15c:	cmp	w0, #0x4
   2f160:	b.eq	2f18c <__asan_backtrace_create_state@@Base+0x3348>  // b.none
   2f164:	mov	w1, w20
   2f168:	mov	x0, x19
   2f16c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f170:	ldr	x0, [x19, #368]
   2f174:	cbz	x0, 30ed8 <__asan_backtrace_create_state@@Base+0x5094>
   2f178:	ldr	x0, [sp, #128]
   2f17c:	str	x0, [x19, #288]
   2f180:	ldp	x21, x22, [sp, #32]
   2f184:	ldp	x23, x24, [sp, #48]
   2f188:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f18c:	ldr	x2, [x2, #8]
   2f190:	mov	w1, w20
   2f194:	mov	x0, x19
   2f198:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f19c:	ldr	x0, [x19, #368]
   2f1a0:	cbz	x0, 2f1ac <__asan_backtrace_create_state@@Base+0x3368>
   2f1a4:	ldr	x0, [sp, #128]
   2f1a8:	str	x0, [x19, #288]
   2f1ac:	ldrb	w0, [x19, #264]
   2f1b0:	cmp	w0, #0x3c
   2f1b4:	b.eq	2f22c <__asan_backtrace_create_state@@Base+0x33e8>  // b.none
   2f1b8:	ldr	x0, [x19, #256]
   2f1bc:	cmp	x0, #0xff
   2f1c0:	b.eq	2f280 <__asan_backtrace_create_state@@Base+0x343c>  // b.none
   2f1c4:	ldr	x1, [x19, #256]
   2f1c8:	add	x0, x1, #0x1
   2f1cc:	str	x0, [x19, #256]
   2f1d0:	mov	w0, #0x3c                  	// #60
   2f1d4:	strb	w0, [x19, x1]
   2f1d8:	strb	w0, [x19, #264]
   2f1dc:	ldr	x0, [x22, #8]
   2f1e0:	ldr	x2, [x0, #16]
   2f1e4:	mov	w1, w20
   2f1e8:	mov	x0, x19
   2f1ec:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f1f0:	ldrb	w0, [x19, #264]
   2f1f4:	cmp	w0, #0x3e
   2f1f8:	b.eq	2f2ac <__asan_backtrace_create_state@@Base+0x3468>  // b.none
   2f1fc:	ldr	x0, [x19, #256]
   2f200:	cmp	x0, #0xff
   2f204:	b.eq	2f300 <__asan_backtrace_create_state@@Base+0x34bc>  // b.none
   2f208:	ldr	x1, [x19, #256]
   2f20c:	add	x0, x1, #0x1
   2f210:	str	x0, [x19, #256]
   2f214:	mov	w0, #0x3e                  	// #62
   2f218:	strb	w0, [x19, x1]
   2f21c:	strb	w0, [x19, #264]
   2f220:	ldp	x21, x22, [sp, #32]
   2f224:	ldp	x23, x24, [sp, #48]
   2f228:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f22c:	ldr	x0, [x19, #256]
   2f230:	cmp	x0, #0xff
   2f234:	b.eq	2f254 <__asan_backtrace_create_state@@Base+0x3410>  // b.none
   2f238:	ldr	x1, [x19, #256]
   2f23c:	add	x0, x1, #0x1
   2f240:	str	x0, [x19, #256]
   2f244:	mov	w0, #0x20                  	// #32
   2f248:	strb	w0, [x19, x1]
   2f24c:	strb	w0, [x19, #264]
   2f250:	b	2f1b8 <__asan_backtrace_create_state@@Base+0x3374>
   2f254:	strb	wzr, [x19, #255]
   2f258:	ldr	x3, [x19, #272]
   2f25c:	ldr	x2, [x19, #280]
   2f260:	mov	x1, #0xff                  	// #255
   2f264:	mov	x0, x19
   2f268:	blr	x3
   2f26c:	str	xzr, [x19, #256]
   2f270:	ldr	x0, [x19, #320]
   2f274:	add	x0, x0, #0x1
   2f278:	str	x0, [x19, #320]
   2f27c:	b	2f238 <__asan_backtrace_create_state@@Base+0x33f4>
   2f280:	strb	wzr, [x19, #255]
   2f284:	ldr	x3, [x19, #272]
   2f288:	ldr	x2, [x19, #280]
   2f28c:	mov	x1, #0xff                  	// #255
   2f290:	mov	x0, x19
   2f294:	blr	x3
   2f298:	str	xzr, [x19, #256]
   2f29c:	ldr	x0, [x19, #320]
   2f2a0:	add	x0, x0, #0x1
   2f2a4:	str	x0, [x19, #320]
   2f2a8:	b	2f1c4 <__asan_backtrace_create_state@@Base+0x3380>
   2f2ac:	ldr	x0, [x19, #256]
   2f2b0:	cmp	x0, #0xff
   2f2b4:	b.eq	2f2d4 <__asan_backtrace_create_state@@Base+0x3490>  // b.none
   2f2b8:	ldr	x1, [x19, #256]
   2f2bc:	add	x0, x1, #0x1
   2f2c0:	str	x0, [x19, #256]
   2f2c4:	mov	w0, #0x20                  	// #32
   2f2c8:	strb	w0, [x19, x1]
   2f2cc:	strb	w0, [x19, #264]
   2f2d0:	b	2f1fc <__asan_backtrace_create_state@@Base+0x33b8>
   2f2d4:	strb	wzr, [x19, #255]
   2f2d8:	ldr	x3, [x19, #272]
   2f2dc:	ldr	x2, [x19, #280]
   2f2e0:	mov	x1, #0xff                  	// #255
   2f2e4:	mov	x0, x19
   2f2e8:	blr	x3
   2f2ec:	str	xzr, [x19, #256]
   2f2f0:	ldr	x0, [x19, #320]
   2f2f4:	add	x0, x0, #0x1
   2f2f8:	str	x0, [x19, #320]
   2f2fc:	b	2f2b8 <__asan_backtrace_create_state@@Base+0x3474>
   2f300:	strb	wzr, [x19, #255]
   2f304:	ldr	x3, [x19, #272]
   2f308:	ldr	x2, [x19, #280]
   2f30c:	mov	x1, #0xff                  	// #255
   2f310:	mov	x0, x19
   2f314:	blr	x3
   2f318:	str	xzr, [x19, #256]
   2f31c:	ldr	x0, [x19, #320]
   2f320:	add	x0, x0, #0x1
   2f324:	str	x0, [x19, #320]
   2f328:	b	2f208 <__asan_backtrace_create_state@@Base+0x33c4>
   2f32c:	ldr	x2, [x22, #8]
   2f330:	mov	w1, w20
   2f334:	mov	x0, x19
   2f338:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   2f33c:	ldp	x21, x22, [sp, #32]
   2f340:	ldp	x23, x24, [sp, #48]
   2f344:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f348:	ldr	x23, [x22, #8]
   2f34c:	ldr	x21, [x22, #16]
   2f350:	ldr	w0, [x23]
   2f354:	cmp	w0, #0x32
   2f358:	b.eq	2f40c <__asan_backtrace_create_state@@Base+0x35c8>  // b.none
   2f35c:	mov	x24, #0x0                   	// #0
   2f360:	ldr	w0, [x23]
   2f364:	cmp	w0, #0x34
   2f368:	b.ne	2f548 <__asan_backtrace_create_state@@Base+0x3704>  // b.any
   2f36c:	ldr	x0, [x19, #256]
   2f370:	cmp	x0, #0xff
   2f374:	b.eq	2f55c <__asan_backtrace_create_state@@Base+0x3718>  // b.none
   2f378:	ldr	x1, [x19, #256]
   2f37c:	add	x0, x1, #0x1
   2f380:	str	x0, [x19, #256]
   2f384:	mov	w0, #0x28                  	// #40
   2f388:	strb	w0, [x19, x1]
   2f38c:	strb	w0, [x19, #264]
   2f390:	ldr	x2, [x23, #8]
   2f394:	mov	w1, w20
   2f398:	mov	x0, x19
   2f39c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f3a0:	ldr	x0, [x19, #256]
   2f3a4:	cmp	x0, #0xff
   2f3a8:	b.eq	2f588 <__asan_backtrace_create_state@@Base+0x3744>  // b.none
   2f3ac:	ldr	x1, [x19, #256]
   2f3b0:	add	x0, x1, #0x1
   2f3b4:	str	x0, [x19, #256]
   2f3b8:	mov	w0, #0x29                  	// #41
   2f3bc:	strb	w0, [x19, x1]
   2f3c0:	strb	w0, [x19, #264]
   2f3c4:	cbz	x24, 2f3f0 <__asan_backtrace_create_state@@Base+0x35ac>
   2f3c8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f3cc:	add	x1, x1, #0xde8
   2f3d0:	mov	x0, x24
   2f3d4:	bl	6b30 <__asan_internal_strcmp@plt>
   2f3d8:	cbz	w0, 2f5b4 <__asan_backtrace_create_state@@Base+0x3770>
   2f3dc:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   2f3e0:	add	x1, x1, #0x398
   2f3e4:	mov	x0, x24
   2f3e8:	bl	6b30 <__asan_internal_strcmp@plt>
   2f3ec:	cbz	w0, 2f5d0 <__asan_backtrace_create_state@@Base+0x378c>
   2f3f0:	mov	x2, x21
   2f3f4:	mov	w1, w20
   2f3f8:	mov	x0, x19
   2f3fc:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2f400:	ldp	x21, x22, [sp, #32]
   2f404:	ldp	x23, x24, [sp, #48]
   2f408:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f40c:	ldr	x0, [x23, #8]
   2f410:	ldr	x24, [x0]
   2f414:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f418:	add	x1, x1, #0xdd8
   2f41c:	mov	x0, x24
   2f420:	bl	6b30 <__asan_internal_strcmp@plt>
   2f424:	cbnz	w0, 2f434 <__asan_backtrace_create_state@@Base+0x35f0>
   2f428:	ldr	w0, [x21]
   2f42c:	cmp	w0, #0x3
   2f430:	b.eq	2f48c <__asan_backtrace_create_state@@Base+0x3648>  // b.none
   2f434:	ldr	w0, [x21]
   2f438:	cmp	w0, #0x39
   2f43c:	b.eq	2f4b0 <__asan_backtrace_create_state@@Base+0x366c>  // b.none
   2f440:	cbz	x24, 2f35c <__asan_backtrace_create_state@@Base+0x3518>
   2f444:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f448:	add	x1, x1, #0xde0
   2f44c:	mov	x0, x24
   2f450:	bl	6b30 <__asan_internal_strcmp@plt>
   2f454:	cbz	w0, 2f4dc <__asan_backtrace_create_state@@Base+0x3698>
   2f458:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f45c:	add	x1, x1, #0xee0
   2f460:	mov	x0, x24
   2f464:	bl	6b30 <__asan_internal_strcmp@plt>
   2f468:	mov	w22, w0
   2f46c:	cbnz	w0, 2f360 <__asan_backtrace_create_state@@Base+0x351c>
   2f470:	cbnz	x21, 2f520 <__asan_backtrace_create_state@@Base+0x36dc>
   2f474:	mov	w1, w22
   2f478:	mov	x0, x19
   2f47c:	bl	2c9ec <__asan_backtrace_create_state@@Base+0xba8>
   2f480:	ldp	x21, x22, [sp, #32]
   2f484:	ldp	x23, x24, [sp, #48]
   2f488:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f48c:	ldr	x0, [x21, #8]
   2f490:	ldr	w1, [x0]
   2f494:	cmp	w1, #0x1
   2f498:	b.ne	2f440 <__asan_backtrace_create_state@@Base+0x35fc>  // b.any
   2f49c:	ldr	x1, [x21, #16]
   2f4a0:	ldr	w1, [x1]
   2f4a4:	cmp	w1, #0x29
   2f4a8:	csel	x21, x21, x0, ne  // ne = any
   2f4ac:	b	2f440 <__asan_backtrace_create_state@@Base+0x35fc>
   2f4b0:	ldr	x2, [x21, #8]
   2f4b4:	mov	w1, w20
   2f4b8:	mov	x0, x19
   2f4bc:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2f4c0:	mov	x2, x23
   2f4c4:	mov	w1, w20
   2f4c8:	mov	x0, x19
   2f4cc:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   2f4d0:	ldp	x21, x22, [sp, #32]
   2f4d4:	ldp	x23, x24, [sp, #48]
   2f4d8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f4dc:	mov	x1, x21
   2f4e0:	mov	x0, x19
   2f4e4:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2f4e8:	bl	2c8dc <__asan_backtrace_create_state@@Base+0xa98>
   2f4ec:	mov	w1, w0
   2f4f0:	mov	x0, x19
   2f4f4:	bl	2c9ec <__asan_backtrace_create_state@@Base+0xba8>
   2f4f8:	ldp	x21, x22, [sp, #32]
   2f4fc:	ldp	x23, x24, [sp, #48]
   2f500:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f504:	ldr	x1, [x0, #8]
   2f508:	mov	x0, x19
   2f50c:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   2f510:	bl	2c8dc <__asan_backtrace_create_state@@Base+0xa98>
   2f514:	add	w22, w22, w0
   2f518:	ldr	x21, [x21, #16]
   2f51c:	cbz	x21, 2f474 <__asan_backtrace_create_state@@Base+0x3630>
   2f520:	ldr	w0, [x21]
   2f524:	cmp	w0, #0x2f
   2f528:	b.ne	2f474 <__asan_backtrace_create_state@@Base+0x3630>  // b.any
   2f52c:	ldr	x0, [x21, #8]
   2f530:	cbz	x0, 2f474 <__asan_backtrace_create_state@@Base+0x3630>
   2f534:	ldr	w1, [x0]
   2f538:	cmp	w1, #0x4b
   2f53c:	b.eq	2f504 <__asan_backtrace_create_state@@Base+0x36c0>  // b.none
   2f540:	add	w22, w22, #0x1
   2f544:	b	2f518 <__asan_backtrace_create_state@@Base+0x36d4>
   2f548:	mov	x2, x23
   2f54c:	mov	w1, w20
   2f550:	mov	x0, x19
   2f554:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   2f558:	b	2f3c4 <__asan_backtrace_create_state@@Base+0x3580>
   2f55c:	strb	wzr, [x19, #255]
   2f560:	ldr	x3, [x19, #272]
   2f564:	ldr	x2, [x19, #280]
   2f568:	mov	x1, #0xff                  	// #255
   2f56c:	mov	x0, x19
   2f570:	blr	x3
   2f574:	str	xzr, [x19, #256]
   2f578:	ldr	x0, [x19, #320]
   2f57c:	add	x0, x0, #0x1
   2f580:	str	x0, [x19, #320]
   2f584:	b	2f378 <__asan_backtrace_create_state@@Base+0x3534>
   2f588:	strb	wzr, [x19, #255]
   2f58c:	ldr	x3, [x19, #272]
   2f590:	ldr	x2, [x19, #280]
   2f594:	mov	x1, #0xff                  	// #255
   2f598:	mov	x0, x19
   2f59c:	blr	x3
   2f5a0:	str	xzr, [x19, #256]
   2f5a4:	ldr	x0, [x19, #320]
   2f5a8:	add	x0, x0, #0x1
   2f5ac:	str	x0, [x19, #320]
   2f5b0:	b	2f3ac <__asan_backtrace_create_state@@Base+0x3568>
   2f5b4:	mov	x2, x21
   2f5b8:	mov	w1, w20
   2f5bc:	mov	x0, x19
   2f5c0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f5c4:	ldp	x21, x22, [sp, #32]
   2f5c8:	ldp	x23, x24, [sp, #48]
   2f5cc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f5d0:	ldr	x0, [x19, #256]
   2f5d4:	cmp	x0, #0xff
   2f5d8:	b.eq	2f634 <__asan_backtrace_create_state@@Base+0x37f0>  // b.none
   2f5dc:	ldr	x1, [x19, #256]
   2f5e0:	add	x0, x1, #0x1
   2f5e4:	str	x0, [x19, #256]
   2f5e8:	mov	w0, #0x28                  	// #40
   2f5ec:	strb	w0, [x19, x1]
   2f5f0:	strb	w0, [x19, #264]
   2f5f4:	mov	x2, x21
   2f5f8:	mov	w1, w20
   2f5fc:	mov	x0, x19
   2f600:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f604:	ldr	x0, [x19, #256]
   2f608:	cmp	x0, #0xff
   2f60c:	b.eq	2f660 <__asan_backtrace_create_state@@Base+0x381c>  // b.none
   2f610:	ldr	x1, [x19, #256]
   2f614:	add	x0, x1, #0x1
   2f618:	str	x0, [x19, #256]
   2f61c:	mov	w0, #0x29                  	// #41
   2f620:	strb	w0, [x19, x1]
   2f624:	strb	w0, [x19, #264]
   2f628:	ldp	x21, x22, [sp, #32]
   2f62c:	ldp	x23, x24, [sp, #48]
   2f630:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f634:	strb	wzr, [x19, #255]
   2f638:	ldr	x3, [x19, #272]
   2f63c:	ldr	x2, [x19, #280]
   2f640:	mov	x1, #0xff                  	// #255
   2f644:	mov	x0, x19
   2f648:	blr	x3
   2f64c:	str	xzr, [x19, #256]
   2f650:	ldr	x0, [x19, #320]
   2f654:	add	x0, x0, #0x1
   2f658:	str	x0, [x19, #320]
   2f65c:	b	2f5dc <__asan_backtrace_create_state@@Base+0x3798>
   2f660:	strb	wzr, [x19, #255]
   2f664:	ldr	x3, [x19, #272]
   2f668:	ldr	x2, [x19, #280]
   2f66c:	mov	x1, #0xff                  	// #255
   2f670:	mov	x0, x19
   2f674:	blr	x3
   2f678:	str	xzr, [x19, #256]
   2f67c:	ldr	x0, [x19, #320]
   2f680:	add	x0, x0, #0x1
   2f684:	str	x0, [x19, #320]
   2f688:	b	2f610 <__asan_backtrace_create_state@@Base+0x37cc>
   2f68c:	ldr	x0, [x22, #16]
   2f690:	ldr	w0, [x0]
   2f694:	cmp	w0, #0x39
   2f698:	b.eq	2f6b0 <__asan_backtrace_create_state@@Base+0x386c>  // b.none
   2f69c:	mov	w0, #0x1                   	// #1
   2f6a0:	str	w0, [x19, #304]
   2f6a4:	ldp	x21, x22, [sp, #32]
   2f6a8:	ldp	x23, x24, [sp, #48]
   2f6ac:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f6b0:	ldr	x21, [x22, #8]
   2f6b4:	mov	x0, x21
   2f6b8:	bl	2c49c <__asan_backtrace_create_state@@Base+0x658>
   2f6bc:	cbnz	w0, 2f7bc <__asan_backtrace_create_state@@Base+0x3978>
   2f6c0:	mov	x2, x22
   2f6c4:	mov	w1, w20
   2f6c8:	mov	x0, x19
   2f6cc:	bl	32548 <__asan_backtrace_create_state@@Base+0x6704>
   2f6d0:	cbnz	w0, 30ee4 <__asan_backtrace_create_state@@Base+0x50a0>
   2f6d4:	ldr	x0, [x22, #8]
   2f6d8:	ldr	w1, [x0]
   2f6dc:	cmp	w1, #0x32
   2f6e0:	b.eq	2f928 <__asan_backtrace_create_state@@Base+0x3ae4>  // b.none
   2f6e4:	ldr	x0, [x22, #8]
   2f6e8:	ldr	x0, [x0, #8]
   2f6ec:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f6f0:	add	x1, x1, #0xdf8
   2f6f4:	ldr	x0, [x0]
   2f6f8:	bl	6b30 <__asan_internal_strcmp@plt>
   2f6fc:	cbnz	w0, 2f714 <__asan_backtrace_create_state@@Base+0x38d0>
   2f700:	ldr	x0, [x22, #16]
   2f704:	ldr	x0, [x0, #8]
   2f708:	ldr	w1, [x0]
   2f70c:	cmp	w1, #0x3
   2f710:	b.eq	2f99c <__asan_backtrace_create_state@@Base+0x3b58>  // b.none
   2f714:	ldr	x0, [x22, #16]
   2f718:	ldr	x2, [x0, #8]
   2f71c:	mov	w1, w20
   2f720:	mov	x0, x19
   2f724:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2f728:	ldr	x0, [x22, #8]
   2f72c:	ldr	x0, [x0, #8]
   2f730:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f734:	add	x1, x1, #0xe00
   2f738:	ldr	x0, [x0]
   2f73c:	bl	6b30 <__asan_internal_strcmp@plt>
   2f740:	cbnz	w0, 2fa20 <__asan_backtrace_create_state@@Base+0x3bdc>
   2f744:	ldr	x0, [x19, #256]
   2f748:	cmp	x0, #0xff
   2f74c:	b.eq	2f9c8 <__asan_backtrace_create_state@@Base+0x3b84>  // b.none
   2f750:	ldr	x1, [x19, #256]
   2f754:	add	x0, x1, #0x1
   2f758:	str	x0, [x19, #256]
   2f75c:	mov	w0, #0x5b                  	// #91
   2f760:	strb	w0, [x19, x1]
   2f764:	strb	w0, [x19, #264]
   2f768:	ldr	x0, [x22, #16]
   2f76c:	ldr	x2, [x0, #16]
   2f770:	mov	w1, w20
   2f774:	mov	x0, x19
   2f778:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f77c:	ldr	x0, [x19, #256]
   2f780:	cmp	x0, #0xff
   2f784:	b.eq	2f9f4 <__asan_backtrace_create_state@@Base+0x3bb0>  // b.none
   2f788:	ldr	x1, [x19, #256]
   2f78c:	add	x0, x1, #0x1
   2f790:	str	x0, [x19, #256]
   2f794:	mov	w0, #0x5d                  	// #93
   2f798:	strb	w0, [x19, x1]
   2f79c:	strb	w0, [x19, #264]
   2f7a0:	ldr	x0, [x22, #8]
   2f7a4:	ldr	w1, [x0]
   2f7a8:	cmp	w1, #0x32
   2f7ac:	b.eq	2fa68 <__asan_backtrace_create_state@@Base+0x3c24>  // b.none
   2f7b0:	ldp	x21, x22, [sp, #32]
   2f7b4:	ldp	x23, x24, [sp, #48]
   2f7b8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f7bc:	mov	x2, x21
   2f7c0:	mov	w1, w20
   2f7c4:	mov	x0, x19
   2f7c8:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   2f7cc:	ldr	x0, [x19, #256]
   2f7d0:	cmp	x0, #0xff
   2f7d4:	b.eq	2f82c <__asan_backtrace_create_state@@Base+0x39e8>  // b.none
   2f7d8:	ldr	x1, [x19, #256]
   2f7dc:	add	x0, x1, #0x1
   2f7e0:	str	x0, [x19, #256]
   2f7e4:	mov	w0, #0x3c                  	// #60
   2f7e8:	strb	w0, [x19, x1]
   2f7ec:	strb	w0, [x19, #264]
   2f7f0:	ldr	x0, [x22, #16]
   2f7f4:	ldr	x2, [x0, #8]
   2f7f8:	mov	w1, w20
   2f7fc:	mov	x0, x19
   2f800:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f804:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f808:	add	x0, x0, #0xdf0
   2f80c:	bl	67e0 <__asan_internal_strlen@plt>
   2f810:	cbz	x0, 2f8b8 <__asan_backtrace_create_state@@Base+0x3a74>
   2f814:	stp	x25, x26, [sp, #64]
   2f818:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2f81c:	add	x21, x21, #0xdf0
   2f820:	add	x24, x0, x21
   2f824:	mov	x25, #0xff                  	// #255
   2f828:	b	2f878 <__asan_backtrace_create_state@@Base+0x3a34>
   2f82c:	strb	wzr, [x19, #255]
   2f830:	ldr	x3, [x19, #272]
   2f834:	ldr	x2, [x19, #280]
   2f838:	mov	x1, #0xff                  	// #255
   2f83c:	mov	x0, x19
   2f840:	blr	x3
   2f844:	str	xzr, [x19, #256]
   2f848:	ldr	x0, [x19, #320]
   2f84c:	add	x0, x0, #0x1
   2f850:	str	x0, [x19, #320]
   2f854:	b	2f7d8 <__asan_backtrace_create_state@@Base+0x3994>
   2f858:	ldr	x0, [x19, #256]
   2f85c:	add	x1, x0, #0x1
   2f860:	str	x1, [x19, #256]
   2f864:	strb	w23, [x19, x0]
   2f868:	strb	w23, [x19, #264]
   2f86c:	add	x21, x21, #0x1
   2f870:	cmp	x21, x24
   2f874:	b.eq	2f8b4 <__asan_backtrace_create_state@@Base+0x3a70>  // b.none
   2f878:	ldrb	w23, [x21]
   2f87c:	ldr	x0, [x19, #256]
   2f880:	cmp	x0, #0xff
   2f884:	b.ne	2f858 <__asan_backtrace_create_state@@Base+0x3a14>  // b.any
   2f888:	strb	wzr, [x19, #255]
   2f88c:	ldr	x3, [x19, #272]
   2f890:	ldr	x2, [x19, #280]
   2f894:	mov	x1, x25
   2f898:	mov	x0, x19
   2f89c:	blr	x3
   2f8a0:	str	xzr, [x19, #256]
   2f8a4:	ldr	x0, [x19, #320]
   2f8a8:	add	x0, x0, #0x1
   2f8ac:	str	x0, [x19, #320]
   2f8b0:	b	2f858 <__asan_backtrace_create_state@@Base+0x3a14>
   2f8b4:	ldp	x25, x26, [sp, #64]
   2f8b8:	ldr	x0, [x22, #16]
   2f8bc:	ldr	x2, [x0, #16]
   2f8c0:	mov	w1, w20
   2f8c4:	mov	x0, x19
   2f8c8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2f8cc:	ldr	x0, [x19, #256]
   2f8d0:	cmp	x0, #0xff
   2f8d4:	b.eq	2f8fc <__asan_backtrace_create_state@@Base+0x3ab8>  // b.none
   2f8d8:	ldr	x1, [x19, #256]
   2f8dc:	add	x0, x1, #0x1
   2f8e0:	str	x0, [x19, #256]
   2f8e4:	mov	w0, #0x29                  	// #41
   2f8e8:	strb	w0, [x19, x1]
   2f8ec:	strb	w0, [x19, #264]
   2f8f0:	ldp	x21, x22, [sp, #32]
   2f8f4:	ldp	x23, x24, [sp, #48]
   2f8f8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2f8fc:	strb	wzr, [x19, #255]
   2f900:	ldr	x3, [x19, #272]
   2f904:	ldr	x2, [x19, #280]
   2f908:	mov	x1, #0xff                  	// #255
   2f90c:	mov	x0, x19
   2f910:	blr	x3
   2f914:	str	xzr, [x19, #256]
   2f918:	ldr	x0, [x19, #320]
   2f91c:	add	x0, x0, #0x1
   2f920:	str	x0, [x19, #320]
   2f924:	b	2f8d8 <__asan_backtrace_create_state@@Base+0x3a94>
   2f928:	ldr	x0, [x0, #8]
   2f92c:	ldr	w1, [x0, #16]
   2f930:	cmp	w1, #0x1
   2f934:	b.ne	2f6e4 <__asan_backtrace_create_state@@Base+0x38a0>  // b.any
   2f938:	ldr	x0, [x0, #8]
   2f93c:	ldrb	w0, [x0]
   2f940:	cmp	w0, #0x3e
   2f944:	b.ne	2f6e4 <__asan_backtrace_create_state@@Base+0x38a0>  // b.any
   2f948:	ldr	x0, [x19, #256]
   2f94c:	cmp	x0, #0xff
   2f950:	b.eq	2f970 <__asan_backtrace_create_state@@Base+0x3b2c>  // b.none
   2f954:	ldr	x1, [x19, #256]
   2f958:	add	x0, x1, #0x1
   2f95c:	str	x0, [x19, #256]
   2f960:	mov	w0, #0x28                  	// #40
   2f964:	strb	w0, [x19, x1]
   2f968:	strb	w0, [x19, #264]
   2f96c:	b	2f6e4 <__asan_backtrace_create_state@@Base+0x38a0>
   2f970:	strb	wzr, [x19, #255]
   2f974:	ldr	x3, [x19, #272]
   2f978:	ldr	x2, [x19, #280]
   2f97c:	mov	x1, #0xff                  	// #255
   2f980:	mov	x0, x19
   2f984:	blr	x3
   2f988:	str	xzr, [x19, #256]
   2f98c:	ldr	x0, [x19, #320]
   2f990:	add	x0, x0, #0x1
   2f994:	str	x0, [x19, #320]
   2f998:	b	2f954 <__asan_backtrace_create_state@@Base+0x3b10>
   2f99c:	ldr	x1, [x0, #16]
   2f9a0:	ldr	w1, [x1]
   2f9a4:	cmp	w1, #0x29
   2f9a8:	b.eq	2f9b4 <__asan_backtrace_create_state@@Base+0x3b70>  // b.none
   2f9ac:	mov	w1, #0x1                   	// #1
   2f9b0:	str	w1, [x19, #304]
   2f9b4:	ldr	x2, [x0, #8]
   2f9b8:	mov	w1, w20
   2f9bc:	mov	x0, x19
   2f9c0:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2f9c4:	b	2f728 <__asan_backtrace_create_state@@Base+0x38e4>
   2f9c8:	strb	wzr, [x19, #255]
   2f9cc:	ldr	x3, [x19, #272]
   2f9d0:	ldr	x2, [x19, #280]
   2f9d4:	mov	x1, #0xff                  	// #255
   2f9d8:	mov	x0, x19
   2f9dc:	blr	x3
   2f9e0:	str	xzr, [x19, #256]
   2f9e4:	ldr	x0, [x19, #320]
   2f9e8:	add	x0, x0, #0x1
   2f9ec:	str	x0, [x19, #320]
   2f9f0:	b	2f750 <__asan_backtrace_create_state@@Base+0x390c>
   2f9f4:	strb	wzr, [x19, #255]
   2f9f8:	ldr	x3, [x19, #272]
   2f9fc:	ldr	x2, [x19, #280]
   2fa00:	mov	x1, #0xff                  	// #255
   2fa04:	mov	x0, x19
   2fa08:	blr	x3
   2fa0c:	str	xzr, [x19, #256]
   2fa10:	ldr	x0, [x19, #320]
   2fa14:	add	x0, x0, #0x1
   2fa18:	str	x0, [x19, #320]
   2fa1c:	b	2f788 <__asan_backtrace_create_state@@Base+0x3944>
   2fa20:	ldr	x0, [x22, #8]
   2fa24:	ldr	x0, [x0, #8]
   2fa28:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2fa2c:	add	x1, x1, #0xdf8
   2fa30:	ldr	x0, [x0]
   2fa34:	bl	6b30 <__asan_internal_strcmp@plt>
   2fa38:	cbnz	w0, 2fa54 <__asan_backtrace_create_state@@Base+0x3c10>
   2fa3c:	ldr	x0, [x22, #16]
   2fa40:	ldr	x2, [x0, #16]
   2fa44:	mov	w1, w20
   2fa48:	mov	x0, x19
   2fa4c:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2fa50:	b	2f7a0 <__asan_backtrace_create_state@@Base+0x395c>
   2fa54:	ldr	x2, [x22, #8]
   2fa58:	mov	w1, w20
   2fa5c:	mov	x0, x19
   2fa60:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   2fa64:	b	2fa3c <__asan_backtrace_create_state@@Base+0x3bf8>
   2fa68:	ldr	x0, [x0, #8]
   2fa6c:	ldr	w1, [x0, #16]
   2fa70:	cmp	w1, #0x1
   2fa74:	b.eq	2fa84 <__asan_backtrace_create_state@@Base+0x3c40>  // b.none
   2fa78:	ldp	x21, x22, [sp, #32]
   2fa7c:	ldp	x23, x24, [sp, #48]
   2fa80:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fa84:	ldr	x0, [x0, #8]
   2fa88:	ldrb	w0, [x0]
   2fa8c:	cmp	w0, #0x3e
   2fa90:	b.eq	2faa0 <__asan_backtrace_create_state@@Base+0x3c5c>  // b.none
   2fa94:	ldp	x21, x22, [sp, #32]
   2fa98:	ldp	x23, x24, [sp, #48]
   2fa9c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2faa0:	ldr	x0, [x19, #256]
   2faa4:	cmp	x0, #0xff
   2faa8:	b.eq	2fad0 <__asan_backtrace_create_state@@Base+0x3c8c>  // b.none
   2faac:	ldr	x1, [x19, #256]
   2fab0:	add	x0, x1, #0x1
   2fab4:	str	x0, [x19, #256]
   2fab8:	mov	w0, #0x29                  	// #41
   2fabc:	strb	w0, [x19, x1]
   2fac0:	strb	w0, [x19, #264]
   2fac4:	ldp	x21, x22, [sp, #32]
   2fac8:	ldp	x23, x24, [sp, #48]
   2facc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fad0:	strb	wzr, [x19, #255]
   2fad4:	ldr	x3, [x19, #272]
   2fad8:	ldr	x2, [x19, #280]
   2fadc:	mov	x1, #0xff                  	// #255
   2fae0:	mov	x0, x19
   2fae4:	blr	x3
   2fae8:	str	xzr, [x19, #256]
   2faec:	ldr	x0, [x19, #320]
   2faf0:	add	x0, x0, #0x1
   2faf4:	str	x0, [x19, #320]
   2faf8:	b	2faac <__asan_backtrace_create_state@@Base+0x3c68>
   2fafc:	mov	w0, #0x1                   	// #1
   2fb00:	str	w0, [x19, #304]
   2fb04:	ldp	x21, x22, [sp, #32]
   2fb08:	ldp	x23, x24, [sp, #48]
   2fb0c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fb10:	ldr	x0, [x22, #16]
   2fb14:	ldr	w1, [x0]
   2fb18:	cmp	w1, #0x3b
   2fb1c:	b.ne	2fb30 <__asan_backtrace_create_state@@Base+0x3cec>  // b.any
   2fb20:	ldr	x0, [x0, #16]
   2fb24:	ldr	w0, [x0]
   2fb28:	cmp	w0, #0x3c
   2fb2c:	b.eq	2fb44 <__asan_backtrace_create_state@@Base+0x3d00>  // b.none
   2fb30:	mov	w0, #0x1                   	// #1
   2fb34:	str	w0, [x19, #304]
   2fb38:	ldp	x21, x22, [sp, #32]
   2fb3c:	ldp	x23, x24, [sp, #48]
   2fb40:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fb44:	mov	x2, x22
   2fb48:	mov	w1, w20
   2fb4c:	mov	x0, x19
   2fb50:	bl	32548 <__asan_backtrace_create_state@@Base+0x6704>
   2fb54:	cbz	w0, 2fb64 <__asan_backtrace_create_state@@Base+0x3d20>
   2fb58:	ldp	x21, x22, [sp, #32]
   2fb5c:	ldp	x23, x24, [sp, #48]
   2fb60:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fb64:	ldr	x21, [x22, #8]
   2fb68:	ldr	x0, [x22, #16]
   2fb6c:	ldr	x23, [x0, #8]
   2fb70:	ldr	x0, [x0, #16]
   2fb74:	ldr	x24, [x0, #8]
   2fb78:	ldr	x22, [x0, #16]
   2fb7c:	ldr	x0, [x21, #8]
   2fb80:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2fb84:	add	x1, x1, #0xe08
   2fb88:	ldr	x0, [x0]
   2fb8c:	bl	6b30 <__asan_internal_strcmp@plt>
   2fb90:	cbnz	w0, 2fc00 <__asan_backtrace_create_state@@Base+0x3dbc>
   2fb94:	mov	x2, x23
   2fb98:	mov	w1, w20
   2fb9c:	mov	x0, x19
   2fba0:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2fba4:	mov	x2, x21
   2fba8:	mov	w1, w20
   2fbac:	mov	x0, x19
   2fbb0:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   2fbb4:	mov	x2, x24
   2fbb8:	mov	w1, w20
   2fbbc:	mov	x0, x19
   2fbc0:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2fbc4:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2fbc8:	add	x21, x21, #0xe10
   2fbcc:	mov	x0, x21
   2fbd0:	bl	67e0 <__asan_internal_strlen@plt>
   2fbd4:	mov	x2, x0
   2fbd8:	mov	x1, x21
   2fbdc:	mov	x0, x19
   2fbe0:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2fbe4:	mov	x2, x22
   2fbe8:	mov	w1, w20
   2fbec:	mov	x0, x19
   2fbf0:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2fbf4:	ldp	x21, x22, [sp, #32]
   2fbf8:	ldp	x23, x24, [sp, #48]
   2fbfc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fc00:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2fc04:	add	x21, x21, #0xe18
   2fc08:	mov	x0, x21
   2fc0c:	bl	67e0 <__asan_internal_strlen@plt>
   2fc10:	mov	x2, x0
   2fc14:	mov	x1, x21
   2fc18:	mov	x0, x19
   2fc1c:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2fc20:	ldr	x0, [x23, #8]
   2fc24:	cbz	x0, 2fc5c <__asan_backtrace_create_state@@Base+0x3e18>
   2fc28:	mov	x2, x23
   2fc2c:	mov	w1, w20
   2fc30:	mov	x0, x19
   2fc34:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2fc38:	ldr	x0, [x19, #256]
   2fc3c:	cmp	x0, #0xff
   2fc40:	b.eq	2fc8c <__asan_backtrace_create_state@@Base+0x3e48>  // b.none
   2fc44:	ldr	x1, [x19, #256]
   2fc48:	add	x0, x1, #0x1
   2fc4c:	str	x0, [x19, #256]
   2fc50:	mov	w0, #0x20                  	// #32
   2fc54:	strb	w0, [x19, x1]
   2fc58:	strb	w0, [x19, #264]
   2fc5c:	mov	x2, x24
   2fc60:	mov	w1, w20
   2fc64:	mov	x0, x19
   2fc68:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2fc6c:	cbz	x22, 30ef0 <__asan_backtrace_create_state@@Base+0x50ac>
   2fc70:	mov	x2, x22
   2fc74:	mov	w1, w20
   2fc78:	mov	x0, x19
   2fc7c:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   2fc80:	ldp	x21, x22, [sp, #32]
   2fc84:	ldp	x23, x24, [sp, #48]
   2fc88:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fc8c:	strb	wzr, [x19, #255]
   2fc90:	ldr	x3, [x19, #272]
   2fc94:	ldr	x2, [x19, #280]
   2fc98:	mov	x1, #0xff                  	// #255
   2fc9c:	mov	x0, x19
   2fca0:	blr	x3
   2fca4:	str	xzr, [x19, #256]
   2fca8:	ldr	x0, [x19, #320]
   2fcac:	add	x0, x0, #0x1
   2fcb0:	str	x0, [x19, #320]
   2fcb4:	b	2fc44 <__asan_backtrace_create_state@@Base+0x3e00>
   2fcb8:	mov	w0, #0x1                   	// #1
   2fcbc:	str	w0, [x19, #304]
   2fcc0:	ldp	x21, x22, [sp, #32]
   2fcc4:	ldp	x23, x24, [sp, #48]
   2fcc8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fccc:	ldr	x1, [x22, #8]
   2fcd0:	ldr	w2, [x1]
   2fcd4:	mov	w21, #0x0                   	// #0
   2fcd8:	cmp	w2, #0x27
   2fcdc:	b.eq	2fd64 <__asan_backtrace_create_state@@Base+0x3f20>  // b.none
   2fce0:	ldr	x0, [x19, #256]
   2fce4:	cmp	x0, #0xff
   2fce8:	b.eq	2fff0 <__asan_backtrace_create_state@@Base+0x41ac>  // b.none
   2fcec:	ldr	x1, [x19, #256]
   2fcf0:	add	x0, x1, #0x1
   2fcf4:	str	x0, [x19, #256]
   2fcf8:	mov	w0, #0x28                  	// #40
   2fcfc:	strb	w0, [x19, x1]
   2fd00:	strb	w0, [x19, #264]
   2fd04:	ldr	x2, [x22, #8]
   2fd08:	mov	w1, w20
   2fd0c:	mov	x0, x19
   2fd10:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2fd14:	ldr	x0, [x19, #256]
   2fd18:	cmp	x0, #0xff
   2fd1c:	b.eq	3001c <__asan_backtrace_create_state@@Base+0x41d8>  // b.none
   2fd20:	add	x2, x0, #0x1
   2fd24:	str	x2, [x19, #256]
   2fd28:	mov	w1, #0x29                  	// #41
   2fd2c:	strb	w1, [x19, x0]
   2fd30:	strb	w1, [x19, #264]
   2fd34:	ldr	w0, [x22]
   2fd38:	cmp	w0, #0x3e
   2fd3c:	b.eq	3006c <__asan_backtrace_create_state@@Base+0x4228>  // b.none
   2fd40:	cmp	w21, #0x8
   2fd44:	b.eq	300b8 <__asan_backtrace_create_state@@Base+0x4274>  // b.none
   2fd48:	ldr	x2, [x22, #16]
   2fd4c:	mov	w1, w20
   2fd50:	mov	x0, x19
   2fd54:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2fd58:	ldp	x21, x22, [sp, #32]
   2fd5c:	ldp	x23, x24, [sp, #48]
   2fd60:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fd64:	ldr	x1, [x1, #8]
   2fd68:	ldr	w21, [x1, #28]
   2fd6c:	cmp	w21, #0x6
   2fd70:	b.ls	2fddc <__asan_backtrace_create_state@@Base+0x3f98>  // b.plast
   2fd74:	cmp	w21, #0x7
   2fd78:	b.ne	2fce0 <__asan_backtrace_create_state@@Base+0x3e9c>  // b.any
   2fd7c:	ldr	x1, [x22, #16]
   2fd80:	ldr	w2, [x1]
   2fd84:	cbnz	w2, 2fce0 <__asan_backtrace_create_state@@Base+0x3e9c>
   2fd88:	ldr	w2, [x1, #16]
   2fd8c:	cmp	w0, #0x3d
   2fd90:	ccmp	w2, #0x1, #0x0, eq  // eq = none
   2fd94:	b.ne	2fce0 <__asan_backtrace_create_state@@Base+0x3e9c>  // b.any
   2fd98:	ldr	x0, [x1, #8]
   2fd9c:	ldrb	w0, [x0]
   2fda0:	cmp	w0, #0x30
   2fda4:	b.eq	2ffc4 <__asan_backtrace_create_state@@Base+0x4180>  // b.none
   2fda8:	cmp	w0, #0x31
   2fdac:	b.ne	2fce0 <__asan_backtrace_create_state@@Base+0x3e9c>  // b.any
   2fdb0:	adrp	x20, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2fdb4:	add	x20, x20, #0x480
   2fdb8:	mov	x0, x20
   2fdbc:	bl	67e0 <__asan_internal_strlen@plt>
   2fdc0:	mov	x2, x0
   2fdc4:	mov	x1, x20
   2fdc8:	mov	x0, x19
   2fdcc:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2fdd0:	ldp	x21, x22, [sp, #32]
   2fdd4:	ldp	x23, x24, [sp, #48]
   2fdd8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fddc:	cbz	w21, 2fce0 <__asan_backtrace_create_state@@Base+0x3e9c>
   2fde0:	ldr	x1, [x22, #16]
   2fde4:	ldr	w1, [x1]
   2fde8:	cbnz	w1, 2fce0 <__asan_backtrace_create_state@@Base+0x3e9c>
   2fdec:	cmp	w0, #0x3e
   2fdf0:	b.eq	2fe44 <__asan_backtrace_create_state@@Base+0x4000>  // b.none
   2fdf4:	ldr	x2, [x22, #16]
   2fdf8:	mov	w1, w20
   2fdfc:	mov	x0, x19
   2fe00:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   2fe04:	cmp	w21, #0x4
   2fe08:	b.eq	2ff6c <__asan_backtrace_create_state@@Base+0x4128>  // b.none
   2fe0c:	b.ls	2fe98 <__asan_backtrace_create_state@@Base+0x4054>  // b.plast
   2fe10:	cmp	w21, #0x5
   2fe14:	b.eq	2ff98 <__asan_backtrace_create_state@@Base+0x4154>  // b.none
   2fe18:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2fe1c:	add	x20, x20, #0xe30
   2fe20:	mov	x0, x20
   2fe24:	bl	67e0 <__asan_internal_strlen@plt>
   2fe28:	mov	x2, x0
   2fe2c:	mov	x1, x20
   2fe30:	mov	x0, x19
   2fe34:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2fe38:	ldp	x21, x22, [sp, #32]
   2fe3c:	ldp	x23, x24, [sp, #48]
   2fe40:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fe44:	ldr	x0, [x19, #256]
   2fe48:	cmp	x0, #0xff
   2fe4c:	b.eq	2fe6c <__asan_backtrace_create_state@@Base+0x4028>  // b.none
   2fe50:	ldr	x1, [x19, #256]
   2fe54:	add	x0, x1, #0x1
   2fe58:	str	x0, [x19, #256]
   2fe5c:	mov	w0, #0x2d                  	// #45
   2fe60:	strb	w0, [x19, x1]
   2fe64:	strb	w0, [x19, #264]
   2fe68:	b	2fdf4 <__asan_backtrace_create_state@@Base+0x3fb0>
   2fe6c:	strb	wzr, [x19, #255]
   2fe70:	ldr	x3, [x19, #272]
   2fe74:	ldr	x2, [x19, #280]
   2fe78:	mov	x1, #0xff                  	// #255
   2fe7c:	mov	x0, x19
   2fe80:	blr	x3
   2fe84:	str	xzr, [x19, #256]
   2fe88:	ldr	x0, [x19, #320]
   2fe8c:	add	x0, x0, #0x1
   2fe90:	str	x0, [x19, #320]
   2fe94:	b	2fe50 <__asan_backtrace_create_state@@Base+0x400c>
   2fe98:	cmp	w21, #0x2
   2fe9c:	b.eq	2fee4 <__asan_backtrace_create_state@@Base+0x40a0>  // b.none
   2fea0:	cmp	w21, #0x3
   2fea4:	b.ne	2fed8 <__asan_backtrace_create_state@@Base+0x4094>  // b.any
   2fea8:	ldr	x0, [x19, #256]
   2feac:	cmp	x0, #0xff
   2feb0:	b.eq	2ff40 <__asan_backtrace_create_state@@Base+0x40fc>  // b.none
   2feb4:	ldr	x1, [x19, #256]
   2feb8:	add	x0, x1, #0x1
   2febc:	str	x0, [x19, #256]
   2fec0:	mov	w0, #0x6c                  	// #108
   2fec4:	strb	w0, [x19, x1]
   2fec8:	strb	w0, [x19, #264]
   2fecc:	ldp	x21, x22, [sp, #32]
   2fed0:	ldp	x23, x24, [sp, #48]
   2fed4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fed8:	ldp	x21, x22, [sp, #32]
   2fedc:	ldp	x23, x24, [sp, #48]
   2fee0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fee4:	ldr	x0, [x19, #256]
   2fee8:	cmp	x0, #0xff
   2feec:	b.eq	2ff14 <__asan_backtrace_create_state@@Base+0x40d0>  // b.none
   2fef0:	ldr	x1, [x19, #256]
   2fef4:	add	x0, x1, #0x1
   2fef8:	str	x0, [x19, #256]
   2fefc:	mov	w0, #0x75                  	// #117
   2ff00:	strb	w0, [x19, x1]
   2ff04:	strb	w0, [x19, #264]
   2ff08:	ldp	x21, x22, [sp, #32]
   2ff0c:	ldp	x23, x24, [sp, #48]
   2ff10:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ff14:	strb	wzr, [x19, #255]
   2ff18:	ldr	x3, [x19, #272]
   2ff1c:	ldr	x2, [x19, #280]
   2ff20:	mov	x1, #0xff                  	// #255
   2ff24:	mov	x0, x19
   2ff28:	blr	x3
   2ff2c:	str	xzr, [x19, #256]
   2ff30:	ldr	x0, [x19, #320]
   2ff34:	add	x0, x0, #0x1
   2ff38:	str	x0, [x19, #320]
   2ff3c:	b	2fef0 <__asan_backtrace_create_state@@Base+0x40ac>
   2ff40:	strb	wzr, [x19, #255]
   2ff44:	ldr	x3, [x19, #272]
   2ff48:	ldr	x2, [x19, #280]
   2ff4c:	mov	x1, #0xff                  	// #255
   2ff50:	mov	x0, x19
   2ff54:	blr	x3
   2ff58:	str	xzr, [x19, #256]
   2ff5c:	ldr	x0, [x19, #320]
   2ff60:	add	x0, x0, #0x1
   2ff64:	str	x0, [x19, #320]
   2ff68:	b	2feb4 <__asan_backtrace_create_state@@Base+0x4070>
   2ff6c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ff70:	add	x20, x20, #0xe20
   2ff74:	mov	x0, x20
   2ff78:	bl	67e0 <__asan_internal_strlen@plt>
   2ff7c:	mov	x2, x0
   2ff80:	mov	x1, x20
   2ff84:	mov	x0, x19
   2ff88:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2ff8c:	ldp	x21, x22, [sp, #32]
   2ff90:	ldp	x23, x24, [sp, #48]
   2ff94:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ff98:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   2ff9c:	add	x20, x20, #0xe28
   2ffa0:	mov	x0, x20
   2ffa4:	bl	67e0 <__asan_internal_strlen@plt>
   2ffa8:	mov	x2, x0
   2ffac:	mov	x1, x20
   2ffb0:	mov	x0, x19
   2ffb4:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2ffb8:	ldp	x21, x22, [sp, #32]
   2ffbc:	ldp	x23, x24, [sp, #48]
   2ffc0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2ffc4:	adrp	x20, 3a000 <__asan_backtrace_release_view@@Base+0x74>
   2ffc8:	add	x20, x20, #0x468
   2ffcc:	mov	x0, x20
   2ffd0:	bl	67e0 <__asan_internal_strlen@plt>
   2ffd4:	mov	x2, x0
   2ffd8:	mov	x1, x20
   2ffdc:	mov	x0, x19
   2ffe0:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   2ffe4:	ldp	x21, x22, [sp, #32]
   2ffe8:	ldp	x23, x24, [sp, #48]
   2ffec:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   2fff0:	strb	wzr, [x19, #255]
   2fff4:	ldr	x3, [x19, #272]
   2fff8:	ldr	x2, [x19, #280]
   2fffc:	mov	x1, #0xff                  	// #255
   30000:	mov	x0, x19
   30004:	blr	x3
   30008:	str	xzr, [x19, #256]
   3000c:	ldr	x0, [x19, #320]
   30010:	add	x0, x0, #0x1
   30014:	str	x0, [x19, #320]
   30018:	b	2fcec <__asan_backtrace_create_state@@Base+0x3ea8>
   3001c:	strb	wzr, [x19, #255]
   30020:	ldr	x3, [x19, #272]
   30024:	ldr	x2, [x19, #280]
   30028:	mov	x1, #0xff                  	// #255
   3002c:	mov	x0, x19
   30030:	blr	x3
   30034:	ldr	x0, [x19, #320]
   30038:	add	x0, x0, #0x1
   3003c:	str	x0, [x19, #320]
   30040:	mov	x0, #0x1                   	// #1
   30044:	str	x0, [x19, #256]
   30048:	mov	w0, #0x29                  	// #41
   3004c:	strb	w0, [x19]
   30050:	strb	w0, [x19, #264]
   30054:	ldr	w0, [x22]
   30058:	cmp	w0, #0x3e
   3005c:	b.eq	3009c <__asan_backtrace_create_state@@Base+0x4258>  // b.none
   30060:	cmp	w21, #0x8
   30064:	b.ne	2fd48 <__asan_backtrace_create_state@@Base+0x3f04>  // b.any
   30068:	b	300c4 <__asan_backtrace_create_state@@Base+0x4280>
   3006c:	cmp	x2, #0xff
   30070:	b.ne	3009c <__asan_backtrace_create_state@@Base+0x4258>  // b.any
   30074:	strb	wzr, [x19, #255]
   30078:	ldr	x3, [x19, #272]
   3007c:	ldr	x2, [x19, #280]
   30080:	mov	x1, #0xff                  	// #255
   30084:	mov	x0, x19
   30088:	blr	x3
   3008c:	str	xzr, [x19, #256]
   30090:	ldr	x0, [x19, #320]
   30094:	add	x0, x0, #0x1
   30098:	str	x0, [x19, #320]
   3009c:	ldr	x1, [x19, #256]
   300a0:	add	x0, x1, #0x1
   300a4:	str	x0, [x19, #256]
   300a8:	mov	w0, #0x2d                  	// #45
   300ac:	strb	w0, [x19, x1]
   300b0:	strb	w0, [x19, #264]
   300b4:	b	2fd40 <__asan_backtrace_create_state@@Base+0x3efc>
   300b8:	ldr	x0, [x19, #256]
   300bc:	cmp	x0, #0xff
   300c0:	b.eq	3011c <__asan_backtrace_create_state@@Base+0x42d8>  // b.none
   300c4:	ldr	x1, [x19, #256]
   300c8:	add	x0, x1, #0x1
   300cc:	str	x0, [x19, #256]
   300d0:	mov	w0, #0x5b                  	// #91
   300d4:	strb	w0, [x19, x1]
   300d8:	strb	w0, [x19, #264]
   300dc:	ldr	x2, [x22, #16]
   300e0:	mov	w1, w20
   300e4:	mov	x0, x19
   300e8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   300ec:	ldr	x0, [x19, #256]
   300f0:	cmp	x0, #0xff
   300f4:	b.eq	30148 <__asan_backtrace_create_state@@Base+0x4304>  // b.none
   300f8:	ldr	x1, [x19, #256]
   300fc:	add	x0, x1, #0x1
   30100:	str	x0, [x19, #256]
   30104:	mov	w0, #0x5d                  	// #93
   30108:	strb	w0, [x19, x1]
   3010c:	strb	w0, [x19, #264]
   30110:	ldp	x21, x22, [sp, #32]
   30114:	ldp	x23, x24, [sp, #48]
   30118:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   3011c:	strb	wzr, [x19, #255]
   30120:	ldr	x3, [x19, #272]
   30124:	ldr	x2, [x19, #280]
   30128:	mov	x1, #0xff                  	// #255
   3012c:	mov	x0, x19
   30130:	blr	x3
   30134:	str	xzr, [x19, #256]
   30138:	ldr	x0, [x19, #320]
   3013c:	add	x0, x0, #0x1
   30140:	str	x0, [x19, #320]
   30144:	b	300c4 <__asan_backtrace_create_state@@Base+0x4280>
   30148:	strb	wzr, [x19, #255]
   3014c:	ldr	x3, [x19, #272]
   30150:	ldr	x2, [x19, #280]
   30154:	mov	x1, #0xff                  	// #255
   30158:	mov	x0, x19
   3015c:	blr	x3
   30160:	str	xzr, [x19, #256]
   30164:	ldr	x0, [x19, #320]
   30168:	add	x0, x0, #0x1
   3016c:	str	x0, [x19, #320]
   30170:	b	300f8 <__asan_backtrace_create_state@@Base+0x42b4>
   30174:	add	x20, sp, #0x80
   30178:	ldr	w2, [x22, #8]
   3017c:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   30180:	add	x1, x1, #0x48
   30184:	mov	x0, x20
   30188:	bl	6900 <sprintf@plt>
   3018c:	mov	x0, x20
   30190:	bl	67e0 <__asan_internal_strlen@plt>
   30194:	cbz	x0, 30efc <__asan_backtrace_create_state@@Base+0x50b8>
   30198:	add	x20, sp, #0x80
   3019c:	add	x22, x0, x20
   301a0:	mov	x23, #0xff                  	// #255
   301a4:	b	301c8 <__asan_backtrace_create_state@@Base+0x4384>
   301a8:	ldr	x0, [x19, #256]
   301ac:	add	x1, x0, #0x1
   301b0:	str	x1, [x19, #256]
   301b4:	strb	w21, [x19, x0]
   301b8:	strb	w21, [x19, #264]
   301bc:	add	x20, x20, #0x1
   301c0:	cmp	x20, x22
   301c4:	b.eq	30204 <__asan_backtrace_create_state@@Base+0x43c0>  // b.none
   301c8:	ldrb	w21, [x20]
   301cc:	ldr	x0, [x19, #256]
   301d0:	cmp	x0, #0xff
   301d4:	b.ne	301a8 <__asan_backtrace_create_state@@Base+0x4364>  // b.any
   301d8:	strb	wzr, [x19, #255]
   301dc:	ldr	x3, [x19, #272]
   301e0:	ldr	x2, [x19, #280]
   301e4:	mov	x1, x23
   301e8:	mov	x0, x19
   301ec:	blr	x3
   301f0:	str	xzr, [x19, #256]
   301f4:	ldr	x0, [x19, #320]
   301f8:	add	x0, x0, #0x1
   301fc:	str	x0, [x19, #320]
   30200:	b	301a8 <__asan_backtrace_create_state@@Base+0x4364>
   30204:	ldp	x21, x22, [sp, #32]
   30208:	ldp	x23, x24, [sp, #48]
   3020c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30210:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30214:	add	x0, x0, #0xe38
   30218:	bl	67e0 <__asan_internal_strlen@plt>
   3021c:	cbz	x0, 30298 <__asan_backtrace_create_state@@Base+0x4454>
   30220:	stp	x25, x26, [sp, #64]
   30224:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30228:	add	x21, x21, #0xe38
   3022c:	add	x24, x0, x21
   30230:	mov	x25, #0xff                  	// #255
   30234:	b	30258 <__asan_backtrace_create_state@@Base+0x4414>
   30238:	ldr	x0, [x19, #256]
   3023c:	add	x1, x0, #0x1
   30240:	str	x1, [x19, #256]
   30244:	strb	w23, [x19, x0]
   30248:	strb	w23, [x19, #264]
   3024c:	add	x21, x21, #0x1
   30250:	cmp	x21, x24
   30254:	b.eq	30294 <__asan_backtrace_create_state@@Base+0x4450>  // b.none
   30258:	ldrb	w23, [x21]
   3025c:	ldr	x0, [x19, #256]
   30260:	cmp	x0, #0xff
   30264:	b.ne	30238 <__asan_backtrace_create_state@@Base+0x43f4>  // b.any
   30268:	strb	wzr, [x19, #255]
   3026c:	ldr	x3, [x19, #272]
   30270:	ldr	x2, [x19, #280]
   30274:	mov	x1, x25
   30278:	mov	x0, x19
   3027c:	blr	x3
   30280:	str	xzr, [x19, #256]
   30284:	ldr	x0, [x19, #320]
   30288:	add	x0, x0, #0x1
   3028c:	str	x0, [x19, #320]
   30290:	b	30238 <__asan_backtrace_create_state@@Base+0x43f4>
   30294:	ldp	x25, x26, [sp, #64]
   30298:	ldr	x2, [x22, #8]
   3029c:	mov	w1, w20
   302a0:	mov	x0, x19
   302a4:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   302a8:	ldp	x21, x22, [sp, #32]
   302ac:	ldp	x23, x24, [sp, #48]
   302b0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   302b4:	ldr	x2, [x22, #8]
   302b8:	mov	w1, w20
   302bc:	mov	x0, x19
   302c0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   302c4:	ldr	x2, [x22, #16]
   302c8:	mov	w1, w20
   302cc:	mov	x0, x19
   302d0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   302d4:	ldp	x21, x22, [sp, #32]
   302d8:	ldp	x23, x24, [sp, #48]
   302dc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   302e0:	ldrb	w20, [x22, #8]
   302e4:	ldr	x0, [x19, #256]
   302e8:	cmp	x0, #0xff
   302ec:	b.eq	30310 <__asan_backtrace_create_state@@Base+0x44cc>  // b.none
   302f0:	ldr	x0, [x19, #256]
   302f4:	add	x1, x0, #0x1
   302f8:	str	x1, [x19, #256]
   302fc:	strb	w20, [x19, x0]
   30300:	strb	w20, [x19, #264]
   30304:	ldp	x21, x22, [sp, #32]
   30308:	ldp	x23, x24, [sp, #48]
   3030c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30310:	strb	wzr, [x19, #255]
   30314:	ldr	x3, [x19, #272]
   30318:	ldr	x2, [x19, #280]
   3031c:	mov	x1, #0xff                  	// #255
   30320:	mov	x0, x19
   30324:	blr	x3
   30328:	str	xzr, [x19, #256]
   3032c:	ldr	x0, [x19, #320]
   30330:	add	x0, x0, #0x1
   30334:	str	x0, [x19, #320]
   30338:	b	302f0 <__asan_backtrace_create_state@@Base+0x44ac>
   3033c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30340:	add	x0, x0, #0xe48
   30344:	bl	67e0 <__asan_internal_strlen@plt>
   30348:	cbz	x0, 303c4 <__asan_backtrace_create_state@@Base+0x4580>
   3034c:	stp	x25, x26, [sp, #64]
   30350:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30354:	add	x21, x21, #0xe48
   30358:	add	x24, x0, x21
   3035c:	mov	x25, #0xff                  	// #255
   30360:	b	30384 <__asan_backtrace_create_state@@Base+0x4540>
   30364:	ldr	x0, [x19, #256]
   30368:	add	x1, x0, #0x1
   3036c:	str	x1, [x19, #256]
   30370:	strb	w23, [x19, x0]
   30374:	strb	w23, [x19, #264]
   30378:	add	x21, x21, #0x1
   3037c:	cmp	x21, x24
   30380:	b.eq	303c0 <__asan_backtrace_create_state@@Base+0x457c>  // b.none
   30384:	ldrb	w23, [x21]
   30388:	ldr	x0, [x19, #256]
   3038c:	cmp	x0, #0xff
   30390:	b.ne	30364 <__asan_backtrace_create_state@@Base+0x4520>  // b.any
   30394:	strb	wzr, [x19, #255]
   30398:	ldr	x3, [x19, #272]
   3039c:	ldr	x2, [x19, #280]
   303a0:	mov	x1, x25
   303a4:	mov	x0, x19
   303a8:	blr	x3
   303ac:	str	xzr, [x19, #256]
   303b0:	ldr	x0, [x19, #320]
   303b4:	add	x0, x0, #0x1
   303b8:	str	x0, [x19, #320]
   303bc:	b	30364 <__asan_backtrace_create_state@@Base+0x4520>
   303c0:	ldp	x25, x26, [sp, #64]
   303c4:	ldr	x2, [x22, #8]
   303c8:	mov	w1, w20
   303cc:	mov	x0, x19
   303d0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   303d4:	ldr	x0, [x19, #256]
   303d8:	cmp	x0, #0xff
   303dc:	b.eq	30404 <__asan_backtrace_create_state@@Base+0x45c0>  // b.none
   303e0:	ldr	x1, [x19, #256]
   303e4:	add	x0, x1, #0x1
   303e8:	str	x0, [x19, #256]
   303ec:	mov	w0, #0x29                  	// #41
   303f0:	strb	w0, [x19, x1]
   303f4:	strb	w0, [x19, #264]
   303f8:	ldp	x21, x22, [sp, #32]
   303fc:	ldp	x23, x24, [sp, #48]
   30400:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30404:	strb	wzr, [x19, #255]
   30408:	ldr	x3, [x19, #272]
   3040c:	ldr	x2, [x19, #280]
   30410:	mov	x1, #0xff                  	// #255
   30414:	mov	x0, x19
   30418:	blr	x3
   3041c:	str	xzr, [x19, #256]
   30420:	ldr	x0, [x19, #320]
   30424:	add	x0, x0, #0x1
   30428:	str	x0, [x19, #320]
   3042c:	b	303e0 <__asan_backtrace_create_state@@Base+0x459c>
   30430:	ldr	x1, [x22, #8]
   30434:	mov	x0, x19
   30438:	bl	2c7e4 <__asan_backtrace_create_state@@Base+0x9a0>
   3043c:	cbz	x0, 30474 <__asan_backtrace_create_state@@Base+0x4630>
   30440:	stp	x25, x26, [sp, #64]
   30444:	stp	x27, x28, [sp, #80]
   30448:	bl	2c8dc <__asan_backtrace_create_state@@Base+0xa98>
   3044c:	mov	w25, w0
   30450:	ldr	x27, [x22, #8]
   30454:	cmp	w0, #0x0
   30458:	b.le	30f08 <__asan_backtrace_create_state@@Base+0x50c4>
   3045c:	sub	w28, w0, #0x1
   30460:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30464:	add	x0, x0, #0xdb0
   30468:	str	x0, [sp, #96]
   3046c:	mov	x26, #0xff                  	// #255
   30470:	b	30518 <__asan_backtrace_create_state@@Base+0x46d4>
   30474:	ldr	x2, [x22, #8]
   30478:	mov	w1, w20
   3047c:	mov	x0, x19
   30480:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   30484:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   30488:	add	x20, x20, #0x900
   3048c:	mov	x0, x20
   30490:	bl	67e0 <__asan_internal_strlen@plt>
   30494:	mov	x2, x0
   30498:	mov	x1, x20
   3049c:	mov	x0, x19
   304a0:	bl	2c6d4 <__asan_backtrace_create_state@@Base+0x890>
   304a4:	ldp	x21, x22, [sp, #32]
   304a8:	ldp	x23, x24, [sp, #48]
   304ac:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   304b0:	ldr	x0, [x19, #256]
   304b4:	add	x1, x0, #0x1
   304b8:	str	x1, [x19, #256]
   304bc:	strb	w23, [x19, x0]
   304c0:	strb	w23, [x19, #264]
   304c4:	add	x22, x22, #0x1
   304c8:	cmp	x22, x24
   304cc:	b.eq	3050c <__asan_backtrace_create_state@@Base+0x46c8>  // b.none
   304d0:	ldrb	w23, [x22]
   304d4:	ldr	x0, [x19, #256]
   304d8:	cmp	x0, #0xff
   304dc:	b.ne	304b0 <__asan_backtrace_create_state@@Base+0x466c>  // b.any
   304e0:	strb	wzr, [x19, #255]
   304e4:	ldr	x3, [x19, #272]
   304e8:	ldr	x2, [x19, #280]
   304ec:	mov	x1, x26
   304f0:	mov	x0, x19
   304f4:	blr	x3
   304f8:	str	xzr, [x19, #256]
   304fc:	ldr	x0, [x19, #320]
   30500:	add	x0, x0, #0x1
   30504:	str	x0, [x19, #320]
   30508:	b	304b0 <__asan_backtrace_create_state@@Base+0x466c>
   3050c:	add	w21, w21, #0x1
   30510:	cmp	w25, w21
   30514:	b.eq	30550 <__asan_backtrace_create_state@@Base+0x470c>  // b.none
   30518:	str	w21, [x19, #316]
   3051c:	mov	x2, x27
   30520:	mov	w1, w20
   30524:	mov	x0, x19
   30528:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   3052c:	cmp	w28, w21
   30530:	b.le	3050c <__asan_backtrace_create_state@@Base+0x46c8>
   30534:	ldr	x0, [sp, #96]
   30538:	bl	67e0 <__asan_internal_strlen@plt>
   3053c:	cbz	x0, 3050c <__asan_backtrace_create_state@@Base+0x46c8>
   30540:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30544:	add	x22, x1, #0xdb0
   30548:	add	x24, x0, x22
   3054c:	b	304d0 <__asan_backtrace_create_state@@Base+0x468c>
   30550:	ldp	x21, x22, [sp, #32]
   30554:	ldp	x23, x24, [sp, #48]
   30558:	ldp	x25, x26, [sp, #64]
   3055c:	ldp	x27, x28, [sp, #80]
   30560:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30564:	ldr	x23, [x22, #8]
   30568:	cbnz	x23, 305f8 <__asan_backtrace_create_state@@Base+0x47b4>
   3056c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30570:	add	x0, x0, #0xe58
   30574:	bl	67e0 <__asan_internal_strlen@plt>
   30578:	cbz	x0, 30f1c <__asan_backtrace_create_state@@Base+0x50d8>
   3057c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30580:	add	x20, x20, #0xe58
   30584:	add	x22, x0, x20
   30588:	mov	x23, #0xff                  	// #255
   3058c:	b	305b0 <__asan_backtrace_create_state@@Base+0x476c>
   30590:	ldr	x0, [x19, #256]
   30594:	add	x1, x0, #0x1
   30598:	str	x1, [x19, #256]
   3059c:	strb	w21, [x19, x0]
   305a0:	strb	w21, [x19, #264]
   305a4:	add	x20, x20, #0x1
   305a8:	cmp	x22, x20
   305ac:	b.eq	305ec <__asan_backtrace_create_state@@Base+0x47a8>  // b.none
   305b0:	ldrb	w21, [x20]
   305b4:	ldr	x0, [x19, #256]
   305b8:	cmp	x0, #0xff
   305bc:	b.ne	30590 <__asan_backtrace_create_state@@Base+0x474c>  // b.any
   305c0:	strb	wzr, [x19, #255]
   305c4:	ldr	x3, [x19, #272]
   305c8:	ldr	x2, [x19, #280]
   305cc:	mov	x1, x23
   305d0:	mov	x0, x19
   305d4:	blr	x3
   305d8:	str	xzr, [x19, #256]
   305dc:	ldr	x0, [x19, #320]
   305e0:	add	x0, x0, #0x1
   305e4:	str	x0, [x19, #320]
   305e8:	b	30590 <__asan_backtrace_create_state@@Base+0x474c>
   305ec:	ldp	x21, x22, [sp, #32]
   305f0:	ldp	x23, x24, [sp, #48]
   305f4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   305f8:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   305fc:	add	x0, x0, #0xe60
   30600:	bl	67e0 <__asan_internal_strlen@plt>
   30604:	cbz	x0, 30678 <__asan_backtrace_create_state@@Base+0x4834>
   30608:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3060c:	add	x20, x20, #0xe60
   30610:	add	x22, x0, x20
   30614:	mov	x24, #0xff                  	// #255
   30618:	b	3063c <__asan_backtrace_create_state@@Base+0x47f8>
   3061c:	ldr	x0, [x19, #256]
   30620:	add	x1, x0, #0x1
   30624:	str	x1, [x19, #256]
   30628:	strb	w21, [x19, x0]
   3062c:	strb	w21, [x19, #264]
   30630:	add	x20, x20, #0x1
   30634:	cmp	x22, x20
   30638:	b.eq	30678 <__asan_backtrace_create_state@@Base+0x4834>  // b.none
   3063c:	ldrb	w21, [x20]
   30640:	ldr	x0, [x19, #256]
   30644:	cmp	x0, #0xff
   30648:	b.ne	3061c <__asan_backtrace_create_state@@Base+0x47d8>  // b.any
   3064c:	strb	wzr, [x19, #255]
   30650:	ldr	x3, [x19, #272]
   30654:	ldr	x2, [x19, #280]
   30658:	mov	x1, x24
   3065c:	mov	x0, x19
   30660:	blr	x3
   30664:	str	xzr, [x19, #256]
   30668:	ldr	x0, [x19, #320]
   3066c:	add	x0, x0, #0x1
   30670:	str	x0, [x19, #320]
   30674:	b	3061c <__asan_backtrace_create_state@@Base+0x47d8>
   30678:	add	x20, sp, #0x80
   3067c:	mov	w2, w23
   30680:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   30684:	add	x1, x1, #0x48
   30688:	mov	x0, x20
   3068c:	bl	6900 <sprintf@plt>
   30690:	mov	x0, x20
   30694:	bl	67e0 <__asan_internal_strlen@plt>
   30698:	cbz	x0, 30708 <__asan_backtrace_create_state@@Base+0x48c4>
   3069c:	add	x20, sp, #0x80
   306a0:	add	x22, x0, x20
   306a4:	mov	x23, #0xff                  	// #255
   306a8:	b	306cc <__asan_backtrace_create_state@@Base+0x4888>
   306ac:	ldr	x0, [x19, #256]
   306b0:	add	x1, x0, #0x1
   306b4:	str	x1, [x19, #256]
   306b8:	strb	w21, [x19, x0]
   306bc:	strb	w21, [x19, #264]
   306c0:	add	x20, x20, #0x1
   306c4:	cmp	x22, x20
   306c8:	b.eq	30708 <__asan_backtrace_create_state@@Base+0x48c4>  // b.none
   306cc:	ldrb	w21, [x20]
   306d0:	ldr	x0, [x19, #256]
   306d4:	cmp	x0, #0xff
   306d8:	b.ne	306ac <__asan_backtrace_create_state@@Base+0x4868>  // b.any
   306dc:	strb	wzr, [x19, #255]
   306e0:	ldr	x3, [x19, #272]
   306e4:	ldr	x2, [x19, #280]
   306e8:	mov	x1, x23
   306ec:	mov	x0, x19
   306f0:	blr	x3
   306f4:	str	xzr, [x19, #256]
   306f8:	ldr	x0, [x19, #320]
   306fc:	add	x0, x0, #0x1
   30700:	str	x0, [x19, #320]
   30704:	b	306ac <__asan_backtrace_create_state@@Base+0x4868>
   30708:	ldr	x0, [x19, #256]
   3070c:	cmp	x0, #0xff
   30710:	b.eq	30738 <__asan_backtrace_create_state@@Base+0x48f4>  // b.none
   30714:	ldr	x1, [x19, #256]
   30718:	add	x0, x1, #0x1
   3071c:	str	x0, [x19, #256]
   30720:	mov	w0, #0x7d                  	// #125
   30724:	strb	w0, [x19, x1]
   30728:	strb	w0, [x19, #264]
   3072c:	ldp	x21, x22, [sp, #32]
   30730:	ldp	x23, x24, [sp, #48]
   30734:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30738:	strb	wzr, [x19, #255]
   3073c:	ldr	x3, [x19, #272]
   30740:	ldr	x2, [x19, #280]
   30744:	mov	x1, #0xff                  	// #255
   30748:	mov	x0, x19
   3074c:	blr	x3
   30750:	str	xzr, [x19, #256]
   30754:	ldr	x0, [x19, #320]
   30758:	add	x0, x0, #0x1
   3075c:	str	x0, [x19, #320]
   30760:	b	30714 <__asan_backtrace_create_state@@Base+0x48d0>
   30764:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30768:	add	x0, x0, #0xe68
   3076c:	bl	67e0 <__asan_internal_strlen@plt>
   30770:	cbz	x0, 307ec <__asan_backtrace_create_state@@Base+0x49a8>
   30774:	stp	x25, x26, [sp, #64]
   30778:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3077c:	add	x21, x21, #0xe68
   30780:	add	x24, x0, x21
   30784:	mov	x25, #0xff                  	// #255
   30788:	b	307ac <__asan_backtrace_create_state@@Base+0x4968>
   3078c:	ldr	x0, [x19, #256]
   30790:	add	x1, x0, #0x1
   30794:	str	x1, [x19, #256]
   30798:	strb	w23, [x19, x0]
   3079c:	strb	w23, [x19, #264]
   307a0:	add	x21, x21, #0x1
   307a4:	cmp	x21, x24
   307a8:	b.eq	307e8 <__asan_backtrace_create_state@@Base+0x49a4>  // b.none
   307ac:	ldrb	w23, [x21]
   307b0:	ldr	x0, [x19, #256]
   307b4:	cmp	x0, #0xff
   307b8:	b.ne	3078c <__asan_backtrace_create_state@@Base+0x4948>  // b.any
   307bc:	strb	wzr, [x19, #255]
   307c0:	ldr	x3, [x19, #272]
   307c4:	ldr	x2, [x19, #280]
   307c8:	mov	x1, x25
   307cc:	mov	x0, x19
   307d0:	blr	x3
   307d4:	str	xzr, [x19, #256]
   307d8:	ldr	x0, [x19, #320]
   307dc:	add	x0, x0, #0x1
   307e0:	str	x0, [x19, #320]
   307e4:	b	3078c <__asan_backtrace_create_state@@Base+0x4948>
   307e8:	ldp	x25, x26, [sp, #64]
   307ec:	ldr	x2, [x22, #8]
   307f0:	mov	w1, w20
   307f4:	mov	x0, x19
   307f8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   307fc:	ldp	x21, x22, [sp, #32]
   30800:	ldp	x23, x24, [sp, #48]
   30804:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30808:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3080c:	add	x0, x0, #0xe88
   30810:	bl	67e0 <__asan_internal_strlen@plt>
   30814:	cbz	x0, 30890 <__asan_backtrace_create_state@@Base+0x4a4c>
   30818:	stp	x25, x26, [sp, #64]
   3081c:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30820:	add	x21, x21, #0xe88
   30824:	add	x24, x0, x21
   30828:	mov	x25, #0xff                  	// #255
   3082c:	b	30850 <__asan_backtrace_create_state@@Base+0x4a0c>
   30830:	ldr	x0, [x19, #256]
   30834:	add	x1, x0, #0x1
   30838:	str	x1, [x19, #256]
   3083c:	strb	w23, [x19, x0]
   30840:	strb	w23, [x19, #264]
   30844:	add	x21, x21, #0x1
   30848:	cmp	x21, x24
   3084c:	b.eq	3088c <__asan_backtrace_create_state@@Base+0x4a48>  // b.none
   30850:	ldrb	w23, [x21]
   30854:	ldr	x0, [x19, #256]
   30858:	cmp	x0, #0xff
   3085c:	b.ne	30830 <__asan_backtrace_create_state@@Base+0x49ec>  // b.any
   30860:	strb	wzr, [x19, #255]
   30864:	ldr	x3, [x19, #272]
   30868:	ldr	x2, [x19, #280]
   3086c:	mov	x1, x25
   30870:	mov	x0, x19
   30874:	blr	x3
   30878:	str	xzr, [x19, #256]
   3087c:	ldr	x0, [x19, #320]
   30880:	add	x0, x0, #0x1
   30884:	str	x0, [x19, #320]
   30888:	b	30830 <__asan_backtrace_create_state@@Base+0x49ec>
   3088c:	ldp	x25, x26, [sp, #64]
   30890:	ldr	x2, [x22, #8]
   30894:	mov	w1, w20
   30898:	mov	x0, x19
   3089c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   308a0:	ldp	x21, x22, [sp, #32]
   308a4:	ldp	x23, x24, [sp, #48]
   308a8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   308ac:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   308b0:	add	x0, x0, #0xea8
   308b4:	bl	67e0 <__asan_internal_strlen@plt>
   308b8:	cbz	x0, 30934 <__asan_backtrace_create_state@@Base+0x4af0>
   308bc:	stp	x25, x26, [sp, #64]
   308c0:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   308c4:	add	x21, x21, #0xea8
   308c8:	add	x24, x0, x21
   308cc:	mov	x25, #0xff                  	// #255
   308d0:	b	308f4 <__asan_backtrace_create_state@@Base+0x4ab0>
   308d4:	ldr	x0, [x19, #256]
   308d8:	add	x1, x0, #0x1
   308dc:	str	x1, [x19, #256]
   308e0:	strb	w23, [x19, x0]
   308e4:	strb	w23, [x19, #264]
   308e8:	add	x21, x21, #0x1
   308ec:	cmp	x21, x24
   308f0:	b.eq	30930 <__asan_backtrace_create_state@@Base+0x4aec>  // b.none
   308f4:	ldrb	w23, [x21]
   308f8:	ldr	x0, [x19, #256]
   308fc:	cmp	x0, #0xff
   30900:	b.ne	308d4 <__asan_backtrace_create_state@@Base+0x4a90>  // b.any
   30904:	strb	wzr, [x19, #255]
   30908:	ldr	x3, [x19, #272]
   3090c:	ldr	x2, [x19, #280]
   30910:	mov	x1, x25
   30914:	mov	x0, x19
   30918:	blr	x3
   3091c:	str	xzr, [x19, #256]
   30920:	ldr	x0, [x19, #320]
   30924:	add	x0, x0, #0x1
   30928:	str	x0, [x19, #320]
   3092c:	b	308d4 <__asan_backtrace_create_state@@Base+0x4a90>
   30930:	ldp	x25, x26, [sp, #64]
   30934:	ldr	w0, [x19, #312]
   30938:	add	w0, w0, #0x1
   3093c:	str	w0, [x19, #312]
   30940:	ldr	x2, [x22, #8]
   30944:	mov	w1, w20
   30948:	mov	x0, x19
   3094c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   30950:	ldr	w0, [x19, #312]
   30954:	sub	w0, w0, #0x1
   30958:	str	w0, [x19, #312]
   3095c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30960:	add	x0, x0, #0xeb8
   30964:	bl	67e0 <__asan_internal_strlen@plt>
   30968:	cbz	x0, 309dc <__asan_backtrace_create_state@@Base+0x4b98>
   3096c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30970:	add	x20, x20, #0xeb8
   30974:	add	x23, x0, x20
   30978:	mov	x24, #0xff                  	// #255
   3097c:	b	309a0 <__asan_backtrace_create_state@@Base+0x4b5c>
   30980:	ldr	x0, [x19, #256]
   30984:	add	x1, x0, #0x1
   30988:	str	x1, [x19, #256]
   3098c:	strb	w21, [x19, x0]
   30990:	strb	w21, [x19, #264]
   30994:	add	x20, x20, #0x1
   30998:	cmp	x20, x23
   3099c:	b.eq	309dc <__asan_backtrace_create_state@@Base+0x4b98>  // b.none
   309a0:	ldrb	w21, [x20]
   309a4:	ldr	x0, [x19, #256]
   309a8:	cmp	x0, #0xff
   309ac:	b.ne	30980 <__asan_backtrace_create_state@@Base+0x4b3c>  // b.any
   309b0:	strb	wzr, [x19, #255]
   309b4:	ldr	x3, [x19, #272]
   309b8:	ldr	x2, [x19, #280]
   309bc:	mov	x1, x24
   309c0:	mov	x0, x19
   309c4:	blr	x3
   309c8:	str	xzr, [x19, #256]
   309cc:	ldr	x0, [x19, #320]
   309d0:	add	x0, x0, #0x1
   309d4:	str	x0, [x19, #320]
   309d8:	b	30980 <__asan_backtrace_create_state@@Base+0x4b3c>
   309dc:	ldr	w2, [x22, #16]
   309e0:	add	x20, sp, #0x80
   309e4:	add	w2, w2, #0x1
   309e8:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   309ec:	add	x1, x1, #0x48
   309f0:	mov	x0, x20
   309f4:	bl	6900 <sprintf@plt>
   309f8:	mov	x0, x20
   309fc:	bl	67e0 <__asan_internal_strlen@plt>
   30a00:	cbz	x0, 30a70 <__asan_backtrace_create_state@@Base+0x4c2c>
   30a04:	add	x20, sp, #0x80
   30a08:	add	x22, x0, x20
   30a0c:	mov	x23, #0xff                  	// #255
   30a10:	b	30a34 <__asan_backtrace_create_state@@Base+0x4bf0>
   30a14:	ldr	x0, [x19, #256]
   30a18:	add	x1, x0, #0x1
   30a1c:	str	x1, [x19, #256]
   30a20:	strb	w21, [x19, x0]
   30a24:	strb	w21, [x19, #264]
   30a28:	add	x20, x20, #0x1
   30a2c:	cmp	x20, x22
   30a30:	b.eq	30a70 <__asan_backtrace_create_state@@Base+0x4c2c>  // b.none
   30a34:	ldrb	w21, [x20]
   30a38:	ldr	x0, [x19, #256]
   30a3c:	cmp	x0, #0xff
   30a40:	b.ne	30a14 <__asan_backtrace_create_state@@Base+0x4bd0>  // b.any
   30a44:	strb	wzr, [x19, #255]
   30a48:	ldr	x3, [x19, #272]
   30a4c:	ldr	x2, [x19, #280]
   30a50:	mov	x1, x23
   30a54:	mov	x0, x19
   30a58:	blr	x3
   30a5c:	str	xzr, [x19, #256]
   30a60:	ldr	x0, [x19, #320]
   30a64:	add	x0, x0, #0x1
   30a68:	str	x0, [x19, #320]
   30a6c:	b	30a14 <__asan_backtrace_create_state@@Base+0x4bd0>
   30a70:	ldr	x0, [x19, #256]
   30a74:	cmp	x0, #0xff
   30a78:	b.eq	30aa0 <__asan_backtrace_create_state@@Base+0x4c5c>  // b.none
   30a7c:	ldr	x1, [x19, #256]
   30a80:	add	x0, x1, #0x1
   30a84:	str	x0, [x19, #256]
   30a88:	mov	w0, #0x7d                  	// #125
   30a8c:	strb	w0, [x19, x1]
   30a90:	strb	w0, [x19, #264]
   30a94:	ldp	x21, x22, [sp, #32]
   30a98:	ldp	x23, x24, [sp, #48]
   30a9c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30aa0:	strb	wzr, [x19, #255]
   30aa4:	ldr	x3, [x19, #272]
   30aa8:	ldr	x2, [x19, #280]
   30aac:	mov	x1, #0xff                  	// #255
   30ab0:	mov	x0, x19
   30ab4:	blr	x3
   30ab8:	str	xzr, [x19, #256]
   30abc:	ldr	x0, [x19, #320]
   30ac0:	add	x0, x0, #0x1
   30ac4:	str	x0, [x19, #320]
   30ac8:	b	30a7c <__asan_backtrace_create_state@@Base+0x4c38>
   30acc:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30ad0:	add	x0, x0, #0xec0
   30ad4:	bl	67e0 <__asan_internal_strlen@plt>
   30ad8:	cbz	x0, 30b4c <__asan_backtrace_create_state@@Base+0x4d08>
   30adc:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30ae0:	add	x20, x20, #0xec0
   30ae4:	add	x23, x0, x20
   30ae8:	mov	x24, #0xff                  	// #255
   30aec:	b	30b10 <__asan_backtrace_create_state@@Base+0x4ccc>
   30af0:	ldr	x0, [x19, #256]
   30af4:	add	x1, x0, #0x1
   30af8:	str	x1, [x19, #256]
   30afc:	strb	w21, [x19, x0]
   30b00:	strb	w21, [x19, #264]
   30b04:	add	x20, x20, #0x1
   30b08:	cmp	x20, x23
   30b0c:	b.eq	30b4c <__asan_backtrace_create_state@@Base+0x4d08>  // b.none
   30b10:	ldrb	w21, [x20]
   30b14:	ldr	x0, [x19, #256]
   30b18:	cmp	x0, #0xff
   30b1c:	b.ne	30af0 <__asan_backtrace_create_state@@Base+0x4cac>  // b.any
   30b20:	strb	wzr, [x19, #255]
   30b24:	ldr	x3, [x19, #272]
   30b28:	ldr	x2, [x19, #280]
   30b2c:	mov	x1, x24
   30b30:	mov	x0, x19
   30b34:	blr	x3
   30b38:	str	xzr, [x19, #256]
   30b3c:	ldr	x0, [x19, #320]
   30b40:	add	x0, x0, #0x1
   30b44:	str	x0, [x19, #320]
   30b48:	b	30af0 <__asan_backtrace_create_state@@Base+0x4cac>
   30b4c:	ldr	x2, [x22, #8]
   30b50:	add	x20, sp, #0x80
   30b54:	add	w2, w2, #0x1
   30b58:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   30b5c:	add	x1, x1, #0x48
   30b60:	mov	x0, x20
   30b64:	bl	6900 <sprintf@plt>
   30b68:	mov	x0, x20
   30b6c:	bl	67e0 <__asan_internal_strlen@plt>
   30b70:	cbz	x0, 30be0 <__asan_backtrace_create_state@@Base+0x4d9c>
   30b74:	add	x20, sp, #0x80
   30b78:	add	x22, x0, x20
   30b7c:	mov	x23, #0xff                  	// #255
   30b80:	b	30ba4 <__asan_backtrace_create_state@@Base+0x4d60>
   30b84:	ldr	x0, [x19, #256]
   30b88:	add	x1, x0, #0x1
   30b8c:	str	x1, [x19, #256]
   30b90:	strb	w21, [x19, x0]
   30b94:	strb	w21, [x19, #264]
   30b98:	add	x20, x20, #0x1
   30b9c:	cmp	x20, x22
   30ba0:	b.eq	30be0 <__asan_backtrace_create_state@@Base+0x4d9c>  // b.none
   30ba4:	ldrb	w21, [x20]
   30ba8:	ldr	x0, [x19, #256]
   30bac:	cmp	x0, #0xff
   30bb0:	b.ne	30b84 <__asan_backtrace_create_state@@Base+0x4d40>  // b.any
   30bb4:	strb	wzr, [x19, #255]
   30bb8:	ldr	x3, [x19, #272]
   30bbc:	ldr	x2, [x19, #280]
   30bc0:	mov	x1, x23
   30bc4:	mov	x0, x19
   30bc8:	blr	x3
   30bcc:	str	xzr, [x19, #256]
   30bd0:	ldr	x0, [x19, #320]
   30bd4:	add	x0, x0, #0x1
   30bd8:	str	x0, [x19, #320]
   30bdc:	b	30b84 <__asan_backtrace_create_state@@Base+0x4d40>
   30be0:	ldr	x0, [x19, #256]
   30be4:	cmp	x0, #0xff
   30be8:	b.eq	30c10 <__asan_backtrace_create_state@@Base+0x4dcc>  // b.none
   30bec:	ldr	x1, [x19, #256]
   30bf0:	add	x0, x1, #0x1
   30bf4:	str	x0, [x19, #256]
   30bf8:	mov	w0, #0x7d                  	// #125
   30bfc:	strb	w0, [x19, x1]
   30c00:	strb	w0, [x19, #264]
   30c04:	ldp	x21, x22, [sp, #32]
   30c08:	ldp	x23, x24, [sp, #48]
   30c0c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30c10:	strb	wzr, [x19, #255]
   30c14:	ldr	x3, [x19, #272]
   30c18:	ldr	x2, [x19, #280]
   30c1c:	mov	x1, #0xff                  	// #255
   30c20:	mov	x0, x19
   30c24:	blr	x3
   30c28:	str	xzr, [x19, #256]
   30c2c:	ldr	x0, [x19, #320]
   30c30:	add	x0, x0, #0x1
   30c34:	str	x0, [x19, #320]
   30c38:	b	30bec <__asan_backtrace_create_state@@Base+0x4da8>
   30c3c:	ldr	x2, [x22, #8]
   30c40:	mov	w1, w20
   30c44:	mov	x0, x19
   30c48:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   30c4c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30c50:	add	x0, x0, #0xed0
   30c54:	bl	67e0 <__asan_internal_strlen@plt>
   30c58:	cbz	x0, 30cd4 <__asan_backtrace_create_state@@Base+0x4e90>
   30c5c:	stp	x25, x26, [sp, #64]
   30c60:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30c64:	add	x21, x21, #0xed0
   30c68:	add	x24, x0, x21
   30c6c:	mov	x25, #0xff                  	// #255
   30c70:	b	30c94 <__asan_backtrace_create_state@@Base+0x4e50>
   30c74:	ldr	x0, [x19, #256]
   30c78:	add	x1, x0, #0x1
   30c7c:	str	x1, [x19, #256]
   30c80:	strb	w23, [x19, x0]
   30c84:	strb	w23, [x19, #264]
   30c88:	add	x21, x21, #0x1
   30c8c:	cmp	x21, x24
   30c90:	b.eq	30cd0 <__asan_backtrace_create_state@@Base+0x4e8c>  // b.none
   30c94:	ldrb	w23, [x21]
   30c98:	ldr	x0, [x19, #256]
   30c9c:	cmp	x0, #0xff
   30ca0:	b.ne	30c74 <__asan_backtrace_create_state@@Base+0x4e30>  // b.any
   30ca4:	strb	wzr, [x19, #255]
   30ca8:	ldr	x3, [x19, #272]
   30cac:	ldr	x2, [x19, #280]
   30cb0:	mov	x1, x25
   30cb4:	mov	x0, x19
   30cb8:	blr	x3
   30cbc:	str	xzr, [x19, #256]
   30cc0:	ldr	x0, [x19, #320]
   30cc4:	add	x0, x0, #0x1
   30cc8:	str	x0, [x19, #320]
   30ccc:	b	30c74 <__asan_backtrace_create_state@@Base+0x4e30>
   30cd0:	ldp	x25, x26, [sp, #64]
   30cd4:	ldr	x2, [x22, #16]
   30cd8:	mov	w1, w20
   30cdc:	mov	x0, x19
   30ce0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   30ce4:	ldr	x0, [x19, #256]
   30ce8:	cmp	x0, #0xff
   30cec:	b.eq	30d14 <__asan_backtrace_create_state@@Base+0x4ed0>  // b.none
   30cf0:	ldr	x1, [x19, #256]
   30cf4:	add	x0, x1, #0x1
   30cf8:	str	x0, [x19, #256]
   30cfc:	mov	w0, #0x5d                  	// #93
   30d00:	strb	w0, [x19, x1]
   30d04:	strb	w0, [x19, #264]
   30d08:	ldp	x21, x22, [sp, #32]
   30d0c:	ldp	x23, x24, [sp, #48]
   30d10:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30d14:	strb	wzr, [x19, #255]
   30d18:	ldr	x3, [x19, #272]
   30d1c:	ldr	x2, [x19, #280]
   30d20:	mov	x1, #0xff                  	// #255
   30d24:	mov	x0, x19
   30d28:	blr	x3
   30d2c:	str	xzr, [x19, #256]
   30d30:	ldr	x0, [x19, #320]
   30d34:	add	x0, x0, #0x1
   30d38:	str	x0, [x19, #320]
   30d3c:	b	30cf0 <__asan_backtrace_create_state@@Base+0x4eac>
   30d40:	ldp	x23, x24, [sp, #48]
   30d44:	mov	w0, #0x1                   	// #1
   30d48:	str	w0, [x19, #304]
   30d4c:	ldp	x21, x22, [sp, #32]
   30d50:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30d54:	cmp	w27, #0x2
   30d58:	b.eq	2d184 <__asan_backtrace_create_state@@Base+0x1340>  // b.none
   30d5c:	ldr	w0, [x21]
   30d60:	cmp	w0, #0x4
   30d64:	b.eq	2d254 <__asan_backtrace_create_state@@Base+0x1410>  // b.none
   30d68:	ldr	x2, [x22, #16]
   30d6c:	mov	w1, w20
   30d70:	mov	x0, x19
   30d74:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   30d78:	ldr	w0, [x21]
   30d7c:	cmp	w0, #0x4
   30d80:	b.eq	2d268 <__asan_backtrace_create_state@@Base+0x1424>  // b.none
   30d84:	cbz	w23, 2d2e8 <__asan_backtrace_create_state@@Base+0x14a4>
   30d88:	sub	w21, w23, #0x1
   30d8c:	add	x0, sp, #0x80
   30d90:	add	x21, x0, x21, lsl #5
   30d94:	mov	w22, #0x20                  	// #32
   30d98:	mov	x25, #0xff                  	// #255
   30d9c:	b	2d2a0 <__asan_backtrace_create_state@@Base+0x145c>
   30da0:	mov	w21, w2
   30da4:	b	30dac <__asan_backtrace_create_state@@Base+0x4f68>
   30da8:	mov	x22, x0
   30dac:	ldr	x0, [x19, #296]
   30db0:	str	x0, [sp, #128]
   30db4:	add	x0, sp, #0x80
   30db8:	str	x0, [x19, #296]
   30dbc:	str	x22, [sp, #136]
   30dc0:	str	wzr, [sp, #144]
   30dc4:	ldr	x0, [x19, #288]
   30dc8:	str	x0, [sp, #152]
   30dcc:	ldr	x2, [x22, #8]
   30dd0:	b	2e628 <__asan_backtrace_create_state@@Base+0x27e4>
   30dd4:	mov	x22, x0
   30dd8:	b	30dac <__asan_backtrace_create_state@@Base+0x4f68>
   30ddc:	ldr	x3, [x19, #328]
   30de0:	mov	x1, x3
   30de4:	cbz	x3, 30e08 <__asan_backtrace_create_state@@Base+0x4fc4>
   30de8:	ldr	x2, [x1]
   30dec:	cmp	x2, x0
   30df0:	b.eq	2e584 <__asan_backtrace_create_state@@Base+0x2740>  // b.none
   30df4:	cmp	x3, x1
   30df8:	ccmp	x2, x22, #0x0, ne  // ne = any
   30dfc:	b.eq	2e584 <__asan_backtrace_create_state@@Base+0x2740>  // b.none
   30e00:	ldr	x1, [x1, #8]
   30e04:	cbnz	x1, 30de8 <__asan_backtrace_create_state@@Base+0x4fa4>
   30e08:	ldr	x23, [x19, #288]
   30e0c:	ldr	x1, [x4, #8]
   30e10:	str	x1, [x19, #288]
   30e14:	mov	x1, x0
   30e18:	mov	x0, x19
   30e1c:	bl	2c7ac <__asan_backtrace_create_state@@Base+0x968>
   30e20:	cbz	x0, 2e5b4 <__asan_backtrace_create_state@@Base+0x2770>
   30e24:	mov	w21, #0x1                   	// #1
   30e28:	b	2e598 <__asan_backtrace_create_state@@Base+0x2754>
   30e2c:	ldp	x21, x22, [sp, #32]
   30e30:	ldp	x19, x20, [sp, #16]
   30e34:	ldp	x29, x30, [sp], #256
   30e38:	ret
   30e3c:	ldp	x21, x22, [sp, #32]
   30e40:	ldp	x23, x24, [sp, #48]
   30e44:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e48:	ldp	x21, x22, [sp, #32]
   30e4c:	ldp	x23, x24, [sp, #48]
   30e50:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e54:	ldp	x21, x22, [sp, #32]
   30e58:	ldp	x23, x24, [sp, #48]
   30e5c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e60:	ldp	x21, x22, [sp, #32]
   30e64:	ldp	x23, x24, [sp, #48]
   30e68:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e6c:	ldp	x21, x22, [sp, #32]
   30e70:	ldp	x23, x24, [sp, #48]
   30e74:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e78:	ldp	x21, x22, [sp, #32]
   30e7c:	ldp	x23, x24, [sp, #48]
   30e80:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e84:	ldp	x21, x22, [sp, #32]
   30e88:	ldp	x23, x24, [sp, #48]
   30e8c:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e90:	ldp	x21, x22, [sp, #32]
   30e94:	ldp	x23, x24, [sp, #48]
   30e98:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30e9c:	ldp	x21, x22, [sp, #32]
   30ea0:	ldp	x23, x24, [sp, #48]
   30ea4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30ea8:	ldp	x21, x22, [sp, #32]
   30eac:	ldp	x23, x24, [sp, #48]
   30eb0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30eb4:	ldp	x21, x22, [sp, #32]
   30eb8:	ldp	x23, x24, [sp, #48]
   30ebc:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30ec0:	ldp	x21, x22, [sp, #32]
   30ec4:	ldp	x23, x24, [sp, #48]
   30ec8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30ecc:	ldp	x21, x22, [sp, #32]
   30ed0:	ldp	x23, x24, [sp, #48]
   30ed4:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30ed8:	ldp	x21, x22, [sp, #32]
   30edc:	ldp	x23, x24, [sp, #48]
   30ee0:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30ee4:	ldp	x21, x22, [sp, #32]
   30ee8:	ldp	x23, x24, [sp, #48]
   30eec:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30ef0:	ldp	x21, x22, [sp, #32]
   30ef4:	ldp	x23, x24, [sp, #48]
   30ef8:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30efc:	ldp	x21, x22, [sp, #32]
   30f00:	ldp	x23, x24, [sp, #48]
   30f04:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30f08:	ldp	x21, x22, [sp, #32]
   30f0c:	ldp	x23, x24, [sp, #48]
   30f10:	ldp	x25, x26, [sp, #64]
   30f14:	ldp	x27, x28, [sp, #80]
   30f18:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30f1c:	ldp	x21, x22, [sp, #32]
   30f20:	ldp	x23, x24, [sp, #48]
   30f24:	b	30e30 <__asan_backtrace_create_state@@Base+0x4fec>
   30f28:	stp	x29, x30, [sp, #-48]!
   30f2c:	mov	x29, sp
   30f30:	stp	x19, x20, [sp, #16]
   30f34:	mov	x19, x0
   30f38:	cbz	x2, 30f58 <__asan_backtrace_create_state@@Base+0x5114>
   30f3c:	mov	x20, x2
   30f40:	ldr	w0, [x2, #4]
   30f44:	cmp	w0, #0x1
   30f48:	b.gt	30f58 <__asan_backtrace_create_state@@Base+0x5114>
   30f4c:	ldr	w2, [x19, #308]
   30f50:	cmp	w2, #0x400
   30f54:	b.le	30f6c <__asan_backtrace_create_state@@Base+0x5128>
   30f58:	mov	w0, #0x1                   	// #1
   30f5c:	str	w0, [x19, #304]
   30f60:	ldp	x19, x20, [sp, #16]
   30f64:	ldp	x29, x30, [sp], #48
   30f68:	ret
   30f6c:	add	w0, w0, #0x1
   30f70:	str	w0, [x20, #4]
   30f74:	ldr	w0, [x19, #308]
   30f78:	add	w0, w0, #0x1
   30f7c:	str	w0, [x19, #308]
   30f80:	str	x20, [sp, #32]
   30f84:	ldr	x0, [x19, #328]
   30f88:	str	x0, [sp, #40]
   30f8c:	add	x0, sp, #0x20
   30f90:	str	x0, [x19, #328]
   30f94:	mov	x2, x20
   30f98:	mov	x0, x19
   30f9c:	bl	2caa8 <__asan_backtrace_create_state@@Base+0xc64>
   30fa0:	ldr	x0, [sp, #40]
   30fa4:	str	x0, [x19, #328]
   30fa8:	ldr	w0, [x20, #4]
   30fac:	sub	w0, w0, #0x1
   30fb0:	str	w0, [x20, #4]
   30fb4:	ldr	w0, [x19, #308]
   30fb8:	sub	w0, w0, #0x1
   30fbc:	str	w0, [x19, #308]
   30fc0:	b	30f60 <__asan_backtrace_create_state@@Base+0x511c>
   30fc4:	stp	x29, x30, [sp, #-80]!
   30fc8:	mov	x29, sp
   30fcc:	stp	x19, x20, [sp, #16]
   30fd0:	stp	x21, x22, [sp, #32]
   30fd4:	mov	x19, x0
   30fd8:	mov	w21, w1
   30fdc:	mov	x20, x2
   30fe0:	ldr	w0, [x2]
   30fe4:	sub	w0, w0, #0x3
   30fe8:	cmp	w0, #0x4d
   30fec:	b.hi	31a1c <__asan_backtrace_create_state@@Base+0x5bd8>  // b.pmore
   30ff0:	stp	x23, x24, [sp, #48]
   30ff4:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   30ff8:	add	x1, x1, #0xa64
   30ffc:	ldrh	w0, [x1, w0, uxtw #1]
   31000:	adr	x1, 3100c <__asan_backtrace_create_state@@Base+0x51c8>
   31004:	add	x0, x1, w0, sxth #2
   31008:	br	x0
   3100c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31010:	add	x0, x0, #0xee8
   31014:	bl	67e0 <__asan_internal_strlen@plt>
   31018:	cbz	x0, 31a30 <__asan_backtrace_create_state@@Base+0x5bec>
   3101c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31020:	add	x20, x20, #0xee8
   31024:	add	x22, x0, x20
   31028:	mov	x23, #0xff                  	// #255
   3102c:	b	31050 <__asan_backtrace_create_state@@Base+0x520c>
   31030:	ldr	x0, [x19, #256]
   31034:	add	x1, x0, #0x1
   31038:	str	x1, [x19, #256]
   3103c:	strb	w21, [x19, x0]
   31040:	strb	w21, [x19, #264]
   31044:	add	x20, x20, #0x1
   31048:	cmp	x20, x22
   3104c:	b.eq	3108c <__asan_backtrace_create_state@@Base+0x5248>  // b.none
   31050:	ldrb	w21, [x20]
   31054:	ldr	x0, [x19, #256]
   31058:	cmp	x0, #0xff
   3105c:	b.ne	31030 <__asan_backtrace_create_state@@Base+0x51ec>  // b.any
   31060:	strb	wzr, [x19, #255]
   31064:	ldr	x3, [x19, #272]
   31068:	ldr	x2, [x19, #280]
   3106c:	mov	x1, x23
   31070:	mov	x0, x19
   31074:	blr	x3
   31078:	str	xzr, [x19, #256]
   3107c:	ldr	x0, [x19, #320]
   31080:	add	x0, x0, #0x1
   31084:	str	x0, [x19, #320]
   31088:	b	31030 <__asan_backtrace_create_state@@Base+0x51ec>
   3108c:	ldp	x23, x24, [sp, #48]
   31090:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31094:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31098:	add	x0, x0, #0xef8
   3109c:	bl	67e0 <__asan_internal_strlen@plt>
   310a0:	cbz	x0, 31a38 <__asan_backtrace_create_state@@Base+0x5bf4>
   310a4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   310a8:	add	x20, x20, #0xef8
   310ac:	add	x22, x0, x20
   310b0:	mov	x23, #0xff                  	// #255
   310b4:	b	310d8 <__asan_backtrace_create_state@@Base+0x5294>
   310b8:	ldr	x0, [x19, #256]
   310bc:	add	x1, x0, #0x1
   310c0:	str	x1, [x19, #256]
   310c4:	strb	w21, [x19, x0]
   310c8:	strb	w21, [x19, #264]
   310cc:	add	x20, x20, #0x1
   310d0:	cmp	x22, x20
   310d4:	b.eq	31114 <__asan_backtrace_create_state@@Base+0x52d0>  // b.none
   310d8:	ldrb	w21, [x20]
   310dc:	ldr	x0, [x19, #256]
   310e0:	cmp	x0, #0xff
   310e4:	b.ne	310b8 <__asan_backtrace_create_state@@Base+0x5274>  // b.any
   310e8:	strb	wzr, [x19, #255]
   310ec:	ldr	x3, [x19, #272]
   310f0:	ldr	x2, [x19, #280]
   310f4:	mov	x1, x23
   310f8:	mov	x0, x19
   310fc:	blr	x3
   31100:	str	xzr, [x19, #256]
   31104:	ldr	x0, [x19, #320]
   31108:	add	x0, x0, #0x1
   3110c:	str	x0, [x19, #320]
   31110:	b	310b8 <__asan_backtrace_create_state@@Base+0x5274>
   31114:	ldp	x23, x24, [sp, #48]
   31118:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   3111c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31120:	add	x0, x0, #0xf08
   31124:	bl	67e0 <__asan_internal_strlen@plt>
   31128:	cbz	x0, 31a40 <__asan_backtrace_create_state@@Base+0x5bfc>
   3112c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31130:	add	x20, x20, #0xf08
   31134:	add	x22, x0, x20
   31138:	mov	x23, #0xff                  	// #255
   3113c:	b	31160 <__asan_backtrace_create_state@@Base+0x531c>
   31140:	ldr	x0, [x19, #256]
   31144:	add	x1, x0, #0x1
   31148:	str	x1, [x19, #256]
   3114c:	strb	w21, [x19, x0]
   31150:	strb	w21, [x19, #264]
   31154:	add	x20, x20, #0x1
   31158:	cmp	x20, x22
   3115c:	b.eq	3119c <__asan_backtrace_create_state@@Base+0x5358>  // b.none
   31160:	ldrb	w21, [x20]
   31164:	ldr	x0, [x19, #256]
   31168:	cmp	x0, #0xff
   3116c:	b.ne	31140 <__asan_backtrace_create_state@@Base+0x52fc>  // b.any
   31170:	strb	wzr, [x19, #255]
   31174:	ldr	x3, [x19, #272]
   31178:	ldr	x2, [x19, #280]
   3117c:	mov	x1, x23
   31180:	mov	x0, x19
   31184:	blr	x3
   31188:	str	xzr, [x19, #256]
   3118c:	ldr	x0, [x19, #320]
   31190:	add	x0, x0, #0x1
   31194:	str	x0, [x19, #320]
   31198:	b	31140 <__asan_backtrace_create_state@@Base+0x52fc>
   3119c:	ldp	x23, x24, [sp, #48]
   311a0:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   311a4:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   311a8:	add	x0, x0, #0xf10
   311ac:	bl	67e0 <__asan_internal_strlen@plt>
   311b0:	cbz	x0, 31a48 <__asan_backtrace_create_state@@Base+0x5c04>
   311b4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   311b8:	add	x20, x20, #0xf10
   311bc:	add	x22, x0, x20
   311c0:	mov	x23, #0xff                  	// #255
   311c4:	b	311e8 <__asan_backtrace_create_state@@Base+0x53a4>
   311c8:	ldr	x0, [x19, #256]
   311cc:	add	x1, x0, #0x1
   311d0:	str	x1, [x19, #256]
   311d4:	strb	w21, [x19, x0]
   311d8:	strb	w21, [x19, #264]
   311dc:	add	x20, x20, #0x1
   311e0:	cmp	x20, x22
   311e4:	b.eq	31224 <__asan_backtrace_create_state@@Base+0x53e0>  // b.none
   311e8:	ldrb	w21, [x20]
   311ec:	ldr	x0, [x19, #256]
   311f0:	cmp	x0, #0xff
   311f4:	b.ne	311c8 <__asan_backtrace_create_state@@Base+0x5384>  // b.any
   311f8:	strb	wzr, [x19, #255]
   311fc:	ldr	x3, [x19, #272]
   31200:	ldr	x2, [x19, #280]
   31204:	mov	x1, x23
   31208:	mov	x0, x19
   3120c:	blr	x3
   31210:	str	xzr, [x19, #256]
   31214:	ldr	x0, [x19, #320]
   31218:	add	x0, x0, #0x1
   3121c:	str	x0, [x19, #320]
   31220:	b	311c8 <__asan_backtrace_create_state@@Base+0x5384>
   31224:	ldp	x23, x24, [sp, #48]
   31228:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   3122c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31230:	add	x0, x0, #0xf28
   31234:	bl	67e0 <__asan_internal_strlen@plt>
   31238:	cbz	x0, 312b4 <__asan_backtrace_create_state@@Base+0x5470>
   3123c:	str	x25, [sp, #64]
   31240:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31244:	add	x22, x22, #0xf28
   31248:	add	x24, x0, x22
   3124c:	mov	x25, #0xff                  	// #255
   31250:	b	31274 <__asan_backtrace_create_state@@Base+0x5430>
   31254:	ldr	x0, [x19, #256]
   31258:	add	x1, x0, #0x1
   3125c:	str	x1, [x19, #256]
   31260:	strb	w23, [x19, x0]
   31264:	strb	w23, [x19, #264]
   31268:	add	x22, x22, #0x1
   3126c:	cmp	x22, x24
   31270:	b.eq	312b0 <__asan_backtrace_create_state@@Base+0x546c>  // b.none
   31274:	ldrb	w23, [x22]
   31278:	ldr	x0, [x19, #256]
   3127c:	cmp	x0, #0xff
   31280:	b.ne	31254 <__asan_backtrace_create_state@@Base+0x5410>  // b.any
   31284:	strb	wzr, [x19, #255]
   31288:	ldr	x3, [x19, #272]
   3128c:	ldr	x2, [x19, #280]
   31290:	mov	x1, x25
   31294:	mov	x0, x19
   31298:	blr	x3
   3129c:	str	xzr, [x19, #256]
   312a0:	ldr	x0, [x19, #320]
   312a4:	add	x0, x0, #0x1
   312a8:	str	x0, [x19, #320]
   312ac:	b	31254 <__asan_backtrace_create_state@@Base+0x5410>
   312b0:	ldr	x25, [sp, #64]
   312b4:	ldr	x0, [x20, #16]
   312b8:	cbz	x0, 31a50 <__asan_backtrace_create_state@@Base+0x5c0c>
   312bc:	ldr	x0, [x19, #256]
   312c0:	cmp	x0, #0xff
   312c4:	b.eq	3131c <__asan_backtrace_create_state@@Base+0x54d8>  // b.none
   312c8:	ldr	x1, [x19, #256]
   312cc:	add	x0, x1, #0x1
   312d0:	str	x0, [x19, #256]
   312d4:	mov	w0, #0x28                  	// #40
   312d8:	strb	w0, [x19, x1]
   312dc:	strb	w0, [x19, #264]
   312e0:	ldr	x2, [x20, #16]
   312e4:	mov	w1, w21
   312e8:	mov	x0, x19
   312ec:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   312f0:	ldr	x0, [x19, #256]
   312f4:	cmp	x0, #0xff
   312f8:	b.eq	31348 <__asan_backtrace_create_state@@Base+0x5504>  // b.none
   312fc:	ldr	x1, [x19, #256]
   31300:	add	x0, x1, #0x1
   31304:	str	x0, [x19, #256]
   31308:	mov	w0, #0x29                  	// #41
   3130c:	strb	w0, [x19, x1]
   31310:	strb	w0, [x19, #264]
   31314:	ldp	x23, x24, [sp, #48]
   31318:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   3131c:	strb	wzr, [x19, #255]
   31320:	ldr	x3, [x19, #272]
   31324:	ldr	x2, [x19, #280]
   31328:	mov	x1, #0xff                  	// #255
   3132c:	mov	x0, x19
   31330:	blr	x3
   31334:	str	xzr, [x19, #256]
   31338:	ldr	x0, [x19, #320]
   3133c:	add	x0, x0, #0x1
   31340:	str	x0, [x19, #320]
   31344:	b	312c8 <__asan_backtrace_create_state@@Base+0x5484>
   31348:	strb	wzr, [x19, #255]
   3134c:	ldr	x3, [x19, #272]
   31350:	ldr	x2, [x19, #280]
   31354:	mov	x1, #0xff                  	// #255
   31358:	mov	x0, x19
   3135c:	blr	x3
   31360:	str	xzr, [x19, #256]
   31364:	ldr	x0, [x19, #320]
   31368:	add	x0, x0, #0x1
   3136c:	str	x0, [x19, #320]
   31370:	b	312fc <__asan_backtrace_create_state@@Base+0x54b8>
   31374:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31378:	add	x0, x0, #0xf38
   3137c:	bl	67e0 <__asan_internal_strlen@plt>
   31380:	cbz	x0, 313fc <__asan_backtrace_create_state@@Base+0x55b8>
   31384:	str	x25, [sp, #64]
   31388:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3138c:	add	x22, x22, #0xf38
   31390:	add	x24, x0, x22
   31394:	mov	x25, #0xff                  	// #255
   31398:	b	313bc <__asan_backtrace_create_state@@Base+0x5578>
   3139c:	ldr	x0, [x19, #256]
   313a0:	add	x1, x0, #0x1
   313a4:	str	x1, [x19, #256]
   313a8:	strb	w23, [x19, x0]
   313ac:	strb	w23, [x19, #264]
   313b0:	add	x22, x22, #0x1
   313b4:	cmp	x22, x24
   313b8:	b.eq	313f8 <__asan_backtrace_create_state@@Base+0x55b4>  // b.none
   313bc:	ldrb	w23, [x22]
   313c0:	ldr	x0, [x19, #256]
   313c4:	cmp	x0, #0xff
   313c8:	b.ne	3139c <__asan_backtrace_create_state@@Base+0x5558>  // b.any
   313cc:	strb	wzr, [x19, #255]
   313d0:	ldr	x3, [x19, #272]
   313d4:	ldr	x2, [x19, #280]
   313d8:	mov	x1, x25
   313dc:	mov	x0, x19
   313e0:	blr	x3
   313e4:	str	xzr, [x19, #256]
   313e8:	ldr	x0, [x19, #320]
   313ec:	add	x0, x0, #0x1
   313f0:	str	x0, [x19, #320]
   313f4:	b	3139c <__asan_backtrace_create_state@@Base+0x5558>
   313f8:	ldr	x25, [sp, #64]
   313fc:	ldr	x0, [x20, #16]
   31400:	cbz	x0, 31a58 <__asan_backtrace_create_state@@Base+0x5c14>
   31404:	ldr	x0, [x19, #256]
   31408:	cmp	x0, #0xff
   3140c:	b.eq	31464 <__asan_backtrace_create_state@@Base+0x5620>  // b.none
   31410:	ldr	x1, [x19, #256]
   31414:	add	x0, x1, #0x1
   31418:	str	x0, [x19, #256]
   3141c:	mov	w0, #0x28                  	// #40
   31420:	strb	w0, [x19, x1]
   31424:	strb	w0, [x19, #264]
   31428:	ldr	x2, [x20, #16]
   3142c:	mov	w1, w21
   31430:	mov	x0, x19
   31434:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   31438:	ldr	x0, [x19, #256]
   3143c:	cmp	x0, #0xff
   31440:	b.eq	31490 <__asan_backtrace_create_state@@Base+0x564c>  // b.none
   31444:	ldr	x1, [x19, #256]
   31448:	add	x0, x1, #0x1
   3144c:	str	x0, [x19, #256]
   31450:	mov	w0, #0x29                  	// #41
   31454:	strb	w0, [x19, x1]
   31458:	strb	w0, [x19, #264]
   3145c:	ldp	x23, x24, [sp, #48]
   31460:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31464:	strb	wzr, [x19, #255]
   31468:	ldr	x3, [x19, #272]
   3146c:	ldr	x2, [x19, #280]
   31470:	mov	x1, #0xff                  	// #255
   31474:	mov	x0, x19
   31478:	blr	x3
   3147c:	str	xzr, [x19, #256]
   31480:	ldr	x0, [x19, #320]
   31484:	add	x0, x0, #0x1
   31488:	str	x0, [x19, #320]
   3148c:	b	31410 <__asan_backtrace_create_state@@Base+0x55cc>
   31490:	strb	wzr, [x19, #255]
   31494:	ldr	x3, [x19, #272]
   31498:	ldr	x2, [x19, #280]
   3149c:	mov	x1, #0xff                  	// #255
   314a0:	mov	x0, x19
   314a4:	blr	x3
   314a8:	str	xzr, [x19, #256]
   314ac:	ldr	x0, [x19, #320]
   314b0:	add	x0, x0, #0x1
   314b4:	str	x0, [x19, #320]
   314b8:	b	31444 <__asan_backtrace_create_state@@Base+0x5600>
   314bc:	ldr	x0, [x19, #256]
   314c0:	cmp	x0, #0xff
   314c4:	b.eq	314f8 <__asan_backtrace_create_state@@Base+0x56b4>  // b.none
   314c8:	ldr	x1, [x19, #256]
   314cc:	add	x0, x1, #0x1
   314d0:	str	x0, [x19, #256]
   314d4:	mov	w0, #0x20                  	// #32
   314d8:	strb	w0, [x19, x1]
   314dc:	strb	w0, [x19, #264]
   314e0:	ldr	x2, [x20, #16]
   314e4:	mov	w1, w21
   314e8:	mov	x0, x19
   314ec:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   314f0:	ldp	x23, x24, [sp, #48]
   314f4:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   314f8:	strb	wzr, [x19, #255]
   314fc:	ldr	x3, [x19, #272]
   31500:	ldr	x2, [x19, #280]
   31504:	mov	x1, #0xff                  	// #255
   31508:	mov	x0, x19
   3150c:	blr	x3
   31510:	str	xzr, [x19, #256]
   31514:	ldr	x0, [x19, #320]
   31518:	add	x0, x0, #0x1
   3151c:	str	x0, [x19, #320]
   31520:	b	314c8 <__asan_backtrace_create_state@@Base+0x5684>
   31524:	tbnz	w21, #2, 31a60 <__asan_backtrace_create_state@@Base+0x5c1c>
   31528:	ldr	x0, [x19, #256]
   3152c:	cmp	x0, #0xff
   31530:	b.eq	31554 <__asan_backtrace_create_state@@Base+0x5710>  // b.none
   31534:	ldr	x1, [x19, #256]
   31538:	add	x0, x1, #0x1
   3153c:	str	x0, [x19, #256]
   31540:	mov	w0, #0x2a                  	// #42
   31544:	strb	w0, [x19, x1]
   31548:	strb	w0, [x19, #264]
   3154c:	ldp	x23, x24, [sp, #48]
   31550:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31554:	strb	wzr, [x19, #255]
   31558:	ldr	x3, [x19, #272]
   3155c:	ldr	x2, [x19, #280]
   31560:	mov	x1, #0xff                  	// #255
   31564:	mov	x0, x19
   31568:	blr	x3
   3156c:	str	xzr, [x19, #256]
   31570:	ldr	x0, [x19, #320]
   31574:	add	x0, x0, #0x1
   31578:	str	x0, [x19, #320]
   3157c:	b	31534 <__asan_backtrace_create_state@@Base+0x56f0>
   31580:	ldr	x0, [x19, #256]
   31584:	cmp	x0, #0xff
   31588:	b.eq	315dc <__asan_backtrace_create_state@@Base+0x5798>  // b.none
   3158c:	ldr	x1, [x19, #256]
   31590:	add	x0, x1, #0x1
   31594:	str	x0, [x19, #256]
   31598:	mov	w0, #0x20                  	// #32
   3159c:	strb	w0, [x19, x1]
   315a0:	strb	w0, [x19, #264]
   315a4:	ldr	x0, [x19, #256]
   315a8:	cmp	x0, #0xff
   315ac:	b.eq	31608 <__asan_backtrace_create_state@@Base+0x57c4>  // b.none
   315b0:	ldr	x1, [x19, #256]
   315b4:	add	x0, x1, #0x1
   315b8:	str	x0, [x19, #256]
   315bc:	mov	w0, #0x26                  	// #38
   315c0:	strb	w0, [x19, x1]
   315c4:	strb	w0, [x19, #264]
   315c8:	ldp	x23, x24, [sp, #48]
   315cc:	ldp	x19, x20, [sp, #16]
   315d0:	ldp	x21, x22, [sp, #32]
   315d4:	ldp	x29, x30, [sp], #80
   315d8:	ret
   315dc:	strb	wzr, [x19, #255]
   315e0:	ldr	x3, [x19, #272]
   315e4:	ldr	x2, [x19, #280]
   315e8:	mov	x1, #0xff                  	// #255
   315ec:	mov	x0, x19
   315f0:	blr	x3
   315f4:	str	xzr, [x19, #256]
   315f8:	ldr	x0, [x19, #320]
   315fc:	add	x0, x0, #0x1
   31600:	str	x0, [x19, #320]
   31604:	b	3158c <__asan_backtrace_create_state@@Base+0x5748>
   31608:	strb	wzr, [x19, #255]
   3160c:	ldr	x3, [x19, #272]
   31610:	ldr	x2, [x19, #280]
   31614:	mov	x1, #0xff                  	// #255
   31618:	mov	x0, x19
   3161c:	blr	x3
   31620:	str	xzr, [x19, #256]
   31624:	ldr	x0, [x19, #320]
   31628:	add	x0, x0, #0x1
   3162c:	str	x0, [x19, #320]
   31630:	b	315b0 <__asan_backtrace_create_state@@Base+0x576c>
   31634:	ldr	x0, [x19, #256]
   31638:	cmp	x0, #0xff
   3163c:	b.eq	3167c <__asan_backtrace_create_state@@Base+0x5838>  // b.none
   31640:	ldr	x1, [x19, #256]
   31644:	add	x0, x1, #0x1
   31648:	str	x0, [x19, #256]
   3164c:	mov	w0, #0x20                  	// #32
   31650:	strb	w0, [x19, x1]
   31654:	strb	w0, [x19, #264]
   31658:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3165c:	add	x0, x0, #0xf40
   31660:	bl	67e0 <__asan_internal_strlen@plt>
   31664:	cbz	x0, 31a68 <__asan_backtrace_create_state@@Base+0x5c24>
   31668:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3166c:	add	x20, x20, #0xf40
   31670:	add	x22, x0, x20
   31674:	mov	x23, #0xff                  	// #255
   31678:	b	316c8 <__asan_backtrace_create_state@@Base+0x5884>
   3167c:	strb	wzr, [x19, #255]
   31680:	ldr	x3, [x19, #272]
   31684:	ldr	x2, [x19, #280]
   31688:	mov	x1, #0xff                  	// #255
   3168c:	mov	x0, x19
   31690:	blr	x3
   31694:	str	xzr, [x19, #256]
   31698:	ldr	x0, [x19, #320]
   3169c:	add	x0, x0, #0x1
   316a0:	str	x0, [x19, #320]
   316a4:	b	31640 <__asan_backtrace_create_state@@Base+0x57fc>
   316a8:	ldr	x0, [x19, #256]
   316ac:	add	x1, x0, #0x1
   316b0:	str	x1, [x19, #256]
   316b4:	strb	w21, [x19, x0]
   316b8:	strb	w21, [x19, #264]
   316bc:	add	x20, x20, #0x1
   316c0:	cmp	x20, x22
   316c4:	b.eq	31704 <__asan_backtrace_create_state@@Base+0x58c0>  // b.none
   316c8:	ldrb	w21, [x20]
   316cc:	ldr	x0, [x19, #256]
   316d0:	cmp	x0, #0xff
   316d4:	b.ne	316a8 <__asan_backtrace_create_state@@Base+0x5864>  // b.any
   316d8:	strb	wzr, [x19, #255]
   316dc:	ldr	x3, [x19, #272]
   316e0:	ldr	x2, [x19, #280]
   316e4:	mov	x1, x23
   316e8:	mov	x0, x19
   316ec:	blr	x3
   316f0:	str	xzr, [x19, #256]
   316f4:	ldr	x0, [x19, #320]
   316f8:	add	x0, x0, #0x1
   316fc:	str	x0, [x19, #320]
   31700:	b	316a8 <__asan_backtrace_create_state@@Base+0x5864>
   31704:	ldp	x23, x24, [sp, #48]
   31708:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   3170c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31710:	add	x0, x0, #0xf48
   31714:	bl	67e0 <__asan_internal_strlen@plt>
   31718:	cbz	x0, 31a70 <__asan_backtrace_create_state@@Base+0x5c2c>
   3171c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31720:	add	x20, x20, #0xf48
   31724:	add	x22, x0, x20
   31728:	mov	x23, #0xff                  	// #255
   3172c:	b	31750 <__asan_backtrace_create_state@@Base+0x590c>
   31730:	ldr	x0, [x19, #256]
   31734:	add	x1, x0, #0x1
   31738:	str	x1, [x19, #256]
   3173c:	strb	w21, [x19, x0]
   31740:	strb	w21, [x19, #264]
   31744:	add	x20, x20, #0x1
   31748:	cmp	x22, x20
   3174c:	b.eq	3178c <__asan_backtrace_create_state@@Base+0x5948>  // b.none
   31750:	ldrb	w21, [x20]
   31754:	ldr	x0, [x19, #256]
   31758:	cmp	x0, #0xff
   3175c:	b.ne	31730 <__asan_backtrace_create_state@@Base+0x58ec>  // b.any
   31760:	strb	wzr, [x19, #255]
   31764:	ldr	x3, [x19, #272]
   31768:	ldr	x2, [x19, #280]
   3176c:	mov	x1, x23
   31770:	mov	x0, x19
   31774:	blr	x3
   31778:	str	xzr, [x19, #256]
   3177c:	ldr	x0, [x19, #320]
   31780:	add	x0, x0, #0x1
   31784:	str	x0, [x19, #320]
   31788:	b	31730 <__asan_backtrace_create_state@@Base+0x58ec>
   3178c:	ldp	x23, x24, [sp, #48]
   31790:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31794:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31798:	add	x0, x0, #0xf58
   3179c:	bl	67e0 <__asan_internal_strlen@plt>
   317a0:	cbz	x0, 31a78 <__asan_backtrace_create_state@@Base+0x5c34>
   317a4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   317a8:	add	x20, x20, #0xf58
   317ac:	add	x22, x0, x20
   317b0:	mov	x23, #0xff                  	// #255
   317b4:	b	317d8 <__asan_backtrace_create_state@@Base+0x5994>
   317b8:	ldr	x0, [x19, #256]
   317bc:	add	x1, x0, #0x1
   317c0:	str	x1, [x19, #256]
   317c4:	strb	w21, [x19, x0]
   317c8:	strb	w21, [x19, #264]
   317cc:	add	x20, x20, #0x1
   317d0:	cmp	x20, x22
   317d4:	b.eq	31814 <__asan_backtrace_create_state@@Base+0x59d0>  // b.none
   317d8:	ldrb	w21, [x20]
   317dc:	ldr	x0, [x19, #256]
   317e0:	cmp	x0, #0xff
   317e4:	b.ne	317b8 <__asan_backtrace_create_state@@Base+0x5974>  // b.any
   317e8:	strb	wzr, [x19, #255]
   317ec:	ldr	x3, [x19, #272]
   317f0:	ldr	x2, [x19, #280]
   317f4:	mov	x1, x23
   317f8:	mov	x0, x19
   317fc:	blr	x3
   31800:	str	xzr, [x19, #256]
   31804:	ldr	x0, [x19, #320]
   31808:	add	x0, x0, #0x1
   3180c:	str	x0, [x19, #320]
   31810:	b	317b8 <__asan_backtrace_create_state@@Base+0x5974>
   31814:	ldp	x23, x24, [sp, #48]
   31818:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   3181c:	ldrb	w0, [x19, #264]
   31820:	cmp	w0, #0x28
   31824:	b.eq	3184c <__asan_backtrace_create_state@@Base+0x5a08>  // b.none
   31828:	ldr	x0, [x19, #256]
   3182c:	cmp	x0, #0xff
   31830:	b.eq	31880 <__asan_backtrace_create_state@@Base+0x5a3c>  // b.none
   31834:	ldr	x1, [x19, #256]
   31838:	add	x0, x1, #0x1
   3183c:	str	x0, [x19, #256]
   31840:	mov	w0, #0x20                  	// #32
   31844:	strb	w0, [x19, x1]
   31848:	strb	w0, [x19, #264]
   3184c:	ldr	x2, [x20, #8]
   31850:	mov	w1, w21
   31854:	mov	x0, x19
   31858:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   3185c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31860:	add	x0, x0, #0xf68
   31864:	bl	67e0 <__asan_internal_strlen@plt>
   31868:	cbz	x0, 31a80 <__asan_backtrace_create_state@@Base+0x5c3c>
   3186c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31870:	add	x20, x20, #0xf68
   31874:	add	x22, x0, x20
   31878:	mov	x23, #0xff                  	// #255
   3187c:	b	318cc <__asan_backtrace_create_state@@Base+0x5a88>
   31880:	strb	wzr, [x19, #255]
   31884:	ldr	x3, [x19, #272]
   31888:	ldr	x2, [x19, #280]
   3188c:	mov	x1, #0xff                  	// #255
   31890:	mov	x0, x19
   31894:	blr	x3
   31898:	str	xzr, [x19, #256]
   3189c:	ldr	x0, [x19, #320]
   318a0:	add	x0, x0, #0x1
   318a4:	str	x0, [x19, #320]
   318a8:	b	31834 <__asan_backtrace_create_state@@Base+0x59f0>
   318ac:	ldr	x0, [x19, #256]
   318b0:	add	x1, x0, #0x1
   318b4:	str	x1, [x19, #256]
   318b8:	strb	w21, [x19, x0]
   318bc:	strb	w21, [x19, #264]
   318c0:	add	x20, x20, #0x1
   318c4:	cmp	x22, x20
   318c8:	b.eq	31908 <__asan_backtrace_create_state@@Base+0x5ac4>  // b.none
   318cc:	ldrb	w21, [x20]
   318d0:	ldr	x0, [x19, #256]
   318d4:	cmp	x0, #0xff
   318d8:	b.ne	318ac <__asan_backtrace_create_state@@Base+0x5a68>  // b.any
   318dc:	strb	wzr, [x19, #255]
   318e0:	ldr	x3, [x19, #272]
   318e4:	ldr	x2, [x19, #280]
   318e8:	mov	x1, x23
   318ec:	mov	x0, x19
   318f0:	blr	x3
   318f4:	str	xzr, [x19, #256]
   318f8:	ldr	x0, [x19, #320]
   318fc:	add	x0, x0, #0x1
   31900:	str	x0, [x19, #320]
   31904:	b	318ac <__asan_backtrace_create_state@@Base+0x5a68>
   31908:	ldp	x23, x24, [sp, #48]
   3190c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31910:	ldr	x2, [x2, #8]
   31914:	mov	w1, w21
   31918:	mov	x0, x19
   3191c:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   31920:	ldp	x23, x24, [sp, #48]
   31924:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31928:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3192c:	add	x0, x0, #0xf70
   31930:	bl	67e0 <__asan_internal_strlen@plt>
   31934:	cbz	x0, 319b0 <__asan_backtrace_create_state@@Base+0x5b6c>
   31938:	str	x25, [sp, #64]
   3193c:	adrp	x22, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31940:	add	x22, x22, #0xf70
   31944:	add	x24, x0, x22
   31948:	mov	x25, #0xff                  	// #255
   3194c:	b	31970 <__asan_backtrace_create_state@@Base+0x5b2c>
   31950:	ldr	x0, [x19, #256]
   31954:	add	x1, x0, #0x1
   31958:	str	x1, [x19, #256]
   3195c:	strb	w23, [x19, x0]
   31960:	strb	w23, [x19, #264]
   31964:	add	x22, x22, #0x1
   31968:	cmp	x22, x24
   3196c:	b.eq	319ac <__asan_backtrace_create_state@@Base+0x5b68>  // b.none
   31970:	ldrb	w23, [x22]
   31974:	ldr	x0, [x19, #256]
   31978:	cmp	x0, #0xff
   3197c:	b.ne	31950 <__asan_backtrace_create_state@@Base+0x5b0c>  // b.any
   31980:	strb	wzr, [x19, #255]
   31984:	ldr	x3, [x19, #272]
   31988:	ldr	x2, [x19, #280]
   3198c:	mov	x1, x25
   31990:	mov	x0, x19
   31994:	blr	x3
   31998:	str	xzr, [x19, #256]
   3199c:	ldr	x0, [x19, #320]
   319a0:	add	x0, x0, #0x1
   319a4:	str	x0, [x19, #320]
   319a8:	b	31950 <__asan_backtrace_create_state@@Base+0x5b0c>
   319ac:	ldr	x25, [sp, #64]
   319b0:	ldr	x2, [x20, #8]
   319b4:	mov	w1, w21
   319b8:	mov	x0, x19
   319bc:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   319c0:	ldr	x0, [x19, #256]
   319c4:	cmp	x0, #0xff
   319c8:	b.eq	319ec <__asan_backtrace_create_state@@Base+0x5ba8>  // b.none
   319cc:	ldr	x1, [x19, #256]
   319d0:	add	x0, x1, #0x1
   319d4:	str	x0, [x19, #256]
   319d8:	mov	w0, #0x29                  	// #41
   319dc:	strb	w0, [x19, x1]
   319e0:	strb	w0, [x19, #264]
   319e4:	ldp	x23, x24, [sp, #48]
   319e8:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   319ec:	strb	wzr, [x19, #255]
   319f0:	ldr	x3, [x19, #272]
   319f4:	ldr	x2, [x19, #280]
   319f8:	mov	x1, #0xff                  	// #255
   319fc:	mov	x0, x19
   31a00:	blr	x3
   31a04:	str	xzr, [x19, #256]
   31a08:	ldr	x0, [x19, #320]
   31a0c:	add	x0, x0, #0x1
   31a10:	str	x0, [x19, #320]
   31a14:	b	319cc <__asan_backtrace_create_state@@Base+0x5b88>
   31a18:	ldp	x23, x24, [sp, #48]
   31a1c:	mov	x2, x20
   31a20:	mov	w1, w21
   31a24:	mov	x0, x19
   31a28:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   31a2c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a30:	ldp	x23, x24, [sp, #48]
   31a34:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a38:	ldp	x23, x24, [sp, #48]
   31a3c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a40:	ldp	x23, x24, [sp, #48]
   31a44:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a48:	ldp	x23, x24, [sp, #48]
   31a4c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a50:	ldp	x23, x24, [sp, #48]
   31a54:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a58:	ldp	x23, x24, [sp, #48]
   31a5c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a60:	ldp	x23, x24, [sp, #48]
   31a64:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a68:	ldp	x23, x24, [sp, #48]
   31a6c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a70:	ldp	x23, x24, [sp, #48]
   31a74:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a78:	ldp	x23, x24, [sp, #48]
   31a7c:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a80:	ldp	x23, x24, [sp, #48]
   31a84:	b	315cc <__asan_backtrace_create_state@@Base+0x5788>
   31a88:	stp	x29, x30, [sp, #-64]!
   31a8c:	mov	x29, sp
   31a90:	stp	x19, x20, [sp, #16]
   31a94:	stp	x21, x22, [sp, #32]
   31a98:	str	x23, [sp, #48]
   31a9c:	mov	x19, x0
   31aa0:	mov	w21, w1
   31aa4:	mov	x22, x2
   31aa8:	mov	x20, x3
   31aac:	cbz	x3, 31af4 <__asan_backtrace_create_state@@Base+0x5cb0>
   31ab0:	mov	x1, x3
   31ab4:	mov	x3, #0x1                   	// #1
   31ab8:	mov	x2, #0xe000000             	// #234881024
   31abc:	movk	x2, #0x862, lsl #32
   31ac0:	ldr	w0, [x1, #16]
   31ac4:	cbnz	w0, 31af4 <__asan_backtrace_create_state@@Base+0x5cb0>
   31ac8:	ldr	x0, [x1, #8]
   31acc:	ldr	w0, [x0]
   31ad0:	cmp	w0, #0x2b
   31ad4:	b.hi	31aec <__asan_backtrace_create_state@@Base+0x5ca8>  // b.pmore
   31ad8:	lsl	x0, x3, x0
   31adc:	tst	x0, x2
   31ae0:	b.ne	31b28 <__asan_backtrace_create_state@@Base+0x5ce4>  // b.any
   31ae4:	tst	x0, #0x1c00000000
   31ae8:	b.ne	31b14 <__asan_backtrace_create_state@@Base+0x5cd0>  // b.any
   31aec:	ldr	x1, [x1]
   31af0:	cbnz	x1, 31ac0 <__asan_backtrace_create_state@@Base+0x5c7c>
   31af4:	ldr	x23, [x19, #296]
   31af8:	str	xzr, [x19, #296]
   31afc:	mov	w3, #0x0                   	// #0
   31b00:	mov	x2, x20
   31b04:	mov	w1, w21
   31b08:	mov	x0, x19
   31b0c:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   31b10:	b	31bbc <__asan_backtrace_create_state@@Base+0x5d78>
   31b14:	ldrb	w0, [x19, #264]
   31b18:	and	w0, w0, #0xfffffffd
   31b1c:	and	w0, w0, #0xff
   31b20:	cmp	w0, #0x28
   31b24:	b.eq	31b58 <__asan_backtrace_create_state@@Base+0x5d14>  // b.none
   31b28:	ldrb	w0, [x19, #264]
   31b2c:	cmp	w0, #0x20
   31b30:	b.eq	31b58 <__asan_backtrace_create_state@@Base+0x5d14>  // b.none
   31b34:	ldr	x0, [x19, #256]
   31b38:	cmp	x0, #0xff
   31b3c:	b.eq	31c44 <__asan_backtrace_create_state@@Base+0x5e00>  // b.none
   31b40:	ldr	x1, [x19, #256]
   31b44:	add	x0, x1, #0x1
   31b48:	str	x0, [x19, #256]
   31b4c:	mov	w0, #0x20                  	// #32
   31b50:	strb	w0, [x19, x1]
   31b54:	strb	w0, [x19, #264]
   31b58:	ldr	x0, [x19, #256]
   31b5c:	cmp	x0, #0xff
   31b60:	b.eq	31c70 <__asan_backtrace_create_state@@Base+0x5e2c>  // b.none
   31b64:	ldr	x1, [x19, #256]
   31b68:	add	x0, x1, #0x1
   31b6c:	str	x0, [x19, #256]
   31b70:	mov	w0, #0x28                  	// #40
   31b74:	strb	w0, [x19, x1]
   31b78:	strb	w0, [x19, #264]
   31b7c:	ldr	x23, [x19, #296]
   31b80:	str	xzr, [x19, #296]
   31b84:	mov	w3, #0x0                   	// #0
   31b88:	mov	x2, x20
   31b8c:	mov	w1, w21
   31b90:	mov	x0, x19
   31b94:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   31b98:	ldr	x0, [x19, #256]
   31b9c:	cmp	x0, #0xff
   31ba0:	b.eq	31c9c <__asan_backtrace_create_state@@Base+0x5e58>  // b.none
   31ba4:	ldr	x1, [x19, #256]
   31ba8:	add	x0, x1, #0x1
   31bac:	str	x0, [x19, #256]
   31bb0:	mov	w0, #0x29                  	// #41
   31bb4:	strb	w0, [x19, x1]
   31bb8:	strb	w0, [x19, #264]
   31bbc:	ldr	x0, [x19, #256]
   31bc0:	cmp	x0, #0xff
   31bc4:	b.eq	31cc8 <__asan_backtrace_create_state@@Base+0x5e84>  // b.none
   31bc8:	ldr	x1, [x19, #256]
   31bcc:	add	x0, x1, #0x1
   31bd0:	str	x0, [x19, #256]
   31bd4:	mov	w0, #0x28                  	// #40
   31bd8:	strb	w0, [x19, x1]
   31bdc:	strb	w0, [x19, #264]
   31be0:	ldr	x2, [x22, #16]
   31be4:	cbz	x2, 31bf4 <__asan_backtrace_create_state@@Base+0x5db0>
   31be8:	mov	w1, w21
   31bec:	mov	x0, x19
   31bf0:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   31bf4:	ldr	x0, [x19, #256]
   31bf8:	cmp	x0, #0xff
   31bfc:	b.eq	31cf4 <__asan_backtrace_create_state@@Base+0x5eb0>  // b.none
   31c00:	ldr	x1, [x19, #256]
   31c04:	add	x0, x1, #0x1
   31c08:	str	x0, [x19, #256]
   31c0c:	mov	w0, #0x29                  	// #41
   31c10:	strb	w0, [x19, x1]
   31c14:	strb	w0, [x19, #264]
   31c18:	mov	w3, #0x1                   	// #1
   31c1c:	mov	x2, x20
   31c20:	mov	w1, w21
   31c24:	mov	x0, x19
   31c28:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   31c2c:	str	x23, [x19, #296]
   31c30:	ldp	x19, x20, [sp, #16]
   31c34:	ldp	x21, x22, [sp, #32]
   31c38:	ldr	x23, [sp, #48]
   31c3c:	ldp	x29, x30, [sp], #64
   31c40:	ret
   31c44:	strb	wzr, [x19, #255]
   31c48:	ldr	x3, [x19, #272]
   31c4c:	ldr	x2, [x19, #280]
   31c50:	mov	x1, #0xff                  	// #255
   31c54:	mov	x0, x19
   31c58:	blr	x3
   31c5c:	str	xzr, [x19, #256]
   31c60:	ldr	x0, [x19, #320]
   31c64:	add	x0, x0, #0x1
   31c68:	str	x0, [x19, #320]
   31c6c:	b	31b40 <__asan_backtrace_create_state@@Base+0x5cfc>
   31c70:	strb	wzr, [x19, #255]
   31c74:	ldr	x3, [x19, #272]
   31c78:	ldr	x2, [x19, #280]
   31c7c:	mov	x1, #0xff                  	// #255
   31c80:	mov	x0, x19
   31c84:	blr	x3
   31c88:	str	xzr, [x19, #256]
   31c8c:	ldr	x0, [x19, #320]
   31c90:	add	x0, x0, #0x1
   31c94:	str	x0, [x19, #320]
   31c98:	b	31b64 <__asan_backtrace_create_state@@Base+0x5d20>
   31c9c:	strb	wzr, [x19, #255]
   31ca0:	ldr	x3, [x19, #272]
   31ca4:	ldr	x2, [x19, #280]
   31ca8:	mov	x1, #0xff                  	// #255
   31cac:	mov	x0, x19
   31cb0:	blr	x3
   31cb4:	str	xzr, [x19, #256]
   31cb8:	ldr	x0, [x19, #320]
   31cbc:	add	x0, x0, #0x1
   31cc0:	str	x0, [x19, #320]
   31cc4:	b	31ba4 <__asan_backtrace_create_state@@Base+0x5d60>
   31cc8:	strb	wzr, [x19, #255]
   31ccc:	ldr	x3, [x19, #272]
   31cd0:	ldr	x2, [x19, #280]
   31cd4:	mov	x1, #0xff                  	// #255
   31cd8:	mov	x0, x19
   31cdc:	blr	x3
   31ce0:	str	xzr, [x19, #256]
   31ce4:	ldr	x0, [x19, #320]
   31ce8:	add	x0, x0, #0x1
   31cec:	str	x0, [x19, #320]
   31cf0:	b	31bc8 <__asan_backtrace_create_state@@Base+0x5d84>
   31cf4:	strb	wzr, [x19, #255]
   31cf8:	ldr	x3, [x19, #272]
   31cfc:	ldr	x2, [x19, #280]
   31d00:	mov	x1, #0xff                  	// #255
   31d04:	mov	x0, x19
   31d08:	blr	x3
   31d0c:	str	xzr, [x19, #256]
   31d10:	ldr	x0, [x19, #320]
   31d14:	add	x0, x0, #0x1
   31d18:	str	x0, [x19, #320]
   31d1c:	b	31c00 <__asan_backtrace_create_state@@Base+0x5dbc>
   31d20:	cbz	x2, 32110 <__asan_backtrace_create_state@@Base+0x62cc>
   31d24:	stp	x29, x30, [sp, #-112]!
   31d28:	mov	x29, sp
   31d2c:	stp	x19, x20, [sp, #16]
   31d30:	stp	x21, x22, [sp, #32]
   31d34:	mov	x19, x0
   31d38:	mov	w22, w1
   31d3c:	mov	x20, x2
   31d40:	mov	w21, w3
   31d44:	ldr	w0, [x0, #304]
   31d48:	cbnz	w0, 31dc8 <__asan_backtrace_create_state@@Base+0x5f84>
   31d4c:	ldr	w0, [x2, #16]
   31d50:	cbnz	w0, 31dd8 <__asan_backtrace_create_state@@Base+0x5f94>
   31d54:	cbnz	w3, 31d68 <__asan_backtrace_create_state@@Base+0x5f24>
   31d58:	ldr	x0, [x2, #8]
   31d5c:	ldr	w0, [x0]
   31d60:	bl	2bed8 <__asan_backtrace_create_state@@Base+0x94>
   31d64:	cbnz	w0, 31dd8 <__asan_backtrace_create_state@@Base+0x5f94>
   31d68:	stp	x23, x24, [sp, #48]
   31d6c:	mov	w0, #0x1                   	// #1
   31d70:	str	w0, [x20, #16]
   31d74:	ldr	x23, [x19, #288]
   31d78:	ldr	x0, [x20, #24]
   31d7c:	str	x0, [x19, #288]
   31d80:	ldr	x2, [x20, #8]
   31d84:	ldr	w0, [x2]
   31d88:	cmp	w0, #0x29
   31d8c:	b.eq	31df0 <__asan_backtrace_create_state@@Base+0x5fac>  // b.none
   31d90:	cmp	w0, #0x2a
   31d94:	b.eq	31e0c <__asan_backtrace_create_state@@Base+0x5fc8>  // b.none
   31d98:	cmp	w0, #0x2
   31d9c:	b.eq	31e28 <__asan_backtrace_create_state@@Base+0x5fe4>  // b.none
   31da0:	mov	w1, w22
   31da4:	mov	x0, x19
   31da8:	bl	30fc4 <__asan_backtrace_create_state@@Base+0x5180>
   31dac:	str	x23, [x19, #288]
   31db0:	mov	w3, w21
   31db4:	ldr	x2, [x20]
   31db8:	mov	w1, w22
   31dbc:	mov	x0, x19
   31dc0:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   31dc4:	ldp	x23, x24, [sp, #48]
   31dc8:	ldp	x19, x20, [sp, #16]
   31dcc:	ldp	x21, x22, [sp, #32]
   31dd0:	ldp	x29, x30, [sp], #112
   31dd4:	ret
   31dd8:	mov	w3, w21
   31ddc:	ldr	x2, [x20]
   31de0:	mov	w1, w22
   31de4:	mov	x0, x19
   31de8:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   31dec:	b	31dc8 <__asan_backtrace_create_state@@Base+0x5f84>
   31df0:	ldr	x3, [x20]
   31df4:	mov	w1, w22
   31df8:	mov	x0, x19
   31dfc:	bl	31a88 <__asan_backtrace_create_state@@Base+0x5c44>
   31e00:	str	x23, [x19, #288]
   31e04:	ldp	x23, x24, [sp, #48]
   31e08:	b	31dc8 <__asan_backtrace_create_state@@Base+0x5f84>
   31e0c:	ldr	x3, [x20]
   31e10:	mov	w1, w22
   31e14:	mov	x0, x19
   31e18:	bl	32114 <__asan_backtrace_create_state@@Base+0x62d0>
   31e1c:	str	x23, [x19, #288]
   31e20:	ldp	x23, x24, [sp, #48]
   31e24:	b	31dc8 <__asan_backtrace_create_state@@Base+0x5f84>
   31e28:	ldr	x21, [x19, #296]
   31e2c:	str	xzr, [x19, #296]
   31e30:	ldr	x0, [x20, #8]
   31e34:	ldr	x2, [x0, #8]
   31e38:	mov	w1, w22
   31e3c:	mov	x0, x19
   31e40:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   31e44:	str	x21, [x19, #296]
   31e48:	tbz	w22, #2, 31e98 <__asan_backtrace_create_state@@Base+0x6054>
   31e4c:	ldr	x0, [x19, #256]
   31e50:	cmp	x0, #0xff
   31e54:	b.eq	31f24 <__asan_backtrace_create_state@@Base+0x60e0>  // b.none
   31e58:	ldr	x1, [x19, #256]
   31e5c:	add	x0, x1, #0x1
   31e60:	str	x0, [x19, #256]
   31e64:	mov	w0, #0x2e                  	// #46
   31e68:	strb	w0, [x19, x1]
   31e6c:	strb	w0, [x19, #264]
   31e70:	ldr	x0, [x20, #8]
   31e74:	ldr	x20, [x0, #16]
   31e78:	ldr	w0, [x20]
   31e7c:	cmp	w0, #0x47
   31e80:	b.eq	31f50 <__asan_backtrace_create_state@@Base+0x610c>  // b.none
   31e84:	ldr	w0, [x20]
   31e88:	bl	2bed8 <__asan_backtrace_create_state@@Base+0x94>
   31e8c:	cbz	w0, 320f4 <__asan_backtrace_create_state@@Base+0x62b0>
   31e90:	ldr	x20, [x20, #8]
   31e94:	b	31e84 <__asan_backtrace_create_state@@Base+0x6040>
   31e98:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31e9c:	add	x0, x0, #0xba0
   31ea0:	bl	67e0 <__asan_internal_strlen@plt>
   31ea4:	cbz	x0, 31e70 <__asan_backtrace_create_state@@Base+0x602c>
   31ea8:	stp	x25, x26, [sp, #64]
   31eac:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31eb0:	add	x21, x21, #0xba0
   31eb4:	add	x25, x0, x21
   31eb8:	mov	x26, #0xff                  	// #255
   31ebc:	b	31ee0 <__asan_backtrace_create_state@@Base+0x609c>
   31ec0:	ldr	x0, [x19, #256]
   31ec4:	add	x1, x0, #0x1
   31ec8:	str	x1, [x19, #256]
   31ecc:	strb	w24, [x19, x0]
   31ed0:	strb	w24, [x19, #264]
   31ed4:	add	x21, x21, #0x1
   31ed8:	cmp	x21, x25
   31edc:	b.eq	31f1c <__asan_backtrace_create_state@@Base+0x60d8>  // b.none
   31ee0:	ldrb	w24, [x21]
   31ee4:	ldr	x0, [x19, #256]
   31ee8:	cmp	x0, #0xff
   31eec:	b.ne	31ec0 <__asan_backtrace_create_state@@Base+0x607c>  // b.any
   31ef0:	strb	wzr, [x19, #255]
   31ef4:	ldr	x3, [x19, #272]
   31ef8:	ldr	x2, [x19, #280]
   31efc:	mov	x1, x26
   31f00:	mov	x0, x19
   31f04:	blr	x3
   31f08:	str	xzr, [x19, #256]
   31f0c:	ldr	x0, [x19, #320]
   31f10:	add	x0, x0, #0x1
   31f14:	str	x0, [x19, #320]
   31f18:	b	31ec0 <__asan_backtrace_create_state@@Base+0x607c>
   31f1c:	ldp	x25, x26, [sp, #64]
   31f20:	b	31e70 <__asan_backtrace_create_state@@Base+0x602c>
   31f24:	strb	wzr, [x19, #255]
   31f28:	ldr	x3, [x19, #272]
   31f2c:	ldr	x2, [x19, #280]
   31f30:	mov	x1, #0xff                  	// #255
   31f34:	mov	x0, x19
   31f38:	blr	x3
   31f3c:	str	xzr, [x19, #256]
   31f40:	ldr	x0, [x19, #320]
   31f44:	add	x0, x0, #0x1
   31f48:	str	x0, [x19, #320]
   31f4c:	b	31e58 <__asan_backtrace_create_state@@Base+0x6014>
   31f50:	stp	x25, x26, [sp, #64]
   31f54:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31f58:	add	x0, x0, #0xba8
   31f5c:	bl	67e0 <__asan_internal_strlen@plt>
   31f60:	cbz	x0, 31fd4 <__asan_backtrace_create_state@@Base+0x6190>
   31f64:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   31f68:	add	x21, x21, #0xba8
   31f6c:	add	x25, x0, x21
   31f70:	mov	x26, #0xff                  	// #255
   31f74:	b	31f98 <__asan_backtrace_create_state@@Base+0x6154>
   31f78:	ldr	x0, [x19, #256]
   31f7c:	add	x1, x0, #0x1
   31f80:	str	x1, [x19, #256]
   31f84:	strb	w24, [x19, x0]
   31f88:	strb	w24, [x19, #264]
   31f8c:	add	x21, x21, #0x1
   31f90:	cmp	x21, x25
   31f94:	b.eq	31fd4 <__asan_backtrace_create_state@@Base+0x6190>  // b.none
   31f98:	ldrb	w24, [x21]
   31f9c:	ldr	x0, [x19, #256]
   31fa0:	cmp	x0, #0xff
   31fa4:	b.ne	31f78 <__asan_backtrace_create_state@@Base+0x6134>  // b.any
   31fa8:	strb	wzr, [x19, #255]
   31fac:	ldr	x3, [x19, #272]
   31fb0:	ldr	x2, [x19, #280]
   31fb4:	mov	x1, x26
   31fb8:	mov	x0, x19
   31fbc:	blr	x3
   31fc0:	str	xzr, [x19, #256]
   31fc4:	ldr	x0, [x19, #320]
   31fc8:	add	x0, x0, #0x1
   31fcc:	str	x0, [x19, #320]
   31fd0:	b	31f78 <__asan_backtrace_create_state@@Base+0x6134>
   31fd4:	ldr	w2, [x20, #16]
   31fd8:	add	x21, sp, #0x50
   31fdc:	add	w2, w2, #0x1
   31fe0:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   31fe4:	add	x1, x1, #0x48
   31fe8:	mov	x0, x21
   31fec:	bl	6900 <sprintf@plt>
   31ff0:	mov	x0, x21
   31ff4:	bl	67e0 <__asan_internal_strlen@plt>
   31ff8:	cbz	x0, 32068 <__asan_backtrace_create_state@@Base+0x6224>
   31ffc:	add	x21, sp, #0x50
   32000:	add	x25, x0, x21
   32004:	mov	x26, #0xff                  	// #255
   32008:	b	3202c <__asan_backtrace_create_state@@Base+0x61e8>
   3200c:	ldr	x0, [x19, #256]
   32010:	add	x1, x0, #0x1
   32014:	str	x1, [x19, #256]
   32018:	strb	w24, [x19, x0]
   3201c:	strb	w24, [x19, #264]
   32020:	add	x21, x21, #0x1
   32024:	cmp	x21, x25
   32028:	b.eq	32068 <__asan_backtrace_create_state@@Base+0x6224>  // b.none
   3202c:	ldrb	w24, [x21]
   32030:	ldr	x0, [x19, #256]
   32034:	cmp	x0, #0xff
   32038:	b.ne	3200c <__asan_backtrace_create_state@@Base+0x61c8>  // b.any
   3203c:	strb	wzr, [x19, #255]
   32040:	ldr	x3, [x19, #272]
   32044:	ldr	x2, [x19, #280]
   32048:	mov	x1, x26
   3204c:	mov	x0, x19
   32050:	blr	x3
   32054:	str	xzr, [x19, #256]
   32058:	ldr	x0, [x19, #320]
   3205c:	add	x0, x0, #0x1
   32060:	str	x0, [x19, #320]
   32064:	b	3200c <__asan_backtrace_create_state@@Base+0x61c8>
   32068:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3206c:	add	x0, x0, #0xbb8
   32070:	bl	67e0 <__asan_internal_strlen@plt>
   32074:	cbz	x0, 320e8 <__asan_backtrace_create_state@@Base+0x62a4>
   32078:	adrp	x21, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3207c:	add	x21, x21, #0xbb8
   32080:	add	x25, x21, x0
   32084:	mov	x26, #0xff                  	// #255
   32088:	b	320ac <__asan_backtrace_create_state@@Base+0x6268>
   3208c:	ldr	x0, [x19, #256]
   32090:	add	x1, x0, #0x1
   32094:	str	x1, [x19, #256]
   32098:	strb	w24, [x19, x0]
   3209c:	strb	w24, [x19, #264]
   320a0:	add	x21, x21, #0x1
   320a4:	cmp	x25, x21
   320a8:	b.eq	320e8 <__asan_backtrace_create_state@@Base+0x62a4>  // b.none
   320ac:	ldrb	w24, [x21]
   320b0:	ldr	x0, [x19, #256]
   320b4:	cmp	x0, #0xff
   320b8:	b.ne	3208c <__asan_backtrace_create_state@@Base+0x6248>  // b.any
   320bc:	strb	wzr, [x19, #255]
   320c0:	ldr	x3, [x19, #272]
   320c4:	ldr	x2, [x19, #280]
   320c8:	mov	x1, x26
   320cc:	mov	x0, x19
   320d0:	blr	x3
   320d4:	str	xzr, [x19, #256]
   320d8:	ldr	x0, [x19, #320]
   320dc:	add	x0, x0, #0x1
   320e0:	str	x0, [x19, #320]
   320e4:	b	3208c <__asan_backtrace_create_state@@Base+0x6248>
   320e8:	ldr	x20, [x20, #8]
   320ec:	ldp	x25, x26, [sp, #64]
   320f0:	b	31e84 <__asan_backtrace_create_state@@Base+0x6040>
   320f4:	mov	x2, x20
   320f8:	mov	w1, w22
   320fc:	mov	x0, x19
   32100:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   32104:	str	x23, [x19, #288]
   32108:	ldp	x23, x24, [sp, #48]
   3210c:	b	31dc8 <__asan_backtrace_create_state@@Base+0x5f84>
   32110:	ret
   32114:	stp	x29, x30, [sp, #-80]!
   32118:	mov	x29, sp
   3211c:	stp	x19, x20, [sp, #16]
   32120:	stp	x21, x22, [sp, #32]
   32124:	stp	x23, x24, [sp, #48]
   32128:	mov	x19, x0
   3212c:	mov	w22, w1
   32130:	mov	x24, x2
   32134:	cbz	x3, 32240 <__asan_backtrace_create_state@@Base+0x63fc>
   32138:	mov	x21, x3
   3213c:	mov	x0, x3
   32140:	ldr	w20, [x0, #16]
   32144:	cbz	w20, 32170 <__asan_backtrace_create_state@@Base+0x632c>
   32148:	ldr	x0, [x0]
   3214c:	cbnz	x0, 32140 <__asan_backtrace_create_state@@Base+0x62fc>
   32150:	mov	w20, #0x1                   	// #1
   32154:	mov	w3, #0x0                   	// #0
   32158:	mov	x2, x21
   3215c:	mov	w1, w22
   32160:	mov	x0, x19
   32164:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   32168:	cbz	w20, 32264 <__asan_backtrace_create_state@@Base+0x6420>
   3216c:	b	32240 <__asan_backtrace_create_state@@Base+0x63fc>
   32170:	ldr	x0, [x0, #8]
   32174:	ldr	w0, [x0]
   32178:	cmp	w0, #0x2a
   3217c:	b.eq	32154 <__asan_backtrace_create_state@@Base+0x6310>  // b.none
   32180:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   32184:	add	x0, x0, #0xe50
   32188:	bl	67e0 <__asan_internal_strlen@plt>
   3218c:	cbz	x0, 32208 <__asan_backtrace_create_state@@Base+0x63c4>
   32190:	stp	x25, x26, [sp, #64]
   32194:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   32198:	add	x20, x20, #0xe50
   3219c:	add	x25, x0, x20
   321a0:	mov	x26, #0xff                  	// #255
   321a4:	b	321c8 <__asan_backtrace_create_state@@Base+0x6384>
   321a8:	ldr	x0, [x19, #256]
   321ac:	add	x1, x0, #0x1
   321b0:	str	x1, [x19, #256]
   321b4:	strb	w23, [x19, x0]
   321b8:	strb	w23, [x19, #264]
   321bc:	add	x20, x20, #0x1
   321c0:	cmp	x25, x20
   321c4:	b.eq	32204 <__asan_backtrace_create_state@@Base+0x63c0>  // b.none
   321c8:	ldrb	w23, [x20]
   321cc:	ldr	x0, [x19, #256]
   321d0:	cmp	x0, #0xff
   321d4:	b.ne	321a8 <__asan_backtrace_create_state@@Base+0x6364>  // b.any
   321d8:	strb	wzr, [x19, #255]
   321dc:	ldr	x3, [x19, #272]
   321e0:	ldr	x2, [x19, #280]
   321e4:	mov	x1, x26
   321e8:	mov	x0, x19
   321ec:	blr	x3
   321f0:	str	xzr, [x19, #256]
   321f4:	ldr	x0, [x19, #320]
   321f8:	add	x0, x0, #0x1
   321fc:	str	x0, [x19, #320]
   32200:	b	321a8 <__asan_backtrace_create_state@@Base+0x6364>
   32204:	ldp	x25, x26, [sp, #64]
   32208:	mov	w3, #0x0                   	// #0
   3220c:	mov	x2, x21
   32210:	mov	w1, w22
   32214:	mov	x0, x19
   32218:	bl	31d20 <__asan_backtrace_create_state@@Base+0x5edc>
   3221c:	ldr	x0, [x19, #256]
   32220:	cmp	x0, #0xff
   32224:	b.eq	322d4 <__asan_backtrace_create_state@@Base+0x6490>  // b.none
   32228:	ldr	x1, [x19, #256]
   3222c:	add	x0, x1, #0x1
   32230:	str	x0, [x19, #256]
   32234:	mov	w0, #0x29                  	// #41
   32238:	strb	w0, [x19, x1]
   3223c:	strb	w0, [x19, #264]
   32240:	ldr	x0, [x19, #256]
   32244:	cmp	x0, #0xff
   32248:	b.eq	32300 <__asan_backtrace_create_state@@Base+0x64bc>  // b.none
   3224c:	ldr	x1, [x19, #256]
   32250:	add	x0, x1, #0x1
   32254:	str	x0, [x19, #256]
   32258:	mov	w0, #0x20                  	// #32
   3225c:	strb	w0, [x19, x1]
   32260:	strb	w0, [x19, #264]
   32264:	ldr	x0, [x19, #256]
   32268:	cmp	x0, #0xff
   3226c:	b.eq	3232c <__asan_backtrace_create_state@@Base+0x64e8>  // b.none
   32270:	ldr	x1, [x19, #256]
   32274:	add	x0, x1, #0x1
   32278:	str	x0, [x19, #256]
   3227c:	mov	w0, #0x5b                  	// #91
   32280:	strb	w0, [x19, x1]
   32284:	strb	w0, [x19, #264]
   32288:	ldr	x2, [x24, #8]
   3228c:	cbz	x2, 3229c <__asan_backtrace_create_state@@Base+0x6458>
   32290:	mov	w1, w22
   32294:	mov	x0, x19
   32298:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   3229c:	ldr	x0, [x19, #256]
   322a0:	cmp	x0, #0xff
   322a4:	b.eq	32358 <__asan_backtrace_create_state@@Base+0x6514>  // b.none
   322a8:	ldr	x1, [x19, #256]
   322ac:	add	x0, x1, #0x1
   322b0:	str	x0, [x19, #256]
   322b4:	mov	w0, #0x5d                  	// #93
   322b8:	strb	w0, [x19, x1]
   322bc:	strb	w0, [x19, #264]
   322c0:	ldp	x19, x20, [sp, #16]
   322c4:	ldp	x21, x22, [sp, #32]
   322c8:	ldp	x23, x24, [sp, #48]
   322cc:	ldp	x29, x30, [sp], #80
   322d0:	ret
   322d4:	strb	wzr, [x19, #255]
   322d8:	ldr	x3, [x19, #272]
   322dc:	ldr	x2, [x19, #280]
   322e0:	mov	x1, #0xff                  	// #255
   322e4:	mov	x0, x19
   322e8:	blr	x3
   322ec:	str	xzr, [x19, #256]
   322f0:	ldr	x0, [x19, #320]
   322f4:	add	x0, x0, #0x1
   322f8:	str	x0, [x19, #320]
   322fc:	b	32228 <__asan_backtrace_create_state@@Base+0x63e4>
   32300:	strb	wzr, [x19, #255]
   32304:	ldr	x3, [x19, #272]
   32308:	ldr	x2, [x19, #280]
   3230c:	mov	x1, #0xff                  	// #255
   32310:	mov	x0, x19
   32314:	blr	x3
   32318:	str	xzr, [x19, #256]
   3231c:	ldr	x0, [x19, #320]
   32320:	add	x0, x0, #0x1
   32324:	str	x0, [x19, #320]
   32328:	b	3224c <__asan_backtrace_create_state@@Base+0x6408>
   3232c:	strb	wzr, [x19, #255]
   32330:	ldr	x3, [x19, #272]
   32334:	ldr	x2, [x19, #280]
   32338:	mov	x1, #0xff                  	// #255
   3233c:	mov	x0, x19
   32340:	blr	x3
   32344:	str	xzr, [x19, #256]
   32348:	ldr	x0, [x19, #320]
   3234c:	add	x0, x0, #0x1
   32350:	str	x0, [x19, #320]
   32354:	b	32270 <__asan_backtrace_create_state@@Base+0x642c>
   32358:	strb	wzr, [x19, #255]
   3235c:	ldr	x3, [x19, #272]
   32360:	ldr	x2, [x19, #280]
   32364:	mov	x1, #0xff                  	// #255
   32368:	mov	x0, x19
   3236c:	blr	x3
   32370:	str	xzr, [x19, #256]
   32374:	ldr	x0, [x19, #320]
   32378:	add	x0, x0, #0x1
   3237c:	str	x0, [x19, #320]
   32380:	b	322a8 <__asan_backtrace_create_state@@Base+0x6464>
   32384:	stp	x29, x30, [sp, #-64]!
   32388:	mov	x29, sp
   3238c:	stp	x19, x20, [sp, #16]
   32390:	mov	x19, x0
   32394:	ldr	w0, [x2]
   32398:	cmp	w0, #0x32
   3239c:	b.eq	323b4 <__asan_backtrace_create_state@@Base+0x6570>  // b.none
   323a0:	mov	x0, x19
   323a4:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   323a8:	ldp	x19, x20, [sp, #16]
   323ac:	ldp	x29, x30, [sp], #64
   323b0:	ret
   323b4:	stp	x21, x22, [sp, #32]
   323b8:	ldr	x0, [x2, #8]
   323bc:	ldr	x22, [x0, #8]
   323c0:	ldrsw	x0, [x0, #16]
   323c4:	cbz	x0, 32444 <__asan_backtrace_create_state@@Base+0x6600>
   323c8:	str	x23, [sp, #48]
   323cc:	mov	x20, x22
   323d0:	add	x22, x22, x0
   323d4:	mov	x23, #0xff                  	// #255
   323d8:	b	323fc <__asan_backtrace_create_state@@Base+0x65b8>
   323dc:	ldr	x0, [x19, #256]
   323e0:	add	x1, x0, #0x1
   323e4:	str	x1, [x19, #256]
   323e8:	strb	w21, [x19, x0]
   323ec:	strb	w21, [x19, #264]
   323f0:	add	x20, x20, #0x1
   323f4:	cmp	x20, x22
   323f8:	b.eq	32438 <__asan_backtrace_create_state@@Base+0x65f4>  // b.none
   323fc:	ldrb	w21, [x20]
   32400:	ldr	x0, [x19, #256]
   32404:	cmp	x0, #0xff
   32408:	b.ne	323dc <__asan_backtrace_create_state@@Base+0x6598>  // b.any
   3240c:	strb	wzr, [x19, #255]
   32410:	ldr	x3, [x19, #272]
   32414:	ldr	x2, [x19, #280]
   32418:	mov	x1, x23
   3241c:	mov	x0, x19
   32420:	blr	x3
   32424:	str	xzr, [x19, #256]
   32428:	ldr	x0, [x19, #320]
   3242c:	add	x0, x0, #0x1
   32430:	str	x0, [x19, #320]
   32434:	b	323dc <__asan_backtrace_create_state@@Base+0x6598>
   32438:	ldp	x21, x22, [sp, #32]
   3243c:	ldr	x23, [sp, #48]
   32440:	b	323a8 <__asan_backtrace_create_state@@Base+0x6564>
   32444:	ldp	x21, x22, [sp, #32]
   32448:	b	323a8 <__asan_backtrace_create_state@@Base+0x6564>
   3244c:	stp	x29, x30, [sp, #-48]!
   32450:	mov	x29, sp
   32454:	stp	x19, x20, [sp, #16]
   32458:	str	x21, [sp, #32]
   3245c:	mov	x19, x0
   32460:	mov	w21, w1
   32464:	mov	x20, x2
   32468:	ldr	w0, [x2]
   3246c:	cmp	w0, #0x31
   32470:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   32474:	ccmp	w0, #0x6, #0x4, hi  // hi = pmore
   32478:	b.ne	32488 <__asan_backtrace_create_state@@Base+0x6644>  // b.any
   3247c:	mov	x0, x19
   32480:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   32484:	b	324e0 <__asan_backtrace_create_state@@Base+0x669c>
   32488:	ldr	x0, [x19, #256]
   3248c:	cmp	x0, #0xff
   32490:	b.eq	324f0 <__asan_backtrace_create_state@@Base+0x66ac>  // b.none
   32494:	ldr	x1, [x19, #256]
   32498:	add	x0, x1, #0x1
   3249c:	str	x0, [x19, #256]
   324a0:	mov	w0, #0x28                  	// #40
   324a4:	strb	w0, [x19, x1]
   324a8:	strb	w0, [x19, #264]
   324ac:	mov	x2, x20
   324b0:	mov	w1, w21
   324b4:	mov	x0, x19
   324b8:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   324bc:	ldr	x0, [x19, #256]
   324c0:	cmp	x0, #0xff
   324c4:	b.eq	3251c <__asan_backtrace_create_state@@Base+0x66d8>  // b.none
   324c8:	ldr	x1, [x19, #256]
   324cc:	add	x0, x1, #0x1
   324d0:	str	x0, [x19, #256]
   324d4:	mov	w0, #0x29                  	// #41
   324d8:	strb	w0, [x19, x1]
   324dc:	strb	w0, [x19, #264]
   324e0:	ldp	x19, x20, [sp, #16]
   324e4:	ldr	x21, [sp, #32]
   324e8:	ldp	x29, x30, [sp], #48
   324ec:	ret
   324f0:	strb	wzr, [x19, #255]
   324f4:	ldr	x3, [x19, #272]
   324f8:	ldr	x2, [x19, #280]
   324fc:	mov	x1, #0xff                  	// #255
   32500:	mov	x0, x19
   32504:	blr	x3
   32508:	str	xzr, [x19, #256]
   3250c:	ldr	x0, [x19, #320]
   32510:	add	x0, x0, #0x1
   32514:	str	x0, [x19, #320]
   32518:	b	32494 <__asan_backtrace_create_state@@Base+0x6650>
   3251c:	strb	wzr, [x19, #255]
   32520:	ldr	x3, [x19, #272]
   32524:	ldr	x2, [x19, #280]
   32528:	mov	x1, #0xff                  	// #255
   3252c:	mov	x0, x19
   32530:	blr	x3
   32534:	str	xzr, [x19, #256]
   32538:	ldr	x0, [x19, #320]
   3253c:	add	x0, x0, #0x1
   32540:	str	x0, [x19, #320]
   32544:	b	324c8 <__asan_backtrace_create_state@@Base+0x6684>
   32548:	stp	x29, x30, [sp, #-96]!
   3254c:	mov	x29, sp
   32550:	stp	x19, x20, [sp, #16]
   32554:	stp	x21, x22, [sp, #32]
   32558:	mov	x19, x0
   3255c:	mov	w21, w1
   32560:	ldr	x0, [x2, #8]
   32564:	ldr	x0, [x0, #8]
   32568:	ldr	x0, [x0]
   3256c:	ldrb	w1, [x0]
   32570:	cmp	w1, #0x66
   32574:	b.ne	32950 <__asan_backtrace_create_state@@Base+0x6b0c>  // b.any
   32578:	stp	x23, x24, [sp, #48]
   3257c:	stp	x25, x26, [sp, #64]
   32580:	ldr	x1, [x2, #16]
   32584:	ldr	x24, [x1, #8]
   32588:	ldr	x25, [x1, #16]
   3258c:	ldr	w1, [x25]
   32590:	mov	x26, #0x0                   	// #0
   32594:	cmp	w1, #0x3c
   32598:	b.eq	32634 <__asan_backtrace_create_state@@Base+0x67f0>  // b.none
   3259c:	ldr	w23, [x19, #316]
   325a0:	mov	w1, #0xffffffff            	// #-1
   325a4:	str	w1, [x19, #316]
   325a8:	ldrb	w0, [x0, #1]
   325ac:	cmp	w0, #0x6c
   325b0:	b.eq	326b0 <__asan_backtrace_create_state@@Base+0x686c>  // b.none
   325b4:	b.hi	32640 <__asan_backtrace_create_state@@Base+0x67fc>  // b.pmore
   325b8:	cmp	w0, #0x4c
   325bc:	b.eq	325c8 <__asan_backtrace_create_state@@Base+0x6784>  // b.none
   325c0:	cmp	w0, #0x52
   325c4:	b.ne	3277c <__asan_backtrace_create_state@@Base+0x6938>  // b.any
   325c8:	ldr	x0, [x19, #256]
   325cc:	cmp	x0, #0xff
   325d0:	b.eq	32850 <__asan_backtrace_create_state@@Base+0x6a0c>  // b.none
   325d4:	ldr	x1, [x19, #256]
   325d8:	add	x0, x1, #0x1
   325dc:	str	x0, [x19, #256]
   325e0:	mov	w0, #0x28                  	// #40
   325e4:	strb	w0, [x19, x1]
   325e8:	strb	w0, [x19, #264]
   325ec:	mov	x2, x25
   325f0:	mov	w1, w21
   325f4:	mov	x0, x19
   325f8:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   325fc:	mov	x2, x24
   32600:	mov	w1, w21
   32604:	mov	x0, x19
   32608:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   3260c:	adrp	x0, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   32610:	add	x0, x0, #0x900
   32614:	bl	67e0 <__asan_internal_strlen@plt>
   32618:	cbz	x0, 328dc <__asan_backtrace_create_state@@Base+0x6a98>
   3261c:	str	x27, [sp, #80]
   32620:	adrp	x20, 3e000 <__asan_backtrace_vector_release@@Base+0x3c58>
   32624:	add	x20, x20, #0x900
   32628:	add	x25, x0, x20
   3262c:	mov	x27, #0xff                  	// #255
   32630:	b	3289c <__asan_backtrace_create_state@@Base+0x6a58>
   32634:	ldr	x26, [x25, #16]
   32638:	ldr	x25, [x25, #8]
   3263c:	b	3259c <__asan_backtrace_create_state@@Base+0x6758>
   32640:	cmp	w0, #0x72
   32644:	b.ne	3277c <__asan_backtrace_create_state@@Base+0x6938>  // b.any
   32648:	ldr	x0, [x19, #256]
   3264c:	cmp	x0, #0xff
   32650:	b.eq	327c8 <__asan_backtrace_create_state@@Base+0x6984>  // b.none
   32654:	ldr	x1, [x19, #256]
   32658:	add	x0, x1, #0x1
   3265c:	str	x0, [x19, #256]
   32660:	mov	w0, #0x28                  	// #40
   32664:	strb	w0, [x19, x1]
   32668:	strb	w0, [x19, #264]
   3266c:	mov	x2, x25
   32670:	mov	w1, w21
   32674:	mov	x0, x19
   32678:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   3267c:	mov	x2, x24
   32680:	mov	w1, w21
   32684:	mov	x0, x19
   32688:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   3268c:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   32690:	add	x0, x0, #0xf88
   32694:	bl	67e0 <__asan_internal_strlen@plt>
   32698:	cbz	x0, 3277c <__asan_backtrace_create_state@@Base+0x6938>
   3269c:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   326a0:	add	x20, x20, #0xf88
   326a4:	add	x22, x0, x20
   326a8:	mov	x24, #0xff                  	// #255
   326ac:	b	32814 <__asan_backtrace_create_state@@Base+0x69d0>
   326b0:	adrp	x0, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   326b4:	add	x0, x0, #0xf80
   326b8:	bl	67e0 <__asan_internal_strlen@plt>
   326bc:	cbz	x0, 32738 <__asan_backtrace_create_state@@Base+0x68f4>
   326c0:	str	x27, [sp, #80]
   326c4:	adrp	x20, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   326c8:	add	x20, x20, #0xf80
   326cc:	add	x26, x0, x20
   326d0:	mov	x27, #0xff                  	// #255
   326d4:	b	326f8 <__asan_backtrace_create_state@@Base+0x68b4>
   326d8:	ldr	x0, [x19, #256]
   326dc:	add	x1, x0, #0x1
   326e0:	str	x1, [x19, #256]
   326e4:	strb	w22, [x19, x0]
   326e8:	strb	w22, [x19, #264]
   326ec:	add	x20, x20, #0x1
   326f0:	cmp	x26, x20
   326f4:	b.eq	32734 <__asan_backtrace_create_state@@Base+0x68f0>  // b.none
   326f8:	ldrb	w22, [x20]
   326fc:	ldr	x0, [x19, #256]
   32700:	cmp	x0, #0xff
   32704:	b.ne	326d8 <__asan_backtrace_create_state@@Base+0x6894>  // b.any
   32708:	strb	wzr, [x19, #255]
   3270c:	ldr	x3, [x19, #272]
   32710:	ldr	x2, [x19, #280]
   32714:	mov	x1, x27
   32718:	mov	x0, x19
   3271c:	blr	x3
   32720:	str	xzr, [x19, #256]
   32724:	ldr	x0, [x19, #320]
   32728:	add	x0, x0, #0x1
   3272c:	str	x0, [x19, #320]
   32730:	b	326d8 <__asan_backtrace_create_state@@Base+0x6894>
   32734:	ldr	x27, [sp, #80]
   32738:	mov	x2, x24
   3273c:	mov	w1, w21
   32740:	mov	x0, x19
   32744:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   32748:	mov	x2, x25
   3274c:	mov	w1, w21
   32750:	mov	x0, x19
   32754:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   32758:	ldr	x0, [x19, #256]
   3275c:	cmp	x0, #0xff
   32760:	b.eq	3279c <__asan_backtrace_create_state@@Base+0x6958>  // b.none
   32764:	ldr	x1, [x19, #256]
   32768:	add	x0, x1, #0x1
   3276c:	str	x0, [x19, #256]
   32770:	mov	w0, #0x29                  	// #41
   32774:	strb	w0, [x19, x1]
   32778:	strb	w0, [x19, #264]
   3277c:	str	w23, [x19, #316]
   32780:	mov	w0, #0x1                   	// #1
   32784:	ldp	x23, x24, [sp, #48]
   32788:	ldp	x25, x26, [sp, #64]
   3278c:	ldp	x19, x20, [sp, #16]
   32790:	ldp	x21, x22, [sp, #32]
   32794:	ldp	x29, x30, [sp], #96
   32798:	ret
   3279c:	strb	wzr, [x19, #255]
   327a0:	ldr	x3, [x19, #272]
   327a4:	ldr	x2, [x19, #280]
   327a8:	mov	x1, #0xff                  	// #255
   327ac:	mov	x0, x19
   327b0:	blr	x3
   327b4:	str	xzr, [x19, #256]
   327b8:	ldr	x0, [x19, #320]
   327bc:	add	x0, x0, #0x1
   327c0:	str	x0, [x19, #320]
   327c4:	b	32764 <__asan_backtrace_create_state@@Base+0x6920>
   327c8:	strb	wzr, [x19, #255]
   327cc:	ldr	x3, [x19, #272]
   327d0:	ldr	x2, [x19, #280]
   327d4:	mov	x1, #0xff                  	// #255
   327d8:	mov	x0, x19
   327dc:	blr	x3
   327e0:	str	xzr, [x19, #256]
   327e4:	ldr	x0, [x19, #320]
   327e8:	add	x0, x0, #0x1
   327ec:	str	x0, [x19, #320]
   327f0:	b	32654 <__asan_backtrace_create_state@@Base+0x6810>
   327f4:	ldr	x0, [x19, #256]
   327f8:	add	x1, x0, #0x1
   327fc:	str	x1, [x19, #256]
   32800:	strb	w21, [x19, x0]
   32804:	strb	w21, [x19, #264]
   32808:	add	x20, x20, #0x1
   3280c:	cmp	x20, x22
   32810:	b.eq	3277c <__asan_backtrace_create_state@@Base+0x6938>  // b.none
   32814:	ldrb	w21, [x20]
   32818:	ldr	x0, [x19, #256]
   3281c:	cmp	x0, #0xff
   32820:	b.ne	327f4 <__asan_backtrace_create_state@@Base+0x69b0>  // b.any
   32824:	strb	wzr, [x19, #255]
   32828:	ldr	x3, [x19, #272]
   3282c:	ldr	x2, [x19, #280]
   32830:	mov	x1, x24
   32834:	mov	x0, x19
   32838:	blr	x3
   3283c:	str	xzr, [x19, #256]
   32840:	ldr	x0, [x19, #320]
   32844:	add	x0, x0, #0x1
   32848:	str	x0, [x19, #320]
   3284c:	b	327f4 <__asan_backtrace_create_state@@Base+0x69b0>
   32850:	strb	wzr, [x19, #255]
   32854:	ldr	x3, [x19, #272]
   32858:	ldr	x2, [x19, #280]
   3285c:	mov	x1, #0xff                  	// #255
   32860:	mov	x0, x19
   32864:	blr	x3
   32868:	str	xzr, [x19, #256]
   3286c:	ldr	x0, [x19, #320]
   32870:	add	x0, x0, #0x1
   32874:	str	x0, [x19, #320]
   32878:	b	325d4 <__asan_backtrace_create_state@@Base+0x6790>
   3287c:	ldr	x0, [x19, #256]
   32880:	add	x1, x0, #0x1
   32884:	str	x1, [x19, #256]
   32888:	strb	w22, [x19, x0]
   3288c:	strb	w22, [x19, #264]
   32890:	add	x20, x20, #0x1
   32894:	cmp	x20, x25
   32898:	b.eq	328d8 <__asan_backtrace_create_state@@Base+0x6a94>  // b.none
   3289c:	ldrb	w22, [x20]
   328a0:	ldr	x0, [x19, #256]
   328a4:	cmp	x0, #0xff
   328a8:	b.ne	3287c <__asan_backtrace_create_state@@Base+0x6a38>  // b.any
   328ac:	strb	wzr, [x19, #255]
   328b0:	ldr	x3, [x19, #272]
   328b4:	ldr	x2, [x19, #280]
   328b8:	mov	x1, x27
   328bc:	mov	x0, x19
   328c0:	blr	x3
   328c4:	str	xzr, [x19, #256]
   328c8:	ldr	x0, [x19, #320]
   328cc:	add	x0, x0, #0x1
   328d0:	str	x0, [x19, #320]
   328d4:	b	3287c <__asan_backtrace_create_state@@Base+0x6a38>
   328d8:	ldr	x27, [sp, #80]
   328dc:	mov	x2, x24
   328e0:	mov	w1, w21
   328e4:	mov	x0, x19
   328e8:	bl	32384 <__asan_backtrace_create_state@@Base+0x6540>
   328ec:	mov	x2, x26
   328f0:	mov	w1, w21
   328f4:	mov	x0, x19
   328f8:	bl	3244c <__asan_backtrace_create_state@@Base+0x6608>
   328fc:	ldr	x0, [x19, #256]
   32900:	cmp	x0, #0xff
   32904:	b.eq	32924 <__asan_backtrace_create_state@@Base+0x6ae0>  // b.none
   32908:	ldr	x1, [x19, #256]
   3290c:	add	x0, x1, #0x1
   32910:	str	x0, [x19, #256]
   32914:	mov	w0, #0x29                  	// #41
   32918:	strb	w0, [x19, x1]
   3291c:	strb	w0, [x19, #264]
   32920:	b	3277c <__asan_backtrace_create_state@@Base+0x6938>
   32924:	strb	wzr, [x19, #255]
   32928:	ldr	x3, [x19, #272]
   3292c:	ldr	x2, [x19, #280]
   32930:	mov	x1, #0xff                  	// #255
   32934:	mov	x0, x19
   32938:	blr	x3
   3293c:	str	xzr, [x19, #256]
   32940:	ldr	x0, [x19, #320]
   32944:	add	x0, x0, #0x1
   32948:	str	x0, [x19, #320]
   3294c:	b	32908 <__asan_backtrace_create_state@@Base+0x6ac4>
   32950:	mov	w0, #0x0                   	// #0
   32954:	b	3278c <__asan_backtrace_create_state@@Base+0x6948>

0000000000032958 <__asan_cplus_demangle_fill_name@@Base>:
   32958:	cmp	x1, #0x0
   3295c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   32960:	ccmp	x0, #0x0, #0x4, gt
   32964:	b.ne	32970 <__asan_cplus_demangle_fill_name@@Base+0x18>  // b.any
   32968:	mov	w0, #0x0                   	// #0
   3296c:	ret
   32970:	str	wzr, [x0, #4]
   32974:	str	wzr, [x0]
   32978:	str	x1, [x0, #8]
   3297c:	str	w2, [x0, #16]
   32980:	mov	w0, #0x1                   	// #1
   32984:	b	3296c <__asan_cplus_demangle_fill_name@@Base+0x14>
   32988:	stp	x29, x30, [sp, #-48]!
   3298c:	mov	x29, sp
   32990:	stp	x19, x20, [sp, #16]
   32994:	str	x21, [sp, #32]
   32998:	mov	x20, x1
   3299c:	mov	w21, w2
   329a0:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   329a4:	mov	x19, x0
   329a8:	mov	w2, w21
   329ac:	mov	x1, x20
   329b0:	bl	67c0 <__asan_cplus_demangle_fill_name@plt>
   329b4:	cmp	w0, #0x0
   329b8:	csel	x0, x19, xzr, ne  // ne = any
   329bc:	ldp	x19, x20, [sp, #16]
   329c0:	ldr	x21, [sp, #32]
   329c4:	ldp	x29, x30, [sp], #48
   329c8:	ret
   329cc:	stp	x29, x30, [sp, #-48]!
   329d0:	mov	x29, sp
   329d4:	stp	x19, x20, [sp, #16]
   329d8:	mov	x19, x0
   329dc:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   329e0:	cmp	w0, #0x0
   329e4:	b.le	32ac8 <__asan_cplus_demangle_fill_name@@Base+0x170>
   329e8:	str	x21, [sp, #32]
   329ec:	mov	w20, w0
   329f0:	ldr	x21, [x19, #24]
   329f4:	ldr	x0, [x19, #8]
   329f8:	sub	x0, x0, x21
   329fc:	cmp	x0, w20, sxtw
   32a00:	b.lt	32ac0 <__asan_cplus_demangle_fill_name@@Base+0x168>  // b.tstop
   32a04:	add	x0, x21, w20, sxtw
   32a08:	str	x0, [x19, #24]
   32a0c:	ldr	w1, [x19, #16]
   32a10:	tbz	w1, #2, 32a20 <__asan_cplus_demangle_fill_name@@Base+0xc8>
   32a14:	ldrb	w1, [x21, w20, sxtw]
   32a18:	cmp	w1, #0x24
   32a1c:	b.eq	32a8c <__asan_cplus_demangle_fill_name@@Base+0x134>  // b.none
   32a20:	cmp	w20, #0x9
   32a24:	b.le	32a68 <__asan_cplus_demangle_fill_name@@Base+0x110>
   32a28:	mov	x2, #0x8                   	// #8
   32a2c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   32a30:	add	x1, x1, #0xf90
   32a34:	mov	x0, x21
   32a38:	bl	6c20 <__asan_internal_memcmp@plt>
   32a3c:	cbnz	w0, 32a68 <__asan_cplus_demangle_fill_name@@Base+0x110>
   32a40:	ldrb	w0, [x21, #8]
   32a44:	cmp	w0, #0x2e
   32a48:	mov	w1, #0x5f                  	// #95
   32a4c:	ccmp	w0, w1, #0x4, ne  // ne = any
   32a50:	mov	w1, #0x24                  	// #36
   32a54:	ccmp	w0, w1, #0x4, ne  // ne = any
   32a58:	b.ne	32a68 <__asan_cplus_demangle_fill_name@@Base+0x110>  // b.any
   32a5c:	ldrb	w0, [x21, #9]
   32a60:	cmp	w0, #0x4e
   32a64:	b.eq	32a98 <__asan_cplus_demangle_fill_name@@Base+0x140>  // b.none
   32a68:	mov	w2, w20
   32a6c:	mov	x1, x21
   32a70:	mov	x0, x19
   32a74:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   32a78:	str	x0, [x19, #64]
   32a7c:	ldr	x21, [sp, #32]
   32a80:	ldp	x19, x20, [sp, #16]
   32a84:	ldp	x29, x30, [sp], #48
   32a88:	ret
   32a8c:	add	x0, x0, #0x1
   32a90:	str	x0, [x19, #24]
   32a94:	b	32a20 <__asan_cplus_demangle_fill_name@@Base+0xc8>
   32a98:	ldr	w0, [x19, #72]
   32a9c:	add	w0, w0, #0x16
   32aa0:	sub	w20, w0, w20
   32aa4:	str	w20, [x19, #72]
   32aa8:	mov	w2, #0x15                  	// #21
   32aac:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   32ab0:	add	x1, x1, #0xfa0
   32ab4:	mov	x0, x19
   32ab8:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   32abc:	b	32a78 <__asan_cplus_demangle_fill_name@@Base+0x120>
   32ac0:	mov	x0, #0x0                   	// #0
   32ac4:	b	32a78 <__asan_cplus_demangle_fill_name@@Base+0x120>
   32ac8:	mov	x0, #0x0                   	// #0
   32acc:	b	32a80 <__asan_cplus_demangle_fill_name@@Base+0x128>
   32ad0:	stp	x29, x30, [sp, #-48]!
   32ad4:	mov	x29, sp
   32ad8:	stp	x19, x20, [sp, #16]
   32adc:	stp	x21, x22, [sp, #32]
   32ae0:	mov	x19, x0
   32ae4:	mov	x20, x1
   32ae8:	ldr	x22, [x0, #64]
   32aec:	ldr	x2, [x0, #24]
   32af0:	ldrb	w0, [x2]
   32af4:	cmp	w0, #0x42
   32af8:	b.ne	32b38 <__asan_cplus_demangle_fill_name@@Base+0x1e0>  // b.any
   32afc:	mov	w21, #0x4c                  	// #76
   32b00:	add	x2, x2, #0x1
   32b04:	str	x2, [x19, #24]
   32b08:	mov	x0, x19
   32b0c:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   32b10:	mov	x3, x0
   32b14:	mov	x2, x20
   32b18:	mov	w1, w21
   32b1c:	mov	x0, x19
   32b20:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   32b24:	mov	x20, x0
   32b28:	ldr	x2, [x19, #24]
   32b2c:	ldrb	w0, [x2]
   32b30:	cmp	w0, #0x42
   32b34:	b.eq	32b00 <__asan_cplus_demangle_fill_name@@Base+0x1a8>  // b.none
   32b38:	str	x22, [x19, #64]
   32b3c:	mov	x0, x20
   32b40:	ldp	x19, x20, [sp, #16]
   32b44:	ldp	x21, x22, [sp, #32]
   32b48:	ldp	x29, x30, [sp], #48
   32b4c:	ret
   32b50:	stp	x29, x30, [sp, #-64]!
   32b54:	mov	x29, sp
   32b58:	stp	x19, x20, [sp, #16]
   32b5c:	mov	x19, x0
   32b60:	ldr	x0, [x0, #24]
   32b64:	ldrb	w2, [x0]
   32b68:	mov	x20, #0x0                   	// #0
   32b6c:	cmp	w2, #0x53
   32b70:	b.ne	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.any
   32b74:	add	x2, x0, #0x1
   32b78:	str	x2, [x19, #24]
   32b7c:	ldrb	w2, [x0, #1]
   32b80:	cbz	w2, 32c6c <__asan_cplus_demangle_fill_name@@Base+0x314>
   32b84:	add	x2, x0, #0x2
   32b88:	str	x2, [x19, #24]
   32b8c:	ldrb	w2, [x0, #1]
   32b90:	sub	w0, w2, #0x30
   32b94:	and	w0, w0, #0xff
   32b98:	cmp	w2, #0x5f
   32b9c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   32ba0:	b.hi	32bd8 <__asan_cplus_demangle_fill_name@@Base+0x280>  // b.pmore
   32ba4:	mov	w1, #0x0                   	// #0
   32ba8:	cmp	w2, #0x5f
   32bac:	b.ne	32c44 <__asan_cplus_demangle_fill_name@@Base+0x2ec>  // b.any
   32bb0:	ldr	w0, [x19, #56]
   32bb4:	mov	x20, #0x0                   	// #0
   32bb8:	cmp	w0, w1
   32bbc:	b.ls	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>  // b.plast
   32bc0:	ldr	x0, [x19, #48]
   32bc4:	ldr	x20, [x0, w1, uxtw #3]
   32bc8:	mov	x0, x20
   32bcc:	ldp	x19, x20, [sp, #16]
   32bd0:	ldp	x29, x30, [sp], #64
   32bd4:	ret
   32bd8:	sub	w3, w2, #0x41
   32bdc:	and	w3, w3, #0xff
   32be0:	mov	w0, #0x0                   	// #0
   32be4:	cmp	w3, #0x19
   32be8:	b.ls	32bf8 <__asan_cplus_demangle_fill_name@@Base+0x2a0>  // b.plast
   32bec:	stp	x21, x22, [sp, #32]
   32bf0:	b	32c70 <__asan_cplus_demangle_fill_name@@Base+0x318>
   32bf4:	mov	w0, w1
   32bf8:	sub	w1, w2, #0x30
   32bfc:	and	w1, w1, #0xff
   32c00:	cmp	w1, #0x9
   32c04:	b.hi	32c4c <__asan_cplus_demangle_fill_name@@Base+0x2f4>  // b.pmore
   32c08:	add	w1, w0, w0, lsl #3
   32c0c:	add	w1, w2, w1, lsl #2
   32c10:	sub	w1, w1, #0x30
   32c14:	cmp	w0, w1
   32c18:	b.hi	32d90 <__asan_cplus_demangle_fill_name@@Base+0x438>  // b.pmore
   32c1c:	ldr	x0, [x19, #24]
   32c20:	ldrb	w2, [x0]
   32c24:	cbz	w2, 32bf4 <__asan_cplus_demangle_fill_name@@Base+0x29c>
   32c28:	add	x2, x0, #0x1
   32c2c:	str	x2, [x19, #24]
   32c30:	ldrb	w2, [x0]
   32c34:	cmp	w2, #0x5f
   32c38:	b.ne	32bf4 <__asan_cplus_demangle_fill_name@@Base+0x29c>  // b.any
   32c3c:	add	w1, w1, #0x1
   32c40:	b	32bb0 <__asan_cplus_demangle_fill_name@@Base+0x258>
   32c44:	mov	w0, #0x0                   	// #0
   32c48:	b	32bf8 <__asan_cplus_demangle_fill_name@@Base+0x2a0>
   32c4c:	sub	w1, w2, #0x41
   32c50:	and	w1, w1, #0xff
   32c54:	cmp	w1, #0x19
   32c58:	b.hi	32d88 <__asan_cplus_demangle_fill_name@@Base+0x430>  // b.pmore
   32c5c:	add	w1, w0, w0, lsl #3
   32c60:	add	w1, w2, w1, lsl #2
   32c64:	sub	w1, w1, #0x37
   32c68:	b	32c14 <__asan_cplus_demangle_fill_name@@Base+0x2bc>
   32c6c:	stp	x21, x22, [sp, #32]
   32c70:	ldr	w21, [x19, #16]
   32c74:	ands	w0, w21, #0x8
   32c78:	ubfx	x21, x21, #3, #1
   32c7c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   32c80:	b.eq	32c9c <__asan_cplus_demangle_fill_name@@Base+0x344>  // b.none
   32c84:	ldr	x0, [x19, #24]
   32c88:	ldrb	w0, [x0]
   32c8c:	sub	w0, w0, #0x43
   32c90:	and	w0, w0, #0xff
   32c94:	cmp	w0, #0x1
   32c98:	csinc	w21, w21, wzr, hi  // hi = pmore
   32c9c:	adrp	x20, 5f000 <__asan_backtrace_vector_release@@Base+0x24c58>
   32ca0:	add	x20, x20, #0xe58
   32ca4:	add	x1, x20, #0x188
   32ca8:	ldrb	w0, [x20]
   32cac:	cmp	w0, w2
   32cb0:	b.eq	32ccc <__asan_cplus_demangle_fill_name@@Base+0x374>  // b.none
   32cb4:	add	x20, x20, #0x38
   32cb8:	cmp	x20, x1
   32cbc:	b.ne	32ca8 <__asan_cplus_demangle_fill_name@@Base+0x350>  // b.any
   32cc0:	mov	x20, #0x0                   	// #0
   32cc4:	ldp	x21, x22, [sp, #32]
   32cc8:	b	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>
   32ccc:	ldr	x22, [x20, #40]
   32cd0:	cbz	x22, 32d00 <__asan_cplus_demangle_fill_name@@Base+0x3a8>
   32cd4:	str	x23, [sp, #48]
   32cd8:	ldr	w23, [x20, #48]
   32cdc:	mov	x0, x19
   32ce0:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   32ce4:	cbz	x0, 32cf8 <__asan_cplus_demangle_fill_name@@Base+0x3a0>
   32ce8:	mov	w1, #0x18                  	// #24
   32cec:	str	w1, [x0]
   32cf0:	str	x22, [x0, #8]
   32cf4:	str	w23, [x0, #16]
   32cf8:	str	x0, [x19, #64]
   32cfc:	ldr	x23, [sp, #48]
   32d00:	cbz	w21, 32d50 <__asan_cplus_demangle_fill_name@@Base+0x3f8>
   32d04:	ldr	x22, [x20, #24]
   32d08:	ldr	w21, [x20, #32]
   32d0c:	ldr	w0, [x19, #72]
   32d10:	add	w0, w0, w21
   32d14:	str	w0, [x19, #72]
   32d18:	mov	x0, x19
   32d1c:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   32d20:	mov	x20, x0
   32d24:	cbz	x0, 32d38 <__asan_cplus_demangle_fill_name@@Base+0x3e0>
   32d28:	mov	w0, #0x18                  	// #24
   32d2c:	str	w0, [x20]
   32d30:	str	x22, [x20, #8]
   32d34:	str	w21, [x20, #16]
   32d38:	ldr	x0, [x19, #24]
   32d3c:	ldrb	w0, [x0]
   32d40:	cmp	w0, #0x42
   32d44:	b.eq	32d5c <__asan_cplus_demangle_fill_name@@Base+0x404>  // b.none
   32d48:	ldp	x21, x22, [sp, #32]
   32d4c:	b	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>
   32d50:	ldr	x22, [x20, #8]
   32d54:	ldr	w21, [x20, #16]
   32d58:	b	32d0c <__asan_cplus_demangle_fill_name@@Base+0x3b4>
   32d5c:	mov	x1, x20
   32d60:	mov	x0, x19
   32d64:	bl	32ad0 <__asan_cplus_demangle_fill_name@@Base+0x178>
   32d68:	mov	x20, x0
   32d6c:	mov	x1, x0
   32d70:	mov	x0, x19
   32d74:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   32d78:	cmp	w0, #0x0
   32d7c:	csel	x20, x20, xzr, ne  // ne = any
   32d80:	ldp	x21, x22, [sp, #32]
   32d84:	b	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>
   32d88:	mov	x20, #0x0                   	// #0
   32d8c:	b	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>
   32d90:	mov	x20, #0x0                   	// #0
   32d94:	b	32bc8 <__asan_cplus_demangle_fill_name@@Base+0x270>

0000000000032d98 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   32d98:	cmp	w1, #0x0
   32d9c:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
   32da0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   32da4:	b.eq	32dc4 <__asan_cplus_demangle_fill_extended_operator@@Base+0x2c>  // b.none
   32da8:	str	wzr, [x0, #4]
   32dac:	mov	w3, #0x33                  	// #51
   32db0:	str	w3, [x0]
   32db4:	str	w1, [x0, #8]
   32db8:	str	x2, [x0, #16]
   32dbc:	mov	w0, #0x1                   	// #1
   32dc0:	ret
   32dc4:	mov	w0, #0x0                   	// #0
   32dc8:	b	32dc0 <__asan_cplus_demangle_fill_extended_operator@@Base+0x28>

0000000000032dcc <__asan_cplus_demangle_fill_ctor@@Base>:
   32dcc:	mov	x3, x0
   32dd0:	cmp	x0, #0x0
   32dd4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   32dd8:	mov	w0, #0x0                   	// #0
   32ddc:	b.eq	32e08 <__asan_cplus_demangle_fill_ctor@@Base+0x3c>  // b.none
   32de0:	sub	w4, w1, #0x1
   32de4:	mov	w0, #0x0                   	// #0
   32de8:	cmp	w4, #0x4
   32dec:	b.hi	32e08 <__asan_cplus_demangle_fill_ctor@@Base+0x3c>  // b.pmore
   32df0:	str	wzr, [x3, #4]
   32df4:	mov	w0, #0x7                   	// #7
   32df8:	str	w0, [x3]
   32dfc:	str	w1, [x3, #8]
   32e00:	str	x2, [x3, #16]
   32e04:	mov	w0, #0x1                   	// #1
   32e08:	ret

0000000000032e0c <__asan_cplus_demangle_fill_dtor@@Base>:
   32e0c:	mov	x3, x0
   32e10:	cmp	x0, #0x0
   32e14:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   32e18:	mov	w0, #0x0                   	// #0
   32e1c:	b.eq	32e48 <__asan_cplus_demangle_fill_dtor@@Base+0x3c>  // b.none
   32e20:	sub	w4, w1, #0x1
   32e24:	mov	w0, #0x0                   	// #0
   32e28:	cmp	w4, #0x4
   32e2c:	b.hi	32e48 <__asan_cplus_demangle_fill_dtor@@Base+0x3c>  // b.pmore
   32e30:	str	wzr, [x3, #4]
   32e34:	mov	w0, #0x8                   	// #8
   32e38:	str	w0, [x3]
   32e3c:	str	w1, [x3, #8]
   32e40:	str	x2, [x3, #16]
   32e44:	mov	w0, #0x1                   	// #1
   32e48:	ret

0000000000032e4c <__asan_cplus_demangle_type@@Base>:
   32e4c:	stp	x29, x30, [sp, #-80]!
   32e50:	mov	x29, sp
   32e54:	stp	x19, x20, [sp, #16]
   32e58:	mov	x19, x0
   32e5c:	bl	2c2f0 <__asan_backtrace_create_state@@Base+0x4ac>
   32e60:	cbnz	w0, 32e90 <__asan_cplus_demangle_type@@Base+0x44>
   32e64:	ldr	x0, [x19, #24]
   32e68:	ldrb	w2, [x0]
   32e6c:	sub	w1, w2, #0x30
   32e70:	cmp	w1, #0x4a
   32e74:	b.hi	33794 <__asan_cplus_demangle_type@@Base+0x948>  // b.pmore
   32e78:	adrp	x3, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   32e7c:	add	x3, x3, #0xb00
   32e80:	ldrh	w1, [x3, w1, uxtw #1]
   32e84:	adr	x3, 32e90 <__asan_cplus_demangle_type@@Base+0x44>
   32e88:	add	x1, x3, w1, sxth #2
   32e8c:	br	x1
   32e90:	mov	w2, #0x0                   	// #0
   32e94:	add	x1, sp, #0x48
   32e98:	mov	x0, x19
   32e9c:	bl	34900 <__asan_cplus_demangle_type@@Base+0x1ab4>
   32ea0:	mov	x20, x0
   32ea4:	cbz	x0, 32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   32ea8:	ldr	x0, [x19, #24]
   32eac:	ldrb	w0, [x0]
   32eb0:	cmp	w0, #0x46
   32eb4:	b.eq	32ef8 <__asan_cplus_demangle_type@@Base+0xac>  // b.none
   32eb8:	mov	x0, x19
   32ebc:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   32ec0:	str	x0, [x20]
   32ec4:	ldr	x0, [x20]
   32ec8:	cbz	x0, 3378c <__asan_cplus_demangle_type@@Base+0x940>
   32ecc:	ldr	w1, [x0]
   32ed0:	sub	w1, w1, #0x1f
   32ed4:	cmp	w1, #0x1
   32ed8:	b.ls	32f08 <__asan_cplus_demangle_type@@Base+0xbc>  // b.plast
   32edc:	ldr	x1, [sp, #72]
   32ee0:	mov	x0, x19
   32ee4:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   32ee8:	cmp	w0, #0x0
   32eec:	ldr	x20, [sp, #72]
   32ef0:	csel	x20, x20, xzr, ne  // ne = any
   32ef4:	b	32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   32ef8:	mov	x0, x19
   32efc:	bl	33ff0 <__asan_cplus_demangle_type@@Base+0x11a4>
   32f00:	str	x0, [x20]
   32f04:	b	32ec4 <__asan_cplus_demangle_type@@Base+0x78>
   32f08:	ldr	x1, [x0, #8]
   32f0c:	ldr	x2, [sp, #72]
   32f10:	str	x2, [x0, #8]
   32f14:	ldr	x0, [x20]
   32f18:	str	x0, [sp, #72]
   32f1c:	str	x1, [x20]
   32f20:	b	32edc <__asan_cplus_demangle_type@@Base+0x90>
   32f24:	sub	w2, w2, #0x61
   32f28:	sbfiz	x2, x2, #5, #32
   32f2c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   32f30:	ldr	x1, [x1, #3736]
   32f34:	add	x1, x1, x2
   32f38:	mov	x0, x19
   32f3c:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   32f40:	str	x0, [sp, #72]
   32f44:	ldr	x1, [x0, #8]
   32f48:	ldr	w0, [x19, #72]
   32f4c:	ldr	w1, [x1, #8]
   32f50:	add	w0, w0, w1
   32f54:	str	w0, [x19, #72]
   32f58:	ldr	x0, [x19, #24]
   32f5c:	add	x0, x0, #0x1
   32f60:	str	x0, [x19, #24]
   32f64:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   32f68:	add	x0, x0, #0x1
   32f6c:	str	x0, [x19, #24]
   32f70:	mov	x0, x19
   32f74:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   32f78:	mov	x3, #0x0                   	// #0
   32f7c:	mov	x2, x0
   32f80:	mov	w1, #0x28                  	// #40
   32f84:	mov	x0, x19
   32f88:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   32f8c:	str	x0, [sp, #72]
   32f90:	ldr	x1, [sp, #72]
   32f94:	mov	x0, x19
   32f98:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   32f9c:	cbz	w0, 337a4 <__asan_cplus_demangle_type@@Base+0x958>
   32fa0:	ldr	x20, [sp, #72]
   32fa4:	mov	x0, x20
   32fa8:	ldp	x19, x20, [sp, #16]
   32fac:	ldp	x29, x30, [sp], #80
   32fb0:	ret
   32fb4:	mov	x0, x19
   32fb8:	bl	33ff0 <__asan_cplus_demangle_type@@Base+0x11a4>
   32fbc:	str	x0, [sp, #72]
   32fc0:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   32fc4:	mov	x0, x19
   32fc8:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   32fcc:	str	x0, [sp, #72]
   32fd0:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   32fd4:	add	x1, x0, #0x1
   32fd8:	str	x1, [x19, #24]
   32fdc:	ldrb	w0, [x0, #1]
   32fe0:	cmp	w0, #0x5f
   32fe4:	b.eq	33080 <__asan_cplus_demangle_type@@Base+0x234>  // b.none
   32fe8:	sub	w0, w0, #0x30
   32fec:	and	w0, w0, #0xff
   32ff0:	cmp	w0, #0x9
   32ff4:	b.hi	3306c <__asan_cplus_demangle_type@@Base+0x220>  // b.pmore
   32ff8:	ldr	x0, [x19, #24]
   32ffc:	add	x2, x0, #0x1
   33000:	str	x2, [x19, #24]
   33004:	ldrb	w0, [x0, #1]
   33008:	sub	w0, w0, #0x30
   3300c:	and	w0, w0, #0xff
   33010:	cmp	w0, #0x9
   33014:	b.ls	32ff8 <__asan_cplus_demangle_type@@Base+0x1ac>  // b.plast
   33018:	sub	w2, w2, w1
   3301c:	mov	x0, x19
   33020:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   33024:	mov	x20, x0
   33028:	cbz	x0, 33064 <__asan_cplus_demangle_type@@Base+0x218>
   3302c:	ldr	x0, [x19, #24]
   33030:	ldrb	w1, [x0]
   33034:	cmp	w1, #0x5f
   33038:	b.ne	33088 <__asan_cplus_demangle_type@@Base+0x23c>  // b.any
   3303c:	add	x0, x0, #0x1
   33040:	str	x0, [x19, #24]
   33044:	mov	x0, x19
   33048:	bl	6750 <__asan_cplus_demangle_type@plt>
   3304c:	mov	x3, x0
   33050:	mov	x2, x20
   33054:	mov	w1, #0x2a                  	// #42
   33058:	mov	x0, x19
   3305c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33060:	mov	x20, x0
   33064:	str	x20, [sp, #72]
   33068:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   3306c:	mov	x0, x19
   33070:	bl	340c8 <__asan_cplus_demangle_type@@Base+0x127c>
   33074:	mov	x20, x0
   33078:	cbnz	x0, 3302c <__asan_cplus_demangle_type@@Base+0x1e0>
   3307c:	b	33064 <__asan_cplus_demangle_type@@Base+0x218>
   33080:	mov	x20, #0x0                   	// #0
   33084:	b	3302c <__asan_cplus_demangle_type@@Base+0x1e0>
   33088:	mov	x20, #0x0                   	// #0
   3308c:	b	33064 <__asan_cplus_demangle_type@@Base+0x218>
   33090:	add	x0, x0, #0x1
   33094:	str	x0, [x19, #24]
   33098:	mov	x0, x19
   3309c:	bl	6750 <__asan_cplus_demangle_type@plt>
   330a0:	mov	x20, x0
   330a4:	cbz	x0, 330cc <__asan_cplus_demangle_type@@Base+0x280>
   330a8:	mov	x0, x19
   330ac:	bl	6750 <__asan_cplus_demangle_type@plt>
   330b0:	mov	x3, x0
   330b4:	cbz	x0, 330d4 <__asan_cplus_demangle_type@@Base+0x288>
   330b8:	mov	x2, x20
   330bc:	mov	w1, #0x2b                  	// #43
   330c0:	mov	x0, x19
   330c4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   330c8:	mov	x20, x0
   330cc:	str	x20, [sp, #72]
   330d0:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   330d4:	mov	x20, x0
   330d8:	b	330cc <__asan_cplus_demangle_type@@Base+0x280>
   330dc:	mov	x0, x19
   330e0:	bl	2c430 <__asan_backtrace_create_state@@Base+0x5ec>
   330e4:	str	x0, [sp, #72]
   330e8:	ldr	x20, [x19, #24]
   330ec:	ldrb	w1, [x20]
   330f0:	cmp	w1, #0x49
   330f4:	b.ne	32f90 <__asan_cplus_demangle_type@@Base+0x144>  // b.any
   330f8:	ldr	w1, [x19, #80]
   330fc:	cbnz	w1, 3313c <__asan_cplus_demangle_type@@Base+0x2f0>
   33100:	mov	x1, x0
   33104:	mov	x0, x19
   33108:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   3310c:	mov	x20, #0x0                   	// #0
   33110:	cbz	w0, 32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   33114:	ldr	x20, [sp, #72]
   33118:	mov	x0, x19
   3311c:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   33120:	mov	x3, x0
   33124:	mov	x2, x20
   33128:	mov	w1, #0x4                   	// #4
   3312c:	mov	x0, x19
   33130:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33134:	str	x0, [sp, #72]
   33138:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   3313c:	stp	x21, x22, [sp, #32]
   33140:	stp	x23, x24, [sp, #48]
   33144:	ldr	w24, [x19, #40]
   33148:	ldr	w23, [x19, #56]
   3314c:	ldr	w22, [x19, #72]
   33150:	mov	x0, x19
   33154:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   33158:	mov	x21, x0
   3315c:	ldr	x0, [x19, #24]
   33160:	ldrb	w0, [x0]
   33164:	cmp	w0, #0x49
   33168:	b.eq	33188 <__asan_cplus_demangle_type@@Base+0x33c>  // b.none
   3316c:	str	x20, [x19, #24]
   33170:	str	w24, [x19, #40]
   33174:	str	w23, [x19, #56]
   33178:	str	w22, [x19, #72]
   3317c:	ldp	x21, x22, [sp, #32]
   33180:	ldp	x23, x24, [sp, #48]
   33184:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   33188:	ldr	x1, [sp, #72]
   3318c:	mov	x0, x19
   33190:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   33194:	cbz	w0, 331bc <__asan_cplus_demangle_type@@Base+0x370>
   33198:	mov	x3, x21
   3319c:	ldr	x2, [sp, #72]
   331a0:	mov	w1, #0x4                   	// #4
   331a4:	mov	x0, x19
   331a8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   331ac:	str	x0, [sp, #72]
   331b0:	ldp	x21, x22, [sp, #32]
   331b4:	ldp	x23, x24, [sp, #48]
   331b8:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   331bc:	mov	x20, #0x0                   	// #0
   331c0:	ldp	x21, x22, [sp, #32]
   331c4:	ldp	x23, x24, [sp, #48]
   331c8:	b	32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   331cc:	ldrb	w0, [x0, #1]
   331d0:	sub	w1, w0, #0x30
   331d4:	and	w1, w1, #0xff
   331d8:	cmp	w0, #0x5f
   331dc:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   331e0:	b.ls	331f4 <__asan_cplus_demangle_type@@Base+0x3a8>  // b.plast
   331e4:	sub	w0, w0, #0x41
   331e8:	and	w0, w0, #0xff
   331ec:	cmp	w0, #0x19
   331f0:	b.hi	3323c <__asan_cplus_demangle_type@@Base+0x3f0>  // b.pmore
   331f4:	mov	w1, #0x0                   	// #0
   331f8:	mov	x0, x19
   331fc:	bl	32b50 <__asan_cplus_demangle_fill_name@@Base+0x1f8>
   33200:	mov	x20, x0
   33204:	str	x0, [sp, #72]
   33208:	ldr	x0, [x19, #24]
   3320c:	ldrb	w0, [x0]
   33210:	cmp	w0, #0x49
   33214:	b.ne	32fa0 <__asan_cplus_demangle_type@@Base+0x154>  // b.any
   33218:	mov	x0, x19
   3321c:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   33220:	mov	x3, x0
   33224:	mov	x2, x20
   33228:	mov	w1, #0x4                   	// #4
   3322c:	mov	x0, x19
   33230:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33234:	str	x0, [sp, #72]
   33238:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   3323c:	mov	x0, x19
   33240:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   33244:	str	x0, [sp, #72]
   33248:	cbz	x0, 32f90 <__asan_cplus_demangle_type@@Base+0x144>
   3324c:	ldr	w0, [x0]
   33250:	cmp	w0, #0x18
   33254:	b.ne	32f90 <__asan_cplus_demangle_type@@Base+0x144>  // b.any
   33258:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   3325c:	add	x0, x0, #0x1
   33260:	str	x0, [x19, #24]
   33264:	mov	x0, x19
   33268:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   3326c:	mov	x3, #0x0                   	// #0
   33270:	mov	x2, x0
   33274:	mov	w1, #0x24                  	// #36
   33278:	mov	x0, x19
   3327c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33280:	str	x0, [sp, #72]
   33284:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   33288:	add	x0, x0, #0x1
   3328c:	str	x0, [x19, #24]
   33290:	mov	x0, x19
   33294:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   33298:	mov	x3, #0x0                   	// #0
   3329c:	mov	x2, x0
   332a0:	mov	w1, #0x22                  	// #34
   332a4:	mov	x0, x19
   332a8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   332ac:	str	x0, [sp, #72]
   332b0:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   332b4:	add	x0, x0, #0x1
   332b8:	str	x0, [x19, #24]
   332bc:	mov	x0, x19
   332c0:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   332c4:	mov	x3, #0x0                   	// #0
   332c8:	mov	x2, x0
   332cc:	mov	w1, #0x23                  	// #35
   332d0:	mov	x0, x19
   332d4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   332d8:	str	x0, [sp, #72]
   332dc:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   332e0:	add	x0, x0, #0x1
   332e4:	str	x0, [x19, #24]
   332e8:	mov	x0, x19
   332ec:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   332f0:	mov	x3, #0x0                   	// #0
   332f4:	mov	x2, x0
   332f8:	mov	w1, #0x25                  	// #37
   332fc:	mov	x0, x19
   33300:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33304:	str	x0, [sp, #72]
   33308:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   3330c:	add	x0, x0, #0x1
   33310:	str	x0, [x19, #24]
   33314:	mov	x0, x19
   33318:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   3331c:	mov	x3, #0x0                   	// #0
   33320:	mov	x2, x0
   33324:	mov	w1, #0x26                  	// #38
   33328:	mov	x0, x19
   3332c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33330:	str	x0, [sp, #72]
   33334:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   33338:	add	x0, x0, #0x1
   3333c:	str	x0, [x19, #24]
   33340:	mov	x0, x19
   33344:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   33348:	mov	x20, x0
   3334c:	str	x0, [sp, #72]
   33350:	ldr	x0, [x19, #24]
   33354:	ldrb	w0, [x0]
   33358:	cmp	w0, #0x49
   3335c:	b.eq	33384 <__asan_cplus_demangle_type@@Base+0x538>  // b.none
   33360:	mov	x0, x19
   33364:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   33368:	ldr	x3, [sp, #72]
   3336c:	mov	x2, x0
   33370:	mov	w1, #0x21                  	// #33
   33374:	mov	x0, x19
   33378:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3337c:	str	x0, [sp, #72]
   33380:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   33384:	mov	x0, x19
   33388:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   3338c:	mov	x3, x0
   33390:	mov	x2, x20
   33394:	mov	w1, #0x4                   	// #4
   33398:	mov	x0, x19
   3339c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   333a0:	str	x0, [sp, #72]
   333a4:	b	33360 <__asan_cplus_demangle_type@@Base+0x514>
   333a8:	add	x1, x0, #0x1
   333ac:	str	x1, [x19, #24]
   333b0:	ldrb	w1, [x0, #1]
   333b4:	mov	x20, #0x0                   	// #0
   333b8:	cbz	w1, 32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   333bc:	add	x1, x0, #0x2
   333c0:	str	x1, [x19, #24]
   333c4:	ldrb	w1, [x0, #1]
   333c8:	cmp	w1, #0x68
   333cc:	b.eq	336a0 <__asan_cplus_demangle_type@@Base+0x854>  // b.none
   333d0:	b.hi	33518 <__asan_cplus_demangle_type@@Base+0x6cc>  // b.pmore
   333d4:	cmp	w1, #0x63
   333d8:	b.eq	33654 <__asan_cplus_demangle_type@@Base+0x808>  // b.none
   333dc:	b.ls	33420 <__asan_cplus_demangle_type@@Base+0x5d4>  // b.plast
   333e0:	cmp	w1, #0x65
   333e4:	b.eq	33670 <__asan_cplus_demangle_type@@Base+0x824>  // b.none
   333e8:	cmp	w1, #0x66
   333ec:	b.ne	334dc <__asan_cplus_demangle_type@@Base+0x690>  // b.any
   333f0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   333f4:	ldr	x1, [x1, #3736]
   333f8:	add	x1, x1, #0x340
   333fc:	mov	x0, x19
   33400:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   33404:	str	x0, [sp, #72]
   33408:	ldr	x1, [x0, #8]
   3340c:	ldr	w0, [x19, #72]
   33410:	ldr	w1, [x1, #8]
   33414:	add	w0, w0, w1
   33418:	str	w0, [x19, #72]
   3341c:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   33420:	cmp	w1, #0x54
   33424:	b.eq	33608 <__asan_cplus_demangle_type@@Base+0x7bc>  // b.none
   33428:	cmp	w1, #0x61
   3342c:	b.ne	3344c <__asan_cplus_demangle_type@@Base+0x600>  // b.any
   33430:	mov	w2, #0x4                   	// #4
   33434:	adrp	x1, 3d000 <__asan_backtrace_vector_release@@Base+0x2c58>
   33438:	add	x1, x1, #0x58
   3343c:	mov	x0, x19
   33440:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   33444:	str	x0, [sp, #72]
   33448:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   3344c:	cmp	w1, #0x46
   33450:	b.ne	32fa4 <__asan_cplus_demangle_type@@Base+0x158>  // b.any
   33454:	mov	x0, x19
   33458:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   3345c:	str	x0, [sp, #72]
   33460:	mov	w1, #0x2c                  	// #44
   33464:	str	w1, [x0]
   33468:	ldr	x0, [x19, #24]
   3346c:	ldrb	w0, [x0]
   33470:	sub	w0, w0, #0x30
   33474:	and	w0, w0, #0xff
   33478:	cmp	w0, #0x9
   3347c:	cset	w2, ls  // ls = plast
   33480:	ldr	x1, [sp, #72]
   33484:	strh	w2, [x1, #16]
   33488:	b.ls	33730 <__asan_cplus_demangle_type@@Base+0x8e4>  // b.plast
   3348c:	ldr	x20, [sp, #72]
   33490:	mov	x0, x19
   33494:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   33498:	str	x0, [x20, #8]
   3349c:	ldr	x0, [sp, #72]
   334a0:	ldr	x20, [x0, #8]
   334a4:	cbz	x20, 32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   334a8:	mov	x0, x19
   334ac:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   334b0:	ldr	x1, [x19, #24]
   334b4:	ldrb	w0, [x1]
   334b8:	cbz	w0, 334c8 <__asan_cplus_demangle_type@@Base+0x67c>
   334bc:	add	x0, x1, #0x1
   334c0:	str	x0, [x19, #24]
   334c4:	ldrb	w0, [x1]
   334c8:	cmp	w0, #0x73
   334cc:	cset	w1, eq  // eq = none
   334d0:	ldr	x0, [sp, #72]
   334d4:	strh	w1, [x0, #18]
   334d8:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   334dc:	mov	x20, #0x0                   	// #0
   334e0:	cmp	w1, #0x64
   334e4:	b.ne	32fa4 <__asan_cplus_demangle_type@@Base+0x158>  // b.any
   334e8:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   334ec:	ldr	x1, [x1, #3736]
   334f0:	add	x1, x1, #0x360
   334f4:	mov	x0, x19
   334f8:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   334fc:	str	x0, [sp, #72]
   33500:	ldr	x1, [x0, #8]
   33504:	ldr	w0, [x19, #72]
   33508:	ldr	w1, [x1, #8]
   3350c:	add	w0, w0, w1
   33510:	str	w0, [x19, #72]
   33514:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   33518:	cmp	w1, #0x73
   3351c:	b.eq	33700 <__asan_cplus_demangle_type@@Base+0x8b4>  // b.none
   33520:	b.ls	33590 <__asan_cplus_demangle_type@@Base+0x744>  // b.plast
   33524:	cmp	w1, #0x75
   33528:	b.eq	336d0 <__asan_cplus_demangle_type@@Base+0x884>  // b.none
   3352c:	cmp	w1, #0x76
   33530:	b.ne	33600 <__asan_cplus_demangle_type@@Base+0x7b4>  // b.any
   33534:	ldrb	w1, [x0, #2]
   33538:	cmp	w1, #0x5f
   3353c:	b.eq	3373c <__asan_cplus_demangle_type@@Base+0x8f0>  // b.none
   33540:	mov	x0, x19
   33544:	bl	2c200 <__asan_backtrace_create_state@@Base+0x3bc>
   33548:	mov	x20, x0
   3354c:	cbz	x20, 33588 <__asan_cplus_demangle_type@@Base+0x73c>
   33550:	ldr	x0, [x19, #24]
   33554:	ldrb	w1, [x0]
   33558:	cmp	w1, #0x5f
   3355c:	b.ne	33754 <__asan_cplus_demangle_type@@Base+0x908>  // b.any
   33560:	add	x0, x0, #0x1
   33564:	str	x0, [x19, #24]
   33568:	mov	x0, x19
   3356c:	bl	6750 <__asan_cplus_demangle_type@plt>
   33570:	mov	x3, x0
   33574:	mov	x2, x20
   33578:	mov	w1, #0x2d                  	// #45
   3357c:	mov	x0, x19
   33580:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33584:	mov	x20, x0
   33588:	str	x20, [sp, #72]
   3358c:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   33590:	cmp	w1, #0x6e
   33594:	b.eq	3375c <__asan_cplus_demangle_type@@Base+0x910>  // b.none
   33598:	cmp	w1, #0x70
   3359c:	b.ne	335c4 <__asan_cplus_demangle_type@@Base+0x778>  // b.any
   335a0:	mov	x0, x19
   335a4:	bl	32e4c <__asan_cplus_demangle_type@@Base>
   335a8:	mov	x3, #0x0                   	// #0
   335ac:	mov	x2, x0
   335b0:	mov	w1, #0x4b                  	// #75
   335b4:	mov	x0, x19
   335b8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   335bc:	str	x0, [sp, #72]
   335c0:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   335c4:	mov	x20, #0x0                   	// #0
   335c8:	cmp	w1, #0x69
   335cc:	b.ne	32fa4 <__asan_cplus_demangle_type@@Base+0x158>  // b.any
   335d0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   335d4:	ldr	x1, [x1, #3736]
   335d8:	add	x1, x1, #0x400
   335dc:	mov	x0, x19
   335e0:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   335e4:	str	x0, [sp, #72]
   335e8:	ldr	x1, [x0, #8]
   335ec:	ldr	w0, [x19, #72]
   335f0:	ldr	w1, [x1, #8]
   335f4:	add	w0, w0, w1
   335f8:	str	w0, [x19, #72]
   335fc:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   33600:	cmp	w1, #0x74
   33604:	b.ne	3379c <__asan_cplus_demangle_type@@Base+0x950>  // b.any
   33608:	mov	x0, x19
   3360c:	bl	340c8 <__asan_cplus_demangle_type@@Base+0x127c>
   33610:	mov	x3, #0x0                   	// #0
   33614:	mov	x2, x0
   33618:	mov	w1, #0x43                  	// #67
   3361c:	mov	x0, x19
   33620:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33624:	str	x0, [sp, #72]
   33628:	cbz	x0, 32f90 <__asan_cplus_demangle_type@@Base+0x144>
   3362c:	ldr	x0, [x19, #24]
   33630:	ldrb	w1, [x0]
   33634:	cbz	w1, 3364c <__asan_cplus_demangle_type@@Base+0x800>
   33638:	add	x1, x0, #0x1
   3363c:	str	x1, [x19, #24]
   33640:	ldrb	w0, [x0]
   33644:	cmp	w0, #0x45
   33648:	b.eq	32f90 <__asan_cplus_demangle_type@@Base+0x144>  // b.none
   3364c:	str	xzr, [sp, #72]
   33650:	b	32f90 <__asan_cplus_demangle_type@@Base+0x144>
   33654:	mov	w2, #0xe                   	// #14
   33658:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3365c:	add	x1, x1, #0xfb8
   33660:	mov	x0, x19
   33664:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   33668:	str	x0, [sp, #72]
   3366c:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   33670:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33674:	ldr	x1, [x1, #3736]
   33678:	add	x1, x1, #0x380
   3367c:	mov	x0, x19
   33680:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   33684:	str	x0, [sp, #72]
   33688:	ldr	x1, [x0, #8]
   3368c:	ldr	w0, [x19, #72]
   33690:	ldr	w1, [x1, #8]
   33694:	add	w0, w0, w1
   33698:	str	w0, [x19, #72]
   3369c:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   336a0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   336a4:	ldr	x1, [x1, #3736]
   336a8:	add	x1, x1, #0x3a0
   336ac:	mov	x0, x19
   336b0:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   336b4:	str	x0, [sp, #72]
   336b8:	ldr	x1, [x0, #8]
   336bc:	ldr	w0, [x19, #72]
   336c0:	ldr	w1, [x1, #8]
   336c4:	add	w0, w0, w1
   336c8:	str	w0, [x19, #72]
   336cc:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   336d0:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   336d4:	ldr	x1, [x1, #3736]
   336d8:	add	x1, x1, #0x3c0
   336dc:	mov	x0, x19
   336e0:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   336e4:	str	x0, [sp, #72]
   336e8:	ldr	x1, [x0, #8]
   336ec:	ldr	w0, [x19, #72]
   336f0:	ldr	w1, [x1, #8]
   336f4:	add	w0, w0, w1
   336f8:	str	w0, [x19, #72]
   336fc:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   33700:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33704:	ldr	x1, [x1, #3736]
   33708:	add	x1, x1, #0x3e0
   3370c:	mov	x0, x19
   33710:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   33714:	str	x0, [sp, #72]
   33718:	ldr	x1, [x0, #8]
   3371c:	ldr	w0, [x19, #72]
   33720:	ldr	w1, [x1, #8]
   33724:	add	w0, w0, w1
   33728:	str	w0, [x19, #72]
   3372c:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   33730:	mov	x0, x19
   33734:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   33738:	b	3348c <__asan_cplus_demangle_type@@Base+0x640>
   3373c:	add	x0, x0, #0x3
   33740:	str	x0, [x19, #24]
   33744:	mov	x0, x19
   33748:	bl	340c8 <__asan_cplus_demangle_type@@Base+0x127c>
   3374c:	mov	x20, x0
   33750:	b	3354c <__asan_cplus_demangle_type@@Base+0x700>
   33754:	mov	x20, #0x0                   	// #0
   33758:	b	33588 <__asan_cplus_demangle_type@@Base+0x73c>
   3375c:	adrp	x1, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33760:	ldr	x1, [x1, #3736]
   33764:	add	x1, x1, #0x420
   33768:	mov	x0, x19
   3376c:	bl	2bff8 <__asan_backtrace_create_state@@Base+0x1b4>
   33770:	str	x0, [sp, #72]
   33774:	ldr	x1, [x0, #8]
   33778:	ldr	w0, [x19, #72]
   3377c:	ldr	w1, [x1, #8]
   33780:	add	w0, w0, w1
   33784:	str	w0, [x19, #72]
   33788:	b	32fa0 <__asan_cplus_demangle_type@@Base+0x154>
   3378c:	mov	x20, x0
   33790:	b	32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   33794:	mov	x20, #0x0                   	// #0
   33798:	b	32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   3379c:	mov	x20, #0x0                   	// #0
   337a0:	b	32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   337a4:	mov	x20, #0x0                   	// #0
   337a8:	b	32fa4 <__asan_cplus_demangle_type@@Base+0x158>
   337ac:	stp	x29, x30, [sp, #-64]!
   337b0:	mov	x29, sp
   337b4:	stp	x19, x20, [sp, #16]
   337b8:	mov	x19, x0
   337bc:	str	xzr, [sp, #56]
   337c0:	ldr	x0, [x0, #24]
   337c4:	ldrb	w1, [x0]
   337c8:	cmp	w1, #0x45
   337cc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   337d0:	mov	w2, #0x2e                  	// #46
   337d4:	ccmp	w1, w2, #0x4, ne  // ne = any
   337d8:	b.eq	338c0 <__asan_cplus_demangle_type@@Base+0xa74>  // b.none
   337dc:	stp	x21, x22, [sp, #32]
   337e0:	add	x21, sp, #0x38
   337e4:	mov	w22, #0x4f                  	// #79
   337e8:	mov	w20, w2
   337ec:	b	33838 <__asan_cplus_demangle_type@@Base+0x9ec>
   337f0:	mov	x0, x19
   337f4:	bl	6750 <__asan_cplus_demangle_type@plt>
   337f8:	mov	x2, x0
   337fc:	cbz	x0, 338c8 <__asan_cplus_demangle_type@@Base+0xa7c>
   33800:	mov	x3, #0x0                   	// #0
   33804:	mov	w1, w20
   33808:	mov	x0, x19
   3380c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33810:	mov	x2, x0
   33814:	str	x0, [x21]
   33818:	cbz	x0, 338d0 <__asan_cplus_demangle_type@@Base+0xa84>
   3381c:	add	x21, x0, #0x10
   33820:	ldr	x0, [x19, #24]
   33824:	ldrb	w1, [x0]
   33828:	cmp	w1, #0x45
   3382c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   33830:	ccmp	w1, w20, #0x4, ne  // ne = any
   33834:	b.eq	33850 <__asan_cplus_demangle_type@@Base+0xa04>  // b.none
   33838:	cmp	w1, #0x52
   3383c:	ccmp	w1, w22, #0x4, ne  // ne = any
   33840:	b.ne	337f0 <__asan_cplus_demangle_type@@Base+0x9a4>  // b.any
   33844:	ldrb	w0, [x0, #1]
   33848:	cmp	w0, #0x45
   3384c:	b.ne	337f0 <__asan_cplus_demangle_type@@Base+0x9a4>  // b.any
   33850:	ldr	x2, [sp, #56]
   33854:	cbz	x2, 338d8 <__asan_cplus_demangle_type@@Base+0xa8c>
   33858:	ldr	x0, [x2, #16]
   3385c:	cbz	x0, 33874 <__asan_cplus_demangle_type@@Base+0xa28>
   33860:	ldp	x21, x22, [sp, #32]
   33864:	mov	x0, x2
   33868:	ldp	x19, x20, [sp, #16]
   3386c:	ldp	x29, x30, [sp], #64
   33870:	ret
   33874:	ldr	x0, [x2, #8]
   33878:	ldr	w1, [x0]
   3387c:	cmp	w1, #0x27
   33880:	b.eq	3388c <__asan_cplus_demangle_type@@Base+0xa40>  // b.none
   33884:	ldp	x21, x22, [sp, #32]
   33888:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   3388c:	ldr	x0, [x0, #8]
   33890:	ldr	w1, [x0, #28]
   33894:	cmp	w1, #0x9
   33898:	b.eq	338a4 <__asan_cplus_demangle_type@@Base+0xa58>  // b.none
   3389c:	ldp	x21, x22, [sp, #32]
   338a0:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   338a4:	ldr	w1, [x19, #72]
   338a8:	ldr	w0, [x0, #8]
   338ac:	sub	w0, w1, w0
   338b0:	str	w0, [x19, #72]
   338b4:	str	xzr, [x2, #8]
   338b8:	ldp	x21, x22, [sp, #32]
   338bc:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   338c0:	mov	x2, #0x0                   	// #0
   338c4:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   338c8:	ldp	x21, x22, [sp, #32]
   338cc:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   338d0:	ldp	x21, x22, [sp, #32]
   338d4:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   338d8:	ldp	x21, x22, [sp, #32]
   338dc:	b	33864 <__asan_cplus_demangle_type@@Base+0xa18>
   338e0:	stp	x29, x30, [sp, #-48]!
   338e4:	mov	x29, sp
   338e8:	stp	x19, x20, [sp, #16]
   338ec:	stp	x21, x22, [sp, #32]
   338f0:	mov	x20, x0
   338f4:	ldr	x0, [x0, #24]
   338f8:	ldrb	w19, [x0]
   338fc:	cbz	w19, 33968 <__asan_cplus_demangle_type@@Base+0xb1c>
   33900:	add	x1, x0, #0x1
   33904:	str	x1, [x20, #24]
   33908:	ldrb	w6, [x0]
   3390c:	ldrb	w19, [x0, #1]
   33910:	cbz	w19, 33a7c <__asan_cplus_demangle_type@@Base+0xc30>
   33914:	add	x1, x0, #0x2
   33918:	str	x1, [x20, #24]
   3391c:	ldrb	w19, [x0, #1]
   33920:	cmp	w6, #0x76
   33924:	b.ne	3396c <__asan_cplus_demangle_type@@Base+0xb20>  // b.any
   33928:	sub	w0, w19, #0x30
   3392c:	and	w0, w0, #0xff
   33930:	cmp	w0, #0x9
   33934:	b.hi	3397c <__asan_cplus_demangle_type@@Base+0xb30>  // b.pmore
   33938:	mov	x0, x20
   3393c:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   33940:	mov	x21, x0
   33944:	mov	x0, x20
   33948:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   3394c:	mov	x22, x0
   33950:	mov	x2, x21
   33954:	sub	w1, w19, #0x30
   33958:	bl	6b20 <__asan_cplus_demangle_fill_extended_operator@plt>
   3395c:	cmp	w0, #0x0
   33960:	csel	x22, x22, xzr, ne  // ne = any
   33964:	b	33a68 <__asan_cplus_demangle_type@@Base+0xc1c>
   33968:	mov	w6, w19
   3396c:	cmp	w6, #0x63
   33970:	mov	w0, #0x76                  	// #118
   33974:	ccmp	w19, w0, #0x0, eq  // eq = none
   33978:	b.eq	33990 <__asan_cplus_demangle_type@@Base+0xb44>  // b.none
   3397c:	mov	w4, #0x43                  	// #67
   33980:	mov	w3, #0x0                   	// #0
   33984:	adrp	x5, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   33988:	ldr	x5, [x5, #3760]
   3398c:	b	33a08 <__asan_cplus_demangle_type@@Base+0xbbc>
   33990:	ldr	w19, [x20, #80]
   33994:	ldr	w0, [x20, #76]
   33998:	cmp	w0, #0x0
   3399c:	cset	w0, eq  // eq = none
   339a0:	str	w0, [x20, #80]
   339a4:	mov	x0, x20
   339a8:	bl	6750 <__asan_cplus_demangle_type@plt>
   339ac:	mov	x2, x0
   339b0:	ldr	w0, [x20, #80]
   339b4:	cbz	w0, 339d4 <__asan_cplus_demangle_type@@Base+0xb88>
   339b8:	mov	x3, #0x0                   	// #0
   339bc:	mov	w1, #0x35                  	// #53
   339c0:	mov	x0, x20
   339c4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   339c8:	mov	x22, x0
   339cc:	str	w19, [x20, #80]
   339d0:	b	33a68 <__asan_cplus_demangle_type@@Base+0xc1c>
   339d4:	mov	x3, #0x0                   	// #0
   339d8:	mov	w1, #0x34                  	// #52
   339dc:	mov	x0, x20
   339e0:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   339e4:	mov	x22, x0
   339e8:	b	339cc <__asan_cplus_demangle_type@@Base+0xb80>
   339ec:	ldrb	w0, [x0, #1]
   339f0:	cmp	w0, w19
   339f4:	b.eq	33a3c <__asan_cplus_demangle_type@@Base+0xbf0>  // b.none
   339f8:	b.hi	33a5c <__asan_cplus_demangle_type@@Base+0xc10>  // b.pmore
   339fc:	add	w3, w1, #0x1
   33a00:	cmp	w3, w4
   33a04:	b.eq	33a64 <__asan_cplus_demangle_type@@Base+0xc18>  // b.none
   33a08:	sub	w1, w4, w3
   33a0c:	add	w1, w1, w1, lsr #31
   33a10:	add	w1, w3, w1, asr #1
   33a14:	sbfiz	x2, x1, #1, #32
   33a18:	add	x2, x2, w1, sxtw
   33a1c:	add	x21, x5, x2, lsl #3
   33a20:	ldr	x0, [x5, x2, lsl #3]
   33a24:	ldrb	w2, [x0]
   33a28:	cmp	w2, w6
   33a2c:	b.eq	339ec <__asan_cplus_demangle_type@@Base+0xba0>  // b.none
   33a30:	b.ls	339fc <__asan_cplus_demangle_type@@Base+0xbb0>  // b.plast
   33a34:	mov	w4, w1
   33a38:	b	33a00 <__asan_cplus_demangle_type@@Base+0xbb4>
   33a3c:	mov	x0, x20
   33a40:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   33a44:	mov	x22, x0
   33a48:	cbz	x0, 33a68 <__asan_cplus_demangle_type@@Base+0xc1c>
   33a4c:	mov	w0, #0x32                  	// #50
   33a50:	str	w0, [x22]
   33a54:	str	x21, [x22, #8]
   33a58:	b	33a68 <__asan_cplus_demangle_type@@Base+0xc1c>
   33a5c:	mov	w4, w1
   33a60:	b	33a00 <__asan_cplus_demangle_type@@Base+0xbb4>
   33a64:	mov	x22, #0x0                   	// #0
   33a68:	mov	x0, x22
   33a6c:	ldp	x19, x20, [sp, #16]
   33a70:	ldp	x21, x22, [sp, #32]
   33a74:	ldp	x29, x30, [sp], #48
   33a78:	ret
   33a7c:	cmp	w6, #0x76
   33a80:	b.eq	3397c <__asan_cplus_demangle_type@@Base+0xb30>  // b.none
   33a84:	b	3396c <__asan_cplus_demangle_type@@Base+0xb20>
   33a88:	stp	x29, x30, [sp, #-48]!
   33a8c:	mov	x29, sp
   33a90:	stp	x19, x20, [sp, #16]
   33a94:	mov	x19, x0
   33a98:	ldr	x2, [x0, #24]
   33a9c:	ldrb	w1, [x2]
   33aa0:	sub	w0, w1, #0x30
   33aa4:	and	w0, w0, #0xff
   33aa8:	cmp	w0, #0x9
   33aac:	b.ls	33b38 <__asan_cplus_demangle_type@@Base+0xcec>  // b.plast
   33ab0:	sub	w0, w1, #0x61
   33ab4:	and	w0, w0, #0xff
   33ab8:	cmp	w0, #0x19
   33abc:	b.hi	33b7c <__asan_cplus_demangle_type@@Base+0xd30>  // b.pmore
   33ac0:	cmp	w1, #0x6f
   33ac4:	b.eq	33b64 <__asan_cplus_demangle_type@@Base+0xd18>  // b.none
   33ac8:	mov	x0, x19
   33acc:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   33ad0:	mov	x20, x0
   33ad4:	cbz	x0, 33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33ad8:	ldr	w0, [x0]
   33adc:	cmp	w0, #0x32
   33ae0:	b.ne	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>  // b.any
   33ae4:	ldr	x2, [x20, #8]
   33ae8:	ldr	w0, [x19, #72]
   33aec:	add	w1, w0, #0x7
   33af0:	ldr	w0, [x2, #16]
   33af4:	add	w0, w0, w1
   33af8:	str	w0, [x19, #72]
   33afc:	ldr	x0, [x20, #8]
   33b00:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   33b04:	add	x1, x1, #0xfc8
   33b08:	ldr	x0, [x0]
   33b0c:	bl	6b30 <__asan_internal_strcmp@plt>
   33b10:	cbnz	w0, 33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33b14:	mov	x0, x19
   33b18:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   33b1c:	mov	x3, x0
   33b20:	mov	x2, x20
   33b24:	mov	w1, #0x37                  	// #55
   33b28:	mov	x0, x19
   33b2c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33b30:	mov	x20, x0
   33b34:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33b38:	mov	x0, x19
   33b3c:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   33b40:	mov	x20, x0
   33b44:	ldr	x0, [x19, #24]
   33b48:	ldrb	w0, [x0]
   33b4c:	cmp	w0, #0x42
   33b50:	b.eq	33edc <__asan_cplus_demangle_type@@Base+0x1090>  // b.none
   33b54:	mov	x0, x20
   33b58:	ldp	x19, x20, [sp, #16]
   33b5c:	ldp	x29, x30, [sp], #48
   33b60:	ret
   33b64:	ldrb	w0, [x2, #1]
   33b68:	cmp	w0, #0x6e
   33b6c:	b.ne	33ac8 <__asan_cplus_demangle_type@@Base+0xc7c>  // b.any
   33b70:	add	x2, x2, #0x2
   33b74:	str	x2, [x19, #24]
   33b78:	b	33ac8 <__asan_cplus_demangle_type@@Base+0xc7c>
   33b7c:	sub	w0, w1, #0x43
   33b80:	and	w0, w0, #0xff
   33b84:	cmp	w0, #0x1
   33b88:	b.ls	33c24 <__asan_cplus_demangle_type@@Base+0xdd8>  // b.plast
   33b8c:	cmp	w1, #0x4c
   33b90:	b.eq	33de8 <__asan_cplus_demangle_type@@Base+0xf9c>  // b.none
   33b94:	mov	x20, #0x0                   	// #0
   33b98:	cmp	w1, #0x55
   33b9c:	b.ne	33b54 <__asan_cplus_demangle_type@@Base+0xd08>  // b.any
   33ba0:	ldrb	w0, [x2, #1]
   33ba4:	cmp	w0, #0x6c
   33ba8:	b.eq	33e14 <__asan_cplus_demangle_type@@Base+0xfc8>  // b.none
   33bac:	cmp	w0, #0x74
   33bb0:	b.ne	33b54 <__asan_cplus_demangle_type@@Base+0xd08>  // b.any
   33bb4:	add	x0, x2, #0x1
   33bb8:	str	x0, [x19, #24]
   33bbc:	ldrb	w0, [x2, #1]
   33bc0:	mov	x20, #0x0                   	// #0
   33bc4:	cmp	w0, #0x74
   33bc8:	b.ne	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>  // b.any
   33bcc:	stp	x21, x22, [sp, #32]
   33bd0:	add	x2, x2, #0x2
   33bd4:	str	x2, [x19, #24]
   33bd8:	mov	x0, x19
   33bdc:	bl	2c3b4 <__asan_backtrace_create_state@@Base+0x570>
   33be0:	mov	w21, w0
   33be4:	tbnz	w0, #31, 33ed4 <__asan_cplus_demangle_type@@Base+0x1088>
   33be8:	mov	x0, x19
   33bec:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   33bf0:	mov	x20, x0
   33bf4:	cbz	x0, 33c08 <__asan_cplus_demangle_type@@Base+0xdbc>
   33bf8:	mov	w0, #0x48                  	// #72
   33bfc:	str	w0, [x20]
   33c00:	sxtw	x21, w21
   33c04:	str	x21, [x20, #8]
   33c08:	mov	x1, x20
   33c0c:	mov	x0, x19
   33c10:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   33c14:	cmp	w0, #0x0
   33c18:	csel	x20, x20, xzr, ne  // ne = any
   33c1c:	ldp	x21, x22, [sp, #32]
   33c20:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33c24:	stp	x21, x22, [sp, #32]
   33c28:	ldr	x21, [x19, #64]
   33c2c:	cbz	x21, 33c70 <__asan_cplus_demangle_type@@Base+0xe24>
   33c30:	ldr	w0, [x21]
   33c34:	cbnz	w0, 33c68 <__asan_cplus_demangle_type@@Base+0xe1c>
   33c38:	ldr	w0, [x19, #72]
   33c3c:	ldr	w1, [x21, #16]
   33c40:	add	w0, w0, w1
   33c44:	str	w0, [x19, #72]
   33c48:	ldrb	w0, [x2]
   33c4c:	cmp	w0, #0x43
   33c50:	b.eq	33cb4 <__asan_cplus_demangle_type@@Base+0xe68>  // b.none
   33c54:	cmp	w0, #0x44
   33c58:	b.eq	33c78 <__asan_cplus_demangle_type@@Base+0xe2c>  // b.none
   33c5c:	mov	x20, #0x0                   	// #0
   33c60:	ldp	x21, x22, [sp, #32]
   33c64:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33c68:	cmp	w0, #0x18
   33c6c:	b.eq	33ca0 <__asan_cplus_demangle_type@@Base+0xe54>  // b.none
   33c70:	cmp	w1, #0x43
   33c74:	b.eq	33cb4 <__asan_cplus_demangle_type@@Base+0xe68>  // b.none
   33c78:	ldrb	w0, [x2, #1]
   33c7c:	cmp	w0, #0x32
   33c80:	b.eq	33dd0 <__asan_cplus_demangle_type@@Base+0xf84>  // b.none
   33c84:	b.ls	33d80 <__asan_cplus_demangle_type@@Base+0xf34>  // b.plast
   33c88:	cmp	w0, #0x34
   33c8c:	b.eq	33de0 <__asan_cplus_demangle_type@@Base+0xf94>  // b.none
   33c90:	cmp	w0, #0x35
   33c94:	b.ne	33eac <__asan_cplus_demangle_type@@Base+0x1060>  // b.any
   33c98:	mov	w22, #0x5                   	// #5
   33c9c:	b	33d94 <__asan_cplus_demangle_type@@Base+0xf48>
   33ca0:	ldr	w0, [x19, #72]
   33ca4:	ldr	w1, [x21, #16]
   33ca8:	add	w0, w0, w1
   33cac:	str	w0, [x19, #72]
   33cb0:	b	33c48 <__asan_cplus_demangle_type@@Base+0xdfc>
   33cb4:	ldrb	w0, [x2, #1]
   33cb8:	cmp	w0, #0x49
   33cbc:	b.eq	33ce8 <__asan_cplus_demangle_type@@Base+0xe9c>  // b.none
   33cc0:	cmp	w0, #0x33
   33cc4:	b.eq	33d5c <__asan_cplus_demangle_type@@Base+0xf10>  // b.none
   33cc8:	b.ls	33ef0 <__asan_cplus_demangle_type@@Base+0x10a4>  // b.plast
   33ccc:	cmp	w0, #0x34
   33cd0:	b.eq	33d74 <__asan_cplus_demangle_type@@Base+0xf28>  // b.none
   33cd4:	mov	w1, #0x0                   	// #0
   33cd8:	cmp	w0, #0x35
   33cdc:	b.ne	33f4c <__asan_cplus_demangle_type@@Base+0x1100>  // b.any
   33ce0:	mov	w21, #0x5                   	// #5
   33ce4:	b	33f08 <__asan_cplus_demangle_type@@Base+0x10bc>
   33ce8:	add	x1, x2, #0x1
   33cec:	str	x1, [x19, #24]
   33cf0:	ldrb	w0, [x2, #2]
   33cf4:	cmp	w0, #0x33
   33cf8:	b.eq	33d50 <__asan_cplus_demangle_type@@Base+0xf04>  // b.none
   33cfc:	b.hi	33d28 <__asan_cplus_demangle_type@@Base+0xedc>  // b.pmore
   33d00:	cmp	w0, #0x31
   33d04:	b.eq	33f58 <__asan_cplus_demangle_type@@Base+0x110c>  // b.none
   33d08:	cmp	w0, #0x32
   33d0c:	b.ne	33d1c <__asan_cplus_demangle_type@@Base+0xed0>  // b.any
   33d10:	mov	x2, x1
   33d14:	mov	w1, #0x1                   	// #1
   33d18:	b	33f04 <__asan_cplus_demangle_type@@Base+0x10b8>
   33d1c:	mov	x20, #0x0                   	// #0
   33d20:	ldp	x21, x22, [sp, #32]
   33d24:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33d28:	cmp	w0, #0x34
   33d2c:	b.eq	33d68 <__asan_cplus_demangle_type@@Base+0xf1c>  // b.none
   33d30:	cmp	w0, #0x35
   33d34:	b.ne	33d44 <__asan_cplus_demangle_type@@Base+0xef8>  // b.any
   33d38:	mov	x2, x1
   33d3c:	mov	w1, #0x1                   	// #1
   33d40:	b	33ce0 <__asan_cplus_demangle_type@@Base+0xe94>
   33d44:	mov	x20, #0x0                   	// #0
   33d48:	ldp	x21, x22, [sp, #32]
   33d4c:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33d50:	mov	x2, x1
   33d54:	mov	w1, #0x1                   	// #1
   33d58:	b	33d60 <__asan_cplus_demangle_type@@Base+0xf14>
   33d5c:	mov	w1, #0x0                   	// #0
   33d60:	mov	w21, #0x3                   	// #3
   33d64:	b	33f08 <__asan_cplus_demangle_type@@Base+0x10bc>
   33d68:	mov	x2, x1
   33d6c:	mov	w1, #0x1                   	// #1
   33d70:	b	33d78 <__asan_cplus_demangle_type@@Base+0xf2c>
   33d74:	mov	w1, #0x0                   	// #0
   33d78:	mov	w21, #0x4                   	// #4
   33d7c:	b	33f08 <__asan_cplus_demangle_type@@Base+0x10bc>
   33d80:	cmp	w0, #0x30
   33d84:	b.eq	33dd8 <__asan_cplus_demangle_type@@Base+0xf8c>  // b.none
   33d88:	mov	w22, #0x2                   	// #2
   33d8c:	cmp	w0, #0x31
   33d90:	b.ne	33dc4 <__asan_cplus_demangle_type@@Base+0xf78>  // b.any
   33d94:	add	x2, x2, #0x2
   33d98:	str	x2, [x19, #24]
   33d9c:	mov	x0, x19
   33da0:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   33da4:	mov	x20, x0
   33da8:	mov	x2, x21
   33dac:	mov	w1, w22
   33db0:	bl	6d20 <__asan_cplus_demangle_fill_dtor@plt>
   33db4:	cmp	w0, #0x0
   33db8:	csel	x20, x20, xzr, ne  // ne = any
   33dbc:	ldp	x21, x22, [sp, #32]
   33dc0:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33dc4:	mov	x20, #0x0                   	// #0
   33dc8:	ldp	x21, x22, [sp, #32]
   33dcc:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33dd0:	mov	w22, #0x3                   	// #3
   33dd4:	b	33d94 <__asan_cplus_demangle_type@@Base+0xf48>
   33dd8:	mov	w22, #0x1                   	// #1
   33ddc:	b	33d94 <__asan_cplus_demangle_type@@Base+0xf48>
   33de0:	mov	w22, #0x4                   	// #4
   33de4:	b	33d94 <__asan_cplus_demangle_type@@Base+0xf48>
   33de8:	add	x2, x2, #0x1
   33dec:	str	x2, [x19, #24]
   33df0:	mov	x0, x19
   33df4:	bl	329cc <__asan_cplus_demangle_fill_name@@Base+0x74>
   33df8:	mov	x20, x0
   33dfc:	cbz	x0, 33b54 <__asan_cplus_demangle_type@@Base+0xd08>
   33e00:	mov	x0, x19
   33e04:	bl	2c4dc <__asan_backtrace_create_state@@Base+0x698>
   33e08:	cbnz	w0, 33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33e0c:	mov	x20, #0x0                   	// #0
   33e10:	b	33b54 <__asan_cplus_demangle_type@@Base+0xd08>
   33e14:	add	x0, x2, #0x1
   33e18:	str	x0, [x19, #24]
   33e1c:	ldrb	w0, [x2, #1]
   33e20:	mov	x20, #0x0                   	// #0
   33e24:	cmp	w0, #0x6c
   33e28:	b.ne	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>  // b.any
   33e2c:	stp	x21, x22, [sp, #32]
   33e30:	add	x2, x2, #0x2
   33e34:	str	x2, [x19, #24]
   33e38:	mov	x0, x19
   33e3c:	bl	337ac <__asan_cplus_demangle_type@@Base+0x960>
   33e40:	mov	x21, x0
   33e44:	cbz	x0, 33eb8 <__asan_cplus_demangle_type@@Base+0x106c>
   33e48:	ldr	x0, [x19, #24]
   33e4c:	ldrb	w1, [x0]
   33e50:	cmp	w1, #0x45
   33e54:	b.ne	33ec4 <__asan_cplus_demangle_type@@Base+0x1078>  // b.any
   33e58:	add	x0, x0, #0x1
   33e5c:	str	x0, [x19, #24]
   33e60:	mov	x0, x19
   33e64:	bl	2c3b4 <__asan_backtrace_create_state@@Base+0x570>
   33e68:	mov	w22, w0
   33e6c:	tbnz	w0, #31, 33ecc <__asan_cplus_demangle_type@@Base+0x1080>
   33e70:	mov	x0, x19
   33e74:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   33e78:	mov	x20, x0
   33e7c:	cbz	x0, 33e90 <__asan_cplus_demangle_type@@Base+0x1044>
   33e80:	mov	w0, #0x46                  	// #70
   33e84:	str	w0, [x20]
   33e88:	str	x21, [x20, #8]
   33e8c:	str	w22, [x20, #16]
   33e90:	mov	x1, x20
   33e94:	mov	x0, x19
   33e98:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   33e9c:	cmp	w0, #0x0
   33ea0:	csel	x20, x20, xzr, ne  // ne = any
   33ea4:	ldp	x21, x22, [sp, #32]
   33ea8:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33eac:	mov	x20, #0x0                   	// #0
   33eb0:	ldp	x21, x22, [sp, #32]
   33eb4:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33eb8:	mov	x20, x0
   33ebc:	ldp	x21, x22, [sp, #32]
   33ec0:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33ec4:	ldp	x21, x22, [sp, #32]
   33ec8:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33ecc:	ldp	x21, x22, [sp, #32]
   33ed0:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33ed4:	ldp	x21, x22, [sp, #32]
   33ed8:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33edc:	mov	x1, x20
   33ee0:	mov	x0, x19
   33ee4:	bl	32ad0 <__asan_cplus_demangle_fill_name@@Base+0x178>
   33ee8:	mov	x20, x0
   33eec:	b	33b54 <__asan_cplus_demangle_type@@Base+0xd08>
   33ef0:	cmp	w0, #0x31
   33ef4:	b.eq	33f70 <__asan_cplus_demangle_type@@Base+0x1124>  // b.none
   33ef8:	mov	w1, #0x0                   	// #0
   33efc:	cmp	w0, #0x32
   33f00:	b.ne	33f40 <__asan_cplus_demangle_type@@Base+0x10f4>  // b.any
   33f04:	mov	w21, #0x2                   	// #2
   33f08:	add	x2, x2, #0x2
   33f0c:	str	x2, [x19, #24]
   33f10:	cbnz	w1, 33f64 <__asan_cplus_demangle_type@@Base+0x1118>
   33f14:	ldr	x22, [x19, #64]
   33f18:	mov	x0, x19
   33f1c:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   33f20:	mov	x20, x0
   33f24:	mov	x2, x22
   33f28:	mov	w1, w21
   33f2c:	bl	6b90 <__asan_cplus_demangle_fill_ctor@plt>
   33f30:	cmp	w0, #0x0
   33f34:	csel	x20, x20, xzr, ne  // ne = any
   33f38:	ldp	x21, x22, [sp, #32]
   33f3c:	b	33b44 <__asan_cplus_demangle_type@@Base+0xcf8>
   33f40:	mov	x20, #0x0                   	// #0
   33f44:	ldp	x21, x22, [sp, #32]
   33f48:	b	33b54 <__asan_cplus_demangle_type@@Base+0xd08>
   33f4c:	mov	x20, #0x0                   	// #0
   33f50:	ldp	x21, x22, [sp, #32]
   33f54:	b	33b54 <__asan_cplus_demangle_type@@Base+0xd08>
   33f58:	add	x2, x2, #0x3
   33f5c:	str	x2, [x19, #24]
   33f60:	mov	w21, #0x1                   	// #1
   33f64:	mov	x0, x19
   33f68:	bl	6750 <__asan_cplus_demangle_type@plt>
   33f6c:	b	33f14 <__asan_cplus_demangle_type@@Base+0x10c8>
   33f70:	add	x2, x2, #0x2
   33f74:	str	x2, [x19, #24]
   33f78:	mov	w21, #0x1                   	// #1
   33f7c:	b	33f14 <__asan_cplus_demangle_type@@Base+0x10c8>
   33f80:	stp	x29, x30, [sp, #-32]!
   33f84:	mov	x29, sp
   33f88:	stp	x19, x20, [sp, #16]
   33f8c:	mov	x19, x0
   33f90:	ldr	x0, [x0, #24]
   33f94:	ldrb	w2, [x0]
   33f98:	cmp	w2, #0x4a
   33f9c:	b.eq	33fac <__asan_cplus_demangle_type@@Base+0x1160>  // b.none
   33fa0:	cbnz	w1, 33fb4 <__asan_cplus_demangle_type@@Base+0x1168>
   33fa4:	mov	x20, #0x0                   	// #0
   33fa8:	b	33fc4 <__asan_cplus_demangle_type@@Base+0x1178>
   33fac:	add	x0, x0, #0x1
   33fb0:	str	x0, [x19, #24]
   33fb4:	mov	x0, x19
   33fb8:	bl	6750 <__asan_cplus_demangle_type@plt>
   33fbc:	mov	x20, x0
   33fc0:	cbz	x0, 33fe4 <__asan_cplus_demangle_type@@Base+0x1198>
   33fc4:	mov	x0, x19
   33fc8:	bl	337ac <__asan_cplus_demangle_type@@Base+0x960>
   33fcc:	cbz	x0, 33fe4 <__asan_cplus_demangle_type@@Base+0x1198>
   33fd0:	mov	x3, x0
   33fd4:	mov	x2, x20
   33fd8:	mov	w1, #0x29                  	// #41
   33fdc:	mov	x0, x19
   33fe0:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   33fe4:	ldp	x19, x20, [sp, #16]
   33fe8:	ldp	x29, x30, [sp], #32
   33fec:	ret
   33ff0:	stp	x29, x30, [sp, #-32]!
   33ff4:	mov	x29, sp
   33ff8:	str	x19, [sp, #16]
   33ffc:	mov	x19, x0
   34000:	ldr	w0, [x0, #16]
   34004:	tbnz	w0, #18, 340b0 <__asan_cplus_demangle_type@@Base+0x1264>
   34008:	ldr	w0, [x19, #84]
   3400c:	cmp	w0, #0x800
   34010:	b.hi	340a8 <__asan_cplus_demangle_type@@Base+0x125c>  // b.pmore
   34014:	add	w0, w0, #0x1
   34018:	str	w0, [x19, #84]
   3401c:	ldr	x1, [x19, #24]
   34020:	ldrb	w2, [x1]
   34024:	mov	x0, #0x0                   	// #0
   34028:	cmp	w2, #0x46
   3402c:	b.eq	34048 <__asan_cplus_demangle_type@@Base+0x11fc>  // b.none
   34030:	ldr	w1, [x19, #84]
   34034:	sub	w1, w1, #0x1
   34038:	str	w1, [x19, #84]
   3403c:	ldr	x19, [sp, #16]
   34040:	ldp	x29, x30, [sp], #32
   34044:	ret
   34048:	add	x0, x1, #0x1
   3404c:	str	x0, [x19, #24]
   34050:	ldrb	w2, [x1, #1]
   34054:	add	x1, x1, #0x2
   34058:	cmp	w2, #0x59
   3405c:	csel	x1, x1, x0, eq  // eq = none
   34060:	str	x1, [x19, #24]
   34064:	mov	w1, #0x1                   	// #1
   34068:	mov	x0, x19
   3406c:	bl	33f80 <__asan_cplus_demangle_type@@Base+0x1134>
   34070:	mov	x1, x0
   34074:	mov	x0, x19
   34078:	bl	2c348 <__asan_backtrace_create_state@@Base+0x504>
   3407c:	ldr	x1, [x19, #24]
   34080:	ldrb	w2, [x1]
   34084:	cmp	w2, #0x45
   34088:	b.eq	3409c <__asan_cplus_demangle_type@@Base+0x1250>  // b.none
   3408c:	mov	x0, #0x0                   	// #0
   34090:	ldr	w1, [x19, #16]
   34094:	tbz	w1, #18, 34030 <__asan_cplus_demangle_type@@Base+0x11e4>
   34098:	b	3403c <__asan_cplus_demangle_type@@Base+0x11f0>
   3409c:	add	x1, x1, #0x1
   340a0:	str	x1, [x19, #24]
   340a4:	b	34090 <__asan_cplus_demangle_type@@Base+0x1244>
   340a8:	mov	x0, #0x0                   	// #0
   340ac:	b	3403c <__asan_cplus_demangle_type@@Base+0x11f0>
   340b0:	ldr	x1, [x19, #24]
   340b4:	ldrb	w0, [x1]
   340b8:	cmp	w0, #0x46
   340bc:	b.eq	34048 <__asan_cplus_demangle_type@@Base+0x11fc>  // b.none
   340c0:	mov	x0, #0x0                   	// #0
   340c4:	b	3403c <__asan_cplus_demangle_type@@Base+0x11f0>
   340c8:	stp	x29, x30, [sp, #-64]!
   340cc:	mov	x29, sp
   340d0:	stp	x19, x20, [sp, #16]
   340d4:	stp	x21, x22, [sp, #32]
   340d8:	mov	x19, x0
   340dc:	ldr	w21, [x0, #76]
   340e0:	mov	w0, #0x1                   	// #1
   340e4:	str	w0, [x19, #76]
   340e8:	ldr	x0, [x19, #24]
   340ec:	ldrb	w1, [x0]
   340f0:	cmp	w1, #0x4c
   340f4:	b.eq	34158 <__asan_cplus_demangle_type@@Base+0x130c>  // b.none
   340f8:	cmp	w1, #0x54
   340fc:	b.eq	34168 <__asan_cplus_demangle_type@@Base+0x131c>  // b.none
   34100:	cmp	w1, #0x73
   34104:	b.eq	34178 <__asan_cplus_demangle_type@@Base+0x132c>  // b.none
   34108:	cmp	w1, #0x66
   3410c:	b.eq	342a4 <__asan_cplus_demangle_type@@Base+0x1458>  // b.none
   34110:	sub	w2, w1, #0x30
   34114:	and	w2, w2, #0xff
   34118:	cmp	w2, #0x9
   3411c:	b.hi	34358 <__asan_cplus_demangle_type@@Base+0x150c>  // b.pmore
   34120:	mov	x0, x19
   34124:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34128:	mov	x20, x0
   3412c:	cbz	x0, 34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34130:	ldr	x0, [x19, #24]
   34134:	ldrb	w0, [x0]
   34138:	cmp	w0, #0x49
   3413c:	b.eq	34378 <__asan_cplus_demangle_type@@Base+0x152c>  // b.none
   34140:	str	w21, [x19, #76]
   34144:	mov	x0, x20
   34148:	ldp	x19, x20, [sp, #16]
   3414c:	ldp	x21, x22, [sp, #32]
   34150:	ldp	x29, x30, [sp], #64
   34154:	ret
   34158:	mov	x0, x19
   3415c:	bl	35a64 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   34160:	mov	x20, x0
   34164:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34168:	mov	x0, x19
   3416c:	bl	2c430 <__asan_backtrace_create_state@@Base+0x5ec>
   34170:	mov	x20, x0
   34174:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34178:	ldrb	w2, [x0, #1]
   3417c:	cmp	w2, #0x72
   34180:	b.eq	341f4 <__asan_cplus_demangle_type@@Base+0x13a8>  // b.none
   34184:	cmp	w2, #0x70
   34188:	b.eq	34278 <__asan_cplus_demangle_type@@Base+0x142c>  // b.none
   3418c:	cmp	w1, #0x69
   34190:	mov	w2, #0x74                  	// #116
   34194:	ccmp	w1, w2, #0x4, ne  // ne = any
   34198:	b.ne	342b0 <__asan_cplus_demangle_type@@Base+0x1464>  // b.any
   3419c:	ldrb	w2, [x0, #1]
   341a0:	cmp	w2, #0x6c
   341a4:	b.ne	342b0 <__asan_cplus_demangle_type@@Base+0x1464>  // b.any
   341a8:	add	x0, x0, #0x2
   341ac:	str	x0, [x19, #24]
   341b0:	mov	x22, #0x0                   	// #0
   341b4:	cmp	w1, #0x74
   341b8:	b.eq	3439c <__asan_cplus_demangle_type@@Base+0x1550>  // b.none
   341bc:	ldr	x0, [x19, #24]
   341c0:	ldrb	w0, [x0, #1]
   341c4:	mov	x20, #0x0                   	// #0
   341c8:	cbz	w0, 34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   341cc:	mov	w1, #0x45                  	// #69
   341d0:	mov	x0, x19
   341d4:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   341d8:	mov	x3, x0
   341dc:	mov	x2, x22
   341e0:	mov	w1, #0x31                  	// #49
   341e4:	mov	x0, x19
   341e8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   341ec:	mov	x20, x0
   341f0:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   341f4:	add	x0, x0, #0x2
   341f8:	str	x0, [x19, #24]
   341fc:	mov	x0, x19
   34200:	bl	6750 <__asan_cplus_demangle_type@plt>
   34204:	mov	x20, x0
   34208:	mov	x0, x19
   3420c:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34210:	mov	x22, x0
   34214:	ldr	x0, [x19, #24]
   34218:	ldrb	w0, [x0]
   3421c:	cmp	w0, #0x49
   34220:	b.eq	34240 <__asan_cplus_demangle_type@@Base+0x13f4>  // b.none
   34224:	mov	x3, x22
   34228:	mov	x2, x20
   3422c:	mov	w1, #0x1                   	// #1
   34230:	mov	x0, x19
   34234:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34238:	mov	x20, x0
   3423c:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34240:	mov	x0, x19
   34244:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   34248:	mov	x3, x0
   3424c:	mov	x2, x22
   34250:	mov	w1, #0x4                   	// #4
   34254:	mov	x0, x19
   34258:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3425c:	mov	x3, x0
   34260:	mov	x2, x20
   34264:	mov	w1, #0x1                   	// #1
   34268:	mov	x0, x19
   3426c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34270:	mov	x20, x0
   34274:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34278:	add	x0, x0, #0x2
   3427c:	str	x0, [x19, #24]
   34280:	mov	x0, x19
   34284:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   34288:	mov	x3, #0x0                   	// #0
   3428c:	mov	x2, x0
   34290:	mov	w1, #0x4b                  	// #75
   34294:	mov	x0, x19
   34298:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3429c:	mov	x20, x0
   342a0:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   342a4:	ldrb	w1, [x0, #1]
   342a8:	cmp	w1, #0x70
   342ac:	b.eq	342f4 <__asan_cplus_demangle_type@@Base+0x14a8>  // b.none
   342b0:	mov	x0, x19
   342b4:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   342b8:	mov	x20, x0
   342bc:	cbz	x0, 34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   342c0:	ldr	w0, [x0]
   342c4:	mov	x22, #0x0                   	// #0
   342c8:	cmp	w0, #0x32
   342cc:	b.eq	343ac <__asan_cplus_demangle_type@@Base+0x1560>  // b.none
   342d0:	ldr	w0, [x20]
   342d4:	cmp	w0, #0x33
   342d8:	b.eq	34498 <__asan_cplus_demangle_type@@Base+0x164c>  // b.none
   342dc:	cmp	w0, #0x34
   342e0:	b.eq	34420 <__asan_cplus_demangle_type@@Base+0x15d4>  // b.none
   342e4:	cmp	w0, #0x32
   342e8:	b.eq	34400 <__asan_cplus_demangle_type@@Base+0x15b4>  // b.none
   342ec:	mov	x20, #0x0                   	// #0
   342f0:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   342f4:	add	x1, x0, #0x2
   342f8:	str	x1, [x19, #24]
   342fc:	ldrb	w1, [x0, #2]
   34300:	cmp	w1, #0x54
   34304:	b.eq	34348 <__asan_cplus_demangle_type@@Base+0x14fc>  // b.none
   34308:	mov	x0, x19
   3430c:	bl	2c3b4 <__asan_backtrace_create_state@@Base+0x570>
   34310:	mvn	x1, x0
   34314:	mov	x20, #0x0                   	// #0
   34318:	tst	x1, #0x7fffffff
   3431c:	b.eq	34140 <__asan_cplus_demangle_type@@Base+0x12f4>  // b.none
   34320:	add	w22, w0, #0x1
   34324:	mov	x0, x19
   34328:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   3432c:	mov	x20, x0
   34330:	cbz	x0, 34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34334:	mov	w0, #0x6                   	// #6
   34338:	str	w0, [x20]
   3433c:	sxtw	x0, w22
   34340:	str	x0, [x20, #8]
   34344:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34348:	add	x0, x0, #0x3
   3434c:	str	x0, [x19, #24]
   34350:	mov	w22, #0x0                   	// #0
   34354:	b	34324 <__asan_cplus_demangle_type@@Base+0x14d8>
   34358:	cmp	w1, #0x6f
   3435c:	b.ne	3418c <__asan_cplus_demangle_type@@Base+0x1340>  // b.any
   34360:	ldrb	w1, [x0, #1]
   34364:	cmp	w1, #0x6e
   34368:	b.ne	342b0 <__asan_cplus_demangle_type@@Base+0x1464>  // b.any
   3436c:	add	x0, x0, #0x2
   34370:	str	x0, [x19, #24]
   34374:	b	34120 <__asan_cplus_demangle_type@@Base+0x12d4>
   34378:	mov	x0, x19
   3437c:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   34380:	mov	x3, x0
   34384:	mov	x2, x20
   34388:	mov	w1, #0x4                   	// #4
   3438c:	mov	x0, x19
   34390:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34394:	mov	x20, x0
   34398:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   3439c:	mov	x0, x19
   343a0:	bl	6750 <__asan_cplus_demangle_type@plt>
   343a4:	mov	x22, x0
   343a8:	b	341bc <__asan_cplus_demangle_type@@Base+0x1370>
   343ac:	ldr	x0, [x20, #8]
   343b0:	ldr	x22, [x0]
   343b4:	ldr	w0, [x0, #16]
   343b8:	sub	w1, w0, #0x2
   343bc:	ldr	w0, [x19, #72]
   343c0:	add	w0, w0, w1
   343c4:	str	w0, [x19, #72]
   343c8:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   343cc:	add	x1, x1, #0x398
   343d0:	mov	x0, x22
   343d4:	bl	6b30 <__asan_internal_strcmp@plt>
   343d8:	cbnz	w0, 342d0 <__asan_cplus_demangle_type@@Base+0x1484>
   343dc:	mov	x0, x19
   343e0:	bl	6750 <__asan_cplus_demangle_type@plt>
   343e4:	mov	x3, x0
   343e8:	mov	x2, x20
   343ec:	mov	w1, #0x37                  	// #55
   343f0:	mov	x0, x19
   343f4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   343f8:	mov	x20, x0
   343fc:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34400:	ldr	x1, [x20, #8]
   34404:	ldr	w1, [x1, #20]
   34408:	cmp	w1, #0x2
   3440c:	b.eq	345b4 <__asan_cplus_demangle_type@@Base+0x1768>  // b.none
   34410:	b.gt	344a8 <__asan_cplus_demangle_type@@Base+0x165c>
   34414:	cbz	w1, 34550 <__asan_cplus_demangle_type@@Base+0x1704>
   34418:	cmp	w1, #0x1
   3441c:	b.ne	344a0 <__asan_cplus_demangle_type@@Base+0x1654>  // b.any
   34420:	str	x23, [sp, #48]
   34424:	cbz	x22, 34804 <__asan_cplus_demangle_type@@Base+0x19b8>
   34428:	ldrb	w0, [x22]
   3442c:	cmp	w0, #0x70
   34430:	mov	w1, #0x6d                  	// #109
   34434:	ccmp	w0, w1, #0x4, ne  // ne = any
   34438:	b.ne	34448 <__asan_cplus_demangle_type@@Base+0x15fc>  // b.any
   3443c:	ldrb	w1, [x22, #1]
   34440:	cmp	w1, w0
   34444:	b.eq	3456c <__asan_cplus_demangle_type@@Base+0x1720>  // b.none
   34448:	ldr	w0, [x20]
   3444c:	mov	w23, #0x0                   	// #0
   34450:	cmp	w0, #0x34
   34454:	b.eq	34828 <__asan_cplus_demangle_type@@Base+0x19dc>  // b.none
   34458:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3445c:	add	x1, x1, #0xee0
   34460:	mov	x0, x22
   34464:	bl	6b30 <__asan_internal_strcmp@plt>
   34468:	cbz	w0, 3458c <__asan_cplus_demangle_type@@Base+0x1740>
   3446c:	mov	x0, x19
   34470:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   34474:	mov	x3, x0
   34478:	cbnz	w23, 3459c <__asan_cplus_demangle_type@@Base+0x1750>
   3447c:	mov	x2, x20
   34480:	mov	w1, #0x37                  	// #55
   34484:	mov	x0, x19
   34488:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3448c:	mov	x20, x0
   34490:	ldr	x23, [sp, #48]
   34494:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34498:	ldr	w1, [x20, #8]
   3449c:	b	34408 <__asan_cplus_demangle_type@@Base+0x15bc>
   344a0:	mov	x20, #0x0                   	// #0
   344a4:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   344a8:	cmp	w1, #0x3
   344ac:	b.ne	34548 <__asan_cplus_demangle_type@@Base+0x16fc>  // b.any
   344b0:	cbz	x22, 347cc <__asan_cplus_demangle_type@@Base+0x1980>
   344b4:	str	x23, [sp, #48]
   344b8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   344bc:	add	x1, x1, #0xe08
   344c0:	mov	x0, x22
   344c4:	bl	6b30 <__asan_internal_strcmp@plt>
   344c8:	cbz	w0, 346d0 <__asan_cplus_demangle_type@@Base+0x1884>
   344cc:	ldrb	w0, [x22]
   344d0:	cmp	w0, #0x66
   344d4:	b.eq	3473c <__asan_cplus_demangle_type@@Base+0x18f0>  // b.none
   344d8:	cmp	w0, #0x6e
   344dc:	b.ne	347e0 <__asan_cplus_demangle_type@@Base+0x1994>  // b.any
   344e0:	ldrb	w0, [x22, #1]
   344e4:	cmp	w0, #0x77
   344e8:	mov	w1, #0x61                  	// #97
   344ec:	ccmp	w0, w1, #0x4, ne  // ne = any
   344f0:	b.ne	347ec <__asan_cplus_demangle_type@@Base+0x19a0>  // b.any
   344f4:	mov	w1, #0x5f                  	// #95
   344f8:	mov	x0, x19
   344fc:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   34500:	mov	x22, x0
   34504:	mov	x0, x19
   34508:	bl	6750 <__asan_cplus_demangle_type@plt>
   3450c:	mov	x23, x0
   34510:	ldr	x0, [x19, #24]
   34514:	ldrb	w1, [x0]
   34518:	cmp	w1, #0x45
   3451c:	b.eq	34770 <__asan_cplus_demangle_type@@Base+0x1924>  // b.none
   34520:	cmp	w1, #0x70
   34524:	b.eq	34780 <__asan_cplus_demangle_type@@Base+0x1934>  // b.none
   34528:	cmp	w1, #0x69
   3452c:	b.ne	347f8 <__asan_cplus_demangle_type@@Base+0x19ac>  // b.any
   34530:	ldrb	w0, [x0, #1]
   34534:	cmp	w0, #0x6c
   34538:	b.eq	347b4 <__asan_cplus_demangle_type@@Base+0x1968>  // b.none
   3453c:	mov	x20, #0x0                   	// #0
   34540:	ldr	x23, [sp, #48]
   34544:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34548:	mov	x20, #0x0                   	// #0
   3454c:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34550:	mov	x3, #0x0                   	// #0
   34554:	mov	x2, x20
   34558:	mov	w1, #0x36                  	// #54
   3455c:	mov	x0, x19
   34560:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34564:	mov	x20, x0
   34568:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   3456c:	ldr	x0, [x19, #24]
   34570:	ldrb	w1, [x0]
   34574:	mov	w23, #0x1                   	// #1
   34578:	cmp	w1, #0x5f
   3457c:	b.ne	34458 <__asan_cplus_demangle_type@@Base+0x160c>  // b.any
   34580:	add	x0, x0, #0x1
   34584:	str	x0, [x19, #24]
   34588:	b	34448 <__asan_cplus_demangle_type@@Base+0x15fc>
   3458c:	mov	x0, x19
   34590:	bl	35c50 <__asan_cplus_demangle_mangled_name@@Base+0x394>
   34594:	mov	x3, x0
   34598:	b	34478 <__asan_cplus_demangle_type@@Base+0x162c>
   3459c:	mov	x2, x3
   345a0:	mov	w1, #0x39                  	// #57
   345a4:	mov	x0, x19
   345a8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   345ac:	mov	x3, x0
   345b0:	b	3447c <__asan_cplus_demangle_type@@Base+0x1630>
   345b4:	cbz	x22, 347c4 <__asan_cplus_demangle_type@@Base+0x1978>
   345b8:	str	x23, [sp, #48]
   345bc:	mov	x0, x20
   345c0:	bl	2c49c <__asan_backtrace_create_state@@Base+0x658>
   345c4:	cbnz	w0, 34638 <__asan_cplus_demangle_type@@Base+0x17ec>
   345c8:	ldrb	w0, [x22]
   345cc:	cmp	w0, #0x66
   345d0:	b.eq	34648 <__asan_cplus_demangle_type@@Base+0x17fc>  // b.none
   345d4:	mov	x0, x19
   345d8:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   345dc:	mov	x23, x0
   345e0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   345e4:	add	x1, x1, #0xdf8
   345e8:	mov	x0, x22
   345ec:	bl	6b30 <__asan_internal_strcmp@plt>
   345f0:	cbnz	w0, 34658 <__asan_cplus_demangle_type@@Base+0x180c>
   345f4:	mov	w1, #0x45                  	// #69
   345f8:	mov	x0, x19
   345fc:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   34600:	mov	x22, x0
   34604:	mov	x3, x22
   34608:	mov	x2, x23
   3460c:	mov	w1, #0x39                  	// #57
   34610:	mov	x0, x19
   34614:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34618:	mov	x3, x0
   3461c:	mov	x2, x20
   34620:	mov	w1, #0x38                  	// #56
   34624:	mov	x0, x19
   34628:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3462c:	mov	x20, x0
   34630:	ldr	x23, [sp, #48]
   34634:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34638:	mov	x0, x19
   3463c:	bl	6750 <__asan_cplus_demangle_type@plt>
   34640:	mov	x23, x0
   34644:	b	345e0 <__asan_cplus_demangle_type@@Base+0x1794>
   34648:	mov	x0, x19
   3464c:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   34650:	mov	x23, x0
   34654:	b	345e0 <__asan_cplus_demangle_type@@Base+0x1794>
   34658:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3465c:	add	x1, x1, #0xfd0
   34660:	mov	x0, x22
   34664:	bl	6b30 <__asan_internal_strcmp@plt>
   34668:	cbz	w0, 34680 <__asan_cplus_demangle_type@@Base+0x1834>
   3466c:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   34670:	add	x1, x1, #0xfd8
   34674:	mov	x0, x22
   34678:	bl	6b30 <__asan_internal_strcmp@plt>
   3467c:	cbnz	w0, 346c0 <__asan_cplus_demangle_type@@Base+0x1874>
   34680:	mov	x0, x19
   34684:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34688:	mov	x22, x0
   3468c:	ldr	x0, [x19, #24]
   34690:	ldrb	w0, [x0]
   34694:	cmp	w0, #0x49
   34698:	b.ne	34604 <__asan_cplus_demangle_type@@Base+0x17b8>  // b.any
   3469c:	mov	x0, x19
   346a0:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   346a4:	mov	x3, x0
   346a8:	mov	x2, x22
   346ac:	mov	w1, #0x4                   	// #4
   346b0:	mov	x0, x19
   346b4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   346b8:	mov	x22, x0
   346bc:	b	34604 <__asan_cplus_demangle_type@@Base+0x17b8>
   346c0:	mov	x0, x19
   346c4:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   346c8:	mov	x22, x0
   346cc:	b	34604 <__asan_cplus_demangle_type@@Base+0x17b8>
   346d0:	mov	x0, x19
   346d4:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   346d8:	mov	x22, x0
   346dc:	mov	x0, x19
   346e0:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   346e4:	mov	x23, x0
   346e8:	mov	x0, x19
   346ec:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   346f0:	mov	x3, x0
   346f4:	cbz	x0, 347d4 <__asan_cplus_demangle_type@@Base+0x1988>
   346f8:	mov	x2, x23
   346fc:	mov	w1, #0x3c                  	// #60
   34700:	mov	x0, x19
   34704:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34708:	mov	x3, x0
   3470c:	mov	x2, x22
   34710:	mov	w1, #0x3b                  	// #59
   34714:	mov	x0, x19
   34718:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3471c:	mov	x3, x0
   34720:	mov	x2, x20
   34724:	mov	w1, #0x3a                  	// #58
   34728:	mov	x0, x19
   3472c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34730:	mov	x20, x0
   34734:	ldr	x23, [sp, #48]
   34738:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   3473c:	mov	x0, x19
   34740:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   34744:	mov	x22, x0
   34748:	mov	x0, x19
   3474c:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   34750:	mov	x23, x0
   34754:	mov	x0, x19
   34758:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   3475c:	mov	x3, x0
   34760:	cbnz	x0, 346f8 <__asan_cplus_demangle_type@@Base+0x18ac>
   34764:	mov	x20, x0
   34768:	ldr	x23, [sp, #48]
   3476c:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34770:	add	x0, x0, #0x1
   34774:	str	x0, [x19, #24]
   34778:	mov	x3, #0x0                   	// #0
   3477c:	b	346f8 <__asan_cplus_demangle_type@@Base+0x18ac>
   34780:	ldrb	w1, [x0, #1]
   34784:	cmp	w1, #0x69
   34788:	b.eq	34798 <__asan_cplus_demangle_type@@Base+0x194c>  // b.none
   3478c:	mov	x20, #0x0                   	// #0
   34790:	ldr	x23, [sp, #48]
   34794:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34798:	add	x0, x0, #0x2
   3479c:	str	x0, [x19, #24]
   347a0:	mov	w1, #0x45                  	// #69
   347a4:	mov	x0, x19
   347a8:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   347ac:	mov	x3, x0
   347b0:	b	346f8 <__asan_cplus_demangle_type@@Base+0x18ac>
   347b4:	mov	x0, x19
   347b8:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   347bc:	mov	x3, x0
   347c0:	b	346f8 <__asan_cplus_demangle_type@@Base+0x18ac>
   347c4:	mov	x20, x22
   347c8:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   347cc:	mov	x20, x22
   347d0:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   347d4:	mov	x20, x0
   347d8:	ldr	x23, [sp, #48]
   347dc:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   347e0:	mov	x20, #0x0                   	// #0
   347e4:	ldr	x23, [sp, #48]
   347e8:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   347ec:	mov	x20, #0x0                   	// #0
   347f0:	ldr	x23, [sp, #48]
   347f4:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   347f8:	mov	x20, #0x0                   	// #0
   347fc:	ldr	x23, [sp, #48]
   34800:	b	34140 <__asan_cplus_demangle_type@@Base+0x12f4>
   34804:	mov	w23, #0x0                   	// #0
   34808:	cmp	w0, #0x34
   3480c:	b.ne	3446c <__asan_cplus_demangle_type@@Base+0x1620>  // b.any
   34810:	ldr	x0, [x19, #24]
   34814:	ldrb	w1, [x0]
   34818:	cmp	w1, #0x5f
   3481c:	b.eq	34838 <__asan_cplus_demangle_type@@Base+0x19ec>  // b.none
   34820:	mov	w23, #0x0                   	// #0
   34824:	b	3446c <__asan_cplus_demangle_type@@Base+0x1620>
   34828:	ldr	x0, [x19, #24]
   3482c:	ldrb	w1, [x0]
   34830:	cmp	w1, #0x5f
   34834:	b.ne	34458 <__asan_cplus_demangle_type@@Base+0x160c>  // b.any
   34838:	add	x0, x0, #0x1
   3483c:	str	x0, [x19, #24]
   34840:	mov	w1, #0x45                  	// #69
   34844:	mov	x0, x19
   34848:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   3484c:	mov	x3, x0
   34850:	b	3447c <__asan_cplus_demangle_type@@Base+0x1630>
   34854:	stp	x29, x30, [sp, #-64]!
   34858:	mov	x29, sp
   3485c:	stp	x19, x20, [sp, #16]
   34860:	stp	x21, x22, [sp, #32]
   34864:	mov	x19, x0
   34868:	and	w22, w1, #0xff
   3486c:	str	xzr, [sp, #56]
   34870:	ldr	x0, [x0, #24]
   34874:	ldrb	w2, [x0]
   34878:	add	x20, sp, #0x38
   3487c:	mov	w21, #0x2e                  	// #46
   34880:	cmp	w2, w1, uxtb
   34884:	b.eq	348e0 <__asan_cplus_demangle_type@@Base+0x1a94>  // b.none
   34888:	mov	x0, x19
   3488c:	bl	340c8 <__asan_cplus_demangle_type@@Base+0x127c>
   34890:	cbz	x0, 348d0 <__asan_cplus_demangle_type@@Base+0x1a84>
   34894:	mov	x3, #0x0                   	// #0
   34898:	mov	x2, x0
   3489c:	mov	w1, w21
   348a0:	mov	x0, x19
   348a4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   348a8:	str	x0, [x20]
   348ac:	cbz	x0, 348d0 <__asan_cplus_demangle_type@@Base+0x1a84>
   348b0:	add	x20, x0, #0x10
   348b4:	ldr	x0, [x19, #24]
   348b8:	ldrb	w1, [x0]
   348bc:	cmp	w1, w22
   348c0:	b.ne	34888 <__asan_cplus_demangle_type@@Base+0x1a3c>  // b.any
   348c4:	add	x0, x0, #0x1
   348c8:	str	x0, [x19, #24]
   348cc:	ldr	x0, [sp, #56]
   348d0:	ldp	x19, x20, [sp, #16]
   348d4:	ldp	x21, x22, [sp, #32]
   348d8:	ldp	x29, x30, [sp], #64
   348dc:	ret
   348e0:	add	x0, x0, #0x1
   348e4:	str	x0, [x19, #24]
   348e8:	mov	x3, #0x0                   	// #0
   348ec:	mov	x2, #0x0                   	// #0
   348f0:	mov	w1, w21
   348f4:	mov	x0, x19
   348f8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   348fc:	b	348d0 <__asan_cplus_demangle_type@@Base+0x1a84>
   34900:	stp	x29, x30, [sp, #-112]!
   34904:	mov	x29, sp
   34908:	stp	x19, x20, [sp, #16]
   3490c:	stp	x21, x22, [sp, #32]
   34910:	stp	x23, x24, [sp, #48]
   34914:	stp	x25, x26, [sp, #64]
   34918:	stp	x27, x28, [sp, #80]
   3491c:	mov	x19, x0
   34920:	mov	x23, x1
   34924:	mov	w26, w2
   34928:	ldr	x0, [x0, #24]
   3492c:	ldrb	w20, [x0]
   34930:	cmp	w2, #0x0
   34934:	mov	w0, #0x1e                  	// #30
   34938:	mov	w1, #0x1b                  	// #27
   3493c:	csel	w0, w0, w1, ne  // ne = any
   34940:	mov	w25, #0x1d                  	// #29
   34944:	mov	w1, #0x1a                  	// #26
   34948:	csel	w25, w25, w1, ne  // ne = any
   3494c:	mov	w24, #0x1c                  	// #28
   34950:	mov	w1, #0x19                  	// #25
   34954:	csel	w24, w24, w1, ne  // ne = any
   34958:	mov	x21, x23
   3495c:	mov	w28, #0x50                  	// #80
   34960:	mov	x22, #0x0                   	// #0
   34964:	mov	w27, #0x4f                  	// #79
   34968:	str	w0, [sp, #108]
   3496c:	b	349a8 <__asan_cplus_demangle_type@@Base+0x1b5c>
   34970:	ldr	w0, [x19, #72]
   34974:	add	w0, w0, #0x9
   34978:	str	w0, [x19, #72]
   3497c:	mov	w1, w24
   34980:	mov	x3, x22
   34984:	mov	x2, x22
   34988:	mov	x0, x19
   3498c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34990:	mov	x3, x0
   34994:	str	x0, [x21]
   34998:	cbz	x0, 34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   3499c:	add	x21, x0, #0x8
   349a0:	ldr	x0, [x19, #24]
   349a4:	ldrb	w20, [x0]
   349a8:	mov	x0, x19
   349ac:	bl	2c2f0 <__asan_backtrace_create_state@@Base+0x4ac>
   349b0:	cbz	w0, 34adc <__asan_cplus_demangle_type@@Base+0x1c90>
   349b4:	ldr	x0, [x19, #24]
   349b8:	add	x1, x0, #0x1
   349bc:	str	x1, [x19, #24]
   349c0:	cmp	w20, #0x72
   349c4:	b.eq	34970 <__asan_cplus_demangle_type@@Base+0x1b24>  // b.none
   349c8:	cmp	w20, #0x56
   349cc:	b.eq	34a50 <__asan_cplus_demangle_type@@Base+0x1c04>  // b.none
   349d0:	cmp	w20, #0x4b
   349d4:	b.eq	34a68 <__asan_cplus_demangle_type@@Base+0x1c1c>  // b.none
   349d8:	ldrb	w1, [x0, #1]
   349dc:	cbz	w1, 34b50 <__asan_cplus_demangle_type@@Base+0x1d04>
   349e0:	add	x1, x0, #0x2
   349e4:	str	x1, [x19, #24]
   349e8:	ldrb	w2, [x0, #1]
   349ec:	cmp	w2, #0x78
   349f0:	b.eq	34a80 <__asan_cplus_demangle_type@@Base+0x1c34>  // b.none
   349f4:	and	w0, w2, #0xffffffdf
   349f8:	and	w0, w0, #0xff
   349fc:	cmp	w0, #0x4f
   34a00:	b.ne	34a98 <__asan_cplus_demangle_type@@Base+0x1c4c>  // b.any
   34a04:	ldr	w0, [x19, #72]
   34a08:	add	w0, w0, #0x9
   34a0c:	str	w0, [x19, #72]
   34a10:	mov	x3, x22
   34a14:	mov	w1, w27
   34a18:	cmp	w2, #0x4f
   34a1c:	b.ne	34984 <__asan_cplus_demangle_type@@Base+0x1b38>  // b.any
   34a20:	mov	x0, x19
   34a24:	bl	340c8 <__asan_cplus_demangle_type@@Base+0x127c>
   34a28:	mov	x3, x0
   34a2c:	cbz	x0, 34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34a30:	ldr	x0, [x19, #24]
   34a34:	ldrb	w1, [x0]
   34a38:	cmp	w1, #0x45
   34a3c:	b.ne	34b74 <__asan_cplus_demangle_type@@Base+0x1d28>  // b.any
   34a40:	add	x0, x0, #0x1
   34a44:	str	x0, [x19, #24]
   34a48:	mov	w1, w27
   34a4c:	b	34984 <__asan_cplus_demangle_type@@Base+0x1b38>
   34a50:	ldr	w0, [x19, #72]
   34a54:	add	w0, w0, #0x9
   34a58:	str	w0, [x19, #72]
   34a5c:	mov	w1, w25
   34a60:	mov	x3, x22
   34a64:	b	34984 <__asan_cplus_demangle_type@@Base+0x1b38>
   34a68:	ldr	w0, [x19, #72]
   34a6c:	add	w0, w0, #0x6
   34a70:	str	w0, [x19, #72]
   34a74:	ldr	w1, [sp, #108]
   34a78:	mov	x3, x22
   34a7c:	b	34984 <__asan_cplus_demangle_type@@Base+0x1b38>
   34a80:	ldr	w0, [x19, #72]
   34a84:	add	w0, w0, #0x11
   34a88:	str	w0, [x19, #72]
   34a8c:	mov	x3, x22
   34a90:	mov	w1, #0x4d                  	// #77
   34a94:	b	34984 <__asan_cplus_demangle_type@@Base+0x1b38>
   34a98:	cmp	w2, #0x77
   34a9c:	b.ne	34b7c <__asan_cplus_demangle_type@@Base+0x1d30>  // b.any
   34aa0:	ldr	w0, [x19, #72]
   34aa4:	add	w0, w0, #0x6
   34aa8:	str	w0, [x19, #72]
   34aac:	mov	x0, x19
   34ab0:	bl	337ac <__asan_cplus_demangle_type@@Base+0x960>
   34ab4:	mov	x3, x0
   34ab8:	cbz	x0, 34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34abc:	ldr	x0, [x19, #24]
   34ac0:	ldrb	w1, [x0]
   34ac4:	cmp	w1, #0x45
   34ac8:	b.ne	34b84 <__asan_cplus_demangle_type@@Base+0x1d38>  // b.any
   34acc:	add	x0, x0, #0x1
   34ad0:	str	x0, [x19, #24]
   34ad4:	mov	w1, w28
   34ad8:	b	34984 <__asan_cplus_demangle_type@@Base+0x1b38>
   34adc:	cmp	w20, #0x46
   34ae0:	mov	x3, x21
   34ae4:	ccmp	w26, #0x0, #0x0, eq  // eq = none
   34ae8:	b.ne	34b54 <__asan_cplus_demangle_type@@Base+0x1d08>  // b.any
   34aec:	cmp	x21, x23
   34af0:	b.eq	34b8c <__asan_cplus_demangle_type@@Base+0x1d40>  // b.none
   34af4:	mov	w4, #0x1d                  	// #29
   34af8:	mov	w3, #0x1e                  	// #30
   34afc:	mov	w2, #0x1c                  	// #28
   34b00:	b	34b18 <__asan_cplus_demangle_type@@Base+0x1ccc>
   34b04:	str	w4, [x1]
   34b08:	ldr	x23, [x23]
   34b0c:	add	x23, x23, #0x8
   34b10:	cmp	x21, x23
   34b14:	b.eq	34b48 <__asan_cplus_demangle_type@@Base+0x1cfc>  // b.none
   34b18:	ldr	x1, [x23]
   34b1c:	ldr	w0, [x1]
   34b20:	cmp	w0, #0x1a
   34b24:	b.eq	34b04 <__asan_cplus_demangle_type@@Base+0x1cb8>  // b.none
   34b28:	cmp	w0, #0x1b
   34b2c:	b.eq	34b40 <__asan_cplus_demangle_type@@Base+0x1cf4>  // b.none
   34b30:	cmp	w0, #0x19
   34b34:	b.ne	34b08 <__asan_cplus_demangle_type@@Base+0x1cbc>  // b.any
   34b38:	str	w2, [x1]
   34b3c:	b	34b08 <__asan_cplus_demangle_type@@Base+0x1cbc>
   34b40:	str	w3, [x1]
   34b44:	b	34b08 <__asan_cplus_demangle_type@@Base+0x1cbc>
   34b48:	mov	x3, x23
   34b4c:	b	34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34b50:	mov	x3, #0x0                   	// #0
   34b54:	mov	x0, x3
   34b58:	ldp	x19, x20, [sp, #16]
   34b5c:	ldp	x21, x22, [sp, #32]
   34b60:	ldp	x23, x24, [sp, #48]
   34b64:	ldp	x25, x26, [sp, #64]
   34b68:	ldp	x27, x28, [sp, #80]
   34b6c:	ldp	x29, x30, [sp], #112
   34b70:	ret
   34b74:	mov	x3, #0x0                   	// #0
   34b78:	b	34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34b7c:	mov	x3, #0x0                   	// #0
   34b80:	b	34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34b84:	mov	x3, #0x0                   	// #0
   34b88:	b	34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34b8c:	mov	x3, x23
   34b90:	b	34b54 <__asan_cplus_demangle_type@@Base+0x1d08>
   34b94:	stp	x29, x30, [sp, #-112]!
   34b98:	mov	x29, sp
   34b9c:	stp	x19, x20, [sp, #16]
   34ba0:	stp	x21, x22, [sp, #32]
   34ba4:	mov	x19, x0
   34ba8:	ldr	x1, [x0, #24]
   34bac:	ldrb	w0, [x1]
   34bb0:	cmp	w0, #0x55
   34bb4:	b.eq	34f90 <__asan_cplus_demangle_type@@Base+0x2144>  // b.none
   34bb8:	b.hi	34c1c <__asan_cplus_demangle_type@@Base+0x1dd0>  // b.pmore
   34bbc:	cmp	w0, #0x4e
   34bc0:	b.eq	34cb0 <__asan_cplus_demangle_type@@Base+0x1e64>  // b.none
   34bc4:	cmp	w0, #0x53
   34bc8:	b.ne	35024 <__asan_cplus_demangle_type@@Base+0x21d8>  // b.any
   34bcc:	ldrb	w0, [x1, #1]
   34bd0:	cmp	w0, #0x74
   34bd4:	b.eq	34fb0 <__asan_cplus_demangle_type@@Base+0x2164>  // b.none
   34bd8:	mov	w1, #0x0                   	// #0
   34bdc:	mov	x0, x19
   34be0:	bl	32b50 <__asan_cplus_demangle_fill_name@@Base+0x1f8>
   34be4:	mov	x22, x0
   34be8:	ldr	x0, [x19, #24]
   34bec:	ldrb	w0, [x0]
   34bf0:	cmp	w0, #0x49
   34bf4:	b.ne	34f9c <__asan_cplus_demangle_type@@Base+0x2150>  // b.any
   34bf8:	mov	x0, x19
   34bfc:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   34c00:	mov	x3, x0
   34c04:	mov	x2, x22
   34c08:	mov	w1, #0x4                   	// #4
   34c0c:	mov	x0, x19
   34c10:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34c14:	mov	x22, x0
   34c18:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   34c1c:	cmp	w0, #0x5a
   34c20:	b.ne	35024 <__asan_cplus_demangle_type@@Base+0x21d8>  // b.any
   34c24:	add	x1, x1, #0x1
   34c28:	str	x1, [x19, #24]
   34c2c:	mov	w1, #0x0                   	// #0
   34c30:	mov	x0, x19
   34c34:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   34c38:	mov	x22, x0
   34c3c:	cbz	x0, 34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   34c40:	ldr	x0, [x19, #24]
   34c44:	ldrb	w1, [x0]
   34c48:	cmp	w1, #0x45
   34c4c:	b.ne	35074 <__asan_cplus_demangle_type@@Base+0x2228>  // b.any
   34c50:	add	x1, x0, #0x1
   34c54:	str	x1, [x19, #24]
   34c58:	ldrb	w1, [x0, #1]
   34c5c:	cmp	w1, #0x73
   34c60:	b.eq	34ec8 <__asan_cplus_demangle_type@@Base+0x207c>  // b.none
   34c64:	cmp	w1, #0x64
   34c68:	b.eq	34ef8 <__asan_cplus_demangle_type@@Base+0x20ac>  // b.none
   34c6c:	mov	x0, x19
   34c70:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   34c74:	mov	x3, x0
   34c78:	cbz	x0, 34c8c <__asan_cplus_demangle_type@@Base+0x1e40>
   34c7c:	ldr	w0, [x0]
   34c80:	sub	w0, w0, #0x46
   34c84:	tst	w0, #0xfffffffd
   34c88:	b.ne	34f34 <__asan_cplus_demangle_type@@Base+0x20e8>  // b.any
   34c8c:	ldr	w0, [x22]
   34c90:	cmp	w0, #0x3
   34c94:	b.eq	34f78 <__asan_cplus_demangle_type@@Base+0x212c>  // b.none
   34c98:	mov	x2, x22
   34c9c:	mov	w1, #0x2                   	// #2
   34ca0:	mov	x0, x19
   34ca4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34ca8:	mov	x22, x0
   34cac:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   34cb0:	add	x1, x1, #0x1
   34cb4:	str	x1, [x19, #24]
   34cb8:	mov	w2, #0x1                   	// #1
   34cbc:	add	x1, sp, #0x68
   34cc0:	mov	x0, x19
   34cc4:	bl	34900 <__asan_cplus_demangle_type@@Base+0x1ab4>
   34cc8:	mov	x22, x0
   34ccc:	cbz	x0, 34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   34cd0:	stp	x27, x28, [sp, #80]
   34cd4:	mov	x1, #0x0                   	// #0
   34cd8:	mov	x0, x19
   34cdc:	bl	2c348 <__asan_backtrace_create_state@@Base+0x504>
   34ce0:	mov	x27, x0
   34ce4:	ldr	x0, [x19, #24]
   34ce8:	ldrb	w20, [x0]
   34cec:	cbz	w20, 350a4 <__asan_cplus_demangle_type@@Base+0x2258>
   34cf0:	stp	x23, x24, [sp, #48]
   34cf4:	stp	x25, x26, [sp, #64]
   34cf8:	mov	x23, #0x0                   	// #0
   34cfc:	mov	w24, #0x1                   	// #1
   34d00:	mov	w26, #0x55                  	// #85
   34d04:	mov	w25, #0x4c                  	// #76
   34d08:	mov	w28, #0x4                   	// #4
   34d0c:	b	34d84 <__asan_cplus_demangle_type@@Base+0x1f38>
   34d10:	ldrb	w0, [x0, #1]
   34d14:	and	w0, w0, #0xffffffdf
   34d18:	and	w0, w0, #0xff
   34d1c:	cmp	w0, #0x54
   34d20:	b.ne	34dd0 <__asan_cplus_demangle_type@@Base+0x1f84>  // b.any
   34d24:	mov	x0, x19
   34d28:	bl	6750 <__asan_cplus_demangle_type@plt>
   34d2c:	mov	x21, x0
   34d30:	mov	w1, w24
   34d34:	cbz	x23, 34d54 <__asan_cplus_demangle_type@@Base+0x1f08>
   34d38:	mov	x3, x21
   34d3c:	mov	x2, x23
   34d40:	mov	x0, x19
   34d44:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34d48:	mov	x21, x0
   34d4c:	cmp	w20, #0x53
   34d50:	b.eq	34d74 <__asan_cplus_demangle_type@@Base+0x1f28>  // b.none
   34d54:	ldr	x0, [x19, #24]
   34d58:	ldrb	w20, [x0]
   34d5c:	cmp	w20, #0x45
   34d60:	b.eq	34d80 <__asan_cplus_demangle_type@@Base+0x1f34>  // b.none
   34d64:	mov	x1, x21
   34d68:	mov	x0, x19
   34d6c:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   34d70:	cbz	w0, 34e60 <__asan_cplus_demangle_type@@Base+0x2014>
   34d74:	ldr	x0, [x19, #24]
   34d78:	ldrb	w20, [x0]
   34d7c:	cbz	w20, 3509c <__asan_cplus_demangle_type@@Base+0x2250>
   34d80:	mov	x23, x21
   34d84:	cmp	w20, #0x44
   34d88:	b.eq	34d10 <__asan_cplus_demangle_type@@Base+0x1ec4>  // b.none
   34d8c:	sub	w2, w20, #0x30
   34d90:	and	w2, w2, #0xff
   34d94:	sub	w1, w20, #0x61
   34d98:	and	w1, w1, #0xff
   34d9c:	cmp	w2, #0x9
   34da0:	ccmp	w1, #0x19, #0x0, hi  // hi = pmore
   34da4:	b.ls	34db8 <__asan_cplus_demangle_type@@Base+0x1f6c>  // b.plast
   34da8:	cmp	w20, #0x43
   34dac:	ccmp	w20, w26, #0x4, ne  // ne = any
   34db0:	ccmp	w20, w25, #0x4, ne  // ne = any
   34db4:	b.ne	34de0 <__asan_cplus_demangle_type@@Base+0x1f94>  // b.any
   34db8:	mov	x0, x19
   34dbc:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34dc0:	mov	x21, x0
   34dc4:	mov	w1, w24
   34dc8:	cbnz	x23, 34d38 <__asan_cplus_demangle_type@@Base+0x1eec>
   34dcc:	b	34d4c <__asan_cplus_demangle_type@@Base+0x1f00>
   34dd0:	mov	x0, x19
   34dd4:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34dd8:	mov	x21, x0
   34ddc:	b	34d30 <__asan_cplus_demangle_type@@Base+0x1ee4>
   34de0:	cmp	w20, #0x53
   34de4:	b.eq	34e1c <__asan_cplus_demangle_type@@Base+0x1fd0>  // b.none
   34de8:	cmp	w20, #0x49
   34dec:	b.eq	34e38 <__asan_cplus_demangle_type@@Base+0x1fec>  // b.none
   34df0:	cmp	w20, #0x54
   34df4:	b.eq	34e50 <__asan_cplus_demangle_type@@Base+0x2004>  // b.none
   34df8:	cmp	w20, #0x45
   34dfc:	b.eq	34e6c <__asan_cplus_demangle_type@@Base+0x2020>  // b.none
   34e00:	cmp	w20, #0x4d
   34e04:	ccmp	x23, #0x0, #0x4, eq  // eq = none
   34e08:	b.eq	350c0 <__asan_cplus_demangle_type@@Base+0x2274>  // b.none
   34e0c:	add	x0, x0, #0x1
   34e10:	str	x0, [x19, #24]
   34e14:	mov	x21, x23
   34e18:	b	34d74 <__asan_cplus_demangle_type@@Base+0x1f28>
   34e1c:	mov	w1, w24
   34e20:	mov	x0, x19
   34e24:	bl	32b50 <__asan_cplus_demangle_fill_name@@Base+0x1f8>
   34e28:	mov	x21, x0
   34e2c:	mov	w1, w24
   34e30:	cbnz	x23, 34d38 <__asan_cplus_demangle_type@@Base+0x1eec>
   34e34:	b	34d74 <__asan_cplus_demangle_type@@Base+0x1f28>
   34e38:	cbz	x23, 350b4 <__asan_cplus_demangle_type@@Base+0x2268>
   34e3c:	mov	x0, x19
   34e40:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   34e44:	mov	x21, x0
   34e48:	mov	w1, w28
   34e4c:	b	34d38 <__asan_cplus_demangle_type@@Base+0x1eec>
   34e50:	mov	x0, x19
   34e54:	bl	2c430 <__asan_backtrace_create_state@@Base+0x5ec>
   34e58:	mov	x21, x0
   34e5c:	b	34d30 <__asan_cplus_demangle_type@@Base+0x1ee4>
   34e60:	ldp	x23, x24, [sp, #48]
   34e64:	ldp	x25, x26, [sp, #64]
   34e68:	b	350a4 <__asan_cplus_demangle_type@@Base+0x2258>
   34e6c:	str	x23, [x22]
   34e70:	cbz	x23, 34eb4 <__asan_cplus_demangle_type@@Base+0x2068>
   34e74:	cbz	x27, 34e84 <__asan_cplus_demangle_type@@Base+0x2038>
   34e78:	ldr	x0, [sp, #104]
   34e7c:	str	x0, [x27, #8]
   34e80:	str	x27, [sp, #104]
   34e84:	ldr	x0, [x19, #24]
   34e88:	ldrb	w1, [x0]
   34e8c:	mov	x22, #0x0                   	// #0
   34e90:	cmp	w1, #0x45
   34e94:	b.ne	350cc <__asan_cplus_demangle_type@@Base+0x2280>  // b.any
   34e98:	add	x0, x0, #0x1
   34e9c:	str	x0, [x19, #24]
   34ea0:	ldr	x22, [sp, #104]
   34ea4:	ldp	x23, x24, [sp, #48]
   34ea8:	ldp	x25, x26, [sp, #64]
   34eac:	ldp	x27, x28, [sp, #80]
   34eb0:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   34eb4:	mov	x22, x23
   34eb8:	ldp	x23, x24, [sp, #48]
   34ebc:	ldp	x25, x26, [sp, #64]
   34ec0:	ldp	x27, x28, [sp, #80]
   34ec4:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   34ec8:	add	x0, x0, #0x2
   34ecc:	str	x0, [x19, #24]
   34ed0:	mov	x0, x19
   34ed4:	bl	2c4dc <__asan_backtrace_create_state@@Base+0x698>
   34ed8:	cbz	w0, 3507c <__asan_cplus_demangle_type@@Base+0x2230>
   34edc:	mov	w2, #0xe                   	// #14
   34ee0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   34ee4:	add	x1, x1, #0xfe0
   34ee8:	mov	x0, x19
   34eec:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   34ef0:	mov	x3, x0
   34ef4:	b	34c8c <__asan_cplus_demangle_type@@Base+0x1e40>
   34ef8:	add	x0, x0, #0x2
   34efc:	str	x0, [x19, #24]
   34f00:	mov	x0, x19
   34f04:	bl	2c3b4 <__asan_backtrace_create_state@@Base+0x570>
   34f08:	mov	w20, w0
   34f0c:	tbnz	w0, #31, 35084 <__asan_cplus_demangle_type@@Base+0x2238>
   34f10:	mov	x0, x19
   34f14:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   34f18:	mov	x21, x0
   34f1c:	cbz	x0, 34f4c <__asan_cplus_demangle_type@@Base+0x2100>
   34f20:	ldr	w0, [x0]
   34f24:	sub	w0, w0, #0x46
   34f28:	tst	w0, #0xfffffffd
   34f2c:	b.eq	34f4c <__asan_cplus_demangle_type@@Base+0x2100>  // b.none
   34f30:	b	34f3c <__asan_cplus_demangle_type@@Base+0x20f0>
   34f34:	mov	x21, x3
   34f38:	mov	w20, #0xffffffff            	// #-1
   34f3c:	mov	x0, x19
   34f40:	bl	2c4dc <__asan_backtrace_create_state@@Base+0x698>
   34f44:	cbz	w0, 3508c <__asan_cplus_demangle_type@@Base+0x2240>
   34f48:	tbnz	w20, #31, 34f70 <__asan_cplus_demangle_type@@Base+0x2124>
   34f4c:	mov	x0, x19
   34f50:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   34f54:	mov	x3, x0
   34f58:	cbz	x0, 34c8c <__asan_cplus_demangle_type@@Base+0x1e40>
   34f5c:	mov	w0, #0x47                  	// #71
   34f60:	str	w0, [x3]
   34f64:	str	w20, [x3, #16]
   34f68:	str	x21, [x3, #8]
   34f6c:	b	34c8c <__asan_cplus_demangle_type@@Base+0x1e40>
   34f70:	mov	x3, x21
   34f74:	b	34c8c <__asan_cplus_demangle_type@@Base+0x1e40>
   34f78:	ldr	x0, [x22, #16]
   34f7c:	ldr	w1, [x0]
   34f80:	cmp	w1, #0x29
   34f84:	b.ne	34c98 <__asan_cplus_demangle_type@@Base+0x1e4c>  // b.any
   34f88:	str	xzr, [x0, #8]
   34f8c:	b	34c98 <__asan_cplus_demangle_type@@Base+0x1e4c>
   34f90:	mov	x0, x19
   34f94:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34f98:	mov	x22, x0
   34f9c:	mov	x0, x22
   34fa0:	ldp	x19, x20, [sp, #16]
   34fa4:	ldp	x21, x22, [sp, #32]
   34fa8:	ldp	x29, x30, [sp], #112
   34fac:	ret
   34fb0:	add	x1, x1, #0x2
   34fb4:	str	x1, [x19, #24]
   34fb8:	mov	w2, #0x3                   	// #3
   34fbc:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   34fc0:	add	x1, x1, #0xff0
   34fc4:	mov	x0, x19
   34fc8:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   34fcc:	mov	x20, x0
   34fd0:	mov	x0, x19
   34fd4:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   34fd8:	mov	x3, x0
   34fdc:	mov	x2, x20
   34fe0:	mov	w1, #0x1                   	// #1
   34fe4:	mov	x0, x19
   34fe8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   34fec:	mov	x22, x0
   34ff0:	ldr	w0, [x19, #72]
   34ff4:	add	w0, w0, #0x3
   34ff8:	str	w0, [x19, #72]
   34ffc:	ldr	x0, [x19, #24]
   35000:	ldrb	w0, [x0]
   35004:	cmp	w0, #0x49
   35008:	b.ne	34f9c <__asan_cplus_demangle_type@@Base+0x2150>  // b.any
   3500c:	mov	x1, x22
   35010:	mov	x0, x19
   35014:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   35018:	cbnz	w0, 34bf8 <__asan_cplus_demangle_type@@Base+0x1dac>
   3501c:	mov	x22, #0x0                   	// #0
   35020:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   35024:	mov	x0, x19
   35028:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   3502c:	mov	x22, x0
   35030:	ldr	x0, [x19, #24]
   35034:	ldrb	w0, [x0]
   35038:	cmp	w0, #0x49
   3503c:	b.ne	34f9c <__asan_cplus_demangle_type@@Base+0x2150>  // b.any
   35040:	mov	x1, x22
   35044:	mov	x0, x19
   35048:	bl	2c57c <__asan_backtrace_create_state@@Base+0x738>
   3504c:	cbz	w0, 35094 <__asan_cplus_demangle_type@@Base+0x2248>
   35050:	mov	x0, x19
   35054:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   35058:	mov	x3, x0
   3505c:	mov	x2, x22
   35060:	mov	w1, #0x4                   	// #4
   35064:	mov	x0, x19
   35068:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3506c:	mov	x22, x0
   35070:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   35074:	mov	x22, #0x0                   	// #0
   35078:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   3507c:	mov	x22, #0x0                   	// #0
   35080:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   35084:	mov	x22, #0x0                   	// #0
   35088:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   3508c:	mov	x22, #0x0                   	// #0
   35090:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   35094:	mov	x22, #0x0                   	// #0
   35098:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   3509c:	ldp	x23, x24, [sp, #48]
   350a0:	ldp	x25, x26, [sp, #64]
   350a4:	str	xzr, [x22]
   350a8:	mov	x22, #0x0                   	// #0
   350ac:	ldp	x27, x28, [sp, #80]
   350b0:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   350b4:	ldp	x23, x24, [sp, #48]
   350b8:	ldp	x25, x26, [sp, #64]
   350bc:	b	350a4 <__asan_cplus_demangle_type@@Base+0x2258>
   350c0:	ldp	x23, x24, [sp, #48]
   350c4:	ldp	x25, x26, [sp, #64]
   350c8:	b	350a4 <__asan_cplus_demangle_type@@Base+0x2258>
   350cc:	ldp	x23, x24, [sp, #48]
   350d0:	ldp	x25, x26, [sp, #64]
   350d4:	ldp	x27, x28, [sp, #80]
   350d8:	b	34f9c <__asan_cplus_demangle_type@@Base+0x2150>
   350dc:	stp	x29, x30, [sp, #-96]!
   350e0:	mov	x29, sp
   350e4:	stp	x19, x20, [sp, #16]
   350e8:	mov	x19, x0
   350ec:	ldr	x0, [x0, #24]
   350f0:	ldrb	w2, [x0]
   350f4:	cmp	w2, #0x47
   350f8:	mov	w3, #0x54                  	// #84
   350fc:	ccmp	w2, w3, #0x4, ne  // ne = any
   35100:	b.ne	35724 <__asan_cplus_demangle_type@@Base+0x28d8>  // b.any
   35104:	ldr	w2, [x19, #72]
   35108:	add	w1, w2, #0x14
   3510c:	str	w1, [x19, #72]
   35110:	ldrb	w1, [x0]
   35114:	cmp	w1, w3
   35118:	b.eq	351c8 <__asan_cplus_demangle_type@@Base+0x237c>  // b.none
   3511c:	mov	x20, #0x0                   	// #0
   35120:	cmp	w1, #0x47
   35124:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   35128:	add	x1, x0, #0x1
   3512c:	str	x1, [x19, #24]
   35130:	ldrb	w1, [x0, #1]
   35134:	cbz	w1, 35824 <__asan_cplus_demangle_type@@Base+0x29d8>
   35138:	add	x1, x0, #0x2
   3513c:	str	x1, [x19, #24]
   35140:	ldrb	w1, [x0, #1]
   35144:	cmp	w1, #0x54
   35148:	b.eq	35588 <__asan_cplus_demangle_type@@Base+0x273c>  // b.none
   3514c:	cmp	w1, #0x54
   35150:	b.ls	354f8 <__asan_cplus_demangle_type@@Base+0x26ac>  // b.plast
   35154:	cmp	w1, #0x56
   35158:	b.eq	3553c <__asan_cplus_demangle_type@@Base+0x26f0>  // b.none
   3515c:	mov	x20, #0x0                   	// #0
   35160:	cmp	w1, #0x72
   35164:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   35168:	mov	x0, x19
   3516c:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   35170:	cmp	w0, #0x1
   35174:	b.le	3582c <__asan_cplus_demangle_type@@Base+0x29e0>
   35178:	ldr	x1, [x19, #24]
   3517c:	ldrb	w2, [x1]
   35180:	cbz	w2, 35834 <__asan_cplus_demangle_type@@Base+0x29e8>
   35184:	stp	x21, x22, [sp, #32]
   35188:	add	x21, x1, #0x1
   3518c:	str	x21, [x19, #24]
   35190:	ldrb	w1, [x1]
   35194:	mov	x20, #0x0                   	// #0
   35198:	cmp	w1, #0x5f
   3519c:	b.ne	35898 <__asan_cplus_demangle_type@@Base+0x2a4c>  // b.any
   351a0:	stp	x23, x24, [sp, #48]
   351a4:	stp	x25, x26, [sp, #64]
   351a8:	stp	x27, x28, [sp, #80]
   351ac:	sub	w22, w0, #0x1
   351b0:	mov	x24, #0x0                   	// #0
   351b4:	mov	w26, #0x41                  	// #65
   351b8:	mov	w28, #0x2f                  	// #47
   351bc:	mov	w27, #0x2e                  	// #46
   351c0:	mov	w25, #0x40                  	// #64
   351c4:	b	35674 <__asan_cplus_demangle_type@@Base+0x2828>
   351c8:	add	x1, x0, #0x1
   351cc:	str	x1, [x19, #24]
   351d0:	ldrb	w1, [x0, #1]
   351d4:	mov	x20, #0x0                   	// #0
   351d8:	cbz	w1, 35760 <__asan_cplus_demangle_type@@Base+0x2914>
   351dc:	add	x1, x0, #0x2
   351e0:	str	x1, [x19, #24]
   351e4:	ldrb	w0, [x0, #1]
   351e8:	cmp	w0, #0x53
   351ec:	b.eq	353b4 <__asan_cplus_demangle_type@@Base+0x2568>  // b.none
   351f0:	b.ls	35250 <__asan_cplus_demangle_type@@Base+0x2404>  // b.plast
   351f4:	cmp	w0, #0x63
   351f8:	b.eq	35414 <__asan_cplus_demangle_type@@Base+0x25c8>  // b.none
   351fc:	b.ls	352f8 <__asan_cplus_demangle_type@@Base+0x24ac>  // b.plast
   35200:	cmp	w0, #0x68
   35204:	b.eq	353d8 <__asan_cplus_demangle_type@@Base+0x258c>  // b.none
   35208:	mov	x20, #0x0                   	// #0
   3520c:	cmp	w0, #0x76
   35210:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   35214:	mov	w1, #0x76                  	// #118
   35218:	mov	x0, x19
   3521c:	bl	2c244 <__asan_backtrace_create_state@@Base+0x400>
   35220:	mov	x20, #0x0                   	// #0
   35224:	cbz	w0, 35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35228:	mov	w1, #0x0                   	// #0
   3522c:	mov	x0, x19
   35230:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   35234:	mov	x3, #0x0                   	// #0
   35238:	mov	x2, x0
   3523c:	mov	w1, #0x10                  	// #16
   35240:	mov	x0, x19
   35244:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35248:	mov	x20, x0
   3524c:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35250:	cmp	w0, #0x48
   35254:	b.eq	354d4 <__asan_cplus_demangle_type@@Base+0x2688>  // b.none
   35258:	b.ls	35294 <__asan_cplus_demangle_type@@Base+0x2448>  // b.plast
   3525c:	cmp	w0, #0x49
   35260:	b.eq	35390 <__asan_cplus_demangle_type@@Base+0x2544>  // b.none
   35264:	mov	x20, #0x0                   	// #0
   35268:	cmp	w0, #0x4a
   3526c:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   35270:	mov	x0, x19
   35274:	bl	6750 <__asan_cplus_demangle_type@plt>
   35278:	mov	x3, #0x0                   	// #0
   3527c:	mov	x2, x0
   35280:	mov	w1, #0x12                  	// #18
   35284:	mov	x0, x19
   35288:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3528c:	mov	x20, x0
   35290:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35294:	cmp	w0, #0x43
   35298:	b.eq	35460 <__asan_cplus_demangle_type@@Base+0x2614>  // b.none
   3529c:	cmp	w0, #0x46
   352a0:	b.ne	352c8 <__asan_cplus_demangle_type@@Base+0x247c>  // b.any
   352a4:	mov	x0, x19
   352a8:	bl	6750 <__asan_cplus_demangle_type@plt>
   352ac:	mov	x3, #0x0                   	// #0
   352b0:	mov	x2, x0
   352b4:	mov	w1, #0xe                   	// #14
   352b8:	mov	x0, x19
   352bc:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   352c0:	mov	x20, x0
   352c4:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   352c8:	mov	x20, #0x0                   	// #0
   352cc:	cmp	w0, #0x41
   352d0:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   352d4:	mov	x0, x19
   352d8:	bl	35bb4 <__asan_cplus_demangle_mangled_name@@Base+0x2f8>
   352dc:	mov	x3, #0x0                   	// #0
   352e0:	mov	x2, x0
   352e4:	mov	w1, #0x30                  	// #48
   352e8:	mov	x0, x19
   352ec:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   352f0:	mov	x20, x0
   352f4:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   352f8:	cmp	w0, #0x56
   352fc:	b.eq	35364 <__asan_cplus_demangle_type@@Base+0x2518>  // b.none
   35300:	cmp	w0, #0x57
   35304:	b.ne	3532c <__asan_cplus_demangle_type@@Base+0x24e0>  // b.any
   35308:	mov	x0, x19
   3530c:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   35310:	mov	x3, #0x0                   	// #0
   35314:	mov	x2, x0
   35318:	mov	w1, #0x15                  	// #21
   3531c:	mov	x0, x19
   35320:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35324:	mov	x20, x0
   35328:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   3532c:	mov	x20, #0x0                   	// #0
   35330:	cmp	w0, #0x54
   35334:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   35338:	add	w2, w2, #0xa
   3533c:	str	w2, [x19, #72]
   35340:	mov	x0, x19
   35344:	bl	6750 <__asan_cplus_demangle_type@plt>
   35348:	mov	x3, #0x0                   	// #0
   3534c:	mov	x2, x0
   35350:	mov	w1, #0xa                   	// #10
   35354:	mov	x0, x19
   35358:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3535c:	mov	x20, x0
   35360:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35364:	add	w2, w2, #0xf
   35368:	str	w2, [x19, #72]
   3536c:	mov	x0, x19
   35370:	bl	6750 <__asan_cplus_demangle_type@plt>
   35374:	mov	x3, #0x0                   	// #0
   35378:	mov	x2, x0
   3537c:	mov	w1, #0x9                   	// #9
   35380:	mov	x0, x19
   35384:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35388:	mov	x20, x0
   3538c:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35390:	mov	x0, x19
   35394:	bl	6750 <__asan_cplus_demangle_type@plt>
   35398:	mov	x3, #0x0                   	// #0
   3539c:	mov	x2, x0
   353a0:	mov	w1, #0xc                   	// #12
   353a4:	mov	x0, x19
   353a8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   353ac:	mov	x20, x0
   353b0:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   353b4:	mov	x0, x19
   353b8:	bl	6750 <__asan_cplus_demangle_type@plt>
   353bc:	mov	x3, #0x0                   	// #0
   353c0:	mov	x2, x0
   353c4:	mov	w1, #0xd                   	// #13
   353c8:	mov	x0, x19
   353cc:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   353d0:	mov	x20, x0
   353d4:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   353d8:	mov	w1, #0x68                  	// #104
   353dc:	mov	x0, x19
   353e0:	bl	2c244 <__asan_backtrace_create_state@@Base+0x400>
   353e4:	mov	x20, #0x0                   	// #0
   353e8:	cbz	w0, 35760 <__asan_cplus_demangle_type@@Base+0x2914>
   353ec:	mov	w1, #0x0                   	// #0
   353f0:	mov	x0, x19
   353f4:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   353f8:	mov	x3, #0x0                   	// #0
   353fc:	mov	x2, x0
   35400:	mov	w1, #0xf                   	// #15
   35404:	mov	x0, x19
   35408:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3540c:	mov	x20, x0
   35410:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35414:	mov	w1, #0x0                   	// #0
   35418:	mov	x0, x19
   3541c:	bl	2c244 <__asan_backtrace_create_state@@Base+0x400>
   35420:	mov	x20, #0x0                   	// #0
   35424:	cbz	w0, 35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35428:	mov	w1, #0x0                   	// #0
   3542c:	mov	x0, x19
   35430:	bl	2c244 <__asan_backtrace_create_state@@Base+0x400>
   35434:	cbz	w0, 35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35438:	mov	w1, #0x0                   	// #0
   3543c:	mov	x0, x19
   35440:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   35444:	mov	x3, #0x0                   	// #0
   35448:	mov	x2, x0
   3544c:	mov	w1, #0x11                  	// #17
   35450:	mov	x0, x19
   35454:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35458:	mov	x20, x0
   3545c:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35460:	stp	x21, x22, [sp, #32]
   35464:	mov	x0, x19
   35468:	bl	6750 <__asan_cplus_demangle_type@plt>
   3546c:	mov	x21, x0
   35470:	mov	x0, x19
   35474:	bl	2c130 <__asan_backtrace_create_state@@Base+0x2ec>
   35478:	tbnz	w0, #31, 35818 <__asan_cplus_demangle_type@@Base+0x29cc>
   3547c:	ldr	x0, [x19, #24]
   35480:	ldrb	w1, [x0]
   35484:	mov	x20, #0x0                   	// #0
   35488:	cmp	w1, #0x5f
   3548c:	b.eq	35498 <__asan_cplus_demangle_type@@Base+0x264c>  // b.none
   35490:	ldp	x21, x22, [sp, #32]
   35494:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35498:	add	x0, x0, #0x1
   3549c:	str	x0, [x19, #24]
   354a0:	mov	x0, x19
   354a4:	bl	6750 <__asan_cplus_demangle_type@plt>
   354a8:	ldr	w1, [x19, #72]
   354ac:	add	w1, w1, #0x5
   354b0:	str	w1, [x19, #72]
   354b4:	mov	x3, x21
   354b8:	mov	x2, x0
   354bc:	mov	w1, #0xb                   	// #11
   354c0:	mov	x0, x19
   354c4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   354c8:	mov	x20, x0
   354cc:	ldp	x21, x22, [sp, #32]
   354d0:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   354d4:	mov	x0, x19
   354d8:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   354dc:	mov	x3, #0x0                   	// #0
   354e0:	mov	x2, x0
   354e4:	mov	w1, #0x14                  	// #20
   354e8:	mov	x0, x19
   354ec:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   354f0:	mov	x20, x0
   354f4:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   354f8:	cmp	w1, #0x41
   354fc:	b.eq	35560 <__asan_cplus_demangle_type@@Base+0x2714>  // b.none
   35500:	mov	x20, #0x0                   	// #0
   35504:	cmp	w1, #0x52
   35508:	b.ne	35760 <__asan_cplus_demangle_type@@Base+0x2914>  // b.any
   3550c:	mov	x0, x19
   35510:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   35514:	mov	x20, x0
   35518:	mov	x0, x19
   3551c:	bl	2c200 <__asan_backtrace_create_state@@Base+0x3bc>
   35520:	mov	x3, x0
   35524:	mov	x2, x20
   35528:	mov	w1, #0x16                  	// #22
   3552c:	mov	x0, x19
   35530:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35534:	mov	x20, x0
   35538:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   3553c:	mov	x0, x19
   35540:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   35544:	mov	x3, #0x0                   	// #0
   35548:	mov	x2, x0
   3554c:	mov	w1, #0x13                  	// #19
   35550:	mov	x0, x19
   35554:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35558:	mov	x20, x0
   3555c:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35560:	mov	w1, #0x0                   	// #0
   35564:	mov	x0, x19
   35568:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   3556c:	mov	x3, #0x0                   	// #0
   35570:	mov	x2, x0
   35574:	mov	w1, #0x17                  	// #23
   35578:	mov	x0, x19
   3557c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35580:	mov	x20, x0
   35584:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35588:	ldrb	w1, [x0, #2]
   3558c:	cbz	w1, 355a4 <__asan_cplus_demangle_type@@Base+0x2758>
   35590:	add	x1, x0, #0x3
   35594:	str	x1, [x19, #24]
   35598:	ldrb	w0, [x0, #2]
   3559c:	cmp	w0, #0x6e
   355a0:	b.eq	355cc <__asan_cplus_demangle_type@@Base+0x2780>  // b.none
   355a4:	mov	w1, #0x0                   	// #0
   355a8:	mov	x0, x19
   355ac:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   355b0:	mov	x3, #0x0                   	// #0
   355b4:	mov	x2, x0
   355b8:	mov	w1, #0x49                  	// #73
   355bc:	mov	x0, x19
   355c0:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   355c4:	mov	x20, x0
   355c8:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   355cc:	mov	w1, #0x0                   	// #0
   355d0:	mov	x0, x19
   355d4:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   355d8:	mov	x3, #0x0                   	// #0
   355dc:	mov	x2, x0
   355e0:	mov	w1, #0x4a                  	// #74
   355e4:	mov	x0, x19
   355e8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   355ec:	mov	x20, x0
   355f0:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   355f4:	mov	x0, #0x1                   	// #1
   355f8:	mov	w23, #0x0                   	// #0
   355fc:	cmp	w22, #0x0
   35600:	b.le	35624 <__asan_cplus_demangle_type@@Base+0x27d8>
   35604:	mov	w23, w0
   35608:	cmp	w22, w0
   3560c:	b.le	35624 <__asan_cplus_demangle_type@@Base+0x27d8>
   35610:	ldrb	w1, [x21, x0]
   35614:	add	x0, x0, #0x1
   35618:	cmp	w1, #0x24
   3561c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   35620:	b.ne	35604 <__asan_cplus_demangle_type@@Base+0x27b8>  // b.any
   35624:	mov	w2, w23
   35628:	mov	x1, x21
   3562c:	mov	x0, x19
   35630:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   35634:	mov	x20, x0
   35638:	ldr	x21, [x19, #24]
   3563c:	add	x21, x21, w23, sxtw
   35640:	str	x21, [x19, #24]
   35644:	sub	w22, w22, w23
   35648:	cbz	x0, 358a0 <__asan_cplus_demangle_type@@Base+0x2a54>
   3564c:	cbz	x24, 356f0 <__asan_cplus_demangle_type@@Base+0x28a4>
   35650:	mov	x3, x20
   35654:	mov	x2, x24
   35658:	mov	w1, w25
   3565c:	mov	x0, x19
   35660:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35664:	mov	x24, x0
   35668:	cbz	x0, 35854 <__asan_cplus_demangle_type@@Base+0x2a08>
   3566c:	cmp	w22, #0x0
   35670:	b.le	356f8 <__asan_cplus_demangle_type@@Base+0x28ac>
   35674:	ldrb	w0, [x21]
   35678:	cbz	w0, 3583c <__asan_cplus_demangle_type@@Base+0x29f0>
   3567c:	cmp	w0, #0x24
   35680:	b.ne	355f4 <__asan_cplus_demangle_type@@Base+0x27a8>  // b.any
   35684:	ldrb	w21, [x21, #1]
   35688:	cmp	w21, #0x53
   3568c:	b.eq	356b8 <__asan_cplus_demangle_type@@Base+0x286c>  // b.none
   35690:	cmp	w21, #0x5f
   35694:	b.eq	356c0 <__asan_cplus_demangle_type@@Base+0x2874>  // b.none
   35698:	cmp	w21, #0x24
   3569c:	b.eq	356c4 <__asan_cplus_demangle_type@@Base+0x2878>  // b.none
   356a0:	mov	x20, #0x0                   	// #0
   356a4:	ldp	x21, x22, [sp, #32]
   356a8:	ldp	x23, x24, [sp, #48]
   356ac:	ldp	x25, x26, [sp, #64]
   356b0:	ldp	x27, x28, [sp, #80]
   356b4:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   356b8:	mov	w21, w28
   356bc:	b	356c4 <__asan_cplus_demangle_type@@Base+0x2878>
   356c0:	mov	w21, w27
   356c4:	mov	x0, x19
   356c8:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   356cc:	mov	x20, x0
   356d0:	cbz	x0, 35878 <__asan_cplus_demangle_type@@Base+0x2a2c>
   356d4:	str	w26, [x0]
   356d8:	str	w21, [x0, #8]
   356dc:	ldr	x21, [x19, #24]
   356e0:	add	x21, x21, #0x2
   356e4:	str	x21, [x19, #24]
   356e8:	sub	w22, w22, #0x2
   356ec:	b	3564c <__asan_cplus_demangle_type@@Base+0x2800>
   356f0:	mov	x24, x20
   356f4:	b	3566c <__asan_cplus_demangle_type@@Base+0x2820>
   356f8:	mov	x3, #0x0                   	// #0
   356fc:	mov	x2, x24
   35700:	mov	w1, #0x3f                  	// #63
   35704:	mov	x0, x19
   35708:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3570c:	mov	x20, x0
   35710:	ldp	x21, x22, [sp, #32]
   35714:	ldp	x23, x24, [sp, #48]
   35718:	ldp	x25, x26, [sp, #64]
   3571c:	ldp	x27, x28, [sp, #80]
   35720:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35724:	stp	x21, x22, [sp, #32]
   35728:	mov	w21, w1
   3572c:	mov	x0, x19
   35730:	bl	34b94 <__asan_cplus_demangle_type@@Base+0x1d48>
   35734:	mov	x20, x0
   35738:	cbz	x0, 358b4 <__asan_cplus_demangle_type@@Base+0x2a68>
   3573c:	cbz	w21, 35748 <__asan_cplus_demangle_type@@Base+0x28fc>
   35740:	ldr	w0, [x19, #16]
   35744:	tbz	w0, #0, 35770 <__asan_cplus_demangle_type@@Base+0x2924>
   35748:	ldr	x0, [x19, #24]
   3574c:	ldrb	w0, [x0]
   35750:	cmp	w0, #0x45
   35754:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   35758:	b.ne	357bc <__asan_cplus_demangle_type@@Base+0x2970>  // b.any
   3575c:	ldp	x21, x22, [sp, #32]
   35760:	mov	x0, x20
   35764:	ldp	x19, x20, [sp, #16]
   35768:	ldp	x29, x30, [sp], #96
   3576c:	ret
   35770:	ldr	w19, [x20]
   35774:	mov	w0, w19
   35778:	bl	2bed8 <__asan_backtrace_create_state@@Base+0x94>
   3577c:	cbz	w0, 35788 <__asan_cplus_demangle_type@@Base+0x293c>
   35780:	ldr	x20, [x20, #8]
   35784:	b	35770 <__asan_cplus_demangle_type@@Base+0x2924>
   35788:	cmp	w19, #0x2
   3578c:	b.eq	35798 <__asan_cplus_demangle_type@@Base+0x294c>  // b.none
   35790:	ldp	x21, x22, [sp, #32]
   35794:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35798:	ldr	x19, [x20, #16]
   3579c:	ldr	w0, [x19]
   357a0:	bl	2bed8 <__asan_backtrace_create_state@@Base+0x94>
   357a4:	cbz	w0, 357b4 <__asan_cplus_demangle_type@@Base+0x2968>
   357a8:	ldr	x0, [x19, #8]
   357ac:	str	x0, [x20, #16]
   357b0:	b	35798 <__asan_cplus_demangle_type@@Base+0x294c>
   357b4:	ldp	x21, x22, [sp, #32]
   357b8:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   357bc:	mov	x0, x20
   357c0:	bl	2c098 <__asan_backtrace_create_state@@Base+0x254>
   357c4:	mov	w1, w0
   357c8:	mov	x0, x19
   357cc:	bl	33f80 <__asan_cplus_demangle_type@@Base+0x1134>
   357d0:	mov	x3, x0
   357d4:	cbz	x0, 3586c <__asan_cplus_demangle_type@@Base+0x2a20>
   357d8:	cbnz	w21, 357e8 <__asan_cplus_demangle_type@@Base+0x299c>
   357dc:	ldr	w0, [x20]
   357e0:	cmp	w0, #0x2
   357e4:	b.eq	35804 <__asan_cplus_demangle_type@@Base+0x29b8>  // b.none
   357e8:	mov	x2, x20
   357ec:	mov	w1, #0x3                   	// #3
   357f0:	mov	x0, x19
   357f4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   357f8:	mov	x20, x0
   357fc:	ldp	x21, x22, [sp, #32]
   35800:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35804:	ldr	w0, [x3]
   35808:	cmp	w0, #0x29
   3580c:	b.ne	357e8 <__asan_cplus_demangle_type@@Base+0x299c>  // b.any
   35810:	str	xzr, [x3, #8]
   35814:	b	357e8 <__asan_cplus_demangle_type@@Base+0x299c>
   35818:	mov	x20, #0x0                   	// #0
   3581c:	ldp	x21, x22, [sp, #32]
   35820:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35824:	mov	x20, #0x0                   	// #0
   35828:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   3582c:	mov	x20, #0x0                   	// #0
   35830:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35834:	mov	x20, #0x0                   	// #0
   35838:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   3583c:	mov	x20, #0x0                   	// #0
   35840:	ldp	x21, x22, [sp, #32]
   35844:	ldp	x23, x24, [sp, #48]
   35848:	ldp	x25, x26, [sp, #64]
   3584c:	ldp	x27, x28, [sp, #80]
   35850:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35854:	mov	x20, x0
   35858:	ldp	x21, x22, [sp, #32]
   3585c:	ldp	x23, x24, [sp, #48]
   35860:	ldp	x25, x26, [sp, #64]
   35864:	ldp	x27, x28, [sp, #80]
   35868:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   3586c:	mov	x20, x0
   35870:	ldp	x21, x22, [sp, #32]
   35874:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35878:	ldr	x0, [x19, #24]
   3587c:	add	x0, x0, #0x2
   35880:	str	x0, [x19, #24]
   35884:	ldp	x21, x22, [sp, #32]
   35888:	ldp	x23, x24, [sp, #48]
   3588c:	ldp	x25, x26, [sp, #64]
   35890:	ldp	x27, x28, [sp, #80]
   35894:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   35898:	ldp	x21, x22, [sp, #32]
   3589c:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   358a0:	ldp	x21, x22, [sp, #32]
   358a4:	ldp	x23, x24, [sp, #48]
   358a8:	ldp	x25, x26, [sp, #64]
   358ac:	ldp	x27, x28, [sp, #80]
   358b0:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>
   358b4:	ldp	x21, x22, [sp, #32]
   358b8:	b	35760 <__asan_cplus_demangle_type@@Base+0x2914>

00000000000358bc <__asan_cplus_demangle_mangled_name@@Base>:
   358bc:	stp	x29, x30, [sp, #-48]!
   358c0:	mov	x29, sp
   358c4:	stp	x19, x20, [sp, #16]
   358c8:	str	x21, [sp, #32]
   358cc:	mov	x19, x0
   358d0:	mov	w21, w1
   358d4:	ldr	x0, [x0, #24]
   358d8:	ldrb	w1, [x0]
   358dc:	cmp	w1, #0x5f
   358e0:	b.eq	35938 <__asan_cplus_demangle_mangled_name@@Base+0x7c>  // b.none
   358e4:	cbnz	w21, 35a4c <__asan_cplus_demangle_mangled_name@@Base+0x190>
   358e8:	ldr	x0, [x19, #24]
   358ec:	ldrb	w1, [x0]
   358f0:	mov	x20, #0x0                   	// #0
   358f4:	cmp	w1, #0x5a
   358f8:	b.ne	35a50 <__asan_cplus_demangle_mangled_name@@Base+0x194>  // b.any
   358fc:	add	x0, x0, #0x1
   35900:	str	x0, [x19, #24]
   35904:	mov	w1, w21
   35908:	mov	x0, x19
   3590c:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   35910:	mov	x20, x0
   35914:	cbz	w21, 35a50 <__asan_cplus_demangle_mangled_name@@Base+0x194>
   35918:	ldr	w0, [x19, #16]
   3591c:	tbz	w0, #0, 35a50 <__asan_cplus_demangle_mangled_name@@Base+0x194>
   35920:	ldr	x1, [x19, #24]
   35924:	ldrb	w0, [x1]
   35928:	mov	w21, #0x4e                  	// #78
   3592c:	cmp	w0, #0x2e
   35930:	b.eq	35a0c <__asan_cplus_demangle_mangled_name@@Base+0x150>  // b.none
   35934:	b	35a50 <__asan_cplus_demangle_mangled_name@@Base+0x194>
   35938:	add	x0, x0, #0x1
   3593c:	str	x0, [x19, #24]
   35940:	b	358e8 <__asan_cplus_demangle_mangled_name@@Base+0x2c>
   35944:	add	x3, x1, #0x2
   35948:	ldrb	w2, [x1, #2]
   3594c:	sub	w0, w2, #0x61
   35950:	and	w0, w0, #0xff
   35954:	cmp	w2, #0x5f
   35958:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   3595c:	b.hi	35a38 <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.pmore
   35960:	ldrb	w2, [x3, #1]!
   35964:	sub	w0, w2, #0x61
   35968:	and	w0, w0, #0xff
   3596c:	cmp	w2, #0x5f
   35970:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   35974:	b.ls	35960 <__asan_cplus_demangle_mangled_name@@Base+0xa4>  // b.plast
   35978:	b	35a38 <__asan_cplus_demangle_mangled_name@@Base+0x17c>
   3597c:	ldrb	w0, [x2, #1]!
   35980:	sub	w0, w0, #0x30
   35984:	and	w0, w0, #0xff
   35988:	cmp	w0, #0x9
   3598c:	b.ls	3597c <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.plast
   35990:	ldrb	w0, [x2]
   35994:	cmp	w0, #0x2e
   35998:	b.ne	359d4 <__asan_cplus_demangle_mangled_name@@Base+0x118>  // b.any
   3599c:	mov	x3, x2
   359a0:	ldrb	w0, [x3, #1]
   359a4:	sub	w0, w0, #0x30
   359a8:	and	w0, w0, #0xff
   359ac:	cmp	w0, #0x9
   359b0:	b.hi	359d0 <__asan_cplus_demangle_mangled_name@@Base+0x114>  // b.pmore
   359b4:	add	x2, x3, #0x2
   359b8:	ldrb	w0, [x3, #2]
   359bc:	sub	w0, w0, #0x30
   359c0:	and	w0, w0, #0xff
   359c4:	cmp	w0, #0x9
   359c8:	b.ls	3597c <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.plast
   359cc:	b	35990 <__asan_cplus_demangle_mangled_name@@Base+0xd4>
   359d0:	mov	x2, x3
   359d4:	str	x2, [x19, #24]
   359d8:	sub	w2, w2, w1
   359dc:	mov	x0, x19
   359e0:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   359e4:	mov	x3, x0
   359e8:	mov	x2, x20
   359ec:	mov	w1, w21
   359f0:	mov	x0, x19
   359f4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   359f8:	mov	x20, x0
   359fc:	ldr	x1, [x19, #24]
   35a00:	ldrb	w0, [x1]
   35a04:	cmp	w0, #0x2e
   35a08:	b.ne	35a50 <__asan_cplus_demangle_mangled_name@@Base+0x194>  // b.any
   35a0c:	ldrb	w0, [x1, #1]
   35a10:	sub	w2, w0, #0x61
   35a14:	and	w2, w2, #0xff
   35a18:	cmp	w0, #0x5f
   35a1c:	ccmp	w2, #0x19, #0x0, ne  // ne = any
   35a20:	b.ls	35944 <__asan_cplus_demangle_mangled_name@@Base+0x88>  // b.plast
   35a24:	sub	w0, w0, #0x30
   35a28:	and	w0, w0, #0xff
   35a2c:	cmp	w0, #0x9
   35a30:	b.hi	35a50 <__asan_cplus_demangle_mangled_name@@Base+0x194>  // b.pmore
   35a34:	mov	x3, x1
   35a38:	ldrb	w0, [x3]
   35a3c:	mov	x2, x3
   35a40:	cmp	w0, #0x2e
   35a44:	b.eq	359a0 <__asan_cplus_demangle_mangled_name@@Base+0xe4>  // b.none
   35a48:	b	359d4 <__asan_cplus_demangle_mangled_name@@Base+0x118>
   35a4c:	mov	x20, #0x0                   	// #0
   35a50:	mov	x0, x20
   35a54:	ldp	x19, x20, [sp, #16]
   35a58:	ldr	x21, [sp, #32]
   35a5c:	ldp	x29, x30, [sp], #48
   35a60:	ret
   35a64:	stp	x29, x30, [sp, #-48]!
   35a68:	mov	x29, sp
   35a6c:	stp	x19, x20, [sp, #16]
   35a70:	mov	x19, x0
   35a74:	ldr	x0, [x0, #24]
   35a78:	ldrb	w1, [x0]
   35a7c:	mov	x20, #0x0                   	// #0
   35a80:	cmp	w1, #0x4c
   35a84:	b.ne	35acc <__asan_cplus_demangle_mangled_name@@Base+0x210>  // b.any
   35a88:	add	x1, x0, #0x1
   35a8c:	str	x1, [x19, #24]
   35a90:	ldrb	w0, [x0, #1]
   35a94:	cmp	w0, #0x5f
   35a98:	mov	w1, #0x5a                  	// #90
   35a9c:	ccmp	w0, w1, #0x4, ne  // ne = any
   35aa0:	b.ne	35adc <__asan_cplus_demangle_mangled_name@@Base+0x220>  // b.any
   35aa4:	mov	w1, #0x0                   	// #0
   35aa8:	mov	x0, x19
   35aac:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   35ab0:	mov	x20, x0
   35ab4:	ldr	x0, [x19, #24]
   35ab8:	ldrb	w1, [x0]
   35abc:	cmp	w1, #0x45
   35ac0:	b.ne	35bac <__asan_cplus_demangle_mangled_name@@Base+0x2f0>  // b.any
   35ac4:	add	x0, x0, #0x1
   35ac8:	str	x0, [x19, #24]
   35acc:	mov	x0, x20
   35ad0:	ldp	x19, x20, [sp, #16]
   35ad4:	ldp	x29, x30, [sp], #48
   35ad8:	ret
   35adc:	mov	x0, x19
   35ae0:	bl	6750 <__asan_cplus_demangle_type@plt>
   35ae4:	mov	x20, x0
   35ae8:	cbz	x0, 35acc <__asan_cplus_demangle_mangled_name@@Base+0x210>
   35aec:	str	x21, [sp, #32]
   35af0:	ldr	w0, [x0]
   35af4:	cmp	w0, #0x27
   35af8:	b.eq	35b68 <__asan_cplus_demangle_mangled_name@@Base+0x2ac>  // b.none
   35afc:	ldr	x0, [x19, #24]
   35b00:	ldrb	w1, [x0]
   35b04:	mov	w21, #0x3d                  	// #61
   35b08:	cmp	w1, #0x6e
   35b0c:	b.eq	35b88 <__asan_cplus_demangle_mangled_name@@Base+0x2cc>  // b.none
   35b10:	ldr	x1, [x19, #24]
   35b14:	ldrb	w4, [x1]
   35b18:	cmp	w4, #0x45
   35b1c:	b.eq	35b98 <__asan_cplus_demangle_mangled_name@@Base+0x2dc>  // b.none
   35b20:	add	x3, x1, #0x1
   35b24:	cbz	w4, 35ba0 <__asan_cplus_demangle_mangled_name@@Base+0x2e4>
   35b28:	mov	x2, x3
   35b2c:	str	x3, [x19, #24]
   35b30:	ldrb	w4, [x3], #1
   35b34:	cmp	w4, #0x45
   35b38:	b.ne	35b24 <__asan_cplus_demangle_mangled_name@@Base+0x268>  // b.any
   35b3c:	sub	w2, w2, w1
   35b40:	mov	x0, x19
   35b44:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   35b48:	mov	x3, x0
   35b4c:	mov	x2, x20
   35b50:	mov	w1, w21
   35b54:	mov	x0, x19
   35b58:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35b5c:	mov	x20, x0
   35b60:	ldr	x21, [sp, #32]
   35b64:	b	35ab4 <__asan_cplus_demangle_mangled_name@@Base+0x1f8>
   35b68:	ldr	x0, [x20, #8]
   35b6c:	ldr	w1, [x0, #28]
   35b70:	cbz	w1, 35afc <__asan_cplus_demangle_mangled_name@@Base+0x240>
   35b74:	ldr	w1, [x19, #72]
   35b78:	ldr	w0, [x0, #8]
   35b7c:	sub	w0, w1, w0
   35b80:	str	w0, [x19, #72]
   35b84:	b	35afc <__asan_cplus_demangle_mangled_name@@Base+0x240>
   35b88:	add	x0, x0, #0x1
   35b8c:	str	x0, [x19, #24]
   35b90:	mov	w21, #0x3e                  	// #62
   35b94:	b	35b10 <__asan_cplus_demangle_mangled_name@@Base+0x254>
   35b98:	mov	x2, x1
   35b9c:	b	35b3c <__asan_cplus_demangle_mangled_name@@Base+0x280>
   35ba0:	mov	x20, #0x0                   	// #0
   35ba4:	ldr	x21, [sp, #32]
   35ba8:	b	35acc <__asan_cplus_demangle_mangled_name@@Base+0x210>
   35bac:	mov	x20, #0x0                   	// #0
   35bb0:	b	35acc <__asan_cplus_demangle_mangled_name@@Base+0x210>
   35bb4:	stp	x29, x30, [sp, #-32]!
   35bb8:	mov	x29, sp
   35bbc:	str	x19, [sp, #16]
   35bc0:	mov	x19, x0
   35bc4:	ldr	x0, [x0, #24]
   35bc8:	ldrb	w1, [x0]
   35bcc:	cmp	w1, #0x4c
   35bd0:	b.eq	35c28 <__asan_cplus_demangle_mangled_name@@Base+0x36c>  // b.none
   35bd4:	b.hi	35bf4 <__asan_cplus_demangle_mangled_name@@Base+0x338>  // b.pmore
   35bd8:	sub	w1, w1, #0x49
   35bdc:	and	w1, w1, #0xff
   35be0:	cmp	w1, #0x1
   35be4:	b.hi	35c3c <__asan_cplus_demangle_mangled_name@@Base+0x380>  // b.pmore
   35be8:	mov	x0, x19
   35bec:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   35bf0:	b	35c30 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   35bf4:	cmp	w1, #0x58
   35bf8:	b.ne	35c3c <__asan_cplus_demangle_mangled_name@@Base+0x380>  // b.any
   35bfc:	add	x0, x0, #0x1
   35c00:	str	x0, [x19, #24]
   35c04:	mov	x0, x19
   35c08:	bl	340c8 <__asan_cplus_demangle_type@@Base+0x127c>
   35c0c:	ldr	x1, [x19, #24]
   35c10:	ldrb	w2, [x1]
   35c14:	cmp	w2, #0x45
   35c18:	b.ne	35c48 <__asan_cplus_demangle_mangled_name@@Base+0x38c>  // b.any
   35c1c:	add	x1, x1, #0x1
   35c20:	str	x1, [x19, #24]
   35c24:	b	35c30 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   35c28:	mov	x0, x19
   35c2c:	bl	35a64 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   35c30:	ldr	x19, [sp, #16]
   35c34:	ldp	x29, x30, [sp], #32
   35c38:	ret
   35c3c:	mov	x0, x19
   35c40:	bl	6750 <__asan_cplus_demangle_type@plt>
   35c44:	b	35c30 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   35c48:	mov	x0, #0x0                   	// #0
   35c4c:	b	35c30 <__asan_cplus_demangle_mangled_name@@Base+0x374>
   35c50:	stp	x29, x30, [sp, #-64]!
   35c54:	mov	x29, sp
   35c58:	stp	x19, x20, [sp, #16]
   35c5c:	stp	x21, x22, [sp, #32]
   35c60:	mov	x19, x0
   35c64:	ldr	x22, [x0, #64]
   35c68:	ldr	x0, [x0, #24]
   35c6c:	ldrb	w1, [x0]
   35c70:	cmp	w1, #0x45
   35c74:	b.eq	35ce0 <__asan_cplus_demangle_mangled_name@@Base+0x424>  // b.none
   35c78:	str	xzr, [sp, #56]
   35c7c:	add	x20, sp, #0x38
   35c80:	mov	w21, #0x2f                  	// #47
   35c84:	mov	x0, x19
   35c88:	bl	35bb4 <__asan_cplus_demangle_mangled_name@@Base+0x2f8>
   35c8c:	cbz	x0, 35cd0 <__asan_cplus_demangle_mangled_name@@Base+0x414>
   35c90:	mov	x3, #0x0                   	// #0
   35c94:	mov	x2, x0
   35c98:	mov	w1, w21
   35c9c:	mov	x0, x19
   35ca0:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35ca4:	str	x0, [x20]
   35ca8:	cbz	x0, 35cd0 <__asan_cplus_demangle_mangled_name@@Base+0x414>
   35cac:	add	x20, x0, #0x10
   35cb0:	ldr	x0, [x19, #24]
   35cb4:	ldrb	w1, [x0]
   35cb8:	cmp	w1, #0x45
   35cbc:	b.ne	35c84 <__asan_cplus_demangle_mangled_name@@Base+0x3c8>  // b.any
   35cc0:	add	x0, x0, #0x1
   35cc4:	str	x0, [x19, #24]
   35cc8:	str	x22, [x19, #64]
   35ccc:	ldr	x0, [sp, #56]
   35cd0:	ldp	x19, x20, [sp, #16]
   35cd4:	ldp	x21, x22, [sp, #32]
   35cd8:	ldp	x29, x30, [sp], #64
   35cdc:	ret
   35ce0:	add	x0, x0, #0x1
   35ce4:	str	x0, [x19, #24]
   35ce8:	mov	x3, #0x0                   	// #0
   35cec:	mov	x2, #0x0                   	// #0
   35cf0:	mov	w1, #0x2f                  	// #47
   35cf4:	mov	x0, x19
   35cf8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35cfc:	b	35cd0 <__asan_cplus_demangle_mangled_name@@Base+0x414>
   35d00:	ldr	x2, [x0, #24]
   35d04:	ldrb	w1, [x2]
   35d08:	sub	w1, w1, #0x49
   35d0c:	and	w1, w1, #0xff
   35d10:	cmp	w1, #0x1
   35d14:	b.hi	35d34 <__asan_cplus_demangle_mangled_name@@Base+0x478>  // b.pmore
   35d18:	stp	x29, x30, [sp, #-16]!
   35d1c:	mov	x29, sp
   35d20:	add	x2, x2, #0x1
   35d24:	str	x2, [x0, #24]
   35d28:	bl	35c50 <__asan_cplus_demangle_mangled_name@@Base+0x394>
   35d2c:	ldp	x29, x30, [sp], #16
   35d30:	ret
   35d34:	mov	x0, #0x0                   	// #0
   35d38:	ret
   35d3c:	stp	x29, x30, [sp, #-48]!
   35d40:	mov	x29, sp
   35d44:	stp	x19, x20, [sp, #16]
   35d48:	mov	x19, x0
   35d4c:	ldr	x0, [x0, #24]
   35d50:	ldrb	w1, [x0]
   35d54:	cmp	w1, #0x4c
   35d58:	b.eq	35db4 <__asan_cplus_demangle_mangled_name@@Base+0x4f8>  // b.none
   35d5c:	cmp	w1, #0x54
   35d60:	b.eq	35dc4 <__asan_cplus_demangle_mangled_name@@Base+0x508>  // b.none
   35d64:	cmp	w1, #0x73
   35d68:	b.eq	35dd4 <__asan_cplus_demangle_mangled_name@@Base+0x518>  // b.none
   35d6c:	cmp	w1, #0x66
   35d70:	b.eq	35f14 <__asan_cplus_demangle_mangled_name@@Base+0x658>  // b.none
   35d74:	sub	w2, w1, #0x30
   35d78:	and	w2, w2, #0xff
   35d7c:	cmp	w2, #0x9
   35d80:	b.hi	35fd8 <__asan_cplus_demangle_mangled_name@@Base+0x71c>  // b.pmore
   35d84:	mov	x0, x19
   35d88:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   35d8c:	mov	x20, x0
   35d90:	cbz	x0, 35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35d94:	ldr	x0, [x19, #24]
   35d98:	ldrb	w0, [x0]
   35d9c:	cmp	w0, #0x49
   35da0:	b.eq	35ff8 <__asan_cplus_demangle_mangled_name@@Base+0x73c>  // b.none
   35da4:	mov	x0, x20
   35da8:	ldp	x19, x20, [sp, #16]
   35dac:	ldp	x29, x30, [sp], #48
   35db0:	ret
   35db4:	mov	x0, x19
   35db8:	bl	35a64 <__asan_cplus_demangle_mangled_name@@Base+0x1a8>
   35dbc:	mov	x20, x0
   35dc0:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35dc4:	mov	x0, x19
   35dc8:	bl	2c430 <__asan_backtrace_create_state@@Base+0x5ec>
   35dcc:	mov	x20, x0
   35dd0:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35dd4:	ldrb	w2, [x0, #1]
   35dd8:	cmp	w2, #0x72
   35ddc:	b.eq	35e58 <__asan_cplus_demangle_mangled_name@@Base+0x59c>  // b.none
   35de0:	cmp	w2, #0x70
   35de4:	b.eq	35ee8 <__asan_cplus_demangle_mangled_name@@Base+0x62c>  // b.none
   35de8:	cmp	w1, #0x69
   35dec:	mov	w2, #0x74                  	// #116
   35df0:	ccmp	w1, w2, #0x4, ne  // ne = any
   35df4:	b.ne	35f20 <__asan_cplus_demangle_mangled_name@@Base+0x664>  // b.any
   35df8:	ldrb	w2, [x0, #1]
   35dfc:	cmp	w2, #0x6c
   35e00:	b.ne	35f20 <__asan_cplus_demangle_mangled_name@@Base+0x664>  // b.any
   35e04:	stp	x21, x22, [sp, #32]
   35e08:	add	x0, x0, #0x2
   35e0c:	str	x0, [x19, #24]
   35e10:	mov	x21, #0x0                   	// #0
   35e14:	cmp	w1, #0x74
   35e18:	b.eq	3601c <__asan_cplus_demangle_mangled_name@@Base+0x760>  // b.none
   35e1c:	ldr	x0, [x19, #24]
   35e20:	ldrb	w0, [x0, #1]
   35e24:	mov	x20, #0x0                   	// #0
   35e28:	cbz	w0, 364f0 <__asan_cplus_demangle_mangled_name@@Base+0xc34>
   35e2c:	mov	w1, #0x45                  	// #69
   35e30:	mov	x0, x19
   35e34:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   35e38:	mov	x3, x0
   35e3c:	mov	x2, x21
   35e40:	mov	w1, #0x31                  	// #49
   35e44:	mov	x0, x19
   35e48:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35e4c:	mov	x20, x0
   35e50:	ldp	x21, x22, [sp, #32]
   35e54:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35e58:	stp	x21, x22, [sp, #32]
   35e5c:	add	x0, x0, #0x2
   35e60:	str	x0, [x19, #24]
   35e64:	mov	x0, x19
   35e68:	bl	6750 <__asan_cplus_demangle_type@plt>
   35e6c:	mov	x20, x0
   35e70:	mov	x0, x19
   35e74:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   35e78:	mov	x21, x0
   35e7c:	ldr	x0, [x19, #24]
   35e80:	ldrb	w0, [x0]
   35e84:	cmp	w0, #0x49
   35e88:	b.eq	35eac <__asan_cplus_demangle_mangled_name@@Base+0x5f0>  // b.none
   35e8c:	mov	x3, x21
   35e90:	mov	x2, x20
   35e94:	mov	w1, #0x1                   	// #1
   35e98:	mov	x0, x19
   35e9c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35ea0:	mov	x20, x0
   35ea4:	ldp	x21, x22, [sp, #32]
   35ea8:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35eac:	mov	x0, x19
   35eb0:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   35eb4:	mov	x3, x0
   35eb8:	mov	x2, x21
   35ebc:	mov	w1, #0x4                   	// #4
   35ec0:	mov	x0, x19
   35ec4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35ec8:	mov	x3, x0
   35ecc:	mov	x2, x20
   35ed0:	mov	w1, #0x1                   	// #1
   35ed4:	mov	x0, x19
   35ed8:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35edc:	mov	x20, x0
   35ee0:	ldp	x21, x22, [sp, #32]
   35ee4:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35ee8:	add	x0, x0, #0x2
   35eec:	str	x0, [x19, #24]
   35ef0:	mov	x0, x19
   35ef4:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   35ef8:	mov	x3, #0x0                   	// #0
   35efc:	mov	x2, x0
   35f00:	mov	w1, #0x4b                  	// #75
   35f04:	mov	x0, x19
   35f08:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   35f0c:	mov	x20, x0
   35f10:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35f14:	ldrb	w1, [x0, #1]
   35f18:	cmp	w1, #0x70
   35f1c:	b.eq	35f6c <__asan_cplus_demangle_mangled_name@@Base+0x6b0>  // b.none
   35f20:	mov	x0, x19
   35f24:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   35f28:	mov	x20, x0
   35f2c:	cbz	x0, 35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35f30:	stp	x21, x22, [sp, #32]
   35f34:	ldr	w0, [x0]
   35f38:	mov	x21, #0x0                   	// #0
   35f3c:	cmp	w0, #0x32
   35f40:	b.eq	3602c <__asan_cplus_demangle_mangled_name@@Base+0x770>  // b.none
   35f44:	ldr	w0, [x20]
   35f48:	cmp	w0, #0x33
   35f4c:	b.eq	36118 <__asan_cplus_demangle_mangled_name@@Base+0x85c>  // b.none
   35f50:	cmp	w0, #0x34
   35f54:	b.eq	360a4 <__asan_cplus_demangle_mangled_name@@Base+0x7e8>  // b.none
   35f58:	cmp	w0, #0x32
   35f5c:	b.eq	36084 <__asan_cplus_demangle_mangled_name@@Base+0x7c8>  // b.none
   35f60:	mov	x20, #0x0                   	// #0
   35f64:	ldp	x21, x22, [sp, #32]
   35f68:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35f6c:	stp	x21, x22, [sp, #32]
   35f70:	add	x1, x0, #0x2
   35f74:	str	x1, [x19, #24]
   35f78:	ldrb	w1, [x0, #2]
   35f7c:	cmp	w1, #0x54
   35f80:	b.eq	35fc8 <__asan_cplus_demangle_mangled_name@@Base+0x70c>  // b.none
   35f84:	mov	x0, x19
   35f88:	bl	2c3b4 <__asan_backtrace_create_state@@Base+0x570>
   35f8c:	mvn	x1, x0
   35f90:	mov	x20, #0x0                   	// #0
   35f94:	tst	x1, #0x7fffffff
   35f98:	b.eq	364e0 <__asan_cplus_demangle_mangled_name@@Base+0xc24>  // b.none
   35f9c:	add	w21, w0, #0x1
   35fa0:	mov	x0, x19
   35fa4:	bl	2bf08 <__asan_backtrace_create_state@@Base+0xc4>
   35fa8:	mov	x20, x0
   35fac:	cbz	x0, 364e8 <__asan_cplus_demangle_mangled_name@@Base+0xc2c>
   35fb0:	mov	w0, #0x6                   	// #6
   35fb4:	str	w0, [x20]
   35fb8:	sxtw	x0, w21
   35fbc:	str	x0, [x20, #8]
   35fc0:	ldp	x21, x22, [sp, #32]
   35fc4:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   35fc8:	add	x0, x0, #0x3
   35fcc:	str	x0, [x19, #24]
   35fd0:	mov	w21, #0x0                   	// #0
   35fd4:	b	35fa0 <__asan_cplus_demangle_mangled_name@@Base+0x6e4>
   35fd8:	cmp	w1, #0x6f
   35fdc:	b.ne	35de8 <__asan_cplus_demangle_mangled_name@@Base+0x52c>  // b.any
   35fe0:	ldrb	w1, [x0, #1]
   35fe4:	cmp	w1, #0x6e
   35fe8:	b.ne	35f20 <__asan_cplus_demangle_mangled_name@@Base+0x664>  // b.any
   35fec:	add	x0, x0, #0x2
   35ff0:	str	x0, [x19, #24]
   35ff4:	b	35d84 <__asan_cplus_demangle_mangled_name@@Base+0x4c8>
   35ff8:	mov	x0, x19
   35ffc:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   36000:	mov	x3, x0
   36004:	mov	x2, x20
   36008:	mov	w1, #0x4                   	// #4
   3600c:	mov	x0, x19
   36010:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   36014:	mov	x20, x0
   36018:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   3601c:	mov	x0, x19
   36020:	bl	6750 <__asan_cplus_demangle_type@plt>
   36024:	mov	x21, x0
   36028:	b	35e1c <__asan_cplus_demangle_mangled_name@@Base+0x560>
   3602c:	ldr	x0, [x20, #8]
   36030:	ldr	x21, [x0]
   36034:	ldr	w0, [x0, #16]
   36038:	sub	w1, w0, #0x2
   3603c:	ldr	w0, [x19, #72]
   36040:	add	w0, w0, w1
   36044:	str	w0, [x19, #72]
   36048:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   3604c:	add	x1, x1, #0x398
   36050:	mov	x0, x21
   36054:	bl	6b30 <__asan_internal_strcmp@plt>
   36058:	cbnz	w0, 35f44 <__asan_cplus_demangle_mangled_name@@Base+0x688>
   3605c:	mov	x0, x19
   36060:	bl	6750 <__asan_cplus_demangle_type@plt>
   36064:	mov	x3, x0
   36068:	mov	x2, x20
   3606c:	mov	w1, #0x37                  	// #55
   36070:	mov	x0, x19
   36074:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   36078:	mov	x20, x0
   3607c:	ldp	x21, x22, [sp, #32]
   36080:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36084:	ldr	x1, [x20, #8]
   36088:	ldr	w1, [x1, #20]
   3608c:	cmp	w1, #0x2
   36090:	b.eq	3623c <__asan_cplus_demangle_mangled_name@@Base+0x980>  // b.none
   36094:	b.gt	3612c <__asan_cplus_demangle_mangled_name@@Base+0x870>
   36098:	cbz	w1, 361d4 <__asan_cplus_demangle_mangled_name@@Base+0x918>
   3609c:	cmp	w1, #0x1
   360a0:	b.ne	36120 <__asan_cplus_demangle_mangled_name@@Base+0x864>  // b.any
   360a4:	cbz	x21, 36490 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   360a8:	ldrb	w0, [x21]
   360ac:	cmp	w0, #0x70
   360b0:	mov	w1, #0x6d                  	// #109
   360b4:	ccmp	w0, w1, #0x4, ne  // ne = any
   360b8:	b.ne	360c8 <__asan_cplus_demangle_mangled_name@@Base+0x80c>  // b.any
   360bc:	ldrb	w1, [x21, #1]
   360c0:	cmp	w1, w0
   360c4:	b.eq	361f4 <__asan_cplus_demangle_mangled_name@@Base+0x938>  // b.none
   360c8:	ldr	w0, [x20]
   360cc:	mov	w22, #0x0                   	// #0
   360d0:	cmp	w0, #0x34
   360d4:	b.eq	364b4 <__asan_cplus_demangle_mangled_name@@Base+0xbf8>  // b.none
   360d8:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   360dc:	add	x1, x1, #0xee0
   360e0:	mov	x0, x21
   360e4:	bl	6b30 <__asan_internal_strcmp@plt>
   360e8:	cbz	w0, 36214 <__asan_cplus_demangle_mangled_name@@Base+0x958>
   360ec:	mov	x0, x19
   360f0:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   360f4:	mov	x3, x0
   360f8:	cbnz	w22, 36224 <__asan_cplus_demangle_mangled_name@@Base+0x968>
   360fc:	mov	x2, x20
   36100:	mov	w1, #0x37                  	// #55
   36104:	mov	x0, x19
   36108:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3610c:	mov	x20, x0
   36110:	ldp	x21, x22, [sp, #32]
   36114:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36118:	ldr	w1, [x20, #8]
   3611c:	b	3608c <__asan_cplus_demangle_mangled_name@@Base+0x7d0>
   36120:	mov	x20, #0x0                   	// #0
   36124:	ldp	x21, x22, [sp, #32]
   36128:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   3612c:	cmp	w1, #0x3
   36130:	b.ne	361c8 <__asan_cplus_demangle_mangled_name@@Base+0x90c>  // b.any
   36134:	cbz	x21, 36454 <__asan_cplus_demangle_mangled_name@@Base+0xb98>
   36138:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   3613c:	add	x1, x1, #0xe08
   36140:	mov	x0, x21
   36144:	bl	6b30 <__asan_internal_strcmp@plt>
   36148:	cbz	w0, 36354 <__asan_cplus_demangle_mangled_name@@Base+0xa98>
   3614c:	ldrb	w0, [x21]
   36150:	cmp	w0, #0x66
   36154:	b.eq	363c0 <__asan_cplus_demangle_mangled_name@@Base+0xb04>  // b.none
   36158:	cmp	w0, #0x6e
   3615c:	b.ne	3646c <__asan_cplus_demangle_mangled_name@@Base+0xbb0>  // b.any
   36160:	ldrb	w0, [x21, #1]
   36164:	cmp	w0, #0x77
   36168:	mov	w1, #0x61                  	// #97
   3616c:	ccmp	w0, w1, #0x4, ne  // ne = any
   36170:	b.ne	36478 <__asan_cplus_demangle_mangled_name@@Base+0xbbc>  // b.any
   36174:	mov	w1, #0x5f                  	// #95
   36178:	mov	x0, x19
   3617c:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   36180:	mov	x21, x0
   36184:	mov	x0, x19
   36188:	bl	6750 <__asan_cplus_demangle_type@plt>
   3618c:	mov	x22, x0
   36190:	ldr	x0, [x19, #24]
   36194:	ldrb	w1, [x0]
   36198:	cmp	w1, #0x45
   3619c:	b.eq	363f4 <__asan_cplus_demangle_mangled_name@@Base+0xb38>  // b.none
   361a0:	cmp	w1, #0x70
   361a4:	b.eq	36404 <__asan_cplus_demangle_mangled_name@@Base+0xb48>  // b.none
   361a8:	cmp	w1, #0x69
   361ac:	b.ne	36484 <__asan_cplus_demangle_mangled_name@@Base+0xbc8>  // b.any
   361b0:	ldrb	w0, [x0, #1]
   361b4:	cmp	w0, #0x6c
   361b8:	b.eq	36438 <__asan_cplus_demangle_mangled_name@@Base+0xb7c>  // b.none
   361bc:	mov	x20, #0x0                   	// #0
   361c0:	ldp	x21, x22, [sp, #32]
   361c4:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   361c8:	mov	x20, #0x0                   	// #0
   361cc:	ldp	x21, x22, [sp, #32]
   361d0:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   361d4:	mov	x3, #0x0                   	// #0
   361d8:	mov	x2, x20
   361dc:	mov	w1, #0x36                  	// #54
   361e0:	mov	x0, x19
   361e4:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   361e8:	mov	x20, x0
   361ec:	ldp	x21, x22, [sp, #32]
   361f0:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   361f4:	ldr	x0, [x19, #24]
   361f8:	ldrb	w1, [x0]
   361fc:	mov	w22, #0x1                   	// #1
   36200:	cmp	w1, #0x5f
   36204:	b.ne	360d8 <__asan_cplus_demangle_mangled_name@@Base+0x81c>  // b.any
   36208:	add	x0, x0, #0x1
   3620c:	str	x0, [x19, #24]
   36210:	b	360c8 <__asan_cplus_demangle_mangled_name@@Base+0x80c>
   36214:	mov	x0, x19
   36218:	bl	35c50 <__asan_cplus_demangle_mangled_name@@Base+0x394>
   3621c:	mov	x3, x0
   36220:	b	360f8 <__asan_cplus_demangle_mangled_name@@Base+0x83c>
   36224:	mov	x2, x3
   36228:	mov	w1, #0x39                  	// #57
   3622c:	mov	x0, x19
   36230:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   36234:	mov	x3, x0
   36238:	b	360fc <__asan_cplus_demangle_mangled_name@@Base+0x840>
   3623c:	cbz	x21, 36448 <__asan_cplus_demangle_mangled_name@@Base+0xb8c>
   36240:	mov	x0, x20
   36244:	bl	2c49c <__asan_backtrace_create_state@@Base+0x658>
   36248:	cbnz	w0, 362bc <__asan_cplus_demangle_mangled_name@@Base+0xa00>
   3624c:	ldrb	w0, [x21]
   36250:	cmp	w0, #0x66
   36254:	b.eq	362cc <__asan_cplus_demangle_mangled_name@@Base+0xa10>  // b.none
   36258:	mov	x0, x19
   3625c:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   36260:	mov	x22, x0
   36264:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   36268:	add	x1, x1, #0xdf8
   3626c:	mov	x0, x21
   36270:	bl	6b30 <__asan_internal_strcmp@plt>
   36274:	cbnz	w0, 362dc <__asan_cplus_demangle_mangled_name@@Base+0xa20>
   36278:	mov	w1, #0x45                  	// #69
   3627c:	mov	x0, x19
   36280:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   36284:	mov	x21, x0
   36288:	mov	x3, x21
   3628c:	mov	x2, x22
   36290:	mov	w1, #0x39                  	// #57
   36294:	mov	x0, x19
   36298:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3629c:	mov	x3, x0
   362a0:	mov	x2, x20
   362a4:	mov	w1, #0x38                  	// #56
   362a8:	mov	x0, x19
   362ac:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   362b0:	mov	x20, x0
   362b4:	ldp	x21, x22, [sp, #32]
   362b8:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   362bc:	mov	x0, x19
   362c0:	bl	6750 <__asan_cplus_demangle_type@plt>
   362c4:	mov	x22, x0
   362c8:	b	36264 <__asan_cplus_demangle_mangled_name@@Base+0x9a8>
   362cc:	mov	x0, x19
   362d0:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   362d4:	mov	x22, x0
   362d8:	b	36264 <__asan_cplus_demangle_mangled_name@@Base+0x9a8>
   362dc:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   362e0:	add	x1, x1, #0xfd0
   362e4:	mov	x0, x21
   362e8:	bl	6b30 <__asan_internal_strcmp@plt>
   362ec:	cbz	w0, 36304 <__asan_cplus_demangle_mangled_name@@Base+0xa48>
   362f0:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   362f4:	add	x1, x1, #0xfd8
   362f8:	mov	x0, x21
   362fc:	bl	6b30 <__asan_internal_strcmp@plt>
   36300:	cbnz	w0, 36344 <__asan_cplus_demangle_mangled_name@@Base+0xa88>
   36304:	mov	x0, x19
   36308:	bl	33a88 <__asan_cplus_demangle_type@@Base+0xc3c>
   3630c:	mov	x21, x0
   36310:	ldr	x0, [x19, #24]
   36314:	ldrb	w0, [x0]
   36318:	cmp	w0, #0x49
   3631c:	b.ne	36288 <__asan_cplus_demangle_mangled_name@@Base+0x9cc>  // b.any
   36320:	mov	x0, x19
   36324:	bl	35d00 <__asan_cplus_demangle_mangled_name@@Base+0x444>
   36328:	mov	x3, x0
   3632c:	mov	x2, x21
   36330:	mov	w1, #0x4                   	// #4
   36334:	mov	x0, x19
   36338:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3633c:	mov	x21, x0
   36340:	b	36288 <__asan_cplus_demangle_mangled_name@@Base+0x9cc>
   36344:	mov	x0, x19
   36348:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   3634c:	mov	x21, x0
   36350:	b	36288 <__asan_cplus_demangle_mangled_name@@Base+0x9cc>
   36354:	mov	x0, x19
   36358:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   3635c:	mov	x21, x0
   36360:	mov	x0, x19
   36364:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   36368:	mov	x22, x0
   3636c:	mov	x0, x19
   36370:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   36374:	mov	x3, x0
   36378:	cbz	x0, 36460 <__asan_cplus_demangle_mangled_name@@Base+0xba4>
   3637c:	mov	x2, x22
   36380:	mov	w1, #0x3c                  	// #60
   36384:	mov	x0, x19
   36388:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   3638c:	mov	x3, x0
   36390:	mov	x2, x21
   36394:	mov	w1, #0x3b                  	// #59
   36398:	mov	x0, x19
   3639c:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   363a0:	mov	x3, x0
   363a4:	mov	x2, x20
   363a8:	mov	w1, #0x3a                  	// #58
   363ac:	mov	x0, x19
   363b0:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   363b4:	mov	x20, x0
   363b8:	ldp	x21, x22, [sp, #32]
   363bc:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   363c0:	mov	x0, x19
   363c4:	bl	338e0 <__asan_cplus_demangle_type@@Base+0xa94>
   363c8:	mov	x21, x0
   363cc:	mov	x0, x19
   363d0:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   363d4:	mov	x22, x0
   363d8:	mov	x0, x19
   363dc:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   363e0:	mov	x3, x0
   363e4:	cbnz	x0, 3637c <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   363e8:	mov	x20, x0
   363ec:	ldp	x21, x22, [sp, #32]
   363f0:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   363f4:	add	x0, x0, #0x1
   363f8:	str	x0, [x19, #24]
   363fc:	mov	x3, #0x0                   	// #0
   36400:	b	3637c <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   36404:	ldrb	w1, [x0, #1]
   36408:	cmp	w1, #0x69
   3640c:	b.eq	3641c <__asan_cplus_demangle_mangled_name@@Base+0xb60>  // b.none
   36410:	mov	x20, #0x0                   	// #0
   36414:	ldp	x21, x22, [sp, #32]
   36418:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   3641c:	add	x0, x0, #0x2
   36420:	str	x0, [x19, #24]
   36424:	mov	w1, #0x45                  	// #69
   36428:	mov	x0, x19
   3642c:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   36430:	mov	x3, x0
   36434:	b	3637c <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   36438:	mov	x0, x19
   3643c:	bl	35d3c <__asan_cplus_demangle_mangled_name@@Base+0x480>
   36440:	mov	x3, x0
   36444:	b	3637c <__asan_cplus_demangle_mangled_name@@Base+0xac0>
   36448:	mov	x20, x21
   3644c:	ldp	x21, x22, [sp, #32]
   36450:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36454:	mov	x20, x21
   36458:	ldp	x21, x22, [sp, #32]
   3645c:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36460:	mov	x20, x0
   36464:	ldp	x21, x22, [sp, #32]
   36468:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   3646c:	mov	x20, #0x0                   	// #0
   36470:	ldp	x21, x22, [sp, #32]
   36474:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36478:	mov	x20, #0x0                   	// #0
   3647c:	ldp	x21, x22, [sp, #32]
   36480:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36484:	mov	x20, #0x0                   	// #0
   36488:	ldp	x21, x22, [sp, #32]
   3648c:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   36490:	mov	w22, #0x0                   	// #0
   36494:	cmp	w0, #0x34
   36498:	b.ne	360ec <__asan_cplus_demangle_mangled_name@@Base+0x830>  // b.any
   3649c:	ldr	x0, [x19, #24]
   364a0:	ldrb	w1, [x0]
   364a4:	cmp	w1, #0x5f
   364a8:	b.eq	364c4 <__asan_cplus_demangle_mangled_name@@Base+0xc08>  // b.none
   364ac:	mov	w22, #0x0                   	// #0
   364b0:	b	360ec <__asan_cplus_demangle_mangled_name@@Base+0x830>
   364b4:	ldr	x0, [x19, #24]
   364b8:	ldrb	w1, [x0]
   364bc:	cmp	w1, #0x5f
   364c0:	b.ne	360d8 <__asan_cplus_demangle_mangled_name@@Base+0x81c>  // b.any
   364c4:	add	x0, x0, #0x1
   364c8:	str	x0, [x19, #24]
   364cc:	mov	w1, #0x45                  	// #69
   364d0:	mov	x0, x19
   364d4:	bl	34854 <__asan_cplus_demangle_type@@Base+0x1a08>
   364d8:	mov	x3, x0
   364dc:	b	360fc <__asan_cplus_demangle_mangled_name@@Base+0x840>
   364e0:	ldp	x21, x22, [sp, #32]
   364e4:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   364e8:	ldp	x21, x22, [sp, #32]
   364ec:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>
   364f0:	ldp	x21, x22, [sp, #32]
   364f4:	b	35da4 <__asan_cplus_demangle_mangled_name@@Base+0x4e8>

00000000000364f8 <__asan_cplus_demangle_print_callback@@Base>:
   364f8:	stp	x29, x30, [sp, #-432]!
   364fc:	mov	x29, sp
   36500:	stp	x19, x20, [sp, #16]
   36504:	stp	x21, x22, [sp, #32]
   36508:	mov	w20, w0
   3650c:	mov	x21, x1
   36510:	str	xzr, [x29, #312]
   36514:	strb	wzr, [x29, #320]
   36518:	str	xzr, [x29, #344]
   3651c:	str	xzr, [x29, #352]
   36520:	str	wzr, [x29, #372]
   36524:	str	xzr, [x29, #376]
   36528:	str	x2, [x29, #328]
   3652c:	str	x3, [x29, #336]
   36530:	str	wzr, [x29, #360]
   36534:	str	wzr, [x29, #364]
   36538:	str	wzr, [x29, #368]
   3653c:	str	xzr, [x29, #384]
   36540:	str	xzr, [x29, #392]
   36544:	str	wzr, [x29, #400]
   36548:	str	wzr, [x29, #404]
   3654c:	str	xzr, [x29, #408]
   36550:	str	wzr, [x29, #416]
   36554:	str	wzr, [x29, #420]
   36558:	add	x0, x29, #0x38
   3655c:	bl	2c5bc <__asan_backtrace_create_state@@Base+0x778>
   36560:	ldr	w0, [x29, #364]
   36564:	cmp	w0, #0x7ff
   36568:	b.gt	36570 <__asan_cplus_demangle_print_callback@@Base+0x78>
   3656c:	str	wzr, [x29, #364]
   36570:	ldr	w3, [x29, #404]
   36574:	ldr	w2, [x29, #420]
   36578:	mul	w2, w3, w2
   3657c:	str	w2, [x29, #420]
   36580:	str	xzr, [x29, #424]
   36584:	mov	x22, sp
   36588:	mov	w0, #0x1                   	// #1
   3658c:	cmp	w3, #0x0
   36590:	csel	w3, w3, w0, gt
   36594:	sub	sp, sp, w3, sxtw #4
   36598:	mov	x1, sp
   3659c:	cmp	w2, #0x0
   365a0:	csel	w2, w2, w0, gt
   365a4:	sub	sp, sp, w2, sxtw #4
   365a8:	str	x1, [x29, #392]
   365ac:	mov	x0, sp
   365b0:	str	x0, [x29, #408]
   365b4:	add	x19, x29, #0x38
   365b8:	mov	x2, x21
   365bc:	mov	w1, w20
   365c0:	mov	x0, x19
   365c4:	bl	30f28 <__asan_backtrace_create_state@@Base+0x50e4>
   365c8:	mov	sp, x22
   365cc:	ldr	x1, [x29, #312]
   365d0:	strb	wzr, [x19, x1]
   365d4:	ldr	x2, [x29, #336]
   365d8:	mov	x0, x19
   365dc:	ldr	x3, [x29, #328]
   365e0:	blr	x3
   365e4:	ldr	w0, [x29, #360]
   365e8:	cmp	w0, #0x0
   365ec:	cset	w0, eq  // eq = none
   365f0:	mov	sp, x29
   365f4:	ldp	x19, x20, [sp, #16]
   365f8:	ldp	x21, x22, [sp, #32]
   365fc:	ldp	x29, x30, [sp], #432
   36600:	ret

0000000000036604 <__asan_cplus_demangle_print@@Base>:
   36604:	stp	x29, x30, [sp, #-80]!
   36608:	mov	x29, sp
   3660c:	stp	x19, x20, [sp, #16]
   36610:	stp	x21, x22, [sp, #32]
   36614:	mov	w19, w0
   36618:	mov	x20, x1
   3661c:	mov	x22, x3
   36620:	str	xzr, [sp, #48]
   36624:	str	xzr, [sp, #56]
   36628:	str	xzr, [sp, #64]
   3662c:	str	wzr, [sp, #72]
   36630:	cbnz	w2, 36678 <__asan_cplus_demangle_print@@Base+0x74>
   36634:	add	x3, sp, #0x30
   36638:	adrp	x2, 2c000 <__asan_backtrace_create_state@@Base+0x1bc>
   3663c:	add	x2, x2, #0x90c
   36640:	mov	x1, x20
   36644:	mov	w0, w19
   36648:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   3664c:	cbz	w0, 366c0 <__asan_cplus_demangle_print@@Base+0xbc>
   36650:	ldr	w0, [sp, #72]
   36654:	cmp	w0, #0x0
   36658:	ldr	x0, [sp, #64]
   3665c:	csinc	x0, x0, xzr, eq  // eq = none
   36660:	str	x0, [x22]
   36664:	ldr	x0, [sp, #48]
   36668:	ldp	x19, x20, [sp, #16]
   3666c:	ldp	x21, x22, [sp, #32]
   36670:	ldp	x29, x30, [sp], #80
   36674:	ret
   36678:	sxtw	x0, w2
   3667c:	cmp	x0, #0x2
   36680:	b.ls	366ac <__asan_cplus_demangle_print@@Base+0xa8>  // b.plast
   36684:	mov	x21, #0x2                   	// #2
   36688:	lsl	x21, x21, #1
   3668c:	cmp	x0, x21
   36690:	b.hi	36688 <__asan_cplus_demangle_print@@Base+0x84>  // b.pmore
   36694:	mov	x0, x21
   36698:	bl	6a30 <malloc@plt>
   3669c:	cbz	x0, 366b4 <__asan_cplus_demangle_print@@Base+0xb0>
   366a0:	str	x0, [sp, #48]
   366a4:	str	x21, [sp, #64]
   366a8:	b	36634 <__asan_cplus_demangle_print@@Base+0x30>
   366ac:	mov	x21, #0x2                   	// #2
   366b0:	b	36694 <__asan_cplus_demangle_print@@Base+0x90>
   366b4:	mov	w0, #0x1                   	// #1
   366b8:	str	w0, [sp, #72]
   366bc:	b	36634 <__asan_cplus_demangle_print@@Base+0x30>
   366c0:	ldr	x0, [sp, #48]
   366c4:	bl	66f0 <free@plt>
   366c8:	str	xzr, [x22]
   366cc:	mov	x0, #0x0                   	// #0
   366d0:	b	36668 <__asan_cplus_demangle_print@@Base+0x64>

00000000000366d4 <__asan_cplus_demangle_init_info@@Base>:
   366d4:	str	x0, [x3]
   366d8:	add	x4, x0, x2
   366dc:	str	x4, [x3, #8]
   366e0:	str	w1, [x3, #16]
   366e4:	str	x0, [x3, #24]
   366e8:	lsl	w0, w2, #1
   366ec:	str	w0, [x3, #44]
   366f0:	str	wzr, [x3, #40]
   366f4:	str	w2, [x3, #60]
   366f8:	str	wzr, [x3, #56]
   366fc:	str	xzr, [x3, #64]
   36700:	str	wzr, [x3, #72]
   36704:	str	wzr, [x3, #76]
   36708:	str	wzr, [x3, #80]
   3670c:	str	wzr, [x3, #84]
   36710:	ret
   36714:	stp	x29, x30, [sp, #-160]!
   36718:	mov	x29, sp
   3671c:	stp	x19, x20, [sp, #16]
   36720:	stp	x21, x22, [sp, #32]
   36724:	stp	x23, x24, [sp, #48]
   36728:	mov	x19, x0
   3672c:	mov	w20, w1
   36730:	mov	x22, x2
   36734:	mov	x23, x3
   36738:	ldrb	w0, [x0]
   3673c:	cmp	w0, #0x5f
   36740:	b.ne	36750 <__asan_cplus_demangle_init_info@@Base+0x7c>  // b.any
   36744:	ldrb	w0, [x19, #1]
   36748:	cmp	w0, #0x5a
   3674c:	b.eq	368b4 <__asan_cplus_demangle_init_info@@Base+0x1e0>  // b.none
   36750:	mov	x2, #0x8                   	// #8
   36754:	adrp	x1, 42000 <__asan_backtrace_vector_release@@Base+0x7c58>
   36758:	add	x1, x1, #0xf90
   3675c:	mov	x0, x19
   36760:	bl	6b70 <__asan_internal_strncmp@plt>
   36764:	cbnz	w0, 367a4 <__asan_cplus_demangle_init_info@@Base+0xd0>
   36768:	ldrb	w0, [x19, #8]
   3676c:	cmp	w0, #0x2e
   36770:	mov	w1, #0x5f                  	// #95
   36774:	ccmp	w0, w1, #0x4, ne  // ne = any
   36778:	mov	w1, #0x24                  	// #36
   3677c:	ccmp	w0, w1, #0x4, ne  // ne = any
   36780:	b.ne	367a4 <__asan_cplus_demangle_init_info@@Base+0xd0>  // b.any
   36784:	ldrb	w0, [x19, #9]
   36788:	cmp	w0, #0x44
   3678c:	mov	w1, #0x49                  	// #73
   36790:	ccmp	w0, w1, #0x4, ne  // ne = any
   36794:	b.ne	367a4 <__asan_cplus_demangle_init_info@@Base+0xd0>  // b.any
   36798:	ldrb	w1, [x19, #10]
   3679c:	cmp	w1, #0x5f
   367a0:	b.eq	368a4 <__asan_cplus_demangle_init_info@@Base+0x1d0>  // b.none
   367a4:	and	w0, w20, #0x10
   367a8:	mov	w21, #0x0                   	// #0
   367ac:	tbz	w20, #4, 36900 <__asan_cplus_demangle_init_info@@Base+0x22c>
   367b0:	mov	x0, x19
   367b4:	bl	67e0 <__asan_internal_strlen@plt>
   367b8:	add	x3, x29, #0x48
   367bc:	mov	x2, x0
   367c0:	mov	w1, w20
   367c4:	mov	x0, x19
   367c8:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   367cc:	and	w0, w20, #0x40000
   367d0:	tbnz	w20, #18, 367e0 <__asan_cplus_demangle_init_info@@Base+0x10c>
   367d4:	ldr	w1, [x29, #116]
   367d8:	cmp	w1, #0x800
   367dc:	b.hi	36900 <__asan_cplus_demangle_init_info@@Base+0x22c>  // b.pmore
   367e0:	mov	x19, sp
   367e4:	ldrsw	x0, [x29, #116]
   367e8:	add	x0, x0, x0, lsl #1
   367ec:	lsl	x0, x0, #3
   367f0:	add	x0, x0, #0xf
   367f4:	and	x0, x0, #0xfffffffffffffff0
   367f8:	sub	sp, sp, x0
   367fc:	mov	x1, sp
   36800:	ldrsw	x0, [x29, #132]
   36804:	lsl	x0, x0, #3
   36808:	add	x0, x0, #0xf
   3680c:	and	x0, x0, #0xfffffffffffffff0
   36810:	sub	sp, sp, x0
   36814:	str	x1, [x29, #104]
   36818:	mov	x0, sp
   3681c:	str	x0, [x29, #120]
   36820:	cmp	w21, #0x1
   36824:	b.eq	36918 <__asan_cplus_demangle_init_info@@Base+0x244>  // b.none
   36828:	b.ls	368bc <__asan_cplus_demangle_init_info@@Base+0x1e8>  // b.plast
   3682c:	ldr	x0, [x29, #96]
   36830:	add	x24, x0, #0xb
   36834:	str	x24, [x29, #96]
   36838:	cmp	w21, #0x2
   3683c:	cset	w1, ne  // ne = any
   36840:	add	w21, w1, #0x44
   36844:	ldrb	w1, [x0, #11]
   36848:	cmp	w1, #0x5f
   3684c:	b.ne	3685c <__asan_cplus_demangle_init_info@@Base+0x188>  // b.any
   36850:	ldrb	w1, [x0, #12]
   36854:	cmp	w1, #0x5a
   36858:	b.eq	3692c <__asan_cplus_demangle_init_info@@Base+0x258>  // b.none
   3685c:	mov	x0, x24
   36860:	bl	67e0 <__asan_internal_strlen@plt>
   36864:	mov	w2, w0
   36868:	mov	x1, x24
   3686c:	add	x0, x29, #0x48
   36870:	bl	32988 <__asan_cplus_demangle_fill_name@@Base+0x30>
   36874:	mov	x2, x0
   36878:	mov	x3, #0x0                   	// #0
   3687c:	mov	w1, w21
   36880:	add	x0, x29, #0x48
   36884:	bl	2bf48 <__asan_backtrace_create_state@@Base+0x104>
   36888:	mov	x21, x0
   3688c:	ldr	x0, [x29, #96]
   36890:	bl	67e0 <__asan_internal_strlen@plt>
   36894:	ldr	x1, [x29, #96]
   36898:	add	x1, x1, x0
   3689c:	str	x1, [x29, #96]
   368a0:	b	368cc <__asan_cplus_demangle_init_info@@Base+0x1f8>
   368a4:	cmp	w0, #0x49
   368a8:	cset	w21, ne  // ne = any
   368ac:	add	w21, w21, #0x2
   368b0:	b	367b0 <__asan_cplus_demangle_init_info@@Base+0xdc>
   368b4:	mov	w21, #0x1                   	// #1
   368b8:	b	367b0 <__asan_cplus_demangle_init_info@@Base+0xdc>
   368bc:	cbnz	w21, 36948 <__asan_cplus_demangle_init_info@@Base+0x274>
   368c0:	add	x0, x29, #0x48
   368c4:	bl	6750 <__asan_cplus_demangle_type@plt>
   368c8:	mov	x21, x0
   368cc:	tbz	w20, #0, 368e0 <__asan_cplus_demangle_init_info@@Base+0x20c>
   368d0:	ldr	x0, [x29, #96]
   368d4:	ldrb	w1, [x0]
   368d8:	mov	w0, #0x0                   	// #0
   368dc:	cbnz	w1, 368fc <__asan_cplus_demangle_init_info@@Base+0x228>
   368e0:	mov	w0, #0x0                   	// #0
   368e4:	cbz	x21, 368fc <__asan_cplus_demangle_init_info@@Base+0x228>
   368e8:	mov	x3, x23
   368ec:	mov	x2, x22
   368f0:	mov	x1, x21
   368f4:	mov	w0, w20
   368f8:	bl	6a00 <__asan_cplus_demangle_print_callback@plt>
   368fc:	mov	sp, x19
   36900:	mov	sp, x29
   36904:	ldp	x19, x20, [sp, #16]
   36908:	ldp	x21, x22, [sp, #32]
   3690c:	ldp	x23, x24, [sp, #48]
   36910:	ldp	x29, x30, [sp], #160
   36914:	ret
   36918:	mov	w1, #0x1                   	// #1
   3691c:	add	x0, x29, #0x48
   36920:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   36924:	mov	x21, x0
   36928:	b	368cc <__asan_cplus_demangle_init_info@@Base+0x1f8>
   3692c:	add	x0, x0, #0xd
   36930:	str	x0, [x29, #96]
   36934:	mov	w1, #0x0                   	// #0
   36938:	add	x0, x29, #0x48
   3693c:	bl	350dc <__asan_cplus_demangle_type@@Base+0x2290>
   36940:	mov	x2, x0
   36944:	b	36878 <__asan_cplus_demangle_init_info@@Base+0x1a4>
   36948:	bl	6bf0 <abort@plt>
   3694c:	stp	x29, x30, [sp, #-64]!
   36950:	mov	x29, sp
   36954:	str	x19, [sp, #16]
   36958:	mov	x19, x2
   3695c:	str	xzr, [sp, #32]
   36960:	str	xzr, [sp, #40]
   36964:	str	xzr, [sp, #48]
   36968:	str	wzr, [sp, #56]
   3696c:	add	x3, sp, #0x20
   36970:	adrp	x2, 2c000 <__asan_backtrace_create_state@@Base+0x1bc>
   36974:	add	x2, x2, #0x90c
   36978:	bl	36714 <__asan_cplus_demangle_init_info@@Base+0x40>
   3697c:	cbz	w0, 369a4 <__asan_cplus_demangle_init_info@@Base+0x2d0>
   36980:	ldr	w0, [sp, #56]
   36984:	cmp	w0, #0x0
   36988:	ldr	x0, [sp, #48]
   3698c:	csinc	x0, x0, xzr, eq  // eq = none
   36990:	str	x0, [x19]
   36994:	ldr	x0, [sp, #32]
   36998:	ldr	x19, [sp, #16]
   3699c:	ldp	x29, x30, [sp], #64
   369a0:	ret
   369a4:	ldr	x0, [sp, #32]
   369a8:	bl	66f0 <free@plt>
   369ac:	str	xzr, [x19]
   369b0:	mov	x0, #0x0                   	// #0
   369b4:	b	36998 <__asan_cplus_demangle_init_info@@Base+0x2c4>
   369b8:	stp	x29, x30, [sp, #-144]!
   369bc:	mov	x29, sp
   369c0:	stp	x19, x20, [sp, #16]
   369c4:	stp	x21, x22, [sp, #32]
   369c8:	mov	x22, x0
   369cc:	mov	x20, x1
   369d0:	mov	x19, x2
   369d4:	str	wzr, [x1]
   369d8:	str	wzr, [x2]
   369dc:	bl	67e0 <__asan_internal_strlen@plt>
   369e0:	add	x21, x29, #0x38
   369e4:	mov	x3, x21
   369e8:	mov	x2, x0
   369ec:	mov	w1, #0x4000                	// #16384
   369f0:	mov	x0, x22
   369f4:	bl	66a0 <__asan_cplus_demangle_init_info@plt>
   369f8:	ldrsw	x0, [x29, #100]
   369fc:	add	x0, x0, x0, lsl #1
   36a00:	lsl	x0, x0, #3
   36a04:	add	x0, x0, #0xf
   36a08:	and	x0, x0, #0xfffffffffffffff0
   36a0c:	sub	sp, sp, x0
   36a10:	mov	x1, sp
   36a14:	ldrsw	x0, [x29, #116]
   36a18:	lsl	x0, x0, #3
   36a1c:	add	x0, x0, #0xf
   36a20:	and	x0, x0, #0xfffffffffffffff0
   36a24:	sub	sp, sp, x0
   36a28:	str	x1, [x29, #88]
   36a2c:	mov	x0, sp
   36a30:	str	x0, [x29, #104]
   36a34:	mov	w1, #0x1                   	// #1
   36a38:	mov	x0, x21
   36a3c:	bl	6ca0 <__asan_cplus_demangle_mangled_name@plt>
   36a40:	cbz	x0, 36ac8 <__asan_cplus_demangle_init_info@@Base+0x3f4>
   36a44:	ldr	w3, [x0]
   36a48:	cmp	w3, #0x7
   36a4c:	b.eq	36ab8 <__asan_cplus_demangle_init_info@@Base+0x3e4>  // b.none
   36a50:	b.hi	36a90 <__asan_cplus_demangle_init_info@@Base+0x3bc>  // b.pmore
   36a54:	cmp	w3, #0x2
   36a58:	b.ls	36a74 <__asan_cplus_demangle_init_info@@Base+0x3a0>  // b.plast
   36a5c:	sub	w3, w3, #0x3
   36a60:	cmp	w3, #0x1
   36a64:	b.hi	36ad0 <__asan_cplus_demangle_init_info@@Base+0x3fc>  // b.pmore
   36a68:	ldr	x0, [x0, #8]
   36a6c:	cbnz	x0, 36a44 <__asan_cplus_demangle_init_info@@Base+0x370>
   36a70:	b	36a7c <__asan_cplus_demangle_init_info@@Base+0x3a8>
   36a74:	cbnz	w3, 36ab0 <__asan_cplus_demangle_init_info@@Base+0x3dc>
   36a78:	mov	w0, #0x0                   	// #0
   36a7c:	mov	sp, x29
   36a80:	ldp	x19, x20, [sp, #16]
   36a84:	ldp	x21, x22, [sp, #32]
   36a88:	ldp	x29, x30, [sp], #144
   36a8c:	ret
   36a90:	cmp	w3, #0x8
   36a94:	b.ne	36aa8 <__asan_cplus_demangle_init_info@@Base+0x3d4>  // b.any
   36a98:	ldr	w0, [x0, #8]
   36a9c:	str	w0, [x19]
   36aa0:	mov	w0, #0x1                   	// #1
   36aa4:	b	36a7c <__asan_cplus_demangle_init_info@@Base+0x3a8>
   36aa8:	mov	w0, #0x0                   	// #0
   36aac:	b	36a7c <__asan_cplus_demangle_init_info@@Base+0x3a8>
   36ab0:	ldr	x0, [x0, #16]
   36ab4:	b	36a6c <__asan_cplus_demangle_init_info@@Base+0x398>
   36ab8:	ldr	w0, [x0, #8]
   36abc:	str	w0, [x20]
   36ac0:	mov	w0, #0x1                   	// #1
   36ac4:	b	36a7c <__asan_cplus_demangle_init_info@@Base+0x3a8>
   36ac8:	mov	w0, #0x0                   	// #0
   36acc:	b	36a7c <__asan_cplus_demangle_init_info@@Base+0x3a8>
   36ad0:	mov	w0, #0x0                   	// #0
   36ad4:	b	36a7c <__asan_cplus_demangle_init_info@@Base+0x3a8>

0000000000036ad8 <__asan_cplus_demangle_v3@@Base>:
   36ad8:	stp	x29, x30, [sp, #-32]!
   36adc:	mov	x29, sp
   36ae0:	add	x2, sp, #0x18
   36ae4:	bl	3694c <__asan_cplus_demangle_init_info@@Base+0x278>
   36ae8:	ldp	x29, x30, [sp], #32
   36aec:	ret

0000000000036af0 <__asan_cplus_demangle_v3_callback@@Base>:
   36af0:	stp	x29, x30, [sp, #-16]!
   36af4:	mov	x29, sp
   36af8:	bl	36714 <__asan_cplus_demangle_init_info@@Base+0x40>
   36afc:	ldp	x29, x30, [sp], #16
   36b00:	ret

0000000000036b04 <__asan_java_demangle_v3@@Base>:
   36b04:	stp	x29, x30, [sp, #-32]!
   36b08:	mov	x29, sp
   36b0c:	add	x2, sp, #0x18
   36b10:	mov	w1, #0x25                  	// #37
   36b14:	bl	3694c <__asan_cplus_demangle_init_info@@Base+0x278>
   36b18:	ldp	x29, x30, [sp], #32
   36b1c:	ret

0000000000036b20 <__asan_java_demangle_v3_callback@@Base>:
   36b20:	stp	x29, x30, [sp, #-16]!
   36b24:	mov	x29, sp
   36b28:	mov	x3, x2
   36b2c:	mov	x2, x1
   36b30:	mov	w1, #0x25                  	// #37
   36b34:	bl	36714 <__asan_cplus_demangle_init_info@@Base+0x40>
   36b38:	ldp	x29, x30, [sp], #16
   36b3c:	ret

0000000000036b40 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   36b40:	stp	x29, x30, [sp, #-32]!
   36b44:	mov	x29, sp
   36b48:	add	x2, sp, #0x18
   36b4c:	add	x1, sp, #0x1c
   36b50:	bl	369b8 <__asan_cplus_demangle_init_info@@Base+0x2e4>
   36b54:	cmp	w0, #0x0
   36b58:	ldr	w0, [sp, #28]
   36b5c:	csel	w0, w0, wzr, ne  // ne = any
   36b60:	ldp	x29, x30, [sp], #32
   36b64:	ret

0000000000036b68 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   36b68:	stp	x29, x30, [sp, #-32]!
   36b6c:	mov	x29, sp
   36b70:	add	x2, sp, #0x18
   36b74:	add	x1, sp, #0x1c
   36b78:	bl	369b8 <__asan_cplus_demangle_init_info@@Base+0x2e4>
   36b7c:	cmp	w0, #0x0
   36b80:	ldr	w0, [sp, #24]
   36b84:	csel	w0, w0, wzr, ne  // ne = any
   36b88:	ldp	x29, x30, [sp], #32
   36b8c:	ret

0000000000036b90 <__asan_internal_memcpy@@Base>:
   36b90:	stp	x29, x30, [sp, #-16]!
   36b94:	mov	x29, sp
   36b98:	bl	17aec <__sanitizer_set_report_fd@@Base+0x173c>
   36b9c:	ldp	x29, x30, [sp], #16
   36ba0:	ret

0000000000036ba4 <__asan_internal_memset@@Base>:
   36ba4:	stp	x29, x30, [sp, #-16]!
   36ba8:	mov	x29, sp
   36bac:	bl	17b5c <__sanitizer_set_report_fd@@Base+0x17ac>
   36bb0:	ldp	x29, x30, [sp], #16
   36bb4:	ret

0000000000036bb8 <__asan_internal_memcmp@@Base>:
   36bb8:	stp	x29, x30, [sp, #-16]!
   36bbc:	mov	x29, sp
   36bc0:	bl	17aac <__sanitizer_set_report_fd@@Base+0x16fc>
   36bc4:	ldp	x29, x30, [sp], #16
   36bc8:	ret

0000000000036bcc <__asan_internal_strcmp@@Base>:
   36bcc:	stp	x29, x30, [sp, #-16]!
   36bd0:	mov	x29, sp
   36bd4:	bl	17bc4 <__sanitizer_set_report_fd@@Base+0x1814>
   36bd8:	ldp	x29, x30, [sp], #16
   36bdc:	ret

0000000000036be0 <__asan_internal_strncmp@@Base>:
   36be0:	stp	x29, x30, [sp, #-16]!
   36be4:	mov	x29, sp
   36be8:	bl	17c08 <__sanitizer_set_report_fd@@Base+0x1858>
   36bec:	ldp	x29, x30, [sp], #16
   36bf0:	ret

0000000000036bf4 <__asan_internal_strlen@@Base>:
   36bf4:	stp	x29, x30, [sp, #-16]!
   36bf8:	mov	x29, sp
   36bfc:	bl	17cf8 <__sanitizer_set_report_fd@@Base+0x1948>
   36c00:	ldp	x29, x30, [sp], #16
   36c04:	ret

0000000000036c08 <__asan_internal_strnlen@@Base>:
   36c08:	stp	x29, x30, [sp, #-16]!
   36c0c:	mov	x29, sp
   36c10:	bl	17eac <__sanitizer_set_report_fd@@Base+0x1afc>
   36c14:	ldp	x29, x30, [sp], #16
   36c18:	ret
   36c1c:	stp	x29, x30, [sp, #-16]!
   36c20:	mov	x29, sp
   36c24:	mov	x0, x4
   36c28:	mov	w2, #0xffffffff            	// #-1
   36c2c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   36c30:	add	x1, x1, #0x678
   36c34:	blr	x3
   36c38:	mov	w0, #0x0                   	// #0
   36c3c:	ldp	x29, x30, [sp], #16
   36c40:	ret
   36c44:	stp	x29, x30, [sp, #-16]!
   36c48:	mov	x29, sp
   36c4c:	mov	x0, x4
   36c50:	mov	w2, #0xffffffff            	// #-1
   36c54:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   36c58:	add	x1, x1, #0x698
   36c5c:	blr	x3
   36c60:	ldp	x29, x30, [sp], #16
   36c64:	ret
   36c68:	ldr	x2, [x0, #8]
   36c6c:	ldr	x0, [x1, #8]
   36c70:	cmp	x2, x0
   36c74:	b.cc	36c80 <__asan_internal_strnlen@@Base+0x78>  // b.lo, b.ul, b.last
   36c78:	cset	w0, hi  // hi = pmore
   36c7c:	ret
   36c80:	mov	w0, #0xffffffff            	// #-1
   36c84:	b	36c7c <__asan_internal_strnlen@@Base+0x74>
   36c88:	stp	x29, x30, [sp, #-192]!
   36c8c:	mov	x29, sp
   36c90:	stp	x19, x20, [sp, #16]
   36c94:	stp	x21, x22, [sp, #32]
   36c98:	mov	x19, x0
   36c9c:	mov	x20, x1
   36ca0:	mov	x21, x3
   36ca4:	add	x22, x2, #0x1, lsl #12
   36ca8:	mov	x2, #0x20                  	// #32
   36cac:	mov	w1, #0x0                   	// #0
   36cb0:	add	x0, sp, #0xa0
   36cb4:	bl	6860 <__asan_internal_memset@plt>
   36cb8:	cbz	x20, 36d2c <__asan_internal_strnlen@@Base+0x124>
   36cbc:	mov	x4, #0x0                   	// #0
   36cc0:	add	x0, sp, #0xa0
   36cc4:	add	x2, sp, #0x60
   36cc8:	add	x7, sp, #0x80
   36ccc:	b	36d04 <__asan_internal_strnlen@@Base+0xfc>
   36cd0:	and	w1, w4, #0xffff
   36cd4:	ldrh	w3, [x2, w5, sxtw #1]
   36cd8:	strh	w1, [x22, x3, lsl #1]
   36cdc:	ldrb	w3, [x19, x4]
   36ce0:	strh	w1, [x2, x3, lsl #1]
   36ce4:	ldrb	w5, [x19, x4]
   36ce8:	lsl	x5, x5, #1
   36cec:	ldrh	w6, [x0, x5]
   36cf0:	add	w6, w6, #0x1
   36cf4:	strh	w6, [x0, x5]
   36cf8:	add	x4, x4, #0x1
   36cfc:	cmp	x20, x4
   36d00:	b.eq	36d2c <__asan_internal_strnlen@@Base+0x124>  // b.none
   36d04:	ldrb	w5, [x19, x4]
   36d08:	cmp	w5, #0xf
   36d0c:	b.hi	37038 <__asan_internal_strnlen@@Base+0x430>  // b.pmore
   36d10:	ldrh	w1, [x0, w5, sxtw #1]
   36d14:	cbnz	w1, 36cd0 <__asan_internal_strnlen@@Base+0xc8>
   36d18:	and	w1, w4, #0xffff
   36d1c:	sbfiz	x5, x5, #1, #32
   36d20:	strh	w1, [x7, x5]
   36d24:	strh	w1, [x2, x5]
   36d28:	b	36ce4 <__asan_internal_strnlen@@Base+0xdc>
   36d2c:	mov	x2, #0x800                 	// #2048
   36d30:	mov	w1, #0x0                   	// #0
   36d34:	mov	x0, x21
   36d38:	bl	6860 <__asan_internal_memset@plt>
   36d3c:	mov	x4, #0x0                   	// #0
   36d40:	mov	w1, #0x0                   	// #0
   36d44:	add	x9, sp, #0xa0
   36d48:	mov	w8, #0x1                   	// #1
   36d4c:	add	x12, sp, #0x80
   36d50:	add	x0, x9, x4, lsl #1
   36d54:	ldrh	w0, [x0, #2]
   36d58:	cbnz	w0, 36d84 <__asan_internal_strnlen@@Base+0x17c>
   36d5c:	add	x4, x4, #0x1
   36d60:	cmp	x4, #0x8
   36d64:	b.ne	36d50 <__asan_internal_strnlen@@Base+0x148>  // b.any
   36d68:	stp	x23, x24, [sp, #48]
   36d6c:	stp	x25, x26, [sp, #64]
   36d70:	add	x7, sp, #0xa0
   36d74:	mov	x6, #0x9                   	// #9
   36d78:	add	x9, sp, #0x50
   36d7c:	mov	w8, #0x1                   	// #1
   36d80:	b	36eb0 <__asan_internal_strnlen@@Base+0x2a8>
   36d84:	add	w3, w4, #0x1
   36d88:	lsl	w5, w8, w3
   36d8c:	cmp	w5, w0
   36d90:	b.cc	3704c <__asan_internal_strnlen@@Base+0x444>  // b.lo, b.ul, b.last
   36d94:	add	x5, x12, x4, lsl #1
   36d98:	ldrh	w7, [x5, #2]
   36d9c:	and	x5, x0, #0xffff
   36da0:	tst	w7, #0xfffffe00
   36da4:	b.ne	37054 <__asan_internal_strnlen@@Base+0x44c>  // b.any
   36da8:	ubfiz	w13, w4, #9, #7
   36dac:	lsl	w3, w8, w3
   36db0:	sxtw	x3, w3
   36db4:	lsl	w10, w8, w4
   36db8:	mov	x11, #0x0                   	// #0
   36dbc:	orr	w6, w13, w7
   36dc0:	mov	w0, w1
   36dc4:	cmp	w1, #0xff
   36dc8:	b.hi	36de4 <__asan_internal_strnlen@@Base+0x1dc>  // b.pmore
   36dcc:	ldrh	w2, [x21, x0, lsl #1]
   36dd0:	cbnz	w2, 3705c <__asan_internal_strnlen@@Base+0x454>
   36dd4:	strh	w6, [x21, x0, lsl #1]
   36dd8:	add	x0, x0, x3
   36ddc:	cmp	x0, #0xff
   36de0:	b.ls	36dcc <__asan_internal_strnlen@@Base+0x1c4>  // b.plast
   36de4:	add	x11, x11, #0x1
   36de8:	cmp	x11, x5
   36dec:	b.cs	36df8 <__asan_internal_strnlen@@Base+0x1f0>  // b.hs, b.nlast
   36df0:	mov	w7, w7
   36df4:	ldrh	w7, [x22, x7, lsl #1]
   36df8:	tst	w10, w1
   36dfc:	b.eq	36e3c <__asan_internal_strnlen@@Base+0x234>  // b.none
   36e00:	mov	w0, w10
   36e04:	lsr	w0, w0, #1
   36e08:	tst	w0, w1
   36e0c:	b.ne	36e04 <__asan_internal_strnlen@@Base+0x1fc>  // b.any
   36e10:	sub	w2, w0, #0x1
   36e14:	and	w1, w2, w1
   36e18:	add	w1, w1, w0
   36e1c:	cmp	w0, #0x0
   36e20:	csel	w1, w1, w0, ne  // ne = any
   36e24:	cmp	x11, x5
   36e28:	b.eq	36d5c <__asan_internal_strnlen@@Base+0x154>  // b.none
   36e2c:	tst	w7, #0xfffffe00
   36e30:	b.eq	36dbc <__asan_internal_strnlen@@Base+0x1b4>  // b.none
   36e34:	mov	w0, #0x0                   	// #0
   36e38:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   36e3c:	mov	w0, w10
   36e40:	b	36e10 <__asan_internal_strnlen@@Base+0x208>
   36e44:	add	w1, w1, w0
   36e48:	lsl	w4, w8, w4
   36e4c:	bic	w5, w5, w4
   36e50:	subs	x3, x3, #0x1
   36e54:	b.eq	36e9c <__asan_internal_strnlen@@Base+0x294>  // b.none
   36e58:	sub	w4, w6, w3
   36e5c:	lsr	w0, w5, w4
   36e60:	tbz	w0, #0, 36e50 <__asan_internal_strnlen@@Base+0x248>
   36e64:	sub	w0, w3, #0x1
   36e68:	lsl	w0, w8, w0
   36e6c:	cbz	x3, 36e48 <__asan_internal_strnlen@@Base+0x240>
   36e70:	tst	w0, w1
   36e74:	b.eq	36e44 <__asan_internal_strnlen@@Base+0x23c>  // b.none
   36e78:	mov	w2, #0x0                   	// #0
   36e7c:	bic	w1, w1, w0
   36e80:	add	w2, w2, #0x1
   36e84:	lsr	w0, w0, #1
   36e88:	cmp	x3, w2, uxtw
   36e8c:	b.ls	36e48 <__asan_internal_strnlen@@Base+0x240>  // b.plast
   36e90:	tst	w1, w0
   36e94:	b.ne	36e7c <__asan_internal_strnlen@@Base+0x274>  // b.any
   36e98:	b	36e44 <__asan_internal_strnlen@@Base+0x23c>
   36e9c:	cbnz	w5, 37074 <__asan_internal_strnlen@@Base+0x46c>
   36ea0:	add	x6, x6, #0x1
   36ea4:	add	x7, x7, #0x2
   36ea8:	cmp	x6, #0x10
   36eac:	b.eq	36ecc <__asan_internal_strnlen@@Base+0x2c4>  // b.none
   36eb0:	ldrh	w5, [x7, #18]
   36eb4:	cbz	w5, 36ea0 <__asan_internal_strnlen@@Base+0x298>
   36eb8:	add	x0, x9, x6, lsl #1
   36ebc:	sturh	w1, [x0, #-18]
   36ec0:	cbz	x6, 37064 <__asan_internal_strnlen@@Base+0x45c>
   36ec4:	mov	x3, x6
   36ec8:	b	36e58 <__asan_internal_strnlen@@Base+0x250>
   36ecc:	mov	x3, #0x7                   	// #7
   36ed0:	mov	x16, #0x0                   	// #0
   36ed4:	add	x12, sp, #0xa0
   36ed8:	add	x30, sp, #0x80
   36edc:	add	x20, sp, #0x50
   36ee0:	mov	w10, #0x1                   	// #1
   36ee4:	mov	x17, #0x0                   	// #0
   36ee8:	mov	x19, #0x100                 	// #256
   36eec:	add	x0, x12, x3, lsl #1
   36ef0:	ldrh	w0, [x0, #16]
   36ef4:	cbnz	w0, 36f10 <__asan_internal_strnlen@@Base+0x308>
   36ef8:	subs	x3, x3, #0x1
   36efc:	b.ne	36eec <__asan_internal_strnlen@@Base+0x2e4>  // b.any
   36f00:	mov	w0, #0x1                   	// #1
   36f04:	ldp	x23, x24, [sp, #48]
   36f08:	ldp	x25, x26, [sp, #64]
   36f0c:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   36f10:	lsl	x1, x3, #1
   36f14:	add	x2, x1, x30
   36f18:	ldrh	w23, [x2, #16]
   36f1c:	add	x1, x1, x20
   36f20:	ldurh	w5, [x1, #-2]
   36f24:	and	x9, x0, #0xffff
   36f28:	lsl	w4, w10, w3
   36f2c:	sxtw	x26, w4
   36f30:	ubfiz	w15, w3, #9, #7
   36f34:	add	w14, w15, #0x1, lsl #12
   36f38:	and	w14, w14, #0xffff
   36f3c:	mov	w4, w4
   36f40:	add	w11, w3, #0x7
   36f44:	lsl	w11, w10, w11
   36f48:	mov	x8, x17
   36f4c:	mov	x18, x17
   36f50:	mov	x13, x19
   36f54:	mov	x24, #0x0                   	// #0
   36f58:	mov	x25, x3
   36f5c:	and	x0, x5, #0xff
   36f60:	cmp	x13, w5, uxtb
   36f64:	b.eq	36f94 <__asan_internal_strnlen@@Base+0x38c>  // b.none
   36f68:	lsl	x1, x0, #1
   36f6c:	ldrh	w8, [x21, x1]
   36f70:	cbnz	w8, 37014 <__asan_internal_strnlen@@Base+0x40c>
   36f74:	tst	x16, #0xfffffffffffffe00
   36f78:	b.ne	37084 <__asan_internal_strnlen@@Base+0x47c>  // b.any
   36f7c:	add	w2, w14, w16
   36f80:	strh	w2, [x21, x1]
   36f84:	mov	x8, x25
   36f88:	mov	x18, x16
   36f8c:	mov	x13, x0
   36f90:	add	x16, x26, x16
   36f94:	orr	w7, w15, w23
   36f98:	lsr	w0, w5, #8
   36f9c:	lsl	w6, w10, w8
   36fa0:	cmp	x6, x0
   36fa4:	b.ls	36fc8 <__asan_internal_strnlen@@Base+0x3c0>  // b.plast
   36fa8:	add	x1, x21, x18, lsl #1
   36fac:	add	x1, x1, #0x200
   36fb0:	ldrh	w2, [x1, x0, lsl #1]
   36fb4:	cbnz	w2, 370b4 <__asan_internal_strnlen@@Base+0x4ac>
   36fb8:	strh	w7, [x1, x0, lsl #1]
   36fbc:	add	x0, x0, x4
   36fc0:	cmp	x6, x0
   36fc4:	b.hi	36fb0 <__asan_internal_strnlen@@Base+0x3a8>  // b.pmore
   36fc8:	add	x24, x24, #0x1
   36fcc:	cmp	x9, x24
   36fd0:	b.ls	36fdc <__asan_internal_strnlen@@Base+0x3d4>  // b.plast
   36fd4:	mov	w23, w23
   36fd8:	ldrh	w23, [x22, x23, lsl #1]
   36fdc:	tst	w11, w5
   36fe0:	b.eq	37030 <__asan_internal_strnlen@@Base+0x428>  // b.none
   36fe4:	mov	w0, w11
   36fe8:	lsr	w0, w0, #1
   36fec:	tst	w0, w5
   36ff0:	b.ne	36fe8 <__asan_internal_strnlen@@Base+0x3e0>  // b.any
   36ff4:	sub	w1, w0, #0x1
   36ff8:	and	w5, w1, w5
   36ffc:	add	w5, w5, w0
   37000:	cmp	w0, #0x0
   37004:	csel	w5, w5, w0, ne  // ne = any
   37008:	cmp	x9, x24
   3700c:	b.ne	36f5c <__asan_internal_strnlen@@Base+0x354>  // b.any
   37010:	b	36ef8 <__asan_internal_strnlen@@Base+0x2f0>
   37014:	tbz	w8, #12, 37094 <__asan_internal_strnlen@@Base+0x48c>
   37018:	and	x18, x8, #0x1ff
   3701c:	ubfx	x8, x8, #9, #3
   37020:	cmp	x8, x3
   37024:	b.cc	370a4 <__asan_internal_strnlen@@Base+0x49c>  // b.lo, b.ul, b.last
   37028:	mov	x13, x0
   3702c:	b	36f94 <__asan_internal_strnlen@@Base+0x38c>
   37030:	mov	w0, w11
   37034:	b	36ff4 <__asan_internal_strnlen@@Base+0x3ec>
   37038:	mov	w0, #0x0                   	// #0
   3703c:	ldp	x19, x20, [sp, #16]
   37040:	ldp	x21, x22, [sp, #32]
   37044:	ldp	x29, x30, [sp], #192
   37048:	ret
   3704c:	mov	w0, #0x0                   	// #0
   37050:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   37054:	mov	w0, #0x0                   	// #0
   37058:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   3705c:	mov	w0, #0x0                   	// #0
   37060:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   37064:	mov	w0, #0x0                   	// #0
   37068:	ldp	x23, x24, [sp, #48]
   3706c:	ldp	x25, x26, [sp, #64]
   37070:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   37074:	mov	w0, #0x0                   	// #0
   37078:	ldp	x23, x24, [sp, #48]
   3707c:	ldp	x25, x26, [sp, #64]
   37080:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   37084:	mov	w0, #0x0                   	// #0
   37088:	ldp	x23, x24, [sp, #48]
   3708c:	ldp	x25, x26, [sp, #64]
   37090:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   37094:	mov	w0, #0x0                   	// #0
   37098:	ldp	x23, x24, [sp, #48]
   3709c:	ldp	x25, x26, [sp, #64]
   370a0:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   370a4:	mov	w0, #0x0                   	// #0
   370a8:	ldp	x23, x24, [sp, #48]
   370ac:	ldp	x25, x26, [sp, #64]
   370b0:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   370b4:	mov	w0, #0x0                   	// #0
   370b8:	ldp	x23, x24, [sp, #48]
   370bc:	ldp	x25, x26, [sp, #64]
   370c0:	b	3703c <__asan_internal_strnlen@@Base+0x434>
   370c4:	ldr	w5, [x3]
   370c8:	cmp	w5, #0xe
   370cc:	b.hi	37110 <__asan_internal_strnlen@@Base+0x508>  // b.pmore
   370d0:	ldr	x4, [x0]
   370d4:	ldr	x6, [x2]
   370d8:	sub	x1, x1, x4
   370dc:	cmp	x1, #0x3
   370e0:	b.le	37118 <__asan_internal_strnlen@@Base+0x510>
   370e4:	mov	x1, x4
   370e8:	ldr	w4, [x1], #4
   370ec:	lsl	x4, x4, x5
   370f0:	orr	x4, x4, x6
   370f4:	prfm	pldl1strm, [x1]
   370f8:	str	x1, [x0]
   370fc:	str	x4, [x2]
   37100:	add	w5, w5, #0x20
   37104:	str	w5, [x3]
   37108:	mov	w0, #0x1                   	// #1
   3710c:	ret
   37110:	mov	w0, #0x1                   	// #1
   37114:	b	3710c <__asan_internal_strnlen@@Base+0x504>
   37118:	mov	w0, #0x0                   	// #0
   3711c:	b	3710c <__asan_internal_strnlen@@Base+0x504>
   37120:	stp	x29, x30, [sp, #-240]!
   37124:	mov	x29, sp
   37128:	stp	x19, x20, [sp, #16]
   3712c:	stp	x21, x22, [sp, #32]
   37130:	stp	x23, x24, [sp, #48]
   37134:	stp	x25, x26, [sp, #64]
   37138:	mov	x21, x0
   3713c:	str	x1, [sp, #120]
   37140:	str	x2, [sp, #112]
   37144:	mov	x19, x3
   37148:	mov	x20, x4
   3714c:	str	x0, [sp, #200]
   37150:	add	x23, x0, x1
   37154:	add	x0, x3, x4
   37158:	str	x0, [sp, #104]
   3715c:	cmp	x1, #0x4
   37160:	b.le	37d1c <__asan_internal_strnlen@@Base+0x1114>
   37164:	mov	x22, x3
   37168:	mov	x0, x21
   3716c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   37170:	add	x1, x1, #0x8d8
   37174:	str	x1, [sp, #144]
   37178:	add	x1, x1, #0x200
   3717c:	str	x1, [sp, #152]
   37180:	ldrb	w1, [x0]
   37184:	and	w2, w1, #0xf
   37188:	cmp	w2, #0x8
   3718c:	b.ne	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.any
   37190:	cmp	w1, #0x7f
   37194:	b.hi	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.pmore
   37198:	ldrb	w2, [x0, #1]
   3719c:	tbnz	w2, #5, 37c70 <__asan_internal_strnlen@@Base+0x1068>
   371a0:	orr	w1, w2, w1, lsl #8
   371a4:	sxtw	x1, w1
   371a8:	mov	x2, #0x4211                	// #16913
   371ac:	movk	x2, #0x2108, lsl #16
   371b0:	movk	x2, #0x1084, lsl #32
   371b4:	movk	x2, #0x842, lsl #48
   371b8:	umulh	x3, x1, x2
   371bc:	sub	x2, x1, x3
   371c0:	add	x2, x3, x2, lsr #1
   371c4:	lsr	x2, x2, #4
   371c8:	lsl	x3, x2, #5
   371cc:	sub	x2, x3, x2
   371d0:	cmp	x1, x2
   371d4:	b.ne	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.any
   371d8:	add	x0, x0, #0x2
   371dc:	str	x0, [sp, #200]
   371e0:	str	xzr, [sp, #208]
   371e4:	str	wzr, [sp, #196]
   371e8:	tst	x0, #0x3
   371ec:	b.eq	3721c <__asan_internal_strnlen@@Base+0x614>  // b.none
   371f0:	ldr	w1, [sp, #196]
   371f4:	ldrb	w2, [x0], #1
   371f8:	lsl	x3, x2, x1
   371fc:	ldr	x2, [sp, #208]
   37200:	orr	x2, x2, x3
   37204:	str	x2, [sp, #208]
   37208:	add	w1, w1, #0x8
   3720c:	str	w1, [sp, #196]
   37210:	str	x0, [sp, #200]
   37214:	tst	x0, #0x3
   37218:	b.ne	371f0 <__asan_internal_strnlen@@Base+0x5e8>  // b.any
   3721c:	add	x25, sp, #0xc4
   37220:	add	x24, sp, #0xd0
   37224:	mov	x3, x25
   37228:	mov	x2, x24
   3722c:	mov	x1, x23
   37230:	add	x0, sp, #0xc8
   37234:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37238:	cbz	w0, 37c70 <__asan_internal_strnlen@@Base+0x1068>
   3723c:	ldr	x0, [sp, #208]
   37240:	str	x0, [sp, #160]
   37244:	ubfx	w1, w0, #1, #2
   37248:	lsr	x0, x0, #3
   3724c:	str	x0, [sp, #208]
   37250:	ldr	w2, [sp, #196]
   37254:	sub	w0, w2, #0x3
   37258:	str	w0, [sp, #196]
   3725c:	cmp	w1, #0x3
   37260:	b.eq	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.none
   37264:	cbz	w1, 375c0 <__asan_internal_strnlen@@Base+0x9b8>
   37268:	stp	x27, x28, [sp, #80]
   3726c:	cmp	w1, #0x1
   37270:	b.eq	378e8 <__asan_internal_strnlen@@Base+0xce0>  // b.none
   37274:	mov	x3, x25
   37278:	mov	x2, x24
   3727c:	mov	x1, x23
   37280:	add	x0, sp, #0xc8
   37284:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37288:	cbz	w0, 37c2c <__asan_internal_strnlen@@Base+0x1024>
   3728c:	ldr	x0, [sp, #208]
   37290:	and	w27, w0, #0x1f
   37294:	add	w27, w27, #0x101
   37298:	ubfx	w28, w0, #5, #5
   3729c:	add	w28, w28, #0x1
   372a0:	ubfx	w26, w0, #10, #4
   372a4:	add	w26, w26, #0x4
   372a8:	lsr	x0, x0, #14
   372ac:	str	x0, [sp, #208]
   372b0:	ldr	w0, [sp, #196]
   372b4:	sub	w0, w0, #0xe
   372b8:	str	w0, [sp, #196]
   372bc:	cmp	w27, #0x11e
   372c0:	ccmp	w28, #0x1e, #0x2, ls  // ls = plast
   372c4:	b.hi	37c34 <__asan_internal_strnlen@@Base+0x102c>  // b.pmore
   372c8:	mov	x2, #0x13                  	// #19
   372cc:	mov	w1, #0x0                   	// #0
   372d0:	add	x0, sp, #0xd8
   372d4:	bl	6860 <__asan_internal_memset@plt>
   372d8:	mov	x3, x25
   372dc:	mov	x2, x24
   372e0:	mov	x1, x23
   372e4:	add	x0, sp, #0xc8
   372e8:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   372ec:	cbz	w0, 37c3c <__asan_internal_strnlen@@Base+0x1034>
   372f0:	ldr	x0, [sp, #208]
   372f4:	and	w1, w0, #0x7
   372f8:	strb	w1, [sp, #232]
   372fc:	ubfx	w1, w0, #3, #3
   37300:	strb	w1, [sp, #233]
   37304:	ubfx	w1, w0, #6, #3
   37308:	strb	w1, [sp, #234]
   3730c:	ubfx	w1, w0, #9, #3
   37310:	strb	w1, [sp, #216]
   37314:	lsr	x2, x0, #12
   37318:	str	x2, [sp, #208]
   3731c:	ldr	w1, [sp, #196]
   37320:	sub	w3, w1, #0xc
   37324:	str	w3, [sp, #196]
   37328:	cmp	w26, #0x4
   3732c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37330:	and	w2, w2, #0x7
   37334:	strb	w2, [sp, #224]
   37338:	lsr	x0, x0, #15
   3733c:	str	x0, [sp, #208]
   37340:	sub	w1, w1, #0xf
   37344:	str	w1, [sp, #196]
   37348:	cmp	w26, #0x5
   3734c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37350:	mov	x3, x25
   37354:	mov	x2, x24
   37358:	mov	x1, x23
   3735c:	add	x0, sp, #0xc8
   37360:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37364:	cbz	w0, 37c44 <__asan_internal_strnlen@@Base+0x103c>
   37368:	ldr	x0, [sp, #208]
   3736c:	and	w1, w0, #0x7
   37370:	strb	w1, [sp, #223]
   37374:	lsr	x2, x0, #3
   37378:	str	x2, [sp, #208]
   3737c:	ldr	w1, [sp, #196]
   37380:	sub	w3, w1, #0x3
   37384:	str	w3, [sp, #196]
   37388:	cmp	w26, #0x6
   3738c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37390:	and	w2, w2, #0x7
   37394:	strb	w2, [sp, #225]
   37398:	lsr	x2, x0, #6
   3739c:	str	x2, [sp, #208]
   373a0:	sub	w3, w1, #0x6
   373a4:	str	w3, [sp, #196]
   373a8:	cmp	w26, #0x7
   373ac:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   373b0:	and	w2, w2, #0x7
   373b4:	strb	w2, [sp, #222]
   373b8:	lsr	x2, x0, #9
   373bc:	str	x2, [sp, #208]
   373c0:	sub	w3, w1, #0x9
   373c4:	str	w3, [sp, #196]
   373c8:	cmp	w26, #0x8
   373cc:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   373d0:	and	w2, w2, #0x7
   373d4:	strb	w2, [sp, #226]
   373d8:	lsr	x2, x0, #12
   373dc:	str	x2, [sp, #208]
   373e0:	sub	w3, w1, #0xc
   373e4:	str	w3, [sp, #196]
   373e8:	cmp	w26, #0x9
   373ec:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   373f0:	and	w2, w2, #0x7
   373f4:	strb	w2, [sp, #221]
   373f8:	lsr	x0, x0, #15
   373fc:	str	x0, [sp, #208]
   37400:	sub	w1, w1, #0xf
   37404:	str	w1, [sp, #196]
   37408:	cmp	w26, #0xa
   3740c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37410:	mov	x3, x25
   37414:	mov	x2, x24
   37418:	mov	x1, x23
   3741c:	add	x0, sp, #0xc8
   37420:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37424:	cbz	w0, 37c4c <__asan_internal_strnlen@@Base+0x1044>
   37428:	ldr	x0, [sp, #208]
   3742c:	and	w1, w0, #0x7
   37430:	strb	w1, [sp, #227]
   37434:	lsr	x2, x0, #3
   37438:	str	x2, [sp, #208]
   3743c:	ldr	w1, [sp, #196]
   37440:	sub	w3, w1, #0x3
   37444:	str	w3, [sp, #196]
   37448:	cmp	w26, #0xb
   3744c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37450:	and	w2, w2, #0x7
   37454:	strb	w2, [sp, #220]
   37458:	lsr	x2, x0, #6
   3745c:	str	x2, [sp, #208]
   37460:	sub	w3, w1, #0x6
   37464:	str	w3, [sp, #196]
   37468:	cmp	w26, #0xc
   3746c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37470:	and	w2, w2, #0x7
   37474:	strb	w2, [sp, #228]
   37478:	lsr	x2, x0, #9
   3747c:	str	x2, [sp, #208]
   37480:	sub	w3, w1, #0x9
   37484:	str	w3, [sp, #196]
   37488:	cmp	w26, #0xd
   3748c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37490:	and	w2, w2, #0x7
   37494:	strb	w2, [sp, #219]
   37498:	lsr	x2, x0, #12
   3749c:	str	x2, [sp, #208]
   374a0:	sub	w3, w1, #0xc
   374a4:	str	w3, [sp, #196]
   374a8:	cmp	w26, #0xe
   374ac:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   374b0:	and	w2, w2, #0x7
   374b4:	strb	w2, [sp, #229]
   374b8:	lsr	x0, x0, #15
   374bc:	str	x0, [sp, #208]
   374c0:	sub	w1, w1, #0xf
   374c4:	str	w1, [sp, #196]
   374c8:	cmp	w26, #0xf
   374cc:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   374d0:	mov	x3, x25
   374d4:	mov	x2, x24
   374d8:	mov	x1, x23
   374dc:	add	x0, sp, #0xc8
   374e0:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   374e4:	cbz	w0, 37c54 <__asan_internal_strnlen@@Base+0x104c>
   374e8:	ldr	x0, [sp, #208]
   374ec:	and	w1, w0, #0x7
   374f0:	strb	w1, [sp, #218]
   374f4:	lsr	x2, x0, #3
   374f8:	str	x2, [sp, #208]
   374fc:	ldr	w1, [sp, #196]
   37500:	sub	w3, w1, #0x3
   37504:	str	w3, [sp, #196]
   37508:	cmp	w26, #0x10
   3750c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37510:	and	w2, w2, #0x7
   37514:	strb	w2, [sp, #230]
   37518:	lsr	x2, x0, #6
   3751c:	str	x2, [sp, #208]
   37520:	sub	w3, w1, #0x6
   37524:	str	w3, [sp, #196]
   37528:	cmp	w26, #0x11
   3752c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37530:	and	w2, w2, #0x7
   37534:	strb	w2, [sp, #217]
   37538:	lsr	x2, x0, #9
   3753c:	str	x2, [sp, #208]
   37540:	sub	w3, w1, #0x9
   37544:	str	w3, [sp, #196]
   37548:	cmp	w26, #0x12
   3754c:	b.eq	37568 <__asan_internal_strnlen@@Base+0x960>  // b.none
   37550:	and	w2, w2, #0x7
   37554:	strb	w2, [sp, #231]
   37558:	lsr	x0, x0, #12
   3755c:	str	x0, [sp, #208]
   37560:	sub	w1, w1, #0xc
   37564:	str	w1, [sp, #196]
   37568:	ldr	x26, [sp, #112]
   3756c:	mov	x3, x26
   37570:	mov	x2, x26
   37574:	mov	x1, #0x13                  	// #19
   37578:	add	x0, sp, #0xd8
   3757c:	bl	36c88 <__asan_internal_strnlen@@Base+0x80>
   37580:	cbz	w0, 37c5c <__asan_internal_strnlen@@Base+0x1054>
   37584:	add	x0, x26, #0x1, lsl #12
   37588:	add	x0, x0, #0x278
   3758c:	str	x0, [sp, #136]
   37590:	mov	w1, w27
   37594:	str	x1, [sp, #168]
   37598:	mov	w2, w28
   3759c:	str	x2, [sp, #184]
   375a0:	add	x28, x1, x2
   375a4:	add	x28, x0, x28
   375a8:	cmp	x0, x28
   375ac:	b.cs	37890 <__asan_internal_strnlen@@Base+0xc88>  // b.hs, b.nlast
   375b0:	mov	x26, x0
   375b4:	add	x0, sp, #0xc8
   375b8:	str	x0, [sp, #128]
   375bc:	b	37718 <__asan_internal_strnlen@@Base+0xb10>
   375c0:	cmp	w0, #0x8
   375c4:	b.ls	375ec <__asan_internal_strnlen@@Base+0x9e4>  // b.plast
   375c8:	ldr	x1, [sp, #200]
   375cc:	sub	w0, w0, #0x8
   375d0:	cmp	w0, #0x8
   375d4:	b.hi	375cc <__asan_internal_strnlen@@Base+0x9c4>  // b.pmore
   375d8:	sub	w2, w2, #0xc
   375dc:	lsr	w2, w2, #3
   375e0:	mvn	x2, x2
   375e4:	add	x2, x1, x2
   375e8:	str	x2, [sp, #200]
   375ec:	str	xzr, [sp, #208]
   375f0:	str	wzr, [sp, #196]
   375f4:	ldr	x1, [sp, #200]
   375f8:	sub	x0, x23, x1
   375fc:	cmp	x0, #0x3
   37600:	b.le	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37604:	ldrb	w0, [x1, #1]
   37608:	ldrb	w26, [x1]
   3760c:	bfi	w26, w0, #8, #24
   37610:	ldrb	w2, [x1, #3]
   37614:	ldrb	w0, [x1, #2]
   37618:	bfi	w0, w2, #8, #24
   3761c:	add	x1, x1, #0x4
   37620:	str	x1, [sp, #200]
   37624:	mvn	w0, w0
   37628:	cmp	w26, w0, uxth
   3762c:	b.ne	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.any
   37630:	sub	x0, x23, x1
   37634:	cmp	w26, w0
   37638:	b.hi	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.pmore
   3763c:	ldr	x0, [sp, #104]
   37640:	sub	x0, x0, x22
   37644:	cmp	w26, w0
   37648:	b.hi	37c70 <__asan_internal_strnlen@@Base+0x1068>  // b.pmore
   3764c:	and	x26, x26, #0xffff
   37650:	mov	x2, x26
   37654:	mov	x0, x22
   37658:	bl	67d0 <__asan_internal_memcpy@plt>
   3765c:	add	x22, x22, x26
   37660:	ldr	x0, [sp, #200]
   37664:	add	x26, x0, x26
   37668:	str	x26, [sp, #200]
   3766c:	tst	x26, #0x3
   37670:	b.eq	376a0 <__asan_internal_strnlen@@Base+0xa98>  // b.none
   37674:	ldr	w0, [sp, #196]
   37678:	ldrb	w1, [x26], #1
   3767c:	lsl	x2, x1, x0
   37680:	ldr	x1, [sp, #208]
   37684:	orr	x1, x1, x2
   37688:	str	x1, [sp, #208]
   3768c:	add	w0, w0, #0x8
   37690:	str	w0, [sp, #196]
   37694:	str	x26, [sp, #200]
   37698:	tst	x26, #0x3
   3769c:	b.ne	37674 <__asan_internal_strnlen@@Base+0xa6c>  // b.any
   376a0:	ldr	x0, [sp, #160]
   376a4:	tbz	w0, #0, 37224 <__asan_internal_strnlen@@Base+0x61c>
   376a8:	ldr	x0, [sp, #200]
   376ac:	sub	x1, x23, x0
   376b0:	cmp	x1, #0x4
   376b4:	b.gt	37180 <__asan_internal_strnlen@@Base+0x578>
   376b8:	b	37d20 <__asan_internal_strnlen@@Base+0x1118>
   376bc:	cmp	w3, #0x10
   376c0:	b.eq	37778 <__asan_internal_strnlen@@Base+0xb70>  // b.none
   376c4:	cmp	w3, #0x11
   376c8:	b.eq	377e8 <__asan_internal_strnlen@@Base+0xbe0>  // b.none
   376cc:	cmp	w3, #0x12
   376d0:	b.ne	37ca4 <__asan_internal_strnlen@@Base+0x109c>  // b.any
   376d4:	and	w27, w0, #0x7f
   376d8:	add	w27, w27, #0xb
   376dc:	lsr	x0, x0, #7
   376e0:	str	x0, [sp, #208]
   376e4:	sub	w1, w1, #0x8
   376e8:	str	w1, [sp, #196]
   376ec:	sub	x0, x28, x26
   376f0:	cmp	w27, w0
   376f4:	b.hi	37cac <__asan_internal_strnlen@@Base+0x10a4>  // b.pmore
   376f8:	mov	w27, w27
   376fc:	mov	x2, x27
   37700:	mov	w1, #0x0                   	// #0
   37704:	mov	x0, x26
   37708:	bl	6860 <__asan_internal_memset@plt>
   3770c:	add	x26, x26, x27
   37710:	cmp	x26, x28
   37714:	b.cs	37890 <__asan_internal_strnlen@@Base+0xc88>  // b.hs, b.nlast
   37718:	mov	x3, x25
   3771c:	mov	x2, x24
   37720:	mov	x1, x23
   37724:	ldr	x0, [sp, #128]
   37728:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   3772c:	cbz	w0, 37c64 <__asan_internal_strnlen@@Base+0x105c>
   37730:	ldr	x0, [sp, #208]
   37734:	and	x1, x0, #0xff
   37738:	ldr	x2, [sp, #112]
   3773c:	ldrh	w2, [x2, x1, lsl #1]
   37740:	tbnz	w2, #12, 37c6c <__asan_internal_strnlen@@Base+0x1064>
   37744:	ubfx	x3, x2, #9, #3
   37748:	add	w1, w3, #0x1
   3774c:	lsr	x0, x0, x1
   37750:	str	x0, [sp, #208]
   37754:	ldr	w1, [sp, #196]
   37758:	sub	w1, w1, w3
   3775c:	sub	w3, w1, #0x1
   37760:	str	w3, [sp, #196]
   37764:	and	w3, w2, #0x1ff
   37768:	tst	w2, #0x1f0
   3776c:	b.ne	376bc <__asan_internal_strnlen@@Base+0xab4>  // b.any
   37770:	strb	w3, [x26], #1
   37774:	b	37710 <__asan_internal_strnlen@@Base+0xb08>
   37778:	ldr	x2, [sp, #136]
   3777c:	cmp	x26, x2
   37780:	b.eq	37c8c <__asan_internal_strnlen@@Base+0x1084>  // b.none
   37784:	and	w2, w0, #0x3
   37788:	add	w2, w2, #0x3
   3778c:	lsr	x0, x0, #2
   37790:	str	x0, [sp, #208]
   37794:	sub	w1, w1, #0x3
   37798:	str	w1, [sp, #196]
   3779c:	sub	x0, x28, x26
   377a0:	cmp	w2, w0
   377a4:	b.hi	37c94 <__asan_internal_strnlen@@Base+0x108c>  // b.pmore
   377a8:	ldurb	w0, [x26, #-1]
   377ac:	cmp	w2, #0x5
   377b0:	b.eq	377cc <__asan_internal_strnlen@@Base+0xbc4>  // b.none
   377b4:	cmp	w2, #0x6
   377b8:	b.eq	377c8 <__asan_internal_strnlen@@Base+0xbc0>  // b.none
   377bc:	cmp	w2, #0x4
   377c0:	b.ne	377d4 <__asan_internal_strnlen@@Base+0xbcc>  // b.any
   377c4:	b	377d0 <__asan_internal_strnlen@@Base+0xbc8>
   377c8:	strb	w0, [x26], #1
   377cc:	strb	w0, [x26], #1
   377d0:	strb	w0, [x26], #1
   377d4:	strb	w0, [x26]
   377d8:	strb	w0, [x26, #1]
   377dc:	strb	w0, [x26, #2]
   377e0:	add	x26, x26, #0x3
   377e4:	b	37710 <__asan_internal_strnlen@@Base+0xb08>
   377e8:	and	w2, w0, #0x7
   377ec:	add	w2, w2, #0x3
   377f0:	lsr	x0, x0, #3
   377f4:	str	x0, [sp, #208]
   377f8:	sub	w1, w1, #0x4
   377fc:	str	w1, [sp, #196]
   37800:	sub	x0, x28, x26
   37804:	cmp	w2, w0
   37808:	b.hi	37c9c <__asan_internal_strnlen@@Base+0x1094>  // b.pmore
   3780c:	cmp	w2, #0x7
   37810:	b.eq	37888 <__asan_internal_strnlen@@Base+0xc80>  // b.none
   37814:	b.hi	3785c <__asan_internal_strnlen@@Base+0xc54>  // b.pmore
   37818:	cmp	w2, #0x5
   3781c:	b.eq	3782c <__asan_internal_strnlen@@Base+0xc24>  // b.none
   37820:	cmp	w2, #0x6
   37824:	b.ne	37834 <__asan_internal_strnlen@@Base+0xc2c>  // b.any
   37828:	strb	wzr, [x26], #1
   3782c:	strb	wzr, [x26], #1
   37830:	b	37840 <__asan_internal_strnlen@@Base+0xc38>
   37834:	mov	x0, x26
   37838:	cmp	w2, #0x4
   3783c:	b.ne	37848 <__asan_internal_strnlen@@Base+0xc40>  // b.any
   37840:	mov	x0, x26
   37844:	strb	wzr, [x0], #1
   37848:	strb	wzr, [x0]
   3784c:	strb	wzr, [x0, #1]
   37850:	add	x26, x0, #0x3
   37854:	strb	wzr, [x0, #2]
   37858:	b	37710 <__asan_internal_strnlen@@Base+0xb08>
   3785c:	cmp	w2, #0x9
   37860:	b.eq	37870 <__asan_internal_strnlen@@Base+0xc68>  // b.none
   37864:	cmp	w2, #0xa
   37868:	b.ne	37878 <__asan_internal_strnlen@@Base+0xc70>  // b.any
   3786c:	strb	wzr, [x26], #1
   37870:	strb	wzr, [x26], #1
   37874:	b	37884 <__asan_internal_strnlen@@Base+0xc7c>
   37878:	mov	x0, x26
   3787c:	cmp	w2, #0x8
   37880:	b.ne	37848 <__asan_internal_strnlen@@Base+0xc40>  // b.any
   37884:	strb	wzr, [x26], #1
   37888:	strb	wzr, [x26], #1
   3788c:	b	37828 <__asan_internal_strnlen@@Base+0xc20>
   37890:	ldr	x26, [sp, #112]
   37894:	add	x0, x26, #0x1, lsl #12
   37898:	ldrb	w0, [x0, #888]
   3789c:	cbz	w0, 37cb4 <__asan_internal_strnlen@@Base+0x10ac>
   378a0:	mov	x3, x26
   378a4:	mov	x2, x26
   378a8:	ldr	x28, [sp, #168]
   378ac:	mov	x1, x28
   378b0:	ldr	x27, [sp, #136]
   378b4:	mov	x0, x27
   378b8:	bl	36c88 <__asan_internal_strnlen@@Base+0x80>
   378bc:	cbz	w0, 37cbc <__asan_internal_strnlen@@Base+0x10b4>
   378c0:	add	x2, x26, #0x800
   378c4:	str	x2, [sp, #176]
   378c8:	mov	x3, x2
   378cc:	mov	x2, x26
   378d0:	ldr	x1, [sp, #184]
   378d4:	add	x0, x27, x28
   378d8:	bl	36c88 <__asan_internal_strnlen@@Base+0x80>
   378dc:	cbz	w0, 37cc4 <__asan_internal_strnlen@@Base+0x10bc>
   378e0:	str	x26, [sp, #136]
   378e4:	b	378f8 <__asan_internal_strnlen@@Base+0xcf0>
   378e8:	ldr	x0, [sp, #144]
   378ec:	str	x0, [sp, #176]
   378f0:	ldr	x0, [sp, #152]
   378f4:	str	x0, [sp, #136]
   378f8:	add	x0, sp, #0xc8
   378fc:	str	x0, [sp, #128]
   37900:	b	37954 <__asan_internal_strnlen@@Base+0xd4c>
   37904:	mov	w2, #0x1                   	// #1
   37908:	lsl	w1, w2, w1
   3790c:	sub	w1, w1, #0x1
   37910:	and	x1, x1, x0, lsr #8
   37914:	add	w26, w26, #0x100
   37918:	add	x1, x1, w26, sxtw
   3791c:	ldr	x2, [sp, #136]
   37920:	ldrh	w26, [x2, x1, lsl #1]
   37924:	ubfx	x1, x26, #9, #3
   37928:	and	w26, w26, #0x1ff
   3792c:	add	w2, w1, #0x8
   37930:	lsr	x0, x0, x2
   37934:	str	x0, [sp, #208]
   37938:	ldr	w0, [sp, #196]
   3793c:	sub	w0, w0, #0x8
   37940:	sub	w0, w0, w1
   37944:	str	w0, [sp, #196]
   37948:	b	379a4 <__asan_internal_strnlen@@Base+0xd9c>
   3794c:	strb	w26, [x22], #1
   37950:	prfm	pstl1keep, [x22]
   37954:	mov	x3, x25
   37958:	mov	x2, x24
   3795c:	mov	x1, x23
   37960:	ldr	x0, [sp, #128]
   37964:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37968:	cbz	w0, 37ccc <__asan_internal_strnlen@@Base+0x10c4>
   3796c:	ldr	x0, [sp, #208]
   37970:	and	x1, x0, #0xff
   37974:	ldr	x2, [sp, #136]
   37978:	ldrh	w2, [x2, x1, lsl #1]
   3797c:	ubfx	x1, x2, #9, #3
   37980:	and	w26, w2, #0x1ff
   37984:	tbnz	w2, #12, 37904 <__asan_internal_strnlen@@Base+0xcfc>
   37988:	add	w2, w1, #0x1
   3798c:	lsr	x0, x0, x2
   37990:	str	x0, [sp, #208]
   37994:	ldr	w0, [sp, #196]
   37998:	sub	w0, w0, #0x1
   3799c:	sub	w1, w0, w1
   379a0:	str	w1, [sp, #196]
   379a4:	cmp	w26, #0xff
   379a8:	b.hi	379c0 <__asan_internal_strnlen@@Base+0xdb8>  // b.pmore
   379ac:	ldr	x0, [sp, #104]
   379b0:	cmp	x0, x22
   379b4:	b.ne	3794c <__asan_internal_strnlen@@Base+0xd44>  // b.any
   379b8:	ldp	x27, x28, [sp, #80]
   379bc:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   379c0:	cmp	w26, #0x100
   379c4:	b.eq	37c24 <__asan_internal_strnlen@@Base+0x101c>  // b.none
   379c8:	cmp	w26, #0x108
   379cc:	b.hi	37a5c <__asan_internal_strnlen@@Base+0xe54>  // b.pmore
   379d0:	sub	w28, w26, #0xfe
   379d4:	mov	x3, x25
   379d8:	mov	x2, x24
   379dc:	mov	x1, x23
   379e0:	ldr	x0, [sp, #128]
   379e4:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   379e8:	cbz	w0, 37ce4 <__asan_internal_strnlen@@Base+0x10dc>
   379ec:	ldr	x0, [sp, #208]
   379f0:	and	x1, x0, #0xff
   379f4:	ldr	x2, [sp, #176]
   379f8:	ldrh	w2, [x2, x1, lsl #1]
   379fc:	ubfx	x1, x2, #9, #3
   37a00:	and	w26, w2, #0x1ff
   37a04:	tbnz	w2, #12, 37adc <__asan_internal_strnlen@@Base+0xed4>
   37a08:	add	w2, w1, #0x1
   37a0c:	lsr	x0, x0, x2
   37a10:	str	x0, [sp, #208]
   37a14:	ldr	w0, [sp, #196]
   37a18:	sub	w0, w0, #0x1
   37a1c:	sub	w1, w0, w1
   37a20:	str	w1, [sp, #196]
   37a24:	cbnz	w26, 37b24 <__asan_internal_strnlen@@Base+0xf1c>
   37a28:	cmp	x19, x22
   37a2c:	b.eq	37cec <__asan_internal_strnlen@@Base+0x10e4>  // b.none
   37a30:	ldr	x0, [sp, #104]
   37a34:	sub	x0, x0, x22
   37a38:	cmp	w28, w0
   37a3c:	b.hi	37cf4 <__asan_internal_strnlen@@Base+0x10ec>  // b.pmore
   37a40:	mov	w28, w28
   37a44:	mov	x2, x28
   37a48:	ldurb	w1, [x22, #-1]
   37a4c:	mov	x0, x22
   37a50:	bl	6860 <__asan_internal_memset@plt>
   37a54:	add	x22, x22, x28
   37a58:	b	37954 <__asan_internal_strnlen@@Base+0xd4c>
   37a5c:	cmp	w26, #0x11d
   37a60:	b.eq	37ad4 <__asan_internal_strnlen@@Base+0xecc>  // b.none
   37a64:	b.hi	37cd4 <__asan_internal_strnlen@@Base+0x10cc>  // b.pmore
   37a68:	mov	x3, x25
   37a6c:	mov	x2, x24
   37a70:	mov	x1, x23
   37a74:	ldr	x0, [sp, #128]
   37a78:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37a7c:	cbz	w0, 37cdc <__asan_internal_strnlen@@Base+0x10d4>
   37a80:	sub	w26, w26, #0x109
   37a84:	lsr	w1, w26, #2
   37a88:	add	w2, w1, #0x1
   37a8c:	and	w26, w26, #0x3
   37a90:	lsl	w0, w26, w2
   37a94:	add	w0, w0, #0xb
   37a98:	ldr	x3, [sp, #208]
   37a9c:	mov	w4, #0x1                   	// #1
   37aa0:	lsl	w1, w4, w1
   37aa4:	sub	w1, w1, #0x1
   37aa8:	mov	w4, #0xffffffff            	// #-1
   37aac:	lsl	w4, w4, w2
   37ab0:	bic	w4, w3, w4
   37ab4:	add	w1, w4, w1, lsl #3
   37ab8:	add	w28, w1, w0
   37abc:	lsr	x3, x3, x2
   37ac0:	str	x3, [sp, #208]
   37ac4:	ldr	w0, [sp, #196]
   37ac8:	sub	w2, w0, w2
   37acc:	str	w2, [sp, #196]
   37ad0:	b	379d4 <__asan_internal_strnlen@@Base+0xdcc>
   37ad4:	mov	w28, #0x102                 	// #258
   37ad8:	b	379d4 <__asan_internal_strnlen@@Base+0xdcc>
   37adc:	mov	w2, #0x1                   	// #1
   37ae0:	lsl	w1, w2, w1
   37ae4:	sub	w1, w1, #0x1
   37ae8:	and	x1, x1, x0, lsr #8
   37aec:	add	w26, w26, #0x100
   37af0:	add	x1, x1, w26, sxtw
   37af4:	ldr	x2, [sp, #176]
   37af8:	ldrh	w26, [x2, x1, lsl #1]
   37afc:	ubfx	x1, x26, #9, #3
   37b00:	and	w26, w26, #0x1ff
   37b04:	add	w2, w1, #0x8
   37b08:	lsr	x0, x0, x2
   37b0c:	str	x0, [sp, #208]
   37b10:	ldr	w0, [sp, #196]
   37b14:	sub	w0, w0, #0x8
   37b18:	sub	w0, w0, w1
   37b1c:	str	w0, [sp, #196]
   37b20:	b	37a24 <__asan_internal_strnlen@@Base+0xe1c>
   37b24:	cmp	w26, #0x1d
   37b28:	b.hi	37cfc <__asan_internal_strnlen@@Base+0x10f4>  // b.pmore
   37b2c:	cmp	w26, #0x3
   37b30:	b.hi	37b78 <__asan_internal_strnlen@@Base+0xf70>  // b.pmore
   37b34:	add	w26, w26, #0x1
   37b38:	sub	x0, x22, x19
   37b3c:	cmp	w26, w0
   37b40:	b.hi	37d0c <__asan_internal_strnlen@@Base+0x1104>  // b.pmore
   37b44:	ldr	x0, [sp, #104]
   37b48:	sub	x0, x0, x22
   37b4c:	cmp	w28, w0
   37b50:	b.hi	37d14 <__asan_internal_strnlen@@Base+0x110c>  // b.pmore
   37b54:	cmp	w28, w26
   37b58:	b.hi	37be4 <__asan_internal_strnlen@@Base+0xfdc>  // b.pmore
   37b5c:	mov	w27, w28
   37b60:	mov	x2, x27
   37b64:	sub	x1, x22, w26, uxtw
   37b68:	mov	x0, x22
   37b6c:	bl	67d0 <__asan_internal_memcpy@plt>
   37b70:	add	x22, x22, x27
   37b74:	b	37954 <__asan_internal_strnlen@@Base+0xd4c>
   37b78:	mov	x3, x25
   37b7c:	mov	x2, x24
   37b80:	mov	x1, x23
   37b84:	ldr	x0, [sp, #128]
   37b88:	bl	370c4 <__asan_internal_strnlen@@Base+0x4bc>
   37b8c:	cbz	w0, 37d04 <__asan_internal_strnlen@@Base+0x10fc>
   37b90:	sub	w26, w26, #0x4
   37b94:	lsr	w1, w26, #1
   37b98:	add	w2, w1, #0x1
   37b9c:	and	w26, w26, #0x1
   37ba0:	lsl	w0, w26, w2
   37ba4:	add	w0, w0, #0x5
   37ba8:	ldr	x3, [sp, #208]
   37bac:	mov	w4, #0x1                   	// #1
   37bb0:	lsl	w1, w4, w1
   37bb4:	sub	w1, w1, #0x1
   37bb8:	mov	w4, #0xffffffff            	// #-1
   37bbc:	lsl	w4, w4, w2
   37bc0:	bic	w4, w3, w4
   37bc4:	add	w1, w4, w1, lsl #2
   37bc8:	add	w26, w1, w0
   37bcc:	lsr	x3, x3, x2
   37bd0:	str	x3, [sp, #208]
   37bd4:	ldr	w0, [sp, #196]
   37bd8:	sub	w2, w0, w2
   37bdc:	str	w2, [sp, #196]
   37be0:	b	37b38 <__asan_internal_strnlen@@Base+0xf30>
   37be4:	mov	w0, w26
   37be8:	str	x0, [sp, #184]
   37bec:	cmp	w28, w26
   37bf0:	csel	w0, w28, w26, ls  // ls = plast
   37bf4:	str	w0, [sp, #168]
   37bf8:	csel	w27, w28, w26, ls  // ls = plast
   37bfc:	mov	x2, x27
   37c00:	ldr	x1, [sp, #184]
   37c04:	sub	x1, x22, x1
   37c08:	mov	x0, x22
   37c0c:	bl	67d0 <__asan_internal_memcpy@plt>
   37c10:	add	x22, x22, x27
   37c14:	ldr	w0, [sp, #168]
   37c18:	subs	w28, w28, w0
   37c1c:	b.ne	37bec <__asan_internal_strnlen@@Base+0xfe4>  // b.any
   37c20:	b	37954 <__asan_internal_strnlen@@Base+0xd4c>
   37c24:	ldp	x27, x28, [sp, #80]
   37c28:	b	376a0 <__asan_internal_strnlen@@Base+0xa98>
   37c2c:	ldp	x27, x28, [sp, #80]
   37c30:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c34:	ldp	x27, x28, [sp, #80]
   37c38:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c3c:	ldp	x27, x28, [sp, #80]
   37c40:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c44:	ldp	x27, x28, [sp, #80]
   37c48:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c4c:	ldp	x27, x28, [sp, #80]
   37c50:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c54:	ldp	x27, x28, [sp, #80]
   37c58:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c5c:	ldp	x27, x28, [sp, #80]
   37c60:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c64:	ldp	x27, x28, [sp, #80]
   37c68:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c6c:	ldp	x27, x28, [sp, #80]
   37c70:	mov	w0, #0x0                   	// #0
   37c74:	ldp	x19, x20, [sp, #16]
   37c78:	ldp	x21, x22, [sp, #32]
   37c7c:	ldp	x23, x24, [sp, #48]
   37c80:	ldp	x25, x26, [sp, #64]
   37c84:	ldp	x29, x30, [sp], #240
   37c88:	ret
   37c8c:	ldp	x27, x28, [sp, #80]
   37c90:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c94:	ldp	x27, x28, [sp, #80]
   37c98:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37c9c:	ldp	x27, x28, [sp, #80]
   37ca0:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37ca4:	ldp	x27, x28, [sp, #80]
   37ca8:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cac:	ldp	x27, x28, [sp, #80]
   37cb0:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cb4:	ldp	x27, x28, [sp, #80]
   37cb8:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cbc:	ldp	x27, x28, [sp, #80]
   37cc0:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cc4:	ldp	x27, x28, [sp, #80]
   37cc8:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37ccc:	ldp	x27, x28, [sp, #80]
   37cd0:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cd4:	ldp	x27, x28, [sp, #80]
   37cd8:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cdc:	ldp	x27, x28, [sp, #80]
   37ce0:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37ce4:	ldp	x27, x28, [sp, #80]
   37ce8:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cec:	ldp	x27, x28, [sp, #80]
   37cf0:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cf4:	ldp	x27, x28, [sp, #80]
   37cf8:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37cfc:	ldp	x27, x28, [sp, #80]
   37d00:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37d04:	ldp	x27, x28, [sp, #80]
   37d08:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37d0c:	ldp	x27, x28, [sp, #80]
   37d10:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37d14:	ldp	x27, x28, [sp, #80]
   37d18:	b	37c70 <__asan_internal_strnlen@@Base+0x1068>
   37d1c:	mov	x22, x3
   37d20:	ldr	x0, [sp, #104]
   37d24:	cmp	x0, x22
   37d28:	b.ne	37fb8 <__asan_internal_strnlen@@Base+0x13b0>  // b.any
   37d2c:	ldr	x1, [sp, #120]
   37d30:	sub	x0, x1, #0x4
   37d34:	add	x0, x21, x0
   37d38:	add	x21, x21, x1
   37d3c:	mov	w9, #0x0                   	// #0
   37d40:	ldrb	w1, [x0], #1
   37d44:	orr	w9, w1, w9, lsl #8
   37d48:	cmp	x21, x0
   37d4c:	b.ne	37d40 <__asan_internal_strnlen@@Base+0x1138>  // b.any
   37d50:	mov	w5, #0x0                   	// #0
   37d54:	mov	w3, #0x1                   	// #1
   37d58:	mov	x0, #0x15af                	// #5551
   37d5c:	cmp	x20, x0
   37d60:	b.ls	37fac <__asan_internal_strnlen@@Base+0x13a4>  // b.plast
   37d64:	mov	x13, #0x15b0                	// #5552
   37d68:	mov	w15, #0x8071                	// #32881
   37d6c:	movk	w15, #0x8007, lsl #16
   37d70:	mov	w14, #0xfff1                	// #65521
   37d74:	mov	x17, x0
   37d78:	mov	x2, x19
   37d7c:	add	x16, x19, x13
   37d80:	ldrb	w0, [x2]
   37d84:	add	w0, w0, w3
   37d88:	ldrb	w1, [x2, #1]
   37d8c:	add	w1, w1, w0
   37d90:	ldrb	w6, [x2, #2]
   37d94:	add	w6, w6, w1
   37d98:	ldrb	w25, [x2, #3]
   37d9c:	add	w25, w25, w6
   37da0:	ldrb	w4, [x2, #4]
   37da4:	add	w4, w4, w25
   37da8:	ldrb	w24, [x2, #5]
   37dac:	add	w24, w24, w4
   37db0:	ldrb	w12, [x2, #6]
   37db4:	add	w12, w12, w24
   37db8:	ldrb	w23, [x2, #7]
   37dbc:	add	w23, w23, w12
   37dc0:	ldrb	w11, [x2, #8]
   37dc4:	add	w11, w11, w23
   37dc8:	ldrb	w22, [x2, #9]
   37dcc:	add	w22, w22, w11
   37dd0:	ldrb	w10, [x2, #10]
   37dd4:	add	w10, w10, w22
   37dd8:	ldrb	w21, [x2, #11]
   37ddc:	add	w21, w21, w10
   37de0:	ldrb	w8, [x2, #12]
   37de4:	add	w8, w8, w21
   37de8:	ldrb	w18, [x2, #13]
   37dec:	add	w18, w18, w8
   37df0:	ldrb	w7, [x2, #14]
   37df4:	add	w7, w7, w18
   37df8:	add	x2, x2, #0x10
   37dfc:	ldurb	w3, [x2, #-1]
   37e00:	add	w3, w3, w7
   37e04:	add	w1, w0, w1
   37e08:	add	w6, w6, w25
   37e0c:	add	w1, w1, w6
   37e10:	add	w4, w4, w24
   37e14:	add	w1, w1, w4
   37e18:	add	w12, w12, w23
   37e1c:	add	w1, w1, w12
   37e20:	add	w0, w11, w22
   37e24:	add	w0, w1, w0
   37e28:	add	w10, w10, w21
   37e2c:	add	w0, w0, w10
   37e30:	add	w8, w8, w18
   37e34:	add	w0, w0, w8
   37e38:	add	w7, w7, w3
   37e3c:	add	w0, w0, w7
   37e40:	add	w5, w5, w0
   37e44:	cmp	x2, x16
   37e48:	b.ne	37d80 <__asan_internal_strnlen@@Base+0x1178>  // b.any
   37e4c:	add	x19, x19, x13
   37e50:	sub	x20, x20, x13
   37e54:	umull	x0, w3, w15
   37e58:	lsr	x0, x0, #47
   37e5c:	msub	w3, w0, w14, w3
   37e60:	umull	x0, w5, w15
   37e64:	lsr	x0, x0, #47
   37e68:	msub	w5, w0, w14, w5
   37e6c:	cmp	x20, x17
   37e70:	b.hi	37d78 <__asan_internal_strnlen@@Base+0x1170>  // b.pmore
   37e74:	cmp	x20, #0xf
   37e78:	b.ls	37f5c <__asan_internal_strnlen@@Base+0x1354>  // b.plast
   37e7c:	sub	x12, x20, #0x10
   37e80:	and	x12, x12, #0xfffffffffffffff0
   37e84:	add	x12, x12, #0x10
   37e88:	add	x12, x19, x12
   37e8c:	ldrb	w0, [x19]
   37e90:	add	w0, w0, w3
   37e94:	ldrb	w1, [x19, #1]
   37e98:	add	w1, w1, w0
   37e9c:	ldrb	w11, [x19, #2]
   37ea0:	add	w11, w11, w1
   37ea4:	ldrb	w18, [x19, #3]
   37ea8:	add	w18, w18, w11
   37eac:	ldrb	w10, [x19, #4]
   37eb0:	add	w10, w10, w18
   37eb4:	ldrb	w17, [x19, #5]
   37eb8:	add	w17, w17, w10
   37ebc:	ldrb	w8, [x19, #6]
   37ec0:	add	w8, w8, w17
   37ec4:	ldrb	w16, [x19, #7]
   37ec8:	add	w16, w16, w8
   37ecc:	ldrb	w7, [x19, #8]
   37ed0:	add	w7, w7, w16
   37ed4:	ldrb	w15, [x19, #9]
   37ed8:	add	w15, w15, w7
   37edc:	ldrb	w6, [x19, #10]
   37ee0:	add	w6, w6, w15
   37ee4:	ldrb	w14, [x19, #11]
   37ee8:	add	w14, w14, w6
   37eec:	ldrb	w4, [x19, #12]
   37ef0:	add	w4, w4, w14
   37ef4:	ldrb	w13, [x19, #13]
   37ef8:	add	w13, w13, w4
   37efc:	ldrb	w2, [x19, #14]
   37f00:	add	w2, w2, w13
   37f04:	add	x19, x19, #0x10
   37f08:	ldurb	w3, [x19, #-1]
   37f0c:	add	w3, w3, w2
   37f10:	add	w1, w0, w1
   37f14:	add	w11, w11, w18
   37f18:	add	w1, w1, w11
   37f1c:	add	w10, w10, w17
   37f20:	add	w1, w1, w10
   37f24:	add	w8, w8, w16
   37f28:	add	w1, w1, w8
   37f2c:	add	w0, w7, w15
   37f30:	add	w0, w1, w0
   37f34:	add	w6, w6, w14
   37f38:	add	w0, w0, w6
   37f3c:	add	w4, w4, w13
   37f40:	add	w0, w0, w4
   37f44:	add	w2, w2, w3
   37f48:	add	w0, w0, w2
   37f4c:	add	w5, w5, w0
   37f50:	cmp	x12, x19
   37f54:	b.ne	37e8c <__asan_internal_strnlen@@Base+0x1284>  // b.any
   37f58:	and	x20, x20, #0xf
   37f5c:	cbz	x20, 37f78 <__asan_internal_strnlen@@Base+0x1370>
   37f60:	add	x20, x19, x20
   37f64:	ldrb	w0, [x19], #1
   37f68:	add	w3, w3, w0
   37f6c:	add	w5, w5, w3
   37f70:	cmp	x19, x20
   37f74:	b.ne	37f64 <__asan_internal_strnlen@@Base+0x135c>  // b.any
   37f78:	mov	w0, #0x8071                	// #32881
   37f7c:	movk	w0, #0x8007, lsl #16
   37f80:	umull	x1, w5, w0
   37f84:	lsr	x1, x1, #47
   37f88:	mov	w2, #0xfff1                	// #65521
   37f8c:	msub	w5, w1, w2, w5
   37f90:	umull	x0, w3, w0
   37f94:	lsr	x0, x0, #47
   37f98:	msub	w3, w0, w2, w3
   37f9c:	add	w3, w3, w5, lsl #16
   37fa0:	cmp	w3, w9
   37fa4:	cset	w0, eq  // eq = none
   37fa8:	b	37c74 <__asan_internal_strnlen@@Base+0x106c>
   37fac:	mov	w5, #0x0                   	// #0
   37fb0:	mov	w3, #0x1                   	// #1
   37fb4:	b	37e74 <__asan_internal_strnlen@@Base+0x126c>
   37fb8:	mov	w0, #0x0                   	// #0
   37fbc:	b	37c74 <__asan_internal_strnlen@@Base+0x106c>
   37fc0:	stp	x29, x30, [sp, #-112]!
   37fc4:	mov	x29, sp
   37fc8:	stp	x23, x24, [sp, #48]
   37fcc:	str	x5, [sp, #104]
   37fd0:	str	xzr, [x6]
   37fd4:	str	xzr, [x7]
   37fd8:	mov	w24, #0x1                   	// #1
   37fdc:	cmp	x2, #0xb
   37fe0:	b.hi	37ff4 <__asan_internal_strnlen@@Base+0x13ec>  // b.pmore
   37fe4:	mov	w0, w24
   37fe8:	ldp	x23, x24, [sp, #48]
   37fec:	ldp	x29, x30, [sp], #112
   37ff0:	ret
   37ff4:	stp	x19, x20, [sp, #16]
   37ff8:	stp	x21, x22, [sp, #32]
   37ffc:	stp	x25, x26, [sp, #64]
   38000:	stp	x27, x28, [sp, #80]
   38004:	mov	x26, x0
   38008:	mov	x22, x1
   3800c:	mov	x23, x2
   38010:	mov	x25, x3
   38014:	mov	x27, x4
   38018:	mov	x20, x6
   3801c:	mov	x21, x7
   38020:	mov	x2, #0x4                   	// #4
   38024:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38028:	add	x1, x1, #0x6c0
   3802c:	mov	x0, x22
   38030:	bl	6c20 <__asan_internal_memcmp@plt>
   38034:	mov	w24, w0
   38038:	cbnz	w0, 380c4 <__asan_internal_strnlen@@Base+0x14bc>
   3803c:	add	x0, x22, #0x4
   38040:	add	x2, x22, #0xc
   38044:	mov	x19, #0x0                   	// #0
   38048:	ldrb	w1, [x0], #1
   3804c:	orr	x19, x1, x19, lsl #8
   38050:	cmp	x0, x2
   38054:	b.ne	38048 <__asan_internal_strnlen@@Base+0x1440>  // b.any
   38058:	ldr	x28, [x20]
   3805c:	cbz	x28, 3806c <__asan_internal_strnlen@@Base+0x1464>
   38060:	ldr	x0, [x21]
   38064:	cmp	x0, x19
   38068:	b.cs	38088 <__asan_internal_strnlen@@Base+0x1480>  // b.hs, b.nlast
   3806c:	ldr	x3, [sp, #104]
   38070:	mov	x2, x27
   38074:	mov	x1, x19
   38078:	mov	x0, x26
   3807c:	bl	68c0 <__asan_backtrace_alloc@plt>
   38080:	mov	x28, x0
   38084:	cbz	x0, 380dc <__asan_internal_strnlen@@Base+0x14d4>
   38088:	mov	x4, x19
   3808c:	mov	x3, x28
   38090:	mov	x2, x25
   38094:	sub	x1, x23, #0xc
   38098:	add	x0, x22, #0xc
   3809c:	bl	37120 <__asan_internal_strnlen@@Base+0x518>
   380a0:	mov	w24, #0x1                   	// #1
   380a4:	cbz	w0, 380f0 <__asan_internal_strnlen@@Base+0x14e8>
   380a8:	str	x28, [x20]
   380ac:	str	x19, [x21]
   380b0:	ldp	x19, x20, [sp, #16]
   380b4:	ldp	x21, x22, [sp, #32]
   380b8:	ldp	x25, x26, [sp, #64]
   380bc:	ldp	x27, x28, [sp, #80]
   380c0:	b	37fe4 <__asan_internal_strnlen@@Base+0x13dc>
   380c4:	mov	w24, #0x1                   	// #1
   380c8:	ldp	x19, x20, [sp, #16]
   380cc:	ldp	x21, x22, [sp, #32]
   380d0:	ldp	x25, x26, [sp, #64]
   380d4:	ldp	x27, x28, [sp, #80]
   380d8:	b	37fe4 <__asan_internal_strnlen@@Base+0x13dc>
   380dc:	ldp	x19, x20, [sp, #16]
   380e0:	ldp	x21, x22, [sp, #32]
   380e4:	ldp	x25, x26, [sp, #64]
   380e8:	ldp	x27, x28, [sp, #80]
   380ec:	b	37fe4 <__asan_internal_strnlen@@Base+0x13dc>
   380f0:	ldp	x19, x20, [sp, #16]
   380f4:	ldp	x21, x22, [sp, #32]
   380f8:	ldp	x25, x26, [sp, #64]
   380fc:	ldp	x27, x28, [sp, #80]
   38100:	b	37fe4 <__asan_internal_strnlen@@Base+0x13dc>
   38104:	stp	x29, x30, [sp, #-144]!
   38108:	mov	x29, sp
   3810c:	stp	x19, x20, [sp, #16]
   38110:	stp	x21, x22, [sp, #32]
   38114:	stp	x23, x24, [sp, #48]
   38118:	stp	x25, x26, [sp, #64]
   3811c:	stp	x27, x28, [sp, #80]
   38120:	mov	x23, x0
   38124:	str	x1, [sp, #104]
   38128:	mov	x22, x2
   3812c:	str	x3, [sp, #112]
   38130:	mov	x25, x4
   38134:	mov	x20, x6
   38138:	mov	x21, x7
   3813c:	str	x5, [sp, #120]
   38140:	mov	x0, x5
   38144:	bl	67e0 <__asan_internal_strlen@plt>
   38148:	mov	x24, x0
   3814c:	add	x28, x22, x25
   38150:	add	x27, x28, x0
   38154:	add	x26, x27, #0x1
   38158:	mov	x3, x21
   3815c:	mov	x2, x20
   38160:	mov	x1, x26
   38164:	mov	x0, x23
   38168:	bl	68c0 <__asan_backtrace_alloc@plt>
   3816c:	cbz	x0, 381f4 <__asan_internal_strnlen@@Base+0x15ec>
   38170:	mov	x19, x0
   38174:	mov	x2, x22
   38178:	ldr	x1, [sp, #104]
   3817c:	bl	67d0 <__asan_internal_memcpy@plt>
   38180:	mov	x2, x25
   38184:	ldr	x1, [sp, #112]
   38188:	add	x0, x19, x22
   3818c:	bl	67d0 <__asan_internal_memcpy@plt>
   38190:	mov	x2, x24
   38194:	ldr	x1, [sp, #120]
   38198:	add	x0, x19, x28
   3819c:	bl	67d0 <__asan_internal_memcpy@plt>
   381a0:	strb	wzr, [x19, x27]
   381a4:	add	x3, sp, #0x8c
   381a8:	mov	x2, x21
   381ac:	mov	x1, x20
   381b0:	mov	x0, x19
   381b4:	bl	6d40 <__asan_backtrace_open@plt>
   381b8:	mov	w22, w0
   381bc:	mov	x4, x21
   381c0:	mov	x3, x20
   381c4:	mov	x2, x26
   381c8:	mov	x1, x19
   381cc:	mov	x0, x23
   381d0:	bl	6bc0 <__asan_backtrace_free@plt>
   381d4:	mov	w0, w22
   381d8:	ldp	x19, x20, [sp, #16]
   381dc:	ldp	x21, x22, [sp, #32]
   381e0:	ldp	x23, x24, [sp, #48]
   381e4:	ldp	x25, x26, [sp, #64]
   381e8:	ldp	x27, x28, [sp, #80]
   381ec:	ldp	x29, x30, [sp], #144
   381f0:	ret
   381f4:	mov	w22, #0xffffffff            	// #-1
   381f8:	b	381d4 <__asan_internal_strnlen@@Base+0x15cc>
   381fc:	stp	x29, x30, [sp, #-288]!
   38200:	mov	x29, sp
   38204:	stp	x19, x20, [sp, #16]
   38208:	stp	x21, x22, [sp, #32]
   3820c:	stp	x23, x24, [sp, #48]
   38210:	stp	x25, x26, [sp, #64]
   38214:	stp	x27, x28, [sp, #80]
   38218:	mov	x24, x0
   3821c:	mov	x21, x1
   38220:	str	x2, [sp, #96]
   38224:	str	w3, [sp, #108]
   38228:	mov	x22, x4
   3822c:	mov	x23, x5
   38230:	mov	x28, #0x0                   	// #0
   38234:	mov	x27, #0x0                   	// #0
   38238:	add	x0, sp, #0xa0
   3823c:	str	x0, [sp, #120]
   38240:	b	38404 <__asan_internal_strnlen@@Base+0x17fc>
   38244:	mov	x4, x23
   38248:	mov	x3, x22
   3824c:	mov	x2, x25
   38250:	mov	x1, x19
   38254:	mov	x0, x24
   38258:	bl	6bc0 <__asan_backtrace_free@plt>
   3825c:	mov	w1, #0x2f                  	// #47
   38260:	mov	x0, x21
   38264:	bl	6ab0 <strrchr@plt>
   38268:	cbz	x0, 38430 <__asan_internal_strnlen@@Base+0x1828>
   3826c:	add	x0, x0, #0x1
   38270:	sub	x19, x0, x21
   38274:	mov	x7, x23
   38278:	mov	x6, x22
   3827c:	ldr	x5, [sp, #96]
   38280:	mov	x4, #0x0                   	// #0
   38284:	adrp	x3, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   38288:	add	x3, x3, #0x9e0
   3828c:	mov	x2, x19
   38290:	mov	x1, x21
   38294:	mov	x0, x24
   38298:	bl	38104 <__asan_internal_strnlen@@Base+0x14fc>
   3829c:	mov	w20, w0
   382a0:	tbnz	w0, #31, 38440 <__asan_internal_strnlen@@Base+0x1838>
   382a4:	cmp	x28, #0x0
   382a8:	ccmp	x27, #0x0, #0x4, ne  // ne = any
   382ac:	b.ne	384c4 <__asan_internal_strnlen@@Base+0x18bc>  // b.any
   382b0:	ldr	w0, [sp, #108]
   382b4:	cbnz	w0, 384e8 <__asan_internal_strnlen@@Base+0x18e0>
   382b8:	mov	w0, w20
   382bc:	ldp	x19, x20, [sp, #16]
   382c0:	ldp	x21, x22, [sp, #32]
   382c4:	ldp	x23, x24, [sp, #48]
   382c8:	ldp	x25, x26, [sp, #64]
   382cc:	ldp	x27, x28, [sp, #80]
   382d0:	ldp	x29, x30, [sp], #288
   382d4:	ret
   382d8:	mov	x4, x23
   382dc:	mov	x3, x22
   382e0:	mov	x2, x25
   382e4:	mov	x1, x19
   382e8:	mov	x0, x24
   382ec:	bl	6bc0 <__asan_backtrace_free@plt>
   382f0:	lsl	x25, x25, #1
   382f4:	mov	x3, x23
   382f8:	mov	x2, x22
   382fc:	mov	x1, x25
   38300:	mov	x0, x24
   38304:	bl	68c0 <__asan_backtrace_alloc@plt>
   38308:	mov	x19, x0
   3830c:	cbz	x0, 3825c <__asan_internal_strnlen@@Base+0x1654>
   38310:	mov	x2, x25
   38314:	mov	x1, x0
   38318:	mov	x0, x21
   3831c:	bl	66c0 <readlink@plt>
   38320:	tbnz	x0, #63, 38244 <__asan_internal_strnlen@@Base+0x163c>
   38324:	sub	x2, x25, #0x1
   38328:	cmp	x2, x0
   3832c:	b.ls	382d8 <__asan_internal_strnlen@@Base+0x16d0>  // b.plast
   38330:	strb	wzr, [x19, x0]
   38334:	ldrb	w0, [x19]
   38338:	cmp	w0, #0x2f
   3833c:	b.eq	383dc <__asan_internal_strnlen@@Base+0x17d4>  // b.none
   38340:	mov	w1, #0x2f                  	// #47
   38344:	mov	x0, x21
   38348:	bl	6ab0 <strrchr@plt>
   3834c:	cbz	x0, 383dc <__asan_internal_strnlen@@Base+0x17d4>
   38350:	add	x0, x0, #0x1
   38354:	sub	x20, x0, x21
   38358:	mov	x0, x19
   3835c:	bl	67e0 <__asan_internal_strlen@plt>
   38360:	add	x1, x20, #0x1
   38364:	add	x0, x1, x0
   38368:	mov	x3, x23
   3836c:	mov	x2, x22
   38370:	str	x0, [sp, #112]
   38374:	mov	x1, x0
   38378:	mov	x0, x24
   3837c:	bl	68c0 <__asan_backtrace_alloc@plt>
   38380:	mov	x26, x0
   38384:	cbz	x0, 385b8 <__asan_internal_strnlen@@Base+0x19b0>
   38388:	mov	x2, x20
   3838c:	mov	x1, x21
   38390:	bl	67d0 <__asan_internal_memcpy@plt>
   38394:	add	x20, x26, x20
   38398:	mov	x0, x19
   3839c:	bl	67e0 <__asan_internal_strlen@plt>
   383a0:	mov	x2, x0
   383a4:	mov	x1, x19
   383a8:	mov	x0, x20
   383ac:	bl	67d0 <__asan_internal_memcpy@plt>
   383b0:	mov	x0, x19
   383b4:	bl	67e0 <__asan_internal_strlen@plt>
   383b8:	strb	wzr, [x20, x0]
   383bc:	mov	x4, x23
   383c0:	mov	x3, x22
   383c4:	mov	x2, x25
   383c8:	mov	x1, x19
   383cc:	mov	x0, x24
   383d0:	bl	6bc0 <__asan_backtrace_free@plt>
   383d4:	ldr	x25, [sp, #112]
   383d8:	mov	x19, x26
   383dc:	cbz	x27, 383f8 <__asan_internal_strnlen@@Base+0x17f0>
   383e0:	mov	x4, x23
   383e4:	mov	x3, x22
   383e8:	mov	x2, x28
   383ec:	mov	x1, x27
   383f0:	mov	x0, x24
   383f4:	bl	6bc0 <__asan_backtrace_free@plt>
   383f8:	mov	x28, x25
   383fc:	mov	x27, x19
   38400:	mov	x21, x19
   38404:	ldr	x2, [sp, #120]
   38408:	mov	x1, x21
   3840c:	mov	w0, #0x0                   	// #0
   38410:	bl	6bd0 <__lxstat@plt>
   38414:	tbnz	w0, #31, 3825c <__asan_internal_strnlen@@Base+0x1654>
   38418:	ldr	w0, [sp, #176]
   3841c:	and	w0, w0, #0xf000
   38420:	cmp	w0, #0xa, lsl #12
   38424:	b.ne	3825c <__asan_internal_strnlen@@Base+0x1654>  // b.any
   38428:	mov	x25, #0x80                  	// #128
   3842c:	b	382f4 <__asan_internal_strnlen@@Base+0x16ec>
   38430:	mov	x19, #0x0                   	// #0
   38434:	adrp	x21, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   38438:	add	x21, x21, #0x9e0
   3843c:	b	38274 <__asan_internal_strnlen@@Base+0x166c>
   38440:	adrp	x20, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38444:	add	x20, x20, #0x6c8
   38448:	mov	x0, x20
   3844c:	bl	67e0 <__asan_internal_strlen@plt>
   38450:	mov	x7, x23
   38454:	mov	x6, x22
   38458:	ldr	x5, [sp, #96]
   3845c:	mov	x4, x0
   38460:	mov	x3, x20
   38464:	mov	x2, x19
   38468:	mov	x1, x21
   3846c:	mov	x0, x24
   38470:	bl	38104 <__asan_internal_strnlen@@Base+0x14fc>
   38474:	mov	w20, w0
   38478:	tbz	w0, #31, 382a4 <__asan_internal_strnlen@@Base+0x169c>
   3847c:	adrp	x20, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38480:	add	x20, x20, #0x6d0
   38484:	mov	x0, x20
   38488:	bl	67e0 <__asan_internal_strlen@plt>
   3848c:	mov	x7, x23
   38490:	mov	x6, x22
   38494:	ldr	x5, [sp, #96]
   38498:	mov	x4, x19
   3849c:	mov	x3, x21
   384a0:	mov	x2, x0
   384a4:	mov	x1, x20
   384a8:	mov	x0, x24
   384ac:	bl	38104 <__asan_internal_strnlen@@Base+0x14fc>
   384b0:	cmp	w0, #0x0
   384b4:	csinv	w20, w0, wzr, ge  // ge = tcont
   384b8:	cmp	x27, #0x0
   384bc:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   384c0:	b.eq	384dc <__asan_internal_strnlen@@Base+0x18d4>  // b.none
   384c4:	mov	x4, x23
   384c8:	mov	x3, x22
   384cc:	mov	x2, x28
   384d0:	mov	x1, x27
   384d4:	mov	x0, x24
   384d8:	bl	6bc0 <__asan_backtrace_free@plt>
   384dc:	tbz	w20, #31, 382b0 <__asan_internal_strnlen@@Base+0x16a8>
   384e0:	mov	w20, #0xffffffff            	// #-1
   384e4:	b	382b8 <__asan_internal_strnlen@@Base+0x16b0>
   384e8:	add	x2, sp, #0xa0
   384ec:	mov	w1, w20
   384f0:	mov	w0, #0x0                   	// #0
   384f4:	bl	6660 <__fxstat@plt>
   384f8:	tbnz	w0, #31, 38588 <__asan_internal_strnlen@@Base+0x1980>
   384fc:	add	x6, sp, #0x88
   38500:	mov	x5, x23
   38504:	mov	x4, x22
   38508:	ldr	x3, [sp, #208]
   3850c:	mov	x2, #0x0                   	// #0
   38510:	mov	w1, w20
   38514:	mov	x0, x24
   38518:	bl	6ae0 <__asan_backtrace_get_view@plt>
   3851c:	cbz	w0, 385a0 <__asan_internal_strnlen@@Base+0x1998>
   38520:	ldr	x1, [sp, #136]
   38524:	ldr	x3, [sp, #208]
   38528:	add	x3, x1, x3
   3852c:	cmp	x1, x3
   38530:	b.cs	385d0 <__asan_internal_strnlen@@Base+0x19c8>  // b.hs, b.nlast
   38534:	mov	w19, #0xffffffff            	// #-1
   38538:	adrp	x2, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   3853c:	add	x2, x2, #0x8d8
   38540:	add	x2, x2, #0x4e0
   38544:	ldrb	w0, [x1], #1
   38548:	eor	w0, w0, w19
   3854c:	and	x0, x0, #0xff
   38550:	ldr	w0, [x2, x0, lsl #2]
   38554:	eor	w19, w0, w19, lsr #8
   38558:	cmp	x3, x1
   3855c:	b.ne	38544 <__asan_internal_strnlen@@Base+0x193c>  // b.any
   38560:	mov	x3, x23
   38564:	mov	x2, x22
   38568:	add	x1, sp, #0x88
   3856c:	mov	x0, x24
   38570:	bl	6760 <__asan_backtrace_release_view@plt>
   38574:	mvn	w19, w19
   38578:	ldr	w0, [sp, #108]
   3857c:	cmp	w0, w19
   38580:	b.eq	382b8 <__asan_internal_strnlen@@Base+0x16b0>  // b.none
   38584:	b	385a0 <__asan_internal_strnlen@@Base+0x1998>
   38588:	bl	6ac0 <__errno_location@plt>
   3858c:	ldr	w2, [x0]
   38590:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38594:	add	x1, x1, #0x6e0
   38598:	mov	x0, x23
   3859c:	blr	x22
   385a0:	mov	x2, x23
   385a4:	mov	x1, x22
   385a8:	mov	w0, w20
   385ac:	bl	6c90 <__asan_backtrace_close@plt>
   385b0:	mov	w20, #0xffffffff            	// #-1
   385b4:	b	382b8 <__asan_internal_strnlen@@Base+0x16b0>
   385b8:	cmp	x28, #0x0
   385bc:	ccmp	x27, #0x0, #0x4, ne  // ne = any
   385c0:	mov	w20, #0xffffffff            	// #-1
   385c4:	b.eq	382b8 <__asan_internal_strnlen@@Base+0x16b0>  // b.none
   385c8:	mov	w20, #0xffffffff            	// #-1
   385cc:	b	384c4 <__asan_internal_strnlen@@Base+0x18bc>
   385d0:	mov	x3, x23
   385d4:	mov	x2, x22
   385d8:	add	x1, sp, #0x88
   385dc:	mov	x0, x24
   385e0:	bl	6760 <__asan_backtrace_release_view@plt>
   385e4:	b	385a0 <__asan_internal_strnlen@@Base+0x1998>
   385e8:	sub	sp, sp, #0x420
   385ec:	stp	x29, x30, [sp, #80]
   385f0:	add	x29, sp, #0x50
   385f4:	stp	x19, x20, [sp, #96]
   385f8:	stp	x21, x22, [sp, #112]
   385fc:	stp	x23, x24, [sp, #128]
   38600:	stp	x25, x26, [sp, #144]
   38604:	stp	x27, x28, [sp, #160]
   38608:	mov	x21, x0
   3860c:	str	x1, [sp, #208]
   38610:	mov	w23, w2
   38614:	str	x3, [sp, #184]
   38618:	mov	x19, x4
   3861c:	mov	x20, x5
   38620:	str	x6, [sp, #192]
   38624:	str	x7, [sp, #200]
   38628:	ldr	w0, [sp, #1080]
   3862c:	cbnz	w0, 3863c <__asan_internal_strnlen@@Base+0x1a34>
   38630:	str	wzr, [x7]
   38634:	ldr	x0, [sp, #1056]
   38638:	str	wzr, [x0]
   3863c:	add	x6, sp, #0x408
   38640:	mov	x5, x20
   38644:	mov	x4, x19
   38648:	mov	x3, #0x40                  	// #64
   3864c:	mov	x2, #0x0                   	// #0
   38650:	mov	w1, w23
   38654:	mov	x0, x21
   38658:	bl	6ae0 <__asan_backtrace_get_view@plt>
   3865c:	mov	w22, w0
   38660:	mov	w26, w0
   38664:	cbnz	w0, 386e0 <__asan_internal_strnlen@@Base+0x1ad8>
   38668:	mov	x24, #0x0                   	// #0
   3866c:	mov	w27, #0x0                   	// #0
   38670:	mov	w25, #0x0                   	// #0
   38674:	str	wzr, [sp, #176]
   38678:	mov	w28, #0x0                   	// #0
   3867c:	cbnz	w28, 3974c <__asan_internal_strnlen@@Base+0x2b44>
   38680:	cbnz	w22, 39764 <__asan_internal_strnlen@@Base+0x2b5c>
   38684:	cbnz	w25, 3977c <__asan_internal_strnlen@@Base+0x2b74>
   38688:	cbnz	w27, 39794 <__asan_internal_strnlen@@Base+0x2b8c>
   3868c:	ldr	w0, [sp, #176]
   38690:	cbnz	w0, 397ac <__asan_internal_strnlen@@Base+0x2ba4>
   38694:	cbnz	w26, 397c4 <__asan_internal_strnlen@@Base+0x2bbc>
   38698:	cbz	x24, 386b0 <__asan_internal_strnlen@@Base+0x1aa8>
   3869c:	mov	x3, x20
   386a0:	mov	x2, x19
   386a4:	add	x1, x24, #0x18
   386a8:	mov	x0, x21
   386ac:	bl	6760 <__asan_backtrace_release_view@plt>
   386b0:	mov	w25, #0x0                   	// #0
   386b4:	cmn	w23, #0x1
   386b8:	b.ne	397dc <__asan_internal_strnlen@@Base+0x2bd4>  // b.any
   386bc:	mov	w0, w25
   386c0:	ldp	x19, x20, [sp, #96]
   386c4:	ldp	x21, x22, [sp, #112]
   386c8:	ldp	x23, x24, [sp, #128]
   386cc:	ldp	x25, x26, [sp, #144]
   386d0:	ldp	x27, x28, [sp, #160]
   386d4:	ldp	x29, x30, [sp, #80]
   386d8:	add	sp, sp, #0x420
   386dc:	ret
   386e0:	mov	x2, #0x40                  	// #64
   386e4:	ldr	x1, [sp, #1032]
   386e8:	add	x0, sp, #0x3c8
   386ec:	bl	67d0 <__asan_internal_memcpy@plt>
   386f0:	mov	x3, x20
   386f4:	mov	x2, x19
   386f8:	add	x1, sp, #0x408
   386fc:	mov	x0, x21
   38700:	bl	6760 <__asan_backtrace_release_view@plt>
   38704:	mov	w0, #0x457f                	// #17791
   38708:	movk	w0, #0x464c, lsl #16
   3870c:	ldr	w1, [sp, #968]
   38710:	cmp	w1, w0
   38714:	b.eq	38738 <__asan_internal_strnlen@@Base+0x1b30>  // b.none
   38718:	mov	w2, #0x0                   	// #0
   3871c:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38720:	add	x1, x1, #0x6e8
   38724:	mov	x0, x20
   38728:	blr	x19
   3872c:	mov	w26, #0x0                   	// #0
   38730:	mov	w22, #0x0                   	// #0
   38734:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   38738:	ldrb	w0, [sp, #974]
   3873c:	cmp	w0, #0x1
   38740:	b.eq	38764 <__asan_internal_strnlen@@Base+0x1b5c>  // b.none
   38744:	mov	w2, #0x0                   	// #0
   38748:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   3874c:	add	x1, x1, #0x708
   38750:	mov	x0, x20
   38754:	blr	x19
   38758:	mov	w26, #0x0                   	// #0
   3875c:	mov	w22, #0x0                   	// #0
   38760:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   38764:	ldrb	w0, [sp, #972]
   38768:	cmp	w0, #0x2
   3876c:	b.eq	38790 <__asan_internal_strnlen@@Base+0x1b88>  // b.none
   38770:	mov	w2, #0x0                   	// #0
   38774:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38778:	add	x1, x1, #0x738
   3877c:	mov	x0, x20
   38780:	blr	x19
   38784:	mov	w26, #0x0                   	// #0
   38788:	mov	w22, #0x0                   	// #0
   3878c:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   38790:	ldrb	w0, [sp, #973]
   38794:	sub	w0, w0, #0x1
   38798:	and	w0, w0, #0xff
   3879c:	cmp	w0, #0x1
   387a0:	b.hi	3889c <__asan_internal_strnlen@@Base+0x1c94>  // b.pmore
   387a4:	ldr	w0, [sp, #1072]
   387a8:	cbz	w0, 387b8 <__asan_internal_strnlen@@Base+0x1bb0>
   387ac:	ldrh	w0, [sp, #984]
   387b0:	cmp	w0, #0x3
   387b4:	b.eq	397f0 <__asan_internal_strnlen@@Base+0x2be8>  // b.none
   387b8:	ldr	x25, [sp, #1008]
   387bc:	ldrh	w0, [sp, #1028]
   387c0:	str	w0, [sp, #216]
   387c4:	ldrh	w24, [sp, #1030]
   387c8:	cmp	w0, #0x0
   387cc:	mov	w0, #0xffff                	// #65535
   387d0:	ccmp	w24, w0, #0x4, ne  // ne = any
   387d4:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   387d8:	b.ne	388bc <__asan_internal_strnlen@@Base+0x1cb4>  // b.any
   387dc:	ldr	w27, [sp, #216]
   387e0:	sub	w3, w27, #0x1
   387e4:	add	x6, sp, #0x3b0
   387e8:	mov	x5, x20
   387ec:	mov	x4, x19
   387f0:	lsl	x3, x3, #6
   387f4:	add	x2, x25, #0x40
   387f8:	mov	w1, w23
   387fc:	mov	x0, x21
   38800:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38804:	mov	w22, w0
   38808:	mov	w26, w0
   3880c:	cbz	w0, 38668 <__asan_internal_strnlen@@Base+0x1a60>
   38810:	ldr	x22, [sp, #944]
   38814:	str	x22, [sp, #304]
   38818:	sub	w0, w24, #0x1
   3881c:	add	x0, x22, x0, lsl #6
   38820:	ldr	x1, [x0, #32]
   38824:	str	x1, [sp, #232]
   38828:	add	x6, sp, #0x398
   3882c:	mov	x5, x20
   38830:	mov	x4, x19
   38834:	mov	x3, x1
   38838:	ldr	x2, [x0, #24]
   3883c:	mov	w1, w23
   38840:	mov	x0, x21
   38844:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38848:	mov	w26, w0
   3884c:	cbnz	w0, 38940 <__asan_internal_strnlen@@Base+0x1d38>
   38850:	mov	w27, w0
   38854:	mov	w25, w0
   38858:	str	w0, [sp, #176]
   3885c:	mov	w22, w0
   38860:	mov	w28, w0
   38864:	mov	x24, #0x0                   	// #0
   38868:	mov	x3, x20
   3886c:	mov	x2, x19
   38870:	add	x1, sp, #0x3b0
   38874:	mov	x0, x21
   38878:	bl	6760 <__asan_backtrace_release_view@plt>
   3887c:	cbz	w26, 3867c <__asan_internal_strnlen@@Base+0x1a74>
   38880:	mov	x3, x20
   38884:	mov	x2, x19
   38888:	add	x1, sp, #0x398
   3888c:	mov	x0, x21
   38890:	bl	6760 <__asan_backtrace_release_view@plt>
   38894:	mov	w26, #0x0                   	// #0
   38898:	b	3867c <__asan_internal_strnlen@@Base+0x1a74>
   3889c:	mov	w2, #0x0                   	// #0
   388a0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   388a4:	add	x1, x1, #0x760
   388a8:	mov	x0, x20
   388ac:	blr	x19
   388b0:	mov	w26, #0x0                   	// #0
   388b4:	mov	w22, #0x0                   	// #0
   388b8:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   388bc:	add	x6, sp, #0x178
   388c0:	mov	x5, x20
   388c4:	mov	x4, x19
   388c8:	mov	x3, #0x8                   	// #8
   388cc:	mov	x2, x25
   388d0:	mov	w1, w23
   388d4:	mov	x0, x21
   388d8:	bl	6ae0 <__asan_backtrace_get_view@plt>
   388dc:	mov	w22, w0
   388e0:	mov	w26, w0
   388e4:	cbz	w0, 38668 <__asan_internal_strnlen@@Base+0x1a60>
   388e8:	ldr	x0, [sp, #376]
   388ec:	ldr	w1, [sp, #216]
   388f0:	cbnz	w1, 38920 <__asan_internal_strnlen@@Base+0x1d18>
   388f4:	ldr	w1, [x0, #32]
   388f8:	str	w1, [sp, #216]
   388fc:	mov	w1, #0xffff                	// #65535
   38900:	cmp	w24, w1
   38904:	b.eq	38920 <__asan_internal_strnlen@@Base+0x1d18>  // b.none
   38908:	mov	x3, x20
   3890c:	mov	x2, x19
   38910:	add	x1, sp, #0x178
   38914:	mov	x0, x21
   38918:	bl	6760 <__asan_backtrace_release_view@plt>
   3891c:	b	387dc <__asan_internal_strnlen@@Base+0x1bd4>
   38920:	ldr	w24, [x0, #40]
   38924:	ldr	w0, [sp, #216]
   38928:	cmp	w24, w0
   3892c:	sub	w0, w24, #0x100
   38930:	mov	w1, #0xffff                	// #65535
   38934:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
   38938:	csel	w24, w0, w24, hi  // hi = pmore
   3893c:	b	38908 <__asan_internal_strnlen@@Base+0x1d00>
   38940:	ldr	x0, [sp, #920]
   38944:	str	x0, [sp, #240]
   38948:	mov	x2, #0x140                 	// #320
   3894c:	mov	w1, #0x0                   	// #0
   38950:	add	x0, sp, #0x258
   38954:	bl	6860 <__asan_internal_memset@plt>
   38958:	cmp	w27, #0x1
   3895c:	b.ls	3903c <__asan_internal_strnlen@@Base+0x2434>  // b.plast
   38960:	mov	x26, x22
   38964:	mov	x24, #0x0                   	// #0
   38968:	str	wzr, [sp, #344]
   3896c:	str	xzr, [sp, #328]
   38970:	str	xzr, [sp, #288]
   38974:	mov	w27, #0x0                   	// #0
   38978:	str	wzr, [sp, #324]
   3897c:	str	xzr, [sp, #312]
   38980:	mov	w25, #0x0                   	// #0
   38984:	str	wzr, [sp, #348]
   38988:	str	xzr, [sp, #336]
   3898c:	str	wzr, [sp, #176]
   38990:	mov	w22, #0x1                   	// #1
   38994:	str	wzr, [sp, #248]
   38998:	adrp	x0, 60000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   3899c:	add	x1, x0, #0xa80
   389a0:	add	x0, sp, #0x258
   389a4:	str	x0, [sp, #256]
   389a8:	add	x0, sp, #0x198
   389ac:	str	x0, [sp, #352]
   389b0:	add	x0, sp, #0x1b0
   389b4:	str	x0, [sp, #360]
   389b8:	str	w27, [sp, #224]
   389bc:	str	x24, [sp, #296]
   389c0:	str	x21, [sp, #264]
   389c4:	str	w23, [sp, #320]
   389c8:	str	x19, [sp, #272]
   389cc:	str	x20, [sp, #280]
   389d0:	ldr	w28, [sp, #1080]
   389d4:	mov	x23, x1
   389d8:	b	38a94 <__asan_internal_strnlen@@Base+0x1e8c>
   389dc:	str	w22, [sp, #248]
   389e0:	b	38aac <__asan_internal_strnlen@@Base+0x1ea4>
   389e4:	ldr	w27, [sp, #224]
   389e8:	ldr	x24, [sp, #296]
   389ec:	ldr	x21, [sp, #264]
   389f0:	ldr	w23, [sp, #320]
   389f4:	ldr	x19, [sp, #272]
   389f8:	ldr	x20, [sp, #280]
   389fc:	mov	w2, #0x0                   	// #0
   38a00:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38a04:	add	x1, x1, #0x788
   38a08:	mov	x0, x20
   38a0c:	blr	x19
   38a10:	mov	w22, #0x0                   	// #0
   38a14:	mov	w28, #0x0                   	// #0
   38a18:	mov	w26, #0x1                   	// #1
   38a1c:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   38a20:	sbfiz	x21, x19, #5, #32
   38a24:	ldr	x0, [x24, #24]
   38a28:	ldr	x1, [sp, #256]
   38a2c:	str	x0, [x1, x21]
   38a30:	ldr	x1, [x24, #32]
   38a34:	add	x0, sp, #0x260
   38a38:	str	x1, [x0, x21]
   38a3c:	ldr	x0, [x24, #8]
   38a40:	ubfx	w0, w0, #11, #1
   38a44:	add	x1, sp, #0x270
   38a48:	str	w0, [x1, x21]
   38a4c:	cmp	w28, #0x0
   38a50:	ldr	x0, [sp, #1088]
   38a54:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   38a58:	ldr	w0, [sp, #176]
   38a5c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   38a60:	b.eq	38ae8 <__asan_internal_strnlen@@Base+0x1ee0>  // b.none
   38a64:	orr	w19, w28, w25
   38a68:	cbz	w19, 38bdc <__asan_internal_strnlen@@Base+0x1fd4>
   38a6c:	ldr	w0, [sp, #224]
   38a70:	cbz	w0, 38c54 <__asan_internal_strnlen@@Base+0x204c>
   38a74:	ldrh	w0, [sp, #986]
   38a78:	cmp	w0, #0x15
   38a7c:	b.eq	38ccc <__asan_internal_strnlen@@Base+0x20c4>  // b.none
   38a80:	add	w22, w22, #0x1
   38a84:	add	x26, x26, #0x40
   38a88:	ldr	w0, [sp, #216]
   38a8c:	cmp	w0, w22
   38a90:	b.eq	38d3c <__asan_internal_strnlen@@Base+0x2134>  // b.none
   38a94:	mov	x24, x26
   38a98:	ldr	w0, [x26, #4]
   38a9c:	cmp	w0, #0x2
   38aa0:	b.eq	389dc <__asan_internal_strnlen@@Base+0x1dd4>  // b.none
   38aa4:	cmp	w0, #0xb
   38aa8:	csel	w27, w27, w22, ne  // ne = any
   38aac:	ldr	w20, [x24]
   38ab0:	ldr	x0, [sp, #232]
   38ab4:	cmp	x20, x0
   38ab8:	b.cs	389e4 <__asan_internal_strnlen@@Base+0x1ddc>  // b.hs, b.nlast
   38abc:	ldr	x0, [sp, #240]
   38ac0:	add	x20, x0, x20
   38ac4:	mov	x19, #0x0                   	// #0
   38ac8:	ldr	x1, [x23, x19, lsl #3]
   38acc:	mov	x0, x20
   38ad0:	bl	6b30 <__asan_internal_strcmp@plt>
   38ad4:	cbz	w0, 38a20 <__asan_internal_strnlen@@Base+0x1e18>
   38ad8:	add	x19, x19, #0x1
   38adc:	cmp	x19, #0xa
   38ae0:	b.ne	38ac8 <__asan_internal_strnlen@@Base+0x1ec0>  // b.any
   38ae4:	b	38a4c <__asan_internal_strnlen@@Base+0x1e44>
   38ae8:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38aec:	add	x1, x1, #0x7a8
   38af0:	mov	x0, x20
   38af4:	bl	6b30 <__asan_internal_strcmp@plt>
   38af8:	mov	w19, w0
   38afc:	str	wzr, [sp, #176]
   38b00:	cbnz	w0, 38a64 <__asan_internal_strnlen@@Base+0x1e5c>
   38b04:	add	x6, sp, #0x210
   38b08:	ldr	x5, [sp, #280]
   38b0c:	ldr	x4, [sp, #272]
   38b10:	ldr	x3, [x24, #32]
   38b14:	ldr	x2, [x24, #24]
   38b18:	ldr	w1, [sp, #320]
   38b1c:	ldr	x0, [sp, #264]
   38b20:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38b24:	cbz	w0, 397f8 <__asan_internal_strnlen@@Base+0x2bf0>
   38b28:	ldr	x21, [sp, #528]
   38b2c:	ldr	w0, [x21, #8]
   38b30:	cmp	w0, #0x3
   38b34:	b.eq	38b70 <__asan_internal_strnlen@@Base+0x1f68>  // b.none
   38b38:	ldr	w0, [sp, #1096]
   38b3c:	cbz	w0, 38bd0 <__asan_internal_strnlen@@Base+0x1fc8>
   38b40:	ldr	w0, [sp, #348]
   38b44:	ldr	w1, [sp, #1096]
   38b48:	cmp	w0, w1
   38b4c:	b.ne	39824 <__asan_internal_strnlen@@Base+0x2c1c>  // b.any
   38b50:	mov	w2, w0
   38b54:	ldr	x1, [sp, #1088]
   38b58:	ldr	x0, [sp, #336]
   38b5c:	bl	6c20 <__asan_internal_memcmp@plt>
   38b60:	cbnz	w0, 39854 <__asan_internal_strnlen@@Base+0x2c4c>
   38b64:	mov	w0, #0x1                   	// #1
   38b68:	str	w0, [sp, #176]
   38b6c:	b	38a64 <__asan_internal_strnlen@@Base+0x1e5c>
   38b70:	ldr	w0, [x21]
   38b74:	cmp	w0, #0x4
   38b78:	b.ne	38b38 <__asan_internal_strnlen@@Base+0x1f30>  // b.any
   38b7c:	add	x0, x21, #0xc
   38b80:	mov	x2, #0x4                   	// #4
   38b84:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38b88:	add	x1, x1, #0x7c0
   38b8c:	str	x0, [sp, #176]
   38b90:	bl	6b70 <__asan_internal_strncmp@plt>
   38b94:	cbnz	w0, 38b38 <__asan_internal_strnlen@@Base+0x1f30>
   38b98:	ldr	w0, [x21]
   38b9c:	add	w0, w0, #0x3
   38ba0:	and	w0, w0, #0xfffffffc
   38ba4:	ldr	w2, [x21, #4]
   38ba8:	add	w1, w2, #0xc
   38bac:	add	w1, w1, w0
   38bb0:	ldr	x3, [x24, #32]
   38bb4:	cmp	x3, x1
   38bb8:	b.hi	38b38 <__asan_internal_strnlen@@Base+0x1f30>  // b.pmore
   38bbc:	ldr	x1, [sp, #176]
   38bc0:	add	x0, x1, w0, uxtw
   38bc4:	str	x0, [sp, #336]
   38bc8:	str	w2, [sp, #348]
   38bcc:	b	38b38 <__asan_internal_strnlen@@Base+0x1f30>
   38bd0:	mov	w0, #0x1                   	// #1
   38bd4:	str	w0, [sp, #176]
   38bd8:	b	38a64 <__asan_internal_strnlen@@Base+0x1e5c>
   38bdc:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38be0:	add	x1, x1, #0x7c8
   38be4:	mov	x0, x20
   38be8:	bl	6b30 <__asan_internal_strcmp@plt>
   38bec:	mov	w25, w19
   38bf0:	cbnz	w0, 38a6c <__asan_internal_strnlen@@Base+0x1e64>
   38bf4:	add	x6, sp, #0x1f8
   38bf8:	ldr	x5, [sp, #280]
   38bfc:	ldr	x4, [sp, #272]
   38c00:	ldr	x3, [x24, #32]
   38c04:	ldr	x2, [x24, #24]
   38c08:	ldr	w1, [sp, #320]
   38c0c:	ldr	x0, [sp, #264]
   38c10:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38c14:	cbz	w0, 39884 <__asan_internal_strnlen@@Base+0x2c7c>
   38c18:	ldr	x19, [sp, #504]
   38c1c:	ldr	x1, [x24, #32]
   38c20:	mov	x0, x19
   38c24:	bl	6b50 <__asan_internal_strnlen@plt>
   38c28:	add	x0, x0, #0x3
   38c2c:	and	x0, x0, #0xfffffffffffffffc
   38c30:	add	x2, x0, #0x4
   38c34:	ldr	x1, [x24, #32]
   38c38:	mov	w25, #0x1                   	// #1
   38c3c:	cmp	x2, x1
   38c40:	b.hi	38a6c <__asan_internal_strnlen@@Base+0x1e64>  // b.pmore
   38c44:	ldr	w0, [x19, x0]
   38c48:	str	w0, [sp, #324]
   38c4c:	str	x19, [sp, #312]
   38c50:	b	38a6c <__asan_internal_strnlen@@Base+0x1e64>
   38c54:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38c58:	add	x1, x1, #0x7d8
   38c5c:	mov	x0, x20
   38c60:	bl	6b30 <__asan_internal_strcmp@plt>
   38c64:	cbnz	w0, 38a74 <__asan_internal_strnlen@@Base+0x1e6c>
   38c68:	add	x6, sp, #0x1e0
   38c6c:	ldr	x5, [sp, #280]
   38c70:	ldr	x4, [sp, #272]
   38c74:	ldr	x3, [x24, #32]
   38c78:	ldr	x2, [x24, #24]
   38c7c:	ldr	w1, [sp, #320]
   38c80:	ldr	x0, [sp, #264]
   38c84:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38c88:	cbz	w0, 398b0 <__asan_internal_strnlen@@Base+0x2ca8>
   38c8c:	ldr	x19, [sp, #480]
   38c90:	str	x19, [sp, #288]
   38c94:	ldr	x1, [x24, #32]
   38c98:	mov	x0, x19
   38c9c:	bl	6b50 <__asan_internal_strnlen@plt>
   38ca0:	ldr	x1, [x24, #32]
   38ca4:	mov	w2, #0x1                   	// #1
   38ca8:	str	w2, [sp, #224]
   38cac:	cmp	x1, x0
   38cb0:	b.ls	38a74 <__asan_internal_strnlen@@Base+0x1e6c>  // b.plast
   38cb4:	add	x0, x0, #0x1
   38cb8:	add	x2, x19, x0
   38cbc:	str	x2, [sp, #328]
   38cc0:	sub	w0, w1, w0
   38cc4:	str	w0, [sp, #344]
   38cc8:	b	38a74 <__asan_internal_strnlen@@Base+0x1e6c>
   38ccc:	ldr	w0, [sp, #1016]
   38cd0:	tbnz	w0, #1, 38a80 <__asan_internal_strnlen@@Base+0x1e78>
   38cd4:	ldr	w0, [x24, #4]
   38cd8:	cmp	w0, #0x1
   38cdc:	b.ne	38a80 <__asan_internal_strnlen@@Base+0x1e78>  // b.any
   38ce0:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38ce4:	add	x1, x1, #0x7f0
   38ce8:	mov	x0, x20
   38cec:	bl	6b30 <__asan_internal_strcmp@plt>
   38cf0:	cbnz	w0, 38a80 <__asan_internal_strnlen@@Base+0x1e78>
   38cf4:	ldr	x6, [sp, #360]
   38cf8:	ldr	x5, [sp, #280]
   38cfc:	ldr	x4, [sp, #272]
   38d00:	ldr	x3, [x24, #32]
   38d04:	ldr	x2, [x24, #24]
   38d08:	ldr	w1, [sp, #320]
   38d0c:	ldr	x0, [sp, #264]
   38d10:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38d14:	cbz	w0, 398d8 <__asan_internal_strnlen@@Base+0x2cd0>
   38d18:	ldr	x0, [x24, #16]
   38d1c:	str	x0, [sp, #408]
   38d20:	ldr	x0, [sp, #432]
   38d24:	str	x0, [sp, #416]
   38d28:	ldr	x0, [x24, #32]
   38d2c:	str	x0, [sp, #424]
   38d30:	ldr	x0, [sp, #352]
   38d34:	str	x0, [sp, #296]
   38d38:	b	38a80 <__asan_internal_strnlen@@Base+0x1e78>
   38d3c:	mov	w1, w27
   38d40:	ldr	w27, [sp, #224]
   38d44:	ldr	x24, [sp, #296]
   38d48:	ldr	x21, [sp, #264]
   38d4c:	ldr	w23, [sp, #320]
   38d50:	ldr	x19, [sp, #272]
   38d54:	ldr	x20, [sp, #280]
   38d58:	ldr	w0, [sp, #248]
   38d5c:	cmp	w0, #0x0
   38d60:	csel	w0, w0, w1, ne  // ne = any
   38d64:	cmp	w0, #0x0
   38d68:	ldr	w1, [sp, #1080]
   38d6c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   38d70:	b.ne	39070 <__asan_internal_strnlen@@Base+0x2468>  // b.any
   38d74:	sub	w26, w0, #0x1
   38d78:	ldr	x0, [sp, #304]
   38d7c:	add	x26, x0, x26, lsl #6
   38d80:	ldr	w22, [x26, #40]
   38d84:	ldr	w0, [sp, #216]
   38d88:	cmp	w0, w22
   38d8c:	b.hi	38db4 <__asan_internal_strnlen@@Base+0x21ac>  // b.pmore
   38d90:	mov	w2, #0x0                   	// #0
   38d94:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38d98:	add	x1, x1, #0x7f8
   38d9c:	mov	x0, x20
   38da0:	blr	x19
   38da4:	mov	w22, #0x0                   	// #0
   38da8:	mov	w28, #0x0                   	// #0
   38dac:	mov	w26, #0x1                   	// #1
   38db0:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   38db4:	add	x6, sp, #0x240
   38db8:	mov	x5, x20
   38dbc:	mov	x4, x19
   38dc0:	ldr	x3, [x26, #32]
   38dc4:	ldr	x2, [x26, #24]
   38dc8:	mov	w1, w23
   38dcc:	mov	x0, x21
   38dd0:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38dd4:	mov	w28, w0
   38dd8:	cbnz	w0, 38de8 <__asan_internal_strnlen@@Base+0x21e0>
   38ddc:	mov	w22, w0
   38de0:	mov	w26, #0x1                   	// #1
   38de4:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   38de8:	sub	w22, w22, #0x1
   38dec:	ldr	x0, [sp, #304]
   38df0:	add	x0, x0, x22, lsl #6
   38df4:	add	x6, sp, #0x228
   38df8:	mov	x5, x20
   38dfc:	mov	x4, x19
   38e00:	ldr	x3, [x0, #32]
   38e04:	str	x0, [sp, #216]
   38e08:	ldr	x2, [x0, #24]
   38e0c:	mov	w1, w23
   38e10:	mov	x0, x21
   38e14:	bl	6ae0 <__asan_backtrace_get_view@plt>
   38e18:	mov	w22, w0
   38e1c:	cbnz	w0, 38e2c <__asan_internal_strnlen@@Base+0x2224>
   38e20:	mov	w28, #0x1                   	// #1
   38e24:	mov	w26, w28
   38e28:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   38e2c:	mov	x3, x20
   38e30:	mov	x2, x19
   38e34:	mov	x1, #0x18                  	// #24
   38e38:	mov	x0, x21
   38e3c:	bl	68c0 <__asan_backtrace_alloc@plt>
   38e40:	mov	x28, x0
   38e44:	cbz	x0, 39900 <__asan_internal_strnlen@@Base+0x2cf8>
   38e48:	ldr	x22, [sp, #576]
   38e4c:	ldr	x0, [x26, #32]
   38e50:	ldr	x2, [sp, #552]
   38e54:	str	x2, [sp, #232]
   38e58:	ldr	x1, [sp, #216]
   38e5c:	ldr	x1, [x1, #32]
   38e60:	str	x1, [sp, #240]
   38e64:	mov	x1, #0x18                  	// #24
   38e68:	udiv	x1, x0, x1
   38e6c:	str	x1, [sp, #216]
   38e70:	cmp	x0, #0x17
   38e74:	b.ls	399e8 <__asan_internal_strnlen@@Base+0x2de0>  // b.plast
   38e78:	mov	x1, x22
   38e7c:	mov	x2, #0x0                   	// #0
   38e80:	mov	x3, #0x0                   	// #0
   38e84:	b	38e9c <__asan_internal_strnlen@@Base+0x2294>
   38e88:	add	x2, x2, #0x1
   38e8c:	add	x1, x1, #0x18
   38e90:	ldr	x0, [sp, #216]
   38e94:	cmp	x0, x2
   38e98:	b.ls	38ec0 <__asan_internal_strnlen@@Base+0x22b8>  // b.plast
   38e9c:	ldrb	w0, [x1, #4]
   38ea0:	and	w0, w0, #0xf
   38ea4:	sub	w0, w0, #0x1
   38ea8:	cmp	w0, #0x1
   38eac:	b.hi	38e88 <__asan_internal_strnlen@@Base+0x2280>  // b.pmore
   38eb0:	ldrh	w0, [x1, #6]
   38eb4:	cbz	w0, 38e88 <__asan_internal_strnlen@@Base+0x2280>
   38eb8:	add	x3, x3, #0x1
   38ebc:	b	38e88 <__asan_internal_strnlen@@Base+0x2280>
   38ec0:	str	x3, [sp, #224]
   38ec4:	mov	x0, #0x18                  	// #24
   38ec8:	mul	x0, x3, x0
   38ecc:	str	x0, [sp, #248]
   38ed0:	mov	x3, x20
   38ed4:	mov	x2, x19
   38ed8:	mov	x1, x0
   38edc:	mov	x0, x21
   38ee0:	bl	68c0 <__asan_backtrace_alloc@plt>
   38ee4:	mov	x26, x0
   38ee8:	cbz	x0, 38f28 <__asan_internal_strnlen@@Base+0x2320>
   38eec:	mov	x1, #0x0                   	// #0
   38ef0:	mov	w2, #0x0                   	// #0
   38ef4:	ldr	x6, [sp, #216]
   38ef8:	b	38f7c <__asan_internal_strnlen@@Base+0x2374>
   38efc:	mov	w2, #0x0                   	// #0
   38f00:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   38f04:	add	x1, x1, #0x828
   38f08:	mov	x0, x20
   38f0c:	blr	x19
   38f10:	mov	x4, x20
   38f14:	mov	x3, x19
   38f18:	ldr	x2, [sp, #248]
   38f1c:	mov	x1, x26
   38f20:	mov	x0, x21
   38f24:	bl	6bc0 <__asan_backtrace_free@plt>
   38f28:	mov	x4, x20
   38f2c:	mov	x3, x19
   38f30:	mov	x2, #0x18                  	// #24
   38f34:	mov	x1, x28
   38f38:	mov	x0, x21
   38f3c:	bl	6bc0 <__asan_backtrace_free@plt>
   38f40:	mov	w22, #0x1                   	// #1
   38f44:	mov	w28, w22
   38f48:	mov	w26, w22
   38f4c:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   38f50:	ldr	x0, [x22, #8]
   38f54:	ldr	x3, [sp, #184]
   38f58:	add	x0, x3, x0
   38f5c:	str	x0, [x5, #8]
   38f60:	ldr	x0, [x22, #16]
   38f64:	str	x0, [x5, #16]
   38f68:	add	w2, w2, #0x1
   38f6c:	add	x1, x1, #0x1
   38f70:	add	x22, x22, #0x18
   38f74:	cmp	x6, x1
   38f78:	b.ls	39a08 <__asan_internal_strnlen@@Base+0x2e00>  // b.plast
   38f7c:	ldrb	w0, [x22, #4]
   38f80:	and	w0, w0, #0xf
   38f84:	sub	w0, w0, #0x1
   38f88:	cmp	w0, #0x1
   38f8c:	b.hi	38f6c <__asan_internal_strnlen@@Base+0x2364>  // b.pmore
   38f90:	ldrh	w0, [x22, #6]
   38f94:	cbz	w0, 38f6c <__asan_internal_strnlen@@Base+0x2364>
   38f98:	ldr	w3, [x22]
   38f9c:	ldr	x0, [sp, #240]
   38fa0:	cmp	x0, x3
   38fa4:	b.ls	38efc <__asan_internal_strnlen@@Base+0x22f4>  // b.plast
   38fa8:	ubfiz	x0, x2, #1, #32
   38fac:	add	x0, x0, w2, uxtw
   38fb0:	add	x5, x26, x0, lsl #3
   38fb4:	ldr	x4, [sp, #232]
   38fb8:	add	x3, x4, x3
   38fbc:	str	x3, [x26, x0, lsl #3]
   38fc0:	cbz	x24, 38f50 <__asan_internal_strnlen@@Base+0x2348>
   38fc4:	ldr	x0, [x22, #8]
   38fc8:	ldr	x3, [x24]
   38fcc:	cmp	x0, x3
   38fd0:	b.cc	38f50 <__asan_internal_strnlen@@Base+0x2348>  // b.lo, b.ul, b.last
   38fd4:	ldr	x4, [x24, #16]
   38fd8:	add	x4, x3, x4
   38fdc:	cmp	x0, x4
   38fe0:	b.cs	38f50 <__asan_internal_strnlen@@Base+0x2348>  // b.hs, b.nlast
   38fe4:	sub	x0, x0, x3
   38fe8:	ldr	x3, [x24, #8]
   38fec:	ldr	x0, [x3, x0]
   38ff0:	b	38f54 <__asan_internal_strnlen@@Base+0x234c>
   38ff4:	add	x1, x21, #0x30
   38ff8:	ldr	x0, [x21, #48]
   38ffc:	b	39008 <__asan_internal_strnlen@@Base+0x2400>
   39000:	mov	x1, x0
   39004:	ldr	x0, [x0]
   39008:	cbnz	x0, 39000 <__asan_internal_strnlen@@Base+0x23f8>
   3900c:	str	x28, [x1]
   39010:	mov	w22, #0x1                   	// #1
   39014:	b	39074 <__asan_internal_strnlen@@Base+0x246c>
   39018:	ldxr	x1, [x0]
   3901c:	cbnz	x1, 39028 <__asan_internal_strnlen@@Base+0x2420>
   39020:	stlxr	w3, x28, [x0]
   39024:	cbnz	w3, 39018 <__asan_internal_strnlen@@Base+0x2410>
   39028:	cmp	x1, #0x0
   3902c:	dmb	ish
   39030:	b.ne	39a5c <__asan_internal_strnlen@@Base+0x2e54>  // b.any
   39034:	mov	w22, #0x1                   	// #1
   39038:	b	39074 <__asan_internal_strnlen@@Base+0x246c>
   3903c:	mov	x24, #0x0                   	// #0
   39040:	str	wzr, [sp, #344]
   39044:	str	xzr, [sp, #328]
   39048:	str	xzr, [sp, #288]
   3904c:	mov	w27, #0x0                   	// #0
   39050:	str	wzr, [sp, #324]
   39054:	str	xzr, [sp, #312]
   39058:	mov	w25, #0x0                   	// #0
   3905c:	str	wzr, [sp, #348]
   39060:	str	xzr, [sp, #336]
   39064:	str	wzr, [sp, #176]
   39068:	mov	w22, #0x0                   	// #0
   3906c:	b	39074 <__asan_internal_strnlen@@Base+0x246c>
   39070:	mov	w22, #0x0                   	// #0
   39074:	mov	x3, x20
   39078:	mov	x2, x19
   3907c:	add	x1, sp, #0x3b0
   39080:	mov	x0, x21
   39084:	bl	6760 <__asan_backtrace_release_view@plt>
   39088:	mov	x3, x20
   3908c:	mov	x2, x19
   39090:	add	x1, sp, #0x398
   39094:	mov	x0, x21
   39098:	bl	6760 <__asan_backtrace_release_view@plt>
   3909c:	ldr	x0, [sp, #336]
   390a0:	cbz	x0, 391c4 <__asan_internal_strnlen@@Base+0x25bc>
   390a4:	ldr	w28, [sp, #348]
   390a8:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   390ac:	add	x0, x0, #0x850
   390b0:	bl	67e0 <__asan_internal_strlen@plt>
   390b4:	mov	x26, x0
   390b8:	adrp	x0, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   390bc:	add	x0, x0, #0x870
   390c0:	bl	67e0 <__asan_internal_strlen@plt>
   390c4:	str	x0, [sp, #224]
   390c8:	add	x1, x28, #0x1
   390cc:	add	x0, x26, x0
   390d0:	add	x1, x0, x1, lsl #1
   390d4:	str	x1, [sp, #232]
   390d8:	mov	x3, x20
   390dc:	mov	x2, x19
   390e0:	mov	x0, x21
   390e4:	bl	68c0 <__asan_backtrace_alloc@plt>
   390e8:	str	x0, [sp, #216]
   390ec:	cbz	x0, 391c4 <__asan_internal_strnlen@@Base+0x25bc>
   390f0:	mov	x2, x26
   390f4:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   390f8:	add	x1, x1, #0x850
   390fc:	bl	67d0 <__asan_internal_memcpy@plt>
   39100:	ldr	x0, [sp, #216]
   39104:	add	x26, x0, x26
   39108:	cbz	x28, 39170 <__asan_internal_strnlen@@Base+0x2568>
   3910c:	mov	x1, #0x0                   	// #0
   39110:	mov	w5, #0x2f                  	// #47
   39114:	ldr	x6, [sp, #336]
   39118:	b	39130 <__asan_internal_strnlen@@Base+0x2528>
   3911c:	strb	w5, [x26, #2]
   39120:	add	x26, x26, #0x3
   39124:	add	x1, x1, #0x1
   39128:	cmp	x28, x1
   3912c:	b.eq	39170 <__asan_internal_strnlen@@Base+0x2568>  // b.none
   39130:	ldrb	w0, [x6, x1]
   39134:	lsr	w3, w0, #4
   39138:	add	w4, w3, #0x30
   3913c:	add	w2, w3, #0x57
   39140:	cmp	w3, #0x9
   39144:	csel	w2, w2, w4, hi  // hi = pmore
   39148:	strb	w2, [x26]
   3914c:	and	w0, w0, #0xf
   39150:	add	w3, w0, #0x30
   39154:	add	w2, w0, #0x57
   39158:	cmp	w0, #0x9
   3915c:	csel	w0, w2, w3, hi  // hi = pmore
   39160:	strb	w0, [x26, #1]
   39164:	cbz	x1, 3911c <__asan_internal_strnlen@@Base+0x2514>
   39168:	add	x26, x26, #0x2
   3916c:	b	39124 <__asan_internal_strnlen@@Base+0x251c>
   39170:	ldr	x28, [sp, #224]
   39174:	mov	x2, x28
   39178:	adrp	x1, 43000 <__asan_backtrace_vector_release@@Base+0x8c58>
   3917c:	add	x1, x1, #0x870
   39180:	mov	x0, x26
   39184:	bl	67d0 <__asan_internal_memcpy@plt>
   39188:	strb	wzr, [x26, x28]
   3918c:	add	x3, sp, #0x178
   39190:	mov	x2, x20
   39194:	mov	x1, x19
   39198:	ldr	x28, [sp, #216]
   3919c:	mov	x0, x28
   391a0:	bl	6d40 <__asan_backtrace_open@plt>
   391a4:	mov	w26, w0
   391a8:	mov	x4, x20
   391ac:	mov	x3, x19
   391b0:	ldr	x2, [sp, #232]
   391b4:	mov	x1, x28
   391b8:	mov	x0, x21
   391bc:	bl	6bc0 <__asan_backtrace_free@plt>
   391c0:	tbz	w26, #31, 39264 <__asan_internal_strnlen@@Base+0x265c>
   391c4:	ldr	w0, [sp, #176]
   391c8:	cbnz	w0, 39328 <__asan_internal_strnlen@@Base+0x2720>
   391cc:	cbz	x24, 391e4 <__asan_internal_strnlen@@Base+0x25dc>
   391d0:	mov	x3, x20
   391d4:	mov	x2, x19
   391d8:	add	x1, x24, #0x18
   391dc:	mov	x0, x21
   391e0:	bl	6760 <__asan_backtrace_release_view@plt>
   391e4:	ldr	x0, [sp, #312]
   391e8:	cbz	x0, 39210 <__asan_internal_strnlen@@Base+0x2608>
   391ec:	mov	x5, x20
   391f0:	mov	x4, x19
   391f4:	ldr	w3, [sp, #324]
   391f8:	mov	x2, x0
   391fc:	ldr	x1, [sp, #208]
   39200:	mov	x0, x21
   39204:	bl	381fc <__asan_internal_strnlen@@Base+0x15f4>
   39208:	mov	w24, w0
   3920c:	tbz	w0, #31, 39340 <__asan_internal_strnlen@@Base+0x2738>
   39210:	cbnz	w25, 393e8 <__asan_internal_strnlen@@Base+0x27e0>
   39214:	str	xzr, [sp, #400]
   39218:	ldr	x0, [sp, #288]
   3921c:	cbz	x0, 39248 <__asan_internal_strnlen@@Base+0x2640>
   39220:	mov	x5, x20
   39224:	mov	x4, x19
   39228:	mov	w3, #0x0                   	// #0
   3922c:	mov	x2, x0
   39230:	ldr	x25, [sp, #208]
   39234:	mov	x1, x25
   39238:	mov	x0, x21
   3923c:	bl	381fc <__asan_internal_strnlen@@Base+0x15f4>
   39240:	mov	w24, w0
   39244:	tbz	w0, #31, 39400 <__asan_internal_strnlen@@Base+0x27f8>
   39248:	cbnz	w27, 39480 <__asan_internal_strnlen@@Base+0x2878>
   3924c:	add	x24, sp, #0x258
   39250:	add	x4, x24, #0x140
   39254:	mov	x0, x24
   39258:	mov	x3, #0x0                   	// #0
   3925c:	mov	x25, #0x0                   	// #0
   39260:	b	394b8 <__asan_internal_strnlen@@Base+0x28b0>
   39264:	mov	x3, x20
   39268:	mov	x2, x19
   3926c:	add	x1, sp, #0x210
   39270:	mov	x0, x21
   39274:	bl	6760 <__asan_backtrace_release_view@plt>
   39278:	cbnz	w25, 392e4 <__asan_internal_strnlen@@Base+0x26dc>
   3927c:	cbnz	w27, 392fc <__asan_internal_strnlen@@Base+0x26f4>
   39280:	str	wzr, [sp, #40]
   39284:	str	xzr, [sp, #32]
   39288:	mov	w0, #0x1                   	// #1
   3928c:	str	w0, [sp, #24]
   39290:	str	wzr, [sp, #16]
   39294:	str	xzr, [sp, #8]
   39298:	ldr	x0, [sp, #1056]
   3929c:	str	x0, [sp]
   392a0:	ldr	x7, [sp, #200]
   392a4:	ldr	x6, [sp, #192]
   392a8:	mov	x5, x20
   392ac:	mov	x4, x19
   392b0:	ldr	x3, [sp, #184]
   392b4:	mov	w2, w26
   392b8:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   392bc:	add	x1, x1, #0x9e0
   392c0:	mov	x0, x21
   392c4:	bl	385e8 <__asan_internal_strnlen@@Base+0x19e0>
   392c8:	mov	w25, w0
   392cc:	tbnz	w0, #31, 39314 <__asan_internal_strnlen@@Base+0x270c>
   392d0:	mov	x2, x20
   392d4:	mov	x1, x19
   392d8:	mov	w0, w23
   392dc:	bl	6c90 <__asan_backtrace_close@plt>
   392e0:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   392e4:	mov	x3, x20
   392e8:	mov	x2, x19
   392ec:	add	x1, sp, #0x1f8
   392f0:	mov	x0, x21
   392f4:	bl	6760 <__asan_backtrace_release_view@plt>
   392f8:	b	3927c <__asan_internal_strnlen@@Base+0x2674>
   392fc:	mov	x3, x20
   39300:	mov	x2, x19
   39304:	add	x1, sp, #0x1e0
   39308:	mov	x0, x21
   3930c:	bl	6760 <__asan_backtrace_release_view@plt>
   39310:	b	39280 <__asan_internal_strnlen@@Base+0x2678>
   39314:	mov	x2, x20
   39318:	mov	x1, x19
   3931c:	mov	w0, w26
   39320:	bl	6c90 <__asan_backtrace_close@plt>
   39324:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   39328:	mov	x3, x20
   3932c:	mov	x2, x19
   39330:	add	x1, sp, #0x210
   39334:	mov	x0, x21
   39338:	bl	6760 <__asan_backtrace_release_view@plt>
   3933c:	b	391cc <__asan_internal_strnlen@@Base+0x25c4>
   39340:	mov	x3, x20
   39344:	mov	x2, x19
   39348:	add	x1, sp, #0x1f8
   3934c:	mov	x0, x21
   39350:	bl	6760 <__asan_backtrace_release_view@plt>
   39354:	cbnz	w27, 393bc <__asan_internal_strnlen@@Base+0x27b4>
   39358:	str	wzr, [sp, #40]
   3935c:	str	xzr, [sp, #32]
   39360:	mov	w0, #0x1                   	// #1
   39364:	str	w0, [sp, #24]
   39368:	str	wzr, [sp, #16]
   3936c:	str	xzr, [sp, #8]
   39370:	ldr	x0, [sp, #1056]
   39374:	str	x0, [sp]
   39378:	ldr	x7, [sp, #200]
   3937c:	ldr	x6, [sp, #192]
   39380:	mov	x5, x20
   39384:	mov	x4, x19
   39388:	ldr	x3, [sp, #184]
   3938c:	mov	w2, w24
   39390:	adrp	x1, 41000 <__asan_backtrace_vector_release@@Base+0x6c58>
   39394:	add	x1, x1, #0x9e0
   39398:	mov	x0, x21
   3939c:	bl	385e8 <__asan_internal_strnlen@@Base+0x19e0>
   393a0:	mov	w25, w0
   393a4:	tbnz	w0, #31, 393d4 <__asan_internal_strnlen@@Base+0x27cc>
   393a8:	mov	x2, x20
   393ac:	mov	x1, x19
   393b0:	mov	w0, w23
   393b4:	bl	6c90 <__asan_backtrace_close@plt>
   393b8:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   393bc:	mov	x3, x20
   393c0:	mov	x2, x19
   393c4:	add	x1, sp, #0x1e0
   393c8:	mov	x0, x21
   393cc:	bl	6760 <__asan_backtrace_release_view@plt>
   393d0:	b	39358 <__asan_internal_strnlen@@Base+0x2750>
   393d4:	mov	x2, x20
   393d8:	mov	x1, x19
   393dc:	mov	w0, w24
   393e0:	bl	6c90 <__asan_backtrace_close@plt>
   393e4:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   393e8:	mov	x3, x20
   393ec:	mov	x2, x19
   393f0:	add	x1, sp, #0x1f8
   393f4:	mov	x0, x21
   393f8:	bl	6760 <__asan_backtrace_release_view@plt>
   393fc:	b	39214 <__asan_internal_strnlen@@Base+0x260c>
   39400:	ldr	w0, [sp, #344]
   39404:	str	w0, [sp, #40]
   39408:	ldr	x0, [sp, #328]
   3940c:	str	x0, [sp, #32]
   39410:	mov	w0, #0x1                   	// #1
   39414:	str	w0, [sp, #24]
   39418:	str	wzr, [sp, #16]
   3941c:	add	x0, sp, #0x190
   39420:	str	x0, [sp, #8]
   39424:	ldr	x0, [sp, #1056]
   39428:	str	x0, [sp]
   3942c:	ldr	x7, [sp, #200]
   39430:	ldr	x6, [sp, #192]
   39434:	mov	x5, x20
   39438:	mov	x4, x19
   3943c:	ldr	x3, [sp, #184]
   39440:	mov	w2, w24
   39444:	mov	x1, x25
   39448:	mov	x0, x21
   3944c:	bl	385e8 <__asan_internal_strnlen@@Base+0x19e0>
   39450:	mov	w25, w0
   39454:	mov	x3, x20
   39458:	mov	x2, x19
   3945c:	add	x1, sp, #0x1e0
   39460:	mov	x0, x21
   39464:	bl	6760 <__asan_backtrace_release_view@plt>
   39468:	tbz	w25, #31, 3924c <__asan_internal_strnlen@@Base+0x2644>
   3946c:	mov	x2, x20
   39470:	mov	x1, x19
   39474:	mov	w0, w24
   39478:	bl	6c90 <__asan_backtrace_close@plt>
   3947c:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   39480:	mov	x3, x20
   39484:	mov	x2, x19
   39488:	add	x1, sp, #0x1e0
   3948c:	mov	x0, x21
   39490:	bl	6760 <__asan_backtrace_release_view@plt>
   39494:	b	3924c <__asan_internal_strnlen@@Base+0x2644>
   39498:	ldr	x25, [x2]
   3949c:	ldr	x2, [x2]
   394a0:	add	x1, x1, x2
   394a4:	cmp	x3, x1
   394a8:	csel	x3, x3, x1, ge  // ge = tcont
   394ac:	add	x0, x0, #0x20
   394b0:	cmp	x4, x0
   394b4:	b.eq	394d8 <__asan_internal_strnlen@@Base+0x28d0>  // b.none
   394b8:	mov	x2, x0
   394bc:	ldr	x1, [x0, #8]
   394c0:	cbz	x1, 394ac <__asan_internal_strnlen@@Base+0x28a4>
   394c4:	cbz	x25, 39498 <__asan_internal_strnlen@@Base+0x2890>
   394c8:	ldr	x5, [x0]
   394cc:	cmp	x5, x25
   394d0:	b.ge	3949c <__asan_internal_strnlen@@Base+0x2894>  // b.tcont
   394d4:	b	39498 <__asan_internal_strnlen@@Base+0x2890>
   394d8:	cmp	x25, #0x0
   394dc:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   394e0:	b.ne	39504 <__asan_internal_strnlen@@Base+0x28fc>  // b.any
   394e4:	mov	x2, x20
   394e8:	mov	x1, x19
   394ec:	mov	w0, w23
   394f0:	bl	6c90 <__asan_backtrace_close@plt>
   394f4:	mov	w26, w0
   394f8:	cbz	w0, 38668 <__asan_internal_strnlen@@Base+0x1a60>
   394fc:	mov	w25, #0x1                   	// #1
   39500:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   39504:	add	x6, sp, #0x1c8
   39508:	mov	x5, x20
   3950c:	mov	x4, x19
   39510:	sub	x3, x3, x25
   39514:	mov	x2, x25
   39518:	mov	w1, w23
   3951c:	mov	x0, x21
   39520:	bl	6ae0 <__asan_backtrace_get_view@plt>
   39524:	mov	w26, w0
   39528:	cbz	w0, 38668 <__asan_internal_strnlen@@Base+0x1a60>
   3952c:	mov	x2, x20
   39530:	mov	x1, x19
   39534:	mov	w0, w23
   39538:	bl	6c90 <__asan_backtrace_close@plt>
   3953c:	cbz	w0, 39910 <__asan_internal_strnlen@@Base+0x2d08>
   39540:	ldr	x3, [sp, #456]
   39544:	mov	x0, x24
   39548:	mov	w2, #0x1                   	// #1
   3954c:	mov	w26, #0x0                   	// #0
   39550:	b	39588 <__asan_internal_strnlen@@Base+0x2980>
   39554:	ldr	x1, [x0]
   39558:	sub	x1, x1, x25
   3955c:	add	x1, x3, x1
   39560:	str	x1, [x0, #16]
   39564:	sub	w1, w2, #0x1
   39568:	cmp	w1, #0x4
   3956c:	b.hi	39578 <__asan_internal_strnlen@@Base+0x2970>  // b.pmore
   39570:	add	w26, w26, #0x1
   39574:	b	39580 <__asan_internal_strnlen@@Base+0x2978>
   39578:	cmp	w2, #0x9
   3957c:	b.hi	39598 <__asan_internal_strnlen@@Base+0x2990>  // b.pmore
   39580:	add	x0, x0, #0x20
   39584:	add	w2, w2, #0x1
   39588:	ldr	x1, [x0, #8]
   3958c:	cbnz	x1, 39554 <__asan_internal_strnlen@@Base+0x294c>
   39590:	str	xzr, [x0, #16]
   39594:	b	39578 <__asan_internal_strnlen@@Base+0x2970>
   39598:	mov	x25, x24
   3959c:	mov	w28, #0x5                   	// #5
   395a0:	mov	x23, #0x0                   	// #0
   395a4:	add	x0, sp, #0x178
   395a8:	str	x0, [sp, #176]
   395ac:	add	x0, sp, #0x170
   395b0:	str	x0, [sp, #200]
   395b4:	b	39608 <__asan_internal_strnlen@@Base+0x2a00>
   395b8:	str	xzr, [sp, #368]
   395bc:	str	xzr, [sp, #376]
   395c0:	ldr	x7, [sp, #176]
   395c4:	ldr	x6, [sp, #200]
   395c8:	mov	x5, x20
   395cc:	mov	x4, x19
   395d0:	mov	x3, x23
   395d4:	ldr	x2, [x27, #168]
   395d8:	ldr	x1, [x27, #176]
   395dc:	mov	x0, x21
   395e0:	bl	37fc0 <__asan_internal_strnlen@@Base+0x13b8>
   395e4:	cbz	w0, 3963c <__asan_internal_strnlen@@Base+0x2a34>
   395e8:	ldr	x0, [sp, #368]
   395ec:	str	x0, [x27, #16]
   395f0:	ldr	x0, [sp, #376]
   395f4:	str	x0, [x27, #8]
   395f8:	str	wzr, [x27, #24]
   395fc:	add	x25, x25, #0x20
   39600:	subs	w28, w28, #0x1
   39604:	b.eq	39648 <__asan_internal_strnlen@@Base+0x2a40>  // b.none
   39608:	mov	x27, x25
   3960c:	ldr	x0, [x25, #8]
   39610:	cbnz	x0, 395fc <__asan_internal_strnlen@@Base+0x29f4>
   39614:	ldr	x0, [x25, #168]
   39618:	cbz	x0, 395fc <__asan_internal_strnlen@@Base+0x29f4>
   3961c:	cbnz	x23, 395b8 <__asan_internal_strnlen@@Base+0x29b0>
   39620:	mov	x3, x20
   39624:	mov	x2, x19
   39628:	mov	x1, #0x13b4                	// #5044
   3962c:	mov	x0, x21
   39630:	bl	68c0 <__asan_backtrace_alloc@plt>
   39634:	mov	x23, x0
   39638:	cbnz	x0, 395b8 <__asan_internal_strnlen@@Base+0x29b0>
   3963c:	mov	w26, #0x1                   	// #1
   39640:	mov	w23, #0xffffffff            	// #-1
   39644:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   39648:	mov	w0, #0x5                   	// #5
   3964c:	str	w0, [sp, #200]
   39650:	str	w22, [sp, #176]
   39654:	b	3995c <__asan_internal_strnlen@@Base+0x2d54>
   39658:	mov	x3, x20
   3965c:	mov	x2, x19
   39660:	mov	x1, #0x13b4                	// #5044
   39664:	mov	x0, x21
   39668:	bl	68c0 <__asan_backtrace_alloc@plt>
   3966c:	mov	x23, x0
   39670:	cbnz	x0, 39974 <__asan_internal_strnlen@@Base+0x2d6c>
   39674:	ldr	w22, [sp, #176]
   39678:	mov	w26, #0x1                   	// #1
   3967c:	mov	w23, #0xffffffff            	// #-1
   39680:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   39684:	ldr	w22, [sp, #176]
   39688:	cbz	x23, 396a4 <__asan_internal_strnlen@@Base+0x2a9c>
   3968c:	mov	x4, x20
   39690:	mov	x3, x19
   39694:	mov	x2, #0x13b4                	// #5044
   39698:	mov	x1, x23
   3969c:	mov	x0, x21
   396a0:	bl	6bc0 <__asan_backtrace_free@plt>
   396a4:	cbz	w26, 39734 <__asan_internal_strnlen@@Base+0x2b2c>
   396a8:	mov	w26, #0x1                   	// #1
   396ac:	ldr	x0, [sp, #1064]
   396b0:	str	x0, [sp, #72]
   396b4:	ldr	x0, [sp, #192]
   396b8:	str	x0, [sp, #64]
   396bc:	str	x20, [sp, #56]
   396c0:	str	x19, [sp, #48]
   396c4:	ldr	x0, [sp, #400]
   396c8:	str	x0, [sp, #40]
   396cc:	ldrb	w0, [sp, #973]
   396d0:	cmp	w0, #0x2
   396d4:	cset	w0, eq  // eq = none
   396d8:	str	w0, [sp, #32]
   396dc:	ldr	x0, [sp, #736]
   396e0:	str	x0, [sp, #24]
   396e4:	ldr	x0, [sp, #744]
   396e8:	str	x0, [sp, #16]
   396ec:	ldr	x0, [sp, #704]
   396f0:	str	x0, [sp, #8]
   396f4:	ldr	x0, [sp, #712]
   396f8:	str	x0, [sp]
   396fc:	ldr	x7, [sp, #672]
   39700:	ldr	x6, [sp, #680]
   39704:	ldr	x5, [sp, #640]
   39708:	ldr	x4, [sp, #648]
   3970c:	ldr	x3, [sp, #608]
   39710:	ldr	x2, [sp, #616]
   39714:	ldr	x1, [sp, #184]
   39718:	mov	x0, x21
   3971c:	bl	6770 <__asan_backtrace_dwarf_add@plt>
   39720:	cbz	w0, 39928 <__asan_internal_strnlen@@Base+0x2d20>
   39724:	mov	w25, #0x1                   	// #1
   39728:	ldr	x0, [sp, #1056]
   3972c:	str	w25, [x0]
   39730:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   39734:	mov	x3, x20
   39738:	mov	x2, x19
   3973c:	add	x1, sp, #0x1c8
   39740:	mov	x0, x21
   39744:	bl	6760 <__asan_backtrace_release_view@plt>
   39748:	b	396ac <__asan_internal_strnlen@@Base+0x2aa4>
   3974c:	mov	x3, x20
   39750:	mov	x2, x19
   39754:	add	x1, sp, #0x240
   39758:	mov	x0, x21
   3975c:	bl	6760 <__asan_backtrace_release_view@plt>
   39760:	b	38680 <__asan_internal_strnlen@@Base+0x1a78>
   39764:	mov	x3, x20
   39768:	mov	x2, x19
   3976c:	add	x1, sp, #0x228
   39770:	mov	x0, x21
   39774:	bl	6760 <__asan_backtrace_release_view@plt>
   39778:	b	38684 <__asan_internal_strnlen@@Base+0x1a7c>
   3977c:	mov	x3, x20
   39780:	mov	x2, x19
   39784:	add	x1, sp, #0x1f8
   39788:	mov	x0, x21
   3978c:	bl	6760 <__asan_backtrace_release_view@plt>
   39790:	b	38688 <__asan_internal_strnlen@@Base+0x1a80>
   39794:	mov	x3, x20
   39798:	mov	x2, x19
   3979c:	add	x1, sp, #0x1e0
   397a0:	mov	x0, x21
   397a4:	bl	6760 <__asan_backtrace_release_view@plt>
   397a8:	b	3868c <__asan_internal_strnlen@@Base+0x1a84>
   397ac:	mov	x3, x20
   397b0:	mov	x2, x19
   397b4:	add	x1, sp, #0x210
   397b8:	mov	x0, x21
   397bc:	bl	6760 <__asan_backtrace_release_view@plt>
   397c0:	b	38694 <__asan_internal_strnlen@@Base+0x1a8c>
   397c4:	mov	x3, x20
   397c8:	mov	x2, x19
   397cc:	add	x1, sp, #0x1c8
   397d0:	mov	x0, x21
   397d4:	bl	6760 <__asan_backtrace_release_view@plt>
   397d8:	b	38698 <__asan_internal_strnlen@@Base+0x1a90>
   397dc:	mov	x2, x20
   397e0:	mov	x1, x19
   397e4:	mov	w0, w23
   397e8:	bl	6c90 <__asan_backtrace_close@plt>
   397ec:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   397f0:	mov	w25, #0xffffffff            	// #-1
   397f4:	b	386bc <__asan_internal_strnlen@@Base+0x1ab4>
   397f8:	mov	w22, w0
   397fc:	ldr	w27, [sp, #224]
   39800:	ldr	x24, [sp, #296]
   39804:	ldr	x21, [sp, #264]
   39808:	ldr	w23, [sp, #320]
   3980c:	ldr	x19, [sp, #272]
   39810:	ldr	x20, [sp, #280]
   39814:	str	w0, [sp, #176]
   39818:	mov	w28, w0
   3981c:	mov	w26, #0x1                   	// #1
   39820:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   39824:	mov	w28, w19
   39828:	ldr	w27, [sp, #224]
   3982c:	ldr	x24, [sp, #296]
   39830:	ldr	x21, [sp, #264]
   39834:	ldr	w23, [sp, #320]
   39838:	ldr	x19, [sp, #272]
   3983c:	ldr	x20, [sp, #280]
   39840:	mov	w22, w28
   39844:	mov	w0, #0x1                   	// #1
   39848:	str	w0, [sp, #176]
   3984c:	mov	w26, w0
   39850:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   39854:	mov	w28, w19
   39858:	ldr	w27, [sp, #224]
   3985c:	ldr	x24, [sp, #296]
   39860:	ldr	x21, [sp, #264]
   39864:	ldr	w23, [sp, #320]
   39868:	ldr	x19, [sp, #272]
   3986c:	ldr	x20, [sp, #280]
   39870:	mov	w22, w28
   39874:	mov	w0, #0x1                   	// #1
   39878:	str	w0, [sp, #176]
   3987c:	mov	w26, w0
   39880:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   39884:	mov	w28, w0
   39888:	ldr	w27, [sp, #224]
   3988c:	ldr	x24, [sp, #296]
   39890:	ldr	x21, [sp, #264]
   39894:	ldr	w23, [sp, #320]
   39898:	ldr	x19, [sp, #272]
   3989c:	ldr	x20, [sp, #280]
   398a0:	mov	w25, w0
   398a4:	mov	w22, w0
   398a8:	mov	w26, #0x1                   	// #1
   398ac:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   398b0:	mov	w28, w0
   398b4:	ldr	x24, [sp, #296]
   398b8:	ldr	x21, [sp, #264]
   398bc:	ldr	w23, [sp, #320]
   398c0:	ldr	x19, [sp, #272]
   398c4:	ldr	x20, [sp, #280]
   398c8:	mov	w27, w0
   398cc:	mov	w22, w0
   398d0:	mov	w26, #0x1                   	// #1
   398d4:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   398d8:	mov	w28, w0
   398dc:	ldr	w27, [sp, #224]
   398e0:	ldr	x24, [sp, #296]
   398e4:	ldr	x21, [sp, #264]
   398e8:	ldr	w23, [sp, #320]
   398ec:	ldr	x19, [sp, #272]
   398f0:	ldr	x20, [sp, #280]
   398f4:	mov	w22, w0
   398f8:	mov	w26, #0x1                   	// #1
   398fc:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   39900:	mov	w22, #0x1                   	// #1
   39904:	mov	w28, w22
   39908:	mov	w26, w22
   3990c:	b	38868 <__asan_internal_strnlen@@Base+0x1c60>
   39910:	mov	w26, #0x1                   	// #1
   39914:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   39918:	ldr	w22, [sp, #176]
   3991c:	mov	w26, #0x1                   	// #1
   39920:	mov	w23, #0xffffffff            	// #-1
   39924:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   39928:	mov	w23, #0xffffffff            	// #-1
   3992c:	b	38668 <__asan_internal_strnlen@@Base+0x1a60>
   39930:	mov	x0, #0x0                   	// #0
   39934:	mov	x25, #0x0                   	// #0
   39938:	str	x25, [x27, #16]
   3993c:	str	x0, [x27, #8]
   39940:	str	wzr, [x27, #24]
   39944:	sub	w26, w26, #0x1
   39948:	add	x24, x24, #0x20
   3994c:	ldr	w0, [sp, #200]
   39950:	subs	w0, w0, #0x1
   39954:	str	w0, [sp, #200]
   39958:	b.eq	39684 <__asan_internal_strnlen@@Base+0x2a7c>  // b.none
   3995c:	mov	x27, x24
   39960:	ldr	x0, [x24, #8]
   39964:	cbz	x0, 39948 <__asan_internal_strnlen@@Base+0x2d40>
   39968:	ldr	w0, [x24, #24]
   3996c:	cbz	w0, 39948 <__asan_internal_strnlen@@Base+0x2d40>
   39970:	cbz	x23, 39658 <__asan_internal_strnlen@@Base+0x2a50>
   39974:	ldr	x22, [x27, #8]
   39978:	cmp	x22, #0x17
   3997c:	b.ls	39930 <__asan_internal_strnlen@@Base+0x2d28>  // b.plast
   39980:	ldr	x28, [x27, #16]
   39984:	ldr	w0, [x28]
   39988:	cmp	w0, #0x1
   3998c:	b.ne	399d0 <__asan_internal_strnlen@@Base+0x2dc8>  // b.any
   39990:	mov	x3, x20
   39994:	mov	x2, x19
   39998:	ldr	x1, [x28, #8]
   3999c:	mov	x0, x21
   399a0:	bl	68c0 <__asan_backtrace_alloc@plt>
   399a4:	mov	x25, x0
   399a8:	cbz	x0, 39918 <__asan_internal_strnlen@@Base+0x2d10>
   399ac:	ldr	x4, [x28, #8]
   399b0:	mov	x3, x0
   399b4:	mov	x2, x23
   399b8:	sub	x1, x22, #0x18
   399bc:	add	x0, x28, #0x18
   399c0:	bl	37120 <__asan_internal_strnlen@@Base+0x518>
   399c4:	cbz	w0, 399dc <__asan_internal_strnlen@@Base+0x2dd4>
   399c8:	ldr	x0, [x28, #8]
   399cc:	b	39938 <__asan_internal_strnlen@@Base+0x2d30>
   399d0:	mov	x0, #0x0                   	// #0
   399d4:	mov	x25, #0x0                   	// #0
   399d8:	b	39938 <__asan_internal_strnlen@@Base+0x2d30>
   399dc:	mov	x0, #0x0                   	// #0
   399e0:	mov	x25, #0x0                   	// #0
   399e4:	b	39938 <__asan_internal_strnlen@@Base+0x2d30>
   399e8:	mov	x3, x20
   399ec:	mov	x2, x19
   399f0:	mov	x1, #0x0                   	// #0
   399f4:	mov	x0, x21
   399f8:	bl	68c0 <__asan_backtrace_alloc@plt>
   399fc:	mov	x26, x0
   39a00:	cbz	x0, 38f28 <__asan_internal_strnlen@@Base+0x2320>
   39a04:	str	xzr, [sp, #224]
   39a08:	adrp	x3, 36000 <__asan_cplus_demangle_mangled_name@@Base+0x744>
   39a0c:	add	x3, x3, #0xc68
   39a10:	mov	x2, #0x18                  	// #24
   39a14:	ldr	x22, [sp, #224]
   39a18:	mov	x1, x22
   39a1c:	mov	x0, x26
   39a20:	bl	66b0 <__asan_backtrace_qsort@plt>
   39a24:	str	xzr, [x28]
   39a28:	str	x26, [x28, #8]
   39a2c:	str	x22, [x28, #16]
   39a30:	mov	x3, x20
   39a34:	mov	x2, x19
   39a38:	add	x1, sp, #0x240
   39a3c:	mov	x0, x21
   39a40:	bl	6760 <__asan_backtrace_release_view@plt>
   39a44:	mov	w0, #0x1                   	// #1
   39a48:	ldr	x1, [sp, #200]
   39a4c:	str	w0, [x1]
   39a50:	ldr	w0, [x21, #8]
   39a54:	cbz	w0, 38ff4 <__asan_internal_strnlen@@Base+0x23ec>
   39a58:	add	x2, x21, #0x30
   39a5c:	mov	x0, x2
   39a60:	ldar	x1, [x0]
   39a64:	cbz	x1, 39018 <__asan_internal_strnlen@@Base+0x2410>
   39a68:	mov	x0, x1
   39a6c:	b	39a60 <__asan_internal_strnlen@@Base+0x2e58>
   39a70:	sub	sp, sp, #0x80
   39a74:	stp	x29, x30, [sp, #48]
   39a78:	add	x29, sp, #0x30
   39a7c:	stp	x19, x20, [sp, #64]
   39a80:	str	x21, [sp, #80]
   39a84:	mov	x20, x0
   39a88:	mov	x19, x2
   39a8c:	ldr	x1, [x0, #8]
   39a90:	cbz	x1, 39a9c <__asan_internal_strnlen@@Base+0x2e94>
   39a94:	ldrb	w0, [x1]
   39a98:	cbnz	w0, 39b2c <__asan_internal_strnlen@@Base+0x2f24>
   39a9c:	ldr	w2, [x19, #56]
   39aa0:	cmn	w2, #0x1
   39aa4:	b.eq	39b14 <__asan_internal_strnlen@@Base+0x2f0c>  // b.none
   39aa8:	ldr	x21, [x19, #48]
   39aac:	mov	w0, #0xffffffff            	// #-1
   39ab0:	str	w0, [x19, #56]
   39ab4:	str	wzr, [sp, #40]
   39ab8:	str	xzr, [sp, #32]
   39abc:	str	wzr, [sp, #24]
   39ac0:	str	wzr, [sp, #16]
   39ac4:	str	xzr, [sp, #8]
   39ac8:	add	x0, sp, #0x6c
   39acc:	str	x0, [sp]
   39ad0:	ldr	x7, [x19, #32]
   39ad4:	add	x6, sp, #0x70
   39ad8:	ldr	x5, [x19, #16]
   39adc:	ldr	x4, [x19, #8]
   39ae0:	ldr	x3, [x20]
   39ae4:	mov	x1, x21
   39ae8:	ldr	x0, [x19]
   39aec:	bl	385e8 <__asan_internal_strnlen@@Base+0x19e0>
   39af0:	cbz	w0, 39b14 <__asan_internal_strnlen@@Base+0x2f0c>
   39af4:	ldr	w0, [sp, #108]
   39af8:	cbz	w0, 39b14 <__asan_internal_strnlen@@Base+0x2f0c>
   39afc:	ldr	x0, [x19, #40]
   39b00:	mov	w1, #0x1                   	// #1
   39b04:	str	w1, [x0]
   39b08:	ldr	x0, [x19, #24]
   39b0c:	ldr	x1, [sp, #112]
   39b10:	str	x1, [x0]
   39b14:	mov	w0, #0x0                   	// #0
   39b18:	ldp	x19, x20, [sp, #64]
   39b1c:	ldr	x21, [sp, #80]
   39b20:	ldp	x29, x30, [sp, #48]
   39b24:	add	sp, sp, #0x80
   39b28:	ret
   39b2c:	ldr	w0, [x2, #56]
   39b30:	cmn	w0, #0x1
   39b34:	b.ne	39b5c <__asan_internal_strnlen@@Base+0x2f54>  // b.any
   39b38:	ldr	x21, [x20, #8]
   39b3c:	add	x3, sp, #0x7c
   39b40:	ldr	x2, [x19, #16]
   39b44:	ldr	x1, [x19, #8]
   39b48:	mov	x0, x21
   39b4c:	bl	6d40 <__asan_backtrace_open@plt>
   39b50:	mov	w2, w0
   39b54:	tbz	w0, #31, 39ab4 <__asan_internal_strnlen@@Base+0x2eac>
   39b58:	b	39b14 <__asan_internal_strnlen@@Base+0x2f0c>
   39b5c:	ldr	x2, [x2, #16]
   39b60:	ldr	x1, [x19, #8]
   39b64:	bl	6c90 <__asan_backtrace_close@plt>
   39b68:	mov	w0, #0xffffffff            	// #-1
   39b6c:	str	w0, [x19, #56]
   39b70:	b	39b38 <__asan_internal_strnlen@@Base+0x2f30>
   39b74:	stp	x29, x30, [sp, #-16]!
   39b78:	mov	x29, sp
   39b7c:	mov	x3, x0
   39b80:	mov	x10, x2
   39b84:	mov	x0, x4
   39b88:	ldr	w2, [x3, #8]
   39b8c:	cbnz	w2, 39be4 <__asan_internal_strnlen@@Base+0x2fdc>
   39b90:	ldr	x4, [x3, #48]
   39b94:	cbz	x4, 39c48 <__asan_internal_strnlen@@Base+0x3040>
   39b98:	mov	x9, #0x0                   	// #0
   39b9c:	b	39c7c <__asan_internal_strnlen@@Base+0x3074>
   39ba0:	mov	x8, x6
   39ba4:	cmp	x8, x7
   39ba8:	b.ls	39c74 <__asan_internal_strnlen@@Base+0x306c>  // b.plast
   39bac:	add	x5, x8, x7
   39bb0:	lsr	x6, x5, #1
   39bb4:	and	x5, x5, #0xfffffffffffffffe
   39bb8:	add	x5, x5, x6
   39bbc:	add	x5, x2, x5, lsl #3
   39bc0:	ldr	x3, [x5, #8]
   39bc4:	cmp	x3, x1
   39bc8:	b.hi	39ba0 <__asan_internal_strnlen@@Base+0x2f98>  // b.pmore
   39bcc:	ldr	x7, [x5, #16]
   39bd0:	add	x3, x3, x7
   39bd4:	cmp	x3, x1
   39bd8:	b.hi	39c5c <__asan_internal_strnlen@@Base+0x3054>  // b.pmore
   39bdc:	add	x7, x6, #0x1
   39be0:	b	39ba4 <__asan_internal_strnlen@@Base+0x2f9c>
   39be4:	add	x2, x3, #0x30
   39be8:	mov	x4, #0x0                   	// #0
   39bec:	ldar	x2, [x2]
   39bf0:	cbz	x2, 39c48 <__asan_internal_strnlen@@Base+0x3040>
   39bf4:	ldr	x9, [x2, #8]
   39bf8:	ldr	x8, [x2, #16]
   39bfc:	mov	x7, x4
   39c00:	b	39c08 <__asan_internal_strnlen@@Base+0x3000>
   39c04:	mov	x8, x6
   39c08:	cmp	x8, x7
   39c0c:	b.ls	39bec <__asan_internal_strnlen@@Base+0x2fe4>  // b.plast
   39c10:	add	x5, x8, x7
   39c14:	lsr	x6, x5, #1
   39c18:	and	x5, x5, #0xfffffffffffffffe
   39c1c:	add	x5, x5, x6
   39c20:	add	x5, x9, x5, lsl #3
   39c24:	ldr	x3, [x5, #8]
   39c28:	cmp	x3, x1
   39c2c:	b.hi	39c04 <__asan_internal_strnlen@@Base+0x2ffc>  // b.pmore
   39c30:	ldr	x7, [x5, #16]
   39c34:	add	x3, x3, x7
   39c38:	cmp	x3, x1
   39c3c:	b.hi	39c5c <__asan_internal_strnlen@@Base+0x3054>  // b.pmore
   39c40:	add	x7, x6, #0x1
   39c44:	b	39c08 <__asan_internal_strnlen@@Base+0x3000>
   39c48:	mov	x4, #0x0                   	// #0
   39c4c:	mov	x3, #0x0                   	// #0
   39c50:	mov	x2, #0x0                   	// #0
   39c54:	blr	x10
   39c58:	b	39c6c <__asan_internal_strnlen@@Base+0x3064>
   39c5c:	ldr	x4, [x5, #16]
   39c60:	ldr	x3, [x5, #8]
   39c64:	ldr	x2, [x5]
   39c68:	blr	x10
   39c6c:	ldp	x29, x30, [sp], #16
   39c70:	ret
   39c74:	ldr	x4, [x4]
   39c78:	cbz	x4, 39c48 <__asan_internal_strnlen@@Base+0x3040>
   39c7c:	ldr	x2, [x4, #8]
   39c80:	ldr	x8, [x4, #16]
   39c84:	mov	x7, x9
   39c88:	b	39ba4 <__asan_internal_strnlen@@Base+0x2f9c>

0000000000039c8c <__asan_backtrace_uncompress_zdebug@@Base>:
   39c8c:	stp	x29, x30, [sp, #-80]!
   39c90:	mov	x29, sp
   39c94:	stp	x19, x20, [sp, #16]
   39c98:	stp	x21, x22, [sp, #32]
   39c9c:	stp	x23, x24, [sp, #48]
   39ca0:	stp	x25, x26, [sp, #64]
   39ca4:	mov	x22, x0
   39ca8:	mov	x23, x1
   39cac:	mov	x24, x2
   39cb0:	mov	x20, x3
   39cb4:	mov	x21, x4
   39cb8:	mov	x25, x5
   39cbc:	mov	x26, x6
   39cc0:	mov	x3, x4
   39cc4:	mov	x2, x20
   39cc8:	mov	x1, #0x13b4                	// #5044
   39ccc:	bl	68c0 <__asan_backtrace_alloc@plt>
   39cd0:	cbz	x0, 39d34 <__asan_backtrace_uncompress_zdebug@@Base+0xa8>
   39cd4:	mov	x19, x0
   39cd8:	mov	x7, x26
   39cdc:	mov	x6, x25
   39ce0:	mov	x5, x21
   39ce4:	mov	x4, x20
   39ce8:	mov	x3, x0
   39cec:	mov	x2, x24
   39cf0:	mov	x1, x23
   39cf4:	mov	x0, x22
   39cf8:	bl	37fc0 <__asan_internal_strnlen@@Base+0x13b8>
   39cfc:	mov	w23, w0
   39d00:	mov	x4, x21
   39d04:	mov	x3, x20
   39d08:	mov	x2, #0x13b4                	// #5044
   39d0c:	mov	x1, x19
   39d10:	mov	x0, x22
   39d14:	bl	6bc0 <__asan_backtrace_free@plt>
   39d18:	mov	w0, w23
   39d1c:	ldp	x19, x20, [sp, #16]
   39d20:	ldp	x21, x22, [sp, #32]
   39d24:	ldp	x23, x24, [sp, #48]
   39d28:	ldp	x25, x26, [sp, #64]
   39d2c:	ldp	x29, x30, [sp], #80
   39d30:	ret
   39d34:	mov	w23, #0x0                   	// #0
   39d38:	b	39d18 <__asan_backtrace_uncompress_zdebug@@Base+0x8c>

0000000000039d3c <__asan_backtrace_initialize@@Base>:
   39d3c:	sub	sp, sp, #0xc0
   39d40:	stp	x29, x30, [sp, #48]
   39d44:	add	x29, sp, #0x30
   39d48:	stp	x19, x20, [sp, #64]
   39d4c:	stp	x21, x22, [sp, #80]
   39d50:	stp	x23, x24, [sp, #96]
   39d54:	mov	x19, x0
   39d58:	mov	x24, x1
   39d5c:	mov	w20, w2
   39d60:	mov	x22, x3
   39d64:	mov	x21, x4
   39d68:	mov	x23, x5
   39d6c:	adrp	x3, 36000 <__asan_cplus_demangle_mangled_name@@Base+0x744>
   39d70:	add	x3, x3, #0xc1c
   39d74:	str	x3, [sp, #176]
   39d78:	str	wzr, [sp, #40]
   39d7c:	str	xzr, [sp, #32]
   39d80:	str	wzr, [sp, #24]
   39d84:	mov	w3, #0x1                   	// #1
   39d88:	str	w3, [sp, #16]
   39d8c:	str	xzr, [sp, #8]
   39d90:	add	x3, sp, #0xb8
   39d94:	str	x3, [sp]
   39d98:	add	x7, sp, #0xbc
   39d9c:	add	x6, sp, #0xb0
   39da0:	mov	x5, x4
   39da4:	mov	x4, x22
   39da8:	mov	x3, #0x0                   	// #0
   39dac:	bl	385e8 <__asan_internal_strnlen@@Base+0x19e0>
   39db0:	cbz	w0, 39e44 <__asan_backtrace_initialize@@Base+0x108>
   39db4:	str	x19, [sp, #112]
   39db8:	str	x22, [sp, #120]
   39dbc:	str	x21, [sp, #128]
   39dc0:	add	x1, sp, #0xb0
   39dc4:	str	x1, [sp, #136]
   39dc8:	add	x1, sp, #0xbc
   39dcc:	str	x1, [sp, #144]
   39dd0:	add	x1, sp, #0xb8
   39dd4:	str	x1, [sp, #152]
   39dd8:	str	x24, [sp, #160]
   39ddc:	cmp	w0, #0x0
   39de0:	csinv	w20, w20, wzr, lt  // lt = tstop
   39de4:	str	w20, [sp, #168]
   39de8:	add	x1, sp, #0x70
   39dec:	adrp	x0, 39000 <__asan_internal_strnlen@@Base+0x23f8>
   39df0:	add	x0, x0, #0xa70
   39df4:	bl	6950 <dl_iterate_phdr@plt>
   39df8:	ldr	w0, [x19, #8]
   39dfc:	cbnz	w0, 39e74 <__asan_backtrace_initialize@@Base+0x138>
   39e00:	ldr	w0, [sp, #188]
   39e04:	cbz	w0, 39e5c <__asan_backtrace_initialize@@Base+0x120>
   39e08:	adrp	x0, 39000 <__asan_internal_strnlen@@Base+0x23f8>
   39e0c:	add	x0, x0, #0xb74
   39e10:	str	x0, [x19, #40]
   39e14:	ldr	x0, [x19, #24]
   39e18:	str	x0, [x23]
   39e1c:	ldr	x2, [x23]
   39e20:	cmp	x2, #0x0
   39e24:	mov	w0, #0x1                   	// #1
   39e28:	adrp	x1, 36000 <__asan_cplus_demangle_mangled_name@@Base+0x744>
   39e2c:	add	x1, x1, #0xc1c
   39e30:	ccmp	x2, x1, #0x4, ne  // ne = any
   39e34:	b.ne	39e44 <__asan_backtrace_initialize@@Base+0x108>  // b.any
   39e38:	ldr	x0, [sp, #176]
   39e3c:	str	x0, [x23]
   39e40:	mov	w0, #0x1                   	// #1
   39e44:	ldp	x19, x20, [sp, #64]
   39e48:	ldp	x21, x22, [sp, #80]
   39e4c:	ldp	x23, x24, [sp, #96]
   39e50:	ldp	x29, x30, [sp, #48]
   39e54:	add	sp, sp, #0xc0
   39e58:	ret
   39e5c:	ldr	x0, [x19, #40]
   39e60:	cbnz	x0, 39e14 <__asan_backtrace_initialize@@Base+0xd8>
   39e64:	adrp	x0, 36000 <__asan_cplus_demangle_mangled_name@@Base+0x744>
   39e68:	add	x0, x0, #0xc44
   39e6c:	str	x0, [x19, #40]
   39e70:	b	39e14 <__asan_backtrace_initialize@@Base+0xd8>
   39e74:	ldr	w0, [sp, #188]
   39e78:	cbz	w0, 39ea4 <__asan_backtrace_initialize@@Base+0x168>
   39e7c:	add	x0, x19, #0x28
   39e80:	adrp	x1, 39000 <__asan_internal_strnlen@@Base+0x23f8>
   39e84:	add	x1, x1, #0xb74
   39e88:	stlr	x1, [x0]
   39e8c:	ldr	w0, [x19, #8]
   39e90:	cbz	w0, 39e14 <__asan_backtrace_initialize@@Base+0xd8>
   39e94:	add	x19, x19, #0x18
   39e98:	ldar	x0, [x19]
   39e9c:	str	x0, [x23]
   39ea0:	b	39e1c <__asan_backtrace_initialize@@Base+0xe0>
   39ea4:	add	x0, x19, #0x28
   39ea8:	adrp	x1, 36000 <__asan_cplus_demangle_mangled_name@@Base+0x744>
   39eac:	add	x1, x1, #0xc44
   39eb0:	ldxr	x2, [x0]
   39eb4:	cbnz	x2, 39ec0 <__asan_backtrace_initialize@@Base+0x184>
   39eb8:	stlxr	w3, x1, [x0]
   39ebc:	cbnz	w3, 39eb0 <__asan_backtrace_initialize@@Base+0x174>
   39ec0:	dmb	ish
   39ec4:	b	39e8c <__asan_backtrace_initialize@@Base+0x150>

0000000000039ec8 <__asan_backtrace_get_view@@Base>:
   39ec8:	stp	x29, x30, [sp, #-80]!
   39ecc:	mov	x29, sp
   39ed0:	stp	x19, x20, [sp, #16]
   39ed4:	stp	x21, x22, [sp, #32]
   39ed8:	stp	x23, x24, [sp, #48]
   39edc:	str	x25, [sp, #64]
   39ee0:	mov	w22, w1
   39ee4:	mov	x20, x2
   39ee8:	mov	x19, x3
   39eec:	mov	x23, x4
   39ef0:	mov	x24, x5
   39ef4:	mov	x21, x6
   39ef8:	bl	6c70 <getpagesize@plt>
   39efc:	sxtw	x0, w0
   39f00:	udiv	x25, x20, x0
   39f04:	msub	w25, w25, w0, w20
   39f08:	sub	x19, x19, #0x1
   39f0c:	add	x3, x0, x25
   39f10:	add	x19, x19, x3
   39f14:	neg	x0, x0
   39f18:	and	x19, x0, x19
   39f1c:	sub	x5, x20, x25
   39f20:	mov	w4, w22
   39f24:	mov	w3, #0x2                   	// #2
   39f28:	mov	w2, #0x1                   	// #1
   39f2c:	mov	x1, x19
   39f30:	mov	x0, #0x0                   	// #0
   39f34:	bl	69d0 <mmap@plt>
   39f38:	cmn	x0, #0x1
   39f3c:	b.eq	39f6c <__asan_backtrace_get_view@@Base+0xa4>  // b.none
   39f40:	add	x25, x0, x25
   39f44:	str	x25, [x21]
   39f48:	str	x0, [x21, #8]
   39f4c:	str	x19, [x21, #16]
   39f50:	mov	w0, #0x1                   	// #1
   39f54:	ldp	x19, x20, [sp, #16]
   39f58:	ldp	x21, x22, [sp, #32]
   39f5c:	ldp	x23, x24, [sp, #48]
   39f60:	ldr	x25, [sp, #64]
   39f64:	ldp	x29, x30, [sp], #80
   39f68:	ret
   39f6c:	bl	6ac0 <__errno_location@plt>
   39f70:	ldr	w2, [x0]
   39f74:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x9c58>
   39f78:	add	x1, x1, #0x1b8
   39f7c:	mov	x0, x24
   39f80:	blr	x23
   39f84:	mov	w0, #0x0                   	// #0
   39f88:	b	39f54 <__asan_backtrace_get_view@@Base+0x8c>

0000000000039f8c <__asan_backtrace_release_view@@Base>:
   39f8c:	stp	x29, x30, [sp, #-32]!
   39f90:	mov	x29, sp
   39f94:	stp	x19, x20, [sp, #16]
   39f98:	mov	x4, x1
   39f9c:	mov	x19, x2
   39fa0:	mov	x20, x3
   39fa4:	ldr	x1, [x1, #16]
   39fa8:	ldr	x0, [x4, #8]
   39fac:	bl	69f0 <munmap@plt>
   39fb0:	tbnz	w0, #31, 39fc0 <__asan_backtrace_release_view@@Base+0x34>
   39fb4:	ldp	x19, x20, [sp, #16]
   39fb8:	ldp	x29, x30, [sp], #32
   39fbc:	ret
   39fc0:	bl	6ac0 <__errno_location@plt>
   39fc4:	ldr	w2, [x0]
   39fc8:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x9c58>
   39fcc:	add	x1, x1, #0x1c0
   39fd0:	mov	x0, x20
   39fd4:	blr	x19
   39fd8:	b	39fb4 <__asan_backtrace_release_view@@Base+0x28>
   39fdc:	cmp	x2, #0xf
   39fe0:	b.ls	3a058 <__asan_backtrace_release_view@@Base+0xcc>  // b.plast
   39fe4:	add	x4, x0, #0x40
   39fe8:	ldr	x3, [x0, #64]
   39fec:	mov	x5, #0x0                   	// #0
   39ff0:	cbnz	x3, 39ffc <__asan_backtrace_release_view@@Base+0x70>
   39ff4:	b	3a048 <__asan_backtrace_release_view@@Base+0xbc>
   39ff8:	mov	x4, x6
   39ffc:	add	x5, x5, #0x1
   3a000:	mov	x6, x3
   3a004:	ldr	x3, [x3]
   3a008:	cbz	x3, 3a028 <__asan_backtrace_release_view@@Base+0x9c>
   3a00c:	cbz	x4, 39ff8 <__asan_backtrace_release_view@@Base+0x6c>
   3a010:	ldr	x7, [x4]
   3a014:	ldr	x8, [x3, #8]
   3a018:	ldr	x7, [x7, #8]
   3a01c:	cmp	x8, x7
   3a020:	csel	x4, x4, x6, cs  // cs = hs, nlast
   3a024:	b	39ffc <__asan_backtrace_release_view@@Base+0x70>
   3a028:	cmp	x5, #0xf
   3a02c:	b.ls	3a048 <__asan_backtrace_release_view@@Base+0xbc>  // b.plast
   3a030:	ldr	x3, [x4]
   3a034:	ldr	x5, [x3, #8]
   3a038:	cmp	x5, x2
   3a03c:	b.cs	3a058 <__asan_backtrace_release_view@@Base+0xcc>  // b.hs, b.nlast
   3a040:	ldr	x3, [x3]
   3a044:	str	x3, [x4]
   3a048:	ldr	x3, [x0, #64]
   3a04c:	str	x3, [x1]
   3a050:	str	x2, [x1, #8]
   3a054:	str	x1, [x0, #64]
   3a058:	ret

000000000003a05c <__asan_backtrace_free@@Base>:
   3a05c:	stp	x29, x30, [sp, #-48]!
   3a060:	mov	x29, sp
   3a064:	stp	x19, x20, [sp, #16]
   3a068:	str	x21, [sp, #32]
   3a06c:	mov	x19, x0
   3a070:	mov	x21, x1
   3a074:	mov	x20, x2
   3a078:	mov	x0, #0xffff                	// #65535
   3a07c:	cmp	x2, x0
   3a080:	b.ls	3a09c <__asan_backtrace_free@@Base+0x40>  // b.plast
   3a084:	bl	6c70 <getpagesize@plt>
   3a088:	sxtw	x0, w0
   3a08c:	sub	x0, x0, #0x1
   3a090:	orr	x1, x21, x20
   3a094:	tst	x0, x1
   3a098:	b.eq	3a0e8 <__asan_backtrace_free@@Base+0x8c>  // b.none
   3a09c:	ldr	w0, [x19, #8]
   3a0a0:	cbz	w0, 3a0c0 <__asan_backtrace_free@@Base+0x64>
   3a0a4:	add	x0, x19, #0x3c
   3a0a8:	mov	w2, #0x1                   	// #1
   3a0ac:	ldxr	w1, [x0]
   3a0b0:	stxr	w3, w2, [x0]
   3a0b4:	cbnz	w3, 3a0ac <__asan_backtrace_free@@Base+0x50>
   3a0b8:	dmb	ish
   3a0bc:	cbnz	w1, 3a0d8 <__asan_backtrace_free@@Base+0x7c>
   3a0c0:	mov	x2, x20
   3a0c4:	mov	x1, x21
   3a0c8:	mov	x0, x19
   3a0cc:	bl	39fdc <__asan_backtrace_release_view@@Base+0x50>
   3a0d0:	ldr	w0, [x19, #8]
   3a0d4:	cbnz	w0, 3a0fc <__asan_backtrace_free@@Base+0xa0>
   3a0d8:	ldp	x19, x20, [sp, #16]
   3a0dc:	ldr	x21, [sp, #32]
   3a0e0:	ldp	x29, x30, [sp], #48
   3a0e4:	ret
   3a0e8:	mov	x1, x20
   3a0ec:	mov	x0, x21
   3a0f0:	bl	69f0 <munmap@plt>
   3a0f4:	cbnz	w0, 3a09c <__asan_backtrace_free@@Base+0x40>
   3a0f8:	b	3a0d8 <__asan_backtrace_free@@Base+0x7c>
   3a0fc:	add	x19, x19, #0x3c
   3a100:	stlr	wzr, [x19]
   3a104:	b	3a0d8 <__asan_backtrace_free@@Base+0x7c>

000000000003a108 <__asan_backtrace_alloc@@Base>:
   3a108:	stp	x29, x30, [sp, #-64]!
   3a10c:	mov	x29, sp
   3a110:	stp	x19, x20, [sp, #16]
   3a114:	stp	x21, x22, [sp, #32]
   3a118:	stp	x23, x24, [sp, #48]
   3a11c:	mov	x21, x0
   3a120:	mov	x20, x1
   3a124:	mov	x22, x2
   3a128:	mov	x23, x3
   3a12c:	ldr	w0, [x0, #8]
   3a130:	cbnz	w0, 3a16c <__asan_backtrace_alloc@@Base+0x64>
   3a134:	add	x1, x21, #0x40
   3a138:	ldr	x19, [x21, #64]
   3a13c:	cbz	x19, 3a158 <__asan_backtrace_alloc@@Base+0x50>
   3a140:	ldr	x4, [x19, #8]
   3a144:	cmp	x4, x20
   3a148:	b.cs	3a1f4 <__asan_backtrace_alloc@@Base+0xec>  // b.hs, b.nlast
   3a14c:	mov	x1, x19
   3a150:	ldr	x19, [x19]
   3a154:	cbnz	x19, 3a140 <__asan_backtrace_alloc@@Base+0x38>
   3a158:	ldr	w0, [x21, #8]
   3a15c:	cbz	w0, 3a188 <__asan_backtrace_alloc@@Base+0x80>
   3a160:	add	x0, x21, #0x3c
   3a164:	stlr	wzr, [x0]
   3a168:	b	3a188 <__asan_backtrace_alloc@@Base+0x80>
   3a16c:	add	x0, x21, #0x3c
   3a170:	mov	w2, #0x1                   	// #1
   3a174:	ldxr	w1, [x0]
   3a178:	stxr	w3, w2, [x0]
   3a17c:	cbnz	w3, 3a174 <__asan_backtrace_alloc@@Base+0x6c>
   3a180:	dmb	ish
   3a184:	cbz	w1, 3a134 <__asan_backtrace_alloc@@Base+0x2c>
   3a188:	bl	6c70 <getpagesize@plt>
   3a18c:	sxtw	x0, w0
   3a190:	sub	x24, x20, #0x1
   3a194:	add	x24, x24, x0
   3a198:	neg	x0, x0
   3a19c:	and	x24, x24, x0
   3a1a0:	mov	x5, #0x0                   	// #0
   3a1a4:	mov	w4, #0xffffffff            	// #-1
   3a1a8:	mov	w3, #0x22                  	// #34
   3a1ac:	mov	w2, #0x3                   	// #3
   3a1b0:	mov	x1, x24
   3a1b4:	mov	x0, #0x0                   	// #0
   3a1b8:	bl	69d0 <mmap@plt>
   3a1bc:	mov	x19, x0
   3a1c0:	cmn	x0, #0x1
   3a1c4:	b.eq	3a244 <__asan_backtrace_alloc@@Base+0x13c>  // b.none
   3a1c8:	add	x1, x20, #0x7
   3a1cc:	and	x1, x1, #0xfffffffffffffff8
   3a1d0:	cmp	x24, x1
   3a1d4:	b.ls	3a218 <__asan_backtrace_alloc@@Base+0x110>  // b.plast
   3a1d8:	mov	x4, x23
   3a1dc:	mov	x3, x22
   3a1e0:	sub	x2, x24, x1
   3a1e4:	add	x1, x0, x1
   3a1e8:	mov	x0, x21
   3a1ec:	bl	6bc0 <__asan_backtrace_free@plt>
   3a1f0:	b	3a218 <__asan_backtrace_alloc@@Base+0x110>
   3a1f4:	ldr	x0, [x19]
   3a1f8:	str	x0, [x1]
   3a1fc:	add	x1, x20, #0x7
   3a200:	and	x1, x1, #0xfffffffffffffff8
   3a204:	ldr	x2, [x19, #8]
   3a208:	cmp	x2, x1
   3a20c:	b.hi	3a230 <__asan_backtrace_alloc@@Base+0x128>  // b.pmore
   3a210:	ldr	w0, [x21, #8]
   3a214:	cbnz	w0, 3a268 <__asan_backtrace_alloc@@Base+0x160>
   3a218:	mov	x0, x19
   3a21c:	ldp	x19, x20, [sp, #16]
   3a220:	ldp	x21, x22, [sp, #32]
   3a224:	ldp	x23, x24, [sp, #48]
   3a228:	ldp	x29, x30, [sp], #64
   3a22c:	ret
   3a230:	sub	x2, x2, x1
   3a234:	add	x1, x19, x1
   3a238:	mov	x0, x21
   3a23c:	bl	39fdc <__asan_backtrace_release_view@@Base+0x50>
   3a240:	b	3a210 <__asan_backtrace_alloc@@Base+0x108>
   3a244:	mov	x19, #0x0                   	// #0
   3a248:	cbz	x22, 3a218 <__asan_backtrace_alloc@@Base+0x110>
   3a24c:	bl	6ac0 <__errno_location@plt>
   3a250:	ldr	w2, [x0]
   3a254:	adrp	x1, 44000 <__asan_backtrace_vector_release@@Base+0x9c58>
   3a258:	add	x1, x1, #0x1b8
   3a25c:	mov	x0, x23
   3a260:	blr	x22
   3a264:	b	3a218 <__asan_backtrace_alloc@@Base+0x110>
   3a268:	add	x21, x21, #0x3c
   3a26c:	stlr	wzr, [x21]
   3a270:	b	3a218 <__asan_backtrace_alloc@@Base+0x110>

000000000003a274 <__asan_backtrace_vector_grow@@Base>:
   3a274:	stp	x29, x30, [sp, #-80]!
   3a278:	mov	x29, sp
   3a27c:	stp	x19, x20, [sp, #16]
   3a280:	stp	x21, x22, [sp, #32]
   3a284:	stp	x23, x24, [sp, #48]
   3a288:	mov	x23, x0
   3a28c:	mov	x21, x1
   3a290:	mov	x19, x4
   3a294:	ldr	x0, [x4, #16]
   3a298:	cmp	x0, x1
   3a29c:	b.cs	3a31c <__asan_backtrace_vector_grow@@Base+0xa8>  // b.hs, b.nlast
   3a2a0:	str	x25, [sp, #64]
   3a2a4:	mov	x24, x2
   3a2a8:	mov	x25, x3
   3a2ac:	ldr	x0, [x4, #8]
   3a2b0:	add	x22, x0, x1
   3a2b4:	cbnz	x0, 3a354 <__asan_backtrace_vector_grow@@Base+0xe0>
   3a2b8:	lsl	x22, x22, #4
   3a2bc:	mov	x3, x25
   3a2c0:	mov	x2, x24
   3a2c4:	mov	x1, x22
   3a2c8:	mov	x0, x23
   3a2cc:	bl	68c0 <__asan_backtrace_alloc@plt>
   3a2d0:	mov	x20, x0
   3a2d4:	cbz	x0, 3a388 <__asan_backtrace_vector_grow@@Base+0x114>
   3a2d8:	ldr	x1, [x19]
   3a2dc:	cbz	x1, 3a308 <__asan_backtrace_vector_grow@@Base+0x94>
   3a2e0:	ldr	x2, [x19, #8]
   3a2e4:	bl	67d0 <__asan_internal_memcpy@plt>
   3a2e8:	ldr	x2, [x19, #8]
   3a2ec:	ldr	x0, [x19, #16]
   3a2f0:	mov	x4, x25
   3a2f4:	mov	x3, x24
   3a2f8:	add	x2, x2, x0
   3a2fc:	ldr	x1, [x19]
   3a300:	mov	x0, x23
   3a304:	bl	6bc0 <__asan_backtrace_free@plt>
   3a308:	str	x20, [x19]
   3a30c:	ldr	x0, [x19, #8]
   3a310:	sub	x22, x22, x0
   3a314:	str	x22, [x19, #16]
   3a318:	ldr	x25, [sp, #64]
   3a31c:	ldr	x1, [x19, #8]
   3a320:	ldr	x20, [x19]
   3a324:	add	x20, x20, x1
   3a328:	add	x1, x1, x21
   3a32c:	str	x1, [x19, #8]
   3a330:	ldr	x1, [x19, #16]
   3a334:	sub	x21, x1, x21
   3a338:	str	x21, [x19, #16]
   3a33c:	mov	x0, x20
   3a340:	ldp	x19, x20, [sp, #16]
   3a344:	ldp	x21, x22, [sp, #32]
   3a348:	ldp	x23, x24, [sp, #48]
   3a34c:	ldp	x29, x30, [sp], #80
   3a350:	ret
   3a354:	bl	6c70 <getpagesize@plt>
   3a358:	sxtw	x1, w0
   3a35c:	cmp	x22, w0, sxtw
   3a360:	b.cs	3a374 <__asan_backtrace_vector_grow@@Base+0x100>  // b.hs, b.nlast
   3a364:	lsl	x22, x22, #1
   3a368:	cmp	x22, x1
   3a36c:	csel	x22, x22, x1, ls  // ls = plast
   3a370:	b	3a2bc <__asan_backtrace_vector_grow@@Base+0x48>
   3a374:	add	x22, x1, x22, lsl #1
   3a378:	sub	x22, x22, #0x1
   3a37c:	neg	x1, x1
   3a380:	and	x22, x1, x22
   3a384:	b	3a2bc <__asan_backtrace_vector_grow@@Base+0x48>
   3a388:	ldr	x25, [sp, #64]
   3a38c:	b	3a33c <__asan_backtrace_vector_grow@@Base+0xc8>

000000000003a390 <__asan_backtrace_vector_finish@@Base>:
   3a390:	ldr	x0, [x1]
   3a394:	ldr	x2, [x1, #8]
   3a398:	add	x2, x0, x2
   3a39c:	str	x2, [x1]
   3a3a0:	str	xzr, [x1, #8]
   3a3a4:	ret

000000000003a3a8 <__asan_backtrace_vector_release@@Base>:
   3a3a8:	stp	x29, x30, [sp, #-32]!
   3a3ac:	mov	x29, sp
   3a3b0:	str	x19, [sp, #16]
   3a3b4:	mov	x19, x1
   3a3b8:	ldr	x5, [x1, #8]
   3a3bc:	add	x1, x5, #0x7
   3a3c0:	and	x1, x1, #0xfffffffffffffff8
   3a3c4:	ldr	x4, [x19, #16]
   3a3c8:	add	x5, x5, x4
   3a3cc:	ldr	x6, [x19]
   3a3d0:	mov	x4, x3
   3a3d4:	mov	x3, x2
   3a3d8:	sub	x2, x5, x1
   3a3dc:	add	x1, x6, x1
   3a3e0:	bl	6bc0 <__asan_backtrace_free@plt>
   3a3e4:	str	xzr, [x19, #16]
   3a3e8:	ldr	x0, [x19, #8]
   3a3ec:	cbnz	x0, 3a3f4 <__asan_backtrace_vector_release@@Base+0x4c>
   3a3f0:	str	xzr, [x19]
   3a3f4:	mov	w0, #0x1                   	// #1
   3a3f8:	ldr	x19, [sp, #16]
   3a3fc:	ldp	x29, x30, [sp], #32
   3a400:	ret
   3a404:	nop
   3a408:	adrp	x2, 61000 <_Unwind_Backtrace@GCC_3.3>
   3a40c:	mov	x1, #0x0                   	// #0
   3a410:	ldr	x2, [x2, #928]
   3a414:	b	6a10 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000003a418 <.fini>:
   3a418:	stp	x29, x30, [sp, #-16]!
   3a41c:	mov	x29, sp
   3a420:	ldp	x29, x30, [sp], #16
   3a424:	ret
