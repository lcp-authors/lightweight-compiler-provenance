
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//archelp.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <handle_symlink.isra.0.part.0>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x3
  10:	mov	x19, x2
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x4
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x24, x1
  24:	mov	x23, x0
  28:	mov	x0, x2
  2c:	bl	0 <grub_strlen>
  30:	mov	x22, x0
  34:	mov	x2, x0
  38:	ldr	x0, [x20]
  3c:	mov	x1, x19
  40:	bl	0 <grub_memcmp>
  44:	cbnz	w0, c4 <handle_symlink.isra.0.part.0+0xc4>
  48:	ldr	x19, [x20]
  4c:	add	x5, x19, x22
  50:	ldrb	w0, [x19, x22]
  54:	cmp	w0, #0x2f
  58:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  5c:	b.ne	c4 <handle_symlink.isra.0.part.0+0xc4>  // b.any
  60:	stp	x25, x26, [sp, #64]
  64:	cmp	w0, #0x0
  68:	cinc	x25, x5, ne  // ne = any
  6c:	cmp	x19, x5
  70:	b.ls	84 <handle_symlink.isra.0.part.0+0x84>  // b.plast
  74:	b	dc <handle_symlink.isra.0.part.0+0xdc>
  78:	sub	x5, x5, #0x1
  7c:	cmp	x19, x5
  80:	b.hi	dc <handle_symlink.isra.0.part.0+0xdc>  // b.pmore
  84:	ldrb	w2, [x5]
  88:	cmp	w2, #0x2f
  8c:	b.ne	78 <handle_symlink.isra.0.part.0+0x78>  // b.any
  90:	cmp	x19, x5
  94:	b.hi	dc <handle_symlink.isra.0.part.0+0xdc>  // b.pmore
  98:	subs	x19, x5, x19
  9c:	mov	x26, #0xffffffffffffffff    	// #-1
  a0:	b.ne	208 <handle_symlink.isra.0.part.0+0x208>  // b.any
  a4:	ldr	x1, [x24]
  a8:	mov	x0, x23
  ac:	blr	x1
  b0:	mov	x22, x0
  b4:	cbz	x0, 298 <handle_symlink.isra.0.part.0+0x298>
  b8:	ldrb	w1, [x0]
  bc:	cbnz	w1, e8 <handle_symlink.isra.0.part.0+0xe8>
  c0:	ldp	x25, x26, [sp, #64]
  c4:	mov	w0, #0x0                   	// #0
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x29, x30, [sp], #96
  d8:	ret
  dc:	mov	x26, #0xffffffffffffffff    	// #-1
  e0:	mov	x19, #0x0                   	// #0
  e4:	b	a4 <handle_symlink.isra.0.part.0+0xa4>
  e8:	bl	0 <grub_strlen>
  ec:	mov	x24, x0
  f0:	ldr	x0, [x20]
  f4:	bl	0 <grub_strlen>
  f8:	add	x0, x24, x0
  fc:	add	x0, x0, #0x2
 100:	bl	0 <grub_malloc>
 104:	mov	x23, x0
 108:	cbz	x0, 298 <handle_symlink.isra.0.part.0+0x298>
 10c:	mov	x1, x22
 110:	str	x27, [sp, #80]
 114:	add	x27, x0, x19
 118:	mov	x0, x27
 11c:	bl	0 <grub_strcpy>
 120:	mov	x0, x22
 124:	bl	0 <grub_free>
 128:	ldrb	w0, [x23, x19]
 12c:	cmp	w0, #0x2f
 130:	b.eq	2f4 <handle_symlink.isra.0.part.0+0x2f4>  // b.none
 134:	cbnz	x19, 2d8 <handle_symlink.isra.0.part.0+0x2d8>
 138:	add	x0, x24, x19
 13c:	mov	x1, x25
 140:	add	x0, x23, x0
 144:	bl	0 <grub_strcpy>
 148:	adrp	x1, 0 <handle_symlink.isra.0.part.0>
 14c:	adrp	x2, 0 <handle_symlink.isra.0.part.0>
 150:	adrp	x0, 0 <handle_symlink.isra.0.part.0>
 154:	mov	x5, x23
 158:	ldr	x3, [x1]
 15c:	mov	w1, #0x7f                  	// #127
 160:	ldr	x2, [x2]
 164:	ldr	x0, [x0]
 168:	ldr	x4, [x20]
 16c:	bl	0 <grub_real_dprintf>
 170:	ldr	x0, [x20]
 174:	bl	0 <grub_free>
 178:	ldrb	w3, [x23]
 17c:	mov	x2, x23
 180:	mov	x6, x23
 184:	sub	x5, x23, #0x1
 188:	cbz	w3, 1d8 <handle_symlink.isra.0.part.0+0x1d8>
 18c:	nop
 190:	cmp	w3, #0x2f
 194:	b.ne	214 <handle_symlink.isra.0.part.0+0x214>  // b.any
 198:	ldrb	w1, [x2, #1]!
 19c:	cmp	w1, #0x2f
 1a0:	b.eq	198 <handle_symlink.isra.0.part.0+0x198>  // b.none
 1a4:	cmp	w1, #0x2e
 1a8:	b.eq	220 <handle_symlink.isra.0.part.0+0x220>  // b.none
 1ac:	cbz	w1, 1d8 <handle_symlink.isra.0.part.0+0x1d8>
 1b0:	strb	w1, [x6], #1
 1b4:	ldrb	w1, [x2, #1]!
 1b8:	cmp	w1, #0x2f
 1bc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 1c0:	b.ne	1b0 <handle_symlink.isra.0.part.0+0x1b0>  // b.any
 1c4:	cbz	w1, 1d8 <handle_symlink.isra.0.part.0+0x1d8>
 1c8:	strb	w1, [x6], #1
 1cc:	add	x2, x2, #0x1
 1d0:	ldrb	w3, [x2]
 1d4:	cbnz	w3, 190 <handle_symlink.isra.0.part.0+0x190>
 1d8:	strb	wzr, [x6]
 1dc:	ldp	x25, x26, [sp, #64]
 1e0:	mov	w1, #0x1                   	// #1
 1e4:	ldr	x27, [sp, #80]
 1e8:	str	x23, [x20]
 1ec:	str	w1, [x21]
 1f0:	mov	w0, #0x0                   	// #0
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x21, x22, [sp, #32]
 1fc:	ldp	x23, x24, [sp, #48]
 200:	ldp	x29, x30, [sp], #96
 204:	ret
 208:	mov	x26, x19
 20c:	add	x19, x19, #0x1
 210:	b	a4 <handle_symlink.isra.0.part.0+0xa4>
 214:	mov	w1, w3
 218:	cmp	w3, #0x2e
 21c:	b.ne	1b0 <handle_symlink.isra.0.part.0+0x1b0>  // b.any
 220:	ldrb	w1, [x2, #1]
 224:	cmp	w1, #0x2f
 228:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 22c:	b.eq	2bc <handle_symlink.isra.0.part.0+0x2bc>  // b.none
 230:	cmp	w1, #0x2e
 234:	b.ne	290 <handle_symlink.isra.0.part.0+0x290>  // b.any
 238:	ldrb	w3, [x2, #2]
 23c:	cmp	w3, #0x2f
 240:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 244:	b.ne	1b0 <handle_symlink.isra.0.part.0+0x1b0>  // b.any
 248:	add	x2, x2, #0x2
 24c:	cmp	x23, x6
 250:	b.eq	1d4 <handle_symlink.isra.0.part.0+0x1d4>  // b.none
 254:	sub	x1, x6, #0x2
 258:	sub	x6, x6, #0x1
 25c:	cmp	x23, x1
 260:	b.ls	274 <handle_symlink.isra.0.part.0+0x274>  // b.plast
 264:	b	1d4 <handle_symlink.isra.0.part.0+0x1d4>
 268:	cmp	x0, x5
 26c:	b.eq	2cc <handle_symlink.isra.0.part.0+0x2cc>  // b.none
 270:	mov	x1, x0
 274:	ldrb	w4, [x1]
 278:	sub	x0, x1, #0x1
 27c:	cmp	w4, #0x2f
 280:	b.ne	268 <handle_symlink.isra.0.part.0+0x268>  // b.any
 284:	add	x6, x1, #0x1
 288:	cbnz	w3, 190 <handle_symlink.isra.0.part.0+0x190>
 28c:	b	1d8 <handle_symlink.isra.0.part.0+0x1d8>
 290:	mov	w1, #0x2e                  	// #46
 294:	b	1b0 <handle_symlink.isra.0.part.0+0x1b0>
 298:	adrp	x0, 0 <handle_symlink.isra.0.part.0>
 29c:	ldp	x19, x20, [sp, #16]
 2a0:	ldr	x0, [x0]
 2a4:	ldp	x21, x22, [sp, #32]
 2a8:	ldr	w0, [x0]
 2ac:	ldp	x23, x24, [sp, #48]
 2b0:	ldp	x25, x26, [sp, #64]
 2b4:	ldp	x29, x30, [sp], #96
 2b8:	ret
 2bc:	add	x2, x2, #0x1
 2c0:	mov	w3, w1
 2c4:	cbnz	w3, 190 <handle_symlink.isra.0.part.0+0x190>
 2c8:	b	1d8 <handle_symlink.isra.0.part.0+0x1d8>
 2cc:	mov	x6, x1
 2d0:	cbnz	w3, 190 <handle_symlink.isra.0.part.0+0x190>
 2d4:	b	1d8 <handle_symlink.isra.0.part.0+0x1d8>
 2d8:	ldr	x1, [x20]
 2dc:	mov	x2, x19
 2e0:	mov	x0, x23
 2e4:	bl	0 <grub_memmove>
 2e8:	mov	w0, #0x2f                  	// #47
 2ec:	strb	w0, [x23, x26]
 2f0:	b	138 <handle_symlink.isra.0.part.0+0x138>
 2f4:	mov	x1, x23
 2f8:	ldrb	w2, [x27]
 2fc:	mov	x0, x1
 300:	strb	w2, [x1], #1
 304:	ldrb	w2, [x27], #1
 308:	cbnz	w2, 2f8 <handle_symlink.isra.0.part.0+0x2f8>
 30c:	nop
 310:	ldrb	w1, [x25]
 314:	mov	x2, x0
 318:	strb	w1, [x0], #1
 31c:	ldrb	w1, [x25], #1
 320:	cbnz	w1, 310 <handle_symlink.isra.0.part.0+0x310>
 324:	adrp	x1, 0 <handle_symlink.isra.0.part.0>
 328:	adrp	x3, 0 <handle_symlink.isra.0.part.0>
 32c:	adrp	x0, 0 <handle_symlink.isra.0.part.0>
 330:	strb	wzr, [x2]
 334:	ldr	x3, [x3]
 338:	mov	x5, x23
 33c:	ldr	x2, [x1]
 340:	mov	w1, #0x70                  	// #112
 344:	ldr	x0, [x0]
 348:	ldr	x4, [x20]
 34c:	bl	0 <grub_real_dprintf>
 350:	ldr	x0, [x20]
 354:	bl	0 <grub_free>
 358:	ldrb	w0, [x23]
 35c:	mov	x2, x23
 360:	mov	x3, x23
 364:	sub	x5, x23, #0x1
 368:	cbz	w0, 3b8 <handle_symlink.isra.0.part.0+0x3b8>
 36c:	nop
 370:	cmp	w0, #0x2f
 374:	b.ne	3c0 <handle_symlink.isra.0.part.0+0x3c0>  // b.any
 378:	ldrb	w1, [x2, #1]!
 37c:	cmp	w1, #0x2f
 380:	b.eq	378 <handle_symlink.isra.0.part.0+0x378>  // b.none
 384:	cmp	w1, #0x2e
 388:	b.eq	3d0 <handle_symlink.isra.0.part.0+0x3d0>  // b.none
 38c:	cbz	w1, 3b8 <handle_symlink.isra.0.part.0+0x3b8>
 390:	strb	w1, [x3], #1
 394:	ldrb	w1, [x2, #1]!
 398:	cmp	w1, #0x2f
 39c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 3a0:	b.ne	390 <handle_symlink.isra.0.part.0+0x390>  // b.any
 3a4:	cbz	w1, 3b8 <handle_symlink.isra.0.part.0+0x3b8>
 3a8:	strb	w1, [x3], #1
 3ac:	add	x2, x2, #0x1
 3b0:	ldrb	w0, [x2]
 3b4:	cbnz	w0, 370 <handle_symlink.isra.0.part.0+0x370>
 3b8:	strb	wzr, [x3]
 3bc:	b	1dc <handle_symlink.isra.0.part.0+0x1dc>
 3c0:	mov	w1, w0
 3c4:	cmp	w0, #0x2e
 3c8:	b.ne	390 <handle_symlink.isra.0.part.0+0x390>  // b.any
 3cc:	nop
 3d0:	ldrb	w1, [x2, #1]
 3d4:	cmp	w1, #0x2f
 3d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 3dc:	b.eq	448 <handle_symlink.isra.0.part.0+0x448>  // b.none
 3e0:	cmp	w1, #0x2e
 3e4:	b.ne	440 <handle_symlink.isra.0.part.0+0x440>  // b.any
 3e8:	ldrb	w0, [x2, #2]
 3ec:	cmp	w0, #0x2f
 3f0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 3f4:	b.ne	390 <handle_symlink.isra.0.part.0+0x390>  // b.any
 3f8:	add	x2, x2, #0x2
 3fc:	cmp	x23, x3
 400:	b.eq	3b4 <handle_symlink.isra.0.part.0+0x3b4>  // b.none
 404:	sub	x1, x3, #0x2
 408:	sub	x3, x3, #0x1
 40c:	cmp	x23, x1
 410:	b.ls	424 <handle_symlink.isra.0.part.0+0x424>  // b.plast
 414:	b	3b4 <handle_symlink.isra.0.part.0+0x3b4>
 418:	cmp	x3, x5
 41c:	b.eq	458 <handle_symlink.isra.0.part.0+0x458>  // b.none
 420:	mov	x1, x3
 424:	ldrb	w4, [x1]
 428:	sub	x3, x1, #0x1
 42c:	cmp	w4, #0x2f
 430:	b.ne	418 <handle_symlink.isra.0.part.0+0x418>  // b.any
 434:	add	x3, x1, #0x1
 438:	cbnz	w0, 370 <handle_symlink.isra.0.part.0+0x370>
 43c:	b	3b8 <handle_symlink.isra.0.part.0+0x3b8>
 440:	mov	w1, #0x2e                  	// #46
 444:	b	390 <handle_symlink.isra.0.part.0+0x390>
 448:	add	x2, x2, #0x1
 44c:	mov	w0, w1
 450:	cbnz	w0, 370 <handle_symlink.isra.0.part.0+0x370>
 454:	b	3b8 <handle_symlink.isra.0.part.0+0x3b8>
 458:	mov	x3, x1
 45c:	cbnz	w0, 370 <handle_symlink.isra.0.part.0+0x370>
 460:	b	3b8 <handle_symlink.isra.0.part.0+0x3b8>
 464:	nop
	...

0000000000000488 <grub_archelp_dir>:
 488:	stp	x29, x30, [sp, #-144]!
 48c:	mov	x29, sp
 490:	stp	x19, x20, [sp, #16]
 494:	mov	x20, x1
 498:	stp	x21, x22, [sp, #32]
 49c:	mov	x21, x0
 4a0:	add	x0, x2, #0x1
 4a4:	stp	x23, x24, [sp, #48]
 4a8:	mov	x23, x3
 4ac:	mov	x24, x4
 4b0:	bl	0 <grub_strdup>
 4b4:	str	x0, [sp, #120]
 4b8:	cbz	x0, 8fc <grub_archelp_dir+0x474>
 4bc:	stp	x25, x26, [sp, #64]
 4c0:	mov	x2, x0
 4c4:	mov	x3, x0
 4c8:	stp	x27, x28, [sp, #80]
 4cc:	sub	x6, x0, #0x1
 4d0:	ldrb	w4, [x0]
 4d4:	cbz	w4, 520 <grub_archelp_dir+0x98>
 4d8:	cmp	w4, #0x2f
 4dc:	b.ne	690 <grub_archelp_dir+0x208>  // b.any
 4e0:	ldrb	w1, [x2, #1]!
 4e4:	cmp	w1, #0x2f
 4e8:	b.eq	4e0 <grub_archelp_dir+0x58>  // b.none
 4ec:	cmp	w1, #0x2e
 4f0:	b.eq	6a0 <grub_archelp_dir+0x218>  // b.none
 4f4:	cbz	w1, 520 <grub_archelp_dir+0x98>
 4f8:	strb	w1, [x3], #1
 4fc:	ldrb	w1, [x2, #1]!
 500:	cmp	w1, #0x2f
 504:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 508:	b.ne	4f8 <grub_archelp_dir+0x70>  // b.any
 50c:	cbz	w1, 520 <grub_archelp_dir+0x98>
 510:	strb	w1, [x3], #1
 514:	add	x2, x2, #0x1
 518:	ldrb	w4, [x2]
 51c:	cbnz	w4, 4d8 <grub_archelp_dir+0x50>
 520:	strb	wzr, [x3]
 524:	ldr	x19, [sp, #120]
 528:	mov	x0, x19
 52c:	bl	0 <grub_strlen>
 530:	sub	x1, x0, #0x1
 534:	ldr	x0, [sp, #120]
 538:	add	x1, x19, x1
 53c:	cmp	x0, x1
 540:	b.ls	558 <grub_archelp_dir+0xd0>  // b.plast
 544:	b	564 <grub_archelp_dir+0xdc>
 548:	strb	wzr, [x1], #-1
 54c:	ldr	x0, [sp, #120]
 550:	cmp	x0, x1
 554:	b.hi	564 <grub_archelp_dir+0xdc>  // b.pmore
 558:	ldrb	w2, [x1]
 55c:	cmp	w2, #0x2f
 560:	b.eq	548 <grub_archelp_dir+0xc0>  // b.none
 564:	bl	0 <grub_strlen>
 568:	mov	x19, x0
 56c:	mov	w25, #0x0                   	// #0
 570:	mov	x22, #0x0                   	// #0
 574:	nop
 578:	ldr	x4, [x20]
 57c:	add	x3, sp, #0x6c
 580:	add	x2, sp, #0x68
 584:	add	x1, sp, #0x70
 588:	mov	x0, x21
 58c:	blr	x4
 590:	cbnz	w0, 658 <grub_archelp_dir+0x1d0>
 594:	ldr	w0, [sp, #108]
 598:	cmn	w0, #0x1
 59c:	b.eq	658 <grub_archelp_dir+0x1d0>  // b.none
 5a0:	ldr	x3, [sp, #112]
 5a4:	mov	x5, x3
 5a8:	mov	x6, x3
 5ac:	ldrb	w0, [x3]
 5b0:	sub	x7, x3, #0x1
 5b4:	cbz	w0, 600 <grub_archelp_dir+0x178>
 5b8:	cmp	w0, #0x2f
 5bc:	b.ne	718 <grub_archelp_dir+0x290>  // b.any
 5c0:	ldrb	w2, [x5, #1]!
 5c4:	cmp	w2, #0x2f
 5c8:	b.eq	5c0 <grub_archelp_dir+0x138>  // b.none
 5cc:	cmp	w2, #0x2e
 5d0:	b.eq	728 <grub_archelp_dir+0x2a0>  // b.none
 5d4:	cbz	w2, 600 <grub_archelp_dir+0x178>
 5d8:	strb	w2, [x6], #1
 5dc:	ldrb	w2, [x5, #1]!
 5e0:	cmp	w2, #0x2f
 5e4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 5e8:	b.ne	5d8 <grub_archelp_dir+0x150>  // b.any
 5ec:	cbz	w2, 600 <grub_archelp_dir+0x178>
 5f0:	strb	w2, [x6], #1
 5f4:	add	x5, x5, #0x1
 5f8:	ldrb	w0, [x5]
 5fc:	cbnz	w0, 5b8 <grub_archelp_dir+0x130>
 600:	strb	wzr, [x6]
 604:	mov	x2, x19
 608:	ldp	x1, x0, [sp, #112]
 60c:	bl	0 <grub_memcmp>
 610:	cbnz	w0, 87c <grub_archelp_dir+0x3f4>
 614:	ldr	x0, [sp, #112]
 618:	add	x26, x0, x19
 61c:	ldrb	w1, [x0, x19]
 620:	cmp	w1, #0x2f
 624:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 628:	cset	w27, eq  // eq = none
 62c:	cmp	x19, #0x0
 630:	csinc	w27, w27, wzr, ne  // ne = any
 634:	cbnz	w27, 7a0 <grub_archelp_dir+0x318>
 638:	bl	0 <grub_free>
 63c:	ldr	x4, [x20]
 640:	add	x3, sp, #0x6c
 644:	add	x2, sp, #0x68
 648:	add	x1, sp, #0x70
 64c:	mov	x0, x21
 650:	blr	x4
 654:	cbz	w0, 594 <grub_archelp_dir+0x10c>
 658:	ldr	x0, [sp, #120]
 65c:	bl	0 <grub_free>
 660:	mov	x0, x22
 664:	bl	0 <grub_free>
 668:	adrp	x0, 0 <handle_symlink.isra.0.part.0>
 66c:	ldp	x19, x20, [sp, #16]
 670:	ldr	x0, [x0]
 674:	ldp	x21, x22, [sp, #32]
 678:	ldr	w0, [x0]
 67c:	ldp	x23, x24, [sp, #48]
 680:	ldp	x25, x26, [sp, #64]
 684:	ldp	x27, x28, [sp, #80]
 688:	ldp	x29, x30, [sp], #144
 68c:	ret
 690:	mov	w1, w4
 694:	cmp	w4, #0x2e
 698:	b.ne	4f8 <grub_archelp_dir+0x70>  // b.any
 69c:	nop
 6a0:	ldrb	w1, [x2, #1]
 6a4:	cmp	w1, #0x2f
 6a8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
 6ac:	b.eq	8ec <grub_archelp_dir+0x464>  // b.none
 6b0:	cmp	w1, #0x2e
 6b4:	b.ne	710 <grub_archelp_dir+0x288>  // b.any
 6b8:	ldrb	w4, [x2, #2]
 6bc:	cmp	w4, #0x2f
 6c0:	ccmp	w4, #0x0, #0x4, ne  // ne = any
 6c4:	b.ne	4f8 <grub_archelp_dir+0x70>  // b.any
 6c8:	add	x2, x2, #0x2
 6cc:	cmp	x0, x3
 6d0:	b.eq	51c <grub_archelp_dir+0x94>  // b.none
 6d4:	sub	x1, x3, #0x2
 6d8:	sub	x3, x3, #0x1
 6dc:	cmp	x0, x1
 6e0:	b.ls	6f4 <grub_archelp_dir+0x26c>  // b.plast
 6e4:	b	51c <grub_archelp_dir+0x94>
 6e8:	cmp	x3, x6
 6ec:	b.eq	92c <grub_archelp_dir+0x4a4>  // b.none
 6f0:	mov	x1, x3
 6f4:	ldrb	w5, [x1]
 6f8:	sub	x3, x1, #0x1
 6fc:	cmp	w5, #0x2f
 700:	b.ne	6e8 <grub_archelp_dir+0x260>  // b.any
 704:	add	x3, x1, #0x1
 708:	cbnz	w4, 4d8 <grub_archelp_dir+0x50>
 70c:	b	520 <grub_archelp_dir+0x98>
 710:	mov	w1, #0x2e                  	// #46
 714:	b	4f8 <grub_archelp_dir+0x70>
 718:	mov	w2, w0
 71c:	cmp	w0, #0x2e
 720:	b.ne	5d8 <grub_archelp_dir+0x150>  // b.any
 724:	nop
 728:	ldrb	w2, [x5, #1]
 72c:	cmp	w2, #0x2f
 730:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 734:	b.eq	860 <grub_archelp_dir+0x3d8>  // b.none
 738:	cmp	w2, #0x2e
 73c:	b.ne	798 <grub_archelp_dir+0x310>  // b.any
 740:	ldrb	w0, [x5, #2]
 744:	cmp	w0, #0x2f
 748:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 74c:	b.ne	5d8 <grub_archelp_dir+0x150>  // b.any
 750:	add	x5, x5, #0x2
 754:	cmp	x3, x6
 758:	b.eq	5fc <grub_archelp_dir+0x174>  // b.none
 75c:	sub	x1, x6, #0x2
 760:	sub	x6, x6, #0x1
 764:	cmp	x3, x1
 768:	b.ls	77c <grub_archelp_dir+0x2f4>  // b.plast
 76c:	b	5fc <grub_archelp_dir+0x174>
 770:	cmp	x7, x2
 774:	b.eq	870 <grub_archelp_dir+0x3e8>  // b.none
 778:	mov	x1, x2
 77c:	ldrb	w4, [x1]
 780:	sub	x2, x1, #0x1
 784:	cmp	w4, #0x2f
 788:	b.ne	770 <grub_archelp_dir+0x2e8>  // b.any
 78c:	add	x6, x1, #0x1
 790:	cbnz	w0, 5b8 <grub_archelp_dir+0x130>
 794:	b	600 <grub_archelp_dir+0x178>
 798:	mov	w2, #0x2e                  	// #46
 79c:	b	5d8 <grub_archelp_dir+0x150>
 7a0:	cmp	w1, #0x2f
 7a4:	b.ne	7b4 <grub_archelp_dir+0x32c>  // b.any
 7a8:	ldrb	w0, [x26, #1]!
 7ac:	cmp	w0, #0x2f
 7b0:	b.eq	7a8 <grub_archelp_dir+0x320>  // b.none
 7b4:	mov	x0, x26
 7b8:	mov	w1, #0x2f                  	// #47
 7bc:	bl	0 <grub_strchr>
 7c0:	mov	x28, x0
 7c4:	cbz	x0, 7cc <grub_archelp_dir+0x344>
 7c8:	strb	wzr, [x0]
 7cc:	cbz	x22, 7e0 <grub_archelp_dir+0x358>
 7d0:	ldr	x1, [sp, #112]
 7d4:	mov	x0, x22
 7d8:	bl	0 <grub_strcmp>
 7dc:	cbz	w0, 7e8 <grub_archelp_dir+0x360>
 7e0:	ldrb	w0, [x26]
 7e4:	cbnz	w0, 890 <grub_archelp_dir+0x408>
 7e8:	ldr	w0, [sp, #108]
 7ec:	str	wzr, [sp, #128]
 7f0:	and	w0, w0, #0xe000
 7f4:	cmp	w0, #0xa, lsl #12
 7f8:	ldr	x0, [sp, #112]
 7fc:	b.ne	888 <grub_archelp_dir+0x400>  // b.any
 800:	ldr	x1, [x20, #8]
 804:	cbz	x1, 888 <grub_archelp_dir+0x400>
 808:	mov	x2, x0
 80c:	add	x4, sp, #0x80
 810:	add	x3, sp, #0x78
 814:	add	x1, x20, #0x8
 818:	mov	x0, x21
 81c:	bl	0 <handle_symlink.isra.0.part.0>
 820:	mov	w26, w0
 824:	ldr	x0, [sp, #112]
 828:	bl	0 <grub_free>
 82c:	cbnz	w26, 658 <grub_archelp_dir+0x1d0>
 830:	ldr	w0, [sp, #128]
 834:	cbz	w0, 578 <grub_archelp_dir+0xf0>
 838:	ldr	x0, [sp, #120]
 83c:	add	w25, w25, #0x1
 840:	bl	0 <grub_strlen>
 844:	mov	x19, x0
 848:	cmp	w25, #0x8
 84c:	b.eq	944 <grub_archelp_dir+0x4bc>  // b.none
 850:	ldr	x1, [x20, #16]
 854:	mov	x0, x21
 858:	blr	x1
 85c:	b	578 <grub_archelp_dir+0xf0>
 860:	add	x5, x5, #0x1
 864:	mov	w0, w2
 868:	cbnz	w0, 5b8 <grub_archelp_dir+0x130>
 86c:	b	600 <grub_archelp_dir+0x178>
 870:	mov	x6, x1
 874:	cbnz	w0, 5b8 <grub_archelp_dir+0x130>
 878:	b	600 <grub_archelp_dir+0x178>
 87c:	ldr	x0, [sp, #112]
 880:	bl	0 <grub_free>
 884:	b	63c <grub_archelp_dir+0x1b4>
 888:	bl	0 <grub_free>
 88c:	b	830 <grub_archelp_dir+0x3a8>
 890:	mov	w1, #0x0                   	// #0
 894:	add	x0, sp, #0x80
 898:	mov	x2, #0x10                  	// #16
 89c:	bl	0 <grub_memset>
 8a0:	ldr	w1, [sp, #108]
 8a4:	cbz	x28, 91c <grub_archelp_dir+0x494>
 8a8:	ldrb	w0, [sp, #128]
 8ac:	bfxil	w0, w27, #0, #1
 8b0:	strb	w0, [sp, #128]
 8b4:	tbnz	w1, #31, 8c8 <grub_archelp_dir+0x440>
 8b8:	ldr	w1, [sp, #104]
 8bc:	orr	w0, w0, #0x2
 8c0:	strb	w0, [sp, #128]
 8c4:	str	w1, [sp, #132]
 8c8:	mov	x0, x26
 8cc:	mov	x2, x24
 8d0:	add	x1, sp, #0x80
 8d4:	blr	x23
 8d8:	cbnz	w0, 938 <grub_archelp_dir+0x4b0>
 8dc:	mov	x0, x22
 8e0:	bl	0 <grub_free>
 8e4:	ldr	x22, [sp, #112]
 8e8:	b	578 <grub_archelp_dir+0xf0>
 8ec:	add	x2, x2, #0x1
 8f0:	mov	w4, w1
 8f4:	cbnz	w4, 4d8 <grub_archelp_dir+0x50>
 8f8:	b	520 <grub_archelp_dir+0x98>
 8fc:	adrp	x0, 0 <handle_symlink.isra.0.part.0>
 900:	ldp	x19, x20, [sp, #16]
 904:	ldr	x0, [x0]
 908:	ldp	x21, x22, [sp, #32]
 90c:	ldr	w0, [x0]
 910:	ldp	x23, x24, [sp, #48]
 914:	ldp	x29, x30, [sp], #144
 918:	ret
 91c:	and	w0, w1, #0xe000
 920:	cmp	w0, #0x4, lsl #12
 924:	cset	w27, eq  // eq = none
 928:	b	8a8 <grub_archelp_dir+0x420>
 92c:	mov	x3, x1
 930:	cbnz	w4, 4d8 <grub_archelp_dir+0x50>
 934:	b	520 <grub_archelp_dir+0x98>
 938:	ldr	x0, [sp, #112]
 93c:	bl	0 <grub_free>
 940:	b	658 <grub_archelp_dir+0x1d0>
 944:	adrp	x1, 0 <handle_symlink.isra.0.part.0>
 948:	mov	w0, #0x19                  	// #25
 94c:	ldr	x1, [x1]
 950:	bl	0 <grub_error>
 954:	b	658 <grub_archelp_dir+0x1d0>
	...

0000000000000968 <grub_archelp_open>:
 968:	stp	x29, x30, [sp, #-96]!
 96c:	mov	x29, sp
 970:	stp	x19, x20, [sp, #16]
 974:	mov	x20, x0
 978:	mov	x19, x1
 97c:	add	x0, x2, #0x1
 980:	stp	x21, x22, [sp, #32]
 984:	mov	x22, x2
 988:	stp	x23, x24, [sp, #48]
 98c:	bl	0 <grub_strdup>
 990:	str	x0, [sp, #88]
 994:	cbz	x0, afc <grub_archelp_open+0x194>
 998:	ldrb	w4, [x0]
 99c:	mov	x1, x0
 9a0:	mov	x2, x0
 9a4:	sub	x6, x0, #0x1
 9a8:	cbz	w4, 9f8 <grub_archelp_open+0x90>
 9ac:	nop
 9b0:	cmp	w4, #0x2f
 9b4:	b.ne	b20 <grub_archelp_open+0x1b8>  // b.any
 9b8:	ldrb	w3, [x1, #1]!
 9bc:	cmp	w3, #0x2f
 9c0:	b.eq	9b8 <grub_archelp_open+0x50>  // b.none
 9c4:	cmp	w3, #0x2e
 9c8:	b.eq	b30 <grub_archelp_open+0x1c8>  // b.none
 9cc:	cbz	w3, 9f8 <grub_archelp_open+0x90>
 9d0:	strb	w3, [x2], #1
 9d4:	ldrb	w3, [x1, #1]!
 9d8:	cmp	w3, #0x2f
 9dc:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 9e0:	b.ne	9d0 <grub_archelp_open+0x68>  // b.any
 9e4:	cbz	w3, 9f8 <grub_archelp_open+0x90>
 9e8:	strb	w3, [x2], #1
 9ec:	add	x1, x1, #0x1
 9f0:	ldrb	w4, [x1]
 9f4:	cbnz	w4, 9b0 <grub_archelp_open+0x48>
 9f8:	strb	wzr, [x2]
 9fc:	add	x3, sp, #0x44
 a00:	add	x2, sp, #0x48
 a04:	add	x1, sp, #0x50
 a08:	ldr	x4, [x19]
 a0c:	mov	x0, x20
 a10:	add	x23, x19, #0x8
 a14:	mov	w21, #0x0                   	// #0
 a18:	blr	x4
 a1c:	mov	w24, w0
 a20:	cbnz	w0, af4 <grub_archelp_open+0x18c>
 a24:	nop
 a28:	ldr	w0, [sp, #68]
 a2c:	cmn	w0, #0x1
 a30:	b.eq	cc0 <grub_archelp_open+0x358>  // b.none
 a34:	ldr	x1, [sp, #80]
 a38:	mov	x4, x1
 a3c:	mov	x5, x1
 a40:	ldrb	w3, [x1]
 a44:	sub	x7, x1, #0x1
 a48:	cbz	w3, aa0 <grub_archelp_open+0x138>
 a4c:	nop
 a50:	cmp	w3, #0x2f
 a54:	b.ne	ba8 <grub_archelp_open+0x240>  // b.any
 a58:	ldrb	w3, [x4, #1]!
 a5c:	cmp	w3, #0x2f
 a60:	b.eq	a58 <grub_archelp_open+0xf0>  // b.none
 a64:	cmp	w3, #0x2e
 a68:	b.eq	bb0 <grub_archelp_open+0x248>  // b.none
 a6c:	cbz	w3, aa0 <grub_archelp_open+0x138>
 a70:	mov	w6, w3
 a74:	mov	w3, w6
 a78:	strb	w3, [x5], #1
 a7c:	ldrb	w3, [x4, #1]!
 a80:	cmp	w3, #0x2f
 a84:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 a88:	b.ne	a78 <grub_archelp_open+0x110>  // b.any
 a8c:	cbz	w3, aa0 <grub_archelp_open+0x138>
 a90:	strb	w3, [x5], #1
 a94:	add	x4, x4, #0x1
 a98:	ldrb	w3, [x4]
 a9c:	cbnz	w3, a50 <grub_archelp_open+0xe8>
 aa0:	strb	wzr, [x5]
 aa4:	str	wzr, [sp, #76]
 aa8:	ldr	w0, [sp, #68]
 aac:	ldr	x2, [sp, #80]
 ab0:	and	w0, w0, #0xe000
 ab4:	cmp	w0, #0xa, lsl #12
 ab8:	b.eq	c38 <grub_archelp_open+0x2d0>  // b.none
 abc:	ldr	x0, [sp, #88]
 ac0:	mov	x1, x2
 ac4:	bl	0 <grub_strcmp>
 ac8:	cbz	w0, cec <grub_archelp_open+0x384>
 acc:	ldr	x0, [sp, #80]
 ad0:	bl	0 <grub_free>
 ad4:	ldr	x4, [x19]
 ad8:	add	x3, sp, #0x44
 adc:	add	x2, sp, #0x48
 ae0:	add	x1, sp, #0x50
 ae4:	mov	x0, x20
 ae8:	blr	x4
 aec:	mov	w24, w0
 af0:	cbz	w0, a28 <grub_archelp_open+0xc0>
 af4:	ldr	x0, [sp, #88]
 af8:	bl	0 <grub_free>
 afc:	adrp	x0, 0 <handle_symlink.isra.0.part.0>
 b00:	ldr	x0, [x0]
 b04:	ldr	w24, [x0]
 b08:	mov	w0, w24
 b0c:	ldp	x19, x20, [sp, #16]
 b10:	ldp	x21, x22, [sp, #32]
 b14:	ldp	x23, x24, [sp, #48]
 b18:	ldp	x29, x30, [sp], #96
 b1c:	ret
 b20:	mov	w3, w4
 b24:	cmp	w4, #0x2e
 b28:	b.ne	9d0 <grub_archelp_open+0x68>  // b.any
 b2c:	nop
 b30:	ldrb	w3, [x1, #1]
 b34:	cmp	w3, #0x2f
 b38:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 b3c:	b.eq	ca4 <grub_archelp_open+0x33c>  // b.none
 b40:	cmp	w3, #0x2e
 b44:	b.ne	ba0 <grub_archelp_open+0x238>  // b.any
 b48:	ldrb	w4, [x1, #2]
 b4c:	cmp	w4, #0x2f
 b50:	ccmp	w4, #0x0, #0x4, ne  // ne = any
 b54:	b.ne	9d0 <grub_archelp_open+0x68>  // b.any
 b58:	add	x1, x1, #0x2
 b5c:	cmp	x0, x2
 b60:	b.eq	9f4 <grub_archelp_open+0x8c>  // b.none
 b64:	sub	x3, x2, #0x2
 b68:	sub	x2, x2, #0x1
 b6c:	cmp	x0, x3
 b70:	b.ls	b84 <grub_archelp_open+0x21c>  // b.plast
 b74:	b	9f4 <grub_archelp_open+0x8c>
 b78:	cmp	x2, x6
 b7c:	b.eq	cb4 <grub_archelp_open+0x34c>  // b.none
 b80:	mov	x3, x2
 b84:	ldrb	w5, [x3]
 b88:	sub	x2, x3, #0x1
 b8c:	cmp	w5, #0x2f
 b90:	b.ne	b78 <grub_archelp_open+0x210>  // b.any
 b94:	add	x2, x3, #0x1
 b98:	cbnz	w4, 9b0 <grub_archelp_open+0x48>
 b9c:	b	9f8 <grub_archelp_open+0x90>
 ba0:	mov	w3, #0x2e                  	// #46
 ba4:	b	9d0 <grub_archelp_open+0x68>
 ba8:	cmp	w3, #0x2e
 bac:	b.ne	a70 <grub_archelp_open+0x108>  // b.any
 bb0:	ldrb	w6, [x4, #1]
 bb4:	cmp	w6, #0x2f
 bb8:	ccmp	w6, #0x0, #0x4, ne  // ne = any
 bbc:	b.eq	c28 <grub_archelp_open+0x2c0>  // b.none
 bc0:	cmp	w6, #0x2e
 bc4:	b.ne	c20 <grub_archelp_open+0x2b8>  // b.any
 bc8:	ldrb	w3, [x4, #2]
 bcc:	cmp	w3, #0x2f
 bd0:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 bd4:	b.ne	a74 <grub_archelp_open+0x10c>  // b.any
 bd8:	add	x4, x4, #0x2
 bdc:	cmp	x1, x5
 be0:	b.eq	a9c <grub_archelp_open+0x134>  // b.none
 be4:	sub	x2, x5, #0x2
 be8:	sub	x5, x5, #0x1
 bec:	cmp	x1, x2
 bf0:	b.ls	c04 <grub_archelp_open+0x29c>  // b.plast
 bf4:	b	a9c <grub_archelp_open+0x134>
 bf8:	cmp	x0, x7
 bfc:	b.eq	c98 <grub_archelp_open+0x330>  // b.none
 c00:	mov	x2, x0
 c04:	ldrb	w5, [x2]
 c08:	sub	x0, x2, #0x1
 c0c:	cmp	w5, #0x2f
 c10:	b.ne	bf8 <grub_archelp_open+0x290>  // b.any
 c14:	add	x5, x2, #0x1
 c18:	cbnz	w3, a50 <grub_archelp_open+0xe8>
 c1c:	b	aa0 <grub_archelp_open+0x138>
 c20:	mov	w6, #0x2e                  	// #46
 c24:	b	a74 <grub_archelp_open+0x10c>
 c28:	add	x4, x4, #0x1
 c2c:	mov	w3, w6
 c30:	cbnz	w3, a50 <grub_archelp_open+0xe8>
 c34:	b	aa0 <grub_archelp_open+0x138>
 c38:	ldr	x0, [x19, #8]
 c3c:	cbz	x0, abc <grub_archelp_open+0x154>
 c40:	add	x4, sp, #0x4c
 c44:	add	x3, sp, #0x58
 c48:	mov	x1, x23
 c4c:	mov	x0, x20
 c50:	bl	0 <handle_symlink.isra.0.part.0>
 c54:	cbnz	w0, ce0 <grub_archelp_open+0x378>
 c58:	ldr	w0, [sp, #76]
 c5c:	ldr	x2, [sp, #80]
 c60:	cbz	w0, abc <grub_archelp_open+0x154>
 c64:	ldr	x1, [x19, #16]
 c68:	add	w21, w21, #0x1
 c6c:	mov	x0, x20
 c70:	blr	x1
 c74:	cmp	w21, #0x8
 c78:	b.ne	acc <grub_archelp_open+0x164>  // b.any
 c7c:	adrp	x1, 0 <handle_symlink.isra.0.part.0>
 c80:	mov	w0, #0x19                  	// #25
 c84:	ldr	x1, [x1]
 c88:	bl	0 <grub_error>
 c8c:	ldr	x0, [sp, #88]
 c90:	bl	0 <grub_free>
 c94:	b	afc <grub_archelp_open+0x194>
 c98:	mov	x5, x2
 c9c:	cbnz	w3, a50 <grub_archelp_open+0xe8>
 ca0:	b	aa0 <grub_archelp_open+0x138>
 ca4:	add	x1, x1, #0x1
 ca8:	mov	w4, w3
 cac:	cbnz	w4, 9b0 <grub_archelp_open+0x48>
 cb0:	b	9f8 <grub_archelp_open+0x90>
 cb4:	mov	x2, x3
 cb8:	cbnz	w4, 9b0 <grub_archelp_open+0x48>
 cbc:	b	9f8 <grub_archelp_open+0x90>
 cc0:	adrp	x1, 0 <handle_symlink.isra.0.part.0>
 cc4:	mov	x2, x22
 cc8:	mov	w0, #0x5                   	// #5
 ccc:	ldr	x1, [x1]
 cd0:	bl	0 <grub_error>
 cd4:	ldr	x0, [sp, #88]
 cd8:	bl	0 <grub_free>
 cdc:	b	afc <grub_archelp_open+0x194>
 ce0:	ldr	x0, [sp, #80]
 ce4:	bl	0 <grub_free>
 ce8:	b	af4 <grub_archelp_open+0x18c>
 cec:	ldr	x0, [sp, #80]
 cf0:	bl	0 <grub_free>
 cf4:	ldr	x0, [sp, #88]
 cf8:	bl	0 <grub_free>
 cfc:	b	b08 <grub_archelp_open+0x1a0>
	...
