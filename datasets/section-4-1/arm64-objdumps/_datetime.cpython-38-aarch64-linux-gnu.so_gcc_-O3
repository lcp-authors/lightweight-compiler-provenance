
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_datetime.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000046d0 <.init>:
    46d0:	stp	x29, x30, [sp, #-16]!
    46d4:	mov	x29, sp
    46d8:	bl	4c40 <PyNumber_FloorDivide@plt+0x10>
    46dc:	ldp	x29, x30, [sp], #16
    46e0:	ret

Disassembly of section .plt:

00000000000046f0 <memcpy@plt-0x20>:
    46f0:	stp	x16, x30, [sp, #-16]!
    46f4:	adrp	x16, 28000 <PyInit__datetime@@Base+0x14f90>
    46f8:	ldr	x17, [x16, #4088]
    46fc:	add	x16, x16, #0xff8
    4700:	br	x17
    4704:	nop
    4708:	nop
    470c:	nop

0000000000004710 <memcpy@plt>:
    4710:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4714:	ldr	x17, [x16]
    4718:	add	x16, x16, #0x0
    471c:	br	x17

0000000000004720 <PyUnicode_FromFormat@plt>:
    4720:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4724:	ldr	x17, [x16, #8]
    4728:	add	x16, x16, #0x8
    472c:	br	x17

0000000000004730 <_PyUnicode_Ready@plt>:
    4730:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4734:	ldr	x17, [x16, #16]
    4738:	add	x16, x16, #0x10
    473c:	br	x17

0000000000004740 <PyDict_SetItemString@plt>:
    4740:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4744:	ldr	x17, [x16, #24]
    4748:	add	x16, x16, #0x18
    474c:	br	x17

0000000000004750 <strlen@plt>:
    4750:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4754:	ldr	x17, [x16, #32]
    4758:	add	x16, x16, #0x20
    475c:	br	x17

0000000000004760 <PyModule_AddIntConstant@plt>:
    4760:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4764:	ldr	x17, [x16, #40]
    4768:	add	x16, x16, #0x28
    476c:	br	x17

0000000000004770 <PyArg_ParseTupleAndKeywords@plt>:
    4770:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4774:	ldr	x17, [x16, #48]
    4778:	add	x16, x16, #0x30
    477c:	br	x17

0000000000004780 <_PyObject_LookupAttrId@plt>:
    4780:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4784:	ldr	x17, [x16, #56]
    4788:	add	x16, x16, #0x38
    478c:	br	x17

0000000000004790 <_PyBytes_Resize@plt>:
    4790:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4794:	ldr	x17, [x16, #64]
    4798:	add	x16, x16, #0x40
    479c:	br	x17

00000000000047a0 <PyObject_CallMethod@plt>:
    47a0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    47a4:	ldr	x17, [x16, #72]
    47a8:	add	x16, x16, #0x48
    47ac:	br	x17

00000000000047b0 <PyLong_FromDouble@plt>:
    47b0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    47b4:	ldr	x17, [x16, #80]
    47b8:	add	x16, x16, #0x50
    47bc:	br	x17

00000000000047c0 <_PyUnicode_Copy@plt>:
    47c0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    47c4:	ldr	x17, [x16, #88]
    47c8:	add	x16, x16, #0x58
    47cc:	br	x17

00000000000047d0 <_PyTime_ObjectToTimeval@plt>:
    47d0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    47d4:	ldr	x17, [x16, #96]
    47d8:	add	x16, x16, #0x60
    47dc:	br	x17

00000000000047e0 <PyNumber_Add@plt>:
    47e0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    47e4:	ldr	x17, [x16, #104]
    47e8:	add	x16, x16, #0x68
    47ec:	br	x17

00000000000047f0 <__cxa_finalize@plt>:
    47f0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    47f4:	ldr	x17, [x16, #112]
    47f8:	add	x16, x16, #0x70
    47fc:	br	x17

0000000000004800 <sprintf@plt>:
    4800:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4804:	ldr	x17, [x16, #120]
    4808:	add	x16, x16, #0x78
    480c:	br	x17

0000000000004810 <_PyTime_GetSystemClock@plt>:
    4810:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4814:	ldr	x17, [x16, #128]
    4818:	add	x16, x16, #0x80
    481c:	br	x17

0000000000004820 <PyBytes_FromStringAndSize@plt>:
    4820:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4824:	ldr	x17, [x16, #136]
    4828:	add	x16, x16, #0x88
    482c:	br	x17

0000000000004830 <_Py_Dealloc@plt>:
    4830:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4834:	ldr	x17, [x16, #144]
    4838:	add	x16, x16, #0x90
    483c:	br	x17

0000000000004840 <PyErr_NoMemory@plt>:
    4840:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4844:	ldr	x17, [x16, #152]
    4848:	add	x16, x16, #0x98
    484c:	br	x17

0000000000004850 <PyNumber_Multiply@plt>:
    4850:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4854:	ldr	x17, [x16, #160]
    4858:	add	x16, x16, #0xa0
    485c:	br	x17

0000000000004860 <_PyTime_AsTimevalTime_t@plt>:
    4860:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4864:	ldr	x17, [x16, #168]
    4868:	add	x16, x16, #0xa8
    486c:	br	x17

0000000000004870 <PyObject_Str@plt>:
    4870:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4874:	ldr	x17, [x16, #176]
    4878:	add	x16, x16, #0xb0
    487c:	br	x17

0000000000004880 <PyUnicode_WriteChar@plt>:
    4880:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4884:	ldr	x17, [x16, #184]
    4888:	add	x16, x16, #0xb8
    488c:	br	x17

0000000000004890 <_PyArg_UnpackKeywords@plt>:
    4890:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4894:	ldr	x17, [x16, #192]
    4898:	add	x16, x16, #0xc0
    489c:	br	x17

00000000000048a0 <PyErr_SetString@plt>:
    48a0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    48a4:	ldr	x17, [x16, #200]
    48a8:	add	x16, x16, #0xc8
    48ac:	br	x17

00000000000048b0 <PyObject_Malloc@plt>:
    48b0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    48b4:	ldr	x17, [x16, #208]
    48b8:	add	x16, x16, #0xd0
    48bc:	br	x17

00000000000048c0 <PyErr_ExceptionMatches@plt>:
    48c0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    48c4:	ldr	x17, [x16, #216]
    48c8:	add	x16, x16, #0xd8
    48cc:	br	x17

00000000000048d0 <_Py_HashBytes@plt>:
    48d0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    48d4:	ldr	x17, [x16, #224]
    48d8:	add	x16, x16, #0xe0
    48dc:	br	x17

00000000000048e0 <PyOS_snprintf@plt>:
    48e0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    48e4:	ldr	x17, [x16, #232]
    48e8:	add	x16, x16, #0xe8
    48ec:	br	x17

00000000000048f0 <PyUnicode_GetLength@plt>:
    48f0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    48f4:	ldr	x17, [x16, #240]
    48f8:	add	x16, x16, #0xf0
    48fc:	br	x17

0000000000004900 <PyFloat_FromDouble@plt>:
    4900:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4904:	ldr	x17, [x16, #248]
    4908:	add	x16, x16, #0xf8
    490c:	br	x17

0000000000004910 <PyType_Ready@plt>:
    4910:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4914:	ldr	x17, [x16, #256]
    4918:	add	x16, x16, #0x100
    491c:	br	x17

0000000000004920 <PyLong_FromLong@plt>:
    4920:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4924:	ldr	x17, [x16, #264]
    4928:	add	x16, x16, #0x108
    492c:	br	x17

0000000000004930 <_PyLong_DivmodNear@plt>:
    4930:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4934:	ldr	x17, [x16, #272]
    4938:	add	x16, x16, #0x110
    493c:	br	x17

0000000000004940 <PyUnicode_DecodeLocale@plt>:
    4940:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4944:	ldr	x17, [x16, #280]
    4948:	add	x16, x16, #0x118
    494c:	br	x17

0000000000004950 <PyNumber_And@plt>:
    4950:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4954:	ldr	x17, [x16, #288]
    4958:	add	x16, x16, #0x120
    495c:	br	x17

0000000000004960 <__gmon_start__@plt>:
    4960:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4964:	ldr	x17, [x16, #296]
    4968:	add	x16, x16, #0x128
    496c:	br	x17

0000000000004970 <PyObject_CallFunction@plt>:
    4970:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4974:	ldr	x17, [x16, #304]
    4978:	add	x16, x16, #0x130
    497c:	br	x17

0000000000004980 <PyUnicode_AsLatin1String@plt>:
    4980:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4984:	ldr	x17, [x16, #312]
    4988:	add	x16, x16, #0x138
    498c:	br	x17

0000000000004990 <PyTuple_New@plt>:
    4990:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4994:	ldr	x17, [x16, #320]
    4998:	add	x16, x16, #0x140
    499c:	br	x17

00000000000049a0 <PyNumber_Remainder@plt>:
    49a0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    49a4:	ldr	x17, [x16, #328]
    49a8:	add	x16, x16, #0x148
    49ac:	br	x17

00000000000049b0 <PyArg_UnpackTuple@plt>:
    49b0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    49b4:	ldr	x17, [x16, #336]
    49b8:	add	x16, x16, #0x150
    49bc:	br	x17

00000000000049c0 <Py_BuildValue@plt>:
    49c0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    49c4:	ldr	x17, [x16, #344]
    49c8:	add	x16, x16, #0x158
    49cc:	br	x17

00000000000049d0 <PyErr_Occurred@plt>:
    49d0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    49d4:	ldr	x17, [x16, #352]
    49d8:	add	x16, x16, #0x160
    49dc:	br	x17

00000000000049e0 <PyModule_Create2@plt>:
    49e0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    49e4:	ldr	x17, [x16, #360]
    49e8:	add	x16, x16, #0x168
    49ec:	br	x17

00000000000049f0 <_PyTime_gmtime@plt>:
    49f0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    49f4:	ldr	x17, [x16, #368]
    49f8:	add	x16, x16, #0x170
    49fc:	br	x17

0000000000004a00 <PyImport_ImportModuleNoBlock@plt>:
    4a00:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a04:	ldr	x17, [x16, #376]
    4a08:	add	x16, x16, #0x178
    4a0c:	br	x17

0000000000004a10 <memcmp@plt>:
    4a10:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a14:	ldr	x17, [x16, #384]
    4a18:	add	x16, x16, #0x180
    4a1c:	br	x17

0000000000004a20 <strcmp@plt>:
    4a20:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a24:	ldr	x17, [x16, #392]
    4a28:	add	x16, x16, #0x188
    4a2c:	br	x17

0000000000004a30 <_Py_CheckFunctionResult@plt>:
    4a30:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a34:	ldr	x17, [x16, #400]
    4a38:	add	x16, x16, #0x190
    4a3c:	br	x17

0000000000004a40 <PyFloat_AsDouble@plt>:
    4a40:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a44:	ldr	x17, [x16, #408]
    4a48:	add	x16, x16, #0x198
    4a4c:	br	x17

0000000000004a50 <PyObject_IsTrue@plt>:
    4a50:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a54:	ldr	x17, [x16, #416]
    4a58:	add	x16, x16, #0x1a0
    4a5c:	br	x17

0000000000004a60 <PyArg_ParseTuple@plt>:
    4a60:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a64:	ldr	x17, [x16, #424]
    4a68:	add	x16, x16, #0x1a8
    4a6c:	br	x17

0000000000004a70 <Py_FatalError@plt>:
    4a70:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a74:	ldr	x17, [x16, #432]
    4a78:	add	x16, x16, #0x1b0
    4a7c:	br	x17

0000000000004a80 <PyObject_Hash@plt>:
    4a80:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a84:	ldr	x17, [x16, #440]
    4a88:	add	x16, x16, #0x1b8
    4a8c:	br	x17

0000000000004a90 <_PyObject_CallMethodId@plt>:
    4a90:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4a94:	ldr	x17, [x16, #448]
    4a98:	add	x16, x16, #0x1c0
    4a9c:	br	x17

0000000000004aa0 <_PyTime_ObjectToTime_t@plt>:
    4aa0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4aa4:	ldr	x17, [x16, #456]
    4aa8:	add	x16, x16, #0x1c8
    4aac:	br	x17

0000000000004ab0 <modf@plt>:
    4ab0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4ab4:	ldr	x17, [x16, #464]
    4ab8:	add	x16, x16, #0x1d0
    4abc:	br	x17

0000000000004ac0 <PyLong_AsDouble@plt>:
    4ac0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4ac4:	ldr	x17, [x16, #472]
    4ac8:	add	x16, x16, #0x1d8
    4acc:	br	x17

0000000000004ad0 <_PyLong_AsTime_t@plt>:
    4ad0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4ad4:	ldr	x17, [x16, #480]
    4ad8:	add	x16, x16, #0x1e0
    4adc:	br	x17

0000000000004ae0 <_PyTraceMalloc_NewReference@plt>:
    4ae0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4ae4:	ldr	x17, [x16, #488]
    4ae8:	add	x16, x16, #0x1e8
    4aec:	br	x17

0000000000004af0 <_PyObject_GetDictPtr@plt>:
    4af0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4af4:	ldr	x17, [x16, #496]
    4af8:	add	x16, x16, #0x1f0
    4afc:	br	x17

0000000000004b00 <PyUnicode_FromString@plt>:
    4b00:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b04:	ldr	x17, [x16, #504]
    4b08:	add	x16, x16, #0x1f8
    4b0c:	br	x17

0000000000004b10 <_PyObject_CallMethodIdObjArgs@plt>:
    4b10:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b14:	ldr	x17, [x16, #512]
    4b18:	add	x16, x16, #0x200
    4b1c:	br	x17

0000000000004b20 <PyType_GetFlags@plt>:
    4b20:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b24:	ldr	x17, [x16, #520]
    4b28:	add	x16, x16, #0x208
    4b2c:	br	x17

0000000000004b30 <PyModule_AddObject@plt>:
    4b30:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b34:	ldr	x17, [x16, #528]
    4b38:	add	x16, x16, #0x210
    4b3c:	br	x17

0000000000004b40 <PyBytes_AsString@plt>:
    4b40:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b44:	ldr	x17, [x16, #536]
    4b48:	add	x16, x16, #0x218
    4b4c:	br	x17

0000000000004b50 <PyCapsule_New@plt>:
    4b50:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b54:	ldr	x17, [x16, #544]
    4b58:	add	x16, x16, #0x220
    4b5c:	br	x17

0000000000004b60 <PyType_IsSubtype@plt>:
    4b60:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b64:	ldr	x17, [x16, #552]
    4b68:	add	x16, x16, #0x228
    4b6c:	br	x17

0000000000004b70 <PyUnicode_AsUTF8AndSize@plt>:
    4b70:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b74:	ldr	x17, [x16, #560]
    4b78:	add	x16, x16, #0x230
    4b7c:	br	x17

0000000000004b80 <PyTuple_Size@plt>:
    4b80:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b84:	ldr	x17, [x16, #568]
    4b88:	add	x16, x16, #0x238
    4b8c:	br	x17

0000000000004b90 <PyErr_Format@plt>:
    4b90:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4b94:	ldr	x17, [x16, #576]
    4b98:	add	x16, x16, #0x240
    4b9c:	br	x17

0000000000004ba0 <PyNumber_Divmod@plt>:
    4ba0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4ba4:	ldr	x17, [x16, #584]
    4ba8:	add	x16, x16, #0x248
    4bac:	br	x17

0000000000004bb0 <PyUnicode_FromStringAndSize@plt>:
    4bb0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4bb4:	ldr	x17, [x16, #592]
    4bb8:	add	x16, x16, #0x250
    4bbc:	br	x17

0000000000004bc0 <_PyObject_MakeTpCall@plt>:
    4bc0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4bc4:	ldr	x17, [x16, #600]
    4bc8:	add	x16, x16, #0x258
    4bcc:	br	x17

0000000000004bd0 <PyUnicode_AppendAndDel@plt>:
    4bd0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4bd4:	ldr	x17, [x16, #608]
    4bd8:	add	x16, x16, #0x260
    4bdc:	br	x17

0000000000004be0 <_PyLong_AsInt@plt>:
    4be0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4be4:	ldr	x17, [x16, #616]
    4be8:	add	x16, x16, #0x268
    4bec:	br	x17

0000000000004bf0 <_PyTime_localtime@plt>:
    4bf0:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4bf4:	ldr	x17, [x16, #624]
    4bf8:	add	x16, x16, #0x270
    4bfc:	br	x17

0000000000004c00 <PyTuple_Pack@plt>:
    4c00:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4c04:	ldr	x17, [x16, #632]
    4c08:	add	x16, x16, #0x278
    4c0c:	br	x17

0000000000004c10 <PyNumber_TrueDivide@plt>:
    4c10:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4c14:	ldr	x17, [x16, #640]
    4c18:	add	x16, x16, #0x280
    4c1c:	br	x17

0000000000004c20 <PyUnicode_Substring@plt>:
    4c20:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4c24:	ldr	x17, [x16, #648]
    4c28:	add	x16, x16, #0x288
    4c2c:	br	x17

0000000000004c30 <PyNumber_FloorDivide@plt>:
    4c30:	adrp	x16, 29000 <memcpy@GLIBC_2.17>
    4c34:	ldr	x17, [x16, #656]
    4c38:	add	x16, x16, #0x290
    4c3c:	br	x17

Disassembly of section .text:

0000000000004c40 <PyInit__datetime@@Base-0xe430>:
    4c40:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    4c44:	ldr	x0, [x0, #4000]
    4c48:	cbz	x0, 4c50 <PyNumber_FloorDivide@plt+0x20>
    4c4c:	b	4960 <__gmon_start__@plt>
    4c50:	ret
    4c54:	nop
    4c58:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    4c5c:	add	x0, x0, #0xfd0
    4c60:	adrp	x1, 2a000 <PyInit__datetime@@Base+0x16f90>
    4c64:	add	x1, x1, #0xfd0
    4c68:	cmp	x1, x0
    4c6c:	b.eq	4c84 <PyNumber_FloorDivide@plt+0x54>  // b.none
    4c70:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    4c74:	ldr	x1, [x1, #3936]
    4c78:	cbz	x1, 4c84 <PyNumber_FloorDivide@plt+0x54>
    4c7c:	mov	x16, x1
    4c80:	br	x16
    4c84:	ret
    4c88:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    4c8c:	add	x0, x0, #0xfd0
    4c90:	adrp	x1, 2a000 <PyInit__datetime@@Base+0x16f90>
    4c94:	add	x1, x1, #0xfd0
    4c98:	sub	x1, x1, x0
    4c9c:	lsr	x2, x1, #63
    4ca0:	add	x1, x2, x1, asr #3
    4ca4:	cmp	xzr, x1, asr #1
    4ca8:	asr	x1, x1, #1
    4cac:	b.eq	4cc4 <PyNumber_FloorDivide@plt+0x94>  // b.none
    4cb0:	adrp	x2, 28000 <PyInit__datetime@@Base+0x14f90>
    4cb4:	ldr	x2, [x2, #4056]
    4cb8:	cbz	x2, 4cc4 <PyNumber_FloorDivide@plt+0x94>
    4cbc:	mov	x16, x2
    4cc0:	br	x16
    4cc4:	ret
    4cc8:	stp	x29, x30, [sp, #-32]!
    4ccc:	mov	x29, sp
    4cd0:	str	x19, [sp, #16]
    4cd4:	adrp	x19, 2a000 <PyInit__datetime@@Base+0x16f90>
    4cd8:	ldrb	w0, [x19, #4048]
    4cdc:	cbnz	w0, 4d04 <PyNumber_FloorDivide@plt+0xd4>
    4ce0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    4ce4:	ldr	x0, [x0, #3952]
    4ce8:	cbz	x0, 4cf8 <PyNumber_FloorDivide@plt+0xc8>
    4cec:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    4cf0:	ldr	x0, [x0, #672]
    4cf4:	bl	47f0 <__cxa_finalize@plt>
    4cf8:	bl	4c58 <PyNumber_FloorDivide@plt+0x28>
    4cfc:	mov	w0, #0x1                   	// #1
    4d00:	strb	w0, [x19, #4048]
    4d04:	ldr	x19, [sp, #16]
    4d08:	ldp	x29, x30, [sp], #32
    4d0c:	ret
    4d10:	b	4c88 <PyNumber_FloorDivide@plt+0x58>
    4d14:	nop
    4d18:	sub	w12, w0, #0x1
    4d1c:	mov	w8, #0x6bd                 	// #1725
    4d20:	movk	w8, #0x396b, lsl #16
    4d24:	mov	w14, #0x3ab1                	// #15025
    4d28:	asr	w13, w12, #31
    4d2c:	movk	w14, #0x2, lsl #16
    4d30:	smull	x8, w12, w8
    4d34:	mov	w5, #0x81fb                	// #33275
    4d38:	movk	w5, #0xe5ac, lsl #16
    4d3c:	mov	w11, #0x8eac                	// #36524
    4d40:	mov	w6, #0xb073                	// #45171
    4d44:	mov	w0, #0x5b5                 	// #1461
    4d48:	asr	x8, x8, #47
    4d4c:	movk	w6, #0x166d, lsl #16
    4d50:	sub	w7, w8, w13
    4d54:	mov	w4, #0xf9b1                	// #63921
    4d58:	mov	w8, w7
    4d5c:	movk	w4, #0xb38c, lsl #16
    4d60:	mov	w9, #0x19                  	// #25
    4d64:	mov	w10, #0x190                 	// #400
    4d68:	msub	w7, w7, w14, w12
    4d6c:	smull	x5, w7, w5
    4d70:	lsr	x5, x5, #32
    4d74:	add	w5, w7, w5
    4d78:	asr	w5, w5, #15
    4d7c:	sub	w5, w5, w7, asr #31
    4d80:	msub	w7, w5, w11, w7
    4d84:	smull	x6, w7, w6
    4d88:	asr	x6, x6, #39
    4d8c:	sub	w6, w6, w7, asr #31
    4d90:	msub	w7, w6, w0, w7
    4d94:	madd	w9, w5, w9, w6
    4d98:	smull	x0, w7, w4
    4d9c:	lsr	x0, x0, #32
    4da0:	add	w0, w7, w0
    4da4:	asr	w0, w0, #8
    4da8:	sub	w0, w0, w7, asr #31
    4dac:	add	w4, w0, w9, lsl #2
    4db0:	cmp	w0, #0x4
    4db4:	ccmp	w5, #0x4, #0x4, ne  // ne = any
    4db8:	madd	w4, w8, w10, w4
    4dbc:	add	w4, w4, #0x1
    4dc0:	str	w4, [x1]
    4dc4:	b.eq	4e94 <PyNumber_FloorDivide@plt+0x264>  // b.none
    4dc8:	mov	w4, #0x16d                 	// #365
    4dcc:	cmp	w0, #0x3
    4dd0:	adrp	x8, 15000 <PyInit__datetime@@Base+0x1f90>
    4dd4:	add	x9, x8, #0x810
    4dd8:	msub	w0, w0, w4, w7
    4ddc:	add	w4, w0, #0x32
    4de0:	asr	w4, w4, #5
    4de4:	ldr	w7, [x9, w4, sxtw #2]
    4de8:	b.eq	4e4c <PyNumber_FloorDivide@plt+0x21c>  // b.none
    4dec:	str	w4, [x2]
    4df0:	cmp	w7, w0
    4df4:	b.le	4e3c <PyNumber_FloorDivide@plt+0x20c>
    4df8:	sub	w4, w4, #0x1
    4dfc:	str	w4, [x2]
    4e00:	cmp	w4, #0x2
    4e04:	ldr	w1, [x1]
    4e08:	b.ne	4e80 <PyNumber_FloorDivide@plt+0x250>  // b.any
    4e0c:	tst	x1, #0x3
    4e10:	b.ne	4e80 <PyNumber_FloorDivide@plt+0x250>  // b.any
    4e14:	mov	w6, #0x5c29                	// #23593
    4e18:	mov	w5, #0x5c28                	// #23592
    4e1c:	movk	w6, #0xc28f, lsl #16
    4e20:	movk	w5, #0x28f, lsl #16
    4e24:	mov	w2, #0x1d                  	// #29
    4e28:	mul	w1, w1, w6
    4e2c:	ror	w6, w1, #2
    4e30:	cmp	w6, w5
    4e34:	b.ls	4e68 <PyNumber_FloorDivide@plt+0x238>  // b.plast
    4e38:	sub	w7, w7, w2
    4e3c:	add	w0, w0, #0x1
    4e40:	sub	w0, w0, w7
    4e44:	str	w0, [x3]
    4e48:	ret
    4e4c:	cmp	w6, #0x18
    4e50:	ccmp	w5, #0x3, #0x4, eq  // eq = none
    4e54:	b.ne	4dec <PyNumber_FloorDivide@plt+0x1bc>  // b.any
    4e58:	cmp	w4, #0x2
    4e5c:	str	w4, [x2]
    4e60:	cinc	w7, w7, gt
    4e64:	b	4df0 <PyNumber_FloorDivide@plt+0x1c0>
    4e68:	mov	w5, #0xd70a                	// #55050
    4e6c:	ror	w1, w1, #4
    4e70:	movk	w5, #0xa3, lsl #16
    4e74:	cmp	w1, w5
    4e78:	b.ls	4e38 <PyNumber_FloorDivide@plt+0x208>  // b.plast
    4e7c:	nop
    4e80:	add	x8, x8, #0x810
    4e84:	add	x8, x8, #0x40
    4e88:	ldr	w2, [x8, w4, sxtw #2]
    4e8c:	sub	w7, w7, w2
    4e90:	b	4e3c <PyNumber_FloorDivide@plt+0x20c>
    4e94:	sub	w4, w4, #0x1
    4e98:	str	w4, [x1]
    4e9c:	mov	w0, #0xc                   	// #12
    4ea0:	str	w0, [x2]
    4ea4:	mov	w0, #0x1f                  	// #31
    4ea8:	str	w0, [x3]
    4eac:	ret
    4eb0:	ldrb	w4, [x0]
    4eb4:	sub	w5, w4, #0x30
    4eb8:	cmp	w5, #0x9
    4ebc:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4ec0:	ldr	w4, [x1]
    4ec4:	add	w4, w4, w4, lsl #2
    4ec8:	add	w4, w5, w4, lsl #1
    4ecc:	str	w4, [x1]
    4ed0:	ldrb	w5, [x0, #1]
    4ed4:	sub	w5, w5, #0x30
    4ed8:	cmp	w5, #0x9
    4edc:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4ee0:	add	w4, w4, w4, lsl #2
    4ee4:	add	w4, w5, w4, lsl #1
    4ee8:	str	w4, [x1]
    4eec:	ldrb	w5, [x0, #2]
    4ef0:	sub	w5, w5, #0x30
    4ef4:	cmp	w5, #0x9
    4ef8:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4efc:	add	w4, w4, w4, lsl #2
    4f00:	add	w4, w5, w4, lsl #1
    4f04:	str	w4, [x1]
    4f08:	ldrb	w5, [x0, #3]
    4f0c:	sub	w5, w5, #0x30
    4f10:	cmp	w5, #0x9
    4f14:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4f18:	add	w4, w4, w4, lsl #2
    4f1c:	add	w4, w5, w4, lsl #1
    4f20:	str	w4, [x1]
    4f24:	ldrb	w1, [x0, #4]
    4f28:	cmp	w1, #0x2d
    4f2c:	b.ne	4fc4 <PyNumber_FloorDivide@plt+0x394>  // b.any
    4f30:	ldrb	w1, [x0, #5]
    4f34:	sub	w4, w1, #0x30
    4f38:	cmp	w4, #0x9
    4f3c:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4f40:	ldr	w1, [x2]
    4f44:	add	w1, w1, w1, lsl #2
    4f48:	add	w1, w4, w1, lsl #1
    4f4c:	str	w1, [x2]
    4f50:	ldrb	w4, [x0, #6]
    4f54:	sub	w4, w4, #0x30
    4f58:	cmp	w4, #0x9
    4f5c:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4f60:	add	w1, w1, w1, lsl #2
    4f64:	add	w1, w4, w1, lsl #1
    4f68:	str	w1, [x2]
    4f6c:	ldrb	w1, [x0, #7]
    4f70:	cmp	w1, #0x2d
    4f74:	b.ne	4fc4 <PyNumber_FloorDivide@plt+0x394>  // b.any
    4f78:	ldrb	w1, [x0, #8]
    4f7c:	sub	w2, w1, #0x30
    4f80:	cmp	w2, #0x9
    4f84:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4f88:	ldr	w1, [x3]
    4f8c:	add	w1, w1, w1, lsl #2
    4f90:	add	w1, w2, w1, lsl #1
    4f94:	str	w1, [x3]
    4f98:	ldrb	w2, [x0, #9]
    4f9c:	sub	w2, w2, #0x30
    4fa0:	cmp	w2, #0x9
    4fa4:	b.hi	4fbc <PyNumber_FloorDivide@plt+0x38c>  // b.pmore
    4fa8:	add	w1, w1, w1, lsl #2
    4fac:	mov	w0, #0x0                   	// #0
    4fb0:	add	w1, w2, w1, lsl #1
    4fb4:	str	w1, [x3]
    4fb8:	ret
    4fbc:	mov	w0, #0xffffffff            	// #-1
    4fc0:	ret
    4fc4:	mov	w0, #0xfffffffe            	// #-2
    4fc8:	ret
    4fcc:	nop
    4fd0:	ldrb	w6, [x0]
    4fd4:	sub	w7, w6, #0x30
    4fd8:	cmp	w7, #0x9
    4fdc:	b.hi	5070 <PyNumber_FloorDivide@plt+0x440>  // b.pmore
    4fe0:	ldr	w6, [x2]
    4fe4:	add	w6, w6, w6, lsl #2
    4fe8:	add	w6, w7, w6, lsl #1
    4fec:	str	w6, [x2]
    4ff0:	ldrb	w7, [x0, #1]
    4ff4:	sub	w8, w7, #0x30
    4ff8:	cmp	w8, #0x9
    4ffc:	b.hi	5070 <PyNumber_FloorDivide@plt+0x440>  // b.pmore
    5000:	add	w7, w6, w6, lsl #2
    5004:	add	x6, x0, #0x3
    5008:	cmp	x1, x6
    500c:	add	w7, w8, w7, lsl #1
    5010:	str	w7, [x2]
    5014:	ldrb	w2, [x0, #2]
    5018:	b.ls	5150 <PyNumber_FloorDivide@plt+0x520>  // b.plast
    501c:	cmp	w2, #0x3a
    5020:	b.eq	509c <PyNumber_FloorDivide@plt+0x46c>  // b.none
    5024:	cmp	w2, #0x2e
    5028:	mov	w0, #0xfffffffc            	// #-4
    502c:	b.ne	5074 <PyNumber_FloorDivide@plt+0x444>  // b.any
    5030:	sub	x3, x1, x6
    5034:	cmp	x3, #0x6
    5038:	ccmp	x3, #0x3, #0x4, ne  // ne = any
    503c:	b.ne	5070 <PyNumber_FloorDivide@plt+0x440>  // b.any
    5040:	cbnz	x3, 5060 <PyNumber_FloorDivide@plt+0x430>
    5044:	b	5148 <PyNumber_FloorDivide@plt+0x518>
    5048:	ldr	w0, [x5]
    504c:	cmp	x1, x6
    5050:	add	w0, w0, w0, lsl #2
    5054:	add	w0, w2, w0, lsl #1
    5058:	str	w0, [x5]
    505c:	b.eq	5078 <PyNumber_FloorDivide@plt+0x448>  // b.none
    5060:	ldrb	w0, [x6], #1
    5064:	sub	w2, w0, #0x30
    5068:	cmp	w2, #0x9
    506c:	b.ls	5048 <PyNumber_FloorDivide@plt+0x418>  // b.plast
    5070:	mov	w0, #0xfffffffd            	// #-3
    5074:	ret
    5078:	cmp	x3, #0x3
    507c:	b.ne	508c <PyNumber_FloorDivide@plt+0x45c>  // b.any
    5080:	mov	w2, #0x3e8                 	// #1000
    5084:	mul	w0, w0, w2
    5088:	str	w0, [x5]
    508c:	ldrb	w0, [x1]
    5090:	cmp	w0, #0x0
    5094:	cset	w0, ne  // ne = any
    5098:	ret
    509c:	ldrb	w2, [x0, #3]
    50a0:	sub	w6, w2, #0x30
    50a4:	cmp	w6, #0x9
    50a8:	b.hi	5070 <PyNumber_FloorDivide@plt+0x440>  // b.pmore
    50ac:	ldr	w2, [x3]
    50b0:	add	w2, w2, w2, lsl #2
    50b4:	add	w2, w6, w2, lsl #1
    50b8:	str	w2, [x3]
    50bc:	ldrb	w7, [x0, #4]
    50c0:	sub	w7, w7, #0x30
    50c4:	cmp	w7, #0x9
    50c8:	b.hi	5070 <PyNumber_FloorDivide@plt+0x440>  // b.pmore
    50cc:	add	w2, w2, w2, lsl #2
    50d0:	add	x6, x0, #0x6
    50d4:	cmp	x1, x6
    50d8:	add	w2, w7, w2, lsl #1
    50dc:	str	w2, [x3]
    50e0:	ldrb	w2, [x0, #5]
    50e4:	b.ls	5150 <PyNumber_FloorDivide@plt+0x520>  // b.plast
    50e8:	cmp	w2, #0x3a
    50ec:	b.ne	5024 <PyNumber_FloorDivide@plt+0x3f4>  // b.any
    50f0:	ldrb	w2, [x0, #6]
    50f4:	sub	w3, w2, #0x30
    50f8:	cmp	w3, #0x9
    50fc:	b.hi	5070 <PyNumber_FloorDivide@plt+0x440>  // b.pmore
    5100:	ldr	w2, [x4]
    5104:	add	w2, w2, w2, lsl #2
    5108:	add	w2, w3, w2, lsl #1
    510c:	str	w2, [x4]
    5110:	ldrb	w3, [x0, #7]
    5114:	sub	w3, w3, #0x30
    5118:	cmp	w3, #0x9
    511c:	b.hi	5070 <PyNumber_FloorDivide@plt+0x440>  // b.pmore
    5120:	add	w2, w2, w2, lsl #2
    5124:	add	x6, x0, #0x9
    5128:	cmp	x1, x6
    512c:	add	w2, w3, w2, lsl #1
    5130:	str	w2, [x4]
    5134:	ldrb	w2, [x0, #8]
    5138:	b.ls	5150 <PyNumber_FloorDivide@plt+0x520>  // b.plast
    513c:	cmp	w2, #0x3a
    5140:	b.ne	5024 <PyNumber_FloorDivide@plt+0x3f4>  // b.any
    5144:	b	5030 <PyNumber_FloorDivide@plt+0x400>
    5148:	mov	x1, x6
    514c:	b	508c <PyNumber_FloorDivide@plt+0x45c>
    5150:	cmp	w2, #0x0
    5154:	cset	w0, ne  // ne = any
    5158:	ret
    515c:	nop
    5160:	stp	x29, x30, [sp, #-32]!
    5164:	add	x11, x0, x1
    5168:	mov	x13, x6
    516c:	mov	x29, sp
    5170:	mov	x12, x7
    5174:	mov	x9, x0
    5178:	b	5188 <PyNumber_FloorDivide@plt+0x558>
    517c:	add	x9, x9, #0x1
    5180:	cmp	x11, x9
    5184:	b.ls	519c <PyNumber_FloorDivide@plt+0x56c>  // b.plast
    5188:	ldrb	w8, [x9]
    518c:	mov	w10, #0xfd                  	// #253
    5190:	sub	w8, w8, #0x2b
    5194:	tst	w8, w10
    5198:	b.ne	517c <PyNumber_FloorDivide@plt+0x54c>  // b.any
    519c:	mov	x1, x9
    51a0:	bl	4fd0 <PyNumber_FloorDivide@plt+0x3a0>
    51a4:	tbnz	w0, #31, 5234 <PyNumber_FloorDivide@plt+0x604>
    51a8:	cmp	x9, x11
    51ac:	b.eq	523c <PyNumber_FloorDivide@plt+0x60c>  // b.none
    51b0:	sub	x0, x11, x9
    51b4:	cmp	x0, #0x6
    51b8:	ccmp	x0, #0x9, #0x4, ne  // ne = any
    51bc:	ccmp	x0, #0x10, #0x4, ne  // ne = any
    51c0:	b.ne	5250 <PyNumber_FloorDivide@plt+0x620>  // b.any
    51c4:	mov	x0, x9
    51c8:	mov	w9, #0x1                   	// #1
    51cc:	mov	x1, x11
    51d0:	mov	x5, x12
    51d4:	add	x4, sp, #0x1c
    51d8:	add	x3, sp, #0x18
    51dc:	ldrb	w6, [x0], #1
    51e0:	add	x2, sp, #0x14
    51e4:	stp	wzr, wzr, [sp, #20]
    51e8:	cmp	w6, #0x2d
    51ec:	str	wzr, [sp, #28]
    51f0:	cneg	w10, w9, eq  // eq = none
    51f4:	bl	4fd0 <PyNumber_FloorDivide@plt+0x3a0>
    51f8:	ldp	w1, w3, [sp, #20]
    51fc:	mov	w5, #0xe10                 	// #3600
    5200:	ldr	w4, [sp, #28]
    5204:	lsl	w2, w3, #4
    5208:	sub	w2, w2, w3
    520c:	lsl	w2, w2, #2
    5210:	madd	w1, w1, w5, w2
    5214:	add	w1, w1, w4
    5218:	mul	w1, w1, w10
    521c:	str	w1, [x13]
    5220:	ldr	w1, [x12]
    5224:	mul	w1, w1, w10
    5228:	str	w1, [x12]
    522c:	cbnz	w0, 5250 <PyNumber_FloorDivide@plt+0x620>
    5230:	mov	w0, w9
    5234:	ldp	x29, x30, [sp], #32
    5238:	ret
    523c:	cmp	w0, #0x1
    5240:	b.eq	5250 <PyNumber_FloorDivide@plt+0x620>  // b.none
    5244:	mov	w0, #0x0                   	// #0
    5248:	ldp	x29, x30, [sp], #32
    524c:	ret
    5250:	mov	w0, #0xfffffffb            	// #-5
    5254:	b	5234 <PyNumber_FloorDivide@plt+0x604>
    5258:	ldr	x1, [x0, #24]
    525c:	cbnz	x1, 5270 <PyNumber_FloorDivide@plt+0x640>
    5260:	ldr	w0, [x0, #32]
    5264:	cmp	w0, #0x0
    5268:	cset	w0, ne  // ne = any
    526c:	ret
    5270:	mov	w0, #0x1                   	// #1
    5274:	ret
    5278:	ldrb	w1, [x0, #24]
    527c:	cbz	w1, 5294 <PyNumber_FloorDivide@plt+0x664>
    5280:	ldr	x0, [x0, #32]
    5284:	ldr	x1, [x0]
    5288:	add	x1, x1, #0x1
    528c:	str	x1, [x0]
    5290:	ret
    5294:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    5298:	ldr	x0, [x0, #4024]
    529c:	ldr	x1, [x0]
    52a0:	add	x1, x1, #0x1
    52a4:	str	x1, [x0]
    52a8:	ret
    52ac:	nop
    52b0:	ldrb	w1, [x0, #24]
    52b4:	cbz	w1, 52cc <PyNumber_FloorDivide@plt+0x69c>
    52b8:	ldr	x0, [x0, #40]
    52bc:	ldr	x1, [x0]
    52c0:	add	x1, x1, #0x1
    52c4:	str	x1, [x0]
    52c8:	ret
    52cc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    52d0:	ldr	x0, [x0, #4024]
    52d4:	ldr	x1, [x0]
    52d8:	add	x1, x1, #0x1
    52dc:	str	x1, [x0]
    52e0:	ret
    52e4:	nop
    52e8:	ldrb	w0, [x0, #31]
    52ec:	b	4920 <PyLong_FromLong@plt>
    52f0:	ldrb	w2, [x0, #29]
    52f4:	ldrb	w1, [x0, #28]
    52f8:	ldrb	w3, [x0, #30]
    52fc:	lsl	w0, w2, #8
    5300:	orr	w0, w0, w1, lsl #16
    5304:	orr	w0, w0, w3
    5308:	sxtw	x0, w0
    530c:	b	4920 <PyLong_FromLong@plt>
    5310:	ldrb	w0, [x0, #27]
    5314:	b	4920 <PyLong_FromLong@plt>
    5318:	ldrb	w0, [x0, #26]
    531c:	b	4920 <PyLong_FromLong@plt>
    5320:	ldrb	w0, [x0, #25]
    5324:	b	4920 <PyLong_FromLong@plt>
    5328:	ldrb	w0, [x0, #35]
    532c:	b	4920 <PyLong_FromLong@plt>
    5330:	ldrb	w2, [x0, #33]
    5334:	ldrb	w1, [x0, #32]
    5338:	ldrb	w3, [x0, #34]
    533c:	lsl	w0, w2, #8
    5340:	orr	w0, w0, w1, lsl #16
    5344:	orr	w0, w0, w3
    5348:	sxtw	x0, w0
    534c:	b	4920 <PyLong_FromLong@plt>
    5350:	ldrb	w0, [x0, #31]
    5354:	b	4920 <PyLong_FromLong@plt>
    5358:	ldrb	w0, [x0, #30]
    535c:	b	4920 <PyLong_FromLong@plt>
    5360:	ldrb	w0, [x0, #29]
    5364:	b	4920 <PyLong_FromLong@plt>
    5368:	ldrb	w0, [x0, #28]
    536c:	b	4920 <PyLong_FromLong@plt>
    5370:	ldrb	w0, [x0, #27]
    5374:	b	4920 <PyLong_FromLong@plt>
    5378:	ldurh	w0, [x0, #25]
    537c:	rev16	w0, w0
    5380:	and	x0, x0, #0xffff
    5384:	b	4920 <PyLong_FromLong@plt>
    5388:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    538c:	mov	x2, #0x0                   	// #0
    5390:	add	x1, x1, #0xad0
    5394:	b	4a90 <_PyObject_CallMethodId@plt>
    5398:	adrp	x3, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    539c:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    53a0:	add	x3, x3, #0xa00
    53a4:	add	x2, x2, #0x438
    53a8:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    53ac:	add	x1, x1, #0xad0
    53b0:	b	4a90 <_PyObject_CallMethodId@plt>
    53b4:	nop
    53b8:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    53bc:	mov	x2, #0x0                   	// #0
    53c0:	add	x1, x1, #0xad0
    53c4:	b	4a90 <_PyObject_CallMethodId@plt>
    53c8:	stp	x29, x30, [sp, #-16]!
    53cc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    53d0:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    53d4:	mov	x29, sp
    53d8:	ldr	x0, [x0, #3928]
    53dc:	add	x2, x2, #0xa08
    53e0:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    53e4:	add	x1, x1, #0xa10
    53e8:	ldr	x0, [x0]
    53ec:	bl	4b90 <PyErr_Format@plt>
    53f0:	mov	x0, #0x0                   	// #0
    53f4:	ldp	x29, x30, [sp], #16
    53f8:	ret
    53fc:	nop
    5400:	stp	x29, x30, [sp, #-16]!
    5404:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    5408:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    540c:	mov	x29, sp
    5410:	ldr	x0, [x0, #3928]
    5414:	add	x2, x2, #0xa38
    5418:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    541c:	add	x1, x1, #0xa10
    5420:	ldr	x0, [x0]
    5424:	bl	4b90 <PyErr_Format@plt>
    5428:	mov	x0, #0x0                   	// #0
    542c:	ldp	x29, x30, [sp], #16
    5430:	ret
    5434:	nop
    5438:	stp	x29, x30, [sp, #-16]!
    543c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    5440:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5444:	mov	x29, sp
    5448:	ldr	x0, [x0, #3928]
    544c:	add	x2, x2, #0xa48
    5450:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5454:	add	x1, x1, #0xa10
    5458:	ldr	x0, [x0]
    545c:	bl	4b90 <PyErr_Format@plt>
    5460:	mov	x0, #0x0                   	// #0
    5464:	ldp	x29, x30, [sp], #16
    5468:	ret
    546c:	nop
    5470:	stp	x29, x30, [sp, #-48]!
    5474:	mov	x29, sp
    5478:	stp	x19, x20, [sp, #16]
    547c:	mov	w19, w1
    5480:	mov	w20, w2
    5484:	str	x21, [sp, #32]
    5488:	mov	w21, w0
    548c:	mov	x0, x4
    5490:	cbnz	w3, 54e0 <PyNumber_FloorDivide@plt+0x8b0>
    5494:	mov	w3, #0xc9ff                	// #51711
    5498:	mov	w1, #0x93fe                	// #37886
    549c:	movk	w3, #0x3b9a, lsl #16
    54a0:	add	w4, w21, w3
    54a4:	movk	w1, #0x7735, lsl #16
    54a8:	cmp	w4, w1
    54ac:	b.hi	557c <PyNumber_FloorDivide@plt+0x94c>  // b.pmore
    54b0:	ldr	x2, [x0, #304]
    54b4:	mov	x1, #0x0                   	// #0
    54b8:	blr	x2
    54bc:	cbz	x0, 54d0 <PyNumber_FloorDivide@plt+0x8a0>
    54c0:	mov	x1, #0xffffffffffffffff    	// #-1
    54c4:	str	x1, [x0, #16]
    54c8:	stp	w21, w19, [x0, #24]
    54cc:	str	w20, [x0, #32]
    54d0:	ldp	x19, x20, [sp, #16]
    54d4:	ldr	x21, [sp, #32]
    54d8:	ldp	x29, x30, [sp], #48
    54dc:	ret
    54e0:	mov	w1, #0x423f                	// #16959
    54e4:	movk	w1, #0xf, lsl #16
    54e8:	cmp	w2, w1
    54ec:	b.ls	5518 <PyNumber_FloorDivide@plt+0x8e8>  // b.plast
    54f0:	mov	w1, #0xde83                	// #56963
    54f4:	mov	w2, #0x4240                	// #16960
    54f8:	movk	w1, #0x431b, lsl #16
    54fc:	movk	w2, #0xf, lsl #16
    5500:	smull	x1, w20, w1
    5504:	asr	x1, x1, #50
    5508:	sub	w1, w1, w20, asr #31
    550c:	msub	w20, w1, w2, w20
    5510:	tbnz	w20, #31, 556c <PyNumber_FloorDivide@plt+0x93c>
    5514:	add	w19, w19, w1
    5518:	mov	w1, #0x517f                	// #20863
    551c:	movk	w1, #0x1, lsl #16
    5520:	cmp	w19, w1
    5524:	b.ls	5494 <PyNumber_FloorDivide@plt+0x864>  // b.plast
    5528:	mov	w1, #0x4507                	// #17671
    552c:	mov	w2, #0x5180                	// #20864
    5530:	movk	w1, #0xc22e, lsl #16
    5534:	movk	w2, #0x1, lsl #16
    5538:	smull	x1, w19, w1
    553c:	lsr	x1, x1, #32
    5540:	add	w1, w19, w1
    5544:	asr	w1, w1, #16
    5548:	sub	w1, w1, w19, asr #31
    554c:	msub	w19, w1, w2, w19
    5550:	tbnz	w19, #31, 555c <PyNumber_FloorDivide@plt+0x92c>
    5554:	add	w21, w21, w1
    5558:	b	5494 <PyNumber_FloorDivide@plt+0x864>
    555c:	sub	w1, w1, #0x1
    5560:	add	w19, w19, w2
    5564:	add	w21, w21, w1
    5568:	b	5494 <PyNumber_FloorDivide@plt+0x864>
    556c:	sub	w1, w1, #0x1
    5570:	add	w20, w20, w2
    5574:	add	w19, w19, w1
    5578:	b	5518 <PyNumber_FloorDivide@plt+0x8e8>
    557c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    5580:	mov	w2, w21
    5584:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5588:	add	x1, x1, #0xa50
    558c:	ldr	x0, [x0, #4008]
    5590:	ldr	x0, [x0]
    5594:	bl	4b90 <PyErr_Format@plt>
    5598:	mov	x0, #0x0                   	// #0
    559c:	b	54d0 <PyNumber_FloorDivide@plt+0x8a0>
    55a0:	mov	x4, x0
    55a4:	stp	x29, x30, [sp, #-32]!
    55a8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    55ac:	mov	x29, sp
    55b0:	add	x0, x1, #0xa78
    55b4:	ldp	w1, w2, [x4, #24]
    55b8:	ldr	w3, [x4, #32]
    55bc:	str	x19, [sp, #16]
    55c0:	ldr	x19, [x4, #8]
    55c4:	bl	49c0 <Py_BuildValue@plt>
    55c8:	mov	x2, x0
    55cc:	mov	x1, x19
    55d0:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    55d4:	ldr	x19, [sp, #16]
    55d8:	add	x0, x0, #0xa80
    55dc:	ldp	x29, x30, [sp], #32
    55e0:	b	49c0 <Py_BuildValue@plt>
    55e4:	nop
    55e8:	cmp	w1, #0x3
    55ec:	b.eq	5690 <PyNumber_FloorDivide@plt+0xa60>  // b.none
    55f0:	b.gt	5648 <PyNumber_FloorDivide@plt+0xa18>
    55f4:	cmp	w1, #0x1
    55f8:	b.eq	5660 <PyNumber_FloorDivide@plt+0xa30>  // b.none
    55fc:	cmp	w1, #0x2
    5600:	b.ne	5624 <PyNumber_FloorDivide@plt+0x9f4>  // b.any
    5604:	cbz	w0, 562c <PyNumber_FloorDivide@plt+0x9fc>
    5608:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    560c:	ldr	x1, [x1, #3992]
    5610:	mov	x0, x1
    5614:	ldr	x2, [x1]
    5618:	add	x2, x2, #0x1
    561c:	str	x2, [x1]
    5620:	ret
    5624:	cbnz	w1, 56b0 <PyNumber_FloorDivide@plt+0xa80>
    5628:	tbz	w0, #31, 5608 <PyNumber_FloorDivide@plt+0x9d8>
    562c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    5630:	ldr	x1, [x1, #4040]
    5634:	mov	x0, x1
    5638:	ldr	x2, [x1]
    563c:	add	x2, x2, #0x1
    5640:	str	x2, [x1]
    5644:	ret
    5648:	cmp	w1, #0x4
    564c:	b.eq	5684 <PyNumber_FloorDivide@plt+0xa54>  // b.none
    5650:	cmp	w1, #0x5
    5654:	b.ne	56b0 <PyNumber_FloorDivide@plt+0xa80>  // b.any
    5658:	tbnz	w0, #31, 5608 <PyNumber_FloorDivide@plt+0x9d8>
    565c:	b	562c <PyNumber_FloorDivide@plt+0x9fc>
    5660:	cmp	w0, #0x0
    5664:	b.le	562c <PyNumber_FloorDivide@plt+0x9fc>
    5668:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    566c:	ldr	x1, [x1, #3992]
    5670:	mov	x0, x1
    5674:	ldr	x2, [x1]
    5678:	add	x2, x2, #0x1
    567c:	str	x2, [x1]
    5680:	ret
    5684:	cmp	w0, #0x0
    5688:	b.le	5608 <PyNumber_FloorDivide@plt+0x9d8>
    568c:	b	562c <PyNumber_FloorDivide@plt+0x9fc>
    5690:	cbnz	w0, 562c <PyNumber_FloorDivide@plt+0x9fc>
    5694:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    5698:	ldr	x1, [x1, #3992]
    569c:	mov	x0, x1
    56a0:	ldr	x2, [x1]
    56a4:	add	x2, x2, #0x1
    56a8:	str	x2, [x1]
    56ac:	ret
    56b0:	stp	x29, x30, [sp, #-16]!
    56b4:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    56b8:	add	x0, x0, #0xa88
    56bc:	mov	x29, sp
    56c0:	bl	4a70 <Py_FatalError@plt>
    56c4:	nop
    56c8:	adrp	x1, 2a000 <PyInit__datetime@@Base+0x16f90>
    56cc:	ldr	x2, [x1, #4056]
    56d0:	ldr	x1, [x0, #8]
    56d4:	cmp	x2, x0
    56d8:	ldr	x1, [x1, #24]
    56dc:	b.eq	5700 <PyNumber_FloorDivide@plt+0xad0>  // b.none
    56e0:	ldp	x2, x3, [x0, #16]
    56e4:	cbz	x3, 56f4 <PyNumber_FloorDivide@plt+0xac4>
    56e8:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    56ec:	add	x0, x0, #0xab8
    56f0:	b	4720 <PyUnicode_FromFormat@plt>
    56f4:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    56f8:	add	x0, x0, #0xab0
    56fc:	b	4720 <PyUnicode_FromFormat@plt>
    5700:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5704:	add	x0, x0, #0xaa8
    5708:	b	4720 <PyUnicode_FromFormat@plt>
    570c:	nop
    5710:	ldp	w3, w4, [x0, #28]
    5714:	mov	w1, #0x8889                	// #34953
    5718:	movk	w1, #0x8888, lsl #16
    571c:	smull	x2, w3, w1
    5720:	lsr	x2, x2, #32
    5724:	add	w2, w3, w2
    5728:	asr	w2, w2, #5
    572c:	sub	w2, w2, w3, asr #31
    5730:	lsl	w5, w2, #4
    5734:	sub	w5, w5, w2
    5738:	subs	w3, w3, w5, lsl #2
    573c:	b.pl	5748 <PyNumber_FloorDivide@plt+0xb18>  // b.nfrst
    5740:	sub	w2, w2, #0x1
    5744:	add	w3, w3, #0x3c
    5748:	mov	w1, #0x8889                	// #34953
    574c:	movk	w1, #0x8888, lsl #16
    5750:	smull	x1, w2, w1
    5754:	lsr	x1, x1, #32
    5758:	add	w1, w2, w1
    575c:	asr	w1, w1, #5
    5760:	sub	w1, w1, w2, asr #31
    5764:	lsl	w5, w1, #4
    5768:	sub	w5, w5, w1
    576c:	subs	w2, w2, w5, lsl #2
    5770:	b.pl	577c <PyNumber_FloorDivide@plt+0xb4c>  // b.nfrst
    5774:	sub	w1, w1, #0x1
    5778:	add	w2, w2, #0x3c
    577c:	ldr	w0, [x0, #24]
    5780:	cbz	w0, 57c8 <PyNumber_FloorDivide@plt+0xb98>
    5784:	add	w5, w0, #0x1
    5788:	and	w5, w5, #0xfffffffd
    578c:	cmp	w5, #0x0
    5790:	cbz	w4, 57e4 <PyNumber_FloorDivide@plt+0xbb4>
    5794:	adrp	x7, 14000 <PyInit__datetime@@Base+0xf90>
    5798:	adrp	x8, 14000 <PyInit__datetime@@Base+0xf90>
    579c:	add	x7, x7, #0x438
    57a0:	add	x8, x8, #0xda0
    57a4:	mov	w6, w4
    57a8:	mov	w5, w3
    57ac:	mov	w4, w2
    57b0:	mov	w3, w1
    57b4:	csel	x2, x8, x7, eq  // eq = none
    57b8:	mov	w1, w0
    57bc:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    57c0:	add	x0, x0, #0xac8
    57c4:	b	4720 <PyUnicode_FromFormat@plt>
    57c8:	cbz	w4, 57d8 <PyNumber_FloorDivide@plt+0xba8>
    57cc:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    57d0:	add	x0, x0, #0xb00
    57d4:	b	4720 <PyUnicode_FromFormat@plt>
    57d8:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    57dc:	add	x0, x0, #0xb18
    57e0:	b	4720 <PyUnicode_FromFormat@plt>
    57e4:	adrp	x6, 14000 <PyInit__datetime@@Base+0xf90>
    57e8:	adrp	x7, 14000 <PyInit__datetime@@Base+0xf90>
    57ec:	add	x6, x6, #0x438
    57f0:	add	x7, x7, #0xda0
    57f4:	mov	w5, w3
    57f8:	mov	w4, w2
    57fc:	mov	w3, w1
    5800:	csel	x2, x7, x6, eq  // eq = none
    5804:	mov	w1, w0
    5808:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    580c:	add	x0, x0, #0xae8
    5810:	b	4720 <PyUnicode_FromFormat@plt>
    5814:	nop
    5818:	mov	x1, x0
    581c:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5820:	add	x0, x2, #0xb28
    5824:	ldrb	w3, [x1, #28]
    5828:	ldrb	w2, [x1, #27]
    582c:	ldurh	w1, [x1, #25]
    5830:	rev16	w1, w1
    5834:	and	w1, w1, #0xffff
    5838:	b	4720 <PyUnicode_FromFormat@plt>
    583c:	nop
    5840:	mov	x2, x0
    5844:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5848:	add	x0, x1, #0xb38
    584c:	ldr	x1, [x2, #8]
    5850:	ldrb	w4, [x2, #28]
    5854:	ldrb	w3, [x2, #27]
    5858:	ldr	x1, [x1, #24]
    585c:	ldurh	w2, [x2, #25]
    5860:	rev16	w2, w2
    5864:	and	w2, w2, #0xffff
    5868:	b	4720 <PyUnicode_FromFormat@plt>
    586c:	nop
    5870:	stp	x29, x30, [sp, #-32]!
    5874:	cmp	x1, #0x0
    5878:	mov	x1, #0x30                  	// #48
    587c:	mov	x29, sp
    5880:	stp	x19, x20, [sp, #16]
    5884:	mov	x20, x0
    5888:	mov	x0, #0x28                  	// #40
    588c:	csel	x0, x1, x0, ne  // ne = any
    5890:	bl	48b0 <PyObject_Malloc@plt>
    5894:	cbz	x0, 5910 <PyNumber_FloorDivide@plt+0xce0>
    5898:	mov	x19, x0
    589c:	mov	x0, x20
    58a0:	str	x20, [x19, #8]
    58a4:	bl	4b20 <PyType_GetFlags@plt>
    58a8:	tbnz	w0, #9, 58d4 <PyNumber_FloorDivide@plt+0xca4>
    58ac:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    58b0:	ldr	x0, [x0, #3984]
    58b4:	ldr	w0, [x0, #4]
    58b8:	cbnz	w0, 58f0 <PyNumber_FloorDivide@plt+0xcc0>
    58bc:	mov	x1, #0x1                   	// #1
    58c0:	str	x1, [x19]
    58c4:	mov	x0, x19
    58c8:	ldp	x19, x20, [sp, #16]
    58cc:	ldp	x29, x30, [sp], #32
    58d0:	ret
    58d4:	ldr	x0, [x20]
    58d8:	add	x0, x0, #0x1
    58dc:	str	x0, [x20]
    58e0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    58e4:	ldr	x0, [x0, #3984]
    58e8:	ldr	w0, [x0, #4]
    58ec:	cbz	w0, 58bc <PyNumber_FloorDivide@plt+0xc8c>
    58f0:	mov	x0, x19
    58f4:	bl	4ae0 <_PyTraceMalloc_NewReference@plt>
    58f8:	mov	x1, #0x1                   	// #1
    58fc:	str	x1, [x19]
    5900:	mov	x0, x19
    5904:	ldp	x19, x20, [sp, #16]
    5908:	ldp	x29, x30, [sp], #32
    590c:	ret
    5910:	ldp	x19, x20, [sp, #16]
    5914:	ldp	x29, x30, [sp], #32
    5918:	b	4840 <PyErr_NoMemory@plt>
    591c:	nop
    5920:	stp	x29, x30, [sp, #-32]!
    5924:	mov	x2, x0
    5928:	mov	x1, #0x4                   	// #4
    592c:	mov	x29, sp
    5930:	add	x0, x0, #0x19
    5934:	str	x19, [sp, #16]
    5938:	ldr	x19, [x2, #8]
    593c:	bl	4820 <PyBytes_FromStringAndSize@plt>
    5940:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5944:	mov	x1, x0
    5948:	add	x0, x2, #0xb48
    594c:	bl	49c0 <Py_BuildValue@plt>
    5950:	mov	x2, x0
    5954:	mov	x1, x19
    5958:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    595c:	ldr	x19, [sp, #16]
    5960:	add	x0, x0, #0xb50
    5964:	ldp	x29, x30, [sp], #32
    5968:	b	49c0 <Py_BuildValue@plt>
    596c:	nop
    5970:	stp	x29, x30, [sp, #-48]!
    5974:	mov	x29, sp
    5978:	add	x2, sp, #0x28
    597c:	str	x19, [sp, #16]
    5980:	mov	x19, x0
    5984:	mov	x0, x1
    5988:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    598c:	add	x1, x1, #0xb58
    5990:	bl	4a60 <PyArg_ParseTuple@plt>
    5994:	cbz	w0, 59e0 <PyNumber_FloorDivide@plt+0xdb0>
    5998:	ldr	x0, [sp, #40]
    599c:	bl	48f0 <PyUnicode_GetLength@plt>
    59a0:	cbz	x0, 59cc <PyNumber_FloorDivide@plt+0xd9c>
    59a4:	ldr	x2, [sp, #40]
    59a8:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    59ac:	add	x1, x1, #0xad0
    59b0:	mov	x0, x19
    59b4:	add	x1, x1, #0x18
    59b8:	mov	x3, #0x0                   	// #0
    59bc:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    59c0:	ldr	x19, [sp, #16]
    59c4:	ldp	x29, x30, [sp], #48
    59c8:	ret
    59cc:	mov	x0, x19
    59d0:	bl	4870 <PyObject_Str@plt>
    59d4:	ldr	x19, [sp, #16]
    59d8:	ldp	x29, x30, [sp], #48
    59dc:	ret
    59e0:	mov	x0, #0x0                   	// #0
    59e4:	ldr	x19, [sp, #16]
    59e8:	ldp	x29, x30, [sp], #48
    59ec:	ret
    59f0:	stp	x29, x30, [sp, #-48]!
    59f4:	mov	x29, sp
    59f8:	add	x3, sp, #0x28
    59fc:	add	x2, sp, #0x20
    5a00:	stp	x19, x20, [sp, #16]
    5a04:	mov	x20, x0
    5a08:	mov	x0, x1
    5a0c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5a10:	add	x1, x1, #0xb68
    5a14:	bl	4a60 <PyArg_ParseTuple@plt>
    5a18:	cbz	w0, 5a68 <PyNumber_FloorDivide@plt+0xe38>
    5a1c:	adrp	x19, 2a000 <PyInit__datetime@@Base+0x16f90>
    5a20:	add	x19, x19, #0xfd8
    5a24:	ldr	x0, [x19, #8]
    5a28:	cbz	x0, 5a54 <PyNumber_FloorDivide@plt+0xe24>
    5a2c:	ldp	x3, x4, [sp, #32]
    5a30:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    5a34:	add	x1, x1, #0xad0
    5a38:	mov	x2, x20
    5a3c:	add	x1, x1, #0x30
    5a40:	mov	x5, #0x0                   	// #0
    5a44:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    5a48:	ldp	x19, x20, [sp, #16]
    5a4c:	ldp	x29, x30, [sp], #48
    5a50:	ret
    5a54:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5a58:	add	x0, x0, #0xb78
    5a5c:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    5a60:	str	x0, [x19, #8]
    5a64:	cbnz	x0, 5a2c <PyNumber_FloorDivide@plt+0xdfc>
    5a68:	mov	x0, #0x0                   	// #0
    5a6c:	ldp	x19, x20, [sp, #16]
    5a70:	ldp	x29, x30, [sp], #48
    5a74:	ret
    5a78:	stp	x29, x30, [sp, #-32]!
    5a7c:	mov	x29, sp
    5a80:	str	x19, [sp, #16]
    5a84:	mov	x19, x0
    5a88:	ldr	x0, [x0, #16]
    5a8c:	cmn	x0, #0x1
    5a90:	b.eq	5aa0 <PyNumber_FloorDivide@plt+0xe70>  // b.none
    5a94:	ldr	x19, [sp, #16]
    5a98:	ldp	x29, x30, [sp], #32
    5a9c:	ret
    5aa0:	add	x0, x19, #0x19
    5aa4:	mov	x1, #0x4                   	// #4
    5aa8:	bl	48d0 <_Py_HashBytes@plt>
    5aac:	str	x0, [x19, #16]
    5ab0:	ldr	x19, [sp, #16]
    5ab4:	ldp	x29, x30, [sp], #32
    5ab8:	ret
    5abc:	nop
    5ac0:	stp	x29, x30, [sp, #-32]!
    5ac4:	mov	x29, sp
    5ac8:	stp	x19, x20, [sp, #16]
    5acc:	mov	x19, x0
    5ad0:	ldr	x0, [x0, #16]
    5ad4:	cmn	x0, #0x1
    5ad8:	b.eq	5ae8 <PyNumber_FloorDivide@plt+0xeb8>  // b.none
    5adc:	ldp	x19, x20, [sp, #16]
    5ae0:	ldp	x29, x30, [sp], #32
    5ae4:	ret
    5ae8:	ldp	w1, w2, [x19, #24]
    5aec:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5af0:	ldr	w3, [x19, #32]
    5af4:	add	x0, x0, #0xa78
    5af8:	bl	49c0 <Py_BuildValue@plt>
    5afc:	mov	x20, x0
    5b00:	cbz	x0, 5b24 <PyNumber_FloorDivide@plt+0xef4>
    5b04:	bl	4a80 <PyObject_Hash@plt>
    5b08:	ldr	x1, [x20]
    5b0c:	str	x0, [x19, #16]
    5b10:	sub	x1, x1, #0x1
    5b14:	str	x1, [x20]
    5b18:	cbnz	x1, 5adc <PyNumber_FloorDivide@plt+0xeac>
    5b1c:	mov	x0, x20
    5b20:	bl	4830 <_Py_Dealloc@plt>
    5b24:	ldr	x0, [x19, #16]
    5b28:	ldp	x19, x20, [sp, #16]
    5b2c:	ldp	x29, x30, [sp], #32
    5b30:	ret
    5b34:	nop
    5b38:	stp	x29, x30, [sp, #-32]!
    5b3c:	mov	x29, sp
    5b40:	str	x19, [sp, #16]
    5b44:	mov	x19, x0
    5b48:	ldr	x0, [x0, #16]
    5b4c:	cbz	x0, 5b64 <PyNumber_FloorDivide@plt+0xf34>
    5b50:	ldr	x1, [x0]
    5b54:	str	xzr, [x19, #16]
    5b58:	sub	x1, x1, #0x1
    5b5c:	str	x1, [x0]
    5b60:	cbz	x1, 5bbc <PyNumber_FloorDivide@plt+0xf8c>
    5b64:	ldr	x0, [x19, #24]
    5b68:	cbz	x0, 5b80 <PyNumber_FloorDivide@plt+0xf50>
    5b6c:	ldr	x1, [x0]
    5b70:	str	xzr, [x19, #24]
    5b74:	sub	x1, x1, #0x1
    5b78:	str	x1, [x0]
    5b7c:	cbz	x1, 5b9c <PyNumber_FloorDivide@plt+0xf6c>
    5b80:	ldr	x1, [x19, #8]
    5b84:	mov	x0, x19
    5b88:	ldr	x19, [sp, #16]
    5b8c:	ldp	x29, x30, [sp], #32
    5b90:	ldr	x1, [x1, #320]
    5b94:	mov	x16, x1
    5b98:	br	x16
    5b9c:	bl	4830 <_Py_Dealloc@plt>
    5ba0:	ldr	x1, [x19, #8]
    5ba4:	mov	x0, x19
    5ba8:	ldr	x19, [sp, #16]
    5bac:	ldp	x29, x30, [sp], #32
    5bb0:	ldr	x1, [x1, #320]
    5bb4:	mov	x16, x1
    5bb8:	br	x16
    5bbc:	bl	4830 <_Py_Dealloc@plt>
    5bc0:	b	5b64 <PyNumber_FloorDivide@plt+0xf34>
    5bc4:	nop
    5bc8:	stp	x29, x30, [sp, #-32]!
    5bcc:	mov	x29, sp
    5bd0:	str	x19, [sp, #16]
    5bd4:	mov	x19, x0
    5bd8:	ldrb	w0, [x0, #24]
    5bdc:	cbz	w0, 5bf8 <PyNumber_FloorDivide@plt+0xfc8>
    5be0:	ldr	x0, [x19, #32]
    5be4:	cbz	x0, 5bf8 <PyNumber_FloorDivide@plt+0xfc8>
    5be8:	ldr	x1, [x0]
    5bec:	sub	x1, x1, #0x1
    5bf0:	str	x1, [x0]
    5bf4:	cbz	x1, 5c14 <PyNumber_FloorDivide@plt+0xfe4>
    5bf8:	ldr	x1, [x19, #8]
    5bfc:	mov	x0, x19
    5c00:	ldr	x19, [sp, #16]
    5c04:	ldp	x29, x30, [sp], #32
    5c08:	ldr	x1, [x1, #320]
    5c0c:	mov	x16, x1
    5c10:	br	x16
    5c14:	bl	4830 <_Py_Dealloc@plt>
    5c18:	ldr	x1, [x19, #8]
    5c1c:	mov	x0, x19
    5c20:	ldr	x19, [sp, #16]
    5c24:	ldp	x29, x30, [sp], #32
    5c28:	ldr	x1, [x1, #320]
    5c2c:	mov	x16, x1
    5c30:	br	x16
    5c34:	nop
    5c38:	stp	x29, x30, [sp, #-32]!
    5c3c:	mov	x29, sp
    5c40:	str	x19, [sp, #16]
    5c44:	mov	x19, x0
    5c48:	ldrb	w0, [x0, #24]
    5c4c:	cbz	w0, 5c68 <PyNumber_FloorDivide@plt+0x1038>
    5c50:	ldr	x0, [x19, #40]
    5c54:	cbz	x0, 5c68 <PyNumber_FloorDivide@plt+0x1038>
    5c58:	ldr	x1, [x0]
    5c5c:	sub	x1, x1, #0x1
    5c60:	str	x1, [x0]
    5c64:	cbz	x1, 5c84 <PyNumber_FloorDivide@plt+0x1054>
    5c68:	ldr	x1, [x19, #8]
    5c6c:	mov	x0, x19
    5c70:	ldr	x19, [sp, #16]
    5c74:	ldp	x29, x30, [sp], #32
    5c78:	ldr	x1, [x1, #320]
    5c7c:	mov	x16, x1
    5c80:	br	x16
    5c84:	bl	4830 <_Py_Dealloc@plt>
    5c88:	ldr	x1, [x19, #8]
    5c8c:	mov	x0, x19
    5c90:	ldr	x19, [sp, #16]
    5c94:	ldp	x29, x30, [sp], #32
    5c98:	ldr	x1, [x1, #320]
    5c9c:	mov	x16, x1
    5ca0:	br	x16
    5ca4:	nop
    5ca8:	stp	x29, x30, [sp, #-64]!
    5cac:	mov	x29, sp
    5cb0:	add	x2, sp, #0x3c
    5cb4:	stp	x19, x20, [sp, #16]
    5cb8:	mov	x19, x0
    5cbc:	mov	x0, x1
    5cc0:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5cc4:	add	x1, x1, #0xb88
    5cc8:	bl	4a60 <PyArg_ParseTuple@plt>
    5ccc:	cbz	w0, 5d94 <PyNumber_FloorDivide@plt+0x1164>
    5cd0:	add	x0, x19, #0x19
    5cd4:	mov	x1, #0x6                   	// #6
    5cd8:	stp	x21, x22, [sp, #32]
    5cdc:	ldr	w22, [sp, #60]
    5ce0:	ldr	x21, [x19, #8]
    5ce4:	bl	4820 <PyBytes_FromStringAndSize@plt>
    5ce8:	mov	x20, x0
    5cec:	cbz	x0, 5da4 <PyNumber_FloorDivide@plt+0x1174>
    5cf0:	cmp	w22, #0x3
    5cf4:	b.le	5d0c <PyNumber_FloorDivide@plt+0x10dc>
    5cf8:	ldrb	w0, [x19, #31]
    5cfc:	cbz	w0, 5d0c <PyNumber_FloorDivide@plt+0x10dc>
    5d00:	ldrb	w0, [x20, #32]
    5d04:	orr	w0, w0, #0xffffff80
    5d08:	strb	w0, [x20, #32]
    5d0c:	ldrb	w0, [x19, #24]
    5d10:	mov	x1, x20
    5d14:	cbz	w0, 5d6c <PyNumber_FloorDivide@plt+0x113c>
    5d18:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    5d1c:	ldr	x2, [x19, #32]
    5d20:	ldr	x0, [x0, #4024]
    5d24:	cmp	x2, x0
    5d28:	b.eq	5d6c <PyNumber_FloorDivide@plt+0x113c>  // b.none
    5d2c:	mov	x0, #0x2                   	// #2
    5d30:	bl	4c00 <PyTuple_Pack@plt>
    5d34:	ldr	x1, [x20]
    5d38:	mov	x19, x0
    5d3c:	sub	x1, x1, #0x1
    5d40:	str	x1, [x20]
    5d44:	cbz	x1, 5d88 <PyNumber_FloorDivide@plt+0x1158>
    5d48:	mov	x2, x19
    5d4c:	mov	x1, x21
    5d50:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5d54:	add	x0, x0, #0xb50
    5d58:	bl	49c0 <Py_BuildValue@plt>
    5d5c:	ldp	x19, x20, [sp, #16]
    5d60:	ldp	x21, x22, [sp, #32]
    5d64:	ldp	x29, x30, [sp], #64
    5d68:	ret
    5d6c:	mov	x0, #0x1                   	// #1
    5d70:	bl	4c00 <PyTuple_Pack@plt>
    5d74:	ldr	x1, [x20]
    5d78:	mov	x19, x0
    5d7c:	sub	x1, x1, #0x1
    5d80:	str	x1, [x20]
    5d84:	cbnz	x1, 5d48 <PyNumber_FloorDivide@plt+0x1118>
    5d88:	mov	x0, x20
    5d8c:	bl	4830 <_Py_Dealloc@plt>
    5d90:	b	5d48 <PyNumber_FloorDivide@plt+0x1118>
    5d94:	mov	x0, #0x0                   	// #0
    5d98:	ldp	x19, x20, [sp, #16]
    5d9c:	ldp	x29, x30, [sp], #64
    5da0:	ret
    5da4:	mov	x19, #0x0                   	// #0
    5da8:	b	5d48 <PyNumber_FloorDivide@plt+0x1118>
    5dac:	nop
    5db0:	stp	x29, x30, [sp, #-112]!
    5db4:	mov	x29, sp
    5db8:	stp	x23, x24, [sp, #48]
    5dbc:	mov	x24, x0
    5dc0:	ldr	x0, [x2, #8]
    5dc4:	stp	x21, x22, [sp, #32]
    5dc8:	mov	x22, x1
    5dcc:	stp	x19, x20, [sp, #16]
    5dd0:	mov	x19, x2
    5dd4:	mov	x20, x3
    5dd8:	ldr	x1, [x0, #168]
    5ddc:	tbnz	w1, #24, 5f30 <PyNumber_FloorDivide@plt+0x1300>
    5de0:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    5de4:	mov	x23, x4
    5de8:	ldr	x1, [x1, #3944]
    5dec:	cmp	x0, x1
    5df0:	b.eq	5dfc <PyNumber_FloorDivide@plt+0x11cc>  // b.none
    5df4:	bl	4b60 <PyType_IsSubtype@plt>
    5df8:	cbz	w0, 5f80 <PyNumber_FloorDivide@plt+0x1350>
    5dfc:	mov	x0, x19
    5e00:	bl	4a40 <PyFloat_AsDouble@plt>
    5e04:	fmov	d1, #-1.000000000000000000e+00
    5e08:	fcmp	d0, d1
    5e0c:	b.eq	5ef8 <PyNumber_FloorDivide@plt+0x12c8>  // b.none
    5e10:	str	x25, [sp, #64]
    5e14:	add	x25, sp, #0x68
    5e18:	mov	x0, x25
    5e1c:	str	d8, [sp, #72]
    5e20:	bl	4ab0 <modf@plt>
    5e24:	fmov	d8, d0
    5e28:	ldr	d0, [sp, #104]
    5e2c:	bl	47b0 <PyLong_FromDouble@plt>
    5e30:	mov	x19, x0
    5e34:	cbz	x0, 5f24 <PyNumber_FloorDivide@plt+0x12f4>
    5e38:	mov	x1, x20
    5e3c:	bl	4850 <PyNumber_Multiply@plt>
    5e40:	ldr	x1, [x19]
    5e44:	mov	x24, x0
    5e48:	sub	x0, x1, #0x1
    5e4c:	str	x0, [x19]
    5e50:	cbz	x0, 5f74 <PyNumber_FloorDivide@plt+0x1344>
    5e54:	cbz	x24, 5f24 <PyNumber_FloorDivide@plt+0x12f4>
    5e58:	mov	x1, x24
    5e5c:	mov	x0, x22
    5e60:	bl	47e0 <PyNumber_Add@plt>
    5e64:	mov	x21, x0
    5e68:	ldr	x1, [x24]
    5e6c:	sub	x0, x1, #0x1
    5e70:	str	x0, [x24]
    5e74:	cbz	x0, 5fac <PyNumber_FloorDivide@plt+0x137c>
    5e78:	cbz	x21, 5f24 <PyNumber_FloorDivide@plt+0x12f4>
    5e7c:	fcmp	d8, #0.0
    5e80:	b.eq	5fbc <PyNumber_FloorDivide@plt+0x138c>  // b.none
    5e84:	mov	x0, x20
    5e88:	bl	4ac0 <PyLong_AsDouble@plt>
    5e8c:	fmul	d0, d8, d0
    5e90:	mov	x0, x25
    5e94:	bl	4ab0 <modf@plt>
    5e98:	fmov	d8, d0
    5e9c:	ldr	d0, [sp, #104]
    5ea0:	bl	47b0 <PyLong_FromDouble@plt>
    5ea4:	mov	x19, x0
    5ea8:	cbz	x0, 5fc8 <PyNumber_FloorDivide@plt+0x1398>
    5eac:	mov	x1, x0
    5eb0:	mov	x0, x21
    5eb4:	bl	47e0 <PyNumber_Add@plt>
    5eb8:	mov	x20, x0
    5ebc:	ldr	x1, [x21]
    5ec0:	sub	x1, x1, #0x1
    5ec4:	str	x1, [x21]
    5ec8:	cbz	x1, 5ffc <PyNumber_FloorDivide@plt+0x13cc>
    5ecc:	ldr	x1, [x19]
    5ed0:	sub	x1, x1, #0x1
    5ed4:	str	x1, [x19]
    5ed8:	cbz	x1, 5ff0 <PyNumber_FloorDivide@plt+0x13c0>
    5edc:	ldr	d1, [x23]
    5ee0:	mov	x21, x20
    5ee4:	ldr	x25, [sp, #64]
    5ee8:	fadd	d1, d1, d8
    5eec:	ldr	d8, [sp, #72]
    5ef0:	str	d1, [x23]
    5ef4:	b	5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5ef8:	str	d0, [sp, #88]
    5efc:	bl	49d0 <PyErr_Occurred@plt>
    5f00:	ldr	d0, [sp, #88]
    5f04:	cbz	x0, 5e10 <PyNumber_FloorDivide@plt+0x11e0>
    5f08:	mov	x21, #0x0                   	// #0
    5f0c:	mov	x0, x21
    5f10:	ldp	x19, x20, [sp, #16]
    5f14:	ldp	x21, x22, [sp, #32]
    5f18:	ldp	x23, x24, [sp, #48]
    5f1c:	ldp	x29, x30, [sp], #112
    5f20:	ret
    5f24:	ldr	x25, [sp, #64]
    5f28:	ldr	d8, [sp, #72]
    5f2c:	b	5f08 <PyNumber_FloorDivide@plt+0x12d8>
    5f30:	mov	x1, x3
    5f34:	mov	x0, x2
    5f38:	mov	x21, #0x0                   	// #0
    5f3c:	bl	4850 <PyNumber_Multiply@plt>
    5f40:	mov	x19, x0
    5f44:	cbz	x0, 5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5f48:	mov	x1, x19
    5f4c:	mov	x0, x22
    5f50:	bl	47e0 <PyNumber_Add@plt>
    5f54:	mov	x21, x0
    5f58:	ldr	x1, [x19]
    5f5c:	sub	x0, x1, #0x1
    5f60:	str	x0, [x19]
    5f64:	cbnz	x0, 5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5f68:	mov	x0, x19
    5f6c:	bl	4830 <_Py_Dealloc@plt>
    5f70:	b	5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5f74:	mov	x0, x19
    5f78:	bl	4830 <_Py_Dealloc@plt>
    5f7c:	b	5e54 <PyNumber_FloorDivide@plt+0x1224>
    5f80:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    5f84:	mov	x2, x24
    5f88:	ldr	x3, [x19, #8]
    5f8c:	mov	x21, #0x0                   	// #0
    5f90:	ldr	x0, [x0, #3976]
    5f94:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    5f98:	ldr	x3, [x3, #24]
    5f9c:	add	x1, x1, #0xb98
    5fa0:	ldr	x0, [x0]
    5fa4:	bl	4b90 <PyErr_Format@plt>
    5fa8:	b	5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5fac:	mov	x0, x24
    5fb0:	bl	4830 <_Py_Dealloc@plt>
    5fb4:	cbnz	x21, 5e7c <PyNumber_FloorDivide@plt+0x124c>
    5fb8:	b	5f24 <PyNumber_FloorDivide@plt+0x12f4>
    5fbc:	ldr	x25, [sp, #64]
    5fc0:	ldr	d8, [sp, #72]
    5fc4:	b	5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5fc8:	ldr	x0, [x21]
    5fcc:	sub	x0, x0, #0x1
    5fd0:	str	x0, [x21]
    5fd4:	cbnz	x0, 5f24 <PyNumber_FloorDivide@plt+0x12f4>
    5fd8:	mov	x0, x21
    5fdc:	bl	4830 <_Py_Dealloc@plt>
    5fe0:	mov	x21, #0x0                   	// #0
    5fe4:	ldr	d8, [sp, #72]
    5fe8:	ldr	x25, [sp, #64]
    5fec:	b	5f0c <PyNumber_FloorDivide@plt+0x12dc>
    5ff0:	mov	x0, x19
    5ff4:	bl	4830 <_Py_Dealloc@plt>
    5ff8:	b	5edc <PyNumber_FloorDivide@plt+0x12ac>
    5ffc:	mov	x0, x21
    6000:	bl	4830 <_Py_Dealloc@plt>
    6004:	b	5ecc <PyNumber_FloorDivide@plt+0x129c>
    6008:	stp	x29, x30, [sp, #-32]!
    600c:	mov	x29, sp
    6010:	str	x19, [sp, #16]
    6014:	bl	4ba0 <PyNumber_Divmod@plt>
    6018:	cbz	x0, 6048 <PyNumber_FloorDivide@plt+0x1418>
    601c:	mov	x19, x0
    6020:	ldr	x0, [x0, #8]
    6024:	ldr	x1, [x0, #168]
    6028:	tbz	w1, #26, 6094 <PyNumber_FloorDivide@plt+0x1464>
    602c:	ldr	x2, [x19, #16]
    6030:	cmp	x2, #0x2
    6034:	b.ne	605c <PyNumber_FloorDivide@plt+0x142c>  // b.any
    6038:	mov	x0, x19
    603c:	ldr	x19, [sp, #16]
    6040:	ldp	x29, x30, [sp], #32
    6044:	ret
    6048:	mov	x19, #0x0                   	// #0
    604c:	mov	x0, x19
    6050:	ldr	x19, [sp, #16]
    6054:	ldp	x29, x30, [sp], #32
    6058:	ret
    605c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6060:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6064:	add	x1, x1, #0xbf8
    6068:	ldr	x0, [x0, #3976]
    606c:	ldr	x0, [x0]
    6070:	bl	4b90 <PyErr_Format@plt>
    6074:	ldr	x0, [x19]
    6078:	sub	x0, x0, #0x1
    607c:	str	x0, [x19]
    6080:	cbnz	x0, 6048 <PyNumber_FloorDivide@plt+0x1418>
    6084:	mov	x0, x19
    6088:	mov	x19, #0x0                   	// #0
    608c:	bl	4830 <_Py_Dealloc@plt>
    6090:	b	6038 <PyNumber_FloorDivide@plt+0x1408>
    6094:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    6098:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    609c:	add	x1, x1, #0xbc8
    60a0:	ldr	x3, [x3, #3976]
    60a4:	ldr	x2, [x0, #24]
    60a8:	ldr	x0, [x3]
    60ac:	b	6070 <PyNumber_FloorDivide@plt+0x1440>
    60b0:	stp	x29, x30, [sp, #-64]!
    60b4:	mov	x29, sp
    60b8:	stp	x23, x24, [sp, #48]
    60bc:	mov	x23, x0
    60c0:	ldrsw	x0, [x0, #24]
    60c4:	stp	x21, x22, [sp, #32]
    60c8:	bl	4920 <PyLong_FromLong@plt>
    60cc:	cbz	x0, 61c8 <PyNumber_FloorDivide@plt+0x1598>
    60d0:	adrp	x24, 2a000 <PyInit__datetime@@Base+0x16f90>
    60d4:	add	x1, x24, #0xfd8
    60d8:	stp	x19, x20, [sp, #16]
    60dc:	mov	x19, x0
    60e0:	ldr	x1, [x1, #16]
    60e4:	bl	4850 <PyNumber_Multiply@plt>
    60e8:	mov	x20, x0
    60ec:	cbz	x0, 6290 <PyNumber_FloorDivide@plt+0x1660>
    60f0:	ldr	x0, [x19]
    60f4:	sub	x0, x0, #0x1
    60f8:	str	x0, [x19]
    60fc:	cbz	x0, 6224 <PyNumber_FloorDivide@plt+0x15f4>
    6100:	ldrsw	x0, [x23, #28]
    6104:	bl	4920 <PyLong_FromLong@plt>
    6108:	mov	x21, x0
    610c:	cbz	x0, 6198 <PyNumber_FloorDivide@plt+0x1568>
    6110:	mov	x1, x20
    6114:	bl	47e0 <PyNumber_Add@plt>
    6118:	mov	x22, x0
    611c:	cbz	x0, 62b4 <PyNumber_FloorDivide@plt+0x1684>
    6120:	ldr	x0, [x21]
    6124:	sub	x0, x0, #0x1
    6128:	str	x0, [x21]
    612c:	cbz	x0, 623c <PyNumber_FloorDivide@plt+0x160c>
    6130:	ldr	x0, [x20]
    6134:	sub	x0, x0, #0x1
    6138:	str	x0, [x20]
    613c:	cbz	x0, 6230 <PyNumber_FloorDivide@plt+0x1600>
    6140:	add	x24, x24, #0xfd8
    6144:	mov	x0, x22
    6148:	ldr	x1, [x24, #24]
    614c:	bl	4850 <PyNumber_Multiply@plt>
    6150:	mov	x19, x0
    6154:	ldr	x0, [x22]
    6158:	sub	x0, x0, #0x1
    615c:	str	x0, [x22]
    6160:	cbz	x19, 61c0 <PyNumber_FloorDivide@plt+0x1590>
    6164:	cbz	x0, 6258 <PyNumber_FloorDivide@plt+0x1628>
    6168:	ldrsw	x0, [x23, #32]
    616c:	bl	4920 <PyLong_FromLong@plt>
    6170:	mov	x20, x0
    6174:	cbz	x0, 6290 <PyNumber_FloorDivide@plt+0x1660>
    6178:	mov	x1, x0
    617c:	mov	x0, x19
    6180:	bl	47e0 <PyNumber_Add@plt>
    6184:	mov	x21, x0
    6188:	ldr	x0, [x19]
    618c:	sub	x0, x0, #0x1
    6190:	str	x0, [x19]
    6194:	cbz	x0, 6274 <PyNumber_FloorDivide@plt+0x1644>
    6198:	ldr	x0, [x20]
    619c:	sub	x0, x0, #0x1
    61a0:	str	x0, [x20]
    61a4:	cbz	x0, 6204 <PyNumber_FloorDivide@plt+0x15d4>
    61a8:	mov	x0, x21
    61ac:	ldp	x19, x20, [sp, #16]
    61b0:	ldp	x21, x22, [sp, #32]
    61b4:	ldp	x23, x24, [sp, #48]
    61b8:	ldp	x29, x30, [sp], #64
    61bc:	ret
    61c0:	cbz	x0, 61e0 <PyNumber_FloorDivide@plt+0x15b0>
    61c4:	ldp	x19, x20, [sp, #16]
    61c8:	mov	x21, #0x0                   	// #0
    61cc:	mov	x0, x21
    61d0:	ldp	x21, x22, [sp, #32]
    61d4:	ldp	x23, x24, [sp, #48]
    61d8:	ldp	x29, x30, [sp], #64
    61dc:	ret
    61e0:	mov	x0, x22
    61e4:	mov	x21, #0x0                   	// #0
    61e8:	bl	4830 <_Py_Dealloc@plt>
    61ec:	mov	x0, x21
    61f0:	ldp	x19, x20, [sp, #16]
    61f4:	ldp	x21, x22, [sp, #32]
    61f8:	ldp	x23, x24, [sp, #48]
    61fc:	ldp	x29, x30, [sp], #64
    6200:	ret
    6204:	mov	x0, x20
    6208:	bl	4830 <_Py_Dealloc@plt>
    620c:	mov	x0, x21
    6210:	ldp	x19, x20, [sp, #16]
    6214:	ldp	x21, x22, [sp, #32]
    6218:	ldp	x23, x24, [sp, #48]
    621c:	ldp	x29, x30, [sp], #64
    6220:	ret
    6224:	mov	x0, x19
    6228:	bl	4830 <_Py_Dealloc@plt>
    622c:	b	6100 <PyNumber_FloorDivide@plt+0x14d0>
    6230:	mov	x0, x20
    6234:	bl	4830 <_Py_Dealloc@plt>
    6238:	b	6140 <PyNumber_FloorDivide@plt+0x1510>
    623c:	mov	x0, x21
    6240:	bl	4830 <_Py_Dealloc@plt>
    6244:	ldr	x0, [x20]
    6248:	sub	x0, x0, #0x1
    624c:	str	x0, [x20]
    6250:	cbnz	x0, 6140 <PyNumber_FloorDivide@plt+0x1510>
    6254:	b	6230 <PyNumber_FloorDivide@plt+0x1600>
    6258:	mov	x0, x22
    625c:	bl	4830 <_Py_Dealloc@plt>
    6260:	ldrsw	x0, [x23, #32]
    6264:	bl	4920 <PyLong_FromLong@plt>
    6268:	mov	x20, x0
    626c:	cbnz	x0, 6178 <PyNumber_FloorDivide@plt+0x1548>
    6270:	b	6290 <PyNumber_FloorDivide@plt+0x1660>
    6274:	mov	x0, x19
    6278:	bl	4830 <_Py_Dealloc@plt>
    627c:	ldr	x0, [x20]
    6280:	sub	x0, x0, #0x1
    6284:	str	x0, [x20]
    6288:	cbnz	x0, 61a8 <PyNumber_FloorDivide@plt+0x1578>
    628c:	b	6204 <PyNumber_FloorDivide@plt+0x15d4>
    6290:	ldr	x0, [x19]
    6294:	sub	x0, x0, #0x1
    6298:	str	x0, [x19]
    629c:	cbnz	x0, 61c4 <PyNumber_FloorDivide@plt+0x1594>
    62a0:	mov	x0, x19
    62a4:	mov	x21, #0x0                   	// #0
    62a8:	bl	4830 <_Py_Dealloc@plt>
    62ac:	ldp	x19, x20, [sp, #16]
    62b0:	b	61cc <PyNumber_FloorDivide@plt+0x159c>
    62b4:	mov	x19, x21
    62b8:	mov	x21, #0x0                   	// #0
    62bc:	b	6188 <PyNumber_FloorDivide@plt+0x1558>
    62c0:	stp	x29, x30, [sp, #-32]!
    62c4:	mov	x29, sp
    62c8:	stp	x19, x20, [sp, #16]
    62cc:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    62d0:	cbz	x0, 6320 <PyNumber_FloorDivide@plt+0x16f0>
    62d4:	adrp	x1, 2a000 <PyInit__datetime@@Base+0x16f90>
    62d8:	mov	x19, x0
    62dc:	ldr	x1, [x1, #4080]
    62e0:	bl	4c10 <PyNumber_TrueDivide@plt>
    62e4:	mov	x20, x0
    62e8:	ldr	x1, [x19]
    62ec:	sub	x1, x1, #0x1
    62f0:	str	x1, [x19]
    62f4:	cbz	x1, 6308 <PyNumber_FloorDivide@plt+0x16d8>
    62f8:	mov	x0, x20
    62fc:	ldp	x19, x20, [sp, #16]
    6300:	ldp	x29, x30, [sp], #32
    6304:	ret
    6308:	mov	x0, x19
    630c:	bl	4830 <_Py_Dealloc@plt>
    6310:	mov	x0, x20
    6314:	ldp	x19, x20, [sp, #16]
    6318:	ldp	x29, x30, [sp], #32
    631c:	ret
    6320:	mov	x20, #0x0                   	// #0
    6324:	mov	x0, x20
    6328:	ldp	x19, x20, [sp, #16]
    632c:	ldp	x29, x30, [sp], #32
    6330:	ret
    6334:	nop
    6338:	stp	x29, x30, [sp, #-48]!
    633c:	mov	x29, sp
    6340:	stp	x19, x20, [sp, #16]
    6344:	mov	x20, x1
    6348:	str	x21, [sp, #32]
    634c:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    6350:	cbz	x0, 63f4 <PyNumber_FloorDivide@plt+0x17c4>
    6354:	mov	x19, x0
    6358:	mov	x0, x20
    635c:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    6360:	mov	x20, x0
    6364:	cbz	x0, 63e4 <PyNumber_FloorDivide@plt+0x17b4>
    6368:	mov	x1, x0
    636c:	mov	x0, x19
    6370:	bl	4c30 <PyNumber_FloorDivide@plt>
    6374:	mov	x21, x0
    6378:	ldr	x1, [x19]
    637c:	sub	x1, x1, #0x1
    6380:	str	x1, [x19]
    6384:	cbz	x1, 63c8 <PyNumber_FloorDivide@plt+0x1798>
    6388:	ldr	x1, [x20]
    638c:	sub	x1, x1, #0x1
    6390:	str	x1, [x20]
    6394:	cbz	x1, 63ac <PyNumber_FloorDivide@plt+0x177c>
    6398:	mov	x0, x21
    639c:	ldp	x19, x20, [sp, #16]
    63a0:	ldr	x21, [sp, #32]
    63a4:	ldp	x29, x30, [sp], #48
    63a8:	ret
    63ac:	mov	x0, x20
    63b0:	bl	4830 <_Py_Dealloc@plt>
    63b4:	mov	x0, x21
    63b8:	ldp	x19, x20, [sp, #16]
    63bc:	ldr	x21, [sp, #32]
    63c0:	ldp	x29, x30, [sp], #48
    63c4:	ret
    63c8:	mov	x0, x19
    63cc:	bl	4830 <_Py_Dealloc@plt>
    63d0:	ldr	x1, [x20]
    63d4:	sub	x1, x1, #0x1
    63d8:	str	x1, [x20]
    63dc:	cbnz	x1, 6398 <PyNumber_FloorDivide@plt+0x1768>
    63e0:	b	63ac <PyNumber_FloorDivide@plt+0x177c>
    63e4:	ldr	x0, [x19]
    63e8:	sub	x0, x0, #0x1
    63ec:	str	x0, [x19]
    63f0:	cbz	x0, 640c <PyNumber_FloorDivide@plt+0x17dc>
    63f4:	mov	x21, #0x0                   	// #0
    63f8:	mov	x0, x21
    63fc:	ldp	x19, x20, [sp, #16]
    6400:	ldr	x21, [sp, #32]
    6404:	ldp	x29, x30, [sp], #48
    6408:	ret
    640c:	mov	x0, x19
    6410:	mov	x21, #0x0                   	// #0
    6414:	bl	4830 <_Py_Dealloc@plt>
    6418:	b	6398 <PyNumber_FloorDivide@plt+0x1768>
    641c:	nop
    6420:	stp	x29, x30, [sp, #-48]!
    6424:	mov	x29, sp
    6428:	stp	x19, x20, [sp, #16]
    642c:	adrp	x20, 14000 <PyInit__datetime@@Base+0xf90>
    6430:	add	x20, x20, #0xda0
    6434:	str	x21, [sp, #32]
    6438:	mov	x21, x0
    643c:	mov	x0, x20
    6440:	bl	4b00 <PyUnicode_FromString@plt>
    6444:	cbz	x0, 65cc <PyNumber_FloorDivide@plt+0x199c>
    6448:	ldr	w1, [x21, #24]
    644c:	mov	x19, x0
    6450:	mov	x2, x20
    6454:	cbnz	w1, 64dc <PyNumber_FloorDivide@plt+0x18ac>
    6458:	ldr	w3, [x21, #28]
    645c:	cbnz	w3, 6514 <PyNumber_FloorDivide@plt+0x18e4>
    6460:	ldr	w3, [x21, #32]
    6464:	cbnz	w3, 6550 <PyNumber_FloorDivide@plt+0x1920>
    6468:	ldr	x0, [x19, #16]
    646c:	cbz	x0, 64b0 <PyNumber_FloorDivide@plt+0x1880>
    6470:	ldr	x1, [x21, #8]
    6474:	mov	x2, x19
    6478:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    647c:	add	x0, x0, #0xc60
    6480:	ldr	x1, [x1, #24]
    6484:	bl	4720 <PyUnicode_FromFormat@plt>
    6488:	mov	x20, x0
    648c:	ldr	x1, [x19]
    6490:	sub	x1, x1, #0x1
    6494:	str	x1, [x19]
    6498:	cbz	x1, 6580 <PyNumber_FloorDivide@plt+0x1950>
    649c:	mov	x0, x20
    64a0:	ldp	x19, x20, [sp, #16]
    64a4:	ldr	x21, [sp, #32]
    64a8:	ldp	x29, x30, [sp], #48
    64ac:	ret
    64b0:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    64b4:	add	x0, x0, #0xc58
    64b8:	bl	4b00 <PyUnicode_FromString@plt>
    64bc:	mov	x20, x0
    64c0:	ldr	x1, [x19]
    64c4:	sub	x1, x1, #0x1
    64c8:	str	x1, [x19]
    64cc:	cbz	x1, 659c <PyNumber_FloorDivide@plt+0x196c>
    64d0:	cbz	x20, 65cc <PyNumber_FloorDivide@plt+0x199c>
    64d4:	mov	x19, x20
    64d8:	b	6470 <PyNumber_FloorDivide@plt+0x1840>
    64dc:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    64e0:	add	x0, x0, #0xc28
    64e4:	bl	4720 <PyUnicode_FromFormat@plt>
    64e8:	mov	x20, x0
    64ec:	ldr	x1, [x19]
    64f0:	sub	x1, x1, #0x1
    64f4:	str	x1, [x19]
    64f8:	cbz	x1, 65a8 <PyNumber_FloorDivide@plt+0x1978>
    64fc:	cbz	x20, 65cc <PyNumber_FloorDivide@plt+0x199c>
    6500:	ldr	w3, [x21, #28]
    6504:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6508:	mov	x19, x20
    650c:	add	x2, x2, #0xc20
    6510:	cbz	w3, 6460 <PyNumber_FloorDivide@plt+0x1830>
    6514:	mov	x1, x19
    6518:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    651c:	add	x0, x0, #0xc30
    6520:	bl	4720 <PyUnicode_FromFormat@plt>
    6524:	ldr	x1, [x19]
    6528:	mov	x20, x0
    652c:	sub	x1, x1, #0x1
    6530:	str	x1, [x19]
    6534:	cbz	x1, 65b4 <PyNumber_FloorDivide@plt+0x1984>
    6538:	cbz	x20, 65cc <PyNumber_FloorDivide@plt+0x199c>
    653c:	ldr	w3, [x21, #32]
    6540:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6544:	mov	x19, x20
    6548:	add	x2, x2, #0xc20
    654c:	cbz	w3, 6468 <PyNumber_FloorDivide@plt+0x1838>
    6550:	mov	x1, x19
    6554:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6558:	add	x0, x0, #0xc40
    655c:	bl	4720 <PyUnicode_FromFormat@plt>
    6560:	ldr	x1, [x19]
    6564:	mov	x20, x0
    6568:	sub	x1, x1, #0x1
    656c:	str	x1, [x19]
    6570:	cbz	x1, 65c0 <PyNumber_FloorDivide@plt+0x1990>
    6574:	cbz	x20, 65cc <PyNumber_FloorDivide@plt+0x199c>
    6578:	mov	x19, x20
    657c:	b	6468 <PyNumber_FloorDivide@plt+0x1838>
    6580:	mov	x0, x19
    6584:	bl	4830 <_Py_Dealloc@plt>
    6588:	mov	x0, x20
    658c:	ldp	x19, x20, [sp, #16]
    6590:	ldr	x21, [sp, #32]
    6594:	ldp	x29, x30, [sp], #48
    6598:	ret
    659c:	mov	x0, x19
    65a0:	bl	4830 <_Py_Dealloc@plt>
    65a4:	b	64d0 <PyNumber_FloorDivide@plt+0x18a0>
    65a8:	mov	x0, x19
    65ac:	bl	4830 <_Py_Dealloc@plt>
    65b0:	b	64fc <PyNumber_FloorDivide@plt+0x18cc>
    65b4:	mov	x0, x19
    65b8:	bl	4830 <_Py_Dealloc@plt>
    65bc:	b	6538 <PyNumber_FloorDivide@plt+0x1908>
    65c0:	mov	x0, x19
    65c4:	bl	4830 <_Py_Dealloc@plt>
    65c8:	b	6574 <PyNumber_FloorDivide@plt+0x1944>
    65cc:	mov	x20, #0x0                   	// #0
    65d0:	mov	x0, x20
    65d4:	ldp	x19, x20, [sp, #16]
    65d8:	ldr	x21, [sp, #32]
    65dc:	ldp	x29, x30, [sp], #48
    65e0:	ret
    65e4:	nop
    65e8:	stp	x29, x30, [sp, #-64]!
    65ec:	mov	x29, sp
    65f0:	add	x2, sp, #0x3c
    65f4:	stp	x19, x20, [sp, #16]
    65f8:	mov	x19, x0
    65fc:	mov	x0, x1
    6600:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6604:	add	x1, x1, #0xb88
    6608:	bl	4a60 <PyArg_ParseTuple@plt>
    660c:	cbz	w0, 66d4 <PyNumber_FloorDivide@plt+0x1aa4>
    6610:	add	x0, x19, #0x19
    6614:	mov	x1, #0xa                   	// #10
    6618:	stp	x21, x22, [sp, #32]
    661c:	ldr	w22, [sp, #60]
    6620:	ldr	x21, [x19, #8]
    6624:	bl	4820 <PyBytes_FromStringAndSize@plt>
    6628:	mov	x20, x0
    662c:	cbz	x0, 66e4 <PyNumber_FloorDivide@plt+0x1ab4>
    6630:	cmp	w22, #0x3
    6634:	b.le	664c <PyNumber_FloorDivide@plt+0x1a1c>
    6638:	ldrb	w0, [x19, #35]
    663c:	cbz	w0, 664c <PyNumber_FloorDivide@plt+0x1a1c>
    6640:	ldrb	w0, [x20, #34]
    6644:	orr	w0, w0, #0xffffff80
    6648:	strb	w0, [x20, #34]
    664c:	ldrb	w0, [x19, #24]
    6650:	mov	x1, x20
    6654:	cbz	w0, 66ac <PyNumber_FloorDivide@plt+0x1a7c>
    6658:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    665c:	ldr	x2, [x19, #40]
    6660:	ldr	x0, [x0, #4024]
    6664:	cmp	x2, x0
    6668:	b.eq	66ac <PyNumber_FloorDivide@plt+0x1a7c>  // b.none
    666c:	mov	x0, #0x2                   	// #2
    6670:	bl	4c00 <PyTuple_Pack@plt>
    6674:	ldr	x1, [x20]
    6678:	mov	x19, x0
    667c:	sub	x1, x1, #0x1
    6680:	str	x1, [x20]
    6684:	cbz	x1, 66c8 <PyNumber_FloorDivide@plt+0x1a98>
    6688:	mov	x2, x19
    668c:	mov	x1, x21
    6690:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6694:	add	x0, x0, #0xb50
    6698:	bl	49c0 <Py_BuildValue@plt>
    669c:	ldp	x19, x20, [sp, #16]
    66a0:	ldp	x21, x22, [sp, #32]
    66a4:	ldp	x29, x30, [sp], #64
    66a8:	ret
    66ac:	mov	x0, #0x1                   	// #1
    66b0:	bl	4c00 <PyTuple_Pack@plt>
    66b4:	ldr	x1, [x20]
    66b8:	mov	x19, x0
    66bc:	sub	x1, x1, #0x1
    66c0:	str	x1, [x20]
    66c4:	cbnz	x1, 6688 <PyNumber_FloorDivide@plt+0x1a58>
    66c8:	mov	x0, x20
    66cc:	bl	4830 <_Py_Dealloc@plt>
    66d0:	b	6688 <PyNumber_FloorDivide@plt+0x1a58>
    66d4:	mov	x0, #0x0                   	// #0
    66d8:	ldp	x19, x20, [sp, #16]
    66dc:	ldp	x29, x30, [sp], #64
    66e0:	ret
    66e4:	mov	x19, #0x0                   	// #0
    66e8:	b	6688 <PyNumber_FloorDivide@plt+0x1a58>
    66ec:	nop
    66f0:	stp	x29, x30, [sp, #-48]!
    66f4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    66f8:	mov	x29, sp
    66fc:	stp	x19, x20, [sp, #16]
    6700:	stp	x21, x22, [sp, #32]
    6704:	mov	x22, x0
    6708:	add	x0, x1, #0x580
    670c:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    6710:	cbz	x0, 6790 <PyNumber_FloorDivide@plt+0x1b60>
    6714:	mov	x20, x0
    6718:	adrp	x21, 29000 <PyInit__datetime@@Base+0x15f90>
    671c:	add	x1, x21, #0xad0
    6720:	mov	x2, #0x0                   	// #0
    6724:	add	x1, x1, #0x48
    6728:	bl	4a90 <_PyObject_CallMethodId@plt>
    672c:	ldr	x1, [x20]
    6730:	mov	x19, x0
    6734:	sub	x1, x1, #0x1
    6738:	str	x1, [x20]
    673c:	cbz	x1, 6784 <PyNumber_FloorDivide@plt+0x1b54>
    6740:	cbz	x19, 6790 <PyNumber_FloorDivide@plt+0x1b60>
    6744:	add	x1, x21, #0xad0
    6748:	mov	x0, x22
    674c:	add	x1, x1, #0x60
    6750:	mov	x2, x19
    6754:	mov	x3, #0x0                   	// #0
    6758:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    675c:	ldr	x1, [x19]
    6760:	mov	x20, x0
    6764:	sub	x1, x1, #0x1
    6768:	str	x1, [x19]
    676c:	cbz	x1, 67a8 <PyNumber_FloorDivide@plt+0x1b78>
    6770:	mov	x0, x20
    6774:	ldp	x19, x20, [sp, #16]
    6778:	ldp	x21, x22, [sp, #32]
    677c:	ldp	x29, x30, [sp], #48
    6780:	ret
    6784:	mov	x0, x20
    6788:	bl	4830 <_Py_Dealloc@plt>
    678c:	b	6740 <PyNumber_FloorDivide@plt+0x1b10>
    6790:	mov	x20, #0x0                   	// #0
    6794:	mov	x0, x20
    6798:	ldp	x19, x20, [sp, #16]
    679c:	ldp	x21, x22, [sp, #32]
    67a0:	ldp	x29, x30, [sp], #48
    67a4:	ret
    67a8:	mov	x0, x19
    67ac:	bl	4830 <_Py_Dealloc@plt>
    67b0:	mov	x0, x20
    67b4:	ldp	x19, x20, [sp, #16]
    67b8:	ldp	x21, x22, [sp, #32]
    67bc:	ldp	x29, x30, [sp], #48
    67c0:	ret
    67c4:	nop
    67c8:	stp	x29, x30, [sp, #-32]!
    67cc:	mov	x29, sp
    67d0:	stp	x19, x20, [sp, #16]
    67d4:	mov	x19, x0
    67d8:	mov	x20, x1
    67dc:	ldr	x0, [x0, #24]
    67e0:	cbz	x1, 6884 <PyNumber_FloorDivide@plt+0x1c54>
    67e4:	mov	x1, #0xffffffff            	// #4294967295
    67e8:	cmp	x0, x1
    67ec:	b.eq	684c <PyNumber_FloorDivide@plt+0x1c1c>  // b.none
    67f0:	ldr	w0, [x19, #24]
    67f4:	add	w0, w0, #0x1
    67f8:	cmp	w0, #0x1
    67fc:	b.hi	6858 <PyNumber_FloorDivide@plt+0x1c28>  // b.pmore
    6800:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    6804:	add	x0, x0, #0xad0
    6808:	add	x0, x0, #0x78
    680c:	mov	x1, #0x0                   	// #0
    6810:	ldr	x2, [x0, #304]
    6814:	blr	x2
    6818:	cbz	x0, 6840 <PyNumber_FloorDivide@plt+0x1c10>
    681c:	ldr	x1, [x19]
    6820:	add	x1, x1, #0x1
    6824:	str	x1, [x19]
    6828:	str	x19, [x0, #16]
    682c:	cbz	x20, 683c <PyNumber_FloorDivide@plt+0x1c0c>
    6830:	ldr	x1, [x20]
    6834:	add	x1, x1, #0x1
    6838:	str	x1, [x20]
    683c:	str	x20, [x0, #24]
    6840:	ldp	x19, x20, [sp, #16]
    6844:	ldp	x29, x30, [sp], #32
    6848:	ret
    684c:	ldr	w0, [x19, #32]
    6850:	cmp	w0, #0x0
    6854:	b.gt	67f0 <PyNumber_FloorDivide@plt+0x1bc0>
    6858:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    685c:	mov	x2, x19
    6860:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6864:	add	x1, x1, #0xc68
    6868:	ldr	x0, [x0, #3968]
    686c:	ldr	x0, [x0]
    6870:	bl	4b90 <PyErr_Format@plt>
    6874:	mov	x0, #0x0                   	// #0
    6878:	ldp	x19, x20, [sp, #16]
    687c:	ldp	x29, x30, [sp], #32
    6880:	ret
    6884:	cbnz	x0, 67e4 <PyNumber_FloorDivide@plt+0x1bb4>
    6888:	ldr	w0, [x19, #32]
    688c:	cbnz	w0, 67f0 <PyNumber_FloorDivide@plt+0x1bc0>
    6890:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    6894:	ldr	x0, [x0, #4056]
    6898:	ldr	x1, [x0]
    689c:	add	x1, x1, #0x1
    68a0:	str	x1, [x0]
    68a4:	b	6840 <PyNumber_FloorDivide@plt+0x1c10>
    68a8:	stp	x29, x30, [sp, #-32]!
    68ac:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    68b0:	add	x3, x3, #0xad0
    68b4:	mov	x29, sp
    68b8:	mov	x0, x1
    68bc:	add	x3, x3, #0x220
    68c0:	mov	x1, x2
    68c4:	add	x6, sp, #0x18
    68c8:	add	x5, sp, #0x10
    68cc:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
    68d0:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    68d4:	add	x4, x4, #0x2a8
    68d8:	add	x2, x2, #0xcd0
    68dc:	str	xzr, [sp, #24]
    68e0:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    68e4:	mov	w1, w0
    68e8:	mov	x0, #0x0                   	// #0
    68ec:	cbz	w1, 68f8 <PyNumber_FloorDivide@plt+0x1cc8>
    68f0:	ldp	x0, x1, [sp, #16]
    68f4:	bl	67c8 <PyNumber_FloorDivide@plt+0x1b98>
    68f8:	ldp	x29, x30, [sp], #32
    68fc:	ret
    6900:	ldp	x1, x2, [x0, #16]
    6904:	cbz	x2, 6914 <PyNumber_FloorDivide@plt+0x1ce4>
    6908:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    690c:	add	x0, x0, #0xce8
    6910:	b	49c0 <Py_BuildValue@plt>
    6914:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6918:	add	x0, x0, #0xce0
    691c:	b	49c0 <Py_BuildValue@plt>
    6920:	stp	x29, x30, [sp, #-32]!
    6924:	mov	x3, x2
    6928:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    692c:	mov	x29, sp
    6930:	add	x2, x2, #0xcf0
    6934:	stp	x19, x20, [sp, #16]
    6938:	mov	x20, x1
    693c:	bl	47a0 <PyObject_CallMethod@plt>
    6940:	mov	x19, x0
    6944:	adrp	x2, 28000 <PyInit__datetime@@Base+0x14f90>
    6948:	ldr	x2, [x2, #4024]
    694c:	cmp	x0, x2
    6950:	b.eq	6994 <PyNumber_FloorDivide@plt+0x1d64>  // b.none
    6954:	cbz	x0, 69f8 <PyNumber_FloorDivide@plt+0x1dc8>
    6958:	ldr	x0, [x0, #8]
    695c:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    6960:	add	x1, x2, #0x2a8
    6964:	cmp	x0, x1
    6968:	b.eq	6974 <PyNumber_FloorDivide@plt+0x1d44>  // b.none
    696c:	bl	4b60 <PyType_IsSubtype@plt>
    6970:	cbz	w0, 6a0c <PyNumber_FloorDivide@plt+0x1ddc>
    6974:	ldr	x1, [x19, #24]
    6978:	mov	x0, #0xffffffff            	// #4294967295
    697c:	cmp	x1, x0
    6980:	b.eq	69a4 <PyNumber_FloorDivide@plt+0x1d74>  // b.none
    6984:	ldr	w0, [x19, #24]
    6988:	add	w0, w0, #0x1
    698c:	cmp	w0, #0x1
    6990:	b.hi	69b0 <PyNumber_FloorDivide@plt+0x1d80>  // b.pmore
    6994:	mov	x0, x19
    6998:	ldp	x19, x20, [sp, #16]
    699c:	ldp	x29, x30, [sp], #32
    69a0:	ret
    69a4:	ldr	w0, [x19, #32]
    69a8:	cmp	w0, #0x0
    69ac:	b.gt	6984 <PyNumber_FloorDivide@plt+0x1d54>
    69b0:	ldr	x0, [x19]
    69b4:	sub	x0, x0, #0x1
    69b8:	str	x0, [x19]
    69bc:	cbz	x0, 69ec <PyNumber_FloorDivide@plt+0x1dbc>
    69c0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    69c4:	mov	x19, #0x0                   	// #0
    69c8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    69cc:	add	x1, x1, #0xcf8
    69d0:	ldr	x0, [x0, #3968]
    69d4:	ldr	x0, [x0]
    69d8:	bl	4b90 <PyErr_Format@plt>
    69dc:	mov	x0, x19
    69e0:	ldp	x19, x20, [sp, #16]
    69e4:	ldp	x29, x30, [sp], #32
    69e8:	ret
    69ec:	mov	x0, x19
    69f0:	bl	4830 <_Py_Dealloc@plt>
    69f4:	b	69c0 <PyNumber_FloorDivide@plt+0x1d90>
    69f8:	mov	x19, #0x0                   	// #0
    69fc:	mov	x0, x19
    6a00:	ldp	x19, x20, [sp, #16]
    6a04:	ldp	x29, x30, [sp], #32
    6a08:	ret
    6a0c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6a10:	mov	x2, x20
    6a14:	ldr	x3, [x19, #8]
    6a18:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6a1c:	ldr	x0, [x0, #3976]
    6a20:	add	x1, x1, #0xd58
    6a24:	ldr	x3, [x3, #24]
    6a28:	ldr	x0, [x0]
    6a2c:	bl	4b90 <PyErr_Format@plt>
    6a30:	ldr	x0, [x19]
    6a34:	sub	x0, x0, #0x1
    6a38:	str	x0, [x19]
    6a3c:	cbnz	x0, 69f8 <PyNumber_FloorDivide@plt+0x1dc8>
    6a40:	mov	x0, x19
    6a44:	mov	x19, #0x0                   	// #0
    6a48:	bl	4830 <_Py_Dealloc@plt>
    6a4c:	b	6994 <PyNumber_FloorDivide@plt+0x1d64>
    6a50:	stp	x29, x30, [sp, #-32]!
    6a54:	cmp	x1, #0x0
    6a58:	mov	x1, #0x28                  	// #40
    6a5c:	mov	x29, sp
    6a60:	stp	x19, x20, [sp, #16]
    6a64:	mov	x20, x0
    6a68:	mov	x0, #0x20                  	// #32
    6a6c:	csel	x0, x1, x0, ne  // ne = any
    6a70:	bl	48b0 <PyObject_Malloc@plt>
    6a74:	cbz	x0, 6af0 <PyNumber_FloorDivide@plt+0x1ec0>
    6a78:	mov	x19, x0
    6a7c:	mov	x0, x20
    6a80:	str	x20, [x19, #8]
    6a84:	bl	4b20 <PyType_GetFlags@plt>
    6a88:	tbnz	w0, #9, 6ab4 <PyNumber_FloorDivide@plt+0x1e84>
    6a8c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6a90:	ldr	x0, [x0, #3984]
    6a94:	ldr	w0, [x0, #4]
    6a98:	cbnz	w0, 6ad0 <PyNumber_FloorDivide@plt+0x1ea0>
    6a9c:	mov	x1, #0x1                   	// #1
    6aa0:	str	x1, [x19]
    6aa4:	mov	x0, x19
    6aa8:	ldp	x19, x20, [sp, #16]
    6aac:	ldp	x29, x30, [sp], #32
    6ab0:	ret
    6ab4:	ldr	x0, [x20]
    6ab8:	add	x0, x0, #0x1
    6abc:	str	x0, [x20]
    6ac0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6ac4:	ldr	x0, [x0, #3984]
    6ac8:	ldr	w0, [x0, #4]
    6acc:	cbz	w0, 6a9c <PyNumber_FloorDivide@plt+0x1e6c>
    6ad0:	mov	x0, x19
    6ad4:	bl	4ae0 <_PyTraceMalloc_NewReference@plt>
    6ad8:	mov	x1, #0x1                   	// #1
    6adc:	str	x1, [x19]
    6ae0:	mov	x0, x19
    6ae4:	ldp	x19, x20, [sp, #16]
    6ae8:	ldp	x29, x30, [sp], #32
    6aec:	ret
    6af0:	ldp	x19, x20, [sp, #16]
    6af4:	ldp	x29, x30, [sp], #32
    6af8:	b	4840 <PyErr_NoMemory@plt>
    6afc:	nop
    6b00:	stp	x29, x30, [sp, #-32]!
    6b04:	mov	x29, sp
    6b08:	stp	x19, x20, [sp, #16]
    6b0c:	adrp	x19, 28000 <PyInit__datetime@@Base+0x14f90>
    6b10:	ldr	x0, [x19, #4024]
    6b14:	cmp	x1, x0
    6b18:	b.eq	6b40 <PyNumber_FloorDivide@plt+0x1f10>  // b.none
    6b1c:	mov	x20, x1
    6b20:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    6b24:	add	x2, x2, #0x2a8
    6b28:	add	x1, x2, #0x1a0
    6b2c:	ldr	x0, [x20, #8]
    6b30:	cmp	x0, x1
    6b34:	b.eq	6b40 <PyNumber_FloorDivide@plt+0x1f10>  // b.none
    6b38:	bl	4b60 <PyType_IsSubtype@plt>
    6b3c:	cbz	w0, 6b60 <PyNumber_FloorDivide@plt+0x1f30>
    6b40:	ldr	x1, [x19, #4024]
    6b44:	mov	x0, x1
    6b48:	ldr	x2, [x1]
    6b4c:	add	x2, x2, #0x1
    6b50:	str	x2, [x1]
    6b54:	ldp	x19, x20, [sp, #16]
    6b58:	ldp	x29, x30, [sp], #32
    6b5c:	ret
    6b60:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6b64:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6b68:	ldr	x3, [x20, #8]
    6b6c:	add	x2, x2, #0xa08
    6b70:	ldr	x0, [x0, #3976]
    6b74:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6b78:	ldr	x3, [x3, #24]
    6b7c:	add	x1, x1, #0xd90
    6b80:	ldr	x0, [x0]
    6b84:	bl	4b90 <PyErr_Format@plt>
    6b88:	mov	x0, #0x0                   	// #0
    6b8c:	b	6b54 <PyNumber_FloorDivide@plt+0x1f24>
    6b90:	stp	x29, x30, [sp, #-32]!
    6b94:	adrp	x2, 28000 <PyInit__datetime@@Base+0x14f90>
    6b98:	mov	x29, sp
    6b9c:	ldr	x2, [x2, #4024]
    6ba0:	stp	x19, x20, [sp, #16]
    6ba4:	mov	x20, x0
    6ba8:	cmp	x1, x2
    6bac:	b.eq	6bd4 <PyNumber_FloorDivide@plt+0x1fa4>  // b.none
    6bb0:	mov	x19, x1
    6bb4:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    6bb8:	add	x2, x2, #0x2a8
    6bbc:	add	x1, x2, #0x1a0
    6bc0:	ldr	x0, [x19, #8]
    6bc4:	cmp	x0, x1
    6bc8:	b.eq	6bd4 <PyNumber_FloorDivide@plt+0x1fa4>  // b.none
    6bcc:	bl	4b60 <PyType_IsSubtype@plt>
    6bd0:	cbz	w0, 6bf0 <PyNumber_FloorDivide@plt+0x1fc0>
    6bd4:	ldr	x0, [x20, #16]
    6bd8:	ldr	x1, [x0]
    6bdc:	add	x1, x1, #0x1
    6be0:	str	x1, [x0]
    6be4:	ldp	x19, x20, [sp, #16]
    6be8:	ldp	x29, x30, [sp], #32
    6bec:	ret
    6bf0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6bf4:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6bf8:	ldr	x3, [x19, #8]
    6bfc:	add	x2, x2, #0xa38
    6c00:	ldr	x0, [x0, #3976]
    6c04:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6c08:	ldr	x3, [x3, #24]
    6c0c:	add	x1, x1, #0xd90
    6c10:	ldr	x0, [x0]
    6c14:	bl	4b90 <PyErr_Format@plt>
    6c18:	mov	x0, #0x0                   	// #0
    6c1c:	b	6be4 <PyNumber_FloorDivide@plt+0x1fb4>
    6c20:	stp	x29, x30, [sp, #-64]!
    6c24:	mov	x29, sp
    6c28:	stp	x19, x20, [sp, #16]
    6c2c:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    6c30:	add	x1, x19, #0xad0
    6c34:	mov	x20, x0
    6c38:	add	x1, x1, #0x238
    6c3c:	add	x2, sp, #0x30
    6c40:	bl	4780 <_PyObject_LookupAttrId@plt>
    6c44:	tbnz	w0, #31, 6d74 <PyNumber_FloorDivide@plt+0x2144>
    6c48:	str	x21, [sp, #32]
    6c4c:	ldr	x21, [sp, #48]
    6c50:	cbz	x21, 6dc4 <PyNumber_FloorDivide@plt+0x2194>
    6c54:	ldr	x0, [x21, #8]
    6c58:	ldr	x1, [x0, #168]
    6c5c:	ldr	x0, [x0, #56]
    6c60:	tbz	w1, #11, 6de0 <PyNumber_FloorDivide@plt+0x21b0>
    6c64:	ldr	x4, [x21, x0]
    6c68:	cbz	x4, 6de0 <PyNumber_FloorDivide@plt+0x21b0>
    6c6c:	mov	x3, #0x0                   	// #0
    6c70:	mov	x0, x21
    6c74:	mov	x2, #0x0                   	// #0
    6c78:	mov	x1, #0x0                   	// #0
    6c7c:	blr	x4
    6c80:	mov	x1, x0
    6c84:	mov	x2, #0x0                   	// #0
    6c88:	mov	x0, x21
    6c8c:	bl	4a30 <_Py_CheckFunctionResult@plt>
    6c90:	mov	x21, x0
    6c94:	ldr	x0, [sp, #48]
    6c98:	ldr	x1, [x0]
    6c9c:	sub	x1, x1, #0x1
    6ca0:	str	x1, [x0]
    6ca4:	cbz	x1, 6d64 <PyNumber_FloorDivide@plt+0x2134>
    6ca8:	cbz	x21, 6d70 <PyNumber_FloorDivide@plt+0x2140>
    6cac:	add	x1, x19, #0xad0
    6cb0:	add	x2, sp, #0x38
    6cb4:	add	x1, x1, #0x250
    6cb8:	mov	x0, x20
    6cbc:	bl	4780 <_PyObject_LookupAttrId@plt>
    6cc0:	tbnz	w0, #31, 6e54 <PyNumber_FloorDivide@plt+0x2224>
    6cc4:	ldr	x19, [sp, #56]
    6cc8:	cbz	x19, 6dfc <PyNumber_FloorDivide@plt+0x21cc>
    6ccc:	ldr	x0, [x19, #8]
    6cd0:	ldr	x1, [x0, #168]
    6cd4:	ldr	x0, [x0, #56]
    6cd8:	tbz	w1, #11, 6e38 <PyNumber_FloorDivide@plt+0x2208>
    6cdc:	ldr	x4, [x19, x0]
    6ce0:	cbz	x4, 6e38 <PyNumber_FloorDivide@plt+0x2208>
    6ce4:	mov	x3, #0x0                   	// #0
    6ce8:	mov	x0, x19
    6cec:	mov	x2, #0x0                   	// #0
    6cf0:	mov	x1, #0x0                   	// #0
    6cf4:	blr	x4
    6cf8:	mov	x1, x0
    6cfc:	mov	x2, #0x0                   	// #0
    6d00:	mov	x0, x19
    6d04:	bl	4a30 <_Py_CheckFunctionResult@plt>
    6d08:	mov	x19, x0
    6d0c:	ldr	x0, [sp, #56]
    6d10:	ldr	x1, [x0]
    6d14:	sub	x1, x1, #0x1
    6d18:	str	x1, [x0]
    6d1c:	cbz	x1, 6e30 <PyNumber_FloorDivide@plt+0x2200>
    6d20:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6d24:	cbz	x19, 6e80 <PyNumber_FloorDivide@plt+0x2250>
    6d28:	ldr	x0, [x0, #4024]
    6d2c:	cmp	x19, x0
    6d30:	b.eq	6d88 <PyNumber_FloorDivide@plt+0x2158>  // b.none
    6d34:	ldr	x1, [x20, #8]
    6d38:	mov	x3, x19
    6d3c:	mov	x2, x21
    6d40:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6d44:	add	x0, x0, #0xdd0
    6d48:	bl	49c0 <Py_BuildValue@plt>
    6d4c:	mov	x19, x0
    6d50:	ldr	x21, [sp, #32]
    6d54:	mov	x0, x19
    6d58:	ldp	x19, x20, [sp, #16]
    6d5c:	ldp	x29, x30, [sp], #64
    6d60:	ret
    6d64:	bl	4830 <_Py_Dealloc@plt>
    6d68:	cbnz	x21, 6cac <PyNumber_FloorDivide@plt+0x207c>
    6d6c:	nop
    6d70:	ldr	x21, [sp, #32]
    6d74:	mov	x19, #0x0                   	// #0
    6d78:	mov	x0, x19
    6d7c:	ldp	x19, x20, [sp, #16]
    6d80:	ldp	x29, x30, [sp], #64
    6d84:	ret
    6d88:	ldr	x0, [x19]
    6d8c:	sub	x0, x0, #0x1
    6d90:	str	x0, [x19]
    6d94:	cbz	x0, 6dd4 <PyNumber_FloorDivide@plt+0x21a4>
    6d98:	ldr	x1, [x20, #8]
    6d9c:	mov	x2, x21
    6da0:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6da4:	add	x0, x0, #0xb50
    6da8:	bl	49c0 <Py_BuildValue@plt>
    6dac:	mov	x19, x0
    6db0:	mov	x0, x19
    6db4:	ldp	x19, x20, [sp, #16]
    6db8:	ldr	x21, [sp, #32]
    6dbc:	ldp	x29, x30, [sp], #64
    6dc0:	ret
    6dc4:	mov	x0, #0x0                   	// #0
    6dc8:	bl	4990 <PyTuple_New@plt>
    6dcc:	mov	x21, x0
    6dd0:	b	6ca8 <PyNumber_FloorDivide@plt+0x2078>
    6dd4:	mov	x0, x19
    6dd8:	bl	4830 <_Py_Dealloc@plt>
    6ddc:	b	6d98 <PyNumber_FloorDivide@plt+0x2168>
    6de0:	mov	x0, x21
    6de4:	mov	x3, #0x0                   	// #0
    6de8:	mov	x2, #0x0                   	// #0
    6dec:	mov	x1, #0x0                   	// #0
    6df0:	bl	4bc0 <_PyObject_MakeTpCall@plt>
    6df4:	mov	x21, x0
    6df8:	b	6c94 <PyNumber_FloorDivide@plt+0x2064>
    6dfc:	mov	x0, x20
    6e00:	bl	4af0 <_PyObject_GetDictPtr@plt>
    6e04:	cbz	x0, 6e18 <PyNumber_FloorDivide@plt+0x21e8>
    6e08:	ldr	x19, [x0]
    6e0c:	cbz	x19, 6e18 <PyNumber_FloorDivide@plt+0x21e8>
    6e10:	ldr	x0, [x19, #16]
    6e14:	cbnz	x0, 6e78 <PyNumber_FloorDivide@plt+0x2248>
    6e18:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6e1c:	ldr	x19, [x0, #4024]
    6e20:	ldr	x1, [x19]
    6e24:	add	x1, x1, #0x1
    6e28:	str	x1, [x19]
    6e2c:	b	6d28 <PyNumber_FloorDivide@plt+0x20f8>
    6e30:	bl	4830 <_Py_Dealloc@plt>
    6e34:	b	6d20 <PyNumber_FloorDivide@plt+0x20f0>
    6e38:	mov	x0, x19
    6e3c:	mov	x3, #0x0                   	// #0
    6e40:	mov	x2, #0x0                   	// #0
    6e44:	mov	x1, #0x0                   	// #0
    6e48:	bl	4bc0 <_PyObject_MakeTpCall@plt>
    6e4c:	mov	x19, x0
    6e50:	b	6d0c <PyNumber_FloorDivide@plt+0x20dc>
    6e54:	ldr	x0, [x21]
    6e58:	sub	x0, x0, #0x1
    6e5c:	str	x0, [x21]
    6e60:	cbnz	x0, 6d70 <PyNumber_FloorDivide@plt+0x2140>
    6e64:	mov	x0, x21
    6e68:	mov	x19, #0x0                   	// #0
    6e6c:	bl	4830 <_Py_Dealloc@plt>
    6e70:	ldr	x21, [sp, #32]
    6e74:	b	6d54 <PyNumber_FloorDivide@plt+0x2124>
    6e78:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6e7c:	b	6e20 <PyNumber_FloorDivide@plt+0x21f0>
    6e80:	ldr	x0, [x21]
    6e84:	sub	x0, x0, #0x1
    6e88:	str	x0, [x21]
    6e8c:	cbnz	x0, 6d70 <PyNumber_FloorDivide@plt+0x2140>
    6e90:	mov	x0, x21
    6e94:	bl	4830 <_Py_Dealloc@plt>
    6e98:	ldr	x21, [sp, #32]
    6e9c:	b	6d54 <PyNumber_FloorDivide@plt+0x2124>
    6ea0:	stp	x29, x30, [sp, #-48]!
    6ea4:	mov	x1, #0xa                   	// #10
    6ea8:	mov	x29, sp
    6eac:	stp	x19, x20, [sp, #16]
    6eb0:	mov	x20, x0
    6eb4:	add	x0, x0, #0x19
    6eb8:	str	x21, [sp, #32]
    6ebc:	ldr	x21, [x20, #8]
    6ec0:	bl	4820 <PyBytes_FromStringAndSize@plt>
    6ec4:	cbz	x0, 6f6c <PyNumber_FloorDivide@plt+0x233c>
    6ec8:	mov	x19, x0
    6ecc:	ldrb	w0, [x20, #24]
    6ed0:	mov	x1, x19
    6ed4:	cbz	w0, 6f30 <PyNumber_FloorDivide@plt+0x2300>
    6ed8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6edc:	ldr	x2, [x20, #40]
    6ee0:	ldr	x0, [x0, #4024]
    6ee4:	cmp	x2, x0
    6ee8:	b.eq	6f30 <PyNumber_FloorDivide@plt+0x2300>  // b.none
    6eec:	mov	x0, #0x2                   	// #2
    6ef0:	bl	4c00 <PyTuple_Pack@plt>
    6ef4:	ldr	x1, [x19]
    6ef8:	mov	x20, x0
    6efc:	sub	x1, x1, #0x1
    6f00:	str	x1, [x19]
    6f04:	cbnz	x1, 6f4c <PyNumber_FloorDivide@plt+0x231c>
    6f08:	mov	x0, x19
    6f0c:	bl	4830 <_Py_Dealloc@plt>
    6f10:	mov	x2, x20
    6f14:	mov	x1, x21
    6f18:	ldp	x19, x20, [sp, #16]
    6f1c:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6f20:	ldr	x21, [sp, #32]
    6f24:	add	x0, x0, #0xb50
    6f28:	ldp	x29, x30, [sp], #48
    6f2c:	b	49c0 <Py_BuildValue@plt>
    6f30:	mov	x0, #0x1                   	// #1
    6f34:	bl	4c00 <PyTuple_Pack@plt>
    6f38:	ldr	x1, [x19]
    6f3c:	mov	x20, x0
    6f40:	sub	x1, x1, #0x1
    6f44:	str	x1, [x19]
    6f48:	cbz	x1, 6f08 <PyNumber_FloorDivide@plt+0x22d8>
    6f4c:	mov	x2, x20
    6f50:	mov	x1, x21
    6f54:	ldp	x19, x20, [sp, #16]
    6f58:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6f5c:	ldr	x21, [sp, #32]
    6f60:	add	x0, x0, #0xb50
    6f64:	ldp	x29, x30, [sp], #48
    6f68:	b	49c0 <Py_BuildValue@plt>
    6f6c:	mov	x20, #0x0                   	// #0
    6f70:	mov	x1, x21
    6f74:	mov	x2, x20
    6f78:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    6f7c:	ldp	x19, x20, [sp, #16]
    6f80:	add	x0, x0, #0xb50
    6f84:	ldr	x21, [sp, #32]
    6f88:	ldp	x29, x30, [sp], #48
    6f8c:	b	49c0 <Py_BuildValue@plt>
    6f90:	stp	x29, x30, [sp, #-48]!
    6f94:	mov	x1, #0x6                   	// #6
    6f98:	mov	x29, sp
    6f9c:	stp	x19, x20, [sp, #16]
    6fa0:	mov	x20, x0
    6fa4:	add	x0, x0, #0x19
    6fa8:	str	x21, [sp, #32]
    6fac:	ldr	x21, [x20, #8]
    6fb0:	bl	4820 <PyBytes_FromStringAndSize@plt>
    6fb4:	cbz	x0, 705c <PyNumber_FloorDivide@plt+0x242c>
    6fb8:	mov	x19, x0
    6fbc:	ldrb	w0, [x20, #24]
    6fc0:	mov	x1, x19
    6fc4:	cbz	w0, 7020 <PyNumber_FloorDivide@plt+0x23f0>
    6fc8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    6fcc:	ldr	x2, [x20, #32]
    6fd0:	ldr	x0, [x0, #4024]
    6fd4:	cmp	x2, x0
    6fd8:	b.eq	7020 <PyNumber_FloorDivide@plt+0x23f0>  // b.none
    6fdc:	mov	x0, #0x2                   	// #2
    6fe0:	bl	4c00 <PyTuple_Pack@plt>
    6fe4:	ldr	x1, [x19]
    6fe8:	mov	x20, x0
    6fec:	sub	x1, x1, #0x1
    6ff0:	str	x1, [x19]
    6ff4:	cbnz	x1, 703c <PyNumber_FloorDivide@plt+0x240c>
    6ff8:	mov	x0, x19
    6ffc:	bl	4830 <_Py_Dealloc@plt>
    7000:	mov	x2, x20
    7004:	mov	x1, x21
    7008:	ldp	x19, x20, [sp, #16]
    700c:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7010:	ldr	x21, [sp, #32]
    7014:	add	x0, x0, #0xb50
    7018:	ldp	x29, x30, [sp], #48
    701c:	b	49c0 <Py_BuildValue@plt>
    7020:	mov	x0, #0x1                   	// #1
    7024:	bl	4c00 <PyTuple_Pack@plt>
    7028:	ldr	x1, [x19]
    702c:	mov	x20, x0
    7030:	sub	x1, x1, #0x1
    7034:	str	x1, [x19]
    7038:	cbz	x1, 6ff8 <PyNumber_FloorDivide@plt+0x23c8>
    703c:	mov	x2, x20
    7040:	mov	x1, x21
    7044:	ldp	x19, x20, [sp, #16]
    7048:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    704c:	ldr	x21, [sp, #32]
    7050:	add	x0, x0, #0xb50
    7054:	ldp	x29, x30, [sp], #48
    7058:	b	49c0 <Py_BuildValue@plt>
    705c:	mov	x20, #0x0                   	// #0
    7060:	mov	x1, x21
    7064:	mov	x2, x20
    7068:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    706c:	ldp	x19, x20, [sp, #16]
    7070:	add	x0, x0, #0xb50
    7074:	ldr	x21, [sp, #32]
    7078:	ldp	x29, x30, [sp], #48
    707c:	b	49c0 <Py_BuildValue@plt>
    7080:	stp	x29, x30, [sp, #-32]!
    7084:	mov	x29, sp
    7088:	stp	x19, x20, [sp, #16]
    708c:	ldr	x19, [x0, #16]
    7090:	ldr	x0, [x19, #16]
    7094:	cmn	x0, #0x1
    7098:	b.eq	70a8 <PyNumber_FloorDivide@plt+0x2478>  // b.none
    709c:	ldp	x19, x20, [sp, #16]
    70a0:	ldp	x29, x30, [sp], #32
    70a4:	ret
    70a8:	ldp	w1, w2, [x19, #24]
    70ac:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    70b0:	ldr	w3, [x19, #32]
    70b4:	add	x0, x0, #0xa78
    70b8:	bl	49c0 <Py_BuildValue@plt>
    70bc:	mov	x20, x0
    70c0:	cbz	x0, 70e4 <PyNumber_FloorDivide@plt+0x24b4>
    70c4:	bl	4a80 <PyObject_Hash@plt>
    70c8:	ldr	x1, [x20]
    70cc:	str	x0, [x19, #16]
    70d0:	sub	x1, x1, #0x1
    70d4:	str	x1, [x20]
    70d8:	cbnz	x1, 709c <PyNumber_FloorDivide@plt+0x246c>
    70dc:	mov	x0, x20
    70e0:	bl	4830 <_Py_Dealloc@plt>
    70e4:	ldr	x0, [x19, #16]
    70e8:	ldp	x19, x20, [sp, #16]
    70ec:	ldp	x29, x30, [sp], #32
    70f0:	ret
    70f4:	nop
    70f8:	stp	x29, x30, [sp, #-48]!
    70fc:	sub	w4, w0, #0x1
    7100:	mov	x29, sp
    7104:	stp	x19, x20, [sp, #16]
    7108:	mov	w20, w1
    710c:	mov	w19, w0
    7110:	mov	w1, #0x270e                	// #9998
    7114:	cmp	w4, w1
    7118:	b.hi	720c <PyNumber_FloorDivide@plt+0x25dc>  // b.pmore
    711c:	sub	w1, w20, #0x1
    7120:	cmp	w1, #0xb
    7124:	b.hi	7230 <PyNumber_FloorDivide@plt+0x2600>  // b.pmore
    7128:	str	x21, [sp, #32]
    712c:	cmp	w2, #0x0
    7130:	mov	w21, w2
    7134:	b.le	71e8 <PyNumber_FloorDivide@plt+0x25b8>
    7138:	mov	x0, x3
    713c:	cmp	w20, #0x2
    7140:	b.eq	7194 <PyNumber_FloorDivide@plt+0x2564>  // b.none
    7144:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
    7148:	add	x1, x1, #0x810
    714c:	add	x1, x1, #0x40
    7150:	ldr	w1, [x1, w20, sxtw #2]
    7154:	cmp	w21, w1
    7158:	b.gt	71e8 <PyNumber_FloorDivide@plt+0x25b8>
    715c:	ldr	x2, [x0, #304]
    7160:	mov	x1, #0x0                   	// #0
    7164:	blr	x2
    7168:	cbz	x0, 71d8 <PyNumber_FloorDivide@plt+0x25a8>
    716c:	rev16	w19, w19
    7170:	sturh	w19, [x0, #25]
    7174:	strb	w20, [x0, #27]
    7178:	mov	x1, #0xffffffffffffffff    	// #-1
    717c:	strb	w21, [x0, #28]
    7180:	ldr	x21, [sp, #32]
    7184:	str	x1, [x0, #16]
    7188:	ldp	x19, x20, [sp, #16]
    718c:	ldp	x29, x30, [sp], #48
    7190:	ret
    7194:	tst	x19, #0x3
    7198:	b.ne	7144 <PyNumber_FloorDivide@plt+0x2514>  // b.any
    719c:	mov	w2, #0x5c29                	// #23593
    71a0:	mov	w3, #0x5c28                	// #23592
    71a4:	movk	w2, #0xc28f, lsl #16
    71a8:	movk	w3, #0x28f, lsl #16
    71ac:	mov	w1, #0x1d                  	// #29
    71b0:	mul	w2, w19, w2
    71b4:	ror	w4, w2, #2
    71b8:	cmp	w4, w3
    71bc:	b.hi	7154 <PyNumber_FloorDivide@plt+0x2524>  // b.pmore
    71c0:	mov	w3, #0xd70a                	// #55050
    71c4:	ror	w2, w2, #4
    71c8:	movk	w3, #0xa3, lsl #16
    71cc:	cmp	w2, w3
    71d0:	b.ls	7154 <PyNumber_FloorDivide@plt+0x2524>  // b.plast
    71d4:	b	7144 <PyNumber_FloorDivide@plt+0x2514>
    71d8:	ldp	x19, x20, [sp, #16]
    71dc:	ldr	x21, [sp, #32]
    71e0:	ldp	x29, x30, [sp], #48
    71e4:	ret
    71e8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    71ec:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    71f0:	add	x1, x1, #0xe08
    71f4:	ldr	x0, [x0, #3968]
    71f8:	ldr	x0, [x0]
    71fc:	bl	48a0 <PyErr_SetString@plt>
    7200:	mov	x0, #0x0                   	// #0
    7204:	ldr	x21, [sp, #32]
    7208:	b	7188 <PyNumber_FloorDivide@plt+0x2558>
    720c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7210:	mov	w2, w19
    7214:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7218:	add	x1, x1, #0xdd8
    721c:	ldr	x0, [x0, #3968]
    7220:	ldr	x0, [x0]
    7224:	bl	4b90 <PyErr_Format@plt>
    7228:	mov	x0, #0x0                   	// #0
    722c:	b	7188 <PyNumber_FloorDivide@plt+0x2558>
    7230:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7234:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7238:	add	x1, x1, #0xdf0
    723c:	ldr	x0, [x0, #3968]
    7240:	ldr	x0, [x0]
    7244:	bl	48a0 <PyErr_SetString@plt>
    7248:	mov	x0, #0x0                   	// #0
    724c:	b	7188 <PyNumber_FloorDivide@plt+0x2558>
    7250:	stp	x29, x30, [sp, #-80]!
    7254:	mov	x29, sp
    7258:	stp	x19, x20, [sp, #16]
    725c:	mov	x19, x1
    7260:	mov	x20, x0
    7264:	mov	x1, x2
    7268:	ldr	x3, [x19, #16]
    726c:	cmp	x3, #0x1
    7270:	b.ne	7298 <PyNumber_FloorDivide@plt+0x2668>  // b.any
    7274:	str	x21, [sp, #32]
    7278:	ldr	x21, [x19, #24]
    727c:	ldr	x2, [x21, #8]
    7280:	ldr	x2, [x2, #168]
    7284:	tbz	w2, #27, 72e8 <PyNumber_FloorDivide@plt+0x26b8>
    7288:	ldr	x2, [x21, #16]
    728c:	cmp	x2, #0x4
    7290:	b.eq	73c0 <PyNumber_FloorDivide@plt+0x2790>  // b.none
    7294:	ldr	x21, [sp, #32]
    7298:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    729c:	add	x3, x3, #0xad0
    72a0:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    72a4:	mov	x0, x19
    72a8:	add	x3, x3, #0x270
    72ac:	add	x6, sp, #0x4c
    72b0:	add	x2, x2, #0xa78
    72b4:	add	x5, sp, #0x48
    72b8:	add	x4, sp, #0x44
    72bc:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    72c0:	cbz	w0, 73ac <PyNumber_FloorDivide@plt+0x277c>
    72c4:	ldp	w0, w1, [sp, #68]
    72c8:	mov	x3, x20
    72cc:	ldr	w2, [sp, #76]
    72d0:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    72d4:	mov	x19, x0
    72d8:	mov	x0, x19
    72dc:	ldp	x19, x20, [sp, #16]
    72e0:	ldp	x29, x30, [sp], #80
    72e4:	ret
    72e8:	tbz	w2, #28, 7294 <PyNumber_FloorDivide@plt+0x2664>
    72ec:	ldrsb	w0, [x21, #32]
    72f0:	tbz	w0, #31, 7394 <PyNumber_FloorDivide@plt+0x2764>
    72f4:	ldr	x0, [x21, #16]
    72f8:	cmp	x0, #0x4
    72fc:	b.ne	7294 <PyNumber_FloorDivide@plt+0x2664>  // b.any
    7300:	ldrb	w0, [x21, #32]
    7304:	and	w2, w0, #0x1c
    7308:	and	w3, w0, #0x20
    730c:	cmp	w2, #0x4
    7310:	b.eq	740c <PyNumber_FloorDivide@plt+0x27dc>  // b.none
    7314:	cmp	w2, #0x8
    7318:	b.eq	7434 <PyNumber_FloorDivide@plt+0x2804>  // b.none
    731c:	cbz	w3, 745c <PyNumber_FloorDivide@plt+0x282c>
    7320:	tst	x0, #0x40
    7324:	add	x2, x21, #0x50
    7328:	add	x0, x21, #0x38
    732c:	csel	x0, x2, x0, eq  // eq = none
    7330:	ldr	w0, [x0]
    7334:	sub	w0, w0, #0x1
    7338:	cmp	w0, #0xb
    733c:	cset	w0, ls  // ls = plast
    7340:	cbz	w0, 7294 <PyNumber_FloorDivide@plt+0x2664>
    7344:	mov	x0, x21
    7348:	bl	4980 <PyUnicode_AsLatin1String@plt>
    734c:	mov	x21, x0
    7350:	cbz	x0, 7480 <PyNumber_FloorDivide@plt+0x2850>
    7354:	ldr	x2, [x20, #304]
    7358:	mov	x0, x20
    735c:	mov	x1, #0x0                   	// #0
    7360:	blr	x2
    7364:	mov	x19, x0
    7368:	cbz	x0, 737c <PyNumber_FloorDivide@plt+0x274c>
    736c:	ldr	w0, [x21, #32]
    7370:	mov	x1, #0xffffffffffffffff    	// #-1
    7374:	str	x1, [x19, #16]
    7378:	stur	w0, [x19, #25]
    737c:	ldr	x0, [x21]
    7380:	sub	x0, x0, #0x1
    7384:	str	x0, [x21]
    7388:	cbz	x0, 73fc <PyNumber_FloorDivide@plt+0x27cc>
    738c:	ldr	x21, [sp, #32]
    7390:	b	72d8 <PyNumber_FloorDivide@plt+0x26a8>
    7394:	mov	x0, x21
    7398:	str	x1, [sp, #56]
    739c:	bl	4730 <_PyUnicode_Ready@plt>
    73a0:	ldr	x1, [sp, #56]
    73a4:	cbz	w0, 72f4 <PyNumber_FloorDivide@plt+0x26c4>
    73a8:	ldr	x21, [sp, #32]
    73ac:	mov	x19, #0x0                   	// #0
    73b0:	mov	x0, x19
    73b4:	ldp	x19, x20, [sp, #16]
    73b8:	ldp	x29, x30, [sp], #80
    73bc:	ret
    73c0:	ldrb	w2, [x21, #34]
    73c4:	sub	w2, w2, #0x1
    73c8:	cmp	w2, #0xb
    73cc:	b.hi	7294 <PyNumber_FloorDivide@plt+0x2664>  // b.pmore
    73d0:	ldr	x2, [x0, #304]
    73d4:	mov	x1, #0x0                   	// #0
    73d8:	blr	x2
    73dc:	mov	x19, x0
    73e0:	cbz	x0, 738c <PyNumber_FloorDivide@plt+0x275c>
    73e4:	ldr	w0, [x21, #32]
    73e8:	mov	x1, #0xffffffffffffffff    	// #-1
    73ec:	stur	w0, [x19, #25]
    73f0:	str	x1, [x19, #16]
    73f4:	ldr	x21, [sp, #32]
    73f8:	b	72d8 <PyNumber_FloorDivide@plt+0x26a8>
    73fc:	mov	x0, x21
    7400:	bl	4830 <_Py_Dealloc@plt>
    7404:	ldr	x21, [sp, #32]
    7408:	b	72d8 <PyNumber_FloorDivide@plt+0x26a8>
    740c:	cbz	w3, 7468 <PyNumber_FloorDivide@plt+0x2838>
    7410:	tst	x0, #0x40
    7414:	add	x2, x21, #0x32
    7418:	add	x0, x21, #0x4a
    741c:	csel	x0, x0, x2, eq  // eq = none
    7420:	ldrb	w0, [x0]
    7424:	sub	w0, w0, #0x1
    7428:	cmp	w0, #0xb
    742c:	cset	w0, ls  // ls = plast
    7430:	b	7340 <PyNumber_FloorDivide@plt+0x2710>
    7434:	cbz	w3, 7474 <PyNumber_FloorDivide@plt+0x2844>
    7438:	tst	x0, #0x40
    743c:	add	x2, x21, #0x34
    7440:	add	x0, x21, #0x4c
    7444:	csel	x0, x0, x2, eq  // eq = none
    7448:	ldrh	w0, [x0]
    744c:	sub	w0, w0, #0x1
    7450:	cmp	w0, #0xb
    7454:	cset	w0, ls  // ls = plast
    7458:	b	7340 <PyNumber_FloorDivide@plt+0x2710>
    745c:	ldr	x0, [x21, #72]
    7460:	add	x0, x0, #0x8
    7464:	b	7330 <PyNumber_FloorDivide@plt+0x2700>
    7468:	ldr	x0, [x21, #72]
    746c:	add	x0, x0, #0x2
    7470:	b	7420 <PyNumber_FloorDivide@plt+0x27f0>
    7474:	ldr	x0, [x21, #72]
    7478:	add	x0, x0, #0x4
    747c:	b	7448 <PyNumber_FloorDivide@plt+0x2818>
    7480:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7484:	ldr	x0, [x0, #4032]
    7488:	ldr	x0, [x0]
    748c:	bl	48c0 <PyErr_ExceptionMatches@plt>
    7490:	cbz	w0, 73a8 <PyNumber_FloorDivide@plt+0x2778>
    7494:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7498:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    749c:	mov	x19, #0x0                   	// #0
    74a0:	add	x1, x1, #0xe28
    74a4:	ldr	x0, [x0, #3968]
    74a8:	ldr	x0, [x0]
    74ac:	bl	48a0 <PyErr_SetString@plt>
    74b0:	ldr	x21, [sp, #32]
    74b4:	b	72d8 <PyNumber_FloorDivide@plt+0x26a8>
    74b8:	stp	x29, x30, [sp, #-48]!
    74bc:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    74c0:	add	x3, x3, #0xad0
    74c4:	mov	x29, sp
    74c8:	stp	x19, x20, [sp, #16]
    74cc:	mov	x19, x0
    74d0:	add	x3, x3, #0x270
    74d4:	mov	x0, x1
    74d8:	add	x6, sp, #0x2c
    74dc:	ldurh	w7, [x19, #25]
    74e0:	mov	x1, x2
    74e4:	ldrb	w9, [x19, #27]
    74e8:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    74ec:	ldrb	w8, [x19, #28]
    74f0:	rev16	w7, w7
    74f4:	and	w7, w7, #0xffff
    74f8:	add	x2, x2, #0xe98
    74fc:	add	x5, sp, #0x28
    7500:	add	x4, sp, #0x24
    7504:	stp	w7, w9, [sp, #36]
    7508:	str	w8, [sp, #44]
    750c:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    7510:	cbz	w0, 7564 <PyNumber_FloorDivide@plt+0x2934>
    7514:	ldp	w1, w2, [sp, #36]
    7518:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    751c:	ldr	w3, [sp, #44]
    7520:	add	x0, x0, #0xa78
    7524:	bl	49c0 <Py_BuildValue@plt>
    7528:	mov	x20, x0
    752c:	cbz	x0, 7564 <PyNumber_FloorDivide@plt+0x2934>
    7530:	mov	x1, x0
    7534:	mov	x2, #0x0                   	// #0
    7538:	ldr	x0, [x19, #8]
    753c:	bl	7250 <PyNumber_FloorDivide@plt+0x2620>
    7540:	mov	x19, x0
    7544:	ldr	x1, [x20]
    7548:	sub	x0, x1, #0x1
    754c:	str	x0, [x20]
    7550:	cbz	x0, 7578 <PyNumber_FloorDivide@plt+0x2948>
    7554:	mov	x0, x19
    7558:	ldp	x19, x20, [sp, #16]
    755c:	ldp	x29, x30, [sp], #48
    7560:	ret
    7564:	mov	x19, #0x0                   	// #0
    7568:	mov	x0, x19
    756c:	ldp	x19, x20, [sp, #16]
    7570:	ldp	x29, x30, [sp], #48
    7574:	ret
    7578:	mov	x0, x20
    757c:	bl	4830 <_Py_Dealloc@plt>
    7580:	mov	x0, x19
    7584:	ldp	x19, x20, [sp, #16]
    7588:	ldp	x29, x30, [sp], #48
    758c:	ret
    7590:	stp	x29, x30, [sp, #-48]!
    7594:	mov	x29, sp
    7598:	stp	x19, x20, [sp, #16]
    759c:	mov	w19, w2
    75a0:	sub	w2, w2, #0x2
    75a4:	cmp	w2, #0x1
    75a8:	b.hi	7664 <PyNumber_FloorDivide@plt+0x2a34>  // b.pmore
    75ac:	mov	x20, x1
    75b0:	str	x21, [sp, #32]
    75b4:	mov	x21, x0
    75b8:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    75bc:	add	x1, x1, #0xad0
    75c0:	ldr	x0, [x20, #8]
    75c4:	add	x1, x1, #0x78
    75c8:	cmp	x0, x1
    75cc:	b.eq	75d8 <PyNumber_FloorDivide@plt+0x29a8>  // b.none
    75d0:	bl	4b60 <PyType_IsSubtype@plt>
    75d4:	cbz	w0, 75fc <PyNumber_FloorDivide@plt+0x29cc>
    75d8:	ldr	x20, [x20, #16]
    75dc:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    75e0:	add	x1, x1, #0x2a8
    75e4:	ldr	x21, [x21, #16]
    75e8:	ldr	x0, [x20, #8]
    75ec:	cmp	x0, x1
    75f0:	b.eq	7624 <PyNumber_FloorDivide@plt+0x29f4>  // b.none
    75f4:	bl	4b60 <PyType_IsSubtype@plt>
    75f8:	cbnz	w0, 7624 <PyNumber_FloorDivide@plt+0x29f4>
    75fc:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    7600:	ldr	x21, [sp, #32]
    7604:	ldr	x1, [x1, #3960]
    7608:	ldp	x19, x20, [sp, #16]
    760c:	mov	x0, x1
    7610:	ldr	x2, [x1]
    7614:	add	x2, x2, #0x1
    7618:	str	x2, [x1]
    761c:	ldp	x29, x30, [sp], #48
    7620:	ret
    7624:	ldr	w1, [x20, #24]
    7628:	ldr	w0, [x21, #24]
    762c:	subs	w0, w0, w1
    7630:	b.ne	7650 <PyNumber_FloorDivide@plt+0x2a20>  // b.any
    7634:	ldr	w1, [x20, #28]
    7638:	ldr	w0, [x21, #28]
    763c:	subs	w0, w0, w1
    7640:	b.ne	7650 <PyNumber_FloorDivide@plt+0x2a20>  // b.any
    7644:	ldr	w1, [x20, #32]
    7648:	ldr	w0, [x21, #32]
    764c:	sub	w0, w0, w1
    7650:	mov	w1, w19
    7654:	ldp	x19, x20, [sp, #16]
    7658:	ldr	x21, [sp, #32]
    765c:	ldp	x29, x30, [sp], #48
    7660:	b	55e8 <PyNumber_FloorDivide@plt+0x9b8>
    7664:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    7668:	ldp	x19, x20, [sp, #16]
    766c:	ldr	x1, [x1, #3960]
    7670:	mov	x0, x1
    7674:	ldr	x2, [x1]
    7678:	add	x2, x2, #0x1
    767c:	str	x2, [x1]
    7680:	ldp	x29, x30, [sp], #48
    7684:	ret
    7688:	stp	x29, x30, [sp, #-48]!
    768c:	mov	x29, sp
    7690:	stp	x19, x20, [sp, #16]
    7694:	mov	x19, x0
    7698:	stp	x21, x22, [sp, #32]
    769c:	ldrb	w0, [x0, #29]
    76a0:	ldrb	w5, [x19, #28]
    76a4:	ldr	x1, [x19, #8]
    76a8:	lsl	w0, w0, #8
    76ac:	ldrb	w3, [x19, #30]
    76b0:	orr	w5, w0, w5, lsl #16
    76b4:	ldrb	w2, [x19, #25]
    76b8:	orr	w5, w5, w3
    76bc:	ldrb	w4, [x19, #27]
    76c0:	ldrb	w3, [x19, #26]
    76c4:	ldrb	w21, [x19, #31]
    76c8:	ldr	x1, [x1, #24]
    76cc:	cbnz	w5, 77f8 <PyNumber_FloorDivide@plt+0x2bc8>
    76d0:	cbz	w4, 77cc <PyNumber_FloorDivide@plt+0x2b9c>
    76d4:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    76d8:	add	x0, x0, #0xb38
    76dc:	bl	4720 <PyUnicode_FromFormat@plt>
    76e0:	mov	x20, x0
    76e4:	cbz	x20, 77e0 <PyNumber_FloorDivide@plt+0x2bb0>
    76e8:	ldrb	w0, [x19, #24]
    76ec:	cbz	w0, 7758 <PyNumber_FloorDivide@plt+0x2b28>
    76f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    76f4:	ldr	x22, [x19, #32]
    76f8:	ldr	x0, [x0, #4024]
    76fc:	cmp	x22, x0
    7700:	b.eq	7758 <PyNumber_FloorDivide@plt+0x2b28>  // b.none
    7704:	ldr	x2, [x20, #16]
    7708:	mov	x1, #0x0                   	// #0
    770c:	mov	x0, x20
    7710:	sub	x2, x2, #0x1
    7714:	bl	4c20 <PyUnicode_Substring@plt>
    7718:	ldr	x1, [x20]
    771c:	mov	x19, x0
    7720:	sub	x0, x1, #0x1
    7724:	str	x0, [x20]
    7728:	cbz	x0, 7824 <PyNumber_FloorDivide@plt+0x2bf4>
    772c:	cbz	x19, 77e0 <PyNumber_FloorDivide@plt+0x2bb0>
    7730:	mov	x1, x19
    7734:	mov	x2, x22
    7738:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    773c:	add	x0, x0, #0xed0
    7740:	bl	4720 <PyUnicode_FromFormat@plt>
    7744:	mov	x20, x0
    7748:	ldr	x1, [x19]
    774c:	sub	x0, x1, #0x1
    7750:	str	x0, [x19]
    7754:	cbz	x0, 7830 <PyNumber_FloorDivide@plt+0x2c00>
    7758:	cmp	x20, #0x0
    775c:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    7760:	b.eq	77b8 <PyNumber_FloorDivide@plt+0x2b88>  // b.none
    7764:	ldr	x2, [x20, #16]
    7768:	mov	x1, #0x0                   	// #0
    776c:	mov	x0, x20
    7770:	sub	x2, x2, #0x1
    7774:	bl	4c20 <PyUnicode_Substring@plt>
    7778:	ldr	x1, [x20]
    777c:	mov	x19, x0
    7780:	sub	x0, x1, #0x1
    7784:	str	x0, [x20]
    7788:	cbz	x0, 780c <PyNumber_FloorDivide@plt+0x2bdc>
    778c:	cbz	x19, 77e0 <PyNumber_FloorDivide@plt+0x2bb0>
    7790:	mov	x1, x19
    7794:	mov	w2, w21
    7798:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    779c:	add	x0, x0, #0xee0
    77a0:	bl	4720 <PyUnicode_FromFormat@plt>
    77a4:	mov	x20, x0
    77a8:	ldr	x1, [x19]
    77ac:	sub	x0, x1, #0x1
    77b0:	str	x0, [x19]
    77b4:	cbz	x0, 7818 <PyNumber_FloorDivide@plt+0x2be8>
    77b8:	mov	x0, x20
    77bc:	ldp	x19, x20, [sp, #16]
    77c0:	ldp	x21, x22, [sp, #32]
    77c4:	ldp	x29, x30, [sp], #48
    77c8:	ret
    77cc:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    77d0:	add	x0, x0, #0xec0
    77d4:	bl	4720 <PyUnicode_FromFormat@plt>
    77d8:	mov	x20, x0
    77dc:	cbnz	x20, 76e8 <PyNumber_FloorDivide@plt+0x2ab8>
    77e0:	mov	x20, #0x0                   	// #0
    77e4:	mov	x0, x20
    77e8:	ldp	x19, x20, [sp, #16]
    77ec:	ldp	x21, x22, [sp, #32]
    77f0:	ldp	x29, x30, [sp], #48
    77f4:	ret
    77f8:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    77fc:	add	x0, x0, #0xea8
    7800:	bl	4720 <PyUnicode_FromFormat@plt>
    7804:	mov	x20, x0
    7808:	b	76e4 <PyNumber_FloorDivide@plt+0x2ab4>
    780c:	mov	x0, x20
    7810:	bl	4830 <_Py_Dealloc@plt>
    7814:	b	778c <PyNumber_FloorDivide@plt+0x2b5c>
    7818:	mov	x0, x19
    781c:	bl	4830 <_Py_Dealloc@plt>
    7820:	b	77b8 <PyNumber_FloorDivide@plt+0x2b88>
    7824:	mov	x0, x20
    7828:	bl	4830 <_Py_Dealloc@plt>
    782c:	b	772c <PyNumber_FloorDivide@plt+0x2afc>
    7830:	mov	x0, x19
    7834:	bl	4830 <_Py_Dealloc@plt>
    7838:	b	7758 <PyNumber_FloorDivide@plt+0x2b28>
    783c:	nop
    7840:	sub	sp, sp, #0x40
    7844:	stp	x29, x30, [sp, #16]
    7848:	add	x29, sp, #0x10
    784c:	stp	x19, x20, [sp, #32]
    7850:	mov	x19, x0
    7854:	ldrb	w1, [x0, #33]
    7858:	ldrb	w0, [x0, #32]
    785c:	ldr	x8, [x19, #8]
    7860:	lsl	w1, w1, #8
    7864:	ldurh	w2, [x19, #25]
    7868:	orr	w0, w1, w0, lsl #16
    786c:	ldrb	w1, [x19, #34]
    7870:	rev16	w2, w2
    7874:	ldrb	w7, [x19, #31]
    7878:	orr	w0, w0, w1
    787c:	ldrb	w3, [x19, #27]
    7880:	ldrb	w4, [x19, #28]
    7884:	and	w2, w2, #0xffff
    7888:	ldrb	w5, [x19, #29]
    788c:	ldrb	w6, [x19, #30]
    7890:	ldr	x1, [x8, #24]
    7894:	cbnz	w0, 7970 <PyNumber_FloorDivide@plt+0x2d40>
    7898:	cbz	w7, 7944 <PyNumber_FloorDivide@plt+0x2d14>
    789c:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    78a0:	add	x0, x0, #0xf10
    78a4:	bl	4720 <PyUnicode_FromFormat@plt>
    78a8:	mov	x20, x0
    78ac:	cbz	x20, 7958 <PyNumber_FloorDivide@plt+0x2d28>
    78b0:	stp	x21, x22, [sp, #48]
    78b4:	ldrb	w21, [x19, #35]
    78b8:	cbnz	w21, 7988 <PyNumber_FloorDivide@plt+0x2d58>
    78bc:	ldrb	w0, [x19, #24]
    78c0:	cbz	w0, 792c <PyNumber_FloorDivide@plt+0x2cfc>
    78c4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    78c8:	ldr	x21, [x19, #40]
    78cc:	ldr	x0, [x0, #4024]
    78d0:	cmp	x21, x0
    78d4:	b.eq	792c <PyNumber_FloorDivide@plt+0x2cfc>  // b.none
    78d8:	ldr	x2, [x20, #16]
    78dc:	mov	x1, #0x0                   	// #0
    78e0:	mov	x0, x20
    78e4:	sub	x2, x2, #0x1
    78e8:	bl	4c20 <PyUnicode_Substring@plt>
    78ec:	ldr	x1, [x20]
    78f0:	mov	x19, x0
    78f4:	sub	x0, x1, #0x1
    78f8:	str	x0, [x20]
    78fc:	cbz	x0, 79ec <PyNumber_FloorDivide@plt+0x2dbc>
    7900:	cbz	x19, 79e0 <PyNumber_FloorDivide@plt+0x2db0>
    7904:	mov	x1, x19
    7908:	mov	x2, x21
    790c:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7910:	add	x0, x0, #0xed0
    7914:	bl	4720 <PyUnicode_FromFormat@plt>
    7918:	mov	x20, x0
    791c:	ldr	x1, [x19]
    7920:	sub	x0, x1, #0x1
    7924:	str	x0, [x19]
    7928:	cbz	x0, 79f8 <PyNumber_FloorDivide@plt+0x2dc8>
    792c:	mov	x0, x20
    7930:	ldp	x29, x30, [sp, #16]
    7934:	ldp	x19, x20, [sp, #32]
    7938:	ldp	x21, x22, [sp, #48]
    793c:	add	sp, sp, #0x40
    7940:	ret
    7944:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7948:	add	x0, x0, #0xf30
    794c:	bl	4720 <PyUnicode_FromFormat@plt>
    7950:	mov	x20, x0
    7954:	cbnz	x20, 78b0 <PyNumber_FloorDivide@plt+0x2c80>
    7958:	mov	x20, #0x0                   	// #0
    795c:	mov	x0, x20
    7960:	ldp	x29, x30, [sp, #16]
    7964:	ldp	x19, x20, [sp, #32]
    7968:	add	sp, sp, #0x40
    796c:	ret
    7970:	str	w0, [sp]
    7974:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7978:	add	x0, x0, #0xef0
    797c:	bl	4720 <PyUnicode_FromFormat@plt>
    7980:	mov	x20, x0
    7984:	b	78ac <PyNumber_FloorDivide@plt+0x2c7c>
    7988:	ldr	x2, [x20, #16]
    798c:	mov	x1, #0x0                   	// #0
    7990:	mov	x0, x20
    7994:	sub	x2, x2, #0x1
    7998:	bl	4c20 <PyUnicode_Substring@plt>
    799c:	ldr	x1, [x20]
    79a0:	mov	x22, x0
    79a4:	sub	x0, x1, #0x1
    79a8:	str	x0, [x20]
    79ac:	cbz	x0, 7a18 <PyNumber_FloorDivide@plt+0x2de8>
    79b0:	cbz	x22, 79e0 <PyNumber_FloorDivide@plt+0x2db0>
    79b4:	mov	x1, x22
    79b8:	mov	w2, w21
    79bc:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    79c0:	add	x0, x0, #0xee0
    79c4:	bl	4720 <PyUnicode_FromFormat@plt>
    79c8:	mov	x20, x0
    79cc:	ldr	x1, [x22]
    79d0:	sub	x0, x1, #0x1
    79d4:	str	x0, [x22]
    79d8:	cbz	x0, 7a28 <PyNumber_FloorDivide@plt+0x2df8>
    79dc:	cbnz	x20, 78bc <PyNumber_FloorDivide@plt+0x2c8c>
    79e0:	mov	x20, #0x0                   	// #0
    79e4:	ldp	x21, x22, [sp, #48]
    79e8:	b	795c <PyNumber_FloorDivide@plt+0x2d2c>
    79ec:	mov	x0, x20
    79f0:	bl	4830 <_Py_Dealloc@plt>
    79f4:	b	7900 <PyNumber_FloorDivide@plt+0x2cd0>
    79f8:	mov	x0, x19
    79fc:	bl	4830 <_Py_Dealloc@plt>
    7a00:	mov	x0, x20
    7a04:	ldp	x29, x30, [sp, #16]
    7a08:	ldp	x19, x20, [sp, #32]
    7a0c:	ldp	x21, x22, [sp, #48]
    7a10:	add	sp, sp, #0x40
    7a14:	ret
    7a18:	mov	x0, x20
    7a1c:	bl	4830 <_Py_Dealloc@plt>
    7a20:	cbnz	x22, 79b4 <PyNumber_FloorDivide@plt+0x2d84>
    7a24:	b	79e0 <PyNumber_FloorDivide@plt+0x2db0>
    7a28:	mov	x0, x22
    7a2c:	bl	4830 <_Py_Dealloc@plt>
    7a30:	cbnz	x20, 78bc <PyNumber_FloorDivide@plt+0x2c8c>
    7a34:	b	79e0 <PyNumber_FloorDivide@plt+0x2db0>
    7a38:	stp	x29, x30, [sp, #-48]!
    7a3c:	adrp	x2, 28000 <PyInit__datetime@@Base+0x14f90>
    7a40:	mov	x29, sp
    7a44:	ldr	x2, [x2, #4024]
    7a48:	stp	x19, x20, [sp, #16]
    7a4c:	mov	x20, x0
    7a50:	cmp	x1, x2
    7a54:	b.eq	7a7c <PyNumber_FloorDivide@plt+0x2e4c>  // b.none
    7a58:	mov	x19, x1
    7a5c:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    7a60:	add	x2, x2, #0x2a8
    7a64:	add	x1, x2, #0x1a0
    7a68:	ldr	x0, [x19, #8]
    7a6c:	cmp	x0, x1
    7a70:	b.eq	7a7c <PyNumber_FloorDivide@plt+0x2e4c>  // b.none
    7a74:	bl	4b60 <PyType_IsSubtype@plt>
    7a78:	cbz	w0, 7c04 <PyNumber_FloorDivide@plt+0x2fd4>
    7a7c:	ldr	x0, [x20, #24]
    7a80:	cbz	x0, 7a9c <PyNumber_FloorDivide@plt+0x2e6c>
    7a84:	ldr	x1, [x0]
    7a88:	add	x1, x1, #0x1
    7a8c:	str	x1, [x0]
    7a90:	ldp	x19, x20, [sp, #16]
    7a94:	ldp	x29, x30, [sp], #48
    7a98:	ret
    7a9c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    7aa0:	ldr	x0, [x0, #4056]
    7aa4:	cmp	x20, x0
    7aa8:	b.eq	7b64 <PyNumber_FloorDivide@plt+0x2f34>  // b.none
    7aac:	ldr	x0, [x20, #16]
    7ab0:	ldr	x1, [x0, #24]
    7ab4:	str	x21, [sp, #32]
    7ab8:	ldr	w21, [x0, #32]
    7abc:	cbz	x1, 7b5c <PyNumber_FloorDivide@plt+0x2f2c>
    7ac0:	ldp	w3, w19, [x0, #24]
    7ac4:	tbnz	w3, #31, 7bb0 <PyNumber_FloorDivide@plt+0x2f80>
    7ac8:	ldr	x3, [x0]
    7acc:	mov	w20, #0x2b                  	// #43
    7ad0:	add	x1, x3, #0x1
    7ad4:	str	x1, [x0]
    7ad8:	str	x3, [x0]
    7adc:	cbz	x3, 7ba8 <PyNumber_FloorDivide@plt+0x2f78>
    7ae0:	mov	w3, #0x8889                	// #34953
    7ae4:	movk	w3, #0x8888, lsl #16
    7ae8:	smull	x3, w19, w3
    7aec:	lsr	x3, x3, #32
    7af0:	add	w3, w19, w3
    7af4:	asr	w3, w3, #5
    7af8:	sub	w3, w3, w19, asr #31
    7afc:	lsl	w4, w3, #4
    7b00:	sub	w4, w4, w3
    7b04:	subs	w4, w19, w4, lsl #2
    7b08:	b.mi	7b84 <PyNumber_FloorDivide@plt+0x2f54>  // b.first
    7b0c:	mov	w2, #0x8889                	// #34953
    7b10:	movk	w2, #0x8888, lsl #16
    7b14:	smull	x2, w3, w2
    7b18:	lsr	x2, x2, #32
    7b1c:	add	w2, w3, w2
    7b20:	asr	w2, w2, #5
    7b24:	sub	w2, w2, w3, asr #31
    7b28:	lsl	w0, w2, #4
    7b2c:	sub	w0, w0, w2
    7b30:	subs	w3, w3, w0, lsl #2
    7b34:	b.mi	7b78 <PyNumber_FloorDivide@plt+0x2f48>  // b.first
    7b38:	cbnz	w21, 7be4 <PyNumber_FloorDivide@plt+0x2fb4>
    7b3c:	mov	w1, w20
    7b40:	cbnz	w4, 7b90 <PyNumber_FloorDivide@plt+0x2f60>
    7b44:	ldp	x19, x20, [sp, #16]
    7b48:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7b4c:	ldr	x21, [sp, #32]
    7b50:	add	x0, x0, #0xf88
    7b54:	ldp	x29, x30, [sp], #48
    7b58:	b	4720 <PyUnicode_FromFormat@plt>
    7b5c:	cbnz	w21, 7ac0 <PyNumber_FloorDivide@plt+0x2e90>
    7b60:	ldr	x21, [sp, #32]
    7b64:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7b68:	ldp	x19, x20, [sp, #16]
    7b6c:	add	x0, x0, #0xf48
    7b70:	ldp	x29, x30, [sp], #48
    7b74:	b	4b00 <PyUnicode_FromString@plt>
    7b78:	sub	w2, w2, #0x1
    7b7c:	add	w3, w3, #0x3c
    7b80:	b	7b38 <PyNumber_FloorDivide@plt+0x2f08>
    7b84:	sub	w3, w3, #0x1
    7b88:	add	w4, w4, #0x3c
    7b8c:	b	7b0c <PyNumber_FloorDivide@plt+0x2edc>
    7b90:	ldp	x19, x20, [sp, #16]
    7b94:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7b98:	ldr	x21, [sp, #32]
    7b9c:	add	x0, x0, #0xf70
    7ba0:	ldp	x29, x30, [sp], #48
    7ba4:	b	4720 <PyUnicode_FromFormat@plt>
    7ba8:	bl	4830 <_Py_Dealloc@plt>
    7bac:	b	7ae0 <PyNumber_FloorDivide@plt+0x2eb0>
    7bb0:	neg	w0, w3
    7bb4:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
    7bb8:	neg	w2, w21
    7bbc:	neg	w1, w19
    7bc0:	add	x4, x4, #0x2a8
    7bc4:	mov	w3, #0x1                   	// #1
    7bc8:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
    7bcc:	cbz	x0, 7c34 <PyNumber_FloorDivide@plt+0x3004>
    7bd0:	ldr	x3, [x0]
    7bd4:	mov	w20, #0x2d                  	// #45
    7bd8:	ldp	w19, w21, [x0, #28]
    7bdc:	sub	x3, x3, #0x1
    7be0:	b	7ad8 <PyNumber_FloorDivide@plt+0x2ea8>
    7be4:	mov	w5, w21
    7be8:	mov	w1, w20
    7bec:	ldp	x19, x20, [sp, #16]
    7bf0:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7bf4:	ldr	x21, [sp, #32]
    7bf8:	add	x0, x0, #0xf50
    7bfc:	ldp	x29, x30, [sp], #48
    7c00:	b	4720 <PyUnicode_FromFormat@plt>
    7c04:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7c08:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7c0c:	ldr	x3, [x19, #8]
    7c10:	add	x2, x2, #0xa48
    7c14:	ldr	x0, [x0, #3976]
    7c18:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7c1c:	ldr	x3, [x3, #24]
    7c20:	add	x1, x1, #0xd90
    7c24:	ldr	x0, [x0]
    7c28:	bl	4b90 <PyErr_Format@plt>
    7c2c:	mov	x0, #0x0                   	// #0
    7c30:	b	7a90 <PyNumber_FloorDivide@plt+0x2e60>
    7c34:	ldr	x21, [sp, #32]
    7c38:	b	7a90 <PyNumber_FloorDivide@plt+0x2e60>
    7c3c:	nop
    7c40:	stp	x29, x30, [sp, #-32]!
    7c44:	mov	x2, x0
    7c48:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    7c4c:	mov	x29, sp
    7c50:	stp	x19, x20, [sp, #16]
    7c54:	ldrb	w0, [x0, #24]
    7c58:	cbnz	w0, 7c80 <PyNumber_FloorDivide@plt+0x3050>
    7c5c:	ldr	x1, [x1, #4024]
    7c60:	mov	x19, x1
    7c64:	ldr	x0, [x1]
    7c68:	add	x0, x0, #0x1
    7c6c:	str	x0, [x1]
    7c70:	mov	x0, x19
    7c74:	ldp	x19, x20, [sp, #16]
    7c78:	ldp	x29, x30, [sp], #32
    7c7c:	ret
    7c80:	ldr	x20, [x1, #4024]
    7c84:	ldr	x0, [x2, #40]
    7c88:	cmp	x0, x20
    7c8c:	b.eq	7c5c <PyNumber_FloorDivide@plt+0x302c>  // b.none
    7c90:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    7c94:	add	x1, x1, #0xad0
    7c98:	add	x1, x1, #0x290
    7c9c:	mov	x3, #0x0                   	// #0
    7ca0:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    7ca4:	mov	x19, x0
    7ca8:	cbz	x0, 7cfc <PyNumber_FloorDivide@plt+0x30cc>
    7cac:	cmp	x0, x20
    7cb0:	b.eq	7c70 <PyNumber_FloorDivide@plt+0x3040>  // b.none
    7cb4:	ldr	x0, [x0, #8]
    7cb8:	ldr	x1, [x0, #168]
    7cbc:	tbnz	w1, #28, 7c70 <PyNumber_FloorDivide@plt+0x3040>
    7cc0:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    7cc4:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7cc8:	ldr	x2, [x0, #24]
    7ccc:	add	x1, x1, #0xf98
    7cd0:	ldr	x3, [x3, #3976]
    7cd4:	ldr	x0, [x3]
    7cd8:	bl	4b90 <PyErr_Format@plt>
    7cdc:	ldr	x0, [x19]
    7ce0:	sub	x0, x0, #0x1
    7ce4:	str	x0, [x19]
    7ce8:	cbnz	x0, 7cfc <PyNumber_FloorDivide@plt+0x30cc>
    7cec:	mov	x0, x19
    7cf0:	mov	x19, #0x0                   	// #0
    7cf4:	bl	4830 <_Py_Dealloc@plt>
    7cf8:	b	7c70 <PyNumber_FloorDivide@plt+0x3040>
    7cfc:	mov	x19, #0x0                   	// #0
    7d00:	mov	x0, x19
    7d04:	ldp	x19, x20, [sp, #16]
    7d08:	ldp	x29, x30, [sp], #32
    7d0c:	ret
    7d10:	stp	x29, x30, [sp, #-32]!
    7d14:	mov	x29, sp
    7d18:	stp	x19, x20, [sp, #16]
    7d1c:	ldrb	w1, [x0, #24]
    7d20:	cbnz	w1, 7d4c <PyNumber_FloorDivide@plt+0x311c>
    7d24:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    7d28:	ldr	x1, [x1, #4024]
    7d2c:	mov	x19, x1
    7d30:	ldr	x0, [x1]
    7d34:	add	x0, x0, #0x1
    7d38:	str	x0, [x1]
    7d3c:	mov	x0, x19
    7d40:	ldp	x19, x20, [sp, #16]
    7d44:	ldp	x29, x30, [sp], #32
    7d48:	ret
    7d4c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    7d50:	ldr	x0, [x0, #32]
    7d54:	ldr	x20, [x1, #4024]
    7d58:	cmp	x0, x20
    7d5c:	b.eq	7d28 <PyNumber_FloorDivide@plt+0x30f8>  // b.none
    7d60:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    7d64:	add	x1, x1, #0xad0
    7d68:	add	x1, x1, #0x290
    7d6c:	mov	x2, x20
    7d70:	mov	x3, #0x0                   	// #0
    7d74:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    7d78:	mov	x19, x0
    7d7c:	cbz	x0, 7dd0 <PyNumber_FloorDivide@plt+0x31a0>
    7d80:	cmp	x0, x20
    7d84:	b.eq	7d3c <PyNumber_FloorDivide@plt+0x310c>  // b.none
    7d88:	ldr	x0, [x0, #8]
    7d8c:	ldr	x1, [x0, #168]
    7d90:	tbnz	w1, #28, 7d3c <PyNumber_FloorDivide@plt+0x310c>
    7d94:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    7d98:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7d9c:	ldr	x2, [x0, #24]
    7da0:	add	x1, x1, #0xf98
    7da4:	ldr	x3, [x3, #3976]
    7da8:	ldr	x0, [x3]
    7dac:	bl	4b90 <PyErr_Format@plt>
    7db0:	ldr	x0, [x19]
    7db4:	sub	x0, x0, #0x1
    7db8:	str	x0, [x19]
    7dbc:	cbnz	x0, 7dd0 <PyNumber_FloorDivide@plt+0x31a0>
    7dc0:	mov	x0, x19
    7dc4:	mov	x19, #0x0                   	// #0
    7dc8:	bl	4830 <_Py_Dealloc@plt>
    7dcc:	b	7d3c <PyNumber_FloorDivide@plt+0x310c>
    7dd0:	mov	x19, #0x0                   	// #0
    7dd4:	mov	x0, x19
    7dd8:	ldp	x19, x20, [sp, #16]
    7ddc:	ldp	x29, x30, [sp], #32
    7de0:	ret
    7de4:	nop
    7de8:	stp	x29, x30, [sp, #-80]!
    7dec:	cmp	w0, #0x17
    7df0:	mov	x29, sp
    7df4:	b.hi	7f64 <PyNumber_FloorDivide@plt+0x3334>  // b.pmore
    7df8:	stp	x21, x22, [sp, #32]
    7dfc:	cmp	w1, #0x3b
    7e00:	mov	w22, w1
    7e04:	b.hi	7f84 <PyNumber_FloorDivide@plt+0x3354>  // b.pmore
    7e08:	stp	x23, x24, [sp, #48]
    7e0c:	cmp	w2, #0x3b
    7e10:	mov	w23, w2
    7e14:	b.hi	7fc4 <PyNumber_FloorDivide@plt+0x3394>  // b.pmore
    7e18:	stp	x19, x20, [sp, #16]
    7e1c:	mov	w20, w3
    7e20:	stp	x25, x26, [sp, #64]
    7e24:	mov	w26, w0
    7e28:	mov	w0, #0x423f                	// #16959
    7e2c:	movk	w0, #0xf, lsl #16
    7e30:	cmp	w3, w0
    7e34:	b.hi	7fa8 <PyNumber_FloorDivide@plt+0x3378>  // b.pmore
    7e38:	mov	w24, w5
    7e3c:	cmp	w5, #0x1
    7e40:	b.hi	7f48 <PyNumber_FloorDivide@plt+0x3318>  // b.pmore
    7e44:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
    7e48:	mov	x19, x4
    7e4c:	mov	x25, x6
    7e50:	ldr	x0, [x21, #4024]
    7e54:	cmp	x4, x0
    7e58:	b.eq	7e7c <PyNumber_FloorDivide@plt+0x324c>  // b.none
    7e5c:	ldr	x0, [x4, #8]
    7e60:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    7e64:	add	x1, x1, #0x2a8
    7e68:	add	x1, x1, #0x340
    7e6c:	cmp	x0, x1
    7e70:	b.eq	7e7c <PyNumber_FloorDivide@plt+0x324c>  // b.none
    7e74:	bl	4b60 <PyType_IsSubtype@plt>
    7e78:	cbz	w0, 7f10 <PyNumber_FloorDivide@plt+0x32e0>
    7e7c:	ldr	x21, [x21, #4024]
    7e80:	mov	x0, x25
    7e84:	ldr	x2, [x25, #304]
    7e88:	cmp	x19, x21
    7e8c:	cset	x1, ne  // ne = any
    7e90:	cset	w25, ne  // ne = any
    7e94:	blr	x2
    7e98:	cbz	x0, 7ef8 <PyNumber_FloorDivide@plt+0x32c8>
    7e9c:	asr	w1, w20, #16
    7ea0:	mov	x2, #0xffffffffffffffff    	// #-1
    7ea4:	rev16	w20, w20
    7ea8:	str	x2, [x0, #16]
    7eac:	strb	w25, [x0, #24]
    7eb0:	cmp	x19, x21
    7eb4:	strb	w26, [x0, #25]
    7eb8:	strb	w22, [x0, #26]
    7ebc:	strb	w23, [x0, #27]
    7ec0:	strb	w1, [x0, #28]
    7ec4:	sturh	w20, [x0, #29]
    7ec8:	b.eq	7edc <PyNumber_FloorDivide@plt+0x32ac>  // b.none
    7ecc:	ldr	x1, [x19]
    7ed0:	add	x1, x1, #0x1
    7ed4:	str	x1, [x19]
    7ed8:	str	x19, [x0, #32]
    7edc:	strb	w24, [x0, #31]
    7ee0:	ldp	x19, x20, [sp, #16]
    7ee4:	ldp	x21, x22, [sp, #32]
    7ee8:	ldp	x23, x24, [sp, #48]
    7eec:	ldp	x25, x26, [sp, #64]
    7ef0:	ldp	x29, x30, [sp], #80
    7ef4:	ret
    7ef8:	ldp	x19, x20, [sp, #16]
    7efc:	ldp	x21, x22, [sp, #32]
    7f00:	ldp	x23, x24, [sp, #48]
    7f04:	ldp	x25, x26, [sp, #64]
    7f08:	ldp	x29, x30, [sp], #80
    7f0c:	ret
    7f10:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7f14:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    7f18:	ldr	x2, [x19, #8]
    7f1c:	add	x1, x1, #0x60
    7f20:	ldr	x0, [x0, #3976]
    7f24:	ldr	x2, [x2, #24]
    7f28:	ldr	x0, [x0]
    7f2c:	bl	4b90 <PyErr_Format@plt>
    7f30:	mov	x0, #0x0                   	// #0
    7f34:	ldp	x19, x20, [sp, #16]
    7f38:	ldp	x21, x22, [sp, #32]
    7f3c:	ldp	x23, x24, [sp, #48]
    7f40:	ldp	x25, x26, [sp, #64]
    7f44:	b	7ef0 <PyNumber_FloorDivide@plt+0x32c0>
    7f48:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7f4c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    7f50:	add	x1, x1, #0x40
    7f54:	ldr	x0, [x0, #3968]
    7f58:	ldr	x0, [x0]
    7f5c:	bl	48a0 <PyErr_SetString@plt>
    7f60:	b	7f30 <PyNumber_FloorDivide@plt+0x3300>
    7f64:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7f68:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7f6c:	add	x1, x1, #0xfd0
    7f70:	ldr	x0, [x0, #3968]
    7f74:	ldr	x0, [x0]
    7f78:	bl	48a0 <PyErr_SetString@plt>
    7f7c:	mov	x0, #0x0                   	// #0
    7f80:	b	7ef0 <PyNumber_FloorDivide@plt+0x32c0>
    7f84:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7f88:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    7f8c:	add	x1, x1, #0xfe8
    7f90:	ldr	x0, [x0, #3968]
    7f94:	ldr	x0, [x0]
    7f98:	bl	48a0 <PyErr_SetString@plt>
    7f9c:	mov	x0, #0x0                   	// #0
    7fa0:	ldp	x21, x22, [sp, #32]
    7fa4:	b	7ef0 <PyNumber_FloorDivide@plt+0x32c0>
    7fa8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7fac:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    7fb0:	add	x1, x1, #0x18
    7fb4:	ldr	x0, [x0, #3968]
    7fb8:	ldr	x0, [x0]
    7fbc:	bl	48a0 <PyErr_SetString@plt>
    7fc0:	b	7f30 <PyNumber_FloorDivide@plt+0x3300>
    7fc4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    7fc8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    7fcc:	add	x1, x1, #0x0
    7fd0:	ldr	x0, [x0, #3968]
    7fd4:	ldr	x0, [x0]
    7fd8:	bl	48a0 <PyErr_SetString@plt>
    7fdc:	mov	x0, #0x0                   	// #0
    7fe0:	ldp	x21, x22, [sp, #32]
    7fe4:	ldp	x23, x24, [sp, #48]
    7fe8:	b	7ef0 <PyNumber_FloorDivide@plt+0x32c0>
    7fec:	nop
    7ff0:	stp	x29, x30, [sp, #-80]!
    7ff4:	mov	x29, sp
    7ff8:	stp	x19, x20, [sp, #16]
    7ffc:	mov	x20, x0
    8000:	ldr	x0, [x1, #8]
    8004:	ldr	x0, [x0, #168]
    8008:	tbz	w0, #28, 8128 <PyNumber_FloorDivide@plt+0x34f8>
    800c:	mov	x19, x1
    8010:	add	x1, sp, #0x48
    8014:	mov	x0, x19
    8018:	bl	4b70 <PyUnicode_AsUTF8AndSize@plt>
    801c:	cbz	x0, 80d4 <PyNumber_FloorDivide@plt+0x34a4>
    8020:	ldr	x1, [sp, #72]
    8024:	add	x7, sp, #0x44
    8028:	add	x6, sp, #0x40
    802c:	add	x5, sp, #0x3c
    8030:	add	x4, sp, #0x38
    8034:	add	x3, sp, #0x34
    8038:	add	x2, sp, #0x30
    803c:	stp	wzr, wzr, [sp, #48]
    8040:	stp	wzr, wzr, [sp, #56]
    8044:	str	wzr, [sp, #68]
    8048:	bl	5160 <PyNumber_FloorDivide@plt+0x530>
    804c:	tbnz	w0, #31, 80d4 <PyNumber_FloorDivide@plt+0x34a4>
    8050:	stp	x21, x22, [sp, #32]
    8054:	cmp	w0, #0x1
    8058:	b.eq	8104 <PyNumber_FloorDivide@plt+0x34d4>  // b.none
    805c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    8060:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    8064:	ldr	x0, [x0, #4024]
    8068:	mov	x21, x0
    806c:	ldr	x1, [x0]
    8070:	add	x1, x1, #0x1
    8074:	str	x1, [x0]
    8078:	add	x19, x19, #0x2a8
    807c:	add	x19, x19, #0x4e0
    8080:	ldp	w0, w1, [sp, #48]
    8084:	cmp	x20, x19
    8088:	ldp	w4, w5, [sp, #56]
    808c:	b.eq	8170 <PyNumber_FloorDivide@plt+0x3540>  // b.none
    8090:	mov	w3, w1
    8094:	mov	w2, w0
    8098:	mov	x6, x21
    809c:	mov	x0, x20
    80a0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    80a4:	add	x1, x1, #0xd0
    80a8:	bl	4970 <PyObject_CallFunction@plt>
    80ac:	mov	x20, x0
    80b0:	ldr	x0, [x21]
    80b4:	sub	x0, x0, #0x1
    80b8:	str	x0, [x21]
    80bc:	cbz	x0, 8154 <PyNumber_FloorDivide@plt+0x3524>
    80c0:	ldp	x21, x22, [sp, #32]
    80c4:	mov	x0, x20
    80c8:	ldp	x19, x20, [sp, #16]
    80cc:	ldp	x29, x30, [sp], #80
    80d0:	ret
    80d4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    80d8:	mov	x2, x19
    80dc:	mov	x20, #0x0                   	// #0
    80e0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    80e4:	ldr	x0, [x0, #3968]
    80e8:	add	x1, x1, #0xd8
    80ec:	ldr	x0, [x0]
    80f0:	bl	4b90 <PyErr_Format@plt>
    80f4:	mov	x0, x20
    80f8:	ldp	x19, x20, [sp, #16]
    80fc:	ldp	x29, x30, [sp], #80
    8100:	ret
    8104:	ldr	w1, [sp, #64]
    8108:	cbnz	w1, 8190 <PyNumber_FloorDivide@plt+0x3560>
    810c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    8110:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    8114:	ldr	x21, [x0, #4056]
    8118:	ldr	x0, [x21]
    811c:	add	x0, x0, #0x1
    8120:	str	x0, [x21]
    8124:	b	8078 <PyNumber_FloorDivide@plt+0x3448>
    8128:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    812c:	mov	x20, #0x0                   	// #0
    8130:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8134:	add	x1, x1, #0xa8
    8138:	ldr	x0, [x0, #3976]
    813c:	ldr	x0, [x0]
    8140:	bl	48a0 <PyErr_SetString@plt>
    8144:	mov	x0, x20
    8148:	ldp	x19, x20, [sp, #16]
    814c:	ldp	x29, x30, [sp], #80
    8150:	ret
    8154:	mov	x0, x21
    8158:	bl	4830 <_Py_Dealloc@plt>
    815c:	mov	x0, x20
    8160:	ldp	x19, x20, [sp, #16]
    8164:	ldp	x21, x22, [sp, #32]
    8168:	ldp	x29, x30, [sp], #80
    816c:	ret
    8170:	mov	x6, x20
    8174:	mov	w3, w5
    8178:	mov	w2, w4
    817c:	mov	w5, #0x0                   	// #0
    8180:	mov	x4, x21
    8184:	bl	7de8 <PyNumber_FloorDivide@plt+0x31b8>
    8188:	mov	x20, x0
    818c:	b	80b0 <PyNumber_FloorDivide@plt+0x3480>
    8190:	ldr	w2, [sp, #68]
    8194:	mov	w3, w0
    8198:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    819c:	mov	w0, #0x0                   	// #0
    81a0:	add	x4, x19, #0x2a8
    81a4:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
    81a8:	mov	x22, x0
    81ac:	cbz	x0, 81d0 <PyNumber_FloorDivide@plt+0x35a0>
    81b0:	mov	x1, #0x0                   	// #0
    81b4:	bl	67c8 <PyNumber_FloorDivide@plt+0x1b98>
    81b8:	ldr	x1, [x22]
    81bc:	mov	x21, x0
    81c0:	sub	x0, x1, #0x1
    81c4:	str	x0, [x22]
    81c8:	cbz	x0, 81dc <PyNumber_FloorDivide@plt+0x35ac>
    81cc:	cbnz	x21, 8078 <PyNumber_FloorDivide@plt+0x3448>
    81d0:	mov	x20, #0x0                   	// #0
    81d4:	ldp	x21, x22, [sp, #32]
    81d8:	b	80c4 <PyNumber_FloorDivide@plt+0x3494>
    81dc:	mov	x0, x22
    81e0:	bl	4830 <_Py_Dealloc@plt>
    81e4:	cbnz	x21, 8078 <PyNumber_FloorDivide@plt+0x3448>
    81e8:	b	81d0 <PyNumber_FloorDivide@plt+0x35a0>
    81ec:	nop
    81f0:	sub	sp, sp, #0x50
    81f4:	mov	x4, x2
    81f8:	stp	x29, x30, [sp, #16]
    81fc:	add	x29, sp, #0x10
    8200:	stp	x23, x24, [sp, #64]
    8204:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
    8208:	stp	x19, x20, [sp, #32]
    820c:	ldr	x20, [x23, #4024]
    8210:	stp	x21, x22, [sp, #48]
    8214:	mov	x22, x0
    8218:	cmp	x2, x20
    821c:	b.eq	83a4 <PyNumber_FloorDivide@plt+0x3774>  // b.none
    8220:	mov	x19, x1
    8224:	mov	x2, x3
    8228:	mov	x0, x4
    822c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    8230:	add	x1, x1, #0xa38
    8234:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    8238:	mov	x21, x0
    823c:	cbz	x0, 843c <PyNumber_FloorDivide@plt+0x380c>
    8240:	cmp	x0, x20
    8244:	b.eq	8444 <PyNumber_FloorDivide@plt+0x3814>  // b.none
    8248:	ldp	w0, w20, [x0, #24]
    824c:	mov	w23, #0x2b                  	// #43
    8250:	ldr	w24, [x21, #32]
    8254:	tbnz	w0, #31, 83e4 <PyNumber_FloorDivide@plt+0x37b4>
    8258:	ldr	x0, [x21]
    825c:	sub	x0, x0, #0x1
    8260:	str	x0, [x21]
    8264:	cbz	x0, 83d8 <PyNumber_FloorDivide@plt+0x37a8>
    8268:	mov	w6, #0x8889                	// #34953
    826c:	movk	w6, #0x8888, lsl #16
    8270:	smull	x6, w20, w6
    8274:	lsr	x6, x6, #32
    8278:	add	w6, w20, w6
    827c:	asr	w6, w6, #5
    8280:	sub	w6, w6, w20, asr #31
    8284:	lsl	w1, w6, #4
    8288:	sub	w1, w1, w6
    828c:	subs	w20, w20, w1, lsl #2
    8290:	b.mi	8354 <PyNumber_FloorDivide@plt+0x3724>  // b.first
    8294:	mov	w4, #0x8889                	// #34953
    8298:	movk	w4, #0x8888, lsl #16
    829c:	smull	x4, w6, w4
    82a0:	lsr	x4, x4, #32
    82a4:	add	w4, w6, w4
    82a8:	asr	w4, w4, #5
    82ac:	sub	w4, w4, w6, asr #31
    82b0:	lsl	w0, w4, #4
    82b4:	sub	w0, w0, w4
    82b8:	subs	w6, w6, w0, lsl #2
    82bc:	b.mi	8300 <PyNumber_FloorDivide@plt+0x36d0>  // b.first
    82c0:	cbnz	w24, 830c <PyNumber_FloorDivide@plt+0x36dc>
    82c4:	cbnz	w20, 8360 <PyNumber_FloorDivide@plt+0x3730>
    82c8:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    82cc:	mov	x5, x19
    82d0:	mov	w3, w23
    82d4:	mov	x0, x22
    82d8:	add	x2, x2, #0x128
    82dc:	mov	x1, #0x64                  	// #100
    82e0:	bl	48e0 <PyOS_snprintf@plt>
    82e4:	mov	w0, w20
    82e8:	ldp	x29, x30, [sp, #16]
    82ec:	ldp	x19, x20, [sp, #32]
    82f0:	ldp	x21, x22, [sp, #48]
    82f4:	ldp	x23, x24, [sp, #64]
    82f8:	add	sp, sp, #0x50
    82fc:	ret
    8300:	sub	w4, w4, #0x1
    8304:	add	w6, w6, #0x3c
    8308:	cbz	w24, 82c4 <PyNumber_FloorDivide@plt+0x3694>
    830c:	str	w20, [sp]
    8310:	mov	w3, w23
    8314:	str	w24, [sp, #8]
    8318:	mov	x7, x19
    831c:	mov	x5, x19
    8320:	mov	x0, x22
    8324:	mov	x1, #0x64                  	// #100
    8328:	mov	w20, #0x0                   	// #0
    832c:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    8330:	add	x2, x2, #0xf8
    8334:	bl	48e0 <PyOS_snprintf@plt>
    8338:	mov	w0, w20
    833c:	ldp	x29, x30, [sp, #16]
    8340:	ldp	x19, x20, [sp, #32]
    8344:	ldp	x21, x22, [sp, #48]
    8348:	ldp	x23, x24, [sp, #64]
    834c:	add	sp, sp, #0x50
    8350:	ret
    8354:	sub	w6, w6, #0x1
    8358:	add	w20, w20, #0x3c
    835c:	b	8294 <PyNumber_FloorDivide@plt+0x3664>
    8360:	str	w20, [sp]
    8364:	mov	w3, w23
    8368:	mov	x7, x19
    836c:	mov	x5, x19
    8370:	mov	x0, x22
    8374:	mov	x1, #0x64                  	// #100
    8378:	mov	w20, #0x0                   	// #0
    837c:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    8380:	add	x2, x2, #0x110
    8384:	bl	48e0 <PyOS_snprintf@plt>
    8388:	mov	w0, w20
    838c:	ldp	x29, x30, [sp, #16]
    8390:	ldp	x19, x20, [sp, #32]
    8394:	ldp	x21, x22, [sp, #48]
    8398:	ldp	x23, x24, [sp, #64]
    839c:	add	sp, sp, #0x50
    83a0:	ret
    83a4:	ldr	x1, [x2]
    83a8:	ldr	x0, [x23, #4024]
    83ac:	str	x1, [x0]
    83b0:	cbz	x1, 8434 <PyNumber_FloorDivide@plt+0x3804>
    83b4:	strb	wzr, [x22]
    83b8:	mov	w20, #0x0                   	// #0
    83bc:	mov	w0, w20
    83c0:	ldp	x29, x30, [sp, #16]
    83c4:	ldp	x19, x20, [sp, #32]
    83c8:	ldp	x21, x22, [sp, #48]
    83cc:	ldp	x23, x24, [sp, #64]
    83d0:	add	sp, sp, #0x50
    83d4:	ret
    83d8:	mov	x0, x21
    83dc:	bl	4830 <_Py_Dealloc@plt>
    83e0:	b	8268 <PyNumber_FloorDivide@plt+0x3638>
    83e4:	neg	w1, w20
    83e8:	neg	w2, w24
    83ec:	neg	w0, w0
    83f0:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
    83f4:	mov	w3, #0x1                   	// #1
    83f8:	add	x4, x4, #0x2a8
    83fc:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
    8400:	mov	x23, x0
    8404:	ldr	x1, [x21]
    8408:	sub	x0, x1, #0x1
    840c:	str	x0, [x21]
    8410:	cbz	x0, 8428 <PyNumber_FloorDivide@plt+0x37f8>
    8414:	cbz	x23, 843c <PyNumber_FloorDivide@plt+0x380c>
    8418:	ldp	w20, w24, [x23, #28]
    841c:	mov	x21, x23
    8420:	mov	w23, #0x2d                  	// #45
    8424:	b	8258 <PyNumber_FloorDivide@plt+0x3628>
    8428:	mov	x0, x21
    842c:	bl	4830 <_Py_Dealloc@plt>
    8430:	b	8414 <PyNumber_FloorDivide@plt+0x37e4>
    8434:	bl	4830 <_Py_Dealloc@plt>
    8438:	b	83b4 <PyNumber_FloorDivide@plt+0x3784>
    843c:	mov	w20, #0xffffffff            	// #-1
    8440:	b	82e4 <PyNumber_FloorDivide@plt+0x36b4>
    8444:	ldr	x1, [x0]
    8448:	sub	x1, x1, #0x1
    844c:	b	83a8 <PyNumber_FloorDivide@plt+0x3778>
    8450:	sub	sp, sp, #0xc0
    8454:	mov	w6, #0x54                  	// #84
    8458:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    845c:	add	x3, x3, #0xad0
    8460:	add	x3, x3, #0x2b0
    8464:	add	x5, sp, #0x48
    8468:	stp	x29, x30, [sp, #16]
    846c:	add	x29, sp, #0x10
    8470:	stp	x19, x20, [sp, #32]
    8474:	mov	x19, x0
    8478:	mov	x0, x1
    847c:	mov	x1, x2
    8480:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    8484:	ldrb	w4, [x19, #33]
    8488:	add	x2, x2, #0x1a8
    848c:	ldrb	w20, [x19, #32]
    8490:	ldrb	w7, [x19, #34]
    8494:	lsl	w4, w4, #8
    8498:	str	w6, [sp, #68]
    849c:	orr	w20, w4, w20, lsl #16
    84a0:	add	x4, sp, #0x44
    84a4:	orr	w20, w20, w7
    84a8:	stp	xzr, xzr, [sp, #72]
    84ac:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    84b0:	cbz	w0, 8634 <PyNumber_FloorDivide@plt+0x3a04>
    84b4:	str	x21, [sp, #48]
    84b8:	ldr	x21, [sp, #72]
    84bc:	cbz	x21, 8568 <PyNumber_FloorDivide@plt+0x3938>
    84c0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    84c4:	mov	x0, x21
    84c8:	add	x1, x1, #0x1b8
    84cc:	bl	4a20 <strcmp@plt>
    84d0:	cbz	w0, 8568 <PyNumber_FloorDivide@plt+0x3938>
    84d4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    84d8:	mov	x0, x21
    84dc:	add	x1, x1, #0x1c0
    84e0:	bl	4a20 <strcmp@plt>
    84e4:	cbz	w0, 8674 <PyNumber_FloorDivide@plt+0x3a44>
    84e8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    84ec:	mov	x0, x21
    84f0:	add	x1, x1, #0x1c8
    84f4:	bl	4a20 <strcmp@plt>
    84f8:	cbz	w0, 868c <PyNumber_FloorDivide@plt+0x3a5c>
    84fc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8500:	mov	x0, x21
    8504:	add	x1, x1, #0x1d0
    8508:	bl	4a20 <strcmp@plt>
    850c:	cbz	w0, 8694 <PyNumber_FloorDivide@plt+0x3a64>
    8510:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8514:	mov	x0, x21
    8518:	add	x1, x1, #0x1d8
    851c:	bl	4a20 <strcmp@plt>
    8520:	cbz	w0, 8658 <PyNumber_FloorDivide@plt+0x3a28>
    8524:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8528:	mov	x0, x21
    852c:	add	x1, x1, #0x1e8
    8530:	bl	4a20 <strcmp@plt>
    8534:	cbz	w0, 869c <PyNumber_FloorDivide@plt+0x3a6c>
    8538:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    853c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8540:	add	x1, x1, #0x1f8
    8544:	ldr	x0, [x0, #3968]
    8548:	ldr	x0, [x0]
    854c:	bl	4b90 <PyErr_Format@plt>
    8550:	mov	x0, #0x0                   	// #0
    8554:	ldp	x29, x30, [sp, #16]
    8558:	ldp	x19, x20, [sp, #32]
    855c:	ldr	x21, [sp, #48]
    8560:	add	sp, sp, #0xc0
    8564:	ret
    8568:	cmp	w20, #0x0
    856c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8570:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    8574:	add	x1, x1, #0x180
    8578:	add	x0, x0, #0x138
    857c:	csel	x0, x0, x1, eq  // eq = none
    8580:	ldrb	w7, [x19, #31]
    8584:	ldrb	w6, [x19, #30]
    8588:	ldrb	w5, [x19, #29]
    858c:	ldrb	w3, [x19, #28]
    8590:	ldrb	w2, [x19, #27]
    8594:	ldr	w4, [sp, #68]
    8598:	ldurh	w1, [x19, #25]
    859c:	str	w20, [sp]
    85a0:	rev16	w1, w1
    85a4:	and	w1, w1, #0xffff
    85a8:	bl	4720 <PyUnicode_FromFormat@plt>
    85ac:	str	x0, [sp, #80]
    85b0:	cbz	x0, 8630 <PyNumber_FloorDivide@plt+0x3a00>
    85b4:	ldrb	w1, [x19, #24]
    85b8:	cbnz	w1, 85d0 <PyNumber_FloorDivide@plt+0x39a0>
    85bc:	ldr	x21, [sp, #48]
    85c0:	ldp	x29, x30, [sp, #16]
    85c4:	ldp	x19, x20, [sp, #32]
    85c8:	add	sp, sp, #0xc0
    85cc:	ret
    85d0:	ldr	x2, [x19, #40]
    85d4:	add	x20, sp, #0x58
    85d8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    85dc:	mov	x0, x20
    85e0:	mov	x3, x19
    85e4:	add	x1, x1, #0x210
    85e8:	bl	81f0 <PyNumber_FloorDivide@plt+0x35c0>
    85ec:	tbnz	w0, #31, 861c <PyNumber_FloorDivide@plt+0x39ec>
    85f0:	mov	x0, x20
    85f4:	bl	4b00 <PyUnicode_FromString@plt>
    85f8:	mov	x1, x0
    85fc:	add	x0, sp, #0x50
    8600:	bl	4bd0 <PyUnicode_AppendAndDel@plt>
    8604:	ldp	x29, x30, [sp, #16]
    8608:	ldp	x19, x20, [sp, #32]
    860c:	ldr	x21, [sp, #48]
    8610:	ldr	x0, [sp, #80]
    8614:	add	sp, sp, #0xc0
    8618:	ret
    861c:	ldr	x0, [sp, #80]
    8620:	ldr	x1, [x0]
    8624:	sub	x1, x1, #0x1
    8628:	str	x1, [x0]
    862c:	cbz	x1, 8648 <PyNumber_FloorDivide@plt+0x3a18>
    8630:	ldr	x21, [sp, #48]
    8634:	mov	x0, #0x0                   	// #0
    8638:	ldp	x29, x30, [sp, #16]
    863c:	ldp	x19, x20, [sp, #32]
    8640:	add	sp, sp, #0xc0
    8644:	ret
    8648:	bl	4830 <_Py_Dealloc@plt>
    864c:	mov	x0, #0x0                   	// #0
    8650:	ldr	x21, [sp, #48]
    8654:	b	85c0 <PyNumber_FloorDivide@plt+0x3990>
    8658:	mov	w1, #0x4dd3                	// #19923
    865c:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    8660:	movk	w1, #0x1062, lsl #16
    8664:	add	x0, x0, #0x158
    8668:	umull	x20, w20, w1
    866c:	lsr	x20, x20, #38
    8670:	b	8580 <PyNumber_FloorDivide@plt+0x3950>
    8674:	mov	x0, #0x0                   	// #0
    8678:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    867c:	add	x1, x1, #0xc10
    8680:	add	x0, x1, x0, lsl #4
    8684:	ldr	x0, [x0, #8]
    8688:	b	8580 <PyNumber_FloorDivide@plt+0x3950>
    868c:	mov	x0, #0x1                   	// #1
    8690:	b	8678 <PyNumber_FloorDivide@plt+0x3a48>
    8694:	mov	x0, #0x2                   	// #2
    8698:	b	8678 <PyNumber_FloorDivide@plt+0x3a48>
    869c:	mov	x0, #0x4                   	// #4
    86a0:	b	8678 <PyNumber_FloorDivide@plt+0x3a48>
    86a4:	nop
    86a8:	stp	x29, x30, [sp, #-176]!
    86ac:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    86b0:	add	x3, x3, #0xad0
    86b4:	mov	x29, sp
    86b8:	stp	x19, x20, [sp, #16]
    86bc:	mov	x19, x0
    86c0:	add	x3, x3, #0x2d0
    86c4:	mov	x0, x1
    86c8:	add	x4, sp, #0x38
    86cc:	ldrb	w20, [x19, #29]
    86d0:	mov	x1, x2
    86d4:	ldrb	w5, [x19, #28]
    86d8:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    86dc:	ldrb	w6, [x19, #30]
    86e0:	add	x2, x2, #0x218
    86e4:	lsl	w20, w20, #8
    86e8:	str	xzr, [sp, #56]
    86ec:	orr	w5, w20, w5, lsl #16
    86f0:	orr	w20, w5, w6
    86f4:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    86f8:	cbz	w0, 8864 <PyNumber_FloorDivide@plt+0x3c34>
    86fc:	str	x21, [sp, #32]
    8700:	ldr	x21, [sp, #56]
    8704:	cbz	x21, 87ac <PyNumber_FloorDivide@plt+0x3b7c>
    8708:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    870c:	mov	x0, x21
    8710:	add	x1, x1, #0x1b8
    8714:	bl	4a20 <strcmp@plt>
    8718:	cbz	w0, 87ac <PyNumber_FloorDivide@plt+0x3b7c>
    871c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8720:	mov	x0, x21
    8724:	add	x1, x1, #0x1c0
    8728:	bl	4a20 <strcmp@plt>
    872c:	cbz	w0, 88a0 <PyNumber_FloorDivide@plt+0x3c70>
    8730:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8734:	mov	x0, x21
    8738:	add	x1, x1, #0x1c8
    873c:	bl	4a20 <strcmp@plt>
    8740:	cbz	w0, 88b8 <PyNumber_FloorDivide@plt+0x3c88>
    8744:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8748:	mov	x0, x21
    874c:	add	x1, x1, #0x1d0
    8750:	bl	4a20 <strcmp@plt>
    8754:	cbz	w0, 88c0 <PyNumber_FloorDivide@plt+0x3c90>
    8758:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    875c:	mov	x0, x21
    8760:	add	x1, x1, #0x1d8
    8764:	bl	4a20 <strcmp@plt>
    8768:	cbz	w0, 8884 <PyNumber_FloorDivide@plt+0x3c54>
    876c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8770:	mov	x0, x21
    8774:	add	x1, x1, #0x1e8
    8778:	bl	4a20 <strcmp@plt>
    877c:	cbz	w0, 88c8 <PyNumber_FloorDivide@plt+0x3c98>
    8780:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    8784:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8788:	add	x1, x1, #0x1f8
    878c:	ldr	x0, [x0, #3968]
    8790:	ldr	x0, [x0]
    8794:	bl	4b90 <PyErr_Format@plt>
    8798:	mov	x0, #0x0                   	// #0
    879c:	ldp	x19, x20, [sp, #16]
    87a0:	ldr	x21, [sp, #32]
    87a4:	ldp	x29, x30, [sp], #176
    87a8:	ret
    87ac:	cmp	w20, #0x0
    87b0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    87b4:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    87b8:	add	x1, x1, #0x190
    87bc:	add	x0, x0, #0x148
    87c0:	csel	x0, x0, x1, eq  // eq = none
    87c4:	ldrb	w3, [x19, #27]
    87c8:	mov	w4, w20
    87cc:	ldrb	w2, [x19, #26]
    87d0:	ldrb	w1, [x19, #25]
    87d4:	bl	4720 <PyUnicode_FromFormat@plt>
    87d8:	str	x0, [sp, #64]
    87dc:	cbz	x0, 8860 <PyNumber_FloorDivide@plt+0x3c30>
    87e0:	ldrb	w1, [x19, #24]
    87e4:	cbz	w1, 883c <PyNumber_FloorDivide@plt+0x3c0c>
    87e8:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    87ec:	ldr	x2, [x19, #32]
    87f0:	ldr	x3, [x3, #4024]
    87f4:	cmp	x2, x3
    87f8:	b.eq	883c <PyNumber_FloorDivide@plt+0x3c0c>  // b.none
    87fc:	add	x19, sp, #0x48
    8800:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8804:	mov	x0, x19
    8808:	add	x1, x1, #0x210
    880c:	bl	81f0 <PyNumber_FloorDivide@plt+0x35c0>
    8810:	tbnz	w0, #31, 884c <PyNumber_FloorDivide@plt+0x3c1c>
    8814:	mov	x0, x19
    8818:	bl	4b00 <PyUnicode_FromString@plt>
    881c:	mov	x1, x0
    8820:	add	x0, sp, #0x40
    8824:	bl	4bd0 <PyUnicode_AppendAndDel@plt>
    8828:	ldr	x21, [sp, #32]
    882c:	ldr	x0, [sp, #64]
    8830:	ldp	x19, x20, [sp, #16]
    8834:	ldp	x29, x30, [sp], #176
    8838:	ret
    883c:	ldp	x19, x20, [sp, #16]
    8840:	ldr	x21, [sp, #32]
    8844:	ldp	x29, x30, [sp], #176
    8848:	ret
    884c:	ldr	x0, [sp, #64]
    8850:	ldr	x1, [x0]
    8854:	sub	x1, x1, #0x1
    8858:	str	x1, [x0]
    885c:	cbz	x1, 8874 <PyNumber_FloorDivide@plt+0x3c44>
    8860:	ldr	x21, [sp, #32]
    8864:	mov	x0, #0x0                   	// #0
    8868:	ldp	x19, x20, [sp, #16]
    886c:	ldp	x29, x30, [sp], #176
    8870:	ret
    8874:	bl	4830 <_Py_Dealloc@plt>
    8878:	mov	x0, #0x0                   	// #0
    887c:	ldr	x21, [sp, #32]
    8880:	b	8830 <PyNumber_FloorDivide@plt+0x3c00>
    8884:	mov	w1, #0x4dd3                	// #19923
    8888:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    888c:	movk	w1, #0x1062, lsl #16
    8890:	add	x0, x0, #0x168
    8894:	umull	x20, w20, w1
    8898:	lsr	x20, x20, #38
    889c:	b	87c4 <PyNumber_FloorDivide@plt+0x3b94>
    88a0:	mov	x0, #0x0                   	// #0
    88a4:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    88a8:	add	x1, x1, #0xc10
    88ac:	add	x0, x1, x0, lsl #4
    88b0:	ldr	x0, [x0, #88]
    88b4:	b	87c4 <PyNumber_FloorDivide@plt+0x3b94>
    88b8:	mov	x0, #0x1                   	// #1
    88bc:	b	88a4 <PyNumber_FloorDivide@plt+0x3c74>
    88c0:	mov	x0, #0x2                   	// #2
    88c4:	b	88a4 <PyNumber_FloorDivide@plt+0x3c74>
    88c8:	mov	x0, #0x4                   	// #4
    88cc:	b	88a4 <PyNumber_FloorDivide@plt+0x3c74>
    88d0:	stp	x29, x30, [sp, #-288]!
    88d4:	mov	x29, sp
    88d8:	stp	x19, x20, [sp, #16]
    88dc:	stp	x23, x24, [sp, #48]
    88e0:	mov	x24, x0
    88e4:	mov	x0, x1
    88e8:	add	x1, sp, #0xa0
    88ec:	stp	x3, x2, [sp, #104]
    88f0:	str	xzr, [sp, #168]
    88f4:	bl	4b70 <PyUnicode_AsUTF8AndSize@plt>
    88f8:	cbz	x0, 8a94 <PyNumber_FloorDivide@plt+0x3e64>
    88fc:	ldr	x1, [sp, #160]
    8900:	mov	x19, x0
    8904:	mov	x0, #0x7ffffffe            	// #2147483646
    8908:	cmp	x1, x0
    890c:	b.gt	8a5c <PyNumber_FloorDivide@plt+0x3e2c>
    8910:	stp	x25, x26, [sp, #64]
    8914:	add	x25, x1, #0x1
    8918:	mov	x1, x25
    891c:	mov	x0, #0x0                   	// #0
    8920:	bl	4820 <PyBytes_FromStringAndSize@plt>
    8924:	str	x0, [sp, #168]
    8928:	cbz	x0, 8a90 <PyNumber_FloorDivide@plt+0x3e60>
    892c:	mov	x23, x19
    8930:	stp	x27, x28, [sp, #80]
    8934:	bl	4b40 <PyBytes_AsString@plt>
    8938:	mov	x20, x0
    893c:	ldrb	w0, [x23], #1
    8940:	cbz	w0, 8d6c <PyNumber_FloorDivide@plt+0x413c>
    8944:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    8948:	add	x1, x1, #0x2a8
    894c:	stp	x21, x22, [sp, #32]
    8950:	add	x22, sp, #0xa8
    8954:	mov	x21, #0x0                   	// #0
    8958:	str	x1, [sp, #136]
    895c:	add	x1, x1, #0x4e0
    8960:	mov	x28, #0x0                   	// #0
    8964:	mov	x27, #0x0                   	// #0
    8968:	mov	x26, #0x0                   	// #0
    896c:	str	x1, [sp, #120]
    8970:	add	x1, sp, #0xb8
    8974:	str	x1, [sp, #128]
    8978:	cmp	w0, #0x25
    897c:	b.eq	8a28 <PyNumber_FloorDivide@plt+0x3df8>  // b.none
    8980:	mov	x0, #0x1                   	// #1
    8984:	mov	x2, x0
    8988:	str	x0, [sp, #176]
    898c:	add	x0, x21, x2
    8990:	cmp	x25, x0
    8994:	b.cs	8ac8 <PyNumber_FloorDivide@plt+0x3e98>  // b.hs, b.nlast
    8998:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    899c:	b	89cc <PyNumber_FloorDivide@plt+0x3d9c>
    89a0:	lsl	x25, x25, #1
    89a4:	mov	x0, x22
    89a8:	mov	x1, x25
    89ac:	bl	4790 <_PyBytes_Resize@plt>
    89b0:	tbnz	w0, #31, 8c80 <PyNumber_FloorDivide@plt+0x4050>
    89b4:	ldr	x0, [sp, #168]
    89b8:	bl	4b40 <PyBytes_AsString@plt>
    89bc:	ldr	x2, [sp, #176]
    89c0:	add	x1, x2, x21
    89c4:	cmp	x1, x25
    89c8:	b.ls	8ac4 <PyNumber_FloorDivide@plt+0x3e94>  // b.plast
    89cc:	cmp	x25, x20
    89d0:	b.ls	89a0 <PyNumber_FloorDivide@plt+0x3d70>  // b.plast
    89d4:	bl	4840 <PyErr_NoMemory@plt>
    89d8:	mov	x19, #0x0                   	// #0
    89dc:	ldp	x21, x22, [sp, #32]
    89e0:	cbz	x28, 89f4 <PyNumber_FloorDivide@plt+0x3dc4>
    89e4:	ldr	x0, [x28]
    89e8:	sub	x0, x0, #0x1
    89ec:	str	x0, [x28]
    89f0:	cbz	x0, 8bf8 <PyNumber_FloorDivide@plt+0x3fc8>
    89f4:	cbz	x26, 8a08 <PyNumber_FloorDivide@plt+0x3dd8>
    89f8:	ldr	x0, [x26]
    89fc:	sub	x0, x0, #0x1
    8a00:	str	x0, [x26]
    8a04:	cbz	x0, 8b84 <PyNumber_FloorDivide@plt+0x3f54>
    8a08:	cbz	x27, 8a1c <PyNumber_FloorDivide@plt+0x3dec>
    8a0c:	ldr	x0, [x27]
    8a10:	sub	x0, x0, #0x1
    8a14:	str	x0, [x27]
    8a18:	cbz	x0, 8c20 <PyNumber_FloorDivide@plt+0x3ff0>
    8a1c:	ldp	x25, x26, [sp, #64]
    8a20:	ldp	x27, x28, [sp, #80]
    8a24:	b	8a64 <PyNumber_FloorDivide@plt+0x3e34>
    8a28:	ldrb	w0, [x19, #1]
    8a2c:	cbz	w0, 8980 <PyNumber_FloorDivide@plt+0x3d50>
    8a30:	cmp	w0, #0x7a
    8a34:	add	x23, x19, #0x2
    8a38:	b.eq	8c04 <PyNumber_FloorDivide@plt+0x3fd4>  // b.none
    8a3c:	cmp	w0, #0x5a
    8a40:	b.eq	8c34 <PyNumber_FloorDivide@plt+0x4004>  // b.none
    8a44:	cmp	w0, #0x66
    8a48:	b.eq	8cc0 <PyNumber_FloorDivide@plt+0x4090>  // b.none
    8a4c:	mov	x0, #0x2                   	// #2
    8a50:	mov	x2, x0
    8a54:	str	x0, [sp, #176]
    8a58:	b	898c <PyNumber_FloorDivide@plt+0x3d5c>
    8a5c:	mov	x19, #0x0                   	// #0
    8a60:	bl	4840 <PyErr_NoMemory@plt>
    8a64:	ldr	x0, [sp, #168]
    8a68:	cbz	x0, 8a7c <PyNumber_FloorDivide@plt+0x3e4c>
    8a6c:	ldr	x1, [x0]
    8a70:	sub	x1, x1, #0x1
    8a74:	str	x1, [x0]
    8a78:	cbz	x1, 8aac <PyNumber_FloorDivide@plt+0x3e7c>
    8a7c:	mov	x0, x19
    8a80:	ldp	x19, x20, [sp, #16]
    8a84:	ldp	x23, x24, [sp, #48]
    8a88:	ldp	x29, x30, [sp], #288
    8a8c:	ret
    8a90:	ldp	x25, x26, [sp, #64]
    8a94:	mov	x19, #0x0                   	// #0
    8a98:	mov	x0, x19
    8a9c:	ldp	x19, x20, [sp, #16]
    8aa0:	ldp	x23, x24, [sp, #48]
    8aa4:	ldp	x29, x30, [sp], #288
    8aa8:	ret
    8aac:	bl	4830 <_Py_Dealloc@plt>
    8ab0:	mov	x0, x19
    8ab4:	ldp	x19, x20, [sp, #16]
    8ab8:	ldp	x23, x24, [sp, #48]
    8abc:	ldp	x29, x30, [sp], #288
    8ac0:	ret
    8ac4:	add	x20, x0, x21
    8ac8:	mov	x1, x19
    8acc:	mov	x0, x20
    8ad0:	bl	4710 <memcpy@plt>
    8ad4:	mov	x19, x23
    8ad8:	ldr	x0, [sp, #176]
    8adc:	add	x20, x20, x0
    8ae0:	add	x21, x21, x0
    8ae4:	ldrb	w0, [x19]
    8ae8:	add	x23, x23, #0x1
    8aec:	cbnz	w0, 8978 <PyNumber_FloorDivide@plt+0x3d48>
    8af0:	mov	x1, x21
    8af4:	add	x0, sp, #0xa8
    8af8:	mov	x19, #0x0                   	// #0
    8afc:	bl	4790 <_PyBytes_Resize@plt>
    8b00:	tbnz	w0, #31, 8d64 <PyNumber_FloorDivide@plt+0x4134>
    8b04:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    8b08:	add	x0, x0, #0x580
    8b0c:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    8b10:	mov	x20, x0
    8b14:	ldp	x21, x22, [sp, #32]
    8b18:	cbz	x0, 89e0 <PyNumber_FloorDivide@plt+0x3db0>
    8b1c:	ldr	x0, [sp, #168]
    8b20:	add	x0, x0, #0x20
    8b24:	bl	4b00 <PyUnicode_FromString@plt>
    8b28:	mov	x19, x0
    8b2c:	cbz	x0, 8b68 <PyNumber_FloorDivide@plt+0x3f38>
    8b30:	ldr	x3, [sp, #112]
    8b34:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    8b38:	add	x1, x1, #0xad0
    8b3c:	mov	x2, x0
    8b40:	add	x1, x1, #0x18
    8b44:	mov	x0, x20
    8b48:	mov	x4, #0x0                   	// #0
    8b4c:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    8b50:	ldr	x2, [x19]
    8b54:	mov	x1, x0
    8b58:	sub	x0, x2, #0x1
    8b5c:	str	x0, [x19]
    8b60:	cbz	x0, 8fd8 <PyNumber_FloorDivide@plt+0x43a8>
    8b64:	mov	x19, x1
    8b68:	ldr	x0, [x20]
    8b6c:	sub	x0, x0, #0x1
    8b70:	str	x0, [x20]
    8b74:	cbnz	x0, 89e0 <PyNumber_FloorDivide@plt+0x3db0>
    8b78:	mov	x0, x20
    8b7c:	bl	4830 <_Py_Dealloc@plt>
    8b80:	b	89e0 <PyNumber_FloorDivide@plt+0x3db0>
    8b84:	mov	x0, x26
    8b88:	bl	4830 <_Py_Dealloc@plt>
    8b8c:	b	8a08 <PyNumber_FloorDivide@plt+0x3dd8>
    8b90:	ldr	x1, [sp, #136]
    8b94:	ldr	x0, [x24, #8]
    8b98:	add	x1, x1, #0x1a0
    8b9c:	cmp	x0, x1
    8ba0:	b.eq	8cd4 <PyNumber_FloorDivide@plt+0x40a4>  // b.none
    8ba4:	bl	4b60 <PyType_IsSubtype@plt>
    8ba8:	cbz	w0, 8f04 <PyNumber_FloorDivide@plt+0x42d4>
    8bac:	ldrb	w0, [x24, #24]
    8bb0:	cbnz	w0, 8cdc <PyNumber_FloorDivide@plt+0x40ac>
    8bb4:	ldr	x0, [x24, #8]
    8bb8:	ldr	x1, [sp, #120]
    8bbc:	cmp	x0, x1
    8bc0:	b.ne	8f14 <PyNumber_FloorDivide@plt+0x42e4>  // b.any
    8bc4:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    8bc8:	mov	x1, #0x0                   	// #0
    8bcc:	add	x0, x0, #0xda0
    8bd0:	bl	4820 <PyBytes_FromStringAndSize@plt>
    8bd4:	cbnz	x0, 8d5c <PyNumber_FloorDivide@plt+0x412c>
    8bd8:	cbz	x28, 9080 <PyNumber_FloorDivide@plt+0x4450>
    8bdc:	ldr	x0, [x28]
    8be0:	sub	x0, x0, #0x1
    8be4:	str	x0, [x28]
    8be8:	cbnz	x0, 9080 <PyNumber_FloorDivide@plt+0x4450>
    8bec:	ldp	x21, x22, [sp, #32]
    8bf0:	mov	x19, #0x0                   	// #0
    8bf4:	nop
    8bf8:	mov	x0, x28
    8bfc:	bl	4830 <_Py_Dealloc@plt>
    8c00:	b	89f4 <PyNumber_FloorDivide@plt+0x3dc4>
    8c04:	cbz	x26, 8b90 <PyNumber_FloorDivide@plt+0x3f60>
    8c08:	add	x19, x26, #0x20
    8c0c:	ldr	x2, [x26, #16]
    8c10:	str	x2, [sp, #176]
    8c14:	cbnz	x2, 898c <PyNumber_FloorDivide@plt+0x3d5c>
    8c18:	mov	x19, x23
    8c1c:	b	8ae4 <PyNumber_FloorDivide@plt+0x3eb4>
    8c20:	mov	x0, x27
    8c24:	bl	4830 <_Py_Dealloc@plt>
    8c28:	ldp	x25, x26, [sp, #64]
    8c2c:	ldp	x27, x28, [sp, #80]
    8c30:	b	8a64 <PyNumber_FloorDivide@plt+0x3e34>
    8c34:	cbnz	x27, 8ca4 <PyNumber_FloorDivide@plt+0x4074>
    8c38:	ldr	x1, [sp, #136]
    8c3c:	ldr	x0, [x24, #8]
    8c40:	add	x1, x1, #0x1a0
    8c44:	cmp	x0, x1
    8c48:	b.eq	8da4 <PyNumber_FloorDivide@plt+0x4174>  // b.none
    8c4c:	bl	4b60 <PyType_IsSubtype@plt>
    8c50:	cbz	w0, 8e90 <PyNumber_FloorDivide@plt+0x4260>
    8c54:	ldrb	w0, [x24, #24]
    8c58:	cbnz	w0, 8dac <PyNumber_FloorDivide@plt+0x417c>
    8c5c:	ldr	x0, [x24, #8]
    8c60:	ldr	x1, [sp, #120]
    8c64:	cmp	x0, x1
    8c68:	b.ne	8ea0 <PyNumber_FloorDivide@plt+0x4270>  // b.any
    8c6c:	mov	x1, #0x0                   	// #0
    8c70:	mov	x0, #0x0                   	// #0
    8c74:	bl	4bb0 <PyUnicode_FromStringAndSize@plt>
    8c78:	mov	x27, x0
    8c7c:	cbnz	x0, 8ca4 <PyNumber_FloorDivide@plt+0x4074>
    8c80:	mov	x19, #0x0                   	// #0
    8c84:	ldp	x21, x22, [sp, #32]
    8c88:	b	89e0 <PyNumber_FloorDivide@plt+0x3db0>
    8c8c:	ldr	x1, [x0]
    8c90:	mov	x27, x19
    8c94:	sub	x1, x1, #0x1
    8c98:	str	x1, [x0]
    8c9c:	cbnz	x1, 8ca4 <PyNumber_FloorDivide@plt+0x4074>
    8ca0:	bl	4830 <_Py_Dealloc@plt>
    8ca4:	add	x1, sp, #0xb0
    8ca8:	mov	x0, x27
    8cac:	bl	4b70 <PyUnicode_AsUTF8AndSize@plt>
    8cb0:	mov	x19, x0
    8cb4:	cbz	x0, 8d64 <PyNumber_FloorDivide@plt+0x4134>
    8cb8:	ldr	x2, [sp, #176]
    8cbc:	b	8c14 <PyNumber_FloorDivide@plt+0x3fe4>
    8cc0:	cbz	x28, 8f30 <PyNumber_FloorDivide@plt+0x4300>
    8cc4:	ldr	x2, [x28, #16]
    8cc8:	add	x19, x28, #0x20
    8ccc:	str	x2, [sp, #176]
    8cd0:	b	8c14 <PyNumber_FloorDivide@plt+0x3fe4>
    8cd4:	ldrb	w1, [x24, #24]
    8cd8:	cbz	w1, 8f14 <PyNumber_FloorDivide@plt+0x42e4>
    8cdc:	ldr	x2, [x24, #40]
    8ce0:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    8ce4:	add	x3, x0, #0xda0
    8ce8:	mov	x1, #0x0                   	// #0
    8cec:	mov	x0, x3
    8cf0:	stp	x3, x2, [sp, #144]
    8cf4:	bl	4820 <PyBytes_FromStringAndSize@plt>
    8cf8:	mov	x19, x0
    8cfc:	cbz	x0, 8bd8 <PyNumber_FloorDivide@plt+0x3fa8>
    8d00:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    8d04:	ldr	x2, [sp, #152]
    8d08:	ldr	x0, [x0, #4024]
    8d0c:	cmp	x2, x0
    8d10:	b.eq	8fb8 <PyNumber_FloorDivide@plt+0x4388>  // b.none
    8d14:	cbz	x2, 8fb8 <PyNumber_FloorDivide@plt+0x4388>
    8d18:	ldr	x3, [sp, #144]
    8d1c:	ldr	x0, [sp, #128]
    8d20:	mov	x1, x3
    8d24:	ldr	x3, [sp, #104]
    8d28:	bl	81f0 <PyNumber_FloorDivide@plt+0x35c0>
    8d2c:	tbnz	w0, #31, 906c <PyNumber_FloorDivide@plt+0x443c>
    8d30:	ldr	x0, [x19]
    8d34:	sub	x0, x0, #0x1
    8d38:	str	x0, [x19]
    8d3c:	cbz	x0, 8fe8 <PyNumber_FloorDivide@plt+0x43b8>
    8d40:	ldr	x19, [sp, #128]
    8d44:	mov	x0, x19
    8d48:	bl	4750 <strlen@plt>
    8d4c:	mov	x1, x0
    8d50:	mov	x0, x19
    8d54:	bl	4820 <PyBytes_FromStringAndSize@plt>
    8d58:	cbz	x0, 8bd8 <PyNumber_FloorDivide@plt+0x3fa8>
    8d5c:	mov	x26, x0
    8d60:	b	8c08 <PyNumber_FloorDivide@plt+0x3fd8>
    8d64:	ldp	x21, x22, [sp, #32]
    8d68:	b	89e0 <PyNumber_FloorDivide@plt+0x3db0>
    8d6c:	add	x0, sp, #0xa8
    8d70:	mov	x1, #0x0                   	// #0
    8d74:	mov	x19, #0x0                   	// #0
    8d78:	bl	4790 <_PyBytes_Resize@plt>
    8d7c:	tbnz	w0, #31, 8a1c <PyNumber_FloorDivide@plt+0x3dec>
    8d80:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    8d84:	add	x0, x0, #0x580
    8d88:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    8d8c:	mov	x20, x0
    8d90:	cbz	x0, 8a1c <PyNumber_FloorDivide@plt+0x3dec>
    8d94:	mov	x28, #0x0                   	// #0
    8d98:	mov	x27, #0x0                   	// #0
    8d9c:	mov	x26, #0x0                   	// #0
    8da0:	b	8b1c <PyNumber_FloorDivide@plt+0x3eec>
    8da4:	ldrb	w1, [x24, #24]
    8da8:	cbz	w1, 8ea0 <PyNumber_FloorDivide@plt+0x4270>
    8dac:	ldr	x2, [x24, #40]
    8db0:	mov	x1, #0x0                   	// #0
    8db4:	mov	x0, #0x0                   	// #0
    8db8:	str	x2, [sp, #144]
    8dbc:	bl	4bb0 <PyUnicode_FromStringAndSize@plt>
    8dc0:	mov	x19, x0
    8dc4:	cbz	x0, 8ff4 <PyNumber_FloorDivide@plt+0x43c4>
    8dc8:	adrp	x4, 28000 <PyInit__datetime@@Base+0x14f90>
    8dcc:	ldr	x2, [sp, #144]
    8dd0:	ldr	x4, [x4, #4024]
    8dd4:	str	x4, [sp, #144]
    8dd8:	cmp	x2, x4
    8ddc:	b.eq	8e88 <PyNumber_FloorDivide@plt+0x4258>  // b.none
    8de0:	cbz	x2, 8e88 <PyNumber_FloorDivide@plt+0x4258>
    8de4:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    8de8:	add	x1, x0, #0xad0
    8dec:	mov	x0, x2
    8df0:	add	x1, x1, #0x290
    8df4:	ldr	x2, [sp, #104]
    8df8:	mov	x3, #0x0                   	// #0
    8dfc:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    8e00:	mov	x5, x0
    8e04:	cbz	x0, 8ee0 <PyNumber_FloorDivide@plt+0x42b0>
    8e08:	ldr	x4, [sp, #144]
    8e0c:	cmp	x0, x4
    8e10:	b.eq	8c8c <PyNumber_FloorDivide@plt+0x405c>  // b.none
    8e14:	ldr	x2, [x0, #8]
    8e18:	ldr	x0, [x2, #168]
    8e1c:	tbz	w0, #28, 9014 <PyNumber_FloorDivide@plt+0x43e4>
    8e20:	ldr	x0, [x19]
    8e24:	sub	x0, x0, #0x1
    8e28:	str	x0, [x19]
    8e2c:	cbz	x0, 9000 <PyNumber_FloorDivide@plt+0x43d0>
    8e30:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    8e34:	add	x1, x0, #0xad0
    8e38:	add	x1, x1, #0x2e0
    8e3c:	mov	x0, x5
    8e40:	adrp	x4, 14000 <PyInit__datetime@@Base+0xf90>
    8e44:	adrp	x3, 14000 <PyInit__datetime@@Base+0xf90>
    8e48:	add	x4, x4, #0x228
    8e4c:	add	x3, x3, #0x230
    8e50:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    8e54:	add	x2, x2, #0x238
    8e58:	str	x5, [sp, #144]
    8e5c:	bl	4a90 <_PyObject_CallMethodId@plt>
    8e60:	ldr	x5, [sp, #144]
    8e64:	mov	x19, x0
    8e68:	ldr	x1, [x5]
    8e6c:	sub	x0, x1, #0x1
    8e70:	str	x0, [x5]
    8e74:	cbz	x0, 8ebc <PyNumber_FloorDivide@plt+0x428c>
    8e78:	cbz	x19, 8ff4 <PyNumber_FloorDivide@plt+0x43c4>
    8e7c:	ldr	x0, [x19, #8]
    8e80:	ldr	x0, [x0, #168]
    8e84:	tbz	w0, #28, 8ec8 <PyNumber_FloorDivide@plt+0x4298>
    8e88:	mov	x27, x19
    8e8c:	b	8ca4 <PyNumber_FloorDivide@plt+0x4074>
    8e90:	ldr	x0, [x24, #8]
    8e94:	ldr	x1, [sp, #120]
    8e98:	cmp	x0, x1
    8e9c:	b.eq	8eac <PyNumber_FloorDivide@plt+0x427c>  // b.none
    8ea0:	ldr	x1, [sp, #120]
    8ea4:	bl	4b60 <PyType_IsSubtype@plt>
    8ea8:	cbz	w0, 8c6c <PyNumber_FloorDivide@plt+0x403c>
    8eac:	ldrb	w0, [x24, #24]
    8eb0:	cbz	w0, 8c6c <PyNumber_FloorDivide@plt+0x403c>
    8eb4:	ldr	x2, [x24, #32]
    8eb8:	b	8db0 <PyNumber_FloorDivide@plt+0x4180>
    8ebc:	mov	x0, x5
    8ec0:	bl	4830 <_Py_Dealloc@plt>
    8ec4:	b	8e78 <PyNumber_FloorDivide@plt+0x4248>
    8ec8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    8ecc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8ed0:	add	x1, x1, #0x240
    8ed4:	ldr	x0, [x0, #3976]
    8ed8:	ldr	x0, [x0]
    8edc:	bl	48a0 <PyErr_SetString@plt>
    8ee0:	ldr	x0, [x19]
    8ee4:	sub	x0, x0, #0x1
    8ee8:	str	x0, [x19]
    8eec:	cbnz	x0, 8c80 <PyNumber_FloorDivide@plt+0x4050>
    8ef0:	mov	x0, x19
    8ef4:	mov	x19, #0x0                   	// #0
    8ef8:	bl	4830 <_Py_Dealloc@plt>
    8efc:	ldp	x21, x22, [sp, #32]
    8f00:	b	89e0 <PyNumber_FloorDivide@plt+0x3db0>
    8f04:	ldr	x0, [x24, #8]
    8f08:	ldr	x1, [sp, #120]
    8f0c:	cmp	x0, x1
    8f10:	b.eq	8f20 <PyNumber_FloorDivide@plt+0x42f0>  // b.none
    8f14:	ldr	x1, [sp, #120]
    8f18:	bl	4b60 <PyType_IsSubtype@plt>
    8f1c:	cbz	w0, 8bc4 <PyNumber_FloorDivide@plt+0x3f94>
    8f20:	ldrb	w0, [x24, #24]
    8f24:	cbz	w0, 8bc4 <PyNumber_FloorDivide@plt+0x3f94>
    8f28:	ldr	x2, [x24, #32]
    8f2c:	b	8ce0 <PyNumber_FloorDivide@plt+0x40b0>
    8f30:	ldr	x0, [x24, #8]
    8f34:	ldr	x1, [sp, #120]
    8f38:	cmp	x0, x1
    8f3c:	b.eq	8fc0 <PyNumber_FloorDivide@plt+0x4390>  // b.none
    8f40:	bl	4b60 <PyType_IsSubtype@plt>
    8f44:	cbnz	w0, 8fc0 <PyNumber_FloorDivide@plt+0x4390>
    8f48:	ldr	x1, [sp, #136]
    8f4c:	ldr	x0, [x24, #8]
    8f50:	add	x1, x1, #0x1a0
    8f54:	cmp	x0, x1
    8f58:	b.eq	8f64 <PyNumber_FloorDivide@plt+0x4334>  // b.none
    8f5c:	bl	4b60 <PyType_IsSubtype@plt>
    8f60:	cbz	w0, 9054 <PyNumber_FloorDivide@plt+0x4424>
    8f64:	ldrb	w4, [x24, #33]
    8f68:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8f6c:	ldrb	w3, [x24, #32]
    8f70:	add	x1, x1, #0x270
    8f74:	ldrb	w2, [x24, #34]
    8f78:	lsl	w4, w4, #8
    8f7c:	ldr	x0, [sp, #128]
    8f80:	orr	w3, w4, w3, lsl #16
    8f84:	orr	w2, w3, w2
    8f88:	bl	4800 <sprintf@plt>
    8f8c:	ldr	x19, [sp, #128]
    8f90:	mov	x0, x19
    8f94:	bl	4750 <strlen@plt>
    8f98:	mov	x1, x0
    8f9c:	mov	x0, x19
    8fa0:	bl	4820 <PyBytes_FromStringAndSize@plt>
    8fa4:	mov	x28, x0
    8fa8:	cbnz	x0, 8cc4 <PyNumber_FloorDivide@plt+0x4094>
    8fac:	mov	x19, #0x0                   	// #0
    8fb0:	ldp	x21, x22, [sp, #32]
    8fb4:	b	89f4 <PyNumber_FloorDivide@plt+0x3dc4>
    8fb8:	mov	x26, x19
    8fbc:	b	8c08 <PyNumber_FloorDivide@plt+0x3fd8>
    8fc0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    8fc4:	ldrb	w4, [x24, #29]
    8fc8:	ldrb	w3, [x24, #28]
    8fcc:	add	x1, x1, #0x270
    8fd0:	ldrb	w2, [x24, #30]
    8fd4:	b	8f78 <PyNumber_FloorDivide@plt+0x4348>
    8fd8:	mov	x0, x19
    8fdc:	mov	x19, x1
    8fe0:	bl	4830 <_Py_Dealloc@plt>
    8fe4:	b	8b68 <PyNumber_FloorDivide@plt+0x3f38>
    8fe8:	mov	x0, x19
    8fec:	bl	4830 <_Py_Dealloc@plt>
    8ff0:	b	8d40 <PyNumber_FloorDivide@plt+0x4110>
    8ff4:	mov	x27, #0x0                   	// #0
    8ff8:	ldp	x21, x22, [sp, #32]
    8ffc:	b	89e0 <PyNumber_FloorDivide@plt+0x3db0>
    9000:	mov	x0, x19
    9004:	str	x5, [sp, #144]
    9008:	bl	4830 <_Py_Dealloc@plt>
    900c:	ldr	x5, [sp, #144]
    9010:	b	8e30 <PyNumber_FloorDivide@plt+0x4200>
    9014:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9018:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    901c:	ldr	x2, [x2, #24]
    9020:	add	x1, x1, #0xf98
    9024:	ldr	x0, [x0, #3976]
    9028:	str	x5, [sp, #104]
    902c:	ldr	x0, [x0]
    9030:	bl	4b90 <PyErr_Format@plt>
    9034:	ldr	x5, [sp, #104]
    9038:	ldr	x0, [x5]
    903c:	sub	x0, x0, #0x1
    9040:	str	x0, [x5]
    9044:	cbnz	x0, 8ee0 <PyNumber_FloorDivide@plt+0x42b0>
    9048:	mov	x0, x5
    904c:	bl	4830 <_Py_Dealloc@plt>
    9050:	b	8ee0 <PyNumber_FloorDivide@plt+0x42b0>
    9054:	ldr	x0, [sp, #128]
    9058:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    905c:	mov	w2, #0x0                   	// #0
    9060:	add	x1, x1, #0x270
    9064:	bl	4800 <sprintf@plt>
    9068:	b	8f8c <PyNumber_FloorDivide@plt+0x435c>
    906c:	mov	x26, x19
    9070:	mov	x19, #0x0                   	// #0
    9074:	ldp	x21, x22, [sp, #32]
    9078:	cbnz	x28, 89e4 <PyNumber_FloorDivide@plt+0x3db4>
    907c:	b	89f8 <PyNumber_FloorDivide@plt+0x3dc8>
    9080:	mov	x19, #0x0                   	// #0
    9084:	ldp	x21, x22, [sp, #32]
    9088:	b	8a08 <PyNumber_FloorDivide@plt+0x3dd8>
    908c:	nop
    9090:	sub	sp, sp, #0x40
    9094:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    9098:	add	x3, x3, #0xad0
    909c:	add	x4, sp, #0x38
    90a0:	add	x3, x3, #0x300
    90a4:	stp	x29, x30, [sp, #16]
    90a8:	add	x29, sp, #0x10
    90ac:	stp	x19, x20, [sp, #32]
    90b0:	mov	x19, x0
    90b4:	mov	x0, x1
    90b8:	mov	x1, x2
    90bc:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    90c0:	add	x2, x2, #0x278
    90c4:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    90c8:	cbz	w0, 9148 <PyNumber_FloorDivide@plt+0x4518>
    90cc:	ldrb	w6, [x19, #27]
    90d0:	mov	w3, #0x1                   	// #1
    90d4:	ldrb	w5, [x19, #26]
    90d8:	mov	w0, #0xffffffff            	// #-1
    90dc:	ldrb	w4, [x19, #25]
    90e0:	mov	w2, w3
    90e4:	str	w3, [sp]
    90e8:	mov	w7, #0x0                   	// #0
    90ec:	str	w0, [sp, #8]
    90f0:	mov	w1, #0x76c                 	// #1900
    90f4:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    90f8:	add	x0, x0, #0x288
    90fc:	bl	49c0 <Py_BuildValue@plt>
    9100:	mov	x20, x0
    9104:	cbz	x0, 9148 <PyNumber_FloorDivide@plt+0x4518>
    9108:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    910c:	mov	x0, x19
    9110:	ldr	x1, [sp, #56]
    9114:	mov	x2, x20
    9118:	ldr	x3, [x3, #4024]
    911c:	bl	88d0 <PyNumber_FloorDivide@plt+0x3ca0>
    9120:	mov	x19, x0
    9124:	ldr	x1, [x20]
    9128:	sub	x0, x1, #0x1
    912c:	str	x0, [x20]
    9130:	cbz	x0, 9160 <PyNumber_FloorDivide@plt+0x4530>
    9134:	mov	x0, x19
    9138:	ldp	x29, x30, [sp, #16]
    913c:	ldp	x19, x20, [sp, #32]
    9140:	add	sp, sp, #0x40
    9144:	ret
    9148:	mov	x19, #0x0                   	// #0
    914c:	mov	x0, x19
    9150:	ldp	x29, x30, [sp, #16]
    9154:	ldp	x19, x20, [sp, #32]
    9158:	add	sp, sp, #0x40
    915c:	ret
    9160:	mov	x0, x20
    9164:	bl	4830 <_Py_Dealloc@plt>
    9168:	mov	x0, x19
    916c:	ldp	x29, x30, [sp, #16]
    9170:	ldp	x19, x20, [sp, #32]
    9174:	add	sp, sp, #0x40
    9178:	ret
    917c:	nop
    9180:	stp	x29, x30, [sp, #-48]!
    9184:	mov	x29, sp
    9188:	stp	x19, x20, [sp, #16]
    918c:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    9190:	add	x19, x19, #0xad0
    9194:	mov	x20, x0
    9198:	add	x3, x19, #0x310
    919c:	mov	x0, x1
    91a0:	add	x4, sp, #0x28
    91a4:	mov	x1, x2
    91a8:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    91ac:	add	x2, x2, #0x278
    91b0:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    91b4:	cbz	w0, 9208 <PyNumber_FloorDivide@plt+0x45d8>
    91b8:	add	x1, x19, #0x320
    91bc:	mov	x0, x20
    91c0:	mov	x2, #0x0                   	// #0
    91c4:	bl	4a90 <_PyObject_CallMethodId@plt>
    91c8:	mov	x19, x0
    91cc:	cbz	x0, 9208 <PyNumber_FloorDivide@plt+0x45d8>
    91d0:	ldr	x1, [sp, #40]
    91d4:	mov	x3, x20
    91d8:	mov	x0, x20
    91dc:	mov	x2, x19
    91e0:	bl	88d0 <PyNumber_FloorDivide@plt+0x3ca0>
    91e4:	mov	x20, x0
    91e8:	ldr	x1, [x19]
    91ec:	sub	x0, x1, #0x1
    91f0:	str	x0, [x19]
    91f4:	cbz	x0, 921c <PyNumber_FloorDivide@plt+0x45ec>
    91f8:	mov	x0, x20
    91fc:	ldp	x19, x20, [sp, #16]
    9200:	ldp	x29, x30, [sp], #48
    9204:	ret
    9208:	mov	x20, #0x0                   	// #0
    920c:	mov	x0, x20
    9210:	ldp	x19, x20, [sp, #16]
    9214:	ldp	x29, x30, [sp], #48
    9218:	ret
    921c:	mov	x0, x19
    9220:	bl	4830 <_Py_Dealloc@plt>
    9224:	mov	x0, x20
    9228:	ldp	x19, x20, [sp, #16]
    922c:	ldp	x29, x30, [sp], #48
    9230:	ret
    9234:	nop
    9238:	stp	x29, x30, [sp, #-48]!
    923c:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    9240:	mov	x29, sp
    9244:	ldr	x3, [x3, #4024]
    9248:	stp	x19, x20, [sp, #16]
    924c:	mov	x20, x1
    9250:	str	x21, [sp, #32]
    9254:	cmp	x2, x3
    9258:	mov	x21, x0
    925c:	b.eq	92e4 <PyNumber_FloorDivide@plt+0x46b4>  // b.none
    9260:	ldr	x0, [x2, #8]
    9264:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    9268:	add	x1, x1, #0x2a8
    926c:	mov	x19, x2
    9270:	add	x1, x1, #0x340
    9274:	cmp	x0, x1
    9278:	b.eq	9284 <PyNumber_FloorDivide@plt+0x4654>  // b.none
    927c:	bl	4b60 <PyType_IsSubtype@plt>
    9280:	cbz	w0, 934c <PyNumber_FloorDivide@plt+0x471c>
    9284:	ldr	x2, [x21, #304]
    9288:	mov	x0, x21
    928c:	mov	x1, #0x1                   	// #1
    9290:	blr	x2
    9294:	cbz	x0, 92f4 <PyNumber_FloorDivide@plt+0x46c4>
    9298:	ldr	w1, [x20, #32]
    929c:	mov	x3, #0xffffffffffffffff    	// #-1
    92a0:	stur	w1, [x0, #25]
    92a4:	mov	w2, #0x1                   	// #1
    92a8:	ldrh	w1, [x20, #36]
    92ac:	str	x3, [x0, #16]
    92b0:	strb	w2, [x0, #24]
    92b4:	sturh	w1, [x0, #29]
    92b8:	ldr	x1, [x19]
    92bc:	add	x1, x1, #0x1
    92c0:	str	x1, [x19]
    92c4:	str	x19, [x0, #32]
    92c8:	ldrsb	w1, [x20, #32]
    92cc:	tbnz	w1, #31, 9308 <PyNumber_FloorDivide@plt+0x46d8>
    92d0:	strb	wzr, [x0, #31]
    92d4:	ldp	x19, x20, [sp, #16]
    92d8:	ldr	x21, [sp, #32]
    92dc:	ldp	x29, x30, [sp], #48
    92e0:	ret
    92e4:	ldr	x2, [x0, #304]
    92e8:	mov	x1, #0x0                   	// #0
    92ec:	blr	x2
    92f0:	cbnz	x0, 932c <PyNumber_FloorDivide@plt+0x46fc>
    92f4:	mov	x0, #0x0                   	// #0
    92f8:	ldp	x19, x20, [sp, #16]
    92fc:	ldr	x21, [sp, #32]
    9300:	ldp	x29, x30, [sp], #48
    9304:	ret
    9308:	ldrb	w1, [x0, #25]
    930c:	mov	w2, #0x1                   	// #1
    9310:	strb	w2, [x0, #31]
    9314:	sub	w1, w1, #0x80
    9318:	strb	w1, [x0, #25]
    931c:	ldp	x19, x20, [sp, #16]
    9320:	ldr	x21, [sp, #32]
    9324:	ldp	x29, x30, [sp], #48
    9328:	ret
    932c:	ldr	w1, [x20, #32]
    9330:	mov	x2, #0xffffffffffffffff    	// #-1
    9334:	stur	w1, [x0, #25]
    9338:	ldrh	w1, [x20, #36]
    933c:	str	x2, [x0, #16]
    9340:	strb	wzr, [x0, #24]
    9344:	sturh	w1, [x0, #29]
    9348:	b	92c8 <PyNumber_FloorDivide@plt+0x4698>
    934c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9350:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9354:	ldr	x2, [x19, #8]
    9358:	add	x1, x1, #0x60
    935c:	ldr	x19, [x0, #3976]
    9360:	ldr	x2, [x2, #24]
    9364:	ldr	x0, [x19]
    9368:	bl	4b90 <PyErr_Format@plt>
    936c:	ldr	x0, [x19]
    9370:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9374:	add	x1, x1, #0x298
    9378:	bl	48a0 <PyErr_SetString@plt>
    937c:	mov	x0, #0x0                   	// #0
    9380:	b	92d4 <PyNumber_FloorDivide@plt+0x46a4>
    9384:	nop
    9388:	sub	sp, sp, #0x70
    938c:	stp	x29, x30, [sp, #16]
    9390:	add	x29, sp, #0x10
    9394:	ldr	x4, [x1, #16]
    9398:	stp	x19, x20, [sp, #32]
    939c:	adrp	x20, 28000 <PyInit__datetime@@Base+0x14f90>
    93a0:	stp	x21, x22, [sp, #48]
    93a4:	sub	x5, x4, #0x1
    93a8:	mov	x19, x1
    93ac:	ldr	x3, [x20, #4024]
    93b0:	stp	wzr, wzr, [sp, #84]
    93b4:	stp	wzr, wzr, [sp, #92]
    93b8:	mov	x21, x0
    93bc:	str	wzr, [sp, #100]
    93c0:	mov	x1, x2
    93c4:	str	x3, [sp, #104]
    93c8:	cmp	x5, #0x1
    93cc:	b.hi	93fc <PyNumber_FloorDivide@plt+0x47cc>  // b.pmore
    93d0:	cmp	x4, #0x2
    93d4:	ldr	x22, [x19, #24]
    93d8:	b.eq	9538 <PyNumber_FloorDivide@plt+0x4908>  // b.none
    93dc:	ldr	x0, [x22, #8]
    93e0:	ldr	x0, [x0, #168]
    93e4:	tbz	w0, #27, 946c <PyNumber_FloorDivide@plt+0x483c>
    93e8:	ldr	x0, [x22, #16]
    93ec:	cmp	x0, #0x6
    93f0:	b.eq	9550 <PyNumber_FloorDivide@plt+0x4920>  // b.none
    93f4:	ldr	x20, [x20, #4024]
    93f8:	str	x20, [sp, #104]
    93fc:	add	x4, sp, #0x64
    9400:	add	x0, sp, #0x68
    9404:	stp	x0, x4, [sp]
    9408:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    940c:	add	x3, x3, #0xad0
    9410:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    9414:	add	x3, x3, #0x340
    9418:	add	x7, sp, #0x60
    941c:	add	x2, x2, #0x320
    9420:	add	x6, sp, #0x5c
    9424:	add	x5, sp, #0x58
    9428:	mov	x0, x19
    942c:	add	x4, sp, #0x54
    9430:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    9434:	cbz	w0, 951c <PyNumber_FloorDivide@plt+0x48ec>
    9438:	ldp	w0, w1, [sp, #84]
    943c:	mov	x6, x21
    9440:	ldp	w2, w3, [sp, #92]
    9444:	ldr	w5, [sp, #100]
    9448:	ldr	x4, [sp, #104]
    944c:	bl	7de8 <PyNumber_FloorDivide@plt+0x31b8>
    9450:	mov	x19, x0
    9454:	mov	x0, x19
    9458:	ldp	x29, x30, [sp, #16]
    945c:	ldp	x19, x20, [sp, #32]
    9460:	ldp	x21, x22, [sp, #48]
    9464:	add	sp, sp, #0x70
    9468:	ret
    946c:	tbz	w0, #28, 93f4 <PyNumber_FloorDivide@plt+0x47c4>
    9470:	ldrsb	w0, [x22, #32]
    9474:	tbz	w0, #31, 9508 <PyNumber_FloorDivide@plt+0x48d8>
    9478:	ldr	x0, [x22, #16]
    947c:	cmp	x0, #0x6
    9480:	b.ne	93f4 <PyNumber_FloorDivide@plt+0x47c4>  // b.any
    9484:	ldrb	w0, [x22, #32]
    9488:	and	w2, w0, #0x1c
    948c:	and	w3, w0, #0x20
    9490:	cmp	w2, #0x4
    9494:	b.eq	9578 <PyNumber_FloorDivide@plt+0x4948>  // b.none
    9498:	cmp	w2, #0x8
    949c:	b.eq	95a0 <PyNumber_FloorDivide@plt+0x4970>  // b.none
    94a0:	cbz	w3, 95c8 <PyNumber_FloorDivide@plt+0x4998>
    94a4:	tst	x0, #0x40
    94a8:	add	x2, x22, #0x48
    94ac:	add	x0, x22, #0x30
    94b0:	csel	x0, x2, x0, eq  // eq = none
    94b4:	ldr	w0, [x0]
    94b8:	and	w0, w0, #0x7f
    94bc:	cmp	w0, #0x17
    94c0:	cset	w0, ls  // ls = plast
    94c4:	cbz	w0, 93f4 <PyNumber_FloorDivide@plt+0x47c4>
    94c8:	mov	x0, x22
    94cc:	bl	4980 <PyUnicode_AsLatin1String@plt>
    94d0:	mov	x20, x0
    94d4:	cbz	x0, 95e0 <PyNumber_FloorDivide@plt+0x49b0>
    94d8:	ldr	x2, [sp, #104]
    94dc:	mov	x1, x20
    94e0:	mov	x0, x21
    94e4:	bl	9238 <PyNumber_FloorDivide@plt+0x4608>
    94e8:	mov	x19, x0
    94ec:	ldr	x1, [x20]
    94f0:	sub	x0, x1, #0x1
    94f4:	str	x0, [x20]
    94f8:	cbnz	x0, 9454 <PyNumber_FloorDivide@plt+0x4824>
    94fc:	mov	x0, x20
    9500:	bl	4830 <_Py_Dealloc@plt>
    9504:	b	9454 <PyNumber_FloorDivide@plt+0x4824>
    9508:	mov	x0, x22
    950c:	str	x1, [sp, #72]
    9510:	bl	4730 <_PyUnicode_Ready@plt>
    9514:	ldr	x1, [sp, #72]
    9518:	cbz	w0, 9478 <PyNumber_FloorDivide@plt+0x4848>
    951c:	mov	x19, #0x0                   	// #0
    9520:	mov	x0, x19
    9524:	ldp	x29, x30, [sp, #16]
    9528:	ldp	x19, x20, [sp, #32]
    952c:	ldp	x21, x22, [sp, #48]
    9530:	add	sp, sp, #0x70
    9534:	ret
    9538:	ldr	x0, [x22, #8]
    953c:	ldr	x3, [x19, #32]
    9540:	str	x3, [sp, #104]
    9544:	ldr	x0, [x0, #168]
    9548:	tbz	w0, #27, 946c <PyNumber_FloorDivide@plt+0x483c>
    954c:	b	93e8 <PyNumber_FloorDivide@plt+0x47b8>
    9550:	ldrb	w0, [x22, #32]
    9554:	and	w0, w0, #0x7f
    9558:	cmp	w0, #0x17
    955c:	b.hi	93f4 <PyNumber_FloorDivide@plt+0x47c4>  // b.pmore
    9560:	mov	x2, x3
    9564:	mov	x1, x22
    9568:	mov	x0, x21
    956c:	bl	9238 <PyNumber_FloorDivide@plt+0x4608>
    9570:	mov	x19, x0
    9574:	b	9454 <PyNumber_FloorDivide@plt+0x4824>
    9578:	cbz	w3, 95d0 <PyNumber_FloorDivide@plt+0x49a0>
    957c:	tst	x0, #0x40
    9580:	add	x2, x22, #0x30
    9584:	add	x0, x22, #0x48
    9588:	csel	x0, x0, x2, eq  // eq = none
    958c:	ldrb	w0, [x0]
    9590:	and	w0, w0, #0x7f
    9594:	cmp	w0, #0x17
    9598:	cset	w0, ls  // ls = plast
    959c:	b	94c4 <PyNumber_FloorDivide@plt+0x4894>
    95a0:	cbz	w3, 95d8 <PyNumber_FloorDivide@plt+0x49a8>
    95a4:	tst	x0, #0x40
    95a8:	add	x2, x22, #0x30
    95ac:	add	x0, x22, #0x48
    95b0:	csel	x0, x0, x2, eq  // eq = none
    95b4:	ldrh	w0, [x0]
    95b8:	and	w0, w0, #0x7f
    95bc:	cmp	w0, #0x17
    95c0:	cset	w0, ls  // ls = plast
    95c4:	b	94c4 <PyNumber_FloorDivide@plt+0x4894>
    95c8:	ldr	x0, [x22, #72]
    95cc:	b	94b4 <PyNumber_FloorDivide@plt+0x4884>
    95d0:	ldr	x0, [x22, #72]
    95d4:	b	958c <PyNumber_FloorDivide@plt+0x495c>
    95d8:	ldr	x0, [x22, #72]
    95dc:	b	95b4 <PyNumber_FloorDivide@plt+0x4984>
    95e0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    95e4:	ldr	x0, [x0, #4032]
    95e8:	ldr	x0, [x0]
    95ec:	bl	48c0 <PyErr_ExceptionMatches@plt>
    95f0:	cbz	w0, 951c <PyNumber_FloorDivide@plt+0x48ec>
    95f4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    95f8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    95fc:	mov	x19, #0x0                   	// #0
    9600:	add	x1, x1, #0x2b0
    9604:	ldr	x0, [x0, #3968]
    9608:	ldr	x0, [x0]
    960c:	bl	48a0 <PyErr_SetString@plt>
    9610:	b	9454 <PyNumber_FloorDivide@plt+0x4824>
    9614:	nop
    9618:	sub	sp, sp, #0x50
    961c:	stp	x29, x30, [sp, #16]
    9620:	add	x29, sp, #0x10
    9624:	stp	x19, x20, [sp, #32]
    9628:	mov	x19, x0
    962c:	mov	x0, x1
    9630:	mov	x1, x2
    9634:	ldrb	w2, [x19, #29]
    9638:	ldrb	w3, [x19, #28]
    963c:	ldrb	w7, [x19, #30]
    9640:	lsl	w2, w2, #8
    9644:	ldrb	w4, [x19, #24]
    9648:	orr	w3, w2, w3, lsl #16
    964c:	ldrb	w6, [x19, #25]
    9650:	ldrb	w5, [x19, #26]
    9654:	orr	w3, w3, w7
    9658:	ldrb	w2, [x19, #27]
    965c:	stp	w6, w5, [sp, #52]
    9660:	stp	w2, w3, [sp, #60]
    9664:	cbz	w4, 9720 <PyNumber_FloorDivide@plt+0x4af0>
    9668:	ldr	x8, [x19, #32]
    966c:	add	x2, sp, #0x44
    9670:	add	x3, sp, #0x48
    9674:	stp	x3, x2, [sp]
    9678:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    967c:	ldrb	w9, [x19, #31]
    9680:	add	x3, x3, #0xad0
    9684:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    9688:	add	x7, sp, #0x40
    968c:	add	x6, sp, #0x3c
    9690:	add	x5, sp, #0x38
    9694:	add	x4, sp, #0x34
    9698:	add	x3, x3, #0x340
    969c:	add	x2, x2, #0x330
    96a0:	str	w9, [sp, #68]
    96a4:	str	x8, [sp, #72]
    96a8:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    96ac:	cbz	w0, 972c <PyNumber_FloorDivide@plt+0x4afc>
    96b0:	ldr	w0, [sp, #68]
    96b4:	cmp	w0, #0x1
    96b8:	b.hi	9760 <PyNumber_FloorDivide@plt+0x4b30>  // b.pmore
    96bc:	ldp	w1, w2, [sp, #52]
    96c0:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    96c4:	ldp	w3, w4, [sp, #60]
    96c8:	add	x0, x0, #0xd0
    96cc:	ldr	x5, [sp, #72]
    96d0:	bl	49c0 <Py_BuildValue@plt>
    96d4:	mov	x20, x0
    96d8:	cbz	x0, 972c <PyNumber_FloorDivide@plt+0x4afc>
    96dc:	mov	x1, x0
    96e0:	mov	x2, #0x0                   	// #0
    96e4:	ldr	x0, [x19, #8]
    96e8:	bl	9388 <PyNumber_FloorDivide@plt+0x4758>
    96ec:	mov	x19, x0
    96f0:	cbz	x0, 96fc <PyNumber_FloorDivide@plt+0x4acc>
    96f4:	ldr	w0, [sp, #68]
    96f8:	strb	w0, [x19, #31]
    96fc:	ldr	x0, [x20]
    9700:	sub	x0, x0, #0x1
    9704:	str	x0, [x20]
    9708:	cbz	x0, 9744 <PyNumber_FloorDivide@plt+0x4b14>
    970c:	mov	x0, x19
    9710:	ldp	x29, x30, [sp, #16]
    9714:	ldp	x19, x20, [sp, #32]
    9718:	add	sp, sp, #0x50
    971c:	ret
    9720:	adrp	x8, 28000 <PyInit__datetime@@Base+0x14f90>
    9724:	ldr	x8, [x8, #4024]
    9728:	b	966c <PyNumber_FloorDivide@plt+0x4a3c>
    972c:	mov	x19, #0x0                   	// #0
    9730:	mov	x0, x19
    9734:	ldp	x29, x30, [sp, #16]
    9738:	ldp	x19, x20, [sp, #32]
    973c:	add	sp, sp, #0x50
    9740:	ret
    9744:	mov	x0, x20
    9748:	bl	4830 <_Py_Dealloc@plt>
    974c:	mov	x0, x19
    9750:	ldp	x29, x30, [sp, #16]
    9754:	ldp	x19, x20, [sp, #32]
    9758:	add	sp, sp, #0x50
    975c:	ret
    9760:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9764:	mov	x19, #0x0                   	// #0
    9768:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    976c:	add	x1, x1, #0x40
    9770:	ldr	x0, [x0, #3968]
    9774:	ldr	x0, [x0]
    9778:	bl	48a0 <PyErr_SetString@plt>
    977c:	mov	x0, x19
    9780:	ldp	x29, x30, [sp, #16]
    9784:	ldp	x19, x20, [sp, #32]
    9788:	add	sp, sp, #0x50
    978c:	ret
    9790:	stp	x29, x30, [sp, #-48]!
    9794:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    9798:	mov	x29, sp
    979c:	ldr	x3, [x3, #4024]
    97a0:	stp	x19, x20, [sp, #16]
    97a4:	mov	x20, x1
    97a8:	str	x21, [sp, #32]
    97ac:	cmp	x2, x3
    97b0:	mov	x21, x0
    97b4:	b.eq	983c <PyNumber_FloorDivide@plt+0x4c0c>  // b.none
    97b8:	ldr	x0, [x2, #8]
    97bc:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    97c0:	add	x1, x1, #0x2a8
    97c4:	mov	x19, x2
    97c8:	add	x1, x1, #0x340
    97cc:	cmp	x0, x1
    97d0:	b.eq	97dc <PyNumber_FloorDivide@plt+0x4bac>  // b.none
    97d4:	bl	4b60 <PyType_IsSubtype@plt>
    97d8:	cbz	w0, 98a4 <PyNumber_FloorDivide@plt+0x4c74>
    97dc:	ldr	x2, [x21, #304]
    97e0:	mov	x0, x21
    97e4:	mov	x1, #0x1                   	// #1
    97e8:	blr	x2
    97ec:	cbz	x0, 984c <PyNumber_FloorDivide@plt+0x4c1c>
    97f0:	ldr	x1, [x20, #32]
    97f4:	stur	x1, [x0, #25]
    97f8:	mov	x3, #0xffffffffffffffff    	// #-1
    97fc:	mov	w2, #0x1                   	// #1
    9800:	ldrh	w1, [x20, #40]
    9804:	str	x3, [x0, #16]
    9808:	strb	w2, [x0, #24]
    980c:	sturh	w1, [x0, #33]
    9810:	ldr	x1, [x19]
    9814:	add	x1, x1, #0x1
    9818:	str	x1, [x19]
    981c:	str	x19, [x0, #40]
    9820:	ldrsb	w1, [x20, #34]
    9824:	tbnz	w1, #31, 9860 <PyNumber_FloorDivide@plt+0x4c30>
    9828:	strb	wzr, [x0, #35]
    982c:	ldp	x19, x20, [sp, #16]
    9830:	ldr	x21, [sp, #32]
    9834:	ldp	x29, x30, [sp], #48
    9838:	ret
    983c:	ldr	x2, [x0, #304]
    9840:	mov	x1, #0x0                   	// #0
    9844:	blr	x2
    9848:	cbnz	x0, 9884 <PyNumber_FloorDivide@plt+0x4c54>
    984c:	mov	x0, #0x0                   	// #0
    9850:	ldp	x19, x20, [sp, #16]
    9854:	ldr	x21, [sp, #32]
    9858:	ldp	x29, x30, [sp], #48
    985c:	ret
    9860:	ldrb	w1, [x0, #27]
    9864:	mov	w2, #0x1                   	// #1
    9868:	strb	w2, [x0, #35]
    986c:	sub	w1, w1, #0x80
    9870:	strb	w1, [x0, #27]
    9874:	ldp	x19, x20, [sp, #16]
    9878:	ldr	x21, [sp, #32]
    987c:	ldp	x29, x30, [sp], #48
    9880:	ret
    9884:	ldr	x1, [x20, #32]
    9888:	stur	x1, [x0, #25]
    988c:	mov	x2, #0xffffffffffffffff    	// #-1
    9890:	ldrh	w1, [x20, #40]
    9894:	str	x2, [x0, #16]
    9898:	strb	wzr, [x0, #24]
    989c:	sturh	w1, [x0, #33]
    98a0:	b	9820 <PyNumber_FloorDivide@plt+0x4bf0>
    98a4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    98a8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    98ac:	ldr	x2, [x19, #8]
    98b0:	add	x1, x1, #0x60
    98b4:	ldr	x19, [x0, #3976]
    98b8:	ldr	x2, [x2, #24]
    98bc:	ldr	x0, [x19]
    98c0:	bl	4b90 <PyErr_Format@plt>
    98c4:	ldr	x0, [x19]
    98c8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    98cc:	add	x1, x1, #0x298
    98d0:	bl	48a0 <PyErr_SetString@plt>
    98d4:	mov	x0, #0x0                   	// #0
    98d8:	b	982c <PyNumber_FloorDivide@plt+0x4bfc>
    98dc:	nop
    98e0:	stp	x29, x30, [sp, #-96]!
    98e4:	sub	w8, w0, #0x1
    98e8:	mov	x29, sp
    98ec:	stp	x21, x22, [sp, #32]
    98f0:	mov	w21, w0
    98f4:	mov	w0, #0x270e                	// #9998
    98f8:	stp	x25, x26, [sp, #64]
    98fc:	cmp	w8, w0
    9900:	ldr	x26, [sp, #104]
    9904:	b.hi	9b48 <PyNumber_FloorDivide@plt+0x4f18>  // b.pmore
    9908:	stp	x19, x20, [sp, #16]
    990c:	sub	w0, w1, #0x1
    9910:	mov	w19, w1
    9914:	cmp	w0, #0xb
    9918:	b.hi	9b6c <PyNumber_FloorDivide@plt+0x4f3c>  // b.pmore
    991c:	mov	w22, w2
    9920:	cmp	w2, #0x0
    9924:	b.le	9af8 <PyNumber_FloorDivide@plt+0x4ec8>
    9928:	stp	x23, x24, [sp, #48]
    992c:	mov	x20, x7
    9930:	mov	w24, w5
    9934:	stp	x27, x28, [sp, #80]
    9938:	mov	w23, w6
    993c:	mov	w27, w3
    9940:	mov	w28, w4
    9944:	cmp	w1, #0x2
    9948:	b.eq	9a5c <PyNumber_FloorDivide@plt+0x4e2c>  // b.none
    994c:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
    9950:	add	x0, x0, #0x810
    9954:	add	x0, x0, #0x40
    9958:	ldr	w0, [x0, w19, sxtw #2]
    995c:	cmp	w22, w0
    9960:	b.gt	9af0 <PyNumber_FloorDivide@plt+0x4ec0>
    9964:	cmp	w27, #0x17
    9968:	b.hi	9b9c <PyNumber_FloorDivide@plt+0x4f6c>  // b.pmore
    996c:	cmp	w28, #0x3b
    9970:	b.hi	9b8c <PyNumber_FloorDivide@plt+0x4f5c>  // b.pmore
    9974:	cmp	w24, #0x3b
    9978:	b.hi	9b7c <PyNumber_FloorDivide@plt+0x4f4c>  // b.pmore
    997c:	mov	w0, #0x423f                	// #16959
    9980:	movk	w0, #0xf, lsl #16
    9984:	cmp	w23, w0
    9988:	b.hi	9bac <PyNumber_FloorDivide@plt+0x4f7c>  // b.pmore
    998c:	ldr	w0, [sp, #96]
    9990:	cmp	w0, #0x1
    9994:	b.hi	9b1c <PyNumber_FloorDivide@plt+0x4eec>  // b.pmore
    9998:	adrp	x25, 28000 <PyInit__datetime@@Base+0x14f90>
    999c:	ldr	x0, [x25, #4024]
    99a0:	cmp	x20, x0
    99a4:	b.eq	99c8 <PyNumber_FloorDivide@plt+0x4d98>  // b.none
    99a8:	ldr	x0, [x20, #8]
    99ac:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    99b0:	add	x1, x1, #0x2a8
    99b4:	add	x1, x1, #0x340
    99b8:	cmp	x0, x1
    99bc:	b.eq	99c8 <PyNumber_FloorDivide@plt+0x4d98>  // b.none
    99c0:	bl	4b60 <PyType_IsSubtype@plt>
    99c4:	cbz	w0, 9abc <PyNumber_FloorDivide@plt+0x4e8c>
    99c8:	ldr	x25, [x25, #4024]
    99cc:	mov	x0, x26
    99d0:	ldr	x2, [x26, #304]
    99d4:	cmp	x20, x25
    99d8:	cset	x1, ne  // ne = any
    99dc:	cset	w26, ne  // ne = any
    99e0:	blr	x2
    99e4:	cbz	x0, 9aa0 <PyNumber_FloorDivide@plt+0x4e70>
    99e8:	asr	w1, w23, #16
    99ec:	rev16	w21, w21
    99f0:	rev16	w23, w23
    99f4:	mov	x2, #0xffffffffffffffff    	// #-1
    99f8:	str	x2, [x0, #16]
    99fc:	cmp	x20, x25
    9a00:	strb	w26, [x0, #24]
    9a04:	sturh	w21, [x0, #25]
    9a08:	strb	w19, [x0, #27]
    9a0c:	strb	w22, [x0, #28]
    9a10:	strb	w27, [x0, #29]
    9a14:	strb	w28, [x0, #30]
    9a18:	strb	w24, [x0, #31]
    9a1c:	strb	w1, [x0, #32]
    9a20:	sturh	w23, [x0, #33]
    9a24:	b.eq	9a38 <PyNumber_FloorDivide@plt+0x4e08>  // b.none
    9a28:	ldr	x1, [x20]
    9a2c:	add	x1, x1, #0x1
    9a30:	str	x1, [x20]
    9a34:	str	x20, [x0, #40]
    9a38:	ldrb	w1, [sp, #96]
    9a3c:	strb	w1, [x0, #35]
    9a40:	ldp	x19, x20, [sp, #16]
    9a44:	ldp	x23, x24, [sp, #48]
    9a48:	ldp	x27, x28, [sp, #80]
    9a4c:	ldp	x21, x22, [sp, #32]
    9a50:	ldp	x25, x26, [sp, #64]
    9a54:	ldp	x29, x30, [sp], #96
    9a58:	ret
    9a5c:	tst	x21, #0x3
    9a60:	b.ne	994c <PyNumber_FloorDivide@plt+0x4d1c>  // b.any
    9a64:	mov	w1, #0x5c29                	// #23593
    9a68:	mov	w2, #0x5c28                	// #23592
    9a6c:	movk	w1, #0xc28f, lsl #16
    9a70:	movk	w2, #0x28f, lsl #16
    9a74:	mov	w0, #0x1d                  	// #29
    9a78:	mul	w1, w21, w1
    9a7c:	ror	w3, w1, #2
    9a80:	cmp	w3, w2
    9a84:	b.hi	995c <PyNumber_FloorDivide@plt+0x4d2c>  // b.pmore
    9a88:	mov	w2, #0xd70a                	// #55050
    9a8c:	ror	w1, w1, #4
    9a90:	movk	w2, #0xa3, lsl #16
    9a94:	cmp	w1, w2
    9a98:	b.ls	995c <PyNumber_FloorDivide@plt+0x4d2c>  // b.plast
    9a9c:	b	994c <PyNumber_FloorDivide@plt+0x4d1c>
    9aa0:	ldp	x19, x20, [sp, #16]
    9aa4:	ldp	x21, x22, [sp, #32]
    9aa8:	ldp	x23, x24, [sp, #48]
    9aac:	ldp	x25, x26, [sp, #64]
    9ab0:	ldp	x27, x28, [sp, #80]
    9ab4:	ldp	x29, x30, [sp], #96
    9ab8:	ret
    9abc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9ac0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9ac4:	ldr	x2, [x20, #8]
    9ac8:	add	x1, x1, #0x60
    9acc:	ldr	x0, [x0, #3976]
    9ad0:	ldr	x2, [x2, #24]
    9ad4:	ldr	x0, [x0]
    9ad8:	bl	4b90 <PyErr_Format@plt>
    9adc:	mov	x0, #0x0                   	// #0
    9ae0:	ldp	x19, x20, [sp, #16]
    9ae4:	ldp	x23, x24, [sp, #48]
    9ae8:	ldp	x27, x28, [sp, #80]
    9aec:	b	9a4c <PyNumber_FloorDivide@plt+0x4e1c>
    9af0:	ldp	x23, x24, [sp, #48]
    9af4:	ldp	x27, x28, [sp, #80]
    9af8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    9afc:	add	x1, x1, #0xe08
    9b00:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9b04:	ldr	x0, [x0, #3968]
    9b08:	ldr	x0, [x0]
    9b0c:	bl	48a0 <PyErr_SetString@plt>
    9b10:	mov	x0, #0x0                   	// #0
    9b14:	ldp	x19, x20, [sp, #16]
    9b18:	b	9a4c <PyNumber_FloorDivide@plt+0x4e1c>
    9b1c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9b20:	add	x1, x1, #0x40
    9b24:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9b28:	ldr	x0, [x0, #3968]
    9b2c:	ldr	x0, [x0]
    9b30:	bl	48a0 <PyErr_SetString@plt>
    9b34:	mov	x0, #0x0                   	// #0
    9b38:	ldp	x19, x20, [sp, #16]
    9b3c:	ldp	x23, x24, [sp, #48]
    9b40:	ldp	x27, x28, [sp, #80]
    9b44:	b	9a4c <PyNumber_FloorDivide@plt+0x4e1c>
    9b48:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9b4c:	mov	w2, w21
    9b50:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    9b54:	add	x1, x1, #0xdd8
    9b58:	ldr	x0, [x0, #3968]
    9b5c:	ldr	x0, [x0]
    9b60:	bl	4b90 <PyErr_Format@plt>
    9b64:	mov	x0, #0x0                   	// #0
    9b68:	b	9a4c <PyNumber_FloorDivide@plt+0x4e1c>
    9b6c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    9b70:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9b74:	add	x1, x1, #0xdf0
    9b78:	b	9b04 <PyNumber_FloorDivide@plt+0x4ed4>
    9b7c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9b80:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9b84:	add	x1, x1, #0x0
    9b88:	b	9b28 <PyNumber_FloorDivide@plt+0x4ef8>
    9b8c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    9b90:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9b94:	add	x1, x1, #0xfe8
    9b98:	b	9b28 <PyNumber_FloorDivide@plt+0x4ef8>
    9b9c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    9ba0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9ba4:	add	x1, x1, #0xfd0
    9ba8:	b	9b28 <PyNumber_FloorDivide@plt+0x4ef8>
    9bac:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9bb0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9bb4:	add	x1, x1, #0x18
    9bb8:	b	9b28 <PyNumber_FloorDivide@plt+0x4ef8>
    9bbc:	nop
    9bc0:	sub	sp, sp, #0x80
    9bc4:	stp	x29, x30, [sp, #16]
    9bc8:	add	x29, sp, #0x10
    9bcc:	stp	x19, x20, [sp, #32]
    9bd0:	mov	x20, x0
    9bd4:	ldr	x0, [x1, #8]
    9bd8:	ldr	x0, [x0, #168]
    9bdc:	tbz	w0, #28, 9eb4 <PyNumber_FloorDivide@plt+0x5284>
    9be0:	mov	x19, x1
    9be4:	mov	x0, x1
    9be8:	bl	48f0 <PyUnicode_GetLength@plt>
    9bec:	tbnz	x0, #63, 9db8 <PyNumber_FloorDivide@plt+0x5188>
    9bf0:	stp	x21, x22, [sp, #48]
    9bf4:	cmp	x0, #0xa
    9bf8:	b.le	9d50 <PyNumber_FloorDivide@plt+0x5120>
    9bfc:	ldrb	w0, [x19, #32]
    9c00:	and	w1, w0, #0x1c
    9c04:	cmp	w1, #0x4
    9c08:	b.eq	9d50 <PyNumber_FloorDivide@plt+0x5120>  // b.none
    9c0c:	cmp	w1, #0x8
    9c10:	and	w1, w0, #0x20
    9c14:	b.eq	9d20 <PyNumber_FloorDivide@plt+0x50f0>  // b.none
    9c18:	cbz	w1, 9df4 <PyNumber_FloorDivide@plt+0x51c4>
    9c1c:	ands	w0, w0, #0x40
    9c20:	add	x2, x19, #0x58
    9c24:	add	x1, x19, #0x70
    9c28:	mov	w3, #0xd7ff                	// #55295
    9c2c:	csel	x4, x1, x2, eq  // eq = none
    9c30:	cmp	w0, #0x0
    9c34:	csel	x0, x1, x2, eq  // eq = none
    9c38:	ldr	w4, [x4]
    9c3c:	cmp	w4, w3
    9c40:	b.ls	9d50 <PyNumber_FloorDivide@plt+0x5120>  // b.plast
    9c44:	ldr	w1, [x0]
    9c48:	mov	w0, #0xdfff                	// #57343
    9c4c:	cmp	w1, w0
    9c50:	b.hi	9d50 <PyNumber_FloorDivide@plt+0x5120>  // b.pmore
    9c54:	mov	x0, x19
    9c58:	bl	47c0 <_PyUnicode_Copy@plt>
    9c5c:	mov	x21, x0
    9c60:	cbz	x0, 9db4 <PyNumber_FloorDivide@plt+0x5184>
    9c64:	mov	w2, #0x54                  	// #84
    9c68:	mov	x1, #0xa                   	// #10
    9c6c:	bl	4880 <PyUnicode_WriteChar@plt>
    9c70:	cbnz	w0, 9da4 <PyNumber_FloorDivide@plt+0x5174>
    9c74:	add	x1, sp, #0x78
    9c78:	mov	x0, x21
    9c7c:	bl	4b70 <PyUnicode_AsUTF8AndSize@plt>
    9c80:	mov	x6, x0
    9c84:	cbz	x0, 9d74 <PyNumber_FloorDivide@plt+0x5144>
    9c88:	add	x3, sp, #0x5c
    9c8c:	add	x2, sp, #0x58
    9c90:	add	x1, sp, #0x54
    9c94:	stp	wzr, wzr, [sp, #84]
    9c98:	stp	wzr, wzr, [sp, #92]
    9c9c:	stp	wzr, wzr, [sp, #100]
    9ca0:	stp	wzr, wzr, [sp, #108]
    9ca4:	str	wzr, [sp, #116]
    9ca8:	bl	4eb0 <PyNumber_FloorDivide@plt+0x280>
    9cac:	cbnz	w0, 9cf0 <PyNumber_FloorDivide@plt+0x50c0>
    9cb0:	ldr	x1, [sp, #120]
    9cb4:	cmp	x1, #0xa
    9cb8:	b.le	9e10 <PyNumber_FloorDivide@plt+0x51e0>
    9cbc:	ldrb	w0, [x6, #10]
    9cc0:	tbnz	w0, #7, 9f94 <PyNumber_FloorDivide@plt+0x5364>
    9cc4:	add	x0, x6, #0xb
    9cc8:	mov	x2, #0xb                   	// #11
    9ccc:	sub	x1, x1, x2
    9cd0:	add	x7, sp, #0x74
    9cd4:	add	x6, sp, #0x70
    9cd8:	add	x5, sp, #0x6c
    9cdc:	add	x4, sp, #0x68
    9ce0:	add	x3, sp, #0x64
    9ce4:	add	x2, sp, #0x60
    9ce8:	str	x1, [sp, #120]
    9cec:	bl	5160 <PyNumber_FloorDivide@plt+0x530>
    9cf0:	tbnz	w0, #31, 9d88 <PyNumber_FloorDivide@plt+0x5158>
    9cf4:	cmp	w0, #0x1
    9cf8:	b.ne	9e10 <PyNumber_FloorDivide@plt+0x51e0>  // b.any
    9cfc:	ldr	w1, [sp, #112]
    9d00:	cbnz	w1, 9f2c <PyNumber_FloorDivide@plt+0x52fc>
    9d04:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    9d08:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    9d0c:	ldr	x22, [x0, #4056]
    9d10:	ldr	x0, [x22]
    9d14:	add	x0, x0, #0x1
    9d18:	str	x0, [x22]
    9d1c:	b	9e2c <PyNumber_FloorDivide@plt+0x51fc>
    9d20:	cbz	w1, 9ee4 <PyNumber_FloorDivide@plt+0x52b4>
    9d24:	ands	w0, w0, #0x40
    9d28:	add	x2, x19, #0x44
    9d2c:	add	x1, x19, #0x5c
    9d30:	mov	w3, #0xd7ff                	// #55295
    9d34:	csel	x4, x1, x2, eq  // eq = none
    9d38:	cmp	w0, #0x0
    9d3c:	csel	x0, x1, x2, eq  // eq = none
    9d40:	ldrh	w4, [x4]
    9d44:	cmp	w4, w3
    9d48:	b.hi	9efc <PyNumber_FloorDivide@plt+0x52cc>  // b.pmore
    9d4c:	nop
    9d50:	ldr	x0, [x19]
    9d54:	mov	x21, x19
    9d58:	add	x1, sp, #0x78
    9d5c:	add	x0, x0, #0x1
    9d60:	str	x0, [x19]
    9d64:	mov	x0, x21
    9d68:	bl	4b70 <PyUnicode_AsUTF8AndSize@plt>
    9d6c:	mov	x6, x0
    9d70:	cbnz	x0, 9c88 <PyNumber_FloorDivide@plt+0x5058>
    9d74:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9d78:	ldr	x0, [x0, #4032]
    9d7c:	ldr	x0, [x0]
    9d80:	bl	48c0 <PyErr_ExceptionMatches@plt>
    9d84:	cbz	w0, 9da4 <PyNumber_FloorDivide@plt+0x5174>
    9d88:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9d8c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9d90:	mov	x2, x19
    9d94:	add	x1, x1, #0xd8
    9d98:	ldr	x0, [x0, #3968]
    9d9c:	ldr	x0, [x0]
    9da0:	bl	4b90 <PyErr_Format@plt>
    9da4:	ldr	x0, [x21]
    9da8:	sub	x0, x0, #0x1
    9dac:	str	x0, [x21]
    9db0:	cbz	x0, 9dd0 <PyNumber_FloorDivide@plt+0x51a0>
    9db4:	ldp	x21, x22, [sp, #48]
    9db8:	mov	x19, #0x0                   	// #0
    9dbc:	mov	x0, x19
    9dc0:	ldp	x29, x30, [sp, #16]
    9dc4:	ldp	x19, x20, [sp, #32]
    9dc8:	add	sp, sp, #0x80
    9dcc:	ret
    9dd0:	mov	x0, x21
    9dd4:	mov	x19, #0x0                   	// #0
    9dd8:	bl	4830 <_Py_Dealloc@plt>
    9ddc:	mov	x0, x19
    9de0:	ldp	x29, x30, [sp, #16]
    9de4:	ldp	x19, x20, [sp, #32]
    9de8:	ldp	x21, x22, [sp, #48]
    9dec:	add	sp, sp, #0x80
    9df0:	ret
    9df4:	ldr	x0, [x19, #72]
    9df8:	mov	w1, #0xd7ff                	// #55295
    9dfc:	add	x0, x0, #0x28
    9e00:	ldr	w2, [x0]
    9e04:	cmp	w2, w1
    9e08:	b.hi	9c44 <PyNumber_FloorDivide@plt+0x5014>  // b.pmore
    9e0c:	b	9d50 <PyNumber_FloorDivide@plt+0x5120>
    9e10:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    9e14:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    9e18:	ldr	x1, [x1, #4024]
    9e1c:	mov	x22, x1
    9e20:	ldr	x0, [x1]
    9e24:	add	x0, x0, #0x1
    9e28:	str	x0, [x1]
    9e2c:	add	x19, x19, #0x2a8
    9e30:	ldr	w6, [sp, #108]
    9e34:	add	x19, x19, #0x1a0
    9e38:	ldp	w0, w1, [sp, #84]
    9e3c:	cmp	x20, x19
    9e40:	ldp	w2, w3, [sp, #92]
    9e44:	ldp	w4, w7, [sp, #100]
    9e48:	b.eq	9f78 <PyNumber_FloorDivide@plt+0x5348>  // b.none
    9e4c:	str	w6, [sp]
    9e50:	mov	w5, w3
    9e54:	str	x22, [sp, #8]
    9e58:	mov	w3, w1
    9e5c:	mov	w6, w4
    9e60:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9e64:	mov	w4, w2
    9e68:	add	x1, x1, #0x348
    9e6c:	mov	w2, w0
    9e70:	mov	x0, x20
    9e74:	bl	4970 <PyObject_CallFunction@plt>
    9e78:	mov	x19, x0
    9e7c:	ldr	x0, [x22]
    9e80:	sub	x0, x0, #0x1
    9e84:	str	x0, [x22]
    9e88:	cbz	x0, 9f20 <PyNumber_FloorDivide@plt+0x52f0>
    9e8c:	ldr	x0, [x21]
    9e90:	sub	x0, x0, #0x1
    9e94:	str	x0, [x21]
    9e98:	cbz	x0, 9f10 <PyNumber_FloorDivide@plt+0x52e0>
    9e9c:	mov	x0, x19
    9ea0:	ldp	x29, x30, [sp, #16]
    9ea4:	ldp	x19, x20, [sp, #32]
    9ea8:	ldp	x21, x22, [sp, #48]
    9eac:	add	sp, sp, #0x80
    9eb0:	ret
    9eb4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    9eb8:	mov	x19, #0x0                   	// #0
    9ebc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    9ec0:	add	x1, x1, #0xa8
    9ec4:	ldr	x0, [x0, #3976]
    9ec8:	ldr	x0, [x0]
    9ecc:	bl	48a0 <PyErr_SetString@plt>
    9ed0:	mov	x0, x19
    9ed4:	ldp	x29, x30, [sp, #16]
    9ed8:	ldp	x19, x20, [sp, #32]
    9edc:	add	sp, sp, #0x80
    9ee0:	ret
    9ee4:	ldr	x0, [x19, #72]
    9ee8:	mov	w1, #0xd7ff                	// #55295
    9eec:	add	x0, x0, #0x14
    9ef0:	ldrh	w2, [x0]
    9ef4:	cmp	w2, w1
    9ef8:	b.ls	9d50 <PyNumber_FloorDivide@plt+0x5120>  // b.plast
    9efc:	ldrh	w1, [x0]
    9f00:	mov	w0, #0xdfff                	// #57343
    9f04:	cmp	w1, w0
    9f08:	b.ls	9c54 <PyNumber_FloorDivide@plt+0x5024>  // b.plast
    9f0c:	b	9d50 <PyNumber_FloorDivide@plt+0x5120>
    9f10:	mov	x0, x21
    9f14:	bl	4830 <_Py_Dealloc@plt>
    9f18:	ldp	x21, x22, [sp, #48]
    9f1c:	b	9dbc <PyNumber_FloorDivide@plt+0x518c>
    9f20:	mov	x0, x22
    9f24:	bl	4830 <_Py_Dealloc@plt>
    9f28:	b	9e8c <PyNumber_FloorDivide@plt+0x525c>
    9f2c:	ldr	w2, [sp, #116]
    9f30:	mov	w3, w0
    9f34:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    9f38:	mov	w0, #0x0                   	// #0
    9f3c:	add	x4, x19, #0x2a8
    9f40:	str	x23, [sp, #64]
    9f44:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
    9f48:	mov	x23, x0
    9f4c:	cbz	x0, 9fd8 <PyNumber_FloorDivide@plt+0x53a8>
    9f50:	mov	x1, #0x0                   	// #0
    9f54:	bl	67c8 <PyNumber_FloorDivide@plt+0x1b98>
    9f58:	ldr	x1, [x23]
    9f5c:	mov	x22, x0
    9f60:	sub	x0, x1, #0x1
    9f64:	str	x0, [x23]
    9f68:	cbz	x0, 9fcc <PyNumber_FloorDivide@plt+0x539c>
    9f6c:	ldr	x23, [sp, #64]
    9f70:	cbz	x22, 9da4 <PyNumber_FloorDivide@plt+0x5174>
    9f74:	b	9e2c <PyNumber_FloorDivide@plt+0x51fc>
    9f78:	str	wzr, [sp]
    9f7c:	mov	w5, w7
    9f80:	str	x20, [sp, #8]
    9f84:	mov	x7, x22
    9f88:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    9f8c:	mov	x19, x0
    9f90:	b	9e7c <PyNumber_FloorDivide@plt+0x524c>
    9f94:	and	w0, w0, #0xf0
    9f98:	cmp	w0, #0xe0
    9f9c:	b.eq	9fb4 <PyNumber_FloorDivide@plt+0x5384>  // b.none
    9fa0:	cmp	w0, #0xf0
    9fa4:	b.eq	9fc0 <PyNumber_FloorDivide@plt+0x5390>  // b.none
    9fa8:	add	x0, x6, #0xc
    9fac:	mov	x2, #0xc                   	// #12
    9fb0:	b	9ccc <PyNumber_FloorDivide@plt+0x509c>
    9fb4:	add	x0, x6, #0xd
    9fb8:	mov	x2, #0xd                   	// #13
    9fbc:	b	9ccc <PyNumber_FloorDivide@plt+0x509c>
    9fc0:	add	x0, x6, #0xe
    9fc4:	mov	x2, #0xe                   	// #14
    9fc8:	b	9ccc <PyNumber_FloorDivide@plt+0x509c>
    9fcc:	mov	x0, x23
    9fd0:	bl	4830 <_Py_Dealloc@plt>
    9fd4:	b	9f6c <PyNumber_FloorDivide@plt+0x533c>
    9fd8:	ldr	x23, [sp, #64]
    9fdc:	b	9da4 <PyNumber_FloorDivide@plt+0x5174>
    9fe0:	sub	sp, sp, #0xa0
    9fe4:	stp	x29, x30, [sp, #48]
    9fe8:	add	x29, sp, #0x30
    9fec:	ldr	x4, [x1, #16]
    9ff0:	stp	x21, x22, [sp, #80]
    9ff4:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
    9ff8:	stp	x19, x20, [sp, #64]
    9ffc:	sub	x5, x4, #0x1
    a000:	mov	x19, x1
    a004:	ldr	x3, [x21, #4024]
    a008:	stp	wzr, wzr, [sp, #132]
    a00c:	stp	wzr, wzr, [sp, #140]
    a010:	mov	x20, x0
    a014:	str	wzr, [sp, #148]
    a018:	mov	x1, x2
    a01c:	str	x3, [sp, #152]
    a020:	cmp	x5, #0x1
    a024:	b.hi	a054 <PyNumber_FloorDivide@plt+0x5424>  // b.pmore
    a028:	cmp	x4, #0x2
    a02c:	ldr	x22, [x19, #24]
    a030:	b.eq	a1b0 <PyNumber_FloorDivide@plt+0x5580>  // b.none
    a034:	ldr	x0, [x22, #8]
    a038:	ldr	x0, [x0, #168]
    a03c:	tbz	w0, #27, a0e0 <PyNumber_FloorDivide@plt+0x54b0>
    a040:	ldr	x0, [x22, #16]
    a044:	cmp	x0, #0xa
    a048:	b.eq	a1c8 <PyNumber_FloorDivide@plt+0x5598>  // b.none
    a04c:	ldr	x21, [x21, #4024]
    a050:	str	x21, [sp, #152]
    a054:	add	x4, sp, #0x94
    a058:	add	x5, sp, #0x98
    a05c:	add	x6, sp, #0x90
    a060:	add	x0, sp, #0x8c
    a064:	add	x2, sp, #0x88
    a068:	stp	x2, x0, [sp]
    a06c:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    a070:	stp	x6, x5, [sp, #16]
    a074:	add	x3, x3, #0xad0
    a078:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    a07c:	str	x4, [sp, #32]
    a080:	add	x3, x3, #0x380
    a084:	add	x7, sp, #0x84
    a088:	mov	x0, x19
    a08c:	add	x2, x2, #0x3d0
    a090:	add	x6, sp, #0x80
    a094:	add	x5, sp, #0x7c
    a098:	add	x4, sp, #0x78
    a09c:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    a0a0:	cbz	w0, a194 <PyNumber_FloorDivide@plt+0x5564>
    a0a4:	ldp	w6, w8, [sp, #144]
    a0a8:	str	w8, [sp]
    a0ac:	ldp	w0, w1, [sp, #120]
    a0b0:	str	x20, [sp, #8]
    a0b4:	ldp	w2, w3, [sp, #128]
    a0b8:	ldp	w4, w5, [sp, #136]
    a0bc:	ldr	x7, [sp, #152]
    a0c0:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    a0c4:	mov	x19, x0
    a0c8:	mov	x0, x19
    a0cc:	ldp	x29, x30, [sp, #48]
    a0d0:	ldp	x19, x20, [sp, #64]
    a0d4:	ldp	x21, x22, [sp, #80]
    a0d8:	add	sp, sp, #0xa0
    a0dc:	ret
    a0e0:	tbz	w0, #28, a04c <PyNumber_FloorDivide@plt+0x541c>
    a0e4:	ldrsb	w0, [x22, #32]
    a0e8:	tbz	w0, #31, a180 <PyNumber_FloorDivide@plt+0x5550>
    a0ec:	ldr	x0, [x22, #16]
    a0f0:	cmp	x0, #0xa
    a0f4:	b.ne	a04c <PyNumber_FloorDivide@plt+0x541c>  // b.any
    a0f8:	ldrb	w0, [x22, #32]
    a0fc:	and	w2, w0, #0x1c
    a100:	and	w3, w0, #0x20
    a104:	cmp	w2, #0x4
    a108:	b.eq	a1f4 <PyNumber_FloorDivide@plt+0x55c4>  // b.none
    a10c:	cmp	w2, #0x8
    a110:	b.eq	a220 <PyNumber_FloorDivide@plt+0x55f0>  // b.none
    a114:	cbz	w3, a24c <PyNumber_FloorDivide@plt+0x561c>
    a118:	tst	x0, #0x40
    a11c:	add	x2, x22, #0x50
    a120:	add	x0, x22, #0x38
    a124:	csel	x0, x2, x0, eq  // eq = none
    a128:	ldr	w0, [x0]
    a12c:	and	w0, w0, #0x7f
    a130:	sub	w0, w0, #0x1
    a134:	cmp	w0, #0xb
    a138:	cset	w0, ls  // ls = plast
    a13c:	cbz	w0, a04c <PyNumber_FloorDivide@plt+0x541c>
    a140:	mov	x0, x22
    a144:	bl	4980 <PyUnicode_AsLatin1String@plt>
    a148:	mov	x21, x0
    a14c:	cbz	x0, a270 <PyNumber_FloorDivide@plt+0x5640>
    a150:	ldr	x2, [sp, #152]
    a154:	mov	x1, x21
    a158:	mov	x0, x20
    a15c:	bl	9790 <PyNumber_FloorDivide@plt+0x4b60>
    a160:	mov	x19, x0
    a164:	ldr	x1, [x21]
    a168:	sub	x0, x1, #0x1
    a16c:	str	x0, [x21]
    a170:	cbnz	x0, a0c8 <PyNumber_FloorDivide@plt+0x5498>
    a174:	mov	x0, x21
    a178:	bl	4830 <_Py_Dealloc@plt>
    a17c:	b	a0c8 <PyNumber_FloorDivide@plt+0x5498>
    a180:	mov	x0, x22
    a184:	str	x1, [sp, #104]
    a188:	bl	4730 <_PyUnicode_Ready@plt>
    a18c:	ldr	x1, [sp, #104]
    a190:	cbz	w0, a0ec <PyNumber_FloorDivide@plt+0x54bc>
    a194:	mov	x19, #0x0                   	// #0
    a198:	mov	x0, x19
    a19c:	ldp	x29, x30, [sp, #48]
    a1a0:	ldp	x19, x20, [sp, #64]
    a1a4:	ldp	x21, x22, [sp, #80]
    a1a8:	add	sp, sp, #0xa0
    a1ac:	ret
    a1b0:	ldr	x0, [x22, #8]
    a1b4:	ldr	x3, [x19, #32]
    a1b8:	str	x3, [sp, #152]
    a1bc:	ldr	x0, [x0, #168]
    a1c0:	tbz	w0, #27, a0e0 <PyNumber_FloorDivide@plt+0x54b0>
    a1c4:	b	a040 <PyNumber_FloorDivide@plt+0x5410>
    a1c8:	ldrb	w0, [x22, #34]
    a1cc:	and	w0, w0, #0x7f
    a1d0:	sub	w0, w0, #0x1
    a1d4:	cmp	w0, #0xb
    a1d8:	b.hi	a04c <PyNumber_FloorDivide@plt+0x541c>  // b.pmore
    a1dc:	mov	x2, x3
    a1e0:	mov	x1, x22
    a1e4:	mov	x0, x20
    a1e8:	bl	9790 <PyNumber_FloorDivide@plt+0x4b60>
    a1ec:	mov	x19, x0
    a1f0:	b	a0c8 <PyNumber_FloorDivide@plt+0x5498>
    a1f4:	cbz	w3, a258 <PyNumber_FloorDivide@plt+0x5628>
    a1f8:	tst	x0, #0x40
    a1fc:	add	x2, x22, #0x32
    a200:	add	x0, x22, #0x4a
    a204:	csel	x0, x0, x2, eq  // eq = none
    a208:	ldrb	w0, [x0]
    a20c:	and	w0, w0, #0x7f
    a210:	sub	w0, w0, #0x1
    a214:	cmp	w0, #0xb
    a218:	cset	w0, ls  // ls = plast
    a21c:	b	a13c <PyNumber_FloorDivide@plt+0x550c>
    a220:	cbz	w3, a264 <PyNumber_FloorDivide@plt+0x5634>
    a224:	tst	x0, #0x40
    a228:	add	x2, x22, #0x34
    a22c:	add	x0, x22, #0x4c
    a230:	csel	x0, x0, x2, eq  // eq = none
    a234:	ldrh	w0, [x0]
    a238:	and	w0, w0, #0x7f
    a23c:	sub	w0, w0, #0x1
    a240:	cmp	w0, #0xb
    a244:	cset	w0, ls  // ls = plast
    a248:	b	a13c <PyNumber_FloorDivide@plt+0x550c>
    a24c:	ldr	x0, [x22, #72]
    a250:	add	x0, x0, #0x8
    a254:	b	a128 <PyNumber_FloorDivide@plt+0x54f8>
    a258:	ldr	x0, [x22, #72]
    a25c:	add	x0, x0, #0x2
    a260:	b	a208 <PyNumber_FloorDivide@plt+0x55d8>
    a264:	ldr	x0, [x22, #72]
    a268:	add	x0, x0, #0x4
    a26c:	b	a234 <PyNumber_FloorDivide@plt+0x5604>
    a270:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a274:	ldr	x0, [x0, #4032]
    a278:	ldr	x0, [x0]
    a27c:	bl	48c0 <PyErr_ExceptionMatches@plt>
    a280:	cbz	w0, a194 <PyNumber_FloorDivide@plt+0x5564>
    a284:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a288:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    a28c:	mov	x19, #0x0                   	// #0
    a290:	add	x1, x1, #0x358
    a294:	ldr	x0, [x0, #3968]
    a298:	ldr	x0, [x0]
    a29c:	bl	48a0 <PyErr_SetString@plt>
    a2a0:	b	a0c8 <PyNumber_FloorDivide@plt+0x5498>
    a2a4:	nop
    a2a8:	sub	sp, sp, #0x80
    a2ac:	stp	x29, x30, [sp, #48]
    a2b0:	add	x29, sp, #0x30
    a2b4:	stp	x19, x20, [sp, #64]
    a2b8:	mov	x19, x0
    a2bc:	mov	x0, x1
    a2c0:	mov	x1, x2
    a2c4:	ldrb	w2, [x19, #33]
    a2c8:	ldrb	w3, [x19, #32]
    a2cc:	ldrb	w6, [x19, #34]
    a2d0:	lsl	w2, w2, #8
    a2d4:	ldurh	w4, [x19, #25]
    a2d8:	orr	w3, w2, w3, lsl #16
    a2dc:	ldrb	w5, [x19, #24]
    a2e0:	orr	w3, w3, w6
    a2e4:	ldrb	w9, [x19, #27]
    a2e8:	ldrb	w8, [x19, #28]
    a2ec:	rev16	w4, w4
    a2f0:	ldrb	w7, [x19, #29]
    a2f4:	and	w4, w4, #0xffff
    a2f8:	ldrb	w6, [x19, #30]
    a2fc:	ldrb	w2, [x19, #31]
    a300:	stp	w4, w9, [sp, #88]
    a304:	stp	w8, w7, [sp, #96]
    a308:	stp	w6, w2, [sp, #104]
    a30c:	str	w3, [sp, #112]
    a310:	cbz	w5, a3ec <PyNumber_FloorDivide@plt+0x57bc>
    a314:	ldr	x8, [x19, #40]
    a318:	add	x4, sp, #0x74
    a31c:	add	x5, sp, #0x78
    a320:	add	x2, sp, #0x70
    a324:	add	x6, sp, #0x6c
    a328:	add	x3, sp, #0x68
    a32c:	stp	x3, x6, [sp]
    a330:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    a334:	add	x3, x3, #0xad0
    a338:	stp	x2, x5, [sp, #16]
    a33c:	add	x7, sp, #0x64
    a340:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    a344:	str	x4, [sp, #32]
    a348:	add	x3, x3, #0x380
    a34c:	add	x2, x2, #0x3e0
    a350:	add	x6, sp, #0x60
    a354:	ldrb	w9, [x19, #35]
    a358:	add	x5, sp, #0x5c
    a35c:	add	x4, sp, #0x58
    a360:	str	w9, [sp, #116]
    a364:	str	x8, [sp, #120]
    a368:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    a36c:	cbz	w0, a3f8 <PyNumber_FloorDivide@plt+0x57c8>
    a370:	ldr	w0, [sp, #116]
    a374:	cmp	w0, #0x1
    a378:	b.hi	a42c <PyNumber_FloorDivide@plt+0x57fc>  // b.pmore
    a37c:	ldp	w1, w2, [sp, #88]
    a380:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    a384:	ldp	w3, w4, [sp, #96]
    a388:	add	x0, x0, #0x348
    a38c:	ldp	w5, w6, [sp, #104]
    a390:	ldr	w7, [sp, #112]
    a394:	ldr	x8, [sp, #120]
    a398:	str	x8, [sp]
    a39c:	bl	49c0 <Py_BuildValue@plt>
    a3a0:	mov	x20, x0
    a3a4:	cbz	x0, a3f8 <PyNumber_FloorDivide@plt+0x57c8>
    a3a8:	mov	x1, x0
    a3ac:	mov	x2, #0x0                   	// #0
    a3b0:	ldr	x0, [x19, #8]
    a3b4:	bl	9fe0 <PyNumber_FloorDivide@plt+0x53b0>
    a3b8:	mov	x19, x0
    a3bc:	cbz	x0, a3c8 <PyNumber_FloorDivide@plt+0x5798>
    a3c0:	ldr	w0, [sp, #116]
    a3c4:	strb	w0, [x19, #35]
    a3c8:	ldr	x0, [x20]
    a3cc:	sub	x0, x0, #0x1
    a3d0:	str	x0, [x20]
    a3d4:	cbz	x0, a410 <PyNumber_FloorDivide@plt+0x57e0>
    a3d8:	mov	x0, x19
    a3dc:	ldp	x29, x30, [sp, #48]
    a3e0:	ldp	x19, x20, [sp, #64]
    a3e4:	add	sp, sp, #0x80
    a3e8:	ret
    a3ec:	adrp	x8, 28000 <PyInit__datetime@@Base+0x14f90>
    a3f0:	ldr	x8, [x8, #4024]
    a3f4:	b	a318 <PyNumber_FloorDivide@plt+0x56e8>
    a3f8:	mov	x19, #0x0                   	// #0
    a3fc:	mov	x0, x19
    a400:	ldp	x29, x30, [sp, #48]
    a404:	ldp	x19, x20, [sp, #64]
    a408:	add	sp, sp, #0x80
    a40c:	ret
    a410:	mov	x0, x20
    a414:	bl	4830 <_Py_Dealloc@plt>
    a418:	mov	x0, x19
    a41c:	ldp	x29, x30, [sp, #48]
    a420:	ldp	x19, x20, [sp, #64]
    a424:	add	sp, sp, #0x80
    a428:	ret
    a42c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a430:	mov	x19, #0x0                   	// #0
    a434:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    a438:	add	x1, x1, #0x40
    a43c:	ldr	x0, [x0, #3968]
    a440:	ldr	x0, [x0]
    a444:	bl	48a0 <PyErr_SetString@plt>
    a448:	mov	x0, x19
    a44c:	ldp	x29, x30, [sp, #48]
    a450:	ldp	x19, x20, [sp, #64]
    a454:	add	sp, sp, #0x80
    a458:	ret
    a45c:	nop
    a460:	sub	sp, sp, #0x50
    a464:	add	x3, sp, #0x48
    a468:	add	x7, sp, #0x40
    a46c:	add	x5, sp, #0x38
    a470:	stp	x29, x30, [sp, #16]
    a474:	add	x29, sp, #0x10
    a478:	str	x3, [sp]
    a47c:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    a480:	add	x3, x3, #0xad0
    a484:	stp	x19, x20, [sp, #32]
    a488:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    a48c:	add	x4, x19, #0x2a8
    a490:	mov	x20, x0
    a494:	add	x6, x4, #0x4e0
    a498:	mov	x0, x1
    a49c:	add	x4, x4, #0x680
    a4a0:	mov	x1, x2
    a4a4:	add	x3, x3, #0x3d0
    a4a8:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    a4ac:	add	x2, x2, #0x3f8
    a4b0:	str	xzr, [sp, #72]
    a4b4:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    a4b8:	cbz	w0, a588 <PyNumber_FloorDivide@plt+0x5958>
    a4bc:	ldp	x8, x9, [sp, #64]
    a4c0:	cbz	x9, a574 <PyNumber_FloorDivide@plt+0x5944>
    a4c4:	ldr	x2, [sp, #56]
    a4c8:	add	x19, x19, #0x2a8
    a4cc:	ldrb	w1, [x8, #29]
    a4d0:	add	x19, x19, #0x1a0
    a4d4:	ldrb	w6, [x8, #28]
    a4d8:	cmp	x20, x19
    a4dc:	ldurh	w0, [x2, #25]
    a4e0:	ldrb	w3, [x8, #30]
    a4e4:	lsl	w1, w1, #8
    a4e8:	orr	w6, w1, w6, lsl #16
    a4ec:	rev16	w0, w0
    a4f0:	ldrb	w1, [x2, #27]
    a4f4:	orr	w6, w6, w3
    a4f8:	ldrb	w4, [x8, #26]
    a4fc:	and	w0, w0, #0xffff
    a500:	ldrb	w3, [x8, #25]
    a504:	ldrb	w5, [x8, #27]
    a508:	ldrb	w2, [x2, #28]
    a50c:	b.eq	a550 <PyNumber_FloorDivide@plt+0x5920>  // b.none
    a510:	str	w6, [sp]
    a514:	mov	w7, w5
    a518:	str	x9, [sp, #8]
    a51c:	mov	w5, w3
    a520:	mov	w6, w4
    a524:	mov	w3, w1
    a528:	mov	w4, w2
    a52c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    a530:	mov	w2, w0
    a534:	add	x1, x1, #0x348
    a538:	mov	x0, x20
    a53c:	bl	4970 <PyObject_CallFunction@plt>
    a540:	ldp	x29, x30, [sp, #16]
    a544:	ldp	x19, x20, [sp, #32]
    a548:	add	sp, sp, #0x50
    a54c:	ret
    a550:	str	x20, [sp, #8]
    a554:	mov	x7, x9
    a558:	ldrb	w8, [x8, #31]
    a55c:	str	w8, [sp]
    a560:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    a564:	ldp	x29, x30, [sp, #16]
    a568:	ldp	x19, x20, [sp, #32]
    a56c:	add	sp, sp, #0x50
    a570:	ret
    a574:	ldrb	w0, [x8, #24]
    a578:	cbz	w0, a59c <PyNumber_FloorDivide@plt+0x596c>
    a57c:	ldr	x9, [x8, #32]
    a580:	str	x9, [sp, #72]
    a584:	b	a4c4 <PyNumber_FloorDivide@plt+0x5894>
    a588:	mov	x0, #0x0                   	// #0
    a58c:	ldp	x29, x30, [sp, #16]
    a590:	ldp	x19, x20, [sp, #32]
    a594:	add	sp, sp, #0x50
    a598:	ret
    a59c:	adrp	x9, 28000 <PyInit__datetime@@Base+0x14f90>
    a5a0:	ldr	x9, [x9, #4024]
    a5a4:	str	x9, [sp, #72]
    a5a8:	b	a4c4 <PyNumber_FloorDivide@plt+0x5894>
    a5ac:	nop
    a5b0:	stp	x29, x30, [sp, #-80]!
    a5b4:	mov	x29, sp
    a5b8:	stp	x21, x22, [sp, #32]
    a5bc:	mov	x22, x0
    a5c0:	ldr	x0, [x1, #8]
    a5c4:	stp	x19, x20, [sp, #16]
    a5c8:	mov	x19, x1
    a5cc:	stp	x23, x24, [sp, #48]
    a5d0:	mov	w24, w2
    a5d4:	str	x25, [sp, #64]
    a5d8:	adrp	x25, 29000 <PyInit__datetime@@Base+0x15f90>
    a5dc:	add	x1, x25, #0x2a8
    a5e0:	add	x1, x1, #0x4e0
    a5e4:	cmp	x0, x1
    a5e8:	b.eq	a5f4 <PyNumber_FloorDivide@plt+0x59c4>  // b.none
    a5ec:	bl	4b60 <PyType_IsSubtype@plt>
    a5f0:	cbz	w0, a7cc <PyNumber_FloorDivide@plt+0x5b9c>
    a5f4:	ldrb	w0, [x22, #24]
    a5f8:	ldrb	w1, [x19, #24]
    a5fc:	cbz	w0, a6a8 <PyNumber_FloorDivide@plt+0x5a78>
    a600:	ldr	x0, [x22, #32]
    a604:	cbnz	w1, a914 <PyNumber_FloorDivide@plt+0x5ce4>
    a608:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
    a60c:	ldr	x1, [x23, #4024]
    a610:	cmp	x0, x1
    a614:	b.eq	a934 <PyNumber_FloorDivide@plt+0x5d04>  // b.none
    a618:	ldr	x2, [x23, #4024]
    a61c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    a620:	add	x1, x1, #0xa38
    a624:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    a628:	mov	x20, x0
    a62c:	cbz	x0, a70c <PyNumber_FloorDivide@plt+0x5adc>
    a630:	ldrb	w1, [x19, #24]
    a634:	cbnz	w1, a6d8 <PyNumber_FloorDivide@plt+0x5aa8>
    a638:	ldr	x0, [x23, #4024]
    a63c:	mov	x21, x0
    a640:	ldr	x1, [x0]
    a644:	add	x1, x1, #0x1
    a648:	str	x1, [x0]
    a64c:	cmp	x20, x21
    a650:	b.eq	a774 <PyNumber_FloorDivide@plt+0x5b44>  // b.none
    a654:	ldr	x0, [x20, #8]
    a658:	add	x1, x25, #0x2a8
    a65c:	cmp	x0, x1
    a660:	b.eq	a72c <PyNumber_FloorDivide@plt+0x5afc>  // b.none
    a664:	bl	4b60 <PyType_IsSubtype@plt>
    a668:	cbnz	w0, a72c <PyNumber_FloorDivide@plt+0x5afc>
    a66c:	ldr	x23, [x23, #4024]
    a670:	cmp	x20, x23
    a674:	ccmp	x21, x23, #0x4, ne  // ne = any
    a678:	b.ne	a81c <PyNumber_FloorDivide@plt+0x5bec>  // b.any
    a67c:	cmp	w24, #0x2
    a680:	b.eq	a800 <PyNumber_FloorDivide@plt+0x5bd0>  // b.none
    a684:	cmp	w24, #0x3
    a688:	b.ne	a960 <PyNumber_FloorDivide@plt+0x5d30>  // b.any
    a68c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a690:	ldr	x0, [x0, #4040]
    a694:	mov	x19, x0
    a698:	ldr	x1, [x0]
    a69c:	add	x1, x1, #0x1
    a6a0:	str	x1, [x0]
    a6a4:	b	a790 <PyNumber_FloorDivide@plt+0x5b60>
    a6a8:	cbz	w1, a934 <PyNumber_FloorDivide@plt+0x5d04>
    a6ac:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
    a6b0:	ldr	x2, [x19, #32]
    a6b4:	ldr	x0, [x23, #4024]
    a6b8:	cmp	x2, x0
    a6bc:	b.eq	a934 <PyNumber_FloorDivide@plt+0x5d04>  // b.none
    a6c0:	ldr	x0, [x23, #4024]
    a6c4:	mov	x20, x0
    a6c8:	ldr	x2, [x0]
    a6cc:	add	x2, x2, #0x1
    a6d0:	str	x2, [x0]
    a6d4:	cbz	w1, a638 <PyNumber_FloorDivide@plt+0x5a08>
    a6d8:	ldr	x2, [x23, #4024]
    a6dc:	ldr	x0, [x19, #32]
    a6e0:	cmp	x0, x2
    a6e4:	b.eq	a638 <PyNumber_FloorDivide@plt+0x5a08>  // b.none
    a6e8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    a6ec:	add	x1, x1, #0xa38
    a6f0:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    a6f4:	mov	x21, x0
    a6f8:	cbnz	x0, a64c <PyNumber_FloorDivide@plt+0x5a1c>
    a6fc:	ldr	x0, [x20]
    a700:	sub	x0, x0, #0x1
    a704:	str	x0, [x20]
    a708:	cbz	x0, a980 <PyNumber_FloorDivide@plt+0x5d50>
    a70c:	mov	x19, #0x0                   	// #0
    a710:	mov	x0, x19
    a714:	ldp	x19, x20, [sp, #16]
    a718:	ldp	x21, x22, [sp, #32]
    a71c:	ldp	x23, x24, [sp, #48]
    a720:	ldr	x25, [sp, #64]
    a724:	ldp	x29, x30, [sp], #80
    a728:	ret
    a72c:	ldr	x0, [x21, #8]
    a730:	add	x1, x25, #0x2a8
    a734:	cmp	x0, x1
    a738:	b.eq	a744 <PyNumber_FloorDivide@plt+0x5b14>  // b.none
    a73c:	bl	4b60 <PyType_IsSubtype@plt>
    a740:	cbz	w0, a66c <PyNumber_FloorDivide@plt+0x5a3c>
    a744:	ldr	w1, [x20, #24]
    a748:	ldr	w0, [x21, #24]
    a74c:	cmp	w1, w0
    a750:	b.ne	a66c <PyNumber_FloorDivide@plt+0x5a3c>  // b.any
    a754:	ldr	w1, [x20, #28]
    a758:	ldr	w0, [x21, #28]
    a75c:	cmp	w1, w0
    a760:	b.ne	a66c <PyNumber_FloorDivide@plt+0x5a3c>  // b.any
    a764:	ldr	w1, [x20, #32]
    a768:	ldr	w0, [x21, #32]
    a76c:	cmp	w1, w0
    a770:	b.ne	a66c <PyNumber_FloorDivide@plt+0x5a3c>  // b.any
    a774:	mov	x2, #0x6                   	// #6
    a778:	add	x1, x19, #0x19
    a77c:	add	x0, x22, #0x19
    a780:	bl	4a10 <memcmp@plt>
    a784:	mov	w1, w24
    a788:	bl	55e8 <PyNumber_FloorDivide@plt+0x9b8>
    a78c:	mov	x19, x0
    a790:	ldr	x1, [x20]
    a794:	sub	x1, x1, #0x1
    a798:	str	x1, [x20]
    a79c:	cbz	x1, a8d8 <PyNumber_FloorDivide@plt+0x5ca8>
    a7a0:	ldr	x0, [x21]
    a7a4:	sub	x0, x0, #0x1
    a7a8:	str	x0, [x21]
    a7ac:	cbz	x0, a8f0 <PyNumber_FloorDivide@plt+0x5cc0>
    a7b0:	mov	x0, x19
    a7b4:	ldp	x19, x20, [sp, #16]
    a7b8:	ldp	x21, x22, [sp, #32]
    a7bc:	ldp	x23, x24, [sp, #48]
    a7c0:	ldr	x25, [sp, #64]
    a7c4:	ldp	x29, x30, [sp], #80
    a7c8:	ret
    a7cc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a7d0:	ldp	x21, x22, [sp, #32]
    a7d4:	ldr	x0, [x0, #3960]
    a7d8:	ldp	x23, x24, [sp, #48]
    a7dc:	mov	x19, x0
    a7e0:	ldr	x1, [x0]
    a7e4:	ldr	x25, [sp, #64]
    a7e8:	add	x1, x1, #0x1
    a7ec:	str	x1, [x0]
    a7f0:	mov	x0, x19
    a7f4:	ldp	x19, x20, [sp, #16]
    a7f8:	ldp	x29, x30, [sp], #80
    a7fc:	ret
    a800:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a804:	ldr	x0, [x0, #3992]
    a808:	mov	x19, x0
    a80c:	ldr	x1, [x0]
    a810:	add	x1, x1, #0x1
    a814:	str	x1, [x0]
    a818:	b	a790 <PyNumber_FloorDivide@plt+0x5b60>
    a81c:	ldrb	w1, [x22, #26]
    a820:	mov	w8, #0xe10                 	// #3600
    a824:	ldrb	w0, [x19, #26]
    a828:	mov	w7, #0xae80                	// #44672
    a82c:	ldrb	w2, [x22, #25]
    a830:	movk	w7, #0xfffe, lsl #16
    a834:	lsl	w4, w1, #4
    a838:	ldrb	w6, [x19, #25]
    a83c:	sub	w4, w4, w1
    a840:	lsl	w3, w0, #4
    a844:	sub	w3, w3, w0
    a848:	ldrb	w5, [x19, #27]
    a84c:	lsl	w4, w4, #2
    a850:	ldrb	w0, [x22, #27]
    a854:	lsl	w3, w3, #2
    a858:	sub	w0, w0, w5
    a85c:	madd	w2, w2, w8, w4
    a860:	madd	w3, w6, w8, w3
    a864:	ldp	w1, w4, [x20, #24]
    a868:	add	w0, w2, w0
    a86c:	ldp	w5, w9, [x21, #24]
    a870:	sub	w0, w0, w3
    a874:	madd	w0, w1, w7, w0
    a878:	msub	w2, w5, w7, w9
    a87c:	sub	w0, w0, w4
    a880:	adds	w0, w0, w2
    a884:	b.ne	a8bc <PyNumber_FloorDivide@plt+0x5c8c>  // b.any
    a888:	ldrb	w3, [x22, #29]
    a88c:	ldrb	w2, [x19, #29]
    a890:	ldrb	w0, [x22, #28]
    a894:	ldrb	w1, [x19, #28]
    a898:	lsl	w3, w3, #8
    a89c:	ldrb	w5, [x22, #30]
    a8a0:	lsl	w2, w2, #8
    a8a4:	ldrb	w4, [x19, #30]
    a8a8:	orr	w0, w3, w0, lsl #16
    a8ac:	orr	w1, w2, w1, lsl #16
    a8b0:	orr	w0, w0, w5
    a8b4:	orr	w1, w1, w4
    a8b8:	sub	w0, w0, w1
    a8bc:	mov	w1, w24
    a8c0:	bl	55e8 <PyNumber_FloorDivide@plt+0x9b8>
    a8c4:	ldr	x1, [x20]
    a8c8:	mov	x19, x0
    a8cc:	sub	x1, x1, #0x1
    a8d0:	str	x1, [x20]
    a8d4:	cbnz	x1, a7a0 <PyNumber_FloorDivide@plt+0x5b70>
    a8d8:	mov	x0, x20
    a8dc:	bl	4830 <_Py_Dealloc@plt>
    a8e0:	ldr	x0, [x21]
    a8e4:	sub	x0, x0, #0x1
    a8e8:	str	x0, [x21]
    a8ec:	cbnz	x0, a7b0 <PyNumber_FloorDivide@plt+0x5b80>
    a8f0:	mov	x0, x21
    a8f4:	bl	4830 <_Py_Dealloc@plt>
    a8f8:	mov	x0, x19
    a8fc:	ldp	x19, x20, [sp, #16]
    a900:	ldp	x21, x22, [sp, #32]
    a904:	ldp	x23, x24, [sp, #48]
    a908:	ldr	x25, [sp, #64]
    a90c:	ldp	x29, x30, [sp], #80
    a910:	ret
    a914:	ldr	x2, [x19, #32]
    a918:	cmp	x0, x2
    a91c:	b.eq	a934 <PyNumber_FloorDivide@plt+0x5d04>  // b.none
    a920:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
    a924:	ldr	x2, [x23, #4024]
    a928:	cmp	x0, x2
    a92c:	b.ne	a618 <PyNumber_FloorDivide@plt+0x59e8>  // b.any
    a930:	b	a6c0 <PyNumber_FloorDivide@plt+0x5a90>
    a934:	add	x1, x19, #0x19
    a938:	add	x0, x22, #0x19
    a93c:	mov	x2, #0x6                   	// #6
    a940:	bl	4a10 <memcmp@plt>
    a944:	mov	w1, w24
    a948:	ldp	x19, x20, [sp, #16]
    a94c:	ldp	x21, x22, [sp, #32]
    a950:	ldp	x23, x24, [sp, #48]
    a954:	ldr	x25, [sp, #64]
    a958:	ldp	x29, x30, [sp], #80
    a95c:	b	55e8 <PyNumber_FloorDivide@plt+0x9b8>
    a960:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    a964:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    a968:	mov	x19, #0x0                   	// #0
    a96c:	add	x1, x1, #0x408
    a970:	ldr	x0, [x0, #3976]
    a974:	ldr	x0, [x0]
    a978:	bl	48a0 <PyErr_SetString@plt>
    a97c:	b	a790 <PyNumber_FloorDivide@plt+0x5b60>
    a980:	mov	x0, x20
    a984:	mov	x19, #0x0                   	// #0
    a988:	bl	4830 <_Py_Dealloc@plt>
    a98c:	b	a7b0 <PyNumber_FloorDivide@plt+0x5b80>
    a990:	sub	sp, sp, #0x70
    a994:	mov	w2, #0x0                   	// #0
    a998:	stp	x29, x30, [sp, #16]
    a99c:	add	x29, sp, #0x10
    a9a0:	str	x19, [sp, #32]
    a9a4:	mov	x19, x0
    a9a8:	mov	x0, x1
    a9ac:	add	x1, sp, #0x30
    a9b0:	bl	4aa0 <_PyTime_ObjectToTime_t@plt>
    a9b4:	cmn	w0, #0x1
    a9b8:	b.eq	aa24 <PyNumber_FloorDivide@plt+0x5df4>  // b.none
    a9bc:	ldr	x0, [sp, #48]
    a9c0:	add	x1, sp, #0x38
    a9c4:	bl	4bf0 <_PyTime_localtime@plt>
    a9c8:	cbnz	w0, aa24 <PyNumber_FloorDivide@plt+0x5df4>
    a9cc:	ldp	w4, w1, [sp, #68]
    a9d0:	adrp	x5, 29000 <PyInit__datetime@@Base+0x15f90>
    a9d4:	ldr	w0, [sp, #76]
    a9d8:	add	x5, x5, #0x2a8
    a9dc:	add	x2, x5, #0x680
    a9e0:	add	w1, w1, #0x1
    a9e4:	cmp	x19, x2
    a9e8:	add	w0, w0, #0x76c
    a9ec:	b.eq	aa38 <PyNumber_FloorDivide@plt+0x5e08>  // b.none
    a9f0:	add	x5, x5, #0x1a0
    a9f4:	cmp	x19, x5
    a9f8:	b.eq	aa54 <PyNumber_FloorDivide@plt+0x5e24>  // b.none
    a9fc:	mov	w3, w1
    aa00:	mov	w2, w0
    aa04:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    aa08:	mov	x0, x19
    aa0c:	add	x1, x1, #0xa78
    aa10:	bl	4970 <PyObject_CallFunction@plt>
    aa14:	ldp	x29, x30, [sp, #16]
    aa18:	ldr	x19, [sp, #32]
    aa1c:	add	sp, sp, #0x70
    aa20:	ret
    aa24:	mov	x0, #0x0                   	// #0
    aa28:	ldp	x29, x30, [sp, #16]
    aa2c:	ldr	x19, [sp, #32]
    aa30:	add	sp, sp, #0x70
    aa34:	ret
    aa38:	mov	x3, x19
    aa3c:	mov	w2, w4
    aa40:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    aa44:	ldp	x29, x30, [sp, #16]
    aa48:	ldr	x19, [sp, #32]
    aa4c:	add	sp, sp, #0x70
    aa50:	ret
    aa54:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    aa58:	str	wzr, [sp]
    aa5c:	str	x19, [sp, #8]
    aa60:	mov	w2, w4
    aa64:	ldr	x7, [x7, #4024]
    aa68:	mov	w6, #0x0                   	// #0
    aa6c:	mov	w5, #0x0                   	// #0
    aa70:	mov	w4, #0x0                   	// #0
    aa74:	mov	w3, #0x0                   	// #0
    aa78:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    aa7c:	ldp	x29, x30, [sp, #16]
    aa80:	ldr	x19, [sp, #32]
    aa84:	add	sp, sp, #0x70
    aa88:	ret
    aa8c:	nop
    aa90:	stp	x29, x30, [sp, #-48]!
    aa94:	mov	x29, sp
    aa98:	stp	x19, x20, [sp, #16]
    aa9c:	ldrb	w1, [x0, #24]
    aaa0:	cbnz	w1, aacc <PyNumber_FloorDivide@plt+0x5e9c>
    aaa4:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    aaa8:	ldr	x1, [x1, #4024]
    aaac:	mov	x19, x1
    aab0:	ldr	x0, [x1]
    aab4:	add	x0, x0, #0x1
    aab8:	str	x0, [x1]
    aabc:	mov	x0, x19
    aac0:	ldp	x19, x20, [sp, #16]
    aac4:	ldp	x29, x30, [sp], #48
    aac8:	ret
    aacc:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    aad0:	ldr	x0, [x0, #32]
    aad4:	str	x21, [sp, #32]
    aad8:	ldr	x21, [x1, #4024]
    aadc:	cmp	x0, x21
    aae0:	b.eq	ac1c <PyNumber_FloorDivide@plt+0x5fec>  // b.none
    aae4:	adrp	x20, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    aae8:	add	x20, x20, #0xa08
    aaec:	mov	x1, x20
    aaf0:	mov	x3, x21
    aaf4:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    aaf8:	add	x2, x2, #0xcf0
    aafc:	bl	47a0 <PyObject_CallMethod@plt>
    ab00:	mov	x19, x0
    ab04:	cmp	x0, x21
    ab08:	b.eq	ab4c <PyNumber_FloorDivide@plt+0x5f1c>  // b.none
    ab0c:	cbz	x0, abb0 <PyNumber_FloorDivide@plt+0x5f80>
    ab10:	ldr	x0, [x0, #8]
    ab14:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    ab18:	add	x1, x1, #0x2a8
    ab1c:	cmp	x0, x1
    ab20:	b.eq	ab2c <PyNumber_FloorDivide@plt+0x5efc>  // b.none
    ab24:	bl	4b60 <PyType_IsSubtype@plt>
    ab28:	cbz	w0, abd4 <PyNumber_FloorDivide@plt+0x5fa4>
    ab2c:	ldr	x1, [x19, #24]
    ab30:	mov	x0, #0xffffffff            	// #4294967295
    ab34:	cmp	x1, x0
    ab38:	b.eq	ab60 <PyNumber_FloorDivide@plt+0x5f30>  // b.none
    ab3c:	ldr	w0, [x19, #24]
    ab40:	add	w0, w0, #0x1
    ab44:	cmp	w0, #0x1
    ab48:	b.hi	ab70 <PyNumber_FloorDivide@plt+0x5f40>  // b.pmore
    ab4c:	mov	x0, x19
    ab50:	ldp	x19, x20, [sp, #16]
    ab54:	ldr	x21, [sp, #32]
    ab58:	ldp	x29, x30, [sp], #48
    ab5c:	ret
    ab60:	ldr	w0, [x19, #32]
    ab64:	cmp	w0, #0x0
    ab68:	b.gt	ab3c <PyNumber_FloorDivide@plt+0x5f0c>
    ab6c:	nop
    ab70:	ldr	x0, [x19]
    ab74:	sub	x0, x0, #0x1
    ab78:	str	x0, [x19]
    ab7c:	cbz	x0, abc8 <PyNumber_FloorDivide@plt+0x5f98>
    ab80:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ab84:	mov	x19, #0x0                   	// #0
    ab88:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ab8c:	add	x1, x1, #0xcf8
    ab90:	ldr	x0, [x0, #3968]
    ab94:	ldr	x0, [x0]
    ab98:	bl	4b90 <PyErr_Format@plt>
    ab9c:	mov	x0, x19
    aba0:	ldp	x19, x20, [sp, #16]
    aba4:	ldr	x21, [sp, #32]
    aba8:	ldp	x29, x30, [sp], #48
    abac:	ret
    abb0:	mov	x19, #0x0                   	// #0
    abb4:	mov	x0, x19
    abb8:	ldp	x19, x20, [sp, #16]
    abbc:	ldr	x21, [sp, #32]
    abc0:	ldp	x29, x30, [sp], #48
    abc4:	ret
    abc8:	mov	x0, x19
    abcc:	bl	4830 <_Py_Dealloc@plt>
    abd0:	b	ab80 <PyNumber_FloorDivide@plt+0x5f50>
    abd4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    abd8:	mov	x2, x20
    abdc:	ldr	x3, [x19, #8]
    abe0:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    abe4:	ldr	x0, [x0, #3976]
    abe8:	add	x1, x1, #0xd58
    abec:	ldr	x3, [x3, #24]
    abf0:	ldr	x0, [x0]
    abf4:	bl	4b90 <PyErr_Format@plt>
    abf8:	ldr	x0, [x19]
    abfc:	sub	x0, x0, #0x1
    ac00:	str	x0, [x19]
    ac04:	cbnz	x0, abb0 <PyNumber_FloorDivide@plt+0x5f80>
    ac08:	mov	x0, x19
    ac0c:	mov	x19, #0x0                   	// #0
    ac10:	bl	4830 <_Py_Dealloc@plt>
    ac14:	ldr	x21, [sp, #32]
    ac18:	b	aabc <PyNumber_FloorDivide@plt+0x5e8c>
    ac1c:	ldr	x21, [sp, #32]
    ac20:	b	aaa8 <PyNumber_FloorDivide@plt+0x5e78>
    ac24:	nop
    ac28:	stp	x29, x30, [sp, #-48]!
    ac2c:	mov	x29, sp
    ac30:	stp	x19, x20, [sp, #16]
    ac34:	ldrb	w1, [x0, #24]
    ac38:	cbnz	w1, ac64 <PyNumber_FloorDivide@plt+0x6034>
    ac3c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    ac40:	ldr	x1, [x1, #4024]
    ac44:	mov	x19, x1
    ac48:	ldr	x0, [x1]
    ac4c:	add	x0, x0, #0x1
    ac50:	str	x0, [x1]
    ac54:	mov	x0, x19
    ac58:	ldp	x19, x20, [sp, #16]
    ac5c:	ldp	x29, x30, [sp], #48
    ac60:	ret
    ac64:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    ac68:	ldr	x0, [x0, #32]
    ac6c:	str	x21, [sp, #32]
    ac70:	ldr	x21, [x1, #4024]
    ac74:	cmp	x0, x21
    ac78:	b.eq	adb4 <PyNumber_FloorDivide@plt+0x6184>  // b.none
    ac7c:	adrp	x20, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ac80:	add	x20, x20, #0xa38
    ac84:	mov	x1, x20
    ac88:	mov	x3, x21
    ac8c:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ac90:	add	x2, x2, #0xcf0
    ac94:	bl	47a0 <PyObject_CallMethod@plt>
    ac98:	mov	x19, x0
    ac9c:	cmp	x0, x21
    aca0:	b.eq	ace4 <PyNumber_FloorDivide@plt+0x60b4>  // b.none
    aca4:	cbz	x0, ad48 <PyNumber_FloorDivide@plt+0x6118>
    aca8:	ldr	x0, [x0, #8]
    acac:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    acb0:	add	x1, x1, #0x2a8
    acb4:	cmp	x0, x1
    acb8:	b.eq	acc4 <PyNumber_FloorDivide@plt+0x6094>  // b.none
    acbc:	bl	4b60 <PyType_IsSubtype@plt>
    acc0:	cbz	w0, ad6c <PyNumber_FloorDivide@plt+0x613c>
    acc4:	ldr	x1, [x19, #24]
    acc8:	mov	x0, #0xffffffff            	// #4294967295
    accc:	cmp	x1, x0
    acd0:	b.eq	acf8 <PyNumber_FloorDivide@plt+0x60c8>  // b.none
    acd4:	ldr	w0, [x19, #24]
    acd8:	add	w0, w0, #0x1
    acdc:	cmp	w0, #0x1
    ace0:	b.hi	ad08 <PyNumber_FloorDivide@plt+0x60d8>  // b.pmore
    ace4:	mov	x0, x19
    ace8:	ldp	x19, x20, [sp, #16]
    acec:	ldr	x21, [sp, #32]
    acf0:	ldp	x29, x30, [sp], #48
    acf4:	ret
    acf8:	ldr	w0, [x19, #32]
    acfc:	cmp	w0, #0x0
    ad00:	b.gt	acd4 <PyNumber_FloorDivide@plt+0x60a4>
    ad04:	nop
    ad08:	ldr	x0, [x19]
    ad0c:	sub	x0, x0, #0x1
    ad10:	str	x0, [x19]
    ad14:	cbz	x0, ad60 <PyNumber_FloorDivide@plt+0x6130>
    ad18:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ad1c:	mov	x19, #0x0                   	// #0
    ad20:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ad24:	add	x1, x1, #0xcf8
    ad28:	ldr	x0, [x0, #3968]
    ad2c:	ldr	x0, [x0]
    ad30:	bl	4b90 <PyErr_Format@plt>
    ad34:	mov	x0, x19
    ad38:	ldp	x19, x20, [sp, #16]
    ad3c:	ldr	x21, [sp, #32]
    ad40:	ldp	x29, x30, [sp], #48
    ad44:	ret
    ad48:	mov	x19, #0x0                   	// #0
    ad4c:	mov	x0, x19
    ad50:	ldp	x19, x20, [sp, #16]
    ad54:	ldr	x21, [sp, #32]
    ad58:	ldp	x29, x30, [sp], #48
    ad5c:	ret
    ad60:	mov	x0, x19
    ad64:	bl	4830 <_Py_Dealloc@plt>
    ad68:	b	ad18 <PyNumber_FloorDivide@plt+0x60e8>
    ad6c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ad70:	mov	x2, x20
    ad74:	ldr	x3, [x19, #8]
    ad78:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ad7c:	ldr	x0, [x0, #3976]
    ad80:	add	x1, x1, #0xd58
    ad84:	ldr	x3, [x3, #24]
    ad88:	ldr	x0, [x0]
    ad8c:	bl	4b90 <PyErr_Format@plt>
    ad90:	ldr	x0, [x19]
    ad94:	sub	x0, x0, #0x1
    ad98:	str	x0, [x19]
    ad9c:	cbnz	x0, ad48 <PyNumber_FloorDivide@plt+0x6118>
    ada0:	mov	x0, x19
    ada4:	mov	x19, #0x0                   	// #0
    ada8:	bl	4830 <_Py_Dealloc@plt>
    adac:	ldr	x21, [sp, #32]
    adb0:	b	ac54 <PyNumber_FloorDivide@plt+0x6024>
    adb4:	ldr	x21, [sp, #32]
    adb8:	b	ac40 <PyNumber_FloorDivide@plt+0x6010>
    adbc:	nop
    adc0:	stp	x29, x30, [sp, #-48]!
    adc4:	mov	x3, x0
    adc8:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    adcc:	mov	x29, sp
    add0:	stp	x19, x20, [sp, #16]
    add4:	ldrb	w0, [x0, #24]
    add8:	cbnz	w0, ae00 <PyNumber_FloorDivide@plt+0x61d0>
    addc:	ldr	x1, [x1, #4024]
    ade0:	mov	x19, x1
    ade4:	ldr	x0, [x1]
    ade8:	add	x0, x0, #0x1
    adec:	str	x0, [x1]
    adf0:	mov	x0, x19
    adf4:	ldp	x19, x20, [sp, #16]
    adf8:	ldp	x29, x30, [sp], #48
    adfc:	ret
    ae00:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    ae04:	ldr	x0, [x3, #40]
    ae08:	str	x21, [sp, #32]
    ae0c:	ldr	x21, [x1, #4024]
    ae10:	cmp	x0, x21
    ae14:	b.eq	af4c <PyNumber_FloorDivide@plt+0x631c>  // b.none
    ae18:	adrp	x20, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ae1c:	add	x20, x20, #0xa08
    ae20:	mov	x1, x20
    ae24:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ae28:	add	x2, x2, #0xcf0
    ae2c:	bl	47a0 <PyObject_CallMethod@plt>
    ae30:	mov	x19, x0
    ae34:	cmp	x0, x21
    ae38:	b.eq	ae7c <PyNumber_FloorDivide@plt+0x624c>  // b.none
    ae3c:	cbz	x0, aee0 <PyNumber_FloorDivide@plt+0x62b0>
    ae40:	ldr	x0, [x0, #8]
    ae44:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    ae48:	add	x1, x1, #0x2a8
    ae4c:	cmp	x0, x1
    ae50:	b.eq	ae5c <PyNumber_FloorDivide@plt+0x622c>  // b.none
    ae54:	bl	4b60 <PyType_IsSubtype@plt>
    ae58:	cbz	w0, af04 <PyNumber_FloorDivide@plt+0x62d4>
    ae5c:	ldr	x1, [x19, #24]
    ae60:	mov	x0, #0xffffffff            	// #4294967295
    ae64:	cmp	x1, x0
    ae68:	b.eq	ae90 <PyNumber_FloorDivide@plt+0x6260>  // b.none
    ae6c:	ldr	w0, [x19, #24]
    ae70:	add	w0, w0, #0x1
    ae74:	cmp	w0, #0x1
    ae78:	b.hi	aea0 <PyNumber_FloorDivide@plt+0x6270>  // b.pmore
    ae7c:	mov	x0, x19
    ae80:	ldp	x19, x20, [sp, #16]
    ae84:	ldr	x21, [sp, #32]
    ae88:	ldp	x29, x30, [sp], #48
    ae8c:	ret
    ae90:	ldr	w0, [x19, #32]
    ae94:	cmp	w0, #0x0
    ae98:	b.gt	ae6c <PyNumber_FloorDivide@plt+0x623c>
    ae9c:	nop
    aea0:	ldr	x0, [x19]
    aea4:	sub	x0, x0, #0x1
    aea8:	str	x0, [x19]
    aeac:	cbz	x0, aef8 <PyNumber_FloorDivide@plt+0x62c8>
    aeb0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    aeb4:	mov	x19, #0x0                   	// #0
    aeb8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    aebc:	add	x1, x1, #0xcf8
    aec0:	ldr	x0, [x0, #3968]
    aec4:	ldr	x0, [x0]
    aec8:	bl	4b90 <PyErr_Format@plt>
    aecc:	mov	x0, x19
    aed0:	ldp	x19, x20, [sp, #16]
    aed4:	ldr	x21, [sp, #32]
    aed8:	ldp	x29, x30, [sp], #48
    aedc:	ret
    aee0:	mov	x19, #0x0                   	// #0
    aee4:	mov	x0, x19
    aee8:	ldp	x19, x20, [sp, #16]
    aeec:	ldr	x21, [sp, #32]
    aef0:	ldp	x29, x30, [sp], #48
    aef4:	ret
    aef8:	mov	x0, x19
    aefc:	bl	4830 <_Py_Dealloc@plt>
    af00:	b	aeb0 <PyNumber_FloorDivide@plt+0x6280>
    af04:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    af08:	mov	x2, x20
    af0c:	ldr	x3, [x19, #8]
    af10:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    af14:	ldr	x0, [x0, #3976]
    af18:	add	x1, x1, #0xd58
    af1c:	ldr	x3, [x3, #24]
    af20:	ldr	x0, [x0]
    af24:	bl	4b90 <PyErr_Format@plt>
    af28:	ldr	x0, [x19]
    af2c:	sub	x0, x0, #0x1
    af30:	str	x0, [x19]
    af34:	cbnz	x0, aee0 <PyNumber_FloorDivide@plt+0x62b0>
    af38:	mov	x0, x19
    af3c:	mov	x19, #0x0                   	// #0
    af40:	bl	4830 <_Py_Dealloc@plt>
    af44:	ldr	x21, [sp, #32]
    af48:	b	adf0 <PyNumber_FloorDivide@plt+0x61c0>
    af4c:	ldr	x21, [sp, #32]
    af50:	b	addc <PyNumber_FloorDivide@plt+0x61ac>
    af54:	nop
    af58:	stp	x29, x30, [sp, #-48]!
    af5c:	mov	x3, x0
    af60:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    af64:	mov	x29, sp
    af68:	stp	x19, x20, [sp, #16]
    af6c:	ldrb	w0, [x0, #24]
    af70:	cbnz	w0, af98 <PyNumber_FloorDivide@plt+0x6368>
    af74:	ldr	x1, [x1, #4024]
    af78:	mov	x19, x1
    af7c:	ldr	x0, [x1]
    af80:	add	x0, x0, #0x1
    af84:	str	x0, [x1]
    af88:	mov	x0, x19
    af8c:	ldp	x19, x20, [sp, #16]
    af90:	ldp	x29, x30, [sp], #48
    af94:	ret
    af98:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    af9c:	ldr	x0, [x3, #40]
    afa0:	str	x21, [sp, #32]
    afa4:	ldr	x21, [x1, #4024]
    afa8:	cmp	x0, x21
    afac:	b.eq	b0e4 <PyNumber_FloorDivide@plt+0x64b4>  // b.none
    afb0:	adrp	x20, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    afb4:	add	x20, x20, #0xa38
    afb8:	mov	x1, x20
    afbc:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    afc0:	add	x2, x2, #0xcf0
    afc4:	bl	47a0 <PyObject_CallMethod@plt>
    afc8:	mov	x19, x0
    afcc:	cmp	x0, x21
    afd0:	b.eq	b014 <PyNumber_FloorDivide@plt+0x63e4>  // b.none
    afd4:	cbz	x0, b078 <PyNumber_FloorDivide@plt+0x6448>
    afd8:	ldr	x0, [x0, #8]
    afdc:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    afe0:	add	x1, x1, #0x2a8
    afe4:	cmp	x0, x1
    afe8:	b.eq	aff4 <PyNumber_FloorDivide@plt+0x63c4>  // b.none
    afec:	bl	4b60 <PyType_IsSubtype@plt>
    aff0:	cbz	w0, b09c <PyNumber_FloorDivide@plt+0x646c>
    aff4:	ldr	x1, [x19, #24]
    aff8:	mov	x0, #0xffffffff            	// #4294967295
    affc:	cmp	x1, x0
    b000:	b.eq	b028 <PyNumber_FloorDivide@plt+0x63f8>  // b.none
    b004:	ldr	w0, [x19, #24]
    b008:	add	w0, w0, #0x1
    b00c:	cmp	w0, #0x1
    b010:	b.hi	b038 <PyNumber_FloorDivide@plt+0x6408>  // b.pmore
    b014:	mov	x0, x19
    b018:	ldp	x19, x20, [sp, #16]
    b01c:	ldr	x21, [sp, #32]
    b020:	ldp	x29, x30, [sp], #48
    b024:	ret
    b028:	ldr	w0, [x19, #32]
    b02c:	cmp	w0, #0x0
    b030:	b.gt	b004 <PyNumber_FloorDivide@plt+0x63d4>
    b034:	nop
    b038:	ldr	x0, [x19]
    b03c:	sub	x0, x0, #0x1
    b040:	str	x0, [x19]
    b044:	cbz	x0, b090 <PyNumber_FloorDivide@plt+0x6460>
    b048:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b04c:	mov	x19, #0x0                   	// #0
    b050:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b054:	add	x1, x1, #0xcf8
    b058:	ldr	x0, [x0, #3968]
    b05c:	ldr	x0, [x0]
    b060:	bl	4b90 <PyErr_Format@plt>
    b064:	mov	x0, x19
    b068:	ldp	x19, x20, [sp, #16]
    b06c:	ldr	x21, [sp, #32]
    b070:	ldp	x29, x30, [sp], #48
    b074:	ret
    b078:	mov	x19, #0x0                   	// #0
    b07c:	mov	x0, x19
    b080:	ldp	x19, x20, [sp, #16]
    b084:	ldr	x21, [sp, #32]
    b088:	ldp	x29, x30, [sp], #48
    b08c:	ret
    b090:	mov	x0, x19
    b094:	bl	4830 <_Py_Dealloc@plt>
    b098:	b	b048 <PyNumber_FloorDivide@plt+0x6418>
    b09c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b0a0:	mov	x2, x20
    b0a4:	ldr	x3, [x19, #8]
    b0a8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b0ac:	ldr	x0, [x0, #3976]
    b0b0:	add	x1, x1, #0xd58
    b0b4:	ldr	x3, [x3, #24]
    b0b8:	ldr	x0, [x0]
    b0bc:	bl	4b90 <PyErr_Format@plt>
    b0c0:	ldr	x0, [x19]
    b0c4:	sub	x0, x0, #0x1
    b0c8:	str	x0, [x19]
    b0cc:	cbnz	x0, b078 <PyNumber_FloorDivide@plt+0x6448>
    b0d0:	mov	x0, x19
    b0d4:	mov	x19, #0x0                   	// #0
    b0d8:	bl	4830 <_Py_Dealloc@plt>
    b0dc:	ldr	x21, [sp, #32]
    b0e0:	b	af88 <PyNumber_FloorDivide@plt+0x6358>
    b0e4:	ldr	x21, [sp, #32]
    b0e8:	b	af74 <PyNumber_FloorDivide@plt+0x6344>
    b0ec:	nop
    b0f0:	stp	x29, x30, [sp, #-48]!
    b0f4:	mov	x29, sp
    b0f8:	stp	x19, x20, [sp, #16]
    b0fc:	adrp	x20, 28000 <PyInit__datetime@@Base+0x14f90>
    b100:	ldr	x20, [x20, #4024]
    b104:	cmp	x0, x20
    b108:	b.eq	b18c <PyNumber_FloorDivide@plt+0x655c>  // b.none
    b10c:	str	x21, [sp, #32]
    b110:	adrp	x21, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b114:	add	x21, x21, #0xa38
    b118:	mov	x3, x1
    b11c:	adrp	x2, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b120:	mov	x1, x21
    b124:	add	x2, x2, #0xcf0
    b128:	bl	47a0 <PyObject_CallMethod@plt>
    b12c:	mov	x19, x0
    b130:	cmp	x0, x20
    b134:	b.eq	b178 <PyNumber_FloorDivide@plt+0x6548>  // b.none
    b138:	cbz	x0, b200 <PyNumber_FloorDivide@plt+0x65d0>
    b13c:	ldr	x0, [x0, #8]
    b140:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    b144:	add	x1, x1, #0x2a8
    b148:	cmp	x0, x1
    b14c:	b.eq	b158 <PyNumber_FloorDivide@plt+0x6528>  // b.none
    b150:	bl	4b60 <PyType_IsSubtype@plt>
    b154:	cbz	w0, b224 <PyNumber_FloorDivide@plt+0x65f4>
    b158:	ldr	x1, [x19, #24]
    b15c:	mov	x0, #0xffffffff            	// #4294967295
    b160:	cmp	x1, x0
    b164:	b.eq	b1b0 <PyNumber_FloorDivide@plt+0x6580>  // b.none
    b168:	ldr	w0, [x19, #24]
    b16c:	add	w0, w0, #0x1
    b170:	cmp	w0, #0x1
    b174:	b.hi	b1c0 <PyNumber_FloorDivide@plt+0x6590>  // b.pmore
    b178:	ldr	x21, [sp, #32]
    b17c:	mov	x0, x19
    b180:	ldp	x19, x20, [sp, #16]
    b184:	ldp	x29, x30, [sp], #48
    b188:	ret
    b18c:	mov	x2, x0
    b190:	mov	x19, x0
    b194:	ldr	x0, [x0]
    b198:	add	x0, x0, #0x1
    b19c:	str	x0, [x2]
    b1a0:	mov	x0, x19
    b1a4:	ldp	x19, x20, [sp, #16]
    b1a8:	ldp	x29, x30, [sp], #48
    b1ac:	ret
    b1b0:	ldr	w0, [x19, #32]
    b1b4:	cmp	w0, #0x0
    b1b8:	b.gt	b168 <PyNumber_FloorDivide@plt+0x6538>
    b1bc:	nop
    b1c0:	ldr	x0, [x19]
    b1c4:	sub	x0, x0, #0x1
    b1c8:	str	x0, [x19]
    b1cc:	cbz	x0, b218 <PyNumber_FloorDivide@plt+0x65e8>
    b1d0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b1d4:	mov	x19, #0x0                   	// #0
    b1d8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b1dc:	add	x1, x1, #0xcf8
    b1e0:	ldr	x0, [x0, #3968]
    b1e4:	ldr	x0, [x0]
    b1e8:	bl	4b90 <PyErr_Format@plt>
    b1ec:	mov	x0, x19
    b1f0:	ldp	x19, x20, [sp, #16]
    b1f4:	ldr	x21, [sp, #32]
    b1f8:	ldp	x29, x30, [sp], #48
    b1fc:	ret
    b200:	mov	x19, #0x0                   	// #0
    b204:	mov	x0, x19
    b208:	ldp	x19, x20, [sp, #16]
    b20c:	ldr	x21, [sp, #32]
    b210:	ldp	x29, x30, [sp], #48
    b214:	ret
    b218:	mov	x0, x19
    b21c:	bl	4830 <_Py_Dealloc@plt>
    b220:	b	b1d0 <PyNumber_FloorDivide@plt+0x65a0>
    b224:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b228:	mov	x2, x21
    b22c:	ldr	x3, [x19, #8]
    b230:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b234:	ldr	x0, [x0, #3976]
    b238:	add	x1, x1, #0xd58
    b23c:	ldr	x3, [x3, #24]
    b240:	ldr	x0, [x0]
    b244:	bl	4b90 <PyErr_Format@plt>
    b248:	ldr	x0, [x19]
    b24c:	sub	x0, x0, #0x1
    b250:	str	x0, [x19]
    b254:	cbnz	x0, b200 <PyNumber_FloorDivide@plt+0x65d0>
    b258:	mov	x0, x19
    b25c:	mov	x19, #0x0                   	// #0
    b260:	bl	4830 <_Py_Dealloc@plt>
    b264:	ldr	x21, [sp, #32]
    b268:	b	b17c <PyNumber_FloorDivide@plt+0x654c>
    b26c:	nop
    b270:	stp	x29, x30, [sp, #-32]!
    b274:	mov	w4, #0x270e                	// #9998
    b278:	mov	x29, sp
    b27c:	str	x19, [sp, #16]
    b280:	ldurh	w2, [x0, #25]
    b284:	ldrb	w1, [x0, #27]
    b288:	rev16	w2, w2
    b28c:	ldrb	w3, [x0, #28]
    b290:	and	w2, w2, #0xffff
    b294:	ldur	w19, [x0, #25]
    b298:	sub	w0, w2, #0x1
    b29c:	cmp	w0, w4
    b2a0:	b.hi	b38c <PyNumber_FloorDivide@plt+0x675c>  // b.pmore
    b2a4:	sub	w0, w1, #0x1
    b2a8:	cmp	w0, #0xb
    b2ac:	b.hi	b36c <PyNumber_FloorDivide@plt+0x673c>  // b.pmore
    b2b0:	cbz	w3, b34c <PyNumber_FloorDivide@plt+0x671c>
    b2b4:	cmp	w1, #0x2
    b2b8:	b.eq	b308 <PyNumber_FloorDivide@plt+0x66d8>  // b.none
    b2bc:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
    b2c0:	add	x0, x0, #0x810
    b2c4:	add	x0, x0, #0x40
    b2c8:	ldr	w0, [x0, w1, sxtw #2]
    b2cc:	cmp	w3, w0
    b2d0:	b.gt	b34c <PyNumber_FloorDivide@plt+0x671c>
    b2d4:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    b2d8:	add	x0, x0, #0x2a8
    b2dc:	add	x0, x0, #0x680
    b2e0:	mov	x1, #0x0                   	// #0
    b2e4:	ldr	x2, [x0, #304]
    b2e8:	blr	x2
    b2ec:	cbz	x0, b2fc <PyNumber_FloorDivide@plt+0x66cc>
    b2f0:	mov	x1, #0xffffffffffffffff    	// #-1
    b2f4:	str	x1, [x0, #16]
    b2f8:	stur	w19, [x0, #25]
    b2fc:	ldr	x19, [sp, #16]
    b300:	ldp	x29, x30, [sp], #32
    b304:	ret
    b308:	tst	x2, #0x3
    b30c:	b.ne	b2bc <PyNumber_FloorDivide@plt+0x668c>  // b.any
    b310:	mov	w5, #0x5c29                	// #23593
    b314:	mov	w4, #0x5c28                	// #23592
    b318:	movk	w5, #0xc28f, lsl #16
    b31c:	movk	w4, #0x28f, lsl #16
    b320:	mov	w0, #0x1d                  	// #29
    b324:	mul	w2, w2, w5
    b328:	ror	w5, w2, #2
    b32c:	cmp	w5, w4
    b330:	b.hi	b2cc <PyNumber_FloorDivide@plt+0x669c>  // b.pmore
    b334:	mov	w4, #0xd70a                	// #55050
    b338:	ror	w2, w2, #4
    b33c:	movk	w4, #0xa3, lsl #16
    b340:	cmp	w2, w4
    b344:	b.ls	b2cc <PyNumber_FloorDivide@plt+0x669c>  // b.plast
    b348:	b	b2bc <PyNumber_FloorDivide@plt+0x668c>
    b34c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b350:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b354:	add	x1, x1, #0xe08
    b358:	ldr	x0, [x0, #3968]
    b35c:	ldr	x0, [x0]
    b360:	bl	48a0 <PyErr_SetString@plt>
    b364:	mov	x0, #0x0                   	// #0
    b368:	b	b2fc <PyNumber_FloorDivide@plt+0x66cc>
    b36c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b370:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b374:	add	x1, x1, #0xdf0
    b378:	ldr	x0, [x0, #3968]
    b37c:	ldr	x0, [x0]
    b380:	bl	48a0 <PyErr_SetString@plt>
    b384:	mov	x0, #0x0                   	// #0
    b388:	b	b2fc <PyNumber_FloorDivide@plt+0x66cc>
    b38c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b390:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b394:	add	x1, x1, #0xdd8
    b398:	ldr	x0, [x0, #3968]
    b39c:	ldr	x0, [x0]
    b3a0:	bl	4b90 <PyErr_Format@plt>
    b3a4:	mov	x0, #0x0                   	// #0
    b3a8:	b	b2fc <PyNumber_FloorDivide@plt+0x66cc>
    b3ac:	nop
    b3b0:	sub	sp, sp, #0x80
    b3b4:	mov	x3, #0x1                   	// #1
    b3b8:	add	x4, sp, #0x38
    b3bc:	mov	x2, x3
    b3c0:	stp	x29, x30, [sp, #16]
    b3c4:	add	x29, sp, #0x10
    b3c8:	str	x19, [sp, #32]
    b3cc:	mov	x19, x0
    b3d0:	mov	x0, x1
    b3d4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    b3d8:	add	x1, x1, #0x440
    b3dc:	bl	49b0 <PyArg_UnpackTuple@plt>
    b3e0:	cbz	w0, b464 <PyNumber_FloorDivide@plt+0x6834>
    b3e4:	ldr	x0, [sp, #56]
    b3e8:	add	x1, sp, #0x40
    b3ec:	mov	w2, #0x0                   	// #0
    b3f0:	bl	4aa0 <_PyTime_ObjectToTime_t@plt>
    b3f4:	cmn	w0, #0x1
    b3f8:	b.eq	b464 <PyNumber_FloorDivide@plt+0x6834>  // b.none
    b3fc:	ldr	x0, [sp, #64]
    b400:	add	x1, sp, #0x48
    b404:	bl	4bf0 <_PyTime_localtime@plt>
    b408:	cbnz	w0, b464 <PyNumber_FloorDivide@plt+0x6834>
    b40c:	ldp	w4, w1, [sp, #84]
    b410:	adrp	x5, 29000 <PyInit__datetime@@Base+0x15f90>
    b414:	ldr	w0, [sp, #92]
    b418:	add	x5, x5, #0x2a8
    b41c:	add	x2, x5, #0x680
    b420:	add	w1, w1, #0x1
    b424:	cmp	x19, x2
    b428:	add	w0, w0, #0x76c
    b42c:	b.eq	b4a4 <PyNumber_FloorDivide@plt+0x6874>  // b.none
    b430:	add	x5, x5, #0x1a0
    b434:	cmp	x19, x5
    b438:	b.eq	b478 <PyNumber_FloorDivide@plt+0x6848>  // b.none
    b43c:	mov	w3, w1
    b440:	mov	w2, w0
    b444:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b448:	mov	x0, x19
    b44c:	add	x1, x1, #0xa78
    b450:	bl	4970 <PyObject_CallFunction@plt>
    b454:	ldp	x29, x30, [sp, #16]
    b458:	ldr	x19, [sp, #32]
    b45c:	add	sp, sp, #0x80
    b460:	ret
    b464:	mov	x0, #0x0                   	// #0
    b468:	ldp	x29, x30, [sp, #16]
    b46c:	ldr	x19, [sp, #32]
    b470:	add	sp, sp, #0x80
    b474:	ret
    b478:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    b47c:	str	wzr, [sp]
    b480:	str	x19, [sp, #8]
    b484:	mov	w2, w4
    b488:	ldr	x7, [x7, #4024]
    b48c:	mov	w6, #0x0                   	// #0
    b490:	mov	w5, #0x0                   	// #0
    b494:	mov	w4, #0x0                   	// #0
    b498:	mov	w3, #0x0                   	// #0
    b49c:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    b4a0:	b	b468 <PyNumber_FloorDivide@plt+0x6838>
    b4a4:	mov	x3, x19
    b4a8:	mov	w2, w4
    b4ac:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    b4b0:	b	b468 <PyNumber_FloorDivide@plt+0x6838>
    b4b4:	nop
    b4b8:	sub	sp, sp, #0x40
    b4bc:	add	x2, sp, #0x30
    b4c0:	stp	x29, x30, [sp, #16]
    b4c4:	add	x29, sp, #0x10
    b4c8:	str	x19, [sp, #32]
    b4cc:	mov	x19, x0
    b4d0:	mov	x0, x1
    b4d4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    b4d8:	add	x1, x1, #0x450
    b4dc:	bl	4a60 <PyArg_ParseTuple@plt>
    b4e0:	cbz	w0, b57c <PyNumber_FloorDivide@plt+0x694c>
    b4e4:	ldr	w0, [sp, #48]
    b4e8:	cmp	w0, #0x0
    b4ec:	b.le	b550 <PyNumber_FloorDivide@plt+0x6920>
    b4f0:	add	x3, sp, #0x3c
    b4f4:	add	x2, sp, #0x38
    b4f8:	add	x1, sp, #0x34
    b4fc:	bl	4d18 <PyNumber_FloorDivide@plt+0xe8>
    b500:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    b504:	add	x3, x3, #0x2a8
    b508:	add	x2, x3, #0x680
    b50c:	ldr	w4, [sp, #60]
    b510:	ldp	w0, w1, [sp, #52]
    b514:	cmp	x19, x2
    b518:	b.eq	b5c8 <PyNumber_FloorDivide@plt+0x6998>  // b.none
    b51c:	add	x3, x3, #0x1a0
    b520:	cmp	x19, x3
    b524:	b.eq	b590 <PyNumber_FloorDivide@plt+0x6960>  // b.none
    b528:	mov	w3, w1
    b52c:	mov	w2, w0
    b530:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b534:	mov	x0, x19
    b538:	add	x1, x1, #0xa78
    b53c:	bl	4970 <PyObject_CallFunction@plt>
    b540:	ldp	x29, x30, [sp, #16]
    b544:	ldr	x19, [sp, #32]
    b548:	add	sp, sp, #0x40
    b54c:	ret
    b550:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b554:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    b558:	add	x1, x1, #0x460
    b55c:	ldr	x0, [x0, #3968]
    b560:	ldr	x0, [x0]
    b564:	bl	48a0 <PyErr_SetString@plt>
    b568:	mov	x0, #0x0                   	// #0
    b56c:	ldp	x29, x30, [sp, #16]
    b570:	ldr	x19, [sp, #32]
    b574:	add	sp, sp, #0x40
    b578:	ret
    b57c:	mov	x0, #0x0                   	// #0
    b580:	ldp	x29, x30, [sp, #16]
    b584:	ldr	x19, [sp, #32]
    b588:	add	sp, sp, #0x40
    b58c:	ret
    b590:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    b594:	str	wzr, [sp]
    b598:	str	x19, [sp, #8]
    b59c:	mov	w2, w4
    b5a0:	ldr	x7, [x7, #4024]
    b5a4:	mov	w6, #0x0                   	// #0
    b5a8:	mov	w5, #0x0                   	// #0
    b5ac:	mov	w4, #0x0                   	// #0
    b5b0:	mov	w3, #0x0                   	// #0
    b5b4:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    b5b8:	ldp	x29, x30, [sp, #16]
    b5bc:	ldr	x19, [sp, #32]
    b5c0:	add	sp, sp, #0x40
    b5c4:	ret
    b5c8:	mov	x3, x19
    b5cc:	mov	w2, w4
    b5d0:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    b5d4:	b	b540 <PyNumber_FloorDivide@plt+0x6910>
    b5d8:	ldurh	w7, [x0, #25]
    b5dc:	mov	w1, #0x851f                	// #34079
    b5e0:	ldrb	w2, [x0, #27]
    b5e4:	movk	w1, #0x51eb, lsl #16
    b5e8:	rev16	w7, w7
    b5ec:	ldrb	w3, [x0, #28]
    b5f0:	and	w7, w7, #0xffff
    b5f4:	mov	w9, #0x16d                 	// #365
    b5f8:	subs	w0, w7, #0x1
    b5fc:	add	w4, w7, #0x2
    b600:	csel	w4, w4, w0, mi  // mi = first
    b604:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
    b608:	add	x5, x5, #0x810
    b60c:	add	w6, w3, #0x6
    b610:	asr	w4, w4, #2
    b614:	smull	x1, w0, w1
    b618:	cmp	w2, #0x2
    b61c:	ldr	w8, [x5, w2, sxtw #2]
    b620:	madd	w0, w0, w9, w4
    b624:	asr	x4, x1, #37
    b628:	asr	x1, x1, #39
    b62c:	add	w0, w0, w6
    b630:	sub	w1, w1, w4
    b634:	add	w0, w0, w1
    b638:	b.le	b668 <PyNumber_FloorDivide@plt+0x6a38>
    b63c:	tst	x7, #0x3
    b640:	b.ne	b668 <PyNumber_FloorDivide@plt+0x6a38>  // b.any
    b644:	mov	w1, #0x5c29                	// #23593
    b648:	mov	w4, #0x5c28                	// #23592
    b64c:	movk	w1, #0xc28f, lsl #16
    b650:	movk	w4, #0x28f, lsl #16
    b654:	mul	w1, w7, w1
    b658:	ror	w5, w1, #2
    b65c:	cmp	w5, w4
    b660:	b.ls	b6c8 <PyNumber_FloorDivide@plt+0x6a98>  // b.plast
    b664:	add	w8, w8, #0x1
    b668:	add	w8, w8, w0
    b66c:	mov	w1, #0x2493                	// #9363
    b670:	movk	w1, #0x9249, lsl #16
    b674:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b678:	add	x0, x0, #0xc10
    b67c:	sub	w2, w2, #0x1
    b680:	smull	x1, w8, w1
    b684:	add	x4, x0, #0xa0
    b688:	add	x9, x0, #0x100
    b68c:	mov	w6, #0x0                   	// #0
    b690:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    b694:	mov	w5, #0x0                   	// #0
    b698:	lsr	x1, x1, #32
    b69c:	add	x0, x0, #0x478
    b6a0:	add	w1, w8, w1
    b6a4:	ldr	x2, [x4, w2, sxtw #3]
    b6a8:	asr	w1, w1, #2
    b6ac:	sub	w1, w1, w8, asr #31
    b6b0:	mov	w4, #0x0                   	// #0
    b6b4:	lsl	w10, w1, #3
    b6b8:	sub	w1, w10, w1
    b6bc:	sub	w8, w8, w1
    b6c0:	ldr	x1, [x9, w8, sxtw #3]
    b6c4:	b	4720 <PyUnicode_FromFormat@plt>
    b6c8:	mov	w4, #0xd70a                	// #55050
    b6cc:	ror	w1, w1, #4
    b6d0:	movk	w4, #0xa3, lsl #16
    b6d4:	cmp	w1, w4
    b6d8:	b.hi	b668 <PyNumber_FloorDivide@plt+0x6a38>  // b.pmore
    b6dc:	add	w8, w8, #0x1
    b6e0:	b	b668 <PyNumber_FloorDivide@plt+0x6a38>
    b6e4:	nop
    b6e8:	ldurh	w7, [x0, #25]
    b6ec:	mov	w1, #0x851f                	// #34079
    b6f0:	movk	w1, #0x51eb, lsl #16
    b6f4:	mov	w12, #0x16d                 	// #365
    b6f8:	rev16	w7, w7
    b6fc:	ldrb	w9, [x0, #27]
    b700:	and	w7, w7, #0xffff
    b704:	ldrb	w3, [x0, #28]
    b708:	subs	w2, w7, #0x1
    b70c:	add	w10, w7, #0x2
    b710:	csel	w10, w10, w2, mi  // mi = first
    b714:	adrp	x8, 15000 <PyInit__datetime@@Base+0x1f90>
    b718:	add	x8, x8, #0x810
    b71c:	ldrb	w4, [x0, #29]
    b720:	asr	w10, w10, #2
    b724:	smull	x1, w2, w1
    b728:	ldrb	w5, [x0, #30]
    b72c:	add	w11, w3, #0x6
    b730:	ldrb	w6, [x0, #31]
    b734:	cmp	w9, #0x2
    b738:	madd	w2, w2, w12, w10
    b73c:	asr	x0, x1, #37
    b740:	asr	x1, x1, #39
    b744:	ldr	w8, [x8, w9, sxtw #2]
    b748:	add	w2, w2, w11
    b74c:	sub	w1, w1, w0
    b750:	add	w2, w2, w1
    b754:	b.le	b784 <PyNumber_FloorDivide@plt+0x6b54>
    b758:	tst	x7, #0x3
    b75c:	b.ne	b784 <PyNumber_FloorDivide@plt+0x6b54>  // b.any
    b760:	mov	w0, #0x5c29                	// #23593
    b764:	mov	w1, #0x5c28                	// #23592
    b768:	movk	w0, #0xc28f, lsl #16
    b76c:	movk	w1, #0x28f, lsl #16
    b770:	mul	w0, w7, w0
    b774:	ror	w10, w0, #2
    b778:	cmp	w10, w1
    b77c:	b.ls	b7d8 <PyNumber_FloorDivide@plt+0x6ba8>  // b.plast
    b780:	add	w8, w8, #0x1
    b784:	add	w8, w8, w2
    b788:	mov	w1, #0x2493                	// #9363
    b78c:	movk	w1, #0x9249, lsl #16
    b790:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b794:	add	x0, x0, #0xc10
    b798:	sub	w2, w9, #0x1
    b79c:	smull	x1, w8, w1
    b7a0:	add	x10, x0, #0xa0
    b7a4:	add	x9, x0, #0x100
    b7a8:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    b7ac:	add	x0, x0, #0x478
    b7b0:	lsr	x1, x1, #32
    b7b4:	add	w1, w8, w1
    b7b8:	ldr	x2, [x10, w2, sxtw #3]
    b7bc:	asr	w1, w1, #2
    b7c0:	sub	w1, w1, w8, asr #31
    b7c4:	lsl	w10, w1, #3
    b7c8:	sub	w1, w10, w1
    b7cc:	sub	w8, w8, w1
    b7d0:	ldr	x1, [x9, w8, sxtw #3]
    b7d4:	b	4720 <PyUnicode_FromFormat@plt>
    b7d8:	mov	w1, #0xd70a                	// #55050
    b7dc:	ror	w0, w0, #4
    b7e0:	movk	w1, #0xa3, lsl #16
    b7e4:	cmp	w0, w1
    b7e8:	b.hi	b784 <PyNumber_FloorDivide@plt+0x6b54>  // b.pmore
    b7ec:	add	w8, w8, #0x1
    b7f0:	b	b784 <PyNumber_FloorDivide@plt+0x6b54>
    b7f4:	nop
    b7f8:	ldurh	w1, [x0, #25]
    b7fc:	mov	w2, #0x851f                	// #34079
    b800:	movk	w2, #0x51eb, lsl #16
    b804:	ldrb	w6, [x0, #27]
    b808:	rev16	w1, w1
    b80c:	mov	w7, #0x16d                 	// #365
    b810:	and	w1, w1, #0xffff
    b814:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
    b818:	subs	w3, w1, #0x1
    b81c:	add	w4, w1, #0x2
    b820:	csel	w4, w4, w3, mi  // mi = first
    b824:	add	x5, x5, #0x810
    b828:	ldrb	w0, [x0, #28]
    b82c:	cmp	w6, #0x2
    b830:	smull	x2, w3, w2
    b834:	asr	w4, w4, #2
    b838:	ldr	w5, [x5, w6, sxtw #2]
    b83c:	madd	w3, w3, w7, w4
    b840:	asr	x4, x2, #37
    b844:	asr	x2, x2, #39
    b848:	sub	w2, w2, w4
    b84c:	add	w2, w3, w2
    b850:	b.le	b880 <PyNumber_FloorDivide@plt+0x6c50>
    b854:	tst	x1, #0x3
    b858:	b.ne	b880 <PyNumber_FloorDivide@plt+0x6c50>  // b.any
    b85c:	mov	w4, #0x5c29                	// #23593
    b860:	mov	w3, #0x5c28                	// #23592
    b864:	movk	w4, #0xc28f, lsl #16
    b868:	movk	w3, #0x28f, lsl #16
    b86c:	mul	w1, w1, w4
    b870:	ror	w4, w1, #2
    b874:	cmp	w4, w3
    b878:	b.ls	b890 <PyNumber_FloorDivide@plt+0x6c60>  // b.plast
    b87c:	add	w5, w5, #0x1
    b880:	add	w0, w0, w5
    b884:	add	w0, w0, w2
    b888:	sxtw	x0, w0
    b88c:	b	4920 <PyLong_FromLong@plt>
    b890:	mov	w3, #0xd70a                	// #55050
    b894:	ror	w1, w1, #4
    b898:	movk	w3, #0xa3, lsl #16
    b89c:	cmp	w1, w3
    b8a0:	b.hi	b880 <PyNumber_FloorDivide@plt+0x6c50>  // b.pmore
    b8a4:	add	w5, w5, #0x1
    b8a8:	b	b880 <PyNumber_FloorDivide@plt+0x6c50>
    b8ac:	nop
    b8b0:	sub	sp, sp, #0x50
    b8b4:	stp	x29, x30, [sp, #16]
    b8b8:	add	x29, sp, #0x10
    b8bc:	stp	x19, x20, [sp, #32]
    b8c0:	mov	x19, x1
    b8c4:	ldr	x1, [x1, #8]
    b8c8:	ldr	x1, [x1, #168]
    b8cc:	tbz	w1, #28, b9b8 <PyNumber_FloorDivide@plt+0x6d88>
    b8d0:	mov	x20, x0
    b8d4:	add	x1, sp, #0x48
    b8d8:	mov	x0, x19
    b8dc:	bl	4b70 <PyUnicode_AsUTF8AndSize@plt>
    b8e0:	cbz	x0, b95c <PyNumber_FloorDivide@plt+0x6d2c>
    b8e4:	ldr	x1, [sp, #72]
    b8e8:	stp	wzr, wzr, [sp, #60]
    b8ec:	str	wzr, [sp, #68]
    b8f0:	cmp	x1, #0xa
    b8f4:	b.ne	b95c <PyNumber_FloorDivide@plt+0x6d2c>  // b.any
    b8f8:	add	x3, sp, #0x44
    b8fc:	add	x2, sp, #0x40
    b900:	add	x1, sp, #0x3c
    b904:	bl	4eb0 <PyNumber_FloorDivide@plt+0x280>
    b908:	tbnz	w0, #31, b95c <PyNumber_FloorDivide@plt+0x6d2c>
    b90c:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    b910:	add	x3, x3, #0x2a8
    b914:	add	x1, x3, #0x680
    b918:	ldr	w4, [sp, #68]
    b91c:	cmp	x20, x1
    b920:	ldp	w0, w1, [sp, #60]
    b924:	b.eq	b9e4 <PyNumber_FloorDivide@plt+0x6db4>  // b.none
    b928:	add	x3, x3, #0x1a0
    b92c:	cmp	x20, x3
    b930:	b.eq	b98c <PyNumber_FloorDivide@plt+0x6d5c>  // b.none
    b934:	mov	w3, w1
    b938:	mov	w2, w0
    b93c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    b940:	mov	x0, x20
    b944:	add	x1, x1, #0xa78
    b948:	bl	4970 <PyObject_CallFunction@plt>
    b94c:	ldp	x29, x30, [sp, #16]
    b950:	ldp	x19, x20, [sp, #32]
    b954:	add	sp, sp, #0x50
    b958:	ret
    b95c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b960:	mov	x2, x19
    b964:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    b968:	add	x1, x1, #0xd8
    b96c:	ldr	x0, [x0, #3968]
    b970:	ldr	x0, [x0]
    b974:	bl	4b90 <PyErr_Format@plt>
    b978:	mov	x0, #0x0                   	// #0
    b97c:	ldp	x29, x30, [sp, #16]
    b980:	ldp	x19, x20, [sp, #32]
    b984:	add	sp, sp, #0x50
    b988:	ret
    b98c:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    b990:	str	wzr, [sp]
    b994:	str	x20, [sp, #8]
    b998:	mov	w2, w4
    b99c:	ldr	x7, [x7, #4024]
    b9a0:	mov	w6, #0x0                   	// #0
    b9a4:	mov	w5, #0x0                   	// #0
    b9a8:	mov	w4, #0x0                   	// #0
    b9ac:	mov	w3, #0x0                   	// #0
    b9b0:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    b9b4:	b	b97c <PyNumber_FloorDivide@plt+0x6d4c>
    b9b8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    b9bc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    b9c0:	add	x1, x1, #0xa8
    b9c4:	ldr	x0, [x0, #3976]
    b9c8:	ldr	x0, [x0]
    b9cc:	bl	48a0 <PyErr_SetString@plt>
    b9d0:	mov	x0, #0x0                   	// #0
    b9d4:	ldp	x29, x30, [sp, #16]
    b9d8:	ldp	x19, x20, [sp, #32]
    b9dc:	add	sp, sp, #0x50
    b9e0:	ret
    b9e4:	mov	x3, x20
    b9e8:	mov	w2, w4
    b9ec:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    b9f0:	b	b97c <PyNumber_FloorDivide@plt+0x6d4c>
    b9f4:	nop
    b9f8:	ldurh	w3, [x0, #25]
    b9fc:	mov	w1, #0x851f                	// #34079
    ba00:	movk	w1, #0x51eb, lsl #16
    ba04:	mov	w7, #0x16d                 	// #365
    ba08:	rev16	w3, w3
    ba0c:	ldrb	w5, [x0, #28]
    ba10:	and	w3, w3, #0xffff
    ba14:	ldrb	w0, [x0, #27]
    ba18:	subs	w2, w3, #0x1
    ba1c:	add	w4, w3, #0x2
    ba20:	csel	w4, w4, w2, mi  // mi = first
    ba24:	adrp	x6, 15000 <PyInit__datetime@@Base+0x1f90>
    ba28:	add	x6, x6, #0x810
    ba2c:	add	w5, w5, #0x6
    ba30:	asr	w4, w4, #2
    ba34:	smull	x1, w2, w1
    ba38:	cmp	w0, #0x2
    ba3c:	ldr	w0, [x6, w0, sxtw #2]
    ba40:	madd	w2, w2, w7, w4
    ba44:	asr	x4, x1, #37
    ba48:	asr	x1, x1, #39
    ba4c:	add	w2, w2, w5
    ba50:	sub	w1, w1, w4
    ba54:	add	w2, w2, w1
    ba58:	b.le	ba88 <PyNumber_FloorDivide@plt+0x6e58>
    ba5c:	tst	x3, #0x3
    ba60:	b.ne	ba88 <PyNumber_FloorDivide@plt+0x6e58>  // b.any
    ba64:	mov	w4, #0x5c29                	// #23593
    ba68:	mov	w1, #0x5c28                	// #23592
    ba6c:	movk	w4, #0xc28f, lsl #16
    ba70:	movk	w1, #0x28f, lsl #16
    ba74:	mul	w3, w3, w4
    ba78:	ror	w4, w3, #2
    ba7c:	cmp	w4, w1
    ba80:	b.ls	babc <PyNumber_FloorDivide@plt+0x6e8c>  // b.plast
    ba84:	add	w0, w0, #0x1
    ba88:	add	w2, w0, w2
    ba8c:	mov	w1, #0x2493                	// #9363
    ba90:	movk	w1, #0x9249, lsl #16
    ba94:	smull	x1, w2, w1
    ba98:	lsr	x1, x1, #32
    ba9c:	add	w1, w2, w1
    baa0:	asr	w1, w1, #2
    baa4:	sub	w1, w1, w2, asr #31
    baa8:	lsl	w0, w1, #3
    baac:	sub	w1, w0, w1
    bab0:	sub	w2, w2, w1
    bab4:	sxtw	x0, w2
    bab8:	b	4920 <PyLong_FromLong@plt>
    babc:	mov	w1, #0xd70a                	// #55050
    bac0:	ror	w3, w3, #4
    bac4:	movk	w1, #0xa3, lsl #16
    bac8:	cmp	w3, w1
    bacc:	b.hi	ba88 <PyNumber_FloorDivide@plt+0x6e58>  // b.pmore
    bad0:	add	w0, w0, #0x1
    bad4:	b	ba88 <PyNumber_FloorDivide@plt+0x6e58>
    bad8:	stp	x29, x30, [sp, #-32]!
    badc:	mov	w3, #0xc9ff                	// #51711
    bae0:	movk	w3, #0x3b9a, lsl #16
    bae4:	mov	x29, sp
    bae8:	ldr	w2, [x0, #24]
    baec:	mov	w1, #0x93fe                	// #37886
    baf0:	stp	x19, x20, [sp, #16]
    baf4:	movk	w1, #0x7735, lsl #16
    baf8:	add	w4, w2, w3
    bafc:	ldr	w20, [x0, #32]
    bb00:	cmp	w4, w1
    bb04:	ldr	x19, [x0, #24]
    bb08:	b.hi	bb3c <PyNumber_FloorDivide@plt+0x6f0c>  // b.pmore
    bb0c:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    bb10:	add	x0, x0, #0x2a8
    bb14:	mov	x1, #0x0                   	// #0
    bb18:	ldr	x2, [x0, #304]
    bb1c:	blr	x2
    bb20:	cbz	x0, bb30 <PyNumber_FloorDivide@plt+0x6f00>
    bb24:	mov	x1, #0xffffffffffffffff    	// #-1
    bb28:	stp	x1, x19, [x0, #16]
    bb2c:	str	w20, [x0, #32]
    bb30:	ldp	x19, x20, [sp, #16]
    bb34:	ldp	x29, x30, [sp], #32
    bb38:	ret
    bb3c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    bb40:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    bb44:	add	x1, x1, #0xa50
    bb48:	ldr	x0, [x0, #4008]
    bb4c:	ldr	x0, [x0]
    bb50:	bl	4b90 <PyErr_Format@plt>
    bb54:	mov	x0, #0x0                   	// #0
    bb58:	b	bb30 <PyNumber_FloorDivide@plt+0x6f00>
    bb5c:	nop
    bb60:	ldurh	w2, [x0, #25]
    bb64:	mov	w3, #0x851f                	// #34079
    bb68:	ldrb	w7, [x0, #27]
    bb6c:	movk	w3, #0x51eb, lsl #16
    bb70:	rev16	w2, w2
    bb74:	ldrb	w5, [x0, #28]
    bb78:	and	w2, w2, #0xffff
    bb7c:	mov	w8, #0x16d                 	// #365
    bb80:	subs	w0, w2, #0x1
    bb84:	add	w4, w2, #0x2
    bb88:	csel	w4, w4, w0, mi  // mi = first
    bb8c:	adrp	x6, 15000 <PyInit__datetime@@Base+0x1f90>
    bb90:	add	x6, x6, #0x810
    bb94:	add	w5, w5, #0x6
    bb98:	asr	w4, w4, #2
    bb9c:	smull	x3, w0, w3
    bba0:	cmp	w7, #0x2
    bba4:	ldr	w1, [x6, w7, sxtw #2]
    bba8:	madd	w0, w0, w8, w4
    bbac:	asr	x4, x3, #37
    bbb0:	asr	x3, x3, #39
    bbb4:	add	w0, w0, w5
    bbb8:	sub	w3, w3, w4
    bbbc:	add	w0, w0, w3
    bbc0:	b.le	bbf0 <PyNumber_FloorDivide@plt+0x6fc0>
    bbc4:	tst	x2, #0x3
    bbc8:	b.ne	bbf0 <PyNumber_FloorDivide@plt+0x6fc0>  // b.any
    bbcc:	mov	w4, #0x5c29                	// #23593
    bbd0:	mov	w3, #0x5c28                	// #23592
    bbd4:	movk	w4, #0xc28f, lsl #16
    bbd8:	movk	w3, #0x28f, lsl #16
    bbdc:	mul	w2, w2, w4
    bbe0:	ror	w4, w2, #2
    bbe4:	cmp	w4, w3
    bbe8:	b.ls	bc28 <PyNumber_FloorDivide@plt+0x6ff8>  // b.plast
    bbec:	add	w1, w1, #0x1
    bbf0:	add	w1, w1, w0
    bbf4:	mov	w0, #0x2493                	// #9363
    bbf8:	movk	w0, #0x9249, lsl #16
    bbfc:	smull	x0, w1, w0
    bc00:	lsr	x0, x0, #32
    bc04:	add	w0, w1, w0
    bc08:	asr	w0, w0, #2
    bc0c:	sub	w0, w0, w1, asr #31
    bc10:	lsl	w2, w0, #3
    bc14:	sub	w0, w2, w0
    bc18:	sub	w0, w1, w0
    bc1c:	add	w0, w0, #0x1
    bc20:	sxtw	x0, w0
    bc24:	b	4920 <PyLong_FromLong@plt>
    bc28:	mov	w3, #0xd70a                	// #55050
    bc2c:	ror	w2, w2, #4
    bc30:	movk	w3, #0xa3, lsl #16
    bc34:	cmp	w2, w3
    bc38:	b.hi	bbf0 <PyNumber_FloorDivide@plt+0x6fc0>  // b.pmore
    bc3c:	add	w1, w1, #0x1
    bc40:	b	bbf0 <PyNumber_FloorDivide@plt+0x6fc0>
    bc44:	nop
    bc48:	mov	x2, #0xffffffffffffb780    	// #-18560
    bc4c:	stp	x29, x30, [sp, #-80]!
    bc50:	movk	x2, #0x886c, lsl #16
    bc54:	movk	x2, #0xfff1, lsl #32
    bc58:	mov	x29, sp
    bc5c:	add	x1, sp, #0x18
    bc60:	add	x0, x0, x2
    bc64:	bl	4bf0 <_PyTime_localtime@plt>
    bc68:	cbnz	w0, bd58 <PyNumber_FloorDivide@plt+0x7128>
    bc6c:	ldr	w2, [sp, #44]
    bc70:	mov	w0, #0x270e                	// #9998
    bc74:	ldp	w3, w5, [sp, #36]
    bc78:	add	w4, w2, #0x76b
    bc7c:	cmp	w4, w0
    bc80:	add	w2, w2, #0x76c
    bc84:	ldp	w6, w7, [sp, #28]
    bc88:	add	w5, w5, #0x1
    bc8c:	ldr	w0, [sp, #24]
    bc90:	b.hi	bd60 <PyNumber_FloorDivide@plt+0x7130>  // b.pmore
    bc94:	mov	w1, #0x851f                	// #34079
    bc98:	asr	w9, w4, #2
    bc9c:	movk	w1, #0x51eb, lsl #16
    bca0:	mov	w10, #0x16d                 	// #365
    bca4:	adrp	x8, 15000 <PyInit__datetime@@Base+0x1f90>
    bca8:	add	x8, x8, #0x810
    bcac:	smull	x1, w4, w1
    bcb0:	cmp	w5, #0x2
    bcb4:	madd	w4, w4, w10, w9
    bcb8:	ldr	w5, [x8, w5, sxtw #2]
    bcbc:	asr	x9, x1, #37
    bcc0:	asr	x1, x1, #39
    bcc4:	sub	w1, w1, w9
    bcc8:	add	w1, w1, w4
    bccc:	b.le	bd00 <PyNumber_FloorDivide@plt+0x70d0>
    bcd0:	tst	x2, #0x3
    bcd4:	b.ne	bd00 <PyNumber_FloorDivide@plt+0x70d0>  // b.any
    bcd8:	mov	w8, #0x5c29                	// #23593
    bcdc:	mov	w4, #0x5c28                	// #23592
    bce0:	movk	w8, #0xc28f, lsl #16
    bce4:	movk	w4, #0x28f, lsl #16
    bce8:	mul	w2, w2, w8
    bcec:	ror	w8, w2, #2
    bcf0:	cmp	w8, w4
    bcf4:	b.ls	bd3c <PyNumber_FloorDivide@plt+0x710c>  // b.plast
    bcf8:	add	w5, w5, #0x1
    bcfc:	nop
    bd00:	add	w3, w3, w5
    bd04:	sxtw	x7, w7
    bd08:	add	w1, w3, w1
    bd0c:	mov	w2, #0x18                  	// #24
    bd10:	sxtw	x6, w6
    bd14:	sxtw	x3, w0
    bd18:	smaddl	x1, w1, w2, x7
    bd1c:	lsl	x2, x1, #4
    bd20:	sub	x1, x2, x1
    bd24:	add	x1, x6, x1, lsl #2
    bd28:	lsl	x0, x1, #4
    bd2c:	sub	x1, x0, x1
    bd30:	add	x0, x3, x1, lsl #2
    bd34:	ldp	x29, x30, [sp], #80
    bd38:	ret
    bd3c:	mov	w4, #0xd70a                	// #55050
    bd40:	ror	w2, w2, #4
    bd44:	movk	w4, #0xa3, lsl #16
    bd48:	cmp	w2, w4
    bd4c:	b.hi	bd00 <PyNumber_FloorDivide@plt+0x70d0>  // b.pmore
    bd50:	add	w5, w5, #0x1
    bd54:	b	bd00 <PyNumber_FloorDivide@plt+0x70d0>
    bd58:	mov	x0, #0xffffffffffffffff    	// #-1
    bd5c:	b	bd34 <PyNumber_FloorDivide@plt+0x7104>
    bd60:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    bd64:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    bd68:	add	x1, x1, #0xdd8
    bd6c:	ldr	x0, [x0, #3968]
    bd70:	ldr	x0, [x0]
    bd74:	bl	4b90 <PyErr_Format@plt>
    bd78:	mov	x0, #0xffffffffffffffff    	// #-1
    bd7c:	b	bd34 <PyNumber_FloorDivide@plt+0x7104>
    bd80:	sub	sp, sp, #0x40
    bd84:	mov	x2, x0
    bd88:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    bd8c:	add	x0, x1, #0x580
    bd90:	stp	x29, x30, [sp, #16]
    bd94:	add	x29, sp, #0x10
    bd98:	stp	x19, x20, [sp, #32]
    bd9c:	stp	x21, x22, [sp, #48]
    bda0:	ldurh	w20, [x2, #25]
    bda4:	ldrb	w22, [x2, #28]
    bda8:	ldrb	w21, [x2, #27]
    bdac:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    bdb0:	cbz	x0, bfe4 <PyNumber_FloorDivide@plt+0x73b4>
    bdb4:	rev16	w20, w20
    bdb8:	mov	x19, x0
    bdbc:	and	w20, w20, #0xffff
    bdc0:	mov	w1, #0x851f                	// #34079
    bdc4:	subs	w0, w20, #0x1
    bdc8:	add	w2, w20, #0x2
    bdcc:	csel	w2, w2, w0, mi  // mi = first
    bdd0:	movk	w1, #0x51eb, lsl #16
    bdd4:	mov	w5, #0x16d                 	// #365
    bdd8:	adrp	x3, 15000 <PyInit__datetime@@Base+0x1f90>
    bddc:	smull	x1, w0, w1
    bde0:	asr	w2, w2, #2
    bde4:	add	x3, x3, #0x810
    bde8:	add	w4, w22, #0x6
    bdec:	cmp	w21, #0x2
    bdf0:	madd	w0, w0, w5, w2
    bdf4:	asr	x5, x1, #37
    bdf8:	asr	x2, x1, #39
    bdfc:	ldr	w1, [x3, w21, sxtw #2]
    be00:	sub	w2, w2, w5
    be04:	add	w0, w0, w2
    be08:	add	w2, w0, w1
    be0c:	b.gt	bed0 <PyNumber_FloorDivide@plt+0x72a0>
    be10:	add	w0, w4, w2
    be14:	mov	w7, #0x2493                	// #9363
    be18:	movk	w7, #0x9249, lsl #16
    be1c:	smull	x7, w0, w7
    be20:	lsr	x7, x7, #32
    be24:	add	w7, w0, w7
    be28:	asr	w7, w7, #2
    be2c:	sub	w7, w7, w0, asr #31
    be30:	lsl	w2, w7, #3
    be34:	sub	w7, w2, w7
    be38:	sub	w7, w0, w7
    be3c:	add	w1, w22, w1
    be40:	mov	w0, #0xffffffff            	// #-1
    be44:	str	w1, [sp]
    be48:	mov	w3, w22
    be4c:	str	w0, [sp, #8]
    be50:	mov	w1, w20
    be54:	mov	w2, w21
    be58:	mov	w6, #0x0                   	// #0
    be5c:	mov	w5, #0x0                   	// #0
    be60:	mov	w4, #0x0                   	// #0
    be64:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    be68:	add	x0, x0, #0x288
    be6c:	bl	49c0 <Py_BuildValue@plt>
    be70:	mov	x20, x0
    be74:	cbz	x0, bfd4 <PyNumber_FloorDivide@plt+0x73a4>
    be78:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    be7c:	add	x1, x1, #0xad0
    be80:	add	x1, x1, #0x3f0
    be84:	mov	x2, x0
    be88:	mov	x3, #0x0                   	// #0
    be8c:	mov	x0, x19
    be90:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    be94:	mov	x21, x0
    be98:	ldr	x1, [x19]
    be9c:	sub	x1, x1, #0x1
    bea0:	str	x1, [x19]
    bea4:	cbz	x1, bf8c <PyNumber_FloorDivide@plt+0x735c>
    bea8:	ldr	x1, [x20]
    beac:	sub	x1, x1, #0x1
    beb0:	str	x1, [x20]
    beb4:	cbz	x1, bf6c <PyNumber_FloorDivide@plt+0x733c>
    beb8:	mov	x0, x21
    bebc:	ldp	x29, x30, [sp, #16]
    bec0:	ldp	x19, x20, [sp, #32]
    bec4:	ldp	x21, x22, [sp, #48]
    bec8:	add	sp, sp, #0x40
    becc:	ret
    bed0:	tst	x20, #0x3
    bed4:	b.ne	be10 <PyNumber_FloorDivide@plt+0x71e0>  // b.any
    bed8:	mov	w3, #0x5c29                	// #23593
    bedc:	mov	w5, #0x5c28                	// #23592
    bee0:	movk	w3, #0xc28f, lsl #16
    bee4:	movk	w5, #0x28f, lsl #16
    bee8:	mul	w3, w20, w3
    beec:	ror	w6, w3, #2
    bef0:	cmp	w6, w5
    bef4:	b.hi	bf98 <PyNumber_FloorDivide@plt+0x7368>  // b.pmore
    bef8:	mov	w5, #0xd70a                	// #55050
    befc:	ror	w3, w3, #4
    bf00:	movk	w5, #0xa3, lsl #16
    bf04:	cmp	w3, w5
    bf08:	b.hi	c000 <PyNumber_FloorDivide@plt+0x73d0>  // b.pmore
    bf0c:	add	w2, w1, #0x1
    bf10:	mov	w7, #0x2493                	// #9363
    bf14:	add	w0, w2, w0
    bf18:	movk	w7, #0x9249, lsl #16
    bf1c:	add	w0, w0, w4
    bf20:	smull	x7, w0, w7
    bf24:	lsr	x7, x7, #32
    bf28:	add	w7, w0, w7
    bf2c:	asr	w7, w7, #2
    bf30:	sub	w7, w7, w0, asr #31
    bf34:	lsl	w2, w7, #3
    bf38:	sub	w7, w2, w7
    bf3c:	mov	w2, #0xd70a                	// #55050
    bf40:	sub	w7, w0, w7
    bf44:	mov	w0, #0x5c29                	// #23593
    bf48:	movk	w0, #0xc28f, lsl #16
    bf4c:	movk	w2, #0xa3, lsl #16
    bf50:	mul	w0, w20, w0
    bf54:	ror	w0, w0, #4
    bf58:	cmp	w0, w2
    bf5c:	b.hi	be3c <PyNumber_FloorDivide@plt+0x720c>  // b.pmore
    bf60:	add	w2, w1, #0x1
    bf64:	mov	w1, w2
    bf68:	b	be3c <PyNumber_FloorDivide@plt+0x720c>
    bf6c:	mov	x0, x20
    bf70:	bl	4830 <_Py_Dealloc@plt>
    bf74:	mov	x0, x21
    bf78:	ldp	x29, x30, [sp, #16]
    bf7c:	ldp	x19, x20, [sp, #32]
    bf80:	ldp	x21, x22, [sp, #48]
    bf84:	add	sp, sp, #0x40
    bf88:	ret
    bf8c:	mov	x0, x19
    bf90:	bl	4830 <_Py_Dealloc@plt>
    bf94:	b	bea8 <PyNumber_FloorDivide@plt+0x7278>
    bf98:	add	w2, w1, #0x1
    bf9c:	mov	w7, #0x2493                	// #9363
    bfa0:	add	w0, w2, w0
    bfa4:	movk	w7, #0x9249, lsl #16
    bfa8:	add	w0, w0, w4
    bfac:	smull	x7, w0, w7
    bfb0:	lsr	x7, x7, #32
    bfb4:	add	w7, w0, w7
    bfb8:	asr	w7, w7, #2
    bfbc:	sub	w7, w7, w0, asr #31
    bfc0:	lsl	w1, w7, #3
    bfc4:	sub	w7, w1, w7
    bfc8:	mov	w1, w2
    bfcc:	sub	w7, w0, w7
    bfd0:	b	be3c <PyNumber_FloorDivide@plt+0x720c>
    bfd4:	ldr	x0, [x19]
    bfd8:	sub	x0, x0, #0x1
    bfdc:	str	x0, [x19]
    bfe0:	cbz	x0, c010 <PyNumber_FloorDivide@plt+0x73e0>
    bfe4:	mov	x21, #0x0                   	// #0
    bfe8:	mov	x0, x21
    bfec:	ldp	x29, x30, [sp, #16]
    bff0:	ldp	x19, x20, [sp, #32]
    bff4:	ldp	x21, x22, [sp, #48]
    bff8:	add	sp, sp, #0x40
    bffc:	ret
    c000:	mov	w7, #0x2493                	// #9363
    c004:	add	w0, w4, w2
    c008:	movk	w7, #0x9249, lsl #16
    c00c:	b	bf20 <PyNumber_FloorDivide@plt+0x72f0>
    c010:	mov	x0, x19
    c014:	mov	x21, #0x0                   	// #0
    c018:	bl	4830 <_Py_Dealloc@plt>
    c01c:	b	beb8 <PyNumber_FloorDivide@plt+0x7288>
    c020:	mov	x1, x0
    c024:	ldr	x0, [x0, #24]
    c028:	cbz	x0, c03c <PyNumber_FloorDivide@plt+0x740c>
    c02c:	ldr	x1, [x0]
    c030:	add	x1, x1, #0x1
    c034:	str	x1, [x0]
    c038:	ret
    c03c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x16f90>
    c040:	ldr	x0, [x0, #4056]
    c044:	cmp	x1, x0
    c048:	b.eq	c1bc <PyNumber_FloorDivide@plt+0x758c>  // b.none
    c04c:	stp	x29, x30, [sp, #-48]!
    c050:	mov	x29, sp
    c054:	ldr	x0, [x1, #16]
    c058:	ldr	x1, [x0, #24]
    c05c:	str	x21, [sp, #32]
    c060:	ldr	w21, [x0, #32]
    c064:	cbnz	x1, c06c <PyNumber_FloorDivide@plt+0x743c>
    c068:	cbz	w21, c13c <PyNumber_FloorDivide@plt+0x750c>
    c06c:	stp	x19, x20, [sp, #16]
    c070:	ldp	w3, w19, [x0, #24]
    c074:	tbnz	w3, #31, c158 <PyNumber_FloorDivide@plt+0x7528>
    c078:	ldr	x3, [x0]
    c07c:	mov	w20, #0x2b                  	// #43
    c080:	add	x1, x3, #0x1
    c084:	str	x1, [x0]
    c088:	str	x3, [x0]
    c08c:	cbz	x3, c150 <PyNumber_FloorDivide@plt+0x7520>
    c090:	mov	w3, #0x8889                	// #34953
    c094:	movk	w3, #0x8888, lsl #16
    c098:	smull	x3, w19, w3
    c09c:	lsr	x3, x3, #32
    c0a0:	add	w3, w19, w3
    c0a4:	asr	w3, w3, #5
    c0a8:	sub	w3, w3, w19, asr #31
    c0ac:	lsl	w4, w3, #4
    c0b0:	sub	w4, w4, w3
    c0b4:	subs	w4, w19, w4, lsl #2
    c0b8:	b.mi	c118 <PyNumber_FloorDivide@plt+0x74e8>  // b.first
    c0bc:	mov	w2, #0x8889                	// #34953
    c0c0:	movk	w2, #0x8888, lsl #16
    c0c4:	smull	x2, w3, w2
    c0c8:	lsr	x2, x2, #32
    c0cc:	add	w2, w3, w2
    c0d0:	asr	w2, w2, #5
    c0d4:	sub	w2, w2, w3, asr #31
    c0d8:	lsl	w0, w2, #4
    c0dc:	sub	w0, w0, w2
    c0e0:	subs	w3, w3, w0, lsl #2
    c0e4:	b.mi	c10c <PyNumber_FloorDivide@plt+0x74dc>  // b.first
    c0e8:	cbnz	w21, c19c <PyNumber_FloorDivide@plt+0x756c>
    c0ec:	mov	w1, w20
    c0f0:	cbnz	w4, c124 <PyNumber_FloorDivide@plt+0x74f4>
    c0f4:	ldp	x19, x20, [sp, #16]
    c0f8:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c0fc:	ldr	x21, [sp, #32]
    c100:	add	x0, x0, #0xf88
    c104:	ldp	x29, x30, [sp], #48
    c108:	b	4720 <PyUnicode_FromFormat@plt>
    c10c:	sub	w2, w2, #0x1
    c110:	add	w3, w3, #0x3c
    c114:	b	c0e8 <PyNumber_FloorDivide@plt+0x74b8>
    c118:	sub	w3, w3, #0x1
    c11c:	add	w4, w4, #0x3c
    c120:	b	c0bc <PyNumber_FloorDivide@plt+0x748c>
    c124:	ldp	x19, x20, [sp, #16]
    c128:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c12c:	ldr	x21, [sp, #32]
    c130:	add	x0, x0, #0xf70
    c134:	ldp	x29, x30, [sp], #48
    c138:	b	4720 <PyUnicode_FromFormat@plt>
    c13c:	ldr	x21, [sp, #32]
    c140:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c144:	ldp	x29, x30, [sp], #48
    c148:	add	x0, x0, #0xf48
    c14c:	b	4b00 <PyUnicode_FromString@plt>
    c150:	bl	4830 <_Py_Dealloc@plt>
    c154:	b	c090 <PyNumber_FloorDivide@plt+0x7460>
    c158:	neg	w0, w3
    c15c:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
    c160:	neg	w2, w21
    c164:	neg	w1, w19
    c168:	add	x4, x4, #0x2a8
    c16c:	mov	w3, #0x1                   	// #1
    c170:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
    c174:	cbz	x0, c18c <PyNumber_FloorDivide@plt+0x755c>
    c178:	ldr	x3, [x0]
    c17c:	mov	w20, #0x2d                  	// #45
    c180:	ldp	w19, w21, [x0, #28]
    c184:	sub	x3, x3, #0x1
    c188:	b	c088 <PyNumber_FloorDivide@plt+0x7458>
    c18c:	ldp	x19, x20, [sp, #16]
    c190:	ldr	x21, [sp, #32]
    c194:	ldp	x29, x30, [sp], #48
    c198:	ret
    c19c:	mov	w5, w21
    c1a0:	mov	w1, w20
    c1a4:	ldp	x19, x20, [sp, #16]
    c1a8:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c1ac:	ldr	x21, [sp, #32]
    c1b0:	add	x0, x0, #0xf50
    c1b4:	ldp	x29, x30, [sp], #48
    c1b8:	b	4720 <PyUnicode_FromFormat@plt>
    c1bc:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c1c0:	add	x0, x0, #0xf48
    c1c4:	b	4b00 <PyUnicode_FromString@plt>
    c1c8:	stp	x29, x30, [sp, #-80]!
    c1cc:	sub	w8, w0, #0x1
    c1d0:	mov	x29, sp
    c1d4:	stp	x19, x20, [sp, #16]
    c1d8:	mov	w20, w6
    c1dc:	mov	w6, #0x270e                	// #9998
    c1e0:	stp	x21, x22, [sp, #32]
    c1e4:	cmp	w8, w6
    c1e8:	stp	x23, x24, [sp, #48]
    c1ec:	b.hi	c3c0 <PyNumber_FloorDivide@plt+0x7790>  // b.pmore
    c1f0:	mov	w7, #0x851f                	// #34079
    c1f4:	asr	w9, w8, #2
    c1f8:	movk	w7, #0x51eb, lsl #16
    c1fc:	mov	w10, #0x16d                 	// #365
    c200:	adrp	x6, 15000 <PyInit__datetime@@Base+0x1f90>
    c204:	add	x6, x6, #0x810
    c208:	smull	x7, w8, w7
    c20c:	cmp	w1, #0x2
    c210:	madd	w8, w8, w10, w9
    c214:	ldr	w1, [x6, w1, sxtw #2]
    c218:	asr	x9, x7, #37
    c21c:	asr	x7, x7, #39
    c220:	sub	w7, w7, w9
    c224:	add	w7, w7, w8
    c228:	b.gt	c2e8 <PyNumber_FloorDivide@plt+0x76b8>
    c22c:	add	w2, w2, w1
    c230:	sxtw	x3, w3
    c234:	add	w7, w2, w7
    c238:	mov	w0, #0x18                  	// #24
    c23c:	sxtw	x21, w4
    c240:	sxtw	x5, w5
    c244:	smaddl	x7, w7, w0, x3
    c248:	lsl	x0, x7, #4
    c24c:	sub	x7, x0, x7
    c250:	add	x7, x21, x7, lsl #2
    c254:	lsl	x21, x7, #4
    c258:	sub	x21, x21, x7
    c25c:	add	x21, x5, x21, lsl #2
    c260:	mov	x0, x21
    c264:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
    c268:	mov	x22, x0
    c26c:	cmn	x0, #0x1
    c270:	b.eq	c3b8 <PyNumber_FloorDivide@plt+0x7788>  // b.none
    c274:	lsl	x19, x21, #1
    c278:	sub	x24, x19, x0
    c27c:	mov	x0, x24
    c280:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
    c284:	mov	x23, x0
    c288:	cmn	x0, #0x1
    c28c:	b.eq	c3b8 <PyNumber_FloorDivide@plt+0x7788>  // b.none
    c290:	sub	x19, x22, x19
    c294:	cmp	x0, x21
    c298:	add	x19, x19, x0
    c29c:	b.eq	c334 <PyNumber_FloorDivide@plt+0x7704>  // b.none
    c2a0:	sub	x19, x21, x19
    c2a4:	mov	x0, x19
    c2a8:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
    c2ac:	cmn	x0, #0x1
    c2b0:	b.eq	c3b8 <PyNumber_FloorDivide@plt+0x7788>  // b.none
    c2b4:	cmp	x0, x21
    c2b8:	b.eq	c394 <PyNumber_FloorDivide@plt+0x7764>  // b.none
    c2bc:	cmp	x23, x21
    c2c0:	b.eq	c2d0 <PyNumber_FloorDivide@plt+0x76a0>  // b.none
    c2c4:	cmp	x24, x19
    c2c8:	cbz	w20, c318 <PyNumber_FloorDivide@plt+0x76e8>
    c2cc:	csel	x24, x24, x19, le
    c2d0:	mov	x0, x24
    c2d4:	ldp	x19, x20, [sp, #16]
    c2d8:	ldp	x21, x22, [sp, #32]
    c2dc:	ldp	x23, x24, [sp, #48]
    c2e0:	ldp	x29, x30, [sp], #80
    c2e4:	ret
    c2e8:	tst	x0, #0x3
    c2ec:	b.ne	c22c <PyNumber_FloorDivide@plt+0x75fc>  // b.any
    c2f0:	mov	w8, #0x5c29                	// #23593
    c2f4:	mov	w6, #0x5c28                	// #23592
    c2f8:	movk	w8, #0xc28f, lsl #16
    c2fc:	movk	w6, #0x28f, lsl #16
    c300:	mul	w0, w0, w8
    c304:	ror	w8, w0, #2
    c308:	cmp	w8, w6
    c30c:	b.ls	c378 <PyNumber_FloorDivide@plt+0x7748>  // b.plast
    c310:	add	w1, w1, #0x1
    c314:	b	c22c <PyNumber_FloorDivide@plt+0x75fc>
    c318:	csel	x24, x24, x19, ge  // ge = tcont
    c31c:	mov	x0, x24
    c320:	ldp	x19, x20, [sp, #16]
    c324:	ldp	x21, x22, [sp, #32]
    c328:	ldp	x23, x24, [sp, #48]
    c32c:	ldp	x29, x30, [sp], #80
    c330:	ret
    c334:	cmp	w20, #0x0
    c338:	mov	x1, #0x5180                	// #20864
    c33c:	movk	x1, #0x1, lsl #16
    c340:	sub	x19, x24, x1
    c344:	str	x25, [sp, #64]
    c348:	add	x25, x24, x1
    c34c:	csel	x25, x19, x25, eq  // eq = none
    c350:	mov	x0, x25
    c354:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
    c358:	cmn	x0, #0x1
    c35c:	b.eq	c3b0 <PyNumber_FloorDivide@plt+0x7780>  // b.none
    c360:	sub	x19, x0, x25
    c364:	sub	x22, x22, x21
    c368:	cmp	x22, x19
    c36c:	ldr	x25, [sp, #64]
    c370:	b.ne	c2a0 <PyNumber_FloorDivide@plt+0x7670>  // b.any
    c374:	b	c2d0 <PyNumber_FloorDivide@plt+0x76a0>
    c378:	mov	w6, #0xd70a                	// #55050
    c37c:	ror	w0, w0, #4
    c380:	movk	w6, #0xa3, lsl #16
    c384:	cmp	w0, w6
    c388:	b.hi	c22c <PyNumber_FloorDivide@plt+0x75fc>  // b.pmore
    c38c:	add	w1, w1, #0x1
    c390:	b	c22c <PyNumber_FloorDivide@plt+0x75fc>
    c394:	mov	x24, x19
    c398:	mov	x0, x24
    c39c:	ldp	x19, x20, [sp, #16]
    c3a0:	ldp	x21, x22, [sp, #32]
    c3a4:	ldp	x23, x24, [sp, #48]
    c3a8:	ldp	x29, x30, [sp], #80
    c3ac:	ret
    c3b0:	ldr	x25, [sp, #64]
    c3b4:	nop
    c3b8:	mov	x24, #0xffffffffffffffff    	// #-1
    c3bc:	b	c2d0 <PyNumber_FloorDivide@plt+0x76a0>
    c3c0:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    c3c4:	mov	w2, w0
    c3c8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c3cc:	mov	x21, #0xffffffffffffffff    	// #-1
    c3d0:	ldr	x0, [x3, #3968]
    c3d4:	add	x1, x1, #0xdd8
    c3d8:	ldr	x0, [x0]
    c3dc:	bl	4b90 <PyErr_Format@plt>
    c3e0:	b	c260 <PyNumber_FloorDivide@plt+0x7630>
    c3e4:	nop
    c3e8:	sub	sp, sp, #0x70
    c3ec:	stp	x29, x30, [sp, #16]
    c3f0:	add	x29, sp, #0x10
    c3f4:	stp	x19, x20, [sp, #32]
    c3f8:	mov	x19, x0
    c3fc:	stp	x21, x22, [sp, #48]
    c400:	stp	x25, x26, [sp, #80]
    c404:	ldrb	w0, [x0, #24]
    c408:	cbz	w0, c46c <PyNumber_FloorDivide@plt+0x783c>
    c40c:	adrp	x20, 28000 <PyInit__datetime@@Base+0x14f90>
    c410:	ldr	x0, [x19, #40]
    c414:	ldr	x20, [x20, #4024]
    c418:	cmp	x0, x20
    c41c:	b.eq	c46c <PyNumber_FloorDivide@plt+0x783c>  // b.none
    c420:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c424:	mov	x2, x19
    c428:	add	x1, x1, #0xa08
    c42c:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    c430:	cbz	x0, c6b0 <PyNumber_FloorDivide@plt+0x7a80>
    c434:	stp	x23, x24, [sp, #64]
    c438:	cmp	x0, x20
    c43c:	mov	w26, #0xffffffff            	// #-1
    c440:	str	x27, [sp, #96]
    c444:	b.eq	c454 <PyNumber_FloorDivide@plt+0x7824>  // b.none
    c448:	ldr	x1, [x0, #24]
    c44c:	mov	w26, #0x1                   	// #1
    c450:	cbz	x1, c6d0 <PyNumber_FloorDivide@plt+0x7aa0>
    c454:	ldr	x1, [x0]
    c458:	sub	x1, x1, #0x1
    c45c:	str	x1, [x0]
    c460:	cbnz	x1, c478 <PyNumber_FloorDivide@plt+0x7848>
    c464:	bl	4830 <_Py_Dealloc@plt>
    c468:	b	c478 <PyNumber_FloorDivide@plt+0x7848>
    c46c:	mov	w26, #0xffffffff            	// #-1
    c470:	stp	x23, x24, [sp, #64]
    c474:	str	x27, [sp, #96]
    c478:	ldurh	w20, [x19, #25]
    c47c:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    c480:	ldrb	w22, [x19, #28]
    c484:	add	x0, x0, #0x580
    c488:	rev16	w20, w20
    c48c:	ldrb	w21, [x19, #27]
    c490:	ldrb	w23, [x19, #29]
    c494:	and	w20, w20, #0xffff
    c498:	ldrb	w24, [x19, #30]
    c49c:	add	w27, w22, #0x6
    c4a0:	ldrb	w25, [x19, #31]
    c4a4:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    c4a8:	mov	x19, x0
    c4ac:	cbz	x0, c6a8 <PyNumber_FloorDivide@plt+0x7a78>
    c4b0:	subs	w0, w20, #0x1
    c4b4:	add	w1, w20, #0x2
    c4b8:	mov	w2, #0x851f                	// #34079
    c4bc:	csel	w1, w1, w0, mi  // mi = first
    c4c0:	movk	w2, #0x51eb, lsl #16
    c4c4:	mov	w4, #0x16d                 	// #365
    c4c8:	asr	w1, w1, #2
    c4cc:	adrp	x3, 15000 <PyInit__datetime@@Base+0x1f90>
    c4d0:	smull	x2, w0, w2
    c4d4:	add	x3, x3, #0x810
    c4d8:	cmp	w21, #0x2
    c4dc:	madd	w1, w0, w4, w1
    c4e0:	asr	x4, x2, #37
    c4e4:	asr	x2, x2, #39
    c4e8:	sub	w2, w2, w4
    c4ec:	ldr	w0, [x3, w21, sxtw #2]
    c4f0:	add	w1, w1, w2
    c4f4:	add	w2, w1, w0
    c4f8:	b.gt	c5c4 <PyNumber_FloorDivide@plt+0x7994>
    c4fc:	add	w27, w27, w2
    c500:	mov	w7, #0x2493                	// #9363
    c504:	movk	w7, #0x9249, lsl #16
    c508:	smull	x7, w27, w7
    c50c:	lsr	x7, x7, #32
    c510:	add	w7, w27, w7
    c514:	asr	w7, w7, #2
    c518:	sub	w7, w7, w27, asr #31
    c51c:	lsl	w1, w7, #3
    c520:	sub	w7, w1, w7
    c524:	sub	w7, w27, w7
    c528:	add	w0, w22, w0
    c52c:	str	w0, [sp]
    c530:	str	w26, [sp, #8]
    c534:	mov	w1, w20
    c538:	mov	w6, w25
    c53c:	mov	w5, w24
    c540:	mov	w4, w23
    c544:	mov	w3, w22
    c548:	mov	w2, w21
    c54c:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    c550:	add	x0, x0, #0x288
    c554:	bl	49c0 <Py_BuildValue@plt>
    c558:	mov	x20, x0
    c55c:	cbz	x0, c698 <PyNumber_FloorDivide@plt+0x7a68>
    c560:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    c564:	add	x1, x1, #0xad0
    c568:	add	x1, x1, #0x3f0
    c56c:	mov	x2, x0
    c570:	mov	x3, #0x0                   	// #0
    c574:	mov	x0, x19
    c578:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    c57c:	mov	x21, x0
    c580:	ldr	x1, [x19]
    c584:	sub	x1, x1, #0x1
    c588:	str	x1, [x19]
    c58c:	cbz	x1, c68c <PyNumber_FloorDivide@plt+0x7a5c>
    c590:	ldr	x1, [x20]
    c594:	sub	x1, x1, #0x1
    c598:	str	x1, [x20]
    c59c:	cbz	x1, c660 <PyNumber_FloorDivide@plt+0x7a30>
    c5a0:	ldp	x23, x24, [sp, #64]
    c5a4:	ldr	x27, [sp, #96]
    c5a8:	mov	x0, x21
    c5ac:	ldp	x29, x30, [sp, #16]
    c5b0:	ldp	x19, x20, [sp, #32]
    c5b4:	ldp	x21, x22, [sp, #48]
    c5b8:	ldp	x25, x26, [sp, #80]
    c5bc:	add	sp, sp, #0x70
    c5c0:	ret
    c5c4:	tst	x20, #0x3
    c5c8:	b.ne	c4fc <PyNumber_FloorDivide@plt+0x78cc>  // b.any
    c5cc:	mov	w3, #0x5c29                	// #23593
    c5d0:	mov	w4, #0x5c28                	// #23592
    c5d4:	movk	w3, #0xc28f, lsl #16
    c5d8:	movk	w4, #0x28f, lsl #16
    c5dc:	mul	w3, w20, w3
    c5e0:	ror	w5, w3, #2
    c5e4:	cmp	w5, w4
    c5e8:	b.hi	c6f0 <PyNumber_FloorDivide@plt+0x7ac0>  // b.pmore
    c5ec:	mov	w4, #0xd70a                	// #55050
    c5f0:	ror	w3, w3, #4
    c5f4:	movk	w4, #0xa3, lsl #16
    c5f8:	cmp	w3, w4
    c5fc:	b.hi	c72c <PyNumber_FloorDivide@plt+0x7afc>  // b.pmore
    c600:	add	w2, w0, #0x1
    c604:	mov	w7, #0x2493                	// #9363
    c608:	add	w1, w2, w1
    c60c:	movk	w7, #0x9249, lsl #16
    c610:	add	w27, w1, w27
    c614:	smull	x7, w27, w7
    c618:	mov	w2, #0xd70a                	// #55050
    c61c:	movk	w2, #0xa3, lsl #16
    c620:	lsr	x7, x7, #32
    c624:	add	w7, w27, w7
    c628:	asr	w7, w7, #2
    c62c:	sub	w7, w7, w27, asr #31
    c630:	lsl	w1, w7, #3
    c634:	sub	w7, w1, w7
    c638:	mov	w1, #0x5c29                	// #23593
    c63c:	movk	w1, #0xc28f, lsl #16
    c640:	sub	w7, w27, w7
    c644:	mul	w1, w20, w1
    c648:	ror	w1, w1, #4
    c64c:	cmp	w1, w2
    c650:	b.hi	c528 <PyNumber_FloorDivide@plt+0x78f8>  // b.pmore
    c654:	add	w2, w0, #0x1
    c658:	mov	w0, w2
    c65c:	b	c528 <PyNumber_FloorDivide@plt+0x78f8>
    c660:	mov	x0, x20
    c664:	bl	4830 <_Py_Dealloc@plt>
    c668:	mov	x0, x21
    c66c:	ldp	x29, x30, [sp, #16]
    c670:	ldp	x19, x20, [sp, #32]
    c674:	ldp	x21, x22, [sp, #48]
    c678:	ldp	x23, x24, [sp, #64]
    c67c:	ldp	x25, x26, [sp, #80]
    c680:	ldr	x27, [sp, #96]
    c684:	add	sp, sp, #0x70
    c688:	ret
    c68c:	mov	x0, x19
    c690:	bl	4830 <_Py_Dealloc@plt>
    c694:	b	c590 <PyNumber_FloorDivide@plt+0x7960>
    c698:	ldr	x0, [x19]
    c69c:	sub	x0, x0, #0x1
    c6a0:	str	x0, [x19]
    c6a4:	cbz	x0, c73c <PyNumber_FloorDivide@plt+0x7b0c>
    c6a8:	ldp	x23, x24, [sp, #64]
    c6ac:	ldr	x27, [sp, #96]
    c6b0:	mov	x21, #0x0                   	// #0
    c6b4:	mov	x0, x21
    c6b8:	ldp	x29, x30, [sp, #16]
    c6bc:	ldp	x19, x20, [sp, #32]
    c6c0:	ldp	x21, x22, [sp, #48]
    c6c4:	ldp	x25, x26, [sp, #80]
    c6c8:	add	sp, sp, #0x70
    c6cc:	ret
    c6d0:	ldr	w1, [x0, #32]
    c6d4:	cmp	w1, #0x0
    c6d8:	ldr	x1, [x0]
    c6dc:	cset	w26, ne  // ne = any
    c6e0:	sub	x1, x1, #0x1
    c6e4:	str	x1, [x0]
    c6e8:	cbnz	x1, c478 <PyNumber_FloorDivide@plt+0x7848>
    c6ec:	b	c464 <PyNumber_FloorDivide@plt+0x7834>
    c6f0:	add	w2, w0, #0x1
    c6f4:	mov	w7, #0x2493                	// #9363
    c6f8:	add	w1, w2, w1
    c6fc:	movk	w7, #0x9249, lsl #16
    c700:	add	w27, w1, w27
    c704:	smull	x7, w27, w7
    c708:	lsr	x7, x7, #32
    c70c:	add	w7, w27, w7
    c710:	asr	w7, w7, #2
    c714:	sub	w7, w7, w27, asr #31
    c718:	lsl	w0, w7, #3
    c71c:	sub	w7, w0, w7
    c720:	mov	w0, w2
    c724:	sub	w7, w27, w7
    c728:	b	c528 <PyNumber_FloorDivide@plt+0x78f8>
    c72c:	mov	w7, #0x2493                	// #9363
    c730:	add	w27, w27, w2
    c734:	movk	w7, #0x9249, lsl #16
    c738:	b	c614 <PyNumber_FloorDivide@plt+0x79e4>
    c73c:	mov	x0, x19
    c740:	mov	x21, #0x0                   	// #0
    c744:	bl	4830 <_Py_Dealloc@plt>
    c748:	ldp	x23, x24, [sp, #64]
    c74c:	ldr	x27, [sp, #96]
    c750:	b	c5a8 <PyNumber_FloorDivide@plt+0x7978>
    c754:	nop
    c758:	sub	sp, sp, #0x50
    c75c:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    c760:	add	x3, x3, #0xad0
    c764:	add	x5, sp, #0x44
    c768:	add	x3, x3, #0x410
    c76c:	stp	x29, x30, [sp, #16]
    c770:	add	x29, sp, #0x10
    c774:	stp	x19, x20, [sp, #32]
    c778:	add	x20, sp, #0x40
    c77c:	mov	x19, x0
    c780:	str	x21, [sp, #48]
    c784:	add	x21, sp, #0x48
    c788:	mov	x0, x1
    c78c:	mov	x4, x20
    c790:	mov	x1, x2
    c794:	mov	x6, x21
    c798:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    c79c:	add	x2, x2, #0x498
    c7a0:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    c7a4:	cbz	w0, c9fc <PyNumber_FloorDivide@plt+0x7dcc>
    c7a8:	ldr	w2, [sp, #64]
    c7ac:	mov	w0, #0x270e                	// #9998
    c7b0:	sub	w1, w2, #0x1
    c7b4:	cmp	w1, w0
    c7b8:	b.hi	ca30 <PyNumber_FloorDivide@plt+0x7e00>  // b.pmore
    c7bc:	ldr	w6, [sp, #68]
    c7c0:	sub	w8, w6, #0x1
    c7c4:	cmp	w8, #0x33
    c7c8:	b.ls	c860 <PyNumber_FloorDivide@plt+0x7c30>  // b.plast
    c7cc:	cmp	w6, #0x35
    c7d0:	b.ne	c96c <PyNumber_FloorDivide@plt+0x7d3c>  // b.any
    c7d4:	mov	w7, #0x851f                	// #34079
    c7d8:	asr	w5, w1, #2
    c7dc:	movk	w7, #0x51eb, lsl #16
    c7e0:	mov	w4, #0x16d                 	// #365
    c7e4:	mov	w3, #0x2493                	// #9363
    c7e8:	smull	x7, w1, w7
    c7ec:	movk	w3, #0x9249, lsl #16
    c7f0:	madd	w0, w1, w4, w5
    c7f4:	asr	x4, x7, #37
    c7f8:	asr	x5, x7, #39
    c7fc:	sub	w5, w5, w4
    c800:	add	w5, w5, w0
    c804:	add	w5, w5, #0x7
    c808:	smull	x3, w5, w3
    c80c:	lsr	x3, x3, #32
    c810:	add	w3, w5, w3
    c814:	asr	w3, w3, #2
    c818:	sub	w3, w3, w5, asr #31
    c81c:	lsl	w0, w3, #3
    c820:	sub	w3, w0, w3
    c824:	sub	w3, w5, w3
    c828:	cmp	w3, #0x3
    c82c:	b.eq	c860 <PyNumber_FloorDivide@plt+0x7c30>  // b.none
    c830:	cmp	w3, #0x2
    c834:	b.ne	c96c <PyNumber_FloorDivide@plt+0x7d3c>  // b.any
    c838:	tst	x2, #0x3
    c83c:	b.ne	c96c <PyNumber_FloorDivide@plt+0x7d3c>  // b.any
    c840:	mov	w3, #0x5c29                	// #23593
    c844:	mov	w0, #0x5c28                	// #23592
    c848:	movk	w3, #0xc28f, lsl #16
    c84c:	movk	w0, #0x28f, lsl #16
    c850:	mul	w2, w2, w3
    c854:	ror	w3, w2, #2
    c858:	cmp	w3, w0
    c85c:	b.ls	c958 <PyNumber_FloorDivide@plt+0x7d28>  // b.plast
    c860:	ldr	w2, [sp, #72]
    c864:	sub	w3, w2, #0x1
    c868:	cmp	w3, #0x6
    c86c:	b.hi	ca50 <PyNumber_FloorDivide@plt+0x7e20>  // b.pmore
    c870:	mov	w7, #0x851f                	// #34079
    c874:	asr	w4, w1, #2
    c878:	movk	w7, #0x51eb, lsl #16
    c87c:	mov	w2, #0x16d                 	// #365
    c880:	mov	w5, #0x2493                	// #9363
    c884:	str	w6, [sp, #76]
    c888:	smull	x7, w1, w7
    c88c:	movk	w5, #0x9249, lsl #16
    c890:	madd	w2, w1, w2, w4
    c894:	lsl	w0, w8, #3
    c898:	sub	w0, w0, w8
    c89c:	mov	x1, x20
    c8a0:	asr	x4, x7, #37
    c8a4:	asr	x7, x7, #39
    c8a8:	sub	w7, w7, w4
    c8ac:	add	w0, w0, w3
    c8b0:	add	w4, w2, w7
    c8b4:	mov	x3, x21
    c8b8:	add	w7, w4, #0x7
    c8bc:	add	w4, w4, #0x1
    c8c0:	add	x2, sp, #0x4c
    c8c4:	smull	x5, w7, w5
    c8c8:	lsr	x5, x5, #32
    c8cc:	add	w5, w7, w5
    c8d0:	asr	w5, w5, #2
    c8d4:	sub	w5, w5, w7, asr #31
    c8d8:	lsl	w6, w5, #3
    c8dc:	sub	w5, w6, w5
    c8e0:	sub	w5, w7, w5
    c8e4:	sub	w4, w4, w5
    c8e8:	cmp	w5, #0x3
    c8ec:	add	w5, w4, #0x7
    c8f0:	csel	w4, w5, w4, gt
    c8f4:	add	w0, w0, w4
    c8f8:	bl	4d18 <PyNumber_FloorDivide@plt+0xe8>
    c8fc:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    c900:	add	x3, x3, #0x2a8
    c904:	add	x1, x3, #0x680
    c908:	ldr	w0, [sp, #64]
    c90c:	cmp	x19, x1
    c910:	ldp	w4, w1, [sp, #72]
    c914:	b.eq	c9a4 <PyNumber_FloorDivide@plt+0x7d74>  // b.none
    c918:	add	x3, x3, #0x1a0
    c91c:	cmp	x19, x3
    c920:	b.eq	c9b8 <PyNumber_FloorDivide@plt+0x7d88>  // b.none
    c924:	mov	w3, w1
    c928:	mov	w2, w0
    c92c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    c930:	mov	x0, x19
    c934:	add	x1, x1, #0xa78
    c938:	bl	4970 <PyObject_CallFunction@plt>
    c93c:	mov	x19, x0
    c940:	mov	x0, x19
    c944:	ldp	x29, x30, [sp, #16]
    c948:	ldp	x19, x20, [sp, #32]
    c94c:	ldr	x21, [sp, #48]
    c950:	add	sp, sp, #0x50
    c954:	ret
    c958:	mov	w0, #0xd70a                	// #55050
    c95c:	ror	w2, w2, #4
    c960:	movk	w0, #0xa3, lsl #16
    c964:	cmp	w2, w0
    c968:	b.ls	c860 <PyNumber_FloorDivide@plt+0x7c30>  // b.plast
    c96c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    c970:	mov	w2, w6
    c974:	mov	x19, #0x0                   	// #0
    c978:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    c97c:	ldr	x0, [x0, #3968]
    c980:	add	x1, x1, #0x4f8
    c984:	ldr	x0, [x0]
    c988:	bl	4b90 <PyErr_Format@plt>
    c98c:	mov	x0, x19
    c990:	ldp	x29, x30, [sp, #16]
    c994:	ldp	x19, x20, [sp, #32]
    c998:	ldr	x21, [sp, #48]
    c99c:	add	sp, sp, #0x50
    c9a0:	ret
    c9a4:	mov	x3, x19
    c9a8:	mov	w2, w4
    c9ac:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    c9b0:	mov	x19, x0
    c9b4:	b	c940 <PyNumber_FloorDivide@plt+0x7d10>
    c9b8:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    c9bc:	str	wzr, [sp]
    c9c0:	str	x19, [sp, #8]
    c9c4:	mov	w2, w4
    c9c8:	ldr	x7, [x7, #4024]
    c9cc:	mov	w6, #0x0                   	// #0
    c9d0:	mov	w5, #0x0                   	// #0
    c9d4:	mov	w4, #0x0                   	// #0
    c9d8:	mov	w3, #0x0                   	// #0
    c9dc:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    c9e0:	mov	x19, x0
    c9e4:	mov	x0, x19
    c9e8:	ldp	x29, x30, [sp, #16]
    c9ec:	ldp	x19, x20, [sp, #32]
    c9f0:	ldr	x21, [sp, #48]
    c9f4:	add	sp, sp, #0x50
    c9f8:	ret
    c9fc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ca00:	mov	x19, #0x0                   	// #0
    ca04:	ldr	x0, [x0, #4008]
    ca08:	ldr	x0, [x0]
    ca0c:	bl	48c0 <PyErr_ExceptionMatches@plt>
    ca10:	cbz	w0, c940 <PyNumber_FloorDivide@plt+0x7d10>
    ca14:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ca18:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    ca1c:	add	x1, x1, #0x4b0
    ca20:	ldr	x0, [x0, #3968]
    ca24:	ldr	x0, [x0]
    ca28:	bl	4b90 <PyErr_Format@plt>
    ca2c:	b	c940 <PyNumber_FloorDivide@plt+0x7d10>
    ca30:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ca34:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    ca38:	mov	x19, #0x0                   	// #0
    ca3c:	add	x1, x1, #0x4d8
    ca40:	ldr	x0, [x0, #3968]
    ca44:	ldr	x0, [x0]
    ca48:	bl	4b90 <PyErr_Format@plt>
    ca4c:	b	c940 <PyNumber_FloorDivide@plt+0x7d10>
    ca50:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ca54:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    ca58:	mov	x19, #0x0                   	// #0
    ca5c:	add	x1, x1, #0x510
    ca60:	ldr	x0, [x0, #3968]
    ca64:	ldr	x0, [x0]
    ca68:	bl	4b90 <PyErr_Format@plt>
    ca6c:	b	c940 <PyNumber_FloorDivide@plt+0x7d10>
    ca70:	ldurh	w7, [x0, #25]
    ca74:	mov	w6, #0x851f                	// #34079
    ca78:	movk	w6, #0x51eb, lsl #16
    ca7c:	mov	w8, #0x16d                 	// #365
    ca80:	rev16	w7, w7
    ca84:	ldrb	w10, [x0, #27]
    ca88:	and	w7, w7, #0xffff
    ca8c:	ldrb	w9, [x0, #28]
    ca90:	subs	w4, w7, #0x1
    ca94:	add	w0, w7, #0x2
    ca98:	csel	w0, w0, w4, mi  // mi = first
    ca9c:	mov	w2, #0x2493                	// #9363
    caa0:	movk	w2, #0x9249, lsl #16
    caa4:	adrp	x3, 15000 <PyInit__datetime@@Base+0x1f90>
    caa8:	smull	x6, w4, w6
    caac:	add	x3, x3, #0x810
    cab0:	mul	w8, w4, w8
    cab4:	mov	w1, w7
    cab8:	asr	x5, x6, #37
    cabc:	asr	x6, x6, #39
    cac0:	add	w0, w8, w0, asr #2
    cac4:	sub	w5, w6, w5
    cac8:	add	w5, w5, w0
    cacc:	ldr	w11, [x3, w10, sxtw #2]
    cad0:	add	w0, w5, #0x7
    cad4:	add	w3, w5, #0x1
    cad8:	smull	x2, w0, w2
    cadc:	lsr	x2, x2, #32
    cae0:	add	w2, w0, w2
    cae4:	asr	w2, w2, #2
    cae8:	sub	w2, w2, w0, asr #31
    caec:	lsl	w6, w2, #3
    caf0:	sub	w2, w6, w2
    caf4:	sub	w2, w0, w2
    caf8:	sub	w3, w3, w2
    cafc:	cmp	w2, #0x3
    cb00:	add	w0, w3, #0x7
    cb04:	csel	w3, w0, w3, gt
    cb08:	cmp	w10, #0x2
    cb0c:	b.le	cb40 <PyNumber_FloorDivide@plt+0x7f10>
    cb10:	tst	x7, #0x3
    cb14:	b.ne	cb40 <PyNumber_FloorDivide@plt+0x7f10>  // b.any
    cb18:	mov	w0, #0x5c29                	// #23593
    cb1c:	mov	w2, #0x5c28                	// #23592
    cb20:	movk	w0, #0xc28f, lsl #16
    cb24:	movk	w2, #0x28f, lsl #16
    cb28:	mul	w0, w7, w0
    cb2c:	ror	w6, w0, #2
    cb30:	cmp	w6, w2
    cb34:	b.ls	ccdc <PyNumber_FloorDivide@plt+0x80ac>  // b.plast
    cb38:	add	w11, w11, #0x1
    cb3c:	nop
    cb40:	add	w5, w9, w5
    cb44:	mov	w2, #0x2493                	// #9363
    cb48:	add	w5, w5, w11
    cb4c:	movk	w2, #0x9249, lsl #16
    cb50:	sub	w3, w5, w3
    cb54:	smull	x2, w3, w2
    cb58:	lsr	x2, x2, #32
    cb5c:	add	w2, w3, w2
    cb60:	asr	w2, w2, #2
    cb64:	sub	w2, w2, w3, asr #31
    cb68:	lsl	w0, w2, #3
    cb6c:	sub	w0, w0, w2
    cb70:	subs	w3, w3, w0
    cb74:	b.mi	cb98 <PyNumber_FloorDivide@plt+0x7f68>  // b.first
    cb78:	tbnz	w2, #31, cba4 <PyNumber_FloorDivide@plt+0x7f74>
    cb7c:	cmp	w2, #0x33
    cb80:	b.gt	cc50 <PyNumber_FloorDivide@plt+0x8020>
    cb84:	add	w2, w2, #0x1
    cb88:	add	w3, w3, #0x1
    cb8c:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    cb90:	add	x0, x0, #0xa78
    cb94:	b	49c0 <Py_BuildValue@plt>
    cb98:	sub	w2, w2, #0x1
    cb9c:	add	w3, w3, #0x7
    cba0:	tbz	w2, #31, cb7c <PyNumber_FloorDivide@plt+0x7f4c>
    cba4:	subs	w0, w7, #0x2
    cba8:	mov	w2, #0x851f                	// #34079
    cbac:	movk	w2, #0x51eb, lsl #16
    cbb0:	csinc	w7, w0, w7, pl  // pl = nfrst
    cbb4:	sub	w8, w8, #0x16d
    cbb8:	mov	w1, #0x2493                	// #9363
    cbbc:	smull	x0, w0, w2
    cbc0:	add	w3, w8, w7, asr #2
    cbc4:	movk	w1, #0x9249, lsl #16
    cbc8:	asr	x2, x0, #37
    cbcc:	asr	x0, x0, #39
    cbd0:	sub	w0, w0, w2
    cbd4:	add	w0, w0, w3
    cbd8:	add	w2, w0, #0x7
    cbdc:	add	w3, w0, #0x1
    cbe0:	smull	x0, w2, w1
    cbe4:	lsr	x0, x0, #32
    cbe8:	add	w0, w2, w0
    cbec:	asr	w0, w0, #2
    cbf0:	sub	w0, w0, w2, asr #31
    cbf4:	lsl	w6, w0, #3
    cbf8:	sub	w0, w6, w0
    cbfc:	sub	w0, w2, w0
    cc00:	sub	w3, w3, w0
    cc04:	cmp	w0, #0x3
    cc08:	add	w0, w3, #0x7
    cc0c:	csel	w3, w0, w3, gt
    cc10:	sub	w3, w5, w3
    cc14:	smull	x2, w3, w1
    cc18:	lsr	x2, x2, #32
    cc1c:	add	w2, w3, w2
    cc20:	asr	w2, w2, #2
    cc24:	sub	w2, w2, w3, asr #31
    cc28:	lsl	w0, w2, #3
    cc2c:	sub	w0, w0, w2
    cc30:	subs	w3, w3, w0
    cc34:	b.mi	ccf8 <PyNumber_FloorDivide@plt+0x80c8>  // b.first
    cc38:	add	w2, w2, #0x1
    cc3c:	mov	w1, w4
    cc40:	add	w3, w3, #0x1
    cc44:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    cc48:	add	x0, x0, #0xa78
    cc4c:	b	49c0 <Py_BuildValue@plt>
    cc50:	mov	w6, #0x851f                	// #34079
    cc54:	add	w0, w8, #0x16d
    cc58:	movk	w6, #0x51eb, lsl #16
    cc5c:	add	w0, w0, w7, lsr #2
    cc60:	mov	w4, #0x2493                	// #9363
    cc64:	add	w2, w2, #0x1
    cc68:	smull	x8, w7, w6
    cc6c:	movk	w4, #0x9249, lsl #16
    cc70:	umull	x6, w7, w6
    cc74:	asr	x8, x8, #37
    cc78:	lsr	x6, x6, #39
    cc7c:	sub	w6, w6, w8
    cc80:	add	w0, w0, w6
    cc84:	add	w6, w0, #0x7
    cc88:	add	w0, w0, #0x1
    cc8c:	smull	x4, w6, w4
    cc90:	lsr	x4, x4, #32
    cc94:	add	w4, w6, w4
    cc98:	asr	w4, w4, #2
    cc9c:	sub	w4, w4, w6, asr #31
    cca0:	lsl	w8, w4, #3
    cca4:	sub	w4, w8, w4
    cca8:	sub	w4, w6, w4
    ccac:	sub	w0, w0, w4
    ccb0:	cmp	w4, #0x3
    ccb4:	add	w4, w0, #0x7
    ccb8:	csel	w0, w4, w0, gt
    ccbc:	cmp	w0, w5
    ccc0:	b.gt	cb88 <PyNumber_FloorDivide@plt+0x7f58>
    ccc4:	add	w1, w7, #0x1
    ccc8:	add	w3, w3, #0x1
    cccc:	mov	w2, #0x1                   	// #1
    ccd0:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ccd4:	add	x0, x0, #0xa78
    ccd8:	b	49c0 <Py_BuildValue@plt>
    ccdc:	mov	w2, #0xd70a                	// #55050
    cce0:	ror	w0, w0, #4
    cce4:	movk	w2, #0xa3, lsl #16
    cce8:	cmp	w0, w2
    ccec:	b.hi	cb40 <PyNumber_FloorDivide@plt+0x7f10>  // b.pmore
    ccf0:	add	w11, w11, #0x1
    ccf4:	b	cb40 <PyNumber_FloorDivide@plt+0x7f10>
    ccf8:	add	w3, w3, #0x7
    ccfc:	mov	w1, w4
    cd00:	add	w3, w3, #0x1
    cd04:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    cd08:	add	x0, x0, #0xa78
    cd0c:	b	49c0 <Py_BuildValue@plt>
    cd10:	stp	x29, x30, [sp, #-48]!
    cd14:	mov	x29, sp
    cd18:	stp	x19, x20, [sp, #16]
    cd1c:	str	x21, [sp, #32]
    cd20:	ldrb	w1, [x0, #33]
    cd24:	ldrb	w19, [x0, #32]
    cd28:	ldrb	w2, [x0, #29]
    cd2c:	lsl	w1, w1, #8
    cd30:	ldrb	w3, [x0, #34]
    cd34:	orr	w19, w1, w19, lsl #16
    cd38:	cmp	w2, #0x17
    cd3c:	ldrb	w1, [x0, #30]
    cd40:	orr	w19, w19, w3
    cd44:	ldrb	w2, [x0, #31]
    cd48:	ldrb	w20, [x0, #35]
    cd4c:	ldur	w21, [x0, #29]
    cd50:	b.hi	ce08 <PyNumber_FloorDivide@plt+0x81d8>  // b.pmore
    cd54:	cmp	w1, #0x3b
    cd58:	b.hi	cde8 <PyNumber_FloorDivide@plt+0x81b8>  // b.pmore
    cd5c:	cmp	w2, #0x3b
    cd60:	b.hi	ce48 <PyNumber_FloorDivide@plt+0x8218>  // b.pmore
    cd64:	mov	w0, #0x423f                	// #16959
    cd68:	movk	w0, #0xf, lsl #16
    cd6c:	cmp	w19, w0
    cd70:	b.gt	ce28 <PyNumber_FloorDivide@plt+0x81f8>
    cd74:	cmp	w20, #0x1
    cd78:	b.hi	cdc8 <PyNumber_FloorDivide@plt+0x8198>  // b.pmore
    cd7c:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    cd80:	add	x0, x0, #0x2a8
    cd84:	add	x0, x0, #0x4e0
    cd88:	mov	x1, #0x0                   	// #0
    cd8c:	ldr	x2, [x0, #304]
    cd90:	blr	x2
    cd94:	cbz	x0, cdb8 <PyNumber_FloorDivide@plt+0x8188>
    cd98:	asr	w1, w19, #8
    cd9c:	mov	x2, #0xffffffffffffffff    	// #-1
    cda0:	str	x2, [x0, #16]
    cda4:	strb	wzr, [x0, #24]
    cda8:	stur	w21, [x0, #25]
    cdac:	strb	w1, [x0, #29]
    cdb0:	strb	w19, [x0, #30]
    cdb4:	strb	w20, [x0, #31]
    cdb8:	ldp	x19, x20, [sp, #16]
    cdbc:	ldr	x21, [sp, #32]
    cdc0:	ldp	x29, x30, [sp], #48
    cdc4:	ret
    cdc8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    cdcc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    cdd0:	add	x1, x1, #0x40
    cdd4:	ldr	x0, [x0, #3968]
    cdd8:	ldr	x0, [x0]
    cddc:	bl	48a0 <PyErr_SetString@plt>
    cde0:	mov	x0, #0x0                   	// #0
    cde4:	b	cdb8 <PyNumber_FloorDivide@plt+0x8188>
    cde8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    cdec:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    cdf0:	add	x1, x1, #0xfe8
    cdf4:	ldr	x0, [x0, #3968]
    cdf8:	ldr	x0, [x0]
    cdfc:	bl	48a0 <PyErr_SetString@plt>
    ce00:	mov	x0, #0x0                   	// #0
    ce04:	b	cdb8 <PyNumber_FloorDivide@plt+0x8188>
    ce08:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ce0c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ce10:	add	x1, x1, #0xfd0
    ce14:	ldr	x0, [x0, #3968]
    ce18:	ldr	x0, [x0]
    ce1c:	bl	48a0 <PyErr_SetString@plt>
    ce20:	mov	x0, #0x0                   	// #0
    ce24:	b	cdb8 <PyNumber_FloorDivide@plt+0x8188>
    ce28:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ce2c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    ce30:	add	x1, x1, #0x18
    ce34:	ldr	x0, [x0, #3968]
    ce38:	ldr	x0, [x0]
    ce3c:	bl	48a0 <PyErr_SetString@plt>
    ce40:	mov	x0, #0x0                   	// #0
    ce44:	b	cdb8 <PyNumber_FloorDivide@plt+0x8188>
    ce48:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    ce4c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    ce50:	add	x1, x1, #0x0
    ce54:	ldr	x0, [x0, #3968]
    ce58:	ldr	x0, [x0]
    ce5c:	bl	48a0 <PyErr_SetString@plt>
    ce60:	mov	x0, #0x0                   	// #0
    ce64:	b	cdb8 <PyNumber_FloorDivide@plt+0x8188>
    ce68:	stp	x29, x30, [sp, #-48]!
    ce6c:	mov	w1, #0x423f                	// #16959
    ce70:	movk	w1, #0xf, lsl #16
    ce74:	mov	x29, sp
    ce78:	stp	x19, x20, [sp, #16]
    ce7c:	ldp	w19, w20, [x0, #28]
    ce80:	str	x21, [sp, #32]
    ce84:	ldr	w21, [x0, #24]
    ce88:	neg	w20, w20
    ce8c:	cmp	w20, w1
    ce90:	b.hi	cf34 <PyNumber_FloorDivide@plt+0x8304>  // b.pmore
    ce94:	neg	w19, w19
    ce98:	mov	w0, #0x517f                	// #20863
    ce9c:	movk	w0, #0x1, lsl #16
    cea0:	cmp	w19, w0
    cea4:	b.hi	cf00 <PyNumber_FloorDivide@plt+0x82d0>  // b.pmore
    cea8:	neg	w21, w21
    ceac:	mov	w3, #0xc9ff                	// #51711
    ceb0:	mov	w0, #0x93fe                	// #37886
    ceb4:	movk	w3, #0x3b9a, lsl #16
    ceb8:	add	w1, w21, w3
    cebc:	movk	w0, #0x7735, lsl #16
    cec0:	cmp	w1, w0
    cec4:	b.hi	cf80 <PyNumber_FloorDivide@plt+0x8350>  // b.pmore
    cec8:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    cecc:	add	x0, x0, #0x2a8
    ced0:	mov	x1, #0x0                   	// #0
    ced4:	ldr	x2, [x0, #304]
    ced8:	blr	x2
    cedc:	cbz	x0, cef0 <PyNumber_FloorDivide@plt+0x82c0>
    cee0:	mov	x1, #0xffffffffffffffff    	// #-1
    cee4:	str	x1, [x0, #16]
    cee8:	stp	w21, w19, [x0, #24]
    ceec:	str	w20, [x0, #32]
    cef0:	ldp	x19, x20, [sp, #16]
    cef4:	ldr	x21, [sp, #32]
    cef8:	ldp	x29, x30, [sp], #48
    cefc:	ret
    cf00:	mov	w2, #0x4507                	// #17671
    cf04:	mov	w0, #0x5180                	// #20864
    cf08:	movk	w2, #0xc22e, lsl #16
    cf0c:	movk	w0, #0x1, lsl #16
    cf10:	smull	x2, w19, w2
    cf14:	lsr	x2, x2, #32
    cf18:	add	w2, w19, w2
    cf1c:	asr	w2, w2, #16
    cf20:	sub	w2, w2, w19, asr #31
    cf24:	msub	w19, w2, w0, w19
    cf28:	tbnz	w19, #31, cf70 <PyNumber_FloorDivide@plt+0x8340>
    cf2c:	sub	w21, w2, w21
    cf30:	b	ceac <PyNumber_FloorDivide@plt+0x827c>
    cf34:	mov	w0, #0xde83                	// #56963
    cf38:	mov	w1, #0x4240                	// #16960
    cf3c:	movk	w0, #0x431b, lsl #16
    cf40:	movk	w1, #0xf, lsl #16
    cf44:	smull	x0, w20, w0
    cf48:	asr	x0, x0, #50
    cf4c:	sub	w0, w0, w20, asr #31
    cf50:	msub	w20, w0, w1, w20
    cf54:	tbnz	w20, #31, cf60 <PyNumber_FloorDivide@plt+0x8330>
    cf58:	sub	w19, w0, w19
    cf5c:	b	ce98 <PyNumber_FloorDivide@plt+0x8268>
    cf60:	sub	w0, w0, #0x1
    cf64:	add	w20, w20, w1
    cf68:	sub	w19, w0, w19
    cf6c:	b	ce98 <PyNumber_FloorDivide@plt+0x8268>
    cf70:	sub	w2, w2, #0x1
    cf74:	add	w19, w19, w0
    cf78:	sub	w21, w2, w21
    cf7c:	b	ceac <PyNumber_FloorDivide@plt+0x827c>
    cf80:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    cf84:	mov	w2, w21
    cf88:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    cf8c:	add	x1, x1, #0xa50
    cf90:	ldr	x0, [x0, #4008]
    cf94:	ldr	x0, [x0]
    cf98:	bl	4b90 <PyErr_Format@plt>
    cf9c:	mov	x0, #0x0                   	// #0
    cfa0:	b	cef0 <PyNumber_FloorDivide@plt+0x82c0>
    cfa4:	nop
    cfa8:	sub	sp, sp, #0x30
    cfac:	cmp	w2, #0x0
    cfb0:	cneg	w4, w1, ne  // ne = any
    cfb4:	mov	x15, x0
    cfb8:	stp	x29, x30, [sp, #16]
    cfbc:	add	x29, sp, #0x10
    cfc0:	ldurh	w3, [x0, #25]
    cfc4:	ldrb	w2, [x0, #28]
    cfc8:	ldrb	w1, [x0, #27]
    cfcc:	rev16	w3, w3
    cfd0:	add	w4, w2, w4
    cfd4:	and	w3, w3, #0xffff
    cfd8:	stp	w3, w1, [sp, #36]
    cfdc:	mov	w5, w3
    cfe0:	str	w4, [sp, #44]
    cfe4:	add	w6, w4, #0x1
    cfe8:	cmp	w1, #0x2
    cfec:	b.ne	cff8 <PyNumber_FloorDivide@plt+0x83c8>  // b.any
    cff0:	tst	x3, #0x3
    cff4:	b.eq	d158 <PyNumber_FloorDivide@plt+0x8528>  // b.none
    cff8:	adrp	x2, 15000 <PyInit__datetime@@Base+0x1f90>
    cffc:	add	x2, x2, #0x810
    d000:	add	x2, x2, #0x40
    d004:	ldr	w2, [x2, w1, sxtw #2]
    d008:	cmp	w4, #0x0
    d00c:	b.le	d194 <PyNumber_FloorDivide@plt+0x8564>
    d010:	cmp	w4, w2
    d014:	b.gt	d06c <PyNumber_FloorDivide@plt+0x843c>
    d018:	sub	w0, w3, #0x1
    d01c:	mov	w2, #0x270e                	// #9998
    d020:	cmp	w0, w2
    d024:	b.hi	d2cc <PyNumber_FloorDivide@plt+0x869c>  // b.pmore
    d028:	ldr	x0, [x15, #8]
    d02c:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    d030:	add	x2, x2, #0x2a8
    d034:	add	x3, x2, #0x680
    d038:	cmp	x0, x3
    d03c:	b.eq	d13c <PyNumber_FloorDivide@plt+0x850c>  // b.none
    d040:	add	x2, x2, #0x1a0
    d044:	cmp	x0, x2
    d048:	b.eq	d218 <PyNumber_FloorDivide@plt+0x85e8>  // b.none
    d04c:	mov	w3, w1
    d050:	mov	w2, w5
    d054:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    d058:	add	x1, x1, #0xa78
    d05c:	bl	4970 <PyObject_CallFunction@plt>
    d060:	ldp	x29, x30, [sp, #16]
    d064:	add	sp, sp, #0x30
    d068:	ret
    d06c:	add	w2, w2, #0x1
    d070:	cmp	w4, w2
    d074:	b.eq	d274 <PyNumber_FloorDivide@plt+0x8644>  // b.none
    d078:	subs	w2, w3, #0x1
    d07c:	add	w0, w3, #0x2
    d080:	mov	w4, #0x851f                	// #34079
    d084:	csel	w0, w0, w2, mi  // mi = first
    d088:	movk	w4, #0x51eb, lsl #16
    d08c:	mov	w7, #0x16d                 	// #365
    d090:	asr	w0, w0, #2
    d094:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
    d098:	smull	x4, w2, w4
    d09c:	add	x5, x5, #0x810
    d0a0:	cmp	w1, #0x2
    d0a4:	madd	w2, w2, w7, w0
    d0a8:	asr	x7, x4, #37
    d0ac:	asr	x4, x4, #39
    d0b0:	sub	w4, w4, w7
    d0b4:	ldr	w0, [x5, w1, sxtw #2]
    d0b8:	add	w2, w2, w4
    d0bc:	add	w2, w2, w6
    d0c0:	b.le	d0f0 <PyNumber_FloorDivide@plt+0x84c0>
    d0c4:	tst	x3, #0x3
    d0c8:	b.ne	d0f0 <PyNumber_FloorDivide@plt+0x84c0>  // b.any
    d0cc:	mov	w1, #0x5c29                	// #23593
    d0d0:	mov	w4, #0x5c28                	// #23592
    d0d4:	movk	w1, #0xc28f, lsl #16
    d0d8:	movk	w4, #0x28f, lsl #16
    d0dc:	mul	w3, w3, w1
    d0e0:	ror	w1, w3, #2
    d0e4:	cmp	w1, w4
    d0e8:	b.ls	d2b0 <PyNumber_FloorDivide@plt+0x8680>  // b.plast
    d0ec:	add	w0, w0, #0x1
    d0f0:	add	w2, w0, w2
    d0f4:	mov	w1, #0xb9da                	// #47578
    d0f8:	sub	w3, w2, #0x2
    d0fc:	movk	w1, #0x37, lsl #16
    d100:	sub	w0, w2, #0x1
    d104:	cmp	w3, w1
    d108:	b.hi	d2cc <PyNumber_FloorDivide@plt+0x869c>  // b.pmore
    d10c:	add	x3, sp, #0x2c
    d110:	add	x2, sp, #0x28
    d114:	add	x1, sp, #0x24
    d118:	bl	4d18 <PyNumber_FloorDivide@plt+0xe8>
    d11c:	ldr	x0, [x15, #8]
    d120:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    d124:	add	x2, x2, #0x2a8
    d128:	ldr	w4, [sp, #44]
    d12c:	add	x3, x2, #0x680
    d130:	ldp	w5, w1, [sp, #36]
    d134:	cmp	x0, x3
    d138:	b.ne	d040 <PyNumber_FloorDivide@plt+0x8410>  // b.any
    d13c:	mov	x3, x0
    d140:	mov	w2, w4
    d144:	mov	w0, w5
    d148:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    d14c:	ldp	x29, x30, [sp, #16]
    d150:	add	sp, sp, #0x30
    d154:	ret
    d158:	mov	w0, #0x5c29                	// #23593
    d15c:	mov	w7, #0x5c28                	// #23592
    d160:	movk	w0, #0xc28f, lsl #16
    d164:	movk	w7, #0x28f, lsl #16
    d168:	mov	w2, #0x1d                  	// #29
    d16c:	mul	w0, w3, w0
    d170:	ror	w8, w0, #2
    d174:	cmp	w8, w7
    d178:	b.hi	d008 <PyNumber_FloorDivide@plt+0x83d8>  // b.pmore
    d17c:	mov	w7, #0xd70a                	// #55050
    d180:	ror	w0, w0, #4
    d184:	movk	w7, #0xa3, lsl #16
    d188:	cmp	w0, w7
    d18c:	b.ls	d008 <PyNumber_FloorDivide@plt+0x83d8>  // b.plast
    d190:	b	cff8 <PyNumber_FloorDivide@plt+0x83c8>
    d194:	b.ne	d06c <PyNumber_FloorDivide@plt+0x843c>  // b.any
    d198:	sub	w1, w1, #0x1
    d19c:	str	w1, [sp, #40]
    d1a0:	cmp	w1, #0x0
    d1a4:	sub	w0, w3, #0x1
    d1a8:	b.le	d250 <PyNumber_FloorDivide@plt+0x8620>
    d1ac:	cmp	w1, #0x2
    d1b0:	b.ne	d200 <PyNumber_FloorDivide@plt+0x85d0>  // b.any
    d1b4:	tst	x3, #0x3
    d1b8:	b.ne	d200 <PyNumber_FloorDivide@plt+0x85d0>  // b.any
    d1bc:	mov	w2, #0x5c29                	// #23593
    d1c0:	mov	w6, #0x5c28                	// #23592
    d1c4:	movk	w2, #0xc28f, lsl #16
    d1c8:	movk	w6, #0x28f, lsl #16
    d1cc:	mov	w4, #0x1d                  	// #29
    d1d0:	mul	w3, w3, w2
    d1d4:	ror	w2, w3, #2
    d1d8:	cmp	w2, w6
    d1dc:	b.ls	d1e8 <PyNumber_FloorDivide@plt+0x85b8>  // b.plast
    d1e0:	str	w4, [sp, #44]
    d1e4:	b	d01c <PyNumber_FloorDivide@plt+0x83ec>
    d1e8:	mov	w2, #0xd70a                	// #55050
    d1ec:	ror	w3, w3, #4
    d1f0:	movk	w2, #0xa3, lsl #16
    d1f4:	cmp	w3, w2
    d1f8:	b.ls	d1e0 <PyNumber_FloorDivide@plt+0x85b0>  // b.plast
    d1fc:	nop
    d200:	adrp	x2, 15000 <PyInit__datetime@@Base+0x1f90>
    d204:	add	x2, x2, #0x810
    d208:	add	x2, x2, #0x40
    d20c:	ldr	w4, [x2, w1, sxtw #2]
    d210:	str	w4, [sp, #44]
    d214:	b	d01c <PyNumber_FloorDivide@plt+0x83ec>
    d218:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    d21c:	str	wzr, [sp]
    d220:	str	x0, [sp, #8]
    d224:	mov	w2, w4
    d228:	ldr	x7, [x7, #4024]
    d22c:	mov	w0, w5
    d230:	mov	w6, #0x0                   	// #0
    d234:	mov	w4, #0x0                   	// #0
    d238:	mov	w3, #0x0                   	// #0
    d23c:	mov	w5, #0x0                   	// #0
    d240:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    d244:	ldp	x29, x30, [sp, #16]
    d248:	add	sp, sp, #0x30
    d24c:	ret
    d250:	mov	w6, #0xc                   	// #12
    d254:	mov	w2, #0x1f                  	// #31
    d258:	mov	w5, w0
    d25c:	mov	w1, w6
    d260:	mov	w4, w2
    d264:	stp	w0, w6, [sp, #36]
    d268:	sub	w0, w3, #0x2
    d26c:	str	w2, [sp, #44]
    d270:	b	d01c <PyNumber_FloorDivide@plt+0x83ec>
    d274:	add	w1, w1, #0x1
    d278:	mov	w2, #0x1                   	// #1
    d27c:	stp	w1, w2, [sp, #40]
    d280:	cmp	w1, #0xc
    d284:	b.gt	d294 <PyNumber_FloorDivide@plt+0x8664>
    d288:	sub	w0, w3, #0x1
    d28c:	mov	w4, w2
    d290:	b	d01c <PyNumber_FloorDivide@plt+0x83ec>
    d294:	add	w6, w3, #0x1
    d298:	mov	w4, w2
    d29c:	mov	w1, w2
    d2a0:	mov	w5, w6
    d2a4:	mov	w0, w3
    d2a8:	stp	w6, w2, [sp, #36]
    d2ac:	b	d01c <PyNumber_FloorDivide@plt+0x83ec>
    d2b0:	mov	w1, #0xd70a                	// #55050
    d2b4:	ror	w3, w3, #4
    d2b8:	movk	w1, #0xa3, lsl #16
    d2bc:	cmp	w3, w1
    d2c0:	b.hi	d0f0 <PyNumber_FloorDivide@plt+0x84c0>  // b.pmore
    d2c4:	add	w0, w0, #0x1
    d2c8:	b	d0f0 <PyNumber_FloorDivide@plt+0x84c0>
    d2cc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d2d0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    d2d4:	add	x1, x1, #0x538
    d2d8:	ldr	x0, [x0, #4008]
    d2dc:	ldr	x0, [x0]
    d2e0:	bl	48a0 <PyErr_SetString@plt>
    d2e4:	mov	x0, #0x0                   	// #0
    d2e8:	b	d060 <PyNumber_FloorDivide@plt+0x8430>
    d2ec:	nop
    d2f0:	sub	sp, sp, #0x60
    d2f4:	stp	x29, x30, [sp, #16]
    d2f8:	add	x29, sp, #0x10
    d2fc:	stp	x19, x20, [sp, #32]
    d300:	mov	x19, x0
    d304:	ldr	x0, [x0, #8]
    d308:	stp	x21, x22, [sp, #48]
    d30c:	str	x23, [sp, #64]
    d310:	adrp	x23, 29000 <PyInit__datetime@@Base+0x15f90>
    d314:	add	x21, x23, #0x2a8
    d318:	add	x20, x21, #0x1a0
    d31c:	cmp	x0, x20
    d320:	b.eq	d3a8 <PyNumber_FloorDivide@plt+0x8778>  // b.none
    d324:	mov	x22, x1
    d328:	mov	x1, x20
    d32c:	bl	4b60 <PyType_IsSubtype@plt>
    d330:	cbnz	w0, d3a8 <PyNumber_FloorDivide@plt+0x8778>
    d334:	ldr	x0, [x22, #8]
    d338:	cmp	x0, x20
    d33c:	b.eq	d3a8 <PyNumber_FloorDivide@plt+0x8778>  // b.none
    d340:	mov	x1, x20
    d344:	bl	4b60 <PyType_IsSubtype@plt>
    d348:	cbnz	w0, d3a8 <PyNumber_FloorDivide@plt+0x8778>
    d34c:	ldr	x0, [x19, #8]
    d350:	add	x1, x21, #0x680
    d354:	cmp	x0, x1
    d358:	b.eq	d390 <PyNumber_FloorDivide@plt+0x8760>  // b.none
    d35c:	bl	4b60 <PyType_IsSubtype@plt>
    d360:	cbnz	w0, d390 <PyNumber_FloorDivide@plt+0x8760>
    d364:	ldr	x0, [x19, #8]
    d368:	cmp	x0, x21
    d36c:	b.eq	d37c <PyNumber_FloorDivide@plt+0x874c>  // b.none
    d370:	mov	x1, x21
    d374:	bl	4b60 <PyType_IsSubtype@plt>
    d378:	cbz	w0, d3a8 <PyNumber_FloorDivide@plt+0x8778>
    d37c:	ldr	w1, [x19, #24]
    d380:	mov	x0, x22
    d384:	mov	w2, #0x0                   	// #0
    d388:	bl	cfa8 <PyNumber_FloorDivide@plt+0x8378>
    d38c:	b	d3c0 <PyNumber_FloorDivide@plt+0x8790>
    d390:	ldr	x0, [x22, #8]
    d394:	add	x1, x23, #0x2a8
    d398:	cmp	x0, x1
    d39c:	b.eq	d3d8 <PyNumber_FloorDivide@plt+0x87a8>  // b.none
    d3a0:	bl	4b60 <PyType_IsSubtype@plt>
    d3a4:	cbnz	w0, d3d8 <PyNumber_FloorDivide@plt+0x87a8>
    d3a8:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    d3ac:	ldr	x1, [x1, #3960]
    d3b0:	mov	x0, x1
    d3b4:	ldr	x2, [x1]
    d3b8:	add	x2, x2, #0x1
    d3bc:	str	x2, [x1]
    d3c0:	ldp	x29, x30, [sp, #16]
    d3c4:	ldp	x19, x20, [sp, #32]
    d3c8:	ldp	x21, x22, [sp, #48]
    d3cc:	ldr	x23, [sp, #64]
    d3d0:	add	sp, sp, #0x60
    d3d4:	ret
    d3d8:	ldurh	w3, [x19, #25]
    d3dc:	ldrb	w4, [x19, #28]
    d3e0:	ldr	w2, [x22, #24]
    d3e4:	rev16	w3, w3
    d3e8:	ldrb	w1, [x19, #27]
    d3ec:	and	w3, w3, #0xffff
    d3f0:	add	w4, w4, w2
    d3f4:	stp	w3, w1, [sp, #84]
    d3f8:	str	w4, [sp, #92]
    d3fc:	mov	w5, w3
    d400:	cmp	w1, #0x2
    d404:	add	w6, w4, #0x1
    d408:	b.ne	d450 <PyNumber_FloorDivide@plt+0x8820>  // b.any
    d40c:	tst	x3, #0x3
    d410:	b.ne	d450 <PyNumber_FloorDivide@plt+0x8820>  // b.any
    d414:	mov	w0, #0x5c29                	// #23593
    d418:	mov	w7, #0x5c28                	// #23592
    d41c:	movk	w0, #0xc28f, lsl #16
    d420:	movk	w7, #0x28f, lsl #16
    d424:	mov	w2, #0x1d                  	// #29
    d428:	mul	w0, w3, w0
    d42c:	ror	w8, w0, #2
    d430:	cmp	w8, w7
    d434:	b.hi	d460 <PyNumber_FloorDivide@plt+0x8830>  // b.pmore
    d438:	mov	w7, #0xd70a                	// #55050
    d43c:	ror	w0, w0, #4
    d440:	movk	w7, #0xa3, lsl #16
    d444:	cmp	w0, w7
    d448:	b.ls	d460 <PyNumber_FloorDivide@plt+0x8830>  // b.plast
    d44c:	nop
    d450:	adrp	x2, 15000 <PyInit__datetime@@Base+0x1f90>
    d454:	add	x2, x2, #0x810
    d458:	add	x2, x2, #0x40
    d45c:	ldr	w2, [x2, w1, sxtw #2]
    d460:	cmp	w4, #0x0
    d464:	b.le	d4b8 <PyNumber_FloorDivide@plt+0x8888>
    d468:	cmp	w4, w2
    d46c:	b.gt	d530 <PyNumber_FloorDivide@plt+0x8900>
    d470:	sub	w0, w3, #0x1
    d474:	mov	w2, #0x270e                	// #9998
    d478:	cmp	w0, w2
    d47c:	b.hi	d6ac <PyNumber_FloorDivide@plt+0x8a7c>  // b.pmore
    d480:	ldr	x0, [x19, #8]
    d484:	add	x3, x23, #0x2a8
    d488:	add	x2, x3, #0x680
    d48c:	cmp	x0, x2
    d490:	b.eq	d67c <PyNumber_FloorDivide@plt+0x8a4c>  // b.none
    d494:	add	x3, x3, #0x1a0
    d498:	cmp	x0, x3
    d49c:	b.eq	d608 <PyNumber_FloorDivide@plt+0x89d8>  // b.none
    d4a0:	mov	w3, w1
    d4a4:	mov	w2, w5
    d4a8:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    d4ac:	add	x1, x1, #0xa78
    d4b0:	bl	4970 <PyObject_CallFunction@plt>
    d4b4:	b	d3c0 <PyNumber_FloorDivide@plt+0x8790>
    d4b8:	b.ne	d530 <PyNumber_FloorDivide@plt+0x8900>  // b.any
    d4bc:	sub	w1, w1, #0x1
    d4c0:	str	w1, [sp, #88]
    d4c4:	cmp	w1, #0x0
    d4c8:	sub	w0, w3, #0x1
    d4cc:	b.le	d638 <PyNumber_FloorDivide@plt+0x8a08>
    d4d0:	cmp	w1, #0x2
    d4d4:	b.ne	d518 <PyNumber_FloorDivide@plt+0x88e8>  // b.any
    d4d8:	tst	x3, #0x3
    d4dc:	b.ne	d518 <PyNumber_FloorDivide@plt+0x88e8>  // b.any
    d4e0:	mov	w2, #0x5c29                	// #23593
    d4e4:	mov	w6, #0x5c28                	// #23592
    d4e8:	movk	w2, #0xc28f, lsl #16
    d4ec:	movk	w6, #0x28f, lsl #16
    d4f0:	mov	w4, #0x1d                  	// #29
    d4f4:	mul	w3, w3, w2
    d4f8:	ror	w2, w3, #2
    d4fc:	cmp	w2, w6
    d500:	b.hi	d528 <PyNumber_FloorDivide@plt+0x88f8>  // b.pmore
    d504:	mov	w2, #0xd70a                	// #55050
    d508:	ror	w3, w3, #4
    d50c:	movk	w2, #0xa3, lsl #16
    d510:	cmp	w3, w2
    d514:	b.ls	d528 <PyNumber_FloorDivide@plt+0x88f8>  // b.plast
    d518:	adrp	x2, 15000 <PyInit__datetime@@Base+0x1f90>
    d51c:	add	x2, x2, #0x810
    d520:	add	x2, x2, #0x40
    d524:	ldr	w4, [x2, w1, sxtw #2]
    d528:	str	w4, [sp, #92]
    d52c:	b	d474 <PyNumber_FloorDivide@plt+0x8844>
    d530:	add	w2, w2, #0x1
    d534:	cmp	w4, w2
    d538:	b.eq	d65c <PyNumber_FloorDivide@plt+0x8a2c>  // b.none
    d53c:	subs	w0, w3, #0x1
    d540:	add	w4, w3, #0x2
    d544:	csel	w4, w4, w0, mi  // mi = first
    d548:	mov	w2, #0x851f                	// #34079
    d54c:	movk	w2, #0x51eb, lsl #16
    d550:	mov	w7, #0x16d                 	// #365
    d554:	asr	w4, w4, #2
    d558:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
    d55c:	smull	x2, w0, w2
    d560:	add	x5, x5, #0x810
    d564:	cmp	w1, #0x2
    d568:	madd	w0, w0, w7, w4
    d56c:	asr	x4, x2, #37
    d570:	asr	x2, x2, #39
    d574:	add	w0, w0, w6
    d578:	sub	w2, w2, w4
    d57c:	ldr	w1, [x5, w1, sxtw #2]
    d580:	add	w0, w0, w2
    d584:	b.le	d5c8 <PyNumber_FloorDivide@plt+0x8998>
    d588:	tst	x3, #0x3
    d58c:	b.ne	d5c8 <PyNumber_FloorDivide@plt+0x8998>  // b.any
    d590:	mov	w2, #0x5c29                	// #23593
    d594:	mov	w4, #0x5c28                	// #23592
    d598:	movk	w2, #0xc28f, lsl #16
    d59c:	movk	w4, #0x28f, lsl #16
    d5a0:	mul	w3, w3, w2
    d5a4:	ror	w2, w3, #2
    d5a8:	cmp	w2, w4
    d5ac:	b.hi	d600 <PyNumber_FloorDivide@plt+0x89d0>  // b.pmore
    d5b0:	mov	w2, #0xd70a                	// #55050
    d5b4:	ror	w3, w3, #4
    d5b8:	movk	w2, #0xa3, lsl #16
    d5bc:	cmp	w3, w2
    d5c0:	b.ls	d600 <PyNumber_FloorDivide@plt+0x89d0>  // b.plast
    d5c4:	nop
    d5c8:	add	w0, w1, w0
    d5cc:	mov	w1, #0xb9da                	// #47578
    d5d0:	sub	w2, w0, #0x2
    d5d4:	movk	w1, #0x37, lsl #16
    d5d8:	sub	w0, w0, #0x1
    d5dc:	cmp	w2, w1
    d5e0:	b.hi	d6ac <PyNumber_FloorDivide@plt+0x8a7c>  // b.pmore
    d5e4:	add	x1, sp, #0x54
    d5e8:	add	x3, sp, #0x5c
    d5ec:	add	x2, sp, #0x58
    d5f0:	bl	4d18 <PyNumber_FloorDivide@plt+0xe8>
    d5f4:	ldp	w5, w1, [sp, #84]
    d5f8:	ldr	w4, [sp, #92]
    d5fc:	b	d480 <PyNumber_FloorDivide@plt+0x8850>
    d600:	add	w1, w1, #0x1
    d604:	b	d5c8 <PyNumber_FloorDivide@plt+0x8998>
    d608:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
    d60c:	str	wzr, [sp]
    d610:	str	x0, [sp, #8]
    d614:	mov	w2, w4
    d618:	ldr	x7, [x7, #4024]
    d61c:	mov	w0, w5
    d620:	mov	w6, #0x0                   	// #0
    d624:	mov	w4, #0x0                   	// #0
    d628:	mov	w3, #0x0                   	// #0
    d62c:	mov	w5, #0x0                   	// #0
    d630:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    d634:	b	d3c0 <PyNumber_FloorDivide@plt+0x8790>
    d638:	mov	w6, #0xc                   	// #12
    d63c:	mov	w2, #0x1f                  	// #31
    d640:	mov	w5, w0
    d644:	mov	w1, w6
    d648:	mov	w4, w2
    d64c:	stp	w0, w6, [sp, #84]
    d650:	sub	w0, w3, #0x2
    d654:	str	w2, [sp, #92]
    d658:	b	d474 <PyNumber_FloorDivide@plt+0x8844>
    d65c:	add	w1, w1, #0x1
    d660:	mov	w2, #0x1                   	// #1
    d664:	stp	w1, w2, [sp, #88]
    d668:	cmp	w1, #0xc
    d66c:	b.gt	d690 <PyNumber_FloorDivide@plt+0x8a60>
    d670:	sub	w0, w3, #0x1
    d674:	mov	w4, w2
    d678:	b	d474 <PyNumber_FloorDivide@plt+0x8844>
    d67c:	mov	x3, x0
    d680:	mov	w2, w4
    d684:	mov	w0, w5
    d688:	bl	70f8 <PyNumber_FloorDivide@plt+0x24c8>
    d68c:	b	d3c0 <PyNumber_FloorDivide@plt+0x8790>
    d690:	add	w6, w3, #0x1
    d694:	mov	w4, w2
    d698:	mov	w1, w2
    d69c:	mov	w5, w6
    d6a0:	mov	w0, w3
    d6a4:	stp	w6, w2, [sp, #84]
    d6a8:	b	d474 <PyNumber_FloorDivide@plt+0x8844>
    d6ac:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d6b0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    d6b4:	add	x1, x1, #0x538
    d6b8:	ldr	x0, [x0, #4008]
    d6bc:	ldr	x0, [x0]
    d6c0:	bl	48a0 <PyErr_SetString@plt>
    d6c4:	mov	x0, #0x0                   	// #0
    d6c8:	b	d3c0 <PyNumber_FloorDivide@plt+0x8790>
    d6cc:	nop
    d6d0:	stp	x29, x30, [sp, #-80]!
    d6d4:	cmp	w0, #0x17
    d6d8:	mov	x29, sp
    d6dc:	b.hi	d824 <PyNumber_FloorDivide@plt+0x8bf4>  // b.pmore
    d6e0:	stp	x23, x24, [sp, #48]
    d6e4:	cmp	w1, #0x3b
    d6e8:	mov	w23, w1
    d6ec:	b.hi	d844 <PyNumber_FloorDivide@plt+0x8c14>  // b.pmore
    d6f0:	mov	w24, w2
    d6f4:	cmp	w2, #0x3b
    d6f8:	b.hi	d894 <PyNumber_FloorDivide@plt+0x8c64>  // b.pmore
    d6fc:	stp	x19, x20, [sp, #16]
    d700:	mov	w20, w3
    d704:	stp	x21, x22, [sp, #32]
    d708:	mov	w22, w0
    d70c:	mov	w0, #0x423f                	// #16959
    d710:	movk	w0, #0xf, lsl #16
    d714:	cmp	w3, w0
    d718:	b.hi	d868 <PyNumber_FloorDivide@plt+0x8c38>  // b.pmore
    d71c:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
    d720:	str	x25, [sp, #64]
    d724:	mov	x19, x4
    d728:	mov	x25, x5
    d72c:	ldr	x0, [x21, #4024]
    d730:	cmp	x4, x0
    d734:	b.eq	d758 <PyNumber_FloorDivide@plt+0x8b28>  // b.none
    d738:	ldr	x0, [x4, #8]
    d73c:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    d740:	add	x1, x1, #0x2a8
    d744:	add	x1, x1, #0x340
    d748:	cmp	x0, x1
    d74c:	b.eq	d758 <PyNumber_FloorDivide@plt+0x8b28>  // b.none
    d750:	bl	4b60 <PyType_IsSubtype@plt>
    d754:	cbz	w0, d7ec <PyNumber_FloorDivide@plt+0x8bbc>
    d758:	ldr	x21, [x21, #4024]
    d75c:	mov	x0, x25
    d760:	ldr	x2, [x25, #304]
    d764:	cmp	x19, x21
    d768:	cset	x1, ne  // ne = any
    d76c:	cset	w25, ne  // ne = any
    d770:	blr	x2
    d774:	cbz	x0, d7d4 <PyNumber_FloorDivide@plt+0x8ba4>
    d778:	asr	w1, w20, #16
    d77c:	mov	x2, #0xffffffffffffffff    	// #-1
    d780:	rev16	w20, w20
    d784:	str	x2, [x0, #16]
    d788:	strb	w25, [x0, #24]
    d78c:	cmp	x19, x21
    d790:	strb	w22, [x0, #25]
    d794:	strb	w23, [x0, #26]
    d798:	strb	w24, [x0, #27]
    d79c:	strb	w1, [x0, #28]
    d7a0:	sturh	w20, [x0, #29]
    d7a4:	b.eq	d7b8 <PyNumber_FloorDivide@plt+0x8b88>  // b.none
    d7a8:	ldr	x1, [x19]
    d7ac:	add	x1, x1, #0x1
    d7b0:	str	x1, [x19]
    d7b4:	str	x19, [x0, #32]
    d7b8:	strb	wzr, [x0, #31]
    d7bc:	ldp	x19, x20, [sp, #16]
    d7c0:	ldp	x21, x22, [sp, #32]
    d7c4:	ldp	x23, x24, [sp, #48]
    d7c8:	ldr	x25, [sp, #64]
    d7cc:	ldp	x29, x30, [sp], #80
    d7d0:	ret
    d7d4:	ldp	x19, x20, [sp, #16]
    d7d8:	ldp	x21, x22, [sp, #32]
    d7dc:	ldp	x23, x24, [sp, #48]
    d7e0:	ldr	x25, [sp, #64]
    d7e4:	ldp	x29, x30, [sp], #80
    d7e8:	ret
    d7ec:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d7f0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    d7f4:	ldr	x2, [x19, #8]
    d7f8:	add	x1, x1, #0x60
    d7fc:	ldr	x0, [x0, #3976]
    d800:	ldr	x2, [x2, #24]
    d804:	ldr	x0, [x0]
    d808:	bl	4b90 <PyErr_Format@plt>
    d80c:	mov	x0, #0x0                   	// #0
    d810:	ldp	x19, x20, [sp, #16]
    d814:	ldp	x21, x22, [sp, #32]
    d818:	ldp	x23, x24, [sp, #48]
    d81c:	ldr	x25, [sp, #64]
    d820:	b	d7cc <PyNumber_FloorDivide@plt+0x8b9c>
    d824:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d828:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    d82c:	add	x1, x1, #0xfd0
    d830:	ldr	x0, [x0, #3968]
    d834:	ldr	x0, [x0]
    d838:	bl	48a0 <PyErr_SetString@plt>
    d83c:	mov	x0, #0x0                   	// #0
    d840:	b	d7cc <PyNumber_FloorDivide@plt+0x8b9c>
    d844:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    d848:	add	x1, x1, #0xfe8
    d84c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d850:	ldr	x0, [x0, #3968]
    d854:	ldr	x0, [x0]
    d858:	bl	48a0 <PyErr_SetString@plt>
    d85c:	mov	x0, #0x0                   	// #0
    d860:	ldp	x23, x24, [sp, #48]
    d864:	b	d7cc <PyNumber_FloorDivide@plt+0x8b9c>
    d868:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d86c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    d870:	add	x1, x1, #0x18
    d874:	ldr	x0, [x0, #3968]
    d878:	ldr	x0, [x0]
    d87c:	bl	48a0 <PyErr_SetString@plt>
    d880:	mov	x0, #0x0                   	// #0
    d884:	ldp	x19, x20, [sp, #16]
    d888:	ldp	x21, x22, [sp, #32]
    d88c:	ldp	x23, x24, [sp, #48]
    d890:	b	d7cc <PyNumber_FloorDivide@plt+0x8b9c>
    d894:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    d898:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d89c:	add	x1, x1, #0x0
    d8a0:	b	d850 <PyNumber_FloorDivide@plt+0x8c20>
    d8a4:	nop
    d8a8:	stp	x29, x30, [sp, #-80]!
    d8ac:	mov	x29, sp
    d8b0:	stp	x19, x20, [sp, #16]
    d8b4:	stp	x21, x22, [sp, #32]
    d8b8:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
    d8bc:	stp	x23, x24, [sp, #48]
    d8c0:	stp	x25, x26, [sp, #64]
    d8c4:	ldrb	w1, [x0, #33]
    d8c8:	ldrb	w19, [x0, #32]
    d8cc:	ldrb	w25, [x0, #24]
    d8d0:	ldrb	w2, [x0, #34]
    d8d4:	lsl	w1, w1, #8
    d8d8:	orr	w19, w1, w19, lsl #16
    d8dc:	ldrb	w3, [x0, #31]
    d8e0:	orr	w19, w19, w2
    d8e4:	ldrb	w1, [x0, #29]
    d8e8:	ldrb	w2, [x0, #30]
    d8ec:	ldur	w22, [x0, #29]
    d8f0:	cbz	w25, d9d8 <PyNumber_FloorDivide@plt+0x8da8>
    d8f4:	ldr	x4, [x21, #4024]
    d8f8:	ldr	x24, [x0, #40]
    d8fc:	cmp	x24, x4
    d900:	cset	w26, ne  // ne = any
    d904:	mov	w25, w26
    d908:	ldrb	w23, [x0, #35]
    d90c:	cmp	w1, #0x17
    d910:	b.hi	da4c <PyNumber_FloorDivide@plt+0x8e1c>  // b.pmore
    d914:	cmp	w2, #0x3b
    d918:	b.hi	da2c <PyNumber_FloorDivide@plt+0x8dfc>  // b.pmore
    d91c:	cmp	w3, #0x3b
    d920:	b.hi	da8c <PyNumber_FloorDivide@plt+0x8e5c>  // b.pmore
    d924:	mov	w0, #0x423f                	// #16959
    d928:	movk	w0, #0xf, lsl #16
    d92c:	cmp	w19, w0
    d930:	b.gt	da6c <PyNumber_FloorDivide@plt+0x8e3c>
    d934:	cmp	w23, #0x1
    d938:	b.hi	da0c <PyNumber_FloorDivide@plt+0x8ddc>  // b.pmore
    d93c:	ldr	x0, [x21, #4024]
    d940:	adrp	x20, 29000 <PyInit__datetime@@Base+0x15f90>
    d944:	cmp	x24, x0
    d948:	b.eq	d96c <PyNumber_FloorDivide@plt+0x8d3c>  // b.none
    d94c:	ldr	x0, [x24, #8]
    d950:	adrp	x20, 29000 <PyInit__datetime@@Base+0x15f90>
    d954:	add	x1, x20, #0x2a8
    d958:	add	x1, x1, #0x340
    d95c:	cmp	x0, x1
    d960:	b.eq	d96c <PyNumber_FloorDivide@plt+0x8d3c>  // b.none
    d964:	bl	4b60 <PyType_IsSubtype@plt>
    d968:	cbz	w0, d9e4 <PyNumber_FloorDivide@plt+0x8db4>
    d96c:	add	x0, x20, #0x2a8
    d970:	and	x1, x26, #0x1
    d974:	add	x0, x0, #0x4e0
    d978:	ldr	x2, [x0, #304]
    d97c:	blr	x2
    d980:	cbz	x0, d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    d984:	ldr	x21, [x21, #4024]
    d988:	asr	w1, w19, #8
    d98c:	mov	x2, #0xffffffffffffffff    	// #-1
    d990:	str	x2, [x0, #16]
    d994:	strb	w25, [x0, #24]
    d998:	cmp	x24, x21
    d99c:	stur	w22, [x0, #25]
    d9a0:	strb	w1, [x0, #29]
    d9a4:	strb	w19, [x0, #30]
    d9a8:	b.eq	d9bc <PyNumber_FloorDivide@plt+0x8d8c>  // b.none
    d9ac:	ldr	x1, [x24]
    d9b0:	add	x1, x1, #0x1
    d9b4:	str	x1, [x24]
    d9b8:	str	x24, [x0, #32]
    d9bc:	strb	w23, [x0, #31]
    d9c0:	ldp	x19, x20, [sp, #16]
    d9c4:	ldp	x21, x22, [sp, #32]
    d9c8:	ldp	x23, x24, [sp, #48]
    d9cc:	ldp	x25, x26, [sp, #64]
    d9d0:	ldp	x29, x30, [sp], #80
    d9d4:	ret
    d9d8:	ldr	x24, [x21, #4024]
    d9dc:	mov	w26, #0x0                   	// #0
    d9e0:	b	d908 <PyNumber_FloorDivide@plt+0x8cd8>
    d9e4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    d9e8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    d9ec:	ldr	x2, [x24, #8]
    d9f0:	add	x1, x1, #0x60
    d9f4:	ldr	x0, [x0, #3976]
    d9f8:	ldr	x2, [x2, #24]
    d9fc:	ldr	x0, [x0]
    da00:	bl	4b90 <PyErr_Format@plt>
    da04:	mov	x0, #0x0                   	// #0
    da08:	b	d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    da0c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    da10:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    da14:	add	x1, x1, #0x40
    da18:	ldr	x0, [x0, #3968]
    da1c:	ldr	x0, [x0]
    da20:	bl	48a0 <PyErr_SetString@plt>
    da24:	mov	x0, #0x0                   	// #0
    da28:	b	d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    da2c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    da30:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    da34:	add	x1, x1, #0xfe8
    da38:	ldr	x0, [x0, #3968]
    da3c:	ldr	x0, [x0]
    da40:	bl	48a0 <PyErr_SetString@plt>
    da44:	mov	x0, #0x0                   	// #0
    da48:	b	d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    da4c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    da50:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    da54:	add	x1, x1, #0xfd0
    da58:	ldr	x0, [x0, #3968]
    da5c:	ldr	x0, [x0]
    da60:	bl	48a0 <PyErr_SetString@plt>
    da64:	mov	x0, #0x0                   	// #0
    da68:	b	d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    da6c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    da70:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    da74:	add	x1, x1, #0x18
    da78:	ldr	x0, [x0, #3968]
    da7c:	ldr	x0, [x0]
    da80:	bl	48a0 <PyErr_SetString@plt>
    da84:	mov	x0, #0x0                   	// #0
    da88:	b	d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    da8c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    da90:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    da94:	add	x1, x1, #0x0
    da98:	ldr	x0, [x0, #3968]
    da9c:	ldr	x0, [x0]
    daa0:	bl	48a0 <PyErr_SetString@plt>
    daa4:	mov	x0, #0x0                   	// #0
    daa8:	b	d9c0 <PyNumber_FloorDivide@plt+0x8d90>
    daac:	nop
    dab0:	stp	x29, x30, [sp, #-112]!
    dab4:	mov	x29, sp
    dab8:	add	x1, sp, #0x38
    dabc:	stp	x19, x20, [sp, #16]
    dac0:	bl	4bf0 <_PyTime_localtime@plt>
    dac4:	cbnz	w0, dba0 <PyNumber_FloorDivide@plt+0x8f70>
    dac8:	mov	w19, w0
    dacc:	stp	x21, x22, [sp, #32]
    dad0:	mov	w1, #0x517f                	// #20863
    dad4:	ldp	x0, x22, [sp, #96]
    dad8:	movk	w1, #0x1, lsl #16
    dadc:	mov	w21, w0
    dae0:	cmp	w0, w1
    dae4:	b.ls	db10 <PyNumber_FloorDivide@plt+0x8ee0>  // b.plast
    dae8:	mov	w19, #0x4507                	// #17671
    daec:	add	w1, w1, #0x1
    daf0:	movk	w19, #0xc22e, lsl #16
    daf4:	smull	x19, w0, w19
    daf8:	lsr	x19, x19, #32
    dafc:	add	w19, w19, w0
    db00:	asr	w19, w19, #16
    db04:	sub	w19, w19, w0, asr #31
    db08:	msub	w21, w19, w1, w0
    db0c:	tbnz	w21, #31, dbe0 <PyNumber_FloorDivide@plt+0x8fb0>
    db10:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    db14:	add	x0, x0, #0x2a8
    db18:	mov	x1, #0x0                   	// #0
    db1c:	ldr	x2, [x0, #304]
    db20:	blr	x2
    db24:	mov	x20, x0
    db28:	cbz	x0, db9c <PyNumber_FloorDivide@plt+0x8f6c>
    db2c:	mov	x1, #0xffffffffffffffff    	// #-1
    db30:	str	x1, [x20, #16]
    db34:	stp	w19, w21, [x20, #24]
    db38:	str	wzr, [x20, #32]
    db3c:	cbz	x22, dbd0 <PyNumber_FloorDivide@plt+0x8fa0>
    db40:	mov	x0, x22
    db44:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    db48:	add	x1, x1, #0x550
    db4c:	bl	4940 <PyUnicode_DecodeLocale@plt>
    db50:	mov	x21, x0
    db54:	cbz	x0, dc14 <PyNumber_FloorDivide@plt+0x8fe4>
    db58:	mov	x1, x0
    db5c:	mov	x0, x20
    db60:	bl	67c8 <PyNumber_FloorDivide@plt+0x1b98>
    db64:	mov	x19, x0
    db68:	ldr	x1, [x21]
    db6c:	sub	x0, x1, #0x1
    db70:	str	x0, [x21]
    db74:	cbz	x0, dc08 <PyNumber_FloorDivide@plt+0x8fd8>
    db78:	ldr	x0, [x20]
    db7c:	sub	x0, x0, #0x1
    db80:	str	x0, [x20]
    db84:	cbz	x0, dbb4 <PyNumber_FloorDivide@plt+0x8f84>
    db88:	mov	x0, x19
    db8c:	ldp	x19, x20, [sp, #16]
    db90:	ldp	x21, x22, [sp, #32]
    db94:	ldp	x29, x30, [sp], #112
    db98:	ret
    db9c:	ldp	x21, x22, [sp, #32]
    dba0:	mov	x19, #0x0                   	// #0
    dba4:	mov	x0, x19
    dba8:	ldp	x19, x20, [sp, #16]
    dbac:	ldp	x29, x30, [sp], #112
    dbb0:	ret
    dbb4:	mov	x0, x20
    dbb8:	bl	4830 <_Py_Dealloc@plt>
    dbbc:	mov	x0, x19
    dbc0:	ldp	x19, x20, [sp, #16]
    dbc4:	ldp	x21, x22, [sp, #32]
    dbc8:	ldp	x29, x30, [sp], #112
    dbcc:	ret
    dbd0:	mov	x1, #0x0                   	// #0
    dbd4:	bl	67c8 <PyNumber_FloorDivide@plt+0x1b98>
    dbd8:	mov	x19, x0
    dbdc:	b	db78 <PyNumber_FloorDivide@plt+0x8f48>
    dbe0:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    dbe4:	add	x0, x0, #0x2a8
    dbe8:	add	w21, w21, w1
    dbec:	sub	w19, w19, #0x1
    dbf0:	mov	x1, #0x0                   	// #0
    dbf4:	ldr	x2, [x0, #304]
    dbf8:	blr	x2
    dbfc:	mov	x20, x0
    dc00:	cbnz	x0, db2c <PyNumber_FloorDivide@plt+0x8efc>
    dc04:	b	db9c <PyNumber_FloorDivide@plt+0x8f6c>
    dc08:	mov	x0, x21
    dc0c:	bl	4830 <_Py_Dealloc@plt>
    dc10:	b	db78 <PyNumber_FloorDivide@plt+0x8f48>
    dc14:	mov	x19, #0x0                   	// #0
    dc18:	b	db78 <PyNumber_FloorDivide@plt+0x8f48>
    dc1c:	nop
    dc20:	sub	sp, sp, #0x50
    dc24:	mov	x18, x0
    dc28:	mov	w15, w2
    dc2c:	mov	w3, #0x423f                	// #16959
    dc30:	movk	w3, #0xf, lsl #16
    dc34:	stp	x29, x30, [sp, #16]
    dc38:	add	x29, sp, #0x10
    dc3c:	ldr	w4, [x1, #24]
    dc40:	stp	x19, x20, [sp, #32]
    dc44:	str	x21, [sp, #48]
    dc48:	ldrb	w19, [x0, #33]
    dc4c:	ldrb	w6, [x0, #32]
    dc50:	ldrb	w2, [x0, #28]
    dc54:	lsl	w19, w19, #8
    dc58:	ldrb	w0, [x0, #34]
    dc5c:	orr	w6, w19, w6, lsl #16
    dc60:	ldurh	w7, [x18, #25]
    dc64:	orr	w6, w6, w0
    dc68:	ldrb	w5, [x18, #31]
    dc6c:	ldp	w0, w19, [x1, #28]
    dc70:	madd	w2, w15, w4, w2
    dc74:	ldrb	w1, [x18, #27]
    dc78:	rev16	w7, w7
    dc7c:	and	w7, w7, #0xffff
    dc80:	stp	w7, w1, [sp, #68]
    dc84:	madd	w19, w15, w19, w6
    dc88:	str	w2, [sp, #76]
    dc8c:	ldrb	w21, [x18, #29]
    dc90:	madd	w15, w15, w0, w5
    dc94:	ldrb	w20, [x18, #30]
    dc98:	mov	w8, w7
    dc9c:	cmp	w19, w3
    dca0:	b.ls	dcc8 <PyNumber_FloorDivide@plt+0x9098>  // b.plast
    dca4:	mov	w0, #0xde83                	// #56963
    dca8:	add	w3, w3, #0x1
    dcac:	movk	w0, #0x431b, lsl #16
    dcb0:	smull	x0, w19, w0
    dcb4:	asr	x0, x0, #50
    dcb8:	sub	w0, w0, w19, asr #31
    dcbc:	msub	w19, w0, w3, w19
    dcc0:	tbnz	w19, #31, df7c <PyNumber_FloorDivide@plt+0x934c>
    dcc4:	add	w15, w15, w0
    dcc8:	cmp	w15, #0x3b
    dccc:	b.ls	de20 <PyNumber_FloorDivide@plt+0x91f0>  // b.plast
    dcd0:	mov	w3, #0x8889                	// #34953
    dcd4:	movk	w3, #0x8888, lsl #16
    dcd8:	smull	x3, w15, w3
    dcdc:	lsr	x3, x3, #32
    dce0:	add	w3, w15, w3
    dce4:	asr	w3, w3, #5
    dce8:	sub	w3, w3, w15, asr #31
    dcec:	lsl	w0, w3, #4
    dcf0:	sub	w0, w0, w3
    dcf4:	subs	w15, w15, w0, lsl #2
    dcf8:	b.mi	df64 <PyNumber_FloorDivide@plt+0x9334>  // b.first
    dcfc:	add	w20, w20, w3
    dd00:	cmp	w20, #0x3b
    dd04:	b.ls	de28 <PyNumber_FloorDivide@plt+0x91f8>  // b.plast
    dd08:	mov	w3, #0x8889                	// #34953
    dd0c:	movk	w3, #0x8888, lsl #16
    dd10:	smull	x3, w20, w3
    dd14:	lsr	x3, x3, #32
    dd18:	add	w3, w20, w3
    dd1c:	asr	w3, w3, #5
    dd20:	sub	w3, w3, w20, asr #31
    dd24:	lsl	w0, w3, #4
    dd28:	sub	w0, w0, w3
    dd2c:	subs	w20, w20, w0, lsl #2
    dd30:	b.pl	dd3c <PyNumber_FloorDivide@plt+0x910c>  // b.nfrst
    dd34:	sub	w3, w3, #0x1
    dd38:	add	w20, w20, #0x3c
    dd3c:	add	w21, w21, w3
    dd40:	cmp	w21, #0x17
    dd44:	b.ls	dd78 <PyNumber_FloorDivide@plt+0x9148>  // b.plast
    dd48:	mov	w3, #0xaaab                	// #43691
    dd4c:	movk	w3, #0x2aaa, lsl #16
    dd50:	smull	x3, w21, w3
    dd54:	asr	x3, x3, #34
    dd58:	sub	w3, w3, w21, asr #31
    dd5c:	add	w0, w3, w3, lsl #1
    dd60:	subs	w21, w21, w0, lsl #3
    dd64:	b.pl	dd70 <PyNumber_FloorDivide@plt+0x9140>  // b.nfrst
    dd68:	sub	w3, w3, #0x1
    dd6c:	add	w21, w21, #0x18
    dd70:	add	w2, w2, w3
    dd74:	str	w2, [sp, #76]
    dd78:	cmp	w1, #0x2
    dd7c:	add	w4, w2, #0x1
    dd80:	b.ne	dd8c <PyNumber_FloorDivide@plt+0x915c>  // b.any
    dd84:	tst	x7, #0x3
    dd88:	b.eq	df88 <PyNumber_FloorDivide@plt+0x9358>  // b.none
    dd8c:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
    dd90:	add	x0, x0, #0x810
    dd94:	add	x0, x0, #0x40
    dd98:	ldr	w0, [x0, w1, sxtw #2]
    dd9c:	cmp	w2, #0x0
    dda0:	b.le	dfc4 <PyNumber_FloorDivide@plt+0x9394>
    dda4:	cmp	w0, w2
    dda8:	b.lt	de4c <PyNumber_FloorDivide@plt+0x921c>  // b.tstop
    ddac:	sub	w0, w7, #0x1
    ddb0:	mov	w3, #0x270e                	// #9998
    ddb4:	cmp	w0, w3
    ddb8:	b.hi	e0ec <PyNumber_FloorDivide@plt+0x94bc>  // b.pmore
    ddbc:	ldrb	w0, [x18, #24]
    ddc0:	cbz	w0, df0c <PyNumber_FloorDivide@plt+0x92dc>
    ddc4:	ldr	x0, [x18, #8]
    ddc8:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    ddcc:	add	x3, x3, #0x2a8
    ddd0:	add	x3, x3, #0x1a0
    ddd4:	cmp	x0, x3
    ddd8:	ldr	x4, [x18, #40]
    dddc:	b.eq	df2c <PyNumber_FloorDivide@plt+0x92fc>  // b.none
    dde0:	str	w19, [sp]
    dde4:	mov	w3, w1
    dde8:	str	x4, [sp, #8]
    ddec:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    ddf0:	mov	w4, w2
    ddf4:	mov	w7, w15
    ddf8:	mov	w6, w20
    ddfc:	mov	w5, w21
    de00:	add	x1, x1, #0x348
    de04:	mov	w2, w8
    de08:	bl	4970 <PyObject_CallFunction@plt>
    de0c:	ldp	x29, x30, [sp, #16]
    de10:	ldp	x19, x20, [sp, #32]
    de14:	ldr	x21, [sp, #48]
    de18:	add	sp, sp, #0x50
    de1c:	ret
    de20:	cmp	w20, #0x3b
    de24:	b.gt	e018 <PyNumber_FloorDivide@plt+0x93e8>
    de28:	cmp	w21, #0x17
    de2c:	b.le	dd78 <PyNumber_FloorDivide@plt+0x9148>
    de30:	mov	w3, #0xaaab                	// #43691
    de34:	movk	w3, #0xaaaa, lsl #16
    de38:	umull	x3, w21, w3
    de3c:	lsr	x3, x3, #36
    de40:	add	w0, w3, w3, lsl #1
    de44:	sub	w21, w21, w0, lsl #3
    de48:	b	dd70 <PyNumber_FloorDivide@plt+0x9140>
    de4c:	add	w0, w0, #0x1
    de50:	cmp	w0, w2
    de54:	b.eq	e094 <PyNumber_FloorDivide@plt+0x9464>  // b.none
    de58:	subs	w0, w7, #0x1
    de5c:	add	w3, w7, #0x2
    de60:	mov	w2, #0x851f                	// #34079
    de64:	csel	w3, w3, w0, mi  // mi = first
    de68:	movk	w2, #0x51eb, lsl #16
    de6c:	mov	w6, #0x16d                 	// #365
    de70:	asr	w3, w3, #2
    de74:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
    de78:	smull	x2, w0, w2
    de7c:	add	x5, x5, #0x810
    de80:	cmp	w1, #0x2
    de84:	madd	w0, w0, w6, w3
    de88:	asr	x3, x2, #37
    de8c:	asr	x2, x2, #39
    de90:	sub	w2, w2, w3
    de94:	ldr	w1, [x5, w1, sxtw #2]
    de98:	add	w0, w0, w2
    de9c:	add	w0, w0, w4
    dea0:	b.le	ded0 <PyNumber_FloorDivide@plt+0x92a0>
    dea4:	tst	x7, #0x3
    dea8:	b.ne	ded0 <PyNumber_FloorDivide@plt+0x92a0>  // b.any
    deac:	mov	w2, #0x5c29                	// #23593
    deb0:	mov	w3, #0x5c28                	// #23592
    deb4:	movk	w2, #0xc28f, lsl #16
    deb8:	movk	w3, #0x28f, lsl #16
    debc:	mul	w7, w7, w2
    dec0:	ror	w2, w7, #2
    dec4:	cmp	w2, w3
    dec8:	b.ls	e0d0 <PyNumber_FloorDivide@plt+0x94a0>  // b.plast
    decc:	add	w1, w1, #0x1
    ded0:	add	w0, w1, w0
    ded4:	mov	w1, #0xb9da                	// #47578
    ded8:	sub	w2, w0, #0x2
    dedc:	movk	w1, #0x37, lsl #16
    dee0:	sub	w0, w0, #0x1
    dee4:	cmp	w2, w1
    dee8:	b.hi	e0ec <PyNumber_FloorDivide@plt+0x94bc>  // b.pmore
    deec:	add	x2, sp, #0x48
    def0:	add	x1, sp, #0x44
    def4:	add	x3, sp, #0x4c
    def8:	bl	4d18 <PyNumber_FloorDivide@plt+0xe8>
    defc:	ldrb	w0, [x18, #24]
    df00:	ldp	w8, w1, [sp, #68]
    df04:	ldr	w2, [sp, #76]
    df08:	cbnz	w0, ddc4 <PyNumber_FloorDivide@plt+0x9194>
    df0c:	ldr	x0, [x18, #8]
    df10:	adrp	x4, 28000 <PyInit__datetime@@Base+0x14f90>
    df14:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    df18:	add	x3, x3, #0x2a8
    df1c:	add	x3, x3, #0x1a0
    df20:	ldr	x4, [x4, #4024]
    df24:	cmp	x0, x3
    df28:	b.ne	dde0 <PyNumber_FloorDivide@plt+0x91b0>  // b.any
    df2c:	str	wzr, [sp]
    df30:	mov	x7, x4
    df34:	str	x0, [sp, #8]
    df38:	mov	w6, w19
    df3c:	mov	w4, w20
    df40:	mov	w3, w21
    df44:	mov	w5, w15
    df48:	mov	w0, w8
    df4c:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
    df50:	ldp	x29, x30, [sp, #16]
    df54:	ldp	x19, x20, [sp, #32]
    df58:	ldr	x21, [sp, #48]
    df5c:	add	sp, sp, #0x50
    df60:	ret
    df64:	sub	w3, w3, #0x1
    df68:	add	w15, w15, #0x3c
    df6c:	add	w20, w20, w3
    df70:	cmp	w20, #0x3b
    df74:	b.ls	de28 <PyNumber_FloorDivide@plt+0x91f8>  // b.plast
    df78:	b	dd08 <PyNumber_FloorDivide@plt+0x90d8>
    df7c:	sub	w0, w0, #0x1
    df80:	add	w19, w19, w3
    df84:	b	dcc4 <PyNumber_FloorDivide@plt+0x9094>
    df88:	mov	w3, #0x5c29                	// #23593
    df8c:	mov	w5, #0x5c28                	// #23592
    df90:	movk	w3, #0xc28f, lsl #16
    df94:	movk	w5, #0x28f, lsl #16
    df98:	mov	w0, #0x1d                  	// #29
    df9c:	mul	w3, w7, w3
    dfa0:	ror	w6, w3, #2
    dfa4:	cmp	w6, w5
    dfa8:	b.hi	dd9c <PyNumber_FloorDivide@plt+0x916c>  // b.pmore
    dfac:	mov	w5, #0xd70a                	// #55050
    dfb0:	ror	w3, w3, #4
    dfb4:	movk	w5, #0xa3, lsl #16
    dfb8:	cmp	w3, w5
    dfbc:	b.ls	dd9c <PyNumber_FloorDivide@plt+0x916c>  // b.plast
    dfc0:	b	dd8c <PyNumber_FloorDivide@plt+0x915c>
    dfc4:	b.ne	de4c <PyNumber_FloorDivide@plt+0x921c>  // b.any
    dfc8:	sub	w1, w1, #0x1
    dfcc:	str	w1, [sp, #72]
    dfd0:	cmp	w1, #0x0
    dfd4:	sub	w0, w7, #0x1
    dfd8:	b.le	e070 <PyNumber_FloorDivide@plt+0x9440>
    dfdc:	cmp	w1, #0x2
    dfe0:	b.ne	e058 <PyNumber_FloorDivide@plt+0x9428>  // b.any
    dfe4:	tst	x7, #0x3
    dfe8:	b.ne	e058 <PyNumber_FloorDivide@plt+0x9428>  // b.any
    dfec:	mov	w3, #0x5c29                	// #23593
    dff0:	mov	w4, #0x5c28                	// #23592
    dff4:	movk	w3, #0xc28f, lsl #16
    dff8:	movk	w4, #0x28f, lsl #16
    dffc:	mov	w2, #0x1d                  	// #29
    e000:	mul	w7, w7, w3
    e004:	ror	w3, w7, #2
    e008:	cmp	w3, w4
    e00c:	b.ls	e044 <PyNumber_FloorDivide@plt+0x9414>  // b.plast
    e010:	str	w2, [sp, #76]
    e014:	b	ddb0 <PyNumber_FloorDivide@plt+0x9180>
    e018:	mov	w0, #0x8889                	// #34953
    e01c:	movk	w0, #0x8888, lsl #16
    e020:	umull	x0, w20, w0
    e024:	lsr	x0, x0, #37
    e028:	add	w21, w21, w0
    e02c:	lsl	w3, w0, #4
    e030:	cmp	w21, #0x17
    e034:	sub	w0, w3, w0
    e038:	sub	w20, w20, w0, lsl #2
    e03c:	b.gt	de30 <PyNumber_FloorDivide@plt+0x9200>
    e040:	b	dd78 <PyNumber_FloorDivide@plt+0x9148>
    e044:	mov	w3, #0xd70a                	// #55050
    e048:	ror	w7, w7, #4
    e04c:	movk	w3, #0xa3, lsl #16
    e050:	cmp	w7, w3
    e054:	b.ls	e010 <PyNumber_FloorDivide@plt+0x93e0>  // b.plast
    e058:	adrp	x2, 15000 <PyInit__datetime@@Base+0x1f90>
    e05c:	add	x2, x2, #0x810
    e060:	add	x2, x2, #0x40
    e064:	ldr	w2, [x2, w1, sxtw #2]
    e068:	str	w2, [sp, #76]
    e06c:	b	ddb0 <PyNumber_FloorDivide@plt+0x9180>
    e070:	mov	w4, #0xc                   	// #12
    e074:	mov	w3, #0x1f                  	// #31
    e078:	mov	w8, w0
    e07c:	mov	w1, w4
    e080:	mov	w2, w3
    e084:	stp	w0, w4, [sp, #68]
    e088:	sub	w0, w7, #0x2
    e08c:	str	w3, [sp, #76]
    e090:	b	ddb0 <PyNumber_FloorDivide@plt+0x9180>
    e094:	add	w1, w1, #0x1
    e098:	mov	w3, #0x1                   	// #1
    e09c:	stp	w1, w3, [sp, #72]
    e0a0:	cmp	w1, #0xc
    e0a4:	b.gt	e0b4 <PyNumber_FloorDivide@plt+0x9484>
    e0a8:	sub	w0, w7, #0x1
    e0ac:	mov	w2, w3
    e0b0:	b	ddb0 <PyNumber_FloorDivide@plt+0x9180>
    e0b4:	add	w4, w7, #0x1
    e0b8:	mov	w2, w3
    e0bc:	mov	w1, w3
    e0c0:	mov	w8, w4
    e0c4:	mov	w0, w7
    e0c8:	stp	w4, w3, [sp, #68]
    e0cc:	b	ddb0 <PyNumber_FloorDivide@plt+0x9180>
    e0d0:	mov	w2, #0xd70a                	// #55050
    e0d4:	ror	w7, w7, #4
    e0d8:	movk	w2, #0xa3, lsl #16
    e0dc:	cmp	w7, w2
    e0e0:	b.hi	ded0 <PyNumber_FloorDivide@plt+0x92a0>  // b.pmore
    e0e4:	add	w1, w1, #0x1
    e0e8:	b	ded0 <PyNumber_FloorDivide@plt+0x92a0>
    e0ec:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e0f0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    e0f4:	add	x1, x1, #0x538
    e0f8:	ldr	x0, [x0, #4008]
    e0fc:	ldr	x0, [x0]
    e100:	bl	48a0 <PyErr_SetString@plt>
    e104:	mov	x0, #0x0                   	// #0
    e108:	b	de0c <PyNumber_FloorDivide@plt+0x91dc>
    e10c:	nop
    e110:	stp	x29, x30, [sp, #-48]!
    e114:	mov	x29, sp
    e118:	stp	x19, x20, [sp, #16]
    e11c:	mov	x20, x0
    e120:	adrp	x19, 29000 <PyInit__datetime@@Base+0x15f90>
    e124:	ldr	x0, [x0, #8]
    e128:	stp	x21, x22, [sp, #32]
    e12c:	add	x22, x19, #0x2a8
    e130:	add	x2, x22, #0x1a0
    e134:	mov	x21, x1
    e138:	cmp	x0, x2
    e13c:	b.eq	e14c <PyNumber_FloorDivide@plt+0x951c>  // b.none
    e140:	mov	x1, x2
    e144:	bl	4b60 <PyType_IsSubtype@plt>
    e148:	cbz	w0, e188 <PyNumber_FloorDivide@plt+0x9558>
    e14c:	ldr	x0, [x21, #8]
    e150:	add	x1, x19, #0x2a8
    e154:	cmp	x0, x1
    e158:	b.eq	e1bc <PyNumber_FloorDivide@plt+0x958c>  // b.none
    e15c:	bl	4b60 <PyType_IsSubtype@plt>
    e160:	cbnz	w0, e1bc <PyNumber_FloorDivide@plt+0x958c>
    e164:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e168:	ldp	x19, x20, [sp, #16]
    e16c:	ldr	x0, [x0, #3960]
    e170:	ldp	x21, x22, [sp, #32]
    e174:	ldr	x1, [x0]
    e178:	add	x1, x1, #0x1
    e17c:	str	x1, [x0]
    e180:	ldp	x29, x30, [sp], #48
    e184:	ret
    e188:	ldr	x0, [x20, #8]
    e18c:	cmp	x0, x22
    e190:	b.eq	e1a0 <PyNumber_FloorDivide@plt+0x9570>  // b.none
    e194:	mov	x1, x22
    e198:	bl	4b60 <PyType_IsSubtype@plt>
    e19c:	cbz	w0, e164 <PyNumber_FloorDivide@plt+0x9534>
    e1a0:	mov	x1, x20
    e1a4:	mov	x0, x21
    e1a8:	ldp	x19, x20, [sp, #16]
    e1ac:	mov	w2, #0x1                   	// #1
    e1b0:	ldp	x21, x22, [sp, #32]
    e1b4:	ldp	x29, x30, [sp], #48
    e1b8:	b	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
    e1bc:	mov	x1, x21
    e1c0:	mov	x0, x20
    e1c4:	ldp	x19, x20, [sp, #16]
    e1c8:	mov	w2, #0x1                   	// #1
    e1cc:	ldp	x21, x22, [sp, #32]
    e1d0:	ldp	x29, x30, [sp], #48
    e1d4:	b	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
    e1d8:	stp	x29, x30, [sp, #-32]!
    e1dc:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    e1e0:	add	x2, x2, #0x2a8
    e1e4:	mov	x29, sp
    e1e8:	stp	x19, x20, [sp, #16]
    e1ec:	mov	x19, x1
    e1f0:	mov	x20, x0
    e1f4:	add	x1, x2, #0x1a0
    e1f8:	ldr	x0, [x19, #8]
    e1fc:	cmp	x0, x1
    e200:	b.eq	e20c <PyNumber_FloorDivide@plt+0x95dc>  // b.none
    e204:	bl	4b60 <PyType_IsSubtype@plt>
    e208:	cbz	w0, e260 <PyNumber_FloorDivide@plt+0x9630>
    e20c:	ldrb	w0, [x19, #24]
    e210:	cbz	w0, e238 <PyNumber_FloorDivide@plt+0x9608>
    e214:	ldr	x0, [x19, #40]
    e218:	cmp	x0, x20
    e21c:	b.ne	e238 <PyNumber_FloorDivide@plt+0x9608>  // b.any
    e220:	mov	x0, x19
    e224:	mov	w2, #0x1                   	// #1
    e228:	ldr	x1, [x20, #16]
    e22c:	ldp	x19, x20, [sp, #16]
    e230:	ldp	x29, x30, [sp], #32
    e234:	b	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
    e238:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e23c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    e240:	add	x1, x1, #0x588
    e244:	ldr	x0, [x0, #3968]
    e248:	ldr	x0, [x0]
    e24c:	bl	48a0 <PyErr_SetString@plt>
    e250:	mov	x0, #0x0                   	// #0
    e254:	ldp	x19, x20, [sp, #16]
    e258:	ldp	x29, x30, [sp], #32
    e25c:	ret
    e260:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e264:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    e268:	add	x1, x1, #0x560
    e26c:	ldr	x0, [x0, #3976]
    e270:	ldr	x0, [x0]
    e274:	bl	48a0 <PyErr_SetString@plt>
    e278:	b	e250 <PyNumber_FloorDivide@plt+0x9620>
    e27c:	nop
    e280:	sub	sp, sp, #0x60
    e284:	stp	x29, x30, [sp, #16]
    e288:	add	x29, sp, #0x10
    e28c:	stp	x19, x20, [sp, #32]
    e290:	mov	x19, x0
    e294:	stp	x21, x22, [sp, #48]
    e298:	ldrb	w0, [x0, #24]
    e29c:	cbnz	w0, e404 <PyNumber_FloorDivide@plt+0x97d4>
    e2a0:	ldr	x0, [x19]
    e2a4:	stp	x23, x24, [sp, #64]
    e2a8:	stp	x25, x26, [sp, #80]
    e2ac:	add	x1, x0, #0x1
    e2b0:	str	x1, [x19]
    e2b4:	ldurh	w23, [x19, #25]
    e2b8:	ldrb	w25, [x19, #28]
    e2bc:	str	x0, [x19]
    e2c0:	rev16	w23, w23
    e2c4:	ldrb	w24, [x19, #27]
    e2c8:	and	w23, w23, #0xffff
    e2cc:	ldrb	w20, [x19, #29]
    e2d0:	add	w26, w25, #0x6
    e2d4:	ldrb	w21, [x19, #30]
    e2d8:	ldrb	w22, [x19, #31]
    e2dc:	cbz	x0, e584 <PyNumber_FloorDivide@plt+0x9954>
    e2e0:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    e2e4:	add	x0, x0, #0x580
    e2e8:	bl	4a00 <PyImport_ImportModuleNoBlock@plt>
    e2ec:	mov	x19, x0
    e2f0:	cbz	x0, e560 <PyNumber_FloorDivide@plt+0x9930>
    e2f4:	subs	w0, w23, #0x1
    e2f8:	add	w1, w23, #0x2
    e2fc:	mov	w2, #0x851f                	// #34079
    e300:	csel	w1, w1, w0, mi  // mi = first
    e304:	movk	w2, #0x51eb, lsl #16
    e308:	mov	w4, #0x16d                 	// #365
    e30c:	asr	w1, w1, #2
    e310:	adrp	x3, 15000 <PyInit__datetime@@Base+0x1f90>
    e314:	smull	x2, w0, w2
    e318:	add	x3, x3, #0x810
    e31c:	cmp	w24, #0x2
    e320:	madd	w1, w0, w4, w1
    e324:	asr	x4, x2, #37
    e328:	asr	x2, x2, #39
    e32c:	sub	w2, w2, w4
    e330:	ldr	w0, [x3, w24, sxtw #2]
    e334:	add	w1, w1, w2
    e338:	add	w2, w1, w0
    e33c:	b.gt	e474 <PyNumber_FloorDivide@plt+0x9844>
    e340:	add	w26, w26, w2
    e344:	mov	w7, #0x2493                	// #9363
    e348:	movk	w7, #0x9249, lsl #16
    e34c:	smull	x7, w26, w7
    e350:	lsr	x7, x7, #32
    e354:	add	w7, w26, w7
    e358:	asr	w7, w7, #2
    e35c:	sub	w7, w7, w26, asr #31
    e360:	lsl	w1, w7, #3
    e364:	sub	w7, w1, w7
    e368:	sub	w7, w26, w7
    e36c:	add	w0, w25, w0
    e370:	str	w0, [sp]
    e374:	str	wzr, [sp, #8]
    e378:	mov	w4, w20
    e37c:	mov	w6, w22
    e380:	mov	w5, w21
    e384:	mov	w3, w25
    e388:	mov	w2, w24
    e38c:	mov	w1, w23
    e390:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    e394:	add	x0, x0, #0x288
    e398:	bl	49c0 <Py_BuildValue@plt>
    e39c:	mov	x20, x0
    e3a0:	cbz	x0, e550 <PyNumber_FloorDivide@plt+0x9920>
    e3a4:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    e3a8:	add	x1, x1, #0xad0
    e3ac:	add	x1, x1, #0x3f0
    e3b0:	mov	x2, x0
    e3b4:	mov	x3, #0x0                   	// #0
    e3b8:	mov	x0, x19
    e3bc:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
    e3c0:	mov	x21, x0
    e3c4:	ldr	x1, [x19]
    e3c8:	sub	x1, x1, #0x1
    e3cc:	str	x1, [x19]
    e3d0:	cbz	x1, e510 <PyNumber_FloorDivide@plt+0x98e0>
    e3d4:	ldr	x1, [x20]
    e3d8:	sub	x1, x1, #0x1
    e3dc:	str	x1, [x20]
    e3e0:	cbz	x1, e528 <PyNumber_FloorDivide@plt+0x98f8>
    e3e4:	ldp	x23, x24, [sp, #64]
    e3e8:	ldp	x25, x26, [sp, #80]
    e3ec:	mov	x0, x21
    e3f0:	ldp	x29, x30, [sp, #16]
    e3f4:	ldp	x19, x20, [sp, #32]
    e3f8:	ldp	x21, x22, [sp, #48]
    e3fc:	add	sp, sp, #0x60
    e400:	ret
    e404:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
    e408:	ldr	x0, [x19, #40]
    e40c:	ldr	x21, [x21, #4024]
    e410:	cmp	x0, x21
    e414:	b.eq	e2a0 <PyNumber_FloorDivide@plt+0x9670>  // b.none
    e418:	mov	x2, x19
    e41c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    e420:	add	x1, x1, #0xa38
    e424:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    e428:	mov	x20, x0
    e42c:	cbz	x0, e568 <PyNumber_FloorDivide@plt+0x9938>
    e430:	cmp	x0, x21
    e434:	b.eq	e590 <PyNumber_FloorDivide@plt+0x9960>  // b.none
    e438:	mov	x0, x19
    e43c:	mov	x1, x20
    e440:	mov	w2, #0xffffffff            	// #-1
    e444:	bl	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
    e448:	ldr	x1, [x20]
    e44c:	mov	x19, x0
    e450:	sub	x0, x1, #0x1
    e454:	str	x0, [x20]
    e458:	cbz	x0, e5f4 <PyNumber_FloorDivide@plt+0x99c4>
    e45c:	cbz	x19, e568 <PyNumber_FloorDivide@plt+0x9938>
    e460:	ldr	x0, [x19]
    e464:	stp	x23, x24, [sp, #64]
    e468:	sub	x0, x0, #0x1
    e46c:	stp	x25, x26, [sp, #80]
    e470:	b	e2b4 <PyNumber_FloorDivide@plt+0x9684>
    e474:	tst	x23, #0x3
    e478:	b.ne	e340 <PyNumber_FloorDivide@plt+0x9710>  // b.any
    e47c:	mov	w3, #0x5c29                	// #23593
    e480:	mov	w4, #0x5c28                	// #23592
    e484:	movk	w3, #0xc28f, lsl #16
    e488:	movk	w4, #0x28f, lsl #16
    e48c:	mul	w3, w23, w3
    e490:	ror	w5, w3, #2
    e494:	cmp	w5, w4
    e498:	b.hi	e5b8 <PyNumber_FloorDivide@plt+0x9988>  // b.pmore
    e49c:	mov	w4, #0xd70a                	// #55050
    e4a0:	ror	w3, w3, #4
    e4a4:	movk	w4, #0xa3, lsl #16
    e4a8:	cmp	w3, w4
    e4ac:	b.hi	e608 <PyNumber_FloorDivide@plt+0x99d8>  // b.pmore
    e4b0:	add	w2, w0, #0x1
    e4b4:	mov	w7, #0x2493                	// #9363
    e4b8:	add	w1, w2, w1
    e4bc:	movk	w7, #0x9249, lsl #16
    e4c0:	add	w26, w1, w26
    e4c4:	smull	x7, w26, w7
    e4c8:	mov	w2, #0xd70a                	// #55050
    e4cc:	movk	w2, #0xa3, lsl #16
    e4d0:	lsr	x7, x7, #32
    e4d4:	add	w7, w26, w7
    e4d8:	asr	w7, w7, #2
    e4dc:	sub	w7, w7, w26, asr #31
    e4e0:	lsl	w1, w7, #3
    e4e4:	sub	w7, w1, w7
    e4e8:	mov	w1, #0x5c29                	// #23593
    e4ec:	movk	w1, #0xc28f, lsl #16
    e4f0:	sub	w7, w26, w7
    e4f4:	mul	w1, w23, w1
    e4f8:	ror	w1, w1, #4
    e4fc:	cmp	w1, w2
    e500:	b.hi	e36c <PyNumber_FloorDivide@plt+0x973c>  // b.pmore
    e504:	add	w2, w0, #0x1
    e508:	mov	w0, w2
    e50c:	b	e36c <PyNumber_FloorDivide@plt+0x973c>
    e510:	mov	x0, x19
    e514:	bl	4830 <_Py_Dealloc@plt>
    e518:	ldr	x1, [x20]
    e51c:	sub	x1, x1, #0x1
    e520:	str	x1, [x20]
    e524:	cbnz	x1, e3e4 <PyNumber_FloorDivide@plt+0x97b4>
    e528:	mov	x0, x20
    e52c:	bl	4830 <_Py_Dealloc@plt>
    e530:	mov	x0, x21
    e534:	ldp	x29, x30, [sp, #16]
    e538:	ldp	x19, x20, [sp, #32]
    e53c:	ldp	x21, x22, [sp, #48]
    e540:	ldp	x23, x24, [sp, #64]
    e544:	ldp	x25, x26, [sp, #80]
    e548:	add	sp, sp, #0x60
    e54c:	ret
    e550:	ldr	x0, [x19]
    e554:	sub	x0, x0, #0x1
    e558:	str	x0, [x19]
    e55c:	cbz	x0, e618 <PyNumber_FloorDivide@plt+0x99e8>
    e560:	ldp	x23, x24, [sp, #64]
    e564:	ldp	x25, x26, [sp, #80]
    e568:	mov	x21, #0x0                   	// #0
    e56c:	mov	x0, x21
    e570:	ldp	x29, x30, [sp, #16]
    e574:	ldp	x19, x20, [sp, #32]
    e578:	ldp	x21, x22, [sp, #48]
    e57c:	add	sp, sp, #0x60
    e580:	ret
    e584:	mov	x0, x19
    e588:	bl	4830 <_Py_Dealloc@plt>
    e58c:	b	e2e0 <PyNumber_FloorDivide@plt+0x96b0>
    e590:	ldr	x1, [x0]
    e594:	stp	x23, x24, [sp, #64]
    e598:	stp	x25, x26, [sp, #80]
    e59c:	sub	x1, x1, #0x1
    e5a0:	str	x1, [x0]
    e5a4:	cbz	x1, e600 <PyNumber_FloorDivide@plt+0x99d0>
    e5a8:	ldr	x0, [x19]
    e5ac:	add	x1, x0, #0x1
    e5b0:	str	x1, [x19]
    e5b4:	b	e2b4 <PyNumber_FloorDivide@plt+0x9684>
    e5b8:	add	w2, w0, #0x1
    e5bc:	mov	w7, #0x2493                	// #9363
    e5c0:	add	w1, w2, w1
    e5c4:	movk	w7, #0x9249, lsl #16
    e5c8:	add	w26, w1, w26
    e5cc:	smull	x7, w26, w7
    e5d0:	lsr	x7, x7, #32
    e5d4:	add	w7, w26, w7
    e5d8:	asr	w7, w7, #2
    e5dc:	sub	w7, w7, w26, asr #31
    e5e0:	lsl	w0, w7, #3
    e5e4:	sub	w7, w0, w7
    e5e8:	mov	w0, w2
    e5ec:	sub	w7, w26, w7
    e5f0:	b	e36c <PyNumber_FloorDivide@plt+0x973c>
    e5f4:	mov	x0, x20
    e5f8:	bl	4830 <_Py_Dealloc@plt>
    e5fc:	b	e45c <PyNumber_FloorDivide@plt+0x982c>
    e600:	bl	4830 <_Py_Dealloc@plt>
    e604:	b	e5a8 <PyNumber_FloorDivide@plt+0x9978>
    e608:	mov	w7, #0x2493                	// #9363
    e60c:	add	w26, w26, w2
    e610:	movk	w7, #0x9249, lsl #16
    e614:	b	e4c4 <PyNumber_FloorDivide@plt+0x9894>
    e618:	mov	x0, x19
    e61c:	mov	x21, #0x0                   	// #0
    e620:	bl	4830 <_Py_Dealloc@plt>
    e624:	ldp	x23, x24, [sp, #64]
    e628:	ldp	x25, x26, [sp, #80]
    e62c:	b	e3ec <PyNumber_FloorDivide@plt+0x97bc>
    e630:	stp	x29, x30, [sp, #-48]!
    e634:	mov	x29, sp
    e638:	stp	x19, x20, [sp, #16]
    e63c:	ldr	w20, [x0, #32]
    e640:	stp	x21, x22, [sp, #32]
    e644:	ldp	w22, w19, [x0, #24]
    e648:	tbnz	w22, #31, e6a0 <PyNumber_FloorDivide@plt+0x9a70>
    e64c:	mov	w3, #0xc9ff                	// #51711
    e650:	mov	w0, #0x93fe                	// #37886
    e654:	movk	w3, #0x3b9a, lsl #16
    e658:	add	w1, w22, w3
    e65c:	movk	w0, #0x7735, lsl #16
    e660:	cmp	w1, w0
    e664:	b.hi	e75c <PyNumber_FloorDivide@plt+0x9b2c>  // b.pmore
    e668:	adrp	x0, 29000 <PyInit__datetime@@Base+0x15f90>
    e66c:	add	x0, x0, #0x2a8
    e670:	mov	x1, #0x0                   	// #0
    e674:	ldr	x2, [x0, #304]
    e678:	blr	x2
    e67c:	cbz	x0, e690 <PyNumber_FloorDivide@plt+0x9a60>
    e680:	mov	x1, #0xffffffffffffffff    	// #-1
    e684:	str	x1, [x0, #16]
    e688:	stp	w22, w19, [x0, #24]
    e68c:	str	w20, [x0, #32]
    e690:	ldp	x19, x20, [sp, #16]
    e694:	ldp	x21, x22, [sp, #32]
    e698:	ldp	x29, x30, [sp], #48
    e69c:	ret
    e6a0:	neg	w20, w20
    e6a4:	mov	w0, #0x423f                	// #16959
    e6a8:	movk	w0, #0xf, lsl #16
    e6ac:	cmp	w20, w0
    e6b0:	b.hi	e6d0 <PyNumber_FloorDivide@plt+0x9aa0>  // b.pmore
    e6b4:	neg	w19, w19
    e6b8:	mov	w0, #0x517f                	// #20863
    e6bc:	movk	w0, #0x1, lsl #16
    e6c0:	cmp	w19, w0
    e6c4:	b.hi	e708 <PyNumber_FloorDivide@plt+0x9ad8>  // b.pmore
    e6c8:	neg	w22, w22
    e6cc:	b	e64c <PyNumber_FloorDivide@plt+0x9a1c>
    e6d0:	mov	w0, #0xde83                	// #56963
    e6d4:	mov	w1, #0x4240                	// #16960
    e6d8:	movk	w0, #0x431b, lsl #16
    e6dc:	movk	w1, #0xf, lsl #16
    e6e0:	smull	x0, w20, w0
    e6e4:	asr	x0, x0, #50
    e6e8:	sub	w0, w0, w20, asr #31
    e6ec:	msub	w20, w0, w1, w20
    e6f0:	tbnz	w20, #31, e74c <PyNumber_FloorDivide@plt+0x9b1c>
    e6f4:	sub	w19, w0, w19
    e6f8:	mov	w0, #0x517f                	// #20863
    e6fc:	movk	w0, #0x1, lsl #16
    e700:	cmp	w19, w0
    e704:	b.ls	e6c8 <PyNumber_FloorDivide@plt+0x9a98>  // b.plast
    e708:	mov	w21, #0x4507                	// #17671
    e70c:	mov	w0, #0x5180                	// #20864
    e710:	movk	w21, #0xc22e, lsl #16
    e714:	movk	w0, #0x1, lsl #16
    e718:	smull	x21, w19, w21
    e71c:	lsr	x21, x21, #32
    e720:	add	w21, w19, w21
    e724:	asr	w21, w21, #16
    e728:	sub	w21, w21, w19, asr #31
    e72c:	msub	w19, w21, w0, w19
    e730:	tbnz	w19, #31, e73c <PyNumber_FloorDivide@plt+0x9b0c>
    e734:	sub	w22, w21, w22
    e738:	b	e64c <PyNumber_FloorDivide@plt+0x9a1c>
    e73c:	sub	w21, w21, #0x1
    e740:	add	w19, w19, w0
    e744:	sub	w22, w21, w22
    e748:	b	e64c <PyNumber_FloorDivide@plt+0x9a1c>
    e74c:	sub	w0, w0, #0x1
    e750:	add	w20, w20, w1
    e754:	sub	w19, w0, w19
    e758:	b	e6f8 <PyNumber_FloorDivide@plt+0x9ac8>
    e75c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e760:	mov	w2, w22
    e764:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    e768:	add	x1, x1, #0xa50
    e76c:	ldr	x0, [x0, #4008]
    e770:	ldr	x0, [x0]
    e774:	bl	4b90 <PyErr_Format@plt>
    e778:	mov	x0, #0x0                   	// #0
    e77c:	b	e690 <PyNumber_FloorDivide@plt+0x9a60>
    e780:	stp	x29, x30, [sp, #-80]!
    e784:	mov	x29, sp
    e788:	stp	x21, x22, [sp, #32]
    e78c:	adrp	x22, 2a000 <PyInit__datetime@@Base+0x16f90>
    e790:	add	x2, x22, #0xfd8
    e794:	stp	x23, x24, [sp, #48]
    e798:	mov	x23, x1
    e79c:	ldr	x1, [x2, #24]
    e7a0:	bl	6008 <PyNumber_FloorDivide@plt+0x13d8>
    e7a4:	cbz	x0, e94c <PyNumber_FloorDivide@plt+0x9d1c>
    e7a8:	stp	x19, x20, [sp, #16]
    e7ac:	mov	x19, x0
    e7b0:	ldr	x0, [x0, #32]
    e7b4:	bl	4be0 <_PyLong_AsInt@plt>
    e7b8:	mov	w21, w0
    e7bc:	cmn	w0, #0x1
    e7c0:	b.eq	e8f4 <PyNumber_FloorDivide@plt+0x9cc4>  // b.none
    e7c4:	mov	w0, #0x423f                	// #16959
    e7c8:	movk	w0, #0xf, lsl #16
    e7cc:	cmp	w21, w0
    e7d0:	b.hi	e8fc <PyNumber_FloorDivide@plt+0x9ccc>  // b.pmore
    e7d4:	ldr	x20, [x19, #24]
    e7d8:	ldr	x0, [x20]
    e7dc:	add	x0, x0, #0x1
    e7e0:	str	x0, [x20]
    e7e4:	ldr	x0, [x19]
    e7e8:	sub	x0, x0, #0x1
    e7ec:	str	x0, [x19]
    e7f0:	cbz	x0, e8e8 <PyNumber_FloorDivide@plt+0x9cb8>
    e7f4:	add	x2, x22, #0xfd8
    e7f8:	mov	x0, x20
    e7fc:	ldr	x1, [x2, #16]
    e800:	bl	6008 <PyNumber_FloorDivide@plt+0x13d8>
    e804:	mov	x19, x0
    e808:	cbz	x0, e9c4 <PyNumber_FloorDivide@plt+0x9d94>
    e80c:	ldr	x0, [x20]
    e810:	sub	x0, x0, #0x1
    e814:	str	x0, [x20]
    e818:	cbz	x0, e984 <PyNumber_FloorDivide@plt+0x9d54>
    e81c:	ldr	x0, [x19, #32]
    e820:	bl	4be0 <_PyLong_AsInt@plt>
    e824:	mov	w24, w0
    e828:	cmn	w0, #0x1
    e82c:	b.eq	e8f4 <PyNumber_FloorDivide@plt+0x9cc4>  // b.none
    e830:	mov	w0, #0x517f                	// #20863
    e834:	movk	w0, #0x1, lsl #16
    e838:	cmp	w24, w0
    e83c:	b.hi	e8fc <PyNumber_FloorDivide@plt+0x9ccc>  // b.pmore
    e840:	ldr	x20, [x19, #24]
    e844:	mov	x0, x20
    e848:	ldr	x1, [x20]
    e84c:	str	x25, [sp, #64]
    e850:	add	x1, x1, #0x1
    e854:	str	x1, [x20]
    e858:	bl	4be0 <_PyLong_AsInt@plt>
    e85c:	mov	w25, w0
    e860:	cmn	w0, #0x1
    e864:	b.eq	e9a4 <PyNumber_FloorDivide@plt+0x9d74>  // b.none
    e868:	mov	w3, #0xc9ff                	// #51711
    e86c:	movk	w3, #0x3b9a, lsl #16
    e870:	add	w1, w0, w3
    e874:	mov	w0, #0x93fe                	// #37886
    e878:	movk	w0, #0x7735, lsl #16
    e87c:	cmp	w1, w0
    e880:	b.hi	e9cc <PyNumber_FloorDivide@plt+0x9d9c>  // b.pmore
    e884:	ldr	x2, [x23, #304]
    e888:	mov	x0, x23
    e88c:	mov	x1, #0x0                   	// #0
    e890:	blr	x2
    e894:	mov	x22, x0
    e898:	cbz	x0, e8ac <PyNumber_FloorDivide@plt+0x9c7c>
    e89c:	mov	x0, #0xffffffffffffffff    	// #-1
    e8a0:	str	x0, [x22, #16]
    e8a4:	stp	w25, w24, [x22, #24]
    e8a8:	str	w21, [x22, #32]
    e8ac:	ldr	x0, [x19]
    e8b0:	sub	x0, x0, #0x1
    e8b4:	str	x0, [x19]
    e8b8:	cbz	x0, e9b4 <PyNumber_FloorDivide@plt+0x9d84>
    e8bc:	ldr	x25, [sp, #64]
    e8c0:	ldr	x0, [x20]
    e8c4:	sub	x0, x0, #0x1
    e8c8:	str	x0, [x20]
    e8cc:	cbz	x0, e964 <PyNumber_FloorDivide@plt+0x9d34>
    e8d0:	mov	x0, x22
    e8d4:	ldp	x19, x20, [sp, #16]
    e8d8:	ldp	x21, x22, [sp, #32]
    e8dc:	ldp	x23, x24, [sp, #48]
    e8e0:	ldp	x29, x30, [sp], #80
    e8e4:	ret
    e8e8:	mov	x0, x19
    e8ec:	bl	4830 <_Py_Dealloc@plt>
    e8f0:	b	e7f4 <PyNumber_FloorDivide@plt+0x9bc4>
    e8f4:	bl	49d0 <PyErr_Occurred@plt>
    e8f8:	cbnz	x0, e914 <PyNumber_FloorDivide@plt+0x9ce4>
    e8fc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e900:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    e904:	add	x1, x1, #0x5a8
    e908:	ldr	x0, [x0, #3976]
    e90c:	ldr	x0, [x0]
    e910:	bl	48a0 <PyErr_SetString@plt>
    e914:	ldr	x0, [x19]
    e918:	sub	x0, x0, #0x1
    e91c:	str	x0, [x19]
    e920:	cbnz	x0, e948 <PyNumber_FloorDivide@plt+0x9d18>
    e924:	mov	x0, x19
    e928:	mov	x22, #0x0                   	// #0
    e92c:	bl	4830 <_Py_Dealloc@plt>
    e930:	mov	x0, x22
    e934:	ldp	x19, x20, [sp, #16]
    e938:	ldp	x21, x22, [sp, #32]
    e93c:	ldp	x23, x24, [sp, #48]
    e940:	ldp	x29, x30, [sp], #80
    e944:	ret
    e948:	ldp	x19, x20, [sp, #16]
    e94c:	mov	x22, #0x0                   	// #0
    e950:	mov	x0, x22
    e954:	ldp	x21, x22, [sp, #32]
    e958:	ldp	x23, x24, [sp, #48]
    e95c:	ldp	x29, x30, [sp], #80
    e960:	ret
    e964:	mov	x0, x20
    e968:	bl	4830 <_Py_Dealloc@plt>
    e96c:	mov	x0, x22
    e970:	ldp	x19, x20, [sp, #16]
    e974:	ldp	x21, x22, [sp, #32]
    e978:	ldp	x23, x24, [sp, #48]
    e97c:	ldp	x29, x30, [sp], #80
    e980:	ret
    e984:	mov	x0, x20
    e988:	bl	4830 <_Py_Dealloc@plt>
    e98c:	ldr	x0, [x19, #32]
    e990:	bl	4be0 <_PyLong_AsInt@plt>
    e994:	mov	w24, w0
    e998:	cmn	w0, #0x1
    e99c:	b.ne	e830 <PyNumber_FloorDivide@plt+0x9c00>  // b.any
    e9a0:	b	e8f4 <PyNumber_FloorDivide@plt+0x9cc4>
    e9a4:	mov	x22, #0x0                   	// #0
    e9a8:	bl	49d0 <PyErr_Occurred@plt>
    e9ac:	cbz	x0, e884 <PyNumber_FloorDivide@plt+0x9c54>
    e9b0:	b	e8ac <PyNumber_FloorDivide@plt+0x9c7c>
    e9b4:	mov	x0, x19
    e9b8:	bl	4830 <_Py_Dealloc@plt>
    e9bc:	ldr	x25, [sp, #64]
    e9c0:	b	e8c0 <PyNumber_FloorDivide@plt+0x9c90>
    e9c4:	mov	x22, #0x0                   	// #0
    e9c8:	b	e8c0 <PyNumber_FloorDivide@plt+0x9c90>
    e9cc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    e9d0:	mov	w2, w25
    e9d4:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    e9d8:	mov	x22, #0x0                   	// #0
    e9dc:	ldr	x0, [x0, #4008]
    e9e0:	add	x1, x1, #0xa50
    e9e4:	ldr	x0, [x0]
    e9e8:	bl	4b90 <PyErr_Format@plt>
    e9ec:	b	e8ac <PyNumber_FloorDivide@plt+0x9c7c>
    e9f0:	sub	sp, sp, #0x90
    e9f4:	add	x3, sp, #0x80
    e9f8:	add	x4, sp, #0x78
    e9fc:	add	x5, sp, #0x70
    ea00:	add	x7, sp, #0x68
    ea04:	stp	x29, x30, [sp, #32]
    ea08:	add	x29, sp, #0x20
    ea0c:	add	x6, sp, #0x60
    ea10:	stp	x5, x4, [sp]
    ea14:	add	x5, sp, #0x58
    ea18:	add	x4, sp, #0x50
    ea1c:	str	x3, [sp, #16]
    ea20:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
    ea24:	add	x3, x3, #0xad0
    ea28:	stp	x19, x20, [sp, #48]
    ea2c:	add	x3, x3, #0x430
    ea30:	mov	x20, x0
    ea34:	mov	x0, x1
    ea38:	mov	x1, x2
    ea3c:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
    ea40:	add	x2, x2, #0x5d0
    ea44:	stp	xzr, xzr, [sp, #80]
    ea48:	stp	xzr, xzr, [sp, #96]
    ea4c:	stp	xzr, xzr, [sp, #112]
    ea50:	str	xzr, [sp, #128]
    ea54:	str	xzr, [sp, #136]
    ea58:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
    ea5c:	cbz	w0, eabc <PyNumber_FloorDivide@plt+0x9e8c>
    ea60:	mov	x0, #0x0                   	// #0
    ea64:	bl	4920 <PyLong_FromLong@plt>
    ea68:	mov	x19, x0
    ea6c:	cbz	x0, eabc <PyNumber_FloorDivide@plt+0x9e8c>
    ea70:	ldr	x2, [sp, #96]
    ea74:	stp	x21, x22, [sp, #64]
    ea78:	cbz	x2, ead4 <PyNumber_FloorDivide@plt+0x9ea4>
    ea7c:	adrp	x3, 28000 <PyInit__datetime@@Base+0x14f90>
    ea80:	mov	x1, x19
    ea84:	add	x4, sp, #0x88
    ea88:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    ea8c:	ldr	x3, [x3, #4048]
    ea90:	add	x0, x0, #0x1e8
    ea94:	ldr	x3, [x3]
    ea98:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    ea9c:	mov	x21, x0
    eaa0:	ldr	x1, [x19]
    eaa4:	sub	x0, x1, #0x1
    eaa8:	str	x0, [x19]
    eaac:	cbz	x0, edc8 <PyNumber_FloorDivide@plt+0xa198>
    eab0:	cbnz	x21, ead8 <PyNumber_FloorDivide@plt+0x9ea8>
    eab4:	nop
    eab8:	ldp	x21, x22, [sp, #64]
    eabc:	mov	x19, #0x0                   	// #0
    eac0:	mov	x0, x19
    eac4:	ldp	x29, x30, [sp, #32]
    eac8:	ldp	x19, x20, [sp, #48]
    eacc:	add	sp, sp, #0x90
    ead0:	ret
    ead4:	mov	x21, x0
    ead8:	ldr	x2, [sp, #104]
    eadc:	cbz	x2, ed38 <PyNumber_FloorDivide@plt+0xa108>
    eae0:	adrp	x1, 2a000 <PyInit__datetime@@Base+0x16f90>
    eae4:	add	x4, sp, #0x88
    eae8:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    eaec:	add	x0, x0, #0x1d8
    eaf0:	ldr	x3, [x1, #4088]
    eaf4:	mov	x1, x21
    eaf8:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    eafc:	mov	x19, x0
    eb00:	ldr	x1, [x21]
    eb04:	sub	x0, x1, #0x1
    eb08:	str	x0, [x21]
    eb0c:	cbz	x0, edd8 <PyNumber_FloorDivide@plt+0xa1a8>
    eb10:	cbz	x19, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    eb14:	ldr	x2, [sp, #88]
    eb18:	cbz	x2, ed44 <PyNumber_FloorDivide@plt+0xa114>
    eb1c:	adrp	x1, 2a000 <PyInit__datetime@@Base+0x16f90>
    eb20:	add	x4, sp, #0x88
    eb24:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    eb28:	add	x0, x0, #0x1d0
    eb2c:	ldr	x3, [x1, #4080]
    eb30:	mov	x1, x19
    eb34:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    eb38:	mov	x21, x0
    eb3c:	ldr	x1, [x19]
    eb40:	sub	x0, x1, #0x1
    eb44:	str	x0, [x19]
    eb48:	cbz	x0, ede4 <PyNumber_FloorDivide@plt+0xa1b4>
    eb4c:	cbz	x21, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    eb50:	ldr	x2, [sp, #112]
    eb54:	cbz	x2, ed50 <PyNumber_FloorDivide@plt+0xa120>
    eb58:	adrp	x1, 2b000 <PyInit__datetime@@Base+0x17f90>
    eb5c:	add	x4, sp, #0x88
    eb60:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    eb64:	add	x0, x0, #0x1c8
    eb68:	ldr	x3, [x1]
    eb6c:	mov	x1, x21
    eb70:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    eb74:	mov	x19, x0
    eb78:	ldr	x1, [x21]
    eb7c:	sub	x0, x1, #0x1
    eb80:	str	x0, [x21]
    eb84:	cbz	x0, edf0 <PyNumber_FloorDivide@plt+0xa1c0>
    eb88:	cbz	x19, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    eb8c:	ldr	x2, [sp, #120]
    eb90:	cbz	x2, ed5c <PyNumber_FloorDivide@plt+0xa12c>
    eb94:	adrp	x1, 2b000 <PyInit__datetime@@Base+0x17f90>
    eb98:	add	x4, sp, #0x88
    eb9c:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    eba0:	add	x0, x0, #0x1c0
    eba4:	ldr	x3, [x1, #8]
    eba8:	mov	x1, x19
    ebac:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    ebb0:	mov	x21, x0
    ebb4:	ldr	x1, [x19]
    ebb8:	sub	x0, x1, #0x1
    ebbc:	str	x0, [x19]
    ebc0:	cbz	x0, edfc <PyNumber_FloorDivide@plt+0xa1cc>
    ebc4:	cbz	x21, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    ebc8:	ldr	x2, [sp, #80]
    ebcc:	cbz	x2, ed68 <PyNumber_FloorDivide@plt+0xa138>
    ebd0:	adrp	x1, 2b000 <PyInit__datetime@@Base+0x17f90>
    ebd4:	add	x4, sp, #0x88
    ebd8:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    ebdc:	add	x0, x0, #0x5e8
    ebe0:	ldr	x3, [x1, #16]
    ebe4:	mov	x1, x21
    ebe8:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    ebec:	mov	x19, x0
    ebf0:	ldr	x1, [x21]
    ebf4:	sub	x0, x1, #0x1
    ebf8:	str	x0, [x21]
    ebfc:	cbz	x0, ee08 <PyNumber_FloorDivide@plt+0xa1d8>
    ec00:	cbz	x19, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    ec04:	ldr	x2, [sp, #128]
    ec08:	cbz	x2, ed74 <PyNumber_FloorDivide@plt+0xa144>
    ec0c:	adrp	x1, 2b000 <PyInit__datetime@@Base+0x17f90>
    ec10:	add	x4, sp, #0x88
    ec14:	adrp	x0, 14000 <PyInit__datetime@@Base+0xf90>
    ec18:	add	x0, x0, #0x5f0
    ec1c:	ldr	x3, [x1, #24]
    ec20:	mov	x1, x19
    ec24:	bl	5db0 <PyNumber_FloorDivide@plt+0x1180>
    ec28:	mov	x21, x0
    ec2c:	ldr	x1, [x19]
    ec30:	sub	x0, x1, #0x1
    ec34:	str	x0, [x19]
    ec38:	cbz	x0, ee14 <PyNumber_FloorDivide@plt+0xa1e4>
    ec3c:	cbz	x21, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    ec40:	ldr	d1, [sp, #136]
    ec44:	fcmp	d1, #0.0
    ec48:	b.eq	ed84 <PyNumber_FloorDivide@plt+0xa154>  // b.none
    ec4c:	frinta	d0, d1
    ec50:	fmov	d2, #5.000000000000000000e-01
    ec54:	fabd	d1, d0, d1
    ec58:	fcmp	d1, d2
    ec5c:	b.ne	ecbc <PyNumber_FloorDivide@plt+0xa08c>  // b.any
    ec60:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    ec64:	mov	x0, x21
    ec68:	ldr	x1, [x1, #4048]
    ec6c:	ldr	x1, [x1]
    ec70:	bl	4950 <PyNumber_And@plt>
    ec74:	mov	x19, x0
    ec78:	cbz	x0, ee38 <PyNumber_FloorDivide@plt+0xa208>
    ec7c:	bl	4a50 <PyObject_IsTrue@plt>
    ec80:	mov	w22, w0
    ec84:	ldr	x1, [x19]
    ec88:	sub	x0, x1, #0x1
    ec8c:	str	x0, [x19]
    ec90:	cbz	x0, ee58 <PyNumber_FloorDivide@plt+0xa228>
    ec94:	cmn	w22, #0x1
    ec98:	b.eq	ee64 <PyNumber_FloorDivide@plt+0xa234>  // b.none
    ec9c:	scvtf	d1, w22
    eca0:	ldr	d0, [sp, #136]
    eca4:	fmov	d2, #5.000000000000000000e-01
    eca8:	fadd	d0, d1, d0
    ecac:	fmul	d0, d0, d2
    ecb0:	frinta	d0, d0
    ecb4:	fadd	d0, d0, d0
    ecb8:	fsub	d0, d0, d1
    ecbc:	fcvtzs	x0, d0
    ecc0:	bl	4920 <PyLong_FromLong@plt>
    ecc4:	mov	x19, x0
    ecc8:	cbz	x0, ee38 <PyNumber_FloorDivide@plt+0xa208>
    eccc:	mov	x1, x0
    ecd0:	mov	x0, x21
    ecd4:	bl	47e0 <PyNumber_Add@plt>
    ecd8:	mov	x22, x0
    ecdc:	ldr	x1, [x19]
    ece0:	sub	x0, x1, #0x1
    ece4:	str	x0, [x19]
    ece8:	cbz	x0, ee2c <PyNumber_FloorDivide@plt+0xa1fc>
    ecec:	ldr	x0, [x21]
    ecf0:	sub	x0, x0, #0x1
    ecf4:	str	x0, [x21]
    ecf8:	cbz	x0, ee20 <PyNumber_FloorDivide@plt+0xa1f0>
    ecfc:	cbz	x22, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    ed00:	mov	x1, x20
    ed04:	mov	x0, x22
    ed08:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    ed0c:	mov	x19, x0
    ed10:	ldr	x1, [x22]
    ed14:	sub	x0, x1, #0x1
    ed18:	str	x0, [x22]
    ed1c:	cbz	x0, eda8 <PyNumber_FloorDivide@plt+0xa178>
    ed20:	mov	x0, x19
    ed24:	ldp	x29, x30, [sp, #32]
    ed28:	ldp	x19, x20, [sp, #48]
    ed2c:	ldp	x21, x22, [sp, #64]
    ed30:	add	sp, sp, #0x90
    ed34:	ret
    ed38:	ldr	x2, [sp, #88]
    ed3c:	mov	x19, x21
    ed40:	cbnz	x2, eb1c <PyNumber_FloorDivide@plt+0x9eec>
    ed44:	ldr	x2, [sp, #112]
    ed48:	mov	x21, x19
    ed4c:	cbnz	x2, eb58 <PyNumber_FloorDivide@plt+0x9f28>
    ed50:	ldr	x2, [sp, #120]
    ed54:	mov	x19, x21
    ed58:	cbnz	x2, eb94 <PyNumber_FloorDivide@plt+0x9f64>
    ed5c:	ldr	x2, [sp, #80]
    ed60:	mov	x21, x19
    ed64:	cbnz	x2, ebd0 <PyNumber_FloorDivide@plt+0x9fa0>
    ed68:	ldr	x2, [sp, #128]
    ed6c:	mov	x19, x21
    ed70:	cbnz	x2, ec0c <PyNumber_FloorDivide@plt+0x9fdc>
    ed74:	ldr	d1, [sp, #136]
    ed78:	mov	x21, x19
    ed7c:	fcmp	d1, #0.0
    ed80:	b.ne	ec4c <PyNumber_FloorDivide@plt+0xa01c>  // b.any
    ed84:	mov	x22, x21
    ed88:	mov	x1, x20
    ed8c:	mov	x0, x22
    ed90:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    ed94:	mov	x19, x0
    ed98:	ldr	x1, [x22]
    ed9c:	sub	x0, x1, #0x1
    eda0:	str	x0, [x22]
    eda4:	cbnz	x0, ed20 <PyNumber_FloorDivide@plt+0xa0f0>
    eda8:	mov	x0, x22
    edac:	bl	4830 <_Py_Dealloc@plt>
    edb0:	mov	x0, x19
    edb4:	ldp	x29, x30, [sp, #32]
    edb8:	ldp	x19, x20, [sp, #48]
    edbc:	ldp	x21, x22, [sp, #64]
    edc0:	add	sp, sp, #0x90
    edc4:	ret
    edc8:	mov	x0, x19
    edcc:	bl	4830 <_Py_Dealloc@plt>
    edd0:	cbnz	x21, ead8 <PyNumber_FloorDivide@plt+0x9ea8>
    edd4:	b	eab8 <PyNumber_FloorDivide@plt+0x9e88>
    edd8:	mov	x0, x21
    eddc:	bl	4830 <_Py_Dealloc@plt>
    ede0:	b	eb10 <PyNumber_FloorDivide@plt+0x9ee0>
    ede4:	mov	x0, x19
    ede8:	bl	4830 <_Py_Dealloc@plt>
    edec:	b	eb4c <PyNumber_FloorDivide@plt+0x9f1c>
    edf0:	mov	x0, x21
    edf4:	bl	4830 <_Py_Dealloc@plt>
    edf8:	b	eb88 <PyNumber_FloorDivide@plt+0x9f58>
    edfc:	mov	x0, x19
    ee00:	bl	4830 <_Py_Dealloc@plt>
    ee04:	b	ebc4 <PyNumber_FloorDivide@plt+0x9f94>
    ee08:	mov	x0, x21
    ee0c:	bl	4830 <_Py_Dealloc@plt>
    ee10:	b	ec00 <PyNumber_FloorDivide@plt+0x9fd0>
    ee14:	mov	x0, x19
    ee18:	bl	4830 <_Py_Dealloc@plt>
    ee1c:	b	ec3c <PyNumber_FloorDivide@plt+0xa00c>
    ee20:	mov	x0, x21
    ee24:	bl	4830 <_Py_Dealloc@plt>
    ee28:	b	ecfc <PyNumber_FloorDivide@plt+0xa0cc>
    ee2c:	mov	x0, x19
    ee30:	bl	4830 <_Py_Dealloc@plt>
    ee34:	b	ecec <PyNumber_FloorDivide@plt+0xa0bc>
    ee38:	ldr	x0, [x21]
    ee3c:	sub	x0, x0, #0x1
    ee40:	str	x0, [x21]
    ee44:	cbnz	x0, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    ee48:	mov	x0, x21
    ee4c:	bl	4830 <_Py_Dealloc@plt>
    ee50:	ldp	x21, x22, [sp, #64]
    ee54:	b	eac0 <PyNumber_FloorDivide@plt+0x9e90>
    ee58:	mov	x0, x19
    ee5c:	bl	4830 <_Py_Dealloc@plt>
    ee60:	b	ec94 <PyNumber_FloorDivide@plt+0xa064>
    ee64:	ldr	x0, [x21]
    ee68:	sub	x0, x0, #0x1
    ee6c:	str	x0, [x21]
    ee70:	cbnz	x0, eab8 <PyNumber_FloorDivide@plt+0x9e88>
    ee74:	mov	x0, x21
    ee78:	mov	x19, #0x0                   	// #0
    ee7c:	bl	4830 <_Py_Dealloc@plt>
    ee80:	ldp	x21, x22, [sp, #64]
    ee84:	b	eac0 <PyNumber_FloorDivide@plt+0x9e90>
    ee88:	stp	x29, x30, [sp, #-48]!
    ee8c:	mov	x29, sp
    ee90:	stp	x19, x20, [sp, #16]
    ee94:	mov	x19, x0
    ee98:	mov	x20, x1
    ee9c:	ldr	x0, [x0, #8]
    eea0:	str	x21, [sp, #32]
    eea4:	adrp	x21, 29000 <PyInit__datetime@@Base+0x15f90>
    eea8:	add	x2, x21, #0x2a8
    eeac:	cmp	x0, x2
    eeb0:	b.eq	eeec <PyNumber_FloorDivide@plt+0xa2bc>  // b.none
    eeb4:	mov	x1, x2
    eeb8:	bl	4b60 <PyType_IsSubtype@plt>
    eebc:	cbnz	w0, eeec <PyNumber_FloorDivide@plt+0xa2bc>
    eec0:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    eec4:	ldr	x1, [x1, #3960]
    eec8:	mov	x19, x1
    eecc:	ldr	x0, [x1]
    eed0:	add	x0, x0, #0x1
    eed4:	str	x0, [x1]
    eed8:	mov	x0, x19
    eedc:	ldp	x19, x20, [sp, #16]
    eee0:	ldr	x21, [sp, #32]
    eee4:	ldp	x29, x30, [sp], #48
    eee8:	ret
    eeec:	ldr	x0, [x20, #8]
    eef0:	ldr	x1, [x0, #168]
    eef4:	tbnz	w1, #24, ef40 <PyNumber_FloorDivide@plt+0xa310>
    eef8:	add	x1, x21, #0x2a8
    eefc:	cmp	x0, x1
    ef00:	b.eq	ef0c <PyNumber_FloorDivide@plt+0xa2dc>  // b.none
    ef04:	bl	4b60 <PyType_IsSubtype@plt>
    ef08:	cbz	w0, eec0 <PyNumber_FloorDivide@plt+0xa290>
    ef0c:	mov	x0, x19
    ef10:	mov	x1, x20
    ef14:	bl	6338 <PyNumber_FloorDivide@plt+0x1708>
    ef18:	mov	x19, x0
    ef1c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    ef20:	ldr	x0, [x1, #3960]
    ef24:	cmp	x19, x0
    ef28:	b.eq	eec4 <PyNumber_FloorDivide@plt+0xa294>  // b.none
    ef2c:	mov	x0, x19
    ef30:	ldp	x19, x20, [sp, #16]
    ef34:	ldr	x21, [sp, #32]
    ef38:	ldp	x29, x30, [sp], #48
    ef3c:	ret
    ef40:	mov	x0, x19
    ef44:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    ef48:	mov	x19, x0
    ef4c:	cbz	x0, efa8 <PyNumber_FloorDivide@plt+0xa378>
    ef50:	mov	x1, x20
    ef54:	bl	4c30 <PyNumber_FloorDivide@plt>
    ef58:	ldr	x1, [x19]
    ef5c:	mov	x20, x0
    ef60:	sub	x0, x1, #0x1
    ef64:	str	x0, [x19]
    ef68:	cbz	x0, ef9c <PyNumber_FloorDivide@plt+0xa36c>
    ef6c:	cbz	x20, efa8 <PyNumber_FloorDivide@plt+0xa378>
    ef70:	add	x1, x21, #0x2a8
    ef74:	mov	x0, x20
    ef78:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    ef7c:	mov	x19, x0
    ef80:	ldr	x1, [x20]
    ef84:	sub	x0, x1, #0x1
    ef88:	str	x0, [x20]
    ef8c:	cbnz	x0, ef1c <PyNumber_FloorDivide@plt+0xa2ec>
    ef90:	mov	x0, x20
    ef94:	bl	4830 <_Py_Dealloc@plt>
    ef98:	b	ef1c <PyNumber_FloorDivide@plt+0xa2ec>
    ef9c:	mov	x0, x19
    efa0:	bl	4830 <_Py_Dealloc@plt>
    efa4:	cbnz	x20, ef70 <PyNumber_FloorDivide@plt+0xa340>
    efa8:	mov	x19, #0x0                   	// #0
    efac:	b	eed8 <PyNumber_FloorDivide@plt+0xa2a8>
    efb0:	stp	x29, x30, [sp, #-48]!
    efb4:	mov	x29, sp
    efb8:	stp	x19, x20, [sp, #16]
    efbc:	mov	x19, x0
    efc0:	mov	x20, x1
    efc4:	ldr	x0, [x0, #8]
    efc8:	stp	x21, x22, [sp, #32]
    efcc:	adrp	x22, 29000 <PyInit__datetime@@Base+0x15f90>
    efd0:	add	x2, x22, #0x2a8
    efd4:	cmp	x0, x2
    efd8:	b.eq	efe8 <PyNumber_FloorDivide@plt+0xa3b8>  // b.none
    efdc:	mov	x1, x2
    efe0:	bl	4b60 <PyType_IsSubtype@plt>
    efe4:	cbz	w0, f0b0 <PyNumber_FloorDivide@plt+0xa480>
    efe8:	ldr	x0, [x20, #8]
    efec:	add	x1, x22, #0x2a8
    eff0:	cmp	x0, x1
    eff4:	b.eq	f000 <PyNumber_FloorDivide@plt+0xa3d0>  // b.none
    eff8:	bl	4b60 <PyType_IsSubtype@plt>
    effc:	cbz	w0, f0b0 <PyNumber_FloorDivide@plt+0xa480>
    f000:	mov	x0, x19
    f004:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f008:	mov	x21, x0
    f00c:	cbz	x0, f0ec <PyNumber_FloorDivide@plt+0xa4bc>
    f010:	mov	x0, x20
    f014:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f018:	mov	x19, x0
    f01c:	cbz	x0, f0dc <PyNumber_FloorDivide@plt+0xa4ac>
    f020:	mov	x1, x0
    f024:	mov	x0, x21
    f028:	bl	6008 <PyNumber_FloorDivide@plt+0x13d8>
    f02c:	mov	x20, x0
    f030:	ldr	x1, [x21]
    f034:	sub	x0, x1, #0x1
    f038:	str	x0, [x21]
    f03c:	cbz	x0, f110 <PyNumber_FloorDivide@plt+0xa4e0>
    f040:	ldr	x0, [x19]
    f044:	sub	x0, x0, #0x1
    f048:	str	x0, [x19]
    f04c:	cbz	x0, f104 <PyNumber_FloorDivide@plt+0xa4d4>
    f050:	cbz	x20, f0ec <PyNumber_FloorDivide@plt+0xa4bc>
    f054:	ldr	x0, [x20, #32]
    f058:	add	x1, x22, #0x2a8
    f05c:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f060:	mov	x21, x0
    f064:	cbz	x0, f144 <PyNumber_FloorDivide@plt+0xa514>
    f068:	ldr	x1, [x20, #24]
    f06c:	mov	x2, x0
    f070:	mov	x0, #0x2                   	// #2
    f074:	bl	4c00 <PyTuple_Pack@plt>
    f078:	mov	x19, x0
    f07c:	ldr	x1, [x21]
    f080:	sub	x0, x1, #0x1
    f084:	str	x0, [x21]
    f088:	cbz	x0, f138 <PyNumber_FloorDivide@plt+0xa508>
    f08c:	ldr	x0, [x20]
    f090:	sub	x0, x0, #0x1
    f094:	str	x0, [x20]
    f098:	cbz	x0, f11c <PyNumber_FloorDivide@plt+0xa4ec>
    f09c:	mov	x0, x19
    f0a0:	ldp	x19, x20, [sp, #16]
    f0a4:	ldp	x21, x22, [sp, #32]
    f0a8:	ldp	x29, x30, [sp], #48
    f0ac:	ret
    f0b0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f0b4:	ldp	x21, x22, [sp, #32]
    f0b8:	ldr	x0, [x0, #3960]
    f0bc:	mov	x19, x0
    f0c0:	ldr	x1, [x0]
    f0c4:	add	x1, x1, #0x1
    f0c8:	str	x1, [x0]
    f0cc:	mov	x0, x19
    f0d0:	ldp	x19, x20, [sp, #16]
    f0d4:	ldp	x29, x30, [sp], #48
    f0d8:	ret
    f0dc:	ldr	x0, [x21]
    f0e0:	sub	x0, x0, #0x1
    f0e4:	str	x0, [x21]
    f0e8:	cbz	x0, f164 <PyNumber_FloorDivide@plt+0xa534>
    f0ec:	mov	x19, #0x0                   	// #0
    f0f0:	mov	x0, x19
    f0f4:	ldp	x19, x20, [sp, #16]
    f0f8:	ldp	x21, x22, [sp, #32]
    f0fc:	ldp	x29, x30, [sp], #48
    f100:	ret
    f104:	mov	x0, x19
    f108:	bl	4830 <_Py_Dealloc@plt>
    f10c:	b	f050 <PyNumber_FloorDivide@plt+0xa420>
    f110:	mov	x0, x21
    f114:	bl	4830 <_Py_Dealloc@plt>
    f118:	b	f040 <PyNumber_FloorDivide@plt+0xa410>
    f11c:	mov	x0, x20
    f120:	bl	4830 <_Py_Dealloc@plt>
    f124:	mov	x0, x19
    f128:	ldp	x19, x20, [sp, #16]
    f12c:	ldp	x21, x22, [sp, #32]
    f130:	ldp	x29, x30, [sp], #48
    f134:	ret
    f138:	mov	x0, x21
    f13c:	bl	4830 <_Py_Dealloc@plt>
    f140:	b	f08c <PyNumber_FloorDivide@plt+0xa45c>
    f144:	ldr	x0, [x20]
    f148:	sub	x0, x0, #0x1
    f14c:	str	x0, [x20]
    f150:	cbnz	x0, f0ec <PyNumber_FloorDivide@plt+0xa4bc>
    f154:	mov	x0, x20
    f158:	mov	x19, #0x0                   	// #0
    f15c:	bl	4830 <_Py_Dealloc@plt>
    f160:	b	f09c <PyNumber_FloorDivide@plt+0xa46c>
    f164:	mov	x0, x21
    f168:	bl	4830 <_Py_Dealloc@plt>
    f16c:	b	f09c <PyNumber_FloorDivide@plt+0xa46c>
    f170:	stp	x29, x30, [sp, #-48]!
    f174:	mov	x29, sp
    f178:	stp	x19, x20, [sp, #16]
    f17c:	mov	x19, x0
    f180:	mov	x20, x1
    f184:	ldr	x0, [x0, #8]
    f188:	stp	x21, x22, [sp, #32]
    f18c:	adrp	x22, 29000 <PyInit__datetime@@Base+0x15f90>
    f190:	add	x2, x22, #0x2a8
    f194:	cmp	x0, x2
    f198:	b.eq	f1a8 <PyNumber_FloorDivide@plt+0xa578>  // b.none
    f19c:	mov	x1, x2
    f1a0:	bl	4b60 <PyType_IsSubtype@plt>
    f1a4:	cbz	w0, f248 <PyNumber_FloorDivide@plt+0xa618>
    f1a8:	ldr	x0, [x20, #8]
    f1ac:	add	x1, x22, #0x2a8
    f1b0:	cmp	x0, x1
    f1b4:	b.eq	f1c0 <PyNumber_FloorDivide@plt+0xa590>  // b.none
    f1b8:	bl	4b60 <PyType_IsSubtype@plt>
    f1bc:	cbz	w0, f248 <PyNumber_FloorDivide@plt+0xa618>
    f1c0:	mov	x0, x19
    f1c4:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f1c8:	mov	x21, x0
    f1cc:	cbz	x0, f284 <PyNumber_FloorDivide@plt+0xa654>
    f1d0:	mov	x0, x20
    f1d4:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f1d8:	mov	x19, x0
    f1dc:	cbz	x0, f274 <PyNumber_FloorDivide@plt+0xa644>
    f1e0:	mov	x1, x0
    f1e4:	mov	x0, x21
    f1e8:	bl	49a0 <PyNumber_Remainder@plt>
    f1ec:	mov	x20, x0
    f1f0:	ldr	x1, [x21]
    f1f4:	sub	x0, x1, #0x1
    f1f8:	str	x0, [x21]
    f1fc:	cbz	x0, f2a8 <PyNumber_FloorDivide@plt+0xa678>
    f200:	ldr	x0, [x19]
    f204:	sub	x0, x0, #0x1
    f208:	str	x0, [x19]
    f20c:	cbz	x0, f29c <PyNumber_FloorDivide@plt+0xa66c>
    f210:	cbz	x20, f284 <PyNumber_FloorDivide@plt+0xa654>
    f214:	add	x1, x22, #0x2a8
    f218:	mov	x0, x20
    f21c:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f220:	mov	x19, x0
    f224:	ldr	x1, [x20]
    f228:	sub	x0, x1, #0x1
    f22c:	str	x0, [x20]
    f230:	cbz	x0, f2b4 <PyNumber_FloorDivide@plt+0xa684>
    f234:	mov	x0, x19
    f238:	ldp	x19, x20, [sp, #16]
    f23c:	ldp	x21, x22, [sp, #32]
    f240:	ldp	x29, x30, [sp], #48
    f244:	ret
    f248:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f24c:	ldp	x21, x22, [sp, #32]
    f250:	ldr	x0, [x0, #3960]
    f254:	mov	x19, x0
    f258:	ldr	x1, [x0]
    f25c:	add	x1, x1, #0x1
    f260:	str	x1, [x0]
    f264:	mov	x0, x19
    f268:	ldp	x19, x20, [sp, #16]
    f26c:	ldp	x29, x30, [sp], #48
    f270:	ret
    f274:	ldr	x0, [x21]
    f278:	sub	x0, x0, #0x1
    f27c:	str	x0, [x21]
    f280:	cbz	x0, f2d0 <PyNumber_FloorDivide@plt+0xa6a0>
    f284:	mov	x19, #0x0                   	// #0
    f288:	mov	x0, x19
    f28c:	ldp	x19, x20, [sp, #16]
    f290:	ldp	x21, x22, [sp, #32]
    f294:	ldp	x29, x30, [sp], #48
    f298:	ret
    f29c:	mov	x0, x19
    f2a0:	bl	4830 <_Py_Dealloc@plt>
    f2a4:	b	f210 <PyNumber_FloorDivide@plt+0xa5e0>
    f2a8:	mov	x0, x21
    f2ac:	bl	4830 <_Py_Dealloc@plt>
    f2b0:	b	f200 <PyNumber_FloorDivide@plt+0xa5d0>
    f2b4:	mov	x0, x20
    f2b8:	bl	4830 <_Py_Dealloc@plt>
    f2bc:	mov	x0, x19
    f2c0:	ldp	x19, x20, [sp, #16]
    f2c4:	ldp	x21, x22, [sp, #32]
    f2c8:	ldp	x29, x30, [sp], #48
    f2cc:	ret
    f2d0:	mov	x0, x21
    f2d4:	bl	4830 <_Py_Dealloc@plt>
    f2d8:	b	f234 <PyNumber_FloorDivide@plt+0xa604>
    f2dc:	nop
    f2e0:	stp	x29, x30, [sp, #-64]!
    f2e4:	mov	x29, sp
    f2e8:	stp	x19, x20, [sp, #16]
    f2ec:	mov	x19, x0
    f2f0:	mov	x20, x1
    f2f4:	ldr	x0, [x0, #8]
    f2f8:	stp	x21, x22, [sp, #32]
    f2fc:	adrp	x21, 29000 <PyInit__datetime@@Base+0x15f90>
    f300:	add	x2, x21, #0x2a8
    f304:	cmp	x0, x2
    f308:	b.eq	f318 <PyNumber_FloorDivide@plt+0xa6e8>  // b.none
    f30c:	mov	x1, x2
    f310:	bl	4b60 <PyType_IsSubtype@plt>
    f314:	cbz	w0, f42c <PyNumber_FloorDivide@plt+0xa7fc>
    f318:	ldr	x0, [x20, #8]
    f31c:	ldr	x1, [x0, #168]
    f320:	tbnz	w1, #24, f538 <PyNumber_FloorDivide@plt+0xa908>
    f324:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    f328:	ldr	x1, [x1, #3944]
    f32c:	cmp	x0, x1
    f330:	b.eq	f33c <PyNumber_FloorDivide@plt+0xa70c>  // b.none
    f334:	bl	4b60 <PyType_IsSubtype@plt>
    f338:	cbz	w0, f5b0 <PyNumber_FloorDivide@plt+0xa980>
    f33c:	mov	x0, x19
    f340:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f344:	mov	x19, x0
    f348:	cbz	x0, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f34c:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    f350:	add	x1, x1, #0xad0
    f354:	mov	x0, x20
    f358:	add	x1, x1, #0x470
    f35c:	mov	x2, #0x0                   	// #0
    f360:	bl	4a90 <_PyObject_CallMethodId@plt>
    f364:	mov	x20, x0
    f368:	cbz	x0, f6e4 <PyNumber_FloorDivide@plt+0xaab4>
    f36c:	ldr	x2, [x0, #8]
    f370:	ldr	x1, [x2, #168]
    f374:	tbz	w1, #26, f78c <PyNumber_FloorDivide@plt+0xab5c>
    f378:	bl	4b80 <PyTuple_Size@plt>
    f37c:	cmp	x0, #0x2
    f380:	b.ne	f6b4 <PyNumber_FloorDivide@plt+0xaa84>  // b.any
    f384:	ldr	x1, [x20, #24]
    f388:	mov	x0, x19
    f38c:	bl	4850 <PyNumber_Multiply@plt>
    f390:	mov	x22, x0
    f394:	ldr	x1, [x19]
    f398:	sub	x0, x1, #0x1
    f39c:	str	x0, [x19]
    f3a0:	cbz	x0, f6a8 <PyNumber_FloorDivide@plt+0xaa78>
    f3a4:	cbz	x22, f720 <PyNumber_FloorDivide@plt+0xaaf0>
    f3a8:	ldr	x1, [x20, #32]
    f3ac:	mov	x0, x22
    f3b0:	bl	4930 <_PyLong_DivmodNear@plt>
    f3b4:	cbz	x0, f704 <PyNumber_FloorDivide@plt+0xaad4>
    f3b8:	str	x23, [sp, #48]
    f3bc:	ldr	x23, [x0, #24]
    f3c0:	ldr	x2, [x23]
    f3c4:	add	x2, x2, #0x1
    f3c8:	str	x2, [x23]
    f3cc:	ldr	x2, [x0]
    f3d0:	sub	x2, x2, #0x1
    f3d4:	str	x2, [x0]
    f3d8:	cbz	x2, f7c8 <PyNumber_FloorDivide@plt+0xab98>
    f3dc:	ldr	x0, [x22]
    f3e0:	sub	x0, x0, #0x1
    f3e4:	str	x0, [x22]
    f3e8:	cbz	x0, f7bc <PyNumber_FloorDivide@plt+0xab8c>
    f3ec:	add	x1, x21, #0x2a8
    f3f0:	mov	x0, x23
    f3f4:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f3f8:	mov	x19, x0
    f3fc:	ldr	x1, [x23]
    f400:	sub	x0, x1, #0x1
    f404:	str	x0, [x23]
    f408:	cbz	x0, f7d0 <PyNumber_FloorDivide@plt+0xaba0>
    f40c:	ldr	x0, [x20]
    f410:	ldr	x23, [sp, #48]
    f414:	sub	x0, x0, #0x1
    f418:	str	x0, [x20]
    f41c:	cbnz	x0, f58c <PyNumber_FloorDivide@plt+0xa95c>
    f420:	mov	x0, x20
    f424:	bl	4830 <_Py_Dealloc@plt>
    f428:	b	f58c <PyNumber_FloorDivide@plt+0xa95c>
    f42c:	ldr	x0, [x19, #8]
    f430:	ldr	x1, [x0, #168]
    f434:	tbnz	w1, #24, f640 <PyNumber_FloorDivide@plt+0xaa10>
    f438:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    f43c:	ldr	x1, [x1, #3944]
    f440:	cmp	x0, x1
    f444:	b.eq	f450 <PyNumber_FloorDivide@plt+0xa820>  // b.none
    f448:	bl	4b60 <PyType_IsSubtype@plt>
    f44c:	cbz	w0, f5b0 <PyNumber_FloorDivide@plt+0xa980>
    f450:	mov	x0, x20
    f454:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f458:	mov	x20, x0
    f45c:	cbz	x0, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f460:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    f464:	add	x1, x1, #0xad0
    f468:	mov	x0, x19
    f46c:	add	x1, x1, #0x470
    f470:	mov	x2, #0x0                   	// #0
    f474:	bl	4a90 <_PyObject_CallMethodId@plt>
    f478:	mov	x22, x0
    f47c:	cbz	x0, f610 <PyNumber_FloorDivide@plt+0xa9e0>
    f480:	ldr	x2, [x0, #8]
    f484:	ldr	x1, [x2, #168]
    f488:	tbz	w1, #26, f5dc <PyNumber_FloorDivide@plt+0xa9ac>
    f48c:	bl	4b80 <PyTuple_Size@plt>
    f490:	cmp	x0, #0x2
    f494:	b.ne	f7f0 <PyNumber_FloorDivide@plt+0xabc0>  // b.any
    f498:	ldr	x1, [x22, #24]
    f49c:	mov	x0, x20
    f4a0:	bl	4850 <PyNumber_Multiply@plt>
    f4a4:	mov	x19, x0
    f4a8:	ldr	x1, [x20]
    f4ac:	sub	x0, x1, #0x1
    f4b0:	str	x0, [x20]
    f4b4:	cbz	x0, f748 <PyNumber_FloorDivide@plt+0xab18>
    f4b8:	cbz	x19, f770 <PyNumber_FloorDivide@plt+0xab40>
    f4bc:	ldr	x1, [x22, #32]
    f4c0:	mov	x0, x19
    f4c4:	bl	4930 <_PyLong_DivmodNear@plt>
    f4c8:	cbz	x0, f758 <PyNumber_FloorDivide@plt+0xab28>
    f4cc:	ldr	x20, [x0, #24]
    f4d0:	ldr	x2, [x20]
    f4d4:	add	x2, x2, #0x1
    f4d8:	str	x2, [x20]
    f4dc:	ldr	x2, [x0]
    f4e0:	sub	x2, x2, #0x1
    f4e4:	str	x2, [x0]
    f4e8:	cbz	x2, f7e8 <PyNumber_FloorDivide@plt+0xabb8>
    f4ec:	ldr	x0, [x19]
    f4f0:	sub	x0, x0, #0x1
    f4f4:	str	x0, [x19]
    f4f8:	cbz	x0, f7dc <PyNumber_FloorDivide@plt+0xabac>
    f4fc:	add	x1, x21, #0x2a8
    f500:	mov	x0, x20
    f504:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f508:	mov	x19, x0
    f50c:	ldr	x1, [x20]
    f510:	sub	x0, x1, #0x1
    f514:	str	x0, [x20]
    f518:	cbz	x0, f81c <PyNumber_FloorDivide@plt+0xabec>
    f51c:	ldr	x0, [x22]
    f520:	sub	x0, x0, #0x1
    f524:	str	x0, [x22]
    f528:	cbnz	x0, f58c <PyNumber_FloorDivide@plt+0xa95c>
    f52c:	mov	x0, x22
    f530:	bl	4830 <_Py_Dealloc@plt>
    f534:	b	f58c <PyNumber_FloorDivide@plt+0xa95c>
    f538:	mov	x0, x19
    f53c:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f540:	mov	x19, x0
    f544:	cbz	x0, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f548:	mov	x0, x20
    f54c:	mov	x1, x19
    f550:	bl	4850 <PyNumber_Multiply@plt>
    f554:	mov	x20, x0
    f558:	ldr	x1, [x19]
    f55c:	sub	x0, x1, #0x1
    f560:	str	x0, [x19]
    f564:	cbz	x0, f698 <PyNumber_FloorDivide@plt+0xaa68>
    f568:	cbz	x20, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f56c:	add	x1, x21, #0x2a8
    f570:	mov	x0, x20
    f574:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f578:	mov	x19, x0
    f57c:	ldr	x1, [x20]
    f580:	sub	x0, x1, #0x1
    f584:	str	x0, [x20]
    f588:	cbz	x0, f420 <PyNumber_FloorDivide@plt+0xa7f0>
    f58c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f590:	ldr	x1, [x0, #3960]
    f594:	cmp	x19, x1
    f598:	b.eq	f5b4 <PyNumber_FloorDivide@plt+0xa984>  // b.none
    f59c:	mov	x0, x19
    f5a0:	ldp	x19, x20, [sp, #16]
    f5a4:	ldp	x21, x22, [sp, #32]
    f5a8:	ldp	x29, x30, [sp], #64
    f5ac:	ret
    f5b0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f5b4:	ldr	x0, [x0, #3960]
    f5b8:	ldp	x21, x22, [sp, #32]
    f5bc:	mov	x19, x0
    f5c0:	ldr	x1, [x0]
    f5c4:	add	x1, x1, #0x1
    f5c8:	str	x1, [x0]
    f5cc:	mov	x0, x19
    f5d0:	ldp	x19, x20, [sp, #16]
    f5d4:	ldp	x29, x30, [sp], #64
    f5d8:	ret
    f5dc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f5e0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    f5e4:	ldr	x2, [x2, #24]
    f5e8:	add	x1, x1, #0x5f8
    f5ec:	ldr	x0, [x0, #3976]
    f5f0:	ldr	x0, [x0]
    f5f4:	bl	4b90 <PyErr_Format@plt>
    f5f8:	ldr	x0, [x22]
    f5fc:	sub	x0, x0, #0x1
    f600:	str	x0, [x22]
    f604:	cbnz	x0, f610 <PyNumber_FloorDivide@plt+0xa9e0>
    f608:	mov	x0, x22
    f60c:	bl	4830 <_Py_Dealloc@plt>
    f610:	ldr	x0, [x20]
    f614:	sub	x0, x0, #0x1
    f618:	str	x0, [x20]
    f61c:	cbnz	x0, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f620:	mov	x0, x20
    f624:	bl	4830 <_Py_Dealloc@plt>
    f628:	mov	x19, #0x0                   	// #0
    f62c:	mov	x0, x19
    f630:	ldp	x19, x20, [sp, #16]
    f634:	ldp	x21, x22, [sp, #32]
    f638:	ldp	x29, x30, [sp], #64
    f63c:	ret
    f640:	mov	x0, x20
    f644:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f648:	mov	x20, x0
    f64c:	cbz	x0, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f650:	mov	x1, x20
    f654:	mov	x0, x19
    f658:	bl	4850 <PyNumber_Multiply@plt>
    f65c:	mov	x22, x0
    f660:	ldr	x1, [x20]
    f664:	sub	x0, x1, #0x1
    f668:	str	x0, [x20]
    f66c:	cbz	x0, f73c <PyNumber_FloorDivide@plt+0xab0c>
    f670:	cbz	x22, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f674:	add	x1, x21, #0x2a8
    f678:	mov	x0, x22
    f67c:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f680:	mov	x19, x0
    f684:	ldr	x1, [x22]
    f688:	sub	x0, x1, #0x1
    f68c:	str	x0, [x22]
    f690:	cbnz	x0, f58c <PyNumber_FloorDivide@plt+0xa95c>
    f694:	b	f52c <PyNumber_FloorDivide@plt+0xa8fc>
    f698:	mov	x0, x19
    f69c:	bl	4830 <_Py_Dealloc@plt>
    f6a0:	cbnz	x20, f56c <PyNumber_FloorDivide@plt+0xa93c>
    f6a4:	b	f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f6a8:	mov	x0, x19
    f6ac:	bl	4830 <_Py_Dealloc@plt>
    f6b0:	b	f3a4 <PyNumber_FloorDivide@plt+0xa774>
    f6b4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f6b8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    f6bc:	add	x1, x1, #0x648
    f6c0:	ldr	x0, [x0, #3968]
    f6c4:	ldr	x0, [x0]
    f6c8:	bl	48a0 <PyErr_SetString@plt>
    f6cc:	ldr	x0, [x20]
    f6d0:	sub	x0, x0, #0x1
    f6d4:	str	x0, [x20]
    f6d8:	cbnz	x0, f6e4 <PyNumber_FloorDivide@plt+0xaab4>
    f6dc:	mov	x0, x20
    f6e0:	bl	4830 <_Py_Dealloc@plt>
    f6e4:	ldr	x0, [x19]
    f6e8:	sub	x0, x0, #0x1
    f6ec:	str	x0, [x19]
    f6f0:	cbnz	x0, f628 <PyNumber_FloorDivide@plt+0xa9f8>
    f6f4:	mov	x0, x19
    f6f8:	mov	x19, #0x0                   	// #0
    f6fc:	bl	4830 <_Py_Dealloc@plt>
    f700:	b	f62c <PyNumber_FloorDivide@plt+0xa9fc>
    f704:	ldr	x0, [x22]
    f708:	sub	x0, x0, #0x1
    f70c:	str	x0, [x22]
    f710:	cbnz	x0, f720 <PyNumber_FloorDivide@plt+0xaaf0>
    f714:	mov	x0, x22
    f718:	bl	4830 <_Py_Dealloc@plt>
    f71c:	nop
    f720:	ldr	x0, [x20]
    f724:	mov	x19, #0x0                   	// #0
    f728:	sub	x0, x0, #0x1
    f72c:	str	x0, [x20]
    f730:	cbz	x0, f420 <PyNumber_FloorDivide@plt+0xa7f0>
    f734:	mov	x19, #0x0                   	// #0
    f738:	b	f62c <PyNumber_FloorDivide@plt+0xa9fc>
    f73c:	mov	x0, x20
    f740:	bl	4830 <_Py_Dealloc@plt>
    f744:	b	f670 <PyNumber_FloorDivide@plt+0xaa40>
    f748:	mov	x0, x20
    f74c:	bl	4830 <_Py_Dealloc@plt>
    f750:	cbnz	x19, f4bc <PyNumber_FloorDivide@plt+0xa88c>
    f754:	b	f770 <PyNumber_FloorDivide@plt+0xab40>
    f758:	ldr	x0, [x19]
    f75c:	sub	x0, x0, #0x1
    f760:	str	x0, [x19]
    f764:	cbnz	x0, f770 <PyNumber_FloorDivide@plt+0xab40>
    f768:	mov	x0, x19
    f76c:	bl	4830 <_Py_Dealloc@plt>
    f770:	ldr	x0, [x22]
    f774:	mov	x19, #0x0                   	// #0
    f778:	sub	x0, x0, #0x1
    f77c:	str	x0, [x22]
    f780:	cbz	x0, f52c <PyNumber_FloorDivide@plt+0xa8fc>
    f784:	mov	x19, #0x0                   	// #0
    f788:	b	f62c <PyNumber_FloorDivide@plt+0xa9fc>
    f78c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f790:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    f794:	ldr	x2, [x2, #24]
    f798:	add	x1, x1, #0x5f8
    f79c:	ldr	x0, [x0, #3976]
    f7a0:	ldr	x0, [x0]
    f7a4:	bl	4b90 <PyErr_Format@plt>
    f7a8:	ldr	x0, [x20]
    f7ac:	sub	x0, x0, #0x1
    f7b0:	str	x0, [x20]
    f7b4:	cbnz	x0, f6e4 <PyNumber_FloorDivide@plt+0xaab4>
    f7b8:	b	f6dc <PyNumber_FloorDivide@plt+0xaaac>
    f7bc:	mov	x0, x22
    f7c0:	bl	4830 <_Py_Dealloc@plt>
    f7c4:	b	f3ec <PyNumber_FloorDivide@plt+0xa7bc>
    f7c8:	bl	4830 <_Py_Dealloc@plt>
    f7cc:	b	f3dc <PyNumber_FloorDivide@plt+0xa7ac>
    f7d0:	mov	x0, x23
    f7d4:	bl	4830 <_Py_Dealloc@plt>
    f7d8:	b	f40c <PyNumber_FloorDivide@plt+0xa7dc>
    f7dc:	mov	x0, x19
    f7e0:	bl	4830 <_Py_Dealloc@plt>
    f7e4:	b	f4fc <PyNumber_FloorDivide@plt+0xa8cc>
    f7e8:	bl	4830 <_Py_Dealloc@plt>
    f7ec:	b	f4ec <PyNumber_FloorDivide@plt+0xa8bc>
    f7f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f7f4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    f7f8:	add	x1, x1, #0x648
    f7fc:	ldr	x0, [x0, #3968]
    f800:	ldr	x0, [x0]
    f804:	bl	48a0 <PyErr_SetString@plt>
    f808:	ldr	x0, [x22]
    f80c:	sub	x0, x0, #0x1
    f810:	str	x0, [x22]
    f814:	cbnz	x0, f610 <PyNumber_FloorDivide@plt+0xa9e0>
    f818:	b	f608 <PyNumber_FloorDivide@plt+0xa9d8>
    f81c:	mov	x0, x20
    f820:	bl	4830 <_Py_Dealloc@plt>
    f824:	b	f51c <PyNumber_FloorDivide@plt+0xa8ec>
    f828:	stp	x29, x30, [sp, #-64]!
    f82c:	mov	x29, sp
    f830:	stp	x19, x20, [sp, #16]
    f834:	mov	x19, x0
    f838:	mov	x20, x1
    f83c:	ldr	x0, [x0, #8]
    f840:	stp	x21, x22, [sp, #32]
    f844:	adrp	x21, 29000 <PyInit__datetime@@Base+0x15f90>
    f848:	add	x2, x21, #0x2a8
    f84c:	cmp	x0, x2
    f850:	b.eq	f88c <PyNumber_FloorDivide@plt+0xac5c>  // b.none
    f854:	mov	x1, x2
    f858:	bl	4b60 <PyType_IsSubtype@plt>
    f85c:	cbnz	w0, f88c <PyNumber_FloorDivide@plt+0xac5c>
    f860:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f864:	ldr	x0, [x0, #3960]
    f868:	mov	x19, x0
    f86c:	ldr	x1, [x0]
    f870:	add	x1, x1, #0x1
    f874:	str	x1, [x0]
    f878:	mov	x0, x19
    f87c:	ldp	x19, x20, [sp, #16]
    f880:	ldp	x21, x22, [sp, #32]
    f884:	ldp	x29, x30, [sp], #64
    f888:	ret
    f88c:	ldr	x0, [x20, #8]
    f890:	add	x1, x21, #0x2a8
    f894:	cmp	x0, x1
    f898:	b.eq	f8a4 <PyNumber_FloorDivide@plt+0xac74>  // b.none
    f89c:	bl	4b60 <PyType_IsSubtype@plt>
    f8a0:	cbz	w0, f918 <PyNumber_FloorDivide@plt+0xace8>
    f8a4:	mov	x0, x19
    f8a8:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f8ac:	mov	x21, x0
    f8b0:	cbz	x0, fa08 <PyNumber_FloorDivide@plt+0xadd8>
    f8b4:	mov	x0, x20
    f8b8:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f8bc:	mov	x20, x0
    f8c0:	cbz	x0, fb14 <PyNumber_FloorDivide@plt+0xaee4>
    f8c4:	mov	x1, x0
    f8c8:	mov	x0, x21
    f8cc:	bl	4c10 <PyNumber_TrueDivide@plt>
    f8d0:	mov	x19, x0
    f8d4:	ldr	x1, [x21]
    f8d8:	sub	x0, x1, #0x1
    f8dc:	str	x0, [x21]
    f8e0:	cbz	x0, fb08 <PyNumber_FloorDivide@plt+0xaed8>
    f8e4:	ldr	x0, [x20]
    f8e8:	sub	x0, x0, #0x1
    f8ec:	str	x0, [x20]
    f8f0:	cbz	x0, f9b0 <PyNumber_FloorDivide@plt+0xad80>
    f8f4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f8f8:	ldr	x1, [x0, #3960]
    f8fc:	cmp	x19, x1
    f900:	b.eq	f864 <PyNumber_FloorDivide@plt+0xac34>  // b.none
    f904:	mov	x0, x19
    f908:	ldp	x19, x20, [sp, #16]
    f90c:	ldp	x21, x22, [sp, #32]
    f910:	ldp	x29, x30, [sp], #64
    f914:	ret
    f918:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    f91c:	ldr	x0, [x20, #8]
    f920:	ldr	x1, [x1, #3944]
    f924:	cmp	x0, x1
    f928:	b.eq	fa20 <PyNumber_FloorDivide@plt+0xadf0>  // b.none
    f92c:	bl	4b60 <PyType_IsSubtype@plt>
    f930:	cbnz	w0, fa20 <PyNumber_FloorDivide@plt+0xadf0>
    f934:	ldr	x1, [x20, #8]
    f938:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f93c:	ldr	x1, [x1, #168]
    f940:	tbz	w1, #24, f864 <PyNumber_FloorDivide@plt+0xac34>
    f944:	mov	x0, x19
    f948:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    f94c:	mov	x19, x0
    f950:	cbz	x0, fa08 <PyNumber_FloorDivide@plt+0xadd8>
    f954:	mov	x1, x20
    f958:	bl	4930 <_PyLong_DivmodNear@plt>
    f95c:	cbz	x0, f9f0 <PyNumber_FloorDivide@plt+0xadc0>
    f960:	ldr	x20, [x0, #24]
    f964:	ldr	x2, [x20]
    f968:	add	x2, x2, #0x1
    f96c:	str	x2, [x20]
    f970:	ldr	x2, [x0]
    f974:	sub	x2, x2, #0x1
    f978:	str	x2, [x0]
    f97c:	cbz	x2, fbd0 <PyNumber_FloorDivide@plt+0xafa0>
    f980:	ldr	x0, [x19]
    f984:	sub	x0, x0, #0x1
    f988:	str	x0, [x19]
    f98c:	cbz	x0, fbc4 <PyNumber_FloorDivide@plt+0xaf94>
    f990:	add	x1, x21, #0x2a8
    f994:	mov	x0, x20
    f998:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    f99c:	mov	x19, x0
    f9a0:	ldr	x1, [x20]
    f9a4:	sub	x0, x1, #0x1
    f9a8:	str	x0, [x20]
    f9ac:	cbnz	x0, f8f4 <PyNumber_FloorDivide@plt+0xacc4>
    f9b0:	mov	x0, x20
    f9b4:	bl	4830 <_Py_Dealloc@plt>
    f9b8:	b	f8f4 <PyNumber_FloorDivide@plt+0xacc4>
    f9bc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    f9c0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    f9c4:	ldr	x2, [x2, #24]
    f9c8:	add	x1, x1, #0x5f8
    f9cc:	ldr	x0, [x0, #3976]
    f9d0:	ldr	x0, [x0]
    f9d4:	bl	4b90 <PyErr_Format@plt>
    f9d8:	ldr	x0, [x20]
    f9dc:	sub	x0, x0, #0x1
    f9e0:	str	x0, [x20]
    f9e4:	cbnz	x0, f9f0 <PyNumber_FloorDivide@plt+0xadc0>
    f9e8:	mov	x0, x20
    f9ec:	bl	4830 <_Py_Dealloc@plt>
    f9f0:	ldr	x0, [x19]
    f9f4:	sub	x0, x0, #0x1
    f9f8:	str	x0, [x19]
    f9fc:	cbnz	x0, fa08 <PyNumber_FloorDivide@plt+0xadd8>
    fa00:	mov	x0, x19
    fa04:	bl	4830 <_Py_Dealloc@plt>
    fa08:	mov	x19, #0x0                   	// #0
    fa0c:	mov	x0, x19
    fa10:	ldp	x19, x20, [sp, #16]
    fa14:	ldp	x21, x22, [sp, #32]
    fa18:	ldp	x29, x30, [sp], #64
    fa1c:	ret
    fa20:	mov	x0, x19
    fa24:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
    fa28:	mov	x19, x0
    fa2c:	cbz	x0, fa08 <PyNumber_FloorDivide@plt+0xadd8>
    fa30:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
    fa34:	add	x1, x1, #0xad0
    fa38:	mov	x0, x20
    fa3c:	add	x1, x1, #0x470
    fa40:	mov	x2, #0x0                   	// #0
    fa44:	bl	4a90 <_PyObject_CallMethodId@plt>
    fa48:	mov	x20, x0
    fa4c:	cbz	x0, f9f0 <PyNumber_FloorDivide@plt+0xadc0>
    fa50:	ldr	x2, [x0, #8]
    fa54:	ldr	x1, [x2, #168]
    fa58:	tbz	w1, #26, f9bc <PyNumber_FloorDivide@plt+0xad8c>
    fa5c:	bl	4b80 <PyTuple_Size@plt>
    fa60:	cmp	x0, #0x2
    fa64:	b.ne	fb8c <PyNumber_FloorDivide@plt+0xaf5c>  // b.any
    fa68:	ldr	x1, [x20, #32]
    fa6c:	mov	x0, x19
    fa70:	bl	4850 <PyNumber_Multiply@plt>
    fa74:	mov	x22, x0
    fa78:	ldr	x1, [x19]
    fa7c:	sub	x0, x1, #0x1
    fa80:	str	x0, [x19]
    fa84:	cbz	x0, fb6c <PyNumber_FloorDivide@plt+0xaf3c>
    fa88:	cbz	x22, fb50 <PyNumber_FloorDivide@plt+0xaf20>
    fa8c:	ldr	x1, [x20, #24]
    fa90:	mov	x0, x22
    fa94:	bl	4930 <_PyLong_DivmodNear@plt>
    fa98:	cbz	x0, fb34 <PyNumber_FloorDivide@plt+0xaf04>
    fa9c:	str	x23, [sp, #48]
    faa0:	ldr	x23, [x0, #24]
    faa4:	ldr	x2, [x23]
    faa8:	add	x2, x2, #0x1
    faac:	str	x2, [x23]
    fab0:	ldr	x2, [x0]
    fab4:	sub	x2, x2, #0x1
    fab8:	str	x2, [x0]
    fabc:	cbz	x2, fb84 <PyNumber_FloorDivide@plt+0xaf54>
    fac0:	ldr	x0, [x22]
    fac4:	sub	x0, x0, #0x1
    fac8:	str	x0, [x22]
    facc:	cbz	x0, fb78 <PyNumber_FloorDivide@plt+0xaf48>
    fad0:	add	x1, x21, #0x2a8
    fad4:	mov	x0, x23
    fad8:	bl	e780 <PyNumber_FloorDivide@plt+0x9b50>
    fadc:	mov	x19, x0
    fae0:	ldr	x1, [x23]
    fae4:	sub	x0, x1, #0x1
    fae8:	str	x0, [x23]
    faec:	cbz	x0, fbb8 <PyNumber_FloorDivide@plt+0xaf88>
    faf0:	ldr	x0, [x20]
    faf4:	ldr	x23, [sp, #48]
    faf8:	sub	x0, x0, #0x1
    fafc:	str	x0, [x20]
    fb00:	cbnz	x0, f8f4 <PyNumber_FloorDivide@plt+0xacc4>
    fb04:	b	f9b0 <PyNumber_FloorDivide@plt+0xad80>
    fb08:	mov	x0, x21
    fb0c:	bl	4830 <_Py_Dealloc@plt>
    fb10:	b	f8e4 <PyNumber_FloorDivide@plt+0xacb4>
    fb14:	ldr	x0, [x21]
    fb18:	sub	x0, x0, #0x1
    fb1c:	str	x0, [x21]
    fb20:	cbnz	x0, fa08 <PyNumber_FloorDivide@plt+0xadd8>
    fb24:	mov	x0, x21
    fb28:	mov	x19, #0x0                   	// #0
    fb2c:	bl	4830 <_Py_Dealloc@plt>
    fb30:	b	f878 <PyNumber_FloorDivide@plt+0xac48>
    fb34:	ldr	x0, [x22]
    fb38:	sub	x0, x0, #0x1
    fb3c:	str	x0, [x22]
    fb40:	cbnz	x0, fb50 <PyNumber_FloorDivide@plt+0xaf20>
    fb44:	mov	x0, x22
    fb48:	bl	4830 <_Py_Dealloc@plt>
    fb4c:	nop
    fb50:	ldr	x0, [x20]
    fb54:	mov	x19, #0x0                   	// #0
    fb58:	sub	x0, x0, #0x1
    fb5c:	str	x0, [x20]
    fb60:	cbz	x0, f9b0 <PyNumber_FloorDivide@plt+0xad80>
    fb64:	mov	x19, #0x0                   	// #0
    fb68:	b	fa0c <PyNumber_FloorDivide@plt+0xaddc>
    fb6c:	mov	x0, x19
    fb70:	bl	4830 <_Py_Dealloc@plt>
    fb74:	b	fa88 <PyNumber_FloorDivide@plt+0xae58>
    fb78:	mov	x0, x22
    fb7c:	bl	4830 <_Py_Dealloc@plt>
    fb80:	b	fad0 <PyNumber_FloorDivide@plt+0xaea0>
    fb84:	bl	4830 <_Py_Dealloc@plt>
    fb88:	b	fac0 <PyNumber_FloorDivide@plt+0xae90>
    fb8c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    fb90:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    fb94:	add	x1, x1, #0x648
    fb98:	ldr	x0, [x0, #3968]
    fb9c:	ldr	x0, [x0]
    fba0:	bl	48a0 <PyErr_SetString@plt>
    fba4:	ldr	x0, [x20]
    fba8:	sub	x0, x0, #0x1
    fbac:	str	x0, [x20]
    fbb0:	cbnz	x0, f9f0 <PyNumber_FloorDivide@plt+0xadc0>
    fbb4:	b	f9e8 <PyNumber_FloorDivide@plt+0xadb8>
    fbb8:	mov	x0, x23
    fbbc:	bl	4830 <_Py_Dealloc@plt>
    fbc0:	b	faf0 <PyNumber_FloorDivide@plt+0xaec0>
    fbc4:	mov	x0, x19
    fbc8:	bl	4830 <_Py_Dealloc@plt>
    fbcc:	b	f990 <PyNumber_FloorDivide@plt+0xad60>
    fbd0:	bl	4830 <_Py_Dealloc@plt>
    fbd4:	b	f980 <PyNumber_FloorDivide@plt+0xad50>
    fbd8:	stp	x29, x30, [sp, #-48]!
    fbdc:	mov	x29, sp
    fbe0:	stp	x19, x20, [sp, #16]
    fbe4:	mov	x19, x0
    fbe8:	mov	x20, x1
    fbec:	ldr	x0, [x0, #8]
    fbf0:	stp	x21, x22, [sp, #32]
    fbf4:	adrp	x21, 29000 <PyInit__datetime@@Base+0x15f90>
    fbf8:	add	x2, x21, #0x2a8
    fbfc:	cmp	x0, x2
    fc00:	b.eq	fc38 <PyNumber_FloorDivide@plt+0xb008>  // b.none
    fc04:	mov	x1, x2
    fc08:	bl	4b60 <PyType_IsSubtype@plt>
    fc0c:	cbnz	w0, fc38 <PyNumber_FloorDivide@plt+0xb008>
    fc10:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    fc14:	ldr	x1, [x1, #3960]
    fc18:	mov	x0, x1
    fc1c:	ldr	x2, [x1]
    fc20:	add	x2, x2, #0x1
    fc24:	str	x2, [x1]
    fc28:	ldp	x19, x20, [sp, #16]
    fc2c:	ldp	x21, x22, [sp, #32]
    fc30:	ldp	x29, x30, [sp], #48
    fc34:	ret
    fc38:	ldr	x0, [x20, #8]
    fc3c:	add	x1, x21, #0x2a8
    fc40:	cmp	x0, x1
    fc44:	b.eq	fc50 <PyNumber_FloorDivide@plt+0xb020>  // b.none
    fc48:	bl	4b60 <PyType_IsSubtype@plt>
    fc4c:	cbz	w0, fc10 <PyNumber_FloorDivide@plt+0xafe0>
    fc50:	ldr	w22, [x19, #32]
    fc54:	mov	w0, #0x423f                	// #16959
    fc58:	ldr	w3, [x20, #32]
    fc5c:	movk	w0, #0xf, lsl #16
    fc60:	ldr	w1, [x19, #24]
    fc64:	sub	w22, w22, w3
    fc68:	ldr	w19, [x19, #28]
    fc6c:	ldr	w2, [x20, #24]
    fc70:	cmp	w22, w0
    fc74:	ldr	w0, [x20, #28]
    fc78:	sub	w20, w1, w2
    fc7c:	sub	w19, w19, w0
    fc80:	b.ls	fcac <PyNumber_FloorDivide@plt+0xb07c>  // b.plast
    fc84:	mov	w0, #0xde83                	// #56963
    fc88:	mov	w1, #0x4240                	// #16960
    fc8c:	movk	w0, #0x431b, lsl #16
    fc90:	movk	w1, #0xf, lsl #16
    fc94:	smull	x0, w22, w0
    fc98:	asr	x0, x0, #50
    fc9c:	sub	w0, w0, w22, asr #31
    fca0:	msub	w22, w0, w1, w22
    fca4:	tbnz	w22, #31, fd58 <PyNumber_FloorDivide@plt+0xb128>
    fca8:	add	w19, w19, w0
    fcac:	mov	w0, #0x517f                	// #20863
    fcb0:	movk	w0, #0x1, lsl #16
    fcb4:	cmp	w19, w0
    fcb8:	b.ls	fcec <PyNumber_FloorDivide@plt+0xb0bc>  // b.plast
    fcbc:	mov	w0, #0x4507                	// #17671
    fcc0:	mov	w1, #0x5180                	// #20864
    fcc4:	movk	w0, #0xc22e, lsl #16
    fcc8:	movk	w1, #0x1, lsl #16
    fccc:	smull	x0, w19, w0
    fcd0:	lsr	x0, x0, #32
    fcd4:	add	w0, w19, w0
    fcd8:	asr	w0, w0, #16
    fcdc:	sub	w0, w0, w19, asr #31
    fce0:	msub	w19, w0, w1, w19
    fce4:	tbnz	w19, #31, fd4c <PyNumber_FloorDivide@plt+0xb11c>
    fce8:	add	w20, w20, w0
    fcec:	mov	w3, #0xc9ff                	// #51711
    fcf0:	mov	w0, #0x93fe                	// #37886
    fcf4:	movk	w3, #0x3b9a, lsl #16
    fcf8:	add	w1, w20, w3
    fcfc:	movk	w0, #0x7735, lsl #16
    fd00:	cmp	w1, w0
    fd04:	b.hi	fd64 <PyNumber_FloorDivide@plt+0xb134>  // b.pmore
    fd08:	add	x0, x21, #0x2a8
    fd0c:	mov	x1, #0x0                   	// #0
    fd10:	ldr	x2, [x0, #304]
    fd14:	blr	x2
    fd18:	cbz	x0, fc28 <PyNumber_FloorDivide@plt+0xaff8>
    fd1c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
    fd20:	mov	x2, #0xffffffffffffffff    	// #-1
    fd24:	str	x2, [x0, #16]
    fd28:	ldr	x2, [x1, #3960]
    fd2c:	stp	w20, w19, [x0, #24]
    fd30:	str	w22, [x0, #32]
    fd34:	cmp	x0, x2
    fd38:	b.eq	fc14 <PyNumber_FloorDivide@plt+0xafe4>  // b.none
    fd3c:	ldp	x19, x20, [sp, #16]
    fd40:	ldp	x21, x22, [sp, #32]
    fd44:	ldp	x29, x30, [sp], #48
    fd48:	ret
    fd4c:	sub	w0, w0, #0x1
    fd50:	add	w19, w19, w1
    fd54:	b	fce8 <PyNumber_FloorDivide@plt+0xb0b8>
    fd58:	sub	w0, w0, #0x1
    fd5c:	add	w22, w22, w1
    fd60:	b	fca8 <PyNumber_FloorDivide@plt+0xb078>
    fd64:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    fd68:	mov	w2, w20
    fd6c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    fd70:	add	x1, x1, #0xa50
    fd74:	ldr	x0, [x0, #4008]
    fd78:	ldr	x0, [x0]
    fd7c:	bl	4b90 <PyErr_Format@plt>
    fd80:	mov	x0, #0x0                   	// #0
    fd84:	b	fc28 <PyNumber_FloorDivide@plt+0xaff8>
    fd88:	stp	x29, x30, [sp, #-80]!
    fd8c:	adrp	x2, 29000 <PyInit__datetime@@Base+0x15f90>
    fd90:	mov	x29, sp
    fd94:	stp	x19, x20, [sp, #16]
    fd98:	mov	x19, x1
    fd9c:	mov	x20, x0
    fda0:	add	x1, x2, #0x2a8
    fda4:	ldr	x0, [x19, #8]
    fda8:	add	x1, x1, #0x1a0
    fdac:	cmp	x0, x1
    fdb0:	b.eq	fdbc <PyNumber_FloorDivide@plt+0xb18c>  // b.none
    fdb4:	bl	4b60 <PyType_IsSubtype@plt>
    fdb8:	cbz	w0, 100c8 <PyNumber_FloorDivide@plt+0xb498>
    fdbc:	stp	x23, x24, [sp, #48]
    fdc0:	ldrb	w0, [x19, #24]
    fdc4:	cbz	w0, feb4 <PyNumber_FloorDivide@plt+0xb284>
    fdc8:	ldr	x0, [x19, #40]
    fdcc:	stp	x21, x22, [sp, #32]
    fdd0:	stp	x25, x26, [sp, #64]
    fdd4:	cmp	x0, x20
    fdd8:	b.ne	100e8 <PyNumber_FloorDivide@plt+0xb4b8>  // b.any
    fddc:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
    fde0:	ldr	x21, [x23, #4024]
    fde4:	cmp	x20, x21
    fde8:	b.eq	101b0 <PyNumber_FloorDivide@plt+0xb580>  // b.none
    fdec:	mov	x0, x20
    fdf0:	mov	x2, x19
    fdf4:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    fdf8:	add	x1, x1, #0xa38
    fdfc:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    fe00:	mov	x25, x0
    fe04:	cbz	x0, fe94 <PyNumber_FloorDivide@plt+0xb264>
    fe08:	cmp	x0, x21
    fe0c:	b.eq	101b8 <PyNumber_FloorDivide@plt+0xb588>  // b.none
    fe10:	ldrb	w1, [x19, #24]
    fe14:	cbnz	w1, ff10 <PyNumber_FloorDivide@plt+0xb2e0>
    fe18:	ldr	x1, [x23, #4024]
    fe1c:	ldr	x0, [x1]
    fe20:	add	x0, x0, #0x1
    fe24:	str	x0, [x1]
    fe28:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    fe2c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    fe30:	add	x1, x1, #0x6a8
    fe34:	mov	x21, #0x0                   	// #0
    fe38:	ldr	x0, [x0, #3968]
    fe3c:	mov	x22, #0x0                   	// #0
    fe40:	ldr	x0, [x0]
    fe44:	bl	48a0 <PyErr_SetString@plt>
    fe48:	ldr	x20, [x23, #4024]
    fe4c:	ldr	x1, [x25]
    fe50:	sub	x1, x1, #0x1
    fe54:	str	x1, [x25]
    fe58:	cbz	x1, 10134 <PyNumber_FloorDivide@plt+0xb504>
    fe5c:	ldr	x0, [x20]
    fe60:	sub	x0, x0, #0x1
    fe64:	str	x0, [x20]
    fe68:	cbz	x0, 10058 <PyNumber_FloorDivide@plt+0xb428>
    fe6c:	cbz	x21, fe80 <PyNumber_FloorDivide@plt+0xb250>
    fe70:	ldr	x0, [x21]
    fe74:	sub	x0, x0, #0x1
    fe78:	str	x0, [x21]
    fe7c:	cbz	x0, 100b0 <PyNumber_FloorDivide@plt+0xb480>
    fe80:	cbz	x22, fe94 <PyNumber_FloorDivide@plt+0xb264>
    fe84:	ldr	x0, [x22]
    fe88:	sub	x0, x0, #0x1
    fe8c:	str	x0, [x22]
    fe90:	cbz	x0, 10030 <PyNumber_FloorDivide@plt+0xb400>
    fe94:	ldp	x21, x22, [sp, #32]
    fe98:	mov	x19, #0x0                   	// #0
    fe9c:	ldp	x23, x24, [sp, #48]
    fea0:	ldp	x25, x26, [sp, #64]
    fea4:	mov	x0, x19
    fea8:	ldp	x19, x20, [sp, #16]
    feac:	ldp	x29, x30, [sp], #80
    feb0:	ret
    feb4:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
    feb8:	ldr	x0, [x23, #4024]
    febc:	cmp	x20, x0
    fec0:	b.ne	100f0 <PyNumber_FloorDivide@plt+0xb4c0>  // b.any
    fec4:	stp	x25, x26, [sp, #64]
    fec8:	ldr	x1, [x23, #4024]
    fecc:	ldr	x0, [x1]
    fed0:	add	x0, x0, #0x1
    fed4:	str	x0, [x1]
    fed8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
    fedc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
    fee0:	add	x1, x1, #0x678
    fee4:	ldr	x0, [x0, #3968]
    fee8:	ldr	x0, [x0]
    feec:	bl	48a0 <PyErr_SetString@plt>
    fef0:	ldr	x25, [x23, #4024]
    fef4:	ldr	x0, [x25]
    fef8:	sub	x0, x0, #0x1
    fefc:	str	x0, [x25]
    ff00:	cbnz	x0, fe98 <PyNumber_FloorDivide@plt+0xb268>
    ff04:	mov	x0, x25
    ff08:	bl	4830 <_Py_Dealloc@plt>
    ff0c:	b	fe98 <PyNumber_FloorDivide@plt+0xb268>
    ff10:	ldr	x0, [x19, #40]
    ff14:	cmp	x0, x21
    ff18:	b.eq	fe18 <PyNumber_FloorDivide@plt+0xb1e8>  // b.none
    ff1c:	mov	x2, x19
    ff20:	adrp	x24, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
    ff24:	add	x1, x24, #0xa08
    ff28:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    ff2c:	mov	x20, x0
    ff30:	cbz	x0, 10140 <PyNumber_FloorDivide@plt+0xb510>
    ff34:	cmp	x0, x21
    ff38:	b.eq	fe28 <PyNumber_FloorDivide@plt+0xb1f8>  // b.none
    ff3c:	mov	x1, x0
    ff40:	mov	x0, x25
    ff44:	bl	fbd8 <PyNumber_FloorDivide@plt+0xafa8>
    ff48:	mov	x21, x0
    ff4c:	cbz	x0, 10120 <PyNumber_FloorDivide@plt+0xb4f0>
    ff50:	mov	x1, x0
    ff54:	mov	w2, #0x1                   	// #1
    ff58:	mov	x0, x19
    ff5c:	bl	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
    ff60:	mov	x22, x0
    ff64:	cbz	x0, fe4c <PyNumber_FloorDivide@plt+0xb21c>
    ff68:	ldr	x1, [x20]
    ff6c:	sub	x1, x1, #0x1
    ff70:	str	x1, [x20]
    ff74:	cbz	x1, 100bc <PyNumber_FloorDivide@plt+0xb48c>
    ff78:	ldrb	w0, [x19, #24]
    ff7c:	cbz	w0, 10064 <PyNumber_FloorDivide@plt+0xb434>
    ff80:	ldr	x26, [x23, #4024]
    ff84:	ldr	x0, [x19, #40]
    ff88:	cmp	x0, x26
    ff8c:	b.eq	10064 <PyNumber_FloorDivide@plt+0xb434>  // b.none
    ff90:	add	x1, x24, #0xa08
    ff94:	mov	x2, x22
    ff98:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
    ff9c:	mov	x20, x0
    ffa0:	cbz	x0, 1018c <PyNumber_FloorDivide@plt+0xb55c>
    ffa4:	cmp	x0, x26
    ffa8:	b.eq	10074 <PyNumber_FloorDivide@plt+0xb444>  // b.none
    ffac:	ldr	x0, [x0, #24]
    ffb0:	cbnz	x0, ffbc <PyNumber_FloorDivide@plt+0xb38c>
    ffb4:	ldr	w0, [x20, #32]
    ffb8:	cbz	w0, 10178 <PyNumber_FloorDivide@plt+0xb548>
    ffbc:	mov	x1, x20
    ffc0:	mov	x0, x22
    ffc4:	mov	w2, #0x1                   	// #1
    ffc8:	bl	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
    ffcc:	ldr	x1, [x22]
    ffd0:	mov	x19, x0
    ffd4:	sub	x0, x1, #0x1
    ffd8:	str	x0, [x22]
    ffdc:	cbz	x0, 10180 <PyNumber_FloorDivide@plt+0xb550>
    ffe0:	cbz	x19, 10120 <PyNumber_FloorDivide@plt+0xb4f0>
    ffe4:	ldr	x0, [x21]
    ffe8:	sub	x0, x0, #0x1
    ffec:	str	x0, [x21]
    fff0:	cbz	x0, 10154 <PyNumber_FloorDivide@plt+0xb524>
    fff4:	ldr	x0, [x20]
    fff8:	sub	x0, x0, #0x1
    fffc:	str	x0, [x20]
   10000:	cbz	x0, 10148 <PyNumber_FloorDivide@plt+0xb518>
   10004:	ldr	x0, [x25]
   10008:	sub	x0, x0, #0x1
   1000c:	str	x0, [x25]
   10010:	cbz	x0, 10160 <PyNumber_FloorDivide@plt+0xb530>
   10014:	mov	x0, x19
   10018:	ldp	x19, x20, [sp, #16]
   1001c:	ldp	x21, x22, [sp, #32]
   10020:	ldp	x23, x24, [sp, #48]
   10024:	ldp	x25, x26, [sp, #64]
   10028:	ldp	x29, x30, [sp], #80
   1002c:	ret
   10030:	mov	x0, x22
   10034:	mov	x19, #0x0                   	// #0
   10038:	bl	4830 <_Py_Dealloc@plt>
   1003c:	mov	x0, x19
   10040:	ldp	x19, x20, [sp, #16]
   10044:	ldp	x21, x22, [sp, #32]
   10048:	ldp	x23, x24, [sp, #48]
   1004c:	ldp	x25, x26, [sp, #64]
   10050:	ldp	x29, x30, [sp], #80
   10054:	ret
   10058:	mov	x0, x20
   1005c:	bl	4830 <_Py_Dealloc@plt>
   10060:	b	fe6c <PyNumber_FloorDivide@plt+0xb23c>
   10064:	ldr	x1, [x23, #4024]
   10068:	ldr	x0, [x1]
   1006c:	add	x0, x0, #0x1
   10070:	str	x0, [x1]
   10074:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10078:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1007c:	add	x1, x1, #0x6d0
   10080:	ldr	x0, [x0, #3968]
   10084:	ldr	x0, [x0]
   10088:	bl	48a0 <PyErr_SetString@plt>
   1008c:	ldr	x20, [x23, #4024]
   10090:	b	fe4c <PyNumber_FloorDivide@plt+0xb21c>
   10094:	mov	x0, x25
   10098:	bl	4830 <_Py_Dealloc@plt>
   1009c:	ldr	x0, [x21]
   100a0:	sub	x0, x0, #0x1
   100a4:	str	x0, [x21]
   100a8:	cbnz	x0, fe84 <PyNumber_FloorDivide@plt+0xb254>
   100ac:	nop
   100b0:	mov	x0, x21
   100b4:	bl	4830 <_Py_Dealloc@plt>
   100b8:	b	fe80 <PyNumber_FloorDivide@plt+0xb250>
   100bc:	mov	x0, x20
   100c0:	bl	4830 <_Py_Dealloc@plt>
   100c4:	b	ff78 <PyNumber_FloorDivide@plt+0xb348>
   100c8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   100cc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   100d0:	mov	x19, #0x0                   	// #0
   100d4:	add	x1, x1, #0x560
   100d8:	ldr	x0, [x0, #3976]
   100dc:	ldr	x0, [x0]
   100e0:	bl	48a0 <PyErr_SetString@plt>
   100e4:	b	fea4 <PyNumber_FloorDivide@plt+0xb274>
   100e8:	ldp	x21, x22, [sp, #32]
   100ec:	ldp	x25, x26, [sp, #64]
   100f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   100f4:	mov	x19, #0x0                   	// #0
   100f8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   100fc:	ldr	x0, [x0, #3968]
   10100:	add	x1, x1, #0x588
   10104:	ldr	x0, [x0]
   10108:	bl	48a0 <PyErr_SetString@plt>
   1010c:	mov	x0, x19
   10110:	ldp	x19, x20, [sp, #16]
   10114:	ldp	x23, x24, [sp, #48]
   10118:	ldp	x29, x30, [sp], #80
   1011c:	ret
   10120:	ldr	x1, [x25]
   10124:	mov	x22, #0x0                   	// #0
   10128:	sub	x1, x1, #0x1
   1012c:	str	x1, [x25]
   10130:	cbnz	x1, fe5c <PyNumber_FloorDivide@plt+0xb22c>
   10134:	mov	x0, x25
   10138:	bl	4830 <_Py_Dealloc@plt>
   1013c:	b	fe5c <PyNumber_FloorDivide@plt+0xb22c>
   10140:	ldp	x21, x22, [sp, #32]
   10144:	b	fef4 <PyNumber_FloorDivide@plt+0xb2c4>
   10148:	mov	x0, x20
   1014c:	bl	4830 <_Py_Dealloc@plt>
   10150:	b	10004 <PyNumber_FloorDivide@plt+0xb3d4>
   10154:	mov	x0, x21
   10158:	bl	4830 <_Py_Dealloc@plt>
   1015c:	b	fff4 <PyNumber_FloorDivide@plt+0xb3c4>
   10160:	mov	x0, x25
   10164:	bl	4830 <_Py_Dealloc@plt>
   10168:	ldp	x21, x22, [sp, #32]
   1016c:	ldp	x23, x24, [sp, #48]
   10170:	ldp	x25, x26, [sp, #64]
   10174:	b	fea4 <PyNumber_FloorDivide@plt+0xb274>
   10178:	mov	x19, x22
   1017c:	b	ffe4 <PyNumber_FloorDivide@plt+0xb3b4>
   10180:	mov	x0, x22
   10184:	bl	4830 <_Py_Dealloc@plt>
   10188:	b	ffe0 <PyNumber_FloorDivide@plt+0xb3b0>
   1018c:	ldr	x0, [x25]
   10190:	sub	x0, x0, #0x1
   10194:	str	x0, [x25]
   10198:	cbz	x0, 10094 <PyNumber_FloorDivide@plt+0xb464>
   1019c:	ldr	x0, [x21]
   101a0:	sub	x0, x0, #0x1
   101a4:	str	x0, [x21]
   101a8:	cbnz	x0, fe84 <PyNumber_FloorDivide@plt+0xb254>
   101ac:	b	100b0 <PyNumber_FloorDivide@plt+0xb480>
   101b0:	ldp	x21, x22, [sp, #32]
   101b4:	b	fec8 <PyNumber_FloorDivide@plt+0xb298>
   101b8:	ldp	x21, x22, [sp, #32]
   101bc:	b	fed8 <PyNumber_FloorDivide@plt+0xb2a8>
   101c0:	stp	x29, x30, [sp, #-64]!
   101c4:	mov	x29, sp
   101c8:	stp	x19, x20, [sp, #16]
   101cc:	ldr	x20, [x0, #16]
   101d0:	cmn	x20, #0x1
   101d4:	b.eq	101e8 <PyNumber_FloorDivide@plt+0xb5b8>  // b.none
   101d8:	mov	x0, x20
   101dc:	ldp	x19, x20, [sp, #16]
   101e0:	ldp	x29, x30, [sp], #64
   101e4:	ret
   101e8:	stp	x21, x22, [sp, #32]
   101ec:	mov	x19, x0
   101f0:	str	x23, [sp, #48]
   101f4:	ldrb	w0, [x0, #31]
   101f8:	ldrb	w4, [x19, #24]
   101fc:	cbz	w0, 10248 <PyNumber_FloorDivide@plt+0xb618>
   10200:	ldrb	w1, [x19, #29]
   10204:	ldrb	w3, [x19, #28]
   10208:	ldrb	w2, [x19, #30]
   1020c:	lsl	w1, w1, #8
   10210:	ldrb	w0, [x19, #25]
   10214:	orr	w3, w1, w3, lsl #16
   10218:	ldrb	w1, [x19, #26]
   1021c:	orr	w3, w3, w2
   10220:	ldrb	w2, [x19, #27]
   10224:	cbz	w4, 1038c <PyNumber_FloorDivide@plt+0xb75c>
   10228:	ldr	x4, [x19, #32]
   1022c:	mov	w5, #0x0                   	// #0
   10230:	ldr	x6, [x19, #8]
   10234:	bl	7de8 <PyNumber_FloorDivide@plt+0x31b8>
   10238:	mov	x23, x0
   1023c:	cbz	x0, 103a4 <PyNumber_FloorDivide@plt+0xb774>
   10240:	ldrb	w4, [x0, #24]
   10244:	b	10258 <PyNumber_FloorDivide@plt+0xb628>
   10248:	ldr	x0, [x19]
   1024c:	mov	x23, x19
   10250:	add	x0, x0, #0x1
   10254:	str	x0, [x19]
   10258:	adrp	x22, 28000 <PyInit__datetime@@Base+0x14f90>
   1025c:	ldr	x0, [x22, #4024]
   10260:	cbz	w4, 10268 <PyNumber_FloorDivide@plt+0xb638>
   10264:	ldr	x0, [x23, #32]
   10268:	ldr	x1, [x22, #4024]
   1026c:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   10270:	mov	x21, x0
   10274:	ldr	x1, [x23]
   10278:	sub	x0, x1, #0x1
   1027c:	str	x0, [x23]
   10280:	cbz	x0, 10354 <PyNumber_FloorDivide@plt+0xb724>
   10284:	cbz	x21, 103a4 <PyNumber_FloorDivide@plt+0xb774>
   10288:	ldr	x22, [x22, #4024]
   1028c:	cmp	x21, x22
   10290:	b.eq	10378 <PyNumber_FloorDivide@plt+0xb748>  // b.none
   10294:	ldrb	w1, [x19, #26]
   10298:	mov	w7, #0xe10                 	// #3600
   1029c:	ldrb	w6, [x19, #25]
   102a0:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
   102a4:	ldrb	w3, [x19, #29]
   102a8:	add	x4, x4, #0x2a8
   102ac:	lsl	w5, w1, #4
   102b0:	ldrb	w0, [x19, #28]
   102b4:	sub	w5, w5, w1
   102b8:	ldrb	w2, [x19, #30]
   102bc:	ldrb	w1, [x19, #27]
   102c0:	lsl	w3, w3, #8
   102c4:	lsl	w5, w5, #2
   102c8:	orr	w0, w3, w0, lsl #16
   102cc:	orr	w2, w0, w2
   102d0:	mov	w3, #0x1                   	// #1
   102d4:	mov	w0, #0x0                   	// #0
   102d8:	madd	w5, w6, w7, w5
   102dc:	add	w1, w5, w1
   102e0:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
   102e4:	mov	x23, x0
   102e8:	cbz	x0, 103b0 <PyNumber_FloorDivide@plt+0xb780>
   102ec:	mov	x1, x21
   102f0:	bl	fbd8 <PyNumber_FloorDivide@plt+0xafa8>
   102f4:	ldr	x1, [x23]
   102f8:	mov	x22, x0
   102fc:	sub	x0, x1, #0x1
   10300:	str	x0, [x23]
   10304:	cbz	x0, 10360 <PyNumber_FloorDivide@plt+0xb730>
   10308:	cbz	x22, 103b0 <PyNumber_FloorDivide@plt+0xb780>
   1030c:	mov	x0, x22
   10310:	bl	4a80 <PyObject_Hash@plt>
   10314:	str	x0, [x19, #16]
   10318:	ldr	x0, [x22]
   1031c:	sub	x0, x0, #0x1
   10320:	str	x0, [x22]
   10324:	cbz	x0, 10398 <PyNumber_FloorDivide@plt+0xb768>
   10328:	ldr	x0, [x21]
   1032c:	sub	x0, x0, #0x1
   10330:	str	x0, [x21]
   10334:	cbz	x0, 1036c <PyNumber_FloorDivide@plt+0xb73c>
   10338:	ldr	x20, [x19, #16]
   1033c:	ldp	x21, x22, [sp, #32]
   10340:	mov	x0, x20
   10344:	ldp	x19, x20, [sp, #16]
   10348:	ldr	x23, [sp, #48]
   1034c:	ldp	x29, x30, [sp], #64
   10350:	ret
   10354:	mov	x0, x23
   10358:	bl	4830 <_Py_Dealloc@plt>
   1035c:	b	10284 <PyNumber_FloorDivide@plt+0xb654>
   10360:	mov	x0, x23
   10364:	bl	4830 <_Py_Dealloc@plt>
   10368:	b	10308 <PyNumber_FloorDivide@plt+0xb6d8>
   1036c:	mov	x0, x21
   10370:	bl	4830 <_Py_Dealloc@plt>
   10374:	b	10338 <PyNumber_FloorDivide@plt+0xb708>
   10378:	add	x0, x19, #0x19
   1037c:	mov	x1, #0x6                   	// #6
   10380:	bl	48d0 <_Py_HashBytes@plt>
   10384:	str	x0, [x19, #16]
   10388:	b	10328 <PyNumber_FloorDivide@plt+0xb6f8>
   1038c:	adrp	x22, 28000 <PyInit__datetime@@Base+0x14f90>
   10390:	ldr	x4, [x22, #4024]
   10394:	b	1022c <PyNumber_FloorDivide@plt+0xb5fc>
   10398:	mov	x0, x22
   1039c:	bl	4830 <_Py_Dealloc@plt>
   103a0:	b	10328 <PyNumber_FloorDivide@plt+0xb6f8>
   103a4:	ldp	x21, x22, [sp, #32]
   103a8:	ldr	x23, [sp, #48]
   103ac:	b	101d8 <PyNumber_FloorDivide@plt+0xb5a8>
   103b0:	ldr	x0, [x21]
   103b4:	sub	x0, x0, #0x1
   103b8:	str	x0, [x21]
   103bc:	cbnz	x0, 103a4 <PyNumber_FloorDivide@plt+0xb774>
   103c0:	mov	x0, x21
   103c4:	bl	4830 <_Py_Dealloc@plt>
   103c8:	ldp	x21, x22, [sp, #32]
   103cc:	ldr	x23, [sp, #48]
   103d0:	b	101d8 <PyNumber_FloorDivide@plt+0xb5a8>
   103d4:	nop
   103d8:	stp	x29, x30, [sp, #-48]!
   103dc:	mov	x29, sp
   103e0:	stp	x19, x20, [sp, #16]
   103e4:	mov	x19, x0
   103e8:	mov	x20, x1
   103ec:	ldr	x0, [x0, #8]
   103f0:	stp	x21, x22, [sp, #32]
   103f4:	adrp	x21, 29000 <PyInit__datetime@@Base+0x15f90>
   103f8:	add	x2, x21, #0x2a8
   103fc:	cmp	x0, x2
   10400:	b.eq	10438 <PyNumber_FloorDivide@plt+0xb808>  // b.none
   10404:	mov	x1, x2
   10408:	bl	4b60 <PyType_IsSubtype@plt>
   1040c:	cbnz	w0, 10438 <PyNumber_FloorDivide@plt+0xb808>
   10410:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10414:	ldr	x1, [x1, #3960]
   10418:	mov	x0, x1
   1041c:	ldr	x2, [x1]
   10420:	add	x2, x2, #0x1
   10424:	str	x2, [x1]
   10428:	ldp	x19, x20, [sp, #16]
   1042c:	ldp	x21, x22, [sp, #32]
   10430:	ldp	x29, x30, [sp], #48
   10434:	ret
   10438:	ldr	x0, [x20, #8]
   1043c:	add	x1, x21, #0x2a8
   10440:	cmp	x0, x1
   10444:	b.eq	10450 <PyNumber_FloorDivide@plt+0xb820>  // b.none
   10448:	bl	4b60 <PyType_IsSubtype@plt>
   1044c:	cbz	w0, 10410 <PyNumber_FloorDivide@plt+0xb7e0>
   10450:	ldr	w22, [x19, #32]
   10454:	mov	w0, #0x423f                	// #16959
   10458:	ldr	w3, [x20, #32]
   1045c:	movk	w0, #0xf, lsl #16
   10460:	ldr	w1, [x19, #24]
   10464:	add	w22, w22, w3
   10468:	ldr	w19, [x19, #28]
   1046c:	ldr	w2, [x20, #24]
   10470:	cmp	w22, w0
   10474:	ldr	w0, [x20, #28]
   10478:	add	w20, w1, w2
   1047c:	add	w19, w19, w0
   10480:	b.ls	104ac <PyNumber_FloorDivide@plt+0xb87c>  // b.plast
   10484:	mov	w0, #0xde83                	// #56963
   10488:	mov	w1, #0x4240                	// #16960
   1048c:	movk	w0, #0x431b, lsl #16
   10490:	movk	w1, #0xf, lsl #16
   10494:	smull	x0, w22, w0
   10498:	asr	x0, x0, #50
   1049c:	sub	w0, w0, w22, asr #31
   104a0:	msub	w22, w0, w1, w22
   104a4:	tbnz	w22, #31, 10558 <PyNumber_FloorDivide@plt+0xb928>
   104a8:	add	w19, w19, w0
   104ac:	mov	w0, #0x517f                	// #20863
   104b0:	movk	w0, #0x1, lsl #16
   104b4:	cmp	w19, w0
   104b8:	b.ls	104ec <PyNumber_FloorDivide@plt+0xb8bc>  // b.plast
   104bc:	mov	w0, #0x4507                	// #17671
   104c0:	mov	w1, #0x5180                	// #20864
   104c4:	movk	w0, #0xc22e, lsl #16
   104c8:	movk	w1, #0x1, lsl #16
   104cc:	smull	x0, w19, w0
   104d0:	lsr	x0, x0, #32
   104d4:	add	w0, w19, w0
   104d8:	asr	w0, w0, #16
   104dc:	sub	w0, w0, w19, asr #31
   104e0:	msub	w19, w0, w1, w19
   104e4:	tbnz	w19, #31, 1054c <PyNumber_FloorDivide@plt+0xb91c>
   104e8:	add	w20, w20, w0
   104ec:	mov	w3, #0xc9ff                	// #51711
   104f0:	mov	w0, #0x93fe                	// #37886
   104f4:	movk	w3, #0x3b9a, lsl #16
   104f8:	add	w1, w20, w3
   104fc:	movk	w0, #0x7735, lsl #16
   10500:	cmp	w1, w0
   10504:	b.hi	10564 <PyNumber_FloorDivide@plt+0xb934>  // b.pmore
   10508:	add	x0, x21, #0x2a8
   1050c:	mov	x1, #0x0                   	// #0
   10510:	ldr	x2, [x0, #304]
   10514:	blr	x2
   10518:	cbz	x0, 10428 <PyNumber_FloorDivide@plt+0xb7f8>
   1051c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10520:	mov	x2, #0xffffffffffffffff    	// #-1
   10524:	str	x2, [x0, #16]
   10528:	ldr	x2, [x1, #3960]
   1052c:	stp	w20, w19, [x0, #24]
   10530:	str	w22, [x0, #32]
   10534:	cmp	x0, x2
   10538:	b.eq	10414 <PyNumber_FloorDivide@plt+0xb7e4>  // b.none
   1053c:	ldp	x19, x20, [sp, #16]
   10540:	ldp	x21, x22, [sp, #32]
   10544:	ldp	x29, x30, [sp], #48
   10548:	ret
   1054c:	sub	w0, w0, #0x1
   10550:	add	w19, w19, w1
   10554:	b	104e8 <PyNumber_FloorDivide@plt+0xb8b8>
   10558:	sub	w0, w0, #0x1
   1055c:	add	w22, w22, w1
   10560:	b	104a8 <PyNumber_FloorDivide@plt+0xb878>
   10564:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10568:	mov	w2, w20
   1056c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   10570:	add	x1, x1, #0xa50
   10574:	ldr	x0, [x0, #4008]
   10578:	ldr	x0, [x0]
   1057c:	bl	4b90 <PyErr_Format@plt>
   10580:	mov	x0, #0x0                   	// #0
   10584:	b	10428 <PyNumber_FloorDivide@plt+0xb7f8>
   10588:	sub	sp, sp, #0xd0
   1058c:	stp	x29, x30, [sp, #16]
   10590:	add	x29, sp, #0x10
   10594:	stp	x19, x20, [sp, #32]
   10598:	mov	x19, x0
   1059c:	bl	4810 <_PyTime_GetSystemClock@plt>
   105a0:	add	x2, sp, #0x8c
   105a4:	add	x1, sp, #0x90
   105a8:	mov	w3, #0x0                   	// #0
   105ac:	bl	4860 <_PyTime_AsTimevalTime_t@plt>
   105b0:	tbnz	w0, #31, 10684 <PyNumber_FloorDivide@plt+0xba54>
   105b4:	stp	x23, x24, [sp, #64]
   105b8:	add	x1, sp, #0x98
   105bc:	ldr	x23, [sp, #144]
   105c0:	stp	x21, x22, [sp, #48]
   105c4:	ldr	w21, [sp, #140]
   105c8:	mov	x0, x23
   105cc:	bl	49f0 <_PyTime_gmtime@plt>
   105d0:	mov	w20, w0
   105d4:	cbnz	w0, 106ec <PyNumber_FloorDivide@plt+0xbabc>
   105d8:	adrp	x2, 28000 <PyInit__datetime@@Base+0x14f90>
   105dc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   105e0:	ldp	w5, w4, [sp, #152]
   105e4:	stp	x25, x26, [sp, #80]
   105e8:	mov	w22, #0x3b                  	// #59
   105ec:	ldp	w24, w6, [sp, #168]
   105f0:	stp	x27, x28, [sp, #96]
   105f4:	cmp	w5, w22
   105f8:	ldr	x2, [x2, #4016]
   105fc:	csel	w22, w5, w22, le
   10600:	ldr	x0, [x0, #4064]
   10604:	add	w24, w24, #0x1
   10608:	ldp	w26, w25, [sp, #160]
   1060c:	cmp	x2, x0
   10610:	add	w28, w6, #0x76c
   10614:	b.eq	10708 <PyNumber_FloorDivide@plt+0xbad8>  // b.none
   10618:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   1061c:	add	x1, x1, #0x2a8
   10620:	add	x1, x1, #0x1a0
   10624:	cmp	x19, x1
   10628:	b.eq	10698 <PyNumber_FloorDivide@plt+0xba68>  // b.none
   1062c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10630:	str	w21, [sp]
   10634:	mov	w7, w22
   10638:	mov	w6, w4
   1063c:	ldr	x0, [x0, #4024]
   10640:	str	x0, [sp, #8]
   10644:	mov	w5, w26
   10648:	mov	w4, w25
   1064c:	mov	w3, w24
   10650:	mov	w2, w28
   10654:	mov	x0, x19
   10658:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1065c:	add	x1, x1, #0x348
   10660:	bl	4970 <PyObject_CallFunction@plt>
   10664:	ldp	x29, x30, [sp, #16]
   10668:	ldp	x19, x20, [sp, #32]
   1066c:	ldp	x21, x22, [sp, #48]
   10670:	ldp	x23, x24, [sp, #64]
   10674:	ldp	x25, x26, [sp, #80]
   10678:	ldp	x27, x28, [sp, #96]
   1067c:	add	sp, sp, #0xd0
   10680:	ret
   10684:	mov	x0, #0x0                   	// #0
   10688:	ldp	x29, x30, [sp, #16]
   1068c:	ldp	x19, x20, [sp, #32]
   10690:	add	sp, sp, #0xd0
   10694:	ret
   10698:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
   1069c:	str	w20, [sp]
   106a0:	str	x19, [sp, #8]
   106a4:	mov	w6, w21
   106a8:	ldr	x7, [x7, #4024]
   106ac:	mov	w5, w22
   106b0:	mov	w3, w26
   106b4:	mov	w2, w25
   106b8:	mov	w1, w24
   106bc:	mov	w0, w28
   106c0:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   106c4:	ldp	x29, x30, [sp, #16]
   106c8:	ldp	x19, x20, [sp, #32]
   106cc:	ldp	x21, x22, [sp, #48]
   106d0:	ldp	x23, x24, [sp, #64]
   106d4:	ldp	x25, x26, [sp, #80]
   106d8:	ldp	x27, x28, [sp, #96]
   106dc:	add	sp, sp, #0xd0
   106e0:	ret
   106e4:	ldp	x25, x26, [sp, #80]
   106e8:	ldp	x27, x28, [sp, #96]
   106ec:	mov	x0, #0x0                   	// #0
   106f0:	ldp	x29, x30, [sp, #16]
   106f4:	ldp	x19, x20, [sp, #32]
   106f8:	ldp	x21, x22, [sp, #48]
   106fc:	ldp	x23, x24, [sp, #64]
   10700:	add	sp, sp, #0xd0
   10704:	ret
   10708:	add	w6, w6, #0x76b
   1070c:	mov	w0, #0x270e                	// #9998
   10710:	cmp	w6, w0
   10714:	b.hi	10834 <PyNumber_FloorDivide@plt+0xbc04>  // b.pmore
   10718:	mov	w0, #0x851f                	// #34079
   1071c:	asr	w2, w6, #2
   10720:	movk	w0, #0x51eb, lsl #16
   10724:	mov	w3, #0x16d                 	// #365
   10728:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   1072c:	add	x1, x1, #0x810
   10730:	smull	x0, w6, w0
   10734:	cmp	w24, #0x2
   10738:	madd	w6, w6, w3, w2
   1073c:	ldr	w1, [x1, w24, sxtw #2]
   10740:	asr	x2, x0, #37
   10744:	asr	x0, x0, #39
   10748:	sub	w0, w0, w2
   1074c:	add	w6, w0, w6
   10750:	b.le	1075c <PyNumber_FloorDivide@plt+0xbb2c>
   10754:	tst	x28, #0x3
   10758:	b.eq	107f8 <PyNumber_FloorDivide@plt+0xbbc8>  // b.none
   1075c:	add	w1, w25, w1
   10760:	sxtw	x0, w26
   10764:	add	w6, w1, w6
   10768:	mov	w2, #0x18                  	// #24
   1076c:	sxtw	x1, w4
   10770:	sxtw	x27, w22
   10774:	smaddl	x6, w6, w2, x0
   10778:	lsl	x0, x6, #4
   1077c:	sub	x0, x0, x6
   10780:	add	x6, x1, x0, lsl #2
   10784:	lsl	x0, x6, #4
   10788:	sub	x6, x0, x6
   1078c:	add	x27, x27, x6, lsl #2
   10790:	mov	x0, #0xf700                	// #63232
   10794:	str	w4, [sp, #124]
   10798:	movk	x0, #0x7791, lsl #16
   1079c:	movk	x0, #0xe, lsl #32
   107a0:	add	x0, x23, x0
   107a4:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
   107a8:	cmn	x0, #0x1
   107ac:	b.eq	106e4 <PyNumber_FloorDivide@plt+0xbab4>  // b.none
   107b0:	sub	x1, x27, #0x15, lsl #12
   107b4:	ldr	w4, [sp, #124]
   107b8:	sub	x1, x1, #0x180
   107bc:	subs	x0, x1, x0
   107c0:	b.pl	10618 <PyNumber_FloorDivide@plt+0xb9e8>  // b.nfrst
   107c4:	mov	x1, #0x4880                	// #18560
   107c8:	str	w4, [sp, #124]
   107cc:	movk	x1, #0x7793, lsl #16
   107d0:	movk	x1, #0xe, lsl #32
   107d4:	add	x23, x23, x1
   107d8:	add	x0, x23, x0
   107dc:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
   107e0:	cmn	x0, #0x1
   107e4:	b.eq	106e4 <PyNumber_FloorDivide@plt+0xbab4>  // b.none
   107e8:	cmp	x0, x27
   107ec:	ldr	w4, [sp, #124]
   107f0:	cset	w20, eq  // eq = none
   107f4:	b	10618 <PyNumber_FloorDivide@plt+0xb9e8>
   107f8:	mov	w0, #0x5c29                	// #23593
   107fc:	mov	w2, #0x5c28                	// #23592
   10800:	movk	w0, #0xc28f, lsl #16
   10804:	movk	w2, #0x28f, lsl #16
   10808:	mul	w0, w28, w0
   1080c:	ror	w3, w0, #2
   10810:	cmp	w3, w2
   10814:	b.hi	1082c <PyNumber_FloorDivide@plt+0xbbfc>  // b.pmore
   10818:	mov	w2, #0xd70a                	// #55050
   1081c:	ror	w0, w0, #4
   10820:	movk	w2, #0xa3, lsl #16
   10824:	cmp	w0, w2
   10828:	b.hi	1075c <PyNumber_FloorDivide@plt+0xbb2c>  // b.pmore
   1082c:	add	w1, w1, #0x1
   10830:	b	1075c <PyNumber_FloorDivide@plt+0xbb2c>
   10834:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10838:	mov	w2, w28
   1083c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   10840:	add	x1, x1, #0xdd8
   10844:	ldr	x0, [x0, #3968]
   10848:	str	w4, [sp, #124]
   1084c:	mov	x27, #0xffffffffffffffff    	// #-1
   10850:	ldr	x0, [x0]
   10854:	bl	4b90 <PyErr_Format@plt>
   10858:	ldr	w4, [sp, #124]
   1085c:	b	10790 <PyNumber_FloorDivide@plt+0xbb60>
   10860:	stp	x29, x30, [sp, #-64]!
   10864:	mov	x29, sp
   10868:	stp	x19, x20, [sp, #16]
   1086c:	mov	x20, x0
   10870:	mov	x19, x1
   10874:	ldr	x0, [x0, #8]
   10878:	stp	x21, x22, [sp, #32]
   1087c:	adrp	x22, 29000 <PyInit__datetime@@Base+0x15f90>
   10880:	add	x2, x22, #0x2a8
   10884:	add	x2, x2, #0x1a0
   10888:	cmp	x0, x2
   1088c:	b.eq	108c8 <PyNumber_FloorDivide@plt+0xbc98>  // b.none
   10890:	mov	x1, x2
   10894:	bl	4b60 <PyType_IsSubtype@plt>
   10898:	cbnz	w0, 108c8 <PyNumber_FloorDivide@plt+0xbc98>
   1089c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   108a0:	ldr	x0, [x0, #3960]
   108a4:	mov	x21, x0
   108a8:	ldr	x1, [x0]
   108ac:	add	x1, x1, #0x1
   108b0:	str	x1, [x0]
   108b4:	mov	x0, x21
   108b8:	ldp	x19, x20, [sp, #16]
   108bc:	ldp	x21, x22, [sp, #32]
   108c0:	ldp	x29, x30, [sp], #64
   108c4:	ret
   108c8:	ldr	x0, [x19, #8]
   108cc:	add	x21, x22, #0x2a8
   108d0:	add	x1, x21, #0x1a0
   108d4:	cmp	x0, x1
   108d8:	b.eq	10934 <PyNumber_FloorDivide@plt+0xbd04>  // b.none
   108dc:	bl	4b60 <PyType_IsSubtype@plt>
   108e0:	cbnz	w0, 10934 <PyNumber_FloorDivide@plt+0xbd04>
   108e4:	ldr	x0, [x19, #8]
   108e8:	cmp	x0, x21
   108ec:	b.eq	108fc <PyNumber_FloorDivide@plt+0xbccc>  // b.none
   108f0:	mov	x1, x21
   108f4:	bl	4b60 <PyType_IsSubtype@plt>
   108f8:	cbz	w0, 1089c <PyNumber_FloorDivide@plt+0xbc6c>
   108fc:	mov	x1, x19
   10900:	mov	x0, x20
   10904:	mov	w2, #0xffffffff            	// #-1
   10908:	bl	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
   1090c:	mov	x21, x0
   10910:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10914:	ldr	x1, [x0, #3960]
   10918:	cmp	x21, x1
   1091c:	b.eq	108a0 <PyNumber_FloorDivide@plt+0xbc70>  // b.none
   10920:	mov	x0, x21
   10924:	ldp	x19, x20, [sp, #16]
   10928:	ldp	x21, x22, [sp, #32]
   1092c:	ldp	x29, x30, [sp], #64
   10930:	ret
   10934:	stp	x23, x24, [sp, #48]
   10938:	ldrb	w0, [x20, #24]
   1093c:	ldrb	w1, [x19, #24]
   10940:	cbz	w0, 10bf4 <PyNumber_FloorDivide@plt+0xbfc4>
   10944:	ldr	x0, [x20, #40]
   10948:	cbnz	w1, 10c10 <PyNumber_FloorDivide@plt+0xbfe0>
   1094c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10950:	ldr	x2, [x1, #4024]
   10954:	cmp	x0, x2
   10958:	b.eq	10c20 <PyNumber_FloorDivide@plt+0xbff0>  // b.none
   1095c:	mov	x1, x20
   10960:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   10964:	mov	x23, x0
   10968:	cbz	x0, 10cf0 <PyNumber_FloorDivide@plt+0xc0c0>
   1096c:	ldrb	w0, [x19, #24]
   10970:	cbz	w0, 10c94 <PyNumber_FloorDivide@plt+0xc064>
   10974:	ldr	x0, [x19, #40]
   10978:	mov	x1, x19
   1097c:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   10980:	mov	x21, x0
   10984:	cbz	x0, 10d58 <PyNumber_FloorDivide@plt+0xc128>
   10988:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   1098c:	ldr	x0, [x0, #4024]
   10990:	cmp	x23, x0
   10994:	cset	w1, ne  // ne = any
   10998:	cmp	x21, x0
   1099c:	cset	w0, ne  // ne = any
   109a0:	cmp	w1, w0
   109a4:	b.ne	10d18 <PyNumber_FloorDivide@plt+0xc0e8>  // b.any
   109a8:	cmp	x23, x21
   109ac:	b.eq	10d78 <PyNumber_FloorDivide@plt+0xc148>  // b.none
   109b0:	ldr	w0, [x21, #24]
   109b4:	ldr	w1, [x23, #24]
   109b8:	cmp	w1, w0
   109bc:	b.eq	10ca0 <PyNumber_FloorDivide@plt+0xc070>  // b.none
   109c0:	mov	x1, x21
   109c4:	mov	x0, x23
   109c8:	bl	fbd8 <PyNumber_FloorDivide@plt+0xafa8>
   109cc:	mov	x24, x0
   109d0:	ldr	x0, [x23]
   109d4:	cbz	x24, 10ccc <PyNumber_FloorDivide@plt+0xc09c>
   109d8:	sub	x0, x0, #0x1
   109dc:	str	x0, [x23]
   109e0:	cbz	x0, 10c48 <PyNumber_FloorDivide@plt+0xc018>
   109e4:	ldr	x0, [x21]
   109e8:	sub	x0, x0, #0x1
   109ec:	str	x0, [x21]
   109f0:	cbz	x0, 10c60 <PyNumber_FloorDivide@plt+0xc030>
   109f4:	ldurh	w2, [x20, #25]
   109f8:	mov	w4, #0x851f                	// #34079
   109fc:	movk	w4, #0x51eb, lsl #16
   10a00:	ldrb	w0, [x20, #27]
   10a04:	rev16	w2, w2
   10a08:	adrp	x8, 15000 <PyInit__datetime@@Base+0x1f90>
   10a0c:	and	w2, w2, #0xffff
   10a10:	add	x5, x8, #0x810
   10a14:	subs	w3, w2, #0x1
   10a18:	add	w7, w2, #0x2
   10a1c:	csel	w7, w7, w3, mi  // mi = first
   10a20:	mov	w6, #0x16d                 	// #365
   10a24:	cmp	w0, #0x2
   10a28:	ldr	w0, [x5, w0, sxtw #2]
   10a2c:	smull	x4, w3, w4
   10a30:	asr	w7, w7, #2
   10a34:	ldrb	w1, [x20, #28]
   10a38:	asr	x5, x4, #37
   10a3c:	asr	x4, x4, #39
   10a40:	madd	w6, w3, w6, w7
   10a44:	sub	w5, w4, w5
   10a48:	b.le	10a88 <PyNumber_FloorDivide@plt+0xbe58>
   10a4c:	tst	x2, #0x3
   10a50:	b.ne	10a88 <PyNumber_FloorDivide@plt+0xbe58>  // b.any
   10a54:	mov	w4, #0x5c29                	// #23593
   10a58:	mov	w3, #0x5c28                	// #23592
   10a5c:	movk	w4, #0xc28f, lsl #16
   10a60:	movk	w3, #0x28f, lsl #16
   10a64:	mul	w2, w2, w4
   10a68:	ror	w4, w2, #2
   10a6c:	cmp	w4, w3
   10a70:	b.hi	10c84 <PyNumber_FloorDivide@plt+0xc054>  // b.pmore
   10a74:	mov	w3, #0xd70a                	// #55050
   10a78:	ror	w2, w2, #4
   10a7c:	movk	w3, #0xa3, lsl #16
   10a80:	cmp	w2, w3
   10a84:	b.ls	10c84 <PyNumber_FloorDivide@plt+0xc054>  // b.plast
   10a88:	ldurh	w2, [x19, #25]
   10a8c:	mov	w4, #0x851f                	// #34079
   10a90:	movk	w4, #0x51eb, lsl #16
   10a94:	ldrb	w10, [x19, #27]
   10a98:	rev16	w2, w2
   10a9c:	add	x8, x8, #0x810
   10aa0:	and	w2, w2, #0xffff
   10aa4:	mov	w11, #0x16d                 	// #365
   10aa8:	subs	w9, w2, #0x1
   10aac:	add	w7, w2, #0x2
   10ab0:	csel	w7, w7, w9, mi  // mi = first
   10ab4:	ldr	w8, [x8, w10, sxtw #2]
   10ab8:	cmp	w10, #0x2
   10abc:	ldrb	w3, [x19, #28]
   10ac0:	smull	x4, w9, w4
   10ac4:	asr	w7, w7, #2
   10ac8:	asr	x10, x4, #37
   10acc:	asr	x4, x4, #39
   10ad0:	madd	w9, w9, w11, w7
   10ad4:	sub	w4, w4, w10
   10ad8:	b.le	10b18 <PyNumber_FloorDivide@plt+0xbee8>
   10adc:	tst	x2, #0x3
   10ae0:	b.ne	10b18 <PyNumber_FloorDivide@plt+0xbee8>  // b.any
   10ae4:	mov	w10, #0x5c29                	// #23593
   10ae8:	mov	w7, #0x5c28                	// #23592
   10aec:	movk	w10, #0xc28f, lsl #16
   10af0:	movk	w7, #0x28f, lsl #16
   10af4:	mul	w2, w2, w10
   10af8:	ror	w10, w2, #2
   10afc:	cmp	w10, w7
   10b00:	b.hi	10c8c <PyNumber_FloorDivide@plt+0xc05c>  // b.pmore
   10b04:	mov	w7, #0xd70a                	// #55050
   10b08:	ror	w2, w2, #4
   10b0c:	movk	w7, #0xa3, lsl #16
   10b10:	cmp	w2, w7
   10b14:	b.ls	10c8c <PyNumber_FloorDivide@plt+0xc05c>  // b.plast
   10b18:	ldrb	w10, [x20, #30]
   10b1c:	sub	w3, w1, w3
   10b20:	ldrb	w1, [x19, #30]
   10b24:	add	w3, w3, w6
   10b28:	ldrb	w7, [x20, #29]
   10b2c:	add	w3, w3, w5
   10b30:	sub	w10, w10, w1
   10b34:	ldrb	w6, [x19, #29]
   10b38:	ldrb	w11, [x20, #33]
   10b3c:	mov	w14, #0xe10                 	// #3600
   10b40:	lsl	w1, w10, #4
   10b44:	ldrb	w2, [x19, #33]
   10b48:	sub	w1, w1, w10
   10b4c:	sub	w7, w7, w6
   10b50:	ldrb	w6, [x20, #32]
   10b54:	lsl	w11, w11, #8
   10b58:	lsl	w1, w1, #2
   10b5c:	ldrb	w5, [x19, #32]
   10b60:	ldrb	w12, [x20, #34]
   10b64:	lsl	w2, w2, #8
   10b68:	ldrb	w10, [x20, #31]
   10b6c:	sub	w3, w3, w9
   10b70:	madd	w7, w7, w14, w1
   10b74:	ldrb	w13, [x19, #31]
   10b78:	ldrb	w9, [x19, #34]
   10b7c:	orr	w6, w11, w6, lsl #16
   10b80:	orr	w5, w2, w5, lsl #16
   10b84:	orr	w6, w6, w12
   10b88:	sub	w3, w3, w4
   10b8c:	sub	w0, w0, w8
   10b90:	sub	w1, w10, w13
   10b94:	orr	w2, w5, w9
   10b98:	add	w0, w3, w0
   10b9c:	add	x4, x22, #0x2a8
   10ba0:	add	w1, w7, w1
   10ba4:	sub	w2, w6, w2
   10ba8:	mov	w3, #0x1                   	// #1
   10bac:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
   10bb0:	mov	x21, x0
   10bb4:	cbz	x0, 10cf0 <PyNumber_FloorDivide@plt+0xc0c0>
   10bb8:	cbz	x24, 10bec <PyNumber_FloorDivide@plt+0xbfbc>
   10bbc:	mov	x1, x24
   10bc0:	bl	fbd8 <PyNumber_FloorDivide@plt+0xafa8>
   10bc4:	ldr	x1, [x21]
   10bc8:	mov	x19, x0
   10bcc:	sub	x1, x1, #0x1
   10bd0:	str	x1, [x21]
   10bd4:	cbz	x1, 10d0c <PyNumber_FloorDivide@plt+0xc0dc>
   10bd8:	ldr	x1, [x24]
   10bdc:	mov	x21, x19
   10be0:	sub	x0, x1, #0x1
   10be4:	str	x0, [x24]
   10be8:	cbz	x0, 10c74 <PyNumber_FloorDivide@plt+0xc044>
   10bec:	ldp	x23, x24, [sp, #48]
   10bf0:	b	10910 <PyNumber_FloorDivide@plt+0xbce0>
   10bf4:	cbz	w1, 10c6c <PyNumber_FloorDivide@plt+0xc03c>
   10bf8:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10bfc:	ldr	x2, [x19, #40]
   10c00:	ldr	x0, [x1, #4024]
   10c04:	cmp	x2, x0
   10c08:	b.ne	1095c <PyNumber_FloorDivide@plt+0xbd2c>  // b.any
   10c0c:	b	10c20 <PyNumber_FloorDivide@plt+0xbff0>
   10c10:	ldr	x2, [x19, #40]
   10c14:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10c18:	cmp	x0, x2
   10c1c:	b.ne	1095c <PyNumber_FloorDivide@plt+0xbd2c>  // b.any
   10c20:	ldr	x1, [x1, #4024]
   10c24:	mov	x24, #0x0                   	// #0
   10c28:	mov	x23, x1
   10c2c:	mov	x21, x1
   10c30:	ldr	x0, [x1]
   10c34:	add	x0, x0, #0x2
   10c38:	str	x0, [x1]
   10c3c:	sub	x0, x0, #0x1
   10c40:	str	x0, [x23]
   10c44:	cbnz	x0, 109e4 <PyNumber_FloorDivide@plt+0xbdb4>
   10c48:	mov	x0, x23
   10c4c:	bl	4830 <_Py_Dealloc@plt>
   10c50:	ldr	x0, [x21]
   10c54:	sub	x0, x0, #0x1
   10c58:	str	x0, [x21]
   10c5c:	cbnz	x0, 109f4 <PyNumber_FloorDivide@plt+0xbdc4>
   10c60:	mov	x0, x21
   10c64:	bl	4830 <_Py_Dealloc@plt>
   10c68:	b	109f4 <PyNumber_FloorDivide@plt+0xbdc4>
   10c6c:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10c70:	b	10c20 <PyNumber_FloorDivide@plt+0xbff0>
   10c74:	mov	x0, x24
   10c78:	bl	4830 <_Py_Dealloc@plt>
   10c7c:	ldp	x23, x24, [sp, #48]
   10c80:	b	10910 <PyNumber_FloorDivide@plt+0xbce0>
   10c84:	add	w0, w0, #0x1
   10c88:	b	10a88 <PyNumber_FloorDivide@plt+0xbe58>
   10c8c:	add	w8, w8, #0x1
   10c90:	b	10b18 <PyNumber_FloorDivide@plt+0xbee8>
   10c94:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10c98:	ldr	x0, [x0, #4024]
   10c9c:	b	10978 <PyNumber_FloorDivide@plt+0xbd48>
   10ca0:	ldr	w0, [x21, #28]
   10ca4:	ldr	w1, [x23, #28]
   10ca8:	cmp	w1, w0
   10cac:	b.ne	109c0 <PyNumber_FloorDivide@plt+0xbd90>  // b.any
   10cb0:	ldr	w0, [x21, #32]
   10cb4:	ldr	w1, [x23, #32]
   10cb8:	cmp	w1, w0
   10cbc:	b.ne	109c0 <PyNumber_FloorDivide@plt+0xbd90>  // b.any
   10cc0:	mov	x24, #0x0                   	// #0
   10cc4:	ldr	x0, [x23]
   10cc8:	b	109d8 <PyNumber_FloorDivide@plt+0xbda8>
   10ccc:	sub	x0, x0, #0x1
   10cd0:	str	x0, [x23]
   10cd4:	cbnz	x0, 10ce0 <PyNumber_FloorDivide@plt+0xc0b0>
   10cd8:	mov	x0, x23
   10cdc:	bl	4830 <_Py_Dealloc@plt>
   10ce0:	ldr	x0, [x21]
   10ce4:	sub	x0, x0, #0x1
   10ce8:	str	x0, [x21]
   10cec:	cbz	x0, 10d44 <PyNumber_FloorDivide@plt+0xc114>
   10cf0:	mov	x21, #0x0                   	// #0
   10cf4:	mov	x0, x21
   10cf8:	ldp	x19, x20, [sp, #16]
   10cfc:	ldp	x21, x22, [sp, #32]
   10d00:	ldp	x23, x24, [sp, #48]
   10d04:	ldp	x29, x30, [sp], #64
   10d08:	ret
   10d0c:	mov	x0, x21
   10d10:	bl	4830 <_Py_Dealloc@plt>
   10d14:	b	10bd8 <PyNumber_FloorDivide@plt+0xbfa8>
   10d18:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   10d1c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   10d20:	add	x1, x1, #0x710
   10d24:	ldr	x0, [x0, #3976]
   10d28:	ldr	x0, [x0]
   10d2c:	bl	48a0 <PyErr_SetString@plt>
   10d30:	ldr	x0, [x23]
   10d34:	sub	x0, x0, #0x1
   10d38:	str	x0, [x23]
   10d3c:	cbnz	x0, 10ce0 <PyNumber_FloorDivide@plt+0xc0b0>
   10d40:	b	10cd8 <PyNumber_FloorDivide@plt+0xc0a8>
   10d44:	mov	x0, x21
   10d48:	mov	x21, #0x0                   	// #0
   10d4c:	bl	4830 <_Py_Dealloc@plt>
   10d50:	ldp	x23, x24, [sp, #48]
   10d54:	b	108b4 <PyNumber_FloorDivide@plt+0xbc84>
   10d58:	ldr	x0, [x23]
   10d5c:	sub	x0, x0, #0x1
   10d60:	str	x0, [x23]
   10d64:	cbnz	x0, 10cf0 <PyNumber_FloorDivide@plt+0xc0c0>
   10d68:	mov	x0, x23
   10d6c:	bl	4830 <_Py_Dealloc@plt>
   10d70:	ldp	x23, x24, [sp, #48]
   10d74:	b	108b4 <PyNumber_FloorDivide@plt+0xbc84>
   10d78:	mov	x24, #0x0                   	// #0
   10d7c:	ldr	x0, [x23]
   10d80:	b	109d8 <PyNumber_FloorDivide@plt+0xbda8>
   10d84:	nop
   10d88:	stp	x29, x30, [sp, #-48]!
   10d8c:	mov	x29, sp
   10d90:	stp	x19, x20, [sp, #16]
   10d94:	mov	x19, x0
   10d98:	str	x21, [sp, #32]
   10d9c:	ldrb	w1, [x0, #24]
   10da0:	cbz	w1, 10e1c <PyNumber_FloorDivide@plt+0xc1ec>
   10da4:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   10da8:	ldr	x2, [x0, #40]
   10dac:	ldr	x1, [x1, #4024]
   10db0:	cmp	x2, x1
   10db4:	b.eq	10e1c <PyNumber_FloorDivide@plt+0xc1ec>  // b.none
   10db8:	adrp	x21, 2a000 <PyInit__datetime@@Base+0x16f90>
   10dbc:	add	x21, x21, #0xfd8
   10dc0:	ldr	x1, [x21, #72]
   10dc4:	bl	10860 <PyNumber_FloorDivide@plt+0xbc30>
   10dc8:	mov	x19, x0
   10dcc:	cbz	x0, 10eac <PyNumber_FloorDivide@plt+0xc27c>
   10dd0:	bl	60b0 <PyNumber_FloorDivide@plt+0x1480>
   10dd4:	mov	x20, x0
   10dd8:	cbz	x0, 10ed0 <PyNumber_FloorDivide@plt+0xc2a0>
   10ddc:	ldr	x1, [x21, #24]
   10de0:	bl	4c10 <PyNumber_TrueDivide@plt>
   10de4:	mov	x21, x0
   10de8:	ldr	x1, [x20]
   10dec:	sub	x0, x1, #0x1
   10df0:	str	x0, [x20]
   10df4:	cbz	x0, 10ea0 <PyNumber_FloorDivide@plt+0xc270>
   10df8:	ldr	x1, [x19]
   10dfc:	sub	x1, x1, #0x1
   10e00:	str	x1, [x19]
   10e04:	cbz	x1, 10ec4 <PyNumber_FloorDivide@plt+0xc294>
   10e08:	mov	x0, x21
   10e0c:	ldp	x19, x20, [sp, #16]
   10e10:	ldr	x21, [sp, #32]
   10e14:	ldp	x29, x30, [sp], #48
   10e18:	ret
   10e1c:	ldrb	w6, [x19, #35]
   10e20:	ldrb	w5, [x19, #31]
   10e24:	ldrb	w4, [x19, #30]
   10e28:	ldrb	w3, [x19, #29]
   10e2c:	ldrb	w2, [x19, #28]
   10e30:	ldrb	w1, [x19, #27]
   10e34:	ldurh	w0, [x19, #25]
   10e38:	rev16	w0, w0
   10e3c:	and	w0, w0, #0xffff
   10e40:	bl	c1c8 <PyNumber_FloorDivide@plt+0x7598>
   10e44:	cmn	x0, #0x1
   10e48:	b.eq	10eac <PyNumber_FloorDivide@plt+0xc27c>  // b.none
   10e4c:	ldrb	w3, [x19, #33]
   10e50:	mov	x2, #0x848000000000        	// #145685290680320
   10e54:	ldrb	w1, [x19, #32]
   10e58:	movk	x2, #0x412e, lsl #48
   10e5c:	ldrb	w4, [x19, #34]
   10e60:	fmov	d0, x2
   10e64:	lsl	w2, w3, #8
   10e68:	mov	x5, #0xffffffffffffb780    	// #-18560
   10e6c:	orr	w1, w2, w1, lsl #16
   10e70:	movk	x5, #0x886c, lsl #16
   10e74:	orr	w1, w1, w4
   10e78:	movk	x5, #0xfff1, lsl #32
   10e7c:	add	x0, x0, x5
   10e80:	scvtf	d1, w1
   10e84:	scvtf	d2, x0
   10e88:	ldp	x19, x20, [sp, #16]
   10e8c:	fdiv	d0, d1, d0
   10e90:	ldr	x21, [sp, #32]
   10e94:	ldp	x29, x30, [sp], #48
   10e98:	fadd	d0, d0, d2
   10e9c:	b	4900 <PyFloat_FromDouble@plt>
   10ea0:	mov	x0, x20
   10ea4:	bl	4830 <_Py_Dealloc@plt>
   10ea8:	b	10df8 <PyNumber_FloorDivide@plt+0xc1c8>
   10eac:	mov	x21, #0x0                   	// #0
   10eb0:	mov	x0, x21
   10eb4:	ldp	x19, x20, [sp, #16]
   10eb8:	ldr	x21, [sp, #32]
   10ebc:	ldp	x29, x30, [sp], #48
   10ec0:	ret
   10ec4:	mov	x0, x19
   10ec8:	bl	4830 <_Py_Dealloc@plt>
   10ecc:	b	10e08 <PyNumber_FloorDivide@plt+0xc1d8>
   10ed0:	mov	x21, #0x0                   	// #0
   10ed4:	b	10df8 <PyNumber_FloorDivide@plt+0xc1c8>
   10ed8:	stp	x29, x30, [sp, #-96]!
   10edc:	sub	w8, w0, #0x1
   10ee0:	mov	x29, sp
   10ee4:	stp	x19, x20, [sp, #16]
   10ee8:	mov	x20, x7
   10eec:	mov	w7, #0x270e                	// #9998
   10ef0:	stp	x21, x22, [sp, #32]
   10ef4:	cmp	w8, w7
   10ef8:	stp	x23, x24, [sp, #48]
   10efc:	mov	w23, w0
   10f00:	ldr	x22, [sp, #96]
   10f04:	b.hi	1111c <PyNumber_FloorDivide@plt+0xc4ec>  // b.pmore
   10f08:	sub	w0, w1, #0x1
   10f0c:	mov	w19, w1
   10f10:	cmp	w0, #0xb
   10f14:	b.hi	110fc <PyNumber_FloorDivide@plt+0xc4cc>  // b.pmore
   10f18:	mov	w24, w2
   10f1c:	cmp	w2, #0x0
   10f20:	b.le	110dc <PyNumber_FloorDivide@plt+0xc4ac>
   10f24:	stp	x25, x26, [sp, #64]
   10f28:	cmp	w1, #0x2
   10f2c:	mov	w25, w3
   10f30:	stp	x27, x28, [sp, #80]
   10f34:	mov	w26, w4
   10f38:	mov	w27, w5
   10f3c:	mov	w28, w6
   10f40:	b.eq	11044 <PyNumber_FloorDivide@plt+0xc414>  // b.none
   10f44:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   10f48:	add	x1, x1, #0x810
   10f4c:	add	x1, x1, #0x40
   10f50:	ldr	w7, [x1, w19, sxtw #2]
   10f54:	cmp	w24, w7
   10f58:	b.gt	110d4 <PyNumber_FloorDivide@plt+0xc4a4>
   10f5c:	cmp	w25, #0x17
   10f60:	b.hi	11140 <PyNumber_FloorDivide@plt+0xc510>  // b.pmore
   10f64:	cmp	w26, #0x3b
   10f68:	b.hi	11178 <PyNumber_FloorDivide@plt+0xc548>  // b.pmore
   10f6c:	cmp	w27, #0x3b
   10f70:	b.hi	11168 <PyNumber_FloorDivide@plt+0xc538>  // b.pmore
   10f74:	mov	w0, #0x423f                	// #16959
   10f78:	movk	w0, #0xf, lsl #16
   10f7c:	cmp	w28, w0
   10f80:	b.hi	11188 <PyNumber_FloorDivide@plt+0xc558>  // b.pmore
   10f84:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
   10f88:	ldr	x0, [x21, #4024]
   10f8c:	cmp	x20, x0
   10f90:	b.eq	10fb4 <PyNumber_FloorDivide@plt+0xc384>  // b.none
   10f94:	ldr	x0, [x20, #8]
   10f98:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   10f9c:	add	x1, x1, #0x2a8
   10fa0:	add	x1, x1, #0x340
   10fa4:	cmp	x0, x1
   10fa8:	b.eq	10fb4 <PyNumber_FloorDivide@plt+0xc384>  // b.none
   10fac:	bl	4b60 <PyType_IsSubtype@plt>
   10fb0:	cbz	w0, 110a4 <PyNumber_FloorDivide@plt+0xc474>
   10fb4:	ldr	x21, [x21, #4024]
   10fb8:	mov	x0, x22
   10fbc:	ldr	x2, [x22, #304]
   10fc0:	cmp	x20, x21
   10fc4:	cset	x1, ne  // ne = any
   10fc8:	cset	w22, ne  // ne = any
   10fcc:	blr	x2
   10fd0:	cbz	x0, 11088 <PyNumber_FloorDivide@plt+0xc458>
   10fd4:	rev16	w1, w23
   10fd8:	asr	w2, w28, #16
   10fdc:	rev16	w6, w28
   10fe0:	mov	x3, #0xffffffffffffffff    	// #-1
   10fe4:	str	x3, [x0, #16]
   10fe8:	cmp	x20, x21
   10fec:	strb	w22, [x0, #24]
   10ff0:	sturh	w1, [x0, #25]
   10ff4:	strb	w19, [x0, #27]
   10ff8:	strb	w24, [x0, #28]
   10ffc:	strb	w25, [x0, #29]
   11000:	strb	w26, [x0, #30]
   11004:	strb	w27, [x0, #31]
   11008:	strb	w2, [x0, #32]
   1100c:	sturh	w6, [x0, #33]
   11010:	b.eq	11024 <PyNumber_FloorDivide@plt+0xc3f4>  // b.none
   11014:	ldr	x1, [x20]
   11018:	add	x1, x1, #0x1
   1101c:	str	x1, [x20]
   11020:	str	x20, [x0, #40]
   11024:	strb	wzr, [x0, #35]
   11028:	ldp	x25, x26, [sp, #64]
   1102c:	ldp	x27, x28, [sp, #80]
   11030:	ldp	x19, x20, [sp, #16]
   11034:	ldp	x21, x22, [sp, #32]
   11038:	ldp	x23, x24, [sp, #48]
   1103c:	ldp	x29, x30, [sp], #96
   11040:	ret
   11044:	tst	x23, #0x3
   11048:	b.ne	10f44 <PyNumber_FloorDivide@plt+0xc314>  // b.any
   1104c:	mov	w0, #0x5c29                	// #23593
   11050:	mov	w1, #0x5c28                	// #23592
   11054:	movk	w0, #0xc28f, lsl #16
   11058:	movk	w1, #0x28f, lsl #16
   1105c:	mov	w7, #0x1d                  	// #29
   11060:	mul	w0, w23, w0
   11064:	ror	w2, w0, #2
   11068:	cmp	w2, w1
   1106c:	b.hi	10f54 <PyNumber_FloorDivide@plt+0xc324>  // b.pmore
   11070:	mov	w1, #0xd70a                	// #55050
   11074:	ror	w0, w0, #4
   11078:	movk	w1, #0xa3, lsl #16
   1107c:	cmp	w0, w1
   11080:	b.ls	10f54 <PyNumber_FloorDivide@plt+0xc324>  // b.plast
   11084:	b	10f44 <PyNumber_FloorDivide@plt+0xc314>
   11088:	ldp	x19, x20, [sp, #16]
   1108c:	ldp	x21, x22, [sp, #32]
   11090:	ldp	x23, x24, [sp, #48]
   11094:	ldp	x25, x26, [sp, #64]
   11098:	ldp	x27, x28, [sp, #80]
   1109c:	ldp	x29, x30, [sp], #96
   110a0:	ret
   110a4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   110a8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   110ac:	ldr	x2, [x20, #8]
   110b0:	add	x1, x1, #0x60
   110b4:	ldr	x0, [x0, #3976]
   110b8:	ldr	x2, [x2, #24]
   110bc:	ldr	x0, [x0]
   110c0:	bl	4b90 <PyErr_Format@plt>
   110c4:	mov	x0, #0x0                   	// #0
   110c8:	ldp	x25, x26, [sp, #64]
   110cc:	ldp	x27, x28, [sp, #80]
   110d0:	b	11030 <PyNumber_FloorDivide@plt+0xc400>
   110d4:	ldp	x25, x26, [sp, #64]
   110d8:	ldp	x27, x28, [sp, #80]
   110dc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   110e0:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   110e4:	add	x1, x1, #0xe08
   110e8:	ldr	x0, [x0, #3968]
   110ec:	ldr	x0, [x0]
   110f0:	bl	48a0 <PyErr_SetString@plt>
   110f4:	mov	x0, #0x0                   	// #0
   110f8:	b	11030 <PyNumber_FloorDivide@plt+0xc400>
   110fc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11100:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11104:	add	x1, x1, #0xdf0
   11108:	ldr	x0, [x0, #3968]
   1110c:	ldr	x0, [x0]
   11110:	bl	48a0 <PyErr_SetString@plt>
   11114:	mov	x0, #0x0                   	// #0
   11118:	b	11030 <PyNumber_FloorDivide@plt+0xc400>
   1111c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11120:	mov	w2, w23
   11124:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11128:	add	x1, x1, #0xdd8
   1112c:	ldr	x0, [x0, #3968]
   11130:	ldr	x0, [x0]
   11134:	bl	4b90 <PyErr_Format@plt>
   11138:	mov	x0, #0x0                   	// #0
   1113c:	b	11030 <PyNumber_FloorDivide@plt+0xc400>
   11140:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11144:	add	x1, x1, #0xfd0
   11148:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   1114c:	ldr	x0, [x0, #3968]
   11150:	ldr	x0, [x0]
   11154:	bl	48a0 <PyErr_SetString@plt>
   11158:	mov	x0, #0x0                   	// #0
   1115c:	ldp	x25, x26, [sp, #64]
   11160:	ldp	x27, x28, [sp, #80]
   11164:	b	11030 <PyNumber_FloorDivide@plt+0xc400>
   11168:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1116c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11170:	add	x1, x1, #0x0
   11174:	b	1114c <PyNumber_FloorDivide@plt+0xc51c>
   11178:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   1117c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11180:	add	x1, x1, #0xfe8
   11184:	b	1114c <PyNumber_FloorDivide@plt+0xc51c>
   11188:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1118c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11190:	add	x1, x1, #0x18
   11194:	b	1114c <PyNumber_FloorDivide@plt+0xc51c>
   11198:	stp	x29, x30, [sp, #-48]!
   1119c:	mov	x29, sp
   111a0:	stp	x19, x20, [sp, #16]
   111a4:	mov	x20, x1
   111a8:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   111ac:	str	x21, [sp, #32]
   111b0:	mov	x21, x0
   111b4:	ldr	x0, [x20, #8]
   111b8:	add	x1, x1, #0x2a8
   111bc:	mov	w19, w2
   111c0:	cmp	x0, x1
   111c4:	b.eq	111f8 <PyNumber_FloorDivide@plt+0xc5c8>  // b.none
   111c8:	bl	4b60 <PyType_IsSubtype@plt>
   111cc:	cbnz	w0, 111f8 <PyNumber_FloorDivide@plt+0xc5c8>
   111d0:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   111d4:	ldp	x19, x20, [sp, #16]
   111d8:	ldr	x1, [x1, #3960]
   111dc:	ldr	x21, [sp, #32]
   111e0:	mov	x0, x1
   111e4:	ldr	x2, [x1]
   111e8:	add	x2, x2, #0x1
   111ec:	str	x2, [x1]
   111f0:	ldp	x29, x30, [sp], #48
   111f4:	ret
   111f8:	ldr	w0, [x20, #24]
   111fc:	ldr	w1, [x21, #24]
   11200:	subs	w1, w1, w0
   11204:	b.eq	1124c <PyNumber_FloorDivide@plt+0xc61c>  // b.none
   11208:	cmp	w19, #0x3
   1120c:	b.eq	11288 <PyNumber_FloorDivide@plt+0xc658>  // b.none
   11210:	b.gt	112bc <PyNumber_FloorDivide@plt+0xc68c>
   11214:	cmp	w19, #0x1
   11218:	b.eq	11300 <PyNumber_FloorDivide@plt+0xc6d0>  // b.none
   1121c:	cmp	w19, #0x2
   11220:	b.ne	112b0 <PyNumber_FloorDivide@plt+0xc680>  // b.any
   11224:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   11228:	ldp	x19, x20, [sp, #16]
   1122c:	ldr	x1, [x1, #3992]
   11230:	ldr	x21, [sp, #32]
   11234:	mov	x0, x1
   11238:	ldr	x2, [x1]
   1123c:	add	x2, x2, #0x1
   11240:	str	x2, [x1]
   11244:	ldp	x29, x30, [sp], #48
   11248:	ret
   1124c:	ldr	w0, [x20, #28]
   11250:	ldr	w1, [x21, #28]
   11254:	subs	w1, w1, w0
   11258:	b.ne	11208 <PyNumber_FloorDivide@plt+0xc5d8>  // b.any
   1125c:	ldr	w0, [x20, #32]
   11260:	cmp	w19, #0x2
   11264:	ldr	w1, [x21, #32]
   11268:	sub	w1, w1, w0
   1126c:	b.eq	1130c <PyNumber_FloorDivide@plt+0xc6dc>  // b.none
   11270:	b.le	112f4 <PyNumber_FloorDivide@plt+0xc6c4>
   11274:	cmp	w19, #0x4
   11278:	b.eq	112c4 <PyNumber_FloorDivide@plt+0xc694>  // b.none
   1127c:	cmp	w19, #0x5
   11280:	b.ne	112e4 <PyNumber_FloorDivide@plt+0xc6b4>  // b.any
   11284:	tbnz	w1, #31, 11224 <PyNumber_FloorDivide@plt+0xc5f4>
   11288:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   1128c:	ldp	x19, x20, [sp, #16]
   11290:	ldr	x1, [x1, #4040]
   11294:	ldr	x21, [sp, #32]
   11298:	mov	x0, x1
   1129c:	ldr	x2, [x1]
   112a0:	add	x2, x2, #0x1
   112a4:	str	x2, [x1]
   112a8:	ldp	x29, x30, [sp], #48
   112ac:	ret
   112b0:	cbnz	w19, 112d8 <PyNumber_FloorDivide@plt+0xc6a8>
   112b4:	tbz	w1, #31, 11224 <PyNumber_FloorDivide@plt+0xc5f4>
   112b8:	b	11288 <PyNumber_FloorDivide@plt+0xc658>
   112bc:	cmp	w19, #0x4
   112c0:	b.ne	112d0 <PyNumber_FloorDivide@plt+0xc6a0>  // b.any
   112c4:	cmp	w1, #0x0
   112c8:	b.le	11224 <PyNumber_FloorDivide@plt+0xc5f4>
   112cc:	b	11288 <PyNumber_FloorDivide@plt+0xc658>
   112d0:	cmp	w19, #0x5
   112d4:	b.eq	11284 <PyNumber_FloorDivide@plt+0xc654>  // b.none
   112d8:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   112dc:	add	x0, x0, #0xa88
   112e0:	bl	4a70 <Py_FatalError@plt>
   112e4:	cmp	w19, #0x3
   112e8:	b.ne	112d8 <PyNumber_FloorDivide@plt+0xc6a8>  // b.any
   112ec:	cbz	w1, 11224 <PyNumber_FloorDivide@plt+0xc5f4>
   112f0:	b	11288 <PyNumber_FloorDivide@plt+0xc658>
   112f4:	cbz	w19, 112b4 <PyNumber_FloorDivide@plt+0xc684>
   112f8:	cmp	w19, #0x1
   112fc:	b.ne	112d8 <PyNumber_FloorDivide@plt+0xc6a8>  // b.any
   11300:	cmp	w1, #0x0
   11304:	b.gt	11224 <PyNumber_FloorDivide@plt+0xc5f4>
   11308:	b	11288 <PyNumber_FloorDivide@plt+0xc658>
   1130c:	cbz	w1, 11288 <PyNumber_FloorDivide@plt+0xc658>
   11310:	b	11224 <PyNumber_FloorDivide@plt+0xc5f4>
   11314:	nop
   11318:	sub	sp, sp, #0x50
   1131c:	stp	x29, x30, [sp, #16]
   11320:	add	x29, sp, #0x10
   11324:	stp	x19, x20, [sp, #32]
   11328:	ldr	x20, [x0, #16]
   1132c:	cmn	x20, #0x1
   11330:	b.eq	11348 <PyNumber_FloorDivide@plt+0xc718>  // b.none
   11334:	mov	x0, x20
   11338:	ldp	x29, x30, [sp, #16]
   1133c:	ldp	x19, x20, [sp, #32]
   11340:	add	sp, sp, #0x50
   11344:	ret
   11348:	stp	x21, x22, [sp, #48]
   1134c:	mov	x19, x0
   11350:	ldrb	w0, [x0, #35]
   11354:	ldrb	w7, [x19, #24]
   11358:	cbz	w0, 11548 <PyNumber_FloorDivide@plt+0xc918>
   1135c:	ldrb	w1, [x19, #33]
   11360:	ldrb	w6, [x19, #32]
   11364:	ldurh	w0, [x19, #25]
   11368:	ldrb	w2, [x19, #34]
   1136c:	lsl	w1, w1, #8
   11370:	orr	w6, w1, w6, lsl #16
   11374:	rev16	w0, w0
   11378:	orr	w6, w6, w2
   1137c:	ldrb	w1, [x19, #27]
   11380:	ldrb	w2, [x19, #28]
   11384:	and	w0, w0, #0xffff
   11388:	ldrb	w3, [x19, #29]
   1138c:	ldrb	w4, [x19, #30]
   11390:	ldrb	w5, [x19, #31]
   11394:	cbz	w7, 115bc <PyNumber_FloorDivide@plt+0xc98c>
   11398:	ldr	x7, [x19, #40]
   1139c:	str	wzr, [sp]
   113a0:	ldr	x8, [x19, #8]
   113a4:	str	x8, [sp, #8]
   113a8:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   113ac:	mov	x22, x0
   113b0:	cbz	x0, 11530 <PyNumber_FloorDivide@plt+0xc900>
   113b4:	ldrb	w7, [x0, #24]
   113b8:	cbz	w7, 1155c <PyNumber_FloorDivide@plt+0xc92c>
   113bc:	ldr	x0, [x22, #40]
   113c0:	mov	x1, x22
   113c4:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   113c8:	mov	x21, x0
   113cc:	ldr	x1, [x22]
   113d0:	sub	x0, x1, #0x1
   113d4:	str	x0, [x22]
   113d8:	cbz	x0, 11580 <PyNumber_FloorDivide@plt+0xc950>
   113dc:	cbz	x21, 11530 <PyNumber_FloorDivide@plt+0xc900>
   113e0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   113e4:	ldr	x0, [x0, #4024]
   113e8:	cmp	x21, x0
   113ec:	b.eq	115a8 <PyNumber_FloorDivide@plt+0xc978>  // b.none
   113f0:	str	x23, [sp, #64]
   113f4:	mov	w2, #0x851f                	// #34079
   113f8:	movk	w2, #0x51eb, lsl #16
   113fc:	mov	w8, #0x16d                 	// #365
   11400:	ldurh	w1, [x19, #25]
   11404:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
   11408:	ldrb	w6, [x19, #27]
   1140c:	add	x5, x5, #0x810
   11410:	rev16	w1, w1
   11414:	ldrb	w4, [x19, #28]
   11418:	and	w1, w1, #0xffff
   1141c:	subs	w3, w1, #0x1
   11420:	add	w0, w1, #0x2
   11424:	csel	w0, w0, w3, mi  // mi = first
   11428:	ldr	w7, [x5, w6, sxtw #2]
   1142c:	cmp	w6, #0x2
   11430:	smull	x2, w3, w2
   11434:	asr	w0, w0, #2
   11438:	madd	w3, w3, w8, w0
   1143c:	asr	x0, x2, #37
   11440:	asr	x2, x2, #39
   11444:	sub	w2, w2, w0
   11448:	add	w2, w3, w2
   1144c:	b.le	11480 <PyNumber_FloorDivide@plt+0xc850>
   11450:	tst	x1, #0x3
   11454:	b.ne	11480 <PyNumber_FloorDivide@plt+0xc850>  // b.any
   11458:	mov	w3, #0x5c29                	// #23593
   1145c:	mov	w0, #0x5c28                	// #23592
   11460:	movk	w3, #0xc28f, lsl #16
   11464:	movk	w0, #0x28f, lsl #16
   11468:	mul	w1, w1, w3
   1146c:	ror	w3, w1, #2
   11470:	cmp	w3, w0
   11474:	b.ls	115d8 <PyNumber_FloorDivide@plt+0xc9a8>  // b.plast
   11478:	add	w7, w7, #0x1
   1147c:	nop
   11480:	ldrb	w1, [x19, #30]
   11484:	mov	w8, #0xe10                 	// #3600
   11488:	ldrb	w6, [x19, #29]
   1148c:	add	w0, w4, w7
   11490:	ldrb	w4, [x19, #33]
   11494:	add	w0, w0, w2
   11498:	lsl	w5, w1, #4
   1149c:	ldrb	w3, [x19, #32]
   114a0:	sub	w5, w5, w1
   114a4:	ldrb	w7, [x19, #34]
   114a8:	ldrb	w1, [x19, #31]
   114ac:	lsl	w4, w4, #8
   114b0:	lsl	w5, w5, #2
   114b4:	orr	w2, w4, w3, lsl #16
   114b8:	orr	w2, w2, w7
   114bc:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
   114c0:	mov	w3, #0x1                   	// #1
   114c4:	add	x4, x4, #0x2a8
   114c8:	madd	w5, w6, w8, w5
   114cc:	add	w1, w5, w1
   114d0:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
   114d4:	mov	x23, x0
   114d8:	cbz	x0, 115f4 <PyNumber_FloorDivide@plt+0xc9c4>
   114dc:	mov	x1, x21
   114e0:	bl	fbd8 <PyNumber_FloorDivide@plt+0xafa8>
   114e4:	ldr	x1, [x23]
   114e8:	mov	x22, x0
   114ec:	sub	x0, x1, #0x1
   114f0:	str	x0, [x23]
   114f4:	cbz	x0, 1159c <PyNumber_FloorDivide@plt+0xc96c>
   114f8:	cbz	x22, 115f4 <PyNumber_FloorDivide@plt+0xc9c4>
   114fc:	mov	x0, x22
   11500:	bl	4a80 <PyObject_Hash@plt>
   11504:	str	x0, [x19, #16]
   11508:	ldr	x0, [x22]
   1150c:	sub	x0, x0, #0x1
   11510:	str	x0, [x22]
   11514:	cbz	x0, 115c8 <PyNumber_FloorDivide@plt+0xc998>
   11518:	ldr	x23, [sp, #64]
   1151c:	ldr	x0, [x21]
   11520:	sub	x0, x0, #0x1
   11524:	str	x0, [x21]
   11528:	cbz	x0, 1158c <PyNumber_FloorDivide@plt+0xc95c>
   1152c:	ldr	x20, [x19, #16]
   11530:	mov	x0, x20
   11534:	ldp	x29, x30, [sp, #16]
   11538:	ldp	x19, x20, [sp, #32]
   1153c:	ldp	x21, x22, [sp, #48]
   11540:	add	sp, sp, #0x50
   11544:	ret
   11548:	ldr	x0, [x19]
   1154c:	mov	x22, x19
   11550:	add	x0, x0, #0x1
   11554:	str	x0, [x19]
   11558:	cbnz	w7, 113bc <PyNumber_FloorDivide@plt+0xc78c>
   1155c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11560:	mov	x1, x22
   11564:	ldr	x0, [x0, #4024]
   11568:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   1156c:	mov	x21, x0
   11570:	ldr	x1, [x22]
   11574:	sub	x0, x1, #0x1
   11578:	str	x0, [x22]
   1157c:	cbnz	x0, 113dc <PyNumber_FloorDivide@plt+0xc7ac>
   11580:	mov	x0, x22
   11584:	bl	4830 <_Py_Dealloc@plt>
   11588:	b	113dc <PyNumber_FloorDivide@plt+0xc7ac>
   1158c:	mov	x0, x21
   11590:	bl	4830 <_Py_Dealloc@plt>
   11594:	ldr	x20, [x19, #16]
   11598:	b	11530 <PyNumber_FloorDivide@plt+0xc900>
   1159c:	mov	x0, x23
   115a0:	bl	4830 <_Py_Dealloc@plt>
   115a4:	b	114f8 <PyNumber_FloorDivide@plt+0xc8c8>
   115a8:	add	x0, x19, #0x19
   115ac:	mov	x1, #0xa                   	// #10
   115b0:	bl	48d0 <_Py_HashBytes@plt>
   115b4:	str	x0, [x19, #16]
   115b8:	b	1151c <PyNumber_FloorDivide@plt+0xc8ec>
   115bc:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
   115c0:	ldr	x7, [x7, #4024]
   115c4:	b	1139c <PyNumber_FloorDivide@plt+0xc76c>
   115c8:	mov	x0, x22
   115cc:	bl	4830 <_Py_Dealloc@plt>
   115d0:	ldr	x23, [sp, #64]
   115d4:	b	1151c <PyNumber_FloorDivide@plt+0xc8ec>
   115d8:	mov	w0, #0xd70a                	// #55050
   115dc:	ror	w1, w1, #4
   115e0:	movk	w0, #0xa3, lsl #16
   115e4:	cmp	w1, w0
   115e8:	b.hi	11480 <PyNumber_FloorDivide@plt+0xc850>  // b.pmore
   115ec:	add	w7, w7, #0x1
   115f0:	b	11480 <PyNumber_FloorDivide@plt+0xc850>
   115f4:	ldr	x0, [x21]
   115f8:	sub	x0, x0, #0x1
   115fc:	str	x0, [x21]
   11600:	cbz	x0, 11610 <PyNumber_FloorDivide@plt+0xc9e0>
   11604:	ldp	x21, x22, [sp, #48]
   11608:	ldr	x23, [sp, #64]
   1160c:	b	11334 <PyNumber_FloorDivide@plt+0xc704>
   11610:	mov	x0, x21
   11614:	bl	4830 <_Py_Dealloc@plt>
   11618:	ldp	x21, x22, [sp, #48]
   1161c:	ldr	x23, [sp, #64]
   11620:	b	11334 <PyNumber_FloorDivide@plt+0xc704>
   11624:	nop
   11628:	stp	x29, x30, [sp, #-48]!
   1162c:	adrp	x3, 29000 <PyInit__datetime@@Base+0x15f90>
   11630:	add	x3, x3, #0x2a8
   11634:	mov	x29, sp
   11638:	stp	x19, x20, [sp, #16]
   1163c:	mov	x20, x1
   11640:	add	x1, x3, #0x680
   11644:	str	x21, [sp, #32]
   11648:	mov	x21, x0
   1164c:	ldr	x0, [x20, #8]
   11650:	mov	w19, w2
   11654:	cmp	x0, x1
   11658:	b.eq	1168c <PyNumber_FloorDivide@plt+0xca5c>  // b.none
   1165c:	bl	4b60 <PyType_IsSubtype@plt>
   11660:	cbnz	w0, 1168c <PyNumber_FloorDivide@plt+0xca5c>
   11664:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   11668:	ldp	x19, x20, [sp, #16]
   1166c:	ldr	x1, [x1, #3960]
   11670:	ldr	x21, [sp, #32]
   11674:	mov	x0, x1
   11678:	ldr	x2, [x1]
   1167c:	add	x2, x2, #0x1
   11680:	str	x2, [x1]
   11684:	ldp	x29, x30, [sp], #48
   11688:	ret
   1168c:	add	x1, x20, #0x19
   11690:	add	x0, x21, #0x19
   11694:	mov	x2, #0x4                   	// #4
   11698:	bl	4a10 <memcmp@plt>
   1169c:	cmp	w19, #0x3
   116a0:	b.eq	11744 <PyNumber_FloorDivide@plt+0xcb14>  // b.none
   116a4:	b.gt	116e4 <PyNumber_FloorDivide@plt+0xcab4>
   116a8:	cmp	w19, #0x1
   116ac:	b.eq	11738 <PyNumber_FloorDivide@plt+0xcb08>  // b.none
   116b0:	cmp	w19, #0x2
   116b4:	b.ne	11720 <PyNumber_FloorDivide@plt+0xcaf0>  // b.any
   116b8:	cbz	w0, 116f8 <PyNumber_FloorDivide@plt+0xcac8>
   116bc:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   116c0:	ldp	x19, x20, [sp, #16]
   116c4:	ldr	x1, [x1, #3992]
   116c8:	ldr	x21, [sp, #32]
   116cc:	mov	x0, x1
   116d0:	ldr	x2, [x1]
   116d4:	add	x2, x2, #0x1
   116d8:	str	x2, [x1]
   116dc:	ldp	x29, x30, [sp], #48
   116e0:	ret
   116e4:	cmp	w19, #0x4
   116e8:	b.eq	1172c <PyNumber_FloorDivide@plt+0xcafc>  // b.none
   116ec:	cmp	w19, #0x5
   116f0:	b.ne	1174c <PyNumber_FloorDivide@plt+0xcb1c>  // b.any
   116f4:	tbnz	w0, #31, 116bc <PyNumber_FloorDivide@plt+0xca8c>
   116f8:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   116fc:	ldp	x19, x20, [sp, #16]
   11700:	ldr	x1, [x1, #4040]
   11704:	ldr	x21, [sp, #32]
   11708:	mov	x0, x1
   1170c:	ldr	x2, [x1]
   11710:	add	x2, x2, #0x1
   11714:	str	x2, [x1]
   11718:	ldp	x29, x30, [sp], #48
   1171c:	ret
   11720:	cbnz	w19, 1174c <PyNumber_FloorDivide@plt+0xcb1c>
   11724:	tbz	w0, #31, 116bc <PyNumber_FloorDivide@plt+0xca8c>
   11728:	b	116f8 <PyNumber_FloorDivide@plt+0xcac8>
   1172c:	cmp	w0, #0x0
   11730:	b.le	116bc <PyNumber_FloorDivide@plt+0xca8c>
   11734:	b	116f8 <PyNumber_FloorDivide@plt+0xcac8>
   11738:	cmp	w0, #0x0
   1173c:	b.gt	116bc <PyNumber_FloorDivide@plt+0xca8c>
   11740:	b	116f8 <PyNumber_FloorDivide@plt+0xcac8>
   11744:	cbz	w0, 116bc <PyNumber_FloorDivide@plt+0xca8c>
   11748:	b	116f8 <PyNumber_FloorDivide@plt+0xcac8>
   1174c:	adrp	x0, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11750:	add	x0, x0, #0xa88
   11754:	bl	4a70 <Py_FatalError@plt>
   11758:	stp	x29, x30, [sp, #-96]!
   1175c:	mov	x29, sp
   11760:	stp	x19, x20, [sp, #16]
   11764:	stp	x21, x22, [sp, #32]
   11768:	adrp	x22, 28000 <PyInit__datetime@@Base+0x14f90>
   1176c:	stp	x23, x24, [sp, #48]
   11770:	stp	x25, x26, [sp, #64]
   11774:	str	x27, [sp, #80]
   11778:	ldrb	w1, [x0, #33]
   1177c:	ldrb	w20, [x0, #32]
   11780:	ldrb	w23, [x0, #24]
   11784:	ldurh	w2, [x0, #25]
   11788:	lsl	w1, w1, #8
   1178c:	ldrb	w4, [x0, #34]
   11790:	orr	w20, w1, w20, lsl #16
   11794:	rev16	w2, w2
   11798:	ldrb	w3, [x0, #27]
   1179c:	orr	w20, w20, w4
   117a0:	ldrb	w7, [x0, #29]
   117a4:	ldrb	w4, [x0, #28]
   117a8:	and	w2, w2, #0xffff
   117ac:	ldur	w21, [x0, #25]
   117b0:	cbz	w23, 11928 <PyNumber_FloorDivide@plt+0xccf8>
   117b4:	ldr	x1, [x22, #4024]
   117b8:	ldr	x24, [x0, #40]
   117bc:	cmp	x24, x1
   117c0:	cset	w19, ne  // ne = any
   117c4:	mov	w23, w19
   117c8:	ldrb	w6, [x0, #35]
   117cc:	sub	w5, w2, #0x1
   117d0:	mov	w1, #0x270e                	// #9998
   117d4:	cmp	w6, #0x0
   117d8:	cset	w27, eq  // eq = none
   117dc:	cmp	w5, w1
   117e0:	b.hi	11a08 <PyNumber_FloorDivide@plt+0xcdd8>  // b.pmore
   117e4:	sub	w1, w3, #0x1
   117e8:	cmp	w1, #0xb
   117ec:	b.hi	119e8 <PyNumber_FloorDivide@plt+0xcdb8>  // b.pmore
   117f0:	cbz	w4, 119c8 <PyNumber_FloorDivide@plt+0xcd98>
   117f4:	cmp	w3, #0x2
   117f8:	b.eq	11934 <PyNumber_FloorDivide@plt+0xcd04>  // b.none
   117fc:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   11800:	add	x1, x1, #0x810
   11804:	add	x1, x1, #0x40
   11808:	ldr	w1, [x1, w3, sxtw #2]
   1180c:	cmp	w4, w1
   11810:	b.gt	119c8 <PyNumber_FloorDivide@plt+0xcd98>
   11814:	cmp	w7, #0x17
   11818:	b.hi	11a68 <PyNumber_FloorDivide@plt+0xce38>  // b.pmore
   1181c:	ldrb	w1, [x0, #30]
   11820:	cmp	w1, #0x3b
   11824:	b.hi	11a48 <PyNumber_FloorDivide@plt+0xce18>  // b.pmore
   11828:	ldrb	w1, [x0, #31]
   1182c:	ldur	w26, [x0, #29]
   11830:	cmp	w1, #0x3b
   11834:	b.hi	11a28 <PyNumber_FloorDivide@plt+0xcdf8>  // b.pmore
   11838:	mov	w1, #0x423f                	// #16959
   1183c:	movk	w1, #0xf, lsl #16
   11840:	cmp	w20, w1
   11844:	b.gt	11a88 <PyNumber_FloorDivide@plt+0xce58>
   11848:	ldr	x1, [x22, #4024]
   1184c:	ldr	x25, [x0, #8]
   11850:	cmp	x24, x1
   11854:	b.eq	11878 <PyNumber_FloorDivide@plt+0xcc48>  // b.none
   11858:	ldr	x0, [x24, #8]
   1185c:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   11860:	add	x1, x1, #0x2a8
   11864:	add	x1, x1, #0x340
   11868:	cmp	x0, x1
   1186c:	b.eq	11878 <PyNumber_FloorDivide@plt+0xcc48>  // b.none
   11870:	bl	4b60 <PyType_IsSubtype@plt>
   11874:	cbz	w0, 119a0 <PyNumber_FloorDivide@plt+0xcd70>
   11878:	ldr	x2, [x25, #304]
   1187c:	and	x1, x19, #0x1
   11880:	mov	x0, x25
   11884:	mov	x25, #0x0                   	// #0
   11888:	blr	x2
   1188c:	mov	x19, x0
   11890:	cbz	x0, 11908 <PyNumber_FloorDivide@plt+0xccd8>
   11894:	ldr	x0, [x22, #4024]
   11898:	asr	w1, w20, #8
   1189c:	mov	x2, #0xffffffffffffffff    	// #-1
   118a0:	str	x2, [x19, #16]
   118a4:	strb	w23, [x19, #24]
   118a8:	cmp	x24, x0
   118ac:	stur	w21, [x19, #25]
   118b0:	stur	w26, [x19, #29]
   118b4:	strb	w1, [x19, #33]
   118b8:	strb	w20, [x19, #34]
   118bc:	b.eq	118d4 <PyNumber_FloorDivide@plt+0xcca4>  // b.none
   118c0:	ldr	x0, [x24]
   118c4:	add	x0, x0, #0x1
   118c8:	str	x0, [x24]
   118cc:	str	x24, [x19, #40]
   118d0:	ldrb	w23, [x19, #24]
   118d4:	strb	w27, [x19, #35]
   118d8:	cbnz	w23, 11978 <PyNumber_FloorDivide@plt+0xcd48>
   118dc:	ldr	x1, [x22, #4024]
   118e0:	mov	x25, x1
   118e4:	ldr	x0, [x1]
   118e8:	add	x0, x0, #0x1
   118ec:	str	x0, [x1]
   118f0:	ldr	x1, [x19]
   118f4:	sub	x1, x1, #0x1
   118f8:	str	x1, [x19]
   118fc:	cbnz	x1, 11908 <PyNumber_FloorDivide@plt+0xccd8>
   11900:	mov	x0, x19
   11904:	bl	4830 <_Py_Dealloc@plt>
   11908:	mov	x0, x25
   1190c:	ldp	x19, x20, [sp, #16]
   11910:	ldp	x21, x22, [sp, #32]
   11914:	ldp	x23, x24, [sp, #48]
   11918:	ldp	x25, x26, [sp, #64]
   1191c:	ldr	x27, [sp, #80]
   11920:	ldp	x29, x30, [sp], #96
   11924:	ret
   11928:	ldr	x24, [x22, #4024]
   1192c:	mov	w19, #0x0                   	// #0
   11930:	b	117c8 <PyNumber_FloorDivide@plt+0xcb98>
   11934:	tst	x2, #0x3
   11938:	b.ne	117fc <PyNumber_FloorDivide@plt+0xcbcc>  // b.any
   1193c:	mov	w6, #0x5c29                	// #23593
   11940:	mov	w5, #0x5c28                	// #23592
   11944:	movk	w6, #0xc28f, lsl #16
   11948:	movk	w5, #0x28f, lsl #16
   1194c:	mov	w1, #0x1d                  	// #29
   11950:	mul	w2, w2, w6
   11954:	ror	w6, w2, #2
   11958:	cmp	w6, w5
   1195c:	b.hi	1180c <PyNumber_FloorDivide@plt+0xcbdc>  // b.pmore
   11960:	mov	w5, #0xd70a                	// #55050
   11964:	ror	w2, w2, #4
   11968:	movk	w5, #0xa3, lsl #16
   1196c:	cmp	w2, w5
   11970:	b.ls	1180c <PyNumber_FloorDivide@plt+0xcbdc>  // b.plast
   11974:	b	117fc <PyNumber_FloorDivide@plt+0xcbcc>
   11978:	ldr	x1, [x22, #4024]
   1197c:	ldr	x0, [x19, #40]
   11980:	cmp	x0, x1
   11984:	b.eq	118dc <PyNumber_FloorDivide@plt+0xccac>  // b.none
   11988:	mov	x2, x19
   1198c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11990:	add	x1, x1, #0xa38
   11994:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
   11998:	mov	x25, x0
   1199c:	b	118f0 <PyNumber_FloorDivide@plt+0xccc0>
   119a0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   119a4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   119a8:	ldr	x2, [x24, #8]
   119ac:	add	x1, x1, #0x60
   119b0:	ldr	x0, [x0, #3976]
   119b4:	mov	x25, #0x0                   	// #0
   119b8:	ldr	x2, [x2, #24]
   119bc:	ldr	x0, [x0]
   119c0:	bl	4b90 <PyErr_Format@plt>
   119c4:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   119c8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   119cc:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   119d0:	mov	x25, #0x0                   	// #0
   119d4:	add	x1, x1, #0xe08
   119d8:	ldr	x0, [x0, #3968]
   119dc:	ldr	x0, [x0]
   119e0:	bl	48a0 <PyErr_SetString@plt>
   119e4:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   119e8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   119ec:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   119f0:	mov	x25, #0x0                   	// #0
   119f4:	add	x1, x1, #0xdf0
   119f8:	ldr	x0, [x0, #3968]
   119fc:	ldr	x0, [x0]
   11a00:	bl	48a0 <PyErr_SetString@plt>
   11a04:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   11a08:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11a0c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11a10:	mov	x25, #0x0                   	// #0
   11a14:	add	x1, x1, #0xdd8
   11a18:	ldr	x0, [x0, #3968]
   11a1c:	ldr	x0, [x0]
   11a20:	bl	4b90 <PyErr_Format@plt>
   11a24:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   11a28:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11a2c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   11a30:	mov	x25, #0x0                   	// #0
   11a34:	add	x1, x1, #0x0
   11a38:	ldr	x0, [x0, #3968]
   11a3c:	ldr	x0, [x0]
   11a40:	bl	48a0 <PyErr_SetString@plt>
   11a44:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   11a48:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11a4c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11a50:	mov	x25, #0x0                   	// #0
   11a54:	add	x1, x1, #0xfe8
   11a58:	ldr	x0, [x0, #3968]
   11a5c:	ldr	x0, [x0]
   11a60:	bl	48a0 <PyErr_SetString@plt>
   11a64:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   11a68:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11a6c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11a70:	mov	x25, #0x0                   	// #0
   11a74:	add	x1, x1, #0xfd0
   11a78:	ldr	x0, [x0, #3968]
   11a7c:	ldr	x0, [x0]
   11a80:	bl	48a0 <PyErr_SetString@plt>
   11a84:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   11a88:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11a8c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   11a90:	mov	x25, #0x0                   	// #0
   11a94:	add	x1, x1, #0x18
   11a98:	ldr	x0, [x0, #3968]
   11a9c:	ldr	x0, [x0]
   11aa0:	bl	48a0 <PyErr_SetString@plt>
   11aa4:	b	11908 <PyNumber_FloorDivide@plt+0xccd8>
   11aa8:	stp	x29, x30, [sp, #-48]!
   11aac:	mov	x29, sp
   11ab0:	stp	x19, x20, [sp, #16]
   11ab4:	mov	x19, x2
   11ab8:	mov	x20, x3
   11abc:	str	x21, [sp, #32]
   11ac0:	mov	x21, x1
   11ac4:	bl	11758 <PyNumber_FloorDivide@plt+0xcb28>
   11ac8:	cbz	x0, 11bbc <PyNumber_FloorDivide@plt+0xcf8c>
   11acc:	cmp	x0, x19
   11ad0:	b.eq	11b2c <PyNumber_FloorDivide@plt+0xcefc>  // b.none
   11ad4:	ldr	w1, [x0, #24]
   11ad8:	ldr	w2, [x19, #24]
   11adc:	cmp	w2, w1
   11ae0:	b.eq	11b0c <PyNumber_FloorDivide@plt+0xcedc>  // b.none
   11ae4:	mov	w19, #0x1                   	// #1
   11ae8:	ldr	x1, [x0]
   11aec:	sub	x1, x1, #0x1
   11af0:	str	x1, [x0]
   11af4:	cbz	x1, 11b94 <PyNumber_FloorDivide@plt+0xcf64>
   11af8:	mov	w0, w19
   11afc:	ldp	x19, x20, [sp, #16]
   11b00:	ldr	x21, [sp, #32]
   11b04:	ldp	x29, x30, [sp], #48
   11b08:	ret
   11b0c:	ldr	w2, [x0, #28]
   11b10:	ldr	w1, [x19, #28]
   11b14:	cmp	w2, w1
   11b18:	b.ne	11ae4 <PyNumber_FloorDivide@plt+0xceb4>  // b.any
   11b1c:	ldr	w2, [x0, #32]
   11b20:	ldr	w1, [x19, #32]
   11b24:	cmp	w2, w1
   11b28:	b.ne	11ae4 <PyNumber_FloorDivide@plt+0xceb4>  // b.any
   11b2c:	ldr	x2, [x0]
   11b30:	sub	x2, x2, #0x1
   11b34:	str	x2, [x0]
   11b38:	cbz	x2, 11bac <PyNumber_FloorDivide@plt+0xcf7c>
   11b3c:	mov	x0, x21
   11b40:	bl	11758 <PyNumber_FloorDivide@plt+0xcb28>
   11b44:	cbz	x0, 11bbc <PyNumber_FloorDivide@plt+0xcf8c>
   11b48:	cmp	x0, x20
   11b4c:	b.eq	11bd4 <PyNumber_FloorDivide@plt+0xcfa4>  // b.none
   11b50:	ldr	w2, [x0, #24]
   11b54:	mov	w19, #0x1                   	// #1
   11b58:	ldr	w1, [x20, #24]
   11b5c:	cmp	w2, w1
   11b60:	b.ne	11ae8 <PyNumber_FloorDivide@plt+0xceb8>  // b.any
   11b64:	ldr	w2, [x0, #28]
   11b68:	ldr	w1, [x20, #28]
   11b6c:	cmp	w2, w1
   11b70:	b.ne	11ae8 <PyNumber_FloorDivide@plt+0xceb8>  // b.any
   11b74:	ldr	w1, [x20, #32]
   11b78:	ldr	w2, [x0, #32]
   11b7c:	cmp	w2, w1
   11b80:	ldr	x1, [x0]
   11b84:	cset	w19, ne  // ne = any
   11b88:	sub	x1, x1, #0x1
   11b8c:	str	x1, [x0]
   11b90:	cbnz	x1, 11af8 <PyNumber_FloorDivide@plt+0xcec8>
   11b94:	bl	4830 <_Py_Dealloc@plt>
   11b98:	mov	w0, w19
   11b9c:	ldp	x19, x20, [sp, #16]
   11ba0:	ldr	x21, [sp, #32]
   11ba4:	ldp	x29, x30, [sp], #48
   11ba8:	ret
   11bac:	bl	4830 <_Py_Dealloc@plt>
   11bb0:	mov	x0, x21
   11bb4:	bl	11758 <PyNumber_FloorDivide@plt+0xcb28>
   11bb8:	cbnz	x0, 11b48 <PyNumber_FloorDivide@plt+0xcf18>
   11bbc:	mov	w19, #0xffffffff            	// #-1
   11bc0:	mov	w0, w19
   11bc4:	ldp	x19, x20, [sp, #16]
   11bc8:	ldr	x21, [sp, #32]
   11bcc:	ldp	x29, x30, [sp], #48
   11bd0:	ret
   11bd4:	mov	x0, x20
   11bd8:	mov	w19, #0x0                   	// #0
   11bdc:	b	11ae8 <PyNumber_FloorDivide@plt+0xceb8>
   11be0:	stp	x29, x30, [sp, #-80]!
   11be4:	mov	x29, sp
   11be8:	stp	x19, x20, [sp, #16]
   11bec:	mov	x19, x1
   11bf0:	mov	x20, x0
   11bf4:	stp	x21, x22, [sp, #32]
   11bf8:	ldr	x0, [x19, #8]
   11bfc:	stp	x23, x24, [sp, #48]
   11c00:	adrp	x24, 29000 <PyInit__datetime@@Base+0x15f90>
   11c04:	add	x21, x24, #0x2a8
   11c08:	mov	w23, w2
   11c0c:	add	x1, x21, #0x1a0
   11c10:	cmp	x0, x1
   11c14:	b.eq	11c78 <PyNumber_FloorDivide@plt+0xd048>  // b.none
   11c18:	bl	4b60 <PyType_IsSubtype@plt>
   11c1c:	cbnz	w0, 11c78 <PyNumber_FloorDivide@plt+0xd048>
   11c20:	ldr	x0, [x19, #8]
   11c24:	add	x1, x21, #0x680
   11c28:	cmp	x0, x1
   11c2c:	b.eq	11c38 <PyNumber_FloorDivide@plt+0xd008>  // b.none
   11c30:	bl	4b60 <PyType_IsSubtype@plt>
   11c34:	cbz	w0, 11f64 <PyNumber_FloorDivide@plt+0xd334>
   11c38:	cmp	w23, #0x2
   11c3c:	b.eq	11fa8 <PyNumber_FloorDivide@plt+0xd378>  // b.none
   11c40:	cmp	w23, #0x3
   11c44:	b.ne	11ff0 <PyNumber_FloorDivide@plt+0xd3c0>  // b.any
   11c48:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11c4c:	ldp	x21, x22, [sp, #32]
   11c50:	ldr	x0, [x0, #4040]
   11c54:	ldp	x23, x24, [sp, #48]
   11c58:	mov	x19, x0
   11c5c:	ldr	x1, [x0]
   11c60:	add	x1, x1, #0x1
   11c64:	str	x1, [x0]
   11c68:	mov	x0, x19
   11c6c:	ldp	x19, x20, [sp, #16]
   11c70:	ldp	x29, x30, [sp], #80
   11c74:	ret
   11c78:	str	x25, [sp, #64]
   11c7c:	ldrb	w0, [x20, #24]
   11c80:	ldrb	w1, [x19, #24]
   11c84:	cbnz	w0, 11d2c <PyNumber_FloorDivide@plt+0xd0fc>
   11c88:	cbz	w1, 11efc <PyNumber_FloorDivide@plt+0xd2cc>
   11c8c:	adrp	x25, 28000 <PyInit__datetime@@Base+0x14f90>
   11c90:	ldr	x2, [x19, #40]
   11c94:	ldr	x0, [x25, #4024]
   11c98:	cmp	x2, x0
   11c9c:	b.eq	11efc <PyNumber_FloorDivide@plt+0xd2cc>  // b.none
   11ca0:	ldr	x0, [x25, #4024]
   11ca4:	mov	x21, x0
   11ca8:	ldr	x2, [x0]
   11cac:	add	x2, x2, #0x1
   11cb0:	str	x2, [x0]
   11cb4:	ldr	x0, [x25, #4024]
   11cb8:	cbz	w1, 11cc0 <PyNumber_FloorDivide@plt+0xd090>
   11cbc:	ldr	x0, [x19, #40]
   11cc0:	mov	x1, x19
   11cc4:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   11cc8:	mov	x22, x0
   11ccc:	cbz	x0, 11e38 <PyNumber_FloorDivide@plt+0xd208>
   11cd0:	cmp	x0, x21
   11cd4:	b.eq	11dac <PyNumber_FloorDivide@plt+0xd17c>  // b.none
   11cd8:	ldr	x0, [x21, #8]
   11cdc:	add	x1, x24, #0x2a8
   11ce0:	cmp	x0, x1
   11ce4:	b.eq	11d64 <PyNumber_FloorDivide@plt+0xd134>  // b.none
   11ce8:	bl	4b60 <PyType_IsSubtype@plt>
   11cec:	cbnz	w0, 11d64 <PyNumber_FloorDivide@plt+0xd134>
   11cf0:	ldr	x25, [x25, #4024]
   11cf4:	cmp	x21, x25
   11cf8:	ccmp	x22, x25, #0x4, ne  // ne = any
   11cfc:	b.ne	11e68 <PyNumber_FloorDivide@plt+0xd238>  // b.any
   11d00:	cmp	w23, #0x2
   11d04:	b.eq	11f28 <PyNumber_FloorDivide@plt+0xd2f8>  // b.none
   11d08:	cmp	w23, #0x3
   11d0c:	b.ne	11f44 <PyNumber_FloorDivide@plt+0xd314>  // b.any
   11d10:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11d14:	ldr	x0, [x0, #4040]
   11d18:	mov	x19, x0
   11d1c:	ldr	x1, [x0]
   11d20:	add	x1, x1, #0x1
   11d24:	str	x1, [x0]
   11d28:	b	11dd8 <PyNumber_FloorDivide@plt+0xd1a8>
   11d2c:	ldr	x0, [x20, #40]
   11d30:	cbnz	w1, 11edc <PyNumber_FloorDivide@plt+0xd2ac>
   11d34:	adrp	x25, 28000 <PyInit__datetime@@Base+0x14f90>
   11d38:	ldr	x1, [x25, #4024]
   11d3c:	cmp	x0, x1
   11d40:	b.eq	11efc <PyNumber_FloorDivide@plt+0xd2cc>  // b.none
   11d44:	mov	x2, x20
   11d48:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   11d4c:	add	x1, x1, #0xa38
   11d50:	bl	6920 <PyNumber_FloorDivide@plt+0x1cf0>
   11d54:	mov	x21, x0
   11d58:	cbz	x0, 11e48 <PyNumber_FloorDivide@plt+0xd218>
   11d5c:	ldrb	w1, [x19, #24]
   11d60:	b	11cb4 <PyNumber_FloorDivide@plt+0xd084>
   11d64:	ldr	x0, [x22, #8]
   11d68:	add	x1, x24, #0x2a8
   11d6c:	cmp	x0, x1
   11d70:	b.eq	11d7c <PyNumber_FloorDivide@plt+0xd14c>  // b.none
   11d74:	bl	4b60 <PyType_IsSubtype@plt>
   11d78:	cbz	w0, 11cf0 <PyNumber_FloorDivide@plt+0xd0c0>
   11d7c:	ldr	w1, [x21, #24]
   11d80:	ldr	w0, [x22, #24]
   11d84:	cmp	w1, w0
   11d88:	b.ne	11cf0 <PyNumber_FloorDivide@plt+0xd0c0>  // b.any
   11d8c:	ldr	w1, [x21, #28]
   11d90:	ldr	w0, [x22, #28]
   11d94:	cmp	w1, w0
   11d98:	b.ne	11cf0 <PyNumber_FloorDivide@plt+0xd0c0>  // b.any
   11d9c:	ldr	w1, [x21, #32]
   11da0:	ldr	w0, [x22, #32]
   11da4:	cmp	w1, w0
   11da8:	b.ne	11cf0 <PyNumber_FloorDivide@plt+0xd0c0>  // b.any
   11dac:	add	x1, x19, #0x19
   11db0:	add	x0, x20, #0x19
   11db4:	mov	x2, #0xa                   	// #10
   11db8:	bl	4a10 <memcmp@plt>
   11dbc:	sub	w1, w23, #0x2
   11dc0:	cmp	w0, #0x0
   11dc4:	ccmp	w1, #0x1, #0x2, eq  // eq = none
   11dc8:	b.ls	11f80 <PyNumber_FloorDivide@plt+0xd350>  // b.plast
   11dcc:	mov	w1, w23
   11dd0:	bl	55e8 <PyNumber_FloorDivide@plt+0x9b8>
   11dd4:	mov	x19, x0
   11dd8:	ldr	x1, [x21]
   11ddc:	sub	x1, x1, #0x1
   11de0:	str	x1, [x21]
   11de4:	cbz	x1, 11ed0 <PyNumber_FloorDivide@plt+0xd2a0>
   11de8:	ldr	x0, [x22]
   11dec:	sub	x0, x0, #0x1
   11df0:	str	x0, [x22]
   11df4:	cbz	x0, 11e14 <PyNumber_FloorDivide@plt+0xd1e4>
   11df8:	ldr	x25, [sp, #64]
   11dfc:	mov	x0, x19
   11e00:	ldp	x19, x20, [sp, #16]
   11e04:	ldp	x21, x22, [sp, #32]
   11e08:	ldp	x23, x24, [sp, #48]
   11e0c:	ldp	x29, x30, [sp], #80
   11e10:	ret
   11e14:	mov	x0, x22
   11e18:	bl	4830 <_Py_Dealloc@plt>
   11e1c:	mov	x0, x19
   11e20:	ldp	x19, x20, [sp, #16]
   11e24:	ldp	x21, x22, [sp, #32]
   11e28:	ldp	x23, x24, [sp, #48]
   11e2c:	ldr	x25, [sp, #64]
   11e30:	ldp	x29, x30, [sp], #80
   11e34:	ret
   11e38:	ldr	x0, [x21]
   11e3c:	sub	x0, x0, #0x1
   11e40:	str	x0, [x21]
   11e44:	cbz	x0, 11fdc <PyNumber_FloorDivide@plt+0xd3ac>
   11e48:	mov	x19, #0x0                   	// #0
   11e4c:	mov	x0, x19
   11e50:	ldp	x19, x20, [sp, #16]
   11e54:	ldp	x21, x22, [sp, #32]
   11e58:	ldp	x23, x24, [sp, #48]
   11e5c:	ldr	x25, [sp, #64]
   11e60:	ldp	x29, x30, [sp], #80
   11e64:	ret
   11e68:	mov	x1, x19
   11e6c:	mov	x0, x20
   11e70:	bl	10860 <PyNumber_FloorDivide@plt+0xbc30>
   11e74:	cbz	x0, 12020 <PyNumber_FloorDivide@plt+0xd3f0>
   11e78:	ldr	x1, [x0]
   11e7c:	ldr	w24, [x0, #24]
   11e80:	sub	x1, x1, #0x1
   11e84:	str	x1, [x0]
   11e88:	cbnz	w24, 11fc4 <PyNumber_FloorDivide@plt+0xd394>
   11e8c:	ldp	w24, w2, [x0, #28]
   11e90:	orr	w24, w24, w2
   11e94:	cbz	x1, 12028 <PyNumber_FloorDivide@plt+0xd3f8>
   11e98:	cmp	w24, #0x0
   11e9c:	sub	w0, w23, #0x2
   11ea0:	ccmp	w0, #0x1, #0x2, eq  // eq = none
   11ea4:	b.hi	11fc8 <PyNumber_FloorDivide@plt+0xd398>  // b.pmore
   11ea8:	mov	x1, x19
   11eac:	mov	x0, x20
   11eb0:	mov	x3, x22
   11eb4:	mov	x2, x21
   11eb8:	bl	11aa8 <PyNumber_FloorDivide@plt+0xce78>
   11ebc:	cmn	w0, #0x1
   11ec0:	b.eq	12020 <PyNumber_FloorDivide@plt+0xd3f0>  // b.none
   11ec4:	cmp	w0, #0x0
   11ec8:	cset	w24, ne  // ne = any
   11ecc:	b	11fc8 <PyNumber_FloorDivide@plt+0xd398>
   11ed0:	mov	x0, x21
   11ed4:	bl	4830 <_Py_Dealloc@plt>
   11ed8:	b	11de8 <PyNumber_FloorDivide@plt+0xd1b8>
   11edc:	ldr	x2, [x19, #40]
   11ee0:	cmp	x0, x2
   11ee4:	b.eq	11efc <PyNumber_FloorDivide@plt+0xd2cc>  // b.none
   11ee8:	adrp	x25, 28000 <PyInit__datetime@@Base+0x14f90>
   11eec:	ldr	x2, [x25, #4024]
   11ef0:	cmp	x0, x2
   11ef4:	b.ne	11d44 <PyNumber_FloorDivide@plt+0xd114>  // b.any
   11ef8:	b	11ca0 <PyNumber_FloorDivide@plt+0xd070>
   11efc:	add	x1, x19, #0x19
   11f00:	add	x0, x20, #0x19
   11f04:	mov	x2, #0xa                   	// #10
   11f08:	bl	4a10 <memcmp@plt>
   11f0c:	mov	w1, w23
   11f10:	ldp	x19, x20, [sp, #16]
   11f14:	ldp	x21, x22, [sp, #32]
   11f18:	ldp	x23, x24, [sp, #48]
   11f1c:	ldr	x25, [sp, #64]
   11f20:	ldp	x29, x30, [sp], #80
   11f24:	b	55e8 <PyNumber_FloorDivide@plt+0x9b8>
   11f28:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11f2c:	ldr	x0, [x0, #3992]
   11f30:	mov	x19, x0
   11f34:	ldr	x1, [x0]
   11f38:	add	x1, x1, #0x1
   11f3c:	str	x1, [x0]
   11f40:	b	11dd8 <PyNumber_FloorDivide@plt+0xd1a8>
   11f44:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11f48:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   11f4c:	mov	x19, #0x0                   	// #0
   11f50:	add	x1, x1, #0x760
   11f54:	ldr	x0, [x0, #3976]
   11f58:	ldr	x0, [x0]
   11f5c:	bl	48a0 <PyErr_SetString@plt>
   11f60:	b	11dd8 <PyNumber_FloorDivide@plt+0xd1a8>
   11f64:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11f68:	ldr	x0, [x0, #3960]
   11f6c:	mov	x19, x0
   11f70:	ldr	x1, [x0]
   11f74:	add	x1, x1, #0x1
   11f78:	str	x1, [x0]
   11f7c:	b	11dfc <PyNumber_FloorDivide@plt+0xd1cc>
   11f80:	mov	x1, x19
   11f84:	mov	x0, x20
   11f88:	mov	x3, x22
   11f8c:	mov	x2, x21
   11f90:	bl	11aa8 <PyNumber_FloorDivide@plt+0xce78>
   11f94:	cmn	w0, #0x1
   11f98:	b.eq	12020 <PyNumber_FloorDivide@plt+0xd3f0>  // b.none
   11f9c:	cmp	w0, #0x0
   11fa0:	cset	w0, ne  // ne = any
   11fa4:	b	11dcc <PyNumber_FloorDivide@plt+0xd19c>
   11fa8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11fac:	ldr	x0, [x0, #3992]
   11fb0:	mov	x19, x0
   11fb4:	ldr	x1, [x0]
   11fb8:	add	x1, x1, #0x1
   11fbc:	str	x1, [x0]
   11fc0:	b	11dfc <PyNumber_FloorDivide@plt+0xd1cc>
   11fc4:	cbz	x1, 12028 <PyNumber_FloorDivide@plt+0xd3f8>
   11fc8:	mov	w1, w23
   11fcc:	mov	w0, w24
   11fd0:	bl	55e8 <PyNumber_FloorDivide@plt+0x9b8>
   11fd4:	mov	x19, x0
   11fd8:	b	11dd8 <PyNumber_FloorDivide@plt+0xd1a8>
   11fdc:	mov	x0, x21
   11fe0:	mov	x19, #0x0                   	// #0
   11fe4:	bl	4830 <_Py_Dealloc@plt>
   11fe8:	ldr	x25, [sp, #64]
   11fec:	b	11dfc <PyNumber_FloorDivide@plt+0xd1cc>
   11ff0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   11ff4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   11ff8:	ldr	x3, [x19, #8]
   11ffc:	add	x1, x1, #0x748
   12000:	ldr	x0, [x0, #3976]
   12004:	mov	x19, #0x0                   	// #0
   12008:	ldr	x2, [x20, #8]
   1200c:	ldr	x0, [x0]
   12010:	ldr	x3, [x3, #24]
   12014:	ldr	x2, [x2, #24]
   12018:	bl	4b90 <PyErr_Format@plt>
   1201c:	b	11dfc <PyNumber_FloorDivide@plt+0xd1cc>
   12020:	mov	x19, #0x0                   	// #0
   12024:	b	11dd8 <PyNumber_FloorDivide@plt+0xd1a8>
   12028:	bl	4830 <_Py_Dealloc@plt>
   1202c:	b	11e98 <PyNumber_FloorDivide@plt+0xd268>
   12030:	stp	x29, x30, [sp, #-64]!
   12034:	mov	x29, sp
   12038:	stp	x19, x20, [sp, #16]
   1203c:	mov	x19, x0
   12040:	ldr	x0, [x0, #8]
   12044:	stp	x21, x22, [sp, #32]
   12048:	str	x23, [sp, #48]
   1204c:	adrp	x23, 29000 <PyInit__datetime@@Base+0x15f90>
   12050:	add	x21, x23, #0x2a8
   12054:	add	x20, x21, #0x1a0
   12058:	cmp	x0, x20
   1205c:	b.eq	120d8 <PyNumber_FloorDivide@plt+0xd4a8>  // b.none
   12060:	mov	x22, x1
   12064:	mov	x1, x20
   12068:	bl	4b60 <PyType_IsSubtype@plt>
   1206c:	cbnz	w0, 120d8 <PyNumber_FloorDivide@plt+0xd4a8>
   12070:	ldr	x0, [x22, #8]
   12074:	cmp	x0, x20
   12078:	b.eq	120d8 <PyNumber_FloorDivide@plt+0xd4a8>  // b.none
   1207c:	mov	x1, x20
   12080:	bl	4b60 <PyType_IsSubtype@plt>
   12084:	cbnz	w0, 120d8 <PyNumber_FloorDivide@plt+0xd4a8>
   12088:	ldr	x0, [x19, #8]
   1208c:	add	x1, x21, #0x680
   12090:	cmp	x0, x1
   12094:	b.eq	120a0 <PyNumber_FloorDivide@plt+0xd470>  // b.none
   12098:	bl	4b60 <PyType_IsSubtype@plt>
   1209c:	cbz	w0, 120d8 <PyNumber_FloorDivide@plt+0xd4a8>
   120a0:	ldr	x0, [x22, #8]
   120a4:	add	x20, x23, #0x2a8
   120a8:	add	x1, x20, #0x680
   120ac:	cmp	x0, x1
   120b0:	b.eq	12104 <PyNumber_FloorDivide@plt+0xd4d4>  // b.none
   120b4:	bl	4b60 <PyType_IsSubtype@plt>
   120b8:	cbnz	w0, 12104 <PyNumber_FloorDivide@plt+0xd4d4>
   120bc:	ldr	x0, [x22, #8]
   120c0:	cmp	x0, x20
   120c4:	b.eq	12290 <PyNumber_FloorDivide@plt+0xd660>  // b.none
   120c8:	mov	x1, x20
   120cc:	bl	4b60 <PyType_IsSubtype@plt>
   120d0:	cbnz	w0, 12290 <PyNumber_FloorDivide@plt+0xd660>
   120d4:	nop
   120d8:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   120dc:	ldr	x1, [x1, #3960]
   120e0:	mov	x0, x1
   120e4:	ldr	x2, [x1]
   120e8:	add	x2, x2, #0x1
   120ec:	str	x2, [x1]
   120f0:	ldp	x19, x20, [sp, #16]
   120f4:	ldp	x21, x22, [sp, #32]
   120f8:	ldr	x23, [sp, #48]
   120fc:	ldp	x29, x30, [sp], #64
   12100:	ret
   12104:	ldurh	w1, [x19, #25]
   12108:	mov	w2, #0x851f                	// #34079
   1210c:	movk	w2, #0x51eb, lsl #16
   12110:	ldrb	w4, [x19, #27]
   12114:	rev16	w1, w1
   12118:	adrp	x5, 15000 <PyInit__datetime@@Base+0x1f90>
   1211c:	and	w1, w1, #0xffff
   12120:	add	x7, x5, #0x810
   12124:	subs	w6, w1, #0x1
   12128:	add	w3, w1, #0x2
   1212c:	csel	w3, w3, w6, mi  // mi = first
   12130:	mov	w8, #0x16d                 	// #365
   12134:	ldrb	w0, [x19, #28]
   12138:	cmp	w4, #0x2
   1213c:	smull	x2, w6, w2
   12140:	asr	w3, w3, #2
   12144:	ldr	w7, [x7, w4, sxtw #2]
   12148:	asr	x19, x2, #37
   1214c:	asr	x2, x2, #39
   12150:	madd	w8, w6, w8, w3
   12154:	sub	w4, w2, w19
   12158:	b.le	121a0 <PyNumber_FloorDivide@plt+0xd570>
   1215c:	tst	x1, #0x3
   12160:	b.ne	121a0 <PyNumber_FloorDivide@plt+0xd570>  // b.any
   12164:	mov	w3, #0x5c29                	// #23593
   12168:	mov	w2, #0x5c28                	// #23592
   1216c:	movk	w3, #0xc28f, lsl #16
   12170:	movk	w2, #0x28f, lsl #16
   12174:	mul	w1, w1, w3
   12178:	ror	w3, w1, #2
   1217c:	cmp	w3, w2
   12180:	b.hi	12198 <PyNumber_FloorDivide@plt+0xd568>  // b.pmore
   12184:	mov	w2, #0xd70a                	// #55050
   12188:	ror	w1, w1, #4
   1218c:	movk	w2, #0xa3, lsl #16
   12190:	cmp	w1, w2
   12194:	b.hi	121a0 <PyNumber_FloorDivide@plt+0xd570>  // b.pmore
   12198:	add	w7, w7, #0x1
   1219c:	nop
   121a0:	ldurh	w1, [x22, #25]
   121a4:	mov	w2, #0x851f                	// #34079
   121a8:	add	x6, x5, #0x810
   121ac:	movk	w2, #0x51eb, lsl #16
   121b0:	rev16	w1, w1
   121b4:	ldrb	w9, [x22, #27]
   121b8:	and	w1, w1, #0xffff
   121bc:	mov	w10, #0x16d                 	// #365
   121c0:	subs	w3, w1, #0x1
   121c4:	add	w5, w1, #0x2
   121c8:	csel	w5, w5, w3, mi  // mi = first
   121cc:	cmp	w9, #0x2
   121d0:	ldr	w6, [x6, w9, sxtw #2]
   121d4:	smull	x2, w3, w2
   121d8:	asr	w5, w5, #2
   121dc:	ldrb	w19, [x22, #28]
   121e0:	asr	x9, x2, #37
   121e4:	asr	x2, x2, #39
   121e8:	madd	w3, w3, w10, w5
   121ec:	sub	w2, w2, w9
   121f0:	b.le	12230 <PyNumber_FloorDivide@plt+0xd600>
   121f4:	tst	x1, #0x3
   121f8:	b.ne	12230 <PyNumber_FloorDivide@plt+0xd600>  // b.any
   121fc:	mov	w9, #0x5c29                	// #23593
   12200:	mov	w5, #0x5c28                	// #23592
   12204:	movk	w9, #0xc28f, lsl #16
   12208:	movk	w5, #0x28f, lsl #16
   1220c:	mul	w1, w1, w9
   12210:	ror	w9, w1, #2
   12214:	cmp	w9, w5
   12218:	b.hi	122b0 <PyNumber_FloorDivide@plt+0xd680>  // b.pmore
   1221c:	mov	w5, #0xd70a                	// #55050
   12220:	ror	w1, w1, #4
   12224:	movk	w5, #0xa3, lsl #16
   12228:	cmp	w1, w5
   1222c:	b.ls	122b0 <PyNumber_FloorDivide@plt+0xd680>  // b.plast
   12230:	sub	w19, w0, w19
   12234:	sub	w7, w7, w6
   12238:	add	w19, w19, w8
   1223c:	mov	w0, #0xc9ff                	// #51711
   12240:	add	w19, w19, w4
   12244:	movk	w0, #0x3b9a, lsl #16
   12248:	sub	w19, w19, w3
   1224c:	mov	w1, #0x93fe                	// #37886
   12250:	sub	w19, w19, w2
   12254:	movk	w1, #0x7735, lsl #16
   12258:	add	w19, w19, w7
   1225c:	add	w2, w19, w0
   12260:	cmp	w2, w1
   12264:	b.hi	122b8 <PyNumber_FloorDivide@plt+0xd688>  // b.pmore
   12268:	add	x0, x23, #0x2a8
   1226c:	mov	x1, #0x0                   	// #0
   12270:	ldr	x2, [x0, #304]
   12274:	blr	x2
   12278:	cbz	x0, 120f0 <PyNumber_FloorDivide@plt+0xd4c0>
   1227c:	mov	x1, #0xffffffffffffffff    	// #-1
   12280:	str	x1, [x0, #16]
   12284:	str	w19, [x0, #24]
   12288:	stur	xzr, [x0, #28]
   1228c:	b	120f0 <PyNumber_FloorDivide@plt+0xd4c0>
   12290:	ldr	w1, [x22, #24]
   12294:	mov	x0, x19
   12298:	ldp	x19, x20, [sp, #16]
   1229c:	mov	w2, #0x1                   	// #1
   122a0:	ldp	x21, x22, [sp, #32]
   122a4:	ldr	x23, [sp, #48]
   122a8:	ldp	x29, x30, [sp], #64
   122ac:	b	cfa8 <PyNumber_FloorDivide@plt+0x8378>
   122b0:	add	w6, w6, #0x1
   122b4:	b	12230 <PyNumber_FloorDivide@plt+0xd600>
   122b8:	adrp	x4, 28000 <PyInit__datetime@@Base+0x14f90>
   122bc:	mov	w3, w0
   122c0:	mov	w2, w19
   122c4:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   122c8:	ldr	x0, [x4, #4008]
   122cc:	add	x1, x1, #0xa50
   122d0:	ldr	x0, [x0]
   122d4:	bl	4b90 <PyErr_Format@plt>
   122d8:	mov	x0, #0x0                   	// #0
   122dc:	b	120f0 <PyNumber_FloorDivide@plt+0xd4c0>
   122e0:	sub	sp, sp, #0xd0
   122e4:	add	x2, sp, #0x80
   122e8:	stp	x29, x30, [sp, #16]
   122ec:	add	x29, sp, #0x10
   122f0:	stp	x19, x20, [sp, #32]
   122f4:	mov	x19, x0
   122f8:	mov	x0, x1
   122fc:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   12300:	add	x1, x1, #0x798
   12304:	bl	4a60 <PyArg_ParseTuple@plt>
   12308:	cbz	w0, 123f4 <PyNumber_FloorDivide@plt+0xd7c4>
   1230c:	ldr	x0, [sp, #128]
   12310:	add	x2, sp, #0x90
   12314:	add	x1, sp, #0x88
   12318:	mov	w3, #0x2                   	// #2
   1231c:	bl	47d0 <_PyTime_ObjectToTimeval@plt>
   12320:	cmn	w0, #0x1
   12324:	b.eq	123f4 <PyNumber_FloorDivide@plt+0xd7c4>  // b.none
   12328:	stp	x21, x22, [sp, #48]
   1232c:	add	x1, sp, #0x98
   12330:	stp	x23, x24, [sp, #64]
   12334:	ldp	x23, x21, [sp, #136]
   12338:	mov	x0, x23
   1233c:	bl	49f0 <_PyTime_gmtime@plt>
   12340:	mov	w20, w0
   12344:	cbnz	w0, 12460 <PyNumber_FloorDivide@plt+0xd830>
   12348:	adrp	x2, 28000 <PyInit__datetime@@Base+0x14f90>
   1234c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12350:	ldp	w5, w4, [sp, #152]
   12354:	stp	x25, x26, [sp, #80]
   12358:	mov	w22, #0x3b                  	// #59
   1235c:	ldp	w24, w6, [sp, #168]
   12360:	stp	x27, x28, [sp, #96]
   12364:	cmp	w5, w22
   12368:	ldr	x2, [x2, #4016]
   1236c:	csel	w22, w5, w22, le
   12370:	ldr	x0, [x0, #4064]
   12374:	add	w24, w24, #0x1
   12378:	ldp	w26, w25, [sp, #160]
   1237c:	cmp	x2, x0
   12380:	add	w28, w6, #0x76c
   12384:	b.eq	12470 <PyNumber_FloorDivide@plt+0xd840>  // b.none
   12388:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   1238c:	add	x1, x1, #0x2a8
   12390:	add	x1, x1, #0x1a0
   12394:	cmp	x19, x1
   12398:	b.eq	12408 <PyNumber_FloorDivide@plt+0xd7d8>  // b.none
   1239c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   123a0:	str	w21, [sp]
   123a4:	mov	w7, w22
   123a8:	mov	w6, w4
   123ac:	ldr	x0, [x0, #4024]
   123b0:	str	x0, [sp, #8]
   123b4:	mov	w5, w26
   123b8:	mov	w4, w25
   123bc:	mov	w3, w24
   123c0:	mov	w2, w28
   123c4:	mov	x0, x19
   123c8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   123cc:	add	x1, x1, #0x348
   123d0:	bl	4970 <PyObject_CallFunction@plt>
   123d4:	ldp	x29, x30, [sp, #16]
   123d8:	ldp	x19, x20, [sp, #32]
   123dc:	ldp	x21, x22, [sp, #48]
   123e0:	ldp	x23, x24, [sp, #64]
   123e4:	ldp	x25, x26, [sp, #80]
   123e8:	ldp	x27, x28, [sp, #96]
   123ec:	add	sp, sp, #0xd0
   123f0:	ret
   123f4:	mov	x0, #0x0                   	// #0
   123f8:	ldp	x29, x30, [sp, #16]
   123fc:	ldp	x19, x20, [sp, #32]
   12400:	add	sp, sp, #0xd0
   12404:	ret
   12408:	adrp	x7, 28000 <PyInit__datetime@@Base+0x14f90>
   1240c:	str	w20, [sp]
   12410:	str	x19, [sp, #8]
   12414:	mov	w6, w21
   12418:	ldr	x7, [x7, #4024]
   1241c:	mov	w5, w22
   12420:	mov	w3, w26
   12424:	mov	w2, w25
   12428:	mov	w1, w24
   1242c:	mov	w0, w28
   12430:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   12434:	ldp	x29, x30, [sp, #16]
   12438:	ldp	x19, x20, [sp, #32]
   1243c:	ldp	x21, x22, [sp, #48]
   12440:	ldp	x23, x24, [sp, #64]
   12444:	ldp	x25, x26, [sp, #80]
   12448:	ldp	x27, x28, [sp, #96]
   1244c:	add	sp, sp, #0xd0
   12450:	ret
   12454:	ldp	x25, x26, [sp, #80]
   12458:	ldp	x27, x28, [sp, #96]
   1245c:	nop
   12460:	mov	x0, #0x0                   	// #0
   12464:	ldp	x21, x22, [sp, #48]
   12468:	ldp	x23, x24, [sp, #64]
   1246c:	b	123f8 <PyNumber_FloorDivide@plt+0xd7c8>
   12470:	add	w6, w6, #0x76b
   12474:	mov	w0, #0x270e                	// #9998
   12478:	cmp	w6, w0
   1247c:	b.hi	1259c <PyNumber_FloorDivide@plt+0xd96c>  // b.pmore
   12480:	mov	w0, #0x851f                	// #34079
   12484:	asr	w2, w6, #2
   12488:	movk	w0, #0x51eb, lsl #16
   1248c:	mov	w3, #0x16d                 	// #365
   12490:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   12494:	add	x1, x1, #0x810
   12498:	smull	x0, w6, w0
   1249c:	cmp	w24, #0x2
   124a0:	madd	w6, w6, w3, w2
   124a4:	ldr	w1, [x1, w24, sxtw #2]
   124a8:	asr	x2, x0, #37
   124ac:	asr	x0, x0, #39
   124b0:	sub	w0, w0, w2
   124b4:	add	w6, w0, w6
   124b8:	b.le	124f8 <PyNumber_FloorDivide@plt+0xd8c8>
   124bc:	tst	x28, #0x3
   124c0:	b.ne	124f8 <PyNumber_FloorDivide@plt+0xd8c8>  // b.any
   124c4:	mov	w0, #0x5c29                	// #23593
   124c8:	mov	w2, #0x5c28                	// #23592
   124cc:	movk	w0, #0xc28f, lsl #16
   124d0:	movk	w2, #0x28f, lsl #16
   124d4:	mul	w0, w28, w0
   124d8:	ror	w3, w0, #2
   124dc:	cmp	w3, w2
   124e0:	b.hi	12594 <PyNumber_FloorDivide@plt+0xd964>  // b.pmore
   124e4:	mov	w2, #0xd70a                	// #55050
   124e8:	ror	w0, w0, #4
   124ec:	movk	w2, #0xa3, lsl #16
   124f0:	cmp	w0, w2
   124f4:	b.ls	12594 <PyNumber_FloorDivide@plt+0xd964>  // b.plast
   124f8:	add	w1, w25, w1
   124fc:	sxtw	x0, w26
   12500:	add	w6, w1, w6
   12504:	mov	w2, #0x18                  	// #24
   12508:	sxtw	x1, w4
   1250c:	sxtw	x27, w22
   12510:	smaddl	x6, w6, w2, x0
   12514:	lsl	x0, x6, #4
   12518:	sub	x0, x0, x6
   1251c:	add	x6, x1, x0, lsl #2
   12520:	lsl	x0, x6, #4
   12524:	sub	x6, x0, x6
   12528:	add	x27, x27, x6, lsl #2
   1252c:	mov	x0, #0xf700                	// #63232
   12530:	str	w4, [sp, #124]
   12534:	movk	x0, #0x7791, lsl #16
   12538:	movk	x0, #0xe, lsl #32
   1253c:	add	x0, x23, x0
   12540:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
   12544:	cmn	x0, #0x1
   12548:	b.eq	12454 <PyNumber_FloorDivide@plt+0xd824>  // b.none
   1254c:	sub	x1, x27, #0x15, lsl #12
   12550:	ldr	w4, [sp, #124]
   12554:	sub	x1, x1, #0x180
   12558:	subs	x0, x1, x0
   1255c:	b.pl	12388 <PyNumber_FloorDivide@plt+0xd758>  // b.nfrst
   12560:	mov	x1, #0x4880                	// #18560
   12564:	str	w4, [sp, #124]
   12568:	movk	x1, #0x7793, lsl #16
   1256c:	movk	x1, #0xe, lsl #32
   12570:	add	x23, x23, x1
   12574:	add	x0, x23, x0
   12578:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
   1257c:	cmn	x0, #0x1
   12580:	b.eq	12454 <PyNumber_FloorDivide@plt+0xd824>  // b.none
   12584:	cmp	x0, x27
   12588:	ldr	w4, [sp, #124]
   1258c:	cset	w20, eq  // eq = none
   12590:	b	12388 <PyNumber_FloorDivide@plt+0xd758>
   12594:	add	w1, w1, #0x1
   12598:	b	124f8 <PyNumber_FloorDivide@plt+0xd8c8>
   1259c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   125a0:	mov	w2, w28
   125a4:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   125a8:	add	x1, x1, #0xdd8
   125ac:	ldr	x0, [x0, #3968]
   125b0:	str	w4, [sp, #124]
   125b4:	mov	x27, #0xffffffffffffffff    	// #-1
   125b8:	ldr	x0, [x0]
   125bc:	bl	4b90 <PyErr_Format@plt>
   125c0:	ldr	w4, [sp, #124]
   125c4:	b	1252c <PyNumber_FloorDivide@plt+0xd8fc>
   125c8:	sub	sp, sp, #0xc0
   125cc:	stp	x29, x30, [sp, #16]
   125d0:	add	x29, sp, #0x10
   125d4:	stp	x19, x20, [sp, #32]
   125d8:	mov	x19, x1
   125dc:	mov	x20, x4
   125e0:	stp	x21, x22, [sp, #48]
   125e4:	add	x1, sp, #0x88
   125e8:	mov	x21, x0
   125ec:	stp	x23, x24, [sp, #64]
   125f0:	mov	x0, x2
   125f4:	mov	w23, w3
   125f8:	stp	x25, x26, [sp, #80]
   125fc:	mov	x25, x2
   12600:	blr	x19
   12604:	cbnz	w0, 12704 <PyNumber_FloorDivide@plt+0xdad4>
   12608:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   1260c:	stp	x27, x28, [sp, #96]
   12610:	mov	w22, w0
   12614:	ldp	w5, w28, [sp, #136]
   12618:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   1261c:	ldr	x1, [x1, #4064]
   12620:	mov	w24, #0x3b                  	// #59
   12624:	ldr	x0, [x0, #4024]
   12628:	cmp	w5, w24
   1262c:	ldr	w2, [sp, #152]
   12630:	csel	w24, w5, w24, le
   12634:	cmp	x19, x1
   12638:	ldr	w1, [sp, #156]
   1263c:	ldp	w26, w9, [sp, #144]
   12640:	ccmp	x20, x0, #0x0, eq  // eq = none
   12644:	add	w19, w2, #0x1
   12648:	add	w8, w1, #0x76c
   1264c:	b.eq	12724 <PyNumber_FloorDivide@plt+0xdaf4>  // b.none
   12650:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   12654:	add	x1, x1, #0x2a8
   12658:	add	x1, x1, #0x1a0
   1265c:	cmp	x21, x1
   12660:	b.eq	126b4 <PyNumber_FloorDivide@plt+0xda84>  // b.none
   12664:	str	w23, [sp]
   12668:	mov	w7, w24
   1266c:	str	x20, [sp, #8]
   12670:	mov	w6, w28
   12674:	mov	w5, w26
   12678:	mov	w3, w19
   1267c:	mov	w4, w9
   12680:	mov	w2, w8
   12684:	mov	x0, x21
   12688:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1268c:	add	x1, x1, #0x348
   12690:	bl	4970 <PyObject_CallFunction@plt>
   12694:	ldp	x29, x30, [sp, #16]
   12698:	ldp	x19, x20, [sp, #32]
   1269c:	ldp	x21, x22, [sp, #48]
   126a0:	ldp	x23, x24, [sp, #64]
   126a4:	ldp	x25, x26, [sp, #80]
   126a8:	ldp	x27, x28, [sp, #96]
   126ac:	add	sp, sp, #0xc0
   126b0:	ret
   126b4:	str	w22, [sp]
   126b8:	mov	x7, x20
   126bc:	str	x21, [sp, #8]
   126c0:	mov	w6, w23
   126c4:	mov	w5, w24
   126c8:	mov	w4, w28
   126cc:	mov	w3, w26
   126d0:	mov	w1, w19
   126d4:	mov	w2, w9
   126d8:	mov	w0, w8
   126dc:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   126e0:	ldp	x29, x30, [sp, #16]
   126e4:	ldp	x19, x20, [sp, #32]
   126e8:	ldp	x21, x22, [sp, #48]
   126ec:	ldp	x23, x24, [sp, #64]
   126f0:	ldp	x25, x26, [sp, #80]
   126f4:	ldp	x27, x28, [sp, #96]
   126f8:	add	sp, sp, #0xc0
   126fc:	ret
   12700:	ldp	x27, x28, [sp, #96]
   12704:	mov	x0, #0x0                   	// #0
   12708:	ldp	x29, x30, [sp, #16]
   1270c:	ldp	x19, x20, [sp, #32]
   12710:	ldp	x21, x22, [sp, #48]
   12714:	ldp	x23, x24, [sp, #64]
   12718:	ldp	x25, x26, [sp, #80]
   1271c:	add	sp, sp, #0xc0
   12720:	ret
   12724:	add	w1, w1, #0x76b
   12728:	mov	w0, #0x270e                	// #9998
   1272c:	cmp	w1, w0
   12730:	b.hi	12854 <PyNumber_FloorDivide@plt+0xdc24>  // b.pmore
   12734:	mov	w0, #0x851f                	// #34079
   12738:	asr	w3, w1, #2
   1273c:	movk	w0, #0x51eb, lsl #16
   12740:	mov	w4, #0x16d                 	// #365
   12744:	adrp	x2, 15000 <PyInit__datetime@@Base+0x1f90>
   12748:	add	x2, x2, #0x810
   1274c:	smull	x0, w1, w0
   12750:	cmp	w19, #0x2
   12754:	madd	w1, w1, w4, w3
   12758:	ldr	w2, [x2, w19, sxtw #2]
   1275c:	asr	x3, x0, #37
   12760:	asr	x0, x0, #39
   12764:	sub	w0, w0, w3
   12768:	add	w1, w0, w1
   1276c:	b.le	127b0 <PyNumber_FloorDivide@plt+0xdb80>
   12770:	tst	x8, #0x3
   12774:	b.ne	127b0 <PyNumber_FloorDivide@plt+0xdb80>  // b.any
   12778:	mov	w0, #0x5c29                	// #23593
   1277c:	mov	w3, #0x5c28                	// #23592
   12780:	movk	w0, #0xc28f, lsl #16
   12784:	movk	w3, #0x28f, lsl #16
   12788:	mul	w0, w8, w0
   1278c:	ror	w4, w0, #2
   12790:	cmp	w4, w3
   12794:	b.hi	1284c <PyNumber_FloorDivide@plt+0xdc1c>  // b.pmore
   12798:	mov	w3, #0xd70a                	// #55050
   1279c:	ror	w0, w0, #4
   127a0:	movk	w3, #0xa3, lsl #16
   127a4:	cmp	w0, w3
   127a8:	b.ls	1284c <PyNumber_FloorDivide@plt+0xdc1c>  // b.plast
   127ac:	nop
   127b0:	add	w2, w9, w2
   127b4:	sxtw	x0, w26
   127b8:	add	w1, w2, w1
   127bc:	mov	w3, #0x18                  	// #24
   127c0:	sxtw	x2, w28
   127c4:	sxtw	x27, w24
   127c8:	smaddl	x1, w1, w3, x0
   127cc:	lsl	x0, x1, #4
   127d0:	sub	x0, x0, x1
   127d4:	add	x1, x2, x0, lsl #2
   127d8:	lsl	x0, x1, #4
   127dc:	sub	x1, x0, x1
   127e0:	add	x27, x27, x1, lsl #2
   127e4:	mov	x0, #0xf700                	// #63232
   127e8:	stp	w8, w9, [sp, #120]
   127ec:	movk	x0, #0x7791, lsl #16
   127f0:	movk	x0, #0xe, lsl #32
   127f4:	add	x0, x25, x0
   127f8:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
   127fc:	cmn	x0, #0x1
   12800:	b.eq	12700 <PyNumber_FloorDivide@plt+0xdad0>  // b.none
   12804:	sub	x1, x27, #0x15, lsl #12
   12808:	sub	x1, x1, #0x180
   1280c:	ldp	w8, w9, [sp, #120]
   12810:	subs	x1, x1, x0
   12814:	b.pl	12650 <PyNumber_FloorDivide@plt+0xda20>  // b.nfrst
   12818:	mov	x0, #0x4880                	// #18560
   1281c:	stp	w8, w9, [sp, #120]
   12820:	movk	x0, #0x7793, lsl #16
   12824:	movk	x0, #0xe, lsl #32
   12828:	add	x0, x25, x0
   1282c:	add	x0, x0, x1
   12830:	bl	bc48 <PyNumber_FloorDivide@plt+0x7018>
   12834:	cmn	x0, #0x1
   12838:	b.eq	12700 <PyNumber_FloorDivide@plt+0xdad0>  // b.none
   1283c:	cmp	x0, x27
   12840:	ldp	w8, w9, [sp, #120]
   12844:	cset	w22, eq  // eq = none
   12848:	b	12650 <PyNumber_FloorDivide@plt+0xda20>
   1284c:	add	w2, w2, #0x1
   12850:	b	127b0 <PyNumber_FloorDivide@plt+0xdb80>
   12854:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12858:	mov	w2, w8
   1285c:	adrp	x1, 13000 <PyNumber_FloorDivide@plt+0xe3d0>
   12860:	add	x1, x1, #0xdd8
   12864:	ldr	x0, [x0, #3968]
   12868:	stp	w8, w9, [sp, #120]
   1286c:	mov	x27, #0xffffffffffffffff    	// #-1
   12870:	ldr	x0, [x0]
   12874:	bl	4b90 <PyErr_Format@plt>
   12878:	ldp	w8, w9, [sp, #120]
   1287c:	b	127e4 <PyNumber_FloorDivide@plt+0xdbb4>
   12880:	stp	x29, x30, [sp, #-96]!
   12884:	mov	x29, sp
   12888:	stp	x19, x20, [sp, #16]
   1288c:	adrp	x20, 28000 <PyInit__datetime@@Base+0x14f90>
   12890:	mov	x19, x0
   12894:	stp	x21, x22, [sp, #32]
   12898:	adrp	x22, 29000 <PyInit__datetime@@Base+0x15f90>
   1289c:	add	x3, x22, #0xad0
   128a0:	str	x23, [sp, #48]
   128a4:	mov	x0, x1
   128a8:	ldr	x23, [x20, #4024]
   128ac:	mov	x1, x2
   128b0:	add	x3, x3, #0x490
   128b4:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
   128b8:	add	x5, sp, #0x48
   128bc:	add	x2, x2, #0x7b0
   128c0:	add	x4, sp, #0x40
   128c4:	str	x23, [sp, #72]
   128c8:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
   128cc:	cbz	w0, 129b0 <PyNumber_FloorDivide@plt+0xdd80>
   128d0:	ldr	x21, [sp, #72]
   128d4:	cmp	x21, x23
   128d8:	b.eq	129d4 <PyNumber_FloorDivide@plt+0xdda4>  // b.none
   128dc:	ldr	x0, [x21, #8]
   128e0:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   128e4:	add	x1, x1, #0x2a8
   128e8:	add	x1, x1, #0x340
   128ec:	cmp	x0, x1
   128f0:	b.eq	129c8 <PyNumber_FloorDivide@plt+0xdd98>  // b.none
   128f4:	bl	4b60 <PyType_IsSubtype@plt>
   128f8:	cbz	w0, 12990 <PyNumber_FloorDivide@plt+0xdd60>
   128fc:	ldr	x21, [sp, #72]
   12900:	adrp	x1, 28000 <PyInit__datetime@@Base+0x14f90>
   12904:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12908:	cmp	x21, x23
   1290c:	ldr	x1, [x1, #4016]
   12910:	ldr	x23, [x0, #4064]
   12914:	csel	x23, x23, x1, eq  // eq = none
   12918:	ldr	x0, [sp, #64]
   1291c:	add	x2, sp, #0x58
   12920:	add	x1, sp, #0x50
   12924:	mov	w3, #0x2                   	// #2
   12928:	bl	47d0 <_PyTime_ObjectToTimeval@plt>
   1292c:	cmn	w0, #0x1
   12930:	b.eq	129b0 <PyNumber_FloorDivide@plt+0xdd80>  // b.none
   12934:	ldr	w3, [sp, #88]
   12938:	mov	x4, x21
   1293c:	ldr	x2, [sp, #80]
   12940:	mov	x1, x23
   12944:	mov	x0, x19
   12948:	bl	125c8 <PyNumber_FloorDivide@plt+0xd998>
   1294c:	cbz	x0, 129b0 <PyNumber_FloorDivide@plt+0xdd80>
   12950:	ldr	x20, [x20, #4024]
   12954:	ldr	x2, [sp, #72]
   12958:	cmp	x2, x20
   1295c:	b.eq	1297c <PyNumber_FloorDivide@plt+0xdd4c>  // b.none
   12960:	add	x1, x22, #0xad0
   12964:	mov	x3, x0
   12968:	add	x1, x1, #0x4a8
   1296c:	mov	x0, x2
   12970:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
   12974:	add	x2, x2, #0x7c8
   12978:	bl	4a90 <_PyObject_CallMethodId@plt>
   1297c:	ldp	x19, x20, [sp, #16]
   12980:	ldp	x21, x22, [sp, #32]
   12984:	ldr	x23, [sp, #48]
   12988:	ldp	x29, x30, [sp], #96
   1298c:	ret
   12990:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12994:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   12998:	ldr	x2, [x21, #8]
   1299c:	add	x1, x1, #0x60
   129a0:	ldr	x0, [x0, #3976]
   129a4:	ldr	x2, [x2, #24]
   129a8:	ldr	x0, [x0]
   129ac:	bl	4b90 <PyErr_Format@plt>
   129b0:	mov	x0, #0x0                   	// #0
   129b4:	ldp	x19, x20, [sp, #16]
   129b8:	ldp	x21, x22, [sp, #32]
   129bc:	ldr	x23, [sp, #48]
   129c0:	ldp	x29, x30, [sp], #96
   129c4:	ret
   129c8:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
   129cc:	ldr	x23, [x23, #4016]
   129d0:	b	12918 <PyNumber_FloorDivide@plt+0xdce8>
   129d4:	adrp	x23, 28000 <PyInit__datetime@@Base+0x14f90>
   129d8:	ldr	x23, [x23, #4064]
   129dc:	b	12918 <PyNumber_FloorDivide@plt+0xdce8>
   129e0:	sub	sp, sp, #0x60
   129e4:	stp	x29, x30, [sp, #16]
   129e8:	add	x29, sp, #0x10
   129ec:	stp	x19, x20, [sp, #32]
   129f0:	mov	x19, x0
   129f4:	mov	x0, x1
   129f8:	stp	x21, x22, [sp, #48]
   129fc:	mov	x1, x2
   12a00:	mov	x2, x3
   12a04:	cbz	x3, 12af8 <PyNumber_FloorDivide@plt+0xdec8>
   12a08:	ldr	x20, [x3, #16]
   12a0c:	add	x20, x1, x20
   12a10:	add	x3, sp, #0x50
   12a14:	str	x3, [sp]
   12a18:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
   12a1c:	add	x4, x4, #0xad0
   12a20:	mov	x3, x2
   12a24:	add	x4, x4, #0x4c0
   12a28:	mov	w7, #0x0                   	// #0
   12a2c:	mov	w6, #0x1                   	// #1
   12a30:	mov	w5, #0x0                   	// #0
   12a34:	mov	x2, #0x0                   	// #0
   12a38:	bl	4890 <_PyArg_UnpackKeywords@plt>
   12a3c:	cbz	x0, 12b38 <PyNumber_FloorDivide@plt+0xdf08>
   12a40:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
   12a44:	cbz	x20, 12b14 <PyNumber_FloorDivide@plt+0xdee4>
   12a48:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
   12a4c:	ldr	x20, [x0]
   12a50:	ldr	x0, [x21, #4024]
   12a54:	cmp	x20, x0
   12a58:	b.eq	12b14 <PyNumber_FloorDivide@plt+0xdee4>  // b.none
   12a5c:	ldr	x0, [x20, #8]
   12a60:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   12a64:	add	x1, x1, #0x2a8
   12a68:	add	x1, x1, #0x340
   12a6c:	cmp	x0, x1
   12a70:	b.eq	12a7c <PyNumber_FloorDivide@plt+0xde4c>  // b.none
   12a74:	bl	4b60 <PyType_IsSubtype@plt>
   12a78:	cbz	w0, 12b50 <PyNumber_FloorDivide@plt+0xdf20>
   12a7c:	adrp	x22, 28000 <PyInit__datetime@@Base+0x14f90>
   12a80:	ldr	x22, [x22, #4016]
   12a84:	bl	4810 <_PyTime_GetSystemClock@plt>
   12a88:	add	x2, sp, #0x4c
   12a8c:	add	x1, sp, #0x58
   12a90:	mov	w3, #0x0                   	// #0
   12a94:	bl	4860 <_PyTime_AsTimevalTime_t@plt>
   12a98:	tbnz	w0, #31, 12b38 <PyNumber_FloorDivide@plt+0xdf08>
   12a9c:	ldr	w3, [sp, #76]
   12aa0:	mov	x1, x22
   12aa4:	ldr	x2, [sp, #88]
   12aa8:	mov	x0, x19
   12aac:	mov	x4, x20
   12ab0:	bl	125c8 <PyNumber_FloorDivide@plt+0xd998>
   12ab4:	cbz	x0, 12b38 <PyNumber_FloorDivide@plt+0xdf08>
   12ab8:	ldr	x21, [x21, #4024]
   12abc:	cmp	x20, x21
   12ac0:	b.eq	12ae4 <PyNumber_FloorDivide@plt+0xdeb4>  // b.none
   12ac4:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   12ac8:	add	x1, x1, #0xad0
   12acc:	mov	x3, x0
   12ad0:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
   12ad4:	mov	x0, x20
   12ad8:	add	x1, x1, #0x4a8
   12adc:	add	x2, x2, #0x7c8
   12ae0:	bl	4a90 <_PyObject_CallMethodId@plt>
   12ae4:	ldp	x29, x30, [sp, #16]
   12ae8:	ldp	x19, x20, [sp, #32]
   12aec:	ldp	x21, x22, [sp, #48]
   12af0:	add	sp, sp, #0x60
   12af4:	ret
   12af8:	tbnz	x1, #63, 12b78 <PyNumber_FloorDivide@plt+0xdf48>
   12afc:	cmp	x0, #0x0
   12b00:	mov	x20, x1
   12b04:	ccmp	x1, #0x1, #0x0, ne  // ne = any
   12b08:	b.gt	12a10 <PyNumber_FloorDivide@plt+0xdde0>
   12b0c:	adrp	x21, 28000 <PyInit__datetime@@Base+0x14f90>
   12b10:	cbnz	x20, 12a48 <PyNumber_FloorDivide@plt+0xde18>
   12b14:	adrp	x22, 28000 <PyInit__datetime@@Base+0x14f90>
   12b18:	ldr	x20, [x21, #4024]
   12b1c:	ldr	x22, [x22, #4064]
   12b20:	bl	4810 <_PyTime_GetSystemClock@plt>
   12b24:	add	x2, sp, #0x4c
   12b28:	add	x1, sp, #0x58
   12b2c:	mov	w3, #0x0                   	// #0
   12b30:	bl	4860 <_PyTime_AsTimevalTime_t@plt>
   12b34:	tbz	w0, #31, 12a9c <PyNumber_FloorDivide@plt+0xde6c>
   12b38:	mov	x0, #0x0                   	// #0
   12b3c:	ldp	x29, x30, [sp, #16]
   12b40:	ldp	x19, x20, [sp, #32]
   12b44:	ldp	x21, x22, [sp, #48]
   12b48:	add	sp, sp, #0x60
   12b4c:	ret
   12b50:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12b54:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   12b58:	ldr	x2, [x20, #8]
   12b5c:	add	x1, x1, #0x60
   12b60:	ldr	x0, [x0, #3976]
   12b64:	ldr	x2, [x2, #24]
   12b68:	ldr	x0, [x0]
   12b6c:	bl	4b90 <PyErr_Format@plt>
   12b70:	mov	x0, #0x0                   	// #0
   12b74:	b	12ae4 <PyNumber_FloorDivide@plt+0xdeb4>
   12b78:	add	x2, sp, #0x50
   12b7c:	str	x2, [sp]
   12b80:	adrp	x4, 29000 <PyInit__datetime@@Base+0x15f90>
   12b84:	add	x4, x4, #0xad0
   12b88:	add	x4, x4, #0x4c0
   12b8c:	mov	w7, #0x0                   	// #0
   12b90:	mov	w6, #0x1                   	// #1
   12b94:	mov	w5, #0x0                   	// #0
   12b98:	mov	x2, #0x0                   	// #0
   12b9c:	bl	4890 <_PyArg_UnpackKeywords@plt>
   12ba0:	cbnz	x0, 12a48 <PyNumber_FloorDivide@plt+0xde18>
   12ba4:	mov	x0, #0x0                   	// #0
   12ba8:	b	12b3c <PyNumber_FloorDivide@plt+0xdf0c>
   12bac:	nop
   12bb0:	sub	sp, sp, #0x60
   12bb4:	add	x4, sp, #0x58
   12bb8:	stp	x29, x30, [sp, #16]
   12bbc:	add	x29, sp, #0x10
   12bc0:	stp	x21, x22, [sp, #48]
   12bc4:	adrp	x22, 28000 <PyInit__datetime@@Base+0x14f90>
   12bc8:	stp	x19, x20, [sp, #32]
   12bcc:	mov	x19, x0
   12bd0:	mov	x0, x1
   12bd4:	ldr	x20, [x22, #4024]
   12bd8:	stp	x23, x24, [sp, #64]
   12bdc:	adrp	x23, 29000 <PyInit__datetime@@Base+0x15f90>
   12be0:	add	x3, x23, #0xad0
   12be4:	mov	x1, x2
   12be8:	add	x3, x3, #0x500
   12bec:	adrp	x2, 14000 <PyInit__datetime@@Base+0xf90>
   12bf0:	add	x2, x2, #0x7d0
   12bf4:	str	x20, [sp, #88]
   12bf8:	bl	4770 <PyArg_ParseTupleAndKeywords@plt>
   12bfc:	cbz	w0, 12dd0 <PyNumber_FloorDivide@plt+0xe1a0>
   12c00:	ldr	x21, [sp, #88]
   12c04:	cmp	x21, x20
   12c08:	b.eq	12c2c <PyNumber_FloorDivide@plt+0xdffc>  // b.none
   12c0c:	ldr	x0, [x21, #8]
   12c10:	adrp	x1, 29000 <PyInit__datetime@@Base+0x15f90>
   12c14:	add	x1, x1, #0x2a8
   12c18:	add	x1, x1, #0x340
   12c1c:	cmp	x0, x1
   12c20:	b.eq	12c2c <PyNumber_FloorDivide@plt+0xdffc>  // b.none
   12c24:	bl	4b60 <PyType_IsSubtype@plt>
   12c28:	cbz	w0, 12f24 <PyNumber_FloorDivide@plt+0xe2f4>
   12c2c:	ldrb	w0, [x19, #24]
   12c30:	cbz	w0, 12d80 <PyNumber_FloorDivide@plt+0xe150>
   12c34:	ldr	x0, [x22, #4024]
   12c38:	ldr	x20, [x19, #40]
   12c3c:	cmp	x20, x0
   12c40:	b.eq	12d80 <PyNumber_FloorDivide@plt+0xe150>  // b.none
   12c44:	ldr	x0, [x20]
   12c48:	add	x0, x0, #0x1
   12c4c:	str	x0, [x20]
   12c50:	ldr	x0, [sp, #88]
   12c54:	cmp	x0, x20
   12c58:	b.eq	12e7c <PyNumber_FloorDivide@plt+0xe24c>  // b.none
   12c5c:	mov	x1, x19
   12c60:	mov	x0, x20
   12c64:	bl	b0f0 <PyNumber_FloorDivide@plt+0x64c0>
   12c68:	mov	x21, x0
   12c6c:	ldr	x1, [x20]
   12c70:	sub	x0, x1, #0x1
   12c74:	str	x0, [x20]
   12c78:	cbz	x0, 12df0 <PyNumber_FloorDivide@plt+0xe1c0>
   12c7c:	cbz	x21, 12dd0 <PyNumber_FloorDivide@plt+0xe1a0>
   12c80:	ldr	x0, [x22, #4024]
   12c84:	cmp	x21, x0
   12c88:	b.eq	12d68 <PyNumber_FloorDivide@plt+0xe138>  // b.none
   12c8c:	ldr	x0, [x21, #8]
   12c90:	adrp	x24, 29000 <PyInit__datetime@@Base+0x15f90>
   12c94:	add	x1, x24, #0x2a8
   12c98:	cmp	x0, x1
   12c9c:	b.eq	12ca8 <PyNumber_FloorDivide@plt+0xe078>  // b.none
   12ca0:	bl	4b60 <PyType_IsSubtype@plt>
   12ca4:	cbz	w0, 12ee0 <PyNumber_FloorDivide@plt+0xe2b0>
   12ca8:	mov	x0, x19
   12cac:	mov	x1, x21
   12cb0:	mov	w2, #0xffffffff            	// #-1
   12cb4:	bl	dc20 <PyNumber_FloorDivide@plt+0x8ff0>
   12cb8:	ldr	x1, [x21]
   12cbc:	mov	x19, x0
   12cc0:	sub	x0, x1, #0x1
   12cc4:	str	x0, [x21]
   12cc8:	cbz	x0, 12dfc <PyNumber_FloorDivide@plt+0xe1cc>
   12ccc:	cbz	x19, 12dd0 <PyNumber_FloorDivide@plt+0xe1a0>
   12cd0:	ldrb	w0, [x19, #24]
   12cd4:	adrp	x21, 2a000 <PyInit__datetime@@Base+0x16f90>
   12cd8:	ldr	x20, [x21, #4056]
   12cdc:	cbz	w0, 12e08 <PyNumber_FloorDivide@plt+0xe1d8>
   12ce0:	ldr	x1, [x20]
   12ce4:	ldr	x0, [x19, #40]
   12ce8:	str	x20, [x19, #40]
   12cec:	add	x1, x1, #0x1
   12cf0:	str	x1, [x20]
   12cf4:	ldr	x1, [x0]
   12cf8:	sub	x1, x1, #0x1
   12cfc:	str	x1, [x0]
   12d00:	cbz	x1, 12ed4 <PyNumber_FloorDivide@plt+0xe2a4>
   12d04:	ldr	x22, [x22, #4024]
   12d08:	ldr	x0, [sp, #88]
   12d0c:	cmp	x0, x22
   12d10:	b.eq	12f38 <PyNumber_FloorDivide@plt+0xe308>  // b.none
   12d14:	ldr	x1, [x0]
   12d18:	add	x1, x1, #0x1
   12d1c:	str	x1, [x0]
   12d20:	ldr	x1, [x20]
   12d24:	str	x0, [x19, #40]
   12d28:	sub	x1, x1, #0x1
   12d2c:	str	x1, [x20]
   12d30:	cbz	x1, 12eb8 <PyNumber_FloorDivide@plt+0xe288>
   12d34:	add	x1, x23, #0xad0
   12d38:	mov	x2, x19
   12d3c:	add	x1, x1, #0x4a8
   12d40:	mov	x3, #0x0                   	// #0
   12d44:	bl	4b10 <_PyObject_CallMethodIdObjArgs@plt>
   12d48:	mov	x20, x0
   12d4c:	ldr	x1, [x19]
   12d50:	sub	x0, x1, #0x1
   12d54:	str	x0, [x19]
   12d58:	cbnz	x0, 12dd4 <PyNumber_FloorDivide@plt+0xe1a4>
   12d5c:	mov	x0, x19
   12d60:	bl	4830 <_Py_Dealloc@plt>
   12d64:	b	12dd4 <PyNumber_FloorDivide@plt+0xe1a4>
   12d68:	ldr	x0, [x21]
   12d6c:	sub	x0, x0, #0x1
   12d70:	str	x0, [x21]
   12d74:	cbnz	x0, 12d80 <PyNumber_FloorDivide@plt+0xe150>
   12d78:	mov	x0, x21
   12d7c:	bl	4830 <_Py_Dealloc@plt>
   12d80:	ldrb	w6, [x19, #35]
   12d84:	ldrb	w5, [x19, #31]
   12d88:	ldrb	w4, [x19, #30]
   12d8c:	ldrb	w3, [x19, #29]
   12d90:	ldrb	w2, [x19, #28]
   12d94:	ldrb	w1, [x19, #27]
   12d98:	ldurh	w0, [x19, #25]
   12d9c:	rev16	w0, w0
   12da0:	and	w0, w0, #0xffff
   12da4:	bl	c1c8 <PyNumber_FloorDivide@plt+0x7598>
   12da8:	cmn	x0, #0x1
   12dac:	b.eq	12dd0 <PyNumber_FloorDivide@plt+0xe1a0>  // b.none
   12db0:	mov	x1, #0xffffffffffffb780    	// #-18560
   12db4:	movk	x1, #0x886c, lsl #16
   12db8:	movk	x1, #0xfff1, lsl #32
   12dbc:	add	x0, x0, x1
   12dc0:	bl	dab0 <PyNumber_FloorDivide@plt+0x8e80>
   12dc4:	mov	x20, x0
   12dc8:	cbnz	x0, 12c50 <PyNumber_FloorDivide@plt+0xe020>
   12dcc:	nop
   12dd0:	mov	x20, #0x0                   	// #0
   12dd4:	mov	x0, x20
   12dd8:	ldp	x29, x30, [sp, #16]
   12ddc:	ldp	x19, x20, [sp, #32]
   12de0:	ldp	x21, x22, [sp, #48]
   12de4:	ldp	x23, x24, [sp, #64]
   12de8:	add	sp, sp, #0x60
   12dec:	ret
   12df0:	mov	x0, x20
   12df4:	bl	4830 <_Py_Dealloc@plt>
   12df8:	b	12c7c <PyNumber_FloorDivide@plt+0xe04c>
   12dfc:	mov	x0, x21
   12e00:	bl	4830 <_Py_Dealloc@plt>
   12e04:	b	12ccc <PyNumber_FloorDivide@plt+0xe09c>
   12e08:	ldrb	w0, [x19, #33]
   12e0c:	mov	x7, x20
   12e10:	ldrb	w3, [x19, #32]
   12e14:	ldrb	w1, [x19, #27]
   12e18:	lsl	w6, w0, #8
   12e1c:	ldrb	w9, [x19, #35]
   12e20:	orr	w3, w6, w3, lsl #16
   12e24:	ldrb	w6, [x19, #34]
   12e28:	ldrb	w2, [x19, #28]
   12e2c:	ldrb	w4, [x19, #30]
   12e30:	orr	w6, w3, w6
   12e34:	ldrb	w5, [x19, #31]
   12e38:	ldrb	w3, [x19, #29]
   12e3c:	ldr	x8, [x19, #8]
   12e40:	ldurh	w0, [x19, #25]
   12e44:	str	w9, [sp]
   12e48:	str	x8, [sp, #8]
   12e4c:	rev16	w0, w0
   12e50:	and	w0, w0, #0xffff
   12e54:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   12e58:	mov	x20, x0
   12e5c:	ldr	x1, [x19]
   12e60:	sub	x0, x1, #0x1
   12e64:	str	x0, [x19]
   12e68:	cbz	x0, 12f18 <PyNumber_FloorDivide@plt+0xe2e8>
   12e6c:	cbz	x20, 12dd0 <PyNumber_FloorDivide@plt+0xe1a0>
   12e70:	mov	x19, x20
   12e74:	ldr	x20, [x20, #40]
   12e78:	b	12d04 <PyNumber_FloorDivide@plt+0xe0d4>
   12e7c:	ldr	x0, [x20]
   12e80:	sub	x0, x0, #0x1
   12e84:	str	x0, [x20]
   12e88:	cbz	x0, 12ec8 <PyNumber_FloorDivide@plt+0xe298>
   12e8c:	ldr	x0, [x19]
   12e90:	mov	x20, x19
   12e94:	ldp	x29, x30, [sp, #16]
   12e98:	add	x0, x0, #0x1
   12e9c:	str	x0, [x19]
   12ea0:	mov	x0, x20
   12ea4:	ldp	x19, x20, [sp, #32]
   12ea8:	ldp	x21, x22, [sp, #48]
   12eac:	ldp	x23, x24, [sp, #64]
   12eb0:	add	sp, sp, #0x60
   12eb4:	ret
   12eb8:	mov	x0, x20
   12ebc:	bl	4830 <_Py_Dealloc@plt>
   12ec0:	ldr	x0, [sp, #88]
   12ec4:	b	12d34 <PyNumber_FloorDivide@plt+0xe104>
   12ec8:	mov	x0, x20
   12ecc:	bl	4830 <_Py_Dealloc@plt>
   12ed0:	b	12e8c <PyNumber_FloorDivide@plt+0xe25c>
   12ed4:	bl	4830 <_Py_Dealloc@plt>
   12ed8:	ldr	x20, [x19, #40]
   12edc:	b	12d04 <PyNumber_FloorDivide@plt+0xe0d4>
   12ee0:	ldr	x0, [x21]
   12ee4:	sub	x0, x0, #0x1
   12ee8:	str	x0, [x21]
   12eec:	cbz	x0, 13038 <PyNumber_FloorDivide@plt+0xe408>
   12ef0:	ldr	x2, [x21, #8]
   12ef4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   12ef8:	add	x1, x1, #0x7e0
   12efc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12f00:	ldr	x0, [x0, #3976]
   12f04:	mov	x20, #0x0                   	// #0
   12f08:	ldr	x2, [x2, #24]
   12f0c:	ldr	x0, [x0]
   12f10:	bl	4b90 <PyErr_Format@plt>
   12f14:	b	12dd4 <PyNumber_FloorDivide@plt+0xe1a4>
   12f18:	mov	x0, x19
   12f1c:	bl	4830 <_Py_Dealloc@plt>
   12f20:	b	12e6c <PyNumber_FloorDivide@plt+0xe23c>
   12f24:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   12f28:	adrp	x0, 28000 <PyInit__datetime@@Base+0x14f90>
   12f2c:	add	x1, x1, #0x60
   12f30:	ldr	x2, [x21, #8]
   12f34:	b	12f00 <PyNumber_FloorDivide@plt+0xe2d0>
   12f38:	add	x21, x21, #0xfd8
   12f3c:	mov	x0, x19
   12f40:	ldr	x1, [x21, #72]
   12f44:	bl	10860 <PyNumber_FloorDivide@plt+0xbc30>
   12f48:	mov	x22, x0
   12f4c:	cbz	x0, 13030 <PyNumber_FloorDivide@plt+0xe400>
   12f50:	add	x0, x24, #0x2a8
   12f54:	mov	x1, #0x0                   	// #0
   12f58:	ldr	x2, [x0, #304]
   12f5c:	blr	x2
   12f60:	mov	x21, x0
   12f64:	cbz	x0, 13014 <PyNumber_FloorDivide@plt+0xe3e4>
   12f68:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
   12f6c:	str	wzr, [x21, #32]
   12f70:	mov	x1, x21
   12f74:	ldr	d0, [x0, #2000]
   12f78:	mov	x0, #0xffffffffffffffff    	// #-1
   12f7c:	str	x0, [x21, #16]
   12f80:	mov	x0, x22
   12f84:	str	d0, [x21, #24]
   12f88:	bl	6338 <PyNumber_FloorDivide@plt+0x1708>
   12f8c:	ldr	x1, [x21]
   12f90:	mov	x24, x0
   12f94:	sub	x0, x1, #0x1
   12f98:	str	x0, [x21]
   12f9c:	cbz	x0, 13044 <PyNumber_FloorDivide@plt+0xe414>
   12fa0:	ldr	x0, [x22]
   12fa4:	sub	x0, x0, #0x1
   12fa8:	str	x0, [x22]
   12fac:	cbz	x0, 13008 <PyNumber_FloorDivide@plt+0xe3d8>
   12fb0:	cbz	x24, 13030 <PyNumber_FloorDivide@plt+0xe400>
   12fb4:	mov	x0, x24
   12fb8:	bl	4ad0 <_PyLong_AsTime_t@plt>
   12fbc:	ldr	x1, [x24]
   12fc0:	mov	x21, x0
   12fc4:	sub	x1, x1, #0x1
   12fc8:	str	x1, [x24]
   12fcc:	cbz	x1, 13060 <PyNumber_FloorDivide@plt+0xe430>
   12fd0:	cmn	x21, #0x1
   12fd4:	b.eq	13050 <PyNumber_FloorDivide@plt+0xe420>  // b.none
   12fd8:	mov	x0, x21
   12fdc:	bl	dab0 <PyNumber_FloorDivide@plt+0x8e80>
   12fe0:	str	x0, [sp, #88]
   12fe4:	cbnz	x0, 12d20 <PyNumber_FloorDivide@plt+0xe0f0>
   12fe8:	ldr	x0, [x19]
   12fec:	sub	x0, x0, #0x1
   12ff0:	str	x0, [x19]
   12ff4:	cbnz	x0, 12dd0 <PyNumber_FloorDivide@plt+0xe1a0>
   12ff8:	mov	x0, x19
   12ffc:	mov	x20, #0x0                   	// #0
   13000:	bl	4830 <_Py_Dealloc@plt>
   13004:	b	12dd4 <PyNumber_FloorDivide@plt+0xe1a4>
   13008:	mov	x0, x22
   1300c:	bl	4830 <_Py_Dealloc@plt>
   13010:	b	12fb0 <PyNumber_FloorDivide@plt+0xe380>
   13014:	ldr	x0, [x22]
   13018:	sub	x0, x0, #0x1
   1301c:	str	x0, [x22]
   13020:	cbnz	x0, 13030 <PyNumber_FloorDivide@plt+0xe400>
   13024:	mov	x0, x22
   13028:	bl	4830 <_Py_Dealloc@plt>
   1302c:	nop
   13030:	str	xzr, [sp, #88]
   13034:	b	12fe8 <PyNumber_FloorDivide@plt+0xe3b8>
   13038:	mov	x0, x21
   1303c:	bl	4830 <_Py_Dealloc@plt>
   13040:	b	12ef0 <PyNumber_FloorDivide@plt+0xe2c0>
   13044:	mov	x0, x21
   13048:	bl	4830 <_Py_Dealloc@plt>
   1304c:	b	12fa0 <PyNumber_FloorDivide@plt+0xe370>
   13050:	bl	49d0 <PyErr_Occurred@plt>
   13054:	cbz	x0, 12fd8 <PyNumber_FloorDivide@plt+0xe3a8>
   13058:	str	xzr, [sp, #88]
   1305c:	b	12fe8 <PyNumber_FloorDivide@plt+0xe3b8>
   13060:	mov	x0, x24
   13064:	bl	4830 <_Py_Dealloc@plt>
   13068:	b	12fd0 <PyNumber_FloorDivide@plt+0xe3a0>
   1306c:	nop

0000000000013070 <PyInit__datetime@@Base>:
   13070:	sub	sp, sp, #0x70
   13074:	mov	w1, #0x3f5                 	// #1013
   13078:	stp	x29, x30, [sp, #16]
   1307c:	add	x29, sp, #0x10
   13080:	stp	x21, x22, [sp, #48]
   13084:	stp	x23, x24, [sp, #64]
   13088:	adrp	x23, 29000 <PyInit__datetime@@Base+0x15f90>
   1308c:	add	x21, x23, #0xad0
   13090:	add	x0, x21, #0x510
   13094:	stp	x19, x20, [sp, #32]
   13098:	bl	49e0 <PyModule_Create2@plt>
   1309c:	cbz	x0, 138b0 <PyInit__datetime@@Base+0x840>
   130a0:	adrp	x22, 29000 <PyInit__datetime@@Base+0x15f90>
   130a4:	add	x20, x22, #0x2a8
   130a8:	mov	x19, x0
   130ac:	add	x0, x20, #0x680
   130b0:	bl	4910 <PyType_Ready@plt>
   130b4:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   130b8:	add	x0, x20, #0x1a0
   130bc:	bl	4910 <PyType_Ready@plt>
   130c0:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   130c4:	mov	x0, x20
   130c8:	bl	4910 <PyType_Ready@plt>
   130cc:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   130d0:	add	x0, x20, #0x4e0
   130d4:	bl	4910 <PyType_Ready@plt>
   130d8:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   130dc:	add	x0, x20, #0x340
   130e0:	bl	4910 <PyType_Ready@plt>
   130e4:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   130e8:	add	x0, x21, #0x78
   130ec:	bl	4910 <PyType_Ready@plt>
   130f0:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   130f4:	ldr	x2, [x20, #304]
   130f8:	mov	x0, x20
   130fc:	mov	x1, #0x0                   	// #0
   13100:	ldr	x21, [x20, #264]
   13104:	blr	x2
   13108:	mov	x20, x0
   1310c:	cbz	x0, 138b0 <PyInit__datetime@@Base+0x840>
   13110:	mov	x1, #0xffffffffffffffff    	// #-1
   13114:	mov	w0, #0x1                   	// #1
   13118:	str	x1, [x20, #16]
   1311c:	adrp	x24, 14000 <PyInit__datetime@@Base+0xf90>
   13120:	str	xzr, [x20, #24]
   13124:	mov	x2, x20
   13128:	str	w0, [x20, #32]
   1312c:	add	x1, x24, #0x818
   13130:	mov	x0, x21
   13134:	bl	4740 <PyDict_SetItemString@plt>
   13138:	tbnz	w0, #31, 138b0 <PyInit__datetime@@Base+0x840>
   1313c:	ldr	x0, [x20]
   13140:	sub	x0, x0, #0x1
   13144:	str	x0, [x20]
   13148:	cbz	x0, 138f0 <PyInit__datetime@@Base+0x880>
   1314c:	add	x0, x22, #0x2a8
   13150:	mov	x1, #0x0                   	// #0
   13154:	ldr	x2, [x0, #304]
   13158:	blr	x2
   1315c:	mov	x20, x0
   13160:	cbz	x0, 138b0 <PyInit__datetime@@Base+0x840>
   13164:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
   13168:	stp	x25, x26, [sp, #80]
   1316c:	mov	x2, x20
   13170:	ldr	d0, [x0, #2008]
   13174:	mov	x0, #0xffffffffffffffff    	// #-1
   13178:	str	x0, [x20, #16]
   1317c:	adrp	x25, 14000 <PyInit__datetime@@Base+0xf90>
   13180:	str	wzr, [x20, #32]
   13184:	add	x1, x25, #0x828
   13188:	mov	x0, x21
   1318c:	str	d0, [x20, #24]
   13190:	bl	4740 <PyDict_SetItemString@plt>
   13194:	tbnz	w0, #31, 138d0 <PyInit__datetime@@Base+0x860>
   13198:	ldr	x0, [x20]
   1319c:	sub	x0, x0, #0x1
   131a0:	str	x0, [x20]
   131a4:	cbz	x0, 138fc <PyInit__datetime@@Base+0x88c>
   131a8:	add	x0, x22, #0x2a8
   131ac:	mov	x1, #0x0                   	// #0
   131b0:	ldr	x2, [x0, #304]
   131b4:	blr	x2
   131b8:	mov	x20, x0
   131bc:	cbz	x0, 138d0 <PyInit__datetime@@Base+0x860>
   131c0:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
   131c4:	mov	x1, #0xffffffffffffffff    	// #-1
   131c8:	str	x1, [x20, #16]
   131cc:	mov	x2, x20
   131d0:	ldr	d0, [x0, #2016]
   131d4:	mov	w0, #0x423f                	// #16959
   131d8:	movk	w0, #0xf, lsl #16
   131dc:	str	w0, [x20, #32]
   131e0:	mov	x0, x21
   131e4:	adrp	x21, 14000 <PyInit__datetime@@Base+0xf90>
   131e8:	add	x1, x21, #0x830
   131ec:	str	d0, [x20, #24]
   131f0:	bl	4740 <PyDict_SetItemString@plt>
   131f4:	tbnz	w0, #31, 138d0 <PyInit__datetime@@Base+0x860>
   131f8:	ldr	x0, [x20]
   131fc:	sub	x0, x0, #0x1
   13200:	str	x0, [x20]
   13204:	cbz	x0, 138d8 <PyInit__datetime@@Base+0x868>
   13208:	add	x0, x22, #0x2a8
   1320c:	mov	x1, #0x0                   	// #0
   13210:	add	x0, x0, #0x680
   13214:	ldr	x2, [x0, #304]
   13218:	ldr	x26, [x0, #264]
   1321c:	blr	x2
   13220:	mov	x20, x0
   13224:	cbz	x0, 138d0 <PyInit__datetime@@Base+0x860>
   13228:	mov	w0, #0x100                 	// #256
   1322c:	mov	x1, #0xffffffffffffffff    	// #-1
   13230:	movk	w0, #0x101, lsl #16
   13234:	str	x1, [x20, #16]
   13238:	stur	w0, [x20, #25]
   1323c:	mov	x2, x20
   13240:	add	x1, x25, #0x828
   13244:	mov	x0, x26
   13248:	bl	4740 <PyDict_SetItemString@plt>
   1324c:	tbnz	w0, #31, 138d0 <PyInit__datetime@@Base+0x860>
   13250:	ldr	x0, [x20]
   13254:	sub	x0, x0, #0x1
   13258:	str	x0, [x20]
   1325c:	cbz	x0, 138e4 <PyInit__datetime@@Base+0x874>
   13260:	add	x0, x22, #0x2a8
   13264:	mov	x1, #0x0                   	// #0
   13268:	add	x0, x0, #0x680
   1326c:	ldr	x2, [x0, #304]
   13270:	blr	x2
   13274:	mov	x20, x0
   13278:	cbz	x0, 138d0 <PyInit__datetime@@Base+0x860>
   1327c:	mov	w0, #0xf27                 	// #3879
   13280:	mov	x1, #0xffffffffffffffff    	// #-1
   13284:	movk	w0, #0x1f0c, lsl #16
   13288:	str	x1, [x20, #16]
   1328c:	stur	w0, [x20, #25]
   13290:	mov	x2, x20
   13294:	add	x1, x21, #0x830
   13298:	mov	x0, x26
   1329c:	bl	4740 <PyDict_SetItemString@plt>
   132a0:	tbnz	w0, #31, 138d0 <PyInit__datetime@@Base+0x860>
   132a4:	ldr	x0, [x20]
   132a8:	sub	x0, x0, #0x1
   132ac:	str	x0, [x20]
   132b0:	cbz	x0, 13908 <PyInit__datetime@@Base+0x898>
   132b4:	add	x0, x22, #0x2a8
   132b8:	mov	x1, #0x0                   	// #0
   132bc:	ldr	x2, [x0, #304]
   132c0:	blr	x2
   132c4:	mov	x20, x0
   132c8:	cbz	x0, 138d0 <PyInit__datetime@@Base+0x860>
   132cc:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
   132d0:	str	wzr, [x20, #32]
   132d4:	mov	x2, x20
   132d8:	add	x1, x24, #0x818
   132dc:	ldr	d0, [x0, #2024]
   132e0:	mov	x0, #0xffffffffffffffff    	// #-1
   132e4:	str	x0, [x20, #16]
   132e8:	mov	x0, x26
   132ec:	str	d0, [x20, #24]
   132f0:	bl	4740 <PyDict_SetItemString@plt>
   132f4:	tbnz	w0, #31, 138d0 <PyInit__datetime@@Base+0x860>
   132f8:	ldr	x0, [x20]
   132fc:	str	x27, [sp, #96]
   13300:	sub	x0, x0, #0x1
   13304:	str	x0, [x20]
   13308:	cbz	x0, 13914 <PyInit__datetime@@Base+0x8a4>
   1330c:	adrp	x26, 28000 <PyInit__datetime@@Base+0x14f90>
   13310:	add	x6, x22, #0x2a8
   13314:	add	x6, x6, #0x4e0
   13318:	mov	w5, #0x0                   	// #0
   1331c:	ldr	x4, [x26, #4024]
   13320:	mov	w3, #0x0                   	// #0
   13324:	mov	w2, #0x0                   	// #0
   13328:	mov	w1, #0x0                   	// #0
   1332c:	mov	w0, #0x0                   	// #0
   13330:	ldr	x27, [x6, #264]
   13334:	bl	7de8 <PyNumber_FloorDivide@plt+0x31b8>
   13338:	mov	x20, x0
   1333c:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   13340:	mov	x2, x0
   13344:	add	x1, x25, #0x828
   13348:	mov	x0, x27
   1334c:	bl	4740 <PyDict_SetItemString@plt>
   13350:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   13354:	ldr	x0, [x20]
   13358:	sub	x0, x0, #0x1
   1335c:	str	x0, [x20]
   13360:	cbz	x0, 13920 <PyInit__datetime@@Base+0x8b0>
   13364:	ldr	x4, [x26, #4024]
   13368:	add	x6, x22, #0x2a8
   1336c:	mov	w3, #0x423f                	// #16959
   13370:	mov	w2, #0x3b                  	// #59
   13374:	add	x6, x6, #0x4e0
   13378:	mov	w1, w2
   1337c:	movk	w3, #0xf, lsl #16
   13380:	mov	w5, #0x0                   	// #0
   13384:	mov	w0, #0x17                  	// #23
   13388:	bl	7de8 <PyNumber_FloorDivide@plt+0x31b8>
   1338c:	mov	x20, x0
   13390:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   13394:	mov	x2, x0
   13398:	add	x1, x21, #0x830
   1339c:	mov	x0, x27
   133a0:	bl	4740 <PyDict_SetItemString@plt>
   133a4:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   133a8:	ldr	x0, [x20]
   133ac:	sub	x0, x0, #0x1
   133b0:	str	x0, [x20]
   133b4:	cbz	x0, 1392c <PyInit__datetime@@Base+0x8bc>
   133b8:	add	x0, x22, #0x2a8
   133bc:	mov	x1, #0x0                   	// #0
   133c0:	ldr	x2, [x0, #304]
   133c4:	blr	x2
   133c8:	mov	x20, x0
   133cc:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   133d0:	mov	x0, #0xffffffffffffffff    	// #-1
   133d4:	mov	w1, #0x1                   	// #1
   133d8:	str	x0, [x20, #16]
   133dc:	mov	x2, x20
   133e0:	str	xzr, [x20, #24]
   133e4:	mov	x0, x27
   133e8:	str	w1, [x20, #32]
   133ec:	add	x1, x24, #0x818
   133f0:	bl	4740 <PyDict_SetItemString@plt>
   133f4:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   133f8:	ldr	x0, [x20]
   133fc:	sub	x0, x0, #0x1
   13400:	str	x0, [x20]
   13404:	cbz	x0, 13938 <PyInit__datetime@@Base+0x8c8>
   13408:	add	x8, x22, #0x2a8
   1340c:	str	wzr, [sp]
   13410:	ldr	x7, [x26, #4024]
   13414:	add	x8, x8, #0x1a0
   13418:	str	x8, [sp, #8]
   1341c:	mov	w2, #0x1                   	// #1
   13420:	mov	w6, #0x0                   	// #0
   13424:	mov	w1, w2
   13428:	mov	w0, w2
   1342c:	mov	w5, #0x0                   	// #0
   13430:	mov	w4, #0x0                   	// #0
   13434:	mov	w3, #0x0                   	// #0
   13438:	ldr	x27, [x8, #264]
   1343c:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   13440:	mov	x20, x0
   13444:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   13448:	mov	x2, x0
   1344c:	add	x1, x25, #0x828
   13450:	mov	x0, x27
   13454:	bl	4740 <PyDict_SetItemString@plt>
   13458:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   1345c:	ldr	x0, [x20]
   13460:	sub	x0, x0, #0x1
   13464:	str	x0, [x20]
   13468:	cbz	x0, 13944 <PyInit__datetime@@Base+0x8d4>
   1346c:	ldr	x7, [x26, #4024]
   13470:	add	x0, x22, #0x2a8
   13474:	add	x0, x0, #0x1a0
   13478:	str	wzr, [sp]
   1347c:	str	x0, [sp, #8]
   13480:	mov	w6, #0x423f                	// #16959
   13484:	mov	w5, #0x3b                  	// #59
   13488:	movk	w6, #0xf, lsl #16
   1348c:	mov	w4, w5
   13490:	mov	w3, #0x17                  	// #23
   13494:	mov	w2, #0x1f                  	// #31
   13498:	mov	w1, #0xc                   	// #12
   1349c:	mov	w0, #0x270f                	// #9999
   134a0:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   134a4:	mov	x20, x0
   134a8:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   134ac:	mov	x2, x0
   134b0:	add	x1, x21, #0x830
   134b4:	mov	x0, x27
   134b8:	bl	4740 <PyDict_SetItemString@plt>
   134bc:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   134c0:	ldr	x0, [x20]
   134c4:	sub	x0, x0, #0x1
   134c8:	str	x0, [x20]
   134cc:	cbz	x0, 13950 <PyInit__datetime@@Base+0x8e0>
   134d0:	add	x0, x22, #0x2a8
   134d4:	mov	x1, #0x0                   	// #0
   134d8:	ldr	x2, [x0, #304]
   134dc:	blr	x2
   134e0:	mov	x20, x0
   134e4:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   134e8:	mov	x0, #0xffffffffffffffff    	// #-1
   134ec:	mov	w2, #0x1                   	// #1
   134f0:	str	x0, [x20, #16]
   134f4:	add	x1, x24, #0x818
   134f8:	str	xzr, [x20, #24]
   134fc:	mov	x0, x27
   13500:	str	w2, [x20, #32]
   13504:	mov	x2, x20
   13508:	bl	4740 <PyDict_SetItemString@plt>
   1350c:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   13510:	ldr	x0, [x20]
   13514:	sub	x0, x0, #0x1
   13518:	str	x0, [x20]
   1351c:	cbz	x0, 1395c <PyInit__datetime@@Base+0x8ec>
   13520:	add	x0, x22, #0x2a8
   13524:	add	x24, x23, #0xad0
   13528:	mov	x1, #0x0                   	// #0
   1352c:	add	x24, x24, #0x78
   13530:	ldr	x2, [x0, #304]
   13534:	ldr	x26, [x24, #264]
   13538:	blr	x2
   1353c:	mov	x20, x0
   13540:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   13544:	ldr	x2, [x24, #304]
   13548:	mov	x0, #0xffffffffffffffff    	// #-1
   1354c:	str	x0, [x20, #16]
   13550:	mov	x1, #0x0                   	// #0
   13554:	str	xzr, [x20, #24]
   13558:	mov	x0, x24
   1355c:	str	wzr, [x20, #32]
   13560:	blr	x2
   13564:	mov	x24, x0
   13568:	ldr	x0, [x20]
   1356c:	cbz	x24, 139a4 <PyInit__datetime@@Base+0x934>
   13570:	stp	x20, xzr, [x24, #16]
   13574:	str	x0, [x20]
   13578:	cbz	x0, 13968 <PyInit__datetime@@Base+0x8f8>
   1357c:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   13580:	mov	x2, x24
   13584:	add	x1, x1, #0x838
   13588:	mov	x0, x26
   1358c:	bl	4740 <PyDict_SetItemString@plt>
   13590:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   13594:	add	x27, x23, #0xad0
   13598:	adrp	x20, 2a000 <PyInit__datetime@@Base+0x16f90>
   1359c:	add	x4, x22, #0x2a8
   135a0:	mov	w3, #0x1                   	// #1
   135a4:	str	x24, [x20, #4056]
   135a8:	mov	w2, #0x0                   	// #0
   135ac:	mov	w1, #0x3c                  	// #60
   135b0:	mov	w0, #0xffffffff            	// #-1
   135b4:	str	x24, [x27, #1440]
   135b8:	bl	5470 <PyNumber_FloorDivide@plt+0x840>
   135bc:	mov	x24, x0
   135c0:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   135c4:	ldr	x2, [x27, #424]
   135c8:	add	x0, x27, #0x78
   135cc:	mov	x1, #0x0                   	// #0
   135d0:	blr	x2
   135d4:	mov	x27, x0
   135d8:	ldr	x0, [x24]
   135dc:	cbz	x27, 139c8 <PyInit__datetime@@Base+0x958>
   135e0:	stp	x24, xzr, [x27, #16]
   135e4:	str	x0, [x24]
   135e8:	cbz	x0, 13980 <PyInit__datetime@@Base+0x910>
   135ec:	add	x1, x25, #0x828
   135f0:	mov	x2, x27
   135f4:	mov	x0, x26
   135f8:	bl	4740 <PyDict_SetItemString@plt>
   135fc:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   13600:	ldr	x0, [x27]
   13604:	sub	x0, x0, #0x1
   13608:	str	x0, [x27]
   1360c:	cbz	x0, 13974 <PyInit__datetime@@Base+0x904>
   13610:	add	x0, x22, #0x2a8
   13614:	mov	x1, #0x0                   	// #0
   13618:	ldr	x2, [x0, #304]
   1361c:	blr	x2
   13620:	mov	x24, x0
   13624:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   13628:	add	x0, x23, #0xad0
   1362c:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   13630:	add	x0, x0, #0x78
   13634:	ldr	d0, [x1, #2032]
   13638:	mov	x1, #0xffffffffffffffff    	// #-1
   1363c:	ldr	x2, [x0, #304]
   13640:	str	x1, [x24, #16]
   13644:	str	wzr, [x24, #32]
   13648:	mov	x1, #0x0                   	// #0
   1364c:	str	d0, [x24, #24]
   13650:	blr	x2
   13654:	mov	x25, x0
   13658:	ldr	x0, [x24]
   1365c:	cbz	x25, 139c8 <PyInit__datetime@@Base+0x958>
   13660:	stp	x24, xzr, [x25, #16]
   13664:	str	x0, [x24]
   13668:	cbz	x0, 13998 <PyInit__datetime@@Base+0x928>
   1366c:	add	x1, x21, #0x830
   13670:	mov	x0, x26
   13674:	mov	x2, x25
   13678:	bl	4740 <PyDict_SetItemString@plt>
   1367c:	tbnz	w0, #31, 138a4 <PyInit__datetime@@Base+0x834>
   13680:	ldr	x0, [x25]
   13684:	sub	x0, x0, #0x1
   13688:	str	x0, [x25]
   1368c:	cbz	x0, 1398c <PyInit__datetime@@Base+0x91c>
   13690:	ldr	x7, [x20, #4056]
   13694:	add	x21, x22, #0x2a8
   13698:	add	x20, x20, #0xfd8
   1369c:	add	x24, x21, #0x1a0
   136a0:	str	wzr, [sp]
   136a4:	mov	w2, #0x1                   	// #1
   136a8:	str	x24, [sp, #8]
   136ac:	mov	w1, w2
   136b0:	mov	w6, #0x0                   	// #0
   136b4:	mov	w5, #0x0                   	// #0
   136b8:	mov	w4, #0x0                   	// #0
   136bc:	mov	w3, #0x0                   	// #0
   136c0:	mov	w0, #0x7b2                 	// #1970
   136c4:	bl	98e0 <PyNumber_FloorDivide@plt+0x4cb0>
   136c8:	str	x0, [x20, #72]
   136cc:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   136d0:	mov	x2, #0x1                   	// #1
   136d4:	mov	x0, x19
   136d8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   136dc:	add	x1, x1, #0x840
   136e0:	bl	4760 <PyModule_AddIntConstant@plt>
   136e4:	add	x23, x23, #0xad0
   136e8:	mov	x2, #0x270f                	// #9999
   136ec:	mov	x0, x19
   136f0:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   136f4:	add	x1, x1, #0x848
   136f8:	bl	4760 <PyModule_AddIntConstant@plt>
   136fc:	ldr	x3, [x21, #1664]
   13700:	add	x2, x21, #0x680
   13704:	mov	x0, x19
   13708:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1370c:	add	x3, x3, #0x1
   13710:	str	x3, [x21, #1664]
   13714:	add	x1, x1, #0x850
   13718:	bl	4b30 <PyModule_AddObject@plt>
   1371c:	ldr	x3, [x21, #416]
   13720:	mov	x2, x24
   13724:	mov	x0, x19
   13728:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1372c:	add	x3, x3, #0x1
   13730:	str	x3, [x21, #416]
   13734:	add	x1, x1, #0x858
   13738:	bl	4b30 <PyModule_AddObject@plt>
   1373c:	ldr	x3, [x21, #1248]
   13740:	add	x2, x21, #0x4e0
   13744:	mov	x0, x19
   13748:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1374c:	add	x3, x3, #0x1
   13750:	str	x3, [x21, #1248]
   13754:	add	x1, x1, #0x580
   13758:	bl	4b30 <PyModule_AddObject@plt>
   1375c:	ldr	x0, [x22, #680]
   13760:	mov	x2, x21
   13764:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   13768:	add	x1, x1, #0x868
   1376c:	add	x0, x0, #0x1
   13770:	str	x0, [x22, #680]
   13774:	mov	x0, x19
   13778:	bl	4b30 <PyModule_AddObject@plt>
   1377c:	ldr	x3, [x21, #832]
   13780:	add	x2, x21, #0x340
   13784:	mov	x0, x19
   13788:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   1378c:	add	x3, x3, #0x1
   13790:	str	x3, [x21, #832]
   13794:	add	x1, x1, #0x878
   13798:	bl	4b30 <PyModule_AddObject@plt>
   1379c:	ldr	x3, [x23, #120]
   137a0:	add	x2, x23, #0x78
   137a4:	mov	x0, x19
   137a8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   137ac:	add	x3, x3, #0x1
   137b0:	add	x1, x1, #0x880
   137b4:	str	x3, [x23, #120]
   137b8:	bl	4b30 <PyModule_AddObject@plt>
   137bc:	mov	x2, #0x0                   	// #0
   137c0:	add	x0, x23, #0x578
   137c4:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   137c8:	add	x1, x1, #0x890
   137cc:	bl	4b50 <PyCapsule_New@plt>
   137d0:	mov	x2, x0
   137d4:	cbz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   137d8:	adrp	x1, 14000 <PyInit__datetime@@Base+0xf90>
   137dc:	add	x1, x1, #0x8a8
   137e0:	mov	x0, x19
   137e4:	bl	4b30 <PyModule_AddObject@plt>
   137e8:	mov	x0, #0x3e8                 	// #1000
   137ec:	bl	4920 <PyLong_FromLong@plt>
   137f0:	mov	x1, x0
   137f4:	mov	x0, #0x4240                	// #16960
   137f8:	str	x1, [x20, #32]
   137fc:	movk	x0, #0xf, lsl #16
   13800:	bl	4920 <PyLong_FromLong@plt>
   13804:	mov	x1, x0
   13808:	mov	x0, #0x8700                	// #34560
   1380c:	str	x1, [x20, #24]
   13810:	movk	x0, #0x393, lsl #16
   13814:	bl	4920 <PyLong_FromLong@plt>
   13818:	mov	x1, x0
   1381c:	mov	x0, #0x5180                	// #20864
   13820:	str	x1, [x20, #40]
   13824:	movk	x0, #0x1, lsl #16
   13828:	bl	4920 <PyLong_FromLong@plt>
   1382c:	str	x0, [x20, #16]
   13830:	ldr	x1, [x20, #32]
   13834:	cbz	x1, 138a4 <PyInit__datetime@@Base+0x834>
   13838:	ldr	x1, [x20, #24]
   1383c:	cbz	x1, 138a4 <PyInit__datetime@@Base+0x834>
   13840:	ldr	x1, [x20, #40]
   13844:	cmp	x1, #0x0
   13848:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   1384c:	b.eq	138a4 <PyInit__datetime@@Base+0x834>  // b.none
   13850:	adrp	x0, 15000 <PyInit__datetime@@Base+0x1f90>
   13854:	ldr	d0, [x0, #2040]
   13858:	bl	47b0 <PyLong_FromDouble@plt>
   1385c:	str	x0, [x20, #48]
   13860:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   13864:	ldr	d0, [x1, #2048]
   13868:	bl	47b0 <PyLong_FromDouble@plt>
   1386c:	str	x0, [x20, #56]
   13870:	adrp	x1, 15000 <PyInit__datetime@@Base+0x1f90>
   13874:	ldr	d0, [x1, #2056]
   13878:	bl	47b0 <PyLong_FromDouble@plt>
   1387c:	str	x0, [x20, #64]
   13880:	ldr	x1, [x20, #48]
   13884:	cbz	x1, 138a4 <PyInit__datetime@@Base+0x834>
   13888:	ldr	x1, [x20, #56]
   1388c:	cmp	x1, #0x0
   13890:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   13894:	b.eq	138a4 <PyInit__datetime@@Base+0x834>  // b.none
   13898:	ldp	x25, x26, [sp, #80]
   1389c:	ldr	x27, [sp, #96]
   138a0:	b	138b4 <PyInit__datetime@@Base+0x844>
   138a4:	ldp	x25, x26, [sp, #80]
   138a8:	ldr	x27, [sp, #96]
   138ac:	nop
   138b0:	mov	x19, #0x0                   	// #0
   138b4:	mov	x0, x19
   138b8:	ldp	x29, x30, [sp, #16]
   138bc:	ldp	x19, x20, [sp, #32]
   138c0:	ldp	x21, x22, [sp, #48]
   138c4:	ldp	x23, x24, [sp, #64]
   138c8:	add	sp, sp, #0x70
   138cc:	ret
   138d0:	ldp	x25, x26, [sp, #80]
   138d4:	b	138b0 <PyInit__datetime@@Base+0x840>
   138d8:	mov	x0, x20
   138dc:	bl	4830 <_Py_Dealloc@plt>
   138e0:	b	13208 <PyInit__datetime@@Base+0x198>
   138e4:	mov	x0, x20
   138e8:	bl	4830 <_Py_Dealloc@plt>
   138ec:	b	13260 <PyInit__datetime@@Base+0x1f0>
   138f0:	mov	x0, x20
   138f4:	bl	4830 <_Py_Dealloc@plt>
   138f8:	b	1314c <PyInit__datetime@@Base+0xdc>
   138fc:	mov	x0, x20
   13900:	bl	4830 <_Py_Dealloc@plt>
   13904:	b	131a8 <PyInit__datetime@@Base+0x138>
   13908:	mov	x0, x20
   1390c:	bl	4830 <_Py_Dealloc@plt>
   13910:	b	132b4 <PyInit__datetime@@Base+0x244>
   13914:	mov	x0, x20
   13918:	bl	4830 <_Py_Dealloc@plt>
   1391c:	b	1330c <PyInit__datetime@@Base+0x29c>
   13920:	mov	x0, x20
   13924:	bl	4830 <_Py_Dealloc@plt>
   13928:	b	13364 <PyInit__datetime@@Base+0x2f4>
   1392c:	mov	x0, x20
   13930:	bl	4830 <_Py_Dealloc@plt>
   13934:	b	133b8 <PyInit__datetime@@Base+0x348>
   13938:	mov	x0, x20
   1393c:	bl	4830 <_Py_Dealloc@plt>
   13940:	b	13408 <PyInit__datetime@@Base+0x398>
   13944:	mov	x0, x20
   13948:	bl	4830 <_Py_Dealloc@plt>
   1394c:	b	1346c <PyInit__datetime@@Base+0x3fc>
   13950:	mov	x0, x20
   13954:	bl	4830 <_Py_Dealloc@plt>
   13958:	b	134d0 <PyInit__datetime@@Base+0x460>
   1395c:	mov	x0, x20
   13960:	bl	4830 <_Py_Dealloc@plt>
   13964:	b	13520 <PyInit__datetime@@Base+0x4b0>
   13968:	mov	x0, x20
   1396c:	bl	4830 <_Py_Dealloc@plt>
   13970:	b	1357c <PyInit__datetime@@Base+0x50c>
   13974:	mov	x0, x27
   13978:	bl	4830 <_Py_Dealloc@plt>
   1397c:	b	13610 <PyInit__datetime@@Base+0x5a0>
   13980:	mov	x0, x24
   13984:	bl	4830 <_Py_Dealloc@plt>
   13988:	b	135ec <PyInit__datetime@@Base+0x57c>
   1398c:	mov	x0, x25
   13990:	bl	4830 <_Py_Dealloc@plt>
   13994:	b	13690 <PyInit__datetime@@Base+0x620>
   13998:	mov	x0, x24
   1399c:	bl	4830 <_Py_Dealloc@plt>
   139a0:	b	1366c <PyInit__datetime@@Base+0x5fc>
   139a4:	sub	x0, x0, #0x1
   139a8:	str	x0, [x20]
   139ac:	cbnz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   139b0:	mov	x0, x20
   139b4:	mov	x19, #0x0                   	// #0
   139b8:	bl	4830 <_Py_Dealloc@plt>
   139bc:	ldp	x25, x26, [sp, #80]
   139c0:	ldr	x27, [sp, #96]
   139c4:	b	138b4 <PyInit__datetime@@Base+0x844>
   139c8:	sub	x0, x0, #0x1
   139cc:	str	x0, [x24]
   139d0:	cbnz	x0, 138a4 <PyInit__datetime@@Base+0x834>
   139d4:	mov	x0, x24
   139d8:	mov	x19, #0x0                   	// #0
   139dc:	bl	4830 <_Py_Dealloc@plt>
   139e0:	ldp	x25, x26, [sp, #80]
   139e4:	ldr	x27, [sp, #96]
   139e8:	b	138b4 <PyInit__datetime@@Base+0x844>

Disassembly of section .fini:

00000000000139ec <.fini>:
   139ec:	stp	x29, x30, [sp, #-16]!
   139f0:	mov	x29, sp
   139f4:	ldp	x29, x30, [sp], #16
   139f8:	ret
