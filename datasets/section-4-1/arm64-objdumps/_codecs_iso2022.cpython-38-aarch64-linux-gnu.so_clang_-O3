
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_iso2022.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001808 <.init>:
    1808:	stp	x29, x30, [sp, #-16]!
    180c:	mov	x29, sp
    1810:	bl	1940 <PyCapsule_GetPointer@plt+0x10>
    1814:	ldp	x29, x30, [sp], #16
    1818:	ret

Disassembly of section .plt:

0000000000001820 <PyObject_GetAttrString@plt-0x20>:
    1820:	stp	x16, x30, [sp, #-16]!
    1824:	adrp	x16, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1828:	ldr	x17, [x16, #4088]
    182c:	add	x16, x16, #0xff8
    1830:	br	x17
    1834:	nop
    1838:	nop
    183c:	nop

0000000000001840 <PyObject_GetAttrString@plt>:
    1840:	adrp	x16, 15000 <PyObject_GetAttrString>
    1844:	ldr	x17, [x16]
    1848:	add	x16, x16, #0x0
    184c:	br	x17

0000000000001850 <__cxa_finalize@plt>:
    1850:	adrp	x16, 15000 <PyObject_GetAttrString>
    1854:	ldr	x17, [x16, #8]
    1858:	add	x16, x16, #0x8
    185c:	br	x17

0000000000001860 <_Py_Dealloc@plt>:
    1860:	adrp	x16, 15000 <PyObject_GetAttrString>
    1864:	ldr	x17, [x16, #16]
    1868:	add	x16, x16, #0x10
    186c:	br	x17

0000000000001870 <PyErr_SetString@plt>:
    1870:	adrp	x16, 15000 <PyObject_GetAttrString>
    1874:	ldr	x17, [x16, #24]
    1878:	add	x16, x16, #0x18
    187c:	br	x17

0000000000001880 <PyCapsule_IsValid@plt>:
    1880:	adrp	x16, 15000 <PyObject_GetAttrString>
    1884:	ldr	x17, [x16, #32]
    1888:	add	x16, x16, #0x20
    188c:	br	x17

0000000000001890 <__gmon_start__@plt>:
    1890:	adrp	x16, 15000 <PyObject_GetAttrString>
    1894:	ldr	x17, [x16, #40]
    1898:	add	x16, x16, #0x28
    189c:	br	x17

00000000000018a0 <PyModule_Create2@plt>:
    18a0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18a4:	ldr	x17, [x16, #48]
    18a8:	add	x16, x16, #0x30
    18ac:	br	x17

00000000000018b0 <PyImport_ImportModule@plt>:
    18b0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18b4:	ldr	x17, [x16, #56]
    18b8:	add	x16, x16, #0x38
    18bc:	br	x17

00000000000018c0 <PyImport_ImportModuleNoBlock@plt>:
    18c0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18c4:	ldr	x17, [x16, #64]
    18c8:	add	x16, x16, #0x40
    18cc:	br	x17

00000000000018d0 <PyObject_CallFunctionObjArgs@plt>:
    18d0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18d4:	ldr	x17, [x16, #72]
    18d8:	add	x16, x16, #0x48
    18dc:	br	x17

00000000000018e0 <strcmp@plt>:
    18e0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18e4:	ldr	x17, [x16, #80]
    18e8:	add	x16, x16, #0x50
    18ec:	br	x17

00000000000018f0 <_PyUnicodeWriter_PrepareInternal@plt>:
    18f0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18f4:	ldr	x17, [x16, #88]
    18f8:	add	x16, x16, #0x58
    18fc:	br	x17

0000000000001900 <_PyUnicodeWriter_WriteChar@plt>:
    1900:	adrp	x16, 15000 <PyObject_GetAttrString>
    1904:	ldr	x17, [x16, #96]
    1908:	add	x16, x16, #0x60
    190c:	br	x17

0000000000001910 <PyUnicode_AsUTF8@plt>:
    1910:	adrp	x16, 15000 <PyObject_GetAttrString>
    1914:	ldr	x17, [x16, #104]
    1918:	add	x16, x16, #0x68
    191c:	br	x17

0000000000001920 <PyCapsule_New@plt>:
    1920:	adrp	x16, 15000 <PyObject_GetAttrString>
    1924:	ldr	x17, [x16, #112]
    1928:	add	x16, x16, #0x70
    192c:	br	x17

0000000000001930 <PyCapsule_GetPointer@plt>:
    1930:	adrp	x16, 15000 <PyObject_GetAttrString>
    1934:	ldr	x17, [x16, #120]
    1938:	add	x16, x16, #0x78
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__codecs_iso2022@@Base-0xd4>:
    1940:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1944:	ldr	x0, [x0, #4048]
    1948:	cbz	x0, 1950 <PyCapsule_GetPointer@plt+0x20>
    194c:	b	1890 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    195c:	add	x0, x0, #0x130
    1960:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1964:	add	x1, x1, #0x130
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyCapsule_GetPointer@plt+0x54>  // b.none
    1970:	adrp	x1, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1974:	ldr	x1, [x1, #4016]
    1978:	cbz	x1, 1984 <PyCapsule_GetPointer@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    198c:	add	x0, x0, #0x130
    1990:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1994:	add	x1, x1, #0x130
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyCapsule_GetPointer@plt+0x94>  // b.none
    19b0:	adrp	x2, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19b4:	ldr	x2, [x2, #4056]
    19b8:	cbz	x2, 19c4 <PyCapsule_GetPointer@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19d8:	ldrb	w0, [x19, #304]
    19dc:	cbnz	w0, 1a04 <PyCapsule_GetPointer@plt+0xd4>
    19e0:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19e4:	ldr	x0, [x0, #4024]
    19e8:	cbz	x0, 19f8 <PyCapsule_GetPointer@plt+0xc8>
    19ec:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19f0:	ldr	x0, [x0, #128]
    19f4:	bl	1850 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyCapsule_GetPointer@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #304]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyCapsule_GetPointer@plt+0x58>

0000000000001a14 <PyInit__codecs_iso2022@@Base>:
    1a14:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a18:	add	x0, x0, #0x88
    1a1c:	mov	w1, #0x3f5                 	// #1013
    1a20:	b	18a0 <PyModule_Create2@plt>
    1a24:	stp	x29, x30, [sp, #-48]!
    1a28:	stp	x22, x21, [sp, #16]
    1a2c:	stp	x20, x19, [sp, #32]
    1a30:	mov	x29, sp
    1a34:	ldr	x8, [x1, #8]
    1a38:	ldrb	w8, [x8, #171]
    1a3c:	tbnz	w8, #4, 1a5c <PyInit__codecs_iso2022@@Base+0x48>
    1a40:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1a44:	ldr	x8, [x8, #4040]
    1a48:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a4c:	add	x1, x1, #0xb7a
    1a50:	ldr	x0, [x8]
    1a54:	bl	1870 <PyErr_SetString@plt>
    1a58:	b	1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1a5c:	mov	x0, x1
    1a60:	bl	1910 <PyUnicode_AsUTF8@plt>
    1a64:	cbz	x0, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1a68:	adrp	x22, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a6c:	ldr	x19, [x22, #312]
    1a70:	mov	x20, x0
    1a74:	cbz	x19, 1b18 <PyInit__codecs_iso2022@@Base+0x104>
    1a78:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a7c:	add	x0, x0, #0xbec
    1a80:	mov	x1, x20
    1a84:	bl	18e0 <strcmp@plt>
    1a88:	cbz	w0, 1b64 <PyInit__codecs_iso2022@@Base+0x150>
    1a8c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a90:	add	x0, x0, #0xbf7
    1a94:	mov	x1, x20
    1a98:	bl	18e0 <strcmp@plt>
    1a9c:	cbz	w0, 1b70 <PyInit__codecs_iso2022@@Base+0x15c>
    1aa0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1aa4:	add	x0, x0, #0xc02
    1aa8:	mov	x1, x20
    1aac:	bl	18e0 <strcmp@plt>
    1ab0:	cbz	w0, 1b7c <PyInit__codecs_iso2022@@Base+0x168>
    1ab4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1ab8:	add	x0, x0, #0xc0f
    1abc:	mov	x1, x20
    1ac0:	bl	18e0 <strcmp@plt>
    1ac4:	cbz	w0, 1b88 <PyInit__codecs_iso2022@@Base+0x174>
    1ac8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1acc:	add	x0, x0, #0xc1c
    1ad0:	mov	x1, x20
    1ad4:	bl	18e0 <strcmp@plt>
    1ad8:	cbz	w0, 1b94 <PyInit__codecs_iso2022@@Base+0x180>
    1adc:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1ae0:	add	x0, x0, #0xc2c
    1ae4:	mov	x1, x20
    1ae8:	bl	18e0 <strcmp@plt>
    1aec:	cbz	w0, 1ba0 <PyInit__codecs_iso2022@@Base+0x18c>
    1af0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1af4:	add	x0, x0, #0xc39
    1af8:	mov	x1, x20
    1afc:	bl	18e0 <strcmp@plt>
    1b00:	cbz	w0, 1bac <PyInit__codecs_iso2022@@Base+0x198>
    1b04:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b08:	ldr	x8, [x8, #4064]
    1b0c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b10:	add	x1, x1, #0xb9a
    1b14:	b	1a50 <PyInit__codecs_iso2022@@Base+0x3c>
    1b18:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b1c:	add	x0, x0, #0xbcd
    1b20:	bl	18c0 <PyImport_ImportModuleNoBlock@plt>
    1b24:	cbz	x0, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1b28:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b2c:	add	x1, x1, #0xbdd
    1b30:	mov	x21, x0
    1b34:	bl	1840 <PyObject_GetAttrString@plt>
    1b38:	str	x0, [x22, #312]
    1b3c:	ldr	x8, [x21]
    1b40:	mov	x19, x0
    1b44:	subs	x8, x8, #0x1
    1b48:	str	x8, [x21]
    1b4c:	b.ne	1b5c <PyInit__codecs_iso2022@@Base+0x148>  // b.any
    1b50:	mov	x0, x21
    1b54:	bl	1860 <_Py_Dealloc@plt>
    1b58:	ldr	x19, [x22, #312]
    1b5c:	cbnz	x19, 1a78 <PyInit__codecs_iso2022@@Base+0x64>
    1b60:	b	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>
    1b64:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b68:	add	x0, x0, #0x698
    1b6c:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b70:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b74:	add	x0, x0, #0x6e0
    1b78:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b7c:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b80:	add	x0, x0, #0x728
    1b84:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b88:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b8c:	add	x0, x0, #0x770
    1b90:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b94:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b98:	add	x0, x0, #0x7b8
    1b9c:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1ba0:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1ba4:	add	x0, x0, #0x800
    1ba8:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1bac:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1bb0:	add	x0, x0, #0x848
    1bb4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1bb8:	add	x1, x1, #0xbb6
    1bbc:	mov	x2, xzr
    1bc0:	bl	1920 <PyCapsule_New@plt>
    1bc4:	cbz	x0, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1bc8:	mov	x20, x0
    1bcc:	mov	x0, x19
    1bd0:	mov	x1, x20
    1bd4:	mov	x2, xzr
    1bd8:	bl	18d0 <PyObject_CallFunctionObjArgs@plt>
    1bdc:	ldr	x8, [x20]
    1be0:	mov	x19, x0
    1be4:	subs	x8, x8, #0x1
    1be8:	str	x8, [x20]
    1bec:	b.ne	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>  // b.any
    1bf0:	mov	x0, x20
    1bf4:	bl	1860 <_Py_Dealloc@plt>
    1bf8:	b	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>
    1bfc:	mov	x19, xzr
    1c00:	mov	x0, x19
    1c04:	ldp	x20, x19, [sp, #32]
    1c08:	ldp	x22, x21, [sp, #16]
    1c0c:	ldp	x29, x30, [sp], #48
    1c10:	ret
    1c14:	stp	x29, x30, [sp, #-32]!
    1c18:	str	x19, [sp, #16]
    1c1c:	mov	x29, sp
    1c20:	ldr	x8, [x0, #8]
    1c24:	ldrb	w9, [x8]
    1c28:	cbz	w9, 1c5c <PyInit__codecs_iso2022@@Base+0x248>
    1c2c:	add	x19, x8, #0x20
    1c30:	b	1c3c <PyInit__codecs_iso2022@@Base+0x228>
    1c34:	ldrb	w8, [x19], #32
    1c38:	cbz	w8, 1c5c <PyInit__codecs_iso2022@@Base+0x248>
    1c3c:	ldur	x8, [x19, #-24]
    1c40:	cbz	x8, 1c34 <PyInit__codecs_iso2022@@Base+0x220>
    1c44:	blr	x8
    1c48:	cbz	w0, 1c34 <PyInit__codecs_iso2022@@Base+0x220>
    1c4c:	mov	w0, #0xffffffff            	// #-1
    1c50:	ldr	x19, [sp, #16]
    1c54:	ldp	x29, x30, [sp], #32
    1c58:	ret
    1c5c:	mov	w0, wzr
    1c60:	ldr	x19, [sp, #16]
    1c64:	ldp	x29, x30, [sp], #32
    1c68:	ret
    1c6c:	sub	sp, sp, #0x90
    1c70:	stp	x29, x30, [sp, #48]
    1c74:	stp	x28, x27, [sp, #64]
    1c78:	stp	x26, x25, [sp, #80]
    1c7c:	stp	x24, x23, [sp, #96]
    1c80:	stp	x22, x21, [sp, #112]
    1c84:	stp	x20, x19, [sp, #128]
    1c88:	add	x29, sp, #0x30
    1c8c:	ldr	x8, [x4]
    1c90:	cmp	x8, x5
    1c94:	b.ge	2124 <PyInit__codecs_iso2022@@Base+0x710>  // b.tcont
    1c98:	ldr	w10, [x29, #96]
    1c9c:	mov	x20, x7
    1ca0:	mov	x21, x6
    1ca4:	mov	x22, x5
    1ca8:	mov	x23, x4
    1cac:	mov	w25, w2
    1cb0:	mov	x27, x0
    1cb4:	mov	w19, #0x1                   	// #1
    1cb8:	mov	w28, #0xffff                	// #65535
    1cbc:	mov	w26, #0xfffe                	// #65534
    1cc0:	stp	x1, x3, [sp, #16]
    1cc4:	str	w10, [sp, #12]
    1cc8:	cmp	w25, #0x2
    1ccc:	b.eq	1d9c <PyInit__codecs_iso2022@@Base+0x388>  // b.none
    1cd0:	cmp	w25, #0x1
    1cd4:	b.ne	1db0 <PyInit__codecs_iso2022@@Base+0x39c>  // b.any
    1cd8:	ldrb	w8, [x3, x8]
    1cdc:	cmp	w8, #0x7f
    1ce0:	stur	w8, [x29, #-4]
    1ce4:	b.hi	1dc0 <PyInit__codecs_iso2022@@Base+0x3ac>  // b.pmore
    1ce8:	ldrb	w8, [x27]
    1cec:	cmp	w8, #0x42
    1cf0:	b.eq	1d30 <PyInit__codecs_iso2022@@Base+0x31c>  // b.none
    1cf4:	subs	x20, x20, #0x3
    1cf8:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1cfc:	ldr	x8, [x21]
    1d00:	mov	w9, #0x1b                  	// #27
    1d04:	strb	w9, [x8]
    1d08:	ldr	x8, [x21]
    1d0c:	mov	w9, #0x28                  	// #40
    1d10:	strb	w9, [x8, #1]
    1d14:	ldr	x8, [x21]
    1d18:	mov	w9, #0x42                  	// #66
    1d1c:	strb	w9, [x8, #2]
    1d20:	strb	w9, [x27]
    1d24:	ldr	x8, [x21]
    1d28:	add	x8, x8, #0x3
    1d2c:	str	x8, [x21]
    1d30:	ldrb	w8, [x27, #4]
    1d34:	tbz	w8, #0, 1d64 <PyInit__codecs_iso2022@@Base+0x350>
    1d38:	subs	x20, x20, #0x1
    1d3c:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1d40:	ldr	x8, [x21]
    1d44:	mov	w9, #0xf                   	// #15
    1d48:	strb	w9, [x8]
    1d4c:	ldrb	w8, [x27, #4]
    1d50:	and	w8, w8, #0xfe
    1d54:	strb	w8, [x27, #4]
    1d58:	ldr	x8, [x21]
    1d5c:	add	x8, x8, #0x1
    1d60:	str	x8, [x21]
    1d64:	subs	x20, x20, #0x1
    1d68:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1d6c:	ldur	w8, [x29, #-4]
    1d70:	ldr	x9, [x21]
    1d74:	strb	w8, [x9]
    1d78:	ldr	x8, [x23]
    1d7c:	add	x8, x8, #0x1
    1d80:	str	x8, [x23]
    1d84:	ldr	x9, [x21]
    1d88:	add	x9, x9, #0x1
    1d8c:	str	x9, [x21]
    1d90:	cmp	x8, x22
    1d94:	b.lt	1cc8 <PyInit__codecs_iso2022@@Base+0x2b4>  // b.tstop
    1d98:	b	2124 <PyInit__codecs_iso2022@@Base+0x710>
    1d9c:	ldrh	w8, [x3, x8, lsl #1]
    1da0:	cmp	w8, #0x7f
    1da4:	stur	w8, [x29, #-4]
    1da8:	b.ls	1ce8 <PyInit__codecs_iso2022@@Base+0x2d4>  // b.plast
    1dac:	b	1dc0 <PyInit__codecs_iso2022@@Base+0x3ac>
    1db0:	ldr	w8, [x3, x8, lsl #2]
    1db4:	cmp	w8, #0x7f
    1db8:	stur	w8, [x29, #-4]
    1dbc:	b.ls	1ce8 <PyInit__codecs_iso2022@@Base+0x2d4>  // b.plast
    1dc0:	ldr	x24, [x1, #8]
    1dc4:	ldrb	w8, [x24]
    1dc8:	cbz	w8, 2128 <PyInit__codecs_iso2022@@Base+0x714>
    1dcc:	tbnz	w10, #0, 1ddc <PyInit__codecs_iso2022@@Base+0x3c8>
    1dd0:	b	1e44 <PyInit__codecs_iso2022@@Base+0x430>
    1dd4:	ldrb	w8, [x24, #32]!
    1dd8:	cbz	w8, 2128 <PyInit__codecs_iso2022@@Base+0x714>
    1ddc:	stur	x19, [x29, #-16]
    1de0:	ldr	x8, [x24, #24]
    1de4:	sub	x0, x29, #0x4
    1de8:	sub	x1, x29, #0x10
    1dec:	blr	x8
    1df0:	and	w8, w0, #0xffff
    1df4:	cmp	w8, w28
    1df8:	b.eq	1dd4 <PyInit__codecs_iso2022@@Base+0x3c0>  // b.none
    1dfc:	cmp	w8, w26
    1e00:	b.ne	1eac <PyInit__codecs_iso2022@@Base+0x498>  // b.any
    1e04:	ldr	x8, [x23]
    1e08:	sub	x0, x29, #0x4
    1e0c:	sub	x1, x29, #0x10
    1e10:	sub	x8, x22, x8
    1e14:	cmp	x8, #0x2
    1e18:	mov	w8, #0x2                   	// #2
    1e1c:	csinv	x8, x8, xzr, ge  // ge = tcont
    1e20:	stur	x8, [x29, #-16]
    1e24:	ldr	x8, [x24, #24]
    1e28:	blr	x8
    1e2c:	mvn	w8, w0
    1e30:	tst	w8, #0xffff
    1e34:	b.eq	1dd4 <PyInit__codecs_iso2022@@Base+0x3c0>  // b.none
    1e38:	b	1ea0 <PyInit__codecs_iso2022@@Base+0x48c>
    1e3c:	ldrb	w8, [x24, #32]!
    1e40:	cbz	w8, 2128 <PyInit__codecs_iso2022@@Base+0x714>
    1e44:	stur	x19, [x29, #-16]
    1e48:	ldr	x8, [x24, #24]
    1e4c:	sub	x0, x29, #0x4
    1e50:	sub	x1, x29, #0x10
    1e54:	blr	x8
    1e58:	and	w8, w0, #0xffff
    1e5c:	cmp	w8, w28
    1e60:	b.eq	1e3c <PyInit__codecs_iso2022@@Base+0x428>  // b.none
    1e64:	cmp	w8, w26
    1e68:	b.ne	1eac <PyInit__codecs_iso2022@@Base+0x498>  // b.any
    1e6c:	ldr	x8, [x23]
    1e70:	sub	x8, x22, x8
    1e74:	cmp	x8, #0x2
    1e78:	b.lt	2154 <PyInit__codecs_iso2022@@Base+0x740>  // b.tstop
    1e7c:	mov	w8, #0x2                   	// #2
    1e80:	stur	x8, [x29, #-16]
    1e84:	ldr	x8, [x24, #24]
    1e88:	sub	x0, x29, #0x4
    1e8c:	sub	x1, x29, #0x10
    1e90:	blr	x8
    1e94:	mvn	w8, w0
    1e98:	tst	w8, #0xffff
    1e9c:	b.eq	1e3c <PyInit__codecs_iso2022@@Base+0x428>  // b.none
    1ea0:	ldur	x8, [x29, #-16]
    1ea4:	ubfx	w9, w0, #8, #8
    1ea8:	b	1eb4 <PyInit__codecs_iso2022@@Base+0x4a0>
    1eac:	ubfx	w9, w0, #8, #8
    1eb0:	mov	w8, #0x1                   	// #1
    1eb4:	ldrb	w10, [x24]
    1eb8:	cbz	w10, 2128 <PyInit__codecs_iso2022@@Base+0x714>
    1ebc:	ldrb	w11, [x24, #1]
    1ec0:	cmp	w11, #0x1
    1ec4:	b.eq	1f3c <PyInit__codecs_iso2022@@Base+0x528>  // b.none
    1ec8:	cbnz	w11, 215c <PyInit__codecs_iso2022@@Base+0x748>
    1ecc:	ldrb	w11, [x27, #4]
    1ed0:	tbz	w11, #0, 1f04 <PyInit__codecs_iso2022@@Base+0x4f0>
    1ed4:	subs	x20, x20, #0x1
    1ed8:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1edc:	ldr	x10, [x21]
    1ee0:	mov	w11, #0xf                   	// #15
    1ee4:	strb	w11, [x10]
    1ee8:	ldrb	w10, [x27, #4]
    1eec:	and	w10, w10, #0xfe
    1ef0:	strb	w10, [x27, #4]
    1ef4:	ldr	x10, [x21]
    1ef8:	add	x10, x10, #0x1
    1efc:	str	x10, [x21]
    1f00:	ldrb	w10, [x24]
    1f04:	ldrb	w11, [x27]
    1f08:	cmp	w11, w10
    1f0c:	b.eq	20b0 <PyInit__codecs_iso2022@@Base+0x69c>  // b.none
    1f10:	ldrb	w11, [x24, #2]
    1f14:	cmp	w11, #0x1
    1f18:	b.ne	2014 <PyInit__codecs_iso2022@@Base+0x600>  // b.any
    1f1c:	subs	x20, x20, #0x3
    1f20:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1f24:	ldr	x10, [x21]
    1f28:	mov	w11, #0x1b                  	// #27
    1f2c:	strb	w11, [x10]
    1f30:	ldr	x10, [x21]
    1f34:	mov	w11, #0x28                  	// #40
    1f38:	b	2038 <PyInit__codecs_iso2022@@Base+0x624>
    1f3c:	ldrb	w11, [x27, #1]
    1f40:	cmp	w11, w10
    1f44:	b.eq	1fe0 <PyInit__codecs_iso2022@@Base+0x5cc>  // b.none
    1f48:	ldrb	w10, [x24, #2]
    1f4c:	cmp	w10, #0x1
    1f50:	b.ne	1f7c <PyInit__codecs_iso2022@@Base+0x568>  // b.any
    1f54:	cmp	x20, #0x3
    1f58:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1f5c:	ldr	x11, [x21]
    1f60:	mov	w14, #0x1b                  	// #27
    1f64:	mov	x10, #0xfffffffffffffffd    	// #-3
    1f68:	mov	w13, #0x1                   	// #1
    1f6c:	mov	w12, #0x2                   	// #2
    1f70:	strb	w14, [x11]
    1f74:	mov	w11, #0x3                   	// #3
    1f78:	b	1fac <PyInit__codecs_iso2022@@Base+0x598>
    1f7c:	cmp	x20, #0x4
    1f80:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1f84:	ldr	x10, [x21]
    1f88:	mov	w11, #0x1b                  	// #27
    1f8c:	mov	w14, #0x24                  	// #36
    1f90:	mov	w13, #0x2                   	// #2
    1f94:	strb	w11, [x10]
    1f98:	ldr	x11, [x21]
    1f9c:	mov	x10, #0xfffffffffffffffc    	// #-4
    1fa0:	mov	w12, #0x3                   	// #3
    1fa4:	strb	w14, [x11, #1]
    1fa8:	mov	w11, #0x4                   	// #4
    1fac:	ldr	x14, [x21]
    1fb0:	mov	w15, #0x29                  	// #41
    1fb4:	add	x20, x20, x10
    1fb8:	strb	w15, [x14, x13]
    1fbc:	ldrb	w13, [x24]
    1fc0:	ldr	x14, [x21]
    1fc4:	and	w13, w13, #0x7f
    1fc8:	strb	w13, [x14, x12]
    1fcc:	ldrb	w12, [x24]
    1fd0:	strb	w12, [x27, #1]
    1fd4:	ldr	x12, [x21]
    1fd8:	add	x11, x12, x11
    1fdc:	str	x11, [x21]
    1fe0:	ldrb	w10, [x27, #4]
    1fe4:	tbnz	w10, #0, 20b0 <PyInit__codecs_iso2022@@Base+0x69c>
    1fe8:	subs	x20, x20, #0x1
    1fec:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    1ff0:	ldr	x10, [x21]
    1ff4:	mov	w11, #0xe                   	// #14
    1ff8:	strb	w11, [x10]
    1ffc:	ldrb	w10, [x27, #4]
    2000:	orr	w10, w10, #0x1
    2004:	strb	w10, [x27, #4]
    2008:	ldr	x10, [x21]
    200c:	add	x10, x10, #0x1
    2010:	b	20ac <PyInit__codecs_iso2022@@Base+0x698>
    2014:	cmp	w10, #0xc2
    2018:	b.ne	2060 <PyInit__codecs_iso2022@@Base+0x64c>  // b.any
    201c:	subs	x20, x20, #0x3
    2020:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    2024:	ldr	x10, [x21]
    2028:	mov	w11, #0x1b                  	// #27
    202c:	strb	w11, [x10]
    2030:	ldr	x10, [x21]
    2034:	mov	w11, #0x24                  	// #36
    2038:	strb	w11, [x10, #1]
    203c:	ldrb	w10, [x24]
    2040:	ldr	x11, [x21]
    2044:	and	w10, w10, #0x7f
    2048:	strb	w10, [x11, #2]
    204c:	ldrb	w10, [x24]
    2050:	strb	w10, [x27]
    2054:	ldr	x10, [x21]
    2058:	add	x10, x10, #0x3
    205c:	b	20ac <PyInit__codecs_iso2022@@Base+0x698>
    2060:	subs	x20, x20, #0x4
    2064:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    2068:	ldr	x10, [x21]
    206c:	mov	w11, #0x1b                  	// #27
    2070:	strb	w11, [x10]
    2074:	ldr	x10, [x21]
    2078:	mov	w11, #0x24                  	// #36
    207c:	strb	w11, [x10, #1]
    2080:	ldr	x10, [x21]
    2084:	mov	w11, #0x28                  	// #40
    2088:	strb	w11, [x10, #2]
    208c:	ldrb	w10, [x24]
    2090:	ldr	x11, [x21]
    2094:	and	w10, w10, #0x7f
    2098:	strb	w10, [x11, #3]
    209c:	ldrb	w10, [x24]
    20a0:	strb	w10, [x27]
    20a4:	ldr	x10, [x21]
    20a8:	add	x10, x10, #0x4
    20ac:	str	x10, [x21]
    20b0:	ldrb	w10, [x24, #2]
    20b4:	cmp	w10, #0x1
    20b8:	b.ne	20d4 <PyInit__codecs_iso2022@@Base+0x6c0>  // b.any
    20bc:	cmp	x20, #0x1
    20c0:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    20c4:	ldr	x10, [x21]
    20c8:	mov	x9, #0xffffffffffffffff    	// #-1
    20cc:	mov	w11, #0x1                   	// #1
    20d0:	b	20f4 <PyInit__codecs_iso2022@@Base+0x6e0>
    20d4:	cmp	x20, #0x2
    20d8:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    20dc:	ldr	x10, [x21]
    20e0:	mov	w11, #0x2                   	// #2
    20e4:	strb	w9, [x10]
    20e8:	ldr	x10, [x21]
    20ec:	mov	x9, #0xfffffffffffffffe    	// #-2
    20f0:	add	x10, x10, #0x1
    20f4:	strb	w0, [x10]
    20f8:	ldr	x10, [x21]
    20fc:	add	x20, x20, x9
    2100:	add	x10, x10, x11
    2104:	str	x10, [x21]
    2108:	ldr	x10, [x23]
    210c:	add	x8, x10, x8
    2110:	str	x8, [x23]
    2114:	ldp	x1, x3, [sp, #16]
    2118:	ldr	w10, [sp, #12]
    211c:	cmp	x8, x22
    2120:	b.lt	1cc8 <PyInit__codecs_iso2022@@Base+0x2b4>  // b.tstop
    2124:	mov	x19, xzr
    2128:	mov	x0, x19
    212c:	ldp	x20, x19, [sp, #128]
    2130:	ldp	x22, x21, [sp, #112]
    2134:	ldp	x24, x23, [sp, #96]
    2138:	ldp	x26, x25, [sp, #80]
    213c:	ldp	x28, x27, [sp, #64]
    2140:	ldp	x29, x30, [sp, #48]
    2144:	add	sp, sp, #0x90
    2148:	ret
    214c:	mov	x19, #0xffffffffffffffff    	// #-1
    2150:	b	2128 <PyInit__codecs_iso2022@@Base+0x714>
    2154:	mov	x19, #0xfffffffffffffffe    	// #-2
    2158:	b	2128 <PyInit__codecs_iso2022@@Base+0x714>
    215c:	mov	x19, #0xfffffffffffffffd    	// #-3
    2160:	b	2128 <PyInit__codecs_iso2022@@Base+0x714>
    2164:	mov	w8, #0x4242                	// #16962
    2168:	strb	wzr, [x0, #4]
    216c:	strh	w8, [x0]
    2170:	mov	w0, wzr
    2174:	ret
    2178:	ldrb	w8, [x0, #4]
    217c:	tbnz	w8, #0, 2194 <PyInit__codecs_iso2022@@Base+0x780>
    2180:	ldrb	w8, [x0]
    2184:	cmp	w8, #0x42
    2188:	b.ne	21cc <PyInit__codecs_iso2022@@Base+0x7b8>  // b.any
    218c:	mov	x0, xzr
    2190:	ret
    2194:	subs	x3, x3, #0x1
    2198:	b.lt	21d4 <PyInit__codecs_iso2022@@Base+0x7c0>  // b.tstop
    219c:	ldr	x8, [x2]
    21a0:	mov	w9, #0xf                   	// #15
    21a4:	strb	w9, [x8]
    21a8:	ldr	x8, [x2]
    21ac:	add	x8, x8, #0x1
    21b0:	str	x8, [x2]
    21b4:	ldrb	w8, [x0, #4]
    21b8:	and	w8, w8, #0xfe
    21bc:	strb	w8, [x0, #4]
    21c0:	ldrb	w8, [x0]
    21c4:	cmp	w8, #0x42
    21c8:	b.eq	218c <PyInit__codecs_iso2022@@Base+0x778>  // b.none
    21cc:	cmp	x3, #0x3
    21d0:	b.ge	21dc <PyInit__codecs_iso2022@@Base+0x7c8>  // b.tcont
    21d4:	mov	x0, #0xffffffffffffffff    	// #-1
    21d8:	ret
    21dc:	ldr	x9, [x2]
    21e0:	mov	w10, #0x1b                  	// #27
    21e4:	strb	w10, [x9]
    21e8:	ldr	x9, [x2]
    21ec:	mov	w10, #0x28                  	// #40
    21f0:	strb	w10, [x9, #1]
    21f4:	ldr	x9, [x2]
    21f8:	mov	w10, #0x42                  	// #66
    21fc:	strb	w10, [x9, #2]
    2200:	ldr	x9, [x2]
    2204:	add	x9, x9, #0x3
    2208:	str	x9, [x2]
    220c:	strb	w10, [x0]
    2210:	mov	x0, xzr
    2214:	ret
    2218:	sub	sp, sp, #0x70
    221c:	stp	x29, x30, [sp, #16]
    2220:	stp	x28, x27, [sp, #32]
    2224:	stp	x26, x25, [sp, #48]
    2228:	stp	x24, x23, [sp, #64]
    222c:	stp	x22, x21, [sp, #80]
    2230:	stp	x20, x19, [sp, #96]
    2234:	add	x29, sp, #0x10
    2238:	cmp	x3, #0x1
    223c:	b.lt	27f4 <PyInit__codecs_iso2022@@Base+0xde0>  // b.tstop
    2240:	adrp	x27, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2244:	mov	x19, x4
    2248:	mov	x20, x3
    224c:	mov	x21, x2
    2250:	mov	x22, x1
    2254:	mov	x23, x0
    2258:	mov	x26, xzr
    225c:	add	x28, x0, #0x1
    2260:	mov	w25, #0x1                   	// #1
    2264:	add	x27, x27, #0xb48
    2268:	b	2280 <PyInit__codecs_iso2022@@Base+0x86c>
    226c:	ldrb	w8, [x23, #4]
    2270:	and	w8, w8, #0xfffffffd
    2274:	strb	w8, [x23, #4]
    2278:	cmp	x20, #0x0
    227c:	b.le	27f4 <PyInit__codecs_iso2022@@Base+0xde0>
    2280:	ldr	x0, [x21]
    2284:	ldrb	w8, [x23, #4]
    2288:	ldrb	w24, [x0]
    228c:	tbnz	w8, #1, 22c8 <PyInit__codecs_iso2022@@Base+0x8b4>
    2290:	sub	w9, w24, #0xa
    2294:	cmp	w9, #0x11
    2298:	b.hi	2304 <PyInit__codecs_iso2022@@Base+0x8f0>  // b.pmore
    229c:	adr	x10, 22ac <PyInit__codecs_iso2022@@Base+0x898>
    22a0:	ldrb	w11, [x27, x9]
    22a4:	add	x10, x10, x11, lsl #2
    22a8:	br	x10
    22ac:	and	w8, w8, #0xfe
    22b0:	mov	w1, #0xa                   	// #10
    22b4:	mov	x0, x19
    22b8:	strb	w8, [x23, #4]
    22bc:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    22c0:	tbz	w0, #31, 2460 <PyInit__codecs_iso2022@@Base+0xa4c>
    22c4:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    22c8:	mov	x0, x19
    22cc:	mov	w1, w24
    22d0:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    22d4:	tbnz	w0, #31, 27fc <PyInit__codecs_iso2022@@Base+0xde8>
    22d8:	ldr	x8, [x21]
    22dc:	cmp	w24, #0x40
    22e0:	sub	x20, x20, #0x1
    22e4:	add	x8, x8, #0x1
    22e8:	str	x8, [x21]
    22ec:	b.eq	226c <PyInit__codecs_iso2022@@Base+0x858>  // b.none
    22f0:	sub	w8, w24, #0x41
    22f4:	and	w8, w8, #0xff
    22f8:	cmp	w8, #0x19
    22fc:	b.hi	2278 <PyInit__codecs_iso2022@@Base+0x864>  // b.pmore
    2300:	b	226c <PyInit__codecs_iso2022@@Base+0x858>
    2304:	cmp	w24, #0x20
    2308:	b.cc	23b8 <PyInit__codecs_iso2022@@Base+0x9a4>  // b.lo, b.ul, b.last
    230c:	sxtb	w9, w24
    2310:	tbnz	w9, #31, 280c <PyInit__codecs_iso2022@@Base+0xdf8>
    2314:	tst	w8, #0x1
    2318:	csel	x8, x23, x28, eq  // eq = none
    231c:	ldrb	w8, [x8]
    2320:	cmp	w8, #0x42
    2324:	b.eq	23b8 <PyInit__codecs_iso2022@@Base+0x9a4>  // b.none
    2328:	cbz	x26, 2338 <PyInit__codecs_iso2022@@Base+0x924>
    232c:	ldrb	w9, [x26]
    2330:	cmp	w9, w8
    2334:	b.eq	234c <PyInit__codecs_iso2022@@Base+0x938>  // b.none
    2338:	ldr	x9, [x22, #8]
    233c:	sub	x26, x9, #0x20
    2340:	ldrb	w9, [x26, #32]!
    2344:	cmp	w9, w8
    2348:	b.ne	2340 <PyInit__codecs_iso2022@@Base+0x92c>  // b.any
    234c:	ldrb	w8, [x26, #2]
    2350:	cmp	x20, x8
    2354:	b.lt	2804 <PyInit__codecs_iso2022@@Base+0xdf0>  // b.tstop
    2358:	ldr	x8, [x26, #16]
    235c:	blr	x8
    2360:	mov	w8, #0xffff                	// #65535
    2364:	cmp	w0, w8
    2368:	b.eq	2844 <PyInit__codecs_iso2022@@Base+0xe30>  // b.none
    236c:	mov	w24, w0
    2370:	lsr	w25, w0, #16
    2374:	cbz	w25, 2380 <PyInit__codecs_iso2022@@Base+0x96c>
    2378:	cmp	w25, #0x2
    237c:	b.hi	2590 <PyInit__codecs_iso2022@@Base+0xb7c>  // b.pmore
    2380:	mov	x0, x19
    2384:	mov	w1, w24
    2388:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    238c:	mov	w25, #0x1                   	// #1
    2390:	tbz	w0, #31, 2740 <PyInit__codecs_iso2022@@Base+0xd2c>
    2394:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    2398:	ldrb	w9, [x22]
    239c:	tbnz	w9, #0, 23b8 <PyInit__codecs_iso2022@@Base+0x9a4>
    23a0:	orr	w8, w8, #0x1
    23a4:	b	245c <PyInit__codecs_iso2022@@Base+0xa48>
    23a8:	ldrb	w9, [x22]
    23ac:	tbnz	w9, #0, 23b8 <PyInit__codecs_iso2022@@Base+0x9a4>
    23b0:	and	w8, w8, #0xfe
    23b4:	b	245c <PyInit__codecs_iso2022@@Base+0xa48>
    23b8:	mov	x0, x19
    23bc:	mov	w1, w24
    23c0:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    23c4:	tbz	w0, #31, 2460 <PyInit__codecs_iso2022@@Base+0xa4c>
    23c8:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    23cc:	cmp	x20, #0x2
    23d0:	b.lt	2804 <PyInit__codecs_iso2022@@Base+0xdf0>  // b.tstop
    23d4:	ldrb	w11, [x0, #1]
    23d8:	sub	w8, w11, #0x24
    23dc:	cmp	w8, #0xa
    23e0:	b.hi	23f0 <PyInit__codecs_iso2022@@Base+0x9dc>  // b.pmore
    23e4:	mov	w9, #0x435                 	// #1077
    23e8:	lsr	w8, w9, w8
    23ec:	tbnz	w8, #0, 2474 <PyInit__codecs_iso2022@@Base+0xa60>
    23f0:	cmp	w11, #0x4e
    23f4:	b.ne	2444 <PyInit__codecs_iso2022@@Base+0xa30>  // b.any
    23f8:	ldr	w8, [x22]
    23fc:	tbz	w8, #1, 2444 <PyInit__codecs_iso2022@@Base+0xa30>
    2400:	subs	x20, x20, #0x3
    2404:	b.lt	2804 <PyInit__codecs_iso2022@@Base+0xdf0>  // b.tstop
    2408:	ldrb	w8, [x23, #2]
    240c:	cmp	w8, #0x46
    2410:	b.eq	24dc <PyInit__codecs_iso2022@@Base+0xac8>  // b.none
    2414:	cmp	w8, #0x42
    2418:	b.eq	251c <PyInit__codecs_iso2022@@Base+0xb08>  // b.none
    241c:	cmp	w8, #0x41
    2420:	b.ne	2834 <PyInit__codecs_iso2022@@Base+0xe20>  // b.any
    2424:	ldrsb	w8, [x0, #2]
    2428:	tbnz	w8, #31, 283c <PyInit__codecs_iso2022@@Base+0xe28>
    242c:	and	w8, w8, #0xff
    2430:	add	w1, w8, #0x80
    2434:	mov	x0, x19
    2438:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    243c:	tbz	w0, #31, 2530 <PyInit__codecs_iso2022@@Base+0xb1c>
    2440:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    2444:	mov	w1, #0x1b                  	// #27
    2448:	mov	x0, x19
    244c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2450:	tbnz	w0, #31, 27fc <PyInit__codecs_iso2022@@Base+0xde8>
    2454:	ldrb	w8, [x23, #4]
    2458:	orr	w8, w8, #0x2
    245c:	strb	w8, [x23, #4]
    2460:	ldr	x8, [x21]
    2464:	sub	x20, x20, #0x1
    2468:	add	x8, x8, #0x1
    246c:	str	x8, [x21]
    2470:	b	2278 <PyInit__codecs_iso2022@@Base+0x864>
    2474:	mov	w8, #0x1                   	// #1
    2478:	b	2488 <PyInit__codecs_iso2022@@Base+0xa74>
    247c:	cmp	x8, #0xf
    2480:	add	x8, x8, #0x1
    2484:	b.ge	280c <PyInit__codecs_iso2022@@Base+0xdf8>  // b.tcont
    2488:	cmp	x8, x20
    248c:	b.ge	2804 <PyInit__codecs_iso2022@@Base+0xdf0>  // b.tcont
    2490:	ldrb	w9, [x0, x8]
    2494:	cmp	w9, #0x40
    2498:	b.eq	2540 <PyInit__codecs_iso2022@@Base+0xb2c>  // b.none
    249c:	sub	w10, w9, #0x41
    24a0:	and	w10, w10, #0xff
    24a4:	cmp	w10, #0x1a
    24a8:	b.cc	2540 <PyInit__codecs_iso2022@@Base+0xb2c>  // b.lo, b.ul, b.last
    24ac:	ldrb	w10, [x22]
    24b0:	tbz	w10, #2, 247c <PyInit__codecs_iso2022@@Base+0xa68>
    24b4:	add	x10, x8, #0x1
    24b8:	cmp	x10, x20
    24bc:	b.ge	247c <PyInit__codecs_iso2022@@Base+0xa68>  // b.tcont
    24c0:	cmp	w9, #0x26
    24c4:	b.ne	247c <PyInit__codecs_iso2022@@Base+0xa68>  // b.any
    24c8:	ldrb	w9, [x0, x10]
    24cc:	add	x10, x8, #0x2
    24d0:	cmp	w9, #0x40
    24d4:	csel	x8, x10, x8, eq  // eq = none
    24d8:	b	247c <PyInit__codecs_iso2022@@Base+0xa68>
    24dc:	ldrb	w8, [x0, #2]
    24e0:	eor	x1, x8, #0x80
    24e4:	cmp	w1, #0x9f
    24e8:	b.ls	250c <PyInit__codecs_iso2022@@Base+0xaf8>  // b.plast
    24ec:	cmp	w1, #0xbf
    24f0:	b.hi	25f4 <PyInit__codecs_iso2022@@Base+0xbe0>  // b.pmore
    24f4:	sub	w9, w1, #0xa0
    24f8:	mov	w10, #0x3bc9                	// #15305
    24fc:	lsl	x9, x25, x9
    2500:	movk	w10, #0x288f, lsl #16
    2504:	tst	x9, x10
    2508:	b.eq	25f4 <PyInit__codecs_iso2022@@Base+0xbe0>  // b.none
    250c:	mov	x0, x19
    2510:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2514:	tbz	w0, #31, 2530 <PyInit__codecs_iso2022@@Base+0xb1c>
    2518:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    251c:	ldrb	w1, [x0, #2]
    2520:	tbnz	w1, #7, 283c <PyInit__codecs_iso2022@@Base+0xe28>
    2524:	mov	x0, x19
    2528:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    252c:	tbnz	w0, #31, 27fc <PyInit__codecs_iso2022@@Base+0xde8>
    2530:	ldr	x8, [x21]
    2534:	add	x8, x8, #0x3
    2538:	str	x8, [x21]
    253c:	b	2278 <PyInit__codecs_iso2022@@Base+0x864>
    2540:	add	x9, x8, #0x1
    2544:	cmp	x9, #0x6
    2548:	b.hi	27e8 <PyInit__codecs_iso2022@@Base+0xdd4>  // b.pmore
    254c:	adrp	x12, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2550:	add	x12, x12, #0xb5a
    2554:	adr	x10, 2568 <PyInit__codecs_iso2022@@Base+0xb54>
    2558:	ldrb	w8, [x12, x9]
    255c:	add	x10, x10, x8, lsl #2
    2560:	mov	w8, #0x1                   	// #1
    2564:	br	x10
    2568:	ldrb	w10, [x0, #2]
    256c:	cmp	w11, #0x29
    2570:	b.eq	2788 <PyInit__codecs_iso2022@@Base+0xd74>  // b.none
    2574:	cmp	w11, #0x28
    2578:	b.eq	2790 <PyInit__codecs_iso2022@@Base+0xd7c>  // b.none
    257c:	cmp	w11, #0x24
    2580:	b.ne	2798 <PyInit__codecs_iso2022@@Base+0xd84>  // b.any
    2584:	mov	x8, xzr
    2588:	orr	w10, w10, #0xffffff80
    258c:	b	27b8 <PyInit__codecs_iso2022@@Base+0xda4>
    2590:	ldr	w8, [x19, #20]
    2594:	str	x28, [sp, #8]
    2598:	and	w28, w24, #0xffff
    259c:	cmp	w25, w28
    25a0:	csel	w2, w25, w28, hi  // hi = pmore
    25a4:	cmp	w2, w8
    25a8:	b.hi	25bc <PyInit__codecs_iso2022@@Base+0xba8>  // b.pmore
    25ac:	ldp	x8, x9, [x19, #24]
    25b0:	sub	x8, x8, x9
    25b4:	cmp	x8, #0x1
    25b8:	b.gt	25cc <PyInit__codecs_iso2022@@Base+0xbb8>
    25bc:	mov	w1, #0x2                   	// #2
    25c0:	mov	x0, x19
    25c4:	bl	18f0 <_PyUnicodeWriter_PrepareInternal@plt>
    25c8:	tbnz	w0, #31, 27fc <PyInit__codecs_iso2022@@Base+0xde8>
    25cc:	ldr	w8, [x19, #16]
    25d0:	cmp	w8, #0x2
    25d4:	b.eq	26c4 <PyInit__codecs_iso2022@@Base+0xcb0>  // b.none
    25d8:	cmp	w8, #0x1
    25dc:	b.ne	26d8 <PyInit__codecs_iso2022@@Base+0xcc4>  // b.any
    25e0:	ldr	x8, [x19, #8]
    25e4:	ldr	x9, [x19, #32]
    25e8:	strb	w25, [x8, x9]
    25ec:	ldr	w8, [x19, #16]
    25f0:	b	26e4 <PyInit__codecs_iso2022@@Base+0xcd0>
    25f4:	sub	w8, w8, #0x34
    25f8:	cmp	w8, #0x4a
    25fc:	b.ls	2690 <PyInit__codecs_iso2022@@Base+0xc7c>  // b.plast
    2600:	cmp	w1, #0xaf
    2604:	b.eq	2760 <PyInit__codecs_iso2022@@Base+0xd4c>  // b.none
    2608:	cmp	w1, #0xa2
    260c:	b.eq	2774 <PyInit__codecs_iso2022@@Base+0xd60>  // b.none
    2610:	cmp	w1, #0xa1
    2614:	b.ne	283c <PyInit__codecs_iso2022@@Base+0xe28>  // b.any
    2618:	mov	w1, #0x2018                	// #8216
    261c:	mov	x0, x19
    2620:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2624:	tbz	w0, #31, 2530 <PyInit__codecs_iso2022@@Base+0xb1c>
    2628:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    262c:	cmp	w11, #0x24
    2630:	b.ne	2854 <PyInit__codecs_iso2022@@Base+0xe40>  // b.any
    2634:	ldrb	w8, [x0, #2]
    2638:	ldrb	w10, [x0, #3]
    263c:	cmp	w8, #0x28
    2640:	orr	w10, w10, #0xffffff80
    2644:	b.eq	2758 <PyInit__codecs_iso2022@@Base+0xd44>  // b.none
    2648:	cmp	w8, #0x29
    264c:	b.ne	2854 <PyInit__codecs_iso2022@@Base+0xe40>  // b.any
    2650:	mov	w8, #0x1                   	// #1
    2654:	b	27b8 <PyInit__codecs_iso2022@@Base+0xda4>
    2658:	ldrb	w8, [x22]
    265c:	tbz	w8, #2, 284c <PyInit__codecs_iso2022@@Base+0xe38>
    2660:	ldrb	w8, [x0, #3]
    2664:	cmp	w8, #0x1b
    2668:	b.ne	284c <PyInit__codecs_iso2022@@Base+0xe38>  // b.any
    266c:	ldrb	w8, [x0, #4]
    2670:	cmp	w8, #0x24
    2674:	b.ne	284c <PyInit__codecs_iso2022@@Base+0xe38>  // b.any
    2678:	ldrb	w8, [x0, #5]
    267c:	cmp	w8, #0x42
    2680:	b.ne	284c <PyInit__codecs_iso2022@@Base+0xe38>  // b.any
    2684:	mov	x8, xzr
    2688:	mov	w10, #0xc2                  	// #194
    268c:	b	27b8 <PyInit__codecs_iso2022@@Base+0xda4>
    2690:	cmp	w1, #0xd3
    2694:	b.hi	26b0 <PyInit__codecs_iso2022@@Base+0xc9c>  // b.pmore
    2698:	sub	w8, w1, #0xb4
    269c:	mov	w9, #0xfd77                	// #64887
    26a0:	lsl	x8, x25, x8
    26a4:	movk	w9, #0xbfff, lsl #16
    26a8:	tst	x8, x9
    26ac:	b.eq	2600 <PyInit__codecs_iso2022@@Base+0xbec>  // b.none
    26b0:	add	w1, w1, #0x2d0
    26b4:	mov	x0, x19
    26b8:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    26bc:	tbz	w0, #31, 2530 <PyInit__codecs_iso2022@@Base+0xb1c>
    26c0:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    26c4:	ldr	x8, [x19, #8]
    26c8:	ldr	x9, [x19, #32]
    26cc:	strh	w25, [x8, x9, lsl #1]
    26d0:	mov	w25, #0x1                   	// #1
    26d4:	b	2710 <PyInit__codecs_iso2022@@Base+0xcfc>
    26d8:	ldr	x9, [x19, #8]
    26dc:	ldr	x10, [x19, #32]
    26e0:	str	w25, [x9, x10, lsl #2]
    26e4:	cmp	w8, #0x2
    26e8:	mov	w25, #0x1                   	// #1
    26ec:	b.eq	2710 <PyInit__codecs_iso2022@@Base+0xcfc>  // b.none
    26f0:	cmp	w8, #0x1
    26f4:	b.ne	2724 <PyInit__codecs_iso2022@@Base+0xd10>  // b.any
    26f8:	ldr	x8, [x19, #8]
    26fc:	ldr	x9, [x19, #32]
    2700:	add	x8, x9, x8
    2704:	strb	w24, [x8, #1]
    2708:	ldr	x8, [x19, #32]
    270c:	b	2734 <PyInit__codecs_iso2022@@Base+0xd20>
    2710:	ldr	x9, [x19, #8]
    2714:	ldr	x8, [x19, #32]
    2718:	add	x9, x9, x8, lsl #1
    271c:	strh	w24, [x9, #2]
    2720:	b	2734 <PyInit__codecs_iso2022@@Base+0xd20>
    2724:	ldr	x9, [x19, #8]
    2728:	ldr	x8, [x19, #32]
    272c:	add	x9, x9, x8, lsl #2
    2730:	str	w28, [x9, #4]
    2734:	ldr	x28, [sp, #8]
    2738:	add	x8, x8, #0x2
    273c:	str	x8, [x19, #32]
    2740:	ldrb	w8, [x26, #2]
    2744:	ldr	x9, [x21]
    2748:	sub	x20, x20, x8
    274c:	add	x9, x9, x8
    2750:	str	x9, [x21]
    2754:	b	2278 <PyInit__codecs_iso2022@@Base+0x864>
    2758:	mov	x8, xzr
    275c:	b	27b8 <PyInit__codecs_iso2022@@Base+0xda4>
    2760:	mov	w1, #0x2015                	// #8213
    2764:	mov	x0, x19
    2768:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    276c:	tbz	w0, #31, 2530 <PyInit__codecs_iso2022@@Base+0xb1c>
    2770:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    2774:	mov	w1, #0x2019                	// #8217
    2778:	mov	x0, x19
    277c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2780:	tbz	w0, #31, 2530 <PyInit__codecs_iso2022@@Base+0xb1c>
    2784:	b	27fc <PyInit__codecs_iso2022@@Base+0xde8>
    2788:	mov	w8, #0x1                   	// #1
    278c:	b	27b0 <PyInit__codecs_iso2022@@Base+0xd9c>
    2790:	mov	x8, xzr
    2794:	b	27b0 <PyInit__codecs_iso2022@@Base+0xd9c>
    2798:	cmp	w11, #0x2e
    279c:	b.ne	283c <PyInit__codecs_iso2022@@Base+0xe28>  // b.any
    27a0:	ldr	w11, [x22]
    27a4:	mov	w8, #0x3                   	// #3
    27a8:	tbz	w11, #1, 2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    27ac:	mov	w8, #0x2                   	// #2
    27b0:	cmp	w10, #0x42
    27b4:	b.eq	27d0 <PyInit__codecs_iso2022@@Base+0xdbc>  // b.none
    27b8:	ldr	x11, [x22, #8]
    27bc:	ldrb	w12, [x11], #32
    27c0:	cbz	w12, 27cc <PyInit__codecs_iso2022@@Base+0xdb8>
    27c4:	cmp	w12, w10, uxtb
    27c8:	b.ne	27bc <PyInit__codecs_iso2022@@Base+0xda8>  // b.any
    27cc:	cbz	w12, 27e8 <PyInit__codecs_iso2022@@Base+0xdd4>
    27d0:	strb	w10, [x23, x8]
    27d4:	ldr	x8, [x21]
    27d8:	sub	x20, x20, x9
    27dc:	add	x8, x8, x9
    27e0:	str	x8, [x21]
    27e4:	b	2278 <PyInit__codecs_iso2022@@Base+0x864>
    27e8:	mov	x8, x9
    27ec:	cbz	x9, 2278 <PyInit__codecs_iso2022@@Base+0x864>
    27f0:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    27f4:	mov	x8, xzr
    27f8:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    27fc:	mov	x8, #0xfffffffffffffffc    	// #-4
    2800:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    2804:	mov	x8, #0xfffffffffffffffe    	// #-2
    2808:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    280c:	mov	w8, #0x1                   	// #1
    2810:	ldp	x20, x19, [sp, #96]
    2814:	ldp	x22, x21, [sp, #80]
    2818:	ldp	x24, x23, [sp, #64]
    281c:	ldp	x26, x25, [sp, #48]
    2820:	ldp	x28, x27, [sp, #32]
    2824:	ldp	x29, x30, [sp, #16]
    2828:	mov	x0, x8
    282c:	add	sp, sp, #0x70
    2830:	ret
    2834:	mov	x8, #0xfffffffffffffffd    	// #-3
    2838:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    283c:	mov	w8, #0x3                   	// #3
    2840:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    2844:	ldrb	w8, [x26, #2]
    2848:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    284c:	mov	w8, #0x6                   	// #6
    2850:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    2854:	mov	w8, #0x4                   	// #4
    2858:	b	2810 <PyInit__codecs_iso2022@@Base+0xdfc>
    285c:	mov	w8, #0x4242                	// #16962
    2860:	mov	w9, #0x42                  	// #66
    2864:	strb	wzr, [x0, #4]
    2868:	strh	w8, [x0]
    286c:	strb	w9, [x0, #2]
    2870:	mov	w0, wzr
    2874:	ret
    2878:	ldrb	w8, [x0, #4]
    287c:	mov	w9, #0x42                  	// #66
    2880:	strb	w9, [x0]
    2884:	and	w8, w8, #0xfe
    2888:	strb	w8, [x0, #4]
    288c:	mov	x0, xzr
    2890:	ret
    2894:	stp	x29, x30, [sp, #-32]!
    2898:	str	x19, [sp, #16]
    289c:	mov	x29, sp
    28a0:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    28a4:	ldrb	w8, [x19, #320]
    28a8:	tbz	w8, #0, 28c4 <PyInit__codecs_iso2022@@Base+0xeb0>
    28ac:	mov	w0, wzr
    28b0:	mov	w8, #0x1                   	// #1
    28b4:	strb	w8, [x19, #320]
    28b8:	ldr	x19, [sp, #16]
    28bc:	ldp	x29, x30, [sp], #32
    28c0:	ret
    28c4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    28c8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    28cc:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    28d0:	add	x0, x0, #0xc48
    28d4:	add	x1, x1, #0xc53
    28d8:	add	x2, x2, #0x158
    28dc:	mov	x3, xzr
    28e0:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    28e4:	cbz	w0, 28f8 <PyInit__codecs_iso2022@@Base+0xee4>
    28e8:	mov	w0, #0xffffffff            	// #-1
    28ec:	ldr	x19, [sp, #16]
    28f0:	ldp	x29, x30, [sp], #32
    28f4:	ret
    28f8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    28fc:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2900:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2904:	add	x0, x0, #0xc48
    2908:	add	x1, x1, #0xc5f
    290c:	add	x3, x3, #0x160
    2910:	mov	x2, xzr
    2914:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2918:	cbz	w0, 28ac <PyInit__codecs_iso2022@@Base+0xe98>
    291c:	mov	w0, #0xffffffff            	// #-1
    2920:	ldr	x19, [sp, #16]
    2924:	ldp	x29, x30, [sp], #32
    2928:	ret
    292c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2930:	ldrb	w10, [x0]
    2934:	ldr	x11, [x8, #352]
    2938:	lsl	x8, x10, #4
    293c:	ldr	x8, [x11, x8]
    2940:	cbz	x8, 2964 <PyInit__codecs_iso2022@@Base+0xf50>
    2944:	add	x11, x11, x10, lsl #4
    2948:	ldrb	w9, [x0, #1]
    294c:	ldrb	w10, [x11, #8]
    2950:	cmp	w9, w10
    2954:	b.cc	2964 <PyInit__codecs_iso2022@@Base+0xf50>  // b.lo, b.ul, b.last
    2958:	ldrb	w11, [x11, #9]
    295c:	cmp	w9, w11
    2960:	b.ls	296c <PyInit__codecs_iso2022@@Base+0xf58>  // b.plast
    2964:	mov	w0, #0xffff                	// #65535
    2968:	ret
    296c:	sub	x9, x9, x10
    2970:	ldrh	w8, [x8, x9, lsl #1]
    2974:	mov	w9, #0xfffe                	// #65534
    2978:	cmp	w8, w9
    297c:	csinv	w8, w8, wzr, ne  // ne = any
    2980:	and	w0, w8, #0xffff
    2984:	ret
    2988:	ldr	w8, [x0]
    298c:	ubfx	x9, x8, #16, #16
    2990:	cbnz	w9, 29d4 <PyInit__codecs_iso2022@@Base+0xfc0>
    2994:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2998:	ldr	x10, [x9, #344]
    299c:	lsr	x11, x8, #8
    29a0:	lsl	x9, x11, #4
    29a4:	ldr	x9, [x10, x9]
    29a8:	cbz	x9, 29d4 <PyInit__codecs_iso2022@@Base+0xfc0>
    29ac:	add	x10, x10, x11, lsl #4
    29b0:	ldrb	w12, [x10, #8]
    29b4:	and	w11, w8, #0xff
    29b8:	subs	w8, w11, w12
    29bc:	b.cc	29d4 <PyInit__codecs_iso2022@@Base+0xfc0>  // b.lo, b.ul, b.last
    29c0:	ldrb	w10, [x10, #9]
    29c4:	cmp	w11, w10
    29c8:	b.hi	29d4 <PyInit__codecs_iso2022@@Base+0xfc0>  // b.pmore
    29cc:	ldrsh	w0, [x9, w8, uxtw #1]
    29d0:	tbz	w0, #31, 29d8 <PyInit__codecs_iso2022@@Base+0xfc4>
    29d4:	mov	w0, #0xffff                	// #65535
    29d8:	ret
    29dc:	stp	x29, x30, [sp, #-48]!
    29e0:	stp	x22, x21, [sp, #16]
    29e4:	stp	x20, x19, [sp, #32]
    29e8:	mov	x29, sp
    29ec:	mov	x20, x3
    29f0:	mov	x21, x2
    29f4:	mov	x22, x1
    29f8:	bl	18b0 <PyImport_ImportModule@plt>
    29fc:	cbz	x0, 2ab0 <PyInit__codecs_iso2022@@Base+0x109c>
    2a00:	mov	x1, x22
    2a04:	mov	x19, x0
    2a08:	bl	1840 <PyObject_GetAttrString@plt>
    2a0c:	cbz	x0, 2a98 <PyInit__codecs_iso2022@@Base+0x1084>
    2a10:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a14:	add	x1, x1, #0xbb6
    2a18:	mov	x22, x0
    2a1c:	bl	1880 <PyCapsule_IsValid@plt>
    2a20:	cbz	w0, 2a80 <PyInit__codecs_iso2022@@Base+0x106c>
    2a24:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a28:	add	x1, x1, #0xbb6
    2a2c:	mov	x0, x22
    2a30:	bl	1930 <PyCapsule_GetPointer@plt>
    2a34:	cbz	x21, 2a40 <PyInit__codecs_iso2022@@Base+0x102c>
    2a38:	ldr	x8, [x0, #8]
    2a3c:	str	x8, [x21]
    2a40:	cbz	x20, 2a4c <PyInit__codecs_iso2022@@Base+0x1038>
    2a44:	ldr	x8, [x0, #16]
    2a48:	str	x8, [x20]
    2a4c:	ldr	x8, [x22]
    2a50:	subs	x8, x8, #0x1
    2a54:	str	x8, [x22]
    2a58:	b.eq	2ac4 <PyInit__codecs_iso2022@@Base+0x10b0>  // b.none
    2a5c:	ldr	x8, [x19]
    2a60:	subs	x8, x8, #0x1
    2a64:	str	x8, [x19]
    2a68:	b.eq	2adc <PyInit__codecs_iso2022@@Base+0x10c8>  // b.none
    2a6c:	mov	w0, wzr
    2a70:	ldp	x20, x19, [sp, #32]
    2a74:	ldp	x22, x21, [sp, #16]
    2a78:	ldp	x29, x30, [sp], #48
    2a7c:	ret
    2a80:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    2a84:	ldr	x8, [x8, #4032]
    2a88:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a8c:	add	x1, x1, #0xc6d
    2a90:	ldr	x0, [x8]
    2a94:	bl	1870 <PyErr_SetString@plt>
    2a98:	ldr	x8, [x19]
    2a9c:	subs	x8, x8, #0x1
    2aa0:	str	x8, [x19]
    2aa4:	b.ne	2ab0 <PyInit__codecs_iso2022@@Base+0x109c>  // b.any
    2aa8:	mov	x0, x19
    2aac:	bl	1860 <_Py_Dealloc@plt>
    2ab0:	mov	w0, #0xffffffff            	// #-1
    2ab4:	ldp	x20, x19, [sp, #32]
    2ab8:	ldp	x22, x21, [sp, #16]
    2abc:	ldp	x29, x30, [sp], #48
    2ac0:	ret
    2ac4:	mov	x0, x22
    2ac8:	bl	1860 <_Py_Dealloc@plt>
    2acc:	ldr	x8, [x19]
    2ad0:	subs	x8, x8, #0x1
    2ad4:	str	x8, [x19]
    2ad8:	b.ne	2a6c <PyInit__codecs_iso2022@@Base+0x1058>  // b.any
    2adc:	mov	x0, x19
    2ae0:	bl	1860 <_Py_Dealloc@plt>
    2ae4:	b	2a6c <PyInit__codecs_iso2022@@Base+0x1058>
    2ae8:	stp	x29, x30, [sp, #-32]!
    2aec:	str	x19, [sp, #16]
    2af0:	mov	x29, sp
    2af4:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2af8:	ldrb	w8, [x19, #324]
    2afc:	tbz	w8, #0, 2b18 <PyInit__codecs_iso2022@@Base+0x1104>
    2b00:	mov	w0, wzr
    2b04:	mov	w8, #0x1                   	// #1
    2b08:	strb	w8, [x19, #324]
    2b0c:	ldr	x19, [sp, #16]
    2b10:	ldp	x29, x30, [sp], #32
    2b14:	ret
    2b18:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b1c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b20:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b24:	add	x0, x0, #0xc89
    2b28:	add	x1, x1, #0xc94
    2b2c:	add	x2, x2, #0x168
    2b30:	mov	x3, xzr
    2b34:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2b38:	cbz	w0, 2b4c <PyInit__codecs_iso2022@@Base+0x1138>
    2b3c:	mov	w0, #0xffffffff            	// #-1
    2b40:	ldr	x19, [sp, #16]
    2b44:	ldp	x29, x30, [sp], #32
    2b48:	ret
    2b4c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b50:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2b54:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b58:	add	x0, x0, #0xc89
    2b5c:	add	x1, x1, #0xca5
    2b60:	add	x3, x3, #0x170
    2b64:	mov	x2, xzr
    2b68:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2b6c:	cbz	w0, 2b00 <PyInit__codecs_iso2022@@Base+0x10ec>
    2b70:	mov	w0, #0xffffffff            	// #-1
    2b74:	ldr	x19, [sp, #16]
    2b78:	ldp	x29, x30, [sp], #32
    2b7c:	ret
    2b80:	ldrb	w9, [x0]
    2b84:	cmp	x9, #0x21
    2b88:	b.ne	2ba0 <PyInit__codecs_iso2022@@Base+0x118c>  // b.any
    2b8c:	ldrb	w8, [x0, #1]
    2b90:	cmp	w8, #0x40
    2b94:	b.ne	2ba0 <PyInit__codecs_iso2022@@Base+0x118c>  // b.any
    2b98:	mov	w0, #0xff3c                	// #65340
    2b9c:	ret
    2ba0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ba4:	ldr	x11, [x8, #368]
    2ba8:	lsl	x8, x9, #4
    2bac:	ldr	x8, [x11, x8]
    2bb0:	cbz	x8, 2bd4 <PyInit__codecs_iso2022@@Base+0x11c0>
    2bb4:	add	x11, x11, x9, lsl #4
    2bb8:	ldrb	w10, [x0, #1]
    2bbc:	ldrb	w9, [x11, #8]
    2bc0:	cmp	w10, w9
    2bc4:	b.cc	2bd4 <PyInit__codecs_iso2022@@Base+0x11c0>  // b.lo, b.ul, b.last
    2bc8:	ldrb	w11, [x11, #9]
    2bcc:	cmp	w10, w11
    2bd0:	b.ls	2bdc <PyInit__codecs_iso2022@@Base+0x11c8>  // b.plast
    2bd4:	mov	w0, #0xffff                	// #65535
    2bd8:	ret
    2bdc:	sub	x9, x10, x9
    2be0:	ldrh	w8, [x8, x9, lsl #1]
    2be4:	mov	w9, #0xfffe                	// #65534
    2be8:	cmp	w8, w9
    2bec:	csinv	w8, w8, wzr, ne  // ne = any
    2bf0:	and	w0, w8, #0xffff
    2bf4:	ret
    2bf8:	ldr	w8, [x0]
    2bfc:	ubfx	x9, x8, #16, #16
    2c00:	cbnz	w9, 2c58 <PyInit__codecs_iso2022@@Base+0x1244>
    2c04:	mov	w9, #0xff3c                	// #65340
    2c08:	cmp	w8, w9
    2c0c:	b.ne	2c18 <PyInit__codecs_iso2022@@Base+0x1204>  // b.any
    2c10:	mov	w0, #0x2140                	// #8512
    2c14:	ret
    2c18:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c1c:	ldr	x10, [x9, #360]
    2c20:	lsr	x11, x8, #8
    2c24:	lsl	x9, x11, #4
    2c28:	ldr	x9, [x10, x9]
    2c2c:	cbz	x9, 2c58 <PyInit__codecs_iso2022@@Base+0x1244>
    2c30:	add	x10, x10, x11, lsl #4
    2c34:	ldrb	w12, [x10, #8]
    2c38:	and	w11, w8, #0xff
    2c3c:	subs	w8, w11, w12
    2c40:	b.cc	2c58 <PyInit__codecs_iso2022@@Base+0x1244>  // b.lo, b.ul, b.last
    2c44:	ldrb	w10, [x10, #9]
    2c48:	cmp	w11, w10
    2c4c:	b.hi	2c58 <PyInit__codecs_iso2022@@Base+0x1244>  // b.pmore
    2c50:	ldrsh	w0, [x9, w8, uxtw #1]
    2c54:	tbz	w0, #31, 2c5c <PyInit__codecs_iso2022@@Base+0x1248>
    2c58:	mov	w0, #0xffff                	// #65535
    2c5c:	ret
    2c60:	ldrb	w0, [x0]
    2c64:	cmp	w0, #0x5c
    2c68:	b.cc	2c94 <PyInit__codecs_iso2022@@Base+0x1280>  // b.lo, b.ul, b.last
    2c6c:	b.ne	2c78 <PyInit__codecs_iso2022@@Base+0x1264>  // b.any
    2c70:	mov	w0, #0xa5                  	// #165
    2c74:	ret
    2c78:	cmp	w0, #0x7e
    2c7c:	b.cc	2c94 <PyInit__codecs_iso2022@@Base+0x1280>  // b.lo, b.ul, b.last
    2c80:	cmp	w0, #0x7e
    2c84:	b.eq	2c98 <PyInit__codecs_iso2022@@Base+0x1284>  // b.none
    2c88:	cmp	w0, #0x7f
    2c8c:	b.eq	2c94 <PyInit__codecs_iso2022@@Base+0x1280>  // b.none
    2c90:	mov	w0, #0xffff                	// #65535
    2c94:	ret
    2c98:	mov	w0, #0x203e                	// #8254
    2c9c:	ret
    2ca0:	ldr	w8, [x0]
    2ca4:	cmp	w8, #0x7f
    2ca8:	b.ls	2cc8 <PyInit__codecs_iso2022@@Base+0x12b4>  // b.plast
    2cac:	cmp	w8, #0xa5
    2cb0:	b.eq	2ce0 <PyInit__codecs_iso2022@@Base+0x12cc>  // b.none
    2cb4:	mov	w9, #0x203e                	// #8254
    2cb8:	cmp	w8, w9
    2cbc:	b.ne	2ce8 <PyInit__codecs_iso2022@@Base+0x12d4>  // b.any
    2cc0:	mov	w0, #0x7e                  	// #126
    2cc4:	b	2cdc <PyInit__codecs_iso2022@@Base+0x12c8>
    2cc8:	cmp	w8, #0x5c
    2ccc:	mov	w0, #0xffff                	// #65535
    2cd0:	b.eq	2cdc <PyInit__codecs_iso2022@@Base+0x12c8>  // b.none
    2cd4:	cmp	w8, #0x7e
    2cd8:	b.ne	2cf0 <PyInit__codecs_iso2022@@Base+0x12dc>  // b.any
    2cdc:	ret
    2ce0:	mov	w0, #0x5c                  	// #92
    2ce4:	ret
    2ce8:	mov	w0, #0xffff                	// #65535
    2cec:	ret
    2cf0:	mov	w0, w8
    2cf4:	ret
    2cf8:	stp	x29, x30, [sp, #-32]!
    2cfc:	str	x19, [sp, #16]
    2d00:	mov	x29, sp
    2d04:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d08:	ldrb	w8, [x19, #328]
    2d0c:	tbz	w8, #0, 2d28 <PyInit__codecs_iso2022@@Base+0x1314>
    2d10:	mov	w0, wzr
    2d14:	mov	w8, #0x1                   	// #1
    2d18:	strb	w8, [x19, #328]
    2d1c:	ldr	x19, [sp, #16]
    2d20:	ldp	x29, x30, [sp], #32
    2d24:	ret
    2d28:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d2c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d30:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d34:	add	x0, x0, #0xc89
    2d38:	add	x1, x1, #0xc94
    2d3c:	add	x2, x2, #0x168
    2d40:	mov	x3, xzr
    2d44:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2d48:	cbz	w0, 2d5c <PyInit__codecs_iso2022@@Base+0x1348>
    2d4c:	mov	w0, #0xffffffff            	// #-1
    2d50:	ldr	x19, [sp, #16]
    2d54:	ldp	x29, x30, [sp], #32
    2d58:	ret
    2d5c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d60:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d64:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d68:	add	x0, x0, #0xc89
    2d6c:	add	x1, x1, #0xcb4
    2d70:	add	x3, x3, #0x178
    2d74:	mov	x2, xzr
    2d78:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2d7c:	cbz	w0, 2d10 <PyInit__codecs_iso2022@@Base+0x12fc>
    2d80:	mov	w0, #0xffffffff            	// #-1
    2d84:	ldr	x19, [sp, #16]
    2d88:	ldp	x29, x30, [sp], #32
    2d8c:	ret
    2d90:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d94:	ldrb	w10, [x0]
    2d98:	ldr	x11, [x8, #376]
    2d9c:	lsl	x8, x10, #4
    2da0:	ldr	x8, [x11, x8]
    2da4:	cbz	x8, 2dc8 <PyInit__codecs_iso2022@@Base+0x13b4>
    2da8:	add	x11, x11, x10, lsl #4
    2dac:	ldrb	w9, [x0, #1]
    2db0:	ldrb	w10, [x11, #8]
    2db4:	cmp	w9, w10
    2db8:	b.cc	2dc8 <PyInit__codecs_iso2022@@Base+0x13b4>  // b.lo, b.ul, b.last
    2dbc:	ldrb	w11, [x11, #9]
    2dc0:	cmp	w9, w11
    2dc4:	b.ls	2dd0 <PyInit__codecs_iso2022@@Base+0x13bc>  // b.plast
    2dc8:	mov	w0, #0xffff                	// #65535
    2dcc:	ret
    2dd0:	sub	x9, x9, x10
    2dd4:	ldrh	w8, [x8, x9, lsl #1]
    2dd8:	mov	w9, #0xfffe                	// #65534
    2ddc:	cmp	w8, w9
    2de0:	csinv	w8, w8, wzr, ne  // ne = any
    2de4:	and	w0, w8, #0xffff
    2de8:	ret
    2dec:	ldr	w8, [x0]
    2df0:	ubfx	x9, x8, #16, #16
    2df4:	cbnz	w9, 2e30 <PyInit__codecs_iso2022@@Base+0x141c>
    2df8:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2dfc:	ldr	x10, [x9, #360]
    2e00:	lsr	x11, x8, #8
    2e04:	lsl	x9, x11, #4
    2e08:	ldr	x9, [x10, x9]
    2e0c:	cbz	x9, 2e30 <PyInit__codecs_iso2022@@Base+0x141c>
    2e10:	add	x10, x10, x11, lsl #4
    2e14:	ldrb	w12, [x10, #8]
    2e18:	and	w11, w8, #0xff
    2e1c:	subs	w8, w11, w12
    2e20:	b.cc	2e30 <PyInit__codecs_iso2022@@Base+0x141c>  // b.lo, b.ul, b.last
    2e24:	ldrb	w10, [x10, #9]
    2e28:	cmp	w11, w10
    2e2c:	b.ls	2e38 <PyInit__codecs_iso2022@@Base+0x1424>  // b.plast
    2e30:	mov	w0, #0xffff                	// #65535
    2e34:	ret
    2e38:	ldrsh	w8, [x9, w8, uxtw #1]
    2e3c:	and	w9, w8, #0x7fff
    2e40:	cmn	w8, #0x1
    2e44:	csinv	w0, w9, wzr, lt  // lt = tstop
    2e48:	ret
    2e4c:	stp	x29, x30, [sp, #-32]!
    2e50:	str	x19, [sp, #16]
    2e54:	mov	x29, sp
    2e58:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e5c:	ldrb	w8, [x19, #332]
    2e60:	tbz	w8, #0, 2e7c <PyInit__codecs_iso2022@@Base+0x1468>
    2e64:	mov	w0, wzr
    2e68:	mov	w8, #0x1                   	// #1
    2e6c:	strb	w8, [x19, #332]
    2e70:	ldr	x19, [sp, #16]
    2e74:	ldp	x29, x30, [sp], #32
    2e78:	ret
    2e7c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e80:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e84:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e88:	add	x0, x0, #0xcc3
    2e8c:	add	x1, x1, #0xcce
    2e90:	add	x2, x2, #0x180
    2e94:	mov	x3, xzr
    2e98:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2e9c:	cbz	w0, 2eb0 <PyInit__codecs_iso2022@@Base+0x149c>
    2ea0:	mov	w0, #0xffffffff            	// #-1
    2ea4:	ldr	x19, [sp, #16]
    2ea8:	ldp	x29, x30, [sp], #32
    2eac:	ret
    2eb0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2eb4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2eb8:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ebc:	add	x0, x0, #0xcc3
    2ec0:	add	x1, x1, #0xcdd
    2ec4:	add	x3, x3, #0x188
    2ec8:	mov	x2, xzr
    2ecc:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    2ed0:	cbz	w0, 2e64 <PyInit__codecs_iso2022@@Base+0x1450>
    2ed4:	mov	w0, #0xffffffff            	// #-1
    2ed8:	ldr	x19, [sp, #16]
    2edc:	ldp	x29, x30, [sp], #32
    2ee0:	ret
    2ee4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ee8:	ldrb	w10, [x0]
    2eec:	ldr	x11, [x8, #392]
    2ef0:	lsl	x8, x10, #4
    2ef4:	ldr	x8, [x11, x8]
    2ef8:	cbz	x8, 2f1c <PyInit__codecs_iso2022@@Base+0x1508>
    2efc:	add	x11, x11, x10, lsl #4
    2f00:	ldrb	w9, [x0, #1]
    2f04:	ldrb	w10, [x11, #8]
    2f08:	cmp	w9, w10
    2f0c:	b.cc	2f1c <PyInit__codecs_iso2022@@Base+0x1508>  // b.lo, b.ul, b.last
    2f10:	ldrb	w11, [x11, #9]
    2f14:	cmp	w9, w11
    2f18:	b.ls	2f24 <PyInit__codecs_iso2022@@Base+0x1510>  // b.plast
    2f1c:	mov	w0, #0xffff                	// #65535
    2f20:	ret
    2f24:	sub	x9, x9, x10
    2f28:	ldrh	w8, [x8, x9, lsl #1]
    2f2c:	mov	w9, #0xfffe                	// #65534
    2f30:	cmp	w8, w9
    2f34:	csinv	w8, w8, wzr, ne  // ne = any
    2f38:	and	w0, w8, #0xffff
    2f3c:	ret
    2f40:	ldr	w8, [x0]
    2f44:	ubfx	x9, x8, #16, #16
    2f48:	cbnz	w9, 2f8c <PyInit__codecs_iso2022@@Base+0x1578>
    2f4c:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f50:	ldr	x10, [x9, #384]
    2f54:	lsr	x11, x8, #8
    2f58:	lsl	x9, x11, #4
    2f5c:	ldr	x9, [x10, x9]
    2f60:	cbz	x9, 2f8c <PyInit__codecs_iso2022@@Base+0x1578>
    2f64:	add	x10, x10, x11, lsl #4
    2f68:	ldrb	w12, [x10, #8]
    2f6c:	and	w11, w8, #0xff
    2f70:	subs	w8, w11, w12
    2f74:	b.cc	2f8c <PyInit__codecs_iso2022@@Base+0x1578>  // b.lo, b.ul, b.last
    2f78:	ldrb	w10, [x10, #9]
    2f7c:	cmp	w11, w10
    2f80:	b.hi	2f8c <PyInit__codecs_iso2022@@Base+0x1578>  // b.pmore
    2f84:	ldrsh	w0, [x9, w8, uxtw #1]
    2f88:	tbz	w0, #31, 2f90 <PyInit__codecs_iso2022@@Base+0x157c>
    2f8c:	mov	w0, #0xffff                	// #65535
    2f90:	ret
    2f94:	mov	w0, #0xffff                	// #65535
    2f98:	ret
    2f9c:	mov	w0, #0xffff                	// #65535
    2fa0:	ret
    2fa4:	stp	x29, x30, [sp, #-32]!
    2fa8:	str	x19, [sp, #16]
    2fac:	mov	x29, sp
    2fb0:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fb4:	ldrb	w8, [x19, #336]
    2fb8:	tbz	w8, #0, 2fd4 <PyInit__codecs_iso2022@@Base+0x15c0>
    2fbc:	mov	w0, wzr
    2fc0:	mov	w8, #0x1                   	// #1
    2fc4:	strb	w8, [x19, #336]
    2fc8:	ldr	x19, [sp, #16]
    2fcc:	ldp	x29, x30, [sp], #32
    2fd0:	ret
    2fd4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fd8:	ldrb	w8, [x8, #324]
    2fdc:	tbz	w8, #0, 301c <PyInit__codecs_iso2022@@Base+0x1608>
    2fe0:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fe4:	add	x2, x2, #0x144
    2fe8:	mov	w8, #0x1                   	// #1
    2fec:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ff0:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ff4:	strb	w8, [x2], #76
    2ff8:	add	x0, x0, #0xc89
    2ffc:	add	x1, x1, #0xcea
    3000:	mov	x3, xzr
    3004:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    3008:	cbz	w0, 3050 <PyInit__codecs_iso2022@@Base+0x163c>
    300c:	mov	w0, #0xffffffff            	// #-1
    3010:	ldr	x19, [sp, #16]
    3014:	ldp	x29, x30, [sp], #32
    3018:	ret
    301c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3020:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3024:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3028:	add	x0, x0, #0xc89
    302c:	add	x1, x1, #0xc94
    3030:	add	x2, x2, #0x168
    3034:	mov	x3, xzr
    3038:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    303c:	cbz	w0, 3084 <PyInit__codecs_iso2022@@Base+0x1670>
    3040:	mov	w0, #0xffffffff            	// #-1
    3044:	ldr	x19, [sp, #16]
    3048:	ldp	x29, x30, [sp], #32
    304c:	ret
    3050:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3054:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3058:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    305c:	add	x0, x0, #0xc89
    3060:	add	x1, x1, #0xcfd
    3064:	add	x3, x3, #0x198
    3068:	mov	x2, xzr
    306c:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    3070:	cbz	w0, 30b8 <PyInit__codecs_iso2022@@Base+0x16a4>
    3074:	mov	w0, #0xffffffff            	// #-1
    3078:	ldr	x19, [sp, #16]
    307c:	ldp	x29, x30, [sp], #32
    3080:	ret
    3084:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3088:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    308c:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3090:	add	x0, x0, #0xc89
    3094:	add	x1, x1, #0xca5
    3098:	add	x3, x3, #0x170
    309c:	mov	x2, xzr
    30a0:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    30a4:	cbz	w0, 2fe0 <PyInit__codecs_iso2022@@Base+0x15cc>
    30a8:	mov	w0, #0xffffffff            	// #-1
    30ac:	ldr	x19, [sp, #16]
    30b0:	ldp	x29, x30, [sp], #32
    30b4:	ret
    30b8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    30bc:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    30c0:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    30c4:	add	x0, x0, #0xc89
    30c8:	add	x1, x1, #0xd12
    30cc:	add	x3, x3, #0x1a0
    30d0:	mov	x2, xzr
    30d4:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    30d8:	cbz	w0, 30ec <PyInit__codecs_iso2022@@Base+0x16d8>
    30dc:	mov	w0, #0xffffffff            	// #-1
    30e0:	ldr	x19, [sp, #16]
    30e4:	ldp	x29, x30, [sp], #32
    30e8:	ret
    30ec:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    30f0:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    30f4:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    30f8:	add	x0, x0, #0xc89
    30fc:	add	x1, x1, #0xd27
    3100:	add	x2, x2, #0x1a8
    3104:	mov	x3, xzr
    3108:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    310c:	cbz	w0, 3120 <PyInit__codecs_iso2022@@Base+0x170c>
    3110:	mov	w0, #0xffffffff            	// #-1
    3114:	ldr	x19, [sp, #16]
    3118:	ldp	x29, x30, [sp], #32
    311c:	ret
    3120:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3124:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3128:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    312c:	add	x0, x0, #0xc89
    3130:	add	x1, x1, #0xd3a
    3134:	add	x3, x3, #0x1b0
    3138:	mov	x2, xzr
    313c:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    3140:	cbz	w0, 3154 <PyInit__codecs_iso2022@@Base+0x1740>
    3144:	mov	w0, #0xffffffff            	// #-1
    3148:	ldr	x19, [sp, #16]
    314c:	ldp	x29, x30, [sp], #32
    3150:	ret
    3154:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3158:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    315c:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3160:	add	x0, x0, #0xc89
    3164:	add	x1, x1, #0xd4f
    3168:	add	x3, x3, #0x1b8
    316c:	mov	x2, xzr
    3170:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    3174:	cbz	w0, 3188 <PyInit__codecs_iso2022@@Base+0x1774>
    3178:	mov	w0, #0xffffffff            	// #-1
    317c:	ldr	x19, [sp, #16]
    3180:	ldp	x29, x30, [sp], #32
    3184:	ret
    3188:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    318c:	add	x2, x2, #0x1c0
    3190:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3194:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    3198:	add	x0, x0, #0xc89
    319c:	add	x3, x2, #0x8
    31a0:	add	x1, x1, #0xd64
    31a4:	bl	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    31a8:	cbz	w0, 2fbc <PyInit__codecs_iso2022@@Base+0x15a8>
    31ac:	mov	w0, #0xffffffff            	// #-1
    31b0:	ldr	x19, [sp, #16]
    31b4:	ldp	x29, x30, [sp], #32
    31b8:	ret
    31bc:	ldrb	w9, [x0]
    31c0:	cmp	x9, #0x21
    31c4:	b.ne	31dc <PyInit__codecs_iso2022@@Base+0x17c8>  // b.any
    31c8:	ldrb	w8, [x0, #1]
    31cc:	cmp	w8, #0x40
    31d0:	b.ne	31dc <PyInit__codecs_iso2022@@Base+0x17c8>  // b.any
    31d4:	mov	w0, #0xff3c                	// #65340
    31d8:	ret
    31dc:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    31e0:	ldr	x12, [x8, #368]
    31e4:	lsl	x10, x9, #4
    31e8:	ldr	x8, [x12, x10]
    31ec:	cbz	x8, 3224 <PyInit__codecs_iso2022@@Base+0x1810>
    31f0:	add	x13, x12, x9, lsl #4
    31f4:	ldrb	w11, [x0, #1]
    31f8:	ldrb	w12, [x13, #8]
    31fc:	cmp	w11, w12
    3200:	b.cc	3224 <PyInit__codecs_iso2022@@Base+0x1810>  // b.lo, b.ul, b.last
    3204:	ldrb	w13, [x13, #9]
    3208:	cmp	w11, w13
    320c:	b.hi	3224 <PyInit__codecs_iso2022@@Base+0x1810>  // b.pmore
    3210:	sub	x11, x11, x12
    3214:	ldrh	w8, [x8, x11, lsl #1]
    3218:	mov	w11, #0xfffe                	// #65534
    321c:	cmp	w8, w11
    3220:	b.ne	32f4 <PyInit__codecs_iso2022@@Base+0x18e0>  // b.any
    3224:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3228:	ldr	x12, [x8, #408]
    322c:	ldr	x8, [x12, x10]
    3230:	cbz	x8, 3268 <PyInit__codecs_iso2022@@Base+0x1854>
    3234:	add	x13, x12, x9, lsl #4
    3238:	ldrb	w11, [x0, #1]
    323c:	ldrb	w12, [x13, #8]
    3240:	cmp	w11, w12
    3244:	b.cc	3268 <PyInit__codecs_iso2022@@Base+0x1854>  // b.lo, b.ul, b.last
    3248:	ldrb	w13, [x13, #9]
    324c:	cmp	w11, w13
    3250:	b.hi	3268 <PyInit__codecs_iso2022@@Base+0x1854>  // b.pmore
    3254:	sub	x11, x11, x12
    3258:	ldrh	w8, [x8, x11, lsl #1]
    325c:	mov	w11, #0xfffe                	// #65534
    3260:	cmp	w8, w11
    3264:	b.ne	32f4 <PyInit__codecs_iso2022@@Base+0x18e0>  // b.any
    3268:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    326c:	ldr	x12, [x8, #432]
    3270:	ldr	x8, [x12, x10]
    3274:	cbz	x8, 32ac <PyInit__codecs_iso2022@@Base+0x1898>
    3278:	add	x13, x12, x9, lsl #4
    327c:	ldrb	w11, [x0, #1]
    3280:	ldrb	w12, [x13, #8]
    3284:	cmp	w11, w12
    3288:	b.cc	32ac <PyInit__codecs_iso2022@@Base+0x1898>  // b.lo, b.ul, b.last
    328c:	ldrb	w13, [x13, #9]
    3290:	cmp	w11, w13
    3294:	b.hi	32ac <PyInit__codecs_iso2022@@Base+0x1898>  // b.pmore
    3298:	sub	x11, x11, x12
    329c:	ldrh	w8, [x8, x11, lsl #1]
    32a0:	mov	w11, #0xfffe                	// #65534
    32a4:	cmp	w8, w11
    32a8:	b.ne	32fc <PyInit__codecs_iso2022@@Base+0x18e8>  // b.any
    32ac:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    32b0:	ldr	x11, [x8, #456]
    32b4:	ldr	x8, [x11, x10]
    32b8:	cbz	x8, 32f0 <PyInit__codecs_iso2022@@Base+0x18dc>
    32bc:	add	x11, x11, x9, lsl #4
    32c0:	ldrb	w10, [x0, #1]
    32c4:	ldrb	w9, [x11, #8]
    32c8:	cmp	w10, w9
    32cc:	b.cc	32f0 <PyInit__codecs_iso2022@@Base+0x18dc>  // b.lo, b.ul, b.last
    32d0:	ldrb	w11, [x11, #9]
    32d4:	cmp	w10, w11
    32d8:	b.hi	32f0 <PyInit__codecs_iso2022@@Base+0x18dc>  // b.pmore
    32dc:	sub	x9, x10, x9
    32e0:	ldr	w8, [x8, x9, lsl #2]
    32e4:	mov	w9, #0xfffe                	// #65534
    32e8:	cmp	w8, w9
    32ec:	b.ne	32f4 <PyInit__codecs_iso2022@@Base+0x18e0>  // b.any
    32f0:	mov	w8, #0xffff                	// #65535
    32f4:	mov	w0, w8
    32f8:	ret
    32fc:	orr	w8, w8, #0x20000
    3300:	mov	w0, w8
    3304:	ret
    3308:	stp	x29, x30, [sp, #-32]!
    330c:	stp	x20, x19, [sp, #16]
    3310:	mov	x29, sp
    3314:	ldr	x20, [x1]
    3318:	mov	x2, xzr
    331c:	mov	x19, x1
    3320:	bl	3480 <PyInit__codecs_iso2022@@Base+0x1a6c>
    3324:	cmp	x20, #0x2
    3328:	b.eq	3350 <PyInit__codecs_iso2022@@Base+0x193c>  // b.none
    332c:	cmp	x20, #0x1
    3330:	b.ne	3368 <PyInit__codecs_iso2022@@Base+0x1954>  // b.any
    3334:	mov	w8, #0xfffe                	// #65534
    3338:	cmp	w8, w0, uxth
    333c:	mov	w8, #0xfffffffe            	// #-2
    3340:	cinc	w0, w8, ne  // ne = any
    3344:	ldp	x20, x19, [sp, #16]
    3348:	ldp	x29, x30, [sp], #32
    334c:	ret
    3350:	ldr	x8, [x19]
    3354:	cmp	x8, #0x2
    3358:	csinv	w0, w0, wzr, eq  // eq = none
    335c:	ldp	x20, x19, [sp, #16]
    3360:	ldp	x29, x30, [sp], #32
    3364:	ret
    3368:	mov	w0, #0xffff                	// #65535
    336c:	ldp	x20, x19, [sp, #16]
    3370:	ldp	x29, x30, [sp], #32
    3374:	ret
    3378:	stp	x29, x30, [sp, #-16]!
    337c:	mov	x29, sp
    3380:	mov	x2, xzr
    3384:	bl	3480 <PyInit__codecs_iso2022@@Base+0x1a6c>
    3388:	sxth	w9, w0
    338c:	and	w8, w0, #0xffff
    3390:	cmn	w9, #0x1
    3394:	mov	w9, #0xfffd                	// #65533
    3398:	ccmp	w8, w9, #0x2, le
    339c:	csinv	w0, w0, wzr, hi  // hi = pmore
    33a0:	ldp	x29, x30, [sp], #16
    33a4:	ret
    33a8:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    33ac:	ldrb	w9, [x0]
    33b0:	ldr	x12, [x8, #416]
    33b4:	lsl	x10, x9, #4
    33b8:	ldr	x8, [x12, x10]
    33bc:	cbz	x8, 33f4 <PyInit__codecs_iso2022@@Base+0x19e0>
    33c0:	add	x13, x12, x9, lsl #4
    33c4:	ldrb	w11, [x0, #1]
    33c8:	ldrb	w12, [x13, #8]
    33cc:	cmp	w11, w12
    33d0:	b.cc	33f4 <PyInit__codecs_iso2022@@Base+0x19e0>  // b.lo, b.ul, b.last
    33d4:	ldrb	w13, [x13, #9]
    33d8:	cmp	w11, w13
    33dc:	b.hi	33f4 <PyInit__codecs_iso2022@@Base+0x19e0>  // b.pmore
    33e0:	sub	x11, x11, x12
    33e4:	ldrh	w8, [x8, x11, lsl #1]
    33e8:	mov	w11, #0xfffe                	// #65534
    33ec:	cmp	w8, w11
    33f0:	b.ne	3444 <PyInit__codecs_iso2022@@Base+0x1a30>  // b.any
    33f4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    33f8:	ldr	x11, [x8, #440]
    33fc:	ldr	x8, [x11, x10]
    3400:	cbz	x8, 3438 <PyInit__codecs_iso2022@@Base+0x1a24>
    3404:	add	x11, x11, x9, lsl #4
    3408:	ldrb	w10, [x0, #1]
    340c:	ldrb	w9, [x11, #8]
    3410:	cmp	w10, w9
    3414:	b.cc	3438 <PyInit__codecs_iso2022@@Base+0x1a24>  // b.lo, b.ul, b.last
    3418:	ldrb	w11, [x11, #9]
    341c:	cmp	w10, w11
    3420:	b.hi	3438 <PyInit__codecs_iso2022@@Base+0x1a24>  // b.pmore
    3424:	sub	x9, x10, x9
    3428:	ldrh	w8, [x8, x9, lsl #1]
    342c:	mov	w9, #0xfffe                	// #65534
    3430:	cmp	w8, w9
    3434:	b.ne	3440 <PyInit__codecs_iso2022@@Base+0x1a2c>  // b.any
    3438:	mov	w0, #0xffff                	// #65535
    343c:	ret
    3440:	orr	w8, w8, #0x20000
    3444:	mov	w0, w8
    3448:	ret
    344c:	stp	x29, x30, [sp, #-16]!
    3450:	mov	x29, sp
    3454:	mov	x2, xzr
    3458:	bl	3480 <PyInit__codecs_iso2022@@Base+0x1a6c>
    345c:	mov	w8, #0xfffd                	// #65533
    3460:	cmp	w8, w0, uxth
    3464:	b.cc	3478 <PyInit__codecs_iso2022@@Base+0x1a64>  // b.lo, b.ul, b.last
    3468:	sxth	w8, w0
    346c:	and	w9, w0, #0x7fff
    3470:	cmp	w8, #0x0
    3474:	csinv	w0, w9, wzr, lt  // lt = tstop
    3478:	ldp	x29, x30, [sp], #16
    347c:	ret
    3480:	ldr	x8, [x1]
    3484:	cmp	x8, #0x2
    3488:	b.eq	34b0 <PyInit__codecs_iso2022@@Base+0x1a9c>  // b.none
    348c:	cmp	x8, #0x1
    3490:	b.eq	35dc <PyInit__codecs_iso2022@@Base+0x1bc8>  // b.none
    3494:	cmn	x8, #0x1
    3498:	b.ne	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.any
    349c:	ldr	w9, [x0]
    34a0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    34a4:	ldr	x8, [x8, #448]
    34a8:	lsl	w9, w9, #16
    34ac:	b	354c <PyInit__codecs_iso2022@@Base+0x1b38>
    34b0:	ldr	w13, [x0]
    34b4:	ldrh	w10, [x0, #4]
    34b8:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    34bc:	ldr	x8, [x8, #448]
    34c0:	mov	w11, wzr
    34c4:	mov	w12, #0x17                  	// #23
    34c8:	lsl	w9, w13, #16
    34cc:	bfi	w10, w13, #16, #16
    34d0:	mov	w13, #0x2e                  	// #46
    34d4:	b	34fc <PyInit__codecs_iso2022@@Base+0x1ae8>
    34d8:	cmp	w13, w12
    34dc:	mov	w14, w12
    34e0:	mov	w12, w13
    34e4:	b.eq	3524 <PyInit__codecs_iso2022@@Base+0x1b10>  // b.none
    34e8:	add	w12, w14, w11
    34ec:	cmp	w11, w14
    34f0:	asr	w12, w12, #1
    34f4:	mov	w13, w14
    34f8:	b.eq	3524 <PyInit__codecs_iso2022@@Base+0x1b10>  // b.none
    34fc:	sbfiz	x14, x12, #3, #32
    3500:	ldr	w14, [x8, x14]
    3504:	cmp	w10, w14
    3508:	b.cc	34d8 <PyInit__codecs_iso2022@@Base+0x1ac4>  // b.lo, b.ul, b.last
    350c:	cmp	w11, w12
    3510:	b.eq	3524 <PyInit__codecs_iso2022@@Base+0x1b10>  // b.none
    3514:	cmp	w10, w14
    3518:	mov	w11, w12
    351c:	mov	w14, w13
    3520:	b.hi	34e8 <PyInit__codecs_iso2022@@Base+0x1ad4>  // b.pmore
    3524:	sbfiz	x11, x12, #3, #32
    3528:	ldr	w11, [x8, x11]
    352c:	cmp	w10, w11
    3530:	b.ne	354c <PyInit__codecs_iso2022@@Base+0x1b38>  // b.any
    3534:	sxtw	x10, w12
    3538:	add	x10, x8, x10, lsl #3
    353c:	ldrh	w0, [x10, #4]
    3540:	mov	w10, #0xfffd                	// #65533
    3544:	cmp	w0, w10
    3548:	b.ne	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.any
    354c:	mov	w12, #0x1                   	// #1
    3550:	mov	w11, wzr
    3554:	mov	w10, #0x17                  	// #23
    3558:	str	x12, [x1]
    355c:	mov	w12, #0x2e                  	// #46
    3560:	b	3588 <PyInit__codecs_iso2022@@Base+0x1b74>
    3564:	cmp	w12, w10
    3568:	mov	w13, w10
    356c:	mov	w10, w12
    3570:	b.eq	35b0 <PyInit__codecs_iso2022@@Base+0x1b9c>  // b.none
    3574:	add	w10, w13, w11
    3578:	cmp	w11, w13
    357c:	asr	w10, w10, #1
    3580:	mov	w12, w13
    3584:	b.eq	35b0 <PyInit__codecs_iso2022@@Base+0x1b9c>  // b.none
    3588:	sbfiz	x13, x10, #3, #32
    358c:	ldr	w13, [x8, x13]
    3590:	cmp	w9, w13
    3594:	b.cc	3564 <PyInit__codecs_iso2022@@Base+0x1b50>  // b.lo, b.ul, b.last
    3598:	cmp	w11, w10
    359c:	b.eq	35b0 <PyInit__codecs_iso2022@@Base+0x1b9c>  // b.none
    35a0:	cmp	w9, w13
    35a4:	mov	w11, w10
    35a8:	mov	w13, w12
    35ac:	b.hi	3574 <PyInit__codecs_iso2022@@Base+0x1b60>  // b.pmore
    35b0:	sbfiz	x11, x10, #3, #32
    35b4:	ldr	w11, [x8, x11]
    35b8:	cmp	w9, w11
    35bc:	b.ne	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.any
    35c0:	sxtw	x9, w10
    35c4:	add	x8, x8, x9, lsl #3
    35c8:	ldrh	w0, [x8, #4]
    35cc:	mov	w8, #0xfffd                	// #65533
    35d0:	cmp	w0, w8
    35d4:	b.eq	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.none
    35d8:	ret
    35dc:	ldr	w8, [x0]
    35e0:	cmp	w8, #0x10, lsl #12
    35e4:	b.cc	3658 <PyInit__codecs_iso2022@@Base+0x1c44>  // b.lo, b.ul, b.last
    35e8:	and	w9, w8, #0xffff0000
    35ec:	cmp	w9, #0x20, lsl #12
    35f0:	b.ne	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.any
    35f4:	cmp	x2, #0x7d0
    35f8:	b.ne	360c <PyInit__codecs_iso2022@@Base+0x1bf8>  // b.any
    35fc:	mov	w9, #0xb9f                 	// #2975
    3600:	movk	w9, #0x2, lsl #16
    3604:	cmp	w8, w9
    3608:	b.eq	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.none
    360c:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3610:	ldr	x10, [x9, #424]
    3614:	ubfx	x11, x8, #8, #8
    3618:	lsl	x9, x11, #4
    361c:	ldr	x9, [x10, x9]
    3620:	cbz	x9, 36ec <PyInit__codecs_iso2022@@Base+0x1cd8>
    3624:	add	x10, x10, x11, lsl #4
    3628:	ldrb	w12, [x10, #8]
    362c:	and	w11, w8, #0xff
    3630:	subs	w8, w11, w12
    3634:	b.cc	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.lo, b.ul, b.last
    3638:	ldrb	w10, [x10, #9]
    363c:	cmp	w11, w10
    3640:	b.hi	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.pmore
    3644:	ldrh	w0, [x9, w8, uxtw #1]
    3648:	mov	w8, #0xffff                	// #65535
    364c:	cmp	w0, w8
    3650:	b.ne	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.any
    3654:	b	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>
    3658:	cmp	x2, #0x7d0
    365c:	b.eq	36f4 <PyInit__codecs_iso2022@@Base+0x1ce0>  // b.none
    3660:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3664:	ldr	x12, [x9, #400]
    3668:	lsr	x9, x8, #8
    366c:	lsl	x10, x9, #4
    3670:	ldr	x11, [x12, x10]
    3674:	cbz	x11, 36b4 <PyInit__codecs_iso2022@@Base+0x1ca0>
    3678:	add	x13, x12, x9, lsl #4
    367c:	ldrb	w12, [x13, #8]
    3680:	and	w14, w8, #0xff
    3684:	subs	w12, w14, w12
    3688:	b.cc	36b4 <PyInit__codecs_iso2022@@Base+0x1ca0>  // b.lo, b.ul, b.last
    368c:	ldrb	w13, [x13, #9]
    3690:	cmp	w14, w13
    3694:	b.hi	36b4 <PyInit__codecs_iso2022@@Base+0x1ca0>  // b.pmore
    3698:	ldrh	w0, [x11, w12, uxtw #1]
    369c:	mov	w11, #0xfffe                	// #65534
    36a0:	cmp	w0, w11
    36a4:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    36a8:	mov	w11, #0xffff                	// #65535
    36ac:	cmp	w0, w11
    36b0:	b.ne	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.any
    36b4:	adrp	x11, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    36b8:	ldr	x11, [x11, #360]
    36bc:	ldr	x10, [x11, x10]
    36c0:	cbz	x10, 36ec <PyInit__codecs_iso2022@@Base+0x1cd8>
    36c4:	add	x9, x11, x9, lsl #4
    36c8:	ldrb	w12, [x9, #8]
    36cc:	and	w11, w8, #0xff
    36d0:	subs	w8, w11, w12
    36d4:	b.cc	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.lo, b.ul, b.last
    36d8:	ldrb	w9, [x9, #9]
    36dc:	cmp	w11, w9
    36e0:	b.hi	36ec <PyInit__codecs_iso2022@@Base+0x1cd8>  // b.pmore
    36e4:	ldrsh	w0, [x10, w8, uxtw #1]
    36e8:	tbz	w0, #31, 35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>
    36ec:	mov	w0, #0xffff                	// #65535
    36f0:	ret
    36f4:	mov	w9, #0x5c5a                	// #23642
    36f8:	cmp	w8, w9
    36fc:	mov	w0, #0xffff                	// #65535
    3700:	b.le	3730 <PyInit__codecs_iso2022@@Base+0x1d1c>
    3704:	mov	w9, #0x7e6a                	// #32362
    3708:	cmp	w8, w9
    370c:	b.gt	375c <PyInit__codecs_iso2022@@Base+0x1d48>
    3710:	mov	w9, #0x5c5b                	// #23643
    3714:	cmp	w8, w9
    3718:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    371c:	mov	w9, #0x5e77                	// #24183
    3720:	cmp	w8, w9
    3724:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    3728:	mov	w9, #0x7626                	// #30246
    372c:	b	3798 <PyInit__codecs_iso2022@@Base+0x1d84>
    3730:	mov	w9, #0x541d                	// #21533
    3734:	cmp	w8, w9
    3738:	b.le	3788 <PyInit__codecs_iso2022@@Base+0x1d74>
    373c:	mov	w9, #0x541e                	// #21534
    3740:	cmp	w8, w9
    3744:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    3748:	mov	w9, #0x5653                	// #22099
    374c:	cmp	w8, w9
    3750:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    3754:	mov	w9, #0x59f8                	// #23032
    3758:	b	3798 <PyInit__codecs_iso2022@@Base+0x1d84>
    375c:	mov	w9, #0x7e6b                	// #32363
    3760:	cmp	w8, w9
    3764:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    3768:	mov	w9, #0x9b1c                	// #39708
    376c:	cmp	w8, w9
    3770:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    3774:	mov	w9, #0x9b1d                	// #39709
    3778:	cmp	w8, w9
    377c:	b.ne	3660 <PyInit__codecs_iso2022@@Base+0x1c4c>  // b.any
    3780:	mov	w0, #0xfd3b                	// #64827
    3784:	ret
    3788:	mov	w9, #0x4ff1                	// #20465
    378c:	cmp	w8, w9
    3790:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    3794:	mov	w9, #0x525d                	// #21085
    3798:	cmp	w8, w9
    379c:	b.eq	35d8 <PyInit__codecs_iso2022@@Base+0x1bc4>  // b.none
    37a0:	b	3660 <PyInit__codecs_iso2022@@Base+0x1c4c>
    37a4:	ldrb	w9, [x0]
    37a8:	cmp	w9, #0x4e
    37ac:	b.gt	37d8 <PyInit__codecs_iso2022@@Base+0x1dc4>
    37b0:	cmp	w9, #0x21
    37b4:	b.eq	3804 <PyInit__codecs_iso2022@@Base+0x1df0>  // b.none
    37b8:	cmp	w9, #0x2e
    37bc:	b.eq	3818 <PyInit__codecs_iso2022@@Base+0x1e04>  // b.none
    37c0:	cmp	w9, #0x2f
    37c4:	b.ne	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.any
    37c8:	ldrb	w8, [x0, #1]
    37cc:	cmp	w8, #0x7e
    37d0:	b.ne	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.any
    37d4:	b	3968 <PyInit__codecs_iso2022@@Base+0x1f54>
    37d8:	cmp	w9, #0x4f
    37dc:	b.eq	3828 <PyInit__codecs_iso2022@@Base+0x1e14>  // b.none
    37e0:	cmp	w9, #0x74
    37e4:	b.eq	3848 <PyInit__codecs_iso2022@@Base+0x1e34>  // b.none
    37e8:	cmp	w9, #0x7e
    37ec:	b.ne	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.any
    37f0:	ldrb	w8, [x0, #1]
    37f4:	sub	w8, w8, #0x7a
    37f8:	cmp	w8, #0x5
    37fc:	b.cs	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.hs, b.nlast
    3800:	b	3968 <PyInit__codecs_iso2022@@Base+0x1f54>
    3804:	ldrb	w8, [x0, #1]
    3808:	cmp	w8, #0x40
    380c:	b.ne	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.any
    3810:	mov	w0, #0xff3c                	// #65340
    3814:	ret
    3818:	ldrb	w8, [x0, #1]
    381c:	cmp	w8, #0x21
    3820:	b.ne	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.any
    3824:	b	3968 <PyInit__codecs_iso2022@@Base+0x1f54>
    3828:	ldrb	w10, [x0, #1]
    382c:	mov	w8, #0xffff                	// #65535
    3830:	cmp	w10, #0x54
    3834:	b.eq	3840 <PyInit__codecs_iso2022@@Base+0x1e2c>  // b.none
    3838:	cmp	w10, #0x7e
    383c:	b.ne	3854 <PyInit__codecs_iso2022@@Base+0x1e40>  // b.any
    3840:	mov	w0, w8
    3844:	ret
    3848:	ldrb	w8, [x0, #1]
    384c:	cmp	w8, #0x27
    3850:	b.eq	3968 <PyInit__codecs_iso2022@@Base+0x1f54>  // b.none
    3854:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3858:	ldr	x12, [x8, #368]
    385c:	lsl	x10, x9, #4
    3860:	ldr	x8, [x12, x10]
    3864:	cbz	x8, 389c <PyInit__codecs_iso2022@@Base+0x1e88>
    3868:	add	x13, x12, x9, lsl #4
    386c:	ldrb	w11, [x0, #1]
    3870:	ldrb	w12, [x13, #8]
    3874:	cmp	w11, w12
    3878:	b.cc	389c <PyInit__codecs_iso2022@@Base+0x1e88>  // b.lo, b.ul, b.last
    387c:	ldrb	w13, [x13, #9]
    3880:	cmp	w11, w13
    3884:	b.hi	389c <PyInit__codecs_iso2022@@Base+0x1e88>  // b.pmore
    3888:	sub	x11, x11, x12
    388c:	ldrh	w8, [x8, x11, lsl #1]
    3890:	mov	w11, #0xfffe                	// #65534
    3894:	cmp	w8, w11
    3898:	b.ne	3840 <PyInit__codecs_iso2022@@Base+0x1e2c>  // b.any
    389c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    38a0:	ldr	x12, [x8, #408]
    38a4:	ldr	x8, [x12, x10]
    38a8:	cbz	x8, 38e0 <PyInit__codecs_iso2022@@Base+0x1ecc>
    38ac:	add	x13, x12, x9, lsl #4
    38b0:	ldrb	w11, [x0, #1]
    38b4:	ldrb	w12, [x13, #8]
    38b8:	cmp	w11, w12
    38bc:	b.cc	38e0 <PyInit__codecs_iso2022@@Base+0x1ecc>  // b.lo, b.ul, b.last
    38c0:	ldrb	w13, [x13, #9]
    38c4:	cmp	w11, w13
    38c8:	b.hi	38e0 <PyInit__codecs_iso2022@@Base+0x1ecc>  // b.pmore
    38cc:	sub	x11, x11, x12
    38d0:	ldrh	w8, [x8, x11, lsl #1]
    38d4:	mov	w11, #0xfffe                	// #65534
    38d8:	cmp	w8, w11
    38dc:	b.ne	3840 <PyInit__codecs_iso2022@@Base+0x1e2c>  // b.any
    38e0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    38e4:	ldr	x12, [x8, #432]
    38e8:	ldr	x8, [x12, x10]
    38ec:	cbz	x8, 3924 <PyInit__codecs_iso2022@@Base+0x1f10>
    38f0:	add	x13, x12, x9, lsl #4
    38f4:	ldrb	w11, [x0, #1]
    38f8:	ldrb	w12, [x13, #8]
    38fc:	cmp	w11, w12
    3900:	b.cc	3924 <PyInit__codecs_iso2022@@Base+0x1f10>  // b.lo, b.ul, b.last
    3904:	ldrb	w13, [x13, #9]
    3908:	cmp	w11, w13
    390c:	b.hi	3924 <PyInit__codecs_iso2022@@Base+0x1f10>  // b.pmore
    3910:	sub	x11, x11, x12
    3914:	ldrh	w8, [x8, x11, lsl #1]
    3918:	mov	w11, #0xfffe                	// #65534
    391c:	cmp	w8, w11
    3920:	b.ne	3974 <PyInit__codecs_iso2022@@Base+0x1f60>  // b.any
    3924:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3928:	ldr	x11, [x8, #456]
    392c:	ldr	x8, [x11, x10]
    3930:	cbz	x8, 3968 <PyInit__codecs_iso2022@@Base+0x1f54>
    3934:	add	x11, x11, x9, lsl #4
    3938:	ldrb	w10, [x0, #1]
    393c:	ldrb	w9, [x11, #8]
    3940:	cmp	w10, w9
    3944:	b.cc	3968 <PyInit__codecs_iso2022@@Base+0x1f54>  // b.lo, b.ul, b.last
    3948:	ldrb	w11, [x11, #9]
    394c:	cmp	w10, w11
    3950:	b.hi	3968 <PyInit__codecs_iso2022@@Base+0x1f54>  // b.pmore
    3954:	sub	x9, x10, x9
    3958:	ldr	w8, [x8, x9, lsl #2]
    395c:	mov	w9, #0xfffe                	// #65534
    3960:	cmp	w8, w9
    3964:	b.ne	3840 <PyInit__codecs_iso2022@@Base+0x1e2c>  // b.any
    3968:	mov	w8, #0xffff                	// #65535
    396c:	mov	w0, w8
    3970:	ret
    3974:	orr	w8, w8, #0x20000
    3978:	mov	w0, w8
    397c:	ret
    3980:	stp	x29, x30, [sp, #-32]!
    3984:	stp	x20, x19, [sp, #16]
    3988:	mov	x29, sp
    398c:	ldr	x20, [x1]
    3990:	mov	w2, #0x7d0                 	// #2000
    3994:	mov	x19, x1
    3998:	bl	3480 <PyInit__codecs_iso2022@@Base+0x1a6c>
    399c:	cmp	x20, #0x2
    39a0:	b.eq	39c8 <PyInit__codecs_iso2022@@Base+0x1fb4>  // b.none
    39a4:	cmp	x20, #0x1
    39a8:	b.ne	39e0 <PyInit__codecs_iso2022@@Base+0x1fcc>  // b.any
    39ac:	mov	w8, #0xfffe                	// #65534
    39b0:	cmp	w8, w0, uxth
    39b4:	mov	w8, #0xfffffffe            	// #-2
    39b8:	cinc	w0, w8, ne  // ne = any
    39bc:	ldp	x20, x19, [sp, #16]
    39c0:	ldp	x29, x30, [sp], #32
    39c4:	ret
    39c8:	ldr	x8, [x19]
    39cc:	cmp	x8, #0x2
    39d0:	csinv	w0, w0, wzr, eq  // eq = none
    39d4:	ldp	x20, x19, [sp, #16]
    39d8:	ldp	x29, x30, [sp], #32
    39dc:	ret
    39e0:	mov	w0, #0xffff                	// #65535
    39e4:	ldp	x20, x19, [sp, #16]
    39e8:	ldp	x29, x30, [sp], #32
    39ec:	ret
    39f0:	stp	x29, x30, [sp, #-16]!
    39f4:	mov	x29, sp
    39f8:	mov	w2, #0x7d0                 	// #2000
    39fc:	bl	3480 <PyInit__codecs_iso2022@@Base+0x1a6c>
    3a00:	sxth	w9, w0
    3a04:	and	w8, w0, #0xffff
    3a08:	cmn	w9, #0x1
    3a0c:	mov	w9, #0xfffd                	// #65533
    3a10:	ccmp	w8, w9, #0x2, le
    3a14:	csinv	w0, w0, wzr, hi  // hi = pmore
    3a18:	ldp	x29, x30, [sp], #16
    3a1c:	ret
    3a20:	ldrb	w9, [x0]
    3a24:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3a28:	ldr	x12, [x8, #416]
    3a2c:	lsl	x10, x9, #4
    3a30:	ldr	x8, [x12, x10]
    3a34:	cbz	x8, 3a6c <PyInit__codecs_iso2022@@Base+0x2058>
    3a38:	add	x13, x12, x9, lsl #4
    3a3c:	ldrb	w11, [x0, #1]
    3a40:	ldrb	w12, [x13, #8]
    3a44:	cmp	w11, w12
    3a48:	b.cc	3a6c <PyInit__codecs_iso2022@@Base+0x2058>  // b.lo, b.ul, b.last
    3a4c:	ldrb	w13, [x13, #9]
    3a50:	cmp	w11, w13
    3a54:	b.hi	3a6c <PyInit__codecs_iso2022@@Base+0x2058>  // b.pmore
    3a58:	sub	x11, x11, x12
    3a5c:	ldrh	w8, [x8, x11, lsl #1]
    3a60:	mov	w11, #0xfffe                	// #65534
    3a64:	cmp	w8, w11
    3a68:	b.ne	3abc <PyInit__codecs_iso2022@@Base+0x20a8>  // b.any
    3a6c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3a70:	ldr	x11, [x8, #440]
    3a74:	ldr	x8, [x11, x10]
    3a78:	cbz	x8, 3ab0 <PyInit__codecs_iso2022@@Base+0x209c>
    3a7c:	add	x11, x11, x9, lsl #4
    3a80:	ldrb	w10, [x0, #1]
    3a84:	ldrb	w9, [x11, #8]
    3a88:	cmp	w10, w9
    3a8c:	b.cc	3ab0 <PyInit__codecs_iso2022@@Base+0x209c>  // b.lo, b.ul, b.last
    3a90:	ldrb	w11, [x11, #9]
    3a94:	cmp	w10, w11
    3a98:	b.hi	3ab0 <PyInit__codecs_iso2022@@Base+0x209c>  // b.pmore
    3a9c:	sub	x9, x10, x9
    3aa0:	ldrh	w8, [x8, x9, lsl #1]
    3aa4:	mov	w9, #0xfffe                	// #65534
    3aa8:	cmp	w8, w9
    3aac:	b.ne	3ab8 <PyInit__codecs_iso2022@@Base+0x20a4>  // b.any
    3ab0:	mov	w0, #0xffff                	// #65535
    3ab4:	ret
    3ab8:	orr	w8, w8, #0x20000
    3abc:	mov	w0, w8
    3ac0:	ret
    3ac4:	stp	x29, x30, [sp, #-16]!
    3ac8:	mov	x29, sp
    3acc:	mov	w2, #0x7d0                 	// #2000
    3ad0:	bl	3480 <PyInit__codecs_iso2022@@Base+0x1a6c>
    3ad4:	mov	w8, #0xfffd                	// #65533
    3ad8:	cmp	w8, w0, uxth
    3adc:	b.cc	3af0 <PyInit__codecs_iso2022@@Base+0x20dc>  // b.lo, b.ul, b.last
    3ae0:	sxth	w8, w0
    3ae4:	and	w9, w0, #0x7fff
    3ae8:	cmp	w8, #0x0
    3aec:	csinv	w0, w9, wzr, lt  // lt = tstop
    3af0:	ldp	x29, x30, [sp], #16
    3af4:	ret
    3af8:	ldrb	w8, [x0]
    3afc:	mov	w9, #0xfec0                	// #65216
    3b00:	eor	w10, w8, #0x80
    3b04:	sub	w8, w8, #0x21
    3b08:	add	w9, w10, w9
    3b0c:	cmp	w8, #0x3f
    3b10:	mov	w8, #0xffff                	// #65535
    3b14:	csel	w0, w9, w8, cc  // cc = lo, ul, last
    3b18:	ret
    3b1c:	ldr	w8, [x0]
    3b20:	mov	w9, #0xffff009f            	// #-65377
    3b24:	add	w9, w8, w9
    3b28:	add	w8, w8, #0xc0
    3b2c:	cmp	w9, #0x3f
    3b30:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
    3b34:	ret

Disassembly of section .fini:

0000000000003b38 <.fini>:
    3b38:	stp	x29, x30, [sp, #-16]!
    3b3c:	mov	x29, sp
    3b40:	ldp	x29, x30, [sp], #16
    3b44:	ret
